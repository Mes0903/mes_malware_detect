
c4617cd94408d13e68d3dd75920911a56a1b1bae0fb19c035b156ec4a3cdefd5.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x24c65]        # 0x425c80
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x24c66]        # 0x425c90
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x24c69]        # 0x425ca0
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x24c2c]        # 0x425c70
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x24a8f]        # 0x425ae0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x24c01]        # 0x425c60
  40105f:	mov    DWORD PTR [rip+0x27fa3],edx        # 0x429008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x419968
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x412a80
  401081:	mov    rdx,QWORD PTR [rip+0x24af8]        # 0x425b80
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x24ade]        # 0x425b70
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x24b54]        # 0x425bf0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x24a7b]        # 0x425b20
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x412660
  4010af:	mov    rax,QWORD PTR [rip+0x249da]        # 0x425a90
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x419968
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x11839]        # 0x412960
  401127:	call   0x412950
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x24ab5]        # 0x425c20
  40116b:	lea    r8,[rip+0x27ea6]        # 0x429018
  401172:	lea    rdx,[rip+0x27ea7]        # 0x429020
  401179:	lea    rcx,[rip+0x27ea8]        # 0x429028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x27e78],eax        # 0x429000
  401188:	lea    rax,[rip+0x27e71]        # 0x429000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x24a45]        # 0x425be0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x419980
  4011a3:	mov    DWORD PTR [rip+0x27e67],eax        # 0x429010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x24a9a]        # 0x425c60
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x2495b]        # 0x425b50
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x2a87a]        # 0x42ba7c
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x24937]        # 0x425b60
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x27dba],0x1        # 0x429004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x2486c]        # 0x425ad0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x412c70
  40127d:	lea    rcx,[rip+0x11f8c]        # 0x413210
  401284:	call   QWORD PTR [rip+0x2a7ea]        # 0x42ba74
  40128a:	mov    rdx,QWORD PTR [rip+0x248af]        # 0x425b40
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x413120
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4199b0
  4012a5:	call   0x412a60
  4012aa:	mov    rax,QWORD PTR [rip+0x2482f]        # 0x425ae0
  4012b1:	mov    QWORD PTR [rip+0x29540],rax        # 0x42a7f8
  4012b8:	mov    rax,QWORD PTR [rip+0x24851]        # 0x425b10
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x294d9],rax        # 0x42a7f0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1bcca],eax        # 0x41d000
  401336:	mov    r12d,DWORD PTR [rip+0x27ceb]        # 0x429028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x419888
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x27cc2]        # 0x429020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x419840
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x419888
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x419880
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x27c6a],rbp        # 0x429020
  4013b6:	call   0x412630
  4013bb:	mov    rax,QWORD PTR [rip+0x2472e]        # 0x425af0
  4013c2:	mov    rdx,QWORD PTR [rip+0x27c4f]        # 0x429018
  4013c9:	mov    ecx,DWORD PTR [rip+0x27c59]        # 0x429028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x27c3c]        # 0x429018
  4013dc:	mov    rdx,QWORD PTR [rip+0x27c3d]        # 0x429020
  4013e3:	call   0x419e60
  4013e8:	mov    ecx,DWORD PTR [rip+0x27c1a]        # 0x429008
  4013ee:	mov    DWORD PTR [rip+0x27c18],eax        # 0x42900c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x27c02]        # 0x429004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x419950
  40140b:	mov    eax,DWORD PTR [rip+0x27bfb]        # 0x42900c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x24729]        # 0x425b60
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x419958
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2474d]        # 0x425bb0
  401463:	mov    rcx,QWORD PTR [rip+0x24736]        # 0x425ba0
  40146a:	call   0x419940
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x2a56b]        # 0x42ba04
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x24729]        # 0x425bd0
  4014a7:	mov    rcx,QWORD PTR [rip+0x24712]        # 0x425bc0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x419940
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x419900
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x24785]        # 0x425c60
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x412670
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x24755]        # 0x425c60
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x412670
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	mov    rbx,r8
  401539:	mov    rsi,r9
  40153c:	call   QWORD PTR [rip+0x2a5a2]        # 0x42bae4
  401542:	lea    rcx,[rax+0x30]
  401546:	mov    r8,rsi
  401549:	mov    rdx,rbx
  40154c:	add    rsp,0x28
  401550:	pop    rbx
  401551:	pop    rsi
  401552:	jmp    0x413ed0
  401557:	nop    WORD PTR [rax+rax*1+0x0]
  401560:	sub    rsp,0x38
  401564:	mov    QWORD PTR [rsp+0x48],rdx
  401569:	lea    rdx,[rsp+0x48]
  40156e:	mov    QWORD PTR [rsp+0x50],r8
  401573:	mov    QWORD PTR [rsp+0x58],r9
  401578:	mov    QWORD PTR [rsp+0x28],rdx
  40157d:	call   0x413f00
  401582:	add    rsp,0x38
  401586:	ret    
  401587:	nop    WORD PTR [rax+rax*1+0x0]
  401590:	sub    rsp,0x38
  401594:	mov    QWORD PTR [rsp+0x50],r8
  401599:	lea    r8,[rsp+0x50]
  40159e:	mov    QWORD PTR [rsp+0x58],r9
  4015a3:	mov    QWORD PTR [rsp+0x28],r8
  4015a8:	call   0x413ed0
  4015ad:	add    rsp,0x38
  4015b1:	ret    
  4015b2:	nop    DWORD PTR [rax+0x0]
  4015b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015c0:	mov    rcx,QWORD PTR [rcx]
  4015c3:	mov    r8,QWORD PTR [rdx]
  4015c6:	mov    eax,DWORD PTR [rcx+0x4]
  4015c9:	mov    edx,DWORD PTR [r8+0x4]
  4015cd:	cmp    eax,edx
  4015cf:	je     0x4015d4
  4015d1:	sub    eax,edx
  4015d3:	ret    
  4015d4:	mov    rdx,QWORD PTR [r8+0x8]
  4015d8:	mov    rcx,QWORD PTR [rcx+0x8]
  4015dc:	jmp    0x419858
  4015e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4015e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4015f0:	push   r12
  4015f2:	push   rbp
  4015f3:	push   rdi
  4015f4:	push   rsi
  4015f5:	push   rbx
  4015f6:	sub    rsp,0x440
  4015fd:	mov    ebx,edx
  4015ff:	mov    rsi,rcx
  401602:	mov    rdi,r8
  401605:	mov    rbp,r9
  401608:	lea    r12,[rsp+0x40]
  40160d:	call   0x412300
  401612:	lea    rax,[rip+0x1bab7]        # 0x41d0d0
  401619:	mov    DWORD PTR [rsp+0x28],0x400
  401621:	mov    QWORD PTR [rsp+0x20],r12
  401626:	mov    r9,rbp
  401629:	mov    r8,rdi
  40162c:	mov    edx,ebx
  40162e:	mov    QWORD PTR [rsp+0x30],rax
  401633:	mov    rcx,rsi
  401636:	call   0x4122f8
  40163b:	cmp    ebx,DWORD PTR [rip+0x1ba93]        # 0x41d0d4
  401641:	jg     0x40165f
  401643:	mov    rdx,QWORD PTR [rip+0x27a06]        # 0x429050
  40164a:	mov    rcx,r12
  40164d:	call   0x4198d8
  401652:	mov    rcx,QWORD PTR [rip+0x279f7]        # 0x429050
  401659:	call   0x4198f8
  40165e:	nop
  40165f:	add    rsp,0x440
  401666:	pop    rbx
  401667:	pop    rsi
  401668:	pop    rdi
  401669:	pop    rbp
  40166a:	pop    r12
  40166c:	ret    
  40166d:	nop    DWORD PTR [rax]
  401670:	sub    rsp,0x38
  401674:	mov    QWORD PTR [rsp+0x58],r9
  401679:	lea    r9,[rsp+0x58]
  40167e:	mov    QWORD PTR [rsp+0x28],r9
  401683:	call   0x413f40
  401688:	add    rsp,0x38
  40168c:	ret    
  40168d:	nop    DWORD PTR [rax]
  401690:	push   r13
  401692:	push   r12
  401694:	push   rbp
  401695:	push   rdi
  401696:	push   rsi
  401697:	push   rbx
  401698:	sub    rsp,0x38
  40169c:	test   rcx,rcx
  40169f:	mov    QWORD PTR [rsp+0x28],0x0
  4016a8:	je     0x4017be
  4016ae:	mov    rax,QWORD PTR [rcx+0x28]
  4016b2:	test   rax,rax
  4016b5:	je     0x4017be
  4016bb:	mov    r8d,DWORD PTR [rax+0x38]
  4016bf:	mov    eax,r8d
  4016c2:	and    eax,0xfffffffd
  4016c5:	cmp    eax,0x29
  4016c8:	je     0x4016d9
  4016ca:	cmp    r8d,0x2d
  4016ce:	mov    eax,0xffffffea
  4016d3:	jne    0x401780
  4016d9:	mov    rsi,rdx
  4016dc:	mov    rdx,QWORD PTR [rcx]
  4016df:	mov    rbx,rcx
  4016e2:	lea    rcx,[rip+0x1d91f]        # 0x41f008
  4016e9:	call   0x401560
  4016ee:	cmp    QWORD PTR [rbx+0x90],0x0
  4016f6:	je     0x401790
  4016fc:	lea    r13,[rsp+0x28]
  401701:	xor    edx,edx
  401703:	mov    r8,rsi
  401706:	mov    rcx,rbx
  401709:	mov    r9,r13
  40170c:	call   0x411f58
  401711:	test   eax,eax
  401713:	mov    r12d,eax
  401716:	js     0x4017b0
  40171c:	mov    rdx,QWORD PTR [rsp+0x28]
  401721:	xor    esi,esi
  401723:	xor    ebx,ebx
  401725:	lea    rbp,[rip+0x1d8d4]        # 0x41f000
  40172c:	lea    rdi,[rip+0x1d8cf]        # 0x41f002
  401733:	mov    eax,DWORD PTR [rdx+0x8]
  401736:	test   eax,eax
  401738:	jle    0x401775
  40173a:	nop    WORD PTR [rax+rax*1+0x0]
  401740:	mov    rax,QWORD PTR [rdx]
  401743:	cmp    DWORD PTR [rdx+0xc],ebx
  401746:	lea    rcx,[rip+0x1d918]        # 0x41f065
  40174d:	mov    rdx,rdi
  401750:	mov    r8,QWORD PTR [rax+rsi*1]
  401754:	cmove  rdx,rbp
  401758:	add    ebx,0x1
  40175b:	add    rsi,0x8
  40175f:	mov    r9,QWORD PTR [r8+0x8]
  401763:	mov    r8,QWORD PTR [r8]
  401766:	call   0x401560
  40176b:	mov    rdx,QWORD PTR [rsp+0x28]
  401770:	cmp    DWORD PTR [rdx+0x8],ebx
  401773:	jg     0x401740
  401775:	mov    rcx,r13
  401778:	call   0x411f60
  40177d:	mov    eax,r12d
  401780:	add    rsp,0x38
  401784:	pop    rbx
  401785:	pop    rsi
  401786:	pop    rdi
  401787:	pop    rbp
  401788:	pop    r12
  40178a:	pop    r13
  40178c:	ret    
  40178d:	nop    DWORD PTR [rax]
  401790:	lea    rcx,[rip+0x1d891]        # 0x41f028
  401797:	mov    r12d,0xffffffd8
  40179d:	lea    r13,[rsp+0x28]
  4017a2:	call   0x401560
  4017a7:	jmp    0x401775
  4017a9:	nop    DWORD PTR [rax+0x0]
  4017b0:	lea    rcx,[rip+0x1d898]        # 0x41f04f
  4017b7:	call   0x401560
  4017bc:	jmp    0x401775
  4017be:	mov    eax,0xffffffea
  4017c3:	jmp    0x401780
  4017c5:	nop
  4017c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017d0:	push   r13
  4017d2:	push   r12
  4017d4:	push   rbp
  4017d5:	push   rdi
  4017d6:	push   rsi
  4017d7:	push   rbx
  4017d8:	sub    rsp,0x38
  4017dc:	test   rcx,rcx
  4017df:	mov    QWORD PTR [rsp+0x28],0x0
  4017e8:	je     0x4018fe
  4017ee:	mov    rax,QWORD PTR [rcx+0x38]
  4017f2:	test   rax,rax
  4017f5:	je     0x4018fe
  4017fb:	mov    r8d,DWORD PTR [rax+0x38]
  4017ff:	mov    eax,r8d
  401802:	and    eax,0xfffffffd
  401805:	cmp    eax,0x28
  401808:	je     0x401819
  40180a:	cmp    r8d,0x2c
  40180e:	mov    eax,0xffffffea
  401813:	jne    0x4018c0
  401819:	mov    rsi,rdx
  40181c:	mov    rdx,QWORD PTR [rcx]
  40181f:	mov    rbx,rcx
  401822:	lea    rcx,[rip+0x1d848]        # 0x41f071
  401829:	call   0x401560
  40182e:	cmp    QWORD PTR [rbx+0x90],0x0
  401836:	je     0x4018d0
  40183c:	lea    r13,[rsp+0x28]
  401841:	xor    edx,edx
  401843:	mov    r8,rsi
  401846:	mov    rcx,rbx
  401849:	mov    r9,r13
  40184c:	call   0x411f50
  401851:	test   eax,eax
  401853:	mov    r12d,eax
  401856:	js     0x4018f0
  40185c:	mov    rdx,QWORD PTR [rsp+0x28]
  401861:	xor    esi,esi
  401863:	xor    ebx,ebx
  401865:	lea    rbp,[rip+0x1d794]        # 0x41f000
  40186c:	lea    rdi,[rip+0x1d78f]        # 0x41f002
  401873:	mov    eax,DWORD PTR [rdx+0x8]
  401876:	test   eax,eax
  401878:	jle    0x4018b5
  40187a:	nop    WORD PTR [rax+rax*1+0x0]
  401880:	mov    rax,QWORD PTR [rdx]
  401883:	cmp    DWORD PTR [rdx+0xc],ebx
  401886:	lea    rcx,[rip+0x1d7d8]        # 0x41f065
  40188d:	mov    rdx,rdi
  401890:	mov    r8,QWORD PTR [rax+rsi*1]
  401894:	cmove  rdx,rbp
  401898:	add    ebx,0x1
  40189b:	add    rsi,0x8
  40189f:	mov    r9,QWORD PTR [r8+0x8]
  4018a3:	mov    r8,QWORD PTR [r8]
  4018a6:	call   0x401560
  4018ab:	mov    rdx,QWORD PTR [rsp+0x28]
  4018b0:	cmp    DWORD PTR [rdx+0x8],ebx
  4018b3:	jg     0x401880
  4018b5:	mov    rcx,r13
  4018b8:	call   0x411f60
  4018bd:	mov    eax,r12d
  4018c0:	add    rsp,0x38
  4018c4:	pop    rbx
  4018c5:	pop    rsi
  4018c6:	pop    rdi
  4018c7:	pop    rbp
  4018c8:	pop    r12
  4018ca:	pop    r13
  4018cc:	ret    
  4018cd:	nop    DWORD PTR [rax]
  4018d0:	lea    rcx,[rip+0x1d7b9]        # 0x41f090
  4018d7:	mov    r12d,0xffffffd8
  4018dd:	lea    r13,[rsp+0x28]
  4018e2:	call   0x401560
  4018e7:	jmp    0x4018b5
  4018e9:	nop    DWORD PTR [rax+0x0]
  4018f0:	lea    rcx,[rip+0x1d7be]        # 0x41f0b5
  4018f7:	call   0x401560
  4018fc:	jmp    0x4018b5
  4018fe:	mov    eax,0xffffffea
  401903:	jmp    0x4018c0
  401905:	nop
  401906:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401910:	push   r15
  401912:	push   r14
  401914:	push   r13
  401916:	push   r12
  401918:	push   rbp
  401919:	push   rdi
  40191a:	push   rsi
  40191b:	push   rbx
  40191c:	sub    rsp,0x58
  401920:	mov    DWORD PTR [rip+0x2770e],0x0        # 0x429038
  40192a:	mov    QWORD PTR [rsp+0x40],rcx
  40192f:	mov    QWORD PTR [rsp+0x48],rdx
  401934:	call   QWORD PTR [rip+0x2a082]        # 0x42b9bc
  40193a:	lea    rdx,[rip+0x276f7]        # 0x429038
  401941:	mov    rcx,rax
  401944:	call   QWORD PTR [rip+0x2a33a]        # 0x42bc84
  40194a:	test   rax,rax
  40194d:	mov    r12,rax
  401950:	je     0x401a9a
  401956:	mov    eax,DWORD PTR [rip+0x276dc]        # 0x429038
  40195c:	test   eax,eax
  40195e:	jle    0x401a9a
  401964:	mov    rdi,QWORD PTR [rip+0x2a141]        # 0x42baac
  40196b:	mov    rbp,r12
  40196e:	xor    esi,esi
  401970:	xor    ebx,ebx
  401972:	mov    QWORD PTR [rsp+0x38],0x0
  40197b:	mov    QWORD PTR [rsp+0x30],0x0
  401984:	xor    edx,edx
  401986:	mov    DWORD PTR [rsp+0x28],0x0
  40198e:	mov    QWORD PTR [rsp+0x20],0x0
  401997:	mov    r9d,0xffffffff
  40199d:	mov    r8,QWORD PTR [rbp+0x0]
  4019a1:	mov    ecx,0xfde9
  4019a6:	add    ebx,0x1
  4019a9:	call   rdi
  4019ab:	add    esi,eax
  4019ad:	mov    eax,DWORD PTR [rip+0x27685]        # 0x429038
  4019b3:	add    rbp,0x8
  4019b7:	cmp    ebx,eax
  4019b9:	jl     0x401972
  4019bb:	add    eax,0x1
  4019be:	movsxd rdx,esi
  4019c1:	cdqe   
  4019c3:	lea    rcx,[rdx+rax*8]
  4019c7:	call   0x4122c0
  4019cc:	mov    rbp,rax
  4019cf:	mov    QWORD PTR [rip+0x2766a],rax        # 0x429040
  4019d6:	mov    eax,DWORD PTR [rip+0x2765c]        # 0x429038
  4019dc:	lea    r13d,[rax+0x1]
  4019e0:	movsxd r13,r13d
  4019e3:	shl    r13,0x3
  4019e7:	test   rbp,rbp
  4019ea:	je     0x401ab0
  4019f0:	test   eax,eax
  4019f2:	jle    0x401aab
  4019f8:	mov    rdx,rbp
  4019fb:	xor    r15d,r15d
  4019fe:	xor    ebx,ebx
  401a00:	xor    r14d,r14d
  401a03:	jmp    0x401a0c
  401a05:	mov    rdx,QWORD PTR [rip+0x27634]        # 0x429040
  401a0c:	movsxd rax,ebx
  401a0f:	mov    r9d,0xffffffff
  401a15:	mov    ecx,0xfde9
  401a1a:	add    rax,r13
  401a1d:	add    r14d,0x1
  401a21:	add    rax,rbp
  401a24:	mov    QWORD PTR [rdx+r15*1],rax
  401a28:	mov    edx,esi
  401a2a:	mov    r8,QWORD PTR [r12+r15*1]
  401a2e:	sub    edx,ebx
  401a30:	mov    QWORD PTR [rsp+0x38],0x0
  401a39:	mov    QWORD PTR [rsp+0x30],0x0
  401a42:	mov    DWORD PTR [rsp+0x28],edx
  401a46:	mov    QWORD PTR [rsp+0x20],rax
  401a4b:	xor    edx,edx
  401a4d:	add    r15,0x8
  401a51:	call   rdi
  401a53:	add    ebx,eax
  401a55:	cmp    r14d,DWORD PTR [rip+0x275dc]        # 0x429038
  401a5c:	jl     0x401a05
  401a5e:	mov    rbp,QWORD PTR [rip+0x275db]        # 0x429040
  401a65:	movsxd r11,r14d
  401a68:	shl    r11,0x3
  401a6c:	mov    QWORD PTR [rbp+r11*1+0x0],0x0
  401a75:	mov    rcx,r12
  401a78:	call   QWORD PTR [rip+0x29fb6]        # 0x42ba34
  401a7e:	mov    eax,DWORD PTR [rip+0x275b4]        # 0x429038
  401a84:	mov    rdi,QWORD PTR [rsp+0x40]
  401a89:	mov    rsi,QWORD PTR [rsp+0x48]
  401a8e:	mov    DWORD PTR [rdi],eax
  401a90:	mov    rax,QWORD PTR [rip+0x275a9]        # 0x429040
  401a97:	mov    QWORD PTR [rsi],rax
  401a9a:	add    rsp,0x58
  401a9e:	pop    rbx
  401a9f:	pop    rsi
  401aa0:	pop    rdi
  401aa1:	pop    rbp
  401aa2:	pop    r12
  401aa4:	pop    r13
  401aa6:	pop    r14
  401aa8:	pop    r15
  401aaa:	ret    
  401aab:	xor    r11d,r11d
  401aae:	jmp    0x401a6c
  401ab0:	mov    rax,QWORD PTR [rip+0x29f7d]        # 0x42ba34
  401ab7:	mov    rcx,r12
  401aba:	add    rsp,0x58
  401abe:	pop    rbx
  401abf:	pop    rsi
  401ac0:	pop    rdi
  401ac1:	pop    rbp
  401ac2:	pop    r12
  401ac4:	pop    r13
  401ac6:	pop    r14
  401ac8:	pop    r15
  401aca:	rex.W jmp rax
  401acd:	nop    DWORD PTR [rax]
  401ad0:	push   rdi
  401ad1:	push   rsi
  401ad2:	push   rbx
  401ad3:	sub    rsp,0x2c0
  401ada:	lea    rsi,[rip+0x1d657]        # 0x41f138
  401ae1:	mov    ecx,0x4f
  401ae6:	lea    rbx,[rsp+0x40]
  401aeb:	mov    rdi,rbx
  401aee:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  401af1:	movzx  eax,WORD PTR [rsi]
  401af4:	mov    WORD PTR [rdi],ax
  401af7:	jmp    0x401b0c
  401af9:	nop    DWORD PTR [rax+0x0]
  401b00:	mov    ecx,0x2d7e
  401b05:	mov    BYTE PTR [rax+0x2],0x2d
  401b09:	mov    WORD PTR [rax],cx
  401b0c:	lea    rdx,[rip+0x1d5ee]        # 0x41f101
  401b13:	mov    rcx,rbx
  401b16:	call   0x419820
  401b1b:	test   rax,rax
  401b1e:	jne    0x401b00
  401b20:	jmp    0x401b3c
  401b22:	movabs rsi,0x666e6f632d676b70
  401b2c:	mov    edx,0x6769
  401b31:	mov    BYTE PTR [rax+0xa],0x20
  401b35:	mov    QWORD PTR [rax],rsi
  401b38:	mov    WORD PTR [rax+0x8],dx
  401b3c:	lea    rdx,[rip+0x1d5c2]        # 0x41f105
  401b43:	mov    rcx,rbx
  401b46:	call   0x419820
  401b4b:	test   rax,rax
  401b4e:	jne    0x401b22
  401b50:	lea    rdx,[rip+0x1d5ba]        # 0x41f111
  401b57:	mov    rcx,rbx
  401b5a:	call   0x419818
  401b5f:	lea    r9,[rip+0x1d5ad]        # 0x41f113
  401b66:	lea    r8,[rip+0x1d5a9]        # 0x41f116
  401b6d:	xor    ecx,ecx
  401b6f:	mov    edx,0x20
  401b74:	mov    QWORD PTR [rsp+0x38],rax
  401b79:	call   0x412308
  401b7e:	mov    rax,QWORD PTR [rsp+0x38]
  401b83:	test   rax,rax
  401b86:	je     0x401bca
  401b88:	nop    DWORD PTR [rax+rax*1+0x0]
  401b90:	mov    QWORD PTR [rsp+0x28],rax
  401b95:	lea    rax,[rip+0x1d577]        # 0x41f113
  401b9c:	lea    r8,[rip+0x1d586]        # 0x41f129
  401ba3:	xor    ecx,ecx
  401ba5:	mov    edx,0x20
  401baa:	mov    QWORD PTR [rsp+0x20],rax
  401baf:	mov    r9,rax
  401bb2:	call   0x412308
  401bb7:	lea    rdx,[rip+0x1d553]        # 0x41f111
  401bbe:	xor    ecx,ecx
  401bc0:	call   0x419818
  401bc5:	test   rax,rax
  401bc8:	jne    0x401b90
  401bca:	add    rsp,0x2c0
  401bd1:	pop    rbx
  401bd2:	pop    rsi
  401bd3:	pop    rdi
  401bd4:	ret    
  401bd5:	nop
  401bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401be0:	sub    rsp,0x38
  401be4:	lea    r8,[rip+0x1d7c7]        # 0x41f3b2
  401beb:	mov    edx,0x10
  401bf0:	mov    QWORD PTR [rsp+0x58],r9
  401bf5:	lea    r9,[rsp+0x58]
  401bfa:	mov    QWORD PTR [rsp+0x28],r9
  401bff:	call   0x413f40
  401c04:	add    rsp,0x38
  401c08:	ret    
  401c09:	nop    DWORD PTR [rax+0x0]
  401c10:	lea    r8,[rip+0x1d79e]        # 0x41f3b5
  401c17:	lea    rdx,[rip+0x1d79f]        # 0x41f3bd
  401c1e:	lea    rcx,[rip+0x28bdb]        # 0x42a800
  401c25:	xor    r9d,r9d
  401c28:	jmp    0x412428
  401c2d:	nop    DWORD PTR [rax]
  401c30:	sub    rsp,0x28
  401c34:	lea    rcx,[rip+0x28bcd]        # 0x42a808
  401c3b:	call   0x412440
  401c40:	lea    rcx,[rip+0x28bb9]        # 0x42a800
  401c47:	call   0x412440
  401c4c:	lea    rcx,[rip+0x28bbd]        # 0x42a810
  401c53:	call   0x412440
  401c58:	lea    rcx,[rip+0x28bb9]        # 0x42a818
  401c5f:	call   0x412440
  401c64:	lea    rcx,[rip+0x28bb5]        # 0x42a820
  401c6b:	add    rsp,0x28
  401c6f:	jmp    0x412440
  401c74:	xchg   ax,ax
  401c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c80:	mov    rax,QWORD PTR [rip+0x29de5]        # 0x42ba6c
  401c87:	lea    rcx,[rip+0x1d735]        # 0x41f3c3
  401c8e:	rex.W jmp rax
  401c91:	nop    DWORD PTR [rax+rax*1+0x0]
  401c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ca0:	mov    QWORD PTR [rip+0x273a1],rcx        # 0x429048
  401ca7:	ret    
  401ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cb0:	push   rbx
  401cb1:	sub    rsp,0x20
  401cb5:	mov    rax,QWORD PTR [rip+0x2738c]        # 0x429048
  401cbc:	mov    ebx,ecx
  401cbe:	test   rax,rax
  401cc1:	je     0x401cc5
  401cc3:	call   rax
  401cc5:	mov    ecx,ebx
  401cc7:	call   0x419900
  401ccc:	nop
  401ccd:	nop    DWORD PTR [rax]
  401cd0:	push   r15
  401cd2:	push   r14
  401cd4:	push   r13
  401cd6:	push   r12
  401cd8:	push   rbp
  401cd9:	push   rdi
  401cda:	push   rsi
  401cdb:	push   rbx
  401cdc:	sub    rsp,0x4c8
  401ce3:	xor    eax,eax
  401ce5:	cmp    QWORD PTR [rip+0x27363],0x0        # 0x429050
  401ced:	mov    QWORD PTR [rsp+0x510],rcx
  401cf5:	je     0x401d10
  401cf7:	add    rsp,0x4c8
  401cfe:	pop    rbx
  401cff:	pop    rsi
  401d00:	pop    rdi
  401d01:	pop    rbp
  401d02:	pop    r12
  401d04:	pop    r13
  401d06:	pop    r14
  401d08:	pop    r15
  401d0a:	ret    
  401d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  401d10:	lea    rbx,[rsp+0x78]
  401d15:	mov    rcx,rbx
  401d18:	call   QWORD PTR [rip+0x29e36]        # 0x42bb54
  401d1e:	mov    rcx,rbx
  401d21:	call   QWORD PTR [rip+0x29e15]        # 0x42bb3c
  401d27:	mov    r12,rax
  401d2a:	mov    rax,QWORD PTR [rsp+0x510]
  401d32:	test   rax,rax
  401d35:	je     0x4020b0
  401d3b:	cmp    BYTE PTR [rax],0x0
  401d3e:	je     0x4020b0
  401d44:	xor    ebx,ebx
  401d46:	xor    r15d,r15d
  401d49:	lea    r14,[rsp+0x70]
  401d4e:	lea    r13,[rsp+0x68]
  401d53:	lea    rbp,[rsp+0xc0]
  401d5b:	jmp    0x401db8
  401d5d:	nop    DWORD PTR [rax]
  401d60:	mov    rcx,QWORD PTR [rsp+0x70]
  401d65:	mov    r8d,0xa
  401d6b:	mov    rdx,rbp
  401d6e:	call   0x419810
  401d73:	mov    DWORD PTR [rip+0x1b35b],eax        # 0x41d0d4
  401d79:	mov    rax,QWORD PTR [rsp+0xc0]
  401d81:	cmp    BYTE PTR [rax],0x0
  401d84:	jne    0x4020f4
  401d8a:	mov    rcx,QWORD PTR [rsp+0x70]
  401d8f:	call   0x4123c0
  401d94:	mov    rcx,QWORD PTR [rsp+0x68]
  401d99:	call   0x4123c0
  401d9e:	mov    rax,QWORD PTR [rsp+0x510]
  401da6:	test   rax,rax
  401da9:	je     0x401eb5
  401daf:	cmp    BYTE PTR [rax],0x0
  401db2:	je     0x401eb5
  401db8:	lea    r8,[rip+0x1d60f]        # 0x41f3ce
  401dbf:	lea    rdx,[rip+0x1d60a]        # 0x41f3d0
  401dc6:	lea    rcx,[rsp+0x510]
  401dce:	xor    r9d,r9d
  401dd1:	mov    QWORD PTR [rsp+0x28],r14
  401dd6:	mov    QWORD PTR [rsp+0x20],r13
  401ddb:	call   0x412288
  401de0:	test   eax,eax
  401de2:	mov    r10d,eax
  401de5:	js     0x401e70
  401deb:	mov    rax,QWORD PTR [rsp+0x510]
  401df3:	cmp    BYTE PTR [rax],0x0
  401df6:	je     0x401e04
  401df8:	add    rax,0x1
  401dfc:	mov    QWORD PTR [rsp+0x510],rax
  401e04:	mov    r9,QWORD PTR [rsp+0x68]
  401e09:	lea    rdi,[rip+0x1d5fb]        # 0x41f40b
  401e10:	mov    ecx,0x5
  401e15:	add    ebx,0x1
  401e18:	mov    rsi,r9
  401e1b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e1d:	je     0x401e50
  401e1f:	lea    rdi,[rip+0x1d5ea]        # 0x41f410
  401e26:	mov    rsi,r9
  401e29:	mov    ecx,0x6
  401e2e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e30:	je     0x401d60
  401e36:	lea    r8,[rip+0x1d5f4]        # 0x41f431
  401e3d:	mov    edx,0x10
  401e42:	xor    ecx,ecx
  401e44:	call   0x412308
  401e49:	jmp    0x401d8a
  401e4e:	xchg   ax,ax
  401e50:	mov    rcx,r15
  401e53:	call   0x4123c0
  401e58:	mov    r15,QWORD PTR [rsp+0x70]
  401e5d:	xor    ecx,ecx
  401e5f:	mov    QWORD PTR [rsp+0x70],0x0
  401e68:	jmp    0x401d8f
  401e6d:	nop    DWORD PTR [rax]
  401e70:	test   ebx,ebx
  401e72:	je     0x401eb5
  401e74:	lea    rbx,[rsp+0x80]
  401e7c:	lea    rdi,[rsp+0x80]
  401e84:	xor    eax,eax
  401e86:	mov    ecx,0x8
  401e8b:	mov    r8d,0x40
  401e91:	rep stos QWORD PTR es:[rdi],rax
  401e94:	mov    rdx,rbx
  401e97:	mov    ecx,r10d
  401e9a:	call   0x412218
  401e9f:	lea    r8,[rip+0x1d532]        # 0x41f3d8
  401ea6:	mov    r9,rbx
  401ea9:	mov    edx,0x10
  401eae:	xor    ecx,ecx
  401eb0:	call   0x412308
  401eb5:	xor    edx,edx
  401eb7:	mov    r8d,0x1
  401ebd:	mov    rcx,rbp
  401ec0:	lea    rbx,[rip+0x1d4fd]        # 0x41f3c4
  401ec7:	call   0x412480
  401ecc:	test   r15,r15
  401ecf:	cmovne rbx,r15
  401ed3:	mov    rsi,QWORD PTR [rip+0x23de6]        # 0x425cc0
  401eda:	nop    WORD PTR [rax+rax*1+0x0]
  401ee0:	movsx  edx,BYTE PTR [rbx]
  401ee3:	test   edx,edx
  401ee5:	je     0x401fb0
  401eeb:	cmp    edx,0x25
  401eee:	jne    0x401f30
  401ef0:	movsx  edx,BYTE PTR [rbx+0x1]
  401ef4:	lea    rdi,[rbx+0x2]
  401ef8:	test   edx,edx
  401efa:	je     0x401fb0
  401f00:	cmp    dl,0x70
  401f03:	je     0x401f93
  401f09:	cmp    dl,0x74
  401f0c:	je     0x401f44
  401f0e:	cmp    dl,0x25
  401f11:	mov    rbx,rdi
  401f14:	jne    0x401ee0
  401f16:	mov    r8d,0x1
  401f1c:	mov    rcx,rbp
  401f1f:	mov    rbx,rdi
  401f22:	call   0x412498
  401f27:	jmp    0x401ee0
  401f29:	nop    DWORD PTR [rax+0x0]
  401f30:	mov    r8d,0x1
  401f36:	mov    rcx,rbp
  401f39:	add    rbx,0x1
  401f3d:	call   0x412498
  401f42:	jmp    0x401ee0
  401f44:	mov    ecx,DWORD PTR [r12]
  401f48:	mov    edx,DWORD PTR [r12+0x10]
  401f4d:	mov    rbx,rdi
  401f50:	mov    eax,DWORD PTR [r12+0x14]
  401f55:	mov    DWORD PTR [rsp+0x38],ecx
  401f59:	mov    ecx,DWORD PTR [r12+0x4]
  401f5e:	lea    r9d,[rdx+0x1]
  401f62:	lea    r8d,[rax+0x76c]
  401f69:	lea    rdx,[rip+0x1d4e2]        # 0x41f452
  401f70:	mov    DWORD PTR [rsp+0x30],ecx
  401f74:	mov    ecx,DWORD PTR [r12+0x8]
  401f79:	mov    DWORD PTR [rsp+0x28],ecx
  401f7d:	mov    ecx,DWORD PTR [r12+0xc]
  401f82:	mov    DWORD PTR [rsp+0x20],ecx
  401f86:	mov    rcx,rbp
  401f89:	call   0x412478
  401f8e:	jmp    0x401ee0
  401f93:	lea    rdx,[rip+0x1d4b5]        # 0x41f44f
  401f9a:	mov    r8,rsi
  401f9d:	mov    rcx,rbp
  401fa0:	mov    rbx,rdi
  401fa3:	call   0x412478
  401fa8:	jmp    0x401ee0
  401fad:	nop    DWORD PTR [rax]
  401fb0:	mov    rcx,r15
  401fb3:	call   0x4123c0
  401fb8:	mov    eax,DWORD PTR [rsp+0xcc]
  401fbf:	cmp    DWORD PTR [rsp+0xc8],eax
  401fc6:	jae    0x4020d7
  401fcc:	mov    rcx,QWORD PTR [rsp+0xc0]
  401fd4:	lea    rdx,[rip+0x1d4be]        # 0x41f499
  401fdb:	call   0x4198f0
  401fe0:	test   rax,rax
  401fe3:	mov    QWORD PTR [rip+0x27066],rax        # 0x429050
  401fea:	je     0x402071
  401ff0:	lea    rcx,[rip+0xfffffffffffff5f9]        # 0x4015f0
  401ff7:	call   0x4122e0
  401ffc:	mov    rax,QWORD PTR [rsp+0xc0]
  402004:	mov    r9,QWORD PTR [rip+0x23cb5]        # 0x425cc0
  40200b:	lea    r8,[rip+0x1d4ae]        # 0x41f4c0
  402012:	mov    edx,0x20
  402017:	xor    ecx,ecx
  402019:	mov    QWORD PTR [rsp+0x50],rax
  40201e:	mov    eax,DWORD PTR [r12]
  402022:	mov    DWORD PTR [rsp+0x48],eax
  402026:	mov    eax,DWORD PTR [r12+0x4]
  40202b:	mov    DWORD PTR [rsp+0x40],eax
  40202f:	mov    eax,DWORD PTR [r12+0x8]
  402034:	mov    DWORD PTR [rsp+0x38],eax
  402038:	mov    eax,DWORD PTR [r12+0xc]
  40203d:	mov    DWORD PTR [rsp+0x30],eax
  402041:	mov    eax,DWORD PTR [r12+0x10]
  402046:	add    eax,0x1
  402049:	mov    DWORD PTR [rsp+0x28],eax
  40204d:	mov    eax,DWORD PTR [r12+0x14]
  402052:	add    eax,0x76c
  402057:	mov    DWORD PTR [rsp+0x20],eax
  40205b:	call   0x412308
  402060:	xor    edx,edx
  402062:	mov    rcx,rbp
  402065:	call   0x412488
  40206a:	xor    eax,eax
  40206c:	jmp    0x401cf7
  402071:	mov    rsi,QWORD PTR [rip+0x29aac]        # 0x42bb24
  402078:	call   rsi
  40207a:	mov    eax,DWORD PTR [rax]
  40207c:	neg    eax
  40207e:	mov    ebx,eax
  402080:	call   rsi
  402082:	mov    ecx,DWORD PTR [rax]
  402084:	call   0x419848
  402089:	mov    r9,QWORD PTR [rsp+0xc0]
  402091:	lea    r8,[rip+0x1d408]        # 0x41f4a0
  402098:	mov    QWORD PTR [rsp+0x20],rax
  40209d:	mov    edx,0x10
  4020a2:	xor    ecx,ecx
  4020a4:	call   0x412308
  4020a9:	mov    eax,ebx
  4020ab:	jmp    0x401cf7
  4020b0:	lea    rbp,[rsp+0xc0]
  4020b8:	mov    r8d,0x1
  4020be:	xor    edx,edx
  4020c0:	xor    r15d,r15d
  4020c3:	lea    rbx,[rip+0x1d2fa]        # 0x41f3c4
  4020ca:	mov    rcx,rbp
  4020cd:	call   0x412480
  4020d2:	jmp    0x401ed3
  4020d7:	lea    r8,[rip+0x1d392]        # 0x41f470
  4020de:	mov    edx,0x10
  4020e3:	xor    ecx,ecx
  4020e5:	call   0x412308
  4020ea:	mov    eax,0xfffffff4
  4020ef:	jmp    0x401cf7
  4020f4:	lea    r8,[rip+0x1d31b]        # 0x41f416
  4020fb:	xor    ecx,ecx
  4020fd:	mov    edx,0x8
  402102:	call   0x412308
  402107:	mov    ecx,0x1
  40210c:	call   0x401cb0
  402111:	nop
  402112:	nop    DWORD PTR [rax+0x0]
  402116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402120:	push   r15
  402122:	push   r14
  402124:	push   r13
  402126:	push   r12
  402128:	push   rbp
  402129:	push   rdi
  40212a:	push   rsi
  40212b:	push   rbx
  40212c:	sub    rsp,0x38
  402130:	xor    edi,edi
  402132:	xor    ebx,ebx
  402134:	mov    ebp,ecx
  402136:	jmp    0x402143
  402138:	nop    DWORD PTR [rax+rax*1+0x0]
  402140:	add    edi,0x1
  402143:	mov    rcx,rbx
  402146:	call   0x4120b8
  40214b:	test   rax,rax
  40214e:	mov    rbx,rax
  402151:	jne    0x402140
  402153:	mov    r12d,edi
  402156:	mov    edx,0x8
  40215b:	mov    rcx,r12
  40215e:	call   0x412470
  402163:	test   rax,rax
  402166:	mov    QWORD PTR [rsp+0x20],rax
  40216b:	je     0x4023a4
  402171:	xor    esi,esi
  402173:	jmp    0x402183
  402175:	mov    rdx,QWORD PTR [rsp+0x20]
  40217a:	mov    eax,esi
  40217c:	add    esi,0x1
  40217f:	mov    QWORD PTR [rdx+rax*8],rbx
  402183:	mov    rcx,rbx
  402186:	call   0x4120b8
  40218b:	test   rax,rax
  40218e:	mov    rbx,rax
  402191:	jne    0x402175
  402193:	cmp    esi,edi
  402195:	jne    0x4023c1
  40219b:	mov    rcx,QWORD PTR [rsp+0x20]
  4021a0:	lea    r9,[rip+0xfffffffffffff419]        # 0x4015c0
  4021a7:	mov    r8d,0x8
  4021ad:	mov    rdx,r12
  4021b0:	call   0x419870
  4021b5:	lea    rax,[rip+0x1d34b]        # 0x41f507
  4021bc:	lea    rdx,[rip+0x1d34d]        # 0x41f510
  4021c3:	test   ebp,ebp
  4021c5:	lea    rcx,[rip+0x1d36c]        # 0x41f538
  4021cc:	cmovne rdx,rax
  4021d0:	call   0x401560
  4021d5:	test   esi,esi
  4021d7:	je     0x40236f
  4021dd:	mov    rdi,QWORD PTR [rsp+0x20]
  4021e2:	lea    eax,[rsi-0x1]
  4021e5:	lea    r13,[rip+0x1d32d]        # 0x41f519
  4021ec:	lea    rsi,[rip+0x1d328]        # 0x41f51b
  4021f3:	lea    r12,[rip+0x1d323]        # 0x41f51d
  4021fa:	lea    rax,[rdi+rax*8+0x8]
  4021ff:	mov    r14,rdi
  402202:	mov    QWORD PTR [rsp+0x28],rax
  402207:	nop    WORD PTR [rax+rax*1+0x0]
  402210:	mov    rdi,QWORD PTR [r14]
  402213:	xor    r15d,r15d
  402216:	test   ebp,ebp
  402218:	mov    ebx,DWORD PTR [rdi]
  40221a:	jne    0x402320
  402220:	mov    rcx,r15
  402223:	call   0x412128
  402228:	test   rax,rax
  40222b:	mov    r15,rax
  40222e:	je     0x402360
  402234:	cmp    ebx,DWORD PTR [rax+0x14]
  402237:	jne    0x402220
  402239:	mov    rcx,rax
  40223c:	call   0x412138
  402241:	test   eax,eax
  402243:	je     0x402220
  402245:	mov    eax,DWORD PTR [rdi+0x4]
  402248:	mov    edx,0x3f
  40224d:	cmp    eax,0x4
  402250:	ja     0x40225d
  402252:	lea    rdx,[rip+0x1eb60]        # 0x420db9
  402259:	movsx  edx,BYTE PTR [rdx+rax*1]
  40225d:	lea    rcx,[rip+0x1d3ce]        # 0x41f632
  402264:	call   0x401560
  402269:	test   BYTE PTR [r15+0x19],0x10
  40226e:	mov    rcx,rsi
  402271:	cmovne rcx,r13
  402275:	call   0x401560
  40227a:	test   BYTE PTR [r15+0x19],0x20
  40227f:	mov    rcx,rsi
  402282:	cmovne rcx,r12
  402286:	call   0x401560
  40228b:	test   BYTE PTR [r15+0x19],0x2
  402290:	lea    rcx,[rip+0x1d288]        # 0x41f51f
  402297:	cmove  rcx,rsi
  40229b:	call   0x401560
  4022a0:	test   BYTE PTR [r15+0x18],0x1
  4022a5:	lea    rcx,[rip+0x1d275]        # 0x41f521
  4022ac:	cmove  rcx,rsi
  4022b0:	call   0x401560
  4022b5:	test   BYTE PTR [r15+0x18],0x2
  4022ba:	lea    rcx,[rip+0x1d262]        # 0x41f523
  4022c1:	cmove  rcx,rsi
  4022c5:	call   0x401560
  4022ca:	mov    rax,QWORD PTR [r15+0x8]
  4022ce:	mov    rdx,QWORD PTR [r15]
  4022d1:	lea    r8,[rip+0x1d0eb]        # 0x41f3c3
  4022d8:	lea    rcx,[rip+0x1d357]        # 0x41f636
  4022df:	test   rax,rax
  4022e2:	cmovne r8,rax
  4022e6:	call   0x401560
  4022eb:	mov    rbx,QWORD PTR [rdi+0x8]
  4022ef:	mov    rcx,QWORD PTR [r15]
  4022f2:	mov    rdx,rbx
  4022f5:	call   0x419858
  4022fa:	test   eax,eax
  4022fc:	jne    0x402390
  402302:	lea    rcx,[rip+0x1d343]        # 0x41f64c
  402309:	call   0x401560
  40230e:	test   ebp,ebp
  402310:	mov    ebx,DWORD PTR [rdi]
  402312:	je     0x402220
  402318:	nop    DWORD PTR [rax+rax*1+0x0]
  402320:	mov    rcx,r15
  402323:	call   0x412128
  402328:	test   rax,rax
  40232b:	mov    r15,rax
  40232e:	je     0x402360
  402330:	cmp    ebx,DWORD PTR [r15+0x14]
  402334:	jne    0x402320
  402336:	mov    rcx,r15
  402339:	call   0x412130
  40233e:	test   eax,eax
  402340:	jne    0x402245
  402346:	mov    rcx,r15
  402349:	call   0x412128
  40234e:	test   rax,rax
  402351:	mov    r15,rax
  402354:	jne    0x402330
  402356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402360:	add    r14,0x8
  402364:	cmp    r14,QWORD PTR [rsp+0x28]
  402369:	jne    0x402210
  40236f:	mov    rcx,QWORD PTR [rsp+0x20]
  402374:	add    rsp,0x38
  402378:	pop    rbx
  402379:	pop    rsi
  40237a:	pop    rdi
  40237b:	pop    rbp
  40237c:	pop    r12
  40237e:	pop    r13
  402380:	pop    r14
  402382:	pop    r15
  402384:	jmp    0x4123c0
  402389:	nop    DWORD PTR [rax+0x0]
  402390:	lea    rcx,[rip+0x1d2a9]        # 0x41f640
  402397:	mov    rdx,rbx
  40239a:	call   0x401560
  40239f:	jmp    0x402302
  4023a4:	lea    r8,[rip+0x1d17a]        # 0x41f525
  4023ab:	xor    ecx,ecx
  4023ad:	mov    edx,0x10
  4023b2:	call   0x412308
  4023b7:	mov    ecx,0x1
  4023bc:	call   0x401cb0
  4023c1:	call   0x419ba0
  4023c6:	nop
  4023c7:	nop    WORD PTR [rax+rax*1+0x0]
  4023d0:	push   rdi
  4023d1:	push   rsi
  4023d2:	push   rbx
  4023d3:	sub    rsp,0x70
  4023d7:	movaps XMMWORD PTR [rsp+0x50],xmm6
  4023dc:	movaps XMMWORD PTR [rsp+0x60],xmm7
  4023e1:	mov    rsi,rdx
  4023e4:	lea    rdx,[rsp+0x48]
  4023e9:	mov    rdi,rcx
  4023ec:	mov    rcx,rsi
  4023ef:	mov    ebx,r8d
  4023f2:	movapd xmm6,xmm3
  4023f6:	movsd  xmm7,QWORD PTR [rsp+0xb0]
  4023ff:	call   0x4121f8
  402404:	mov    rax,QWORD PTR [rsp+0x48]
  402409:	cmp    BYTE PTR [rax],0x0
  40240c:	jne    0x4024b9
  402412:	ucomisd xmm6,xmm0
  402416:	ja     0x4024b0
  40241c:	ucomisd xmm0,xmm7
  402420:	ja     0x4024b0
  402426:	cmp    ebx,0x400
  40242c:	je     0x402460
  40242e:	add    ebx,0xffffff80
  402431:	jne    0x402447
  402433:	cvttsd2si eax,xmm0
  402437:	pxor   xmm1,xmm1
  40243b:	cvtsi2sd xmm1,eax
  40243f:	ucomisd xmm1,xmm0
  402443:	jp     0x40247f
  402445:	jne    0x40247f
  402447:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  40244c:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  402451:	add    rsp,0x70
  402455:	pop    rbx
  402456:	pop    rsi
  402457:	pop    rdi
  402458:	ret    
  402459:	nop    DWORD PTR [rax+0x0]
  402460:	cvttsd2si rax,xmm0
  402465:	pxor   xmm1,xmm1
  402469:	cvtsi2sd xmm1,rax
  40246e:	ucomisd xmm1,xmm0
  402472:	jp     0x402476
  402474:	je     0x402447
  402476:	lea    r8,[rip+0x1d283]        # 0x41f700
  40247d:	jmp    0x402486
  40247f:	lea    r8,[rip+0x1d2a2]        # 0x41f728
  402486:	movsd  QWORD PTR [rsp+0x30],xmm7
  40248c:	xor    ecx,ecx
  40248e:	mov    QWORD PTR [rsp+0x20],rsi
  402493:	movsd  QWORD PTR [rsp+0x28],xmm6
  402499:	mov    r9,rdi
  40249c:	mov    edx,0x8
  4024a1:	call   0x412308
  4024a6:	mov    ecx,0x1
  4024ab:	call   0x401cb0
  4024b0:	lea    r8,[rip+0x1d211]        # 0x41f6c8
  4024b7:	jmp    0x402486
  4024b9:	lea    r8,[rip+0x1d1e0]        # 0x41f6a0
  4024c0:	jmp    0x402486
  4024c2:	nop    DWORD PTR [rax+0x0]
  4024c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024d0:	push   rdi
  4024d1:	push   rsi
  4024d2:	push   rbx
  4024d3:	sub    rsp,0x30
  4024d7:	mov    rdi,rcx
  4024da:	lea    rcx,[rsp+0x28]
  4024df:	mov    rbx,rdx
  4024e2:	mov    esi,r8d
  4024e5:	call   0x412258
  4024ea:	test   eax,eax
  4024ec:	js     0x4024fb
  4024ee:	mov    rax,QWORD PTR [rsp+0x28]
  4024f3:	add    rsp,0x30
  4024f7:	pop    rbx
  4024f8:	pop    rsi
  4024f9:	pop    rdi
  4024fa:	ret    
  4024fb:	mov    r8d,esi
  4024fe:	mov    rdx,rbx
  402501:	mov    rcx,rdi
  402504:	call   0x419bd5
  402509:	nop
  40250a:	nop    WORD PTR [rax+rax*1+0x0]
  402510:	push   r13
  402512:	push   r12
  402514:	push   rbp
  402515:	push   rdi
  402516:	push   rsi
  402517:	push   rbx
  402518:	sub    rsp,0x68
  40251c:	mov    rax,QWORD PTR [rcx]
  40251f:	mov    r12d,DWORD PTR [rsp+0xc0]
  402527:	mov    rbx,rcx
  40252a:	mov    rdi,rdx
  40252d:	mov    ebp,r8d
  402530:	mov    esi,r9d
  402533:	test   rax,rax
  402536:	je     0x4025e0
  40253c:	test   r12d,r12d
  40253f:	jne    0x402600
  402545:	mov    ecx,0x1
  40254a:	lea    r12,[rsp+0x20]
  40254f:	jmp    0x402561
  402551:	add    rbx,0x28
  402555:	mov    rax,QWORD PTR [rbx]
  402558:	test   rax,rax
  40255b:	je     0x4025e0
  402561:	mov    r8d,DWORD PTR [rbx+0x8]
  402565:	mov    edx,r8d
  402568:	and    edx,ebp
  40256a:	cmp    edx,ebp
  40256c:	jne    0x402551
  40256e:	test   r8d,esi
  402571:	jne    0x402551
  402573:	test   ecx,ecx
  402575:	jne    0x4026a4
  40257b:	mov    r8d,0x40
  402581:	mov    rdx,rax
  402584:	mov    rcx,r12
  402587:	call   0x412200
  40258c:	cmp    QWORD PTR [rbx+0x20],0x0
  402591:	je     0x4025ba
  402593:	lea    rdx,[rip+0x1ca68]        # 0x41f002
  40259a:	mov    r8d,0x40
  4025a0:	mov    rcx,r12
  4025a3:	call   0x412210
  4025a8:	mov    rdx,QWORD PTR [rbx+0x20]
  4025ac:	mov    r8d,0x40
  4025b2:	mov    rcx,r12
  4025b5:	call   0x412210
  4025ba:	mov    r8,QWORD PTR [rbx+0x18]
  4025be:	lea    rcx,[rip+0x1d185]        # 0x41f74a
  4025c5:	add    rbx,0x28
  4025c9:	mov    rdx,r12
  4025cc:	call   0x401560
  4025d1:	mov    rax,QWORD PTR [rbx]
  4025d4:	xor    ecx,ecx
  4025d6:	test   rax,rax
  4025d9:	jne    0x402561
  4025db:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e0:	lea    rcx,[rip+0x1d065]        # 0x41f64c
  4025e7:	call   0x401560
  4025ec:	nop
  4025ed:	add    rsp,0x68
  4025f1:	pop    rbx
  4025f2:	pop    rsi
  4025f3:	pop    rdi
  4025f4:	pop    rbp
  4025f5:	pop    r12
  4025f7:	pop    r13
  4025f9:	ret    
  4025fa:	nop    WORD PTR [rax+rax*1+0x0]
  402600:	mov    r8d,0x1
  402606:	lea    r13,[rsp+0x20]
  40260b:	jmp    0x40261c
  40260d:	nop    DWORD PTR [rax]
  402610:	add    rbx,0x28
  402614:	mov    rax,QWORD PTR [rbx]
  402617:	test   rax,rax
  40261a:	je     0x4025e0
  40261c:	mov    edx,DWORD PTR [rbx+0x8]
  40261f:	mov    ecx,edx
  402621:	and    ecx,ebp
  402623:	cmp    ecx,ebp
  402625:	jne    0x402610
  402627:	test   edx,r12d
  40262a:	je     0x402610
  40262c:	test   edx,esi
  40262e:	jne    0x402610
  402630:	test   r8d,r8d
  402633:	jne    0x402690
  402635:	mov    r8d,0x40
  40263b:	mov    rdx,rax
  40263e:	mov    rcx,r13
  402641:	call   0x412200
  402646:	cmp    QWORD PTR [rbx+0x20],0x0
  40264b:	je     0x402674
  40264d:	lea    rdx,[rip+0x1c9ae]        # 0x41f002
  402654:	mov    r8d,0x40
  40265a:	mov    rcx,r13
  40265d:	call   0x412210
  402662:	mov    rdx,QWORD PTR [rbx+0x20]
  402666:	mov    r8d,0x40
  40266c:	mov    rcx,r13
  40266f:	call   0x412210
  402674:	mov    r8,QWORD PTR [rbx+0x18]
  402678:	lea    rcx,[rip+0x1d0cb]        # 0x41f74a
  40267f:	mov    rdx,r13
  402682:	call   0x401560
  402687:	xor    r8d,r8d
  40268a:	jmp    0x402610
  40268c:	nop    DWORD PTR [rax+0x0]
  402690:	lea    rcx,[rip+0x1d0bf]        # 0x41f756
  402697:	mov    rdx,rdi
  40269a:	call   0x401560
  40269f:	mov    rax,QWORD PTR [rbx]
  4026a2:	jmp    0x402635
  4026a4:	lea    rcx,[rip+0x1d0ab]        # 0x41f756
  4026ab:	mov    rdx,rdi
  4026ae:	call   0x401560
  4026b3:	mov    rax,QWORD PTR [rbx]
  4026b6:	jmp    0x40257b
  4026bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4026c0:	push   r15
  4026c2:	push   r14
  4026c4:	push   r13
  4026c6:	push   r12
  4026c8:	push   rbp
  4026c9:	push   rdi
  4026ca:	push   rsi
  4026cb:	push   rbx
  4026cc:	sub    rsp,0xc8
  4026d3:	cmp    QWORD PTR [rcx+0x10],0x0
  4026d8:	mov    QWORD PTR [rsp+0x110],rcx
  4026e0:	mov    ebp,edx
  4026e2:	je     0x40270d
  4026e4:	lea    rcx,[rsp+0x110]
  4026ec:	mov    r8d,edx
  4026ef:	xor    r9d,r9d
  4026f2:	xor    edx,edx
  4026f4:	call   0x412268
  4026f9:	lea    rcx,[rip+0x1cf4c]        # 0x41f64c
  402700:	call   0x401560
  402705:	mov    rcx,QWORD PTR [rsp+0x110]
  40270d:	lea    rax,[rsp+0x80]
  402715:	mov    QWORD PTR [rsp+0x28],0x0
  40271e:	mov    QWORD PTR [rsp+0x48],rax
  402723:	lea    rax,[rsp+0x88]
  40272b:	mov    QWORD PTR [rsp+0x50],rax
  402730:	lea    rax,[rsp+0x90]
  402738:	mov    QWORD PTR [rsp+0x58],rax
  40273d:	lea    rax,[rsp+0x98]
  402745:	mov    QWORD PTR [rsp+0x60],rax
  40274a:	lea    rax,[rsp+0xa0]
  402752:	mov    QWORD PTR [rsp+0x68],rax
  402757:	lea    rax,[rsp+0xa8]
  40275f:	mov    QWORD PTR [rsp+0x70],rax
  402764:	mov    rdx,QWORD PTR [rsp+0x28]
  402769:	call   0x4122a8
  40276e:	test   rax,rax
  402771:	mov    QWORD PTR [rsp+0x28],rax
  402776:	je     0x402ad7
  40277c:	cmp    QWORD PTR [rax+0x10],0x0
  402781:	mov    QWORD PTR [rsp+0x80],rax
  402789:	mov    rcx,rax
  40278c:	je     0x4027b4
  40278e:	mov    rcx,QWORD PTR [rsp+0x48]
  402793:	xor    r9d,r9d
  402796:	mov    r8d,ebp
  402799:	xor    edx,edx
  40279b:	call   0x412268
  4027a0:	lea    rcx,[rip+0x1cea5]        # 0x41f64c
  4027a7:	call   0x401560
  4027ac:	mov    rcx,QWORD PTR [rsp+0x80]
  4027b4:	lea    rax,[rsp+0xb0]
  4027bc:	mov    QWORD PTR [rsp+0x30],0x0
  4027c5:	mov    QWORD PTR [rsp+0x40],rax
  4027ca:	mov    rdx,QWORD PTR [rsp+0x30]
  4027cf:	call   0x4122a8
  4027d4:	test   rax,rax
  4027d7:	mov    QWORD PTR [rsp+0x30],rax
  4027dc:	je     0x402aca
  4027e2:	cmp    QWORD PTR [rax+0x10],0x0
  4027e7:	mov    QWORD PTR [rsp+0x88],rax
  4027ef:	mov    rcx,rax
  4027f2:	je     0x40281a
  4027f4:	mov    rcx,QWORD PTR [rsp+0x50]
  4027f9:	xor    r9d,r9d
  4027fc:	mov    r8d,ebp
  4027ff:	xor    edx,edx
  402801:	call   0x412268
  402806:	lea    rcx,[rip+0x1ce3f]        # 0x41f64c
  40280d:	call   0x401560
  402812:	mov    rcx,QWORD PTR [rsp+0x88]
  40281a:	lea    rsi,[rsp+0xb8]
  402822:	mov    QWORD PTR [rsp+0x38],0x0
  40282b:	mov    rdx,QWORD PTR [rsp+0x38]
  402830:	call   0x4122a8
  402835:	test   rax,rax
  402838:	mov    QWORD PTR [rsp+0x38],rax
  40283d:	je     0x402abd
  402843:	cmp    QWORD PTR [rax+0x10],0x0
  402848:	mov    QWORD PTR [rsp+0x90],rax
  402850:	mov    rcx,rax
  402853:	je     0x40287b
  402855:	mov    rcx,QWORD PTR [rsp+0x58]
  40285a:	xor    r9d,r9d
  40285d:	mov    r8d,ebp
  402860:	xor    edx,edx
  402862:	call   0x412268
  402867:	lea    rcx,[rip+0x1cdde]        # 0x41f64c
  40286e:	call   0x401560
  402873:	mov    rcx,QWORD PTR [rsp+0x90]
  40287b:	xor    r12d,r12d
  40287e:	mov    rdx,r12
  402881:	call   0x4122a8
  402886:	test   rax,rax
  402889:	mov    r12,rax
  40288c:	je     0x402ab0
  402892:	cmp    QWORD PTR [r12+0x10],0x0
  402898:	mov    QWORD PTR [rsp+0x98],r12
  4028a0:	mov    rcx,r12
  4028a3:	je     0x4028cb
  4028a5:	mov    rcx,QWORD PTR [rsp+0x60]
  4028aa:	xor    r9d,r9d
  4028ad:	mov    r8d,ebp
  4028b0:	xor    edx,edx
  4028b2:	call   0x412268
  4028b7:	lea    rcx,[rip+0x1cd8e]        # 0x41f64c
  4028be:	call   0x401560
  4028c3:	mov    rcx,QWORD PTR [rsp+0x98]
  4028cb:	xor    r13d,r13d
  4028ce:	mov    QWORD PTR [rsp+0x78],r12
  4028d3:	mov    r15,QWORD PTR [rsp+0x40]
  4028d8:	mov    rdx,r13
  4028db:	call   0x4122a8
  4028e0:	test   rax,rax
  4028e3:	mov    r13,rax
  4028e6:	je     0x402a9e
  4028ec:	cmp    QWORD PTR [r13+0x10],0x0
  4028f1:	mov    QWORD PTR [rsp+0xa0],r13
  4028f9:	mov    rcx,r13
  4028fc:	je     0x402924
  4028fe:	mov    rcx,QWORD PTR [rsp+0x68]
  402903:	xor    r9d,r9d
  402906:	mov    r8d,ebp
  402909:	xor    edx,edx
  40290b:	call   0x412268
  402910:	lea    rcx,[rip+0x1cd35]        # 0x41f64c
  402917:	call   0x401560
  40291c:	mov    rcx,QWORD PTR [rsp+0xa0]
  402924:	xor    r14d,r14d
  402927:	mov    rdx,r14
  40292a:	call   0x4122a8
  40292f:	test   rax,rax
  402932:	mov    r14,rax
  402935:	je     0x402a82
  40293b:	cmp    QWORD PTR [r14+0x10],0x0
  402940:	mov    QWORD PTR [rsp+0xa8],r14
  402948:	mov    rcx,r14
  40294b:	je     0x402973
  40294d:	mov    rcx,QWORD PTR [rsp+0x70]
  402952:	xor    r9d,r9d
  402955:	mov    r8d,ebp
  402958:	xor    edx,edx
  40295a:	call   0x412268
  40295f:	lea    rcx,[rip+0x1cce6]        # 0x41f64c
  402966:	call   0x401560
  40296b:	mov    rcx,QWORD PTR [rsp+0xa8]
  402973:	xor    r12d,r12d
  402976:	mov    rdx,r12
  402979:	call   0x4122a8
  40297e:	test   rax,rax
  402981:	mov    r12,rax
  402984:	je     0x402a66
  40298a:	cmp    QWORD PTR [r12+0x10],0x0
  402990:	mov    QWORD PTR [rsp+0xb0],r12
  402998:	mov    rcx,r12
  40299b:	je     0x4029c1
  40299d:	xor    r9d,r9d
  4029a0:	mov    r8d,ebp
  4029a3:	xor    edx,edx
  4029a5:	mov    rcx,r15
  4029a8:	call   0x412268
  4029ad:	lea    rcx,[rip+0x1cc98]        # 0x41f64c
  4029b4:	call   0x401560
  4029b9:	mov    rcx,QWORD PTR [rsp+0xb0]
  4029c1:	xor    edi,edi
  4029c3:	mov    rdx,rdi
  4029c6:	call   0x4122a8
  4029cb:	test   rax,rax
  4029ce:	mov    rdi,rax
  4029d1:	je     0x402a4a
  4029d3:	cmp    QWORD PTR [rdi+0x10],0x0
  4029d8:	mov    QWORD PTR [rsp+0xb8],rdi
  4029e0:	mov    rcx,rdi
  4029e3:	je     0x402a09
  4029e5:	xor    r9d,r9d
  4029e8:	mov    r8d,ebp
  4029eb:	xor    edx,edx
  4029ed:	mov    rcx,rsi
  4029f0:	call   0x412268
  4029f5:	lea    rcx,[rip+0x1cc50]        # 0x41f64c
  4029fc:	call   0x401560
  402a01:	mov    rcx,QWORD PTR [rsp+0xb8]
  402a09:	xor    ebx,ebx
  402a0b:	jmp    0x402a22
  402a0d:	nop    DWORD PTR [rax]
  402a10:	mov    rcx,rbx
  402a13:	mov    edx,ebp
  402a15:	call   0x4026c0
  402a1a:	mov    rcx,QWORD PTR [rsp+0xb8]
  402a22:	mov    rdx,rbx
  402a25:	call   0x4122a8
  402a2a:	test   rax,rax
  402a2d:	mov    rbx,rax
  402a30:	jne    0x402a10
  402a32:	mov    rcx,QWORD PTR [rsp+0xb0]
  402a3a:	mov    rdx,rdi
  402a3d:	call   0x4122a8
  402a42:	test   rax,rax
  402a45:	mov    rdi,rax
  402a48:	jne    0x4029d3
  402a4a:	mov    rcx,QWORD PTR [rsp+0xa8]
  402a52:	mov    rdx,r12
  402a55:	call   0x4122a8
  402a5a:	test   rax,rax
  402a5d:	mov    r12,rax
  402a60:	jne    0x40298a
  402a66:	mov    rcx,QWORD PTR [rsp+0xa0]
  402a6e:	mov    rdx,r14
  402a71:	call   0x4122a8
  402a76:	test   rax,rax
  402a79:	mov    r14,rax
  402a7c:	jne    0x40293b
  402a82:	mov    rcx,QWORD PTR [rsp+0x98]
  402a8a:	mov    rdx,r13
  402a8d:	call   0x4122a8
  402a92:	test   rax,rax
  402a95:	mov    r13,rax
  402a98:	jne    0x4028ec
  402a9e:	mov    r12,QWORD PTR [rsp+0x78]
  402aa3:	mov    rcx,QWORD PTR [rsp+0x90]
  402aab:	jmp    0x40287e
  402ab0:	mov    rcx,QWORD PTR [rsp+0x88]
  402ab8:	jmp    0x40282b
  402abd:	mov    rcx,QWORD PTR [rsp+0x80]
  402ac5:	jmp    0x4027ca
  402aca:	mov    rcx,QWORD PTR [rsp+0x110]
  402ad2:	jmp    0x402764
  402ad7:	add    rsp,0xc8
  402ade:	pop    rbx
  402adf:	pop    rsi
  402ae0:	pop    rdi
  402ae1:	pop    rbp
  402ae2:	pop    r12
  402ae4:	pop    r13
  402ae6:	pop    r14
  402ae8:	pop    r15
  402aea:	ret    
  402aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  402af0:	push   rdi
  402af1:	push   rsi
  402af2:	push   rbx
  402af3:	sub    rsp,0xa0
  402afa:	mov    rdi,rcx
  402afd:	call   0x412130
  402b02:	mov    rdx,QWORD PTR [rdi+0x8]
  402b06:	lea    r9,[rip+0x1c8b6]        # 0x41f3c3
  402b0d:	mov    r8,QWORD PTR [rdi]
  402b10:	lea    rcx,[rip+0x1cc53]        # 0x41f76a
  402b17:	test   rdx,rdx
  402b1a:	cmovne r9,rdx
  402b1e:	test   eax,eax
  402b20:	lea    rdx,[rip+0x1cc3b]        # 0x41f762
  402b27:	lea    rax,[rip+0x1cc2c]        # 0x41f75a
  402b2e:	cmovne rdx,rax
  402b32:	call   0x401560
  402b37:	cmp    DWORD PTR [rdi+0x10],0x1
  402b3b:	jbe    0x402d00
  402b41:	mov    rbx,QWORD PTR [rdi+0x20]
  402b45:	test   rbx,rbx
  402b48:	je     0x402b86
  402b4a:	lea    rcx,[rip+0x1cc62]        # 0x41f7b3
  402b51:	call   0x401560
  402b56:	mov    edx,DWORD PTR [rbx]
  402b58:	test   edx,edx
  402b5a:	je     0x402b7a
  402b5c:	nop    DWORD PTR [rax+0x0]
  402b60:	mov    r8d,DWORD PTR [rbx+0x4]
  402b64:	lea    rcx,[rip+0x1cc62]        # 0x41f7cd
  402b6b:	add    rbx,0x8
  402b6f:	call   0x401560
  402b74:	mov    edx,DWORD PTR [rbx]
  402b76:	test   edx,edx
  402b78:	jne    0x402b60
  402b7a:	lea    rcx,[rip+0x1cacb]        # 0x41f64c
  402b81:	call   0x401560
  402b86:	mov    rbx,QWORD PTR [rdi+0x28]
  402b8a:	test   rbx,rbx
  402b8d:	je     0x402bcd
  402b8f:	lea    rcx,[rip+0x1cc3e]        # 0x41f7d4
  402b96:	call   0x401560
  402b9b:	mov    ecx,DWORD PTR [rbx]
  402b9d:	cmp    ecx,0xffffffff
  402ba0:	je     0x402bc1
  402ba2:	call   0x412368
  402ba7:	lea    rcx,[rip+0x1cc43]        # 0x41f7f1
  402bae:	add    rbx,0x4
  402bb2:	mov    rdx,rax
  402bb5:	call   0x401560
  402bba:	mov    ecx,DWORD PTR [rbx]
  402bbc:	cmp    ecx,0xffffffff
  402bbf:	jne    0x402ba2
  402bc1:	lea    rcx,[rip+0x1ca84]        # 0x41f64c
  402bc8:	call   0x401560
  402bcd:	mov    rsi,QWORD PTR [rdi+0x30]
  402bd1:	test   rsi,rsi
  402bd4:	je     0x402c2b
  402bd6:	lea    rcx,[rip+0x1cc18]        # 0x41f7f5
  402bdd:	lea    rbx,[rsp+0x20]
  402be2:	call   0x401560
  402be7:	mov    r9d,DWORD PTR [rsi]
  402bea:	test   r9d,r9d
  402bed:	je     0x402c1f
  402bef:	nop
  402bf0:	lea    r8,[rip+0x1c7bb]        # 0x41f3b2
  402bf7:	mov    edx,0x10
  402bfc:	mov    rcx,rbx
  402bff:	add    rsi,0x4
  402c03:	call   0x401be0
  402c08:	lea    rcx,[rip+0x1cbe2]        # 0x41f7f1
  402c0f:	mov    rdx,rbx
  402c12:	call   0x401560
  402c17:	mov    r9d,DWORD PTR [rsi]
  402c1a:	test   r9d,r9d
  402c1d:	jne    0x402bf0
  402c1f:	lea    rcx,[rip+0x1ca26]        # 0x41f64c
  402c26:	call   0x401560
  402c2b:	mov    rbx,QWORD PTR [rdi+0x38]
  402c2f:	test   rbx,rbx
  402c32:	je     0x402c7b
  402c34:	lea    rcx,[rip+0x1cbd6]        # 0x41f811
  402c3b:	call   0x401560
  402c40:	mov    ecx,DWORD PTR [rbx]
  402c42:	cmp    ecx,0xffffffff
  402c45:	je     0x402c6f
  402c47:	nop    WORD PTR [rax+rax*1+0x0]
  402c50:	call   0x412360
  402c55:	lea    rcx,[rip+0x1cb95]        # 0x41f7f1
  402c5c:	add    rbx,0x4
  402c60:	mov    rdx,rax
  402c63:	call   0x401560
  402c68:	mov    ecx,DWORD PTR [rbx]
  402c6a:	cmp    ecx,0xffffffff
  402c6d:	jne    0x402c50
  402c6f:	lea    rcx,[rip+0x1c9d6]        # 0x41f64c
  402c76:	call   0x401560
  402c7b:	mov    rsi,QWORD PTR [rdi+0x40]
  402c7f:	test   rsi,rsi
  402c82:	je     0x402cd7
  402c84:	lea    rcx,[rip+0x1cba5]        # 0x41f830
  402c8b:	lea    rbx,[rsp+0x20]
  402c90:	call   0x401560
  402c95:	mov    r9,QWORD PTR [rsi]
  402c98:	test   r9,r9
  402c9b:	je     0x402ccb
  402c9d:	nop    DWORD PTR [rax]
  402ca0:	xor    r8d,r8d
  402ca3:	mov    edx,0x80
  402ca8:	mov    rcx,rbx
  402cab:	call   0x4123a0
  402cb0:	lea    rcx,[rip+0x1cb3a]        # 0x41f7f1
  402cb7:	add    rsi,0x8
  402cbb:	mov    rdx,rbx
  402cbe:	call   0x401560
  402cc3:	mov    r9,QWORD PTR [rsi]
  402cc6:	test   r9,r9
  402cc9:	jne    0x402ca0
  402ccb:	lea    rcx,[rip+0x1c97a]        # 0x41f64c
  402cd2:	call   0x401560
  402cd7:	mov    rcx,QWORD PTR [rdi+0x50]
  402cdb:	test   rcx,rcx
  402cde:	je     0x402ceb
  402ce0:	mov    edx,0x3
  402ce5:	call   0x4026c0
  402cea:	nop
  402ceb:	add    rsp,0xa0
  402cf2:	pop    rbx
  402cf3:	pop    rsi
  402cf4:	pop    rdi
  402cf5:	ret    
  402cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d00:	lea    rcx,[rip+0x1ca70]        # 0x41f777
  402d07:	call   0x401560
  402d0c:	mov    eax,DWORD PTR [rdi+0x18]
  402d0f:	and    eax,0x3000
  402d14:	cmp    eax,0x2000
  402d19:	je     0x402d62
  402d1b:	cmp    eax,0x3000
  402d20:	je     0x402d54
  402d22:	cmp    eax,0x1000
  402d27:	je     0x402d46
  402d29:	lea    rcx,[rip+0x1ca80]        # 0x41f7b0
  402d30:	call   0x401560
  402d35:	lea    rcx,[rip+0x1c910]        # 0x41f64c
  402d3c:	call   0x401560
  402d41:	jmp    0x402b41
  402d46:	lea    rcx,[rip+0x1ca57]        # 0x41f7a4
  402d4d:	call   0x401560
  402d52:	jmp    0x402d35
  402d54:	lea    rcx,[rip+0x1ca39]        # 0x41f794
  402d5b:	call   0x401560
  402d60:	jmp    0x402d35
  402d62:	lea    rcx,[rip+0x1ca41]        # 0x41f7aa
  402d69:	call   0x401560
  402d6e:	jmp    0x402d35
  402d70:	push   r13
  402d72:	push   r12
  402d74:	push   rbp
  402d75:	push   rdi
  402d76:	push   rsi
  402d77:	push   rbx
  402d78:	sub    rsp,0x38
  402d7c:	test   rcx,rcx
  402d7f:	je     0x402ec7
  402d85:	test   edx,edx
  402d87:	mov    edi,edx
  402d89:	mov    rbp,rcx
  402d8c:	jne    0x402db0
  402d8e:	call   0x4120a8
  402d93:	mov    rbx,rax
  402d96:	test   rbx,rbx
  402d99:	je     0x402dbd
  402d9b:	mov    rcx,rbx
  402d9e:	add    rsp,0x38
  402da2:	pop    rbx
  402da3:	pop    rsi
  402da4:	pop    rdi
  402da5:	pop    rbp
  402da6:	pop    r12
  402da8:	pop    r13
  402daa:	jmp    0x402af0
  402daf:	nop
  402db0:	call   0x412098
  402db5:	mov    rbx,rax
  402db8:	test   rbx,rbx
  402dbb:	jne    0x402d9b
  402dbd:	mov    rcx,rbp
  402dc0:	xor    r12d,r12d
  402dc3:	call   0x4120c0
  402dc8:	test   rax,rax
  402dcb:	mov    r13,rax
  402dce:	je     0x402ea5
  402dd4:	test   edi,edi
  402dd6:	mov    esi,DWORD PTR [r13+0x0]
  402dda:	jne    0x402e20
  402ddc:	nop    DWORD PTR [rax+0x0]
  402de0:	mov    rcx,rbx
  402de3:	call   0x412128
  402de8:	test   rax,rax
  402deb:	mov    rbx,rax
  402dee:	je     0x402e70
  402df4:	cmp    esi,DWORD PTR [rax+0x14]
  402df7:	jne    0x402de0
  402df9:	mov    rcx,rax
  402dfc:	call   0x412138
  402e01:	test   eax,eax
  402e03:	je     0x402de0
  402e05:	mov    rcx,rbx
  402e08:	mov    r12d,0x1
  402e0e:	call   0x402af0
  402e13:	test   edi,edi
  402e15:	mov    esi,DWORD PTR [r13+0x0]
  402e19:	je     0x402de0
  402e1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e20:	mov    rcx,rbx
  402e23:	call   0x412128
  402e28:	test   rax,rax
  402e2b:	mov    rbx,rax
  402e2e:	je     0x402e51
  402e30:	cmp    esi,DWORD PTR [rbx+0x14]
  402e33:	jne    0x402e20
  402e35:	mov    rcx,rbx
  402e38:	call   0x412130
  402e3d:	test   eax,eax
  402e3f:	jne    0x402e05
  402e41:	mov    rcx,rbx
  402e44:	call   0x412128
  402e49:	test   rax,rax
  402e4c:	mov    rbx,rax
  402e4f:	jne    0x402e30
  402e51:	test   r12d,r12d
  402e54:	lea    rax,[rip+0x1c9f4]        # 0x41f84f
  402e5b:	je     0x402e7c
  402e5d:	add    rsp,0x38
  402e61:	pop    rbx
  402e62:	pop    rsi
  402e63:	pop    rdi
  402e64:	pop    rbp
  402e65:	pop    r12
  402e67:	pop    r13
  402e69:	ret    
  402e6a:	nop    WORD PTR [rax+rax*1+0x0]
  402e70:	test   r12d,r12d
  402e73:	lea    rax,[rip+0x1c9de]        # 0x41f858
  402e7a:	jne    0x402e98
  402e7c:	lea    r8,[rip+0x1c9fd]        # 0x41f880
  402e83:	mov    QWORD PTR [rsp+0x20],rax
  402e88:	mov    r9,rbp
  402e8b:	mov    edx,0x10
  402e90:	xor    ecx,ecx
  402e92:	call   0x412308
  402e97:	nop
  402e98:	add    rsp,0x38
  402e9c:	pop    rbx
  402e9d:	pop    rsi
  402e9e:	pop    rdi
  402e9f:	pop    rbp
  402ea0:	pop    r12
  402ea2:	pop    r13
  402ea4:	ret    
  402ea5:	lea    r8,[rip+0x1ca5c]        # 0x41f908
  402eac:	mov    r9,rbp
  402eaf:	mov    edx,0x10
  402eb4:	xor    ecx,ecx
  402eb6:	add    rsp,0x38
  402eba:	pop    rbx
  402ebb:	pop    rsi
  402ebc:	pop    rdi
  402ebd:	pop    rbp
  402ebe:	pop    r12
  402ec0:	pop    r13
  402ec2:	jmp    0x412308
  402ec7:	lea    r8,[rip+0x1c993]        # 0x41f861
  402ece:	mov    edx,0x10
  402ed3:	add    rsp,0x38
  402ed7:	pop    rbx
  402ed8:	pop    rsi
  402ed9:	pop    rdi
  402eda:	pop    rbp
  402edb:	pop    r12
  402edd:	pop    r13
  402edf:	jmp    0x412308
  402ee4:	xchg   ax,ax
  402ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ef0:	push   r15
  402ef2:	push   r14
  402ef4:	push   r13
  402ef6:	push   r12
  402ef8:	push   rbp
  402ef9:	push   rdi
  402efa:	push   rsi
  402efb:	push   rbx
  402efc:	sub    rsp,0x98
  402f03:	mov    rbp,rdx
  402f06:	mov    QWORD PTR [rsp+0xe0],rcx
  402f0e:	mov    edx,0x3a
  402f13:	mov    rcx,rbp
  402f16:	mov    r13,r8
  402f19:	mov    rsi,r9
  402f1c:	call   0x419860
  402f21:	test   rax,rax
  402f24:	mov    r14,rax
  402f27:	je     0x403220
  402f2d:	mov    edi,eax
  402f2f:	sub    edi,ebp
  402f31:	mov    r12,QWORD PTR [rsi]
  402f34:	test   r12,r12
  402f37:	je     0x4033a0
  402f3d:	movsxd rdi,edi
  402f40:	mov    rbx,rsi
  402f43:	mov    r15,r12
  402f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f50:	mov    r8,rdi
  402f53:	mov    rdx,r15
  402f56:	mov    rcx,rbp
  402f59:	call   0x419830
  402f5e:	test   eax,eax
  402f60:	jne    0x402f73
  402f62:	mov    rcx,r15
  402f65:	call   0x419840
  402f6a:	cmp    rax,rdi
  402f6d:	je     0x402ff1
  402f73:	add    rbx,0x28
  402f77:	mov    r15,QWORD PTR [rbx]
  402f7a:	test   r15,r15
  402f7d:	jne    0x402f50
  402f7f:	cmp    BYTE PTR [rbp+0x0],0x6e
  402f83:	je     0x4032f0
  402f89:	test   BYTE PTR [rbx+0x8],0x2
  402f8d:	lea    rax,[rip+0x1c99d]        # 0x41f931
  402f94:	cmovne r13,rax
  402f98:	test   r12,r12
  402f9b:	je     0x402fd1
  402f9d:	mov    rbx,rsi
  402fa0:	lea    rsi,[rip+0x1c98e]        # 0x41f935
  402fa7:	mov    rdi,r12
  402faa:	mov    ecx,0x7
  402faf:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402fb1:	jne    0x402fc5
  402fb3:	mov    rcx,r12
  402fb6:	call   0x419840
  402fbb:	cmp    rax,0x7
  402fbf:	je     0x4033a8
  402fc5:	add    rbx,0x28
  402fc9:	mov    r12,QWORD PTR [rbx]
  402fcc:	test   r12,r12
  402fcf:	jne    0x402fa0
  402fd1:	lea    r8,[rip+0x1c965]        # 0x41f93d
  402fd8:	mov    r9,rbp
  402fdb:	mov    edx,0x10
  402fe0:	xor    ecx,ecx
  402fe2:	call   0x412308
  402fe7:	mov    eax,0xffffffea
  402fec:	jmp    0x40316d
  402ff1:	mov    edx,DWORD PTR [rbx+0x8]
  402ff4:	test   dl,0x2
  402ff7:	jne    0x4032e0
  402ffd:	test   r13,r13
  403000:	mov    edx,DWORD PTR [rbx+0x8]
  403003:	jne    0x40300e
  403005:	test   dl,0x1
  403008:	jne    0x403377
  40300e:	test   dh,0xc0
  403011:	jne    0x403090
  403013:	mov    eax,edx
  403015:	and    dh,0x80
  403018:	mov    rsi,QWORD PTR [rbx+0x10]
  40301c:	jne    0x4030a7
  403022:	test   al,0x8
  403024:	jne    0x40313f
  40302a:	test   BYTE PTR [rbx+0x8],0x82
  40302e:	jne    0x403181
  403034:	test   ah,0x4
  403037:	jne    0x403230
  40303d:	test   eax,0x10000
  403042:	jne    0x403291
  403048:	test   ah,0x1
  40304b:	jne    0x4031e8
  403051:	test   eax,0x20000
  403056:	jne    0x4032b3
  40305c:	mov    r9,QWORD PTR [rbx+0x10]
  403060:	test   r9,r9
  403063:	je     0x403161
  403069:	mov    r8,r13
  40306c:	mov    rdx,rbp
  40306f:	mov    rcx,QWORD PTR [rsp+0xe0]
  403077:	call   r9
  40307a:	test   eax,eax
  40307c:	mov    esi,eax
  40307e:	js     0x4033b6
  403084:	mov    eax,DWORD PTR [rbx+0x8]
  403087:	jmp    0x403161
  40308c:	nop    DWORD PTR [rax+0x0]
  403090:	mov    rsi,QWORD PTR [rsp+0xe0]
  403098:	mov    eax,edx
  40309a:	add    rsi,QWORD PTR [rbx+0x10]
  40309e:	and    dh,0x80
  4030a1:	je     0x403022
  4030a7:	mov    eax,DWORD PTR [rsi+0x8]
  4030aa:	mov    rcx,QWORD PTR [rsi]
  4030ad:	lea    edi,[rax+0x1]
  4030b0:	cmp    edi,0x7fffffe
  4030b6:	jg     0x403465
  4030bc:	movsxd rdx,edi
  4030bf:	mov    r8d,0x10
  4030c5:	call   0x412240
  4030ca:	test   rax,rax
  4030cd:	mov    r12,rax
  4030d0:	je     0x40341f
  4030d6:	mov    edx,DWORD PTR [rsi+0x8]
  4030d9:	mov    r8d,edi
  4030dc:	sub    r8d,edx
  4030df:	shl    edx,0x4
  4030e2:	shl    r8d,0x4
  4030e6:	movsxd rcx,edx
  4030e9:	xor    edx,edx
  4030eb:	add    rcx,rax
  4030ee:	movsxd r8,r8d
  4030f1:	call   0x419878
  4030f6:	lea    rax,[r14+0x1]
  4030fa:	lea    rcx,[rip+0x1c2c2]        # 0x41f3c3
  403101:	test   r14,r14
  403104:	mov    DWORD PTR [rsi+0x8],edi
  403107:	mov    QWORD PTR [rsi],r12
  40310a:	cmovne rcx,rax
  40310e:	call   0x412220
  403113:	test   rax,rax
  403116:	je     0x403401
  40311c:	movsxd rdx,DWORD PTR [rsi+0x8]
  403120:	mov    rcx,QWORD PTR [rsi]
  403123:	shl    rdx,0x4
  403127:	mov    QWORD PTR [rcx+rdx*1-0x10],rax
  40312c:	mov    rax,QWORD PTR [rsi]
  40312f:	lea    rsi,[rax+rdx*1-0x8]
  403134:	mov    eax,DWORD PTR [rbx+0x8]
  403137:	test   al,0x8
  403139:	je     0x40302a
  40313f:	mov    rcx,r13
  403142:	call   0x412220
  403147:	mov    rcx,rsi
  40314a:	mov    rdi,rax
  40314d:	call   0x4123b8
  403152:	test   rdi,rdi
  403155:	je     0x403401
  40315b:	mov    eax,DWORD PTR [rbx+0x8]
  40315e:	mov    QWORD PTR [rsi],rdi
  403161:	test   ah,0x8
  403164:	jne    0x403418
  40316a:	and    eax,0x1
  40316d:	add    rsp,0x98
  403174:	pop    rbx
  403175:	pop    rsi
  403176:	pop    rdi
  403177:	pop    rbp
  403178:	pop    r12
  40317a:	pop    r13
  40317c:	pop    r14
  40317e:	pop    r15
  403180:	ret    
  403181:	lea    rdx,[rsp+0x50]
  403186:	mov    rcx,r13
  403189:	call   0x4121f8
  40318e:	mov    rax,QWORD PTR [rsp+0x50]
  403193:	cmp    BYTE PTR [rax],0x0
  403196:	jne    0x403530
  40319c:	movsd  xmm1,QWORD PTR [rip+0x1dc44]        # 0x420de8
  4031a4:	ucomisd xmm1,xmm0
  4031a8:	ja     0x40353c
  4031ae:	ucomisd xmm0,QWORD PTR [rip+0x1dc3a]        # 0x420df0
  4031b6:	ja     0x40353c
  4031bc:	cvttsd2si rax,xmm0
  4031c1:	pxor   xmm1,xmm1
  4031c5:	cvtsi2sd xmm1,rax
  4031ca:	ucomisd xmm0,xmm1
  4031ce:	jp     0x403424
  4031d4:	jne    0x403424
  4031da:	cvttsd2si eax,xmm0
  4031de:	mov    DWORD PTR [rsi],eax
  4031e0:	mov    eax,DWORD PTR [rbx+0x8]
  4031e3:	jmp    0x403161
  4031e8:	lea    rdx,[rsp+0x50]
  4031ed:	mov    rcx,r13
  4031f0:	call   0x4121f8
  4031f5:	mov    rax,QWORD PTR [rsp+0x50]
  4031fa:	cmp    BYTE PTR [rax],0x0
  4031fd:	jne    0x4034e8
  403203:	pxor   xmm2,xmm2
  403207:	mov    eax,DWORD PTR [rbx+0x8]
  40320a:	cvtsd2ss xmm2,xmm0
  40320e:	movss  DWORD PTR [rsi],xmm2
  403212:	jmp    0x403161
  403217:	nop    WORD PTR [rax+rax*1+0x0]
  403220:	mov    rcx,rbp
  403223:	call   0x419840
  403228:	mov    edi,eax
  40322a:	jmp    0x402f31
  40322f:	nop
  403230:	lea    rdx,[rsp+0x50]
  403235:	mov    rcx,r13
  403238:	call   0x4121f8
  40323d:	mov    rax,QWORD PTR [rsp+0x50]
  403242:	cmp    BYTE PTR [rax],0x0
  403245:	jne    0x403524
  40324b:	movsd  xmm1,QWORD PTR [rip+0x1dba5]        # 0x420df8
  403253:	ucomisd xmm1,xmm0
  403257:	ja     0x403518
  40325d:	ucomisd xmm0,QWORD PTR [rip+0x1db9b]        # 0x420e00
  403265:	ja     0x403518
  40326b:	cvttsd2si rax,xmm0
  403270:	pxor   xmm1,xmm1
  403274:	cvtsi2sd xmm1,rax
  403279:	ucomisd xmm0,xmm1
  40327d:	jp     0x403493
  403283:	jne    0x403493
  403289:	mov    QWORD PTR [rsi],rax
  40328c:	jmp    0x403084
  403291:	lea    rcx,[rsp+0x50]
  403296:	mov    r8d,0x1
  40329c:	mov    rdx,r13
  40329f:	call   0x412258
  4032a4:	test   eax,eax
  4032a6:	js     0x403482
  4032ac:	mov    rax,QWORD PTR [rsp+0x50]
  4032b1:	jmp    0x403289
  4032b3:	lea    rdx,[rsp+0x50]
  4032b8:	mov    rcx,r13
  4032bb:	call   0x4121f8
  4032c0:	mov    rax,QWORD PTR [rsp+0x50]
  4032c5:	cmp    BYTE PTR [rax],0x0
  4032c8:	jne    0x4034b8
  4032ce:	movsd  QWORD PTR [rsi],xmm0
  4032d2:	mov    eax,DWORD PTR [rbx+0x8]
  4032d5:	jmp    0x403161
  4032da:	nop    WORD PTR [rax+rax*1+0x0]
  4032e0:	lea    r13,[rip+0x1c64a]        # 0x41f931
  4032e7:	jmp    0x40300e
  4032ec:	nop    DWORD PTR [rax+0x0]
  4032f0:	cmp    BYTE PTR [rbp+0x1],0x6f
  4032f4:	jne    0x402f89
  4032fa:	lea    r15,[rbp+0x2]
  4032fe:	mov    edx,0x3a
  403303:	mov    rcx,r15
  403306:	call   0x419860
  40330b:	test   rax,rax
  40330e:	je     0x40340b
  403314:	sub    eax,r15d
  403317:	test   r12,r12
  40331a:	je     0x402fd1
  403320:	cdqe   
  403322:	mov    rbx,rsi
  403325:	mov    rdi,r12
  403328:	mov    QWORD PTR [rsp+0x48],rax
  40332d:	jmp    0x403340
  40332f:	nop
  403330:	add    rbx,0x28
  403334:	mov    rdi,QWORD PTR [rbx]
  403337:	test   rdi,rdi
  40333a:	je     0x402f98
  403340:	mov    r8,QWORD PTR [rsp+0x48]
  403345:	mov    rdx,rdi
  403348:	mov    rcx,r15
  40334b:	call   0x419830
  403350:	test   eax,eax
  403352:	jne    0x403330
  403354:	mov    rcx,rdi
  403357:	call   0x419840
  40335c:	cmp    rax,QWORD PTR [rsp+0x48]
  403361:	jne    0x403330
  403363:	test   BYTE PTR [rbx+0x8],0x2
  403367:	lea    rax,[rip+0x1c5c5]        # 0x41f933
  40336e:	cmovne r13,rax
  403372:	jmp    0x402ffd
  403377:	lea    r8,[rip+0x1c5da]        # 0x41f958
  40337e:	mov    r9,rbp
  403381:	mov    edx,0x10
  403386:	xor    ecx,ecx
  403388:	call   0x412308
  40338d:	mov    eax,0xffffffea
  403392:	jmp    0x40316d
  403397:	nop    WORD PTR [rax+rax*1+0x0]
  4033a0:	mov    rbx,rsi
  4033a3:	jmp    0x402f7f
  4033a8:	test   r12,r12
  4033ab:	jne    0x402ffd
  4033b1:	jmp    0x402fd1
  4033b6:	lea    rbx,[rsp+0x50]
  4033bb:	lea    rdi,[rsp+0x50]
  4033c0:	xor    eax,eax
  4033c2:	mov    ecx,0x8
  4033c7:	mov    r8d,0x40
  4033cd:	rep stos QWORD PTR es:[rdi],rax
  4033d0:	mov    rdx,rbx
  4033d3:	mov    ecx,esi
  4033d5:	call   0x412218
  4033da:	lea    r8,[rip+0x1c5af]        # 0x41f990
  4033e1:	mov    QWORD PTR [rsp+0x28],rbx
  4033e6:	mov    QWORD PTR [rsp+0x20],rbp
  4033eb:	mov    r9,r13
  4033ee:	mov    edx,0x10
  4033f3:	xor    ecx,ecx
  4033f5:	call   0x412308
  4033fa:	mov    eax,esi
  4033fc:	jmp    0x40316d
  403401:	mov    eax,0xfffffff4
  403406:	jmp    0x40316d
  40340b:	mov    rcx,r15
  40340e:	call   0x419840
  403413:	jmp    0x403317
  403418:	xor    ecx,ecx
  40341a:	call   0x401cb0
  40341f:	call   0x419c16
  403424:	lea    r8,[rip+0x1c2d5]        # 0x41f700
  40342b:	movsd  xmm3,QWORD PTR [rip+0x1d9bd]        # 0x420df0
  403433:	movsd  xmm4,QWORD PTR [rip+0x1d9ad]        # 0x420de8
  40343b:	movsd  QWORD PTR [rsp+0x30],xmm3
  403441:	movsd  QWORD PTR [rsp+0x28],xmm4
  403447:	mov    QWORD PTR [rsp+0x20],r13
  40344c:	mov    r9,rbp
  40344f:	xor    ecx,ecx
  403451:	mov    edx,0x8
  403456:	call   0x412308
  40345b:	mov    ecx,0x1
  403460:	call   0x401cb0
  403465:	lea    r8,[rip+0x1c50e]        # 0x41f97a
  40346c:	xor    ecx,ecx
  40346e:	mov    edx,0x10
  403473:	call   0x412308
  403478:	mov    ecx,0x1
  40347d:	call   0x401cb0
  403482:	mov    r8d,0x1
  403488:	mov    rdx,r13
  40348b:	mov    rcx,rbp
  40348e:	call   0x419bd5
  403493:	lea    r8,[rip+0x1c266]        # 0x41f700
  40349a:	movsd  xmm5,QWORD PTR [rip+0x1d95e]        # 0x420e00
  4034a2:	movsd  xmm3,QWORD PTR [rip+0x1d94e]        # 0x420df8
  4034aa:	movsd  QWORD PTR [rsp+0x30],xmm5
  4034b0:	movsd  QWORD PTR [rsp+0x28],xmm3
  4034b6:	jmp    0x403447
  4034b8:	movsd  xmm3,QWORD PTR [rip+0x1d948]        # 0x420e08
  4034c0:	mov    QWORD PTR [rsp+0x20],r13
  4034c5:	movsd  xmm4,QWORD PTR [rip+0x1d943]        # 0x420e10
  4034cd:	mov    r9,rbp
  4034d0:	movsd  QWORD PTR [rsp+0x30],xmm3
  4034d6:	lea    r8,[rip+0x1c1c3]        # 0x41f6a0
  4034dd:	movsd  QWORD PTR [rsp+0x28],xmm4
  4034e3:	jmp    0x40344f
  4034e8:	movsd  xmm4,QWORD PTR [rip+0x1d918]        # 0x420e08
  4034f0:	mov    QWORD PTR [rsp+0x20],r13
  4034f5:	movsd  xmm5,QWORD PTR [rip+0x1d913]        # 0x420e10
  4034fd:	mov    r9,rbp
  403500:	movsd  QWORD PTR [rsp+0x30],xmm4
  403506:	lea    r8,[rip+0x1c193]        # 0x41f6a0
  40350d:	movsd  QWORD PTR [rsp+0x28],xmm5
  403513:	jmp    0x40344f
  403518:	lea    r8,[rip+0x1c1a9]        # 0x41f6c8
  40351f:	jmp    0x40349a
  403524:	lea    r8,[rip+0x1c175]        # 0x41f6a0
  40352b:	jmp    0x40349a
  403530:	lea    r8,[rip+0x1c169]        # 0x41f6a0
  403537:	jmp    0x40342b
  40353c:	lea    r8,[rip+0x1c185]        # 0x41f6c8
  403543:	jmp    0x40342b
  403548:	nop    DWORD PTR [rax+rax*1+0x0]
  403550:	push   r12
  403552:	push   rbp
  403553:	push   rdi
  403554:	push   rsi
  403555:	push   rbx
  403556:	sub    rsp,0x20
  40355a:	mov    rax,QWORD PTR [rip+0x25adf]        # 0x429040
  403561:	mov    rdi,QWORD PTR [rsp+0x70]
  403566:	mov    rbx,rcx
  403569:	mov    DWORD PTR [rsp+0x58],edx
  40356d:	mov    QWORD PTR [rsp+0x60],r8
  403572:	mov    rsi,r9
  403575:	test   rax,rax
  403578:	je     0x4036a8
  40357e:	mov    ecx,DWORD PTR [rip+0x25ab4]        # 0x429038
  403584:	mov    QWORD PTR [rsp+0x60],rax
  403589:	mov    DWORD PTR [rsp+0x58],ecx
  40358d:	test   rdi,rdi
  403590:	je     0x403630
  403596:	mov    r12d,0x1
  40359c:	mov    eax,0x1
  4035a1:	cmp    eax,ecx
  4035a3:	jge    0x4035d4
  4035a5:	mov    r8,QWORD PTR [rsp+0x60]
  4035aa:	lea    ebp,[rax+0x1]
  4035ad:	test   r12d,r12d
  4035b0:	cdqe   
  4035b2:	lea    r10,[rax*8+0x0]
  4035ba:	mov    rdx,QWORD PTR [r8+rax*8]
  4035be:	je     0x4035c5
  4035c0:	cmp    BYTE PTR [rdx],0x2d
  4035c3:	je     0x4035e0
  4035c5:	mov    rcx,rbx
  4035c8:	call   rdi
  4035ca:	mov    ecx,DWORD PTR [rsp+0x58]
  4035ce:	mov    eax,ebp
  4035d0:	cmp    eax,ecx
  4035d2:	jl     0x4035a5
  4035d4:	add    rsp,0x20
  4035d8:	pop    rbx
  4035d9:	pop    rsi
  4035da:	pop    rdi
  4035db:	pop    rbp
  4035dc:	pop    r12
  4035de:	ret    
  4035df:	nop
  4035e0:	movzx  eax,BYTE PTR [rdx+0x1]
  4035e4:	test   al,al
  4035e6:	je     0x4035c5
  4035e8:	cmp    al,0x2d
  4035ea:	jne    0x4035f2
  4035ec:	cmp    BYTE PTR [rdx+0x2],0x0
  4035f0:	je     0x403620
  4035f2:	mov    r8,QWORD PTR [r8+r10*1+0x8]
  4035f7:	add    rdx,0x1
  4035fb:	mov    r9,rsi
  4035fe:	mov    rcx,rbx
  403601:	call   0x402ef0
  403606:	test   eax,eax
  403608:	js     0x4036c0
  40360e:	add    eax,ebp
  403610:	mov    ecx,DWORD PTR [rsp+0x58]
  403614:	mov    r12d,0x1
  40361a:	jmp    0x4035a1
  40361c:	nop    DWORD PTR [rax+0x0]
  403620:	mov    eax,ebp
  403622:	xor    r12d,r12d
  403625:	jmp    0x4035a1
  40362a:	nop    WORD PTR [rax+rax*1+0x0]
  403630:	mov    edx,0x1
  403635:	mov    eax,0x1
  40363a:	jmp    0x403643
  40363c:	nop    DWORD PTR [rax+0x0]
  403640:	movsxd rax,edi
  403643:	cmp    eax,ecx
  403645:	jge    0x4035d4
  403647:	mov    r8,QWORD PTR [rsp+0x60]
  40364c:	test   edx,edx
  40364e:	lea    edi,[rax+0x1]
  403651:	lea    r10,[rax*8+0x0]
  403659:	mov    rax,QWORD PTR [r8+rax*8]
  40365d:	je     0x403640
  40365f:	cmp    BYTE PTR [rax],0x2d
  403662:	mov    edx,0x1
  403667:	jne    0x403640
  403669:	movzx  r9d,BYTE PTR [rax+0x1]
  40366e:	test   r9b,r9b
  403671:	je     0x403640
  403673:	cmp    r9b,0x2d
  403677:	jne    0x40367f
  403679:	cmp    BYTE PTR [rax+0x2],0x0
  40367d:	je     0x4036a4
  40367f:	mov    r8,QWORD PTR [r8+r10*1+0x8]
  403684:	lea    rdx,[rax+0x1]
  403688:	mov    r9,rsi
  40368b:	mov    rcx,rbx
  40368e:	call   0x402ef0
  403693:	test   eax,eax
  403695:	js     0x4036c0
  403697:	add    edi,eax
  403699:	mov    ecx,DWORD PTR [rsp+0x58]
  40369d:	mov    edx,0x1
  4036a2:	jmp    0x403640
  4036a4:	xor    edx,edx
  4036a6:	jmp    0x403640
  4036a8:	lea    rcx,[rsp+0x58]
  4036ad:	lea    rdx,[rsp+0x60]
  4036b2:	call   0x401910
  4036b7:	mov    ecx,DWORD PTR [rsp+0x58]
  4036bb:	jmp    0x40358d
  4036c0:	mov    ecx,0x1
  4036c5:	call   0x401cb0
  4036ca:	nop
  4036cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4036d0:	push   r15
  4036d2:	push   r14
  4036d4:	push   r13
  4036d6:	push   r12
  4036d8:	push   rbp
  4036d9:	push   rdi
  4036da:	push   rsi
  4036db:	push   rbx
  4036dc:	sub    rsp,0xe8
  4036e3:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  4036eb:	movaps XMMWORD PTR [rsp+0xb0],xmm7
  4036f3:	movaps XMMWORD PTR [rsp+0xc0],xmm8
  4036fc:	movaps XMMWORD PTR [rsp+0xd0],xmm9
  403705:	lea    r8,[rip+0x1c2b4]        # 0x41f9c0
  40370c:	xor    ebp,ebp
  40370e:	xor    r12d,r12d
  403711:	mov    rdi,rdx
  403714:	mov    r15,rcx
  403717:	xor    ecx,ecx
  403719:	mov    rax,QWORD PTR [rdx]
  40371c:	mov    rdx,QWORD PTR [rdx+0x8]
  403720:	mov    QWORD PTR [rsp+0x20],rdx
  403725:	mov    r9,QWORD PTR [rax]
  403728:	mov    edx,0x30
  40372d:	call   0x412308
  403732:	mov    eax,DWORD PTR [rdi+0x18]
  403735:	test   eax,eax
  403737:	jle    0x403aa0
  40373d:	lea    rax,[rsp+0x60]
  403742:	movsd  xmm9,QWORD PTR [rip+0x1d6ad]        # 0x420df8
  40374b:	movsd  xmm8,QWORD PTR [rip+0x1d6ac]        # 0x420e00
  403754:	mov    QWORD PTR [rsp+0x40],rax
  403759:	movsd  xmm7,QWORD PTR [rip+0x1d687]        # 0x420de8
  403761:	movsd  xmm6,QWORD PTR [rip+0x1d687]        # 0x420df0
  403769:	jmp    0x4037f7
  40376e:	xchg   ax,ax
  403770:	mov    rsi,r15
  403773:	mov    eax,edx
  403775:	add    rsi,QWORD PTR [rbx+0x10]
  403779:	and    dh,0x80
  40377c:	jne    0x403863
  403782:	test   al,0x8
  403784:	jne    0x40393d
  40378a:	test   BYTE PTR [rbx+0x8],0x82
  40378e:	jne    0x403964
  403794:	test   ah,0x4
  403797:	jne    0x4039c0
  40379d:	test   eax,0x10000
  4037a2:	jne    0x403a20
  4037a8:	test   ah,0x1
  4037ab:	jne    0x403a42
  4037b1:	test   eax,0x20000
  4037b6:	jne    0x403a71
  4037bc:	mov    r9,QWORD PTR [rbx+0x10]
  4037c0:	test   r9,r9
  4037c3:	je     0x4037dc
  4037c5:	mov    r8,r13
  4037c8:	mov    rdx,r14
  4037cb:	mov    rcx,r15
  4037ce:	call   r9
  4037d1:	test   eax,eax
  4037d3:	js     0x403b28
  4037d9:	mov    eax,DWORD PTR [rbx+0x8]
  4037dc:	test   ah,0x8
  4037df:	jne    0x403b81
  4037e5:	add    r12d,0x1
  4037e9:	add    rbp,0x18
  4037ed:	cmp    DWORD PTR [rdi+0x18],r12d
  4037f1:	jle    0x403aa0
  4037f7:	mov    rcx,QWORD PTR [rdi]
  4037fa:	mov    rbx,rbp
  4037fd:	add    rbx,QWORD PTR [rdi+0x10]
  403801:	mov    eax,DWORD PTR [rcx+0x10]
  403804:	mov    rdx,QWORD PTR [rbx]
  403807:	test   eax,eax
  403809:	je     0x403814
  40380b:	test   DWORD PTR [rdx+0x8],eax
  40380e:	je     0x403af0
  403814:	mov    rax,QWORD PTR [rbx+0x10]
  403818:	mov    r9,QWORD PTR [rbx+0x8]
  40381c:	lea    r8,[rip+0x1c29d]        # 0x41fac0
  403823:	xor    ecx,ecx
  403825:	mov    QWORD PTR [rsp+0x28],rax
  40382a:	mov    rax,QWORD PTR [rdx+0x18]
  40382e:	mov    edx,0x30
  403833:	mov    QWORD PTR [rsp+0x20],rax
  403838:	call   0x412308
  40383d:	mov    r13,QWORD PTR [rbx+0x10]
  403841:	mov    r14,QWORD PTR [rbx+0x8]
  403845:	mov    rbx,QWORD PTR [rbx]
  403848:	mov    edx,DWORD PTR [rbx+0x8]
  40384b:	test   dh,0xc0
  40384e:	jne    0x403770
  403854:	mov    eax,edx
  403856:	and    dh,0x80
  403859:	mov    rsi,QWORD PTR [rbx+0x10]
  40385d:	je     0x403782
  403863:	mov    rcx,r14
  403866:	mov    edx,0x3a
  40386b:	call   0x419860
  403870:	mov    r10,rax
  403873:	mov    eax,DWORD PTR [rsi+0x8]
  403876:	mov    rcx,QWORD PTR [rsi]
  403879:	lea    r9d,[rax+0x1]
  40387d:	cmp    r9d,0x7fffffe
  403884:	jg     0x403c09
  40388a:	movsxd rdx,r9d
  40388d:	mov    r8d,0x10
  403893:	mov    QWORD PTR [rsp+0x50],r10
  403898:	mov    DWORD PTR [rsp+0x48],r9d
  40389d:	call   0x412240
  4038a2:	test   rax,rax
  4038a5:	mov    r9d,DWORD PTR [rsp+0x48]
  4038aa:	mov    r10,QWORD PTR [rsp+0x50]
  4038af:	je     0x403ca3
  4038b5:	mov    ecx,DWORD PTR [rsi+0x8]
  4038b8:	mov    r8d,r9d
  4038bb:	xor    edx,edx
  4038bd:	mov    QWORD PTR [rsp+0x58],r10
  4038c2:	mov    DWORD PTR [rsp+0x50],r9d
  4038c7:	mov    QWORD PTR [rsp+0x48],rax
  4038cc:	sub    r8d,ecx
  4038cf:	shl    ecx,0x4
  4038d2:	shl    r8d,0x4
  4038d6:	movsxd rcx,ecx
  4038d9:	add    rcx,rax
  4038dc:	movsxd r8,r8d
  4038df:	call   0x419878
  4038e4:	mov    r10,QWORD PTR [rsp+0x58]
  4038e9:	mov    r9d,DWORD PTR [rsp+0x50]
  4038ee:	lea    rax,[rip+0x1bace]        # 0x41f3c3
  4038f5:	mov    r11,QWORD PTR [rsp+0x48]
  4038fa:	lea    rcx,[r10+0x1]
  4038fe:	test   r10,r10
  403901:	mov    DWORD PTR [rsi+0x8],r9d
  403905:	mov    QWORD PTR [rsi],r11
  403908:	cmove  rcx,rax
  40390c:	call   0x412220
  403911:	test   rax,rax
  403914:	je     0x403b75
  40391a:	movsxd rdx,DWORD PTR [rsi+0x8]
  40391e:	mov    rcx,QWORD PTR [rsi]
  403921:	shl    rdx,0x4
  403925:	mov    QWORD PTR [rcx+rdx*1-0x10],rax
  40392a:	mov    rax,QWORD PTR [rsi]
  40392d:	lea    rsi,[rax+rdx*1-0x8]
  403932:	mov    eax,DWORD PTR [rbx+0x8]
  403935:	test   al,0x8
  403937:	je     0x40378a
  40393d:	mov    rcx,r13
  403940:	call   0x412220
  403945:	mov    rcx,rsi
  403948:	mov    r13,rax
  40394b:	call   0x4123b8
  403950:	test   r13,r13
  403953:	je     0x403b75
  403959:	mov    QWORD PTR [rsi],r13
  40395c:	mov    eax,DWORD PTR [rbx+0x8]
  40395f:	jmp    0x4037dc
  403964:	mov    rdx,QWORD PTR [rsp+0x40]
  403969:	mov    rcx,r13
  40396c:	call   0x4121f8
  403971:	mov    rax,QWORD PTR [rsp+0x60]
  403976:	cmp    BYTE PTR [rax],0x0
  403979:	jne    0x403c00
  40397f:	ucomisd xmm7,xmm0
  403983:	ja     0x403bc9
  403989:	ucomisd xmm0,xmm6
  40398d:	ja     0x403bc9
  403993:	cvttsd2si rax,xmm0
  403998:	pxor   xmm1,xmm1
  40399c:	cvtsi2sd xmm1,rax
  4039a1:	ucomisd xmm0,xmm1
  4039a5:	jp     0x403bf7
  4039ab:	jne    0x403bf7
  4039b1:	cvttsd2si eax,xmm0
  4039b5:	mov    DWORD PTR [rsi],eax
  4039b7:	mov    eax,DWORD PTR [rbx+0x8]
  4039ba:	jmp    0x4037dc
  4039bf:	nop
  4039c0:	mov    rdx,QWORD PTR [rsp+0x40]
  4039c5:	mov    rcx,r13
  4039c8:	call   0x4121f8
  4039cd:	mov    rax,QWORD PTR [rsp+0x60]
  4039d2:	cmp    BYTE PTR [rax],0x0
  4039d5:	jne    0x403bee
  4039db:	ucomisd xmm9,xmm0
  4039e0:	ja     0x403b88
  4039e6:	ucomisd xmm0,xmm8
  4039eb:	ja     0x403b88
  4039f1:	cvttsd2si rax,xmm0
  4039f6:	pxor   xmm1,xmm1
  4039fa:	cvtsi2sd xmm1,rax
  4039ff:	ucomisd xmm0,xmm1
  403a03:	jp     0x403c26
  403a09:	jne    0x403c26
  403a0f:	mov    QWORD PTR [rsi],rax
  403a12:	jmp    0x4037d9
  403a17:	nop    WORD PTR [rax+rax*1+0x0]
  403a20:	mov    rcx,QWORD PTR [rsp+0x40]
  403a25:	mov    r8d,0x1
  403a2b:	mov    rdx,r13
  403a2e:	call   0x412258
  403a33:	test   eax,eax
  403a35:	js     0x403c92
  403a3b:	mov    rax,QWORD PTR [rsp+0x60]
  403a40:	jmp    0x403a0f
  403a42:	mov    rdx,QWORD PTR [rsp+0x40]
  403a47:	mov    rcx,r13
  403a4a:	call   0x4121f8
  403a4f:	mov    rax,QWORD PTR [rsp+0x60]
  403a54:	cmp    BYTE PTR [rax],0x0
  403a57:	jne    0x403c62
  403a5d:	pxor   xmm2,xmm2
  403a61:	mov    eax,DWORD PTR [rbx+0x8]
  403a64:	cvtsd2ss xmm2,xmm0
  403a68:	movss  DWORD PTR [rsi],xmm2
  403a6c:	jmp    0x4037dc
  403a71:	mov    rdx,QWORD PTR [rsp+0x40]
  403a76:	mov    rcx,r13
  403a79:	call   0x4121f8
  403a7e:	mov    rax,QWORD PTR [rsp+0x60]
  403a83:	cmp    BYTE PTR [rax],0x0
  403a86:	jne    0x403c32
  403a8c:	movsd  QWORD PTR [rsi],xmm0
  403a90:	mov    eax,DWORD PTR [rbx+0x8]
  403a93:	jmp    0x4037dc
  403a98:	nop    DWORD PTR [rax+rax*1+0x0]
  403aa0:	lea    r8,[rip+0x1bf41]        # 0x41f9e8
  403aa7:	mov    edx,0x30
  403aac:	xor    ecx,ecx
  403aae:	call   0x412308
  403ab3:	xor    eax,eax
  403ab5:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  403abd:	movaps xmm7,XMMWORD PTR [rsp+0xb0]
  403ac5:	movaps xmm8,XMMWORD PTR [rsp+0xc0]
  403ace:	movaps xmm9,XMMWORD PTR [rsp+0xd0]
  403ad7:	add    rsp,0xe8
  403ade:	pop    rbx
  403adf:	pop    rsi
  403ae0:	pop    rdi
  403ae1:	pop    rbp
  403ae2:	pop    r12
  403ae4:	pop    r13
  403ae6:	pop    r14
  403ae8:	pop    r15
  403aea:	ret    
  403aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  403af0:	mov    rax,QWORD PTR [rdi+0x8]
  403af4:	mov    r9,QWORD PTR [rbx+0x8]
  403af8:	lea    r8,[rip+0x1bf19]        # 0x41fa18
  403aff:	mov    QWORD PTR [rsp+0x30],rax
  403b04:	mov    rax,QWORD PTR [rcx]
  403b07:	xor    ecx,ecx
  403b09:	mov    QWORD PTR [rsp+0x28],rax
  403b0e:	mov    rax,QWORD PTR [rdx+0x18]
  403b12:	mov    edx,0x10
  403b17:	mov    QWORD PTR [rsp+0x20],rax
  403b1c:	call   0x412308
  403b21:	mov    eax,0xffffffea
  403b26:	jmp    0x403ab5
  403b28:	lea    rsi,[rsp+0x60]
  403b2d:	lea    rdi,[rsp+0x60]
  403b32:	mov    ebx,eax
  403b34:	mov    ecx,0x8
  403b39:	xor    eax,eax
  403b3b:	mov    r8d,0x40
  403b41:	rep stos QWORD PTR es:[rdi],rax
  403b44:	mov    rdx,rsi
  403b47:	mov    ecx,ebx
  403b49:	call   0x412218
  403b4e:	lea    r8,[rip+0x1be3b]        # 0x41f990
  403b55:	mov    QWORD PTR [rsp+0x28],rsi
  403b5a:	mov    QWORD PTR [rsp+0x20],r14
  403b5f:	mov    r9,r13
  403b62:	mov    edx,0x10
  403b67:	xor    ecx,ecx
  403b69:	call   0x412308
  403b6e:	mov    eax,ebx
  403b70:	jmp    0x403ab5
  403b75:	mov    ebx,0xfffffff4
  403b7a:	mov    eax,ebx
  403b7c:	jmp    0x403ab5
  403b81:	xor    ecx,ecx
  403b83:	call   0x401cb0
  403b88:	lea    r8,[rip+0x1bb39]        # 0x41f6c8
  403b8f:	movsd  xmm5,QWORD PTR [rip+0x1d269]        # 0x420e00
  403b97:	movsd  xmm3,QWORD PTR [rip+0x1d259]        # 0x420df8
  403b9f:	movsd  QWORD PTR [rsp+0x30],xmm5
  403ba5:	movsd  QWORD PTR [rsp+0x28],xmm3
  403bab:	mov    QWORD PTR [rsp+0x20],r13
  403bb0:	mov    r9,r14
  403bb3:	xor    ecx,ecx
  403bb5:	mov    edx,0x8
  403bba:	call   0x412308
  403bbf:	mov    ecx,0x1
  403bc4:	call   0x401cb0
  403bc9:	lea    r8,[rip+0x1baf8]        # 0x41f6c8
  403bd0:	movsd  xmm3,QWORD PTR [rip+0x1d218]        # 0x420df0
  403bd8:	movsd  xmm4,QWORD PTR [rip+0x1d208]        # 0x420de8
  403be0:	movsd  QWORD PTR [rsp+0x30],xmm3
  403be6:	movsd  QWORD PTR [rsp+0x28],xmm4
  403bec:	jmp    0x403bab
  403bee:	lea    r8,[rip+0x1baab]        # 0x41f6a0
  403bf5:	jmp    0x403b8f
  403bf7:	lea    r8,[rip+0x1bb02]        # 0x41f700
  403bfe:	jmp    0x403bd0
  403c00:	lea    r8,[rip+0x1ba99]        # 0x41f6a0
  403c07:	jmp    0x403bd0
  403c09:	lea    r8,[rip+0x1bd6a]        # 0x41f97a
  403c10:	xor    ecx,ecx
  403c12:	mov    edx,0x10
  403c17:	call   0x412308
  403c1c:	mov    ecx,0x1
  403c21:	call   0x401cb0
  403c26:	lea    r8,[rip+0x1bad3]        # 0x41f700
  403c2d:	jmp    0x403b8f
  403c32:	movsd  xmm3,QWORD PTR [rip+0x1d1ce]        # 0x420e08
  403c3a:	mov    QWORD PTR [rsp+0x20],r13
  403c3f:	movsd  xmm4,QWORD PTR [rip+0x1d1c9]        # 0x420e10
  403c47:	mov    r9,r14
  403c4a:	movsd  QWORD PTR [rsp+0x30],xmm3
  403c50:	lea    r8,[rip+0x1ba49]        # 0x41f6a0
  403c57:	movsd  QWORD PTR [rsp+0x28],xmm4
  403c5d:	jmp    0x403bb3
  403c62:	movsd  xmm4,QWORD PTR [rip+0x1d19e]        # 0x420e08
  403c6a:	mov    QWORD PTR [rsp+0x20],r13
  403c6f:	movsd  xmm5,QWORD PTR [rip+0x1d199]        # 0x420e10
  403c77:	mov    r9,r14
  403c7a:	movsd  QWORD PTR [rsp+0x30],xmm4
  403c80:	lea    r8,[rip+0x1ba19]        # 0x41f6a0
  403c87:	movsd  QWORD PTR [rsp+0x28],xmm5
  403c8d:	jmp    0x403bb3
  403c92:	mov    r8d,0x1
  403c98:	mov    rdx,r13
  403c9b:	mov    rcx,r14
  403c9e:	call   0x419bd5
  403ca3:	call   0x419c16
  403ca8:	nop
  403ca9:	nop    DWORD PTR [rax+0x0]
  403cb0:	push   r15
  403cb2:	push   r14
  403cb4:	push   r13
  403cb6:	push   r12
  403cb8:	push   rbp
  403cb9:	push   rdi
  403cba:	push   rsi
  403cbb:	push   rbx
  403cbc:	sub    rsp,0x48
  403cc0:	cmp    ecx,0x1
  403cc3:	jle    0x403d90
  403cc9:	mov    QWORD PTR [rsp+0x30],r9
  403cce:	mov    QWORD PTR [rsp+0x28],r8
  403cd3:	mov    r14,rdx
  403cd6:	mov    r13d,ecx
  403cd9:	mov    esi,0x1
  403cde:	jmp    0x403cec
  403ce0:	add    esi,0x1
  403ce3:	cmp    r13d,esi
  403ce6:	jle    0x403d90
  403cec:	movsxd rax,esi
  403cef:	mov    r12,QWORD PTR [r14+rax*8]
  403cf3:	cmp    BYTE PTR [r12],0x2d
  403cf8:	jne    0x403ce0
  403cfa:	lea    rbp,[r12+0x1]
  403cff:	mov    edx,0x3a
  403d04:	mov    rcx,rbp
  403d07:	call   0x419860
  403d0c:	test   rax,rax
  403d0f:	je     0x403dc4
  403d15:	sub    eax,ebp
  403d17:	mov    rbx,QWORD PTR [rsp+0x28]
  403d1c:	mov    rdx,QWORD PTR [rbx]
  403d1f:	test   rdx,rdx
  403d22:	mov    QWORD PTR [rsp+0x38],rdx
  403d27:	je     0x403d5b
  403d29:	movsxd rdi,eax
  403d2c:	mov    r15,rdx
  403d2f:	nop
  403d30:	mov    r8,rdi
  403d33:	mov    rdx,r15
  403d36:	mov    rcx,rbp
  403d39:	call   0x419830
  403d3e:	test   eax,eax
  403d40:	jne    0x403d4f
  403d42:	mov    rcx,r15
  403d45:	call   0x419840
  403d4a:	cmp    rax,rdi
  403d4d:	je     0x403da3
  403d4f:	add    rbx,0x28
  403d53:	mov    r15,QWORD PTR [rbx]
  403d56:	test   r15,r15
  403d59:	jne    0x403d30
  403d5b:	cmp    BYTE PTR [r12+0x1],0x6e
  403d61:	je     0x403dd1
  403d63:	mov    rdx,QWORD PTR [rsp+0x30]
  403d68:	mov    rcx,rbp
  403d6b:	call   0x419858
  403d70:	test   eax,eax
  403d72:	je     0x403e60
  403d78:	add    esi,0x1
  403d7b:	add    esi,0x1
  403d7e:	cmp    r13d,esi
  403d81:	jg     0x403cec
  403d87:	nop    WORD PTR [rax+rax*1+0x0]
  403d90:	xor    eax,eax
  403d92:	add    rsp,0x48
  403d96:	pop    rbx
  403d97:	pop    rsi
  403d98:	pop    rdi
  403d99:	pop    rbp
  403d9a:	pop    r12
  403d9c:	pop    r13
  403d9e:	pop    r14
  403da0:	pop    r15
  403da2:	ret    
  403da3:	mov    rdx,r15
  403da6:	mov    rcx,QWORD PTR [rsp+0x30]
  403dab:	call   0x419858
  403db0:	test   eax,eax
  403db2:	je     0x403e60
  403db8:	test   BYTE PTR [rbx+0x8],0x1
  403dbc:	je     0x403ce0
  403dc2:	jmp    0x403d78
  403dc4:	mov    rcx,rbp
  403dc7:	call   0x419840
  403dcc:	jmp    0x403d17
  403dd1:	cmp    BYTE PTR [r12+0x2],0x6f
  403dd7:	jne    0x403d63
  403dd9:	add    r12,0x3
  403ddd:	mov    edx,0x3a
  403de2:	mov    rcx,r12
  403de5:	call   0x419860
  403dea:	test   rax,rax
  403ded:	je     0x403e67
  403def:	mov    edi,eax
  403df1:	sub    edi,r12d
  403df4:	cmp    QWORD PTR [rsp+0x38],0x0
  403dfa:	je     0x403d63
  403e00:	movsxd rdi,edi
  403e03:	mov    rbx,QWORD PTR [rsp+0x28]
  403e08:	jmp    0x403e25
  403e0a:	nop    WORD PTR [rax+rax*1+0x0]
  403e10:	add    rbx,0x28
  403e14:	mov    rax,QWORD PTR [rbx]
  403e17:	test   rax,rax
  403e1a:	mov    QWORD PTR [rsp+0x38],rax
  403e1f:	je     0x403d63
  403e25:	mov    rdx,QWORD PTR [rsp+0x38]
  403e2a:	mov    r8,rdi
  403e2d:	mov    rcx,r12
  403e30:	call   0x419830
  403e35:	test   eax,eax
  403e37:	jne    0x403e10
  403e39:	mov    rcx,QWORD PTR [rsp+0x38]
  403e3e:	call   0x419840
  403e43:	cmp    rax,rdi
  403e46:	jne    0x403e10
  403e48:	mov    rdx,QWORD PTR [rsp+0x38]
  403e4d:	test   rdx,rdx
  403e50:	jne    0x403da6
  403e56:	jmp    0x403d63
  403e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403e60:	mov    eax,esi
  403e62:	jmp    0x403d92
  403e67:	mov    rcx,r12
  403e6a:	call   0x419840
  403e6f:	mov    edi,eax
  403e71:	jmp    0x403df4
  403e73:	nop    DWORD PTR [rax]
  403e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e80:	push   r13
  403e82:	push   r12
  403e84:	push   rbp
  403e85:	push   rdi
  403e86:	push   rsi
  403e87:	push   rbx
  403e88:	sub    rsp,0xe8
  403e8f:	lea    rdi,[rip+0x1bc55]        # 0x41faeb
  403e96:	mov    rbx,rdx
  403e99:	mov    rbp,r8
  403e9c:	mov    rsi,rbx
  403e9f:	call   0x412090
  403ea4:	mov    QWORD PTR [rsp+0x30],rax
  403ea9:	call   0x412008
  403eae:	mov    QWORD PTR [rsp+0x38],rax
  403eb3:	call   0x412150
  403eb8:	mov    ecx,0x6
  403ebd:	mov    QWORD PTR [rsp+0x40],rax
  403ec2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403ec4:	je     0x404142
  403eca:	lea    rdi,[rip+0x1bc20]        # 0x41faf1
  403ed1:	mov    ecx,0x7
  403ed6:	mov    rsi,rbx
  403ed9:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403edb:	je     0x404142
  403ee1:	mov    edx,0x3a
  403ee6:	mov    rcx,rbx
  403ee9:	call   0x419860
  403eee:	test   rax,rax
  403ef1:	je     0x404320
  403ef7:	sub    rax,rbx
  403efa:	lea    r12,[rsp+0x60]
  403eff:	mov    edx,0x80
  403f04:	lea    r8,[rax+0x1]
  403f08:	lea    rdi,[rsp+0x30]
  403f0d:	mov    rcx,r12
  403f10:	cmp    r8,0x80
  403f17:	cmova  r8,rdx
  403f1b:	mov    rdx,rbx
  403f1e:	call   0x412200
  403f23:	xor    r9d,r9d
  403f26:	xor    r8d,r8d
  403f29:	mov    DWORD PTR [rsp+0x20],0x3
  403f31:	mov    rdx,r12
  403f34:	mov    rcx,rdi
  403f37:	call   0x4122a0
  403f3c:	test   rax,rax
  403f3f:	je     0x403f4c
  403f41:	mov    ecx,DWORD PTR [rax+0x30]
  403f44:	test   ecx,ecx
  403f46:	jne    0x4040a1
  403f4c:	movzx  eax,BYTE PTR [rbx]
  403f4f:	cmp    al,0x61
  403f51:	sete   cl
  403f54:	cmp    al,0x76
  403f56:	sete   dl
  403f59:	or     cl,dl
  403f5b:	jne    0x404073
  403f61:	cmp    al,0x73
  403f63:	je     0x404073
  403f69:	lea    rcx,[rsp+0x38]
  403f6e:	xor    r9d,r9d
  403f71:	xor    r8d,r8d
  403f74:	mov    DWORD PTR [rsp+0x20],0x3
  403f7c:	mov    rdx,rbx
  403f7f:	call   0x4122a0
  403f84:	test   rax,rax
  403f87:	je     0x403f98
  403f89:	mov    r9d,DWORD PTR [rax+0x30]
  403f8d:	xor    edi,edi
  403f8f:	test   r9d,r9d
  403f92:	jne    0x4041c5
  403f98:	call   0x4121b8
  403f9d:	lea    rcx,[rsp+0x48]
  403fa2:	xor    r9d,r9d
  403fa5:	xor    r8d,r8d
  403fa8:	mov    DWORD PTR [rsp+0x20],0x3
  403fb0:	mov    rdx,rbx
  403fb3:	mov    QWORD PTR [rsp+0x48],rax
  403fb8:	call   0x4122a0
  403fbd:	test   rax,rax
  403fc0:	mov    r13,rax
  403fc3:	je     0x403fd0
  403fc5:	mov    eax,DWORD PTR [rax+0x30]
  403fc8:	test   eax,eax
  403fca:	jne    0x404240
  403fd0:	call   0x412180
  403fd5:	lea    rcx,[rsp+0x50]
  403fda:	xor    r9d,r9d
  403fdd:	xor    r8d,r8d
  403fe0:	mov    DWORD PTR [rsp+0x20],0x3
  403fe8:	mov    rdx,rbx
  403feb:	mov    QWORD PTR [rsp+0x50],rax
  403ff0:	call   0x4122a0
  403ff5:	test   rax,rax
  403ff8:	mov    rdi,rax
  403ffb:	je     0x404170
  404001:	mov    r12d,DWORD PTR [rax+0x30]
  404005:	test   r12d,r12d
  404008:	je     0x404170
  40400e:	call   0x412190
  404013:	xor    r9d,r9d
  404016:	mov    r8,rbp
  404019:	mov    rdx,rbx
  40401c:	mov    rcx,rax
  40401f:	mov    QWORD PTR [rsp+0x58],rax
  404024:	call   0x412278
  404029:	lea    rcx,[rsp+0x58]
  40402e:	mov    r12d,eax
  404031:	call   0x412188
  404036:	test   r12d,r12d
  404039:	js     0x404350
  40403f:	mov    esi,DWORD PTR [rdi+0x14]
  404042:	xor    r9d,r9d
  404045:	test   esi,esi
  404047:	jne    0x40405c
  404049:	movzx  eax,BYTE PTR [rbp+0x0]
  40404d:	sub    eax,0x2b
  404050:	and    eax,0xfffffffd
  404053:	cmp    al,0x1
  404055:	sbb    r9d,r9d
  404058:	and    r9d,0x20
  40405c:	lea    rcx,[rip+0x267a5]        # 0x42a808
  404063:	mov    r8,rbp
  404066:	mov    rdx,rbx
  404069:	call   0x412428
  40406e:	jmp    0x404107
  404073:	lea    rdx,[rbx+0x1]
  404077:	xor    r9d,r9d
  40407a:	xor    r8d,r8d
  40407d:	mov    DWORD PTR [rsp+0x20],0x2
  404085:	mov    rcx,rdi
  404088:	call   0x4122a0
  40408d:	test   rax,rax
  404090:	je     0x403f69
  404096:	mov    edx,DWORD PTR [rax+0x30]
  404099:	test   edx,edx
  40409b:	je     0x403f69
  4040a1:	mov    eax,DWORD PTR [rax+0x14]
  4040a4:	xor    r9d,r9d
  4040a7:	test   eax,eax
  4040a9:	je     0x404151
  4040af:	lea    rcx,[rip+0x26762]        # 0x42a818
  4040b6:	mov    r8,rbp
  4040b9:	mov    rdx,rbx
  4040bc:	call   0x412428
  4040c1:	lea    rcx,[rsp+0x38]
  4040c6:	xor    r9d,r9d
  4040c9:	xor    r8d,r8d
  4040cc:	mov    DWORD PTR [rsp+0x20],0x3
  4040d4:	mov    rdx,rbx
  4040d7:	call   0x4122a0
  4040dc:	test   rax,rax
  4040df:	je     0x4040f3
  4040e1:	mov    r8d,DWORD PTR [rax+0x30]
  4040e5:	mov    edi,0x1
  4040ea:	test   r8d,r8d
  4040ed:	jne    0x4041c5
  4040f3:	call   0x4121b8
  4040f8:	mov    QWORD PTR [rsp+0x48],rax
  4040fd:	call   0x412180
  404102:	mov    QWORD PTR [rsp+0x50],rax
  404107:	lea    rcx,[rsp+0x40]
  40410c:	xor    r9d,r9d
  40410f:	xor    r8d,r8d
  404112:	mov    rdx,rbx
  404115:	mov    DWORD PTR [rsp+0x20],0x3
  40411d:	call   0x4122a0
  404122:	xor    edx,edx
  404124:	test   rax,rax
  404127:	je     0x404130
  404129:	mov    edx,DWORD PTR [rax+0x30]
  40412c:	test   edx,edx
  40412e:	jne    0x4041a0
  404130:	mov    eax,edx
  404132:	add    rsp,0xe8
  404139:	pop    rbx
  40413a:	pop    rsi
  40413b:	pop    rdi
  40413c:	pop    rbp
  40413d:	pop    r12
  40413f:	pop    r13
  404141:	ret    
  404142:	mov    ecx,0x30
  404147:	call   0x4122d0
  40414c:	jmp    0x403ee1
  404151:	movzx  eax,BYTE PTR [rbp+0x0]
  404155:	sub    eax,0x2b
  404158:	and    eax,0xfffffffd
  40415b:	cmp    al,0x1
  40415d:	sbb    r9d,r9d
  404160:	and    r9d,0x20
  404164:	jmp    0x4040af
  404169:	nop    DWORD PTR [rax+0x0]
  404170:	lea    rcx,[rsp+0x40]
  404175:	xor    r9d,r9d
  404178:	xor    r8d,r8d
  40417b:	mov    rdx,rbx
  40417e:	mov    DWORD PTR [rsp+0x20],0x3
  404186:	call   0x4122a0
  40418b:	test   rax,rax
  40418e:	mov    edx,0xabafb008
  404193:	je     0x404130
  404195:	mov    ecx,DWORD PTR [rax+0x30]
  404198:	test   ecx,ecx
  40419a:	je     0x404130
  40419c:	nop    DWORD PTR [rax+0x0]
  4041a0:	mov    r10d,DWORD PTR [rax+0x14]
  4041a4:	xor    r9d,r9d
  4041a7:	test   r10d,r10d
  4041aa:	je     0x404220
  4041ac:	lea    rcx,[rip+0x2666d]        # 0x42a820
  4041b3:	mov    rdx,rbx
  4041b6:	mov    r8,rbp
  4041b9:	call   0x412428
  4041be:	xor    edx,edx
  4041c0:	jmp    0x404130
  4041c5:	mov    r11d,DWORD PTR [rax+0x14]
  4041c9:	xor    r9d,r9d
  4041cc:	test   r11d,r11d
  4041cf:	jne    0x4041e4
  4041d1:	movzx  eax,BYTE PTR [rbp+0x0]
  4041d5:	sub    eax,0x2b
  4041d8:	and    eax,0xfffffffd
  4041db:	cmp    al,0x1
  4041dd:	sbb    r9d,r9d
  4041e0:	and    r9d,0x20
  4041e4:	lea    rcx,[rip+0x26625]        # 0x42a810
  4041eb:	mov    r8,rbp
  4041ee:	mov    rdx,rbx
  4041f1:	call   0x412428
  4041f6:	test   edi,edi
  4041f8:	je     0x4040f3
  4041fe:	lea    r8,[rip+0x1b8f3]        # 0x41faf8
  404205:	mov    r9,rbx
  404208:	mov    edx,0x28
  40420d:	xor    ecx,ecx
  40420f:	call   0x412308
  404214:	jmp    0x4040f3
  404219:	nop    DWORD PTR [rax+0x0]
  404220:	movzx  eax,BYTE PTR [rbp+0x0]
  404224:	sub    eax,0x2b
  404227:	and    eax,0xfffffffd
  40422a:	cmp    al,0x1
  40422c:	sbb    r9d,r9d
  40422f:	and    r9d,0x20
  404233:	jmp    0x4041ac
  404238:	nop    DWORD PTR [rax+rax*1+0x0]
  404240:	call   0x4121c8
  404245:	xor    r9d,r9d
  404248:	mov    rsi,rax
  40424b:	mov    r8,rbp
  40424e:	mov    rdx,rbx
  404251:	mov    rcx,rax
  404254:	lea    rdi,[rip+0x1b979]        # 0x41fbd4
  40425b:	call   0x412278
  404260:	mov    rcx,rsi
  404263:	mov    r12d,eax
  404266:	mov    rsi,rbx
  404269:	call   0x4121c0
  40426e:	mov    ecx,0x5
  404273:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404275:	je     0x404330
  40427b:	lea    rdi,[rip+0x1b8a7]        # 0x41fb29
  404282:	mov    ecx,0x5
  404287:	mov    rsi,rbx
  40428a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40428c:	je     0x404330
  404292:	lea    rdi,[rip+0x1b895]        # 0x41fb2e
  404299:	mov    ecx,0x5
  40429e:	mov    rsi,rbx
  4042a1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042a3:	je     0x404330
  4042a9:	lea    rdi,[rip+0x1b883]        # 0x41fb33
  4042b0:	mov    ecx,0x5
  4042b5:	mov    rsi,rbx
  4042b8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042ba:	je     0x404330
  4042bc:	lea    rdi,[rip+0x1b875]        # 0x41fb38
  4042c3:	mov    ecx,0xb
  4042c8:	mov    rsi,rbx
  4042cb:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042cd:	je     0x404330
  4042cf:	lea    rdi,[rip+0x1b86d]        # 0x41fb43
  4042d6:	mov    ecx,0xb
  4042db:	mov    rsi,rbx
  4042de:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4042e0:	je     0x404330
  4042e2:	test   r12d,r12d
  4042e5:	js     0x404350
  4042e7:	mov    r13d,DWORD PTR [r13+0x14]
  4042eb:	xor    r9d,r9d
  4042ee:	test   r13d,r13d
  4042f1:	jne    0x404306
  4042f3:	movzx  eax,BYTE PTR [rbp+0x0]
  4042f7:	sub    eax,0x2b
  4042fa:	and    eax,0xfffffffd
  4042fd:	cmp    al,0x1
  4042ff:	sbb    r9d,r9d
  404302:	and    r9d,0x20
  404306:	lea    rcx,[rip+0x264f3]        # 0x42a800
  40430d:	mov    r8,rbp
  404310:	mov    rdx,rbx
  404313:	call   0x412428
  404318:	jmp    0x4040fd
  40431d:	nop    DWORD PTR [rax]
  404320:	mov    rcx,rbx
  404323:	call   0x419840
  404328:	add    rax,rbx
  40432b:	jmp    0x403ef7
  404330:	lea    r8,[rip+0x1b819]        # 0x41fb50
  404337:	mov    edx,0x10
  40433c:	xor    ecx,ecx
  40433e:	call   0x412308
  404343:	mov    edx,0xffffffea
  404348:	jmp    0x404130
  40434d:	nop    DWORD PTR [rax]
  404350:	lea    r8,[rip+0x1b863]        # 0x41fbba
  404357:	mov    edx,0x10
  40435c:	mov    r9,rbx
  40435f:	xor    ecx,ecx
  404361:	call   0x412308
  404366:	mov    edx,r12d
  404369:	jmp    0x404130
  40436e:	xchg   ax,ax
  404370:	push   r13
  404372:	push   r12
  404374:	push   rbp
  404375:	push   rdi
  404376:	push   rsi
  404377:	push   rbx
  404378:	sub    rsp,0x28
  40437c:	mov    edx,DWORD PTR [rcx+0x50]
  40437f:	xor    ebp,ebp
  404381:	xor    edi,edi
  404383:	mov    r12,rcx
  404386:	test   edx,edx
  404388:	jle    0x40442d
  40438e:	xchg   ax,ax
  404390:	mov    rsi,rbp
  404393:	add    rsi,QWORD PTR [r12+0x48]
  404398:	xor    ebx,ebx
  40439a:	xor    r13d,r13d
  40439d:	mov    eax,DWORD PTR [rsi+0x10]
  4043a0:	test   eax,eax
  4043a2:	jle    0x404412
  4043a4:	mov    rcx,rbx
  4043a7:	add    rcx,QWORD PTR [rsi+0x8]
  4043ab:	add    r13d,0x1
  4043af:	add    rcx,0x10
  4043b3:	call   0x4123b8
  4043b8:	mov    rcx,rbx
  4043bb:	add    rcx,QWORD PTR [rsi+0x8]
  4043bf:	add    rcx,0x20
  4043c3:	call   0x412440
  4043c8:	mov    rcx,rbx
  4043cb:	add    rcx,QWORD PTR [rsi+0x8]
  4043cf:	add    rcx,0x28
  4043d3:	call   0x412440
  4043d8:	mov    rcx,rbx
  4043db:	add    rcx,QWORD PTR [rsi+0x8]
  4043df:	add    rcx,0x30
  4043e3:	call   0x412440
  4043e8:	mov    rax,rbx
  4043eb:	add    rax,QWORD PTR [rsi+0x8]
  4043ef:	lea    rcx,[rax+0x38]
  4043f3:	call   0x412440
  4043f8:	mov    rax,rbx
  4043fb:	add    rax,QWORD PTR [rsi+0x8]
  4043ff:	add    rbx,0x48
  404403:	lea    rcx,[rax+0x40]
  404407:	call   0x412440
  40440c:	cmp    DWORD PTR [rsi+0x10],r13d
  404410:	jg     0x4043a4
  404412:	lea    rcx,[rsi+0x8]
  404416:	add    edi,0x1
  404419:	add    rbp,0x18
  40441d:	call   0x4123b8
  404422:	cmp    DWORD PTR [r12+0x50],edi
  404427:	jg     0x404390
  40442d:	lea    rcx,[r12+0x48]
  404432:	call   0x4123b8
  404437:	lea    rcx,[r12+0x68]
  40443c:	call   0x4123b8
  404441:	lea    rcx,[r12+0x10]
  404446:	call   0x4123b8
  40444b:	lea    rcx,[rip+0x263b6]        # 0x42a808
  404452:	call   0x412440
  404457:	lea    rcx,[rip+0x263a2]        # 0x42a800
  40445e:	call   0x412440
  404463:	lea    rcx,[rip+0x263a6]        # 0x42a810
  40446a:	call   0x412440
  40446f:	lea    rcx,[rip+0x263a2]        # 0x42a818
  404476:	call   0x412440
  40447b:	lea    rcx,[rip+0x2639e]        # 0x42a820
  404482:	add    rsp,0x28
  404486:	pop    rbx
  404487:	pop    rsi
  404488:	pop    rdi
  404489:	pop    rbp
  40448a:	pop    r12
  40448c:	pop    r13
  40448e:	jmp    0x412440
  404493:	nop    DWORD PTR [rax]
  404496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044a0:	push   r15
  4044a2:	push   r14
  4044a4:	push   r13
  4044a6:	push   r12
  4044a8:	push   rbp
  4044a9:	push   rdi
  4044aa:	push   rsi
  4044ab:	push   rbx
  4044ac:	sub    rsp,0x78
  4044b0:	mov    rax,QWORD PTR [rip+0x24b89]        # 0x429040
  4044b7:	mov    r12,QWORD PTR [rsp+0xe0]
  4044bf:	mov    rbx,rcx
  4044c2:	mov    DWORD PTR [rsp+0xc8],edx
  4044c9:	mov    QWORD PTR [rsp+0xd0],r8
  4044d1:	mov    QWORD PTR [rsp+0xd8],r9
  4044d9:	test   rax,rax
  4044dc:	je     0x404d70
  4044e2:	mov    edx,DWORD PTR [rip+0x24b50]        # 0x429038
  4044e8:	mov    QWORD PTR [rsp+0xd0],rax
  4044f0:	mov    DWORD PTR [rsp+0xc8],edx
  4044f7:	lea    rdi,[rbx+0x8]
  4044fb:	mov    rcx,rbx
  4044fe:	lea    rax,[rbx+0xa8]
  404505:	mov    QWORD PTR [rbx],0x0
  40450c:	and    rdi,0xfffffffffffffff8
  404510:	mov    QWORD PTR [rsp+0x58],rax
  404515:	xor    eax,eax
  404517:	sub    rcx,rdi
  40451a:	mov    QWORD PTR [rbx+0x98],0x0
  404525:	add    ecx,0xa0
  40452b:	shr    ecx,0x3
  40452e:	rep stos QWORD PTR es:[rdi],rax
  404531:	movsxd rax,DWORD PTR [rsp+0xe8]
  404539:	cmp    rax,0x5555554
  40453f:	mov    DWORD PTR [rbx+0x50],eax
  404542:	jbe    0x404560
  404544:	mov    QWORD PTR [rbx+0x48],0x0
  40454c:	mov    ecx,0x1
  404551:	call   0x401cb0
  404556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404560:	lea    rcx,[rax+rax*2]
  404564:	shl    rcx,0x3
  404568:	call   0x4122c0
  40456d:	test   rax,rax
  404570:	mov    QWORD PTR [rbx+0x48],rax
  404574:	je     0x40454c
  404576:	mov    edx,DWORD PTR [rbx+0x50]
  404579:	test   edx,edx
  40457b:	jle    0x4045a1
  40457d:	sub    edx,0x1
  404580:	lea    r8,[rdx+rdx*2+0x3]
  404585:	xor    edx,edx
  404587:	shl    r8,0x3
  40458b:	nop    DWORD PTR [rax+rax*1+0x0]
  404590:	lea    rcx,[r12+rdx*1]
  404594:	mov    QWORD PTR [rax+rdx*1],rcx
  404598:	add    rdx,0x18
  40459c:	cmp    rdx,r8
  40459f:	jne    0x404590
  4045a1:	lea    rax,[rip+0x1c828]        # 0x420dd0
  4045a8:	lea    r8,[rip+0x1ae06]        # 0x41f3b5
  4045af:	lea    rdx,[rip+0x1ae07]        # 0x41f3bd
  4045b6:	xor    r9d,r9d
  4045b9:	mov    ebp,0x1
  4045be:	mov    QWORD PTR [rbx],rax
  4045c1:	lea    rax,[rip+0x1adfb]        # 0x41f3c3
  4045c8:	mov    QWORD PTR [rbx+0x8],rax
  4045cc:	lea    rax,[rip+0x2622d]        # 0x42a800
  4045d3:	mov    rcx,rax
  4045d6:	mov    QWORD PTR [rsp+0x50],rax
  4045db:	call   0x412428
  4045e0:	lea    r8,[rip+0x1b5f2]        # 0x41fbd9
  4045e7:	mov    edx,0x30
  4045ec:	xor    ecx,ecx
  4045ee:	call   0x412308
  4045f3:	lea    rax,[rbx+0x58]
  4045f7:	mov    DWORD PTR [rsp+0x6c],0xfffffffe
  4045ff:	mov    rsi,rax
  404602:	mov    QWORD PTR [rsp+0x48],rax
  404607:	lea    rax,[rbx+0x60]
  40460b:	and    rax,0xfffffffffffffff8
  40460f:	mov    rdi,rax
  404612:	mov    QWORD PTR [rsp+0x60],rax
  404617:	mov    rax,rsi
  40461a:	sub    rax,rdi
  40461d:	add    eax,0x48
  404620:	and    eax,0xfffffff8
  404623:	mov    DWORD PTR [rsp+0x68],eax
  404627:	nop    WORD PTR [rax+rax*1+0x0]
  404630:	cmp    ebp,DWORD PTR [rsp+0xc8]
  404637:	jge    0x40480b
  40463d:	lea    eax,[rbp+0x1]
  404640:	mov    rdx,QWORD PTR [rsp+0xd0]
  404648:	lea    r8,[rip+0x1b5a6]        # 0x41fbf5
  40464f:	xor    ecx,ecx
  404651:	mov    DWORD PTR [rsp+0x30],eax
  404655:	movsxd rax,ebp
  404658:	lea    rsi,[rax*8+0x0]
  404660:	mov    QWORD PTR [rsp+0x38],rsi
  404665:	mov    rsi,QWORD PTR [rdx+rax*8]
  404669:	mov    edx,0x30
  40466e:	mov    r9,rsi
  404671:	call   0x412308
  404676:	cmp    BYTE PTR [rsi],0x2d
  404679:	je     0x404860
  40467f:	mov    r13,QWORD PTR [rbx+0x48]
  404683:	mov    eax,DWORD PTR [r13+0x10]
  404687:	mov    rcx,QWORD PTR [r13+0x8]
  40468b:	lea    edi,[rax+0x1]
  40468e:	cmp    edi,0x1c71c70
  404694:	jg     0x404e66
  40469a:	movsxd rbp,edi
  40469d:	mov    r8d,0x48
  4046a3:	mov    rdx,rbp
  4046a6:	call   0x412240
  4046ab:	test   rax,rax
  4046ae:	mov    r14,rax
  4046b1:	je     0x404e7e
  4046b7:	mov    eax,DWORD PTR [r13+0x10]
  4046bb:	mov    edx,edi
  4046bd:	sub    edx,eax
  4046bf:	lea    ecx,[rax+rax*8]
  4046c2:	lea    r8d,[rdx+rdx*8]
  4046c6:	xor    edx,edx
  4046c8:	shl    ecx,0x3
  4046cb:	shl    r8d,0x3
  4046cf:	movsxd rcx,ecx
  4046d2:	add    rcx,r14
  4046d5:	movsxd r8,r8d
  4046d8:	call   0x419878
  4046dd:	lea    rax,[rbp+rbp*8+0x0]
  4046e2:	mov    DWORD PTR [r13+0x10],edi
  4046e6:	mov    rdx,QWORD PTR [rbx+0x58]
  4046ea:	mov    QWORD PTR [r13+0x8],r14
  4046ee:	mov    rdi,QWORD PTR [rsp+0x50]
  4046f3:	lea    r8,[rip+0x1acbb]        # 0x41f3b5
  4046fa:	lea    rax,[r14+rax*8-0x48]
  4046ff:	xor    r9d,r9d
  404702:	mov    QWORD PTR [rax],rdx
  404705:	mov    rdx,QWORD PTR [rbx+0x60]
  404709:	mov    rcx,rdi
  40470c:	mov    QWORD PTR [rax+0x8],rdx
  404710:	mov    rdx,QWORD PTR [rbx+0x68]
  404714:	mov    QWORD PTR [rax+0x10],rdx
  404718:	mov    rdx,QWORD PTR [rbx+0x70]
  40471c:	mov    QWORD PTR [rax+0x18],rdx
  404720:	mov    rdx,QWORD PTR [rbx+0x78]
  404724:	mov    QWORD PTR [rax+0x20],rdx
  404728:	mov    rdx,QWORD PTR [rbx+0x80]
  40472f:	mov    QWORD PTR [rax+0x28],rdx
  404733:	mov    rdx,QWORD PTR [rbx+0x88]
  40473a:	mov    QWORD PTR [rax+0x8],rsi
  40473e:	mov    QWORD PTR [rax+0x30],rdx
  404742:	mov    rdx,QWORD PTR [r13+0x0]
  404746:	mov    QWORD PTR [rax],rdx
  404749:	mov    rdx,QWORD PTR [rdi]
  40474c:	mov    QWORD PTR [rax+0x38],rdx
  404750:	mov    rdx,QWORD PTR [rip+0x260b1]        # 0x42a808
  404757:	mov    QWORD PTR [rax+0x40],rdx
  40475b:	mov    rdx,QWORD PTR [rip+0x260b6]        # 0x42a818
  404762:	mov    QWORD PTR [rip+0x260ab],0x0        # 0x42a818
  40476d:	mov    QWORD PTR [rax+0x20],rdx
  404771:	mov    rdx,QWORD PTR [rip+0x26098]        # 0x42a810
  404778:	mov    QWORD PTR [rip+0x2608d],0x0        # 0x42a810
  404783:	mov    QWORD PTR [rax+0x28],rdx
  404787:	mov    rdx,QWORD PTR [rip+0x26092]        # 0x42a820
  40478e:	mov    QWORD PTR [rip+0x26087],0x0        # 0x42a820
  404799:	mov    QWORD PTR [rax+0x30],rdx
  40479d:	lea    rdx,[rip+0x1ac19]        # 0x41f3bd
  4047a4:	mov    QWORD PTR [rdi],0x0
  4047ab:	mov    QWORD PTR [rip+0x26052],0x0        # 0x42a808
  4047b6:	call   0x412428
  4047bb:	mov    rax,QWORD PTR [rsp+0x48]
  4047c0:	lea    r8,[rip+0x1b446]        # 0x41fc0d
  4047c7:	mov    edx,0x30
  4047cc:	mov    QWORD PTR [rax],0x0
  4047d3:	mov    rax,QWORD PTR [rsp+0x58]
  4047d8:	mov    QWORD PTR [rax-0x10],0x0
  4047e0:	mov    ecx,DWORD PTR [rsp+0x68]
  4047e4:	xor    eax,eax
  4047e6:	mov    rdi,QWORD PTR [rsp+0x60]
  4047eb:	shr    ecx,0x3
  4047ee:	rep stos QWORD PTR es:[rdi],rax
  4047f1:	mov    r9,QWORD PTR [r12]
  4047f5:	call   0x412308
  4047fa:	mov    ebp,DWORD PTR [rsp+0x30]
  4047fe:	cmp    ebp,DWORD PTR [rsp+0xc8]
  404805:	jl     0x40463d
  40480b:	mov    eax,DWORD PTR [rbx+0x70]
  40480e:	test   eax,eax
  404810:	jne    0x404820
  404812:	cmp    QWORD PTR [rip+0x25ffe],0x0        # 0x42a818
  40481a:	je     0x404d4f
  404820:	lea    r8,[rip+0x1b531]        # 0x41fd58
  404827:	mov    edx,0x18
  40482c:	xor    ecx,ecx
  40482e:	call   0x412308
  404833:	lea    r8,[rip+0x1b556]        # 0x41fd90
  40483a:	mov    edx,0x30
  40483f:	xor    ecx,ecx
  404841:	call   0x412308
  404846:	xor    eax,eax
  404848:	add    rsp,0x78
  40484c:	pop    rbx
  40484d:	pop    rsi
  40484e:	pop    rdi
  40484f:	pop    rbp
  404850:	pop    r12
  404852:	pop    r13
  404854:	pop    r14
  404856:	pop    r15
  404858:	ret    
  404859:	nop    DWORD PTR [rax+0x0]
  404860:	movzx  eax,BYTE PTR [rsi+0x1]
  404864:	cmp    al,0x2d
  404866:	mov    BYTE PTR [rsp+0x47],al
  40486a:	je     0x4049b0
  404870:	cmp    BYTE PTR [rsp+0x47],0x0
  404875:	je     0x40467f
  40487b:	mov    eax,DWORD PTR [rsp+0x6c]
  40487f:	add    eax,0x1
  404882:	cmp    eax,DWORD PTR [rsp+0x30]
  404886:	je     0x40467f
  40488c:	mov    edx,DWORD PTR [rsp+0xe8]
  404893:	lea    rdi,[rsi+0x1]
  404897:	test   edx,edx
  404899:	jle    0x4048e7
  40489b:	xor    r13d,r13d
  40489e:	mov    QWORD PTR [rsp+0xc0],rbx
  4048a6:	mov    r15,r12
  4048a9:	mov    ebx,r13d
  4048ac:	mov    r13d,DWORD PTR [rsp+0xe8]
  4048b4:	mov    rcx,QWORD PTR [r15+0x8]
  4048b8:	mov    r14,r15
  4048bb:	sub    r14,r12
  4048be:	test   rcx,rcx
  4048c1:	je     0x4048d3
  4048c3:	mov    rdx,rdi
  4048c6:	call   0x419858
  4048cb:	test   eax,eax
  4048cd:	je     0x4049d0
  4048d3:	add    ebx,0x1
  4048d6:	add    r15,0x18
  4048da:	cmp    ebx,r13d
  4048dd:	jne    0x4048b4
  4048df:	mov    rbx,QWORD PTR [rsp+0xc0]
  4048e7:	mov    edx,0x3a
  4048ec:	mov    rcx,rdi
  4048ef:	call   0x419860
  4048f4:	test   rax,rax
  4048f7:	je     0x404d42
  4048fd:	sub    eax,edi
  4048ff:	mov    rcx,QWORD PTR [rsp+0xd8]
  404907:	mov    r15,QWORD PTR [rcx]
  40490a:	test   r15,r15
  40490d:	je     0x404944
  40490f:	movsxd r13,eax
  404912:	mov    r14,rcx
  404915:	mov    r8,r13
  404918:	mov    rdx,r15
  40491b:	mov    rcx,rdi
  40491e:	call   0x419830
  404923:	test   eax,eax
  404925:	jne    0x404938
  404927:	mov    rcx,r15
  40492a:	call   0x419840
  40492f:	cmp    rax,r13
  404932:	je     0x404b91
  404938:	add    r14,0x28
  40493c:	mov    r15,QWORD PTR [r14]
  40493f:	test   r15,r15
  404942:	jne    0x404915
  404944:	mov    rcx,QWORD PTR [rsp+0x38]
  404949:	mov    rax,QWORD PTR [rsp+0xd0]
  404951:	mov    r8,QWORD PTR [rax+rcx*1+0x8]
  404956:	lea    r14,[rcx+0x8]
  40495a:	movzx  eax,BYTE PTR [rsp+0x47]
  40495f:	test   r8,r8
  404962:	je     0x404cba
  404968:	xor    ecx,ecx
  40496a:	mov    rdx,rdi
  40496d:	call   0x403e80
  404972:	test   eax,eax
  404974:	js     0x404cab
  40497a:	mov    rax,QWORD PTR [rsp+0xd0]
  404982:	mov    rsi,QWORD PTR [rsp+0x38]
  404987:	lea    r8,[rip+0x1b31a]        # 0x41fca8
  40498e:	mov    r9,rdi
  404991:	mov    edx,0x30
  404996:	xor    ecx,ecx
  404998:	add    ebp,0x2
  40499b:	mov    rax,QWORD PTR [rax+rsi*1+0x8]
  4049a0:	mov    QWORD PTR [rsp+0x20],rax
  4049a5:	call   0x412308
  4049aa:	jmp    0x404630
  4049af:	nop
  4049b0:	cmp    BYTE PTR [rsi+0x2],0x0
  4049b4:	jne    0x40487b
  4049ba:	mov    eax,DWORD PTR [rsp+0x30]
  4049be:	mov    DWORD PTR [rsp+0x6c],eax
  4049c2:	mov    ebp,eax
  4049c4:	jmp    0x404630
  4049c9:	nop    DWORD PTR [rax+0x0]
  4049d0:	mov    r13d,ebx
  4049d3:	mov    rbx,QWORD PTR [rsp+0xc0]
  4049db:	test   r13d,r13d
  4049de:	js     0x4048e7
  4049e4:	mov    rax,QWORD PTR [rsp+0xd0]
  4049ec:	mov    rsi,QWORD PTR [rsp+0x38]
  4049f1:	mov    rsi,QWORD PTR [rax+rsi*1+0x8]
  4049f6:	test   rsi,rsi
  4049f9:	je     0x404d8a
  4049ff:	add    r14,QWORD PTR [rbx+0x48]
  404a03:	mov    eax,DWORD PTR [r14+0x10]
  404a07:	mov    rcx,QWORD PTR [r14+0x8]
  404a0b:	lea    r13d,[rax+0x1]
  404a0f:	cmp    r13d,0x1c71c70
  404a16:	jg     0x404e66
  404a1c:	movsxd rdi,r13d
  404a1f:	mov    r8d,0x48
  404a25:	mov    rdx,rdi
  404a28:	call   0x412240
  404a2d:	test   rax,rax
  404a30:	mov    r9,rax
  404a33:	je     0x404e7e
  404a39:	mov    eax,DWORD PTR [r14+0x10]
  404a3d:	mov    edx,r13d
  404a40:	mov    QWORD PTR [rsp+0x30],r9
  404a45:	add    ebp,0x2
  404a48:	sub    edx,eax
  404a4a:	lea    ecx,[rax+rax*8]
  404a4d:	lea    r8d,[rdx+rdx*8]
  404a51:	xor    edx,edx
  404a53:	shl    ecx,0x3
  404a56:	shl    r8d,0x3
  404a5a:	movsxd rcx,ecx
  404a5d:	add    rcx,r9
  404a60:	movsxd r8,r8d
  404a63:	call   0x419878
  404a68:	mov    r9,QWORD PTR [rsp+0x30]
  404a6d:	lea    rax,[rdi+rdi*8]
  404a71:	mov    DWORD PTR [r14+0x10],r13d
  404a75:	mov    rdx,QWORD PTR [rbx+0x58]
  404a79:	mov    rdi,QWORD PTR [rsp+0x50]
  404a7e:	lea    r8,[rip+0x1a930]        # 0x41f3b5
  404a85:	lea    rax,[r9+rax*8-0x48]
  404a8a:	mov    QWORD PTR [r14+0x8],r9
  404a8e:	xor    r9d,r9d
  404a91:	mov    rcx,rdi
  404a94:	mov    QWORD PTR [rax],rdx
  404a97:	mov    rdx,QWORD PTR [rbx+0x60]
  404a9b:	mov    QWORD PTR [rax+0x8],rdx
  404a9f:	mov    rdx,QWORD PTR [rbx+0x68]
  404aa3:	mov    QWORD PTR [rax+0x10],rdx
  404aa7:	mov    rdx,QWORD PTR [rbx+0x70]
  404aab:	mov    QWORD PTR [rax+0x18],rdx
  404aaf:	mov    rdx,QWORD PTR [rbx+0x78]
  404ab3:	mov    QWORD PTR [rax+0x20],rdx
  404ab7:	mov    rdx,QWORD PTR [rbx+0x80]
  404abe:	mov    QWORD PTR [rax+0x28],rdx
  404ac2:	mov    rdx,QWORD PTR [rbx+0x88]
  404ac9:	mov    QWORD PTR [rax+0x8],rsi
  404acd:	mov    QWORD PTR [rax+0x30],rdx
  404ad1:	mov    rdx,QWORD PTR [r14]
  404ad4:	mov    QWORD PTR [rax],rdx
  404ad7:	mov    rdx,QWORD PTR [rdi]
  404ada:	mov    QWORD PTR [rax+0x38],rdx
  404ade:	mov    rdx,QWORD PTR [rip+0x25d23]        # 0x42a808
  404ae5:	mov    QWORD PTR [rax+0x40],rdx
  404ae9:	mov    rdx,QWORD PTR [rip+0x25d28]        # 0x42a818
  404af0:	mov    QWORD PTR [rip+0x25d1d],0x0        # 0x42a818
  404afb:	mov    QWORD PTR [rax+0x20],rdx
  404aff:	mov    rdx,QWORD PTR [rip+0x25d0a]        # 0x42a810
  404b06:	mov    QWORD PTR [rip+0x25cff],0x0        # 0x42a810
  404b11:	mov    QWORD PTR [rax+0x28],rdx
  404b15:	mov    rdx,QWORD PTR [rip+0x25d04]        # 0x42a820
  404b1c:	mov    QWORD PTR [rax+0x30],rdx
  404b20:	lea    rdx,[rip+0x1a896]        # 0x41f3bd
  404b27:	mov    QWORD PTR [rip+0x25cee],0x0        # 0x42a820
  404b32:	mov    QWORD PTR [rdi],0x0
  404b39:	mov    QWORD PTR [rip+0x25cc4],0x0        # 0x42a808
  404b44:	call   0x412428
  404b49:	mov    rax,QWORD PTR [rsp+0x48]
  404b4e:	lea    r8,[rip+0x1b0f3]        # 0x41fc48
  404b55:	mov    edx,0x30
  404b5a:	mov    QWORD PTR [rax],0x0
  404b61:	mov    rax,QWORD PTR [rsp+0x58]
  404b66:	mov    QWORD PTR [rax-0x10],0x0
  404b6e:	mov    ecx,DWORD PTR [rsp+0x68]
  404b72:	xor    eax,eax
  404b74:	mov    rdi,QWORD PTR [rsp+0x60]
  404b79:	shr    ecx,0x3
  404b7c:	rep stos QWORD PTR es:[rdi],rax
  404b7f:	mov    QWORD PTR [rsp+0x20],rsi
  404b84:	mov    r9,QWORD PTR [r15]
  404b87:	call   0x412308
  404b8c:	jmp    0x404630
  404b91:	mov    eax,DWORD PTR [r14+0x8]
  404b95:	test   ah,0x8
  404b98:	jne    0x404c81
  404b9e:	test   al,0x1
  404ba0:	je     0x404c9f
  404ba6:	lea    esi,[rbp+0x2]
  404ba9:	mov    rdx,QWORD PTR [rsp+0xd0]
  404bb1:	mov    DWORD PTR [rsp+0x30],esi
  404bb5:	mov    rsi,QWORD PTR [rsp+0x38]
  404bba:	mov    rbp,QWORD PTR [rdx+rsi*1+0x8]
  404bbf:	test   rbp,rbp
  404bc2:	je     0x404d8a
  404bc8:	mov    r15,QWORD PTR [rsp+0x48]
  404bcd:	test   ah,0xe0
  404bd0:	cmove  r15,rbx
  404bd4:	mov    eax,DWORD PTR [r15+0x18]
  404bd8:	mov    rcx,QWORD PTR [r15+0x10]
  404bdc:	lea    esi,[rax+0x1]
  404bdf:	cmp    esi,0x5555554
  404be5:	jg     0x404e66
  404beb:	movsxd rax,esi
  404bee:	mov    r8d,0x18
  404bf4:	mov    rdx,rax
  404bf7:	mov    QWORD PTR [rsp+0x38],rax
  404bfc:	call   0x412240
  404c01:	test   rax,rax
  404c04:	mov    r13,rax
  404c07:	je     0x404e7e
  404c0d:	mov    eax,DWORD PTR [r15+0x18]
  404c11:	mov    edx,esi
  404c13:	sub    edx,eax
  404c15:	lea    ecx,[rax+rax*2]
  404c18:	lea    r8d,[rdx+rdx*2]
  404c1c:	xor    edx,edx
  404c1e:	shl    ecx,0x3
  404c21:	shl    r8d,0x3
  404c25:	movsxd rcx,ecx
  404c28:	add    rcx,r13
  404c2b:	movsxd r8,r8d
  404c2e:	call   0x419878
  404c33:	mov    rax,QWORD PTR [rsp+0x38]
  404c38:	mov    DWORD PTR [r15+0x18],esi
  404c3c:	lea    r8,[rip+0x1b02d]        # 0x41fc70
  404c43:	mov    QWORD PTR [r15+0x10],r13
  404c47:	mov    edx,0x30
  404c4c:	xor    ecx,ecx
  404c4e:	lea    rax,[rax+rax*2]
  404c52:	lea    rax,[r13+rax*8-0x18]
  404c57:	mov    QWORD PTR [rax+0x10],rbp
  404c5b:	mov    QWORD PTR [rax],r14
  404c5e:	mov    QWORD PTR [rax+0x8],rdi
  404c62:	mov    QWORD PTR [rsp+0x28],rbp
  404c67:	mov    rax,QWORD PTR [r14+0x18]
  404c6b:	mov    QWORD PTR [rsp+0x20],rax
  404c70:	mov    r9,QWORD PTR [r14]
  404c73:	call   0x412308
  404c78:	mov    ebp,DWORD PTR [rsp+0x30]
  404c7c:	jmp    0x404630
  404c81:	lea    esi,[rbp+0x2]
  404c84:	mov    rdx,QWORD PTR [rsp+0xd0]
  404c8c:	mov    DWORD PTR [rsp+0x30],esi
  404c90:	mov    rsi,QWORD PTR [rsp+0x38]
  404c95:	mov    rbp,QWORD PTR [rdx+rsi*1+0x8]
  404c9a:	jmp    0x404bc8
  404c9f:	lea    rbp,[rip+0x1ac8b]        # 0x41f931
  404ca6:	jmp    0x404bc8
  404cab:	cmp    eax,0xabafb008
  404cb0:	jne    0x404e90
  404cb6:	movzx  eax,BYTE PTR [rsi+0x1]
  404cba:	cmp    al,0x6e
  404cbc:	jne    0x404d22
  404cbe:	cmp    BYTE PTR [rsi+0x2],0x6f
  404cc2:	jne    0x404d22
  404cc4:	lea    rbp,[rsi+0x3]
  404cc8:	mov    edx,0x3a
  404ccd:	mov    rcx,rbp
  404cd0:	call   0x419860
  404cd5:	test   rax,rax
  404cd8:	je     0x404e83
  404cde:	sub    eax,ebp
  404ce0:	mov    rsi,QWORD PTR [rsp+0xd8]
  404ce8:	mov    r13,QWORD PTR [rsi]
  404ceb:	test   r13,r13
  404cee:	je     0x404d22
  404cf0:	movsxd r14,eax
  404cf3:	mov    r8,r14
  404cf6:	mov    rdx,r13
  404cf9:	mov    rcx,rbp
  404cfc:	call   0x419830
  404d01:	test   eax,eax
  404d03:	jne    0x404d16
  404d05:	mov    rcx,r13
  404d08:	call   0x419840
  404d0d:	cmp    rax,r14
  404d10:	je     0x404daa
  404d16:	add    rsi,0x28
  404d1a:	mov    r13,QWORD PTR [rsi]
  404d1d:	test   r13,r13
  404d20:	jne    0x404cf3
  404d22:	lea    r8,[rip+0x1b00e]        # 0x41fd37
  404d29:	mov    r9,rdi
  404d2c:	mov    edx,0x10
  404d31:	xor    ecx,ecx
  404d33:	call   0x412308
  404d38:	mov    eax,0xabafb008
  404d3d:	jmp    0x404848
  404d42:	mov    rcx,rdi
  404d45:	call   0x419840
  404d4a:	jmp    0x4048ff
  404d4f:	cmp    QWORD PTR [rip+0x25ab9],0x0        # 0x42a810
  404d57:	jne    0x404820
  404d5d:	cmp    QWORD PTR [rip+0x25abb],0x0        # 0x42a820
  404d65:	jne    0x404820
  404d6b:	jmp    0x404833
  404d70:	lea    rdx,[rsp+0xd0]
  404d78:	lea    rcx,[rsp+0xc8]
  404d80:	call   0x401910
  404d85:	jmp    0x4044f7
  404d8a:	lea    r8,[rip+0x1ae8f]        # 0x41fc20
  404d91:	mov    r9,rdi
  404d94:	mov    edx,0x10
  404d99:	xor    ecx,ecx
  404d9b:	call   0x412308
  404da0:	mov    eax,0xffffffea
  404da5:	jmp    0x404848
  404daa:	mov    eax,DWORD PTR [rsi+0x8]
  404dad:	test   al,0x2
  404daf:	je     0x404d22
  404db5:	mov    r13,QWORD PTR [rsp+0x48]
  404dba:	test   ah,0xe0
  404dbd:	cmove  r13,rbx
  404dc1:	mov    eax,DWORD PTR [r13+0x18]
  404dc5:	mov    rcx,QWORD PTR [r13+0x10]
  404dc9:	lea    ebp,[rax+0x1]
  404dcc:	cmp    ebp,0x5555554
  404dd2:	jg     0x404e66
  404dd8:	movsxd r15,ebp
  404ddb:	mov    r8d,0x18
  404de1:	mov    rdx,r15
  404de4:	call   0x412240
  404de9:	test   rax,rax
  404dec:	mov    r14,rax
  404def:	je     0x404e7e
  404df5:	mov    eax,DWORD PTR [r13+0x18]
  404df9:	mov    edx,ebp
  404dfb:	sub    edx,eax
  404dfd:	lea    ecx,[rax+rax*2]
  404e00:	lea    r8d,[rdx+rdx*2]
  404e04:	xor    edx,edx
  404e06:	shl    ecx,0x3
  404e09:	shl    r8d,0x3
  404e0d:	movsxd rcx,ecx
  404e10:	add    rcx,r14
  404e13:	movsxd r8,r8d
  404e16:	call   0x419878
  404e1b:	lea    rax,[r15+r15*2]
  404e1f:	mov    DWORD PTR [r13+0x18],ebp
  404e23:	mov    QWORD PTR [r13+0x10],r14
  404e27:	lea    r8,[rip+0x1aeda]        # 0x41fd08
  404e2e:	mov    edx,0x30
  404e33:	xor    ecx,ecx
  404e35:	lea    rax,[r14+rax*8-0x18]
  404e3a:	mov    QWORD PTR [rax+0x8],rdi
  404e3e:	lea    rdi,[rip+0x1aaee]        # 0x41f933
  404e45:	mov    QWORD PTR [rax],rsi
  404e48:	mov    QWORD PTR [rax+0x10],rdi
  404e4c:	mov    rax,QWORD PTR [rsi+0x18]
  404e50:	mov    QWORD PTR [rsp+0x20],rax
  404e55:	mov    r9,QWORD PTR [rsi]
  404e58:	call   0x412308
  404e5d:	mov    ebp,DWORD PTR [rsp+0x30]
  404e61:	jmp    0x404630
  404e66:	lea    r8,[rip+0x1ab0d]        # 0x41f97a
  404e6d:	mov    edx,0x10
  404e72:	xor    ecx,ecx
  404e74:	call   0x412308
  404e79:	jmp    0x40454c
  404e7e:	call   0x419c16
  404e83:	mov    rcx,rbp
  404e86:	call   0x419840
  404e8b:	jmp    0x404ce0
  404e90:	mov    r13,rdi
  404e93:	mov    edi,eax
  404e95:	mov    rax,QWORD PTR [rsp+0xd0]
  404e9d:	lea    r8,[rip+0x1ae34]        # 0x41fcd8
  404ea4:	mov    r9,r13
  404ea7:	mov    edx,0x10
  404eac:	xor    ecx,ecx
  404eae:	mov    rax,QWORD PTR [rax+r14*1]
  404eb2:	mov    QWORD PTR [rsp+0x20],rax
  404eb7:	call   0x412308
  404ebc:	mov    eax,edi
  404ebe:	jmp    0x404848
  404ec3:	nop    DWORD PTR [rax]
  404ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ed0:	push   rbx
  404ed1:	sub    rsp,0x30
  404ed5:	mov    rbx,r8
  404ed8:	call   0x412388
  404edd:	lea    rcx,[rsp+0x2c]
  404ee2:	mov    rdx,rbx
  404ee5:	mov    DWORD PTR [rsp+0x2c],eax
  404ee9:	call   0x412260
  404eee:	test   eax,eax
  404ef0:	js     0x404efd
  404ef2:	mov    ecx,DWORD PTR [rsp+0x2c]
  404ef6:	call   0x412418
  404efb:	xor    eax,eax
  404efd:	add    rsp,0x30
  404f01:	pop    rbx
  404f02:	ret    
  404f03:	nop    DWORD PTR [rax]
  404f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f10:	push   rbp
  404f11:	push   rdi
  404f12:	push   rsi
  404f13:	push   rbx
  404f14:	sub    rsp,0xc8
  404f1b:	lea    rsi,[rip+0x1811e]        # 0x41d040
  404f22:	mov    ecx,0x12
  404f27:	lea    rbp,[rsp+0x30]
  404f2c:	mov    rbx,r8
  404f2f:	mov    rdi,rbp
  404f32:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  404f35:	call   0x4122f0
  404f3a:	lea    rdx,[rip+0x1ae74]        # 0x41fdb5
  404f41:	mov    esi,eax
  404f43:	mov    rcx,rbx
  404f46:	call   0x419820
  404f4b:	mov    ecx,esi
  404f4d:	or     esi,0x1
  404f50:	mov    QWORD PTR [rsp+0x28],rax
  404f55:	and    ecx,0xfffffffe
  404f58:	test   rax,rax
  404f5b:	cmove  ecx,esi
  404f5e:	call   0x4122d8
  404f63:	mov    rax,QWORD PTR [rsp+0x28]
  404f68:	cmp    rax,rbx
  404f6b:	je     0x405080
  404f71:	test   rax,rax
  404f74:	je     0x404f7f
  404f76:	cmp    BYTE PTR [rbx],0x0
  404f79:	je     0x40506c
  404f7f:	mov    rcx,QWORD PTR [rsp+0x30]
  404f84:	mov    rdx,rbx
  404f87:	call   0x419858
  404f8c:	test   eax,eax
  404f8e:	je     0x4050c0
  404f94:	mov    rcx,QWORD PTR [rsp+0x40]
  404f99:	mov    rdx,rbx
  404f9c:	call   0x419858
  404fa1:	test   eax,eax
  404fa3:	je     0x4050c4
  404fa9:	mov    rcx,QWORD PTR [rsp+0x50]
  404fae:	mov    rdx,rbx
  404fb1:	call   0x419858
  404fb6:	test   eax,eax
  404fb8:	je     0x4050d0
  404fbe:	mov    rcx,QWORD PTR [rsp+0x60]
  404fc3:	mov    rdx,rbx
  404fc6:	call   0x419858
  404fcb:	test   eax,eax
  404fcd:	je     0x4050e0
  404fd3:	mov    rcx,QWORD PTR [rsp+0x70]
  404fd8:	mov    rdx,rbx
  404fdb:	call   0x419858
  404fe0:	test   eax,eax
  404fe2:	je     0x4050f0
  404fe8:	mov    rcx,QWORD PTR [rsp+0x80]
  404ff0:	mov    rdx,rbx
  404ff3:	call   0x419858
  404ff8:	test   eax,eax
  404ffa:	je     0x405100
  405000:	mov    rcx,QWORD PTR [rsp+0x90]
  405008:	mov    rdx,rbx
  40500b:	call   0x419858
  405010:	test   eax,eax
  405012:	je     0x405093
  405014:	mov    rcx,QWORD PTR [rsp+0xa0]
  40501c:	mov    rdx,rbx
  40501f:	call   0x419858
  405024:	test   eax,eax
  405026:	je     0x405110
  40502c:	mov    rcx,QWORD PTR [rsp+0xb0]
  405034:	mov    rdx,rbx
  405037:	call   0x419858
  40503c:	test   eax,eax
  40503e:	je     0x405120
  405044:	lea    rdx,[rsp+0x28]
  405049:	mov    rcx,rbx
  40504c:	mov    r8d,0xa
  405052:	call   0x419810
  405057:	mov    ecx,eax
  405059:	mov    rax,QWORD PTR [rsp+0x28]
  40505e:	cmp    BYTE PTR [rax],0x0
  405061:	jne    0x40512a
  405067:	call   0x4122d0
  40506c:	xor    eax,eax
  40506e:	add    rsp,0xc8
  405075:	pop    rbx
  405076:	pop    rsi
  405077:	pop    rdi
  405078:	pop    rbp
  405079:	ret    
  40507a:	nop    WORD PTR [rax+rax*1+0x0]
  405080:	xor    eax,eax
  405082:	cmp    BYTE PTR [rbx+0x6],0x2b
  405086:	sete   al
  405089:	lea    rbx,[rbx+rax*1+0x6]
  40508e:	jmp    0x404f76
  405093:	mov    eax,0x6
  405098:	nop    DWORD PTR [rax+rax*1+0x0]
  4050a0:	shl    rax,0x4
  4050a4:	mov    ecx,DWORD PTR [rsp+rax*1+0x38]
  4050a8:	call   0x4122d0
  4050ad:	xor    eax,eax
  4050af:	add    rsp,0xc8
  4050b6:	pop    rbx
  4050b7:	pop    rsi
  4050b8:	pop    rdi
  4050b9:	pop    rbp
  4050ba:	ret    
  4050bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4050c0:	xor    eax,eax
  4050c2:	jmp    0x4050a0
  4050c4:	mov    eax,0x1
  4050c9:	jmp    0x4050a0
  4050cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4050d0:	mov    eax,0x2
  4050d5:	jmp    0x4050a0
  4050d7:	nop    WORD PTR [rax+rax*1+0x0]
  4050e0:	mov    eax,0x3
  4050e5:	jmp    0x4050a0
  4050e7:	nop    WORD PTR [rax+rax*1+0x0]
  4050f0:	mov    eax,0x4
  4050f5:	jmp    0x4050a0
  4050f7:	nop    WORD PTR [rax+rax*1+0x0]
  405100:	mov    eax,0x5
  405105:	jmp    0x4050a0
  405107:	nop    WORD PTR [rax+rax*1+0x0]
  405110:	mov    eax,0x7
  405115:	jmp    0x4050a0
  405117:	nop    WORD PTR [rax+rax*1+0x0]
  405120:	mov    eax,0x8
  405125:	jmp    0x4050a0
  40512a:	mov    r9,rbx
  40512d:	lea    r8,[rip+0x1ac94]        # 0x41fdc8
  405134:	lea    rbx,[rsp+0xc0]
  40513c:	mov    edx,0x8
  405141:	xor    ecx,ecx
  405143:	call   0x412308
  405148:	mov    r9,QWORD PTR [rbp+0x0]
  40514c:	lea    r8,[rip+0x1ac69]        # 0x41fdbc
  405153:	xor    ecx,ecx
  405155:	mov    edx,0x8
  40515a:	add    rbp,0x10
  40515e:	call   0x412308
  405163:	cmp    rbp,rbx
  405166:	jne    0x405148
  405168:	mov    ecx,0x1
  40516d:	call   0x401cb0
  405172:	nop
  405173:	nop    DWORD PTR [rax]
  405176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405180:	push   r15
  405182:	push   r14
  405184:	push   r13
  405186:	push   r12
  405188:	push   rbp
  405189:	push   rdi
  40518a:	push   rsi
  40518b:	push   rbx
  40518c:	sub    rsp,0x38
  405190:	lea    r9,[rip+0x1ac9c]        # 0x41fe33
  405197:	mov    r13,r8
  40519a:	mov    r14d,ecx
  40519d:	mov    rsi,rdx
  4051a0:	call   0x403cb0
  4051a5:	cmp    QWORD PTR [r13+0x0],0x0
  4051aa:	je     0x4051ce
  4051ac:	mov    rdx,r13
  4051af:	nop
  4051b0:	mov    ecx,DWORD PTR [rdx+0x8]
  4051b3:	test   ch,0x20
  4051b6:	je     0x4051c4
  4051b8:	and    ecx,0xc0000
  4051be:	je     0x4053d7
  4051c4:	add    rdx,0x28
  4051c8:	cmp    QWORD PTR [rdx],0x0
  4051cc:	jne    0x4051b0
  4051ce:	test   eax,eax
  4051d0:	je     0x4053b5
  4051d6:	cdqe   
  4051d8:	mov    r8,QWORD PTR [rsi+rax*8+0x8]
  4051dd:	test   r8,r8
  4051e0:	je     0x4051f0
  4051e2:	lea    rdx,[rip+0x1ac4a]        # 0x41fe33
  4051e9:	xor    ecx,ecx
  4051eb:	call   0x404f10
  4051f0:	lea    r9,[rip+0x1ac6b]        # 0x41fe62
  4051f7:	mov    r8,r13
  4051fa:	mov    rdx,rsi
  4051fd:	mov    ecx,r14d
  405200:	call   0x403cb0
  405205:	lea    rcx,[rip+0x1ac5d]        # 0x41fe69
  40520c:	mov    ebx,eax
  40520e:	call   0x4198b8
  405213:	test   rax,rax
  405216:	jne    0x405250
  405218:	test   ebx,ebx
  40521a:	jne    0x405250
  40521c:	lea    r9,[rip+0x1ac69]        # 0x41fe8c
  405223:	mov    r8,r13
  405226:	mov    rdx,rsi
  405229:	mov    ecx,r14d
  40522c:	call   0x403cb0
  405231:	test   eax,eax
  405233:	je     0x40523f
  405235:	mov    DWORD PTR [rip+0x23df1],0x1        # 0x429030
  40523f:	add    rsp,0x38
  405243:	pop    rbx
  405244:	pop    rsi
  405245:	pop    rdi
  405246:	pop    rbp
  405247:	pop    r12
  405249:	pop    r13
  40524b:	pop    r14
  40524d:	pop    r15
  40524f:	ret    
  405250:	mov    rcx,rax
  405253:	call   0x401cd0
  405258:	mov    rcx,QWORD PTR [rip+0x23df1]        # 0x429050
  40525f:	test   rcx,rcx
  405262:	je     0x40521c
  405264:	lea    rdx,[rip+0x1ac07]        # 0x41fe72
  40526b:	call   0x401590
  405270:	test   r14d,r14d
  405273:	jle    0x4052fd
  405279:	lea    edi,[r14-0x1]
  40527d:	xor    ebx,ebx
  40527f:	mov    r12d,0xa
  405285:	mov    rbp,rdi
  405288:	add    rdi,0x1
  40528c:	nop    DWORD PTR [rax+0x0]
  405290:	mov    r15,QWORD PTR [rsi+rbx*8]
  405294:	movzx  eax,BYTE PTR [r15]
  405298:	test   al,al
  40529a:	je     0x4052ce
  40529c:	mov    rdx,r15
  40529f:	nop
  4052a0:	lea    ecx,[rax-0x2b]
  4052a3:	cmp    cl,0xf
  4052a6:	lea    ecx,[rax-0x40]
  4052a9:	seta   r8b
  4052ad:	cmp    cl,0x1a
  4052b0:	seta   cl
  4052b3:	test   r8b,cl
  4052b6:	je     0x4052c3
  4052b8:	cmp    al,0x5f
  4052ba:	je     0x4052c3
  4052bc:	sub    eax,0x61
  4052bf:	cmp    al,0x19
  4052c1:	ja     0x405310
  4052c3:	add    rdx,0x1
  4052c7:	movzx  eax,BYTE PTR [rdx]
  4052ca:	test   al,al
  4052cc:	jne    0x4052a0
  4052ce:	mov    rdx,QWORD PTR [rip+0x23d7b]        # 0x429050
  4052d5:	mov    rcx,r15
  4052d8:	call   0x4198d8
  4052dd:	mov    rdx,QWORD PTR [rip+0x23d6c]        # 0x429050
  4052e4:	cmp    ebp,ebx
  4052e6:	mov    ecx,0x20
  4052eb:	cmovle ecx,r12d
  4052ef:	add    rbx,0x1
  4052f3:	call   0x4198e0
  4052f8:	cmp    rbx,rdi
  4052fb:	jne    0x405290
  4052fd:	mov    rcx,QWORD PTR [rip+0x23d4c]        # 0x429050
  405304:	call   0x4198f8
  405309:	jmp    0x40521c
  40530e:	xchg   ax,ax
  405310:	mov    rdx,QWORD PTR [rip+0x23d39]        # 0x429050
  405317:	mov    ecx,0x22
  40531c:	call   0x4198e0
  405321:	movzx  r8d,BYTE PTR [r15]
  405325:	test   r8b,r8b
  405328:	jne    0x405350
  40532a:	jmp    0x405385
  40532c:	nop    DWORD PTR [rax+0x0]
  405330:	mov    rcx,QWORD PTR [rip+0x23d19]        # 0x429050
  405337:	lea    rdx,[rip+0x1ab47]        # 0x41fe85
  40533e:	call   0x401590
  405343:	add    r15,0x1
  405347:	movzx  r8d,BYTE PTR [r15]
  40534b:	test   r8b,r8b
  40534e:	je     0x405385
  405350:	lea    eax,[r8-0x22]
  405354:	test   al,0xfd
  405356:	je     0x4053a0
  405358:	lea    eax,[r8-0x5c]
  40535c:	test   al,0xfb
  40535e:	je     0x4053a0
  405360:	lea    eax,[r8-0x20]
  405364:	cmp    al,0x5e
  405366:	ja     0x405330
  405368:	mov    rdx,QWORD PTR [rip+0x23ce1]        # 0x429050
  40536f:	movzx  ecx,r8b
  405373:	add    r15,0x1
  405377:	call   0x4198e0
  40537c:	movzx  r8d,BYTE PTR [r15]
  405380:	test   r8b,r8b
  405383:	jne    0x405350
  405385:	mov    rdx,QWORD PTR [rip+0x23cc4]        # 0x429050
  40538c:	mov    ecx,0x22
  405391:	call   0x4198e0
  405396:	jmp    0x4052dd
  40539b:	nop    DWORD PTR [rax+rax*1+0x0]
  4053a0:	mov    rcx,QWORD PTR [rip+0x23ca9]        # 0x429050
  4053a7:	lea    rdx,[rip+0x1aad3]        # 0x41fe81
  4053ae:	call   0x401590
  4053b3:	jmp    0x405343
  4053b5:	lea    r9,[rip+0x1aaa4]        # 0x41fe60
  4053bc:	mov    r8,r13
  4053bf:	mov    rdx,rsi
  4053c2:	mov    ecx,r14d
  4053c5:	call   0x403cb0
  4053ca:	test   eax,eax
  4053cc:	je     0x4051f0
  4053d2:	jmp    0x4051d6
  4053d7:	lea    rax,[rip+0x19d18]        # 0x41f0f6
  4053de:	lea    r9,[rip+0x1aa5b]        # 0x41fe40
  4053e5:	lea    r8,[rip+0x19cec]        # 0x41f0d8
  4053ec:	xor    edx,edx
  4053ee:	xor    ecx,ecx
  4053f0:	mov    DWORD PTR [rsp+0x28],0x1ee
  4053f8:	mov    QWORD PTR [rsp+0x20],rax
  4053fd:	call   0x412308
  405402:	call   0x419910
  405407:	nop
  405408:	nop    DWORD PTR [rax+rax*1+0x0]
  405410:	xor    ecx,ecx
  405412:	jmp    0x401cd0
  405417:	nop    WORD PTR [rax+rax*1+0x0]
  405420:	push   rbx
  405421:	sub    rsp,0x30
  405425:	mov    rbx,r8
  405428:	lea    rdx,[rsp+0x28]
  40542d:	mov    r8d,0xa
  405433:	mov    rcx,rbx
  405436:	call   0x419810
  40543b:	movsxd rcx,eax
  40543e:	mov    rax,QWORD PTR [rsp+0x28]
  405443:	cmp    BYTE PTR [rax],0x0
  405446:	jne    0x405455
  405448:	call   0x4122b0
  40544d:	xor    eax,eax
  40544f:	add    rsp,0x30
  405453:	pop    rbx
  405454:	ret    
  405455:	lea    r8,[rip+0x1aa3c]        # 0x41fe98
  40545c:	xor    ecx,ecx
  40545e:	mov    r9,rbx
  405461:	mov    edx,0x8
  405466:	call   0x412308
  40546b:	mov    ecx,0x1
  405470:	call   0x401cb0
  405475:	nop
  405476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405480:	sub    rsp,0x28
  405484:	lea    r8,[rip+0x1aa2d]        # 0x41feb8
  40548b:	xor    ecx,ecx
  40548d:	mov    r9,rdx
  405490:	mov    edx,0x18
  405495:	call   0x412308
  40549a:	xor    eax,eax
  40549c:	add    rsp,0x28
  4054a0:	ret    
  4054a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4054a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4054b0:	push   rdi
  4054b1:	push   rsi
  4054b2:	push   rbx
  4054b3:	sub    rsp,0xb0
  4054ba:	mov    r8d,0x80
  4054c0:	lea    rbx,[rsp+0x30]
  4054c5:	mov    esi,edx
  4054c7:	mov    rdi,rcx
  4054ca:	mov    ecx,esi
  4054cc:	mov    rdx,rbx
  4054cf:	call   0x412218
  4054d4:	test   eax,eax
  4054d6:	js     0x405500
  4054d8:	lea    r8,[rip+0x1a9f9]        # 0x41fed8
  4054df:	mov    QWORD PTR [rsp+0x20],rbx
  4054e4:	mov    r9,rdi
  4054e7:	mov    edx,0x10
  4054ec:	xor    ecx,ecx
  4054ee:	call   0x412308
  4054f3:	nop
  4054f4:	add    rsp,0xb0
  4054fb:	pop    rbx
  4054fc:	pop    rsi
  4054fd:	pop    rdi
  4054fe:	ret    
  4054ff:	nop
  405500:	neg    esi
  405502:	mov    ecx,esi
  405504:	call   0x419848
  405509:	mov    rbx,rax
  40550c:	jmp    0x4054d8
  40550e:	xchg   ax,ax
  405510:	push   rdi
  405511:	push   rsi
  405512:	push   rbx
  405513:	sub    rsp,0x70
  405517:	lea    r9,[rip+0x1a9c2]        # 0x41fee0
  40551e:	call   0x403cb0
  405523:	or     eax,DWORD PTR [rip+0x23b07]        # 0x429030
  405529:	je     0x405533
  40552b:	add    rsp,0x70
  40552f:	pop    rbx
  405530:	pop    rsi
  405531:	pop    rdi
  405532:	ret    
  405533:	mov    r9,QWORD PTR [rip+0x20786]        # 0x425cc0
  40553a:	lea    r8,[rip+0x1a9a7]        # 0x41fee8
  405541:	xor    ecx,ecx
  405543:	mov    edx,0x20
  405548:	lea    rbx,[rip+0x19be9]        # 0x41f138
  40554f:	call   0x412308
  405554:	mov    rax,QWORD PTR [rip+0x20755]        # 0x425cb0
  40555b:	lea    r8,[rip+0x1a99e]        # 0x41ff00
  405562:	xor    ecx,ecx
  405564:	mov    edx,0x20
  405569:	mov    DWORD PTR [rsp+0x20],0x7e0
  405571:	mov    rsi,rbx
  405574:	mov    r9d,DWORD PTR [rax]
  405577:	call   0x412308
  40557c:	lea    r8,[rip+0x1a0c9]        # 0x41f64c
  405583:	xor    ecx,ecx
  405585:	mov    edx,0x20
  40558a:	call   0x412308
  40558f:	lea    rax,[rip+0x1a9a6]        # 0x41ff3c
  405596:	lea    r9,[rip+0x19b76]        # 0x41f113
  40559d:	lea    r8,[rip+0x1a987]        # 0x41ff2b
  4055a4:	xor    ecx,ecx
  4055a6:	mov    edx,0x20
  4055ab:	mov    QWORD PTR [rsp+0x20],rax
  4055b0:	call   0x412308
  4055b5:	lea    r9,[rip+0x19b57]        # 0x41f113
  4055bc:	lea    r8,[rip+0x1a98d]        # 0x41ff50
  4055c3:	xor    ecx,ecx
  4055c5:	mov    edx,0x20
  4055ca:	call   0x412308
  4055cf:	call   0x4121d8
  4055d4:	mov    ecx,0x27a
  4055d9:	mov    rdi,rax
  4055dc:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4055de:	je     0x405619
  4055e0:	mov    edx,DWORD PTR [rip+0x23a4e]        # 0x429034
  4055e6:	test   edx,edx
  4055e8:	je     0x405c60
  4055ee:	mov    QWORD PTR [rsp+0x28],rax
  4055f3:	lea    rax,[rip+0x1ac2c]        # 0x420226
  4055fa:	lea    r9,[rip+0x19b12]        # 0x41f113
  405601:	lea    r8,[rip+0x1ac03]        # 0x42020b
  405608:	mov    edx,0x20
  40560d:	xor    ecx,ecx
  40560f:	mov    QWORD PTR [rsp+0x20],rax
  405614:	call   0x412308
  405619:	call   0x4120e8
  40561e:	mov    rsi,rbx
  405621:	mov    ecx,0x27a
  405626:	mov    rdi,rax
  405629:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40562b:	je     0x405666
  40562d:	mov    edi,DWORD PTR [rip+0x23a01]        # 0x429034
  405633:	test   edi,edi
  405635:	je     0x405cd0
  40563b:	mov    QWORD PTR [rsp+0x28],rax
  405640:	lea    rax,[rip+0x1abe6]        # 0x42022d
  405647:	lea    r9,[rip+0x19ac5]        # 0x41f113
  40564e:	lea    r8,[rip+0x1abb6]        # 0x42020b
  405655:	mov    edx,0x20
  40565a:	xor    ecx,ecx
  40565c:	mov    QWORD PTR [rsp+0x20],rax
  405661:	call   0x412308
  405666:	call   0x412018
  40566b:	mov    rsi,rbx
  40566e:	mov    ecx,0x27a
  405673:	mov    rdi,rax
  405676:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405678:	je     0x4056b3
  40567a:	mov    esi,DWORD PTR [rip+0x239b4]        # 0x429034
  405680:	test   esi,esi
  405682:	je     0x405bf0
  405688:	mov    QWORD PTR [rsp+0x28],rax
  40568d:	lea    rax,[rip+0x1aba1]        # 0x420235
  405694:	lea    r9,[rip+0x19a78]        # 0x41f113
  40569b:	lea    r8,[rip+0x1ab69]        # 0x42020b
  4056a2:	mov    edx,0x20
  4056a7:	xor    ecx,ecx
  4056a9:	mov    QWORD PTR [rsp+0x20],rax
  4056ae:	call   0x412308
  4056b3:	call   0x411f68
  4056b8:	mov    rsi,rbx
  4056bb:	mov    ecx,0x27a
  4056c0:	mov    rdi,rax
  4056c3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4056c5:	je     0x405702
  4056c7:	mov    r11d,DWORD PTR [rip+0x23966]        # 0x429034
  4056ce:	test   r11d,r11d
  4056d1:	je     0x405c93
  4056d7:	mov    QWORD PTR [rsp+0x28],rax
  4056dc:	lea    rax,[rip+0x1ab5b]        # 0x42023e
  4056e3:	lea    r9,[rip+0x19a29]        # 0x41f113
  4056ea:	lea    r8,[rip+0x1ab1a]        # 0x42020b
  4056f1:	mov    edx,0x20
  4056f6:	xor    ecx,ecx
  4056f8:	mov    QWORD PTR [rsp+0x20],rax
  4056fd:	call   0x412308
  405702:	call   0x411fc0
  405707:	mov    rsi,rbx
  40570a:	mov    ecx,0x27a
  40570f:	mov    rdi,rax
  405712:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405714:	je     0x405751
  405716:	mov    r10d,DWORD PTR [rip+0x23917]        # 0x429034
  40571d:	test   r10d,r10d
  405720:	je     0x405c23
  405726:	mov    QWORD PTR [rsp+0x28],rax
  40572b:	lea    rax,[rip+0x1ab15]        # 0x420247
  405732:	lea    r9,[rip+0x199da]        # 0x41f113
  405739:	lea    r8,[rip+0x1aacb]        # 0x42020b
  405740:	mov    edx,0x20
  405745:	xor    ecx,ecx
  405747:	mov    QWORD PTR [rsp+0x20],rax
  40574c:	call   0x412308
  405751:	call   0x412158
  405756:	mov    rsi,rbx
  405759:	mov    ecx,0x27a
  40575e:	mov    rdi,rax
  405761:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405763:	je     0x4057a0
  405765:	mov    r9d,DWORD PTR [rip+0x238c8]        # 0x429034
  40576c:	test   r9d,r9d
  40576f:	je     0x405d03
  405775:	mov    QWORD PTR [rsp+0x28],rax
  40577a:	lea    rax,[rip+0x1aacf]        # 0x420250
  405781:	lea    r9,[rip+0x1998b]        # 0x41f113
  405788:	lea    r8,[rip+0x1aa7c]        # 0x42020b
  40578f:	mov    edx,0x20
  405794:	xor    ecx,ecx
  405796:	mov    QWORD PTR [rsp+0x20],rax
  40579b:	call   0x412308
  4057a0:	call   0x4121a0
  4057a5:	mov    rsi,rbx
  4057a8:	mov    ecx,0x27a
  4057ad:	mov    rdi,rax
  4057b0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4057b2:	je     0x4057ef
  4057b4:	mov    r8d,DWORD PTR [rip+0x23879]        # 0x429034
  4057bb:	test   r8d,r8d
  4057be:	je     0x405d40
  4057c4:	mov    QWORD PTR [rsp+0x28],rax
  4057c9:	lea    rax,[rip+0x1aa8b]        # 0x42025b
  4057d0:	lea    r9,[rip+0x1993c]        # 0x41f113
  4057d7:	lea    r8,[rip+0x1aa2d]        # 0x42020b
  4057de:	mov    edx,0x20
  4057e3:	xor    ecx,ecx
  4057e5:	mov    QWORD PTR [rsp+0x20],rax
  4057ea:	call   0x412308
  4057ef:	call   0x412178
  4057f4:	mov    rsi,rbx
  4057f7:	mov    ecx,0x27a
  4057fc:	mov    rdi,rax
  4057ff:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405801:	jne    0x405b75
  405807:	call   0x412168
  40580c:	mov    rsi,rbx
  40580f:	mov    ecx,0x27a
  405814:	mov    rdi,rax
  405817:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  405819:	je     0x405854
  40581b:	mov    edx,DWORD PTR [rip+0x23813]        # 0x429034
  405821:	test   edx,edx
  405823:	je     0x405bb3
  405829:	mov    QWORD PTR [rsp+0x28],rax
  40582e:	lea    rax,[rip+0x1aa39]        # 0x42026e
  405835:	lea    r9,[rip+0x198d7]        # 0x41f113
  40583c:	lea    r8,[rip+0x1a9c8]        # 0x42020b
  405843:	mov    edx,0x20
  405848:	xor    ecx,ecx
  40584a:	mov    QWORD PTR [rsp+0x20],rax
  40584f:	call   0x412308
  405854:	call   0x4121d0
  405859:	movzx  edx,al
  40585c:	lea    r9,[rip+0x198b0]        # 0x41f113
  405863:	lea    r8,[rip+0x1aa0e]        # 0x420278
  40586a:	mov    DWORD PTR [rsp+0x50],edx
  40586e:	movzx  edx,ah
  405871:	shr    eax,0x10
  405874:	mov    DWORD PTR [rsp+0x40],eax
  405878:	lea    rax,[rip+0x1a9a7]        # 0x420226
  40587f:	xor    ecx,ecx
  405881:	mov    DWORD PTR [rsp+0x48],edx
  405885:	mov    DWORD PTR [rsp+0x38],0x64
  40588d:	mov    edx,0x20
  405892:	mov    QWORD PTR [rsp+0x20],rax
  405897:	mov    DWORD PTR [rsp+0x30],0x1f
  40589f:	mov    DWORD PTR [rsp+0x28],0x36
  4058a7:	call   0x412308
  4058ac:	call   0x412080
  4058b1:	movzx  edx,al
  4058b4:	lea    r9,[rip+0x19858]        # 0x41f113
  4058bb:	lea    r8,[rip+0x1a9b6]        # 0x420278
  4058c2:	mov    DWORD PTR [rsp+0x50],edx
  4058c6:	movzx  edx,ah
  4058c9:	shr    eax,0x10
  4058cc:	mov    DWORD PTR [rsp+0x40],eax
  4058d0:	lea    rax,[rip+0x1a956]        # 0x42022d
  4058d7:	xor    ecx,ecx
  4058d9:	mov    DWORD PTR [rsp+0x48],edx
  4058dd:	mov    DWORD PTR [rsp+0x38],0x64
  4058e5:	mov    edx,0x20
  4058ea:	mov    QWORD PTR [rsp+0x20],rax
  4058ef:	mov    DWORD PTR [rsp+0x30],0x3c
  4058f7:	mov    DWORD PTR [rsp+0x28],0x38
  4058ff:	call   0x412308
  405904:	call   0x411fd8
  405909:	movzx  edx,al
  40590c:	lea    r9,[rip+0x19800]        # 0x41f113
  405913:	lea    r8,[rip+0x1a95e]        # 0x420278
  40591a:	mov    DWORD PTR [rsp+0x50],edx
  40591e:	movzx  edx,ah
  405921:	shr    eax,0x10
  405924:	mov    DWORD PTR [rsp+0x40],eax
  405928:	lea    rax,[rip+0x1a906]        # 0x420235
  40592f:	xor    ecx,ecx
  405931:	mov    DWORD PTR [rsp+0x48],edx
  405935:	mov    DWORD PTR [rsp+0x38],0x65
  40593d:	mov    edx,0x20
  405942:	mov    QWORD PTR [rsp+0x20],rax
  405947:	mov    DWORD PTR [rsp+0x30],0x28
  40594f:	mov    DWORD PTR [rsp+0x28],0x38
  405957:	call   0x412308
  40595c:	call   0x411f40
  405961:	movzx  edx,al
  405964:	lea    r9,[rip+0x197a8]        # 0x41f113
  40596b:	lea    r8,[rip+0x1a906]        # 0x420278
  405972:	mov    DWORD PTR [rsp+0x50],edx
  405976:	movzx  edx,ah
  405979:	shr    eax,0x10
  40597c:	mov    DWORD PTR [rsp+0x40],eax
  405980:	lea    rax,[rip+0x1a8b7]        # 0x42023e
  405987:	xor    ecx,ecx
  405989:	mov    DWORD PTR [rsp+0x48],edx
  40598d:	mov    DWORD PTR [rsp+0x38],0x64
  405995:	mov    edx,0x20
  40599a:	mov    QWORD PTR [rsp+0x20],rax
  40599f:	mov    DWORD PTR [rsp+0x30],0x4
  4059a7:	mov    DWORD PTR [rsp+0x28],0x38
  4059af:	call   0x412308
  4059b4:	call   0x411f90
  4059b9:	movzx  edx,al
  4059bc:	lea    r9,[rip+0x19750]        # 0x41f113
  4059c3:	lea    r8,[rip+0x1a8ae]        # 0x420278
  4059ca:	mov    DWORD PTR [rsp+0x50],edx
  4059ce:	movzx  edx,ah
  4059d1:	shr    eax,0x10
  4059d4:	mov    DWORD PTR [rsp+0x40],eax
  4059d8:	lea    rax,[rip+0x1a868]        # 0x420247
  4059df:	xor    ecx,ecx
  4059e1:	mov    DWORD PTR [rsp+0x48],edx
  4059e5:	mov    DWORD PTR [rsp+0x38],0x65
  4059ed:	mov    edx,0x20
  4059f2:	mov    QWORD PTR [rsp+0x20],rax
  4059f7:	mov    DWORD PTR [rsp+0x30],0x28
  4059ff:	mov    DWORD PTR [rsp+0x28],0x5
  405a07:	call   0x412308
  405a0c:	call   0x412148
  405a11:	movzx  edx,al
  405a14:	lea    r9,[rip+0x196f8]        # 0x41f113
  405a1b:	lea    r8,[rip+0x1a856]        # 0x420278
  405a22:	mov    DWORD PTR [rsp+0x50],edx
  405a26:	movzx  edx,ah
  405a29:	shr    eax,0x10
  405a2c:	mov    DWORD PTR [rsp+0x40],eax
  405a30:	lea    rax,[rip+0x1a819]        # 0x420250
  405a37:	xor    ecx,ecx
  405a39:	mov    DWORD PTR [rsp+0x48],edx
  405a3d:	mov    DWORD PTR [rsp+0x38],0x0
  405a45:	mov    edx,0x20
  405a4a:	mov    QWORD PTR [rsp+0x20],rax
  405a4f:	mov    DWORD PTR [rsp+0x30],0x1
  405a57:	mov    DWORD PTR [rsp+0x28],0x2
  405a5f:	call   0x412308
  405a64:	call   0x412198
  405a69:	movzx  edx,al
  405a6c:	lea    r9,[rip+0x196a0]        # 0x41f113
  405a73:	lea    r8,[rip+0x1a7fe]        # 0x420278
  405a7a:	mov    DWORD PTR [rsp+0x50],edx
  405a7e:	movzx  edx,ah
  405a81:	shr    eax,0x10
  405a84:	mov    DWORD PTR [rsp+0x40],eax
  405a88:	lea    rax,[rip+0x1a7cc]        # 0x42025b
  405a8f:	xor    ecx,ecx
  405a91:	mov    DWORD PTR [rsp+0x48],edx
  405a95:	mov    DWORD PTR [rsp+0x38],0x65
  405a9d:	mov    edx,0x20
  405aa2:	mov    QWORD PTR [rsp+0x20],rax
  405aa7:	mov    DWORD PTR [rsp+0x30],0x1
  405aaf:	mov    DWORD PTR [rsp+0x28],0x3
  405ab7:	call   0x412308
  405abc:	call   0x412170
  405ac1:	movzx  edx,al
  405ac4:	lea    r9,[rip+0x19648]        # 0x41f113
  405acb:	lea    r8,[rip+0x1a7a6]        # 0x420278
  405ad2:	mov    DWORD PTR [rsp+0x50],edx
  405ad6:	movzx  edx,ah
  405ad9:	shr    eax,0x10
  405adc:	mov    DWORD PTR [rsp+0x40],eax
  405ae0:	lea    rax,[rip+0x1a77c]        # 0x420263
  405ae7:	xor    ecx,ecx
  405ae9:	mov    DWORD PTR [rsp+0x48],edx
  405aed:	mov    DWORD PTR [rsp+0x38],0x65
  405af5:	mov    edx,0x20
  405afa:	mov    QWORD PTR [rsp+0x20],rax
  405aff:	mov    DWORD PTR [rsp+0x30],0x2
  405b07:	mov    DWORD PTR [rsp+0x28],0x1
  405b0f:	call   0x412308
  405b14:	call   0x412160
  405b19:	movzx  edx,al
  405b1c:	lea    r9,[rip+0x195f0]        # 0x41f113
  405b23:	lea    r8,[rip+0x1a74e]        # 0x420278
  405b2a:	mov    DWORD PTR [rsp+0x50],edx
  405b2e:	movzx  edx,ah
  405b31:	shr    eax,0x10
  405b34:	mov    DWORD PTR [rsp+0x40],eax
  405b38:	lea    rax,[rip+0x1a72f]        # 0x42026e
  405b3f:	mov    DWORD PTR [rsp+0x48],edx
  405b43:	mov    DWORD PTR [rsp+0x38],0x64
  405b4b:	mov    DWORD PTR [rsp+0x30],0x3
  405b53:	mov    edx,0x20
  405b58:	mov    DWORD PTR [rsp+0x28],0x35
  405b60:	mov    QWORD PTR [rsp+0x20],rax
  405b65:	xor    ecx,ecx
  405b67:	call   0x412308
  405b6c:	nop
  405b6d:	add    rsp,0x70
  405b71:	pop    rbx
  405b72:	pop    rsi
  405b73:	pop    rdi
  405b74:	ret    
  405b75:	mov    ecx,DWORD PTR [rip+0x234b9]        # 0x429034
  405b7b:	test   ecx,ecx
  405b7d:	je     0x405d73
  405b83:	mov    QWORD PTR [rsp+0x28],rax
  405b88:	lea    rax,[rip+0x1a6d4]        # 0x420263
  405b8f:	lea    r9,[rip+0x1957d]        # 0x41f113
  405b96:	lea    r8,[rip+0x1a66e]        # 0x42020b
  405b9d:	mov    edx,0x20
  405ba2:	xor    ecx,ecx
  405ba4:	mov    QWORD PTR [rsp+0x20],rax
  405ba9:	call   0x412308
  405bae:	jmp    0x405807
  405bb3:	lea    r9,[rip+0x19559]        # 0x41f113
  405bba:	lea    r8,[rip+0x1a61f]        # 0x4201e0
  405bc1:	mov    edx,0x20
  405bc6:	xor    ecx,ecx
  405bc8:	mov    QWORD PTR [rsp+0x68],rax
  405bcd:	call   0x412308
  405bd2:	mov    DWORD PTR [rip+0x23458],0x1        # 0x429034
  405bdc:	mov    rax,QWORD PTR [rsp+0x68]
  405be1:	jmp    0x405829
  405be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405bf0:	lea    r9,[rip+0x1951c]        # 0x41f113
  405bf7:	lea    r8,[rip+0x1a5e2]        # 0x4201e0
  405bfe:	mov    edx,0x20
  405c03:	xor    ecx,ecx
  405c05:	mov    QWORD PTR [rsp+0x68],rax
  405c0a:	call   0x412308
  405c0f:	mov    DWORD PTR [rip+0x2341b],0x1        # 0x429034
  405c19:	mov    rax,QWORD PTR [rsp+0x68]
  405c1e:	jmp    0x405688
  405c23:	lea    r9,[rip+0x194e9]        # 0x41f113
  405c2a:	lea    r8,[rip+0x1a5af]        # 0x4201e0
  405c31:	mov    edx,0x20
  405c36:	xor    ecx,ecx
  405c38:	mov    QWORD PTR [rsp+0x68],rax
  405c3d:	call   0x412308
  405c42:	mov    DWORD PTR [rip+0x233e8],0x1        # 0x429034
  405c4c:	mov    rax,QWORD PTR [rsp+0x68]
  405c51:	jmp    0x405726
  405c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c60:	lea    r9,[rip+0x194ac]        # 0x41f113
  405c67:	lea    r8,[rip+0x1a572]        # 0x4201e0
  405c6e:	mov    edx,0x20
  405c73:	xor    ecx,ecx
  405c75:	mov    QWORD PTR [rsp+0x68],rax
  405c7a:	call   0x412308
  405c7f:	mov    DWORD PTR [rip+0x233ab],0x1        # 0x429034
  405c89:	mov    rax,QWORD PTR [rsp+0x68]
  405c8e:	jmp    0x4055ee
  405c93:	lea    r9,[rip+0x19479]        # 0x41f113
  405c9a:	lea    r8,[rip+0x1a53f]        # 0x4201e0
  405ca1:	mov    edx,0x20
  405ca6:	xor    ecx,ecx
  405ca8:	mov    QWORD PTR [rsp+0x68],rax
  405cad:	call   0x412308
  405cb2:	mov    DWORD PTR [rip+0x23378],0x1        # 0x429034
  405cbc:	mov    rax,QWORD PTR [rsp+0x68]
  405cc1:	jmp    0x4056d7
  405cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cd0:	lea    r9,[rip+0x1943c]        # 0x41f113
  405cd7:	lea    r8,[rip+0x1a502]        # 0x4201e0
  405cde:	mov    edx,0x20
  405ce3:	xor    ecx,ecx
  405ce5:	mov    QWORD PTR [rsp+0x68],rax
  405cea:	call   0x412308
  405cef:	mov    DWORD PTR [rip+0x2333b],0x1        # 0x429034
  405cf9:	mov    rax,QWORD PTR [rsp+0x68]
  405cfe:	jmp    0x40563b
  405d03:	lea    r9,[rip+0x19409]        # 0x41f113
  405d0a:	lea    r8,[rip+0x1a4cf]        # 0x4201e0
  405d11:	mov    edx,0x20
  405d16:	xor    ecx,ecx
  405d18:	mov    QWORD PTR [rsp+0x68],rax
  405d1d:	call   0x412308
  405d22:	mov    DWORD PTR [rip+0x23308],0x1        # 0x429034
  405d2c:	mov    rax,QWORD PTR [rsp+0x68]
  405d31:	jmp    0x405775
  405d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d40:	lea    r9,[rip+0x193cc]        # 0x41f113
  405d47:	lea    r8,[rip+0x1a492]        # 0x4201e0
  405d4e:	mov    edx,0x20
  405d53:	xor    ecx,ecx
  405d55:	mov    QWORD PTR [rsp+0x68],rax
  405d5a:	call   0x412308
  405d5f:	mov    DWORD PTR [rip+0x232cb],0x1        # 0x429034
  405d69:	mov    rax,QWORD PTR [rsp+0x68]
  405d6e:	jmp    0x4057c4
  405d73:	lea    r9,[rip+0x19399]        # 0x41f113
  405d7a:	lea    r8,[rip+0x1a45f]        # 0x4201e0
  405d81:	mov    edx,0x20
  405d86:	xor    ecx,ecx
  405d88:	mov    QWORD PTR [rsp+0x68],rax
  405d8d:	call   0x412308
  405d92:	mov    DWORD PTR [rip+0x23298],0x1        # 0x429034
  405d9c:	mov    rax,QWORD PTR [rsp+0x68]
  405da1:	jmp    0x405b83
  405da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405db0:	sub    rsp,0x68
  405db4:	lea    rcx,[rip+0xffffffffffffb775]        # 0x401530
  405dbb:	call   0x4122e0
  405dc0:	mov    r9,QWORD PTR [rip+0x1fef9]        # 0x425cc0
  405dc7:	lea    r8,[rip+0x1a11a]        # 0x41fee8
  405dce:	xor    ecx,ecx
  405dd0:	mov    edx,0x20
  405dd5:	call   0x412308
  405dda:	mov    rax,QWORD PTR [rip+0x1fecf]        # 0x425cb0
  405de1:	lea    r8,[rip+0x1a118]        # 0x41ff00
  405de8:	xor    ecx,ecx
  405dea:	mov    DWORD PTR [rsp+0x20],0x7e0
  405df2:	mov    edx,0x20
  405df7:	mov    r9d,DWORD PTR [rax]
  405dfa:	call   0x412308
  405dff:	lea    r8,[rip+0x19846]        # 0x41f64c
  405e06:	xor    ecx,ecx
  405e08:	mov    edx,0x20
  405e0d:	call   0x412308
  405e12:	lea    rax,[rip+0x1a123]        # 0x41ff3c
  405e19:	lea    r9,[rip+0x195a3]        # 0x41f3c3
  405e20:	lea    r8,[rip+0x1a104]        # 0x41ff2b
  405e27:	xor    ecx,ecx
  405e29:	mov    edx,0x20
  405e2e:	mov    QWORD PTR [rsp+0x20],rax
  405e33:	call   0x412308
  405e38:	lea    r9,[rip+0x19584]        # 0x41f3c3
  405e3f:	lea    r8,[rip+0x1a10a]        # 0x41ff50
  405e46:	xor    ecx,ecx
  405e48:	mov    edx,0x20
  405e4d:	call   0x412308
  405e52:	call   0x4121d0
  405e57:	movzx  edx,al
  405e5a:	lea    r9,[rip+0x19562]        # 0x41f3c3
  405e61:	lea    r8,[rip+0x1a410]        # 0x420278
  405e68:	mov    DWORD PTR [rsp+0x50],edx
  405e6c:	movzx  edx,ah
  405e6f:	shr    eax,0x10
  405e72:	mov    DWORD PTR [rsp+0x40],eax
  405e76:	lea    rax,[rip+0x1a3a9]        # 0x420226
  405e7d:	xor    ecx,ecx
  405e7f:	mov    DWORD PTR [rsp+0x48],edx
  405e83:	mov    DWORD PTR [rsp+0x38],0x64
  405e8b:	mov    edx,0x20
  405e90:	mov    QWORD PTR [rsp+0x20],rax
  405e95:	mov    DWORD PTR [rsp+0x30],0x1f
  405e9d:	mov    DWORD PTR [rsp+0x28],0x36
  405ea5:	call   0x412308
  405eaa:	call   0x412080
  405eaf:	movzx  edx,al
  405eb2:	lea    r9,[rip+0x1950a]        # 0x41f3c3
  405eb9:	lea    r8,[rip+0x1a3b8]        # 0x420278
  405ec0:	mov    DWORD PTR [rsp+0x50],edx
  405ec4:	movzx  edx,ah
  405ec7:	shr    eax,0x10
  405eca:	mov    DWORD PTR [rsp+0x40],eax
  405ece:	lea    rax,[rip+0x1a358]        # 0x42022d
  405ed5:	xor    ecx,ecx
  405ed7:	mov    DWORD PTR [rsp+0x48],edx
  405edb:	mov    DWORD PTR [rsp+0x38],0x64
  405ee3:	mov    edx,0x20
  405ee8:	mov    QWORD PTR [rsp+0x20],rax
  405eed:	mov    DWORD PTR [rsp+0x30],0x3c
  405ef5:	mov    DWORD PTR [rsp+0x28],0x38
  405efd:	call   0x412308
  405f02:	call   0x411fd8
  405f07:	movzx  edx,al
  405f0a:	lea    r9,[rip+0x194b2]        # 0x41f3c3
  405f11:	lea    r8,[rip+0x1a360]        # 0x420278
  405f18:	mov    DWORD PTR [rsp+0x50],edx
  405f1c:	movzx  edx,ah
  405f1f:	shr    eax,0x10
  405f22:	mov    DWORD PTR [rsp+0x40],eax
  405f26:	lea    rax,[rip+0x1a308]        # 0x420235
  405f2d:	xor    ecx,ecx
  405f2f:	mov    DWORD PTR [rsp+0x48],edx
  405f33:	mov    DWORD PTR [rsp+0x38],0x65
  405f3b:	mov    edx,0x20
  405f40:	mov    QWORD PTR [rsp+0x20],rax
  405f45:	mov    DWORD PTR [rsp+0x30],0x28
  405f4d:	mov    DWORD PTR [rsp+0x28],0x38
  405f55:	call   0x412308
  405f5a:	call   0x411f40
  405f5f:	movzx  edx,al
  405f62:	lea    r9,[rip+0x1945a]        # 0x41f3c3
  405f69:	lea    r8,[rip+0x1a308]        # 0x420278
  405f70:	mov    DWORD PTR [rsp+0x50],edx
  405f74:	movzx  edx,ah
  405f77:	shr    eax,0x10
  405f7a:	mov    DWORD PTR [rsp+0x40],eax
  405f7e:	lea    rax,[rip+0x1a2b9]        # 0x42023e
  405f85:	xor    ecx,ecx
  405f87:	mov    DWORD PTR [rsp+0x48],edx
  405f8b:	mov    DWORD PTR [rsp+0x38],0x64
  405f93:	mov    edx,0x20
  405f98:	mov    QWORD PTR [rsp+0x20],rax
  405f9d:	mov    DWORD PTR [rsp+0x30],0x4
  405fa5:	mov    DWORD PTR [rsp+0x28],0x38
  405fad:	call   0x412308
  405fb2:	call   0x411f90
  405fb7:	movzx  edx,al
  405fba:	lea    r9,[rip+0x19402]        # 0x41f3c3
  405fc1:	lea    r8,[rip+0x1a2b0]        # 0x420278
  405fc8:	mov    DWORD PTR [rsp+0x50],edx
  405fcc:	movzx  edx,ah
  405fcf:	shr    eax,0x10
  405fd2:	mov    DWORD PTR [rsp+0x40],eax
  405fd6:	lea    rax,[rip+0x1a26a]        # 0x420247
  405fdd:	mov    DWORD PTR [rsp+0x48],edx
  405fe1:	xor    ecx,ecx
  405fe3:	mov    edx,0x20
  405fe8:	mov    DWORD PTR [rsp+0x38],0x65
  405ff0:	mov    QWORD PTR [rsp+0x20],rax
  405ff5:	mov    DWORD PTR [rsp+0x30],0x28
  405ffd:	mov    DWORD PTR [rsp+0x28],0x5
  406005:	call   0x412308
  40600a:	call   0x412148
  40600f:	movzx  edx,al
  406012:	lea    r9,[rip+0x193aa]        # 0x41f3c3
  406019:	lea    r8,[rip+0x1a258]        # 0x420278
  406020:	mov    DWORD PTR [rsp+0x50],edx
  406024:	movzx  edx,ah
  406027:	shr    eax,0x10
  40602a:	mov    DWORD PTR [rsp+0x40],eax
  40602e:	lea    rax,[rip+0x1a21b]        # 0x420250
  406035:	xor    ecx,ecx
  406037:	mov    DWORD PTR [rsp+0x48],edx
  40603b:	mov    DWORD PTR [rsp+0x38],0x0
  406043:	mov    edx,0x20
  406048:	mov    QWORD PTR [rsp+0x20],rax
  40604d:	mov    DWORD PTR [rsp+0x30],0x1
  406055:	mov    DWORD PTR [rsp+0x28],0x2
  40605d:	call   0x412308
  406062:	call   0x412198
  406067:	movzx  edx,al
  40606a:	lea    r9,[rip+0x19352]        # 0x41f3c3
  406071:	lea    r8,[rip+0x1a200]        # 0x420278
  406078:	mov    DWORD PTR [rsp+0x50],edx
  40607c:	movzx  edx,ah
  40607f:	shr    eax,0x10
  406082:	mov    DWORD PTR [rsp+0x40],eax
  406086:	lea    rax,[rip+0x1a1ce]        # 0x42025b
  40608d:	xor    ecx,ecx
  40608f:	mov    DWORD PTR [rsp+0x48],edx
  406093:	mov    DWORD PTR [rsp+0x38],0x65
  40609b:	mov    edx,0x20
  4060a0:	mov    QWORD PTR [rsp+0x20],rax
  4060a5:	mov    DWORD PTR [rsp+0x30],0x1
  4060ad:	mov    DWORD PTR [rsp+0x28],0x3
  4060b5:	call   0x412308
  4060ba:	call   0x412170
  4060bf:	movzx  edx,al
  4060c2:	lea    r9,[rip+0x192fa]        # 0x41f3c3
  4060c9:	lea    r8,[rip+0x1a1a8]        # 0x420278
  4060d0:	mov    DWORD PTR [rsp+0x50],edx
  4060d4:	movzx  edx,ah
  4060d7:	shr    eax,0x10
  4060da:	mov    DWORD PTR [rsp+0x40],eax
  4060de:	lea    rax,[rip+0x1a17e]        # 0x420263
  4060e5:	xor    ecx,ecx
  4060e7:	mov    DWORD PTR [rsp+0x48],edx
  4060eb:	mov    DWORD PTR [rsp+0x38],0x65
  4060f3:	mov    edx,0x20
  4060f8:	mov    QWORD PTR [rsp+0x20],rax
  4060fd:	mov    DWORD PTR [rsp+0x30],0x2
  406105:	mov    DWORD PTR [rsp+0x28],0x1
  40610d:	call   0x412308
  406112:	call   0x412160
  406117:	movzx  edx,al
  40611a:	lea    r9,[rip+0x192a2]        # 0x41f3c3
  406121:	lea    r8,[rip+0x1a150]        # 0x420278
  406128:	mov    DWORD PTR [rsp+0x50],edx
  40612c:	movzx  edx,ah
  40612f:	shr    eax,0x10
  406132:	mov    DWORD PTR [rsp+0x40],eax
  406136:	lea    rax,[rip+0x1a131]        # 0x42026e
  40613d:	mov    DWORD PTR [rsp+0x48],edx
  406141:	mov    DWORD PTR [rsp+0x38],0x64
  406149:	mov    DWORD PTR [rsp+0x30],0x3
  406151:	mov    edx,0x20
  406156:	mov    QWORD PTR [rsp+0x20],rax
  40615b:	mov    DWORD PTR [rsp+0x28],0x35
  406163:	xor    ecx,ecx
  406165:	call   0x412308
  40616a:	xor    eax,eax
  40616c:	add    rsp,0x68
  406170:	ret    
  406171:	nop    DWORD PTR [rax+rax*1+0x0]
  406176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406180:	sub    rsp,0x28
  406184:	lea    rcx,[rip+0xffffffffffffb3a5]        # 0x401530
  40618b:	call   0x4122e0
  406190:	call   0x401ad0
  406195:	xor    eax,eax
  406197:	add    rsp,0x28
  40619b:	ret    
  40619c:	nop    DWORD PTR [rax+0x0]
  4061a0:	sub    rsp,0x28
  4061a4:	mov    r9,QWORD PTR [rip+0x1fb15]        # 0x425cc0
  4061ab:	lea    rcx,[rip+0x1a0ee]        # 0x4202a0
  4061b2:	mov    r8,r9
  4061b5:	mov    rdx,r9
  4061b8:	call   0x401560
  4061bd:	xor    eax,eax
  4061bf:	add    rsp,0x28
  4061c3:	ret    
  4061c4:	xchg   ax,ax
  4061c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061d0:	push   r15
  4061d2:	push   r14
  4061d4:	push   r13
  4061d6:	push   r12
  4061d8:	push   rbp
  4061d9:	push   rdi
  4061da:	push   rsi
  4061db:	push   rbx
  4061dc:	sub    rsp,0x38
  4061e0:	lea    rdx,[rip+0x1a306]        # 0x4204ed
  4061e7:	lea    rcx,[rip+0x1a312]        # 0x420500
  4061ee:	lea    rbp,[rip+0x1a2f2]        # 0x4204e7
  4061f5:	lea    r14,[rip+0x18e06]        # 0x41f002
  4061fc:	call   0x401560
  406201:	xor    edi,edi
  406203:	xor    ebx,ebx
  406205:	xor    r12d,r12d
  406208:	xor    r13d,r13d
  40620b:	mov    rcx,r13
  40620e:	call   0x412040
  406213:	test   rax,rax
  406216:	mov    r13,rax
  406219:	je     0x406260
  40621b:	test   rbx,rbx
  40621e:	mov    rsi,QWORD PTR [r13+0x0]
  406222:	je     0x406233
  406224:	mov    rdx,rbx
  406227:	mov    rcx,rsi
  40622a:	call   0x419858
  40622f:	test   eax,eax
  406231:	jns    0x40620b
  406233:	mov    rdx,rbp
  406236:	mov    rcx,rsi
  406239:	call   0x419858
  40623e:	test   eax,eax
  406240:	jle    0x40620b
  406242:	mov    rcx,r13
  406245:	mov    rdi,QWORD PTR [r13+0x8]
  406249:	mov    rbx,rsi
  40624c:	call   0x412040
  406251:	test   rax,rax
  406254:	mov    r12d,0x1
  40625a:	mov    r13,rax
  40625d:	jne    0x40621b
  40625f:	nop
  406260:	xor    r15d,r15d
  406263:	mov    rcx,r15
  406266:	call   0x412048
  40626b:	test   rax,rax
  40626e:	mov    r15,rax
  406271:	je     0x4062a2
  406273:	test   rbx,rbx
  406276:	mov    rsi,QWORD PTR [r15]
  406279:	je     0x4062f0
  40627b:	mov    rdx,rbx
  40627e:	mov    rcx,rsi
  406281:	call   0x419858
  406286:	test   eax,eax
  406288:	js     0x4062f0
  40628a:	jne    0x406263
  40628c:	mov    rcx,r15
  40628f:	mov    r13d,0x1
  406295:	call   0x412048
  40629a:	test   rax,rax
  40629d:	mov    r15,rax
  4062a0:	jne    0x406273
  4062a2:	test   rbx,rbx
  4062a5:	je     0x406312
  4062a7:	test   rdi,rdi
  4062aa:	lea    r8,[rip+0x1a23a]        # 0x4204eb
  4062b1:	lea    rdx,[rip+0x1926b]        # 0x41f523
  4062b8:	cmove  rdi,r14
  4062bc:	test   r12d,r12d
  4062bf:	lea    rcx,[rip+0x1a272]        # 0x420538
  4062c6:	cmove  r8,r14
  4062ca:	test   r13d,r13d
  4062cd:	mov    QWORD PTR [rsp+0x20],rdi
  4062d2:	cmove  rdx,r14
  4062d6:	mov    r9,rbx
  4062d9:	mov    rbp,rbx
  4062dc:	call   0x401560
  4062e1:	jmp    0x406201
  4062e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062f0:	mov    rdx,rbp
  4062f3:	mov    rcx,rsi
  4062f6:	call   0x419858
  4062fb:	test   eax,eax
  4062fd:	jle    0x406263
  406303:	mov    rdi,QWORD PTR [r15+0x8]
  406307:	mov    rbx,rsi
  40630a:	xor    r12d,r12d
  40630d:	jmp    0x40628c
  406312:	xor    eax,eax
  406314:	add    rsp,0x38
  406318:	pop    rbx
  406319:	pop    rsi
  40631a:	pop    rdi
  40631b:	pop    rbp
  40631c:	pop    r12
  40631e:	pop    r13
  406320:	pop    r14
  406322:	pop    r15
  406324:	ret    
  406325:	nop
  406326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406330:	push   r15
  406332:	push   r14
  406334:	push   r13
  406336:	push   r12
  406338:	push   rbp
  406339:	push   rdi
  40633a:	push   rsi
  40633b:	push   rbx
  40633c:	sub    rsp,0x38
  406340:	lea    rdx,[rip+0x1a201]        # 0x420548
  406347:	lea    rcx,[rip+0x1a1b2]        # 0x420500
  40634e:	lea    rbp,[rip+0x1a192]        # 0x4204e7
  406355:	lea    r14,[rip+0x18ca6]        # 0x41f002
  40635c:	call   0x401560
  406361:	xor    edi,edi
  406363:	xor    ebx,ebx
  406365:	xor    r12d,r12d
  406368:	xor    r13d,r13d
  40636b:	nop    DWORD PTR [rax+rax*1+0x0]
  406370:	mov    rcx,r13
  406373:	call   0x412040
  406378:	test   rax,rax
  40637b:	mov    r13,rax
  40637e:	je     0x4063e0
  406380:	mov    rax,QWORD PTR [r13+0x38]
  406384:	test   rax,rax
  406387:	je     0x406370
  406389:	mov    eax,DWORD PTR [rax+0x38]
  40638c:	sub    eax,0x28
  40638f:	cmp    eax,0x5
  406392:	ja     0x406370
  406394:	test   rbx,rbx
  406397:	mov    rsi,QWORD PTR [r13+0x0]
  40639b:	je     0x4063ac
  40639d:	mov    rdx,rbx
  4063a0:	mov    rcx,rsi
  4063a3:	call   0x419858
  4063a8:	test   eax,eax
  4063aa:	jns    0x406370
  4063ac:	mov    rdx,rbp
  4063af:	mov    rcx,rsi
  4063b2:	call   0x419858
  4063b7:	test   eax,eax
  4063b9:	jle    0x406370
  4063bb:	mov    rcx,r13
  4063be:	mov    rdi,QWORD PTR [r13+0x8]
  4063c2:	mov    rbx,rsi
  4063c5:	call   0x412040
  4063ca:	test   rax,rax
  4063cd:	mov    r12d,0x1
  4063d3:	mov    r13,rax
  4063d6:	jne    0x406380
  4063d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4063e0:	xor    r15d,r15d
  4063e3:	mov    rcx,r15
  4063e6:	call   0x412048
  4063eb:	test   rax,rax
  4063ee:	mov    r15,rax
  4063f1:	je     0x406436
  4063f3:	mov    rax,QWORD PTR [r15+0x28]
  4063f7:	test   rax,rax
  4063fa:	je     0x4063e3
  4063fc:	mov    eax,DWORD PTR [rax+0x38]
  4063ff:	sub    eax,0x28
  406402:	cmp    eax,0x5
  406405:	ja     0x4063e3
  406407:	test   rbx,rbx
  40640a:	je     0x406480
  40640c:	mov    rsi,QWORD PTR [r15]
  40640f:	mov    rdx,rbx
  406412:	mov    rcx,rsi
  406415:	call   0x419858
  40641a:	test   eax,eax
  40641c:	js     0x406483
  40641e:	jne    0x4063e3
  406420:	mov    rcx,r15
  406423:	mov    r13d,0x1
  406429:	call   0x412048
  40642e:	test   rax,rax
  406431:	mov    r15,rax
  406434:	jne    0x4063f3
  406436:	test   rbx,rbx
  406439:	je     0x4064a5
  40643b:	test   rdi,rdi
  40643e:	lea    r8,[rip+0x1a0a6]        # 0x4204eb
  406445:	lea    rdx,[rip+0x190d7]        # 0x41f523
  40644c:	cmove  rdi,r14
  406450:	test   r12d,r12d
  406453:	lea    rcx,[rip+0x1a0de]        # 0x420538
  40645a:	cmove  r8,r14
  40645e:	test   r13d,r13d
  406461:	mov    QWORD PTR [rsp+0x20],rdi
  406466:	cmove  rdx,r14
  40646a:	mov    r9,rbx
  40646d:	mov    rbp,rbx
  406470:	call   0x401560
  406475:	jmp    0x406361
  40647a:	nop    WORD PTR [rax+rax*1+0x0]
  406480:	mov    rsi,QWORD PTR [r15]
  406483:	mov    rdx,rbp
  406486:	mov    rcx,rsi
  406489:	call   0x419858
  40648e:	test   eax,eax
  406490:	jle    0x4063e3
  406496:	mov    rdi,QWORD PTR [r15+0x8]
  40649a:	mov    rbx,rsi
  40649d:	xor    r12d,r12d
  4064a0:	jmp    0x406420
  4064a5:	xor    eax,eax
  4064a7:	add    rsp,0x38
  4064ab:	pop    rbx
  4064ac:	pop    rsi
  4064ad:	pop    rdi
  4064ae:	pop    rbp
  4064af:	pop    r12
  4064b1:	pop    r13
  4064b3:	pop    r14
  4064b5:	pop    r15
  4064b7:	ret    
  4064b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4064c0:	push   r15
  4064c2:	push   r14
  4064c4:	push   r13
  4064c6:	push   r12
  4064c8:	push   rbp
  4064c9:	push   rdi
  4064ca:	push   rsi
  4064cb:	push   rbx
  4064cc:	sub    rsp,0x28
  4064d0:	xor    edi,edi
  4064d2:	xor    ebx,ebx
  4064d4:	jmp    0x4064e3
  4064d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4064e0:	add    edi,0x1
  4064e3:	mov    rcx,rbx
  4064e6:	call   0x4120b8
  4064eb:	test   rax,rax
  4064ee:	mov    rbx,rax
  4064f1:	jne    0x4064e0
  4064f3:	mov    r12d,edi
  4064f6:	mov    edx,0x8
  4064fb:	mov    rcx,r12
  4064fe:	call   0x412470
  406503:	test   rax,rax
  406506:	mov    rbp,rax
  406509:	je     0x4067e2
  40650f:	xor    esi,esi
  406511:	jmp    0x40651d
  406513:	mov    eax,esi
  406515:	add    esi,0x1
  406518:	mov    QWORD PTR [rbp+rax*8+0x0],rbx
  40651d:	mov    rcx,rbx
  406520:	call   0x4120b8
  406525:	test   rax,rax
  406528:	mov    rbx,rax
  40652b:	jne    0x406513
  40652d:	cmp    esi,edi
  40652f:	jne    0x4067dd
  406535:	lea    r9,[rip+0xffffffffffffb084]        # 0x4015c0
  40653c:	mov    r8d,0x8
  406542:	mov    rdx,r12
  406545:	mov    rcx,rbp
  406548:	call   0x419870
  40654d:	lea    rcx,[rip+0x1a004]        # 0x420558
  406554:	call   0x401560
  406559:	test   esi,esi
  40655b:	je     0x4065a1
  40655d:	lea    eax,[rsi-0x1]
  406560:	lea    r15,[rip+0x18fbc]        # 0x41f523
  406567:	lea    r13,[rip+0x18fad]        # 0x41f51b
  40656e:	mov    rdi,rbp
  406571:	lea    r12,[rbp+rax*8+0x8]
  406576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406580:	mov    rsi,QWORD PTR [rdi]
  406583:	lea    rdx,[rip+0x1a0bb]        # 0x420645
  40658a:	mov    rcx,QWORD PTR [rsi+0x8]
  40658e:	call   0x419820
  406593:	test   rax,rax
  406596:	je     0x4065bc
  406598:	add    rdi,0x8
  40659c:	cmp    rdi,r12
  40659f:	jne    0x406580
  4065a1:	mov    rcx,rbp
  4065a4:	call   0x4123c0
  4065a9:	xor    eax,eax
  4065ab:	add    rsp,0x28
  4065af:	pop    rbx
  4065b0:	pop    rsi
  4065b1:	pop    rdi
  4065b2:	pop    rbp
  4065b3:	pop    r12
  4065b5:	pop    r13
  4065b7:	pop    r14
  4065b9:	pop    r15
  4065bb:	ret    
  4065bc:	lea    rcx,[rip+0x18a3f]        # 0x41f002
  4065c3:	call   0x401560
  4065c8:	mov    ecx,DWORD PTR [rsi]
  4065ca:	call   0x4120b0
  4065cf:	mov    rcx,r13
  4065d2:	test   rax,rax
  4065d5:	cmovne rcx,r15
  4065d9:	call   0x401560
  4065de:	mov    ecx,DWORD PTR [rsi]
  4065e0:	call   0x4120a0
  4065e5:	lea    rcx,[rip+0x19eff]        # 0x4204eb
  4065ec:	test   rax,rax
  4065ef:	cmove  rcx,r13
  4065f3:	call   0x401560
  4065f8:	mov    eax,DWORD PTR [rsi+0x4]
  4065fb:	mov    edx,0x3f
  406600:	cmp    eax,0x4
  406603:	jbe    0x4067cd
  406609:	lea    rcx,[rip+0x1a041]        # 0x420651
  406610:	call   0x401560
  406615:	test   BYTE PTR [rsi+0x18],0x1
  406619:	lea    rcx,[rip+0x19f31]        # 0x420551
  406620:	cmove  rcx,r13
  406624:	call   0x401560
  406629:	test   BYTE PTR [rsi+0x18],0x2
  40662d:	lea    rcx,[rip+0x19f1f]        # 0x420553
  406634:	cmove  rcx,r13
  406638:	call   0x401560
  40663d:	test   BYTE PTR [rsi+0x18],0x4
  406641:	lea    rcx,[rip+0x18ed5]        # 0x41f51d
  406648:	cmove  rcx,r13
  40664c:	call   0x401560
  406651:	mov    rax,QWORD PTR [rsi+0x10]
  406655:	mov    rdx,QWORD PTR [rsi+0x8]
  406659:	lea    r8,[rip+0x18d63]        # 0x41f3c3
  406660:	lea    rcx,[rip+0x18fcf]        # 0x41f636
  406667:	test   rax,rax
  40666a:	cmovne r8,rax
  40666e:	xor    r14d,r14d
  406671:	call   0x401560
  406676:	mov    ebx,DWORD PTR [rsi]
  406678:	nop    DWORD PTR [rax+rax*1+0x0]
  406680:	mov    rcx,r14
  406683:	call   0x412128
  406688:	test   rax,rax
  40668b:	mov    r14,rax
  40668e:	je     0x40671d
  406694:	cmp    ebx,DWORD PTR [r14+0x14]
  406698:	jne    0x406680
  40669a:	mov    rcx,r14
  40669d:	call   0x412138
  4066a2:	test   eax,eax
  4066a4:	je     0x406680
  4066a6:	mov    rdx,QWORD PTR [rsi+0x8]
  4066aa:	mov    rcx,QWORD PTR [r14]
  4066ad:	call   0x419858
  4066b2:	test   eax,eax
  4066b4:	je     0x406676
  4066b6:	lea    rdx,[rip+0x1919b]        # 0x41f858
  4066bd:	lea    rcx,[rip+0x19f90]        # 0x420654
  4066c4:	xor    r14d,r14d
  4066c7:	mov    ebx,DWORD PTR [rsi]
  4066c9:	call   0x401560
  4066ce:	xchg   ax,ax
  4066d0:	mov    rcx,r14
  4066d3:	call   0x412128
  4066d8:	test   rax,rax
  4066db:	mov    r14,rax
  4066de:	je     0x406711
  4066e0:	cmp    ebx,DWORD PTR [r14+0x14]
  4066e4:	jne    0x4066d0
  4066e6:	mov    rcx,r14
  4066e9:	call   0x412138
  4066ee:	test   eax,eax
  4066f0:	je     0x4066d0
  4066f2:	mov    rdx,QWORD PTR [r14]
  4066f5:	lea    rcx,[rip+0x19f5f]        # 0x42065b
  4066fc:	call   0x401560
  406701:	mov    rcx,r14
  406704:	call   0x412128
  406709:	test   rax,rax
  40670c:	mov    r14,rax
  40670f:	jne    0x4066e0
  406711:	lea    rcx,[rip+0x19f47]        # 0x42065f
  406718:	call   0x401560
  40671d:	xor    r14d,r14d
  406720:	mov    ebx,DWORD PTR [rsi]
  406722:	mov    rcx,r14
  406725:	call   0x412128
  40672a:	test   rax,rax
  40672d:	mov    r14,rax
  406730:	je     0x4067bc
  406736:	cmp    ebx,DWORD PTR [r14+0x14]
  40673a:	jne    0x406722
  40673c:	mov    rcx,r14
  40673f:	call   0x412130
  406744:	test   eax,eax
  406746:	je     0x406722
  406748:	mov    rdx,QWORD PTR [rsi+0x8]
  40674c:	mov    rcx,QWORD PTR [r14]
  40674f:	call   0x419858
  406754:	test   eax,eax
  406756:	je     0x406720
  406758:	lea    rdx,[rip+0x190f0]        # 0x41f84f
  40675f:	lea    rcx,[rip+0x19eee]        # 0x420654
  406766:	xor    ebx,ebx
  406768:	mov    esi,DWORD PTR [rsi]
  40676a:	call   0x401560
  40676f:	nop
  406770:	mov    rcx,rbx
  406773:	call   0x412128
  406778:	test   rax,rax
  40677b:	mov    rbx,rax
  40677e:	je     0x4067b0
  406780:	cmp    esi,DWORD PTR [rbx+0x14]
  406783:	jne    0x406770
  406785:	mov    rcx,rbx
  406788:	call   0x412130
  40678d:	test   eax,eax
  40678f:	je     0x406770
  406791:	mov    rdx,QWORD PTR [rbx]
  406794:	lea    rcx,[rip+0x19ec0]        # 0x42065b
  40679b:	call   0x401560
  4067a0:	mov    rcx,rbx
  4067a3:	call   0x412128
  4067a8:	test   rax,rax
  4067ab:	mov    rbx,rax
  4067ae:	jne    0x406780
  4067b0:	lea    rcx,[rip+0x19ea8]        # 0x42065f
  4067b7:	call   0x401560
  4067bc:	lea    rcx,[rip+0x18e89]        # 0x41f64c
  4067c3:	call   0x401560
  4067c8:	jmp    0x406598
  4067cd:	lea    rdx,[rip+0x1a5e5]        # 0x420db9
  4067d4:	movsx  edx,BYTE PTR [rdx+rax*1]
  4067d8:	jmp    0x406609
  4067dd:	call   0x419ba0
  4067e2:	lea    r8,[rip+0x18d3c]        # 0x41f525
  4067e9:	xor    ecx,ecx
  4067eb:	mov    edx,0x10
  4067f0:	call   0x412308
  4067f5:	mov    ecx,0x1
  4067fa:	call   0x401cb0
  4067ff:	nop
  406800:	sub    rsp,0x28
  406804:	xor    ecx,ecx
  406806:	call   0x402120
  40680b:	xor    eax,eax
  40680d:	add    rsp,0x28
  406811:	ret    
  406812:	nop    DWORD PTR [rax+0x0]
  406816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406820:	sub    rsp,0x28
  406824:	mov    ecx,0x1
  406829:	call   0x402120
  40682e:	xor    eax,eax
  406830:	add    rsp,0x28
  406834:	ret    
  406835:	nop
  406836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406840:	push   rbx
  406841:	sub    rsp,0x20
  406845:	lea    rcx,[rip+0x19e15]        # 0x420661
  40684c:	xor    ebx,ebx
  40684e:	call   0x401560
  406853:	jmp    0x406864
  406855:	mov    rdx,QWORD PTR [rbx]
  406858:	lea    rcx,[rip+0x18ef7]        # 0x41f756
  40685f:	call   0x401560
  406864:	mov    rcx,rbx
  406867:	call   0x412140
  40686c:	test   rax,rax
  40686f:	mov    rbx,rax
  406872:	jne    0x406855
  406874:	lea    rcx,[rip+0x18dd1]        # 0x41f64c
  40687b:	call   0x401560
  406880:	xor    eax,eax
  406882:	add    rsp,0x20
  406886:	pop    rbx
  406887:	ret    
  406888:	nop    DWORD PTR [rax+rax*1+0x0]
  406890:	push   rbx
  406891:	sub    rsp,0x30
  406895:	lea    rcx,[rip+0x19ddc]        # 0x420678
  40689c:	mov    QWORD PTR [rsp+0x28],0x0
  4068a5:	lea    rbx,[rsp+0x28]
  4068aa:	call   0x401560
  4068af:	jmp    0x4068c0
  4068b1:	lea    rcx,[rip+0x19de2]        # 0x42069a
  4068b8:	mov    rdx,rax
  4068bb:	call   0x401560
  4068c0:	xor    edx,edx
  4068c2:	mov    rcx,rbx
  4068c5:	call   0x411fd0
  4068ca:	test   rax,rax
  4068cd:	jne    0x4068b1
  4068cf:	lea    rcx,[rip+0x19dca]        # 0x4206a0
  4068d6:	call   0x401560
  4068db:	jmp    0x4068ef
  4068dd:	nop    DWORD PTR [rax]
  4068e0:	lea    rcx,[rip+0x19db3]        # 0x42069a
  4068e7:	mov    rdx,rax
  4068ea:	call   0x401560
  4068ef:	mov    edx,0x1
  4068f4:	mov    rcx,rbx
  4068f7:	call   0x411fd0
  4068fc:	test   rax,rax
  4068ff:	jne    0x4068e0
  406901:	add    rsp,0x30
  406905:	pop    rbx
  406906:	ret    
  406907:	nop    WORD PTR [rax+rax*1+0x0]
  406910:	push   r15
  406912:	push   r14
  406914:	push   r13
  406916:	push   r12
  406918:	push   rbp
  406919:	push   rdi
  40691a:	push   rsi
  40691b:	push   rbx
  40691c:	sub    rsp,0x88
  406923:	lea    rcx,[rip+0x19d86]        # 0x4206b0
  40692a:	xor    r12d,r12d
  40692d:	lea    r14,[rsp+0x40]
  406932:	call   0x401560
  406937:	mov    rcx,r12
  40693a:	lea    rbp,[r14+0x3c]
  40693e:	call   0x411fb0
  406943:	test   rax,rax
  406946:	mov    r12,rax
  406949:	je     0x406a5a
  40694f:	nop
  406950:	mov    rsi,QWORD PTR [r12+0x10]
  406955:	xor    r13d,r13d
  406958:	mov    rdi,r14
  40695b:	test   rsi,rsi
  40695e:	je     0x406a98
  406964:	mov    rbx,rdi
  406967:	jmp    0x40699e
  406969:	nop    DWORD PTR [rax+0x0]
  406970:	cmp    rbx,rbp
  406973:	jae    0x4069b4
  406975:	mov    edx,r15d
  406978:	mov    rcx,rsi
  40697b:	add    rbx,0x1
  40697f:	call   0x411f98
  406984:	mov    edx,eax
  406986:	mov    eax,0x3f
  40698b:	cmp    edx,0x4
  40698e:	ja     0x40699b
  406990:	lea    rax,[rip+0x1a422]        # 0x420db9
  406997:	movzx  eax,BYTE PTR [rax+rdx*1]
  40699b:	mov    BYTE PTR [rbx-0x1],al
  40699e:	mov    r15d,ebx
  4069a1:	mov    rcx,rsi
  4069a4:	sub    r15d,edi
  4069a7:	mov    edx,r15d
  4069aa:	call   0x411fa0
  4069af:	test   rax,rax
  4069b2:	jne    0x406970
  4069b4:	test   r15d,r15d
  4069b7:	jne    0x4069de
  4069b9:	mov    rdi,rbx
  4069bc:	add    rbx,0x1
  4069c0:	test   r13d,r13d
  4069c3:	je     0x406a9f
  4069c9:	mov    eax,DWORD PTR [r12+0x28]
  4069ce:	and    eax,0x2
  4069d1:	cmp    eax,0x1
  4069d4:	sbb    eax,eax
  4069d6:	and    eax,0x2e
  4069d9:	add    eax,0x4e
  4069dc:	mov    BYTE PTR [rdi],al
  4069de:	cmp    r13d,0x1
  4069e2:	jne    0x406a70
  4069e8:	mov    BYTE PTR [rbx],0x0
  4069eb:	cmp    QWORD PTR [r12+0x60],0x1
  4069f1:	mov    eax,DWORD PTR [r12+0x28]
  4069f6:	mov    r9,QWORD PTR [r12]
  4069fa:	mov    r10,QWORD PTR [r12+0x8]
  4069ff:	mov    QWORD PTR [rsp+0x28],r14
  406a04:	mov    edx,eax
  406a06:	sbb    r8d,r8d
  406a09:	mov    QWORD PTR [rsp+0x20],r9
  406a0e:	and    edx,0x4
  406a11:	and    r8d,0xffffffeb
  406a15:	mov    QWORD PTR [rsp+0x30],r10
  406a1a:	cmp    edx,0x1
  406a1d:	lea    r9d,[r8+0x43]
  406a21:	sbb    ecx,ecx
  406a23:	and    eax,0x30000
  406a28:	and    ecx,0xffffffdb
  406a2b:	cmp    eax,0x1
  406a2e:	sbb    edx,edx
  406a30:	lea    r8d,[rcx+0x53]
  406a34:	lea    rcx,[rip+0x19d47]        # 0x420782
  406a3b:	and    edx,0xffffffda
  406a3e:	add    edx,0x54
  406a41:	call   0x401560
  406a46:	mov    rcx,r12
  406a49:	call   0x411fb0
  406a4e:	test   rax,rax
  406a51:	mov    r12,rax
  406a54:	jne    0x406950
  406a5a:	xor    eax,eax
  406a5c:	add    rsp,0x88
  406a63:	pop    rbx
  406a64:	pop    rsi
  406a65:	pop    rdi
  406a66:	pop    rbp
  406a67:	pop    r12
  406a69:	pop    r13
  406a6b:	pop    r14
  406a6d:	pop    r15
  406a6f:	ret    
  406a70:	mov    BYTE PTR [rbx],0x2d
  406a73:	mov    BYTE PTR [rbx+0x1],0x3e
  406a77:	mov    r13d,0x1
  406a7d:	mov    rsi,QWORD PTR [r12+0x18]
  406a82:	lea    rdi,[rbx+0x2]
  406a86:	test   rsi,rsi
  406a89:	jne    0x406964
  406a8f:	add    rbx,0x3
  406a93:	jmp    0x4069c9
  406a98:	lea    rbx,[r14+0x1]
  406a9c:	mov    rdi,r14
  406a9f:	mov    eax,DWORD PTR [r12+0x28]
  406aa4:	and    eax,0x1
  406aa7:	cmp    eax,0x1
  406aaa:	sbb    eax,eax
  406aac:	and    eax,0x2e
  406aaf:	add    eax,0x4e
  406ab2:	jmp    0x4069dc
  406ab7:	nop    WORD PTR [rax+rax*1+0x0]
  406ac0:	push   rsi
  406ac1:	push   rbx
  406ac2:	sub    rsp,0x48
  406ac6:	lea    rdx,[rip+0x19ccd]        # 0x42079a
  406acd:	lea    rcx,[rip+0x19ccb]        # 0x42079f
  406ad4:	xor    ebx,ebx
  406ad6:	lea    rsi,[rsp+0x38]
  406adb:	call   0x401560
  406ae0:	jmp    0x406b0b
  406ae2:	mov    r10,QWORD PTR [rsp+0x38]
  406ae7:	mov    rdx,rax
  406aea:	add    ebx,0x1
  406aed:	movzx  ecx,BYTE PTR [r10+0x2]
  406af2:	movzx  r9d,BYTE PTR [r10+0x1]
  406af7:	movzx  r8d,BYTE PTR [r10]
  406afb:	mov    DWORD PTR [rsp+0x20],ecx
  406aff:	lea    rcx,[rip+0x19ca8]        # 0x4207ae
  406b06:	call   0x401560
  406b0b:	mov    rdx,rsi
  406b0e:	mov    ecx,ebx
  406b10:	call   0x412380
  406b15:	test   rax,rax
  406b18:	jne    0x406ae2
  406b1a:	add    rsp,0x48
  406b1e:	pop    rbx
  406b1f:	pop    rsi
  406b20:	ret    
  406b21:	nop    DWORD PTR [rax+rax*1+0x0]
  406b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b30:	push   r15
  406b32:	push   r14
  406b34:	push   r13
  406b36:	push   r12
  406b38:	push   rbp
  406b39:	push   rdi
  406b3a:	push   rsi
  406b3b:	push   rbx
  406b3c:	sub    rsp,0x68
  406b40:	lea    rcx,[rip+0x19c81]        # 0x4207c8
  406b47:	xor    ebx,ebx
  406b49:	call   0x401560
  406b4e:	jmp    0x406bfa
  406b53:	mov    rcx,rbx
  406b56:	call   0x412250
  406b5b:	mov    rcx,rbx
  406b5e:	mov    r13d,eax
  406b61:	call   0x4123b0
  406b66:	movzx  edx,BYTE PTR [rbx+0xb]
  406b6a:	mov    DWORD PTR [rsp+0x5c],eax
  406b6e:	mov    ecx,r13d
  406b71:	movzx  r15d,BYTE PTR [rbx+0x8]
  406b76:	mov    r14,QWORD PTR [rbx]
  406b79:	mov    eax,edx
  406b7b:	and    eax,0x4
  406b7e:	cmp    al,0x1
  406b80:	mov    eax,edx
  406b82:	sbb    r12d,r12d
  406b85:	and    eax,0x2
  406b88:	and    r12d,0xffffffec
  406b8c:	add    r12d,0x42
  406b90:	cmp    al,0x1
  406b92:	sbb    ebp,ebp
  406b94:	and    edx,0x8
  406b97:	and    ebp,0xffffffde
  406b9a:	add    ebp,0x50
  406b9d:	cmp    dl,0x1
  406ba0:	sbb    edi,edi
  406ba2:	and    edi,0xffffffe6
  406ba5:	call   0x4121a8
  406baa:	add    edi,0x48
  406bad:	cmp    eax,0x1
  406bb0:	mov    ecx,r13d
  406bb3:	sbb    esi,esi
  406bb5:	and    esi,0xffffffdf
  406bb8:	call   0x4121b0
  406bbd:	add    esi,0x4f
  406bc0:	mov    r8d,DWORD PTR [rsp+0x5c]
  406bc5:	cmp    eax,0x1
  406bc8:	sbb    edx,edx
  406bca:	lea    rcx,[rip+0x19cf7]        # 0x4208c8
  406bd1:	mov    DWORD PTR [rsp+0x38],r15d
  406bd6:	and    edx,0xffffffe5
  406bd9:	mov    QWORD PTR [rsp+0x30],r14
  406bde:	mov    DWORD PTR [rsp+0x28],r12d
  406be3:	mov    DWORD PTR [rsp+0x40],r8d
  406be8:	add    edx,0x49
  406beb:	mov    DWORD PTR [rsp+0x20],ebp
  406bef:	mov    r9d,edi
  406bf2:	mov    r8d,esi
  406bf5:	call   0x401560
  406bfa:	mov    rcx,rbx
  406bfd:	call   0x412248
  406c02:	test   rax,rax
  406c05:	mov    rbx,rax
  406c08:	jne    0x406b53
  406c0e:	xor    eax,eax
  406c10:	add    rsp,0x68
  406c14:	pop    rbx
  406c15:	pop    rsi
  406c16:	pop    rdi
  406c17:	pop    rbp
  406c18:	pop    r12
  406c1a:	pop    r13
  406c1c:	pop    r14
  406c1e:	pop    r15
  406c20:	ret    
  406c21:	nop    DWORD PTR [rax+rax*1+0x0]
  406c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c30:	push   r14
  406c32:	push   r13
  406c34:	push   r12
  406c36:	push   rbp
  406c37:	push   rdi
  406c38:	push   rsi
  406c39:	push   rbx
  406c3a:	sub    rsp,0x30
  406c3e:	lea    rcx,[rip+0x19cb3]        # 0x4208f8
  406c45:	xor    ebx,ebx
  406c47:	mov    edi,0x1
  406c4c:	call   0x401560
  406c51:	mov    ecx,ebx
  406c53:	mov    rsi,rdi
  406c56:	shl    rsi,cl
  406c59:	mov    rcx,rsi
  406c5c:	call   0x412398
  406c61:	test   rax,rax
  406c64:	mov    QWORD PTR [rsp+0x28],rax
  406c69:	je     0x406c87
  406c6b:	mov    rcx,rsi
  406c6e:	call   0x4123a8
  406c73:	mov    rdx,QWORD PTR [rsp+0x28]
  406c78:	lea    rcx,[rip+0x19caa]        # 0x420929
  406c7f:	mov    r8,rax
  406c82:	call   0x401560
  406c87:	add    ebx,0x1
  406c8a:	cmp    ebx,0x3f
  406c8d:	jne    0x406c51
  406c8f:	lea    rcx,[rip+0x19ca2]        # 0x420938
  406c96:	lea    r14,[rsp+0x28]
  406c9b:	lea    r13,[rsp+0x20]
  406ca0:	lea    rbp,[rip+0x19c4b]        # 0x4208f2
  406ca7:	lea    rdi,[rip+0x18715]        # 0x41f3c3
  406cae:	xor    r12d,r12d
  406cb1:	call   0x401560
  406cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cc0:	mov    r8,r14
  406cc3:	mov    rdx,r13
  406cc6:	mov    ecx,r12d
  406cc9:	call   0x412350
  406cce:	test   eax,eax
  406cd0:	jne    0x406d47
  406cd2:	mov    rdx,QWORD PTR [rsp+0x28]
  406cd7:	test   rdx,rdx
  406cda:	je     0x406d3e
  406cdc:	lea    rcx,[rip+0x19c8e]        # 0x420971
  406ce3:	mov    esi,0x40
  406ce8:	mov    ebx,0x1
  406ced:	call   0x401560
  406cf2:	jmp    0x406cfc
  406cf4:	add    rbx,rbx
  406cf7:	sub    esi,0x1
  406cfa:	je     0x406d32
  406cfc:	test   QWORD PTR [rsp+0x20],rbx
  406d01:	je     0x406cf4
  406d03:	mov    rcx,rbx
  406d06:	call   0x412398
  406d0b:	mov    r8,rax
  406d0e:	lea    rax,[rbx-0x1]
  406d12:	test   QWORD PTR [rsp+0x20],rax
  406d17:	mov    rdx,rdi
  406d1a:	lea    rcx,[rip+0x19c57]        # 0x420978
  406d21:	cmovne rdx,rbp
  406d25:	add    rbx,rbx
  406d28:	call   0x401560
  406d2d:	sub    esi,0x1
  406d30:	jne    0x406cfc
  406d32:	lea    rcx,[rip+0x18913]        # 0x41f64c
  406d39:	call   0x401560
  406d3e:	add    r12d,0x1
  406d42:	jmp    0x406cc0
  406d47:	xor    eax,eax
  406d49:	add    rsp,0x30
  406d4d:	pop    rbx
  406d4e:	pop    rsi
  406d4f:	pop    rdi
  406d50:	pop    rbp
  406d51:	pop    r12
  406d53:	pop    r13
  406d55:	pop    r14
  406d57:	ret    
  406d58:	nop    DWORD PTR [rax+rax*1+0x0]
  406d60:	push   rsi
  406d61:	push   rbx
  406d62:	sub    rsp,0xa8
  406d69:	mov    ebx,0xffffffff
  406d6e:	lea    rsi,[rsp+0x20]
  406d73:	mov    r8d,ebx
  406d76:	mov    edx,0x80
  406d7b:	mov    rcx,rsi
  406d7e:	call   0x412358
  406d83:	lea    rcx,[rip+0x189cc]        # 0x41f756
  406d8a:	mov    rdx,rax
  406d8d:	add    ebx,0x1
  406d90:	call   0x401560
  406d95:	cmp    ebx,0xa
  406d98:	jne    0x406d73
  406d9a:	xor    eax,eax
  406d9c:	add    rsp,0xa8
  406da3:	pop    rbx
  406da4:	pop    rsi
  406da5:	ret    
  406da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406db0:	push   rbp
  406db1:	push   rdi
  406db2:	push   rsi
  406db3:	push   rbx
  406db4:	sub    rsp,0x38
  406db8:	lea    rcx,[rip+0xffffffffffffa771]        # 0x401530
  406dbf:	mov    rbx,r8
  406dc2:	call   0x4122e0
  406dc7:	lea    rcx,[rip+0x185f5]        # 0x41f3c3
  406dce:	test   rbx,rbx
  406dd1:	cmovne rcx,rbx
  406dd5:	call   0x412220
  406dda:	test   rax,rax
  406ddd:	mov    rbx,rax
  406de0:	mov    QWORD PTR [rsp+0x28],rax
  406de5:	je     0x407228
  406deb:	mov    edx,0x3d
  406df0:	mov    rcx,rax
  406df3:	call   0x419860
  406df8:	test   rax,rax
  406dfb:	je     0x4070b3
  406e01:	lea    rbp,[rax+0x1]
  406e05:	mov    BYTE PTR [rax],0x0
  406e08:	cmp    BYTE PTR [rbx],0x0
  406e0b:	je     0x406fe0
  406e11:	lea    rdi,[rip+0x19b65]        # 0x42097d
  406e18:	mov    ecx,0x8
  406e1d:	mov    rsi,rbx
  406e20:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e22:	je     0x407000
  406e28:	lea    rdi,[rip+0x19b56]        # 0x420985
  406e2f:	mov    ecx,0x8
  406e34:	mov    rsi,rbx
  406e37:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e39:	je     0x407010
  406e3f:	lea    rdi,[rip+0x19b47]        # 0x42098d
  406e46:	mov    ecx,0x8
  406e4b:	mov    rsi,rbx
  406e4e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e50:	je     0x4070c0
  406e56:	lea    rdi,[rip+0x19b7c]        # 0x4209d9
  406e5d:	mov    ecx,0x6
  406e62:	mov    rsi,rbx
  406e65:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e67:	je     0x407020
  406e6d:	lea    rdi,[rip+0x19bed]        # 0x420a61
  406e74:	mov    ecx,0x7
  406e79:	mov    rsi,rbx
  406e7c:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  406e7e:	jne    0x406fe0
  406e84:	mov    rcx,rbp
  406e87:	call   0x411fb8
  406e8c:	test   rbp,rbp
  406e8f:	mov    rsi,rax
  406e92:	je     0x407232
  406e98:	test   rax,rax
  406e9b:	je     0x40720d
  406ea1:	mov    rdx,QWORD PTR [rax]
  406ea4:	lea    rcx,[rip+0x19bee]        # 0x420a99
  406eab:	call   0x401560
  406eb0:	mov    rdx,QWORD PTR [rsi+0x8]
  406eb4:	test   rdx,rdx
  406eb7:	je     0x406ec5
  406eb9:	lea    rcx,[rip+0x197da]        # 0x42069a
  406ec0:	call   0x401560
  406ec5:	test   BYTE PTR [rsi+0x28],0x4
  406ec9:	jne    0x4071e1
  406ecf:	lea    rcx,[rip+0x19bf1]        # 0x420ac7
  406ed6:	xor    ebx,ebx
  406ed8:	call   0x401560
  406edd:	mov    rcx,QWORD PTR [rsi+0x10]
  406ee1:	call   0x411fa8
  406ee6:	test   eax,eax
  406ee8:	mov    ebp,eax
  406eea:	jle    0x406f2b
  406eec:	nop    DWORD PTR [rax+0x0]
  406ef0:	mov    rcx,QWORD PTR [rsi+0x10]
  406ef4:	mov    edx,ebx
  406ef6:	call   0x411f98
  406efb:	mov    ecx,eax
  406efd:	call   0x412378
  406f02:	mov    rcx,QWORD PTR [rsi+0x10]
  406f06:	mov    edx,ebx
  406f08:	mov    rdi,rax
  406f0b:	call   0x411fa0
  406f10:	lea    rcx,[rip+0x19bbd]        # 0x420ad4
  406f17:	mov    edx,ebx
  406f19:	mov    r8,rax
  406f1c:	mov    r9,rdi
  406f1f:	add    ebx,0x1
  406f22:	call   0x401560
  406f27:	cmp    ebx,ebp
  406f29:	jne    0x406ef0
  406f2b:	test   BYTE PTR [rsi+0x28],0x1
  406f2f:	jne    0x4071d0
  406f35:	test   ebp,ebp
  406f37:	je     0x4071a4
  406f3d:	lea    rcx,[rip+0x19bf6]        # 0x420b3a
  406f44:	xor    ebx,ebx
  406f46:	call   0x401560
  406f4b:	mov    rcx,QWORD PTR [rsi+0x18]
  406f4f:	call   0x411fa8
  406f54:	test   eax,eax
  406f56:	mov    ebp,eax
  406f58:	jle    0x406f9b
  406f5a:	nop    WORD PTR [rax+rax*1+0x0]
  406f60:	mov    rcx,QWORD PTR [rsi+0x18]
  406f64:	mov    edx,ebx
  406f66:	call   0x411f98
  406f6b:	mov    ecx,eax
  406f6d:	call   0x412378
  406f72:	mov    rcx,QWORD PTR [rsi+0x18]
  406f76:	mov    edx,ebx
  406f78:	mov    rdi,rax
  406f7b:	call   0x411fa0
  406f80:	lea    rcx,[rip+0x19b4d]        # 0x420ad4
  406f87:	mov    edx,ebx
  406f89:	mov    r8,rax
  406f8c:	mov    r9,rdi
  406f8f:	add    ebx,0x1
  406f92:	call   0x401560
  406f97:	cmp    ebx,ebp
  406f99:	jne    0x406f60
  406f9b:	test   BYTE PTR [rsi+0x28],0x2
  406f9f:	jne    0x4071b5
  406fa5:	test   ebp,ebp
  406fa7:	je     0x407193
  406fad:	mov    rcx,QWORD PTR [rsi+0x20]
  406fb1:	test   rcx,rcx
  406fb4:	je     0x406fc0
  406fb6:	mov    edx,0x10018
  406fbb:	call   0x4026c0
  406fc0:	test   DWORD PTR [rsi+0x28],0x30000
  406fc7:	je     0x406feb
  406fc9:	lea    rcx,[rip+0x19b98]        # 0x420b68
  406fd0:	call   0x401560
  406fd5:	jmp    0x406feb
  406fd7:	nop    WORD PTR [rax+rax*1+0x0]
  406fe0:	mov    rdx,rbp
  406fe3:	mov    rcx,rbx
  406fe6:	call   0x411ea0
  406feb:	lea    rcx,[rsp+0x28]
  406ff0:	call   0x4123b8
  406ff5:	xor    eax,eax
  406ff7:	add    rsp,0x38
  406ffb:	pop    rbx
  406ffc:	pop    rsi
  406ffd:	pop    rdi
  406ffe:	pop    rbp
  406fff:	ret    
  407000:	xor    edx,edx
  407002:	mov    rcx,rbp
  407005:	call   0x402d70
  40700a:	jmp    0x406feb
  40700c:	nop    DWORD PTR [rax+0x0]
  407010:	mov    edx,0x1
  407015:	mov    rcx,rbp
  407018:	call   0x402d70
  40701d:	jmp    0x406feb
  40701f:	nop
  407020:	xor    r8d,r8d
  407023:	xor    edx,edx
  407025:	mov    rcx,rbp
  407028:	call   0x412058
  40702d:	test   rax,rax
  407030:	mov    rbx,rax
  407033:	je     0x4071f2
  407039:	mov    rdx,QWORD PTR [rax]
  40703c:	mov    r8,QWORD PTR [rax+0x8]
  407040:	lea    rcx,[rip+0x19998]        # 0x4209df
  407047:	call   0x401560
  40704c:	mov    rdx,QWORD PTR [rbx+0x18]
  407050:	test   rdx,rdx
  407053:	je     0x407061
  407055:	lea    rcx,[rip+0x19961]        # 0x4209bd
  40705c:	call   0x401560
  407061:	mov    rdx,QWORD PTR [rbx+0x10]
  407065:	test   rdx,rdx
  407068:	je     0x407076
  40706a:	lea    rcx,[rip+0x1997e]        # 0x4209ef
  407071:	call   0x401560
  407076:	mov    ecx,DWORD PTR [rbx+0x24]
  407079:	test   ecx,ecx
  40707b:	jne    0x407170
  407081:	mov    ecx,DWORD PTR [rbx+0x20]
  407084:	test   ecx,ecx
  407086:	jne    0x407143
  40708c:	mov    ecx,DWORD PTR [rbx+0x28]
  40708f:	test   ecx,ecx
  407091:	jne    0x407120
  407097:	mov    rcx,QWORD PTR [rbx+0x38]
  40709b:	test   rcx,rcx
  40709e:	je     0x406feb
  4070a4:	mov    edx,0x1
  4070a9:	call   0x4026c0
  4070ae:	jmp    0x406feb
  4070b3:	xor    ebp,ebp
  4070b5:	jmp    0x406e08
  4070ba:	nop    WORD PTR [rax+rax*1+0x0]
  4070c0:	mov    rcx,rbp
  4070c3:	call   0x412068
  4070c8:	test   rax,rax
  4070cb:	mov    rbx,rax
  4070ce:	je     0x4071f2
  4070d4:	mov    rdx,QWORD PTR [rax]
  4070d7:	mov    r8,QWORD PTR [rax+0x8]
  4070db:	lea    rcx,[rip+0x198c9]        # 0x4209ab
  4070e2:	call   0x401560
  4070e7:	mov    rdx,QWORD PTR [rbx+0x18]
  4070eb:	test   rdx,rdx
  4070ee:	je     0x4070fc
  4070f0:	lea    rcx,[rip+0x198c6]        # 0x4209bd
  4070f7:	call   0x401560
  4070fc:	mov    rcx,QWORD PTR [rbx+0x28]
  407100:	test   rcx,rcx
  407103:	je     0x406feb
  407109:	mov    edx,0x2
  40710e:	call   0x4026c0
  407113:	jmp    0x406feb
  407118:	nop    DWORD PTR [rax+rax*1+0x0]
  407120:	call   0x4120c8
  407125:	test   rax,rax
  407128:	je     0x407097
  40712e:	mov    rdx,QWORD PTR [rax+0x8]
  407132:	lea    rcx,[rip+0x19907]        # 0x420a40
  407139:	call   0x401560
  40713e:	jmp    0x407097
  407143:	call   0x4120c8
  407148:	test   rax,rax
  40714b:	je     0x40708c
  407151:	mov    rdx,QWORD PTR [rax+0x8]
  407155:	lea    rcx,[rip+0x198c5]        # 0x420a21
  40715c:	call   0x401560
  407161:	jmp    0x40708c
  407166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407170:	call   0x4120c8
  407175:	test   rax,rax
  407178:	je     0x407081
  40717e:	mov    rdx,QWORD PTR [rax+0x8]
  407182:	lea    rcx,[rip+0x1987a]        # 0x420a03
  407189:	call   0x401560
  40718e:	jmp    0x407081
  407193:	lea    rcx,[rip+0x199ae]        # 0x420b48
  40719a:	call   0x401560
  40719f:	jmp    0x406fad
  4071a4:	lea    rcx,[rip+0x19971]        # 0x420b1c
  4071ab:	call   0x401560
  4071b0:	jmp    0x406f3d
  4071b5:	lea    rcx,[rip+0x19934]        # 0x420af0
  4071bc:	call   0x401560
  4071c1:	jmp    0x406fad
  4071c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071d0:	lea    rcx,[rip+0x19919]        # 0x420af0
  4071d7:	call   0x401560
  4071dc:	jmp    0x406f3d
  4071e1:	lea    rcx,[rip+0x198c0]        # 0x420aa8
  4071e8:	call   0x401560
  4071ed:	jmp    0x406ecf
  4071f2:	lea    r8,[rip+0x1979c]        # 0x420995
  4071f9:	mov    r9,rbp
  4071fc:	mov    edx,0x10
  407201:	xor    ecx,ecx
  407203:	call   0x412308
  407208:	jmp    0x406feb
  40720d:	lea    r8,[rip+0x1986f]        # 0x420a83
  407214:	mov    r9,rbp
  407217:	mov    edx,0x10
  40721c:	xor    ecx,ecx
  40721e:	call   0x412308
  407223:	jmp    0x406feb
  407228:	mov    eax,0xfffffff4
  40722d:	jmp    0x406ff7
  407232:	lea    r8,[rip+0x1982f]        # 0x420a68
  407239:	mov    edx,0x10
  40723e:	xor    ecx,ecx
  407240:	call   0x412308
  407245:	jmp    0x406feb
  40724a:	nop    WORD PTR [rax+rax*1+0x0]
  407250:	push   rbx
  407251:	sub    rsp,0x20
  407255:	call   0x4198c0
  40725a:	lea    ecx,[rax-0x61]
  40725d:	mov    edx,eax
  40725f:	xor    eax,0x20
  407262:	cmp    ecx,0x19
  407265:	cmova  eax,edx
  407268:	xor    ebx,ebx
  40726a:	cmp    eax,0x59
  40726d:	sete   bl
  407270:	cmp    edx,0xffffffff
  407273:	je     0x40728f
  407275:	cmp    edx,0xa
  407278:	jne    0x407285
  40727a:	jmp    0x40728f
  40727c:	nop    DWORD PTR [rax+0x0]
  407280:	cmp    eax,0xa
  407283:	je     0x40728f
  407285:	call   0x4198c0
  40728a:	cmp    eax,0xffffffff
  40728d:	jne    0x407280
  40728f:	mov    eax,ebx
  407291:	add    rsp,0x20
  407295:	pop    rbx
  407296:	ret    
  407297:	nop    WORD PTR [rax+rax*1+0x0]
  4072a0:	push   r14
  4072a2:	push   r13
  4072a4:	push   r12
  4072a6:	push   rbp
  4072a7:	push   rdi
  4072a8:	push   rsi
  4072a9:	push   rbx
  4072aa:	sub    rsp,0x170
  4072b1:	mov    r12,QWORD PTR [rsp+0x1d0]
  4072b9:	mov    rsi,rcx
  4072bc:	lea    rcx,[rip+0x198f1]        # 0x420bb4
  4072c3:	mov    ebx,r9d
  4072c6:	mov    rdi,rdx
  4072c9:	mov    rbp,r8
  4072cc:	call   0x4198b8
  4072d1:	lea    rcx,[rip+0x198eb]        # 0x420bc3
  4072d8:	mov    r13,rax
  4072db:	mov    QWORD PTR [rsp+0x40],rax
  4072e0:	call   0x4198b8
  4072e5:	mov    QWORD PTR [rsp+0x48],rax
  4072ea:	lea    rax,[rip+0x198d7]        # 0x420bc8
  4072f1:	test   ebx,ebx
  4072f3:	mov    QWORD PTR [rsp+0x50],rax
  4072f8:	jne    0x407510
  4072fe:	lea    r14,[rsp+0x60]
  407303:	xor    ecx,ecx
  407305:	mov    QWORD PTR [rsp+0x50],0x0
  40730e:	call   QWORD PTR [rip+0x246d8]        # 0x42b9ec
  407314:	mov    r8d,0x103
  40731a:	mov    rdx,r14
  40731d:	mov    rcx,rax
  407320:	call   QWORD PTR [rip+0x246be]        # 0x42b9e4
  407326:	test   eax,eax
  407328:	jne    0x407412
  40732e:	mov    rbx,r13
  407331:	xor    r13d,r13d
  407334:	lea    r14,[rsp+0x40]
  407339:	test   rbx,rbx
  40733c:	je     0x4073ec
  407342:	cmp    r13d,0x1
  407346:	je     0x4074b0
  40734c:	lea    rax,[rip+0x18070]        # 0x41f3c3
  407353:	lea    r8,[rip+0x198d8]        # 0x420c32
  40735a:	mov    r9,rbx
  40735d:	mov    rdx,rdi
  407360:	mov    rcx,rsi
  407363:	mov    QWORD PTR [rsp+0x28],rbp
  407368:	mov    QWORD PTR [rsp+0x20],rax
  40736d:	call   0x401670
  407372:	lea    rdx,[rip+0x19898]        # 0x420c11
  407379:	mov    rcx,rsi
  40737c:	call   0x4198f0
  407381:	test   rax,rax
  407384:	sete   dl
  407387:	jne    0x4073ce
  407389:	test   r12,r12
  40738c:	lea    rcx,[rip+0x18030]        # 0x41f3c3
  407393:	je     0x4073ce
  407395:	lea    r8,[rip+0x19882]        # 0x420c1e
  40739c:	mov    QWORD PTR [rsp+0x20],rcx
  4073a1:	mov    r9,rbx
  4073a4:	mov    rdx,rdi
  4073a7:	mov    rcx,rsi
  4073aa:	mov    QWORD PTR [rsp+0x30],rbp
  4073af:	mov    QWORD PTR [rsp+0x28],r12
  4073b4:	call   0x401670
  4073b9:	lea    rdx,[rip+0x19851]        # 0x420c11
  4073c0:	mov    rcx,rsi
  4073c3:	call   0x4198f0
  4073c8:	test   rax,rax
  4073cb:	sete   dl
  4073ce:	add    r13d,0x1
  4073d2:	add    r14,0x8
  4073d6:	test   dl,dl
  4073d8:	je     0x407400
  4073da:	cmp    r13d,0x2
  4073de:	jg     0x407400
  4073e0:	mov    rbx,QWORD PTR [r14]
  4073e3:	test   rbx,rbx
  4073e6:	jne    0x407342
  4073ec:	mov    edx,0x1
  4073f1:	xor    eax,eax
  4073f3:	add    r13d,0x1
  4073f7:	add    r14,0x8
  4073fb:	test   dl,dl
  4073fd:	jne    0x4073da
  4073ff:	nop
  407400:	add    rsp,0x170
  407407:	pop    rbx
  407408:	pop    rsi
  407409:	pop    rdi
  40740a:	pop    rbp
  40740b:	pop    r12
  40740d:	pop    r13
  40740f:	pop    r14
  407411:	ret    
  407412:	mov    r11,r14
  407415:	mov    edx,DWORD PTR [r11]
  407418:	add    r11,0x4
  40741c:	lea    eax,[rdx-0x1010101]
  407422:	not    edx
  407424:	and    eax,edx
  407426:	and    eax,0x80808080
  40742b:	je     0x407415
  40742d:	mov    edx,eax
  40742f:	mov    r10,r14
  407432:	shr    edx,0x10
  407435:	test   eax,0x8080
  40743a:	cmove  eax,edx
  40743d:	lea    rdx,[r11+0x2]
  407441:	cmove  r11,rdx
  407445:	add    al,al
  407447:	sbb    r11,0x3
  40744b:	sub    r11,r14
  40744e:	jmp    0x407454
  407450:	add    r10,0x1
  407454:	lea    rax,[r14+r11*1]
  407458:	cmp    r10,rax
  40745b:	jae    0x407532
  407461:	cmp    BYTE PTR [r10],0x5c
  407465:	jne    0x407450
  407467:	mov    BYTE PTR [r10],0x2f
  40746b:	mov    r11,r14
  40746e:	mov    eax,DWORD PTR [r11]
  407471:	add    r11,0x4
  407475:	lea    ebx,[rax-0x1010101]
  40747b:	not    eax
  40747d:	and    ebx,eax
  40747f:	and    ebx,0x80808080
  407485:	je     0x40746e
  407487:	mov    eax,ebx
  407489:	shr    eax,0x10
  40748c:	test   ebx,0x8080
  407492:	cmove  ebx,eax
  407495:	lea    rax,[r11+0x2]
  407499:	cmove  r11,rax
  40749d:	add    bl,bl
  40749f:	sbb    r11,0x3
  4074a3:	sub    r11,r14
  4074a6:	jmp    0x407450
  4074a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4074b0:	lea    rax,[rip+0x196f4]        # 0x420bab
  4074b7:	lea    r8,[rip+0x19774]        # 0x420c32
  4074be:	mov    r9,rbx
  4074c1:	mov    rdx,rdi
  4074c4:	mov    rcx,rsi
  4074c7:	mov    QWORD PTR [rsp+0x28],rbp
  4074cc:	mov    QWORD PTR [rsp+0x20],rax
  4074d1:	call   0x401670
  4074d6:	lea    rdx,[rip+0x19734]        # 0x420c11
  4074dd:	mov    rcx,rsi
  4074e0:	call   0x4198f0
  4074e5:	test   rax,rax
  4074e8:	sete   dl
  4074eb:	jne    0x4073ce
  4074f1:	test   r12,r12
  4074f4:	lea    rcx,[rip+0x196b0]        # 0x420bab
  4074fb:	jne    0x407395
  407501:	jmp    0x4073ce
  407506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407510:	mov    rdx,rbp
  407513:	mov    rcx,rsi
  407516:	mov    r8,rdi
  407519:	call   0x412200
  40751e:	lea    rdx,[rip+0x196ec]        # 0x420c11
  407525:	mov    rcx,rsi
  407528:	call   0x4198f0
  40752d:	jmp    0x407400
  407532:	mov    edx,0x2f
  407537:	mov    rcx,r14
  40753a:	call   0x419828
  40753f:	test   rax,rax
  407542:	je     0x40732e
  407548:	mov    BYTE PTR [rax],0x0
  40754b:	mov    rdx,r14
  40754e:	mov    ecx,DWORD PTR [rdx]
  407550:	add    rdx,0x4
  407554:	lea    eax,[rcx-0x1010101]
  40755a:	not    ecx
  40755c:	and    eax,ecx
  40755e:	and    eax,0x80808080
  407563:	je     0x40754e
  407565:	mov    ecx,eax
  407567:	shr    ecx,0x10
  40756a:	test   eax,0x8080
  40756f:	cmove  eax,ecx
  407572:	lea    rcx,[rdx+0x2]
  407576:	cmove  rdx,rcx
  40757a:	add    al,al
  40757c:	mov    rax,r14
  40757f:	sbb    rdx,0x3
  407583:	mov    rcx,r14
  407586:	sub    rax,rdx
  407589:	lea    rdx,[rip+0x19683]        # 0x420c13
  407590:	lea    r8,[rax+0x103]
  407597:	call   0x419838
  40759c:	mov    QWORD PTR [rsp+0x50],r14
  4075a1:	jmp    0x40732e
  4075a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075b0:	push   rsi
  4075b1:	push   rbx
  4075b2:	sub    rsp,0x38
  4075b6:	mov    rbx,rcx
  4075b9:	mov    rsi,r8
  4075bc:	call   0x412000
  4075c1:	test   eax,eax
  4075c3:	js     0x4075d0
  4075c5:	add    rsp,0x38
  4075c9:	pop    rbx
  4075ca:	pop    rsi
  4075cb:	ret    
  4075cc:	nop    DWORD PTR [rax+0x0]
  4075d0:	lea    r8,[rip+0x19671]        # 0x420c48
  4075d7:	mov    r9,rsi
  4075da:	mov    edx,0x10
  4075df:	mov    rcx,rbx
  4075e2:	mov    DWORD PTR [rsp+0x2c],eax
  4075e6:	call   0x412308
  4075eb:	mov    eax,DWORD PTR [rsp+0x2c]
  4075ef:	add    rsp,0x38
  4075f3:	pop    rbx
  4075f4:	pop    rsi
  4075f5:	ret    
  4075f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407600:	push   r15
  407602:	push   r14
  407604:	push   r13
  407606:	push   r12
  407608:	push   rbp
  407609:	push   rdi
  40760a:	push   rsi
  40760b:	push   rbx
  40760c:	sub    rsp,0x68
  407610:	cmp    QWORD PTR [r8+0x10],0x1
  407615:	mov    rbp,QWORD PTR [rsp+0xd0]
  40761d:	mov    r13,rcx
  407620:	mov    DWORD PTR [rsp+0xb8],edx
  407627:	mov    rsi,r8
  40762a:	mov    r12,r9
  40762d:	mov    QWORD PTR [rsp+0x50],0x0
  407636:	sbb    r15d,r15d
  407639:	not    r15d
  40763c:	add    r15d,0xa
  407640:	cmp    QWORD PTR [r8+0x10],0x1
  407645:	sbb    r14d,r14d
  407648:	not    r14d
  40764b:	add    r14d,0x22
  40764f:	cmp    QWORD PTR [r8+0x10],0x1
  407654:	sbb    edi,edi
  407656:	not    edi
  407658:	add    edi,0x12
  40765b:	cmp    QWORD PTR [r8+0x10],0x1
  407660:	sbb    ebx,ebx
  407662:	not    ebx
  407664:	call   0x412090
  407669:	add    ebx,0x2
  40766c:	test   rbp,rbp
  40766f:	mov    QWORD PTR [rsp+0x58],rax
  407674:	je     0x407840
  40767a:	mov    rax,QWORD PTR [r12+0x8]
  40767f:	mov    eax,DWORD PTR [rax+0xc]
  407682:	cmp    eax,0x1
  407685:	je     0x4077e1
  40768b:	cmp    eax,0x3
  40768e:	je     0x4077d4
  407694:	test   eax,eax
  407696:	cmovne edi,ebx
  407699:	cmp    eax,0x1
  40769c:	sbb    eax,eax
  40769e:	and    eax,0x76
  4076a1:	mov    BYTE PTR [rsp+0x4b],al
  4076a5:	lea    rax,[rsp+0x58]
  4076aa:	xor    ebx,ebx
  4076ac:	mov    QWORD PTR [rsp+0x30],rax
  4076b1:	lea    rax,[rsp+0x50]
  4076b6:	mov    QWORD PTR [rsp+0x38],rax
  4076bb:	lea    rax,[rbp+0x50]
  4076bf:	mov    QWORD PTR [rsp+0x40],rax
  4076c4:	lea    rdx,[rip+0x17cf8]        # 0x41f3c3
  4076cb:	mov    r8,rbx
  4076ce:	mov    r9d,0x2
  4076d4:	mov    rcx,r13
  4076d7:	call   0x412438
  4076dc:	test   rax,rax
  4076df:	mov    rbx,rax
  4076e2:	je     0x407860
  4076e8:	mov    r15,QWORD PTR [rbx]
  4076eb:	mov    edx,0x3a
  4076f0:	mov    rcx,r15
  4076f3:	call   0x419860
  4076f8:	test   rax,rax
  4076fb:	mov    r14,rax
  4076fe:	je     0x40772a
  407700:	lea    r15,[rax+0x1]
  407704:	mov    rdx,r12
  407707:	mov    rcx,rsi
  40770a:	mov    r8,r15
  40770d:	call   0x412000
  407712:	test   eax,eax
  407714:	js     0x4077b0
  40771a:	test   eax,eax
  40771c:	je     0x4076c4
  40771e:	cmp    eax,0x1
  407721:	jne    0x4077a0
  407723:	mov    BYTE PTR [r14],0x0
  407727:	mov    r15,QWORD PTR [rbx]
  40772a:	mov    rcx,QWORD PTR [rsp+0x30]
  40772f:	xor    r8d,r8d
  407732:	mov    DWORD PTR [rsp+0x20],0x2
  40773a:	mov    r9d,edi
  40773d:	mov    rdx,r15
  407740:	call   0x4122a0
  407745:	test   rax,rax
  407748:	jne    0x40777a
  40774a:	test   rbp,rbp
  40774d:	je     0x40777a
  40774f:	cmp    QWORD PTR [rbp+0x50],0x0
  407754:	je     0x4077f0
  40775a:	mov    DWORD PTR [rsp+0x20],0x2
  407762:	mov    rcx,QWORD PTR [rsp+0x40]
  407767:	xor    r8d,r8d
  40776a:	mov    rdx,QWORD PTR [rbx]
  40776d:	mov    r9d,edi
  407770:	call   0x4122a0
  407775:	test   rax,rax
  407778:	je     0x4077f0
  40777a:	mov    r8,QWORD PTR [rbx+0x8]
  40777e:	mov    rdx,QWORD PTR [rbx]
  407781:	xor    r9d,r9d
  407784:	mov    rcx,QWORD PTR [rsp+0x38]
  407789:	call   0x412428
  40778e:	test   r14,r14
  407791:	je     0x4076c4
  407797:	mov    BYTE PTR [r14],0x3a
  40779b:	jmp    0x4076c4
  4077a0:	mov    ecx,0x1
  4077a5:	call   0x401cb0
  4077aa:	nop    WORD PTR [rax+rax*1+0x0]
  4077b0:	lea    r8,[rip+0x19491]        # 0x420c48
  4077b7:	mov    r9,r15
  4077ba:	mov    edx,0x10
  4077bf:	mov    rcx,rsi
  4077c2:	mov    DWORD PTR [rsp+0x4c],eax
  4077c6:	call   0x412308
  4077cb:	mov    eax,DWORD PTR [rsp+0x4c]
  4077cf:	jmp    0x40771a
  4077d4:	mov    edi,r14d
  4077d7:	mov    BYTE PTR [rsp+0x4b],0x73
  4077dc:	jmp    0x4076a5
  4077e1:	mov    edi,r15d
  4077e4:	mov    BYTE PTR [rsp+0x4b],0x61
  4077e9:	jmp    0x4076a5
  4077ee:	xchg   ax,ax
  4077f0:	mov    rax,QWORD PTR [rbx]
  4077f3:	movzx  edx,BYTE PTR [rsp+0x4b]
  4077f8:	cmp    dl,BYTE PTR [rax]
  4077fa:	jne    0x40778e
  4077fc:	mov    rcx,QWORD PTR [rsp+0x30]
  407801:	lea    rdx,[rax+0x1]
  407805:	xor    r8d,r8d
  407808:	mov    DWORD PTR [rsp+0x20],0x2
  407810:	mov    r9d,edi
  407813:	call   0x4122a0
  407818:	test   rax,rax
  40781b:	je     0x40778e
  407821:	mov    rax,QWORD PTR [rbx]
  407824:	mov    r8,QWORD PTR [rbx+0x8]
  407828:	xor    r9d,r9d
  40782b:	mov    rcx,QWORD PTR [rsp+0x38]
  407830:	lea    rdx,[rax+0x1]
  407834:	call   0x412428
  407839:	jmp    0x40778e
  40783e:	xchg   ax,ax
  407840:	cmp    QWORD PTR [rsi+0x10],0x0
  407845:	mov    ecx,DWORD PTR [rsp+0xb8]
  40784c:	je     0x407876
  40784e:	call   0x4120a0
  407853:	mov    rbp,rax
  407856:	jmp    0x40767a
  40785b:	nop    DWORD PTR [rax+rax*1+0x0]
  407860:	mov    rax,QWORD PTR [rsp+0x50]
  407865:	add    rsp,0x68
  407869:	pop    rbx
  40786a:	pop    rsi
  40786b:	pop    rdi
  40786c:	pop    rbp
  40786d:	pop    r12
  40786f:	pop    r13
  407871:	pop    r14
  407873:	pop    r15
  407875:	ret    
  407876:	call   0x4120b0
  40787b:	mov    rbp,rax
  40787e:	jmp    0x40767a
  407883:	nop    DWORD PTR [rax]
  407886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407890:	push   r12
  407892:	push   rbp
  407893:	push   rdi
  407894:	push   rsi
  407895:	push   rbx
  407896:	sub    rsp,0x30
  40789a:	mov    eax,DWORD PTR [rcx+0x2c]
  40789d:	test   eax,eax
  40789f:	je     0x407935
  4078a5:	cmp    rax,0xffffffe
  4078ab:	mov    r12,rdx
  4078ae:	mov    rsi,rcx
  4078b1:	jbe    0x4078d3
  4078b3:	lea    r8,[rip+0x193ae]        # 0x420c68
  4078ba:	mov    edx,0x10
  4078bf:	xor    ecx,ecx
  4078c1:	call   0x412308
  4078c6:	xor    eax,eax
  4078c8:	add    rsp,0x30
  4078cc:	pop    rbx
  4078cd:	pop    rsi
  4078ce:	pop    rdi
  4078cf:	pop    rbp
  4078d0:	pop    r12
  4078d2:	ret    
  4078d3:	lea    rcx,[rax*8+0x0]
  4078db:	call   0x4122c0
  4078e0:	test   rax,rax
  4078e3:	mov    rbp,rax
  4078e6:	je     0x4078b3
  4078e8:	mov    eax,DWORD PTR [rsi+0x2c]
  4078eb:	xor    ebx,ebx
  4078ed:	xor    edi,edi
  4078ef:	test   eax,eax
  4078f1:	je     0x407927
  4078f3:	mov    rax,QWORD PTR [rsi+0x30]
  4078f7:	mov    r8,rsi
  4078fa:	mov    rcx,r12
  4078fd:	add    edi,0x1
  407900:	mov    r9,QWORD PTR [rax+rbx*1]
  407904:	mov    rax,QWORD PTR [r9+0x8]
  407908:	mov    edx,DWORD PTR [rax+0x38]
  40790b:	mov    QWORD PTR [rsp+0x20],0x0
  407914:	call   0x407600
  407919:	mov    QWORD PTR [rbp+rbx*1+0x0],rax
  40791e:	add    rbx,0x8
  407922:	cmp    edi,DWORD PTR [rsi+0x2c]
  407925:	jb     0x4078f3
  407927:	mov    rax,rbp
  40792a:	add    rsp,0x30
  40792e:	pop    rbx
  40792f:	pop    rsi
  407930:	pop    rdi
  407931:	pop    rbp
  407932:	pop    r12
  407934:	ret    
  407935:	xor    eax,eax
  407937:	add    rsp,0x30
  40793b:	pop    rbx
  40793c:	pop    rsi
  40793d:	pop    rdi
  40793e:	pop    rbp
  40793f:	pop    r12
  407941:	ret    
  407942:	nop    DWORD PTR [rax+0x0]
  407946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407950:	push   rbp
  407951:	push   rdi
  407952:	push   rsi
  407953:	push   rbx
  407954:	sub    rsp,0x28
  407958:	mov    eax,0x7fffffff
  40795d:	mov    ebx,edx
  40795f:	cdq    
  407960:	mov    rbp,r8
  407963:	idiv   ebx
  407965:	mov    esi,r9d
  407968:	cmp    eax,r9d
  40796b:	jle    0x4079c2
  40796d:	cmp    r9d,DWORD PTR [r8]
  407970:	mov    rax,rcx
  407973:	jg     0x407980
  407975:	add    rsp,0x28
  407979:	pop    rbx
  40797a:	pop    rsi
  40797b:	pop    rdi
  40797c:	pop    rbp
  40797d:	ret    
  40797e:	xchg   ax,ax
  407980:	movsxd rdx,r9d
  407983:	movsxd r8,ebx
  407986:	call   0x412240
  40798b:	test   rax,rax
  40798e:	mov    rdi,rax
  407991:	je     0x4079df
  407993:	mov    ecx,DWORD PTR [rbp+0x0]
  407996:	mov    r8d,esi
  407999:	xor    edx,edx
  40799b:	sub    r8d,ecx
  40799e:	imul   ecx,ebx
  4079a1:	imul   r8d,ebx
  4079a5:	movsxd rcx,ecx
  4079a8:	add    rcx,rax
  4079ab:	movsxd r8,r8d
  4079ae:	call   0x419878
  4079b3:	mov    rax,rdi
  4079b6:	mov    DWORD PTR [rbp+0x0],esi
  4079b9:	add    rsp,0x28
  4079bd:	pop    rbx
  4079be:	pop    rsi
  4079bf:	pop    rdi
  4079c0:	pop    rbp
  4079c1:	ret    
  4079c2:	lea    r8,[rip+0x17fb1]        # 0x41f97a
  4079c9:	xor    ecx,ecx
  4079cb:	mov    edx,0x10
  4079d0:	call   0x412308
  4079d5:	mov    ecx,0x1
  4079da:	call   0x401cb0
  4079df:	call   0x419c16
  4079e4:	nop
  4079e5:	nop
  4079e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4079f0:	push   rdi
  4079f1:	push   rsi
  4079f2:	push   rbx
  4079f3:	sub    rsp,0x60
  4079f7:	movaps XMMWORD PTR [rsp+0x40],xmm6
  4079fc:	movaps XMMWORD PTR [rsp+0x50],xmm7
  407a01:	lea    rdx,[rip+0x1928c]        # 0x420c94
  407a08:	xor    r9d,r9d
  407a0b:	xor    r8d,r8d
  407a0e:	mov    rbx,rcx
  407a11:	mov    rcx,QWORD PTR [rcx+0x60]
  407a15:	call   0x412438
  407a1a:	xor    r8d,r8d
  407a1d:	mov    rsi,rax
  407a20:	mov    edx,0x5
  407a25:	mov    rcx,rbx
  407a28:	call   0x412028
  407a2d:	test   rsi,rsi
  407a30:	je     0x407a40
  407a32:	mov    r8,QWORD PTR [rsi+0x8]
  407a36:	cmp    BYTE PTR [r8],0x0
  407a3a:	jne    0x407ad2
  407a40:	pxor   xmm6,xmm6
  407a44:	test   rax,rax
  407a47:	jne    0x407b40
  407a4d:	movsd  xmm7,QWORD PTR [rip+0x193db]        # 0x420e30
  407a55:	movapd xmm0,xmm6
  407a59:	divsd  xmm0,xmm7
  407a5d:	addsd  xmm0,QWORD PTR [rip+0x193d3]        # 0x420e38
  407a65:	call   0x413a30
  407a6a:	mulsd  xmm7,xmm0
  407a6e:	subsd  xmm6,xmm7
  407a72:	movsd  xmm7,QWORD PTR [rip+0x193c6]        # 0x420e40
  407a7a:	movapd xmm0,xmm6
  407a7e:	divsd  xmm0,xmm7
  407a82:	call   0x413be0
  407a87:	mulsd  xmm7,xmm0
  407a8b:	movapd xmm0,xmm6
  407a8f:	movsd  xmm1,QWORD PTR [rip+0x193b9]        # 0x420e50
  407a97:	subsd  xmm0,xmm7
  407a9b:	andpd  xmm0,xmm1
  407a9f:	ucomisd xmm0,QWORD PTR [rip+0x193b9]        # 0x420e60
  407aa7:	jbe    0x407abc
  407aa9:	lea    r8,[rip+0x191f0]        # 0x420ca0
  407ab0:	mov    edx,0x18
  407ab5:	xor    ecx,ecx
  407ab7:	call   0x412308
  407abc:	movapd xmm0,xmm6
  407ac0:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  407ac5:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  407aca:	add    rsp,0x60
  407ace:	pop    rbx
  407acf:	pop    rsi
  407ad0:	pop    rdi
  407ad1:	ret    
  407ad2:	lea    rdi,[rip+0x17e5a]        # 0x41f933
  407ad9:	mov    ecx,0x2
  407ade:	mov    rsi,r8
  407ae1:	pxor   xmm6,xmm6
  407ae5:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407ae7:	seta   cl
  407aea:	setb   dl
  407aed:	cmp    cl,dl
  407aef:	je     0x407a44
  407af5:	lea    rdx,[rsp+0x38]
  407afa:	mov    rcx,r8
  407afd:	mov    QWORD PTR [rsp+0x28],rax
  407b02:	call   0x4121f8
  407b07:	mov    rdx,QWORD PTR [rsp+0x38]
  407b0c:	movapd xmm6,xmm0
  407b10:	mov    rax,QWORD PTR [rsp+0x28]
  407b15:	cmp    BYTE PTR [rdx],0x0
  407b18:	jne    0x407a40
  407b1e:	pxor   xmm0,xmm0
  407b22:	mov    ecx,0x0
  407b27:	ucomisd xmm6,xmm0
  407b2b:	setnp  dl
  407b2e:	cmovne edx,ecx
  407b31:	test   dl,dl
  407b33:	jne    0x407a44
  407b39:	jmp    0x407a4d
  407b3e:	xchg   ax,ax
  407b40:	mov    rcx,rax
  407b43:	call   0x412420
  407b48:	movsd  xmm6,QWORD PTR [rip+0x192d0]        # 0x420e20
  407b50:	xorpd  xmm6,xmm0
  407b54:	jmp    0x407a4d
  407b59:	nop    DWORD PTR [rax+0x0]
  407b60:	push   r13
  407b62:	push   r12
  407b64:	push   rbp
  407b65:	push   rdi
  407b66:	push   rsi
  407b67:	push   rbx
  407b68:	sub    rsp,0x58
  407b6c:	mov    rbx,r8
  407b6f:	mov    QWORD PTR [rsp+0x40],0x0
  407b78:	mov    QWORD PTR [rsp+0x48],0x0
  407b81:	call   0x4122e8
  407b86:	mov    ecx,0x10
  407b8b:	mov    r12d,eax
  407b8e:	call   0x4122d0
  407b93:	test   rbx,rbx
  407b96:	je     0x407cf0
  407b9c:	mov    rcx,rbx
  407b9f:	call   0x412220
  407ba4:	test   rax,rax
  407ba7:	mov    QWORD PTR [rsp+0x40],rax
  407bac:	je     0x407d06
  407bb2:	mov    edx,0x2c
  407bb7:	mov    rcx,rax
  407bba:	call   0x419860
  407bbf:	test   rax,rax
  407bc2:	je     0x407cfc
  407bc8:	cmp    BYTE PTR [rax+0x1],0x0
  407bcc:	mov    BYTE PTR [rax],0x0
  407bcf:	lea    rbp,[rsp+0x48]
  407bd4:	jne    0x407cb0
  407bda:	xor    ebx,ebx
  407bdc:	mov    r13d,0x6
  407be2:	mov    rcx,rbx
  407be5:	call   0x411f88
  407bea:	test   rax,rax
  407bed:	mov    rbx,rax
  407bf0:	je     0x407c40
  407bf2:	mov    rdx,QWORD PTR [rax]
  407bf5:	lea    rdi,[rip+0x191b7]        # 0x420db3
  407bfc:	mov    rcx,r13
  407bff:	mov    rsi,rdx
  407c02:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  407c04:	je     0x407be2
  407c06:	mov    rcx,QWORD PTR [rsp+0x40]
  407c0b:	test   rcx,rcx
  407c0e:	je     0x407c19
  407c10:	call   0x4122b8
  407c15:	test   eax,eax
  407c17:	je     0x407be2
  407c19:	mov    rdx,QWORD PTR [rsp+0x48]
  407c1e:	mov    rcx,rbx
  407c21:	call   0x401690
  407c26:	mov    rcx,rbx
  407c29:	call   0x411f88
  407c2e:	test   rax,rax
  407c31:	mov    rbx,rax
  407c34:	jne    0x407bf2
  407c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c40:	mov    rcx,rbx
  407c43:	call   0x411f80
  407c48:	test   rax,rax
  407c4b:	mov    rbx,rax
  407c4e:	je     0x407c83
  407c50:	mov    rcx,QWORD PTR [rsp+0x40]
  407c55:	test   rcx,rcx
  407c58:	je     0x407c66
  407c5a:	mov    rdx,QWORD PTR [rax]
  407c5d:	call   0x4122b8
  407c62:	test   eax,eax
  407c64:	je     0x407c40
  407c66:	mov    rdx,QWORD PTR [rsp+0x48]
  407c6b:	mov    rcx,rbx
  407c6e:	call   0x401690
  407c73:	mov    rcx,rbx
  407c76:	call   0x411f80
  407c7b:	test   rax,rax
  407c7e:	mov    rbx,rax
  407c81:	jne    0x407c50
  407c83:	xor    ebx,ebx
  407c85:	mov    rcx,rbp
  407c88:	call   0x412440
  407c8d:	mov    rcx,QWORD PTR [rsp+0x40]
  407c92:	call   0x4123c0
  407c97:	mov    ecx,r12d
  407c9a:	call   0x4122d0
  407c9f:	mov    eax,ebx
  407ca1:	add    rsp,0x58
  407ca5:	pop    rbx
  407ca6:	pop    rsi
  407ca7:	pop    rdi
  407ca8:	pop    rbp
  407ca9:	pop    r12
  407cab:	pop    r13
  407cad:	ret    
  407cae:	xchg   ax,ax
  407cb0:	lea    rdx,[rax+0x1]
  407cb4:	lea    r9,[rip+0x17713]        # 0x41f3ce
  407cbb:	lea    r8,[rip+0x1770e]        # 0x41f3d0
  407cc2:	mov    DWORD PTR [rsp+0x20],0x0
  407cca:	mov    rcx,rbp
  407ccd:	call   0x412430
  407cd2:	test   eax,eax
  407cd4:	jns    0x407bda
  407cda:	lea    rcx,[rsp+0x40]
  407cdf:	mov    DWORD PTR [rsp+0x3c],eax
  407ce3:	call   0x4123b8
  407ce8:	mov    eax,DWORD PTR [rsp+0x3c]
  407cec:	mov    ebx,eax
  407cee:	jmp    0x407c85
  407cf0:	lea    rcx,[rip+0x19059]        # 0x420d50
  407cf7:	call   0x401560
  407cfc:	lea    rbp,[rsp+0x48]
  407d01:	jmp    0x407bda
  407d06:	mov    ebx,0xfffffff4
  407d0b:	lea    rbp,[rsp+0x48]
  407d10:	jmp    0x407c85
  407d15:	nop
  407d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d20:	push   rdi
  407d21:	push   rsi
  407d22:	push   rbx
  407d23:	sub    rsp,0x50
  407d27:	mov    rbx,r8
  407d2a:	mov    QWORD PTR [rsp+0x40],0x0
  407d33:	mov    QWORD PTR [rsp+0x48],0x0
  407d3c:	call   0x4122e8
  407d41:	mov    ecx,0x10
  407d46:	mov    edi,eax
  407d48:	call   0x4122d0
  407d4d:	test   rbx,rbx
  407d50:	je     0x407e90
  407d56:	mov    rcx,rbx
  407d59:	call   0x412220
  407d5e:	test   rax,rax
  407d61:	mov    QWORD PTR [rsp+0x40],rax
  407d66:	je     0x407ea6
  407d6c:	mov    edx,0x2c
  407d71:	mov    rcx,rax
  407d74:	call   0x419860
  407d79:	test   rax,rax
  407d7c:	je     0x407e9c
  407d82:	cmp    BYTE PTR [rax+0x1],0x0
  407d86:	mov    BYTE PTR [rax],0x0
  407d89:	lea    rsi,[rsp+0x48]
  407d8e:	jne    0x407e50
  407d94:	xor    ebx,ebx
  407d96:	mov    rcx,rbx
  407d99:	call   0x411f78
  407d9e:	test   rax,rax
  407da1:	mov    rbx,rax
  407da4:	je     0x407de0
  407da6:	mov    rcx,QWORD PTR [rsp+0x40]
  407dab:	test   rcx,rcx
  407dae:	je     0x407dbc
  407db0:	mov    rdx,QWORD PTR [rax]
  407db3:	call   0x4122b8
  407db8:	test   eax,eax
  407dba:	je     0x407d96
  407dbc:	mov    rdx,QWORD PTR [rsp+0x48]
  407dc1:	mov    rcx,rbx
  407dc4:	call   0x4017d0
  407dc9:	mov    rcx,rbx
  407dcc:	call   0x411f78
  407dd1:	test   rax,rax
  407dd4:	mov    rbx,rax
  407dd7:	jne    0x407da6
  407dd9:	nop    DWORD PTR [rax+0x0]
  407de0:	mov    rcx,rbx
  407de3:	call   0x411f70
  407de8:	test   rax,rax
  407deb:	mov    rbx,rax
  407dee:	je     0x407e23
  407df0:	mov    rcx,QWORD PTR [rsp+0x40]
  407df5:	test   rcx,rcx
  407df8:	je     0x407e06
  407dfa:	mov    rdx,QWORD PTR [rax]
  407dfd:	call   0x4122b8
  407e02:	test   eax,eax
  407e04:	je     0x407de0
  407e06:	mov    rdx,QWORD PTR [rsp+0x48]
  407e0b:	mov    rcx,rbx
  407e0e:	call   0x4017d0
  407e13:	mov    rcx,rbx
  407e16:	call   0x411f70
  407e1b:	test   rax,rax
  407e1e:	mov    rbx,rax
  407e21:	jne    0x407df0
  407e23:	xor    ebx,ebx
  407e25:	mov    rcx,rsi
  407e28:	call   0x412440
  407e2d:	mov    rcx,QWORD PTR [rsp+0x40]
  407e32:	call   0x4123c0
  407e37:	mov    ecx,edi
  407e39:	call   0x4122d0
  407e3e:	mov    eax,ebx
  407e40:	add    rsp,0x50
  407e44:	pop    rbx
  407e45:	pop    rsi
  407e46:	pop    rdi
  407e47:	ret    
  407e48:	nop    DWORD PTR [rax+rax*1+0x0]
  407e50:	lea    rdx,[rax+0x1]
  407e54:	lea    r9,[rip+0x17573]        # 0x41f3ce
  407e5b:	lea    r8,[rip+0x1756e]        # 0x41f3d0
  407e62:	mov    DWORD PTR [rsp+0x20],0x0
  407e6a:	mov    rcx,rsi
  407e6d:	call   0x412430
  407e72:	test   eax,eax
  407e74:	jns    0x407d94
  407e7a:	lea    rcx,[rsp+0x40]
  407e7f:	mov    DWORD PTR [rsp+0x3c],eax
  407e83:	call   0x4123b8
  407e88:	mov    eax,DWORD PTR [rsp+0x3c]
  407e8c:	mov    ebx,eax
  407e8e:	jmp    0x407e25
  407e90:	lea    rcx,[rip+0x18eb9]        # 0x420d50
  407e97:	call   0x401560
  407e9c:	lea    rsi,[rsp+0x48]
  407ea1:	jmp    0x407d94
  407ea6:	mov    ebx,0xfffffff4
  407eab:	lea    rsi,[rsp+0x48]
  407eb0:	jmp    0x407e25
  407eb5:	nop
  407eb6:	nop
  407eb7:	nop
  407eb8:	nop
  407eb9:	nop
  407eba:	nop
  407ebb:	nop
  407ebc:	nop
  407ebd:	nop
  407ebe:	nop
  407ebf:	nop
  407ec0:	mov    rax,QWORD PTR [rcx+0x8]
  407ec4:	mov    rax,QWORD PTR [rax+0x10]
  407ec8:	ret    
  407ec9:	nop    DWORD PTR [rax+0x0]
  407ed0:	push   rbx
  407ed1:	sub    rsp,0x20
  407ed5:	movsxd rdx,DWORD PTR [rcx+0x2c]
  407ed9:	mov    rbx,rcx
  407edc:	lea    rcx,[rcx+rdx*8]
  407ee0:	test   edx,edx
  407ee2:	mov    rax,rdx
  407ee5:	mov    r8,QWORD PTR [rcx+0x58]
  407ee9:	mov    r8d,DWORD PTR [r8]
  407eec:	je     0x407f03
  407eee:	mov    rcx,QWORD PTR [rcx+0x50]
  407ef2:	mov    ecx,DWORD PTR [rcx]
  407ef4:	cmp    ecx,0xffffffff
  407ef7:	je     0x407f03
  407ef9:	add    DWORD PTR [rbx+rdx*4+0x2c],0x1
  407efe:	cmp    ecx,0xf
  407f01:	je     0x407f24
  407f03:	mov    rdx,QWORD PTR [rbx+0x8]
  407f07:	mov    rdx,QWORD PTR [rdx+0x30]
  407f0b:	test   rdx,rdx
  407f0e:	je     0x407f18
  407f10:	mov    rcx,rbx
  407f13:	call   rdx
  407f15:	mov    eax,DWORD PTR [rbx+0x2c]
  407f18:	sub    eax,0x1
  407f1b:	mov    DWORD PTR [rbx+0x2c],eax
  407f1e:	add    rsp,0x20
  407f22:	pop    rbx
  407f23:	ret    
  407f24:	cmp    r8d,0xd
  407f28:	je     0x407f33
  407f2a:	add    DWORD PTR [rbx+0x28ac],0x1
  407f31:	jmp    0x407f03
  407f33:	add    DWORD PTR [rbx+0x28a8],0x1
  407f3a:	jmp    0x407f03
  407f3c:	nop    DWORD PTR [rax+0x0]
  407f40:	lea    rax,[rip+0x18f39]        # 0x420e80
  407f47:	ret    
  407f48:	nop    DWORD PTR [rax+rax*1+0x0]
  407f50:	mov    rax,rdx
  407f53:	ret    
  407f54:	xchg   ax,ax
  407f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f60:	lea    rax,[rip+0x18f21]        # 0x420e88
  407f67:	ret    
  407f68:	nop    DWORD PTR [rax+rax*1+0x0]
  407f70:	lea    rax,[rip+0x18f19]        # 0x420e90
  407f77:	ret    
  407f78:	nop    DWORD PTR [rax+rax*1+0x0]
  407f80:	lea    rax,[rip+0x18f0d]        # 0x420e94
  407f87:	ret    
  407f88:	nop    DWORD PTR [rax+rax*1+0x0]
  407f90:	lea    rax,[rip+0x18f02]        # 0x420e99
  407f97:	ret    
  407f98:	nop    DWORD PTR [rax+rax*1+0x0]
  407fa0:	lea    rax,[rip+0x18ef6]        # 0x420e9d
  407fa7:	ret    
  407fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  407fb0:	lea    rax,[rip+0x18ef5]        # 0x420eac
  407fb7:	ret    
  407fb8:	nop    DWORD PTR [rax+rax*1+0x0]
  407fc0:	mov    DWORD PTR [rip+0x21372],0x1        # 0x42933c
  407fca:	mov    DWORD PTR [rip+0x21364],0x1        # 0x429338
  407fd4:	xor    eax,eax
  407fd6:	mov    DWORD PTR [rip+0x21354],0x1        # 0x429334
  407fe0:	mov    DWORD PTR [rip+0x21346],0x1        # 0x429330
  407fea:	ret    
  407feb:	nop    DWORD PTR [rax+rax*1+0x0]
  407ff0:	sub    rsp,0x38
  407ff4:	mov    QWORD PTR [rsp+0x48],rdx
  407ff9:	lea    rdx,[rsp+0x48]
  407ffe:	mov    QWORD PTR [rsp+0x50],r8
  408003:	mov    QWORD PTR [rsp+0x58],r9
  408008:	mov    QWORD PTR [rsp+0x28],rdx
  40800d:	call   0x413f00
  408012:	add    rsp,0x38
  408016:	ret    
  408017:	nop    WORD PTR [rax+rax*1+0x0]
  408020:	sub    rsp,0x38
  408024:	movsxd rax,DWORD PTR [rcx+0x2c]
  408028:	mov    eax,DWORD PTR [rcx+rax*4+0x30]
  40802c:	test   eax,eax
  40802e:	je     0x408050
  408030:	lea    rcx,[rip+0x18e71]        # 0x420ea8
  408037:	mov    QWORD PTR [rsp+0x28],r8
  40803c:	mov    QWORD PTR [rsp+0x20],rdx
  408041:	call   0x407ff0
  408046:	mov    r8,QWORD PTR [rsp+0x28]
  40804b:	mov    rdx,QWORD PTR [rsp+0x20]
  408050:	lea    rcx,[rip+0x18e59]        # 0x420eb0
  408057:	add    rsp,0x38
  40805b:	jmp    0x407ff0
  40805d:	nop    DWORD PTR [rax]
  408060:	push   rsi
  408061:	push   rbx
  408062:	sub    rsp,0x28
  408066:	movsxd rdx,DWORD PTR [rcx+0x2c]
  40806a:	mov    rbx,QWORD PTR [rcx+0x18]
  40806e:	test   edx,edx
  408070:	mov    rsi,QWORD PTR [rcx+rdx*8+0x58]
  408075:	jne    0x4080a0
  408077:	mov    edx,DWORD PTR [rbx+0x10]
  40807a:	lea    rax,[rip+0x18e39]        # 0x420eba
  408081:	lea    rcx,[rip+0x18e3c]        # 0x420ec4
  408088:	test   edx,edx
  40808a:	lea    rdx,[rip+0x18e32]        # 0x420ec3
  408091:	cmovne rdx,rax
  408095:	add    rsp,0x28
  408099:	pop    rbx
  40809a:	pop    rsi
  40809b:	jmp    0x407ff0
  4080a0:	mov    eax,DWORD PTR [rbx+0x8]
  4080a3:	test   eax,eax
  4080a5:	jne    0x4080e4
  4080a7:	test   BYTE PTR [rsi+0x10],0x4
  4080ab:	jne    0x4080d9
  4080ad:	mov    eax,DWORD PTR [rbx+0xc]
  4080b0:	lea    rcx,[rip+0x18e1f]        # 0x420ed6
  4080b7:	mov    r8d,0x20
  4080bd:	lea    edx,[rax*4+0x0]
  4080c4:	call   0x407ff0
  4080c9:	mov    rdx,QWORD PTR [rsi+0x8]
  4080cd:	lea    rcx,[rip+0x18e06]        # 0x420eda
  4080d4:	call   0x407ff0
  4080d9:	sub    DWORD PTR [rbx+0xc],0x1
  4080dd:	add    rsp,0x28
  4080e1:	pop    rbx
  4080e2:	pop    rsi
  4080e3:	ret    
  4080e4:	lea    rcx,[rip+0x18de7]        # 0x420ed2
  4080eb:	mov    DWORD PTR [rbx+0x8],0x0
  4080f2:	call   0x407ff0
  4080f7:	sub    DWORD PTR [rbx+0xc],0x1
  4080fb:	add    rsp,0x28
  4080ff:	pop    rbx
  408100:	pop    rsi
  408101:	ret    
  408102:	nop    DWORD PTR [rax+0x0]
  408106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408110:	push   rbp
  408111:	push   rdi
  408112:	push   rsi
  408113:	push   rbx
  408114:	sub    rsp,0x28
  408118:	movsxd rdx,DWORD PTR [rcx+0x2c]
  40811c:	mov    rbx,QWORD PTR [rcx+0x18]
  408120:	mov    rsi,rcx
  408123:	mov    rax,rdx
  408126:	lea    rdx,[rcx+rdx*8]
  40812a:	test   eax,eax
  40812c:	mov    rdi,QWORD PTR [rdx+0x58]
  408130:	je     0x4081c0
  408136:	mov    ecx,DWORD PTR [rbx+0x8]
  408139:	mov    rbp,QWORD PTR [rdx+0x50]
  40813d:	test   ecx,ecx
  40813f:	jne    0x408212
  408145:	mov    eax,DWORD PTR [rdi+0x10]
  408148:	test   al,0x4
  40814a:	jne    0x408205
  408150:	test   rbp,rbp
  408153:	je     0x408174
  408155:	test   BYTE PTR [rbp+0x10],0x1
  408159:	je     0x408174
  40815b:	mov    edx,DWORD PTR [rsi+0x2c]
  40815e:	test   edx,edx
  408160:	je     0x408174
  408162:	sub    edx,0x1
  408165:	movsxd rdx,edx
  408168:	mov    edx,DWORD PTR [rsi+rdx*4+0x30]
  40816c:	test   edx,edx
  40816e:	jne    0x408250
  408174:	mov    ecx,DWORD PTR [rbx+0xc]
  408177:	mov    r8d,0x20
  40817d:	lea    edx,[rcx+0x1]
  408180:	lea    rcx,[rip+0x18d4f]        # 0x420ed6
  408187:	mov    DWORD PTR [rbx+0xc],edx
  40818a:	shl    edx,0x2
  40818d:	test   al,0x2
  40818f:	jne    0x408232
  408195:	call   0x407ff0
  40819a:	mov    rdx,QWORD PTR [rdi+0x8]
  40819e:	lea    rcx,[rip+0x18e0d]        # 0x420fb2
  4081a5:	call   0x407ff0
  4081aa:	mov    DWORD PTR [rbx+0x8],0x1
  4081b1:	add    rsp,0x28
  4081b5:	pop    rbx
  4081b6:	pop    rsi
  4081b7:	pop    rdi
  4081b8:	pop    rbp
  4081b9:	ret    
  4081ba:	nop    WORD PTR [rax+rax*1+0x0]
  4081c0:	lea    rcx,[rip+0x18df1]        # 0x420fb8
  4081c7:	call   0x407ff0
  4081cc:	mov    eax,DWORD PTR [rbx+0x10]
  4081cf:	lea    r8,[rip+0x18ced]        # 0x420ec3
  4081d6:	lea    rcx,[rip+0x18dbd]        # 0x420f9a
  4081dd:	mov    rdx,r8
  4081e0:	test   eax,eax
  4081e2:	lea    rax,[rip+0x18cff]        # 0x420ee8
  4081e9:	cmovne r8,rax
  4081ed:	lea    rax,[rip+0x18cc6]        # 0x420eba
  4081f4:	cmovne rdx,rax
  4081f8:	add    rsp,0x28
  4081fc:	pop    rbx
  4081fd:	pop    rsi
  4081fe:	pop    rdi
  4081ff:	pop    rbp
  408200:	jmp    0x407ff0
  408205:	add    DWORD PTR [rbx+0xc],0x1
  408209:	add    rsp,0x28
  40820d:	pop    rbx
  40820e:	pop    rsi
  40820f:	pop    rdi
  408210:	pop    rbp
  408211:	ret    
  408212:	lea    rcx,[rip+0x18d90]        # 0x420fa9
  408219:	mov    DWORD PTR [rbx+0x8],0x0
  408220:	call   0x407ff0
  408225:	mov    eax,DWORD PTR [rdi+0x10]
  408228:	test   al,0x4
  40822a:	je     0x408150
  408230:	jmp    0x408205
  408232:	call   0x407ff0
  408237:	mov    rdx,QWORD PTR [rdi+0x8]
  40823b:	lea    rcx,[rip+0x18d6a]        # 0x420fac
  408242:	add    rsp,0x28
  408246:	pop    rbx
  408247:	pop    rsi
  408248:	pop    rdi
  408249:	pop    rbp
  40824a:	jmp    0x407ff0
  40824f:	nop
  408250:	lea    rcx,[rip+0x18c53]        # 0x420eaa
  408257:	call   0x407ff0
  40825c:	mov    eax,DWORD PTR [rdi+0x10]
  40825f:	jmp    0x408174
  408264:	xchg   ax,ax
  408266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408270:	push   rbx
  408271:	sub    rsp,0x20
  408275:	movsxd rdx,DWORD PTR [rcx+0x2c]
  408279:	mov    rbx,QWORD PTR [rcx+0x18]
  40827d:	mov    rax,rdx
  408280:	mov    rdx,QWORD PTR [rcx+rdx*8+0x58]
  408285:	test   eax,eax
  408287:	je     0x408300
  408289:	test   BYTE PTR [rdx+0x10],0x2
  40828d:	jne    0x4082c0
  40828f:	mov    rdx,QWORD PTR [rbx+0x18]
  408293:	lea    rcx,[rip+0x18d4c]        # 0x420fe6
  40829a:	call   0x407ff0
  40829f:	mov    eax,DWORD PTR [rbx+0x8]
  4082a2:	lea    edx,[rax-0x1]
  4082a5:	mov    eax,DWORD PTR [rbx+0xc]
  4082a8:	mov    DWORD PTR [rbx+0x8],edx
  4082ab:	test   eax,eax
  4082ad:	je     0x408315
  4082af:	lea    rcx,[rip+0x18d33]        # 0x420fe9
  4082b6:	add    rsp,0x20
  4082ba:	pop    rbx
  4082bb:	jmp    0x407ff0
  4082c0:	lea    rcx,[rip+0x18be3]        # 0x420eaa
  4082c7:	call   0x407ff0
  4082cc:	mov    eax,DWORD PTR [rbx+0x8]
  4082cf:	lea    rcx,[rip+0x18c00]        # 0x420ed6
  4082d6:	mov    r8d,0x20
  4082dc:	lea    edx,[rax-0x1]
  4082df:	mov    DWORD PTR [rbx+0x8],edx
  4082e2:	shl    edx,0x2
  4082e5:	call   0x407ff0
  4082ea:	lea    rcx,[rip+0x18cf3]        # 0x420fe4
  4082f1:	add    rsp,0x20
  4082f5:	pop    rbx
  4082f6:	jmp    0x407ff0
  4082fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408300:	sub    DWORD PTR [rbx+0x8],0x1
  408304:	lea    rcx,[rip+0x18cd5]        # 0x420fe0
  40830b:	add    rsp,0x20
  40830f:	pop    rbx
  408310:	jmp    0x407ff0
  408315:	lea    rcx,[rip+0x18bba]        # 0x420ed6
  40831c:	shl    edx,0x2
  40831f:	mov    r8d,0x20
  408325:	call   0x407ff0
  40832a:	jmp    0x4082af
  40832c:	nop    DWORD PTR [rax+0x0]
  408330:	lea    rcx,[rip+0x18cb4]        # 0x420feb
  408337:	jmp    0x407ff0
  40833c:	nop    DWORD PTR [rax+0x0]
  408340:	movsxd rax,DWORD PTR [rcx+0x2c]
  408344:	mov    r9,r8
  408347:	mov    r8,rdx
  40834a:	shl    rax,0xa
  40834e:	mov    rax,QWORD PTR [rcx+rax*1+0xa8]
  408356:	lea    rcx,[rip+0x18c97]        # 0x420ff4
  40835d:	mov    rdx,rax
  408360:	jmp    0x407ff0
  408365:	nop
  408366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408370:	push   rbp
  408371:	push   rdi
  408372:	push   rsi
  408373:	push   rbx
  408374:	sub    rsp,0x28
  408378:	movsxd rax,DWORD PTR [rcx+0x2c]
  40837c:	mov    rsi,QWORD PTR [rcx+0x18]
  408380:	mov    rbp,rdx
  408383:	mov    rbx,rcx
  408386:	mov    rdi,r8
  408389:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  40838d:	test   edx,edx
  40838f:	jne    0x4083d0
  408391:	mov    eax,DWORD PTR [rsi+0x14]
  408394:	test   eax,eax
  408396:	jne    0x4083b7
  408398:	movsxd rax,DWORD PTR [rbx+0x2c]
  40839c:	lea    rcx,[rip+0x18c5f]        # 0x421002
  4083a3:	mov    r8,rbp
  4083a6:	shl    rax,0xa
  4083aa:	mov    rdx,QWORD PTR [rbx+rax*1+0xa8]
  4083b2:	call   0x407ff0
  4083b7:	lea    rcx,[rip+0x18c4a]        # 0x421008
  4083be:	mov    rdx,rdi
  4083c1:	add    rsp,0x28
  4083c5:	pop    rbx
  4083c6:	pop    rsi
  4083c7:	pop    rdi
  4083c8:	pop    rbp
  4083c9:	jmp    0x407ff0
  4083ce:	xchg   ax,ax
  4083d0:	movsx  edx,BYTE PTR [rsi+0x10]
  4083d4:	lea    rcx,[rip+0x18c24]        # 0x420fff
  4083db:	call   0x407ff0
  4083e0:	jmp    0x408391
  4083e2:	nop    DWORD PTR [rax+0x0]
  4083e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083f0:	movsxd rdx,DWORD PTR [rcx+0x2c]
  4083f4:	mov    rax,QWORD PTR [rcx+0x18]
  4083f8:	lea    rax,[rax+rdx*4]
  4083fc:	mov    r8d,DWORD PTR [rax+0x30]
  408400:	test   r8d,r8d
  408403:	jne    0x40841a
  408405:	mov    eax,DWORD PTR [rax+0x80]
  40840b:	test   eax,eax
  40840d:	je     0x40841a
  40840f:	mov    rax,QWORD PTR [rcx+rdx*8+0x58]
  408414:	test   BYTE PTR [rax+0x10],0x3
  408418:	je     0x408420
  40841a:	repz ret 
  40841c:	nop    DWORD PTR [rax+0x0]
  408420:	lea    rcx,[rip+0x18a83]        # 0x420eaa
  408427:	jmp    0x407ff0
  40842c:	nop    DWORD PTR [rax+0x0]
  408430:	push   rbx
  408431:	sub    rsp,0x20
  408435:	mov    rax,QWORD PTR [rcx+0x18]
  408439:	mov    rbx,r8
  40843c:	mov    eax,DWORD PTR [rax+0x8]
  40843f:	test   eax,eax
  408441:	jne    0x408465
  408443:	movsxd rax,DWORD PTR [rcx+0x2c]
  408447:	mov    r8,rdx
  40844a:	shl    rax,0xa
  40844e:	mov    rax,QWORD PTR [rcx+rax*1+0xa8]
  408456:	lea    rcx,[rip+0x18ba5]        # 0x421002
  40845d:	mov    rdx,rax
  408460:	call   0x407ff0
  408465:	lea    rcx,[rip+0x18ba1]        # 0x42100d
  40846c:	mov    rdx,rbx
  40846f:	add    rsp,0x20
  408473:	pop    rbx
  408474:	jmp    0x407ff0
  408479:	nop    DWORD PTR [rax+0x0]
  408480:	push   rbx
  408481:	sub    rsp,0x20
  408485:	mov    rax,QWORD PTR [rcx+0x18]
  408489:	mov    rbx,r8
  40848c:	mov    eax,DWORD PTR [rax+0x8]
  40848f:	test   eax,eax
  408491:	jne    0x4084b5
  408493:	movsxd rax,DWORD PTR [rcx+0x2c]
  408497:	mov    r8,rdx
  40849a:	shl    rax,0xa
  40849e:	mov    rax,QWORD PTR [rcx+rax*1+0xa8]
  4084a6:	lea    rcx,[rip+0x18b55]        # 0x421002
  4084ad:	mov    rdx,rax
  4084b0:	call   0x407ff0
  4084b5:	lea    rcx,[rip+0x18b55]        # 0x421011
  4084bc:	mov    rdx,rbx
  4084bf:	add    rsp,0x20
  4084c3:	pop    rbx
  4084c4:	jmp    0x407ff0
  4084c9:	nop    DWORD PTR [rax+0x0]
  4084d0:	sub    rsp,0x48
  4084d4:	mov    rax,QWORD PTR [rcx+0x18]
  4084d8:	movsxd rdx,DWORD PTR [rcx+0x2c]
  4084dc:	mov    r8d,DWORD PTR [rax+0xc]
  4084e0:	mov    rcx,QWORD PTR [rcx+rdx*8+0x58]
  4084e5:	test   r8d,r8d
  4084e8:	jne    0x4084f2
  4084ea:	mov    eax,DWORD PTR [rax+rdx*4+0x10]
  4084ee:	test   eax,eax
  4084f0:	je     0x408500
  4084f2:	add    rsp,0x48
  4084f6:	ret    
  4084f7:	nop    WORD PTR [rax+rax*1+0x0]
  408500:	test   BYTE PTR [rcx+0x10],0x3
  408504:	jne    0x4084f2
  408506:	mov    r10,QWORD PTR [rcx+0x8]
  40850a:	movzx  ecx,BYTE PTR [r10]
  40850e:	test   cl,cl
  408510:	je     0x40856a
  408512:	xor    eax,eax
  408514:	lea    rdx,[rsp+0x20]
  408519:	jmp    0x408526
  40851b:	nop    DWORD PTR [rax+rax*1+0x0]
  408520:	cmp    rax,0x1f
  408524:	je     0x408564
  408526:	movsx  r8d,cl
  40852a:	lea    r9d,[r8-0x61]
  40852e:	cmp    r9d,0x19
  408532:	ja     0x40853b
  408534:	xor    ecx,0x20
  408537:	movsx  r8d,cl
  40853b:	mov    BYTE PTR [rdx+rax*1],r8b
  40853f:	add    rax,0x1
  408543:	movzx  ecx,BYTE PTR [r10+rax*1]
  408548:	test   cl,cl
  40854a:	jne    0x408520
  40854c:	add    rax,rdx
  40854f:	lea    rcx,[rip+0x18ac1]        # 0x421017
  408556:	mov    BYTE PTR [rax],0x0
  408559:	call   0x407ff0
  40855e:	nop
  40855f:	add    rsp,0x48
  408563:	ret    
  408564:	lea    rax,[rdx+0x1f]
  408568:	jmp    0x40854f
  40856a:	lea    rdx,[rsp+0x20]
  40856f:	mov    rax,rdx
  408572:	jmp    0x40854f
  408574:	xchg   ax,ax
  408576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408580:	push   rsi
  408581:	push   rbx
  408582:	sub    rsp,0x28
  408586:	lea    rbx,[rip+0x14c43]        # 0x41d1d0
  40858d:	lea    rsi,[rip+0x15adc]        # 0x41e070
  408594:	mov    rcx,rbx
  408597:	add    rbx,0x60
  40859b:	call   0x412440
  4085a0:	cmp    rbx,rsi
  4085a3:	jne    0x408594
  4085a5:	add    rsp,0x28
  4085a9:	pop    rbx
  4085aa:	pop    rsi
  4085ab:	ret    
  4085ac:	nop    DWORD PTR [rax+0x0]
  4085b0:	push   rbp
  4085b1:	push   rdi
  4085b2:	push   rsi
  4085b3:	push   rbx
  4085b4:	sub    rsp,0x428
  4085bb:	movsxd rax,DWORD PTR [rcx+0x2c]
  4085bf:	mov    rsi,QWORD PTR [rcx+0x18]
  4085c3:	mov    rdi,rdx
  4085c6:	mov    rbx,rcx
  4085c9:	mov    rbp,r8
  4085cc:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  4085d0:	test   edx,edx
  4085d2:	jne    0x408650
  4085d4:	mov    eax,DWORD PTR [rsi+0x14]
  4085d7:	test   eax,eax
  4085d9:	jne    0x4085fa
  4085db:	movsxd rax,DWORD PTR [rbx+0x2c]
  4085df:	lea    rcx,[rip+0x18a1c]        # 0x421002
  4085e6:	mov    r8,rdi
  4085e9:	shl    rax,0xa
  4085ed:	mov    rdx,QWORD PTR [rbx+rax*1+0xa8]
  4085f5:	call   0x407ff0
  4085fa:	lea    rdi,[rsp+0x20]
  4085ff:	mov    r8d,0xffffffff
  408605:	mov    edx,0x1
  40860a:	mov    rcx,rdi
  40860d:	call   0x412480
  408612:	movsx  r8d,BYTE PTR [rsi+0x10]
  408617:	mov    r9,rbx
  40861a:	mov    rdx,rbp
  40861d:	mov    rcx,rdi
  408620:	call   QWORD PTR [rsi+0x28]
  408623:	lea    rcx,[rip+0x189bc]        # 0x420fe6
  40862a:	mov    rdx,rax
  40862d:	call   0x407ff0
  408632:	xor    edx,edx
  408634:	mov    rcx,rdi
  408637:	call   0x412488
  40863c:	nop
  40863d:	add    rsp,0x428
  408644:	pop    rbx
  408645:	pop    rsi
  408646:	pop    rdi
  408647:	pop    rbp
  408648:	ret    
  408649:	nop    DWORD PTR [rax+0x0]
  408650:	movsx  edx,BYTE PTR [rsi+0x10]
  408654:	lea    rcx,[rip+0x189a4]        # 0x420fff
  40865b:	call   0x407ff0
  408660:	jmp    0x4085d4
  408665:	nop
  408666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408670:	push   r13
  408672:	push   r12
  408674:	push   rbp
  408675:	push   rdi
  408676:	push   rsi
  408677:	push   rbx
  408678:	sub    rsp,0x28
  40867c:	movsxd rsi,DWORD PTR [rcx+0x2c]
  408680:	mov    r13,QWORD PTR [rcx+0x18]
  408684:	mov    rbx,rcx
  408687:	mov    rdx,rsi
  40868a:	shl    rdx,0xa
  40868e:	test   esi,esi
  408690:	lea    rdi,[rcx+rdx*1+0xa8]
  408698:	lea    rdx,[rcx+rsi*8]
  40869c:	mov    rbp,QWORD PTR [rdx+0x58]
  4086a0:	je     0x4087b0
  4086a6:	mov    r12,QWORD PTR [rdx+0x50]
  4086aa:	mov    rcx,rdi
  4086ad:	call   0x412490
  4086b2:	test   r12,r12
  4086b5:	je     0x4087b8
  4086bb:	mov    eax,DWORD PTR [rbx+0x2c]
  4086be:	sub    eax,0x1
  4086c1:	cdqe   
  4086c3:	mov    edx,DWORD PTR [rbx+rax*4+0x30]
  4086c7:	test   edx,edx
  4086c9:	jne    0x4087d0
  4086cf:	shl    rax,0xa
  4086d3:	lea    rdx,[rip+0x1890c]        # 0x420fe6
  4086da:	mov    rcx,rdi
  4086dd:	mov    r8,QWORD PTR [rbx+rax*1+0xa8]
  4086e5:	call   0x412478
  4086ea:	mov    eax,DWORD PTR [r13+0x8]
  4086ee:	test   eax,eax
  4086f0:	je     0x408790
  4086f6:	movsxd rax,DWORD PTR [rbx+0x2c]
  4086fa:	mov    rdx,rsi
  4086fd:	lea    r8,[rip+0x1891a]        # 0x42101e
  408704:	shl    rdx,0xa
  408708:	mov    rcx,rdi
  40870b:	mov    rdx,QWORD PTR [rbx+rdx*1+0xa8]
  408713:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  408718:	cmp    BYTE PTR [rdx],0x0
  40871b:	lea    rdx,[rip+0x18911]        # 0x421033
  408722:	mov    r9,QWORD PTR [rax+0x8]
  408726:	lea    rax,[rip+0x18796]        # 0x420ec3
  40872d:	cmove  r8,rax
  408731:	call   0x412478
  408736:	test   BYTE PTR [r12+0x10],0x2
  40873c:	je     0x408765
  40873e:	cmp    DWORD PTR [r12],0xf
  408743:	je     0x4087f0
  408749:	mov    eax,DWORD PTR [rbx+0x2c]
  40874c:	sub    eax,0x1
  40874f:	cdqe   
  408751:	mov    r8d,DWORD PTR [rbx+rax*4+0x30]
  408756:	lea    rdx,[rip+0x188db]        # 0x421038
  40875d:	mov    rcx,rdi
  408760:	call   0x412478
  408765:	test   BYTE PTR [rbp+0x10],0x3
  408769:	jne    0x40879a
  40876b:	shl    rsi,0xa
  40876f:	lea    rcx,[rip+0x188c6]        # 0x42103c
  408776:	mov    rdx,QWORD PTR [rbx+rsi*1+0xa8]
  40877e:	add    rsp,0x28
  408782:	pop    rbx
  408783:	pop    rsi
  408784:	pop    rdi
  408785:	pop    rbp
  408786:	pop    r12
  408788:	pop    r13
  40878a:	jmp    0x407ff0
  40878f:	nop
  408790:	test   BYTE PTR [rbp+0x10],0x3
  408794:	je     0x4086f6
  40879a:	add    rsp,0x28
  40879e:	pop    rbx
  40879f:	pop    rsi
  4087a0:	pop    rdi
  4087a1:	pop    rbp
  4087a2:	pop    r12
  4087a4:	pop    r13
  4087a6:	ret    
  4087a7:	nop    WORD PTR [rax+rax*1+0x0]
  4087b0:	mov    rcx,rdi
  4087b3:	call   0x412490
  4087b8:	lea    rcx,[rip+0x18861]        # 0x421020
  4087bf:	add    rsp,0x28
  4087c3:	pop    rbx
  4087c4:	pop    rsi
  4087c5:	pop    rdi
  4087c6:	pop    rbp
  4087c7:	pop    r12
  4087c9:	pop    r13
  4087cb:	jmp    0x407ff0
  4087d0:	lea    rcx,[rip+0x186d3]        # 0x420eaa
  4087d7:	call   0x407ff0
  4087dc:	mov    eax,DWORD PTR [rbx+0x2c]
  4087df:	sub    eax,0x1
  4087e2:	cdqe   
  4087e4:	jmp    0x4086cf
  4087e9:	nop    DWORD PTR [rax+0x0]
  4087f0:	mov    r8d,DWORD PTR [rbx+0x28b0]
  4087f7:	jmp    0x408756
  4087fc:	nop    DWORD PTR [rax+0x0]
  408800:	push   r12
  408802:	push   rbp
  408803:	push   rdi
  408804:	push   rsi
  408805:	push   rbx
  408806:	sub    rsp,0x20
  40880a:	mov    rdi,QWORD PTR [rcx+0x18]
  40880e:	mov    rax,rcx
  408811:	movsxd rcx,DWORD PTR [rcx+0x2c]
  408815:	mov    rdx,rcx
  408818:	mov    r8,rcx
  40881b:	lea    rcx,[rax+rcx*8]
  40881f:	shl    r8,0xa
  408823:	test   edx,edx
  408825:	lea    rsi,[rax+r8*1+0xa8]
  40882d:	mov    rbp,QWORD PTR [rcx+0x58]
  408831:	je     0x4088e0
  408837:	mov    r12,QWORD PTR [rcx+0x50]
  40883b:	mov    rcx,rsi
  40883e:	mov    rbx,rax
  408841:	call   0x412490
  408846:	test   r12,r12
  408849:	je     0x4088f2
  40884f:	mov    eax,DWORD PTR [rbx+0x2c]
  408852:	lea    rdx,[rip+0x1878d]        # 0x420fe6
  408859:	mov    rcx,rsi
  40885c:	sub    eax,0x1
  40885f:	cdqe   
  408861:	shl    rax,0xa
  408865:	mov    r8,QWORD PTR [rbx+rax*1+0xa8]
  40886d:	call   0x412478
  408872:	mov    eax,DWORD PTR [rdi+0x14]
  408875:	test   eax,eax
  408877:	jne    0x40887f
  408879:	test   BYTE PTR [rbp+0x10],0x3
  40887d:	jne    0x4088f2
  40887f:	movsxd rax,DWORD PTR [rbx+0x2c]
  408883:	mov    r9,QWORD PTR [rdi+0x8]
  408887:	lea    rdx,[rip+0x187a5]        # 0x421033
  40888e:	mov    rcx,rsi
  408891:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  408896:	mov    r8,QWORD PTR [rax+0x8]
  40889a:	call   0x412478
  40889f:	test   BYTE PTR [r12+0x10],0x2
  4088a5:	je     0x4088f2
  4088a7:	cmp    DWORD PTR [r12],0xf
  4088ac:	je     0x408900
  4088ae:	mov    eax,DWORD PTR [rbx+0x2c]
  4088b1:	sub    eax,0x1
  4088b4:	cdqe   
  4088b6:	mov    r8d,DWORD PTR [rbx+rax*4+0x30]
  4088bb:	mov    r9,QWORD PTR [rdi+0x8]
  4088bf:	lea    rdx,[rip+0x1877c]        # 0x421042
  4088c6:	mov    rcx,rsi
  4088c9:	add    rsp,0x20
  4088cd:	pop    rbx
  4088ce:	pop    rsi
  4088cf:	pop    rdi
  4088d0:	pop    rbp
  4088d1:	pop    r12
  4088d3:	jmp    0x412478
  4088d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4088e0:	mov    rcx,rsi
  4088e3:	add    rsp,0x20
  4088e7:	pop    rbx
  4088e8:	pop    rsi
  4088e9:	pop    rdi
  4088ea:	pop    rbp
  4088eb:	pop    r12
  4088ed:	jmp    0x412490
  4088f2:	add    rsp,0x20
  4088f6:	pop    rbx
  4088f7:	pop    rsi
  4088f8:	pop    rdi
  4088f9:	pop    rbp
  4088fa:	pop    r12
  4088fc:	ret    
  4088fd:	nop    DWORD PTR [rax]
  408900:	mov    r8d,DWORD PTR [rbx+0x28b0]
  408907:	jmp    0x4088bb
  408909:	nop    DWORD PTR [rax+0x0]
  408910:	push   rbp
  408911:	push   rdi
  408912:	push   rsi
  408913:	push   rbx
  408914:	sub    rsp,0x28
  408918:	movsxd rax,DWORD PTR [rcx+0x2c]
  40891c:	mov    rsi,QWORD PTR [rcx+0x18]
  408920:	mov    rbx,rcx
  408923:	lea    rcx,[rcx+rax*8]
  408927:	test   eax,eax
  408929:	mov    rdi,QWORD PTR [rcx+0x58]
  40892d:	je     0x408a05
  408933:	lea    rdx,[rsi+rax*4]
  408937:	shl    rax,0xa
  40893b:	mov    rbp,QWORD PTR [rcx+0x50]
  40893f:	lea    rcx,[rbx+rax*1+0xa8]
  408947:	mov    DWORD PTR [rdx+0x80],0x1
  408951:	mov    DWORD PTR [rdx+0x58],0x0
  408958:	call   0x412490
  40895d:	test   BYTE PTR [rdi+0x10],0x2
  408961:	je     0x408995
  408963:	test   rbp,rbp
  408966:	je     0x40897b
  408968:	movsxd rax,DWORD PTR [rbx+0x2c]
  40896c:	lea    rax,[rsi+rax*4]
  408970:	mov    edx,DWORD PTR [rax+0x54]
  408973:	test   edx,edx
  408975:	jne    0x408a32
  40897b:	mov    eax,DWORD PTR [rsi+0x18]
  40897e:	test   eax,eax
  408980:	je     0x40898c
  408982:	test   BYTE PTR [rdi+0x10],0x3
  408986:	je     0x408a50
  40898c:	add    rsp,0x28
  408990:	pop    rbx
  408991:	pop    rsi
  408992:	pop    rdi
  408993:	pop    rbp
  408994:	ret    
  408995:	test   rbp,rbp
  408998:	je     0x40897b
  40899a:	test   BYTE PTR [rbp+0x10],0x3
  40899e:	jne    0x40897b
  4089a0:	movsxd rdx,DWORD PTR [rbx+0x2c]
  4089a4:	lea    rcx,[rsi+rdx*4]
  4089a8:	mov    rax,rdx
  4089ab:	sub    eax,0x1
  4089ae:	mov    DWORD PTR [rcx+0x30],0x1
  4089b5:	mov    DWORD PTR [rcx+0x54],0x1
  4089bc:	cdqe   
  4089be:	mov    r9,QWORD PTR [rdi+0x40]
  4089c2:	test   r9,r9
  4089c5:	cmove  r9,QWORD PTR [rdi+0x8]
  4089ca:	shl    rax,0xa
  4089ce:	shl    rdx,0xa
  4089d2:	mov    r8,QWORD PTR [rbx+rax*1+0xa8]
  4089da:	lea    rcx,[rbx+rdx*1+0xa8]
  4089e2:	lea    rdx,[rip+0x1865e]        # 0x421047
  4089e9:	call   0x412478
  4089ee:	movsxd rax,DWORD PTR [rbx+0x2c]
  4089f2:	lea    rax,[rbx+rax*4]
  4089f6:	mov    edx,DWORD PTR [rax+0x2c]
  4089f9:	mov    DWORD PTR [rax+0x30],edx
  4089fc:	add    rsp,0x28
  408a00:	pop    rbx
  408a01:	pop    rsi
  408a02:	pop    rdi
  408a03:	pop    rbp
  408a04:	ret    
  408a05:	lea    rcx,[rbx+0xa8]
  408a0c:	mov    DWORD PTR [rsi+0x80],0x1
  408a16:	mov    DWORD PTR [rsi+0x58],0x0
  408a1d:	call   0x412490
  408a22:	mov    eax,DWORD PTR [rsi+0x18]
  408a25:	test   eax,eax
  408a27:	jne    0x408982
  408a2d:	jmp    0x40898c
  408a32:	lea    rcx,[rip+0x18471]        # 0x420eaa
  408a39:	mov    DWORD PTR [rax+0x7c],0x0
  408a40:	call   0x407ff0
  408a45:	jmp    0x40897b
  408a4a:	nop    WORD PTR [rax+rax*1+0x0]
  408a50:	movsx  r8d,BYTE PTR [rsi+0x10]
  408a55:	mov    rdx,QWORD PTR [rdi+0x8]
  408a59:	lea    rcx,[rip+0x185ed]        # 0x42104d
  408a60:	add    rsp,0x28
  408a64:	pop    rbx
  408a65:	pop    rsi
  408a66:	pop    rdi
  408a67:	pop    rbp
  408a68:	jmp    0x407ff0
  408a6d:	nop    DWORD PTR [rax]
  408a70:	push   rbp
  408a71:	push   rdi
  408a72:	push   rsi
  408a73:	push   rbx
  408a74:	sub    rsp,0x48
  408a78:	movsxd rax,DWORD PTR [rcx+0x2c]
  408a7c:	mov    rdi,QWORD PTR [rcx+0x18]
  408a80:	mov    rsi,rcx
  408a83:	lea    rcx,[rcx+rax*8]
  408a87:	test   eax,eax
  408a89:	mov    rbx,QWORD PTR [rcx+0x58]
  408a8d:	je     0x408b70
  408a93:	mov    rbp,QWORD PTR [rcx+0x50]
  408a97:	shl    rax,0xa
  408a9b:	lea    rcx,[rsi+rax*1+0xa8]
  408aa3:	call   0x412490
  408aa8:	test   rbp,rbp
  408aab:	je     0x408b51
  408ab1:	test   BYTE PTR [rbp+0x10],0x3
  408ab5:	jne    0x408b51
  408abb:	mov    rdx,QWORD PTR [rbx+0x40]
  408abf:	movsxd rbp,DWORD PTR [rsi+0x2c]
  408ac3:	lea    r9,[rsp+0x20]
  408ac8:	test   rdx,rdx
  408acb:	cmove  rdx,QWORD PTR [rbx+0x8]
  408ad0:	xor    eax,eax
  408ad2:	mov    DWORD PTR [rdi+rbp*4+0x10],0x1
  408ada:	mov    rcx,rbp
  408add:	movzx  r8d,BYTE PTR [rdx]
  408ae1:	test   r8b,r8b
  408ae4:	jne    0x408afa
  408ae6:	jmp    0x408c06
  408aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  408af0:	cmp    rax,0x1f
  408af4:	je     0x408bf0
  408afa:	movsx  r10d,r8b
  408afe:	lea    r11d,[r10-0x61]
  408b02:	cmp    r11d,0x19
  408b06:	ja     0x408b10
  408b08:	xor    r8d,0x20
  408b0c:	movsx  r10d,r8b
  408b10:	mov    BYTE PTR [r9+rax*1],r10b
  408b14:	add    rax,0x1
  408b18:	movzx  r8d,BYTE PTR [rdx+rax*1]
  408b1d:	test   r8b,r8b
  408b20:	jne    0x408af0
  408b22:	add    rax,r9
  408b25:	mov    BYTE PTR [rax],0x0
  408b28:	lea    eax,[rcx-0x1]
  408b2b:	shl    rbp,0xa
  408b2f:	lea    rcx,[rsi+rbp*1+0xa8]
  408b37:	lea    rdx,[rip+0x18509]        # 0x421047
  408b3e:	cdqe   
  408b40:	shl    rax,0xa
  408b44:	mov    r8,QWORD PTR [rsi+rax*1+0xa8]
  408b4c:	call   0x412478
  408b51:	mov    edx,DWORD PTR [rdi+0xc]
  408b54:	test   edx,edx
  408b56:	jne    0x408b64
  408b58:	movsxd rax,DWORD PTR [rsi+0x2c]
  408b5c:	mov    eax,DWORD PTR [rdi+rax*4+0x10]
  408b60:	test   eax,eax
  408b62:	je     0x408b80
  408b64:	add    rsp,0x48
  408b68:	pop    rbx
  408b69:	pop    rsi
  408b6a:	pop    rdi
  408b6b:	pop    rbp
  408b6c:	ret    
  408b6d:	nop    DWORD PTR [rax]
  408b70:	lea    rcx,[rsi+0xa8]
  408b77:	call   0x412490
  408b7c:	jmp    0x408b51
  408b7e:	xchg   ax,ax
  408b80:	test   BYTE PTR [rbx+0x10],0x3
  408b84:	jne    0x408b64
  408b86:	mov    r10,QWORD PTR [rbx+0x8]
  408b8a:	movzx  edx,BYTE PTR [r10]
  408b8e:	test   dl,dl
  408b90:	je     0x408c0e
  408b92:	xor    eax,eax
  408b94:	lea    r9,[rsp+0x20]
  408b99:	jmp    0x408ba6
  408b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408ba0:	cmp    rax,0x1f
  408ba4:	je     0x408c00
  408ba6:	movsx  ecx,dl
  408ba9:	lea    r8d,[rcx-0x61]
  408bad:	cmp    r8d,0x19
  408bb1:	ja     0x408bb9
  408bb3:	xor    edx,0x20
  408bb6:	movsx  ecx,dl
  408bb9:	mov    BYTE PTR [r9+rax*1],cl
  408bbd:	add    rax,0x1
  408bc1:	movzx  edx,BYTE PTR [r10+rax*1]
  408bc6:	test   dl,dl
  408bc8:	jne    0x408ba0
  408bca:	add    rax,r9
  408bcd:	lea    rcx,[rip+0x18468]        # 0x42103c
  408bd4:	mov    rdx,r9
  408bd7:	mov    BYTE PTR [rax],0x0
  408bda:	call   0x407ff0
  408bdf:	nop
  408be0:	add    rsp,0x48
  408be4:	pop    rbx
  408be5:	pop    rsi
  408be6:	pop    rdi
  408be7:	pop    rbp
  408be8:	ret    
  408be9:	nop    DWORD PTR [rax+0x0]
  408bf0:	lea    rax,[r9+0x1f]
  408bf4:	jmp    0x408b25
  408bf9:	nop    DWORD PTR [rax+0x0]
  408c00:	lea    rax,[r9+0x1f]
  408c04:	jmp    0x408bcd
  408c06:	mov    rax,r9
  408c09:	jmp    0x408b25
  408c0e:	lea    r9,[rsp+0x20]
  408c13:	mov    rax,r9
  408c16:	jmp    0x408bcd
  408c18:	nop    DWORD PTR [rax+rax*1+0x0]
  408c20:	push   rbp
  408c21:	push   rdi
  408c22:	push   rsi
  408c23:	push   rbx
  408c24:	sub    rsp,0x28
  408c28:	lea    rsi,[rip+0x1843d]        # 0x42106c
  408c2f:	mov    rbp,rdx
  408c32:	mov    rdi,rcx
  408c35:	movzx  ebx,BYTE PTR [rbp+0x0]
  408c39:	test   bl,bl
  408c3b:	je     0x408c8e
  408c3d:	nop    DWORD PTR [rax]
  408c40:	lea    eax,[rbx-0x8]
  408c43:	cmp    al,0x54
  408c45:	ja     0x408c66
  408c47:	movzx  eax,al
  408c4a:	movsxd rax,DWORD PTR [rsi+rax*4]
  408c4e:	add    rax,rsi
  408c51:	jmp    rax
  408c53:	mov    r8d,0x1
  408c59:	mov    edx,0x5c
  408c5e:	mov    rcx,rdi
  408c61:	call   0x412498
  408c66:	cmp    bl,0x1f
  408c69:	ja     0x408d40
  408c6f:	lea    rdx,[rip+0x183eb]        # 0x421061
  408c76:	movsx  r8d,bl
  408c7a:	mov    rcx,rdi
  408c7d:	call   0x412478
  408c82:	add    rbp,0x1
  408c86:	movzx  ebx,BYTE PTR [rbp+0x0]
  408c8a:	test   bl,bl
  408c8c:	jne    0x408c40
  408c8e:	mov    rax,QWORD PTR [rdi]
  408c91:	add    rsp,0x28
  408c95:	pop    rbx
  408c96:	pop    rsi
  408c97:	pop    rdi
  408c98:	pop    rbp
  408c99:	ret    
  408c9a:	nop    WORD PTR [rax+rax*1+0x0]
  408ca0:	lea    r8,[rip+0x183b7]        # 0x42105e
  408ca7:	lea    rdx,[rip+0x18338]        # 0x420fe6
  408cae:	mov    rcx,rdi
  408cb1:	call   0x412478
  408cb6:	jmp    0x408c82
  408cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  408cc0:	lea    r8,[rip+0x1838b]        # 0x421052
  408cc7:	lea    rdx,[rip+0x18318]        # 0x420fe6
  408cce:	mov    rcx,rdi
  408cd1:	call   0x412478
  408cd6:	jmp    0x408c82
  408cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  408ce0:	lea    r8,[rip+0x1836e]        # 0x421055
  408ce7:	lea    rdx,[rip+0x182f8]        # 0x420fe6
  408cee:	mov    rcx,rdi
  408cf1:	call   0x412478
  408cf6:	jmp    0x408c82
  408cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  408d00:	lea    r8,[rip+0x18351]        # 0x421058
  408d07:	lea    rdx,[rip+0x182d8]        # 0x420fe6
  408d0e:	mov    rcx,rdi
  408d11:	call   0x412478
  408d16:	jmp    0x408c82
  408d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d20:	lea    r8,[rip+0x18334]        # 0x42105b
  408d27:	lea    rdx,[rip+0x182b8]        # 0x420fe6
  408d2e:	mov    rcx,rdi
  408d31:	call   0x412478
  408d36:	jmp    0x408c82
  408d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d40:	movsx  edx,bl
  408d43:	mov    r8d,0x1
  408d49:	mov    rcx,rdi
  408d4c:	call   0x412498
  408d51:	jmp    0x408c82
  408d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d60:	push   rdi
  408d61:	push   rsi
  408d62:	push   rbx
  408d63:	sub    rsp,0x420
  408d6a:	lea    rbx,[rsp+0x20]
  408d6f:	mov    rdi,rdx
  408d72:	mov    rsi,r8
  408d75:	mov    edx,0x1
  408d7a:	mov    r8d,0xffffffff
  408d80:	mov    rcx,rbx
  408d83:	call   0x412480
  408d88:	mov    rdx,rdi
  408d8b:	mov    rcx,rbx
  408d8e:	call   0x408c20
  408d93:	lea    rcx,[rip+0x18426]        # 0x4211c0
  408d9a:	mov    rdx,rax
  408d9d:	call   0x407ff0
  408da2:	mov    rcx,rbx
  408da5:	call   0x412490
  408daa:	mov    rdx,rsi
  408dad:	mov    rcx,rbx
  408db0:	call   0x408c20
  408db5:	lea    rcx,[rip+0x18251]        # 0x42100d
  408dbc:	mov    rdx,rax
  408dbf:	call   0x407ff0
  408dc4:	xor    edx,edx
  408dc6:	mov    rcx,rbx
  408dc9:	call   0x412488
  408dce:	nop
  408dcf:	add    rsp,0x420
  408dd6:	pop    rbx
  408dd7:	pop    rsi
  408dd8:	pop    rdi
  408dd9:	ret    
  408dda:	nop    WORD PTR [rax+rax*1+0x0]
  408de0:	push   rdi
  408de1:	push   rsi
  408de2:	push   rbx
  408de3:	sub    rsp,0x420
  408dea:	movsxd rax,DWORD PTR [rcx+0x2c]
  408dee:	mov    rsi,rdx
  408df1:	lea    rdi,[rsp+0x20]
  408df6:	mov    rbx,r8
  408df9:	shl    rax,0xa
  408dfd:	mov    rdx,QWORD PTR [rcx+rax*1+0xa8]
  408e05:	lea    rcx,[rip+0x181da]        # 0x420fe6
  408e0c:	call   0x407ff0
  408e11:	mov    r8d,0xffffffff
  408e17:	mov    edx,0x1
  408e1c:	mov    rcx,rdi
  408e1f:	call   0x412480
  408e24:	movzx  eax,BYTE PTR [rsi]
  408e27:	test   al,al
  408e29:	jne    0x408e4c
  408e2b:	jmp    0x408e80
  408e2d:	nop    DWORD PTR [rax]
  408e30:	movsx  edx,al
  408e33:	add    rsi,0x1
  408e37:	mov    r8d,0x1
  408e3d:	mov    rcx,rdi
  408e40:	call   0x412498
  408e45:	movzx  eax,BYTE PTR [rsi]
  408e48:	test   al,al
  408e4a:	je     0x408e80
  408e4c:	lea    edx,[rax-0x30]
  408e4f:	cmp    dl,0x9
  408e52:	jbe    0x408e30
  408e54:	mov    edx,eax
  408e56:	and    edx,0xffffffdf
  408e59:	sub    edx,0x41
  408e5c:	cmp    dl,0x19
  408e5f:	jbe    0x408e30
  408e61:	add    rsi,0x1
  408e65:	mov    r8d,0x1
  408e6b:	mov    edx,0x5f
  408e70:	mov    rcx,rdi
  408e73:	call   0x412498
  408e78:	movzx  eax,BYTE PTR [rsi]
  408e7b:	test   al,al
  408e7d:	jne    0x408e4c
  408e7f:	nop
  408e80:	mov    rdx,QWORD PTR [rsp+0x20]
  408e85:	lea    rcx,[rip+0x18334]        # 0x4211c0
  408e8c:	call   0x407ff0
  408e91:	mov    rcx,rdi
  408e94:	call   0x412490
  408e99:	movsx  edx,BYTE PTR [rbx]
  408e9c:	test   dl,dl
  408e9e:	jne    0x408edb
  408ea0:	jmp    0x408f10
  408ea2:	cmp    dl,0x5c
  408ea5:	je     0x408fc0
  408eab:	cmp    dl,0x60
  408eae:	je     0x408fa0
  408eb4:	cmp    dl,0x24
  408eb7:	je     0x408f80
  408ebd:	mov    r8d,0x1
  408ec3:	mov    rcx,rdi
  408ec6:	call   0x412498
  408ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ed0:	add    rbx,0x1
  408ed4:	movsx  edx,BYTE PTR [rbx]
  408ed7:	test   dl,dl
  408ed9:	je     0x408f10
  408edb:	cmp    dl,0x22
  408ede:	je     0x408f40
  408ee0:	jg     0x408ea2
  408ee2:	cmp    dl,0xa
  408ee5:	je     0x408f60
  408ee7:	cmp    dl,0xd
  408eea:	jne    0x408ebd
  408eec:	lea    rdx,[rip+0x180f3]        # 0x420fe6
  408ef3:	lea    r8,[rip+0x18161]        # 0x42105b
  408efa:	add    rbx,0x1
  408efe:	mov    rcx,rdi
  408f01:	call   0x412478
  408f06:	movsx  edx,BYTE PTR [rbx]
  408f09:	test   dl,dl
  408f0b:	jne    0x408edb
  408f0d:	nop    DWORD PTR [rax]
  408f10:	mov    rdx,QWORD PTR [rsp+0x20]
  408f15:	lea    rcx,[rip+0x182a8]        # 0x4211c4
  408f1c:	call   0x407ff0
  408f21:	xor    edx,edx
  408f23:	mov    rcx,rdi
  408f26:	call   0x412488
  408f2b:	nop
  408f2c:	add    rsp,0x420
  408f33:	pop    rbx
  408f34:	pop    rsi
  408f35:	pop    rdi
  408f36:	ret    
  408f37:	nop    WORD PTR [rax+rax*1+0x0]
  408f40:	lea    r8,[rip+0x18286]        # 0x4211cd
  408f47:	lea    rdx,[rip+0x18098]        # 0x420fe6
  408f4e:	mov    rcx,rdi
  408f51:	call   0x412478
  408f56:	jmp    0x408ed0
  408f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f60:	lea    r8,[rip+0x180f1]        # 0x421058
  408f67:	lea    rdx,[rip+0x18078]        # 0x420fe6
  408f6e:	mov    rcx,rdi
  408f71:	call   0x412478
  408f76:	jmp    0x408ed0
  408f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  408f80:	lea    r8,[rip+0x1824c]        # 0x4211d3
  408f87:	lea    rdx,[rip+0x18058]        # 0x420fe6
  408f8e:	mov    rcx,rdi
  408f91:	call   0x412478
  408f96:	jmp    0x408ed0
  408f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  408fa0:	lea    r8,[rip+0x18229]        # 0x4211d0
  408fa7:	lea    rdx,[rip+0x18038]        # 0x420fe6
  408fae:	mov    rcx,rdi
  408fb1:	call   0x412478
  408fb6:	jmp    0x408ed0
  408fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  408fc0:	lea    r8,[rip+0x18203]        # 0x4211ca
  408fc7:	lea    rdx,[rip+0x18018]        # 0x420fe6
  408fce:	mov    rcx,rdi
  408fd1:	call   0x412478
  408fd6:	jmp    0x408ed0
  408fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  408fe0:	push   rdi
  408fe1:	push   rsi
  408fe2:	push   rbx
  408fe3:	sub    rsp,0x20
  408fe7:	movzx  eax,BYTE PTR [rdx]
  408fea:	mov    rsi,rcx
  408fed:	mov    rbx,rdx
  408ff0:	mov    edi,r8d
  408ff3:	test   al,al
  408ff5:	jne    0x409031
  408ff7:	jmp    0x409064
  408ff9:	nop    DWORD PTR [rax+0x0]
  409000:	cmp    al,0x8
  409002:	je     0x4090b0
  409008:	cmp    al,0xa
  40900a:	jne    0x409090
  409010:	lea    r8,[rip+0x18041]        # 0x421058
  409017:	lea    rdx,[rip+0x17fc8]        # 0x420fe6
  40901e:	mov    rcx,rsi
  409021:	call   0x412478
  409026:	add    rbx,0x1
  40902a:	movzx  eax,BYTE PTR [rbx]
  40902d:	test   al,al
  40902f:	je     0x409064
  409031:	cmp    al,0xc
  409033:	je     0x409070
  409035:	jle    0x409000
  409037:	cmp    al,0xd
  409039:	je     0x4090d0
  40903f:	cmp    al,0x5c
  409041:	jne    0x409090
  409043:	lea    r8,[rip+0x18180]        # 0x4211ca
  40904a:	lea    rdx,[rip+0x17f95]        # 0x420fe6
  409051:	add    rbx,0x1
  409055:	mov    rcx,rsi
  409058:	call   0x412478
  40905d:	movzx  eax,BYTE PTR [rbx]
  409060:	test   al,al
  409062:	jne    0x409031
  409064:	mov    rax,QWORD PTR [rsi]
  409067:	add    rsp,0x20
  40906b:	pop    rbx
  40906c:	pop    rsi
  40906d:	pop    rdi
  40906e:	ret    
  40906f:	nop
  409070:	lea    r8,[rip+0x17fde]        # 0x421055
  409077:	lea    rdx,[rip+0x17f68]        # 0x420fe6
  40907e:	mov    rcx,rsi
  409081:	call   0x412478
  409086:	jmp    0x409026
  409088:	nop    DWORD PTR [rax+rax*1+0x0]
  409090:	cmp    al,dil
  409093:	je     0x4090f0
  409095:	movsx  edx,al
  409098:	mov    r8d,0x1
  40909e:	mov    rcx,rsi
  4090a1:	call   0x412498
  4090a6:	jmp    0x409026
  4090ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4090b0:	lea    r8,[rip+0x17f9b]        # 0x421052
  4090b7:	lea    rdx,[rip+0x17f28]        # 0x420fe6
  4090be:	mov    rcx,rsi
  4090c1:	call   0x412478
  4090c6:	jmp    0x409026
  4090cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4090d0:	lea    r8,[rip+0x17f84]        # 0x42105b
  4090d7:	lea    rdx,[rip+0x17f08]        # 0x420fe6
  4090de:	mov    rcx,rsi
  4090e1:	call   0x412478
  4090e6:	jmp    0x409026
  4090eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4090f0:	mov    r8d,0x1
  4090f6:	mov    edx,0x5c
  4090fb:	mov    rcx,rsi
  4090fe:	call   0x412498
  409103:	movzx  eax,BYTE PTR [rbx]
  409106:	jmp    0x409095
  409108:	nop    DWORD PTR [rax+rax*1+0x0]
  409110:	push   rdi
  409111:	push   rsi
  409112:	sub    rsp,0x38
  409116:	mov    rax,QWORD PTR [rip+0x201db]        # 0x4292f8
  40911d:	test   rax,rax
  409120:	jne    0x40914c
  409122:	lea    rdi,[rip+0x18102]        # 0x42122b
  409129:	mov    rsi,rdx
  40912c:	mov    ecx,0x2
  409131:	lea    rax,[rip+0x1809e]        # 0x4211d6
  409138:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40913a:	cmove  rdx,rax
  40913e:	mov    QWORD PTR [rip+0x201b3],rdx        # 0x4292f8
  409145:	add    rsp,0x38
  409149:	pop    rsi
  40914a:	pop    rdi
  40914b:	ret    
  40914c:	lea    r8,[rip+0x1808d]        # 0x4211e0
  409153:	mov    r9,rdx
  409156:	xor    ecx,ecx
  409158:	mov    QWORD PTR [rsp+0x20],rax
  40915d:	mov    edx,0x10
  409162:	call   0x412308
  409167:	mov    ecx,0x1
  40916c:	call   0x401cb0
  409171:	nop
  409172:	nop    DWORD PTR [rax+0x0]
  409176:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409180:	sub    rsp,0x38
  409184:	mov    QWORD PTR [rsp+0x58],r9
  409189:	lea    r9,[rsp+0x58]
  40918e:	mov    QWORD PTR [rsp+0x28],r9
  409193:	call   0x413f40
  409198:	add    rsp,0x38
  40919c:	ret    
  40919d:	nop    DWORD PTR [rax]
  4091a0:	push   rdi
  4091a1:	push   rsi
  4091a2:	push   rbx
  4091a3:	sub    rsp,0x30
  4091a7:	mov    rbx,rdx
  4091aa:	lea    rdx,[rsp+0x20]
  4091af:	mov    rsi,rcx
  4091b2:	mov    rcx,rbx
  4091b5:	mov    BYTE PTR [rsp+0x20],r8b
  4091ba:	mov    BYTE PTR [rsp+0x21],0x22
  4091bf:	mov    BYTE PTR [rsp+0x22],0xa
  4091c4:	mov    BYTE PTR [rsp+0x23],0xd
  4091c9:	mov    BYTE PTR [rsp+0x24],0x0
  4091ce:	call   0x419850
  4091d3:	cmp    BYTE PTR [rbx+rax*1],0x0
  4091d7:	setne  dil
  4091db:	jne    0x409250
  4091dd:	movzx  eax,BYTE PTR [rbx]
  4091e0:	test   al,al
  4091e2:	jne    0x40920c
  4091e4:	jmp    0x40923d
  4091e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091f0:	movsx  edx,BYTE PTR [rbx]
  4091f3:	mov    r8d,0x1
  4091f9:	add    rbx,0x1
  4091fd:	mov    rcx,rsi
  409200:	call   0x412498
  409205:	movzx  eax,BYTE PTR [rbx]
  409208:	test   al,al
  40920a:	je     0x409225
  40920c:	cmp    al,0x22
  40920e:	jne    0x4091f0
  409210:	mov    r8d,0x1
  409216:	mov    edx,0x22
  40921b:	mov    rcx,rsi
  40921e:	call   0x412498
  409223:	jmp    0x4091f0
  409225:	test   dil,dil
  409228:	je     0x40923d
  40922a:	mov    r8d,0x1
  409230:	mov    edx,0x22
  409235:	mov    rcx,rsi
  409238:	call   0x412498
  40923d:	mov    rax,QWORD PTR [rsi]
  409240:	add    rsp,0x30
  409244:	pop    rbx
  409245:	pop    rsi
  409246:	pop    rdi
  409247:	ret    
  409248:	nop    DWORD PTR [rax+rax*1+0x0]
  409250:	mov    r8d,0x1
  409256:	mov    edx,0x22
  40925b:	mov    rcx,rsi
  40925e:	call   0x412498
  409263:	movzx  eax,BYTE PTR [rbx]
  409266:	test   al,al
  409268:	jne    0x40920c
  40926a:	jmp    0x40922a
  40926c:	nop    DWORD PTR [rax+0x0]
  409270:	push   rdi
  409271:	push   rsi
  409272:	push   rbx
  409273:	sub    rsp,0x20
  409277:	movsxd rax,DWORD PTR [rcx+0x2c]
  40927b:	mov    rsi,rdx
  40927e:	mov    rbx,rcx
  409281:	mov    rdi,r8
  409284:	mov    rax,QWORD PTR [rcx+rax*8+0x58]
  409289:	mov    edx,DWORD PTR [rax+0x58]
  40928c:	test   edx,edx
  40928e:	jne    0x4092a7
  409290:	mov    rcx,QWORD PTR [rax+0x50]
  409294:	xor    r9d,r9d
  409297:	xor    r8d,r8d
  40929a:	mov    rdx,rsi
  40929d:	call   0x412438
  4092a2:	test   rax,rax
  4092a5:	je     0x4092c0
  4092a7:	mov    rax,QWORD PTR [rbx+0x8]
  4092ab:	mov    r8,rdi
  4092ae:	mov    rdx,rsi
  4092b1:	mov    rcx,rbx
  4092b4:	call   QWORD PTR [rax+0x38]
  4092b7:	movsxd rax,DWORD PTR [rbx+0x2c]
  4092bb:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  4092c0:	add    rsp,0x20
  4092c4:	pop    rbx
  4092c5:	pop    rsi
  4092c6:	pop    rdi
  4092c7:	ret    
  4092c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4092d0:	push   rsi
  4092d1:	push   rbx
  4092d2:	sub    rsp,0x28
  4092d6:	mov    rdx,QWORD PTR [rcx]
  4092d9:	test   rdx,rdx
  4092dc:	je     0x409356
  4092de:	mov    rax,QWORD PTR [rdx+0x8]
  4092e2:	mov    rsi,rcx
  4092e5:	mov    rax,QWORD PTR [rax+0x20]
  4092e9:	test   rax,rax
  4092ec:	je     0x4092f6
  4092ee:	mov    rcx,rdx
  4092f1:	call   rax
  4092f3:	mov    rdx,QWORD PTR [rsi]
  4092f6:	xor    ebx,ebx
  4092f8:	nop    DWORD PTR [rax+rax*1+0x0]
  409300:	movsxd rax,ebx
  409303:	add    ebx,0x1
  409306:	shl    rax,0xa
  40930a:	lea    rcx,[rdx+rax*1+0xa8]
  409312:	xor    edx,edx
  409314:	call   0x412488
  409319:	cmp    ebx,0xa
  40931c:	mov    rdx,QWORD PTR [rsi]
  40931f:	jne    0x409300
  409321:	mov    rax,QWORD PTR [rdx+0x8]
  409325:	cmp    QWORD PTR [rax],0x0
  409329:	je     0x409337
  40932b:	mov    rcx,QWORD PTR [rdx+0x18]
  40932f:	call   0x412298
  409334:	mov    rdx,QWORD PTR [rsi]
  409337:	lea    rcx,[rdx+0x18]
  40933b:	call   0x4123b8
  409340:	mov    rcx,QWORD PTR [rsi]
  409343:	call   0x412298
  409348:	mov    rcx,rsi
  40934b:	add    rsp,0x28
  40934f:	pop    rbx
  409350:	pop    rsi
  409351:	jmp    0x4123b8
  409356:	add    rsp,0x28
  40935a:	pop    rbx
  40935b:	pop    rsi
  40935c:	ret    
  40935d:	nop    DWORD PTR [rax]
  409360:	xor    eax,eax
  409362:	test   rdx,rdx
  409365:	jne    0x40937a
  409367:	mov    rdx,QWORD PTR [rcx+0x8]
  40936b:	test   rdx,rdx
  40936e:	je     0x40937a
  409370:	cmp    QWORD PTR [rdx],0x0
  409374:	je     0x40937a
  409376:	mov    rax,QWORD PTR [rcx+0x18]
  40937a:	repz ret 
  40937c:	nop    DWORD PTR [rax+0x0]
  409380:	sub    rsp,0x28
  409384:	movsxd r8,DWORD PTR [rcx+0x2c]
  409388:	lea    eax,[r8+0x1]
  40938c:	cmp    eax,0x9
  40938f:	mov    DWORD PTR [rcx+0x2c],eax
  409392:	jg     0x409453
  409398:	test   eax,eax
  40939a:	je     0x409400
  40939c:	lea    r8,[rcx+r8*8]
  4093a0:	cdqe   
  4093a2:	mov    r9,QWORD PTR [r8+0x58]
  4093a6:	mov    r9d,DWORD PTR [r9]
  4093a9:	mov    DWORD PTR [rcx+rax*4+0x30],0x0
  4093b1:	movsxd rax,edx
  4093b4:	lea    rax,[rax+rax*2]
  4093b8:	shl    rax,0x5
  4093bc:	add    rax,QWORD PTR [rcx+0x20]
  4093c0:	cmp    edx,0xf
  4093c3:	mov    QWORD PTR [r8+0x60],rax
  4093c7:	je     0x409433
  4093c9:	cmp    r9d,0xf
  4093cd:	jne    0x40941f
  4093cf:	cmp    edx,0xd
  4093d2:	mov    eax,DWORD PTR [rcx+0x28ac]
  4093d8:	cmove  eax,DWORD PTR [rcx+0x28a8]
  4093df:	mov    DWORD PTR [rcx+0x28b0],eax
  4093e5:	mov    rax,QWORD PTR [rcx+0x8]
  4093e9:	mov    rax,QWORD PTR [rax+0x28]
  4093ed:	test   rax,rax
  4093f0:	jne    0x40942c
  4093f2:	add    rsp,0x28
  4093f6:	ret    
  4093f7:	nop    WORD PTR [rax+rax*1+0x0]
  409400:	movsxd rax,edx
  409403:	mov    DWORD PTR [rcx+0x30],0x0
  40940a:	lea    rax,[rax+rax*2]
  40940e:	shl    rax,0x5
  409412:	add    rax,QWORD PTR [rcx+0x20]
  409416:	cmp    edx,0xf
  409419:	mov    QWORD PTR [rcx+0x58],rax
  40941d:	je     0x409433
  40941f:	mov    rax,QWORD PTR [rcx+0x8]
  409423:	mov    rax,QWORD PTR [rax+0x28]
  409427:	test   rax,rax
  40942a:	je     0x4093f2
  40942c:	add    rsp,0x28
  409430:	rex.W jmp rax
  409433:	mov    DWORD PTR [rcx+0x28b0],0x0
  40943d:	mov    DWORD PTR [rcx+0x28ac],0x0
  409447:	mov    DWORD PTR [rcx+0x28a8],0x0
  409451:	jmp    0x40941f
  409453:	call   0x419e29
  409458:	nop
  409459:	nop    DWORD PTR [rax+0x0]
  409460:	push   rbx
  409461:	sub    rsp,0x20
  409465:	mov    rcx,r8
  409468:	mov    rbx,r8
  40946b:	call   0x412068
  409470:	test   rax,rax
  409473:	mov    QWORD PTR [rip+0x1fe76],rax        # 0x4292f0
  40947a:	je     0x409484
  40947c:	xor    eax,eax
  40947e:	add    rsp,0x20
  409482:	pop    rbx
  409483:	ret    
  409484:	lea    r8,[rip+0x17f66]        # 0x4213f1
  40948b:	mov    r9,rbx
  40948e:	mov    edx,0x10
  409493:	xor    ecx,ecx
  409495:	call   0x412308
  40949a:	mov    eax,0xffffffea
  40949f:	jmp    0x40947e
  4094a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4094a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4094b0:	push   r13
  4094b2:	push   r12
  4094b4:	push   rbp
  4094b5:	push   rdi
  4094b6:	push   rsi
  4094b7:	push   rbx
  4094b8:	sub    rsp,0x458
  4094bf:	mov    rsi,rcx
  4094c2:	mov    ecx,0x28c8
  4094c7:	mov    rdi,rdx
  4094ca:	mov    r12,r8
  4094cd:	call   0x4122c0
  4094d2:	test   rax,rax
  4094d5:	mov    rbx,rax
  4094d8:	mov    QWORD PTR [rsi],rax
  4094db:	je     0x4096b8
  4094e1:	movsxd rcx,DWORD PTR [rdi+0x8]
  4094e5:	call   0x4122c0
  4094ea:	test   rax,rax
  4094ed:	mov    QWORD PTR [rbx+0x18],rax
  4094f1:	je     0x4096b8
  4094f7:	mov    rax,QWORD PTR [rsi]
  4094fa:	lea    rdx,[rip+0x1b83f]        # 0x424d40
  409501:	mov    QWORD PTR [rax],rdx
  409504:	mov    rax,QWORD PTR [rsi]
  409507:	lea    rdx,[rip+0x13c72]        # 0x41d180
  40950e:	mov    QWORD PTR [rax+0x8],rdi
  409512:	mov    rax,QWORD PTR [rsi]
  409515:	mov    QWORD PTR [rax+0x20],rdx
  409519:	mov    rcx,QWORD PTR [rsi]
  40951c:	mov    DWORD PTR [rax+0x2c],0xffffffff
  409523:	mov    DWORD PTR [rcx+0x28],0x27
  40952a:	call   0x412270
  40952f:	mov    rax,QWORD PTR [rdi]
  409532:	test   rax,rax
  409535:	je     0x409546
  409537:	mov    rdx,QWORD PTR [rsi]
  40953a:	mov    rcx,QWORD PTR [rdx+0x18]
  40953e:	mov    QWORD PTR [rcx],rax
  409541:	call   0x412270
  409546:	test   r12,r12
  409549:	je     0x4095d7
  40954f:	lea    rbp,[rsp+0x50]
  409554:	lea    r9,[rip+0x17eb0]        # 0x42140b
  40955b:	lea    r8,[rip+0x17eab]        # 0x42140d
  409562:	mov    DWORD PTR [rsp+0x20],0x0
  40956a:	mov    rdx,r12
  40956d:	mov    QWORD PTR [rsp+0x50],0x0
  409576:	mov    rcx,rbp
  409579:	xor    ebx,ebx
  40957b:	call   0x412430
  409580:	test   eax,eax
  409582:	jns    0x4095ad
  409584:	jmp    0x40975a
  409589:	nop    DWORD PTR [rax+0x0]
  409590:	mov    r8,QWORD PTR [rbx+0x8]
  409594:	mov    rdx,QWORD PTR [rbx]
  409597:	mov    r9d,0x1
  40959d:	mov    rcx,QWORD PTR [rsi]
  4095a0:	call   0x412278
  4095a5:	test   eax,eax
  4095a7:	js     0x409725
  4095ad:	mov    rcx,QWORD PTR [rsp+0x50]
  4095b2:	lea    rdx,[rip+0x1790a]        # 0x420ec3
  4095b9:	mov    r8,rbx
  4095bc:	mov    r9d,0x2
  4095c2:	call   0x412438
  4095c7:	test   rax,rax
  4095ca:	mov    rbx,rax
  4095cd:	jne    0x409590
  4095cf:	mov    rcx,rbp
  4095d2:	call   0x412440
  4095d7:	mov    r9,QWORD PTR [rsi]
  4095da:	xor    eax,eax
  4095dc:	or     rcx,0xffffffffffffffff
  4095e0:	mov    rdx,QWORD PTR [r9+0x28b8]
  4095e7:	mov    QWORD PTR [rsp+0x48],rdx
  4095ec:	mov    rdi,rdx
  4095ef:	repnz scas al,BYTE PTR es:[rdi]
  4095f1:	cmp    BYTE PTR [rdx],0x0
  4095f4:	not    rcx
  4095f7:	lea    rbp,[rdx+rcx*1-0x1]
  4095fc:	je     0x4096dd
  409602:	mov    rdi,rdx
  409605:	lea    r13,[rsp+0x48]
  40960a:	lea    r12,[rsp+0x44]
  40960f:	jmp    0x409622
  409611:	mov    rdi,QWORD PTR [rsp+0x48]
  409616:	mov    r9,QWORD PTR [rsi]
  409619:	cmp    BYTE PTR [rdi],0x0
  40961c:	je     0x4096dd
  409622:	mov    r9d,DWORD PTR [r9+0x28c0]
  409629:	mov    r8,rbp
  40962c:	mov    rdx,r13
  40962f:	mov    rcx,r12
  409632:	call   0x4121e0
  409637:	test   eax,eax
  409639:	mov    ebx,eax
  40963b:	jns    0x409611
  40963d:	lea    rbp,[rsp+0x50]
  409642:	xor    edx,edx
  409644:	mov    r8d,0x1
  40964a:	mov    rcx,rbp
  40964d:	call   0x412480
  409652:	mov    r12,QWORD PTR [rsp+0x48]
  409657:	lea    rdx,[rip+0x17e38]        # 0x421496
  40965e:	mov    rcx,rbp
  409661:	call   0x412478
  409666:	cmp    r12,rdi
  409669:	je     0x40968c
  40966b:	nop    DWORD PTR [rax+rax*1+0x0]
  409670:	movzx  r8d,BYTE PTR [rdi]
  409674:	lea    rdx,[rip+0x17e67]        # 0x4214e2
  40967b:	mov    rcx,rbp
  40967e:	add    rdi,0x1
  409682:	call   0x412478
  409687:	cmp    rdi,r12
  40968a:	jne    0x409670
  40968c:	mov    rax,QWORD PTR [rsi]
  40968f:	mov    r9,QWORD PTR [rsp+0x50]
  409694:	lea    r8,[rip+0x17e05]        # 0x4214a0
  40969b:	mov    edx,0x10
  4096a0:	mov    rcx,rsi
  4096a3:	mov    rax,QWORD PTR [rax+0x28b8]
  4096aa:	mov    QWORD PTR [rsp+0x20],rax
  4096af:	call   0x412308
  4096b4:	mov    eax,ebx
  4096b6:	jmp    0x4096cd
  4096b8:	mov    eax,0xfffffff4
  4096bd:	mov    rcx,rsi
  4096c0:	mov    DWORD PTR [rsp+0x3c],eax
  4096c4:	call   0x4092d0
  4096c9:	mov    eax,DWORD PTR [rsp+0x3c]
  4096cd:	add    rsp,0x458
  4096d4:	pop    rbx
  4096d5:	pop    rsi
  4096d6:	pop    rdi
  4096d7:	pop    rbp
  4096d8:	pop    r12
  4096da:	pop    r13
  4096dc:	ret    
  4096dd:	xor    ebx,ebx
  4096df:	jmp    0x4096e4
  4096e1:	mov    r9,QWORD PTR [rsi]
  4096e4:	movsxd rax,ebx
  4096e7:	mov    r8d,0xffffffff
  4096ed:	mov    edx,0x1
  4096f2:	shl    rax,0xa
  4096f6:	add    ebx,0x1
  4096f9:	lea    rcx,[r9+rax*1+0xa8]
  409701:	call   0x412480
  409706:	cmp    ebx,0xa
  409709:	jne    0x4096e1
  40970b:	mov    rcx,QWORD PTR [rsi]
  40970e:	mov    rax,QWORD PTR [rcx+0x8]
  409712:	mov    rax,QWORD PTR [rax+0x18]
  409716:	test   rax,rax
  409719:	je     0x409721
  40971b:	call   rax
  40971d:	test   eax,eax
  40971f:	js     0x4096bd
  409721:	xor    eax,eax
  409723:	jmp    0x4096cd
  409725:	mov    rdx,QWORD PTR [rbx+0x8]
  409729:	mov    rcx,QWORD PTR [rsi]
  40972c:	lea    r8,[rip+0x17d1d]        # 0x421450
  409733:	mov    DWORD PTR [rsp+0x3c],eax
  409737:	mov    QWORD PTR [rsp+0x20],rdx
  40973c:	mov    r9,QWORD PTR [rbx]
  40973f:	mov    edx,0x10
  409744:	call   0x412308
  409749:	mov    rcx,rbp
  40974c:	call   0x412440
  409751:	mov    eax,DWORD PTR [rsp+0x3c]
  409755:	jmp    0x4096bd
  40975a:	mov    rcx,QWORD PTR [rsi]
  40975d:	lea    r8,[rip+0x17cac]        # 0x421410
  409764:	mov    r9,r12
  409767:	mov    edx,0x10
  40976c:	mov    DWORD PTR [rsp+0x3c],eax
  409770:	call   0x412308
  409775:	mov    rcx,rbp
  409778:	call   0x412440
  40977d:	mov    eax,DWORD PTR [rsp+0x3c]
  409781:	jmp    0x4096bd
  409786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409790:	push   rbp
  409791:	push   rdi
  409792:	push   rsi
  409793:	push   rbx
  409794:	sub    rsp,0x58
  409798:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40979d:	lea    rax,[rip+0x1b8aa]        # 0x42504e
  4097a4:	mov    rdi,rcx
  4097a7:	mov    rbx,QWORD PTR [rdx+0x8]
  4097ab:	mov    r8,QWORD PTR [rdx]
  4097ae:	cmp    rbx,rax
  4097b1:	mov    r9,r8
  4097b4:	je     0x409904
  4097ba:	pxor   xmm6,xmm6
  4097be:	lea    rsi,[rip+0x176fe]        # 0x420ec3
  4097c5:	cvtsi2sd xmm6,r8
  4097ca:	mov    r8d,DWORD PTR [rip+0x1fb67]        # 0x429338
  4097d1:	test   r8d,r8d
  4097d4:	je     0x4098a0
  4097da:	ucomisd xmm6,QWORD PTR [rip+0x1bac6]        # 0x4252a8
  4097e2:	jbe    0x409950
  4097e8:	lea    rax,[rip+0x1b857]        # 0x425046
  4097ef:	xor    ebp,ebp
  4097f1:	cmp    rbx,rax
  4097f4:	je     0x409961
  4097fa:	movapd xmm0,xmm6
  4097fe:	call   0x419890
  409803:	cvttsd2si rcx,xmm0
  409808:	movabs rdx,0x5555555555555556
  409812:	pxor   xmm1,xmm1
  409816:	movsd  xmm0,QWORD PTR [rip+0x1ba82]        # 0x4252a0
  40981e:	mov    rax,rcx
  409821:	sar    rcx,0x3f
  409825:	imul   rdx
  409828:	mov    eax,0x5
  40982d:	sub    rdx,rcx
  409830:	cmp    edx,0x5
  409833:	cmovg  edx,eax
  409836:	mov    al,0x0
  409838:	test   edx,edx
  40983a:	cmovs  edx,eax
  40983d:	movsxd rsi,edx
  409840:	lea    rax,[rsi+rsi*2]
  409844:	cvtsi2sd xmm1,rax
  409849:	call   0x414120
  40984e:	divsd  xmm6,xmm0
  409852:	lea    rax,[rip+0x1b807]        # 0x425060
  409859:	mov    rsi,QWORD PTR [rax+rsi*8]
  40985d:	cvttsd2si rax,xmm6
  409862:	test   ebp,ebp
  409864:	mov    r9,rax
  409867:	jne    0x40987a
  409869:	pxor   xmm0,xmm0
  40986d:	cvtsi2sd xmm0,rax
  409872:	ucomisd xmm6,xmm0
  409876:	jp     0x40987a
  409878:	je     0x4098a0
  40987a:	movapd xmm3,xmm6
  40987e:	movq   r9,xmm6
  409883:	lea    r8,[rip+0x17c6c]        # 0x4214f6
  40988a:	mov    edx,0x80
  40988f:	mov    rcx,rdi
  409892:	call   0x409180
  409897:	jmp    0x4098b4
  409899:	nop    DWORD PTR [rax+0x0]
  4098a0:	lea    r8,[rip+0x17761]        # 0x421008
  4098a7:	mov    edx,0x80
  4098ac:	mov    rcx,rdi
  4098af:	call   0x409180
  4098b4:	mov    edx,DWORD PTR [rip+0x1fa82]        # 0x42933c
  4098ba:	lea    r9,[rip+0x175e7]        # 0x420ea8
  4098c1:	test   edx,edx
  4098c3:	jne    0x4098d4
  4098c5:	cmp    BYTE PTR [rsi],0x0
  4098c8:	lea    rbx,[rip+0x175f4]        # 0x420ec3
  4098cf:	jne    0x4098d4
  4098d1:	mov    r9,rbx
  4098d4:	lea    r8,[rip+0x17c1e]        # 0x4214f9
  4098db:	mov    QWORD PTR [rsp+0x28],rbx
  4098e0:	mov    QWORD PTR [rsp+0x20],rsi
  4098e5:	mov    edx,0x80
  4098ea:	mov    rcx,rdi
  4098ed:	call   0x412208
  4098f2:	nop
  4098f3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4098f8:	mov    rax,rdi
  4098fb:	add    rsp,0x58
  4098ff:	pop    rbx
  409900:	pop    rsi
  409901:	pop    rdi
  409902:	pop    rbp
  409903:	ret    
  409904:	mov    r9d,DWORD PTR [rip+0x1fa25]        # 0x429330
  40990b:	mov    QWORD PTR [rsp+0x38],r8
  409910:	movsd  xmm6,QWORD PTR [rsp+0x38]
  409916:	test   r9d,r9d
  409919:	jne    0x4099d4
  40991f:	mov    eax,DWORD PTR [rip+0x1fa13]        # 0x429338
  409925:	test   eax,eax
  409927:	je     0x40993c
  409929:	ucomisd xmm6,QWORD PTR [rip+0x1b977]        # 0x4252a8
  409931:	mov    ebp,0x1
  409936:	ja     0x4097fa
  40993c:	lea    rsi,[rip+0x17580]        # 0x420ec3
  409943:	jmp    0x40987a
  409948:	nop    DWORD PTR [rax+rax*1+0x0]
  409950:	lea    rsi,[rip+0x1756c]        # 0x420ec3
  409957:	cvttsd2si rax,xmm6
  40995c:	jmp    0x409869
  409961:	mov    ecx,DWORD PTR [rip+0x1f9cd]        # 0x429334
  409967:	test   ecx,ecx
  409969:	je     0x4097fa
  40996f:	movapd xmm0,xmm6
  409973:	call   0x414020
  409978:	cvttsd2si rcx,xmm0
  40997d:	movabs rdx,0x6666666666666667
  409987:	pxor   xmm0,xmm0
  40998b:	mov    rax,rcx
  40998e:	sar    rcx,0x3f
  409992:	imul   rdx
  409995:	mov    eax,0x5
  40999a:	sar    rdx,0x2
  40999e:	sub    rdx,rcx
  4099a1:	cmp    edx,0x5
  4099a4:	cmovle eax,edx
  4099a7:	test   eax,eax
  4099a9:	cmovs  eax,ebp
  4099ac:	movsxd rsi,eax
  4099af:	lea    rax,[rsi+rsi*4]
  4099b3:	add    rax,rax
  4099b6:	cvtsi2sd xmm0,rax
  4099bb:	call   0x413fa0
  4099c0:	lea    rax,[rip+0x1b6d9]        # 0x4250a0
  4099c7:	divsd  xmm6,xmm0
  4099cb:	mov    rsi,QWORD PTR [rax+rsi*8]
  4099cf:	jmp    0x40985d
  4099d4:	cvttsd2si r9d,xmm6
  4099d9:	mov    r8d,0x88888889
  4099df:	pxor   xmm0,xmm0
  4099e3:	mov    eax,r9d
  4099e6:	imul   r8d
  4099e9:	lea    ecx,[rdx+r9*1]
  4099ed:	sar    r9d,0x1f
  4099f1:	sar    ecx,0x5
  4099f4:	sub    ecx,r9d
  4099f7:	mov    eax,ecx
  4099f9:	imul   r8d
  4099fc:	mov    eax,ecx
  4099fe:	lea    r8,[rip+0x17ae2]        # 0x4214e7
  409a05:	sar    eax,0x1f
  409a08:	lea    r9d,[rdx+rcx*1]
  409a0c:	mov    edx,0x80
  409a11:	sar    r9d,0x5
  409a15:	sub    r9d,eax
  409a18:	imul   eax,ecx,0x3c
  409a1b:	cvtsi2sd xmm0,eax
  409a1f:	imul   eax,r9d,0x3c
  409a23:	sub    ecx,eax
  409a25:	mov    DWORD PTR [rsp+0x20],ecx
  409a29:	mov    rcx,rdi
  409a2c:	subsd  xmm6,xmm0
  409a30:	movsd  QWORD PTR [rsp+0x28],xmm6
  409a36:	call   0x409180
  409a3b:	jmp    0x4098f3
  409a40:	push   r15
  409a42:	push   r14
  409a44:	push   r13
  409a46:	push   r12
  409a48:	push   rbp
  409a49:	push   rdi
  409a4a:	push   rsi
  409a4b:	push   rbx
  409a4c:	sub    rsp,0x48
  409a50:	lea    rdi,[rip+0x13729]        # 0x41d180
  409a57:	movsxd rax,ecx
  409a5a:	mov    rsi,r8
  409a5d:	lea    rax,[rax+rax*2]
  409a61:	shl    rax,0x5
  409a65:	test   edx,edx
  409a67:	mov    DWORD PTR [rdi+rax*1+0x58],edx
  409a6b:	je     0x409c5e
  409a71:	lea    rax,[rdi+rax*1+0x10]
  409a76:	mov    ebx,edx
  409a78:	lea    rdx,[rax+0x4]
  409a7c:	movsxd rax,DWORD PTR [rax+0x4]
  409a80:	mov    QWORD PTR [rsp+0x20],rdx
  409a85:	cmp    eax,0xffffffff
  409a88:	je     0x409c4d
  409a8e:	lea    rax,[rax+rax*2]
  409a92:	shl    rax,0x5
  409a96:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409a9a:	lea    rax,[rdi+rax*1+0x10]
  409a9f:	lea    rdx,[rax+0x4]
  409aa3:	movsxd rax,DWORD PTR [rax+0x4]
  409aa7:	mov    QWORD PTR [rsp+0x28],rdx
  409aac:	cmp    eax,0xffffffff
  409aaf:	je     0x409c36
  409ab5:	lea    rax,[rax+rax*2]
  409ab9:	shl    rax,0x5
  409abd:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409ac1:	lea    rax,[rdi+rax*1+0x10]
  409ac6:	lea    rdx,[rax+0x4]
  409aca:	movsxd rax,DWORD PTR [rax+0x4]
  409ace:	mov    QWORD PTR [rsp+0x30],rdx
  409ad3:	cmp    eax,0xffffffff
  409ad6:	je     0x409c1f
  409adc:	lea    rax,[rax+rax*2]
  409ae0:	shl    rax,0x5
  409ae4:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409ae8:	lea    rax,[rdi+rax*1+0x10]
  409aed:	lea    rdx,[rax+0x4]
  409af1:	movsxd rax,DWORD PTR [rax+0x4]
  409af5:	mov    QWORD PTR [rsp+0x38],rdx
  409afa:	cmp    eax,0xffffffff
  409afd:	je     0x409c08
  409b03:	lea    rax,[rax+rax*2]
  409b07:	shl    rax,0x5
  409b0b:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b0f:	lea    rax,[rdi+rax*1+0x10]
  409b14:	lea    r14,[rax+0x4]
  409b18:	movsxd rax,DWORD PTR [rax+0x4]
  409b1c:	cmp    eax,0xffffffff
  409b1f:	je     0x409bf1
  409b25:	lea    rax,[rax+rax*2]
  409b29:	shl    rax,0x5
  409b2d:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b31:	lea    rax,[rdi+rax*1+0x10]
  409b36:	lea    r15,[rax+0x4]
  409b3a:	movsxd rax,DWORD PTR [rax+0x4]
  409b3e:	cmp    eax,0xffffffff
  409b41:	je     0x409be1
  409b47:	lea    rax,[rax+rax*2]
  409b4b:	shl    rax,0x5
  409b4f:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b53:	lea    rax,[rdi+rax*1+0x10]
  409b58:	lea    r12,[rax+0x4]
  409b5c:	movsxd rax,DWORD PTR [rax+0x4]
  409b60:	cmp    eax,0xffffffff
  409b63:	je     0x409bd1
  409b65:	lea    rax,[rax+rax*2]
  409b69:	shl    rax,0x5
  409b6d:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b71:	lea    rax,[rdi+rax*1+0x10]
  409b76:	lea    rbp,[rax+0x4]
  409b7a:	movsxd rax,DWORD PTR [rax+0x4]
  409b7e:	cmp    eax,0xffffffff
  409b81:	je     0x409bc4
  409b83:	lea    rax,[rax+rax*2]
  409b87:	shl    rax,0x5
  409b8b:	lea    rdx,[rdi+rax*1+0x10]
  409b90:	mov    DWORD PTR [rdi+rax*1+0x58],ebx
  409b94:	mov    ecx,DWORD PTR [rdx+0x4]
  409b97:	lea    r13,[rdx+0x4]
  409b9b:	cmp    ecx,0xffffffff
  409b9e:	je     0x409bb7
  409ba0:	add    r13,0x4
  409ba4:	mov    r8,rsi
  409ba7:	mov    edx,ebx
  409ba9:	call   0x409a40
  409bae:	mov    ecx,DWORD PTR [r13+0x0]
  409bb2:	cmp    ecx,0xffffffff
  409bb5:	jne    0x409ba0
  409bb7:	add    rbp,0x4
  409bbb:	movsxd rax,DWORD PTR [rbp+0x0]
  409bbf:	cmp    eax,0xffffffff
  409bc2:	jne    0x409b83
  409bc4:	add    r12,0x4
  409bc8:	movsxd rax,DWORD PTR [r12]
  409bcc:	cmp    eax,0xffffffff
  409bcf:	jne    0x409b65
  409bd1:	add    r15,0x4
  409bd5:	movsxd rax,DWORD PTR [r15]
  409bd8:	cmp    eax,0xffffffff
  409bdb:	jne    0x409b47
  409be1:	add    r14,0x4
  409be5:	movsxd rax,DWORD PTR [r14]
  409be8:	cmp    eax,0xffffffff
  409beb:	jne    0x409b25
  409bf1:	add    QWORD PTR [rsp+0x38],0x4
  409bf7:	mov    rax,QWORD PTR [rsp+0x38]
  409bfc:	movsxd rax,DWORD PTR [rax]
  409bff:	cmp    eax,0xffffffff
  409c02:	jne    0x409b03
  409c08:	add    QWORD PTR [rsp+0x30],0x4
  409c0e:	mov    rax,QWORD PTR [rsp+0x30]
  409c13:	movsxd rax,DWORD PTR [rax]
  409c16:	cmp    eax,0xffffffff
  409c19:	jne    0x409adc
  409c1f:	add    QWORD PTR [rsp+0x28],0x4
  409c25:	mov    rax,QWORD PTR [rsp+0x28]
  409c2a:	movsxd rax,DWORD PTR [rax]
  409c2d:	cmp    eax,0xffffffff
  409c30:	jne    0x409ab5
  409c36:	add    QWORD PTR [rsp+0x20],0x4
  409c3c:	mov    rax,QWORD PTR [rsp+0x20]
  409c41:	movsxd rax,DWORD PTR [rax]
  409c44:	cmp    eax,0xffffffff
  409c47:	jne    0x409a8e
  409c4d:	add    rsp,0x48
  409c51:	pop    rbx
  409c52:	pop    rsi
  409c53:	pop    rdi
  409c54:	pop    rbp
  409c55:	pop    r12
  409c57:	pop    r13
  409c59:	pop    r14
  409c5b:	pop    r15
  409c5d:	ret    
  409c5e:	lea    rcx,[rdi+rax*1+0x50]
  409c63:	xor    r8d,r8d
  409c66:	mov    rdx,rsi
  409c69:	add    rsp,0x48
  409c6d:	pop    rbx
  409c6e:	pop    rsi
  409c6f:	pop    rdi
  409c70:	pop    rbp
  409c71:	pop    r12
  409c73:	pop    r13
  409c75:	pop    r14
  409c77:	pop    r15
  409c79:	jmp    0x412448
  409c7e:	xchg   ax,ax
  409c80:	push   rdi
  409c81:	push   rsi
  409c82:	push   rbx
  409c83:	sub    rsp,0x70
  409c87:	mov    r9d,DWORD PTR [rcx]
  409c8a:	lea    r8,[rip+0x17871]        # 0x421502
  409c91:	mov    rbx,rcx
  409c94:	xor    ecx,ecx
  409c96:	mov    esi,edx
  409c98:	call   0x412308
  409c9d:	mov    r9d,DWORD PTR [rbx+0x18]
  409ca1:	test   r9d,r9d
  409ca4:	je     0x409d62
  409caa:	mov    rax,QWORD PTR [rbx+0x8]
  409cae:	movabs rdx,0x8000000000000000
  409cb8:	mov    QWORD PTR [rsp+0x50],0x0
  409cc1:	mov    QWORD PTR [rsp+0x58],0x0
  409cca:	mov    QWORD PTR [rsp+0x60],0x0
  409cd3:	mov    QWORD PTR [rsp+0x68],0x0
  409cdc:	cmp    rax,rdx
  409cdf:	je     0x409e60
  409ce5:	pxor   xmm0,xmm0
  409ce9:	lea    rdi,[rsp+0x50]
  409cee:	lea    r8,[rip+0x17819]        # 0x42150e
  409cf5:	mov    edx,0x20
  409cfa:	mov    rcx,rdi
  409cfd:	cvtsi2sd xmm0,rax
  409d02:	mulsd  xmm0,QWORD PTR [rip+0x1b5a6]        # 0x4252b0
  409d0a:	movapd xmm3,xmm0
  409d0e:	movq   r9,xmm0
  409d13:	call   0x409180
  409d18:	mov    r8d,DWORD PTR [rbx+0x20]
  409d1c:	lea    rax,[rip+0x171a0]        # 0x420ec3
  409d23:	lea    r9,[rip+0x177d6]        # 0x421500
  409d2a:	mov    QWORD PTR [rsp+0x20],rdi
  409d2f:	mov    edx,esi
  409d31:	test   r8d,r8d
  409d34:	lea    r8,[rip+0x177d8]        # 0x421513
  409d3b:	cmove  r9,rax
  409d3f:	xor    ecx,ecx
  409d41:	call   0x412308
  409d46:	mov    ecx,DWORD PTR [rbx+0x1c]
  409d49:	test   ecx,ecx
  409d4b:	jne    0x409d79
  409d4d:	lea    r8,[rip+0x177e4]        # 0x421538
  409d54:	mov    edx,esi
  409d56:	xor    ecx,ecx
  409d58:	call   0x412308
  409d5d:	jmp    0x409e2c
  409d62:	lea    r8,[rip+0x177b6]        # 0x42151f
  409d69:	xor    ecx,ecx
  409d6b:	mov    edx,esi
  409d6d:	call   0x412308
  409d72:	mov    ecx,DWORD PTR [rbx+0x1c]
  409d75:	test   ecx,ecx
  409d77:	je     0x409d4d
  409d79:	mov    eax,DWORD PTR [rbx+0x24]
  409d7c:	lea    r9,[rip+0x1777d]        # 0x421500
  409d83:	lea    r8,[rip+0x177a0]        # 0x42152a
  409d8a:	mov    edx,esi
  409d8c:	test   eax,eax
  409d8e:	lea    rax,[rip+0x1712e]        # 0x420ec3
  409d95:	cmove  r9,rax
  409d99:	xor    ecx,ecx
  409d9b:	call   0x412308
  409da0:	mov    edx,DWORD PTR [rbx+0x28]
  409da3:	test   edx,edx
  409da5:	jne    0x409e45
  409dab:	mov    rax,QWORD PTR [rbx+0x10]
  409daf:	movabs rdx,0x8000000000000000
  409db9:	mov    QWORD PTR [rsp+0x30],0x0
  409dc2:	mov    QWORD PTR [rsp+0x38],0x0
  409dcb:	mov    QWORD PTR [rsp+0x40],0x0
  409dd4:	mov    QWORD PTR [rsp+0x48],0x0
  409ddd:	cmp    rax,rdx
  409de0:	je     0x409e80
  409de6:	pxor   xmm0,xmm0
  409dea:	lea    rbx,[rsp+0x30]
  409def:	lea    r8,[rip+0x17718]        # 0x42150e
  409df6:	mov    edx,0x20
  409dfb:	mov    rcx,rbx
  409dfe:	cvtsi2sd xmm0,rax
  409e03:	mulsd  xmm0,QWORD PTR [rip+0x1b4a5]        # 0x4252b0
  409e0b:	movapd xmm3,xmm0
  409e0f:	movq   r9,xmm0
  409e14:	call   0x409180
  409e19:	lea    r8,[rip+0x171c6]        # 0x420fe6
  409e20:	mov    r9,rbx
  409e23:	mov    edx,esi
  409e25:	xor    ecx,ecx
  409e27:	call   0x412308
  409e2c:	lea    r8,[rip+0x17077]        # 0x420eaa
  409e33:	mov    edx,esi
  409e35:	xor    ecx,ecx
  409e37:	call   0x412308
  409e3c:	nop
  409e3d:	add    rsp,0x70
  409e41:	pop    rbx
  409e42:	pop    rsi
  409e43:	pop    rdi
  409e44:	ret    
  409e45:	mov    r9,QWORD PTR [rbx+0x10]
  409e49:	lea    r8,[rip+0x176e2]        # 0x421532
  409e50:	mov    edx,esi
  409e52:	xor    ecx,ecx
  409e54:	call   0x412308
  409e59:	jmp    0x409e2c
  409e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  409e60:	lea    rdi,[rsp+0x50]
  409e65:	lea    r8,[rip+0x1769c]        # 0x421508
  409e6c:	mov    edx,0x20
  409e71:	mov    rcx,rdi
  409e74:	call   0x409180
  409e79:	jmp    0x409d18
  409e7e:	xchg   ax,ax
  409e80:	lea    rbx,[rsp+0x30]
  409e85:	lea    r8,[rip+0x1767c]        # 0x421508
  409e8c:	mov    edx,0x20
  409e91:	mov    rcx,rbx
  409e94:	call   0x409180
  409e99:	jmp    0x409e19
  409e9e:	xchg   ax,ax
  409ea0:	push   r15
  409ea2:	push   r14
  409ea4:	push   r13
  409ea6:	push   r12
  409ea8:	push   rbp
  409ea9:	push   rdi
  409eaa:	push   rsi
  409eab:	push   rbx
  409eac:	sub    rsp,0x68
  409eb0:	mov    rcx,r8
  409eb3:	call   0x412220
  409eb8:	test   rax,rax
  409ebb:	mov    QWORD PTR [rsp+0x48],rax
  409ec0:	mov    rdx,rax
  409ec3:	je     0x40a24c
  409ec9:	movzx  eax,BYTE PTR [rax]
  409ecc:	test   al,al
  409ece:	je     0x40a23d
  409ed4:	xor    ecx,ecx
  409ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ee0:	cmp    al,0x2c
  409ee2:	sete   al
  409ee5:	add    rdx,0x1
  409ee9:	movzx  eax,al
  409eec:	add    ecx,eax
  409eee:	movzx  eax,BYTE PTR [rdx]
  409ef1:	test   al,al
  409ef3:	jne    0x409ee0
  409ef5:	lea    ebx,[rcx+0x1]
  409ef8:	cmp    ebx,0x2aaaaa9
  409efe:	jle    0x409f30
  409f00:	mov    QWORD PTR [rip+0x1f405],0x0        # 0x429310
  409f0b:	mov    r13d,0xfffffff4
  409f11:	mov    rcx,QWORD PTR [rsp+0x48]
  409f16:	call   0x4123c0
  409f1b:	mov    eax,r13d
  409f1e:	add    rsp,0x68
  409f22:	pop    rbx
  409f23:	pop    rsi
  409f24:	pop    rdi
  409f25:	pop    rbp
  409f26:	pop    r12
  409f28:	pop    r13
  409f2a:	pop    r14
  409f2c:	pop    r15
  409f2e:	ret    
  409f2f:	nop
  409f30:	movsxd rax,ebx
  409f33:	lea    rcx,[rax+rax*2]
  409f37:	shl    rcx,0x4
  409f3b:	call   0x4122c8
  409f40:	test   rax,rax
  409f43:	mov    QWORD PTR [rip+0x1f3c6],rax        # 0x429310
  409f4a:	je     0x40a286
  409f50:	lea    rax,[rsp+0x58]
  409f55:	mov    DWORD PTR [rip+0x1f3ad],ebx        # 0x429308
  409f5b:	mov    rbp,QWORD PTR [rsp+0x48]
  409f60:	xor    esi,esi
  409f62:	xor    edi,edi
  409f64:	mov    QWORD PTR [rsp+0x40],rax
  409f69:	jmp    0x40a045
  409f6e:	xchg   ax,ax
  409f70:	mov    edx,0x25
  409f75:	mov    rcx,rax
  409f78:	call   0x419860
  409f7d:	test   rax,rax
  409f80:	je     0x40a0e0
  409f86:	mov    BYTE PTR [rax],0x0
  409f89:	movzx  r13d,BYTE PTR [r15]
  409f8d:	lea    r14,[rax+0x1]
  409f91:	test   r13b,r13b
  409f94:	jne    0x40a0e3
  409f9a:	mov    DWORD PTR [rbx+0x18],0x0
  409fa1:	xor    r13d,r13d
  409fa4:	test   r14,r14
  409fa7:	je     0x40a0d0
  409fad:	movzx  eax,BYTE PTR [r14]
  409fb1:	test   al,al
  409fb3:	je     0x40a0d0
  409fb9:	cmp    al,0x2b
  409fbb:	mov    DWORD PTR [rbx+0x1c],0x1
  409fc2:	je     0x40a165
  409fc8:	mov    DWORD PTR [rbx+0x24],0x0
  409fcf:	mov    rcx,QWORD PTR [rsp+0x40]
  409fd4:	mov    r8d,0x1
  409fda:	mov    rdx,r14
  409fdd:	call   0x412258
  409fe2:	mov    r13d,eax
  409fe5:	mov    rax,QWORD PTR [rsp+0x58]
  409fea:	test   r13d,r13d
  409fed:	js     0x40a180
  409ff3:	mov    QWORD PTR [rbx+0x10],rax
  409ff7:	mov    rcx,r15
  409ffa:	call   0x4123c0
  409fff:	lea    r8,[rip+0x17648]        # 0x42164e
  40a006:	xor    ecx,ecx
  40a008:	mov    edx,0x28
  40a00d:	add    esi,0x1
  40a010:	call   0x412308
  40a015:	mov    rcx,rdi
  40a018:	add    rcx,QWORD PTR [rip+0x1f2f1]        # 0x429310
  40a01f:	mov    edx,0x28
  40a024:	add    rdi,0x30
  40a028:	call   0x409c80
  40a02d:	test   r12,r12
  40a030:	je     0x40a1b0
  40a036:	cmp    esi,DWORD PTR [rip+0x1f2cc]        # 0x429308
  40a03c:	jge    0x40a256
  40a042:	mov    rbp,r12
  40a045:	mov    edx,0x2c
  40a04a:	mov    rcx,rbp
  40a04d:	call   0x419860
  40a052:	test   rax,rax
  40a055:	je     0x40a140
  40a05b:	lea    r12,[rax+0x1]
  40a05f:	mov    BYTE PTR [rax],0x0
  40a062:	mov    rbx,rdi
  40a065:	add    rbx,QWORD PTR [rip+0x1f2a4]        # 0x429310
  40a06c:	mov    rcx,rbp
  40a06f:	mov    DWORD PTR [rbx],esi
  40a071:	call   0x412220
  40a076:	test   rax,rax
  40a079:	mov    r15,rax
  40a07c:	je     0x40a232
  40a082:	movzx  r13d,BYTE PTR [rax]
  40a086:	test   r13b,r13b
  40a089:	jne    0x409f70
  40a08f:	lea    r8,[rip+0x174c2]        # 0x421558
  40a096:	mov    edx,0x10
  40a09b:	xor    ecx,ecx
  40a09d:	mov    r13d,0xffffffea
  40a0a3:	call   0x412308
  40a0a8:	mov    rcx,r15
  40a0ab:	call   0x4123c0
  40a0b0:	lea    r8,[rip+0x17571]        # 0x421628
  40a0b7:	mov    QWORD PTR [rsp+0x20],rbp
  40a0bc:	mov    r9d,esi
  40a0bf:	mov    edx,0x10
  40a0c4:	xor    ecx,ecx
  40a0c6:	call   0x412308
  40a0cb:	jmp    0x409f11
  40a0d0:	mov    DWORD PTR [rbx+0x1c],0x0
  40a0d7:	jmp    0x409ff7
  40a0dc:	nop    DWORD PTR [rax+0x0]
  40a0e0:	xor    r14d,r14d
  40a0e3:	cmp    r13b,0x2b
  40a0e7:	mov    DWORD PTR [rbx+0x18],0x1
  40a0ee:	je     0x40a150
  40a0f0:	mov    DWORD PTR [rbx+0x20],0x0
  40a0f7:	mov    QWORD PTR [rsp+0x38],r15
  40a0fc:	mov    rdx,r15
  40a0ff:	lea    rcx,[rbx+0x8]
  40a103:	mov    r8d,0x1
  40a109:	call   0x412258
  40a10e:	test   eax,eax
  40a110:	mov    r13d,eax
  40a113:	jns    0x409fa4
  40a119:	mov    r9,QWORD PTR [rsp+0x38]
  40a11e:	lea    r8,[rip+0x1745b]        # 0x421580
  40a125:	mov    edx,0x10
  40a12a:	xor    ecx,ecx
  40a12c:	call   0x412308
  40a131:	jmp    0x40a0a8
  40a136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a140:	xor    r12d,r12d
  40a143:	jmp    0x40a062
  40a148:	nop    DWORD PTR [rax+rax*1+0x0]
  40a150:	lea    rax,[r15+0x1]
  40a154:	mov    DWORD PTR [rbx+0x20],0x1
  40a15b:	mov    QWORD PTR [rsp+0x38],rax
  40a160:	mov    rdx,rax
  40a163:	jmp    0x40a0ff
  40a165:	mov    DWORD PTR [rbx+0x24],0x1
  40a16c:	cmp    BYTE PTR [r14+0x1],0x23
  40a171:	lea    rax,[r14+0x1]
  40a175:	je     0x40a1e0
  40a177:	mov    r14,rax
  40a17a:	jmp    0x409fcf
  40a17f:	nop
  40a180:	lea    r8,[rip+0x17469]        # 0x4215f0
  40a187:	mov    r9,r14
  40a18a:	mov    edx,0x10
  40a18f:	xor    ecx,ecx
  40a191:	call   0x412308
  40a196:	mov    rcx,r15
  40a199:	call   0x4123c0
  40a19e:	test   r13d,r13d
  40a1a1:	jns    0x409fff
  40a1a7:	jmp    0x40a0b0
  40a1ac:	nop    DWORD PTR [rax+0x0]
  40a1b0:	cmp    DWORD PTR [rip+0x1f152],esi        # 0x429308
  40a1b6:	je     0x409f11
  40a1bc:	lea    rax,[rip+0x17224]        # 0x4213e7
  40a1c3:	mov    DWORD PTR [rsp+0x28],0xbb9
  40a1cb:	lea    r9,[rip+0x17491]        # 0x421663
  40a1d2:	mov    QWORD PTR [rsp+0x20],rax
  40a1d7:	jmp    0x40a271
  40a1dc:	nop    DWORD PTR [rax+0x0]
  40a1e0:	mov    rdx,QWORD PTR [rsp+0x40]
  40a1e5:	add    r14,0x2
  40a1e9:	mov    DWORD PTR [rbx+0x28],0x1
  40a1f0:	mov    r8d,0xa
  40a1f6:	mov    rcx,r14
  40a1f9:	call   0x413c70
  40a1fe:	mov    rdx,rax
  40a201:	shr    rdx,0x3f
  40a205:	test   dl,dl
  40a207:	jne    0x40a217
  40a209:	mov    rdx,QWORD PTR [rsp+0x58]
  40a20e:	cmp    BYTE PTR [rdx],0x0
  40a211:	je     0x409ff3
  40a217:	lea    r8,[rip+0x17392]        # 0x4215b0
  40a21e:	mov    r9,r14
  40a221:	mov    edx,0x10
  40a226:	xor    ecx,ecx
  40a228:	call   0x412308
  40a22d:	jmp    0x40a196
  40a232:	mov    r13d,0xfffffff4
  40a238:	jmp    0x40a0b0
  40a23d:	mov    ecx,0x30
  40a242:	mov    ebx,0x1
  40a247:	jmp    0x409f3b
  40a24c:	mov    eax,0xfffffff4
  40a251:	jmp    0x409f1e
  40a256:	lea    rax,[rip+0x1718a]        # 0x4213e7
  40a25d:	lea    r9,[rip+0x172dd]        # 0x421541
  40a264:	mov    DWORD PTR [rsp+0x28],0xba9
  40a26c:	mov    QWORD PTR [rsp+0x20],rax
  40a271:	lea    r8,[rip+0x17151]        # 0x4213c9
  40a278:	xor    edx,edx
  40a27a:	xor    ecx,ecx
  40a27c:	call   0x412308
  40a281:	call   0x419910
  40a286:	mov    r13d,0xfffffff4
  40a28c:	jmp    0x409f11
  40a291:	nop    DWORD PTR [rax+rax*1+0x0]
  40a296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2a0:	push   r15
  40a2a2:	push   r14
  40a2a4:	push   r13
  40a2a6:	push   r12
  40a2a8:	push   rbp
  40a2a9:	push   rdi
  40a2aa:	push   rsi
  40a2ab:	push   rbx
  40a2ac:	sub    rsp,0x38
  40a2b0:	lea    rsi,[rip+0x12ec9]        # 0x41d180
  40a2b7:	movsxd rax,ecx
  40a2ba:	lea    rax,[rax+rax*2]
  40a2be:	shl    rax,0x5
  40a2c2:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a2ca:	lea    rax,[rsi+rax*1+0x10]
  40a2cf:	lea    rdi,[rax+0x4]
  40a2d3:	movsxd rax,DWORD PTR [rax+0x4]
  40a2d7:	mov    QWORD PTR [rsp+0x20],rdi
  40a2dc:	cmp    eax,0xffffffff
  40a2df:	je     0x40a4aa
  40a2e5:	lea    rax,[rax+rax*2]
  40a2e9:	shl    rax,0x5
  40a2ed:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a2f5:	lea    rax,[rsi+rax*1+0x10]
  40a2fa:	lea    rdi,[rax+0x4]
  40a2fe:	movsxd rax,DWORD PTR [rax+0x4]
  40a302:	mov    QWORD PTR [rsp+0x28],rdi
  40a307:	cmp    eax,0xffffffff
  40a30a:	je     0x40a493
  40a310:	lea    rax,[rax+rax*2]
  40a314:	shl    rax,0x5
  40a318:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a320:	lea    rax,[rsi+rax*1+0x10]
  40a325:	lea    r12,[rax+0x4]
  40a329:	movsxd rax,DWORD PTR [rax+0x4]
  40a32d:	cmp    eax,0xffffffff
  40a330:	je     0x40a47c
  40a336:	lea    rax,[rax+rax*2]
  40a33a:	shl    rax,0x5
  40a33e:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a346:	lea    rax,[rsi+rax*1+0x10]
  40a34b:	lea    r13,[rax+0x4]
  40a34f:	movsxd rax,DWORD PTR [rax+0x4]
  40a353:	cmp    eax,0xffffffff
  40a356:	je     0x40a46b
  40a35c:	lea    rax,[rax+rax*2]
  40a360:	shl    rax,0x5
  40a364:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a36c:	lea    rax,[rsi+rax*1+0x10]
  40a371:	lea    r14,[rax+0x4]
  40a375:	movsxd rax,DWORD PTR [rax+0x4]
  40a379:	cmp    eax,0xffffffff
  40a37c:	je     0x40a45a
  40a382:	lea    rax,[rax+rax*2]
  40a386:	shl    rax,0x5
  40a38a:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a392:	lea    rax,[rsi+rax*1+0x10]
  40a397:	lea    r15,[rax+0x4]
  40a39b:	movsxd rax,DWORD PTR [rax+0x4]
  40a39f:	cmp    eax,0xffffffff
  40a3a2:	je     0x40a44a
  40a3a8:	lea    rax,[rax+rax*2]
  40a3ac:	shl    rax,0x5
  40a3b0:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a3b8:	lea    rax,[rsi+rax*1+0x10]
  40a3bd:	lea    rdi,[rax+0x4]
  40a3c1:	movsxd rax,DWORD PTR [rax+0x4]
  40a3c5:	cmp    eax,0xffffffff
  40a3c8:	je     0x40a43a
  40a3ca:	lea    rax,[rax+rax*2]
  40a3ce:	shl    rax,0x5
  40a3d2:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a3da:	lea    rax,[rsi+rax*1+0x10]
  40a3df:	lea    rbx,[rax+0x4]
  40a3e3:	movsxd rax,DWORD PTR [rax+0x4]
  40a3e7:	cmp    eax,0xffffffff
  40a3ea:	je     0x40a42e
  40a3ec:	nop    DWORD PTR [rax+0x0]
  40a3f0:	lea    rax,[rax+rax*2]
  40a3f4:	shl    rax,0x5
  40a3f8:	lea    rdx,[rsi+rax*1+0x10]
  40a3fd:	mov    DWORD PTR [rsi+rax*1+0x58],0x1
  40a405:	mov    ecx,DWORD PTR [rdx+0x4]
  40a408:	lea    rbp,[rdx+0x4]
  40a40c:	cmp    ecx,0xffffffff
  40a40f:	je     0x40a422
  40a411:	add    rbp,0x4
  40a415:	call   0x40a2a0
  40a41a:	mov    ecx,DWORD PTR [rbp+0x0]
  40a41d:	cmp    ecx,0xffffffff
  40a420:	jne    0x40a411
  40a422:	add    rbx,0x4
  40a426:	movsxd rax,DWORD PTR [rbx]
  40a429:	cmp    eax,0xffffffff
  40a42c:	jne    0x40a3f0
  40a42e:	add    rdi,0x4
  40a432:	movsxd rax,DWORD PTR [rdi]
  40a435:	cmp    eax,0xffffffff
  40a438:	jne    0x40a3ca
  40a43a:	add    r15,0x4
  40a43e:	movsxd rax,DWORD PTR [r15]
  40a441:	cmp    eax,0xffffffff
  40a444:	jne    0x40a3a8
  40a44a:	add    r14,0x4
  40a44e:	movsxd rax,DWORD PTR [r14]
  40a451:	cmp    eax,0xffffffff
  40a454:	jne    0x40a382
  40a45a:	add    r13,0x4
  40a45e:	movsxd rax,DWORD PTR [r13+0x0]
  40a462:	cmp    eax,0xffffffff
  40a465:	jne    0x40a35c
  40a46b:	add    r12,0x4
  40a46f:	movsxd rax,DWORD PTR [r12]
  40a473:	cmp    eax,0xffffffff
  40a476:	jne    0x40a336
  40a47c:	add    QWORD PTR [rsp+0x28],0x4
  40a482:	mov    rax,QWORD PTR [rsp+0x28]
  40a487:	movsxd rax,DWORD PTR [rax]
  40a48a:	cmp    eax,0xffffffff
  40a48d:	jne    0x40a310
  40a493:	add    QWORD PTR [rsp+0x20],0x4
  40a499:	mov    rax,QWORD PTR [rsp+0x20]
  40a49e:	movsxd rax,DWORD PTR [rax]
  40a4a1:	cmp    eax,0xffffffff
  40a4a4:	jne    0x40a2e5
  40a4aa:	add    rsp,0x38
  40a4ae:	pop    rbx
  40a4af:	pop    rsi
  40a4b0:	pop    rdi
  40a4b1:	pop    rbp
  40a4b2:	pop    r12
  40a4b4:	pop    r13
  40a4b6:	pop    r14
  40a4b8:	pop    r15
  40a4ba:	ret    
  40a4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a4c0:	push   rbx
  40a4c1:	sub    rsp,0x20
  40a4c5:	mov    ecx,DWORD PTR [rip+0x137a9]        # 0x41dc74
  40a4cb:	mov    DWORD PTR [rip+0x137e3],0x1        # 0x41dcb8
  40a4d5:	lea    rbx,[rip+0x13798]        # 0x41dc74
  40a4dc:	cmp    ecx,0xffffffff
  40a4df:	je     0x40a4f1
  40a4e1:	add    rbx,0x4
  40a4e5:	call   0x40a2a0
  40a4ea:	mov    ecx,DWORD PTR [rbx]
  40a4ec:	cmp    ecx,0xffffffff
  40a4ef:	jne    0x40a4e1
  40a4f1:	xor    eax,eax
  40a4f3:	add    rsp,0x20
  40a4f7:	pop    rbx
  40a4f8:	ret    
  40a4f9:	nop    DWORD PTR [rax+0x0]
  40a500:	push   rbx
  40a501:	sub    rsp,0x20
  40a505:	mov    ecx,DWORD PTR [rip+0x137c9]        # 0x41dcd4
  40a50b:	mov    DWORD PTR [rip+0x13803],0x1        # 0x41dd18
  40a515:	lea    rbx,[rip+0x137b8]        # 0x41dcd4
  40a51c:	cmp    ecx,0xffffffff
  40a51f:	je     0x40a531
  40a521:	add    rbx,0x4
  40a525:	call   0x40a2a0
  40a52a:	mov    ecx,DWORD PTR [rbx]
  40a52c:	cmp    ecx,0xffffffff
  40a52f:	jne    0x40a521
  40a531:	xor    eax,eax
  40a533:	add    rsp,0x20
  40a537:	pop    rbx
  40a538:	ret    
  40a539:	nop    DWORD PTR [rax+0x0]
  40a540:	push   rbx
  40a541:	sub    rsp,0x20
  40a545:	mov    ecx,DWORD PTR [rip+0x13909]        # 0x41de54
  40a54b:	mov    DWORD PTR [rip+0x13943],0x1        # 0x41de98
  40a555:	lea    rbx,[rip+0x138f8]        # 0x41de54
  40a55c:	cmp    ecx,0xffffffff
  40a55f:	je     0x40a571
  40a561:	add    rbx,0x4
  40a565:	call   0x40a2a0
  40a56a:	mov    ecx,DWORD PTR [rbx]
  40a56c:	cmp    ecx,0xffffffff
  40a56f:	jne    0x40a561
  40a571:	xor    eax,eax
  40a573:	add    rsp,0x20
  40a577:	pop    rbx
  40a578:	ret    
  40a579:	nop    DWORD PTR [rax+0x0]
  40a580:	push   rbx
  40a581:	sub    rsp,0x20
  40a585:	mov    ecx,DWORD PTR [rip+0x12cc9]        # 0x41d254
  40a58b:	mov    DWORD PTR [rip+0x12d03],0x1        # 0x41d298
  40a595:	lea    rbx,[rip+0x12cb8]        # 0x41d254
  40a59c:	cmp    ecx,0xffffffff
  40a59f:	je     0x40a5b1
  40a5a1:	add    rbx,0x4
  40a5a5:	call   0x40a2a0
  40a5aa:	mov    ecx,DWORD PTR [rbx]
  40a5ac:	cmp    ecx,0xffffffff
  40a5af:	jne    0x40a5a1
  40a5b1:	xor    eax,eax
  40a5b3:	add    rsp,0x20
  40a5b7:	pop    rbx
  40a5b8:	ret    
  40a5b9:	nop    DWORD PTR [rax+0x0]
  40a5c0:	push   rbx
  40a5c1:	sub    rsp,0x20
  40a5c5:	mov    ecx,DWORD PTR [rip+0x12e69]        # 0x41d434
  40a5cb:	mov    DWORD PTR [rip+0x12ea3],0x1        # 0x41d478
  40a5d5:	lea    rbx,[rip+0x12e58]        # 0x41d434
  40a5dc:	cmp    ecx,0xffffffff
  40a5df:	je     0x40a5f1
  40a5e1:	add    rbx,0x4
  40a5e5:	call   0x40a2a0
  40a5ea:	mov    ecx,DWORD PTR [rbx]
  40a5ec:	cmp    ecx,0xffffffff
  40a5ef:	jne    0x40a5e1
  40a5f1:	xor    eax,eax
  40a5f3:	add    rsp,0x20
  40a5f7:	pop    rbx
  40a5f8:	ret    
  40a5f9:	nop    DWORD PTR [rax+0x0]
  40a600:	push   rbx
  40a601:	sub    rsp,0x20
  40a605:	mov    ecx,DWORD PTR [rip+0x12ca9]        # 0x41d2b4
  40a60b:	mov    DWORD PTR [rip+0x12ce3],0x1        # 0x41d2f8
  40a615:	lea    rbx,[rip+0x12c98]        # 0x41d2b4
  40a61c:	cmp    ecx,0xffffffff
  40a61f:	je     0x40a631
  40a621:	add    rbx,0x4
  40a625:	call   0x40a2a0
  40a62a:	mov    ecx,DWORD PTR [rbx]
  40a62c:	cmp    ecx,0xffffffff
  40a62f:	jne    0x40a621
  40a631:	xor    eax,eax
  40a633:	add    rsp,0x20
  40a637:	pop    rbx
  40a638:	ret    
  40a639:	nop    DWORD PTR [rax+0x0]
  40a640:	push   rbx
  40a641:	sub    rsp,0x20
  40a645:	mov    ecx,DWORD PTR [rip+0x13089]        # 0x41d6d4
  40a64b:	mov    DWORD PTR [rip+0x130c3],0x1        # 0x41d718
  40a655:	lea    rbx,[rip+0x13078]        # 0x41d6d4
  40a65c:	cmp    ecx,0xffffffff
  40a65f:	je     0x40a671
  40a661:	add    rbx,0x4
  40a665:	call   0x40a2a0
  40a66a:	mov    ecx,DWORD PTR [rbx]
  40a66c:	cmp    ecx,0xffffffff
  40a66f:	jne    0x40a661
  40a671:	xor    eax,eax
  40a673:	add    rsp,0x20
  40a677:	pop    rbx
  40a678:	ret    
  40a679:	nop    DWORD PTR [rax+0x0]
  40a680:	push   rbx
  40a681:	sub    rsp,0x20
  40a685:	mov    ecx,DWORD PTR [rip+0x12c89]        # 0x41d314
  40a68b:	mov    DWORD PTR [rip+0x12cc3],0x1        # 0x41d358
  40a695:	lea    rbx,[rip+0x12c78]        # 0x41d314
  40a69c:	cmp    ecx,0xffffffff
  40a69f:	je     0x40a6b1
  40a6a1:	add    rbx,0x4
  40a6a5:	call   0x40a2a0
  40a6aa:	mov    ecx,DWORD PTR [rbx]
  40a6ac:	cmp    ecx,0xffffffff
  40a6af:	jne    0x40a6a1
  40a6b1:	xor    eax,eax
  40a6b3:	add    rsp,0x20
  40a6b7:	pop    rbx
  40a6b8:	ret    
  40a6b9:	nop    DWORD PTR [rax+0x0]
  40a6c0:	push   rbx
  40a6c1:	sub    rsp,0x20
  40a6c5:	mov    ecx,DWORD PTR [rip+0x12f49]        # 0x41d614
  40a6cb:	mov    DWORD PTR [rip+0x12f83],0x1        # 0x41d658
  40a6d5:	lea    rbx,[rip+0x12f38]        # 0x41d614
  40a6dc:	cmp    ecx,0xffffffff
  40a6df:	je     0x40a6f1
  40a6e1:	add    rbx,0x4
  40a6e5:	call   0x40a2a0
  40a6ea:	mov    ecx,DWORD PTR [rbx]
  40a6ec:	cmp    ecx,0xffffffff
  40a6ef:	jne    0x40a6e1
  40a6f1:	xor    eax,eax
  40a6f3:	add    rsp,0x20
  40a6f7:	pop    rbx
  40a6f8:	ret    
  40a6f9:	nop    DWORD PTR [rax+0x0]
  40a700:	push   rbx
  40a701:	sub    rsp,0x20
  40a705:	mov    ecx,DWORD PTR [rip+0x132c9]        # 0x41d9d4
  40a70b:	mov    DWORD PTR [rip+0x13303],0x1        # 0x41da18
  40a715:	lea    rbx,[rip+0x132b8]        # 0x41d9d4
  40a71c:	cmp    ecx,0xffffffff
  40a71f:	je     0x40a731
  40a721:	add    rbx,0x4
  40a725:	call   0x40a2a0
  40a72a:	mov    ecx,DWORD PTR [rbx]
  40a72c:	cmp    ecx,0xffffffff
  40a72f:	jne    0x40a721
  40a731:	xor    eax,eax
  40a733:	add    rsp,0x20
  40a737:	pop    rbx
  40a738:	ret    
  40a739:	nop    DWORD PTR [rax+0x0]
  40a740:	push   r15
  40a742:	push   r14
  40a744:	push   r13
  40a746:	push   r12
  40a748:	push   rbp
  40a749:	push   rdi
  40a74a:	push   rsi
  40a74b:	push   rbx
  40a74c:	sub    rsp,0x868
  40a753:	lea    r13,[rsp+0x60]
  40a758:	mov    r12,r8
  40a75b:	mov    QWORD PTR [rsp+0x8b8],rdx
  40a763:	mov    r8d,0xffffffff
  40a769:	xor    edx,edx
  40a76b:	mov    rsi,rcx
  40a76e:	mov    rcx,r13
  40a771:	call   0x412480
  40a776:	mov    rcx,r12
  40a779:	call   0x419840
  40a77e:	add    rax,r12
  40a781:	cmp    BYTE PTR [r12],0x0
  40a786:	mov    QWORD PTR [rsp+0x58],r12
  40a78b:	mov    QWORD PTR [rsp+0x38],rax
  40a790:	je     0x40a803
  40a792:	lea    rax,[rsp+0x54]
  40a797:	lea    r15,[rsp+0x58]
  40a79c:	lea    rdi,[rsp+0x460]
  40a7a4:	mov    rbx,r12
  40a7a7:	mov    DWORD PTR [rsp+0x4c],0x0
  40a7af:	mov    QWORD PTR [rsp+0x40],rax
  40a7b4:	mov    r9d,DWORD PTR [rsi+0x28c0]
  40a7bb:	mov    r8,QWORD PTR [rsp+0x38]
  40a7c0:	mov    rdx,r15
  40a7c3:	mov    rcx,QWORD PTR [rsp+0x40]
  40a7c8:	call   0x4121e0
  40a7cd:	test   eax,eax
  40a7cf:	js     0x40a810
  40a7d1:	mov    r8d,DWORD PTR [rsp+0x58]
  40a7d6:	mov    rdx,rbx
  40a7d9:	mov    rcx,r13
  40a7dc:	sub    r8d,ebx
  40a7df:	call   0x4124a8
  40a7e4:	mov    rbx,QWORD PTR [rsp+0x58]
  40a7e9:	cmp    BYTE PTR [rbx],0x0
  40a7ec:	jne    0x40a7b4
  40a7ee:	mov    eax,DWORD PTR [rsp+0x4c]
  40a7f2:	test   eax,eax
  40a7f4:	je     0x40a803
  40a7f6:	cmp    DWORD PTR [rsi+0x28b4],0x1
  40a7fd:	je     0x40a902
  40a803:	xor    ebx,ebx
  40a805:	jmp    0x40a8dc
  40a80a:	nop    WORD PTR [rax+rax*1+0x0]
  40a810:	xor    edx,edx
  40a812:	mov    r8d,0x1
  40a818:	mov    rcx,rdi
  40a81b:	call   0x412480
  40a820:	mov    rbp,QWORD PTR [rsp+0x58]
  40a825:	lea    rdx,[rip+0x16c6a]        # 0x421496
  40a82c:	mov    rcx,rdi
  40a82f:	mov    r14,rbx
  40a832:	call   0x412478
  40a837:	cmp    rbp,rbx
  40a83a:	je     0x40a85c
  40a83c:	nop    DWORD PTR [rax+0x0]
  40a840:	movzx  r8d,BYTE PTR [r14]
  40a844:	lea    rdx,[rip+0x16c97]        # 0x4214e2
  40a84b:	mov    rcx,rdi
  40a84e:	add    r14,0x1
  40a852:	call   0x412478
  40a857:	cmp    r14,rbp
  40a85a:	jne    0x40a840
  40a85c:	mov    r9,QWORD PTR [rsp+0x460]
  40a864:	lea    r8,[rip+0x16e15]        # 0x421680
  40a86b:	mov    QWORD PTR [rsp+0x20],r12
  40a870:	mov    edx,0x30
  40a875:	mov    rcx,rsi
  40a878:	call   0x412308
  40a87d:	mov    eax,DWORD PTR [rsi+0x28b4]
  40a883:	add    DWORD PTR [rsp+0x4c],0x1
  40a888:	test   eax,eax
  40a88a:	je     0x40a8c0
  40a88c:	cmp    eax,0x1
  40a88f:	jne    0x40a8ad
  40a891:	mov    r8,QWORD PTR [rsi+0x28b8]
  40a898:	lea    rdx,[rip+0x16747]        # 0x420fe6
  40a89f:	mov    rcx,r13
  40a8a2:	call   0x412478
  40a8a7:	mov    eax,DWORD PTR [rsi+0x28b4]
  40a8ad:	cmp    eax,0x2
  40a8b0:	jne    0x40a7e4
  40a8b6:	jmp    0x40a7d1
  40a8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a8c0:	lea    r8,[rip+0x16de9]        # 0x4216b0
  40a8c7:	mov    r9,r12
  40a8ca:	mov    edx,0x10
  40a8cf:	mov    rcx,rsi
  40a8d2:	mov    ebx,0xbebbb1b7
  40a8d7:	call   0x412308
  40a8dc:	mov    rdx,QWORD PTR [rsp+0x8b8]
  40a8e4:	mov    rcx,r13
  40a8e7:	call   0x412488
  40a8ec:	mov    eax,ebx
  40a8ee:	add    rsp,0x868
  40a8f5:	pop    rbx
  40a8f6:	pop    rsi
  40a8f7:	pop    rdi
  40a8f8:	pop    rbp
  40a8f9:	pop    r12
  40a8fb:	pop    r13
  40a8fd:	pop    r14
  40a8ff:	pop    r15
  40a901:	ret    
  40a902:	mov    rax,QWORD PTR [rsi+0x28b8]
  40a909:	mov    r9d,DWORD PTR [rsp+0x4c]
  40a90e:	lea    r8,[rip+0x16dcb]        # 0x4216e0
  40a915:	mov    QWORD PTR [rsp+0x20],r12
  40a91a:	mov    edx,0x18
  40a91f:	mov    rcx,rsi
  40a922:	xor    ebx,ebx
  40a924:	mov    QWORD PTR [rsp+0x28],rax
  40a929:	call   0x412308
  40a92e:	jmp    0x40a8dc
  40a930:	push   rdi
  40a931:	push   rsi
  40a932:	push   rbx
  40a933:	sub    rsp,0x20
  40a937:	movsxd rax,DWORD PTR [rcx+0x2c]
  40a93b:	mov    rsi,rdx
  40a93e:	mov    rbx,rcx
  40a941:	mov    rdi,r8
  40a944:	mov    rax,QWORD PTR [rcx+rax*8+0x58]
  40a949:	mov    edx,DWORD PTR [rax+0x58]
  40a94c:	test   edx,edx
  40a94e:	je     0x40a973
  40a950:	mov    rax,QWORD PTR [rbx+0x8]
  40a954:	mov    r8,rdi
  40a957:	mov    rdx,rsi
  40a95a:	mov    rcx,rbx
  40a95d:	call   QWORD PTR [rax+0x48]
  40a960:	movsxd rax,DWORD PTR [rbx+0x2c]
  40a964:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40a969:	xor    eax,eax
  40a96b:	add    rsp,0x20
  40a96f:	pop    rbx
  40a970:	pop    rsi
  40a971:	pop    rdi
  40a972:	ret    
  40a973:	mov    rcx,QWORD PTR [rax+0x50]
  40a977:	xor    r9d,r9d
  40a97a:	xor    r8d,r8d
  40a97d:	mov    rdx,rsi
  40a980:	call   0x412438
  40a985:	test   rax,rax
  40a988:	jne    0x40a950
  40a98a:	jmp    0x40a969
  40a98c:	nop    DWORD PTR [rax+0x0]
  40a990:	push   r15
  40a992:	push   r14
  40a994:	push   r13
  40a996:	push   r12
  40a998:	push   rbp
  40a999:	push   rdi
  40a99a:	push   rsi
  40a99b:	push   rbx
  40a99c:	sub    rsp,0x428
  40a9a3:	xor    r14d,r14d
  40a9a6:	mov    ebp,0x2e
  40a9ab:	lea    rsi,[rsp+0x20]
  40a9b0:	mov    QWORD PTR [rsp+0x470],rcx
  40a9b8:	mov    QWORD PTR [rsp+0x478],rdx
  40a9c0:	mov    r12,r8
  40a9c3:	xor    edx,edx
  40a9c5:	mov    r8d,0xffffffff
  40a9cb:	mov    rcx,rsi
  40a9ce:	mov    r13d,r9d
  40a9d1:	call   0x412480
  40a9d6:	lea    rdx,[rip+0x164cd]        # 0x420eaa
  40a9dd:	mov    rcx,rsi
  40a9e0:	call   0x412478
  40a9e5:	test   r13d,r13d
  40a9e8:	je     0x40aaea
  40a9ee:	xchg   ax,ax
  40a9f0:	lea    rdx,[rip+0x16d30]        # 0x421727
  40a9f7:	mov    r8d,r14d
  40a9fa:	mov    rcx,rsi
  40a9fd:	mov    edi,0x10
  40aa02:	call   0x412478
  40aa07:	cmp    r13d,0x10
  40aa0b:	cmovle edi,r13d
  40aa0f:	test   edi,edi
  40aa11:	jle    0x40ab23
  40aa17:	movzx  r8d,BYTE PTR [r12]
  40aa1c:	lea    rdx,[rip+0x16d0b]        # 0x42172e
  40aa23:	mov    rcx,rsi
  40aa26:	lea    rbx,[r12+0x1]
  40aa2b:	xor    r15d,r15d
  40aa2e:	call   0x412478
  40aa33:	jmp    0x40aa39
  40aa35:	add    rbx,0x1
  40aa39:	add    r15d,0x1
  40aa3d:	cmp    r15d,edi
  40aa40:	je     0x40aa70
  40aa42:	movzx  r8d,BYTE PTR [rbx]
  40aa46:	lea    rdx,[rip+0x16ce1]        # 0x42172e
  40aa4d:	mov    rcx,rsi
  40aa50:	call   0x412478
  40aa55:	test   r15b,0x1
  40aa59:	je     0x40aa35
  40aa5b:	lea    rdx,[rip+0x16446]        # 0x420ea8
  40aa62:	mov    rcx,rsi
  40aa65:	call   0x412478
  40aa6a:	jmp    0x40aa35
  40aa6c:	nop    DWORD PTR [rax+0x0]
  40aa70:	mov    eax,edi
  40aa72:	mov    edx,edi
  40aa74:	mov    rcx,rsi
  40aa77:	shr    eax,0x1f
  40aa7a:	neg    edx
  40aa7c:	mov    r15,r12
  40aa7f:	add    eax,edi
  40aa81:	sar    eax,1
  40aa83:	neg    eax
  40aa85:	lea    r8d,[rax+rdx*2+0x29]
  40aa8a:	mov    edx,0x20
  40aa8f:	call   0x412498
  40aa94:	lea    edx,[rdi-0x1]
  40aa97:	lea    rbx,[r12+rdx*1+0x1]
  40aa9c:	nop    DWORD PTR [rax+0x0]
  40aaa0:	movzx  ecx,BYTE PTR [r15]
  40aaa4:	mov    r8d,0x1
  40aaaa:	mov    edx,ecx
  40aaac:	sub    ecx,0x20
  40aaaf:	cmp    ecx,0x5e
  40aab2:	movsx  edx,dl
  40aab5:	mov    rcx,rsi
  40aab8:	cmova  edx,ebp
  40aabb:	add    r15,0x1
  40aabf:	call   0x412498
  40aac4:	cmp    r15,rbx
  40aac7:	jne    0x40aaa0
  40aac9:	lea    rdx,[rip+0x163da]        # 0x420eaa
  40aad0:	mov    rcx,rsi
  40aad3:	add    r14d,edi
  40aad6:	call   0x412478
  40aadb:	movsxd rax,edi
  40aade:	add    r12,rax
  40aae1:	sub    r13d,edi
  40aae4:	jne    0x40a9f0
  40aaea:	mov    r8,QWORD PTR [rsp+0x20]
  40aaef:	mov    rdx,QWORD PTR [rsp+0x478]
  40aaf7:	mov    rcx,QWORD PTR [rsp+0x470]
  40aaff:	call   0x40a930
  40ab04:	xor    edx,edx
  40ab06:	mov    rcx,rsi
  40ab09:	call   0x412488
  40ab0e:	nop
  40ab0f:	add    rsp,0x428
  40ab16:	pop    rbx
  40ab17:	pop    rsi
  40ab18:	pop    rdi
  40ab19:	pop    rbp
  40ab1a:	pop    r12
  40ab1c:	pop    r13
  40ab1e:	pop    r14
  40ab20:	pop    r15
  40ab22:	ret    
  40ab23:	mov    r8d,0x29
  40ab29:	mov    edx,0x20
  40ab2e:	mov    rcx,rsi
  40ab31:	call   0x412498
  40ab36:	jmp    0x40aac9
  40ab38:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab40:	push   rsi
  40ab41:	push   rbx
  40ab42:	sub    rsp,0x428
  40ab49:	mov    r8d,0xffffffff
  40ab4f:	mov    edx,0x1
  40ab54:	lea    rsi,[rsp+0x20]
  40ab59:	mov    rbx,rcx
  40ab5c:	mov    rcx,rsi
  40ab5f:	call   0x412480
  40ab64:	mov    rcx,rbx
  40ab67:	mov    edx,0x1d
  40ab6c:	call   0x409380
  40ab71:	lea    r8,[rip+0x16bbb]        # 0x421733
  40ab78:	lea    rdx,[rip+0x16bbb]        # 0x42173a
  40ab7f:	mov    rcx,rbx
  40ab82:	call   0x40a930
  40ab87:	mov    rcx,rsi
  40ab8a:	call   0x412490
  40ab8f:	lea    rdx,[rip+0x16bb2]        # 0x421748
  40ab96:	mov    r9d,0x7e0
  40ab9c:	mov    rcx,rsi
  40ab9f:	mov    r8d,0x7d7
  40aba5:	call   0x412478
  40abaa:	mov    r8,QWORD PTR [rsp+0x20]
  40abaf:	lea    rdx,[rip+0x16bbc]        # 0x421772
  40abb6:	mov    rcx,rbx
  40abb9:	call   0x40a930
  40abbe:	lea    r8,[rip+0x16bb7]        # 0x42177c
  40abc5:	lea    rdx,[rip+0x16bc0]        # 0x42178c
  40abcc:	mov    rcx,rbx
  40abcf:	call   0x40a930
  40abd4:	lea    r8,[rip+0x16bc5]        # 0x4217a0
  40abdb:	lea    rdx,[rip+0x16e38]        # 0x421a1a
  40abe2:	mov    rcx,rbx
  40abe5:	call   0x40a930
  40abea:	mov    rcx,rbx
  40abed:	call   0x407ed0
  40abf2:	xor    edx,edx
  40abf4:	mov    rcx,rsi
  40abf7:	call   0x412488
  40abfc:	nop
  40abfd:	add    rsp,0x428
  40ac04:	pop    rbx
  40ac05:	pop    rsi
  40ac06:	ret    
  40ac07:	nop    WORD PTR [rax+rax*1+0x0]
  40ac10:	push   rdi
  40ac11:	push   rsi
  40ac12:	push   rbx
  40ac13:	sub    rsp,0x20
  40ac17:	movsxd rax,DWORD PTR [rcx+0x2c]
  40ac1b:	mov    r9,QWORD PTR [rcx+rax*8+0x58]
  40ac20:	mov    rax,QWORD PTR [rcx+0x8]
  40ac24:	test   BYTE PTR [rax+0x50],0x1
  40ac28:	je     0x40ac50
  40ac2a:	mov    rsi,rdx
  40ac2d:	mov    edx,DWORD PTR [r9+0x58]
  40ac31:	mov    rdi,r8
  40ac34:	mov    rbx,rcx
  40ac37:	test   edx,edx
  40ac39:	je     0x40ac60
  40ac3b:	mov    r8,rdi
  40ac3e:	mov    rdx,rsi
  40ac41:	mov    rcx,rbx
  40ac44:	call   QWORD PTR [rax+0x48]
  40ac47:	movsxd rax,DWORD PTR [rbx+0x2c]
  40ac4b:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40ac50:	xor    eax,eax
  40ac52:	add    rsp,0x20
  40ac56:	pop    rbx
  40ac57:	pop    rsi
  40ac58:	pop    rdi
  40ac59:	ret    
  40ac5a:	nop    WORD PTR [rax+rax*1+0x0]
  40ac60:	mov    rcx,QWORD PTR [r9+0x50]
  40ac64:	xor    r8d,r8d
  40ac67:	xor    r9d,r9d
  40ac6a:	mov    rdx,rsi
  40ac6d:	call   0x412438
  40ac72:	test   rax,rax
  40ac75:	je     0x40ac50
  40ac77:	mov    rax,QWORD PTR [rbx+0x8]
  40ac7b:	jmp    0x40ac3b
  40ac7d:	nop    DWORD PTR [rax]
  40ac80:	push   rdi
  40ac81:	push   rsi
  40ac82:	sub    rsp,0x38
  40ac86:	mov    rax,QWORD PTR [rip+0x1e66b]        # 0x4292f8
  40ac8d:	test   rax,rax
  40ac90:	jne    0x40acbe
  40ac92:	lea    rdi,[rip+0x16592]        # 0x42122b
  40ac99:	mov    rsi,r8
  40ac9c:	mov    ecx,0x2
  40aca1:	lea    rax,[rip+0x1652e]        # 0x4211d6
  40aca8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40acaa:	cmove  r8,rax
  40acae:	xor    eax,eax
  40acb0:	mov    QWORD PTR [rip+0x1e641],r8        # 0x4292f8
  40acb7:	add    rsp,0x38
  40acbb:	pop    rsi
  40acbc:	pop    rdi
  40acbd:	ret    
  40acbe:	mov    r9,r8
  40acc1:	lea    r8,[rip+0x16518]        # 0x4211e0
  40acc8:	xor    ecx,ecx
  40acca:	mov    QWORD PTR [rsp+0x20],rax
  40accf:	mov    edx,0x10
  40acd4:	call   0x412308
  40acd9:	mov    ecx,0x1
  40acde:	call   0x401cb0
  40ace3:	nop
  40ace4:	xchg   ax,ax
  40ace6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40acf0:	push   r15
  40acf2:	push   r14
  40acf4:	push   r13
  40acf6:	push   r12
  40acf8:	push   rbp
  40acf9:	push   rdi
  40acfa:	push   rsi
  40acfb:	push   rbx
  40acfc:	sub    rsp,0x28
  40ad00:	lea    rbx,[rip+0x12479]        # 0x41d180
  40ad07:	movsxd rcx,ecx
  40ad0a:	lea    rax,[rcx+rcx*2]
  40ad0e:	shl    rax,0x5
  40ad12:	lea    rdx,[rbx+rax*1]
  40ad16:	mov    r14d,DWORD PTR [rdx+0x58]
  40ad1a:	test   r14d,r14d
  40ad1d:	jne    0x40ad30
  40ad1f:	cmp    QWORD PTR [rdx+0x50],0x0
  40ad24:	je     0x40ad50
  40ad26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad30:	mov    r14d,0x1
  40ad36:	mov    eax,r14d
  40ad39:	add    rsp,0x28
  40ad3d:	pop    rbx
  40ad3e:	pop    rsi
  40ad3f:	pop    rdi
  40ad40:	pop    rbp
  40ad41:	pop    r12
  40ad43:	pop    r13
  40ad45:	pop    r14
  40ad47:	pop    r15
  40ad49:	ret    
  40ad4a:	nop    WORD PTR [rax+rax*1+0x0]
  40ad50:	lea    rax,[rbx+rax*1+0x10]
  40ad55:	lea    r12,[rax+0x4]
  40ad59:	movsxd rax,DWORD PTR [rax+0x4]
  40ad5d:	cmp    eax,0xffffffff
  40ad60:	je     0x40ad36
  40ad62:	lea    rdx,[rax+rax*2]
  40ad66:	shl    rdx,0x5
  40ad6a:	add    rdx,rbx
  40ad6d:	mov    r14d,DWORD PTR [rdx+0x58]
  40ad71:	test   r14d,r14d
  40ad74:	jne    0x40ad30
  40ad76:	cmp    QWORD PTR [rdx+0x50],0x0
  40ad7b:	jne    0x40ad30
  40ad7d:	mov    r13,rbx
  40ad80:	lea    rax,[rax+rax*2]
  40ad84:	shl    rax,0x5
  40ad88:	lea    rax,[rbx+rax*1+0x10]
  40ad8d:	lea    rbp,[rax+0x4]
  40ad91:	movsxd rax,DWORD PTR [rax+0x4]
  40ad95:	cmp    eax,0xffffffff
  40ad98:	je     0x40af20
  40ad9e:	lea    rdx,[rax+rax*2]
  40ada2:	shl    rdx,0x5
  40ada6:	add    rdx,r13
  40ada9:	mov    r11d,DWORD PTR [rdx+0x58]
  40adad:	test   r11d,r11d
  40adb0:	jne    0x40ad30
  40adb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40adc0:	cmp    QWORD PTR [rdx+0x50],0x0
  40adc5:	jne    0x40ad30
  40adcb:	lea    rax,[rax+rax*2]
  40adcf:	shl    rax,0x5
  40add3:	lea    rax,[rbx+rax*1+0x10]
  40add8:	lea    rdi,[rax+0x4]
  40addc:	movsxd rax,DWORD PTR [rax+0x4]
  40ade0:	cmp    eax,0xffffffff
  40ade3:	je     0x40aef0
  40ade9:	lea    rdx,[rax+rax*2]
  40aded:	shl    rdx,0x5
  40adf1:	add    rdx,r13
  40adf4:	mov    r9d,DWORD PTR [rdx+0x58]
  40adf8:	test   r9d,r9d
  40adfb:	jne    0x40ad30
  40ae01:	cmp    QWORD PTR [rdx+0x50],0x0
  40ae06:	jne    0x40ad30
  40ae0c:	lea    rax,[rax+rax*2]
  40ae10:	shl    rax,0x5
  40ae14:	lea    rax,[rbx+rax*1+0x10]
  40ae19:	movsxd rdx,DWORD PTR [rax+0x4]
  40ae1d:	lea    rsi,[rax+0x4]
  40ae21:	cmp    edx,0xffffffff
  40ae24:	je     0x40aec0
  40ae2a:	lea    rax,[rdx+rdx*2]
  40ae2e:	shl    rax,0x5
  40ae32:	add    rax,r13
  40ae35:	mov    ecx,DWORD PTR [rax+0x58]
  40ae38:	test   ecx,ecx
  40ae3a:	jne    0x40ad30
  40ae40:	cmp    QWORD PTR [rax+0x50],0x0
  40ae45:	jne    0x40ad30
  40ae4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae50:	lea    rax,[rdx+rdx*2]
  40ae54:	shl    rax,0x5
  40ae58:	lea    rax,[rbx+rax*1+0x10]
  40ae5d:	mov    ecx,DWORD PTR [rax+0x4]
  40ae60:	lea    r15,[rax+0x4]
  40ae64:	cmp    ecx,0xffffffff
  40ae67:	jne    0x40ae7c
  40ae69:	jmp    0x40ae90
  40ae6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae70:	add    r15,0x4
  40ae74:	mov    ecx,DWORD PTR [r15]
  40ae77:	cmp    ecx,0xffffffff
  40ae7a:	je     0x40ae90
  40ae7c:	call   0x40acf0
  40ae81:	test   eax,eax
  40ae83:	je     0x40ae70
  40ae85:	jmp    0x40ad30
  40ae8a:	nop    WORD PTR [rax+rax*1+0x0]
  40ae90:	add    rsi,0x4
  40ae94:	movsxd rdx,DWORD PTR [rsi]
  40ae97:	cmp    edx,0xffffffff
  40ae9a:	je     0x40aec0
  40ae9c:	lea    rcx,[rdx+rdx*2]
  40aea0:	shl    rcx,0x5
  40aea4:	add    rcx,rbx
  40aea7:	mov    eax,DWORD PTR [rcx+0x58]
  40aeaa:	test   eax,eax
  40aeac:	jne    0x40ad30
  40aeb2:	cmp    QWORD PTR [rcx+0x50],0x0
  40aeb7:	jne    0x40ad30
  40aebd:	jmp    0x40ae50
  40aebf:	nop
  40aec0:	add    rdi,0x4
  40aec4:	movsxd rax,DWORD PTR [rdi]
  40aec7:	cmp    eax,0xffffffff
  40aeca:	je     0x40aef0
  40aecc:	lea    rdx,[rax+rax*2]
  40aed0:	shl    rdx,0x5
  40aed4:	add    rdx,rbx
  40aed7:	mov    r8d,DWORD PTR [rdx+0x58]
  40aedb:	test   r8d,r8d
  40aede:	je     0x40ae01
  40aee4:	jmp    0x40ad30
  40aee9:	nop    DWORD PTR [rax+0x0]
  40aef0:	add    rbp,0x4
  40aef4:	movsxd rax,DWORD PTR [rbp+0x0]
  40aef8:	cmp    eax,0xffffffff
  40aefb:	je     0x40af20
  40aefd:	lea    rdx,[rax+rax*2]
  40af01:	shl    rdx,0x5
  40af05:	add    rdx,rbx
  40af08:	mov    r10d,DWORD PTR [rdx+0x58]
  40af0c:	test   r10d,r10d
  40af0f:	je     0x40adc0
  40af15:	jmp    0x40ad30
  40af1a:	nop    WORD PTR [rax+rax*1+0x0]
  40af20:	add    r12,0x4
  40af24:	movsxd rax,DWORD PTR [r12]
  40af28:	cmp    eax,0xffffffff
  40af2b:	je     0x40ad36
  40af31:	lea    rdx,[rax+rax*2]
  40af35:	shl    rdx,0x5
  40af39:	add    rdx,rbx
  40af3c:	mov    esi,DWORD PTR [rdx+0x58]
  40af3f:	test   esi,esi
  40af41:	jne    0x40ad30
  40af47:	cmp    QWORD PTR [rdx+0x50],0x0
  40af4c:	jne    0x40ad30
  40af52:	jmp    0x40ad80
  40af57:	nop    WORD PTR [rax+rax*1+0x0]
  40af60:	push   r15
  40af62:	push   r14
  40af64:	push   r13
  40af66:	push   r12
  40af68:	push   rbp
  40af69:	push   rdi
  40af6a:	push   rsi
  40af6b:	push   rbx
  40af6c:	sub    rsp,0x78
  40af70:	lea    r14,[rip+0x12209]        # 0x41d180
  40af77:	movsxd rdi,ecx
  40af7a:	mov    esi,edx
  40af7c:	lea    rbx,[rdi+rdi*2]
  40af80:	lea    ebp,[rsi*4+0x0]
  40af87:	shl    rbx,0x5
  40af8b:	add    rbx,r14
  40af8e:	mov    eax,DWORD PTR [rbx+0x10]
  40af91:	mov    edx,eax
  40af93:	and    edx,0x4
  40af96:	cmp    edx,0x1
  40af99:	mov    edx,eax
  40af9b:	sbb    r8d,r8d
  40af9e:	and    edx,0x2
  40afa1:	and    r8d,0xffffffd8
  40afa5:	cmp    edx,0x1
  40afa8:	sbb    ecx,ecx
  40afaa:	and    eax,0x1
  40afad:	lea    r9d,[r8+0x56]
  40afb1:	and    ecx,0xffffffed
  40afb4:	cmp    eax,0x1
  40afb7:	sbb    edx,edx
  40afb9:	lea    r8d,[rcx+0x41]
  40afbd:	lea    rcx,[rip+0x16a64]        # 0x421a28
  40afc4:	and    edx,0xffffffd7
  40afc7:	add    edx,0x57
  40afca:	call   0x407ff0
  40afcf:	mov    r9,QWORD PTR [rbx+0x8]
  40afd3:	lea    rcx,[rip+0x16a55]        # 0x421a2f
  40afda:	mov    edx,ebp
  40afdc:	mov    r8d,0x20
  40afe2:	call   0x407ff0
  40afe7:	mov    rdx,QWORD PTR [rbx+0x48]
  40afeb:	test   rdx,rdx
  40afee:	je     0x40affc
  40aff0:	lea    rcx,[rip+0x16a40]        # 0x421a37
  40aff7:	call   0x407ff0
  40affc:	lea    rcx,[rip+0x15ea7]        # 0x420eaa
  40b003:	call   0x407ff0
  40b008:	lea    rax,[rdi+rdi*2]
  40b00c:	shl    rax,0x5
  40b010:	lea    rax,[r14+rax*1+0x10]
  40b015:	movsxd rbx,DWORD PTR [rax+0x4]
  40b019:	lea    rdi,[rax+0x4]
  40b01d:	mov    QWORD PTR [rsp+0x28],rdi
  40b022:	cmp    ebx,0xffffffff
  40b025:	je     0x40b67d
  40b02b:	lea    eax,[rbp+0x4]
  40b02e:	lea    ebp,[rsi+0x9]
  40b031:	lea    r13d,[rsi*4+0x1c]
  40b039:	lea    r12d,[rsi*4+0x20]
  40b041:	mov    DWORD PTR [rsp+0x60],eax
  40b045:	lea    eax,[rsi*4+0x8]
  40b04c:	mov    DWORD PTR [rsp+0x5c],eax
  40b050:	lea    eax,[rsi*4+0xc]
  40b057:	mov    DWORD PTR [rsp+0x58],eax
  40b05b:	lea    eax,[rsi*4+0x10]
  40b062:	mov    DWORD PTR [rsp+0x6c],eax
  40b066:	lea    eax,[rsi*4+0x14]
  40b06d:	mov    DWORD PTR [rsp+0x68],eax
  40b071:	lea    eax,[rsi*4+0x18]
  40b078:	mov    DWORD PTR [rsp+0x64],eax
  40b07c:	mov    eax,ebp
  40b07e:	mov    ebp,r13d
  40b081:	mov    r13d,eax
  40b084:	lea    rsi,[rbx+rbx*2]
  40b088:	shl    rsi,0x5
  40b08c:	add    rsi,r14
  40b08f:	mov    eax,DWORD PTR [rsi+0x10]
  40b092:	mov    edx,eax
  40b094:	and    edx,0x4
  40b097:	cmp    edx,0x1
  40b09a:	mov    edx,eax
  40b09c:	sbb    r8d,r8d
  40b09f:	and    edx,0x2
  40b0a2:	and    r8d,0xffffffd8
  40b0a6:	cmp    edx,0x1
  40b0a9:	sbb    ecx,ecx
  40b0ab:	and    eax,0x1
  40b0ae:	lea    r9d,[r8+0x56]
  40b0b2:	and    ecx,0xffffffed
  40b0b5:	cmp    eax,0x1
  40b0b8:	sbb    edx,edx
  40b0ba:	lea    r8d,[rcx+0x41]
  40b0be:	lea    rcx,[rip+0x16963]        # 0x421a28
  40b0c5:	and    edx,0xffffffd7
  40b0c8:	add    edx,0x57
  40b0cb:	call   0x407ff0
  40b0d0:	mov    edx,DWORD PTR [rsp+0x60]
  40b0d4:	mov    r9,QWORD PTR [rsi+0x8]
  40b0d8:	lea    rcx,[rip+0x16950]        # 0x421a2f
  40b0df:	mov    r8d,0x20
  40b0e5:	call   0x407ff0
  40b0ea:	mov    rdx,QWORD PTR [rsi+0x48]
  40b0ee:	test   rdx,rdx
  40b0f1:	je     0x40b0ff
  40b0f3:	lea    rcx,[rip+0x1693d]        # 0x421a37
  40b0fa:	call   0x407ff0
  40b0ff:	lea    rcx,[rip+0x15da4]        # 0x420eaa
  40b106:	call   0x407ff0
  40b10b:	lea    rax,[rbx+rbx*2]
  40b10f:	shl    rax,0x5
  40b113:	lea    rax,[r14+rax*1+0x10]
  40b118:	movsxd rbx,DWORD PTR [rax+0x4]
  40b11c:	lea    rsi,[rax+0x4]
  40b120:	mov    QWORD PTR [rsp+0x30],rsi
  40b125:	cmp    ebx,0xffffffff
  40b128:	je     0x40b666
  40b12e:	lea    rsi,[rbx+rbx*2]
  40b132:	shl    rsi,0x5
  40b136:	add    rsi,r14
  40b139:	mov    eax,DWORD PTR [rsi+0x10]
  40b13c:	mov    edx,eax
  40b13e:	and    edx,0x4
  40b141:	cmp    edx,0x1
  40b144:	mov    edx,eax
  40b146:	sbb    r8d,r8d
  40b149:	and    edx,0x2
  40b14c:	and    r8d,0xffffffd8
  40b150:	cmp    edx,0x1
  40b153:	sbb    ecx,ecx
  40b155:	and    eax,0x1
  40b158:	lea    r9d,[r8+0x56]
  40b15c:	and    ecx,0xffffffed
  40b15f:	cmp    eax,0x1
  40b162:	sbb    edx,edx
  40b164:	lea    r8d,[rcx+0x41]
  40b168:	lea    rcx,[rip+0x168b9]        # 0x421a28
  40b16f:	and    edx,0xffffffd7
  40b172:	add    edx,0x57
  40b175:	call   0x407ff0
  40b17a:	mov    edx,DWORD PTR [rsp+0x5c]
  40b17e:	mov    r9,QWORD PTR [rsi+0x8]
  40b182:	lea    rcx,[rip+0x168a6]        # 0x421a2f
  40b189:	mov    r8d,0x20
  40b18f:	call   0x407ff0
  40b194:	mov    rdx,QWORD PTR [rsi+0x48]
  40b198:	test   rdx,rdx
  40b19b:	je     0x40b1a9
  40b19d:	lea    rcx,[rip+0x16893]        # 0x421a37
  40b1a4:	call   0x407ff0
  40b1a9:	lea    rcx,[rip+0x15cfa]        # 0x420eaa
  40b1b0:	call   0x407ff0
  40b1b5:	lea    rax,[rbx+rbx*2]
  40b1b9:	shl    rax,0x5
  40b1bd:	lea    rax,[r14+rax*1+0x10]
  40b1c2:	movsxd rbx,DWORD PTR [rax+0x4]
  40b1c6:	lea    rsi,[rax+0x4]
  40b1ca:	mov    QWORD PTR [rsp+0x38],rsi
  40b1cf:	cmp    ebx,0xffffffff
  40b1d2:	je     0x40b64f
  40b1d8:	lea    rsi,[rbx+rbx*2]
  40b1dc:	shl    rsi,0x5
  40b1e0:	add    rsi,r14
  40b1e3:	mov    eax,DWORD PTR [rsi+0x10]
  40b1e6:	mov    edx,eax
  40b1e8:	and    edx,0x4
  40b1eb:	cmp    edx,0x1
  40b1ee:	mov    edx,eax
  40b1f0:	sbb    r8d,r8d
  40b1f3:	and    edx,0x2
  40b1f6:	and    r8d,0xffffffd8
  40b1fa:	cmp    edx,0x1
  40b1fd:	sbb    ecx,ecx
  40b1ff:	and    eax,0x1
  40b202:	lea    r9d,[r8+0x56]
  40b206:	and    ecx,0xffffffed
  40b209:	cmp    eax,0x1
  40b20c:	sbb    edx,edx
  40b20e:	lea    r8d,[rcx+0x41]
  40b212:	lea    rcx,[rip+0x1680f]        # 0x421a28
  40b219:	and    edx,0xffffffd7
  40b21c:	add    edx,0x57
  40b21f:	call   0x407ff0
  40b224:	mov    edx,DWORD PTR [rsp+0x58]
  40b228:	mov    r9,QWORD PTR [rsi+0x8]
  40b22c:	lea    rcx,[rip+0x167fc]        # 0x421a2f
  40b233:	mov    r8d,0x20
  40b239:	call   0x407ff0
  40b23e:	mov    rdx,QWORD PTR [rsi+0x48]
  40b242:	test   rdx,rdx
  40b245:	je     0x40b253
  40b247:	lea    rcx,[rip+0x167e9]        # 0x421a37
  40b24e:	call   0x407ff0
  40b253:	lea    rcx,[rip+0x15c50]        # 0x420eaa
  40b25a:	call   0x407ff0
  40b25f:	lea    rax,[rbx+rbx*2]
  40b263:	shl    rax,0x5
  40b267:	lea    rax,[r14+rax*1+0x10]
  40b26c:	movsxd rbx,DWORD PTR [rax+0x4]
  40b270:	lea    rsi,[rax+0x4]
  40b274:	mov    QWORD PTR [rsp+0x40],rsi
  40b279:	cmp    ebx,0xffffffff
  40b27c:	je     0x40b638
  40b282:	lea    rsi,[rbx+rbx*2]
  40b286:	shl    rsi,0x5
  40b28a:	add    rsi,r14
  40b28d:	mov    eax,DWORD PTR [rsi+0x10]
  40b290:	mov    edx,eax
  40b292:	and    edx,0x4
  40b295:	cmp    edx,0x1
  40b298:	mov    edx,eax
  40b29a:	sbb    r8d,r8d
  40b29d:	and    edx,0x2
  40b2a0:	and    r8d,0xffffffd8
  40b2a4:	cmp    edx,0x1
  40b2a7:	sbb    ecx,ecx
  40b2a9:	and    eax,0x1
  40b2ac:	lea    r9d,[r8+0x56]
  40b2b0:	and    ecx,0xffffffed
  40b2b3:	cmp    eax,0x1
  40b2b6:	sbb    edx,edx
  40b2b8:	lea    r8d,[rcx+0x41]
  40b2bc:	lea    rcx,[rip+0x16765]        # 0x421a28
  40b2c3:	and    edx,0xffffffd7
  40b2c6:	add    edx,0x57
  40b2c9:	call   0x407ff0
  40b2ce:	mov    edx,DWORD PTR [rsp+0x6c]
  40b2d2:	mov    r9,QWORD PTR [rsi+0x8]
  40b2d6:	lea    rcx,[rip+0x16752]        # 0x421a2f
  40b2dd:	mov    r8d,0x20
  40b2e3:	call   0x407ff0
  40b2e8:	mov    rdx,QWORD PTR [rsi+0x48]
  40b2ec:	test   rdx,rdx
  40b2ef:	je     0x40b2fd
  40b2f1:	lea    rcx,[rip+0x1673f]        # 0x421a37
  40b2f8:	call   0x407ff0
  40b2fd:	lea    rcx,[rip+0x15ba6]        # 0x420eaa
  40b304:	call   0x407ff0
  40b309:	lea    rax,[rbx+rbx*2]
  40b30d:	shl    rax,0x5
  40b311:	lea    rax,[r14+rax*1+0x10]
  40b316:	movsxd rbx,DWORD PTR [rax+0x4]
  40b31a:	lea    rsi,[rax+0x4]
  40b31e:	mov    QWORD PTR [rsp+0x48],rsi
  40b323:	cmp    ebx,0xffffffff
  40b326:	je     0x40b621
  40b32c:	lea    rsi,[rbx+rbx*2]
  40b330:	shl    rsi,0x5
  40b334:	add    rsi,r14
  40b337:	mov    eax,DWORD PTR [rsi+0x10]
  40b33a:	mov    edx,eax
  40b33c:	and    edx,0x4
  40b33f:	cmp    edx,0x1
  40b342:	mov    edx,eax
  40b344:	sbb    r8d,r8d
  40b347:	and    edx,0x2
  40b34a:	and    r8d,0xffffffd8
  40b34e:	cmp    edx,0x1
  40b351:	sbb    ecx,ecx
  40b353:	and    eax,0x1
  40b356:	lea    r9d,[r8+0x56]
  40b35a:	and    ecx,0xffffffed
  40b35d:	cmp    eax,0x1
  40b360:	sbb    edx,edx
  40b362:	lea    r8d,[rcx+0x41]
  40b366:	lea    rcx,[rip+0x166bb]        # 0x421a28
  40b36d:	and    edx,0xffffffd7
  40b370:	add    edx,0x57
  40b373:	call   0x407ff0
  40b378:	mov    edx,DWORD PTR [rsp+0x68]
  40b37c:	mov    r9,QWORD PTR [rsi+0x8]
  40b380:	lea    rcx,[rip+0x166a8]        # 0x421a2f
  40b387:	mov    r8d,0x20
  40b38d:	call   0x407ff0
  40b392:	mov    rdx,QWORD PTR [rsi+0x48]
  40b396:	test   rdx,rdx
  40b399:	je     0x40b3a7
  40b39b:	lea    rcx,[rip+0x16695]        # 0x421a37
  40b3a2:	call   0x407ff0
  40b3a7:	lea    rcx,[rip+0x15afc]        # 0x420eaa
  40b3ae:	call   0x407ff0
  40b3b3:	lea    rax,[rbx+rbx*2]
  40b3b7:	shl    rax,0x5
  40b3bb:	lea    rax,[r14+rax*1+0x10]
  40b3c0:	movsxd rbx,DWORD PTR [rax+0x4]
  40b3c4:	lea    rsi,[rax+0x4]
  40b3c8:	mov    QWORD PTR [rsp+0x50],rsi
  40b3cd:	cmp    ebx,0xffffffff
  40b3d0:	je     0x40b60a
  40b3d6:	lea    rsi,[rbx+rbx*2]
  40b3da:	shl    rsi,0x5
  40b3de:	add    rsi,r14
  40b3e1:	mov    eax,DWORD PTR [rsi+0x10]
  40b3e4:	mov    edx,eax
  40b3e6:	and    edx,0x4
  40b3e9:	cmp    edx,0x1
  40b3ec:	mov    edx,eax
  40b3ee:	sbb    r8d,r8d
  40b3f1:	and    edx,0x2
  40b3f4:	and    r8d,0xffffffd8
  40b3f8:	cmp    edx,0x1
  40b3fb:	sbb    ecx,ecx
  40b3fd:	and    eax,0x1
  40b400:	lea    r9d,[r8+0x56]
  40b404:	and    ecx,0xffffffed
  40b407:	cmp    eax,0x1
  40b40a:	sbb    edx,edx
  40b40c:	lea    r8d,[rcx+0x41]
  40b410:	lea    rcx,[rip+0x16611]        # 0x421a28
  40b417:	and    edx,0xffffffd7
  40b41a:	add    edx,0x57
  40b41d:	call   0x407ff0
  40b422:	mov    edx,DWORD PTR [rsp+0x64]
  40b426:	mov    r9,QWORD PTR [rsi+0x8]
  40b42a:	lea    rcx,[rip+0x165fe]        # 0x421a2f
  40b431:	mov    r8d,0x20
  40b437:	call   0x407ff0
  40b43c:	mov    rdx,QWORD PTR [rsi+0x48]
  40b440:	test   rdx,rdx
  40b443:	je     0x40b451
  40b445:	lea    rcx,[rip+0x165eb]        # 0x421a37
  40b44c:	call   0x407ff0
  40b451:	lea    rcx,[rip+0x15a52]        # 0x420eaa
  40b458:	call   0x407ff0
  40b45d:	lea    rax,[rbx+rbx*2]
  40b461:	shl    rax,0x5
  40b465:	lea    rax,[r14+rax*1+0x10]
  40b46a:	movsxd rbx,DWORD PTR [rax+0x4]
  40b46e:	lea    rsi,[rax+0x4]
  40b472:	cmp    ebx,0xffffffff
  40b475:	je     0x40b5f3
  40b47b:	lea    rdi,[rbx+rbx*2]
  40b47f:	shl    rdi,0x5
  40b483:	add    rdi,r14
  40b486:	mov    eax,DWORD PTR [rdi+0x10]
  40b489:	mov    edx,eax
  40b48b:	and    edx,0x4
  40b48e:	cmp    edx,0x1
  40b491:	mov    edx,eax
  40b493:	sbb    r8d,r8d
  40b496:	and    edx,0x2
  40b499:	and    r8d,0xffffffd8
  40b49d:	cmp    edx,0x1
  40b4a0:	sbb    ecx,ecx
  40b4a2:	and    eax,0x1
  40b4a5:	lea    r9d,[r8+0x56]
  40b4a9:	and    ecx,0xffffffed
  40b4ac:	cmp    eax,0x1
  40b4af:	sbb    edx,edx
  40b4b1:	lea    r8d,[rcx+0x41]
  40b4b5:	lea    rcx,[rip+0x1656c]        # 0x421a28
  40b4bc:	and    edx,0xffffffd7
  40b4bf:	add    edx,0x57
  40b4c2:	call   0x407ff0
  40b4c7:	mov    r9,QWORD PTR [rdi+0x8]
  40b4cb:	lea    rcx,[rip+0x1655d]        # 0x421a2f
  40b4d2:	mov    edx,ebp
  40b4d4:	mov    r8d,0x20
  40b4da:	call   0x407ff0
  40b4df:	mov    rdx,QWORD PTR [rdi+0x48]
  40b4e3:	test   rdx,rdx
  40b4e6:	je     0x40b4f4
  40b4e8:	lea    rcx,[rip+0x16548]        # 0x421a37
  40b4ef:	call   0x407ff0
  40b4f4:	lea    rcx,[rip+0x159af]        # 0x420eaa
  40b4fb:	call   0x407ff0
  40b500:	lea    rax,[rbx+rbx*2]
  40b504:	shl    rax,0x5
  40b508:	lea    rax,[r14+rax*1+0x10]
  40b50d:	movsxd rbx,DWORD PTR [rax+0x4]
  40b511:	lea    rdi,[rax+0x4]
  40b515:	cmp    ebx,0xffffffff
  40b518:	je     0x40b5e3
  40b51e:	xchg   ax,ax
  40b520:	lea    r15,[rbx+rbx*2]
  40b524:	shl    r15,0x5
  40b528:	add    r15,r14
  40b52b:	mov    eax,DWORD PTR [r15+0x10]
  40b52f:	mov    edx,eax
  40b531:	and    edx,0x4
  40b534:	cmp    edx,0x1
  40b537:	mov    edx,eax
  40b539:	sbb    r8d,r8d
  40b53c:	and    edx,0x2
  40b53f:	and    r8d,0xffffffd8
  40b543:	cmp    edx,0x1
  40b546:	sbb    ecx,ecx
  40b548:	and    eax,0x1
  40b54b:	lea    r9d,[r8+0x56]
  40b54f:	and    ecx,0xffffffed
  40b552:	cmp    eax,0x1
  40b555:	sbb    edx,edx
  40b557:	lea    r8d,[rcx+0x41]
  40b55b:	lea    rcx,[rip+0x164c6]        # 0x421a28
  40b562:	and    edx,0xffffffd7
  40b565:	add    edx,0x57
  40b568:	call   0x407ff0
  40b56d:	mov    r9,QWORD PTR [r15+0x8]
  40b571:	lea    rcx,[rip+0x164b7]        # 0x421a2f
  40b578:	mov    edx,r12d
  40b57b:	mov    r8d,0x20
  40b581:	call   0x407ff0
  40b586:	mov    rdx,QWORD PTR [r15+0x48]
  40b58a:	test   rdx,rdx
  40b58d:	je     0x40b59b
  40b58f:	lea    rcx,[rip+0x164a1]        # 0x421a37
  40b596:	call   0x407ff0
  40b59b:	lea    rcx,[rip+0x15908]        # 0x420eaa
  40b5a2:	call   0x407ff0
  40b5a7:	lea    rax,[rbx+rbx*2]
  40b5ab:	shl    rax,0x5
  40b5af:	lea    rax,[r14+rax*1+0x10]
  40b5b4:	mov    ecx,DWORD PTR [rax+0x4]
  40b5b7:	lea    rbx,[rax+0x4]
  40b5bb:	cmp    ecx,0xffffffff
  40b5be:	je     0x40b5d3
  40b5c0:	add    rbx,0x4
  40b5c4:	mov    edx,r13d
  40b5c7:	call   0x40af60
  40b5cc:	mov    ecx,DWORD PTR [rbx]
  40b5ce:	cmp    ecx,0xffffffff
  40b5d1:	jne    0x40b5c0
  40b5d3:	add    rdi,0x4
  40b5d7:	movsxd rbx,DWORD PTR [rdi]
  40b5da:	cmp    ebx,0xffffffff
  40b5dd:	jne    0x40b520
  40b5e3:	add    rsi,0x4
  40b5e7:	movsxd rbx,DWORD PTR [rsi]
  40b5ea:	cmp    ebx,0xffffffff
  40b5ed:	jne    0x40b47b
  40b5f3:	add    QWORD PTR [rsp+0x50],0x4
  40b5f9:	mov    rax,QWORD PTR [rsp+0x50]
  40b5fe:	movsxd rbx,DWORD PTR [rax]
  40b601:	cmp    ebx,0xffffffff
  40b604:	jne    0x40b3d6
  40b60a:	add    QWORD PTR [rsp+0x48],0x4
  40b610:	mov    rax,QWORD PTR [rsp+0x48]
  40b615:	movsxd rbx,DWORD PTR [rax]
  40b618:	cmp    ebx,0xffffffff
  40b61b:	jne    0x40b32c
  40b621:	add    QWORD PTR [rsp+0x40],0x4
  40b627:	mov    rax,QWORD PTR [rsp+0x40]
  40b62c:	movsxd rbx,DWORD PTR [rax]
  40b62f:	cmp    ebx,0xffffffff
  40b632:	jne    0x40b282
  40b638:	add    QWORD PTR [rsp+0x38],0x4
  40b63e:	mov    rax,QWORD PTR [rsp+0x38]
  40b643:	movsxd rbx,DWORD PTR [rax]
  40b646:	cmp    ebx,0xffffffff
  40b649:	jne    0x40b1d8
  40b64f:	add    QWORD PTR [rsp+0x30],0x4
  40b655:	mov    rax,QWORD PTR [rsp+0x30]
  40b65a:	movsxd rbx,DWORD PTR [rax]
  40b65d:	cmp    ebx,0xffffffff
  40b660:	jne    0x40b12e
  40b666:	add    QWORD PTR [rsp+0x28],0x4
  40b66c:	mov    rax,QWORD PTR [rsp+0x28]
  40b671:	movsxd rbx,DWORD PTR [rax]
  40b674:	cmp    ebx,0xffffffff
  40b677:	jne    0x40b084
  40b67d:	add    rsp,0x78
  40b681:	pop    rbx
  40b682:	pop    rsi
  40b683:	pop    rdi
  40b684:	pop    rbp
  40b685:	pop    r12
  40b687:	pop    r13
  40b689:	pop    r14
  40b68b:	pop    r15
  40b68d:	ret    
  40b68e:	xchg   ax,ax
  40b690:	push   rbx
  40b691:	sub    rsp,0x20
  40b695:	lea    rcx,[rip+0x163a4]        # 0x421a40
  40b69c:	call   0x407ff0
  40b6a1:	mov    eax,DWORD PTR [rip+0x12689]        # 0x41dd30
  40b6a7:	mov    edx,eax
  40b6a9:	and    edx,0x4
  40b6ac:	cmp    edx,0x1
  40b6af:	mov    edx,eax
  40b6b1:	sbb    r8d,r8d
  40b6b4:	and    edx,0x2
  40b6b7:	and    r8d,0xffffffd8
  40b6bb:	cmp    edx,0x1
  40b6be:	sbb    ecx,ecx
  40b6c0:	and    eax,0x1
  40b6c3:	lea    r9d,[r8+0x56]
  40b6c7:	and    ecx,0xffffffed
  40b6ca:	cmp    eax,0x1
  40b6cd:	sbb    edx,edx
  40b6cf:	lea    r8d,[rcx+0x41]
  40b6d3:	lea    rcx,[rip+0x1634e]        # 0x421a28
  40b6da:	and    edx,0xffffffd7
  40b6dd:	add    edx,0x57
  40b6e0:	call   0x407ff0
  40b6e5:	mov    r9,QWORD PTR [rip+0x1263c]        # 0x41dd28
  40b6ec:	lea    rcx,[rip+0x1633c]        # 0x421a2f
  40b6f3:	xor    edx,edx
  40b6f5:	mov    r8d,0x20
  40b6fb:	call   0x407ff0
  40b700:	mov    rdx,QWORD PTR [rip+0x12661]        # 0x41dd68
  40b707:	test   rdx,rdx
  40b70a:	je     0x40b718
  40b70c:	lea    rcx,[rip+0x16324]        # 0x421a37
  40b713:	call   0x407ff0
  40b718:	lea    rcx,[rip+0x1578b]        # 0x420eaa
  40b71f:	lea    rbx,[rip+0x1260e]        # 0x41dd34
  40b726:	call   0x407ff0
  40b72b:	mov    ecx,DWORD PTR [rip+0x12603]        # 0x41dd34
  40b731:	cmp    ecx,0xffffffff
  40b734:	je     0x40b755
  40b736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b740:	add    rbx,0x4
  40b744:	mov    edx,0x1
  40b749:	call   0x40af60
  40b74e:	mov    ecx,DWORD PTR [rbx]
  40b750:	cmp    ecx,0xffffffff
  40b753:	jne    0x40b740
  40b755:	xor    eax,eax
  40b757:	add    rsp,0x20
  40b75b:	pop    rbx
  40b75c:	ret    
  40b75d:	nop    DWORD PTR [rax]
  40b760:	push   rdi
  40b761:	push   rsi
  40b762:	push   rbx
  40b763:	sub    rsp,0x20
  40b767:	movsxd rax,DWORD PTR [rcx+0x2c]
  40b76b:	test   r8,r8
  40b76e:	mov    rbx,rcx
  40b771:	mov    rdi,rdx
  40b774:	mov    rsi,r8
  40b777:	jne    0x40b7b0
  40b779:	mov    rdx,QWORD PTR [rcx+rax*8+0x58]
  40b77e:	mov    rax,QWORD PTR [rcx+0x8]
  40b782:	test   BYTE PTR [rax+0x50],0x1
  40b786:	je     0x40b7a8
  40b788:	mov    ecx,DWORD PTR [rdx+0x58]
  40b78b:	test   ecx,ecx
  40b78d:	je     0x40b7e0
  40b78f:	lea    r8,[rip+0x1639d]        # 0x421b33
  40b796:	mov    rdx,rdi
  40b799:	mov    rcx,rbx
  40b79c:	call   QWORD PTR [rax+0x48]
  40b79f:	movsxd rax,DWORD PTR [rbx+0x2c]
  40b7a3:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40b7a8:	add    rsp,0x20
  40b7ac:	pop    rbx
  40b7ad:	pop    rsi
  40b7ae:	pop    rdi
  40b7af:	ret    
  40b7b0:	mov    rax,QWORD PTR [rcx+rax*8+0x58]
  40b7b5:	mov    edx,DWORD PTR [rax+0x58]
  40b7b8:	test   edx,edx
  40b7ba:	je     0x40b800
  40b7bc:	mov    rax,QWORD PTR [rbx+0x8]
  40b7c0:	mov    r8,rsi
  40b7c3:	mov    rdx,rdi
  40b7c6:	mov    rcx,rbx
  40b7c9:	call   QWORD PTR [rax+0x38]
  40b7cc:	movsxd rax,DWORD PTR [rbx+0x2c]
  40b7d0:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40b7d5:	add    rsp,0x20
  40b7d9:	pop    rbx
  40b7da:	pop    rsi
  40b7db:	pop    rdi
  40b7dc:	ret    
  40b7dd:	nop    DWORD PTR [rax]
  40b7e0:	mov    rcx,QWORD PTR [rdx+0x50]
  40b7e4:	xor    r9d,r9d
  40b7e7:	xor    r8d,r8d
  40b7ea:	mov    rdx,rdi
  40b7ed:	call   0x412438
  40b7f2:	test   rax,rax
  40b7f5:	je     0x40b7a8
  40b7f7:	mov    rax,QWORD PTR [rbx+0x8]
  40b7fb:	jmp    0x40b78f
  40b7fd:	nop    DWORD PTR [rax]
  40b800:	mov    rcx,QWORD PTR [rax+0x50]
  40b804:	xor    r9d,r9d
  40b807:	xor    r8d,r8d
  40b80a:	mov    rdx,rdi
  40b80d:	call   0x412438
  40b812:	test   rax,rax
  40b815:	jne    0x40b7bc
  40b817:	jmp    0x40b7a8
  40b819:	nop    DWORD PTR [rax+0x0]
  40b820:	push   rdi
  40b821:	push   rsi
  40b822:	push   rbx
  40b823:	sub    rsp,0x20
  40b827:	movabs rax,0x8000000000000000
  40b831:	cmp    r8,rax
  40b834:	mov    rbx,rcx
  40b837:	mov    rdi,rdx
  40b83a:	mov    rsi,r8
  40b83d:	movsxd rax,DWORD PTR [rcx+0x2c]
  40b841:	je     0x40b874
  40b843:	mov    rax,QWORD PTR [rcx+rax*8+0x58]
  40b848:	mov    edx,DWORD PTR [rax+0x58]
  40b84b:	test   edx,edx
  40b84d:	je     0x40b8d0
  40b853:	mov    rax,QWORD PTR [rbx+0x8]
  40b857:	mov    r8,rsi
  40b85a:	mov    rdx,rdi
  40b85d:	mov    rcx,rbx
  40b860:	call   QWORD PTR [rax+0x38]
  40b863:	movsxd rax,DWORD PTR [rbx+0x2c]
  40b867:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40b86c:	add    rsp,0x20
  40b870:	pop    rbx
  40b871:	pop    rsi
  40b872:	pop    rdi
  40b873:	ret    
  40b874:	mov    rdx,QWORD PTR [rcx+rax*8+0x58]
  40b879:	mov    rax,QWORD PTR [rcx+0x8]
  40b87d:	test   BYTE PTR [rax+0x50],0x1
  40b881:	je     0x40b8a3
  40b883:	mov    ecx,DWORD PTR [rdx+0x58]
  40b886:	test   ecx,ecx
  40b888:	je     0x40b8b0
  40b88a:	lea    r8,[rip+0x162a2]        # 0x421b33
  40b891:	mov    rdx,rdi
  40b894:	mov    rcx,rbx
  40b897:	call   QWORD PTR [rax+0x48]
  40b89a:	movsxd rax,DWORD PTR [rbx+0x2c]
  40b89e:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40b8a3:	add    rsp,0x20
  40b8a7:	pop    rbx
  40b8a8:	pop    rsi
  40b8a9:	pop    rdi
  40b8aa:	ret    
  40b8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8b0:	mov    rcx,QWORD PTR [rdx+0x50]
  40b8b4:	xor    r9d,r9d
  40b8b7:	xor    r8d,r8d
  40b8ba:	mov    rdx,rdi
  40b8bd:	call   0x412438
  40b8c2:	test   rax,rax
  40b8c5:	je     0x40b8a3
  40b8c7:	mov    rax,QWORD PTR [rbx+0x8]
  40b8cb:	jmp    0x40b88a
  40b8cd:	nop    DWORD PTR [rax]
  40b8d0:	mov    rcx,QWORD PTR [rax+0x50]
  40b8d4:	xor    r9d,r9d
  40b8d7:	xor    r8d,r8d
  40b8da:	mov    rdx,rdi
  40b8dd:	call   0x412438
  40b8e2:	test   rax,rax
  40b8e5:	jne    0x40b853
  40b8eb:	jmp    0x40b8a3
  40b8ed:	nop    DWORD PTR [rax]
  40b8f0:	push   r14
  40b8f2:	push   r13
  40b8f4:	push   r12
  40b8f6:	push   rbp
  40b8f7:	push   rdi
  40b8f8:	push   rsi
  40b8f9:	push   rbx
  40b8fa:	sub    rsp,0x420
  40b901:	movsxd rax,DWORD PTR [rcx+0x2c]
  40b905:	mov    rbx,QWORD PTR [rcx+0x18]
  40b909:	mov    rdi,rdx
  40b90c:	mov    r14,r8
  40b90f:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  40b913:	test   edx,edx
  40b915:	jne    0x40ba30
  40b91b:	mov    eax,DWORD PTR [rbx+0xc]
  40b91e:	test   eax,eax
  40b920:	jne    0x40b93a
  40b922:	mov    edx,DWORD PTR [rbx+0x8]
  40b925:	lea    rcx,[rip+0x155aa]        # 0x420ed6
  40b92c:	mov    r8d,0x20
  40b932:	shl    edx,0x2
  40b935:	call   0x407ff0
  40b93a:	lea    r12,[rsp+0x20]
  40b93f:	mov    r8d,0xffffffff
  40b945:	mov    edx,0x1
  40b94a:	lea    r13,[rip+0x16f15]        # 0x422866
  40b951:	mov    rcx,r12
  40b954:	call   0x412480
  40b959:	movzx  esi,BYTE PTR [rdi]
  40b95c:	test   sil,sil
  40b95f:	jne    0x40b99e
  40b961:	jmp    0x40b9e0
  40b963:	mov    r8d,0x1
  40b969:	mov    edx,0x5c
  40b96e:	mov    rcx,r12
  40b971:	call   0x412498
  40b976:	lea    rax,[rip+0x16ee1]        # 0x42285e
  40b97d:	sub    rbx,r13
  40b980:	mov    r8d,0x1
  40b986:	mov    rcx,r12
  40b989:	movsx  edx,BYTE PTR [rax+rbx*1]
  40b98d:	call   0x412498
  40b992:	add    rdi,0x1
  40b996:	movzx  esi,BYTE PTR [rdi]
  40b999:	test   sil,sil
  40b99c:	je     0x40b9e0
  40b99e:	movsx  ebp,sil
  40b9a2:	lea    rcx,[rip+0x16ebd]        # 0x422866
  40b9a9:	mov    edx,ebp
  40b9ab:	call   0x419860
  40b9b0:	test   rax,rax
  40b9b3:	mov    rbx,rax
  40b9b6:	jne    0x40b963
  40b9b8:	cmp    sil,0x1f
  40b9bc:	ja     0x40ba11
  40b9be:	lea    rdx,[rip+0x1617d]        # 0x421b42
  40b9c5:	add    rdi,0x1
  40b9c9:	movzx  r8d,bpl
  40b9cd:	mov    rcx,r12
  40b9d0:	call   0x412478
  40b9d5:	movzx  esi,BYTE PTR [rdi]
  40b9d8:	test   sil,sil
  40b9db:	jne    0x40b99e
  40b9dd:	nop    DWORD PTR [rax]
  40b9e0:	mov    rdx,QWORD PTR [rsp+0x20]
  40b9e5:	lea    rcx,[rip+0x1614b]        # 0x421b37
  40b9ec:	mov    r8,r14
  40b9ef:	call   0x407ff0
  40b9f4:	xor    edx,edx
  40b9f6:	mov    rcx,r12
  40b9f9:	call   0x412488
  40b9fe:	nop
  40b9ff:	add    rsp,0x420
  40ba06:	pop    rbx
  40ba07:	pop    rsi
  40ba08:	pop    rdi
  40ba09:	pop    rbp
  40ba0a:	pop    r12
  40ba0c:	pop    r13
  40ba0e:	pop    r14
  40ba10:	ret    
  40ba11:	mov    r8d,0x1
  40ba17:	mov    edx,ebp
  40ba19:	mov    rcx,r12
  40ba1c:	call   0x412498
  40ba21:	jmp    0x40b992
  40ba26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba30:	mov    rdx,QWORD PTR [rbx+0x10]
  40ba34:	lea    rcx,[rip+0x155ab]        # 0x420fe6
  40ba3b:	call   0x407ff0
  40ba40:	jmp    0x40b91b
  40ba45:	nop
  40ba46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ba50:	push   r14
  40ba52:	push   r13
  40ba54:	push   r12
  40ba56:	push   rbp
  40ba57:	push   rdi
  40ba58:	push   rsi
  40ba59:	push   rbx
  40ba5a:	sub    rsp,0x420
  40ba61:	mov    r8d,0xffffffff
  40ba67:	lea    r14,[rip+0x16df8]        # 0x422866
  40ba6e:	lea    rsi,[rsp+0x20]
  40ba73:	mov    r12,rcx
  40ba76:	mov    rbp,rdx
  40ba79:	mov    edx,0x1
  40ba7e:	mov    rcx,rsi
  40ba81:	call   0x412480
  40ba86:	movzx  edi,BYTE PTR [r12]
  40ba8b:	test   dil,dil
  40ba8e:	jne    0x40bad2
  40ba90:	jmp    0x40bb20
  40ba95:	mov    r8d,0x1
  40ba9b:	mov    edx,0x5c
  40baa0:	mov    rcx,rsi
  40baa3:	call   0x412498
  40baa8:	lea    rax,[rip+0x16daf]        # 0x42285e
  40baaf:	sub    rbx,r14
  40bab2:	mov    r8d,0x1
  40bab8:	mov    rcx,rsi
  40babb:	movsx  edx,BYTE PTR [rax+rbx*1]
  40babf:	call   0x412498
  40bac4:	add    r12,0x1
  40bac8:	movzx  edi,BYTE PTR [r12]
  40bacd:	test   dil,dil
  40bad0:	je     0x40bb20
  40bad2:	movsx  r13d,dil
  40bad6:	lea    rcx,[rip+0x16d89]        # 0x422866
  40badd:	mov    edx,r13d
  40bae0:	call   0x419860
  40bae5:	test   rax,rax
  40bae8:	mov    rbx,rax
  40baeb:	jne    0x40ba95
  40baed:	cmp    dil,0x1f
  40baf1:	ja     0x40bc00
  40baf7:	lea    rdx,[rip+0x16044]        # 0x421b42
  40bafe:	add    r12,0x1
  40bb02:	movzx  r8d,r13b
  40bb06:	mov    rcx,rsi
  40bb09:	call   0x412478
  40bb0e:	movzx  edi,BYTE PTR [r12]
  40bb13:	test   dil,dil
  40bb16:	jne    0x40bad2
  40bb18:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb20:	mov    rdx,QWORD PTR [rsp+0x20]
  40bb25:	lea    rcx,[rip+0x1601f]        # 0x421b4b
  40bb2c:	lea    r13,[rip+0x16d33]        # 0x422866
  40bb33:	call   0x407ff0
  40bb38:	mov    rcx,rsi
  40bb3b:	call   0x412490
  40bb40:	movzx  edi,BYTE PTR [rbp+0x0]
  40bb44:	test   dil,dil
  40bb47:	jne    0x40bb8c
  40bb49:	jmp    0x40bbd0
  40bb4e:	xchg   ax,ax
  40bb50:	mov    r8d,0x1
  40bb56:	mov    edx,0x5c
  40bb5b:	mov    rcx,rsi
  40bb5e:	call   0x412498
  40bb63:	lea    rax,[rip+0x16cf4]        # 0x42285e
  40bb6a:	sub    rbx,r13
  40bb6d:	mov    r8d,0x1
  40bb73:	mov    rcx,rsi
  40bb76:	movsx  edx,BYTE PTR [rax+rbx*1]
  40bb7a:	call   0x412498
  40bb7f:	add    rbp,0x1
  40bb83:	movzx  edi,BYTE PTR [rbp+0x0]
  40bb87:	test   dil,dil
  40bb8a:	je     0x40bbd0
  40bb8c:	movsx  r12d,dil
  40bb90:	lea    rcx,[rip+0x16ccf]        # 0x422866
  40bb97:	mov    edx,r12d
  40bb9a:	call   0x419860
  40bb9f:	test   rax,rax
  40bba2:	mov    rbx,rax
  40bba5:	jne    0x40bb50
  40bba7:	cmp    dil,0x1f
  40bbab:	ja     0x40bc20
  40bbad:	lea    rdx,[rip+0x15f8e]        # 0x421b42
  40bbb4:	add    rbp,0x1
  40bbb8:	movzx  r8d,r12b
  40bbbc:	mov    rcx,rsi
  40bbbf:	call   0x412478
  40bbc4:	movzx  edi,BYTE PTR [rbp+0x0]
  40bbc8:	test   dil,dil
  40bbcb:	jne    0x40bb8c
  40bbcd:	nop    DWORD PTR [rax]
  40bbd0:	mov    rdx,QWORD PTR [rsp+0x20]
  40bbd5:	lea    rcx,[rip+0x15f75]        # 0x421b51
  40bbdc:	call   0x407ff0
  40bbe1:	xor    edx,edx
  40bbe3:	mov    rcx,rsi
  40bbe6:	call   0x412488
  40bbeb:	nop
  40bbec:	add    rsp,0x420
  40bbf3:	pop    rbx
  40bbf4:	pop    rsi
  40bbf5:	pop    rdi
  40bbf6:	pop    rbp
  40bbf7:	pop    r12
  40bbf9:	pop    r13
  40bbfb:	pop    r14
  40bbfd:	ret    
  40bbfe:	xchg   ax,ax
  40bc00:	mov    r8d,0x1
  40bc06:	mov    edx,r13d
  40bc09:	mov    rcx,rsi
  40bc0c:	call   0x412498
  40bc11:	jmp    0x40bac4
  40bc16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc20:	mov    r8d,0x1
  40bc26:	mov    edx,r12d
  40bc29:	mov    rcx,rsi
  40bc2c:	call   0x412498
  40bc31:	jmp    0x40bb7f
  40bc36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc40:	push   rdi
  40bc41:	push   rsi
  40bc42:	push   rbx
  40bc43:	sub    rsp,0x20
  40bc47:	movsxd rax,DWORD PTR [rcx+0x2c]
  40bc4b:	mov    rbx,QWORD PTR [rcx+0x18]
  40bc4f:	mov    rsi,rdx
  40bc52:	mov    rdi,r8
  40bc55:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  40bc59:	test   edx,edx
  40bc5b:	jne    0x40bc90
  40bc5d:	mov    eax,DWORD PTR [rbx+0xc]
  40bc60:	test   eax,eax
  40bc62:	jne    0x40bc7c
  40bc64:	mov    edx,DWORD PTR [rbx+0x8]
  40bc67:	lea    rcx,[rip+0x15268]        # 0x420ed6
  40bc6e:	mov    r8d,0x20
  40bc74:	shl    edx,0x2
  40bc77:	call   0x407ff0
  40bc7c:	mov    rdx,rdi
  40bc7f:	mov    rcx,rsi
  40bc82:	add    rsp,0x20
  40bc86:	pop    rbx
  40bc87:	pop    rsi
  40bc88:	pop    rdi
  40bc89:	jmp    0x40ba50
  40bc8e:	xchg   ax,ax
  40bc90:	mov    rdx,QWORD PTR [rbx+0x10]
  40bc94:	lea    rcx,[rip+0x1534b]        # 0x420fe6
  40bc9b:	call   0x407ff0
  40bca0:	jmp    0x40bc5d
  40bca2:	nop    DWORD PTR [rax+0x0]
  40bca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bcb0:	push   r15
  40bcb2:	push   r14
  40bcb4:	push   r13
  40bcb6:	push   r12
  40bcb8:	push   rbp
  40bcb9:	push   rdi
  40bcba:	push   rsi
  40bcbb:	push   rbx
  40bcbc:	sub    rsp,0x438
  40bcc3:	movsxd rdx,DWORD PTR [rcx+0x2c]
  40bcc7:	mov    r12,QWORD PTR [rcx+0x18]
  40bccb:	mov    QWORD PTR [rsp+0x28],0x0
  40bcd4:	mov    rax,rdx
  40bcd7:	lea    rdx,[rcx+rdx*8]
  40bcdb:	test   eax,eax
  40bcdd:	mov    r13,QWORD PTR [rdx+0x58]
  40bce1:	je     0x40bcfd
  40bce3:	sub    eax,0x1
  40bce6:	mov    rdi,QWORD PTR [rdx+0x50]
  40bcea:	cdqe   
  40bcec:	mov    edx,DWORD PTR [rcx+rax*4+0x30]
  40bcf0:	mov    QWORD PTR [rsp+0x28],rdi
  40bcf5:	test   edx,edx
  40bcf7:	jne    0x40bea0
  40bcfd:	test   BYTE PTR [r13+0x10],0x1
  40bd02:	jne    0x40be70
  40bd08:	lea    rdi,[rsp+0x30]
  40bd0d:	mov    r8d,0xffffffff
  40bd13:	mov    edx,0x1
  40bd18:	lea    rbp,[rip+0x16b47]        # 0x422866
  40bd1f:	mov    rcx,rdi
  40bd22:	call   0x412480
  40bd27:	mov    rsi,QWORD PTR [r13+0x8]
  40bd2b:	movzx  r14d,BYTE PTR [rsi]
  40bd2f:	test   r14b,r14b
  40bd32:	jne    0x40bd7c
  40bd34:	jmp    0x40bdc1
  40bd39:	nop    DWORD PTR [rax+0x0]
  40bd40:	mov    r8d,0x1
  40bd46:	mov    edx,0x5c
  40bd4b:	mov    rcx,rdi
  40bd4e:	call   0x412498
  40bd53:	lea    rax,[rip+0x16b04]        # 0x42285e
  40bd5a:	sub    rbx,rbp
  40bd5d:	mov    r8d,0x1
  40bd63:	mov    rcx,rdi
  40bd66:	movsx  edx,BYTE PTR [rax+rbx*1]
  40bd6a:	call   0x412498
  40bd6f:	add    rsi,0x1
  40bd73:	movzx  r14d,BYTE PTR [rsi]
  40bd77:	test   r14b,r14b
  40bd7a:	je     0x40bdc1
  40bd7c:	movsx  r15d,r14b
  40bd80:	lea    rcx,[rip+0x16adf]        # 0x422866
  40bd87:	mov    edx,r15d
  40bd8a:	call   0x419860
  40bd8f:	test   rax,rax
  40bd92:	mov    rbx,rax
  40bd95:	jne    0x40bd40
  40bd97:	cmp    r14b,0x1f
  40bd9b:	ja     0x40be50
  40bda1:	lea    rdx,[rip+0x15d9a]        # 0x421b42
  40bda8:	add    rsi,0x1
  40bdac:	movzx  r8d,r15b
  40bdb0:	mov    rcx,rdi
  40bdb3:	call   0x412478
  40bdb8:	movzx  r14d,BYTE PTR [rsi]
  40bdbc:	test   r14b,r14b
  40bdbf:	jne    0x40bd7c
  40bdc1:	mov    eax,DWORD PTR [r12+0x8]
  40bdc6:	lea    rcx,[rip+0x15109]        # 0x420ed6
  40bdcd:	mov    r8d,0x20
  40bdd3:	lea    edx,[rax*4+0x0]
  40bdda:	call   0x407ff0
  40bddf:	add    DWORD PTR [r12+0x8],0x1
  40bde5:	test   BYTE PTR [r13+0x10],0x2
  40bdea:	jne    0x40be84
  40bdf0:	mov    rax,QWORD PTR [rsp+0x28]
  40bdf5:	test   rax,rax
  40bdf8:	je     0x40bef3
  40bdfe:	test   BYTE PTR [rax+0x10],0x2
  40be02:	je     0x40beb1
  40be08:	mov    rdx,QWORD PTR [r12+0x18]
  40be0d:	lea    rcx,[rip+0x15d68]        # 0x421b7c
  40be14:	call   0x407ff0
  40be19:	mov    rax,QWORD PTR [rsp+0x28]
  40be1e:	cmp    DWORD PTR [rax],0xf
  40be21:	je     0x40bed0
  40be27:	xor    edx,edx
  40be29:	mov    rcx,rdi
  40be2c:	call   0x412488
  40be31:	nop
  40be32:	add    rsp,0x438
  40be39:	pop    rbx
  40be3a:	pop    rsi
  40be3b:	pop    rdi
  40be3c:	pop    rbp
  40be3d:	pop    r12
  40be3f:	pop    r13
  40be41:	pop    r14
  40be43:	pop    r15
  40be45:	ret    
  40be46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be50:	mov    r8d,0x1
  40be56:	mov    edx,r15d
  40be59:	mov    rcx,rdi
  40be5c:	call   0x412498
  40be61:	jmp    0x40bd6f
  40be66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be70:	lea    rcx,[rip+0x15ce0]        # 0x421b57
  40be77:	call   0x407ff0
  40be7c:	add    DWORD PTR [r12+0x8],0x1
  40be82:	jmp    0x40be32
  40be84:	mov    rdx,QWORD PTR [rsp+0x30]
  40be89:	lea    rcx,[rip+0x15cca]        # 0x421b5a
  40be90:	call   0x407ff0
  40be95:	jmp    0x40be27
  40be97:	nop    WORD PTR [rax+rax*1+0x0]
  40bea0:	lea    rcx,[rip+0x14ffe]        # 0x420ea5
  40bea7:	call   0x407ff0
  40beac:	jmp    0x40bcfd
  40beb1:	mov    r8,QWORD PTR [r12+0x18]
  40beb6:	mov    rdx,QWORD PTR [rsp+0x30]
  40bebb:	lea    rcx,[rip+0x15ca1]        # 0x421b63
  40bec2:	call   0x407ff0
  40bec7:	jmp    0x40be27
  40becc:	nop    DWORD PTR [rax+0x0]
  40bed0:	mov    eax,DWORD PTR [r12+0xc]
  40bed5:	test   eax,eax
  40bed7:	je     0x40bf09
  40bed9:	mov    rdx,QWORD PTR [r13+0x8]
  40bedd:	mov    r8,QWORD PTR [r12+0x10]
  40bee2:	lea    rcx,[rip+0x15c84]        # 0x421b6d
  40bee9:	call   0x407ff0
  40beee:	jmp    0x40be27
  40bef3:	mov    rdx,QWORD PTR [r12+0x18]
  40bef8:	lea    rcx,[rip+0x15c7d]        # 0x421b7c
  40beff:	call   0x407ff0
  40bf04:	jmp    0x40be27
  40bf09:	mov    eax,DWORD PTR [r12+0x8]
  40bf0e:	lea    rcx,[rip+0x14fc1]        # 0x420ed6
  40bf15:	mov    r8d,0x20
  40bf1b:	lea    edx,[rax*4+0x0]
  40bf22:	call   0x407ff0
  40bf27:	jmp    0x40bed9
  40bf29:	nop    DWORD PTR [rax+0x0]
  40bf30:	push   rdi
  40bf31:	push   rsi
  40bf32:	push   rbx
  40bf33:	sub    rsp,0x430
  40bf3a:	mov    r8d,0x1
  40bf40:	lea    rsi,[rsp+0x30]
  40bf45:	mov    rbx,rcx
  40bf48:	mov    rdi,rdx
  40bf4b:	xor    edx,edx
  40bf4d:	mov    rcx,rsi
  40bf50:	call   0x412480
  40bf55:	mov    rax,rdi
  40bf58:	lea    rdx,[rip+0x15c21]        # 0x421b80
  40bf5f:	mov    rcx,rsi
  40bf62:	sar    rax,0x20
  40bf66:	mov    r9d,0x2f
  40bf6c:	mov    r8d,edi
  40bf6f:	mov    DWORD PTR [rsp+0x20],eax
  40bf73:	call   0x412478
  40bf78:	movsxd rax,DWORD PTR [rbx+0x2c]
  40bf7c:	mov    rsi,QWORD PTR [rsp+0x30]
  40bf81:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40bf86:	mov    edx,DWORD PTR [rax+0x58]
  40bf89:	test   edx,edx
  40bf8b:	je     0x40bfb5
  40bf8d:	mov    rax,QWORD PTR [rbx+0x8]
  40bf91:	mov    r8,rsi
  40bf94:	lea    rdx,[rip+0x15bec]        # 0x421b87
  40bf9b:	mov    rcx,rbx
  40bf9e:	call   QWORD PTR [rax+0x48]
  40bfa1:	movsxd rax,DWORD PTR [rbx+0x2c]
  40bfa5:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40bfaa:	add    rsp,0x430
  40bfb1:	pop    rbx
  40bfb2:	pop    rsi
  40bfb3:	pop    rdi
  40bfb4:	ret    
  40bfb5:	mov    rcx,QWORD PTR [rax+0x50]
  40bfb9:	lea    rdx,[rip+0x15bc7]        # 0x421b87
  40bfc0:	xor    r9d,r9d
  40bfc3:	xor    r8d,r8d
  40bfc6:	call   0x412438
  40bfcb:	test   rax,rax
  40bfce:	jne    0x40bf8d
  40bfd0:	jmp    0x40bfaa
  40bfd2:	nop    DWORD PTR [rax+0x0]
  40bfd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfe0:	push   r15
  40bfe2:	push   r14
  40bfe4:	push   r13
  40bfe6:	push   r12
  40bfe8:	push   rbp
  40bfe9:	push   rdi
  40bfea:	push   rsi
  40bfeb:	push   rbx
  40bfec:	sub    rsp,0x98
  40bff3:	cmp    BYTE PTR [r8],0x0
  40bff7:	mov    QWORD PTR [rsp+0x80],r8
  40bfff:	je     0x40c47e
  40c005:	lea    rax,[rsp+0x80]
  40c00d:	lea    r15,[rip+0x1116c]        # 0x41d180
  40c014:	mov    QWORD PTR [rsp+0x68],rdx
  40c019:	mov    QWORD PTR [rsp+0x58],rax
  40c01e:	mov    rcx,QWORD PTR [rsp+0x58]
  40c023:	lea    rdx,[rip+0x15b67]        # 0x421b91
  40c02a:	mov    QWORD PTR [rsp+0x88],0x0
  40c036:	call   0x412348
  40c03b:	test   rax,rax
  40c03e:	mov    r12,rax
  40c041:	je     0x40c45c
  40c047:	mov    rax,QWORD PTR [rsp+0x80]
  40c04f:	lea    rdi,[rsp+0x88]
  40c057:	mov    DWORD PTR [rsp+0x60],0x1
  40c05f:	mov    QWORD PTR [rsp+0x50],rdi
  40c064:	cmp    BYTE PTR [rax],0x3d
  40c067:	je     0x40c3d2
  40c06d:	lea    r13,[rip+0x11154]        # 0x41d1c8
  40c074:	mov    rbx,QWORD PTR [rsp+0x88]
  40c07c:	xor    ebp,ebp
  40c07e:	mov    DWORD PTR [rsp+0x64],ebp
  40c082:	mov    rbp,r12
  40c085:	mov    r12,r13
  40c088:	mov    rsi,QWORD PTR [r12-0x40]
  40c08d:	mov    rcx,rbp
  40c090:	mov    rdx,rsi
  40c093:	call   0x419858
  40c098:	test   eax,eax
  40c09a:	je     0x40c3c2
  40c0a0:	mov    rsi,QWORD PTR [r12]
  40c0a4:	test   rsi,rsi
  40c0a7:	je     0x40c32a
  40c0ad:	mov    rdx,rsi
  40c0b0:	mov    rcx,rbp
  40c0b3:	call   0x419858
  40c0b8:	test   eax,eax
  40c0ba:	jne    0x40c32a
  40c0c0:	lea    r8,[rip+0x15b39]        # 0x421c00
  40c0c7:	xor    ecx,ecx
  40c0c9:	mov    QWORD PTR [rsp+0x20],rsi
  40c0ce:	mov    r9,rbp
  40c0d1:	mov    edx,0x30
  40c0d6:	call   0x412308
  40c0db:	movsxd rax,DWORD PTR [r12-0x48]
  40c0e0:	mov    edi,DWORD PTR [rsp+0x60]
  40c0e4:	add    DWORD PTR [rsp+0x64],0x1
  40c0e9:	lea    rax,[rax+rax*2]
  40c0ed:	shl    rax,0x5
  40c0f1:	test   edi,edi
  40c0f3:	mov    DWORD PTR [r15+rax*1+0x58],edi
  40c0f8:	lea    rdi,[rip+0x11081]        # 0x41d180
  40c0ff:	je     0x40c31a
  40c105:	lea    rax,[rdi+rax*1+0x10]
  40c10a:	lea    rdi,[rax+0x4]
  40c10e:	movsxd rax,DWORD PTR [rax+0x4]
  40c112:	mov    QWORD PTR [rsp+0x38],rdi
  40c117:	cmp    eax,0xffffffff
  40c11a:	je     0x40c32a
  40c120:	mov    QWORD PTR [rsp+0x70],rbp
  40c125:	mov    QWORD PTR [rsp+0x78],r12
  40c12a:	lea    rax,[rax+rax*2]
  40c12e:	shl    rax,0x5
  40c132:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c13b:	lea    rax,[r15+rax*1+0x10]
  40c140:	lea    rdi,[rax+0x4]
  40c144:	movsxd rax,DWORD PTR [rax+0x4]
  40c148:	mov    QWORD PTR [rsp+0x40],rdi
  40c14d:	cmp    eax,0xffffffff
  40c150:	je     0x40c2f7
  40c156:	lea    rax,[rax+rax*2]
  40c15a:	shl    rax,0x5
  40c15e:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c167:	lea    rax,[r15+rax*1+0x10]
  40c16c:	lea    rdi,[rax+0x4]
  40c170:	movsxd rax,DWORD PTR [rax+0x4]
  40c174:	mov    QWORD PTR [rsp+0x48],rdi
  40c179:	cmp    eax,0xffffffff
  40c17c:	je     0x40c2e0
  40c182:	lea    rax,[rax+rax*2]
  40c186:	shl    rax,0x5
  40c18a:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c193:	lea    rax,[r15+rax*1+0x10]
  40c198:	lea    rbp,[rax+0x4]
  40c19c:	movsxd rax,DWORD PTR [rax+0x4]
  40c1a0:	cmp    eax,0xffffffff
  40c1a3:	je     0x40c2c9
  40c1a9:	lea    rax,[rax+rax*2]
  40c1ad:	shl    rax,0x5
  40c1b1:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c1ba:	lea    rax,[r15+rax*1+0x10]
  40c1bf:	lea    r12,[rax+0x4]
  40c1c3:	movsxd rax,DWORD PTR [rax+0x4]
  40c1c7:	cmp    eax,0xffffffff
  40c1ca:	je     0x40c2b8
  40c1d0:	lea    rax,[rax+rax*2]
  40c1d4:	shl    rax,0x5
  40c1d8:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c1e1:	lea    rax,[r15+rax*1+0x10]
  40c1e6:	lea    r13,[rax+0x4]
  40c1ea:	movsxd rax,DWORD PTR [rax+0x4]
  40c1ee:	cmp    eax,0xffffffff
  40c1f1:	je     0x40c2a7
  40c1f7:	lea    rax,[rax+rax*2]
  40c1fb:	shl    rax,0x5
  40c1ff:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c208:	lea    rax,[r15+rax*1+0x10]
  40c20d:	lea    rdi,[rax+0x4]
  40c211:	movsxd rax,DWORD PTR [rax+0x4]
  40c215:	cmp    eax,0xffffffff
  40c218:	je     0x40c296
  40c21a:	nop    WORD PTR [rax+rax*1+0x0]
  40c220:	lea    rax,[rax+rax*2]
  40c224:	shl    rax,0x5
  40c228:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c231:	lea    rax,[r15+rax*1+0x10]
  40c236:	lea    rsi,[rax+0x4]
  40c23a:	movsxd rax,DWORD PTR [rax+0x4]
  40c23e:	cmp    eax,0xffffffff
  40c241:	je     0x40c28a
  40c243:	lea    rax,[rax+rax*2]
  40c247:	shl    rax,0x5
  40c24b:	mov    DWORD PTR [r15+rax*1+0x58],0x1
  40c254:	lea    rax,[r15+rax*1+0x10]
  40c259:	mov    ecx,DWORD PTR [rax+0x4]
  40c25c:	lea    r14,[rax+0x4]
  40c260:	cmp    ecx,0xffffffff
  40c263:	je     0x40c27e
  40c265:	add    r14,0x4
  40c269:	mov    r8,rbx
  40c26c:	mov    edx,0x1
  40c271:	call   0x409a40
  40c276:	mov    ecx,DWORD PTR [r14]
  40c279:	cmp    ecx,0xffffffff
  40c27c:	jne    0x40c265
  40c27e:	add    rsi,0x4
  40c282:	movsxd rax,DWORD PTR [rsi]
  40c285:	cmp    eax,0xffffffff
  40c288:	jne    0x40c243
  40c28a:	add    rdi,0x4
  40c28e:	movsxd rax,DWORD PTR [rdi]
  40c291:	cmp    eax,0xffffffff
  40c294:	jne    0x40c220
  40c296:	add    r13,0x4
  40c29a:	movsxd rax,DWORD PTR [r13+0x0]
  40c29e:	cmp    eax,0xffffffff
  40c2a1:	jne    0x40c1f7
  40c2a7:	add    r12,0x4
  40c2ab:	movsxd rax,DWORD PTR [r12]
  40c2af:	cmp    eax,0xffffffff
  40c2b2:	jne    0x40c1d0
  40c2b8:	add    rbp,0x4
  40c2bc:	movsxd rax,DWORD PTR [rbp+0x0]
  40c2c0:	cmp    eax,0xffffffff
  40c2c3:	jne    0x40c1a9
  40c2c9:	add    QWORD PTR [rsp+0x48],0x4
  40c2cf:	mov    rax,QWORD PTR [rsp+0x48]
  40c2d4:	movsxd rax,DWORD PTR [rax]
  40c2d7:	cmp    eax,0xffffffff
  40c2da:	jne    0x40c182
  40c2e0:	add    QWORD PTR [rsp+0x40],0x4
  40c2e6:	mov    rax,QWORD PTR [rsp+0x40]
  40c2eb:	movsxd rax,DWORD PTR [rax]
  40c2ee:	cmp    eax,0xffffffff
  40c2f1:	jne    0x40c156
  40c2f7:	add    QWORD PTR [rsp+0x38],0x4
  40c2fd:	mov    rax,QWORD PTR [rsp+0x38]
  40c302:	movsxd rax,DWORD PTR [rax]
  40c305:	cmp    eax,0xffffffff
  40c308:	jne    0x40c12a
  40c30e:	mov    rbp,QWORD PTR [rsp+0x70]
  40c313:	mov    r12,QWORD PTR [rsp+0x78]
  40c318:	jmp    0x40c32a
  40c31a:	lea    rcx,[rdi+rax*1+0x50]
  40c31f:	xor    r8d,r8d
  40c322:	mov    rdx,rbx
  40c325:	call   0x412448
  40c32a:	lea    rax,[rip+0x11d37]        # 0x41e068
  40c331:	add    r12,0x60
  40c335:	cmp    r12,rax
  40c338:	jne    0x40c088
  40c33e:	mov    r12,rbp
  40c341:	mov    ebp,DWORD PTR [rsp+0x64]
  40c345:	test   ebp,ebp
  40c347:	je     0x40c381
  40c349:	mov    rcx,QWORD PTR [rsp+0x50]
  40c34e:	call   0x412440
  40c353:	mov    rcx,r12
  40c356:	call   0x4123c0
  40c35b:	mov    rax,QWORD PTR [rsp+0x80]
  40c363:	cmp    BYTE PTR [rax],0x0
  40c366:	je     0x40c374
  40c368:	add    rax,0x1
  40c36c:	mov    QWORD PTR [rsp+0x80],rax
  40c374:	cmp    BYTE PTR [rax],0x0
  40c377:	jne    0x40c01e
  40c37d:	mov    eax,ebp
  40c37f:	jmp    0x40c3ae
  40c381:	lea    r8,[rip+0x158a4]        # 0x421c2c
  40c388:	mov    r9,r12
  40c38b:	mov    edx,0x10
  40c390:	xor    ecx,ecx
  40c392:	call   0x412308
  40c397:	mov    rcx,QWORD PTR [rsp+0x50]
  40c39c:	call   0x412440
  40c3a1:	mov    rcx,r12
  40c3a4:	call   0x4123c0
  40c3a9:	mov    eax,0xffffffea
  40c3ae:	add    rsp,0x98
  40c3b5:	pop    rbx
  40c3b6:	pop    rsi
  40c3b7:	pop    rdi
  40c3b8:	pop    rbp
  40c3b9:	pop    r12
  40c3bb:	pop    r13
  40c3bd:	pop    r14
  40c3bf:	pop    r15
  40c3c1:	ret    
  40c3c2:	mov    rax,QWORD PTR [r12]
  40c3c6:	test   rax,rax
  40c3c9:	cmovne rsi,rax
  40c3cd:	jmp    0x40c0c0
  40c3d2:	add    rax,0x1
  40c3d6:	mov    QWORD PTR [rsp+0x80],rax
  40c3de:	movzx  eax,BYTE PTR [rax]
  40c3e1:	cmp    al,0x3a
  40c3e3:	je     0x40c485
  40c3e9:	test   al,al
  40c3eb:	je     0x40c485
  40c3f1:	mov    rcx,QWORD PTR [rsp+0x58]
  40c3f6:	lea    rdx,[rip+0x157c1]        # 0x421bbe
  40c3fd:	call   0x412348
  40c402:	test   rax,rax
  40c405:	mov    rbx,rax
  40c408:	je     0x40c485
  40c40a:	lea    r8,[rip+0x157b7]        # 0x421bc8
  40c411:	mov    r9,rax
  40c414:	xor    ecx,ecx
  40c416:	mov    edx,0x28
  40c41b:	mov    QWORD PTR [rsp+0x20],r12
  40c420:	call   0x412308
  40c425:	mov    rcx,QWORD PTR [rsp+0x50]
  40c42a:	lea    r8,[rip+0x14a92]        # 0x420ec3
  40c431:	mov    rdx,rbx
  40c434:	mov    r9d,0x4
  40c43a:	call   0x412428
  40c43f:	mov    rdx,QWORD PTR [rsp+0x80]
  40c447:	movzx  eax,BYTE PTR [rdx]
  40c44a:	cmp    al,0x2c
  40c44c:	jne    0x40c3e1
  40c44e:	lea    rax,[rdx+0x1]
  40c452:	mov    QWORD PTR [rsp+0x80],rax
  40c45a:	jmp    0x40c3de
  40c45c:	mov    r9,QWORD PTR [rsp+0x68]
  40c461:	lea    r8,[rip+0x15730]        # 0x421b98
  40c468:	mov    edx,0x10
  40c46d:	xor    ecx,ecx
  40c46f:	call   0x412308
  40c474:	mov    eax,0xffffffea
  40c479:	jmp    0x40c3ae
  40c47e:	xor    eax,eax
  40c480:	jmp    0x40c3ae
  40c485:	mov    DWORD PTR [rsp+0x60],0x0
  40c48d:	jmp    0x40c06d
  40c492:	nop    DWORD PTR [rax+0x0]
  40c496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4a0:	push   rbp
  40c4a1:	push   rdi
  40c4a2:	push   rsi
  40c4a3:	push   rbx
  40c4a4:	sub    rsp,0x38
  40c4a8:	mov    rbp,rcx
  40c4ab:	lea    rcx,[rip+0x15795]        # 0x421c47
  40c4b2:	mov    rdi,rdx
  40c4b5:	mov    rdx,r8
  40c4b8:	mov    rsi,r8
  40c4bb:	call   0x4124b0
  40c4c0:	test   rax,rax
  40c4c3:	mov    rbx,rax
  40c4c6:	je     0x40c510
  40c4c8:	lea    r8,[rip+0x15789]        # 0x421c58
  40c4cf:	mov    r9,rdi
  40c4d2:	mov    QWORD PTR [rsp+0x20],rsi
  40c4d7:	mov    edx,0x18
  40c4dc:	xor    ecx,ecx
  40c4de:	call   0x412308
  40c4e3:	mov    r8,rbx
  40c4e6:	mov    rdx,rdi
  40c4e9:	mov    rcx,rbp
  40c4ec:	call   0x40bfe0
  40c4f1:	mov    rcx,rbx
  40c4f4:	mov    esi,eax
  40c4f6:	call   0x4123c0
  40c4fb:	mov    eax,esi
  40c4fd:	add    rsp,0x38
  40c501:	pop    rbx
  40c502:	pop    rsi
  40c503:	pop    rdi
  40c504:	pop    rbp
  40c505:	ret    
  40c506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c510:	mov    eax,0xfffffff4
  40c515:	jmp    0x40c4fd
  40c517:	nop    WORD PTR [rax+rax*1+0x0]
  40c520:	push   rdi
  40c521:	push   rsi
  40c522:	push   rbx
  40c523:	sub    rsp,0xb0
  40c52a:	movabs rax,0x8000000000000000
  40c534:	cmp    r8,rax
  40c537:	mov    rbx,rcx
  40c53a:	mov    rsi,rdx
  40c53d:	je     0x40c5a0
  40c53f:	pxor   xmm1,xmm1
  40c543:	lea    rdi,[rsp+0x30]
  40c548:	lea    rax,[rip+0x18aff]        # 0x42504e
  40c54f:	pxor   xmm2,xmm2
  40c553:	lea    rdx,[rsp+0x20]
  40c558:	pxor   xmm0,xmm0
  40c55c:	mov    rcx,rdi
  40c55f:	cvtsi2sd xmm1,DWORD PTR [r9]
  40c564:	cvtsi2sd xmm2,DWORD PTR [r9+0x4]
  40c56a:	divsd  xmm1,xmm2
  40c56e:	mov    QWORD PTR [rsp+0x28],rax
  40c573:	cvtsi2sd xmm0,r8
  40c578:	mulsd  xmm0,xmm1
  40c57c:	movq   QWORD PTR [rsp+0x20],xmm0
  40c582:	call   0x409790
  40c587:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c58b:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40c590:	mov    edx,DWORD PTR [rax+0x58]
  40c593:	test   edx,edx
  40c595:	je     0x40c600
  40c597:	mov    rax,QWORD PTR [rbx+0x8]
  40c59b:	mov    r8,rdi
  40c59e:	jmp    0x40c5c1
  40c5a0:	movsxd rax,DWORD PTR [rcx+0x2c]
  40c5a4:	mov    rdx,QWORD PTR [rcx+rax*8+0x58]
  40c5a9:	mov    rax,QWORD PTR [rcx+0x8]
  40c5ad:	test   BYTE PTR [rax+0x50],0x1
  40c5b1:	je     0x40c5d3
  40c5b3:	mov    ecx,DWORD PTR [rdx+0x58]
  40c5b6:	test   ecx,ecx
  40c5b8:	je     0x40c5e0
  40c5ba:	lea    r8,[rip+0x15572]        # 0x421b33
  40c5c1:	mov    rdx,rsi
  40c5c4:	mov    rcx,rbx
  40c5c7:	call   QWORD PTR [rax+0x48]
  40c5ca:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c5ce:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40c5d3:	add    rsp,0xb0
  40c5da:	pop    rbx
  40c5db:	pop    rsi
  40c5dc:	pop    rdi
  40c5dd:	ret    
  40c5de:	xchg   ax,ax
  40c5e0:	mov    rcx,QWORD PTR [rdx+0x50]
  40c5e4:	xor    r9d,r9d
  40c5e7:	xor    r8d,r8d
  40c5ea:	mov    rdx,rsi
  40c5ed:	call   0x412438
  40c5f2:	test   rax,rax
  40c5f5:	je     0x40c5d3
  40c5f7:	mov    rax,QWORD PTR [rbx+0x8]
  40c5fb:	jmp    0x40c5ba
  40c5fd:	nop    DWORD PTR [rax]
  40c600:	mov    rcx,QWORD PTR [rax+0x50]
  40c604:	xor    r9d,r9d
  40c607:	xor    r8d,r8d
  40c60a:	mov    rdx,rsi
  40c60d:	call   0x412438
  40c612:	test   rax,rax
  40c615:	jne    0x40c597
  40c617:	jmp    0x40c5d3
  40c619:	nop    DWORD PTR [rax+0x0]
  40c620:	push   rdi
  40c621:	push   rsi
  40c622:	push   rbx
  40c623:	sub    rsp,0xb0
  40c62a:	mov    eax,DWORD PTR [rsp+0xf0]
  40c631:	mov    rbx,rcx
  40c634:	mov    rsi,rdx
  40c637:	test   eax,eax
  40c639:	jne    0x40c64a
  40c63b:	movabs rdx,0x8000000000000000
  40c645:	cmp    r8,rdx
  40c648:	je     0x40c653
  40c64a:	test   eax,eax
  40c64c:	je     0x40c695
  40c64e:	test   r8,r8
  40c651:	jne    0x40c695
  40c653:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c657:	mov    rdx,QWORD PTR [rbx+rax*8+0x58]
  40c65c:	mov    rax,QWORD PTR [rbx+0x8]
  40c660:	test   BYTE PTR [rax+0x50],0x1
  40c664:	je     0x40c68a
  40c666:	mov    ecx,DWORD PTR [rdx+0x58]
  40c669:	test   ecx,ecx
  40c66b:	je     0x40c700
  40c671:	lea    r8,[rip+0x154bb]        # 0x421b33
  40c678:	mov    rdx,rsi
  40c67b:	mov    rcx,rbx
  40c67e:	call   QWORD PTR [rax+0x48]
  40c681:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c685:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40c68a:	add    rsp,0xb0
  40c691:	pop    rbx
  40c692:	pop    rsi
  40c693:	pop    rdi
  40c694:	ret    
  40c695:	pxor   xmm1,xmm1
  40c699:	lea    rdi,[rsp+0x30]
  40c69e:	pxor   xmm2,xmm2
  40c6a2:	lea    rax,[rip+0x189a5]        # 0x42504e
  40c6a9:	pxor   xmm0,xmm0
  40c6ad:	lea    rdx,[rsp+0x20]
  40c6b2:	cvtsi2sd xmm1,DWORD PTR [r9]
  40c6b7:	mov    rcx,rdi
  40c6ba:	cvtsi2sd xmm2,DWORD PTR [r9+0x4]
  40c6c0:	divsd  xmm1,xmm2
  40c6c4:	mov    QWORD PTR [rsp+0x28],rax
  40c6c9:	cvtsi2sd xmm0,r8
  40c6ce:	mulsd  xmm0,xmm1
  40c6d2:	movq   QWORD PTR [rsp+0x20],xmm0
  40c6d8:	call   0x409790
  40c6dd:	movsxd rax,DWORD PTR [rbx+0x2c]
  40c6e1:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40c6e6:	mov    edx,DWORD PTR [rax+0x58]
  40c6e9:	test   edx,edx
  40c6eb:	je     0x40c724
  40c6ed:	mov    rax,QWORD PTR [rbx+0x8]
  40c6f1:	mov    r8,rdi
  40c6f4:	jmp    0x40c678
  40c6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c700:	mov    rcx,QWORD PTR [rdx+0x50]
  40c704:	xor    r9d,r9d
  40c707:	xor    r8d,r8d
  40c70a:	mov    rdx,rsi
  40c70d:	call   0x412438
  40c712:	test   rax,rax
  40c715:	je     0x40c68a
  40c71b:	mov    rax,QWORD PTR [rbx+0x8]
  40c71f:	jmp    0x40c671
  40c724:	mov    rcx,QWORD PTR [rax+0x50]
  40c728:	xor    r9d,r9d
  40c72b:	xor    r8d,r8d
  40c72e:	mov    rdx,rsi
  40c731:	call   0x412438
  40c736:	test   rax,rax
  40c739:	jne    0x40c6ed
  40c73b:	jmp    0x40c68a
  40c740:	push   r13
  40c742:	push   r12
  40c744:	push   rbp
  40c745:	push   rdi
  40c746:	push   rsi
  40c747:	push   rbx
  40c748:	sub    rsp,0x428
  40c74f:	movsxd rax,DWORD PTR [rcx+0x2c]
  40c753:	mov    r13,QWORD PTR [rcx+0x18]
  40c757:	lea    rdi,[rsp+0x20]
  40c75c:	mov    rsi,rcx
  40c75f:	mov    rbp,rdx
  40c762:	mov    rbx,r8
  40c765:	mov    edx,0x1
  40c76a:	mov    r8d,0xffffffff
  40c770:	mov    r12,QWORD PTR [rcx+rax*8+0x58]
  40c775:	mov    rcx,rdi
  40c778:	call   0x412480
  40c77d:	test   BYTE PTR [r12+0x10],0x4
  40c783:	jne    0x40c8e1
  40c789:	movsxd rax,DWORD PTR [rsi+0x2c]
  40c78d:	mov    eax,DWORD PTR [rsi+rax*4+0x30]
  40c791:	test   eax,eax
  40c793:	jne    0x40c8d0
  40c799:	movzx  r8d,BYTE PTR [rbx]
  40c79d:	lea    rsi,[rip+0x15538]        # 0x421cdc
  40c7a4:	test   r8b,r8b
  40c7a7:	je     0x40c7fd
  40c7a9:	nop    DWORD PTR [rax+0x0]
  40c7b0:	lea    eax,[r8-0x22]
  40c7b4:	cmp    al,0x1c
  40c7b6:	ja     0x40c8b0
  40c7bc:	movzx  eax,al
  40c7bf:	movsxd rax,DWORD PTR [rsi+rax*4]
  40c7c3:	add    rax,rsi
  40c7c6:	jmp    rax
  40c7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c7d0:	lea    r8,[rip+0x154db]        # 0x421cb2
  40c7d7:	lea    rdx,[rip+0x14808]        # 0x420fe6
  40c7de:	mov    rcx,rdi
  40c7e1:	call   0x412478
  40c7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c7f0:	add    rbx,0x1
  40c7f4:	movzx  r8d,BYTE PTR [rbx]
  40c7f8:	test   r8b,r8b
  40c7fb:	jne    0x40c7b0
  40c7fd:	mov    r8,QWORD PTR [rsp+0x20]
  40c802:	lea    rcx,[rip+0x154cb]        # 0x421cd4
  40c809:	mov    rdx,rbp
  40c80c:	call   0x407ff0
  40c811:	xor    edx,edx
  40c813:	mov    rcx,rdi
  40c816:	call   0x412488
  40c81b:	nop
  40c81c:	add    rsp,0x428
  40c823:	pop    rbx
  40c824:	pop    rsi
  40c825:	pop    rdi
  40c826:	pop    rbp
  40c827:	pop    r12
  40c829:	pop    r13
  40c82b:	ret    
  40c82c:	nop    DWORD PTR [rax+0x0]
  40c830:	lea    r8,[rip+0x15476]        # 0x421cad
  40c837:	lea    rdx,[rip+0x147a8]        # 0x420fe6
  40c83e:	mov    rcx,rdi
  40c841:	call   0x412478
  40c846:	jmp    0x40c7f0
  40c848:	nop    DWORD PTR [rax+rax*1+0x0]
  40c850:	lea    r8,[rip+0x15467]        # 0x421cbe
  40c857:	lea    rdx,[rip+0x14788]        # 0x420fe6
  40c85e:	mov    rcx,rdi
  40c861:	call   0x412478
  40c866:	jmp    0x40c7f0
  40c868:	nop    DWORD PTR [rax+rax*1+0x0]
  40c870:	lea    r8,[rip+0x15430]        # 0x421ca7
  40c877:	lea    rdx,[rip+0x14768]        # 0x420fe6
  40c87e:	mov    rcx,rdi
  40c881:	call   0x412478
  40c886:	jmp    0x40c7f0
  40c88b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c890:	lea    r8,[rip+0x15420]        # 0x421cb7
  40c897:	lea    rdx,[rip+0x14748]        # 0x420fe6
  40c89e:	mov    rcx,rdi
  40c8a1:	call   0x412478
  40c8a6:	jmp    0x40c7f0
  40c8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8b0:	movsx  edx,r8b
  40c8b4:	mov    rcx,rdi
  40c8b7:	mov    r8d,0x1
  40c8bd:	call   0x412498
  40c8c2:	jmp    0x40c7f0
  40c8c7:	nop    WORD PTR [rax+rax*1+0x0]
  40c8d0:	lea    rcx,[rip+0x145d1]        # 0x420ea8
  40c8d7:	call   0x407ff0
  40c8dc:	jmp    0x40c799
  40c8e1:	mov    edx,DWORD PTR [r13+0xc]
  40c8e5:	lea    rcx,[rip+0x145ea]        # 0x420ed6
  40c8ec:	mov    r8d,0x20
  40c8f2:	lea    rsi,[rip+0x15457]        # 0x421d50
  40c8f9:	shl    edx,0x2
  40c8fc:	call   0x407ff0
  40c901:	movsx  edx,BYTE PTR [rbp+0x0]
  40c905:	test   dl,dl
  40c907:	je     0x40c95c
  40c909:	nop    DWORD PTR [rax+0x0]
  40c910:	lea    eax,[rdx-0x22]
  40c913:	cmp    al,0x1c
  40c915:	ja     0x40cb03
  40c91b:	movzx  eax,al
  40c91e:	movsxd rax,DWORD PTR [rsi+rax*4]
  40c922:	add    rax,rsi
  40c925:	jmp    rax
  40c927:	nop    WORD PTR [rax+rax*1+0x0]
  40c930:	lea    r8,[rip+0x1537b]        # 0x421cb2
  40c937:	lea    rdx,[rip+0x146a8]        # 0x420fe6
  40c93e:	mov    rcx,rdi
  40c941:	call   0x412478
  40c946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c950:	add    rbp,0x1
  40c954:	movsx  edx,BYTE PTR [rbp+0x0]
  40c958:	test   dl,dl
  40c95a:	jne    0x40c910
  40c95c:	mov    rdx,QWORD PTR [r12+0x40]
  40c961:	mov    r8,QWORD PTR [rsp+0x20]
  40c966:	lea    rcx,[rip+0x1532d]        # 0x421c9a
  40c96d:	lea    rsi,[rip+0x15450]        # 0x421dc4
  40c974:	call   0x407ff0
  40c979:	mov    rcx,rdi
  40c97c:	call   0x412490
  40c981:	movsx  edx,BYTE PTR [rbx]
  40c984:	test   dl,dl
  40c986:	je     0x40ca5f
  40c98c:	nop    DWORD PTR [rax+0x0]
  40c990:	lea    eax,[rdx-0x22]
  40c993:	cmp    al,0x1c
  40c995:	ja     0x40caf0
  40c99b:	movzx  eax,al
  40c99e:	movsxd rax,DWORD PTR [rsi+rax*4]
  40c9a2:	add    rax,rsi
  40c9a5:	jmp    rax
  40c9a7:	nop    WORD PTR [rax+rax*1+0x0]
  40c9b0:	lea    r8,[rip+0x152f6]        # 0x421cad
  40c9b7:	lea    rdx,[rip+0x14628]        # 0x420fe6
  40c9be:	mov    rcx,rdi
  40c9c1:	call   0x412478
  40c9c6:	jmp    0x40c950
  40c9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9d0:	lea    r8,[rip+0x152e7]        # 0x421cbe
  40c9d7:	lea    rdx,[rip+0x14608]        # 0x420fe6
  40c9de:	mov    rcx,rdi
  40c9e1:	call   0x412478
  40c9e6:	jmp    0x40c950
  40c9eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c9f0:	lea    r8,[rip+0x152b0]        # 0x421ca7
  40c9f7:	lea    rdx,[rip+0x145e8]        # 0x420fe6
  40c9fe:	mov    rcx,rdi
  40ca01:	call   0x412478
  40ca06:	jmp    0x40c950
  40ca0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca10:	lea    r8,[rip+0x152a0]        # 0x421cb7
  40ca17:	lea    rdx,[rip+0x145c8]        # 0x420fe6
  40ca1e:	mov    rcx,rdi
  40ca21:	call   0x412478
  40ca26:	jmp    0x40c950
  40ca2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca30:	lea    r8,[rip+0x1527b]        # 0x421cb2
  40ca37:	lea    rdx,[rip+0x145a8]        # 0x420fe6
  40ca3e:	mov    rcx,rdi
  40ca41:	call   0x412478
  40ca46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca50:	add    rbx,0x1
  40ca54:	movsx  edx,BYTE PTR [rbx]
  40ca57:	test   dl,dl
  40ca59:	jne    0x40c990
  40ca5f:	mov    rdx,QWORD PTR [rsp+0x20]
  40ca64:	lea    rcx,[rip+0x1525a]        # 0x421cc5
  40ca6b:	call   0x407ff0
  40ca70:	jmp    0x40c811
  40ca75:	lea    r8,[rip+0x15231]        # 0x421cad
  40ca7c:	lea    rdx,[rip+0x14563]        # 0x420fe6
  40ca83:	mov    rcx,rdi
  40ca86:	call   0x412478
  40ca8b:	jmp    0x40ca50
  40ca8d:	nop    DWORD PTR [rax]
  40ca90:	lea    r8,[rip+0x15227]        # 0x421cbe
  40ca97:	lea    rdx,[rip+0x14548]        # 0x420fe6
  40ca9e:	mov    rcx,rdi
  40caa1:	call   0x412478
  40caa6:	jmp    0x40ca50
  40caa8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cab0:	lea    r8,[rip+0x151f0]        # 0x421ca7
  40cab7:	lea    rdx,[rip+0x14528]        # 0x420fe6
  40cabe:	mov    rcx,rdi
  40cac1:	call   0x412478
  40cac6:	jmp    0x40ca50
  40cac8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cad0:	lea    r8,[rip+0x151e0]        # 0x421cb7
  40cad7:	lea    rdx,[rip+0x14508]        # 0x420fe6
  40cade:	mov    rcx,rdi
  40cae1:	call   0x412478
  40cae6:	jmp    0x40ca50
  40caeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40caf0:	mov    r8d,0x1
  40caf6:	mov    rcx,rdi
  40caf9:	call   0x412498
  40cafe:	jmp    0x40ca50
  40cb03:	mov    r8d,0x1
  40cb09:	mov    rcx,rdi
  40cb0c:	call   0x412498
  40cb11:	jmp    0x40c950
  40cb16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb20:	push   r15
  40cb22:	push   r14
  40cb24:	push   r13
  40cb26:	push   r12
  40cb28:	push   rbp
  40cb29:	push   rdi
  40cb2a:	push   rsi
  40cb2b:	push   rbx
  40cb2c:	sub    rsp,0x38
  40cb30:	movsxd rax,DWORD PTR [rip+0x1113d]        # 0x41dc74
  40cb37:	lea    rdi,[rip+0x11136]        # 0x41dc74
  40cb3e:	mov    DWORD PTR [rip+0x11170],0x1        # 0x41dcb8
  40cb48:	lea    rbx,[rip+0x10631]        # 0x41d180
  40cb4f:	mov    QWORD PTR [rsp+0x20],rdi
  40cb54:	cmp    eax,0xffffffff
  40cb57:	je     0x40cd1e
  40cb5d:	lea    rax,[rax+rax*2]
  40cb61:	shl    rax,0x5
  40cb65:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cb6d:	lea    rax,[rbx+rax*1+0x10]
  40cb72:	lea    rdi,[rax+0x4]
  40cb76:	movsxd rax,DWORD PTR [rax+0x4]
  40cb7a:	mov    QWORD PTR [rsp+0x28],rdi
  40cb7f:	cmp    eax,0xffffffff
  40cb82:	je     0x40cd07
  40cb88:	lea    rax,[rax+rax*2]
  40cb8c:	shl    rax,0x5
  40cb90:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cb98:	lea    rax,[rbx+rax*1+0x10]
  40cb9d:	lea    r12,[rax+0x4]
  40cba1:	movsxd rax,DWORD PTR [rax+0x4]
  40cba5:	cmp    eax,0xffffffff
  40cba8:	je     0x40ccf0
  40cbae:	lea    rax,[rax+rax*2]
  40cbb2:	shl    rax,0x5
  40cbb6:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cbbe:	lea    rax,[rbx+rax*1+0x10]
  40cbc3:	lea    r13,[rax+0x4]
  40cbc7:	movsxd rax,DWORD PTR [rax+0x4]
  40cbcb:	cmp    eax,0xffffffff
  40cbce:	je     0x40ccdf
  40cbd4:	lea    rax,[rax+rax*2]
  40cbd8:	shl    rax,0x5
  40cbdc:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cbe4:	lea    rax,[rbx+rax*1+0x10]
  40cbe9:	lea    r14,[rax+0x4]
  40cbed:	movsxd rax,DWORD PTR [rax+0x4]
  40cbf1:	cmp    eax,0xffffffff
  40cbf4:	je     0x40ccce
  40cbfa:	lea    rax,[rax+rax*2]
  40cbfe:	shl    rax,0x5
  40cc02:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cc0a:	lea    rax,[rbx+rax*1+0x10]
  40cc0f:	lea    r15,[rax+0x4]
  40cc13:	movsxd rax,DWORD PTR [rax+0x4]
  40cc17:	cmp    eax,0xffffffff
  40cc1a:	je     0x40ccbe
  40cc20:	lea    rax,[rax+rax*2]
  40cc24:	shl    rax,0x5
  40cc28:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cc30:	lea    rax,[rbx+rax*1+0x10]
  40cc35:	lea    rdi,[rax+0x4]
  40cc39:	movsxd rax,DWORD PTR [rax+0x4]
  40cc3d:	cmp    eax,0xffffffff
  40cc40:	je     0x40ccae
  40cc42:	lea    rax,[rax+rax*2]
  40cc46:	shl    rax,0x5
  40cc4a:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cc52:	lea    rax,[rbx+rax*1+0x10]
  40cc57:	lea    rsi,[rax+0x4]
  40cc5b:	movsxd rax,DWORD PTR [rax+0x4]
  40cc5f:	cmp    eax,0xffffffff
  40cc62:	je     0x40cca2
  40cc64:	lea    rax,[rax+rax*2]
  40cc68:	shl    rax,0x5
  40cc6c:	lea    rdx,[rbx+rax*1+0x10]
  40cc71:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cc79:	mov    ecx,DWORD PTR [rdx+0x4]
  40cc7c:	lea    rbp,[rdx+0x4]
  40cc80:	cmp    ecx,0xffffffff
  40cc83:	je     0x40cc96
  40cc85:	add    rbp,0x4
  40cc89:	call   0x40a2a0
  40cc8e:	mov    ecx,DWORD PTR [rbp+0x0]
  40cc91:	cmp    ecx,0xffffffff
  40cc94:	jne    0x40cc85
  40cc96:	add    rsi,0x4
  40cc9a:	movsxd rax,DWORD PTR [rsi]
  40cc9d:	cmp    eax,0xffffffff
  40cca0:	jne    0x40cc64
  40cca2:	add    rdi,0x4
  40cca6:	movsxd rax,DWORD PTR [rdi]
  40cca9:	cmp    eax,0xffffffff
  40ccac:	jne    0x40cc42
  40ccae:	add    r15,0x4
  40ccb2:	movsxd rax,DWORD PTR [r15]
  40ccb5:	cmp    eax,0xffffffff
  40ccb8:	jne    0x40cc20
  40ccbe:	add    r14,0x4
  40ccc2:	movsxd rax,DWORD PTR [r14]
  40ccc5:	cmp    eax,0xffffffff
  40ccc8:	jne    0x40cbfa
  40ccce:	add    r13,0x4
  40ccd2:	movsxd rax,DWORD PTR [r13+0x0]
  40ccd6:	cmp    eax,0xffffffff
  40ccd9:	jne    0x40cbd4
  40ccdf:	add    r12,0x4
  40cce3:	movsxd rax,DWORD PTR [r12]
  40cce7:	cmp    eax,0xffffffff
  40ccea:	jne    0x40cbae
  40ccf0:	add    QWORD PTR [rsp+0x28],0x4
  40ccf6:	mov    rax,QWORD PTR [rsp+0x28]
  40ccfb:	movsxd rax,DWORD PTR [rax]
  40ccfe:	cmp    eax,0xffffffff
  40cd01:	jne    0x40cb88
  40cd07:	add    QWORD PTR [rsp+0x20],0x4
  40cd0d:	mov    rax,QWORD PTR [rsp+0x20]
  40cd12:	movsxd rax,DWORD PTR [rax]
  40cd15:	cmp    eax,0xffffffff
  40cd18:	jne    0x40cb5d
  40cd1e:	movsxd rax,DWORD PTR [rip+0x1088f]        # 0x41d5b4
  40cd25:	lea    rdi,[rip+0x10888]        # 0x41d5b4
  40cd2c:	mov    DWORD PTR [rip+0x108c2],0x1        # 0x41d5f8
  40cd36:	lea    rbx,[rip+0x10443]        # 0x41d180
  40cd3d:	mov    QWORD PTR [rsp+0x20],rdi
  40cd42:	cmp    eax,0xffffffff
  40cd45:	je     0x40cf0c
  40cd4b:	lea    rax,[rax+rax*2]
  40cd4f:	shl    rax,0x5
  40cd53:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cd5b:	lea    rax,[rbx+rax*1+0x10]
  40cd60:	lea    rdi,[rax+0x4]
  40cd64:	movsxd rax,DWORD PTR [rax+0x4]
  40cd68:	mov    QWORD PTR [rsp+0x28],rdi
  40cd6d:	cmp    eax,0xffffffff
  40cd70:	je     0x40cef5
  40cd76:	lea    rax,[rax+rax*2]
  40cd7a:	shl    rax,0x5
  40cd7e:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cd86:	lea    rax,[rbx+rax*1+0x10]
  40cd8b:	lea    r12,[rax+0x4]
  40cd8f:	movsxd rax,DWORD PTR [rax+0x4]
  40cd93:	cmp    eax,0xffffffff
  40cd96:	je     0x40cede
  40cd9c:	lea    rax,[rax+rax*2]
  40cda0:	shl    rax,0x5
  40cda4:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cdac:	lea    rax,[rbx+rax*1+0x10]
  40cdb1:	lea    r13,[rax+0x4]
  40cdb5:	movsxd rax,DWORD PTR [rax+0x4]
  40cdb9:	cmp    eax,0xffffffff
  40cdbc:	je     0x40cecd
  40cdc2:	lea    rax,[rax+rax*2]
  40cdc6:	shl    rax,0x5
  40cdca:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cdd2:	lea    rax,[rbx+rax*1+0x10]
  40cdd7:	lea    r14,[rax+0x4]
  40cddb:	movsxd rax,DWORD PTR [rax+0x4]
  40cddf:	cmp    eax,0xffffffff
  40cde2:	je     0x40cebc
  40cde8:	lea    rax,[rax+rax*2]
  40cdec:	shl    rax,0x5
  40cdf0:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40cdf8:	lea    rax,[rbx+rax*1+0x10]
  40cdfd:	lea    r15,[rax+0x4]
  40ce01:	movsxd rax,DWORD PTR [rax+0x4]
  40ce05:	cmp    eax,0xffffffff
  40ce08:	je     0x40ceac
  40ce0e:	lea    rax,[rax+rax*2]
  40ce12:	shl    rax,0x5
  40ce16:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40ce1e:	lea    rax,[rbx+rax*1+0x10]
  40ce23:	lea    rdi,[rax+0x4]
  40ce27:	movsxd rax,DWORD PTR [rax+0x4]
  40ce2b:	cmp    eax,0xffffffff
  40ce2e:	je     0x40ce9c
  40ce30:	lea    rax,[rax+rax*2]
  40ce34:	shl    rax,0x5
  40ce38:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40ce40:	lea    rax,[rbx+rax*1+0x10]
  40ce45:	lea    rsi,[rax+0x4]
  40ce49:	movsxd rax,DWORD PTR [rax+0x4]
  40ce4d:	cmp    eax,0xffffffff
  40ce50:	je     0x40ce90
  40ce52:	lea    rax,[rax+rax*2]
  40ce56:	shl    rax,0x5
  40ce5a:	lea    rdx,[rbx+rax*1+0x10]
  40ce5f:	mov    DWORD PTR [rbx+rax*1+0x58],0x1
  40ce67:	mov    ecx,DWORD PTR [rdx+0x4]
  40ce6a:	lea    rbp,[rdx+0x4]
  40ce6e:	cmp    ecx,0xffffffff
  40ce71:	je     0x40ce84
  40ce73:	add    rbp,0x4
  40ce77:	call   0x40a2a0
  40ce7c:	mov    ecx,DWORD PTR [rbp+0x0]
  40ce7f:	cmp    ecx,0xffffffff
  40ce82:	jne    0x40ce73
  40ce84:	add    rsi,0x4
  40ce88:	movsxd rax,DWORD PTR [rsi]
  40ce8b:	cmp    eax,0xffffffff
  40ce8e:	jne    0x40ce52
  40ce90:	add    rdi,0x4
  40ce94:	movsxd rax,DWORD PTR [rdi]
  40ce97:	cmp    eax,0xffffffff
  40ce9a:	jne    0x40ce30
  40ce9c:	add    r15,0x4
  40cea0:	movsxd rax,DWORD PTR [r15]
  40cea3:	cmp    eax,0xffffffff
  40cea6:	jne    0x40ce0e
  40ceac:	add    r14,0x4
  40ceb0:	movsxd rax,DWORD PTR [r14]
  40ceb3:	cmp    eax,0xffffffff
  40ceb6:	jne    0x40cde8
  40cebc:	add    r13,0x4
  40cec0:	movsxd rax,DWORD PTR [r13+0x0]
  40cec4:	cmp    eax,0xffffffff
  40cec7:	jne    0x40cdc2
  40cecd:	add    r12,0x4
  40ced1:	movsxd rax,DWORD PTR [r12]
  40ced5:	cmp    eax,0xffffffff
  40ced8:	jne    0x40cd9c
  40cede:	add    QWORD PTR [rsp+0x28],0x4
  40cee4:	mov    rax,QWORD PTR [rsp+0x28]
  40cee9:	movsxd rax,DWORD PTR [rax]
  40ceec:	cmp    eax,0xffffffff
  40ceef:	jne    0x40cd76
  40cef5:	add    QWORD PTR [rsp+0x20],0x4
  40cefb:	mov    rax,QWORD PTR [rsp+0x20]
  40cf00:	movsxd rax,DWORD PTR [rax]
  40cf03:	cmp    eax,0xffffffff
  40cf06:	jne    0x40cd4b
  40cf0c:	xor    eax,eax
  40cf0e:	add    rsp,0x38
  40cf12:	pop    rbx
  40cf13:	pop    rsi
  40cf14:	pop    rdi
  40cf15:	pop    rbp
  40cf16:	pop    r12
  40cf18:	pop    r13
  40cf1a:	pop    r14
  40cf1c:	pop    r15
  40cf1e:	ret    
  40cf1f:	nop
  40cf20:	push   rbp
  40cf21:	push   rdi
  40cf22:	push   rsi
  40cf23:	push   rbx
  40cf24:	sub    rsp,0x438
  40cf2b:	mov    r8d,0xffffffff
  40cf31:	lea    rdi,[rsp+0x30]
  40cf36:	mov    rbx,rcx
  40cf39:	mov    rsi,rdx
  40cf3c:	mov    edx,0x1
  40cf41:	mov    rcx,rdi
  40cf44:	call   0x412480
  40cf49:	movsxd rdx,DWORD PTR [rbx+0x2c]
  40cf4d:	lea    eax,[rdx+0x1]
  40cf50:	cmp    eax,0x9
  40cf53:	mov    DWORD PTR [rbx+0x2c],eax
  40cf56:	jg     0x40d32c
  40cf5c:	test   eax,eax
  40cf5e:	je     0x40d230
  40cf64:	lea    rcx,[rbx+rdx*8]
  40cf68:	mov    rdx,QWORD PTR [rcx+0x58]
  40cf6c:	mov    r8d,DWORD PTR [rdx]
  40cf6f:	movsxd rdx,eax
  40cf72:	mov    DWORD PTR [rbx+rdx*4+0x30],0x0
  40cf7a:	mov    rdx,QWORD PTR [rbx+0x20]
  40cf7e:	add    rdx,0xe40
  40cf85:	cmp    r8d,0xf
  40cf89:	mov    QWORD PTR [rcx+0x60],rdx
  40cf8d:	jne    0x40cf9b
  40cf8f:	mov    edx,DWORD PTR [rbx+0x28ac]
  40cf95:	mov    DWORD PTR [rbx+0x28b0],edx
  40cf9b:	mov    rdx,QWORD PTR [rbx+0x8]
  40cf9f:	mov    rdx,QWORD PTR [rdx+0x28]
  40cfa3:	test   rdx,rdx
  40cfa6:	je     0x40cfb0
  40cfa8:	mov    rcx,rbx
  40cfab:	call   rdx
  40cfad:	mov    eax,DWORD PTR [rbx+0x2c]
  40cfb0:	cdqe   
  40cfb2:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40cfb7:	mov    ebp,DWORD PTR [rax+0x58]
  40cfba:	test   ebp,ebp
  40cfbc:	je     0x40d263
  40cfc2:	mov    rax,QWORD PTR [rbx+0x8]
  40cfc6:	lea    r8,[rip+0x14e6b]        # 0x421e38
  40cfcd:	lea    rdx,[rip+0x14e6d]        # 0x421e41
  40cfd4:	mov    rcx,rbx
  40cfd7:	call   QWORD PTR [rax+0x48]
  40cfda:	movsxd rax,DWORD PTR [rbx+0x2c]
  40cfde:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40cfe3:	mov    rbp,QWORD PTR [rsi+0x18]
  40cfe7:	movabs rdx,0x8000000000000000
  40cff1:	cmp    rbp,rdx
  40cff4:	je     0x40d030
  40cff6:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40cffb:	mov    r10d,DWORD PTR [rax+0x58]
  40cfff:	test   r10d,r10d
  40d002:	je     0x40d2c0
  40d008:	mov    rax,QWORD PTR [rbx+0x8]
  40d00c:	mov    r8,rbp
  40d00f:	lea    rdx,[rip+0x14e36]        # 0x421e4c
  40d016:	mov    rcx,rbx
  40d019:	call   QWORD PTR [rax+0x38]
  40d01c:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d020:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d025:	mov    rbp,QWORD PTR [rsi+0x18]
  40d029:	jmp    0x40d06d
  40d02b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d030:	mov    rdx,QWORD PTR [rbx+rax*8+0x58]
  40d035:	mov    rax,QWORD PTR [rbx+0x8]
  40d039:	test   BYTE PTR [rax+0x50],0x1
  40d03d:	je     0x40d06d
  40d03f:	mov    r11d,DWORD PTR [rdx+0x58]
  40d043:	test   r11d,r11d
  40d046:	je     0x40d290
  40d04c:	lea    r8,[rip+0x14ae0]        # 0x421b33
  40d053:	lea    rdx,[rip+0x14df2]        # 0x421e4c
  40d05a:	mov    rcx,rbx
  40d05d:	call   QWORD PTR [rax+0x48]
  40d060:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d064:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d069:	mov    rbp,QWORD PTR [rsi+0x18]
  40d06d:	lea    r9,[rsp+0x20]
  40d072:	lea    rdx,[rip+0x14dd7]        # 0x421e50
  40d079:	mov    r8,rbp
  40d07c:	mov    rcx,rbx
  40d07f:	mov    DWORD PTR [rsp+0x20],0x1
  40d087:	mov    DWORD PTR [rsp+0x24],0xf4240
  40d08f:	call   0x40c520
  40d094:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d098:	movzx  ebp,WORD PTR [rsi]
  40d09b:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40d0a0:	mov    r9d,DWORD PTR [rax+0x58]
  40d0a4:	test   r9d,r9d
  40d0a7:	jne    0x40d0c8
  40d0a9:	mov    rcx,QWORD PTR [rax+0x50]
  40d0ad:	lea    rdx,[rip+0x14da5]        # 0x421e59
  40d0b4:	xor    r9d,r9d
  40d0b7:	xor    r8d,r8d
  40d0ba:	call   0x412438
  40d0bf:	test   rax,rax
  40d0c2:	je     0x40d310
  40d0c8:	mov    rax,QWORD PTR [rbx+0x8]
  40d0cc:	mov    r8,rbp
  40d0cf:	lea    rdx,[rip+0x14d83]        # 0x421e59
  40d0d6:	mov    rcx,rbx
  40d0d9:	call   QWORD PTR [rax+0x38]
  40d0dc:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d0e0:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d0e5:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40d0ea:	mov    ebp,DWORD PTR [rsi+0x4]
  40d0ed:	mov    r8d,DWORD PTR [rax+0x58]
  40d0f1:	test   r8d,r8d
  40d0f4:	jne    0x40d115
  40d0f6:	mov    rcx,QWORD PTR [rax+0x50]
  40d0fa:	lea    rdx,[rip+0x14d5f]        # 0x421e60
  40d101:	xor    r9d,r9d
  40d104:	xor    r8d,r8d
  40d107:	call   0x412438
  40d10c:	test   rax,rax
  40d10f:	je     0x40d2f0
  40d115:	mov    rax,QWORD PTR [rbx+0x8]
  40d119:	mov    r8,rbp
  40d11c:	lea    rdx,[rip+0x14d3d]        # 0x421e60
  40d123:	mov    rcx,rbx
  40d126:	call   QWORD PTR [rax+0x38]
  40d129:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d12d:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d132:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40d137:	mov    ebp,DWORD PTR [rsi+0x8]
  40d13a:	mov    ecx,DWORD PTR [rax+0x58]
  40d13d:	test   ecx,ecx
  40d13f:	jne    0x40d160
  40d141:	mov    rcx,QWORD PTR [rax+0x50]
  40d145:	lea    rdx,[rip+0x14d27]        # 0x421e73
  40d14c:	xor    r9d,r9d
  40d14f:	xor    r8d,r8d
  40d152:	call   0x412438
  40d157:	test   rax,rax
  40d15a:	je     0x40d300
  40d160:	mov    rax,QWORD PTR [rbx+0x8]
  40d164:	mov    r8,rbp
  40d167:	lea    rdx,[rip+0x14d05]        # 0x421e73
  40d16e:	mov    rcx,rbx
  40d171:	call   QWORD PTR [rax+0x38]
  40d174:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d178:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  40d17d:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  40d182:	mov    esi,DWORD PTR [rsi+0xc]
  40d185:	mov    edx,DWORD PTR [rax+0x58]
  40d188:	test   edx,edx
  40d18a:	jne    0x40d1ab
  40d18c:	mov    rcx,QWORD PTR [rax+0x50]
  40d190:	lea    rdx,[rip+0x14ced]        # 0x421e84
  40d197:	xor    r9d,r9d
  40d19a:	xor    r8d,r8d
  40d19d:	call   0x412438
  40d1a2:	test   rax,rax
  40d1a5:	je     0x40d2e4
  40d1ab:	mov    rax,QWORD PTR [rbx+0x8]
  40d1af:	lea    rdx,[rip+0x14cce]        # 0x421e84
  40d1b6:	mov    r8,rsi
  40d1b9:	mov    rcx,rbx
  40d1bc:	call   QWORD PTR [rax+0x38]
  40d1bf:	movsxd rdx,DWORD PTR [rbx+0x2c]
  40d1c3:	add    DWORD PTR [rbx+rdx*4+0x30],0x1
  40d1c8:	mov    rax,rdx
  40d1cb:	lea    rcx,[rbx+rdx*8]
  40d1cf:	test   eax,eax
  40d1d1:	mov    r8,QWORD PTR [rcx+0x58]
  40d1d5:	mov    r8d,DWORD PTR [r8]
  40d1d8:	je     0x40d1ef
  40d1da:	mov    rcx,QWORD PTR [rcx+0x50]
  40d1de:	mov    ecx,DWORD PTR [rcx]
  40d1e0:	cmp    ecx,0xffffffff
  40d1e3:	je     0x40d1ef
  40d1e5:	add    DWORD PTR [rbx+rdx*4+0x2c],0x1
  40d1ea:	cmp    ecx,0xf
  40d1ed:	je     0x40d250
  40d1ef:	mov    rdx,QWORD PTR [rbx+0x8]
  40d1f3:	mov    rdx,QWORD PTR [rdx+0x30]
  40d1f7:	test   rdx,rdx
  40d1fa:	je     0x40d204
  40d1fc:	mov    rcx,rbx
  40d1ff:	call   rdx
  40d201:	mov    eax,DWORD PTR [rbx+0x2c]
  40d204:	sub    eax,0x1
  40d207:	xor    edx,edx
  40d209:	mov    rcx,rdi
  40d20c:	mov    DWORD PTR [rbx+0x2c],eax
  40d20f:	call   0x412488
  40d214:	call   QWORD PTR [rip+0x1e8ca]        # 0x42bae4
  40d21a:	lea    rcx,[rax+0x30]
  40d21e:	call   0x4198f8
  40d223:	nop
  40d224:	add    rsp,0x438
  40d22b:	pop    rbx
  40d22c:	pop    rsi
  40d22d:	pop    rdi
  40d22e:	pop    rbp
  40d22f:	ret    
  40d230:	mov    rcx,QWORD PTR [rbx+0x20]
  40d234:	mov    DWORD PTR [rbx+0x30],0x0
  40d23b:	lea    rdx,[rcx+0xe40]
  40d242:	mov    QWORD PTR [rbx+0x58],rdx
  40d246:	jmp    0x40cf9b
  40d24b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d250:	cmp    r8d,0xd
  40d254:	je     0x40d320
  40d25a:	add    DWORD PTR [rbx+0x28ac],0x1
  40d261:	jmp    0x40d1ef
  40d263:	mov    rcx,QWORD PTR [rax+0x50]
  40d267:	lea    rdx,[rip+0x14bd3]        # 0x421e41
  40d26e:	xor    r9d,r9d
  40d271:	xor    r8d,r8d
  40d274:	call   0x412438
  40d279:	test   rax,rax
  40d27c:	jne    0x40cfc2
  40d282:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d286:	jmp    0x40cfe3
  40d28b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d290:	mov    rcx,QWORD PTR [rdx+0x50]
  40d294:	lea    rdx,[rip+0x14bb1]        # 0x421e4c
  40d29b:	xor    r9d,r9d
  40d29e:	xor    r8d,r8d
  40d2a1:	call   0x412438
  40d2a6:	test   rax,rax
  40d2a9:	je     0x40d069
  40d2af:	mov    rax,QWORD PTR [rbx+0x8]
  40d2b3:	jmp    0x40d04c
  40d2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d2c0:	mov    rcx,QWORD PTR [rax+0x50]
  40d2c4:	lea    rdx,[rip+0x14b81]        # 0x421e4c
  40d2cb:	xor    r9d,r9d
  40d2ce:	xor    r8d,r8d
  40d2d1:	call   0x412438
  40d2d6:	test   rax,rax
  40d2d9:	jne    0x40d008
  40d2df:	jmp    0x40d069
  40d2e4:	movsxd rdx,DWORD PTR [rbx+0x2c]
  40d2e8:	mov    rax,rdx
  40d2eb:	jmp    0x40d1cb
  40d2f0:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d2f4:	jmp    0x40d132
  40d2f9:	nop    DWORD PTR [rax+0x0]
  40d300:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d304:	jmp    0x40d17d
  40d309:	nop    DWORD PTR [rax+0x0]
  40d310:	movsxd rax,DWORD PTR [rbx+0x2c]
  40d314:	jmp    0x40d0e5
  40d319:	nop    DWORD PTR [rax+0x0]
  40d320:	add    DWORD PTR [rbx+0x28a8],0x1
  40d327:	jmp    0x40d1ef
  40d32c:	call   0x419e29
  40d331:	nop
  40d332:	nop    DWORD PTR [rax+0x0]
  40d336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d340:	push   r15
  40d342:	push   r14
  40d344:	push   r13
  40d346:	push   r12
  40d348:	push   rbp
  40d349:	push   rdi
  40d34a:	push   rsi
  40d34b:	push   rbx
  40d34c:	sub    rsp,0xcc8
  40d353:	lea    rax,[rsp+0xc0]
  40d35b:	mov    r15,rcx
  40d35e:	mov    rbx,rdx
  40d361:	mov    rsi,r8
  40d364:	mov    edx,0x1
  40d369:	mov    r8d,0xffffffff
  40d36f:	mov    rcx,rax
  40d372:	mov    QWORD PTR [rsp+0x58],rax
  40d377:	mov    rbp,r9
  40d37a:	call   0x412480
  40d37f:	movsxd rdx,DWORD PTR [r15+0x2c]
  40d383:	lea    eax,[rdx+0x1]
  40d386:	cmp    eax,0x9
  40d389:	mov    DWORD PTR [r15+0x2c],eax
  40d38d:	jg     0x40e74e
  40d393:	test   eax,eax
  40d395:	je     0x40d890
  40d39b:	lea    rdx,[r15+rdx*8]
  40d39f:	cdqe   
  40d3a1:	mov    rcx,QWORD PTR [rdx+0x58]
  40d3a5:	mov    ecx,DWORD PTR [rcx]
  40d3a7:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40d3b0:	mov    rax,QWORD PTR [r15+0x20]
  40d3b4:	add    rax,0x240
  40d3ba:	cmp    ecx,0xf
  40d3bd:	mov    QWORD PTR [rdx+0x60],rax
  40d3c1:	jne    0x40d3d1
  40d3c3:	mov    eax,DWORD PTR [r15+0x28ac]
  40d3ca:	mov    DWORD PTR [r15+0x28b0],eax
  40d3d1:	mov    rax,QWORD PTR [r15+0x8]
  40d3d5:	mov    rax,QWORD PTR [rax+0x28]
  40d3d9:	test   rax,rax
  40d3dc:	je     0x40d3e3
  40d3de:	mov    rcx,r15
  40d3e1:	call   rax
  40d3e3:	mov    rax,QWORD PTR [rsi+0x8]
  40d3e7:	mov    ecx,DWORD PTR [rax+0xc]
  40d3ea:	call   0x412378
  40d3ef:	test   rax,rax
  40d3f2:	mov    r8,rax
  40d3f5:	je     0x40e624
  40d3fb:	lea    rdx,[rip+0x14a3f]        # 0x421e41
  40d402:	mov    rcx,r15
  40d405:	call   0x40a930
  40d40a:	movsxd rax,DWORD PTR [r15+0x2c]
  40d40e:	movsxd rdi,DWORD PTR [rsi]
  40d411:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d416:	mov    r13d,DWORD PTR [rax+0x58]
  40d41a:	test   r13d,r13d
  40d41d:	jne    0x40d43e
  40d41f:	mov    rcx,QWORD PTR [rax+0x50]
  40d423:	lea    rdx,[rip+0x14a6c]        # 0x421e96
  40d42a:	xor    r9d,r9d
  40d42d:	xor    r8d,r8d
  40d430:	call   0x412438
  40d435:	test   rax,rax
  40d438:	je     0x40e333
  40d43e:	mov    rax,QWORD PTR [r15+0x8]
  40d442:	mov    r8,rdi
  40d445:	lea    rdx,[rip+0x14a4a]        # 0x421e96
  40d44c:	mov    rcx,r15
  40d44f:	call   QWORD PTR [rax+0x38]
  40d452:	movsxd rax,DWORD PTR [r15+0x2c]
  40d456:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d45c:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d461:	movsxd rdi,DWORD PTR [rbx+0x78]
  40d465:	mov    r12d,DWORD PTR [rax+0x58]
  40d469:	test   r12d,r12d
  40d46c:	jne    0x40d489
  40d46e:	mov    rcx,QWORD PTR [rax+0x50]
  40d472:	lea    rdx,[rip+0x14a2a]        # 0x421ea3
  40d479:	xor    r9d,r9d
  40d47c:	xor    r8d,r8d
  40d47f:	call   0x412438
  40d484:	test   rax,rax
  40d487:	je     0x40d4a7
  40d489:	mov    rax,QWORD PTR [r15+0x8]
  40d48d:	mov    r8,rdi
  40d490:	lea    rdx,[rip+0x14a0c]        # 0x421ea3
  40d497:	mov    rcx,r15
  40d49a:	call   QWORD PTR [rax+0x38]
  40d49d:	movsxd rax,DWORD PTR [r15+0x2c]
  40d4a1:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d4a7:	mov    r8,QWORD PTR [rbx+0xd0]
  40d4ae:	lea    rdx,[rip+0x149f8]        # 0x421ead
  40d4b5:	mov    rcx,r15
  40d4b8:	lea    rdi,[rsi+0x30]
  40d4bc:	call   0x40b820
  40d4c1:	mov    r8,QWORD PTR [rbx+0xd0]
  40d4c8:	lea    rdx,[rip+0x149e6]        # 0x421eb5
  40d4cf:	mov    r9,rdi
  40d4d2:	mov    rcx,r15
  40d4d5:	call   0x40c520
  40d4da:	mov    r8,QWORD PTR [rbx+0xd8]
  40d4e1:	lea    rdx,[rip+0x149da]        # 0x421ec2
  40d4e8:	mov    rcx,r15
  40d4eb:	call   0x40b820
  40d4f0:	mov    r8,QWORD PTR [rbx+0xd8]
  40d4f7:	lea    rdx,[rip+0x149cc]        # 0x421eca
  40d4fe:	mov    r9,rdi
  40d501:	mov    rcx,r15
  40d504:	call   0x40c520
  40d509:	mov    rcx,rbx
  40d50c:	call   0x412400
  40d511:	lea    rdx,[rip+0x149bf]        # 0x421ed7
  40d518:	mov    r8,rax
  40d51b:	mov    rcx,r15
  40d51e:	call   0x40b820
  40d523:	mov    rcx,rbx
  40d526:	call   0x412400
  40d52b:	lea    rdx,[rip+0x149bb]        # 0x421eed
  40d532:	mov    r9,rdi
  40d535:	mov    r8,rax
  40d538:	mov    rcx,r15
  40d53b:	call   0x40c520
  40d540:	mov    rcx,rbx
  40d543:	call   0x4123e0
  40d548:	test   rax,rax
  40d54b:	mov    rdi,rax
  40d54e:	jne    0x40e180
  40d554:	lea    r8,[rip+0x145d8]        # 0x421b33
  40d55b:	lea    rdx,[rip+0x149a6]        # 0x421f08
  40d562:	mov    rcx,r15
  40d565:	call   0x40ac10
  40d56a:	mov    rcx,rbx
  40d56d:	call   0x4123e0
  40d572:	test   rax,rax
  40d575:	jne    0x40e0c0
  40d57b:	lea    r8,[rip+0x145b1]        # 0x421b33
  40d582:	lea    rdx,[rip+0x1498c]        # 0x421f15
  40d589:	mov    rcx,r15
  40d58c:	call   0x40ac10
  40d591:	mov    rcx,rbx
  40d594:	call   0x4123d8
  40d599:	cmp    rax,0xffffffffffffffff
  40d59d:	je     0x40e137
  40d5a3:	mov    rdi,QWORD PTR [rsp+0x58]
  40d5a8:	mov    rcx,rdi
  40d5ab:	call   0x412490
  40d5b0:	mov    rcx,rbx
  40d5b3:	call   0x4123d8
  40d5b8:	lea    rdx,[rip+0x13a49]        # 0x421008
  40d5bf:	mov    r8,rax
  40d5c2:	mov    rcx,rdi
  40d5c5:	call   0x412478
  40d5ca:	mov    r8,QWORD PTR [rsp+0xc0]
  40d5d2:	lea    rdx,[rip+0x1494e]        # 0x421f27
  40d5d9:	mov    rcx,r15
  40d5dc:	call   0x40a930
  40d5e1:	mov    rcx,rbx
  40d5e4:	call   0x4123d0
  40d5e9:	cmp    eax,0xffffffff
  40d5ec:	je     0x40e15e
  40d5f2:	mov    rdi,QWORD PTR [rsp+0x58]
  40d5f7:	mov    rcx,rdi
  40d5fa:	call   0x412490
  40d5ff:	mov    rcx,rbx
  40d602:	call   0x4123d0
  40d607:	lea    rdx,[rip+0x14921]        # 0x421f2f
  40d60e:	mov    r8d,eax
  40d611:	mov    rcx,rdi
  40d614:	call   0x412478
  40d619:	movsxd rax,DWORD PTR [r15+0x2c]
  40d61d:	mov    rdi,QWORD PTR [rsp+0xc0]
  40d625:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d62a:	mov    r10d,DWORD PTR [rax+0x58]
  40d62e:	test   r10d,r10d
  40d631:	je     0x40e600
  40d637:	mov    rax,QWORD PTR [r15+0x8]
  40d63b:	mov    r8,rdi
  40d63e:	lea    rdx,[rip+0x148ed]        # 0x421f32
  40d645:	mov    rcx,r15
  40d648:	call   QWORD PTR [rax+0x48]
  40d64b:	movsxd rax,DWORD PTR [r15+0x2c]
  40d64f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d655:	mov    rax,QWORD PTR [rsi+0x8]
  40d659:	mov    eax,DWORD PTR [rax+0xc]
  40d65c:	test   eax,eax
  40d65e:	je     0x40de20
  40d664:	cmp    eax,0x1
  40d667:	je     0x40d8b0
  40d66d:	mov    esi,DWORD PTR [rip+0x1bcd5]        # 0x429348
  40d673:	test   esi,esi
  40d675:	jne    0x40d9b0
  40d67b:	mov    eax,DWORD PTR [r15+0x2c]
  40d67f:	mov    r9d,DWORD PTR [rbx+0x228]
  40d686:	test   r9d,r9d
  40d689:	je     0x40de10
  40d68f:	lea    edx,[rax+0x1]
  40d692:	cmp    edx,0x9
  40d695:	mov    DWORD PTR [r15+0x2c],edx
  40d699:	jg     0x40e74e
  40d69f:	test   edx,edx
  40d6a1:	jne    0x40dca0
  40d6a7:	mov    rax,QWORD PTR [r15+0x20]
  40d6ab:	mov    DWORD PTR [r15+0x30],0x0
  40d6b3:	add    rax,0x360
  40d6b9:	mov    QWORD PTR [r15+0x58],rax
  40d6bd:	mov    rax,QWORD PTR [r15+0x8]
  40d6c1:	mov    rax,QWORD PTR [rax+0x28]
  40d6c5:	test   rax,rax
  40d6c8:	je     0x40d6d3
  40d6ca:	mov    rcx,r15
  40d6cd:	call   rax
  40d6cf:	mov    edx,DWORD PTR [r15+0x2c]
  40d6d3:	mov    r8d,DWORD PTR [rbx+0x228]
  40d6da:	test   r8d,r8d
  40d6dd:	jle    0x40dd40
  40d6e3:	mov    rax,QWORD PTR [rbx+0x220]
  40d6ea:	mov    rdi,QWORD PTR [rax]
  40d6ed:	lea    eax,[rdx+0x1]
  40d6f0:	cmp    eax,0x9
  40d6f3:	mov    DWORD PTR [r15+0x2c],eax
  40d6f7:	jg     0x40e74e
  40d6fd:	xor    esi,esi
  40d6ff:	lea    rbp,[rip+0x14788]        # 0x421e8e
  40d706:	jmp    0x40d86d
  40d70b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d710:	movsxd rdx,edx
  40d713:	cdqe   
  40d715:	mov    rdx,QWORD PTR [r15+rdx*8+0x58]
  40d71a:	mov    ecx,DWORD PTR [rdx]
  40d71c:	mov    rdx,QWORD PTR [r15+0x20]
  40d720:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40d729:	add    rdx,0x3c0
  40d730:	cmp    ecx,0xf
  40d733:	mov    QWORD PTR [r15+rax*8+0x58],rdx
  40d738:	jne    0x40d748
  40d73a:	mov    eax,DWORD PTR [r15+0x28ac]
  40d741:	mov    DWORD PTR [r15+0x28b0],eax
  40d748:	mov    rax,QWORD PTR [r15+0x8]
  40d74c:	mov    rax,QWORD PTR [rax+0x28]
  40d750:	test   rax,rax
  40d753:	je     0x40d75a
  40d755:	mov    rcx,r15
  40d758:	call   rax
  40d75a:	mov    ecx,DWORD PTR [rdi]
  40d75c:	call   0x4123c8
  40d761:	test   rax,rax
  40d764:	cmove  rax,rbp
  40d768:	mov    r12,rax
  40d76b:	movsxd rax,DWORD PTR [r15+0x2c]
  40d76f:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d774:	mov    ecx,DWORD PTR [rax+0x58]
  40d777:	test   ecx,ecx
  40d779:	je     0x40dd00
  40d77f:	mov    rax,QWORD PTR [r15+0x8]
  40d783:	mov    r8,r12
  40d786:	lea    rdx,[rip+0x14868]        # 0x421ff5
  40d78d:	mov    rcx,r15
  40d790:	call   QWORD PTR [rax+0x48]
  40d793:	movsxd rax,DWORD PTR [r15+0x2c]
  40d797:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d79d:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d7a2:	movsxd r12,DWORD PTR [rdi+0x10]
  40d7a6:	mov    edx,DWORD PTR [rax+0x58]
  40d7a9:	test   edx,edx
  40d7ab:	jne    0x40d7c8
  40d7ad:	mov    rcx,QWORD PTR [rax+0x50]
  40d7b1:	lea    rdx,[rip+0x1484c]        # 0x422004
  40d7b8:	xor    r9d,r9d
  40d7bb:	xor    r8d,r8d
  40d7be:	call   0x412438
  40d7c3:	test   rax,rax
  40d7c6:	je     0x40d7e6
  40d7c8:	mov    rax,QWORD PTR [r15+0x8]
  40d7cc:	mov    r8,r12
  40d7cf:	lea    rdx,[rip+0x1482e]        # 0x422004
  40d7d6:	mov    rcx,r15
  40d7d9:	call   QWORD PTR [rax+0x38]
  40d7dc:	movsxd rax,DWORD PTR [r15+0x2c]
  40d7e0:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d7e6:	cmp    DWORD PTR [rdi],0x6
  40d7e9:	jne    0x40d7f5
  40d7eb:	cmp    DWORD PTR [rdi+0x10],0x23
  40d7ef:	jg     0x40e753
  40d7f5:	movsxd rdx,DWORD PTR [r15+0x2c]
  40d7f9:	lea    rcx,[r15+rdx*8]
  40d7fd:	test   edx,edx
  40d7ff:	mov    rax,rdx
  40d802:	mov    r8,QWORD PTR [rcx+0x58]
  40d806:	mov    r8d,DWORD PTR [r8]
  40d809:	je     0x40d825
  40d80b:	mov    rcx,QWORD PTR [rcx+0x50]
  40d80f:	mov    ecx,DWORD PTR [rcx]
  40d811:	cmp    ecx,0xffffffff
  40d814:	je     0x40d825
  40d816:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  40d81c:	cmp    ecx,0xf
  40d81f:	je     0x40dce4
  40d825:	mov    rdx,QWORD PTR [r15+0x8]
  40d829:	mov    rdx,QWORD PTR [rdx+0x30]
  40d82d:	test   rdx,rdx
  40d830:	je     0x40d83b
  40d832:	mov    rcx,r15
  40d835:	call   rdx
  40d837:	mov    eax,DWORD PTR [r15+0x2c]
  40d83b:	lea    ecx,[rsi+0x1]
  40d83e:	cmp    DWORD PTR [rbx+0x228],ecx
  40d844:	lea    edx,[rax-0x1]
  40d847:	mov    DWORD PTR [r15+0x2c],edx
  40d84b:	jle    0x40dd40
  40d851:	mov    rcx,QWORD PTR [rbx+0x220]
  40d858:	add    rsi,0x1
  40d85c:	cmp    eax,0x9
  40d85f:	mov    rdi,QWORD PTR [rcx+rsi*8]
  40d863:	mov    DWORD PTR [r15+0x2c],eax
  40d867:	jg     0x40e74e
  40d86d:	test   eax,eax
  40d86f:	jne    0x40d710
  40d875:	mov    rax,QWORD PTR [r15+0x20]
  40d879:	mov    DWORD PTR [r15+0x30],0x0
  40d881:	add    rax,0x3c0
  40d887:	mov    QWORD PTR [r15+0x58],rax
  40d88b:	jmp    0x40d748
  40d890:	mov    rax,QWORD PTR [r15+0x20]
  40d894:	mov    DWORD PTR [r15+0x30],0x0
  40d89c:	add    rax,0x240
  40d8a2:	mov    QWORD PTR [r15+0x58],rax
  40d8a6:	jmp    0x40d3d1
  40d8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d8b0:	mov    ecx,DWORD PTR [rbx+0x74]
  40d8b3:	call   0x412360
  40d8b8:	test   rax,rax
  40d8bb:	mov    r8,rax
  40d8be:	je     0x40e677
  40d8c4:	lea    rdx,[rip+0x146fc]        # 0x421fc7
  40d8cb:	mov    rcx,r15
  40d8ce:	call   0x40a930
  40d8d3:	movsxd rax,DWORD PTR [r15+0x2c]
  40d8d7:	movsxd rsi,DWORD PTR [rbx+0x70]
  40d8db:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d8e0:	mov    ebp,DWORD PTR [rax+0x58]
  40d8e3:	test   ebp,ebp
  40d8e5:	je     0x40e1e0
  40d8eb:	mov    rax,QWORD PTR [r15+0x8]
  40d8ef:	mov    r8,rsi
  40d8f2:	lea    rdx,[rip+0x146d9]        # 0x421fd2
  40d8f9:	mov    rcx,r15
  40d8fc:	call   QWORD PTR [rax+0x38]
  40d8ff:	movsxd rax,DWORD PTR [r15+0x2c]
  40d903:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d909:	mov    rcx,rbx
  40d90c:	call   0x4123f0
  40d911:	movsxd rsi,eax
  40d914:	movsxd rax,DWORD PTR [r15+0x2c]
  40d918:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40d91d:	mov    edi,DWORD PTR [rax+0x58]
  40d920:	test   edi,edi
  40d922:	je     0x40e2d0
  40d928:	mov    rax,QWORD PTR [r15+0x8]
  40d92c:	mov    r8,rsi
  40d92f:	lea    rdx,[rip+0x146a7]        # 0x421fdd
  40d936:	mov    rcx,r15
  40d939:	call   QWORD PTR [rax+0x38]
  40d93c:	movsxd rax,DWORD PTR [r15+0x2c]
  40d940:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40d946:	mov    rcx,rbx
  40d949:	call   0x4123f8
  40d94e:	test   rax,rax
  40d951:	je     0x40e2b0
  40d957:	mov    rdi,QWORD PTR [rsp+0x58]
  40d95c:	mov    rcx,rdi
  40d95f:	call   0x412490
  40d964:	mov    rcx,rbx
  40d967:	call   0x4123f8
  40d96c:	mov    rcx,rbx
  40d96f:	mov    rsi,rax
  40d972:	call   0x4123f0
  40d977:	mov    r8,rsi
  40d97a:	mov    edx,eax
  40d97c:	mov    rcx,rdi
  40d97f:	call   0x4124a0
  40d984:	mov    r8,QWORD PTR [rsp+0xc0]
  40d98c:	lea    rdx,[rip+0x14653]        # 0x421fe6
  40d993:	mov    rcx,r15
  40d996:	call   0x40a930
  40d99b:	mov    esi,DWORD PTR [rip+0x1b9a7]        # 0x429348
  40d9a1:	test   esi,esi
  40d9a3:	je     0x40d67b
  40d9a9:	nop    DWORD PTR [rax+0x0]
  40d9b0:	mov    rcx,rbx
  40d9b3:	call   0x4123e8
  40d9b8:	test   rax,rax
  40d9bb:	mov    QWORD PTR [rsp+0x68],rax
  40d9c0:	je     0x40d67b
  40d9c6:	movsxd rdx,DWORD PTR [r15+0x2c]
  40d9ca:	lea    eax,[rdx+0x1]
  40d9cd:	cmp    eax,0x9
  40d9d0:	mov    DWORD PTR [r15+0x2c],eax
  40d9d4:	jg     0x40e74e
  40d9da:	test   eax,eax
  40d9dc:	je     0x40e318
  40d9e2:	lea    rdx,[r15+rdx*8]
  40d9e6:	cdqe   
  40d9e8:	mov    rcx,QWORD PTR [rdx+0x58]
  40d9ec:	mov    ecx,DWORD PTR [rcx]
  40d9ee:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40d9f7:	mov    rax,QWORD PTR [r15+0x20]
  40d9fb:	add    rax,0x300
  40da01:	cmp    ecx,0xf
  40da04:	mov    QWORD PTR [rdx+0x60],rax
  40da08:	jne    0x40da18
  40da0a:	mov    eax,DWORD PTR [r15+0x28ac]
  40da11:	mov    DWORD PTR [r15+0x28b0],eax
  40da18:	mov    rax,QWORD PTR [r15+0x8]
  40da1c:	mov    rax,QWORD PTR [rax+0x28]
  40da20:	test   rax,rax
  40da23:	je     0x40da2a
  40da25:	mov    rcx,r15
  40da28:	call   rax
  40da2a:	lea    rax,[rsp+0x4c0]
  40da32:	lea    r13,[rsp+0x8c0]
  40da3a:	xor    ebp,ebp
  40da3c:	mov    QWORD PTR [rsp+0xd18],rbx
  40da44:	mov    QWORD PTR [rsp+0x30],rax
  40da49:	lea    rax,[rsp+0xa8]
  40da51:	mov    QWORD PTR [rsp+0x78],rax
  40da56:	lea    rax,[rsp+0xb0]
  40da5e:	mov    QWORD PTR [rsp+0x80],rax
  40da66:	lea    rax,[rsp+0xb8]
  40da6e:	mov    QWORD PTR [rsp+0x40],rax
  40da73:	lea    rax,[rsp+0xa4]
  40da7b:	mov    QWORD PTR [rsp+0x48],rax
  40da80:	mov    rcx,QWORD PTR [rsp+0x68]
  40da85:	lea    rdx,[rip+0x13437]        # 0x420ec3
  40da8c:	mov    r8,rbp
  40da8f:	mov    r9d,0x2
  40da95:	call   0x412438
  40da9a:	test   rax,rax
  40da9d:	mov    rbp,rax
  40daa0:	je     0x40e63f
  40daa6:	mov    rax,QWORD PTR [rbp+0x8]
  40daaa:	mov    rsi,QWORD PTR [rbp+0x0]
  40daae:	mov    QWORD PTR [rsp+0x50],rax
  40dab3:	movsxd rax,DWORD PTR [r15+0x2c]
  40dab7:	mov    r14,QWORD PTR [r15+rax*8+0x58]
  40dabc:	mov    ebx,DWORD PTR [r14+0x58]
  40dac0:	test   ebx,ebx
  40dac2:	je     0x40e4c0
  40dac8:	mov    rcx,QWORD PTR [rsp+0x30]
  40dacd:	xor    edx,edx
  40dacf:	mov    r8d,0xffffffff
  40dad5:	mov    QWORD PTR [rsp+0xa8],0x0
  40dae1:	mov    QWORD PTR [rsp+0xb0],0x0
  40daed:	mov    rbx,rsi
  40daf0:	call   0x412480
  40daf5:	mov    rcx,rsi
  40daf8:	call   0x419840
  40dafd:	mov    QWORD PTR [rsp+0xb8],rsi
  40db05:	add    rax,rsi
  40db08:	cmp    BYTE PTR [rsi],0x0
  40db0b:	mov    QWORD PTR [rsp+0x38],rax
  40db10:	mov    DWORD PTR [rsp+0x60],0x0
  40db18:	je     0x40db7a
  40db1a:	mov    r9d,DWORD PTR [r15+0x28c0]
  40db21:	mov    r8,QWORD PTR [rsp+0x38]
  40db26:	mov    rdx,QWORD PTR [rsp+0x40]
  40db2b:	mov    rcx,QWORD PTR [rsp+0x48]
  40db30:	call   0x4121e0
  40db35:	test   eax,eax
  40db37:	js     0x40e340
  40db3d:	mov    r8d,DWORD PTR [rsp+0xb8]
  40db45:	mov    rcx,QWORD PTR [rsp+0x30]
  40db4a:	mov    rdx,rbx
  40db4d:	sub    r8d,ebx
  40db50:	call   0x4124a8
  40db55:	mov    rbx,QWORD PTR [rsp+0xb8]
  40db5d:	cmp    BYTE PTR [rbx],0x0
  40db60:	jne    0x40db1a
  40db62:	mov    r11d,DWORD PTR [rsp+0x60]
  40db67:	test   r11d,r11d
  40db6a:	je     0x40db7a
  40db6c:	cmp    DWORD PTR [r15+0x28b4],0x1
  40db74:	je     0x40e6ba
  40db7a:	mov    rbx,QWORD PTR [rsp+0x30]
  40db7f:	mov    rdx,QWORD PTR [rsp+0x78]
  40db84:	mov    rcx,rbx
  40db87:	call   0x412488
  40db8c:	xor    edx,edx
  40db8e:	mov    rcx,rbx
  40db91:	mov    r8d,0xffffffff
  40db97:	call   0x412480
  40db9c:	mov    rbx,QWORD PTR [rsp+0x50]
  40dba1:	mov    rcx,rbx
  40dba4:	call   0x419840
  40dba9:	mov    QWORD PTR [rsp+0xb8],rbx
  40dbb1:	add    rax,rbx
  40dbb4:	cmp    BYTE PTR [rbx],0x0
  40dbb7:	mov    rdi,rax
  40dbba:	mov    DWORD PTR [rsp+0x38],0x0
  40dbc2:	je     0x40dc42
  40dbc4:	mov    QWORD PTR [rsp+0x88],rbp
  40dbcc:	mov    r12,QWORD PTR [rsp+0x48]
  40dbd1:	mov    rbp,QWORD PTR [rsp+0x40]
  40dbd6:	mov    QWORD PTR [rsp+0x60],rsi
  40dbdb:	mov    QWORD PTR [rsp+0x70],r14
  40dbe0:	mov    r9d,DWORD PTR [r15+0x28c0]
  40dbe7:	mov    r8,rdi
  40dbea:	mov    rdx,rbp
  40dbed:	mov    rcx,r12
  40dbf0:	call   0x4121e0
  40dbf5:	test   eax,eax
  40dbf7:	js     0x40e4e0
  40dbfd:	mov    r8d,DWORD PTR [rsp+0xb8]
  40dc05:	mov    rcx,QWORD PTR [rsp+0x30]
  40dc0a:	mov    rdx,rbx
  40dc0d:	sub    r8d,ebx
  40dc10:	call   0x4124a8
  40dc15:	mov    rbx,QWORD PTR [rsp+0xb8]
  40dc1d:	cmp    BYTE PTR [rbx],0x0
  40dc20:	jne    0x40dbe0
  40dc22:	mov    r10d,DWORD PTR [rsp+0x38]
  40dc27:	mov    rbp,QWORD PTR [rsp+0x88]
  40dc2f:	test   r10d,r10d
  40dc32:	je     0x40dc42
  40dc34:	cmp    DWORD PTR [r15+0x28b4],0x1
  40dc3c:	je     0x40e71a
  40dc42:	mov    rdx,QWORD PTR [rsp+0x80]
  40dc4a:	mov    rcx,QWORD PTR [rsp+0x30]
  40dc4f:	call   0x412488
  40dc54:	mov    rax,QWORD PTR [r15+0x8]
  40dc58:	mov    r8,QWORD PTR [rsp+0xb0]
  40dc60:	mov    rcx,r15
  40dc63:	mov    rdx,QWORD PTR [rsp+0xa8]
  40dc6b:	call   QWORD PTR [rax+0x48]
  40dc6e:	mov    rcx,QWORD PTR [rsp+0xa8]
  40dc76:	call   0x4123c0
  40dc7b:	mov    rcx,QWORD PTR [rsp+0xb0]
  40dc83:	call   0x4123c0
  40dc88:	movsxd rax,DWORD PTR [r15+0x2c]
  40dc8c:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40dc92:	jmp    0x40da80
  40dc97:	nop    WORD PTR [rax+rax*1+0x0]
  40dca0:	cdqe   
  40dca2:	lea    rcx,[r15+rax*8]
  40dca6:	mov    rax,QWORD PTR [rcx+0x58]
  40dcaa:	mov    r8d,DWORD PTR [rax]
  40dcad:	movsxd rax,edx
  40dcb0:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40dcb9:	mov    rax,QWORD PTR [r15+0x20]
  40dcbd:	add    rax,0x360
  40dcc3:	cmp    r8d,0xf
  40dcc7:	mov    QWORD PTR [rcx+0x60],rax
  40dccb:	jne    0x40d6bd
  40dcd1:	mov    eax,DWORD PTR [r15+0x28ac]
  40dcd8:	mov    DWORD PTR [r15+0x28b0],eax
  40dcdf:	jmp    0x40d6bd
  40dce4:	cmp    r8d,0xd
  40dce8:	je     0x40dd30
  40dcea:	add    DWORD PTR [r15+0x28ac],0x1
  40dcf2:	jmp    0x40d825
  40dcf7:	nop    WORD PTR [rax+rax*1+0x0]
  40dd00:	mov    rcx,QWORD PTR [rax+0x50]
  40dd04:	lea    rdx,[rip+0x142ea]        # 0x421ff5
  40dd0b:	xor    r9d,r9d
  40dd0e:	xor    r8d,r8d
  40dd11:	call   0x412438
  40dd16:	test   rax,rax
  40dd19:	jne    0x40d77f
  40dd1f:	movsxd rax,DWORD PTR [r15+0x2c]
  40dd23:	jmp    0x40d79d
  40dd28:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd30:	add    DWORD PTR [r15+0x28a8],0x1
  40dd38:	jmp    0x40d825
  40dd3d:	nop    DWORD PTR [rax]
  40dd40:	movsxd rax,edx
  40dd43:	test   edx,edx
  40dd45:	lea    rcx,[r15+rax*8]
  40dd49:	mov    r8,QWORD PTR [rcx+0x58]
  40dd4d:	mov    r8d,DWORD PTR [r8]
  40dd50:	je     0x40dd6c
  40dd52:	mov    rcx,QWORD PTR [rcx+0x50]
  40dd56:	mov    ecx,DWORD PTR [rcx]
  40dd58:	cmp    ecx,0xffffffff
  40dd5b:	je     0x40dd6c
  40dd5d:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  40dd63:	cmp    ecx,0xf
  40dd66:	je     0x40e5e0
  40dd6c:	mov    rax,QWORD PTR [r15+0x8]
  40dd70:	xor    r8d,r8d
  40dd73:	mov    rax,QWORD PTR [rax+0x30]
  40dd77:	test   rax,rax
  40dd7a:	je     0x40dd8d
  40dd7c:	mov    rcx,r15
  40dd7f:	call   rax
  40dd81:	mov    rax,QWORD PTR [r15+0x8]
  40dd85:	mov    edx,DWORD PTR [r15+0x2c]
  40dd89:	mov    r8,QWORD PTR [rax+0x30]
  40dd8d:	lea    eax,[rdx-0x1]
  40dd90:	mov    DWORD PTR [r15+0x2c],eax
  40dd94:	movsxd rdx,eax
  40dd97:	test   eax,eax
  40dd99:	lea    rcx,[r15+rdx*8]
  40dd9d:	mov    r9,QWORD PTR [rcx+0x58]
  40dda1:	mov    r9d,DWORD PTR [r9]
  40dda4:	je     0x40ddc0
  40dda6:	mov    rcx,QWORD PTR [rcx+0x50]
  40ddaa:	mov    ecx,DWORD PTR [rcx]
  40ddac:	cmp    ecx,0xffffffff
  40ddaf:	je     0x40ddc0
  40ddb1:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  40ddb7:	cmp    ecx,0xf
  40ddba:	je     0x40e1c0
  40ddc0:	test   r8,r8
  40ddc3:	je     0x40ddcf
  40ddc5:	mov    rcx,r15
  40ddc8:	call   r8
  40ddcb:	mov    eax,DWORD PTR [r15+0x2c]
  40ddcf:	mov    rcx,QWORD PTR [rsp+0x58]
  40ddd4:	sub    eax,0x1
  40ddd7:	xor    edx,edx
  40ddd9:	mov    DWORD PTR [r15+0x2c],eax
  40dddd:	call   0x412488
  40dde2:	call   QWORD PTR [rip+0x1dcfc]        # 0x42bae4
  40dde8:	lea    rcx,[rax+0x30]
  40ddec:	call   0x4198f8
  40ddf1:	nop
  40ddf2:	add    rsp,0xcc8
  40ddf9:	pop    rbx
  40ddfa:	pop    rsi
  40ddfb:	pop    rdi
  40ddfc:	pop    rbp
  40ddfd:	pop    r12
  40ddff:	pop    r13
  40de01:	pop    r14
  40de03:	pop    r15
  40de05:	ret    
  40de06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de10:	mov    rdx,QWORD PTR [r15+0x8]
  40de14:	mov    r8,QWORD PTR [rdx+0x30]
  40de18:	jmp    0x40dd94
  40de1d:	nop    DWORD PTR [rax]
  40de20:	movsxd rax,DWORD PTR [r15+0x2c]
  40de24:	movsxd rdi,DWORD PTR [rbx+0x68]
  40de28:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40de2d:	mov    r9d,DWORD PTR [rax+0x58]
  40de31:	test   r9d,r9d
  40de34:	je     0x40e284
  40de3a:	mov    rax,QWORD PTR [r15+0x8]
  40de3e:	mov    r8,rdi
  40de41:	lea    rdx,[rip+0x140f3]        # 0x421f3b
  40de48:	mov    rcx,r15
  40de4b:	call   QWORD PTR [rax+0x38]
  40de4e:	movsxd rax,DWORD PTR [r15+0x2c]
  40de52:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40de58:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40de5d:	movsxd rdi,DWORD PTR [rbx+0x6c]
  40de61:	mov    r8d,DWORD PTR [rax+0x58]
  40de65:	test   r8d,r8d
  40de68:	je     0x40e260
  40de6e:	mov    rax,QWORD PTR [r15+0x8]
  40de72:	mov    r8,rdi
  40de75:	lea    rdx,[rip+0x140c5]        # 0x421f41
  40de7c:	mov    rcx,r15
  40de7f:	call   QWORD PTR [rax+0x38]
  40de82:	movsxd rax,DWORD PTR [r15+0x2c]
  40de86:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40de8c:	mov    ecx,DWORD PTR [rbx+0x74]
  40de8f:	call   0x412368
  40de94:	test   rax,rax
  40de97:	mov    r8,rax
  40de9a:	je     0x40e692
  40dea0:	lea    rdx,[rip+0x140a1]        # 0x421f48
  40dea7:	mov    rcx,r15
  40deaa:	call   0x40a930
  40deaf:	mov    rdx,rsi
  40deb2:	mov    r8,rbx
  40deb5:	mov    rcx,rbp
  40deb8:	call   0x412050
  40debd:	test   eax,eax
  40debf:	mov    rsi,rax
  40dec2:	jne    0x40e204
  40dec8:	lea    r8,[rip+0x13c64]        # 0x421b33
  40decf:	lea    rdx,[rip+0x1407a]        # 0x421f50
  40ded6:	mov    rcx,r15
  40ded9:	call   0x40ac10
  40dede:	mov    rdi,QWORD PTR [rsp+0x58]
  40dee3:	mov    rcx,rdi
  40dee6:	call   0x412490
  40deeb:	mov    ecx,DWORD PTR [rbx+0x7c]
  40deee:	call   0x412370
  40def3:	lea    rdx,[rip+0x13105]        # 0x420fff
  40defa:	movsx  r8d,al
  40defe:	mov    rcx,rdi
  40df01:	call   0x412478
  40df06:	mov    r8,QWORD PTR [rsp+0xc0]
  40df0e:	lea    rdx,[rip+0x1404f]        # 0x421f64
  40df15:	mov    rcx,r15
  40df18:	call   0x40a930
  40df1d:	movsxd rax,DWORD PTR [r15+0x2c]
  40df21:	movsxd rsi,DWORD PTR [rbx+0xe0]
  40df28:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40df2d:	mov    ecx,DWORD PTR [rax+0x58]
  40df30:	test   ecx,ecx
  40df32:	jne    0x40df53
  40df34:	mov    rcx,QWORD PTR [rax+0x50]
  40df38:	lea    rdx,[rip+0x1402f]        # 0x421f6e
  40df3f:	xor    r9d,r9d
  40df42:	xor    r8d,r8d
  40df45:	call   0x412438
  40df4a:	test   rax,rax
  40df4d:	je     0x40e711
  40df53:	mov    rax,QWORD PTR [r15+0x8]
  40df57:	mov    r8,rsi
  40df5a:	lea    rdx,[rip+0x1400d]        # 0x421f6e
  40df61:	mov    rcx,r15
  40df64:	call   QWORD PTR [rax+0x38]
  40df67:	movsxd rax,DWORD PTR [r15+0x2c]
  40df6b:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40df71:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40df76:	movsxd rsi,DWORD PTR [rbx+0xe4]
  40df7d:	mov    edx,DWORD PTR [rax+0x58]
  40df80:	test   edx,edx
  40df82:	jne    0x40dfa3
  40df84:	mov    rcx,QWORD PTR [rax+0x50]
  40df88:	lea    rdx,[rip+0x13ff4]        # 0x421f83
  40df8f:	xor    r9d,r9d
  40df92:	xor    r8d,r8d
  40df95:	call   0x412438
  40df9a:	test   rax,rax
  40df9d:	je     0x40e708
  40dfa3:	mov    rax,QWORD PTR [r15+0x8]
  40dfa7:	mov    r8,rsi
  40dfaa:	lea    rdx,[rip+0x13fd2]        # 0x421f83
  40dfb1:	mov    rcx,r15
  40dfb4:	call   QWORD PTR [rax+0x38]
  40dfb7:	movsxd rax,DWORD PTR [r15+0x2c]
  40dfbb:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40dfc1:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40dfc6:	movsxd rsi,DWORD PTR [rbx+0x188]
  40dfcd:	mov    r14d,DWORD PTR [rax+0x58]
  40dfd1:	test   r14d,r14d
  40dfd4:	jne    0x40dff5
  40dfd6:	mov    rcx,QWORD PTR [rax+0x50]
  40dfda:	lea    rdx,[rip+0x13fb9]        # 0x421f9a
  40dfe1:	xor    r9d,r9d
  40dfe4:	xor    r8d,r8d
  40dfe7:	call   0x412438
  40dfec:	test   rax,rax
  40dfef:	je     0x40e6ff
  40dff5:	mov    rax,QWORD PTR [r15+0x8]
  40dff9:	mov    r8,rsi
  40dffc:	lea    rdx,[rip+0x13f97]        # 0x421f9a
  40e003:	mov    rcx,r15
  40e006:	call   QWORD PTR [rax+0x38]
  40e009:	movsxd rax,DWORD PTR [r15+0x2c]
  40e00d:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40e013:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40e018:	movsxd rsi,DWORD PTR [rbx+0x18c]
  40e01f:	mov    r13d,DWORD PTR [rax+0x58]
  40e023:	test   r13d,r13d
  40e026:	jne    0x40e047
  40e028:	mov    rcx,QWORD PTR [rax+0x50]
  40e02c:	lea    rdx,[rip+0x13f78]        # 0x421fab
  40e033:	xor    r9d,r9d
  40e036:	xor    r8d,r8d
  40e039:	call   0x412438
  40e03e:	test   rax,rax
  40e041:	je     0x40e6e9
  40e047:	mov    rax,QWORD PTR [r15+0x8]
  40e04b:	mov    r8,rsi
  40e04e:	lea    rdx,[rip+0x13f56]        # 0x421fab
  40e055:	mov    rcx,r15
  40e058:	call   QWORD PTR [rax+0x38]
  40e05b:	movsxd rax,DWORD PTR [r15+0x2c]
  40e05f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40e065:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40e06a:	movsxd rsi,DWORD PTR [rbx+0x184]
  40e071:	mov    r12d,DWORD PTR [rax+0x58]
  40e075:	test   r12d,r12d
  40e078:	jne    0x40e099
  40e07a:	mov    rcx,QWORD PTR [rax+0x50]
  40e07e:	lea    rdx,[rip+0x13f36]        # 0x421fbb
  40e085:	xor    r9d,r9d
  40e088:	xor    r8d,r8d
  40e08b:	call   0x412438
  40e090:	test   rax,rax
  40e093:	je     0x40d66d
  40e099:	mov    rax,QWORD PTR [r15+0x8]
  40e09d:	mov    r8,rsi
  40e0a0:	lea    rdx,[rip+0x13f14]        # 0x421fbb
  40e0a7:	mov    rcx,r15
  40e0aa:	call   QWORD PTR [rax+0x38]
  40e0ad:	movsxd rax,DWORD PTR [r15+0x2c]
  40e0b1:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40e0b7:	jmp    0x40d66d
  40e0bc:	nop    DWORD PTR [rax+0x0]
  40e0c0:	pxor   xmm1,xmm1
  40e0c4:	lea    rdi,[rsp+0x8c0]
  40e0cc:	pxor   xmm2,xmm2
  40e0d0:	lea    rdx,[rsp+0x90]
  40e0d8:	pxor   xmm0,xmm0
  40e0dc:	mov    rcx,rdi
  40e0df:	cvtsi2sd xmm1,DWORD PTR [rsi+0x30]
  40e0e4:	cvtsi2sd xmm2,DWORD PTR [rsi+0x34]
  40e0e9:	divsd  xmm1,xmm2
  40e0ed:	cvtsi2sd xmm0,rax
  40e0f2:	lea    rax,[rip+0x16f55]        # 0x42504e
  40e0f9:	mov    QWORD PTR [rsp+0x98],rax
  40e101:	mulsd  xmm0,xmm1
  40e105:	movq   QWORD PTR [rsp+0x90],xmm0
  40e10e:	call   0x409790
  40e113:	lea    rdx,[rip+0x13dfb]        # 0x421f15
  40e11a:	mov    r8,rdi
  40e11d:	mov    rcx,r15
  40e120:	call   0x40a930
  40e125:	mov    rcx,rbx
  40e128:	call   0x4123d8
  40e12d:	cmp    rax,0xffffffffffffffff
  40e131:	jne    0x40d5a3
  40e137:	lea    r8,[rip+0x139f5]        # 0x421b33
  40e13e:	lea    rdx,[rip+0x13de2]        # 0x421f27
  40e145:	mov    rcx,r15
  40e148:	call   0x40ac10
  40e14d:	mov    rcx,rbx
  40e150:	call   0x4123d0
  40e155:	cmp    eax,0xffffffff
  40e158:	jne    0x40d5f2
  40e15e:	lea    r8,[rip+0x139ce]        # 0x421b33
  40e165:	lea    rdx,[rip+0x13dc6]        # 0x421f32
  40e16c:	mov    rcx,r15
  40e16f:	call   0x40ac10
  40e174:	jmp    0x40d655
  40e179:	nop    DWORD PTR [rax+0x0]
  40e180:	movsxd rax,DWORD PTR [r15+0x2c]
  40e184:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40e189:	mov    r11d,DWORD PTR [rax+0x58]
  40e18d:	test   r11d,r11d
  40e190:	je     0x40e2f4
  40e196:	mov    rax,QWORD PTR [r15+0x8]
  40e19a:	mov    r8,rdi
  40e19d:	lea    rdx,[rip+0x13d64]        # 0x421f08
  40e1a4:	mov    rcx,r15
  40e1a7:	call   QWORD PTR [rax+0x38]
  40e1aa:	movsxd rax,DWORD PTR [r15+0x2c]
  40e1ae:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40e1b4:	jmp    0x40d56a
  40e1b9:	nop    DWORD PTR [rax+0x0]
  40e1c0:	cmp    r9d,0xd
  40e1c4:	je     0x40e653
  40e1ca:	add    DWORD PTR [r15+0x28ac],0x1
  40e1d2:	jmp    0x40ddc0
  40e1d7:	nop    WORD PTR [rax+rax*1+0x0]
  40e1e0:	mov    rcx,QWORD PTR [rax+0x50]
  40e1e4:	lea    rdx,[rip+0x13de7]        # 0x421fd2
  40e1eb:	xor    r9d,r9d
  40e1ee:	xor    r8d,r8d
  40e1f1:	call   0x412438
  40e1f6:	test   rax,rax
  40e1f9:	jne    0x40d8eb
  40e1ff:	jmp    0x40d909
  40e204:	lea    rdi,[rsp+0x8c0]
  40e20c:	mov    rbp,rax
  40e20f:	xor    edx,edx
  40e211:	mov    r8d,0x1
  40e217:	sar    rbp,0x20
  40e21b:	mov    rcx,rdi
  40e21e:	call   0x412480
  40e223:	lea    rdx,[rip+0x13956]        # 0x421b80
  40e22a:	mov    r8d,esi
  40e22d:	mov    rcx,rdi
  40e230:	mov    DWORD PTR [rsp+0x20],ebp
  40e234:	mov    r9d,0x3a
  40e23a:	call   0x412478
  40e23f:	mov    r8,QWORD PTR [rsp+0x8c0]
  40e247:	lea    rdx,[rip+0x13d02]        # 0x421f50
  40e24e:	mov    rcx,r15
  40e251:	call   0x40a930
  40e256:	jmp    0x40dede
  40e25b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e260:	mov    rcx,QWORD PTR [rax+0x50]
  40e264:	lea    rdx,[rip+0x13cd6]        # 0x421f41
  40e26b:	xor    r9d,r9d
  40e26e:	xor    r8d,r8d
  40e271:	call   0x412438
  40e276:	test   rax,rax
  40e279:	jne    0x40de6e
  40e27f:	jmp    0x40de8c
  40e284:	mov    rcx,QWORD PTR [rax+0x50]
  40e288:	lea    rdx,[rip+0x13cac]        # 0x421f3b
  40e28f:	xor    r9d,r9d
  40e292:	xor    r8d,r8d
  40e295:	call   0x412438
  40e29a:	test   rax,rax
  40e29d:	jne    0x40de3a
  40e2a3:	movsxd rax,DWORD PTR [r15+0x2c]
  40e2a7:	jmp    0x40de58
  40e2ac:	nop    DWORD PTR [rax+0x0]
  40e2b0:	lea    r8,[rip+0x13bd7]        # 0x421e8e
  40e2b7:	lea    rdx,[rip+0x13d28]        # 0x421fe6
  40e2be:	mov    rcx,r15
  40e2c1:	call   0x40ac10
  40e2c6:	jmp    0x40d66d
  40e2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e2d0:	mov    rcx,QWORD PTR [rax+0x50]
  40e2d4:	lea    rdx,[rip+0x13d02]        # 0x421fdd
  40e2db:	xor    r9d,r9d
  40e2de:	xor    r8d,r8d
  40e2e1:	call   0x412438
  40e2e6:	test   rax,rax
  40e2e9:	jne    0x40d928
  40e2ef:	jmp    0x40d946
  40e2f4:	mov    rcx,QWORD PTR [rax+0x50]
  40e2f8:	lea    rdx,[rip+0x13c09]        # 0x421f08
  40e2ff:	xor    r9d,r9d
  40e302:	xor    r8d,r8d
  40e305:	call   0x412438
  40e30a:	test   rax,rax
  40e30d:	jne    0x40e196
  40e313:	jmp    0x40d56a
  40e318:	mov    rax,QWORD PTR [r15+0x20]
  40e31c:	mov    DWORD PTR [r15+0x30],0x0
  40e324:	add    rax,0x300
  40e32a:	mov    QWORD PTR [r15+0x58],rax
  40e32e:	jmp    0x40da18
  40e333:	movsxd rax,DWORD PTR [r15+0x2c]
  40e337:	jmp    0x40d45c
  40e33c:	nop    DWORD PTR [rax+0x0]
  40e340:	xor    edx,edx
  40e342:	mov    r8d,0x1
  40e348:	mov    rcx,r13
  40e34b:	call   0x412480
  40e350:	mov    rdi,QWORD PTR [rsp+0xb8]
  40e358:	lea    rdx,[rip+0x13137]        # 0x421496
  40e35f:	mov    rcx,r13
  40e362:	mov    r12,rbx
  40e365:	call   0x412478
  40e36a:	cmp    rdi,rbx
  40e36d:	je     0x40e38d
  40e36f:	nop
  40e370:	movzx  r8d,BYTE PTR [r12]
  40e375:	lea    rdx,[rip+0x13166]        # 0x4214e2
  40e37c:	mov    rcx,r13
  40e37f:	add    r12,0x1
  40e383:	call   0x412478
  40e388:	cmp    r12,rdi
  40e38b:	jne    0x40e370
  40e38d:	mov    r9,QWORD PTR [rsp+0x8c0]
  40e395:	lea    r8,[rip+0x132e4]        # 0x421680
  40e39c:	mov    QWORD PTR [rsp+0x20],rsi
  40e3a1:	mov    edx,0x30
  40e3a6:	mov    rcx,r15
  40e3a9:	call   0x412308
  40e3ae:	mov    eax,DWORD PTR [r15+0x28b4]
  40e3b5:	add    DWORD PTR [rsp+0x60],0x1
  40e3ba:	test   eax,eax
  40e3bc:	je     0x40e3f0
  40e3be:	cmp    eax,0x1
  40e3c1:	jne    0x40e3e2
  40e3c3:	mov    r8,QWORD PTR [r15+0x28b8]
  40e3ca:	mov    rcx,QWORD PTR [rsp+0x30]
  40e3cf:	lea    rdx,[rip+0x12c10]        # 0x420fe6
  40e3d6:	call   0x412478
  40e3db:	mov    eax,DWORD PTR [r15+0x28b4]
  40e3e2:	cmp    eax,0x2
  40e3e5:	jne    0x40db55
  40e3eb:	jmp    0x40db3d
  40e3f0:	lea    r8,[rip+0x132b9]        # 0x4216b0
  40e3f7:	mov    edx,0x10
  40e3fc:	mov    rcx,r15
  40e3ff:	mov    r9,rsi
  40e402:	mov    rbx,QWORD PTR [rsp+0xd18]
  40e40a:	call   0x412308
  40e40f:	mov    rcx,QWORD PTR [rsp+0x30]
  40e414:	lea    rdx,[rsp+0xa8]
  40e41c:	call   0x412488
  40e421:	mov    rax,QWORD PTR [r14+0x48]
  40e425:	lea    r8,[rip+0x13bec]        # 0x422018
  40e42c:	mov    edx,0x10
  40e431:	mov    r9,rsi
  40e434:	mov    rcx,r15
  40e437:	mov    QWORD PTR [rsp+0x28],rax
  40e43c:	mov    rax,QWORD PTR [rsp+0x50]
  40e441:	mov    QWORD PTR [rsp+0x20],rax
  40e446:	call   0x412308
  40e44b:	mov    rcx,QWORD PTR [rsp+0xa8]
  40e453:	call   0x4123c0
  40e458:	mov    rcx,QWORD PTR [rsp+0xb0]
  40e460:	call   0x4123c0
  40e465:	movsxd rdx,DWORD PTR [r15+0x2c]
  40e469:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  40e46f:	mov    rax,rdx
  40e472:	lea    rcx,[r15+rdx*8]
  40e476:	test   eax,eax
  40e478:	mov    r8,QWORD PTR [rcx+0x58]
  40e47c:	mov    r8d,DWORD PTR [r8]
  40e47f:	je     0x40e49b
  40e481:	mov    rcx,QWORD PTR [rcx+0x50]
  40e485:	mov    ecx,DWORD PTR [rcx]
  40e487:	cmp    ecx,0xffffffff
  40e48a:	je     0x40e49b
  40e48c:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  40e492:	cmp    ecx,0xf
  40e495:	je     0x40e660
  40e49b:	mov    rdx,QWORD PTR [r15+0x8]
  40e49f:	mov    rdx,QWORD PTR [rdx+0x30]
  40e4a3:	test   rdx,rdx
  40e4a6:	je     0x40e4b1
  40e4a8:	mov    rcx,r15
  40e4ab:	call   rdx
  40e4ad:	mov    eax,DWORD PTR [r15+0x2c]
  40e4b1:	sub    eax,0x1
  40e4b4:	mov    DWORD PTR [r15+0x2c],eax
  40e4b8:	jmp    0x40d67f
  40e4bd:	nop    DWORD PTR [rax]
  40e4c0:	mov    rcx,QWORD PTR [r14+0x50]
  40e4c4:	xor    r9d,r9d
  40e4c7:	xor    r8d,r8d
  40e4ca:	mov    rdx,rsi
  40e4cd:	call   0x412438
  40e4d2:	test   rax,rax
  40e4d5:	jne    0x40dac8
  40e4db:	jmp    0x40da80
  40e4e0:	xor    edx,edx
  40e4e2:	mov    r8d,0x1
  40e4e8:	mov    rcx,r13
  40e4eb:	call   0x412480
  40e4f0:	mov    rsi,QWORD PTR [rsp+0xb8]
  40e4f8:	lea    rdx,[rip+0x12f97]        # 0x421496
  40e4ff:	mov    rcx,r13
  40e502:	mov    r14,rbx
  40e505:	call   0x412478
  40e50a:	cmp    rsi,rbx
  40e50d:	je     0x40e52c
  40e50f:	nop
  40e510:	movzx  r8d,BYTE PTR [r14]
  40e514:	lea    rdx,[rip+0x12fc7]        # 0x4214e2
  40e51b:	mov    rcx,r13
  40e51e:	add    r14,0x1
  40e522:	call   0x412478
  40e527:	cmp    r14,rsi
  40e52a:	jne    0x40e510
  40e52c:	mov    rax,QWORD PTR [rsp+0x50]
  40e531:	mov    r9,QWORD PTR [rsp+0x8c0]
  40e539:	lea    r8,[rip+0x13140]        # 0x421680
  40e540:	mov    edx,0x30
  40e545:	mov    rcx,r15
  40e548:	mov    QWORD PTR [rsp+0x20],rax
  40e54d:	call   0x412308
  40e552:	mov    eax,DWORD PTR [r15+0x28b4]
  40e559:	add    DWORD PTR [rsp+0x38],0x1
  40e55e:	test   eax,eax
  40e560:	je     0x40e594
  40e562:	cmp    eax,0x1
  40e565:	jne    0x40e586
  40e567:	mov    r8,QWORD PTR [r15+0x28b8]
  40e56e:	mov    rcx,QWORD PTR [rsp+0x30]
  40e573:	lea    rdx,[rip+0x12a6c]        # 0x420fe6
  40e57a:	call   0x412478
  40e57f:	mov    eax,DWORD PTR [r15+0x28b4]
  40e586:	cmp    eax,0x2
  40e589:	jne    0x40dc15
  40e58f:	jmp    0x40dbfd
  40e594:	mov    r9,QWORD PTR [rsp+0x50]
  40e599:	lea    r8,[rip+0x13110]        # 0x4216b0
  40e5a0:	mov    rcx,r15
  40e5a3:	mov    edx,0x10
  40e5a8:	mov    rsi,QWORD PTR [rsp+0x60]
  40e5ad:	mov    r14,QWORD PTR [rsp+0x70]
  40e5b2:	mov    rbx,QWORD PTR [rsp+0xd18]
  40e5ba:	call   0x412308
  40e5bf:	mov    rcx,QWORD PTR [rsp+0x30]
  40e5c4:	lea    rdx,[rsp+0xb0]
  40e5cc:	call   0x412488
  40e5d1:	jmp    0x40e421
  40e5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e5e0:	cmp    r8d,0xd
  40e5e4:	je     0x40e6ad
  40e5ea:	add    DWORD PTR [r15+0x28ac],0x1
  40e5f2:	jmp    0x40dd6c
  40e5f7:	nop    WORD PTR [rax+rax*1+0x0]
  40e600:	mov    rcx,QWORD PTR [rax+0x50]
  40e604:	lea    rdx,[rip+0x13927]        # 0x421f32
  40e60b:	xor    r9d,r9d
  40e60e:	xor    r8d,r8d
  40e611:	call   0x412438
  40e616:	test   rax,rax
  40e619:	jne    0x40d637
  40e61f:	jmp    0x40d655
  40e624:	lea    r8,[rip+0x13863]        # 0x421e8e
  40e62b:	lea    rdx,[rip+0x1380f]        # 0x421e41
  40e632:	mov    rcx,r15
  40e635:	call   0x40ac10
  40e63a:	jmp    0x40d40a
  40e63f:	movsxd rdx,DWORD PTR [r15+0x2c]
  40e643:	mov    rbx,QWORD PTR [rsp+0xd18]
  40e64b:	mov    rax,rdx
  40e64e:	jmp    0x40e472
  40e653:	add    DWORD PTR [r15+0x28a8],0x1
  40e65b:	jmp    0x40ddc0
  40e660:	cmp    r8d,0xd
  40e664:	je     0x40e6f2
  40e66a:	add    DWORD PTR [r15+0x28ac],0x1
  40e672:	jmp    0x40e49b
  40e677:	lea    r8,[rip+0x13810]        # 0x421e8e
  40e67e:	lea    rdx,[rip+0x13942]        # 0x421fc7
  40e685:	mov    rcx,r15
  40e688:	call   0x40ac10
  40e68d:	jmp    0x40d8d3
  40e692:	lea    r8,[rip+0x137f5]        # 0x421e8e
  40e699:	lea    rdx,[rip+0x138a8]        # 0x421f48
  40e6a0:	mov    rcx,r15
  40e6a3:	call   0x40ac10
  40e6a8:	jmp    0x40deaf
  40e6ad:	add    DWORD PTR [r15+0x28a8],0x1
  40e6b5:	jmp    0x40dd6c
  40e6ba:	mov    rax,QWORD PTR [r15+0x28b8]
  40e6c1:	mov    r9d,DWORD PTR [rsp+0x60]
  40e6c6:	lea    r8,[rip+0x13013]        # 0x4216e0
  40e6cd:	mov    QWORD PTR [rsp+0x20],rsi
  40e6d2:	mov    edx,0x18
  40e6d7:	mov    rcx,r15
  40e6da:	mov    QWORD PTR [rsp+0x28],rax
  40e6df:	call   0x412308
  40e6e4:	jmp    0x40db7a
  40e6e9:	movsxd rax,DWORD PTR [r15+0x2c]
  40e6ed:	jmp    0x40e065
  40e6f2:	add    DWORD PTR [r15+0x28a8],0x1
  40e6fa:	jmp    0x40e49b
  40e6ff:	movsxd rax,DWORD PTR [r15+0x2c]
  40e703:	jmp    0x40e013
  40e708:	movsxd rax,DWORD PTR [r15+0x2c]
  40e70c:	jmp    0x40dfc1
  40e711:	movsxd rax,DWORD PTR [r15+0x2c]
  40e715:	jmp    0x40df71
  40e71a:	mov    rax,QWORD PTR [r15+0x28b8]
  40e721:	mov    r9d,DWORD PTR [rsp+0x38]
  40e726:	lea    r8,[rip+0x12fb3]        # 0x4216e0
  40e72d:	mov    edx,0x18
  40e732:	mov    rcx,r15
  40e735:	mov    QWORD PTR [rsp+0x28],rax
  40e73a:	mov    rax,QWORD PTR [rsp+0x50]
  40e73f:	mov    QWORD PTR [rsp+0x20],rax
  40e744:	call   0x412308
  40e749:	jmp    0x40dc42
  40e74e:	call   0x419e29
  40e753:	call   0x419910
  40e758:	nop
  40e759:	nop    DWORD PTR [rax+0x0]
  40e760:	push   r15
  40e762:	push   r14
  40e764:	push   r13
  40e766:	push   r12
  40e768:	push   rbp
  40e769:	push   rdi
  40e76a:	push   rsi
  40e76b:	push   rbx
  40e76c:	sub    rsp,0xa18
  40e773:	mov    r10d,DWORD PTR [r8+0x1c]
  40e777:	mov    rax,QWORD PTR [r8+0x10]
  40e77b:	mov    r13,rcx
  40e77e:	mov    r15,rdx
  40e781:	mov    QWORD PTR [rsp+0xa70],r8
  40e789:	mov    QWORD PTR [rsp+0xa78],r9
  40e791:	mov    QWORD PTR [rsp+0xa8],0x0
  40e79d:	test   r10d,r10d
  40e7a0:	mov    QWORD PTR [rsp+0x60],rax
  40e7a5:	mov    DWORD PTR [rsp+0x4c],0x0
  40e7ad:	je     0x40e7bf
  40e7af:	mov    r9d,DWORD PTR [r8+0x24]
  40e7b3:	xor    eax,eax
  40e7b5:	test   r9d,r9d
  40e7b8:	sete   al
  40e7bb:	mov    DWORD PTR [rsp+0x4c],eax
  40e7bf:	lea    r14,[rsp+0xd0]
  40e7c7:	mov    rcx,r14
  40e7ca:	call   0x412100
  40e7cf:	lea    r8,[rip+0x1387c]        # 0x422052
  40e7d6:	xor    ecx,ecx
  40e7d8:	mov    edx,0x28
  40e7dd:	call   0x412308
  40e7e2:	mov    rcx,QWORD PTR [rsp+0xa70]
  40e7ea:	mov    edx,0x28
  40e7ef:	call   0x409c80
  40e7f4:	mov    rax,QWORD PTR [rsp+0xa70]
  40e7fc:	mov    r8d,DWORD PTR [rax+0x18]
  40e800:	test   r8d,r8d
  40e803:	je     0x40fa47
  40e809:	mov    ecx,DWORD PTR [rax+0x20]
  40e80c:	test   ecx,ecx
  40e80e:	jne    0x40eca0
  40e814:	mov    rax,QWORD PTR [rsp+0xa70]
  40e81c:	mov    rbx,QWORD PTR [rax+0x8]
  40e820:	movabs rax,0x8000000000000000
  40e82a:	mov    QWORD PTR [rsp+0xb0],0x0
  40e836:	mov    QWORD PTR [rsp+0xb8],0x0
  40e842:	cmp    rbx,rax
  40e845:	mov    QWORD PTR [rsp+0xc0],0x0
  40e851:	mov    QWORD PTR [rsp+0xc8],0x0
  40e85d:	je     0x40fa78
  40e863:	pxor   xmm0,xmm0
  40e867:	lea    rsi,[rsp+0xb0]
  40e86f:	lea    r8,[rip+0x12c98]        # 0x42150e
  40e876:	mov    edx,0x20
  40e87b:	mov    rcx,rsi
  40e87e:	cvtsi2sd xmm0,rbx
  40e883:	mulsd  xmm0,QWORD PTR [rip+0x16a25]        # 0x4252b0
  40e88b:	movapd xmm3,xmm0
  40e88f:	movq   r9,xmm0
  40e894:	call   0x409180
  40e899:	lea    r8,[rip+0x13820]        # 0x4220c0
  40e8a0:	xor    ecx,ecx
  40e8a2:	mov    r9,rsi
  40e8a5:	mov    edx,0x28
  40e8aa:	call   0x412308
  40e8af:	movabs rax,0x7fffffffffffffff
  40e8b9:	mov    DWORD PTR [rsp+0x28],0x0
  40e8c1:	mov    r9,rbx
  40e8c4:	mov    QWORD PTR [rsp+0x20],rax
  40e8c9:	movabs r8,0x8000000000000001
  40e8d3:	mov    edx,0xffffffff
  40e8d8:	mov    rcx,r15
  40e8db:	call   0x411fe0
  40e8e0:	test   eax,eax
  40e8e2:	mov    DWORD PTR [rsp+0x54],eax
  40e8e6:	js     0x40fa99
  40e8ec:	call   0x412410
  40e8f1:	test   rax,rax
  40e8f4:	mov    QWORD PTR [rsp+0xa8],rax
  40e8fc:	je     0x40f9d1
  40e902:	movabs rax,0x8000000000000001
  40e90c:	lea    rbp,[rsp+0x210]
  40e914:	lea    r12,[rsp+0x610]
  40e91c:	mov    QWORD PTR [rsp+0x68],rax
  40e921:	lea    rax,[rsp+0x130]
  40e929:	mov    QWORD PTR [rsp+0x40],r14
  40e92e:	mov    DWORD PTR [rsp+0x50],0x0
  40e936:	mov    r14,rbp
  40e939:	mov    DWORD PTR [rsp+0x58],0x0
  40e941:	mov    QWORD PTR [rsp+0x38],rax
  40e946:	lea    rax,[rsp+0x90]
  40e94e:	mov    rbp,r12
  40e951:	mov    r12,QWORD PTR [rsp+0xa70]
  40e959:	mov    QWORD PTR [rsp+0x70],rax
  40e95e:	lea    rax,[rsp+0x6d0]
  40e966:	mov    QWORD PTR [rsp+0x78],rax
  40e96b:	jmp    0x40e9ac
  40e96d:	nop    DWORD PTR [rax]
  40e970:	cmp    r10d,0x3
  40e974:	je     0x40ecf0
  40e97a:	test   r10d,r10d
  40e97d:	je     0x40ecd0
  40e983:	cmp    eax,0x0
  40e986:	mov    edx,0x0
  40e98b:	cmovle edx,eax
  40e98e:	movsxd rcx,edx
  40e991:	add    QWORD PTR [rsp+0x148],rcx
  40e999:	sub    eax,edx
  40e99b:	mov    DWORD PTR [rsp+0x150],eax
  40e9a2:	mov    rcx,QWORD PTR [rsp+0x40]
  40e9a7:	call   0x412120
  40e9ac:	mov    rdx,QWORD PTR [rsp+0x40]
  40e9b1:	mov    rcx,r15
  40e9b4:	call   0x412038
  40e9b9:	test   eax,eax
  40e9bb:	jne    0x40f31c
  40e9c1:	mov    edx,DWORD PTR [r15+0x2c]
  40e9c5:	cmp    edx,DWORD PTR [rip+0x1a915]        # 0x4292e0
  40e9cb:	ja     0x40edc5
  40e9d1:	movsxd rax,DWORD PTR [rsp+0xf4]
  40e9d9:	mov    rdx,QWORD PTR [rip+0x1a8e8]        # 0x4292c8
  40e9e0:	mov    edx,DWORD PTR [rdx+rax*4]
  40e9e3:	test   edx,edx
  40e9e5:	je     0x40e9a2
  40e9e7:	mov    rdx,QWORD PTR [r15+0x30]
  40e9eb:	mov    rcx,QWORD PTR [rsp+0xd8]
  40e9f3:	lea    rsi,[rax*8+0x0]
  40e9fb:	mov    rbx,QWORD PTR [rdx+rax*8]
  40e9ff:	movabs rax,0x8000000000000000
  40ea09:	cmp    rcx,rax
  40ea0c:	mov    rdx,QWORD PTR [rbx+0x30]
  40ea10:	je     0x40ea2c
  40ea12:	movabs r8,0xf424000000001
  40ea1c:	call   0x412228
  40ea21:	mov    rdi,QWORD PTR [rsp+0xa78]
  40ea29:	mov    QWORD PTR [rdi],rax
  40ea2c:	mov    eax,DWORD PTR [rsp+0x50]
  40ea30:	test   eax,eax
  40ea32:	jne    0x40ea5f
  40ea34:	mov    rax,QWORD PTR [rsp+0xa78]
  40ea3c:	movabs rdx,0x8000000000000000
  40ea46:	mov    rax,QWORD PTR [rax]
  40ea49:	cmp    rax,rdx
  40ea4c:	je     0x40ed10
  40ea52:	mov    QWORD PTR [rsp+0x68],rax
  40ea57:	mov    DWORD PTR [rsp+0x50],0x1
  40ea5f:	cmp    DWORD PTR [rsp+0x4c],0x1
  40ea64:	je     0x40ed10
  40ea6a:	mov    eax,DWORD PTR [r12+0x24]
  40ea6f:	test   eax,eax
  40ea71:	je     0x40eea2
  40ea77:	mov    rax,QWORD PTR [r12+0x10]
  40ea7c:	mov    rdi,QWORD PTR [rsp+0x68]
  40ea81:	add    rdi,rax
  40ea84:	mov    QWORD PTR [rsp+0x60],rdi
  40ea89:	mov    edi,DWORD PTR [r12+0x28]
  40ea8e:	test   edi,edi
  40ea90:	je     0x40ed71
  40ea96:	mov    DWORD PTR [rsp+0x4c],0x1
  40ea9e:	movsxd rdx,DWORD PTR [rsp+0x58]
  40eaa3:	cmp    rdx,rax
  40eaa6:	jge    0x40f31c
  40eaac:	nop    DWORD PTR [rax+0x0]
  40eab0:	mov    r8d,DWORD PTR [rip+0x1a8d5]        # 0x42938c
  40eab7:	add    DWORD PTR [rsp+0x58],0x1
  40eabc:	test   r8d,r8d
  40eabf:	je     0x40eada
  40eac1:	mov    ecx,DWORD PTR [rip+0x1a8b1]        # 0x429378
  40eac7:	test   ecx,ecx
  40eac9:	jne    0x40eeb0
  40eacf:	add    rsi,QWORD PTR [rip+0x1a802]        # 0x4292d8
  40ead6:	add    QWORD PTR [rsi],0x1
  40eada:	mov    r10d,DWORD PTR [rip+0x1a8af]        # 0x429390
  40eae1:	test   r10d,r10d
  40eae4:	je     0x40e9a2
  40eaea:	mov    rax,QWORD PTR [rsp+0xd0]
  40eaf2:	mov    QWORD PTR [rsp+0x130],rax
  40eafa:	mov    rax,QWORD PTR [rsp+0xd8]
  40eb02:	mov    QWORD PTR [rsp+0x138],rax
  40eb0a:	mov    rax,QWORD PTR [rsp+0xe0]
  40eb12:	mov    QWORD PTR [rsp+0x140],rax
  40eb1a:	mov    rax,QWORD PTR [rsp+0xe8]
  40eb22:	mov    QWORD PTR [rsp+0x148],rax
  40eb2a:	mov    rax,QWORD PTR [rsp+0xf0]
  40eb32:	mov    QWORD PTR [rsp+0x150],rax
  40eb3a:	mov    rax,QWORD PTR [rsp+0xf8]
  40eb42:	mov    QWORD PTR [rsp+0x158],rax
  40eb4a:	mov    rax,QWORD PTR [rsp+0x100]
  40eb52:	mov    QWORD PTR [rsp+0x160],rax
  40eb5a:	mov    rax,QWORD PTR [rsp+0x108]
  40eb62:	mov    QWORD PTR [rsp+0x168],rax
  40eb6a:	mov    rax,QWORD PTR [rsp+0x110]
  40eb72:	mov    QWORD PTR [rsp+0x170],rax
  40eb7a:	mov    rax,QWORD PTR [rsp+0x118]
  40eb82:	mov    QWORD PTR [rsp+0x178],rax
  40eb8a:	mov    rax,QWORD PTR [rsp+0x120]
  40eb92:	mov    QWORD PTR [rsp+0x180],rax
  40eb9a:	mov    rax,QWORD PTR [rsp+0x128]
  40eba2:	mov    QWORD PTR [rsp+0x188],rax
  40ebaa:	mov    eax,DWORD PTR [rsp+0x150]
  40ebb1:	test   eax,eax
  40ebb3:	je     0x40e9a2
  40ebb9:	movsxd rcx,DWORD PTR [rsp+0x154]
  40ebc1:	mov    rdx,QWORD PTR [r15+0x30]
  40ebc5:	mov    rsi,QWORD PTR [rsp+0xa8]
  40ebcd:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40ebd1:	mov    rbx,QWORD PTR [rdx+0x8]
  40ebd5:	mov    DWORD PTR [rsp+0x210],0x0
  40ebe0:	cmp    QWORD PTR [rbx+0x10],0x0
  40ebe5:	je     0x40ed40
  40ebeb:	mov    r10d,DWORD PTR [rbx+0xc]
  40ebef:	cmp    r10d,0x1
  40ebf3:	jne    0x40e970
  40ebf9:	mov    r9,QWORD PTR [rsp+0x38]
  40ebfe:	mov    r8,r14
  40ec01:	mov    rdx,rsi
  40ec04:	mov    rcx,rbx
  40ec07:	call   0x4120e0
  40ec0c:	test   eax,eax
  40ec0e:	js     0x40e9a2
  40ec14:	mov    edx,DWORD PTR [rsp+0x150]
  40ec1b:	mov    ecx,DWORD PTR [rsp+0x210]
  40ec22:	cmp    eax,edx
  40ec24:	cmovg  eax,edx
  40ec27:	sub    edx,eax
  40ec29:	movsxd r8,eax
  40ec2c:	add    QWORD PTR [rsp+0x148],r8
  40ec34:	test   ecx,ecx
  40ec36:	mov    DWORD PTR [rsp+0x150],edx
  40ec3d:	je     0x40e9a2
  40ec43:	cmp    DWORD PTR [rbx+0xc],0x3
  40ec47:	movsxd rax,DWORD PTR [rsp+0x154]
  40ec4f:	mov    rdx,QWORD PTR [rip+0x1a67a]        # 0x4292d0
  40ec56:	mov    r9d,DWORD PTR [rip+0x1a71f]        # 0x42937c
  40ec5d:	sete   r8b
  40ec61:	add    QWORD PTR [rdx+rax*8],0x1
  40ec66:	test   r9d,r9d
  40ec69:	je     0x40ed30
  40ec6f:	test   r8b,r8b
  40ec72:	je     0x40eda3
  40ec78:	mov    rdx,rbp
  40ec7b:	mov    rcx,r13
  40ec7e:	call   0x40cf20
  40ec83:	mov    rcx,rbp
  40ec86:	call   0x412078
  40ec8b:	mov    ecx,DWORD PTR [rsp+0x210]
  40ec92:	test   ecx,ecx
  40ec94:	jg     0x40ebaa
  40ec9a:	jmp    0x40e9a2
  40ec9f:	nop
  40eca0:	mov    rax,QWORD PTR [rsp+0xa78]
  40eca8:	mov    rbx,QWORD PTR [rax]
  40ecab:	movabs rax,0x8000000000000000
  40ecb5:	cmp    rbx,rax
  40ecb8:	je     0x40fb0c
  40ecbe:	mov    rax,QWORD PTR [rsp+0xa70]
  40ecc6:	add    rbx,QWORD PTR [rax+0x8]
  40ecca:	jmp    0x40e820
  40eccf:	nop
  40ecd0:	mov    r9,QWORD PTR [rsp+0x38]
  40ecd5:	mov    r8,r14
  40ecd8:	mov    rdx,rsi
  40ecdb:	mov    rcx,rbx
  40ecde:	call   0x4120d0
  40ece3:	jmp    0x40ec0c
  40ece8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ecf0:	mov    r9,QWORD PTR [rsp+0x38]
  40ecf5:	mov    r8,r14
  40ecf8:	mov    rdx,rbp
  40ecfb:	mov    rcx,rbx
  40ecfe:	call   0x4120d8
  40ed03:	jmp    0x40ec0c
  40ed08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed10:	mov    r11d,DWORD PTR [r12+0x24]
  40ed15:	test   r11d,r11d
  40ed18:	je     0x40ed63
  40ed1a:	mov    r10d,DWORD PTR [r12+0x28]
  40ed1f:	test   r10d,r10d
  40ed22:	je     0x40ed63
  40ed24:	mov    rax,QWORD PTR [r12+0x10]
  40ed29:	jmp    0x40ea9e
  40ed2e:	xchg   ax,ax
  40ed30:	test   r8b,r8b
  40ed33:	je     0x40ec92
  40ed39:	jmp    0x40ec83
  40ed3e:	xchg   ax,ax
  40ed40:	test   eax,eax
  40ed42:	mov    edx,0x0
  40ed47:	cmovle edx,eax
  40ed4a:	sub    eax,edx
  40ed4c:	movsxd rcx,edx
  40ed4f:	add    QWORD PTR [rsp+0x148],rcx
  40ed57:	mov    DWORD PTR [rsp+0x150],eax
  40ed5e:	jmp    0x40e9a2
  40ed63:	mov    r9d,DWORD PTR [rsp+0x4c]
  40ed68:	test   r9d,r9d
  40ed6b:	je     0x40eab0
  40ed71:	mov    rax,QWORD PTR [rsp+0xa78]
  40ed79:	mov    rax,QWORD PTR [rax]
  40ed7c:	cmp    rax,QWORD PTR [rsp+0x60]
  40ed81:	jl     0x40ed96
  40ed83:	movabs rdx,0x8000000000000000
  40ed8d:	cmp    rax,rdx
  40ed90:	jne    0x40f31c
  40ed96:	mov    DWORD PTR [rsp+0x4c],0x1
  40ed9e:	jmp    0x40eab0
  40eda3:	mov    rdx,QWORD PTR [r15+0x30]
  40eda7:	mov    rcx,r13
  40edaa:	mov    r9,r15
  40edad:	mov    r8,QWORD PTR [rdx+rax*8]
  40edb1:	mov    rdx,rsi
  40edb4:	call   0x40d340
  40edb9:	mov    ecx,DWORD PTR [rsp+0x210]
  40edc0:	jmp    0x40ec92
  40edc5:	lea    rcx,[rip+0x1a504]        # 0x4292d0
  40edcc:	mov    r8d,0x8
  40edd2:	call   0x412238
  40edd7:	test   eax,eax
  40edd9:	mov    DWORD PTR [rsp+0x54],eax
  40eddd:	js     0x40f9d9
  40ede3:	movsxd rax,DWORD PTR [rip+0x1a4f6]        # 0x4292e0
  40edea:	mov    rdx,QWORD PTR [rip+0x1a4df]        # 0x4292d0
  40edf1:	mov    r8d,DWORD PTR [r15+0x2c]
  40edf5:	lea    rcx,[rdx+rax*8]
  40edf9:	sub    r8d,eax
  40edfc:	xor    edx,edx
  40edfe:	shl    r8,0x3
  40ee02:	call   0x419878
  40ee07:	mov    edx,DWORD PTR [r15+0x2c]
  40ee0b:	lea    rcx,[rip+0x1a4c6]        # 0x4292d8
  40ee12:	mov    r8d,0x8
  40ee18:	call   0x412238
  40ee1d:	test   eax,eax
  40ee1f:	mov    DWORD PTR [rsp+0x54],eax
  40ee23:	js     0x40f9d9
  40ee29:	movsxd rax,DWORD PTR [rip+0x1a4b0]        # 0x4292e0
  40ee30:	mov    rdx,QWORD PTR [rip+0x1a4a1]        # 0x4292d8
  40ee37:	mov    r8d,DWORD PTR [r15+0x2c]
  40ee3b:	lea    rcx,[rdx+rax*8]
  40ee3f:	sub    r8d,eax
  40ee42:	xor    edx,edx
  40ee44:	shl    r8,0x3
  40ee48:	call   0x419878
  40ee4d:	mov    edx,DWORD PTR [r15+0x2c]
  40ee51:	lea    rcx,[rip+0x1a470]        # 0x4292c8
  40ee58:	mov    r8d,0x4
  40ee5e:	call   0x412238
  40ee63:	test   eax,eax
  40ee65:	mov    DWORD PTR [rsp+0x54],eax
  40ee69:	js     0x40f9d9
  40ee6f:	movsxd rax,DWORD PTR [rip+0x1a46a]        # 0x4292e0
  40ee76:	mov    rdx,QWORD PTR [rip+0x1a44b]        # 0x4292c8
  40ee7d:	mov    r8d,DWORD PTR [r15+0x2c]
  40ee81:	lea    rcx,[rdx+rax*4]
  40ee85:	sub    r8d,eax
  40ee88:	xor    edx,edx
  40ee8a:	shl    r8,0x2
  40ee8e:	call   0x419878
  40ee93:	mov    eax,DWORD PTR [r15+0x2c]
  40ee97:	mov    DWORD PTR [rip+0x1a443],eax        # 0x4292e0
  40ee9d:	jmp    0x40e9d1
  40eea2:	mov    DWORD PTR [rsp+0x4c],0x0
  40eeaa:	jmp    0x40eab0
  40eeaf:	nop
  40eeb0:	mov    edx,0x1
  40eeb5:	mov    r8d,0xffffffff
  40eebb:	mov    rcx,r14
  40eebe:	call   0x412480
  40eec3:	movsxd rdx,DWORD PTR [r13+0x2c]
  40eec7:	lea    eax,[rdx+0x1]
  40eeca:	cmp    eax,0x9
  40eecd:	mov    DWORD PTR [r13+0x2c],eax
  40eed1:	jg     0x40fb2c
  40eed7:	test   eax,eax
  40eed9:	je     0x40f2d5
  40eedf:	lea    rdx,[r13+rdx*8+0x0]
  40eee4:	cdqe   
  40eee6:	mov    rcx,QWORD PTR [rdx+0x58]
  40eeea:	mov    ecx,DWORD PTR [rcx]
  40eeec:	mov    DWORD PTR [r13+rax*4+0x30],0x0
  40eef5:	mov    rax,QWORD PTR [r13+0x20]
  40eef9:	add    rax,0x4e0
  40eeff:	cmp    ecx,0xf
  40ef02:	mov    QWORD PTR [rdx+0x60],rax
  40ef06:	jne    0x40ef16
  40ef08:	mov    eax,DWORD PTR [r13+0x28a8]
  40ef0f:	mov    DWORD PTR [r13+0x28b0],eax
  40ef16:	mov    rax,QWORD PTR [r13+0x8]
  40ef1a:	mov    rax,QWORD PTR [rax+0x28]
  40ef1e:	test   rax,rax
  40ef21:	je     0x40ef28
  40ef23:	mov    rcx,r13
  40ef26:	call   rax
  40ef28:	mov    rax,QWORD PTR [rbx+0x8]
  40ef2c:	mov    ecx,DWORD PTR [rax+0xc]
  40ef2f:	call   0x412378
  40ef34:	test   rax,rax
  40ef37:	mov    r8,rax
  40ef3a:	je     0x40fa10
  40ef40:	lea    rdx,[rip+0x131ce]        # 0x422115
  40ef47:	mov    rcx,r13
  40ef4a:	call   0x40a930
  40ef4f:	movsxd rax,DWORD PTR [r13+0x2c]
  40ef53:	movsxd rsi,DWORD PTR [rsp+0xf4]
  40ef5b:	mov    rax,QWORD PTR [r13+rax*8+0x58]
  40ef60:	mov    edx,DWORD PTR [rax+0x58]
  40ef63:	test   edx,edx
  40ef65:	jne    0x40ef82
  40ef67:	mov    rcx,QWORD PTR [rax+0x50]
  40ef6b:	lea    rdx,[rip+0x12f24]        # 0x421e96
  40ef72:	xor    r9d,r9d
  40ef75:	xor    r8d,r8d
  40ef78:	call   0x412438
  40ef7d:	test   rax,rax
  40ef80:	je     0x40efa0
  40ef82:	mov    rax,QWORD PTR [r13+0x8]
  40ef86:	mov    r8,rsi
  40ef89:	lea    rdx,[rip+0x12f06]        # 0x421e96
  40ef90:	mov    rcx,r13
  40ef93:	call   QWORD PTR [rax+0x38]
  40ef96:	movsxd rax,DWORD PTR [r13+0x2c]
  40ef9a:	add    DWORD PTR [r13+rax*4+0x30],0x1
  40efa0:	mov    r8,QWORD PTR [rsp+0xd8]
  40efa8:	lea    rdx,[rip+0x12e9d]        # 0x421e4c
  40efaf:	mov    rcx,r13
  40efb2:	add    rbx,0x30
  40efb6:	call   0x40b820
  40efbb:	mov    r8,QWORD PTR [rsp+0xd8]
  40efc3:	lea    rdx,[rip+0x12e86]        # 0x421e50
  40efca:	mov    r9,rbx
  40efcd:	mov    rcx,r13
  40efd0:	call   0x40c520
  40efd5:	mov    r8,QWORD PTR [rsp+0xe0]
  40efdd:	lea    rdx,[rip+0x1313c]        # 0x422120
  40efe4:	mov    rcx,r13
  40efe7:	call   0x40b820
  40efec:	mov    r8,QWORD PTR [rsp+0xe0]
  40eff4:	lea    rdx,[rip+0x13129]        # 0x422124
  40effb:	mov    r9,rbx
  40effe:	mov    rcx,r13
  40f001:	call   0x40c520
  40f006:	movsxd r8,DWORD PTR [rsp+0x10c]
  40f00e:	lea    rdx,[rip+0x13118]        # 0x42212d
  40f015:	mov    rcx,r13
  40f018:	call   0x40b760
  40f01d:	movsxd r8,DWORD PTR [rsp+0x10c]
  40f025:	lea    rdx,[rip+0x1310a]        # 0x422136
  40f02c:	mov    r9,rbx
  40f02f:	mov    rcx,r13
  40f032:	mov    DWORD PTR [rsp+0x20],0x1
  40f03a:	call   0x40c620
  40f03f:	mov    r8,QWORD PTR [rsp+0x128]
  40f047:	lea    rdx,[rip+0x130f6]        # 0x422144
  40f04e:	mov    rcx,r13
  40f051:	call   0x40b760
  40f056:	mov    r8,QWORD PTR [rsp+0x128]
  40f05e:	lea    rdx,[rip+0x130f4]        # 0x422159
  40f065:	mov    r9,rbx
  40f068:	mov    rcx,r13
  40f06b:	mov    DWORD PTR [rsp+0x20],0x1
  40f073:	call   0x40c620
  40f078:	movsxd rax,DWORD PTR [rsp+0xf0]
  40f080:	mov    rdx,QWORD PTR [rsp+0x70]
  40f085:	lea    rcx,[rsp+0x190]
  40f08d:	mov    QWORD PTR [rsp+0x90],rax
  40f095:	lea    rax,[rip+0x15faa]        # 0x425046
  40f09c:	mov    QWORD PTR [rsp+0x98],rax
  40f0a4:	call   0x409790
  40f0a9:	lea    rdx,[rip+0x130c3]        # 0x422173
  40f0b0:	mov    r8,rax
  40f0b3:	mov    rcx,r13
  40f0b6:	call   0x40a930
  40f0bb:	cmp    QWORD PTR [rsp+0x120],0xffffffffffffffff
  40f0c4:	je     0x40f93f
  40f0ca:	mov    rcx,r14
  40f0cd:	call   0x412490
  40f0d2:	mov    r8,QWORD PTR [rsp+0x120]
  40f0da:	lea    rdx,[rip+0x11f27]        # 0x421008
  40f0e1:	mov    rcx,r14
  40f0e4:	call   0x412478
  40f0e9:	mov    r8,QWORD PTR [rsp+0x210]
  40f0f1:	lea    rdx,[rip+0x13080]        # 0x422178
  40f0f8:	mov    rcx,r13
  40f0fb:	call   0x40a930
  40f100:	mov    rcx,r14
  40f103:	call   0x412490
  40f108:	mov    eax,DWORD PTR [rsp+0xf8]
  40f10f:	lea    rdx,[rip+0x11ee9]        # 0x420fff
  40f116:	mov    rcx,r14
  40f119:	and    eax,0x1
  40f11c:	cmp    eax,0x1
  40f11f:	sbb    r8d,r8d
  40f122:	and    r8d,0x14
  40f126:	add    r8d,0x4b
  40f12a:	call   0x412478
  40f12f:	mov    r8,QWORD PTR [rsp+0x210]
  40f137:	lea    rdx,[rip+0x1303e]        # 0x42217c
  40f13e:	mov    rcx,r13
  40f141:	call   0x40a930
  40f146:	mov    eax,DWORD PTR [rsp+0x108]
  40f14d:	test   eax,eax
  40f14f:	jne    0x40f562
  40f155:	mov    ebx,DWORD PTR [rip+0x1a20d]        # 0x429368
  40f15b:	test   ebx,ebx
  40f15d:	je     0x40f17e
  40f15f:	mov    r9d,DWORD PTR [rsp+0xf0]
  40f167:	mov    r8,QWORD PTR [rsp+0xe8]
  40f16f:	lea    rdx,[rip+0x13029]        # 0x42219f
  40f176:	mov    rcx,r13
  40f179:	call   0x40a990
  40f17e:	xor    eax,eax
  40f180:	mov    ecx,0x18
  40f185:	mov    rdi,rbp
  40f188:	rep stos QWORD PTR es:[rdi],rax
  40f18b:	mov    rcx,QWORD PTR [rip+0x1a156]        # 0x4292e8
  40f192:	mov    esi,DWORD PTR [rsp+0xf0]
  40f199:	mov    rbx,QWORD PTR [rsp+0xe8]
  40f1a1:	test   rcx,rcx
  40f1a4:	je     0x40f310
  40f1aa:	call   0x412320
  40f1af:	mov    rcx,QWORD PTR [rip+0x1a132]        # 0x4292e8
  40f1b6:	mov    r8d,esi
  40f1b9:	mov    rdx,rbx
  40f1bc:	call   0x412310
  40f1c1:	mov    rcx,QWORD PTR [rip+0x1a120]        # 0x4292e8
  40f1c8:	call   0x412328
  40f1cd:	lea    r8,[rip+0x12fd0]        # 0x4221a4
  40f1d4:	mov    edx,0xc0
  40f1d9:	mov    r9,rax
  40f1dc:	mov    rcx,rbp
  40f1df:	call   0x409180
  40f1e4:	mov    rdx,rbp
  40f1e7:	mov    ecx,DWORD PTR [rdx]
  40f1e9:	add    rdx,0x4
  40f1ed:	lea    eax,[rcx-0x1010101]
  40f1f3:	not    ecx
  40f1f5:	and    eax,ecx
  40f1f7:	and    eax,0x80808080
  40f1fc:	je     0x40f1e7
  40f1fe:	mov    ecx,eax
  40f200:	mov    r8d,DWORD PTR [rsp+0x78]
  40f205:	shr    ecx,0x10
  40f208:	test   eax,0x8080
  40f20d:	cmove  eax,ecx
  40f210:	lea    rcx,[rdx+0x2]
  40f214:	cmove  rdx,rcx
  40f218:	add    al,al
  40f21a:	mov    rcx,QWORD PTR [rip+0x1a0c7]        # 0x4292e8
  40f221:	sbb    rdx,0x3
  40f225:	sub    r8d,edx
  40f228:	call   0x412338
  40f22d:	movsxd rax,DWORD PTR [r13+0x2c]
  40f231:	mov    rax,QWORD PTR [r13+rax*8+0x58]
  40f236:	mov    r11d,DWORD PTR [rax+0x58]
  40f23a:	test   r11d,r11d
  40f23d:	je     0x40f2f0
  40f243:	mov    rax,QWORD PTR [r13+0x8]
  40f247:	lea    rdx,[rip+0x12f5a]        # 0x4221a8
  40f24e:	mov    r8,rbp
  40f251:	mov    rcx,r13
  40f254:	call   QWORD PTR [rax+0x48]
  40f257:	movsxd rdx,DWORD PTR [r13+0x2c]
  40f25b:	add    DWORD PTR [r13+rdx*4+0x30],0x1
  40f261:	mov    rax,rdx
  40f264:	lea    rcx,[r13+rdx*8+0x0]
  40f269:	test   eax,eax
  40f26b:	mov    r8,QWORD PTR [rcx+0x58]
  40f26f:	mov    r8d,DWORD PTR [r8]
  40f272:	je     0x40f28e
  40f274:	mov    rcx,QWORD PTR [rcx+0x50]
  40f278:	mov    ecx,DWORD PTR [rcx]
  40f27a:	cmp    ecx,0xffffffff
  40f27d:	je     0x40f28e
  40f27f:	add    DWORD PTR [r13+rdx*4+0x2c],0x1
  40f285:	cmp    ecx,0xf
  40f288:	je     0x40f928
  40f28e:	mov    rdx,QWORD PTR [r13+0x8]
  40f292:	mov    rdx,QWORD PTR [rdx+0x30]
  40f296:	test   rdx,rdx
  40f299:	je     0x40f2a4
  40f29b:	mov    rcx,r13
  40f29e:	call   rdx
  40f2a0:	mov    eax,DWORD PTR [r13+0x2c]
  40f2a4:	sub    eax,0x1
  40f2a7:	xor    edx,edx
  40f2a9:	mov    rcx,r14
  40f2ac:	mov    DWORD PTR [r13+0x2c],eax
  40f2b0:	call   0x412488
  40f2b5:	call   QWORD PTR [rip+0x1c829]        # 0x42bae4
  40f2bb:	lea    rcx,[rax+0x30]
  40f2bf:	call   0x4198f8
  40f2c4:	movsxd rsi,DWORD PTR [rsp+0xf4]
  40f2cc:	shl    rsi,0x3
  40f2d0:	jmp    0x40eacf
  40f2d5:	mov    rax,QWORD PTR [r13+0x20]
  40f2d9:	mov    DWORD PTR [r13+0x30],0x0
  40f2e1:	add    rax,0x4e0
  40f2e7:	mov    QWORD PTR [r13+0x58],rax
  40f2eb:	jmp    0x40ef16
  40f2f0:	mov    rcx,QWORD PTR [rax+0x50]
  40f2f4:	lea    rdx,[rip+0x12ead]        # 0x4221a8
  40f2fb:	xor    r9d,r9d
  40f2fe:	xor    r8d,r8d
  40f301:	call   0x412438
  40f306:	test   rax,rax
  40f309:	jne    0x40f243
  40f30f:	nop
  40f310:	movsxd rdx,DWORD PTR [r13+0x2c]
  40f314:	mov    rax,rdx
  40f317:	jmp    0x40f264
  40f31c:	mov    r14,QWORD PTR [rsp+0x40]
  40f321:	mov    rcx,r14
  40f324:	call   0x412100
  40f329:	mov    eax,DWORD PTR [r15+0x2c]
  40f32d:	mov    QWORD PTR [rsp+0xe8],0x0
  40f339:	mov    DWORD PTR [rsp+0xf0],0x0
  40f344:	test   eax,eax
  40f346:	je     0x40f3f8
  40f34c:	xor    ebx,ebx
  40f34e:	lea    rsi,[rsp+0x210]
  40f356:	lea    rdi,[rsp+0x610]
  40f35e:	jmp    0x40f370
  40f360:	add    ebx,0x1
  40f363:	cmp    ebx,eax
  40f365:	jae    0x40f3f8
  40f36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f370:	mov    ecx,DWORD PTR [rip+0x1a01a]        # 0x429390
  40f376:	mov    DWORD PTR [rsp+0xf4],ebx
  40f37d:	test   ecx,ecx
  40f37f:	je     0x40f360
  40f381:	movsxd rax,ebx
  40f384:	mov    rdx,QWORD PTR [r15+0x30]
  40f388:	mov    r12,QWORD PTR [rsp+0xa8]
  40f390:	mov    rax,QWORD PTR [rdx+rax*8]
  40f394:	mov    rbp,QWORD PTR [rax+0x8]
  40f398:	mov    DWORD PTR [rsp+0x210],0x0
  40f3a3:	cmp    QWORD PTR [rbp+0x10],0x0
  40f3a8:	je     0x40f510
  40f3ae:	mov    eax,DWORD PTR [rbp+0xc]
  40f3b1:	cmp    eax,0x1
  40f3b4:	je     0x40f420
  40f3b6:	cmp    eax,0x3
  40f3b9:	je     0x40f4e0
  40f3bf:	test   eax,eax
  40f3c1:	je     0x40f4c0
  40f3c7:	mov    eax,DWORD PTR [rsp+0xf0]
  40f3ce:	xor    edx,edx
  40f3d0:	cmp    edx,eax
  40f3d2:	cmovg  edx,eax
  40f3d5:	movsxd rcx,edx
  40f3d8:	add    QWORD PTR [rsp+0xe8],rcx
  40f3e0:	sub    eax,edx
  40f3e2:	mov    DWORD PTR [rsp+0xf0],eax
  40f3e9:	mov    eax,DWORD PTR [r15+0x2c]
  40f3ed:	add    ebx,0x1
  40f3f0:	cmp    ebx,eax
  40f3f2:	jb     0x40f370
  40f3f8:	lea    rcx,[rsp+0xa8]
  40f400:	call   0x412408
  40f405:	mov    eax,DWORD PTR [rsp+0x54]
  40f409:	add    rsp,0xa18
  40f410:	pop    rbx
  40f411:	pop    rsi
  40f412:	pop    rdi
  40f413:	pop    rbp
  40f414:	pop    r12
  40f416:	pop    r13
  40f418:	pop    r14
  40f41a:	pop    r15
  40f41c:	ret    
  40f41d:	nop    DWORD PTR [rax]
  40f420:	mov    r9,r14
  40f423:	mov    r8,rsi
  40f426:	mov    rdx,r12
  40f429:	mov    rcx,rbp
  40f42c:	call   0x4120e0
  40f431:	test   eax,eax
  40f433:	js     0x40f3e9
  40f435:	mov    edx,DWORD PTR [rsp+0xf0]
  40f43c:	mov    ecx,DWORD PTR [rsp+0x210]
  40f443:	cmp    eax,edx
  40f445:	cmovg  eax,edx
  40f448:	sub    edx,eax
  40f44a:	movsxd r8,eax
  40f44d:	add    QWORD PTR [rsp+0xe8],r8
  40f455:	test   ecx,ecx
  40f457:	mov    DWORD PTR [rsp+0xf0],edx
  40f45e:	je     0x40f3e9
  40f460:	cmp    DWORD PTR [rbp+0xc],0x3
  40f464:	movsxd rax,DWORD PTR [rsp+0xf4]
  40f46c:	mov    rdx,QWORD PTR [rip+0x19e5d]        # 0x4292d0
  40f473:	sete   r8b
  40f477:	add    QWORD PTR [rdx+rax*8],0x1
  40f47c:	mov    edx,DWORD PTR [rip+0x19efa]        # 0x42937c
  40f482:	test   edx,edx
  40f484:	je     0x40f500
  40f486:	test   r8b,r8b
  40f489:	je     0x40f540
  40f48f:	mov    rdx,rdi
  40f492:	mov    rcx,r13
  40f495:	call   0x40cf20
  40f49a:	mov    rcx,rdi
  40f49d:	call   0x412078
  40f4a2:	mov    ecx,DWORD PTR [rsp+0x210]
  40f4a9:	test   ecx,ecx
  40f4ab:	jle    0x40f3e9
  40f4b1:	movsxd rax,DWORD PTR [rsp+0xf4]
  40f4b9:	jmp    0x40f384
  40f4be:	xchg   ax,ax
  40f4c0:	mov    r9,r14
  40f4c3:	mov    r8,rsi
  40f4c6:	mov    rdx,r12
  40f4c9:	mov    rcx,rbp
  40f4cc:	call   0x4120d0
  40f4d1:	jmp    0x40f431
  40f4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f4e0:	mov    r9,r14
  40f4e3:	mov    r8,rsi
  40f4e6:	mov    rdx,rdi
  40f4e9:	mov    rcx,rbp
  40f4ec:	call   0x4120d8
  40f4f1:	jmp    0x40f431
  40f4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f500:	test   r8b,r8b
  40f503:	je     0x40f4a9
  40f505:	jmp    0x40f49a
  40f507:	nop    WORD PTR [rax+rax*1+0x0]
  40f510:	mov    eax,DWORD PTR [rsp+0xf0]
  40f517:	mov    edx,0x0
  40f51c:	test   eax,eax
  40f51e:	cmovle edx,eax
  40f521:	sub    eax,edx
  40f523:	movsxd rcx,edx
  40f526:	add    QWORD PTR [rsp+0xe8],rcx
  40f52e:	mov    DWORD PTR [rsp+0xf0],eax
  40f535:	jmp    0x40f3e9
  40f53a:	nop    WORD PTR [rax+rax*1+0x0]
  40f540:	mov    rdx,QWORD PTR [r15+0x30]
  40f544:	mov    rcx,r13
  40f547:	mov    r9,r15
  40f54a:	mov    r8,QWORD PTR [rdx+rax*8]
  40f54e:	mov    rdx,r12
  40f551:	call   0x40d340
  40f556:	mov    ecx,DWORD PTR [rsp+0x210]
  40f55d:	jmp    0x40f4a9
  40f562:	movsxd rcx,DWORD PTR [r13+0x2c]
  40f566:	lea    edx,[rcx+0x1]
  40f569:	cmp    edx,0x9
  40f56c:	mov    DWORD PTR [r13+0x2c],edx
  40f570:	jg     0x40fb2c
  40f576:	test   edx,edx
  40f578:	je     0x40fa2b
  40f57e:	lea    rcx,[r13+rcx*8+0x0]
  40f583:	mov    rdi,QWORD PTR [r13+0x20]
  40f587:	movsxd rdx,edx
  40f58a:	mov    r8,QWORD PTR [rcx+0x58]
  40f58e:	mov    r8d,DWORD PTR [r8]
  40f591:	mov    DWORD PTR [r13+rdx*4+0x30],0x0
  40f59a:	lea    rdx,[rdi+0x600]
  40f5a1:	mov    QWORD PTR [rcx+0x60],rdx
  40f5a5:	cmp    r8d,0xf
  40f5a9:	jne    0x40f5b9
  40f5ab:	mov    edx,DWORD PTR [r13+0x28ac]
  40f5b2:	mov    DWORD PTR [r13+0x28b0],edx
  40f5b9:	mov    rdx,QWORD PTR [r13+0x8]
  40f5bd:	mov    rdx,QWORD PTR [rdx+0x28]
  40f5c1:	test   rdx,rdx
  40f5c4:	je     0x40f5d2
  40f5c6:	mov    rcx,r13
  40f5c9:	call   rdx
  40f5cb:	mov    eax,DWORD PTR [rsp+0x108]
  40f5d2:	xor    edi,edi
  40f5d4:	test   eax,eax
  40f5d6:	mov    DWORD PTR [rsp+0x5c],0x0
  40f5de:	jle    0x40faf6
  40f5e4:	mov    QWORD PTR [rsp+0xa68],r15
  40f5ec:	mov    QWORD PTR [rsp+0x80],r14
  40f5f4:	mov    r15,r13
  40f5f7:	mov    QWORD PTR [rsp+0xa70],r12
  40f5ff:	mov    r14,rdi
  40f602:	jmp    0x40f75a
  40f607:	nop    WORD PTR [rax+rax*1+0x0]
  40f610:	lea    rcx,[r15+rcx*8]
  40f614:	mov    rax,QWORD PTR [rcx+0x58]
  40f618:	mov    r8d,DWORD PTR [rax]
  40f61b:	movsxd rax,edx
  40f61e:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  40f627:	mov    rax,QWORD PTR [r15+0x20]
  40f62b:	add    rax,0x660
  40f631:	cmp    r8d,0xf
  40f635:	mov    QWORD PTR [rcx+0x60],rax
  40f639:	jne    0x40f649
  40f63b:	mov    eax,DWORD PTR [r15+0x28ac]
  40f642:	mov    DWORD PTR [r15+0x28b0],eax
  40f649:	mov    rax,QWORD PTR [r15+0x8]
  40f64d:	mov    rax,QWORD PTR [rax+0x28]
  40f651:	test   rax,rax
  40f654:	je     0x40f65f
  40f656:	mov    rcx,r15
  40f659:	call   rax
  40f65b:	mov    edx,DWORD PTR [r15+0x2c]
  40f65f:	lea    rax,[rip+0x12828]        # 0x421e8e
  40f666:	test   rbx,rbx
  40f669:	movsxd rdx,edx
  40f66c:	cmove  rbx,rax
  40f670:	mov    rax,QWORD PTR [r15+rdx*8+0x58]
  40f675:	mov    r12d,DWORD PTR [rax+0x58]
  40f679:	test   r12d,r12d
  40f67c:	je     0x40f900
  40f682:	mov    rax,QWORD PTR [r15+0x8]
  40f686:	mov    r8,rbx
  40f689:	lea    rdx,[rip+0x12965]        # 0x421ff5
  40f690:	mov    rcx,r15
  40f693:	call   QWORD PTR [rax+0x48]
  40f696:	movsxd rax,DWORD PTR [r15+0x2c]
  40f69a:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40f6a0:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40f6a5:	movsxd rbx,DWORD PTR [rsi+0x8]
  40f6a9:	mov    edi,DWORD PTR [rax+0x58]
  40f6ac:	test   edi,edi
  40f6ae:	jne    0x40f6cb
  40f6b0:	mov    rcx,QWORD PTR [rax+0x50]
  40f6b4:	lea    rdx,[rip+0x12949]        # 0x422004
  40f6bb:	xor    r9d,r9d
  40f6be:	xor    r8d,r8d
  40f6c1:	call   0x412438
  40f6c6:	test   rax,rax
  40f6c9:	je     0x40f6e9
  40f6cb:	mov    rax,QWORD PTR [r15+0x8]
  40f6cf:	mov    r8,rbx
  40f6d2:	lea    rdx,[rip+0x1292b]        # 0x422004
  40f6d9:	mov    rcx,r15
  40f6dc:	call   QWORD PTR [rax+0x38]
  40f6df:	movsxd rax,DWORD PTR [r15+0x2c]
  40f6e3:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40f6e9:	cmp    DWORD PTR [rsi+0xc],0x5
  40f6ed:	je     0x40f7b0
  40f6f3:	movsxd rdx,DWORD PTR [r15+0x2c]
  40f6f7:	mov    rax,rdx
  40f6fa:	lea    rcx,[r15+rdx*8]
  40f6fe:	test   eax,eax
  40f700:	mov    r8,QWORD PTR [rcx+0x58]
  40f704:	mov    r8d,DWORD PTR [r8]
  40f707:	je     0x40f723
  40f709:	mov    rcx,QWORD PTR [rcx+0x50]
  40f70d:	mov    ecx,DWORD PTR [rcx]
  40f70f:	cmp    ecx,0xffffffff
  40f712:	je     0x40f723
  40f714:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  40f71a:	cmp    ecx,0xf
  40f71d:	je     0x40f8e0
  40f723:	mov    rdx,QWORD PTR [r15+0x8]
  40f727:	mov    rdx,QWORD PTR [rdx+0x30]
  40f72b:	test   rdx,rdx
  40f72e:	je     0x40f739
  40f730:	mov    rcx,r15
  40f733:	call   rdx
  40f735:	mov    eax,DWORD PTR [r15+0x2c]
  40f739:	add    DWORD PTR [rsp+0x5c],0x1
  40f73e:	sub    eax,0x1
  40f741:	add    r14,0x10
  40f745:	mov    edi,DWORD PTR [rsp+0x5c]
  40f749:	cmp    edi,DWORD PTR [rsp+0x108]
  40f750:	mov    DWORD PTR [r15+0x2c],eax
  40f754:	jge    0x40f95a
  40f75a:	mov    rsi,r14
  40f75d:	add    rsi,QWORD PTR [rsp+0x100]
  40f765:	mov    ecx,DWORD PTR [rsi+0xc]
  40f768:	call   0x4120f8
  40f76d:	movsxd rcx,DWORD PTR [r15+0x2c]
  40f771:	mov    rbx,rax
  40f774:	lea    edx,[rcx+0x1]
  40f777:	cmp    edx,0x9
  40f77a:	mov    DWORD PTR [r15+0x2c],edx
  40f77e:	jg     0x40fb2c
  40f784:	test   edx,edx
  40f786:	jne    0x40f610
  40f78c:	mov    rax,QWORD PTR [r15+0x20]
  40f790:	mov    DWORD PTR [r15+0x30],0x0
  40f798:	add    rax,0x660
  40f79e:	mov    QWORD PTR [r15+0x58],rax
  40f7a2:	jmp    0x40f649
  40f7a7:	nop    WORD PTR [rax+rax*1+0x0]
  40f7b0:	cmp    DWORD PTR [rsi+0x8],0x23
  40f7b4:	jle    0x40f6f3
  40f7ba:	mov    r8d,0xffffffff
  40f7c0:	xor    edx,edx
  40f7c2:	mov    rcx,rbp
  40f7c5:	mov    r13,QWORD PTR [rsi]
  40f7c8:	mov    edi,0x9
  40f7cd:	call   0x412480
  40f7d2:	lea    rdx,[rip+0x116d1]        # 0x420eaa
  40f7d9:	mov    rcx,rbp
  40f7dc:	call   0x412478
  40f7e1:	xor    eax,eax
  40f7e3:	mov    QWORD PTR [rsp+0x88],rsi
  40f7eb:	mov    rsi,r13
  40f7ee:	mov    r13d,eax
  40f7f1:	lea    rdx,[rip+0x11f2f]        # 0x421727
  40f7f8:	mov    r8d,r13d
  40f7fb:	mov    rcx,rbp
  40f7fe:	mov    r12d,0x3
  40f804:	call   0x412478
  40f809:	cmp    edi,0x3
  40f80c:	cmovle r12d,edi
  40f810:	test   r12d,r12d
  40f813:	jle    0x40f83e
  40f815:	lea    edx,[r12-0x1]
  40f81a:	lea    rbx,[rsi+rdx*4+0x4]
  40f81f:	nop
  40f820:	mov    r8d,DWORD PTR [rsi]
  40f823:	lea    rdx,[rip+0x12958]        # 0x422182
  40f82a:	mov    rcx,rbp
  40f82d:	add    rsi,0x4
  40f831:	call   0x412478
  40f836:	cmp    rsi,rbx
  40f839:	jne    0x40f820
  40f83b:	sub    edi,r12d
  40f83e:	lea    rdx,[rip+0x11665]        # 0x420eaa
  40f845:	mov    rcx,rbp
  40f848:	add    r13d,0x1
  40f84c:	call   0x412478
  40f851:	test   edi,edi
  40f853:	jne    0x40f7f1
  40f855:	mov    r8,QWORD PTR [rsp+0x610]
  40f85d:	mov    rsi,QWORD PTR [rsp+0x88]
  40f865:	lea    rdx,[rip+0x1291c]        # 0x422188
  40f86c:	mov    rcx,r15
  40f86f:	call   0x40a930
  40f874:	xor    edx,edx
  40f876:	mov    rcx,rbp
  40f879:	call   0x412488
  40f87e:	mov    rcx,QWORD PTR [rsi]
  40f881:	call   0x412420
  40f886:	movsxd rax,DWORD PTR [r15+0x2c]
  40f88a:	cvttsd2si rbx,xmm0
  40f88f:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40f894:	mov    esi,DWORD PTR [rax+0x58]
  40f897:	test   esi,esi
  40f899:	jne    0x40f8ba
  40f89b:	mov    rcx,QWORD PTR [rax+0x50]
  40f89f:	lea    rdx,[rip+0x128f0]        # 0x422196
  40f8a6:	xor    r9d,r9d
  40f8a9:	xor    r8d,r8d
  40f8ac:	call   0x412438
  40f8b1:	test   rax,rax
  40f8b4:	je     0x40f6f3
  40f8ba:	mov    rax,QWORD PTR [r15+0x8]
  40f8be:	lea    rdx,[rip+0x128d1]        # 0x422196
  40f8c5:	mov    r8,rbx
  40f8c8:	mov    rcx,r15
  40f8cb:	call   QWORD PTR [rax+0x38]
  40f8ce:	movsxd rdx,DWORD PTR [r15+0x2c]
  40f8d2:	mov    rax,rdx
  40f8d5:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  40f8db:	jmp    0x40f6fa
  40f8e0:	cmp    r8d,0xd
  40f8e4:	je     0x40f9c4
  40f8ea:	add    DWORD PTR [r15+0x28ac],0x1
  40f8f2:	jmp    0x40f723
  40f8f7:	nop    WORD PTR [rax+rax*1+0x0]
  40f900:	mov    rcx,QWORD PTR [rax+0x50]
  40f904:	lea    rdx,[rip+0x126ea]        # 0x421ff5
  40f90b:	xor    r9d,r9d
  40f90e:	xor    r8d,r8d
  40f911:	call   0x412438
  40f916:	test   rax,rax
  40f919:	jne    0x40f682
  40f91f:	movsxd rax,DWORD PTR [r15+0x2c]
  40f923:	jmp    0x40f6a0
  40f928:	cmp    r8d,0xd
  40f92c:	je     0x40fa6b
  40f932:	add    DWORD PTR [r13+0x28ac],0x1
  40f93a:	jmp    0x40f28e
  40f93f:	lea    r8,[rip+0x121ed]        # 0x421b33
  40f946:	lea    rdx,[rip+0x1282b]        # 0x422178
  40f94d:	mov    rcx,r13
  40f950:	call   0x40ac10
  40f955:	jmp    0x40f100
  40f95a:	mov    r13,r15
  40f95d:	mov    r12,QWORD PTR [rsp+0xa70]
  40f965:	mov    r15,QWORD PTR [rsp+0xa68]
  40f96d:	mov    r14,QWORD PTR [rsp+0x80]
  40f975:	movsxd rdx,eax
  40f978:	test   eax,eax
  40f97a:	lea    rcx,[r13+rdx*8+0x0]
  40f97f:	mov    r8,QWORD PTR [rcx+0x58]
  40f983:	mov    r8d,DWORD PTR [r8]
  40f986:	je     0x40f9a2
  40f988:	mov    rcx,QWORD PTR [rcx+0x50]
  40f98c:	mov    ecx,DWORD PTR [rcx]
  40f98e:	cmp    ecx,0xffffffff
  40f991:	je     0x40f9a2
  40f993:	add    DWORD PTR [r13+rdx*4+0x2c],0x1
  40f999:	cmp    ecx,0xf
  40f99c:	je     0x40fa54
  40f9a2:	mov    rdx,QWORD PTR [r13+0x8]
  40f9a6:	mov    rdx,QWORD PTR [rdx+0x30]
  40f9aa:	test   rdx,rdx
  40f9ad:	je     0x40f9b8
  40f9af:	mov    rcx,r13
  40f9b2:	call   rdx
  40f9b4:	mov    eax,DWORD PTR [r13+0x2c]
  40f9b8:	sub    eax,0x1
  40f9bb:	mov    DWORD PTR [r13+0x2c],eax
  40f9bf:	jmp    0x40f155
  40f9c4:	add    DWORD PTR [r15+0x28a8],0x1
  40f9cc:	jmp    0x40f723
  40f9d1:	mov    DWORD PTR [rsp+0x54],0xfffffff4
  40f9d9:	lea    rcx,[rsp+0xa8]
  40f9e1:	call   0x412408
  40f9e6:	lea    r8,[rip+0x127cb]        # 0x4221b8
  40f9ed:	xor    ecx,ecx
  40f9ef:	mov    edx,0x10
  40f9f4:	call   0x412308
  40f9f9:	mov    rcx,QWORD PTR [rsp+0xa70]
  40fa01:	mov    edx,0x10
  40fa06:	call   0x409c80
  40fa0b:	jmp    0x40f405
  40fa10:	lea    r8,[rip+0x12477]        # 0x421e8e
  40fa17:	lea    rdx,[rip+0x126f7]        # 0x422115
  40fa1e:	mov    rcx,r13
  40fa21:	call   0x40ac10
  40fa26:	jmp    0x40ef4f
  40fa2b:	mov    rdi,QWORD PTR [r13+0x20]
  40fa2f:	mov    DWORD PTR [r13+0x30],0x0
  40fa37:	lea    rdx,[rdi+0x600]
  40fa3e:	mov    QWORD PTR [r13+0x58],rdx
  40fa42:	jmp    0x40f5b9
  40fa47:	mov    DWORD PTR [rsp+0x54],0x0
  40fa4f:	jmp    0x40e8ec
  40fa54:	cmp    r8d,0xd
  40fa58:	je     0x40faff
  40fa5e:	add    DWORD PTR [r13+0x28ac],0x1
  40fa66:	jmp    0x40f9a2
  40fa6b:	add    DWORD PTR [r13+0x28a8],0x1
  40fa73:	jmp    0x40f28e
  40fa78:	lea    rsi,[rsp+0xb0]
  40fa80:	lea    r8,[rip+0x11a81]        # 0x421508
  40fa87:	mov    edx,0x20
  40fa8c:	mov    rcx,rsi
  40fa8f:	call   0x409180
  40fa94:	jmp    0x40e899
  40fa99:	lea    rdi,[rsp+0x610]
  40faa1:	xor    eax,eax
  40faa3:	mov    ecx,0x8
  40faa8:	lea    rbx,[rsp+0x610]
  40fab0:	mov    r8d,0x40
  40fab6:	rep stos QWORD PTR es:[rdi],rax
  40fab9:	mov    ecx,DWORD PTR [rsp+0x54]
  40fabd:	mov    rdx,rbx
  40fac0:	call   0x412218
  40fac5:	mov    rax,QWORD PTR [rsp+0xa70]
  40facd:	lea    r8,[rip+0x1261c]        # 0x4220f0
  40fad4:	mov    edx,0x10
  40fad9:	xor    ecx,ecx
  40fadb:	mov    rax,QWORD PTR [rax+0x8]
  40fadf:	mov    QWORD PTR [rsp+0x20],rbx
  40fae4:	mov    r9,rax
  40fae7:	mov    QWORD PTR [rsp+0x38],rax
  40faec:	call   0x412308
  40faf1:	jmp    0x40f9d9
  40faf6:	mov    eax,DWORD PTR [r13+0x2c]
  40fafa:	jmp    0x40f975
  40faff:	add    DWORD PTR [r13+0x28a8],0x1
  40fb07:	jmp    0x40f9a2
  40fb0c:	lea    r8,[rip+0x1255d]        # 0x422070
  40fb13:	mov    edx,0x10
  40fb18:	xor    ecx,ecx
  40fb1a:	call   0x412308
  40fb1f:	mov    DWORD PTR [rsp+0x54],0xffffffea
  40fb27:	jmp    0x40f9d9
  40fb2c:	call   0x419e29
  40fb31:	nop
  40fb32:	nop    DWORD PTR [rax+0x0]
  40fb36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fb40:	push   r15
  40fb42:	push   r14
  40fb44:	push   r13
  40fb46:	push   r12
  40fb48:	push   rbp
  40fb49:	push   rdi
  40fb4a:	push   rsi
  40fb4b:	push   rbx
  40fb4c:	sub    rsp,0xd68
  40fb53:	mov    rax,QWORD PTR [rdx+0x30]
  40fb57:	movsxd rsi,r8d
  40fb5a:	mov    r15,rcx
  40fb5d:	mov    rdi,rdx
  40fb60:	mov    r8d,0xffffffff
  40fb66:	mov    edx,0x1
  40fb6b:	mov    DWORD PTR [rsp+0xdc8],r9d
  40fb73:	mov    r14,QWORD PTR [rax+rsi*8]
  40fb77:	lea    rax,[rsp+0x160]
  40fb7f:	mov    rcx,rax
  40fb82:	mov    QWORD PTR [rsp+0x60],rax
  40fb87:	call   0x412480
  40fb8c:	cmp    DWORD PTR [rsp+0xdc8],0x1
  40fb94:	movsxd rcx,DWORD PTR [r15+0x2c]
  40fb98:	sbb    rdx,rdx
  40fb9b:	lea    eax,[rcx+0x1]
  40fb9e:	and    edx,0x1e0
  40fba4:	add    rdx,0xa20
  40fbab:	cmp    eax,0x9
  40fbae:	mov    DWORD PTR [r15+0x2c],eax
  40fbb2:	jg     0x411e93
  40fbb8:	test   eax,eax
  40fbba:	je     0x40fe40
  40fbc0:	lea    rcx,[r15+rcx*8]
  40fbc4:	add    rdx,QWORD PTR [r15+0x20]
  40fbc8:	movsxd r9,eax
  40fbcb:	mov    r8,QWORD PTR [rcx+0x58]
  40fbcf:	mov    r8d,DWORD PTR [r8]
  40fbd2:	mov    DWORD PTR [r15+r9*4+0x30],0x0
  40fbdb:	mov    QWORD PTR [rcx+0x60],rdx
  40fbdf:	cmp    r8d,0xf
  40fbe3:	jne    0x40fbf3
  40fbe5:	mov    edx,DWORD PTR [r15+0x28ac]
  40fbec:	mov    DWORD PTR [r15+0x28b0],edx
  40fbf3:	mov    rdx,QWORD PTR [r15+0x8]
  40fbf7:	mov    rdx,QWORD PTR [rdx+0x28]
  40fbfb:	test   rdx,rdx
  40fbfe:	je     0x40fc09
  40fc00:	mov    rcx,r15
  40fc03:	call   rdx
  40fc05:	mov    eax,DWORD PTR [r15+0x2c]
  40fc09:	cdqe   
  40fc0b:	movsxd rbx,DWORD PTR [r14]
  40fc0e:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40fc13:	mov    r11d,DWORD PTR [rax+0x58]
  40fc17:	test   r11d,r11d
  40fc1a:	jne    0x40fc37
  40fc1c:	mov    rcx,QWORD PTR [rax+0x50]
  40fc20:	lea    rdx,[rip+0x125b5]        # 0x4221dc
  40fc27:	xor    r9d,r9d
  40fc2a:	xor    r8d,r8d
  40fc2d:	call   0x412438
  40fc32:	test   rax,rax
  40fc35:	je     0x40fc55
  40fc37:	mov    rax,QWORD PTR [r15+0x8]
  40fc3b:	mov    r8,rbx
  40fc3e:	lea    rdx,[rip+0x12597]        # 0x4221dc
  40fc45:	mov    rcx,r15
  40fc48:	call   QWORD PTR [rax+0x38]
  40fc4b:	movsxd rax,DWORD PTR [r15+0x2c]
  40fc4f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40fc55:	mov    rbx,QWORD PTR [r14+0x8]
  40fc59:	test   rbx,rbx
  40fc5c:	je     0x411c76
  40fc62:	mov    r12,QWORD PTR [rbx+0x10]
  40fc66:	test   r12,r12
  40fc69:	je     0x410e5f
  40fc6f:	mov    r8,QWORD PTR [r12]
  40fc73:	lea    rdx,[rip+0x12568]        # 0x4221e2
  40fc7a:	mov    rcx,r15
  40fc7d:	call   0x40a930
  40fc82:	mov    r10d,DWORD PTR [rip+0x19713]        # 0x42939c
  40fc89:	test   r10d,r10d
  40fc8c:	je     0x40fe55
  40fc92:	mov    edx,DWORD PTR [rbx+0x3b4]
  40fc98:	mov    rcx,r12
  40fc9b:	call   0x412108
  40fca0:	test   rax,rax
  40fca3:	je     0x410eb4
  40fca9:	lea    rdx,[rip+0x1254d]        # 0x4221fd
  40fcb0:	mov    r8,rax
  40fcb3:	mov    rcx,r15
  40fcb6:	call   0x40a930
  40fcbb:	mov    ecx,DWORD PTR [rbx+0xc]
  40fcbe:	call   0x412378
  40fcc3:	test   rax,rax
  40fcc6:	mov    r8,rax
  40fcc9:	je     0x410ede
  40fccf:	lea    rdx,[rip+0x1243f]        # 0x422115
  40fcd6:	mov    rcx,r15
  40fcd9:	call   0x40a930
  40fcde:	lea    rbp,[rsp+0x960]
  40fce6:	mov    r12d,DWORD PTR [rbx+0x84]
  40fced:	mov    r13d,DWORD PTR [rbx+0x88]
  40fcf4:	xor    edx,edx
  40fcf6:	mov    r8d,0x1
  40fcfc:	mov    rcx,rbp
  40fcff:	call   0x412480
  40fd04:	lea    rdx,[rip+0x11e75]        # 0x421b80
  40fd0b:	mov    r9d,0x2f
  40fd11:	mov    r8d,r12d
  40fd14:	mov    DWORD PTR [rsp+0x20],r13d
  40fd19:	mov    rcx,rbp
  40fd1c:	lea    r12,[rsp+0xe0]
  40fd24:	call   0x412478
  40fd29:	mov    r8,QWORD PTR [rsp+0x960]
  40fd31:	lea    rdx,[rip+0x124cd]        # 0x422205
  40fd38:	mov    rcx,r15
  40fd3b:	call   0x40a930
  40fd40:	mov    r8d,DWORD PTR [rbx+0x3c]
  40fd44:	mov    edx,0x80
  40fd49:	mov    rcx,r12
  40fd4c:	call   0x412110
  40fd51:	lea    rdx,[rip+0x124bd]        # 0x422215
  40fd58:	mov    r8,r12
  40fd5b:	mov    rcx,r15
  40fd5e:	call   0x40a930
  40fd63:	mov    r13,QWORD PTR [rsp+0x60]
  40fd68:	mov    rcx,r13
  40fd6b:	call   0x412490
  40fd70:	mov    r8d,DWORD PTR [rbx+0x3c]
  40fd74:	lea    rdx,[rip+0x124ab]        # 0x422226
  40fd7b:	mov    rcx,r13
  40fd7e:	call   0x412478
  40fd83:	mov    r8,QWORD PTR [rsp+0x160]
  40fd8b:	lea    rdx,[rip+0x1249b]        # 0x42222d
  40fd92:	mov    rcx,r15
  40fd95:	call   0x40a930
  40fd9a:	mov    eax,DWORD PTR [rbx+0xc]
  40fd9d:	cmp    eax,0x1
  40fda0:	je     0x410f7f
  40fda6:	cmp    eax,0x3
  40fda9:	je     0x40fe77
  40fdaf:	test   eax,eax
  40fdb1:	je     0x41109f
  40fdb7:	mov    rax,QWORD PTR [rbx+0x10]
  40fdbb:	test   rax,rax
  40fdbe:	je     0x40ff10
  40fdc4:	cmp    QWORD PTR [rax+0x50],0x0
  40fdc9:	je     0x40ff10
  40fdcf:	mov    r10d,DWORD PTR [rip+0xe24a]        # 0x41e020
  40fdd6:	test   r10d,r10d
  40fdd9:	je     0x40ff10
  40fddf:	xor    r12d,r12d
  40fde2:	mov    rcx,QWORD PTR [rbx+0x48]
  40fde6:	mov    rdx,r12
  40fde9:	call   0x412280
  40fdee:	test   rax,rax
  40fdf1:	mov    r12,rax
  40fdf4:	je     0x40ff10
  40fdfa:	mov    r9d,DWORD PTR [r12+0x30]
  40fdff:	test   r9d,r9d
  40fe02:	jne    0x40fde2
  40fe04:	mov    rcx,QWORD PTR [rbx+0x48]
  40fe08:	mov    rdx,QWORD PTR [r12]
  40fe0c:	xor    r8d,r8d
  40fe0f:	mov    r9,rbp
  40fe12:	call   0x412290
  40fe17:	test   eax,eax
  40fe19:	js     0x40fde2
  40fe1b:	mov    r8,QWORD PTR [rsp+0x960]
  40fe23:	mov    rdx,QWORD PTR [r12]
  40fe27:	mov    rcx,r15
  40fe2a:	call   0x40a930
  40fe2f:	mov    rcx,QWORD PTR [rsp+0x960]
  40fe37:	call   0x4123c0
  40fe3c:	jmp    0x40fde2
  40fe3e:	xchg   ax,ax
  40fe40:	add    rdx,QWORD PTR [r15+0x20]
  40fe44:	mov    DWORD PTR [r15+0x30],0x0
  40fe4c:	mov    QWORD PTR [r15+0x58],rdx
  40fe50:	jmp    0x40fbf3
  40fe55:	mov    r8,QWORD PTR [r12+0x8]
  40fe5a:	test   r8,r8
  40fe5d:	je     0x411cf6
  40fe63:	lea    rdx,[rip+0x12383]        # 0x4221ed
  40fe6a:	mov    rcx,r15
  40fe6d:	call   0x40a930
  40fe72:	jmp    0x40fc92
  40fe77:	mov    eax,DWORD PTR [rbx+0x94]
  40fe7d:	test   eax,eax
  40fe7f:	jne    0x41143a
  40fe85:	lea    r8,[rip+0x11ca7]        # 0x421b33
  40fe8c:	lea    rdx,[rip+0x120a8]        # 0x421f3b
  40fe93:	mov    rcx,r15
  40fe96:	call   0x40ac10
  40fe9b:	mov    eax,DWORD PTR [rbx+0x98]
  40fea1:	test   eax,eax
  40fea3:	je     0x41149a
  40fea9:	movsxd r12,eax
  40feac:	movsxd rax,DWORD PTR [r15+0x2c]
  40feb0:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  40feb5:	mov    r11d,DWORD PTR [rax+0x58]
  40feb9:	test   r11d,r11d
  40febc:	jne    0x40fedd
  40febe:	mov    rcx,QWORD PTR [rax+0x50]
  40fec2:	lea    rdx,[rip+0x12078]        # 0x421f41
  40fec9:	xor    r9d,r9d
  40fecc:	xor    r8d,r8d
  40fecf:	call   0x412438
  40fed4:	test   rax,rax
  40fed7:	je     0x40fdb7
  40fedd:	mov    rax,QWORD PTR [r15+0x8]
  40fee1:	mov    r8,r12
  40fee4:	lea    rdx,[rip+0x12056]        # 0x421f41
  40feeb:	mov    rcx,r15
  40feee:	call   QWORD PTR [rax+0x38]
  40fef1:	movsxd rax,DWORD PTR [r15+0x2c]
  40fef5:	add    DWORD PTR [r15+rax*4+0x30],0x1
  40fefb:	mov    rax,QWORD PTR [rbx+0x10]
  40feff:	test   rax,rax
  40ff02:	jne    0x40fdc4
  40ff08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ff10:	mov    rax,QWORD PTR [rdi+0x8]
  40ff14:	test   BYTE PTR [rax+0x10],0x8
  40ff18:	je     0x410c00
  40ff1e:	mov    rdi,QWORD PTR [rsp+0x60]
  40ff23:	mov    rcx,rdi
  40ff26:	call   0x412490
  40ff2b:	mov    r8d,DWORD PTR [r14+0x4]
  40ff2f:	lea    rdx,[rip+0x123b3]        # 0x4222e9
  40ff36:	mov    rcx,rdi
  40ff39:	call   0x412478
  40ff3e:	mov    r8,QWORD PTR [rsp+0x160]
  40ff46:	lea    rdx,[rip+0x123a1]        # 0x4222ee
  40ff4d:	mov    rcx,r15
  40ff50:	call   0x40a930
  40ff55:	mov    edi,DWORD PTR [r14+0x1e0]
  40ff5c:	mov    r12d,DWORD PTR [r14+0x1e4]
  40ff63:	xor    edx,edx
  40ff65:	mov    r8d,0x1
  40ff6b:	mov    rcx,rbp
  40ff6e:	call   0x412480
  40ff73:	lea    rdx,[rip+0x11c06]        # 0x421b80
  40ff7a:	mov    r9d,0x2f
  40ff80:	mov    r8d,edi
  40ff83:	mov    DWORD PTR [rsp+0x20],r12d
  40ff88:	mov    rcx,rbp
  40ff8b:	call   0x412478
  40ff90:	mov    r8,QWORD PTR [rsp+0x960]
  40ff98:	lea    rdx,[rip+0x12352]        # 0x4222f1
  40ff9f:	mov    rcx,r15
  40ffa2:	call   0x40a930
  40ffa7:	mov    edi,DWORD PTR [r14+0x68]
  40ffab:	mov    r12d,DWORD PTR [r14+0x6c]
  40ffaf:	xor    edx,edx
  40ffb1:	mov    r8d,0x1
  40ffb7:	mov    rcx,rbp
  40ffba:	call   0x412480
  40ffbf:	lea    rdx,[rip+0x11bba]        # 0x421b80
  40ffc6:	mov    r9d,0x2f
  40ffcc:	mov    r8d,edi
  40ffcf:	mov    DWORD PTR [rsp+0x20],r12d
  40ffd4:	mov    rcx,rbp
  40ffd7:	call   0x412478
  40ffdc:	mov    r8,QWORD PTR [rsp+0x960]
  40ffe4:	lea    rdx,[rip+0x12313]        # 0x4222fe
  40ffeb:	mov    rcx,r15
  40ffee:	call   0x40a930
  40fff3:	mov    edi,DWORD PTR [r14+0x30]
  40fff7:	mov    r12d,DWORD PTR [r14+0x34]
  40fffb:	xor    edx,edx
  40fffd:	mov    r8d,0x1
  410003:	mov    rcx,rbp
  410006:	call   0x412480
  41000b:	lea    rdx,[rip+0x11b6e]        # 0x421b80
  410012:	mov    r9d,0x2f
  410018:	mov    r8d,edi
  41001b:	mov    rcx,rbp
  41001e:	mov    DWORD PTR [rsp+0x20],r12d
  410023:	lea    rdi,[r14+0x30]
  410027:	call   0x412478
  41002c:	mov    r8,QWORD PTR [rsp+0x960]
  410034:	lea    rdx,[rip+0x11b4c]        # 0x421b87
  41003b:	mov    rcx,r15
  41003e:	call   0x40a930
  410043:	mov    r8,QWORD PTR [r14+0x38]
  410047:	lea    rdx,[rip+0x122bf]        # 0x42230d
  41004e:	mov    rcx,r15
  410051:	call   0x40b820
  410056:	mov    r8,QWORD PTR [r14+0x38]
  41005a:	lea    rdx,[rip+0x122b6]        # 0x422317
  410061:	mov    r9,rdi
  410064:	mov    rcx,r15
  410067:	call   0x40c520
  41006c:	mov    r8,QWORD PTR [r14+0x40]
  410070:	lea    rdx,[rip+0x122ab]        # 0x422322
  410077:	mov    rcx,r15
  41007a:	call   0x40b820
  41007f:	mov    r8,QWORD PTR [r14+0x40]
  410083:	lea    rdx,[rip+0x120a3]        # 0x42212d
  41008a:	mov    r9,rdi
  41008d:	mov    rcx,r15
  410090:	call   0x40c520
  410095:	movsxd rax,DWORD PTR [rbx+0x60]
  410099:	test   eax,eax
  41009b:	jle    0x410f4f
  4100a1:	mov    QWORD PTR [rsp+0xa0],rax
  4100a9:	lea    rdx,[rsp+0xa0]
  4100b1:	lea    rax,[rip+0x14f88]        # 0x425040
  4100b8:	lea    rcx,[rsp+0xe0]
  4100c0:	mov    QWORD PTR [rsp+0xa8],rax
  4100c8:	call   0x409790
  4100cd:	lea    rdx,[rip+0x1225a]        # 0x42232e
  4100d4:	mov    r8,rax
  4100d7:	mov    rcx,r15
  4100da:	call   0x40a930
  4100df:	movsxd rax,DWORD PTR [rbx+0x268]
  4100e6:	test   eax,eax
  4100e8:	jle    0x410f10
  4100ee:	mov    QWORD PTR [rsp+0xa0],rax
  4100f6:	lea    rdx,[rsp+0xa0]
  4100fe:	lea    rax,[rip+0x14f3b]        # 0x425040
  410105:	lea    rcx,[rsp+0xe0]
  41010d:	mov    QWORD PTR [rsp+0xa8],rax
  410115:	call   0x409790
  41011a:	lea    rdx,[rip+0x12216]        # 0x422337
  410121:	mov    rcx,r15
  410124:	mov    r8,rax
  410127:	call   0x40a930
  41012c:	mov    ecx,DWORD PTR [rbx+0x374]
  410132:	test   ecx,ecx
  410134:	jle    0x410f34
  41013a:	mov    rdi,QWORD PTR [rsp+0x60]
  41013f:	mov    rcx,rdi
  410142:	call   0x412490
  410147:	mov    r8d,DWORD PTR [rbx+0x374]
  41014e:	lea    rdx,[rip+0x11dda]        # 0x421f2f
  410155:	mov    rcx,rdi
  410158:	call   0x412478
  41015d:	mov    r8,QWORD PTR [rsp+0x160]
  410165:	lea    rdx,[rip+0x121d8]        # 0x422344
  41016c:	mov    rcx,r15
  41016f:	call   0x40a930
  410174:	cmp    QWORD PTR [r14+0x48],0x0
  410179:	je     0x410be0
  41017f:	mov    rdi,QWORD PTR [rsp+0x60]
  410184:	mov    rcx,rdi
  410187:	call   0x412490
  41018c:	mov    r8,QWORD PTR [r14+0x48]
  410190:	lea    rdx,[rip+0x10e71]        # 0x421008
  410197:	mov    rcx,rdi
  41019a:	call   0x412478
  41019f:	mov    r8,QWORD PTR [rsp+0x160]
  4101a7:	lea    rdx,[rip+0x121aa]        # 0x422358
  4101ae:	mov    rcx,r15
  4101b1:	call   0x40a930
  4101b6:	mov    rax,QWORD PTR [rip+0x19113]        # 0x4292d0
  4101bd:	cmp    QWORD PTR [rax+rsi*8],0x0
  4101c2:	je     0x410bc3
  4101c8:	mov    rdi,QWORD PTR [rsp+0x60]
  4101cd:	mov    rcx,rdi
  4101d0:	call   0x412490
  4101d5:	mov    rax,QWORD PTR [rip+0x190f4]        # 0x4292d0
  4101dc:	lea    rdx,[rip+0x1217f]        # 0x422362
  4101e3:	mov    rcx,rdi
  4101e6:	mov    r8,QWORD PTR [rax+rsi*8]
  4101ea:	call   0x412478
  4101ef:	mov    r8,QWORD PTR [rsp+0x160]
  4101f7:	lea    rdx,[rip+0x12169]        # 0x422367
  4101fe:	mov    rcx,r15
  410201:	call   0x40a930
  410206:	mov    rax,QWORD PTR [rip+0x190cb]        # 0x4292d8
  41020d:	cmp    QWORD PTR [rax+rsi*8],0x0
  410212:	je     0x410b80
  410218:	mov    rdi,QWORD PTR [rsp+0x60]
  41021d:	mov    rcx,rdi
  410220:	call   0x412490
  410225:	mov    rax,QWORD PTR [rip+0x190ac]        # 0x4292d8
  41022c:	lea    rdx,[rip+0x1212f]        # 0x422362
  410233:	mov    rcx,rdi
  410236:	mov    r8,QWORD PTR [rax+rsi*8]
  41023a:	call   0x412478
  41023f:	movsxd rax,DWORD PTR [r15+0x2c]
  410243:	mov    rsi,QWORD PTR [rsp+0x160]
  41024b:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410250:	mov    edx,DWORD PTR [rax+0x58]
  410253:	test   edx,edx
  410255:	je     0x411c17
  41025b:	mov    rax,QWORD PTR [r15+0x8]
  41025f:	mov    r8,rsi
  410262:	lea    rdx,[rip+0x1210d]        # 0x422376
  410269:	mov    rcx,r15
  41026c:	call   QWORD PTR [rax+0x48]
  41026f:	movsxd rax,DWORD PTR [r15+0x2c]
  410273:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410279:	mov    eax,DWORD PTR [rip+0x190e9]        # 0x429368
  41027f:	test   eax,eax
  410281:	jne    0x410ba4
  410287:	xor    eax,eax
  410289:	mov    ecx,0x18
  41028e:	mov    rdi,rbp
  410291:	mov    esi,DWORD PTR [rbx+0x80]
  410297:	mov    rbx,QWORD PTR [rbx+0x78]
  41029b:	rep stos QWORD PTR es:[rdi],rax
  41029e:	mov    rcx,QWORD PTR [rip+0x19043]        # 0x4292e8
  4102a5:	test   rcx,rcx
  4102a8:	je     0x410345
  4102ae:	call   0x412320
  4102b3:	mov    rcx,QWORD PTR [rip+0x1902e]        # 0x4292e8
  4102ba:	mov    r8d,esi
  4102bd:	mov    rdx,rbx
  4102c0:	call   0x412310
  4102c5:	mov    rcx,QWORD PTR [rip+0x1901c]        # 0x4292e8
  4102cc:	call   0x412328
  4102d1:	lea    r8,[rip+0x11ecc]        # 0x4221a4
  4102d8:	mov    edx,0xc0
  4102dd:	mov    r9,rax
  4102e0:	mov    rcx,rbp
  4102e3:	call   0x409180
  4102e8:	mov    rdx,rbp
  4102eb:	mov    ecx,DWORD PTR [rdx]
  4102ed:	add    rdx,0x4
  4102f1:	lea    eax,[rcx-0x1010101]
  4102f7:	not    ecx
  4102f9:	and    eax,ecx
  4102fb:	and    eax,0x80808080
  410300:	je     0x4102eb
  410302:	mov    ecx,eax
  410304:	lea    r8,[rbp+0xc0]
  41030b:	shr    ecx,0x10
  41030e:	test   eax,0x8080
  410313:	cmove  eax,ecx
  410316:	lea    rcx,[rdx+0x2]
  41031a:	cmove  rdx,rcx
  41031e:	add    al,al
  410320:	mov    rcx,QWORD PTR [rip+0x18fc1]        # 0x4292e8
  410327:	sbb    rdx,0x3
  41032b:	sub    r8d,edx
  41032e:	call   0x412338
  410333:	lea    rdx,[rip+0x12056]        # 0x422390
  41033a:	mov    r8,rbp
  41033d:	mov    rcx,r15
  410340:	call   0x40a930
  410345:	mov    eax,DWORD PTR [rip+0x19021]        # 0x42936c
  41034b:	test   eax,eax
  41034d:	jne    0x4106e5
  410353:	mov    eax,DWORD PTR [r15+0x2c]
  410357:	mov    r12d,DWORD PTR [rip+0x18fe2]        # 0x429340
  41035e:	test   r12d,r12d
  410361:	je     0x410650
  410367:	cmp    DWORD PTR [rsp+0xdc8],0x1
  41036f:	mov    rdi,QWORD PTR [r14+0x60]
  410373:	mov    QWORD PTR [rsp+0x70],rdi
  410378:	sbb    rdx,rdx
  41037b:	and    edx,0x420
  410381:	add    rdx,0x900
  410388:	test   rdi,rdi
  41038b:	je     0x410650
  410391:	lea    ecx,[rax+0x1]
  410394:	cmp    ecx,0x9
  410397:	mov    DWORD PTR [r15+0x2c],ecx
  41039b:	jg     0x411e93
  4103a1:	test   ecx,ecx
  4103a3:	jne    0x4113fc
  4103a9:	add    rdx,QWORD PTR [r15+0x20]
  4103ad:	mov    DWORD PTR [r15+0x30],0x0
  4103b5:	mov    QWORD PTR [r15+0x58],rdx
  4103b9:	mov    rax,QWORD PTR [r15+0x8]
  4103bd:	mov    rax,QWORD PTR [rax+0x28]
  4103c1:	test   rax,rax
  4103c4:	je     0x4103cb
  4103c6:	mov    rcx,r15
  4103c9:	call   rax
  4103cb:	lea    rax,[rsp+0x560]
  4103d3:	xor    r13d,r13d
  4103d6:	mov    QWORD PTR [rsp+0x78],r14
  4103db:	mov    QWORD PTR [rsp+0x38],rax
  4103e0:	lea    rax,[rsp+0xc8]
  4103e8:	mov    QWORD PTR [rsp+0x88],rax
  4103f0:	lea    rax,[rsp+0xd0]
  4103f8:	mov    QWORD PTR [rsp+0x90],rax
  410400:	lea    rax,[rsp+0xd8]
  410408:	mov    QWORD PTR [rsp+0x48],rax
  41040d:	lea    rax,[rsp+0xbc]
  410415:	mov    QWORD PTR [rsp+0x50],rax
  41041a:	mov    rcx,QWORD PTR [rsp+0x70]
  41041f:	lea    rdx,[rip+0x10a9d]        # 0x420ec3
  410426:	mov    r8,r13
  410429:	mov    r9d,0x2
  41042f:	call   0x412438
  410434:	test   rax,rax
  410437:	mov    r13,rax
  41043a:	je     0x411b86
  410440:	mov    rax,QWORD PTR [r13+0x8]
  410444:	mov    rbx,QWORD PTR [r13+0x0]
  410448:	mov    QWORD PTR [rsp+0x58],rax
  41044d:	movsxd rax,DWORD PTR [r15+0x2c]
  410451:	mov    r12,QWORD PTR [r15+rax*8+0x58]
  410456:	mov    edi,DWORD PTR [r12+0x58]
  41045b:	test   edi,edi
  41045d:	je     0x4119c5
  410463:	mov    rcx,QWORD PTR [rsp+0x38]
  410468:	xor    edx,edx
  41046a:	mov    r8d,0xffffffff
  410470:	mov    QWORD PTR [rsp+0xc8],0x0
  41047c:	mov    QWORD PTR [rsp+0xd0],0x0
  410488:	mov    rsi,rbx
  41048b:	call   0x412480
  410490:	mov    rcx,rbx
  410493:	call   0x419840
  410498:	mov    QWORD PTR [rsp+0xd8],rbx
  4104a0:	add    rax,rbx
  4104a3:	cmp    BYTE PTR [rbx],0x0
  4104a6:	mov    QWORD PTR [rsp+0x40],rax
  4104ab:	mov    DWORD PTR [rsp+0x68],0x0
  4104b3:	je     0x410513
  4104b5:	mov    r9d,DWORD PTR [r15+0x28c0]
  4104bc:	mov    r8,QWORD PTR [rsp+0x40]
  4104c1:	mov    rdx,QWORD PTR [rsp+0x48]
  4104c6:	mov    rcx,QWORD PTR [rsp+0x50]
  4104cb:	call   0x4121e0
  4104d0:	test   eax,eax
  4104d2:	js     0x411830
  4104d8:	mov    r8d,DWORD PTR [rsp+0xd8]
  4104e0:	mov    rcx,QWORD PTR [rsp+0x38]
  4104e5:	mov    rdx,rsi
  4104e8:	sub    r8d,esi
  4104eb:	call   0x4124a8
  4104f0:	mov    rsi,QWORD PTR [rsp+0xd8]
  4104f8:	cmp    BYTE PTR [rsi],0x0
  4104fb:	jne    0x4104b5
  4104fd:	mov    esi,DWORD PTR [rsp+0x68]
  410501:	test   esi,esi
  410503:	je     0x410513
  410505:	cmp    DWORD PTR [r15+0x28b4],0x1
  41050d:	je     0x411d2c
  410513:	mov    rdi,QWORD PTR [rsp+0x38]
  410518:	mov    rdx,QWORD PTR [rsp+0x88]
  410520:	mov    rcx,rdi
  410523:	call   0x412488
  410528:	xor    edx,edx
  41052a:	mov    rcx,rdi
  41052d:	mov    r8d,0xffffffff
  410533:	call   0x412480
  410538:	mov    rdi,QWORD PTR [rsp+0x58]
  41053d:	mov    rcx,rdi
  410540:	mov    rsi,rdi
  410543:	call   0x419840
  410548:	mov    QWORD PTR [rsp+0xd8],rdi
  410550:	add    rax,rdi
  410553:	cmp    BYTE PTR [rdi],0x0
  410556:	mov    DWORD PTR [rsp+0x40],0x0
  41055e:	je     0x4105f2
  410564:	mov    QWORD PTR [rsp+0x98],r13
  41056c:	mov    r14,QWORD PTR [rsp+0x50]
  410571:	mov    rdi,rax
  410574:	mov    r13,QWORD PTR [rsp+0x48]
  410579:	mov    QWORD PTR [rsp+0x68],rbx
  41057e:	mov    QWORD PTR [rsp+0x80],r12
  410586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410590:	mov    r9d,DWORD PTR [r15+0x28c0]
  410597:	mov    r8,rdi
  41059a:	mov    rdx,r13
  41059d:	mov    rcx,r14
  4105a0:	call   0x4121e0
  4105a5:	test   eax,eax
  4105a7:	js     0x411a20
  4105ad:	mov    r8d,DWORD PTR [rsp+0xd8]
  4105b5:	mov    rcx,QWORD PTR [rsp+0x38]
  4105ba:	mov    rdx,rsi
  4105bd:	sub    r8d,esi
  4105c0:	call   0x4124a8
  4105c5:	mov    rsi,QWORD PTR [rsp+0xd8]
  4105cd:	cmp    BYTE PTR [rsi],0x0
  4105d0:	jne    0x410590
  4105d2:	mov    r11d,DWORD PTR [rsp+0x40]
  4105d7:	mov    r13,QWORD PTR [rsp+0x98]
  4105df:	test   r11d,r11d
  4105e2:	je     0x4105f2
  4105e4:	cmp    DWORD PTR [r15+0x28b4],0x1
  4105ec:	je     0x411e5f
  4105f2:	mov    rdx,QWORD PTR [rsp+0x90]
  4105fa:	mov    rcx,QWORD PTR [rsp+0x38]
  4105ff:	call   0x412488
  410604:	mov    rax,QWORD PTR [r15+0x8]
  410608:	mov    r8,QWORD PTR [rsp+0xd0]
  410610:	mov    rcx,r15
  410613:	mov    rdx,QWORD PTR [rsp+0xc8]
  41061b:	call   QWORD PTR [rax+0x48]
  41061e:	mov    rcx,QWORD PTR [rsp+0xc8]
  410626:	call   0x4123c0
  41062b:	mov    rcx,QWORD PTR [rsp+0xd0]
  410633:	call   0x4123c0
  410638:	movsxd rax,DWORD PTR [r15+0x2c]
  41063c:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410642:	jmp    0x41041a
  410647:	nop    WORD PTR [rax+rax*1+0x0]
  410650:	mov    DWORD PTR [rsp+0x48],0x0
  410658:	mov    r10d,DWORD PTR [r14+0xd8]
  41065f:	test   r10d,r10d
  410662:	jne    0x410c50
  410668:	mov    rdx,QWORD PTR [r15+0x8]
  41066c:	mov    r8,QWORD PTR [rdx+0x30]
  410670:	movsxd rdx,eax
  410673:	test   eax,eax
  410675:	lea    rcx,[r15+rdx*8]
  410679:	mov    r9,QWORD PTR [rcx+0x58]
  41067d:	mov    r9d,DWORD PTR [r9]
  410680:	je     0x41069c
  410682:	mov    rcx,QWORD PTR [rcx+0x50]
  410686:	mov    ecx,DWORD PTR [rcx]
  410688:	cmp    ecx,0xffffffff
  41068b:	je     0x41069c
  41068d:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  410693:	cmp    ecx,0xf
  410696:	je     0x410ef9
  41069c:	test   r8,r8
  41069f:	je     0x4106ab
  4106a1:	mov    rcx,r15
  4106a4:	call   r8
  4106a7:	mov    eax,DWORD PTR [r15+0x2c]
  4106ab:	mov    rcx,QWORD PTR [rsp+0x60]
  4106b0:	sub    eax,0x1
  4106b3:	xor    edx,edx
  4106b5:	mov    DWORD PTR [r15+0x2c],eax
  4106b9:	call   0x412488
  4106be:	call   QWORD PTR [rip+0x1b420]        # 0x42bae4
  4106c4:	lea    rcx,[rax+0x30]
  4106c8:	call   0x4198f8
  4106cd:	mov    eax,DWORD PTR [rsp+0x48]
  4106d1:	add    rsp,0xd68
  4106d8:	pop    rbx
  4106d9:	pop    rsi
  4106da:	pop    rdi
  4106db:	pop    rbp
  4106dc:	pop    r12
  4106de:	pop    r13
  4106e0:	pop    r14
  4106e2:	pop    r15
  4106e4:	ret    
  4106e5:	cmp    DWORD PTR [rsp+0xdc8],0x1
  4106ed:	movsxd rcx,DWORD PTR [r15+0x2c]
  4106f1:	sbb    rdx,rdx
  4106f4:	lea    eax,[rcx+0x1]
  4106f7:	and    edx,0x3c0
  4106fd:	add    rdx,0x8a0
  410704:	cmp    eax,0x9
  410707:	mov    DWORD PTR [r15+0x2c],eax
  41070b:	jg     0x411e93
  410711:	test   eax,eax
  410713:	je     0x410f6a
  410719:	lea    rcx,[r15+rcx*8]
  41071d:	add    rdx,QWORD PTR [r15+0x20]
  410721:	movsxd r9,eax
  410724:	mov    r8,QWORD PTR [rcx+0x58]
  410728:	mov    r8d,DWORD PTR [r8]
  41072b:	mov    DWORD PTR [r15+r9*4+0x30],0x0
  410734:	mov    QWORD PTR [rcx+0x60],rdx
  410738:	cmp    r8d,0xf
  41073c:	jne    0x410750
  41073e:	mov    edx,DWORD PTR [r15+0x28ac]
  410745:	mov    DWORD PTR [r15+0x28b0],edx
  41074c:	nop    DWORD PTR [rax+0x0]
  410750:	mov    rdx,QWORD PTR [r15+0x8]
  410754:	mov    rdx,QWORD PTR [rdx+0x28]
  410758:	test   rdx,rdx
  41075b:	je     0x410766
  41075d:	mov    rcx,r15
  410760:	call   rdx
  410762:	mov    eax,DWORD PTR [r15+0x2c]
  410766:	cdqe   
  410768:	mov    r8d,DWORD PTR [r14+0x50]
  41076c:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410771:	mov    ebx,r8d
  410774:	mov    r13d,DWORD PTR [rax+0x58]
  410778:	and    ebx,0x1
  41077b:	test   r13d,r13d
  41077e:	jne    0x41079f
  410780:	mov    rcx,QWORD PTR [rax+0x50]
  410784:	lea    rdx,[rip+0x106f5]        # 0x420e80
  41078b:	xor    r9d,r9d
  41078e:	xor    r8d,r8d
  410791:	call   0x412438
  410796:	test   rax,rax
  410799:	je     0x411dc1
  41079f:	mov    rax,QWORD PTR [r15+0x8]
  4107a3:	mov    r8,rbx
  4107a6:	lea    rdx,[rip+0x106d3]        # 0x420e80
  4107ad:	mov    rcx,r15
  4107b0:	call   QWORD PTR [rax+0x38]
  4107b3:	movsxd rax,DWORD PTR [r15+0x2c]
  4107b7:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4107bd:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4107c2:	mov    r8d,DWORD PTR [r14+0x50]
  4107c6:	mov    r12d,DWORD PTR [rax+0x58]
  4107ca:	shr    r8d,1
  4107cd:	mov    ebx,r8d
  4107d0:	and    ebx,0x1
  4107d3:	test   r12d,r12d
  4107d6:	jne    0x4107f7
  4107d8:	mov    rcx,QWORD PTR [rax+0x50]
  4107dc:	lea    rdx,[rip+0x11bbc]        # 0x42239f
  4107e3:	xor    r9d,r9d
  4107e6:	xor    r8d,r8d
  4107e9:	call   0x412438
  4107ee:	test   rax,rax
  4107f1:	je     0x411dca
  4107f7:	mov    rax,QWORD PTR [r15+0x8]
  4107fb:	mov    r8,rbx
  4107fe:	lea    rdx,[rip+0x11b9a]        # 0x42239f
  410805:	mov    rcx,r15
  410808:	call   QWORD PTR [rax+0x38]
  41080b:	movsxd rax,DWORD PTR [r15+0x2c]
  41080f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410815:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41081a:	mov    r8d,DWORD PTR [r14+0x50]
  41081e:	mov    edi,DWORD PTR [rax+0x58]
  410821:	shr    r8d,0x2
  410825:	mov    ebx,r8d
  410828:	and    ebx,0x1
  41082b:	test   edi,edi
  41082d:	jne    0x41084e
  41082f:	mov    rcx,QWORD PTR [rax+0x50]
  410833:	lea    rdx,[rip+0x11b69]        # 0x4223a3
  41083a:	xor    r9d,r9d
  41083d:	xor    r8d,r8d
  410840:	call   0x412438
  410845:	test   rax,rax
  410848:	je     0x411ddf
  41084e:	mov    rax,QWORD PTR [r15+0x8]
  410852:	mov    r8,rbx
  410855:	lea    rdx,[rip+0x11b47]        # 0x4223a3
  41085c:	mov    rcx,r15
  41085f:	call   QWORD PTR [rax+0x38]
  410862:	movsxd rax,DWORD PTR [r15+0x2c]
  410866:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41086c:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410871:	mov    r8d,DWORD PTR [r14+0x50]
  410875:	mov    esi,DWORD PTR [rax+0x58]
  410878:	shr    r8d,0x3
  41087c:	mov    ebx,r8d
  41087f:	and    ebx,0x1
  410882:	test   esi,esi
  410884:	jne    0x4108a5
  410886:	mov    rcx,QWORD PTR [rax+0x50]
  41088a:	lea    rdx,[rip+0x11b1b]        # 0x4223ac
  410891:	xor    r9d,r9d
  410894:	xor    r8d,r8d
  410897:	call   0x412438
  41089c:	test   rax,rax
  41089f:	je     0x411de8
  4108a5:	mov    rax,QWORD PTR [r15+0x8]
  4108a9:	mov    r8,rbx
  4108ac:	lea    rdx,[rip+0x11af9]        # 0x4223ac
  4108b3:	mov    rcx,r15
  4108b6:	call   QWORD PTR [rax+0x38]
  4108b9:	movsxd rax,DWORD PTR [r15+0x2c]
  4108bd:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4108c3:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4108c8:	mov    r8d,DWORD PTR [r14+0x50]
  4108cc:	mov    r11d,DWORD PTR [rax+0x58]
  4108d0:	shr    r8d,0x4
  4108d4:	mov    ebx,r8d
  4108d7:	and    ebx,0x1
  4108da:	test   r11d,r11d
  4108dd:	jne    0x4108fe
  4108df:	mov    rcx,QWORD PTR [rax+0x50]
  4108e3:	lea    rdx,[rip+0x11aca]        # 0x4223b4
  4108ea:	xor    r9d,r9d
  4108ed:	xor    r8d,r8d
  4108f0:	call   0x412438
  4108f5:	test   rax,rax
  4108f8:	je     0x411df1
  4108fe:	mov    rax,QWORD PTR [r15+0x8]
  410902:	mov    r8,rbx
  410905:	lea    rdx,[rip+0x11aa8]        # 0x4223b4
  41090c:	mov    rcx,r15
  41090f:	call   QWORD PTR [rax+0x38]
  410912:	movsxd rax,DWORD PTR [r15+0x2c]
  410916:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41091c:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410921:	mov    r8d,DWORD PTR [r14+0x50]
  410925:	mov    r10d,DWORD PTR [rax+0x58]
  410929:	shr    r8d,0x5
  41092d:	mov    ebx,r8d
  410930:	and    ebx,0x1
  410933:	test   r10d,r10d
  410936:	jne    0x410957
  410938:	mov    rcx,QWORD PTR [rax+0x50]
  41093c:	lea    rdx,[rip+0x11a78]        # 0x4223bb
  410943:	xor    r9d,r9d
  410946:	xor    r8d,r8d
  410949:	call   0x412438
  41094e:	test   rax,rax
  410951:	je     0x411dfa
  410957:	mov    rax,QWORD PTR [r15+0x8]
  41095b:	mov    r8,rbx
  41095e:	lea    rdx,[rip+0x11a56]        # 0x4223bb
  410965:	mov    rcx,r15
  410968:	call   QWORD PTR [rax+0x38]
  41096b:	movsxd rax,DWORD PTR [r15+0x2c]
  41096f:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410975:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41097a:	mov    r8d,DWORD PTR [r14+0x50]
  41097e:	mov    r9d,DWORD PTR [rax+0x58]
  410982:	shr    r8d,0x6
  410986:	mov    ebx,r8d
  410989:	and    ebx,0x1
  41098c:	test   r9d,r9d
  41098f:	jne    0x4109b0
  410991:	mov    rcx,QWORD PTR [rax+0x50]
  410995:	lea    rdx,[rip+0x11a27]        # 0x4223c3
  41099c:	xor    r9d,r9d
  41099f:	xor    r8d,r8d
  4109a2:	call   0x412438
  4109a7:	test   rax,rax
  4109aa:	je     0x411e03
  4109b0:	mov    rax,QWORD PTR [r15+0x8]
  4109b4:	mov    r8,rbx
  4109b7:	lea    rdx,[rip+0x11a05]        # 0x4223c3
  4109be:	mov    rcx,r15
  4109c1:	call   QWORD PTR [rax+0x38]
  4109c4:	movsxd rax,DWORD PTR [r15+0x2c]
  4109c8:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4109ce:	mov    r8d,DWORD PTR [r14+0x50]
  4109d2:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4109d7:	shr    r8d,0x7
  4109db:	mov    ebx,r8d
  4109de:	mov    r8d,DWORD PTR [rax+0x58]
  4109e2:	and    ebx,0x1
  4109e5:	test   r8d,r8d
  4109e8:	jne    0x410a09
  4109ea:	mov    rcx,QWORD PTR [rax+0x50]
  4109ee:	lea    rdx,[rip+0x119d5]        # 0x4223ca
  4109f5:	xor    r9d,r9d
  4109f8:	xor    r8d,r8d
  4109fb:	call   0x412438
  410a00:	test   rax,rax
  410a03:	je     0x411e0c
  410a09:	mov    rax,QWORD PTR [r15+0x8]
  410a0d:	mov    r8,rbx
  410a10:	lea    rdx,[rip+0x119b3]        # 0x4223ca
  410a17:	mov    rcx,r15
  410a1a:	call   QWORD PTR [rax+0x38]
  410a1d:	movsxd rax,DWORD PTR [r15+0x2c]
  410a21:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410a27:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410a2c:	mov    r8d,DWORD PTR [r14+0x50]
  410a30:	mov    ecx,DWORD PTR [rax+0x58]
  410a33:	shr    r8d,0x8
  410a37:	mov    ebx,r8d
  410a3a:	and    ebx,0x1
  410a3d:	test   ecx,ecx
  410a3f:	jne    0x410a60
  410a41:	mov    rcx,QWORD PTR [rax+0x50]
  410a45:	lea    rdx,[rip+0x1198f]        # 0x4223db
  410a4c:	xor    r9d,r9d
  410a4f:	xor    r8d,r8d
  410a52:	call   0x412438
  410a57:	test   rax,rax
  410a5a:	je     0x411e15
  410a60:	mov    rax,QWORD PTR [r15+0x8]
  410a64:	mov    r8,rbx
  410a67:	lea    rdx,[rip+0x1196d]        # 0x4223db
  410a6e:	mov    rcx,r15
  410a71:	call   QWORD PTR [rax+0x38]
  410a74:	movsxd rax,DWORD PTR [r15+0x2c]
  410a78:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410a7e:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410a83:	mov    r8d,DWORD PTR [r14+0x50]
  410a87:	mov    edx,DWORD PTR [rax+0x58]
  410a8a:	shr    r8d,0x9
  410a8e:	mov    ebx,r8d
  410a91:	and    ebx,0x1
  410a94:	test   edx,edx
  410a96:	jne    0x410ab7
  410a98:	mov    rcx,QWORD PTR [rax+0x50]
  410a9c:	lea    rdx,[rip+0x11948]        # 0x4223eb
  410aa3:	xor    r9d,r9d
  410aa6:	xor    r8d,r8d
  410aa9:	call   0x412438
  410aae:	test   rax,rax
  410ab1:	je     0x411db8
  410ab7:	mov    rax,QWORD PTR [r15+0x8]
  410abb:	mov    r8,rbx
  410abe:	lea    rdx,[rip+0x11926]        # 0x4223eb
  410ac5:	mov    rcx,r15
  410ac8:	call   QWORD PTR [rax+0x38]
  410acb:	movsxd rax,DWORD PTR [r15+0x2c]
  410acf:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410ad5:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410ada:	mov    r8d,DWORD PTR [r14+0x50]
  410ade:	mov    r13d,DWORD PTR [rax+0x58]
  410ae2:	shr    r8d,0xa
  410ae6:	mov    ebx,r8d
  410ae9:	and    ebx,0x1
  410aec:	test   r13d,r13d
  410aef:	jne    0x410b10
  410af1:	mov    rcx,QWORD PTR [rax+0x50]
  410af5:	lea    rdx,[rip+0x118fd]        # 0x4223f9
  410afc:	xor    r9d,r9d
  410aff:	xor    r8d,r8d
  410b02:	call   0x412438
  410b07:	test   rax,rax
  410b0a:	je     0x411dd3
  410b10:	mov    rax,QWORD PTR [r15+0x8]
  410b14:	lea    rdx,[rip+0x118de]        # 0x4223f9
  410b1b:	mov    r8,rbx
  410b1e:	mov    rcx,r15
  410b21:	call   QWORD PTR [rax+0x38]
  410b24:	movsxd rdx,DWORD PTR [r15+0x2c]
  410b28:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  410b2e:	mov    rax,rdx
  410b31:	lea    rcx,[r15+rdx*8]
  410b35:	test   eax,eax
  410b37:	mov    r8,QWORD PTR [rcx+0x58]
  410b3b:	mov    r8d,DWORD PTR [r8]
  410b3e:	je     0x410b5a
  410b40:	mov    rcx,QWORD PTR [rcx+0x50]
  410b44:	mov    ecx,DWORD PTR [rcx]
  410b46:	cmp    ecx,0xffffffff
  410b49:	je     0x410b5a
  410b4b:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  410b51:	cmp    ecx,0xf
  410b54:	je     0x411b9f
  410b5a:	mov    rdx,QWORD PTR [r15+0x8]
  410b5e:	mov    rdx,QWORD PTR [rdx+0x30]
  410b62:	test   rdx,rdx
  410b65:	je     0x410b70
  410b67:	mov    rcx,r15
  410b6a:	call   rdx
  410b6c:	mov    eax,DWORD PTR [r15+0x2c]
  410b70:	sub    eax,0x1
  410b73:	mov    DWORD PTR [r15+0x2c],eax
  410b77:	jmp    0x410357
  410b7c:	nop    DWORD PTR [rax+0x0]
  410b80:	lea    r8,[rip+0x10fac]        # 0x421b33
  410b87:	lea    rdx,[rip+0x117e8]        # 0x422376
  410b8e:	mov    rcx,r15
  410b91:	call   0x40ac10
  410b96:	mov    eax,DWORD PTR [rip+0x187cc]        # 0x429368
  410b9c:	test   eax,eax
  410b9e:	je     0x410287
  410ba4:	mov    r9d,DWORD PTR [rbx+0x80]
  410bab:	mov    r8,QWORD PTR [rbx+0x78]
  410baf:	lea    rdx,[rip+0x117d0]        # 0x422386
  410bb6:	mov    rcx,r15
  410bb9:	call   0x40a990
  410bbe:	jmp    0x410287
  410bc3:	lea    r8,[rip+0x10f69]        # 0x421b33
  410bca:	lea    rdx,[rip+0x11796]        # 0x422367
  410bd1:	mov    rcx,r15
  410bd4:	call   0x40ac10
  410bd9:	jmp    0x410206
  410bde:	xchg   ax,ax
  410be0:	lea    r8,[rip+0x10f4c]        # 0x421b33
  410be7:	lea    rdx,[rip+0x1176a]        # 0x422358
  410bee:	mov    rcx,r15
  410bf1:	call   0x40ac10
  410bf6:	jmp    0x4101b6
  410bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  410c00:	movsxd rax,DWORD PTR [r15+0x2c]
  410c04:	mov    rdx,QWORD PTR [r15+rax*8+0x58]
  410c09:	mov    rax,QWORD PTR [r15+0x8]
  410c0d:	test   BYTE PTR [rax+0x50],0x1
  410c11:	je     0x40ff55
  410c17:	mov    r8d,DWORD PTR [rdx+0x58]
  410c1b:	test   r8d,r8d
  410c1e:	je     0x411bef
  410c24:	lea    r8,[rip+0x10f08]        # 0x421b33
  410c2b:	lea    rdx,[rip+0x116bc]        # 0x4222ee
  410c32:	mov    rcx,r15
  410c35:	call   QWORD PTR [rax+0x48]
  410c38:	movsxd rax,DWORD PTR [r15+0x2c]
  410c3c:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410c42:	jmp    0x40ff55
  410c47:	nop    WORD PTR [rax+rax*1+0x0]
  410c50:	lea    edx,[rax+0x1]
  410c53:	cmp    edx,0x9
  410c56:	mov    DWORD PTR [r15+0x2c],edx
  410c5a:	jg     0x411e93
  410c60:	test   edx,edx
  410c62:	jne    0x4113b8
  410c68:	mov    rax,QWORD PTR [r15+0x20]
  410c6c:	mov    DWORD PTR [r15+0x30],0x0
  410c74:	add    rax,0xd80
  410c7a:	mov    QWORD PTR [r15+0x58],rax
  410c7e:	mov    rax,QWORD PTR [r15+0x8]
  410c82:	mov    rax,QWORD PTR [rax+0x28]
  410c86:	test   rax,rax
  410c89:	je     0x410c90
  410c8b:	mov    rcx,r15
  410c8e:	call   rax
  410c90:	mov    r9d,DWORD PTR [r14+0xd8]
  410c97:	xor    eax,eax
  410c99:	mov    DWORD PTR [rsp+0x38],0x0
  410ca1:	test   r9d,r9d
  410ca4:	jle    0x411b17
  410caa:	mov    QWORD PTR [rsp+0x40],r14
  410caf:	mov    r14,rax
  410cb2:	jmp    0x410e0e
  410cb7:	nop    WORD PTR [rax+rax*1+0x0]
  410cc0:	lea    rcx,[r15+rcx*8]
  410cc4:	mov    rax,QWORD PTR [rcx+0x58]
  410cc8:	mov    r8d,DWORD PTR [rax]
  410ccb:	movsxd rax,edx
  410cce:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  410cd7:	mov    rax,QWORD PTR [r15+0x20]
  410cdb:	add    rax,0xde0
  410ce1:	cmp    r8d,0xf
  410ce5:	mov    QWORD PTR [rcx+0x60],rax
  410ce9:	jne    0x410cf9
  410ceb:	mov    eax,DWORD PTR [r15+0x28ac]
  410cf2:	mov    DWORD PTR [r15+0x28b0],eax
  410cf9:	mov    rax,QWORD PTR [r15+0x8]
  410cfd:	mov    rax,QWORD PTR [rax+0x28]
  410d01:	test   rax,rax
  410d04:	je     0x410d0f
  410d06:	mov    rcx,r15
  410d09:	call   rax
  410d0b:	mov    edx,DWORD PTR [r15+0x2c]
  410d0f:	movsxd rdx,edx
  410d12:	lea    rax,[rip+0x11175]        # 0x421e8e
  410d19:	test   rbx,rbx
  410d1c:	mov    rdx,QWORD PTR [r15+rdx*8+0x58]
  410d21:	cmove  rbx,rax
  410d25:	mov    r8d,DWORD PTR [rdx+0x58]
  410d29:	test   r8d,r8d
  410d2c:	je     0x4119f0
  410d32:	mov    rax,QWORD PTR [r15+0x8]
  410d36:	mov    r8,rbx
  410d39:	lea    rdx,[rip+0x112b5]        # 0x421ff5
  410d40:	mov    rcx,r15
  410d43:	call   QWORD PTR [rax+0x48]
  410d46:	movsxd rax,DWORD PTR [r15+0x2c]
  410d4a:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410d50:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410d55:	movsxd rbx,DWORD PTR [rsi+0x8]
  410d59:	mov    ecx,DWORD PTR [rax+0x58]
  410d5c:	test   ecx,ecx
  410d5e:	jne    0x410d7b
  410d60:	mov    rcx,QWORD PTR [rax+0x50]
  410d64:	lea    rdx,[rip+0x11299]        # 0x422004
  410d6b:	xor    r9d,r9d
  410d6e:	xor    r8d,r8d
  410d71:	call   0x412438
  410d76:	test   rax,rax
  410d79:	je     0x410d99
  410d7b:	mov    rax,QWORD PTR [r15+0x8]
  410d7f:	mov    r8,rbx
  410d82:	lea    rdx,[rip+0x1127b]        # 0x422004
  410d89:	mov    rcx,r15
  410d8c:	call   QWORD PTR [rax+0x38]
  410d8f:	movsxd rax,DWORD PTR [r15+0x2c]
  410d93:	add    DWORD PTR [r15+rax*4+0x30],0x1
  410d99:	cmp    DWORD PTR [rsi+0xc],0x5
  410d9d:	je     0x4116e0
  410da3:	movsxd rdx,DWORD PTR [r15+0x2c]
  410da7:	mov    rax,rdx
  410daa:	lea    rcx,[r15+rdx*8]
  410dae:	test   eax,eax
  410db0:	mov    r8,QWORD PTR [rcx+0x58]
  410db4:	mov    r8d,DWORD PTR [r8]
  410db7:	je     0x410dd3
  410db9:	mov    rcx,QWORD PTR [rcx+0x50]
  410dbd:	mov    ecx,DWORD PTR [rcx]
  410dbf:	cmp    ecx,0xffffffff
  410dc2:	je     0x410dd3
  410dc4:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  410dca:	cmp    ecx,0xf
  410dcd:	je     0x411810
  410dd3:	mov    rdx,QWORD PTR [r15+0x8]
  410dd7:	mov    rdx,QWORD PTR [rdx+0x30]
  410ddb:	test   rdx,rdx
  410dde:	je     0x410de9
  410de0:	mov    rcx,r15
  410de3:	call   rdx
  410de5:	mov    eax,DWORD PTR [r15+0x2c]
  410de9:	mov    rbx,QWORD PTR [rsp+0x40]
  410dee:	add    DWORD PTR [rsp+0x38],0x1
  410df3:	sub    eax,0x1
  410df6:	mov    edi,DWORD PTR [rsp+0x38]
  410dfa:	add    r14,0x10
  410dfe:	mov    DWORD PTR [r15+0x2c],eax
  410e02:	cmp    DWORD PTR [rbx+0xd8],edi
  410e08:	jle    0x411b20
  410e0e:	mov    rax,QWORD PTR [rsp+0x40]
  410e13:	mov    rsi,r14
  410e16:	add    rsi,QWORD PTR [rax+0xd0]
  410e1d:	mov    ecx,DWORD PTR [rsi+0xc]
  410e20:	call   0x4120f8
  410e25:	movsxd rcx,DWORD PTR [r15+0x2c]
  410e29:	mov    rbx,rax
  410e2c:	lea    edx,[rcx+0x1]
  410e2f:	cmp    edx,0x9
  410e32:	mov    DWORD PTR [r15+0x2c],edx
  410e36:	jg     0x411e93
  410e3c:	test   edx,edx
  410e3e:	jne    0x410cc0
  410e44:	mov    rax,QWORD PTR [r15+0x20]
  410e48:	mov    DWORD PTR [r15+0x30],0x0
  410e50:	add    rax,0xde0
  410e56:	mov    QWORD PTR [r15+0x58],rax
  410e5a:	jmp    0x410cf9
  410e5f:	mov    ecx,DWORD PTR [rbx+0x38]
  410e62:	call   0x4120c8
  410e67:	test   rax,rax
  410e6a:	mov    r12,rax
  410e6d:	je     0x411e1e
  410e73:	mov    r8,QWORD PTR [rax+0x8]
  410e77:	lea    rdx,[rip+0x11364]        # 0x4221e2
  410e7e:	mov    rcx,r15
  410e81:	call   0x40ac10
  410e86:	mov    r9d,DWORD PTR [rip+0x1850f]        # 0x42939c
  410e8d:	test   r9d,r9d
  410e90:	jne    0x410eb4
  410e92:	mov    rax,QWORD PTR [r12+0x10]
  410e97:	lea    r8,[rip+0x10ff0]        # 0x421e8e
  410e9e:	lea    rdx,[rip+0x11348]        # 0x4221ed
  410ea5:	mov    rcx,r15
  410ea8:	test   rax,rax
  410eab:	cmovne r8,rax
  410eaf:	call   0x40ac10
  410eb4:	lea    r8,[rip+0x10fd3]        # 0x421e8e
  410ebb:	lea    rdx,[rip+0x1133b]        # 0x4221fd
  410ec2:	mov    rcx,r15
  410ec5:	call   0x40ac10
  410eca:	mov    ecx,DWORD PTR [rbx+0xc]
  410ecd:	call   0x412378
  410ed2:	test   rax,rax
  410ed5:	mov    r8,rax
  410ed8:	jne    0x40fccf
  410ede:	lea    r8,[rip+0x10fa9]        # 0x421e8e
  410ee5:	lea    rdx,[rip+0x11229]        # 0x422115
  410eec:	mov    rcx,r15
  410eef:	call   0x40ac10
  410ef4:	jmp    0x40fcde
  410ef9:	cmp    r9d,0xd
  410efd:	je     0x411c69
  410f03:	add    DWORD PTR [r15+0x28ac],0x1
  410f0b:	jmp    0x41069c
  410f10:	lea    r8,[rip+0x10c1c]        # 0x421b33
  410f17:	lea    rdx,[rip+0x11419]        # 0x422337
  410f1e:	mov    rcx,r15
  410f21:	call   0x40ac10
  410f26:	mov    ecx,DWORD PTR [rbx+0x374]
  410f2c:	test   ecx,ecx
  410f2e:	jg     0x41013a
  410f34:	lea    r8,[rip+0x10bf8]        # 0x421b33
  410f3b:	lea    rdx,[rip+0x11402]        # 0x422344
  410f42:	mov    rcx,r15
  410f45:	call   0x40ac10
  410f4a:	jmp    0x410174
  410f4f:	lea    r8,[rip+0x10bdd]        # 0x421b33
  410f56:	lea    rdx,[rip+0x113d1]        # 0x42232e
  410f5d:	mov    rcx,r15
  410f60:	call   0x40ac10
  410f65:	jmp    0x4100df
  410f6a:	add    rdx,QWORD PTR [r15+0x20]
  410f6e:	mov    DWORD PTR [r15+0x30],0x0
  410f76:	mov    QWORD PTR [r15+0x58],rdx
  410f7a:	jmp    0x410750
  410f7f:	mov    ecx,DWORD PTR [rbx+0x1d8]
  410f85:	call   0x412360
  410f8a:	test   rax,rax
  410f8d:	mov    r8,rax
  410f90:	je     0x411d11
  410f96:	lea    rdx,[rip+0x1102a]        # 0x421fc7
  410f9d:	mov    rcx,r15
  410fa0:	call   0x40a930
  410fa5:	movsxd rax,DWORD PTR [rbx+0x1d0]
  410fac:	lea    rdx,[rsp+0xa0]
  410fb4:	mov    rcx,r12
  410fb7:	mov    QWORD PTR [rsp+0xa0],rax
  410fbf:	lea    rax,[rip+0x14085]        # 0x42504b
  410fc6:	mov    QWORD PTR [rsp+0xa8],rax
  410fce:	call   0x409790
  410fd3:	lea    rdx,[rip+0x112f3]        # 0x4222cd
  410fda:	mov    rcx,r15
  410fdd:	mov    r8,rax
  410fe0:	call   0x40a930
  410fe5:	movsxd rax,DWORD PTR [r15+0x2c]
  410fe9:	movsxd r12,DWORD PTR [rbx+0x1d4]
  410ff0:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  410ff5:	mov    ecx,DWORD PTR [rax+0x58]
  410ff8:	test   ecx,ecx
  410ffa:	je     0x4114b5
  411000:	mov    rax,QWORD PTR [r15+0x8]
  411004:	mov    r8,r12
  411007:	lea    rdx,[rip+0x10fcf]        # 0x421fdd
  41100e:	mov    rcx,r15
  411011:	call   QWORD PTR [rax+0x38]
  411014:	movsxd rax,DWORD PTR [r15+0x2c]
  411018:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41101e:	cmp    QWORD PTR [rbx+0x1f0],0x0
  411026:	jne    0x4116a0
  41102c:	lea    r8,[rip+0x10e5b]        # 0x421e8e
  411033:	lea    rdx,[rip+0x10fac]        # 0x421fe6
  41103a:	mov    rcx,r15
  41103d:	call   0x40ac10
  411042:	mov    ecx,DWORD PTR [rbx+0x38]
  411045:	call   0x412118
  41104a:	movsxd r12,eax
  41104d:	movsxd rax,DWORD PTR [r15+0x2c]
  411051:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411056:	mov    edx,DWORD PTR [rax+0x58]
  411059:	test   edx,edx
  41105b:	jne    0x41107c
  41105d:	mov    rcx,QWORD PTR [rax+0x50]
  411061:	lea    rdx,[rip+0x11271]        # 0x4222d9
  411068:	xor    r9d,r9d
  41106b:	xor    r8d,r8d
  41106e:	call   0x412438
  411073:	test   rax,rax
  411076:	je     0x40fdb7
  41107c:	mov    rax,QWORD PTR [r15+0x8]
  411080:	mov    r8,r12
  411083:	lea    rdx,[rip+0x1124f]        # 0x4222d9
  41108a:	mov    rcx,r15
  41108d:	call   QWORD PTR [rax+0x38]
  411090:	movsxd rax,DWORD PTR [r15+0x2c]
  411094:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41109a:	jmp    0x40fdb7
  41109f:	movsxd rax,DWORD PTR [r15+0x2c]
  4110a3:	movsxd r12,DWORD PTR [rbx+0x94]
  4110aa:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4110af:	mov    ecx,DWORD PTR [rax+0x58]
  4110b2:	test   ecx,ecx
  4110b4:	je     0x411670
  4110ba:	mov    rax,QWORD PTR [r15+0x8]
  4110be:	mov    r8,r12
  4110c1:	lea    rdx,[rip+0x10e73]        # 0x421f3b
  4110c8:	mov    rcx,r15
  4110cb:	call   QWORD PTR [rax+0x38]
  4110ce:	movsxd rax,DWORD PTR [r15+0x2c]
  4110d2:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4110d8:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4110dd:	movsxd r12,DWORD PTR [rbx+0x98]
  4110e4:	mov    edx,DWORD PTR [rax+0x58]
  4110e7:	test   edx,edx
  4110e9:	je     0x411640
  4110ef:	mov    rax,QWORD PTR [r15+0x8]
  4110f3:	mov    r8,r12
  4110f6:	lea    rdx,[rip+0x10e44]        # 0x421f41
  4110fd:	mov    rcx,r15
  411100:	call   QWORD PTR [rax+0x38]
  411103:	movsxd rax,DWORD PTR [r15+0x2c]
  411107:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41110d:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411112:	movsxd r12,DWORD PTR [rbx+0x9c]
  411119:	mov    r13d,DWORD PTR [rax+0x58]
  41111d:	test   r13d,r13d
  411120:	je     0x411610
  411126:	mov    rax,QWORD PTR [r15+0x8]
  41112a:	mov    r8,r12
  41112d:	lea    rdx,[rip+0x11103]        # 0x422237
  411134:	mov    rcx,r15
  411137:	call   QWORD PTR [rax+0x38]
  41113a:	movsxd rax,DWORD PTR [r15+0x2c]
  41113e:	add    DWORD PTR [r15+rax*4+0x30],0x1
  411144:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411149:	movsxd r12,DWORD PTR [rbx+0xa0]
  411150:	mov    r11d,DWORD PTR [rax+0x58]
  411154:	test   r11d,r11d
  411157:	je     0x4115e0
  41115d:	mov    rax,QWORD PTR [r15+0x8]
  411161:	mov    r8,r12
  411164:	lea    rdx,[rip+0x110d8]        # 0x422243
  41116b:	mov    rcx,r15
  41116e:	call   QWORD PTR [rax+0x38]
  411171:	movsxd rax,DWORD PTR [r15+0x2c]
  411175:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41117b:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411180:	movsxd r12,DWORD PTR [rbx+0xd4]
  411187:	mov    r10d,DWORD PTR [rax+0x58]
  41118b:	test   r10d,r10d
  41118e:	je     0x4115b3
  411194:	mov    rax,QWORD PTR [r15+0x8]
  411198:	mov    r8,r12
  41119b:	lea    rdx,[rip+0x110ae]        # 0x422250
  4111a2:	mov    rcx,r15
  4111a5:	call   QWORD PTR [rax+0x38]
  4111a8:	movsxd rax,DWORD PTR [r15+0x2c]
  4111ac:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4111b2:	xor    r8d,r8d
  4111b5:	mov    rdx,r14
  4111b8:	mov    rcx,rdi
  4111bb:	call   0x412050
  4111c0:	mov    r13,rax
  4111c3:	mov    r12,rax
  4111c6:	sar    r13,0x20
  4111ca:	test   r13d,r13d
  4111cd:	jne    0x4114e0
  4111d3:	lea    r8,[rip+0x10959]        # 0x421b33
  4111da:	lea    rdx,[rip+0x10d6f]        # 0x421f50
  4111e1:	mov    rcx,r15
  4111e4:	call   0x40ac10
  4111e9:	lea    r8,[rip+0x10943]        # 0x421b33
  4111f0:	lea    rdx,[rip+0x11066]        # 0x42225d
  4111f7:	mov    rcx,r15
  4111fa:	call   0x40ac10
  4111ff:	mov    ecx,DWORD PTR [rbx+0xa8]
  411205:	call   0x412368
  41120a:	test   rax,rax
  41120d:	mov    r8,rax
  411210:	je     0x411d83
  411216:	lea    rdx,[rip+0x10d2b]        # 0x421f48
  41121d:	mov    rcx,r15
  411220:	call   0x40a930
  411225:	movsxd rax,DWORD PTR [r15+0x2c]
  411229:	movsxd r12,DWORD PTR [rbx+0x3b8]
  411230:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411235:	mov    r9d,DWORD PTR [rax+0x58]
  411239:	test   r9d,r9d
  41123c:	jne    0x411259
  41123e:	mov    rcx,QWORD PTR [rax+0x50]
  411242:	lea    rdx,[rip+0x11029]        # 0x422272
  411249:	xor    r9d,r9d
  41124c:	xor    r8d,r8d
  41124f:	call   0x412438
  411254:	test   rax,rax
  411257:	je     0x411277
  411259:	mov    rax,QWORD PTR [r15+0x8]
  41125d:	mov    r8,r12
  411260:	lea    rdx,[rip+0x1100b]        # 0x422272
  411267:	mov    rcx,r15
  41126a:	call   QWORD PTR [rax+0x38]
  41126d:	movsxd rax,DWORD PTR [r15+0x2c]
  411271:	add    DWORD PTR [r15+rax*4+0x30],0x1
  411277:	mov    ecx,DWORD PTR [rbx+0x1c0]
  41127d:	test   ecx,ecx
  41127f:	je     0x411bb6
  411285:	call   0x412458
  41128a:	lea    rdx,[rip+0x10fe7]        # 0x422278
  411291:	mov    r8,rax
  411294:	mov    rcx,r15
  411297:	call   0x40a930
  41129c:	mov    ecx,DWORD PTR [rbx+0x1bc]
  4112a2:	call   0x412390
  4112a7:	test   rax,rax
  4112aa:	mov    r8,rax
  4112ad:	je     0x411d68
  4112b3:	lea    rdx,[rip+0x10fca]        # 0x422284
  4112ba:	mov    rcx,r15
  4112bd:	call   0x40a930
  4112c2:	mov    ecx,DWORD PTR [rbx+0x1b8]
  4112c8:	cmp    ecx,0x2
  4112cb:	je     0x411cd5
  4112d1:	call   0x412450
  4112d6:	lea    rdx,[rip+0x10fb3]        # 0x422290
  4112dd:	mov    r8,rax
  4112e0:	mov    rcx,r15
  4112e3:	call   0x40a930
  4112e8:	mov    ecx,DWORD PTR [rbx+0x1b4]
  4112ee:	cmp    ecx,0x2
  4112f1:	je     0x411cb4
  4112f7:	call   0x412460
  4112fc:	lea    rdx,[rip+0x10f9c]        # 0x42229f
  411303:	mov    r8,rax
  411306:	mov    rcx,r15
  411309:	call   0x40a930
  41130e:	mov    ecx,DWORD PTR [rbx+0x1c4]
  411314:	test   ecx,ecx
  411316:	je     0x411bd1
  41131c:	call   0x412468
  411321:	lea    rdx,[rip+0x10f87]        # 0x4222af
  411328:	mov    r8,rax
  41132b:	mov    rcx,r15
  41132e:	call   0x40a930
  411333:	mov    rdx,QWORD PTR [rbx+0x2b0]
  41133a:	test   rdx,rdx
  41133d:	js     0x411c99
  411343:	mov    rcx,rbp
  411346:	call   0x4121e8
  41134b:	lea    rdx,[rip+0x10f6d]        # 0x4222bf
  411352:	mov    r8,rbp
  411355:	mov    rcx,r15
  411358:	call   0x40a930
  41135d:	movsxd rax,DWORD PTR [r15+0x2c]
  411361:	movsxd r12,DWORD PTR [rbx+0x1a0]
  411368:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41136d:	mov    r8d,DWORD PTR [rax+0x58]
  411371:	test   r8d,r8d
  411374:	jne    0x411395
  411376:	mov    rcx,QWORD PTR [rax+0x50]
  41137a:	lea    rdx,[rip+0x10f47]        # 0x4222c8
  411381:	xor    r9d,r9d
  411384:	xor    r8d,r8d
  411387:	call   0x412438
  41138c:	test   rax,rax
  41138f:	je     0x40fdb7
  411395:	mov    rax,QWORD PTR [r15+0x8]
  411399:	mov    r8,r12
  41139c:	lea    rdx,[rip+0x10f25]        # 0x4222c8
  4113a3:	mov    rcx,r15
  4113a6:	call   QWORD PTR [rax+0x38]
  4113a9:	movsxd rax,DWORD PTR [r15+0x2c]
  4113ad:	add    DWORD PTR [r15+rax*4+0x30],0x1
  4113b3:	jmp    0x40fdb7
  4113b8:	cdqe   
  4113ba:	movsxd rdx,edx
  4113bd:	lea    rcx,[r15+rax*8]
  4113c1:	mov    rax,QWORD PTR [rcx+0x58]
  4113c5:	mov    r8d,DWORD PTR [rax]
  4113c8:	mov    rax,QWORD PTR [r15+0x20]
  4113cc:	mov    DWORD PTR [r15+rdx*4+0x30],0x0
  4113d5:	add    rax,0xd80
  4113db:	cmp    r8d,0xf
  4113df:	mov    QWORD PTR [rcx+0x60],rax
  4113e3:	jne    0x410c7e
  4113e9:	mov    eax,DWORD PTR [r15+0x28ac]
  4113f0:	mov    DWORD PTR [r15+0x28b0],eax
  4113f7:	jmp    0x410c7e
  4113fc:	cdqe   
  4113fe:	add    rdx,QWORD PTR [r15+0x20]
  411402:	movsxd rcx,ecx
  411405:	lea    rax,[r15+rax*8]
  411409:	mov    r8,QWORD PTR [rax+0x58]
  41140d:	mov    r8d,DWORD PTR [r8]
  411410:	mov    DWORD PTR [r15+rcx*4+0x30],0x0
  411419:	mov    QWORD PTR [rax+0x60],rdx
  41141d:	cmp    r8d,0xf
  411421:	jne    0x4103b9
  411427:	mov    eax,DWORD PTR [r15+0x28ac]
  41142e:	mov    DWORD PTR [r15+0x28b0],eax
  411435:	jmp    0x4103b9
  41143a:	movsxd r12,eax
  41143d:	movsxd rax,DWORD PTR [r15+0x2c]
  411441:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  411446:	mov    r13d,DWORD PTR [rax+0x58]
  41144a:	test   r13d,r13d
  41144d:	jne    0x41146e
  41144f:	mov    rcx,QWORD PTR [rax+0x50]
  411453:	lea    rdx,[rip+0x10ae1]        # 0x421f3b
  41145a:	xor    r9d,r9d
  41145d:	xor    r8d,r8d
  411460:	call   0x412438
  411465:	test   rax,rax
  411468:	je     0x40fe9b
  41146e:	mov    rax,QWORD PTR [r15+0x8]
  411472:	mov    r8,r12
  411475:	lea    rdx,[rip+0x10abf]        # 0x421f3b
  41147c:	mov    rcx,r15
  41147f:	call   QWORD PTR [rax+0x38]
  411482:	movsxd rax,DWORD PTR [r15+0x2c]
  411486:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41148c:	mov    eax,DWORD PTR [rbx+0x98]
  411492:	test   eax,eax
  411494:	jne    0x40fea9
  41149a:	lea    r8,[rip+0x10692]        # 0x421b33
  4114a1:	lea    rdx,[rip+0x10a99]        # 0x421f41
  4114a8:	mov    rcx,r15
  4114ab:	call   0x40ac10
  4114b0:	jmp    0x40fdb7
  4114b5:	mov    rcx,QWORD PTR [rax+0x50]
  4114b9:	lea    rdx,[rip+0x10b1d]        # 0x421fdd
  4114c0:	xor    r9d,r9d
  4114c3:	xor    r8d,r8d
  4114c6:	call   0x412438
  4114cb:	test   rax,rax
  4114ce:	jne    0x411000
  4114d4:	jmp    0x41101e
  4114d9:	nop    DWORD PTR [rax+0x0]
  4114e0:	xor    edx,edx
  4114e2:	mov    rcx,rbp
  4114e5:	mov    r8d,0x1
  4114eb:	call   0x412480
  4114f0:	lea    rdx,[rip+0x10689]        # 0x421b80
  4114f7:	mov    DWORD PTR [rsp+0x20],r13d
  4114fc:	mov    r9d,0x3a
  411502:	mov    r8d,r12d
  411505:	mov    rcx,rbp
  411508:	call   0x412478
  41150d:	mov    r8,QWORD PTR [rsp+0x960]
  411515:	lea    rdx,[rip+0x10a34]        # 0x421f50
  41151c:	mov    rcx,r15
  41151f:	call   0x40a930
  411524:	mov    r9d,DWORD PTR [rbx+0x98]
  41152b:	mov    r8d,DWORD PTR [rbx+0x94]
  411532:	lea    rcx,[rsp+0xc0]
  41153a:	mov    QWORD PTR [rsp+0x20],0x100000
  411543:	lea    rdx,[rcx+0x4]
  411547:	imul   r9d,r13d
  41154b:	imul   r8d,r12d
  41154f:	movsxd r9,r9d
  411552:	movsxd r8,r8d
  411555:	call   0x412230
  41155a:	mov    r12d,DWORD PTR [rsp+0xc0]
  411562:	mov    r13d,DWORD PTR [rsp+0xc4]
  41156a:	xor    edx,edx
  41156c:	mov    rcx,rbp
  41156f:	mov    r8d,0x1
  411575:	call   0x412480
  41157a:	lea    rdx,[rip+0x105ff]        # 0x421b80
  411581:	mov    r8d,r12d
  411584:	mov    rcx,rbp
  411587:	mov    DWORD PTR [rsp+0x20],r13d
  41158c:	mov    r9d,0x3a
  411592:	call   0x412478
  411597:	mov    r8,QWORD PTR [rsp+0x960]
  41159f:	lea    rdx,[rip+0x10cb7]        # 0x42225d
  4115a6:	mov    rcx,r15
  4115a9:	call   0x40a930
  4115ae:	jmp    0x4111ff
  4115b3:	mov    rcx,QWORD PTR [rax+0x50]
  4115b7:	lea    rdx,[rip+0x10c92]        # 0x422250
  4115be:	xor    r9d,r9d
  4115c1:	xor    r8d,r8d
  4115c4:	call   0x412438
  4115c9:	test   rax,rax
  4115cc:	jne    0x411194
  4115d2:	jmp    0x4111b2
  4115d7:	nop    WORD PTR [rax+rax*1+0x0]
  4115e0:	mov    rcx,QWORD PTR [rax+0x50]
  4115e4:	lea    rdx,[rip+0x10c58]        # 0x422243
  4115eb:	xor    r9d,r9d
  4115ee:	xor    r8d,r8d
  4115f1:	call   0x412438
  4115f6:	test   rax,rax
  4115f9:	jne    0x41115d
  4115ff:	movsxd rax,DWORD PTR [r15+0x2c]
  411603:	jmp    0x41117b
  411608:	nop    DWORD PTR [rax+rax*1+0x0]
  411610:	mov    rcx,QWORD PTR [rax+0x50]
  411614:	lea    rdx,[rip+0x10c1c]        # 0x422237
  41161b:	xor    r9d,r9d
  41161e:	xor    r8d,r8d
  411621:	call   0x412438
  411626:	test   rax,rax
  411629:	jne    0x411126
  41162f:	movsxd rax,DWORD PTR [r15+0x2c]
  411633:	jmp    0x411144
  411638:	nop    DWORD PTR [rax+rax*1+0x0]
  411640:	mov    rcx,QWORD PTR [rax+0x50]
  411644:	lea    rdx,[rip+0x108f6]        # 0x421f41
  41164b:	xor    r9d,r9d
  41164e:	xor    r8d,r8d
  411651:	call   0x412438
  411656:	test   rax,rax
  411659:	jne    0x4110ef
  41165f:	movsxd rax,DWORD PTR [r15+0x2c]
  411663:	jmp    0x41110d
  411668:	nop    DWORD PTR [rax+rax*1+0x0]
  411670:	mov    rcx,QWORD PTR [rax+0x50]
  411674:	lea    rdx,[rip+0x108c0]        # 0x421f3b
  41167b:	xor    r9d,r9d
  41167e:	xor    r8d,r8d
  411681:	call   0x412438
  411686:	test   rax,rax
  411689:	jne    0x4110ba
  41168f:	movsxd rax,DWORD PTR [r15+0x2c]
  411693:	jmp    0x4110d8
  411698:	nop    DWORD PTR [rax+rax*1+0x0]
  4116a0:	mov    r13,QWORD PTR [rsp+0x60]
  4116a5:	mov    rcx,r13
  4116a8:	call   0x412490
  4116ad:	mov    edx,DWORD PTR [rbx+0x1d4]
  4116b3:	mov    r8,QWORD PTR [rbx+0x1f0]
  4116ba:	mov    rcx,r13
  4116bd:	call   0x4124a0
  4116c2:	mov    r8,QWORD PTR [rsp+0x160]
  4116ca:	lea    rdx,[rip+0x10915]        # 0x421fe6
  4116d1:	mov    rcx,r15
  4116d4:	call   0x40a930
  4116d9:	jmp    0x411042
  4116de:	xchg   ax,ax
  4116e0:	cmp    DWORD PTR [rsi+0x8],0x23
  4116e4:	jle    0x410da3
  4116ea:	mov    r8d,0xffffffff
  4116f0:	xor    edx,edx
  4116f2:	mov    rcx,rbp
  4116f5:	mov    r13,QWORD PTR [rsi]
  4116f8:	mov    edi,0x9
  4116fd:	call   0x412480
  411702:	lea    rdx,[rip+0xf7a1]        # 0x420eaa
  411709:	mov    rcx,rbp
  41170c:	call   0x412478
  411711:	xor    eax,eax
  411713:	mov    QWORD PTR [rsp+0x50],rsi
  411718:	mov    rsi,r13
  41171b:	mov    r13d,eax
  41171e:	xchg   ax,ax
  411720:	lea    rdx,[rip+0x10000]        # 0x421727
  411727:	mov    r8d,r13d
  41172a:	mov    rcx,rbp
  41172d:	mov    r12d,0x3
  411733:	call   0x412478
  411738:	cmp    edi,0x3
  41173b:	cmovle r12d,edi
  41173f:	test   r12d,r12d
  411742:	jle    0x41176e
  411744:	lea    edx,[r12-0x1]
  411749:	lea    rbx,[rsi+rdx*4+0x4]
  41174e:	xchg   ax,ax
  411750:	mov    r8d,DWORD PTR [rsi]
  411753:	lea    rdx,[rip+0x10a28]        # 0x422182
  41175a:	mov    rcx,rbp
  41175d:	add    rsi,0x4
  411761:	call   0x412478
  411766:	cmp    rsi,rbx
  411769:	jne    0x411750
  41176b:	sub    edi,r12d
  41176e:	lea    rdx,[rip+0xf735]        # 0x420eaa
  411775:	mov    rcx,rbp
  411778:	add    r13d,0x1
  41177c:	call   0x412478
  411781:	test   edi,edi
  411783:	jne    0x411720
  411785:	mov    r8,QWORD PTR [rsp+0x960]
  41178d:	mov    rsi,QWORD PTR [rsp+0x50]
  411792:	lea    rdx,[rip+0x109ef]        # 0x422188
  411799:	mov    rcx,r15
  41179c:	call   0x40a930
  4117a1:	xor    edx,edx
  4117a3:	mov    rcx,rbp
  4117a6:	call   0x412488
  4117ab:	mov    rcx,QWORD PTR [rsi]
  4117ae:	call   0x412420
  4117b3:	movsxd rax,DWORD PTR [r15+0x2c]
  4117b7:	cvttsd2si rbx,xmm0
  4117bc:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  4117c1:	mov    edx,DWORD PTR [rax+0x58]
  4117c4:	test   edx,edx
  4117c6:	jne    0x4117e7
  4117c8:	mov    rcx,QWORD PTR [rax+0x50]
  4117cc:	lea    rdx,[rip+0x109c3]        # 0x422196
  4117d3:	xor    r9d,r9d
  4117d6:	xor    r8d,r8d
  4117d9:	call   0x412438
  4117de:	test   rax,rax
  4117e1:	je     0x410da3
  4117e7:	mov    rax,QWORD PTR [r15+0x8]
  4117eb:	lea    rdx,[rip+0x109a4]        # 0x422196
  4117f2:	mov    r8,rbx
  4117f5:	mov    rcx,r15
  4117f8:	call   QWORD PTR [rax+0x38]
  4117fb:	movsxd rdx,DWORD PTR [r15+0x2c]
  4117ff:	mov    rax,rdx
  411802:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  411808:	jmp    0x410daa
  41180d:	nop    DWORD PTR [rax]
  411810:	cmp    r8d,0xd
  411814:	je     0x411b79
  41181a:	add    DWORD PTR [r15+0x28ac],0x1
  411822:	jmp    0x410dd3
  411827:	nop    WORD PTR [rax+rax*1+0x0]
  411830:	xor    edx,edx
  411832:	mov    r8d,0x1
  411838:	mov    rcx,rbp
  41183b:	call   0x412480
  411840:	mov    rdi,QWORD PTR [rsp+0xd8]
  411848:	lea    rdx,[rip+0xfc47]        # 0x421496
  41184f:	mov    rcx,rbp
  411852:	mov    r14,rsi
  411855:	call   0x412478
  41185a:	cmp    rdi,rsi
  41185d:	je     0x41188f
  41185f:	mov    rax,rbx
  411862:	mov    rbx,rdi
  411865:	mov    rdi,rax
  411868:	nop    DWORD PTR [rax+rax*1+0x0]
  411870:	movzx  r8d,BYTE PTR [r14]
  411874:	lea    rdx,[rip+0xfc67]        # 0x4214e2
  41187b:	mov    rcx,rbp
  41187e:	add    r14,0x1
  411882:	call   0x412478
  411887:	cmp    r14,rbx
  41188a:	jne    0x411870
  41188c:	mov    rbx,rdi
  41188f:	mov    r9,QWORD PTR [rsp+0x960]
  411897:	lea    r8,[rip+0xfde2]        # 0x421680
  41189e:	mov    QWORD PTR [rsp+0x20],rbx
  4118a3:	mov    edx,0x30
  4118a8:	mov    rcx,r15
  4118ab:	call   0x412308
  4118b0:	mov    eax,DWORD PTR [r15+0x28b4]
  4118b7:	add    DWORD PTR [rsp+0x68],0x1
  4118bc:	test   eax,eax
  4118be:	je     0x4118f2
  4118c0:	cmp    eax,0x1
  4118c3:	jne    0x4118e4
  4118c5:	mov    r8,QWORD PTR [r15+0x28b8]
  4118cc:	mov    rcx,QWORD PTR [rsp+0x38]
  4118d1:	lea    rdx,[rip+0xf70e]        # 0x420fe6
  4118d8:	call   0x412478
  4118dd:	mov    eax,DWORD PTR [r15+0x28b4]
  4118e4:	cmp    eax,0x2
  4118e7:	jne    0x4104f0
  4118ed:	jmp    0x4104d8
  4118f2:	lea    r8,[rip+0xfdb7]        # 0x4216b0
  4118f9:	mov    edx,0x10
  4118fe:	mov    rcx,r15
  411901:	mov    r9,rbx
  411904:	mov    r14,QWORD PTR [rsp+0x78]
  411909:	call   0x412308
  41190e:	mov    rcx,QWORD PTR [rsp+0x38]
  411913:	lea    rdx,[rsp+0xc8]
  41191b:	call   0x412488
  411920:	mov    rax,QWORD PTR [r12+0x48]
  411925:	lea    r8,[rip+0x106ec]        # 0x422018
  41192c:	mov    edx,0x10
  411931:	mov    r9,rbx
  411934:	mov    rcx,r15
  411937:	mov    QWORD PTR [rsp+0x28],rax
  41193c:	mov    rax,QWORD PTR [rsp+0x58]
  411941:	mov    QWORD PTR [rsp+0x20],rax
  411946:	call   0x412308
  41194b:	mov    rcx,QWORD PTR [rsp+0xc8]
  411953:	call   0x4123c0
  411958:	mov    rcx,QWORD PTR [rsp+0xd0]
  411960:	call   0x4123c0
  411965:	movsxd rdx,DWORD PTR [r15+0x2c]
  411969:	mov    DWORD PTR [rsp+0x48],0xbebbb1b7
  411971:	add    DWORD PTR [r15+rdx*4+0x30],0x1
  411977:	mov    rax,rdx
  41197a:	lea    rcx,[r15+rdx*8]
  41197e:	test   eax,eax
  411980:	mov    r8,QWORD PTR [rcx+0x58]
  411984:	mov    r8d,DWORD PTR [r8]
  411987:	je     0x4119a3
  411989:	mov    rcx,QWORD PTR [rcx+0x50]
  41198d:	mov    ecx,DWORD PTR [rcx]
  41198f:	cmp    ecx,0xffffffff
  411992:	je     0x4119a3
  411994:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  41199a:	cmp    ecx,0xf
  41199d:	je     0x411c3b
  4119a3:	mov    rdx,QWORD PTR [r15+0x8]
  4119a7:	mov    rdx,QWORD PTR [rdx+0x30]
  4119ab:	test   rdx,rdx
  4119ae:	je     0x4119b9
  4119b0:	mov    rcx,r15
  4119b3:	call   rdx
  4119b5:	mov    eax,DWORD PTR [r15+0x2c]
  4119b9:	sub    eax,0x1
  4119bc:	mov    DWORD PTR [r15+0x2c],eax
  4119c0:	jmp    0x410658
  4119c5:	mov    rcx,QWORD PTR [r12+0x50]
  4119ca:	xor    r9d,r9d
  4119cd:	xor    r8d,r8d
  4119d0:	mov    rdx,rbx
  4119d3:	call   0x412438
  4119d8:	test   rax,rax
  4119db:	jne    0x410463
  4119e1:	jmp    0x41041a
  4119e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119f0:	mov    rcx,QWORD PTR [rdx+0x50]
  4119f4:	lea    rdx,[rip+0x105fa]        # 0x421ff5
  4119fb:	xor    r9d,r9d
  4119fe:	xor    r8d,r8d
  411a01:	call   0x412438
  411a06:	test   rax,rax
  411a09:	jne    0x410d32
  411a0f:	movsxd rax,DWORD PTR [r15+0x2c]
  411a13:	jmp    0x410d50
  411a18:	nop    DWORD PTR [rax+rax*1+0x0]
  411a20:	xor    edx,edx
  411a22:	mov    r8d,0x1
  411a28:	mov    rcx,rbp
  411a2b:	call   0x412480
  411a30:	mov    rbx,QWORD PTR [rsp+0xd8]
  411a38:	lea    rdx,[rip+0xfa57]        # 0x421496
  411a3f:	mov    rcx,rbp
  411a42:	mov    r12,rsi
  411a45:	call   0x412478
  411a4a:	cmp    rbx,rsi
  411a4d:	je     0x411a6d
  411a4f:	nop
  411a50:	movzx  r8d,BYTE PTR [r12]
  411a55:	lea    rdx,[rip+0xfa86]        # 0x4214e2
  411a5c:	mov    rcx,rbp
  411a5f:	add    r12,0x1
  411a63:	call   0x412478
  411a68:	cmp    r12,rbx
  411a6b:	jne    0x411a50
  411a6d:	mov    rax,QWORD PTR [rsp+0x58]
  411a72:	mov    r9,QWORD PTR [rsp+0x960]
  411a7a:	lea    r8,[rip+0xfbff]        # 0x421680
  411a81:	mov    edx,0x30
  411a86:	mov    rcx,r15
  411a89:	mov    QWORD PTR [rsp+0x20],rax
  411a8e:	call   0x412308
  411a93:	mov    eax,DWORD PTR [r15+0x28b4]
  411a9a:	add    DWORD PTR [rsp+0x40],0x1
  411a9f:	test   eax,eax
  411aa1:	je     0x411ad5
  411aa3:	cmp    eax,0x1
  411aa6:	jne    0x411ac7
  411aa8:	mov    r8,QWORD PTR [r15+0x28b8]
  411aaf:	mov    rcx,QWORD PTR [rsp+0x38]
  411ab4:	lea    rdx,[rip+0xf52b]        # 0x420fe6
  411abb:	call   0x412478
  411ac0:	mov    eax,DWORD PTR [r15+0x28b4]
  411ac7:	cmp    eax,0x2
  411aca:	jne    0x4105c5
  411ad0:	jmp    0x4105ad
  411ad5:	mov    r9,QWORD PTR [rsp+0x58]
  411ada:	lea    r8,[rip+0xfbcf]        # 0x4216b0
  411ae1:	mov    rcx,r15
  411ae4:	mov    edx,0x10
  411ae9:	mov    r14,QWORD PTR [rsp+0x78]
  411aee:	mov    rbx,QWORD PTR [rsp+0x68]
  411af3:	mov    r12,QWORD PTR [rsp+0x80]
  411afb:	call   0x412308
  411b00:	mov    rcx,QWORD PTR [rsp+0x38]
  411b05:	lea    rdx,[rsp+0xd0]
  411b0d:	call   0x412488
  411b12:	jmp    0x411920
  411b17:	mov    eax,DWORD PTR [r15+0x2c]
  411b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  411b20:	movsxd rdx,eax
  411b23:	test   eax,eax
  411b25:	lea    rcx,[r15+rdx*8]
  411b29:	mov    r8,QWORD PTR [rcx+0x58]
  411b2d:	mov    r8d,DWORD PTR [r8]
  411b30:	je     0x411b4c
  411b32:	mov    rcx,QWORD PTR [rcx+0x50]
  411b36:	mov    ecx,DWORD PTR [rcx]
  411b38:	cmp    ecx,0xffffffff
  411b3b:	je     0x411b4c
  411b3d:	add    DWORD PTR [r15+rdx*4+0x2c],0x1
  411b43:	cmp    ecx,0xf
  411b46:	je     0x411c52
  411b4c:	mov    rdx,QWORD PTR [r15+0x8]
  411b50:	xor    r8d,r8d
  411b53:	mov    rdx,QWORD PTR [rdx+0x30]
  411b57:	test   rdx,rdx
  411b5a:	je     0x411b6d
  411b5c:	mov    rcx,r15
  411b5f:	call   rdx
  411b61:	mov    rdx,QWORD PTR [r15+0x8]
  411b65:	mov    eax,DWORD PTR [r15+0x2c]
  411b69:	mov    r8,QWORD PTR [rdx+0x30]
  411b6d:	sub    eax,0x1
  411b70:	mov    DWORD PTR [r15+0x2c],eax
  411b74:	jmp    0x410670
  411b79:	add    DWORD PTR [r15+0x28a8],0x1
  411b81:	jmp    0x410dd3
  411b86:	movsxd rdx,DWORD PTR [r15+0x2c]
  411b8a:	mov    r14,QWORD PTR [rsp+0x78]
  411b8f:	mov    DWORD PTR [rsp+0x48],0x0
  411b97:	mov    rax,rdx
  411b9a:	jmp    0x41197a
  411b9f:	cmp    r8d,0xd
  411ba3:	je     0x411d5b
  411ba9:	add    DWORD PTR [r15+0x28ac],0x1
  411bb1:	jmp    0x410b5a
  411bb6:	lea    r8,[rip+0xff76]        # 0x421b33
  411bbd:	lea    rdx,[rip+0x106b4]        # 0x422278
  411bc4:	mov    rcx,r15
  411bc7:	call   0x40ac10
  411bcc:	jmp    0x41129c
  411bd1:	xor    ecx,ecx
  411bd3:	call   0x412468
  411bd8:	lea    rdx,[rip+0x106d0]        # 0x4222af
  411bdf:	mov    r8,rax
  411be2:	mov    rcx,r15
  411be5:	call   0x40ac10
  411bea:	jmp    0x411333
  411bef:	mov    rcx,QWORD PTR [rdx+0x50]
  411bf3:	lea    rdx,[rip+0x106f4]        # 0x4222ee
  411bfa:	xor    r9d,r9d
  411bfd:	xor    r8d,r8d
  411c00:	call   0x412438
  411c05:	test   rax,rax
  411c08:	je     0x40ff55
  411c0e:	mov    rax,QWORD PTR [r15+0x8]
  411c12:	jmp    0x410c24
  411c17:	mov    rcx,QWORD PTR [rax+0x50]
  411c1b:	lea    rdx,[rip+0x10754]        # 0x422376
  411c22:	xor    r9d,r9d
  411c25:	xor    r8d,r8d
  411c28:	call   0x412438
  411c2d:	test   rax,rax
  411c30:	jne    0x41025b
  411c36:	jmp    0x410279
  411c3b:	cmp    r8d,0xd
  411c3f:	je     0x411dab
  411c45:	add    DWORD PTR [r15+0x28ac],0x1
  411c4d:	jmp    0x4119a3
  411c52:	cmp    r8d,0xd
  411c56:	je     0x411d9e
  411c5c:	add    DWORD PTR [r15+0x28ac],0x1
  411c64:	jmp    0x411b4c
  411c69:	add    DWORD PTR [r15+0x28a8],0x1
  411c71:	jmp    0x41069c
  411c76:	lea    r8,[rip+0x10211]        # 0x421e8e
  411c7d:	lea    rdx,[rip+0x10491]        # 0x422115
  411c84:	mov    rcx,r15
  411c87:	lea    rbp,[rsp+0x960]
  411c8f:	call   0x40ac10
  411c94:	jmp    0x40fdb7
  411c99:	lea    r8,[rip+0xfe93]        # 0x421b33
  411ca0:	lea    rdx,[rip+0x10618]        # 0x4222bf
  411ca7:	mov    rcx,r15
  411caa:	call   0x40ac10
  411caf:	jmp    0x41135d
  411cb4:	mov    ecx,0x2
  411cb9:	call   0x412460
  411cbe:	lea    rdx,[rip+0x105da]        # 0x42229f
  411cc5:	mov    r8,rax
  411cc8:	mov    rcx,r15
  411ccb:	call   0x40ac10
  411cd0:	jmp    0x41130e
  411cd5:	mov    ecx,0x2
  411cda:	call   0x412450
  411cdf:	lea    rdx,[rip+0x105aa]        # 0x422290
  411ce6:	mov    r8,rax
  411ce9:	mov    rcx,r15
  411cec:	call   0x40ac10
  411cf1:	jmp    0x4112e8
  411cf6:	lea    r8,[rip+0x10191]        # 0x421e8e
  411cfd:	lea    rdx,[rip+0x104e9]        # 0x4221ed
  411d04:	mov    rcx,r15
  411d07:	call   0x40ac10
  411d0c:	jmp    0x40fc92
  411d11:	lea    r8,[rip+0x10176]        # 0x421e8e
  411d18:	lea    rdx,[rip+0x102a8]        # 0x421fc7
  411d1f:	mov    rcx,r15
  411d22:	call   0x40ac10
  411d27:	jmp    0x410fa5
  411d2c:	mov    rax,QWORD PTR [r15+0x28b8]
  411d33:	mov    r9d,DWORD PTR [rsp+0x68]
  411d38:	lea    r8,[rip+0xf9a1]        # 0x4216e0
  411d3f:	mov    QWORD PTR [rsp+0x20],rbx
  411d44:	mov    edx,0x18
  411d49:	mov    rcx,r15
  411d4c:	mov    QWORD PTR [rsp+0x28],rax
  411d51:	call   0x412308
  411d56:	jmp    0x410513
  411d5b:	add    DWORD PTR [r15+0x28a8],0x1
  411d63:	jmp    0x410b5a
  411d68:	lea    r8,[rip+0x1011f]        # 0x421e8e
  411d6f:	lea    rdx,[rip+0x1050e]        # 0x422284
  411d76:	mov    rcx,r15
  411d79:	call   0x40ac10
  411d7e:	jmp    0x4112c2
  411d83:	lea    r8,[rip+0x10104]        # 0x421e8e
  411d8a:	lea    rdx,[rip+0x101b7]        # 0x421f48
  411d91:	mov    rcx,r15
  411d94:	call   0x40ac10
  411d99:	jmp    0x411225
  411d9e:	add    DWORD PTR [r15+0x28a8],0x1
  411da6:	jmp    0x411b4c
  411dab:	add    DWORD PTR [r15+0x28a8],0x1
  411db3:	jmp    0x4119a3
  411db8:	movsxd rax,DWORD PTR [r15+0x2c]
  411dbc:	jmp    0x410ad5
  411dc1:	movsxd rax,DWORD PTR [r15+0x2c]
  411dc5:	jmp    0x4107bd
  411dca:	movsxd rax,DWORD PTR [r15+0x2c]
  411dce:	jmp    0x410815
  411dd3:	movsxd rdx,DWORD PTR [r15+0x2c]
  411dd7:	mov    rax,rdx
  411dda:	jmp    0x410b31
  411ddf:	movsxd rax,DWORD PTR [r15+0x2c]
  411de3:	jmp    0x41086c
  411de8:	movsxd rax,DWORD PTR [r15+0x2c]
  411dec:	jmp    0x4108c3
  411df1:	movsxd rax,DWORD PTR [r15+0x2c]
  411df5:	jmp    0x41091c
  411dfa:	movsxd rax,DWORD PTR [r15+0x2c]
  411dfe:	jmp    0x410975
  411e03:	movsxd rax,DWORD PTR [r15+0x2c]
  411e07:	jmp    0x4109ce
  411e0c:	movsxd rax,DWORD PTR [r15+0x2c]
  411e10:	jmp    0x410a27
  411e15:	movsxd rax,DWORD PTR [r15+0x2c]
  411e19:	jmp    0x410a7e
  411e1e:	lea    r8,[rip+0x10069]        # 0x421e8e
  411e25:	lea    rdx,[rip+0x103b6]        # 0x4221e2
  411e2c:	mov    rcx,r15
  411e2f:	call   0x40ac10
  411e34:	mov    r8d,DWORD PTR [rip+0x17561]        # 0x42939c
  411e3b:	test   r8d,r8d
  411e3e:	jne    0x410eb4
  411e44:	lea    r8,[rip+0x10043]        # 0x421e8e
  411e4b:	lea    rdx,[rip+0x1039b]        # 0x4221ed
  411e52:	mov    rcx,r15
  411e55:	call   0x40ac10
  411e5a:	jmp    0x410eb4
  411e5f:	mov    rax,QWORD PTR [r15+0x28b8]
  411e66:	mov    r9d,DWORD PTR [rsp+0x40]
  411e6b:	lea    r8,[rip+0xf86e]        # 0x4216e0
  411e72:	mov    edx,0x18
  411e77:	mov    rcx,r15
  411e7a:	mov    QWORD PTR [rsp+0x28],rax
  411e7f:	mov    rax,QWORD PTR [rsp+0x58]
  411e84:	mov    QWORD PTR [rsp+0x20],rax
  411e89:	call   0x412308
  411e8e:	jmp    0x4105f2
  411e93:	call   0x419e29
  411e98:	nop
  411e99:	nop    DWORD PTR [rax+0x0]
  411ea0:	sub    rsp,0x38
  411ea4:	lea    rcx,[rip+0xfffffffffffef685]        # 0x401530
  411eab:	call   0x4122e0
  411eb0:	lea    r8,[rip+0x10551]        # 0x422408
  411eb7:	xor    ecx,ecx
  411eb9:	mov    edx,0x20
  411ebe:	call   0x412308
  411ec3:	lea    r9,[rip+0x133ce]        # 0x425298
  411eca:	lea    r8,[rip+0x1055f]        # 0x422430
  411ed1:	xor    ecx,ecx
  411ed3:	mov    edx,0x20
  411ed8:	call   0x412308
  411edd:	lea    r8,[rip+0xefc6]        # 0x420eaa
  411ee4:	xor    ecx,ecx
  411ee6:	mov    edx,0x20
  411eeb:	call   0x412308
  411ef0:	mov    rcx,QWORD PTR [rip+0x17409]        # 0x429300
  411ef7:	lea    rdx,[rip+0x10554]        # 0x422452
  411efe:	xor    r9d,r9d
  411f01:	xor    r8d,r8d
  411f04:	mov    DWORD PTR [rsp+0x20],0x0
  411f0c:	call   0x402510
  411f11:	lea    rcx,[rip+0xef92]        # 0x420eaa
  411f18:	call   0x407ff0
  411f1d:	call   0x412008
  411f22:	mov    edx,0x2
  411f27:	mov    rcx,rax
  411f2a:	add    rsp,0x38
  411f2e:	jmp    0x4026c0
  411f33:	nop
  411f34:	nop
  411f35:	nop
  411f36:	nop
  411f37:	nop
  411f38:	nop
  411f39:	nop
  411f3a:	nop
  411f3b:	nop
  411f3c:	nop
  411f3d:	nop
  411f3e:	nop
  411f3f:	nop
  411f40:	jmp    QWORD PTR [rip+0x19e6e]        # 0x42bdb4
  411f46:	nop
  411f47:	nop
  411f48:	jmp    QWORD PTR [rip+0x19e5e]        # 0x42bdac
  411f4e:	nop
  411f4f:	nop
  411f50:	jmp    QWORD PTR [rip+0x19e4e]        # 0x42bda4
  411f56:	nop
  411f57:	nop
  411f58:	jmp    QWORD PTR [rip+0x19e3e]        # 0x42bd9c
  411f5e:	nop
  411f5f:	nop
  411f60:	jmp    QWORD PTR [rip+0x19e2e]        # 0x42bd94
  411f66:	nop
  411f67:	nop
  411f68:	jmp    QWORD PTR [rip+0x19e1e]        # 0x42bd8c
  411f6e:	nop
  411f6f:	nop
  411f70:	jmp    QWORD PTR [rip+0x19e0e]        # 0x42bd84
  411f76:	nop
  411f77:	nop
  411f78:	jmp    QWORD PTR [rip+0x19dfe]        # 0x42bd7c
  411f7e:	nop
  411f7f:	nop
  411f80:	jmp    QWORD PTR [rip+0x19dee]        # 0x42bd74
  411f86:	nop
  411f87:	nop
  411f88:	jmp    QWORD PTR [rip+0x19dde]        # 0x42bd6c
  411f8e:	nop
  411f8f:	nop
  411f90:	jmp    QWORD PTR [rip+0x19e5e]        # 0x42bdf4
  411f96:	nop
  411f97:	nop
  411f98:	jmp    QWORD PTR [rip+0x19e4e]        # 0x42bdec
  411f9e:	nop
  411f9f:	nop
  411fa0:	jmp    QWORD PTR [rip+0x19e3e]        # 0x42bde4
  411fa6:	nop
  411fa7:	nop
  411fa8:	jmp    QWORD PTR [rip+0x19e2e]        # 0x42bddc
  411fae:	nop
  411faf:	nop
  411fb0:	jmp    QWORD PTR [rip+0x19e1e]        # 0x42bdd4
  411fb6:	nop
  411fb7:	nop
  411fb8:	jmp    QWORD PTR [rip+0x19e0e]        # 0x42bdcc
  411fbe:	nop
  411fbf:	nop
  411fc0:	jmp    QWORD PTR [rip+0x19dfe]        # 0x42bdc4
  411fc6:	nop
  411fc7:	nop
  411fc8:	jmp    QWORD PTR [rip+0x19ede]        # 0x42beac
  411fce:	nop
  411fcf:	nop
  411fd0:	jmp    QWORD PTR [rip+0x19ece]        # 0x42bea4
  411fd6:	nop
  411fd7:	nop
  411fd8:	jmp    QWORD PTR [rip+0x19ebe]        # 0x42be9c
  411fde:	nop
  411fdf:	nop
  411fe0:	jmp    QWORD PTR [rip+0x19eae]        # 0x42be94
  411fe6:	nop
  411fe7:	nop
  411fe8:	jmp    QWORD PTR [rip+0x19e9e]        # 0x42be8c
  411fee:	nop
  411fef:	nop
  411ff0:	jmp    QWORD PTR [rip+0x19e8e]        # 0x42be84
  411ff6:	nop
  411ff7:	nop
  411ff8:	jmp    QWORD PTR [rip+0x19e7e]        # 0x42be7c
  411ffe:	nop
  411fff:	nop
  412000:	jmp    QWORD PTR [rip+0x19e6e]        # 0x42be74
  412006:	nop
  412007:	nop
  412008:	jmp    QWORD PTR [rip+0x19e5e]        # 0x42be6c
  41200e:	nop
  41200f:	nop
  412010:	jmp    QWORD PTR [rip+0x19e4e]        # 0x42be64
  412016:	nop
  412017:	nop
  412018:	jmp    QWORD PTR [rip+0x19e3e]        # 0x42be5c
  41201e:	nop
  41201f:	nop
  412020:	jmp    QWORD PTR [rip+0x19e2e]        # 0x42be54
  412026:	nop
  412027:	nop
  412028:	jmp    QWORD PTR [rip+0x19e1e]        # 0x42be4c
  41202e:	nop
  41202f:	nop
  412030:	jmp    QWORD PTR [rip+0x19e0e]        # 0x42be44
  412036:	nop
  412037:	nop
  412038:	jmp    QWORD PTR [rip+0x19dfe]        # 0x42be3c
  41203e:	nop
  41203f:	nop
  412040:	jmp    QWORD PTR [rip+0x19dee]        # 0x42be34
  412046:	nop
  412047:	nop
  412048:	jmp    QWORD PTR [rip+0x19dde]        # 0x42be2c
  41204e:	nop
  41204f:	nop
  412050:	jmp    QWORD PTR [rip+0x19dce]        # 0x42be24
  412056:	nop
  412057:	nop
  412058:	jmp    QWORD PTR [rip+0x19dbe]        # 0x42be1c
  41205e:	nop
  41205f:	nop
  412060:	jmp    QWORD PTR [rip+0x19dae]        # 0x42be14
  412066:	nop
  412067:	nop
  412068:	jmp    QWORD PTR [rip+0x19d9e]        # 0x42be0c
  41206e:	nop
  41206f:	nop
  412070:	jmp    QWORD PTR [rip+0x19d8e]        # 0x42be04
  412076:	nop
  412077:	nop
  412078:	jmp    QWORD PTR [rip+0x19cde]        # 0x42bd5c
  41207e:	nop
  41207f:	nop
  412080:	jmp    QWORD PTR [rip+0x19cce]        # 0x42bd54
  412086:	nop
  412087:	nop
  412088:	jmp    QWORD PTR [rip+0x19cbe]        # 0x42bd4c
  41208e:	nop
  41208f:	nop
  412090:	jmp    QWORD PTR [rip+0x19cae]        # 0x42bd44
  412096:	nop
  412097:	nop
  412098:	jmp    QWORD PTR [rip+0x19c9e]        # 0x42bd3c
  41209e:	nop
  41209f:	nop
  4120a0:	jmp    QWORD PTR [rip+0x19c8e]        # 0x42bd34
  4120a6:	nop
  4120a7:	nop
  4120a8:	jmp    QWORD PTR [rip+0x19c7e]        # 0x42bd2c
  4120ae:	nop
  4120af:	nop
  4120b0:	jmp    QWORD PTR [rip+0x19c6e]        # 0x42bd24
  4120b6:	nop
  4120b7:	nop
  4120b8:	jmp    QWORD PTR [rip+0x19c5e]        # 0x42bd1c
  4120be:	nop
  4120bf:	nop
  4120c0:	jmp    QWORD PTR [rip+0x19c4e]        # 0x42bd14
  4120c6:	nop
  4120c7:	nop
  4120c8:	jmp    QWORD PTR [rip+0x19c3e]        # 0x42bd0c
  4120ce:	nop
  4120cf:	nop
  4120d0:	jmp    QWORD PTR [rip+0x19c2e]        # 0x42bd04
  4120d6:	nop
  4120d7:	nop
  4120d8:	jmp    QWORD PTR [rip+0x19c1e]        # 0x42bcfc
  4120de:	nop
  4120df:	nop
  4120e0:	jmp    QWORD PTR [rip+0x19c0e]        # 0x42bcf4
  4120e6:	nop
  4120e7:	nop
  4120e8:	jmp    QWORD PTR [rip+0x19bfe]        # 0x42bcec
  4120ee:	nop
  4120ef:	nop
  4120f0:	jmp    QWORD PTR [rip+0x19bee]        # 0x42bce4
  4120f6:	nop
  4120f7:	nop
  4120f8:	jmp    QWORD PTR [rip+0x19bde]        # 0x42bcdc
  4120fe:	nop
  4120ff:	nop
  412100:	jmp    QWORD PTR [rip+0x19bce]        # 0x42bcd4
  412106:	nop
  412107:	nop
  412108:	jmp    QWORD PTR [rip+0x19bbe]        # 0x42bccc
  41210e:	nop
  41210f:	nop
  412110:	jmp    QWORD PTR [rip+0x19bae]        # 0x42bcc4
  412116:	nop
  412117:	nop
  412118:	jmp    QWORD PTR [rip+0x19b9e]        # 0x42bcbc
  41211e:	nop
  41211f:	nop
  412120:	jmp    QWORD PTR [rip+0x19b8e]        # 0x42bcb4
  412126:	nop
  412127:	nop
  412128:	jmp    QWORD PTR [rip+0x19b7e]        # 0x42bcac
  41212e:	nop
  41212f:	nop
  412130:	jmp    QWORD PTR [rip+0x19b6e]        # 0x42bca4
  412136:	nop
  412137:	nop
  412138:	jmp    QWORD PTR [rip+0x19b5e]        # 0x42bc9c
  41213e:	nop
  41213f:	nop
  412140:	jmp    QWORD PTR [rip+0x19b4e]        # 0x42bc94
  412146:	nop
  412147:	nop
  412148:	jmp    QWORD PTR [rip+0x19d7e]        # 0x42becc
  41214e:	nop
  41214f:	nop
  412150:	jmp    QWORD PTR [rip+0x19d6e]        # 0x42bec4
  412156:	nop
  412157:	nop
  412158:	jmp    QWORD PTR [rip+0x19d5e]        # 0x42bebc
  41215e:	nop
  41215f:	nop
  412160:	jmp    QWORD PTR [rip+0x1a06e]        # 0x42c1d4
  412166:	nop
  412167:	nop
  412168:	jmp    QWORD PTR [rip+0x1a05e]        # 0x42c1cc
  41216e:	nop
  41216f:	nop
  412170:	jmp    QWORD PTR [rip+0x1a08e]        # 0x42c204
  412176:	nop
  412177:	nop
  412178:	jmp    QWORD PTR [rip+0x1a07e]        # 0x42c1fc
  41217e:	nop
  41217f:	nop
  412180:	jmp    QWORD PTR [rip+0x1a06e]        # 0x42c1f4
  412186:	nop
  412187:	nop
  412188:	jmp    QWORD PTR [rip+0x1a05e]        # 0x42c1ec
  41218e:	nop
  41218f:	nop
  412190:	jmp    QWORD PTR [rip+0x1a04e]        # 0x42c1e4
  412196:	nop
  412197:	nop
  412198:	jmp    QWORD PTR [rip+0x1a0a6]        # 0x42c244
  41219e:	nop
  41219f:	nop
  4121a0:	jmp    QWORD PTR [rip+0x1a096]        # 0x42c23c
  4121a6:	nop
  4121a7:	nop
  4121a8:	jmp    QWORD PTR [rip+0x1a086]        # 0x42c234
  4121ae:	nop
  4121af:	nop
  4121b0:	jmp    QWORD PTR [rip+0x1a076]        # 0x42c22c
  4121b6:	nop
  4121b7:	nop
  4121b8:	jmp    QWORD PTR [rip+0x1a066]        # 0x42c224
  4121be:	nop
  4121bf:	nop
  4121c0:	jmp    QWORD PTR [rip+0x1a056]        # 0x42c21c
  4121c6:	nop
  4121c7:	nop
  4121c8:	jmp    QWORD PTR [rip+0x1a046]        # 0x42c214
  4121ce:	nop
  4121cf:	nop
  4121d0:	jmp    QWORD PTR [rip+0x19fe6]        # 0x42c1bc
  4121d6:	nop
  4121d7:	nop
  4121d8:	jmp    QWORD PTR [rip+0x19fd6]        # 0x42c1b4
  4121de:	nop
  4121df:	nop
  4121e0:	jmp    QWORD PTR [rip+0x19fc6]        # 0x42c1ac
  4121e6:	nop
  4121e7:	nop
  4121e8:	jmp    QWORD PTR [rip+0x19fb6]        # 0x42c1a4
  4121ee:	nop
  4121ef:	nop
  4121f0:	jmp    QWORD PTR [rip+0x19fa6]        # 0x42c19c
  4121f6:	nop
  4121f7:	nop
  4121f8:	jmp    QWORD PTR [rip+0x19f96]        # 0x42c194
  4121fe:	nop
  4121ff:	nop
  412200:	jmp    QWORD PTR [rip+0x19f86]        # 0x42c18c
  412206:	nop
  412207:	nop
  412208:	jmp    QWORD PTR [rip+0x19f76]        # 0x42c184
  41220e:	nop
  41220f:	nop
  412210:	jmp    QWORD PTR [rip+0x19f66]        # 0x42c17c
  412216:	nop
  412217:	nop
  412218:	jmp    QWORD PTR [rip+0x19f56]        # 0x42c174
  41221e:	nop
  41221f:	nop
  412220:	jmp    QWORD PTR [rip+0x19f46]        # 0x42c16c
  412226:	nop
  412227:	nop
  412228:	jmp    QWORD PTR [rip+0x19f36]        # 0x42c164
  41222e:	nop
  41222f:	nop
  412230:	jmp    QWORD PTR [rip+0x19f26]        # 0x42c15c
  412236:	nop
  412237:	nop
  412238:	jmp    QWORD PTR [rip+0x19f16]        # 0x42c154
  41223e:	nop
  41223f:	nop
  412240:	jmp    QWORD PTR [rip+0x19f06]        # 0x42c14c
  412246:	nop
  412247:	nop
  412248:	jmp    QWORD PTR [rip+0x19ef6]        # 0x42c144
  41224e:	nop
  41224f:	nop
  412250:	jmp    QWORD PTR [rip+0x19ee6]        # 0x42c13c
  412256:	nop
  412257:	nop
  412258:	jmp    QWORD PTR [rip+0x19ed6]        # 0x42c134
  41225e:	nop
  41225f:	nop
  412260:	jmp    QWORD PTR [rip+0x19ec6]        # 0x42c12c
  412266:	nop
  412267:	nop
  412268:	jmp    QWORD PTR [rip+0x19eb6]        # 0x42c124
  41226e:	nop
  41226f:	nop
  412270:	jmp    QWORD PTR [rip+0x19ea6]        # 0x42c11c
  412276:	nop
  412277:	nop
  412278:	jmp    QWORD PTR [rip+0x19e96]        # 0x42c114
  41227e:	nop
  41227f:	nop
  412280:	jmp    QWORD PTR [rip+0x19e86]        # 0x42c10c
  412286:	nop
  412287:	nop
  412288:	jmp    QWORD PTR [rip+0x19e76]        # 0x42c104
  41228e:	nop
  41228f:	nop
  412290:	jmp    QWORD PTR [rip+0x19e66]        # 0x42c0fc
  412296:	nop
  412297:	nop
  412298:	jmp    QWORD PTR [rip+0x19e56]        # 0x42c0f4
  41229e:	nop
  41229f:	nop
  4122a0:	jmp    QWORD PTR [rip+0x19e46]        # 0x42c0ec
  4122a6:	nop
  4122a7:	nop
  4122a8:	jmp    QWORD PTR [rip+0x19e36]        # 0x42c0e4
  4122ae:	nop
  4122af:	nop
  4122b0:	jmp    QWORD PTR [rip+0x19e26]        # 0x42c0dc
  4122b6:	nop
  4122b7:	nop
  4122b8:	jmp    QWORD PTR [rip+0x19e16]        # 0x42c0d4
  4122be:	nop
  4122bf:	nop
  4122c0:	jmp    QWORD PTR [rip+0x19e06]        # 0x42c0cc
  4122c6:	nop
  4122c7:	nop
  4122c8:	jmp    QWORD PTR [rip+0x19df6]        # 0x42c0c4
  4122ce:	nop
  4122cf:	nop
  4122d0:	jmp    QWORD PTR [rip+0x19de6]        # 0x42c0bc
  4122d6:	nop
  4122d7:	nop
  4122d8:	jmp    QWORD PTR [rip+0x19dd6]        # 0x42c0b4
  4122de:	nop
  4122df:	nop
  4122e0:	jmp    QWORD PTR [rip+0x19dc6]        # 0x42c0ac
  4122e6:	nop
  4122e7:	nop
  4122e8:	jmp    QWORD PTR [rip+0x19db6]        # 0x42c0a4
  4122ee:	nop
  4122ef:	nop
  4122f0:	jmp    QWORD PTR [rip+0x19da6]        # 0x42c09c
  4122f6:	nop
  4122f7:	nop
  4122f8:	jmp    QWORD PTR [rip+0x19d96]        # 0x42c094
  4122fe:	nop
  4122ff:	nop
  412300:	jmp    QWORD PTR [rip+0x19d86]        # 0x42c08c
  412306:	nop
  412307:	nop
  412308:	jmp    QWORD PTR [rip+0x19d76]        # 0x42c084
  41230e:	nop
  41230f:	nop
  412310:	jmp    QWORD PTR [rip+0x19d66]        # 0x42c07c
  412316:	nop
  412317:	nop
  412318:	jmp    QWORD PTR [rip+0x19d56]        # 0x42c074
  41231e:	nop
  41231f:	nop
  412320:	jmp    QWORD PTR [rip+0x19d46]        # 0x42c06c
  412326:	nop
  412327:	nop
  412328:	jmp    QWORD PTR [rip+0x19d36]        # 0x42c064
  41232e:	nop
  41232f:	nop
  412330:	jmp    QWORD PTR [rip+0x19d26]        # 0x42c05c
  412336:	nop
  412337:	nop
  412338:	jmp    QWORD PTR [rip+0x19d16]        # 0x42c054
  41233e:	nop
  41233f:	nop
  412340:	jmp    QWORD PTR [rip+0x19d06]        # 0x42c04c
  412346:	nop
  412347:	nop
  412348:	jmp    QWORD PTR [rip+0x19cf6]        # 0x42c044
  41234e:	nop
  41234f:	nop
  412350:	jmp    QWORD PTR [rip+0x19ce6]        # 0x42c03c
  412356:	nop
  412357:	nop
  412358:	jmp    QWORD PTR [rip+0x19cd6]        # 0x42c034
  41235e:	nop
  41235f:	nop
  412360:	jmp    QWORD PTR [rip+0x19cc6]        # 0x42c02c
  412366:	nop
  412367:	nop
  412368:	jmp    QWORD PTR [rip+0x19cb6]        # 0x42c024
  41236e:	nop
  41236f:	nop
  412370:	jmp    QWORD PTR [rip+0x19ca6]        # 0x42c01c
  412376:	nop
  412377:	nop
  412378:	jmp    QWORD PTR [rip+0x19c96]        # 0x42c014
  41237e:	nop
  41237f:	nop
  412380:	jmp    QWORD PTR [rip+0x19c86]        # 0x42c00c
  412386:	nop
  412387:	nop
  412388:	jmp    QWORD PTR [rip+0x19c76]        # 0x42c004
  41238e:	nop
  41238f:	nop
  412390:	jmp    QWORD PTR [rip+0x19c66]        # 0x42bffc
  412396:	nop
  412397:	nop
  412398:	jmp    QWORD PTR [rip+0x19c56]        # 0x42bff4
  41239e:	nop
  41239f:	nop
  4123a0:	jmp    QWORD PTR [rip+0x19c46]        # 0x42bfec
  4123a6:	nop
  4123a7:	nop
  4123a8:	jmp    QWORD PTR [rip+0x19c36]        # 0x42bfe4
  4123ae:	nop
  4123af:	nop
  4123b0:	jmp    QWORD PTR [rip+0x19c26]        # 0x42bfdc
  4123b6:	nop
  4123b7:	nop
  4123b8:	jmp    QWORD PTR [rip+0x19c16]        # 0x42bfd4
  4123be:	nop
  4123bf:	nop
  4123c0:	jmp    QWORD PTR [rip+0x19c06]        # 0x42bfcc
  4123c6:	nop
  4123c7:	nop
  4123c8:	jmp    QWORD PTR [rip+0x19bf6]        # 0x42bfc4
  4123ce:	nop
  4123cf:	nop
  4123d0:	jmp    QWORD PTR [rip+0x19be6]        # 0x42bfbc
  4123d6:	nop
  4123d7:	nop
  4123d8:	jmp    QWORD PTR [rip+0x19bd6]        # 0x42bfb4
  4123de:	nop
  4123df:	nop
  4123e0:	jmp    QWORD PTR [rip+0x19bc6]        # 0x42bfac
  4123e6:	nop
  4123e7:	nop
  4123e8:	jmp    QWORD PTR [rip+0x19bb6]        # 0x42bfa4
  4123ee:	nop
  4123ef:	nop
  4123f0:	jmp    QWORD PTR [rip+0x19ba6]        # 0x42bf9c
  4123f6:	nop
  4123f7:	nop
  4123f8:	jmp    QWORD PTR [rip+0x19b96]        # 0x42bf94
  4123fe:	nop
  4123ff:	nop
  412400:	jmp    QWORD PTR [rip+0x19b86]        # 0x42bf8c
  412406:	nop
  412407:	nop
  412408:	jmp    QWORD PTR [rip+0x19b76]        # 0x42bf84
  41240e:	nop
  41240f:	nop
  412410:	jmp    QWORD PTR [rip+0x19b66]        # 0x42bf7c
  412416:	nop
  412417:	nop
  412418:	jmp    QWORD PTR [rip+0x19b56]        # 0x42bf74
  41241e:	nop
  41241f:	nop
  412420:	jmp    QWORD PTR [rip+0x19b46]        # 0x42bf6c
  412426:	nop
  412427:	nop
  412428:	jmp    QWORD PTR [rip+0x19b36]        # 0x42bf64
  41242e:	nop
  41242f:	nop
  412430:	jmp    QWORD PTR [rip+0x19b26]        # 0x42bf5c
  412436:	nop
  412437:	nop
  412438:	jmp    QWORD PTR [rip+0x19b16]        # 0x42bf54
  41243e:	nop
  41243f:	nop
  412440:	jmp    QWORD PTR [rip+0x19b06]        # 0x42bf4c
  412446:	nop
  412447:	nop
  412448:	jmp    QWORD PTR [rip+0x19af6]        # 0x42bf44
  41244e:	nop
  41244f:	nop
  412450:	jmp    QWORD PTR [rip+0x19ae6]        # 0x42bf3c
  412456:	nop
  412457:	nop
  412458:	jmp    QWORD PTR [rip+0x19ad6]        # 0x42bf34
  41245e:	nop
  41245f:	nop
  412460:	jmp    QWORD PTR [rip+0x19ac6]        # 0x42bf2c
  412466:	nop
  412467:	nop
  412468:	jmp    QWORD PTR [rip+0x19ab6]        # 0x42bf24
  41246e:	nop
  41246f:	nop
  412470:	jmp    QWORD PTR [rip+0x19aa6]        # 0x42bf1c
  412476:	nop
  412477:	nop
  412478:	jmp    QWORD PTR [rip+0x19a96]        # 0x42bf14
  41247e:	nop
  41247f:	nop
  412480:	jmp    QWORD PTR [rip+0x19a86]        # 0x42bf0c
  412486:	nop
  412487:	nop
  412488:	jmp    QWORD PTR [rip+0x19a76]        # 0x42bf04
  41248e:	nop
  41248f:	nop
  412490:	jmp    QWORD PTR [rip+0x19a66]        # 0x42befc
  412496:	nop
  412497:	nop
  412498:	jmp    QWORD PTR [rip+0x19a56]        # 0x42bef4
  41249e:	nop
  41249f:	nop
  4124a0:	jmp    QWORD PTR [rip+0x19a46]        # 0x42beec
  4124a6:	nop
  4124a7:	nop
  4124a8:	jmp    QWORD PTR [rip+0x19a36]        # 0x42bee4
  4124ae:	nop
  4124af:	nop
  4124b0:	jmp    QWORD PTR [rip+0x19a26]        # 0x42bedc
  4124b6:	nop
  4124b7:	nop
  4124b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4124c0:	push   rbx
  4124c1:	sub    rsp,0x30
  4124c5:	mov    rbx,rcx
  4124c8:	mov    rcx,QWORD PTR [rip+0x18359]        # 0x42a828
  4124cf:	call   0x412a70
  4124d4:	cmp    rax,0xffffffffffffffff
  4124d8:	mov    QWORD PTR [rsp+0x20],rax
  4124dd:	je     0x412555
  4124df:	mov    ecx,0x8
  4124e4:	call   0x419930
  4124e9:	mov    rcx,QWORD PTR [rip+0x18338]        # 0x42a828
  4124f0:	call   0x412a70
  4124f5:	mov    rcx,QWORD PTR [rip+0x18334]        # 0x42a830
  4124fc:	mov    QWORD PTR [rsp+0x20],rax
  412501:	call   0x412a70
  412506:	lea    rdx,[rsp+0x20]
  41250b:	lea    r8,[rsp+0x28]
  412510:	mov    rcx,rbx
  412513:	mov    QWORD PTR [rsp+0x28],rax
  412518:	call   0x419988
  41251d:	mov    rcx,QWORD PTR [rsp+0x20]
  412522:	mov    rbx,rax
  412525:	call   0x412a80
  41252a:	mov    rcx,QWORD PTR [rsp+0x28]
  41252f:	mov    QWORD PTR [rip+0x182f2],rax        # 0x42a828
  412536:	call   0x412a80
  41253b:	mov    ecx,0x8
  412540:	mov    QWORD PTR [rip+0x182e9],rax        # 0x42a830
  412547:	call   0x419918
  41254c:	mov    rax,rbx
  41254f:	add    rsp,0x30
  412553:	pop    rbx
  412554:	ret    
  412555:	mov    rax,QWORD PTR [rip+0x135d4]        # 0x425b30
  41255c:	mov    rcx,rbx
  41255f:	call   QWORD PTR [rax]
  412561:	add    rsp,0x30
  412565:	pop    rbx
  412566:	ret    
  412567:	nop    WORD PTR [rax+rax*1+0x0]
  412570:	sub    rsp,0x28
  412574:	call   0x4124c0
  412579:	test   rax,rax
  41257c:	sete   al
  41257f:	movzx  eax,al
  412582:	neg    eax
  412584:	add    rsp,0x28
  412588:	ret    
  412589:	nop
  41258a:	nop
  41258b:	nop
  41258c:	nop
  41258d:	nop
  41258e:	nop
  41258f:	nop
  412590:	sub    rsp,0x28
  412594:	mov    rax,QWORD PTR [rip+0xbaa5]        # 0x41e040
  41259b:	mov    rax,QWORD PTR [rax]
  41259e:	test   rax,rax
  4125a1:	je     0x4125c0
  4125a3:	call   rax
  4125a5:	mov    rax,QWORD PTR [rip+0xba94]        # 0x41e040
  4125ac:	lea    rdx,[rax+0x8]
  4125b0:	mov    rax,QWORD PTR [rax+0x8]
  4125b4:	mov    QWORD PTR [rip+0xba85],rdx        # 0x41e040
  4125bb:	test   rax,rax
  4125be:	jne    0x4125a3
  4125c0:	add    rsp,0x28
  4125c4:	ret    
  4125c5:	nop
  4125c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4125d0:	push   rsi
  4125d1:	push   rbx
  4125d2:	sub    rsp,0x28
  4125d6:	mov    rsi,QWORD PTR [rip+0x134c3]        # 0x425aa0
  4125dd:	mov    rax,QWORD PTR [rsi]
  4125e0:	cmp    eax,0xffffffff
  4125e3:	mov    ebx,eax
  4125e5:	je     0x412610
  4125e7:	test   ebx,ebx
  4125e9:	je     0x4125fa
  4125eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4125f0:	mov    eax,ebx
  4125f2:	call   QWORD PTR [rsi+rax*8]
  4125f5:	sub    ebx,0x1
  4125f8:	jne    0x4125f0
  4125fa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x412590
  412601:	add    rsp,0x28
  412605:	pop    rbx
  412606:	pop    rsi
  412607:	jmp    0x412570
  41260c:	nop    DWORD PTR [rax+0x0]
  412610:	xor    ebx,ebx
  412612:	jmp    0x412616
  412614:	mov    ebx,eax
  412616:	lea    edx,[rbx+0x1]
  412619:	cmp    QWORD PTR [rsi+rdx*8],0x0
  41261e:	mov    rax,rdx
  412621:	jne    0x412614
  412623:	jmp    0x4125e7
  412625:	nop
  412626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412630:	mov    eax,DWORD PTR [rip+0x16d8a]        # 0x4293c0
  412636:	test   eax,eax
  412638:	je     0x412640
  41263a:	repz ret 
  41263c:	nop    DWORD PTR [rax+0x0]
  412640:	mov    DWORD PTR [rip+0x16d76],0x1        # 0x4293c0
  41264a:	jmp    0x4125d0
  41264c:	nop
  41264d:	nop
  41264e:	nop
  41264f:	nop
  412650:	mov    rax,QWORD PTR [rip+0x19495]        # 0x42baec
  412657:	rex.W jmp rax
  41265a:	nop
  41265b:	nop
  41265c:	nop
  41265d:	nop
  41265e:	nop
  41265f:	nop
  412660:	xor    eax,eax
  412662:	ret    
  412663:	nop
  412664:	nop
  412665:	nop
  412666:	nop
  412667:	nop
  412668:	nop
  412669:	nop
  41266a:	nop
  41266b:	nop
  41266c:	nop
  41266d:	nop
  41266e:	nop
  41266f:	nop
  412670:	push   r12
  412672:	push   rbp
  412673:	push   rdi
  412674:	push   rsi
  412675:	push   rbx
  412676:	sub    rsp,0x40
  41267a:	mov    rbx,QWORD PTR [rip+0xba5f]        # 0x41e0e0
  412681:	movabs rax,0x2b992ddfa232
  41268b:	mov    QWORD PTR [rsp+0x20],0x0
  412694:	cmp    rbx,rax
  412697:	je     0x4126b0
  412699:	not    rbx
  41269c:	mov    QWORD PTR [rip+0xba4d],rbx        # 0x41e0f0
  4126a3:	add    rsp,0x40
  4126a7:	pop    rbx
  4126a8:	pop    rsi
  4126a9:	pop    rdi
  4126aa:	pop    rbp
  4126ab:	pop    r12
  4126ad:	ret    
  4126ae:	xchg   ax,ax
  4126b0:	lea    rcx,[rsp+0x20]
  4126b5:	call   QWORD PTR [rip+0x19351]        # 0x42ba0c
  4126bb:	mov    r12,QWORD PTR [rsp+0x20]
  4126c0:	call   QWORD PTR [rip+0x19306]        # 0x42b9cc
  4126c6:	mov    ebp,eax
  4126c8:	call   QWORD PTR [rip+0x19306]        # 0x42b9d4
  4126ce:	mov    edi,eax
  4126d0:	call   QWORD PTR [rip+0x1933e]        # 0x42ba14
  4126d6:	lea    rcx,[rsp+0x30]
  4126db:	mov    esi,eax
  4126dd:	call   QWORD PTR [rip+0x19361]        # 0x42ba44
  4126e3:	xor    r12,QWORD PTR [rsp+0x30]
  4126e8:	mov    edx,edi
  4126ea:	movabs rax,0xffffffffffff
  4126f4:	xor    rbp,r12
  4126f7:	mov    rdi,rbp
  4126fa:	xor    rdi,rdx
  4126fd:	mov    edx,esi
  4126ff:	xor    rdi,rdx
  412702:	mov    rsi,rdi
  412705:	and    rsi,rax
  412708:	cmp    rsi,rbx
  41270b:	je     0x412730
  41270d:	mov    rax,rsi
  412710:	not    rax
  412713:	mov    QWORD PTR [rip+0xb9c6],rsi        # 0x41e0e0
  41271a:	mov    QWORD PTR [rip+0xb9cf],rax        # 0x41e0f0
  412721:	add    rsp,0x40
  412725:	pop    rbx
  412726:	pop    rsi
  412727:	pop    rdi
  412728:	pop    rbp
  412729:	pop    r12
  41272b:	ret    
  41272c:	nop    DWORD PTR [rax+0x0]
  412730:	movabs rax,0xffffd466d2205dcc
  41273a:	movabs rsi,0x2b992ddfa233
  412744:	jmp    0x412713
  412746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412750:	push   rbp
  412751:	push   rsi
  412752:	push   rbx
  412753:	mov    rbp,rsp
  412756:	sub    rsp,0x70
  41275a:	mov    rsi,rcx
  41275d:	lea    rcx,[rip+0x16c9c]        # 0x429400
  412764:	call   QWORD PTR [rip+0x192ea]        # 0x42ba54
  41276a:	mov    rbx,QWORD PTR [rip+0x16d87]        # 0x4294f8
  412771:	xor    r8d,r8d
  412774:	lea    rdx,[rbp-0x28]
  412778:	mov    rcx,rbx
  41277b:	call   QWORD PTR [rip+0x192db]        # 0x42ba5c
  412781:	test   rax,rax
  412784:	mov    r9,rax
  412787:	je     0x412830
  41278d:	lea    rax,[rbp-0x20]
  412791:	mov    QWORD PTR [rsp+0x38],0x0
  41279a:	mov    r8,rbx
  41279d:	mov    rdx,QWORD PTR [rbp-0x28]
  4127a1:	xor    ecx,ecx
  4127a3:	mov    QWORD PTR [rsp+0x30],rax
  4127a8:	lea    rax,[rbp-0x18]
  4127ac:	mov    QWORD PTR [rsp+0x28],rax
  4127b1:	lea    rax,[rip+0x16c48]        # 0x429400
  4127b8:	mov    QWORD PTR [rsp+0x20],rax
  4127bd:	call   QWORD PTR [rip+0x192a1]        # 0x42ba64
  4127c3:	mov    rax,QWORD PTR [rip+0x16d2e]        # 0x4294f8
  4127ca:	xor    ecx,ecx
  4127cc:	mov    QWORD PTR [rip+0x16cad],rsi        # 0x429480
  4127d3:	mov    DWORD PTR [rip+0x17123],0xc0000409        # 0x429900
  4127dd:	mov    DWORD PTR [rip+0x1711d],0x1        # 0x429904
  4127e7:	mov    QWORD PTR [rip+0x17122],rax        # 0x429910
  4127ee:	mov    rax,QWORD PTR [rip+0xb8eb]        # 0x41e0e0
  4127f5:	mov    QWORD PTR [rbp-0x10],rax
  4127f9:	mov    rax,QWORD PTR [rip+0xb8f0]        # 0x41e0f0
  412800:	mov    QWORD PTR [rbp-0x8],rax
  412804:	call   QWORD PTR [rip+0x1926a]        # 0x42ba74
  41280a:	lea    rcx,[rip+0x12aaf]        # 0x4252c0
  412811:	call   QWORD PTR [rip+0x1927d]        # 0x42ba94
  412817:	call   QWORD PTR [rip+0x191a7]        # 0x42b9c4
  41281d:	mov    edx,0xc0000409
  412822:	mov    rcx,rax
  412825:	call   QWORD PTR [rip+0x19259]        # 0x42ba84
  41282b:	call   0x419910
  412830:	mov    rax,QWORD PTR [rbp+0x18]
  412834:	mov    QWORD PTR [rip+0x16cbd],rax        # 0x4294f8
  41283b:	lea    rax,[rbp+0x8]
  41283f:	mov    QWORD PTR [rip+0x16c52],rax        # 0x429498
  412846:	jmp    0x4127c3
  41284b:	nop
  41284c:	nop
  41284d:	nop
  41284e:	nop
  41284f:	nop
  412850:	sub    rsp,0x28
  412854:	test   edx,edx
  412856:	je     0x412870
  412858:	cmp    edx,0x3
  41285b:	je     0x412870
  41285d:	mov    eax,0x1
  412862:	add    rsp,0x28
  412866:	ret    
  412867:	nop    WORD PTR [rax+rax*1+0x0]
  412870:	call   0x413560
  412875:	mov    eax,0x1
  41287a:	add    rsp,0x28
  41287e:	ret    
  41287f:	nop
  412880:	push   rsi
  412881:	push   rbx
  412882:	sub    rsp,0x28
  412886:	mov    rax,QWORD PTR [rip+0x131f3]        # 0x425a80
  41288d:	cmp    DWORD PTR [rax],0x2
  412890:	je     0x412898
  412892:	mov    DWORD PTR [rax],0x2
  412898:	cmp    edx,0x2
  41289b:	je     0x4128b0
  41289d:	cmp    edx,0x1
  4128a0:	je     0x4128e2
  4128a2:	mov    eax,0x1
  4128a7:	add    rsp,0x28
  4128ab:	pop    rbx
  4128ac:	pop    rsi
  4128ad:	ret    
  4128ae:	xchg   ax,ax
  4128b0:	lea    rbx,[rip+0x1b7a9]        # 0x42e060
  4128b7:	lea    rsi,[rip+0x1b7a2]        # 0x42e060
  4128be:	cmp    rbx,rsi
  4128c1:	je     0x4128a2
  4128c3:	mov    rax,QWORD PTR [rbx]
  4128c6:	test   rax,rax
  4128c9:	je     0x4128cd
  4128cb:	call   rax
  4128cd:	add    rbx,0x8
  4128d1:	cmp    rbx,rsi
  4128d4:	jne    0x4128c3
  4128d6:	mov    eax,0x1
  4128db:	add    rsp,0x28
  4128df:	pop    rbx
  4128e0:	pop    rsi
  4128e1:	ret    
  4128e2:	call   0x413560
  4128e7:	jmp    0x4128a2
  4128e9:	nop    DWORD PTR [rax+0x0]
  4128f0:	xor    eax,eax
  4128f2:	ret    
  4128f3:	nop
  4128f4:	nop
  4128f5:	nop
  4128f6:	nop
  4128f7:	nop
  4128f8:	nop
  4128f9:	nop
  4128fa:	nop
  4128fb:	nop
  4128fc:	nop
  4128fd:	nop
  4128fe:	nop
  4128ff:	nop
  412900:	sub    rsp,0x58
  412904:	mov    rax,QWORD PTR [rip+0x170d5]        # 0x4299e0
  41290b:	test   rax,rax
  41290e:	je     0x41293c
  412910:	movsd  xmm0,QWORD PTR [rsp+0x80]
  412919:	mov    DWORD PTR [rsp+0x20],ecx
  41291d:	lea    rcx,[rsp+0x20]
  412922:	mov    QWORD PTR [rsp+0x28],rdx
  412927:	movsd  QWORD PTR [rsp+0x30],xmm2
  41292d:	movsd  QWORD PTR [rsp+0x38],xmm3
  412933:	movsd  QWORD PTR [rsp+0x40],xmm0
  412939:	call   rax
  41293b:	nop
  41293c:	add    rsp,0x58
  412940:	ret    
  412941:	nop    DWORD PTR [rax+rax*1+0x0]
  412946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412950:	mov    QWORD PTR [rip+0x17089],rcx        # 0x4299e0
  412957:	jmp    0x419960
  41295c:	nop    DWORD PTR [rax+0x0]
  412960:	push   rsi
  412961:	push   rbx
  412962:	sub    rsp,0x78
  412966:	movaps XMMWORD PTR [rsp+0x40],xmm6
  41296b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  412970:	movaps XMMWORD PTR [rsp+0x60],xmm8
  412976:	cmp    DWORD PTR [rcx],0x6
  412979:	ja     0x412a50
  41297f:	mov    edx,DWORD PTR [rcx]
  412981:	lea    rax,[rip+0x12a7c]        # 0x425404
  412988:	movsxd rdx,DWORD PTR [rax+rdx*4]
  41298c:	add    rax,rdx
  41298f:	jmp    rax
  412991:	lea    rbx,[rip+0x12948]        # 0x4252e0
  412998:	nop    DWORD PTR [rax+rax*1+0x0]
  4129a0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  4129a6:	mov    rsi,QWORD PTR [rcx+0x8]
  4129aa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  4129af:	movsd  xmm6,QWORD PTR [rcx+0x10]
  4129b4:	call   0x419978
  4129b9:	movsd  QWORD PTR [rsp+0x30],xmm8
  4129c0:	lea    rcx,[rax+0x60]
  4129c4:	lea    rdx,[rip+0x12a0d]        # 0x4253d8
  4129cb:	movsd  QWORD PTR [rsp+0x28],xmm7
  4129d1:	mov    r9,rsi
  4129d4:	mov    r8,rbx
  4129d7:	movsd  QWORD PTR [rsp+0x20],xmm6
  4129dd:	call   0x4198e8
  4129e2:	nop
  4129e3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  4129e8:	xor    eax,eax
  4129ea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  4129ef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  4129f5:	add    rsp,0x78
  4129f9:	pop    rbx
  4129fa:	pop    rsi
  4129fb:	ret    
  4129fc:	nop    DWORD PTR [rax+0x0]
  412a00:	lea    rbx,[rip+0x128f8]        # 0x4252ff
  412a07:	jmp    0x4129a0
  412a09:	nop    DWORD PTR [rax+0x0]
  412a10:	lea    rbx,[rip+0x12909]        # 0x425320
  412a17:	jmp    0x4129a0
  412a19:	nop    DWORD PTR [rax+0x0]
  412a20:	lea    rbx,[rip+0x12969]        # 0x425390
  412a27:	jmp    0x4129a0
  412a2c:	nop    DWORD PTR [rax+0x0]
  412a30:	lea    rbx,[rip+0x12931]        # 0x425368
  412a37:	jmp    0x4129a0
  412a3c:	nop    DWORD PTR [rax+0x0]
  412a40:	lea    rbx,[rip+0x128f9]        # 0x425340
  412a47:	jmp    0x4129a0
  412a4c:	nop    DWORD PTR [rax+0x0]
  412a50:	lea    rbx,[rip+0x1296f]        # 0x4253c6
  412a57:	jmp    0x4129a0
  412a5c:	nop
  412a5d:	nop
  412a5e:	nop
  412a5f:	nop
  412a60:	fninit 
  412a62:	ret    
  412a63:	nop
  412a64:	nop
  412a65:	nop
  412a66:	nop
  412a67:	nop
  412a68:	nop
  412a69:	nop
  412a6a:	nop
  412a6b:	nop
  412a6c:	nop
  412a6d:	nop
  412a6e:	nop
  412a6f:	nop
  412a70:	mov    rax,rcx
  412a73:	ret    
  412a74:	xchg   ax,ax
  412a76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a80:	mov    rax,rcx
  412a83:	ret    
  412a84:	nop
  412a85:	nop
  412a86:	nop
  412a87:	nop
  412a88:	nop
  412a89:	nop
  412a8a:	nop
  412a8b:	nop
  412a8c:	nop
  412a8d:	nop
  412a8e:	nop
  412a8f:	nop
  412a90:	push   rsi
  412a91:	push   rbx
  412a92:	sub    rsp,0x38
  412a96:	lea    rax,[rsp+0x58]
  412a9b:	mov    rbx,rcx
  412a9e:	mov    QWORD PTR [rsp+0x58],rdx
  412aa3:	mov    QWORD PTR [rsp+0x60],r8
  412aa8:	mov    QWORD PTR [rsp+0x68],r9
  412aad:	mov    QWORD PTR [rsp+0x28],rax
  412ab2:	call   0x419978
  412ab7:	lea    rcx,[rip+0x12962]        # 0x425420
  412abe:	lea    r9,[rax+0x60]
  412ac2:	mov    r8d,0x1b
  412ac8:	mov    edx,0x1
  412acd:	call   0x4198c8
  412ad2:	mov    rsi,QWORD PTR [rsp+0x28]
  412ad7:	call   0x419978
  412adc:	lea    rcx,[rax+0x60]
  412ae0:	mov    rdx,rbx
  412ae3:	mov    r8,rsi
  412ae6:	call   0x419808
  412aeb:	call   0x419910
  412af0:	nop
  412af1:	nop    DWORD PTR [rax+rax*1+0x0]
  412af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b00:	push   r13
  412b02:	push   r12
  412b04:	push   rbp
  412b05:	push   rdi
  412b06:	push   rsi
  412b07:	push   rbx
  412b08:	sub    rsp,0x58
  412b0c:	movsxd rbp,DWORD PTR [rip+0x16ef1]        # 0x429a04
  412b13:	mov    rbx,rcx
  412b16:	mov    rsi,rdx
  412b19:	mov    rdi,r8
  412b1c:	test   ebp,ebp
  412b1e:	jle    0x412c1a
  412b24:	mov    rax,QWORD PTR [rip+0x16edd]        # 0x429a08
  412b2b:	xor    r9d,r9d
  412b2e:	add    rax,0x8
  412b32:	mov    r10,QWORD PTR [rax]
  412b35:	cmp    rbx,r10
  412b38:	jb     0x412b4e
  412b3a:	mov    rdx,QWORD PTR [rax+0x8]
  412b3e:	mov    r11d,DWORD PTR [rdx+0x8]
  412b42:	add    r10,r11
  412b45:	cmp    rbx,r10
  412b48:	jb     0x412c00
  412b4e:	add    r9d,0x1
  412b52:	add    rax,0x18
  412b56:	cmp    r9d,ebp
  412b59:	jne    0x412b32
  412b5b:	mov    rcx,rbx
  412b5e:	call   0x413770
  412b63:	test   rax,rax
  412b66:	mov    r12,rax
  412b69:	je     0x412c52
  412b6f:	lea    rbp,[rbp+rbp*2+0x0]
  412b74:	shl    rbp,0x3
  412b78:	mov    r13,rbp
  412b7b:	add    r13,QWORD PTR [rip+0x16e86]        # 0x429a08
  412b82:	mov    QWORD PTR [r13+0x10],rax
  412b86:	mov    DWORD PTR [r13+0x0],0x0
  412b8e:	call   0x413890
  412b93:	mov    edx,DWORD PTR [r12+0xc]
  412b98:	mov    r8d,0x30
  412b9e:	add    rax,rdx
  412ba1:	lea    rdx,[rsp+0x20]
  412ba6:	mov    QWORD PTR [r13+0x8],rax
  412baa:	mov    rax,QWORD PTR [rip+0x16e57]        # 0x429a08
  412bb1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  412bb6:	call   QWORD PTR [rip+0x18ee8]        # 0x42baa4
  412bbc:	test   rax,rax
  412bbf:	je     0x412c35
  412bc1:	mov    eax,DWORD PTR [rsp+0x44]
  412bc5:	lea    edx,[rax-0x4]
  412bc8:	and    edx,0xfffffffb
  412bcb:	je     0x412bf9
  412bcd:	sub    eax,0x40
  412bd0:	and    eax,0xffffffbf
  412bd3:	je     0x412bf9
  412bd5:	mov    r9,rbp
  412bd8:	add    r9,QWORD PTR [rip+0x16e29]        # 0x429a08
  412bdf:	mov    r8d,0x40
  412be5:	mov    rdx,QWORD PTR [rsp+0x38]
  412bea:	mov    rcx,QWORD PTR [rsp+0x20]
  412bef:	call   QWORD PTR [rip+0x18ea7]        # 0x42ba9c
  412bf5:	test   eax,eax
  412bf7:	je     0x412c21
  412bf9:	add    DWORD PTR [rip+0x16e04],0x1        # 0x429a04
  412c00:	mov    r8,rdi
  412c03:	mov    rdx,rsi
  412c06:	mov    rcx,rbx
  412c09:	add    rsp,0x58
  412c0d:	pop    rbx
  412c0e:	pop    rsi
  412c0f:	pop    rdi
  412c10:	pop    rbp
  412c11:	pop    r12
  412c13:	pop    r13
  412c15:	jmp    0x419880
  412c1a:	xor    ebp,ebp
  412c1c:	jmp    0x412b5b
  412c21:	call   QWORD PTR [rip+0x18db5]        # 0x42b9dc
  412c27:	lea    rcx,[rip+0x1286a]        # 0x425498
  412c2e:	mov    edx,eax
  412c30:	call   0x412a90
  412c35:	mov    rax,QWORD PTR [rip+0x16dcc]        # 0x429a08
  412c3c:	mov    edx,DWORD PTR [r12+0x8]
  412c41:	lea    rcx,[rip+0x12818]        # 0x425460
  412c48:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  412c4d:	call   0x412a90
  412c52:	lea    rcx,[rip+0x127e7]        # 0x425440
  412c59:	mov    rdx,rbx
  412c5c:	call   0x412a90
  412c61:	nop
  412c62:	nop    DWORD PTR [rax+0x0]
  412c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412c70:	push   rbp
  412c71:	push   r14
  412c73:	push   r13
  412c75:	push   r12
  412c77:	push   rdi
  412c78:	push   rsi
  412c79:	push   rbx
  412c7a:	mov    rbp,rsp
  412c7d:	sub    rsp,0x60
  412c81:	mov    ebx,DWORD PTR [rip+0x16d79]        # 0x429a00
  412c87:	test   ebx,ebx
  412c89:	je     0x412ca0
  412c8b:	mov    rsp,rbp
  412c8e:	pop    rbx
  412c8f:	pop    rsi
  412c90:	pop    rdi
  412c91:	pop    r12
  412c93:	pop    r13
  412c95:	pop    r14
  412c97:	pop    rbp
  412c98:	ret    
  412c99:	nop    DWORD PTR [rax+0x0]
  412ca0:	mov    DWORD PTR [rip+0x16d56],0x1        # 0x429a00
  412caa:	call   0x4137c0
  412caf:	cdqe   
  412cb1:	lea    rax,[rax+rax*2]
  412cb5:	lea    rax,[rax*8+0x1e]
  412cbd:	and    rax,0xfffffffffffffff0
  412cc1:	call   0x4139f0
  412cc6:	mov    rsi,QWORD PTR [rip+0x12de3]        # 0x425ab0
  412ccd:	mov    rbx,QWORD PTR [rip+0x12dec]        # 0x425ac0
  412cd4:	sub    rsp,rax
  412cd7:	mov    DWORD PTR [rip+0x16d23],0x0        # 0x429a04
  412ce1:	lea    rax,[rsp+0x20]
  412ce6:	mov    QWORD PTR [rip+0x16d1b],rax        # 0x429a08
  412ced:	mov    rax,rsi
  412cf0:	sub    rax,rbx
  412cf3:	cmp    rax,0x7
  412cf7:	jle    0x412c8b
  412cf9:	cmp    rax,0xb
  412cfd:	jle    0x412d25
  412cff:	mov    r11d,DWORD PTR [rbx]
  412d02:	test   r11d,r11d
  412d05:	jne    0x412e50
  412d0b:	mov    r10d,DWORD PTR [rbx+0x4]
  412d0f:	test   r10d,r10d
  412d12:	jne    0x412e50
  412d18:	mov    r9d,DWORD PTR [rbx+0x8]
  412d1c:	test   r9d,r9d
  412d1f:	jne    0x412d3c
  412d21:	add    rbx,0xc
  412d25:	mov    r8d,DWORD PTR [rbx]
  412d28:	test   r8d,r8d
  412d2b:	jne    0x412e50
  412d31:	mov    ecx,DWORD PTR [rbx+0x4]
  412d34:	test   ecx,ecx
  412d36:	jne    0x412e50
  412d3c:	mov    edx,DWORD PTR [rbx+0x8]
  412d3f:	cmp    edx,0x1
  412d42:	jne    0x412f5c
  412d48:	add    rbx,0xc
  412d4c:	cmp    rbx,rsi
  412d4f:	jae    0x412c8b
  412d55:	mov    r12,QWORD PTR [rip+0x12d84]        # 0x425ae0
  412d5c:	lea    r13,[rbp-0x30]
  412d60:	movabs r14,0xffffffff00000000
  412d6a:	mov    ecx,DWORD PTR [rbx+0x4]
  412d6d:	mov    eax,DWORD PTR [rbx]
  412d6f:	movzx  edx,BYTE PTR [rbx+0x8]
  412d73:	add    rax,r12
  412d76:	add    rcx,r12
  412d79:	cmp    edx,0x10
  412d7c:	mov    r8,QWORD PTR [rax]
  412d7f:	je     0x412ec6
  412d85:	jbe    0x412e8d
  412d8b:	cmp    edx,0x20
  412d8e:	je     0x412f0f
  412d94:	cmp    edx,0x40
  412d97:	jne    0x412efb
  412d9d:	sub    r8,rax
  412da0:	mov    rdx,r13
  412da3:	mov    rdi,r13
  412da6:	mov    rax,r8
  412da9:	add    rax,QWORD PTR [rcx]
  412dac:	mov    r8d,0x8
  412db2:	mov    QWORD PTR [rbp-0x30],rax
  412db6:	call   0x412b00
  412dbb:	add    rbx,0xc
  412dbf:	cmp    rbx,rsi
  412dc2:	jb     0x412d6a
  412dc4:	mov    eax,DWORD PTR [rip+0x16c3a]        # 0x429a04
  412dca:	xor    ebx,ebx
  412dcc:	xor    esi,esi
  412dce:	test   eax,eax
  412dd0:	jle    0x412c8b
  412dd6:	mov    r14,QWORD PTR [rip+0x18cc7]        # 0x42baa4
  412ddd:	lea    r13,[rbp-0x34]
  412de1:	mov    r12,QWORD PTR [rip+0x18cb4]        # 0x42ba9c
  412de8:	jmp    0x412e03
  412dea:	nop    WORD PTR [rax+rax*1+0x0]
  412df0:	add    esi,0x1
  412df3:	add    rbx,0x18
  412df7:	cmp    esi,DWORD PTR [rip+0x16c07]        # 0x429a04
  412dfd:	jge    0x412c8b
  412e03:	mov    rax,rbx
  412e06:	add    rax,QWORD PTR [rip+0x16bfb]        # 0x429a08
  412e0d:	mov    edx,DWORD PTR [rax]
  412e0f:	test   edx,edx
  412e11:	je     0x412df0
  412e13:	mov    rcx,QWORD PTR [rax+0x8]
  412e17:	mov    r8d,0x30
  412e1d:	mov    rdx,rdi
  412e20:	call   r14
  412e23:	test   rax,rax
  412e26:	je     0x412f3e
  412e2c:	mov    rax,QWORD PTR [rip+0x16bd5]        # 0x429a08
  412e33:	mov    r9,r13
  412e36:	mov    rdx,QWORD PTR [rbp-0x18]
  412e3a:	mov    rcx,QWORD PTR [rbp-0x30]
  412e3e:	mov    r8d,DWORD PTR [rax+rbx*1]
  412e42:	call   r12
  412e45:	jmp    0x412df0
  412e47:	nop    WORD PTR [rax+rax*1+0x0]
  412e50:	cmp    rbx,rsi
  412e53:	jae    0x412c8b
  412e59:	mov    r12,QWORD PTR [rip+0x12c80]        # 0x425ae0
  412e60:	lea    rdi,[rbp-0x30]
  412e64:	mov    ecx,DWORD PTR [rbx+0x4]
  412e67:	mov    eax,DWORD PTR [rbx]
  412e69:	mov    r8d,0x4
  412e6f:	mov    rdx,rdi
  412e72:	add    rbx,0x8
  412e76:	add    rcx,r12
  412e79:	add    eax,DWORD PTR [rcx]
  412e7b:	mov    DWORD PTR [rbp-0x30],eax
  412e7e:	call   0x412b00
  412e83:	cmp    rbx,rsi
  412e86:	jb     0x412e64
  412e88:	jmp    0x412dc4
  412e8d:	cmp    edx,0x8
  412e90:	jne    0x412efb
  412e92:	movzx  edx,BYTE PTR [rcx]
  412e95:	mov    rdi,r13
  412e98:	mov    r10,rdx
  412e9b:	or     r10,0xffffffffffffff00
  412ea2:	test   dl,dl
  412ea4:	cmovs  rdx,r10
  412ea8:	sub    rdx,rax
  412eab:	lea    rax,[r8+rdx*1]
  412eaf:	mov    r8d,0x1
  412eb5:	mov    rdx,r13
  412eb8:	mov    QWORD PTR [rbp-0x30],rax
  412ebc:	call   0x412b00
  412ec1:	jmp    0x412dbb
  412ec6:	movzx  edx,WORD PTR [rcx]
  412ec9:	mov    rdi,r13
  412ecc:	mov    r10,rdx
  412ecf:	or     r10,0xffffffffffff0000
  412ed6:	test   dx,dx
  412ed9:	cmovs  rdx,r10
  412edd:	sub    rdx,rax
  412ee0:	lea    rax,[r8+rdx*1]
  412ee4:	mov    r8d,0x2
  412eea:	mov    rdx,r13
  412eed:	mov    QWORD PTR [rbp-0x30],rax
  412ef1:	call   0x412b00
  412ef6:	jmp    0x412dbb
  412efb:	lea    rcx,[rip+0x125f6]        # 0x4254f8
  412f02:	mov    QWORD PTR [rbp-0x30],0x0
  412f0a:	call   0x412a90
  412f0f:	mov    edx,DWORD PTR [rcx]
  412f11:	mov    rdi,r13
  412f14:	mov    r10,rdx
  412f17:	or     r10,r14
  412f1a:	test   edx,edx
  412f1c:	cmovs  rdx,r10
  412f20:	sub    rdx,rax
  412f23:	lea    rax,[r8+rdx*1]
  412f27:	mov    r8d,0x4
  412f2d:	mov    rdx,r13
  412f30:	mov    QWORD PTR [rbp-0x30],rax
  412f34:	call   0x412b00
  412f39:	jmp    0x412dbb
  412f3e:	add    rbx,QWORD PTR [rip+0x16ac3]        # 0x429a08
  412f45:	lea    rcx,[rip+0x12514]        # 0x425460
  412f4c:	mov    rax,QWORD PTR [rbx+0x10]
  412f50:	mov    r8,QWORD PTR [rbx+0x8]
  412f54:	mov    edx,DWORD PTR [rax+0x8]
  412f57:	call   0x412a90
  412f5c:	lea    rcx,[rip+0x1255d]        # 0x4254c0
  412f63:	call   0x412a90
  412f68:	nop
  412f69:	nop
  412f6a:	nop
  412f6b:	nop
  412f6c:	nop
  412f6d:	nop
  412f6e:	nop
  412f6f:	nop
  412f70:	sub    rsp,0x28
  412f74:	mov    eax,DWORD PTR [rcx]
  412f76:	cmp    eax,0xc0000091
  412f7b:	ja     0x412fe0
  412f7d:	cmp    eax,0xc000008d
  412f82:	jae    0x412fff
  412f84:	cmp    eax,0xc0000008
  412f89:	je     0x4130a0
  412f8f:	ja     0x413070
  412f95:	cmp    eax,0x80000002
  412f9a:	je     0x4130a0
  412fa0:	cmp    eax,0xc0000005
  412fa5:	jne    0x41307e
  412fab:	xor    edx,edx
  412fad:	mov    ecx,0xb
  412fb2:	call   0x419868
  412fb7:	cmp    rax,0x1
  412fbb:	je     0x413100
  412fc1:	test   rax,rax
  412fc4:	je     0x4130e0
  412fca:	mov    ecx,0xb
  412fcf:	call   rax
  412fd1:	xor    eax,eax
  412fd3:	add    rsp,0x28
  412fd7:	ret    
  412fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  412fe0:	cmp    eax,0xc0000094
  412fe5:	je     0x4130b0
  412feb:	ja     0x413030
  412fed:	cmp    eax,0xc0000092
  412ff2:	je     0x4130a0
  412ff8:	cmp    eax,0xc0000093
  412ffd:	jne    0x41307e
  412fff:	xor    edx,edx
  413001:	mov    ecx,0x8
  413006:	call   0x419868
  41300b:	cmp    rax,0x1
  41300f:	mov    rdx,rax
  413012:	je     0x413088
  413014:	test   rdx,rdx
  413017:	mov    eax,0x1
  41301c:	je     0x412fd3
  41301e:	mov    ecx,0x8
  413023:	call   rdx
  413025:	xor    eax,eax
  413027:	add    rsp,0x28
  41302b:	ret    
  41302c:	nop    DWORD PTR [rax+0x0]
  413030:	cmp    eax,0xc0000095
  413035:	je     0x4130a0
  413037:	cmp    eax,0xc0000096
  41303c:	jne    0x41307e
  41303e:	xor    edx,edx
  413040:	mov    ecx,0x4
  413045:	call   0x419868
  41304a:	cmp    rax,0x1
  41304e:	je     0x4130ea
  413054:	test   rax,rax
  413057:	je     0x4130e0
  41305d:	mov    ecx,0x4
  413062:	call   rax
  413064:	xor    eax,eax
  413066:	jmp    0x412fd3
  41306b:	nop    DWORD PTR [rax+rax*1+0x0]
  413070:	cmp    eax,0xc000001d
  413075:	je     0x41303e
  413077:	cmp    eax,0xc000008c
  41307c:	je     0x4130a0
  41307e:	mov    eax,0x1
  413083:	add    rsp,0x28
  413087:	ret    
  413088:	mov    edx,0x1
  41308d:	mov    ecx,0x8
  413092:	call   0x419868
  413097:	call   0x412a60
  41309c:	nop    DWORD PTR [rax+0x0]
  4130a0:	xor    eax,eax
  4130a2:	add    rsp,0x28
  4130a6:	ret    
  4130a7:	nop    WORD PTR [rax+rax*1+0x0]
  4130b0:	xor    edx,edx
  4130b2:	mov    ecx,0x8
  4130b7:	call   0x419868
  4130bc:	cmp    rax,0x1
  4130c0:	mov    rdx,rax
  4130c3:	jne    0x413014
  4130c9:	mov    edx,0x1
  4130ce:	mov    ecx,0x8
  4130d3:	call   0x419868
  4130d8:	xor    eax,eax
  4130da:	jmp    0x412fd3
  4130df:	nop
  4130e0:	mov    eax,0x4
  4130e5:	add    rsp,0x28
  4130e9:	ret    
  4130ea:	mov    edx,0x1
  4130ef:	mov    ecx,0x4
  4130f4:	call   0x419868
  4130f9:	xor    eax,eax
  4130fb:	jmp    0x412fd3
  413100:	mov    edx,0x1
  413105:	mov    ecx,0xb
  41310a:	call   0x419868
  41310f:	xor    eax,eax
  413111:	jmp    0x412fd3
  413116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413120:	push   r12
  413122:	push   rbp
  413123:	push   rdi
  413124:	push   rsi
  413125:	push   rbx
  413126:	sub    rsp,0x20
  41312a:	call   0x413890
  41312f:	mov    rbp,rax
  413132:	mov    eax,DWORD PTR [rip+0x16910]        # 0x429a48
  413138:	test   eax,eax
  41313a:	jne    0x413161
  41313c:	test   rbp,rbp
  41313f:	je     0x413161
  413141:	lea    rcx,[rip+0x123e8]        # 0x425530
  413148:	mov    DWORD PTR [rip+0x168f6],0x1        # 0x429a48
  413152:	call   0x4136d0
  413157:	test   rax,rax
  41315a:	je     0x413170
  41315c:	mov    eax,0x1
  413161:	add    rsp,0x20
  413165:	pop    rbx
  413166:	pop    rsi
  413167:	pop    rdi
  413168:	pop    rbp
  413169:	pop    r12
  41316b:	ret    
  41316c:	nop    DWORD PTR [rax+0x0]
  413170:	lea    rbx,[rip+0x16a09]        # 0x429b80
  413177:	mov    ecx,0x30
  41317c:	lea    rdx,[rip+0x168fd]        # 0x429a80
  413183:	lea    r12,[rip+0xfffffffffffffde6]        # 0x412f70
  41318a:	xor    esi,esi
  41318c:	mov    rdi,rbx
  41318f:	rep stos QWORD PTR es:[rdi],rax
  413192:	mov    rdi,rdx
  413195:	sub    r12,rbp
  413198:	mov    cl,0x20
  41319a:	rep stos QWORD PTR es:[rdi],rax
  41319d:	mov    rdi,rdx
  4131a0:	jmp    0x4131d0
  4131a2:	mov    BYTE PTR [rdi],0x9
  4131a5:	mov    DWORD PTR [rdi+0x4],r12d
  4131a9:	add    rsi,0x1
  4131ad:	mov    edx,DWORD PTR [rax+0xc]
  4131b0:	add    rbx,0xc
  4131b4:	mov    DWORD PTR [rbx-0xc],edx
  4131b7:	add    edx,DWORD PTR [rax+0x8]
  4131ba:	mov    rax,rdi
  4131bd:	sub    rax,rbp
  4131c0:	add    rdi,0x8
  4131c4:	mov    DWORD PTR [rbx-0x4],eax
  4131c7:	mov    DWORD PTR [rbx-0x8],edx
  4131ca:	cmp    rsi,0x20
  4131ce:	je     0x413205
  4131d0:	mov    rcx,rsi
  4131d3:	call   0x413800
  4131d8:	test   rax,rax
  4131db:	jne    0x4131a2
  4131dd:	test   rsi,rsi
  4131e0:	je     0x41315c
  4131e6:	mov    edx,esi
  4131e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4131f0:	mov    r8,rbp
  4131f3:	lea    rcx,[rip+0x16986]        # 0x429b80
  4131fa:	call   QWORD PTR [rip+0x1884c]        # 0x42ba4c
  413200:	jmp    0x41315c
  413205:	mov    edx,0x20
  41320a:	jmp    0x4131f0
  41320c:	nop    DWORD PTR [rax+0x0]
  413210:	push   rbx
  413211:	sub    rsp,0x20
  413215:	mov    rdx,QWORD PTR [rcx]
  413218:	mov    eax,DWORD PTR [rdx]
  41321a:	mov    r8d,eax
  41321d:	and    r8d,0x20ffffff
  413224:	cmp    r8d,0x20474343
  41322b:	je     0x413330
  413231:	cmp    eax,0xc0000091
  413236:	mov    rbx,rcx
  413239:	ja     0x4132c0
  41323f:	cmp    eax,0xc000008d
  413244:	jae    0x4132d7
  41324a:	cmp    eax,0xc0000008
  41324f:	je     0x413283
  413251:	ja     0x413290
  413253:	cmp    eax,0x80000002
  413258:	je     0x413283
  41325a:	cmp    eax,0xc0000005
  41325f:	jne    0x4132a2
  413261:	xor    edx,edx
  413263:	mov    ecx,0xb
  413268:	call   0x419868
  41326d:	cmp    rax,0x1
  413271:	je     0x4133a0
  413277:	test   rax,rax
  41327a:	je     0x4132a2
  41327c:	mov    ecx,0xb
  413281:	call   rax
  413283:	mov    eax,0xffffffff
  413288:	add    rsp,0x20
  41328c:	pop    rbx
  41328d:	ret    
  41328e:	xchg   ax,ax
  413290:	cmp    eax,0xc000001d
  413295:	je     0x413356
  41329b:	cmp    eax,0xc000008c
  4132a0:	je     0x413283
  4132a2:	mov    rax,QWORD PTR [rip+0x16797]        # 0x429a40
  4132a9:	test   rax,rax
  4132ac:	je     0x413288
  4132ae:	mov    rcx,rbx
  4132b1:	add    rsp,0x20
  4132b5:	pop    rbx
  4132b6:	rex.W jmp rax
  4132b9:	nop    DWORD PTR [rax+0x0]
  4132c0:	cmp    eax,0xc0000094
  4132c5:	je     0x413302
  4132c7:	ja     0x413340
  4132c9:	cmp    eax,0xc0000092
  4132ce:	je     0x413283
  4132d0:	cmp    eax,0xc0000093
  4132d5:	jne    0x4132a2
  4132d7:	xor    edx,edx
  4132d9:	mov    ecx,0x8
  4132de:	call   0x419868
  4132e3:	cmp    rax,0x1
  4132e7:	jne    0x413314
  4132e9:	mov    edx,0x1
  4132ee:	mov    ecx,0x8
  4132f3:	call   0x419868
  4132f8:	call   0x412a60
  4132fd:	jmp    0x413283
  413302:	xor    edx,edx
  413304:	mov    ecx,0x8
  413309:	call   0x419868
  41330e:	cmp    rax,0x1
  413312:	je     0x413382
  413314:	test   rax,rax
  413317:	je     0x4132a2
  413319:	mov    ecx,0x8
  41331e:	call   rax
  413320:	mov    eax,0xffffffff
  413325:	jmp    0x413288
  41332a:	nop    WORD PTR [rax+rax*1+0x0]
  413330:	test   BYTE PTR [rdx+0x4],0x1
  413334:	jne    0x413231
  41333a:	jmp    0x413283
  41333f:	nop
  413340:	cmp    eax,0xc0000095
  413345:	je     0x413283
  41334b:	cmp    eax,0xc0000096
  413350:	jne    0x4132a2
  413356:	xor    edx,edx
  413358:	mov    ecx,0x4
  41335d:	call   0x419868
  413362:	cmp    rax,0x1
  413366:	je     0x4133b4
  413368:	test   rax,rax
  41336b:	je     0x4132a2
  413371:	mov    ecx,0x4
  413376:	call   rax
  413378:	mov    eax,0xffffffff
  41337d:	jmp    0x413288
  413382:	mov    edx,0x1
  413387:	mov    ecx,0x8
  41338c:	call   0x419868
  413391:	jmp    0x413283
  413396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4133a0:	mov    edx,0x1
  4133a5:	mov    ecx,0xb
  4133aa:	call   0x419868
  4133af:	jmp    0x413283
  4133b4:	mov    edx,0x1
  4133b9:	mov    ecx,0x4
  4133be:	call   0x419868
  4133c3:	jmp    0x413283
  4133c8:	nop
  4133c9:	nop
  4133ca:	nop
  4133cb:	nop
  4133cc:	nop
  4133cd:	nop
  4133ce:	nop
  4133cf:	nop
  4133d0:	push   rbp
  4133d1:	push   rdi
  4133d2:	push   rsi
  4133d3:	push   rbx
  4133d4:	sub    rsp,0x28
  4133d8:	lea    rcx,[rip+0x16941]        # 0x429d20
  4133df:	call   QWORD PTR [rip+0x185cf]        # 0x42b9b4
  4133e5:	mov    rbx,QWORD PTR [rip+0x16914]        # 0x429d00
  4133ec:	test   rbx,rbx
  4133ef:	je     0x413424
  4133f1:	mov    rbp,QWORD PTR [rip+0x18694]        # 0x42ba8c
  4133f8:	mov    rdi,QWORD PTR [rip+0x185dd]        # 0x42b9dc
  4133ff:	nop
  413400:	mov    ecx,DWORD PTR [rbx]
  413402:	call   rbp
  413404:	mov    rsi,rax
  413407:	call   rdi
  413409:	test   eax,eax
  41340b:	jne    0x41341b
  41340d:	test   rsi,rsi
  413410:	je     0x41341b
  413412:	mov    rax,QWORD PTR [rbx+0x8]
  413416:	mov    rcx,rsi
  413419:	call   rax
  41341b:	mov    rbx,QWORD PTR [rbx+0x10]
  41341f:	test   rbx,rbx
  413422:	jne    0x413400
  413424:	mov    rax,QWORD PTR [rip+0x18601]        # 0x42ba2c
  41342b:	lea    rcx,[rip+0x168ee]        # 0x429d20
  413432:	add    rsp,0x28
  413436:	pop    rbx
  413437:	pop    rsi
  413438:	pop    rdi
  413439:	pop    rbp
  41343a:	rex.W jmp rax
  41343d:	nop    DWORD PTR [rax]
  413440:	push   rdi
  413441:	push   rsi
  413442:	push   rbx
  413443:	sub    rsp,0x20
  413447:	mov    eax,DWORD PTR [rip+0x168bb]        # 0x429d08
  41344d:	test   eax,eax
  41344f:	jne    0x413460
  413451:	add    rsp,0x20
  413455:	pop    rbx
  413456:	pop    rsi
  413457:	pop    rdi
  413458:	ret    
  413459:	nop    DWORD PTR [rax+0x0]
  413460:	mov    rsi,rdx
  413463:	mov    edi,ecx
  413465:	mov    edx,0x18
  41346a:	mov    ecx,0x1
  41346f:	call   0x419908
  413474:	test   rax,rax
  413477:	mov    rbx,rax
  41347a:	je     0x4134b8
  41347c:	mov    DWORD PTR [rax],edi
  41347e:	mov    QWORD PTR [rax+0x8],rsi
  413482:	lea    rcx,[rip+0x16897]        # 0x429d20
  413489:	call   QWORD PTR [rip+0x18525]        # 0x42b9b4
  41348f:	mov    rax,QWORD PTR [rip+0x1686a]        # 0x429d00
  413496:	lea    rcx,[rip+0x16883]        # 0x429d20
  41349d:	mov    QWORD PTR [rip+0x1685c],rbx        # 0x429d00
  4134a4:	mov    QWORD PTR [rbx+0x10],rax
  4134a8:	call   QWORD PTR [rip+0x1857e]        # 0x42ba2c
  4134ae:	xor    eax,eax
  4134b0:	add    rsp,0x20
  4134b4:	pop    rbx
  4134b5:	pop    rsi
  4134b6:	pop    rdi
  4134b7:	ret    
  4134b8:	mov    eax,0xffffffff
  4134bd:	jmp    0x413451
  4134bf:	nop
  4134c0:	push   rbx
  4134c1:	sub    rsp,0x20
  4134c5:	mov    eax,DWORD PTR [rip+0x1683d]        # 0x429d08
  4134cb:	test   eax,eax
  4134cd:	jne    0x4134e0
  4134cf:	xor    eax,eax
  4134d1:	add    rsp,0x20
  4134d5:	pop    rbx
  4134d6:	ret    
  4134d7:	nop    WORD PTR [rax+rax*1+0x0]
  4134e0:	mov    ebx,ecx
  4134e2:	lea    rcx,[rip+0x16837]        # 0x429d20
  4134e9:	call   QWORD PTR [rip+0x184c5]        # 0x42b9b4
  4134ef:	mov    rdx,QWORD PTR [rip+0x1680a]        # 0x429d00
  4134f6:	test   rdx,rdx
  4134f9:	je     0x413517
  4134fb:	mov    eax,DWORD PTR [rdx]
  4134fd:	cmp    eax,ebx
  4134ff:	jne    0x41350e
  413501:	jmp    0x41354f
  413503:	mov    r8d,DWORD PTR [rax]
  413506:	cmp    r8d,ebx
  413509:	je     0x413530
  41350b:	mov    rdx,rax
  41350e:	mov    rax,QWORD PTR [rdx+0x10]
  413512:	test   rax,rax
  413515:	jne    0x413503
  413517:	lea    rcx,[rip+0x16802]        # 0x429d20
  41351e:	call   QWORD PTR [rip+0x18508]        # 0x42ba2c
  413524:	xor    eax,eax
  413526:	add    rsp,0x20
  41352a:	pop    rbx
  41352b:	ret    
  41352c:	nop    DWORD PTR [rax+0x0]
  413530:	mov    rcx,rax
  413533:	mov    rax,QWORD PTR [rax+0x10]
  413537:	mov    QWORD PTR [rdx+0x10],rax
  41353b:	call   0x4198d0
  413540:	lea    rcx,[rip+0x167d9]        # 0x429d20
  413547:	call   QWORD PTR [rip+0x184df]        # 0x42ba2c
  41354d:	jmp    0x413524
  41354f:	mov    rax,QWORD PTR [rdx+0x10]
  413553:	mov    rcx,rdx
  413556:	mov    QWORD PTR [rip+0x167a3],rax        # 0x429d00
  41355d:	jmp    0x41353b
  41355f:	nop
  413560:	push   rbx
  413561:	sub    rsp,0x20
  413565:	cmp    edx,0x1
  413568:	je     0x413600
  41356e:	jb     0x4135a0
  413570:	cmp    edx,0x2
  413573:	je     0x413590
  413575:	cmp    edx,0x3
  413578:	jne    0x413595
  41357a:	mov    eax,DWORD PTR [rip+0x16788]        # 0x429d08
  413580:	test   eax,eax
  413582:	je     0x413595
  413584:	call   0x4133d0
  413589:	jmp    0x413595
  41358b:	nop    DWORD PTR [rax+rax*1+0x0]
  413590:	call   0x412a60
  413595:	mov    eax,0x1
  41359a:	add    rsp,0x20
  41359e:	pop    rbx
  41359f:	ret    
  4135a0:	mov    eax,DWORD PTR [rip+0x16762]        # 0x429d08
  4135a6:	test   eax,eax
  4135a8:	jne    0x413630
  4135ae:	mov    eax,DWORD PTR [rip+0x16754]        # 0x429d08
  4135b4:	cmp    eax,0x1
  4135b7:	jne    0x413595
  4135b9:	mov    rcx,QWORD PTR [rip+0x16740]        # 0x429d00
  4135c0:	test   rcx,rcx
  4135c3:	je     0x4135d6
  4135c5:	mov    rbx,QWORD PTR [rcx+0x10]
  4135c9:	call   0x4198d0
  4135ce:	test   rbx,rbx
  4135d1:	mov    rcx,rbx
  4135d4:	jne    0x4135c5
  4135d6:	lea    rcx,[rip+0x16743]        # 0x429d20
  4135dd:	mov    QWORD PTR [rip+0x16718],0x0        # 0x429d00
  4135e8:	mov    DWORD PTR [rip+0x16716],0x0        # 0x429d08
  4135f2:	call   QWORD PTR [rip+0x183b4]        # 0x42b9ac
  4135f8:	jmp    0x413595
  4135fa:	nop    WORD PTR [rax+rax*1+0x0]
  413600:	mov    eax,DWORD PTR [rip+0x16702]        # 0x429d08
  413606:	test   eax,eax
  413608:	je     0x413620
  41360a:	mov    eax,0x1
  41360f:	mov    DWORD PTR [rip+0x166ef],0x1        # 0x429d08
  413619:	add    rsp,0x20
  41361d:	pop    rbx
  41361e:	ret    
  41361f:	nop
  413620:	lea    rcx,[rip+0x166f9]        # 0x429d20
  413627:	call   QWORD PTR [rip+0x183ef]        # 0x42ba1c
  41362d:	jmp    0x41360a
  41362f:	nop
  413630:	call   0x4133d0
  413635:	jmp    0x4135ae
  41363a:	nop
  41363b:	nop
  41363c:	nop
  41363d:	nop
  41363e:	nop
  41363f:	nop
  413640:	movsxd rax,DWORD PTR [rcx+0x3c]
  413644:	add    rcx,rax
  413647:	xor    eax,eax
  413649:	cmp    DWORD PTR [rcx],0x4550
  41364f:	je     0x413653
  413651:	repz ret 
  413653:	xor    eax,eax
  413655:	cmp    WORD PTR [rcx+0x18],0x20b
  41365b:	sete   al
  41365e:	ret    
  41365f:	nop
  413660:	cmp    WORD PTR [rcx],0x5a4d
  413665:	je     0x413670
  413667:	xor    eax,eax
  413669:	ret    
  41366a:	nop    WORD PTR [rax+rax*1+0x0]
  413670:	jmp    0x413640
  413672:	nop    DWORD PTR [rax+0x0]
  413676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413680:	movsxd rax,DWORD PTR [rcx+0x3c]
  413684:	add    rcx,rax
  413687:	movzx  eax,WORD PTR [rcx+0x14]
  41368b:	lea    rax,[rcx+rax*1+0x18]
  413690:	movzx  ecx,WORD PTR [rcx+0x6]
  413694:	test   ecx,ecx
  413696:	je     0x4136c1
  413698:	sub    ecx,0x1
  41369b:	lea    rcx,[rcx+rcx*4]
  41369f:	lea    r9,[rax+rcx*8+0x28]
  4136a4:	mov    r8d,DWORD PTR [rax+0xc]
  4136a8:	cmp    r8,rdx
  4136ab:	mov    rcx,r8
  4136ae:	ja     0x4136b8
  4136b0:	add    ecx,DWORD PTR [rax+0x8]
  4136b3:	cmp    rdx,rcx
  4136b6:	jb     0x4136c3
  4136b8:	add    rax,0x28
  4136bc:	cmp    rax,r9
  4136bf:	jne    0x4136a4
  4136c1:	xor    eax,eax
  4136c3:	repz ret 
  4136c5:	nop
  4136c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4136d0:	push   rdi
  4136d1:	push   rsi
  4136d2:	push   rbx
  4136d3:	sub    rsp,0x20
  4136d7:	mov    rsi,rcx
  4136da:	call   0x419840
  4136df:	cmp    rax,0x8
  4136e3:	ja     0x413700
  4136e5:	mov    rbx,QWORD PTR [rip+0x123f4]        # 0x425ae0
  4136ec:	xor    edi,edi
  4136ee:	cmp    WORD PTR [rbx],0x5a4d
  4136f3:	je     0x413710
  4136f5:	mov    rax,rdi
  4136f8:	add    rsp,0x20
  4136fc:	pop    rbx
  4136fd:	pop    rsi
  4136fe:	pop    rdi
  4136ff:	ret    
  413700:	xor    edi,edi
  413702:	mov    rax,rdi
  413705:	add    rsp,0x20
  413709:	pop    rbx
  41370a:	pop    rsi
  41370b:	pop    rdi
  41370c:	ret    
  41370d:	nop    DWORD PTR [rax]
  413710:	mov    rcx,rbx
  413713:	call   0x413640
  413718:	test   eax,eax
  41371a:	je     0x4136f5
  41371c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  413720:	add    rdx,rbx
  413723:	movzx  eax,WORD PTR [rdx+0x14]
  413727:	lea    rbx,[rdx+rax*1+0x18]
  41372c:	movzx  eax,WORD PTR [rdx+0x6]
  413730:	test   eax,eax
  413732:	je     0x4136f5
  413734:	sub    eax,0x1
  413737:	lea    rax,[rax+rax*4]
  41373b:	lea    rdi,[rbx+rax*8+0x28]
  413740:	jmp    0x41374b
  413742:	add    rbx,0x28
  413746:	cmp    rbx,rdi
  413749:	je     0x413700
  41374b:	mov    r8d,0x8
  413751:	mov    rdx,rsi
  413754:	mov    rcx,rbx
  413757:	call   0x419830
  41375c:	test   eax,eax
  41375e:	jne    0x413742
  413760:	mov    rdi,rbx
  413763:	mov    rax,rdi
  413766:	add    rsp,0x20
  41376a:	pop    rbx
  41376b:	pop    rsi
  41376c:	pop    rdi
  41376d:	ret    
  41376e:	xchg   ax,ax
  413770:	push   rsi
  413771:	push   rbx
  413772:	sub    rsp,0x28
  413776:	mov    rbx,QWORD PTR [rip+0x12363]        # 0x425ae0
  41377d:	cmp    WORD PTR [rbx],0x5a4d
  413782:	je     0x413790
  413784:	xor    eax,eax
  413786:	add    rsp,0x28
  41378a:	pop    rbx
  41378b:	pop    rsi
  41378c:	ret    
  41378d:	nop    DWORD PTR [rax]
  413790:	mov    rsi,rcx
  413793:	mov    rcx,rbx
  413796:	call   0x413640
  41379b:	test   eax,eax
  41379d:	je     0x413784
  41379f:	sub    rsi,rbx
  4137a2:	mov    rcx,rbx
  4137a5:	mov    rdx,rsi
  4137a8:	add    rsp,0x28
  4137ac:	pop    rbx
  4137ad:	pop    rsi
  4137ae:	jmp    0x413680
  4137b3:	nop    DWORD PTR [rax]
  4137b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4137c0:	push   rbx
  4137c1:	sub    rsp,0x20
  4137c5:	mov    rbx,QWORD PTR [rip+0x12314]        # 0x425ae0
  4137cc:	xor    eax,eax
  4137ce:	cmp    WORD PTR [rbx],0x5a4d
  4137d3:	je     0x4137e0
  4137d5:	add    rsp,0x20
  4137d9:	pop    rbx
  4137da:	ret    
  4137db:	nop    DWORD PTR [rax+rax*1+0x0]
  4137e0:	mov    rcx,rbx
  4137e3:	call   0x413640
  4137e8:	test   eax,eax
  4137ea:	je     0x4137d5
  4137ec:	movsxd rax,DWORD PTR [rbx+0x3c]
  4137f0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  4137f5:	add    rsp,0x20
  4137f9:	pop    rbx
  4137fa:	ret    
  4137fb:	nop    DWORD PTR [rax+rax*1+0x0]
  413800:	push   rdi
  413801:	push   rsi
  413802:	push   rbx
  413803:	sub    rsp,0x20
  413807:	mov    rsi,QWORD PTR [rip+0x122d2]        # 0x425ae0
  41380e:	xor    edi,edi
  413810:	mov    rbx,rcx
  413813:	cmp    WORD PTR [rsi],0x5a4d
  413818:	je     0x413825
  41381a:	mov    rax,rdi
  41381d:	add    rsp,0x20
  413821:	pop    rbx
  413822:	pop    rsi
  413823:	pop    rdi
  413824:	ret    
  413825:	mov    rcx,rsi
  413828:	call   0x413640
  41382d:	test   eax,eax
  41382f:	je     0x41381a
  413831:	movsxd rax,DWORD PTR [rsi+0x3c]
  413835:	add    rsi,rax
  413838:	movzx  eax,WORD PTR [rsi+0x14]
  41383c:	lea    rdx,[rsi+rax*1+0x18]
  413841:	movzx  eax,WORD PTR [rsi+0x6]
  413845:	test   eax,eax
  413847:	je     0x41381a
  413849:	sub    eax,0x1
  41384c:	lea    rax,[rax+rax*4]
  413850:	lea    rax,[rdx+rax*8+0x28]
  413855:	test   BYTE PTR [rdx+0x27],0x20
  413859:	je     0x413864
  41385b:	test   rbx,rbx
  41385e:	je     0x413880
  413860:	sub    rbx,0x1
  413864:	add    rdx,0x28
  413868:	cmp    rdx,rax
  41386b:	jne    0x413855
  41386d:	xor    edi,edi
  41386f:	mov    rax,rdi
  413872:	add    rsp,0x20
  413876:	pop    rbx
  413877:	pop    rsi
  413878:	pop    rdi
  413879:	ret    
  41387a:	nop    WORD PTR [rax+rax*1+0x0]
  413880:	mov    rdi,rdx
  413883:	mov    rax,rdi
  413886:	add    rsp,0x20
  41388a:	pop    rbx
  41388b:	pop    rsi
  41388c:	pop    rdi
  41388d:	ret    
  41388e:	xchg   ax,ax
  413890:	push   rsi
  413891:	push   rbx
  413892:	sub    rsp,0x28
  413896:	mov    rsi,QWORD PTR [rip+0x12243]        # 0x425ae0
  41389d:	xor    ebx,ebx
  41389f:	cmp    WORD PTR [rsi],0x5a4d
  4138a4:	je     0x4138b0
  4138a6:	mov    rax,rbx
  4138a9:	add    rsp,0x28
  4138ad:	pop    rbx
  4138ae:	pop    rsi
  4138af:	ret    
  4138b0:	mov    rcx,rsi
  4138b3:	call   0x413640
  4138b8:	test   eax,eax
  4138ba:	cmovne rbx,rsi
  4138be:	mov    rax,rbx
  4138c1:	add    rsp,0x28
  4138c5:	pop    rbx
  4138c6:	pop    rsi
  4138c7:	ret    
  4138c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4138d0:	push   rsi
  4138d1:	push   rbx
  4138d2:	sub    rsp,0x28
  4138d6:	mov    rbx,QWORD PTR [rip+0x12203]        # 0x425ae0
  4138dd:	xor    eax,eax
  4138df:	cmp    WORD PTR [rbx],0x5a4d
  4138e4:	je     0x4138f0
  4138e6:	add    rsp,0x28
  4138ea:	pop    rbx
  4138eb:	pop    rsi
  4138ec:	ret    
  4138ed:	nop    DWORD PTR [rax]
  4138f0:	mov    rsi,rcx
  4138f3:	mov    rcx,rbx
  4138f6:	call   0x413640
  4138fb:	test   eax,eax
  4138fd:	je     0x4138e6
  4138ff:	sub    rsi,rbx
  413902:	mov    rcx,rbx
  413905:	mov    rdx,rsi
  413908:	call   0x413680
  41390d:	test   rax,rax
  413910:	je     0x413921
  413912:	mov    eax,DWORD PTR [rax+0x24]
  413915:	not    eax
  413917:	shr    eax,0x1f
  41391a:	add    rsp,0x28
  41391e:	pop    rbx
  41391f:	pop    rsi
  413920:	ret    
  413921:	xor    eax,eax
  413923:	jmp    0x4138e6
  413925:	nop
  413926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413930:	push   rbp
  413931:	push   rdi
  413932:	push   rsi
  413933:	push   rbx
  413934:	sub    rsp,0x28
  413938:	mov    rdi,QWORD PTR [rip+0x121a1]        # 0x425ae0
  41393f:	xor    ebp,ebp
  413941:	mov    esi,ecx
  413943:	cmp    WORD PTR [rdi],0x5a4d
  413948:	je     0x413960
  41394a:	mov    rax,rbp
  41394d:	add    rsp,0x28
  413951:	pop    rbx
  413952:	pop    rsi
  413953:	pop    rdi
  413954:	pop    rbp
  413955:	ret    
  413956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413960:	mov    rcx,rdi
  413963:	call   0x413640
  413968:	test   eax,eax
  41396a:	je     0x41394a
  41396c:	movsxd rax,DWORD PTR [rdi+0x3c]
  413970:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  413977:	test   edx,edx
  413979:	je     0x41394a
  41397b:	mov    ebx,edx
  41397d:	mov    rcx,rdi
  413980:	mov    rdx,rbx
  413983:	call   0x413680
  413988:	test   rax,rax
  41398b:	je     0x41394a
  41398d:	add    rbx,rdi
  413990:	mov    rdx,rbx
  413993:	jne    0x4139a7
  413995:	jmp    0x41394a
  413997:	nop    WORD PTR [rax+rax*1+0x0]
  4139a0:	sub    esi,0x1
  4139a3:	add    rdx,0x14
  4139a7:	mov    ecx,DWORD PTR [rdx+0x4]
  4139aa:	test   ecx,ecx
  4139ac:	jne    0x4139b5
  4139ae:	mov    eax,DWORD PTR [rdx+0xc]
  4139b1:	test   eax,eax
  4139b3:	je     0x4139d0
  4139b5:	test   esi,esi
  4139b7:	jg     0x4139a0
  4139b9:	mov    ebp,DWORD PTR [rdx+0xc]
  4139bc:	add    rbp,rdi
  4139bf:	mov    rax,rbp
  4139c2:	add    rsp,0x28
  4139c6:	pop    rbx
  4139c7:	pop    rsi
  4139c8:	pop    rdi
  4139c9:	pop    rbp
  4139ca:	ret    
  4139cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4139d0:	xor    ebp,ebp
  4139d2:	mov    rax,rbp
  4139d5:	add    rsp,0x28
  4139d9:	pop    rbx
  4139da:	pop    rsi
  4139db:	pop    rdi
  4139dc:	pop    rbp
  4139dd:	ret    
  4139de:	nop
  4139df:	nop
  4139e0:	jmp    QWORD PTR [rip+0x1829e]        # 0x42bc84
  4139e6:	nop
  4139e7:	nop
  4139e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4139f0:	push   rcx
  4139f1:	push   rax
  4139f2:	cmp    rax,0x1000
  4139f8:	lea    rcx,[rsp+0x18]
  4139fd:	jb     0x413a18
  4139ff:	sub    rcx,0x1000
  413a06:	or     QWORD PTR [rcx],0x0
  413a0a:	sub    rax,0x1000
  413a10:	cmp    rax,0x1000
  413a16:	ja     0x4139ff
  413a18:	sub    rcx,rax
  413a1b:	or     QWORD PTR [rcx],0x0
  413a1f:	pop    rax
  413a20:	pop    rcx
  413a21:	ret    
  413a22:	nop
  413a23:	nop
  413a24:	nop
  413a25:	nop
  413a26:	nop
  413a27:	nop
  413a28:	nop
  413a29:	nop
  413a2a:	nop
  413a2b:	nop
  413a2c:	nop
  413a2d:	nop
  413a2e:	nop
  413a2f:	nop
  413a30:	push   rbx
  413a31:	sub    rsp,0x10
  413a35:	movsd  QWORD PTR [rsp+0x8],xmm0
  413a3b:	mov    r9,QWORD PTR [rsp+0x8]
  413a40:	mov    rdx,r9
  413a43:	mov    r10d,r9d
  413a46:	shr    rdx,0x20
  413a4a:	mov    eax,edx
  413a4c:	mov    r11d,edx
  413a4f:	sar    eax,0x14
  413a52:	and    eax,0x7ff
  413a57:	lea    r8d,[rax-0x3ff]
  413a5e:	cmp    r8d,0x33
  413a62:	jle    0x413a80
  413a64:	cmp    r8d,0x400
  413a6b:	je     0x413b45
  413a71:	add    rsp,0x10
  413a75:	pop    rbx
  413a76:	ret    
  413a77:	nop    WORD PTR [rax+rax*1+0x0]
  413a80:	cmp    r8d,0x13
  413a84:	jg     0x413af0
  413a86:	test   r8d,r8d
  413a89:	js     0x413b50
  413a8f:	mov    eax,0xfffff
  413a94:	mov    ecx,r8d
  413a97:	shr    eax,cl
  413a99:	test   r9d,r9d
  413a9c:	jne    0x413aa2
  413a9e:	test   eax,edx
  413aa0:	je     0x413a71
  413aa2:	movsd  xmm1,QWORD PTR [rip+0x11a96]        # 0x425540
  413aaa:	xorpd  xmm2,xmm2
  413aae:	addsd  xmm1,xmm0
  413ab2:	ucomisd xmm2,xmm1
  413ab6:	jae    0x413a71
  413ab8:	xor    r9d,r9d
  413abb:	test   edx,edx
  413abd:	jns    0x413acb
  413abf:	mov    r9d,0x100000
  413ac5:	mov    ecx,r8d
  413ac8:	sar    r9d,cl
  413acb:	add    edx,r9d
  413ace:	not    eax
  413ad0:	and    eax,edx
  413ad2:	shl    rax,0x20
  413ad6:	mov    QWORD PTR [rsp+0x8],rax
  413adb:	movsd  xmm0,QWORD PTR [rsp+0x8]
  413ae1:	add    rsp,0x10
  413ae5:	pop    rbx
  413ae6:	ret    
  413ae7:	nop    WORD PTR [rax+rax*1+0x0]
  413af0:	lea    ecx,[rax-0x413]
  413af6:	mov    ebx,0xffffffff
  413afb:	shr    ebx,cl
  413afd:	test   ebx,r9d
  413b00:	je     0x413a71
  413b06:	movsd  xmm1,QWORD PTR [rip+0x11a32]        # 0x425540
  413b0e:	xorpd  xmm2,xmm2
  413b12:	addsd  xmm1,xmm0
  413b16:	ucomisd xmm2,xmm1
  413b1a:	jae    0x413a71
  413b20:	test   edx,edx
  413b22:	js     0x413bb0
  413b28:	not    ebx
  413b2a:	shl    r11,0x20
  413b2e:	and    r10d,ebx
  413b31:	or     r11,r10
  413b34:	mov    QWORD PTR [rsp+0x8],r11
  413b39:	movsd  xmm0,QWORD PTR [rsp+0x8]
  413b3f:	add    rsp,0x10
  413b43:	pop    rbx
  413b44:	ret    
  413b45:	addsd  xmm0,xmm0
  413b49:	add    rsp,0x10
  413b4d:	pop    rbx
  413b4e:	ret    
  413b4f:	nop
  413b50:	movsd  xmm2,QWORD PTR [rip+0x119e8]        # 0x425540
  413b58:	xorpd  xmm1,xmm1
  413b5c:	addsd  xmm2,xmm0
  413b60:	ucomisd xmm2,xmm1
  413b64:	jbe    0x413a71
  413b6a:	test   edx,edx
  413b6c:	js     0x413b80
  413b6e:	movapd xmm0,xmm1
  413b72:	jmp    0x413a71
  413b77:	nop    WORD PTR [rax+rax*1+0x0]
  413b80:	and    edx,0x7fffffff
  413b86:	or     edx,r9d
  413b89:	je     0x413a71
  413b8f:	movabs rax,0xbff0000000000000
  413b99:	mov    QWORD PTR [rsp+0x8],rax
  413b9e:	movsd  xmm0,QWORD PTR [rsp+0x8]
  413ba4:	jmp    0x413a71
  413ba9:	nop    DWORD PTR [rax+0x0]
  413bb0:	cmp    r8d,0x14
  413bb4:	je     0x413bcf
  413bb6:	mov    ecx,0x433
  413bbb:	mov    r10d,0x1
  413bc1:	sub    ecx,eax
  413bc3:	shl    r10d,cl
  413bc6:	add    r10d,r9d
  413bc9:	jae    0x413b28
  413bcf:	lea    r11d,[rdx+0x1]
  413bd3:	jmp    0x413b28
  413bd8:	nop
  413bd9:	nop
  413bda:	nop
  413bdb:	nop
  413bdc:	nop
  413bdd:	nop
  413bde:	nop
  413bdf:	nop
  413be0:	sub    rsp,0x48
  413be4:	movaps XMMWORD PTR [rsp+0x20],xmm6
  413be9:	movaps XMMWORD PTR [rsp+0x30],xmm7
  413bee:	movapd xmm6,xmm0
  413bf2:	ucomisd xmm0,QWORD PTR [rip+0x11956]        # 0x425550
  413bfa:	jb     0x413c30
  413bfc:	call   0x414710
  413c01:	movapd xmm1,xmm0
  413c05:	subsd  xmm0,xmm6
  413c09:	ucomisd xmm0,QWORD PTR [rip+0x11947]        # 0x425558
  413c11:	jbe    0x413c1b
  413c13:	subsd  xmm1,QWORD PTR [rip+0x11945]        # 0x425560
  413c1b:	movapd xmm0,xmm1
  413c1f:	movaps xmm6,XMMWORD PTR [rsp+0x20]
  413c24:	movaps xmm7,XMMWORD PTR [rsp+0x30]
  413c29:	add    rsp,0x48
  413c2d:	ret    
  413c2e:	xchg   ax,ax
  413c30:	movsd  xmm7,QWORD PTR [rip+0x11938]        # 0x425570
  413c38:	xorpd  xmm0,xmm7
  413c3c:	call   0x414710
  413c41:	addsd  xmm6,xmm0
  413c45:	ucomisd xmm6,QWORD PTR [rip+0x1190b]        # 0x425558
  413c4d:	jbe    0x413c57
  413c4f:	subsd  xmm0,QWORD PTR [rip+0x11909]        # 0x425560
  413c57:	movapd xmm1,xmm0
  413c5b:	xorpd  xmm1,xmm7
  413c5f:	jmp    0x413c1b
  413c61:	nop
  413c62:	nop
  413c63:	nop
  413c64:	nop
  413c65:	nop
  413c66:	nop
  413c67:	nop
  413c68:	nop
  413c69:	nop
  413c6a:	nop
  413c6b:	nop
  413c6c:	nop
  413c6d:	nop
  413c6e:	nop
  413c6f:	nop
  413c70:	push   r15
  413c72:	push   r14
  413c74:	push   r13
  413c76:	push   r12
  413c78:	push   rbp
  413c79:	push   rdi
  413c7a:	push   rsi
  413c7b:	push   rbx
  413c7c:	sub    rsp,0x28
  413c80:	test   rdx,rdx
  413c83:	mov    rsi,rcx
  413c86:	mov    r12,rdx
  413c89:	mov    edi,r8d
  413c8c:	je     0x413c92
  413c8e:	mov    QWORD PTR [r12],rcx
  413c92:	cmp    edi,0x24
  413c95:	ja     0x413d73
  413c9b:	cmp    edi,0x1
  413c9e:	jne    0x413ca9
  413ca0:	jmp    0x413d73
  413ca5:	add    rsi,0x1
  413ca9:	movsx  ecx,BYTE PTR [rsi]
  413cac:	mov    ebx,ecx
  413cae:	call   0x4198a8
  413cb3:	test   eax,eax
  413cb5:	jne    0x413ca5
  413cb7:	lea    edx,[rbx-0x2b]
  413cba:	mov    rcx,rsi
  413cbd:	mov    eax,ebx
  413cbf:	and    edx,0xfd
  413cc5:	jne    0x413ccf
  413cc7:	movzx  eax,BYTE PTR [rcx+0x1]
  413ccb:	add    rsi,0x1
  413ccf:	test   edi,edi
  413cd1:	jne    0x413e11
  413cd7:	cmp    al,0x30
  413cd9:	mov    dil,0xa
  413cdc:	je     0x413e62
  413ce2:	movsx  r15d,al
  413ce6:	lea    edx,[r15-0x30]
  413cea:	cmp    edx,0x9
  413ced:	ja     0x413de0
  413cf3:	movsx  ecx,al
  413cf6:	sub    ecx,0x30
  413cf9:	cmp    edi,ecx
  413cfb:	jle    0x413e90
  413d01:	mov    eax,ecx
  413d03:	shr    eax,0x1f
  413d06:	test   al,al
  413d08:	jne    0x413e90
  413d0e:	lea    r14,[rsi+0x1]
  413d12:	movsxd r15,ecx
  413d15:	xor    r13d,r13d
  413d18:	movsxd rsi,edi
  413d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  413d20:	movsx  ebp,BYTE PTR [r14]
  413d24:	lea    r9d,[rbp-0x30]
  413d28:	cmp    r9d,0x9
  413d2c:	mov    ecx,r9d
  413d2f:	jbe    0x413d94
  413d31:	mov    ecx,ebp
  413d33:	call   0x4198a0
  413d38:	test   eax,eax
  413d3a:	lea    ecx,[rbp-0x37]
  413d3d:	jne    0x413d94
  413d3f:	mov    ecx,ebp
  413d41:	call   0x4198b0
  413d46:	test   eax,eax
  413d48:	jne    0x413d91
  413d4a:	test   r12,r12
  413d4d:	je     0x413d53
  413d4f:	mov    QWORD PTR [r12],r14
  413d53:	cmp    bl,0x2d
  413d56:	je     0x413e40
  413d5c:	test   r15,r15
  413d5f:	js     0x413eb0
  413d65:	test   r13d,r13d
  413d68:	jne    0x413eb0
  413d6e:	mov    rax,r15
  413d71:	jmp    0x413d80
  413d73:	call   0x419948
  413d78:	mov    DWORD PTR [rax],0x21
  413d7e:	xor    eax,eax
  413d80:	add    rsp,0x28
  413d84:	pop    rbx
  413d85:	pop    rsi
  413d86:	pop    rdi
  413d87:	pop    rbp
  413d88:	pop    r12
  413d8a:	pop    r13
  413d8c:	pop    r14
  413d8e:	pop    r15
  413d90:	ret    
  413d91:	lea    ecx,[rbp-0x57]
  413d94:	cmp    edi,ecx
  413d96:	jle    0x413d4a
  413d98:	test   ecx,ecx
  413d9a:	js     0x413d4a
  413d9c:	movabs rax,0x7fffffffffffffff
  413da6:	cqo    
  413da8:	idiv   rsi
  413dab:	add    rax,0x2
  413daf:	cmp    r15,rax
  413db2:	ja     0x413dd0
  413db4:	imul   r15,rsi
  413db8:	movsxd rcx,ecx
  413dbb:	add    r15,rcx
  413dbe:	add    r14,0x1
  413dc2:	jmp    0x413d20
  413dc7:	nop    WORD PTR [rax+rax*1+0x0]
  413dd0:	mov    r13d,0x1
  413dd6:	jmp    0x413dbe
  413dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  413de0:	mov    ecx,r15d
  413de3:	call   0x4198a0
  413de8:	test   eax,eax
  413dea:	lea    ecx,[r15-0x37]
  413dee:	jne    0x413cf9
  413df4:	mov    ecx,r15d
  413df7:	call   0x4198b0
  413dfc:	mov    edx,eax
  413dfe:	xor    eax,eax
  413e00:	test   edx,edx
  413e02:	je     0x413d80
  413e08:	lea    ecx,[r15-0x57]
  413e0c:	jmp    0x413cf9
  413e11:	cmp    edi,0x10
  413e14:	jne    0x413ce2
  413e1a:	cmp    al,0x30
  413e1c:	jne    0x413ce2
  413e22:	movzx  eax,BYTE PTR [rsi+0x1]
  413e26:	and    eax,0xffffffdf
  413e29:	cmp    al,0x58
  413e2b:	je     0x413e75
  413e2d:	mov    eax,0x30
  413e32:	jmp    0x413cf3
  413e37:	nop    WORD PTR [rax+rax*1+0x0]
  413e40:	movabs rbx,0x8000000000000000
  413e4a:	cmp    r15,rbx
  413e4d:	jbe    0x413ea0
  413e4f:	call   0x419948
  413e54:	mov    DWORD PTR [rax],0x22
  413e5a:	mov    rax,rbx
  413e5d:	jmp    0x413d80
  413e62:	movzx  edx,BYTE PTR [rsi+0x1]
  413e66:	mov    dil,0x8
  413e69:	and    edx,0xffffffdf
  413e6c:	cmp    dl,0x58
  413e6f:	jne    0x413ce2
  413e75:	movzx  eax,BYTE PTR [rsi+0x2]
  413e79:	mov    edi,0x10
  413e7e:	add    rsi,0x2
  413e82:	jmp    0x413ce2
  413e87:	nop    WORD PTR [rax+rax*1+0x0]
  413e90:	xor    eax,eax
  413e92:	jmp    0x413d80
  413e97:	nop    WORD PTR [rax+rax*1+0x0]
  413ea0:	test   r13d,r13d
  413ea3:	jne    0x413e4f
  413ea5:	mov    rax,r15
  413ea8:	neg    rax
  413eab:	jmp    0x413d80
  413eb0:	call   0x419948
  413eb5:	mov    DWORD PTR [rax],0x22
  413ebb:	movabs rax,0x7fffffffffffffff
  413ec5:	jmp    0x413d80
  413eca:	nop
  413ecb:	nop
  413ecc:	nop
  413ecd:	nop
  413ece:	nop
  413ecf:	nop
  413ed0:	sub    rsp,0x38
  413ed4:	mov    r9,rdx
  413ed7:	mov    QWORD PTR [rsp+0x20],r8
  413edc:	mov    rdx,rcx
  413edf:	xor    r8d,r8d
  413ee2:	mov    ecx,0x6000
  413ee7:	call   0x416320
  413eec:	add    rsp,0x38
  413ef0:	ret    
  413ef1:	nop
  413ef2:	nop
  413ef3:	nop
  413ef4:	nop
  413ef5:	nop
  413ef6:	nop
  413ef7:	nop
  413ef8:	nop
  413ef9:	nop
  413efa:	nop
  413efb:	nop
  413efc:	nop
  413efd:	nop
  413efe:	nop
  413eff:	nop
  413f00:	push   rsi
  413f01:	push   rbx
  413f02:	sub    rsp,0x38
  413f06:	mov    rbx,rcx
  413f09:	mov    rsi,rdx
  413f0c:	call   0x419978
  413f11:	lea    rdx,[rax+0x30]
  413f15:	mov    QWORD PTR [rsp+0x20],rsi
  413f1a:	mov    r9,rbx
  413f1d:	xor    r8d,r8d
  413f20:	mov    ecx,0x6000
  413f25:	call   0x416320
  413f2a:	add    rsp,0x38
  413f2e:	pop    rbx
  413f2f:	pop    rsi
  413f30:	ret    
  413f31:	nop
  413f32:	nop
  413f33:	nop
  413f34:	nop
  413f35:	nop
  413f36:	nop
  413f37:	nop
  413f38:	nop
  413f39:	nop
  413f3a:	nop
  413f3b:	nop
  413f3c:	nop
  413f3d:	nop
  413f3e:	nop
  413f3f:	nop
  413f40:	push   rsi
  413f41:	push   rbx
  413f42:	sub    rsp,0x38
  413f46:	test   rdx,rdx
  413f49:	mov    rsi,rcx
  413f4c:	je     0x413f80
  413f4e:	lea    rbx,[rdx-0x1]
  413f52:	mov    QWORD PTR [rsp+0x20],r9
  413f57:	mov    rdx,rcx
  413f5a:	mov    r9,r8
  413f5d:	xor    ecx,ecx
  413f5f:	mov    r8d,ebx
  413f62:	call   0x416320
  413f67:	cmp    eax,ebx
  413f69:	cmovle ebx,eax
  413f6c:	movsxd rbx,ebx
  413f6f:	mov    BYTE PTR [rsi+rbx*1],0x0
  413f73:	add    rsp,0x38
  413f77:	pop    rbx
  413f78:	pop    rsi
  413f79:	ret    
  413f7a:	nop    WORD PTR [rax+rax*1+0x0]
  413f80:	mov    QWORD PTR [rsp+0x20],r9
  413f85:	mov    rdx,rcx
  413f88:	mov    r9,r8
  413f8b:	xor    ecx,ecx
  413f8d:	xor    r8d,r8d
  413f90:	call   0x416320
  413f95:	add    rsp,0x38
  413f99:	pop    rbx
  413f9a:	pop    rsi
  413f9b:	ret    
  413f9c:	nop
  413f9d:	nop
  413f9e:	nop
  413f9f:	nop
  413fa0:	sub    rsp,0x18
  413fa4:	movsd  QWORD PTR [rsp],xmm0
  413fa9:	fld    QWORD PTR [rsp]
  413fac:	fxam   
  413fae:	fstsw  ax
  413fb1:	mov    dh,0x45
  413fb3:	and    dh,ah
  413fb5:	cmp    dh,0x5
  413fb8:	je     0x413ff8
  413fba:	fld    st(0)
  413fbc:	sub    rsp,0x8
  413fc0:	fnstcw WORD PTR [rsp+0x4]
  413fc4:	movzx  eax,WORD PTR [rsp+0x4]
  413fc9:	or     ah,0xc
  413fcc:	mov    WORD PTR [rsp],ax
  413fd0:	fldcw  WORD PTR [rsp]
  413fd3:	frndint 
  413fd5:	fldcw  WORD PTR [rsp+0x4]
  413fd9:	add    rsp,0x8
  413fdd:	fsub   st(1),st
  413fdf:	fxch   st(1)
  413fe1:	f2xm1  
  413fe3:	fld1   
  413fe5:	faddp  st(1),st
  413fe7:	fscale 
  413fe9:	fstp   st(1)
  413feb:	fstp   QWORD PTR [rsp]
  413fee:	movsd  xmm0,QWORD PTR [rsp]
  413ff3:	add    rsp,0x18
  413ff7:	ret    
  413ff8:	test   eax,0x200
  413ffd:	je     0x414003
  413fff:	fstp   st(0)
  414001:	fldz   
  414003:	fstp   QWORD PTR [rsp]
  414006:	movsd  xmm0,QWORD PTR [rsp]
  41400b:	add    rsp,0x18
  41400f:	ret    
  414010:	add    BYTE PTR [rax],al
  414012:	add    BYTE PTR [rax],al
  414014:	add    BYTE PTR [rax],al
  414016:	lock (bad) 
  414018:	pop    rdx
  41401a:	cmc    
  41401b:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  41401f:	(bad)  
  414020:	movsd  QWORD PTR [rsp-0x10],xmm0
  414026:	fld    QWORD PTR [rip+0xffffffffffffffe4]        # 0x414010
  41402c:	fld    QWORD PTR [rsp-0x10]
  414030:	fxam   
  414032:	fnstsw ax
  414034:	fld    st(0)
  414036:	sahf   
  414037:	jb     0x41406a
  414039:	fsub   st,st(2)
  41403b:	fld    st(0)
  41403d:	fabs   
  41403f:	fcomp  QWORD PTR [rip+0xffffffffffffffd3]        # 0x414018
  414045:	fnstsw ax
  414047:	and    ah,0x45
  41404a:	je     0x41405b
  41404c:	fstp   st(1)
  41404e:	fyl2xp1 
  414050:	fstp   QWORD PTR [rsp-0x10]
  414054:	movsd  xmm0,QWORD PTR [rsp-0x10]
  41405a:	ret    
  41405b:	fstp   st(0)
  41405d:	fyl2x  
  41405f:	fstp   QWORD PTR [rsp-0x10]
  414063:	movsd  xmm0,QWORD PTR [rsp-0x10]
  414069:	ret    
  41406a:	jp     0x414039
  41406c:	fstp   st(1)
  41406e:	fstp   st(1)
  414070:	fstp   QWORD PTR [rsp-0x10]
  414074:	movsd  xmm0,QWORD PTR [rsp-0x10]
  41407a:	ret    
  41407b:	nop
  41407c:	nop
  41407d:	nop
  41407e:	nop
  41407f:	nop
  414080:	sub    rsp,0x28
  414084:	movsd  QWORD PTR [rsp+0x8],xmm0
  41408a:	fld    QWORD PTR [rsp+0x8]
  41408e:	push   rax
  41408f:	sub    rsp,0x8
  414093:	fnstcw WORD PTR [rsp+0x4]
  414097:	movzx  eax,WORD PTR [rsp+0x4]
  41409c:	or     ah,0xc
  41409f:	mov    WORD PTR [rsp],ax
  4140a3:	fldcw  WORD PTR [rsp]
  4140a6:	frndint 
  4140a8:	fldcw  WORD PTR [rsp+0x4]
  4140ac:	add    rsp,0x8
  4140b0:	pop    rax
  4140b1:	test   rdx,rdx
  4140b4:	fstp   QWORD PTR [rsp+0x8]
  4140b8:	je     0x4140c4
  4140ba:	movsd  xmm2,QWORD PTR [rsp+0x8]
  4140c0:	movsd  QWORD PTR [rdx],xmm2
  4140c4:	movsd  QWORD PTR [rsp+0x18],xmm0
  4140ca:	mov    eax,DWORD PTR [rsp+0x1c]
  4140ce:	mov    ecx,eax
  4140d0:	and    eax,0x7ff00000
  4140d5:	and    ecx,0xfffff
  4140db:	or     ecx,DWORD PTR [rsp+0x18]
  4140df:	mov    edx,ecx
  4140e1:	or     edx,eax
  4140e3:	sete   r8b
  4140e7:	test   eax,eax
  4140e9:	sete   dl
  4140ec:	or     edx,r8d
  4140ef:	xor    edx,0x1
  4140f2:	cmp    eax,0x7ff00000
  4140f7:	sete   al
  4140fa:	and    edx,eax
  4140fc:	test   ecx,ecx
  4140fe:	setne  al
  414101:	cmp    dl,al
  414103:	jbe    0x414110
  414105:	pxor   xmm0,xmm0
  414109:	add    rsp,0x28
  41410d:	ret    
  41410e:	xchg   ax,ax
  414110:	subsd  xmm0,QWORD PTR [rsp+0x8]
  414116:	add    rsp,0x28
  41411a:	ret    
  41411b:	nop    DWORD PTR [rax+rax*1+0x0]
  414120:	push   rdi
  414121:	push   rsi
  414122:	push   rbx
  414123:	sub    rsp,0xc0
  41412a:	movaps XMMWORD PTR [rsp+0x80],xmm6
  414132:	movaps XMMWORD PTR [rsp+0x90],xmm7
  41413a:	movaps XMMWORD PTR [rsp+0xa0],xmm8
  414143:	movaps XMMWORD PTR [rsp+0xb0],xmm9
  41414c:	mov    ecx,0x4000
  414151:	movsd  QWORD PTR [rsp+0x70],xmm0
  414157:	movapd xmm8,xmm0
  41415c:	mov    eax,DWORD PTR [rsp+0x74]
  414160:	movapd xmm7,xmm1
  414164:	mov    edx,eax
  414166:	and    eax,0x7ff00000
  41416b:	and    edx,0xfffff
  414171:	or     edx,DWORD PTR [rsp+0x70]
  414175:	mov    edi,edx
  414177:	or     edi,eax
  414179:	je     0x414187
  41417b:	test   eax,eax
  41417d:	mov    cx,0x4400
  414181:	jne    0x414281
  414187:	movsd  QWORD PTR [rsp+0x78],xmm7
  41418d:	mov    eax,DWORD PTR [rsp+0x7c]
  414191:	movsd  xmm0,QWORD PTR [rip+0x11417]        # 0x4255b0
  414199:	mov    edx,eax
  41419b:	and    eax,0x7ff00000
  4141a0:	and    edx,0xfffff
  4141a6:	or     edx,DWORD PTR [rsp+0x78]
  4141aa:	mov    esi,edx
  4141ac:	or     esi,eax
  4141ae:	je     0x414223
  4141b0:	test   eax,eax
  4141b2:	jne    0x414250
  4141b8:	mov    r8d,0x4400
  4141be:	movsd  xmm6,QWORD PTR [rip+0x113ea]        # 0x4255b0
  4141c6:	ucomisd xmm8,xmm6
  4141cb:	jp     0x4141cf
  4141cd:	je     0x41421f
  4141cf:	cmp    ecx,0x100
  4141d5:	jne    0x4142b0
  4141db:	movq   rax,xmm8
  4141e0:	shr    rax,0x20
  4141e4:	test   eax,eax
  4141e6:	js     0x414490
  4141ec:	movsd  xmm6,QWORD PTR [rip+0x1139c]        # 0x425590
  4141f4:	call   0x419948
  4141f9:	mov    DWORD PTR [rax],0x21
  4141ff:	movsd  QWORD PTR [rsp+0x20],xmm6
  414205:	movapd xmm3,xmm7
  414209:	movapd xmm2,xmm8
  41420e:	lea    rdx,[rip+0x1136b]        # 0x425580
  414215:	mov    ecx,0x1
  41421a:	call   0x412900
  41421f:	movapd xmm0,xmm6
  414223:	movaps xmm6,XMMWORD PTR [rsp+0x80]
  41422b:	movaps xmm7,XMMWORD PTR [rsp+0x90]
  414233:	movaps xmm8,XMMWORD PTR [rsp+0xa0]
  41423c:	movaps xmm9,XMMWORD PTR [rsp+0xb0]
  414245:	add    rsp,0xc0
  41424c:	pop    rbx
  41424d:	pop    rsi
  41424e:	pop    rdi
  41424f:	ret    
  414250:	cmp    eax,0x7ff00000
  414255:	mov    r8d,0x400
  41425b:	jne    0x4141be
  414261:	test   edx,edx
  414263:	mov    r8w,0x500
  414268:	je     0x4141be
  41426e:	ucomisd xmm8,xmm0
  414273:	jp     0x4141db
  414279:	jne    0x4141db
  41427f:	jmp    0x414223
  414281:	cmp    eax,0x7ff00000
  414286:	mov    cx,0x400
  41428a:	jne    0x414187
  414290:	cmp    edx,0x1
  414293:	sbb    ecx,ecx
  414295:	and    ecx,0x400
  41429b:	add    ecx,0x100
  4142a1:	jmp    0x414187
  4142a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142b0:	cmp    ecx,0x4000
  4142b6:	je     0x414350
  4142bc:	cmp    r8d,0x500
  4142c3:	je     0x414320
  4142c5:	cmp    ecx,0x500
  4142cb:	jne    0x4143a2
  4142d1:	movq   rax,xmm8
  4142d6:	shr    rax,0x20
  4142da:	test   eax,eax
  4142dc:	js     0x4145c0
  4142e2:	movapd xmm0,xmm7
  4142e6:	mov    edx,0xffffffff
  4142eb:	call   0x416df0
  4142f0:	lea    rdx,[rsp+0x68]
  4142f5:	call   0x414080
  4142fa:	movq   rax,xmm7
  4142ff:	shr    rax,0x20
  414303:	test   eax,eax
  414305:	pxor   xmm9,xmm9
  41430a:	js     0x414398
  414310:	movsd  xmm0,QWORD PTR [rip+0x11290]        # 0x4255a8
  414318:	jmp    0x414223
  41431d:	nop    DWORD PTR [rax]
  414320:	cmp    ecx,0x500
  414326:	je     0x4142fa
  414328:	movq   rax,xmm8
  41432d:	shr    rax,0x20
  414331:	test   eax,eax
  414333:	js     0x414630
  414339:	movq   rax,xmm7
  41433e:	shr    rax,0x20
  414342:	ucomisd xmm8,xmm6
  414347:	ja     0x414303
  414349:	jmp    0x41438b
  41434b:	nop    DWORD PTR [rax+rax*1+0x0]
  414350:	cmp    r8d,0x500
  414357:	je     0x414382
  414359:	movq   rax,xmm8
  41435e:	shr    rax,0x20
  414362:	test   eax,eax
  414364:	js     0x414524
  41436a:	movapd xmm0,xmm7
  41436e:	mov    edx,0xffffffff
  414373:	call   0x416df0
  414378:	lea    rdx,[rsp+0x68]
  41437d:	call   0x414080
  414382:	movq   rax,xmm7
  414387:	shr    rax,0x20
  41438b:	test   eax,eax
  41438d:	pxor   xmm9,xmm9
  414392:	js     0x414310
  414398:	movapd xmm0,xmm9
  41439d:	jmp    0x414223
  4143a2:	lea    rbx,[rsp+0x68]
  4143a7:	pxor   xmm9,xmm9
  4143ac:	movapd xmm0,xmm7
  4143b0:	mov    rdx,rbx
  4143b3:	call   0x414080
  4143b8:	ucomisd xmm0,xmm9
  4143bd:	jp     0x4144a0
  4143c3:	jne    0x4144a0
  4143c9:	movsd  xmm0,QWORD PTR [rsp+0x68]
  4143cf:	movsd  xmm1,QWORD PTR [rip+0x11201]        # 0x4255d8
  4143d7:	ucomisd xmm1,xmm0
  4143db:	jb     0x4143eb
  4143dd:	ucomisd xmm0,QWORD PTR [rip+0x1120b]        # 0x4255f0
  4143e5:	jae    0x4146d0
  4143eb:	movsd  xmm0,QWORD PTR [rip+0x111ed]        # 0x4255e0
  4143f3:	lea    rsi,[rsp+0x50]
  4143f8:	lea    rdi,[rsp+0x40]
  4143fd:	andpd  xmm0,xmm8
  414402:	mov    rdx,rdi
  414405:	mov    rcx,rsi
  414408:	movsd  QWORD PTR [rsp+0x30],xmm0
  41440e:	fld    QWORD PTR [rsp+0x30]
  414412:	fstp   TBYTE PTR [rsp+0x40]
  414416:	call   0x416f00
  41441b:	mov    rdx,rdi
  41441e:	mov    rcx,rsi
  414421:	movsd  QWORD PTR [rsp+0x30],xmm7
  414427:	fld    TBYTE PTR [rsp+0x50]
  41442b:	fld    QWORD PTR [rsp+0x30]
  41442f:	fmulp  st(1),st
  414431:	fstp   TBYTE PTR [rsp+0x40]
  414435:	call   0x416d80
  41443a:	movq   rax,xmm8
  41443f:	fld    TBYTE PTR [rsp+0x50]
  414443:	shr    rax,0x20
  414447:	test   eax,eax
  414449:	fstp   QWORD PTR [rsp+0x38]
  41444d:	movsd  xmm6,QWORD PTR [rsp+0x38]
  414453:	jns    0x41421f
  414459:	movapd xmm0,xmm7
  41445d:	mov    edx,0xffffffff
  414462:	call   0x416df0
  414467:	mov    rdx,rbx
  41446a:	call   0x414080
  41446f:	ucomisd xmm0,xmm9
  414474:	jp     0x41447c
  414476:	je     0x41421f
  41447c:	movsd  xmm4,QWORD PTR [rip+0x1113c]        # 0x4255c0
  414484:	xorpd  xmm6,xmm4
  414488:	jmp    0x41421f
  41448d:	nop    DWORD PTR [rax]
  414490:	movsd  xmm6,QWORD PTR [rip+0x110f0]        # 0x425588
  414498:	jmp    0x4141f4
  41449d:	nop    DWORD PTR [rax]
  4144a0:	movq   rax,xmm8
  4144a5:	shr    rax,0x20
  4144a9:	test   eax,eax
  4144ab:	js     0x4146e3
  4144b1:	ucomisd xmm7,QWORD PTR [rip+0x11117]        # 0x4255d0
  4144b9:	jp     0x4144c1
  4144bb:	je     0x414610
  4144c1:	movsd  xmm0,QWORD PTR [rip+0x11117]        # 0x4255e0
  4144c9:	lea    rbx,[rsp+0x50]
  4144ce:	lea    rsi,[rsp+0x40]
  4144d3:	andpd  xmm8,xmm0
  4144d8:	mov    rdx,rsi
  4144db:	mov    rcx,rbx
  4144de:	movsd  QWORD PTR [rsp+0x30],xmm8
  4144e5:	fld    QWORD PTR [rsp+0x30]
  4144e9:	fstp   TBYTE PTR [rsp+0x40]
  4144ed:	call   0x416f00
  4144f2:	mov    rdx,rsi
  4144f5:	mov    rcx,rbx
  4144f8:	movsd  QWORD PTR [rsp+0x30],xmm7
  4144fe:	fld    TBYTE PTR [rsp+0x50]
  414502:	fld    QWORD PTR [rsp+0x30]
  414506:	fmulp  st(1),st
  414508:	fstp   TBYTE PTR [rsp+0x40]
  41450c:	call   0x416d80
  414511:	fld    TBYTE PTR [rsp+0x50]
  414515:	fstp   QWORD PTR [rsp+0x38]
  414519:	movsd  xmm0,QWORD PTR [rsp+0x38]
  41451f:	jmp    0x414223
  414524:	lea    rbx,[rsp+0x68]
  414529:	pxor   xmm9,xmm9
  41452e:	movapd xmm0,xmm7
  414532:	mov    rdx,rbx
  414535:	call   0x414080
  41453a:	ucomisd xmm0,xmm9
  41453f:	jp     0x414543
  414541:	je     0x41456f
  414543:	movq   rax,xmm7
  414548:	shr    rax,0x20
  41454c:	test   eax,eax
  41454e:	jns    0x414398
  414554:	movsd  xmm0,QWORD PTR [rip+0x11064]        # 0x4255c0
  41455c:	xorpd  xmm8,xmm0
  414561:	divsd  xmm6,xmm8
  414566:	movapd xmm0,xmm6
  41456a:	jmp    0x414223
  41456f:	movapd xmm0,xmm7
  414573:	mov    edx,0xffffffff
  414578:	call   0x416df0
  41457d:	mov    rdx,rbx
  414580:	call   0x414080
  414585:	ucomisd xmm0,xmm9
  41458a:	mov    edx,0x1
  41458f:	setp   al
  414592:	cmove  edx,eax
  414595:	movq   rax,xmm7
  41459a:	shr    rax,0x20
  41459e:	test   eax,eax
  4145a0:	js     0x4146fb
  4145a6:	test   dl,dl
  4145a8:	je     0x414398
  4145ae:	movsd  xmm0,QWORD PTR [rip+0x10fe2]        # 0x425598
  4145b6:	jmp    0x414223
  4145bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4145c0:	lea    rbx,[rsp+0x68]
  4145c5:	pxor   xmm9,xmm9
  4145ca:	movapd xmm0,xmm7
  4145ce:	mov    rdx,rbx
  4145d1:	call   0x414080
  4145d6:	ucomisd xmm0,xmm9
  4145db:	jp     0x4145df
  4145dd:	je     0x414653
  4145df:	movq   rax,xmm7
  4145e4:	shr    rax,0x20
  4145e8:	test   eax,eax
  4145ea:	js     0x414554
  4145f0:	movsd  xmm4,QWORD PTR [rip+0x10fc8]        # 0x4255c0
  4145f8:	movapd xmm0,xmm8
  4145fd:	xorpd  xmm0,xmm4
  414601:	jmp    0x414223
  414606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414610:	movsd  QWORD PTR [rsp+0x30],xmm8
  414617:	fld    QWORD PTR [rsp+0x30]
  41461b:	fsqrt  
  41461d:	fstp   QWORD PTR [rsp+0x30]
  414621:	movsd  xmm0,QWORD PTR [rsp+0x30]
  414627:	jmp    0x414223
  41462c:	nop    DWORD PTR [rax+0x0]
  414630:	movsd  xmm0,QWORD PTR [rip+0x10f88]        # 0x4255c0
  414638:	xorpd  xmm8,xmm0
  41463d:	ucomisd xmm8,xmm6
  414642:	jp     0x414339
  414648:	je     0x41421f
  41464e:	jmp    0x414339
  414653:	movapd xmm0,xmm7
  414657:	mov    edx,0xffffffff
  41465c:	call   0x416df0
  414661:	mov    rdx,rbx
  414664:	call   0x414080
  414669:	ucomisd xmm0,xmm9
  41466e:	mov    edx,0x1
  414673:	setp   al
  414676:	cmove  edx,eax
  414679:	movq   rax,xmm7
  41467e:	shr    rax,0x20
  414682:	mov    ecx,eax
  414684:	shr    ecx,0x1f
  414687:	cmp    cl,dl
  414689:	ja     0x414398
  41468f:	not    eax
  414691:	shr    eax,0x1f
  414694:	test   dl,dl
  414696:	je     0x4146a8
  414698:	test   al,al
  41469a:	movsd  xmm0,QWORD PTR [rip+0x10efe]        # 0x4255a0
  4146a2:	jne    0x414223
  4146a8:	cmp    al,dl
  4146aa:	ja     0x414310
  4146b0:	test   cl,cl
  4146b2:	jne    0x4145a6
  4146b8:	test   dl,dl
  4146ba:	movsd  xmm0,QWORD PTR [rip+0x10ede]        # 0x4255a0
  4146c2:	jne    0x414223
  4146c8:	jmp    0x414310
  4146cd:	nop    DWORD PTR [rax]
  4146d0:	cvttsd2si edx,xmm7
  4146d4:	movapd xmm0,xmm8
  4146d9:	call   0x4147f0
  4146de:	jmp    0x414223
  4146e3:	call   0x419948
  4146e8:	movsd  xmm6,QWORD PTR [rip+0x10e98]        # 0x425588
  4146f0:	mov    DWORD PTR [rax],0x21
  4146f6:	jmp    0x4141ff
  4146fb:	test   dl,dl
  4146fd:	je     0x414310
  414703:	movsd  xmm0,QWORD PTR [rip+0x10e95]        # 0x4255a0
  41470b:	jmp    0x414223
  414710:	movq   rax,xmm0
  414715:	mov    rcx,rax
  414718:	sar    rcx,0x34
  41471c:	and    ecx,0x7ff
  414722:	sub    ecx,0x3ff
  414728:	cmp    ecx,0x33
  41472b:	jg     0x4147d0
  414731:	test   rax,rax
  414734:	je     0x4147e0
  41473a:	test   ecx,ecx
  41473c:	js     0x414790
  41473e:	movabs rdx,0xfffffffffffff
  414748:	sar    rdx,cl
  41474b:	test   rdx,rax
  41474e:	je     0x4147e0
  414754:	addsd  xmm0,QWORD PTR [rip+0x10ea4]        # 0x425600
  41475c:	ucomisd xmm0,QWORD PTR [rip+0x10ea4]        # 0x425608
  414764:	jbe    0x414781
  414766:	test   rax,rax
  414769:	jle    0x41477b
  41476b:	movabs r8,0x10000000000000
  414775:	shr    r8,cl
  414778:	add    rax,r8
  41477b:	not    rdx
  41477e:	and    rax,rdx
  414781:	movq   xmm0,rax
  414786:	ret    
  414787:	nop    WORD PTR [rax+rax*1+0x0]
  414790:	addsd  xmm0,QWORD PTR [rip+0x10e68]        # 0x425600
  414798:	ucomisd xmm0,QWORD PTR [rip+0x10e68]        # 0x425608
  4147a0:	jbe    0x4147c0
  4147a2:	test   rax,rax
  4147a5:	movabs rdx,0x3ff0000000000000
  4147af:	movabs rax,0x8000000000000000
  4147b9:	cmovns rax,rdx
  4147bd:	nop    DWORD PTR [rax]
  4147c0:	movq   xmm0,rax
  4147c5:	ret    
  4147c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4147d0:	cmp    ecx,0x400
  4147d6:	je     0x4147e2
  4147d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4147e0:	repz ret 
  4147e2:	addsd  xmm0,xmm0
  4147e6:	ret    
  4147e7:	nop
  4147e8:	nop
  4147e9:	nop
  4147ea:	nop
  4147eb:	nop
  4147ec:	nop
  4147ed:	nop
  4147ee:	nop
  4147ef:	nop
  4147f0:	sub    rsp,0x78
  4147f4:	movaps XMMWORD PTR [rsp+0x50],xmm6
  4147f9:	movaps XMMWORD PTR [rsp+0x60],xmm7
  4147fe:	movsd  QWORD PTR [rsp+0x48],xmm0
  414804:	movapd xmm7,xmm0
  414808:	mov    eax,DWORD PTR [rsp+0x4c]
  41480c:	mov    ecx,eax
  41480e:	and    eax,0x7ff00000
  414813:	and    ecx,0xfffff
  414819:	or     ecx,DWORD PTR [rsp+0x48]
  41481d:	mov    r9d,ecx
  414820:	or     r9d,eax
  414823:	je     0x4148c0
  414829:	cmp    eax,0x7ff00000
  41482e:	je     0x414923
  414834:	movsd  xmm1,QWORD PTR [rip+0x10dec]        # 0x425628
  41483c:	mov    ecx,0x0
  414841:	ucomisd xmm0,xmm1
  414845:	setnp  al
  414848:	cmovne eax,ecx
  41484b:	test   al,al
  41484d:	jne    0x414910
  414853:	test   edx,edx
  414855:	je     0x414910
  41485b:	movsd  xmm0,QWORD PTR [rip+0x10ded]        # 0x425650
  414863:	test   edx,edx
  414865:	mov    eax,edx
  414867:	andpd  xmm0,xmm7
  41486b:	js     0x4149b0
  414871:	cmp    eax,0x1
  414874:	je     0x4148a0
  414876:	test   al,0x1
  414878:	movapd xmm3,xmm1
  41487c:	jne    0x4149c3
  414882:	movapd xmm2,xmm0
  414886:	movapd xmm0,xmm3
  41488a:	shr    eax,1
  41488c:	nop    DWORD PTR [rax+0x0]
  414890:	test   al,0x1
  414892:	mulsd  xmm2,xmm2
  414896:	je     0x41489c
  414898:	mulsd  xmm0,xmm2
  41489c:	shr    eax,1
  41489e:	jne    0x414890
  4148a0:	and    edx,0x1
  4148a3:	je     0x414914
  4148a5:	movq   rax,xmm7
  4148aa:	test   rax,rax
  4148ad:	jns    0x414914
  4148af:	movsd  xmm2,QWORD PTR [rip+0x10da9]        # 0x425660
  4148b7:	xorpd  xmm0,xmm2
  4148bb:	jmp    0x414914
  4148bd:	nop    DWORD PTR [rax]
  4148c0:	movsd  xmm1,QWORD PTR [rip+0x10d60]        # 0x425628
  4148c8:	mov    ecx,0x0
  4148cd:	ucomisd xmm0,xmm1
  4148d1:	setnp  al
  4148d4:	cmovne eax,ecx
  4148d7:	test   al,al
  4148d9:	jne    0x414910
  4148db:	test   edx,edx
  4148dd:	je     0x414910
  4148df:	mov    eax,edx
  4148e1:	and    eax,0x1
  4148e4:	test   edx,edx
  4148e6:	js     0x414a20
  4148ec:	test   eax,eax
  4148ee:	je     0x414901
  4148f0:	movq   rax,xmm7
  4148f5:	shr    rax,0x20
  4148f9:	test   eax,eax
  4148fb:	js     0x414a60
  414901:	pxor   xmm0,xmm0
  414905:	jmp    0x414914
  414907:	nop    WORD PTR [rax+rax*1+0x0]
  414910:	movapd xmm0,xmm1
  414914:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  414919:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  41491e:	add    rsp,0x78
  414922:	ret    
  414923:	test   ecx,ecx
  414925:	je     0x4149d0
  41492b:	movsd  xmm1,QWORD PTR [rip+0x10cf5]        # 0x425628
  414933:	mov    ecx,0x0
  414938:	ucomisd xmm0,xmm1
  41493c:	setnp  al
  41493f:	cmovne eax,ecx
  414942:	test   al,al
  414944:	jne    0x414910
  414946:	test   edx,edx
  414948:	je     0x414910
  41494a:	movq   rax,xmm7
  41494f:	shr    rax,0x20
  414953:	test   eax,eax
  414955:	js     0x414a70
  41495b:	movsd  xmm6,QWORD PTR [rip+0x10cbd]        # 0x425620
  414963:	mov    DWORD PTR [rsp+0x3c],edx
  414967:	call   0x419948
  41496c:	mov    edx,DWORD PTR [rsp+0x3c]
  414970:	pxor   xmm3,xmm3
  414974:	mov    DWORD PTR [rax],0x21
  41497a:	movapd xmm2,xmm7
  41497e:	movsd  QWORD PTR [rsp+0x20],xmm6
  414984:	mov    ecx,0x1
  414989:	cvtsi2sd xmm3,edx
  41498d:	lea    rdx,[rip+0x10c7c]        # 0x425610
  414994:	call   0x412900
  414999:	movapd xmm0,xmm6
  41499d:	movaps xmm6,XMMWORD PTR [rsp+0x50]
  4149a2:	movaps xmm7,XMMWORD PTR [rsp+0x60]
  4149a7:	add    rsp,0x78
  4149ab:	ret    
  4149ac:	nop    DWORD PTR [rax+0x0]
  4149b0:	movapd xmm4,xmm1
  4149b4:	neg    eax
  4149b6:	divsd  xmm4,xmm0
  4149ba:	movapd xmm0,xmm4
  4149be:	jmp    0x414871
  4149c3:	movapd xmm3,xmm0
  4149c7:	jmp    0x414882
  4149cc:	nop    DWORD PTR [rax+0x0]
  4149d0:	movsd  xmm1,QWORD PTR [rip+0x10c50]        # 0x425628
  4149d8:	mov    r8d,edx
  4149db:	and    r8d,0x1
  4149df:	mov    ecx,0x0
  4149e4:	ucomisd xmm0,xmm1
  4149e8:	setnp  al
  4149eb:	cmovne eax,ecx
  4149ee:	test   al,al
  4149f0:	jne    0x414910
  4149f6:	test   edx,edx
  4149f8:	je     0x414910
  4149fe:	movq   rax,xmm7
  414a03:	shr    rax,0x20
  414a07:	test   eax,eax
  414a09:	js     0x414a80
  414a0b:	test   edx,edx
  414a0d:	movsd  xmm0,QWORD PTR [rip+0x10c2b]        # 0x425640
  414a15:	jns    0x414914
  414a1b:	jmp    0x414901
  414a20:	test   eax,eax
  414a22:	je     0x414ae0
  414a28:	movq   rax,xmm7
  414a2d:	movsd  xmm0,QWORD PTR [rip+0x10c0b]        # 0x425640
  414a35:	shr    rax,0x20
  414a39:	test   eax,eax
  414a3b:	jns    0x414914
  414a41:	movsd  xmm0,QWORD PTR [rip+0x10bef]        # 0x425638
  414a49:	jmp    0x414914
  414a4e:	xchg   ax,ax
  414a50:	test   r8d,r8d
  414a53:	pxor   xmm0,xmm0
  414a57:	je     0x414914
  414a5d:	nop    DWORD PTR [rax]
  414a60:	movsd  xmm0,QWORD PTR [rip+0x10bc8]        # 0x425630
  414a68:	jmp    0x414914
  414a6d:	nop    DWORD PTR [rax]
  414a70:	movsd  xmm6,QWORD PTR [rip+0x10ba0]        # 0x425618
  414a78:	jmp    0x414963
  414a7d:	nop    DWORD PTR [rax]
  414a80:	mov    eax,r8d
  414a83:	mov    ecx,edx
  414a85:	xor    eax,0x1
  414a88:	shr    ecx,0x1f
  414a8b:	and    eax,0x1
  414a8e:	je     0x414a9c
  414a90:	test   cl,cl
  414a92:	pxor   xmm0,xmm0
  414a96:	jne    0x414914
  414a9c:	not    edx
  414a9e:	shr    edx,0x1f
  414aa1:	test   r8d,r8d
  414aa4:	je     0x414ab6
  414aa6:	test   dl,dl
  414aa8:	movsd  xmm0,QWORD PTR [rip+0x10b88]        # 0x425638
  414ab0:	jne    0x414914
  414ab6:	test   al,al
  414ab8:	je     0x414aca
  414aba:	test   dl,dl
  414abc:	movsd  xmm0,QWORD PTR [rip+0x10b7c]        # 0x425640
  414ac4:	jne    0x414914
  414aca:	test   cl,cl
  414acc:	jne    0x414a50
  414ace:	test   r8d,r8d
  414ad1:	movsd  xmm0,QWORD PTR [rip+0x10b5f]        # 0x425638
  414ad9:	jne    0x414914
  414adf:	nop
  414ae0:	movsd  xmm0,QWORD PTR [rip+0x10b58]        # 0x425640
  414ae8:	jmp    0x414914
  414aed:	nop
  414aee:	nop
  414aef:	nop
  414af0:	sub    rsp,0x58
  414af4:	mov    rax,QWORD PTR [rdx]
  414af7:	mov    r11,rdx
  414afa:	mov    edx,DWORD PTR [rdx+0x8]
  414afd:	mov    r10,rdx
  414b00:	and    r10w,0x7fff
  414b06:	jne    0x414b24
  414b08:	mov    rdx,rax
  414b0b:	shr    rdx,0x20
  414b0f:	or     eax,edx
  414b11:	jne    0x414b90
  414b13:	mov    DWORD PTR [rsp+0x44],0x0
  414b1b:	movzx  eax,WORD PTR [r11+0x8]
  414b20:	xor    edx,edx
  414b22:	jmp    0x414b4b
  414b24:	cmp    r10w,0x7fff
  414b2a:	je     0x414bb0
  414b30:	movzx  eax,WORD PTR [r11+0x8]
  414b35:	mov    DWORD PTR [rsp+0x44],0x1
  414b3d:	mov    edx,eax
  414b3f:	and    edx,0x7fff
  414b45:	sub    edx,0x403e
  414b4b:	and    eax,0x8000
  414b50:	mov    r10,QWORD PTR [rsp+0x80]
  414b58:	mov    DWORD PTR [r10],eax
  414b5b:	lea    rax,[rsp+0x48]
  414b60:	mov    QWORD PTR [rsp+0x30],r9
  414b65:	mov    DWORD PTR [rsp+0x20],ecx
  414b69:	lea    r9,[rsp+0x44]
  414b6e:	lea    rcx,[rip+0x951b]        # 0x41e090
  414b75:	mov    DWORD PTR [rsp+0x28],r8d
  414b7a:	mov    QWORD PTR [rsp+0x38],rax
  414b7f:	mov    r8,r11
  414b82:	call   0x417180
  414b87:	add    rsp,0x58
  414b8b:	ret    
  414b8c:	nop    DWORD PTR [rax+0x0]
  414b90:	test   edx,edx
  414b92:	js     0x414b30
  414b94:	mov    DWORD PTR [rsp+0x44],0x2
  414b9c:	movzx  eax,WORD PTR [r11+0x8]
  414ba1:	mov    edx,0xffffbfc3
  414ba6:	jmp    0x414b4b
  414ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  414bb0:	mov    rdx,rax
  414bb3:	shr    rdx,0x20
  414bb7:	and    edx,0x7fffffff
  414bbd:	or     edx,eax
  414bbf:	jne    0x414bd5
  414bc1:	mov    DWORD PTR [rsp+0x44],0x3
  414bc9:	movzx  eax,WORD PTR [r11+0x8]
  414bce:	xor    edx,edx
  414bd0:	jmp    0x414b4b
  414bd5:	mov    DWORD PTR [rsp+0x44],0x4
  414bdd:	xor    edx,edx
  414bdf:	xor    eax,eax
  414be1:	jmp    0x414b50
  414be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414bf0:	push   rbx
  414bf1:	sub    rsp,0x20
  414bf5:	mov    rbx,rdx
  414bf8:	mov    edx,DWORD PTR [rdx+0x8]
  414bfb:	test   dh,0x40
  414bfe:	jne    0x414c08
  414c00:	mov    eax,DWORD PTR [rbx+0x24]
  414c03:	cmp    DWORD PTR [rbx+0x28],eax
  414c06:	jle    0x414c1a
  414c08:	and    dh,0x20
  414c0b:	jne    0x414c30
  414c0d:	movsxd rax,DWORD PTR [rbx+0x24]
  414c11:	mov    rdx,QWORD PTR [rbx]
  414c14:	mov    BYTE PTR [rdx+rax*1],cl
  414c17:	mov    eax,DWORD PTR [rbx+0x24]
  414c1a:	add    eax,0x1
  414c1d:	mov    DWORD PTR [rbx+0x24],eax
  414c20:	add    rsp,0x20
  414c24:	pop    rbx
  414c25:	ret    
  414c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c30:	mov    rdx,QWORD PTR [rbx]
  414c33:	call   0x4198e0
  414c38:	mov    eax,DWORD PTR [rbx+0x24]
  414c3b:	add    eax,0x1
  414c3e:	mov    DWORD PTR [rbx+0x24],eax
  414c41:	add    rsp,0x20
  414c45:	pop    rbx
  414c46:	ret    
  414c47:	nop    WORD PTR [rax+rax*1+0x0]
  414c50:	push   r14
  414c52:	push   r13
  414c54:	push   r12
  414c56:	push   rbp
  414c57:	push   rdi
  414c58:	push   rsi
  414c59:	push   rbx
  414c5a:	sub    rsp,0x40
  414c5e:	lea    r14,[rsp+0x2c]
  414c63:	lea    r13,[rsp+0x30]
  414c68:	mov    ebx,edx
  414c6a:	mov    rsi,r8
  414c6d:	xor    edx,edx
  414c6f:	mov    r12,rcx
  414c72:	mov    r8,r14
  414c75:	mov    rcx,r13
  414c78:	call   0x419660
  414c7d:	mov    ebp,DWORD PTR [rsi+0x10]
  414c80:	cmp    ebp,ebx
  414c82:	jge    0x414d29
  414c88:	test   ebp,ebp
  414c8a:	js     0x414d29
  414c90:	mov    eax,DWORD PTR [rsi+0xc]
  414c93:	cmp    ebp,eax
  414c95:	jge    0x414d36
  414c9b:	sub    eax,ebp
  414c9d:	test   eax,eax
  414c9f:	mov    DWORD PTR [rsi+0xc],eax
  414ca2:	jle    0x414cb0
  414ca4:	test   BYTE PTR [rsi+0x9],0x4
  414ca8:	je     0x414d42
  414cae:	xchg   ax,ax
  414cb0:	test   ebp,ebp
  414cb2:	jle    0x414d0d
  414cb4:	add    r12,0x2
  414cb8:	movzx  edx,WORD PTR [r12-0x2]
  414cbe:	mov    r8,r14
  414cc1:	mov    rcx,r13
  414cc4:	call   0x419660
  414cc9:	test   eax,eax
  414ccb:	jle    0x414d0d
  414ccd:	sub    eax,0x1
  414cd0:	mov    rbx,r13
  414cd3:	lea    rdi,[r13+rax*1+0x1]
  414cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  414ce0:	add    rbx,0x1
  414ce4:	movsx  ecx,BYTE PTR [rbx-0x1]
  414ce8:	mov    rdx,rsi
  414ceb:	call   0x414bf0
  414cf0:	cmp    rbx,rdi
  414cf3:	jne    0x414ce0
  414cf5:	sub    ebp,0x1
  414cf8:	jmp    0x414cb0
  414cfa:	nop    WORD PTR [rax+rax*1+0x0]
  414d00:	mov    rdx,rsi
  414d03:	mov    ecx,0x20
  414d08:	call   0x414bf0
  414d0d:	mov    eax,DWORD PTR [rsi+0xc]
  414d10:	lea    edx,[rax-0x1]
  414d13:	test   eax,eax
  414d15:	mov    DWORD PTR [rsi+0xc],edx
  414d18:	jg     0x414d00
  414d1a:	add    rsp,0x40
  414d1e:	pop    rbx
  414d1f:	pop    rsi
  414d20:	pop    rdi
  414d21:	pop    rbp
  414d22:	pop    r12
  414d24:	pop    r13
  414d26:	pop    r14
  414d28:	ret    
  414d29:	mov    eax,DWORD PTR [rsi+0xc]
  414d2c:	mov    ebp,ebx
  414d2e:	cmp    ebp,eax
  414d30:	jl     0x414c9b
  414d36:	mov    DWORD PTR [rsi+0xc],0xffffffff
  414d3d:	jmp    0x414cb0
  414d42:	sub    eax,0x1
  414d45:	mov    DWORD PTR [rsi+0xc],eax
  414d48:	nop    DWORD PTR [rax+rax*1+0x0]
  414d50:	mov    rdx,rsi
  414d53:	mov    ecx,0x20
  414d58:	call   0x414bf0
  414d5d:	mov    eax,DWORD PTR [rsi+0xc]
  414d60:	lea    edx,[rax-0x1]
  414d63:	test   eax,eax
  414d65:	mov    DWORD PTR [rsi+0xc],edx
  414d68:	jne    0x414d50
  414d6a:	jmp    0x414cb0
  414d6f:	nop
  414d70:	push   rdi
  414d71:	push   rsi
  414d72:	push   rbx
  414d73:	sub    rsp,0x20
  414d77:	mov    edi,DWORD PTR [r8+0x10]
  414d7b:	mov    rsi,rcx
  414d7e:	mov    rbx,r8
  414d81:	cmp    edi,edx
  414d83:	jge    0x414e00
  414d85:	test   edi,edi
  414d87:	js     0x414e00
  414d89:	mov    eax,DWORD PTR [rbx+0xc]
  414d8c:	cmp    edi,eax
  414d8e:	jge    0x414e09
  414d90:	sub    eax,edi
  414d92:	test   eax,eax
  414d94:	mov    DWORD PTR [rbx+0xc],eax
  414d97:	jle    0x414e62
  414d9d:	test   BYTE PTR [rbx+0x9],0x4
  414da1:	jne    0x414e30
  414da7:	sub    eax,0x1
  414daa:	mov    DWORD PTR [rbx+0xc],eax
  414dad:	nop    DWORD PTR [rax]
  414db0:	mov    rdx,rbx
  414db3:	mov    ecx,0x20
  414db8:	call   0x414bf0
  414dbd:	mov    eax,DWORD PTR [rbx+0xc]
  414dc0:	mov    edx,eax
  414dc2:	sub    eax,0x1
  414dc5:	test   edx,edx
  414dc7:	mov    DWORD PTR [rbx+0xc],eax
  414dca:	jne    0x414db0
  414dcc:	test   edi,edi
  414dce:	lea    edx,[rdi-0x1]
  414dd1:	je     0x414e50
  414dd3:	lea    rdi,[rsi+rdx*1+0x1]
  414dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  414de0:	add    rsi,0x1
  414de4:	movsx  ecx,BYTE PTR [rsi-0x1]
  414de8:	mov    rdx,rbx
  414deb:	call   0x414bf0
  414df0:	cmp    rsi,rdi
  414df3:	jne    0x414de0
  414df5:	jmp    0x414e4d
  414df7:	nop    WORD PTR [rax+rax*1+0x0]
  414e00:	mov    eax,DWORD PTR [rbx+0xc]
  414e03:	mov    edi,edx
  414e05:	cmp    edi,eax
  414e07:	jl     0x414d90
  414e09:	test   edi,edi
  414e0b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  414e12:	lea    edx,[rdi-0x1]
  414e15:	jne    0x414dd3
  414e17:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  414e1e:	add    rsp,0x20
  414e22:	pop    rbx
  414e23:	pop    rsi
  414e24:	pop    rdi
  414e25:	ret    
  414e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e30:	test   edi,edi
  414e32:	lea    edx,[rdi-0x1]
  414e35:	jne    0x414dd3
  414e37:	sub    eax,0x1
  414e3a:	mov    DWORD PTR [rbx+0xc],eax
  414e3d:	nop    DWORD PTR [rax]
  414e40:	mov    rdx,rbx
  414e43:	mov    ecx,0x20
  414e48:	call   0x414bf0
  414e4d:	mov    eax,DWORD PTR [rbx+0xc]
  414e50:	lea    edx,[rax-0x1]
  414e53:	test   eax,eax
  414e55:	mov    DWORD PTR [rbx+0xc],edx
  414e58:	jg     0x414e40
  414e5a:	add    rsp,0x20
  414e5e:	pop    rbx
  414e5f:	pop    rsi
  414e60:	pop    rdi
  414e61:	ret    
  414e62:	test   edi,edi
  414e64:	lea    edx,[rdi-0x1]
  414e67:	jne    0x414dd3
  414e6d:	sub    eax,0x1
  414e70:	mov    DWORD PTR [rbx+0xc],eax
  414e73:	jmp    0x414e1e
  414e75:	nop
  414e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e80:	sub    rsp,0x38
  414e84:	test   ecx,ecx
  414e86:	mov    DWORD PTR [r8+0x10],0xffffffff
  414e8e:	je     0x414ed4
  414e90:	lea    rcx,[rsp+0x20]
  414e95:	mov    r11d,DWORD PTR [r8+0x8]
  414e99:	mov    BYTE PTR [rsp+0x20],0x2d
  414e9e:	lea    r10,[rcx+0x1]
  414ea2:	and    r11d,0x20
  414ea6:	xor    r9d,r9d
  414ea9:	movzx  eax,BYTE PTR [rdx+r9*1]
  414eae:	and    eax,0xffffffdf
  414eb1:	or     eax,r11d
  414eb4:	mov    BYTE PTR [r10+r9*1],al
  414eb8:	add    r9,0x1
  414ebc:	cmp    r9,0x3
  414ec0:	jne    0x414ea9
  414ec2:	lea    rdx,[r10+0x3]
  414ec6:	sub    rdx,rcx
  414ec9:	call   0x414d70
  414ece:	nop
  414ecf:	add    rsp,0x38
  414ed3:	ret    
  414ed4:	mov    r11d,DWORD PTR [r8+0x8]
  414ed8:	test   r11d,0x100
  414edf:	je     0x414ef1
  414ee1:	lea    rcx,[rsp+0x20]
  414ee6:	mov    BYTE PTR [rsp+0x20],0x2b
  414eeb:	lea    r10,[rcx+0x1]
  414eef:	jmp    0x414ea2
  414ef1:	test   r11b,0x40
  414ef5:	je     0x414f10
  414ef7:	lea    rcx,[rsp+0x20]
  414efc:	mov    BYTE PTR [rsp+0x20],0x20
  414f01:	lea    r10,[rcx+0x1]
  414f05:	jmp    0x414ea2
  414f07:	nop    WORD PTR [rax+rax*1+0x0]
  414f10:	lea    rcx,[rsp+0x20]
  414f15:	mov    r10,rcx
  414f18:	jmp    0x414ea2
  414f1a:	nop    WORD PTR [rax+rax*1+0x0]
  414f20:	push   rbp
  414f21:	push   r12
  414f23:	push   rdi
  414f24:	push   rsi
  414f25:	push   rbx
  414f26:	mov    rbp,rsp
  414f29:	sub    rsp,0x30
  414f2d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  414f31:	mov    rsi,rcx
  414f34:	je     0x414fd0
  414f3a:	movzx  edx,WORD PTR [rcx+0x18]
  414f3e:	test   dx,dx
  414f41:	je     0x414fa2
  414f43:	movsxd rax,DWORD PTR [rsi+0x14]
  414f47:	mov    r12,rsp
  414f4a:	add    rax,0xf
  414f4e:	and    rax,0xfffffffffffffff0
  414f52:	call   0x4139f0
  414f57:	sub    rsp,rax
  414f5a:	lea    r8,[rbp-0x4]
  414f5e:	mov    DWORD PTR [rbp-0x4],0x0
  414f65:	lea    rbx,[rsp+0x20]
  414f6a:	mov    rcx,rbx
  414f6d:	call   0x419660
  414f72:	test   eax,eax
  414f74:	jle    0x414fc0
  414f76:	sub    eax,0x1
  414f79:	lea    rdi,[rbx+rax*1+0x1]
  414f7e:	xchg   ax,ax
  414f80:	add    rbx,0x1
  414f84:	movsx  ecx,BYTE PTR [rbx-0x1]
  414f88:	mov    rdx,rsi
  414f8b:	call   0x414bf0
  414f90:	cmp    rbx,rdi
  414f93:	jne    0x414f80
  414f95:	mov    rsp,r12
  414f98:	mov    rsp,rbp
  414f9b:	pop    rbx
  414f9c:	pop    rsi
  414f9d:	pop    rdi
  414f9e:	pop    r12
  414fa0:	pop    rbp
  414fa1:	ret    
  414fa2:	mov    rdx,rsi
  414fa5:	mov    ecx,0x2e
  414faa:	call   0x414bf0
  414faf:	nop
  414fb0:	mov    rsp,rbp
  414fb3:	pop    rbx
  414fb4:	pop    rsi
  414fb5:	pop    rdi
  414fb6:	pop    r12
  414fb8:	pop    rbp
  414fb9:	ret    
  414fba:	nop    WORD PTR [rax+rax*1+0x0]
  414fc0:	mov    rdx,rsi
  414fc3:	mov    ecx,0x2e
  414fc8:	call   0x414bf0
  414fcd:	jmp    0x414f95
  414fcf:	nop
  414fd0:	mov    DWORD PTR [rbp-0x4],0x0
  414fd7:	call   0x419898
  414fdc:	mov    rdx,QWORD PTR [rax]
  414fdf:	lea    rcx,[rbp-0x6]
  414fe3:	lea    r9,[rbp-0x4]
  414fe7:	mov    r8d,0x10
  414fed:	call   0x4193e0
  414ff2:	test   eax,eax
  414ff4:	jle    0x415006
  414ff6:	movzx  edx,WORD PTR [rbp-0x6]
  414ffa:	mov    WORD PTR [rsi+0x18],dx
  414ffe:	mov    DWORD PTR [rsi+0x14],eax
  415001:	jmp    0x414f3e
  415006:	movzx  edx,WORD PTR [rsi+0x18]
  41500a:	jmp    0x414ffe
  41500c:	nop    DWORD PTR [rax+0x0]
  415010:	push   r12
  415012:	push   rbp
  415013:	push   rdi
  415014:	push   rsi
  415015:	push   rbx
  415016:	sub    rsp,0x20
  41501a:	mov    esi,r8d
  41501d:	mov    ebp,ecx
  41501f:	mov    rdi,rdx
  415022:	test   esi,esi
  415024:	mov    rbx,r9
  415027:	mov    r8d,DWORD PTR [r9+0xc]
  41502b:	jle    0x415202
  415031:	cmp    esi,r8d
  415034:	jg     0x415170
  41503a:	sub    r8d,esi
  41503d:	mov    DWORD PTR [r9+0xc],r8d
  415041:	test   r8d,r8d
  415044:	js     0x415170
  41504a:	mov    eax,DWORD PTR [rbx+0x10]
  41504d:	cmp    eax,r8d
  415050:	jge    0x415170
  415056:	sub    r8d,eax
  415059:	test   r8d,r8d
  41505c:	mov    DWORD PTR [rbx+0xc],r8d
  415060:	jle    0x41517d
  415066:	test   eax,eax
  415068:	jle    0x4152b5
  41506e:	sub    r8d,0x1
  415072:	test   esi,esi
  415074:	mov    DWORD PTR [rbx+0xc],r8d
  415078:	jle    0x415084
  41507a:	test   BYTE PTR [rbx+0x9],0x10
  41507e:	jne    0x41518f
  415084:	test   r8d,r8d
  415087:	jle    0x4150cd
  415089:	test   ebp,ebp
  41508b:	jne    0x41509b
  41508d:	mov    eax,DWORD PTR [rbx+0x8]
  415090:	test   eax,0x1c0
  415095:	je     0x415295
  41509b:	sub    r8d,0x1
  41509f:	test   r8d,r8d
  4150a2:	mov    DWORD PTR [rbx+0xc],r8d
  4150a6:	jle    0x4150cd
  4150a8:	test   DWORD PTR [rbx+0x8],0x600
  4150af:	jne    0x4150cd
  4150b1:	jmp    0x4150c0
  4150b3:	mov    rdx,rbx
  4150b6:	mov    ecx,0x20
  4150bb:	call   0x414bf0
  4150c0:	mov    eax,DWORD PTR [rbx+0xc]
  4150c3:	lea    edx,[rax-0x1]
  4150c6:	test   eax,eax
  4150c8:	mov    DWORD PTR [rbx+0xc],edx
  4150cb:	jg     0x4150b3
  4150cd:	test   ebp,ebp
  4150cf:	jne    0x4151f0
  4150d5:	mov    eax,DWORD PTR [rbx+0x8]
  4150d8:	test   ah,0x1
  4150db:	jne    0x415220
  4150e1:	test   al,0x40
  4150e3:	jne    0x4152a3
  4150e9:	mov    edx,DWORD PTR [rbx+0xc]
  4150ec:	test   edx,edx
  4150ee:	jle    0x415103
  4150f0:	mov    eax,DWORD PTR [rbx+0x8]
  4150f3:	and    eax,0x600
  4150f8:	cmp    eax,0x200
  4150fd:	je     0x415232
  415103:	test   esi,esi
  415105:	jle    0x415262
  41510b:	lea    r12,[rbx+0x20]
  41510f:	mov    ebp,0x55555556
  415114:	movzx  eax,BYTE PTR [rdi]
  415117:	mov    ecx,0x30
  41511c:	test   al,al
  41511e:	je     0x415127
  415120:	add    rdi,0x1
  415124:	movsx  ecx,al
  415127:	mov    rdx,rbx
  41512a:	call   0x414bf0
  41512f:	sub    esi,0x1
  415132:	je     0x415350
  415138:	test   BYTE PTR [rbx+0x9],0x10
  41513c:	je     0x415114
  41513e:	cmp    WORD PTR [rbx+0x20],0x0
  415143:	je     0x415114
  415145:	mov    eax,esi
  415147:	imul   ebp
  415149:	mov    eax,esi
  41514b:	sar    eax,0x1f
  41514e:	sub    edx,eax
  415150:	lea    eax,[rdx+rdx*2]
  415153:	cmp    esi,eax
  415155:	jne    0x415114
  415157:	mov    r8,rbx
  41515a:	mov    edx,0x1
  41515f:	mov    rcx,r12
  415162:	call   0x414c50
  415167:	jmp    0x415114
  415169:	nop    DWORD PTR [rax+0x0]
  415170:	mov    DWORD PTR [rbx+0xc],0xffffffff
  415177:	mov    r8d,0xffffffff
  41517d:	test   esi,esi
  41517f:	jle    0x4150cd
  415185:	test   BYTE PTR [rbx+0x9],0x10
  415189:	je     0x4150cd
  41518f:	cmp    WORD PTR [rbx+0x20],0x0
  415194:	je     0x415084
  41519a:	lea    ecx,[rsi+0x2]
  41519d:	mov    edx,0x55555556
  4151a2:	mov    eax,ecx
  4151a4:	sar    ecx,0x1f
  4151a7:	imul   edx
  4151a9:	sub    edx,ecx
  4151ab:	cmp    edx,0x1
  4151ae:	jle    0x415084
  4151b4:	test   r8d,r8d
  4151b7:	jle    0x4150cd
  4151bd:	mov    eax,r8d
  4151c0:	sub    eax,edx
  4151c2:	add    eax,0x1
  4151c5:	jmp    0x4151d9
  4151c7:	nop    WORD PTR [rax+rax*1+0x0]
  4151d0:	test   r8d,r8d
  4151d3:	je     0x415344
  4151d9:	sub    r8d,0x1
  4151dd:	cmp    r8d,eax
  4151e0:	jne    0x4151d0
  4151e2:	mov    DWORD PTR [rbx+0xc],r8d
  4151e6:	jmp    0x415084
  4151eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4151f0:	mov    rdx,rbx
  4151f3:	mov    ecx,0x2d
  4151f8:	call   0x414bf0
  4151fd:	jmp    0x4150e9
  415202:	test   r8d,r8d
  415205:	jle    0x415041
  41520b:	sub    r8d,0x1
  41520f:	mov    DWORD PTR [r9+0xc],r8d
  415213:	jmp    0x41504a
  415218:	nop    DWORD PTR [rax+rax*1+0x0]
  415220:	mov    rdx,rbx
  415223:	mov    ecx,0x2b
  415228:	call   0x414bf0
  41522d:	jmp    0x4150e9
  415232:	sub    edx,0x1
  415235:	mov    DWORD PTR [rbx+0xc],edx
  415238:	nop    DWORD PTR [rax+rax*1+0x0]
  415240:	mov    rdx,rbx
  415243:	mov    ecx,0x30
  415248:	call   0x414bf0
  41524d:	mov    eax,DWORD PTR [rbx+0xc]
  415250:	lea    edx,[rax-0x1]
  415253:	test   eax,eax
  415255:	mov    DWORD PTR [rbx+0xc],edx
  415258:	jg     0x415240
  41525a:	test   esi,esi
  41525c:	jg     0x41510b
  415262:	mov    rdx,rbx
  415265:	mov    ecx,0x30
  41526a:	call   0x414bf0
  41526f:	mov    eax,DWORD PTR [rbx+0x10]
  415272:	test   eax,eax
  415274:	jg     0x4152e2
  415276:	test   BYTE PTR [rbx+0x9],0x8
  41527a:	jne    0x4152e2
  41527c:	test   esi,esi
  41527e:	jne    0x415326
  415284:	sub    eax,0x1
  415287:	mov    DWORD PTR [rbx+0x10],eax
  41528a:	add    rsp,0x20
  41528e:	pop    rbx
  41528f:	pop    rsi
  415290:	pop    rdi
  415291:	pop    rbp
  415292:	pop    r12
  415294:	ret    
  415295:	test   ah,0x6
  415298:	je     0x4150c0
  41529e:	jmp    0x4150d8
  4152a3:	mov    rdx,rbx
  4152a6:	mov    ecx,0x20
  4152ab:	call   0x414bf0
  4152b0:	jmp    0x4150e9
  4152b5:	mov    eax,DWORD PTR [rbx+0x8]
  4152b8:	test   ah,0x8
  4152bb:	jne    0x41506e
  4152c1:	test   esi,esi
  4152c3:	jle    0x415089
  4152c9:	test   ah,0x10
  4152cc:	je     0x415089
  4152d2:	cmp    WORD PTR [rbx+0x20],0x0
  4152d7:	jne    0x41519a
  4152dd:	jmp    0x415089
  4152e2:	mov    rcx,rbx
  4152e5:	call   0x414f20
  4152ea:	test   esi,esi
  4152ec:	je     0x41530b
  4152ee:	jmp    0x415323
  4152f0:	movzx  eax,BYTE PTR [rdi]
  4152f3:	mov    ecx,0x30
  4152f8:	test   al,al
  4152fa:	je     0x415303
  4152fc:	add    rdi,0x1
  415300:	movsx  ecx,al
  415303:	mov    rdx,rbx
  415306:	call   0x414bf0
  41530b:	mov    eax,DWORD PTR [rbx+0x10]
  41530e:	lea    edx,[rax-0x1]
  415311:	test   eax,eax
  415313:	mov    DWORD PTR [rbx+0x10],edx
  415316:	jg     0x4152f0
  415318:	add    rsp,0x20
  41531c:	pop    rbx
  41531d:	pop    rsi
  41531e:	pop    rdi
  41531f:	pop    rbp
  415320:	pop    r12
  415322:	ret    
  415323:	mov    eax,DWORD PTR [rbx+0x10]
  415326:	add    eax,esi
  415328:	mov    DWORD PTR [rbx+0x10],eax
  41532b:	nop    DWORD PTR [rax+rax*1+0x0]
  415330:	mov    rdx,rbx
  415333:	mov    ecx,0x30
  415338:	call   0x414bf0
  41533d:	add    esi,0x1
  415340:	jne    0x415330
  415342:	jmp    0x41530b
  415344:	mov    DWORD PTR [rbx+0xc],0x0
  41534b:	jmp    0x4150cd
  415350:	mov    eax,DWORD PTR [rbx+0x10]
  415353:	test   eax,eax
  415355:	jle    0x415361
  415357:	mov    rcx,rbx
  41535a:	call   0x414f20
  41535f:	jmp    0x41530b
  415361:	test   BYTE PTR [rbx+0x9],0x8
  415365:	jne    0x415357
  415367:	jmp    0x415284
  41536c:	nop    DWORD PTR [rax+0x0]
  415370:	push   rsi
  415371:	push   rbx
  415372:	sub    rsp,0x68
  415376:	mov    r8d,DWORD PTR [rdx+0x10]
  41537a:	fld    TBYTE PTR [rcx]
  41537c:	mov    rbx,rdx
  41537f:	test   r8d,r8d
  415382:	js     0x415420
  415388:	lea    rdx,[rsp+0x30]
  41538d:	lea    r9,[rsp+0x4c]
  415392:	mov    ecx,0x3
  415397:	fstp   TBYTE PTR [rsp+0x50]
  41539b:	mov    rax,QWORD PTR [rsp+0x50]
  4153a0:	mov    QWORD PTR [rsp+0x30],rax
  4153a5:	mov    rax,QWORD PTR [rsp+0x58]
  4153aa:	mov    QWORD PTR [rsp+0x38],rax
  4153af:	lea    rax,[rsp+0x48]
  4153b4:	mov    QWORD PTR [rsp+0x20],rax
  4153b9:	call   0x414af0
  4153be:	mov    r8d,DWORD PTR [rsp+0x4c]
  4153c3:	mov    rsi,rax
  4153c6:	cmp    r8d,0xffff8000
  4153cd:	je     0x415432
  4153cf:	mov    ecx,DWORD PTR [rsp+0x48]
  4153d3:	mov    rdx,rax
  4153d6:	mov    r9,rbx
  4153d9:	call   0x415010
  4153de:	mov    eax,DWORD PTR [rbx+0xc]
  4153e1:	lea    edx,[rax-0x1]
  4153e4:	test   eax,eax
  4153e6:	mov    DWORD PTR [rbx+0xc],edx
  4153e9:	jle    0x41540e
  4153eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4153f0:	mov    rdx,rbx
  4153f3:	mov    ecx,0x20
  4153f8:	call   0x414bf0
  4153fd:	mov    r8d,DWORD PTR [rbx+0xc]
  415401:	lea    r9d,[r8-0x1]
  415405:	test   r8d,r8d
  415408:	mov    DWORD PTR [rbx+0xc],r9d
  41540c:	jg     0x4153f0
  41540e:	mov    rcx,rsi
  415411:	call   0x416fe0
  415416:	nop
  415417:	add    rsp,0x68
  41541b:	pop    rbx
  41541c:	pop    rsi
  41541d:	ret    
  41541e:	xchg   ax,ax
  415420:	mov    DWORD PTR [rdx+0x10],0x6
  415427:	mov    r8d,0x6
  41542d:	jmp    0x415388
  415432:	mov    ecx,DWORD PTR [rsp+0x48]
  415436:	mov    r8,rbx
  415439:	mov    rdx,rax
  41543c:	call   0x414e80
  415441:	mov    rcx,rsi
  415444:	call   0x416fe0
  415449:	nop
  41544a:	add    rsp,0x68
  41544e:	pop    rbx
  41544f:	pop    rsi
  415450:	ret    
  415451:	nop    DWORD PTR [rax+rax*1+0x0]
  415456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415460:	push   rbp
  415461:	push   r13
  415463:	push   r12
  415465:	push   rdi
  415466:	push   rsi
  415467:	push   rbx
  415468:	sub    rsp,0x28
  41546c:	lea    rbp,[rsp+0x80]
  415474:	mov    ebx,DWORD PTR [rdx+0x10]
  415477:	mov    r11d,DWORD PTR [rdx+0x8]
  41547b:	mov    r8d,0x0
  415481:	mov    rsi,rdx
  415484:	test   ebx,ebx
  415486:	cmovns r8d,ebx
  41548a:	add    r8d,0x17
  41548e:	test   r11d,0x1000
  415495:	je     0x4154a2
  415497:	cmp    WORD PTR [rdx+0x20],0x0
  41549c:	jne    0x415692
  4154a2:	movsxd r13,DWORD PTR [rsi+0xc]
  4154a6:	movsxd rax,r8d
  4154a9:	cmp    r8d,r13d
  4154ac:	cmovl  rax,r13
  4154b0:	add    rax,0x1e
  4154b4:	and    rax,0xfffffffffffffff0
  4154b8:	call   0x4139f0
  4154bd:	sub    rsp,rax
  4154c0:	test   r11b,0x80
  4154c4:	lea    r12,[rsp+0x20]
  4154c9:	je     0x4154dc
  4154cb:	test   rcx,rcx
  4154ce:	js     0x415720
  4154d4:	and    r11b,0x7f
  4154d8:	mov    DWORD PTR [rsi+0x8],r11d
  4154dc:	test   rcx,rcx
  4154df:	je     0x415728
  4154e5:	mov    r10d,r11d
  4154e8:	mov    r8,r12
  4154eb:	movabs r9,0xcccccccccccccccd
  4154f5:	and    r10d,0x1000
  4154fc:	jmp    0x415533
  4154fe:	xchg   ax,ax
  415500:	cmp    r12,rdi
  415503:	je     0x415530
  415505:	test   r10d,r10d
  415508:	je     0x415530
  41550a:	cmp    WORD PTR [rsi+0x20],0x0
  41550f:	je     0x415530
  415511:	mov    rax,rdi
  415514:	sub    rax,r12
  415517:	cqo    
  415519:	shr    rdx,0x3e
  41551d:	add    rax,rdx
  415520:	and    eax,0x3
  415523:	sub    rax,rdx
  415526:	cmp    rax,0x3
  41552a:	je     0x415670
  415530:	mov    r8,rdi
  415533:	mov    rax,rcx
  415536:	lea    rdi,[r8+0x1]
  41553a:	mul    r9
  41553d:	shr    rdx,0x3
  415541:	lea    rax,[rdx+rdx*4]
  415545:	add    rax,rax
  415548:	sub    rcx,rax
  41554b:	add    ecx,0x30
  41554e:	test   rdx,rdx
  415551:	mov    BYTE PTR [r8],cl
  415554:	mov    rcx,rdx
  415557:	jne    0x415500
  415559:	test   ebx,ebx
  41555b:	jle    0x415595
  41555d:	mov    rax,r12
  415560:	sub    rax,rdi
  415563:	add    eax,ebx
  415565:	test   eax,eax
  415567:	jle    0x415595
  415569:	sub    eax,0x1
  41556c:	mov    rdx,rax
  41556f:	lea    rcx,[rdi+rax*1+0x1]
  415574:	mov    rax,rdi
  415577:	nop    WORD PTR [rax+rax*1+0x0]
  415580:	add    rax,0x1
  415584:	mov    BYTE PTR [rax-0x1],0x30
  415588:	cmp    rax,rcx
  41558b:	jne    0x415580
  41558d:	movsxd rax,edx
  415590:	lea    rdi,[rdi+rax*1+0x1]
  415595:	cmp    r12,rdi
  415598:	jne    0x4155a5
  41559a:	test   ebx,ebx
  41559c:	je     0x4155a5
  41559e:	mov    BYTE PTR [rdi],0x30
  4155a1:	add    rdi,0x1
  4155a5:	test   r13d,r13d
  4155a8:	jle    0x41560e
  4155aa:	mov    rax,r12
  4155ad:	sub    rax,rdi
  4155b0:	add    r13d,eax
  4155b3:	test   r13d,r13d
  4155b6:	mov    DWORD PTR [rsi+0xc],r13d
  4155ba:	jle    0x41560e
  4155bc:	test   r11d,0x1c0
  4155c3:	je     0x4155cd
  4155c5:	sub    r13d,0x1
  4155c9:	mov    DWORD PTR [rsi+0xc],r13d
  4155cd:	test   ebx,ebx
  4155cf:	js     0x4156d0
  4155d5:	test   r11d,0x400
  4155dc:	jne    0x41560e
  4155de:	mov    eax,DWORD PTR [rsi+0xc]
  4155e1:	lea    edx,[rax-0x1]
  4155e4:	test   eax,eax
  4155e6:	mov    DWORD PTR [rsi+0xc],edx
  4155e9:	jle    0x41560e
  4155eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4155f0:	mov    rdx,rsi
  4155f3:	mov    ecx,0x20
  4155f8:	call   0x414bf0
  4155fd:	mov    eax,DWORD PTR [rsi+0xc]
  415600:	lea    edx,[rax-0x1]
  415603:	test   eax,eax
  415605:	mov    DWORD PTR [rsi+0xc],edx
  415608:	jg     0x4155f0
  41560a:	mov    r11d,DWORD PTR [rsi+0x8]
  41560e:	test   r11b,0x80
  415612:	je     0x415680
  415614:	lea    rbx,[rdi+0x1]
  415618:	mov    BYTE PTR [rdi],0x2d
  41561b:	cmp    r12,rbx
  41561e:	jae    0x41564e
  415620:	sub    rbx,0x1
  415624:	movsx  ecx,BYTE PTR [rbx]
  415627:	mov    rdx,rsi
  41562a:	call   0x414bf0
  41562f:	cmp    rbx,r12
  415632:	jne    0x415620
  415634:	mov    eax,DWORD PTR [rsi+0xc]
  415637:	lea    edx,[rax-0x1]
  41563a:	test   eax,eax
  41563c:	mov    DWORD PTR [rsi+0xc],edx
  41563f:	jle    0x41565b
  415641:	mov    rdx,rsi
  415644:	mov    ecx,0x20
  415649:	call   0x414bf0
  41564e:	mov    eax,DWORD PTR [rsi+0xc]
  415651:	lea    edx,[rax-0x1]
  415654:	test   eax,eax
  415656:	mov    DWORD PTR [rsi+0xc],edx
  415659:	jg     0x415641
  41565b:	lea    rsp,[rbp-0x58]
  41565f:	pop    rbx
  415660:	pop    rsi
  415661:	pop    rdi
  415662:	pop    r12
  415664:	pop    r13
  415666:	pop    rbp
  415667:	ret    
  415668:	nop    DWORD PTR [rax+rax*1+0x0]
  415670:	lea    rdi,[r8+0x2]
  415674:	mov    BYTE PTR [r8+0x1],0x2c
  415679:	jmp    0x415530
  41567e:	xchg   ax,ax
  415680:	test   r11d,0x100
  415687:	je     0x4156b0
  415689:	lea    rbx,[rdi+0x1]
  41568d:	mov    BYTE PTR [rdi],0x2b
  415690:	jmp    0x41561b
  415692:	mov    eax,r8d
  415695:	mov    edx,0x55555556
  41569a:	imul   edx
  41569c:	mov    eax,r8d
  41569f:	sar    eax,0x1f
  4156a2:	sub    edx,eax
  4156a4:	add    r8d,edx
  4156a7:	jmp    0x4154a2
  4156ac:	nop    DWORD PTR [rax+0x0]
  4156b0:	and    r11d,0x40
  4156b4:	mov    rbx,rdi
  4156b7:	je     0x41561b
  4156bd:	add    rbx,0x1
  4156c1:	mov    BYTE PTR [rdi],0x20
  4156c4:	jmp    0x41561b
  4156c9:	nop    DWORD PTR [rax+0x0]
  4156d0:	mov    eax,r11d
  4156d3:	and    eax,0x600
  4156d8:	cmp    eax,0x200
  4156dd:	jne    0x4155d5
  4156e3:	mov    eax,DWORD PTR [rsi+0xc]
  4156e6:	lea    ecx,[rax-0x1]
  4156e9:	test   eax,eax
  4156eb:	mov    DWORD PTR [rsi+0xc],ecx
  4156ee:	jle    0x41560e
  4156f4:	lea    rdx,[rdi+rcx*1+0x1]
  4156f9:	mov    rax,rdi
  4156fc:	nop    DWORD PTR [rax+0x0]
  415700:	add    rax,0x1
  415704:	mov    BYTE PTR [rax-0x1],0x30
  415708:	cmp    rax,rdx
  41570b:	jne    0x415700
  41570d:	lea    rdi,[rdi+rcx*1+0x1]
  415712:	mov    DWORD PTR [rsi+0xc],0xffffffff
  415719:	jmp    0x41560e
  41571e:	xchg   ax,ax
  415720:	neg    rcx
  415723:	jmp    0x4154dc
  415728:	mov    rdi,r12
  41572b:	jmp    0x415559
  415730:	push   rdi
  415731:	push   rsi
  415732:	push   rbx
  415733:	sub    rsp,0x20
  415737:	mov    rsi,r9
  41573a:	lea    r9d,[r8-0x1]
  41573e:	mov    r8d,0x66666667
  415744:	mov    r10,rdx
  415747:	mov    eax,r9d
  41574a:	movsxd rbx,r9d
  41574d:	sar    r9d,0x1f
  415751:	imul   r8d
  415754:	sar    edx,0x2
  415757:	mov    r8d,edx
  41575a:	sub    r8d,r9d
  41575d:	mov    r9d,0x1
  415763:	je     0x41578b
  415765:	mov    r11d,0x66666667
  41576b:	nop    DWORD PTR [rax+rax*1+0x0]
  415770:	mov    eax,r8d
  415773:	sar    r8d,0x1f
  415777:	add    r9d,0x1
  41577b:	imul   r11d
  41577e:	mov    eax,edx
  415780:	sar    eax,0x2
  415783:	sub    eax,r8d
  415786:	mov    r8d,eax
  415789:	jne    0x415770
  41578b:	mov    edi,DWORD PTR [rsi+0x2c]
  41578e:	mov    eax,DWORD PTR [rsi+0xc]
  415791:	cmp    r9d,edi
  415794:	cmovge edi,r9d
  415798:	lea    edx,[rdi+0x2]
  41579b:	cmp    eax,edx
  41579d:	jg     0x4157f2
  41579f:	mov    DWORD PTR [rsi+0xc],0xffffffff
  4157a6:	mov    r9,rsi
  4157a9:	mov    rdx,r10
  4157ac:	mov    r8d,0x1
  4157b2:	call   0x415010
  4157b7:	mov    ecx,DWORD PTR [rsi+0x8]
  4157ba:	mov    eax,DWORD PTR [rsi+0x2c]
  4157bd:	mov    rdx,rsi
  4157c0:	mov    DWORD PTR [rsi+0x10],eax
  4157c3:	mov    eax,ecx
  4157c5:	and    ecx,0x20
  4157c8:	or     eax,0x1c0
  4157cd:	or     ecx,0x45
  4157d0:	mov    DWORD PTR [rsi+0x8],eax
  4157d3:	call   0x414bf0
  4157d8:	lea    r9d,[rdi+0x1]
  4157dc:	add    DWORD PTR [rsi+0xc],r9d
  4157e0:	mov    rdx,rsi
  4157e3:	mov    rcx,rbx
  4157e6:	add    rsp,0x20
  4157ea:	pop    rbx
  4157eb:	pop    rsi
  4157ec:	pop    rdi
  4157ed:	jmp    0x415460
  4157f2:	sub    eax,edx
  4157f4:	mov    DWORD PTR [rsi+0xc],eax
  4157f7:	jmp    0x4157a6
  4157f9:	nop    DWORD PTR [rax+0x0]
  415800:	push   rsi
  415801:	push   rbx
  415802:	sub    rsp,0x68
  415806:	mov    eax,DWORD PTR [rdx+0x10]
  415809:	fld    TBYTE PTR [rcx]
  41580b:	mov    rbx,rdx
  41580e:	test   eax,eax
  415810:	lea    r8d,[rax+0x1]
  415814:	js     0x415880
  415816:	lea    rdx,[rsp+0x30]
  41581b:	lea    r9,[rsp+0x4c]
  415820:	mov    ecx,0x2
  415825:	fstp   TBYTE PTR [rsp+0x50]
  415829:	mov    rax,QWORD PTR [rsp+0x50]
  41582e:	mov    QWORD PTR [rsp+0x30],rax
  415833:	mov    rax,QWORD PTR [rsp+0x58]
  415838:	mov    QWORD PTR [rsp+0x38],rax
  41583d:	lea    rax,[rsp+0x48]
  415842:	mov    QWORD PTR [rsp+0x20],rax
  415847:	call   0x414af0
  41584c:	mov    r8d,DWORD PTR [rsp+0x4c]
  415851:	mov    rsi,rax
  415854:	cmp    r8d,0xffff8000
  41585b:	je     0x415890
  41585d:	mov    ecx,DWORD PTR [rsp+0x48]
  415861:	mov    r9,rbx
  415864:	mov    rdx,rax
  415867:	call   0x415730
  41586c:	mov    rcx,rsi
  41586f:	call   0x416fe0
  415874:	nop
  415875:	add    rsp,0x68
  415879:	pop    rbx
  41587a:	pop    rsi
  41587b:	ret    
  41587c:	nop    DWORD PTR [rax+0x0]
  415880:	mov    DWORD PTR [rdx+0x10],0x6
  415887:	mov    r8d,0x7
  41588d:	jmp    0x415816
  41588f:	nop
  415890:	mov    ecx,DWORD PTR [rsp+0x48]
  415894:	mov    r8,rbx
  415897:	mov    rdx,rax
  41589a:	call   0x414e80
  41589f:	mov    rcx,rsi
  4158a2:	call   0x416fe0
  4158a7:	nop
  4158a8:	add    rsp,0x68
  4158ac:	pop    rbx
  4158ad:	pop    rsi
  4158ae:	ret    
  4158af:	nop
  4158b0:	push   rsi
  4158b1:	push   rbx
  4158b2:	sub    rsp,0x78
  4158b6:	mov    r8d,DWORD PTR [rdx+0x10]
  4158ba:	fld    TBYTE PTR [rcx]
  4158bc:	mov    rbx,rdx
  4158bf:	test   r8d,r8d
  4158c2:	js     0x415a00
  4158c8:	je     0x4159e0
  4158ce:	lea    rdx,[rsp+0x40]
  4158d3:	lea    r9,[rsp+0x5c]
  4158d8:	mov    ecx,0x2
  4158dd:	fstp   TBYTE PTR [rsp+0x60]
  4158e1:	mov    rax,QWORD PTR [rsp+0x60]
  4158e6:	mov    QWORD PTR [rsp+0x40],rax
  4158eb:	mov    rax,QWORD PTR [rsp+0x68]
  4158f0:	mov    QWORD PTR [rsp+0x48],rax
  4158f5:	lea    rax,[rsp+0x58]
  4158fa:	mov    QWORD PTR [rsp+0x20],rax
  4158ff:	call   0x414af0
  415904:	mov    r8d,DWORD PTR [rsp+0x5c]
  415909:	mov    rsi,rax
  41590c:	cmp    r8d,0xffff8000
  415913:	je     0x415a20
  415919:	cmp    r8d,0xfffffffd
  41591d:	jl     0x4159a0
  415923:	mov    eax,DWORD PTR [rbx+0x10]
  415926:	cmp    r8d,eax
  415929:	jg     0x4159a0
  41592b:	test   BYTE PTR [rbx+0x9],0x8
  41592f:	jne    0x415a12
  415935:	mov    rcx,rsi
  415938:	mov    DWORD PTR [rsp+0x3c],r8d
  41593d:	call   0x419840
  415942:	mov    r8d,DWORD PTR [rsp+0x3c]
  415947:	sub    eax,r8d
  41594a:	test   eax,eax
  41594c:	mov    DWORD PTR [rbx+0x10],eax
  41594f:	js     0x415a31
  415955:	mov    ecx,DWORD PTR [rsp+0x58]
  415959:	mov    rdx,rsi
  41595c:	mov    r9,rbx
  41595f:	call   0x415010
  415964:	mov    eax,DWORD PTR [rbx+0xc]
  415967:	lea    edx,[rax-0x1]
  41596a:	test   eax,eax
  41596c:	mov    DWORD PTR [rbx+0xc],edx
  41596f:	jle    0x4159cd
  415971:	mov    rdx,rbx
  415974:	mov    ecx,0x20
  415979:	call   0x414bf0
  41597e:	mov    r8d,DWORD PTR [rbx+0xc]
  415982:	lea    r9d,[r8-0x1]
  415986:	test   r8d,r8d
  415989:	mov    DWORD PTR [rbx+0xc],r9d
  41598d:	jg     0x415971
  41598f:	mov    rcx,rsi
  415992:	call   0x416fe0
  415997:	nop
  415998:	add    rsp,0x78
  41599c:	pop    rbx
  41599d:	pop    rsi
  41599e:	ret    
  41599f:	nop
  4159a0:	test   BYTE PTR [rbx+0x9],0x8
  4159a4:	jne    0x4159f2
  4159a6:	mov    rcx,rsi
  4159a9:	mov    DWORD PTR [rsp+0x3c],r8d
  4159ae:	call   0x419840
  4159b3:	mov    r8d,DWORD PTR [rsp+0x3c]
  4159b8:	sub    eax,0x1
  4159bb:	mov    DWORD PTR [rbx+0x10],eax
  4159be:	mov    ecx,DWORD PTR [rsp+0x58]
  4159c2:	mov    r9,rbx
  4159c5:	mov    rdx,rsi
  4159c8:	call   0x415730
  4159cd:	mov    rcx,rsi
  4159d0:	call   0x416fe0
  4159d5:	nop
  4159d6:	add    rsp,0x78
  4159da:	pop    rbx
  4159db:	pop    rsi
  4159dc:	ret    
  4159dd:	nop    DWORD PTR [rax]
  4159e0:	mov    DWORD PTR [rdx+0x10],0x1
  4159e7:	mov    r8d,0x1
  4159ed:	jmp    0x4158ce
  4159f2:	sub    DWORD PTR [rbx+0x10],0x1
  4159f6:	jmp    0x4159be
  4159f8:	nop    DWORD PTR [rax+rax*1+0x0]
  415a00:	mov    DWORD PTR [rdx+0x10],0x6
  415a07:	mov    r8d,0x6
  415a0d:	jmp    0x4158ce
  415a12:	sub    eax,r8d
  415a15:	mov    DWORD PTR [rbx+0x10],eax
  415a18:	jmp    0x415955
  415a1d:	nop    DWORD PTR [rax]
  415a20:	mov    ecx,DWORD PTR [rsp+0x58]
  415a24:	mov    r8,rbx
  415a27:	mov    rdx,rax
  415a2a:	call   0x414e80
  415a2f:	jmp    0x4159cd
  415a31:	mov    edx,DWORD PTR [rbx+0xc]
  415a34:	test   edx,edx
  415a36:	jle    0x415955
  415a3c:	add    eax,edx
  415a3e:	mov    DWORD PTR [rbx+0xc],eax
  415a41:	jmp    0x415955
  415a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415a50:	push   rbp
  415a51:	push   r14
  415a53:	push   r13
  415a55:	push   r12
  415a57:	push   rdi
  415a58:	push   rsi
  415a59:	push   rbx
  415a5a:	mov    rbp,rsp
  415a5d:	sub    rsp,0x20
  415a61:	mov    r10d,0x12
  415a67:	mov    eax,0x18
  415a6c:	cmp    ecx,0x6f
  415a6f:	mov    rbx,r8
  415a72:	mov    r8d,DWORD PTR [r8+0x10]
  415a76:	mov    r11d,ecx
  415a79:	setne  cl
  415a7c:	mov    edi,DWORD PTR [rbx+0x8]
  415a7f:	movzx  ecx,cl
  415a82:	cmovne eax,r10d
  415a86:	mov    r10b,0x0
  415a89:	add    ecx,0x3
  415a8c:	test   r8d,r8d
  415a8f:	mov    r9,rdx
  415a92:	cmovns r10d,r8d
  415a96:	add    r10d,eax
  415a99:	test   edi,0x1000
  415a9f:	je     0x415aac
  415aa1:	cmp    WORD PTR [rbx+0x20],0x0
  415aa6:	jne    0x415c73
  415aac:	movsxd r12,DWORD PTR [rbx+0xc]
  415ab0:	movsxd rax,r10d
  415ab3:	cmp    r10d,r12d
  415ab6:	cmovl  rax,r12
  415aba:	add    rax,0x1e
  415abe:	and    rax,0xfffffffffffffff0
  415ac2:	call   0x4139f0
  415ac7:	xor    edx,edx
  415ac9:	sub    rsp,rax
  415acc:	cmp    r11d,0x6f
  415ad0:	lea    rsi,[rsp+0x20]
  415ad5:	setne  dl
  415ad8:	test   r9,r9
  415adb:	lea    edx,[rdx*8+0x7]
  415ae2:	mov    r10,rsi
  415ae5:	je     0x415d92
  415aeb:	mov    r13d,r11d
  415aee:	and    r13d,0x20
  415af2:	jmp    0x415b00
  415af4:	shr    r9,cl
  415af7:	mov    BYTE PTR [r10-0x1],r14b
  415afb:	test   r9,r9
  415afe:	je     0x415b25
  415b00:	mov    eax,edx
  415b02:	add    r10,0x1
  415b06:	and    eax,r9d
  415b09:	lea    r14d,[rax+0x30]
  415b0d:	cmp    r14b,0x39
  415b11:	jbe    0x415af4
  415b13:	add    eax,0x37
  415b16:	shr    r9,cl
  415b19:	or     eax,r13d
  415b1c:	test   r9,r9
  415b1f:	mov    BYTE PTR [r10-0x1],al
  415b23:	jne    0x415b00
  415b25:	cmp    rsi,r10
  415b28:	je     0x415d92
  415b2e:	test   r8d,r8d
  415b31:	jle    0x415cf2
  415b37:	mov    rax,rsi
  415b3a:	sub    rax,r10
  415b3d:	add    eax,r8d
  415b40:	test   eax,eax
  415b42:	jle    0x415cf2
  415b48:	sub    eax,0x1
  415b4b:	mov    rdx,rax
  415b4e:	lea    rcx,[r10+rax*1+0x1]
  415b53:	mov    rax,r10
  415b56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415b60:	add    rax,0x1
  415b64:	mov    BYTE PTR [rax-0x1],0x30
  415b68:	cmp    rax,rcx
  415b6b:	jne    0x415b60
  415b6d:	movsxd rax,edx
  415b70:	lea    r10,[r10+rax*1+0x1]
  415b75:	cmp    rsi,r10
  415b78:	jne    0x415b90
  415b7a:	test   r8d,r8d
  415b7d:	je     0x415b90
  415b7f:	mov    BYTE PTR [r10],0x30
  415b83:	add    r10,0x1
  415b87:	nop    WORD PTR [rax+rax*1+0x0]
  415b90:	mov    rax,r10
  415b93:	sub    rax,rsi
  415b96:	cmp    r12d,eax
  415b99:	jle    0x415cc0
  415b9f:	sub    r12d,eax
  415ba2:	test   r12d,r12d
  415ba5:	mov    DWORD PTR [rbx+0xc],r12d
  415ba9:	jle    0x415df7
  415baf:	cmp    r11d,0x6f
  415bb3:	mov    edx,DWORD PTR [rbx+0x8]
  415bb6:	je     0x415d80
  415bbc:	test   dh,0x8
  415bbf:	je     0x415d40
  415bc5:	lea    r13d,[r12-0x2]
  415bca:	test   r13d,r13d
  415bcd:	jle    0x415bd8
  415bcf:	test   r8d,r8d
  415bd2:	js     0x415c8d
  415bd8:	test   r13d,r13d
  415bdb:	mov    BYTE PTR [r10],r11b
  415bde:	lea    rdi,[r10+0x2]
  415be2:	mov    BYTE PTR [r10+0x1],0x30
  415be7:	jle    0x415ce8
  415bed:	and    dh,0x4
  415bf0:	jne    0x415d13
  415bf6:	lea    r14d,[r13-0x1]
  415bfa:	mov    r12d,r14d
  415bfd:	nop    DWORD PTR [rax]
  415c00:	sub    r12d,0x1
  415c04:	mov    rdx,rbx
  415c07:	mov    ecx,0x20
  415c0c:	call   0x414bf0
  415c11:	lea    eax,[r12+0x1]
  415c16:	test   eax,eax
  415c18:	jg     0x415c00
  415c1a:	test   r14d,r14d
  415c1d:	lea    r13d,[r14-0x1]
  415c21:	mov    r12d,0x0
  415c27:	cmovns r12d,r14d
  415c2b:	sub    r13d,r12d
  415c2e:	cmp    rsi,rdi
  415c31:	jb     0x415d20
  415c37:	nop    WORD PTR [rax+rax*1+0x0]
  415c40:	test   r13d,r13d
  415c43:	lea    esi,[r13-0x1]
  415c47:	jle    0x415c65
  415c49:	nop    DWORD PTR [rax+0x0]
  415c50:	mov    rdx,rbx
  415c53:	mov    ecx,0x20
  415c58:	sub    esi,0x1
  415c5b:	call   0x414bf0
  415c60:	cmp    esi,0xffffffff
  415c63:	jne    0x415c50
  415c65:	mov    rsp,rbp
  415c68:	pop    rbx
  415c69:	pop    rsi
  415c6a:	pop    rdi
  415c6b:	pop    r12
  415c6d:	pop    r13
  415c6f:	pop    r14
  415c71:	pop    rbp
  415c72:	ret    
  415c73:	mov    eax,r10d
  415c76:	mov    edx,0x55555556
  415c7b:	imul   edx
  415c7d:	mov    eax,r10d
  415c80:	sar    eax,0x1f
  415c83:	sub    edx,eax
  415c85:	add    r10d,edx
  415c88:	jmp    0x415aac
  415c8d:	mov    eax,edx
  415c8f:	and    eax,0x600
  415c94:	cmp    eax,0x200
  415c99:	je     0x415da0
  415c9f:	mov    r12d,r13d
  415ca2:	test   dh,0x8
  415ca5:	mov    r13d,r12d
  415ca8:	mov    rdi,r10
  415cab:	je     0x415bed
  415cb1:	mov    r13d,r12d
  415cb4:	jmp    0x415bd8
  415cb9:	nop    DWORD PTR [rax+0x0]
  415cc0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  415cc7:	mov    r13d,0xffffffff
  415ccd:	cmp    r11d,0x6f
  415cd1:	je     0x415ce5
  415cd3:	mov    edx,DWORD PTR [rbx+0x8]
  415cd6:	mov    eax,edx
  415cd8:	and    eax,0x800
  415cdd:	test   eax,eax
  415cdf:	jne    0x415bd8
  415ce5:	mov    rdi,r10
  415ce8:	cmp    rsi,rdi
  415ceb:	jb     0x415d20
  415ced:	jmp    0x415c65
  415cf2:	cmp    r11d,0x6f
  415cf6:	jne    0x415b75
  415cfc:	test   BYTE PTR [rbx+0x9],0x8
  415d00:	je     0x415b75
  415d06:	mov    BYTE PTR [r10],0x30
  415d0a:	add    r10,0x1
  415d0e:	jmp    0x415b75
  415d13:	cmp    rsi,rdi
  415d16:	jae    0x415dff
  415d1c:	nop    DWORD PTR [rax+0x0]
  415d20:	sub    rdi,0x1
  415d24:	movsx  ecx,BYTE PTR [rdi]
  415d27:	mov    rdx,rbx
  415d2a:	call   0x414bf0
  415d2f:	cmp    rsi,rdi
  415d32:	jb     0x415d20
  415d34:	jmp    0x415c40
  415d39:	nop    DWORD PTR [rax+0x0]
  415d40:	test   r8d,r8d
  415d43:	jns    0x415ca2
  415d49:	mov    eax,edx
  415d4b:	and    eax,0x600
  415d50:	cmp    eax,0x200
  415d55:	je     0x415dee
  415d5b:	cmp    r11d,0x6f
  415d5f:	jne    0x415ca2
  415d65:	and    dh,0x4
  415d68:	jne    0x415d8a
  415d6a:	lea    r14d,[r12-0x1]
  415d6f:	mov    rdi,r10
  415d72:	jmp    0x415bfa
  415d77:	nop    WORD PTR [rax+rax*1+0x0]
  415d80:	test   r8d,r8d
  415d83:	js     0x415d49
  415d85:	and    dh,0x4
  415d88:	je     0x415d6a
  415d8a:	mov    rdi,r10
  415d8d:	mov    r13d,r12d
  415d90:	jmp    0x415d2f
  415d92:	and    edi,0xfffff7ff
  415d98:	mov    DWORD PTR [rbx+0x8],edi
  415d9b:	jmp    0x415b2e
  415da0:	lea    r8d,[r12-0x3]
  415da5:	mov    r12d,r8d
  415da8:	mov    eax,r12d
  415dab:	lea    rcx,[r10+rax*1+0x1]
  415db0:	mov    rax,r10
  415db3:	add    rax,0x1
  415db7:	mov    BYTE PTR [rax-0x1],0x30
  415dbb:	cmp    rax,rcx
  415dbe:	jne    0x415db3
  415dc0:	movsxd rax,r8d
  415dc3:	cmp    r11d,0x6f
  415dc7:	lea    r10,[r10+rax*1+0x1]
  415dcc:	je     0x415de0
  415dce:	mov    eax,edx
  415dd0:	mov    r13d,0xffffffff
  415dd6:	and    eax,0x800
  415ddb:	jmp    0x415cdd
  415de0:	mov    rdi,r10
  415de3:	mov    r13d,0xffffffff
  415de9:	jmp    0x415ce8
  415dee:	sub    r12d,0x1
  415df2:	mov    r8d,r12d
  415df5:	jmp    0x415da8
  415df7:	mov    r13d,r12d
  415dfa:	jmp    0x415ccd
  415dff:	lea    esi,[r13-0x1]
  415e03:	jmp    0x415c50
  415e08:	nop    DWORD PTR [rax+rax*1+0x0]
  415e10:	push   r13
  415e12:	push   r12
  415e14:	push   rbp
  415e15:	push   rdi
  415e16:	push   rsi
  415e17:	push   rbx
  415e18:	sub    rsp,0x68
  415e1c:	mov    r9,QWORD PTR [rcx]
  415e1f:	mov    r10d,DWORD PTR [rcx+0x8]
  415e23:	mov    rbx,rdx
  415e26:	mov    rax,r9
  415e29:	mov    QWORD PTR [rsp+0x30],r9
  415e2e:	mov    DWORD PTR [rsp+0x38],r10d
  415e33:	shr    rax,0x20
  415e37:	mov    r8,r10
  415e3a:	and    eax,0x7fffffff
  415e3f:	or     r9d,eax
  415e42:	lea    eax,[r10+r10*1]
  415e46:	mov    edx,r9d
  415e49:	neg    edx
  415e4b:	and    eax,0xfffe
  415e50:	or     edx,r9d
  415e53:	shr    edx,0x1f
  415e56:	or     edx,eax
  415e58:	mov    eax,0xfffe
  415e5d:	sub    eax,edx
  415e5f:	sar    eax,0x10
  415e62:	test   eax,eax
  415e64:	jne    0x416250
  415e6a:	movzx  esi,WORD PTR [rsp+0x38]
  415e6f:	mov    ecx,esi
  415e71:	and    ecx,0x8000
  415e77:	je     0x415e80
  415e79:	or     DWORD PTR [rbx+0x8],0x80
  415e80:	and    r8w,0x7fff
  415e86:	cmp    r8w,0x7fff
  415e8c:	jne    0x415eb0
  415e8e:	test   r9d,r9d
  415e91:	jne    0x415eb0
  415e93:	lea    rdx,[rip+0xf7da]        # 0x425674
  415e9a:	mov    r8,rbx
  415e9d:	call   0x414e80
  415ea2:	jmp    0x416225
  415ea7:	nop    WORD PTR [rax+rax*1+0x0]
  415eb0:	and    si,0x7fff
  415eb5:	jne    0x415fe0
  415ebb:	mov    rax,QWORD PTR [rsp+0x30]
  415ec0:	test   rax,rax
  415ec3:	jne    0x41626f
  415ec9:	mov    r9d,DWORD PTR [rbx+0x10]
  415ecd:	cmp    r9d,0xe
  415ed1:	jbe    0x4162ec
  415ed7:	xor    esi,esi
  415ed9:	mov    r8d,DWORD PTR [rbx+0x8]
  415edd:	lea    rbp,[rsp+0x40]
  415ee2:	test   r9d,r9d
  415ee5:	jle    0x4162fc
  415eeb:	lea    rax,[rbp+0x1]
  415eef:	mov    BYTE PTR [rsp+0x40],0x2e
  415ef4:	mov    r10d,DWORD PTR [rbx+0xc]
  415ef8:	lea    rdi,[rax+0x1]
  415efc:	mov    BYTE PTR [rax],0x30
  415eff:	mov    r12d,0x2
  415f05:	test   r10d,r10d
  415f08:	jg     0x41610c
  415f0e:	xchg   ax,ax
  415f10:	test   r8b,0x80
  415f14:	jne    0x4161d0
  415f1a:	test   r8d,0x100
  415f21:	jne    0x4162c0
  415f27:	and    r8d,0x40
  415f2b:	jne    0x4162d2
  415f31:	mov    rdx,rbx
  415f34:	mov    ecx,0x30
  415f39:	call   0x414bf0
  415f3e:	mov    ecx,DWORD PTR [rbx+0x8]
  415f41:	mov    rdx,rbx
  415f44:	and    ecx,0x20
  415f47:	or     ecx,0x58
  415f4a:	call   0x414bf0
  415f4f:	mov    eax,DWORD PTR [rbx+0xc]
  415f52:	test   eax,eax
  415f54:	jle    0x415f7c
  415f56:	test   BYTE PTR [rbx+0x9],0x2
  415f5a:	je     0x415f7c
  415f5c:	sub    eax,0x1
  415f5f:	mov    DWORD PTR [rbx+0xc],eax
  415f62:	mov    rdx,rbx
  415f65:	mov    ecx,0x30
  415f6a:	call   0x414bf0
  415f6f:	mov    eax,DWORD PTR [rbx+0xc]
  415f72:	lea    edx,[rax-0x1]
  415f75:	test   eax,eax
  415f77:	mov    DWORD PTR [rbx+0xc],edx
  415f7a:	jg     0x415f62
  415f7c:	cmp    rdi,rbp
  415f7f:	lea    r13,[rsp+0x2e]
  415f84:	ja     0x415fb9
  415f86:	jmp    0x4161ef
  415f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  415f90:	movzx  eax,WORD PTR [rbx+0x20]
  415f94:	test   ax,ax
  415f97:	mov    WORD PTR [rsp+0x2e],ax
  415f9c:	je     0x415fb0
  415f9e:	mov    r8,rbx
  415fa1:	mov    edx,0x1
  415fa6:	mov    rcx,r13
  415fa9:	call   0x414c50
  415fae:	xchg   ax,ax
  415fb0:	cmp    rdi,rbp
  415fb3:	je     0x4161ef
  415fb9:	sub    rdi,0x1
  415fbd:	movsx  ecx,BYTE PTR [rdi]
  415fc0:	cmp    ecx,0x2e
  415fc3:	je     0x416232
  415fc9:	cmp    ecx,0x2c
  415fcc:	je     0x415f90
  415fce:	mov    rdx,rbx
  415fd1:	call   0x414bf0
  415fd6:	jmp    0x415fb0
  415fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  415fe0:	mov    r9d,DWORD PTR [rbx+0x10]
  415fe4:	sub    si,0x3fff
  415fe9:	mov    rax,QWORD PTR [rsp+0x30]
  415fee:	cmp    r9d,0xe
  415ff2:	ja     0x41629d
  415ff8:	test   rax,rax
  415ffb:	js     0x416005
  415ffd:	nop    DWORD PTR [rax]
  416000:	add    rax,rax
  416003:	jns    0x416000
  416005:	mov    ecx,0xe
  41600a:	mov    edx,0x4
  41600f:	shr    rax,1
  416012:	sub    ecx,r9d
  416015:	shl    ecx,0x2
  416018:	shl    rdx,cl
  41601b:	add    rax,rdx
  41601e:	js     0x4162e4
  416024:	add    rax,rax
  416027:	mov    ecx,0xf
  41602c:	sub    ecx,r9d
  41602f:	shl    ecx,0x2
  416032:	shr    rax,cl
  416035:	mov    r8d,DWORD PTR [rbx+0x8]
  416039:	lea    rbp,[rsp+0x40]
  41603e:	mov    rdi,rbp
  416041:	mov    r11d,r8d
  416044:	mov    r10d,r8d
  416047:	and    r11d,0x800
  41604e:	and    r10d,0x20
  416052:	jmp    0x416083
  416054:	mov    ecx,DWORD PTR [rbx+0x10]
  416057:	test   ecx,ecx
  416059:	jle    0x416061
  41605b:	sub    ecx,0x1
  41605e:	mov    DWORD PTR [rbx+0x10],ecx
  416061:	shr    rax,0x4
  416065:	mov    r9,rdi
  416068:	test   edx,edx
  41606a:	je     0x4160d4
  41606c:	cmp    edx,0x9
  41606f:	lea    rdi,[r9+0x1]
  416073:	jle    0x4160e7
  416075:	add    edx,0x37
  416078:	or     edx,r10d
  41607b:	mov    BYTE PTR [r9],dl
  41607e:	test   rax,rax
  416081:	je     0x4160f0
  416083:	mov    edx,eax
  416085:	and    edx,0xf
  416088:	cmp    edx,eax
  41608a:	jne    0x416054
  41608c:	cmp    rdi,rbp
  41608f:	ja     0x4160a2
  416091:	test   r11d,r11d
  416094:	jne    0x4160a2
  416096:	mov    r12d,DWORD PTR [rbx+0x10]
  41609a:	mov    r9,rdi
  41609d:	test   r12d,r12d
  4160a0:	jle    0x4160a9
  4160a2:	lea    r9,[rdi+0x1]
  4160a6:	mov    BYTE PTR [rdi],0x2e
  4160a9:	cmp    rax,0x1
  4160ad:	jbe    0x4162b9
  4160b3:	lea    ecx,[rsi-0x1]
  4160b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4160c0:	shr    rax,1
  4160c3:	mov    esi,ecx
  4160c5:	cmp    rax,0x1
  4160c9:	lea    ecx,[rsi-0x1]
  4160cc:	jne    0x4160c0
  4160ce:	xor    al,al
  4160d0:	test   edx,edx
  4160d2:	jne    0x41606c
  4160d4:	cmp    r9,rbp
  4160d7:	ja     0x4160e3
  4160d9:	mov    ecx,DWORD PTR [rbx+0x10]
  4160dc:	mov    rdi,r9
  4160df:	test   ecx,ecx
  4160e1:	js     0x41607e
  4160e3:	lea    rdi,[r9+0x1]
  4160e7:	add    edx,0x30
  4160ea:	jmp    0x41607b
  4160ec:	nop    DWORD PTR [rax+0x0]
  4160f0:	cmp    rdi,rbp
  4160f3:	je     0x4162f3
  4160f9:	mov    r10d,DWORD PTR [rbx+0xc]
  4160fd:	mov    r12d,0x2
  416103:	test   r10d,r10d
  416106:	jle    0x415f10
  41610c:	mov    edx,DWORD PTR [rbx+0x10]
  41610f:	mov    rax,rdi
  416112:	movsx  r11d,si
  416116:	sub    rax,rbp
  416119:	lea    ecx,[rdx+rax*1]
  41611c:	test   edx,edx
  41611e:	mov    edx,r8d
  416121:	cmovg  eax,ecx
  416124:	and    edx,0x1c0
  41612a:	mov    ecx,0x66666667
  41612f:	cmp    edx,0x1
  416132:	sbb    edx,edx
  416134:	lea    r9d,[rax+rdx*1+0x6]
  416139:	mov    eax,r11d
  41613c:	imul   ecx
  41613e:	mov    eax,r11d
  416141:	sar    eax,0x1f
  416144:	mov    ecx,edx
  416146:	sar    ecx,0x2
  416149:	sub    ecx,eax
  41614b:	je     0x416170
  41614d:	mov    r11d,0x66666667
  416153:	mov    eax,ecx
  416155:	sar    ecx,0x1f
  416158:	add    r9d,0x1
  41615c:	imul   r11d
  41615f:	add    r12d,0x1
  416163:	sar    edx,0x2
  416166:	sub    edx,ecx
  416168:	mov    ecx,edx
  41616a:	jne    0x416153
  41616c:	movsx  r12d,r12w
  416170:	cmp    r10d,r9d
  416173:	jle    0x416240
  416179:	sub    r10d,r9d
  41617c:	test   r8d,0x600
  416183:	jne    0x4162b0
  416189:	lea    eax,[r10-0x1]
  41618d:	test   r10d,r10d
  416190:	mov    DWORD PTR [rbx+0xc],eax
  416193:	jle    0x415f10
  416199:	nop    DWORD PTR [rax+0x0]
  4161a0:	mov    rdx,rbx
  4161a3:	mov    ecx,0x20
  4161a8:	call   0x414bf0
  4161ad:	mov    eax,DWORD PTR [rbx+0xc]
  4161b0:	lea    edx,[rax-0x1]
  4161b3:	test   eax,eax
  4161b5:	mov    DWORD PTR [rbx+0xc],edx
  4161b8:	jg     0x4161a0
  4161ba:	mov    r8d,DWORD PTR [rbx+0x8]
  4161be:	test   r8b,0x80
  4161c2:	je     0x415f1a
  4161c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4161d0:	mov    rdx,rbx
  4161d3:	mov    ecx,0x2d
  4161d8:	call   0x414bf0
  4161dd:	jmp    0x415f31
  4161e2:	mov    rdx,rbx
  4161e5:	mov    ecx,0x30
  4161ea:	call   0x414bf0
  4161ef:	mov    eax,DWORD PTR [rbx+0x10]
  4161f2:	lea    edx,[rax-0x1]
  4161f5:	test   eax,eax
  4161f7:	mov    DWORD PTR [rbx+0x10],edx
  4161fa:	jg     0x4161e2
  4161fc:	mov    ecx,DWORD PTR [rbx+0x8]
  4161ff:	mov    rdx,rbx
  416202:	and    ecx,0x20
  416205:	or     ecx,0x50
  416208:	call   0x414bf0
  41620d:	add    DWORD PTR [rbx+0xc],r12d
  416211:	or     DWORD PTR [rbx+0x8],0x1c0
  416218:	movsx  rcx,si
  41621c:	mov    rdx,rbx
  41621f:	call   0x415460
  416224:	nop
  416225:	add    rsp,0x68
  416229:	pop    rbx
  41622a:	pop    rsi
  41622b:	pop    rdi
  41622c:	pop    rbp
  41622d:	pop    r12
  41622f:	pop    r13
  416231:	ret    
  416232:	mov    rcx,rbx
  416235:	call   0x414f20
  41623a:	jmp    0x415fb0
  41623f:	nop
  416240:	mov    DWORD PTR [rbx+0xc],0xffffffff
  416247:	jmp    0x415f10
  41624c:	nop    DWORD PTR [rax+0x0]
  416250:	lea    rdx,[rip+0xf419]        # 0x425670
  416257:	mov    r8,rbx
  41625a:	xor    ecx,ecx
  41625c:	call   0x414e80
  416261:	nop
  416262:	add    rsp,0x68
  416266:	pop    rbx
  416267:	pop    rsi
  416268:	pop    rdi
  416269:	pop    rbp
  41626a:	pop    r12
  41626c:	pop    r13
  41626e:	ret    
  41626f:	js     0x416311
  416275:	mov    edx,0xffffc001
  41627a:	nop    WORD PTR [rax+rax*1+0x0]
  416280:	mov    esi,edx
  416282:	sub    edx,0x1
  416285:	add    rax,rax
  416288:	jns    0x416280
  41628a:	mov    r9d,DWORD PTR [rbx+0x10]
  41628e:	cmp    r9d,0xe
  416292:	jbe    0x416005
  416298:	jmp    0x416035
  41629d:	test   rax,rax
  4162a0:	jne    0x416035
  4162a6:	jmp    0x415ed9
  4162ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4162b0:	mov    DWORD PTR [rbx+0xc],r10d
  4162b4:	jmp    0x415f10
  4162b9:	xor    eax,eax
  4162bb:	jmp    0x416068
  4162c0:	mov    rdx,rbx
  4162c3:	mov    ecx,0x2b
  4162c8:	call   0x414bf0
  4162cd:	jmp    0x415f31
  4162d2:	mov    rdx,rbx
  4162d5:	mov    ecx,0x20
  4162da:	call   0x414bf0
  4162df:	jmp    0x415f31
  4162e4:	add    esi,0x1
  4162e7:	jmp    0x416027
  4162ec:	xor    eax,eax
  4162ee:	jmp    0x416000
  4162f3:	mov    r9d,DWORD PTR [rbx+0x10]
  4162f7:	jmp    0x415ee2
  4162fc:	test   r8d,0x800
  416303:	mov    rax,rbp
  416306:	je     0x415ef4
  41630c:	jmp    0x415eeb
  416311:	mov    esi,0xffffc002
  416316:	jmp    0x41628a
  41631b:	nop    DWORD PTR [rax+rax*1+0x0]
  416320:	push   r15
  416322:	push   r14
  416324:	push   r13
  416326:	push   r12
  416328:	push   rbp
  416329:	push   rdi
  41632a:	push   rsi
  41632b:	push   rbx
  41632c:	sub    rsp,0xb8
  416333:	mov    r13,QWORD PTR [rsp+0x120]
  41633b:	mov    r15d,ecx
  41633e:	mov    rdi,rdx
  416341:	mov    esi,r8d
  416344:	mov    rbx,r9
  416347:	and    r15d,0x6000
  41634e:	call   0x419948
  416353:	mov    eax,DWORD PTR [rax]
  416355:	lea    rcx,[rip+0xf331]        # 0x42568d
  41635c:	xor    edx,edx
  41635e:	mov    QWORD PTR [rsp+0x80],rdi
  416366:	mov    DWORD PTR [rsp+0x88],r15d
  41636e:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  416379:	mov    DWORD PTR [rsp+0x90],0xffffffff
  416384:	mov    DWORD PTR [rsp+0x34],eax
  416388:	xor    eax,eax
  41638a:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  416395:	mov    WORD PTR [rsp+0x98],ax
  41639d:	mov    DWORD PTR [rsp+0x9c],0x0
  4163a8:	mov    WORD PTR [rsp+0xa0],dx
  4163b0:	mov    DWORD PTR [rsp+0xa4],0x0
  4163bb:	mov    DWORD PTR [rsp+0xa8],esi
  4163c2:	call   0x4198b8
  4163c7:	test   rax,rax
  4163ca:	je     0x4163dc
  4163cc:	movsx  edx,BYTE PTR [rax]
  4163cf:	mov    eax,0x2
  4163d4:	sub    edx,0x30
  4163d7:	cmp    edx,0x2
  4163da:	jbe    0x4163e9
  4163dc:	call   0x419a80
  4163e1:	and    eax,0x1
  4163e4:	neg    eax
  4163e6:	add    eax,0x3
  4163e9:	lea    rdi,[rsp+0x70]
  4163ee:	mov    DWORD PTR [rsp+0xac],eax
  4163f5:	movzx  eax,BYTE PTR [rbx]
  4163f8:	lea    rsi,[rsp+0x6e]
  4163fd:	lea    r12,[rsp+0x80]
  416405:	lea    rbp,[rip+0xf298]        # 0x4256a4
  41640c:	mov    QWORD PTR [rsp+0x28],rdi
  416411:	lea    rdi,[rsp+0x50]
  416416:	mov    QWORD PTR [rsp+0x38],rsi
  41641b:	mov    QWORD PTR [rsp+0x20],rdi
  416420:	mov    edi,r15d
  416423:	or     edi,0x200
  416429:	mov    DWORD PTR [rsp+0x48],edi
  41642d:	nop    DWORD PTR [rax]
  416430:	movsx  ecx,al
  416433:	lea    rsi,[rbx+0x1]
  416437:	test   ecx,ecx
  416439:	je     0x4164ba
  41643b:	cmp    ecx,0x25
  41643e:	jne    0x4164a0
  416440:	movzx  eax,BYTE PTR [rbx+0x1]
  416444:	xor    r10d,r10d
  416447:	xor    r14d,r14d
  41644a:	mov    DWORD PTR [rsp+0x88],r15d
  416452:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41645d:	mov    rdi,rsi
  416460:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  41646b:	lea    r11,[r12+0xc]
  416470:	test   al,al
  416472:	je     0x41661b
  416478:	lea    edx,[rax-0x20]
  41647b:	lea    rbx,[rdi+0x1]
  41647f:	movsx  ecx,al
  416482:	cmp    dl,0x5a
  416485:	ja     0x416a90
  41648b:	movzx  edx,dl
  41648e:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  416493:	add    rdx,rbp
  416496:	jmp    rdx
  416498:	nop    DWORD PTR [rax+rax*1+0x0]
  4164a0:	mov    rdx,r12
  4164a3:	call   0x414bf0
  4164a8:	movzx  eax,BYTE PTR [rbx+0x1]
  4164ac:	mov    rbx,rsi
  4164af:	lea    rsi,[rbx+0x1]
  4164b3:	movsx  ecx,al
  4164b6:	test   ecx,ecx
  4164b8:	jne    0x41643b
  4164ba:	mov    eax,DWORD PTR [rsp+0xa4]
  4164c1:	add    rsp,0xb8
  4164c8:	pop    rbx
  4164c9:	pop    rsi
  4164ca:	pop    rdi
  4164cb:	pop    rbp
  4164cc:	pop    r12
  4164ce:	pop    r13
  4164d0:	pop    r14
  4164d2:	pop    r15
  4164d4:	ret    
  4164d5:	sub    r10d,0x2
  4164d9:	mov    rax,r13
  4164dc:	cmp    r10d,0x1
  4164e0:	jbe    0x416ad3
  4164e6:	mov    rsi,QWORD PTR [rax]
  4164e9:	add    r13,0x8
  4164ed:	test   rsi,rsi
  4164f0:	je     0x4165b5
  4164f6:	mov    rcx,rsi
  4164f9:	call   0x419840
  4164fe:	mov    edx,eax
  416500:	mov    r8,r12
  416503:	mov    rcx,rsi
  416506:	call   0x414d70
  41650b:	nop    DWORD PTR [rax+rax*1+0x0]
  416510:	movzx  eax,BYTE PTR [rbx]
  416513:	jmp    0x416430
  416518:	nop    DWORD PTR [rax+rax*1+0x0]
  416520:	test   r14d,r14d
  416523:	jne    0x416533
  416525:	cmp    DWORD PTR [rsp+0x88],r15d
  41652d:	je     0x416c9b
  416533:	mov    rdx,QWORD PTR [r13+0x0]
  416537:	lea    rsi,[r13+0x8]
  41653b:	mov    r8,r12
  41653e:	mov    ecx,0x78
  416543:	mov    QWORD PTR [rsp+0x78],0x0
  41654c:	mov    r13,rsi
  41654f:	mov    QWORD PTR [rsp+0x70],rdx
  416554:	call   0x415a50
  416559:	jmp    0x416510
  41655b:	nop    DWORD PTR [rax+rax*1+0x0]
  416560:	cmp    r10d,0x5
  416564:	mov    rax,QWORD PTR [r13+0x0]
  416568:	je     0x416bda
  41656e:	cmp    r10d,0x1
  416572:	je     0x416c64
  416578:	cmp    r10d,0x2
  41657c:	je     0x416588
  41657e:	cmp    r10d,0x3
  416582:	je     0x416d0c
  416588:	mov    edx,DWORD PTR [rsp+0xa4]
  41658f:	add    r13,0x8
  416593:	mov    DWORD PTR [rax],edx
  416595:	jmp    0x416510
  41659a:	nop    WORD PTR [rax+rax*1+0x0]
  4165a0:	mov    ecx,DWORD PTR [rsp+0x34]
  4165a4:	call   0x419848
  4165a9:	test   rax,rax
  4165ac:	mov    rsi,rax
  4165af:	jne    0x4164f6
  4165b5:	mov    edx,0x6
  4165ba:	lea    rsi,[rip+0xf0c5]        # 0x425686
  4165c1:	jmp    0x416500
  4165c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4165d0:	movzx  eax,BYTE PTR [rdi+0x1]
  4165d4:	mov    r10d,0x2
  4165da:	mov    r14d,0x4
  4165e0:	cmp    al,0x6c
  4165e2:	jne    0x416610
  4165e4:	lea    rbx,[rdi+0x2]
  4165e8:	movzx  eax,BYTE PTR [rdi+0x2]
  4165ec:	mov    r10d,0x3
  4165f2:	mov    r14d,0x4
  4165f8:	jmp    0x416610
  4165fa:	nop    WORD PTR [rax+rax*1+0x0]
  416600:	movzx  eax,BYTE PTR [rdi+0x1]
  416604:	mov    r10d,0x3
  41660a:	mov    r14d,0x4
  416610:	test   al,al
  416612:	mov    rdi,rbx
  416615:	jne    0x416478
  41661b:	mov    rbx,rdi
  41661e:	jmp    0x416430
  416623:	mov    eax,DWORD PTR [rsp+0x88]
  41662a:	mov    rdx,r13
  41662d:	add    r13,0x8
  416631:	or     eax,0x20
  416634:	test   al,0x4
  416636:	mov    DWORD PTR [rsp+0x88],eax
  41663d:	je     0x41689b
  416643:	mov    rax,QWORD PTR [rdx]
  416646:	mov    rcx,QWORD PTR [rsp+0x20]
  41664b:	mov    rdx,r12
  41664e:	fld    TBYTE PTR [rax]
  416650:	fstp   TBYTE PTR [rsp+0x50]
  416654:	call   0x4158b0
  416659:	jmp    0x416510
  41665e:	xchg   ax,ax
  416660:	movzx  eax,BYTE PTR [rdi+0x1]
  416664:	mov    r10d,0x1
  41666a:	mov    r14d,0x4
  416670:	cmp    al,0x68
  416672:	jne    0x416610
  416674:	lea    rbx,[rdi+0x2]
  416678:	movzx  eax,BYTE PTR [rdi+0x2]
  41667c:	mov    r10d,0x5
  416682:	mov    r14d,0x4
  416688:	jmp    0x416610
  41668a:	nop    WORD PTR [rax+rax*1+0x0]
  416690:	mov    eax,DWORD PTR [rsp+0x88]
  416697:	mov    rdx,r13
  41669a:	add    r13,0x8
  41669e:	or     eax,0x20
  4166a1:	test   al,0x4
  4166a3:	mov    DWORD PTR [rsp+0x88],eax
  4166aa:	je     0x4168c9
  4166b0:	mov    rax,QWORD PTR [rdx]
  4166b3:	mov    rcx,QWORD PTR [rsp+0x20]
  4166b8:	mov    rdx,r12
  4166bb:	fld    TBYTE PTR [rax]
  4166bd:	fstp   TBYTE PTR [rsp+0x50]
  4166c1:	call   0x415370
  4166c6:	jmp    0x416510
  4166cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4166d0:	mov    eax,DWORD PTR [rsp+0x88]
  4166d7:	mov    rdx,r13
  4166da:	add    r13,0x8
  4166de:	or     eax,0x20
  4166e1:	test   al,0x4
  4166e3:	mov    DWORD PTR [rsp+0x88],eax
  4166ea:	je     0x4168f7
  4166f0:	mov    rax,QWORD PTR [rdx]
  4166f3:	mov    rcx,QWORD PTR [rsp+0x20]
  4166f8:	mov    rdx,r12
  4166fb:	fld    TBYTE PTR [rax]
  4166fd:	fstp   TBYTE PTR [rsp+0x50]
  416701:	call   0x415800
  416706:	jmp    0x416510
  41670b:	nop    DWORD PTR [rax+rax*1+0x0]
  416710:	cmp    r10d,0x3
  416714:	je     0x416bec
  41671a:	cmp    r10d,0x2
  41671e:	je     0x416c89
  416724:	mov    eax,DWORD PTR [r13+0x0]
  416728:	cmp    r10d,0x1
  41672c:	lea    rdx,[r13+0x8]
  416730:	mov    QWORD PTR [rsp+0x70],rax
  416735:	je     0x416ccb
  41673b:	cmp    r10d,0x5
  41673f:	mov    r13,rdx
  416742:	je     0x416d20
  416748:	cmp    ecx,0x75
  41674b:	je     0x416c2c
  416751:	mov    r8,r12
  416754:	mov    rdx,rax
  416757:	call   0x415a50
  41675c:	jmp    0x416510
  416761:	sub    r10d,0x2
  416765:	mov    rax,r13
  416768:	mov    DWORD PTR [rsp+0x90],0xffffffff
  416773:	cmp    r10d,0x1
  416777:	jbe    0x41691b
  41677d:	mov    eax,DWORD PTR [rax]
  41677f:	mov    rcx,QWORD PTR [rsp+0x28]
  416784:	mov    r8,r12
  416787:	mov    edx,0x1
  41678c:	add    r13,0x8
  416790:	mov    BYTE PTR [rsp+0x70],al
  416794:	call   0x414d70
  416799:	jmp    0x416510
  41679e:	xchg   ax,ax
  4167a0:	mov    eax,DWORD PTR [rsp+0x88]
  4167a7:	mov    rdx,r13
  4167aa:	add    r13,0x8
  4167ae:	or     eax,0x20
  4167b1:	test   al,0x4
  4167b3:	mov    DWORD PTR [rsp+0x88],eax
  4167ba:	je     0x416958
  4167c0:	mov    rax,QWORD PTR [rdx]
  4167c3:	mov    rcx,QWORD PTR [rsp+0x20]
  4167c8:	mov    rdx,r12
  4167cb:	fld    TBYTE PTR [rax]
  4167cd:	fstp   TBYTE PTR [rsp+0x50]
  4167d1:	call   0x415e10
  4167d6:	jmp    0x416510
  4167db:	nop    DWORD PTR [rax+rax*1+0x0]
  4167e0:	or     DWORD PTR [rsp+0x88],0x80
  4167eb:	cmp    r10d,0x3
  4167ef:	je     0x416bc8
  4167f5:	cmp    r10d,0x2
  4167f9:	je     0x416c77
  4167ff:	movsxd rcx,DWORD PTR [r13+0x0]
  416803:	cmp    r10d,0x1
  416807:	lea    rax,[r13+0x8]
  41680b:	mov    QWORD PTR [rsp+0x70],rcx
  416810:	je     0x416cdd
  416816:	cmp    r10d,0x5
  41681a:	mov    r13,rax
  41681d:	je     0x416d2f
  416823:	mov    rax,rcx
  416826:	mov    rdx,r12
  416829:	sar    rax,0x3f
  41682d:	mov    QWORD PTR [rsp+0x78],rax
  416832:	call   0x415460
  416837:	jmp    0x416510
  41683c:	nop    DWORD PTR [rax+0x0]
  416840:	or     DWORD PTR [rsp+0x88],0x4
  416848:	movzx  eax,BYTE PTR [rdi+0x1]
  41684c:	mov    r14d,0x4
  416852:	jmp    0x416610
  416857:	nop    WORD PTR [rax+rax*1+0x0]
  416860:	movzx  eax,BYTE PTR [rdi+0x1]
  416864:	cmp    al,0x36
  416866:	je     0x416ba8
  41686c:	cmp    al,0x33
  41686e:	je     0x416c3c
  416874:	mov    r10d,0x3
  41687a:	mov    r14d,0x4
  416880:	jmp    0x416610
  416885:	mov    eax,DWORD PTR [rsp+0x88]
  41688c:	mov    rdx,r13
  41688f:	add    r13,0x8
  416893:	test   al,0x4
  416895:	jne    0x416643
  41689b:	mov    rcx,QWORD PTR [rsp+0x20]
  4168a0:	fld    QWORD PTR [rdx]
  4168a2:	mov    rdx,r12
  4168a5:	fstp   TBYTE PTR [rsp+0x50]
  4168a9:	call   0x4158b0
  4168ae:	jmp    0x416510
  4168b3:	mov    eax,DWORD PTR [rsp+0x88]
  4168ba:	mov    rdx,r13
  4168bd:	add    r13,0x8
  4168c1:	test   al,0x4
  4168c3:	jne    0x4166b0
  4168c9:	mov    rcx,QWORD PTR [rsp+0x20]
  4168ce:	fld    QWORD PTR [rdx]
  4168d0:	mov    rdx,r12
  4168d3:	fstp   TBYTE PTR [rsp+0x50]
  4168d7:	call   0x415370
  4168dc:	jmp    0x416510
  4168e1:	mov    eax,DWORD PTR [rsp+0x88]
  4168e8:	mov    rdx,r13
  4168eb:	add    r13,0x8
  4168ef:	test   al,0x4
  4168f1:	jne    0x4166f0
  4168f7:	mov    rcx,QWORD PTR [rsp+0x20]
  4168fc:	fld    QWORD PTR [rdx]
  4168fe:	mov    rdx,r12
  416901:	fstp   TBYTE PTR [rsp+0x50]
  416905:	call   0x415800
  41690a:	jmp    0x416510
  41690f:	nop
  416910:	mov    DWORD PTR [rsp+0x90],0xffffffff
  41691b:	mov    eax,DWORD PTR [r13+0x0]
  41691f:	mov    rcx,QWORD PTR [rsp+0x28]
  416924:	lea    rsi,[r13+0x8]
  416928:	mov    r8,r12
  41692b:	mov    edx,0x1
  416930:	mov    r13,rsi
  416933:	mov    WORD PTR [rsp+0x70],ax
  416938:	call   0x414c50
  41693d:	jmp    0x416510
  416942:	mov    eax,DWORD PTR [rsp+0x88]
  416949:	mov    rdx,r13
  41694c:	add    r13,0x8
  416950:	test   al,0x4
  416952:	jne    0x4167c0
  416958:	mov    rcx,QWORD PTR [rsp+0x20]
  41695d:	fld    QWORD PTR [rdx]
  41695f:	mov    rdx,r12
  416962:	fstp   TBYTE PTR [rsp+0x50]
  416966:	call   0x415e10
  41696b:	jmp    0x416510
  416970:	test   r14d,r14d
  416973:	jne    0x416b10
  416979:	or     DWORD PTR [rsp+0x88],0x200
  416984:	movzx  eax,BYTE PTR [rdi+0x1]
  416988:	jmp    0x416610
  41698d:	nop    DWORD PTR [rax]
  416990:	cmp    r14d,0x1
  416994:	jbe    0x416bfe
  41699a:	movzx  eax,BYTE PTR [rdi+0x1]
  41699e:	mov    r14d,0x4
  4169a4:	jmp    0x416610
  4169a9:	nop    DWORD PTR [rax+0x0]
  4169b0:	test   r14d,r14d
  4169b3:	jne    0x416a39
  4169b9:	or     DWORD PTR [rsp+0x88],0x400
  4169c4:	movzx  eax,BYTE PTR [rdi+0x1]
  4169c8:	jmp    0x416610
  4169cd:	nop    DWORD PTR [rax]
  4169d0:	test   r14d,r14d
  4169d3:	jne    0x416a39
  4169d5:	or     DWORD PTR [rsp+0x88],0x100
  4169e0:	movzx  eax,BYTE PTR [rdi+0x1]
  4169e4:	jmp    0x416610
  4169e9:	nop    DWORD PTR [rax+0x0]
  4169f0:	test   r14d,r14d
  4169f3:	jne    0x416a39
  4169f5:	or     DWORD PTR [rsp+0x88],0x800
  416a00:	movzx  eax,BYTE PTR [rdi+0x1]
  416a04:	jmp    0x416610
  416a09:	nop    DWORD PTR [rax+0x0]
  416a10:	test   r14d,r14d
  416a13:	jne    0x416a39
  416a15:	or     DWORD PTR [rsp+0x88],0x40
  416a1d:	movzx  eax,BYTE PTR [rdi+0x1]
  416a21:	jmp    0x416610
  416a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416a30:	test   r14d,r14d
  416a33:	je     0x416b42
  416a39:	movzx  eax,BYTE PTR [rdi+0x1]
  416a3d:	jmp    0x416610
  416a42:	mov    rdx,r12
  416a45:	call   0x414bf0
  416a4a:	jmp    0x416510
  416a4f:	nop
  416a50:	test   r11,r11
  416a53:	je     0x41699a
  416a59:	test   r14d,0xfffffffd
  416a60:	jne    0x416b30
  416a66:	mov    eax,DWORD PTR [r13+0x0]
  416a6a:	lea    rdx,[r13+0x8]
  416a6e:	test   eax,eax
  416a70:	mov    DWORD PTR [r11],eax
  416a73:	js     0x416cf0
  416a79:	movzx  eax,BYTE PTR [rdi+0x1]
  416a7d:	mov    r13,rdx
  416a80:	xor    r11d,r11d
  416a83:	jmp    0x416610
  416a88:	nop    DWORD PTR [rax+rax*1+0x0]
  416a90:	sub    eax,0x30
  416a93:	cmp    al,0x9
  416a95:	ja     0x416cb6
  416a9b:	cmp    r14d,0x3
  416a9f:	ja     0x416cb6
  416aa5:	test   r14d,r14d
  416aa8:	jne    0x416b1a
  416aaa:	mov    r14d,0x1
  416ab0:	test   r11,r11
  416ab3:	je     0x416a39
  416ab5:	mov    eax,DWORD PTR [r11]
  416ab8:	test   eax,eax
  416aba:	js     0x416c1d
  416ac0:	lea    eax,[rax+rax*4]
  416ac3:	lea    eax,[rcx+rax*2-0x30]
  416ac7:	mov    DWORD PTR [r11],eax
  416aca:	movzx  eax,BYTE PTR [rdi+0x1]
  416ace:	jmp    0x416610
  416ad3:	mov    rsi,QWORD PTR [r13+0x0]
  416ad7:	lea    rax,[rip+0xeb9a]        # 0x425678
  416ade:	lea    rdi,[r13+0x8]
  416ae2:	mov    r13,rdi
  416ae5:	test   rsi,rsi
  416ae8:	cmove  rsi,rax
  416aec:	mov    rcx,rsi
  416aef:	call   0x419800
  416af4:	mov    r8,r12
  416af7:	mov    edx,eax
  416af9:	mov    rcx,rsi
  416afc:	call   0x414c50
  416b01:	jmp    0x416510
  416b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416b10:	cmp    r14d,0x3
  416b14:	ja     0x416cb6
  416b1a:	cmp    r14d,0x2
  416b1e:	mov    eax,0x3
  416b23:	cmove  r14d,eax
  416b27:	jmp    0x416ab0
  416b29:	nop    DWORD PTR [rax+0x0]
  416b30:	movzx  eax,BYTE PTR [rdi+0x1]
  416b34:	xor    r11d,r11d
  416b37:	mov    r14d,0x4
  416b3d:	jmp    0x416610
  416b42:	mov    DWORD PTR [rsp+0x4c],r10d
  416b47:	mov    QWORD PTR [rsp+0x40],r11
  416b4c:	or     DWORD PTR [rsp+0x88],0x1000
  416b57:	mov    DWORD PTR [rsp+0x70],0x0
  416b5f:	call   0x419898
  416b64:	mov    r9,QWORD PTR [rsp+0x28]
  416b69:	mov    rdx,QWORD PTR [rax+0x8]
  416b6d:	mov    r8d,0x10
  416b73:	mov    rcx,QWORD PTR [rsp+0x38]
  416b78:	call   0x4193e0
  416b7d:	test   eax,eax
  416b7f:	mov    r11,QWORD PTR [rsp+0x40]
  416b84:	mov    r10d,DWORD PTR [rsp+0x4c]
  416b89:	jle    0x416b98
  416b8b:	movzx  edx,WORD PTR [rsp+0x6e]
  416b90:	mov    WORD PTR [rsp+0xa0],dx
  416b98:	mov    DWORD PTR [rsp+0x9c],eax
  416b9f:	movzx  eax,BYTE PTR [rdi+0x1]
  416ba3:	jmp    0x416610
  416ba8:	cmp    BYTE PTR [rdi+0x2],0x34
  416bac:	je     0x416d3f
  416bb2:	mov    eax,0x36
  416bb7:	mov    r10d,0x3
  416bbd:	mov    r14d,0x4
  416bc3:	jmp    0x416610
  416bc8:	mov    rcx,QWORD PTR [r13+0x0]
  416bcc:	add    r13,0x8
  416bd0:	mov    QWORD PTR [rsp+0x70],rcx
  416bd5:	jmp    0x416823
  416bda:	mov    edx,DWORD PTR [rsp+0xa4]
  416be1:	add    r13,0x8
  416be5:	mov    BYTE PTR [rax],dl
  416be7:	jmp    0x416510
  416bec:	mov    rax,QWORD PTR [r13+0x0]
  416bf0:	add    r13,0x8
  416bf4:	mov    QWORD PTR [rsp+0x70],rax
  416bf9:	jmp    0x416748
  416bfe:	mov    DWORD PTR [rsp+0x90],0x0
  416c09:	movzx  eax,BYTE PTR [rdi+0x1]
  416c0d:	lea    r11,[r12+0x10]
  416c12:	mov    r14d,0x2
  416c18:	jmp    0x416610
  416c1d:	sub    ecx,0x30
  416c20:	movzx  eax,BYTE PTR [rdi+0x1]
  416c24:	mov    DWORD PTR [r11],ecx
  416c27:	jmp    0x416610
  416c2c:	mov    rdx,r12
  416c2f:	mov    rcx,rax
  416c32:	call   0x415460
  416c37:	jmp    0x416510
  416c3c:	cmp    BYTE PTR [rdi+0x2],0x32
  416c40:	mov    eax,0x33
  416c45:	jne    0x416874
  416c4b:	lea    rbx,[rdi+0x3]
  416c4f:	movzx  eax,BYTE PTR [rdi+0x3]
  416c53:	mov    r10d,0x2
  416c59:	mov    r14d,0x4
  416c5f:	jmp    0x416610
  416c64:	mov    edx,DWORD PTR [rsp+0xa4]
  416c6b:	add    r13,0x8
  416c6f:	mov    WORD PTR [rax],dx
  416c72:	jmp    0x416510
  416c77:	movsxd rcx,DWORD PTR [r13+0x0]
  416c7b:	add    r13,0x8
  416c7f:	mov    QWORD PTR [rsp+0x70],rcx
  416c84:	jmp    0x416823
  416c89:	mov    eax,DWORD PTR [r13+0x0]
  416c8d:	add    r13,0x8
  416c91:	mov    QWORD PTR [rsp+0x70],rax
  416c96:	jmp    0x416748
  416c9b:	mov    eax,DWORD PTR [rsp+0x48]
  416c9f:	mov    DWORD PTR [rsp+0x90],0x10
  416caa:	mov    DWORD PTR [rsp+0x88],eax
  416cb1:	jmp    0x416533
  416cb6:	mov    rdx,r12
  416cb9:	mov    ecx,0x25
  416cbe:	mov    rbx,rsi
  416cc1:	call   0x414bf0
  416cc6:	jmp    0x416510
  416ccb:	movzx  eax,WORD PTR [rsp+0x70]
  416cd0:	mov    r13,rdx
  416cd3:	mov    QWORD PTR [rsp+0x70],rax
  416cd8:	jmp    0x416748
  416cdd:	movsx  rcx,WORD PTR [rsp+0x70]
  416ce3:	mov    r13,rax
  416ce6:	mov    QWORD PTR [rsp+0x70],rcx
  416ceb:	jmp    0x416823
  416cf0:	test   r14d,r14d
  416cf3:	jne    0x416d58
  416cf5:	or     DWORD PTR [rsp+0x88],0x400
  416d00:	neg    DWORD PTR [rsp+0x8c]
  416d07:	jmp    0x416a79
  416d0c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  416d14:	add    r13,0x8
  416d18:	mov    QWORD PTR [rax],rdx
  416d1b:	jmp    0x416510
  416d20:	movzx  eax,BYTE PTR [rsp+0x70]
  416d25:	mov    QWORD PTR [rsp+0x70],rax
  416d2a:	jmp    0x416748
  416d2f:	movsx  rcx,BYTE PTR [rsp+0x70]
  416d35:	mov    QWORD PTR [rsp+0x70],rcx
  416d3a:	jmp    0x416823
  416d3f:	lea    rbx,[rdi+0x3]
  416d43:	movzx  eax,BYTE PTR [rdi+0x3]
  416d47:	mov    r10d,0x3
  416d4d:	mov    r14d,0x4
  416d53:	jmp    0x416610
  416d58:	mov    DWORD PTR [rsp+0x90],0xffffffff
  416d63:	movzx  eax,BYTE PTR [rdi+0x1]
  416d67:	mov    r13,rdx
  416d6a:	xor    r11d,r11d
  416d6d:	jmp    0x416610
  416d72:	nop
  416d73:	nop
  416d74:	nop
  416d75:	nop
  416d76:	nop
  416d77:	nop
  416d78:	nop
  416d79:	nop
  416d7a:	nop
  416d7b:	nop
  416d7c:	nop
  416d7d:	nop
  416d7e:	nop
  416d7f:	nop
  416d80:	fld    TBYTE PTR [rdx]
  416d82:	fxam   
  416d84:	fstsw  ax
  416d87:	mov    dh,0x45
  416d89:	and    dh,ah
  416d8b:	cmp    dh,0x5
  416d8e:	je     0x416dcf
  416d90:	fld    st(0)
  416d92:	sub    rsp,0x8
  416d96:	fnstcw WORD PTR [rsp+0x4]
  416d9a:	movzx  eax,WORD PTR [rsp+0x4]
  416d9f:	or     ah,0xc
  416da2:	mov    WORD PTR [rsp],ax
  416da6:	fldcw  WORD PTR [rsp]
  416da9:	frndint 
  416dab:	fldcw  WORD PTR [rsp+0x4]
  416daf:	add    rsp,0x8
  416db3:	fsub   st(1),st
  416db5:	fxch   st(1)
  416db7:	f2xm1  
  416db9:	fld1   
  416dbb:	faddp  st(1),st
  416dbd:	fscale 
  416dbf:	fstp   st(1)
  416dc1:	mov    rax,rcx
  416dc4:	mov    QWORD PTR [rcx+0x8],0x0
  416dcc:	fstp   TBYTE PTR [rcx]
  416dce:	ret    
  416dcf:	test   eax,0x200
  416dd4:	je     0x416dda
  416dd6:	fstp   st(0)
  416dd8:	fldz   
  416dda:	mov    rax,rcx
  416ddd:	mov    QWORD PTR [rcx+0x8],0x0
  416de5:	fstp   TBYTE PTR [rcx]
  416de7:	ret    
  416de8:	nop
  416de9:	nop
  416dea:	nop
  416deb:	nop
  416dec:	nop
  416ded:	nop
  416dee:	nop
  416def:	nop
  416df0:	sub    rsp,0x48
  416df4:	movsd  QWORD PTR [rsp+0x30],xmm0
  416dfa:	mov    eax,DWORD PTR [rsp+0x34]
  416dfe:	movapd xmm1,xmm0
  416e02:	mov    ecx,eax
  416e04:	and    ecx,0x7ff00000
  416e0a:	cmp    ecx,0x7ff00000
  416e10:	sete   r8b
  416e14:	and    eax,0xfffff
  416e19:	or     eax,ecx
  416e1b:	or     eax,DWORD PTR [rsp+0x30]
  416e1f:	sete   r9b
  416e23:	test   ecx,ecx
  416e25:	sete   al
  416e28:	or     eax,r9d
  416e2b:	cmp    r8b,al
  416e2e:	ja     0x416ec9
  416e34:	pxor   xmm2,xmm2
  416e38:	ucomisd xmm0,xmm2
  416e3c:	jp     0x416e48
  416e3e:	movapd xmm1,xmm0
  416e42:	je     0x416ec9
  416e48:	pxor   xmm3,xmm3
  416e4c:	movsd  QWORD PTR [rsp+0x20],xmm0
  416e52:	fld    QWORD PTR [rsp+0x20]
  416e56:	cvtsi2sd xmm3,edx
  416e5a:	movsd  QWORD PTR [rsp+0x28],xmm3
  416e60:	fld    QWORD PTR [rsp+0x28]
  416e64:	fxch   st(1)
  416e66:	fscale 
  416e68:	fstp   st(1)
  416e6a:	fstp   QWORD PTR [rsp+0x20]
  416e6e:	movsd  xmm4,QWORD PTR [rsp+0x20]
  416e74:	movsd  QWORD PTR [rsp+0x38],xmm4
  416e7a:	mov    eax,DWORD PTR [rsp+0x3c]
  416e7e:	mov    edx,eax
  416e80:	and    edx,0x7ff00000
  416e86:	cmp    edx,0x7ff00000
  416e8c:	sete   cl
  416e8f:	and    eax,0xfffff
  416e94:	or     eax,edx
  416e96:	or     eax,DWORD PTR [rsp+0x38]
  416e9a:	sete   r8b
  416e9e:	test   edx,edx
  416ea0:	sete   al
  416ea3:	or     eax,r8d
  416ea6:	cmp    cl,al
  416ea8:	ja     0x416eb8
  416eaa:	movsd  xmm5,QWORD PTR [rsp+0x20]
  416eb0:	ucomisd xmm5,xmm2
  416eb4:	jp     0x416ed2
  416eb6:	jne    0x416ed2
  416eb8:	call   0x419948
  416ebd:	movsd  xmm1,QWORD PTR [rsp+0x20]
  416ec3:	mov    DWORD PTR [rax],0x22
  416ec9:	movapd xmm0,xmm1
  416ecd:	add    rsp,0x48
  416ed1:	ret    
  416ed2:	movsd  xmm1,QWORD PTR [rsp+0x20]
  416ed8:	movapd xmm0,xmm1
  416edc:	add    rsp,0x48
  416ee0:	ret    
  416ee1:	nop
  416ee2:	nop
  416ee3:	nop
  416ee4:	nop
  416ee5:	nop
  416ee6:	nop
  416ee7:	nop
  416ee8:	nop
  416ee9:	nop
  416eea:	nop
  416eeb:	nop
  416eec:	nop
  416eed:	nop
  416eee:	nop
  416eef:	nop
  416ef0:	add    BYTE PTR [rax],al
  416ef2:	add    BYTE PTR [rax],al
  416ef4:	add    BYTE PTR [rax],al
  416ef6:	lock (bad) 
  416ef8:	pop    rdx
  416efa:	cmc    
  416efb:	sub    BYTE PTR [rdi+rcx*4-0x2e],bl
  416eff:	(bad)  
  416f00:	fld    QWORD PTR [rip+0xffffffffffffffea]        # 0x416ef0
  416f06:	fld    TBYTE PTR [rdx]
  416f08:	fxam   
  416f0a:	fnstsw ax
  416f0c:	fld    st(0)
  416f0e:	sahf   
  416f0f:	jb     0x416f48
  416f11:	fsub   st,st(2)
  416f13:	fld    st(0)
  416f15:	fabs   
  416f17:	fcomp  QWORD PTR [rip+0xffffffffffffffdb]        # 0x416ef8
  416f1d:	fnstsw ax
  416f1f:	and    ah,0x45
  416f22:	je     0x416f36
  416f24:	fstp   st(1)
  416f26:	fyl2xp1 
  416f28:	mov    rax,rcx
  416f2b:	mov    QWORD PTR [rcx+0x8],0x0
  416f33:	fstp   TBYTE PTR [rcx]
  416f35:	ret    
  416f36:	fstp   st(0)
  416f38:	fyl2x  
  416f3a:	mov    rax,rcx
  416f3d:	mov    QWORD PTR [rcx+0x8],0x0
  416f45:	fstp   TBYTE PTR [rcx]
  416f47:	ret    
  416f48:	jp     0x416f11
  416f4a:	fstp   st(1)
  416f4c:	fstp   st(1)
  416f4e:	mov    rax,rcx
  416f51:	mov    QWORD PTR [rcx+0x8],0x0
  416f59:	fstp   TBYTE PTR [rcx]
  416f5b:	ret    
  416f5c:	nop
  416f5d:	nop
  416f5e:	nop
  416f5f:	nop
  416f60:	push   rbx
  416f61:	sub    rsp,0x20
  416f65:	xor    ebx,ebx
  416f67:	cmp    ecx,0x1b
  416f6a:	jle    0x416f7d
  416f6c:	mov    eax,0x4
  416f71:	add    eax,eax
  416f73:	add    ebx,0x1
  416f76:	lea    edx,[rax+0x17]
  416f79:	cmp    edx,ecx
  416f7b:	jl     0x416f71
  416f7d:	mov    ecx,ebx
  416f7f:	call   0x418850
  416f84:	mov    DWORD PTR [rax],ebx
  416f86:	add    rax,0x4
  416f8a:	add    rsp,0x20
  416f8e:	pop    rbx
  416f8f:	ret    
  416f90:	push   rsi
  416f91:	push   rbx
  416f92:	sub    rsp,0x28
  416f96:	mov    rbx,rcx
  416f99:	mov    ecx,r8d
  416f9c:	mov    rsi,rdx
  416f9f:	call   0x416f60
  416fa4:	movzx  ecx,BYTE PTR [rbx]
  416fa7:	lea    r8,[rbx+0x1]
  416fab:	test   cl,cl
  416fad:	mov    BYTE PTR [rax],cl
  416faf:	mov    rcx,rax
  416fb2:	je     0x416fc9
  416fb4:	add    r8,0x1
  416fb8:	movzx  r9d,BYTE PTR [r8-0x1]
  416fbd:	add    rcx,0x1
  416fc1:	test   r9b,r9b
  416fc4:	mov    BYTE PTR [rcx],r9b
  416fc7:	jne    0x416fb4
  416fc9:	test   rsi,rsi
  416fcc:	je     0x416fd1
  416fce:	mov    QWORD PTR [rsi],rcx
  416fd1:	add    rsp,0x28
  416fd5:	pop    rbx
  416fd6:	pop    rsi
  416fd7:	ret    
  416fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  416fe0:	mov    edx,0x1
  416fe5:	mov    rax,rcx
  416fe8:	mov    ecx,DWORD PTR [rcx-0x4]
  416feb:	shl    edx,cl
  416fed:	mov    DWORD PTR [rax+0x4],ecx
  416ff0:	lea    rcx,[rax-0x4]
  416ff4:	mov    DWORD PTR [rax+0x8],edx
  416ff7:	jmp    0x418960
  416ffc:	nop    DWORD PTR [rax+0x0]
  417000:	push   r15
  417002:	push   r14
  417004:	push   r13
  417006:	push   r12
  417008:	push   rbp
  417009:	push   rdi
  41700a:	push   rsi
  41700b:	push   rbx
  41700c:	sub    rsp,0x38
  417010:	xor    eax,eax
  417012:	mov    edi,DWORD PTR [rdx+0x14]
  417015:	cmp    edi,DWORD PTR [rcx+0x14]
  417018:	mov    r15,rdx
  41701b:	jg     0x417169
  417021:	sub    edi,0x1
  417024:	lea    rbx,[rdx+0x18]
  417028:	lea    r12,[rcx+0x18]
  41702c:	movsxd r13,edi
  41702f:	xor    edx,edx
  417031:	shl    r13,0x2
  417035:	lea    rbp,[rbx+r13*1]
  417039:	add    r13,r12
  41703c:	mov    eax,DWORD PTR [rbp+0x0]
  41703f:	lea    r8d,[rax+0x1]
  417043:	mov    eax,DWORD PTR [r13+0x0]
  417047:	div    r8d
  41704a:	test   eax,eax
  41704c:	mov    r14d,eax
  41704f:	mov    DWORD PTR [rsp+0x2c],eax
  417053:	je     0x4170e7
  417059:	mov    edx,eax
  41705b:	mov    rsi,rbx
  41705e:	mov    r11,r12
  417061:	xor    eax,eax
  417063:	xor    r10d,r10d
  417066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417070:	add    rsi,0x4
  417074:	mov    r8d,DWORD PTR [rsi-0x4]
  417078:	mov    r9d,DWORD PTR [r11]
  41707b:	add    r11,0x4
  41707f:	imul   r8,rdx
  417083:	add    r8,rax
  417086:	mov    rax,r8
  417089:	mov    r8d,r8d
  41708c:	sub    r9,r8
  41708f:	shr    rax,0x20
  417093:	sub    r9,r10
  417096:	mov    r10,r9
  417099:	mov    DWORD PTR [r11-0x4],r9d
  41709d:	shr    r10,0x20
  4170a1:	and    r10d,0x1
  4170a5:	cmp    rbp,rsi
  4170a8:	jae    0x417070
  4170aa:	mov    r11d,DWORD PTR [r13+0x0]
  4170ae:	test   r11d,r11d
  4170b1:	jne    0x4170e7
  4170b3:	lea    rax,[r13-0x4]
  4170b7:	cmp    r12,rax
  4170ba:	jae    0x4170e4
  4170bc:	mov    r10d,DWORD PTR [r13-0x4]
  4170c0:	test   r10d,r10d
  4170c3:	je     0x4170d8
  4170c5:	jmp    0x4170e4
  4170c7:	nop    WORD PTR [rax+rax*1+0x0]
  4170d0:	mov    r9d,DWORD PTR [rax]
  4170d3:	test   r9d,r9d
  4170d6:	jne    0x4170e4
  4170d8:	sub    rax,0x4
  4170dc:	sub    edi,0x1
  4170df:	cmp    r12,rax
  4170e2:	jb     0x4170d0
  4170e4:	mov    DWORD PTR [rcx+0x14],edi
  4170e7:	mov    rdx,r15
  4170ea:	mov    rsi,rcx
  4170ed:	call   0x418e80
  4170f2:	test   eax,eax
  4170f4:	js     0x417165
  4170f6:	lea    eax,[r14+0x1]
  4170fa:	mov    rcx,r12
  4170fd:	xor    edx,edx
  4170ff:	mov    DWORD PTR [rsp+0x2c],eax
  417103:	add    rbx,0x4
  417107:	mov    eax,DWORD PTR [rcx]
  417109:	mov    r8d,DWORD PTR [rbx-0x4]
  41710d:	add    rcx,0x4
  417111:	sub    rax,r8
  417114:	sub    rax,rdx
  417117:	mov    rdx,rax
  41711a:	mov    DWORD PTR [rcx-0x4],eax
  41711d:	shr    rdx,0x20
  417121:	and    edx,0x1
  417124:	cmp    rbp,rbx
  417127:	jae    0x417103
  417129:	movsxd rax,edi
  41712c:	lea    rdx,[r12+rax*4]
  417130:	mov    r8d,DWORD PTR [rdx]
  417133:	test   r8d,r8d
  417136:	jne    0x417165
  417138:	lea    rax,[rdx-0x4]
  41713c:	cmp    r12,rax
  41713f:	jae    0x417162
  417141:	mov    ecx,DWORD PTR [rdx-0x4]
  417144:	test   ecx,ecx
  417146:	je     0x417156
  417148:	jmp    0x417162
  41714a:	nop    WORD PTR [rax+rax*1+0x0]
  417150:	mov    edx,DWORD PTR [rax]
  417152:	test   edx,edx
  417154:	jne    0x417162
  417156:	sub    rax,0x4
  41715a:	sub    edi,0x1
  41715d:	cmp    r12,rax
  417160:	jb     0x417150
  417162:	mov    DWORD PTR [rsi+0x14],edi
  417165:	mov    eax,DWORD PTR [rsp+0x2c]
  417169:	add    rsp,0x38
  41716d:	pop    rbx
  41716e:	pop    rsi
  41716f:	pop    rdi
  417170:	pop    rbp
  417171:	pop    r12
  417173:	pop    r13
  417175:	pop    r14
  417177:	pop    r15
  417179:	ret    
  41717a:	nop
  41717b:	nop
  41717c:	nop
  41717d:	nop
  41717e:	nop
  41717f:	nop
  417180:	push   r15
  417182:	push   r14
  417184:	push   r13
  417186:	push   r12
  417188:	push   rbp
  417189:	push   rdi
  41718a:	push   rsi
  41718b:	push   rbx
  41718c:	sub    rsp,0xb8
  417193:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  41719b:	mov    r12d,DWORD PTR [r9]
  41719e:	mov    eax,r12d
  4171a1:	and    eax,0xffffffcf
  4171a4:	mov    DWORD PTR [r9],eax
  4171a7:	mov    eax,r12d
  4171aa:	and    eax,0x7
  4171ad:	cmp    eax,0x4
  4171b0:	ja     0x4185e3
  4171b6:	mov    r13d,edx
  4171b9:	lea    rdx,[rip+0xe660]        # 0x425820
  4171c0:	mov    QWORD PTR [rsp+0x28],r9
  4171c5:	mov    r15,r8
  4171c8:	mov    rbp,rcx
  4171cb:	movsxd rax,DWORD PTR [rdx+rax*4]
  4171cf:	add    rdx,rax
  4171d2:	jmp    rdx
  4171d4:	mov    edi,DWORD PTR [rcx]
  4171d6:	xor    ecx,ecx
  4171d8:	cmp    edi,0x20
  4171db:	jle    0x4171eb
  4171dd:	mov    eax,0x20
  4171e2:	add    eax,eax
  4171e4:	add    ecx,0x1
  4171e7:	cmp    edi,eax
  4171e9:	jg     0x4171e2
  4171eb:	call   0x418850
  4171f0:	mov    rsi,rax
  4171f3:	lea    eax,[rdi-0x1]
  4171f6:	lea    r9,[rsi+0x18]
  4171fa:	sar    eax,0x5
  4171fd:	cdqe   
  4171ff:	mov    rdx,r9
  417202:	lea    r11,[r15+rax*4]
  417206:	mov    rax,r15
  417209:	nop    DWORD PTR [rax+0x0]
  417210:	mov    ecx,DWORD PTR [rax]
  417212:	add    rax,0x4
  417216:	add    rdx,0x4
  41721a:	cmp    r11,rax
  41721d:	mov    DWORD PTR [rdx-0x4],ecx
  417220:	jae    0x417210
  417222:	sub    rdx,r9
  417225:	sar    rdx,0x2
  417229:	mov    r14d,edx
  41722c:	movsxd rdx,edx
  41722f:	lea    rax,[r9+rdx*4-0x4]
  417234:	jmp    0x41724f
  417236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417240:	sub    rax,0x4
  417244:	test   edx,edx
  417246:	mov    r14d,edx
  417249:	je     0x417750
  41724f:	mov    r8d,DWORD PTR [rax]
  417252:	lea    edx,[r14-0x1]
  417256:	test   r8d,r8d
  417259:	je     0x417240
  41725b:	movsxd rdx,edx
  41725e:	mov    DWORD PTR [rsi+0x14],r14d
  417262:	shl    r14d,0x5
  417266:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  41726b:	xor    eax,0x1f
  41726e:	sub    r14d,eax
  417271:	mov    rcx,rsi
  417274:	call   0x4186f0
  417279:	test   eax,eax
  41727b:	mov    DWORD PTR [rsp+0x9c],eax
  417282:	mov    r11d,r13d
  417285:	jne    0x417760
  41728b:	mov    ecx,DWORD PTR [rsi+0x14]
  41728e:	test   ecx,ecx
  417290:	jne    0x417340
  417296:	mov    rcx,rsi
  417299:	call   0x418960
  41729e:	mov    rax,QWORD PTR [rsp+0x130]
  4172a6:	mov    rdx,QWORD PTR [rsp+0x138]
  4172ae:	lea    rcx,[rip+0xe568]        # 0x42581d
  4172b5:	mov    r8d,0x1
  4172bb:	mov    DWORD PTR [rax],0x1
  4172c1:	call   0x416f90
  4172c6:	nop
  4172c7:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  4172cf:	add    rsp,0xb8
  4172d6:	pop    rbx
  4172d7:	pop    rsi
  4172d8:	pop    rdi
  4172d9:	pop    rbp
  4172da:	pop    r12
  4172dc:	pop    r13
  4172de:	pop    r14
  4172e0:	pop    r15
  4172e2:	ret    
  4172e3:	mov    rax,QWORD PTR [rsp+0x130]
  4172eb:	mov    rdx,QWORD PTR [rsp+0x138]
  4172f3:	lea    rcx,[rip+0xe51f]        # 0x425819
  4172fa:	mov    r8d,0x3
  417300:	mov    DWORD PTR [rax],0xffff8000
  417306:	call   0x416f90
  41730b:	jmp    0x4172c7
  41730d:	nop    DWORD PTR [rax]
  417310:	mov    rax,QWORD PTR [rsp+0x130]
  417318:	mov    rdx,QWORD PTR [rsp+0x138]
  417320:	lea    rcx,[rip+0xe4e9]        # 0x425810
  417327:	mov    r8d,0x8
  41732d:	mov    DWORD PTR [rax],0xffff8000
  417333:	call   0x416f90
  417338:	jmp    0x4172c7
  41733a:	nop    WORD PTR [rax+rax*1+0x0]
  417340:	lea    rdx,[rsp+0x9c]
  417348:	mov    rcx,rsi
  41734b:	mov    DWORD PTR [rsp+0x30],r11d
  417350:	call   0x419010
  417355:	movq   rdx,xmm0
  41735a:	movq   r9,xmm0
  41735f:	mov    r11d,DWORD PTR [rsp+0x30]
  417364:	pxor   xmm0,xmm0
  417368:	shr    rdx,0x20
  41736c:	mov    r9d,r9d
  41736f:	and    edx,0xfffff
  417375:	lea    ecx,[r11+r14*1-0x1]
  41737a:	or     edx,0x3ff00000
  417380:	mov    rax,rdx
  417383:	cvtsi2sd xmm0,ecx
  417387:	shl    rax,0x20
  41738b:	mov    ebx,ecx
  41738d:	or     r9,rax
  417390:	sar    ebx,0x1f
  417393:	mov    QWORD PTR [rsp+0x30],r9
  417398:	mov    eax,ebx
  41739a:	movsd  xmm1,QWORD PTR [rsp+0x30]
  4173a0:	xor    eax,ecx
  4173a2:	sub    eax,ebx
  4173a4:	subsd  xmm1,QWORD PTR [rip+0xe48c]        # 0x425838
  4173ac:	sub    eax,0x435
  4173b1:	test   eax,eax
  4173b3:	mulsd  xmm0,QWORD PTR [rip+0xe495]        # 0x425850
  4173bb:	mulsd  xmm1,QWORD PTR [rip+0xe47d]        # 0x425840
  4173c3:	addsd  xmm1,QWORD PTR [rip+0xe47d]        # 0x425848
  4173cb:	addsd  xmm1,xmm0
  4173cf:	jle    0x4173e5
  4173d1:	pxor   xmm0,xmm0
  4173d5:	cvtsi2sd xmm0,eax
  4173d9:	mulsd  xmm0,QWORD PTR [rip+0xe477]        # 0x425858
  4173e1:	addsd  xmm1,xmm0
  4173e5:	cvttsd2si eax,xmm1
  4173e9:	pxor   xmm6,xmm6
  4173ed:	ucomisd xmm6,xmm1
  4173f1:	mov    DWORD PTR [rsp+0x30],eax
  4173f5:	ja     0x417c83
  4173fb:	mov    eax,ecx
  4173fd:	mov    r9d,r9d
  417400:	mov    DWORD PTR [rsp+0x6c],0x1
  417408:	shl    eax,0x14
  41740b:	add    eax,edx
  41740d:	shl    rax,0x20
  417411:	or     r9,rax
  417414:	cmp    DWORD PTR [rsp+0x30],0x16
  417419:	mov    QWORD PTR [rsp+0x80],r9
  417421:	ja     0x417450
  417423:	movsxd rax,DWORD PTR [rsp+0x30]
  417428:	mov    rdx,QWORD PTR [rip+0xe761]        # 0x425b90
  41742f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  417434:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  41743d:	jbe    0x4177a0
  417443:	sub    DWORD PTR [rsp+0x30],0x1
  417448:	mov    DWORD PTR [rsp+0x6c],0x0
  417450:	mov    eax,r14d
  417453:	mov    DWORD PTR [rsp+0x50],0x0
  41745b:	sub    eax,ecx
  41745d:	sub    eax,0x1
  417460:	mov    DWORD PTR [rsp+0x40],eax
  417464:	js     0x417c70
  41746a:	mov    eax,DWORD PTR [rsp+0x30]
  41746e:	test   eax,eax
  417470:	js     0x417c50
  417476:	add    DWORD PTR [rsp+0x40],eax
  41747a:	mov    DWORD PTR [rsp+0x88],eax
  417481:	mov    DWORD PTR [rsp+0x58],0x0
  417489:	cmp    DWORD PTR [rsp+0x120],0x9
  417491:	ja     0x417780
  417497:	cmp    DWORD PTR [rsp+0x120],0x5
  41749f:	jle    0x41778b
  4174a5:	sub    DWORD PTR [rsp+0x120],0x4
  4174ad:	xor    eax,eax
  4174af:	cmp    DWORD PTR [rsp+0x120],0x3
  4174b7:	je     0x417e44
  4174bd:	jle    0x417ba3
  4174c3:	cmp    DWORD PTR [rsp+0x120],0x4
  4174cb:	mov    DWORD PTR [rsp+0x60],0x1
  4174d3:	je     0x4177b0
  4174d9:	cmp    DWORD PTR [rsp+0x120],0x5
  4174e1:	jne    0x417bb9
  4174e7:	mov    ebx,DWORD PTR [rsp+0x30]
  4174eb:	add    ebx,DWORD PTR [rsp+0x128]
  4174f2:	mov    DWORD PTR [rsp+0x8c],ebx
  4174f9:	add    ebx,0x1
  4174fc:	test   ebx,ebx
  4174fe:	mov    DWORD PTR [rsp+0x68],ebx
  417502:	mov    ecx,ebx
  417504:	jle    0x418080
  41750a:	cmp    ebx,0xe
  41750d:	mov    DWORD PTR [rsp+0x9c],ebx
  417514:	setbe  bl
  417517:	and    ebx,eax
  417519:	mov    QWORD PTR [rsp+0x78],r9
  41751e:	mov    DWORD PTR [rsp+0x70],r11d
  417523:	call   0x416f60
  417528:	mov    QWORD PTR [rsp+0x48],rax
  41752d:	mov    eax,DWORD PTR [rbp+0xc]
  417530:	mov    r11d,DWORD PTR [rsp+0x70]
  417535:	mov    r9,QWORD PTR [rsp+0x78]
  41753a:	sub    eax,0x1
  41753d:	mov    DWORD PTR [rsp+0x38],eax
  417541:	je     0x417568
  417543:	mov    ecx,DWORD PTR [rsp+0x38]
  417547:	mov    eax,0x2
  41754c:	test   ecx,ecx
  41754e:	cmovns eax,ecx
  417551:	and    r12d,0x8
  417555:	mov    DWORD PTR [rsp+0x38],eax
  417559:	je     0x417568
  41755b:	mov    eax,0x3
  417560:	sub    eax,DWORD PTR [rsp+0x38]
  417564:	mov    DWORD PTR [rsp+0x38],eax
  417568:	test   bl,bl
  41756a:	je     0x417860
  417570:	mov    eax,DWORD PTR [rsp+0x38]
  417574:	or     eax,DWORD PTR [rsp+0x30]
  417578:	jne    0x417860
  41757e:	mov    eax,DWORD PTR [rsp+0x6c]
  417582:	mov    DWORD PTR [rsp+0x9c],0x0
  41758d:	movsd  xmm4,QWORD PTR [rsp+0x80]
  417596:	test   eax,eax
  417598:	je     0x4175ac
  41759a:	movsd  xmm0,QWORD PTR [rip+0xe2c6]        # 0x425868
  4175a2:	ucomisd xmm0,xmm4
  4175a6:	ja     0x4183db
  4175ac:	movapd xmm0,xmm4
  4175b0:	mov    r12d,DWORD PTR [rsp+0x68]
  4175b5:	addsd  xmm0,xmm4
  4175b9:	addsd  xmm0,QWORD PTR [rip+0xe2bf]        # 0x425880
  4175c1:	movq   rdx,xmm0
  4175c6:	movq   rax,xmm0
  4175cb:	shr    rdx,0x20
  4175cf:	mov    eax,eax
  4175d1:	sub    edx,0x3400000
  4175d7:	shl    rdx,0x20
  4175db:	or     rax,rdx
  4175de:	test   r12d,r12d
  4175e1:	je     0x417817
  4175e7:	mov    r9d,DWORD PTR [rsp+0x68]
  4175ec:	movapd xmm0,xmm4
  4175f0:	xor    ecx,ecx
  4175f2:	mov    ebx,DWORD PTR [rsp+0x60]
  4175f6:	lea    edx,[r9-0x1]
  4175fa:	movsxd rdx,edx
  4175fd:	test   ebx,ebx
  4175ff:	je     0x418123
  417605:	mov    r10,QWORD PTR [rip+0xe584]        # 0x425b90
  41760c:	movsd  xmm1,QWORD PTR [rip+0xe28c]        # 0x4258a0
  417614:	mov    QWORD PTR [rsp+0x38],rax
  417619:	cvttsd2si eax,xmm0
  41761d:	pxor   xmm2,xmm2
  417621:	mov    DWORD PTR [rsp+0x9c],0x0
  41762c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  417632:	mov    rdx,QWORD PTR [rsp+0x48]
  417637:	mov    rbx,rdx
  41763a:	add    rbx,0x1
  41763e:	cvtsi2sd xmm2,eax
  417642:	add    eax,0x30
  417645:	mov    BYTE PTR [rdx],al
  417647:	movsd  xmm5,QWORD PTR [rsp+0x38]
  41764d:	subsd  xmm0,xmm2
  417651:	subsd  xmm1,xmm5
  417655:	ucomisd xmm1,xmm0
  417659:	ja     0x4176f4
  41765f:	movsd  xmm5,QWORD PTR [rip+0xe201]        # 0x425868
  417667:	movapd xmm2,xmm5
  41766b:	subsd  xmm2,xmm0
  41766f:	ucomisd xmm1,xmm2
  417673:	ja     0x4181f7
  417679:	mov    eax,DWORD PTR [rsp+0x9c]
  417680:	movsd  xmm3,QWORD PTR [rip+0xe1e8]        # 0x425870
  417688:	add    eax,0x1
  41768b:	cmp    r9d,eax
  41768e:	mov    DWORD PTR [rsp+0x9c],eax
  417695:	jg     0x4176cc
  417697:	jmp    0x41784e
  41769c:	nop    DWORD PTR [rax+0x0]
  4176a0:	movapd xmm2,xmm5
  4176a4:	subsd  xmm2,xmm0
  4176a8:	ucomisd xmm1,xmm2
  4176ac:	ja     0x4181f7
  4176b2:	mov    eax,DWORD PTR [rsp+0x9c]
  4176b9:	add    eax,0x1
  4176bc:	cmp    r9d,eax
  4176bf:	mov    DWORD PTR [rsp+0x9c],eax
  4176c6:	jle    0x41784e
  4176cc:	mulsd  xmm0,xmm3
  4176d0:	add    rbx,0x1
  4176d4:	pxor   xmm2,xmm2
  4176d8:	mulsd  xmm1,xmm3
  4176dc:	cvttsd2si eax,xmm0
  4176e0:	cvtsi2sd xmm2,eax
  4176e4:	add    eax,0x30
  4176e7:	mov    BYTE PTR [rbx-0x1],al
  4176ea:	subsd  xmm0,xmm2
  4176ee:	ucomisd xmm1,xmm0
  4176f2:	jbe    0x4176a0
  4176f4:	ucomisd xmm0,xmm6
  4176f8:	lea    ebp,[rcx+0x1]
  4176fb:	jp     0x417703
  4176fd:	je     0x418057
  417703:	mov    r15d,0x10
  417709:	nop    DWORD PTR [rax+0x0]
  417710:	mov    rcx,rsi
  417713:	call   0x418960
  417718:	cmp    QWORD PTR [rsp+0x138],0x0
  417721:	mov    rax,QWORD PTR [rsp+0x130]
  417729:	mov    BYTE PTR [rbx],0x0
  41772c:	mov    DWORD PTR [rax],ebp
  41772e:	je     0x41773b
  417730:	mov    rax,QWORD PTR [rsp+0x138]
  417738:	mov    QWORD PTR [rax],rbx
  41773b:	mov    rax,QWORD PTR [rsp+0x28]
  417740:	or     DWORD PTR [rax],r15d
  417743:	mov    rax,QWORD PTR [rsp+0x48]
  417748:	jmp    0x4172c7
  41774d:	nop    DWORD PTR [rax]
  417750:	mov    DWORD PTR [rsi+0x14],0x0
  417757:	jmp    0x417271
  41775c:	nop    DWORD PTR [rax+0x0]
  417760:	mov    edx,eax
  417762:	mov    rcx,rsi
  417765:	call   0x4185f0
  41776a:	mov    eax,DWORD PTR [rsp+0x9c]
  417771:	lea    r11d,[r13+rax*1+0x0]
  417776:	sub    r14d,eax
  417779:	jmp    0x41728b
  41777e:	xchg   ax,ax
  417780:	mov    DWORD PTR [rsp+0x120],0x0
  41778b:	add    ecx,0x3fe
  417791:	cmp    ecx,0x7f7
  417797:	setbe  al
  41779a:	jmp    0x4174af
  41779f:	nop
  4177a0:	mov    DWORD PTR [rsp+0x6c],0x0
  4177a8:	jmp    0x417450
  4177ad:	nop    DWORD PTR [rax]
  4177b0:	mov    edx,DWORD PTR [rsp+0x128]
  4177b7:	test   edx,edx
  4177b9:	jle    0x41806b
  4177bf:	cmp    DWORD PTR [rsp+0x128],0xe
  4177c7:	setbe  bl
  4177ca:	mov    ecx,DWORD PTR [rsp+0x128]
  4177d1:	and    ebx,eax
  4177d3:	mov    DWORD PTR [rsp+0x9c],ecx
  4177da:	mov    DWORD PTR [rsp+0x8c],ecx
  4177e1:	mov    DWORD PTR [rsp+0x68],ecx
  4177e5:	jmp    0x417519
  4177ea:	movapd xmm0,xmm4
  4177ee:	addsd  xmm0,xmm4
  4177f2:	addsd  xmm0,QWORD PTR [rip+0xe086]        # 0x425880
  4177fa:	movq   rdx,xmm0
  4177ff:	movq   rax,xmm0
  417804:	shr    rdx,0x20
  417808:	mov    eax,eax
  41780a:	sub    edx,0x3400000
  417810:	shl    rdx,0x20
  417814:	or     rax,rdx
  417817:	movapd xmm1,xmm4
  41781b:	mov    QWORD PTR [rsp+0x38],rax
  417820:	movsd  xmm0,QWORD PTR [rsp+0x38]
  417826:	subsd  xmm1,QWORD PTR [rip+0xe05a]        # 0x425888
  41782e:	ucomisd xmm1,xmm0
  417832:	ja     0x418114
  417838:	movsd  xmm2,QWORD PTR [rip+0xe050]        # 0x425890
  417840:	xorpd  xmm0,xmm2
  417844:	ucomisd xmm0,xmm1
  417848:	ja     0x417c2d
  41784e:	movq   r9,xmm4
  417853:	mov    DWORD PTR [rsp+0x38],0x0
  41785b:	nop    DWORD PTR [rax+rax*1+0x0]
  417860:	test   r11d,r11d
  417863:	js     0x417902
  417869:	movsxd rax,DWORD PTR [rsp+0x30]
  41786e:	cmp    eax,DWORD PTR [rbp+0x14]
  417871:	jg     0x417902
  417877:	mov    ebx,DWORD PTR [rsp+0x68]
  41787b:	mov    rdx,QWORD PTR [rip+0xe30e]        # 0x425b90
  417882:	test   ebx,ebx
  417884:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  417889:	jg     0x417f93
  41788f:	mov    eax,DWORD PTR [rsp+0x128]
  417896:	shr    eax,0x1f
  417899:	test   al,al
  41789b:	je     0x417f93
  4178a1:	test   ebx,ebx
  4178a3:	jne    0x417c2d
  4178a9:	mulsd  xmm2,QWORD PTR [rip+0xdfd7]        # 0x425888
  4178b1:	mov    QWORD PTR [rsp+0x38],r9
  4178b6:	movsd  xmm5,QWORD PTR [rsp+0x38]
  4178bc:	ucomisd xmm2,xmm5
  4178c0:	jae    0x417c2d
  4178c6:	mov    ebp,DWORD PTR [rsp+0x30]
  4178ca:	xor    r12d,r12d
  4178cd:	xor    edi,edi
  4178cf:	add    ebp,0x2
  4178d2:	mov    rax,QWORD PTR [rsp+0x48]
  4178d7:	mov    r15d,0x20
  4178dd:	lea    rbx,[rax+0x1]
  4178e1:	mov    BYTE PTR [rax],0x31
  4178e4:	mov    rcx,r12
  4178e7:	call   0x418960
  4178ec:	test   rdi,rdi
  4178ef:	je     0x417710
  4178f5:	mov    rcx,rdi
  4178f8:	call   0x418960
  4178fd:	jmp    0x417710
  417902:	mov    r9d,DWORD PTR [rsp+0x60]
  417907:	test   r9d,r9d
  41790a:	je     0x417e10
  417910:	mov    edx,DWORD PTR [rbp+0x4]
  417913:	sub    edi,r14d
  417916:	mov    ecx,r11d
  417919:	lea    eax,[rdi+0x1]
  41791c:	sub    ecx,edi
  41791e:	cmp    ecx,edx
  417920:	mov    DWORD PTR [rsp+0x9c],eax
  417927:	jge    0x41795c
  417929:	mov    ebx,DWORD PTR [rsp+0x120]
  417930:	lea    ecx,[rbx-0x3]
  417933:	and    ecx,0xfffffffd
  417936:	je     0x41795c
  417938:	mov    ebx,DWORD PTR [rsp+0x68]
  41793c:	sub    r11d,edx
  41793f:	lea    eax,[r11+0x1]
  417943:	test   ebx,ebx
  417945:	mov    DWORD PTR [rsp+0x9c],eax
  41794c:	setg   cl
  41794f:	cmp    ebx,eax
  417951:	setl   dl
  417954:	test   cl,dl
  417956:	je     0x41809f
  41795c:	cmp    DWORD PTR [rsp+0x120],0x1
  417964:	jle    0x41809f
  41796a:	mov    ebx,DWORD PTR [rsp+0x58]
  41796e:	mov    eax,DWORD PTR [rsp+0x68]
  417972:	mov    r12d,ebx
  417975:	sub    eax,0x1
  417978:	sub    r12d,eax
  41797b:	cmp    ebx,eax
  41797d:	jge    0x417993
  41797f:	mov    edx,eax
  417981:	sub    edx,DWORD PTR [rsp+0x58]
  417985:	xor    r12d,r12d
  417988:	add    DWORD PTR [rsp+0x88],edx
  41798f:	mov    DWORD PTR [rsp+0x58],eax
  417993:	mov    eax,DWORD PTR [rsp+0x68]
  417997:	test   eax,eax
  417999:	js     0x418332
  41799f:	mov    ebx,DWORD PTR [rsp+0x50]
  4179a3:	mov    DWORD PTR [rsp+0x9c],eax
  4179aa:	mov    ecx,0x1
  4179af:	add    DWORD PTR [rsp+0x50],eax
  4179b3:	add    DWORD PTR [rsp+0x40],eax
  4179b7:	call   0x418a90
  4179bc:	mov    rdi,rax
  4179bf:	mov    ecx,DWORD PTR [rsp+0x40]
  4179c3:	test   ecx,ecx
  4179c5:	mov    eax,ecx
  4179c7:	jle    0x4179e5
  4179c9:	test   ebx,ebx
  4179cb:	jle    0x4179e5
  4179cd:	cmp    ecx,ebx
  4179cf:	cmovg  eax,ebx
  4179d2:	sub    DWORD PTR [rsp+0x50],eax
  4179d6:	sub    ecx,eax
  4179d8:	mov    DWORD PTR [rsp+0x9c],eax
  4179df:	sub    ebx,eax
  4179e1:	mov    DWORD PTR [rsp+0x40],ecx
  4179e5:	mov    r8d,DWORD PTR [rsp+0x58]
  4179ea:	test   r8d,r8d
  4179ed:	jle    0x417a3b
  4179ef:	mov    ecx,DWORD PTR [rsp+0x60]
  4179f3:	test   ecx,ecx
  4179f5:	je     0x417e30
  4179fb:	test   r12d,r12d
  4179fe:	jle    0x417a2e
  417a00:	mov    rcx,rdi
  417a03:	mov    edx,r12d
  417a06:	call   0x418bf0
  417a0b:	mov    rdx,rsi
  417a0e:	mov    rcx,rax
  417a11:	mov    rdi,rax
  417a14:	call   0x418ac0
  417a19:	mov    rcx,rsi
  417a1c:	mov    QWORD PTR [rsp+0x70],rax
  417a21:	call   0x418960
  417a26:	mov    rax,QWORD PTR [rsp+0x70]
  417a2b:	mov    rsi,rax
  417a2e:	mov    edx,DWORD PTR [rsp+0x58]
  417a32:	sub    edx,r12d
  417a35:	jne    0x417e34
  417a3b:	mov    ecx,0x1
  417a40:	call   0x418a90
  417a45:	mov    r12,rax
  417a48:	mov    eax,DWORD PTR [rsp+0x88]
  417a4f:	test   eax,eax
  417a51:	jle    0x417b80
  417a57:	mov    rcx,r12
  417a5a:	mov    edx,eax
  417a5c:	call   0x418bf0
  417a61:	cmp    DWORD PTR [rsp+0x120],0x1
  417a69:	mov    r12,rax
  417a6c:	jg     0x417a78
  417a6e:	cmp    r14d,0x1
  417a72:	je     0x417b3c
  417a78:	xor    ebp,ebp
  417a7a:	mov    eax,DWORD PTR [r12+0x14]
  417a7f:	sub    eax,0x1
  417a82:	cdqe   
  417a84:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  417a8a:	xor    eax,0x1f
  417a8d:	sub    eax,DWORD PTR [rsp+0x40]
  417a91:	mov    edx,DWORD PTR [rsp+0x50]
  417a95:	sub    eax,0x4
  417a98:	and    eax,0x1f
  417a9b:	add    edx,eax
  417a9d:	mov    r13d,eax
  417aa0:	mov    DWORD PTR [rsp+0x9c],eax
  417aa7:	test   edx,edx
  417aa9:	mov    ecx,eax
  417aab:	jle    0x417abf
  417aad:	mov    rcx,rsi
  417ab0:	call   0x418d60
  417ab5:	mov    ecx,DWORD PTR [rsp+0x9c]
  417abc:	mov    rsi,rax
  417abf:	mov    edx,DWORD PTR [rsp+0x40]
  417ac3:	add    edx,ecx
  417ac5:	test   edx,edx
  417ac7:	jle    0x417ad4
  417ac9:	mov    rcx,r12
  417acc:	call   0x418d60
  417ad1:	mov    r12,rax
  417ad4:	mov    eax,DWORD PTR [rsp+0x6c]
  417ad8:	test   eax,eax
  417ada:	jne    0x417e51
  417ae0:	mov    r14d,DWORD PTR [rsp+0x68]
  417ae5:	test   r14d,r14d
  417ae8:	jg     0x417ca1
  417aee:	cmp    DWORD PTR [rsp+0x120],0x2
  417af6:	jle    0x417ca1
  417afc:	mov    r11d,DWORD PTR [rsp+0x68]
  417b01:	test   r11d,r11d
  417b04:	jne    0x417c32
  417b0a:	xor    r8d,r8d
  417b0d:	mov    rcx,r12
  417b10:	mov    edx,0x5
  417b15:	call   0x4189d0
  417b1a:	mov    rcx,rsi
  417b1d:	mov    rdx,rax
  417b20:	mov    r12,rax
  417b23:	call   0x418e80
  417b28:	test   eax,eax
  417b2a:	jle    0x417c32
  417b30:	mov    ebp,DWORD PTR [rsp+0x30]
  417b34:	add    ebp,0x2
  417b37:	jmp    0x4178d2
  417b3c:	mov    eax,DWORD PTR [rbp+0x4]
  417b3f:	add    eax,0x1
  417b42:	cmp    r13d,eax
  417b45:	jle    0x417a78
  417b4b:	add    DWORD PTR [rsp+0x50],0x1
  417b50:	add    DWORD PTR [rsp+0x40],0x1
  417b55:	mov    ebp,0x1
  417b5a:	nop    WORD PTR [rax+rax*1+0x0]
  417b60:	mov    edx,DWORD PTR [rsp+0x88]
  417b67:	mov    eax,0x1f
  417b6c:	test   edx,edx
  417b6e:	je     0x417a8d
  417b74:	jmp    0x417a7a
  417b79:	nop    DWORD PTR [rax+0x0]
  417b80:	cmp    DWORD PTR [rsp+0x120],0x1
  417b88:	jg     0x417b90
  417b8a:	cmp    r14d,0x1
  417b8e:	je     0x417b94
  417b90:	xor    ebp,ebp
  417b92:	jmp    0x417b60
  417b94:	mov    eax,DWORD PTR [rbp+0x4]
  417b97:	xor    ebp,ebp
  417b99:	add    eax,0x1
  417b9c:	cmp    r13d,eax
  417b9f:	jle    0x417b60
  417ba1:	jmp    0x417b4b
  417ba3:	cmp    DWORD PTR [rsp+0x120],0x2
  417bab:	mov    DWORD PTR [rsp+0x60],0x0
  417bb3:	je     0x4177b0
  417bb9:	pxor   xmm0,xmm0
  417bbd:	mov    QWORD PTR [rsp+0x60],r9
  417bc2:	mov    DWORD PTR [rsp+0x68],r11d
  417bc7:	cvtsi2sd xmm0,edi
  417bcb:	mulsd  xmm0,QWORD PTR [rip+0xdc8d]        # 0x425860
  417bd3:	cvttsd2si ecx,xmm0
  417bd7:	add    ecx,0x3
  417bda:	mov    DWORD PTR [rsp+0x9c],ecx
  417be1:	call   0x416f60
  417be6:	mov    QWORD PTR [rsp+0x48],rax
  417beb:	mov    eax,DWORD PTR [rbp+0xc]
  417bee:	mov    r11d,DWORD PTR [rsp+0x68]
  417bf3:	mov    r9,QWORD PTR [rsp+0x60]
  417bf8:	sub    eax,0x1
  417bfb:	mov    DWORD PTR [rsp+0x38],eax
  417bff:	jne    0x4180ad
  417c05:	mov    eax,0xffffffff
  417c0a:	mov    DWORD PTR [rsp+0x60],0x1
  417c12:	mov    DWORD PTR [rsp+0x128],0x0
  417c1d:	mov    DWORD PTR [rsp+0x8c],eax
  417c24:	mov    DWORD PTR [rsp+0x68],eax
  417c28:	jmp    0x417860
  417c2d:	xor    r12d,r12d
  417c30:	xor    edi,edi
  417c32:	mov    ebp,DWORD PTR [rsp+0x128]
  417c39:	mov    rbx,QWORD PTR [rsp+0x48]
  417c3e:	mov    r15d,0x10
  417c44:	neg    ebp
  417c46:	jmp    0x4178e4
  417c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  417c50:	mov    eax,DWORD PTR [rsp+0x30]
  417c54:	sub    DWORD PTR [rsp+0x50],eax
  417c58:	mov    DWORD PTR [rsp+0x88],0x0
  417c63:	neg    eax
  417c65:	mov    DWORD PTR [rsp+0x58],eax
  417c69:	jmp    0x417489
  417c6e:	xchg   ax,ax
  417c70:	neg    eax
  417c72:	mov    DWORD PTR [rsp+0x40],0x0
  417c7a:	mov    DWORD PTR [rsp+0x50],eax
  417c7e:	jmp    0x41746a
  417c83:	pxor   xmm0,xmm0
  417c87:	cvtsi2sd xmm0,eax
  417c8b:	ucomisd xmm0,xmm1
  417c8f:	jp     0x417c97
  417c91:	je     0x4173fb
  417c97:	sub    DWORD PTR [rsp+0x30],0x1
  417c9c:	jmp    0x4173fb
  417ca1:	mov    r10d,DWORD PTR [rsp+0x60]
  417ca6:	test   r10d,r10d
  417ca9:	je     0x417eb0
  417caf:	lea    edx,[rbx+r13*1]
  417cb3:	test   edx,edx
  417cb5:	jle    0x417cc2
  417cb7:	mov    rcx,rdi
  417cba:	call   0x418d60
  417cbf:	mov    rdi,rax
  417cc2:	test   ebp,ebp
  417cc4:	mov    r13,rdi
  417cc7:	jne    0x418365
  417ccd:	mov    DWORD PTR [rsp+0x9c],0x1
  417cd8:	mov    rbx,QWORD PTR [rsp+0x48]
  417cdd:	mov    QWORD PTR [rsp+0x40],r12
  417ce2:	mov    QWORD PTR [rsp+0x50],r15
  417ce7:	jmp    0x417dae
  417cec:	nop    DWORD PTR [rax+0x0]
  417cf0:	mov    rcx,r8
  417cf3:	call   0x418960
  417cf8:	mov    eax,r12d
  417cfb:	or     eax,DWORD PTR [rsp+0x120]
  417d02:	jne    0x417d1a
  417d04:	mov    ecx,DWORD PTR [rsp+0x38]
  417d08:	test   ecx,ecx
  417d0a:	jne    0x417d1a
  417d0c:	mov    rax,QWORD PTR [rsp+0x50]
  417d11:	test   BYTE PTR [rax],0x1
  417d14:	je     0x4184d5
  417d1a:	test   r14d,r14d
  417d1d:	js     0x418230
  417d23:	or     r14d,DWORD PTR [rsp+0x120]
  417d2b:	jne    0x417d3b
  417d2d:	mov    rax,QWORD PTR [rsp+0x50]
  417d32:	test   BYTE PTR [rax],0x1
  417d35:	je     0x418230
  417d3b:	test   r12d,r12d
  417d3e:	jle    0x417d4b
  417d40:	cmp    DWORD PTR [rsp+0x38],0x2
  417d45:	jne    0x41843f
  417d4b:	add    rbx,0x1
  417d4f:	mov    BYTE PTR [rbx-0x1],bpl
  417d53:	mov    eax,DWORD PTR [rsp+0x68]
  417d57:	cmp    DWORD PTR [rsp+0x9c],eax
  417d5e:	je     0x4183cb
  417d64:	xor    r8d,r8d
  417d67:	mov    rcx,rsi
  417d6a:	mov    edx,0xa
  417d6f:	call   0x4189d0
  417d74:	xor    r8d,r8d
  417d77:	cmp    rdi,r13
  417d7a:	mov    rsi,rax
  417d7d:	mov    edx,0xa
  417d82:	mov    rcx,rdi
  417d85:	je     0x417e20
  417d8b:	call   0x4189d0
  417d90:	mov    rcx,r13
  417d93:	xor    r8d,r8d
  417d96:	mov    edx,0xa
  417d9b:	mov    rdi,rax
  417d9e:	call   0x4189d0
  417da3:	mov    r13,rax
  417da6:	add    DWORD PTR [rsp+0x9c],0x1
  417dae:	mov    r12,QWORD PTR [rsp+0x40]
  417db3:	mov    rcx,rsi
  417db6:	mov    rdx,r12
  417db9:	call   0x417000
  417dbe:	mov    rdx,rdi
  417dc1:	mov    rcx,rsi
  417dc4:	mov    r15d,eax
  417dc7:	lea    ebp,[rax+0x30]
  417dca:	call   0x418e80
  417dcf:	mov    rcx,r12
  417dd2:	mov    rdx,r13
  417dd5:	mov    r14d,eax
  417dd8:	call   0x418ed0
  417ddd:	mov    r9d,DWORD PTR [rax+0x10]
  417de1:	mov    r8,rax
  417de4:	mov    r12d,0x1
  417dea:	test   r9d,r9d
  417ded:	jne    0x417cf0
  417df3:	mov    rdx,rax
  417df6:	mov    rcx,rsi
  417df9:	mov    QWORD PTR [rsp+0x58],rax
  417dfe:	call   0x418e80
  417e03:	mov    r8,QWORD PTR [rsp+0x58]
  417e08:	mov    r12d,eax
  417e0b:	jmp    0x417cf0
  417e10:	mov    r12d,DWORD PTR [rsp+0x58]
  417e15:	mov    ebx,DWORD PTR [rsp+0x50]
  417e19:	xor    edi,edi
  417e1b:	jmp    0x4179bf
  417e20:	call   0x4189d0
  417e25:	mov    rdi,rax
  417e28:	mov    r13,rax
  417e2b:	jmp    0x417da6
  417e30:	mov    edx,DWORD PTR [rsp+0x58]
  417e34:	mov    rcx,rsi
  417e37:	call   0x418bf0
  417e3c:	mov    rsi,rax
  417e3f:	jmp    0x417a3b
  417e44:	mov    DWORD PTR [rsp+0x60],0x0
  417e4c:	jmp    0x4174e7
  417e51:	mov    rdx,r12
  417e54:	mov    rcx,rsi
  417e57:	call   0x418e80
  417e5c:	test   eax,eax
  417e5e:	jns    0x417ae0
  417e64:	xor    r8d,r8d
  417e67:	mov    rcx,rsi
  417e6a:	mov    edx,0xa
  417e6f:	sub    DWORD PTR [rsp+0x30],0x1
  417e74:	call   0x4189d0
  417e79:	mov    rsi,rax
  417e7c:	mov    eax,DWORD PTR [rsp+0x60]
  417e80:	test   eax,eax
  417e82:	jne    0x418548
  417e88:	mov    eax,DWORD PTR [rsp+0x8c]
  417e8f:	test   eax,eax
  417e91:	jg     0x417ea5
  417e93:	cmp    DWORD PTR [rsp+0x120],0x2
  417e9b:	mov    DWORD PTR [rsp+0x68],eax
  417e9f:	jg     0x417afc
  417ea5:	mov    eax,DWORD PTR [rsp+0x8c]
  417eac:	mov    DWORD PTR [rsp+0x68],eax
  417eb0:	mov    DWORD PTR [rsp+0x9c],0x1
  417ebb:	mov    rbx,QWORD PTR [rsp+0x48]
  417ec0:	mov    r13d,DWORD PTR [rsp+0x68]
  417ec5:	jmp    0x417eeb
  417ec7:	nop    WORD PTR [rax+rax*1+0x0]
  417ed0:	mov    rcx,rsi
  417ed3:	xor    r8d,r8d
  417ed6:	mov    edx,0xa
  417edb:	call   0x4189d0
  417ee0:	add    DWORD PTR [rsp+0x9c],0x1
  417ee8:	mov    rsi,rax
  417eeb:	mov    rdx,r12
  417eee:	mov    rcx,rsi
  417ef1:	add    rbx,0x1
  417ef5:	call   0x417000
  417efa:	lea    ebp,[rax+0x30]
  417efd:	mov    BYTE PTR [rbx-0x1],bpl
  417f01:	cmp    DWORD PTR [rsp+0x9c],r13d
  417f09:	jl     0x417ed0
  417f0b:	xor    r14d,r14d
  417f0e:	mov    eax,DWORD PTR [rsp+0x38]
  417f12:	test   eax,eax
  417f14:	je     0x4182dc
  417f1a:	cmp    eax,0x2
  417f1d:	je     0x41830c
  417f23:	cmp    DWORD PTR [rsi+0x14],0x1
  417f27:	jle    0x4184a3
  417f2d:	movzx  edx,BYTE PTR [rbx-0x1]
  417f31:	mov    rcx,QWORD PTR [rsp+0x48]
  417f36:	jmp    0x417f50
  417f38:	nop    DWORD PTR [rax+rax*1+0x0]
  417f40:	cmp    rax,rcx
  417f43:	je     0x4180fc
  417f49:	movzx  edx,BYTE PTR [rax-0x1]
  417f4d:	mov    rbx,rax
  417f50:	cmp    dl,0x39
  417f53:	lea    rax,[rbx-0x1]
  417f57:	je     0x417f40
  417f59:	add    edx,0x1
  417f5c:	mov    r15d,0x20
  417f62:	mov    BYTE PTR [rax],dl
  417f64:	mov    rcx,r12
  417f67:	call   0x418960
  417f6c:	test   rdi,rdi
  417f6f:	je     0x41805f
  417f75:	cmp    r14,rdi
  417f78:	je     0x417f87
  417f7a:	test   r14,r14
  417f7d:	je     0x417f87
  417f7f:	mov    rcx,r14
  417f82:	call   0x418960
  417f87:	mov    ebp,DWORD PTR [rsp+0x30]
  417f8b:	add    ebp,0x1
  417f8e:	jmp    0x4178f5
  417f93:	mov    QWORD PTR [rsp+0x40],r9
  417f98:	mov    rdi,QWORD PTR [rsp+0x48]
  417f9d:	movsd  xmm0,QWORD PTR [rsp+0x40]
  417fa3:	mov    DWORD PTR [rsp+0x9c],0x1
  417fae:	movapd xmm1,xmm0
  417fb2:	mov    rbx,rdi
  417fb5:	add    rbx,0x1
  417fb9:	divsd  xmm1,xmm2
  417fbd:	cvttsd2si eax,xmm1
  417fc1:	pxor   xmm1,xmm1
  417fc5:	cvtsi2sd xmm1,eax
  417fc9:	lea    edx,[rax+0x30]
  417fcc:	mov    BYTE PTR [rdi],dl
  417fce:	mulsd  xmm1,xmm2
  417fd2:	subsd  xmm0,xmm1
  417fd6:	ucomisd xmm0,xmm6
  417fda:	jp     0x417fde
  417fdc:	je     0x418050
  417fde:	mov    edx,DWORD PTR [rsp+0x9c]
  417fe5:	cmp    DWORD PTR [rsp+0x68],edx
  417fe9:	je     0x4180d7
  417fef:	movsd  xmm3,QWORD PTR [rip+0xd879]        # 0x425870
  417ff7:	movapd xmm4,xmm6
  417ffb:	mov    ecx,DWORD PTR [rsp+0x68]
  417fff:	jmp    0x418010
  418001:	mov    edx,DWORD PTR [rsp+0x9c]
  418008:	cmp    ecx,edx
  41800a:	je     0x4180d7
  418010:	mulsd  xmm0,xmm3
  418014:	add    edx,0x1
  418017:	add    rbx,0x1
  41801b:	mov    DWORD PTR [rsp+0x9c],edx
  418022:	movapd xmm1,xmm0
  418026:	divsd  xmm1,xmm2
  41802a:	cvttsd2si eax,xmm1
  41802e:	pxor   xmm1,xmm1
  418032:	cvtsi2sd xmm1,eax
  418036:	lea    edx,[rax+0x30]
  418039:	mov    BYTE PTR [rbx-0x1],dl
  41803c:	mulsd  xmm1,xmm2
  418040:	subsd  xmm0,xmm1
  418044:	ucomisd xmm0,xmm6
  418048:	jp     0x418001
  41804a:	ucomisd xmm0,xmm4
  41804e:	jne    0x418001
  418050:	mov    ebp,DWORD PTR [rsp+0x30]
  418054:	add    ebp,0x1
  418057:	xor    r15d,r15d
  41805a:	jmp    0x417710
  41805f:	mov    ebp,DWORD PTR [rsp+0x30]
  418063:	add    ebp,0x1
  418066:	jmp    0x417710
  41806b:	mov    ebx,0x1
  418070:	mov    DWORD PTR [rsp+0x128],0x1
  41807b:	jmp    0x4177ca
  418080:	cmp    DWORD PTR [rsp+0x68],0xe
  418085:	mov    DWORD PTR [rsp+0x9c],0x1
  418090:	mov    ecx,0x1
  418095:	setbe  bl
  418098:	and    ebx,eax
  41809a:	jmp    0x417519
  41809f:	mov    r12d,DWORD PTR [rsp+0x58]
  4180a4:	mov    ebx,DWORD PTR [rsp+0x50]
  4180a8:	jmp    0x4179aa
  4180ad:	mov    eax,0xffffffff
  4180b2:	xor    ebx,ebx
  4180b4:	mov    DWORD PTR [rsp+0x60],0x1
  4180bc:	mov    DWORD PTR [rsp+0x8c],eax
  4180c3:	mov    DWORD PTR [rsp+0x68],eax
  4180c7:	mov    DWORD PTR [rsp+0x128],0x0
  4180d2:	jmp    0x417543
  4180d7:	mov    r10d,DWORD PTR [rsp+0x38]
  4180dc:	test   r10d,r10d
  4180df:	je     0x41839e
  4180e5:	cmp    DWORD PTR [rsp+0x38],0x1
  4180ea:	je     0x418491
  4180f0:	mov    ebp,DWORD PTR [rsp+0x30]
  4180f4:	add    ebp,0x1
  4180f7:	jmp    0x417703
  4180fc:	mov    rax,QWORD PTR [rsp+0x48]
  418101:	add    DWORD PTR [rsp+0x30],0x1
  418106:	mov    r15d,0x20
  41810c:	mov    BYTE PTR [rax],0x31
  41810f:	jmp    0x417f64
  418114:	mov    ebp,0x2
  418119:	xor    r12d,r12d
  41811c:	xor    edi,edi
  41811e:	jmp    0x4178d2
  418123:	mov    r10,QWORD PTR [rip+0xda66]        # 0x425b90
  41812a:	mov    QWORD PTR [rsp+0x38],rax
  41812f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  418135:	mov    DWORD PTR [rsp+0x9c],0x1
  418140:	mov    rbx,QWORD PTR [rsp+0x48]
  418145:	movsd  xmm1,QWORD PTR [rip+0xd723]        # 0x425870
  41814d:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  418153:	jmp    0x418163
  418155:	mulsd  xmm0,xmm1
  418159:	add    edx,0x1
  41815c:	mov    DWORD PTR [rsp+0x9c],edx
  418163:	cvttsd2si eax,xmm0
  418167:	test   eax,eax
  418169:	je     0x418177
  41816b:	pxor   xmm2,xmm2
  41816f:	cvtsi2sd xmm2,eax
  418173:	subsd  xmm0,xmm2
  418177:	add    rbx,0x1
  41817b:	add    eax,0x30
  41817e:	mov    BYTE PTR [rbx-0x1],al
  418181:	mov    edx,DWORD PTR [rsp+0x9c]
  418188:	cmp    edx,r9d
  41818b:	jne    0x418155
  41818d:	movsd  xmm1,QWORD PTR [rip+0xd70b]        # 0x4258a0
  418195:	movapd xmm2,xmm3
  418199:	addsd  xmm2,xmm1
  41819d:	ucomisd xmm0,xmm2
  4181a1:	ja     0x4181f7
  4181a3:	subsd  xmm1,xmm3
  4181a7:	ucomisd xmm1,xmm0
  4181ab:	jbe    0x41784e
  4181b1:	ucomisd xmm0,xmm6
  4181b5:	jp     0x41853d
  4181bb:	jne    0x41853d
  4181c1:	xor    r15d,r15d
  4181c4:	jmp    0x4181d7
  4181c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4181d0:	movzx  eax,BYTE PTR [rbx-0x2]
  4181d4:	mov    rbx,rdx
  4181d7:	cmp    al,0x30
  4181d9:	lea    rdx,[rbx-0x1]
  4181dd:	je     0x4181d0
  4181df:	lea    ebp,[rcx+0x1]
  4181e2:	jmp    0x417710
  4181e7:	test   al,0x1
  4181e9:	mov    ecx,DWORD PTR [rsp+0x30]
  4181ed:	movzx  eax,BYTE PTR [rbx-0x1]
  4181f1:	je     0x41853d
  4181f7:	mov    r8,QWORD PTR [rsp+0x48]
  4181fc:	jmp    0x418210
  4181fe:	xchg   ax,ax
  418200:	cmp    rdx,r8
  418203:	je     0x41834c
  418209:	movzx  eax,BYTE PTR [rdx-0x1]
  41820d:	mov    rbx,rdx
  418210:	cmp    al,0x39
  418212:	lea    rdx,[rbx-0x1]
  418216:	je     0x418200
  418218:	mov    QWORD PTR [rsp+0x48],r8
  41821d:	add    eax,0x1
  418220:	mov    BYTE PTR [rdx],al
  418222:	lea    ebp,[rcx+0x1]
  418225:	mov    r15d,0x20
  41822b:	jmp    0x417710
  418230:	mov    edx,DWORD PTR [rsp+0x38]
  418234:	mov    eax,r12d
  418237:	mov    r14d,ebp
  41823a:	mov    r12,QWORD PTR [rsp+0x40]
  41823f:	test   edx,edx
  418241:	je     0x418471
  418247:	cmp    DWORD PTR [rsi+0x14],0x1
  41824b:	jle    0x418467
  418251:	cmp    DWORD PTR [rsp+0x38],0x2
  418256:	jne    0x4182a7
  418258:	jmp    0x418486
  41825d:	nop    DWORD PTR [rax]
  418260:	add    rbx,0x1
  418264:	xor    r8d,r8d
  418267:	mov    rcx,r13
  41826a:	mov    BYTE PTR [rbx-0x1],r14b
  41826e:	mov    edx,0xa
  418273:	call   0x4189d0
  418278:	cmp    rdi,r13
  41827b:	mov    rcx,rsi
  41827e:	mov    edx,0xa
  418283:	cmove  rdi,rax
  418287:	xor    r8d,r8d
  41828a:	mov    rbp,rax
  41828d:	call   0x4189d0
  418292:	mov    rdx,r12
  418295:	mov    rcx,rax
  418298:	mov    rsi,rax
  41829b:	call   0x417000
  4182a0:	lea    r14d,[rax+0x30]
  4182a4:	mov    r13,rbp
  4182a7:	mov    rdx,r13
  4182aa:	mov    rcx,r12
  4182ad:	call   0x418e80
  4182b2:	test   eax,eax
  4182b4:	jg     0x418260
  4182b6:	cmp    r14d,0x39
  4182ba:	je     0x4184b6
  4182c0:	add    r14d,0x1
  4182c4:	mov    r15d,0x20
  4182ca:	mov    BYTE PTR [rbx],r14b
  4182cd:	mov    r14,rdi
  4182d0:	add    rbx,0x1
  4182d4:	mov    rdi,r13
  4182d7:	jmp    0x417f64
  4182dc:	mov    rcx,rsi
  4182df:	mov    edx,0x1
  4182e4:	call   0x418d60
  4182e9:	mov    rdx,r12
  4182ec:	mov    rcx,rax
  4182ef:	mov    rsi,rax
  4182f2:	call   0x418e80
  4182f7:	cmp    eax,0x0
  4182fa:	jg     0x417f2d
  418300:	jne    0x41830c
  418302:	and    bpl,0x1
  418306:	jne    0x417f2d
  41830c:	cmp    DWORD PTR [rsi+0x14],0x1
  418310:	mov    r15d,0x10
  418316:	jg     0x418323
  418318:	jmp    0x4185ad
  41831d:	nop    DWORD PTR [rax]
  418320:	mov    rbx,rax
  418323:	cmp    BYTE PTR [rbx-0x1],0x30
  418327:	lea    rax,[rbx-0x1]
  41832b:	je     0x418320
  41832d:	jmp    0x417f64
  418332:	mov    ebx,DWORD PTR [rsp+0x50]
  418336:	mov    DWORD PTR [rsp+0x9c],0x0
  418341:	xor    eax,eax
  418343:	sub    ebx,DWORD PTR [rsp+0x68]
  418347:	jmp    0x4179aa
  41834c:	mov    QWORD PTR [rsp+0x48],r8
  418351:	add    ecx,0x1
  418354:	mov    BYTE PTR [r8],0x30
  418358:	mov    rdx,r8
  41835b:	mov    eax,0x31
  418360:	jmp    0x418220
  418365:	mov    ecx,DWORD PTR [rdi+0x8]
  418368:	call   0x418850
  41836d:	lea    rcx,[rax+0x10]
  418371:	mov    rbx,rax
  418374:	movsxd rax,DWORD PTR [rdi+0x14]
  418378:	lea    rdx,[rdi+0x10]
  41837c:	lea    r8,[rax*4+0x8]
  418384:	call   0x419880
  418389:	mov    edx,0x1
  41838e:	mov    rcx,rbx
  418391:	call   0x418d60
  418396:	mov    r13,rax
  418399:	jmp    0x417ccd
  41839e:	addsd  xmm0,xmm0
  4183a2:	ucomisd xmm0,xmm2
  4183a6:	ja     0x418491
  4183ac:	ucomisd xmm2,xmm0
  4183b0:	jp     0x4183b8
  4183b2:	je     0x4181e7
  4183b8:	movzx  eax,BYTE PTR [rbx-0x1]
  4183bc:	mov    ecx,DWORD PTR [rsp+0x30]
  4183c0:	mov    r15d,0x10
  4183c6:	jmp    0x4181d7
  4183cb:	mov    r14,rdi
  4183ce:	mov    r12,QWORD PTR [rsp+0x40]
  4183d3:	mov    rdi,r13
  4183d6:	jmp    0x417f0e
  4183db:	mov    eax,DWORD PTR [rsp+0x68]
  4183df:	test   eax,eax
  4183e1:	je     0x4177ea
  4183e7:	mov    r9d,DWORD PTR [rsp+0x8c]
  4183ef:	test   r9d,r9d
  4183f2:	jle    0x41784e
  4183f8:	movsd  xmm0,QWORD PTR [rip+0xd470]        # 0x425870
  418400:	mov    ecx,0xffffffff
  418405:	movsd  xmm1,QWORD PTR [rip+0xd46b]        # 0x425878
  41840d:	mulsd  xmm0,xmm4
  418411:	mulsd  xmm1,xmm0
  418415:	addsd  xmm1,QWORD PTR [rip+0xd463]        # 0x425880
  41841d:	movq   rdx,xmm1
  418422:	movq   rax,xmm1
  418427:	shr    rdx,0x20
  41842b:	mov    eax,eax
  41842d:	sub    edx,0x3400000
  418433:	shl    rdx,0x20
  418437:	or     rax,rdx
  41843a:	jmp    0x4175f2
  41843f:	cmp    ebp,0x39
  418442:	mov    r12,QWORD PTR [rsp+0x40]
  418447:	mov    rax,rbx
  41844a:	je     0x4184b9
  41844c:	add    ebp,0x1
  41844f:	mov    r14,rdi
  418452:	add    rbx,0x1
  418456:	mov    BYTE PTR [rax],bpl
  418459:	mov    rdi,r13
  41845c:	mov    r15d,0x20
  418462:	jmp    0x417f64
  418467:	cmp    DWORD PTR [rsi+0x18],0x0
  41846b:	jne    0x418251
  418471:	test   eax,eax
  418473:	jg     0x418509
  418479:	xor    r15d,r15d
  41847c:	cmp    DWORD PTR [rsi+0x14],0x1
  418480:	jle    0x418588
  418486:	mov    r15d,0x10
  41848c:	jmp    0x4182ca
  418491:	movzx  eax,BYTE PTR [rbx-0x1]
  418495:	mov    ecx,DWORD PTR [rsp+0x30]
  418499:	mov    r8,QWORD PTR [rsp+0x48]
  41849e:	jmp    0x418210
  4184a3:	mov    eax,DWORD PTR [rsi+0x18]
  4184a6:	test   eax,eax
  4184a8:	jne    0x417f2d
  4184ae:	xor    r15d,r15d
  4184b1:	jmp    0x418323
  4184b6:	mov    rax,rbx
  4184b9:	mov    r14,rdi
  4184bc:	add    rbx,0x1
  4184c0:	mov    rdi,r13
  4184c3:	mov    BYTE PTR [rax],0x39
  4184c6:	mov    edx,0x39
  4184cb:	mov    rcx,QWORD PTR [rsp+0x48]
  4184d0:	jmp    0x417f50
  4184d5:	cmp    ebp,0x39
  4184d8:	mov    r12,QWORD PTR [rsp+0x40]
  4184dd:	mov    rax,rbx
  4184e0:	je     0x4184b6
  4184e2:	test   r14d,r14d
  4184e5:	jle    0x4185c0
  4184eb:	mov    ebp,r15d
  4184ee:	mov    r15d,0x20
  4184f4:	add    ebp,0x31
  4184f7:	mov    r14,rdi
  4184fa:	add    rbx,0x1
  4184fe:	mov    BYTE PTR [rax],bpl
  418501:	mov    rdi,r13
  418504:	jmp    0x417f64
  418509:	mov    rcx,rsi
  41850c:	mov    edx,0x1
  418511:	call   0x418d60
  418516:	mov    rdx,r12
  418519:	mov    rcx,rax
  41851c:	mov    rsi,rax
  41851f:	call   0x418e80
  418524:	cmp    eax,0x0
  418527:	jle    0x41859a
  418529:	cmp    ebp,0x39
  41852c:	je     0x4184b6
  41852e:	lea    r14d,[rbp+0x1]
  418532:	mov    r15d,0x20
  418538:	jmp    0x41847c
  41853d:	mov    r15d,0x10
  418543:	jmp    0x4181d7
  418548:	xor    r8d,r8d
  41854b:	mov    rcx,rdi
  41854e:	mov    edx,0xa
  418553:	call   0x4189d0
  418558:	mov    rdi,rax
  41855b:	mov    eax,DWORD PTR [rsp+0x8c]
  418562:	test   eax,eax
  418564:	jg     0x418578
  418566:	cmp    DWORD PTR [rsp+0x120],0x2
  41856e:	mov    DWORD PTR [rsp+0x68],eax
  418572:	jg     0x417afc
  418578:	mov    eax,DWORD PTR [rsp+0x8c]
  41857f:	mov    DWORD PTR [rsp+0x68],eax
  418583:	jmp    0x417caf
  418588:	cmp    DWORD PTR [rsi+0x18],0x0
  41858c:	mov    eax,0x10
  418591:	cmovne r15d,eax
  418595:	jmp    0x4182ca
  41859a:	jne    0x4185a2
  41859c:	test   bpl,0x1
  4185a0:	jne    0x418529
  4185a2:	mov    r15d,0x20
  4185a8:	jmp    0x41847c
  4185ad:	cmp    DWORD PTR [rsi+0x18],0x1
  4185b1:	sbb    r15d,r15d
  4185b4:	not    r15d
  4185b7:	and    r15d,0x10
  4185bb:	jmp    0x418323
  4185c0:	cmp    DWORD PTR [rsi+0x14],0x1
  4185c4:	mov    r15d,0x10
  4185ca:	jg     0x4184f7
  4185d0:	cmp    DWORD PTR [rsi+0x18],0x1
  4185d4:	sbb    r15d,r15d
  4185d7:	not    r15d
  4185da:	and    r15d,0x10
  4185de:	jmp    0x4184f7
  4185e3:	xor    eax,eax
  4185e5:	jmp    0x4172c7
  4185ea:	nop
  4185eb:	nop
  4185ec:	nop
  4185ed:	nop
  4185ee:	nop
  4185ef:	nop
  4185f0:	push   rbp
  4185f1:	push   rdi
  4185f2:	push   rsi
  4185f3:	push   rbx
  4185f4:	mov    rsi,rcx
  4185f7:	lea    r10,[rcx+0x18]
  4185fb:	movsxd rcx,DWORD PTR [rcx+0x14]
  4185ff:	mov    eax,edx
  418601:	sar    eax,0x5
  418604:	cmp    eax,ecx
  418606:	jge    0x418690
  41860c:	cdqe   
  41860e:	and    edx,0x1f
  418611:	lea    rbx,[r10+rcx*4]
  418615:	lea    rdi,[r10+rax*4]
  418619:	je     0x4186a3
  41861f:	mov    r9d,DWORD PTR [rdi]
  418622:	lea    r8,[rdi+0x4]
  418626:	mov    ebp,0x20
  41862b:	mov    ecx,edx
  41862d:	sub    ebp,edx
  41862f:	shr    r9d,cl
  418632:	cmp    rbx,r8
  418635:	jbe    0x4186e8
  41863b:	mov    r11,r10
  41863e:	xchg   ax,ax
  418640:	mov    eax,DWORD PTR [r8]
  418643:	mov    ecx,ebp
  418645:	add    r11,0x4
  418649:	add    r8,0x4
  41864d:	shl    eax,cl
  41864f:	mov    ecx,edx
  418651:	or     eax,r9d
  418654:	mov    DWORD PTR [r11-0x4],eax
  418658:	mov    r9d,DWORD PTR [r8-0x4]
  41865c:	shr    r9d,cl
  41865f:	cmp    rbx,r8
  418662:	ja     0x418640
  418664:	sub    rbx,rdi
  418667:	lea    rax,[rbx-0x5]
  41866b:	shr    rax,0x2
  41866f:	lea    rax,[r10+rax*4+0x4]
  418674:	test   r9d,r9d
  418677:	mov    DWORD PTR [rax],r9d
  41867a:	je     0x418680
  41867c:	add    rax,0x4
  418680:	sub    rax,r10
  418683:	shr    rax,0x2
  418687:	jmp    0x4186dc
  418689:	nop    DWORD PTR [rax+0x0]
  418690:	mov    DWORD PTR [rsi+0x14],0x0
  418697:	mov    DWORD PTR [rsi+0x18],0x0
  41869e:	pop    rbx
  41869f:	pop    rsi
  4186a0:	pop    rdi
  4186a1:	pop    rbp
  4186a2:	ret    
  4186a3:	cmp    rbx,rdi
  4186a6:	mov    rdx,r10
  4186a9:	mov    rax,rdi
  4186ac:	jbe    0x418690
  4186ae:	xchg   ax,ax
  4186b0:	add    rax,0x4
  4186b4:	mov    r8d,DWORD PTR [rax-0x4]
  4186b8:	add    rdx,0x4
  4186bc:	cmp    rbx,rax
  4186bf:	mov    DWORD PTR [rdx-0x4],r8d
  4186c3:	ja     0x4186b0
  4186c5:	not    rdi
  4186c8:	lea    rax,[rdi+rbx*1]
  4186cc:	shr    rax,0x2
  4186d0:	lea    rax,[rax*4+0x4]
  4186d8:	shr    rax,0x2
  4186dc:	test   eax,eax
  4186de:	mov    DWORD PTR [rsi+0x14],eax
  4186e1:	je     0x418697
  4186e3:	pop    rbx
  4186e4:	pop    rsi
  4186e5:	pop    rdi
  4186e6:	pop    rbp
  4186e7:	ret    
  4186e8:	mov    rax,r10
  4186eb:	jmp    0x418674
  4186ed:	nop    DWORD PTR [rax]
  4186f0:	movsxd rax,DWORD PTR [rcx+0x14]
  4186f4:	lea    rdx,[rcx+0x18]
  4186f8:	lea    r8,[rdx+rax*4]
  4186fc:	cmp    rdx,r8
  4186ff:	jae    0x41872b
  418701:	mov    ecx,DWORD PTR [rcx+0x18]
  418704:	xor    eax,eax
  418706:	test   ecx,ecx
  418708:	je     0x418716
  41870a:	jmp    0x418724
  41870c:	nop    DWORD PTR [rax+0x0]
  418710:	mov    ecx,DWORD PTR [rdx]
  418712:	test   ecx,ecx
  418714:	jne    0x418724
  418716:	add    rdx,0x4
  41871a:	add    eax,0x20
  41871d:	cmp    r8,rdx
  418720:	ja     0x418710
  418722:	repz ret 
  418724:	tzcnt  ecx,ecx
  418728:	add    eax,ecx
  41872a:	ret    
  41872b:	xor    eax,eax
  41872d:	ret    
  41872e:	nop
  41872f:	nop
  418730:	push   rsi
  418731:	push   rbx
  418732:	sub    rsp,0x28
  418736:	mov    eax,DWORD PTR [rip+0x11fd4]        # 0x42a710
  41873c:	movsxd rsi,ecx
  41873f:	cmp    eax,0x2
  418742:	je     0x4187ad
  418744:	test   eax,eax
  418746:	je     0x418772
  418748:	cmp    eax,0x1
  41874b:	jne    0x41876b
  41874d:	mov    rbx,QWORD PTR [rip+0x13328]        # 0x42ba7c
  418754:	mov    ecx,0x1
  418759:	call   rbx
  41875b:	mov    eax,DWORD PTR [rip+0x11faf]        # 0x42a710
  418761:	cmp    eax,0x1
  418764:	je     0x418754
  418766:	cmp    eax,0x2
  418769:	je     0x4187ad
  41876b:	add    rsp,0x28
  41876f:	pop    rbx
  418770:	pop    rsi
  418771:	ret    
  418772:	mov    al,0x1
  418774:	xchg   DWORD PTR [rip+0x11f96],eax        # 0x42a710
  41877a:	test   eax,eax
  41877c:	jne    0x4187d0
  41877e:	lea    rcx,[rip+0x11fbb]        # 0x42a740
  418785:	mov    rbx,QWORD PTR [rip+0x13290]        # 0x42ba1c
  41878c:	call   rbx
  41878e:	lea    rcx,[rip+0x11fd3]        # 0x42a768
  418795:	call   rbx
  418797:	lea    rcx,[rip+0x62]        # 0x418800
  41879e:	call   0x412570
  4187a3:	mov    DWORD PTR [rip+0x11f63],0x2        # 0x42a710
  4187ad:	lea    rdx,[rsi+rsi*4]
  4187b1:	lea    rax,[rip+0x11f88]        # 0x42a740
  4187b8:	lea    rcx,[rax+rdx*8]
  4187bc:	mov    rax,QWORD PTR [rip+0x131f1]        # 0x42b9b4
  4187c3:	add    rsp,0x28
  4187c7:	pop    rbx
  4187c8:	pop    rsi
  4187c9:	rex.W jmp rax
  4187cc:	nop    DWORD PTR [rax+0x0]
  4187d0:	cmp    eax,0x2
  4187d3:	je     0x4187f0
  4187d5:	mov    eax,DWORD PTR [rip+0x11f35]        # 0x42a710
  4187db:	cmp    eax,0x1
  4187de:	je     0x41874d
  4187e4:	jmp    0x418766
  4187e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4187f0:	mov    DWORD PTR [rip+0x11f16],0x2        # 0x42a710
  4187fa:	jmp    0x4187ad
  4187fc:	nop    DWORD PTR [rax+0x0]
  418800:	push   rbx
  418801:	sub    rsp,0x20
  418805:	mov    eax,0x3
  41880a:	xchg   DWORD PTR [rip+0x11f00],eax        # 0x42a710
  418810:	cmp    eax,0x2
  418813:	je     0x418820
  418815:	add    rsp,0x20
  418819:	pop    rbx
  41881a:	ret    
  41881b:	nop    DWORD PTR [rax+rax*1+0x0]
  418820:	mov    rbx,QWORD PTR [rip+0x13185]        # 0x42b9ac
  418827:	lea    rcx,[rip+0x11f12]        # 0x42a740
  41882e:	call   rbx
  418830:	lea    rcx,[rip+0x11f31]        # 0x42a768
  418837:	mov    rax,rbx
  41883a:	add    rsp,0x20
  41883e:	pop    rbx
  41883f:	rex.W jmp rax
  418842:	nop    DWORD PTR [rax+0x0]
  418846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418850:	push   rdi
  418851:	push   rsi
  418852:	push   rbx
  418853:	sub    rsp,0x20
  418857:	mov    ebx,ecx
  418859:	xor    ecx,ecx
  41885b:	call   0x418730
  418860:	cmp    ebx,0x9
  418863:	jg     0x4188a0
  418865:	lea    rdx,[rip+0x11e54]        # 0x42a6c0
  41886c:	movsxd rcx,ebx
  41886f:	mov    rdi,QWORD PTR [rdx+rcx*8]
  418873:	test   rdi,rdi
  418876:	je     0x418900
  41887c:	cmp    DWORD PTR [rip+0x11e8d],0x2        # 0x42a710
  418883:	mov    r8,QWORD PTR [rdi]
  418886:	mov    QWORD PTR [rdx+rcx*8],r8
  41888a:	jne    0x4188e6
  41888c:	lea    rcx,[rip+0x11ead]        # 0x42a740
  418893:	call   QWORD PTR [rip+0x13193]        # 0x42ba2c
  418899:	jmp    0x4188e6
  41889b:	nop    DWORD PTR [rax+rax*1+0x0]
  4188a0:	mov    eax,0x1
  4188a5:	mov    ecx,ebx
  4188a7:	shl    eax,cl
  4188a9:	mov    esi,eax
  4188ab:	lea    eax,[rax-0x1]
  4188ae:	cdqe   
  4188b0:	lea    rdx,[rax*4+0x27]
  4188b8:	shr    rdx,0x3
  4188bc:	mov    edx,edx
  4188be:	lea    rcx,[rdx*8+0x0]
  4188c6:	call   0x419888
  4188cb:	test   rax,rax
  4188ce:	mov    rdi,rax
  4188d1:	je     0x41895a
  4188d7:	cmp    DWORD PTR [rip+0x11e32],0x2        # 0x42a710
  4188de:	mov    DWORD PTR [rdi+0x8],ebx
  4188e1:	mov    DWORD PTR [rdi+0xc],esi
  4188e4:	je     0x41888c
  4188e6:	mov    DWORD PTR [rdi+0x14],0x0
  4188ed:	mov    DWORD PTR [rdi+0x10],0x0
  4188f4:	mov    rax,rdi
  4188f7:	add    rsp,0x20
  4188fb:	pop    rbx
  4188fc:	pop    rsi
  4188fd:	pop    rdi
  4188fe:	ret    
  4188ff:	nop
  418900:	mov    ecx,ebx
  418902:	mov    eax,0x1
  418907:	mov    rdi,QWORD PTR [rip+0x57a2]        # 0x41e0b0
  41890e:	shl    eax,cl
  418910:	lea    rcx,[rip+0x114a9]        # 0x429dc0
  418917:	lea    edx,[rax-0x1]
  41891a:	mov    esi,eax
  41891c:	mov    rax,rdi
  41891f:	movsxd rdx,edx
  418922:	sub    rax,rcx
  418925:	lea    rdx,[rdx*4+0x27]
  41892d:	mov    rcx,rax
  418930:	sar    rcx,0x3
  418934:	shr    rdx,0x3
  418938:	mov    edx,edx
  41893a:	add    rcx,rdx
  41893d:	cmp    rcx,0x120
  418944:	ja     0x4188be
  41894a:	lea    rdx,[rdi+rdx*8]
  41894e:	mov    QWORD PTR [rip+0x575b],rdx        # 0x41e0b0
  418955:	jmp    0x4188d7
  41895a:	xor    eax,eax
  41895c:	jmp    0x4188f7
  41895e:	xchg   ax,ax
  418960:	push   rbx
  418961:	sub    rsp,0x20
  418965:	test   rcx,rcx
  418968:	je     0x418999
  41896a:	cmp    DWORD PTR [rcx+0x8],0x9
  41896e:	jg     0x4189a0
  418970:	mov    rbx,rcx
  418973:	xor    ecx,ecx
  418975:	call   0x418730
  41897a:	movsxd rdx,DWORD PTR [rbx+0x8]
  41897e:	lea    rax,[rip+0x11d3b]        # 0x42a6c0
  418985:	cmp    DWORD PTR [rip+0x11d84],0x2        # 0x42a710
  41898c:	mov    rcx,QWORD PTR [rax+rdx*8]
  418990:	mov    QWORD PTR [rax+rdx*8],rbx
  418994:	mov    QWORD PTR [rbx],rcx
  418997:	je     0x4189b0
  418999:	add    rsp,0x20
  41899d:	pop    rbx
  41899e:	ret    
  41899f:	nop
  4189a0:	add    rsp,0x20
  4189a4:	pop    rbx
  4189a5:	jmp    0x4198d0
  4189aa:	nop    WORD PTR [rax+rax*1+0x0]
  4189b0:	mov    rax,QWORD PTR [rip+0x13075]        # 0x42ba2c
  4189b7:	lea    rcx,[rip+0x11d82]        # 0x42a740
  4189be:	add    rsp,0x20
  4189c2:	pop    rbx
  4189c3:	rex.W jmp rax
  4189c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4189d0:	push   rbp
  4189d1:	push   rdi
  4189d2:	push   rsi
  4189d3:	push   rbx
  4189d4:	sub    rsp,0x28
  4189d8:	mov    esi,DWORD PTR [rcx+0x14]
  4189db:	xor    r9d,r9d
  4189de:	lea    r10,[rcx+0x18]
  4189e2:	mov    rdi,rcx
  4189e5:	movsxd rbx,r8d
  4189e8:	movsxd rdx,edx
  4189eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4189f0:	mov    eax,DWORD PTR [r10+r9*4]
  4189f4:	imul   rax,rdx
  4189f8:	add    rax,rbx
  4189fb:	mov    rbx,rax
  4189fe:	mov    DWORD PTR [r10+r9*4],eax
  418a02:	add    r9,0x1
  418a06:	shr    rbx,0x20
  418a0a:	cmp    esi,r9d
  418a0d:	jg     0x4189f0
  418a0f:	test   rbx,rbx
  418a12:	mov    rax,rdi
  418a15:	je     0x418a2c
  418a17:	cmp    esi,DWORD PTR [rdi+0xc]
  418a1a:	jge    0x418a35
  418a1c:	movsxd rax,esi
  418a1f:	add    esi,0x1
  418a22:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  418a26:	mov    DWORD PTR [rdi+0x14],esi
  418a29:	mov    rax,rdi
  418a2c:	add    rsp,0x28
  418a30:	pop    rbx
  418a31:	pop    rsi
  418a32:	pop    rdi
  418a33:	pop    rbp
  418a34:	ret    
  418a35:	mov    eax,DWORD PTR [rdi+0x8]
  418a38:	lea    ecx,[rax+0x1]
  418a3b:	call   0x418850
  418a40:	test   rax,rax
  418a43:	mov    rbp,rax
  418a46:	je     0x418a7e
  418a48:	lea    rcx,[rax+0x10]
  418a4c:	movsxd rax,DWORD PTR [rdi+0x14]
  418a50:	lea    rdx,[rdi+0x10]
  418a54:	lea    r8,[rax*4+0x8]
  418a5c:	call   0x419880
  418a61:	mov    rcx,rdi
  418a64:	mov    rdi,rbp
  418a67:	call   0x418960
  418a6c:	movsxd rax,esi
  418a6f:	add    esi,0x1
  418a72:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  418a76:	mov    DWORD PTR [rdi+0x14],esi
  418a79:	mov    rax,rdi
  418a7c:	jmp    0x418a2c
  418a7e:	xor    eax,eax
  418a80:	jmp    0x418a2c
  418a82:	nop    DWORD PTR [rax+0x0]
  418a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a90:	push   rbx
  418a91:	sub    rsp,0x20
  418a95:	mov    ebx,ecx
  418a97:	mov    ecx,0x1
  418a9c:	call   0x418850
  418aa1:	test   rax,rax
  418aa4:	je     0x418ab0
  418aa6:	mov    DWORD PTR [rax+0x18],ebx
  418aa9:	mov    DWORD PTR [rax+0x14],0x1
  418ab0:	add    rsp,0x20
  418ab4:	pop    rbx
  418ab5:	ret    
  418ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ac0:	push   r14
  418ac2:	push   r13
  418ac4:	push   r12
  418ac6:	push   rbp
  418ac7:	push   rdi
  418ac8:	push   rsi
  418ac9:	push   rbx
  418aca:	sub    rsp,0x20
  418ace:	movsxd r13,DWORD PTR [rcx+0x14]
  418ad2:	movsxd rbx,DWORD PTR [rdx+0x14]
  418ad6:	mov    r12,rcx
  418ad9:	mov    r14,rdx
  418adc:	cmp    r13d,ebx
  418adf:	jl     0x418be1
  418ae5:	mov    eax,ebx
  418ae7:	movsxd rbx,r13d
  418aea:	movsxd r13,eax
  418aed:	xor    eax,eax
  418aef:	lea    esi,[rbx+r13*1]
  418af3:	cmp    esi,DWORD PTR [r12+0xc]
  418af8:	setg   al
  418afb:	add    eax,DWORD PTR [r12+0x8]
  418b00:	mov    ecx,eax
  418b02:	call   0x418850
  418b07:	test   rax,rax
  418b0a:	je     0x418bec
  418b10:	lea    rdi,[rax+0x18]
  418b14:	movsxd rdx,esi
  418b17:	lea    rbp,[rdi+rdx*4]
  418b1b:	mov    r8,rdi
  418b1e:	cmp    rdi,rbp
  418b21:	jae    0x418b33
  418b23:	mov    DWORD PTR [r8],0x0
  418b2a:	add    r8,0x4
  418b2e:	cmp    rbp,r8
  418b31:	ja     0x418b23
  418b33:	lea    rdx,[r14+0x18]
  418b37:	add    r12,0x18
  418b3b:	lea    rbx,[r12+rbx*4]
  418b3f:	lea    r13,[rdx+r13*4]
  418b43:	cmp    rdx,r13
  418b46:	jae    0x418ba9
  418b48:	nop    DWORD PTR [rax+rax*1+0x0]
  418b50:	add    rdx,0x4
  418b54:	mov    r11d,DWORD PTR [rdx-0x4]
  418b58:	test   r11d,r11d
  418b5b:	je     0x418ba0
  418b5d:	mov    r9,rdi
  418b60:	mov    r8,r12
  418b63:	xor    r10d,r10d
  418b66:	jmp    0x418b73
  418b68:	nop    DWORD PTR [rax+rax*1+0x0]
  418b70:	mov    r9,r14
  418b73:	add    r8,0x4
  418b77:	mov    ecx,DWORD PTR [r8-0x4]
  418b7b:	mov    r14d,DWORD PTR [r9]
  418b7e:	imul   rcx,r11
  418b82:	add    rcx,r14
  418b85:	lea    r14,[r9+0x4]
  418b89:	add    rcx,r10
  418b8c:	mov    r10,rcx
  418b8f:	mov    DWORD PTR [r14-0x4],ecx
  418b93:	shr    r10,0x20
  418b97:	cmp    rbx,r8
  418b9a:	ja     0x418b70
  418b9c:	mov    DWORD PTR [r9+0x4],r10d
  418ba0:	add    rdi,0x4
  418ba4:	cmp    r13,rdx
  418ba7:	ja     0x418b50
  418ba9:	test   esi,esi
  418bab:	jle    0x418bcf
  418bad:	mov    r8d,DWORD PTR [rbp-0x4]
  418bb1:	lea    rdx,[rbp-0x4]
  418bb5:	test   r8d,r8d
  418bb8:	je     0x418bca
  418bba:	jmp    0x418bcf
  418bbc:	nop    DWORD PTR [rax+0x0]
  418bc0:	sub    rdx,0x4
  418bc4:	mov    ecx,DWORD PTR [rdx]
  418bc6:	test   ecx,ecx
  418bc8:	jne    0x418bcf
  418bca:	sub    esi,0x1
  418bcd:	jne    0x418bc0
  418bcf:	mov    DWORD PTR [rax+0x14],esi
  418bd2:	add    rsp,0x20
  418bd6:	pop    rbx
  418bd7:	pop    rsi
  418bd8:	pop    rdi
  418bd9:	pop    rbp
  418bda:	pop    r12
  418bdc:	pop    r13
  418bde:	pop    r14
  418be0:	ret    
  418be1:	mov    r12,rdx
  418be4:	mov    r14,rcx
  418be7:	jmp    0x418aed
  418bec:	xor    eax,eax
  418bee:	jmp    0x418bd2
  418bf0:	push   rbp
  418bf1:	push   rdi
  418bf2:	push   rsi
  418bf3:	push   rbx
  418bf4:	sub    rsp,0x28
  418bf8:	mov    eax,edx
  418bfa:	mov    rbp,rcx
  418bfd:	mov    ebx,edx
  418bff:	and    eax,0x3
  418c02:	jne    0x418c90
  418c08:	sar    ebx,0x2
  418c0b:	mov    rax,rbp
  418c0e:	test   ebx,ebx
  418c10:	je     0x418c5c
  418c12:	mov    rdi,QWORD PTR [rip+0x11167]        # 0x429d80
  418c19:	test   rdi,rdi
  418c1c:	jne    0x418c32
  418c1e:	jmp    0x418cdd
  418c23:	sar    ebx,1
  418c25:	je     0x418c59
  418c27:	mov    rsi,QWORD PTR [rdi]
  418c2a:	test   rsi,rsi
  418c2d:	je     0x418c65
  418c2f:	mov    rdi,rsi
  418c32:	test   bl,0x1
  418c35:	je     0x418c23
  418c37:	mov    rdx,rdi
  418c3a:	mov    rcx,rbp
  418c3d:	call   0x418ac0
  418c42:	test   rax,rax
  418c45:	mov    rsi,rax
  418c48:	je     0x418cb3
  418c4a:	mov    rcx,rbp
  418c4d:	mov    rbp,rsi
  418c50:	call   0x418960
  418c55:	sar    ebx,1
  418c57:	jne    0x418c27
  418c59:	mov    rax,rbp
  418c5c:	add    rsp,0x28
  418c60:	pop    rbx
  418c61:	pop    rsi
  418c62:	pop    rdi
  418c63:	pop    rbp
  418c64:	ret    
  418c65:	mov    ecx,0x1
  418c6a:	call   0x418730
  418c6f:	mov    rsi,QWORD PTR [rdi]
  418c72:	test   rsi,rsi
  418c75:	je     0x418cbe
  418c77:	cmp    DWORD PTR [rip+0x11a92],0x2        # 0x42a710
  418c7e:	jne    0x418c2f
  418c80:	lea    rcx,[rip+0x11ae1]        # 0x42a768
  418c87:	call   QWORD PTR [rip+0x12d9f]        # 0x42ba2c
  418c8d:	jmp    0x418c2f
  418c8f:	nop
  418c90:	sub    eax,0x1
  418c93:	lea    rdx,[rip+0xcc26]        # 0x4258c0
  418c9a:	xor    r8d,r8d
  418c9d:	cdqe   
  418c9f:	mov    edx,DWORD PTR [rdx+rax*4]
  418ca2:	call   0x4189d0
  418ca7:	test   rax,rax
  418caa:	mov    rbp,rax
  418cad:	jne    0x418c08
  418cb3:	xor    eax,eax
  418cb5:	add    rsp,0x28
  418cb9:	pop    rbx
  418cba:	pop    rsi
  418cbb:	pop    rdi
  418cbc:	pop    rbp
  418cbd:	ret    
  418cbe:	mov    rdx,rdi
  418cc1:	mov    rcx,rdi
  418cc4:	call   0x418ac0
  418cc9:	test   rax,rax
  418ccc:	mov    rsi,rax
  418ccf:	mov    QWORD PTR [rdi],rax
  418cd2:	je     0x418cb3
  418cd4:	mov    QWORD PTR [rax],0x0
  418cdb:	jmp    0x418c77
  418cdd:	mov    ecx,0x1
  418ce2:	call   0x418730
  418ce7:	mov    rdi,QWORD PTR [rip+0x11092]        # 0x429d80
  418cee:	test   rdi,rdi
  418cf1:	je     0x418d12
  418cf3:	cmp    DWORD PTR [rip+0x11a16],0x2        # 0x42a710
  418cfa:	jne    0x418c32
  418d00:	lea    rcx,[rip+0x11a61]        # 0x42a768
  418d07:	call   QWORD PTR [rip+0x12d1f]        # 0x42ba2c
  418d0d:	jmp    0x418c32
  418d12:	mov    ecx,0x1
  418d17:	call   0x418850
  418d1c:	test   rax,rax
  418d1f:	mov    rdi,rax
  418d22:	je     0x418d42
  418d24:	mov    DWORD PTR [rax+0x18],0x271
  418d2b:	mov    DWORD PTR [rax+0x14],0x1
  418d32:	mov    QWORD PTR [rip+0x11047],rax        # 0x429d80
  418d39:	mov    QWORD PTR [rax],0x0
  418d40:	jmp    0x418cf3
  418d42:	mov    QWORD PTR [rip+0x11033],0x0        # 0x429d80
  418d4d:	xor    eax,eax
  418d4f:	jmp    0x418cb5
  418d54:	xchg   ax,ax
  418d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418d60:	push   r13
  418d62:	push   r12
  418d64:	push   rbp
  418d65:	push   rdi
  418d66:	push   rsi
  418d67:	push   rbx
  418d68:	sub    rsp,0x28
  418d6c:	mov    rdi,rcx
  418d6f:	mov    ebp,edx
  418d71:	mov    esi,edx
  418d73:	mov    r12d,DWORD PTR [rdi+0x14]
  418d77:	sar    ebp,0x5
  418d7a:	mov    eax,DWORD PTR [rdi+0xc]
  418d7d:	mov    ecx,DWORD PTR [rcx+0x8]
  418d80:	add    r12d,ebp
  418d83:	lea    ebx,[r12+0x1]
  418d88:	cmp    ebx,eax
  418d8a:	jle    0x418d99
  418d8c:	nop    DWORD PTR [rax+0x0]
  418d90:	add    eax,eax
  418d92:	add    ecx,0x1
  418d95:	cmp    ebx,eax
  418d97:	jg     0x418d90
  418d99:	call   0x418850
  418d9e:	test   rax,rax
  418da1:	mov    r13,rax
  418da4:	je     0x418e6f
  418daa:	test   ebp,ebp
  418dac:	lea    r8,[rax+0x18]
  418db0:	jle    0x418e67
  418db6:	lea    eax,[rbp-0x1]
  418db9:	lea    r9,[r8+rax*4+0x4]
  418dbe:	xchg   ax,ax
  418dc0:	add    r8,0x4
  418dc4:	mov    DWORD PTR [r8-0x4],0x0
  418dcc:	cmp    r8,r9
  418dcf:	jne    0x418dc0
  418dd1:	movsxd rax,DWORD PTR [rdi+0x14]
  418dd5:	lea    r8,[rdi+0x18]
  418dd9:	mov    edx,esi
  418ddb:	and    edx,0x1f
  418dde:	lea    rbp,[r8+rax*4]
  418de2:	je     0x418e50
  418de4:	mov    eax,0x20
  418de9:	xor    r11d,r11d
  418dec:	sub    eax,edx
  418dee:	jmp    0x418df3
  418df0:	mov    r9,rsi
  418df3:	mov    r10d,DWORD PTR [r8]
  418df6:	mov    ecx,edx
  418df8:	lea    rsi,[r9+0x4]
  418dfc:	add    r8,0x4
  418e00:	shl    r10d,cl
  418e03:	mov    ecx,eax
  418e05:	or     r10d,r11d
  418e08:	mov    DWORD PTR [rsi-0x4],r10d
  418e0c:	mov    r11d,DWORD PTR [r8-0x4]
  418e10:	shr    r11d,cl
  418e13:	cmp    rbp,r8
  418e16:	ja     0x418df0
  418e18:	add    r12d,0x2
  418e1c:	test   r11d,r11d
  418e1f:	mov    DWORD PTR [r9+0x4],r11d
  418e23:	cmovne ebx,r12d
  418e27:	sub    ebx,0x1
  418e2a:	mov    rcx,rdi
  418e2d:	mov    DWORD PTR [r13+0x14],ebx
  418e31:	call   0x418960
  418e36:	mov    rax,r13
  418e39:	add    rsp,0x28
  418e3d:	pop    rbx
  418e3e:	pop    rsi
  418e3f:	pop    rdi
  418e40:	pop    rbp
  418e41:	pop    r12
  418e43:	pop    r13
  418e45:	ret    
  418e46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e50:	add    r8,0x4
  418e54:	mov    edx,DWORD PTR [r8-0x4]
  418e58:	add    r9,0x4
  418e5c:	cmp    rbp,r8
  418e5f:	mov    DWORD PTR [r9-0x4],edx
  418e63:	ja     0x418e50
  418e65:	jmp    0x418e27
  418e67:	mov    r9,r8
  418e6a:	jmp    0x418dd1
  418e6f:	xor    eax,eax
  418e71:	jmp    0x418e39
  418e73:	nop    DWORD PTR [rax]
  418e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e80:	movsxd r8,DWORD PTR [rdx+0x14]
  418e84:	mov    eax,DWORD PTR [rcx+0x14]
  418e87:	sub    eax,r8d
  418e8a:	test   eax,eax
  418e8c:	jne    0x418ec2
  418e8e:	shl    r8,0x2
  418e92:	add    rcx,0x18
  418e96:	lea    rax,[rcx+r8*1]
  418e9a:	lea    rdx,[rdx+r8*1+0x18]
  418e9f:	jmp    0x418ea6
  418ea1:	cmp    rcx,rax
  418ea4:	jae    0x418ec0
  418ea6:	sub    rdx,0x4
  418eaa:	sub    rax,0x4
  418eae:	mov    r9d,DWORD PTR [rdx]
  418eb1:	cmp    DWORD PTR [rax],r9d
  418eb4:	je     0x418ea1
  418eb6:	sbb    eax,eax
  418eb8:	or     eax,0x1
  418ebb:	ret    
  418ebc:	nop    DWORD PTR [rax+0x0]
  418ec0:	xor    eax,eax
  418ec2:	repz ret 
  418ec4:	xchg   ax,ax
  418ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ed0:	push   rdi
  418ed1:	push   rsi
  418ed2:	push   rbx
  418ed3:	sub    rsp,0x20
  418ed7:	mov    rsi,rcx
  418eda:	mov    rdi,rdx
  418edd:	call   0x418e80
  418ee2:	test   eax,eax
  418ee4:	je     0x418fd0
  418eea:	mov    ebx,0x0
  418eef:	js     0x418ff2
  418ef5:	mov    ecx,DWORD PTR [rsi+0x8]
  418ef8:	call   0x418850
  418efd:	test   rax,rax
  418f00:	je     0x419002
  418f06:	movsxd rdx,DWORD PTR [rsi+0x14]
  418f0a:	lea    rcx,[rsi+0x18]
  418f0e:	mov    DWORD PTR [rax+0x10],ebx
  418f11:	lea    r10,[rdi+0x18]
  418f15:	xor    r9d,r9d
  418f18:	mov    rbx,rdx
  418f1b:	lea    rsi,[rcx+rdx*4]
  418f1f:	movsxd rdx,DWORD PTR [rdi+0x14]
  418f23:	lea    rdi,[r10+rdx*4]
  418f27:	lea    rdx,[rax+0x18]
  418f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  418f30:	add    rcx,0x4
  418f34:	add    r10,0x4
  418f38:	mov    r11d,DWORD PTR [r10-0x4]
  418f3c:	mov    r8d,DWORD PTR [rcx-0x4]
  418f40:	add    rdx,0x4
  418f44:	sub    r8,r11
  418f47:	sub    r8,r9
  418f4a:	mov    r9,r8
  418f4d:	mov    r11d,r8d
  418f50:	mov    DWORD PTR [rdx-0x4],r8d
  418f54:	shr    r9,0x20
  418f58:	and    r9d,0x1
  418f5c:	cmp    rdi,r10
  418f5f:	ja     0x418f30
  418f61:	cmp    rsi,rcx
  418f64:	mov    rdi,rdx
  418f67:	mov    r10,rcx
  418f6a:	jbe    0x418fa6
  418f6c:	nop    DWORD PTR [rax+0x0]
  418f70:	add    rcx,0x4
  418f74:	mov    r8d,DWORD PTR [rcx-0x4]
  418f78:	add    rdx,0x4
  418f7c:	sub    r8,r9
  418f7f:	mov    r9,r8
  418f82:	mov    r11d,r8d
  418f85:	mov    DWORD PTR [rdx-0x4],r8d
  418f89:	shr    r9,0x20
  418f8d:	and    r9d,0x1
  418f91:	cmp    rsi,rcx
  418f94:	ja     0x418f70
  418f96:	not    r10
  418f99:	lea    rdx,[r10+rsi*1]
  418f9d:	shr    rdx,0x2
  418fa1:	lea    rdx,[rdi+rdx*4+0x4]
  418fa6:	sub    rdx,0x4
  418faa:	test   r11d,r11d
  418fad:	jne    0x418fbd
  418faf:	nop
  418fb0:	sub    rdx,0x4
  418fb4:	mov    ecx,DWORD PTR [rdx]
  418fb6:	sub    ebx,0x1
  418fb9:	test   ecx,ecx
  418fbb:	je     0x418fb0
  418fbd:	mov    DWORD PTR [rax+0x14],ebx
  418fc0:	add    rsp,0x20
  418fc4:	pop    rbx
  418fc5:	pop    rsi
  418fc6:	pop    rdi
  418fc7:	ret    
  418fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  418fd0:	xor    ecx,ecx
  418fd2:	call   0x418850
  418fd7:	test   rax,rax
  418fda:	je     0x419002
  418fdc:	mov    DWORD PTR [rax+0x14],0x1
  418fe3:	mov    DWORD PTR [rax+0x18],0x0
  418fea:	add    rsp,0x20
  418fee:	pop    rbx
  418fef:	pop    rsi
  418ff0:	pop    rdi
  418ff1:	ret    
  418ff2:	mov    rax,rsi
  418ff5:	mov    bl,0x1
  418ff7:	mov    rsi,rdi
  418ffa:	mov    rdi,rax
  418ffd:	jmp    0x418ef5
  419002:	xor    eax,eax
  419004:	jmp    0x418fc0
  419006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419010:	push   rsi
  419011:	push   rbx
  419012:	sub    rsp,0x18
  419016:	movsxd rax,DWORD PTR [rcx+0x14]
  41901a:	lea    r10,[rcx+0x18]
  41901e:	mov    ecx,0x20
  419023:	lea    r9,[r10+rax*4]
  419027:	mov    eax,DWORD PTR [r9-0x4]
  41902b:	lea    rbx,[r9-0x4]
  41902f:	bsr    r8d,eax
  419033:	xor    r8d,0x1f
  419037:	sub    ecx,r8d
  41903a:	cmp    r8d,0xa
  41903e:	mov    DWORD PTR [rdx],ecx
  419040:	jg     0x419090
  419042:	mov    ecx,0xb
  419047:	mov    r11d,eax
  41904a:	xor    esi,esi
  41904c:	sub    ecx,r8d
  41904f:	shr    r11d,cl
  419052:	or     r11d,0x3ff00000
  419059:	shl    r11,0x20
  41905d:	cmp    r10,rbx
  419060:	jae    0x419068
  419062:	mov    esi,DWORD PTR [r9-0x8]
  419066:	shr    esi,cl
  419068:	lea    ecx,[r8+0x15]
  41906c:	shl    eax,cl
  41906e:	mov    edx,eax
  419070:	mov    eax,esi
  419072:	or     eax,edx
  419074:	or     rax,r11
  419077:	mov    QWORD PTR [rsp+0x8],rax
  41907c:	movsd  xmm0,QWORD PTR [rsp+0x8]
  419082:	add    rsp,0x18
  419086:	pop    rbx
  419087:	pop    rsi
  419088:	ret    
  419089:	nop    DWORD PTR [rax+0x0]
  419090:	cmp    r10,rbx
  419093:	jae    0x4190f0
  419095:	mov    r11d,r8d
  419098:	lea    rsi,[r9-0x8]
  41909c:	mov    edx,DWORD PTR [r9-0x8]
  4190a0:	sub    r11d,0xb
  4190a4:	je     0x419112
  4190a6:	mov    ebx,0x2b
  4190ab:	mov    ecx,r11d
  4190ae:	sub    ebx,r8d
  4190b1:	shl    eax,cl
  4190b3:	mov    r8d,edx
  4190b6:	mov    ecx,ebx
  4190b8:	shr    r8d,cl
  4190bb:	or     eax,r8d
  4190be:	xor    r8d,r8d
  4190c1:	or     eax,0x3ff00000
  4190c6:	shl    rax,0x20
  4190ca:	cmp    r10,rsi
  4190cd:	jae    0x4190d6
  4190cf:	mov    r8d,DWORD PTR [r9-0xc]
  4190d3:	shr    r8d,cl
  4190d6:	mov    ecx,r11d
  4190d9:	shl    edx,cl
  4190db:	or     r8d,edx
  4190de:	movabs rdx,0xffffffff00000000
  4190e8:	and    rax,rdx
  4190eb:	or     rax,r8
  4190ee:	jmp    0x419077
  4190f0:	mov    r11d,r8d
  4190f3:	sub    r11d,0xb
  4190f7:	je     0x419110
  4190f9:	mov    ecx,r11d
  4190fc:	xor    r8d,r8d
  4190ff:	xor    edx,edx
  419101:	shl    eax,cl
  419103:	or     eax,0x3ff00000
  419108:	shl    rax,0x20
  41910c:	jmp    0x4190d6
  41910e:	xchg   ax,ax
  419110:	xor    edx,edx
  419112:	or     eax,0x3ff00000
  419117:	shl    rax,0x20
  41911b:	or     rax,rdx
  41911e:	jmp    0x419077
  419123:	nop    DWORD PTR [rax]
  419126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419130:	push   rdi
  419131:	push   rsi
  419132:	push   rbx
  419133:	sub    rsp,0x20
  419137:	mov    ecx,0x1
  41913c:	movq   rbx,xmm0
  419141:	mov    rdi,rdx
  419144:	mov    rsi,r8
  419147:	call   0x418850
  41914c:	test   rax,rax
  41914f:	je     0x419235
  419155:	mov    r9,rbx
  419158:	shr    r9,0x20
  41915c:	mov    r10d,r9d
  41915f:	and    r9d,0x7fffffff
  419166:	and    r10d,0xfffff
  41916d:	shr    r9d,0x14
  419171:	mov    edx,r10d
  419174:	or     edx,0x100000
  41917a:	test   r9d,r9d
  41917d:	cmovne r10d,edx
  419181:	test   ebx,ebx
  419183:	jne    0x4191c4
  419185:	xor    ecx,ecx
  419187:	mov    DWORD PTR [rax+0x14],0x1
  41918e:	mov    edx,0x1
  419193:	tzcnt  ecx,r10d
  419198:	shr    r10d,cl
  41919b:	test   r9d,r9d
  41919e:	lea    r11d,[rcx+0x20]
  4191a2:	mov    DWORD PTR [rax+0x18],r10d
  4191a6:	je     0x419203
  4191a8:	lea    edx,[r11+r9*1-0x433]
  4191b0:	mov    DWORD PTR [rdi],edx
  4191b2:	mov    edx,0x35
  4191b7:	sub    edx,r11d
  4191ba:	mov    DWORD PTR [rsi],edx
  4191bc:	add    rsp,0x20
  4191c0:	pop    rbx
  4191c1:	pop    rsi
  4191c2:	pop    rdi
  4191c3:	ret    
  4191c4:	xor    r11d,r11d
  4191c7:	tzcnt  r11d,ebx
  4191cc:	mov    ecx,r11d
  4191cf:	shr    ebx,cl
  4191d1:	test   r11d,r11d
  4191d4:	je     0x419230
  4191d6:	mov    ecx,0x20
  4191db:	mov    edx,r10d
  4191de:	sub    ecx,r11d
  4191e1:	shl    edx,cl
  4191e3:	mov    ecx,r11d
  4191e6:	or     ebx,edx
  4191e8:	shr    r10d,cl
  4191eb:	mov    DWORD PTR [rax+0x18],ebx
  4191ee:	cmp    r10d,0x1
  4191f2:	mov    DWORD PTR [rax+0x1c],r10d
  4191f6:	sbb    edx,edx
  4191f8:	add    edx,0x2
  4191fb:	test   r9d,r9d
  4191fe:	mov    DWORD PTR [rax+0x14],edx
  419201:	jne    0x4191a8
  419203:	movsxd rcx,edx
  419206:	shl    edx,0x5
  419209:	sub    r11d,0x432
  419210:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  419215:	mov    DWORD PTR [rdi],r11d
  419218:	xor    ecx,0x1f
  41921b:	sub    edx,ecx
  41921d:	mov    DWORD PTR [rsi],edx
  41921f:	add    rsp,0x20
  419223:	pop    rbx
  419224:	pop    rsi
  419225:	pop    rdi
  419226:	ret    
  419227:	nop    WORD PTR [rax+rax*1+0x0]
  419230:	mov    DWORD PTR [rax+0x18],ebx
  419233:	jmp    0x4191ee
  419235:	xor    eax,eax
  419237:	jmp    0x4191bc
  419239:	nop    DWORD PTR [rax+0x0]
  419240:	mov    rax,rcx
  419243:	lea    rcx,[rdx+0x1]
  419247:	movzx  edx,BYTE PTR [rdx]
  41924a:	test   dl,dl
  41924c:	mov    BYTE PTR [rax],dl
  41924e:	je     0x419262
  419250:	add    rcx,0x1
  419254:	movzx  edx,BYTE PTR [rcx-0x1]
  419258:	add    rax,0x1
  41925c:	test   dl,dl
  41925e:	mov    BYTE PTR [rax],dl
  419260:	jne    0x419250
  419262:	repz ret 
  419264:	nop
  419265:	nop
  419266:	nop
  419267:	nop
  419268:	nop
  419269:	nop
  41926a:	nop
  41926b:	nop
  41926c:	nop
  41926d:	nop
  41926e:	nop
  41926f:	nop
  419270:	push   rbp
  419271:	push   rdi
  419272:	push   rsi
  419273:	push   rbx
  419274:	sub    rsp,0x48
  419278:	test   rdx,rdx
  41927b:	je     0x4193a3
  419281:	test   r8,r8
  419284:	je     0x4193b0
  41928a:	mov    eax,DWORD PTR [r9]
  41928d:	mov    DWORD PTR [r9],0x0
  419294:	mov    DWORD PTR [rsp+0x30],eax
  419298:	movzx  eax,BYTE PTR [rdx]
  41929b:	test   al,al
  41929d:	je     0x419340
  4192a3:	cmp    DWORD PTR [rsp+0x98],0x1
  4192ab:	mov    rsi,r9
  4192ae:	mov    rdi,r8
  4192b1:	mov    rbx,rdx
  4192b4:	mov    rbp,rcx
  4192b7:	jbe    0x419320
  4192b9:	cmp    BYTE PTR [rsp+0x30],0x0
  4192be:	jne    0x419350
  4192c4:	movzx  edx,al
  4192c7:	mov    ecx,DWORD PTR [rsp+0x90]
  4192ce:	call   QWORD PTR [rip+0x12750]        # 0x42ba24
  4192d4:	test   eax,eax
  4192d6:	je     0x419320
  4192d8:	cmp    rdi,0x1
  4192dc:	jbe    0x4193cc
  4192e2:	mov    DWORD PTR [rsp+0x28],0x1
  4192ea:	mov    QWORD PTR [rsp+0x20],rbp
  4192ef:	mov    r9d,0x2
  4192f5:	mov    r8,rbx
  4192f8:	mov    edx,0x8
  4192fd:	mov    ecx,DWORD PTR [rsp+0x90]
  419304:	call   QWORD PTR [rip+0x12732]        # 0x42ba3c
  41930a:	test   eax,eax
  41930c:	je     0x4193b7
  419312:	mov    eax,0x2
  419317:	add    rsp,0x48
  41931b:	pop    rbx
  41931c:	pop    rsi
  41931d:	pop    rdi
  41931e:	pop    rbp
  41931f:	ret    
  419320:	mov    eax,DWORD PTR [rsp+0x90]
  419327:	test   eax,eax
  419329:	jne    0x419370
  41932b:	movzx  eax,BYTE PTR [rbx]
  41932e:	mov    WORD PTR [rbp+0x0],ax
  419332:	mov    eax,0x1
  419337:	add    rsp,0x48
  41933b:	pop    rbx
  41933c:	pop    rsi
  41933d:	pop    rdi
  41933e:	pop    rbp
  41933f:	ret    
  419340:	xor    edx,edx
  419342:	xor    eax,eax
  419344:	mov    WORD PTR [rcx],dx
  419347:	add    rsp,0x48
  41934b:	pop    rbx
  41934c:	pop    rsi
  41934d:	pop    rdi
  41934e:	pop    rbp
  41934f:	ret    
  419350:	mov    BYTE PTR [rsp+0x31],al
  419354:	mov    DWORD PTR [rsp+0x28],0x1
  41935c:	mov    r9d,0x2
  419362:	mov    QWORD PTR [rsp+0x20],rcx
  419367:	lea    r8,[rsp+0x30]
  41936c:	jmp    0x4192f8
  41936e:	xchg   ax,ax
  419370:	mov    DWORD PTR [rsp+0x28],0x1
  419378:	mov    QWORD PTR [rsp+0x20],rbp
  41937d:	mov    r9d,0x1
  419383:	mov    r8,rbx
  419386:	mov    edx,0x8
  41938b:	mov    ecx,DWORD PTR [rsp+0x90]
  419392:	call   QWORD PTR [rip+0x126a4]        # 0x42ba3c
  419398:	test   eax,eax
  41939a:	je     0x4193b7
  41939c:	mov    eax,0x1
  4193a1:	jmp    0x419347
  4193a3:	xor    eax,eax
  4193a5:	add    rsp,0x48
  4193a9:	pop    rbx
  4193aa:	pop    rsi
  4193ab:	pop    rdi
  4193ac:	pop    rbp
  4193ad:	ret    
  4193ae:	xchg   ax,ax
  4193b0:	mov    eax,0xfffffffe
  4193b5:	jmp    0x419347
  4193b7:	call   0x419948
  4193bc:	mov    DWORD PTR [rax],0x2a
  4193c2:	mov    eax,0xffffffff
  4193c7:	jmp    0x419347
  4193cc:	movzx  eax,BYTE PTR [rbx]
  4193cf:	mov    BYTE PTR [rsi],al
  4193d1:	mov    eax,0xfffffffe
  4193d6:	jmp    0x419347
  4193db:	nop    DWORD PTR [rax+rax*1+0x0]
  4193e0:	push   rbp
  4193e1:	push   rdi
  4193e2:	push   rsi
  4193e3:	push   rbx
  4193e4:	sub    rsp,0x58
  4193e8:	xor    eax,eax
  4193ea:	mov    WORD PTR [rsp+0x4e],ax
  4193ef:	lea    rax,[rsp+0x4e]
  4193f4:	test   rcx,rcx
  4193f7:	mov    rbx,rcx
  4193fa:	mov    rsi,r9
  4193fd:	mov    rdi,rdx
  419400:	cmove  rbx,rax
  419404:	mov    rax,QWORD PTR [rip+0xc6f5]        # 0x425b00
  41940b:	mov    QWORD PTR [rsp+0x38],r8
  419410:	mov    rax,QWORD PTR [rax]
  419413:	mov    ebp,DWORD PTR [rax]
  419415:	call   0x419990
  41941a:	mov    r8,QWORD PTR [rsp+0x38]
  41941f:	lea    r9,[rip+0x113a2]        # 0x42a7c8
  419426:	test   rsi,rsi
  419429:	mov    DWORD PTR [rsp+0x28],ebp
  41942d:	mov    DWORD PTR [rsp+0x20],eax
  419431:	mov    rdx,rdi
  419434:	cmovne r9,rsi
  419438:	mov    rcx,rbx
  41943b:	call   0x419270
  419440:	cdqe   
  419442:	add    rsp,0x58
  419446:	pop    rbx
  419447:	pop    rsi
  419448:	pop    rdi
  419449:	pop    rbp
  41944a:	ret    
  41944b:	nop    DWORD PTR [rax+rax*1+0x0]
  419450:	push   r15
  419452:	push   r14
  419454:	push   r13
  419456:	push   r12
  419458:	push   rbp
  419459:	push   rdi
  41945a:	push   rsi
  41945b:	push   rbx
  41945c:	sub    rsp,0x48
  419460:	lea    rax,[rip+0x1135d]        # 0x42a7c4
  419467:	test   r9,r9
  41946a:	mov    rdi,r9
  41946d:	mov    r13,rdx
  419470:	cmove  rdi,rax
  419474:	mov    r14,rcx
  419477:	mov    rsi,r8
  41947a:	call   0x419990
  41947f:	mov    r12d,eax
  419482:	mov    rax,QWORD PTR [rip+0xc677]        # 0x425b00
  419489:	test   r13,r13
  41948c:	mov    rax,QWORD PTR [rax]
  41948f:	mov    ebp,DWORD PTR [rax]
  419491:	je     0x419515
  419497:	mov    rdx,QWORD PTR [r13+0x0]
  41949b:	test   rdx,rdx
  41949e:	je     0x419515
  4194a0:	test   r14,r14
  4194a3:	je     0x419520
  4194a5:	xor    ebx,ebx
  4194a7:	test   rsi,rsi
  4194aa:	jne    0x4194ca
  4194ac:	jmp    0x419515
  4194ae:	xchg   ax,ax
  4194b0:	movsxd r10,eax
  4194b3:	add    r14,0x2
  4194b7:	mov    rdx,r10
  4194ba:	add    rdx,QWORD PTR [r13+0x0]
  4194be:	add    rbx,r10
  4194c1:	cmp    rsi,rbx
  4194c4:	mov    QWORD PTR [r13+0x0],rdx
  4194c8:	jbe    0x419510
  4194ca:	mov    r8,rsi
  4194cd:	mov    DWORD PTR [rsp+0x28],ebp
  4194d1:	mov    DWORD PTR [rsp+0x20],r12d
  4194d6:	sub    r8,rbx
  4194d9:	mov    r9,rdi
  4194dc:	mov    rcx,r14
  4194df:	call   0x419270
  4194e4:	cmp    eax,0x0
  4194e7:	jg     0x4194b0
  4194e9:	jne    0x419510
  4194eb:	cmp    rbx,rsi
  4194ee:	jae    0x419510
  4194f0:	mov    QWORD PTR [r13+0x0],0x0
  4194f8:	mov    rax,rbx
  4194fb:	add    rsp,0x48
  4194ff:	pop    rbx
  419500:	pop    rsi
  419501:	pop    rdi
  419502:	pop    rbp
  419503:	pop    r12
  419505:	pop    r13
  419507:	pop    r14
  419509:	pop    r15
  41950b:	ret    
  41950c:	xor    ebx,ebx
  41950e:	xchg   ax,ax
  419510:	mov    rax,rbx
  419513:	jmp    0x4194fb
  419515:	xor    eax,eax
  419517:	jmp    0x4194fb
  419519:	nop    DWORD PTR [rax+0x0]
  419520:	xor    eax,eax
  419522:	test   rsi,rsi
  419525:	mov    WORD PTR [rsp+0x3e],ax
  41952a:	je     0x41950c
  41952c:	mov    r15d,ebp
  41952f:	xor    ebx,ebx
  419531:	lea    r14,[rsp+0x3e]
  419536:	jmp    0x419555
  419538:	nop    DWORD PTR [rax+rax*1+0x0]
  419540:	cdqe   
  419542:	mov    rdx,rax
  419545:	add    rdx,QWORD PTR [r13+0x0]
  419549:	add    rbx,rax
  41954c:	cmp    rsi,rbx
  41954f:	mov    QWORD PTR [r13+0x0],rdx
  419553:	jbe    0x419510
  419555:	mov    DWORD PTR [rsp+0x28],ebp
  419559:	mov    DWORD PTR [rsp+0x20],r12d
  41955e:	mov    r9,rdi
  419561:	mov    r8,r15
  419564:	mov    rcx,r14
  419567:	call   0x419270
  41956c:	test   eax,eax
  41956e:	jg     0x419540
  419570:	jmp    0x419510
  419572:	nop    DWORD PTR [rax+0x0]
  419576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419580:	push   rbp
  419581:	push   rdi
  419582:	push   rsi
  419583:	push   rbx
  419584:	sub    rsp,0x48
  419588:	xor    eax,eax
  41958a:	mov    WORD PTR [rsp+0x3e],ax
  41958f:	mov    rax,QWORD PTR [rip+0xc56a]        # 0x425b00
  419596:	mov    rbx,r8
  419599:	mov    rsi,rcx
  41959c:	mov    rdi,rdx
  41959f:	mov    rax,QWORD PTR [rax]
  4195a2:	mov    ebp,DWORD PTR [rax]
  4195a4:	call   0x419990
  4195a9:	lea    r9,[rip+0x11210]        # 0x42a7c0
  4195b0:	test   rbx,rbx
  4195b3:	lea    rcx,[rsp+0x3e]
  4195b8:	mov    DWORD PTR [rsp+0x28],ebp
  4195bc:	mov    DWORD PTR [rsp+0x20],eax
  4195c0:	mov    r8,rdi
  4195c3:	cmovne r9,rbx
  4195c7:	mov    rdx,rsi
  4195ca:	call   0x419270
  4195cf:	cdqe   
  4195d1:	add    rsp,0x48
  4195d5:	pop    rbx
  4195d6:	pop    rsi
  4195d7:	pop    rdi
  4195d8:	pop    rbp
  4195d9:	ret    
  4195da:	nop
  4195db:	nop
  4195dc:	nop
  4195dd:	nop
  4195de:	nop
  4195df:	nop
  4195e0:	sub    rsp,0x58
  4195e4:	test   r8d,r8d
  4195e7:	mov    eax,r8d
  4195ea:	mov    WORD PTR [rsp+0x68],dx
  4195ef:	jne    0x419604
  4195f1:	cmp    dx,0xff
  4195f6:	ja     0x41964a
  4195f8:	mov    BYTE PTR [rcx],dl
  4195fa:	mov    eax,0x1
  4195ff:	add    rsp,0x58
  419603:	ret    
  419604:	lea    rdx,[rsp+0x4c]
  419609:	mov    DWORD PTR [rsp+0x28],r9d
  41960e:	mov    QWORD PTR [rsp+0x20],rcx
  419613:	mov    DWORD PTR [rsp+0x4c],0x0
  41961b:	mov    QWORD PTR [rsp+0x30],0x0
  419624:	mov    r9d,0x1
  41962a:	mov    QWORD PTR [rsp+0x38],rdx
  41962f:	lea    r8,[rsp+0x68]
  419634:	xor    edx,edx
  419636:	mov    ecx,eax
  419638:	call   QWORD PTR [rip+0x1246e]        # 0x42baac
  41963e:	test   eax,eax
  419640:	je     0x41964a
  419642:	mov    edx,DWORD PTR [rsp+0x4c]
  419646:	test   edx,edx
  419648:	je     0x4195ff
  41964a:	call   0x419948
  41964f:	mov    DWORD PTR [rax],0x2a
  419655:	mov    eax,0xffffffff
  41965a:	add    rsp,0x58
  41965e:	ret    
  41965f:	nop
  419660:	push   rdi
  419661:	push   rsi
  419662:	push   rbx
  419663:	sub    rsp,0x30
  419667:	lea    rax,[rsp+0x20]
  41966c:	test   rcx,rcx
  41966f:	mov    rbx,rcx
  419672:	mov    esi,edx
  419674:	cmove  rbx,rax
  419678:	mov    rax,QWORD PTR [rip+0xc481]        # 0x425b00
  41967f:	mov    rax,QWORD PTR [rax]
  419682:	mov    edi,DWORD PTR [rax]
  419684:	call   0x419990
  419689:	movzx  edx,si
  41968c:	mov    r8d,eax
  41968f:	mov    rcx,rbx
  419692:	mov    r9d,edi
  419695:	call   0x4195e0
  41969a:	cdqe   
  41969c:	add    rsp,0x30
  4196a0:	pop    rbx
  4196a1:	pop    rsi
  4196a2:	pop    rdi
  4196a3:	ret    
  4196a4:	xchg   ax,ax
  4196a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196b0:	push   r14
  4196b2:	push   r13
  4196b4:	push   r12
  4196b6:	push   rbp
  4196b7:	push   rdi
  4196b8:	push   rsi
  4196b9:	push   rbx
  4196ba:	sub    rsp,0x30
  4196be:	mov    r13,rdx
  4196c1:	mov    rbx,rcx
  4196c4:	mov    rdi,r8
  4196c7:	call   0x419990
  4196cc:	mov    ebp,eax
  4196ce:	mov    rax,QWORD PTR [rip+0xc42b]        # 0x425b00
  4196d5:	mov    r14,QWORD PTR [r13+0x0]
  4196d9:	mov    rax,QWORD PTR [rax]
  4196dc:	test   r14,r14
  4196df:	mov    r12d,DWORD PTR [rax]
  4196e2:	je     0x4197d0
  4196e8:	xor    esi,esi
  4196ea:	test   rbx,rbx
  4196ed:	je     0x419780
  4196f3:	test   rdi,rdi
  4196f6:	jne    0x419718
  4196f8:	jmp    0x419744
  4196fa:	nop    WORD PTR [rax+rax*1+0x0]
  419700:	movsxd r10,eax
  419703:	add    rbx,r10
  419706:	add    rsi,r10
  419709:	cmp    BYTE PTR [rbx-0x1],0x0
  41970d:	je     0x419760
  41970f:	add    r14,0x2
  419713:	cmp    rdi,rsi
  419716:	jbe    0x419744
  419718:	movzx  edx,WORD PTR [r14]
  41971c:	mov    r9d,r12d
  41971f:	mov    r8d,ebp
  419722:	mov    rcx,rbx
  419725:	call   0x4195e0
  41972a:	test   eax,eax
  41972c:	jg     0x419700
  41972e:	mov    rax,0xffffffffffffffff
  419735:	add    rsp,0x30
  419739:	pop    rbx
  41973a:	pop    rsi
  41973b:	pop    rdi
  41973c:	pop    rbp
  41973d:	pop    r12
  41973f:	pop    r13
  419741:	pop    r14
  419743:	ret    
  419744:	mov    rax,rsi
  419747:	mov    QWORD PTR [r13+0x0],r14
  41974b:	add    rsp,0x30
  41974f:	pop    rbx
  419750:	pop    rsi
  419751:	pop    rdi
  419752:	pop    rbp
  419753:	pop    r12
  419755:	pop    r13
  419757:	pop    r14
  419759:	ret    
  41975a:	nop    WORD PTR [rax+rax*1+0x0]
  419760:	lea    rax,[rsi-0x1]
  419764:	mov    QWORD PTR [r13+0x0],0x0
  41976c:	add    rsp,0x30
  419770:	pop    rbx
  419771:	pop    rsi
  419772:	pop    rdi
  419773:	pop    rbp
  419774:	pop    r12
  419776:	pop    r13
  419778:	pop    r14
  41977a:	ret    
  41977b:	nop    DWORD PTR [rax+rax*1+0x0]
  419780:	test   rdi,rdi
  419783:	lea    rbx,[rsp+0x20]
  419788:	jne    0x4197ab
  41978a:	jmp    0x4197e1
  41978c:	nop    DWORD PTR [rax+0x0]
  419790:	movsxd rdx,eax
  419793:	sub    eax,0x1
  419796:	cdqe   
  419798:	add    rsi,rdx
  41979b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  4197a0:	je     0x4197e9
  4197a2:	add    r14,0x2
  4197a6:	cmp    rdi,rsi
  4197a9:	jbe    0x4197e1
  4197ab:	movzx  edx,WORD PTR [r14]
  4197af:	mov    r9d,r12d
  4197b2:	mov    r8d,ebp
  4197b5:	mov    rcx,rbx
  4197b8:	call   0x4195e0
  4197bd:	test   eax,eax
  4197bf:	jg     0x419790
  4197c1:	jmp    0x41972e
  4197c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197d0:	xor    eax,eax
  4197d2:	add    rsp,0x30
  4197d6:	pop    rbx
  4197d7:	pop    rsi
  4197d8:	pop    rdi
  4197d9:	pop    rbp
  4197da:	pop    r12
  4197dc:	pop    r13
  4197de:	pop    r14
  4197e0:	ret    
  4197e1:	mov    rax,rsi
  4197e4:	jmp    0x419735
  4197e9:	lea    rax,[rsi-0x1]
  4197ed:	jmp    0x419735
  4197f2:	nop
  4197f3:	nop
  4197f4:	nop
  4197f5:	nop
  4197f6:	nop
  4197f7:	nop
  4197f8:	nop
  4197f9:	nop
  4197fa:	nop
  4197fb:	nop
  4197fc:	nop
  4197fd:	nop
  4197fe:	nop
  4197ff:	nop
  419800:	jmp    QWORD PTR [rip+0x1246e]        # 0x42bc74
  419806:	nop
  419807:	nop
  419808:	jmp    QWORD PTR [rip+0x1245e]        # 0x42bc6c
  41980e:	nop
  41980f:	nop
  419810:	jmp    QWORD PTR [rip+0x1244e]        # 0x42bc64
  419816:	nop
  419817:	nop
  419818:	jmp    QWORD PTR [rip+0x1243e]        # 0x42bc5c
  41981e:	nop
  41981f:	nop
  419820:	jmp    QWORD PTR [rip+0x1242e]        # 0x42bc54
  419826:	nop
  419827:	nop
  419828:	jmp    QWORD PTR [rip+0x1241e]        # 0x42bc4c
  41982e:	nop
  41982f:	nop
  419830:	jmp    QWORD PTR [rip+0x1240e]        # 0x42bc44
  419836:	nop
  419837:	nop
  419838:	jmp    QWORD PTR [rip+0x123fe]        # 0x42bc3c
  41983e:	nop
  41983f:	nop
  419840:	jmp    QWORD PTR [rip+0x123ee]        # 0x42bc34
  419846:	nop
  419847:	nop
  419848:	jmp    QWORD PTR [rip+0x123de]        # 0x42bc2c
  41984e:	nop
  41984f:	nop
  419850:	jmp    QWORD PTR [rip+0x123ce]        # 0x42bc24
  419856:	nop
  419857:	nop
  419858:	jmp    QWORD PTR [rip+0x123be]        # 0x42bc1c
  41985e:	nop
  41985f:	nop
  419860:	jmp    QWORD PTR [rip+0x123ae]        # 0x42bc14
  419866:	nop
  419867:	nop
  419868:	jmp    QWORD PTR [rip+0x1239e]        # 0x42bc0c
  41986e:	nop
  41986f:	nop
  419870:	jmp    QWORD PTR [rip+0x1238e]        # 0x42bc04
  419876:	nop
  419877:	nop
  419878:	jmp    QWORD PTR [rip+0x1237e]        # 0x42bbfc
  41987e:	nop
  41987f:	nop
  419880:	jmp    QWORD PTR [rip+0x1236e]        # 0x42bbf4
  419886:	nop
  419887:	nop
  419888:	jmp    QWORD PTR [rip+0x1235e]        # 0x42bbec
  41988e:	nop
  41988f:	nop
  419890:	jmp    QWORD PTR [rip+0x1234e]        # 0x42bbe4
  419896:	nop
  419897:	nop
  419898:	jmp    QWORD PTR [rip+0x1233e]        # 0x42bbdc
  41989e:	nop
  41989f:	nop
  4198a0:	jmp    QWORD PTR [rip+0x1232e]        # 0x42bbd4
  4198a6:	nop
  4198a7:	nop
  4198a8:	jmp    QWORD PTR [rip+0x1231e]        # 0x42bbcc
  4198ae:	nop
  4198af:	nop
  4198b0:	jmp    QWORD PTR [rip+0x1230e]        # 0x42bbc4
  4198b6:	nop
  4198b7:	nop
  4198b8:	jmp    QWORD PTR [rip+0x122fe]        # 0x42bbbc
  4198be:	nop
  4198bf:	nop
  4198c0:	jmp    QWORD PTR [rip+0x122ee]        # 0x42bbb4
  4198c6:	nop
  4198c7:	nop
  4198c8:	jmp    QWORD PTR [rip+0x122de]        # 0x42bbac
  4198ce:	nop
  4198cf:	nop
  4198d0:	jmp    QWORD PTR [rip+0x122ce]        # 0x42bba4
  4198d6:	nop
  4198d7:	nop
  4198d8:	jmp    QWORD PTR [rip+0x122be]        # 0x42bb9c
  4198de:	nop
  4198df:	nop
  4198e0:	jmp    QWORD PTR [rip+0x122ae]        # 0x42bb94
  4198e6:	nop
  4198e7:	nop
  4198e8:	jmp    QWORD PTR [rip+0x1229e]        # 0x42bb8c
  4198ee:	nop
  4198ef:	nop
  4198f0:	jmp    QWORD PTR [rip+0x1228e]        # 0x42bb84
  4198f6:	nop
  4198f7:	nop
  4198f8:	jmp    QWORD PTR [rip+0x1227e]        # 0x42bb7c
  4198fe:	nop
  4198ff:	nop
  419900:	jmp    QWORD PTR [rip+0x1226e]        # 0x42bb74
  419906:	nop
  419907:	nop
  419908:	jmp    QWORD PTR [rip+0x1225e]        # 0x42bb6c
  41990e:	nop
  41990f:	nop
  419910:	jmp    QWORD PTR [rip+0x1224e]        # 0x42bb64
  419916:	nop
  419917:	nop
  419918:	jmp    QWORD PTR [rip+0x1223e]        # 0x42bb5c
  41991e:	nop
  41991f:	nop
  419920:	jmp    QWORD PTR [rip+0x1222e]        # 0x42bb54
  419926:	nop
  419927:	nop
  419928:	jmp    QWORD PTR [rip+0x1221e]        # 0x42bb4c
  41992e:	nop
  41992f:	nop
  419930:	jmp    QWORD PTR [rip+0x1220e]        # 0x42bb44
  419936:	nop
  419937:	nop
  419938:	jmp    QWORD PTR [rip+0x121fe]        # 0x42bb3c
  41993e:	nop
  41993f:	nop
  419940:	jmp    QWORD PTR [rip+0x121ee]        # 0x42bb34
  419946:	nop
  419947:	nop
  419948:	jmp    QWORD PTR [rip+0x121d6]        # 0x42bb24
  41994e:	nop
  41994f:	nop
  419950:	jmp    QWORD PTR [rip+0x121c6]        # 0x42bb1c
  419956:	nop
  419957:	nop
  419958:	jmp    QWORD PTR [rip+0x121b6]        # 0x42bb14
  41995e:	nop
  41995f:	nop
  419960:	jmp    QWORD PTR [rip+0x1219e]        # 0x42bb04
  419966:	nop
  419967:	nop
  419968:	jmp    QWORD PTR [rip+0x1218e]        # 0x42bafc
  41996e:	nop
  41996f:	nop
  419970:	jmp    QWORD PTR [rip+0x12176]        # 0x42baec
  419976:	nop
  419977:	nop
  419978:	jmp    QWORD PTR [rip+0x12166]        # 0x42bae4
  41997e:	nop
  41997f:	nop
  419980:	jmp    QWORD PTR [rip+0x1214e]        # 0x42bad4
  419986:	nop
  419987:	nop
  419988:	jmp    QWORD PTR [rip+0x1213e]        # 0x42bacc
  41998e:	nop
  41998f:	nop
  419990:	jmp    QWORD PTR [rip+0x1212e]        # 0x42bac4
  419996:	nop
  419997:	nop
  419998:	jmp    QWORD PTR [rip+0x1211e]        # 0x42babc
  41999e:	nop
  41999f:	nop
  4199a0:	mov    rax,QWORD PTR [rip+0x10e29]        # 0x42a7d0
  4199a7:	ret    
  4199a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4199b0:	mov    rax,rcx
  4199b3:	xchg   QWORD PTR [rip+0x10e16],rax        # 0x42a7d0
  4199ba:	ret    
  4199bb:	nop
  4199bc:	nop
  4199bd:	nop
  4199be:	nop
  4199bf:	nop
  4199c0:	mov    eax,DWORD PTR [rip+0x10e1a]        # 0x42a7e0
  4199c6:	ret    
  4199c7:	nop    WORD PTR [rax+rax*1+0x0]
  4199d0:	mov    eax,ecx
  4199d2:	xchg   DWORD PTR [rip+0x10e08],eax        # 0x42a7e0
  4199d8:	ret    
  4199d9:	nop    DWORD PTR [rax+0x0]
  4199e0:	push   rbx
  4199e1:	sub    rsp,0x20
  4199e5:	mov    ebx,ecx
  4199e7:	lea    rcx,[rip+0xc052]        # 0x425a40
  4199ee:	call   QWORD PTR [rip+0x12000]        # 0x42b9f4
  4199f4:	lea    rdx,[rip+0xc05b]        # 0x425a56
  4199fb:	mov    rcx,rax
  4199fe:	call   QWORD PTR [rip+0x11ff8]        # 0x42b9fc
  419a04:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x4199d0
  419a0b:	test   rax,rax
  419a0e:	mov    ecx,ebx
  419a10:	cmove  rax,rdx
  419a14:	mov    QWORD PTR [rip+0x46bd],rax        # 0x41e0d8
  419a1b:	add    rsp,0x20
  419a1f:	pop    rbx
  419a20:	rex.W jmp rax
  419a23:	nop    DWORD PTR [rax]
  419a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a30:	sub    rsp,0x28
  419a34:	lea    rcx,[rip+0xc005]        # 0x425a40
  419a3b:	call   QWORD PTR [rip+0x11fb3]        # 0x42b9f4
  419a41:	lea    rdx,[rip+0xc021]        # 0x425a69
  419a48:	mov    rcx,rax
  419a4b:	call   QWORD PTR [rip+0x11fab]        # 0x42b9fc
  419a51:	lea    rdx,[rip+0xffffffffffffff68]        # 0x4199c0
  419a58:	test   rax,rax
  419a5b:	cmove  rax,rdx
  419a5f:	mov    QWORD PTR [rip+0x466a],rax        # 0x41e0d0
  419a66:	add    rsp,0x28
  419a6a:	rex.W jmp rax
  419a6d:	nop    DWORD PTR [rax]
  419a70:	mov    rax,QWORD PTR [rip+0x4661]        # 0x41e0d8
  419a77:	rex.W jmp rax
  419a7a:	nop    WORD PTR [rax+rax*1+0x0]
  419a80:	mov    rax,QWORD PTR [rip+0x4649]        # 0x41e0d0
  419a87:	rex.W jmp rax
  419a8a:	nop
  419a8b:	nop
  419a8c:	nop
  419a8d:	nop
  419a8e:	nop
  419a8f:	nop
  419a90:	jmp    QWORD PTR [rip+0x12016]        # 0x42baac
  419a96:	nop
  419a97:	nop
  419a98:	jmp    QWORD PTR [rip+0x12006]        # 0x42baa4
  419a9e:	nop
  419a9f:	nop
  419aa0:	jmp    QWORD PTR [rip+0x11ff6]        # 0x42ba9c
  419aa6:	nop
  419aa7:	nop
  419aa8:	jmp    QWORD PTR [rip+0x11fe6]        # 0x42ba94
  419aae:	nop
  419aaf:	nop
  419ab0:	jmp    QWORD PTR [rip+0x11fd6]        # 0x42ba8c
  419ab6:	nop
  419ab7:	nop
  419ab8:	jmp    QWORD PTR [rip+0x11fc6]        # 0x42ba84
  419abe:	nop
  419abf:	nop
  419ac0:	jmp    QWORD PTR [rip+0x11fb6]        # 0x42ba7c
  419ac6:	nop
  419ac7:	nop
  419ac8:	jmp    QWORD PTR [rip+0x11fa6]        # 0x42ba74
  419ace:	nop
  419acf:	nop
  419ad0:	jmp    QWORD PTR [rip+0x11f96]        # 0x42ba6c
  419ad6:	nop
  419ad7:	nop
  419ad8:	jmp    QWORD PTR [rip+0x11f86]        # 0x42ba64
  419ade:	nop
  419adf:	nop
  419ae0:	jmp    QWORD PTR [rip+0x11f76]        # 0x42ba5c
  419ae6:	nop
  419ae7:	nop
  419ae8:	jmp    QWORD PTR [rip+0x11f66]        # 0x42ba54
  419aee:	nop
  419aef:	nop
  419af0:	jmp    QWORD PTR [rip+0x11f56]        # 0x42ba4c
  419af6:	nop
  419af7:	nop
  419af8:	jmp    QWORD PTR [rip+0x11f46]        # 0x42ba44
  419afe:	nop
  419aff:	nop
  419b00:	jmp    QWORD PTR [rip+0x11f36]        # 0x42ba3c
  419b06:	nop
  419b07:	nop
  419b08:	jmp    QWORD PTR [rip+0x11f26]        # 0x42ba34
  419b0e:	nop
  419b0f:	nop
  419b10:	jmp    QWORD PTR [rip+0x11f16]        # 0x42ba2c
  419b16:	nop
  419b17:	nop
  419b18:	jmp    QWORD PTR [rip+0x11f06]        # 0x42ba24
  419b1e:	nop
  419b1f:	nop
  419b20:	jmp    QWORD PTR [rip+0x11ef6]        # 0x42ba1c
  419b26:	nop
  419b27:	nop
  419b28:	jmp    QWORD PTR [rip+0x11ee6]        # 0x42ba14
  419b2e:	nop
  419b2f:	nop
  419b30:	jmp    QWORD PTR [rip+0x11ed6]        # 0x42ba0c
  419b36:	nop
  419b37:	nop
  419b38:	jmp    QWORD PTR [rip+0x11ec6]        # 0x42ba04
  419b3e:	nop
  419b3f:	nop
  419b40:	jmp    QWORD PTR [rip+0x11eb6]        # 0x42b9fc
  419b46:	nop
  419b47:	nop
  419b48:	jmp    QWORD PTR [rip+0x11ea6]        # 0x42b9f4
  419b4e:	nop
  419b4f:	nop
  419b50:	jmp    QWORD PTR [rip+0x11e96]        # 0x42b9ec
  419b56:	nop
  419b57:	nop
  419b58:	jmp    QWORD PTR [rip+0x11e86]        # 0x42b9e4
  419b5e:	nop
  419b5f:	nop
  419b60:	jmp    QWORD PTR [rip+0x11e76]        # 0x42b9dc
  419b66:	nop
  419b67:	nop
  419b68:	jmp    QWORD PTR [rip+0x11e66]        # 0x42b9d4
  419b6e:	nop
  419b6f:	nop
  419b70:	jmp    QWORD PTR [rip+0x11e56]        # 0x42b9cc
  419b76:	nop
  419b77:	nop
  419b78:	jmp    QWORD PTR [rip+0x11e46]        # 0x42b9c4
  419b7e:	nop
  419b7f:	nop
  419b80:	jmp    QWORD PTR [rip+0x11e36]        # 0x42b9bc
  419b86:	nop
  419b87:	nop
  419b88:	jmp    QWORD PTR [rip+0x11e26]        # 0x42b9b4
  419b8e:	nop
  419b8f:	nop
  419b90:	jmp    QWORD PTR [rip+0x11e16]        # 0x42b9ac
  419b96:	nop
  419b97:	nop
  419b98:	nop    DWORD PTR [rax+rax*1+0x0]
  419ba0:	sub    rsp,0x38
  419ba4:	lea    rax,[rip+0x554b]        # 0x41f0f6
  419bab:	lea    r9,[rip+0x5517]        # 0x41f0c9
  419bb2:	lea    r8,[rip+0x551f]        # 0x41f0d8
  419bb9:	xor    edx,edx
  419bbb:	xor    ecx,ecx
  419bbd:	mov    DWORD PTR [rsp+0x28],0x58d
  419bc5:	mov    QWORD PTR [rsp+0x20],rax
  419bca:	call   0x412308
  419bcf:	call   0x419910
  419bd4:	nop
  419bd5:	sub    rsp,0x38
  419bd9:	lea    rax,[rip+0x5a77]        # 0x41f657
  419be0:	lea    r9,[rip+0x5a67]        # 0x41f64e
  419be7:	test   r8d,r8d
  419bea:	lea    r8,[rip+0x5a6f]        # 0x41f660
  419bf1:	mov    QWORD PTR [rsp+0x28],rdx
  419bf6:	mov    QWORD PTR [rsp+0x20],rcx
  419bfb:	cmove  r9,rax
  419bff:	mov    edx,0x8
  419c04:	xor    ecx,ecx
  419c06:	call   0x412308
  419c0b:	mov    ecx,0x1
  419c10:	call   0x401cb0
  419c15:	nop
  419c16:	sub    rsp,0x28
  419c1a:	lea    r8,[rip+0x5a64]        # 0x41f685
  419c21:	xor    ecx,ecx
  419c23:	mov    edx,0x10
  419c28:	call   0x412308
  419c2d:	mov    ecx,0x1
  419c32:	call   0x401cb0
  419c37:	nop
  419c38:	nop
  419c39:	nop
  419c3a:	nop
  419c3b:	nop
  419c3c:	nop
  419c3d:	nop
  419c3e:	nop
  419c3f:	nop
  419c40:	mov    rax,QWORD PTR [rcx+0x18]
  419c44:	lea    r8,[rip+0x725a]        # 0x420ea5
  419c4b:	lea    rdx,[rip+0x7250]        # 0x420ea2
  419c52:	mov    ecx,DWORD PTR [rax+0xc]
  419c55:	test   ecx,ecx
  419c57:	lea    rcx,[rip+0x724c]        # 0x420eaa
  419c5e:	cmove  rdx,r8
  419c62:	mov    QWORD PTR [rax+0x10],rdx
  419c66:	lea    rdx,[rip+0x723b]        # 0x420ea8
  419c6d:	cmove  rdx,rcx
  419c71:	mov    QWORD PTR [rax+0x18],rdx
  419c75:	xor    eax,eax
  419c77:	ret    
  419c78:	push   rdi
  419c79:	sub    rsp,0x20
  419c7d:	mov    rdx,QWORD PTR [rcx+0x18]
  419c81:	xor    eax,eax
  419c83:	mov    r8,rcx
  419c86:	or     rcx,0xffffffffffffffff
  419c8a:	mov    r9,QWORD PTR [rdx+0x8]
  419c8e:	mov    rdi,r9
  419c91:	repnz scas al,BYTE PTR es:[rdi]
  419c93:	cmp    rcx,0xfffffffffffffffd
  419c97:	je     0x419cb4
  419c99:	mov    rcx,r8
  419c9c:	lea    r8,[rip+0x758d]        # 0x421230
  419ca3:	mov    edx,0x10
  419ca8:	call   0x412308
  419cad:	mov    eax,0xffffffea
  419cb2:	jmp    0x419cbc
  419cb4:	mov    al,BYTE PTR [r9]
  419cb7:	mov    BYTE PTR [rdx+0x10],al
  419cba:	xor    eax,eax
  419cbc:	add    rsp,0x20
  419cc0:	pop    rdi
  419cc1:	ret    
  419cc2:	push   rbp
  419cc3:	push   rdi
  419cc4:	push   rsi
  419cc5:	push   rbx
  419cc6:	sub    rsp,0x28
  419cca:	mov    rbx,QWORD PTR [rcx+0x18]
  419cce:	xor    eax,eax
  419cd0:	mov    rbp,rcx
  419cd3:	or     rcx,0xffffffffffffffff
  419cd7:	mov    r9,QWORD PTR [rbx+0x8]
  419cdb:	mov    rdi,r9
  419cde:	repnz scas al,BYTE PTR es:[rdi]
  419ce0:	cmp    rcx,0xfffffffffffffffd
  419ce4:	je     0x419d04
  419ce6:	lea    r8,[rip+0x7543]        # 0x421230
  419ced:	mov    edx,0x10
  419cf2:	mov    rcx,rbp
  419cf5:	call   0x412308
  419cfa:	mov    eax,0xffffffea
  419cff:	jmp    0x419d8a
  419d04:	mov    al,BYTE PTR [r9]
  419d07:	mov    rsi,QWORD PTR [rbx+0x20]
  419d0b:	lea    rdx,[rip+0x7562]        # 0x421274
  419d12:	mov    BYTE PTR [rbx+0x10],al
  419d15:	mov    rcx,rsi
  419d18:	call   0x419858
  419d1d:	test   eax,eax
  419d1f:	jne    0x419d2e
  419d21:	lea    rdx,[rip+0xfffffffffffee228]        # 0x407f50
  419d28:	mov    QWORD PTR [rbx+0x28],rdx
  419d2c:	jmp    0x419d8a
  419d2e:	lea    rdx,[rip+0x7544]        # 0x421279
  419d35:	mov    rcx,rsi
  419d38:	call   0x419858
  419d3d:	test   eax,eax
  419d3f:	jne    0x419d4e
  419d41:	lea    rdx,[rip+0xfffffffffffef298]        # 0x408fe0
  419d48:	mov    QWORD PTR [rbx+0x28],rdx
  419d4c:	jmp    0x419d8a
  419d4e:	lea    rdx,[rip+0x713b]        # 0x420e90
  419d55:	mov    rcx,rsi
  419d58:	call   0x419858
  419d5d:	test   eax,eax
  419d5f:	jne    0x419d6e
  419d61:	lea    rdi,[rip+0xfffffffffffef438]        # 0x4091a0
  419d68:	mov    QWORD PTR [rbx+0x28],rdi
  419d6c:	jmp    0x419d8a
  419d6e:	lea    r8,[rip+0x7506]        # 0x42127b
  419d75:	mov    r9,rsi
  419d78:	mov    edx,0x10
  419d7d:	mov    rcx,rbp
  419d80:	call   0x412308
  419d85:	mov    eax,0xffffffea
  419d8a:	add    rsp,0x28
  419d8e:	pop    rbx
  419d8f:	pop    rsi
  419d90:	pop    rdi
  419d91:	pop    rbp
  419d92:	ret    
  419d93:	sub    rsp,0x38
  419d97:	mov    rax,QWORD PTR [rcx+0x18]
  419d9b:	cmp    DWORD PTR [rax+0x14],0x0
  419d9f:	jne    0x419da5
  419da1:	xor    eax,eax
  419da3:	jmp    0x419e24
  419da5:	cmp    DWORD PTR [rip+0x4274],0x0        # 0x41e020
  419dac:	mov    DWORD PTR [rax+0x10],0x1
  419db3:	lea    rax,[rip+0x74db]        # 0x421295
  419dba:	jne    0x419dcc
  419dbc:	cmp    DWORD PTR [rip+0xf579],0x0        # 0x42933c
  419dc3:	je     0x419dec
  419dc5:	lea    rax,[rip+0x755f]        # 0x42132b
  419dcc:	lea    r8,[rip+0x74cd]        # 0x4212a0
  419dd3:	mov    QWORD PTR [rsp+0x20],rax
  419dd8:	mov    r9,rax
  419ddb:	mov    edx,0x10
  419de0:	call   0x412308
  419de5:	mov    eax,0xffffffea
  419dea:	jmp    0x419e24
  419dec:	cmp    DWORD PTR [rip+0xf545],0x0        # 0x429338
  419df3:	lea    rax,[rip+0x7536]        # 0x421330
  419dfa:	jne    0x419dcc
  419dfc:	cmp    DWORD PTR [rip+0xf579],0x0        # 0x42937c
  419e03:	je     0x419da1
  419e05:	cmp    DWORD PTR [rip+0xf56c],0x0        # 0x429378
  419e0c:	je     0x419da1
  419e0e:	lea    r8,[rip+0x7523]        # 0x421338
  419e15:	mov    edx,0x10
  419e1a:	call   0x412308
  419e1f:	mov    eax,0xffffffea
  419e24:	add    rsp,0x38
  419e28:	ret    
  419e29:	sub    rsp,0x38
  419e2d:	lea    rax,[rip+0x75b3]        # 0x4213e7
  419e34:	lea    r9,[rip+0x757d]        # 0x4213b8
  419e3b:	lea    r8,[rip+0x7587]        # 0x4213c9
  419e42:	xor    edx,edx
  419e44:	xor    ecx,ecx
  419e46:	mov    DWORD PTR [rsp+0x28],0x200
  419e4e:	mov    QWORD PTR [rsp+0x20],rax
  419e53:	call   0x412308
  419e58:	call   0x419910
  419e5d:	nop
  419e5e:	nop
  419e5f:	nop
  419e60:	push   r15
  419e62:	push   r14
  419e64:	push   r13
  419e66:	push   r12
  419e68:	push   rbp
  419e69:	push   rdi
  419e6a:	push   rsi
  419e6b:	push   rbx
  419e6c:	sub    rsp,0x168
  419e73:	mov    rsi,rdx
  419e76:	mov    ebx,ecx
  419e78:	call   0x412630
  419e7d:	call   0x401c80
  419e82:	mov    ecx,0x1
  419e87:	call   0x4122d8
  419e8c:	lea    rcx,[rip+0xfffffffffffee6ed]        # 0x408580
  419e93:	call   0x401ca0
  419e98:	lea    rax,[rip+0x92e1]        # 0x423180
  419e9f:	mov    rdx,rsi
  419ea2:	mov    ecx,ebx
  419ea4:	mov    r8,rax
  419ea7:	mov    QWORD PTR [rip+0xf452],rax        # 0x429300
  419eae:	call   0x405180
  419eb3:	call   0x412030
  419eb8:	call   0x411ff0
  419ebd:	call   0x401c10
  419ec2:	call   0x411f48
  419ec7:	mov    r8,QWORD PTR [rip+0xf432]        # 0x429300
  419ece:	mov    rdx,rsi
  419ed1:	mov    ecx,ebx
  419ed3:	call   0x405510
  419ed8:	lea    rax,[rip+0xfffffffffffef231]        # 0x409110
  419edf:	mov    r9,QWORD PTR [rip+0xf41a]        # 0x429300
  419ee6:	xor    ecx,ecx
  419ee8:	mov    r8,rsi
  419eeb:	mov    edx,ebx
  419eed:	mov    QWORD PTR [rsp+0x20],rax
  419ef2:	call   0x403550
  419ef7:	mov    ecx,0x2
  419efc:	call   0x40acf0
  419f01:	test   eax,eax
  419f03:	je     0x419f0f
  419f05:	mov    DWORD PTR [rip+0xf479],0x1        # 0x429388
  419f0f:	mov    ecx,0x3
  419f14:	call   0x40acf0
  419f19:	test   eax,eax
  419f1b:	je     0x419f27
  419f1d:	mov    DWORD PTR [rip+0xf45d],0x1        # 0x429384
  419f27:	mov    ecx,0x4
  419f2c:	call   0x40acf0
  419f31:	test   eax,eax
  419f33:	je     0x419f3f
  419f35:	mov    DWORD PTR [rip+0xf441],0x1        # 0x429380
  419f3f:	mov    ecx,0x7
  419f44:	call   0x40acf0
  419f49:	test   eax,eax
  419f4b:	je     0x419f57
  419f4d:	mov    DWORD PTR [rip+0xf425],0x1        # 0x42937c
  419f57:	mov    ecx,0xc
  419f5c:	call   0x40acf0
  419f61:	test   eax,eax
  419f63:	je     0x419f6f
  419f65:	mov    DWORD PTR [rip+0xf3f1],0x1        # 0x429360
  419f6f:	mov    ecx,0xe
  419f74:	call   0x40acf0
  419f79:	test   eax,eax
  419f7b:	je     0x419f87
  419f7d:	mov    DWORD PTR [rip+0xf3f1],0x1        # 0x429378
  419f87:	mov    ecx,0x16
  419f8c:	call   0x40acf0
  419f91:	test   eax,eax
  419f93:	je     0x419f9f
  419f95:	mov    DWORD PTR [rip+0xf3bd],0x1        # 0x42935c
  419f9f:	mov    ecx,0x13
  419fa4:	call   0x40acf0
  419fa9:	test   eax,eax
  419fab:	je     0x419fb7
  419fad:	mov    DWORD PTR [rip+0xf3a1],0x1        # 0x429358
  419fb7:	mov    ecx,0x15
  419fbc:	call   0x40acf0
  419fc1:	test   eax,eax
  419fc3:	je     0x419fcf
  419fc5:	mov    DWORD PTR [rip+0xf385],0x1        # 0x429354
  419fcf:	mov    ecx,0x1d
  419fd4:	call   0x40acf0
  419fd9:	test   eax,eax
  419fdb:	je     0x419fe7
  419fdd:	mov    DWORD PTR [rip+0xf37d],0x1        # 0x429364
  419fe7:	mov    ecx,0x1e
  419fec:	call   0x40acf0
  419ff1:	test   eax,eax
  419ff3:	je     0x419fff
  419ff5:	mov    DWORD PTR [rip+0xf375],0x1        # 0x429374
  419fff:	mov    ecx,0x22
  41a004:	call   0x40acf0
  41a009:	test   eax,eax
  41a00b:	je     0x41a017
  41a00d:	mov    DWORD PTR [rip+0xf359],0x1        # 0x429370
  41a017:	mov    ecx,0x21
  41a01c:	call   0x40acf0
  41a021:	test   eax,eax
  41a023:	je     0x41a02f
  41a025:	mov    DWORD PTR [rip+0xf33d],0x1        # 0x42936c
  41a02f:	mov    ecx,0x17
  41a034:	call   0x40acf0
  41a039:	test   eax,eax
  41a03b:	je     0x41a047
  41a03d:	mov    DWORD PTR [rip+0xf325],0x1        # 0x42936c
  41a047:	mov    ecx,0x1
  41a04c:	call   0x40acf0
  41a051:	test   eax,eax
  41a053:	je     0x41a05f
  41a055:	mov    DWORD PTR [rip+0xf2f1],0x1        # 0x429350
  41a05f:	mov    ecx,0x5
  41a064:	call   0x40acf0
  41a069:	test   eax,eax
  41a06b:	je     0x41a077
  41a06d:	mov    DWORD PTR [rip+0xf2d5],0x1        # 0x42934c
  41a077:	mov    ecx,0x8
  41a07c:	call   0x40acf0
  41a081:	test   eax,eax
  41a083:	je     0x41a08f
  41a085:	mov    DWORD PTR [rip+0xf2b9],0x1        # 0x429348
  41a08f:	mov    ecx,0x1c
  41a094:	call   0x40acf0
  41a099:	test   eax,eax
  41a09b:	je     0x41a0a7
  41a09d:	mov    DWORD PTR [rip+0xf29d],0x1        # 0x429344
  41a0a7:	mov    ecx,0x23
  41a0ac:	call   0x40acf0
  41a0b1:	test   eax,eax
  41a0b3:	je     0x41a0bf
  41a0b5:	mov    DWORD PTR [rip+0xf281],0x1        # 0x429340
  41a0bf:	mov    ecx,DWORD PTR [rip+0xf2d7]        # 0x42939c
  41a0c5:	test   ecx,ecx
  41a0c7:	je     0x41a15f
  41a0cd:	mov    edx,DWORD PTR [rip+0xf291]        # 0x429364
  41a0d3:	test   edx,edx
  41a0d5:	jne    0x41a0e0
  41a0d7:	cmp    DWORD PTR [rip+0xf282],0x0        # 0x429360
  41a0de:	je     0x41a15f
  41a0e0:	lea    r8,[rip+0x8379]        # 0x422460
  41a0e7:	mov    edx,0x10
  41a0ec:	xor    ecx,ecx
  41a0ee:	mov    esi,0xffffffea
  41a0f3:	call   0x412308
  41a0f8:	lea    rcx,[rip+0xf229]        # 0x429328
  41a0ff:	lea    rbx,[rip+0x30ca]        # 0x41d1d0
  41a106:	lea    rdi,[rip+0x3f63]        # 0x41e070
  41a10d:	call   0x4123b8
  41a112:	lea    rcx,[rip+0xf1f7]        # 0x429310
  41a119:	call   0x4123b8
  41a11e:	lea    rcx,[rip+0xf1c3]        # 0x4292e8
  41a125:	call   0x412330
  41a12a:	call   0x401c30
  41a12f:	nop
  41a130:	mov    rcx,rbx
  41a133:	add    rbx,0x60
  41a137:	call   0x412440
  41a13c:	cmp    rbx,rdi
  41a13f:	jne    0x41a130
  41a141:	call   0x411ff8
  41a146:	mov    eax,esi
  41a148:	shr    eax,0x1f
  41a14b:	add    rsp,0x168
  41a152:	pop    rbx
  41a153:	pop    rsi
  41a154:	pop    rdi
  41a155:	pop    rbp
  41a156:	pop    r12
  41a158:	pop    r13
  41a15a:	pop    r14
  41a15c:	pop    r15
  41a15e:	ret    
  41a15f:	cmp    DWORD PTR [rip+0xef1e],0x0        # 0x429084
  41a166:	jne    0x41a262
  41a16c:	mov    edx,DWORD PTR [rip+0xef0e]        # 0x429080
  41a172:	mov    DWORD PTR [rip+0xef08],0x1        # 0x429084
  41a17c:	cmp    edx,0x40
  41a17f:	je     0x41a262
  41a185:	lea    r8d,[rdx+0x1]
  41a189:	lea    rax,[rip+0xef30]        # 0x4290c0
  41a190:	lea    rsi,[rip+0xa8e9]        # 0x424a80
  41a197:	movsxd rcx,edx
  41a19a:	cmp    r8d,0x40
  41a19e:	mov    DWORD PTR [rip+0xeedb],r8d        # 0x429080
  41a1a5:	mov    QWORD PTR [rax+rcx*8],rsi
  41a1a9:	je     0x41a1de
  41a1ab:	lea    ecx,[rdx+0x2]
  41a1ae:	lea    rsi,[rip+0xa58b]        # 0x424740
  41a1b5:	movsxd r8,r8d
  41a1b8:	cmp    ecx,0x40
  41a1bb:	mov    DWORD PTR [rip+0xeebf],ecx        # 0x429080
  41a1c1:	mov    QWORD PTR [rax+r8*8],rsi
  41a1c5:	je     0x41a242
  41a1c7:	lea    rsi,[rip+0xa1b2]        # 0x424380
  41a1ce:	add    edx,0x3
  41a1d1:	movsxd rcx,ecx
  41a1d4:	mov    DWORD PTR [rip+0xeea6],edx        # 0x429080
  41a1da:	mov    QWORD PTR [rax+rcx*8],rsi
  41a1de:	mov    edx,DWORD PTR [rip+0xee9c]        # 0x429080
  41a1e4:	cmp    edx,0x40
  41a1e7:	je     0x41a262
  41a1e9:	lea    r8d,[rdx+0x1]
  41a1ed:	lea    rsi,[rip+0x9f4c]        # 0x424140
  41a1f4:	movsxd rcx,edx
  41a1f7:	cmp    r8d,0x40
  41a1fb:	mov    DWORD PTR [rip+0xee7e],r8d        # 0x429080
  41a202:	mov    QWORD PTR [rax+rcx*8],rsi
  41a206:	je     0x41a262
  41a208:	lea    ecx,[rdx+0x2]
  41a20b:	lea    rax,[rip+0xeeae]        # 0x4290c0
  41a212:	lea    rsi,[rip+0x9d27]        # 0x423f40
  41a219:	movsxd r8,r8d
  41a21c:	cmp    ecx,0x40
  41a21f:	mov    DWORD PTR [rip+0xee5b],ecx        # 0x429080
  41a225:	mov    QWORD PTR [rax+r8*8],rsi
  41a229:	je     0x41a262
  41a22b:	lea    rsi,[rip+0x9b4e]        # 0x423d80
  41a232:	add    edx,0x3
  41a235:	movsxd rcx,ecx
  41a238:	mov    DWORD PTR [rip+0xee42],edx        # 0x429080
  41a23e:	mov    QWORD PTR [rax+rcx*8],rsi
  41a242:	movsxd rdx,DWORD PTR [rip+0xee37]        # 0x429080
  41a249:	cmp    edx,0x40
  41a24c:	je     0x41a262
  41a24e:	lea    ecx,[rdx+0x1]
  41a251:	lea    rsi,[rip+0x2ea8]        # 0x41d100
  41a258:	mov    DWORD PTR [rip+0xee22],ecx        # 0x429080
  41a25e:	mov    QWORD PTR [rax+rdx*8],rsi
  41a262:	mov    rcx,QWORD PTR [rip+0xf0bf]        # 0x429328
  41a269:	test   rcx,rcx
  41a26c:	je     0x41b271
  41a272:	lea    rdx,[rip+0x7194]        # 0x42140d
  41a279:	lea    r8,[rsp+0xc0]
  41a281:	call   0x4121f0
  41a286:	mov    rdx,QWORD PTR [rip+0xf08b]        # 0x429318
  41a28d:	mov    rdi,rax
  41a290:	mov    rbp,QWORD PTR [rsp+0xc0]
  41a298:	test   rdx,rdx
  41a29b:	je     0x41a2b3
  41a29d:	lea    rcx,[rip+0xf044]        # 0x4292e8
  41a2a4:	call   0x412340
  41a2a9:	test   eax,eax
  41a2ab:	mov    esi,eax
  41a2ad:	js     0x41a5c5
  41a2b3:	mov    rbx,QWORD PTR [rip+0xee06]        # 0x4290c0
  41a2ba:	test   rbx,rbx
  41a2bd:	je     0x41a629
  41a2c3:	lea    rsi,[rip+0xedfe]        # 0x4290c8
  41a2ca:	jmp    0x41a2e1
  41a2cc:	nop    DWORD PTR [rax+0x0]
  41a2d0:	add    rsi,0x8
  41a2d4:	mov    rbx,QWORD PTR [rsi-0x8]
  41a2d8:	test   rbx,rbx
  41a2db:	je     0x41a629
  41a2e1:	mov    rcx,QWORD PTR [rbx+0x10]
  41a2e5:	mov    rdx,rdi
  41a2e8:	call   0x419858
  41a2ed:	test   eax,eax
  41a2ef:	jne    0x41a2d0
  41a2f1:	lea    r15,[rsp+0xb8]
  41a2f9:	mov    r8,rbp
  41a2fc:	mov    rdx,rbx
  41a2ff:	mov    rcx,r15
  41a302:	call   0x4094b0
  41a307:	test   eax,eax
  41a309:	mov    esi,eax
  41a30b:	js     0x41a0f8
  41a311:	lea    rax,[rip+0x2de8]        # 0x41d100
  41a318:	mov    rcx,QWORD PTR [rsp+0xb8]
  41a320:	cmp    rbx,rax
  41a323:	je     0x41b32d
  41a329:	mov    edx,0x1f
  41a32e:	call   0x409380
  41a333:	cmp    DWORD PTR [rip+0xf02a],0x0        # 0x429364
  41a33a:	jne    0x41a689
  41a340:	cmp    DWORD PTR [rip+0xf019],0x0        # 0x429360
  41a347:	jne    0x41ab5b
  41a34d:	cmp    DWORD PTR [rip+0xf008],0x0        # 0x42935c
  41a354:	jne    0x41a69b
  41a35a:	mov    r12,QWORD PTR [rip+0xef97]        # 0x4292f8
  41a361:	test   r12,r12
  41a364:	je     0x41b339
  41a36a:	cmp    DWORD PTR [rip+0xf00b],0x0        # 0x42937c
  41a371:	mov    rbx,QWORD PTR [rsp+0xb8]
  41a379:	mov    eax,0x1
  41a37e:	mov    QWORD PTR [rsp+0xc8],0x0
  41a38a:	jne    0x41a398
  41a38c:	xor    eax,eax
  41a38e:	cmp    DWORD PTR [rip+0xf003],0x0        # 0x429398
  41a395:	setne  al
  41a398:	cmp    DWORD PTR [rip+0xefd9],0x0        # 0x429378
  41a39f:	mov    DWORD PTR [rip+0xefeb],eax        # 0x429390
  41a3a5:	mov    eax,0x1
  41a3aa:	jne    0x41a3b8
  41a3ac:	xor    eax,eax
  41a3ae:	cmp    DWORD PTR [rip+0xefdf],0x0        # 0x429394
  41a3b5:	setne  al
  41a3b8:	mov    rdi,QWORD PTR [rip+0xb881]        # 0x425c40
  41a3bf:	lea    rdx,[rip+0x82f2]        # 0x4226b8
  41a3c6:	xor    r8d,r8d
  41a3c9:	mov    r9d,0x1
  41a3cf:	mov    DWORD PTR [rip+0xefb7],eax        # 0x42938c
  41a3d5:	mov    QWORD PTR [rsp+0xd0],0x0
  41a3e1:	mov    rcx,QWORD PTR [rdi]
  41a3e4:	call   0x412438
  41a3e9:	test   rax,rax
  41a3ec:	je     0x41b470
  41a3f2:	lea    rax,[rsp+0xd0]
  41a3fa:	mov    r8,QWORD PTR [rip+0xeeef]        # 0x4292f0
  41a401:	mov    r9,rdi
  41a404:	mov    rdx,r12
  41a407:	mov    rcx,rax
  41a40a:	mov    QWORD PTR [rsp+0x38],rax
  41a40f:	call   0x411fe8
  41a414:	test   eax,eax
  41a416:	mov    esi,eax
  41a418:	js     0x41b419
  41a41e:	mov    rax,QWORD PTR [rsp+0xd0]
  41a426:	mov    QWORD PTR [rsp+0xc8],rax
  41a42e:	mov    rcx,QWORD PTR [rdi]
  41a431:	lea    rdx,[rip+0x6a8b]        # 0x420ec3
  41a438:	xor    r8d,r8d
  41a43b:	mov    r9d,0x2
  41a441:	call   0x412438
  41a446:	test   rax,rax
  41a449:	jne    0x41b450
  41a44f:	mov    rbp,QWORD PTR [rip+0xb7da]        # 0x425c30
  41a456:	mov    rcx,QWORD PTR [rsp+0xd0]
  41a45e:	mov    rdx,QWORD PTR [rbp+0x0]
  41a462:	call   0x407890
  41a467:	mov    rcx,QWORD PTR [rsp+0xd0]
  41a46f:	mov    rdx,rax
  41a472:	mov    QWORD PTR [rsp+0xd8],rax
  41a47a:	mov    edi,DWORD PTR [rcx+0x2c]
  41a47d:	call   0x412010
  41a482:	mov    esi,eax
  41a484:	test   edi,edi
  41a486:	jle    0x41a4ae
  41a488:	lea    eax,[rdi-0x1]
  41a48b:	xor    edi,edi
  41a48d:	lea    r13,[rax*8+0x8]
  41a495:	mov    rcx,rdi
  41a498:	add    rcx,QWORD PTR [rsp+0xd8]
  41a4a0:	add    rdi,0x8
  41a4a4:	call   0x412440
  41a4a9:	cmp    rdi,r13
  41a4ac:	jne    0x41a495
  41a4ae:	lea    rax,[rsp+0xd8]
  41a4b6:	mov    rcx,rax
  41a4b9:	mov    QWORD PTR [rsp+0x30],rax
  41a4be:	call   0x4123b8
  41a4c3:	test   esi,esi
  41a4c5:	js     0x41b419
  41a4cb:	mov    rcx,QWORD PTR [rsp+0xd0]
  41a4d3:	xor    r9d,r9d
  41a4d6:	xor    edx,edx
  41a4d8:	mov    r8,r12
  41a4db:	call   0x412070
  41a4e0:	mov    rax,QWORD PTR [rsp+0xd0]
  41a4e8:	cmp    DWORD PTR [rax+0x2c],0x0
  41a4ec:	je     0x41b045
  41a4f2:	xor    edi,edi
  41a4f4:	xor    esi,esi
  41a4f6:	lea    r12,[rsp+0xe0]
  41a4fe:	jmp    0x41a591
  41a503:	call   0x4120b0
  41a508:	mov    r14,rax
  41a50b:	mov    rax,QWORD PTR [r13+0x8]
  41a50f:	test   r14,r14
  41a512:	je     0x41a649
  41a518:	mov    edx,DWORD PTR [rax+0x38]
  41a51b:	mov    r8,QWORD PTR [rsp+0xd0]
  41a523:	mov    r9,r13
  41a526:	mov    QWORD PTR [rsp+0x20],r14
  41a52b:	mov    rcx,QWORD PTR [rbp+0x0]
  41a52f:	call   0x407600
  41a534:	mov    QWORD PTR [rsp+0xe0],rax
  41a53c:	mov    rcx,QWORD PTR [r13+0x8]
  41a540:	mov    r8,r12
  41a543:	mov    rdx,r14
  41a546:	call   0x412088
  41a54b:	test   eax,eax
  41a54d:	js     0x41a66d
  41a553:	mov    rcx,QWORD PTR [rsp+0xe0]
  41a55b:	lea    rdx,[rip+0x6961]        # 0x420ec3
  41a562:	xor    r8d,r8d
  41a565:	mov    r9d,0x2
  41a56b:	call   0x412438
  41a570:	test   rax,rax
  41a573:	jne    0x41b428
  41a579:	mov    rax,QWORD PTR [rsp+0xd0]
  41a581:	add    esi,0x1
  41a584:	add    rdi,0x8
  41a588:	cmp    esi,DWORD PTR [rax+0x2c]
  41a58b:	jae    0x41b045
  41a591:	mov    rax,QWORD PTR [rax+0x30]
  41a595:	mov    r13,QWORD PTR [rax+rdi*1]
  41a599:	mov    rax,QWORD PTR [r13+0x8]
  41a59d:	mov    ecx,DWORD PTR [rax+0x38]
  41a5a0:	cmp    ecx,0x19000
  41a5a6:	jne    0x41a503
  41a5ac:	mov    r9d,DWORD PTR [r13+0x0]
  41a5b0:	lea    r8,[rip+0x8129]        # 0x4226e0
  41a5b7:	mov    edx,0x18
  41a5bc:	xor    ecx,ecx
  41a5be:	call   0x412308
  41a5c3:	jmp    0x41a579
  41a5c5:	cmp    eax,0xffffffea
  41a5c8:	jne    0x41a0f8
  41a5ce:	mov    r9,QWORD PTR [rip+0xed43]        # 0x429318
  41a5d5:	lea    r8,[rip+0x7edc]        # 0x4224b8
  41a5dc:	mov    edx,0x10
  41a5e1:	xor    ecx,ecx
  41a5e3:	xor    ebx,ebx
  41a5e5:	call   0x412308
  41a5ea:	jmp    0x41a602
  41a5ec:	lea    r8,[rip+0x7ef3]        # 0x4224e6
  41a5f3:	mov    edx,0x10
  41a5f8:	xor    ecx,ecx
  41a5fa:	add    ebx,0x1
  41a5fd:	call   0x412308
  41a602:	mov    ecx,ebx
  41a604:	call   0x412318
  41a609:	test   rax,rax
  41a60c:	mov    r9,rax
  41a60f:	jne    0x41a5ec
  41a611:	lea    r8,[rip+0x6892]        # 0x420eaa
  41a618:	mov    edx,0x10
  41a61d:	xor    ecx,ecx
  41a61f:	call   0x412308
  41a624:	jmp    0x41a0f8
  41a629:	lea    r8,[rip+0x8208]        # 0x422838
  41a630:	mov    r9,rdi
  41a633:	mov    edx,0x10
  41a638:	xor    ecx,ecx
  41a63a:	mov    esi,0xffffffea
  41a63f:	call   0x412308
  41a644:	jmp    0x41a0f8
  41a649:	mov    r9d,DWORD PTR [rax+0x38]
  41a64d:	mov    eax,DWORD PTR [r13+0x0]
  41a651:	lea    r8,[rip+0x80b8]        # 0x422710
  41a658:	mov    edx,0x18
  41a65d:	xor    ecx,ecx
  41a65f:	mov    DWORD PTR [rsp+0x20],eax
  41a663:	call   0x412308
  41a668:	jmp    0x41a579
  41a66d:	mov    r9d,DWORD PTR [r13+0x0]
  41a671:	lea    r8,[rip+0x80d0]        # 0x422748
  41a678:	mov    edx,0x18
  41a67d:	xor    ecx,ecx
  41a67f:	call   0x412308
  41a684:	jmp    0x41a553
  41a689:	mov    rcx,QWORD PTR [rsp+0xb8]
  41a691:	call   0x40ab40
  41a696:	jmp    0x41a340
  41a69b:	mov    rbx,QWORD PTR [rsp+0xb8]
  41a6a3:	mov    edx,0x16
  41a6a8:	xor    edi,edi
  41a6aa:	mov    rcx,rbx
  41a6ad:	call   0x409380
  41a6b2:	jmp    0x41a819
  41a6b7:	lea    rdx,[rbx+rdx*8]
  41a6bb:	cdqe   
  41a6bd:	mov    rcx,QWORD PTR [rdx+0x58]
  41a6c1:	mov    ecx,DWORD PTR [rcx]
  41a6c3:	mov    DWORD PTR [rbx+rax*4+0x30],0x0
  41a6cb:	mov    rax,QWORD PTR [rbx+0x20]
  41a6cf:	add    rax,0x6c0
  41a6d5:	cmp    ecx,0xf
  41a6d8:	mov    QWORD PTR [rdx+0x60],rax
  41a6dc:	jne    0x41a6ea
  41a6de:	mov    eax,DWORD PTR [rbx+0x28ac]
  41a6e4:	mov    DWORD PTR [rbx+0x28b0],eax
  41a6ea:	mov    rax,QWORD PTR [rbx+0x8]
  41a6ee:	mov    rax,QWORD PTR [rax+0x28]
  41a6f2:	test   rax,rax
  41a6f5:	je     0x41a6fc
  41a6f7:	mov    rcx,rbx
  41a6fa:	call   rax
  41a6fc:	mov    r8,QWORD PTR [rdi]
  41a6ff:	lea    rdx,[rip+0x7dee]        # 0x4224f4
  41a706:	mov    rcx,rbx
  41a709:	call   0x40a930
  41a70e:	movsxd rax,DWORD PTR [rbx+0x2c]
  41a712:	movzx  ebp,BYTE PTR [rdi+0x8]
  41a716:	mov    rax,QWORD PTR [rbx+rax*8+0x58]
  41a71b:	cmp    DWORD PTR [rax+0x58],0x0
  41a71f:	jne    0x41a73c
  41a721:	mov    rcx,QWORD PTR [rax+0x50]
  41a725:	lea    rdx,[rip+0x7ea5]        # 0x4225d1
  41a72c:	xor    r9d,r9d
  41a72f:	xor    r8d,r8d
  41a732:	call   0x412438
  41a737:	test   rax,rax
  41a73a:	je     0x41a759
  41a73c:	mov    rax,QWORD PTR [rbx+0x8]
  41a740:	mov    r8,rbp
  41a743:	lea    rdx,[rip+0x7e87]        # 0x4225d1
  41a74a:	mov    rcx,rbx
  41a74d:	call   QWORD PTR [rax+0x38]
  41a750:	movsxd rax,DWORD PTR [rbx+0x2c]
  41a754:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  41a759:	cmp    BYTE PTR [rdi+0x8],0x2
  41a75d:	jbe    0x41a769
  41a75f:	test   BYTE PTR [rdi+0xb],0x20
  41a763:	je     0x41a9d7
  41a769:	lea    r8,[rip+0x73c3]        # 0x421b33
  41a770:	lea    rdx,[rip+0x7e68]        # 0x4225df
  41a777:	mov    rcx,rbx
  41a77a:	call   0x40ac10
  41a77f:	lea    r8,[rip+0x73ad]        # 0x421b33
  41a786:	lea    rdx,[rip+0x7e60]        # 0x4225ed
  41a78d:	mov    rcx,rbx
  41a790:	call   0x40ac10
  41a795:	mov    rcx,rdi
  41a798:	call   0x4123b0
  41a79d:	test   eax,eax
  41a79f:	je     0x41a862
  41a7a5:	lea    rdx,[rip+0x7e4f]        # 0x4225fb
  41a7ac:	movsxd r8,eax
  41a7af:	mov    rcx,rbx
  41a7b2:	call   0x409270
  41a7b7:	cmp    DWORD PTR [rip+0xeb9a],0x0        # 0x429358
  41a7be:	jne    0x41a87d
  41a7c4:	cmp    DWORD PTR [rip+0xeb89],0x0        # 0x429354
  41a7cb:	je     0x41a7d7
  41a7cd:	cmp    BYTE PTR [rdi+0x8],0x0
  41a7d1:	jne    0x41aa04
  41a7d7:	movsxd rax,DWORD PTR [rbx+0x2c]
  41a7db:	lea    rcx,[rbx+rax*8]
  41a7df:	test   eax,eax
  41a7e1:	mov    r8,QWORD PTR [rcx+0x58]
  41a7e5:	mov    r8d,DWORD PTR [r8]
  41a7e8:	je     0x41a803
  41a7ea:	mov    rdx,QWORD PTR [rcx+0x50]
  41a7ee:	mov    edx,DWORD PTR [rdx]
  41a7f0:	cmp    edx,0xffffffff
  41a7f3:	je     0x41a803
  41a7f5:	add    DWORD PTR [rbx+rax*4+0x2c],0x1
  41a7fa:	cmp    edx,0xf
  41a7fd:	je     0x41a9c1
  41a803:	mov    rax,QWORD PTR [rbx+0x8]
  41a807:	mov    rax,QWORD PTR [rax+0x30]
  41a80b:	test   rax,rax
  41a80e:	je     0x41a815
  41a810:	mov    rcx,rbx
  41a813:	call   rax
  41a815:	sub    DWORD PTR [rbx+0x2c],0x1
  41a819:	mov    rcx,rdi
  41a81c:	call   0x412248
  41a821:	test   rax,rax
  41a824:	mov    rdi,rax
  41a827:	je     0x41ab4e
  41a82d:	movsxd rdx,DWORD PTR [rbx+0x2c]
  41a831:	lea    eax,[rdx+0x1]
  41a834:	cmp    eax,0x9
  41a837:	mov    DWORD PTR [rbx+0x2c],eax
  41a83a:	jg     0x41b63f
  41a840:	test   eax,eax
  41a842:	jne    0x41a6b7
  41a848:	mov    rax,QWORD PTR [rbx+0x20]
  41a84c:	mov    DWORD PTR [rbx+0x30],0x0
  41a853:	add    rax,0x6c0
  41a859:	mov    QWORD PTR [rbx+0x58],rax
  41a85d:	jmp    0x41a6ea
  41a862:	lea    r8,[rip+0x72ca]        # 0x421b33
  41a869:	lea    rdx,[rip+0x7d8b]        # 0x4225fb
  41a870:	mov    rcx,rbx
  41a873:	call   0x40ac10
  41a878:	jmp    0x41a7b7
  41a87d:	movsxd rdx,DWORD PTR [rbx+0x2c]
  41a881:	lea    eax,[rdx+0x1]
  41a884:	cmp    eax,0x9
  41a887:	mov    DWORD PTR [rbx+0x2c],eax
  41a88a:	jg     0x41b63f
  41a890:	test   eax,eax
  41a892:	je     0x41ab34
  41a898:	lea    rdx,[rbx+rdx*8]
  41a89c:	cdqe   
  41a89e:	mov    rcx,QWORD PTR [rdx+0x58]
  41a8a2:	mov    ecx,DWORD PTR [rcx]
  41a8a4:	mov    DWORD PTR [rbx+rax*4+0x30],0x0
  41a8ac:	mov    rax,QWORD PTR [rbx+0x20]
  41a8b0:	add    rax,0x720
  41a8b6:	cmp    ecx,0xf
  41a8b9:	mov    QWORD PTR [rdx+0x60],rax
  41a8bd:	jne    0x41a8cb
  41a8bf:	mov    eax,DWORD PTR [rbx+0x28ac]
  41a8c5:	mov    DWORD PTR [rbx+0x28b0],eax
  41a8cb:	mov    rax,QWORD PTR [rbx+0x8]
  41a8cf:	mov    rax,QWORD PTR [rax+0x28]
  41a8d3:	test   rax,rax
  41a8d6:	je     0x41a8dd
  41a8d8:	mov    rcx,rbx
  41a8db:	call   rax
  41a8dd:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a8e2:	lea    rdx,[rip+0x7d21]        # 0x42260a
  41a8e9:	mov    rcx,rbx
  41a8ec:	and    r8d,0x1
  41a8f0:	call   0x409270
  41a8f5:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a8fa:	lea    rdx,[rip+0x7d14]        # 0x422615
  41a901:	mov    rcx,rbx
  41a904:	shr    r8b,1
  41a907:	and    r8d,0x1
  41a90b:	call   0x409270
  41a910:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a915:	lea    rdx,[rip+0x7d01]        # 0x42261d
  41a91c:	mov    rcx,rbx
  41a91f:	shr    r8b,0x2
  41a923:	and    r8d,0x1
  41a927:	call   0x409270
  41a92c:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a931:	lea    rdx,[rip+0x7cef]        # 0x422627
  41a938:	mov    rcx,rbx
  41a93b:	shr    r8b,0x3
  41a93f:	and    r8d,0x1
  41a943:	call   0x409270
  41a948:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a94d:	lea    rdx,[rip+0x7cdb]        # 0x42262f
  41a954:	mov    rcx,rbx
  41a957:	shr    r8b,0x4
  41a95b:	and    r8d,0x1
  41a95f:	call   0x409270
  41a964:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a969:	lea    rdx,[rip+0x7cc6]        # 0x422636
  41a970:	mov    rcx,rbx
  41a973:	shr    r8b,0x5
  41a977:	and    r8d,0x1
  41a97b:	call   0x409270
  41a980:	movzx  r8d,BYTE PTR [rdi+0xb]
  41a985:	lea    rdx,[rip+0x7cae]        # 0x42263a
  41a98c:	mov    rcx,rbx
  41a98f:	shr    r8b,0x6
  41a993:	and    r8d,0x1
  41a997:	call   0x409270
  41a99c:	movsx  r8,BYTE PTR [rdi+0xb]
  41a9a1:	lea    rdx,[rip+0x7c9c]        # 0x422644
  41a9a8:	mov    rcx,rbx
  41a9ab:	shr    r8,0x3f
  41a9af:	call   0x409270
  41a9b4:	mov    rcx,rbx
  41a9b7:	call   0x407ed0
  41a9bc:	jmp    0x41a7c4
  41a9c1:	cmp    r8d,0xd
  41a9c5:	je     0x41b265
  41a9cb:	add    DWORD PTR [rbx+0x28ac],0x1
  41a9d2:	jmp    0x41a803
  41a9d7:	movzx  r8d,BYTE PTR [rdi+0x9]
  41a9dc:	lea    rdx,[rip+0x7bfc]        # 0x4225df
  41a9e3:	mov    rcx,rbx
  41a9e6:	call   0x409270
  41a9eb:	movzx  r8d,BYTE PTR [rdi+0xa]
  41a9f0:	lea    rdx,[rip+0x7bf6]        # 0x4225ed
  41a9f7:	mov    rcx,rbx
  41a9fa:	call   0x409270
  41a9ff:	jmp    0x41a795
  41aa04:	mov    edx,0x15
  41aa09:	mov    rcx,rbx
  41aa0c:	xor    ebp,ebp
  41aa0e:	call   0x409380
  41aa13:	movzx  eax,BYTE PTR [rdi+0x8]
  41aa17:	movsxd r12,ebp
  41aa1a:	cmp    ebp,eax
  41aa1c:	jge    0x41ab27
  41aa22:	movsxd rdx,DWORD PTR [rbx+0x2c]
  41aa26:	lea    eax,[rdx+0x1]
  41aa29:	cmp    eax,0x9
  41aa2c:	mov    DWORD PTR [rbx+0x2c],eax
  41aa2f:	jg     0x41b63f
  41aa35:	test   eax,eax
  41aa37:	je     0x41aafa
  41aa3d:	lea    rdx,[rbx+rdx*8]
  41aa41:	cdqe   
  41aa43:	mov    rcx,QWORD PTR [rdx+0x58]
  41aa47:	mov    ecx,DWORD PTR [rcx]
  41aa49:	mov    DWORD PTR [rbx+rax*4+0x30],0x0
  41aa51:	mov    rax,QWORD PTR [rbx+0x20]
  41aa55:	add    rax,0x780
  41aa5b:	cmp    ecx,0xf
  41aa5e:	mov    QWORD PTR [rdx+0x60],rax
  41aa62:	jne    0x41aa70
  41aa64:	mov    eax,DWORD PTR [rbx+0x28ac]
  41aa6a:	mov    DWORD PTR [rbx+0x28b0],eax
  41aa70:	mov    rax,QWORD PTR [rbx+0x8]
  41aa74:	mov    rax,QWORD PTR [rax+0x28]
  41aa78:	test   rax,rax
  41aa7b:	je     0x41aa82
  41aa7d:	mov    rcx,rbx
  41aa80:	call   rax
  41aa82:	add    rbp,0x1
  41aa86:	lea    rdx,[rip+0x774f]        # 0x4221dc
  41aa8d:	mov    rcx,rbx
  41aa90:	mov    r8,rbp
  41aa93:	call   0x409270
  41aa98:	movzx  eax,BYTE PTR [rdi+r12*2+0xd]
  41aa9e:	lea    rdx,[rip+0x7ba5]        # 0x42264a
  41aaa5:	mov    rcx,rbx
  41aaa8:	shr    al,0x3
  41aaab:	and    eax,0xf
  41aaae:	lea    r8,[rax+0x1]
  41aab2:	call   0x409270
  41aab7:	movsxd rax,DWORD PTR [rbx+0x2c]
  41aabb:	lea    rcx,[rbx+rax*8]
  41aabf:	test   eax,eax
  41aac1:	mov    r8,QWORD PTR [rcx+0x58]
  41aac5:	mov    r8d,DWORD PTR [r8]
  41aac8:	je     0x41aadf
  41aaca:	mov    rdx,QWORD PTR [rcx+0x50]
  41aace:	mov    edx,DWORD PTR [rdx]
  41aad0:	cmp    edx,0xffffffff
  41aad3:	je     0x41aadf
  41aad5:	add    DWORD PTR [rbx+rax*4+0x2c],0x1
  41aada:	cmp    edx,0xf
  41aadd:	je     0x41ab14
  41aadf:	mov    rax,QWORD PTR [rbx+0x8]
  41aae3:	mov    rax,QWORD PTR [rax+0x30]
  41aae7:	test   rax,rax
  41aaea:	je     0x41aaf1
  41aaec:	mov    rcx,rbx
  41aaef:	call   rax
  41aaf1:	sub    DWORD PTR [rbx+0x2c],0x1
  41aaf5:	jmp    0x41aa13
  41aafa:	mov    rax,QWORD PTR [rbx+0x20]
  41aafe:	mov    DWORD PTR [rbx+0x30],0x0
  41ab05:	add    rax,0x780
  41ab0b:	mov    QWORD PTR [rbx+0x58],rax
  41ab0f:	jmp    0x41aa70
  41ab14:	cmp    r8d,0xd
  41ab18:	je     0x41b40d
  41ab1e:	add    DWORD PTR [rbx+0x28ac],0x1
  41ab25:	jmp    0x41aadf
  41ab27:	mov    rcx,rbx
  41ab2a:	call   0x407ed0
  41ab2f:	jmp    0x41a7d7
  41ab34:	mov    rax,QWORD PTR [rbx+0x20]
  41ab38:	mov    DWORD PTR [rbx+0x30],0x0
  41ab3f:	add    rax,0x720
  41ab45:	mov    QWORD PTR [rbx+0x58],rax
  41ab49:	jmp    0x41a8cb
  41ab4e:	mov    rcx,rbx
  41ab51:	call   0x407ed0
  41ab56:	jmp    0x41a35a
  41ab5b:	mov    rbx,QWORD PTR [rsp+0xb8]
  41ab63:	mov    edx,0xc
  41ab68:	mov    rcx,rbx
  41ab6b:	call   0x409380
  41ab70:	call   0x4121d0
  41ab75:	mov    rcx,rbx
  41ab78:	mov    edx,0xb
  41ab7d:	mov    edi,eax
  41ab7f:	call   0x409380
  41ab84:	lea    r8,[rip+0x795f]        # 0x4224ea
  41ab8b:	lea    rdx,[rip+0x7962]        # 0x4224f4
  41ab92:	mov    rcx,rbx
  41ab95:	call   0x40a930
  41ab9a:	lea    rdx,[rip+0x7958]        # 0x4224f9
  41aba1:	mov    rcx,rbx
  41aba4:	mov    r8d,0x36
  41abaa:	call   0x409270
  41abaf:	lea    rdx,[rip+0x7949]        # 0x4224ff
  41abb6:	mov    rcx,rbx
  41abb9:	mov    r8d,0x1f
  41abbf:	call   0x409270
  41abc4:	lea    rdx,[rip+0x793a]        # 0x422505
  41abcb:	mov    rcx,rbx
  41abce:	mov    r8d,0x64
  41abd4:	call   0x409270
  41abd9:	lea    rdx,[rip+0x6b5a]        # 0x42173a
  41abe0:	mov    r8d,edi
  41abe3:	mov    rcx,rbx
  41abe6:	call   0x409270
  41abeb:	lea    r8,[rip+0x7919]        # 0x42250b
  41abf2:	lea    rdx,[rip+0x7920]        # 0x422519
  41abf9:	mov    rcx,rbx
  41abfc:	call   0x40a930
  41ac01:	mov    rcx,rbx
  41ac04:	call   0x407ed0
  41ac09:	call   0x412080
  41ac0e:	mov    rcx,rbx
  41ac11:	mov    edx,0xb
  41ac16:	mov    edi,eax
  41ac18:	call   0x409380
  41ac1d:	lea    r8,[rip+0x78fb]        # 0x42251f
  41ac24:	lea    rdx,[rip+0x78c9]        # 0x4224f4
  41ac2b:	mov    rcx,rbx
  41ac2e:	call   0x40a930
  41ac33:	lea    rdx,[rip+0x78bf]        # 0x4224f9
  41ac3a:	mov    rcx,rbx
  41ac3d:	mov    r8d,0x38
  41ac43:	call   0x409270
  41ac48:	lea    rdx,[rip+0x78b0]        # 0x4224ff
  41ac4f:	mov    rcx,rbx
  41ac52:	mov    r8d,0x3c
  41ac58:	call   0x409270
  41ac5d:	lea    rdx,[rip+0x78a1]        # 0x422505
  41ac64:	mov    rcx,rbx
  41ac67:	mov    r8d,0x64
  41ac6d:	call   0x409270
  41ac72:	lea    rdx,[rip+0x6ac1]        # 0x42173a
  41ac79:	mov    r8d,edi
  41ac7c:	mov    rcx,rbx
  41ac7f:	call   0x409270
  41ac84:	lea    r8,[rip+0x789f]        # 0x42252a
  41ac8b:	lea    rdx,[rip+0x7887]        # 0x422519
  41ac92:	mov    rcx,rbx
  41ac95:	call   0x40a930
  41ac9a:	mov    rcx,rbx
  41ac9d:	call   0x407ed0
  41aca2:	call   0x411fd8
  41aca7:	mov    rcx,rbx
  41acaa:	mov    edx,0xb
  41acaf:	mov    edi,eax
  41acb1:	call   0x409380
  41acb6:	lea    r8,[rip+0x787b]        # 0x422538
  41acbd:	lea    rdx,[rip+0x7830]        # 0x4224f4
  41acc4:	mov    rcx,rbx
  41acc7:	call   0x40a930
  41accc:	lea    rdx,[rip+0x7826]        # 0x4224f9
  41acd3:	mov    rcx,rbx
  41acd6:	mov    r8d,0x38
  41acdc:	call   0x409270
  41ace1:	lea    rdx,[rip+0x7817]        # 0x4224ff
  41ace8:	mov    rcx,rbx
  41aceb:	mov    r8d,0x28
  41acf1:	call   0x409270
  41acf6:	lea    rdx,[rip+0x7808]        # 0x422505
  41acfd:	mov    rcx,rbx
  41ad00:	mov    r8d,0x65
  41ad06:	call   0x409270
  41ad0b:	lea    rdx,[rip+0x6a28]        # 0x42173a
  41ad12:	mov    r8d,edi
  41ad15:	mov    rcx,rbx
  41ad18:	call   0x409270
  41ad1d:	lea    r8,[rip+0x7820]        # 0x422544
  41ad24:	lea    rdx,[rip+0x77ee]        # 0x422519
  41ad2b:	mov    rcx,rbx
  41ad2e:	call   0x40a930
  41ad33:	mov    rcx,rbx
  41ad36:	call   0x407ed0
  41ad3b:	call   0x411f40
  41ad40:	mov    rcx,rbx
  41ad43:	mov    edx,0xb
  41ad48:	mov    edi,eax
  41ad4a:	call   0x409380
  41ad4f:	lea    r8,[rip+0x77fc]        # 0x422552
  41ad56:	lea    rdx,[rip+0x7797]        # 0x4224f4
  41ad5d:	mov    rcx,rbx
  41ad60:	call   0x40a930
  41ad65:	lea    rdx,[rip+0x778d]        # 0x4224f9
  41ad6c:	mov    rcx,rbx
  41ad6f:	mov    r8d,0x38
  41ad75:	call   0x409270
  41ad7a:	lea    rdx,[rip+0x777e]        # 0x4224ff
  41ad81:	mov    rcx,rbx
  41ad84:	mov    r8d,0x4
  41ad8a:	call   0x409270
  41ad8f:	lea    rdx,[rip+0x776f]        # 0x422505
  41ad96:	mov    rcx,rbx
  41ad99:	mov    r8d,0x64
  41ad9f:	call   0x409270
  41ada4:	lea    rdx,[rip+0x698f]        # 0x42173a
  41adab:	mov    r8d,edi
  41adae:	mov    rcx,rbx
  41adb1:	call   0x409270
  41adb6:	lea    r8,[rip+0x77a1]        # 0x42255e
  41adbd:	lea    rdx,[rip+0x7755]        # 0x422519
  41adc4:	mov    rcx,rbx
  41adc7:	call   0x40a930
  41adcc:	mov    rcx,rbx
  41adcf:	call   0x407ed0
  41add4:	call   0x411f90
  41add9:	mov    rcx,rbx
  41addc:	mov    edx,0xb
  41ade1:	mov    edi,eax
  41ade3:	call   0x409380
  41ade8:	lea    r8,[rip+0x777c]        # 0x42256b
  41adef:	lea    rdx,[rip+0x76fe]        # 0x4224f4
  41adf6:	mov    rcx,rbx
  41adf9:	call   0x40a930
  41adfe:	lea    rdx,[rip+0x76f4]        # 0x4224f9
  41ae05:	mov    rcx,rbx
  41ae08:	mov    r8d,0x5
  41ae0e:	call   0x409270
  41ae13:	lea    rdx,[rip+0x76e5]        # 0x4224ff
  41ae1a:	mov    rcx,rbx
  41ae1d:	mov    r8d,0x28
  41ae23:	call   0x409270
  41ae28:	lea    rdx,[rip+0x76d6]        # 0x422505
  41ae2f:	mov    rcx,rbx
  41ae32:	mov    r8d,0x65
  41ae38:	call   0x409270
  41ae3d:	lea    rdx,[rip+0x68f6]        # 0x42173a
  41ae44:	mov    r8d,edi
  41ae47:	mov    rcx,rbx
  41ae4a:	call   0x409270
  41ae4f:	lea    r8,[rip+0x7721]        # 0x422577
  41ae56:	lea    rdx,[rip+0x76bc]        # 0x422519
  41ae5d:	mov    rcx,rbx
  41ae60:	call   0x40a930
  41ae65:	mov    rcx,rbx
  41ae68:	call   0x407ed0
  41ae6d:	call   0x412198
  41ae72:	mov    rcx,rbx
  41ae75:	mov    edx,0xb
  41ae7a:	mov    edi,eax
  41ae7c:	call   0x409380
  41ae81:	lea    r8,[rip+0x76fd]        # 0x422585
  41ae88:	lea    rdx,[rip+0x7665]        # 0x4224f4
  41ae8f:	mov    rcx,rbx
  41ae92:	call   0x40a930
  41ae97:	lea    rdx,[rip+0x765b]        # 0x4224f9
  41ae9e:	mov    rcx,rbx
  41aea1:	mov    r8d,0x3
  41aea7:	call   0x409270
  41aeac:	lea    rdx,[rip+0x764c]        # 0x4224ff
  41aeb3:	mov    rcx,rbx
  41aeb6:	mov    r8d,0x1
  41aebc:	call   0x409270
  41aec1:	lea    rdx,[rip+0x763d]        # 0x422505
  41aec8:	mov    rcx,rbx
  41aecb:	mov    r8d,0x65
  41aed1:	call   0x409270
  41aed6:	lea    rdx,[rip+0x685d]        # 0x42173a
  41aedd:	mov    r8d,edi
  41aee0:	mov    rcx,rbx
  41aee3:	call   0x409270
  41aee8:	lea    r8,[rip+0x76a1]        # 0x422590
  41aeef:	lea    rdx,[rip+0x7623]        # 0x422519
  41aef6:	mov    rcx,rbx
  41aef9:	call   0x40a930
  41aefe:	mov    rcx,rbx
  41af01:	call   0x407ed0
  41af06:	call   0x412170
  41af0b:	mov    rcx,rbx
  41af0e:	mov    edx,0xb
  41af13:	mov    edi,eax
  41af15:	call   0x409380
  41af1a:	lea    r8,[rip+0x767a]        # 0x42259b
  41af21:	lea    rdx,[rip+0x75cc]        # 0x4224f4
  41af28:	mov    rcx,rbx
  41af2b:	call   0x40a930
  41af30:	lea    rdx,[rip+0x75c2]        # 0x4224f9
  41af37:	mov    rcx,rbx
  41af3a:	mov    r8d,0x1
  41af40:	call   0x409270
  41af45:	lea    rdx,[rip+0x75b3]        # 0x4224ff
  41af4c:	mov    rcx,rbx
  41af4f:	mov    r8d,0x2
  41af55:	call   0x409270
  41af5a:	lea    rdx,[rip+0x75a4]        # 0x422505
  41af61:	mov    rcx,rbx
  41af64:	mov    r8d,0x65
  41af6a:	call   0x409270
  41af6f:	lea    rdx,[rip+0x67c4]        # 0x42173a
  41af76:	mov    r8d,edi
  41af79:	mov    rcx,rbx
  41af7c:	call   0x409270
  41af81:	lea    r8,[rip+0x7621]        # 0x4225a9
  41af88:	lea    rdx,[rip+0x758a]        # 0x422519
  41af8f:	mov    rcx,rbx
  41af92:	call   0x40a930
  41af97:	mov    rcx,rbx
  41af9a:	call   0x407ed0
  41af9f:	call   0x412160
  41afa4:	mov    rcx,rbx
  41afa7:	mov    edx,0xb
  41afac:	mov    edi,eax
  41afae:	call   0x409380
  41afb3:	lea    r8,[rip+0x75fa]        # 0x4225b4
  41afba:	lea    rdx,[rip+0x7533]        # 0x4224f4
  41afc1:	mov    rcx,rbx
  41afc4:	call   0x40a930
  41afc9:	lea    rdx,[rip+0x7529]        # 0x4224f9
  41afd0:	mov    rcx,rbx
  41afd3:	mov    r8d,0x35
  41afd9:	call   0x409270
  41afde:	lea    rdx,[rip+0x751a]        # 0x4224ff
  41afe5:	mov    rcx,rbx
  41afe8:	mov    r8d,0x3
  41afee:	call   0x409270
  41aff3:	lea    rdx,[rip+0x750b]        # 0x422505
  41affa:	mov    rcx,rbx
  41affd:	mov    r8d,0x64
  41b003:	call   0x409270
  41b008:	lea    rdx,[rip+0x672b]        # 0x42173a
  41b00f:	mov    r8d,edi
  41b012:	mov    rcx,rbx
  41b015:	call   0x409270
  41b01a:	lea    r8,[rip+0x759f]        # 0x4225c0
  41b021:	lea    rdx,[rip+0x74f1]        # 0x422519
  41b028:	mov    rcx,rbx
  41b02b:	call   0x40a930
  41b030:	mov    rcx,rbx
  41b033:	call   0x407ed0
  41b038:	mov    rcx,rbx
  41b03b:	call   0x407ed0
  41b040:	jmp    0x41a34d
  41b045:	mov    edx,DWORD PTR [rax+0x2c]
  41b048:	lea    rcx,[rip+0xe281]        # 0x4292d0
  41b04f:	mov    r8d,0x8
  41b055:	mov    QWORD PTR [rsp+0xc8],rax
  41b05d:	mov    DWORD PTR [rip+0xe27d],edx        # 0x4292e0
  41b063:	call   0x412238
  41b068:	test   eax,eax
  41b06a:	mov    esi,eax
  41b06c:	js     0x41b1cb
  41b072:	mov    rax,QWORD PTR [rsp+0xc8]
  41b07a:	mov    rcx,QWORD PTR [rip+0xe24f]        # 0x4292d0
  41b081:	xor    edx,edx
  41b083:	mov    r8d,DWORD PTR [rax+0x2c]
  41b087:	shl    r8,0x3
  41b08b:	call   0x419878
  41b090:	mov    rax,QWORD PTR [rsp+0xc8]
  41b098:	lea    rcx,[rip+0xe239]        # 0x4292d8
  41b09f:	mov    r8d,0x8
  41b0a5:	mov    edx,DWORD PTR [rax+0x2c]
  41b0a8:	call   0x412238
  41b0ad:	test   eax,eax
  41b0af:	mov    esi,eax
  41b0b1:	js     0x41b1cb
  41b0b7:	mov    rax,QWORD PTR [rsp+0xc8]
  41b0bf:	mov    rcx,QWORD PTR [rip+0xe212]        # 0x4292d8
  41b0c6:	xor    edx,edx
  41b0c8:	mov    r8d,DWORD PTR [rax+0x2c]
  41b0cc:	shl    r8,0x3
  41b0d0:	call   0x419878
  41b0d5:	mov    rax,QWORD PTR [rsp+0xc8]
  41b0dd:	lea    rcx,[rip+0xe1e4]        # 0x4292c8
  41b0e4:	mov    r8d,0x4
  41b0ea:	mov    edx,DWORD PTR [rax+0x2c]
  41b0ed:	call   0x412238
  41b0f2:	test   eax,eax
  41b0f4:	mov    esi,eax
  41b0f6:	js     0x41b1cb
  41b0fc:	mov    rax,QWORD PTR [rsp+0xc8]
  41b104:	mov    rcx,QWORD PTR [rip+0xe1bd]        # 0x4292c8
  41b10b:	xor    edx,edx
  41b10d:	xor    edi,edi
  41b10f:	mov    r8d,DWORD PTR [rax+0x2c]
  41b113:	shl    r8,0x2
  41b117:	call   0x419878
  41b11c:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b124:	mov    eax,esi
  41b126:	mov    rcx,rbp
  41b129:	jmp    0x41b158
  41b12b:	mov    rax,QWORD PTR [rcx+0x30]
  41b12f:	mov    rdx,QWORD PTR [rax+rdi*8]
  41b133:	call   0x412000
  41b138:	test   eax,eax
  41b13a:	js     0x41b638
  41b140:	mov    rdx,QWORD PTR [rip+0xe181]        # 0x4292c8
  41b147:	mov    rcx,QWORD PTR [rsp+0xc8]
  41b14f:	mov    DWORD PTR [rdx+rdi*4],eax
  41b152:	xor    eax,eax
  41b154:	add    rdi,0x1
  41b158:	cmp    DWORD PTR [rcx+0x2c],edi
  41b15b:	jbe    0x41b4e5
  41b161:	mov    r8,QWORD PTR [rip+0xe1b8]        # 0x429320
  41b168:	test   r8,r8
  41b16b:	jne    0x41b12b
  41b16d:	mov    rdx,QWORD PTR [rip+0xe154]        # 0x4292c8
  41b174:	mov    DWORD PTR [rdx+rdi*4],0x1
  41b17b:	jmp    0x41b154
  41b17d:	mov    edx,0x22
  41b182:	mov    rcx,rbx
  41b185:	xor    esi,esi
  41b187:	call   0x409380
  41b18c:	xor    edi,edi
  41b18e:	mov    eax,esi
  41b190:	jmp    0x41b196
  41b192:	add    rdi,0x1
  41b196:	cmp    DWORD PTR [rbp+0x2c],edi
  41b199:	jbe    0x41bb5f
  41b19f:	mov    rdx,QWORD PTR [rip+0xe122]        # 0x4292c8
  41b1a6:	cmp    DWORD PTR [rdx+rdi*4],0x0
  41b1aa:	je     0x41b192
  41b1ac:	xor    r9d,r9d
  41b1af:	mov    r8d,edi
  41b1b2:	mov    rdx,rbp
  41b1b5:	mov    rcx,rbx
  41b1b8:	call   0x40fb40
  41b1bd:	test   eax,eax
  41b1bf:	jns    0x41b192
  41b1c1:	mov    rcx,rbx
  41b1c4:	mov    esi,eax
  41b1c6:	call   0x407ed0
  41b1cb:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b1d3:	test   rbp,rbp
  41b1d6:	je     0x41b29a
  41b1dc:	xor    edi,edi
  41b1de:	xor    ebx,ebx
  41b1e0:	cmp    DWORD PTR [rbp+0x2c],0x0
  41b1e4:	jne    0x41b1fc
  41b1e6:	jmp    0x41b216
  41b1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b1f0:	add    ebx,0x1
  41b1f3:	add    rdi,0x8
  41b1f7:	cmp    ebx,DWORD PTR [rbp+0x2c]
  41b1fa:	jae    0x41b216
  41b1fc:	mov    rax,QWORD PTR [rbp+0x30]
  41b200:	mov    rax,QWORD PTR [rax+rdi*1]
  41b204:	mov    rcx,QWORD PTR [rax+0x8]
  41b208:	mov    eax,DWORD PTR [rcx+0x38]
  41b20b:	test   eax,eax
  41b20d:	je     0x41b1f0
  41b20f:	call   0x4120f0
  41b214:	jmp    0x41b1f0
  41b216:	lea    rcx,[rsp+0xc8]
  41b21e:	call   0x412020
  41b223:	lea    rcx,[rip+0xe0a6]        # 0x4292d0
  41b22a:	call   0x4123b8
  41b22f:	lea    rcx,[rip+0xe0a2]        # 0x4292d8
  41b236:	call   0x4123b8
  41b23b:	lea    rcx,[rip+0xe086]        # 0x4292c8
  41b242:	call   0x4123b8
  41b247:	test   esi,esi
  41b249:	js     0x41b2be
  41b24b:	mov    rcx,QWORD PTR [rsp+0xb8]
  41b253:	call   0x407ed0
  41b258:	mov    rcx,r15
  41b25b:	call   0x4092d0
  41b260:	jmp    0x41a0f8
  41b265:	add    DWORD PTR [rbx+0x28a8],0x1
  41b26c:	jmp    0x41a803
  41b271:	lea    rcx,[rip+0x5c08]        # 0x420e80
  41b278:	mov    esi,0xfffffff4
  41b27d:	call   0x412220
  41b282:	test   rax,rax
  41b285:	mov    rcx,rax
  41b288:	mov    QWORD PTR [rip+0xe099],rax        # 0x429328
  41b28f:	je     0x41a0f8
  41b295:	jmp    0x41a272
  41b29a:	lea    rcx,[rip+0xe02f]        # 0x4292d0
  41b2a1:	call   0x4123b8
  41b2a6:	lea    rcx,[rip+0xe02b]        # 0x4292d8
  41b2ad:	call   0x4123b8
  41b2b2:	lea    rcx,[rip+0xe00f]        # 0x4292c8
  41b2b9:	call   0x4123b8
  41b2be:	cmp    DWORD PTR [rip+0xe0bf],0x0        # 0x429384
  41b2c5:	je     0x41b24b
  41b2c7:	lea    rbx,[rsp+0xe0]
  41b2cf:	mov    r8d,0x80
  41b2d5:	mov    ecx,esi
  41b2d7:	mov    rdi,QWORD PTR [rsp+0xb8]
  41b2df:	mov    rdx,rbx
  41b2e2:	call   0x412218
  41b2e7:	test   eax,eax
  41b2e9:	js     0x41b674
  41b2ef:	mov    rcx,rdi
  41b2f2:	mov    edx,0x3
  41b2f7:	call   0x409380
  41b2fc:	lea    rdx,[rip+0x7529]        # 0x42282c
  41b303:	movsxd r8,esi
  41b306:	mov    rcx,rdi
  41b309:	call   0x409270
  41b30e:	lea    rdx,[rip+0x751c]        # 0x422831
  41b315:	mov    rcx,rdi
  41b318:	mov    r8,rbx
  41b31b:	call   0x40a930
  41b320:	mov    rcx,rdi
  41b323:	call   0x407ed0
  41b328:	jmp    0x41b24b
  41b32d:	or     DWORD PTR [rcx+0x28c0],0x8
  41b334:	jmp    0x41a329
  41b339:	cmp    DWORD PTR [rip+0xe040],0x0        # 0x429380
  41b340:	jne    0x41b396
  41b342:	cmp    DWORD PTR [rip+0xe02b],0x0        # 0x429374
  41b349:	jne    0x41b396
  41b34b:	cmp    DWORD PTR [rip+0xe01e],0x0        # 0x429370
  41b352:	jne    0x41b396
  41b354:	cmp    DWORD PTR [rip+0xe02d],0x0        # 0x429388
  41b35b:	jne    0x41b396
  41b35d:	cmp    DWORD PTR [rip+0xe014],0x0        # 0x429378
  41b364:	jne    0x41b396
  41b366:	cmp    DWORD PTR [rip+0xe017],0x0        # 0x429384
  41b36d:	jne    0x41b396
  41b36f:	cmp    DWORD PTR [rip+0xdfee],0x0        # 0x429364
  41b376:	jne    0x41b24b
  41b37c:	cmp    DWORD PTR [rip+0xdfdd],0x0        # 0x429360
  41b383:	jne    0x41b24b
  41b389:	cmp    DWORD PTR [rip+0xdfcc],0x0        # 0x42935c
  41b390:	jne    0x41b24b
  41b396:	lea    r8,[rip+0x706b]        # 0x422408
  41b39d:	mov    edx,0x20
  41b3a2:	xor    ecx,ecx
  41b3a4:	mov    esi,0xffffffea
  41b3a9:	call   0x412308
  41b3ae:	lea    r9,[rip+0x9ee3]        # 0x425298
  41b3b5:	lea    r8,[rip+0x7074]        # 0x422430
  41b3bc:	mov    edx,0x20
  41b3c1:	xor    ecx,ecx
  41b3c3:	call   0x412308
  41b3c8:	lea    r8,[rip+0x5adb]        # 0x420eaa
  41b3cf:	mov    edx,0x20
  41b3d4:	xor    ecx,ecx
  41b3d6:	call   0x412308
  41b3db:	lea    r8,[rip+0x7276]        # 0x422658
  41b3e2:	mov    edx,0x10
  41b3e7:	xor    ecx,ecx
  41b3e9:	call   0x412308
  41b3ee:	lea    r9,[rip+0x9ea3]        # 0x425298
  41b3f5:	lea    r8,[rip+0x7284]        # 0x422680
  41b3fc:	mov    edx,0x10
  41b401:	xor    ecx,ecx
  41b403:	call   0x412308
  41b408:	jmp    0x41b24b
  41b40d:	add    DWORD PTR [rbx+0x28a8],0x1
  41b414:	jmp    0x41aadf
  41b419:	mov    edx,esi
  41b41b:	mov    rcx,r12
  41b41e:	call   0x4054b0
  41b423:	jmp    0x41b1cb
  41b428:	mov    edx,DWORD PTR [r13+0x0]
  41b42c:	lea    r8,[rip+0x7345]        # 0x422778
  41b433:	xor    ecx,ecx
  41b435:	mov    esi,0xabafb008
  41b43a:	mov    DWORD PTR [rsp+0x20],edx
  41b43e:	mov    r9,QWORD PTR [rax]
  41b441:	mov    edx,0x10
  41b446:	call   0x412308
  41b44b:	jmp    0x41b1cb
  41b450:	mov    r9,QWORD PTR [rax]
  41b453:	lea    r8,[rip+0x726e]        # 0x4226c8
  41b45a:	mov    edx,0x10
  41b45f:	xor    ecx,ecx
  41b461:	mov    esi,0xabafb008
  41b466:	call   0x412308
  41b46b:	jmp    0x41b1cb
  41b470:	lea    r8,[rip+0x724f]        # 0x4226c6
  41b477:	lea    rdx,[rip+0x723a]        # 0x4226b8
  41b47e:	mov    r9d,0x10
  41b484:	mov    rcx,rdi
  41b487:	call   0x412428
  41b48c:	lea    rax,[rsp+0xd0]
  41b494:	mov    r8,QWORD PTR [rip+0xde55]        # 0x4292f0
  41b49b:	mov    r9,rdi
  41b49e:	mov    rdx,r12
  41b4a1:	mov    rcx,rax
  41b4a4:	mov    QWORD PTR [rsp+0x38],rax
  41b4a9:	call   0x411fe8
  41b4ae:	test   eax,eax
  41b4b0:	mov    esi,eax
  41b4b2:	js     0x41b419
  41b4b8:	mov    rax,QWORD PTR [rsp+0xd0]
  41b4c0:	lea    rdx,[rip+0x71f1]        # 0x4226b8
  41b4c7:	mov    r9d,0x1
  41b4cd:	xor    r8d,r8d
  41b4d0:	mov    rcx,rdi
  41b4d3:	mov    QWORD PTR [rsp+0xc8],rax
  41b4db:	call   0x412428
  41b4e0:	jmp    0x41a42e
  41b4e5:	cmp    DWORD PTR [rip+0xdea4],0x0        # 0x429390
  41b4ec:	mov    esi,eax
  41b4ee:	mov    rbp,rcx
  41b4f1:	jne    0x41b500
  41b4f3:	cmp    DWORD PTR [rip+0xde92],0x0        # 0x42938c
  41b4fa:	je     0x41b5bb
  41b500:	cmp    DWORD PTR [rip+0xde75],0x0        # 0x42937c
  41b507:	je     0x41b621
  41b50d:	cmp    DWORD PTR [rip+0xde64],0x0        # 0x429378
  41b514:	mov    edx,0x7
  41b519:	je     0x41b530
  41b51b:	mov    rax,QWORD PTR [rbx+0x8]
  41b51f:	mov    eax,DWORD PTR [rax+0x50]
  41b522:	and    eax,0x2
  41b525:	cmp    eax,0x1
  41b528:	sbb    edx,edx
  41b52a:	and    edx,0xfffffff8
  41b52d:	add    edx,0xf
  41b530:	mov    rcx,rbx
  41b533:	call   0x409380
  41b538:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b540:	cmp    DWORD PTR [rip+0xddc1],0x0        # 0x429308
  41b547:	mov    rax,QWORD PTR [rbp+0x438]
  41b54e:	mov    QWORD PTR [rsp+0xd8],rax
  41b556:	je     0x41b644
  41b55c:	xor    esi,esi
  41b55e:	xor    edi,edi
  41b560:	mov    eax,esi
  41b562:	jmp    0x41b587
  41b564:	imul   r8,rdi,0x30
  41b568:	mov    r9,QWORD PTR [rsp+0x30]
  41b56d:	mov    rdx,rbp
  41b570:	add    r8,QWORD PTR [rip+0xdd99]        # 0x429310
  41b577:	mov    rcx,rbx
  41b57a:	add    rdi,0x1
  41b57e:	call   0x40e760
  41b583:	test   eax,eax
  41b585:	js     0x41b58f
  41b587:	cmp    DWORD PTR [rip+0xdd7b],edi        # 0x429308
  41b58d:	jg     0x41b564
  41b58f:	mov    esi,eax
  41b591:	cmp    DWORD PTR [rip+0xdde4],0x0        # 0x42937c
  41b598:	jne    0x41b5a3
  41b59a:	cmp    DWORD PTR [rip+0xddd7],0x0        # 0x429378
  41b5a1:	je     0x41b5ab
  41b5a3:	mov    rcx,rbx
  41b5a6:	call   0x407ed0
  41b5ab:	test   esi,esi
  41b5ad:	js     0x41b1cb
  41b5b3:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b5bb:	cmp    DWORD PTR [rip+0xddb2],0x0        # 0x429374
  41b5c2:	jne    0x41bb76
  41b5c8:	cmp    DWORD PTR [rip+0xdda1],0x0        # 0x429370
  41b5cf:	jne    0x41b17d
  41b5d5:	cmp    DWORD PTR [rip+0xddac],0x0        # 0x429388
  41b5dc:	jne    0x41c22d
  41b5e2:	cmp    DWORD PTR [rip+0xdd97],0x0        # 0x429380
  41b5e9:	jne    0x41b685
  41b5ef:	test   rbp,rbp
  41b5f2:	jne    0x41b1dc
  41b5f8:	lea    rcx,[rip+0xdcd1]        # 0x4292d0
  41b5ff:	call   0x4123b8
  41b604:	lea    rcx,[rip+0xdccd]        # 0x4292d8
  41b60b:	call   0x4123b8
  41b610:	lea    rcx,[rip+0xdcb1]        # 0x4292c8
  41b617:	call   0x4123b8
  41b61c:	jmp    0x41b24b
  41b621:	cmp    DWORD PTR [rip+0xdd50],0x0        # 0x429378
  41b628:	je     0x41b540
  41b62e:	mov    edx,0xe
  41b633:	jmp    0x41b530
  41b638:	mov    esi,eax
  41b63a:	jmp    0x41b1cb
  41b63f:	call   0x419e29
  41b644:	lea    rdi,[rsp+0xe0]
  41b64c:	mov    r9,QWORD PTR [rsp+0x30]
  41b651:	xor    eax,eax
  41b653:	mov    ecx,0xc
  41b658:	lea    r8,[rsp+0xe0]
  41b660:	mov    rdx,rbp
  41b663:	rep stos DWORD PTR es:[rdi],eax
  41b665:	mov    rcx,rbx
  41b668:	call   0x40e760
  41b66d:	mov    esi,eax
  41b66f:	jmp    0x41b591
  41b674:	mov    ecx,esi
  41b676:	neg    ecx
  41b678:	call   0x419848
  41b67d:	mov    rbx,rax
  41b680:	jmp    0x41b2ef
  41b685:	mov    rcx,QWORD PTR [rbp+0x20]
  41b689:	or     rdi,0xffffffffffffffff
  41b68d:	test   rcx,rcx
  41b690:	je     0x41b69a
  41b692:	call   0x411fc8
  41b697:	mov    rdi,rax
  41b69a:	mov    edx,0x4
  41b69f:	mov    rcx,rbx
  41b6a2:	lea    r12,[rbp+0x38]
  41b6a6:	call   0x409380
  41b6ab:	movsxd rax,DWORD PTR [rbx+0x2c]
  41b6af:	mov    rsi,QWORD PTR [rbx+rax*8+0x58]
  41b6b4:	cmp    DWORD PTR [rsi+0x58],0x0
  41b6b8:	je     0x41b913
  41b6be:	mov    rdx,QWORD PTR [rsp+0x30]
  41b6c3:	lea    r8,[rip+0x7124]        # 0x4227ee
  41b6ca:	mov    rcx,rbx
  41b6cd:	mov    QWORD PTR [rsp+0xd8],0x0
  41b6d9:	mov    QWORD PTR [rsp+0xe0],0x0
  41b6e5:	call   0x40a740
  41b6ea:	test   eax,eax
  41b6ec:	js     0x41b8e5
  41b6f2:	lea    rdx,[rsp+0xe0]
  41b6fa:	mov    r8,r12
  41b6fd:	mov    rcx,rbx
  41b700:	call   0x40a740
  41b705:	test   eax,eax
  41b707:	js     0x41b8e5
  41b70d:	mov    rax,QWORD PTR [rbx+0x8]
  41b711:	mov    r8,QWORD PTR [rsp+0xe0]
  41b719:	mov    rcx,rbx
  41b71c:	mov    rdx,QWORD PTR [rsp+0xd8]
  41b724:	call   QWORD PTR [rax+0x48]
  41b727:	mov    rcx,QWORD PTR [rsp+0xd8]
  41b72f:	call   0x4123c0
  41b734:	mov    rcx,QWORD PTR [rsp+0xe0]
  41b73c:	call   0x4123c0
  41b741:	movsxd rax,DWORD PTR [rbx+0x2c]
  41b745:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  41b74a:	mov    r8d,DWORD PTR [rbp+0x2c]
  41b74e:	lea    rdx,[rip+0x7063]        # 0x4227b8
  41b755:	mov    rcx,rbx
  41b758:	call   0x409270
  41b75d:	mov    r8d,DWORD PTR [rbp+0x46c]
  41b764:	lea    rdx,[rip+0x708c]        # 0x4227f7
  41b76b:	mov    rcx,rbx
  41b76e:	call   0x409270
  41b773:	mov    rax,QWORD PTR [rbp+0x8]
  41b777:	lea    rdx,[rip+0x7085]        # 0x422803
  41b77e:	mov    rcx,rbx
  41b781:	mov    r8,QWORD PTR [rax]
  41b784:	call   0x40a930
  41b789:	cmp    DWORD PTR [rip+0xdc0c],0x0        # 0x42939c
  41b790:	jne    0x41b7b2
  41b792:	mov    rax,QWORD PTR [rbp+0x8]
  41b796:	mov    r8,QWORD PTR [rax+0x8]
  41b79a:	test   r8,r8
  41b79d:	je     0x41c68f
  41b7a3:	lea    rdx,[rip+0x7065]        # 0x42280f
  41b7aa:	mov    rcx,rbx
  41b7ad:	call   0x40a930
  41b7b2:	mov    r8,QWORD PTR [rbp+0x438]
  41b7b9:	lea    r9,[rsp+0xb0]
  41b7c1:	lea    rdx,[rip+0x6b4f]        # 0x422317
  41b7c8:	mov    rcx,rbx
  41b7cb:	mov    DWORD PTR [rsp+0xb0],0x1
  41b7d6:	mov    DWORD PTR [rsp+0xb4],0xf4240
  41b7e1:	call   0x40c520
  41b7e6:	mov    r8,QWORD PTR [rbp+0x440]
  41b7ed:	lea    r9,[rsp+0xa0]
  41b7f5:	lea    rdx,[rip+0x6931]        # 0x42212d
  41b7fc:	mov    rcx,rbx
  41b7ff:	mov    DWORD PTR [rsp+0xa0],0x1
  41b80a:	mov    DWORD PTR [rsp+0xa4],0xf4240
  41b815:	call   0x40c520
  41b81a:	test   rdi,rdi
  41b81d:	js     0x41bb44
  41b823:	lea    rax,[rip+0x981c]        # 0x425046
  41b82a:	lea    rdx,[rsp+0x70]
  41b82f:	lea    rcx,[rsp+0xe0]
  41b837:	mov    QWORD PTR [rsp+0x70],rdi
  41b83c:	mov    QWORD PTR [rsp+0x78],rax
  41b841:	call   0x409790
  41b846:	lea    rdx,[rip+0x6926]        # 0x422173
  41b84d:	mov    r8,rax
  41b850:	mov    rcx,rbx
  41b853:	call   0x40a930
  41b858:	movsxd rax,DWORD PTR [rbp+0x448]
  41b85f:	test   eax,eax
  41b861:	jle    0x41bb29
  41b867:	mov    QWORD PTR [rsp+0x70],rax
  41b86c:	lea    rdx,[rsp+0x70]
  41b871:	lea    rax,[rip+0x97c8]        # 0x425040
  41b878:	lea    rcx,[rsp+0xe0]
  41b880:	mov    QWORD PTR [rsp+0x78],rax
  41b885:	call   0x409790
  41b88a:	lea    rdx,[rip+0x6a9d]        # 0x42232e
  41b891:	mov    r8,rax
  41b894:	mov    rcx,rbx
  41b897:	call   0x40a930
  41b89c:	mov    rcx,rbp
  41b89f:	xor    esi,esi
  41b8a1:	call   0x412060
  41b8a6:	lea    rdx,[rip+0x6f73]        # 0x422820
  41b8ad:	movsxd r8,eax
  41b8b0:	mov    rcx,rbx
  41b8b3:	call   0x409270
  41b8b8:	cmp    DWORD PTR [rip+0xda8d],0x0        # 0x42934c
  41b8bf:	jne    0x41b937
  41b8c1:	mov    rcx,rbx
  41b8c4:	call   0x407ed0
  41b8c9:	call   QWORD PTR [rip+0x10215]        # 0x42bae4
  41b8cf:	lea    rcx,[rax+0x30]
  41b8d3:	call   0x4198f8
  41b8d8:	mov    rbp,QWORD PTR [rsp+0xc8]
  41b8e0:	jmp    0x41b5ef
  41b8e5:	mov    rax,QWORD PTR [rsi+0x48]
  41b8e9:	lea    r9,[rip+0x6efe]        # 0x4227ee
  41b8f0:	lea    r8,[rip+0x6721]        # 0x422018
  41b8f7:	mov    QWORD PTR [rsp+0x20],r12
  41b8fc:	mov    edx,0x10
  41b901:	mov    rcx,rbx
  41b904:	mov    QWORD PTR [rsp+0x28],rax
  41b909:	call   0x412308
  41b90e:	jmp    0x41b727
  41b913:	mov    rcx,QWORD PTR [rsi+0x50]
  41b917:	lea    rdx,[rip+0x6ed0]        # 0x4227ee
  41b91e:	xor    r9d,r9d
  41b921:	xor    r8d,r8d
  41b924:	call   0x412438
  41b929:	test   rax,rax
  41b92c:	jne    0x41b6be
  41b932:	jmp    0x41b74a
  41b937:	mov    r13,QWORD PTR [rbp+0x498]
  41b93e:	test   r13,r13
  41b941:	je     0x41b8c1
  41b947:	movsxd rdx,DWORD PTR [rbx+0x2c]
  41b94b:	lea    eax,[rdx+0x1]
  41b94e:	cmp    eax,0x9
  41b951:	mov    DWORD PTR [rbx+0x2c],eax
  41b954:	jg     0x41b63f
  41b95a:	test   eax,eax
  41b95c:	je     0x41ba70
  41b962:	lea    rdx,[rbx+rdx*8]
  41b966:	cdqe   
  41b968:	mov    rcx,QWORD PTR [rdx+0x58]
  41b96c:	mov    ecx,DWORD PTR [rcx]
  41b96e:	mov    DWORD PTR [rbx+rax*4+0x30],0x0
  41b976:	mov    rax,QWORD PTR [rbx+0x20]
  41b97a:	add    rax,0x1e0
  41b980:	cmp    ecx,0xf
  41b983:	mov    QWORD PTR [rdx+0x60],rax
  41b987:	jne    0x41b995
  41b989:	mov    eax,DWORD PTR [rbx+0x28ac]
  41b98f:	mov    DWORD PTR [rbx+0x28b0],eax
  41b995:	mov    rax,QWORD PTR [rbx+0x8]
  41b999:	mov    rax,QWORD PTR [rax+0x28]
  41b99d:	test   rax,rax
  41b9a0:	je     0x41b9a7
  41b9a2:	mov    rcx,rbx
  41b9a5:	call   rax
  41b9a7:	xor    esi,esi
  41b9a9:	xor    edi,edi
  41b9ab:	lea    rdx,[rip+0x5511]        # 0x420ec3
  41b9b2:	mov    r8,rdi
  41b9b5:	mov    r9d,0x2
  41b9bb:	mov    rcx,r13
  41b9be:	call   0x412438
  41b9c3:	test   rax,rax
  41b9c6:	mov    rdi,rax
  41b9c9:	je     0x41bad2
  41b9cf:	movsxd rax,DWORD PTR [rbx+0x2c]
  41b9d3:	mov    r12,QWORD PTR [rdi+0x8]
  41b9d7:	mov    rbp,QWORD PTR [rdi]
  41b9da:	mov    r14,QWORD PTR [rbx+rax*8+0x58]
  41b9df:	cmp    DWORD PTR [r14+0x58],0x0
  41b9e4:	je     0x41bb07
  41b9ea:	mov    rdx,QWORD PTR [rsp+0x38]
  41b9ef:	mov    r8,rbp
  41b9f2:	mov    rcx,rbx
  41b9f5:	mov    QWORD PTR [rsp+0xd0],0x0
  41ba01:	mov    QWORD PTR [rsp+0xd8],0x0
  41ba0d:	call   0x40a740
  41ba12:	test   eax,eax
  41ba14:	mov    esi,eax
  41ba16:	js     0x41ba8a
  41ba18:	mov    rdx,QWORD PTR [rsp+0x30]
  41ba1d:	mov    r8,r12
  41ba20:	mov    rcx,rbx
  41ba23:	call   0x40a740
  41ba28:	test   eax,eax
  41ba2a:	mov    esi,eax
  41ba2c:	js     0x41ba8a
  41ba2e:	mov    rax,QWORD PTR [rbx+0x8]
  41ba32:	mov    r8,QWORD PTR [rsp+0xd8]
  41ba3a:	mov    rcx,rbx
  41ba3d:	mov    rdx,QWORD PTR [rsp+0xd0]
  41ba45:	call   QWORD PTR [rax+0x48]
  41ba48:	mov    rcx,QWORD PTR [rsp+0xd0]
  41ba50:	call   0x4123c0
  41ba55:	mov    rcx,QWORD PTR [rsp+0xd8]
  41ba5d:	call   0x4123c0
  41ba62:	movsxd rax,DWORD PTR [rbx+0x2c]
  41ba66:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  41ba6b:	jmp    0x41b9ab
  41ba70:	mov    rax,QWORD PTR [rbx+0x20]
  41ba74:	mov    DWORD PTR [rbx+0x30],0x0
  41ba7b:	add    rax,0x1e0
  41ba81:	mov    QWORD PTR [rbx+0x58],rax
  41ba85:	jmp    0x41b995
  41ba8a:	mov    rax,QWORD PTR [r14+0x48]
  41ba8e:	lea    r8,[rip+0x6583]        # 0x422018
  41ba95:	mov    r9,rbp
  41ba98:	mov    edx,0x10
  41ba9d:	mov    rcx,rbx
  41baa0:	mov    QWORD PTR [rsp+0x20],r12
  41baa5:	mov    QWORD PTR [rsp+0x28],rax
  41baaa:	call   0x412308
  41baaf:	mov    rcx,QWORD PTR [rsp+0xd0]
  41bab7:	call   0x4123c0
  41babc:	mov    rcx,QWORD PTR [rsp+0xd8]
  41bac4:	call   0x4123c0
  41bac9:	movsxd rax,DWORD PTR [rbx+0x2c]
  41bacd:	add    DWORD PTR [rbx+rax*4+0x30],0x1
  41bad2:	mov    rcx,rbx
  41bad5:	call   0x407ed0
  41bada:	mov    rcx,rbx
  41badd:	call   0x407ed0
  41bae2:	call   QWORD PTR [rip+0xfffc]        # 0x42bae4
  41bae8:	lea    rcx,[rax+0x30]
  41baec:	call   0x4198f8
  41baf1:	mov    rbp,QWORD PTR [rsp+0xc8]
  41baf9:	test   rbp,rbp
  41bafc:	jne    0x41b1dc
  41bb02:	jmp    0x41b223
  41bb07:	mov    rcx,QWORD PTR [r14+0x50]
  41bb0b:	xor    r9d,r9d
  41bb0e:	xor    r8d,r8d
  41bb11:	mov    rdx,rbp
  41bb14:	xor    esi,esi
  41bb16:	call   0x412438
  41bb1b:	test   rax,rax
  41bb1e:	jne    0x41b9ea
  41bb24:	jmp    0x41b9ab
  41bb29:	lea    r8,[rip+0x6003]        # 0x421b33
  41bb30:	lea    rdx,[rip+0x67f7]        # 0x42232e
  41bb37:	mov    rcx,rbx
  41bb3a:	call   0x40ac10
  41bb3f:	jmp    0x41b89c
  41bb44:	lea    r8,[rip+0x5fe8]        # 0x421b33
  41bb4b:	lea    rdx,[rip+0x6621]        # 0x422173
  41bb52:	mov    rcx,rbx
  41bb55:	call   0x40ac10
  41bb5a:	jmp    0x41b858
  41bb5f:	mov    rcx,rbx
  41bb62:	mov    esi,eax
  41bb64:	call   0x407ed0
  41bb69:	mov    rbp,QWORD PTR [rsp+0xc8]
  41bb71:	jmp    0x41b5d5
  41bb76:	mov    edx,0x1e
  41bb7b:	mov    rcx,rbx
  41bb7e:	xor    r14d,r14d
  41bb81:	call   0x409380
  41bb86:	lea    rax,[rsp+0x90]
  41bb8e:	mov    QWORD PTR [rsp+0x48],r15
  41bb93:	xor    esi,esi
  41bb95:	mov    r15,rbx
  41bb98:	mov    QWORD PTR [rsp+0x58],rax
  41bb9d:	lea    rax,[rsp+0x80]
  41bba5:	mov    QWORD PTR [rsp+0x60],rax
  41bbaa:	lea    rax,[rsp+0xe0]
  41bbb2:	mov    QWORD PTR [rsp+0x68],rax
  41bbb7:	cmp    DWORD PTR [rbp+0x46c],r14d
  41bbbe:	jbe    0x41c6aa
  41bbc4:	mov    rax,QWORD PTR [rbp+0x470]
  41bbcb:	mov    rdi,QWORD PTR [rax+r14*8]
  41bbcf:	test   rdi,rdi
  41bbd2:	je     0x41bf80
  41bbd8:	movsxd rdx,DWORD PTR [r15+0x2c]
  41bbdc:	lea    eax,[rdx+0x1]
  41bbdf:	cmp    eax,0x9
  41bbe2:	mov    DWORD PTR [r15+0x2c],eax
  41bbe6:	jg     0x41b63f
  41bbec:	test   eax,eax
  41bbee:	je     0x41bf89
  41bbf4:	lea    rdx,[r15+rdx*8]
  41bbf8:	cdqe   
  41bbfa:	mov    rcx,QWORD PTR [rdx+0x58]
  41bbfe:	mov    ecx,DWORD PTR [rcx]
  41bc00:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41bc09:	mov    rax,QWORD PTR [r15+0x20]
  41bc0d:	add    rax,0x960
  41bc13:	cmp    ecx,0xf
  41bc16:	mov    QWORD PTR [rdx+0x60],rax
  41bc1a:	jne    0x41bc2a
  41bc1c:	mov    eax,DWORD PTR [r15+0x28ac]
  41bc23:	mov    DWORD PTR [r15+0x28b0],eax
  41bc2a:	mov    rax,QWORD PTR [r15+0x8]
  41bc2e:	mov    rax,QWORD PTR [rax+0x28]
  41bc32:	test   rax,rax
  41bc35:	je     0x41bc3c
  41bc37:	mov    rcx,r15
  41bc3a:	call   rax
  41bc3c:	movsxd rax,DWORD PTR [r15+0x2c]
  41bc40:	mov    ebx,DWORD PTR [rdi]
  41bc42:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bc47:	cmp    DWORD PTR [rax+0x58],0x0
  41bc4b:	jne    0x41bc68
  41bc4d:	mov    rcx,QWORD PTR [rax+0x50]
  41bc51:	lea    rdx,[rip+0x6b49]        # 0x4227a1
  41bc58:	xor    r9d,r9d
  41bc5b:	xor    r8d,r8d
  41bc5e:	call   0x412438
  41bc63:	test   rax,rax
  41bc66:	je     0x41bc86
  41bc68:	mov    rax,QWORD PTR [r15+0x8]
  41bc6c:	movsxd r8,ebx
  41bc6f:	lea    rdx,[rip+0x6b2b]        # 0x4227a1
  41bc76:	mov    rcx,r15
  41bc79:	call   QWORD PTR [rax+0x38]
  41bc7c:	movsxd rax,DWORD PTR [r15+0x2c]
  41bc80:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bc86:	movsxd rax,DWORD PTR [r15+0x2c]
  41bc8a:	mov    ebx,DWORD PTR [rdi+0x28]
  41bc8d:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bc92:	cmp    DWORD PTR [rax+0x58],0x0
  41bc96:	jne    0x41bcb3
  41bc98:	mov    rcx,QWORD PTR [rax+0x50]
  41bc9c:	lea    rdx,[rip+0x6b09]        # 0x4227ac
  41bca3:	xor    r9d,r9d
  41bca6:	xor    r8d,r8d
  41bca9:	call   0x412438
  41bcae:	test   rax,rax
  41bcb1:	je     0x41bcd1
  41bcb3:	mov    rax,QWORD PTR [r15+0x8]
  41bcb7:	movsxd r8,ebx
  41bcba:	lea    rdx,[rip+0x6aeb]        # 0x4227ac
  41bcc1:	mov    rcx,r15
  41bcc4:	call   QWORD PTR [rax+0x38]
  41bcc7:	movsxd rax,DWORD PTR [r15+0x2c]
  41bccb:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bcd1:	movsxd rax,DWORD PTR [r15+0x2c]
  41bcd5:	mov    ebx,DWORD PTR [rdi+0x18]
  41bcd8:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bcdd:	cmp    DWORD PTR [rax+0x58],0x0
  41bce1:	jne    0x41bcfe
  41bce3:	mov    rcx,QWORD PTR [rax+0x50]
  41bce7:	lea    rdx,[rip+0x6aca]        # 0x4227b8
  41bcee:	xor    r9d,r9d
  41bcf1:	xor    r8d,r8d
  41bcf4:	call   0x412438
  41bcf9:	test   rax,rax
  41bcfc:	je     0x41bd1c
  41bcfe:	mov    rax,QWORD PTR [r15+0x8]
  41bd02:	mov    r8d,ebx
  41bd05:	lea    rdx,[rip+0x6aac]        # 0x4227b8
  41bd0c:	mov    rcx,r15
  41bd0f:	call   QWORD PTR [rax+0x38]
  41bd12:	movsxd rax,DWORD PTR [r15+0x2c]
  41bd16:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bd1c:	movsxd rax,DWORD PTR [r15+0x2c]
  41bd20:	mov    ebx,DWORD PTR [rdi+0x2c]
  41bd23:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bd28:	cmp    DWORD PTR [rax+0x58],0x0
  41bd2c:	jne    0x41bd49
  41bd2e:	mov    rcx,QWORD PTR [rax+0x50]
  41bd32:	lea    rdx,[rip+0x6a8a]        # 0x4227c3
  41bd39:	xor    r9d,r9d
  41bd3c:	xor    r8d,r8d
  41bd3f:	call   0x412438
  41bd44:	test   rax,rax
  41bd47:	je     0x41bd67
  41bd49:	mov    rax,QWORD PTR [r15+0x8]
  41bd4d:	movsxd r8,ebx
  41bd50:	lea    rdx,[rip+0x6a6c]        # 0x4227c3
  41bd57:	mov    rcx,r15
  41bd5a:	call   QWORD PTR [rax+0x38]
  41bd5d:	movsxd rax,DWORD PTR [r15+0x2c]
  41bd61:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bd67:	movsxd rax,DWORD PTR [r15+0x2c]
  41bd6b:	mov    ebx,DWORD PTR [rdi+0x30]
  41bd6e:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41bd73:	cmp    DWORD PTR [rax+0x58],0x0
  41bd77:	jne    0x41bd94
  41bd79:	mov    rcx,QWORD PTR [rax+0x50]
  41bd7d:	lea    rdx,[rip+0x6a47]        # 0x4227cb
  41bd84:	xor    r9d,r9d
  41bd87:	xor    r8d,r8d
  41bd8a:	call   0x412438
  41bd8f:	test   rax,rax
  41bd92:	je     0x41bdb2
  41bd94:	mov    rax,QWORD PTR [r15+0x8]
  41bd98:	movsxd r8,ebx
  41bd9b:	lea    rdx,[rip+0x6a29]        # 0x4227cb
  41bda2:	mov    rcx,r15
  41bda5:	call   QWORD PTR [rax+0x38]
  41bda8:	movsxd rax,DWORD PTR [r15+0x2c]
  41bdac:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41bdb2:	mov    r8,QWORD PTR [rdi+0x38]
  41bdb6:	lea    rdx,[rip+0x6550]        # 0x42230d
  41bdbd:	mov    rcx,r15
  41bdc0:	xor    esi,esi
  41bdc2:	call   0x40b820
  41bdc7:	mov    r9,QWORD PTR [rsp+0x58]
  41bdcc:	mov    r8,QWORD PTR [rdi+0x38]
  41bdd0:	lea    rdx,[rip+0x6540]        # 0x422317
  41bdd7:	mov    rcx,r15
  41bdda:	mov    DWORD PTR [rsp+0x90],0x1
  41bde5:	mov    DWORD PTR [rsp+0x94],0xf4240
  41bdf0:	call   0x40c520
  41bdf5:	mov    r8,QWORD PTR [rdi+0x40]
  41bdf9:	lea    rdx,[rip+0x69d3]        # 0x4227d3
  41be00:	mov    rcx,r15
  41be03:	call   0x40b820
  41be08:	mov    r9,QWORD PTR [rsp+0x60]
  41be0d:	mov    r8,QWORD PTR [rdi+0x40]
  41be11:	lea    rdx,[rip+0x69c3]        # 0x4227db
  41be18:	mov    rcx,r15
  41be1b:	mov    DWORD PTR [rsp+0x80],0x1
  41be26:	mov    DWORD PTR [rsp+0x84],0xf4240
  41be31:	call   0x40c520
  41be36:	cmp    DWORD PTR [rip+0xd507],0x0        # 0x429344
  41be3d:	jne    0x41bfb8
  41be43:	movsxd rdx,DWORD PTR [r15+0x2c]
  41be47:	lea    eax,[rdx+0x1]
  41be4a:	cmp    eax,0x9
  41be4d:	mov    DWORD PTR [r15+0x2c],eax
  41be51:	jg     0x41b63f
  41be57:	test   eax,eax
  41be59:	je     0x41c1db
  41be5f:	lea    rdx,[r15+rdx*8]
  41be63:	cdqe   
  41be65:	mov    rcx,QWORD PTR [rdx+0x58]
  41be69:	mov    ecx,DWORD PTR [rcx]
  41be6b:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41be74:	mov    rax,QWORD PTR [r15+0x20]
  41be78:	add    rax,0x9c0
  41be7e:	cmp    ecx,0xf
  41be81:	mov    QWORD PTR [rdx+0x60],rax
  41be85:	jne    0x41be95
  41be87:	mov    eax,DWORD PTR [r15+0x28ac]
  41be8e:	mov    DWORD PTR [r15+0x28b0],eax
  41be95:	mov    rax,QWORD PTR [r15+0x8]
  41be99:	mov    rax,QWORD PTR [rax+0x28]
  41be9d:	test   rax,rax
  41bea0:	je     0x41bea7
  41bea2:	mov    rcx,r15
  41bea5:	call   rax
  41bea7:	xor    ebx,ebx
  41bea9:	mov    eax,esi
  41beab:	jmp    0x41beb1
  41bead:	add    rbx,0x1
  41beb1:	cmp    DWORD PTR [rdi+0x18],ebx
  41beb4:	jbe    0x41bee4
  41beb6:	mov    r8,QWORD PTR [rdi+0x10]
  41beba:	mov    r9,QWORD PTR [rip+0xd407]        # 0x4292c8
  41bec1:	mov    r10d,DWORD PTR [r8+rbx*4]
  41bec5:	cmp    DWORD PTR [r9+r10*4],0x0
  41beca:	mov    r8,r10
  41becd:	je     0x41bead
  41becf:	mov    r9d,0x1
  41bed5:	mov    rdx,rbp
  41bed8:	mov    rcx,r15
  41bedb:	call   0x40fb40
  41bee0:	test   eax,eax
  41bee2:	jns    0x41bead
  41bee4:	mov    esi,eax
  41bee6:	movsxd rax,DWORD PTR [r15+0x2c]
  41beea:	lea    rdx,[r15+rax*8]
  41beee:	test   eax,eax
  41bef0:	mov    r8,QWORD PTR [rdx+0x58]
  41bef4:	mov    r8d,DWORD PTR [r8]
  41bef7:	je     0x41bf21
  41bef9:	mov    rdx,QWORD PTR [rdx+0x50]
  41befd:	mov    edx,DWORD PTR [rdx]
  41beff:	cmp    edx,0xffffffff
  41bf02:	je     0x41bf21
  41bf04:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41bf0a:	cmp    edx,0xf
  41bf0d:	jne    0x41bf21
  41bf0f:	cmp    r8d,0xd
  41bf13:	je     0x41c1f6
  41bf19:	add    DWORD PTR [r15+0x28ac],0x1
  41bf21:	mov    rax,QWORD PTR [r15+0x8]
  41bf25:	mov    rax,QWORD PTR [rax+0x30]
  41bf29:	test   rax,rax
  41bf2c:	je     0x41bf33
  41bf2e:	mov    rcx,r15
  41bf31:	call   rax
  41bf33:	sub    DWORD PTR [r15+0x2c],0x1
  41bf38:	movsxd rax,DWORD PTR [r15+0x2c]
  41bf3c:	lea    rdx,[r15+rax*8]
  41bf40:	test   eax,eax
  41bf42:	mov    r8,QWORD PTR [rdx+0x58]
  41bf46:	mov    r8d,DWORD PTR [r8]
  41bf49:	je     0x41bf61
  41bf4b:	mov    rdx,QWORD PTR [rdx+0x50]
  41bf4f:	mov    edx,DWORD PTR [rdx]
  41bf51:	cmp    edx,0xffffffff
  41bf54:	je     0x41bf61
  41bf56:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41bf5c:	cmp    edx,0xf
  41bf5f:	je     0x41bfa4
  41bf61:	mov    rax,QWORD PTR [r15+0x8]
  41bf65:	mov    rax,QWORD PTR [rax+0x30]
  41bf69:	test   rax,rax
  41bf6c:	je     0x41bf73
  41bf6e:	mov    rcx,r15
  41bf71:	call   rax
  41bf73:	sub    DWORD PTR [r15+0x2c],0x1
  41bf78:	test   esi,esi
  41bf7a:	js     0x41c6c7
  41bf80:	add    r14,0x1
  41bf84:	jmp    0x41bbb7
  41bf89:	mov    rax,QWORD PTR [r15+0x20]
  41bf8d:	mov    DWORD PTR [r15+0x30],0x0
  41bf95:	add    rax,0x960
  41bf9b:	mov    QWORD PTR [r15+0x58],rax
  41bf9f:	jmp    0x41bc2a
  41bfa4:	cmp    r8d,0xd
  41bfa8:	je     0x41c213
  41bfae:	add    DWORD PTR [r15+0x28ac],0x1
  41bfb6:	jmp    0x41bf61
  41bfb8:	mov    rax,QWORD PTR [rdi+0x20]
  41bfbc:	test   rax,rax
  41bfbf:	mov    QWORD PTR [rsp+0x50],rax
  41bfc4:	je     0x41be43
  41bfca:	movsxd rdx,DWORD PTR [r15+0x2c]
  41bfce:	lea    eax,[rdx+0x1]
  41bfd1:	cmp    eax,0x9
  41bfd4:	mov    DWORD PTR [r15+0x2c],eax
  41bfd8:	jg     0x41b63f
  41bfde:	test   eax,eax
  41bfe0:	je     0x41c1c0
  41bfe6:	lea    rdx,[r15+rdx*8]
  41bfea:	cdqe   
  41bfec:	mov    rcx,QWORD PTR [rdx+0x58]
  41bff0:	mov    ecx,DWORD PTR [rcx]
  41bff2:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41bffb:	mov    rax,QWORD PTR [r15+0x20]
  41bfff:	add    rax,0xa80
  41c005:	cmp    ecx,0xf
  41c008:	mov    QWORD PTR [rdx+0x60],rax
  41c00c:	jne    0x41c01c
  41c00e:	mov    eax,DWORD PTR [r15+0x28ac]
  41c015:	mov    DWORD PTR [r15+0x28b0],eax
  41c01c:	mov    rax,QWORD PTR [r15+0x8]
  41c020:	mov    rax,QWORD PTR [rax+0x28]
  41c024:	test   rax,rax
  41c027:	je     0x41c02e
  41c029:	mov    rcx,r15
  41c02c:	call   rax
  41c02e:	xor    esi,esi
  41c030:	xor    r12d,r12d
  41c033:	mov    rcx,QWORD PTR [rsp+0x50]
  41c038:	lea    rdx,[rip+0x4e84]        # 0x420ec3
  41c03f:	mov    r8,r12
  41c042:	mov    r9d,0x2
  41c048:	call   0x412438
  41c04d:	test   rax,rax
  41c050:	mov    r12,rax
  41c053:	je     0x41c173
  41c059:	mov    rax,QWORD PTR [r12+0x8]
  41c05e:	mov    r13,QWORD PTR [r12]
  41c062:	mov    QWORD PTR [rsp+0x40],rax
  41c067:	movsxd rax,DWORD PTR [r15+0x2c]
  41c06b:	mov    rbx,QWORD PTR [r15+rax*8+0x58]
  41c070:	cmp    DWORD PTR [rbx+0x58],0x0
  41c074:	je     0x41c103
  41c07a:	mov    rdx,QWORD PTR [rsp+0x30]
  41c07f:	mov    r8,r13
  41c082:	mov    rcx,r15
  41c085:	mov    QWORD PTR [rsp+0xd8],0x0
  41c091:	mov    QWORD PTR [rsp+0xe0],0x0
  41c09d:	call   0x40a740
  41c0a2:	test   eax,eax
  41c0a4:	mov    esi,eax
  41c0a6:	js     0x41c125
  41c0a8:	mov    r8,QWORD PTR [rsp+0x40]
  41c0ad:	mov    rdx,QWORD PTR [rsp+0x68]
  41c0b2:	mov    rcx,r15
  41c0b5:	call   0x40a740
  41c0ba:	test   eax,eax
  41c0bc:	mov    esi,eax
  41c0be:	js     0x41c125
  41c0c0:	mov    rax,QWORD PTR [r15+0x8]
  41c0c4:	mov    r8,QWORD PTR [rsp+0xe0]
  41c0cc:	mov    rcx,r15
  41c0cf:	mov    rdx,QWORD PTR [rsp+0xd8]
  41c0d7:	call   QWORD PTR [rax+0x48]
  41c0da:	mov    rcx,QWORD PTR [rsp+0xd8]
  41c0e2:	call   0x4123c0
  41c0e7:	mov    rcx,QWORD PTR [rsp+0xe0]
  41c0ef:	call   0x4123c0
  41c0f4:	movsxd rax,DWORD PTR [r15+0x2c]
  41c0f8:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c0fe:	jmp    0x41c033
  41c103:	mov    rcx,QWORD PTR [rbx+0x50]
  41c107:	xor    r9d,r9d
  41c10a:	xor    r8d,r8d
  41c10d:	mov    rdx,r13
  41c110:	xor    esi,esi
  41c112:	call   0x412438
  41c117:	test   rax,rax
  41c11a:	jne    0x41c07a
  41c120:	jmp    0x41c033
  41c125:	mov    rax,QWORD PTR [rbx+0x48]
  41c129:	lea    r8,[rip+0x5ee8]        # 0x422018
  41c130:	mov    r9,r13
  41c133:	mov    edx,0x10
  41c138:	mov    rcx,r15
  41c13b:	mov    QWORD PTR [rsp+0x28],rax
  41c140:	mov    rax,QWORD PTR [rsp+0x40]
  41c145:	mov    QWORD PTR [rsp+0x20],rax
  41c14a:	call   0x412308
  41c14f:	mov    rcx,QWORD PTR [rsp+0xd8]
  41c157:	call   0x4123c0
  41c15c:	mov    rcx,QWORD PTR [rsp+0xe0]
  41c164:	call   0x4123c0
  41c169:	movsxd rax,DWORD PTR [r15+0x2c]
  41c16d:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c173:	movsxd rax,DWORD PTR [r15+0x2c]
  41c177:	lea    rdx,[r15+rax*8]
  41c17b:	test   eax,eax
  41c17d:	mov    r8,QWORD PTR [rdx+0x58]
  41c181:	mov    r8d,DWORD PTR [r8]
  41c184:	je     0x41c19c
  41c186:	mov    rdx,QWORD PTR [rdx+0x50]
  41c18a:	mov    edx,DWORD PTR [rdx]
  41c18c:	cmp    edx,0xffffffff
  41c18f:	je     0x41c19c
  41c191:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41c197:	cmp    edx,0xf
  41c19a:	je     0x41c203
  41c19c:	mov    rax,QWORD PTR [r15+0x8]
  41c1a0:	mov    rax,QWORD PTR [rax+0x30]
  41c1a4:	test   rax,rax
  41c1a7:	je     0x41c1ae
  41c1a9:	mov    rcx,r15
  41c1ac:	call   rax
  41c1ae:	sub    DWORD PTR [r15+0x2c],0x1
  41c1b3:	test   esi,esi
  41c1b5:	js     0x41bf38
  41c1bb:	jmp    0x41be43
  41c1c0:	mov    rax,QWORD PTR [r15+0x20]
  41c1c4:	mov    DWORD PTR [r15+0x30],0x0
  41c1cc:	add    rax,0xa80
  41c1d2:	mov    QWORD PTR [r15+0x58],rax
  41c1d6:	jmp    0x41c01c
  41c1db:	mov    rax,QWORD PTR [r15+0x20]
  41c1df:	mov    DWORD PTR [r15+0x30],0x0
  41c1e7:	add    rax,0x9c0
  41c1ed:	mov    QWORD PTR [r15+0x58],rax
  41c1f1:	jmp    0x41be95
  41c1f6:	add    DWORD PTR [r15+0x28a8],0x1
  41c1fe:	jmp    0x41bf21
  41c203:	cmp    r8d,0xd
  41c207:	je     0x41c220
  41c209:	add    DWORD PTR [r15+0x28ac],0x1
  41c211:	jmp    0x41c19c
  41c213:	add    DWORD PTR [r15+0x28a8],0x1
  41c21b:	jmp    0x41bf61
  41c220:	add    DWORD PTR [r15+0x28a8],0x1
  41c228:	jmp    0x41c19c
  41c22d:	mov    edx,0x2
  41c232:	mov    rcx,rbx
  41c235:	xor    r12d,r12d
  41c238:	call   0x409380
  41c23d:	lea    rax,[rsp+0xe0]
  41c245:	mov    QWORD PTR [rsp+0x50],r15
  41c24a:	xor    esi,esi
  41c24c:	mov    r15,rbx
  41c24f:	mov    QWORD PTR [rsp+0x48],rax
  41c254:	jmp    0x41c3d5
  41c259:	lea    rdx,[r15+rdx*8]
  41c25d:	cdqe   
  41c25f:	mov    rcx,QWORD PTR [rdx+0x58]
  41c263:	mov    ecx,DWORD PTR [rcx]
  41c265:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41c26e:	mov    rax,QWORD PTR [r15+0x20]
  41c272:	cmp    ecx,0xf
  41c275:	mov    QWORD PTR [rdx+0x60],rax
  41c279:	jne    0x41c289
  41c27b:	mov    eax,DWORD PTR [r15+0x28ac]
  41c282:	mov    DWORD PTR [r15+0x28b0],eax
  41c289:	mov    rax,QWORD PTR [r15+0x8]
  41c28d:	mov    rax,QWORD PTR [rax+0x28]
  41c291:	test   rax,rax
  41c294:	je     0x41c29b
  41c296:	mov    rcx,r15
  41c299:	call   rax
  41c29b:	movsxd rax,DWORD PTR [r15+0x2c]
  41c29f:	mov    edi,DWORD PTR [rbx]
  41c2a1:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41c2a6:	cmp    DWORD PTR [rax+0x58],0x0
  41c2aa:	jne    0x41c2c7
  41c2ac:	mov    rcx,QWORD PTR [rax+0x50]
  41c2b0:	lea    rdx,[rip+0x6037]        # 0x4222ee
  41c2b7:	xor    r9d,r9d
  41c2ba:	xor    r8d,r8d
  41c2bd:	call   0x412438
  41c2c2:	test   rax,rax
  41c2c5:	je     0x41c2e5
  41c2c7:	mov    rax,QWORD PTR [r15+0x8]
  41c2cb:	movsxd r8,edi
  41c2ce:	lea    rdx,[rip+0x6019]        # 0x4222ee
  41c2d5:	mov    rcx,r15
  41c2d8:	call   QWORD PTR [rax+0x38]
  41c2db:	movsxd rax,DWORD PTR [r15+0x2c]
  41c2df:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c2e5:	mov    rdx,QWORD PTR [rbx+0x4]
  41c2e9:	mov    rcx,r15
  41c2ec:	call   0x40bf30
  41c2f1:	movsxd rax,DWORD PTR [r15+0x2c]
  41c2f5:	mov    rdi,QWORD PTR [rbx+0x10]
  41c2f9:	mov    rax,QWORD PTR [r15+rax*8+0x58]
  41c2fe:	cmp    DWORD PTR [rax+0x58],0x0
  41c302:	jne    0x41c31f
  41c304:	mov    rcx,QWORD PTR [rax+0x50]
  41c308:	lea    rdx,[rip+0x64d5]        # 0x4227e4
  41c30f:	xor    r9d,r9d
  41c312:	xor    r8d,r8d
  41c315:	call   0x412438
  41c31a:	test   rax,rax
  41c31d:	je     0x41c33d
  41c31f:	mov    rax,QWORD PTR [r15+0x8]
  41c323:	mov    r8,rdi
  41c326:	lea    rdx,[rip+0x64b7]        # 0x4227e4
  41c32d:	mov    rcx,r15
  41c330:	call   QWORD PTR [rax+0x38]
  41c333:	movsxd rax,DWORD PTR [r15+0x2c]
  41c337:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c33d:	lea    rdi,[rbx+0x4]
  41c341:	mov    r8,QWORD PTR [rbx+0x10]
  41c345:	lea    rdx,[rip+0x5fcb]        # 0x422317
  41c34c:	mov    rcx,r15
  41c34f:	mov    r9,rdi
  41c352:	call   0x40c520
  41c357:	mov    r8,QWORD PTR [rbx+0x18]
  41c35b:	lea    rdx,[rip+0x6488]        # 0x4227ea
  41c362:	mov    rcx,r15
  41c365:	call   0x409270
  41c36a:	mov    r8,QWORD PTR [rbx+0x18]
  41c36e:	lea    rdx,[rip+0x6466]        # 0x4227db
  41c375:	mov    r9,rdi
  41c378:	mov    rcx,r15
  41c37b:	call   0x40c520
  41c380:	cmp    DWORD PTR [rip+0xcfc9],0x0        # 0x429350
  41c387:	jne    0x41c41e
  41c38d:	movsxd rax,DWORD PTR [r15+0x2c]
  41c391:	lea    rdx,[r15+rax*8]
  41c395:	test   eax,eax
  41c397:	mov    r8,QWORD PTR [rdx+0x58]
  41c39b:	mov    r8d,DWORD PTR [r8]
  41c39e:	je     0x41c3ba
  41c3a0:	mov    rdx,QWORD PTR [rdx+0x50]
  41c3a4:	mov    edx,DWORD PTR [rdx]
  41c3a6:	cmp    edx,0xffffffff
  41c3a9:	je     0x41c3ba
  41c3ab:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41c3b1:	cmp    edx,0xf
  41c3b4:	je     0x41c626
  41c3ba:	mov    rax,QWORD PTR [r15+0x8]
  41c3be:	mov    rax,QWORD PTR [rax+0x30]
  41c3c2:	test   rax,rax
  41c3c5:	je     0x41c3cc
  41c3c7:	mov    rcx,r15
  41c3ca:	call   rax
  41c3cc:	sub    DWORD PTR [r15+0x2c],0x1
  41c3d1:	add    r12,0x1
  41c3d5:	cmp    DWORD PTR [rbp+0x48c],r12d
  41c3dc:	jbe    0x41c66a
  41c3e2:	movsxd rdx,DWORD PTR [r15+0x2c]
  41c3e6:	mov    rax,QWORD PTR [rbp+0x490]
  41c3ed:	mov    rbx,QWORD PTR [rax+r12*8]
  41c3f1:	lea    eax,[rdx+0x1]
  41c3f4:	cmp    eax,0x9
  41c3f7:	mov    DWORD PTR [r15+0x2c],eax
  41c3fb:	jg     0x41b63f
  41c401:	test   eax,eax
  41c403:	jne    0x41c259
  41c409:	mov    rax,QWORD PTR [r15+0x20]
  41c40d:	mov    DWORD PTR [r15+0x30],0x0
  41c415:	mov    QWORD PTR [r15+0x58],rax
  41c419:	jmp    0x41c289
  41c41e:	mov    rax,QWORD PTR [rbx+0x20]
  41c422:	test   rax,rax
  41c425:	mov    QWORD PTR [rsp+0x40],rax
  41c42a:	je     0x41c649
  41c430:	movsxd rdx,DWORD PTR [r15+0x2c]
  41c434:	lea    eax,[rdx+0x1]
  41c437:	cmp    eax,0x9
  41c43a:	mov    DWORD PTR [r15+0x2c],eax
  41c43e:	jg     0x41b63f
  41c444:	test   eax,eax
  41c446:	je     0x41c60d
  41c44c:	lea    rdx,[r15+rdx*8]
  41c450:	cdqe   
  41c452:	mov    rcx,QWORD PTR [rdx+0x58]
  41c456:	mov    ecx,DWORD PTR [rcx]
  41c458:	mov    DWORD PTR [r15+rax*4+0x30],0x0
  41c461:	mov    rax,QWORD PTR [r15+0x20]
  41c465:	add    rax,0x60
  41c469:	cmp    ecx,0xf
  41c46c:	mov    QWORD PTR [rdx+0x60],rax
  41c470:	jne    0x41c480
  41c472:	mov    eax,DWORD PTR [r15+0x28ac]
  41c479:	mov    DWORD PTR [r15+0x28b0],eax
  41c480:	mov    rax,QWORD PTR [r15+0x8]
  41c484:	mov    rax,QWORD PTR [rax+0x28]
  41c488:	test   rax,rax
  41c48b:	je     0x41c492
  41c48d:	mov    rcx,r15
  41c490:	call   rax
  41c492:	xor    esi,esi
  41c494:	xor    edi,edi
  41c496:	mov    rcx,QWORD PTR [rsp+0x40]
  41c49b:	lea    rdx,[rip+0x4a21]        # 0x420ec3
  41c4a2:	mov    r8,rdi
  41c4a5:	mov    r9d,0x2
  41c4ab:	call   0x412438
  41c4b0:	test   rax,rax
  41c4b3:	mov    rdi,rax
  41c4b6:	je     0x41c5a6
  41c4bc:	movsxd rax,DWORD PTR [r15+0x2c]
  41c4c0:	mov    r14,QWORD PTR [rdi+0x8]
  41c4c4:	mov    r13,QWORD PTR [rdi]
  41c4c7:	mov    rbx,QWORD PTR [r15+rax*8+0x58]
  41c4cc:	cmp    DWORD PTR [rbx+0x58],0x0
  41c4d0:	je     0x41c5eb
  41c4d6:	mov    rdx,QWORD PTR [rsp+0x30]
  41c4db:	mov    r8,r13
  41c4de:	mov    rcx,r15
  41c4e1:	mov    QWORD PTR [rsp+0xd8],0x0
  41c4ed:	mov    QWORD PTR [rsp+0xe0],0x0
  41c4f9:	call   0x40a740
  41c4fe:	test   eax,eax
  41c500:	mov    esi,eax
  41c502:	js     0x41c55d
  41c504:	mov    rdx,QWORD PTR [rsp+0x48]
  41c509:	mov    r8,r14
  41c50c:	mov    rcx,r15
  41c50f:	call   0x40a740
  41c514:	test   eax,eax
  41c516:	mov    esi,eax
  41c518:	js     0x41c55d
  41c51a:	mov    rax,QWORD PTR [r15+0x8]
  41c51e:	mov    r8,QWORD PTR [rsp+0xe0]
  41c526:	mov    rcx,r15
  41c529:	mov    rdx,QWORD PTR [rsp+0xd8]
  41c531:	call   QWORD PTR [rax+0x48]
  41c534:	mov    rcx,QWORD PTR [rsp+0xd8]
  41c53c:	call   0x4123c0
  41c541:	mov    rcx,QWORD PTR [rsp+0xe0]
  41c549:	call   0x4123c0
  41c54e:	movsxd rax,DWORD PTR [r15+0x2c]
  41c552:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c558:	jmp    0x41c496
  41c55d:	mov    rax,QWORD PTR [rbx+0x48]
  41c561:	lea    r8,[rip+0x5ab0]        # 0x422018
  41c568:	mov    r9,r13
  41c56b:	mov    edx,0x10
  41c570:	mov    rcx,r15
  41c573:	mov    QWORD PTR [rsp+0x20],r14
  41c578:	mov    QWORD PTR [rsp+0x28],rax
  41c57d:	call   0x412308
  41c582:	mov    rcx,QWORD PTR [rsp+0xd8]
  41c58a:	call   0x4123c0
  41c58f:	mov    rcx,QWORD PTR [rsp+0xe0]
  41c597:	call   0x4123c0
  41c59c:	movsxd rax,DWORD PTR [r15+0x2c]
  41c5a0:	add    DWORD PTR [r15+rax*4+0x30],0x1
  41c5a6:	movsxd rax,DWORD PTR [r15+0x2c]
  41c5aa:	lea    rdx,[r15+rax*8]
  41c5ae:	test   eax,eax
  41c5b0:	mov    r8,QWORD PTR [rdx+0x58]
  41c5b4:	mov    r8d,DWORD PTR [r8]
  41c5b7:	je     0x41c5cf
  41c5b9:	mov    rdx,QWORD PTR [rdx+0x50]
  41c5bd:	mov    edx,DWORD PTR [rdx]
  41c5bf:	cmp    edx,0xffffffff
  41c5c2:	je     0x41c5cf
  41c5c4:	add    DWORD PTR [r15+rax*4+0x2c],0x1
  41c5ca:	cmp    edx,0xf
  41c5cd:	je     0x41c639
  41c5cf:	mov    rax,QWORD PTR [r15+0x8]
  41c5d3:	mov    rax,QWORD PTR [rax+0x30]
  41c5d7:	test   rax,rax
  41c5da:	je     0x41c5e1
  41c5dc:	mov    rcx,r15
  41c5df:	call   rax
  41c5e1:	sub    DWORD PTR [r15+0x2c],0x1
  41c5e6:	jmp    0x41c38d
  41c5eb:	mov    rcx,QWORD PTR [rbx+0x50]
  41c5ef:	xor    r9d,r9d
  41c5f2:	xor    r8d,r8d
  41c5f5:	mov    rdx,r13
  41c5f8:	xor    esi,esi
  41c5fa:	call   0x412438
  41c5ff:	test   rax,rax
  41c602:	jne    0x41c4d6
  41c608:	jmp    0x41c496
  41c60d:	mov    rax,QWORD PTR [r15+0x20]
  41c611:	mov    DWORD PTR [r15+0x30],0x0
  41c619:	add    rax,0x60
  41c61d:	mov    QWORD PTR [r15+0x58],rax
  41c621:	jmp    0x41c480
  41c626:	cmp    r8d,0xd
  41c62a:	je     0x41c650
  41c62c:	add    DWORD PTR [r15+0x28ac],0x1
  41c634:	jmp    0x41c3ba
  41c639:	cmp    r8d,0xd
  41c63d:	je     0x41c65d
  41c63f:	add    DWORD PTR [r15+0x28ac],0x1
  41c647:	jmp    0x41c5cf
  41c649:	xor    esi,esi
  41c64b:	jmp    0x41c38d
  41c650:	add    DWORD PTR [r15+0x28a8],0x1
  41c658:	jmp    0x41c3ba
  41c65d:	add    DWORD PTR [r15+0x28a8],0x1
  41c665:	jmp    0x41c5cf
  41c66a:	mov    rbx,r15
  41c66d:	mov    r15,QWORD PTR [rsp+0x50]
  41c672:	mov    rcx,rbx
  41c675:	call   0x407ed0
  41c67a:	test   esi,esi
  41c67c:	js     0x41b1cb
  41c682:	mov    rbp,QWORD PTR [rsp+0xc8]
  41c68a:	jmp    0x41b5e2
  41c68f:	lea    r8,[rip+0x57f8]        # 0x421e8e
  41c696:	lea    rdx,[rip+0x6172]        # 0x42280f
  41c69d:	mov    rcx,rbx
  41c6a0:	call   0x40ac10
  41c6a5:	jmp    0x41b7b2
  41c6aa:	mov    rbx,r15
  41c6ad:	mov    r15,QWORD PTR [rsp+0x48]
  41c6b2:	mov    rcx,rbx
  41c6b5:	call   0x407ed0
  41c6ba:	mov    rbp,QWORD PTR [rsp+0xc8]
  41c6c2:	jmp    0x41b5c8
  41c6c7:	mov    rbx,r15
  41c6ca:	mov    r15,QWORD PTR [rsp+0x48]
  41c6cf:	mov    rcx,rbx
  41c6d2:	call   0x407ed0
  41c6d7:	jmp    0x41b1cb
  41c6dc:	nop
  41c6dd:	nop
  41c6de:	nop
  41c6df:	nop
  41c6e0:	(bad)  
  41c6e1:	(bad)  
  41c6e2:	(bad)  
  41c6e3:	(bad)  
  41c6e4:	(bad)  
  41c6e5:	(bad)  
  41c6e6:	(bad)  
  41c6e7:	inc    DWORD PTR [rax]
  41c6e9:	add    BYTE PTR [rax],al
  41c6eb:	add    BYTE PTR [rax],al
  41c6ed:	add    BYTE PTR [rax],al
  41c6ef:	add    bh,bh
  41c6f1:	(bad)  
  41c6f2:	(bad)  
  41c6f3:	(bad)  
  41c6f4:	(bad)  
  41c6f5:	(bad)  
  41c6f6:	(bad)  
  41c6f7:	inc    DWORD PTR [rax]
  41c6f9:	add    BYTE PTR [rax],al
  41c6fb:	add    BYTE PTR [rax],al
  41c6fd:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

000000000041d000 <.data>:
  41d000:	or     al,BYTE PTR [rax]
	...
  41d03e:	add    BYTE PTR [rax],al
  41d040:	add    dh,bh
  41d042:	add    BYTE PTR [r8],al
  41d045:	add    BYTE PTR [rax],al
  41d047:	add    al,bh
  41d049:	(bad)  
  41d04a:	(bad)  
  41d04b:	inc    DWORD PTR [rax]
  41d04d:	add    BYTE PTR [rax],al
  41d04f:	add    BYTE PTR [rsi],al
  41d051:	inc    BYTE PTR [rcx+0x0]
	...
  41d060:	or     al,0xfe
  41d062:	add    BYTE PTR [r8],al
  41d065:	add    BYTE PTR [rax],al
  41d067:	add    BYTE PTR [rax],cl
  41d069:	add    BYTE PTR [rax],al
  41d06b:	add    BYTE PTR [rax],al
  41d06d:	add    BYTE PTR [rax],al
  41d06f:	add    BYTE PTR [rdx],dl
  41d071:	inc    BYTE PTR [rcx+0x0]
  41d074:	add    BYTE PTR [rax],al
  41d076:	add    BYTE PTR [rax],al
  41d078:	adc    BYTE PTR [rax],al
  41d07a:	add    BYTE PTR [rax],al
  41d07c:	add    BYTE PTR [rax],al
  41d07e:	add    BYTE PTR [rax],al
  41d080:	sbb    dh,bh
  41d082:	add    BYTE PTR [r8],al
  41d085:	add    BYTE PTR [rax],al
  41d087:	add    BYTE PTR [rax],bl
  41d089:	add    BYTE PTR [rax],al
  41d08b:	add    BYTE PTR [rax],al
  41d08d:	add    BYTE PTR [rax],al
  41d08f:	add    BYTE PTR [rax],ah
  41d091:	inc    BYTE PTR [rcx+0x0]
  41d094:	add    BYTE PTR [rax],al
  41d096:	add    BYTE PTR [rax],al
  41d098:	and    BYTE PTR [rax],al
  41d09a:	add    BYTE PTR [rax],al
  41d09c:	add    BYTE PTR [rax],al
  41d09e:	add    BYTE PTR [rax],al
  41d0a0:	and    eax,0x41fe
  41d0a5:	add    BYTE PTR [rax],al
  41d0a7:	add    BYTE PTR [rax],ch
  41d0a9:	add    BYTE PTR [rax],al
  41d0ab:	add    BYTE PTR [rax],al
  41d0ad:	add    BYTE PTR [rax],al
  41d0af:	add    bl,ch
  41d0b1:	cli    
  41d0b2:	add    BYTE PTR [r8],al
  41d0b5:	add    BYTE PTR [rax],al
  41d0b7:	add    BYTE PTR [rax],dh
  41d0b9:	add    BYTE PTR [rax],al
  41d0bb:	add    BYTE PTR [rax],al
  41d0bd:	add    BYTE PTR [rax],al
  41d0bf:	add    BYTE PTR [rip+0x41fe],ch        # 0x4212c3
  41d0c5:	add    BYTE PTR [rax],al
  41d0c7:	add    BYTE PTR [rax],bh
  41d0c9:	add    BYTE PTR [rax],al
  41d0cb:	add    BYTE PTR [rax],al
  41d0cd:	add    BYTE PTR [rax],al
  41d0cf:	add    BYTE PTR [rcx],al
  41d0d1:	add    BYTE PTR [rax],al
  41d0d3:	add    BYTE PTR [rax],dh
	...
  41d0fd:	add    BYTE PTR [rax],al
  41d0ff:	add    BYTE PTR [rax+0x3b],al
  41d102:	rex.X add BYTE PTR [rax],al
  41d105:	add    BYTE PTR [rax],al
  41d107:	add    BYTE PTR [rax],bl
  41d109:	add    BYTE PTR [rax],al
  41d10b:	add    BYTE PTR [rax],al
  41d10d:	add    BYTE PTR [rax],al
  41d10f:	add    BYTE PTR [rsi+rcx*1+0x42],ch
  41d116:	add    BYTE PTR [rax],al
  41d118:	xchg   ebx,eax
  41d119:	popf   
  41d11a:	add    BYTE PTR [r8],al
	...
  41d125:	add    BYTE PTR [rax],al
  41d127:	add    BYTE PTR [rax],dl
  41d129:	add    DWORD PTR [rax+0x0],0x0
  41d130:	(bad)  
  41d131:	add    BYTE PTR [rax+0x0],0x0
  41d135:	add    BYTE PTR [rax],al
  41d137:	add    BYTE PTR [rax],ah
  41d139:	add    BYTE PTR [rax+0x0],0x0
	...
  41d145:	add    BYTE PTR [rax],al
  41d147:	add    BYTE PTR [rax-0x39],al
  41d14a:	add    BYTE PTR [rax],al
  41d14d:	add    BYTE PTR [rax],al
  41d14f:	add    BYTE PTR [rdx],al
	...
  41d185:	add    BYTE PTR [rax],al
  41d187:	add    al,dl
  41d189:	push   rax
  41d18a:	rex.X add BYTE PTR [rax],al
  41d18d:	add    BYTE PTR [rax],al
  41d18f:	add    BYTE PTR [rax],al
  41d191:	add    BYTE PTR [rax],al
  41d193:	add    BYTE PTR [rcx],al
  41d195:	add    BYTE PTR [rax],al
  41d197:	add    bh,bh
  41d199:	(bad)  
  41d19a:	(bad)  
  41d19b:	inc    DWORD PTR [rax]
	...
  41d1dd:	add    BYTE PTR [rax],al
  41d1df:	add    BYTE PTR [rcx],al
  41d1e1:	add    BYTE PTR [rax],al
  41d1e3:	add    BYTE PTR [rax],al
  41d1e5:	add    BYTE PTR [rax],al
  41d1e7:	add    al,bl
  41d1e9:	push   rax
  41d1ea:	rex.X add BYTE PTR [rax],al
  41d1ed:	add    BYTE PTR [rax],al
  41d1ef:	add    BYTE PTR [rax+rax*1],al
  41d1f2:	add    BYTE PTR [rax],al
  41d1f4:	(bad)  
  41d1f5:	(bad)  
  41d1f6:	(bad)  
  41d1f7:	inc    DWORD PTR [rax]
	...
  41d21d:	add    BYTE PTR [rax],al
  41d21f:	add    ch,bl
  41d221:	push   rax
  41d222:	rex.X add BYTE PTR [rax],al
  41d225:	add    BYTE PTR [rax],al
  41d227:	add    cl,ah
  41d229:	push   rax
  41d22a:	rex.X add BYTE PTR [rax],al
	...
  41d23d:	add    BYTE PTR [rax],al
  41d23f:	add    BYTE PTR [rdx],al
  41d241:	add    BYTE PTR [rax],al
  41d243:	add    BYTE PTR [rax],al
  41d245:	add    BYTE PTR [rax],al
  41d247:	add    dh,ch
  41d249:	push   rax
  41d24a:	rex.X add BYTE PTR [rax],al
  41d24d:	add    BYTE PTR [rax],al
  41d24f:	add    BYTE PTR [rdx],al
  41d251:	add    BYTE PTR [rax],al
  41d253:	add    BYTE PTR [rax],al
  41d255:	add    BYTE PTR [rax],al
  41d257:	add    bh,bh
  41d259:	(bad)  
  41d25a:	(bad)  
  41d25b:	inc    DWORD PTR [rax]
	...
  41d29d:	add    BYTE PTR [rax],al
  41d29f:	add    BYTE PTR [rbx],al
  41d2a1:	add    BYTE PTR [rax],al
  41d2a3:	add    BYTE PTR [rax],al
  41d2a5:	add    BYTE PTR [rax],al
  41d2a7:	add    bh,dh
  41d2a9:	push   rax
  41d2aa:	rex.X add BYTE PTR [rax],al
  41d2ad:	add    BYTE PTR [rax],al
  41d2af:	add    BYTE PTR [rax],al
  41d2b1:	add    BYTE PTR [rax],al
  41d2b3:	add    bh,bh
  41d2b5:	(bad)  
  41d2b6:	(bad)  
  41d2b7:	inc    DWORD PTR [rax]
	...
  41d2fd:	add    BYTE PTR [rax],al
  41d2ff:	add    BYTE PTR [rax+rax*1],al
  41d302:	add    BYTE PTR [rax],al
  41d304:	add    BYTE PTR [rax],al
  41d306:	add    BYTE PTR [rax],al
  41d308:	pop    rcx
  41d309:	(bad)  
  41d30a:	rex.X add BYTE PTR [rax],al
  41d30d:	add    BYTE PTR [rax],al
  41d30f:	add    BYTE PTR [rax],al
  41d311:	add    BYTE PTR [rax],al
  41d313:	add    BYTE PTR [rip+0xffffffffff000000],al        # 0xffffffffff41d319
  41d319:	(bad)  
  41d31a:	(bad)  
  41d31b:	inc    DWORD PTR [rax]
	...
  41d35d:	add    BYTE PTR [rax],al
  41d35f:	add    BYTE PTR [rip+0x0],al        # 0x41d365
  41d365:	add    BYTE PTR [rax],al
  41d367:	add    al,bl
  41d369:	push   rax
  41d36a:	rex.X add BYTE PTR [rax],al
  41d36d:	add    BYTE PTR [rax],al
  41d36f:	add    BYTE PTR [rax+rax*1],al
  41d372:	add    BYTE PTR [rax],al
  41d374:	(bad)  
  41d375:	(bad)  
  41d376:	(bad)  
  41d377:	inc    DWORD PTR [rax]
	...
  41d39d:	add    BYTE PTR [rax],al
  41d39f:	add    ch,bl
  41d3a1:	push   rax
  41d3a2:	rex.X add BYTE PTR [rax],al
  41d3a5:	add    BYTE PTR [rax],al
  41d3a7:	add    ch,bh
  41d3a9:	push   rax
  41d3aa:	rex.X add BYTE PTR [rax],al
	...
  41d3bd:	add    BYTE PTR [rax],al
  41d3bf:	add    BYTE PTR [rsi],al
  41d3c1:	add    BYTE PTR [rax],al
  41d3c3:	add    BYTE PTR [rax],al
  41d3c5:	add    BYTE PTR [rax],al
  41d3c7:	add    BYTE PTR [rcx],cl
  41d3c9:	push   rcx
  41d3ca:	rex.X add BYTE PTR [rax],al
  41d3cd:	add    BYTE PTR [rax],al
  41d3cf:	add    BYTE PTR [rax],al
  41d3d1:	add    BYTE PTR [rax],al
  41d3d3:	add    BYTE PTR [rax],cl
  41d3d5:	add    BYTE PTR [rax],al
  41d3d7:	add    BYTE PTR [rcx],cl
  41d3d9:	add    BYTE PTR [rax],al
  41d3db:	add    bh,bh
  41d3dd:	(bad)  
  41d3de:	(bad)  
  41d3df:	inc    DWORD PTR [rax]
	...
  41d41d:	add    BYTE PTR [rax],al
  41d41f:	add    BYTE PTR [rdi],al
  41d421:	add    BYTE PTR [rax],al
  41d423:	add    BYTE PTR [rax],al
  41d425:	add    BYTE PTR [rax],al
  41d427:	add    BYTE PTR [rdi],cl
  41d429:	push   rcx
  41d42a:	rex.X add BYTE PTR [rax],al
  41d42d:	add    BYTE PTR [rax],al
  41d42f:	add    BYTE PTR [rdx],al
  41d431:	add    BYTE PTR [rax],al
  41d433:	add    BYTE PTR [rsi],al
  41d435:	add    BYTE PTR [rax],al
  41d437:	add    BYTE PTR [rsi],ah
  41d439:	add    BYTE PTR [rax],al
  41d43b:	add    bh,bh
  41d43d:	(bad)  
  41d43e:	(bad)  
  41d43f:	inc    DWORD PTR [rax]
	...
  41d47d:	add    BYTE PTR [rax],al
  41d47f:	add    BYTE PTR [rax],cl
  41d481:	add    BYTE PTR [rax],al
  41d483:	add    BYTE PTR [rax],al
  41d485:	add    BYTE PTR [rax],al
  41d487:	add    al,bl
  41d489:	push   rax
  41d48a:	rex.X add BYTE PTR [rax],al
  41d48d:	add    BYTE PTR [rax],al
  41d48f:	add    BYTE PTR [rax+rax*1],al
  41d492:	add    BYTE PTR [rax],al
  41d494:	(bad)  
  41d495:	(bad)  
  41d496:	(bad)  
  41d497:	inc    DWORD PTR [rax]
	...
  41d4bd:	add    BYTE PTR [rax],al
  41d4bf:	add    ch,bl
  41d4c1:	push   rax
  41d4c2:	rex.X add BYTE PTR [rax],al
  41d4c5:	add    BYTE PTR [rax],al
  41d4c7:	add    BYTE PTR [rsi],dl
  41d4c9:	push   rcx
  41d4ca:	rex.X add BYTE PTR [rax],al
	...
  41d4dd:	add    BYTE PTR [rax],al
  41d4df:	add    BYTE PTR [rcx],cl
  41d4e1:	add    BYTE PTR [rax],al
  41d4e3:	add    BYTE PTR [rax],al
  41d4e5:	add    BYTE PTR [rax],al
  41d4e7:	add    BYTE PTR [rcx],ah
  41d4e9:	push   rcx
  41d4ea:	rex.X add BYTE PTR [rax],al
  41d4ed:	add    BYTE PTR [rax],al
  41d4ef:	add    BYTE PTR [rdx],al
  41d4f1:	add    BYTE PTR [rax],al
  41d4f3:	add    BYTE PTR [rdx],cl
  41d4f5:	add    BYTE PTR [rax],al
  41d4f7:	add    bh,bh
  41d4f9:	(bad)  
  41d4fa:	(bad)  
  41d4fb:	inc    DWORD PTR [rax]
	...
  41d53d:	add    BYTE PTR [rax],al
  41d53f:	add    BYTE PTR [rdx],cl
  41d541:	add    BYTE PTR [rax],al
  41d543:	add    BYTE PTR [rax],al
  41d545:	add    BYTE PTR [rax],al
  41d547:	add    BYTE PTR [rax],dh
  41d549:	push   rcx
  41d54a:	rex.X add BYTE PTR [rax],al
  41d54d:	add    BYTE PTR [rax],al
  41d54f:	add    BYTE PTR [rax],al
  41d551:	add    BYTE PTR [rax],al
  41d553:	add    bh,bh
  41d555:	(bad)  
  41d556:	(bad)  
  41d557:	inc    DWORD PTR [rax]
	...
  41d59d:	add    BYTE PTR [rax],al
  41d59f:	add    BYTE PTR [rbx],cl
  41d5a1:	add    BYTE PTR [rax],al
  41d5a3:	add    BYTE PTR [rax],al
  41d5a5:	add    BYTE PTR [rax],al
  41d5a7:	add    BYTE PTR [rdx],bh
  41d5a9:	push   rcx
  41d5aa:	rex.X add BYTE PTR [rax],al
  41d5ad:	add    BYTE PTR [rax],al
  41d5af:	add    BYTE PTR [rax],al
  41d5b1:	add    BYTE PTR [rax],al
  41d5b3:	add    bh,bh
  41d5b5:	(bad)  
  41d5b6:	(bad)  
  41d5b7:	inc    DWORD PTR [rax]
	...
  41d5fd:	add    BYTE PTR [rax],al
  41d5ff:	add    BYTE PTR [rax+rax*1],cl
  41d602:	add    BYTE PTR [rax],al
  41d604:	add    BYTE PTR [rax],al
  41d606:	add    BYTE PTR [rax],al
  41d608:	rex.WX push rcx
  41d60a:	rex.X add BYTE PTR [rax],al
  41d60d:	add    BYTE PTR [rax],al
  41d60f:	add    BYTE PTR [rdx],al
  41d611:	add    BYTE PTR [rax],al
  41d613:	add    BYTE PTR [rbx],cl
  41d615:	add    BYTE PTR [rax],al
  41d617:	add    bh,bh
  41d619:	(bad)  
  41d61a:	(bad)  
  41d61b:	inc    DWORD PTR [rax]
	...
  41d65d:	add    BYTE PTR [rax],al
  41d65f:	add    BYTE PTR [rip+0x0],cl        # 0x41d665
  41d665:	add    BYTE PTR [rax],al
  41d667:	add    BYTE PTR [rbx+0x51],bl
  41d66a:	rex.X add BYTE PTR [rax],al
  41d66d:	add    BYTE PTR [rax],al
  41d66f:	add    BYTE PTR [rax],al
  41d671:	add    BYTE PTR [rax],al
  41d673:	add    BYTE PTR [rax],dl
  41d675:	add    BYTE PTR [rax],al
  41d677:	add    bh,bh
  41d679:	(bad)  
  41d67a:	(bad)  
  41d67b:	inc    DWORD PTR [rax]
	...
  41d6bd:	add    BYTE PTR [rax],al
  41d6bf:	add    BYTE PTR [rsi],cl
  41d6c1:	add    BYTE PTR [rax],al
  41d6c3:	add    BYTE PTR [rax],al
  41d6c5:	add    BYTE PTR [rax],al
  41d6c7:	add    BYTE PTR [rdx+0x51],ah
  41d6ca:	rex.X add BYTE PTR [rax],al
  41d6cd:	add    BYTE PTR [rax],al
  41d6cf:	add    BYTE PTR [rdx],al
  41d6d1:	add    BYTE PTR [rax],al
  41d6d3:	add    BYTE PTR [rip+0xffffffffff000000],cl        # 0xffffffffff41d6d9
  41d6d9:	(bad)  
  41d6da:	(bad)  
  41d6db:	inc    DWORD PTR [rax]
	...
  41d71d:	add    BYTE PTR [rax],al
  41d71f:	add    BYTE PTR [rdi],cl
  41d721:	add    BYTE PTR [rax],al
  41d723:	add    BYTE PTR [rax],al
  41d725:	add    BYTE PTR [rax],al
  41d727:	add    BYTE PTR [rdx+0x51],ch
  41d72a:	rex.X add BYTE PTR [rax],al
  41d72d:	add    BYTE PTR [rax],al
  41d72f:	add    BYTE PTR [rdx],al
  41d731:	add    BYTE PTR [rax],al
  41d733:	add    BYTE PTR [rip+0xffffffffff000000],cl        # 0xffffffffff41d739
  41d739:	(bad)  
  41d73a:	(bad)  
  41d73b:	inc    DWORD PTR [rax]
	...
  41d77d:	add    BYTE PTR [rax],al
  41d77f:	add    BYTE PTR [rax],dl
  41d781:	add    BYTE PTR [rax],al
  41d783:	add    BYTE PTR [rax],al
  41d785:	add    BYTE PTR [rax],al
  41d787:	add    BYTE PTR [rcx],ah
  41d789:	push   rcx
  41d78a:	rex.X add BYTE PTR [rax],al
  41d78d:	add    BYTE PTR [rax],al
  41d78f:	add    BYTE PTR [rdx],al
  41d791:	add    BYTE PTR [rax],al
  41d793:	add    BYTE PTR [rcx],dl
  41d795:	add    BYTE PTR [rax],al
  41d797:	add    bh,bh
  41d799:	(bad)  
  41d79a:	(bad)  
  41d79b:	inc    DWORD PTR [rax]
	...
  41d7dd:	add    BYTE PTR [rax],al
  41d7df:	add    BYTE PTR [rcx],dl
  41d7e1:	add    BYTE PTR [rax],al
  41d7e3:	add    BYTE PTR [rax],al
  41d7e5:	add    BYTE PTR [rax],al
  41d7e7:	add    BYTE PTR [rax],dh
  41d7e9:	push   rcx
  41d7ea:	rex.X add BYTE PTR [rax],al
  41d7ed:	add    BYTE PTR [rax],al
  41d7ef:	add    BYTE PTR [rax],al
  41d7f1:	add    BYTE PTR [rax],al
  41d7f3:	add    bh,bh
  41d7f5:	(bad)  
  41d7f6:	(bad)  
  41d7f7:	inc    DWORD PTR [rax]
	...
  41d83d:	add    BYTE PTR [rax],al
  41d83f:	add    BYTE PTR [rdx],dl
  41d841:	add    BYTE PTR [rax],al
  41d843:	add    BYTE PTR [rax],al
  41d845:	add    BYTE PTR [rax],al
  41d847:	add    BYTE PTR [rbp+0x51],bh
  41d84a:	rex.X add BYTE PTR [rax],al
  41d84d:	add    BYTE PTR [rax],al
  41d84f:	add    BYTE PTR [rax],al
  41d851:	add    BYTE PTR [rax],al
  41d853:	add    BYTE PTR [rbx],dl
  41d855:	add    BYTE PTR [rax],al
  41d857:	add    BYTE PTR [rip+0xffffffffff000000],dl        # 0xffffffffff41d85d
  41d85d:	(bad)  
  41d85e:	(bad)  
  41d85f:	inc    DWORD PTR [rax]
	...
  41d89d:	add    BYTE PTR [rax],al
  41d89f:	add    BYTE PTR [rbx],dl
  41d8a1:	add    BYTE PTR [rax],al
  41d8a3:	add    BYTE PTR [rax],al
  41d8a5:	add    BYTE PTR [rax],al
  41d8a7:	add    BYTE PTR [rcx+riz*1+0x42],bh
	...
  41d8b3:	add    bh,bh
  41d8b5:	(bad)  
  41d8b6:	(bad)  
  41d8b7:	inc    DWORD PTR [rax]
	...
  41d8e5:	add    BYTE PTR [rax],al
  41d8e7:	add    BYTE PTR [rdx+0x4251],cl
	...
  41d8fd:	add    BYTE PTR [rax],al
  41d8ff:	add    BYTE PTR [rax+rax*1],dl
  41d902:	add    BYTE PTR [rax],al
  41d904:	add    BYTE PTR [rax],al
  41d906:	add    BYTE PTR [rax],al
  41d908:	popf   
  41d909:	push   rcx
  41d90a:	rex.X add BYTE PTR [rax],al
  41d90d:	add    BYTE PTR [rax],al
  41d90f:	add    BYTE PTR [rax],al
  41d911:	add    BYTE PTR [rax],al
  41d913:	add    bh,bh
  41d915:	(bad)  
  41d916:	(bad)  
  41d917:	inc    DWORD PTR [rax]
	...
  41d95d:	add    BYTE PTR [rax],al
  41d95f:	add    BYTE PTR [rip+0x0],dl        # 0x41d965
  41d965:	add    BYTE PTR [rax],al
  41d967:	add    BYTE PTR [rdi+0x4251],ah
  41d96d:	add    BYTE PTR [rax],al
  41d96f:	add    BYTE PTR [rdx],al
  41d971:	add    BYTE PTR [rax],al
  41d973:	add    BYTE PTR [rax+rax*1],dl
  41d976:	add    BYTE PTR [rax],al
  41d978:	(bad)  
  41d979:	(bad)  
  41d97a:	(bad)  
  41d97b:	inc    DWORD PTR [rax]
	...
  41d9a5:	add    BYTE PTR [rax],al
  41d9a7:	add    BYTE PTR [rdx+0x4251],dh
	...
  41d9bd:	add    BYTE PTR [rax],al
  41d9bf:	add    BYTE PTR [rsi],dl
  41d9c1:	add    BYTE PTR [rax],al
  41d9c3:	add    BYTE PTR [rax],al
  41d9c5:	add    BYTE PTR [rax],al
  41d9c7:	add    dl,cl
  41d9c9:	push   rcx
  41d9ca:	rex.X add BYTE PTR [rax],al
  41d9cd:	add    BYTE PTR [rax],al
  41d9cf:	add    BYTE PTR [rdx],al
  41d9d1:	add    BYTE PTR [rax],al
  41d9d3:	add    BYTE PTR [rdx],dl
  41d9d5:	add    BYTE PTR [rax],al
  41d9d7:	add    bh,bh
  41d9d9:	(bad)  
  41d9da:	(bad)  
  41d9db:	inc    DWORD PTR [rax]
	...
  41da1d:	add    BYTE PTR [rax],al
  41da1f:	add    BYTE PTR [rdi],dl
  41da21:	add    BYTE PTR [rax],al
  41da23:	add    BYTE PTR [rax],al
  41da25:	add    BYTE PTR [rax],al
  41da27:	add    al,bl
  41da29:	push   rcx
  41da2a:	rex.X add BYTE PTR [rax],al
  41da2d:	add    BYTE PTR [rax],al
  41da2f:	add    BYTE PTR [rax],al
  41da31:	add    BYTE PTR [rax],al
  41da33:	add    bh,bh
  41da35:	(bad)  
  41da36:	(bad)  
  41da37:	inc    DWORD PTR [rax]
	...
  41da65:	add    BYTE PTR [rax],al
  41da67:	add    ah,ah
  41da69:	push   rcx
  41da6a:	rex.X add BYTE PTR [rax],al
	...
  41da7d:	add    BYTE PTR [rax],al
  41da7f:	add    BYTE PTR [rax],bl
  41da81:	add    BYTE PTR [rax],al
  41da83:	add    BYTE PTR [rax],al
  41da85:	add    BYTE PTR [rax],al
  41da87:	add    al,bl
  41da89:	push   rax
  41da8a:	rex.X add BYTE PTR [rax],al
  41da8d:	add    BYTE PTR [rax],al
  41da8f:	add    BYTE PTR [rax+rax*1],al
  41da92:	add    BYTE PTR [rax],al
  41da94:	(bad)  
  41da95:	(bad)  
  41da96:	(bad)  
  41da97:	inc    DWORD PTR [rax]
	...
  41dabd:	add    BYTE PTR [rax],al
  41dabf:	add    ch,bl
  41dac1:	push   rax
  41dac2:	rex.X add BYTE PTR [rax],al
  41dac5:	add    BYTE PTR [rax],al
  41dac7:	add    bh,bh
  41dac9:	push   rcx
  41daca:	rex.X add BYTE PTR [rax],al
	...
  41dadd:	add    BYTE PTR [rax],al
  41dadf:	add    BYTE PTR [rcx],bl
  41dae1:	add    BYTE PTR [rax],al
  41dae3:	add    BYTE PTR [rax],al
  41dae5:	add    BYTE PTR [rax],al
  41dae7:	add    BYTE PTR [rbx],dl
  41dae9:	push   rdx
  41daea:	rex.X add BYTE PTR [rax],al
  41daed:	add    BYTE PTR [rax],al
  41daef:	add    BYTE PTR [rax],al
  41daf1:	add    BYTE PTR [rax],al
  41daf3:	add    BYTE PTR [rax+rax*1],bl
  41daf6:	add    BYTE PTR [rax],al
  41daf8:	sbb    al,BYTE PTR [rax]
  41dafa:	add    BYTE PTR [rax],al
  41dafc:	(bad)  
  41dafd:	(bad)  
  41dafe:	(bad)  
  41daff:	inc    DWORD PTR [rax]
	...
  41db3d:	add    BYTE PTR [rax],al
  41db3f:	add    BYTE PTR [rdx],bl
  41db41:	add    BYTE PTR [rax],al
  41db43:	add    BYTE PTR [rax],al
  41db45:	add    BYTE PTR [rax],al
  41db47:	add    BYTE PTR [rbx],bl
  41db49:	push   rdx
  41db4a:	rex.X add BYTE PTR [rax],al
  41db4d:	add    BYTE PTR [rax],al
  41db4f:	add    BYTE PTR [rdx],al
  41db51:	add    BYTE PTR [rax],al
  41db53:	add    BYTE PTR [rbx],bl
  41db55:	add    BYTE PTR [rax],al
  41db57:	add    bh,bh
  41db59:	(bad)  
  41db5a:	(bad)  
  41db5b:	inc    DWORD PTR [rax]
	...
  41db85:	add    BYTE PTR [rax],al
  41db87:	add    BYTE PTR [rbx],ah
  41db89:	push   rdx
  41db8a:	rex.X add BYTE PTR [rax],al
	...
  41db9d:	add    BYTE PTR [rax],al
  41db9f:	add    BYTE PTR [rbx],bl
  41dba1:	add    BYTE PTR [rax],al
  41dba3:	add    BYTE PTR [rax],al
  41dba5:	add    BYTE PTR [rax],al
  41dba7:	add    BYTE PTR [rbx],dh
  41dba9:	push   rdx
  41dbaa:	rex.X add BYTE PTR [rax],al
  41dbad:	add    BYTE PTR [rax],al
  41dbaf:	add    BYTE PTR [rax],al
  41dbb1:	add    BYTE PTR [rax],al
  41dbb3:	add    BYTE PTR [rdi],dl
  41dbb5:	add    BYTE PTR [rax],al
  41dbb7:	add    BYTE PTR [rax],bl
  41dbb9:	add    BYTE PTR [rax],al
  41dbbb:	add    bh,bh
  41dbbd:	(bad)  
  41dbbe:	(bad)  
  41dbbf:	inc    DWORD PTR [rax]
	...
  41dbe5:	add    BYTE PTR [rax],al
  41dbe7:	add    BYTE PTR [rdx],bh
  41dbe9:	push   rdx
  41dbea:	rex.X add BYTE PTR [rax],al
	...
  41dbfd:	add    BYTE PTR [rax],al
  41dbff:	add    BYTE PTR [rax+rax*1],bl
  41dc02:	add    BYTE PTR [rax],al
  41dc04:	add    BYTE PTR [rax],al
  41dc06:	add    BYTE PTR [rax],al
  41dc08:	fcom   DWORD PTR [rax+0x42]
  41dc0b:	add    BYTE PTR [rax],al
  41dc0d:	add    BYTE PTR [rax],al
  41dc0f:	add    BYTE PTR [rax+rax*1],al
  41dc12:	add    BYTE PTR [rax],al
  41dc14:	(bad)  
  41dc15:	(bad)  
  41dc16:	(bad)  
  41dc17:	inc    DWORD PTR [rax]
	...
  41dc3d:	add    BYTE PTR [rax],al
  41dc3f:	add    ch,bl
  41dc41:	push   rax
  41dc42:	rex.X add BYTE PTR [rax],al
  41dc45:	add    BYTE PTR [rax],al
  41dc47:	add    BYTE PTR [rcx+0x52],cl
  41dc4a:	rex.X add BYTE PTR [rax],al
	...
  41dc5d:	add    BYTE PTR [rax],al
  41dc5f:	add    BYTE PTR [rip+0x0],bl        # 0x41dc65
  41dc65:	add    BYTE PTR [rax],al
  41dc67:	add    BYTE PTR [rsi+0x52],dl
  41dc6a:	rex.X add BYTE PTR [rax],al
  41dc6d:	add    BYTE PTR [rax],al
  41dc6f:	add    BYTE PTR [rax],al
  41dc71:	add    BYTE PTR [rax],al
  41dc73:	add    bh,bh
  41dc75:	(bad)  
  41dc76:	(bad)  
  41dc77:	inc    DWORD PTR [rax]
	...
  41dcbd:	add    BYTE PTR [rax],al
  41dcbf:	add    BYTE PTR [rsi],bl
  41dcc1:	add    BYTE PTR [rax],al
  41dcc3:	add    BYTE PTR [rax],al
  41dcc5:	add    BYTE PTR [rax],al
  41dcc7:	add    BYTE PTR [rsi+0x52],ah
  41dcca:	rex.X add BYTE PTR [rax],al
  41dccd:	add    BYTE PTR [rax],al
  41dccf:	add    BYTE PTR [rdx],al
  41dcd1:	add    BYTE PTR [rax],al
  41dcd3:	add    BYTE PTR [rcx],bl
  41dcd5:	add    BYTE PTR [rax],al
  41dcd7:	add    bh,bh
  41dcd9:	(bad)  
  41dcda:	(bad)  
  41dcdb:	inc    DWORD PTR [rax]
	...
  41dd1d:	add    BYTE PTR [rax],al
  41dd1f:	add    BYTE PTR [rdi],bl
  41dd21:	add    BYTE PTR [rax],al
  41dd23:	add    BYTE PTR [rax],al
  41dd25:	add    BYTE PTR [rax],al
  41dd27:	add    BYTE PTR [rdi+0x52],ch
  41dd2a:	rex.X add BYTE PTR [rax],al
  41dd2d:	add    BYTE PTR [rax],al
  41dd2f:	add    BYTE PTR [rcx],al
  41dd31:	add    BYTE PTR [rax],al
  41dd33:	add    BYTE PTR [rdx],al
  41dd35:	add    BYTE PTR [rax],al
  41dd37:	add    BYTE PTR [rax+rax*1],al
  41dd3a:	add    BYTE PTR [rax],al
  41dd3c:	(bad)  
  41dd3d:	add    BYTE PTR [rax],al
  41dd3f:	add    BYTE PTR [rsi],bl
  41dd41:	add    BYTE PTR [rax],al
  41dd43:	add    BYTE PTR [rdx],ah
  41dd45:	add    BYTE PTR [rax],al
  41dd47:	add    BYTE PTR [rsi],cl
  41dd49:	add    BYTE PTR [rax],al
  41dd4b:	add    BYTE PTR [rbx],al
  41dd4d:	add    BYTE PTR [rax],al
  41dd4f:	add    BYTE PTR [rip+0xc000000],bl        # 0xc41dd55
  41dd55:	add    BYTE PTR [rax],al
  41dd57:	add    BYTE PTR [rsi],dl
  41dd59:	add    BYTE PTR [rax],al
  41dd5b:	add    bh,bh
  41dd5d:	(bad)  
  41dd5e:	(bad)  
  41dd5f:	inc    DWORD PTR [rax]
	...
  41dd7d:	add    BYTE PTR [rax],al
  41dd7f:	add    BYTE PTR [rax],ah
  41dd81:	add    BYTE PTR [rax],al
  41dd83:	add    BYTE PTR [rax],al
  41dd85:	add    BYTE PTR [rax],al
  41dd87:	add    BYTE PTR [rbx],dh
  41dd89:	push   rdx
  41dd8a:	rex.X add BYTE PTR [rax],al
  41dd8d:	add    BYTE PTR [rax],al
  41dd8f:	add    BYTE PTR [rax],al
  41dd91:	add    BYTE PTR [rax],al
  41dd93:	add    BYTE PTR [rcx],ah
  41dd95:	add    BYTE PTR [rax],al
  41dd97:	add    BYTE PTR [rbx],ah
  41dd99:	add    BYTE PTR [rax],al
  41dd9b:	add    BYTE PTR [rax+rax*1],ah
  41dd9e:	add    BYTE PTR [rax],al
  41dda0:	(bad)  
  41dda1:	(bad)  
  41dda2:	(bad)  
  41dda3:	inc    DWORD PTR [rax]
	...
  41dddd:	add    BYTE PTR [rax],al
  41dddf:	add    BYTE PTR [rcx],ah
  41dde1:	add    BYTE PTR [rax],al
  41dde3:	add    BYTE PTR [rax],al
  41dde5:	add    BYTE PTR [rax],al
  41dde7:	add    al,bl
  41dde9:	push   rcx
  41ddea:	rex.X add BYTE PTR [rax],al
  41dded:	add    BYTE PTR [rax],al
  41ddef:	add    BYTE PTR [rax],al
  41ddf1:	add    BYTE PTR [rax],al
  41ddf3:	add    bh,bh
  41ddf5:	(bad)  
  41ddf6:	(bad)  
  41ddf7:	inc    DWORD PTR [rax]
	...
  41de25:	add    BYTE PTR [rax],al
  41de27:	add    BYTE PTR [rdx+rdx*2+0x42],dh
	...
  41de3f:	add    BYTE PTR [rdx],ah
  41de41:	add    BYTE PTR [rax],al
  41de43:	add    BYTE PTR [rax],al
  41de45:	add    BYTE PTR [rax],al
  41de47:	add    BYTE PTR [rbx],bl
  41de49:	push   rdx
  41de4a:	rex.X add BYTE PTR [rax],al
  41de4d:	add    BYTE PTR [rax],al
  41de4f:	add    BYTE PTR [rdx],al
  41de51:	add    BYTE PTR [rax],al
  41de53:	add    BYTE PTR [rax],ah
  41de55:	add    BYTE PTR [rax],al
  41de57:	add    bh,bh
  41de59:	(bad)  
  41de5a:	(bad)  
  41de5b:	inc    DWORD PTR [rax]
	...
  41de9d:	add    BYTE PTR [rax],al
  41de9f:	add    BYTE PTR [rbx],ah
  41dea1:	add    BYTE PTR [rax],al
  41dea3:	add    BYTE PTR [rax],al
  41dea5:	add    BYTE PTR [rax],al
  41dea7:	add    al,bl
  41dea9:	push   rax
  41deaa:	rex.X add BYTE PTR [rax],al
  41dead:	add    BYTE PTR [rax],al
  41deaf:	add    BYTE PTR [rax+rax*1],al
  41deb2:	add    BYTE PTR [rax],al
  41deb4:	(bad)  
  41deb5:	(bad)  
  41deb6:	(bad)  
  41deb7:	inc    DWORD PTR [rax]
	...
  41dedd:	add    BYTE PTR [rax],al
  41dedf:	add    ch,bl
  41dee1:	push   rax
  41dee2:	rex.X add BYTE PTR [rax],al
  41dee5:	add    BYTE PTR [rax],al
  41dee7:	add    BYTE PTR [rdi+0x4252],al
	...
  41defd:	add    BYTE PTR [rax],al
  41deff:	add    BYTE PTR [rax+rax*1],ah
  41df02:	add    BYTE PTR [rax],al
  41df04:	add    BYTE PTR [rax],al
  41df06:	add    BYTE PTR [rax],al
  41df08:	and    DWORD PTR [rcx+0x42],edx
  41df0b:	add    BYTE PTR [rax],al
  41df0d:	add    BYTE PTR [rax],al
  41df0f:	add    BYTE PTR [rdx],al
  41df11:	add    BYTE PTR [rax],al
  41df13:	add    BYTE PTR [rip+0xffffffffff000000],ah        # 0xffffffffff41df19
  41df19:	(bad)  
  41df1a:	(bad)  
  41df1b:	inc    DWORD PTR [rax]
	...
  41df5d:	add    BYTE PTR [rax],al
  41df5f:	add    BYTE PTR [rip+0x0],ah        # 0x41df65
  41df65:	add    BYTE PTR [rax],al
  41df67:	add    BYTE PTR [rax],dh
  41df69:	push   rcx
  41df6a:	rex.X add BYTE PTR [rax],al
  41df6d:	add    BYTE PTR [rax],al
  41df6f:	add    BYTE PTR [rax],al
  41df71:	add    BYTE PTR [rax],al
  41df73:	add    bh,bh
  41df75:	(bad)  
  41df76:	(bad)  
  41df77:	inc    DWORD PTR [rax]
	...
  41dfbd:	add    BYTE PTR [rax],al
  41dfbf:	add    BYTE PTR [rsi],ah
  41dfc1:	add    BYTE PTR [rax],al
  41dfc3:	add    BYTE PTR [rax],al
  41dfc5:	add    BYTE PTR [rax],al
  41dfc7:	add    BYTE PTR [rax],bh
  41dfc9:	(bad)  
  41dfca:	rex.X add BYTE PTR [rax],al
  41dfcd:	add    BYTE PTR [rax],al
  41dfcf:	add    BYTE PTR [rax],al
  41dfd1:	add    BYTE PTR [rax],al
  41dfd3:	add    bh,bh
  41dfd5:	(bad)  
  41dfd6:	(bad)  
  41dfd7:	inc    DWORD PTR [rax]
	...
  41e01d:	add    BYTE PTR [rax],al
  41e01f:	add    BYTE PTR [rcx],al
	...
  41e03d:	add    BYTE PTR [rax],al
  41e03f:	add    al,bh
  41e041:	mov    BYTE PTR [rcx+0x0],0x0
	...
  41e04d:	add    BYTE PTR [rax],al
  41e04f:	add    bh,bh
  41e051:	(bad)  
  41e052:	(bad)  
  41e053:	(bad)  
  41e054:	(bad)  
  41e055:	(bad)  
  41e056:	(bad)  
  41e057:	inc    DWORD PTR [rax]
  41e059:	add    BYTE PTR [rax],al
  41e05b:	add    BYTE PTR [rax],al
  41e05d:	add    BYTE PTR [rax],al
  41e05f:	add    bh,bh
	...
  41e06d:	add    BYTE PTR [rax],al
  41e06f:	add    BYTE PTR [rdx],al
	...
  41e07d:	add    BYTE PTR [rax],al
  41e07f:	add    bh,bh
  41e081:	(bad)  
  41e082:	(bad)  
  41e083:	inc    DWORD PTR [rax]
	...
  41e08d:	add    BYTE PTR [rax],al
  41e08f:	add    BYTE PTR [rax+0x0],al
  41e092:	add    BYTE PTR [rax],al
  41e094:	ret    
  41e095:	mov    edi,0x3fc0ffff
  41e09a:	add    BYTE PTR [rax],al
  41e09c:	add    DWORD PTR [rax],eax
  41e09e:	add    BYTE PTR [rax],al
  41e0a0:	add    BYTE PTR [rax],al
  41e0a2:	add    BYTE PTR [rax],al
  41e0a4:	(bad)  
	...
  41e0ad:	add    BYTE PTR [rax],al
  41e0af:	add    al,al
  41e0b1:	popf   
  41e0b2:	rex.X add BYTE PTR [rax],al
	...
  41e0bd:	add    BYTE PTR [rax],al
  41e0bf:	add    BYTE PTR [rax+0x4199],ah
  41e0c5:	add    BYTE PTR [rax],al
  41e0c7:	add    BYTE PTR [rax+0x4199],dh
  41e0cd:	add    BYTE PTR [rax],al
  41e0cf:	add    BYTE PTR [rax],dh
  41e0d1:	(bad)  
  41e0d2:	add    BYTE PTR [r8],al
  41e0d5:	add    BYTE PTR [rax],al
  41e0d7:	add    al,ah
  41e0d9:	cdq    
  41e0da:	add    BYTE PTR [r8],al
  41e0dd:	add    BYTE PTR [rax],al
  41e0df:	add    BYTE PTR [rdx],dh
  41e0e1:	movabs ds:0x2b992ddf,al
  41e0ea:	add    BYTE PTR [rax],al
  41e0ec:	add    BYTE PTR [rax],al
  41e0ee:	add    BYTE PTR [rax],al
  41e0f0:	int    0x5d
  41e0f2:	and    dl,dl
  41e0f4:	data16 (bad) 
  41e0f6:	(bad)  
  41e0f7:	inc    DWORD PTR [rax]
  41e0f9:	add    BYTE PTR [rax],al
  41e0fb:	add    BYTE PTR [rax],al
  41e0fd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

000000000041f000 <.rdata>:
  41f000:	sub    al,BYTE PTR [rax]
  41f002:	and    BYTE PTR [rax],al
  41f004:	add    BYTE PTR [rax],al
  41f006:	add    BYTE PTR [rax],al
  41f008:	rex.B jne 0x41f07f
  41f00b:	outs   dx,DWORD PTR ds:[rsi]
  41f00c:	sub    eax,0x65746564
  41f011:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  41f015:	and    BYTE PTR [rbx+0x6f],dh
  41f018:	jne    0x41f08c
  41f01a:	movsxd esp,DWORD PTR [rbp+0x73]
  41f01d:	and    BYTE PTR [rsi+0x6f],ah
  41f020:	jb     0x41f042
  41f022:	and    eax,0xa3a73
  41f027:	add    BYTE PTR [rbx+0x61],al
  41f02a:	outs   dx,BYTE PTR ds:[rsi]
  41f02b:	outs   dx,BYTE PTR ds:[rsi]
  41f02c:	outs   dx,DWORD PTR ds:[rsi]
  41f02d:	je     0x41f04f
  41f02f:	ins    BYTE PTR es:[rdi],dx
  41f030:	imul   esi,DWORD PTR [rbx+0x74],0x756f7320
  41f037:	jb     0x41f09c
  41f039:	gs jae 0x41f06a
  41f03c:	and    BYTE PTR [rsi+0x6f],cl
  41f03f:	je     0x41f061
  41f041:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
  41f048:	outs   dx,BYTE PTR ds:[rsi]
  41f049:	je     0x41f0b0
  41f04b:	fs or  al,BYTE PTR cs:[rax]
  41f04f:	rex.XB (bad) 
  41f051:	outs   dx,BYTE PTR ds:[rsi]
  41f052:	outs   dx,BYTE PTR ds:[rsi]
  41f053:	outs   dx,DWORD PTR ds:[rsi]
  41f054:	je     0x41f076
  41f056:	ins    BYTE PTR es:[rdi],dx
  41f057:	imul   esi,DWORD PTR [rbx+0x74],0x756f7320
  41f05e:	jb     0x41f0c3
  41f060:	gs jae 0x41f091
  41f063:	or     al,BYTE PTR [rax]
  41f065:	and    eax,0x73252073
  41f06a:	and    BYTE PTR [rbx+0x25],bl
  41f06d:	jae    0x41f0cc
  41f06f:	or     al,BYTE PTR [rax]
  41f071:	rex.B jne 0x41f0e8
  41f074:	outs   dx,DWORD PTR ds:[rsi]
  41f075:	sub    eax,0x65746564
  41f07a:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  41f07e:	and    BYTE PTR [rbx+0x69],dh
  41f081:	outs   dx,BYTE PTR ds:[rsi]
  41f082:	imul   esi,DWORD PTR [rbx+0x20],0x66
  41f086:	outs   dx,DWORD PTR ds:[rsi]
  41f087:	jb     0x41f0a9
  41f089:	and    eax,0xa3a73
  41f08e:	add    BYTE PTR [rax],al
  41f090:	rex.XB (bad) 
  41f092:	outs   dx,BYTE PTR ds:[rsi]
  41f093:	outs   dx,BYTE PTR ds:[rsi]
  41f094:	outs   dx,DWORD PTR ds:[rsi]
  41f095:	je     0x41f0b7
  41f097:	ins    BYTE PTR es:[rdi],dx
  41f098:	imul   esi,DWORD PTR [rbx+0x74],0x6e697320
  41f09f:	imul   esi,DWORD PTR [rbx+0x2e],0x20
  41f0a3:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  41f0a5:	je     0x41f0c7
  41f0a7:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
  41f0ae:	outs   dx,BYTE PTR ds:[rsi]
  41f0af:	je     0x41f116
  41f0b1:	fs or  al,BYTE PTR cs:[rax]
  41f0b5:	rex.XB (bad) 
  41f0b7:	outs   dx,BYTE PTR ds:[rsi]
  41f0b8:	outs   dx,BYTE PTR ds:[rsi]
  41f0b9:	outs   dx,DWORD PTR ds:[rsi]
  41f0ba:	je     0x41f0dc
  41f0bc:	ins    BYTE PTR es:[rdi],dx
  41f0bd:	imul   esi,DWORD PTR [rbx+0x74],0x6e697320
  41f0c4:	imul   esi,DWORD PTR [rbx+0x2e],0xa
  41f0c8:	add    BYTE PTR [rcx+0x20],ch
  41f0cb:	cmp    eax,0x626e203d
  41f0d0:	pop    rdi
  41f0d1:	movsxd ebp,DWORD PTR [rdi+0x64]
  41f0d4:	movsxd esi,DWORD PTR gs:[rbx+0x0]
  41f0d8:	rex.B jae 0x41f14e
  41f0db:	gs jb  0x41f152
  41f0de:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  41f0e5:	data16 (bad) 
  41f0e7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x20746120
  41f0ef:	and    eax,0x64253a73
  41f0f4:	or     al,BYTE PTR [rax]
  41f0f6:	movsxd ebp,DWORD PTR [rbp+0x64]
  41f0f9:	jne    0x41f16f
  41f0fb:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x2d200063
  41f103:	sub    eax,0x676b7000
  41f108:	sub    eax,0x666e6f63
  41f10d:	imul   esp,DWORD PTR [rdi+0x7e],0x20007e00
  41f114:	and    BYTE PTR [rax],al
  41f116:	or     ah,BYTE PTR [rip+0x6e6f6373]        # 0x6eb1548f
  41f11c:	imul   sp,WORD PTR [rdi+0x75],0x6172
  41f122:	je     0x41f18d
  41f124:	outs   dx,DWORD PTR ds:[rsi]
  41f125:	outs   dx,BYTE PTR ds:[rsi]
  41f126:	cmp    cl,BYTE PTR [rdx]
  41f128:	add    BYTE PTR [rip+0x25732573],ah        # 0x25b516a1
  41f12e:	jae    0x41f13a
	...
  41f138:	sub    eax,0x6f72632d
  41f13d:	jae    0x41f1b2
  41f13f:	sub    eax,0x66657270
  41f144:	imul   edi,DWORD PTR [rax+0x3d],0x5f363878
  41f14b:	ss xor al,0x2d
  41f14e:	ja     0x41f186
  41f150:	xor    al,0x2d
  41f152:	ins    DWORD PTR es:[rdi],dx
  41f153:	imul   ebp,DWORD PTR [rsi+0x67],0x2d323377
  41f15a:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b0568d
  41f160:	(bad)  
  41f161:	ins    BYTE PTR es:[rdi],dx
  41f162:	gs sub eax,0x736f7263
  41f168:	jae    0x41f197
  41f16a:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41f16d:	jo     0x41f1d8
  41f16f:	ins    BYTE PTR es:[rdi],dx
  41f170:	and    BYTE PTR gs:[rip+0x7261742d],ch        # 0x72a365a4
  41f177:	addr32 gs je 0x41f1a8
  41f17b:	outs   dx,DWORD PTR ds:[rsi]
  41f17c:	jae    0x41f1bb
  41f17e:	ins    DWORD PTR es:[rdi],dx
  41f17f:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  41f186:	sub    eax,0x6372612d
  41f18b:	push   0x3638783d
  41f190:	pop    rdi
  41f191:	ss xor al,0x20
  41f194:	sub    eax,0x6572702d
  41f199:	imul   di,WORD PTR [rax+0x3d],0x732f
  41f19f:	movsxd esi,DWORD PTR [rdx+0x61]
  41f1a2:	je     0x41f207
  41f1a4:	push   0x65776a2f
  41f1a9:	(bad)  
  41f1aa:	ins    DWORD PTR es:[rdi],dx
  41f1ab:	js     0x41f212
  41f1ad:	sub    eax,0x6174636f
  41f1b2:	jbe    0x41f219
  41f1b4:	(bad)  
  41f1b5:	xor    al,0x2e
  41f1b7:	xor    ch,BYTE PTR [rsi]
  41f1b9:	xor    DWORD PTR [rdi],ebp
  41f1bb:	ja     0x41f1f3
  41f1bd:	xor    al,0x2d
  41f1bf:	xor    esi,DWORD PTR [rdx]
  41f1c1:	(bad)  
  41f1c2:	jne    0x41f237
  41f1c4:	jb     0x41f1f5
  41f1c6:	js     0x41f200
  41f1c8:	ss pop rdi
  41f1ca:	ss xor al,0x2d
  41f1cd:	ja     0x41f205
  41f1cf:	xor    al,0x2d
  41f1d1:	ins    DWORD PTR es:[rdi],dx
  41f1d2:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  41f1d9:	sub    eax,0x616e652d
  41f1de:	(bad)  
  41f1df:	ins    BYTE PTR es:[rdi],dx
  41f1e0:	gs sub eax,0x72616873
  41f1e6:	gs and BYTE PTR fs:[rip+0x7369642d],ch        # 0x73ab561b
  41f1ee:	(bad)  
  41f1ef:	(bad)  
  41f1f0:	ins    BYTE PTR es:[rdi],dx
  41f1f1:	gs sub eax,0x74617473
  41f1f7:	imul   esp,DWORD PTR [rbx+0x20],0x61792d2d
  41f1fe:	jae    0x41f26d
  41f200:	gs js  0x41f268
  41f203:	cmp    eax,0x7263732f
  41f208:	(bad)  
  41f209:	je     0x41f26e
  41f20b:	push   0x65776a2f
  41f210:	(bad)  
  41f211:	ins    DWORD PTR es:[rdi],dx
  41f212:	js     0x41f279
  41f214:	sub    eax,0x6174636f
  41f219:	jbe    0x41f280
  41f21b:	(bad)  
  41f21c:	xor    al,0x2e
  41f21e:	xor    ch,BYTE PTR [rsi]
  41f220:	xor    DWORD PTR [rdi],ebp
  41f222:	ja     0x41f25a
  41f224:	xor    al,0x2d
  41f226:	xor    esi,DWORD PTR [rdx]
  41f228:	(bad)  
  41f229:	jne    0x41f29e
  41f22b:	jb     0x41f25c
  41f22d:	(bad)  
  41f22e:	imul   ebp,DWORD PTR [rsi+0x2f],0x6d736179
  41f235:	and    BYTE PTR [rip+0x7478652d],ch        # 0x74ba5768
  41f23b:	jb     0x41f29e
  41f23d:	sub    eax,0x7362696c
  41f242:	cmp    eax,0x6f636d2d
  41f247:	outs   dx,BYTE PTR ds:[rsi]
  41f248:	jae    0x41f2b9
  41f24a:	ins    BYTE PTR es:[rdi],dx
  41f24b:	and    BYTE PTR gs:[rip+0x7369642d],ch        # 0x73ab567f
  41f252:	(bad)  
  41f253:	(bad)  
  41f254:	ins    BYTE PTR es:[rdi],dx
  41f255:	gs sub eax,0x75626564
  41f25b:	and    BYTE PTR [eip+0x7369642d],ch        # 0x73ab568f
  41f262:	(bad)  
  41f263:	(bad)  
  41f264:	ins    BYTE PTR es:[rdi],dx
  41f265:	gs sub eax,0x20636f64
  41f26b:	sub    eax,0x616e652d
  41f270:	(bad)  
  41f271:	ins    BYTE PTR es:[rdi],dx
  41f272:	gs sub eax,0x616d656d
  41f278:	ins    BYTE PTR es:[rdi],dx
  41f279:	imul   esp,DWORD PTR [rdi+0x6e],0x6361682d
  41f280:	imul   esp,DWORD PTR [rax],0x2d
  41f283:	sub    eax,0x62616e65
  41f288:	ins    BYTE PTR es:[rdi],dx
  41f289:	gs sub eax,0x65727661
  41f28f:	jae    0x41f2f2
  41f291:	ins    DWORD PTR es:[rdi],dx
  41f292:	jo     0x41f300
  41f294:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b057c8
  41f29b:	(bad)  
  41f29c:	ins    BYTE PTR es:[rdi],dx
  41f29d:	gs sub eax,0x206c7067
  41f2a3:	sub    eax,0x616e652d
  41f2a8:	(bad)  
  41f2a9:	ins    BYTE PTR es:[rdi],dx
  41f2aa:	gs sub eax,0x73726576
  41f2b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d2033
  41f2b7:	imul   esi,DWORD PTR fs:[rbx+0x61],0x2d656c62
  41f2bf:	jo     0x41f335
  41f2c1:	push   0x64616572
  41f2c6:	jae    0x41f2e8
  41f2c8:	sub    eax,0x616e652d
  41f2cd:	(bad)  
  41f2ce:	ins    BYTE PTR es:[rdi],dx
  41f2cf:	gs sub eax,0x74323377
  41f2d5:	push   0x64616572
  41f2da:	jae    0x41f2fc
  41f2dc:	sub    eax,0x616e652d
  41f2e1:	(bad)  
  41f2e2:	ins    BYTE PTR es:[rdi],dx
  41f2e3:	gs sub eax,0x73697661
  41f2e9:	jns    0x41f359
  41f2eb:	je     0x41f355
  41f2ed:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b05820
  41f2f3:	(bad)  
  41f2f4:	ins    BYTE PTR es:[rdi],dx
  41f2f5:	gs sub eax,0x74756e67
  41f2fb:	ins    BYTE PTR es:[rdi],dx
  41f2fc:	jae    0x41f31e
  41f2fe:	sub    eax,0x616e652d
  41f303:	(bad)  
  41f304:	ins    BYTE PTR es:[rdi],dx
  41f305:	gs sub eax,0x7362696c
  41f30b:	jo     0x41f372
  41f30d:	gs js  0x41f330
  41f310:	sub    eax,0x616e652d
  41f315:	(bad)  
  41f316:	ins    BYTE PTR es:[rdi],dx
  41f317:	gs sub eax,0x7462696c
  41f31d:	push   0x61726f65
  41f322:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b05855
  41f328:	(bad)  
  41f329:	ins    BYTE PTR es:[rdi],dx
  41f32a:	gs sub eax,0x7662696c
  41f330:	outs   dx,DWORD PTR ds:[rsi]
  41f331:	jb     0x41f395
  41f333:	imul   esi,DWORD PTR [rbx+0x20],0x6e652d2d
  41f33a:	(bad)  
  41f33b:	(bad)  
  41f33c:	ins    BYTE PTR es:[rdi],dx
  41f33d:	gs sub eax,0x6d62696c
  41f343:	jo     0x41f378
  41f345:	ins    BYTE PTR es:[rdi],dx
  41f346:	(bad)  
  41f347:	ins    DWORD PTR es:[rdi],dx
  41f348:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b0587c
  41f34f:	(bad)  
  41f350:	ins    BYTE PTR es:[rdi],dx
  41f351:	gs sub eax,0x7862696c
  41f357:	jbe    0x41f3c2
  41f359:	and    BYTE PTR fs:[rip+0x616e652d],ch        # 0x61b0588d
  41f360:	(bad)  
  41f361:	ins    BYTE PTR es:[rdi],dx
  41f362:	gs sub eax,0x6f62696c
  41f368:	jo     0x41f3cf
  41f36a:	outs   dx,BYTE PTR ds:[rsi]
  41f36b:	movsxd ebp,DWORD PTR [rdi+0x72]
  41f36e:	gs sub eax,0x6e726d61
  41f374:	(bad)  
  41f375:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b058a8
  41f37b:	(bad)  
  41f37c:	ins    BYTE PTR es:[rdi],dx
  41f37d:	gs sub eax,0x6f62696c
  41f383:	jo     0x41f3ea
  41f385:	outs   dx,BYTE PTR ds:[rsi]
  41f386:	movsxd ebp,DWORD PTR [rdi+0x72]
  41f389:	gs sub eax,0x77726d61
  41f38f:	(bad)  
  41f390:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b058c3
  41f396:	(bad)  
  41f397:	ins    BYTE PTR es:[rdi],dx
  41f398:	gs sub eax,0x7862696c
  41f39e:	xor    dh,BYTE PTR [rsi]
  41f3a0:	xor    al,0x20
  41f3a2:	sub    eax,0x616e652d
  41f3a7:	(bad)  
  41f3a8:	ins    BYTE PTR es:[rdi],dx
  41f3a9:	gs sub eax,0x7662696c
  41f3af:	jo     0x41f429
  41f3b1:	add    BYTE PTR [rip+0x69620064],ah        # 0x69a3f41b
  41f3b7:	movsxd esi,DWORD PTR [rbp+0x62]
  41f3ba:	imul   esp,DWORD PTR [rbx+0x0],0x67616c66
  41f3c1:	jae    0x41f3c3
  41f3c3:	add    BYTE PTR [rip+0x74252d70],ah        # 0x74672139
  41f3c9:	cs ins BYTE PTR es:[rdi],dx
  41f3cb:	outs   dx,DWORD PTR ds:[rsi]
  41f3cc:	add    BYTE PTR [edx],bh
  41f3cf:	add    BYTE PTR [rip+0x0],bh        # 0x41f3d5
  41f3d5:	add    BYTE PTR [rax],al
  41f3d7:	add    BYTE PTR [rsi+0x61],al
  41f3da:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  41f3e2:	jo     0x41f445
  41f3e4:	jb     0x41f459
  41f3e6:	and    BYTE PTR gs:[rsi+0x46],al
  41f3ea:	push   rdx
  41f3eb:	rex.RB push r8
  41f3ed:	rex.WRXB push r10
  41f3ef:	push   rsp
  41f3f0:	and    BYTE PTR [rbp+0x6e],ah
  41f3f3:	jbe    0x41f45e
  41f3f5:	jb     0x41f466
  41f3f7:	outs   dx,BYTE PTR ds:[rsi]
  41f3f8:	ins    DWORD PTR es:[rdi],dx
  41f3f9:	outs   dx,BYTE PTR gs:[rsi]
  41f3fb:	je     0x41f41d
  41f3fd:	jbe    0x41f460
  41f3ff:	jb     0x41f46a
  41f401:	(bad)  
  41f402:	(bad)  
  41f403:	ins    BYTE PTR es:[rdi],dx
  41f404:	cmp    ah,BYTE PTR gs:[rax]
  41f407:	and    eax,0x66000a73
  41f40c:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x6576656c
  41f414:	ins    BYTE PTR es:[rdi],dx
  41f415:	add    BYTE PTR [rcx+0x6e],cl
  41f418:	jbe    0x41f47b
  41f41a:	ins    BYTE PTR es:[rdi],dx
  41f41b:	imul   esp,DWORD PTR [rax+riz*1+0x72],0x726f7065
  41f423:	je     0x41f445
  41f425:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x656c
  41f42c:	jbe    0x41f493
  41f42e:	ins    BYTE PTR es:[rdi],dx
  41f42f:	or     al,BYTE PTR [rax]
  41f431:	push   rbp
  41f432:	outs   dx,BYTE PTR ds:[rsi]
  41f433:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41f437:	outs   dx,BYTE PTR ds:[rsi]
  41f438:	and    BYTE PTR [rbx+0x65],ch
  41f43b:	jns    0x41f45d
  41f43d:	(bad)  
  41f43e:	and    eax,0x69202773
  41f443:	outs   dx,BYTE PTR ds:[rsi]
  41f444:	and    BYTE PTR [rsi+0x46],al
  41f447:	push   rdx
  41f448:	rex.RB push r8
  41f44a:	rex.WRXB push r10
  41f44c:	push   rsp
  41f44d:	or     al,BYTE PTR [rax]
  41f44f:	and    eax,0x30250073
  41f454:	xor    al,0x64
  41f456:	and    eax,0x25643230
  41f45b:	xor    BYTE PTR [rdx],dh
  41f45d:	fs sub eax,0x64323025
  41f463:	and    eax,0x25643230
  41f468:	xor    BYTE PTR [rdx],dh
  41f46a:	add    BYTE PTR fs:[rax],al
  41f46d:	add    BYTE PTR [rax],al
  41f46f:	add    BYTE PTR [rdi+0x75],cl
  41f472:	je     0x41f494
  41f474:	outs   dx,DWORD PTR ds:[rsi]
  41f475:	data16 and BYTE PTR [rbp+0x65],ch
  41f479:	ins    DWORD PTR es:[rdi],dx
  41f47a:	outs   dx,DWORD PTR ds:[rsi]
  41f47b:	jb     0x41f4f6
  41f47d:	and    BYTE PTR [rdx+0x75],ah
  41f480:	imul   ebp,DWORD PTR [rsp+riz*2+0x69],0x7220676e
  41f488:	gs jo  0x41f4fa
  41f48b:	jb     0x41f501
  41f48d:	and    BYTE PTR [rsi+0x69],ah
  41f490:	ins    BYTE PTR es:[rdi],dx
  41f491:	and    BYTE PTR gs:[rsi+0x61],ch
  41f495:	ins    DWORD PTR es:[rdi],dx
  41f496:	or     al,BYTE PTR gs:[rax]
  41f499:	ja     0x41f49b
  41f49b:	add    BYTE PTR [rax],al
  41f49d:	add    BYTE PTR [rax],al
  41f49f:	add    BYTE PTR [rsi+0x61],al
  41f4a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  41f4aa:	outs   dx,DWORD PTR ds:[rsi]
  41f4ab:	jo     0x41f512
  41f4ad:	outs   dx,BYTE PTR ds:[rsi]
  41f4ae:	and    BYTE PTR [rdx+0x65],dh
  41f4b1:	jo     0x41f522
  41f4b3:	jb     0x41f529
  41f4b5:	and    BYTE PTR [rdx],ah
  41f4b7:	and    eax,0x203a2273
  41f4bc:	and    eax,0x25000a73
  41f4c1:	jae    0x41f4e3
  41f4c3:	jae    0x41f539
  41f4c5:	(bad)  
  41f4c6:	jb     0x41f53c
  41f4c8:	gs and BYTE PTR fs:[rdi+0x6e],ch
  41f4cd:	and    BYTE PTR [rip+0x2d643430],ah        # 0x2da62903
  41f4d3:	and    eax,0x2d643230
  41f4d8:	and    eax,0x20643230
  41f4dd:	(bad)  
  41f4de:	je     0x41f500
  41f4e0:	and    eax,0x3a643230
  41f4e5:	and    eax,0x3a643230
  41f4ea:	and    eax,0xa643230
  41f4ef:	push   rdx
  41f4f0:	gs jo  0x41f562
  41f4f3:	jb     0x41f569
  41f4f5:	and    BYTE PTR [rdi+0x72],dh
  41f4f8:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x6f74206e
  41f500:	and    BYTE PTR [rdx],ah
  41f502:	and    eax,0xa2273
  41f507:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41f509:	movsxd ebp,DWORD PTR [rdi+0x64]
  41f50c:	gs jb  0x41f582
  41f50f:	add    BYTE PTR [rbp+riz*2+0x63],al
  41f513:	outs   dx,DWORD PTR ds:[rsi]
  41f514:	fs gs jb 0x41f58b
  41f518:	add    BYTE PTR [rsi+0x0],al
  41f51b:	add    BYTE PTR cs:[rbx+0x0],dl
  41f51f:	pop    rax
  41f520:	add    BYTE PTR [rdx+0x0],al
  41f523:	add    BYTE PTR [rdi+0x75],r9b
  41f527:	je     0x41f549
  41f529:	outs   dx,DWORD PTR ds:[rsi]
  41f52a:	data16 and BYTE PTR [rbp+0x65],ch
  41f52e:	ins    DWORD PTR es:[rdi],dx
  41f52f:	outs   dx,DWORD PTR ds:[rsi]
  41f530:	jb     0x41f5ab
  41f532:	or     al,BYTE PTR [rax]
  41f534:	add    BYTE PTR [rax],al
  41f536:	add    BYTE PTR [rax],al
  41f538:	and    eax,0x200a3a73
  41f53d:	push   rsi
  41f53e:	cs cs cs cs and BYTE PTR cs:[rip+0x64695620],bh        # 0x64ab4b69
  41f549:	outs   dx,DWORD PTR gs:[rsi]
  41f54b:	or     ah,BYTE PTR [rax]
  41f54d:	rex.B
  41f54e:	cs cs cs cs and BYTE PTR cs:[rip+0x64754120],bh        # 0x64b73679
  41f559:	imul   ebp,DWORD PTR [rdi+0xa],0x2e2e5320
  41f560:	cs cs and BYTE PTR cs:[rip+0x62755320],bh        # 0x62b74889
  41f569:	je     0x41f5d4
  41f56b:	je     0x41f5d9
  41f56d:	or     ah,BYTE PTR gs:[rax]
  41f570:	cs rex.RX
  41f572:	cs cs cs and BYTE PTR cs:[rip+0x61724620],bh        # 0x61b43b9c
  41f57c:	ins    DWORD PTR es:[rdi],dx
  41f57d:	gs sub eax,0x6576656c
  41f583:	ins    BYTE PTR es:[rdi],dx
  41f584:	and    BYTE PTR [rbp+0x75],ch
  41f587:	ins    BYTE PTR es:[rdi],dx
  41f588:	je     0x41f5f3
  41f58a:	je     0x41f5f4
  41f58c:	jb     0x41f5f3
  41f58e:	(bad)  
  41f58f:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x2e2e200a
  41f597:	push   rbx
  41f598:	cs cs and BYTE PTR cs:[rip+0x696c5320],bh        # 0x69ae48c1
  41f5a1:	movsxd esp,DWORD PTR [rbp+0x2d]
  41f5a4:	ins    BYTE PTR es:[rdi],dx
  41f5a5:	gs jbe 0x41f60d
  41f5a8:	ins    BYTE PTR es:[rdi],dx
  41f5a9:	and    BYTE PTR [rbp+0x75],ch
  41f5ac:	ins    BYTE PTR es:[rdi],dx
  41f5ad:	je     0x41f618
  41f5af:	je     0x41f619
  41f5b1:	jb     0x41f618
  41f5b3:	(bad)  
  41f5b4:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x2e2e200a
  41f5bc:	cs pop rax
  41f5be:	cs and BYTE PTR cs:[rip+0x646f4320],bh        # 0x64b138e6
  41f5c6:	movsxd esp,DWORD PTR gs:[rax]
  41f5c9:	imul   esi,DWORD PTR [rbx+0x20],0x65707865
  41f5d0:	jb     0x41f63b
  41f5d2:	ins    DWORD PTR es:[rdi],dx
  41f5d3:	outs   dx,BYTE PTR gs:[rsi]
  41f5d5:	je     0x41f638
  41f5d7:	ins    BYTE PTR es:[rdi],dx
  41f5d8:	or     ah,BYTE PTR [rax]
  41f5da:	cs cs cs cs rex.X
  41f5df:	and    BYTE PTR cs:[rip+0x70755320],bh        # 0x70b74906
  41f5e6:	jo     0x41f657
  41f5e8:	jb     0x41f65e
  41f5ea:	jae    0x41f60c
  41f5ec:	fs jb  0x41f650
  41f5ef:	ja     0x41f650
  41f5f1:	push   0x7a69726f
  41f5f6:	pop    rdi
  41f5f7:	(bad)
  41f5fc:	and    BYTE PTR [rsi],ch
  41f5fe:	cs cs cs and BYTE PTR cs:[rip+0x70755320],r15b        # 0x70b74929
  41f609:	jo     0x41f67a
  41f60b:	jb     0x41f681
  41f60d:	jae    0x41f62f
  41f60f:	imul   esi,DWORD PTR fs:[rdx+0x65],0x72207463
  41f617:	outs   dx,BYTE PTR gs:[rsi]
  41f619:	fs gs jb 0x41f686
  41f61d:	outs   dx,BYTE PTR ds:[rsi]
  41f61e:	and    BYTE PTR [ebp+0x65],ch
  41f622:	je     0x41f68c
  41f624:	outs   dx,DWORD PTR ds:[rsi]
  41f625:	and    BYTE PTR fs:[rcx],dh
  41f628:	or     ah,BYTE PTR [rax]
  41f62a:	sub    eax,0x2d2d2d2d
  41f62f:	sub    eax,0x2520000a
  41f634:	movsxd eax,DWORD PTR [rax]
  41f636:	and    BYTE PTR [rip+0x7330322d],ah        # 0x73722869
  41f63c:	and    BYTE PTR [rip+0x28200073],ah        # 0x2861f6b5
  41f642:	movsxd ebp,DWORD PTR [rdi+0x64]
  41f645:	movsxd esp,DWORD PTR gs:[rax]
  41f648:	and    eax,0xa002973
  41f64d:	add    BYTE PTR [rbp+rsi*2+0x72],ah
  41f651:	(bad)  
  41f652:	je     0x41f6bd
  41f654:	outs   dx,DWORD PTR ds:[rsi]
  41f655:	outs   dx,BYTE PTR ds:[rsi]
  41f656:	add    BYTE PTR [rcx+riz*2+0x74],ah
  41f65a:	add    BYTE PTR gs:[rax],al
  41f65d:	add    BYTE PTR [rax],al
  41f65f:	add    BYTE PTR [rcx+0x6e],cl
  41f662:	jbe    0x41f6c5
  41f664:	ins    BYTE PTR es:[rdi],dx
  41f665:	imul   esp,DWORD PTR [rax+riz*1+0x25],0x70732073
  41f66d:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41f671:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  41f678:	and    BYTE PTR [rsi+0x6f],ah
  41f67b:	jb     0x41f69d
  41f67d:	and    eax,0x25203a73
  41f682:	jae    0x41f68e
  41f684:	add    BYTE PTR [rbx+0x6f],al
  41f687:	jne    0x41f6f5
  41f689:	and    BYTE PTR fs:[rsi+0x6f],ch
  41f68d:	je     0x41f6af
  41f68f:	(bad)  
  41f690:	ins    BYTE PTR es:[rdi],dx
  41f691:	ins    BYTE PTR es:[rdi],dx
  41f692:	outs   dx,DWORD PTR ds:[rsi]
  41f693:	movsxd esp,DWORD PTR [rax]
  41f695:	(bad)  
  41f696:	jne    0x41f6fe
  41f698:	data16 gs jb 0x41f6ca
  41f69c:	or     al,BYTE PTR [rax]
  41f69e:	add    BYTE PTR [rax],al
  41f6a0:	rex.RB js 0x41f713
  41f6a3:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  41f6a8:	and    BYTE PTR [rsi+0x75],ch
  41f6ab:	ins    DWORD PTR es:[rdi],dx
  41f6ac:	(bad)  
  41f6ad:	gs jb  0x41f6d0
  41f6b0:	outs   dx,WORD PTR ds:[rsi]
  41f6b2:	jb     0x41f6d4
  41f6b4:	and    eax,0x75622073
  41f6b9:	je     0x41f6db
  41f6bb:	outs   dx,WORD PTR ds:[rsi]
  41f6bd:	jne    0x41f72d
  41f6bf:	cmp    ah,BYTE PTR fs:[rax]
  41f6c2:	and    eax,0xa73
  41f6c7:	add    BYTE PTR [rax+rbp*2+0x65],dl
  41f6cb:	and    BYTE PTR [rsi+0x61],dh
  41f6ce:	ins    BYTE PTR es:[rdi],dx
  41f6cf:	jne    0x41f736
  41f6d1:	and    BYTE PTR [rsi+0x6f],ah
  41f6d4:	jb     0x41f6f6
  41f6d6:	and    eax,0x61772073
  41f6db:	jae    0x41f6fd
  41f6dd:	and    eax,0x68772073
  41f6e2:	imul   esp,DWORD PTR [rbx+0x68],0x20736920
  41f6e9:	outs   dx,BYTE PTR ds:[rsi]
  41f6ea:	outs   dx,DWORD PTR ds:[rsi]
  41f6eb:	je     0x41f70d
  41f6ed:	ja     0x41f758
  41f6ef:	je     0x41f759
  41f6f1:	imul   ebp,DWORD PTR [rsi+0x20],0x2d206625
  41f6f8:	and    BYTE PTR [rip+0xa66],ah        # 0x420164
  41f6fe:	add    BYTE PTR [rax],al
  41f700:	rex.RB js 0x41f773
  41f703:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  41f708:	and    BYTE PTR [rcx+0x6e],ch
  41f70b:	je     0x41f743
  41f70d:	xor    al,0x20
  41f70f:	outs   dx,WORD PTR ds:[rsi]
  41f711:	jb     0x41f733
  41f713:	and    eax,0x75622073
  41f718:	je     0x41f73a
  41f71a:	outs   dx,WORD PTR ds:[rsi]
  41f71c:	jne    0x41f78c
  41f71e:	and    BYTE PTR fs:[rip+0xa73],ah        # 0x420198
  41f725:	add    BYTE PTR [rax],al
  41f727:	add    BYTE PTR [rbp+0x78],al
  41f72a:	jo     0x41f791
  41f72c:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  41f730:	and    BYTE PTR [rcx+0x6e],ch
  41f733:	je     0x41f755
  41f735:	outs   dx,WORD PTR ds:[rsi]
  41f737:	jb     0x41f759
  41f739:	and    eax,0x75622073
  41f73e:	je     0x41f760
  41f740:	outs   dx,WORD PTR ds:[rsi]
  41f742:	jne    0x41f7b2
  41f744:	and    BYTE PTR fs:[rip+0x2d000a73],ah        # 0x2d4201be
  41f74b:	and    eax,0x7337312d
  41f750:	and    BYTE PTR [rax],ah
  41f752:	and    eax,0x25000a73
  41f757:	jae    0x41f763
  41f759:	add    BYTE PTR [rbp+0x6e],al
  41f75c:	movsxd ebp,DWORD PTR [rdi+0x64]
  41f75f:	gs jb  0x41f762
  41f762:	rex.R
  41f763:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  41f767:	gs jb  0x41f76a
  41f76a:	and    eax,0x73252073
  41f76f:	and    BYTE PTR [rbx+0x25],bl
  41f772:	jae    0x41f7d1
  41f774:	cmp    cl,BYTE PTR [rdx]
  41f776:	add    BYTE PTR [rax],ah
  41f778:	and    BYTE PTR [rax],ah
  41f77a:	and    BYTE PTR [rax+rbp*2+0x72],dl
  41f77e:	gs (bad) 
  41f780:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70616320
  41f788:	(bad)  
  41f789:	(bad)  
  41f78a:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x3a736569
  41f792:	and    BYTE PTR [rax],al
  41f794:	data16 jb 0x41f7f8
  41f797:	ins    DWORD PTR es:[rdi],dx
  41f798:	and    BYTE PTR gs:[rcx+0x6e],ah
  41f79c:	and    BYTE PTR fs:[rbx+0x6c],dh
  41f7a0:	imul   esp,DWORD PTR [rbx+0x65],0x61726600
  41f7a7:	ins    DWORD PTR es:[rdi],dx
  41f7a8:	add    BYTE PTR gs:[rbx+0x6c],dh
  41f7ac:	imul   esp,DWORD PTR [rbx+0x65],0x6f6e00
  41f7b3:	and    BYTE PTR [rax],ah
  41f7b5:	and    BYTE PTR [rax],ah
  41f7b7:	push   rbx
  41f7b8:	jne    0x41f82a
  41f7ba:	jo     0x41f82b
  41f7bc:	jb     0x41f832
  41f7be:	gs and BYTE PTR fs:[rsi+0x72],ah
  41f7c3:	(bad)  
  41f7c4:	ins    DWORD PTR es:[rdi],dx
  41f7c5:	gs jb  0x41f829
  41f7c8:	je     0x41f82f
  41f7ca:	jae    0x41f806
  41f7cc:	add    BYTE PTR [rax],ah
  41f7ce:	and    eax,0x64252f64
  41f7d3:	add    BYTE PTR [rax],ah
  41f7d5:	and    BYTE PTR [rax],ah
  41f7d7:	and    BYTE PTR [rbx+0x75],dl
  41f7da:	jo     0x41f84c
  41f7dc:	outs   dx,DWORD PTR ds:[rsi]
  41f7dd:	jb     0x41f853
  41f7df:	gs and BYTE PTR fs:[rax+0x69],dh
  41f7e4:	js     0x41f84b
  41f7e6:	ins    BYTE PTR es:[rdi],dx
  41f7e7:	and    BYTE PTR [rsi+0x6f],ah
  41f7ea:	jb     0x41f859
  41f7ec:	(bad)  
  41f7ed:	je     0x41f862
  41f7ef:	cmp    al,BYTE PTR [rax]
  41f7f1:	and    BYTE PTR [rip+0x20200073],ah        # 0x2061f86a
  41f7f7:	and    BYTE PTR [rax],ah
  41f7f9:	push   rbx
  41f7fa:	jne    0x41f86c
  41f7fc:	jo     0x41f86d
  41f7fe:	jb     0x41f874
  41f800:	gs and BYTE PTR fs:[rbx+0x61],dh
  41f805:	ins    DWORD PTR es:[rdi],dx
  41f806:	jo     0x41f874
  41f808:	and    BYTE PTR gs:[rdx+0x61],dh
  41f80c:	je     0x41f873
  41f80e:	jae    0x41f84a
  41f810:	add    BYTE PTR [rax],ah
  41f812:	and    BYTE PTR [rax],ah
  41f814:	and    BYTE PTR [rbx+0x75],dl
  41f817:	jo     0x41f889
  41f819:	outs   dx,DWORD PTR ds:[rsi]
  41f81a:	jb     0x41f890
  41f81c:	gs and BYTE PTR fs:[rbx+0x61],dh
  41f821:	ins    DWORD PTR es:[rdi],dx
  41f822:	jo     0x41f890
  41f824:	and    BYTE PTR gs:[rsi+0x6f],ah
  41f828:	jb     0x41f897
  41f82a:	(bad)  
  41f82b:	je     0x41f8a0
  41f82d:	cmp    al,BYTE PTR [rax]
  41f82f:	add    BYTE PTR [rax],ah
  41f831:	and    BYTE PTR [rax],ah
  41f833:	and    BYTE PTR [rbx+0x75],dl
  41f836:	jo     0x41f8a8
  41f838:	outs   dx,DWORD PTR ds:[rsi]
  41f839:	jb     0x41f8af
  41f83b:	gs and BYTE PTR fs:[rbx+0x68],ah
  41f840:	(bad)  
  41f841:	outs   dx,BYTE PTR ds:[rsi]
  41f842:	outs   dx,BYTE PTR ds:[rsi]
  41f843:	gs ins BYTE PTR es:[rdi],dx
  41f845:	and    BYTE PTR [rcx+riz*2+0x79],ch
  41f849:	outs   dx,DWORD PTR ds:[rsi]
  41f84a:	jne    0x41f8c0
  41f84c:	jae    0x41f888
  41f84e:	add    BYTE PTR [rbp+0x6e],ah
  41f851:	movsxd ebp,DWORD PTR [rdi+0x64]
  41f854:	gs jb  0x41f8ca
  41f857:	add    BYTE PTR [rbp+riz*2+0x63],ah
  41f85b:	outs   dx,DWORD PTR ds:[rsi]
  41f85c:	fs gs jb 0x41f8d3
  41f860:	add    BYTE PTR [rsi+0x6f],cl
  41f863:	and    BYTE PTR [rbx+0x6f],ah
  41f866:	fs movsxd esp,DWORD PTR gs:[rax]
  41f86a:	outs   dx,BYTE PTR ds:[rsi]
  41f86b:	(bad)  
  41f86c:	ins    DWORD PTR es:[rdi],dx
  41f86d:	and    BYTE PTR gs:[rbx+0x70],dh
  41f871:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41f875:	imul   esp,DWORD PTR [rbp+0x64],0xa2e
  41f87c:	add    BYTE PTR [rax],al
  41f87e:	add    BYTE PTR [rax],al
  41f880:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41f882:	fs movsxd esp,DWORD PTR gs:[rax]
  41f886:	(bad)  
  41f887:	and    eax,0x69202773
  41f88c:	jae    0x41f8ae
  41f88e:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  41f892:	outs   dx,BYTE PTR ds:[rsi]
  41f893:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  41f897:	rex.RX
  41f898:	rex.RX ins DWORD PTR es:[rdi],dx
  41f89a:	jo     0x41f901
  41f89c:	addr32 sub al,0x20
  41f89f:	(bad)  
  41f8a0:	jne    0x41f916
  41f8a2:	and    BYTE PTR [rsi+0x6f],ch
  41f8a5:	and    BYTE PTR [rip+0x6f662073],ah        # 0x6fa8191e
  41f8ab:	jb     0x41f8cd
  41f8ad:	imul   esi,DWORD PTR [rax+riz*1+0x61],0x61206572
  41f8b5:	jbe    0x41f918
  41f8b7:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x202e656c
  41f8bf:	rex.RX
  41f8c0:	rex.RX ins DWORD PTR es:[rdi],dx
  41f8c2:	jo     0x41f929
  41f8c4:	and    BYTE PTR [ebp+0x69],ch
  41f8c8:	addr32 push 0x656e2074
  41f8ce:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41f8d4:	(bad)  
  41f8d5:	and    BYTE PTR gs:[rdx+0x65],dh
  41f8d9:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41f8dc:	jo     0x41f947
  41f8de:	ins    BYTE PTR es:[rdi],dx
  41f8df:	gs and BYTE PTR fs:[rdi+0x69],dh
  41f8e4:	je     0x41f94e
  41f8e6:	and    BYTE PTR [rcx+0x64],ah
  41f8e9:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
  41f8f2:	gs js  0x41f969
  41f8f5:	gs jb  0x41f966
  41f8f8:	(bad)  
  41f8f9:	ins    BYTE PTR es:[rdi],dx
  41f8fa:	and    BYTE PTR [rcx+rbp*2+0x62],ch
  41f8fe:	jb     0x41f961
  41f900:	jb     0x41f96b
  41f902:	gs jae 0x41f933
  41f905:	or     al,BYTE PTR [rax]
  41f907:	add    BYTE PTR [rbx+0x6f],al
  41f90a:	fs movsxd esp,DWORD PTR gs:[rax]
  41f90e:	(bad)  
  41f90f:	and    eax,0x69202773
  41f914:	jae    0x41f936
  41f916:	outs   dx,BYTE PTR ds:[rsi]
  41f917:	outs   dx,DWORD PTR ds:[rsi]
  41f918:	je     0x41f93a
  41f91a:	jb     0x41f981
  41f91c:	movsxd ebp,DWORD PTR [rdi+0x67]
  41f91f:	outs   dx,BYTE PTR ds:[rsi]
  41f920:	imul   edi,DWORD PTR [rdx+0x65],0x79622064
  41f927:	and    BYTE PTR [rsi+0x46],al
  41f92a:	ins    DWORD PTR es:[rdi],dx
  41f92b:	jo     0x41f992
  41f92d:	or     al,BYTE PTR cs:[eax]
  41f931:	xor    DWORD PTR [rax],eax
  41f933:	xor    BYTE PTR [rax],al
  41f935:	fs gs data16 (bad) 
  41f939:	jne    0x41f9a7
  41f93b:	je     0x41f93d
  41f93d:	push   rbp
  41f93e:	outs   dx,BYTE PTR ds:[rsi]
  41f93f:	jb     0x41f9a6
  41f941:	movsxd ebp,DWORD PTR [rdi+0x67]
  41f944:	outs   dx,BYTE PTR ds:[rsi]
  41f945:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  41f94c:	je     0x41f9b7
  41f94e:	outs   dx,DWORD PTR ds:[rsi]
  41f94f:	outs   dx,BYTE PTR ds:[rsi]
  41f950:	and    BYTE PTR [rdi],ah
  41f952:	and    eax,0xa2773
  41f957:	add    BYTE PTR [rbp+0x69],cl
  41f95a:	jae    0x41f9cf
  41f95c:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
  41f963:	jne    0x41f9d2
  41f965:	outs   dx,BYTE PTR gs:[rsi]
  41f967:	je     0x41f989
  41f969:	outs   dx,WORD PTR ds:[rsi]
  41f96b:	jb     0x41f98d
  41f96d:	outs   dx,DWORD PTR ds:[rsi]
  41f96e:	jo     0x41f9e4
  41f970:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  41f977:	(bad)  
  41f978:	or     al,BYTE PTR [rax]
  41f97a:	rex.B jb 0x41f9ef
  41f97d:	(bad)  
  41f97e:	jns    0x41f9a0
  41f980:	je     0x41f9f1
  41f982:	outs   dx,DWORD PTR ds:[rsi]
  41f983:	and    BYTE PTR [rdx+0x69],ah
  41f986:	or     al,BYTE PTR cs:[eax]
  41f98a:	add    BYTE PTR [rax],al
  41f98c:	add    BYTE PTR [rax],al
  41f98e:	add    BYTE PTR [rax],al
  41f990:	rex.RX (bad) 
  41f992:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  41f99a:	jae    0x41fa01
  41f99c:	je     0x41f9be
  41f99e:	jbe    0x41fa01
  41f9a0:	ins    BYTE PTR es:[rdi],dx
  41f9a1:	jne    0x41fa08
  41f9a3:	and    BYTE PTR [rdi],ah
  41f9a5:	and    eax,0x66202773
  41f9aa:	outs   dx,DWORD PTR ds:[rsi]
  41f9ab:	jb     0x41f9cd
  41f9ad:	outs   dx,DWORD PTR ds:[rsi]
  41f9ae:	jo     0x41fa24
  41f9b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  41f9b7:	(bad)  
  41f9b8:	cmp    ah,BYTE PTR [rax]
  41f9ba:	and    eax,0xa73
  41f9bf:	add    BYTE PTR [rax+0x61],dl
  41f9c2:	jb     0x41fa37
  41f9c4:	imul   ebp,DWORD PTR [rsi+0x67],0x67206120
  41f9cb:	jb     0x41fa3c
  41f9cd:	jne    0x41fa3f
  41f9cf:	and    BYTE PTR [rdi+0x66],ch
  41f9d2:	and    BYTE PTR [rdi+0x70],ch
  41f9d5:	je     0x41fa40
  41f9d7:	outs   dx,DWORD PTR ds:[rsi]
  41f9d8:	outs   dx,BYTE PTR ds:[rsi]
  41f9d9:	jae    0x41fa15
  41f9db:	and    BYTE PTR [rip+0x73252073],ah        # 0x73671a54
  41f9e1:	or     al,BYTE PTR cs:[rax]
  41f9e4:	add    BYTE PTR [rax],al
  41f9e6:	add    BYTE PTR [rax],al
  41f9e8:	push   rbx
  41f9e9:	jne    0x41fa4e
  41f9eb:	movsxd esp,DWORD PTR [rbp+0x73]
  41f9ee:	jae    0x41fa56
  41f9f0:	jne    0x41fa5e
  41f9f2:	ins    BYTE PTR es:[rdi],dx
  41f9f3:	jns    0x41fa15
  41f9f5:	jo     0x41fa58
  41f9f7:	jb     0x41fa6c
  41f9f9:	gs and BYTE PTR fs:[rcx+0x20],ah
  41f9fe:	addr32 jb 0x41fa70
  41fa01:	jne    0x41fa73
  41fa03:	and    BYTE PTR [rdi+0x66],ch
  41fa06:	and    BYTE PTR [rdi+0x70],ch
  41fa09:	je     0x41fa74
  41fa0b:	outs   dx,DWORD PTR ds:[rsi]
  41fa0c:	outs   dx,BYTE PTR ds:[rsi]
  41fa0d:	jae    0x41fa3d
  41fa0f:	or     al,BYTE PTR [rax]
  41fa11:	add    BYTE PTR [rax],al
  41fa13:	add    BYTE PTR [rax],al
  41fa15:	add    BYTE PTR [rax],al
  41fa17:	add    BYTE PTR [rdi+0x70],cl
  41fa1a:	je     0x41fa85
  41fa1c:	outs   dx,DWORD PTR ds:[rsi]
  41fa1d:	outs   dx,BYTE PTR ds:[rsi]
  41fa1e:	and    BYTE PTR [rip+0x25282073],ah        # 0x256a1a97
  41fa24:	jae    0x41fa4f
  41fa26:	and    BYTE PTR [rbx+0x61],ah
  41fa29:	outs   dx,BYTE PTR ds:[rsi]
  41fa2a:	outs   dx,BYTE PTR ds:[rsi]
  41fa2b:	outs   dx,DWORD PTR ds:[rsi]
  41fa2c:	je     0x41fa4e
  41fa2e:	(bad)  
  41fa2f:	and    BYTE PTR gs:[rcx+0x70],ah
  41fa33:	jo     0x41faa1
  41fa35:	imul   esp,DWORD PTR [rbp+0x64],0x206f7420
  41fa3c:	and    eax,0x73252073
  41fa41:	and    BYTE PTR [rip+0x6f79202d],ch        # 0x6fbb1a74
  41fa47:	jne    0x41fa69
  41fa49:	(bad)  
  41fa4a:	jb     0x41fab1
  41fa4c:	and    BYTE PTR [rdx+rsi*2+0x79],dh
  41fa50:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
  41fa57:	(bad)  
  41fa58:	jo     0x41faca
  41fa5a:	ins    BYTE PTR es:[rdi],dx
  41fa5b:	jns    0x41fa7d
  41fa5d:	(bad)  
  41fa5e:	outs   dx,BYTE PTR ds:[rsi]
  41fa5f:	and    BYTE PTR [rcx+0x6e],ch
  41fa62:	jo     0x41fad9
  41fa64:	je     0x41fa86
  41fa66:	outs   dx,DWORD PTR ds:[rsi]
  41fa67:	jo     0x41fadd
  41fa69:	imul   ebp,DWORD PTR [rdi+0x6e],0x206f7420
  41fa70:	(bad)  
  41fa71:	outs   dx,BYTE PTR ds:[rsi]
  41fa72:	and    BYTE PTR [rdi+0x75],ch
  41fa75:	je     0x41fae7
  41fa77:	jne    0x41faed
  41fa79:	and    BYTE PTR [rsi+0x69],ah
  41fa7c:	ins    BYTE PTR es:[rdi],dx
  41fa7d:	and    BYTE PTR gs:[rdi+0x72],ch
  41fa81:	and    BYTE PTR [rsi+0x69],dh
  41fa84:	movsxd esp,DWORD PTR [rbp+0x20]
  41fa87:	jbe    0x41faee
  41fa89:	jb     0x41fafe
  41fa8b:	(bad)  
  41fa8c:	and    BYTE PTR cs:[rbp+0x6f],cl
  41fa90:	jbe    0x41faf7
  41fa92:	and    BYTE PTR [rax+rbp*2+0x69],dh
  41fa96:	jae    0x41fab8
  41fa98:	outs   dx,DWORD PTR ds:[rsi]
  41fa99:	jo     0x41fb0f
  41fa9b:	imul   ebp,DWORD PTR [rdi+0x6e],0x66656220
  41faa2:	outs   dx,DWORD PTR ds:[rsi]
  41faa3:	jb     0x41fb0a
  41faa5:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41faa9:	and    BYTE PTR [rsi+0x69],ah
  41faac:	ins    BYTE PTR es:[rdi],dx
  41faad:	and    BYTE PTR gs:[rcx+0x74],ch
  41fab1:	and    BYTE PTR [rdx+0x65],ah
  41fab4:	ins    BYTE PTR es:[rdi],dx
  41fab5:	outs   dx,DWORD PTR ds:[rsi]
  41fab6:	outs   dx,BYTE PTR ds:[rsi]
  41fab7:	addr32 jae 0x41fada
  41faba:	je     0x41fb2b
  41fabc:	or     al,BYTE PTR cs:[rax]
  41fabf:	add    BYTE PTR [rcx+0x70],al
  41fac2:	jo     0x41fb30
  41fac4:	jns    0x41fb2f
  41fac6:	outs   dx,BYTE PTR ds:[rsi]
  41fac7:	and    BYTE PTR [edi+0x70],ch
  41facb:	je     0x41fb36
  41facd:	outs   dx,DWORD PTR ds:[rsi]
  41face:	outs   dx,BYTE PTR ds:[rsi]
  41facf:	and    BYTE PTR [rip+0x25282073],ah        # 0x256a1b48
  41fad5:	jae    0x41fb00
  41fad7:	and    BYTE PTR [rdi+0x69],dh
  41fada:	je     0x41fb44
  41fadc:	and    BYTE PTR [rcx+0x72],ah
  41fadf:	addr32 jne 0x41fb4f
  41fae2:	outs   dx,BYTE PTR gs:[rsi]
  41fae4:	je     0x41fb06
  41fae6:	and    eax,0xa2e73
  41faeb:	fs gs (bad) 
  41faee:	jne    0x41fb57
  41faf0:	add    BYTE PTR [rsi+0x64],ah
  41faf3:	gs (bad) 
  41faf5:	jne    0x41fb5e
  41faf7:	add    BYTE PTR [rdx+0x6f],dl
  41fafa:	jne    0x41fb70
  41fafc:	imul   ebp,DWORD PTR [rsi+0x67],0x74706f20
  41fb03:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  41fb0a:	je     0x41fb7b
  41fb0c:	and    BYTE PTR [rdx+0x6f],ah
  41fb0f:	je     0x41fb79
  41fb11:	and    BYTE PTR [rbx+0x6f],ah
  41fb14:	fs movsxd esp,DWORD PTR gs:[rax]
  41fb18:	(bad)  
  41fb19:	outs   dx,BYTE PTR ds:[rsi]
  41fb1a:	and    BYTE PTR fs:[rbp+0x75],ch
  41fb1e:	js     0x41fb85
  41fb20:	jb     0x41fb42
  41fb22:	ins    BYTE PTR es:[rdi],dx
  41fb23:	(bad)  
  41fb24:	jns    0x41fb8b
  41fb26:	jb     0x41fb32
  41fb28:	add    BYTE PTR [rbx+0x72],dh
  41fb2b:	movsxd ebp,DWORD PTR [rax+0x0]
  41fb2e:	fs jae 0x41fba5
  41fb31:	ja     0x41fb33
  41fb33:	fs jae 0x41fbaa
  41fb36:	push   0x63727300
  41fb3b:	pop    rdi
  41fb3c:	outs   dx,WORD PTR ds:[rsi]
  41fb3e:	jb     0x41fbad
  41fb40:	(bad)  
  41fb41:	je     0x41fb43
  41fb43:	fs jae 0x41fbba
  41fb46:	pop    rdi
  41fb47:	outs   dx,WORD PTR ds:[rsi]
  41fb49:	jb     0x41fbb8
  41fb4b:	(bad)  
  41fb4c:	je     0x41fb4e
  41fb4e:	add    BYTE PTR [rax],al
  41fb50:	imul   r14d,DWORD PTR [rdx+0x65],0x796c7463
  41fb58:	and    BYTE PTR [rbp+0x73],dh
  41fb5b:	imul   ebp,DWORD PTR [rsi+0x67],0x73777320
  41fb62:	movsxd esp,DWORD PTR [rcx+0x6c]
  41fb65:	and    BYTE PTR gs:[rcx+rbp*2+0x6d],ah
  41fb6a:	outs   dx,BYTE PTR gs:[rsi]
  41fb6c:	jae    0x41fbd7
  41fb6e:	outs   dx,DWORD PTR ds:[rsi]
  41fb6f:	outs   dx,BYTE PTR ds:[rsi]
  41fb70:	jae    0x41fba1
  41fb72:	outs   dx,WORD PTR ds:[rsi]
  41fb74:	jb     0x41fbe3
  41fb76:	(bad)  
  41fb77:	je     0x41fb99
  41fb79:	outs   dx,DWORD PTR ds:[rsi]
  41fb7a:	jo     0x41fbf0
  41fb7c:	imul   ebp,DWORD PTR [rdi+0x6e],0x73692073
  41fb83:	and    BYTE PTR [rsi+0x6f],ch
  41fb86:	je     0x41fba8
  41fb88:	jae    0x41fbff
  41fb8a:	jo     0x41fbfc
  41fb8c:	outs   dx,DWORD PTR ds:[rsi]
  41fb8d:	jb     0x41fc03
  41fb8f:	gs fs sub al,0x20
  41fb93:	jo     0x41fc01
  41fb95:	gs (bad) 
  41fb97:	jae    0x41fbfe
  41fb99:	and    BYTE PTR [rbp+0x73],dh
  41fb9c:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  41fba1:	and    BYTE PTR [rip+0x726f2073],ch        # 0x72b11c1a
  41fba7:	and    BYTE PTR [rip+0x5f786970],ch        # 0x5fba651d
  41fbad:	ins    WORD PTR es:[rdi],dx
  41fbaf:	je     0x41fbd1
  41fbb1:	outs   dx,DWORD PTR ds:[rsi]
  41fbb2:	jo     0x41fc28
  41fbb4:	imul   ebp,DWORD PTR [rdi+0x6e],0x45000a73
  41fbbb:	jb     0x41fc2f
  41fbbd:	outs   dx,DWORD PTR ds:[rsi]
  41fbbe:	jb     0x41fbe0
  41fbc0:	jae    0x41fc27
  41fbc2:	je     0x41fc38
  41fbc4:	imul   ebp,DWORD PTR [rsi+0x67],0x74706f20
  41fbcb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e732520
  41fbd2:	or     al,BYTE PTR [rax]
  41fbd4:	jae    0x41fc48
  41fbd6:	movsxd esi,DWORD PTR [rdi+0x0]
  41fbd9:	push   rbx
  41fbda:	jo     0x41fc48
  41fbdc:	imul   esi,DWORD PTR [rsp+rsi*2+0x69],0x7420676e
  41fbe4:	push   0x6f632065
  41fbe9:	ins    DWORD PTR es:[rdi],dx
  41fbea:	ins    DWORD PTR es:[rdi],dx
  41fbeb:	(bad)  
  41fbec:	outs   dx,BYTE PTR ds:[rsi]
  41fbed:	fs ins BYTE PTR es:[rdi],dx
  41fbef:	imul   ebp,DWORD PTR [rsi+0x65],0x52000a2e
  41fbf6:	gs (bad) 
  41fbf8:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74706f20
  41fc00:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  41fc07:	(bad)  
  41fc08:	and    BYTE PTR [rsi],ch
  41fc0a:	cs add BYTE PTR cs:[rax],ah
  41fc0e:	ins    DWORD PTR es:[rdi],dx
  41fc0f:	(bad)  
  41fc10:	je     0x41fc75
  41fc12:	push   0x61206465
  41fc17:	jae    0x41fc39
  41fc19:	and    eax,0xa2e73
  41fc1e:	add    BYTE PTR [rax],al
  41fc20:	imul   r14,QWORD PTR [r11+0x73],0x20676e69
  41fc28:	(bad)  
  41fc29:	jb     0x41fc92
  41fc2b:	jne    0x41fc9a
  41fc2d:	outs   dx,BYTE PTR gs:[rsi]
  41fc2f:	je     0x41fc51
  41fc31:	outs   dx,WORD PTR ds:[rsi]
  41fc33:	jb     0x41fc55
  41fc35:	outs   dx,DWORD PTR ds:[rsi]
  41fc36:	jo     0x41fcac
  41fc38:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  41fc3f:	(bad)  
  41fc40:	or     al,BYTE PTR cs:[rax]
  41fc43:	add    BYTE PTR [rax],al
  41fc45:	add    BYTE PTR [rax],al
  41fc47:	add    BYTE PTR [rax],ah
  41fc49:	ins    DWORD PTR es:[rdi],dx
  41fc4a:	(bad)  
  41fc4b:	je     0x41fcb0
  41fc4d:	push   0x61206465
  41fc52:	jae    0x41fc74
  41fc54:	and    eax,0x69772073
  41fc59:	je     0x41fcc3
  41fc5b:	and    BYTE PTR [rcx+0x72],ah
  41fc5e:	addr32 jne 0x41fcce
  41fc61:	outs   dx,BYTE PTR gs:[rsi]
  41fc63:	je     0x41fc85
  41fc65:	(bad)  
  41fc66:	and    eax,0xa2e2773
  41fc6b:	add    BYTE PTR [rax],al
  41fc6d:	add    BYTE PTR [rax],al
  41fc6f:	add    BYTE PTR [rax],ah
  41fc71:	ins    DWORD PTR es:[rdi],dx
  41fc72:	(bad)  
  41fc73:	je     0x41fcd8
  41fc75:	push   0x61206465
  41fc7a:	jae    0x41fc9c
  41fc7c:	outs   dx,DWORD PTR ds:[rsi]
  41fc7d:	jo     0x41fcf3
  41fc7f:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  41fc86:	(bad)  
  41fc87:	and    BYTE PTR [rax],ch
  41fc89:	and    eax,0x77202973
  41fc8e:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x75677261
  41fc96:	ins    DWORD PTR es:[rdi],dx
  41fc97:	outs   dx,BYTE PTR gs:[rsi]
  41fc99:	je     0x41fcbb
  41fc9b:	(bad)  
  41fc9c:	and    eax,0xa2e2773
  41fca1:	add    BYTE PTR [rax],al
  41fca3:	add    BYTE PTR [rax],al
  41fca5:	add    BYTE PTR [rax],al
  41fca7:	add    BYTE PTR [rax],ah
  41fca9:	ins    DWORD PTR es:[rdi],dx
  41fcaa:	(bad)  
  41fcab:	je     0x41fd10
  41fcad:	push   0x61206465
  41fcb2:	jae    0x41fcd4
  41fcb4:	push   r14
  41fcb6:	rex.WRXB jo 0x41fd2d
  41fcb9:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  41fcc0:	(bad)  
  41fcc1:	and    BYTE PTR [rdi+0x69],dh
  41fcc4:	je     0x41fd2e
  41fcc6:	and    BYTE PTR [rcx+0x72],ah
  41fcc9:	addr32 jne 0x41fd39
  41fccc:	outs   dx,BYTE PTR gs:[rsi]
  41fcce:	je     0x41fcf0
  41fcd0:	(bad)  
  41fcd1:	and    eax,0xa2e2773
  41fcd6:	add    BYTE PTR [rax],al
  41fcd8:	rex.RB jb 0x41fd4d
  41fcdb:	outs   dx,DWORD PTR ds:[rsi]
  41fcdc:	jb     0x41fcfe
  41fcde:	jo     0x41fd41
  41fce0:	jb     0x41fd55
  41fce2:	imul   ebp,DWORD PTR [rsi+0x67],0x74706f20
  41fce9:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  41fcf0:	(bad)  
  41fcf1:	and    BYTE PTR [rdi+0x69],dh
  41fcf4:	je     0x41fd5e
  41fcf6:	and    BYTE PTR [rcx+0x72],ah
  41fcf9:	addr32 jne 0x41fd69
  41fcfc:	outs   dx,BYTE PTR gs:[rsi]
  41fcfe:	je     0x41fd20
  41fd00:	(bad)  
  41fd01:	and    eax,0xa2e2773
  41fd06:	add    BYTE PTR [rax],al
  41fd08:	and    BYTE PTR [rbp+0x61],ch
  41fd0b:	je     0x41fd70
  41fd0d:	push   0x61206465
  41fd12:	jae    0x41fd34
  41fd14:	outs   dx,DWORD PTR ds:[rsi]
  41fd15:	jo     0x41fd8b
  41fd17:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  41fd1e:	(bad)  
  41fd1f:	and    BYTE PTR [rax],ch
  41fd21:	and    eax,0x77202973
  41fd26:	imul   esi,DWORD PTR [rax+rbp*2+0x20],0x75677261
  41fd2e:	ins    DWORD PTR es:[rdi],dx
  41fd2f:	outs   dx,BYTE PTR gs:[rsi]
  41fd31:	je     0x41fd53
  41fd33:	xor    BYTE PTR [rsi],ch
  41fd35:	or     al,BYTE PTR [rax]
  41fd37:	push   rbp
  41fd38:	outs   dx,BYTE PTR ds:[rsi]
  41fd39:	jb     0x41fda0
  41fd3b:	movsxd ebp,DWORD PTR [rdi+0x67]
  41fd3e:	outs   dx,BYTE PTR ds:[rsi]
  41fd3f:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  41fd46:	je     0x41fdb1
  41fd48:	outs   dx,DWORD PTR ds:[rsi]
  41fd49:	outs   dx,BYTE PTR ds:[rsi]
  41fd4a:	and    BYTE PTR [rdi],ah
  41fd4c:	and    eax,0xa2e2773
  41fd51:	add    BYTE PTR [rax],al
  41fd53:	add    BYTE PTR [rax],al
  41fd55:	add    BYTE PTR [rax],al
  41fd57:	add    BYTE PTR [rdx+rsi*2+0x61],dl
  41fd5b:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x706f2067
  41fd63:	je     0x41fdce
  41fd65:	outs   dx,DWORD PTR ds:[rsi]
  41fd66:	outs   dx,BYTE PTR ds:[rsi]
  41fd67:	jae    0x41fd89
  41fd69:	ja     0x41fdd0
  41fd6b:	jb     0x41fdd2
  41fd6d:	and    BYTE PTR [rsi+0x6f],ah
  41fd70:	jne    0x41fde0
  41fd72:	and    BYTE PTR fs:[rdi+0x6e],ch
  41fd76:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41fd7a:	and    BYTE PTR [rbx+0x6f],ah
  41fd7d:	ins    DWORD PTR es:[rdi],dx
  41fd7e:	ins    DWORD PTR es:[rdi],dx
  41fd7f:	(bad)  
  41fd80:	outs   dx,BYTE PTR ds:[rsi]
  41fd81:	fs ins BYTE PTR es:[rdi],dx
  41fd83:	imul   ebp,DWORD PTR [rsi+0x65],0xa2e
  41fd8a:	add    BYTE PTR [rax],al
  41fd8c:	add    BYTE PTR [rax],al
  41fd8e:	add    BYTE PTR [rax],al
  41fd90:	rex.RX imul r13d,DWORD PTR [rsi+0x69],0x64656873
  41fd98:	and    BYTE PTR [rbx+0x70],dh
  41fd9b:	ins    BYTE PTR es:[rdi],dx
  41fd9c:	imul   esi,DWORD PTR [rsp+rsi*2+0x69],0x7420676e
  41fda4:	push   0x6f632065
  41fda9:	ins    DWORD PTR es:[rdi],dx
  41fdaa:	ins    DWORD PTR es:[rdi],dx
  41fdab:	(bad)  
  41fdac:	outs   dx,BYTE PTR ds:[rsi]
  41fdad:	fs ins BYTE PTR es:[rdi],dx
  41fdaf:	imul   ebp,DWORD PTR [rsi+0x65],0x72000a2e
  41fdb6:	gs jo  0x41fe1e
  41fdb9:	(bad)  
  41fdba:	je     0x41fdbc
  41fdbc:	and    ah,BYTE PTR [rip+0xa2273]        # 0x4c2035
  41fdc2:	add    BYTE PTR [rax],al
  41fdc4:	add    BYTE PTR [rax],al
  41fdc6:	add    BYTE PTR [rax],al
  41fdc8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41fdca:	jbe    0x41fe2d
  41fdcc:	ins    BYTE PTR es:[rdi],dx
  41fdcd:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x656c676f
  41fdd5:	jbe    0x41fe3c
  41fdd7:	ins    BYTE PTR es:[rdi],dx
  41fdd8:	and    BYTE PTR [rdx],ah
  41fdda:	and    eax,0x202e2273
  41fddf:	push   rax
  41fde0:	outs   dx,DWORD PTR ds:[rsi]
  41fde1:	jae    0x41fe56
  41fde3:	imul   esp,DWORD PTR [rdx+0x6c],0x656c2065
  41fdea:	jbe    0x41fe51
  41fdec:	ins    BYTE PTR es:[rdi],dx
  41fded:	jae    0x41fe0f
  41fdef:	(bad)  
  41fdf0:	jb     0x41fe57
  41fdf2:	and    BYTE PTR [rsi+0x75],ch
  41fdf5:	ins    DWORD PTR es:[rdi],dx
  41fdf6:	(bad)  
  41fdf7:	gs jb  0x41fe6d
  41fdfa:	and    BYTE PTR [rdi+0x72],ch
  41fdfd:	cmp    cl,BYTE PTR [rdx]
  41fdff:	add    BYTE PTR [rcx+0x75],dh
  41fe02:	imul   esp,DWORD PTR [rbp+0x74],0x6e617000
  41fe09:	imul   esp,DWORD PTR [rbx+0x0],0x61746166
  41fe10:	ins    BYTE PTR es:[rdi],dx
  41fe11:	add    BYTE PTR [rbp+0x72],ah
  41fe14:	jb     0x41fe85
  41fe16:	jb     0x41fe18
  41fe18:	ja     0x41fe7b
  41fe1a:	jb     0x41fe8a
  41fe1c:	imul   ebp,DWORD PTR [rsi+0x67],0x666e6900
  41fe23:	outs   dx,DWORD PTR ds:[rsi]
  41fe24:	add    BYTE PTR [rsi+0x65],dh
  41fe27:	jb     0x41fe8b
  41fe29:	outs   dx,DWORD PTR ds:[rsi]
  41fe2a:	jae    0x41fe91
  41fe2c:	add    BYTE PTR [rdx+rsi*2+0x61],dh
  41fe30:	movsxd esp,DWORD PTR [rbp+0x0]
  41fe33:	ins    BYTE PTR es:[rdi],dx
  41fe34:	outs   dx,DWORD PTR ds:[rsi]
  41fe35:	ins    BYTE PTR es:[edi],dx
  41fe37:	gs jbe 0x41fe9f
  41fe3a:	ins    BYTE PTR es:[rdi],dx
  41fe3b:	add    BYTE PTR [rax],al
  41fe3d:	add    BYTE PTR [rax],al
  41fe3f:	add    BYTE PTR [rax+0x6f],dh
  41fe42:	sub    eax,0x616c663e
  41fe47:	addr32 jae 0x41fe6a
  41fe4a:	and    BYTE PTR es:[rax],ch
  41fe4d:	xor    BYTE PTR [rax+0x34],bh
  41fe50:	xor    BYTE PTR [rax],dh
  41fe52:	xor    BYTE PTR [rax],dh
  41fe54:	and    BYTE PTR [rax+riz*1+0x30],bh
  41fe58:	js     0x41fe92
  41fe5a:	xor    BYTE PTR [rax],dh
  41fe5c:	xor    BYTE PTR [rax],dh
  41fe5e:	sub    DWORD PTR [rax],eax
  41fe60:	jbe    0x41fe62
  41fe62:	jb     0x41fec9
  41fe64:	jo     0x41fed5
  41fe66:	jb     0x41fedc
  41fe68:	add    BYTE PTR [rsi+0x46],al
  41fe6b:	push   rdx
  41fe6c:	rex.RB push r8
  41fe6e:	rex.WRXB push r10
  41fe70:	push   rsp
  41fe71:	add    BYTE PTR [rbx+0x6f],al
  41fe74:	ins    DWORD PTR es:[rdi],dx
  41fe75:	ins    DWORD PTR es:[rdi],dx
  41fe76:	(bad)  
  41fe77:	outs   dx,BYTE PTR ds:[rsi]
  41fe78:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
  41fe7d:	cmp    cl,BYTE PTR gs:[rdx]
  41fe80:	add    BYTE PTR [rbp+riz*1+0x63],bl
  41fe84:	add    BYTE PTR [rax+rdi*2+0x25],bl
  41fe88:	xor    BYTE PTR [rdx],dh
  41fe8a:	js     0x41fe8c
  41fe8c:	push   0x5f656469
  41fe91:	(bad)
  41fe96:	jb     0x41fe98
  41fe98:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41fe9a:	jbe    0x41fefd
  41fe9c:	ins    BYTE PTR es:[rdi],dx
  41fe9d:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x615f7861
  41fea5:	ins    BYTE PTR es:[rdi],dx
  41fea6:	ins    BYTE PTR es:[rdi],dx
  41fea7:	outs   dx,DWORD PTR ds:[rsi]
  41fea8:	movsxd esp,DWORD PTR [rax]
  41feaa:	and    ah,BYTE PTR [rip+0xa2e2273]        # 0xa702123
	...
  41feb8:	sub    eax,0x6e207325
  41febd:	outs   dx,DWORD PTR ds:[rsi]
  41febe:	je     0x41fee0
  41fec0:	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
  41fec7:	outs   dx,BYTE PTR ds:[rsi]
  41fec8:	je     0x41ff2f
  41feca:	and    BYTE PTR fs:[rdi+0x6e],ch
  41fece:	and    BYTE PTR [rax+rbp*2+0x69],dh
  41fed2:	jae    0x41fef4
  41fed4:	rex.WRXB push r11
  41fed6:	or     al,BYTE PTR [rax]
  41fed8:	and    eax,0x25203a73
  41fedd:	jae    0x41fee9
  41fedf:	add    BYTE PTR [rsi+0x65],dh
  41fee2:	jb     0x41ff57
  41fee4:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732500
  41feeb:	jbe    0x41ff52
  41feed:	jb     0x41ff62
  41feef:	imul   ebp,DWORD PTR [rdi+0x6e],0x382e3220
  41fef6:	xor    DWORD PTR cs:[rax],esi
  41fef9:	add    BYTE PTR [rax],al
  41fefb:	add    BYTE PTR [rax],al
  41fefd:	add    BYTE PTR [rax],al
  41feff:	add    BYTE PTR [rax],ah
  41ff01:	rex.XB outs dx,DWORD PTR ds:[rsi]
  41ff03:	jo     0x41ff7e
  41ff05:	jb     0x41ff70
  41ff07:	addr32 push 0x63282074
  41ff0d:	sub    DWORD PTR [rax],esp
  41ff0f:	and    eax,0x64252d64
  41ff14:	and    BYTE PTR [rax+rbp*2+0x65],dh
  41ff18:	and    BYTE PTR [rsi+0x46],al
  41ff1b:	ins    DWORD PTR es:[rdi],dx
  41ff1c:	jo     0x41ff83
  41ff1e:	and    BYTE PTR [ebp+eiz*2+0x76],ah
  41ff23:	gs ins BYTE PTR es:[rdi],dx
  41ff25:	outs   dx,DWORD PTR ds:[rsi]
  41ff26:	jo     0x41ff8d
  41ff28:	jb     0x41ff9d
  41ff2a:	add    BYTE PTR [rip+0x69756273],ah        # 0x69b761a3
  41ff30:	ins    BYTE PTR es:[rdi],dx
  41ff31:	je     0x41ff53
  41ff33:	ja     0x41ff9e
  41ff35:	je     0x41ff9f
  41ff37:	and    BYTE PTR [rip+0x67000a73],ah        # 0x674209b0
  41ff3d:	movsxd esp,DWORD PTR [rbx+0x20]
  41ff40:	xor    al,0x2e
  41ff42:	cmp    DWORD PTR [rsi],ebp
  41ff44:	xor    al,0x20
  41ff46:	sub    BYTE PTR [rdi+0x43],al
  41ff49:	rex.XB sub DWORD PTR [r8],eax
  41ff4c:	add    BYTE PTR [rax],al
  41ff4e:	add    BYTE PTR [rax],al
  41ff50:	and    eax,0x6e6f6373
  41ff55:	imul   sp,WORD PTR [rdi+0x75],0x6172
  41ff5b:	je     0x41ffc6
  41ff5d:	outs   dx,DWORD PTR ds:[rsi]
  41ff5e:	outs   dx,BYTE PTR ds:[rsi]
  41ff5f:	cmp    ah,BYTE PTR [rax]
  41ff61:	sub    eax,0x6f72632d
  41ff66:	jae    0x41ffdb
  41ff68:	sub    eax,0x66657270
  41ff6d:	imul   edi,DWORD PTR [rax+0x3d],0x5f363878
  41ff74:	ss xor al,0x2d
  41ff77:	ja     0x41ffaf
  41ff79:	xor    al,0x2d
  41ff7b:	ins    DWORD PTR es:[rdi],dx
  41ff7c:	imul   ebp,DWORD PTR [rsi+0x67],0x2d323377
  41ff83:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b064b6
  41ff89:	(bad)  
  41ff8a:	ins    BYTE PTR es:[rdi],dx
  41ff8b:	gs sub eax,0x736f7263
  41ff91:	jae    0x41ffc0
  41ff93:	movsxd ebp,DWORD PTR [rdi+0x6d]
  41ff96:	jo     0x420001
  41ff98:	ins    BYTE PTR es:[rdi],dx
  41ff99:	and    BYTE PTR gs:[rip+0x7261742d],ch        # 0x72a373cd
  41ffa0:	addr32 gs je 0x41ffd1
  41ffa4:	outs   dx,DWORD PTR ds:[rsi]
  41ffa5:	jae    0x41ffe4
  41ffa7:	ins    DWORD PTR es:[rdi],dx
  41ffa8:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  41ffaf:	sub    eax,0x6372612d
  41ffb4:	push   0x3638783d
  41ffb9:	pop    rdi
  41ffba:	ss xor al,0x20
  41ffbd:	sub    eax,0x6572702d
  41ffc2:	imul   di,WORD PTR [rax+0x3d],0x732f
  41ffc8:	movsxd esi,DWORD PTR [rdx+0x61]
  41ffcb:	je     0x420030
  41ffcd:	push   0x65776a2f
  41ffd2:	(bad)  
  41ffd3:	ins    DWORD PTR es:[rdi],dx
  41ffd4:	js     0x42003b
  41ffd6:	sub    eax,0x6174636f
  41ffdb:	jbe    0x420042
  41ffdd:	(bad)  
  41ffde:	xor    al,0x2e
  41ffe0:	xor    ch,BYTE PTR [rsi]
  41ffe2:	xor    DWORD PTR [rdi],ebp
  41ffe4:	ja     0x42001c
  41ffe6:	xor    al,0x2d
  41ffe8:	xor    esi,DWORD PTR [rdx]
  41ffea:	(bad)  
  41ffeb:	jne    0x420060
  41ffed:	jb     0x42001e
  41ffef:	js     0x420029
  41fff1:	ss pop rdi
  41fff3:	ss xor al,0x2d
  41fff6:	ja     0x42002e
  41fff8:	xor    al,0x2d
  41fffa:	ins    DWORD PTR es:[rdi],dx
  41fffb:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  420002:	sub    eax,0x616e652d
  420007:	(bad)  
  420008:	ins    BYTE PTR es:[rdi],dx
  420009:	gs sub eax,0x72616873
  42000f:	gs and BYTE PTR fs:[rip+0x7369642d],ch        # 0x73ab6444
  420017:	(bad)  
  420018:	(bad)  
  420019:	ins    BYTE PTR es:[rdi],dx
  42001a:	gs sub eax,0x74617473
  420020:	imul   esp,DWORD PTR [rbx+0x20],0x61792d2d
  420027:	jae    0x420096
  420029:	gs js  0x420091
  42002c:	cmp    eax,0x7263732f
  420031:	(bad)  
  420032:	je     0x420097
  420034:	push   0x65776a2f
  420039:	(bad)  
  42003a:	ins    DWORD PTR es:[rdi],dx
  42003b:	js     0x4200a2
  42003d:	sub    eax,0x6174636f
  420042:	jbe    0x4200a9
  420044:	(bad)  
  420045:	xor    al,0x2e
  420047:	xor    ch,BYTE PTR [rsi]
  420049:	xor    DWORD PTR [rdi],ebp
  42004b:	ja     0x420083
  42004d:	xor    al,0x2d
  42004f:	xor    esi,DWORD PTR [rdx]
  420051:	(bad)  
  420052:	jne    0x4200c7
  420054:	jb     0x420085
  420056:	(bad)  
  420057:	imul   ebp,DWORD PTR [rsi+0x2f],0x6d736179
  42005e:	and    BYTE PTR [rip+0x7478652d],ch        # 0x74ba6591
  420064:	jb     0x4200c7
  420066:	sub    eax,0x7362696c
  42006b:	cmp    eax,0x6f636d2d
  420070:	outs   dx,BYTE PTR ds:[rsi]
  420071:	jae    0x4200e2
  420073:	ins    BYTE PTR es:[rdi],dx
  420074:	and    BYTE PTR gs:[rip+0x7369642d],ch        # 0x73ab64a8
  42007b:	(bad)  
  42007c:	(bad)  
  42007d:	ins    BYTE PTR es:[rdi],dx
  42007e:	gs sub eax,0x75626564
  420084:	and    BYTE PTR [eip+0x7369642d],ch        # 0x73ab64b8
  42008b:	(bad)  
  42008c:	(bad)  
  42008d:	ins    BYTE PTR es:[rdi],dx
  42008e:	gs sub eax,0x20636f64
  420094:	sub    eax,0x616e652d
  420099:	(bad)  
  42009a:	ins    BYTE PTR es:[rdi],dx
  42009b:	gs sub eax,0x616d656d
  4200a1:	ins    BYTE PTR es:[rdi],dx
  4200a2:	imul   esp,DWORD PTR [rdi+0x6e],0x6361682d
  4200a9:	imul   esp,DWORD PTR [rax],0x2d
  4200ac:	sub    eax,0x62616e65
  4200b1:	ins    BYTE PTR es:[rdi],dx
  4200b2:	gs sub eax,0x65727661
  4200b8:	jae    0x42011b
  4200ba:	ins    DWORD PTR es:[rdi],dx
  4200bb:	jo     0x420129
  4200bd:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b065f1
  4200c4:	(bad)  
  4200c5:	ins    BYTE PTR es:[rdi],dx
  4200c6:	gs sub eax,0x206c7067
  4200cc:	sub    eax,0x616e652d
  4200d1:	(bad)  
  4200d2:	ins    BYTE PTR es:[rdi],dx
  4200d3:	gs sub eax,0x73726576
  4200d9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d2033
  4200e0:	imul   esi,DWORD PTR fs:[rbx+0x61],0x2d656c62
  4200e8:	jo     0x42015e
  4200ea:	push   0x64616572
  4200ef:	jae    0x420111
  4200f1:	sub    eax,0x616e652d
  4200f6:	(bad)  
  4200f7:	ins    BYTE PTR es:[rdi],dx
  4200f8:	gs sub eax,0x74323377
  4200fe:	push   0x64616572
  420103:	jae    0x420125
  420105:	sub    eax,0x616e652d
  42010a:	(bad)  
  42010b:	ins    BYTE PTR es:[rdi],dx
  42010c:	gs sub eax,0x73697661
  420112:	jns    0x420182
  420114:	je     0x42017e
  420116:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b06649
  42011c:	(bad)  
  42011d:	ins    BYTE PTR es:[rdi],dx
  42011e:	gs sub eax,0x74756e67
  420124:	ins    BYTE PTR es:[rdi],dx
  420125:	jae    0x420147
  420127:	sub    eax,0x616e652d
  42012c:	(bad)  
  42012d:	ins    BYTE PTR es:[rdi],dx
  42012e:	gs sub eax,0x7362696c
  420134:	jo     0x42019b
  420136:	gs js  0x420159
  420139:	sub    eax,0x616e652d
  42013e:	(bad)  
  42013f:	ins    BYTE PTR es:[rdi],dx
  420140:	gs sub eax,0x7462696c
  420146:	push   0x61726f65
  42014b:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b0667e
  420151:	(bad)  
  420152:	ins    BYTE PTR es:[rdi],dx
  420153:	gs sub eax,0x7662696c
  420159:	outs   dx,DWORD PTR ds:[rsi]
  42015a:	jb     0x4201be
  42015c:	imul   esi,DWORD PTR [rbx+0x20],0x6e652d2d
  420163:	(bad)  
  420164:	(bad)  
  420165:	ins    BYTE PTR es:[rdi],dx
  420166:	gs sub eax,0x6d62696c
  42016c:	jo     0x4201a1
  42016e:	ins    BYTE PTR es:[rdi],dx
  42016f:	(bad)  
  420170:	ins    DWORD PTR es:[rdi],dx
  420171:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b066a5
  420178:	(bad)  
  420179:	ins    BYTE PTR es:[rdi],dx
  42017a:	gs sub eax,0x7862696c
  420180:	jbe    0x4201eb
  420182:	and    BYTE PTR fs:[rip+0x616e652d],ch        # 0x61b066b6
  420189:	(bad)  
  42018a:	ins    BYTE PTR es:[rdi],dx
  42018b:	gs sub eax,0x6f62696c
  420191:	jo     0x4201f8
  420193:	outs   dx,BYTE PTR ds:[rsi]
  420194:	movsxd ebp,DWORD PTR [rdi+0x72]
  420197:	gs sub eax,0x6e726d61
  42019d:	(bad)  
  42019e:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b066d1
  4201a4:	(bad)  
  4201a5:	ins    BYTE PTR es:[rdi],dx
  4201a6:	gs sub eax,0x6f62696c
  4201ac:	jo     0x420213
  4201ae:	outs   dx,BYTE PTR ds:[rsi]
  4201af:	movsxd ebp,DWORD PTR [rdi+0x72]
  4201b2:	gs sub eax,0x77726d61
  4201b8:	(bad)  
  4201b9:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b066ec
  4201bf:	(bad)  
  4201c0:	ins    BYTE PTR es:[rdi],dx
  4201c1:	gs sub eax,0x7862696c
  4201c7:	xor    dh,BYTE PTR [rsi]
  4201c9:	xor    al,0x20
  4201cb:	sub    eax,0x616e652d
  4201d0:	(bad)  
  4201d1:	ins    BYTE PTR es:[rdi],dx
  4201d2:	gs sub eax,0x7662696c
  4201d8:	jo     0x420252
  4201da:	or     al,BYTE PTR [rax]
  4201dc:	add    BYTE PTR [rax],al
  4201de:	add    BYTE PTR [rax],al
  4201e0:	and    eax,0x52415773
  4201e5:	rex.WRX
  4201e6:	rex.WB
  4201e7:	rex.WRX
  4201e8:	rex.RXB cmp r12b,BYTE PTR [r8]
  4201eb:	ins    BYTE PTR es:[rdi],dx
  4201ec:	imul   esp,DWORD PTR [rdx+0x72],0x20797261
  4201f3:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4201f6:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4201fc:	je     0x420267
  4201fe:	outs   dx,DWORD PTR ds:[rsi]
  4201ff:	outs   dx,BYTE PTR ds:[rsi]
  420200:	and    BYTE PTR [rbp+0x69],ch
  420203:	jae    0x420272
  420205:	(bad)  
  420206:	je     0x42026b
  420208:	push   0x7325000a
  42020d:	and    eax,0x7331312d
  420212:	and    BYTE PTR [rbx+0x6f],ah
  420215:	outs   dx,BYTE PTR ds:[rsi]
  420216:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42021c:	je     0x420287
  42021e:	outs   dx,DWORD PTR ds:[rsi]
  42021f:	outs   dx,BYTE PTR ds:[rsi]
  420220:	cmp    ah,BYTE PTR [rax]
  420222:	and    eax,0x61000a73
  420227:	jbe    0x42029e
  420229:	je     0x420294
  42022b:	ins    BYTE PTR es:[rdi],dx
  42022c:	add    BYTE PTR [rcx+0x76],ah
  42022f:	movsxd ebp,DWORD PTR [rdi+0x64]
  420232:	movsxd eax,DWORD PTR gs:[rax]
  420235:	(bad)  
  420236:	jbe    0x42029e
  420238:	outs   dx,DWORD PTR ds:[rsi]
  420239:	jb     0x4202a8
  42023b:	(bad)  
  42023c:	je     0x42023e
  42023e:	(bad)  
  42023f:	jbe    0x4202a5
  420241:	gs jbe 0x4202ad
  420244:	movsxd esp,DWORD PTR [rbp+0x0]
  420247:	(bad)  
  420248:	jbe    0x4202b0
  42024a:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x76610072
  420252:	jb     0x4202b9
  420254:	jae    0x4202b7
  420256:	ins    DWORD PTR es:[rdi],dx
  420257:	jo     0x4202c5
  420259:	add    BYTE PTR gs:[rbx+0x77],dh
  42025d:	jae    0x4202c2
  42025f:	(bad)  
  420260:	ins    BYTE PTR es:[rdi],dx
  420261:	add    BYTE PTR gs:[rbx+0x77],dh
  420265:	jb     0x4202cc
  420267:	jae    0x4202ca
  420269:	ins    DWORD PTR es:[rdi],dx
  42026a:	jo     0x4202d8
  42026c:	add    BYTE PTR gs:[rax+0x6f],dh
  420270:	jae    0x4202e6
  420272:	jo     0x4202e6
  420274:	outs   dx,DWORD PTR ds:[rsi]
  420275:	movsxd eax,DWORD PTR [rax]
  420277:	add    BYTE PTR [rip+0x62696c73],ah        # 0x62ab6ef0
  42027d:	and    eax,0x7331312d
  420282:	and    BYTE PTR [rip+0x252e6432],ah        # 0x257066ba
  420288:	xor    esp,DWORD PTR [rsi+rbp*1+0x25]
  42028c:	xor    esp,DWORD PTR [rax+riz*1+0x2f]
  420290:	and    BYTE PTR [rip+0x252e6432],ah        # 0x257066c8
  420296:	xor    esp,DWORD PTR [rsi+rbp*1+0x25]
  42029a:	xor    esp,DWORD PTR [rdx+rcx*1+0x0]
  42029e:	add    BYTE PTR [rax],al
  4202a0:	and    eax,0x73692073
  4202a5:	and    BYTE PTR [rsi+0x72],ah
  4202a8:	gs and BYTE PTR gs:[rbx+0x6f],dh
  4202ad:	data16 je 0x420327
  4202b0:	(bad)  
  4202b1:	jb     0x420318
  4202b3:	cmp    esp,DWORD PTR [rax]
  4202b5:	jns    0x420326
  4202b7:	jne    0x4202d9
  4202b9:	movsxd esp,DWORD PTR [rcx+0x6e]
  4202bc:	and    BYTE PTR [rdx+0x65],dh
  4202bf:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  4202c7:	je     0x42032e
  4202c9:	and    BYTE PTR [rcx+0x74],ch
  4202cc:	and    BYTE PTR [rcx+0x6e],ah
  4202cf:	fs (bad) 
  4202d1:	outs   dx,DWORD PTR ds:[rsi]
  4202d2:	jb     0x4202f4
  4202d4:	ins    DWORD PTR es:[rdi],dx
  4202d5:	outs   dx,DWORD PTR ds:[rsi]
  4202d6:	imul   esp,DWORD PTR fs:[rsi+0x79],0x2074690a
  4202de:	jne    0x42034e
  4202e0:	fs gs jb 0x420304
  4202e4:	je     0x42034e
  4202e6:	and    BYTE PTR gs:[rbp+riz*2+0x72],dh
  4202eb:	ins    DWORD PTR es:[rdi],dx
  4202ec:	jae    0x42030e
  4202ee:	outs   dx,DWORD PTR ds:[rsi]
  4202ef:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  4202f4:	and    BYTE PTR [rdi+0x4e],al
  4202f7:	push   rbp
  4202f8:	and    BYTE PTR [rdi+0x65],al
  4202fb:	outs   dx,BYTE PTR ds:[rsi]
  4202fc:	gs jb  0x420360
  4202ff:	ins    BYTE PTR es:[rdi],dx
  420300:	and    BYTE PTR [rax+0x75],dl
  420303:	(bad)  
  420304:	ins    BYTE PTR es:[rdi],dx
  420305:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  42030c:	outs   dx,BYTE PTR ds:[rsi]
  42030d:	jae    0x420374
  42030f:	and    BYTE PTR [rcx+0x73],ah
  420312:	and    BYTE PTR [rax+0x75],dh
  420315:	(bad)  
  420316:	ins    BYTE PTR es:[rdi],dx
  420317:	imul   esi,DWORD PTR [rbx+0x68],0x62206465
  42031e:	jns    0x42032a
  420320:	je     0x42038a
  420322:	and    BYTE PTR gs:[rsi+0x72],al
  420326:	gs and BYTE PTR gs:[rbx+0x6f],dl
  42032b:	data16 je 0x4203a5
  42032e:	(bad)  
  42032f:	jb     0x420396
  420331:	and    BYTE PTR [rsi+0x6f],al
  420334:	jne    0x4203a4
  420336:	fs (bad) 
  420338:	je     0x4203a3
  42033a:	outs   dx,DWORD PTR ds:[rsi]
  42033b:	outs   dx,BYTE PTR ds:[rsi]
  42033c:	cmp    esp,DWORD PTR [rax]
  42033e:	imul   esi,DWORD PTR gs:[rax+rbp*2+0x65],0x65762072
  420347:	jb     0x4203bc
  420349:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  420350:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  420355:	and    BYTE PTR [rcx+rbp*2+0x63],cl
  420359:	outs   dx,BYTE PTR gs:[rsi]
  42035b:	jae    0x4203c2
  42035d:	sub    al,0x20
  42035f:	outs   dx,DWORD PTR ds:[rsi]
  420360:	jb     0x42036c
  420362:	sub    BYTE PTR [rcx+0x74],ah
  420365:	and    BYTE PTR [rcx+0x6f],bh
  420368:	jne    0x4203dc
  42036a:	and    BYTE PTR [rdi+0x70],ch
  42036d:	je     0x4203d8
  42036f:	outs   dx,DWORD PTR ds:[rsi]
  420370:	outs   dx,BYTE PTR ds:[rsi]
  420371:	sub    DWORD PTR [rax],esp
  420373:	(bad)  
  420374:	outs   dx,BYTE PTR ds:[rsi]
  420375:	jns    0x420397
  420377:	ins    BYTE PTR es:[rdi],dx
  420378:	(bad)  
  420379:	je     0x4203e0
  42037b:	jb     0x42039d
  42037d:	jbe    0x4203e4
  42037f:	jb     0x4203f4
  420381:	imul   ebp,DWORD PTR [rdi+0x6e],0x250a0a2e
  420388:	jae    0x4203aa
  42038a:	imul   esi,DWORD PTR [rbx+0x20],0x74736964
  420391:	jb     0x4203fc
  420393:	(bad)  
  420394:	jne    0x42040a
  420396:	gs and BYTE PTR fs:[rcx+0x6e],ch
  42039b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42039f:	and    BYTE PTR [rax+0x6f],ch
  4203a2:	jo     0x420409
  4203a4:	and    BYTE PTR [rax+rbp*2+0x61],dh
  4203a8:	je     0x4203ca
  4203aa:	imul   esi,DWORD PTR [rax+riz*1+0x77],0x206c6c69
  4203b2:	(bad)  
  4203b3:	and    BYTE PTR gs:[rbp+0x73],dh
  4203b7:	gs data16 jne 0x420427
  4203bb:	sub    al,0xa
  4203bd:	(bad)  
  4203be:	jne    0x420434
  4203c0:	and    BYTE PTR [rdi+0x49],dl
  4203c3:	push   rsp
  4203c4:	rex.W
  4203c5:	rex.WRXB push r13
  4203c7:	push   rsp
  4203c8:	and    BYTE PTR [rcx+0x4e],al
  4203cb:	pop    rcx
  4203cc:	and    BYTE PTR [rdi+0x41],dl
  4203cf:	push   rdx
  4203d0:	push   rdx
  4203d1:	rex.B
  4203d2:	rex.WRX push rsp
  4203d4:	pop    rcx
  4203d5:	cmp    esp,DWORD PTR [rax]
  4203d7:	ja     0x420442
  4203d9:	je     0x420443
  4203db:	outs   dx,DWORD PTR ds:[rsi]
  4203dc:	jne    0x420452
  4203de:	and    BYTE PTR [rbp+0x76],ah
  4203e1:	outs   dx,BYTE PTR gs:[rsi]
  4203e3:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4203e7:	and    BYTE PTR [rcx+0x6d],ch
  4203ea:	jo     0x420458
  4203ec:	imul   esp,DWORD PTR [rbp+0x64],0x72617720
  4203f3:	jb     0x420456
  4203f5:	outs   dx,BYTE PTR ds:[rsi]
  4203f6:	je     0x420471
  4203f8:	and    BYTE PTR [rdi+0x66],ch
  4203fb:	or     cl,BYTE PTR [rbp+0x45]
  4203fe:	push   rdx
  4203ff:	rex.XB
  420400:	rex.W
  420401:	rex.B
  420402:	rex.WRX push rsp
  420404:	rex.B
  420405:	rex.X
  420406:	rex.WB
  420407:	rex.WR
  420408:	rex.WB push r12
  42040a:	pop    rcx
  42040b:	and    BYTE PTR [rdi+0x72],ch
  42040e:	and    BYTE PTR [rsi+0x49],al
  420411:	push   rsp
  420412:	rex.WRX
  420413:	rex.RB push r11
  420415:	push   rbx
  420416:	and    BYTE PTR [rsi+0x4f],al
  420419:	push   rdx
  42041a:	and    BYTE PTR [rcx+0x20],al
  42041d:	push   rax
  42041e:	push   r10
  420420:	push   rsp
  420421:	rex.WB
  420422:	rex.XB push r13
  420424:	rex.WR
  420425:	push   r10
  420427:	and    BYTE PTR [rax+0x55],dl
  42042a:	push   rdx
  42042b:	push   rax
  42042c:	rex.WRXB push r11
  42042e:	rex.RB
  42042f:	and    BYTE PTR cs:[rax],ah
  420432:	push   rbx
  420433:	gs and BYTE PTR gs:[rax+rbp*2+0x65],dh
  420439:	or     al,BYTE PTR [rdi+0x4e]
  42043c:	push   rbp
  42043d:	and    BYTE PTR [rdi+0x65],al
  420440:	outs   dx,BYTE PTR ds:[rsi]
  420441:	gs jb  0x4204a5
  420444:	ins    BYTE PTR es:[rdi],dx
  420445:	and    BYTE PTR [rax+0x75],dl
  420448:	(bad)  
  420449:	ins    BYTE PTR es:[rdi],dx
  42044a:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  420451:	outs   dx,BYTE PTR ds:[rsi]
  420452:	jae    0x4204b9
  420454:	and    BYTE PTR [rsi+0x6f],ah
  420457:	jb     0x420479
  420459:	ins    DWORD PTR es:[rdi],dx
  42045a:	outs   dx,DWORD PTR ds:[rsi]
  42045b:	jb     0x4204c2
  42045d:	and    BYTE PTR [rbp+riz*2+0x74],ah
  420461:	(bad)  
  420462:	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x6f590a0a
  42046a:	jne    0x42048c
  42046c:	jae    0x4204d6
  42046e:	outs   dx,DWORD PTR ds:[rsi]
  42046f:	jne    0x4204dd
  420471:	and    BYTE PTR fs:[rax+0x61],ch
  420475:	jbe    0x4204dc
  420477:	and    BYTE PTR [rdx+0x65],dh
  42047a:	movsxd esp,DWORD PTR [rbp+0x69]
  42047d:	jbe    0x4204e4
  42047f:	and    BYTE PTR fs:[rcx+0x20],ah
  420483:	movsxd ebp,DWORD PTR [rdi+0x70]
  420486:	jns    0x4204a8
  420488:	outs   dx,DWORD PTR ds:[rsi]
  420489:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  42048e:	and    BYTE PTR [rdi+0x4e],al
  420491:	push   rbp
  420492:	and    BYTE PTR [rdi+0x65],al
  420495:	outs   dx,BYTE PTR ds:[rsi]
  420496:	gs jb  0x4204fa
  420499:	ins    BYTE PTR es:[rdi],dx
  42049a:	and    BYTE PTR [rax+0x75],dl
  42049d:	(bad)  
  42049e:	ins    BYTE PTR es:[rdi],dx
  42049f:	imul   esp,DWORD PTR [rbx+0x20],0x6563694c
  4204a6:	outs   dx,BYTE PTR ds:[rsi]
  4204a7:	jae    0x42050e
  4204a9:	or     ah,BYTE PTR [rcx+0x6c]
  4204ac:	outs   dx,DWORD PTR ds:[rsi]
  4204ad:	outs   dx,BYTE PTR ds:[rsi]
  4204ae:	and    BYTE PTR [edi+0x69],dh
  4204b2:	je     0x42051c
  4204b4:	and    BYTE PTR [rip+0x20202e73],ah        # 0x2062332d
  4204ba:	rex.WB
  4204bb:	data16 and BYTE PTR [rsi+0x6f],ch
  4204bf:	je     0x4204ed
  4204c1:	and    BYTE PTR [rbx+0x65],dh
  4204c4:	and    BYTE PTR gs:[rax+rbp*2],bh
  4204c8:	je     0x42053e
  4204ca:	jo     0x420506
  4204cc:	(bad)  
  4204cd:	(bad)  
  4204ce:	ja     0x420547
  4204d0:	ja     0x420500
  4204d2:	outs   dx,BYTE PTR ds:[esi]
  4204d4:	jne    0x420504
  4204d6:	outs   dx,DWORD PTR ds:[rsi]
  4204d7:	jb     0x420540
  4204d9:	(bad)  
  4204da:	ins    BYTE PTR es:[rdi],dx
  4204db:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  4204e2:	(bad)  
  4204e3:	ds or  al,BYTE PTR cs:[rax]
  4204e7:	xor    BYTE PTR [rax],dh
  4204e9:	xor    BYTE PTR [rax],al
  4204eb:	add    BYTE PTR [r14+0x69],r8b
  4204ef:	ins    BYTE PTR es:[rdi],dx
  4204f0:	and    BYTE PTR gs:[rsi+0x6f],ah
  4204f4:	jb     0x420563
  4204f6:	(bad)  
  4204f7:	je     0x42056c
  4204f9:	cmp    al,BYTE PTR [rax]
  4204fb:	add    BYTE PTR [rax],al
  4204fd:	add    BYTE PTR [rax],al
  4204ff:	add    BYTE PTR [rip+0x44200a73],ah        # 0x44620f78
  420505:	and    BYTE PTR cs:[rip+0x6d654420],bh        # 0x6da7492c
  42050c:	jne    0x420586
  42050e:	imul   ebp,DWORD PTR [rsi+0x67],0x70757320
  420515:	jo     0x420586
  420517:	jb     0x42058d
  420519:	gs or  ah,BYTE PTR fs:[rax]
  42051d:	and    BYTE PTR cs:[rip+0x78754d20],r15b        # 0x78b75245
  420525:	imul   ebp,DWORD PTR [rsi+0x67],0x70757320
  42052c:	jo     0x42059d
  42052e:	jb     0x4205a4
  420530:	gs or  ah,BYTE PTR fs:[rax]
  420534:	sub    eax,0x20000a2d
  420539:	and    eax,0x20732573
  42053e:	and    eax,0x7335312d
  420543:	and    BYTE PTR [rip+0x44000a73],ah        # 0x44420fbc
  420549:	gs jbe 0x4205b5
  42054c:	movsxd esp,DWORD PTR [rbp+0x73]
  42054f:	cmp    al,BYTE PTR [rax]
  420551:	rex.WB add BYTE PTR [r8+rax*1+0x0],cl
  420556:	add    BYTE PTR [rax],al
  420558:	rex.XB outs dx,DWORD PTR ds:[rsi]
  42055a:	fs movsxd esi,DWORD PTR gs:[rbx+0x3a]
  42055f:	or     ah,BYTE PTR [rax]
  420561:	rex.R
  420562:	cs cs cs cs and BYTE PTR cs:[rip+0x63654420],bh        # 0x63a7498d
  42056d:	outs   dx,DWORD PTR ds:[rsi]
  42056e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70757320
  420576:	jo     0x4205e7
  420578:	jb     0x4205ee
  42057a:	gs or  ah,BYTE PTR fs:[rax]
  42057e:	cs rex.RB
  420580:	cs cs cs and BYTE PTR cs:[rip+0x636e4520],bh        # 0x63b04aaa
  42058a:	outs   dx,DWORD PTR ds:[rsi]
  42058b:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70757320
  420593:	jo     0x420604
  420595:	jb     0x42060b
  420597:	gs or  ah,BYTE PTR fs:[rax]
  42059b:	cs cs push rsi
  42059e:	cs cs and BYTE PTR cs:[rip+0x64695620],bh        # 0x64ab5bc7
  4205a7:	outs   dx,DWORD PTR gs:[rsi]
  4205a9:	and    BYTE PTR [rbx+0x6f],ah
  4205ac:	fs movsxd ecx,DWORD PTR gs:[rdx]
  4205b0:	and    BYTE PTR [rsi],ch
  4205b2:	cs rex.B
  4205b4:	cs cs and BYTE PTR cs:[rip+0x64754120],bh        # 0x64b746dd
  4205bd:	imul   ebp,DWORD PTR [rdi+0x20],0x65646f63
  4205c4:	movsxd ecx,DWORD PTR [rdx]
  4205c6:	and    BYTE PTR [rsi],ch
  4205c8:	cs push rbx
  4205ca:	cs cs and BYTE PTR cs:[rip+0x62755320],bh        # 0x62b758f3
  4205d3:	je     0x42063e
  4205d5:	je     0x420643
  4205d7:	and    BYTE PTR gs:[rbx+0x6f],ah
  4205db:	fs movsxd ecx,DWORD PTR gs:[rdx]
  4205df:	and    BYTE PTR [rsi],ch
  4205e1:	cs cs rex.WB
  4205e4:	cs and BYTE PTR cs:[rip+0x746e4920],bh        # 0x74b04f0c
  4205ec:	jb     0x42064f
  4205ee:	and    BYTE PTR [rsi+0x72],ah
  4205f1:	(bad)  
  4205f2:	ins    DWORD PTR es:[rdi],dx
  4205f3:	gs sub eax,0x796c6e6f
  4205f9:	and    BYTE PTR [rbx+0x6f],ah
  4205fc:	fs movsxd ecx,DWORD PTR gs:[rdx]
  420600:	and    BYTE PTR [rsi],ch
  420602:	cs cs cs rex.WR
  420606:	and    BYTE PTR cs:[rip+0x736f4c20],bh        # 0x73b1522d
  42060d:	jae    0x420688
  42060f:	and    BYTE PTR [rbx+0x6f],ah
  420612:	ins    DWORD PTR es:[rdi],dx
  420613:	jo     0x420687
  420615:	gs jae 0x42068b
  420618:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e2e200a
  42061f:	cs cs cs push rbx
  420623:	and    BYTE PTR [rip+0x736f4c20],bh        # 0x73b15249
  420629:	jae    0x420697
  42062b:	gs jae 0x4206a1
  42062e:	and    BYTE PTR [rbx+0x6f],ah
  420631:	ins    DWORD PTR es:[rdi],dx
  420632:	jo     0x4206a6
  420634:	gs jae 0x4206aa
  420637:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d200a
  42063e:	sub    eax,0x2d2d2d2d
  420643:	or     al,BYTE PTR [rax]
  420645:	pop    rdi
  420646:	fs gs jo 0x4206bc
  42064a:	movsxd esp,DWORD PTR gs:[rcx+0x74]
  42064e:	gs add BYTE PTR fs:[rip+0x28200063],ah        # 0x286206b9
  420656:	and    eax,0x203a73
  42065b:	and    eax,0x29002073
  420660:	add    BYTE PTR [rdx+0x69],al
  420663:	je     0x4206d8
  420665:	je     0x4206d9
  420667:	gs (bad) 
  420669:	ins    DWORD PTR es:[rdi],dx
  42066a:	and    BYTE PTR [rsi+0x69],ah
  42066d:	ins    BYTE PTR es:[rdi],dx
  42066e:	je     0x4206d5
  420670:	jb     0x4206e5
  420672:	cmp    cl,BYTE PTR [rdx]
  420674:	add    BYTE PTR [rax],al
  420676:	add    BYTE PTR [rax],al
  420678:	push   rbx
  420679:	jne    0x4206eb
  42067b:	jo     0x4206ec
  42067d:	jb     0x4206f3
  42067f:	gs and BYTE PTR fs:[rsi+0x69],ah
  420684:	ins    BYTE PTR es:[rdi],dx
  420685:	and    BYTE PTR gs:[rax+0x72],dh
  420689:	outs   dx,DWORD PTR ds:[rsi]
  42068a:	je     0x4206fb
  42068c:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42068f:	jae    0x4206cb
  420691:	or     cl,BYTE PTR [rcx+0x6e]
  420694:	jo     0x42070b
  420696:	je     0x4206d2
  420698:	or     al,BYTE PTR [rax]
  42069a:	and    BYTE PTR [rax],ah
  42069c:	and    eax,0x4f000a73
  4206a1:	jne    0x420717
  4206a3:	jo     0x42071a
  4206a5:	je     0x4206e1
  4206a7:	or     al,BYTE PTR [rax]
  4206a9:	add    BYTE PTR [rax],al
  4206ab:	add    BYTE PTR [rax],al
  4206ad:	add    BYTE PTR [rax],al
  4206af:	add    BYTE PTR [rsi+0x69],al
  4206b2:	ins    BYTE PTR es:[rdi],dx
  4206b3:	je     0x42071a
  4206b5:	jb     0x42072a
  4206b7:	cmp    cl,BYTE PTR [rdx]
  4206b9:	and    BYTE PTR [rax],ah
  4206bb:	push   rsp
  4206bc:	cs and BYTE PTR cs:[rip+0x6d695420],bh        # 0x6dab5ae4
  4206c4:	gs ins BYTE PTR es:[rdi],dx
  4206c6:	imul   ebp,DWORD PTR [rsi+0x65],0x70757320
  4206cd:	jo     0x42073e
  4206cf:	jb     0x420745
  4206d1:	or     ah,BYTE PTR [rax]
  4206d3:	and    BYTE PTR [rsi],ch
  4206d5:	push   rbx
  4206d6:	and    BYTE PTR cs:[rip+0x696c5320],bh        # 0x69ae59fd
  4206dd:	movsxd esp,DWORD PTR [rbp+0x20]
  4206e0:	je     0x42074a
  4206e2:	jb     0x420749
  4206e4:	(bad)  
  4206e5:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x2e20200a
  4206ed:	rex.XB and BYTE PTR cs:[rip+0x6d6f4320],dil        # 0x6db14a15
  4206f5:	ins    DWORD PTR es:[rdi],dx
  4206f6:	(bad)  
  4206f7:	outs   dx,BYTE PTR ds:[rsi]
  4206f8:	and    BYTE PTR fs:[rbx+0x75],dh
  4206fc:	jo     0x42076e
  4206fe:	outs   dx,DWORD PTR ds:[rsi]
  4206ff:	jb     0x420775
  420701:	or     ah,BYTE PTR [rax]
  420703:	and    BYTE PTR [rcx+0x20],al
  420706:	cmp    eax,0x64754120
  42070b:	imul   ebp,DWORD PTR [rdi+0x20],0x75706e69
  420712:	je     0x420743
  420714:	outs   dx,DWORD PTR ds:[rsi]
  420715:	jne    0x42078b
  420717:	jo     0x42078e
  420719:	je     0x420725
  42071b:	and    BYTE PTR [rax],ah
  42071d:	push   rsi
  42071e:	and    BYTE PTR [rip+0x64695620],bh        # 0x64ab5d44
  420724:	outs   dx,DWORD PTR gs:[rsi]
  420726:	and    BYTE PTR [rcx+0x6e],ch
  420729:	jo     0x4207a0
  42072b:	je     0x42075c
  42072d:	outs   dx,DWORD PTR ds:[rsi]
  42072e:	jne    0x4207a4
  420730:	jo     0x4207a7
  420732:	je     0x42073e
  420734:	and    BYTE PTR [rax],ah
  420736:	rex.WRX and BYTE PTR [rip+0x6e794420],r15b        # 0x6ebb4b5d
  42073d:	(bad)  
  42073e:	ins    DWORD PTR es:[rdi],dx
  42073f:	imul   esp,DWORD PTR [rbx+0x20],0x626d756e
  420746:	gs jb  0x420769
  420749:	(bad)  
  42074a:	outs   dx,BYTE PTR ds:[rsi]
  42074b:	fs (bad) 
  42074d:	outs   dx,DWORD PTR ds:[rsi]
  42074e:	jb     0x420770
  420750:	je     0x4207cb
  420752:	jo     0x4207b9
  420754:	and    BYTE PTR [rdi+0x66],ch
  420757:	and    BYTE PTR [rcx+0x6e],ch
  42075a:	jo     0x4207d1
  42075c:	je     0x42078d
  42075e:	outs   dx,DWORD PTR ds:[rsi]
  42075f:	jne    0x4207d5
  420761:	jo     0x4207d8
  420763:	je     0x42076f
  420765:	and    BYTE PTR [rax],ah
  420767:	jl     0x420789
  420769:	cmp    eax,0x756f5320
  42076e:	jb     0x4207d3
  420770:	and    BYTE PTR gs:[rdi+0x72],ch
  420774:	and    BYTE PTR [rbx+0x69],dh
  420777:	outs   dx,BYTE PTR ds:[rsi]
  420778:	imul   esp,DWORD PTR [rax],0x66
  42077b:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x20000a72
  420783:	and    eax,0x25632563
  420788:	movsxd esp,DWORD PTR [rax]
  42078a:	and    eax,0x7336312d
  42078f:	and    BYTE PTR [rip+0x7330312d],ah        # 0x737238c2
  420795:	and    BYTE PTR [rip+0x6e000a73],ah        # 0x6e42120e
  42079b:	(bad)  
  42079c:	ins    DWORD PTR es:[rdi],dx
  42079d:	add    BYTE PTR gs:[rip+0x7332332d],ah        # 0x73743ad1
  4207a4:	and    BYTE PTR [rbx],ah
  4207a6:	push   rdx
  4207a7:	push   rdx
  4207a8:	rex.RXB
  4207a9:	rex.RXB
  4207aa:	rex.X
  4207ab:	rex.X or al,BYTE PTR [rax]
  4207ae:	and    eax,0x7332332d
  4207b3:	and    BYTE PTR [rbx],ah
  4207b5:	and    eax,0x25783230
  4207ba:	xor    BYTE PTR [rdx],dh
  4207bc:	js     0x4207e3
  4207be:	xor    BYTE PTR [rdx],dh
  4207c0:	js     0x4207cc
  4207c2:	add    BYTE PTR [rax],al
  4207c4:	add    BYTE PTR [rax],al
  4207c6:	add    BYTE PTR [rax],al
  4207c8:	push   rax
  4207c9:	imul   edi,DWORD PTR [rax+0x65],0x6f66206c
  4207d0:	jb     0x42083f
  4207d2:	(bad)  
  4207d3:	je     0x420848
  4207d5:	cmp    cl,BYTE PTR [rdx]
  4207d7:	rex.WB
  4207d8:	cs cs cs and BYTE PTR cs:[rip+0x70755320],bh        # 0x70b75b02
  4207e2:	jo     0x420853
  4207e4:	jb     0x42085a
  4207e6:	gs and BYTE PTR fs:[rcx+0x6e],cl
  4207eb:	jo     0x420862
  4207ed:	je     0x42080f
  4207ef:	and    BYTE PTR [rsi+0x6f],ah
  4207f2:	jb     0x420861
  4207f4:	(bad)  
  4207f5:	je     0x420817
  4207f7:	outs   dx,WORD PTR ds:[rsi]
  4207f9:	jb     0x42081b
  4207fb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4207fe:	jbe    0x420865
  420800:	jb     0x420875
  420802:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e4f2e0a
  420809:	cs and BYTE PTR cs:[rip+0x70755320],bh        # 0x70b75b31
  420811:	jo     0x420882
  420813:	jb     0x420889
  420815:	gs and BYTE PTR fs:[rdi+0x75],cl
  42081a:	je     0x42088c
  42081c:	jne    0x420892
  42081e:	and    BYTE PTR [rsi+0x6f],ah
  420821:	jb     0x420890
  420823:	(bad)  
  420824:	je     0x420846
  420826:	outs   dx,WORD PTR ds:[rsi]
  420828:	jb     0x42084a
  42082a:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42082d:	jbe    0x420894
  42082f:	jb     0x4208a4
  420831:	imul   ebp,DWORD PTR [rdi+0x6e],0x482e2e0a
  420838:	cs and BYTE PTR cs:[rip+0x72614820],bh        # 0x72a35060
  420840:	fs ja  0x4208a4
  420843:	jb     0x4208aa
  420845:	and    BYTE PTR [rcx+0x63],ah
  420848:	movsxd esp,DWORD PTR [rbp+0x6c]
  42084b:	gs jb  0x4208af
  42084e:	je     0x4208b5
  420850:	and    BYTE PTR fs:[rsi+0x6f],ah
  420854:	jb     0x4208c3
  420856:	(bad)  
  420857:	je     0x420863
  420859:	cs cs cs push rax
  42085d:	and    BYTE PTR cs:[rip+0x6c615020],bh        # 0x6ca35884
  420864:	gs je  0x4208db
  420867:	gs and BYTE PTR fs:[rsi+0x6f],ah
  42086c:	jb     0x4208db
  42086e:	(bad)  
  42086f:	je     0x42087b
  420871:	cs cs cs rex.X and BYTE PTR cs:[rip+0x74694220],dil        # 0x74ab4a9c
  42087c:	jae    0x4208f2
  42087e:	jb     0x4208e5
  420880:	(bad)  
  420881:	ins    DWORD PTR es:[rdi],dx
  420882:	and    BYTE PTR [rsi+0x6f],ah
  420885:	jb     0x4208f4
  420887:	(bad)  
  420888:	je     0x420894
  42088a:	rex.RX
  42088b:	rex.WR
  42088c:	rex.B
  42088d:	rex.RXB push r11
  42088f:	and    BYTE PTR [rsi+0x41],cl
  420892:	rex.WRB
  420893:	and    BYTE PTR [r8],r12b
  420896:	and    BYTE PTR [rax],ah
  420898:	and    BYTE PTR [rax],ah
  42089a:	and    BYTE PTR [rax],ah
  42089c:	and    BYTE PTR [rax],ah
  42089e:	and    BYTE PTR [rax],ah
  4208a0:	rex.WRX
  4208a1:	rex.X pop rdi
  4208a3:	rex.XB
  4208a4:	rex.WRXB
  4208a5:	rex.WRB push r8
  4208a7:	rex.WRXB
  4208a8:	rex.WRX
  4208a9:	rex.RB
  4208aa:	rex.WRX push rsp
  4208ac:	push   rbx
  4208ad:	and    BYTE PTR [rdx+0x49],al
  4208b0:	push   rsp
  4208b1:	push   rbx
  4208b2:	pop    rdi
  4208b3:	push   rax
  4208b4:	rex.RB push r10
  4208b6:	pop    rdi
  4208b7:	push   rax
  4208b8:	rex.WB pop r8
  4208ba:	rex.RB
  4208bb:	rex.WR or r13b,BYTE PTR [rip+0x2d2d2d2d]        # 0x2d6f35ef
  4208c2:	or     al,BYTE PTR [rax]
  4208c4:	add    BYTE PTR [rax],al
  4208c6:	add    BYTE PTR [rax],al
  4208c8:	and    eax,0x25632563
  4208cd:	movsxd esp,DWORD PTR [rip+0x20632563]        # 0x20a52e36
  4208d3:	and    eax,0x7336312d
  4208d8:	and    BYTE PTR [rax],ah
  4208da:	and    BYTE PTR [rax],ah
  4208dc:	and    BYTE PTR [rax],ah
  4208de:	and    BYTE PTR [rip+0x20202064],ah        # 0x20622948
  4208e4:	and    BYTE PTR [rax],ah
  4208e6:	and    BYTE PTR [rax],ah
  4208e8:	and    BYTE PTR [rax],ah
  4208ea:	and    BYTE PTR [rax],ah
  4208ec:	and    BYTE PTR [rip+0xa6432],ah        # 0x4c6d24
  4208f2:	sub    eax,DWORD PTR [rax]
  4208f4:	add    BYTE PTR [rax],al
  4208f6:	add    BYTE PTR [rax],al
  4208f8:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4208fa:	imul   esi,DWORD PTR fs:[rsi+0x69],0x6c617564
  420902:	and    BYTE PTR [rbx+0x68],ah
  420905:	(bad)  
  420906:	outs   dx,BYTE PTR ds:[rsi]
  420907:	outs   dx,BYTE PTR ds:[rsi]
  420908:	gs ins BYTE PTR es:[rdi],dx
  42090a:	jae    0x420946
  42090c:	or     cl,BYTE PTR [rsi+0x41]
  42090f:	rex.WRB
  420910:	and    BYTE PTR [r8],r12b
  420913:	and    BYTE PTR [rax],ah
  420915:	and    BYTE PTR [rax],ah
  420917:	and    BYTE PTR [rax],ah
  420919:	and    BYTE PTR [rax],ah
  42091b:	and    BYTE PTR [rbp+rax*2+0x53],al
  42091f:	rex.XB push r10
  420921:	rex.WB push r8
  420923:	push   rsp
  420924:	rex.WB
  420925:	rex.WRXB
  420926:	rex.WRX or r8b,BYTE PTR [rax]
  420929:	and    eax,0x7334312d
  42092e:	and    BYTE PTR [rip+0xa73],ah        # 0x4213a7
  420934:	add    BYTE PTR [rax],al
  420936:	add    BYTE PTR [rax],al
  420938:	or     dl,BYTE PTR [rbx+0x74]
  42093b:	(bad)  
  42093c:	outs   dx,BYTE PTR ds:[rsi]
  42093d:	fs (bad) 
  42093f:	jb     0x4209a5
  420941:	and    BYTE PTR [rbx+0x68],ah
  420944:	(bad)  
  420945:	outs   dx,BYTE PTR ds:[rsi]
  420946:	outs   dx,BYTE PTR ds:[rsi]
  420947:	gs ins BYTE PTR es:[rdi],dx
  420949:	and    BYTE PTR [rcx+riz*2+0x79],ch
  42094d:	outs   dx,DWORD PTR ds:[rsi]
  42094e:	jne    0x4209c4
  420950:	jae    0x42098c
  420952:	or     cl,BYTE PTR [rsi+0x41]
  420955:	rex.WRB
  420956:	and    BYTE PTR [r8],r12b
  420959:	and    BYTE PTR [rax],ah
  42095b:	and    BYTE PTR [rax],ah
  42095d:	and    BYTE PTR [rax],ah
  42095f:	and    BYTE PTR [rax],ah
  420961:	and    BYTE PTR [rbp+rax*2+0x43],al
  420965:	rex.WRXB
  420966:	rex.WRB push r8
  420968:	rex.WRXB push r11
  42096a:	rex.WB push r12
  42096c:	rex.WB
  42096d:	rex.WRXB
  42096e:	rex.WRX or r8b,BYTE PTR [rax]
  420971:	and    eax,0x7334312d
  420976:	and    BYTE PTR [rax],al
  420978:	and    eax,0x732573
  42097d:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  420982:	gs jb  0x420985
  420985:	outs   dx,BYTE PTR gs:[rsi]
  420987:	movsxd ebp,DWORD PTR [rdi+0x64]
  42098a:	gs jb  0x42098d
  42098d:	fs gs ins DWORD PTR es:[rdi],dx
  420990:	jne    0x420a0a
  420992:	gs jb  0x420995
  420995:	push   rbp
  420996:	outs   dx,BYTE PTR ds:[rsi]
  420997:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42099b:	outs   dx,BYTE PTR ds:[rsi]
  42099c:	and    BYTE PTR [rsi+0x6f],ah
  42099f:	jb     0x420a0e
  4209a1:	(bad)  
  4209a2:	je     0x4209c4
  4209a4:	(bad)  
  4209a5:	and    eax,0xa2e2773
  4209aa:	add    BYTE PTR [rbp+riz*2+0x6d],al
  4209ae:	jne    0x420a28
  4209b0:	gs jb  0x4209d3
  4209b3:	and    eax,0x255b2073
  4209b8:	jae    0x420a17
  4209ba:	cmp    cl,BYTE PTR [rdx]
  4209bc:	add    BYTE PTR [rax],ah
  4209be:	and    BYTE PTR [rax],ah
  4209c0:	and    BYTE PTR [rbx+0x6f],al
  4209c3:	ins    DWORD PTR es:[rdi],dx
  4209c4:	ins    DWORD PTR es:[rdi],dx
  4209c5:	outs   dx,DWORD PTR ds:[rsi]
  4209c6:	outs   dx,BYTE PTR ds:[rsi]
  4209c7:	and    BYTE PTR [rbp+0x78],ah
  4209ca:	je     0x420a31
  4209cc:	outs   dx,BYTE PTR ds:[rsi]
  4209cd:	jae    0x420a38
  4209cf:	outs   dx,DWORD PTR ds:[rsi]
  4209d0:	outs   dx,BYTE PTR ds:[rsi]
  4209d1:	jae    0x420a0d
  4209d3:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4c384c
  4209d9:	ins    DWORD PTR es:[rdi],dx
  4209da:	jne    0x420a54
  4209dc:	gs jb  0x4209df
  4209df:	rex.WRB jne 0x420a5a
  4209e2:	gs jb  0x420a05
  4209e5:	and    eax,0x255b2073
  4209ea:	jae    0x420a49
  4209ec:	cmp    cl,BYTE PTR [rdx]
  4209ee:	add    BYTE PTR [rax],ah
  4209f0:	and    BYTE PTR [rax],ah
  4209f2:	and    BYTE PTR [rbp+0x69],cl
  4209f5:	ins    DWORD PTR es:[rdi],dx
  4209f6:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  4209fb:	cmp    ah,BYTE PTR gs:[rax]
  4209fe:	and    eax,0xa2e73
  420a03:	and    BYTE PTR [rax],ah
  420a05:	and    BYTE PTR [rax],ah
  420a07:	rex.R
  420a08:	gs data16 (bad) 
  420a0b:	jne    0x420a79
  420a0d:	je     0x420a2f
  420a0f:	jbe    0x420a7a
  420a11:	fs outs dx,DWORD PTR gs:[rsi]
  420a14:	and    BYTE PTR [rbx+0x6f],ah
  420a17:	fs movsxd edi,DWORD PTR gs:[rdx]
  420a1b:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4c3894
  420a21:	and    BYTE PTR [rax],ah
  420a23:	and    BYTE PTR [rax],ah
  420a25:	rex.R
  420a26:	gs data16 (bad) 
  420a29:	jne    0x420a97
  420a2b:	je     0x420a4d
  420a2d:	(bad)  
  420a2e:	jne    0x420a94
  420a30:	imul   ebp,DWORD PTR [rdi+0x20],0x65646f63
  420a37:	movsxd edi,DWORD PTR [rdx]
  420a39:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4c38b2
  420a3f:	add    BYTE PTR [rax],ah
  420a41:	and    BYTE PTR [rax],ah
  420a43:	and    BYTE PTR [rbp+riz*2+0x66],al
  420a47:	(bad)  
  420a48:	jne    0x420ab6
  420a4a:	je     0x420a6c
  420a4c:	jae    0x420ac3
  420a4e:	(bad)  
  420a4f:	je     0x420aba
  420a51:	je     0x420abf
  420a53:	and    BYTE PTR gs:[rbx+0x6f],ah
  420a57:	fs movsxd edi,DWORD PTR gs:[rdx]
  420a5b:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4c38d4
  420a61:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x72
  420a68:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  420a6a:	and    BYTE PTR [rsi+0x69],ah
  420a6d:	ins    BYTE PTR es:[rdi],dx
  420a6e:	je     0x420ad5
  420a70:	jb     0x420a92
  420a72:	outs   dx,BYTE PTR ds:[rsi]
  420a73:	(bad)  
  420a74:	ins    DWORD PTR es:[rdi],dx
  420a75:	and    BYTE PTR gs:[rbx+0x70],dh
  420a79:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  420a7d:	imul   esp,DWORD PTR [rbp+0x64],0x55000a2e
  420a84:	outs   dx,BYTE PTR ds:[rsi]
  420a85:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  420a89:	outs   dx,BYTE PTR ds:[rsi]
  420a8a:	and    BYTE PTR [rsi+0x69],ah
  420a8d:	ins    BYTE PTR es:[rdi],dx
  420a8e:	je     0x420af5
  420a90:	jb     0x420ab2
  420a92:	(bad)  
  420a93:	and    eax,0xa2e2773
  420a98:	add    BYTE PTR [rsi+0x69],al
  420a9b:	ins    BYTE PTR es:[rdi],dx
  420a9c:	je     0x420b03
  420a9e:	jb     0x420ac0
  420aa0:	and    eax,0xa73
  420aa5:	add    BYTE PTR [rax],al
  420aa7:	add    BYTE PTR [rax],ah
  420aa9:	and    BYTE PTR [rax],ah
  420aab:	and    BYTE PTR [rbx+0x6c],dh
  420aae:	imul   esp,DWORD PTR [rbx+0x65],0x72687420
  420ab5:	gs (bad) 
  420ab7:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70757320
  420abf:	jo     0x420b30
  420ac1:	jb     0x420b37
  420ac3:	gs or  al,BYTE PTR fs:[rax]
  420ac7:	and    BYTE PTR [rax],ah
  420ac9:	and    BYTE PTR [rax],ah
  420acb:	rex.WB outs dx,BYTE PTR ds:[rsi]
  420acd:	jo     0x420b44
  420acf:	je     0x420b44
  420ad1:	cmp    cl,BYTE PTR [rdx]
  420ad3:	add    BYTE PTR [rax],ah
  420ad5:	and    BYTE PTR [rax],ah
  420ad7:	and    BYTE PTR [rax],ah
  420ad9:	and    BYTE PTR [rax],ah
  420adb:	and    esp,DWORD PTR [rip+0x25203a64]        # 0x25624545
  420ae1:	jae    0x420b03
  420ae3:	sub    BYTE PTR [rip+0xa2973],ah        # 0x4c345c
  420ae9:	add    BYTE PTR [rax],al
  420aeb:	add    BYTE PTR [rax],al
  420aed:	add    BYTE PTR [rax],al
  420aef:	add    BYTE PTR [rax],ah
  420af1:	and    BYTE PTR [rax],ah
  420af3:	and    BYTE PTR [rax],ah
  420af5:	and    BYTE PTR [rax],ah
  420af7:	and    BYTE PTR [rcx+rdi*2+0x6e],ah
  420afb:	(bad)  
  420afc:	ins    DWORD PTR es:[rdi],dx
  420afd:	imul   esp,DWORD PTR [rbx+0x20],0x70656428
  420b04:	outs   dx,BYTE PTR gs:[rsi]
  420b06:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x206e6f20
  420b0e:	je     0x420b78
  420b10:	and    BYTE PTR gs:[rdi+0x70],ch
  420b14:	je     0x420b7f
  420b16:	outs   dx,DWORD PTR ds:[rsi]
  420b17:	outs   dx,BYTE PTR ds:[rsi]
  420b18:	jae    0x420b43
  420b1a:	or     al,BYTE PTR [rax]
  420b1c:	and    BYTE PTR [rax],ah
  420b1e:	and    BYTE PTR [rax],ah
  420b20:	and    BYTE PTR [rax],ah
  420b22:	and    BYTE PTR [rax],ah
  420b24:	outs   dx,BYTE PTR ds:[rsi]
  420b25:	outs   dx,DWORD PTR ds:[rsi]
  420b26:	outs   dx,BYTE PTR ds:[rsi]
  420b27:	and    BYTE PTR gs:[rax],ch
  420b2a:	jae    0x420b9b
  420b2c:	jne    0x420ba0
  420b2e:	movsxd esp,DWORD PTR [rbp+0x20]
  420b31:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x2972
  420b38:	or     al,BYTE PTR [rax]
  420b3a:	and    BYTE PTR [rax],ah
  420b3c:	and    BYTE PTR [rax],ah
  420b3e:	rex.WRXB jne 0x420bb5
  420b41:	jo     0x420bb8
  420b43:	je     0x420bb8
  420b45:	cmp    cl,BYTE PTR [rdx]
  420b47:	add    BYTE PTR [rax],ah
  420b49:	and    BYTE PTR [rax],ah
  420b4b:	and    BYTE PTR [rax],ah
  420b4d:	and    BYTE PTR [rax],ah
  420b4f:	and    BYTE PTR [rsi+0x6f],ch
  420b52:	outs   dx,BYTE PTR ds:[rsi]
  420b53:	and    BYTE PTR gs:[rax],ch
  420b56:	jae    0x420bc1
  420b58:	outs   dx,BYTE PTR ds:[rsi]
  420b59:	imul   esp,DWORD PTR [rax],0x66
  420b5c:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0xa2972
  420b64:	add    BYTE PTR [rax],al
  420b66:	add    BYTE PTR [rax],al
  420b68:	push   rsp
  420b69:	push   0x66207369
  420b6e:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x61682072
  420b76:	jae    0x420b98
  420b78:	jae    0x420bef
  420b7a:	jo     0x420bec
  420b7c:	outs   dx,DWORD PTR ds:[rsi]
  420b7d:	jb     0x420bf3
  420b7f:	and    BYTE PTR [rsi+0x6f],ah
  420b82:	jb     0x420ba4
  420b84:	je     0x420bef
  420b86:	ins    DWORD PTR es:[rdi],dx
  420b87:	gs ins BYTE PTR es:[rdi],dx
  420b89:	imul   ebp,DWORD PTR [rsi+0x65],0x72687420
  420b90:	outs   dx,DWORD PTR ds:[rsi]
  420b91:	jne    0x420bfa
  420b93:	push   0x65687420
  420b98:	and    BYTE PTR [rdi],ah
  420b9a:	outs   dx,BYTE PTR gs:[rsi]
  420b9c:	(bad)  
  420b9d:	(bad)  
  420b9e:	ins    BYTE PTR es:[rdi],dx
  420b9f:	gs (bad) 
  420ba1:	and    BYTE PTR [rdi+0x70],ch
  420ba4:	je     0x420c0f
  420ba6:	outs   dx,DWORD PTR ds:[rsi]
  420ba7:	outs   dx,BYTE PTR ds:[rsi]
  420ba8:	or     al,BYTE PTR cs:[rax]
  420bab:	(bad)  
  420bac:	cs data16 ins WORD PTR es:[rdi],dx
  420bb0:	jo     0x420c17
  420bb2:	add    BYTE PTR [esi+0x46],al
  420bb6:	rex.WRB push r8
  420bb8:	rex.RB
  420bb9:	rex.RXB pop r15
  420bbb:	rex.R
  420bbc:	push   r12
  420bbe:	rex.B
  420bbf:	rex.R
  420bc0:	rex.WB push r10
  420bc2:	add    BYTE PTR [rax+0x4f],cl
  420bc5:	rex.WRB
  420bc6:	add    BYTE PTR [r15],r13b
  420bc9:	jae    0x420c2e
  420bcb:	jb     0x420c2e
  420bcd:	je     0x420c32
  420bcf:	push   0x65776a2f
  420bd4:	(bad)  
  420bd5:	ins    DWORD PTR es:[rdi],dx
  420bd6:	js     0x420c3d
  420bd8:	sub    eax,0x6174636f
  420bdd:	jbe    0x420c44
  420bdf:	(bad)  
  420be0:	xor    al,0x2e
  420be2:	xor    ch,BYTE PTR [rsi]
  420be4:	xor    DWORD PTR [rdi],ebp
  420be6:	ja     0x420c1e
  420be8:	xor    al,0x2d
  420bea:	xor    esi,DWORD PTR [rdx]
  420bec:	(bad)  
  420bed:	jne    0x420c62
  420bef:	jb     0x420c20
  420bf1:	js     0x420c2b
  420bf3:	ss pop rdi
  420bf5:	ss xor al,0x2d
  420bf8:	ja     0x420c30
  420bfa:	xor    al,0x2d
  420bfc:	ins    DWORD PTR es:[rdi],dx
  420bfd:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  420c04:	jae    0x420c6e
  420c06:	(bad)  
  420c07:	jb     0x420c6e
  420c09:	(bad)  
  420c0a:	data16 ins WORD PTR es:[rdi],dx
  420c0d:	jo     0x420c74
  420c0f:	add    BYTE PTR [edx+0x0],dh
  420c13:	(bad)  
  420c14:	data16 data16 jo 0x420c8a
  420c18:	gs jae 0x420c80
  420c1b:	je     0x420c90
  420c1d:	add    BYTE PTR [rip+0x2f732573],ah        # 0x2fb53196
  420c23:	and    eax,0x73252d73
  420c28:	cs data16 data16 jo 0x420c9f
  420c2d:	gs jae 0x420c95
  420c30:	je     0x420c32
  420c32:	and    eax,0x2f732573
  420c37:	and    eax,0x66662e73
  420c3c:	jo     0x420cb0
  420c3e:	gs jae 0x420ca6
  420c41:	je     0x420c43
  420c43:	add    BYTE PTR [rax],al
  420c45:	add    BYTE PTR [rax],al
  420c47:	add    BYTE PTR [rcx+0x6e],cl
  420c4a:	jbe    0x420cad
  420c4c:	ins    BYTE PTR es:[rdi],dx
  420c4d:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x61657274
  420c55:	ins    DWORD PTR es:[rdi],dx
  420c56:	and    BYTE PTR [rbx+0x70],dh
  420c59:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  420c5d:	imul   esp,DWORD PTR [rbp+0x72],0x7325203a
  420c64:	or     al,BYTE PTR cs:[rax]
  420c67:	add    BYTE PTR [rbx+0x6f],al
  420c6a:	jne    0x420cd8
  420c6c:	and    BYTE PTR fs:[rsi+0x6f],ch
  420c70:	je     0x420c92
  420c72:	(bad)  
  420c73:	ins    BYTE PTR es:[rdi],dx
  420c74:	ins    BYTE PTR es:[rdi],dx
  420c75:	outs   dx,DWORD PTR ds:[rsi]
  420c76:	movsxd esp,DWORD PTR [rax]
  420c78:	ins    DWORD PTR es:[rdi],dx
  420c79:	gs ins DWORD PTR es:[rdi],dx
  420c7b:	outs   dx,DWORD PTR ds:[rsi]
  420c7c:	jb     0x420cf7
  420c7e:	and    BYTE PTR [rsi+0x6f],ah
  420c81:	jb     0x420ca3
  420c83:	jae    0x420cf9
  420c85:	jb     0x420cec
  420c87:	(bad)  
  420c88:	ins    DWORD PTR es:[rdi],dx
  420c89:	and    BYTE PTR [rdi+0x70],ch
  420c8c:	je     0x420cf7
  420c8e:	outs   dx,DWORD PTR ds:[rsi]
  420c8f:	outs   dx,BYTE PTR ds:[rsi]
  420c90:	jae    0x420cc0
  420c92:	or     al,BYTE PTR [rax]
  420c94:	jb     0x420d05
  420c96:	je     0x420cf9
  420c98:	je     0x420cff
  420c9a:	add    BYTE PTR [rax],al
  420c9c:	add    BYTE PTR [rax],al
  420c9e:	add    BYTE PTR [rax],al
  420ca0:	rex.WRXB
  420ca1:	fs and BYTE PTR fs:[rdx+0x6f],dh
  420ca6:	je     0x420d09
  420ca8:	je     0x420d13
  420caa:	outs   dx,DWORD PTR ds:[rsi]
  420cab:	outs   dx,BYTE PTR ds:[rsi]
  420cac:	and    BYTE PTR [rcx+0x6e],ah
  420caf:	ins    BYTE PTR es:[edi],dx
  420cb1:	gs or  cl,BYTE PTR cs:[rcx+0x66]
  420cb6:	and    BYTE PTR [rcx+0x6f],bh
  420cb9:	jne    0x420cdb
  420cbb:	ja     0x420d1e
  420cbd:	outs   dx,BYTE PTR ds:[rsi]
  420cbe:	je     0x420ce0
  420cc0:	je     0x420d31
  420cc2:	and    BYTE PTR [rax+0x65],ch
  420cc5:	ins    BYTE PTR es:[rdi],dx
  420cc6:	jo     0x420cf4
  420cc8:	and    BYTE PTR [rbp+0x70],dh
  420ccb:	ins    BYTE PTR es:[rdi],dx
  420ccc:	outs   dx,DWORD PTR ds:[rsi]
  420ccd:	(bad)  
  420cce:	and    BYTE PTR fs:[rcx+0x20],ah
  420cd2:	jae    0x420d35
  420cd4:	ins    DWORD PTR es:[rdi],dx
  420cd5:	jo     0x420d43
  420cd7:	and    BYTE PTR gs:[rdi+0x66],ch
  420cdb:	and    BYTE PTR [rax+rbp*2+0x69],dh
  420cdf:	jae    0x420d01
  420ce1:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
  420ce8:	and    BYTE PTR [rsi+0x74],ah
  420ceb:	jo     0x420d27
  420ced:	(bad)  
  420cee:	(bad)  
  420cef:	jne    0x420d61
  420cf1:	ins    BYTE PTR es:[rdi],dx
  420cf2:	outs   dx,DWORD PTR ds:[rsi]
  420cf3:	(bad)  
  420cf4:	fs cs data16 ins WORD PTR es:[rdi],dx
  420cf9:	jo     0x420d60
  420cfb:	outs   dx,DWORD PTR cs:[esi]
  420cfe:	jb     0x420d67
  420d00:	(bad)  
  420d01:	imul   ebp,DWORD PTR [rsi+0x63],0x6e696d6f
  420d08:	addr32 (bad) 
  420d0a:	and    BYTE PTR [rcx+0x6e],ah
  420d0d:	and    BYTE PTR fs:[rbx+0x6f],ah
  420d11:	outs   dx,BYTE PTR ds:[rsi]
  420d12:	je     0x420d75
  420d14:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
  420d18:	push   0x66662065
  420d1d:	ins    DWORD PTR es:[rdi],dx
  420d1e:	jo     0x420d85
  420d20:	addr32 sub eax,0x65766564
  420d26:	ins    BYTE PTR es:[rdi],dx
  420d27:	and    BYTE PTR [rbp+0x61],ch
  420d2a:	imul   ebp,DWORD PTR [rcx+rbp*2+0x6e],0x696c2067
  420d32:	jae    0x420da8
  420d34:	and    BYTE PTR cs:[rax],ch
  420d37:	data16 ins WORD PTR es:[rdi],dx
  420d3a:	jo     0x420da1
  420d3c:	addr32 sub eax,0x65766564
  420d42:	ins    BYTE PTR es:[rdi],dx
  420d43:	rex
  420d44:	data16 ins WORD PTR es:[rdi],dx
  420d47:	jo     0x420dae
  420d49:	outs   dx,DWORD PTR cs:[esi]
  420d4c:	jb     0x420db5
  420d4e:	sub    DWORD PTR [rax],eax
  420d50:	or     al,BYTE PTR [rbp+riz*2+0x76]
  420d54:	imul   esp,DWORD PTR [rbx+0x65],0x6d616e20
  420d5b:	and    BYTE PTR gs:[rcx+0x73],ch
  420d5f:	and    BYTE PTR [rsi+0x6f],ch
  420d62:	je     0x420d84
  420d64:	jo     0x420dd8
  420d66:	outs   dx,DWORD PTR ds:[rsi]
  420d67:	jbe    0x420dd2
  420d69:	fs gs fs or bl,BYTE PTR cs:[rcx+0x6f]
  420d70:	jne    0x420d92
  420d72:	movsxd esp,DWORD PTR [rcx+0x6e]
  420d75:	and    BYTE PTR [rax+0x61],dh
  420d78:	jae    0x420ded
  420d7a:	and    BYTE PTR [rbp+riz*2+0x76],ah
  420d7e:	imul   esp,DWORD PTR [rbx+0x65],0x656d616e
  420d85:	pop    rbx
  420d86:	sub    al,0x6f
  420d88:	jo     0x420dfe
  420d8a:	xor    DWORD PTR [rip+0x316c6176],edi        # 0x31ae6f06
  420d90:	pop    rbx
  420d91:	sub    al,0x6f
  420d93:	jo     0x420e09
  420d95:	xor    bh,BYTE PTR [rip+0x326c6176]        # 0x32ae6f11
  420d9b:	cs cs cs pop rbp
  420d9f:	pop    rbp
  420da0:	and    BYTE PTR [rcx+0x73],ah
  420da3:	and    BYTE PTR [rcx+0x6e],ah
  420da6:	and    BYTE PTR [rcx+0x72],ah
  420da9:	addr32 jne 0x420e19
  420dac:	outs   dx,BYTE PTR gs:[rsi]
  420dae:	je     0x420dde
  420db0:	or     cl,BYTE PTR [rdx]
  420db2:	add    BYTE PTR [rcx+riz*2+0x76],ch
  420db6:	imul   ax,WORD PTR [rax],0x4156
  420dbb:	rex.R push rbx
  420dbd:	push   rsp
  420dbe:	ins    BYTE PTR es:[edi],dx
  420dc0:	outs   dx,DWORD PTR ds:[rsi]
  420dc1:	(bad)
	...
  420dce:	add    BYTE PTR [rax],al
  420dd0:	mov    esi,0x420d
	...
  420ded:	add    al,ah
  420def:	rol    DWORD PTR [rax],0x0
  420df2:	sar    bh,0xff
  420df5:	(bad)  
  420df6:	fild   WORD PTR [rcx+0x0]
  420df9:	add    BYTE PTR [rax],al
  420dfb:	add    BYTE PTR [rax],al
  420dfd:	add    al,ah
  420dff:	ret    
  420e00:	add    BYTE PTR [rax],al
  420e02:	add    BYTE PTR [rax],al
  420e04:	add    BYTE PTR [rax],al
  420e06:	loopne 0x420e4b
  420e08:	add    BYTE PTR [rax],al
  420e0a:	add    BYTE PTR [rax],al
  420e0c:	add    BYTE PTR [rax],al
  420e0e:	lock jg 0x420e11
  420e11:	add    BYTE PTR [rax],al
  420e13:	add    BYTE PTR [rax],al
  420e15:	add    al,dh
  420e17:	inc    DWORD PTR [rax]
	...
  420e25:	add    BYTE PTR [rax],al
  420e27:	add    BYTE PTR [rax],0x0
	...
  420e32:	add    BYTE PTR [rax],al
  420e34:	add    BYTE PTR [rax+0x147b4076],al
  420e3a:	scas   al,BYTE PTR es:[rdi]
  420e3b:	rex.RXB loope 0x420eb8
  420e3e:	fs (bad) 
  420e40:	add    BYTE PTR [rax],al
  420e42:	add    BYTE PTR [rax],al
  420e44:	add    BYTE PTR [rax+0x4056],al
  420e4a:	add    BYTE PTR [rax],al
  420e4c:	add    BYTE PTR [rax],al
  420e4e:	add    BYTE PTR [rax],al
  420e50:	(bad)  
  420e51:	(bad)  
  420e52:	(bad)  
  420e53:	(bad)  
  420e54:	(bad)  
  420e55:	(bad)  
  420e56:	(bad)  
  420e57:	jg     0x420e59
	...
  420e65:	add    BYTE PTR [rax],al
  420e67:	add    BYTE PTR [rax],al
	...
  420e7e:	add    BYTE PTR [rax],al
  420e80:	fs gs data16 (bad) 
  420e84:	jne    0x420ef2
  420e86:	je     0x420e88
  420e88:	movsxd ebp,DWORD PTR [rdi+0x6d]
  420e8b:	jo     0x420eee
  420e8d:	movsxd esi,DWORD PTR [rax+rax*1+0x63]
  420e91:	jae    0x420f09
  420e93:	add    BYTE PTR [rsi+0x6c],ah
  420e96:	(bad)  
  420e97:	je     0x420e99
  420e99:	imul   ebp,DWORD PTR [rsi+0x69],0x6f736a00
  420ea0:	outs   dx,BYTE PTR ds:[rsi]
  420ea1:	add    BYTE PTR [rax+riz*1],ch
  420ea4:	add    BYTE PTR [rdx+rcx*1],ch
  420ea7:	add    BYTE PTR [rax],ah
  420ea9:	add    BYTE PTR [rdx],cl
  420eab:	add    BYTE PTR [rax+0x6d],bh
  420eae:	ins    BYTE PTR es:[rdi],dx
  420eaf:	add    BYTE PTR [rip+0x25223d73],ah        # 0x25644c28
  420eb5:	ins    BYTE PTR es:[rdi],dx
  420eb6:	ins    BYTE PTR es:[rdi],dx
  420eb7:	and    al,BYTE PTR fs:[rax]
  420eba:	data16 data16 jo 0x420f30
  420ebe:	outs   dx,DWORD PTR ds:[rsi]
  420ebf:	(bad)  
  420ec0:	cmp    al,BYTE PTR gs:[rax]
  420ec3:	add    BYTE PTR [rdi+rbp*1],bh
  420ec6:	and    eax,0x70666673
  420ecb:	jb     0x420f3c
  420ecd:	(bad)  
  420ece:	gs or  al,BYTE PTR ds:[rax]
  420ed2:	(bad)  
  420ed3:	or     al,BYTE PTR ds:[rax]
  420ed6:	and    eax,0x3c00632a
  420edb:	(bad)  
  420edc:	and    eax,0xa3e73
  420ee1:	add    BYTE PTR [rax],al
  420ee3:	add    BYTE PTR [rax],al
  420ee5:	add    BYTE PTR [rax],al
  420ee7:	add    BYTE PTR [rax],ah
  420ee9:	js     0x420f58
  420eeb:	ins    BYTE PTR es:[rdi],dx
  420eec:	outs   dx,BYTE PTR ds:[rsi]
  420eed:	jae    0x420f29
  420eef:	js     0x420f64
  420ef1:	imul   edi,DWORD PTR [rip+0x74746827],0x2f2f3a70        # 0x74b67722
  420efb:	ja     0x420f74
  420efd:	ja     0x420f2d
  420eff:	ja     0x420f34
  420f01:	outs   dx,DWORD PTR cs:[rsi]
  420f03:	jb     0x420f6c
  420f05:	(bad)  
  420f06:	xor    dh,BYTE PTR [rax]
  420f08:	xor    BYTE PTR [rcx],dh
  420f0a:	(bad)  
  420f0b:	pop    rax
  420f0c:	rex.WRB
  420f0d:	rex.WR push rbx
  420f0f:	movsxd ebp,DWORD PTR [rax+0x65]
  420f12:	ins    DWORD PTR es:[rdi],dx
  420f13:	(bad)  
  420f14:	sub    eax,0x74736e69
  420f19:	(bad)  
  420f1a:	outs   dx,BYTE PTR ds:[rsi]
  420f1b:	movsxd esp,DWORD PTR [rbp+0x27]
  420f1e:	and    BYTE PTR [rax+0x6d],bh
  420f21:	ins    BYTE PTR es:[rdi],dx
  420f22:	outs   dx,BYTE PTR ds:[rsi]
  420f23:	jae    0x420f5f
  420f25:	data16 data16 jo 0x420f9b
  420f29:	outs   dx,DWORD PTR ds:[rsi]
  420f2a:	(bad)  
  420f2b:	gs cmp eax,0x74746827
  420f31:	jo     0x420f6d
  420f33:	(bad)  
  420f34:	(bad)  
  420f35:	ja     0x420fae
  420f37:	ja     0x420f67
  420f39:	data16 ins WORD PTR es:[rdi],dx
  420f3c:	jo     0x420fa3
  420f3e:	outs   dx,DWORD PTR cs:[esi]
  420f41:	jb     0x420faa
  420f43:	(bad)  
  420f44:	jae    0x420fa9
  420f46:	push   0x2f616d65
  420f4b:	data16 data16 jo 0x420fc1
  420f4f:	outs   dx,DWORD PTR ds:[rsi]
  420f50:	(bad)  
  420f51:	gs (bad) 
  420f53:	and    BYTE PTR [rax+0x73],bh
  420f56:	imul   edi,DWORD PTR [rdx],0x65686373
  420f5c:	ins    DWORD PTR es:[rdi],dx
  420f5d:	(bad)  
  420f5e:	rex.WR outs dx,DWORD PTR ds:[rsi]
  420f60:	movsxd esp,DWORD PTR [rcx+0x74]
  420f63:	imul   ebp,DWORD PTR [rdi+0x6e],0x7468273d
  420f6a:	je     0x420fdc
  420f6c:	cmp    ch,BYTE PTR [rdi]
  420f6e:	(bad)  
  420f6f:	ja     0x420fe8
  420f71:	ja     0x420fa1
  420f73:	data16 ins WORD PTR es:[rdi],dx
  420f76:	jo     0x420fdd
  420f78:	outs   dx,DWORD PTR cs:[esi]
  420f7b:	jb     0x420fe4
  420f7d:	(bad)  
  420f7e:	jae    0x420fe3
  420f80:	push   0x2f616d65
  420f85:	data16 data16 jo 0x420ffb
  420f89:	outs   dx,DWORD PTR ds:[rsi]
  420f8a:	(bad)  
  420f8b:	and    BYTE PTR gs:[rsi+0x66],ah
  420f8f:	jo     0x421003
  420f91:	outs   dx,DWORD PTR ds:[rsi]
  420f92:	(bad)  
  420f93:	gs cs js 0x42100a
  420f97:	fs (bad) 
  420f99:	add    BYTE PTR ds:0x70666673,bh
  420fa0:	jb     0x421011
  420fa2:	(bad)  
  420fa3:	gs and eax,0xa3e73
  420fa9:	or     al,BYTE PTR ds:[rax]
  420fac:	cmp    al,0x25
  420fae:	jae    0x420fee
  420fb0:	or     al,BYTE PTR [rax]
  420fb2:	cmp    al,0x25
  420fb4:	jae    0x420fd6
  420fb6:	add    BYTE PTR [rax],al
  420fb8:	cmp    al,0x3f
  420fba:	js     0x421029
  420fbc:	ins    BYTE PTR es:[rdi],dx
  420fbd:	and    BYTE PTR [rsi+0x65],dh
  420fc0:	jb     0x421035
  420fc2:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
  420fc9:	xor    BYTE PTR [rdx],ah
  420fcb:	and    BYTE PTR [rbp+0x6e],ah
  420fce:	movsxd ebp,DWORD PTR [rdi+0x64]
  420fd1:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
  420fd8:	rex.RX sub eax,0x3e3f2238
  420fde:	or     al,BYTE PTR [rax]
  420fe0:	or     bh,BYTE PTR [rbp+0xa]
  420fe3:	add    BYTE PTR [rbp+0x0],bl
  420fe6:	and    eax,0x7d0073
  420feb:	and    eax,0x6c253d73
  420ff0:	ins    BYTE PTR es:[rdi],dx
  420ff1:	or     al,BYTE PTR fs:[rax]
  420ff4:	and    eax,0x3d732573
  420ff9:	and    eax,0xa646c6c
  420ffe:	add    BYTE PTR [rip+0x73250063],ah        # 0x73671067
  421004:	and    eax,0x25003d73
  421009:	ins    BYTE PTR es:[rdi],dx
  42100a:	ins    BYTE PTR es:[rdi],dx
  42100b:	add    BYTE PTR fs:[rip+0x25000a73],ah        # 0x25421a85
  421012:	ins    BYTE PTR es:[rdi],dx
  421013:	ins    BYTE PTR es:[rdi],dx
  421014:	or     al,BYTE PTR fs:[rax]
  421017:	pop    rbx
  421018:	(bad)  
  421019:	and    eax,0xa5d73
  42101e:	add    BYTE PTR cs:[rbx],ah
  421021:	and    BYTE PTR [rsi+0x66],ah
  421024:	jo     0x421098
  421026:	outs   dx,DWORD PTR ds:[rsi]
  421027:	(bad)  
  421028:	and    BYTE PTR gs:[rdi+0x75],ch
  42102c:	je     0x42109e
  42102e:	jne    0x4210a4
  421030:	or     cl,BYTE PTR [rdx]
  421032:	add    BYTE PTR [rip+0x732573],ah        # 0xb535ab
  421038:	cs and eax,0x255b0064
  42103e:	jae    0x42109d
  421040:	or     al,BYTE PTR [rax]
  421042:	and    eax,0x732564
  421047:	and    eax,0x3a732573
  42104c:	add    BYTE PTR [rip+0x632573],ah        # 0xa535c5
  421052:	pop    rsp
  421053:	(bad)  
  421054:	add    BYTE PTR [rsi+riz*2+0x0],bl
  421058:	pop    rsp
  421059:	outs   dx,BYTE PTR ds:[rsi]
  42105a:	add    BYTE PTR [rdx+rsi*2+0x0],bl
  42105e:	pop    rsp
  42105f:	je     0x421061
  421061:	pop    rsp
  421062:	js     0x421094
  421064:	xor    BYTE PTR [rip+0x783230],ah        # 0xba429a
  42106a:	add    BYTE PTR [rax],al
  42106c:	push   rsp
  42106d:	jl     0x42106d
  42106f:	push   QWORD PTR [rsp+rdi*2]
  421072:	(bad)  
  421073:	call   QWORD PTR [rsp+rdi*2+0x7bfafffe]
  42107a:	(bad)  
  42107b:	push   QWORD PTR [rsp+rdi*2-0x2]
  42107f:	push   QWORD PTR [rsp+rdi*2+0x7bfafffe]
  421086:	(bad)  
  421087:	(bad)  
  421088:	cli    
  421089:	jnp    0x421089
  42108b:	(bad)  
  42108c:	cli    
  42108d:	jnp    0x42108d
  42108f:	(bad)  
  421090:	cli    
  421091:	jnp    0x421091
  421093:	(bad)  
  421094:	cli    
  421095:	jnp    0x421095
  421097:	(bad)  
  421098:	cli    
  421099:	jnp    0x421099
  42109b:	(bad)  
  42109c:	cli    
  42109d:	jnp    0x42109d
  42109f:	(bad)  
  4210a0:	cli    
  4210a1:	jnp    0x4210a1
  4210a3:	(bad)  
  4210a4:	cli    
  4210a5:	jnp    0x4210a5
  4210a7:	(bad)  
  4210a8:	cli    
  4210a9:	jnp    0x4210a9
  4210ab:	(bad)  
  4210ac:	cli    
  4210ad:	jnp    0x4210ad
  4210af:	(bad)  
  4210b0:	cli    
  4210b1:	jnp    0x4210b1
  4210b3:	(bad)  
  4210b4:	cli    
  4210b5:	jnp    0x4210b5
  4210b7:	(bad)  
  4210b8:	cli    
  4210b9:	jnp    0x4210b9
  4210bb:	(bad)  
  4210bc:	cli    
  4210bd:	jnp    0x4210bd
  4210bf:	(bad)  
  4210c0:	cli    
  4210c1:	jnp    0x4210c1
  4210c3:	(bad)  
  4210c4:	cli    
  4210c5:	jnp    0x4210c5
  4210c7:	(bad)  
  4210c8:	cli    
  4210c9:	jnp    0x4210c9
  4210cb:	(bad)  
  4210cc:	cli    
  4210cd:	jnp    0x4210cd
  4210cf:	(bad)  
  4210d0:	cli    
  4210d1:	jnp    0x4210d1
  4210d3:	(bad)  
  4210d4:	cli    
  4210d5:	jnp    0x4210d5
  4210d7:	jmp    rdi
  4210d9:	jnp    0x4210d9
  4210db:	(bad)  
  4210dc:	cli    
  4210dd:	jnp    0x4210dd
  4210df:	(bad)  
  4210e0:	cli    
  4210e1:	jnp    0x4210e1
  4210e3:	(bad)  
  4210e4:	cli    
  4210e5:	jnp    0x4210e5
  4210e7:	(bad)  
  4210e8:	cli    
  4210e9:	jnp    0x4210e9
  4210eb:	(bad)  
  4210ec:	cli    
  4210ed:	jnp    0x4210ed
  4210ef:	(bad)  
  4210f0:	cli    
  4210f1:	jnp    0x4210f1
  4210f3:	(bad)  
  4210f4:	cli    
  4210f5:	jnp    0x4210f5
  4210f7:	(bad)  
  4210f8:	cli    
  4210f9:	jnp    0x4210f9
  4210fb:	(bad)  
  4210fc:	cli    
  4210fd:	jnp    0x4210fd
  4210ff:	(bad)  
  421100:	cli    
  421101:	jnp    0x421101
  421103:	(bad)  
  421104:	cli    
  421105:	jnp    0x421105
  421107:	(bad)  
  421108:	cli    
  421109:	jnp    0x421109
  42110b:	(bad)  
  42110c:	cli    
  42110d:	jnp    0x42110d
  42110f:	(bad)  
  421110:	cli    
  421111:	jnp    0x421111
  421113:	(bad)  
  421114:	cli    
  421115:	jnp    0x421115
  421117:	(bad)  
  421118:	cli    
  421119:	jnp    0x421119
  42111b:	(bad)  
  42111c:	cli    
  42111d:	jnp    0x42111d
  42111f:	(bad)  
  421120:	cli    
  421121:	jnp    0x421121
  421123:	(bad)  
  421124:	cli    
  421125:	jnp    0x421125
  421127:	(bad)  
  421128:	cli    
  421129:	jnp    0x421129
  42112b:	(bad)  
  42112c:	cli    
  42112d:	jnp    0x42112d
  42112f:	(bad)  
  421130:	cli    
  421131:	jnp    0x421131
  421133:	jmp    rdi
  421135:	jnp    0x421135
  421137:	(bad)  
  421138:	cli    
  421139:	jnp    0x421139
  42113b:	(bad)  
  42113c:	cli    
  42113d:	jnp    0x42113d
  42113f:	jmp    rdi
  421141:	jnp    0x421141
  421143:	(bad)  
  421144:	cli    
  421145:	jnp    0x421145
  421147:	(bad)  
  421148:	cli    
  421149:	jnp    0x421149
  42114b:	(bad)  
  42114c:	cli    
  42114d:	jnp    0x42114d
  42114f:	(bad)  
  421150:	cli    
  421151:	jnp    0x421151
  421153:	(bad)  
  421154:	cli    
  421155:	jnp    0x421155
  421157:	(bad)  
  421158:	cli    
  421159:	jnp    0x421159
  42115b:	(bad)  
  42115c:	cli    
  42115d:	jnp    0x42115d
  42115f:	(bad)  
  421160:	cli    
  421161:	jnp    0x421161
  421163:	(bad)  
  421164:	cli    
  421165:	jnp    0x421165
  421167:	(bad)  
  421168:	cli    
  421169:	jnp    0x421169
  42116b:	(bad)  
  42116c:	cli    
  42116d:	jnp    0x42116d
  42116f:	(bad)  
  421170:	cli    
  421171:	jnp    0x421171
  421173:	(bad)  
  421174:	cli    
  421175:	jnp    0x421175
  421177:	(bad)  
  421178:	cli    
  421179:	jnp    0x421179
  42117b:	(bad)  
  42117c:	cli    
  42117d:	jnp    0x42117d
  42117f:	(bad)  
  421180:	cli    
  421181:	jnp    0x421181
  421183:	(bad)  
  421184:	cli    
  421185:	jnp    0x421185
  421187:	(bad)  
  421188:	cli    
  421189:	jnp    0x421189
  42118b:	(bad)  
  42118c:	cli    
  42118d:	jnp    0x42118d
  42118f:	(bad)  
  421190:	cli    
  421191:	jnp    0x421191
  421193:	(bad)  
  421194:	cli    
  421195:	jnp    0x421195
  421197:	(bad)  
  421198:	cli    
  421199:	jnp    0x421199
  42119b:	(bad)  
  42119c:	cli    
  42119d:	jnp    0x42119d
  42119f:	(bad)  
  4211a0:	cli    
  4211a1:	jnp    0x4211a1
  4211a3:	(bad)  
  4211a4:	cli    
  4211a5:	jnp    0x4211a5
  4211a7:	(bad)  
  4211a8:	cli    
  4211a9:	jnp    0x4211a9
  4211ab:	(bad)  
  4211ac:	cli    
  4211ad:	jnp    0x4211ad
  4211af:	(bad)  
  4211b0:	cli    
  4211b1:	jnp    0x4211b1
  4211b3:	(bad)  
  4211b4:	cli    
  4211b5:	jnp    0x4211b5
  4211b7:	(bad)  
  4211b8:	cli    
  4211b9:	jnp    0x4211b9
  4211bb:	jmp    rdi
  4211bd:	jnp    0x4211bd
  4211bf:	jmp    QWORD PTR [rip+0x22003d73]        # 0x22424f38
  4211c5:	and    eax,0xa2273
  4211ca:	pop    rsp
  4211cb:	pop    rsp
  4211cc:	add    BYTE PTR [rdx+riz*1+0x0],bl
  4211d0:	pop    rsp
  4211d1:	(bad)  
  4211d2:	add    BYTE PTR [rsp+0x0],bl
  4211d6:	jo     0x421241
  4211d8:	jo     0x42123f
  4211da:	cmp    al,BYTE PTR [rax]
  4211dc:	add    BYTE PTR [rax],al
  4211de:	add    BYTE PTR [rax],al
  4211e0:	rex.B jb 0x42124a
  4211e3:	jne    0x421252
  4211e5:	outs   dx,BYTE PTR gs:[rsi]
  4211e7:	je     0x421209
  4211e9:	(bad)  
  4211ea:	and    eax,0x70202773
  4211ef:	jb     0x421260
  4211f1:	jbe    0x42125c
  4211f3:	fs gs and BYTE PTR fs:[rcx+0x73],ah
  4211f9:	and    BYTE PTR [rcx+0x6e],ch
  4211fc:	jo     0x421273
  4211fe:	je     0x421220
  421200:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
  421207:	gs sub al,0x20
  42120a:	(bad)  
  42120b:	jne    0x421281
  42120d:	and    BYTE PTR [rdi],ah
  42120f:	and    eax,0x77202773
  421214:	(bad)  
  421215:	jae    0x421237
  421217:	(bad)  
  421218:	ins    BYTE PTR es:[rdi],dx
  421219:	jb     0x421280
  42121b:	(bad)  
  42121c:	fs jns 0x42123f
  42121f:	jae    0x421291
  421221:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  421225:	imul   esp,DWORD PTR [rbp+0x64],0x2d000a2e
  42122c:	add    BYTE PTR [rax],al
  42122e:	add    BYTE PTR [rax],al
  421230:	rex.WB je 0x421298
  421233:	ins    DWORD PTR es:[rdi],dx
  421234:	and    BYTE PTR [rbx+0x65],dh
  421237:	jo     0x42129a
  421239:	jb     0x42129c
  42123b:	je     0x4212ac
  42123d:	jb     0x42125f
  42123f:	(bad)  
  421240:	and    eax,0x73202773
  421245:	jo     0x4212ac
  421247:	movsxd ebp,DWORD PTR [rcx+0x66]
  42124a:	imul   esp,DWORD PTR [rbp+0x64],0x7562202c
  421251:	je     0x421273
  421253:	ins    DWORD PTR es:[rdi],dx
  421254:	jne    0x4212c9
  421256:	je     0x421278
  421258:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42125b:	je     0x4212be
  42125d:	imul   ebp,DWORD PTR [rsi+0x20],0x69732061
  421264:	outs   dx,BYTE PTR ds:[rsi]
  421265:	ins    BYTE PTR es:[edi],dx
  421267:	and    BYTE PTR gs:[rbx+0x68],ah
  42126b:	(bad)  
  42126c:	jb     0x4212cf
  42126e:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  421272:	or     al,BYTE PTR [rax]
  421274:	outs   dx,BYTE PTR ds:[rsi]
  421275:	outs   dx,DWORD PTR ds:[rsi]
  421276:	outs   dx,BYTE PTR ds:[rsi]
  421277:	add    BYTE PTR gs:[rbx+0x0],ah
  42127b:	push   rbp
  42127c:	outs   dx,BYTE PTR ds:[rsi]
  42127d:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  421281:	outs   dx,BYTE PTR ds:[rsi]
  421282:	and    BYTE PTR [rbp+0x73],ah
  421285:	movsxd esp,DWORD PTR [rcx+0x70]
  421288:	and    BYTE PTR gs:[rbp+0x6f],ch
  42128c:	fs and BYTE PTR gs:[rdi],ah
  421290:	and    eax,0xa2773
  421295:	jo     0x421309
  421297:	imul   esi,DWORD PTR [rsi+0x61],0x6574
  42129e:	add    BYTE PTR [rax],al
  4212a0:	pop    rax
  4212a1:	push   rbx
  4212a2:	rex.R sub eax,0x706d6f63
  4212a8:	ins    BYTE PTR es:[rdi],dx
  4212a9:	imul   esp,DWORD PTR [rcx+0x6e],0x756f2074
  4212b0:	je     0x421322
  4212b2:	jne    0x421328
  4212b4:	and    BYTE PTR [rbx+0x65],dh
  4212b7:	ins    BYTE PTR es:[rdi],dx
  4212b8:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4212bd:	and    BYTE PTR [rdx+0x75],ah
  4212c0:	je     0x4212e2
  4212c2:	outs   dx,DWORD PTR ds:[rsi]
  4212c3:	jo     0x421339
  4212c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  4212cc:	(bad)  
  4212cd:	and    BYTE PTR [rdi+0x61],dh
  4212d0:	jae    0x4212f2
  4212d2:	jae    0x421339
  4212d4:	ins    BYTE PTR es:[rdi],dx
  4212d5:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
  4212da:	sub    al,0x20
  4212dc:	pop    rax
  4212dd:	rex.WRB
  4212de:	rex.WR and BYTE PTR [rdi+0x75],r13b
  4212e2:	je     0x421354
  4212e4:	jne    0x42135a
  4212e6:	and    BYTE PTR [rbp+0x61],ch
  4212e9:	jns    0x42130b
  4212eb:	(bad)  
  4212ec:	and    BYTE PTR gs:[rsi+0x6f],ch
  4212f0:	outs   dx,BYTE PTR ds:[rsi]
  4212f1:	sub    eax,0x706d6f63
  4212f6:	ins    BYTE PTR es:[rdi],dx
  4212f7:	imul   esp,DWORD PTR [rcx+0x6e],0x590a2e74
  4212fe:	outs   dx,DWORD PTR ds:[rsi]
  4212ff:	jne    0x421321
  421301:	outs   dx,BYTE PTR ds:[rsi]
  421302:	gs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  421309:	imul   esi,DWORD PTR fs:[rbx+0x61],0x20656c62
  421311:	jae    0x421388
  421313:	movsxd ebp,DWORD PTR [rax+0x20]
  421316:	outs   dx,DWORD PTR ds:[rsi]
  421317:	jo     0x42138d
  421319:	imul   ebp,DWORD PTR [rdi+0x6e],0x74697720
  421320:	push   0x6e2d2720
  421325:	outs   dx,DWORD PTR ds:[rsi]
  421326:	and    eax,0xa2773
  42132b:	jne    0x42139b
  42132d:	imul   esi,DWORD PTR [rax+rax*1+0x70],0x69666572
  421335:	js     0x421337
  421337:	add    BYTE PTR [rcx+0x6e],cl
  42133a:	je     0x4213a1
  42133c:	jb     0x4213aa
  42133e:	gs (bad) 
  421340:	jbe    0x4213a7
  421342:	and    BYTE PTR fs:[rsi+0x72],ah
  421346:	(bad)  
  421347:	ins    DWORD PTR es:[rdi],dx
  421348:	gs jae 0x42136b
  42134b:	(bad)  
  42134c:	outs   dx,BYTE PTR ds:[rsi]
  42134d:	and    BYTE PTR fs:[rax+0x61],dh
  421351:	movsxd ebp,DWORD PTR [rbx+0x65]
  421354:	je     0x4213c9
  421356:	and    BYTE PTR [rcx+0x72],ah
  421359:	and    BYTE PTR gs:[rsi+0x6f],ch
  42135d:	je     0x42137f
  42135f:	(bad)  
  421360:	ins    BYTE PTR es:[rdi],dx
  421361:	ins    BYTE PTR es:[rdi],dx
  421362:	outs   dx,DWORD PTR ds:[rsi]
  421363:	ja     0x4213ca
  421365:	and    BYTE PTR fs:[rcx+0x6e],ch
  421369:	and    BYTE PTR [rax+0x53],bl
  42136c:	rex.R
  42136d:	and    BYTE PTR cs:[rbx+0x65],dl
  421371:	ins    BYTE PTR es:[rdi],dx
  421372:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x6f]
  421377:	outs   dx,BYTE PTR ds:[rsi]
  421378:	ins    BYTE PTR es:[rdi],dx
  421379:	jns    0x42139b
  42137b:	outs   dx,DWORD PTR ds:[rsi]
  42137c:	outs   dx,BYTE PTR ds:[rsi]
  42137d:	and    BYTE PTR gs:[rdx+0x65],ah
  421381:	je     0x4213fa
  421383:	gs outs dx,BYTE PTR gs:[rsi]
  421386:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42138a:	and    BYTE PTR [rip+0x776f6873],ch        # 0x77b17c03
  421390:	pop    rdi
  421391:	data16 jb 0x4213f5
  421394:	ins    DWORD PTR es:[rdi],dx
  421395:	gs jae 0x4213b8
  421398:	(bad)  
  421399:	outs   dx,BYTE PTR ds:[rsi]
  42139a:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  42139f:	and    BYTE PTR [rip+0x776f6873],ch        # 0x77b17c18
  4213a5:	pop    rdi
  4213a6:	jo     0x421409
  4213a8:	movsxd ebp,DWORD PTR [rbx+0x65]
  4213ab:	je     0x421420
  4213ad:	and    BYTE PTR [rdi+0x70],ch
  4213b0:	je     0x42141b
  4213b2:	outs   dx,DWORD PTR ds:[rsi]
  4213b3:	outs   dx,BYTE PTR ds:[rsi]
  4213b4:	jae    0x4213e4
  4213b6:	or     al,BYTE PTR [rax]
  4213b8:	ja     0x42141d
  4213ba:	je     0x421434
  4213bc:	sub    eax,0x76656c3e
  4213c1:	gs ins BYTE PTR es:[rdi],dx
  4213c3:	and    BYTE PTR [rax+riz*1],bh
  4213c6:	xor    DWORD PTR [rax],esi
  4213c8:	add    BYTE PTR [rcx+0x73],al
  4213cb:	jae    0x421432
  4213cd:	jb     0x421443
  4213cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x20732520
  4213d6:	data16 (bad) 
  4213d8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x20746120
  4213e0:	and    eax,0x64253a73
  4213e5:	or     al,BYTE PTR [rax]
  4213e7:	data16 data16 jo 0x42145d
  4213eb:	outs   dx,DWORD PTR ds:[rsi]
  4213ec:	(bad)  
  4213ed:	gs movsxd eax,DWORD PTR cs:[rax]
  4213f1:	push   rbp
  4213f2:	outs   dx,BYTE PTR ds:[rsi]
  4213f3:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4213f7:	outs   dx,BYTE PTR ds:[rsi]
  4213f8:	and    BYTE PTR [rcx+0x6e],ch
  4213fb:	jo     0x421472
  4213fd:	je     0x42141f
  4213ff:	outs   dx,WORD PTR ds:[rsi]
  421401:	jb     0x421470
  421403:	(bad)  
  421404:	je     0x421440
  421406:	and    BYTE PTR [rip+0x3a000a73],ah        # 0x3a421e7f
  42140c:	add    BYTE PTR [rip+0x61460000],bh        # 0x61881412
  421412:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  42141a:	jo     0x42147d
  42141c:	jb     0x421491
  42141e:	and    BYTE PTR gs:[rdi+0x70],ch
  421422:	je     0x42148d
  421424:	outs   dx,DWORD PTR ds:[rsi]
  421425:	outs   dx,BYTE PTR ds:[rsi]
  421426:	and    BYTE PTR [rbx+0x74],dh
  421429:	jb     0x421494
  42142b:	outs   dx,BYTE PTR ds:[rsi]
  42142c:	and    BYTE PTR [edi],ah
  42142f:	and    eax,0x70202773
  421434:	jb     0x4214a5
  421436:	jbe    0x4214a1
  421438:	fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  42143f:	ja     0x4214b3
  421441:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6e6f6320
  421449:	je     0x4214b0
  42144b:	js     0x4214c1
  42144d:	or     al,BYTE PTR [rax]
  42144f:	add    BYTE PTR [rsi+0x61],al
  421452:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  42145a:	jae    0x4214c1
  42145c:	je     0x42147e
  42145e:	outs   dx,DWORD PTR ds:[rsi]
  42145f:	jo     0x4214d5
  421461:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  421468:	(bad)  
  421469:	and    BYTE PTR [rdi+0x69],dh
  42146c:	je     0x4214d6
  42146e:	and    BYTE PTR [rsi+0x61],dh
  421471:	ins    BYTE PTR es:[rdi],dx
  421472:	jne    0x4214d9
  421474:	and    BYTE PTR [rdi],ah
  421476:	and    eax,0x70202773
  42147b:	jb     0x4214ec
  42147d:	jbe    0x4214e8
  42147f:	fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  421486:	ja     0x4214fa
  421488:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6e6f6320
  421490:	je     0x4214f7
  421492:	js     0x421508
  421494:	or     al,BYTE PTR [rax]
  421496:	xor    BYTE PTR [rax+0x0],bl
  421499:	add    BYTE PTR [rax],al
  42149b:	add    BYTE PTR [rax],al
  42149d:	add    BYTE PTR [rax],al
  42149f:	add    BYTE PTR [rcx+0x6e],cl
  4214a2:	jbe    0x421505
  4214a4:	ins    BYTE PTR es:[rdi],dx
  4214a5:	imul   esp,DWORD PTR [rax+riz*1+0x55],0x20384654
  4214ad:	jae    0x421514
  4214af:	jno    0x421526
  4214b1:	outs   dx,BYTE PTR gs:[rsi]
  4214b3:	movsxd esp,DWORD PTR [rbp+0x20]
  4214b6:	and    eax,0x6f662073
  4214bb:	jne    0x42152b
  4214bd:	and    BYTE PTR fs:[rcx+0x6e],ch
  4214c1:	and    BYTE PTR [rbx+0x74],dh
  4214c4:	jb     0x42152f
  4214c6:	outs   dx,BYTE PTR ds:[rsi]
  4214c7:	and    BYTE PTR [esi+0x61],dh
  4214cb:	ins    BYTE PTR es:[rdi],dx
  4214cc:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x206e6f69
  4214d4:	jb     0x42153b
  4214d6:	jo     0x421544
  4214d8:	(bad)  
  4214d9:	movsxd esp,DWORD PTR [rbp+0x20]
  4214dc:	(bad)  
  4214dd:	and    eax,0xa2773
  4214e2:	and    eax,0x583230
  4214e7:	and    eax,0x30253a64
  4214ec:	xor    ah,BYTE PTR [rdx+rdi*1+0x25]
  4214f0:	xor    BYTE PTR [rcx],bh
  4214f2:	cs data16 add BYTE PTR ss:[rip+0x73250066],ah        # 0x73671561
  4214fb:	and    eax,0x732573
  421500:	sub    eax,DWORD PTR [rax]
  421502:	imul   esp,DWORD PTR [rdx+rdi*1+0x25],0x4f4e0064
  42150a:	push   rax
  42150b:	push   rsp
  42150c:	push   rbx
  42150d:	add    BYTE PTR [rip+0x67362e],ah        # 0xa94b41
  421513:	and    BYTE PTR [rbx+0x74],dh
  421516:	(bad)  
  421517:	jb     0x42158d
  421519:	cmp    ah,BYTE PTR [rip+0x732573]        # 0xb53a92
  42151f:	and    BYTE PTR [rbx+0x74],dh
  421522:	(bad)  
  421523:	jb     0x421599
  421525:	cmp    cl,BYTE PTR [rsi+0x2f]
  421528:	add    BYTE PTR [r8],spl
  42152b:	outs   dx,BYTE PTR gs:[rsi]
  42152d:	cmp    ah,BYTE PTR fs:[rip+0x25230073]        # 0x256515a7
  421534:	ins    BYTE PTR es:[rdi],dx
  421535:	ins    BYTE PTR es:[rdi],dx
  421536:	add    BYTE PTR fs:[rax],ah
  421539:	outs   dx,BYTE PTR gs:[rsi]
  42153b:	cmp    cl,BYTE PTR fs:[rsi+0x2f]
  42153f:	add    BYTE PTR [r9+0x20],bpl
  421543:	cmp    al,0x20
  421545:	jb     0x4215ac
  421547:	(bad)  
  421548:	fs pop rdi
  42154a:	imul   ebp,DWORD PTR [rsi+0x74],0x61767265
  421551:	ins    BYTE PTR es:[rdi],dx
  421552:	jae    0x4215b3
  421554:	outs   dx,BYTE PTR ds:[rsi]
  421555:	(bad)  
  421556:	add    BYTE PTR [rax],al
  421558:	rex.WB outs dx,BYTE PTR ds:[rsi]
  42155a:	jbe    0x4215bd
  42155c:	ins    BYTE PTR es:[rdi],dx
  42155d:	imul   esp,DWORD PTR [rax+riz*1+0x65],0x7974706d
  421565:	and    BYTE PTR [rcx+0x6e],ch
  421568:	je     0x4215cf
  42156a:	jb     0x4215e2
  42156c:	(bad)  
  42156d:	ins    BYTE PTR es:[rdi],dx
  42156e:	and    BYTE PTR [rbx+0x70],dh
  421571:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  421575:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  42157c:	or     al,BYTE PTR [rax]
  42157e:	add    BYTE PTR [rax],al
  421580:	rex.WB outs dx,BYTE PTR ds:[rsi]
  421582:	jbe    0x4215e5
  421584:	ins    BYTE PTR es:[rdi],dx
  421585:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x7265746e
  42158d:	jbe    0x4215f0
  42158f:	ins    BYTE PTR es:[rdi],dx
  421590:	and    BYTE PTR [rbx+0x74],dh
  421593:	(bad)  
  421594:	jb     0x42160a
  421596:	and    BYTE PTR [rbx+0x70],dh
  421599:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42159d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  4215a4:	and    BYTE PTR [rdi],ah
  4215a6:	and    eax,0xa2773
  4215ab:	add    BYTE PTR [rax],al
  4215ad:	add    BYTE PTR [rax],al
  4215af:	add    BYTE PTR [rcx+0x6e],cl
  4215b2:	jbe    0x421615
  4215b4:	ins    BYTE PTR es:[rdi],dx
  4215b5:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x656e2072
  4215bd:	addr32 (bad) 
  4215bf:	je     0x42162a
  4215c1:	jbe    0x421628
  4215c3:	and    BYTE PTR [rsi+0x61],dh
  4215c6:	ins    BYTE PTR es:[rdi],dx
  4215c7:	jne    0x42162e
  4215c9:	and    BYTE PTR [rdi],ah
  4215cb:	and    eax,0x66202773
  4215d0:	outs   dx,DWORD PTR ds:[rsi]
  4215d1:	jb     0x4215f3
  4215d3:	fs jne 0x421648
  4215d6:	(bad)  
  4215d7:	je     0x421642
  4215d9:	outs   dx,DWORD PTR ds:[rsi]
  4215da:	outs   dx,BYTE PTR ds:[rsi]
  4215db:	and    BYTE PTR [rsi+0x75],ch
  4215de:	ins    DWORD PTR es:[rdi],dx
  4215df:	(bad)  
  4215e0:	gs jb  0x421603
  4215e3:	outs   dx,DWORD PTR ds:[rsi]
  4215e4:	data16 and BYTE PTR [rsi+0x72],ah
  4215e8:	(bad)  
  4215e9:	ins    DWORD PTR es:[rdi],dx
  4215ea:	gs jae 0x4215f7
  4215ed:	add    BYTE PTR [rax],al
  4215ef:	add    BYTE PTR [rcx+0x6e],cl
  4215f2:	jbe    0x421655
  4215f4:	ins    BYTE PTR es:[rdi],dx
  4215f5:	imul   esp,DWORD PTR [rax+riz*1+0x69],0x7265746e
  4215fd:	jbe    0x421660
  4215ff:	ins    BYTE PTR es:[rdi],dx
  421600:	and    BYTE PTR [rbp+0x6e],ah
  421603:	fs (bad) 
  421605:	fs jne 0x42167a
  421608:	(bad)  
  421609:	je     0x421674
  42160b:	outs   dx,DWORD PTR ds:[rsi]
  42160c:	outs   dx,BYTE PTR ds:[rsi]
  42160d:	and    BYTE PTR [rbx+0x70],dh
  421610:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  421614:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  42161b:	and    BYTE PTR [rdi],ah
  42161d:	and    eax,0xa2773
  421622:	add    BYTE PTR [rax],al
  421624:	add    BYTE PTR [rax],al
  421626:	add    BYTE PTR [rax],al
  421628:	rex.RB jb 0x42169d
  42162b:	outs   dx,DWORD PTR ds:[rsi]
  42162c:	jb     0x42164e
  42162e:	jo     0x421691
  421630:	jb     0x4216a5
  421632:	imul   ebp,DWORD PTR [rsi+0x67],0x61657220
  421639:	and    BYTE PTR fs:[rcx+0x6e],ch
  42163d:	je     0x4216a4
  42163f:	jb     0x4216b7
  421641:	(bad)  
  421642:	ins    BYTE PTR es:[rdi],dx
  421643:	and    BYTE PTR [rbx],ah
  421645:	and    eax,0x25272064
  42164a:	jae    0x421673
  42164c:	or     al,BYTE PTR [rax]
  42164e:	push   rax
  42164f:	(bad)  
  421650:	jb     0x4216c5
  421652:	gs and BYTE PTR fs:[rdi+rbp*2+0x67],ch
  421658:	and    BYTE PTR [rcx+0x6e],ch
  42165b:	je     0x4216c2
  42165d:	jb     0x4216d5
  42165f:	(bad)  
  421660:	ins    BYTE PTR es:[rdi],dx
  421661:	and    BYTE PTR [rax],al
  421663:	imul   esp,DWORD PTR [rax],0x72203d3d
  421669:	gs (bad) 
  42166b:	fs pop rdi
  42166d:	imul   ebp,DWORD PTR [rsi+0x74],0x61767265
  421674:	ins    BYTE PTR es:[rdi],dx
  421675:	jae    0x4216d6
  421677:	outs   dx,BYTE PTR ds:[rsi]
  421678:	(bad)  
  421679:	add    BYTE PTR [rax],al
  42167b:	add    BYTE PTR [rax],al
  42167d:	add    BYTE PTR [rax],al
  42167f:	add    BYTE PTR [rcx+0x6e],cl
  421682:	jbe    0x4216e5
  421684:	ins    BYTE PTR es:[rdi],dx
  421685:	imul   esp,DWORD PTR [rax+riz*1+0x55],0x382d4654
  42168d:	and    BYTE PTR [rbx+0x65],dh
  421690:	jno    0x421707
  421692:	outs   dx,BYTE PTR gs:[rsi]
  421694:	movsxd esp,DWORD PTR [rbp+0x20]
  421697:	and    eax,0x6f662073
  42169c:	jne    0x42170c
  42169e:	and    BYTE PTR fs:[rcx+0x6e],ch
  4216a2:	and    BYTE PTR [rbx+0x74],dh
  4216a5:	jb     0x421710
  4216a7:	outs   dx,BYTE PTR ds:[rsi]
  4216a8:	and    BYTE PTR [edi],ah
  4216ab:	and    eax,0xa2773
  4216b0:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4216b2:	jbe    0x421715
  4216b4:	ins    BYTE PTR es:[rdi],dx
  4216b5:	imul   esp,DWORD PTR [rax+riz*1+0x55],0x382d4654
  4216bd:	and    BYTE PTR [rbx+0x65],dh
  4216c0:	jno    0x421737
  4216c2:	outs   dx,BYTE PTR gs:[rsi]
  4216c4:	movsxd esp,DWORD PTR [rbp+0x20]
  4216c7:	outs   dx,WORD PTR ds:[rsi]
  4216c9:	jne    0x421739
  4216cb:	and    BYTE PTR fs:[rcx+0x6e],ch
  4216cf:	and    BYTE PTR [rbx+0x74],dh
  4216d2:	jb     0x42173d
  4216d4:	outs   dx,BYTE PTR ds:[rsi]
  4216d5:	and    BYTE PTR [edi],ah
  4216d8:	and    eax,0xa2773
  4216dd:	add    BYTE PTR [rax],al
  4216df:	add    BYTE PTR [rip+0x6e692064],ah        # 0x6eab3749
  4216e5:	jbe    0x421748
  4216e7:	ins    BYTE PTR es:[rdi],dx
  4216e8:	imul   esp,DWORD PTR [rax+riz*1+0x55],0x382d4654
  4216f0:	and    BYTE PTR [rbx+0x65],dh
  4216f3:	jno    0x42176a
  4216f5:	outs   dx,BYTE PTR gs:[rsi]
  4216f7:	movsxd esp,DWORD PTR [rbp+0x28]
  4216fa:	jae    0x421725
  4216fc:	and    BYTE PTR [rsi+0x6f],ah
  4216ff:	jne    0x42176f
  421701:	and    BYTE PTR fs:[rcx+0x6e],ch
  421705:	and    BYTE PTR [rbx+0x74],dh
  421708:	jb     0x421773
  42170a:	outs   dx,BYTE PTR ds:[rsi]
  42170b:	and    BYTE PTR [edi],ah
  42170e:	and    eax,0x202c2773
  421713:	jb     0x42177a
  421715:	jo     0x421783
  421717:	(bad)  
  421718:	movsxd esp,DWORD PTR [rbp+0x64]
  42171b:	and    BYTE PTR [rdi+0x69],dh
  42171e:	je     0x421788
  421720:	and    BYTE PTR [rdi],ah
  421722:	and    eax,0xa2773
  421727:	and    eax,0x3a783830
  42172c:	and    BYTE PTR [rax],al
  42172e:	and    eax,0x783230
  421733:	xor    ch,BYTE PTR [rsi]
  421735:	cmp    BYTE PTR [rsi],ch
  421737:	xor    DWORD PTR [rax],esi
  421739:	add    BYTE PTR [rsi+0x65],dh
  42173c:	jb     0x4217b1
  42173e:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  421745:	add    BYTE PTR [rax],al
  421747:	add    BYTE PTR [rbx+0x6f],al
  42174a:	jo     0x4217c5
  42174c:	jb     0x4217b7
  42174e:	addr32 push 0x63282074
  421754:	sub    DWORD PTR [rax],esp
  421756:	and    eax,0x64252d64
  42175b:	and    BYTE PTR [rax+rbp*2+0x65],dh
  42175f:	and    BYTE PTR [rsi+0x46],al
  421762:	ins    DWORD PTR es:[rdi],dx
  421763:	jo     0x4217ca
  421765:	and    BYTE PTR [ebp+eiz*2+0x76],ah
  42176a:	gs ins BYTE PTR es:[rdi],dx
  42176c:	outs   dx,DWORD PTR ds:[rsi]
  42176d:	jo     0x4217d4
  42176f:	jb     0x4217e4
  421771:	add    BYTE PTR [rbx+0x6f],ah
  421774:	jo     0x4217ef
  421776:	jb     0x4217e1
  421778:	addr32 push 0x63670074
  42177e:	movsxd esp,DWORD PTR [rax]
  421780:	xor    al,0x2e
  421782:	cmp    DWORD PTR [rsi],ebp
  421784:	xor    al,0x20
  421786:	sub    BYTE PTR [rdi+0x43],al
  421789:	rex.XB sub DWORD PTR [r8],eax
  42178c:	movsxd ebp,DWORD PTR [rdi+0x6d]
  42178f:	jo     0x4217fa
  421791:	ins    BYTE PTR es:[rdi],dx
  421792:	gs jb  0x4217f4
  421795:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x74
  42179d:	add    BYTE PTR [rax],al
  42179f:	add    BYTE PTR [rip+0x6f72632d],ch        # 0x6fb47ad2
  4217a5:	jae    0x42181a
  4217a7:	sub    eax,0x66657270
  4217ac:	imul   edi,DWORD PTR [rax+0x3d],0x5f363878
  4217b3:	ss xor al,0x2d
  4217b6:	ja     0x4217ee
  4217b8:	xor    al,0x2d
  4217ba:	ins    DWORD PTR es:[rdi],dx
  4217bb:	imul   ebp,DWORD PTR [rsi+0x67],0x2d323377
  4217c2:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b07cf5
  4217c8:	(bad)  
  4217c9:	ins    BYTE PTR es:[rdi],dx
  4217ca:	gs sub eax,0x736f7263
  4217d0:	jae    0x4217ff
  4217d2:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4217d5:	jo     0x421840
  4217d7:	ins    BYTE PTR es:[rdi],dx
  4217d8:	and    BYTE PTR gs:[rip+0x7261742d],ch        # 0x72a38c0c
  4217df:	addr32 gs je 0x421810
  4217e3:	outs   dx,DWORD PTR ds:[rsi]
  4217e4:	jae    0x421823
  4217e6:	ins    DWORD PTR es:[rdi],dx
  4217e7:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  4217ee:	sub    eax,0x6372612d
  4217f3:	push   0x3638783d
  4217f8:	pop    rdi
  4217f9:	ss xor al,0x20
  4217fc:	sub    eax,0x6572702d
  421801:	imul   di,WORD PTR [rax+0x3d],0x732f
  421807:	movsxd esi,DWORD PTR [rdx+0x61]
  42180a:	je     0x42186f
  42180c:	push   0x65776a2f
  421811:	(bad)  
  421812:	ins    DWORD PTR es:[rdi],dx
  421813:	js     0x42187a
  421815:	sub    eax,0x6174636f
  42181a:	jbe    0x421881
  42181c:	(bad)  
  42181d:	xor    al,0x2e
  42181f:	xor    ch,BYTE PTR [rsi]
  421821:	xor    DWORD PTR [rdi],ebp
  421823:	ja     0x42185b
  421825:	xor    al,0x2d
  421827:	xor    esi,DWORD PTR [rdx]
  421829:	(bad)  
  42182a:	jne    0x42189f
  42182c:	jb     0x42185d
  42182e:	js     0x421868
  421830:	ss pop rdi
  421832:	ss xor al,0x2d
  421835:	ja     0x42186d
  421837:	xor    al,0x2d
  421839:	ins    DWORD PTR es:[rdi],dx
  42183a:	imul   ebp,DWORD PTR [rsi+0x67],0x20323377
  421841:	sub    eax,0x616e652d
  421846:	(bad)  
  421847:	ins    BYTE PTR es:[rdi],dx
  421848:	gs sub eax,0x72616873
  42184e:	gs and BYTE PTR fs:[rip+0x7369642d],ch        # 0x73ab7c83
  421856:	(bad)  
  421857:	(bad)  
  421858:	ins    BYTE PTR es:[rdi],dx
  421859:	gs sub eax,0x74617473
  42185f:	imul   esp,DWORD PTR [rbx+0x20],0x61792d2d
  421866:	jae    0x4218d5
  421868:	gs js  0x4218d0
  42186b:	cmp    eax,0x7263732f
  421870:	(bad)  
  421871:	je     0x4218d6
  421873:	push   0x65776a2f
  421878:	(bad)  
  421879:	ins    DWORD PTR es:[rdi],dx
  42187a:	js     0x4218e1
  42187c:	sub    eax,0x6174636f
  421881:	jbe    0x4218e8
  421883:	(bad)  
  421884:	xor    al,0x2e
  421886:	xor    ch,BYTE PTR [rsi]
  421888:	xor    DWORD PTR [rdi],ebp
  42188a:	ja     0x4218c2
  42188c:	xor    al,0x2d
  42188e:	xor    esi,DWORD PTR [rdx]
  421890:	(bad)  
  421891:	jne    0x421906
  421893:	jb     0x4218c4
  421895:	(bad)  
  421896:	imul   ebp,DWORD PTR [rsi+0x2f],0x6d736179
  42189d:	and    BYTE PTR [rip+0x7478652d],ch        # 0x74ba7dd0
  4218a3:	jb     0x421906
  4218a5:	sub    eax,0x7362696c
  4218aa:	cmp    eax,0x6f636d2d
  4218af:	outs   dx,BYTE PTR ds:[rsi]
  4218b0:	jae    0x421921
  4218b2:	ins    BYTE PTR es:[rdi],dx
  4218b3:	and    BYTE PTR gs:[rip+0x7369642d],ch        # 0x73ab7ce7
  4218ba:	(bad)  
  4218bb:	(bad)  
  4218bc:	ins    BYTE PTR es:[rdi],dx
  4218bd:	gs sub eax,0x75626564
  4218c3:	and    BYTE PTR [eip+0x7369642d],ch        # 0x73ab7cf7
  4218ca:	(bad)  
  4218cb:	(bad)  
  4218cc:	ins    BYTE PTR es:[rdi],dx
  4218cd:	gs sub eax,0x20636f64
  4218d3:	sub    eax,0x616e652d
  4218d8:	(bad)  
  4218d9:	ins    BYTE PTR es:[rdi],dx
  4218da:	gs sub eax,0x616d656d
  4218e0:	ins    BYTE PTR es:[rdi],dx
  4218e1:	imul   esp,DWORD PTR [rdi+0x6e],0x6361682d
  4218e8:	imul   esp,DWORD PTR [rax],0x2d
  4218eb:	sub    eax,0x62616e65
  4218f0:	ins    BYTE PTR es:[rdi],dx
  4218f1:	gs sub eax,0x65727661
  4218f7:	jae    0x42195a
  4218f9:	ins    DWORD PTR es:[rdi],dx
  4218fa:	jo     0x421968
  4218fc:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b07e30
  421903:	(bad)  
  421904:	ins    BYTE PTR es:[rdi],dx
  421905:	gs sub eax,0x206c7067
  42190b:	sub    eax,0x616e652d
  421910:	(bad)  
  421911:	ins    BYTE PTR es:[rdi],dx
  421912:	gs sub eax,0x73726576
  421918:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d2033
  42191f:	imul   esi,DWORD PTR fs:[rbx+0x61],0x2d656c62
  421927:	jo     0x42199d
  421929:	push   0x64616572
  42192e:	jae    0x421950
  421930:	sub    eax,0x616e652d
  421935:	(bad)  
  421936:	ins    BYTE PTR es:[rdi],dx
  421937:	gs sub eax,0x74323377
  42193d:	push   0x64616572
  421942:	jae    0x421964
  421944:	sub    eax,0x616e652d
  421949:	(bad)  
  42194a:	ins    BYTE PTR es:[rdi],dx
  42194b:	gs sub eax,0x73697661
  421951:	jns    0x4219c1
  421953:	je     0x4219bd
  421955:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b07e88
  42195b:	(bad)  
  42195c:	ins    BYTE PTR es:[rdi],dx
  42195d:	gs sub eax,0x74756e67
  421963:	ins    BYTE PTR es:[rdi],dx
  421964:	jae    0x421986
  421966:	sub    eax,0x616e652d
  42196b:	(bad)  
  42196c:	ins    BYTE PTR es:[rdi],dx
  42196d:	gs sub eax,0x7362696c
  421973:	jo     0x4219da
  421975:	gs js  0x421998
  421978:	sub    eax,0x616e652d
  42197d:	(bad)  
  42197e:	ins    BYTE PTR es:[rdi],dx
  42197f:	gs sub eax,0x7462696c
  421985:	push   0x61726f65
  42198a:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b07ebd
  421990:	(bad)  
  421991:	ins    BYTE PTR es:[rdi],dx
  421992:	gs sub eax,0x7662696c
  421998:	outs   dx,DWORD PTR ds:[rsi]
  421999:	jb     0x4219fd
  42199b:	imul   esi,DWORD PTR [rbx+0x20],0x6e652d2d
  4219a2:	(bad)  
  4219a3:	(bad)  
  4219a4:	ins    BYTE PTR es:[rdi],dx
  4219a5:	gs sub eax,0x6d62696c
  4219ab:	jo     0x4219e0
  4219ad:	ins    BYTE PTR es:[rdi],dx
  4219ae:	(bad)  
  4219af:	ins    DWORD PTR es:[rdi],dx
  4219b0:	and    BYTE PTR gs:[rip+0x616e652d],ch        # 0x61b07ee4
  4219b7:	(bad)  
  4219b8:	ins    BYTE PTR es:[rdi],dx
  4219b9:	gs sub eax,0x7862696c
  4219bf:	jbe    0x421a2a
  4219c1:	and    BYTE PTR fs:[rip+0x616e652d],ch        # 0x61b07ef5
  4219c8:	(bad)  
  4219c9:	ins    BYTE PTR es:[rdi],dx
  4219ca:	gs sub eax,0x6f62696c
  4219d0:	jo     0x421a37
  4219d2:	outs   dx,BYTE PTR ds:[rsi]
  4219d3:	movsxd ebp,DWORD PTR [rdi+0x72]
  4219d6:	gs sub eax,0x6e726d61
  4219dc:	(bad)  
  4219dd:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b07f10
  4219e3:	(bad)  
  4219e4:	ins    BYTE PTR es:[rdi],dx
  4219e5:	gs sub eax,0x6f62696c
  4219eb:	jo     0x421a52
  4219ed:	outs   dx,BYTE PTR ds:[rsi]
  4219ee:	movsxd ebp,DWORD PTR [rdi+0x72]
  4219f1:	gs sub eax,0x77726d61
  4219f7:	(bad)  
  4219f8:	and    BYTE PTR [rip+0x616e652d],ch        # 0x61b07f2b
  4219fe:	(bad)  
  4219ff:	ins    BYTE PTR es:[rdi],dx
  421a00:	gs sub eax,0x7862696c
  421a06:	xor    dh,BYTE PTR [rsi]
  421a08:	xor    al,0x20
  421a0a:	sub    eax,0x616e652d
  421a0f:	(bad)  
  421a10:	ins    BYTE PTR es:[rdi],dx
  421a11:	gs sub eax,0x7662696c
  421a17:	jo     0x421a91
  421a19:	add    BYTE PTR [rbx+0x6f],ah
  421a1c:	outs   dx,BYTE PTR ds:[rsi]
  421a1d:	imul   sp,WORD PTR [rdi+0x75],0x6172
  421a23:	je     0x421a8e
  421a25:	outs   dx,DWORD PTR ds:[rsi]
  421a26:	outs   dx,BYTE PTR ds:[rsi]
  421a27:	add    BYTE PTR [rip+0x25632563],ah        # 0x25a53f90
  421a2d:	movsxd eax,DWORD PTR [rax]
  421a2f:	and    eax,0x2020632a
  421a34:	and    eax,0x252f0073
  421a39:	jae    0x421a3b
  421a3b:	add    BYTE PTR [rax],al
  421a3d:	add    BYTE PTR [rax],al
  421a3f:	add    BYTE PTR [rbx+0x65],dl
  421a42:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  421a46:	outs   dx,BYTE PTR ds:[rsi]
  421a47:	jae    0x421a83
  421a49:	or     dl,BYTE PTR [rdi+0x2e]
  421a4c:	and    BYTE PTR cs:[rip+0x63655320],bh        # 0x63a76d73
  421a53:	je     0x421abe
  421a55:	outs   dx,DWORD PTR ds:[rsi]
  421a56:	outs   dx,BYTE PTR ds:[rsi]
  421a57:	and    BYTE PTR [rcx+0x73],ch
  421a5a:	and    BYTE PTR [rcx+0x20],ah
  421a5d:	ja     0x421ad1
  421a5f:	(bad)  
  421a60:	jo     0x421ad2
  421a62:	gs jb  0x421a85
  421a65:	sub    BYTE PTR [rbx+0x6f],ah
  421a68:	outs   dx,BYTE PTR ds:[rsi]
  421a69:	je     0x421acc
  421a6b:	imul   ebp,DWORD PTR [rsi+0x73],0x68746f20
  421a72:	gs jb  0x421a95
  421a75:	jae    0x421adc
  421a77:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  421a7b:	outs   dx,BYTE PTR ds:[rsi]
  421a7c:	jae    0x421aaa
  421a7e:	and    BYTE PTR [rsi+0x6f],ch
  421a81:	and    BYTE PTR [rdi+rbp*2+0x63],ch
  421a85:	(bad)  
  421a86:	ins    BYTE PTR es:[rdi],dx
  421a87:	and    BYTE PTR [rbp+0x6e],ah
  421a8a:	je     0x421afe
  421a8c:	imul   esp,DWORD PTR [rbp+0x73],0x412e0a29
  421a93:	and    BYTE PTR cs:[rip+0x63655320],bh        # 0x63a76dba
  421a9a:	je     0x421b05
  421a9c:	outs   dx,DWORD PTR ds:[rsi]
  421a9d:	outs   dx,BYTE PTR ds:[rsi]
  421a9e:	and    BYTE PTR [rbx+0x6f],ah
  421aa1:	outs   dx,BYTE PTR ds:[rsi]
  421aa2:	je     0x421b05
  421aa4:	imul   ebp,DWORD PTR [rsi+0x73],0x206e6120
  421aab:	(bad)  
  421aac:	jb     0x421b20
  421aae:	(bad)  
  421aaf:	jns    0x421ad1
  421ab1:	outs   dx,DWORD PTR ds:[rsi]
  421ab2:	data16 and BYTE PTR [rbp+0x6c],ah
  421ab6:	gs ins DWORD PTR es:[rdi],dx
  421ab8:	outs   dx,BYTE PTR gs:[rsi]
  421aba:	je     0x421b2f
  421abc:	and    BYTE PTR [rdi+0x66],ch
  421abf:	and    BYTE PTR [rax+rbp*2+0x65],dh
  421ac3:	and    BYTE PTR [rbx+0x61],dh
  421ac6:	ins    DWORD PTR es:[rdi],dx
  421ac7:	and    BYTE PTR gs:[rcx+rdi*2+0x70],dh
  421acc:	or     ch,BYTE PTR gs:[rsi]
  421acf:	cs push rsi
  421ad1:	and    BYTE PTR [rip+0x63655320],bh        # 0x63a76df7
  421ad7:	je     0x421b42
  421ad9:	outs   dx,DWORD PTR ds:[rsi]
  421ada:	outs   dx,BYTE PTR ds:[rsi]
  421adb:	and    BYTE PTR [rbp+0x61],ch
  421ade:	jns    0x421b00
  421ae0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  421ae3:	je     0x421b46
  421ae5:	imul   ebp,DWORD PTR [rsi+0x20],0x61762061
  421aec:	jb     0x421b57
  421aee:	(bad)  
  421aef:	(bad)  
  421af0:	ins    BYTE PTR es:[rdi],dx
  421af1:	and    BYTE PTR gs:[rsi+0x75],ch
  421af5:	ins    DWORD PTR es:[rdi],dx
  421af6:	(bad)  
  421af7:	gs jb  0x421b1a
  421afa:	outs   dx,DWORD PTR ds:[rsi]
  421afb:	data16 and BYTE PTR [rsi+0x69],ah
  421aff:	gs ins BYTE PTR es:[rdi],dx
  421b01:	fs jae 0x421b24
  421b04:	ja     0x421b6f
  421b06:	je     0x421b70
  421b08:	and    BYTE PTR [rsi+0x61],dh
  421b0b:	jb     0x421b76
  421b0d:	(bad)  
  421b0e:	(bad)  
  421b0f:	ins    BYTE PTR es:[rdi],dx
  421b10:	and    BYTE PTR gs:[rbx+0x65],ch
  421b14:	jns    0x421b89
  421b16:	or     al,BYTE PTR [rsi+0x4c]
  421b19:	rex.B
  421b1a:	rex.RXB push r11
  421b1c:	and    BYTE PTR [rsi+0x41],cl
  421b1f:	rex.WRB
  421b20:	rex.RB (bad) 
  421b22:	push   rbp
  421b23:	rex.WRX
  421b24:	rex.WB push r9
  421b26:	push   rbp
  421b27:	rex.RB pop r15
  421b29:	rex.WRX
  421b2a:	rex.B
  421b2b:	rex.WRB
  421b2c:	or     r13b,BYTE PTR [rip+0xa2d2d]        # 0x4c4860
  421b33:	rex.WRX (bad) 
  421b35:	add    BYTE PTR [r10],spl
  421b38:	and    eax,0x203a2273
  421b3d:	and    eax,0x646c6c
  421b42:	pop    rsp
  421b43:	jne    0x421b75
  421b45:	xor    BYTE PTR [rip+0x783230],ah        # 0xba4d7b
  421b4b:	and    ah,BYTE PTR [rip+0x3a2273]        # 0x7c3dc4
  421b51:	and    BYTE PTR [rdx],ah
  421b53:	and    eax,0x7b002273
  421b58:	or     al,BYTE PTR [rax]
  421b5a:	and    ah,BYTE PTR [rip+0x203a2273]        # 0x207c3dd3
  421b60:	pop    rbx
  421b61:	or     al,BYTE PTR [rax]
  421b63:	and    ah,BYTE PTR [rip+0x203a2273]        # 0x207c3ddc
  421b69:	jnp    0x421b90
  421b6b:	jae    0x421b6d
  421b6d:	and    dh,BYTE PTR [rcx+rdi*2+0x70]
  421b71:	and    bh,BYTE PTR gs:[rdx]
  421b74:	and    BYTE PTR [rdx],ah
  421b76:	and    eax,0x73252273
  421b7b:	add    BYTE PTR [rbx+0x25],bh
  421b7e:	jae    0x421b80
  421b80:	and    eax,0x25632564
  421b85:	add    BYTE PTR fs:[rcx+rbp*2+0x6d],dh
  421b8a:	gs pop rdi
  421b8c:	(bad)  
  421b8e:	jae    0x421bf5
  421b90:	add    BYTE PTR [rip+0x3a],bh        # 0x421bd0
  421b96:	add    BYTE PTR [rax],al
  421b98:	imul   r14,QWORD PTR [r11+0x73],0x20676e69
  421ba0:	jae    0x421c07
  421ba2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  421ba6:	outs   dx,BYTE PTR ds:[rsi]
  421ba7:	and    BYTE PTR [rsi+0x61],ch
  421baa:	ins    DWORD PTR es:[rdi],dx
  421bab:	and    BYTE PTR gs:[rsi+0x6f],ah
  421baf:	jb     0x421bd1
  421bb1:	outs   dx,DWORD PTR ds:[rsi]
  421bb2:	jo     0x421c28
  421bb4:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  421bbb:	(bad)  
  421bbc:	or     al,BYTE PTR [rax]
  421bbe:	sub    al,0x3a
	...
  421bc8:	rex.B
  421bc9:	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x73252720
  421bd2:	(bad)  
  421bd3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  421bd7:	je     0x421c41
  421bd9:	and    BYTE PTR gs:[rbp+0x6e],ah
  421bdd:	je     0x421c51
  421bdf:	imul   esp,DWORD PTR [rbp+0x73],0x206f7420
  421be6:	jae    0x421c50
  421be8:	outs   dx,DWORD PTR ds:[rsi]
  421be9:	ja     0x421c0b
  421beb:	imul   ebp,DWORD PTR [rsi+0x20],0x74636573
  421bf2:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  421bf9:	(bad)  
  421bfa:	or     al,BYTE PTR [rax]
  421bfc:	add    BYTE PTR [rax],al
  421bfe:	add    BYTE PTR [rax],al
  421c00:	(bad)  
  421c01:	and    eax,0x6d202773
  421c06:	(bad)  
  421c07:	je     0x421c6c
  421c09:	push   0x73207365
  421c0e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  421c13:	outs   dx,BYTE PTR ds:[rsi]
  421c14:	and    BYTE PTR [rdi+0x69],dh
  421c17:	je     0x421c81
  421c19:	and    BYTE PTR [rbp+0x6e],dh
  421c1c:	imul   esi,DWORD PTR [rcx+0x75],0x616e2065
  421c23:	ins    DWORD PTR es:[rdi],dx
  421c24:	and    BYTE PTR gs:[rdi],ah
  421c27:	and    eax,0xa2773
  421c2c:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  421c2e:	and    BYTE PTR [rbp+0x61],ch
  421c31:	je     0x421c96
  421c33:	push   0x726f6620
  421c38:	and    BYTE PTR [rbx+0x65],dh
  421c3b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  421c3f:	outs   dx,BYTE PTR ds:[rsi]
  421c40:	and    BYTE PTR [rdi],ah
  421c42:	and    eax,0xa2773
  421c47:	outs   dx,WORD PTR ds:[rsi]
  421c49:	jb     0x421cb8
  421c4b:	(bad)  
  421c4c:	je     0x421c8b
  421c4e:	and    eax,0x73
  421c53:	add    BYTE PTR [rax],al
  421c55:	add    BYTE PTR [rax],al
  421c57:	add    BYTE PTR [rdi+0x70],cl
  421c5a:	je     0x421cc5
  421c5c:	outs   dx,DWORD PTR ds:[rsi]
  421c5d:	outs   dx,BYTE PTR ds:[rsi]
  421c5e:	and    BYTE PTR [rdi],ah
  421c60:	and    eax,0x69202773
  421c65:	jae    0x421c87
  421c67:	fs gs jo 0x421cdd
  421c6b:	movsxd esp,DWORD PTR gs:[rcx+0x74]
  421c6f:	gs fs sub al,0x20
  421c73:	jne    0x421ce8
  421c75:	and    BYTE PTR gs:[rdi],ah
  421c78:	sub    eax,0x776f6873
  421c7d:	pop    rdi
  421c7e:	outs   dx,BYTE PTR gs:[rsi]
  421c80:	je     0x421cf4
  421c82:	imul   esp,DWORD PTR [rbp+0x73],0x726f6620
  421c89:	ins    DWORD PTR es:[rdi],dx
  421c8a:	(bad)  
  421c8b:	je     0x421cca
  421c8d:	and    eax,0x69202773
  421c92:	outs   dx,BYTE PTR ds:[rsi]
  421c93:	jae    0x421d09
  421c95:	gs (bad) 
  421c97:	or     al,BYTE PTR fs:[rax]
  421c9a:	cmp    al,0x25
  421c9c:	jae    0x421cbe
  421c9e:	imul   esp,DWORD PTR [rbp+0x79],0x3d
  421ca2:	and    ah,BYTE PTR [rip+0x26002273]        # 0x26423f1b
  421ca8:	(bad)  
  421ca9:	ins    DWORD PTR es:[rdi],dx
  421caa:	jo     0x421ce7
  421cac:	add    BYTE PTR [rsi],ah
  421cae:	ins    BYTE PTR es:[rdi],dx
  421caf:	je     0x421cec
  421cb1:	add    BYTE PTR [rsi],ah
  421cb3:	addr32 je 0x421cf1
  421cb6:	add    BYTE PTR [rsi],ah
  421cb8:	jno    0x421d2f
  421cba:	outs   dx,DWORD PTR ds:[rsi]
  421cbb:	je     0x421cf8
  421cbd:	add    BYTE PTR [rsi],ah
  421cbf:	(bad)  
  421cc0:	jo     0x421d31
  421cc2:	jae    0x421cff
  421cc4:	add    BYTE PTR [rax],ah
  421cc6:	jbe    0x421d29
  421cc8:	ins    BYTE PTR es:[rdi],dx
  421cc9:	jne    0x421d30
  421ccb:	cmp    eax,0x22732522
  421cd0:	(bad)  
  421cd1:	or     al,BYTE PTR ds:[rax]
  421cd4:	and    eax,0x25223d73
  421cd9:	jae    0x421cfd
  421cdb:	add    BYTE PTR [rbx+rbp*4-0x542b0002],dh
  421ce2:	(bad)  
  421ce3:	call   rsp
  421ce5:	stos   DWORD PTR es:[rdi],eax
  421ce6:	(bad)  
  421ce7:	call   rsp
  421ce9:	stos   DWORD PTR es:[rdi],eax
  421cea:	(bad)  
  421ceb:	call   QWORD PTR [rbx+rbp*4-0x548b0002]
  421cf2:	(bad)  
  421cf3:	call   rsp
  421cf5:	stos   DWORD PTR es:[rdi],eax
  421cf6:	(bad)  
  421cf7:	call   rsp
  421cf9:	stos   DWORD PTR es:[rdi],eax
  421cfa:	(bad)  
  421cfb:	call   rsp
  421cfd:	stos   DWORD PTR es:[rdi],eax
  421cfe:	(bad)  
  421cff:	call   rsp
  421d01:	stos   DWORD PTR es:[rdi],eax
  421d02:	(bad)  
  421d03:	call   rsp
  421d05:	stos   DWORD PTR es:[rdi],eax
  421d06:	(bad)  
  421d07:	call   rsp
  421d09:	stos   DWORD PTR es:[rdi],eax
  421d0a:	(bad)  
  421d0b:	call   rsp
  421d0d:	stos   DWORD PTR es:[rdi],eax
  421d0e:	(bad)  
  421d0f:	call   rsp
  421d11:	stos   DWORD PTR es:[rdi],eax
  421d12:	(bad)  
  421d13:	call   rsp
  421d15:	stos   DWORD PTR es:[rdi],eax
  421d16:	(bad)  
  421d17:	call   rsp
  421d19:	stos   DWORD PTR es:[rdi],eax
  421d1a:	(bad)  
  421d1b:	call   rsp
  421d1d:	stos   DWORD PTR es:[rdi],eax
  421d1e:	(bad)  
  421d1f:	call   rsp
  421d21:	stos   DWORD PTR es:[rdi],eax
  421d22:	(bad)  
  421d23:	call   rsp
  421d25:	stos   DWORD PTR es:[rdi],eax
  421d26:	(bad)  
  421d27:	call   rsp
  421d29:	stos   DWORD PTR es:[rdi],eax
  421d2a:	(bad)  
  421d2b:	call   rsp
  421d2d:	stos   DWORD PTR es:[rdi],eax
  421d2e:	(bad)  
  421d2f:	call   rsp
  421d31:	stos   DWORD PTR es:[rdi],eax
  421d32:	(bad)  
  421d33:	call   rsp
  421d35:	stos   DWORD PTR es:[rdi],eax
  421d36:	(bad)  
  421d37:	call   rsp
  421d39:	stos   DWORD PTR es:[rdi],eax
  421d3a:	(bad)  
  421d3b:	call   rsp
  421d3d:	stos   DWORD PTR es:[rdi],eax
  421d3e:	(bad)  
  421d3f:	call   rsp
  421d41:	stos   DWORD PTR es:[rdi],eax
  421d42:	(bad)  
  421d43:	call   QWORD PTR [rbx+rbp*4-0x2]
  421d47:	call   rsp
  421d49:	stos   DWORD PTR es:[rdi],eax
  421d4a:	(bad)  
  421d4b:	push   rsp
  421d4d:	stos   BYTE PTR es:[rdi],al
  421d4e:	(bad)  
  421d4f:	inc    eax
  421d51:	lods   al,BYTE PTR ds:[rsi]
  421d52:	(bad)  
  421d53:	push   QWORD PTR [rbx-0x4c000153]
  421d59:	lods   eax,DWORD PTR ds:[rsi]
  421d5a:	(bad)  
  421d5b:	push   QWORD PTR [rbx-0x5f000153]
  421d61:	lods   al,BYTE PTR ds:[rsi]
  421d62:	(bad)  
  421d63:	inc    DWORD PTR [rax-0x4c000154]
  421d69:	lods   eax,DWORD PTR ds:[rsi]
  421d6a:	(bad)  
  421d6b:	push   QWORD PTR [rbx-0x4c000153]
  421d71:	lods   eax,DWORD PTR ds:[rsi]
  421d72:	(bad)  
  421d73:	push   QWORD PTR [rbx-0x4c000153]
  421d79:	lods   eax,DWORD PTR ds:[rsi]
  421d7a:	(bad)  
  421d7b:	push   QWORD PTR [rbx-0x4c000153]
  421d81:	lods   eax,DWORD PTR ds:[rsi]
  421d82:	(bad)  
  421d83:	push   QWORD PTR [rbx-0x4c000153]
  421d89:	lods   eax,DWORD PTR ds:[rsi]
  421d8a:	(bad)  
  421d8b:	push   QWORD PTR [rbx-0x4c000153]
  421d91:	lods   eax,DWORD PTR ds:[rsi]
  421d92:	(bad)  
  421d93:	push   QWORD PTR [rbx-0x4c000153]
  421d99:	lods   eax,DWORD PTR ds:[rsi]
  421d9a:	(bad)  
  421d9b:	push   QWORD PTR [rbx-0x4c000153]
  421da1:	lods   eax,DWORD PTR ds:[rsi]
  421da2:	(bad)  
  421da3:	push   QWORD PTR [rbx-0x4c000153]
  421da9:	lods   eax,DWORD PTR ds:[rsi]
  421daa:	(bad)  
  421dab:	push   QWORD PTR [rbx-0x4c000153]
  421db1:	lods   eax,DWORD PTR ds:[rsi]
  421db2:	(bad)  
  421db3:	push   QWORD PTR [rbx+0x60fffead]
  421db9:	lods   al,BYTE PTR ds:[rsi]
  421dba:	(bad)  
  421dbb:	push   QWORD PTR [rbx-0x1f000153]
  421dc1:	stos   DWORD PTR es:[rdi],eax
  421dc2:	(bad)  
  421dc3:	dec    DWORD PTR [rbp*4-0x52d30002]
  421dca:	(bad)  
  421dcb:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421dd2:	(bad)  
  421dd3:	(bad)  
  421dd4:	in     al,dx
  421dd5:	lods   al,BYTE PTR ds:[rsi]
  421dd6:	(bad)  
  421dd7:	dec    esp
  421dd9:	lods   al,BYTE PTR ds:[rsi]
  421dda:	(bad)  
  421ddb:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421de2:	(bad)  
  421de3:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421dea:	(bad)  
  421deb:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421df2:	(bad)  
  421df3:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421dfa:	(bad)  
  421dfb:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421e02:	(bad)  
  421e03:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421e0a:	(bad)  
  421e0b:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421e12:	(bad)  
  421e13:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421e1a:	(bad)  
  421e1b:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421e22:	(bad)  
  421e23:	jmp    FWORD PTR [rbp*4-0x52d30002]
  421e2a:	(bad)  
  421e2b:	push   QWORD PTR [rcx+0x2cfffeac]
  421e31:	lods   eax,DWORD PTR ds:[rsi]
  421e32:	(bad)  
  421e33:	jmp    FWORD PTR [rsp+rbp*4-0x2]
  421e37:	push   QWORD PTR [rbx+0x75]
  421e3a:	(bad)  
  421e3b:	je     0x421ea6
  421e3d:	je     0x421eab
  421e3f:	add    BYTE PTR gs:[rbp+0x65],ch
  421e43:	imul   esp,DWORD PTR fs:[rcx+0x5f],0x65707974
  421e4b:	add    BYTE PTR [rax+0x74],dh
  421e4e:	jae    0x421e50
  421e50:	jo     0x421ec6
  421e52:	jae    0x421eb3
  421e54:	je     0x421ebf
  421e56:	ins    DWORD PTR es:[rdi],dx
  421e57:	add    BYTE PTR gs:[rsi+0x6f],ah
  421e5b:	jb     0x421eca
  421e5d:	(bad)  
  421e5e:	je     0x421e60
  421e60:	jae    0x421ed6
  421e62:	(bad)  
  421e63:	jb     0x421ed9
  421e65:	pop    rdi
  421e66:	imul   esi,DWORD PTR fs:[rbx+0x70],0x5f79616c
  421e6e:	je     0x421ed9
  421e70:	ins    DWORD PTR es:[rdi],dx
  421e71:	add    BYTE PTR gs:[rbp+0x6e],ah
  421e75:	fs pop rdi
  421e77:	imul   esi,DWORD PTR fs:[rbx+0x70],0x5f79616c
  421e7f:	je     0x421eea
  421e81:	ins    DWORD PTR es:[rdi],dx
  421e82:	add    BYTE PTR gs:[rsi+0x75],ch
  421e86:	ins    DWORD PTR es:[rdi],dx
  421e87:	pop    rdi
  421e88:	jb     0x421eef
  421e8a:	movsxd esi,DWORD PTR [rbx+rsi*2+0x0]
  421e8e:	jne    0x421efe
  421e90:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  421e94:	outs   dx,BYTE PTR ds:[rsi]
  421e95:	add    BYTE PTR [rbx+0x74],dh
  421e98:	jb     0x421eff
  421e9a:	(bad)  
  421e9b:	ins    DWORD PTR es:[rdi],dx
  421e9c:	pop    rdi
  421e9d:	imul   ebp,DWORD PTR [rsi+0x64],0x6b007865
  421ea4:	gs jns 0x421f06
  421ea7:	data16 jb 0x421f0b
  421eaa:	ins    DWORD PTR es:[rdi],dx
  421eab:	add    BYTE PTR gs:[rax+0x6b],dh
  421eaf:	je     0x421f10
  421eb1:	jo     0x421f27
  421eb3:	jae    0x421eb5
  421eb5:	jo     0x421f22
  421eb7:	je     0x421f18
  421eb9:	jo     0x421f2f
  421ebb:	jae    0x421f1c
  421ebd:	je     0x421f28
  421ebf:	ins    DWORD PTR es:[rdi],dx
  421ec0:	add    BYTE PTR gs:[rax+0x6b],dh
  421ec4:	je     0x421f25
  421ec6:	fs je  0x421f3c
  421ec9:	add    BYTE PTR [rax+0x6b],dh
  421ecc:	je     0x421f2d
  421ece:	fs je  0x421f44
  421ed1:	pop    rdi
  421ed2:	je     0x421f3d
  421ed4:	ins    DWORD PTR es:[rdi],dx
  421ed5:	add    BYTE PTR gs:[rdx+0x65],ah
  421ed9:	jae    0x421f4f
  421edb:	pop    rdi
  421edc:	data16 outs dx,WORD PTR gs:[rsi]
  421ee0:	jb     0x421f56
  421ee2:	pop    rdi
  421ee3:	je     0x421f4e
  421ee5:	ins    DWORD PTR es:[rdi],dx
  421ee6:	gs jae 0x421f5d
  421ee9:	(bad)  
  421eea:	ins    DWORD PTR es:[rdi],dx
  421eeb:	jo     0x421eed
  421eed:	(bad)  
  421eee:	gs jae 0x421f65
  421ef1:	pop    rdi
  421ef2:	data16 outs dx,WORD PTR gs:[rsi]
  421ef6:	jb     0x421f6c
  421ef8:	pop    rdi
  421ef9:	je     0x421f64
  421efb:	ins    DWORD PTR es:[rdi],dx
  421efc:	gs jae 0x421f73
  421eff:	(bad)  
  421f00:	ins    DWORD PTR es:[rdi],dx
  421f01:	jo     0x421f62
  421f03:	je     0x421f6e
  421f05:	ins    DWORD PTR es:[rdi],dx
  421f06:	add    BYTE PTR gs:[rax+0x6b],dh
  421f0a:	je     0x421f6b
  421f0c:	fs jne 0x421f81
  421f0f:	(bad)  
  421f10:	je     0x421f7b
  421f12:	outs   dx,DWORD PTR ds:[rsi]
  421f13:	outs   dx,BYTE PTR ds:[rsi]
  421f14:	add    BYTE PTR [rax+0x6b],dh
  421f17:	je     0x421f78
  421f19:	fs jne 0x421f8e
  421f1c:	(bad)  
  421f1d:	je     0x421f88
  421f1f:	outs   dx,DWORD PTR ds:[rsi]
  421f20:	outs   dx,BYTE PTR ds:[rsi]
  421f21:	pop    rdi
  421f22:	je     0x421f8d
  421f24:	ins    DWORD PTR es:[rdi],dx
  421f25:	add    BYTE PTR gs:[rax+0x6b],dh
  421f29:	je     0x421f8a
  421f2b:	jo     0x421f9c
  421f2d:	jae    0x421f2f
  421f2f:	and    eax,0x6b700064
  421f34:	je     0x421f95
  421f36:	jae    0x421fa1
  421f38:	jp     0x421f9f
  421f3a:	add    BYTE PTR [rdi+0x69],dh
  421f3d:	fs je  0x421fa8
  421f40:	add    BYTE PTR [rax+0x65],ch
  421f43:	imul   esp,DWORD PTR [rdi+0x68],0x69700074
  421f4a:	js     0x421fab
  421f4c:	ins    WORD PTR es:[rdi],dx
  421f4e:	je     0x421f50
  421f50:	jae    0x421fb3
  421f52:	ins    DWORD PTR es:[rdi],dx
  421f53:	jo     0x421fc1
  421f55:	gs pop rdi
  421f57:	(bad)  
  421f58:	jae    0x421fca
  421f5a:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x72]
  421f5f:	(bad)  
  421f60:	je     0x421fcb
  421f62:	outs   dx,DWORD PTR ds:[rsi]
  421f63:	add    BYTE PTR [rax+0x69],dh
  421f66:	movsxd esi,DWORD PTR [rdi+rbx*2+0x74]
  421f6a:	jns    0x421fdc
  421f6c:	add    BYTE PTR gs:[rbx+0x6f],ah
  421f70:	fs gs fs pop rdi
  421f74:	jo     0x421fdf
  421f76:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  421f7a:	gs pop rdi
  421f7c:	outs   dx,BYTE PTR ds:[rsi]
  421f7d:	jne    0x421fec
  421f7f:	(bad)  
  421f80:	gs jb  0x421f83
  421f83:	imul   esi,DWORD PTR fs:[rbx+0x70],0x5f79616c
  421f8b:	jo     0x421ff6
  421f8d:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  421f91:	gs pop rdi
  421f93:	outs   dx,BYTE PTR ds:[rsi]
  421f94:	jne    0x422003
  421f96:	(bad)  
  421f97:	gs jb  0x421f9a
  421f9a:	imul   ebp,DWORD PTR [rsi+0x74],0x616c7265
  421fa1:	movsxd esp,DWORD PTR [rbp+0x64]
  421fa4:	pop    rdi
  421fa5:	data16 jb 0x422009
  421fa8:	ins    DWORD PTR es:[rdi],dx
  421fa9:	add    BYTE PTR gs:[rdi+rbp*2+0x70],dh
  421fae:	pop    rdi
  421faf:	imul   sp,WORD PTR [rbp+0x6c],0x5f64
  421fb5:	imul   si,WORD PTR [rdx+0x73],0x74
  421fbb:	jb     0x422022
  421fbd:	jo     0x422024
  421fbf:	(bad)  
  421fc0:	je     0x422021
  421fc2:	jo     0x42202d
  421fc4:	movsxd esi,DWORD PTR [rax+rax*1+0x73]
  421fc8:	(bad)  
  421fc9:	ins    DWORD PTR es:[rdi],dx
  421fca:	jo     0x422038
  421fcc:	gs pop rdi
  421fce:	ins    WORD PTR es:[rdi],dx
  421fd0:	je     0x421fd2
  421fd2:	outs   dx,BYTE PTR ds:[rsi]
  421fd3:	(bad)  
  421fd4:	pop    rdi
  421fd5:	jae    0x422038
  421fd7:	ins    DWORD PTR es:[rdi],dx
  421fd8:	jo     0x422046
  421fda:	gs jae 0x421fdd
  421fdd:	movsxd ebp,DWORD PTR [rax+0x61]
  421fe0:	outs   dx,BYTE PTR ds:[rsi]
  421fe1:	outs   dx,BYTE PTR ds:[rsi]
  421fe2:	gs ins BYTE PTR es:[rdi],dx
  421fe4:	jae    0x421fe6
  421fe6:	movsxd ebp,DWORD PTR [rax+0x61]
  421fe9:	outs   dx,BYTE PTR ds:[rsi]
  421fea:	outs   dx,BYTE PTR ds:[rsi]
  421feb:	gs ins BYTE PTR es:[rdi],dx
  421fed:	pop    rdi
  421fee:	ins    BYTE PTR es:[rdi],dx
  421fef:	(bad)  
  421ff0:	jns    0x422061
  421ff2:	jne    0x422068
  421ff4:	add    BYTE PTR [rbx+0x69],dh
  421ff7:	fs gs pop rdi
  421ffa:	fs (bad) 
  421ffc:	je     0x42205f
  421ffe:	pop    rdi
  421fff:	je     0x42207a
  422001:	jo     0x422068
  422003:	add    BYTE PTR [rbx+0x69],dh
  422006:	fs gs pop rdi
  422009:	fs (bad) 
  42200b:	je     0x42206e
  42200d:	pop    rdi
  42200e:	jae    0x422079
  422010:	jp     0x422077
  422012:	add    BYTE PTR [rax],al
  422014:	add    BYTE PTR [rax],al
  422016:	add    BYTE PTR [rax],al
  422018:	rex.WB outs dx,BYTE PTR ds:[rsi]
  42201a:	jbe    0x42207d
  42201c:	ins    BYTE PTR es:[rdi],dx
  42201d:	imul   esp,DWORD PTR [rax+riz*1+0x6b],0x763d7965
  422025:	(bad)  
  422026:	ins    BYTE PTR es:[rdi],dx
  422027:	jne    0x42208e
  422029:	and    BYTE PTR [rbx+0x74],dh
  42202c:	jb     0x422097
  42202e:	outs   dx,BYTE PTR ds:[rsi]
  42202f:	and    BYTE PTR [ebx+0x6f],ah
  422033:	ins    DWORD PTR es:[rdi],dx
  422034:	(bad)  
  422035:	imul   ebp,DWORD PTR [rsi+0x61],0x6e6f6974
  42203c:	and    BYTE PTR [rip+0x73253d73],ah        # 0x73675db5
  422042:	and    BYTE PTR [rcx+0x6e],ch
  422045:	and    BYTE PTR [rbx+0x65],dh
  422048:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42204c:	outs   dx,BYTE PTR ds:[rsi]
  42204d:	and    BYTE PTR [rip+0x50000a73],ah        # 0x50422ac6
  422053:	jb     0x4220c4
  422055:	movsxd esp,DWORD PTR [rbp+0x73]
  422058:	jae    0x4220c3
  42205a:	outs   dx,BYTE PTR ds:[rsi]
  42205b:	and    BYTE PTR [edx+0x65],dh
  42205f:	(bad)  
  422060:	and    BYTE PTR fs:[rcx+0x6e],ch
  422064:	je     0x4220cb
  422066:	jb     0x4220de
  422068:	(bad)  
  422069:	ins    BYTE PTR es:[rdi],dx
  42206a:	and    BYTE PTR [rax],al
  42206c:	add    BYTE PTR [rax],al
  42206e:	add    BYTE PTR [rax],al
  422070:	rex.XB outs dx,DWORD PTR ds:[rsi]
  422072:	jne    0x4220e0
  422074:	and    BYTE PTR fs:[rsi+0x6f],ch
  422078:	je     0x42209a
  42207a:	jae    0x4220e1
  42207c:	imul   esp,DWORD PTR gs:[rax],0x74
  422080:	outs   dx,DWORD PTR ds:[rsi]
  422081:	and    BYTE PTR [rdx+0x65],dh
  422084:	ins    BYTE PTR es:[rdi],dx
  422085:	(bad)  
  422086:	je     0x4220f1
  422088:	jbe    0x4220ef
  42208a:	and    BYTE PTR [rax+0x6f],dh
  42208d:	jae    0x4220f8
  42208f:	je     0x4220fa
  422091:	outs   dx,DWORD PTR ds:[rsi]
  422092:	outs   dx,BYTE PTR ds:[rsi]
  422093:	and    BYTE PTR [rbx+0x69],dh
  422096:	outs   dx,BYTE PTR ds:[rsi]
  422097:	movsxd esp,DWORD PTR [rbp+0x20]
  42209a:	movsxd esi,DWORD PTR [rbp+0x72]
  42209d:	jb     0x422104
  42209f:	outs   dx,BYTE PTR ds:[rsi]
  4220a0:	je     0x4220c2
  4220a2:	je     0x42210d
  4220a4:	ins    DWORD PTR es:[rdi],dx
  4220a5:	gs jae 0x42211c
  4220a8:	(bad)  
  4220a9:	ins    DWORD PTR es:[rdi],dx
  4220aa:	jo     0x4220cc
  4220ac:	imul   esi,DWORD PTR [rbx+0x20],0x20746f6e
  4220b3:	fs imul bp,WORD PTR gs:[rsi+0x65],0xa64
  4220bb:	add    BYTE PTR [rax],al
  4220bd:	add    BYTE PTR [rax],al
  4220bf:	add    BYTE PTR [rbx+0x65],dl
  4220c2:	imul   ebp,DWORD PTR gs:[rcx+0x6e],0x67
  4220c7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4220cb:	jb     0x422132
  4220cd:	(bad)  
  4220ce:	and    BYTE PTR fs:[rcx+0x6e],ch
  4220d2:	je     0x422139
  4220d4:	jb     0x42214c
  4220d6:	(bad)  
  4220d7:	ins    BYTE PTR es:[rdi],dx
  4220d8:	and    BYTE PTR [rbx+0x74],dh
  4220db:	(bad)  
  4220dc:	jb     0x422152
  4220de:	and    BYTE PTR [rax+0x6f],dh
  4220e1:	imul   ebp,DWORD PTR [rsi+0x74],0xa732520
	...
  4220f0:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4220f2:	jne    0x422160
  4220f4:	and    BYTE PTR fs:[rsi+0x6f],ch
  4220f8:	je     0x42211a
  4220fa:	jae    0x422161
  4220fc:	imul   esp,DWORD PTR gs:[rax],0x74
  422100:	outs   dx,DWORD PTR ds:[rsi]
  422101:	and    BYTE PTR [rax+0x6f],dh
  422104:	jae    0x42216f
  422106:	je     0x422171
  422108:	outs   dx,DWORD PTR ds:[rsi]
  422109:	outs   dx,BYTE PTR ds:[rsi]
  42210a:	and    BYTE PTR [rip+0x3a646c6c],ah        # 0x3aa68d7c
  422110:	and    BYTE PTR [rip+0x63000a73],ah        # 0x63422b89
  422116:	outs   dx,DWORD PTR ds:[rsi]
  422117:	fs movsxd ebx,DWORD PTR gs:[rdi+0x74]
  42211c:	jns    0x42218e
  42211e:	add    BYTE PTR gs:[rsp+rsi*2+0x73],ah
  422123:	add    BYTE PTR [rsp+rsi*2+0x73],ah
  422127:	pop    rdi
  422128:	je     0x422193
  42212a:	ins    DWORD PTR es:[rdi],dx
  42212b:	add    BYTE PTR gs:[rbp+rsi*2+0x72],ah
  422130:	(bad)  
  422131:	je     0x42219c
  422133:	outs   dx,DWORD PTR ds:[rsi]
  422134:	outs   dx,BYTE PTR ds:[rsi]
  422135:	add    BYTE PTR [rbp+rsi*2+0x72],ah
  422139:	(bad)  
  42213a:	je     0x4221a5
  42213c:	outs   dx,DWORD PTR ds:[rsi]
  42213d:	outs   dx,BYTE PTR ds:[rsi]
  42213e:	pop    rdi
  42213f:	je     0x4221aa
  422141:	ins    DWORD PTR es:[rdi],dx
  422142:	add    BYTE PTR gs:[rbx+0x6f],ah
  422146:	outs   dx,BYTE PTR ds:[rsi]
  422147:	jbe    0x4221ae
  422149:	jb     0x4221b2
  42214b:	outs   dx,BYTE PTR gs:[rsi]
  42214d:	movsxd esp,DWORD PTR [rbp+0x5f]
  422150:	fs jne 0x4221c5
  422153:	(bad)  
  422154:	je     0x4221bf
  422156:	outs   dx,DWORD PTR ds:[rsi]
  422157:	outs   dx,BYTE PTR ds:[rsi]
  422158:	add    BYTE PTR [rbx+0x6f],ah
  42215b:	outs   dx,BYTE PTR ds:[rsi]
  42215c:	jbe    0x4221c3
  42215e:	jb     0x4221c7
  422160:	outs   dx,BYTE PTR gs:[rsi]
  422162:	movsxd esp,DWORD PTR [rbp+0x5f]
  422165:	fs jne 0x4221da
  422168:	(bad)  
  422169:	je     0x4221d4
  42216b:	outs   dx,DWORD PTR ds:[rsi]
  42216c:	outs   dx,BYTE PTR ds:[rsi]
  42216d:	pop    rdi
  42216e:	je     0x4221d9
  422170:	ins    DWORD PTR es:[rdi],dx
  422171:	add    BYTE PTR gs:[rbx+0x69],dh
  422175:	jp     0x4221dc
  422177:	add    BYTE PTR [rax+0x6f],dh
  42217a:	jae    0x42217c
  42217c:	data16 ins BYTE PTR es:[rdi],dx
  42217e:	(bad)  
  42217f:	addr32 jae 0x422182
  422182:	and    BYTE PTR [rip+0x643131],ah        # 0xa652b9
  422188:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6d79616c
  422190:	(bad)  
  422191:	je     0x422205
  422193:	imul   edi,DWORD PTR [rax+0x0],0x61746f72
  42219a:	je     0x422205
  42219c:	outs   dx,DWORD PTR ds:[rsi]
  42219d:	outs   dx,BYTE PTR ds:[rsi]
  42219e:	add    BYTE PTR [rcx+riz*2+0x74],ah
  4221a2:	(bad)  
  4221a3:	add    BYTE PTR [rip+0x64003a73],ah        # 0x64425c1c
  4221a9:	(bad)  
  4221aa:	je     0x42220d
  4221ac:	pop    rdi
  4221ad:	push   0x687361
  4221b2:	add    BYTE PTR [rax],al
  4221b4:	add    BYTE PTR [rax],al
  4221b6:	add    BYTE PTR [rax],al
  4221b8:	rex.XB outs dx,DWORD PTR ds:[rsi]
  4221ba:	jne    0x422228
  4221bc:	and    BYTE PTR fs:[rsi+0x6f],ch
  4221c0:	je     0x4221e2
  4221c2:	jb     0x422229
  4221c4:	(bad)  
  4221c5:	and    BYTE PTR fs:[rax+0x61],dh
  4221c9:	movsxd ebp,DWORD PTR [rbx+0x65]
  4221cc:	je     0x422241
  4221ce:	and    BYTE PTR [rcx+0x6e],ch
  4221d1:	and    BYTE PTR [rcx+0x6e],ch
  4221d4:	je     0x42223b
  4221d6:	jb     0x42224e
  4221d8:	(bad)  
  4221d9:	ins    BYTE PTR es:[rdi],dx
  4221da:	and    BYTE PTR [rax],al
  4221dc:	imul   ebp,DWORD PTR [rsi+0x64],0x63007865
  4221e3:	outs   dx,DWORD PTR ds:[rsi]
  4221e4:	fs movsxd ebx,DWORD PTR gs:[rdi+0x6e]
  4221e9:	(bad)  
  4221ea:	ins    DWORD PTR es:[rdi],dx
  4221eb:	add    BYTE PTR gs:[rbx+0x6f],ah
  4221ef:	fs movsxd ebx,DWORD PTR gs:[rdi+0x6c]
  4221f4:	outs   dx,DWORD PTR ds:[rsi]
  4221f5:	outs   dx,BYTE PTR ds:[rsi]
  4221f6:	addr32 pop rdi
  4221f8:	outs   dx,BYTE PTR ds:[rsi]
  4221f9:	(bad)  
  4221fa:	ins    DWORD PTR es:[rdi],dx
  4221fb:	add    BYTE PTR gs:[rax+0x72],dh
  4221ff:	outs   dx,DWORD PTR ds:[rsi]
  422200:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x6f63
  422207:	fs movsxd ebx,DWORD PTR gs:[rdi+0x74]
  42220c:	imul   ebp,DWORD PTR [rbp+0x65],0x7361625f
  422213:	add    BYTE PTR gs:[rbx+0x6f],ah
  422217:	fs movsxd ebx,DWORD PTR gs:[rdi+0x74]
  42221c:	(bad)  
  42221d:	addr32 pop rdi
  42221f:	jae    0x422295
  422221:	jb     0x42228c
  422223:	outs   dx,BYTE PTR ds:[rsi]
  422224:	add    BYTE PTR [eax],dh
  422227:	js     0x42224e
  422229:	xor    BYTE PTR [rax+rdi*2],dh
  42222c:	add    BYTE PTR [rbx+0x6f],ah
  42222f:	fs movsxd ebx,DWORD PTR gs:[rdi+0x74]
  422234:	(bad)  
  422235:	add    BYTE PTR [ebx+0x6f],ah
  422239:	fs gs fs pop rdi
  42223d:	ja     0x4222a8
  42223f:	fs je  0x4222aa
  422242:	add    BYTE PTR [rbx+0x6f],ah
  422245:	fs gs fs pop rdi
  422249:	push   0x68676965
  42224e:	je     0x422250
  422250:	push   0x625f7361
  422255:	pop    rdi
  422256:	data16 jb 0x4222ba
  422259:	ins    DWORD PTR es:[rdi],dx
  42225a:	gs jae 0x42225d
  42225d:	imul   esi,DWORD PTR fs:[rbx+0x70],0x5f79616c
  422265:	(bad)  
  422266:	jae    0x4222d8
  422268:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x72]
  42226d:	(bad)  
  42226e:	je     0x4222d9
  422270:	outs   dx,DWORD PTR ds:[rsi]
  422271:	add    BYTE PTR [rbp+riz*2+0x76],ch
  422275:	gs ins BYTE PTR es:[rdi],dx
  422277:	add    BYTE PTR [rbx+0x6f],ah
  42227a:	ins    BYTE PTR es:[rdi],dx
  42227b:	outs   dx,DWORD PTR ds:[rsi]
  42227c:	jb     0x4222dd
  42227e:	jb     0x4222e1
  422280:	outs   dx,BYTE PTR ds:[rsi]
  422281:	add    BYTE PTR gs:[ebx+0x6f],ah
  422286:	ins    BYTE PTR es:[rdi],dx
  422287:	outs   dx,DWORD PTR ds:[rsi]
  422288:	jb     0x4222e9
  42228a:	jae    0x4222fc
  42228c:	(bad)  
  42228d:	movsxd esp,DWORD PTR [rbp+0x0]
  422290:	movsxd ebp,DWORD PTR [rdi+0x6c]
  422293:	outs   dx,DWORD PTR ds:[rsi]
  422294:	jb     0x4222f5
  422296:	je     0x42230a
  422298:	(bad)  
  422299:	outs   dx,BYTE PTR ds:[rsi]
  42229a:	jae    0x422302
  42229c:	gs jb  0x42229f
  42229f:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4222a2:	outs   dx,DWORD PTR ds:[rsi]
  4222a3:	jb     0x422304
  4222a5:	jo     0x422319
  4222a7:	imul   ebp,DWORD PTR [rbp+0x61],0x73656972
  4222ae:	add    BYTE PTR [rbx+0x68],ah
  4222b1:	jb     0x422322
  4222b3:	ins    DWORD PTR es:[rdi],dx
  4222b4:	(bad)  
  4222b5:	pop    rdi
  4222b6:	ins    BYTE PTR es:[rdi],dx
  4222b7:	outs   dx,DWORD PTR ds:[rsi]
  4222b8:	movsxd esp,DWORD PTR [rcx+0x74]
  4222bb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d697400
  4222c2:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  4222c6:	add    BYTE PTR gs:[rdx+0x65],dh
  4222ca:	data16 jae 0x4222cd
  4222cd:	jae    0x422330
  4222cf:	ins    DWORD PTR es:[rdi],dx
  4222d0:	jo     0x42233e
  4222d2:	gs pop rdi
  4222d4:	jb     0x422337
  4222d6:	je     0x42233d
  4222d8:	add    BYTE PTR [rdx+0x69],ah
  4222db:	je     0x422350
  4222dd:	pop    rdi
  4222de:	jo     0x422345
  4222e0:	jb     0x422341
  4222e2:	jae    0x422345
  4222e4:	ins    DWORD PTR es:[rdi],dx
  4222e5:	jo     0x422353
  4222e7:	add    BYTE PTR gs:[rax],dh
  4222ea:	js     0x422311
  4222ec:	js     0x4222ee
  4222ee:	imul   esp,DWORD PTR [rax+rax*1+0x72],0x6172665f
  4222f6:	ins    DWORD PTR es:[rdi],dx
  4222f7:	gs pop rdi
  4222f9:	jb     0x42235c
  4222fb:	je     0x422362
  4222fd:	add    BYTE PTR [rcx+0x76],ah
  422300:	addr32 pop rdi
  422302:	data16 jb 0x422366
  422305:	ins    DWORD PTR es:[rdi],dx
  422306:	gs pop rdi
  422308:	jb     0x42236b
  42230a:	je     0x422371
  42230c:	add    BYTE PTR [rbx+0x74],dh
  42230f:	(bad)  
  422310:	jb     0x422386
  422312:	pop    rdi
  422313:	jo     0x422389
  422315:	jae    0x422317
  422317:	jae    0x42238d
  422319:	(bad)  
  42231a:	jb     0x422390
  42231c:	pop    rdi
  42231d:	je     0x422388
  42231f:	ins    DWORD PTR es:[rdi],dx
  422320:	add    BYTE PTR gs:[rbp+rsi*2+0x72],ah
  422325:	(bad)  
  422326:	je     0x422391
  422328:	outs   dx,DWORD PTR ds:[rsi]
  422329:	outs   dx,BYTE PTR ds:[rsi]
  42232a:	pop    rdi
  42232b:	je     0x4223a0
  42232d:	add    BYTE PTR [rdx+0x69],ah
  422330:	je     0x422391
  422332:	jb     0x422395
  422334:	je     0x42239b
  422336:	add    BYTE PTR [rbp+0x61],ch
  422339:	js     0x42239a
  42233b:	(bad)  
  42233c:	imul   esi,DWORD PTR [rdi+rbx*2+0x72],0x657461
  422344:	(bad)  
  422345:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x5f726570
  42234d:	jb     0x4223b0
  42234f:	ja     0x4223b0
  422351:	jae    0x4223b4
  422353:	ins    DWORD PTR es:[rdi],dx
  422354:	jo     0x4223c2
  422356:	add    BYTE PTR gs:[rsi+0x62],ch
  42235a:	pop    rdi
  42235b:	data16 jb 0x4223bf
  42235e:	ins    DWORD PTR es:[rdi],dx
  42235f:	gs jae 0x422362
  422362:	and    eax,0x756c6c
  422367:	outs   dx,BYTE PTR ds:[rsi]
  422368:	(bad)  
  422369:	pop    rdi
  42236a:	jb     0x4223d1
  42236c:	(bad)  
  42236d:	fs pop rdi
  42236f:	data16 jb 0x4223d3
  422372:	ins    DWORD PTR es:[rdi],dx
  422373:	gs jae 0x422376
  422376:	outs   dx,BYTE PTR ds:[rsi]
  422377:	(bad)  
  422378:	pop    rdi
  422379:	jb     0x4223e0
  42237b:	(bad)  
  42237c:	fs pop rdi
  42237e:	jo     0x4223e1
  422380:	movsxd ebp,DWORD PTR [rbx+0x65]
  422383:	je     0x4223f8
  422385:	add    BYTE PTR [rbp+0x78],ah
  422388:	je     0x4223fc
  42238a:	(bad)  
  42238b:	fs (bad) 
  42238d:	je     0x4223f0
  42238f:	add    BYTE PTR [rbp+0x78],ah
  422392:	je     0x422406
  422394:	(bad)  
  422395:	fs (bad) 
  422397:	je     0x4223fa
  422399:	pop    rdi
  42239a:	push   0x687361
  42239f:	fs jne 0x422404
  4223a2:	add    BYTE PTR [rdi+0x72],ch
  4223a5:	imul   esp,DWORD PTR [rdi+0x69],0x6c616e
  4223ac:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4223af:	ins    DWORD PTR es:[rdi],dx
  4223b0:	outs   dx,BYTE PTR gs:[rsi]
  4223b2:	je     0x4223b4
  4223b4:	ins    BYTE PTR es:[rdi],dx
  4223b5:	jns    0x422429
  4223b7:	imul   esp,DWORD PTR [rbx+0x73],0x72616b00
  4223be:	(bad)  
  4223bf:	outs   dx,DWORD PTR ds:[rsi]
  4223c0:	imul   esp,DWORD PTR [rbp+0x0],0x66
  4223c4:	outs   dx,DWORD PTR ds:[rsi]
  4223c5:	jb     0x42242a
  4223c7:	gs add BYTE PTR fs:[rax+0x65],ch
  4223cc:	(bad)  
  4223cd:	jb     0x422438
  4223cf:	outs   dx,BYTE PTR ds:[rsi]
  4223d0:	addr32 pop rdi
  4223d2:	imul   ebp,DWORD PTR [rbp+0x70],0x65726961
  4223d9:	add    BYTE PTR fs:[rsi+0x69],dh
  4223dd:	jae    0x422454
  4223df:	(bad)  
  4223e0:	ins    BYTE PTR es:[rdi],dx
  4223e1:	pop    rdi
  4223e2:	imul   ebp,DWORD PTR [rbp+0x70],0x65726961
  4223e9:	add    BYTE PTR fs:[rbx+0x6c],ah
  4223ed:	gs (bad) 
  4223ef:	outs   dx,BYTE PTR ds:[rsi]
  4223f0:	pop    rdi
  4223f1:	gs data16 movsxd si,DWORD PTR gs:[rbx+rsi*2+0x0]
  4223f9:	(bad)  
  4223fa:	je     0x422470
  4223fc:	(bad)  
  4223fd:	movsxd ebp,DWORD PTR [rax+0x65]
  422400:	fs pop rdi
  422402:	jo     0x42246d
  422404:	movsxd eax,DWORD PTR [rax]
  422406:	add    BYTE PTR [rax],al
  422408:	push   rbx
  422409:	imul   ebp,DWORD PTR [rbp+0x70],0x6d20656c
  422410:	jne    0x42247e
  422412:	je     0x42247d
  422414:	ins    DWORD PTR es:[rdi],dx
  422415:	gs imul esp,DWORD PTR fs:[rcx+0x20],0x65727473
  42241e:	(bad)  
  42241f:	ins    DWORD PTR es:[rdi],dx
  422420:	jae    0x422442
  422422:	(bad)  
  422423:	outs   dx,BYTE PTR ds:[rsi]
  422424:	(bad)  
  422425:	ins    BYTE PTR es:[rdi],dx
  422426:	jns    0x4224a2
  422428:	gs jb  0x422435
  42242b:	add    BYTE PTR [rax],al
  42242d:	add    BYTE PTR [rax],al
  42242f:	add    BYTE PTR [rbp+0x73],dh
  422432:	(bad)  
  422433:	cmp    ah,BYTE PTR gs:[eax]
  422437:	and    eax,0x4f5b2073
  42243c:	push   rax
  42243d:	push   rsp
  42243e:	rex.WB
  42243f:	rex.WRXB
  422440:	rex.WRX push rbx
  422442:	pop    rbp
  422443:	and    BYTE PTR [rbx+0x49],bl
  422446:	rex.WRX push rax
  422448:	push   rbp
  422449:	push   rsp
  42244a:	pop    rdi
  42244b:	rex.RX
  42244c:	rex.WB
  42244d:	rex.WR
  42244e:	rex.RB pop r13
  422450:	or     al,BYTE PTR [rax]
  422452:	rex.WRB (bad) 
  422454:	imul   ebp,DWORD PTR [rsi+0x20],0x6974706f
  42245b:	outs   dx,DWORD PTR ds:[rsi]
  42245c:	outs   dx,BYTE PTR ds:[rsi]
  42245d:	jae    0x422499
  42245f:	add    BYTE PTR [rip+0x65746962],ch        # 0x65b68dc7
  422465:	js     0x4224c8
  422467:	movsxd esi,DWORD PTR [rax+riz*1+0x61]
  42246b:	outs   dx,BYTE PTR ds:[rsi]
  42246c:	and    BYTE PTR fs:[rip+0x776f6873],ch        # 0x77b18ce6
  422473:	pop    rdi
  422474:	jo     0x4224e8
  422476:	outs   dx,DWORD PTR ds:[rsi]
  422477:	addr32 jb 0x4224db
  42247a:	ins    DWORD PTR es:[rdi],dx
  42247b:	pop    rdi
  42247c:	jbe    0x4224e3
  42247e:	jb     0x4224f3
  422480:	imul   ebp,DWORD PTR [rdi+0x6e],0x20726f20
  422487:	sub    eax,0x776f6873
  42248c:	pop    rdi
  42248d:	ins    BYTE PTR es:[rdi],dx
  42248e:	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
  422495:	jbe    0x4224fc
  422497:	jb     0x42250c
  422499:	imul   ebp,DWORD PTR [rdi+0x6e],0x706f2073
  4224a0:	je     0x42250b
  4224a2:	outs   dx,DWORD PTR ds:[rsi]
  4224a3:	outs   dx,BYTE PTR ds:[rsi]
  4224a4:	jae    0x4224c6
  4224a6:	(bad)  
  4224a7:	jb     0x42250e
  4224a9:	and    BYTE PTR [rcx+0x6e],ch
  4224ac:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4224af:	jo     0x422512
  4224b1:	je     0x42251c
  4224b3:	(bad)  
  4224b4:	ins    BYTE PTR es:[rdi],dx
  4224b5:	or     al,BYTE PTR gs:[rax]
  4224b8:	push   rbp
  4224b9:	outs   dx,BYTE PTR ds:[rsi]
  4224ba:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4224be:	outs   dx,BYTE PTR ds:[rsi]
  4224bf:	and    BYTE PTR [rax+0x61],ch
  4224c2:	jae    0x42252c
  4224c4:	and    BYTE PTR [rcx+0x6c],ah
  4224c7:	outs   dx,DWORD PTR ds:[esi]
  4224c9:	jb     0x422534
  4224cb:	je     0x422535
  4224cd:	ins    DWORD PTR es:[rdi],dx
  4224ce:	and    BYTE PTR [rdi],ah
  4224d0:	and    eax,0x4b0a2773
  4224d5:	outs   dx,BYTE PTR ds:[rsi]
  4224d6:	outs   dx,DWORD PTR ds:[rsi]
  4224d7:	ja     0x422547
  4224d9:	and    BYTE PTR [rcx+0x6c],ah
  4224dc:	outs   dx,DWORD PTR ds:[esi]
  4224de:	jb     0x422549
  4224e0:	je     0x42254a
  4224e2:	ins    DWORD PTR es:[rdi],dx
  4224e3:	jae    0x42251f
  4224e5:	add    BYTE PTR [rax],ah
  4224e7:	and    eax,0x696c0073
  4224ec:	(bad)
  4224f1:	imul   ebp,DWORD PTR [rax+rax*1+0x6e],0x656d61
  4224f9:	ins    DWORD PTR es:[rdi],dx
  4224fa:	(bad)  
  4224fb:	push   0x6f
  4224fd:	jb     0x4224ff
  4224ff:	ins    DWORD PTR es:[rdi],dx
  422500:	imul   ebp,DWORD PTR [rsi+0x6f],0x696d0072
  422507:	movsxd esi,DWORD PTR [rdx+0x6f]
  42250a:	add    BYTE PTR [rcx+riz*2+0x76],cl
  42250e:	jne    0x422545
  422510:	xor    al,0x2e
  422512:	xor    esi,DWORD PTR [rcx]
  422514:	xor    DWORD PTR cs:[rax],esi
  422517:	xor    BYTE PTR [rax],al
  422519:	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x696c0074
  422521:	(bad)
  422526:	fs movsxd eax,DWORD PTR gs:[rax]
  42252a:	rex.WR (bad) 
  42252c:	jbe    0x422591
  42252e:	xor    eax,0x30362e36
  422533:	xor    DWORD PTR cs:[rax],esi
  422536:	xor    BYTE PTR [rax],al
  422538:	ins    BYTE PTR es:[rdi],dx
  422539:	imul   esp,DWORD PTR [rdx+0x61],0x726f6676
  422540:	ins    DWORD PTR es:[rdi],dx
  422541:	(bad)  
  422542:	je     0x422544
  422544:	rex.WR (bad) 
  422546:	jbe    0x4225ae
  422548:	xor    eax,0x30342e36
  42254d:	xor    DWORD PTR cs:[rax],esi
  422550:	xor    DWORD PTR [rax],eax
  422552:	ins    BYTE PTR es:[rdi],dx
  422553:	imul   esp,DWORD PTR [rdx+0x61],0x76656476
  42255a:	imul   esp,DWORD PTR [rbx+0x65],0x76614c00
  422561:	fs xor eax,0x2e342e36
  422567:	xor    DWORD PTR [rax],esi
  422569:	xor    BYTE PTR [rax],al
  42256b:	ins    BYTE PTR es:[rdi],dx
  42256c:	imul   esp,DWORD PTR [rdx+0x61],0x6c696676
  422573:	je     0x4225da
  422575:	jb     0x422577
  422577:	rex.WR (bad) 
  422579:	jbe    0x4225e1
  42257b:	imul   esi,DWORD PTR [rip+0x2e30342e],0x313031        # 0x2e7259b3
  422585:	ins    BYTE PTR es:[rdi],dx
  422586:	imul   esp,DWORD PTR [rdx+0x73],0x61637377
  42258d:	ins    BYTE PTR es:[rdi],dx
  42258e:	add    BYTE PTR gs:[rbx+0x77],dl
  422592:	push   rbx
  422593:	xor    ebp,DWORD PTR [rsi]
  422595:	xor    DWORD PTR [rsi],ebp
  422597:	xor    DWORD PTR [rax],esi
  422599:	xor    DWORD PTR [rax],eax
  42259b:	ins    BYTE PTR es:[rdi],dx
  42259c:	imul   esp,DWORD PTR [rdx+0x73],0x73657277
  4225a3:	(bad)  
  4225a4:	ins    DWORD PTR es:[rdi],dx
  4225a5:	jo     0x422613
  4225a7:	add    BYTE PTR gs:[rbx+0x77],dl
  4225ab:	push   rdx
  4225ac:	xor    DWORD PTR [rsi],ebp
  4225ae:	xor    ch,BYTE PTR [rsi]
  4225b0:	xor    DWORD PTR [rax],esi
  4225b2:	xor    DWORD PTR [rax],eax
  4225b4:	ins    BYTE PTR es:[rdi],dx
  4225b5:	imul   esp,DWORD PTR [rdx+0x70],0x7074736f
  4225bc:	jb     0x42262d
  4225be:	movsxd eax,DWORD PTR [rax]
  4225c0:	jo     0x422631
  4225c2:	jae    0x422638
  4225c4:	jo     0x422638
  4225c6:	outs   dx,DWORD PTR ds:[rsi]
  4225c7:	movsxd esi,DWORD PTR [rip+0x2e332e33]        # 0x2e755400
  4225cd:	xor    DWORD PTR [rax],esi
  4225cf:	xor    BYTE PTR [rax],al
  4225d1:	outs   dx,BYTE PTR ds:[rsi]
  4225d2:	(bad)  
  4225d3:	pop    rdi
  4225d4:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4225d7:	jo     0x422648
  4225d9:	outs   dx,BYTE PTR ds:[rsi]
  4225da:	outs   dx,BYTE PTR gs:[rsi]
  4225dc:	je     0x422651
  4225de:	add    BYTE PTR [rdi+rbp*2+0x67],ch
  4225e2:	xor    bl,BYTE PTR [rdi+0x63]
  4225e5:	push   0x616d6f72
  4225ea:	pop    rdi
  4225eb:	ja     0x4225ed
  4225ed:	ins    BYTE PTR es:[rdi],dx
  4225ee:	outs   dx,DWORD PTR ds:[rsi]
  4225ef:	xor    bl,BYTE PTR [edi+0x63]
  4225f3:	push   0x616d6f72
  4225f8:	pop    rdi
  4225f9:	push   0x74696200
  4225fe:	jae    0x42265f
  422600:	jo     0x422667
  422602:	jb     0x422663
  422604:	jo     0x42266f
  422606:	js     0x42266d
  422608:	ins    BYTE PTR es:[rdi],dx
  422609:	add    BYTE PTR [rdx+0x69],ah
  42260c:	addr32 pop rdi
  42260e:	outs   dx,BYTE PTR gs:[rsi]
  422610:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x6c617000
  422618:	gs je  0x42268f
  42261b:	add    BYTE PTR gs:[rdx+0x69],ah
  42261f:	je     0x422694
  422621:	je     0x422695
  422623:	gs (bad) 
  422625:	ins    DWORD PTR es:[rdi],dx
  422626:	add    BYTE PTR [rax+0x77],ch
  422629:	(bad)  
  42262a:	movsxd esp,DWORD PTR [rbx+0x65]
  42262d:	ins    BYTE PTR es:[rdi],dx
  42262e:	add    BYTE PTR [rax+0x6c],dh
  422631:	(bad)  
  422632:	outs   dx,BYTE PTR ds:[rsi]
  422633:	(bad)  
  422634:	jb     0x422636
  422636:	jb     0x42269f
  422638:	(bad)  
  422639:	add    BYTE PTR [rax+0x73],dh
  42263c:	gs jne 0x4226a3
  42263f:	outs   dx,DWORD PTR ds:[rsi]
  422640:	jo     0x4226a3
  422642:	ins    BYTE PTR es:[rdi],dx
  422643:	add    BYTE PTR [rcx+0x6c],ah
  422646:	jo     0x4226b0
  422648:	(bad)  
  422649:	add    BYTE PTR [rdx+0x69],ah
  42264c:	je     0x4226ad
  42264e:	fs gs jo 0x4226c6
  422652:	push   0x0
  422657:	add    BYTE PTR [rcx+0x6f],bl
  42265a:	jne    0x42267c
  42265c:	push   0x20657661
  422661:	je     0x4226d2
  422663:	and    BYTE PTR [rbx+0x70],dh
  422666:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42266a:	jns    0x42268c
  42266c:	outs   dx,DWORD PTR ds:[rsi]
  42266d:	outs   dx,BYTE PTR ds:[rsi]
  42266e:	and    BYTE PTR gs:[rcx+0x6e],ch
  422672:	jo     0x4226e9
  422674:	je     0x422696
  422676:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0xa
  42267d:	add    BYTE PTR [rax],al
  42267f:	add    BYTE PTR [rbp+0x73],dl
  422682:	and    BYTE PTR gs:[rip+0x6f742068],ch        # 0x6fb646f1
  422689:	and    BYTE PTR [rdi+0x65],ah
  42268c:	je     0x4226ae
  42268e:	data16 jne 0x4226fd
  422691:	ins    BYTE PTR es:[rdi],dx
  422692:	and    BYTE PTR [rax+0x65],ch
  422695:	ins    BYTE PTR es:[rdi],dx
  422696:	jo     0x4226b8
  422698:	outs   dx,DWORD PTR ds:[rsi]
  422699:	jb     0x4226c7
  42269b:	and    BYTE PTR [rbp+0x76],ah
  42269e:	outs   dx,BYTE PTR gs:[rsi]
  4226a0:	and    BYTE PTR [rdx+0x65],ah
  4226a3:	je     0x422719
  4226a5:	gs jb  0x4226d4
  4226a8:	and    BYTE PTR [rdx+0x75],dh
  4226ab:	outs   dx,BYTE PTR ds:[rsi]
  4226ac:	and    BYTE PTR [rdi],ah
  4226ae:	ins    DWORD PTR es:[rdi],dx
  4226af:	(bad)  
  4226b0:	outs   dx,BYTE PTR ds:[rsi]
  4226b1:	and    BYTE PTR [rip+0xa2e2773],ah        # 0xa704e2a
  4226b7:	add    BYTE PTR [rbx+0x63],dh
  4226ba:	(bad)  
  4226bb:	outs   dx,BYTE PTR ds:[rsi]
  4226bc:	pop    rdi
  4226bd:	(bad)  
  4226be:	ins    BYTE PTR es:[rdi],dx
  4226bf:	ins    BYTE PTR es:[rdi],dx
  4226c0:	pop    rdi
  4226c1:	jo     0x422730
  4226c3:	je     0x422738
  4226c5:	add    BYTE PTR [rcx],dh
  4226c7:	add    BYTE PTR [rdi+0x70],cl
  4226ca:	je     0x422735
  4226cc:	outs   dx,DWORD PTR ds:[rsi]
  4226cd:	outs   dx,BYTE PTR ds:[rsi]
  4226ce:	and    BYTE PTR [rip+0x6f6e2073],ah        # 0x6fb04747
  4226d4:	je     0x4226f6
  4226d6:	outs   dx,WORD PTR ds:[rsi]
  4226d8:	jne    0x422748
  4226da:	fs or  al,BYTE PTR cs:[rax]
  4226de:	add    BYTE PTR [rax],al
  4226e0:	rex.RX (bad) 
  4226e2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  4226ea:	jo     0x42275e
  4226ec:	outs   dx,DWORD PTR ds:[rsi]
  4226ed:	(bad)  
  4226ee:	and    BYTE PTR gs:[rbx+0x6f],ah
  4226f2:	fs movsxd esp,DWORD PTR gs:[rax]
  4226f6:	outs   dx,WORD PTR ds:[rsi]
  4226f8:	jb     0x42271a
  4226fa:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  422701:	je     0x422775
  422703:	gs (bad) 
  422705:	ins    DWORD PTR es:[rdi],dx
  422706:	and    BYTE PTR [rip+0xa64],ah        # 0x423170
  42270c:	add    BYTE PTR [rax],al
  42270e:	add    BYTE PTR [rax],al
  422710:	push   rbp
  422711:	outs   dx,BYTE PTR ds:[rsi]
  422712:	jae    0x422789
  422714:	jo     0x422786
  422716:	outs   dx,DWORD PTR ds:[rsi]
  422717:	jb     0x42278d
  422719:	gs and BYTE PTR fs:[rbx+0x6f],ah
  42271e:	fs movsxd esp,DWORD PTR gs:[rax]
  422722:	ja     0x42278d
  422724:	je     0x42278e
  422726:	and    BYTE PTR [rcx+0x64],ch
  422729:	and    BYTE PTR [rip+0x6f662064],ah        # 0x6fa84793
  42272f:	jb     0x422751
  422731:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  422738:	je     0x4227ac
  42273a:	gs (bad) 
  42273c:	ins    DWORD PTR es:[rdi],dx
  42273d:	and    BYTE PTR [rip+0xa64],ah        # 0x4231a7
  422743:	add    BYTE PTR [rax],al
  422745:	add    BYTE PTR [rax],al
  422747:	add    BYTE PTR [rbx+0x6f],al
  42274a:	jne    0x4227b8
  42274c:	and    BYTE PTR fs:[rsi+0x6f],ch
  422750:	je     0x422772
  422752:	outs   dx,DWORD PTR ds:[rsi]
  422753:	jo     0x4227ba
  422755:	outs   dx,BYTE PTR ds:[rsi]
  422756:	and    BYTE PTR [rbx+0x6f],ah
  422759:	fs movsxd esp,DWORD PTR gs:[rax]
  42275d:	outs   dx,WORD PTR ds:[rsi]
  42275f:	jb     0x422781
  422761:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  422768:	je     0x4227dc
  42276a:	gs (bad) 
  42276c:	ins    DWORD PTR es:[rdi],dx
  42276d:	and    BYTE PTR [rip+0xa64],ah        # 0x4231d7
  422773:	add    BYTE PTR [rax],al
  422775:	add    BYTE PTR [rax],al
  422777:	add    BYTE PTR [rdi+0x70],cl
  42277a:	je     0x4227e5
  42277c:	outs   dx,DWORD PTR ds:[rsi]
  42277d:	outs   dx,BYTE PTR ds:[rsi]
  42277e:	and    BYTE PTR [rip+0x6f662073],ah        # 0x6fa847f7
  422784:	jb     0x4227a6
  422786:	imul   ebp,DWORD PTR [rsi+0x70],0x73207475
  42278d:	je     0x422801
  42278f:	gs (bad) 
  422791:	ins    DWORD PTR es:[rdi],dx
  422792:	and    BYTE PTR [rip+0x6f6e2064],ah        # 0x6fb047fc
  422798:	je     0x4227ba
  42279a:	outs   dx,WORD PTR ds:[rsi]
  42279c:	jne    0x42280c
  42279e:	or     al,BYTE PTR fs:[rax]
  4227a1:	jo     0x422815
  4227a3:	outs   dx,DWORD PTR ds:[rsi]
  4227a4:	addr32 jb 0x422808
  4227a7:	ins    DWORD PTR es:[rdi],dx
  4227a8:	pop    rdi
  4227a9:	imul   esp,DWORD PTR [rax+rax*1+0x70],0x72676f72
  4227b1:	(bad)  
  4227b2:	ins    DWORD PTR es:[rdi],dx
  4227b3:	pop    rdi
  4227b4:	outs   dx,BYTE PTR ds:[rsi]
  4227b5:	jne    0x422824
  4227b7:	add    BYTE PTR [rsi+0x62],ch
  4227ba:	pop    rdi
  4227bb:	jae    0x422831
  4227bd:	jb     0x422824
  4227bf:	(bad)  
  4227c0:	ins    DWORD PTR es:[rdi],dx
  4227c1:	jae    0x4227c3
  4227c3:	jo     0x422832
  4227c5:	je     0x422826
  4227c7:	jo     0x422832
  4227c9:	add    BYTE PTR fs:[rax+0x63],dh
  4227cd:	jb     0x42282e
  4227cf:	jo     0x42283a
  4227d1:	add    BYTE PTR fs:[rbp+0x6e],ah
  4227d5:	fs pop rdi
  4227d7:	jo     0x42284d
  4227d9:	jae    0x4227db
  4227db:	outs   dx,BYTE PTR gs:[rsi]
  4227dd:	fs pop rdi
  4227df:	je     0x42284a
  4227e1:	ins    DWORD PTR es:[rdi],dx
  4227e2:	add    BYTE PTR gs:[rbx+0x74],dh
  4227e6:	(bad)  
  4227e7:	jb     0x42285d
  4227e9:	add    BYTE PTR [rbp+0x6e],ah
  4227ec:	add    BYTE PTR fs:[rsi+0x69],ah
  4227f0:	ins    BYTE PTR es:[rdi],dx
  4227f1:	outs   dx,BYTE PTR gs:[rsi]
  4227f3:	(bad)  
  4227f4:	ins    DWORD PTR es:[rdi],dx
  4227f5:	add    BYTE PTR gs:[rsi+0x62],ch
  4227f9:	pop    rdi
  4227fa:	jo     0x42286e
  4227fc:	outs   dx,DWORD PTR ds:[rsi]
  4227fd:	addr32 jb 0x422861
  422800:	ins    DWORD PTR es:[rdi],dx
  422801:	jae    0x422803
  422803:	outs   dx,WORD PTR ds:[rsi]
  422805:	jb     0x422874
  422807:	(bad)  
  422808:	je     0x422869
  42280a:	outs   dx,BYTE PTR ds:[rsi]
  42280b:	(bad)  
  42280c:	ins    DWORD PTR es:[rdi],dx
  42280d:	add    BYTE PTR gs:[rsi+0x6f],ah
  422811:	jb     0x422880
  422813:	(bad)  
  422814:	je     0x422875
  422816:	ins    BYTE PTR es:[rdi],dx
  422817:	outs   dx,DWORD PTR ds:[rsi]
  422818:	outs   dx,BYTE PTR ds:[rsi]
  422819:	addr32 pop rdi
  42281b:	outs   dx,BYTE PTR ds:[rsi]
  42281c:	(bad)  
  42281d:	ins    DWORD PTR es:[rdi],dx
  42281e:	add    BYTE PTR gs:[rax+0x72],dh
  422822:	outs   dx,DWORD PTR ds:[rsi]
  422823:	(bad)  
  422824:	gs pop rdi
  422826:	jae    0x42288b
  422828:	outs   dx,DWORD PTR ds:[rsi]
  422829:	jb     0x422890
  42282b:	add    BYTE PTR [rbx+0x6f],ah
  42282e:	fs add BYTE PTR gs:[rbx+0x74],dh
  422833:	jb     0x42289e
  422835:	outs   dx,BYTE PTR ds:[rsi]
  422836:	add    BYTE PTR [ebp+0x6e],dl
  42283a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42283e:	outs   dx,BYTE PTR ds:[rsi]
  42283f:	and    BYTE PTR [rdi+0x75],ch
  422842:	je     0x4228b4
  422844:	jne    0x4228ba
  422846:	and    BYTE PTR [rsi+0x6f],ah
  422849:	jb     0x4228b8
  42284b:	(bad)  
  42284c:	je     0x42286e
  42284e:	ja     0x4228b9
  422850:	je     0x4228ba
  422852:	and    BYTE PTR [rsi+0x61],ch
  422855:	ins    DWORD PTR es:[rdi],dx
  422856:	and    BYTE PTR gs:[rdi],ah
  422859:	and    eax,0xa2773
  42285e:	and    bl,BYTE PTR [rdx+riz*2+0x66]
  422862:	outs   dx,BYTE PTR ds:[rsi]
  422863:	jb     0x4228d9
  422865:	add    BYTE PTR [rdx],ah
  422867:	pop    rsp
  422868:	or     BYTE PTR [rdx+rcx*1],cl
  42286b:	or     eax,0x4c0009
  422870:	jae    0x4228da
  422872:	outs   dx,DWORD PTR ds:[rsi]
  422873:	ja     0x422895
  422875:	ins    BYTE PTR es:[rdi],dx
  422876:	imul   esp,DWORD PTR [rbx+0x65],0x65736e
  42287d:	push   0x6f687300
  422882:	ja     0x4228a4
  422884:	push   0x706c65
  422889:	je     0x4228fa
  42288b:	jo     0x4228f6
  42288d:	movsxd eax,DWORD PTR [rax]
  42288f:	(bad)  
  422890:	add    BYTE PTR [rax+0x65],ch
  422893:	ins    BYTE PTR es:[rdi],dx
  422894:	jo     0x422896
  422896:	sub    eax,0x706c6568
  42289b:	add    BYTE PTR [rbx+0x68],dh
  42289e:	outs   dx,DWORD PTR ds:[rsi]
  42289f:	ja     0x4228c1
  4228a1:	jbe    0x422908
  4228a3:	jb     0x422918
  4228a5:	imul   ebp,DWORD PTR [rdi+0x6e],0x69756200
  4228ac:	ins    BYTE PTR es:[rdi],dx
  4228ad:	movsxd ebp,DWORD PTR fs:[rdi+0x6e]
  4228b1:	data16 add BYTE PTR [rbx+0x68],dh
  4228b5:	outs   dx,DWORD PTR ds:[rsi]
  4228b6:	ja     0x4228d8
  4228b8:	(bad)  
  4228b9:	jne    0x422924
  4228bb:	ins    BYTE PTR es:[rdi],dx
  4228bc:	and    BYTE PTR fs:[rbx+0x6f],ah
  4228c0:	outs   dx,BYTE PTR ds:[rsi]
  4228c1:	imul   sp,WORD PTR [rdi+0x75],0x6172
  4228c7:	je     0x422932
  4228c9:	outs   dx,DWORD PTR ds:[rsi]
  4228ca:	outs   dx,BYTE PTR ds:[rsi]
  4228cb:	add    BYTE PTR [rsi+0x6f],ah
  4228ce:	jb     0x42293d
  4228d0:	(bad)  
  4228d1:	je     0x422946
  4228d3:	add    BYTE PTR [rbx+0x68],dh
  4228d6:	outs   dx,DWORD PTR ds:[rsi]
  4228d7:	ja     0x4228f9
  4228d9:	(bad)  
  4228da:	jbe    0x42293d
  4228dc:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6620656c
  4228e4:	outs   dx,DWORD PTR ds:[rsi]
  4228e5:	jb     0x422954
  4228e7:	(bad)  
  4228e8:	je     0x42295d
  4228ea:	add    BYTE PTR [rbp+riz*2+0x76],ah
  4228ee:	imul   esp,DWORD PTR [rbx+0x65],0x68730073
  4228f5:	outs   dx,DWORD PTR ds:[rsi]
  4228f6:	ja     0x422918
  4228f8:	(bad)  
  4228f9:	jbe    0x42295c
  4228fb:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6420656c
  422903:	gs jbe 0x42296f
  422906:	movsxd esp,DWORD PTR [rbp+0x73]
  422909:	add    BYTE PTR [rbx+0x6f],ah
  42290c:	fs movsxd esi,DWORD PTR gs:[rbx+0x0]
  422911:	jae    0x42297b
  422913:	outs   dx,DWORD PTR ds:[rsi]
  422914:	ja     0x422936
  422916:	(bad)  
  422917:	jbe    0x42297a
  422919:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6320656c
  422921:	outs   dx,DWORD PTR ds:[rsi]
  422922:	fs movsxd esi,DWORD PTR gs:[rbx+0x0]
  422927:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  42292c:	gs jb  0x4229a2
  42292f:	add    BYTE PTR [rbx+0x68],dh
  422932:	outs   dx,DWORD PTR ds:[rsi]
  422933:	ja     0x422955
  422935:	(bad)  
  422936:	jbe    0x422999
  422938:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6420656c
  422940:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  422944:	gs jb  0x4229ba
  422947:	add    BYTE PTR [rbp+0x6e],ah
  42294a:	movsxd ebp,DWORD PTR [rdi+0x64]
  42294d:	gs jb  0x4229c3
  422950:	add    BYTE PTR [rbx+0x68],dh
  422953:	outs   dx,DWORD PTR ds:[rsi]
  422954:	ja     0x422976
  422956:	(bad)  
  422957:	jbe    0x4229ba
  422959:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6520656c
  422961:	outs   dx,BYTE PTR ds:[rsi]
  422962:	movsxd ebp,DWORD PTR [rdi+0x64]
  422965:	gs jb  0x4229db
  422968:	add    BYTE PTR [rdx+0x73],ah
  42296b:	data16 jae 0x42296e
  42296e:	add    BYTE PTR [rax],al
  422970:	jae    0x4229da
  422972:	outs   dx,DWORD PTR ds:[rsi]
  422973:	ja     0x422995
  422975:	(bad)  
  422976:	jbe    0x4229d9
  422978:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6220656c
  422980:	imul   esi,DWORD PTR [rax+riz*1+0x73],0x61657274
  422988:	ins    DWORD PTR es:[rdi],dx
  422989:	and    BYTE PTR [rsi+0x69],ah
  42298c:	ins    BYTE PTR es:[rdi],dx
  42298d:	je     0x4229f4
  42298f:	jb     0x422a04
  422991:	add    BYTE PTR [rax+0x72],dh
  422994:	outs   dx,DWORD PTR ds:[rsi]
  422995:	je     0x422a06
  422997:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42299a:	jae    0x42299c
  42299c:	jae    0x422a06
  42299e:	outs   dx,DWORD PTR ds:[rsi]
  42299f:	ja     0x4229c1
  4229a1:	(bad)  
  4229a2:	jbe    0x422a05
  4229a4:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7020656c
  4229ac:	jb     0x422a1d
  4229ae:	je     0x422a1f
  4229b0:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4229b3:	jae    0x4229b5
  4229b5:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x7372
  4229bc:	add    BYTE PTR [rbx+0x68],dh
  4229bf:	outs   dx,DWORD PTR ds:[rsi]
  4229c0:	ja     0x4229e2
  4229c2:	(bad)  
  4229c3:	jbe    0x422a26
  4229c5:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6620656c
  4229cd:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x70007372
  4229d5:	imul   edi,DWORD PTR [rax+0x5f],0x73746d66
  4229dc:	add    BYTE PTR [rbx+0x68],dh
  4229df:	outs   dx,DWORD PTR ds:[rsi]
  4229e0:	ja     0x422a02
  4229e2:	(bad)  
  4229e3:	jbe    0x422a46
  4229e5:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7020656c
  4229ed:	imul   edi,DWORD PTR [rax+0x65],0x6f66206c
  4229f4:	jb     0x422a63
  4229f6:	(bad)  
  4229f7:	je     0x422a6c
  4229f9:	add    BYTE PTR [rcx+riz*2+0x79],ch
  4229fd:	outs   dx,DWORD PTR ds:[rsi]
  4229fe:	jne    0x422a74
  422a00:	jae    0x422a02
  422a02:	jae    0x422a6c
  422a04:	outs   dx,DWORD PTR ds:[rsi]
  422a05:	ja     0x422a27
  422a07:	jae    0x422a7d
  422a09:	(bad)  
  422a0a:	outs   dx,BYTE PTR ds:[rsi]
  422a0b:	fs (bad) 
  422a0d:	jb     0x422a73
  422a0f:	and    BYTE PTR [rbx+0x68],ah
  422a12:	(bad)  
  422a13:	outs   dx,BYTE PTR ds:[rsi]
  422a14:	outs   dx,BYTE PTR ds:[rsi]
  422a15:	gs ins BYTE PTR es:[rdi],dx
  422a17:	and    BYTE PTR [rcx+riz*2+0x79],ch
  422a1b:	outs   dx,DWORD PTR ds:[rsi]
  422a1c:	jne    0x422a92
  422a1e:	jae    0x422a20
  422a20:	jae    0x422a83
  422a22:	ins    DWORD PTR es:[rdi],dx
  422a23:	jo     0x422a91
  422a25:	gs pop rdi
  422a27:	ins    WORD PTR es:[rdi],dx
  422a29:	je     0x422a9e
  422a2b:	add    BYTE PTR [rax],al
  422a2d:	add    BYTE PTR [rax],al
  422a2f:	add    BYTE PTR [rbx+0x68],dh
  422a32:	outs   dx,DWORD PTR ds:[rsi]
  422a33:	ja     0x422a55
  422a35:	(bad)  
  422a36:	jbe    0x422a99
  422a38:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6120656c
  422a40:	jne    0x422aa6
  422a42:	imul   ebp,DWORD PTR [rdi+0x20],0x706d6173
  422a49:	ins    BYTE PTR es:[rdi],dx
  422a4a:	and    BYTE PTR gs:[rsi+0x6f],ah
  422a4e:	jb     0x422abd
  422a50:	(bad)  
  422a51:	je     0x422ac6
  422a53:	add    BYTE PTR [rbx+0x6f],ah
  422a56:	ins    BYTE PTR es:[rdi],dx
  422a57:	outs   dx,DWORD PTR ds:[rsi]
  422a58:	jb     0x422acd
  422a5a:	add    BYTE PTR [rbx+0x68],dh
  422a5d:	outs   dx,DWORD PTR ds:[rsi]
  422a5e:	ja     0x422a80
  422a60:	(bad)  
  422a61:	jbe    0x422ac4
  422a63:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6320656c
  422a6b:	outs   dx,DWORD PTR ds:[rsi]
  422a6c:	ins    BYTE PTR es:[rdi],dx
  422a6d:	outs   dx,DWORD PTR ds:[rsi]
  422a6e:	jb     0x422a90
  422a70:	outs   dx,BYTE PTR ds:[rsi]
  422a71:	(bad)  
  422a72:	ins    DWORD PTR es:[rdi],dx
  422a73:	gs jae 0x422a76
  422a76:	ins    BYTE PTR es:[rdi],dx
  422a77:	outs   dx,DWORD PTR ds:[rsi]
  422a78:	ins    BYTE PTR es:[edi],dx
  422a7a:	gs jbe 0x422ae2
  422a7d:	ins    BYTE PTR es:[rdi],dx
  422a7e:	add    BYTE PTR [rbx+0x65],dh
  422a81:	je     0x422aa3
  422a83:	ins    BYTE PTR es:[rdi],dx
  422a84:	outs   dx,DWORD PTR ds:[rsi]
  422a85:	addr32 imul ebp,DWORD PTR [esi+0x67],0x76656c20
  422a8e:	gs ins BYTE PTR es:[rdi],dx
  422a90:	add    BYTE PTR [rsi+0x0],dh
  422a93:	jb     0x422afa
  422a95:	jo     0x422b06
  422a97:	jb     0x422b0d
  422a99:	add    BYTE PTR [rdi+0x65],ah
  422a9c:	outs   dx,BYTE PTR ds:[rsi]
  422a9d:	gs jb  0x422b01
  422aa0:	je     0x422b07
  422aa2:	and    BYTE PTR [rcx+0x20],ah
  422aa5:	jb     0x422b0c
  422aa7:	jo     0x422b18
  422aa9:	jb     0x422b1f
  422aab:	add    BYTE PTR [rbp+0x61],ch
  422aae:	js     0x422b0f
  422ab0:	(bad)  
  422ab1:	ins    BYTE PTR es:[rdi],dx
  422ab2:	ins    BYTE PTR es:[rdi],dx
  422ab3:	outs   dx,DWORD PTR ds:[rsi]
  422ab4:	movsxd eax,DWORD PTR [rax]
  422ab6:	add    BYTE PTR [rax],al
  422ab8:	jae    0x422b1f
  422aba:	je     0x422adc
  422abc:	ins    DWORD PTR es:[rdi],dx
  422abd:	(bad)  
  422abe:	js     0x422b29
  422ac0:	ins    DWORD PTR es:[rdi],dx
  422ac1:	jne    0x422b30
  422ac3:	and    BYTE PTR [rbx+0x69],dh
  422ac6:	jp     0x422b2d
  422ac8:	and    BYTE PTR [rdi+0x66],ch
  422acb:	and    BYTE PTR [rcx+0x20],ah
  422ace:	jae    0x422b39
  422ad0:	outs   dx,BYTE PTR ds:[rsi]
  422ad1:	ins    BYTE PTR es:[edi],dx
  422ad3:	and    BYTE PTR gs:[rcx+0x6c],ah
  422ad7:	ins    BYTE PTR es:[rdi],dx
  422ad8:	outs   dx,DWORD PTR ds:[rsi]
  422ad9:	movsxd esp,DWORD PTR [rcx+0x74]
  422adc:	gs and BYTE PTR fs:[rdx+0x6c],ah
  422ae1:	outs   dx,DWORD PTR ds:[rsi]
  422ae2:	movsxd ebp,DWORD PTR [rbx+0x0]
  422ae5:	(bad)  
  422ae6:	jns    0x422b5c
  422ae8:	gs jae 0x422aeb
  422aeb:	movsxd esi,DWORD PTR [rax+0x75]
  422aee:	data16 ins BYTE PTR es:[rdi],dx
  422af0:	(bad)  
  422af1:	addr32 jae 0x422af4
  422af4:	outs   dx,WORD PTR ds:[rsi]
  422af6:	jb     0x422b5b
  422af8:	and    BYTE PTR gs:[rbx+0x70],dh
  422afc:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  422b00:	imul   esp,DWORD PTR [rbx+0x20],0x20757063
  422b07:	data16 ins BYTE PTR es:[rdi],dx
  422b09:	(bad)  
  422b0a:	addr32 jae 0x422b0d
  422b0d:	push   0x5f656469
  422b12:	(bad)
  422b17:	jb     0x422b19
  422b19:	outs   dx,DWORD PTR fs:[rsi]
  422b1b:	and    BYTE PTR [rsi+0x6f],ch
  422b1e:	je     0x422b40
  422b20:	jae    0x422b8a
  422b22:	outs   dx,DWORD PTR ds:[rsi]
  422b23:	ja     0x422b45
  422b25:	jo     0x422b99
  422b27:	outs   dx,DWORD PTR ds:[rsi]
  422b28:	addr32 jb 0x422b8c
  422b2b:	ins    DWORD PTR es:[rdi],dx
  422b2c:	and    BYTE PTR [rdx+0x61],ah
  422b2f:	outs   dx,BYTE PTR ds:[rsi]
  422b30:	outs   dx,BYTE PTR ds:[rsi]
  422b31:	gs jb  0x422b34
  422b34:	jae    0x422ba5
  422b36:	jne    0x422baa
  422b38:	movsxd esp,DWORD PTR [rbp+0x73]
  422b3b:	add    BYTE PTR [rax],al
  422b3d:	add    BYTE PTR [rax],al
  422b3f:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  422b43:	je     0x422b65
  422b45:	jae    0x422bb6
  422b47:	jne    0x422bbb
  422b49:	movsxd esp,DWORD PTR [rbp+0x73]
  422b4c:	and    BYTE PTR [rdi+0x66],ch
  422b4f:	and    BYTE PTR [rax+rbp*2+0x65],dh
  422b53:	and    BYTE PTR [rcx+0x6e],ch
  422b56:	jo     0x422bcd
  422b58:	je     0x422b7a
  422b5a:	fs gs jbe 0x422bc7
  422b5e:	movsxd esp,DWORD PTR [rbp+0x0]
  422b61:	fs gs jbe 0x422bce
  422b65:	movsxd esp,DWORD PTR [rbp+0x0]
  422b68:	jae    0x422bd3
  422b6a:	outs   dx,BYTE PTR ds:[rsi]
  422b6b:	imul   esi,DWORD PTR [rbx+0x0],0x0
  422b6f:	add    BYTE PTR [rcx+rbp*2+0x73],ch
  422b73:	je     0x422b95
  422b75:	jae    0x422be0
  422b77:	outs   dx,BYTE PTR ds:[rsi]
  422b78:	imul   esi,DWORD PTR [rbx+0x20],0x6f
  422b7c:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  422b81:	and    BYTE PTR [rdi+0x75],ch
  422b84:	je     0x422bf6
  422b86:	jne    0x422bfc
  422b88:	and    BYTE PTR [rbp+riz*2+0x76],ah
  422b8c:	imul   esp,DWORD PTR [rbx+0x65],0x66006600
  422b93:	outs   dx,DWORD PTR ds:[rsi]
  422b94:	jb     0x422bf9
  422b96:	and    BYTE PTR gs:[rsi+0x6f],ah
  422b9a:	jb     0x422c09
  422b9c:	(bad)  
  422b9d:	je     0x422b9f
  422b9f:	add    BYTE PTR [rbx+0x68],dh
  422ba2:	outs   dx,DWORD PTR ds:[rsi]
  422ba3:	ja     0x422bc5
  422ba5:	jne    0x422c15
  422ba7:	imul   esi,DWORD PTR [rax+riz*1+0x6f],0x68742066
  422baf:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ah
  422bb4:	jo     0x422c22
  422bb6:	(bad)  
  422bb7:	jns    0x422c1e
  422bb9:	and    BYTE PTR fs:[rsi+0x61],dh
  422bbd:	ins    BYTE PTR es:[rdi],dx
  422bbe:	jne    0x422c25
  422bc0:	jae    0x422bc2
  422bc2:	add    BYTE PTR [rax],al
  422bc4:	add    BYTE PTR [rax],al
  422bc6:	add    BYTE PTR [rax],al
  422bc8:	jne    0x422c3d
  422bca:	and    BYTE PTR gs:[rbx+0x49],dl
  422bce:	and    BYTE PTR [rax+0x72],dh
  422bd1:	imul   di,WORD PTR gs:[rax+0x65],0x2073
  422bd8:	outs   dx,WORD PTR ds:[rsi]
  422bda:	jb     0x422bfc
  422bdc:	je     0x422c46
  422bde:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ah
  422be3:	jo     0x422c51
  422be5:	(bad)  
  422be6:	jns    0x422c4d
  422be8:	and    BYTE PTR fs:[rsi+0x61],dh
  422bec:	ins    BYTE PTR es:[rdi],dx
  422bed:	jne    0x422c54
  422bef:	jae    0x422bf1
  422bf1:	(bad)  
  422bf2:	jns    0x422c68
  422bf4:	gs pop rdi
  422bf6:	(bad)  
  422bf7:	imul   ebp,DWORD PTR [rsi+0x61],0x705f7972
  422bfe:	jb     0x422c65
  422c00:	imul   di,WORD PTR [rax+0x0],0x0
  422c06:	add    BYTE PTR [rax],al
  422c08:	jne    0x422c7d
  422c0a:	and    BYTE PTR gs:[rdx+0x69],ah
  422c0e:	outs   dx,BYTE PTR ds:[rsi]
  422c0f:	(bad)  
  422c10:	jb     0x422c8b
  422c12:	and    BYTE PTR [rax+0x72],dh
  422c15:	imul   di,WORD PTR gs:[rax+0x65],0x2073
  422c1c:	outs   dx,WORD PTR ds:[rsi]
  422c1e:	jb     0x422c40
  422c20:	(bad)  
  422c21:	jns    0x422c97
  422c23:	and    BYTE PTR gs:[rbp+0x6e],dh
  422c27:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x61786573
  422c2f:	addr32 gs jae 0x422c9c
  422c33:	ins    DWORD PTR es:[rdi],dx
  422c34:	(bad)  
  422c35:	ins    BYTE PTR es:[rdi],dx
  422c36:	add    BYTE PTR [rax],al
  422c38:	jne    0x422cad
  422c3a:	and    BYTE PTR gs:[rbx+0x65],dh
  422c3e:	js     0x422ca1
  422c40:	addr32 gs jae 0x422cad
  422c44:	ins    DWORD PTR es:[rdi],dx
  422c45:	(bad)  
  422c46:	ins    BYTE PTR es:[rdi],dx
  422c47:	and    BYTE PTR [rsi+0x6f],ah
  422c4a:	jb     0x422cb9
  422c4c:	(bad)  
  422c4d:	je     0x422c6f
  422c4f:	rex.W
  422c50:	rex.WRXB push r13
  422c52:	push   rdx
  422c53:	push   rbx
  422c54:	cmp    cl,BYTE PTR [rbp+0x4d]
  422c57:	cmp    dl,BYTE PTR [rbx+0x53]
  422c5a:	cs rex.WRB
  422c5c:	rex.WB
  422c5d:	rex.XB push r10
  422c5f:	rex.WRXB push r11
  422c61:	rex.RB
  422c62:	rex.XB
  422c63:	rex.WRXB
  422c64:	rex.WRX
  422c65:	rex.R push rbx
  422c67:	and    BYTE PTR [rsi+0x6f],ah
  422c6a:	jb     0x422c8c
  422c6c:	je     0x422cd7
  422c6e:	ins    DWORD PTR es:[rdi],dx
  422c6f:	and    BYTE PTR gs:[rbp+0x6e],dh
  422c73:	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x74657270
  422c7b:	je     0x422cf6
  422c7d:	add    BYTE PTR [rax],al
  422c7f:	add    BYTE PTR [rax+0x72],dh
  422c82:	gs je  0x422cf9
  422c85:	imul   esp,DWORD PTR [rsi+0x79],0x65687420
  422c8c:	and    BYTE PTR [rsi+0x6f],ah
  422c8f:	jb     0x422cfe
  422c91:	(bad)  
  422c92:	je     0x422cb4
  422c94:	outs   dx,DWORD PTR ds:[rsi]
  422c95:	data16 and BYTE PTR [rcx+rbp*2+0x73],ah
  422c9a:	jo     0x422d08
  422c9c:	(bad)  
  422c9d:	jns    0x422d04
  422c9f:	and    BYTE PTR fs:[rsi+0x61],dh
  422ca3:	ins    BYTE PTR es:[rdi],dx
  422ca4:	jne    0x422d0b
  422ca6:	jae    0x422cd4
  422ca8:	and    BYTE PTR [rbp+0x61],ch
  422cab:	imul   esp,DWORD PTR [rbp+0x20],0x69
  422caf:	je     0x422cd1
  422cb1:	ins    DWORD PTR es:[rdi],dx
  422cb2:	outs   dx,DWORD PTR ds:[rsi]
  422cb3:	jb     0x422d1a
  422cb5:	and    BYTE PTR [rax+0x75],ch
  422cb8:	ins    DWORD PTR es:[rdi],dx
  422cb9:	(bad)  
  422cba:	outs   dx,BYTE PTR ds:[rsi]
  422cbb:	and    BYTE PTR [rdx+0x65],dh
  422cbe:	(bad)  
  422cbf:	fs (bad) 
  422cc1:	(bad)  
  422cc2:	ins    BYTE PTR es:[rdi],dx
  422cc3:	add    BYTE PTR gs:[rax+0x72],dh
  422cc7:	imul   ebp,DWORD PTR [rsi+0x74],0x726f665f
  422cce:	ins    DWORD PTR es:[rdi],dx
  422ccf:	(bad)  
  422cd0:	je     0x422cd2
  422cd2:	add    BYTE PTR [rax],al
  422cd4:	add    BYTE PTR [rax],al
  422cd6:	add    BYTE PTR [rax],al
  422cd8:	jae    0x422d3f
  422cda:	je     0x422cfc
  422cdc:	je     0x422d46
  422cde:	and    BYTE PTR gs:[rdi+0x75],ch
  422ce2:	je     0x422d54
  422ce4:	jne    0x422d5a
  422ce6:	and    BYTE PTR [rax+0x72],dh
  422ce9:	imul   ebp,DWORD PTR [rsi+0x74],0x20676e69
  422cf0:	outs   dx,WORD PTR ds:[rsi]
  422cf2:	jb     0x422d61
  422cf4:	(bad)  
  422cf5:	je     0x422d17
  422cf7:	sub    BYTE PTR [rcx+0x76],ah
  422cfa:	(bad)  
  422cfb:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x6620656c
  422d03:	outs   dx,DWORD PTR ds:[rsi]
  422d04:	jb     0x422d73
  422d06:	(bad)  
  422d07:	je     0x422d7c
  422d09:	and    BYTE PTR [rcx+0x72],ah
  422d0c:	cmp    ah,BYTE PTR gs:[rax]
  422d0f:	fs gs data16 (bad) 
  422d13:	jne    0x422d81
  422d15:	je     0x422d43
  422d17:	and    BYTE PTR [rbx+0x6f],ah
  422d1a:	ins    DWORD PTR es:[rdi],dx
  422d1b:	jo     0x422d7e
  422d1d:	movsxd esi,DWORD PTR [rsp+rbp*1+0x20]
  422d21:	movsxd esi,DWORD PTR [rbx+0x76]
  422d24:	sub    al,0x20
  422d26:	data16 ins BYTE PTR es:[rdi],dx
  422d28:	(bad)  
  422d29:	je     0x422d57
  422d2b:	and    BYTE PTR [rcx+0x6e],ch
  422d2e:	imul   ebp,DWORD PTR [rax+riz*1],0x6e6f736a
  422d35:	sub    al,0x20
  422d37:	js     0x422da6
  422d39:	ins    BYTE PTR es:[rdi],dx
  422d3a:	sub    DWORD PTR [rax],eax
  422d3c:	outs   dx,DWORD PTR ds:[rsi]
  422d3d:	data16 add BYTE PTR [rcx+0x6c],ah
  422d41:	imul   esp,DWORD PTR [rcx+0x73],0x726f6620
  422d48:	and    BYTE PTR [rip+0x6e697270],ch        # 0x6eab9fbe
  422d4e:	je     0x422daf
  422d50:	outs   dx,WORD PTR ds:[rsi]
  422d52:	jb     0x422dc1
  422d54:	(bad)  
  422d55:	je     0x422d57
  422d57:	jae    0x422dbe
  422d59:	ins    BYTE PTR es:[rdi],dx
  422d5a:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x73]
  422d5f:	je     0x422dd3
  422d61:	gs (bad) 
  422d63:	ins    DWORD PTR es:[rdi],dx
  422d64:	jae    0x422d66
  422d66:	jae    0x422dcd
  422d68:	ins    BYTE PTR es:[rdi],dx
  422d69:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
  422d6e:	push   0x70732065
  422d73:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  422d77:	imul   esp,DWORD PTR [rbp+0x64],0x72747320
  422d7e:	gs (bad) 
  422d80:	ins    DWORD PTR es:[rdi],dx
  422d81:	jae    0x422d83
  422d83:	jae    0x422df9
  422d85:	jb     0x422dec
  422d87:	(bad)  
  422d88:	ins    DWORD PTR es:[rdi],dx
  422d89:	pop    rdi
  422d8a:	jae    0x422dfc
  422d8c:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  422d90:	imul   esp,DWORD PTR [rbp+0x72],0x63657300
  422d97:	je     0x422e02
  422d99:	outs   dx,DWORD PTR ds:[rsi]
  422d9a:	outs   dx,BYTE PTR ds:[rsi]
  422d9b:	jae    0x422d9d
  422d9d:	add    BYTE PTR [rax],al
  422d9f:	add    BYTE PTR [rax+0x72],dh
  422da2:	imul   ebp,DWORD PTR [rsi+0x74],0x63657320
  422da9:	je     0x422e14
  422dab:	outs   dx,DWORD PTR ds:[rsi]
  422dac:	outs   dx,BYTE PTR ds:[rsi]
  422dad:	jae    0x422dcf
  422daf:	jae    0x422e25
  422db1:	jb     0x422e28
  422db3:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  422db7:	and    BYTE PTR gs:[rcx+0x6e],ah
  422dbb:	and    BYTE PTR fs:[rbx+0x65],dh
  422dbf:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  422dc3:	outs   dx,BYTE PTR ds:[rsi]
  422dc4:	and    BYTE PTR [rcx+0x6e],ch
  422dc7:	outs   dx,WORD PTR ds:[rsi]
  422dc9:	jb     0x422e38
  422dcb:	(bad)  
  422dcc:	je     0x422e37
  422dce:	outs   dx,DWORD PTR ds:[rsi]
  422dcf:	outs   dx,BYTE PTR ds:[rsi]
  422dd0:	sub    al,0x20
  422dd2:	(bad)  
  422dd3:	outs   dx,BYTE PTR ds:[rsi]
  422dd4:	and    BYTE PTR fs:[rbp+0x78],ah
  422dd8:	imul   esi,DWORD PTR [rax+rax*1+0x73],0x5f776f68
  422de0:	fs (bad) 
  422de2:	je     0x422e45
  422de4:	add    BYTE PTR [rbx+0x68],dh
  422de7:	outs   dx,DWORD PTR ds:[rsi]
  422de8:	ja     0x422e0a
  422dea:	jo     0x422e4d
  422dec:	movsxd ebp,DWORD PTR [rbx+0x65]
  422def:	je     0x422e64
  422df1:	and    BYTE PTR [rcx+riz*2+0x74],ah
  422df5:	(bad)  
  422df6:	add    BYTE PTR [rbx+0x68],dh
  422df9:	outs   dx,DWORD PTR ds:[rsi]
  422dfa:	ja     0x422e5b
  422dfc:	fs (bad) 
  422dfe:	je     0x422e61
  422e00:	pop    rdi
  422e01:	push   0x687361
  422e06:	jae    0x422e70
  422e08:	outs   dx,DWORD PTR ds:[rsi]
  422e09:	ja     0x422e2b
  422e0b:	jo     0x422e6e
  422e0d:	movsxd ebp,DWORD PTR [rbx+0x65]
  422e10:	je     0x422e85
  422e12:	and    BYTE PTR [rcx+riz*2+0x74],ah
  422e16:	(bad)  
  422e17:	and    BYTE PTR [rax+0x61],ch
  422e1a:	jae    0x422e84
  422e1c:	add    BYTE PTR [rbx+0x68],dh
  422e1f:	outs   dx,DWORD PTR ds:[rsi]
  422e20:	ja     0x422e81
  422e22:	gs jb  0x422e97
  422e25:	outs   dx,DWORD PTR ds:[rsi]
  422e26:	jb     0x422e28
  422e28:	jae    0x422e92
  422e2a:	outs   dx,DWORD PTR ds:[rsi]
  422e2b:	ja     0x422e4d
  422e2d:	jo     0x422ea1
  422e2f:	outs   dx,DWORD PTR ds:[rsi]
  422e30:	(bad)  
  422e31:	imul   ebp,DWORD PTR [rsi+0x67],0x72726520
  422e38:	outs   dx,DWORD PTR ds:[rsi]
  422e39:	jb     0x422e3b
  422e3b:	jae    0x422ea5
  422e3d:	outs   dx,DWORD PTR ds:[rsi]
  422e3e:	ja     0x422e9f
  422e40:	outs   dx,WORD PTR ds:[rsi]
  422e42:	jb     0x422eb1
  422e44:	(bad)  
  422e45:	je     0x422e47
  422e47:	jae    0x422eb1
  422e49:	outs   dx,DWORD PTR ds:[rsi]
  422e4a:	ja     0x422e6c
  422e4c:	outs   dx,WORD PTR ds:[rsi]
  422e4e:	jb     0x422ebd
  422e50:	(bad)  
  422e51:	je     0x422e82
  422e53:	movsxd ebp,DWORD PTR [rdi+0x6e]
  422e56:	je     0x422eb9
  422e58:	imul   ebp,DWORD PTR [rsi+0x65],0x6e692072
  422e5f:	outs   dx,WORD PTR ds:[rsi]
  422e61:	add    BYTE PTR [rbx+0x68],dh
  422e64:	outs   dx,DWORD PTR ds:[rsi]
  422e65:	ja     0x422ec6
  422e67:	data16 jb 0x422ecb
  422e6a:	ins    DWORD PTR es:[rdi],dx
  422e6b:	gs jae 0x422e6e
  422e6e:	jae    0x422ed8
  422e70:	outs   dx,DWORD PTR ds:[rsi]
  422e71:	ja     0x422e93
  422e73:	data16 jb 0x422ed7
  422e76:	ins    DWORD PTR es:[rdi],dx
  422e77:	gs jae 0x422e9a
  422e7a:	imul   ebp,DWORD PTR [rsi+0x66],0x6873006f
  422e81:	outs   dx,DWORD PTR ds:[rsi]
  422e82:	ja     0x422ee3
  422e84:	outs   dx,WORD PTR ds:[rsi]
  422e86:	jb     0x422ef5
  422e88:	(bad)  
  422e89:	je     0x422eea
  422e8b:	outs   dx,BYTE PTR gs:[rsi]
  422e8d:	je     0x422f01
  422e8f:	jns    0x422e91
  422e91:	add    BYTE PTR [rax],al
  422e93:	add    BYTE PTR [rax],al
  422e95:	add    BYTE PTR [rax],al
  422e97:	add    BYTE PTR [rbx+0x68],dh
  422e9a:	outs   dx,DWORD PTR ds:[rsi]
  422e9b:	ja     0x422ebd
  422e9d:	(bad)  
  422e9e:	and    BYTE PTR [rax+0x61],dh
  422ea1:	jb     0x422f17
  422ea3:	imul   esp,DWORD PTR [rbx+0x75],0x2072616c
  422eaa:	outs   dx,BYTE PTR gs:[rsi]
  422eac:	je     0x422f20
  422eae:	jns    0x422ed0
  422eb0:	data16 jb 0x422f22
  422eb3:	ins    DWORD PTR es:[rdi],dx
  422eb4:	and    BYTE PTR [rax+rbp*2+0x65],dh
  422eb8:	and    BYTE PTR [rsi+0x6f],ah
  422ebb:	jb     0x422f2a
  422ebd:	(bad)  
  422ebe:	je     0x422eef
  422ec0:	movsxd ebp,DWORD PTR [rdi+0x6e]
  422ec3:	je     0x422f26
  422ec5:	imul   ebp,DWORD PTR [rsi+0x65],0x6e692072
  422ecc:	outs   dx,WORD PTR ds:[rsi]
  422ece:	add    BYTE PTR [rbp+0x6e],ah
  422ed1:	je     0x422f45
  422ed3:	jns    0x422ed5
  422ed5:	jae    0x422f3f
  422ed7:	outs   dx,DWORD PTR ds:[rsi]
  422ed8:	ja     0x422f39
  422eda:	outs   dx,BYTE PTR gs:[rsi]
  422edc:	je     0x422f50
  422ede:	imul   esp,DWORD PTR [rbp+0x73],0x0
  422ee5:	add    BYTE PTR [rax],al
  422ee7:	add    BYTE PTR [rbx+0x68],dh
  422eea:	outs   dx,DWORD PTR ds:[rsi]
  422eeb:	ja     0x422f0d
  422eed:	(bad)  
  422eee:	and    BYTE PTR [rbx+0x65],dh
  422ef1:	je     0x422f13
  422ef3:	outs   dx,DWORD PTR ds:[rsi]
  422ef4:	data16 and BYTE PTR [rbx+0x70],dh
  422ef8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  422efc:	imul   esp,DWORD PTR [rbp+0x64],0x746e6520
  422f03:	jb     0x422f6e
  422f05:	gs jae 0x422f08
  422f08:	outs   dx,BYTE PTR gs:[rsi]
  422f0a:	je     0x422f7e
  422f0c:	jns    0x422f6d
  422f0e:	ins    BYTE PTR es:[rdi],dx
  422f0f:	imul   esi,DWORD PTR [rbx+0x74],0x6f687300
  422f16:	ja     0x422f77
  422f18:	jo     0x422f7b
  422f1a:	movsxd ebp,DWORD PTR [rbx+0x65]
  422f1d:	je     0x422f92
  422f1f:	add    BYTE PTR [rbx+0x68],dh
  422f22:	outs   dx,DWORD PTR ds:[rsi]
  422f23:	ja     0x422f45
  422f25:	jo     0x422f88
  422f27:	movsxd ebp,DWORD PTR [rbx+0x65]
  422f2a:	je     0x422f9f
  422f2c:	and    BYTE PTR [rcx+0x6e],ch
  422f2f:	outs   dx,WORD PTR ds:[rsi]
  422f31:	add    BYTE PTR [rbx+0x68],dh
  422f34:	outs   dx,DWORD PTR ds:[rsi]
  422f35:	ja     0x422f96
  422f37:	jo     0x422fab
  422f39:	outs   dx,DWORD PTR ds:[rsi]
  422f3a:	addr32 jb 0x422f9e
  422f3d:	ins    DWORD PTR es:[rdi],dx
  422f3e:	jae    0x422f40
  422f40:	jae    0x422faa
  422f42:	outs   dx,DWORD PTR ds:[rsi]
  422f43:	ja     0x422f65
  422f45:	jo     0x422fb9
  422f47:	outs   dx,DWORD PTR ds:[rsi]
  422f48:	addr32 jb 0x422fac
  422f4b:	ins    DWORD PTR es:[rdi],dx
  422f4c:	jae    0x422f6e
  422f4e:	imul   ebp,DWORD PTR [rsi+0x66],0x6873006f
  422f55:	outs   dx,DWORD PTR ds:[rsi]
  422f56:	ja     0x422fb7
  422f58:	jae    0x422fce
  422f5a:	jb     0x422fc1
  422f5c:	(bad)  
  422f5d:	ins    DWORD PTR es:[rdi],dx
  422f5e:	jae    0x422f60
  422f60:	jae    0x422fca
  422f62:	outs   dx,DWORD PTR ds:[rsi]
  422f63:	ja     0x422f85
  422f65:	jae    0x422fdb
  422f67:	jb     0x422fce
  422f69:	(bad)  
  422f6a:	ins    DWORD PTR es:[rdi],dx
  422f6b:	jae    0x422f8d
  422f6d:	imul   ebp,DWORD PTR [rsi+0x66],0x6873006f
  422f74:	outs   dx,DWORD PTR ds:[rsi]
  422f75:	ja     0x422fd6
  422f77:	movsxd ebp,DWORD PTR [rax+0x61]
  422f7a:	jo     0x422ff0
  422f7c:	gs jb  0x422ff2
  422f7f:	add    BYTE PTR [rbx+0x68],dh
  422f82:	outs   dx,DWORD PTR ds:[rsi]
  422f83:	ja     0x422fa5
  422f85:	movsxd ebp,DWORD PTR [rax+0x61]
  422f88:	jo     0x422ffe
  422f8a:	gs jb  0x423000
  422f8d:	and    BYTE PTR [rcx+0x6e],ch
  422f90:	outs   dx,WORD PTR ds:[rsi]
  422f92:	add    BYTE PTR [rbx+0x6f],ah
  422f95:	jne    0x423005
  422f97:	je     0x422ff8
  422f99:	data16 jb 0x422ffd
  422f9c:	ins    DWORD PTR es:[rdi],dx
  422f9d:	gs jae 0x422fa0
  422fa0:	movsxd ebp,DWORD PTR [rdi+0x75]
  422fa3:	outs   dx,BYTE PTR ds:[rsi]
  422fa4:	je     0x422fc6
  422fa6:	je     0x423010
  422fa8:	and    BYTE PTR gs:[rsi+0x75],ch
  422fac:	ins    DWORD PTR es:[rdi],dx
  422fad:	(bad)  
  422fae:	gs jb  0x422fd1
  422fb1:	outs   dx,DWORD PTR ds:[rsi]
  422fb2:	data16 and BYTE PTR [rsi+0x72],ah
  422fb6:	(bad)  
  422fb7:	ins    DWORD PTR es:[rdi],dx
  422fb8:	gs jae 0x422fdb
  422fbb:	jo     0x423022
  422fbd:	jb     0x422fdf
  422fbf:	jae    0x423035
  422fc1:	jb     0x423028
  422fc3:	(bad)  
  422fc4:	ins    DWORD PTR es:[rdi],dx
  422fc5:	add    BYTE PTR [rbx+0x6f],ah
  422fc8:	jne    0x423038
  422fca:	je     0x42302b
  422fcc:	jo     0x42302f
  422fce:	movsxd ebp,DWORD PTR [rbx+0x65]
  422fd1:	je     0x423046
  422fd3:	add    BYTE PTR [rax],al
  422fd5:	add    BYTE PTR [rax],al
  422fd7:	add    BYTE PTR [rbx+0x6f],ah
  422fda:	jne    0x42304a
  422fdc:	je     0x422ffe
  422fde:	je     0x423048
  422fe0:	and    BYTE PTR gs:[rsi+0x75],ch
  422fe4:	ins    DWORD PTR es:[rdi],dx
  422fe5:	(bad)  
  422fe6:	gs jb  0x423009
  422fe9:	outs   dx,DWORD PTR ds:[rsi]
  422fea:	data16 and BYTE PTR [rax+0x61],dh
  422fee:	movsxd ebp,DWORD PTR [rbx+0x65]
  422ff1:	je     0x423066
  422ff3:	and    BYTE PTR [rax+0x65],dh
  422ff6:	jb     0x423018
  422ff8:	jae    0x42306e
  422ffa:	jb     0x423061
  422ffc:	(bad)  
  422ffd:	ins    DWORD PTR es:[rdi],dx
  422ffe:	add    BYTE PTR [rbx+0x68],dh
  423001:	outs   dx,DWORD PTR ds:[rsi]
  423002:	ja     0x423063
  423004:	jo     0x423078
  423006:	outs   dx,DWORD PTR ds:[rsi]
  423007:	addr32 jb 0x42306b
  42300a:	ins    DWORD PTR es:[rdi],dx
  42300b:	pop    rdi
  42300c:	jbe    0x423073
  42300e:	jb     0x423083
  423010:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f687300
  423017:	ja     0x423039
  423019:	data16 data16 jo 0x42308f
  42301d:	outs   dx,DWORD PTR ds:[rsi]
  42301e:	(bad)  
  42301f:	and    BYTE PTR gs:[rsi+0x65],dh
  423023:	jb     0x423098
  423025:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f687300
  42302c:	ja     0x42308d
  42302e:	ins    BYTE PTR es:[rdi],dx
  42302f:	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
  423036:	jbe    0x42309d
  423038:	jb     0x4230ad
  42303a:	imul   ebp,DWORD PTR [rdi+0x6e],0x68730073
  423041:	outs   dx,DWORD PTR ds:[rsi]
  423042:	ja     0x423064
  423044:	ins    BYTE PTR es:[rdi],dx
  423045:	imul   esp,DWORD PTR [rdx+0x72],0x20797261
  42304c:	jbe    0x4230b3
  42304e:	jb     0x4230c3
  423050:	imul   ebp,DWORD PTR [rdi+0x6e],0x68730073
  423057:	outs   dx,DWORD PTR ds:[rsi]
  423058:	ja     0x4230b9
  42305a:	jbe    0x4230c1
  42305c:	jb     0x4230d1
  42305e:	imul   ebp,DWORD PTR [rdi+0x6e],0x73
  423065:	add    BYTE PTR [rax],al
  423067:	add    BYTE PTR [rbx+0x68],dh
  42306a:	outs   dx,DWORD PTR ds:[rsi]
  42306b:	ja     0x42308d
  42306d:	jo     0x4230e1
  42306f:	outs   dx,DWORD PTR ds:[rsi]
  423070:	addr32 jb 0x4230d4
  423073:	ins    DWORD PTR es:[rdi],dx
  423074:	and    BYTE PTR [rcx+0x6e],ah
  423077:	and    BYTE PTR fs:[rcx+rbp*2+0x62],ch
  42307c:	jb     0x4230df
  42307e:	jb     0x4230f9
  423080:	and    BYTE PTR [rsi+0x65],dh
  423083:	jb     0x4230f8
  423085:	imul   ebp,DWORD PTR [rdi+0x6e],0x68730073
  42308c:	outs   dx,DWORD PTR ds:[rsi]
  42308d:	ja     0x4230ee
  42308f:	jo     0x4230fa
  423091:	js     0x4230f8
  423093:	ins    BYTE PTR es:[rdi],dx
  423094:	pop    rdi
  423095:	outs   dx,WORD PTR ds:[rsi]
  423097:	jb     0x423106
  423099:	(bad)  
  42309a:	je     0x42310f
  42309c:	add    BYTE PTR [rax],al
  42309e:	add    BYTE PTR [rax],al
  4230a0:	jae    0x42310a
  4230a2:	outs   dx,DWORD PTR ds:[rsi]
  4230a3:	ja     0x4230c5
  4230a5:	jo     0x423110
  4230a7:	js     0x42310e
  4230a9:	ins    BYTE PTR es:[rdi],dx
  4230aa:	and    BYTE PTR [rsi+0x6f],ah
  4230ad:	jb     0x42311c
  4230af:	(bad)  
  4230b0:	je     0x4230d2
  4230b2:	fs gs jae 0x423119
  4230b6:	jb     0x423121
  4230b8:	jo     0x42312e
  4230ba:	imul   ebp,DWORD PTR [rdi+0x6e],0x68730073
  4230c1:	outs   dx,DWORD PTR ds:[rsi]
  4230c2:	ja     0x423123
  4230c4:	jo     0x423138
  4230c6:	imul   esi,DWORD PTR [rsi+0x61],0x645f6574
  4230cd:	(bad)  
  4230ce:	je     0x423131
  4230d0:	add    BYTE PTR [rbx+0x68],dh
  4230d3:	outs   dx,DWORD PTR ds:[rsi]
  4230d4:	ja     0x4230f6
  4230d6:	jo     0x42314a
  4230d8:	imul   esi,DWORD PTR [rsi+0x61],0x64206574
  4230df:	(bad)  
  4230e0:	je     0x423143
  4230e2:	add    BYTE PTR [rbx+0x61],dh
  4230e5:	ins    DWORD PTR es:[rdi],dx
  4230e6:	and    BYTE PTR gs:[rcx+0x73],ah
  4230ea:	and    BYTE PTR [rbx+0x68],dh
  4230ed:	outs   dx,DWORD PTR ds:[rsi]
  4230ee:	ja     0x42314f
  4230f0:	jo     0x423164
  4230f2:	imul   esi,DWORD PTR [rsi+0x61],0x645f6574
  4230f9:	(bad)  
  4230fa:	je     0x42315d
  4230fc:	add    BYTE PTR [rdx+0x69],ah
  4230ff:	je     0x423166
  423101:	js     0x423164
  423103:	movsxd esi,DWORD PTR [rax+rax*1+0x66]
  423107:	outs   dx,DWORD PTR ds:[rsi]
  423108:	jb     0x42316d
  42310a:	and    BYTE PTR gs:[rdx+0x69],ah
  42310e:	je     0x423175
  423110:	js     0x423173
  423112:	movsxd esi,DWORD PTR [rax+riz*1+0x6f]
  423116:	jne    0x42318c
  423118:	jo     0x42318f
  42311a:	je     0x42311c
  42311c:	jb     0x423183
  42311e:	(bad)  
  42311f:	fs pop rdi
  423121:	imul   ebp,DWORD PTR [rsi+0x74],0x61767265
  423128:	ins    BYTE PTR es:[rdi],dx
  423129:	jae    0x42312b
  42312b:	jae    0x423192
  42312d:	je     0x42314f
  42312f:	jb     0x423196
  423131:	(bad)  
  423132:	and    BYTE PTR fs:[rcx+0x6e],ch
  423136:	je     0x42319d
  423138:	jb     0x4231b0
  42313a:	(bad)  
  42313b:	ins    BYTE PTR es:[rdi],dx
  42313c:	jae    0x42313e
  42313e:	outs   dx,BYTE PTR gs:[esi]
  423141:	gs jb  0x4231ad
  423144:	movsxd esp,DWORD PTR [rax]
  423146:	movsxd esp,DWORD PTR [rcx+0x74]
  423149:	movsxd ebp,DWORD PTR [rax+0x20]
  42314c:	(bad)  
  42314d:	ins    BYTE PTR es:[rdi],dx
  42314e:	ins    BYTE PTR es:[rdi],dx
  42314f:	and    BYTE PTR [rdi+0x70],ch
  423152:	je     0x4231bd
  423154:	outs   dx,DWORD PTR ds:[rsi]
  423155:	outs   dx,BYTE PTR ds:[rsi]
  423156:	add    BYTE PTR [rcx+0x0],ch
  423159:	jb     0x4231c0
  42315b:	(bad)  
  42315c:	and    BYTE PTR fs:[rbx+0x70],dh
  423160:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  423164:	imul   esp,DWORD PTR [rbp+0x64],0x6c696620
  42316b:	add    BYTE PTR gs:[rcx+0x6e],ch
  42316f:	jo     0x4231e6
  423171:	je     0x4231d2
  423173:	imul   bp,WORD PTR [rbp+riz*2+0x0],0x0
  42317a:	add    BYTE PTR [rax],al
  42317c:	add    BYTE PTR [rax],al
  42317e:	add    BYTE PTR [rax],al
  423180:	outs   dx,BYTE PTR ds:[rsi]
  423181:	sub    BYTE PTR [rdx+0x0],al
  423184:	add    BYTE PTR [rax],al
  423186:	add    BYTE PTR [rax],al
  423188:	add    BYTE PTR [rax],cl
  42318a:	add    BYTE PTR [rax],al
  42318c:	add    BYTE PTR [rax],al
  42318e:	add    BYTE PTR [rax],al
  423190:	movabs al,ds:0x7000000000004061
  423199:	sub    BYTE PTR [rdx+0x0],al
	...
  4231a8:	jge    0x4231d2
  4231aa:	rex.X add BYTE PTR [rax],al
  4231ad:	add    BYTE PTR [rax],al
  4231af:	add    BYTE PTR [rax],al
  4231b1:	or     BYTE PTR [rax],al
  4231b3:	add    BYTE PTR [rax],al
  4231b5:	add    BYTE PTR [rax],al
  4231b7:	add    BYTE PTR [rax+0x406d],dh
  4231bd:	add    BYTE PTR [rax],al
  4231bf:	add    BYTE PTR [rdi+0x28],bh
  4231c2:	rex.X add BYTE PTR [rax],al
  4231c5:	add    BYTE PTR [rax],al
  4231c7:	add    BYTE PTR [rcx+0x4228],cl
  4231cd:	add    BYTE PTR [rax],al
  4231cf:	add    BYTE PTR [rdi+0x4228],cl
  4231d5:	add    BYTE PTR [rax],al
  4231d7:	add    BYTE PTR [rax],al
  4231d9:	or     BYTE PTR [rax],al
  4231db:	add    BYTE PTR [rax],al
  4231dd:	add    BYTE PTR [rax],al
  4231df:	add    BYTE PTR [rax+0x406d],dh
  4231e5:	add    BYTE PTR [rax],al
  4231e7:	add    BYTE PTR [rdi+0x28],bh
  4231ea:	rex.X add BYTE PTR [rax],al
  4231ed:	add    BYTE PTR [rax],al
  4231ef:	add    BYTE PTR [rcx+0x4228],cl
  4231f5:	add    BYTE PTR [rax],al
  4231f7:	add    BYTE PTR [rcx+0x4228],dl
  4231fd:	add    BYTE PTR [rax],al
  4231ff:	add    BYTE PTR [rax],al
  423201:	or     BYTE PTR [rax],al
  423203:	add    BYTE PTR [rax],al
  423205:	add    BYTE PTR [rax],al
  423207:	add    BYTE PTR [rax+0x406d],dh
  42320d:	add    BYTE PTR [rax],al
  42320f:	add    BYTE PTR [rdi+0x28],bh
  423212:	rex.X add BYTE PTR [rax],al
  423215:	add    BYTE PTR [rax],al
  423217:	add    BYTE PTR [rcx+0x4228],cl
  42321d:	add    BYTE PTR [rax],al
  42321f:	add    BYTE PTR [rsi+0x4228],dl
  423225:	add    BYTE PTR [rax],al
  423227:	add    BYTE PTR [rax],al
  423229:	or     BYTE PTR [rax],al
  42322b:	add    BYTE PTR [rax],al
  42322d:	add    BYTE PTR [rax],al
  42322f:	add    BYTE PTR [rax+0x406d],dh
  423235:	add    BYTE PTR [rax],al
  423237:	add    BYTE PTR [rdi+0x28],bh
  42323a:	rex.X add BYTE PTR [rax],al
  42323d:	add    BYTE PTR [rax],al
  42323f:	add    BYTE PTR [rcx+0x4228],cl
  423245:	add    BYTE PTR [rax],al
  423247:	add    BYTE PTR [rdx],bh
  423249:	(bad)  
  42324a:	rex.X add BYTE PTR [rax],al
  42324d:	add    BYTE PTR [rax],al
  42324f:	add    BYTE PTR [rax],al
  423251:	or     BYTE PTR [rax],al
  423253:	add    BYTE PTR [rax],al
  423255:	add    BYTE PTR [rax],al
  423257:	add    BYTE PTR [rax+0x405d],dh
  42325d:	add    BYTE PTR [rax],al
  42325f:	add    BYTE PTR [rax+rbp*1+0x42],bl
	...
  42326e:	add    BYTE PTR [rax],al
  423270:	test   eax,0x4228
  423275:	add    BYTE PTR [rax],al
  423277:	add    BYTE PTR [rax],al
  423279:	or     BYTE PTR [rax],al
  42327b:	add    BYTE PTR [rax],al
  42327d:	add    BYTE PTR [rax],al
  42327f:	add    BYTE PTR [rax+0x4061],al
  423285:	add    BYTE PTR [rax],al
  423287:	add    BYTE PTR [rbx+0x4228],dh
	...
  423295:	add    BYTE PTR [rax],al
  423297:	add    ah,cl
  423299:	sub    BYTE PTR [rdx+0x0],al
  42329c:	add    BYTE PTR [rax],al
  42329e:	add    BYTE PTR [rax],al
  4232a0:	add    BYTE PTR [rax],cl
  4232a2:	add    BYTE PTR [rax],al
  4232a4:	add    BYTE PTR [rax],al
  4232a6:	add    BYTE PTR [rax],al
  4232a8:	shl    BYTE PTR [rcx+0x40],1
  4232ab:	add    BYTE PTR [rax],al
  4232ad:	add    BYTE PTR [rax],al
  4232af:	add    ah,dl
  4232b1:	sub    BYTE PTR [rdx+0x0],al
	...
  4232c0:	jmp    0x4232ea
  4232c2:	rex.X add BYTE PTR [rax],al
  4232c5:	add    BYTE PTR [rax],al
  4232c7:	add    BYTE PTR [rax],al
  4232c9:	or     BYTE PTR [rax],al
  4232cb:	add    BYTE PTR [rax],al
  4232cd:	add    BYTE PTR [rax],al
  4232cf:	add    BYTE PTR [rax],dh
  4232d1:	movsxd eax,DWORD PTR [rax+0x0]
  4232d4:	add    BYTE PTR [rax],al
  4232d6:	add    BYTE PTR [rax],al
  4232d8:	repz sub BYTE PTR [rdx+0x0],al
	...
  4232e8:	or     ch,BYTE PTR [rcx]
  4232ea:	rex.X add BYTE PTR [rax],al
  4232ed:	add    BYTE PTR [rax],al
  4232ef:	add    BYTE PTR [rax],al
  4232f1:	or     BYTE PTR [rax],al
  4232f3:	add    BYTE PTR [rax],al
  4232f5:	add    BYTE PTR [rax],al
  4232f7:	add    al,al
  4232f9:	add    BYTE PTR fs:[rax],al
  4232fd:	add    BYTE PTR [rax],al
  4232ff:	add    BYTE PTR [rcx],dl
  423301:	sub    DWORD PTR [rdx+0x0],eax
	...
  423310:	(bad)  
  423311:	sub    DWORD PTR [rdx+0x0],eax
  423314:	add    BYTE PTR [rax],al
  423316:	add    BYTE PTR [rax],al
  423318:	add    BYTE PTR [rax],cl
  42331a:	add    BYTE PTR [rax],al
  42331c:	add    BYTE PTR [rax],al
  42331e:	add    BYTE PTR [rax],al
  423320:	add    BYTE PTR [rax+0x40],ch
  423323:	add    BYTE PTR [rax],al
  423325:	add    BYTE PTR [rax],al
  423327:	add    BYTE PTR [rax],dh
  423329:	sub    DWORD PTR [rdx+0x0],eax
	...
  423338:	sub    QWORD PTR [rdx+0x0],rax
  42333c:	add    BYTE PTR [rax],al
  42333e:	add    BYTE PTR [rax],al
  423340:	add    BYTE PTR [rax],cl
  423342:	add    BYTE PTR [rax],al
  423344:	add    BYTE PTR [rax],al
  423346:	add    BYTE PTR [rax],al
  423348:	and    BYTE PTR [rax+0x40],ch
  42334b:	add    BYTE PTR [rax],al
  42334d:	add    BYTE PTR [rax],al
  42334f:	add    BYTE PTR [rcx+0x29],dl
  423352:	rex.X add BYTE PTR [rax],al
	...
  42335d:	add    BYTE PTR [rax],al
  42335f:	add    BYTE PTR [rcx+0x29],ch
  423362:	rex.X add BYTE PTR [rax],al
  423365:	add    BYTE PTR [rax],al
  423367:	add    BYTE PTR [rax],al
  423369:	or     BYTE PTR [rax],al
  42336b:	add    BYTE PTR [rax],al
  42336d:	add    BYTE PTR [rax],al
  42336f:	add    BYTE PTR [rax+0x68],al
  423372:	add    BYTE PTR [rax],al
  423375:	add    BYTE PTR [rax],al
  423377:	add    BYTE PTR [rax+0x29],dh
  42337a:	rex.X add BYTE PTR [rax],al
	...
  423385:	add    BYTE PTR [rax],al
  423387:	add    BYTE PTR [rdx+0x4229],dl
  42338d:	add    BYTE PTR [rax],al
  42338f:	add    BYTE PTR [rax],al
  423391:	or     BYTE PTR [rax],al
  423393:	add    BYTE PTR [rax],al
  423395:	add    BYTE PTR [rax],al
  423397:	add    BYTE PTR [rax+0x4068],dl
  42339d:	add    BYTE PTR [rax],al
  42339f:	add    BYTE PTR [rcx+rbp*1+0x42],bl
	...
  4233ae:	add    BYTE PTR [rax],al
  4233b0:	mov    ch,0x29
  4233b2:	rex.X add BYTE PTR [rax],al
  4233b5:	add    BYTE PTR [rax],al
  4233b7:	add    BYTE PTR [rax],al
  4233b9:	or     BYTE PTR [rax],al
  4233bb:	add    BYTE PTR [rax],al
  4233bd:	add    BYTE PTR [rax],al
  4233bf:	add    BYTE PTR [rax],dl
  4233c1:	imul   eax,DWORD PTR [rax+0x0],0x0
  4233c8:	mov    ebp,0x4229
	...
  4233d5:	add    BYTE PTR [rax],al
  4233d7:	add    ah,dl
  4233d9:	sub    DWORD PTR [rdx+0x0],eax
  4233dc:	add    BYTE PTR [rax],al
  4233de:	add    BYTE PTR [rax],al
  4233e0:	add    BYTE PTR [rax],cl
  4233e2:	add    BYTE PTR [rax],al
  4233e4:	add    BYTE PTR [rax],al
  4233e6:	add    BYTE PTR [rax],al
  4233e8:	xor    BYTE PTR [rbx+0x40],ch
  4233eb:	add    BYTE PTR [rax],al
  4233ed:	add    BYTE PTR [rax],al
  4233ef:	add    ch,bl
  4233f1:	sub    DWORD PTR [rdx+0x0],eax
	...
  423400:	cli    
  423401:	sub    DWORD PTR [rdx+0x0],eax
  423404:	add    BYTE PTR [rax],al
  423406:	add    BYTE PTR [rax],al
  423408:	add    BYTE PTR [rax],cl
  42340a:	add    BYTE PTR [rax],al
  42340c:	add    BYTE PTR [rax],al
  42340e:	add    BYTE PTR [rax],al
  423410:	xor    BYTE PTR [rax+rax*2+0x0],ch
  423414:	add    BYTE PTR [rax],al
  423416:	add    BYTE PTR [rax],al
  423418:	add    ch,BYTE PTR [rdx]
  42341a:	rex.X add BYTE PTR [rax],al
	...
  423425:	add    BYTE PTR [rax],al
  423427:	add    BYTE PTR [rax],ah
  423429:	sub    al,BYTE PTR [rdx+0x0]
  42342c:	add    BYTE PTR [rax],al
  42342e:	add    BYTE PTR [rax],al
  423430:	add    BYTE PTR [rax],cl
  423432:	add    BYTE PTR [rax],al
  423434:	add    BYTE PTR [rax],al
  423436:	add    BYTE PTR [rax],al
  423438:	(bad)  
  423439:	ins    DWORD PTR es:[rdi],dx
  42343a:	add    BYTE PTR [rax],al
  42343d:	add    BYTE PTR [rax],al
  42343f:	add    BYTE PTR [rax],dh
  423441:	sub    al,BYTE PTR [rdx+0x0]
	...
  423450:	push   rsp
  423451:	sub    al,BYTE PTR [rdx+0x0]
  423454:	add    BYTE PTR [rax],al
  423456:	add    BYTE PTR [rax],al
  423458:	add    BYTE PTR [rax],cl
  42345a:	add    BYTE PTR [rax],al
  42345c:	add    BYTE PTR [rax],al
  42345e:	add    BYTE PTR [rax],al
  423460:	shr    BYTE PTR [rdx+0x40],0x0
  423464:	add    BYTE PTR [rax],al
  423466:	add    BYTE PTR [rax],al
  423468:	pop    rbx
  423469:	sub    al,BYTE PTR [rdx+0x0]
	...
  423478:	jbe    0x4234a4
  42347a:	rex.X add BYTE PTR [rax],al
  42347d:	add    BYTE PTR [rax],al
  42347f:	add    BYTE PTR [rcx],al
  423481:	add    BYTE PTR [rax],al
  423483:	add    BYTE PTR [rax],al
  423485:	add    BYTE PTR [rax],al
  423487:	add    BYTE PTR [rax],dl
  423489:	rex.WRXB
  42348a:	add    BYTE PTR [rax],al
  42348d:	add    BYTE PTR [rax],al
  42348f:	add    BYTE PTR [rdi+0x2a],bh
  423492:	rex.X add BYTE PTR [rax],al
  423495:	add    BYTE PTR [rax],al
  423497:	add    BYTE PTR [rsi+0x2a],dh
  42349a:	rex.X add BYTE PTR [rax],al
  42349d:	add    BYTE PTR [rax],al
  42349f:	add    BYTE PTR [rcx+0x422a],dl
  4234a5:	add    BYTE PTR [rax],al
  4234a7:	add    BYTE PTR [rcx],al
  4234a9:	add    BYTE PTR [rax],al
  4234ab:	add    BYTE PTR [rax],al
  4234ad:	add    BYTE PTR [rax],al
  4234af:	add    BYTE PTR [rax],dl
  4234b1:	rex.WRXB
  4234b2:	add    BYTE PTR [rax],al
  4234b5:	add    BYTE PTR [rax],al
  4234b7:	add    BYTE PTR [rdi+0x2a],bh
  4234ba:	rex.X add BYTE PTR [rax],al
  4234bd:	add    BYTE PTR [rax],al
  4234bf:	add    BYTE PTR [rsi+0x2a],dh
  4234c2:	rex.X add BYTE PTR [rax],al
  4234c5:	add    BYTE PTR [rax],al
  4234c7:	add    BYTE PTR [rbx+0x422a],dl
	...
  4234d5:	add    BYTE PTR [rax],al
  4234d7:	add    BYTE PTR [rax],dl
  4234d9:	push   rsp
  4234da:	add    BYTE PTR [rax],al
  4234dd:	add    BYTE PTR [rax],al
  4234df:	add    BYTE PTR [rdx+0x422a],bl
	...
  4234ed:	add    BYTE PTR [rax],al
  4234ef:	add    BYTE PTR [rdx+rbp*1+0x42],ch
  4234f6:	add    BYTE PTR [rax],al
  4234f8:	add    DWORD PTR [rax],eax
  4234fa:	add    BYTE PTR [rax],al
  4234fc:	add    BYTE PTR [rax],al
  4234fe:	add    BYTE PTR [rax],al
  423500:	and    BYTE PTR [rax+rax*2+0x0],dl
  423504:	add    BYTE PTR [rax],al
  423506:	add    BYTE PTR [rax],al
  423508:	mov    eax,0x422a
  42350d:	add    BYTE PTR [rax],al
  42350f:	add    ch,ah
  423511:	sub    al,BYTE PTR [rdx+0x0]
  423514:	add    BYTE PTR [rax],al
  423516:	add    BYTE PTR [rax],al
  423518:	jmp    0x423544
  42351a:	rex.X add BYTE PTR [rax],al
  42351d:	add    BYTE PTR [rax],al
  42351f:	add    BYTE PTR [rip+0x0],al        # 0x423525
  423525:	add    BYTE PTR [rax],al
  423527:	add    al,dl
  423529:	rex.WRX
  42352a:	add    BYTE PTR [rax],al
  42352d:	add    BYTE PTR [rax],al
  42352f:	add    ah,dh
  423531:	sub    al,BYTE PTR [rdx+0x0]
  423534:	add    BYTE PTR [rax],al
  423536:	add    BYTE PTR [rax],al
  423538:	jl     0x42355b
  42353a:	rex.X add BYTE PTR [rax],al
  42353d:	add    BYTE PTR [rax],al
  42353f:	add    BYTE PTR [rip+0x422b],cl        # 0x427770
  423545:	add    BYTE PTR [rax],al
  423547:	add    BYTE PTR [rsi],al
  423549:	add    BYTE PTR [rax],al
  42354b:	add    BYTE PTR [rax],al
  42354d:	add    BYTE PTR [rax],al
  42354f:	add    BYTE PTR [rax],dh
  423551:	nop
  423552:	rex.X add BYTE PTR [rax],al
  423555:	add    BYTE PTR [rax],al
  423557:	add    BYTE PTR [rcx],bl
  423559:	sub    eax,DWORD PTR [rdx+0x0]
  42355c:	add    BYTE PTR [rax],al
  42355e:	add    BYTE PTR [rax],al
  423560:	or     eax,0x422b
  423565:	add    BYTE PTR [rax],al
  423567:	add    BYTE PTR [rbx+rbp*1],dh
  42356a:	rex.X add BYTE PTR [rax],al
  42356d:	add    BYTE PTR [rax],al
  42356f:	add    BYTE PTR [rcx],al
  423571:	or     BYTE PTR [rax],al
  423573:	add    BYTE PTR [rax],al
  423575:	add    BYTE PTR [rax],al
  423577:	add    BYTE PTR [rax+0x7b],ah
  42357a:	add    BYTE PTR [rax],al
  42357d:	add    BYTE PTR [rax],al
  42357f:	add    BYTE PTR [rax+0x2b],al
  423582:	rex.X add BYTE PTR [rax],al
  423585:	add    BYTE PTR [rax],al
  423587:	add    BYTE PTR [rcx+0x2b],ah
  42358a:	rex.X add BYTE PTR [rax],al
  42358d:	add    BYTE PTR [rax],al
  42358f:	add    BYTE PTR [rax+0x2b],ch
  423592:	rex.X add BYTE PTR [rax],al
  423595:	add    BYTE PTR [rax],al
  423597:	add    BYTE PTR [rcx],al
  423599:	or     BYTE PTR [rax],al
  42359b:	add    BYTE PTR [rax],al
  42359d:	add    BYTE PTR [rax],al
  42359f:	add    BYTE PTR [rax],ah
  4235a1:	jge    0x4235e3
  4235a3:	add    BYTE PTR [rax],al
  4235a5:	add    BYTE PTR [rax],al
  4235a7:	add    BYTE PTR [rax+0x2b],dh
  4235aa:	rex.X add BYTE PTR [rax],al
  4235ad:	add    BYTE PTR [rax],al
  4235af:	add    BYTE PTR [rcx+0x2b],ah
  4235b2:	rex.X add BYTE PTR [rax],al
  4235b5:	add    BYTE PTR [rax],al
  4235b7:	add    BYTE PTR [rax+0x422b],dl
  4235bd:	add    BYTE PTR [rax],al
  4235bf:	add    BYTE PTR [rcx],al
  4235c1:	add    BYTE PTR [rax],al
  4235c3:	add    BYTE PTR [rax],al
  4235c5:	add    BYTE PTR [rax],al
  4235c7:	add    BYTE PTR [rax-0x6c],ah
  4235ca:	add    BYTE PTR [rax],al
  4235cd:	add    BYTE PTR [rax],al
  4235cf:	add    BYTE PTR [rdx+0x422b],dl
  4235d5:	add    BYTE PTR [rax],al
  4235d7:	add    BYTE PTR [rcx+0x1e],bl
  4235da:	rex.X add BYTE PTR [rax],al
  4235dd:	add    BYTE PTR [rax],al
  4235df:	add    BYTE PTR [rbx],ch
  4235e1:	adc    eax,DWORD PTR [rdx+0x0]
  4235e4:	add    BYTE PTR [rax],al
  4235e6:	add    BYTE PTR [rax],al
  4235e8:	add    al,BYTE PTR [rax]
  4235ea:	add    BYTE PTR [rax],al
  4235ec:	add    BYTE PTR [rax],al
  4235ee:	add    BYTE PTR [rax],al
  4235f0:	cmp    al,0x93
  4235f2:	rex.X add BYTE PTR [rax],al
  4235f5:	add    BYTE PTR [rax],al
  4235f7:	add    BYTE PTR [rax+0x422b],ah
	...
  423605:	add    BYTE PTR [rax],al
  423607:	add    BYTE PTR [rax],dh
  423609:	adc    eax,DWORD PTR [rdx+0x0]
  42360c:	add    BYTE PTR [rax],al
  42360e:	add    BYTE PTR [rax],al
  423610:	add    al,BYTE PTR [rax]
  423612:	add    BYTE PTR [rax],al
  423614:	add    BYTE PTR [rax],al
  423616:	add    BYTE PTR [rax],al
  423618:	cmp    BYTE PTR [rbx+0x42],dl
  42361e:	add    BYTE PTR [rax],al
  423620:	enter  0x422b,0x0
	...
  423630:	icebp  
  423631:	sub    eax,DWORD PTR [rdx+0x0]
  423634:	add    BYTE PTR [rax],al
  423636:	add    BYTE PTR [rax],al
  423638:	add    al,BYTE PTR [rax]
  42363a:	add    BYTE PTR [rax],al
  42363c:	add    BYTE PTR [rax],al
  42363e:	add    BYTE PTR [rax],al
  423640:	xor    al,0x93
  423642:	rex.X add BYTE PTR [rax],al
  423645:	add    BYTE PTR [rax],al
  423647:	add    BYTE PTR [rax],cl
  423649:	sub    al,0x42
	...
  423657:	add    BYTE PTR [rbx],ch
  423659:	sub    al,0x42
  42365b:	add    BYTE PTR [rax],al
  42365d:	add    BYTE PTR [rax],al
  42365f:	add    BYTE PTR [rdx],al
  423661:	add    BYTE PTR [rax],al
  423663:	add    BYTE PTR [rax],al
  423665:	add    BYTE PTR [rax],al
  423667:	add    BYTE PTR [rax],dh
  423669:	xchg   ebx,eax
  42366a:	rex.X add BYTE PTR [rax],al
  42366d:	add    BYTE PTR [rax],al
  42366f:	add    BYTE PTR [rax],bh
  423671:	sub    al,0x42
	...
  42367f:	add    BYTE PTR [rdi+0x2c],dh
  423682:	rex.X add BYTE PTR [rax],al
	...
  42368d:	add    BYTE PTR [rax],al
  42368f:	add    al,al
  423691:	jg     0x4236d3
  423693:	add    BYTE PTR [rax],al
  423695:	add    BYTE PTR [rax],al
  423697:	add    BYTE PTR [rax+0x422c],al
	...
  4236a5:	add    BYTE PTR [rax],al
  4236a7:	add    ch,al
  4236a9:	sub    al,0x42
  4236ab:	add    BYTE PTR [rax],al
  4236ad:	add    BYTE PTR [rax],al
  4236af:	add    BYTE PTR [rcx],cl
  4236b1:	add    BYTE PTR [rax],al
  4236b3:	add    BYTE PTR [rax],al
  4236b5:	add    BYTE PTR [rax],al
  4236b7:	add    BYTE PTR [rax],ch
  4236b9:	xchg   ebx,eax
  4236ba:	rex.X add BYTE PTR [rax],al
  4236bd:	add    BYTE PTR [rax],al
  4236bf:	add    al,bl
  4236c1:	sub    al,0x42
  4236c3:	add    BYTE PTR [rax],al
  4236c5:	add    BYTE PTR [rax],al
  4236c7:	add    BYTE PTR [rcx+0x1e],bl
  4236ca:	rex.X add BYTE PTR [rax],al
  4236cd:	add    BYTE PTR [rax],al
  4236cf:	add    BYTE PTR [rbp*1+0x42],bh
  4236d6:	add    BYTE PTR [rax],al
  4236d8:	or     DWORD PTR [rax],eax
  4236da:	add    BYTE PTR [rax],al
  4236dc:	add    BYTE PTR [rax],al
  4236de:	add    BYTE PTR [rax],al
  4236e0:	sub    BYTE PTR [rbx+0x42],dl
  4236e6:	add    BYTE PTR [rax],al
  4236e8:	(bad)  
  4236e9:	sub    eax,0x42
  4236ee:	add    BYTE PTR [rax],al
  4236f0:	pop    rcx
  4236f1:	(bad)  
  4236f2:	rex.X add BYTE PTR [rax],al
  4236f5:	add    BYTE PTR [rax],al
  4236f7:	add    BYTE PTR [rdi+0x2d],dl
  4236fa:	rex.X add BYTE PTR [rax],al
  4236fd:	add    BYTE PTR [rax],al
  4236ff:	add    BYTE PTR [rcx],cl
  423701:	add    BYTE PTR [rax],al
  423703:	add    BYTE PTR [rax],al
  423705:	add    BYTE PTR [rax],al
  423707:	add    BYTE PTR [rax],ah
  423709:	xchg   ebx,eax
  42370a:	rex.X add BYTE PTR [rax],al
  42370d:	add    BYTE PTR [rax],al
  42370f:	add    BYTE PTR [rsi+0x2d],ah
  423712:	rex.X add BYTE PTR [rax],al
  423715:	add    BYTE PTR [rax],al
  423717:	add    BYTE PTR [rbx+0x422d],al
  42371d:	add    BYTE PTR [rax],al
  42371f:	add    BYTE PTR [rbp+rbp*1+0x42],dl
  423726:	add    BYTE PTR [rax],al
  423728:	add    BYTE PTR [rax],cl
  42372a:	add    BYTE PTR [rax],al
  42372c:	add    BYTE PTR [rax],al
  42372e:	add    BYTE PTR [rax],al
  423730:	nop
  423731:	mov    dh,0x40
  423733:	add    BYTE PTR [rax],al
  423735:	add    BYTE PTR [rax],al
  423737:	add    BYTE PTR [rax+0x422d],ah
	...
  423745:	add    BYTE PTR [rax],al
  423747:	add    bl,bl
  423749:	sub    eax,0x42
  42374e:	add    BYTE PTR [rax],al
  423750:	add    al,BYTE PTR [rax]
  423752:	add    BYTE PTR [rax],al
  423754:	add    BYTE PTR [rax],al
  423756:	add    BYTE PTR [rax],al
  423758:	push   0x4293
  42375d:	add    BYTE PTR [rax],al
  42375f:	add    ch,ah
  423761:	sub    eax,0x42
	...
  42376e:	add    BYTE PTR [rax],al
  423770:	imul   DWORD PTR [rip+0x42]        # 0x4237b8
  423776:	add    BYTE PTR [rax],al
  423778:	or     DWORD PTR [rax],eax
  42377a:	add    BYTE PTR [rax],al
  42377c:	add    BYTE PTR [rax],al
  42377e:	add    BYTE PTR [rax],al
  423780:	sbb    BYTE PTR [rbx+0x42],dl
  423786:	add    BYTE PTR [rax],al
  423788:	(bad)  
  423789:	rex.X add BYTE PTR cs:[rax],al
	...
  423795:	add    BYTE PTR [rax],al
  423797:	add    BYTE PTR [rip+0x422e],bl        # 0x4279cb
	...
  4237a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4237aa:	add    BYTE PTR [rax],al
  4237ad:	add    BYTE PTR [rax],al
  4237af:	add    BYTE PTR [rax],ch
  4237b1:	rex.X add BYTE PTR cs:[rax],al
	...
  4237bd:	add    BYTE PTR [rax],al
  4237bf:	add    BYTE PTR [rbx],bh
  4237c1:	rex.X add BYTE PTR cs:[rax],al
	...
  4237cd:	add    BYTE PTR [rax],al
  4237cf:	add    BYTE PTR [rax+0x40a6],al
  4237d5:	add    BYTE PTR [rax],al
  4237d7:	add    BYTE PTR [rdi+0x2e],al
  4237da:	rex.X add BYTE PTR [rax],al
	...
  4237e5:	add    BYTE PTR [rax],al
  4237e7:	add    BYTE PTR [rdx+0x2e],ah
  4237ea:	rex.X add BYTE PTR [rax],al
	...
  4237f5:	add    BYTE PTR [rax],al
  4237f7:	add    al,al
  4237f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4237fa:	add    BYTE PTR [rax],al
  4237fd:	add    BYTE PTR [rax],al
  4237ff:	add    BYTE PTR [rsi+0x2e],ch
  423802:	rex.X add BYTE PTR [rax],al
	...
  42380d:	add    BYTE PTR [rax],al
  42380f:	add    BYTE PTR [rdi+0x2e],bh
  423812:	rex.X add BYTE PTR [rax],al
  423815:	add    BYTE PTR [rax],al
  423817:	add    BYTE PTR [rcx],al
  423819:	add    BYTE PTR [rax],al
  42381b:	add    BYTE PTR [rax],al
  42381d:	add    BYTE PTR [rax],al
  42381f:	add    BYTE PTR [rax+0x40c4],ah
  423825:	add    BYTE PTR [rax],al
  423827:	add    BYTE PTR [rax+0x422e],bl
  42382d:	add    BYTE PTR [rax],al
  42382f:	add    bh,cl
  423831:	rex.X add BYTE PTR cs:[rax],al
  423835:	add    BYTE PTR [rax],al
  423837:	add    ch,dl
  423839:	rex.X add BYTE PTR cs:[rax],al
  42383d:	add    BYTE PTR [rax],al
  42383f:	add    BYTE PTR [rcx],al
  423841:	add    BYTE PTR [rax],al
  423843:	add    BYTE PTR [rax],al
  423845:	add    BYTE PTR [rax],al
  423847:	add    al,ah
  423849:	mov    edi,0x40
  42384e:	add    BYTE PTR [rax],al
  423850:	call   0x427a83
  423855:	add    BYTE PTR [rax],al
  423857:	add    BYTE PTR [rax],cl
  423859:	(bad)  
  42385a:	rex.X add BYTE PTR [rax],al
  42385d:	add    BYTE PTR [rax],al
  42385f:	add    BYTE PTR [rbx],dl
  423861:	(bad)  
  423862:	rex.X add BYTE PTR [rax],al
	...
  42386d:	add    BYTE PTR [rax],al
  42386f:	add    BYTE PTR [rax-0x5a],al
  423872:	add    BYTE PTR [rax],al
  423875:	add    BYTE PTR [rax],al
  423877:	add    BYTE PTR [rax],ah
  423879:	(bad)  
  42387a:	rex.X add BYTE PTR [rax],al
	...
  423885:	add    BYTE PTR [rax],al
  423887:	add    BYTE PTR [rdx],dh
  423889:	(bad)  
  42388a:	rex.X add BYTE PTR [rax],al
	...
  423899:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42389a:	add    BYTE PTR [rax],al
  42389d:	add    BYTE PTR [rax],al
  42389f:	add    BYTE PTR [rax+0x2f],al
  4238a2:	rex.X add BYTE PTR [rax],al
	...
  4238ad:	add    BYTE PTR [rax],al
  4238af:	add    BYTE PTR [rbx+0x2f],dl
  4238b2:	rex.X add BYTE PTR [rax],al
	...
  4238bd:	add    BYTE PTR [rax],al
  4238bf:	add    BYTE PTR [rax-0x5b],al
  4238c2:	add    BYTE PTR [rax],al
  4238c5:	add    BYTE PTR [rax],al
  4238c7:	add    BYTE PTR [rax+0x2f],ah
  4238ca:	rex.X add BYTE PTR [rax],al
	...
  4238d5:	add    BYTE PTR [rax],al
  4238d7:	add    BYTE PTR [rdx+0x2f],dh
  4238da:	rex.X add BYTE PTR [rax],al
	...
  4238e5:	add    BYTE PTR [rax],al
  4238e7:	add    BYTE PTR [rax+0x40a5],al
  4238ed:	add    BYTE PTR [rax],al
  4238ef:	add    BYTE PTR [rax+0x422f],al
	...
  4238fd:	add    BYTE PTR [rax],al
  4238ff:	add    BYTE PTR [rbx+0x422f],dl
  423905:	add    BYTE PTR [rax],al
  423907:	add    BYTE PTR [rdx],al
  423909:	add    BYTE PTR [rax],al
  42390b:	add    BYTE PTR [rax],al
  42390d:	add    BYTE PTR [rax],al
  42390f:	add    BYTE PTR [rax+0x4293],bl
  423915:	add    BYTE PTR [rax],al
  423917:	add    BYTE PTR [rax+0x422f],ah
	...
  423925:	add    BYTE PTR [rax],al
  423927:	add    dh,al
  423929:	(bad)  
  42392a:	rex.X add BYTE PTR [rax],al
  42392d:	add    BYTE PTR [rax],al
  42392f:	add    BYTE PTR [rdx],al
  423931:	add    BYTE PTR [rax],al
  423933:	add    BYTE PTR [rax],al
  423935:	add    BYTE PTR [rax],al
  423937:	add    BYTE PTR [rbx+rdx*4+0x42],dl
  42393e:	add    BYTE PTR [rax],al
  423940:	fsubr  DWORD PTR [rdi]
  423942:	rex.X add BYTE PTR [rax],al
	...
  42394d:	add    BYTE PTR [rax],al
  42394f:	add    bh,bh
  423951:	(bad)  
  423952:	rex.X add BYTE PTR [rax],al
	...
  42395d:	add    BYTE PTR [rax],al
  42395f:	add    al,al
  423961:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  423962:	add    BYTE PTR [rax],al
  423965:	add    BYTE PTR [rax],al
  423967:	add    BYTE PTR [rax+rsi*1],dl
  42396a:	rex.X add BYTE PTR [rax],al
	...
  423975:	add    BYTE PTR [rax],al
  423977:	add    BYTE PTR [rcx],ch
  423979:	xor    BYTE PTR [rdx+0x0],al
	...
  423988:	shl    BYTE PTR [rsi+0x40],0x0
  42398f:	add    BYTE PTR [rdi],bh
  423991:	xor    BYTE PTR [rdx+0x0],al
	...
  4239a0:	push   rbp
  4239a1:	xor    BYTE PTR [rdx+0x0],al
	...
  4239b0:	and    bl,cl
  4239b2:	add    BYTE PTR [rax],al
  4239b5:	add    BYTE PTR [rax],al
  4239b7:	add    BYTE PTR [rax+0x30],ch
  4239ba:	rex.X add BYTE PTR [rax],al
	...
  4239c5:	add    BYTE PTR [rax],al
  4239c7:	add    BYTE PTR [rdx+0x4230],cl
	...
  4239d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4239da:	add    BYTE PTR [rax],al
  4239dd:	add    BYTE PTR [rax],al
  4239df:	add    BYTE PTR [rax+0x4230],ah
	...
  4239ed:	add    BYTE PTR [rax],al
  4239ef:	add    BYTE PTR [rdi+0x4230],bh
  4239f5:	add    BYTE PTR [rax],al
  4239f7:	add    BYTE PTR [rdx],al
  4239f9:	add    BYTE PTR [rax],al
  4239fb:	add    BYTE PTR [rax],al
  4239fd:	add    BYTE PTR [rax],al
  4239ff:	add    BYTE PTR [rax],ah
  423a01:	loopne 0x423a44
  423a03:	add    BYTE PTR [rax],al
  423a05:	add    BYTE PTR [rax],al
  423a07:	add    cl,dl
  423a09:	xor    BYTE PTR [rdx+0x0],al
	...
  423a18:	xchg   ebp,eax
  423a19:	adc    al,BYTE PTR [rdx+0x0]
  423a1c:	add    BYTE PTR [rax],al
  423a1e:	add    BYTE PTR [rax],al
  423a20:	add    al,BYTE PTR [rax]
  423a22:	add    BYTE PTR [rax],al
  423a24:	add    BYTE PTR [rax],al
  423a26:	add    BYTE PTR [rax],al
  423a28:	and    al,ah
  423a2a:	add    BYTE PTR [r8],al
  423a2d:	add    BYTE PTR [rax],al
  423a2f:	add    bl,ah
  423a31:	xor    BYTE PTR [rdx+0x0],al
	...
  423a40:	std    
  423a41:	xor    BYTE PTR [rdx+0x0],al
  423a44:	add    BYTE PTR [rax],al
  423a46:	add    BYTE PTR [rax],al
  423a48:	add    al,BYTE PTR [rax]
  423a4a:	add    BYTE PTR [rax],al
  423a4c:	add    BYTE PTR [rax],al
  423a4e:	add    BYTE PTR [rax],al
  423a50:	pushf  
  423a51:	xchg   ebx,eax
  423a52:	rex.X add BYTE PTR [rax],al
  423a55:	add    BYTE PTR [rax],al
  423a57:	add    BYTE PTR [rsi],al
  423a59:	xor    DWORD PTR [rdx+0x0],eax
	...
  423a68:	sbb    al,0x31
  423a6a:	rex.X add BYTE PTR [rax],al
  423a6d:	add    BYTE PTR [rax],al
  423a6f:	add    BYTE PTR [rcx],al
  423a71:	add    BYTE PTR [rax],al
  423a73:	add    BYTE PTR [rax],al
  423a75:	add    BYTE PTR [rax],al
  423a77:	add    BYTE PTR [rax+0x409e],ah
  423a7d:	add    BYTE PTR [rax],al
  423a7f:	add    BYTE PTR [rbx],ch
  423a81:	xor    DWORD PTR [rdx+0x0],eax
  423a84:	add    BYTE PTR [rax],al
  423a86:	add    BYTE PTR [rax],al
  423a88:	sbb    al,0x31
  423a8a:	rex.X add BYTE PTR [rax],al
  423a8d:	add    BYTE PTR [rax],al
  423a8f:	add    BYTE PTR [rax+0x420e],al
  423a95:	add    BYTE PTR [rax],al
  423a97:	add    BYTE PTR [rip+0x0],dh        # 0x423a9d
  423a9d:	add    BYTE PTR [rax],al
  423a9f:	add    BYTE PTR [rax+0x403e],al
  423aa5:	add    BYTE PTR [rax],al
  423aa7:	add    BYTE PTR [rsi],bh
  423aa9:	xor    DWORD PTR [rdx+0x0],eax
  423aac:	add    BYTE PTR [rax],al
  423aae:	add    BYTE PTR [rax],al
  423ab0:	ret    
  423ab1:	(bad)  
  423ab2:	rex.X add BYTE PTR [rax],al
  423ab5:	add    BYTE PTR [rax],al
  423ab7:	add    BYTE PTR [rdi+0x31],dl
  423aba:	rex.X add BYTE PTR [rax],al
  423abd:	add    BYTE PTR [rax],al
  423abf:	add    BYTE PTR [rcx],al
  423ac1:	add    BYTE PTR [rax],al
  423ac3:	add    BYTE PTR [rax],al
  423ac5:	add    BYTE PTR [rax],al
  423ac7:	add    BYTE PTR [rax+0x40ac],al
  423acd:	add    BYTE PTR [rax],al
  423acf:	add    BYTE PTR [rcx+0x31],bl
  423ad2:	rex.X add BYTE PTR [rax],al
  423ad5:	add    BYTE PTR [rax],al
  423ad7:	add    BYTE PTR [rbp+0x31],ch
  423ada:	rex.X add BYTE PTR [rax],al
	...
  423b3d:	add    BYTE PTR [rax],al
  423b3f:	add    BYTE PTR [rsi+rcx*1+0x42],ch
  423b46:	add    BYTE PTR [rax],al
  423b48:	mov    al,0x7f
  423b4a:	add    BYTE PTR [rax],al
  423b4d:	add    BYTE PTR [rax],al
  423b4f:	add    BYTE PTR [rax+0x3c],al
  423b52:	rex.X add BYTE PTR [rax],al
	...
  423b8d:	add    BYTE PTR [rax],al
  423b8f:	add    BYTE PTR [rsi+0x75],ah
  423b92:	ins    BYTE PTR es:[rdi],dx
  423b93:	ins    BYTE PTR es:[rdi],dx
  423b94:	jns    0x423bf5
  423b96:	jno    0x423c0d
  423b98:	(bad)  
  423b99:	ins    BYTE PTR es:[rdi],dx
  423b9a:	imul   esp,DWORD PTR [rsi+0x69],0x73006465
  423ba1:	jo     0x423c08
  423ba3:	movsxd ebp,DWORD PTR [rcx+0x66]
  423ba6:	jns    0x423bc8
  423ba8:	imul   esp,DWORD PTR [rsi+0x20],0x20656874
  423baf:	outs   dx,DWORD PTR ds:[rsi]
  423bb0:	jne    0x423c26
  423bb2:	jo     0x423c29
  423bb4:	je     0x423bd6
  423bb6:	jae    0x423c20
  423bb8:	outs   dx,DWORD PTR ds:[rsi]
  423bb9:	jne    0x423c27
  423bbb:	and    BYTE PTR fs:[rdx+0x65],ah
  423bbf:	and    BYTE PTR [rsi+0x75],ah
  423bc2:	ins    BYTE PTR es:[rdi],dx
  423bc3:	ins    BYTE PTR es:[rdi],dx
  423bc4:	jns    0x423be6
  423bc6:	jno    0x423c3d
  423bc8:	(bad)  
  423bc9:	ins    BYTE PTR es:[rdi],dx
  423bca:	imul   esp,DWORD PTR [rsi+0x69],0x71006465
  423bd1:	add    BYTE PTR [rax+0x73],bh
  423bd4:	fs pop rdi
  423bd6:	jae    0x423c4c
  423bd8:	jb     0x423c43
  423bda:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  423bde:	add    BYTE PTR [rax],al
  423be0:	outs   dx,BYTE PTR gs:[rsi]
  423be2:	jae    0x423c59
  423be4:	jb     0x423c4b
  423be6:	and    BYTE PTR [rax+rbp*2+0x61],dh
  423bea:	je     0x423c0c
  423bec:	je     0x423c56
  423bee:	and    BYTE PTR gs:[rdi+0x75],ch
  423bf2:	je     0x423c64
  423bf4:	jne    0x423c6a
  423bf6:	and    BYTE PTR [rcx+0x73],ch
  423bf9:	and    BYTE PTR [rax+0x53],bl
  423bfc:	and    BYTE PTR [rbx+0x6f],r12b
  423c00:	ins    DWORD PTR es:[rdi],dx
  423c01:	jo     0x423c6f
  423c03:	imul   esp,DWORD PTR [rcx+0x6e],0x780074
	...
  423c3e:	add    BYTE PTR [rax],al
  423c40:	nop
  423c41:	cmp    eax,DWORD PTR [rdx+0x0]
  423c44:	add    BYTE PTR [rax],al
  423c46:	add    BYTE PTR [rax],al
  423c48:	movabs al,ds:0x100000000000423b
  423c51:	add    BYTE PTR [rax],al
  423c53:	add    BYTE PTR [rcx],al
	...
  423c6d:	add    al,dh
  423c6f:	(bad)  
	...
  423c80:	sar    BYTE PTR [rbx],1
  423c82:	rex.X add BYTE PTR [rax],al
  423c85:	add    BYTE PTR [rax],al
  423c87:	add    BYTE PTR [rax+0x423b],ah
  423c8d:	add    BYTE PTR [rax],al
  423c8f:	add    BYTE PTR [rax],dl
  423c91:	add    BYTE PTR [rax],al
  423c93:	add    BYTE PTR [rcx],al
	...
  423cad:	add    al,dh
  423caf:	(bad)  
	...
  423cc0:	sar    BYTE PTR [rbx],cl
  423cc2:	rex.X add BYTE PTR [rax],al
  423cc5:	add    BYTE PTR [rax],al
  423cc7:	add    al,ah
  423cc9:	cmp    eax,DWORD PTR [rdx+0x0]
  423ccc:	add    BYTE PTR [rax],al
  423cce:	add    BYTE PTR [rax],al
  423cd0:	adc    al,0x0
  423cd2:	add    BYTE PTR [rax],al
  423cd4:	add    DWORD PTR [rax],eax
	...
  423cee:	lock (bad) 
	...
  423d00:	or     BYTE PTR [rdx+rax*2],bh
  423d03:	add    BYTE PTR [rax],al
  423d05:	add    BYTE PTR [rax],al
  423d07:	add    al,ah
  423d09:	cmp    eax,DWORD PTR [rdx+0x0]
  423d0c:	add    BYTE PTR [rax],al
  423d0e:	add    BYTE PTR [rax],al
  423d10:	adc    al,0x0
  423d12:	add    BYTE PTR [rax],al
  423d14:	add    DWORD PTR [rax],eax
	...
  423d2e:	lock (bad) 
	...
  423d80:	add    BYTE PTR [rsi],bh
  423d82:	rex.X add BYTE PTR [rax],al
  423d85:	add    BYTE PTR [rax],al
  423d87:	add    BYTE PTR [rax],ah
  423d89:	add    BYTE PTR [rax],al
  423d8b:	add    BYTE PTR [rax],al
  423d8d:	add    BYTE PTR [rax],al
  423d8f:	add    BYTE PTR [rbp+0x420e],bl
  423d95:	add    BYTE PTR [rax],al
  423d97:	add    BYTE PTR [rax-0x64],al
  423d9a:	add    BYTE PTR [r8],al
	...
  423da5:	add    BYTE PTR [rax],al
  423da7:	add    BYTE PTR [rax+0x40bc],dh
  423dad:	add    BYTE PTR [rax],al
  423daf:	add    BYTE PTR [rax-0x7e],dh
  423db2:	add    BYTE PTR [rax],al
  423db5:	add    BYTE PTR [rax],al
  423db7:	add    al,dh
  423db9:	mov    eax,0x40
	...
  423dc6:	add    BYTE PTR [rax],al
  423dc8:	rex mov esp,0x40
  423dce:	add    BYTE PTR [rax],al
  423dd0:	add    al,BYTE PTR [rax]
	...
  423dfe:	add    BYTE PTR [rax],al
  423e00:	popf   
  423e01:	(bad)  
  423e02:	rex.X add BYTE PTR [rax],al
  423e05:	add    BYTE PTR [rax],al
  423e07:	add    BYTE PTR [rax+0x407f],ah
  423e0d:	add    BYTE PTR [rax],al
  423e0f:	add    BYTE PTR [rax+0x423e],al
	...
  423e4d:	add    BYTE PTR [rax],al
  423e4f:	add    BYTE PTR [rbp+0x6e],ah
  423e52:	(bad)  
  423e53:	(bad)  
  423e54:	ins    BYTE PTR es:[rdi],dx
  423e55:	and    BYTE PTR gs:[rbx+0x6f],ah
  423e59:	ins    DWORD PTR es:[rdi],dx
  423e5a:	jo     0x423ebd
  423e5c:	movsxd esi,DWORD PTR [rax+riz*1+0x6f]
  423e60:	jne    0x423ed6
  423e62:	jo     0x423ed9
  423e64:	je     0x423e66
	...
  423e7e:	add    BYTE PTR [rax],al
  423e80:	mov    BYTE PTR [rsi],cl
  423e82:	rex.X add BYTE PTR [rax],al
  423e85:	add    BYTE PTR [rax],al
  423e87:	add    BYTE PTR [rax+0x3e],dl
  423e8a:	rex.X add BYTE PTR [rax],al
  423e8d:	add    BYTE PTR [rax],al
  423e8f:	add    BYTE PTR [rax+rax*1],cl
  423e92:	add    BYTE PTR [rax],al
  423e94:	add    DWORD PTR [rax],eax
	...
  423eae:	lock (bad) 
	...
  423ec0:	jns    0x423ed4
  423ec2:	rex.X add BYTE PTR [rax],al
  423ec5:	add    BYTE PTR [rax],al
  423ec7:	add    BYTE PTR [rax+0x3e],dl
  423eca:	rex.X add BYTE PTR [rax],al
  423ecd:	add    BYTE PTR [rax],al
  423ecf:	add    BYTE PTR [rax+rax*1],cl
  423ed2:	add    BYTE PTR [rax],al
  423ed4:	add    DWORD PTR [rax],eax
	...
  423eee:	lock (bad) 
	...
  423f40:	sar    BYTE PTR [rdi],0x42
  423f43:	add    BYTE PTR [rax],al
  423f45:	add    BYTE PTR [rax],al
  423f47:	add    BYTE PTR [rax],dl
  423f49:	add    BYTE PTR [rax],al
  423f4b:	add    BYTE PTR [rax],al
  423f4d:	add    BYTE PTR [rax],al
  423f4f:	add    BYTE PTR [rcx+0x420e],bl
	...
  423f65:	add    BYTE PTR [rax],al
  423f67:	add    BYTE PTR [rax-0x7a],dh
  423f6a:	add    BYTE PTR [rax],al
	...
  423f75:	add    BYTE PTR [rax],al
  423f77:	add    BYTE PTR [rax],dh
  423f79:	add    DWORD PTR [rax+0x0],0x0
	...
  423f85:	add    BYTE PTR [rax],al
  423f87:	add    BYTE PTR [rax-0x73],ah
  423f8a:	add    BYTE PTR [rax],al
  423f8d:	add    BYTE PTR [rax],al
  423f8f:	add    BYTE PTR [rbx],al
	...
  423fbd:	add    BYTE PTR [rax],al
  423fbf:	add    BYTE PTR [rcx+0x420e],bl
  423fc5:	add    BYTE PTR [rax],al
  423fc7:	add    BYTE PTR [rax+0x407f],dl
  423fcd:	add    BYTE PTR [rax],al
  423fcf:	add    BYTE PTR [rax+0x4240],al
	...
  42400d:	add    BYTE PTR [rax],al
  42400f:	add    BYTE PTR [rax+0x69],ch
  424012:	gs jb  0x424076
  424015:	jb     0x42407a
  424017:	push   0x6c616369
  42401c:	add    BYTE PTR [rax],al
  42401e:	add    BYTE PTR [rax],al
  424020:	jae    0x424092
  424022:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  424026:	jns    0x424048
  424028:	imul   esp,DWORD PTR [rsi+0x20],0x20656874
  42402f:	jae    0x424096
  424031:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  424035:	outs   dx,BYTE PTR ds:[rsi]
  424036:	and    BYTE PTR [rbx+0x70],dh
  424039:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42403d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
  424044:	and    BYTE PTR [rbx+0x68],dh
  424047:	outs   dx,DWORD PTR ds:[rsi]
  424048:	jne    0x4240b6
  42404a:	and    BYTE PTR fs:[rdx+0x65],ah
  42404e:	and    BYTE PTR [rax+0x69],ch
  424051:	gs jb  0x4240b5
  424054:	jb     0x4240b9
  424056:	push   0x6c616369
	...
  42407f:	add    BYTE PTR [rax],dl
  424081:	rex
  424082:	rex.X add BYTE PTR [rax],al
  424085:	add    BYTE PTR [rax],al
  424087:	add    BYTE PTR [rax],ah
  424089:	rex
  42408a:	rex.X add BYTE PTR [rax],al
  42408d:	add    BYTE PTR [rax],al
  42408f:	add    BYTE PTR [rax],cl
  424091:	add    BYTE PTR [rax],al
  424093:	add    BYTE PTR [rcx],al
  424095:	add    BYTE PTR [rax],al
  424097:	add    BYTE PTR [rcx],al
	...
  4240ad:	add    al,dh
  4240af:	(bad)  
	...
  4240c0:	jge    0x4240ea
  4240c2:	rex.X add BYTE PTR [rax],al
  4240c5:	add    BYTE PTR [rax],al
  4240c7:	add    BYTE PTR [rax],ah
  4240c9:	rex
  4240ca:	rex.X add BYTE PTR [rax],al
  4240cd:	add    BYTE PTR [rax],al
  4240cf:	add    BYTE PTR [rax],cl
  4240d1:	add    BYTE PTR [rax],al
  4240d3:	add    BYTE PTR [rcx],al
  4240d5:	add    BYTE PTR [rax],al
  4240d7:	add    BYTE PTR [rcx],al
	...
  4240ed:	add    al,dh
  4240ef:	(bad)  
	...
  424140:	rol    BYTE PTR [rcx+0x42],0x0
  424144:	add    BYTE PTR [rax],al
  424146:	add    BYTE PTR [rax],al
  424148:	sbb    BYTE PTR [rax],al
  42414a:	add    BYTE PTR [rax],al
  42414c:	add    BYTE PTR [rax],al
  42414e:	add    BYTE PTR [rax],al
  424150:	xchg   esp,eax
  424151:	(bad)  
  424152:	rex.X add BYTE PTR [rax],al
  424155:	add    BYTE PTR [rax],al
  424157:	add    BYTE PTR [rax-0x64],bh
  42415a:	add    BYTE PTR [r8],al
	...
  424169:	mov    BYTE PTR [rax+0x0],al
	...
  424178:	rex add DWORD PTR [rax+0x0],0x0
	...
  424185:	add    BYTE PTR [rax],al
  424187:	add    al,ah
  424189:	lea    eax,[rax+0x0]
  42418c:	add    BYTE PTR [rax],al
  42418e:	add    BYTE PTR [rax],al
  424190:	add    eax,DWORD PTR [rax]
	...
  4241be:	add    BYTE PTR [rax],al
  4241c0:	xchg   esp,eax
  4241c1:	(bad)  
  4241c2:	rex.X add BYTE PTR [rax],al
  4241c5:	add    BYTE PTR [rax],al
  4241c7:	add    BYTE PTR [rax+0x407f],al
  4241cd:	add    BYTE PTR [rax],al
  4241cf:	add    BYTE PTR [rax+0x42],al
  4241d2:	rex.X add BYTE PTR [rax],al
	...
  42420d:	add    BYTE PTR [rax],al
  42420f:	add    BYTE PTR [rbx+0x65],dh
  424212:	jo     0x424273
  424214:	movsxd ebp,DWORD PTR [rax+0x61]
  424217:	jb     0x424219
  424219:	jae    0x424280
  42421b:	je     0x42423d
  42421d:	jae    0x424284
  42421f:	jo     0x424282
  424221:	jb     0x424284
  424223:	je     0x424294
  424225:	jb     0x424227
  424227:	jae    0x424229
	...
  42423d:	add    BYTE PTR [rax],al
  42423f:	add    BYTE PTR [rax],dl
  424241:	rex.X
  424242:	rex.X add BYTE PTR [rax],al
  424245:	add    BYTE PTR [rax],al
  424247:	add    BYTE PTR [rcx],bl
  424249:	rex.X
  42424a:	rex.X add BYTE PTR [rax],al
  42424d:	add    BYTE PTR [rax],al
  42424f:	add    BYTE PTR [rax],cl
  424251:	add    BYTE PTR [rax],al
  424253:	add    BYTE PTR [rip+0x1e000000],al        # 0x1e424259
  424259:	adc    BYTE PTR [rdx+0x0],al
	...
  424264:	add    BYTE PTR [rax],al
  424266:	(bad)  
  424267:	rol    BYTE PTR [rax],0x0
  42426a:	add    BYTE PTR [rax],al
  42426c:	add    al,al
  42426e:	pop    rdi
  42426f:	add    BYTE PTR [rax],al
	...
  42427e:	add    BYTE PTR [rax],al
  424280:	(bad)  
  424281:	rex.X
  424282:	rex.X add BYTE PTR [rax],al
  424285:	add    BYTE PTR [rax],al
  424287:	add    BYTE PTR [rcx],bl
  424289:	rex.X
  42428a:	rex.X add BYTE PTR [rax],al
  42428d:	add    BYTE PTR [rax],al
  42428f:	add    BYTE PTR [rax],cl
  424291:	add    BYTE PTR [rax],al
  424293:	add    BYTE PTR [rip+0x1e000000],al        # 0x1e424299
  424299:	adc    BYTE PTR [rdx+0x0],al
	...
  4242a4:	add    BYTE PTR [rax],al
  4242a6:	(bad)  
  4242a7:	rol    BYTE PTR [rax],0x0
  4242aa:	add    BYTE PTR [rax],al
  4242ac:	add    al,al
  4242ae:	pop    rdi
  4242af:	add    BYTE PTR [rax],al
	...
  4242be:	add    BYTE PTR [rax],al
  4242c0:	adc    BYTE PTR [rax+0x42],al
  4242c3:	add    BYTE PTR [rax],al
  4242c5:	add    BYTE PTR [rax],al
  4242c7:	add    BYTE PTR [rax],ah
  4242c9:	rex
  4242ca:	rex.X add BYTE PTR [rax],al
  4242cd:	add    BYTE PTR [rax],al
  4242cf:	add    BYTE PTR [rax+rax*1],dl
  4242d2:	add    BYTE PTR [rax],al
  4242d4:	add    DWORD PTR [rax],eax
  4242d6:	add    BYTE PTR [rax],al
  4242d8:	add    DWORD PTR [rax],eax
	...
  4242ee:	lock (bad) 
	...
  424300:	jge    0x42432a
  424302:	rex.X add BYTE PTR [rax],al
  424305:	add    BYTE PTR [rax],al
  424307:	add    BYTE PTR [rax],ah
  424309:	rex
  42430a:	rex.X add BYTE PTR [rax],al
  42430d:	add    BYTE PTR [rax],al
  42430f:	add    BYTE PTR [rax+rax*1],dl
  424312:	add    BYTE PTR [rax],al
  424314:	add    DWORD PTR [rax],eax
  424316:	add    BYTE PTR [rax],al
  424318:	add    DWORD PTR [rax],eax
	...
  42432e:	lock (bad) 
	...
  424380:	add    BYTE PTR [rdx+rax*2+0x0],al
  424384:	add    BYTE PTR [rax],al
  424386:	add    BYTE PTR [rax],al
  424388:	test   al,0x0
  42438a:	add    BYTE PTR [rax],al
  42438c:	add    BYTE PTR [rax],al
  42438e:	add    BYTE PTR [rax],al
  424390:	nop
  424391:	(bad)  
  424392:	rex.X add BYTE PTR [rax],al
  424395:	add    BYTE PTR [rax],al
  424397:	add    dl,al
  424399:	pushf  
  42439a:	add    BYTE PTR [r8],al
	...
  4243a5:	add    BYTE PTR [rax],al
  4243a7:	add    BYTE PTR [rax],dl
  4243a9:	mov    DWORD PTR [rax+0x0],eax
  4243ac:	add    BYTE PTR [rax],al
  4243ae:	add    BYTE PTR [rax],al
  4243b0:	lock add DWORD PTR [rax+0x0],0x0
  4243b5:	add    BYTE PTR [rax],al
  4243b7:	add    BYTE PTR [rax-0x7d],dh
  4243ba:	add    BYTE PTR [rax],al
	...
  4243c5:	add    BYTE PTR [rax],al
  4243c7:	add    BYTE PTR [rax+0x4085],dh
  4243cd:	add    BYTE PTR [rax],al
  4243cf:	add    BYTE PTR [rcx],al
	...
  4243fd:	add    BYTE PTR [rax],al
  4243ff:	add    BYTE PTR [rax+0x420e],dl
  424405:	add    BYTE PTR [rax],al
  424407:	add    BYTE PTR [rax+0x7f],dh
  42440a:	add    BYTE PTR [rax],al
  42440d:	add    BYTE PTR [rax],al
  42440f:	add    BYTE PTR [rax],al
  424411:	rex.RB
  424412:	rex.X add BYTE PTR [rax],al
	...
  42444d:	add    BYTE PTR [rax],al
  42444f:	add    BYTE PTR [rcx+0x74],ch
  424452:	gs ins DWORD PTR es:[rdi],dx
  424454:	pop    rdi
  424455:	jae    0x4244bc
  424457:	jo     0x424459
  424459:	jae    0x4244c0
  42445b:	je     0x42447d
  42445d:	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x70657320
  424465:	(bad)  
  424466:	jb     0x4244c9
  424468:	je     0x4244d9
  42446a:	jb     0x42446c
  42446c:	sub    al,0x0
  42446e:	outs   dx,BYTE PTR ds:[rsi]
  42446f:	outs   dx,DWORD PTR ds:[rsi]
  424470:	imul   esp,DWORD PTR [rbp+0x79],0x0
  424474:	outs   dx,WORD PTR ds:[rsi]
  424476:	jb     0x4244db
  424478:	and    BYTE PTR gs:[rsi+0x6f],ch
  42447c:	and    BYTE PTR [rbx+0x65],ch
  42447f:	jns    0x4244a1
  424481:	jo     0x4244f5
  424483:	imul   ebp,DWORD PTR [rsi+0x74],0x676e69
  42448a:	outs   dx,BYTE PTR ds:[rsi]
  42448b:	imul   eax,DWORD PTR [rax],0x65
  42448e:	jae    0x4244f3
  424490:	(bad)  
  424491:	jo     0x4244f8
  424493:	add    BYTE PTR [rbx+0x65],dh
  424496:	je     0x4244b8
  424498:	gs jae 0x4244fe
  42449b:	(bad)  
  42449c:	jo     0x424503
  42449e:	and    BYTE PTR [rbp+0x6f],ch
  4244a1:	fs add BYTE PTR gs:[rbp+0x0],ah
  4244a6:	jo     0x42451a
  4244a8:	imul   ebp,DWORD PTR [rsi+0x74],0x6365735f
  4244af:	je     0x42451a
  4244b1:	outs   dx,DWORD PTR ds:[rsi]
  4244b2:	outs   dx,BYTE PTR ds:[rsi]
  4244b3:	add    BYTE PTR [rax+0x72],dh
  4244b6:	imul   ebp,DWORD PTR [rsi+0x74],0x63657320
  4244bd:	je     0x424528
  4244bf:	outs   dx,DWORD PTR ds:[rsi]
  4244c0:	outs   dx,BYTE PTR ds:[rsi]
  4244c1:	and    BYTE PTR [rsi+0x61],ch
  4244c4:	ins    DWORD PTR es:[rdi],dx
  4244c5:	add    BYTE PTR gs:[rax+0x0],dh
	...
  4244fd:	add    BYTE PTR [rax],al
  4244ff:	add    BYTE PTR [rax+0x44],dl
  424502:	rex.X add BYTE PTR [rax],al
  424505:	add    BYTE PTR [rax],al
  424507:	add    BYTE PTR [rcx+0x44],bl
  42450a:	rex.X add BYTE PTR [rax],al
  42450d:	add    BYTE PTR [rax],al
  42450f:	add    BYTE PTR [rax],cl
  424511:	add    BYTE PTR [rax],al
  424513:	add    BYTE PTR [rip+0x6c000000],al        # 0x6c424519
  424519:	rex.R
  42451a:	rex.X add BYTE PTR [rax],al
	...
  424525:	add    BYTE PTR [rax-0x40],ah
  424528:	add    BYTE PTR [rax],al
  42452a:	add    BYTE PTR [rax],al
  42452c:	add    al,al
  42452e:	pop    rdi
  42452f:	add    BYTE PTR [rax],al
	...
  42453e:	add    BYTE PTR [rax],al
  424540:	(bad)  
  424541:	rex.X
  424542:	rex.X add BYTE PTR [rax],al
  424545:	add    BYTE PTR [rax],al
  424547:	add    BYTE PTR [rcx+0x44],bl
  42454a:	rex.X add BYTE PTR [rax],al
  42454d:	add    BYTE PTR [rax],al
  42454f:	add    BYTE PTR [rax],cl
  424551:	add    BYTE PTR [rax],al
  424553:	add    BYTE PTR [rip+0x6c000000],al        # 0x6c424559
  424559:	rex.R
  42455a:	rex.X add BYTE PTR [rax],al
	...
  424565:	add    BYTE PTR [rax-0x40],ah
  424568:	add    BYTE PTR [rax],al
  42456a:	add    BYTE PTR [rax],al
  42456c:	add    al,al
  42456e:	pop    rdi
  42456f:	add    BYTE PTR [rax],al
	...
  42457e:	add    BYTE PTR [rax],al
  424580:	outs   dx,BYTE PTR ds:[rsi]
  424581:	rex.R
  424582:	rex.X add BYTE PTR [rax],al
  424585:	add    BYTE PTR [rax],al
  424587:	add    BYTE PTR [rsp+rax*2+0x42],dh
  42458b:	add    BYTE PTR [rax],al
  42458d:	add    BYTE PTR [rax],al
  42458f:	add    BYTE PTR [rax+rax*1],dl
  424592:	add    BYTE PTR [rax],al
  424594:	add    DWORD PTR [rax],eax
  424596:	add    BYTE PTR [rax],al
  424598:	add    DWORD PTR [rax],eax
	...
  4245ae:	lock (bad) 
	...
  4245c0:	mov    al,BYTE PTR [rdx+rax*2+0x0]
  4245c4:	add    BYTE PTR [rax],al
  4245c6:	add    BYTE PTR [rax],al
  4245c8:	je     0x42460e
  4245ca:	rex.X add BYTE PTR [rax],al
  4245cd:	add    BYTE PTR [rax],al
  4245cf:	add    BYTE PTR [rax+rax*1],dl
  4245d2:	add    BYTE PTR [rax],al
  4245d4:	add    DWORD PTR [rax],eax
  4245d6:	add    BYTE PTR [rax],al
  4245d8:	add    DWORD PTR [rax],eax
	...
  4245ee:	lock (bad) 
	...
  424600:	lea    eax,[rdx+rax*2+0x0]
  424604:	add    BYTE PTR [rax],al
  424606:	add    BYTE PTR [rax],al
  424608:	xchg   esp,eax
  424609:	rex.R
  42460a:	rex.X add BYTE PTR [rax],al
  42460d:	add    BYTE PTR [rax],al
  42460f:	add    BYTE PTR [rax],ah
  424611:	add    BYTE PTR [rax],al
  424613:	add    BYTE PTR [rip+0xffffffff90000000],al        # 0xffffffff90424619
  424619:	(bad)  
  42461a:	rex.X add BYTE PTR [rax],al
	...
  424625:	add    BYTE PTR [rax-0x40],ah
  424628:	add    BYTE PTR [rax],al
  42462a:	add    BYTE PTR [rax],al
  42462c:	add    al,al
  42462e:	pop    rdi
  42462f:	add    BYTE PTR [rax],al
	...
  42463e:	add    BYTE PTR [rax],al
  424640:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  424641:	rex.R
  424642:	rex.X add BYTE PTR [rax],al
  424645:	add    BYTE PTR [rax],al
  424647:	add    BYTE PTR [rsp+rax*2+0x42],dl
  42464e:	add    BYTE PTR [rax],al
  424650:	and    BYTE PTR [rax],al
  424652:	add    BYTE PTR [rax],al
  424654:	add    eax,0x90000000
  424659:	(bad)  
  42465a:	rex.X add BYTE PTR [rax],al
	...
  424665:	add    BYTE PTR [rax-0x40],ah
  424668:	add    BYTE PTR [rax],al
  42466a:	add    BYTE PTR [rax],al
  42466c:	add    al,al
  42466e:	pop    rdi
  42466f:	add    BYTE PTR [rax],al
	...
  42467e:	add    BYTE PTR [rax],al
  424680:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  424681:	rex.R
  424682:	rex.X add BYTE PTR [rax],al
  424685:	add    BYTE PTR [rax],al
  424687:	add    BYTE PTR [rsp+rax*2+0x42],dh
  42468e:	add    BYTE PTR [rax],al
  424690:	sbb    BYTE PTR [rax],al
  424692:	add    BYTE PTR [rax],al
  424694:	add    DWORD PTR [rax],eax
  424696:	add    BYTE PTR [rax],al
  424698:	add    DWORD PTR [rax],eax
	...
  4246ae:	lock (bad) 
	...
  4246c0:	mov    DWORD PTR [rdx+rax*2+0x0],0x0
  4246c8:	mov    ah,0x44
  4246ca:	rex.X add BYTE PTR [rax],al
  4246cd:	add    BYTE PTR [rax],al
  4246cf:	add    BYTE PTR [rax],bl
  4246d1:	add    BYTE PTR [rax],al
  4246d3:	add    BYTE PTR [rcx],al
  4246d5:	add    BYTE PTR [rax],al
  4246d7:	add    BYTE PTR [rcx],al
	...
  4246ed:	add    al,dh
  4246ef:	(bad)  
	...
  424740:	rol    BYTE PTR [rdi+0x42],0x0
  424744:	add    BYTE PTR [rax],al
  424746:	add    BYTE PTR [rax],al
  424748:	test   al,0x0
  42474a:	add    BYTE PTR [rax],al
  42474c:	add    BYTE PTR [rax],al
  42474e:	add    BYTE PTR [rax],al
  424750:	mov    BYTE PTR [rsi],cl
  424752:	rex.X add BYTE PTR [rax],al
  424755:	add    BYTE PTR [rax],al
  424757:	add    dl,al
  424759:	pushf  
  42475a:	add    BYTE PTR [r8],al
	...
  424765:	add    BYTE PTR [rax],al
  424767:	add    BYTE PTR [rax],dl
  424769:	mov    DWORD PTR [rax+0x0],eax
  42476c:	add    BYTE PTR [rax],al
  42476e:	add    BYTE PTR [rax],al
  424770:	lock add DWORD PTR [rax+0x0],0x0
  424775:	add    BYTE PTR [rax],al
  424777:	add    BYTE PTR [rax-0x7d],dh
  42477a:	add    BYTE PTR [rax],al
	...
  424785:	add    BYTE PTR [rax],al
  424787:	add    BYTE PTR [rax+0x4085],dh
  42478d:	add    BYTE PTR [rax],al
  42478f:	add    BYTE PTR [rcx],al
	...
  4247bd:	add    BYTE PTR [rax],al
  4247bf:	add    BYTE PTR [rax+0x420e],cl
  4247c5:	add    BYTE PTR [rax],al
  4247c7:	add    BYTE PTR [rax+0x7f],ah
  4247ca:	add    BYTE PTR [rax],al
  4247cd:	add    BYTE PTR [rax],al
  4247cf:	add    BYTE PTR [rax+0x48],al
  4247d2:	rex.X add BYTE PTR [rax],al
	...
  42480d:	add    BYTE PTR [rax],al
  42480f:	add    BYTE PTR [rax+rax*1+0x0],bh
	...
  42483f:	add    BYTE PTR [rax+0x44],dl
  424842:	rex.X add BYTE PTR [rax],al
  424845:	add    BYTE PTR [rax],al
  424847:	add    BYTE PTR [rcx+0x44],bl
  42484a:	rex.X add BYTE PTR [rax],al
  42484d:	add    BYTE PTR [rax],al
  42484f:	add    BYTE PTR [rax],cl
  424851:	add    BYTE PTR [rax],al
  424853:	add    BYTE PTR [rip+0x10000000],al        # 0x10424859
  424859:	rex.W
  42485a:	rex.X add BYTE PTR [rax],al
	...
  424865:	add    BYTE PTR [rax-0x40],ah
  424868:	add    BYTE PTR [rax],al
  42486a:	add    BYTE PTR [rax],al
  42486c:	add    al,al
  42486e:	pop    rdi
  42486f:	add    BYTE PTR [rax],al
	...
  42487e:	add    BYTE PTR [rax],al
  424880:	(bad)  
  424881:	rex.X
  424882:	rex.X add BYTE PTR [rax],al
  424885:	add    BYTE PTR [rax],al
  424887:	add    BYTE PTR [rcx+0x44],bl
  42488a:	rex.X add BYTE PTR [rax],al
  42488d:	add    BYTE PTR [rax],al
  42488f:	add    BYTE PTR [rax],cl
  424891:	add    BYTE PTR [rax],al
  424893:	add    BYTE PTR [rip+0x10000000],al        # 0x10424899
  424899:	rex.W
  42489a:	rex.X add BYTE PTR [rax],al
	...
  4248a5:	add    BYTE PTR [rax-0x40],ah
  4248a8:	add    BYTE PTR [rax],al
  4248aa:	add    BYTE PTR [rax],al
  4248ac:	add    al,al
  4248ae:	pop    rdi
  4248af:	add    BYTE PTR [rax],al
	...
  4248be:	add    BYTE PTR [rax],al
  4248c0:	outs   dx,BYTE PTR ds:[rsi]
  4248c1:	rex.R
  4248c2:	rex.X add BYTE PTR [rax],al
  4248c5:	add    BYTE PTR [rax],al
  4248c7:	add    BYTE PTR [rsp+rax*2+0x42],dh
  4248cb:	add    BYTE PTR [rax],al
  4248cd:	add    BYTE PTR [rax],al
  4248cf:	add    BYTE PTR [rax+rax*1],dl
  4248d2:	add    BYTE PTR [rax],al
  4248d4:	add    DWORD PTR [rax],eax
	...
  4248ee:	lock (bad) 
	...
  424900:	mov    al,BYTE PTR [rdx+rax*2+0x0]
  424904:	add    BYTE PTR [rax],al
  424906:	add    BYTE PTR [rax],al
  424908:	je     0x42494e
  42490a:	rex.X add BYTE PTR [rax],al
  42490d:	add    BYTE PTR [rax],al
  42490f:	add    BYTE PTR [rax+rax*1],dl
  424912:	add    BYTE PTR [rax],al
  424914:	add    DWORD PTR [rax],eax
	...
  42492e:	lock (bad) 
	...
  424940:	lea    eax,[rdx+rax*2+0x0]
  424944:	add    BYTE PTR [rax],al
  424946:	add    BYTE PTR [rax],al
  424948:	xchg   esp,eax
  424949:	rex.R
  42494a:	rex.X add BYTE PTR [rax],al
  42494d:	add    BYTE PTR [rax],al
  42494f:	add    BYTE PTR [rax],ah
  424951:	add    BYTE PTR [rax],al
  424953:	add    BYTE PTR [rip+0x79000000],al        # 0x79424959
  424959:	adc    al,BYTE PTR [rdx+0x0]
	...
  424964:	add    BYTE PTR [rax],al
  424966:	(bad)  
  424967:	rol    BYTE PTR [rax],0x0
  42496a:	add    BYTE PTR [rax],al
  42496c:	add    al,al
  42496e:	pop    rdi
  42496f:	add    BYTE PTR [rax],al
	...
  42497e:	add    BYTE PTR [rax],al
  424980:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  424981:	rex.R
  424982:	rex.X add BYTE PTR [rax],al
  424985:	add    BYTE PTR [rax],al
  424987:	add    BYTE PTR [rsp+rax*2+0x42],dl
  42498e:	add    BYTE PTR [rax],al
  424990:	and    BYTE PTR [rax],al
  424992:	add    BYTE PTR [rax],al
  424994:	add    eax,0x79000000
  424999:	adc    al,BYTE PTR [rdx+0x0]
	...
  4249a4:	add    BYTE PTR [rax],al
  4249a6:	(bad)  
  4249a7:	rol    BYTE PTR [rax],0x0
  4249aa:	add    BYTE PTR [rax],al
  4249ac:	add    al,al
  4249ae:	pop    rdi
  4249af:	add    BYTE PTR [rax],al
	...
  4249be:	add    BYTE PTR [rax],al
  4249c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4249c1:	rex.R
  4249c2:	rex.X add BYTE PTR [rax],al
  4249c5:	add    BYTE PTR [rax],al
  4249c7:	add    BYTE PTR [rsp+rax*2+0x42],dh
  4249ce:	add    BYTE PTR [rax],al
  4249d0:	sbb    BYTE PTR [rax],al
  4249d2:	add    BYTE PTR [rax],al
  4249d4:	add    DWORD PTR [rax],eax
  4249d6:	add    BYTE PTR [rax],al
  4249d8:	add    DWORD PTR [rax],eax
	...
  4249ee:	lock (bad) 
	...
  424a00:	mov    DWORD PTR [rdx+rax*2+0x0],0x0
  424a08:	mov    ah,0x44
  424a0a:	rex.X add BYTE PTR [rax],al
  424a0d:	add    BYTE PTR [rax],al
  424a0f:	add    BYTE PTR [rax],bl
  424a11:	add    BYTE PTR [rax],al
  424a13:	add    BYTE PTR [rcx],al
  424a15:	add    BYTE PTR [rax],al
  424a17:	add    BYTE PTR [rcx],al
	...
  424a2d:	add    al,dh
  424a2f:	(bad)  
	...
  424a80:	add    BYTE PTR [rbx+0x42],cl
  424a83:	add    BYTE PTR [rax],al
  424a85:	add    BYTE PTR [rax],al
  424a87:	add    BYTE PTR [rax],bh
  424a89:	add    BYTE PTR [rax],al
  424a8b:	add    BYTE PTR [rax],al
  424a8d:	add    BYTE PTR [rax],al
  424a8f:	add    BYTE PTR [rax+0x420e],al
	...
  424aa5:	add    BYTE PTR [rax],al
  424aa7:	add    BYTE PTR [rax-0x76],dh
  424aaa:	add    BYTE PTR [rax],al
  424aad:	add    BYTE PTR [rax],al
  424aaf:	add    al,dl
  424ab1:	test   BYTE PTR [rax+0x0],al
  424ab4:	add    BYTE PTR [rax],al
  424ab6:	add    BYTE PTR [rax],al
  424ab8:	add    BYTE PTR [rax+rax*2+0x0],0x0
	...
  424ac8:	xor    BYTE PTR [rax+rax*2+0x0],al
  424acf:	add    BYTE PTR [rcx],al
	...
  424afd:	add    BYTE PTR [rax],al
  424aff:	add    BYTE PTR [rax+0x420e],al
  424b05:	add    BYTE PTR [rax],al
  424b07:	add    BYTE PTR [rax+0x7f],al
  424b0a:	add    BYTE PTR [rax],al
  424b0d:	add    BYTE PTR [rax],al
  424b0f:	add    al,al
  424b11:	rex.WXB
  424b12:	rex.X add BYTE PTR [rax],al
	...
  424b4d:	add    BYTE PTR [rax],al
  424b4f:	add    BYTE PTR [rsi+0x6f],ch
  424b52:	jo     0x424bc6
  424b54:	imul   ebp,DWORD PTR [rsi+0x74],0x6172775f
  424b5b:	jo     0x424bcd
  424b5d:	gs jb  0x424bd3
	...
  424b68:	outs   dx,DWORD PTR fs:[rsi]
  424b6a:	and    BYTE PTR [rsi+0x6f],ch
  424b6d:	je     0x424b8f
  424b6f:	jo     0x424be3
  424b71:	imul   ebp,DWORD PTR [rsi+0x74],0x61656820
  424b78:	fs gs jb 0x424bef
  424b7c:	and    BYTE PTR [rcx+0x6e],ah
  424b7f:	and    BYTE PTR fs:[rsi+0x6f],ah
  424b83:	outs   dx,DWORD PTR ds:[rsi]
  424b84:	je     0x424beb
  424b86:	jb     0x424bfb
  424b88:	add    BYTE PTR [rsi+0x77],ch
	...
  424bbf:	add    BYTE PTR [rax+0x4b],dl
  424bc2:	rex.X add BYTE PTR [rax],al
  424bc5:	add    BYTE PTR [rax],al
  424bc7:	add    BYTE PTR [rax+0x4b],ch
  424bca:	rex.X add BYTE PTR [rax],al
  424bcd:	add    BYTE PTR [rax],al
  424bcf:	add    BYTE PTR [rax+rax*1],cl
  424bd2:	add    BYTE PTR [rax],al
  424bd4:	add    DWORD PTR [rax],eax
	...
  424bee:	lock (bad) 
	...
  424c00:	mov    DWORD PTR [rbx+0x42],ecx
  424c03:	add    BYTE PTR [rax],al
  424c05:	add    BYTE PTR [rax],al
  424c07:	add    BYTE PTR [rax+0x4b],ch
  424c0a:	rex.X add BYTE PTR [rax],al
  424c0d:	add    BYTE PTR [rax],al
  424c0f:	add    BYTE PTR [rax+rax*1],cl
  424c12:	add    BYTE PTR [rax],al
  424c14:	add    DWORD PTR [rax],eax
	...
  424c2e:	lock (bad) 
	...
  424c40:	outs   dx,BYTE PTR ds:[rsi]
  424c41:	rex.R
  424c42:	rex.X add BYTE PTR [rax],al
  424c45:	add    BYTE PTR [rax],al
  424c47:	add    BYTE PTR [rsp+rax*2+0x42],dh
  424c4b:	add    BYTE PTR [rax],al
  424c4d:	add    BYTE PTR [rax],al
  424c4f:	add    BYTE PTR [rax],cl
  424c51:	add    BYTE PTR [rax],al
  424c53:	add    BYTE PTR [rcx],al
	...
  424c6d:	add    al,dh
  424c6f:	(bad)  
	...
  424c80:	mov    al,BYTE PTR [rdx+rax*2+0x0]
  424c84:	add    BYTE PTR [rax],al
  424c86:	add    BYTE PTR [rax],al
  424c88:	je     0x424cce
  424c8a:	rex.X add BYTE PTR [rax],al
  424c8d:	add    BYTE PTR [rax],al
  424c8f:	add    BYTE PTR [rax],cl
  424c91:	add    BYTE PTR [rax],al
  424c93:	add    BYTE PTR [rcx],al
	...
  424cad:	add    al,dh
  424caf:	(bad)  
	...
  424d00:	push   rdi
  424d01:	jb     0x424d6c
  424d03:	je     0x424d6a
  424d05:	jb     0x424d07
	...
  424d3f:	add    BYTE PTR [rax],al
  424d41:	rex.WRB
  424d42:	rex.X add BYTE PTR [rax],al
  424d45:	add    BYTE PTR [rax],al
  424d47:	add    al,al
  424d49:	jle    0x424d8b
  424d4b:	add    BYTE PTR [rax],al
  424d4d:	add    BYTE PTR [rax],al
  424d4f:	add    BYTE PTR [rax+0x4e],al
  424d52:	rex.X add BYTE PTR [rax],al
  424d55:	add    BYTE PTR [rax],al
  424d57:	add    BYTE PTR [rdi+rbx*1+0x36],ah
	...
  424d67:	add    BYTE PTR [rax-0x6d],ah
  424d6a:	add    BYTE PTR [rax],al
	...
  424d8d:	add    BYTE PTR [rax],al
  424d8f:	add    BYTE PTR [rbx+0x74],dh
  424d92:	jb     0x424dfd
  424d94:	outs   dx,BYTE PTR ds:[rsi]
  424d95:	addr32 pop rdi
  424d97:	jbe    0x424dfa
  424d99:	ins    BYTE PTR es:[rdi],dx
  424d9a:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x6e6f69
  424da2:	jae    0x424e09
  424da4:	je     0x424dc6
  424da6:	jae    0x424e1c
  424da8:	jb     0x424e13
  424daa:	outs   dx,BYTE PTR ds:[rsi]
  424dab:	and    BYTE PTR [esi+0x61],dh
  424daf:	ins    BYTE PTR es:[rdi],dx
  424db0:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x206e6f69
  424db8:	ins    DWORD PTR es:[rdi],dx
  424db9:	outs   dx,DWORD PTR ds:[rsi]
  424dba:	fs add BYTE PTR gs:[rbx+0x76],dh
  424dbf:	add    BYTE PTR [rcx+0x67],ch
  424dc2:	outs   dx,BYTE PTR ds:[rsi]
  424dc3:	outs   dx,DWORD PTR ds:[rsi]
  424dc4:	jb     0x424e2b
  424dc6:	add    BYTE PTR [rdx+0x65],dh
  424dc9:	jo     0x424e37
  424dcb:	(bad)  
  424dcc:	movsxd esp,DWORD PTR [rbp+0x0]
  424dcf:	data16 (bad) 
  424dd1:	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6e697274
  424dd9:	addr32 pop rdi
  424ddb:	jbe    0x424e3e
  424ddd:	ins    BYTE PTR es:[rdi],dx
  424dde:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x5f6e6f69
  424de6:	jb     0x424e4d
  424de8:	jo     0x424e56
  424dea:	(bad)  
  424deb:	movsxd esp,DWORD PTR [rbp+0x6d]
  424dee:	outs   dx,BYTE PTR gs:[rsi]
  424df0:	je     0x424df2
  424df2:	add    BYTE PTR [rax],al
  424df4:	add    BYTE PTR [rax],al
  424df6:	add    BYTE PTR [rax],al
  424df8:	jae    0x424e5f
  424dfa:	je     0x424e1c
  424dfc:	jae    0x424e72
  424dfe:	jb     0x424e69
  424e00:	outs   dx,BYTE PTR ds:[rsi]
  424e01:	and    BYTE PTR [esi+0x61],dh
  424e05:	ins    BYTE PTR es:[rdi],dx
  424e06:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x206e6f69
  424e0e:	jb     0x424e75
  424e10:	jo     0x424e7e
  424e12:	(bad)  
  424e13:	movsxd esp,DWORD PTR [rbp+0x6d]
  424e16:	outs   dx,BYTE PTR gs:[rsi]
  424e18:	je     0x424e3a
  424e1a:	jae    0x424e90
  424e1c:	jb     0x424e87
  424e1e:	outs   dx,BYTE PTR ds:[rsi]
  424e1f:	add    BYTE PTR [ebx+0x76],dh
  424e23:	jb     0x424e25
  424e25:	out    dx,eax
  424e26:	mov    edi,0xbd
	...
  424e3f:	add    BYTE PTR [rax+0x424d],dl
  424e45:	add    BYTE PTR [rax],al
  424e47:	add    BYTE PTR [rdx+0x424d],ah
  424e4d:	add    BYTE PTR [rax],al
  424e4f:	add    BYTE PTR [rax+rbp*1+0x10000],dh
  424e56:	add    BYTE PTR [rax],al
  424e58:	add    DWORD PTR [rax],eax
	...
  424e6e:	add    BYTE PTR [rax+0x0],al
  424e71:	add    BYTE PTR [rax],al
  424e73:	add    BYTE PTR [rax],al
  424e75:	add    BYTE PTR [rax],al
  424e77:	add    BYTE PTR [rbp+0x424d],bh
  424e7d:	add    BYTE PTR [rax],al
  424e7f:	add    BYTE PTR [rbp+0x424d],bh
  424e85:	add    BYTE PTR [rax],al
  424e87:	add    BYTE PTR [rdx+0x424d],ah
  424e8d:	add    BYTE PTR [rax],al
  424e8f:	add    BYTE PTR [rax+rbp*1+0x10000],dh
  424e96:	add    BYTE PTR [rax],al
  424e98:	add    DWORD PTR [rax],eax
	...
  424eae:	add    BYTE PTR [rax+0x0],al
  424eb1:	add    BYTE PTR [rax],al
  424eb3:	add    BYTE PTR [rax],al
  424eb5:	add    BYTE PTR [rax],al
  424eb7:	add    BYTE PTR [rbp+0x424d],bh
  424ebd:	add    BYTE PTR [rax],al
  424ebf:	add    al,al
  424ec1:	rex.WRB
  424ec2:	rex.X add BYTE PTR [rax],al
	...
  424ed1:	add    BYTE PTR [rax],al
  424ed3:	add    BYTE PTR [rax+0x2000000],al
	...
  424ef5:	add    BYTE PTR [rax],al
  424ef7:	add    BYTE PTR [rbp+0x424d],bh
  424efd:	add    BYTE PTR [rax],al
  424eff:	add    bh,al
  424f01:	rex.WRB
  424f02:	rex.X add BYTE PTR [rax],al
	...
  424f11:	add    BYTE PTR [rax],al
  424f13:	add    BYTE PTR [rax+0x1000000],al
	...
  424f35:	add    BYTE PTR [rax],al
  424f37:	add    BYTE PTR [rbp+0x424d],bh
  424f3d:	add    BYTE PTR [rax],al
  424f3f:	add    bh,cl
  424f41:	rex.WRB
  424f42:	rex.X add BYTE PTR [rax],al
	...
  424f51:	add    BYTE PTR [rax],al
  424f53:	add    BYTE PTR [rax+0x0],al
	...
  424f75:	add    BYTE PTR [rax],al
  424f77:	add    BYTE PTR [rbp+0x424d],bh
  424f7d:	add    BYTE PTR [rax],al
  424f7f:	add    ah,dl
  424f81:	rex.WRB
  424f82:	rex.X add BYTE PTR [rax],al
  424f85:	add    BYTE PTR [rax],al
  424f87:	add    al,bh
  424f89:	rex.WRB
  424f8a:	rex.X add BYTE PTR [rax],al
  424f8d:	add    BYTE PTR [rax],al
  424f8f:	add    BYTE PTR [rax+0x5000028],bh
  424f95:	add    BYTE PTR [rax],al
  424f97:	add    bl,al
  424f99:	(bad)  
  424f9a:	rex.X add BYTE PTR [rax],al
	...
  424fbd:	add    BYTE PTR [rax],al
  424fbf:	add    BYTE PTR [rcx],ah
  424fc1:	rex.WRX
  424fc2:	rex.X add BYTE PTR [rax],al
  424fc5:	add    BYTE PTR [rax],al
  424fc7:	add    al,bh
  424fc9:	rex.WRB
  424fca:	rex.X add BYTE PTR [rax],al
  424fcd:	add    BYTE PTR [rax],al
  424fcf:	add    BYTE PTR [rax+0x5000028],bh
  424fd5:	add    BYTE PTR [rax],al
  424fd7:	add    BYTE PTR [rip+0x424e],ah        # 0x42922b
	...
  42503d:	add    BYTE PTR [rax],al
  42503f:	add    BYTE PTR [rdx+0x69],ah
  425042:	je     0x425073
  425044:	jae    0x425046
  425046:	(bad)  
  425047:	jns    0x4250bd
  425049:	add    BYTE PTR gs:[rax+0x7a],cl
  42504d:	add    BYTE PTR [rbx+0x0],dh
  425050:	rex.WXB add BYTE PTR [r13+0x0],cl
  425054:	add    BYTE PTR [r8+r8*1+0x50],r10b
  425059:	add    BYTE PTR [rax],al
  42505b:	add    BYTE PTR [rax],al
  42505d:	add    BYTE PTR [rax],al
  42505f:	add    bl,al
  425061:	(bad)  
  425062:	rex.X add BYTE PTR [rax],al
  425065:	add    BYTE PTR [rax],al
  425067:	add    BYTE PTR [rax+0x50],dl
  42506a:	rex.X add BYTE PTR [rax],al
  42506d:	add    BYTE PTR [rax],al
  42506f:	add    BYTE PTR [rdx+0x50],dl
  425072:	rex.X add BYTE PTR [rax],al
  425075:	add    BYTE PTR [rax],al
  425077:	add    BYTE PTR [rax+rdx*2+0x42],dl
  42507b:	add    BYTE PTR [rax],al
  42507d:	add    BYTE PTR [rax],al
  42507f:	add    BYTE PTR [rsi+0x50],dl
  425082:	rex.X add BYTE PTR [rax],al
  425085:	add    BYTE PTR [rax],al
  425087:	add    BYTE PTR [rax+0x50],bl
  42508a:	rex.X add BYTE PTR [rax],al
  42508d:	add    BYTE PTR [rax],al
  42508f:	add    BYTE PTR [rbx+0x69],cl
  425092:	add    BYTE PTR [rbp+0x69],cl
  425095:	add    BYTE PTR [rdi+0x69],al
  425098:	add    BYTE PTR [rcx+rbp*2+0x0],dl
  42509c:	push   rax
  42509d:	imul   eax,DWORD PTR [rax],0x420ec300
  4250a3:	add    BYTE PTR [rax],al
  4250a5:	add    BYTE PTR [rax],al
  4250a7:	add    BYTE PTR [rax+0x4250],dl
  4250ad:	add    BYTE PTR [rax],al
  4250af:	add    BYTE PTR [rbx+0x4250],dl
  4250b5:	add    BYTE PTR [rax],al
  4250b7:	add    BYTE PTR [rsi+0x4250],dl
  4250bd:	add    BYTE PTR [rax],al
  4250bf:	add    BYTE PTR [rcx+0x4250],bl
  4250c5:	add    BYTE PTR [rax],al
  4250c7:	add    BYTE PTR [rax+rdx*2+0x42],bl
  4250ce:	add    BYTE PTR [rax],al
  4250d0:	movsxd ebp,DWORD PTR [rax+0x61]
  4250d3:	jo     0x425149
  4250d5:	gs jb  0x4250d8
  4250d8:	je     0x42513b
  4250da:	addr32 jae 0x4250dd
  4250dd:	je     0x425140
  4250df:	add    BYTE PTR [ebx+0x68],ah
  4250e3:	(bad)  
  4250e4:	jo     0x42515a
  4250e6:	gs jb  0x425148
  4250e9:	je     0x42514c
  4250eb:	addr32 jae 0x4250ee
  4250ee:	movsxd ebp,DWORD PTR [rax+0x61]
  4250f1:	jo     0x425167
  4250f3:	gs jb  0x425169
  4250f6:	add    BYTE PTR [rbp+0x72],ah
  4250f9:	jb     0x42516a
  4250fb:	jb     0x4250fd
  4250fd:	outs   dx,WORD PTR ds:[rsi]
  4250ff:	jb     0x42516e
  425101:	(bad)  
  425102:	je     0x425163
  425104:	je     0x425167
  425106:	addr32 jae 0x425109
  425109:	data16 jb 0x42516d
  42510c:	ins    DWORD PTR es:[rdi],dx
  42510d:	add    BYTE PTR gs:[rsi+0x72],ah
  425111:	(bad)  
  425112:	ins    DWORD PTR es:[rdi],dx
  425113:	gs jae 0x425116
  425116:	data16 jb 0x42517a
  425119:	ins    DWORD PTR es:[rdi],dx
  42511a:	gs pop rdi
  42511c:	je     0x42517f
  42511e:	addr32 jae 0x425121
  425121:	jae    0x42518c
  425123:	fs gs pop rdi
  425126:	fs (bad) 
  425128:	je     0x42518b
  42512a:	pop    rdi
  42512b:	ins    BYTE PTR es:[rdi],dx
  42512c:	imul   esi,DWORD PTR [rbx+0x74],0x64697300
  425133:	gs pop rdi
  425135:	fs (bad) 
  425137:	je     0x42519a
  425139:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  42513d:	jb     0x4251a0
  42513f:	jb     0x4251ba
  425141:	pop    rdi
  425142:	jbe    0x4251a9
  425144:	jb     0x4251b9
  425146:	imul   ebp,DWORD PTR [rdi+0x6e],0x62696c00
  42514d:	jb     0x4251b0
  42514f:	jb     0x4251ca
  425151:	pop    rdi
  425152:	jbe    0x4251b9
  425154:	jb     0x4251c9
  425156:	imul   ebp,DWORD PTR [rdi+0x6e],0x61700073
  42515d:	movsxd ebp,DWORD PTR [rbx+0x65]
  425160:	je     0x425162
  425162:	jo     0x4251c5
  425164:	movsxd ebp,DWORD PTR [rbx+0x65]
  425167:	je     0x4251dc
  425169:	add    BYTE PTR [rax+0x61],dh
  42516c:	movsxd ebp,DWORD PTR [rbx+0x65]
  42516f:	je     0x4251e4
  425171:	pop    rdi
  425172:	(bad)  
  425173:	outs   dx,BYTE PTR ds:[rsi]
  425174:	fs pop rdi
  425176:	data16 jb 0x4251da
  425179:	ins    DWORD PTR es:[rdi],dx
  42517a:	gs jae 0x42517d
  42517d:	jo     0x4251e8
  42517f:	js     0x4251e6
  425181:	ins    BYTE PTR es:[rdi],dx
  425182:	pop    rdi
  425183:	outs   dx,WORD PTR ds:[rsi]
  425185:	jb     0x4251f4
  425187:	(bad)  
  425188:	je     0x42518a
  42518a:	jo     0x4251f5
  42518c:	js     0x4251f3
  42518e:	ins    BYTE PTR es:[rdi],dx
  42518f:	pop    rdi
  425190:	outs   dx,WORD PTR ds:[rsi]
  425192:	jb     0x425201
  425194:	(bad)  
  425195:	je     0x4251f6
  425197:	data16 ins BYTE PTR es:[rdi],dx
  425199:	(bad)  
  42519a:	addr32 jae 0x42519d
  42519d:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4251a0:	jo     0x425211
  4251a2:	outs   dx,BYTE PTR ds:[rsi]
  4251a3:	outs   dx,BYTE PTR gs:[rsi]
  4251a5:	je     0x4251a7
  4251a7:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4251aa:	jo     0x42521b
  4251ac:	outs   dx,BYTE PTR ds:[rsi]
  4251ad:	outs   dx,BYTE PTR gs:[rsi]
  4251af:	je     0x425224
  4251b1:	add    BYTE PTR [rax+0x69],dh
  4251b4:	js     0x42521b
  4251b6:	ins    BYTE PTR es:[rdi],dx
  4251b7:	pop    rdi
  4251b8:	outs   dx,WORD PTR ds:[rsi]
  4251ba:	jb     0x425229
  4251bc:	(bad)  
  4251bd:	je     0x42521e
  4251bf:	movsxd ebp,DWORD PTR [rdi+0x6d]
  4251c2:	jo     0x425233
  4251c4:	outs   dx,BYTE PTR ds:[rsi]
  4251c5:	outs   dx,BYTE PTR gs:[rsi]
  4251c7:	je     0x42523c
  4251c9:	add    BYTE PTR [rax+0x69],dh
  4251cc:	js     0x425233
  4251ce:	ins    BYTE PTR es:[rdi],dx
  4251cf:	pop    rdi
  4251d0:	outs   dx,WORD PTR ds:[rsi]
  4251d2:	jb     0x425241
  4251d4:	(bad)  
  4251d5:	je     0x42524a
  4251d7:	add    BYTE PTR [rcx+rbp*2+0x73],ah
  4251db:	jo     0x42524c
  4251dd:	jae    0x425248
  4251df:	je     0x42524a
  4251e1:	outs   dx,DWORD PTR ds:[rsi]
  4251e2:	outs   dx,BYTE PTR ds:[rsi]
  4251e3:	add    BYTE PTR [rax+0x72],dh
  4251e6:	outs   dx,DWORD PTR ds:[rsi]
  4251e7:	addr32 jb 0x42524b
  4251ea:	ins    DWORD PTR es:[rdi],dx
  4251eb:	pop    rdi
  4251ec:	jae    0x425262
  4251ee:	jb     0x425255
  4251f0:	(bad)  
  4251f1:	ins    DWORD PTR es:[rdi],dx
  4251f2:	pop    rdi
  4251f3:	imul   esi,DWORD PTR fs:[rbx+0x70],0x7469736f
  4251fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727000
  425202:	addr32 jb 0x425266
  425205:	ins    DWORD PTR es:[rdi],dx
  425206:	pop    rdi
  425207:	jae    0x42527d
  425209:	jb     0x425270
  42520b:	(bad)  
  42520c:	ins    DWORD PTR es:[rdi],dx
  42520d:	pop    rdi
  42520e:	je     0x425271
  425210:	addr32 jae 0x425213
  425213:	jo     0x425287
  425215:	outs   dx,DWORD PTR ds:[rsi]
  425216:	addr32 jb 0x42527a
  425219:	ins    DWORD PTR es:[rdi],dx
  42521a:	add    BYTE PTR [rbx+0x74],dh
  42521d:	jb     0x425284
  42521f:	(bad)  
  425220:	ins    DWORD PTR es:[rdi],dx
  425221:	jae    0x425223
  425223:	jo     0x425297
  425225:	outs   dx,DWORD PTR ds:[rsi]
  425226:	addr32 jb 0x42528a
  425229:	ins    DWORD PTR es:[rdi],dx
  42522a:	pop    rdi
  42522b:	jae    0x4252a1
  42522d:	jb     0x425294
  42522f:	(bad)  
  425230:	ins    DWORD PTR es:[rdi],dx
  425231:	jae    0x425233
  425233:	jae    0x4252a9
  425235:	jb     0x42529c
  425237:	(bad)  
  425238:	ins    DWORD PTR es:[rdi],dx
  425239:	add    BYTE PTR [rax+0x72],dh
  42523c:	outs   dx,DWORD PTR ds:[rsi]
  42523d:	addr32 jb 0x4252a1
  425240:	ins    DWORD PTR es:[rdi],dx
  425241:	pop    rdi
  425242:	jae    0x4252b8
  425244:	jb     0x4252ab
  425246:	(bad)  
  425247:	ins    DWORD PTR es:[rdi],dx
  425248:	add    BYTE PTR [rax+0x72],dh
  42524b:	outs   dx,DWORD PTR ds:[rsi]
  42524c:	addr32 jb 0x4252b0
  42524f:	ins    DWORD PTR es:[rdi],dx
  425250:	pop    rdi
  425251:	je     0x4252b4
  425253:	addr32 jae 0x425256
  425256:	jo     0x4252ca
  425258:	outs   dx,DWORD PTR ds:[rsi]
  425259:	addr32 jb 0x4252bd
  42525c:	ins    DWORD PTR es:[rdi],dx
  42525d:	pop    rdi
  42525e:	jbe    0x4252c5
  425260:	jb     0x4252d5
  425262:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727000
  425269:	addr32 jb 0x4252cd
  42526c:	ins    DWORD PTR es:[rdi],dx
  42526d:	jae    0x42526f
  42526f:	jb     0x4252e0
  425271:	outs   dx,DWORD PTR ds:[rsi]
  425272:	je     0x425274
  425274:	jae    0x4252ea
  425276:	jb     0x4252dd
  425278:	(bad)  
  425279:	ins    DWORD PTR es:[rdi],dx
  42527a:	pop    rdi
  42527b:	imul   esi,DWORD PTR fs:[rbx+0x70],0x7469736f
  425283:	imul   ebp,DWORD PTR [rdi+0x6e],0x72747300
  42528a:	gs (bad) 
  42528c:	ins    DWORD PTR es:[rdi],dx
  42528d:	pop    rdi
  42528e:	je     0x4252f1
  425290:	addr32 jae 0x425293
  425293:	add    bh,dl
  425295:	(bad)  
  425296:	add    BYTE PTR [rax],al
  425298:	data16 data16 jo 0x42530e
  42529c:	outs   dx,DWORD PTR ds:[rsi]
  42529d:	(bad)  
  42529e:	add    BYTE PTR gs:[rax],al
  4252a1:	add    BYTE PTR [rax],al
  4252a3:	add    BYTE PTR [rax],al
  4252a5:	add    BYTE PTR [rax+rax*2],ah
  4252a8:	add    BYTE PTR [rax],al
  4252aa:	add    BYTE PTR [rax],al
  4252ac:	add    BYTE PTR [rax],al
  4252ae:	lock (bad) 
  4252b0:	(bad)  
  4252b1:	in     eax,dx
  4252b2:	mov    ch,0xa0
  4252b4:	test   esi,0x3eb0
  4252ba:	add    BYTE PTR [rax],al
  4252bc:	add    BYTE PTR [rax],al
  4252be:	add    BYTE PTR [rax],al
  4252c0:	add    BYTE PTR [rcx+0x42],bl
  4252c6:	add    BYTE PTR [rax],al
  4252c8:	add    BYTE PTR [rdx+rax*2+0x0],dl
  4252cf:	add    BYTE PTR [rax+0x4128],al
	...
  4252dd:	add    BYTE PTR [rax],al
  4252df:	add    BYTE PTR [rcx+0x72],al
  4252e2:	addr32 jne 0x425352
  4252e5:	outs   dx,BYTE PTR gs:[rsi]
  4252e7:	je     0x425309
  4252e9:	outs   dx,DWORD PTR fs:[rsi]
  4252eb:	ins    DWORD PTR es:[rdi],dx
  4252ec:	(bad)  
  4252ed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4252f4:	jb     0x425316
  4252f6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4252fa:	rex.B
  4252fb:	rex.WB
  4252fc:	rex.WRX sub QWORD PTR [rax],r8
  4252ff:	rex.B jb 0x425369
  425302:	jne    0x425371
  425304:	outs   dx,BYTE PTR gs:[rsi]
  425306:	je     0x425328
  425308:	jae    0x425373
  42530a:	outs   dx,BYTE PTR ds:[rsi]
  42530b:	addr32 jne 0x42537a
  42530e:	(bad)  
  42530f:	jb     0x42537a
  425311:	je     0x42538c
  425313:	and    BYTE PTR [rax],ch
  425315:	push   rbx
  425316:	rex.WB
  425317:	rex.RXB
  425318:	rex.WRX sub QWORD PTR [rax],r8
  42531b:	add    BYTE PTR [rax],al
  42531d:	add    BYTE PTR [rax],al
  42531f:	add    BYTE PTR [rdi+0x76],cl
  425322:	gs jb  0x42538b
  425325:	ins    BYTE PTR es:[rdi],dx
  425326:	outs   dx,DWORD PTR ds:[rsi]
  425327:	ja     0x425349
  425329:	jb     0x42538c
  42532b:	outs   dx,BYTE PTR ds:[rsi]
  42532c:	and    BYTE PTR gs:[ebp+0x72],ah
  425331:	jb     0x4253a2
  425333:	jb     0x425355
  425335:	sub    BYTE PTR [rdi+0x56],cl
  425338:	rex.RB push r10
  42533a:	rex.RX
  42533b:	rex.WR
  42533c:	rex.WRXB push r15
  42533e:	sub    DWORD PTR [rax],eax
  425340:	push   rax
  425341:	(bad)  
  425342:	jb     0x4253b8
  425344:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  42534b:	jae    0x42536d
  42534d:	outs   dx,DWORD PTR ds:[rsi]
  42534e:	data16 and BYTE PTR [rbx+0x69],dh
  425352:	outs   dx,BYTE PTR ds:[esi]
  425354:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  42535b:	and    BYTE PTR gs:[rax],ch
  42535e:	push   rax
  42535f:	rex.WR
  425360:	rex.WRXB push r11
  425362:	push   rbx
  425363:	sub    DWORD PTR [rax],eax
  425365:	add    BYTE PTR [rax],al
  425367:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  42536b:	(bad)  
  42536c:	ins    BYTE PTR es:[rdi],dx
  42536d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  425371:	jae    0x425393
  425373:	outs   dx,DWORD PTR ds:[rsi]
  425374:	data16 and BYTE PTR [rbx+0x69],dh
  425378:	outs   dx,BYTE PTR ds:[esi]
  42537a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  425381:	and    BYTE PTR gs:[rax],ch
  425384:	push   rsp
  425385:	rex.WR
  425386:	rex.WRXB push r11
  425388:	push   rbx
  425389:	sub    DWORD PTR [rax],eax
  42538b:	add    BYTE PTR [rax],al
  42538d:	add    BYTE PTR [rax],al
  42538f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  425393:	and    BYTE PTR [rdx+0x65],dh
  425396:	jae    0x42540d
  425398:	ins    BYTE PTR es:[rdi],dx
  425399:	je     0x4253bb
  42539b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4253a2:	jae    0x425411
  4253a4:	(bad)  
  4253a5:	ins    BYTE PTR es:[rdi],dx
  4253a6:	ins    BYTE PTR es:[rdi],dx
  4253a7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4253ab:	(bad)  
  4253ac:	and    BYTE PTR gs:[rdx+0x65],dh
  4253b0:	jo     0x425424
  4253b2:	gs jae 0x42541a
  4253b5:	outs   dx,BYTE PTR ds:[rsi]
  4253b6:	je     0x42541d
  4253b8:	and    BYTE PTR fs:[rax],ch
  4253bb:	push   rbp
  4253bc:	rex.WRX
  4253bd:	rex.R
  4253be:	rex.RB push r10
  4253c0:	rex.RX
  4253c1:	rex.WR
  4253c2:	rex.WRXB push r15
  4253c4:	sub    DWORD PTR [rax],eax
  4253c6:	push   rbp
  4253c7:	outs   dx,BYTE PTR ds:[rsi]
  4253c8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4253cc:	outs   dx,BYTE PTR ds:[rsi]
  4253cd:	and    BYTE PTR [rbp+0x72],ah
  4253d0:	jb     0x425441
  4253d2:	jb     0x4253d4
  4253d4:	add    BYTE PTR [rax],al
  4253d6:	add    BYTE PTR [rax],al
  4253d8:	pop    rdi
  4253d9:	ins    DWORD PTR es:[rdi],dx
  4253da:	(bad)  
  4253db:	je     0x425445
  4253dd:	gs jb  0x425452
  4253e0:	sub    BYTE PTR [rcx],ch
  4253e2:	cmp    ah,BYTE PTR [rax]
  4253e4:	and    eax,0x6e692073
  4253e9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67677c62
  4253ef:	sub    al,0x20
  4253f1:	and    eax,0x20202967
  4253f6:	sub    BYTE PTR [rdx+0x65],dh
  4253f9:	je     0x425471
  4253fb:	(bad)  
  4253fc:	ins    BYTE PTR es:[rdi],dx
  4253fd:	cmp    eax,0xa296725
  425402:	add    BYTE PTR [rax],al
  425404:	rex.WR (bad) 
  425406:	(bad)  
  425407:	dec    DWORD PTR [rbp-0x300012b]
  42540d:	(bad)  
  42540e:	(bad)  
  42540f:	dec    DWORD PTR [rsi+rdx*8]
  425412:	(bad)  
  425413:	call   FWORD PTR [rsi+rdx*8]
  425416:	(bad)  
  425417:	jmp    FWORD PTR [rsi+rdx*8]
  42541a:	(bad)  
  42541b:	(bad)  
  42541c:	cmp    al,0xd6
  42541e:	(bad)  
  42541f:	dec    DWORD PTR [rbp+0x69]
  425422:	outs   dx,BYTE PTR ds:[rsi]
  425423:	addr32 ja 0x425453
  425426:	ja     0x42545e
  425428:	xor    al,0x20
  42542a:	jb     0x4254a1
  42542c:	outs   dx,BYTE PTR ds:[rsi]
  42542d:	je     0x425498
  42542f:	ins    DWORD PTR es:[rdi],dx
  425430:	and    BYTE PTR gs:[rsi+0x61],ah
  425434:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  42543c:	add    BYTE PTR [rax],al
  42543e:	add    BYTE PTR [rax],al
  425440:	rex.B
  425441:	fs fs jb 0x4254aa
  425445:	jae    0x4254ba
  425447:	and    BYTE PTR [rip+0x61682070],ah        # 0x61aa74bd
  42544d:	jae    0x42546f
  42544f:	outs   dx,BYTE PTR ds:[rsi]
  425450:	outs   dx,DWORD PTR ds:[rsi]
  425451:	and    BYTE PTR [rcx+0x6d],ch
  425454:	(bad)  
  425455:	addr32 gs sub eax,0x74636573
  42545c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  425463:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  42546a:	jne    0x4254d1
  42546c:	jb     0x4254e7
  42546e:	and    BYTE PTR [rsi+0x61],ah
  425471:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  425479:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a474e3
  42547f:	je     0x4254e6
  425481:	jae    0x4254a3
  425483:	(bad)  
  425484:	je     0x4254a6
  425486:	(bad)  
  425487:	fs fs jb 0x4254f0
  42548b:	jae    0x425500
  42548d:	and    BYTE PTR [rip+0x70],ah        # 0x425503
  425493:	add    BYTE PTR [rax],al
  425495:	add    BYTE PTR [rax],al
  425497:	add    BYTE PTR [rax],ah
  425499:	and    BYTE PTR [rsi+0x69],dl
  42549c:	jb     0x425512
  42549e:	jne    0x425501
  4254a0:	ins    BYTE PTR es:[rdi],dx
  4254a1:	push   rax
  4254a2:	jb     0x425513
  4254a4:	je     0x42550b
  4254a6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4254aa:	(bad)  
  4254ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4254b3:	push   0x646f6320
  4254b8:	and    BYTE PTR gs:[rax],dh
  4254bb:	js     0x4254e2
  4254bd:	js     0x4254bf
  4254bf:	add    BYTE PTR [rax],ah
  4254c1:	and    BYTE PTR [rbp+0x6e],dl
  4254c4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4254c8:	outs   dx,BYTE PTR ds:[rsi]
  4254c9:	and    BYTE PTR [rax+0x73],dh
  4254cc:	gs jne 0x425533
  4254cf:	outs   dx,DWORD PTR ds:[rsi]
  4254d0:	and    BYTE PTR [rdx+0x65],dh
  4254d3:	ins    BYTE PTR es:[rdi],dx
  4254d4:	outs   dx,DWORD PTR ds:[rsi]
  4254d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4254d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4254df:	je     0x425550
  4254e1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4254e4:	and    BYTE PTR [rsi+0x65],dh
  4254e7:	jb     0x42555c
  4254e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4254f0:	or     al,BYTE PTR [rax]
  4254f2:	add    BYTE PTR [rax],al
  4254f4:	add    BYTE PTR [rax],al
  4254f6:	add    BYTE PTR [rax],al
  4254f8:	and    BYTE PTR [rax],ah
  4254fa:	push   rbp
  4254fb:	outs   dx,BYTE PTR ds:[rsi]
  4254fc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  425500:	outs   dx,BYTE PTR ds:[rsi]
  425501:	and    BYTE PTR [rax+0x73],dh
  425504:	gs jne 0x42556b
  425507:	outs   dx,DWORD PTR ds:[rsi]
  425508:	and    BYTE PTR [rdx+0x65],dh
  42550b:	ins    BYTE PTR es:[rdi],dx
  42550c:	outs   dx,DWORD PTR ds:[rsi]
  42550d:	movsxd esp,DWORD PTR [rcx+0x74]
  425510:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  425517:	and    BYTE PTR [rbx+0x69],dh
  42551a:	jp     0x425581
  42551c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4c8386
	...
  42552e:	add    BYTE PTR [rax],al
  425530:	cs jo  0x425597
  425533:	(bad)  
  425534:	je     0x425597
	...
  42553e:	add    BYTE PTR [rax],al
  425540:	pushf  
  425541:	jne    0x425543
  425543:	mov    BYTE PTR [rsp+riz*8],bh
  425546:	(bad)  
  425547:	jle    0x425549
	...
  42555d:	add    al,ah
  42555f:	(bad)  
  425560:	add    BYTE PTR [rax],al
  425562:	add    BYTE PTR [rax],al
  425564:	add    BYTE PTR [rax],al
  425566:	lock (bad) 
	...
  425574:	add    BYTE PTR [rax],al
  425576:	add    BYTE PTR [rax+0x0],al
  42557c:	add    BYTE PTR [rax],al
  42557e:	add    BYTE PTR [rax],al
  425580:	jo     0x4255f1
  425582:	ja     0x425584
	...
  42558c:	add    BYTE PTR [rax],al
  42558e:	clc    
  42558f:	inc    DWORD PTR [rax]
  425591:	add    BYTE PTR [rax],al
  425593:	add    BYTE PTR [rax],al
  425595:	add    al,bh
  425597:	jg     0x425599
  425599:	add    BYTE PTR [rax],al
  42559b:	add    BYTE PTR [rax],al
  42559d:	add    BYTE PTR [rax],al
  42559f:	add    BYTE PTR [rax],0x0
  4255a2:	add    BYTE PTR [rax],al
  4255a4:	add    BYTE PTR [rax],al
  4255a6:	lock inc DWORD PTR [rax]
  4255a9:	add    BYTE PTR [rax],al
  4255ab:	add    BYTE PTR [rax],al
  4255ad:	add    al,dh
  4255af:	jg     0x4255b1
  4255b1:	add    BYTE PTR [rax],al
  4255b3:	add    BYTE PTR [rax],al
  4255b5:	add    al,dh
  4255b7:	(bad)  
	...
  4255c4:	add    BYTE PTR [rax],al
  4255c6:	add    BYTE PTR [rax+0x0],al
	...
  4255d4:	add    BYTE PTR [rax],al
  4255d6:	loopne 0x425617
  4255d8:	add    BYTE PTR [rax],al
  4255da:	sar    bh,0xff
  4255dd:	(bad)  
  4255de:	fild   WORD PTR [rcx-0x1]
  4255e1:	(bad)  
  4255e2:	(bad)  
  4255e3:	(bad)  
  4255e4:	(bad)  
  4255e5:	(bad)  
  4255e6:	(bad)  
  4255e7:	jg     0x4255e9
	...
  4255f5:	add    al,ah
  4255f7:	rol    DWORD PTR [rax],0x0
  4255fa:	add    BYTE PTR [rax],al
  4255fc:	add    BYTE PTR [rax],al
  4255fe:	add    BYTE PTR [rax],al
  425600:	pushf  
  425601:	jne    0x425603
  425603:	mov    BYTE PTR [rsp+riz*8],bh
  425606:	(bad)  
  425607:	jle    0x425609
  425609:	add    BYTE PTR [rax],al
  42560b:	add    BYTE PTR [rax],al
  42560d:	add    BYTE PTR [rax],al
  42560f:	add    BYTE PTR [rdi+0x5f],bl
  425612:	jo     0x425683
  425614:	ja     0x42567f
	...
  42561e:	clc    
  42561f:	inc    DWORD PTR [rax]
  425621:	add    BYTE PTR [rax],al
  425623:	add    BYTE PTR [rax],al
  425625:	add    al,bh
  425627:	jg     0x425629
  425629:	add    BYTE PTR [rax],al
  42562b:	add    BYTE PTR [rax],al
  42562d:	add    al,dh
  42562f:	(bad)  
  425630:	add    BYTE PTR [rax],al
  425632:	add    BYTE PTR [rax],al
  425634:	add    BYTE PTR [rax],al
  425636:	add    BYTE PTR [rax+0x0],al
  42563c:	add    BYTE PTR [rax],al
  42563e:	lock inc DWORD PTR [rax]
  425641:	add    BYTE PTR [rax],al
  425643:	add    BYTE PTR [rax],al
  425645:	add    al,dh
  425647:	jg     0x425649
  425649:	add    BYTE PTR [rax],al
  42564b:	add    BYTE PTR [rax],al
  42564d:	add    BYTE PTR [rax],al
  42564f:	add    bh,bh
  425651:	(bad)  
  425652:	(bad)  
  425653:	(bad)  
  425654:	(bad)  
  425655:	(bad)  
  425656:	(bad)  
  425657:	jg     0x425659
	...
  425665:	add    BYTE PTR [rax],al
  425667:	add    BYTE PTR [rax],0x0
  42566a:	add    BYTE PTR [rax],al
  42566c:	add    BYTE PTR [rax],al
  42566e:	add    BYTE PTR [rax],al
  425670:	rex.WRX (bad) 
  425672:	rex.WRX add BYTE PTR [rcx+0x6e],r9b
  425676:	data16 add BYTE PTR [rax],ch
  425679:	add    BYTE PTR [rsi+0x0],ch
  42567c:	jne    0x42567e
  42567e:	ins    BYTE PTR es:[rdi],dx
  42567f:	add    BYTE PTR [rax+rax*1+0x29],ch
  425683:	add    BYTE PTR [rax],al
  425685:	add    BYTE PTR [rax],ch
  425687:	outs   dx,BYTE PTR ds:[rsi]
  425688:	jne    0x4256f6
  42568a:	ins    BYTE PTR es:[rdi],dx
  42568b:	sub    DWORD PTR [rax],eax
  42568d:	push   rax
  42568e:	push   rdx
  42568f:	rex.WB
  425690:	rex.WRX push rsp
  425692:	rex.RX pop rdi
  425694:	rex.RB pop r8
  425696:	push   rax
  425697:	rex.WRXB
  425698:	rex.WRX
  425699:	rex.RB
  42569a:	rex.WRX push rsp
  42569c:	pop    rdi
  42569d:	rex.R
  42569e:	rex.WB
  42569f:	rex.RXB
  4256a0:	rex.WB push r12
  4256a2:	push   rbx
  4256a3:	add    BYTE PTR [rbx+rdx*1-0x1],ch
  4256a7:	(bad)  
  4256a8:	in     al,dx
  4256a9:	adc    edi,edi
  4256ab:	(bad)  
  4256ac:	in     al,dx
  4256ad:	adc    edi,edi
  4256af:	dec    DWORD PTR [rbx+rdx*1-0x1]
  4256b3:	(bad)  
  4256b4:	in     al,dx
  4256b5:	adc    edi,edi
  4256b7:	call   FWORD PTR [rsi-0x130000ed]
  4256bd:	adc    edi,edi
  4256bf:	dec    DWORD PTR [rbx+rdx*1+0x13ecffff]
  4256c6:	(bad)  
  4256c7:	(bad)  
  4256c8:	in     al,dx
  4256c9:	adc    edi,edi
  4256cb:	jmp    FWORD PTR [rbx+rdx*1+0x132cffff]
  4256d2:	(bad)  
  4256d3:	(bad)  
  4256d4:	in     al,dx
  4256d5:	adc    edi,edi
  4256d7:	dec    DWORD PTR [rbx+rdx*1]
  4256da:	(bad)  
  4256db:	(bad)  
  4256dc:	in     al,dx
  4256dd:	adc    bh,bh
  4256df:	(bad)  
  4256e0:	in     al,dx
  4256e1:	adc    edi,edi
  4256e3:	dec    esp
  4256e5:	adc    bh,bh
  4256e7:	(bad)  
  4256e8:	in     al,dx
  4256e9:	adc    edi,edi
  4256eb:	(bad)  
  4256ec:	in     al,dx
  4256ed:	adc    edi,edi
  4256ef:	(bad)  
  4256f0:	in     al,dx
  4256f1:	adc    edi,edi
  4256f3:	(bad)  
  4256f4:	in     al,dx
  4256f5:	adc    edi,edi
  4256f7:	(bad)  
  4256f8:	in     al,dx
  4256f9:	adc    edi,edi
  4256fb:	(bad)  
  4256fc:	in     al,dx
  4256fd:	adc    edi,edi
  4256ff:	(bad)  
  425700:	in     al,dx
  425701:	adc    edi,edi
  425703:	(bad)  
  425704:	in     al,dx
  425705:	adc    edi,edi
  425707:	(bad)  
  425708:	in     al,dx
  425709:	adc    edi,edi
  42570b:	(bad)  
  42570c:	in     al,dx
  42570d:	adc    edi,edi
  42570f:	(bad)  
  425710:	in     al,dx
  425711:	adc    edi,edi
  425713:	(bad)  
  425714:	in     al,dx
  425715:	adc    edi,edi
  425717:	(bad)  
  425718:	in     al,dx
  425719:	adc    edi,edi
  42571b:	(bad)  
  42571c:	in     al,dx
  42571d:	adc    edi,edi
  42571f:	(bad)  
  425720:	in     al,dx
  425721:	adc    edi,edi
  425723:	(bad)  
  425724:	in     al,dx
  425725:	adc    edi,edi
  425727:	call   FWORD PTR [rsi-0x130000ee]
  42572d:	adc    edi,edi
  42572f:	jmp    FWORD PTR [rdx+rdx*1-0x1]
  425733:	(bad)  
  425734:	in     al,dx
  425735:	adc    edi,edi
  425737:	(bad)  
  425738:	cmp    eax,0xfffff12
  42573d:	adc    bh,bh
  42573f:	jmp    rcx
  425741:	adc    edi,edi
  425743:	(bad)  
  425744:	in     al,dx
  425745:	adc    edi,edi
  425747:	(bad)  
  425748:	mov    esp,0xecffff11
  42574d:	adc    edi,edi
  42574f:	(bad)  
  425750:	in     al,dx
  425751:	adc    edi,edi
  425753:	call   FWORD PTR [rcx+rdx*1+0x13ecffff]
  42575a:	(bad)  
  42575b:	(bad)  
  42575c:	in     al,dx
  42575d:	adc    edi,edi
  42575f:	(bad)  
  425760:	in     al,dx
  425761:	adc    edi,edi
  425763:	(bad)  
  425764:	in     al,dx
  425765:	adc    edi,edi
  425767:	(bad)  
  425768:	in     al,dx
  425769:	adc    edi,edi
  42576b:	(bad)  
  42576c:	in     al,dx
  42576d:	adc    edi,edi
  42576f:	jmp    FWORD PTR [rdi]
  425771:	adc    al,0xff
  425773:	(bad)  
  425774:	in     al,dx
  425775:	adc    edi,edi
  425777:	(bad)  
  425778:	in     al,dx
  425779:	adc    edi,edi
  42577b:	(bad)  
  42577c:	in     al,dx
  42577d:	adc    edi,edi
  42577f:	(bad)  
  425780:	in     al,dx
  425781:	adc    edi,edi
  425783:	jmp    FWORD PTR [rax+rdx*1-0x1]
  425787:	(bad)  
  425788:	in     al,dx
  425789:	adc    edi,edi
  42578b:	(bad)  
  42578c:	in     al,dx
  42578d:	adc    edi,edi
  42578f:	(bad)  
  425790:	in     al,dx
  425791:	adc    edi,edi
  425793:	(bad)  
  425794:	in     al,dx
  425795:	adc    edi,edi
  425797:	(bad)  
  425798:	in     al,dx
  425799:	adc    edi,edi
  42579b:	(bad)  
  42579c:	in     al,dx
  42579d:	adc    edi,edi
  42579f:	(bad)  
  4257a0:	in     al,dx
  4257a1:	adc    edi,edi
  4257a3:	(bad)  
  4257a4:	in     al,dx
  4257a5:	adc    edi,edi
  4257a7:	(bad)  
  4257a8:	cld    
  4257a9:	adc    bh,bh
  4257ab:	(bad)  
  4257ac:	in     al,dx
  4257ad:	adc    edi,edi
  4257af:	(bad)  
  4257b0:	mov    ebp,0x3cffff10
  4257b5:	adc    edi,edi
  4257b7:	jmp    FWORD PTR [rax+rdx*1]
  4257ba:	(bad)  
  4257bb:	(bad)  
  4257bc:	in     al,dx
  4257bd:	ud0    edi,edi
  4257c0:	jg     0x4257d1
  4257c2:	(bad)  
  4257c3:	(bad)  
  4257c4:	mov    esp,0x3cffff0f
  4257c9:	adc    edi,edi
  4257cb:	call   FWORD PTR [rdi+rcx*1-0x1]
  4257cf:	(bad)  
  4257d0:	in     al,dx
  4257d1:	adc    edi,edi
  4257d3:	jmp    FWORD PTR [rdi+rcx*1]
  4257d6:	(bad)  
  4257d7:	(bad)  
  4257d8:	cld    
  4257d9:	(bad)  
  4257da:	(bad)  
  4257db:	(bad)  
  4257dc:	mov    esp,0x6cffff0e
  4257e1:	adc    bh,bh
  4257e3:	(bad)  
  4257e4:	jl     0x4257f4
  4257e6:	(bad)  
  4257e7:	(bad)  
  4257e8:	in     al,dx
  4257e9:	adc    edi,edi
  4257eb:	(bad)  
  4257ec:	in     al,dx
  4257ed:	adc    edi,edi
  4257ef:	push   QWORD PTR [rcx]
  4257f1:	(bad)  
  4257f2:	(bad)  
  4257f3:	call   FWORD PTR [rdi+rcx*1-0x1]
  4257f7:	jmp    FWORD PTR [rax+rdx*1-0x1]
  4257fb:	(bad)  
  4257fc:	in     al,dx
  4257fd:	adc    edi,edi
  4257ff:	(bad)  
  425800:	in     al,dx
  425801:	adc    edi,edi
  425803:	jmp    FWORD PTR [rax+rdx*1-0x1]
  425807:	(bad)  
  425808:	in     al,dx
  425809:	adc    edi,edi
  42580b:	call   FWORD PTR [rdi+rcx*1-0x1]
  42580f:	dec    DWORD PTR [rcx+0x6e]
  425812:	imul   bp,WORD PTR [rsi+0x69],0x7974
  425818:	add    BYTE PTR [rsi+0x61],cl
  42581b:	rex.WRX add BYTE PTR [rax],r14b
  42581e:	add    BYTE PTR [rax],al
  425820:	jle    0x42583c
  425822:	(bad)  
  425823:	push   QWORD PTR [rcx+rbx*1+0x19b4ffff]
  42582a:	(bad)  
  42582b:	push   rax
  42582d:	sbb    bh,bh
  42582f:	inc    ebx
  425831:	sbb    bh,bh
  425833:	inc    DWORD PTR [rax]
	...
  42583d:	add    al,bh
  42583f:	(bad)  
  425840:	(bad)  
  425841:	rex.XB outs dx,DWORD PTR ds:[rsi]
  425843:	movsxd esp,DWORD PTR [rdi-0x4cc02d79]
  425849:	enter  0x8b60,0x28
  42584d:	mov    al,dh
  42584f:	(bad)  
  425850:	sti    
  425851:	jns    0x4257f2
  425853:	push   rax
  425854:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  425858:	add    al,0xfa
  42585a:	jge    0x4257f9
  42585c:	(bad)  
  42585d:	sub    eax,0x5a323c94
  425862:	rex.RXB push r13
  425864:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  425868:	add    BYTE PTR [rax],al
  42586a:	add    BYTE PTR [rax],al
  42586c:	add    BYTE PTR [rax],al
  42586e:	lock (bad) 
  425870:	add    BYTE PTR [rax],al
  425872:	add    BYTE PTR [rax],al
  425874:	add    BYTE PTR [rax],al
  425876:	and    al,0x40
  425878:	add    BYTE PTR [rax],al
  42587a:	add    BYTE PTR [rax],al
  42587c:	add    BYTE PTR [rax],al
  42587e:	or     BYTE PTR [rax+0x0],al
  425881:	add    BYTE PTR [rax],al
  425883:	add    BYTE PTR [rax],al
  425885:	add    BYTE PTR [rax+rax*2],bl
  425888:	add    BYTE PTR [rax],al
  42588a:	add    BYTE PTR [rax],al
  42588c:	add    BYTE PTR [rax],al
  42588e:	adc    al,0x40
  425890:	add    BYTE PTR [rax],al
  425892:	add    BYTE PTR [rax],al
  425894:	add    BYTE PTR [rax],al
  425896:	add    BYTE PTR [rax+0x0],al
	...
  4258a4:	add    BYTE PTR [rax],al
  4258a6:	loopne 0x4258e7
	...
  4258c0:	add    eax,0x19000000
  4258c5:	add    BYTE PTR [rax],al
  4258c7:	add    BYTE PTR [rbp+0x0],bh
	...
  425906:	lock (bad) 
  425908:	add    BYTE PTR [rax],al
  42590a:	add    BYTE PTR [rax],al
  42590c:	add    BYTE PTR [rax],al
  42590e:	and    al,0x40
  425910:	add    BYTE PTR [rax],al
  425912:	add    BYTE PTR [rax],al
  425914:	add    BYTE PTR [rax],al
  425916:	pop    rcx
  425917:	add    BYTE PTR [rax],al
  42591a:	add    BYTE PTR [rax],al
  42591c:	add    BYTE PTR [rax-0x71],al
  42591f:	add    BYTE PTR [rax],al
  425922:	add    BYTE PTR [rax],al
  425924:	add    BYTE PTR [rax+0x40c3],cl
  42592a:	add    BYTE PTR [rax],al
  42592c:	add    BYTE PTR [rdx-0x8],ch
  42592f:	add    BYTE PTR [rax],al
  425932:	add    BYTE PTR [rax],al
  425934:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  42593c:	rcl    BYTE PTR [rdx],1
  42593e:	movsxd eax,DWORD PTR [rcx+0x0]
  425941:	add    BYTE PTR [rax],al
  425943:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  42594a:	add    BYTE PTR [rax],al
  42594c:	gs int 0xcd
  42594f:	add    BYTE PTR [r8],al
  425952:	add    BYTE PTR [rax],ah
  425954:	pop    rdi
  425955:	movabs al,ds:0x4876e80000004202
  42595e:	(bad)  
  42595f:	rex.X add BYTE PTR [rax],al
  425962:	add    BYTE PTR [rdx+0x426d1a94],ah
  425968:	add    BYTE PTR [rax],al
  42596a:	rex in eax,0x9c
  42596d:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  425973:	(bad)  
  425974:	(bad)  
  425975:	mov    esp,0x42d6
  42597a:	xor    al,0x26
  42597c:	cmc    
  42597d:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  425981:	and    al,0x37
  425984:	jns    0x425949
  425986:	rex.B
  425987:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  42598e:	jbe    0x4259d3
  425990:	add    al,cl
  425992:	rex.WRX
  425993:	ins    DWORD PTR es:[edi],dx
  425995:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  42599c:	in     al,0x58
  42599e:	loope  0x4259e3
  4259a0:	rex mov WORD PTR [rbp+0x15af1d78],?
  4259a7:	rex.R push rax
  4259a9:	out    dx,eax
  4259aa:	loop   0x425982
  4259ac:	in     al,0x1a
  4259ae:	rex.WXB
  4259af:	rex.R xchg edx,eax
  4259b1:	(bad)  
  4259b2:	rex.WRB (bad) 
  4259b4:	iret   
  4259b5:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  4259bb:	add    BYTE PTR [rax],al
  4259bd:	add    BYTE PTR [rax],al
  4259bf:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  4259c6:	pushf  
  4259c7:	cmp    al,0x33
  4259c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4259ca:	test   al,0xd5
  4259cc:	and    esi,esi
  4259ce:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd874e7c
  4259d5:	shld   DWORD PTR [rdx],esi,cl
  4259d8:	popf   
  4259d9:	xchg   edi,eax
  4259da:	mov    edi,cs
  4259dc:	or     BYTE PTR [rdx+0x6f43255b],bh
  4259e2:	lods   al,BYTE PTR ds:[rsi]
  4259e3:	sub    BYTE PTR fs:[rsi],al
  4259e6:	enter  0xa,0x0
	...
  4259fe:	add    BYTE PTR [rax],al
  425a00:	add    BYTE PTR [rax-0x3c86c820],al
  425a06:	rex.B
  425a07:	rex.XB (bad) 
  425a09:	outs   dx,BYTE PTR ds:[rsi]
  425a0a:	add    eax,0x93b8b5b5
  425a0f:	rex.RX cmc 
  425a11:	stc    
  425a12:	(bad)  
  425a13:	jmp    0x4d7aa91b
  425a18:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778b534e
  425a1e:	(bad)  
  425a1f:	pop    rdx
  425a20:	cmp    al,0xbf
  425a22:	jae    0x425aa3
  425a24:	fisttp QWORD PTR [rdi+0x15]
  425a27:	jne    0x425a29
	...
  425a3d:	add    BYTE PTR [rax],al
  425a3f:	add    BYTE PTR [rbp+0x0],ch
  425a42:	jae    0x425a44
  425a44:	jbe    0x425a46
  425a46:	movsxd eax,DWORD PTR [rax]
  425a48:	jb     0x425a4a
  425a4a:	je     0x425a4c
  425a4c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  425a51:	add    BYTE PTR [rax+rax*1+0x0],ch
  425a55:	add    BYTE PTR [rdi+0x73],bl
  425a58:	gs je  0x425aba
  425a5b:	outs   dx,DWORD PTR ds:[rsi]
  425a5c:	jne    0x425ad2
  425a5e:	jo     0x425ad5
  425a60:	je     0x425ac1
  425a62:	outs   dx,WORD PTR ds:[rsi]
  425a64:	jb     0x425ad3
  425a66:	(bad)  
  425a67:	je     0x425a69
  425a69:	pop    rdi
  425a6a:	addr32 gs je 0x425acd
  425a6e:	outs   dx,DWORD PTR ds:[rsi]
  425a6f:	jne    0x425ae5
  425a71:	jo     0x425ae8
  425a73:	je     0x425ad4
  425a75:	outs   dx,WORD PTR ds:[rsi]
  425a77:	jb     0x425ae6
  425a79:	(bad)  
  425a7a:	je     0x425a7c
  425a7c:	add    BYTE PTR [rax],al
  425a7e:	add    BYTE PTR [rax],al
  425a80:	jo     0x425a62
  425a82:	add    BYTE PTR [r8],al
	...
  425a8d:	add    BYTE PTR [rax],al
  425a8f:	add    BYTE PTR [rax+0x41e0],al
	...
  425a9d:	add    BYTE PTR [rax],al
  425a9f:	add    al,ah
  425aa1:	mov    BYTE PTR [rcx+0x0],0x0
	...
  425aad:	add    BYTE PTR [rax],al
  425aaf:	add    BYTE PTR [rax+0x62],dl
  425ab2:	rex.X add BYTE PTR [rax],al
	...
  425abd:	add    BYTE PTR [rax],al
  425abf:	add    BYTE PTR [rax+0x62],dl
  425ac2:	rex.X add BYTE PTR [rax],al
	...
  425acd:	add    BYTE PTR [rax],al
  425acf:	add    al,dl
  425ad1:	push   rdx
  425ad2:	rex.X add BYTE PTR [rax],al
	...
  425ae1:	add    BYTE PTR [rax+0x0],al
	...
  425af0:	fdivr  QWORD PTR [rdx+0x42]
	...
  425afe:	add    BYTE PTR [rax],al
  425b00:	hlt    
  425b01:	mov    edx,0x42
	...
  425b0e:	add    BYTE PTR [rax],al
  425b10:	or     al,0xbb
  425b12:	rex.X add BYTE PTR [rax],al
	...
  425b1d:	add    BYTE PTR [rax],al
  425b1f:	add    BYTE PTR [rbx+rdi*4],ch
  425b22:	rex.X add BYTE PTR [rax],al
	...
  425b2d:	add    BYTE PTR [rax],al
  425b2f:	add    BYTE PTR [rbx+rdi*4+0x42],cl
	...
  425b3f:	add    BYTE PTR [rax-0x66],al
  425b42:	rex.X add BYTE PTR [rax],al
	...
  425b4d:	add    BYTE PTR [rax],al
  425b4f:	add    BYTE PTR [rax-0x58],al
  425b52:	rex.X add BYTE PTR [rax],al
	...
  425b5d:	add    BYTE PTR [rax],al
  425b5f:	add    BYTE PTR [rax],bh
  425b61:	test   al,0x42
	...
  425b6f:	add    BYTE PTR [rax],ch
  425b71:	test   al,0x42
	...
  425b7f:	add    BYTE PTR [rax],dh
  425b81:	test   al,0x42
	...
  425b8f:	add    BYTE PTR [rax],al
  425b91:	pop    rcx
  425b92:	rex.X add BYTE PTR [rax],al
	...
  425ba1:	loopne 0x425be5
	...
  425baf:	add    BYTE PTR [rax],dl
  425bb1:	loopne 0x425bf5
	...
  425bbf:	add    BYTE PTR [rax],bl
  425bc1:	loopne 0x425c05
	...
  425bcf:	add    BYTE PTR [rax],dh
  425bd1:	loopne 0x425c15
	...
  425bdf:	add    al,dl
  425be1:	xchg   ebx,eax
  425be2:	rex.X add BYTE PTR [rax],al
	...
  425bed:	add    BYTE PTR [rax],al
  425bef:	add    BYTE PTR [rax],dl
  425bf1:	(bad)  
  425bf2:	rex.X add BYTE PTR [rax],al
	...
  425bfd:	add    BYTE PTR [rax],al
  425bff:	add    BYTE PTR [rax],dl
  425c01:	xor    al,BYTE PTR [rcx+0x0]
	...
  425c10:	(bad)  
  425c11:	sub    DWORD PTR [rcx+0x0],eax
	...
  425c20:	rcr    BYTE PTR [rcx+0x42],0x0
	...
  425c2f:	add    BYTE PTR [rax],bl
  425c31:	test   al,0x42
	...
  425c3f:	add    BYTE PTR [rax],dl
  425c41:	test   al,0x42
	...
  425c4f:	add    BYTE PTR [rax],dh
  425c51:	adc    eax,0x40
	...
  425c5e:	add    BYTE PTR [rax],al
  425c60:	lock cdq 
  425c62:	rex.X add BYTE PTR [rax],al
	...
  425c6d:	add    BYTE PTR [rax],al
  425c6f:	add    al,ah
  425c71:	xchg   ebx,eax
  425c72:	rex.X add BYTE PTR [rax],al
	...
  425c7d:	add    BYTE PTR [rax],al
  425c7f:	add    al,bl
  425c81:	cdq    
  425c82:	rex.X add BYTE PTR [rax],al
	...
  425c8d:	add    BYTE PTR [rax],al
  425c8f:	add    ah,dl
  425c91:	cdq    
  425c92:	rex.X add BYTE PTR [rax],al
	...
  425c9d:	add    BYTE PTR [rax],al
  425c9f:	add    al,dl
  425ca1:	cdq    
  425ca2:	rex.X add BYTE PTR [rax],al
	...
  425cad:	add    BYTE PTR [rax],al
  425caf:	add    BYTE PTR [rdx+rdx*2+0x42],dl
	...
  425cbe:	add    BYTE PTR [rax],al
  425cc0:	cwde   
  425cc1:	push   rdx
  425cc2:	rex.X add BYTE PTR [rax],al
	...
  425ccd:	add    BYTE PTR [rax],al
  425ccf:	add    BYTE PTR [rdi+0x43],al
  425cd2:	rex.XB cmp spl,BYTE PTR [r8]
  425cd5:	sub    BYTE PTR [rdi+0x4e],al
  425cd8:	push   rbp
  425cd9:	sub    DWORD PTR [rax],esp
  425cdb:	xor    al,0x2e
  425cdd:	cmp    DWORD PTR [rsi],ebp
  425cdf:	xor    al,0x0
	...
  425ced:	add    BYTE PTR [rax],al
  425cef:	add    BYTE PTR [rdi+0x43],al
  425cf2:	rex.XB cmp spl,BYTE PTR [r8]
  425cf5:	sub    BYTE PTR [rdi+0x4e],al
  425cf8:	push   rbp
  425cf9:	sub    DWORD PTR [rax],esp
  425cfb:	xor    al,0x2e
  425cfd:	cmp    DWORD PTR [rsi],ebp
  425cff:	xor    al,0x0
	...
  425d0d:	add    BYTE PTR [rax],al
  425d0f:	add    BYTE PTR [rdi+0x43],al
  425d12:	rex.XB cmp spl,BYTE PTR [r8]
  425d15:	sub    BYTE PTR [rdi+0x4e],al
  425d18:	push   rbp
  425d19:	sub    DWORD PTR [rax],esp
  425d1b:	xor    al,0x2e
  425d1d:	cmp    DWORD PTR [rsi],ebp
  425d1f:	xor    al,0x0
	...
  425d2d:	add    BYTE PTR [rax],al
  425d2f:	add    BYTE PTR [rdi+0x43],al
  425d32:	rex.XB cmp spl,BYTE PTR [r8]
  425d35:	sub    BYTE PTR [rdi+0x4e],al
  425d38:	push   rbp
  425d39:	sub    DWORD PTR [rax],esp
  425d3b:	xor    al,0x2e
  425d3d:	cmp    DWORD PTR [rsi],ebp
  425d3f:	xor    al,0x0
	...
  425d4d:	add    BYTE PTR [rax],al
  425d4f:	add    BYTE PTR [rdi+0x43],al
  425d52:	rex.XB cmp spl,BYTE PTR [r8]
  425d55:	sub    BYTE PTR [rdi+0x4e],al
  425d58:	push   rbp
  425d59:	sub    DWORD PTR [rax],esp
  425d5b:	xor    al,0x2e
  425d5d:	cmp    DWORD PTR [rsi],ebp
  425d5f:	xor    al,0x0
	...
  425d6d:	add    BYTE PTR [rax],al
  425d6f:	add    BYTE PTR [rdi+0x43],al
  425d72:	rex.XB cmp spl,BYTE PTR [r8]
  425d75:	sub    BYTE PTR [rdi+0x4e],al
  425d78:	push   rbp
  425d79:	sub    DWORD PTR [rax],esp
  425d7b:	xor    al,0x2e
  425d7d:	cmp    DWORD PTR [rsi],ebp
  425d7f:	xor    al,0x0
	...
  425d8d:	add    BYTE PTR [rax],al
  425d8f:	add    BYTE PTR [rdi+0x43],al
  425d92:	rex.XB cmp spl,BYTE PTR [r8]
  425d95:	sub    BYTE PTR [rdi+0x4e],al
  425d98:	push   rbp
  425d99:	sub    DWORD PTR [rax],esp
  425d9b:	xor    al,0x2e
  425d9d:	cmp    DWORD PTR [rsi],ebp
  425d9f:	xor    al,0x0
	...
  425dad:	add    BYTE PTR [rax],al
  425daf:	add    BYTE PTR [rdi+0x43],al
  425db2:	rex.XB cmp spl,BYTE PTR [r8]
  425db5:	sub    BYTE PTR [rdi+0x4e],al
  425db8:	push   rbp
  425db9:	sub    DWORD PTR [rax],esp
  425dbb:	xor    al,0x2e
  425dbd:	cmp    DWORD PTR [rsi],ebp
  425dbf:	xor    al,0x0
	...
  425dcd:	add    BYTE PTR [rax],al
  425dcf:	add    BYTE PTR [rdi+0x43],al
  425dd2:	rex.XB cmp spl,BYTE PTR [r8]
  425dd5:	sub    BYTE PTR [rdi+0x4e],al
  425dd8:	push   rbp
  425dd9:	sub    DWORD PTR [rax],esp
  425ddb:	xor    al,0x2e
  425ddd:	cmp    DWORD PTR [rsi],ebp
  425ddf:	xor    al,0x0
	...
  425ded:	add    BYTE PTR [rax],al
  425def:	add    BYTE PTR [rdi+0x43],al
  425df2:	rex.XB cmp spl,BYTE PTR [r8]
  425df5:	sub    BYTE PTR [rdi+0x4e],al
  425df8:	push   rbp
  425df9:	sub    DWORD PTR [rax],esp
  425dfb:	xor    al,0x2e
  425dfd:	cmp    DWORD PTR [rsi],ebp
  425dff:	xor    al,0x0
	...
  425e0d:	add    BYTE PTR [rax],al
  425e0f:	add    BYTE PTR [rdi+0x43],al
  425e12:	rex.XB cmp spl,BYTE PTR [r8]
  425e15:	sub    BYTE PTR [rdi+0x4e],al
  425e18:	push   rbp
  425e19:	sub    DWORD PTR [rax],esp
  425e1b:	xor    al,0x2e
  425e1d:	cmp    DWORD PTR [rsi],ebp
  425e1f:	xor    al,0x0
	...
  425e2d:	add    BYTE PTR [rax],al
  425e2f:	add    BYTE PTR [rdi+0x43],al
  425e32:	rex.XB cmp spl,BYTE PTR [r8]
  425e35:	sub    BYTE PTR [rdi+0x4e],al
  425e38:	push   rbp
  425e39:	sub    DWORD PTR [rax],esp
  425e3b:	xor    al,0x2e
  425e3d:	cmp    DWORD PTR [rsi],ebp
  425e3f:	xor    al,0x0
	...
  425e4d:	add    BYTE PTR [rax],al
  425e4f:	add    BYTE PTR [rdi+0x43],al
  425e52:	rex.XB cmp spl,BYTE PTR [r8]
  425e55:	sub    BYTE PTR [rdi+0x4e],al
  425e58:	push   rbp
  425e59:	sub    DWORD PTR [rax],esp
  425e5b:	xor    al,0x2e
  425e5d:	cmp    DWORD PTR [rsi],ebp
  425e5f:	xor    al,0x0
	...
  425e6d:	add    BYTE PTR [rax],al
  425e6f:	add    BYTE PTR [rdi+0x43],al
  425e72:	rex.XB cmp spl,BYTE PTR [r8]
  425e75:	sub    BYTE PTR [rdi+0x4e],al
  425e78:	push   rbp
  425e79:	sub    DWORD PTR [rax],esp
  425e7b:	xor    al,0x2e
  425e7d:	cmp    DWORD PTR [rsi],ebp
  425e7f:	xor    al,0x0
	...
  425e8d:	add    BYTE PTR [rax],al
  425e8f:	add    BYTE PTR [rdi+0x43],al
  425e92:	rex.XB cmp spl,BYTE PTR [r8]
  425e95:	sub    BYTE PTR [rdi+0x4e],al
  425e98:	push   rbp
  425e99:	sub    DWORD PTR [rax],esp
  425e9b:	xor    al,0x2e
  425e9d:	cmp    DWORD PTR [rsi],ebp
  425e9f:	xor    al,0x0
	...
  425ead:	add    BYTE PTR [rax],al
  425eaf:	add    BYTE PTR [rdi+0x43],al
  425eb2:	rex.XB cmp spl,BYTE PTR [r8]
  425eb5:	sub    BYTE PTR [rdi+0x4e],al
  425eb8:	push   rbp
  425eb9:	sub    DWORD PTR [rax],esp
  425ebb:	xor    al,0x2e
  425ebd:	cmp    DWORD PTR [rsi],ebp
  425ebf:	xor    al,0x0
	...
  425ecd:	add    BYTE PTR [rax],al
  425ecf:	add    BYTE PTR [rdi+0x43],al
  425ed2:	rex.XB cmp spl,BYTE PTR [r8]
  425ed5:	sub    BYTE PTR [rdi+0x4e],al
  425ed8:	push   rbp
  425ed9:	sub    DWORD PTR [rax],esp
  425edb:	xor    al,0x2e
  425edd:	cmp    DWORD PTR [rsi],ebp
  425edf:	xor    al,0x0
	...
  425eed:	add    BYTE PTR [rax],al
  425eef:	add    BYTE PTR [rdi+0x43],al
  425ef2:	rex.XB cmp spl,BYTE PTR [r8]
  425ef5:	sub    BYTE PTR [rdi+0x4e],al
  425ef8:	push   rbp
  425ef9:	sub    DWORD PTR [rax],esp
  425efb:	xor    al,0x2e
  425efd:	cmp    DWORD PTR [rsi],ebp
  425eff:	xor    al,0x0
	...
  425f0d:	add    BYTE PTR [rax],al
  425f0f:	add    BYTE PTR [rdi+0x43],al
  425f12:	rex.XB cmp spl,BYTE PTR [r8]
  425f15:	sub    BYTE PTR [rdi+0x4e],al
  425f18:	push   rbp
  425f19:	sub    DWORD PTR [rax],esp
  425f1b:	xor    al,0x2e
  425f1d:	cmp    DWORD PTR [rsi],ebp
  425f1f:	xor    al,0x0
	...
  425f2d:	add    BYTE PTR [rax],al
  425f2f:	add    BYTE PTR [rdi+0x43],al
  425f32:	rex.XB cmp spl,BYTE PTR [r8]
  425f35:	sub    BYTE PTR [rdi+0x4e],al
  425f38:	push   rbp
  425f39:	sub    DWORD PTR [rax],esp
  425f3b:	xor    al,0x2e
  425f3d:	cmp    DWORD PTR [rsi],ebp
  425f3f:	xor    al,0x0
	...
  425f4d:	add    BYTE PTR [rax],al
  425f4f:	add    BYTE PTR [rdi+0x43],al
  425f52:	rex.XB cmp spl,BYTE PTR [r8]
  425f55:	sub    BYTE PTR [rdi+0x4e],al
  425f58:	push   rbp
  425f59:	sub    DWORD PTR [rax],esp
  425f5b:	xor    al,0x2e
  425f5d:	cmp    DWORD PTR [rsi],ebp
  425f5f:	xor    al,0x0
	...
  425f6d:	add    BYTE PTR [rax],al
  425f6f:	add    BYTE PTR [rdi+0x43],al
  425f72:	rex.XB cmp spl,BYTE PTR [r8]
  425f75:	sub    BYTE PTR [rdi+0x4e],al
  425f78:	push   rbp
  425f79:	sub    DWORD PTR [rax],esp
  425f7b:	xor    al,0x2e
  425f7d:	cmp    DWORD PTR [rsi],ebp
  425f7f:	xor    al,0x0
	...
  425f8d:	add    BYTE PTR [rax],al
  425f8f:	add    BYTE PTR [rdi+0x43],al
  425f92:	rex.XB cmp spl,BYTE PTR [r8]
  425f95:	sub    BYTE PTR [rdi+0x4e],al
  425f98:	push   rbp
  425f99:	sub    DWORD PTR [rax],esp
  425f9b:	xor    al,0x2e
  425f9d:	cmp    DWORD PTR [rsi],ebp
  425f9f:	xor    al,0x0
	...
  425fad:	add    BYTE PTR [rax],al
  425faf:	add    BYTE PTR [rdi+0x43],al
  425fb2:	rex.XB cmp spl,BYTE PTR [r8]
  425fb5:	sub    BYTE PTR [rdi+0x4e],al
  425fb8:	push   rbp
  425fb9:	sub    DWORD PTR [rax],esp
  425fbb:	xor    al,0x2e
  425fbd:	cmp    DWORD PTR [rsi],ebp
  425fbf:	xor    al,0x0
	...
  425fcd:	add    BYTE PTR [rax],al
  425fcf:	add    BYTE PTR [rdi+0x43],al
  425fd2:	rex.XB cmp spl,BYTE PTR [r8]
  425fd5:	sub    BYTE PTR [rdi+0x4e],al
  425fd8:	push   rbp
  425fd9:	sub    DWORD PTR [rax],esp
  425fdb:	xor    al,0x2e
  425fdd:	cmp    DWORD PTR [rsi],ebp
  425fdf:	xor    al,0x0
	...
  425fed:	add    BYTE PTR [rax],al
  425fef:	add    BYTE PTR [rdi+0x43],al
  425ff2:	rex.XB cmp spl,BYTE PTR [r8]
  425ff5:	sub    BYTE PTR [rdi+0x4e],al
  425ff8:	push   rbp
  425ff9:	sub    DWORD PTR [rax],esp
  425ffb:	xor    al,0x2e
  425ffd:	cmp    DWORD PTR [rsi],ebp
  425fff:	xor    al,0x0
	...
  42600d:	add    BYTE PTR [rax],al
  42600f:	add    BYTE PTR [rdi+0x43],al
  426012:	rex.XB cmp spl,BYTE PTR [r8]
  426015:	sub    BYTE PTR [rdi+0x4e],al
  426018:	push   rbp
  426019:	sub    DWORD PTR [rax],esp
  42601b:	xor    al,0x2e
  42601d:	cmp    DWORD PTR [rsi],ebp
  42601f:	xor    al,0x0
	...
  42602d:	add    BYTE PTR [rax],al
  42602f:	add    BYTE PTR [rdi+0x43],al
  426032:	rex.XB cmp spl,BYTE PTR [r8]
  426035:	sub    BYTE PTR [rdi+0x4e],al
  426038:	push   rbp
  426039:	sub    DWORD PTR [rax],esp
  42603b:	xor    al,0x2e
  42603d:	cmp    DWORD PTR [rsi],ebp
  42603f:	xor    al,0x0
	...
  42604d:	add    BYTE PTR [rax],al
  42604f:	add    BYTE PTR [rdi+0x43],al
  426052:	rex.XB cmp spl,BYTE PTR [r8]
  426055:	sub    BYTE PTR [rdi+0x4e],al
  426058:	push   rbp
  426059:	sub    DWORD PTR [rax],esp
  42605b:	xor    al,0x2e
  42605d:	cmp    DWORD PTR [rsi],ebp
  42605f:	xor    al,0x0
	...
  42606d:	add    BYTE PTR [rax],al
  42606f:	add    BYTE PTR [rdi+0x43],al
  426072:	rex.XB cmp spl,BYTE PTR [r8]
  426075:	sub    BYTE PTR [rdi+0x4e],al
  426078:	push   rbp
  426079:	sub    DWORD PTR [rax],esp
  42607b:	xor    al,0x2e
  42607d:	cmp    DWORD PTR [rsi],ebp
  42607f:	xor    al,0x0
	...
  42608d:	add    BYTE PTR [rax],al
  42608f:	add    BYTE PTR [rdi+0x43],al
  426092:	rex.XB cmp spl,BYTE PTR [r8]
  426095:	sub    BYTE PTR [rdi+0x4e],al
  426098:	push   rbp
  426099:	sub    DWORD PTR [rax],esp
  42609b:	xor    al,0x2e
  42609d:	cmp    DWORD PTR [rsi],ebp
  42609f:	xor    al,0x0
	...
  4260ad:	add    BYTE PTR [rax],al
  4260af:	add    BYTE PTR [rdi+0x43],al
  4260b2:	rex.XB cmp spl,BYTE PTR [r8]
  4260b5:	sub    BYTE PTR [rdi+0x4e],al
  4260b8:	push   rbp
  4260b9:	sub    DWORD PTR [rax],esp
  4260bb:	xor    al,0x2e
  4260bd:	cmp    DWORD PTR [rsi],ebp
  4260bf:	xor    al,0x0
	...
  4260cd:	add    BYTE PTR [rax],al
  4260cf:	add    BYTE PTR [rdi+0x43],al
  4260d2:	rex.XB cmp spl,BYTE PTR [r8]
  4260d5:	sub    BYTE PTR [rdi+0x4e],al
  4260d8:	push   rbp
  4260d9:	sub    DWORD PTR [rax],esp
  4260db:	xor    al,0x2e
  4260dd:	cmp    DWORD PTR [rsi],ebp
  4260df:	xor    al,0x0
	...
  4260ed:	add    BYTE PTR [rax],al
  4260ef:	add    BYTE PTR [rdi+0x43],al
  4260f2:	rex.XB cmp spl,BYTE PTR [r8]
  4260f5:	sub    BYTE PTR [rdi+0x4e],al
  4260f8:	push   rbp
  4260f9:	sub    DWORD PTR [rax],esp
  4260fb:	xor    al,0x2e
  4260fd:	cmp    DWORD PTR [rsi],ebp
  4260ff:	xor    al,0x0
	...
  42610d:	add    BYTE PTR [rax],al
  42610f:	add    BYTE PTR [rdi+0x43],al
  426112:	rex.XB cmp spl,BYTE PTR [r8]
  426115:	sub    BYTE PTR [rdi+0x4e],al
  426118:	push   rbp
  426119:	sub    DWORD PTR [rax],esp
  42611b:	xor    al,0x2e
  42611d:	cmp    DWORD PTR [rsi],ebp
  42611f:	xor    al,0x0
	...
  42612d:	add    BYTE PTR [rax],al
  42612f:	add    BYTE PTR [rdi+0x43],al
  426132:	rex.XB cmp spl,BYTE PTR [r8]
  426135:	sub    BYTE PTR [rdi+0x4e],al
  426138:	push   rbp
  426139:	sub    DWORD PTR [rax],esp
  42613b:	xor    al,0x2e
  42613d:	cmp    DWORD PTR [rsi],ebp
  42613f:	xor    al,0x0
	...
  42614d:	add    BYTE PTR [rax],al
  42614f:	add    BYTE PTR [rdi+0x43],al
  426152:	rex.XB cmp spl,BYTE PTR [r8]
  426155:	sub    BYTE PTR [rdi+0x4e],al
  426158:	push   rbp
  426159:	sub    DWORD PTR [rax],esp
  42615b:	xor    al,0x2e
  42615d:	cmp    DWORD PTR [rsi],ebp
  42615f:	xor    al,0x0
	...
  42616d:	add    BYTE PTR [rax],al
  42616f:	add    BYTE PTR [rdi+0x43],al
  426172:	rex.XB cmp spl,BYTE PTR [r8]
  426175:	sub    BYTE PTR [rdi+0x4e],al
  426178:	push   rbp
  426179:	sub    DWORD PTR [rax],esp
  42617b:	xor    al,0x2e
  42617d:	cmp    DWORD PTR [rsi],ebp
  42617f:	xor    al,0x0
	...
  42618d:	add    BYTE PTR [rax],al
  42618f:	add    BYTE PTR [rdi+0x43],al
  426192:	rex.XB cmp spl,BYTE PTR [r8]
  426195:	sub    BYTE PTR [rdi+0x4e],al
  426198:	push   rbp
  426199:	sub    DWORD PTR [rax],esp
  42619b:	xor    al,0x2e
  42619d:	cmp    DWORD PTR [rsi],ebp
  42619f:	xor    al,0x0
	...
  4261ad:	add    BYTE PTR [rax],al
  4261af:	add    BYTE PTR [rdi+0x43],al
  4261b2:	rex.XB cmp spl,BYTE PTR [r8]
  4261b5:	sub    BYTE PTR [rdi+0x4e],al
  4261b8:	push   rbp
  4261b9:	sub    DWORD PTR [rax],esp
  4261bb:	xor    al,0x2e
  4261bd:	cmp    DWORD PTR [rsi],ebp
  4261bf:	xor    al,0x0
	...
  4261cd:	add    BYTE PTR [rax],al
  4261cf:	add    BYTE PTR [rdi+0x43],al
  4261d2:	rex.XB cmp spl,BYTE PTR [r8]
  4261d5:	sub    BYTE PTR [rdi+0x4e],al
  4261d8:	push   rbp
  4261d9:	sub    DWORD PTR [rax],esp
  4261db:	xor    al,0x2e
  4261dd:	cmp    DWORD PTR [rsi],ebp
  4261df:	xor    al,0x0
	...
  4261ed:	add    BYTE PTR [rax],al
  4261ef:	add    BYTE PTR [rdi+0x43],al
  4261f2:	rex.XB cmp spl,BYTE PTR [r8]
  4261f5:	sub    BYTE PTR [rdi+0x4e],al
  4261f8:	push   rbp
  4261f9:	sub    DWORD PTR [rax],esp
  4261fb:	xor    al,0x2e
  4261fd:	cmp    DWORD PTR [rsi],ebp
  4261ff:	xor    al,0x0
	...
  42620d:	add    BYTE PTR [rax],al
  42620f:	add    BYTE PTR [rdi+0x43],al
  426212:	rex.XB cmp spl,BYTE PTR [r8]
  426215:	sub    BYTE PTR [rdi+0x4e],al
  426218:	push   rbp
  426219:	sub    DWORD PTR [rax],esp
  42621b:	xor    al,0x2e
  42621d:	cmp    DWORD PTR [rsi],ebp
  42621f:	xor    al,0x0
	...
  42622d:	add    BYTE PTR [rax],al
  42622f:	add    BYTE PTR [rdi+0x43],al
  426232:	rex.XB cmp spl,BYTE PTR [r8]
  426235:	sub    BYTE PTR [rdi+0x4e],al
  426238:	push   rbp
  426239:	sub    DWORD PTR [rax],esp
  42623b:	xor    al,0x2e
  42623d:	cmp    DWORD PTR [rsi],ebp
  42623f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000427000 <.pdata>:
  427000:	add    BYTE PTR [rax],dl
  427002:	add    BYTE PTR [rax],al
  427004:	add    DWORD PTR [rax],edx
  427006:	add    BYTE PTR [rax],al
  427008:	add    BYTE PTR [rax+0x10100002],al
  42700e:	add    BYTE PTR [rax],al
  427010:	push   rcx
  427011:	adc    DWORD PTR [rax],eax
  427013:	add    BYTE PTR [rax+rax*4],al
  427016:	add    al,BYTE PTR [rax]
  427018:	(bad)  
  427019:	adc    DWORD PTR [rax],eax
  42701b:	add    BYTE PTR [rsi+0xc000011],ch
  427021:	add    BYTE PTR [rdx],0x0
  427024:	mov    al,0x11
  427026:	add    BYTE PTR [rax],al
  427028:	(bad)  
  427029:	adc    al,0x0
  42702b:	add    BYTE PTR [rax+rax*4],dl
  42702e:	add    al,BYTE PTR [rax]
  427030:	rcl    BYTE PTR [rax+rax*1],1
  427033:	add    dl,dh
  427035:	adc    al,0x0
  427037:	add    BYTE PTR [rax],ch
  427039:	add    BYTE PTR [rdx],0x0
  42703c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15647042
  427042:	add    BYTE PTR [rax],al
  427044:	rex.W add BYTE PTR [rdx],0x0
  427048:	xor    BYTE PTR [rip+0x15570000],dl        # 0x1599704e
  42704e:	add    BYTE PTR [rax],al
  427050:	push   0x60000280
  427055:	adc    eax,0x15870000
  42705a:	add    BYTE PTR [rax],al
  42705c:	je     0x426fde
  42705e:	add    al,BYTE PTR [rax]
  427060:	nop
  427061:	adc    eax,0x15b20000
  427066:	add    BYTE PTR [rax],al
  427068:	jl     0x426fea
  42706a:	add    al,BYTE PTR [rax]
  42706c:	rcl    BYTE PTR [rip+0x15e10000],0x0        # 0x16237073
  427073:	add    BYTE PTR [rax+rax*4+0x15f00002],al
  42707a:	add    BYTE PTR [rax],al
  42707c:	ins    DWORD PTR es:[rdi],dx
  42707d:	(bad)  
  42707e:	add    BYTE PTR [rax],al
  427080:	mov    BYTE PTR [rax+0x16700002],al
  427086:	add    BYTE PTR [rax],al
  427088:	lea    edx,[rsi]
  42708a:	add    BYTE PTR [rax],al
  42708c:	pushf  
  42708d:	add    BYTE PTR [rdx],0x0
  427090:	nop
  427091:	(bad)  
  427092:	add    BYTE PTR [rax],al
  427094:	(bad)
  427097:	add    BYTE PTR [rax+rax*4+0x17d00002],ah
  42709e:	add    BYTE PTR [rax],al
  4270a0:	add    eax,0xb8000019
  4270a5:	add    BYTE PTR [rdx],0x0
  4270a8:	adc    BYTE PTR [rcx],bl
  4270aa:	add    BYTE PTR [rax],al
  4270ac:	int    0x1a
  4270ae:	add    BYTE PTR [rax],al
  4270b0:	int3   
  4270b1:	add    BYTE PTR [rdx],0x0
  4270b4:	rcr    BYTE PTR [rdx],1
  4270b6:	add    BYTE PTR [rax],al
  4270b8:	(bad)  
  4270b9:	sbb    eax,DWORD PTR [rax]
  4270bb:	add    ah,ah
  4270bd:	add    BYTE PTR [rdx],0x0
  4270c0:	loopne 0x4270dd
  4270c2:	add    BYTE PTR [rax],al
  4270c4:	or     DWORD PTR [rax+rax*1],ebx
  4270c7:	add    ah,dh
  4270c9:	add    BYTE PTR [rdx],0x0
  4270cc:	adc    BYTE PTR [rax+rax*1],bl
  4270cf:	add    BYTE PTR [rip+0xfffffffffc00001c],ch        # 0xfffffffffc4270f1
  4270d5:	add    BYTE PTR [rdx],0x0
  4270d8:	xor    BYTE PTR [rax+rax*1],bl
  4270db:	add    BYTE PTR [rsp+rbx*1+0x0],dh
  4270df:	add    BYTE PTR [rax],al
  4270e1:	add    DWORD PTR [rdx],0x1c8000
  4270e7:	add    BYTE PTR [rcx+0x800001c],dl
  4270ed:	add    DWORD PTR [rdx],0x1ca000
  4270f3:	add    BYTE PTR [rax+0xc00001c],ch
  4270f9:	add    DWORD PTR [rdx],0x1cb000
  4270ff:	add    ch,cl
  427101:	sbb    al,0x0
  427103:	add    BYTE PTR [rax],dl
  427105:	add    DWORD PTR [rdx],0x1cd000
  42710b:	add    BYTE PTR [rdx],dl
  42710d:	and    DWORD PTR [rax],eax
  42710f:	add    BYTE PTR [rax],bl
  427111:	add    DWORD PTR [rdx],0x212000
  427117:	add    bh,al
  427119:	and    eax,DWORD PTR [rax]
  42711b:	add    BYTE PTR [rax],dh
  42711d:	add    DWORD PTR [rdx],0x23d000
  427123:	add    dl,al
  427125:	and    al,0x0
  427127:	add    BYTE PTR [rax-0x7f],cl
  42712a:	add    al,BYTE PTR [rax]
  42712c:	shl    BYTE PTR [rax+rax*1],1
  42712f:	add    BYTE PTR [rdx],cl
  427131:	and    eax,0x815c0000
  427136:	add    al,BYTE PTR [rax]
  427138:	adc    BYTE PTR [rip+0x26bb0000],ah        # 0x26fd713e
  42713e:	add    BYTE PTR [rax],al
  427140:	push   0xffffffffc0000281
  427145:	add    BYTE PTR es:[rax],al
  427148:	jmp    0x427174
  42714a:	add    BYTE PTR [rax],al
  42714c:	jl     0x4270cf
  42714e:	add    al,BYTE PTR [rax]
  427150:	lock sub al,BYTE PTR [rax]
  427153:	add    BYTE PTR [rax+0x2d],dh
  427156:	add    BYTE PTR [rax],al
  427158:	xchg   esp,eax
  427159:	add    DWORD PTR [rdx],0x2d7000
  42715f:	add    ah,ah
  427161:	add    BYTE PTR cs:[rax],al
  427164:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427165:	add    DWORD PTR [rdx],0x2ef000
  42716b:	add    BYTE PTR [rax+0x35],cl
  42716e:	add    BYTE PTR [rax],al
  427170:	mov    eax,0x50000281
  427175:	xor    eax,0x36cb0000
  42717a:	add    BYTE PTR [rax],al
  42717c:	rol    BYTE PTR [rcx+0x36d00002],1
  427182:	add    BYTE PTR [rax],al
  427184:	test   eax,0xe000003c
  427189:	add    DWORD PTR [rdx],0x3cb000
  42718f:	add    BYTE PTR [rbx+0x3e],dh
  427192:	add    BYTE PTR [rax],al
  427194:	or     BYTE PTR [rdx+0x3e800002],al
  42719a:	add    BYTE PTR [rax],al
  42719c:	outs   dx,BYTE PTR ds:[rsi]
  42719d:	rex.XB add BYTE PTR [r8],al
  4271a0:	and    BYTE PTR [rdx+0x43700002],al
  4271a6:	add    BYTE PTR [rax],al
  4271a8:	xchg   ebx,eax
  4271a9:	add    BYTE PTR [rax],r8b
  4271ac:	xor    al,0x82
  4271ae:	add    al,BYTE PTR [rax]
  4271b0:	movabs al,ds:0x4800004ec3000044
  4271b9:	(bad)  
  4271ba:	add    al,BYTE PTR [rax]
  4271bc:	ror    BYTE PTR [rsi+0x0],1
  4271bf:	add    BYTE PTR [rbx],al
  4271c1:	rex.WRXB add BYTE PTR [r8],r8b
  4271c4:	(bad)  
  4271c5:	(bad)  
  4271c6:	add    al,BYTE PTR [rax]
  4271c8:	adc    BYTE PTR [rdi+0x0],cl
  4271cb:	add    BYTE PTR [rbx+0x51],dh
  4271ce:	add    BYTE PTR [rax],al
  4271d0:	push   0xffffffff80000282
  4271d5:	push   rcx
  4271d6:	add    BYTE PTR [rax],al
  4271d8:	or     BYTE PTR [rax+rax*1+0x0],dl
  4271dc:	js     0x427160
  4271de:	add    al,BYTE PTR [rax]
  4271e0:	adc    BYTE PTR [rax+rax*1+0x0],dl
  4271e4:	(bad)  
  4271e5:	push   rsp
  4271e6:	add    BYTE PTR [rax],al
  4271e8:	nop
  4271e9:	(bad)  
  4271ea:	add    al,BYTE PTR [rax]
  4271ec:	and    BYTE PTR [rax+rax*1+0x0],dl
  4271f0:	jbe    0x427246
  4271f2:	add    BYTE PTR [rax],al
  4271f4:	xchg   esp,eax
  4271f5:	(bad)  
  4271f6:	add    al,BYTE PTR [rax]
  4271f8:	adc    BYTE PTR [rax+rax*1+0x0],0xa1
  4271fd:	push   rsp
  4271fe:	add    BYTE PTR [rax],al
  427200:	pushf  
  427201:	(bad)  
  427202:	add    al,BYTE PTR [rax]
  427204:	mov    al,0x54
  427206:	add    BYTE PTR [rax],al
  427208:	(bad)  
  427209:	push   rbp
  42720a:	add    BYTE PTR [rax],al
  42720c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42720d:	(bad)  
  42720e:	add    al,BYTE PTR [rax]
  427210:	adc    BYTE PTR [rbp+0x0],dl
  427213:	add    BYTE PTR [rsi-0x4bffffa3],ah
  427219:	(bad)  
  42721a:	add    al,BYTE PTR [rax]
  42721c:	mov    al,0x5d
  42721e:	add    BYTE PTR [rax],al
  427220:	jno    0x427283
  427222:	add    BYTE PTR [rax],al
  427224:	rol    BYTE PTR [rdx+0x61800002],0x0
  42722b:	add    BYTE PTR [rcx+riz*2-0x7d380000],bl
  427232:	add    al,BYTE PTR [rax]
  427234:	movabs al,ds:0xd0000061c4000061
  42723d:	(bad)  
  42723e:	add    al,BYTE PTR [rax]
  427240:	shl    BYTE PTR [rcx+0x0],1
  427243:	add    BYTE PTR [rip+0xffffffffd8000063],ah        # 0xffffffffd84272ac
  427249:	(bad)  
  42724a:	add    al,BYTE PTR [rax]
  42724c:	xor    BYTE PTR [rbx+0x0],ah
  42724f:	add    BYTE PTR [rax-0xfffff9c],bh
  427255:	(bad)  
  427256:	add    al,BYTE PTR [rax]
  427258:	shl    BYTE PTR [rax+rax*1+0x0],0x0
  42725d:	push   0xffffffff83080000
  427262:	add    al,BYTE PTR [rax]
  427264:	add    BYTE PTR [rax+0x0],ch
  427267:	add    BYTE PTR [rdx],dl
  427269:	push   0xffffffff83200000
  42726e:	add    al,BYTE PTR [rax]
  427270:	and    BYTE PTR [rax+0x0],ch
  427273:	add    BYTE PTR [rip+0x28000068],dh        # 0x284272e1
  427279:	add    DWORD PTR [rdx],0x0
  42727c:	rex push 0x68880000
  427282:	add    BYTE PTR [rax],al
  427284:	xor    BYTE PTR [rbx+0x68900002],al
  42728a:	add    BYTE PTR [rax],al
  42728c:	(bad)  
  42728d:	imul   eax,DWORD PTR [rax],0x2833800
  427293:	add    BYTE PTR [rax],dl
  427295:	imul   eax,DWORD PTR [rax],0x6ab700
  42729b:	add    BYTE PTR [rax-0x7d],al
  42729e:	add    al,BYTE PTR [rax]
  4272a0:	shr    BYTE PTR [rdx+0x0],0x0
  4272a4:	and    DWORD PTR [rbx+0x0],ebp
  4272a7:	add    BYTE PTR [rax-0x7d],bl
  4272aa:	add    al,BYTE PTR [rax]
  4272ac:	xor    BYTE PTR [rbx+0x0],ch
  4272af:	add    BYTE PTR [rcx],ah
  4272b1:	ins    BYTE PTR es:[rdi],dx
  4272b2:	add    BYTE PTR [rax],al
  4272b4:	add    DWORD PTR fs:[rdx],0x0
  4272b8:	xor    BYTE PTR [rax+rax*1+0x0],ch
  4272bc:	pop    rax
  4272bd:	ins    DWORD PTR es:[rdi],dx
  4272be:	add    BYTE PTR [rax],al
  4272c0:	jl     0x427245
  4272c2:	add    al,BYTE PTR [rax]
  4272c4:	(bad)  
  4272c5:	ins    DWORD PTR es:[rdi],dx
  4272c6:	add    BYTE PTR [rax],al
  4272c8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4272c9:	ins    DWORD PTR es:[rdi],dx
  4272ca:	add    BYTE PTR [rax],al
  4272cc:	nop
  4272cd:	add    DWORD PTR [rdx],0x0
  4272d0:	mov    al,0x6d
  4272d2:	add    BYTE PTR [rax],al
  4272d4:	rex.WX jb 0x4272d7
  4272d7:	add    BYTE PTR [rbx+rax*4+0x72500002],bl
  4272de:	add    BYTE PTR [rax],al
  4272e0:	xchg   edi,eax
  4272e1:	jb     0x4272e3
  4272e3:	add    BYTE PTR [rbx+rax*4+0x72a00002],ch
  4272ea:	add    BYTE PTR [rax],al
  4272ec:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4272ed:	jne    0x4272ef
  4272ef:	add    BYTE PTR [rbx+rax*4+0x75b00002],dh
  4272f6:	add    BYTE PTR [rax],al
  4272f8:	div    BYTE PTR [rbp+0x0]
  4272fb:	add    ah,cl
  4272fd:	add    DWORD PTR [rdx],0x0
  427300:	add    BYTE PTR [rsi+0x0],dh
  427303:	add    BYTE PTR [rbx-0x27ffff88],al
  427309:	add    DWORD PTR [rdx],0x0
  42730c:	nop
  42730d:	js     0x42730f
  42730f:	add    BYTE PTR [rdx+0x79],al
  427312:	add    BYTE PTR [rax],al
  427314:	lock add DWORD PTR [rdx],0x0
  427318:	push   rax
  427319:	jns    0x42731b
  42731b:	add    ch,ah
  42731d:	jns    0x42731f
  42731f:	add    BYTE PTR [rax],al
  427321:	test   BYTE PTR [rdx],al
  427323:	add    al,dh
  427325:	jns    0x427327
  427327:	add    BYTE PTR [rcx+0x7b],bl
  42732a:	add    BYTE PTR [rax],al
  42732c:	adc    BYTE PTR [rdx+rax*1+0x7b6000],al
  427333:	add    BYTE PTR [rip+0x2400007d],dl        # 0x244273b6
  427339:	test   BYTE PTR [rdx],al
  42733b:	add    BYTE PTR [rax],ah
  42733d:	jge    0x42733f
  42733f:	add    BYTE PTR [rbp+0x3800007e],dh
  427345:	test   BYTE PTR [rdx],al
  427347:	add    al,al
  427349:	jle    0x42734b
  42734b:	add    cl,cl
  42734d:	jle    0x42734f
  42734f:	add    BYTE PTR [rsp+rax*4+0x2],bl
  427353:	add    al,dl
  427355:	jle    0x427357
  427357:	add    BYTE PTR [rdi+rdi*2],bh
  42735a:	add    BYTE PTR [rax],al
  42735c:	(bad)  
  42735d:	test   BYTE PTR [rdx],al
  42735f:	add    BYTE PTR [rax+0x7f],al
  427362:	add    BYTE PTR [rax],al
  427364:	rex.W jg 0x427367
  427367:	add    BYTE PTR [rax-0x7c],ch
  42736a:	add    al,BYTE PTR [rax]
  42736c:	push   rax
  42736d:	jg     0x42736f
  42736f:	add    BYTE PTR [rdi+rdi*2+0x0],dl
  427373:	add    BYTE PTR [rsp+rax*4+0x2],ch
  427377:	add    BYTE PTR [rax+0x7f],ah
  42737a:	add    BYTE PTR [rax],al
  42737c:	push   0x7000007f
  427381:	test   BYTE PTR [rdx],al
  427383:	add    BYTE PTR [rax+0x7f],dh
  427386:	add    BYTE PTR [rax],al
  427388:	js     0x427409
  42738a:	add    BYTE PTR [rax],al
  42738c:	je     0x427312
  42738e:	add    al,BYTE PTR [rax]
  427390:	cmp    BYTE PTR [rdi+0x0],0x0
  427394:	mov    BYTE PTR [rdi+0x0],bh
  427397:	add    BYTE PTR [rax-0x7c],bh
  42739a:	add    al,BYTE PTR [rax]
  42739c:	nop
  42739d:	jg     0x42739f
  42739f:	add    BYTE PTR [rax+0x7c00007f],bl
  4273a5:	test   BYTE PTR [rdx],al
  4273a7:	add    BYTE PTR [rax-0x57ffff81],ah
  4273ad:	jg     0x4273af
  4273af:	add    BYTE PTR [rax-0x4ffffd7c],al
  4273b5:	jg     0x4273b7
  4273b7:	add    BYTE PTR [rax-0x7bffff81],bh
  4273bd:	test   BYTE PTR [rdx],al
  4273bf:	add    al,al
  4273c1:	jg     0x4273c3
  4273c3:	add    bl,ch
  4273c5:	jg     0x4273c7
  4273c7:	add    BYTE PTR [rax-0xffffd7c],cl
  4273cd:	jg     0x4273cf
  4273cf:	add    BYTE PTR [rdi],dl
  4273d1:	add    BYTE PTR [rax],0x0
  4273d4:	mov    WORD PTR [rdx+rax*1+0x802000],es
  4273db:	add    BYTE PTR [rbp-0x80],bl
  4273de:	add    BYTE PTR [rax],al
  4273e0:	xchg   esp,eax
  4273e1:	test   BYTE PTR [rdx],al
  4273e3:	add    BYTE PTR [rax-0x80],ah
  4273e6:	add    BYTE PTR [rax],al
  4273e8:	add    al,BYTE PTR [rcx-0x7b640000]
  4273ee:	add    al,BYTE PTR [rax]
  4273f0:	adc    BYTE PTR [rcx-0x7d9c0000],al
  4273f6:	add    BYTE PTR [rax],al
  4273f8:	test   al,0x84
  4273fa:	add    al,BYTE PTR [rax]
  4273fc:	jo     0x427380
  4273fe:	add    BYTE PTR [rax],al
  427400:	sub    al,0x83
  427402:	add    BYTE PTR [rax],al
  427404:	mov    eax,0x30000284
  427409:	add    DWORD PTR [rax],0x0
  42740c:	cmp    al,0x83
  42740e:	add    BYTE PTR [rax],al
  427410:	rol    BYTE PTR [rdx+rax*1+0x834000],0x0
  427418:	add    DWORD PTR gs:[rax],0x0
  42741c:	(bad)  
  42741d:	test   BYTE PTR [rdx],al
  42741f:	add    BYTE PTR [rax-0x7d],dh
  427422:	add    BYTE PTR [rax],al
  427424:	loop   0x4273a9
  427426:	add    BYTE PTR [rax],al
  427428:	enter  0x284,0x0
  42742c:	lock add DWORD PTR [rax],0x0
  427430:	sub    al,0x84
  427432:	add    BYTE PTR [rax],al
  427434:	fadd   DWORD PTR [rdx+rax*1+0x843000]
  42743b:	add    BYTE PTR [rcx-0x7c],bh
  42743e:	add    BYTE PTR [rax],al
  427440:	fadd   QWORD PTR [rdx+rax*1+0x848000]
  427447:	add    cl,cl
  427449:	test   BYTE PTR [rax],al
  42744b:	add    ah,ah
  42744d:	test   BYTE PTR [rdx],al
  42744f:	add    al,dl
  427451:	test   BYTE PTR [rax],al
  427453:	add    BYTE PTR [rbp+rax*4+0x0],dh
  427457:	add    ah,ch
  427459:	test   BYTE PTR [rdx],al
  42745b:	add    BYTE PTR [rax-0x53ffff7b],al
  427461:	test   DWORD PTR [rax],eax
  427463:	add    ah,dh
  427465:	test   BYTE PTR [rdx],al
  427467:	add    BYTE PTR [rax+0x65000085],dh
  42746d:	xchg   BYTE PTR [rax],al
  42746f:	add    BYTE PTR [rax],al
  427471:	test   DWORD PTR [rdx],eax
  427473:	add    BYTE PTR [rax-0x7a],dh
  427476:	add    BYTE PTR [rax],al
  427478:	cld    
  427479:	xchg   DWORD PTR [rax],eax
  42747b:	add    BYTE PTR [rax],dl
  42747d:	test   DWORD PTR [rdx],eax
  42747f:	add    BYTE PTR [rax],al
  427481:	mov    BYTE PTR [rax],al
  427483:	add    BYTE PTR [rcx],cl
  427485:	mov    DWORD PTR [rax],eax
  427487:	add    BYTE PTR [rax*4-0x76effffe],ah
  42748e:	add    BYTE PTR [rax],al
  427490:	ins    DWORD PTR es:[rdi],dx
  427491:	mov    al,BYTE PTR [rax]
  427493:	add    BYTE PTR [rax*4-0x758ffffe],dh
  42749a:	add    BYTE PTR [rax],al
  42749c:	sbb    BYTE PTR [rax+rax*1+0x2854400],cl
  4274a3:	add    BYTE PTR [rax],ah
  4274a5:	mov    WORD PTR [rax],es
  4274a7:	add    BYTE PTR [rsi-0x73],dl
  4274aa:	add    BYTE PTR [rax],al
  4274ac:	push   rsp
  4274ad:	test   DWORD PTR [rdx],eax
  4274af:	add    BYTE PTR [rax-0x73],ah
  4274b2:	add    BYTE PTR [rax],al
  4274b4:	fimul  DWORD PTR [rbp-0x7a9c0000]
  4274ba:	add    al,BYTE PTR [rax]
  4274bc:	loopne 0x42744b
  4274be:	add    BYTE PTR [rax],al
  4274c0:	fisttp DWORD PTR [rdi-0x7a8c0000]
  4274c6:	add    al,BYTE PTR [rax]
  4274c8:	loopne 0x427459
  4274ca:	add    BYTE PTR [rax],al
  4274cc:	or     BYTE PTR [rcx-0x7a7c0000],dl
  4274d2:	add    al,BYTE PTR [rax]
  4274d4:	adc    BYTE PTR [rcx-0x6e8e0000],dl
  4274da:	add    BYTE PTR [rax],al
  4274dc:	nop
  4274dd:	test   DWORD PTR [rdx],eax
  4274df:	add    BYTE PTR [rax-0x62ffff6f],al
  4274e5:	xchg   ecx,eax
  4274e6:	add    BYTE PTR [rax],al
  4274e8:	pushf  
  4274e9:	test   DWORD PTR [rdx],eax
  4274eb:	add    BYTE PTR [rax+0x6c000091],ah
  4274f1:	xchg   edx,eax
  4274f2:	add    BYTE PTR [rax],al
  4274f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4274f5:	test   DWORD PTR [rdx],eax
  4274f7:	add    BYTE PTR [rax-0x6e],dh
  4274fa:	add    BYTE PTR [rax],al
  4274fc:	enter  0x92,0x0
  427500:	mov    al,0x85
  427502:	add    al,BYTE PTR [rax]
  427504:	rcl    BYTE PTR [rdx-0x6ca30000],1
  42750a:	add    BYTE PTR [rax],al
  42750c:	mov    esp,0x60000285
  427511:	xchg   ebx,eax
  427512:	add    BYTE PTR [rax],al
  427514:	jl     0x4274a9
  427516:	add    BYTE PTR [rax],al
  427518:	enter  0x285,0x0
  42751c:	adc    BYTE PTR [rbx-0x6ba70000],0x0
  427523:	add    ah,cl
  427525:	test   DWORD PTR [rdx],eax
  427527:	add    BYTE PTR [rax-0x6c],ah
  42752a:	add    BYTE PTR [rax],al
  42752c:	movabs eax,ds:0xb0000285d4000094
  427535:	xchg   esp,eax
  427536:	add    BYTE PTR [rax],al
  427538:	xchg   BYTE PTR [rdi-0x7a240000],dl
  42753e:	add    al,BYTE PTR [rax]
  427540:	nop
  427541:	xchg   edi,eax
  427542:	add    BYTE PTR [rax],al
  427544:	rex (bad) 
  427546:	add    BYTE PTR [rax],al
  427548:	lock test DWORD PTR [rdx],eax
  42754b:	add    BYTE PTR [rax-0x66],al
  42754e:	add    BYTE PTR [rax],al
  427550:	jle    0x4274ee
  427552:	add    BYTE PTR [rax],al
  427554:	add    al,0x86
  427556:	add    al,BYTE PTR [rax]
  427558:	sbb    BYTE PTR [rax+rax*1+0x9e9e00],0x0
  427560:	sbb    al,0x86
  427562:	add    al,BYTE PTR [rax]
  427564:	movabs al,ds:0x280000a29100009e
  42756d:	xchg   BYTE PTR [rdx],al
  42756f:	add    BYTE PTR [rax-0x44ffff5e],ah
  427575:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427576:	add    BYTE PTR [rax],al
  427578:	xchg   BYTE PTR [rdx],al
  42757b:	add    al,al
  42757d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42757e:	add    BYTE PTR [rax],al
  427580:	stc    
  427581:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427582:	add    BYTE PTR [rax],al
  427584:	pop    rax
  427585:	xchg   BYTE PTR [rdx],al
  427587:	add    BYTE PTR [rax],al
  427589:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  42758a:	add    BYTE PTR [rax],al
  42758c:	cmp    DWORD PTR [rbp-0x79a00000],esp
  427592:	add    al,BYTE PTR [rax]
  427594:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  427596:	add    BYTE PTR [rax],al
  427598:	jns    0x42753f
  42759a:	add    BYTE PTR [rax],al
  42759c:	push   0xffffffff80000286
  4275a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4275a2:	add    BYTE PTR [rax],al
  4275a4:	mov    ecx,0x700000a5
  4275a9:	xchg   BYTE PTR [rdx],al
  4275ab:	add    al,al
  4275ad:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4275ae:	add    BYTE PTR [rax],al
  4275b0:	stc    
  4275b1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4275b2:	add    BYTE PTR [rax],al
  4275b4:	js     0x42753c
  4275b6:	add    al,BYTE PTR [rax]
  4275b8:	add    BYTE PTR [rsi-0x59c70000],ah
  4275be:	add    BYTE PTR [rax],al
  4275c0:	add    BYTE PTR [rsi-0x59bffffe],0x0
  4275c7:	add    BYTE PTR [rcx-0x5a],bh
  4275ca:	add    BYTE PTR [rax],al
  4275cc:	mov    BYTE PTR [rsi-0x597ffffe],al
  4275d2:	add    BYTE PTR [rax],al
  4275d4:	mov    ecx,0x900000a6
  4275d9:	xchg   BYTE PTR [rdx],al
  4275db:	add    al,al
  4275dd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4275de:	add    BYTE PTR [rax],al
  4275e0:	stc    
  4275e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4275e2:	add    BYTE PTR [rax],al
  4275e4:	cwde   
  4275e5:	xchg   BYTE PTR [rdx],al
  4275e7:	add    BYTE PTR [rax],al
  4275e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4275ea:	add    BYTE PTR [rax],al
  4275ec:	cmp    DWORD PTR [rdi-0x79600000],esp
  4275f2:	add    al,BYTE PTR [rax]
  4275f4:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4275f6:	add    BYTE PTR [rax],al
  4275f8:	xor    BYTE PTR [rcx-0x79580000],ch
  4275fe:	add    al,BYTE PTR [rax]
  427600:	xor    BYTE PTR [rcx-0x56740000],ch
  427606:	add    BYTE PTR [rax],al
  427608:	rol    BYTE PTR [rsi-0x566ffffe],0x0
  42760f:	add    BYTE PTR [rax],bh
  427611:	stos   DWORD PTR es:[rdi],eax
  427612:	add    BYTE PTR [rax],al
  427614:	int3   
  427615:	xchg   BYTE PTR [rdx],al
  427617:	add    BYTE PTR [rax-0x55],al
  42761a:	add    BYTE PTR [rax],al
  42761c:	(bad)  
  42761d:	lods   al,BYTE PTR ds:[rsi]
  42761e:	add    BYTE PTR [rax],al
  427620:	in     al,0x86
  427622:	add    al,BYTE PTR [rax]
  427624:	adc    BYTE PTR [rax+rax*1+0xac7d00],ch
  42762b:	add    al,dh
  42762d:	xchg   BYTE PTR [rdx],al
  42762f:	add    BYTE PTR [rax-0x1bffff54],al
  427635:	lods   al,BYTE PTR ds:[rsi]
  427636:	add    BYTE PTR [rax],al
  427638:	cld    
  427639:	xchg   BYTE PTR [rdx],al
  42763b:	add    al,dh
  42763d:	lods   al,BYTE PTR ds:[rsi]
  42763e:	add    BYTE PTR [rax],al
  427640:	push   rdi
  427641:	scas   eax,DWORD PTR es:[rdi]
  427642:	add    BYTE PTR [rax],al
  427644:	or     BYTE PTR [rdi-0x509ffffe],al
  42764a:	add    BYTE PTR [rax],al
  42764c:	mov    ?,WORD PTR [rsi-0x78e00000]
  427652:	add    al,BYTE PTR [rax]
  427654:	nop
  427655:	mov    dh,0x0
  427657:	add    BYTE PTR [rbp-0x49],bl
  42765a:	add    BYTE PTR [rax],al
  42765c:	cmp    BYTE PTR [rdi-0x489ffffe],al
  427662:	add    BYTE PTR [rax],al
  427664:	sbb    DWORD PTR [rax-0x78c00000],edi
  42766a:	add    al,BYTE PTR [rax]
  42766c:	and    BYTE PTR [rax-0x47130000],bh
  427672:	add    BYTE PTR [rax],al
  427674:	xchg   QWORD PTR [rdx],r8
  427677:	add    al,dh
  427679:	mov    eax,0xba450000
  42767e:	add    BYTE PTR [rax],al
  427680:	pop    rax
  427681:	xchg   DWORD PTR [rdx],eax
  427683:	add    BYTE PTR [rax-0x46],dl
  427686:	add    BYTE PTR [rax],al
  427688:	ss mov esp,0x87700000
  42768e:	add    al,BYTE PTR [rax]
  427690:	rex mov esp,0xbca20000
  427696:	add    BYTE PTR [rax],al
  427698:	mov    BYTE PTR [rdi-0x434ffffe],al
  42769e:	add    BYTE PTR [rax],al
  4276a0:	sub    DWORD PTR [rdi-0x786c0000],edi
  4276a6:	add    al,BYTE PTR [rax]
  4276a8:	xor    BYTE PTR [rdi-0x402e0000],bh
  4276ae:	add    BYTE PTR [rax],al
  4276b0:	lods   al,BYTE PTR ds:[rsi]
  4276b1:	xchg   DWORD PTR [rdx],eax
  4276b3:	add    al,ah
  4276b5:	mov    edi,0xc4920000
  4276ba:	add    BYTE PTR [rax],al
  4276bc:	mov    esp,0xa0000287
  4276c1:	(bad)  
  4276c2:	add    BYTE PTR [rax],al
  4276c4:	(bad)  
  4276c5:	(bad)
  4276c8:	(bad)  
  4276c9:	xchg   DWORD PTR [rdx],eax
  4276cb:	add    BYTE PTR [rax],ah
  4276cd:	(bad)
  4276d0:	sbb    esi,eax
  4276d2:	add    BYTE PTR [rax],al
  4276d4:	in     al,0x87
  4276d6:	add    al,BYTE PTR [rax]
  4276d8:	and    dh,al
  4276da:	add    BYTE PTR [rax],al
  4276dc:	rex mov DWORD PTR [rax],0x287f400
  4276e3:	add    BYTE PTR [rax-0x39],al
  4276e6:	add    BYTE PTR [rax],al
  4276e8:	(bad)  
  4276e9:	retf   
  4276ea:	add    BYTE PTR [rax],al
  4276ec:	add    al,0x88
  4276ee:	add    al,BYTE PTR [rax]
  4276f0:	and    bl,cl
  4276f2:	add    BYTE PTR [rax],al
  4276f4:	(bad)  
  4276f5:	iret   
  4276f6:	add    BYTE PTR [rax],al
  4276f8:	sbb    BYTE PTR [rax-0x30dffffe],cl
  4276fe:	add    BYTE PTR [rax],al
  427700:	xor    dl,bl
  427702:	add    BYTE PTR [rax],al
  427704:	xor    BYTE PTR [rax-0x2cbffffe],cl
  42770a:	add    BYTE PTR [rax],al
  42770c:	pop    rcx
  42770d:	out    0x0,eax
  42770f:	add    BYTE PTR [rax-0x78],al
  427712:	add    al,BYTE PTR [rax]
  427714:	(bad)  
  427715:	out    0x0,eax
  427717:	add    BYTE PTR [rdx],dh
  427719:	sti    
  42771a:	add    BYTE PTR [rax],al
  42771c:	pop    rax
  42771d:	mov    BYTE PTR [rdx],al
  42771f:	add    BYTE PTR [rax-0x5],al
  427722:	add    BYTE PTR [rax],al
  427724:	cdq    
  427725:	(bad)  
  427726:	add    DWORD PTR [rax],eax
  427728:	jo     0x4276b2
  42772a:	add    al,BYTE PTR [rax]
  42772c:	movabs al,ds:0x8800011f3300011e
  427735:	mov    BYTE PTR [rdx],al
  427737:	add    al,al
  427739:	and    al,0x1
  42773b:	add    BYTE PTR [rdi+0x25],ah
  42773e:	add    DWORD PTR [rax],eax
  427740:	(bad)  
  427741:	mov    BYTE PTR [rdx],al
  427743:	add    BYTE PTR [rax+0x25],dh
  427746:	add    DWORD PTR [rax],eax
  427748:	mov    DWORD PTR [rip+0xffffffff88dc0001],esp        # 0xffffffff891e774f
  42774e:	add    al,BYTE PTR [rax]
  427750:	nop
  427751:	and    eax,0x25c50001
  427756:	add    DWORD PTR [rax],eax
  427758:	in     al,0x88
  42775a:	add    al,BYTE PTR [rax]
  42775c:	shl    BYTE PTR [rip+0x26250001],1        # 0x26677763
  427762:	add    DWORD PTR [rax],eax
  427764:	in     al,dx
  427765:	mov    BYTE PTR [rdx],al
  427767:	add    BYTE PTR [rax],dh
  427769:	add    DWORD PTR es:[rax],eax
  42776c:	rex.WR
  42776d:	add    DWORD PTR es:[rax],eax
  427770:	clc    
  427771:	mov    BYTE PTR [rdx],al
  427773:	add    BYTE PTR [rax+0x26],dl
  427776:	add    DWORD PTR [rax],eax
  427778:	pop    rdx
  427779:	add    DWORD PTR es:[rax],eax
  42777c:	cld    
  42777d:	mov    BYTE PTR [rdx],al
  42777f:	add    BYTE PTR [rax+0x26],ah
  427782:	add    DWORD PTR [rax],eax
  427784:	movsxd esp,DWORD PTR [rsi]
  427786:	add    DWORD PTR [rax],eax
  427788:	add    BYTE PTR [rcx+0x26700002],cl
  42778e:	add    DWORD PTR [rax],eax
  427790:	rex.RX (bad) 
  427792:	add    DWORD PTR [rax],eax
  427794:	add    al,0x89
  427796:	add    al,BYTE PTR [rax]
  427798:	push   rax
  427799:	(bad)  
  42779a:	add    DWORD PTR [rax],eax
  42779c:	rex.WXB sub BYTE PTR [r9],al
  42779f:	add    BYTE PTR [rcx+rcx*4],dl
  4277a2:	add    al,BYTE PTR [rax]
  4277a4:	push   rax
  4277a5:	sub    BYTE PTR [rcx],al
  4277a7:	add    BYTE PTR [rdi+0x28],bh
  4277aa:	add    DWORD PTR [rax],eax
  4277ac:	and    al,0x89
  4277ae:	add    al,BYTE PTR [rax]
  4277b0:	sub    BYTE PTR [rax],0x1
  4277b3:	add    cl,ch
  4277b5:	sub    BYTE PTR [rcx],al
  4277b7:	add    BYTE PTR [rcx+rcx*4],ch
  4277ba:	add    al,BYTE PTR [rax]
  4277bc:	lock sub BYTE PTR [rcx],al
  4277bf:	add    bl,dh
  4277c1:	sub    BYTE PTR [rcx],al
  4277c3:	add    BYTE PTR [rax],bh
  4277c5:	mov    DWORD PTR [rdx],eax
  4277c7:	add    BYTE PTR [rax],al
  4277c9:	sub    DWORD PTR [rcx],eax
  4277cb:	add    BYTE PTR [rcx+0x29],al
  4277ce:	add    DWORD PTR [rax],eax
  4277d0:	cmp    al,0x89
  4277d2:	add    al,BYTE PTR [rax]
  4277d4:	push   rax
  4277d5:	sub    DWORD PTR [rcx],eax
  4277d7:	add    BYTE PTR [rcx+rbp*1+0x1],bl
  4277db:	add    BYTE PTR [rcx+rcx*4+0x2],al
  4277df:	add    BYTE PTR [rax+0x29],ah
  4277e2:	add    DWORD PTR [rax],eax
  4277e4:	pop    rsp
  4277e5:	sub    al,BYTE PTR [rcx]
  4277e7:	add    BYTE PTR [rax-0x77],cl
  4277ea:	add    al,BYTE PTR [rax]
  4277ec:	(bad)  
  4277ed:	sub    al,BYTE PTR [rcx]
  4277ef:	add    BYTE PTR [rbx+0x2a],ah
  4277f2:	add    DWORD PTR [rax],eax
  4277f4:	(bad)  
  4277f5:	mov    DWORD PTR [rdx],eax
  4277f7:	add    BYTE PTR [rax+0x2a],dh
  4277fa:	add    DWORD PTR [rax],eax
  4277fc:	je     0x427828
  4277fe:	add    DWORD PTR [rax],eax
  427800:	mov    DWORD PTR fs:[rdx],eax
  427803:	add    BYTE PTR [rax-0x7bfffed6],al
  427809:	sub    al,BYTE PTR [rcx]
  42780b:	add    BYTE PTR [rax-0x77],ch
  42780e:	add    al,BYTE PTR [rax]
  427810:	nop
  427811:	sub    al,BYTE PTR [rcx]
  427813:	add    cl,dh
  427815:	sub    al,BYTE PTR [rcx]
  427817:	add    BYTE PTR [rcx+rcx*4+0x2],ch
  42781b:	add    BYTE PTR [rax],al
  42781d:	sub    eax,DWORD PTR [rcx]
  42781f:	add    BYTE PTR [rdx+0x2c],ah
  427822:	add    DWORD PTR [rax],eax
  427824:	js     0x4277af
  427826:	add    al,BYTE PTR [rax]
  427828:	jo     0x427856
  42782a:	add    DWORD PTR [rax],eax
  42782c:	imul   ebp,DWORD PTR [rdi],0x898c0001
  427832:	add    al,BYTE PTR [rax]
  427834:	jo     0x427865
  427836:	add    DWORD PTR [rax],eax
  427838:	(bad)  
  427839:	xor    DWORD PTR [rcx],eax
  42783b:	add    BYTE PTR [rcx+rcx*4+0x31200002],ah
  427842:	add    DWORD PTR [rax],eax
  427844:	or     al,0x32
  427846:	add    DWORD PTR [rax],eax
  427848:	lods   al,BYTE PTR ds:[rsi]
  427849:	mov    DWORD PTR [rdx],eax
  42784b:	add    BYTE PTR [rax],dl
  42784d:	xor    al,BYTE PTR [rcx]
  42784f:	add    al,cl
  427851:	xor    eax,DWORD PTR [rcx]
  427853:	add    BYTE PTR [rcx+rcx*4+0x33d00002],bh
  42785a:	add    DWORD PTR [rax],eax
  42785c:	cmp    eax,0xc4000134
  427861:	mov    DWORD PTR [rdx],eax
  427863:	add    BYTE PTR [rax+0x34],al
  427866:	add    DWORD PTR [rax],eax
  427868:	mov    edi,0xd4000134
  42786d:	mov    DWORD PTR [rdx],eax
  42786f:	add    al,al
  427871:	xor    al,0x1
  427873:	add    BYTE PTR [rdi+0x35],bl
  427876:	add    DWORD PTR [rax],eax
  427878:	loopne 0x427803
  42787a:	add    al,BYTE PTR [rax]
  42787c:	(bad)  
  42787d:	xor    eax,0x363a0001
  427882:	add    DWORD PTR [rax],eax
  427884:	call   0x40427b12
  427889:	add    DWORD PTR ss:[rax],eax
  42788c:	pop    rdi
  42788d:	add    DWORD PTR ss:[rax],eax
  427890:	lock mov DWORD PTR [rdx],eax
  427893:	add    BYTE PTR [rax+0x36],ah
  427896:	add    DWORD PTR [rax],eax
  427898:	jb     0x4278d0
  42789a:	add    DWORD PTR [rax],eax
  42789c:	hlt    
  42789d:	mov    DWORD PTR [rdx],eax
  42789f:	add    BYTE PTR [rax-0x3afffeca],al
  4278a5:	add    DWORD PTR ss:[rax],eax
  4278a8:	clc    
  4278a9:	mov    DWORD PTR [rdx],eax
  4278ab:	add    al,dl
  4278ad:	add    DWORD PTR ss:[rax],eax
  4278b0:	outs   dx,BYTE PTR ds:[rsi]
  4278b1:	(bad)  
  4278b2:	add    DWORD PTR [rax],eax
  4278b4:	cld    
  4278b5:	mov    DWORD PTR [rdx],eax
  4278b7:	add    BYTE PTR [rax+0x37],dh
  4278ba:	add    DWORD PTR [rax],eax
  4278bc:	mov    bl,0x37
  4278be:	add    DWORD PTR [rax],eax
  4278c0:	or     BYTE PTR [rdx+0x37c00002],cl
  4278c6:	add    DWORD PTR [rax],eax
  4278c8:	sti    
  4278c9:	(bad)  
  4278ca:	add    DWORD PTR [rax],eax
  4278cc:	adc    al,0x8a
  4278ce:	add    al,BYTE PTR [rax]
  4278d0:	add    BYTE PTR [rax],bh
  4278d2:	add    DWORD PTR [rax],eax
  4278d4:	mov    ?,WORD PTR [rax]
  4278d6:	add    DWORD PTR [rax],eax
  4278d8:	sbb    al,0x8a
  4278da:	add    al,BYTE PTR [rax]
  4278dc:	nop
  4278dd:	cmp    BYTE PTR [rcx],al
  4278df:	add    al,cl
  4278e1:	cmp    BYTE PTR [rcx],al
  4278e3:	add    BYTE PTR [rax],ch
  4278e5:	mov    al,BYTE PTR [rdx]
  4278e7:	add    al,dl
  4278e9:	cmp    BYTE PTR [rcx],al
  4278eb:	add    BYTE PTR [rip+0x34000139],ah        # 0x34427a2a
  4278f1:	mov    al,BYTE PTR [rdx]
  4278f3:	add    BYTE PTR [rax],dh
  4278f5:	cmp    DWORD PTR [rcx],eax
  4278f7:	add    dh,bl
  4278f9:	cmp    DWORD PTR [rcx],eax
  4278fb:	add    BYTE PTR [rax-0x76],al
  4278fe:	add    al,BYTE PTR [rax]
  427900:	xor    BYTE PTR [rdx],bh
  427902:	add    DWORD PTR [rax],eax
  427904:	fdivr  DWORD PTR [rbx]
  427906:	add    DWORD PTR [rax],eax
  427908:	push   rax
  427909:	mov    al,BYTE PTR [rdx]
  42790b:	add    al,ah
  42790d:	cmp    eax,DWORD PTR [rcx]
  42790f:	add    BYTE PTR [rcx+0x3c],ah
  427912:	add    DWORD PTR [rax],eax
  427914:	pop    rax
  427915:	mov    al,BYTE PTR [rdx]
  427917:	add    BYTE PTR [rax+0x3c],dh
  42791a:	add    DWORD PTR [rax],eax
  42791c:	retf   0x13e
  42791f:	add    BYTE PTR [rax-0x76],ch
  427922:	add    al,BYTE PTR [rax]
  427924:	sar    BYTE PTR [rsi],1
  427926:	add    DWORD PTR [rax],eax
  427928:	icebp  
  427929:	add    DWORD PTR ds:[rax],eax
  42792c:	or     BYTE PTR [rdx+0x3f000002],0x1
  427933:	add    BYTE PTR [rcx],dh
  427935:	(bad)  
  427936:	add    DWORD PTR [rax],eax
  427938:	mov    BYTE PTR [rdx+0x3f400002],cl
  42793e:	add    DWORD PTR [rax],eax
  427940:	pushf  
  427941:	(bad)  
  427942:	add    DWORD PTR [rax],eax
  427944:	xchg   esp,eax
  427945:	mov    al,BYTE PTR [rdx]
  427947:	add    BYTE PTR [rax+0x1b000140],al
  42794d:	add    DWORD PTR [r8],eax
  427950:	movabs al,ds:0x100001412000028a
  427959:	rex.RXB add DWORD PTR [r8],r8d
  42795c:	test   al,0x8a
  42795e:	add    al,BYTE PTR [rax]
  427960:	adc    BYTE PTR [rdi+0x1],al
  427963:	add    bh,ah
  427965:	rex.RXB add DWORD PTR [r8],r8d
  427968:	enter  0x28a,0x0
  42796c:	lock rex.RXB add DWORD PTR [r8],r8d
  427970:	in     eax,dx
  427971:	rex.WX add QWORD PTR [rax],rax
  427974:	int3   
  427975:	mov    al,BYTE PTR [rdx]
  427977:	add    al,dh
  427979:	rex.WX add QWORD PTR [rax],rax
  42797c:	out    0x4b,al
  42797e:	add    DWORD PTR [rax],eax
  427980:	fmul   QWORD PTR [rdx+0x4bf00002]
  427986:	add    DWORD PTR [rax],eax
  427988:	rex.RXB
  427989:	add    QWORD PTR [rax],r8
  42798c:	in     al,0x8a
  42798e:	add    al,BYTE PTR [rax]
  427990:	push   rax
  427991:	add    QWORD PTR [rax],r8
  427994:	outs   dx,DWORD PTR ds:[rsi]
  427995:	add    QWORD PTR [r8],r8
  427998:	in     al,dx
  427999:	mov    al,BYTE PTR [rdx]
  42799b:	add    BYTE PTR [rax+0x4d],dh
  42799e:	add    DWORD PTR [rax],eax
  4279a0:	jne    0x4279f0
  4279a2:	add    DWORD PTR [rax],eax
  4279a4:	add    BYTE PTR [rbx+0x4e800002],cl
  4279aa:	add    DWORD PTR [rax],eax
  4279ac:	sbb    cl,BYTE PTR [rdi+0x1]
  4279af:	add    BYTE PTR [rbx+rcx*4],cl
  4279b2:	add    al,BYTE PTR [rax]
  4279b4:	and    BYTE PTR [rdi+0x1],cl
  4279b7:	add    BYTE PTR [rax+rdx*2],cl
  4279ba:	add    DWORD PTR [rax],eax
  4279bc:	adc    al,0x8b
  4279be:	add    al,BYTE PTR [rax]
  4279c0:	adc    BYTE PTR [rax+0x1],dl
  4279c3:	add    BYTE PTR [rbx+rdx*2+0x1],ch
  4279c7:	add    BYTE PTR [rax],ch
  4279c9:	mov    eax,DWORD PTR [rdx]
  4279cb:	add    BYTE PTR [rax+0x53],dh
  4279ce:	add    DWORD PTR [rax],eax
  4279d0:	push   rcx
  4279d1:	push   rsp
  4279d2:	add    DWORD PTR [rax],eax
  4279d4:	cmp    BYTE PTR [rbx+0x54600002],cl
  4279da:	add    DWORD PTR [rax],eax
  4279dc:	xor    BYTE PTR [rdi+0x1],dl
  4279df:	add    BYTE PTR [rbx+rcx*4+0x2],al
  4279e3:	add    BYTE PTR [rax],dh
  4279e5:	push   rdi
  4279e6:	add    DWORD PTR [rax],eax
  4279e8:	stc    
  4279e9:	push   rdi
  4279ea:	add    DWORD PTR [rax],eax
  4279ec:	pop    rax
  4279ed:	mov    eax,DWORD PTR [rdx]
  4279ef:	add    BYTE PTR [rax],al
  4279f1:	pop    rax
  4279f2:	add    DWORD PTR [rax],eax
  4279f4:	scas   eax,DWORD PTR es:[rdi]
  4279f5:	pop    rax
  4279f6:	add    DWORD PTR [rax],eax
  4279f8:	mov    eax,DWORD PTR fs:[rdx]
  4279fb:	add    BYTE PTR [rax+0x46000158],dh
  427a01:	pop    rdx
  427a02:	add    DWORD PTR [rax],eax
  427a04:	jo     0x427991
  427a06:	add    al,BYTE PTR [rax]
  427a08:	push   rax
  427a09:	pop    rdx
  427a0a:	add    DWORD PTR [rax],eax
  427a0c:	or     BYTE PTR [rsi+0x1],bl
  427a0f:	add    BYTE PTR [rbx+rcx*4+0x2],bh
  427a13:	add    BYTE PTR [rax],dl
  427a15:	pop    rsi
  427a16:	add    DWORD PTR [rax],eax
  427a18:	sbb    esp,DWORD PTR [rbx+0x1]
  427a1b:	add    BYTE PTR [rbx+rcx*4+0x63200002],dl
  427a22:	add    DWORD PTR [rax],eax
  427a24:	jb     0x427a93
  427a26:	add    DWORD PTR [rax],eax
  427a28:	test   al,0x8b
  427a2a:	add    al,BYTE PTR [rax]
  427a2c:	lock ins DWORD PTR es:[rdi],dx
  427a2e:	add    DWORD PTR [rax],eax
  427a30:	loope  0x427aa0
  427a32:	add    DWORD PTR [rax],eax
  427a34:	ror    BYTE PTR [rbx+0x6f600002],0x1
  427a3b:	add    BYTE PTR [rax-0x37fffe91],dl
  427a41:	mov    eax,DWORD PTR [rdx]
  427a43:	add    BYTE PTR [rax-0x27fffe91],dl
  427a49:	outs   dx,DWORD PTR ds:[rsi]
  427a4a:	add    DWORD PTR [rax],eax
  427a4c:	ror    BYTE PTR [rbx+0x6fe00002],1
  427a52:	add    DWORD PTR [rax],eax
  427a54:	cld    
  427a55:	outs   dx,DWORD PTR ds:[rsi]
  427a56:	add    DWORD PTR [rax],eax
  427a58:	fmul   QWORD PTR [rbx+0x70000002]
  427a5e:	add    DWORD PTR [rax],eax
  427a60:	jp     0x427ad3
  427a62:	add    DWORD PTR [rax],eax
  427a64:	loopne 0x4279f1
  427a66:	add    al,BYTE PTR [rax]
  427a68:	xor    BYTE PTR [rcx+0x1],0x0
  427a6c:	(bad)  
  427a6d:	test   DWORD PTR [rcx],eax
  427a6f:	add    al,bh
  427a71:	mov    eax,DWORD PTR [rdx]
  427a73:	add    al,dh
  427a75:	test   DWORD PTR [rcx],eax
  427a77:	add    ch,ch
  427a79:	xchg   BYTE PTR [rcx],al
  427a7b:	add    BYTE PTR [rsp+rcx*4],dl
  427a7e:	add    al,BYTE PTR [rax]
  427a80:	lock xchg BYTE PTR [rcx],al
  427a83:	add    BYTE PTR [rsi],ch
  427a85:	xchg   DWORD PTR [rcx],eax
  427a87:	add    BYTE PTR [rax],ah
  427a89:	mov    WORD PTR [rdx],es
  427a8b:	add    BYTE PTR [rax],dh
  427a8d:	xchg   DWORD PTR [rcx],eax
  427a8f:	add    ah,bh
  427a91:	xchg   DWORD PTR [rcx],eax
  427a93:	add    BYTE PTR [rsp+rcx*4],ah
  427a96:	add    al,BYTE PTR [rax]
  427a98:	add    BYTE PTR [rax-0x77bdffff],cl
  427a9e:	add    DWORD PTR [rax],eax
  427aa0:	xor    BYTE PTR [rdx+rax*1+0x1885000],cl
  427aa7:	add    BYTE PTR [rsi-0x77],bl
  427aaa:	add    DWORD PTR [rax],eax
  427aac:	cmp    BYTE PTR [rdx+rax*1+0x1896000],cl
  427ab3:	add    dh,al
  427ab5:	mov    DWORD PTR [rcx],eax
  427ab7:	add    BYTE PTR [rsp+rcx*4+0x2],al
  427abb:	add    al,dl
  427abd:	mov    DWORD PTR [rcx],eax
  427abf:	add    BYTE PTR [rdx+0x4c00018a],al
  427ac5:	mov    WORD PTR [rdx],es
  427ac7:	add    BYTE PTR [rax-0x49fffe76],dl
  427acd:	mov    al,BYTE PTR [rcx]
  427acf:	add    BYTE PTR [rsp+rcx*4+0x2],bl
  427ad3:	add    al,al
  427ad5:	mov    al,BYTE PTR [rcx]
  427ad7:	add    al,dh
  427ad9:	mov    eax,DWORD PTR [rcx]
  427adb:	add    BYTE PTR [rsp+rcx*4+0x2],ah
  427adf:	add    al,dh
  427ae1:	mov    eax,DWORD PTR [rcx]
  427ae3:	add    BYTE PTR [rbp+rcx*4+0x1],dl
  427ae7:	add    BYTE PTR [rax-0x74],bh
  427aea:	add    al,BYTE PTR [rax]
  427aec:	(bad)  
  427aed:	lea    eax,[rcx]
  427aef:	add    BYTE PTR [rbx-0x72],dh
  427af2:	add    DWORD PTR [rax],eax
  427af4:	mov    BYTE PTR [rdx+rax*1+0x18e8000],cl
  427afb:	add    ah,al
  427afd:	mov    es,WORD PTR [rcx]
  427aff:	add    BYTE PTR [rsp+rcx*4-0x712ffffe],bl
  427b06:	add    DWORD PTR [rax],eax
  427b08:	(bad)  
  427b09:	nop
  427b0a:	add    DWORD PTR [rax],eax
  427b0c:	movabs al,ds:0x230001901000028c
  427b15:	xchg   ecx,eax
  427b16:	add    DWORD PTR [rax],eax
  427b18:	lods   al,BYTE PTR ds:[rsi]
  427b19:	mov    WORD PTR [rdx],es
  427b1b:	add    BYTE PTR [rax],dh
  427b1d:	xchg   ecx,eax
  427b1e:	add    DWORD PTR [rax],eax
  427b20:	cmp    DWORD PTR [rdx-0x7347ffff],edx
  427b26:	add    al,BYTE PTR [rax]
  427b28:	rex xchg edx,eax
  427b2a:	add    DWORD PTR [rax],eax
  427b2c:	fs xchg edx,eax
  427b2e:	add    DWORD PTR [rax],eax
  427b30:	(bad)  
  427b31:	mov    WORD PTR [rdx],es
  427b33:	add    BYTE PTR [rax-0x6e],dh
  427b36:	add    DWORD PTR [rax],eax
  427b38:	fist   DWORD PTR [rbx-0x7337ffff]
  427b3e:	add    al,BYTE PTR [rax]
  427b40:	loopne 0x427ad5
  427b42:	add    DWORD PTR [rax],eax
  427b44:	rex.WXB xchg r12,rax
  427b46:	add    DWORD PTR [rax],eax
  427b48:	fmul   DWORD PTR [rdx+rax*1+0x1945000]
  427b4f:	add    BYTE PTR [rdx-0x6b],dh
  427b52:	add    DWORD PTR [rax],eax
  427b54:	call   0xffffffff80427de5
  427b59:	xchg   ebp,eax
  427b5a:	add    DWORD PTR [rax],eax
  427b5c:	ficom  DWORD PTR [rbp-0x72ffffff]
  427b62:	add    al,BYTE PTR [rax]
  427b64:	loopne 0x427afb
  427b66:	add    DWORD PTR [rax],eax
  427b68:	pop    rdi
  427b69:	xchg   esi,eax
  427b6a:	add    DWORD PTR [rax],eax
  427b6c:	adc    BYTE PTR [rbp-0x699ffffe],cl
  427b72:	add    DWORD PTR [rax],eax
  427b74:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  427b75:	xchg   esi,eax
  427b76:	add    DWORD PTR [rax],eax
  427b78:	sbb    BYTE PTR [rbp-0x694ffffe],cl
  427b7e:	add    DWORD PTR [rax],eax
  427b80:	repnz xchg edi,eax
  427b82:	add    DWORD PTR [rax],eax
  427b84:	and    al,0x8d
  427b86:	add    al,BYTE PTR [rax]
  427b88:	movabs al,ds:0x38000199a8000199
  427b91:	lea    eax,[rdx]
  427b93:	add    BYTE PTR [rax-0x44fffe67],dh
  427b99:	cdq    
  427b9a:	add    DWORD PTR [rax],eax
  427b9c:	cmp    al,0x8d
  427b9e:	add    al,BYTE PTR [rax]
  427ba0:	rcr    BYTE PTR [rcx-0x6638ffff],0x1
  427ba7:	add    BYTE PTR [rax-0x73],al
  427baa:	add    al,BYTE PTR [rax]
  427bac:	rcr    BYTE PTR [rcx-0x6626ffff],1
  427bb2:	add    DWORD PTR [rax],eax
  427bb4:	lea    r8d,[rdx]
  427bb7:	add    al,ah
  427bb9:	cdq    
  427bba:	add    DWORD PTR [rax],eax
  427bbc:	and    ebx,DWORD PTR [rdx-0x72b7ffff]
  427bc2:	add    al,BYTE PTR [rax]
  427bc4:	xor    BYTE PTR [rdx-0x6592ffff],bl
  427bca:	add    DWORD PTR [rax],eax
  427bcc:	push   rax
  427bcd:	lea    eax,[rdx]
  427bcf:	add    BYTE PTR [rax-0x66],dh
  427bd2:	add    DWORD PTR [rax],eax
  427bd4:	jp     0x427b70
  427bd6:	add    DWORD PTR [rax],eax
  427bd8:	pop    rax
  427bd9:	lea    eax,[rdx]
  427bdb:	add    BYTE PTR [rax-0x75fffe66],al
  427be1:	(bad)  
  427be2:	add    DWORD PTR [rax],eax
  427be4:	pop    rsp
  427be5:	lea    eax,[rdx]
  427be7:	add    BYTE PTR [rax-0x2afffe65],ah
  427bed:	fwait
  427bee:	add    DWORD PTR [rax],eax
  427bf0:	test   BYTE PTR [rdx],r8b
  427bf3:	add    ch,dl
  427bf5:	fwait
  427bf6:	add    DWORD PTR [rax],eax
  427bf8:	(bad)  
  427bf9:	pushf  
  427bfa:	add    DWORD PTR [rax],eax
  427bfc:	rex.WR test BYTE PTR [rdx],r8b
  427bff:	add    BYTE PTR [rsi],dl
  427c01:	pushf  
  427c02:	add    DWORD PTR [rax],eax
  427c04:	cmp    BYTE PTR [rcx+rax*1+0x2845400],bl
  427c0b:	add    BYTE PTR [rax-0x64],al
  427c0e:	add    DWORD PTR [rax],eax
  427c10:	js     0x427bae
  427c12:	add    DWORD PTR [rax],eax
  427c14:	nop
  427c15:	mov    BYTE PTR [rdx],al
  427c17:	add    BYTE PTR [rax-0x64],bh
  427c1a:	add    DWORD PTR [rax],eax
  427c1c:	ret    0x19c
  427c1f:	add    BYTE PTR [rax+rcx*4-0x633dfffe],dl
  427c26:	add    DWORD PTR [rax],eax
  427c28:	xchg   ebx,eax
  427c29:	popf   
  427c2a:	add    DWORD PTR [rax],eax
  427c2c:	pushf  
  427c2d:	mov    BYTE PTR [rdx],al
  427c2f:	add    BYTE PTR [rbx+0x2900019d],dl
  427c35:	sahf   
  427c36:	add    DWORD PTR [rax],eax
  427c38:	lods   al,BYTE PTR ds:[rsi]
  427c39:	mov    BYTE PTR [rdx],al
  427c3b:	add    BYTE PTR [rcx],ch
  427c3d:	sahf   
  427c3e:	add    DWORD PTR [rax],eax
  427c40:	pop    rsi
  427c41:	sahf   
  427c42:	add    DWORD PTR [rax],eax
  427c44:	mov    ah,0x88
  427c46:	add    al,BYTE PTR [rax]
  427c48:	(bad)  
  427c49:	sahf   
  427c4a:	add    DWORD PTR [rax],eax
  427c4c:	fadd   st(6),st
  427c4e:	add    DWORD PTR [rax],eax
  427c50:	.byte 0xbc
  427c51:	mov    BYTE PTR [rdx],al
	...

Disassembly of section .xdata:

0000000000428000 <.xdata>:
  428000:	add    DWORD PTR [rax],eax
  428002:	add    BYTE PTR [rax],al
  428004:	add    DWORD PTR [rcx+rax*1],eax
  428007:	add    BYTE PTR [rdx+rax*2],al
  42800a:	add    BYTE PTR [rax],al
  42800c:	add    DWORD PTR [rcx+rax*1],eax
  42800f:	add    BYTE PTR [rdx+riz*2],al
  428012:	add    BYTE PTR [rax],al
  428014:	add    DWORD PTR [rdi],ecx
  428016:	or     BYTE PTR [rax],al
  428018:	lgdt   [rbx]
  42801b:	add    BYTE PTR [rax],cl
  42801d:	xor    BYTE PTR [rdi],al
  42801f:	(bad)  
  428020:	(bad)  
  428021:	jo     0x428028
  428023:	push   rax
  428024:	add    al,0xc0
  428026:	add    dl,al
  428028:	or     DWORD PTR [rcx+rax*1],eax
  42802b:	add    BYTE PTR [rdx+rax*2],al
  42802e:	add    BYTE PTR [rax],al
  428030:	cwde   
  428031:	cdq    
  428032:	add    DWORD PTR [rax],eax
  428034:	add    DWORD PTR [rax],eax
  428036:	add    BYTE PTR [rax],al
  428038:	(bad)  
  428039:	adc    al,0x0
  42803b:	add    ah,ch
  42803d:	adc    al,0x0
  42803f:	add    BYTE PTR [rax],dl
  428041:	xor    al,BYTE PTR [rcx]
  428043:	add    ah,ch
  428045:	adc    al,0x0
  428047:	add    BYTE PTR [rcx],cl
  428049:	add    al,0x1
  42804b:	add    BYTE PTR [rdx+rax*2],al
  42804e:	add    BYTE PTR [rax],al
  428050:	cwde   
  428051:	cdq    
  428052:	add    DWORD PTR [rax],eax
  428054:	add    DWORD PTR [rax],eax
  428056:	add    BYTE PTR [rax],al
  428058:	add    al,0x15
  42805a:	add    BYTE PTR [rax],al
  42805c:	sbb    al,0x15
  42805e:	add    BYTE PTR [rax],al
  428060:	adc    BYTE PTR [rdx],dh
  428062:	add    DWORD PTR [rax],eax
  428064:	sbb    al,0x15
  428066:	add    BYTE PTR [rax],al
  428068:	add    DWORD PTR [rsi],eax
  42806a:	add    eax,DWORD PTR [rax]
  42806c:	(bad)  
  42806d:	rex.X add sil,BYTE PTR [rax]
  428070:	add    DWORD PTR [rax+0x0],esp
  428073:	add    BYTE PTR [rcx],al
  428075:	add    al,0x1
  428077:	add    BYTE PTR [rdx+riz*2],al
  42807a:	add    BYTE PTR [rax],al
  42807c:	add    DWORD PTR [rcx+rax*1],eax
  42807f:	add    BYTE PTR [rdx+riz*2],al
  428082:	add    BYTE PTR [rax],al
  428084:	add    DWORD PTR [rax],eax
  428086:	add    BYTE PTR [rax],al
  428088:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14f8095
  42808e:	mov    BYTE PTR [rax],al
  428090:	(bad)  
  428091:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b284f7
  428097:	push   rax
  428098:	add    al,al
  42809a:	add    BYTE PTR [rax],al
  42809c:	add    DWORD PTR [rcx+rax*1],eax
  42809f:	add    BYTE PTR [rdx+riz*2],al
  4280a2:	add    BYTE PTR [rax],al
  4280a4:	add    DWORD PTR [rdi+rax*1],ecx
  4280a7:	add    BYTE PTR [rdx+riz*2],cl
  4280aa:	or     BYTE PTR [rax],dh
  4280ac:	(bad)  
  4280ad:	(bad)  
  4280ae:	(bad)  
  4280af:	jo     0x4280b6
  4280b1:	push   rax
  4280b2:	add    al,0xc0
  4280b4:	add    dl,al
  4280b6:	add    BYTE PTR [rax],al
  4280b8:	add    DWORD PTR [rdi+rax*1],ecx
  4280bb:	add    BYTE PTR [rdx+riz*2],cl
  4280be:	or     BYTE PTR [rax],dh
  4280c0:	(bad)  
  4280c1:	(bad)  
  4280c2:	(bad)  
  4280c3:	jo     0x4280ca
  4280c5:	push   rax
  4280c6:	add    al,0xc0
  4280c8:	add    dl,al
  4280ca:	add    BYTE PTR [rax],al
  4280cc:	add    DWORD PTR [rax],edx
  4280ce:	or     DWORD PTR [rax],eax
  4280d0:	adc    BYTE PTR [rdx+0x600b300c],ah
  4280d6:	or     dh,BYTE PTR [rax+0x9]
  4280d9:	push   rax
  4280da:	or     al,al
  4280dc:	(bad)  
  4280dd:	rol    BYTE PTR [rax+riz*8],1
  4280e0:	add    dh,al
  4280e2:	add    BYTE PTR [rax],al
  4280e4:	add    DWORD PTR [rdx],ecx
  4280e6:	add    eax,0x58010a00
  4280eb:	add    BYTE PTR [rbx],al
  4280ed:	xor    BYTE PTR [rdx],al
  4280ef:	(bad)  
  4280f0:	add    DWORD PTR [rax+0x0],esi
  4280f3:	add    BYTE PTR [rcx],al
  4280f5:	add    al,0x1
  4280f7:	add    BYTE PTR [rdx+riz*2],al
  4280fa:	add    BYTE PTR [rax],al
  4280fc:	add    DWORD PTR [rax],eax
  4280fe:	add    BYTE PTR [rax],al
  428100:	add    DWORD PTR [rcx+rax*1],eax
  428103:	add    BYTE PTR [rdx+rax*2],al
  428106:	add    BYTE PTR [rax],al
  428108:	add    DWORD PTR [rax],eax
  42810a:	add    BYTE PTR [rax],al
  42810c:	add    DWORD PTR [rax],eax
  42810e:	add    BYTE PTR [rax],al
  428110:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478118
  428116:	add    DWORD PTR [rax],esi
  428118:	add    DWORD PTR [rbx],edx
  42811a:	or     al,BYTE PTR [rax]
  42811c:	adc    eax,DWORD PTR [rcx]
  42811e:	cdq    
  42811f:	add    BYTE PTR [rax+rsi*1],cl
  428122:	or     esp,DWORD PTR [rax+0xa]
  428125:	jo     0x428130
  428127:	push   rax
  428128:	or     al,al
  42812a:	(bad)  
  42812b:	rol    BYTE PTR [rax+riz*8],1
  42812e:	add    dh,al
  428130:	add    DWORD PTR [rax],edx
  428132:	or     DWORD PTR [rax],eax
  428134:	adc    BYTE PTR [rdx+0xc],ah
  428137:	xor    BYTE PTR [rbx],cl
  428139:	(bad)  
  42813a:	or     dh,BYTE PTR [rax+0x9]
  42813d:	push   rax
  42813e:	or     al,al
  428140:	(bad)  
  428141:	rol    BYTE PTR [rax+riz*8],1
  428144:	add    dh,al
  428146:	add    BYTE PTR [rax],al
  428148:	add    DWORD PTR [rcx],edx
  42814a:	or     BYTE PTR [rax],al
  42814c:	adc    DWORD PTR [rax+0x6],edi
  42814f:	add    BYTE PTR [rax+rbp*2],cl
  428152:	add    eax,0x3d20700
  428157:	xor    BYTE PTR [rdx],al
  428159:	(bad)  
  42815a:	add    DWORD PTR [rax+0x1],esi
  42815d:	(bad)  
  42815e:	add    al,0x0
  428160:	(bad)  
  428161:	push   rdx
  428162:	add    esi,DWORD PTR [rax]
  428164:	add    ah,BYTE PTR [rax+0x1]
  428167:	jo     0x42816a
  428169:	or     al,0x7
  42816b:	add    BYTE PTR [rdx+rax*8],cl
  42816e:	or     BYTE PTR [rax],dh
  428170:	(bad)  
  428171:	(bad)  
  428172:	(bad)  
  428173:	jo     0x42817a
  428175:	push   rax
  428176:	add    al,0xc0
  428178:	add    dl,al
  42817a:	add    BYTE PTR [rax],al
  42817c:	add    DWORD PTR [rbx],edx
  42817e:	or     al,BYTE PTR [rax]
  428180:	adc    eax,DWORD PTR [rcx]
  428182:	sbb    DWORD PTR [rax],eax
  428184:	or     al,0x30
  428186:	or     esp,DWORD PTR [rax+0xa]
  428189:	jo     0x428194
  42818b:	push   rax
  42818c:	or     al,al
  42818e:	(bad)  
  42818f:	rol    BYTE PTR [rax+riz*8],1
  428192:	add    dh,al
  428194:	add    DWORD PTR [rdx],ecx
  428196:	add    eax,0x14010a00
  42819b:	add    BYTE PTR [rbx],al
  42819d:	xor    BYTE PTR [rdx],al
  42819f:	(bad)  
  4281a0:	add    DWORD PTR [rax+0x0],esi
  4281a3:	add    BYTE PTR [rcx],al
  4281a5:	or     al,0x7
  4281a7:	add    BYTE PTR [rdx+riz*2],cl
  4281aa:	or     BYTE PTR [rax],dh
  4281ac:	(bad)  
  4281ad:	(bad)  
  4281ae:	(bad)  
  4281af:	jo     0x4281b6
  4281b1:	push   rax
  4281b2:	add    al,0xc0
  4281b4:	add    dl,al
  4281b6:	add    BYTE PTR [rax],al
  4281b8:	add    DWORD PTR [rbx],edx
  4281ba:	or     al,BYTE PTR [rax]
  4281bc:	adc    eax,DWORD PTR [rcx]
  4281be:	adc    eax,DWORD PTR [rax]
  4281c0:	or     al,0x30
  4281c2:	or     esp,DWORD PTR [rax+0xa]
  4281c5:	jo     0x4281d0
  4281c7:	push   rax
  4281c8:	or     al,al
  4281ca:	(bad)  
  4281cb:	rol    BYTE PTR [rax+riz*8],1
  4281ce:	add    dh,al
  4281d0:	add    DWORD PTR [rdx],ecx
  4281d2:	(bad)  
  4281d3:	add    BYTE PTR [rdx],cl
  4281d5:	xor    al,BYTE PTR [rsi]
  4281d7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2863d
  4281dd:	push   rax
  4281de:	add    al,al
  4281e0:	add    DWORD PTR [rip+0xffffffff98350012],esi        # 0xffffffff987781f8
  4281e6:	or     eax,0xc882c00
  4281eb:	add    BYTE PTR [rbx],ah
  4281ed:	js     0x4281fa
  4281ef:	add    BYTE PTR [rbx],bl
  4281f1:	push   0x113000a
  4281f6:	sbb    eax,0xb300c00
  4281fb:	(bad)  
  4281fc:	or     dh,BYTE PTR [rax+0x9]
  4281ff:	push   rax
  428200:	or     al,al
  428202:	(bad)  
  428203:	rol    BYTE PTR [rax+riz*8],1
  428206:	add    dh,al
  428208:	add    DWORD PTR [rax],edx
  42820a:	or     DWORD PTR [rax],eax
  42820c:	adc    BYTE PTR [rdx+0x600b300c],al
  428212:	or     dh,BYTE PTR [rax+0x9]
  428215:	push   rax
  428216:	or     al,al
  428218:	(bad)  
  428219:	rol    BYTE PTR [rax+riz*8],1
  42821c:	add    dh,al
  42821e:	add    BYTE PTR [rax],al
  428220:	add    DWORD PTR [rdi],ecx
  428222:	or     BYTE PTR [rax],al
  428224:	lidt   [rip+0x7300800]        # 0x7728a2b
  42822b:	(bad)  
  42822c:	(bad)  
  42822d:	jo     0x428234
  42822f:	push   rax
  428230:	add    al,0xc0
  428232:	add    dl,al
  428234:	add    DWORD PTR [rdi+rax*1],ecx
  428237:	add    BYTE PTR [rdx+rax*2],cl
  42823a:	or     BYTE PTR [rax],dh
  42823c:	(bad)  
  42823d:	(bad)  
  42823e:	(bad)  
  42823f:	jo     0x428246
  428241:	push   rax
  428242:	add    al,0xc0
  428244:	add    dl,al
  428246:	add    BYTE PTR [rax],al
  428248:	add    DWORD PTR [rax],edx
  42824a:	or     DWORD PTR [rax],eax
  42824c:	adc    dl,ah
  42824e:	or     al,0x30
  428250:	or     esp,DWORD PTR [rax+0xa]
  428253:	jo     0x42825e
  428255:	push   rax
  428256:	or     al,al
  428258:	(bad)  
  428259:	rol    BYTE PTR [rax+riz*8],1
  42825c:	add    dh,al
  42825e:	add    BYTE PTR [rax],al
  428260:	add    DWORD PTR [rip+0x52050002],eax        # 0x52478268
  428266:	add    DWORD PTR [rax],esi
  428268:	add    DWORD PTR [rbx],ecx
  42826a:	(bad)  
  42826b:	add    BYTE PTR [rbx],cl
  42826d:	add    DWORD PTR [rcx],ebx
  42826f:	add    BYTE PTR [rax+rsi*1],al
  428272:	add    esp,DWORD PTR [rax+0x2]
  428275:	jo     0x428278
  428277:	push   rax
  428278:	add    DWORD PTR [rax],edx
  42827a:	or     DWORD PTR [rax],eax
  42827c:	adc    BYTE PTR [rdx+0xc],ah
  42827f:	xor    BYTE PTR [rbx],cl
  428281:	(bad)  
  428282:	or     dh,BYTE PTR [rax+0x9]
  428285:	push   rax
  428286:	or     al,al
  428288:	(bad)  
  428289:	rol    BYTE PTR [rax+riz*8],1
  42828c:	add    dh,al
  42828e:	add    BYTE PTR [rax],al
  428290:	add    DWORD PTR [rax],eax
  428292:	add    BYTE PTR [rax],al
  428294:	add    DWORD PTR [rip+0x52050002],eax        # 0x5247829c
  42829a:	add    DWORD PTR [rax],esi
  42829c:	add    DWORD PTR [rcx+rax*1],eax
  42829f:	add    BYTE PTR [rdx+rax*2],al
  4282a2:	add    BYTE PTR [rax],al
  4282a4:	add    DWORD PTR [rdx],ecx
  4282a6:	add    eax,0x16010a00
  4282ab:	add    BYTE PTR [rbx],al
  4282ad:	xor    BYTE PTR [rdx],al
  4282af:	(bad)  
  4282b0:	add    DWORD PTR [rax+0x0],esi
  4282b3:	add    BYTE PTR [rcx],al
  4282b5:	(bad)  
  4282b6:	add    al,0x0
  4282b8:	(bad)  
  4282b9:	rol    BYTE PTR [rbx],cl
  4282bb:	xor    BYTE PTR [rdx],al
  4282bd:	(bad)  
  4282be:	add    DWORD PTR [rax+0x1],esi
  4282c1:	add    al,0x1
  4282c3:	add    BYTE PTR [rdx+rax*8],al
  4282c6:	add    BYTE PTR [rax],al
  4282c8:	add    DWORD PTR [rcx+rax*1],eax
  4282cb:	add    BYTE PTR [rdx+rax*2],al
  4282ce:	add    BYTE PTR [rax],al
  4282d0:	add    DWORD PTR [rcx+rax*1],eax
  4282d3:	add    BYTE PTR [rdx+rax*2],al
  4282d6:	add    BYTE PTR [rax],al
  4282d8:	add    DWORD PTR [rax],edx
  4282da:	or     DWORD PTR [rax],eax
  4282dc:	adc    BYTE PTR [rdx+0xc],ah
  4282df:	xor    BYTE PTR [rbx],cl
  4282e1:	(bad)  
  4282e2:	or     dh,BYTE PTR [rax+0x9]
  4282e5:	push   rax
  4282e6:	or     al,al
  4282e8:	(bad)  
  4282e9:	rol    BYTE PTR [rax+riz*8],1
  4282ec:	add    dh,al
  4282ee:	add    BYTE PTR [rax],al
  4282f0:	add    DWORD PTR [rax],edx
  4282f2:	or     DWORD PTR [rax],eax
  4282f4:	adc    BYTE PTR [rdx+0xc],ah
  4282f7:	xor    BYTE PTR [rbx],cl
  4282f9:	(bad)  
  4282fa:	or     dh,BYTE PTR [rax+0x9]
  4282fd:	push   rax
  4282fe:	or     al,al
  428300:	(bad)  
  428301:	rol    BYTE PTR [rax+riz*8],1
  428304:	add    dh,al
  428306:	add    BYTE PTR [rax],al
  428308:	add    DWORD PTR [rax],edx
  42830a:	or     DWORD PTR [rax],eax
  42830c:	adc    BYTE PTR [rdx+0xc],al
  42830f:	xor    BYTE PTR [rbx],cl
  428311:	(bad)  
  428312:	or     dh,BYTE PTR [rax+0x9]
  428315:	push   rax
  428316:	or     al,al
  428318:	(bad)  
  428319:	rol    BYTE PTR [rax+riz*8],1
  42831c:	add    dh,al
  42831e:	add    BYTE PTR [rax],al
  428320:	add    DWORD PTR [rcx+rax*1],eax
  428323:	add    BYTE PTR [rdx+rax*2],al
  428326:	add    BYTE PTR [rax],al
  428328:	add    DWORD PTR [rcx+rax*1],eax
  42832b:	add    BYTE PTR [rdx+rax*2],al
  42832e:	add    BYTE PTR [rax],al
  428330:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478338
  428336:	add    DWORD PTR [rax],esi
  428338:	add    DWORD PTR [rip+0x52050002],eax        # 0x52478340
  42833e:	add    DWORD PTR [rax],esi
  428340:	add    DWORD PTR [rbx],edx
  428342:	or     al,BYTE PTR [rax]
  428344:	adc    eax,DWORD PTR [rcx]
  428346:	adc    DWORD PTR [rax],eax
  428348:	or     al,0x30
  42834a:	or     esp,DWORD PTR [rax+0xa]
  42834d:	jo     0x428358
  42834f:	push   rax
  428350:	or     al,al
  428352:	(bad)  
  428353:	rol    BYTE PTR [rax+riz*8],1
  428356:	add    dh,al
  428358:	add    DWORD PTR [rsi],eax
  42835a:	add    eax,DWORD PTR [rax]
  42835c:	(bad)  
  42835d:	(bad)  
  42835e:	add    dh,BYTE PTR [rax]
  428360:	add    DWORD PTR [rax+0x0],esp
  428363:	add    BYTE PTR [rcx],al
  428365:	adc    BYTE PTR [rcx],cl
  428367:	add    BYTE PTR [rax],dl
  428369:	ret    0x300c
  42836c:	or     esp,DWORD PTR [rax+0xa]
  42836f:	jo     0x42837a
  428371:	push   rax
  428372:	or     al,al
  428374:	(bad)  
  428375:	rol    BYTE PTR [rax+riz*8],1
  428378:	add    dh,al
  42837a:	add    BYTE PTR [rax],al
  42837c:	add    DWORD PTR [rsi],ecx
  42837e:	or     BYTE PTR [rax],al
  428380:	(bad)  
  428381:	push   rdx
  428382:	or     dh,BYTE PTR [rax]
  428384:	or     DWORD PTR [rax+0x8],esp
  428387:	jo     0x428390
  428389:	push   rax
  42838a:	(bad)  
  42838b:	rol    BYTE PTR [rax+rdx*8],0x2
  42838f:	loopne 0x428392
  428391:	or     DWORD PTR [rax+rax*1],eax
  428394:	or     DWORD PTR [rcx],eax
  428396:	adc    eax,0x1300200
  42839b:	(bad)  
  42839c:	add    DWORD PTR [rax],ecx
  42839e:	add    eax,0x4620800
  4283a3:	xor    BYTE PTR [rbx],al
  4283a5:	(bad)  
  4283a6:	add    dh,BYTE PTR [rax+0x1]
  4283a9:	push   rax
  4283aa:	add    BYTE PTR [rax],al
  4283ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x324783b4
  4283b2:	add    DWORD PTR [rax],esi
  4283b4:	add    DWORD PTR [rcx],edx
  4283b6:	or     DWORD PTR [rax],eax
  4283b8:	adc    DWORD PTR [rcx],eax
  4283ba:	add    BYTE PTR cs:[rdx],cl
  4283bd:	xor    BYTE PTR [rcx],cl
  4283bf:	(bad)  
  4283c0:	or     BYTE PTR [rax+0x7],dh
  4283c3:	push   rax
  4283c4:	(bad)  
  4283c5:	rol    BYTE PTR [rax+rdx*8],0x2
  4283c9:	loopne 0x4283cb
  4283cb:	add    BYTE PTR [rcx],al
  4283cd:	(bad)  
  4283ce:	add    eax,DWORD PTR [rax]
  4283d0:	(bad)  
  4283d1:	(bad)  
  4283d3:	xor    BYTE PTR [rcx],al
  4283d5:	(bad)  
  4283d6:	add    BYTE PTR [rax],al
  4283d8:	add    DWORD PTR [rax],edx
  4283da:	or     DWORD PTR [rax],eax
  4283dc:	adc    dl,al
  4283de:	or     al,0x30
  4283e0:	or     esp,DWORD PTR [rax+0xa]
  4283e3:	jo     0x4283ee
  4283e5:	push   rax
  4283e6:	or     al,al
  4283e8:	(bad)  
  4283e9:	rol    BYTE PTR [rax+riz*8],1
  4283ec:	add    dh,al
  4283ee:	add    BYTE PTR [rax],al
  4283f0:	add    DWORD PTR [rdx],ecx
  4283f2:	(bad)  
  4283f3:	add    BYTE PTR [rdx],cl
  4283f5:	push   rdx
  4283f6:	(bad)  
  4283f7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b2885d
  4283fd:	push   rax
  4283fe:	add    al,al
  428400:	add    DWORD PTR [rax],ecx
  428402:	add    eax,0x4420800
  428407:	xor    BYTE PTR [rbx],al
  428409:	(bad)  
  42840a:	add    dh,BYTE PTR [rax+0x1]
  42840d:	push   rax
  42840e:	add    BYTE PTR [rax],al
  428410:	add    DWORD PTR [rcx],edx
  428412:	or     BYTE PTR [rax],al
  428414:	adc    DWORD PTR [rax+0x5],edi
  428417:	add    BYTE PTR [rax+rbp*2],cl
  42841a:	add    al,0x0
  42841c:	(bad)  
  42841d:	mov    dl,0x3
  42841f:	xor    BYTE PTR [rdx],al
  428421:	(bad)  
  428422:	add    DWORD PTR [rax+0x1],esi
  428425:	or     al,0x7
  428427:	add    BYTE PTR [rdx+riz*4],cl
  42842a:	or     BYTE PTR [rax],dh
  42842c:	(bad)  
  42842d:	(bad)  
  42842e:	(bad)  
  42842f:	jo     0x428436
  428431:	push   rax
  428432:	add    al,0xc0
  428434:	add    dl,al
  428436:	add    BYTE PTR [rax],al
  428438:	add    DWORD PTR [rdi],eax
  42843a:	add    al,0x0
  42843c:	(bad)  
  42843d:	xchg   edx,eax
  42843e:	add    esi,DWORD PTR [rax]
  428440:	add    ah,BYTE PTR [rax+0x1]
  428443:	jo     0x428446
  428445:	add    al,0x1
  428447:	add    BYTE PTR [rdx+riz*2],al
  42844a:	add    BYTE PTR [rax],al
  42844c:	add    DWORD PTR [rcx+rax*1],eax
  42844f:	add    BYTE PTR [rdx+riz*2],al
  428452:	add    BYTE PTR [rax],al
  428454:	add    DWORD PTR [rcx+rax*1],eax
  428457:	add    BYTE PTR [rdx+rax*2],al
  42845a:	add    BYTE PTR [rax],al
  42845c:	add    DWORD PTR [rax],eax
  42845e:	add    BYTE PTR [rax],al
  428460:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478468
  428466:	add    DWORD PTR [rax],esi
  428468:	add    DWORD PTR [rax],eax
  42846a:	add    BYTE PTR [rax],al
  42846c:	add    DWORD PTR [rax],eax
  42846e:	add    BYTE PTR [rax],al
  428470:	add    DWORD PTR [rax],eax
  428472:	add    BYTE PTR [rax],al
  428474:	add    DWORD PTR [rax],eax
  428476:	add    BYTE PTR [rax],al
  428478:	add    DWORD PTR [rax],eax
  42847a:	add    BYTE PTR [rax],al
  42847c:	add    DWORD PTR [rax],eax
  42847e:	add    BYTE PTR [rax],al
  428480:	add    DWORD PTR [rax],eax
  428482:	add    BYTE PTR [rax],al
  428484:	add    DWORD PTR [rax],eax
  428486:	add    BYTE PTR [rax],al
  428488:	add    DWORD PTR [rax],eax
  42848a:	add    BYTE PTR [rax],al
  42848c:	add    DWORD PTR [rcx+rax*1],eax
  42848f:	add    BYTE PTR [rdx+riz*2],al
  428492:	add    BYTE PTR [rax],al
  428494:	add    DWORD PTR [rcx+rax*1],eax
  428497:	add    BYTE PTR [rdx+riz*2],al
  42849a:	add    BYTE PTR [rax],al
  42849c:	add    DWORD PTR [rsi],eax
  42849e:	add    eax,DWORD PTR [rax]
  4284a0:	(bad)  
  4284a1:	rex.X add sil,BYTE PTR [rax]
  4284a4:	add    DWORD PTR [rax+0x0],esp
  4284a7:	add    BYTE PTR [rcx],al
  4284a9:	or     BYTE PTR [rip+0x4420800],al        # 0x4848caf
  4284af:	xor    BYTE PTR [rbx],al
  4284b1:	(bad)  
  4284b2:	add    dh,BYTE PTR [rax+0x1]
  4284b5:	push   rax
  4284b6:	add    BYTE PTR [rax],al
  4284b8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324784c0
  4284be:	add    DWORD PTR [rax],esi
  4284c0:	add    DWORD PTR [rax],eax
  4284c2:	add    BYTE PTR [rax],al
  4284c4:	add    DWORD PTR [rax],eax
  4284c6:	add    BYTE PTR [rax],al
  4284c8:	add    DWORD PTR [rax],ecx
  4284ca:	add    eax,0x4420800
  4284cf:	xor    BYTE PTR [rbx],al
  4284d1:	(bad)  
  4284d2:	add    dh,BYTE PTR [rax+0x1]
  4284d5:	push   rax
  4284d6:	add    BYTE PTR [rax],al
  4284d8:	add    DWORD PTR [rax],eax
  4284da:	add    BYTE PTR [rax],al
  4284dc:	add    DWORD PTR [rip+0x32050002],eax        # 0x324784e4
  4284e2:	add    DWORD PTR [rax],esi
  4284e4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324784ec
  4284ea:	add    DWORD PTR [rax],esi
  4284ec:	add    DWORD PTR [rcx+rax*1],eax
  4284ef:	add    BYTE PTR [rdx+rax*4],al
  4284f2:	add    BYTE PTR [rax],al
  4284f4:	add    DWORD PTR [rsi],eax
  4284f6:	add    eax,DWORD PTR [rax]
  4284f8:	(bad)  
  4284f9:	rex.X add sil,BYTE PTR [rax]
  4284fc:	add    DWORD PTR [rax+0x0],esp
  4284ff:	add    BYTE PTR [rcx],al
  428501:	or     eax,DWORD PTR [rsi]
  428503:	add    BYTE PTR [rbx],cl
  428505:	add    DWORD PTR [rbp+0x3300400],eax
  42850b:	(bad)  
  42850c:	add    dh,BYTE PTR [rax+0x1]
  42850f:	push   rax
  428510:	add    DWORD PTR [rdi+rax*1],ecx
  428513:	add    BYTE PTR [rdx+rax*2],cl
  428516:	or     BYTE PTR [rax],dh
  428518:	(bad)  
  428519:	(bad)  
  42851a:	(bad)  
  42851b:	jo     0x428522
  42851d:	push   rax
  42851e:	add    al,0xc0
  428520:	add    dl,al
  428522:	add    BYTE PTR [rax],al
  428524:	add    DWORD PTR [rdx],ecx
  428526:	(bad)  
  428527:	add    BYTE PTR [rdx],cl
  428529:	xor    al,BYTE PTR [rsi]
  42852b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b28991
  428531:	push   rax
  428532:	add    al,al
  428534:	add    DWORD PTR [rax],ecx
  428536:	add    eax,0x4420800
  42853b:	xor    BYTE PTR [rbx],al
  42853d:	(bad)  
  42853e:	add    dh,BYTE PTR [rax+0x1]
  428541:	push   rax
  428542:	add    BYTE PTR [rax],al
  428544:	add    DWORD PTR [rax],ecx
  428546:	add    eax,0x4820800
  42854b:	xor    BYTE PTR [rbx],al
  42854d:	(bad)  
  42854e:	add    dh,BYTE PTR [rax+0x1]
  428551:	push   rax
  428552:	add    BYTE PTR [rax],al
  428554:	add    DWORD PTR [rax],ecx
  428556:	add    eax,0x4420800
  42855b:	xor    BYTE PTR [rbx],al
  42855d:	(bad)  
  42855e:	add    dh,BYTE PTR [rax+0x1]
  428561:	push   rax
  428562:	add    BYTE PTR [rax],al
  428564:	add    DWORD PTR [rdx],ecx
  428566:	add    eax,0x84010a00
  42856b:	add    BYTE PTR [rbx],al
  42856d:	xor    BYTE PTR [rdx],al
  42856f:	(bad)  
  428570:	add    DWORD PTR [rax+0x0],esi
  428573:	add    BYTE PTR [rcx],al
  428575:	or     al,BYTE PTR [rip+0xffffffff84010a00]        # 0xffffffff84438f7b
  42857b:	add    BYTE PTR [rbx],al
  42857d:	xor    BYTE PTR [rdx],al
  42857f:	(bad)  
  428580:	add    DWORD PTR [rax+0x0],esi
  428583:	add    BYTE PTR [rcx],al
  428585:	(bad)  
  428586:	add    al,0x0
  428588:	(bad)  
  428589:	xor    al,BYTE PTR [rbx]
  42858b:	xor    BYTE PTR [rdx],al
  42858d:	(bad)  
  42858e:	add    DWORD PTR [rax+0x1],esi
  428591:	(bad)  
  428592:	add    eax,DWORD PTR [rax]
  428594:	(bad)  
  428595:	(bad)  
  428597:	(bad)  
  428598:	add    DWORD PTR [rax+0x0],esi
  42859b:	add    BYTE PTR [rcx],al
  42859d:	add    al,0x1
  42859f:	add    BYTE PTR [rdx+riz*2],al
  4285a2:	add    BYTE PTR [rax],al
  4285a4:	add    DWORD PTR [rdi],eax
  4285a6:	add    al,0x0
  4285a8:	(bad)  
  4285a9:	push   rdx
  4285aa:	add    esi,DWORD PTR [rax]
  4285ac:	add    ah,BYTE PTR [rax+0x1]
  4285af:	jo     0x4285b2
  4285b1:	(bad)  
  4285b2:	add    al,0x0
  4285b4:	(bad)  
  4285b5:	xor    al,BYTE PTR [rbx]
  4285b7:	xor    BYTE PTR [rdx],al
  4285b9:	(bad)  
  4285ba:	add    DWORD PTR [rax+0x1],esi
  4285bd:	(bad)  
  4285be:	add    eax,DWORD PTR [rax]
  4285c0:	(bad)  
  4285c1:	rex.X add sil,BYTE PTR [rax]
  4285c4:	add    DWORD PTR [rax+0x0],esp
  4285c7:	add    BYTE PTR [rcx],al
  4285c9:	add    BYTE PTR [rax],al
  4285cb:	add    BYTE PTR [rcx],al
  4285cd:	add    al,0x1
  4285cf:	add    BYTE PTR [rdx+rax*2],al
  4285d2:	add    BYTE PTR [rax],al
  4285d4:	add    DWORD PTR [rip+0x32050002],eax        # 0x324785dc
  4285da:	add    DWORD PTR [rax],esi
  4285dc:	add    DWORD PTR [rdi],ecx
  4285de:	or     BYTE PTR [rax],al
  4285e0:	sidt   [rbx+0x7300800]
  4285e7:	(bad)  
  4285e8:	(bad)  
  4285e9:	jo     0x4285f0
  4285eb:	push   rax
  4285ec:	add    al,0xc0
  4285ee:	add    dl,al
  4285f0:	add    DWORD PTR [rip+0x680d0007],ecx        # 0x684f85fd
  4285f6:	add    al,0x0
  4285f8:	or     BYTE PTR [rdx+0x60033004],ah
  4285fe:	add    dh,BYTE PTR [rax+0x1]
  428601:	push   rax
  428602:	add    BYTE PTR [rax],al
  428604:	add    DWORD PTR [rax],edx
  428606:	or     DWORD PTR [rax],eax
  428608:	adc    BYTE PTR [rdx+0x600b300c],al
  42860e:	or     dh,BYTE PTR [rax+0x9]
  428611:	push   rax
  428612:	or     al,al
  428614:	(bad)  
  428615:	rol    BYTE PTR [rax+riz*8],1
  428618:	add    dh,al
  42861a:	add    BYTE PTR [rax],al
  42861c:	add    DWORD PTR [rdi],eax
  42861e:	add    al,0x0
  428620:	(bad)  
  428621:	rol    BYTE PTR [rbx],cl
  428623:	xor    BYTE PTR [rdx],al
  428625:	(bad)  
  428626:	add    DWORD PTR [rax+0x1],esi
  428629:	adc    BYTE PTR [rcx],cl
  42862b:	add    BYTE PTR [rax],dl
  42862d:	ret    0x300c
  428630:	or     esp,DWORD PTR [rax+0xa]
  428633:	jo     0x42863e
  428635:	push   rax
  428636:	or     al,al
  428638:	(bad)  
  428639:	rol    BYTE PTR [rax+riz*8],1
  42863c:	add    dh,al
  42863e:	add    BYTE PTR [rax],al
  428640:	add    DWORD PTR [rax],edx
  428642:	or     DWORD PTR [rax],eax
  428644:	adc    BYTE PTR [rdx+0xc],ah
  428647:	xor    BYTE PTR [rbx],cl
  428649:	(bad)  
  42864a:	or     dh,BYTE PTR [rax+0x9]
  42864d:	push   rax
  42864e:	or     al,al
  428650:	(bad)  
  428651:	rol    BYTE PTR [rax+riz*8],1
  428654:	add    dh,al
  428656:	add    BYTE PTR [rax],al
  428658:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478660
  42865e:	add    DWORD PTR [rax],esi
  428660:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478668
  428666:	add    DWORD PTR [rax],esi
  428668:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478670
  42866e:	add    DWORD PTR [rax],esi
  428670:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478678
  428676:	add    DWORD PTR [rax],esi
  428678:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478680
  42867e:	add    DWORD PTR [rax],esi
  428680:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478688
  428686:	add    DWORD PTR [rax],esi
  428688:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478690
  42868e:	add    DWORD PTR [rax],esi
  428690:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478698
  428696:	add    DWORD PTR [rax],esi
  428698:	add    DWORD PTR [rip+0x32050002],eax        # 0x324786a0
  42869e:	add    DWORD PTR [rax],esi
  4286a0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324786a8
  4286a6:	add    DWORD PTR [rax],esi
  4286a8:	add    DWORD PTR [rbx],edx
  4286aa:	or     al,BYTE PTR [rax]
  4286ac:	adc    eax,DWORD PTR [rcx]
  4286ae:	or     eax,0xb300c01
  4286b3:	(bad)  
  4286b4:	or     dh,BYTE PTR [rax+0x9]
  4286b7:	push   rax
  4286b8:	or     al,al
  4286ba:	(bad)  
  4286bb:	rol    BYTE PTR [rax+riz*8],1
  4286be:	add    dh,al
  4286c0:	add    DWORD PTR [rdi],eax
  4286c2:	add    al,0x0
  4286c4:	(bad)  
  4286c5:	xor    al,BYTE PTR [rbx]
  4286c7:	xor    BYTE PTR [rdx],al
  4286c9:	(bad)  
  4286ca:	add    DWORD PTR [rax+0x1],esi
  4286cd:	adc    ecx,DWORD PTR [rdx]
  4286cf:	add    BYTE PTR [rbx],dl
  4286d1:	add    DWORD PTR [rbp+0xb300c00],eax
  4286d7:	(bad)  
  4286d8:	or     dh,BYTE PTR [rax+0x9]
  4286db:	push   rax
  4286dc:	or     al,al
  4286de:	(bad)  
  4286df:	rol    BYTE PTR [rax+riz*8],1
  4286e2:	add    dh,al
  4286e4:	add    DWORD PTR [rcx],ecx
  4286e6:	add    al,0x0
  4286e8:	or     DWORD PTR [rcx],eax
  4286ea:	test   DWORD PTR [rax],eax
  4286ec:	add    dh,BYTE PTR [rax]
  4286ee:	add    DWORD PTR [rax+0x1],esp
  4286f1:	(bad)  
  4286f2:	add    al,0x0
  4286f4:	(bad)  
  4286f5:	xor    al,BYTE PTR [rbx]
  4286f7:	xor    BYTE PTR [rdx],al
  4286f9:	(bad)  
  4286fa:	add    DWORD PTR [rax+0x1],esi
  4286fd:	(bad)  
  4286fe:	add    eax,DWORD PTR [rax]
  428700:	(bad)  
  428701:	(bad)  
  428703:	(bad)  
  428704:	add    DWORD PTR [rax+0x0],esi
  428707:	add    BYTE PTR [rcx],al
  428709:	adc    BYTE PTR [rcx],cl
  42870b:	add    BYTE PTR [rax],dl
  42870d:	rex.X or al,0x30
  428710:	or     esp,DWORD PTR [rax+0xa]
  428713:	jo     0x42871e
  428715:	push   rax
  428716:	or     al,al
  428718:	(bad)  
  428719:	rol    BYTE PTR [rax+riz*8],1
  42871c:	add    dh,al
  42871e:	add    BYTE PTR [rax],al
  428720:	add    DWORD PTR [rax],edx
  428722:	or     DWORD PTR [rax],eax
  428724:	adc    dl,ah
  428726:	or     al,0x30
  428728:	or     esp,DWORD PTR [rax+0xa]
  42872b:	jo     0x428736
  42872d:	push   rax
  42872e:	or     al,al
  428730:	(bad)  
  428731:	rol    BYTE PTR [rax+riz*8],1
  428734:	add    dh,al
  428736:	add    BYTE PTR [rax],al
  428738:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478740
  42873e:	add    DWORD PTR [rax],esi
  428740:	add    DWORD PTR [rdi],eax
  428742:	add    al,0x0
  428744:	(bad)  
  428745:	xor    al,BYTE PTR [rbx]
  428747:	xor    BYTE PTR [rdx],al
  428749:	(bad)  
  42874a:	add    DWORD PTR [rax+0x1],esi
  42874d:	(bad)  
  42874e:	add    al,0x0
  428750:	(bad)  
  428751:	xor    al,BYTE PTR [rbx]
  428753:	xor    BYTE PTR [rdx],al
  428755:	(bad)  
  428756:	add    DWORD PTR [rax+0x1],esi
  428759:	adc    DWORD PTR [rcx],ecx
  42875b:	add    BYTE PTR [rcx],dl
  42875d:	add    DWORD PTR [rax+rax*1+0x6009300a],eax
  428764:	or     BYTE PTR [rax+0x7],dh
  428767:	push   rax
  428768:	(bad)  
  428769:	rol    BYTE PTR [rax+rdx*8],0x2
  42876d:	loopne 0x42876f
  42876f:	add    BYTE PTR [rcx],al
  428771:	adc    DWORD PTR [rcx],ecx
  428773:	add    BYTE PTR [rcx],dl
  428775:	add    DWORD PTR [rax+rax*1+0x6009300a],eax
  42877c:	or     BYTE PTR [rax+0x7],dh
  42877f:	push   rax
  428780:	(bad)  
  428781:	rol    BYTE PTR [rax+rdx*8],0x2
  428785:	loopne 0x428787
  428787:	add    BYTE PTR [rcx],al
  428789:	(bad)  
  42878a:	add    al,0x0
  42878c:	(bad)  
  42878d:	xor    al,BYTE PTR [rbx]
  42878f:	xor    BYTE PTR [rdx],al
  428791:	(bad)  
  428792:	add    DWORD PTR [rax+0x1],esi
  428795:	adc    ecx,DWORD PTR [rdx]
  428797:	add    BYTE PTR [rbx],dl
  428799:	add    DWORD PTR [rdi+0xb300c00],eax
  42879f:	(bad)  
  4287a0:	or     dh,BYTE PTR [rax+0x9]
  4287a3:	push   rax
  4287a4:	or     al,al
  4287a6:	(bad)  
  4287a7:	rol    BYTE PTR [rax+riz*8],1
  4287aa:	add    dh,al
  4287ac:	add    DWORD PTR [rdx],ecx
  4287ae:	add    eax,0x86010a00
  4287b3:	add    BYTE PTR [rbx],al
  4287b5:	xor    BYTE PTR [rdx],al
  4287b7:	(bad)  
  4287b8:	add    DWORD PTR [rax+0x0],esi
  4287bb:	add    BYTE PTR [rcx],al
  4287bd:	adc    ecx,DWORD PTR [rdx]
  4287bf:	add    BYTE PTR [rbx],dl
  4287c1:	add    DWORD PTR [rbx],edx
  4287c3:	add    BYTE PTR [rax+rsi*1],cl
  4287c6:	or     esp,DWORD PTR [rax+0xa]
  4287c9:	jo     0x4287d4
  4287cb:	push   rax
  4287cc:	or     al,al
  4287ce:	(bad)  
  4287cf:	rol    BYTE PTR [rax+riz*8],1
  4287d2:	add    dh,al
  4287d4:	add    DWORD PTR [rax],ecx
  4287d6:	add    eax,0x4620800
  4287db:	xor    BYTE PTR [rbx],al
  4287dd:	(bad)  
  4287de:	add    dh,BYTE PTR [rax+0x1]
  4287e1:	push   rax
  4287e2:	add    BYTE PTR [rax],al
  4287e4:	add    DWORD PTR [rdx],ecx
  4287e6:	add    eax,0x16010a00
  4287eb:	add    BYTE PTR [rbx],al
  4287ed:	xor    BYTE PTR [rdx],al
  4287ef:	(bad)  
  4287f0:	add    DWORD PTR [rax+0x0],esi
  4287f3:	add    BYTE PTR [rcx],al
  4287f5:	or     al,BYTE PTR [rip+0x16010a00]        # 0x164391fb
  4287fb:	add    BYTE PTR [rbx],al
  4287fd:	xor    BYTE PTR [rdx],al
  4287ff:	(bad)  
  428800:	add    DWORD PTR [rax+0x0],esi
  428803:	add    BYTE PTR [rcx],al
  428805:	invd   
  428807:	add    BYTE PTR [rdi],cl
  428809:	add    DWORD PTR [rbp+0x7300800],eax
  42880f:	(bad)  
  428810:	(bad)  
  428811:	jo     0x428818
  428813:	push   rax
  428814:	add    al,0xc0
  428816:	add    dl,al
  428818:	add    DWORD PTR [rax],edx
  42881a:	or     DWORD PTR [rax],eax
  42881c:	adc    BYTE PTR [rdx+0xc],ah
  42881f:	xor    BYTE PTR [rbx],cl
  428821:	(bad)  
  428822:	or     dh,BYTE PTR [rax+0x9]
  428825:	push   rax
  428826:	or     al,al
  428828:	(bad)  
  428829:	rol    BYTE PTR [rax+riz*8],1
  42882c:	add    dh,al
  42882e:	add    BYTE PTR [rax],al
  428830:	add    DWORD PTR [rbx],ecx
  428832:	(bad)  
  428833:	add    BYTE PTR [rbx],cl
  428835:	add    DWORD PTR [rdi+0x3300400],eax
  42883b:	(bad)  
  42883c:	add    dh,BYTE PTR [rax+0x1]
  42883f:	push   rax
  428840:	add    DWORD PTR [rbx],edx
  428842:	or     al,BYTE PTR [rax]
  428844:	adc    eax,DWORD PTR [rcx]
  428846:	cdq    
  428847:	add    DWORD PTR [rax+rsi*1],ecx
  42884a:	or     esp,DWORD PTR [rax+0xa]
  42884d:	jo     0x428858
  42884f:	push   rax
  428850:	or     al,al
  428852:	(bad)  
  428853:	rol    BYTE PTR [rax+riz*8],1
  428856:	add    dh,al
  428858:	add    DWORD PTR [rbx],edx
  42885a:	or     al,BYTE PTR [rax]
  42885c:	adc    eax,DWORD PTR [rcx]
  42885e:	add    DWORD PTR [r8+r14*1],ecx
  428862:	or     esp,DWORD PTR [rax+0xa]
  428865:	jo     0x428870
  428867:	push   rax
  428868:	or     al,al
  42886a:	(bad)  
  42886b:	rol    BYTE PTR [rax+riz*8],1
  42886e:	add    dh,al
  428870:	add    DWORD PTR [rbx],edx
  428872:	or     al,BYTE PTR [rax]
  428874:	adc    eax,DWORD PTR [rcx]
  428876:	lods   eax,DWORD PTR ds:[rsi]
  428877:	add    DWORD PTR [rax+rsi*1],ecx
  42887a:	or     esp,DWORD PTR [rax+0xa]
  42887d:	jo     0x428888
  42887f:	push   rax
  428880:	or     al,al
  428882:	(bad)  
  428883:	rol    BYTE PTR [rax+riz*8],1
  428886:	add    dh,al
  428888:	add    DWORD PTR [rcx+rax*1],eax
  42888b:	add    BYTE PTR [rdx+riz*2],al
  42888e:	add    BYTE PTR [rax],al
  428890:	add    DWORD PTR [rax],eax
  428892:	add    BYTE PTR [rax],al
  428894:	add    DWORD PTR [rip+0x32050002],eax        # 0x3247889c
  42889a:	add    DWORD PTR [rax+0x1],esi
  42889d:	or     BYTE PTR [rip+0x4420800],al        # 0x48490a3
  4288a3:	xor    BYTE PTR [rbx],al
  4288a5:	(bad)  
  4288a6:	add    dh,BYTE PTR [rax+0x1]
  4288a9:	push   rax
  4288aa:	add    BYTE PTR [rax],al
  4288ac:	add    DWORD PTR [rcx+rax*1],eax
  4288af:	add    BYTE PTR [rdx+riz*2],al
  4288b2:	add    BYTE PTR [rax],al
  4288b4:	add    DWORD PTR [rcx+rax*1],eax
  4288b7:	add    BYTE PTR [rdx+riz*2],al
  4288ba:	add    BYTE PTR [rax],al
  4288bc:	add    DWORD PTR [rbx],edx
  4288be:	or     al,BYTE PTR [rax]
  4288c0:	adc    eax,DWORD PTR [rcx]
  4288c2:	sub    eax,0xb300c00
  4288c7:	(bad)  
  4288c8:	or     dh,BYTE PTR [rax+0x9]
  4288cb:	push   rax
  4288cc:	or     al,al
  4288ce:	(bad)  
  4288cf:	rol    BYTE PTR [rax+riz*8],1
  4288d2:	add    dh,al
  4288d4:	add    DWORD PTR [rip+0x52050002],eax        # 0x524788dc
  4288da:	add    DWORD PTR [rax],esi
  4288dc:	add    DWORD PTR [rcx+rax*1],eax
  4288df:	add    BYTE PTR [rdx+rax*2],al
  4288e2:	add    BYTE PTR [rax],al
  4288e4:	add    DWORD PTR [rcx+rax*1],eax
  4288e7:	add    BYTE PTR [rdx+rax*2],al
  4288ea:	add    BYTE PTR [rax],al
  4288ec:	add    DWORD PTR [rsi],eax
  4288ee:	add    eax,DWORD PTR [rax]
  4288f0:	(bad)  
  4288f1:	rex.X add sil,BYTE PTR [rax]
  4288f4:	add    DWORD PTR [rax+0x0],esp
  4288f7:	add    BYTE PTR [rcx],al
  4288f9:	add    BYTE PTR [rax],al
  4288fb:	add    BYTE PTR [rcx],al
  4288fd:	add    BYTE PTR [rax],al
  4288ff:	add    BYTE PTR [rcx],al
  428901:	add    BYTE PTR [rax],al
  428903:	add    BYTE PTR [rcx],al
  428905:	or     al,BYTE PTR [rsi]
  428907:	add    BYTE PTR [rdx],cl
  428909:	jb     0x428911
  42890b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b28d71
  428911:	push   rax
  428912:	add    al,al
  428914:	add    DWORD PTR [rdx],ecx
  428916:	add    eax,0x6d20a05
  42891b:	add    eax,DWORD PTR [rbx]
  42891d:	xor    BYTE PTR [rdx],al
  42891f:	(bad)  
  428920:	add    DWORD PTR [rax+0x0],edx
  428923:	add    BYTE PTR [rcx],al
  428925:	add    al,0x1
  428927:	add    BYTE PTR [rdx+rax*2],al
  42892a:	add    BYTE PTR [rax],al
  42892c:	add    DWORD PTR [rsi],eax
  42892e:	add    eax,DWORD PTR [rax]
  428930:	(bad)  
  428931:	rex.X add sil,BYTE PTR [rax]
  428934:	add    DWORD PTR [rax+0x0],esp
  428937:	add    BYTE PTR [rcx],al
  428939:	add    BYTE PTR [rax],al
  42893b:	add    BYTE PTR [rcx],al
  42893d:	add    al,0x1
  42893f:	add    BYTE PTR [rdx+riz*4],al
  428942:	add    BYTE PTR [rax],al
  428944:	add    DWORD PTR [rax],eax
  428946:	add    BYTE PTR [rax],al
  428948:	add    DWORD PTR [rsi],edx
  42894a:	or     DWORD PTR [rax],eax
  42894c:	(bad)  
  42894d:	mov    BYTE PTR [rsi],al
  42894f:	add    BYTE PTR [rax],dl
  428951:	js     0x428958
  428953:	add    BYTE PTR [rbx],cl
  428955:	push   0xffffffffe2060004
  42895a:	add    dh,BYTE PTR [rax]
  42895c:	add    DWORD PTR [rax+0x0],esp
  42895f:	add    BYTE PTR [rcx],al
  428961:	add    BYTE PTR [rax],al
  428963:	add    BYTE PTR [rcx],al
  428965:	add    BYTE PTR [rax],al
  428967:	add    BYTE PTR [rcx],al
  428969:	add    BYTE PTR [rax],al
  42896b:	add    BYTE PTR [rcx],al
  42896d:	(bad)  
  42896e:	add    eax,DWORD PTR [rax]
  428970:	(bad)  
  428971:	(bad)  
  428973:	xor    BYTE PTR [rcx],al
  428975:	(bad)  
  428976:	add    BYTE PTR [rax],al
  428978:	add    DWORD PTR [rdi+rax*1],ecx
  42897b:	add    BYTE PTR [rdx+riz*4],cl
  42897e:	or     BYTE PTR [rax],dh
  428980:	(bad)  
  428981:	(bad)  
  428982:	(bad)  
  428983:	jo     0x42898a
  428985:	push   rax
  428986:	add    al,0xc0
  428988:	add    dl,al
  42898a:	add    BYTE PTR [rax],al
  42898c:	add    DWORD PTR [rcx],edx
  42898e:	or     DWORD PTR [rip+0x30db211],eax        # 0x3503ba5
  428994:	or     dh,BYTE PTR [rax]
  428996:	or     DWORD PTR [rax+0x8],esp
  428999:	jo     0x4289a2
  42899b:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2228d72
  4289a2:	add    BYTE PTR [rax],al
  4289a4:	add    DWORD PTR [rcx+rax*1],eax
  4289a7:	add    BYTE PTR [rdx+rax*2],al
  4289aa:	add    BYTE PTR [rax],al
  4289ac:	add    DWORD PTR [rdx],ecx
  4289ae:	(bad)  
  4289af:	add    BYTE PTR [rdx],cl
  4289b1:	xor    al,BYTE PTR [rsi]
  4289b3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b28e19
  4289b9:	push   rax
  4289ba:	add    al,al
  4289bc:	add    DWORD PTR [rip+0x32050002],eax        # 0x324789c4
  4289c2:	add    DWORD PTR [rax],esi
  4289c4:	add    DWORD PTR [rax],ecx
  4289c6:	add    eax,0x4420800
  4289cb:	xor    BYTE PTR [rbx],al
  4289cd:	(bad)  
  4289ce:	add    dh,BYTE PTR [rax+0x1]
  4289d1:	push   rax
  4289d2:	add    BYTE PTR [rax],al
  4289d4:	add    DWORD PTR [rdi],eax
  4289d6:	add    al,0x0
  4289d8:	(bad)  
  4289d9:	xor    al,BYTE PTR [rbx]
  4289db:	xor    BYTE PTR [rdx],al
  4289dd:	(bad)  
  4289de:	add    DWORD PTR [rax+0x1],esi
  4289e1:	add    eax,0x32050002
  4289e6:	add    DWORD PTR [rax],esi
  4289e8:	add    DWORD PTR [rip+0x32050002],eax        # 0x324789f0
  4289ee:	add    DWORD PTR [rax],esi
  4289f0:	add    DWORD PTR [rax],eax
  4289f2:	add    BYTE PTR [rax],al
  4289f4:	add    DWORD PTR [rax],eax
  4289f6:	add    BYTE PTR [rax],al
  4289f8:	add    DWORD PTR [rax],eax
  4289fa:	add    BYTE PTR [rax],al
  4289fc:	add    DWORD PTR [rdi],eax
  4289fe:	add    al,0x0
  428a00:	(bad)  
  428a01:	xor    al,BYTE PTR [rbx]
  428a03:	xor    BYTE PTR [rdx],al
  428a05:	(bad)  
  428a06:	add    DWORD PTR [rax+0x1],esi
  428a09:	(bad)  
  428a0a:	add    eax,DWORD PTR [rax]
  428a0c:	(bad)  
  428a0d:	rex.X add sil,BYTE PTR [rax]
  428a10:	add    DWORD PTR [rax+0x0],esp
  428a13:	add    BYTE PTR [rcx],al
  428a15:	add    eax,0x32050002
  428a1a:	add    DWORD PTR [rax],esi
  428a1c:	add    DWORD PTR [rdi],eax
  428a1e:	add    al,0x0
  428a20:	(bad)  
  428a21:	xor    al,BYTE PTR [rbx]
  428a23:	xor    BYTE PTR [rdx],al
  428a25:	(bad)  
  428a26:	add    DWORD PTR [rax+0x1],esi
  428a29:	(bad)  
  428a2a:	add    eax,DWORD PTR [rax]
  428a2c:	(bad)  
  428a2d:	rex.X add sil,BYTE PTR [rax]
  428a30:	add    DWORD PTR [rax+0x0],esp
  428a33:	add    BYTE PTR [rcx],al
  428a35:	(bad)  
  428a36:	add    eax,DWORD PTR [rax]
  428a38:	(bad)  
  428a39:	rex.X add sil,BYTE PTR [rax]
  428a3c:	add    DWORD PTR [rax+0x0],esp
  428a3f:	add    BYTE PTR [rcx],al
  428a41:	or     BYTE PTR [rip+0x4420800],al        # 0x4849247
  428a47:	xor    BYTE PTR [rbx],al
  428a49:	(bad)  
  428a4a:	add    dh,BYTE PTR [rax+0x1]
  428a4d:	push   rax
  428a4e:	add    BYTE PTR [rax],al
  428a50:	add    DWORD PTR [rip+0x12050002],eax        # 0x12478a58
  428a56:	add    DWORD PTR [rax],esi
  428a58:	add    DWORD PTR [rsi],ecx
  428a5a:	add    eax,0x3780e00
  428a5f:	add    BYTE PTR [rcx],cl
  428a61:	push   0xffffffff82040002
  428a66:	add    BYTE PTR [rax],al
  428a68:	add    DWORD PTR [rax],edx
  428a6a:	or     DWORD PTR [rax],eax
  428a6c:	adc    BYTE PTR [rdx+0xc],al
  428a6f:	xor    BYTE PTR [rbx],cl
  428a71:	(bad)  
  428a72:	or     dh,BYTE PTR [rax+0x9]
  428a75:	push   rax
  428a76:	or     al,al
  428a78:	(bad)  
  428a79:	rol    BYTE PTR [rax+riz*8],1
  428a7c:	add    dh,al
  428a7e:	add    BYTE PTR [rax],al
  428a80:	add    DWORD PTR [rcx+rax*1],eax
  428a83:	add    BYTE PTR [rdx+riz*2],al
  428a86:	add    BYTE PTR [rax],al
  428a88:	add    DWORD PTR [rsi],eax
  428a8a:	add    eax,DWORD PTR [rax]
  428a8c:	(bad)  
  428a8d:	(bad)  
  428a8f:	xor    BYTE PTR [rcx],al
  428a91:	(bad)  
  428a92:	add    BYTE PTR [rax],al
  428a94:	add    DWORD PTR [rsi],eax
  428a96:	add    eax,DWORD PTR [rax]
  428a98:	(bad)  
  428a99:	(bad)  
  428a9b:	xor    BYTE PTR [rcx],al
  428a9d:	(bad)  
  428a9e:	add    BYTE PTR [rax],al
  428aa0:	add    DWORD PTR [rcx+rax*1],eax
  428aa3:	add    BYTE PTR [rdx+rax*2],al
  428aa6:	add    BYTE PTR [rax],al
  428aa8:	add    DWORD PTR [rcx*1+0xb982c00],ebp
  428aaf:	add    BYTE PTR [rbx],ah
  428ab1:	mov    BYTE PTR [rdx],cl
  428ab3:	add    BYTE PTR [rdx],bl
  428ab5:	js     0x428ac0
  428ab7:	add    BYTE PTR [rdx],dl
  428ab9:	push   0x10a0008
  428abe:	sbb    BYTE PTR [rax],al
  428ac0:	add    esi,DWORD PTR [rax]
  428ac2:	add    ah,BYTE PTR [rax+0x1]
  428ac5:	jo     0x428ac7
  428ac7:	add    BYTE PTR [rcx],al
  428ac9:	add    BYTE PTR [rax],al
  428acb:	add    BYTE PTR [rcx],al
  428acd:	(bad)  
  428ace:	add    eax,0x6780e00
  428ad3:	add    BYTE PTR [rcx],cl
  428ad5:	push   0xffffffffe2040005
  428ada:	add    BYTE PTR [rax],al
  428adc:	add    DWORD PTR [rcx+rax*1],eax
  428adf:	add    BYTE PTR [rdx+riz*4],al
  428ae2:	add    BYTE PTR [rax],al
  428ae4:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478aec
  428aea:	add    DWORD PTR [rax],esi
  428aec:	add    DWORD PTR [rsi],ecx
  428aee:	or     BYTE PTR [rax],al
  428af0:	(bad)  
  428af1:	jb     0x428afd
  428af3:	xor    BYTE PTR [rcx],cl
  428af5:	(bad)  
  428af6:	or     BYTE PTR [rax+0x7],dh
  428af9:	push   rax
  428afa:	(bad)  
  428afb:	rol    BYTE PTR [rax+rdx*8],0x2
  428aff:	loopne 0x428b02
  428b01:	(bad)  
  428b02:	add    al,0x0
  428b04:	(bad)  
  428b05:	xor    al,BYTE PTR [rbx]
  428b07:	xor    BYTE PTR [rdx],al
  428b09:	(bad)  
  428b0a:	add    DWORD PTR [rax+0x1],esi
  428b0d:	add    al,0x1
  428b0f:	add    BYTE PTR [rdx+riz*2],al
  428b12:	add    BYTE PTR [rax],al
  428b14:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x524f9021
  428b1a:	or     DWORD PTR [rbx],eax
  428b1c:	(bad)  
  428b1d:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b28f83
  428b23:	rol    BYTE PTR [rcx],0x50
  428b26:	add    BYTE PTR [rax],al
  428b28:	add    DWORD PTR [rdx],ecx
  428b2a:	(bad)  
  428b2b:	add    BYTE PTR [rdx],cl
  428b2d:	xor    al,BYTE PTR [rsi]
  428b2f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b28f95
  428b35:	push   rax
  428b36:	add    al,al
  428b38:	add    DWORD PTR [rsi],eax
  428b3a:	add    eax,DWORD PTR [rax]
  428b3c:	(bad)  
  428b3d:	ret    0x3002
  428b40:	add    DWORD PTR [rax+0x0],esp
  428b43:	add    BYTE PTR [rcx],al
  428b45:	adc    al,0x8
  428b47:	test   DWORD PTR [rbx+rax*1],edx
  428b4a:	or     al,0x42
  428b4c:	or     BYTE PTR [rax],dh
  428b4e:	(bad)  
  428b4f:	(bad)  
  428b50:	(bad)  
  428b51:	jo     0x428b58
  428b53:	rol    BYTE PTR [rbx],0xd0
  428b56:	add    DWORD PTR [rax+0x1],edx
  428b59:	(bad)  
  428b5a:	add    al,0x0
  428b5c:	(bad)  
  428b5d:	xor    al,BYTE PTR [rbx]
  428b5f:	xor    BYTE PTR [rdx],al
  428b61:	(bad)  
  428b62:	add    DWORD PTR [rax+0x1],esi
  428b65:	(bad)  
  428b66:	add    eax,DWORD PTR [rax]
  428b68:	(bad)  
  428b69:	ret    0x3002
  428b6c:	add    DWORD PTR [rax+0x0],esp
  428b6f:	add    BYTE PTR [rcx],al
  428b71:	(bad)  
  428b72:	add    eax,DWORD PTR [rax]
  428b74:	(bad)  
  428b75:	loop   0x428b79
  428b77:	xor    BYTE PTR [rcx],al
  428b79:	(bad)  
  428b7a:	add    BYTE PTR [rax],al
  428b7c:	add    DWORD PTR [rcx],edx
  428b7e:	or     DWORD PTR [rip+0x30d3211],eax        # 0x34fbd95
  428b84:	or     dh,BYTE PTR [rax]
  428b86:	or     DWORD PTR [rax+0x8],esp
  428b89:	jo     0x428b92
  428b8b:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2228f62
  428b92:	add    BYTE PTR [rax],al
  428b94:	add    DWORD PTR [rdi+rax*1],ecx
  428b97:	add    BYTE PTR [rdx+rax*8],cl
  428b9a:	or     BYTE PTR [rax],dh
  428b9c:	(bad)  
  428b9d:	(bad)  
  428b9e:	(bad)  
  428b9f:	jo     0x428ba6
  428ba1:	push   rax
  428ba2:	add    al,0xc0
  428ba4:	add    dl,al
  428ba6:	add    BYTE PTR [rax],al
  428ba8:	add    DWORD PTR [rbx],edx
  428baa:	or     al,BYTE PTR [rax]
  428bac:	adc    eax,DWORD PTR [rcx]
  428bae:	(bad)  
  428baf:	add    BYTE PTR [rax+rsi*1],cl
  428bb2:	or     esp,DWORD PTR [rax+0xa]
  428bb5:	jo     0x428bc0
  428bb7:	push   rax
  428bb8:	or     al,al
  428bba:	(bad)  
  428bbb:	rol    BYTE PTR [rax+riz*8],1
  428bbe:	add    dh,al
  428bc0:	add    DWORD PTR [rcx+rax*1],eax
  428bc3:	add    BYTE PTR [rdx+rax*4],al
  428bc6:	add    BYTE PTR [rax],al
  428bc8:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478bd0
  428bce:	add    DWORD PTR [rax],esi
  428bd0:	add    DWORD PTR [rsi],eax
  428bd2:	add    eax,DWORD PTR [rax]
  428bd4:	(bad)  
  428bd5:	rex.X add sil,BYTE PTR [rax]
  428bd8:	add    DWORD PTR [rax+0x0],esp
  428bdb:	add    BYTE PTR [rcx],al
  428bdd:	add    BYTE PTR [rax],al
  428bdf:	add    BYTE PTR [rcx],al
  428be1:	adc    BYTE PTR [rcx],cl
  428be3:	add    BYTE PTR [rax],dl
  428be5:	(bad)  
  428be6:	or     al,0x30
  428be8:	or     esp,DWORD PTR [rax+0xa]
  428beb:	jo     0x428bf6
  428bed:	push   rax
  428bee:	or     al,al
  428bf0:	(bad)  
  428bf1:	rol    BYTE PTR [rax+riz*8],1
  428bf4:	add    dh,al
  428bf6:	add    BYTE PTR [rax],al
  428bf8:	add    DWORD PTR [rbx],ebx
  428bfa:	or     al,0x0
  428bfc:	sbb    ebp,DWORD PTR [rax+0xa]
  428bff:	add    BYTE PTR [rbx],dl
  428c01:	add    DWORD PTR [rdi],edx
  428c03:	add    BYTE PTR [rax+rsi*1],cl
  428c06:	or     esp,DWORD PTR [rax+0xa]
  428c09:	jo     0x428c14
  428c0b:	push   rax
  428c0c:	or     al,al
  428c0e:	(bad)  
  428c0f:	rol    BYTE PTR [rax+riz*8],1
  428c12:	add    dh,al
  428c14:	add    DWORD PTR [rsp+rax*1],eax
  428c17:	add    BYTE PTR [rax+rsi*1],al
  428c1a:	add    esp,DWORD PTR [rax+0x2]
  428c1d:	jo     0x428c20
  428c1f:	push   rax
  428c20:	add    DWORD PTR [rax],eax
  428c22:	add    BYTE PTR [rax],al
  428c24:	add    DWORD PTR [rsi],eax
  428c26:	add    eax,DWORD PTR [rax]
  428c28:	(bad)  
  428c29:	rex.X add sil,BYTE PTR [rax]
  428c2c:	add    DWORD PTR [rax+0x0],esp
  428c2f:	add    BYTE PTR [rcx],al
  428c31:	add    eax,0x32050002
  428c36:	add    DWORD PTR [rax],esi
  428c38:	add    DWORD PTR [rdi],eax
  428c3a:	add    al,0x0
  428c3c:	(bad)  
  428c3d:	xor    al,BYTE PTR [rbx]
  428c3f:	xor    BYTE PTR [rdx],al
  428c41:	(bad)  
  428c42:	add    DWORD PTR [rax+0x1],esi
  428c45:	add    eax,0x32050002
  428c4a:	add    DWORD PTR [rax],esi
  428c4c:	add    DWORD PTR [rax],ecx
  428c4e:	add    eax,0x4420800
  428c53:	xor    BYTE PTR [rbx],al
  428c55:	(bad)  
  428c56:	add    dh,BYTE PTR [rax+0x1]
  428c59:	push   rax
  428c5a:	add    BYTE PTR [rax],al
  428c5c:	add    DWORD PTR [rip+0x32050002],eax        # 0x32478c64
  428c62:	add    DWORD PTR [rax],esi
  428c64:	add    DWORD PTR [rsi],ecx
  428c66:	or     BYTE PTR [rax],al
  428c68:	(bad)  
  428c69:	xor    cl,BYTE PTR [rdx]
  428c6b:	xor    BYTE PTR [rcx],cl
  428c6d:	(bad)  
  428c6e:	or     BYTE PTR [rax+0x7],dh
  428c71:	push   rax
  428c72:	(bad)  
  428c73:	rol    BYTE PTR [rax+rdx*8],0x2
  428c77:	loopne 0x428c7a
  428c79:	or     BYTE PTR [rip+0x4420800],al        # 0x484947f
  428c7f:	xor    BYTE PTR [rbx],al
  428c81:	(bad)  
  428c82:	add    dh,BYTE PTR [rax+0x1]
  428c85:	push   rax
  428c86:	add    BYTE PTR [rax],al
  428c88:	add    DWORD PTR [rdi+rax*1],ecx
  428c8b:	add    BYTE PTR [rdx+rax*2],cl
  428c8e:	or     BYTE PTR [rax],dh
  428c90:	(bad)  
  428c91:	(bad)  
  428c92:	(bad)  
  428c93:	jo     0x428c9a
  428c95:	push   rax
  428c96:	add    al,0xc0
  428c98:	add    dl,al
  428c9a:	add    BYTE PTR [rax],al
  428c9c:	add    DWORD PTR [rax],eax
  428c9e:	add    BYTE PTR [rax],al
  428ca0:	add    DWORD PTR [rdi],eax
  428ca2:	add    al,0x0
  428ca4:	(bad)  
  428ca5:	xor    al,BYTE PTR [rbx]
  428ca7:	xor    BYTE PTR [rdx],al
  428ca9:	(bad)  
  428caa:	add    DWORD PTR [rax+0x1],esi
  428cad:	(bad)  
  428cae:	add    eax,DWORD PTR [rax]
  428cb0:	(bad)  
  428cb1:	and    al,BYTE PTR [rdx]
  428cb3:	xor    BYTE PTR [rcx],al
  428cb5:	(bad)  
  428cb6:	add    BYTE PTR [rax],al
  428cb8:	add    DWORD PTR [rdi],eax
  428cba:	add    al,0x0
  428cbc:	(bad)  
  428cbd:	xor    al,BYTE PTR [rbx]
  428cbf:	xor    BYTE PTR [rdx],al
  428cc1:	(bad)  
  428cc2:	add    DWORD PTR [rax+0x1],esi
  428cc5:	add    BYTE PTR [rax],al
  428cc7:	add    BYTE PTR [rcx],al
  428cc9:	or     BYTE PTR [rip+0x4820800],al        # 0x4c494cf
  428ccf:	xor    BYTE PTR [rbx],al
  428cd1:	(bad)  
  428cd2:	add    dh,BYTE PTR [rax+0x1]
  428cd5:	push   rax
  428cd6:	add    BYTE PTR [rax],al
  428cd8:	add    DWORD PTR [rax],ecx
  428cda:	add    eax,0x4a20800
  428cdf:	xor    BYTE PTR [rbx],al
  428ce1:	(bad)  
  428ce2:	add    dh,BYTE PTR [rax+0x1]
  428ce5:	push   rax
  428ce6:	add    BYTE PTR [rax],al
  428ce8:	add    DWORD PTR [rax],edx
  428cea:	or     DWORD PTR [rax],eax
  428cec:	adc    BYTE PTR [rdx+0x600b300c],al
  428cf2:	or     dh,BYTE PTR [rax+0x9]
  428cf5:	push   rax
  428cf6:	or     al,al
  428cf8:	(bad)  
  428cf9:	rol    BYTE PTR [rax+riz*8],1
  428cfc:	add    dh,al
  428cfe:	add    BYTE PTR [rax],al
  428d00:	add    DWORD PTR [rax],ecx
  428d02:	add    eax,0x4820800
  428d07:	xor    BYTE PTR [rbx],al
  428d09:	(bad)  
  428d0a:	add    dh,BYTE PTR [rax+0x1]
  428d0d:	push   rax
  428d0e:	add    BYTE PTR [rax],al
  428d10:	add    DWORD PTR [rcx+rax*1],eax
  428d13:	add    BYTE PTR [rdx+riz*4],al
  428d16:	add    BYTE PTR [rax],al
  428d18:	add    DWORD PTR [rdi],eax
  428d1a:	add    al,0x0
  428d1c:	(bad)  
  428d1d:	push   rdx
  428d1e:	add    esi,DWORD PTR [rax]
  428d20:	add    ah,BYTE PTR [rax+0x1]
  428d23:	jo     0x428d26
  428d25:	(bad)  
  428d26:	or     BYTE PTR [rax],al
  428d28:	(bad)  
  428d29:	push   rdx
  428d2a:	or     dh,BYTE PTR [rax]
  428d2c:	or     DWORD PTR [rax+0x8],esp
  428d2f:	jo     0x428d38
  428d31:	push   rax
  428d32:	(bad)  
  428d33:	rol    BYTE PTR [rax+rdx*8],0x2
  428d37:	loopne 0x428d3a
  428d39:	add    BYTE PTR [rax],al
  428d3b:	add    BYTE PTR [rcx],al
  428d3d:	add    BYTE PTR [rax],al
  428d3f:	add    BYTE PTR [rcx],al
  428d41:	add    BYTE PTR [rax],al
  428d43:	add    BYTE PTR [rcx],al
  428d45:	add    BYTE PTR [rax],al
  428d47:	add    BYTE PTR [rcx],al
  428d49:	add    eax,0x32050002
  428d4e:	add    DWORD PTR [rax],esi
  428d50:	add    DWORD PTR [rcx+rax*1],eax
  428d53:	add    BYTE PTR [rdx+rax*2],al
  428d56:	add    BYTE PTR [rax],al
  428d58:	add    DWORD PTR [rax],eax
  428d5a:	add    BYTE PTR [rax],al
  428d5c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000429000 <.bss>:
	...

Disassembly of section .idata:

000000000042b000 <.idata>:
  42b000:	add    al,0xb1
  42b002:	add    al,BYTE PTR [rax]
	...
  42b00c:	adc    bh,0x2
  42b00f:	add    BYTE PTR [rcx+rdi*4-0x4debfffe],ch
  42b016:	add    al,BYTE PTR [rax]
	...
  42b020:	jo     0x42affa
  42b022:	add    al,BYTE PTR [rax]
  42b024:	mov    esp,0xdc0002ba
  42b029:	mov    bl,0x2
	...
  42b033:	add    BYTE PTR [rax-0x7bfffd28],al
  42b039:	mov    esp,0xb3ec0002
  42b03e:	add    al,BYTE PTR [rax]
	...
  42b048:	hlt    
  42b049:	fadd   DWORD PTR [rdx]
  42b04b:	add    BYTE PTR [rsp+rdi*4-0x4b3bfffe],dl
  42b052:	add    al,BYTE PTR [rax]
	...
  42b05c:	sub    al,0xd9
  42b05e:	add    al,BYTE PTR [rax]
  42b060:	ins    BYTE PTR es:[rdi],dx
  42b061:	mov    ebp,0xb51c0002
  42b066:	add    al,BYTE PTR [rax]
	...
  42b070:	pop    rax
  42b071:	fld    DWORD PTR [rdx]
  42b073:	add    ah,al
  42b075:	mov    ebp,0xb55c0002
  42b07a:	add    al,BYTE PTR [rax]
	...
  42b084:	rcr    cl,0x2
  42b087:	add    BYTE PTR [rsi+rdi*4],al
  42b08a:	add    al,BYTE PTR [rax]
  42b08c:	adc    al,0xb6
  42b08e:	add    al,BYTE PTR [rax]
	...
  42b098:	(bad)  
  42b09a:	add    al,BYTE PTR [rax]
  42b09c:	mov    esp,0x340002be
  42b0a1:	mov    dh,0x2
	...
  42b0ab:	add    BYTE PTR [rbx+rbx*8+0x2],ah
  42b0af:	add    ah,bl
  42b0b1:	mov    esi,0xb9240002
  42b0b6:	add    al,BYTE PTR [rax]
	...
  42b0c0:	jl     0x42b09d
  42b0c2:	add    al,BYTE PTR [rax]
  42b0c4:	int3   
  42b0c5:	rol    DWORD PTR [rdx],0x0
  42b0c8:	cmp    al,0xb9
  42b0ca:	add    al,BYTE PTR [rax]
	...
  42b0d4:	movabs al,ds:0x6c0002c1e40002db
  42b0dd:	mov    ecx,0x2
  42b0e2:	add    BYTE PTR [rax],al
  42b0e4:	add    BYTE PTR [rax],al
  42b0e6:	add    BYTE PTR [rax],al
  42b0e8:	rcr    bl,1
  42b0ea:	add    al,BYTE PTR [rax]
  42b0ec:	adc    al,0xc2
  42b0ee:	add    al,BYTE PTR [rax]
	...
  42b104:	push   rsp
  42b105:	ret    0x2
  42b108:	add    BYTE PTR [rax],al
  42b10a:	add    BYTE PTR [rax],al
  42b10c:	ins    BYTE PTR es:[rdi],dx
  42b10d:	ret    0x2
  42b110:	add    BYTE PTR [rax],al
  42b112:	add    BYTE PTR [rax],al
  42b114:	test   dl,al
  42b116:	add    al,BYTE PTR [rax]
  42b118:	add    BYTE PTR [rax],al
  42b11a:	add    BYTE PTR [rax],al
  42b11c:	xchg   esi,eax
  42b11d:	ret    0x2
  42b120:	add    BYTE PTR [rax],al
  42b122:	add    BYTE PTR [rax],al
  42b124:	stos   BYTE PTR es:[rdi],al
  42b125:	ret    0x2
  42b128:	add    BYTE PTR [rax],al
  42b12a:	add    BYTE PTR [rax],al
  42b12c:	rol    dl,0x2
  42b12f:	add    BYTE PTR [rax],al
  42b131:	add    BYTE PTR [rax],al
  42b133:	add    dh,dl
  42b135:	ret    0x2
  42b138:	add    BYTE PTR [rax],al
  42b13a:	add    BYTE PTR [rax],al
  42b13c:	out    0xc2,al
  42b13e:	add    al,BYTE PTR [rax]
  42b140:	add    BYTE PTR [rax],al
  42b142:	add    BYTE PTR [rax],al
  42b144:	cld    
  42b145:	ret    0x2
  42b148:	add    BYTE PTR [rax],al
  42b14a:	add    BYTE PTR [rax],al
  42b14c:	adc    bl,al
  42b14e:	add    al,BYTE PTR [rax]
  42b150:	add    BYTE PTR [rax],al
  42b152:	add    BYTE PTR [rax],al
  42b154:	and    al,0xc3
  42b156:	add    al,BYTE PTR [rax]
  42b158:	add    BYTE PTR [rax],al
  42b15a:	add    BYTE PTR [rax],al
  42b15c:	ss ret 
  42b15e:	add    al,BYTE PTR [rax]
  42b160:	add    BYTE PTR [rax],al
  42b162:	add    BYTE PTR [rax],al
  42b164:	rex.W ret 
  42b166:	add    al,BYTE PTR [rax]
  42b168:	add    BYTE PTR [rax],al
  42b16a:	add    BYTE PTR [rax],al
  42b16c:	(bad)  
  42b16e:	add    al,BYTE PTR [rax]
  42b170:	add    BYTE PTR [rax],al
  42b172:	add    BYTE PTR [rax],al
  42b174:	jb     0x42b139
  42b176:	add    al,BYTE PTR [rax]
  42b178:	add    BYTE PTR [rax],al
  42b17a:	add    BYTE PTR [rax],al
  42b17c:	mov    es,ebx
  42b17e:	add    al,BYTE PTR [rax]
  42b180:	add    BYTE PTR [rax],al
  42b182:	add    BYTE PTR [rax],al
  42b184:	movabs ds:0xba000000000002c3,al
  42b18d:	ret    
  42b18e:	add    al,BYTE PTR [rax]
  42b190:	add    BYTE PTR [rax],al
  42b192:	add    BYTE PTR [rax],al
  42b194:	mov    bl,0x2
  42b197:	add    BYTE PTR [rax],al
  42b199:	add    BYTE PTR [rax],al
  42b19b:	add    ah,bl
  42b19d:	ret    
  42b19e:	add    al,BYTE PTR [rax]
  42b1a0:	add    BYTE PTR [rax],al
  42b1a2:	add    BYTE PTR [rax],al
  42b1a4:	test   bl,0x2
  42b1a7:	add    BYTE PTR [rax],al
  42b1a9:	add    BYTE PTR [rax],al
  42b1ab:	add    BYTE PTR [rsp+rax*8],cl
  42b1ae:	add    al,BYTE PTR [rax]
  42b1b0:	add    BYTE PTR [rax],al
  42b1b2:	add    BYTE PTR [rax],al
  42b1b4:	and    ah,al
  42b1b6:	add    al,BYTE PTR [rax]
  42b1b8:	add    BYTE PTR [rax],al
  42b1ba:	add    BYTE PTR [rax],al
  42b1bc:	cmp    al,ah
  42b1be:	add    al,BYTE PTR [rax]
  42b1c0:	add    BYTE PTR [rax],al
  42b1c2:	add    BYTE PTR [rax],al
  42b1c4:	(bad)
  42b1c9:	add    BYTE PTR [rax],al
  42b1cb:	add    BYTE PTR [rdx-0x3c],ah
  42b1ce:	add    al,BYTE PTR [rax]
  42b1d0:	add    BYTE PTR [rax],al
  42b1d2:	add    BYTE PTR [rax],al
  42b1d4:	add    ah,0x2
  42b1d7:	add    BYTE PTR [rax],al
  42b1d9:	add    BYTE PTR [rax],al
  42b1db:	add    BYTE PTR [rax+0x2c4],cl
  42b1e1:	add    BYTE PTR [rax],al
  42b1e3:	add    BYTE PTR [rsp+rax*8+0x2],bl
  42b1ea:	add    BYTE PTR [rax],al
  42b1ec:	stos   BYTE PTR es:[rdi],al
  42b1ed:	(bad)
  42b1f1:	add    BYTE PTR [rax],al
  42b1f3:	add    dh,al
  42b1f5:	(bad)
  42b1f9:	add    BYTE PTR [rax],al
  42b1fb:	add    al,bl
  42b1fd:	(bad)
  42b201:	add    BYTE PTR [rax],al
  42b203:	add    al,ch
  42b205:	(bad)
	...
  42b211:	add    BYTE PTR [rax],al
  42b213:	add    dh,bh
  42b215:	(bad)
  42b219:	add    BYTE PTR [rax],al
  42b21b:	add    BYTE PTR [rsi],dl
  42b21d:	(bad)
  42b220:	add    BYTE PTR [rax],al
  42b222:	add    BYTE PTR [rax],al
  42b224:	sub    al,0xc5
  42b226:	add    al,BYTE PTR [rax]
  42b228:	add    BYTE PTR [rax],al
  42b22a:	add    BYTE PTR [rax],al
  42b22c:	cmp    al,ch
  42b22e:	add    al,BYTE PTR [rax]
  42b230:	add    BYTE PTR [rax],al
  42b232:	add    BYTE PTR [rax],al
  42b234:	(bad)
  42b238:	add    BYTE PTR [rax],al
  42b23a:	add    BYTE PTR [rax],al
  42b23c:	push   rsi
  42b23d:	(bad)
  42b240:	add    BYTE PTR [rax],al
  42b242:	add    BYTE PTR [rax],al
  42b244:	(bad)
  42b248:	add    BYTE PTR [rax],al
  42b24a:	add    BYTE PTR [rax],al
  42b24c:	je     0x42b213
  42b24e:	add    al,BYTE PTR [rax]
  42b250:	add    BYTE PTR [rax],al
  42b252:	add    BYTE PTR [rax],al
  42b254:	test   ch,al
  42b256:	add    al,BYTE PTR [rax]
  42b258:	add    BYTE PTR [rax],al
  42b25a:	add    BYTE PTR [rax],al
  42b25c:	xchg   esi,eax
  42b25d:	(bad)
  42b260:	add    BYTE PTR [rax],al
  42b262:	add    BYTE PTR [rax],al
  42b264:	stos   BYTE PTR es:[rdi],al
  42b265:	(bad)
  42b268:	add    BYTE PTR [rax],al
  42b26a:	add    BYTE PTR [rax],al
  42b26c:	mov    ah,0xc5
  42b26e:	add    al,BYTE PTR [rax]
  42b270:	add    BYTE PTR [rax],al
  42b272:	add    BYTE PTR [rax],al
  42b274:	ret    0x2c5
  42b277:	add    BYTE PTR [rax],al
  42b279:	add    BYTE PTR [rax],al
  42b27b:	add    ah,cl
  42b27d:	(bad)
  42b280:	add    BYTE PTR [rax],al
  42b282:	add    BYTE PTR [rax],al
  42b284:	(bad)  
  42b285:	(bad)
  42b288:	add    BYTE PTR [rax],al
  42b28a:	add    BYTE PTR [rax],al
  42b28c:	loopne 0x42b253
  42b28e:	add    al,BYTE PTR [rax]
  42b290:	add    BYTE PTR [rax],al
  42b292:	add    BYTE PTR [rax],al
  42b294:	in     al,dx
  42b295:	(bad)
  42b298:	add    BYTE PTR [rax],al
  42b29a:	add    BYTE PTR [rax],al
  42b29c:	cld    
  42b29d:	(bad)
  42b2a0:	add    BYTE PTR [rax],al
  42b2a2:	add    BYTE PTR [rax],al
  42b2a4:	add    al,0xc6
  42b2a6:	add    al,BYTE PTR [rax]
  42b2a8:	add    BYTE PTR [rax],al
  42b2aa:	add    BYTE PTR [rax],al
  42b2ac:	(bad)  
  42b2ad:	mov    BYTE PTR [rdx],0x0
  42b2b0:	add    BYTE PTR [rax],al
  42b2b2:	add    BYTE PTR [rax],al
  42b2b4:	sbb    dh,al
  42b2b6:	add    al,BYTE PTR [rax]
  42b2b8:	add    BYTE PTR [rax],al
  42b2ba:	add    BYTE PTR [rax],al
  42b2bc:	and    al,dh
  42b2be:	add    al,BYTE PTR [rax]
  42b2c0:	add    BYTE PTR [rax],al
  42b2c2:	add    BYTE PTR [rax],al
  42b2c4:	sub    al,dh
  42b2c6:	add    al,BYTE PTR [rax]
  42b2c8:	add    BYTE PTR [rax],al
  42b2ca:	add    BYTE PTR [rax],al
  42b2cc:	xor    al,0xc6
  42b2ce:	add    al,BYTE PTR [rax]
  42b2d0:	add    BYTE PTR [rax],al
  42b2d2:	add    BYTE PTR [rax],al
  42b2d4:	cmp    al,0xc6
  42b2d6:	add    al,BYTE PTR [rax]
  42b2d8:	add    BYTE PTR [rax],al
  42b2da:	add    BYTE PTR [rax],al
  42b2dc:	rex.RX mov BYTE PTR [rdx],0x0
  42b2e0:	add    BYTE PTR [rax],al
  42b2e2:	add    BYTE PTR [rax],al
  42b2e4:	rex.WRX mov BYTE PTR [rdx],0x0
  42b2e8:	add    BYTE PTR [rax],al
  42b2ea:	add    BYTE PTR [rax],al
  42b2ec:	pop    rax
  42b2ed:	mov    BYTE PTR [rdx],0x0
  42b2f0:	add    BYTE PTR [rax],al
  42b2f2:	add    BYTE PTR [rax],al
  42b2f4:	(bad)  
  42b2f5:	mov    BYTE PTR [rdx],0x0
  42b2f8:	add    BYTE PTR [rax],al
  42b2fa:	add    BYTE PTR [rax],al
  42b2fc:	push   0x2c6
  42b301:	add    BYTE PTR [rax],al
  42b303:	add    BYTE PTR [rax-0x3a],dh
  42b306:	add    al,BYTE PTR [rax]
  42b308:	add    BYTE PTR [rax],al
  42b30a:	add    BYTE PTR [rax],al
  42b30c:	jp     0x42b2d4
  42b30e:	add    al,BYTE PTR [rax]
  42b310:	add    BYTE PTR [rax],al
  42b312:	add    BYTE PTR [rax],al
  42b314:	test   dh,al
  42b316:	add    al,BYTE PTR [rax]
  42b318:	add    BYTE PTR [rax],al
  42b31a:	add    BYTE PTR [rax],al
  42b31c:	mov    es,esi
  42b31e:	add    al,BYTE PTR [rax]
  42b320:	add    BYTE PTR [rax],al
  42b322:	add    BYTE PTR [rax],al
  42b324:	cwde   
  42b325:	mov    BYTE PTR [rdx],0x0
  42b328:	add    BYTE PTR [rax],al
  42b32a:	add    BYTE PTR [rax],al
  42b32c:	movabs ds:0xac000000000002c6,al
  42b335:	mov    BYTE PTR [rdx],0x0
  42b338:	add    BYTE PTR [rax],al
  42b33a:	add    BYTE PTR [rax],al
  42b33c:	mov    edx,0x2c6
  42b341:	add    BYTE PTR [rax],al
  42b343:	add    dl,al
  42b345:	mov    BYTE PTR [rdx],0x0
  42b348:	add    BYTE PTR [rax],al
  42b34a:	add    BYTE PTR [rax],al
  42b34c:	int3   
  42b34d:	mov    BYTE PTR [rdx],0x0
  42b350:	add    BYTE PTR [rax],al
  42b352:	add    BYTE PTR [rax],al
  42b354:	(bad)  
  42b355:	mov    BYTE PTR [rdx],0x0
  42b358:	add    BYTE PTR [rax],al
  42b35a:	add    BYTE PTR [rax],al
  42b35c:	loopne 0x42b324
  42b35e:	add    al,BYTE PTR [rax]
  42b360:	add    BYTE PTR [rax],al
  42b362:	add    BYTE PTR [rax],al
  42b364:	call   0x42b62f
  42b369:	add    BYTE PTR [rax],al
  42b36b:	add    dl,dh
  42b36d:	mov    BYTE PTR [rdx],0x0
  42b370:	add    BYTE PTR [rax],al
  42b372:	add    BYTE PTR [rax],al
  42b374:	cld    
  42b375:	mov    BYTE PTR [rdx],0x0
  42b378:	add    BYTE PTR [rax],al
  42b37a:	add    BYTE PTR [rax],al
  42b37c:	(bad)  
  42b37d:	mov    DWORD PTR [rdx],0x0
  42b383:	add    BYTE PTR [rax],dl
  42b385:	mov    DWORD PTR [rdx],0x0
  42b38b:	add    BYTE PTR [rdi+rax*8],bl
  42b38e:	add    al,BYTE PTR [rax]
  42b390:	add    BYTE PTR [rax],al
  42b392:	add    BYTE PTR [rax],al
  42b394:	mov    DWORD PTR es:[rdx],0x0
  42b39b:	add    BYTE PTR [rax],dh
  42b39d:	mov    DWORD PTR [rdx],0x0
  42b3a3:	add    BYTE PTR [rdx],bh
  42b3a5:	mov    DWORD PTR [rdx],0x0
  42b3ab:	add    BYTE PTR [rdi+rax*8+0x2],al
  42b3af:	add    BYTE PTR [rax],al
  42b3b1:	add    BYTE PTR [rax],al
  42b3b3:	add    BYTE PTR [rsi-0x39],cl
  42b3b6:	add    al,BYTE PTR [rax]
  42b3b8:	add    BYTE PTR [rax],al
  42b3ba:	add    BYTE PTR [rax],al
  42b3bc:	pop    rax
  42b3bd:	mov    DWORD PTR [rdx],0x0
  42b3c3:	add    BYTE PTR [rdx-0x39],ah
  42b3c6:	add    al,BYTE PTR [rax]
  42b3c8:	add    BYTE PTR [rax],al
  42b3ca:	add    BYTE PTR [rax],al
  42b3cc:	outs   dx,BYTE PTR ds:[rsi]
  42b3cd:	mov    DWORD PTR [rdx],0x0
	...
  42b3db:	add    BYTE PTR [rax-0x39],bh
  42b3de:	add    al,BYTE PTR [rax]
	...
  42b3ec:	nop
  42b3ed:	mov    DWORD PTR [rdx],0x0
  42b3f3:	add    BYTE PTR [rdi+rax*8+0x2],ch
  42b3fa:	add    BYTE PTR [rax],al
  42b3fc:	(bad)  
  42b3fd:	mov    DWORD PTR [rdx],0x0
  42b403:	add    ah,bl
  42b405:	mov    DWORD PTR [rdx],0x0
  42b40b:	add    ah,ch
  42b40d:	mov    DWORD PTR [rdx],0x0
  42b413:	add    BYTE PTR [rax],al
  42b415:	enter  0x2,0x0
  42b419:	add    BYTE PTR [rax],al
  42b41b:	add    BYTE PTR [rax+rcx*8],bl
  42b41e:	add    al,BYTE PTR [rax]
  42b420:	add    BYTE PTR [rax],al
  42b422:	add    BYTE PTR [rax],al
  42b424:	cmp    al,cl
  42b426:	add    al,BYTE PTR [rax]
  42b428:	add    BYTE PTR [rax],al
  42b42a:	add    BYTE PTR [rax],al
  42b42c:	push   rax
  42b42d:	enter  0x2,0x0
  42b431:	add    BYTE PTR [rax],al
  42b433:	add    BYTE PTR [rax+rcx*8+0x2],ah
  42b437:	add    BYTE PTR [rax],al
  42b439:	add    BYTE PTR [rax],al
  42b43b:	add    BYTE PTR [rax+0x2c8],al
  42b441:	add    BYTE PTR [rax],al
  42b443:	add    BYTE PTR [rax+0x2c8],dl
  42b449:	add    BYTE PTR [rax],al
  42b44b:	add    BYTE PTR [rax+0x2c8],ch
  42b451:	add    BYTE PTR [rax],al
  42b453:	add    al,al
  42b455:	enter  0x2,0x0
  42b459:	add    BYTE PTR [rax],al
  42b45b:	add    ah,bl
  42b45d:	enter  0x2,0x0
  42b461:	add    BYTE PTR [rax],al
  42b463:	add    ah,dh
  42b465:	enter  0x2,0x0
  42b469:	add    BYTE PTR [rax],al
  42b46b:	add    BYTE PTR [rax],dl
  42b46d:	leave  
  42b46e:	add    al,BYTE PTR [rax]
  42b470:	add    BYTE PTR [rax],al
  42b472:	add    BYTE PTR [rax],al
  42b474:	xor    al,0xc9
  42b476:	add    al,BYTE PTR [rax]
  42b478:	add    BYTE PTR [rax],al
  42b47a:	add    BYTE PTR [rax],al
  42b47c:	push   rax
  42b47d:	leave  
  42b47e:	add    al,BYTE PTR [rax]
  42b480:	add    BYTE PTR [rax],al
  42b482:	add    BYTE PTR [rax],al
  42b484:	push   0x2c9
  42b489:	add    BYTE PTR [rax],al
  42b48b:	add    BYTE PTR [rax+0x2c9],cl
  42b491:	add    BYTE PTR [rax],al
  42b493:	add    BYTE PTR [rax+0x2c9],ah
  42b499:	add    BYTE PTR [rax],al
  42b49b:	add    al,al
  42b49d:	leave  
  42b49e:	add    al,BYTE PTR [rax]
  42b4a0:	add    BYTE PTR [rax],al
  42b4a2:	add    BYTE PTR [rax],al
  42b4a4:	(bad)  
  42b4a5:	leave  
  42b4a6:	add    al,BYTE PTR [rax]
  42b4a8:	add    BYTE PTR [rax],al
  42b4aa:	add    BYTE PTR [rax],al
  42b4ac:	in     al,0xc9
  42b4ae:	add    al,BYTE PTR [rax]
  42b4b0:	add    BYTE PTR [rax],al
  42b4b2:	add    BYTE PTR [rax],al
  42b4b4:	clc    
  42b4b5:	leave  
  42b4b6:	add    al,BYTE PTR [rax]
	...
  42b4c4:	or     al,0xca
  42b4c6:	add    al,BYTE PTR [rax]
  42b4c8:	add    BYTE PTR [rax],al
  42b4ca:	add    BYTE PTR [rax],al
  42b4cc:	sub    al,0xca
  42b4ce:	add    al,BYTE PTR [rax]
  42b4d0:	add    BYTE PTR [rax],al
  42b4d2:	add    BYTE PTR [rax],al
  42b4d4:	rex.WR retf 0x2
  42b4d8:	add    BYTE PTR [rax],al
  42b4da:	add    BYTE PTR [rax],al
  42b4dc:	ins    BYTE PTR es:[rdi],dx
  42b4dd:	retf   0x2
  42b4e0:	add    BYTE PTR [rax],al
  42b4e2:	add    BYTE PTR [rax],al
  42b4e4:	mov    edx,cs
  42b4e6:	add    al,BYTE PTR [rax]
  42b4e8:	add    BYTE PTR [rax],al
  42b4ea:	add    BYTE PTR [rax],al
  42b4ec:	test   al,0xca
  42b4ee:	add    al,BYTE PTR [rax]
  42b4f0:	add    BYTE PTR [rax],al
  42b4f2:	add    BYTE PTR [rax],al
  42b4f4:	enter  0x2ca,0x0
  42b4f8:	add    BYTE PTR [rax],al
  42b4fa:	add    BYTE PTR [rax],al
  42b4fc:	call   0x42b7cb
  42b501:	add    BYTE PTR [rax],al
  42b503:	add    BYTE PTR [rax],cl
  42b505:	retf   
  42b506:	add    al,BYTE PTR [rax]
  42b508:	add    BYTE PTR [rax],al
  42b50a:	add    BYTE PTR [rax],al
  42b50c:	and    bl,cl
  42b50e:	add    al,BYTE PTR [rax]
	...
  42b51c:	xor    al,0xcb
  42b51e:	add    al,BYTE PTR [rax]
  42b520:	add    BYTE PTR [rax],al
  42b522:	add    BYTE PTR [rax],al
  42b524:	push   rax
  42b525:	retf   
  42b526:	add    al,BYTE PTR [rax]
  42b528:	add    BYTE PTR [rax],al
  42b52a:	add    BYTE PTR [rax],al
  42b52c:	push   0x2cb
  42b531:	add    BYTE PTR [rax],al
  42b533:	add    BYTE PTR [rax-0x35],bh
  42b536:	add    al,BYTE PTR [rax]
  42b538:	add    BYTE PTR [rax],al
  42b53a:	add    BYTE PTR [rax],al
  42b53c:	nop
  42b53d:	retf   
  42b53e:	add    al,BYTE PTR [rax]
  42b540:	add    BYTE PTR [rax],al
  42b542:	add    BYTE PTR [rax],al
  42b544:	test   al,0xcb
  42b546:	add    al,BYTE PTR [rax]
  42b548:	add    BYTE PTR [rax],al
  42b54a:	add    BYTE PTR [rax],al
  42b54c:	ror    bl,0x2
	...
  42b55b:	add    ah,dl
  42b55d:	retf   
  42b55e:	add    al,BYTE PTR [rax]
  42b560:	add    BYTE PTR [rax],al
  42b562:	add    BYTE PTR [rax],al
  42b564:	call   0x42b834
  42b569:	add    BYTE PTR [rax],al
  42b56b:	add    BYTE PTR [rax],al
  42b56d:	int3   
  42b56e:	add    al,BYTE PTR [rax]
  42b570:	add    BYTE PTR [rax],al
  42b572:	add    BYTE PTR [rax],al
  42b574:	sbb    al,0xcc
  42b576:	add    al,BYTE PTR [rax]
  42b578:	add    BYTE PTR [rax],al
  42b57a:	add    BYTE PTR [rax],al
  42b57c:	xor    ah,cl
  42b57e:	add    al,BYTE PTR [rax]
  42b580:	add    BYTE PTR [rax],al
  42b582:	add    BYTE PTR [rax],al
  42b584:	push   rax
  42b585:	int3   
  42b586:	add    al,BYTE PTR [rax]
  42b588:	add    BYTE PTR [rax],al
  42b58a:	add    BYTE PTR [rax],al
  42b58c:	fs int3 
  42b58e:	add    al,BYTE PTR [rax]
  42b590:	add    BYTE PTR [rax],al
  42b592:	add    BYTE PTR [rax],al
  42b594:	js     0x42b562
  42b596:	add    al,BYTE PTR [rax]
  42b598:	add    BYTE PTR [rax],al
  42b59a:	add    BYTE PTR [rax],al
  42b59c:	mov    ah,cl
  42b59e:	add    al,BYTE PTR [rax]
  42b5a0:	add    BYTE PTR [rax],al
  42b5a2:	add    BYTE PTR [rax],al
  42b5a4:	pushf  
  42b5a5:	int3   
  42b5a6:	add    al,BYTE PTR [rax]
  42b5a8:	add    BYTE PTR [rax],al
  42b5aa:	add    BYTE PTR [rax],al
  42b5ac:	mov    eax,0x2cc
  42b5b1:	add    BYTE PTR [rax],al
  42b5b3:	add    al,dl
  42b5b5:	int3   
  42b5b6:	add    al,BYTE PTR [rax]
  42b5b8:	add    BYTE PTR [rax],al
  42b5ba:	add    BYTE PTR [rax],al
  42b5bc:	in     al,dx
  42b5bd:	int3   
  42b5be:	add    al,BYTE PTR [rax]
  42b5c0:	add    BYTE PTR [rax],al
  42b5c2:	add    BYTE PTR [rax],al
  42b5c4:	or     ch,cl
  42b5c6:	add    al,BYTE PTR [rax]
  42b5c8:	add    BYTE PTR [rax],al
  42b5ca:	add    BYTE PTR [rax],al
  42b5cc:	and    ch,cl
  42b5ce:	add    al,BYTE PTR [rax]
  42b5d0:	add    BYTE PTR [rax],al
  42b5d2:	add    BYTE PTR [rax],al
  42b5d4:	rex.R int 0x2
  42b5d7:	add    BYTE PTR [rax],al
  42b5d9:	add    BYTE PTR [rax],al
  42b5db:	add    BYTE PTR [rax-0x33],ah
  42b5de:	add    al,BYTE PTR [rax]
  42b5e0:	add    BYTE PTR [rax],al
  42b5e2:	add    BYTE PTR [rax],al
  42b5e4:	js     0x42b5b3
  42b5e6:	add    al,BYTE PTR [rax]
  42b5e8:	add    BYTE PTR [rax],al
  42b5ea:	add    BYTE PTR [rax],al
  42b5ec:	nop
  42b5ed:	int    0x2
  42b5ef:	add    BYTE PTR [rax],al
  42b5f1:	add    BYTE PTR [rax],al
  42b5f3:	add    BYTE PTR [rax+0x2cd],ch
  42b5f9:	add    BYTE PTR [rax],al
  42b5fb:	add    BYTE PTR [rbp+rcx*8+0x2],bh
  42b602:	add    BYTE PTR [rax],al
  42b604:	(bad)  
  42b605:	int    0x2
	...
  42b613:	add    al,ah
  42b615:	int    0x2
  42b617:	add    BYTE PTR [rax],al
  42b619:	add    BYTE PTR [rax],al
  42b61b:	add    ah,bh
  42b61d:	int    0x2
  42b61f:	add    BYTE PTR [rax],al
  42b621:	add    BYTE PTR [rax],al
  42b623:	add    BYTE PTR [rsi+rcx*8],dl
  42b626:	add    al,BYTE PTR [rax]
	...
  42b634:	sub    al,0xce
  42b636:	add    al,BYTE PTR [rax]
  42b638:	add    BYTE PTR [rax],al
  42b63a:	add    BYTE PTR [rax],al
  42b63c:	cmp    al,0xce
  42b63e:	add    al,BYTE PTR [rax]
  42b640:	add    BYTE PTR [rax],al
  42b642:	add    BYTE PTR [rax],al
  42b644:	push   rsp
  42b645:	(bad)  
  42b646:	add    al,BYTE PTR [rax]
  42b648:	add    BYTE PTR [rax],al
  42b64a:	add    BYTE PTR [rax],al
  42b64c:	jo     0x42b61c
  42b64e:	add    al,BYTE PTR [rax]
  42b650:	add    BYTE PTR [rax],al
  42b652:	add    BYTE PTR [rax],al
  42b654:	test   dh,cl
  42b656:	add    al,BYTE PTR [rax]
  42b658:	add    BYTE PTR [rax],al
  42b65a:	add    BYTE PTR [rax],al
  42b65c:	cwde   
  42b65d:	(bad)  
  42b65e:	add    al,BYTE PTR [rax]
  42b660:	add    BYTE PTR [rax],al
  42b662:	add    BYTE PTR [rax],al
  42b664:	mov    al,0xce
  42b666:	add    al,BYTE PTR [rax]
  42b668:	add    BYTE PTR [rax],al
  42b66a:	add    BYTE PTR [rax],al
  42b66c:	(bad)  
  42b66d:	(bad)  
  42b66e:	add    al,BYTE PTR [rax]
  42b670:	add    BYTE PTR [rax],al
  42b672:	add    BYTE PTR [rax],al
  42b674:	(bad)  
  42b675:	(bad)  
  42b676:	add    al,BYTE PTR [rax]
  42b678:	add    BYTE PTR [rax],al
  42b67a:	add    BYTE PTR [rax],al
  42b67c:	loopne 0x42b64c
  42b67e:	add    al,BYTE PTR [rax]
  42b680:	add    BYTE PTR [rax],al
  42b682:	add    BYTE PTR [rax],al
  42b684:	cld    
  42b685:	(bad)  
  42b686:	add    al,BYTE PTR [rax]
  42b688:	add    BYTE PTR [rax],al
  42b68a:	add    BYTE PTR [rax],al
  42b68c:	sbb    bh,cl
  42b68e:	add    al,BYTE PTR [rax]
  42b690:	add    BYTE PTR [rax],al
  42b692:	add    BYTE PTR [rax],al
  42b694:	xor    bh,cl
  42b696:	add    al,BYTE PTR [rax]
  42b698:	add    BYTE PTR [rax],al
  42b69a:	add    BYTE PTR [rax],al
  42b69c:	rex.WR iretq 
  42b69e:	add    al,BYTE PTR [rax]
  42b6a0:	add    BYTE PTR [rax],al
  42b6a2:	add    BYTE PTR [rax],al
  42b6a4:	pop    rsp
  42b6a5:	iret   
  42b6a6:	add    al,BYTE PTR [rax]
  42b6a8:	add    BYTE PTR [rax],al
  42b6aa:	add    BYTE PTR [rax],al
  42b6ac:	ins    BYTE PTR es:[rdi],dx
  42b6ad:	iret   
  42b6ae:	add    al,BYTE PTR [rax]
  42b6b0:	add    BYTE PTR [rax],al
  42b6b2:	add    BYTE PTR [rax],al
  42b6b4:	jl     0x42b685
  42b6b6:	add    al,BYTE PTR [rax]
  42b6b8:	add    BYTE PTR [rax],al
  42b6ba:	add    BYTE PTR [rax],al
  42b6bc:	xchg   esp,eax
  42b6bd:	iret   
  42b6be:	add    al,BYTE PTR [rax]
  42b6c0:	add    BYTE PTR [rax],al
  42b6c2:	add    BYTE PTR [rax],al
  42b6c4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42b6c5:	iret   
  42b6c6:	add    al,BYTE PTR [rax]
  42b6c8:	add    BYTE PTR [rax],al
  42b6ca:	add    BYTE PTR [rax],al
  42b6cc:	ror    bh,0x2
  42b6cf:	add    BYTE PTR [rax],al
  42b6d1:	add    BYTE PTR [rax],al
  42b6d3:	add    al,bl
  42b6d5:	iret   
  42b6d6:	add    al,BYTE PTR [rax]
  42b6d8:	add    BYTE PTR [rax],al
  42b6da:	add    BYTE PTR [rax],al
  42b6dc:	in     al,dx
  42b6dd:	iret   
  42b6de:	add    al,BYTE PTR [rax]
  42b6e0:	add    BYTE PTR [rax],al
  42b6e2:	add    BYTE PTR [rax],al
  42b6e4:	cld    
  42b6e5:	iret   
  42b6e6:	add    al,BYTE PTR [rax]
  42b6e8:	add    BYTE PTR [rax],al
  42b6ea:	add    BYTE PTR [rax],al
  42b6ec:	and    al,0xd0
  42b6ee:	add    al,BYTE PTR [rax]
  42b6f0:	add    BYTE PTR [rax],al
  42b6f2:	add    BYTE PTR [rax],al
  42b6f4:	rex.R rol BYTE PTR [rdx],1
  42b6f7:	add    BYTE PTR [rax],al
  42b6f9:	add    BYTE PTR [rax],al
  42b6fb:	add    BYTE PTR [rax+rdx*8+0x2],bl
  42b6ff:	add    BYTE PTR [rax],al
  42b701:	add    BYTE PTR [rax],al
  42b703:	add    BYTE PTR [rax+rdx*8+0x2],dh
  42b707:	add    BYTE PTR [rax],al
  42b709:	add    BYTE PTR [rax],al
  42b70b:	add    BYTE PTR [rax+0x2d0],dl
  42b711:	add    BYTE PTR [rax],al
  42b713:	add    BYTE PTR [rax+0x2d0],ch
  42b719:	add    BYTE PTR [rax],al
  42b71b:	add    al,al
  42b71d:	rol    BYTE PTR [rdx],1
  42b71f:	add    BYTE PTR [rax],al
  42b721:	add    BYTE PTR [rax],al
  42b723:	add    ah,bl
  42b725:	rol    BYTE PTR [rdx],1
  42b727:	add    BYTE PTR [rax],al
  42b729:	add    BYTE PTR [rax],al
  42b72b:	add    al,ch
  42b72d:	rol    BYTE PTR [rdx],1
  42b72f:	add    BYTE PTR [rax],al
  42b731:	add    BYTE PTR [rax],al
  42b733:	add    ah,dh
  42b735:	rol    BYTE PTR [rdx],1
  42b737:	add    BYTE PTR [rax],al
  42b739:	add    BYTE PTR [rax],al
  42b73b:	add    BYTE PTR [rcx+rdx*8],cl
  42b73e:	add    al,BYTE PTR [rax]
  42b740:	add    BYTE PTR [rax],al
  42b742:	add    BYTE PTR [rax],al
  42b744:	sub    al,0xd1
  42b746:	add    al,BYTE PTR [rax]
  42b748:	add    BYTE PTR [rax],al
  42b74a:	add    BYTE PTR [rax],al
  42b74c:	rex.WR rol QWORD PTR [rdx],1
  42b74f:	add    BYTE PTR [rax],al
  42b751:	add    BYTE PTR [rax],al
  42b753:	add    BYTE PTR [rcx+rdx*8+0x2],ah
  42b757:	add    BYTE PTR [rax],al
  42b759:	add    BYTE PTR [rax],al
  42b75b:	add    BYTE PTR [rax+0x2d1],al
  42b761:	add    BYTE PTR [rax],al
  42b763:	add    BYTE PTR [rcx+rdx*8+0x2],dl
  42b76a:	add    BYTE PTR [rax],al
  42b76c:	mov    al,0xd1
  42b76e:	add    al,BYTE PTR [rax]
  42b770:	add    BYTE PTR [rax],al
  42b772:	add    BYTE PTR [rax],al
  42b774:	int3   
  42b775:	rol    DWORD PTR [rdx],1
  42b777:	add    BYTE PTR [rax],al
  42b779:	add    BYTE PTR [rax],al
  42b77b:	add    al,ch
  42b77d:	rol    DWORD PTR [rdx],1
  42b77f:	add    BYTE PTR [rax],al
  42b781:	add    BYTE PTR [rax],al
  42b783:	add    BYTE PTR [rax],al
  42b785:	rol    BYTE PTR [rdx],cl
  42b787:	add    BYTE PTR [rax],al
  42b789:	add    BYTE PTR [rax],al
  42b78b:	add    BYTE PTR [rdx+rdx*8],bl
  42b78e:	add    al,BYTE PTR [rax]
  42b790:	add    BYTE PTR [rax],al
  42b792:	add    BYTE PTR [rax],al
  42b794:	cmp    dl,dl
  42b796:	add    al,BYTE PTR [rax]
  42b798:	add    BYTE PTR [rax],al
  42b79a:	add    BYTE PTR [rax],al
  42b79c:	pop    rsp
  42b79d:	rol    BYTE PTR [rdx],cl
  42b79f:	add    BYTE PTR [rax],al
  42b7a1:	add    BYTE PTR [rax],al
  42b7a3:	add    BYTE PTR [rdx+rdx*8+0x2],ch
  42b7a7:	add    BYTE PTR [rax],al
  42b7a9:	add    BYTE PTR [rax],al
  42b7ab:	add    BYTE PTR [rdx+rdx*8+0x2],bh
  42b7af:	add    BYTE PTR [rax],al
  42b7b1:	add    BYTE PTR [rax],al
  42b7b3:	add    BYTE PTR [rax+0x2d2],dl
  42b7b9:	add    BYTE PTR [rax],al
  42b7bb:	add    BYTE PTR [rax+0x2d2],ah
  42b7c1:	add    BYTE PTR [rax],al
  42b7c3:	add    BYTE PTR [rdx+rdx*8+0x2],dh
  42b7ca:	add    BYTE PTR [rax],al
  42b7cc:	(bad)  
  42b7cd:	rol    BYTE PTR [rdx],cl
  42b7cf:	add    BYTE PTR [rax],al
  42b7d1:	add    BYTE PTR [rax],al
  42b7d3:	add    ah,dl
  42b7d5:	rol    BYTE PTR [rdx],cl
  42b7d7:	add    BYTE PTR [rax],al
  42b7d9:	add    BYTE PTR [rax],al
  42b7db:	add    al,ch
  42b7dd:	rol    BYTE PTR [rdx],cl
  42b7df:	add    BYTE PTR [rax],al
  42b7e1:	add    BYTE PTR [rax],al
  42b7e3:	add    ah,dh
  42b7e5:	rol    BYTE PTR [rdx],cl
  42b7e7:	add    BYTE PTR [rax],al
  42b7e9:	add    BYTE PTR [rax],al
  42b7eb:	add    BYTE PTR [rax],dl
  42b7ed:	rol    DWORD PTR [rdx],cl
  42b7ef:	add    BYTE PTR [rax],al
  42b7f1:	add    BYTE PTR [rax],al
  42b7f3:	add    BYTE PTR [rax],ch
  42b7f5:	rol    DWORD PTR [rdx],cl
  42b7f7:	add    BYTE PTR [rax],al
  42b7f9:	add    BYTE PTR [rax],al
  42b7fb:	add    BYTE PTR [rbx+rdx*8],bh
  42b7fe:	add    al,BYTE PTR [rax]
  42b800:	add    BYTE PTR [rax],al
  42b802:	add    BYTE PTR [rax],al
  42b804:	push   rax
  42b805:	rol    DWORD PTR [rdx],cl
  42b807:	add    BYTE PTR [rax],al
  42b809:	add    BYTE PTR [rax],al
  42b80b:	add    BYTE PTR [rax-0x2d],ch
  42b80e:	add    al,BYTE PTR [rax]
  42b810:	add    BYTE PTR [rax],al
  42b812:	add    BYTE PTR [rax],al
  42b814:	jl     0x42b7e9
  42b816:	add    al,BYTE PTR [rax]
  42b818:	add    BYTE PTR [rax],al
  42b81a:	add    BYTE PTR [rax],al
  42b81c:	nop
  42b81d:	rol    DWORD PTR [rdx],cl
  42b81f:	add    BYTE PTR [rax],al
  42b821:	add    BYTE PTR [rax],al
  42b823:	add    BYTE PTR [rbx+rdx*8+0x2],bl
  42b82a:	add    BYTE PTR [rax],al
  42b82c:	lods   al,BYTE PTR ds:[rsi]
  42b82d:	rol    DWORD PTR [rdx],cl
  42b82f:	add    BYTE PTR [rax],al
  42b831:	add    BYTE PTR [rax],al
  42b833:	add    BYTE PTR [rbx+rdx*8+0x2],bh
  42b83a:	add    BYTE PTR [rax],al
  42b83c:	int3   
  42b83d:	rol    DWORD PTR [rdx],cl
  42b83f:	add    BYTE PTR [rax],al
  42b841:	add    BYTE PTR [rax],al
  42b843:	add    al,ch
  42b845:	rol    DWORD PTR [rdx],cl
  42b847:	add    BYTE PTR [rax],al
  42b849:	add    BYTE PTR [rax],al
  42b84b:	add    al,bh
  42b84d:	rol    DWORD PTR [rdx],cl
  42b84f:	add    BYTE PTR [rax],al
  42b851:	add    BYTE PTR [rax],al
  42b853:	add    BYTE PTR [rax],cl
  42b855:	(bad)  
  42b856:	add    al,BYTE PTR [rax]
  42b858:	add    BYTE PTR [rax],al
  42b85a:	add    BYTE PTR [rax],al
  42b85c:	sbb    ah,dl
  42b85e:	add    al,BYTE PTR [rax]
  42b860:	add    BYTE PTR [rax],al
  42b862:	add    BYTE PTR [rax],al
  42b864:	xor    ah,dl
  42b866:	add    al,BYTE PTR [rax]
  42b868:	add    BYTE PTR [rax],al
  42b86a:	add    BYTE PTR [rax],al
  42b86c:	rex (bad) 
  42b86e:	add    al,BYTE PTR [rax]
  42b870:	add    BYTE PTR [rax],al
  42b872:	add    BYTE PTR [rax],al
  42b874:	push   rax
  42b875:	(bad)  
  42b876:	add    al,BYTE PTR [rax]
  42b878:	add    BYTE PTR [rax],al
  42b87a:	add    BYTE PTR [rax],al
  42b87c:	push   0x2d4
  42b881:	add    BYTE PTR [rax],al
  42b883:	add    BYTE PTR [rax-0x2c],bh
  42b886:	add    al,BYTE PTR [rax]
  42b888:	add    BYTE PTR [rax],al
  42b88a:	add    BYTE PTR [rax],al
  42b88c:	mov    esp,ss
  42b88e:	add    al,BYTE PTR [rax]
  42b890:	add    BYTE PTR [rax],al
  42b892:	add    BYTE PTR [rax],al
  42b894:	pushf  
  42b895:	(bad)  
  42b896:	add    al,BYTE PTR [rax]
  42b898:	add    BYTE PTR [rax],al
  42b89a:	add    BYTE PTR [rax],al
  42b89c:	mov    eax,0x2d4
  42b8a1:	add    BYTE PTR [rax],al
  42b8a3:	add    al,dl
  42b8a5:	(bad)  
  42b8a6:	add    al,BYTE PTR [rax]
  42b8a8:	add    BYTE PTR [rax],al
  42b8aa:	add    BYTE PTR [rax],al
  42b8ac:	in     al,0xd4
  42b8ae:	add    al,BYTE PTR [rax]
  42b8b0:	add    BYTE PTR [rax],al
  42b8b2:	add    BYTE PTR [rax],al
  42b8b4:	clc    
  42b8b5:	(bad)  
  42b8b6:	add    al,BYTE PTR [rax]
  42b8b8:	add    BYTE PTR [rax],al
  42b8ba:	add    BYTE PTR [rax],al
  42b8bc:	add    al,0xd5
  42b8be:	add    al,BYTE PTR [rax]
  42b8c0:	add    BYTE PTR [rax],al
  42b8c2:	add    BYTE PTR [rax],al
  42b8c4:	adc    al,0xd5
  42b8c6:	add    al,BYTE PTR [rax]
  42b8c8:	add    BYTE PTR [rax],al
  42b8ca:	add    BYTE PTR [rax],al
  42b8cc:	and    ch,dl
  42b8ce:	add    al,BYTE PTR [rax]
  42b8d0:	add    BYTE PTR [rax],al
  42b8d2:	add    BYTE PTR [rax],al
  42b8d4:	xor    ch,dl
  42b8d6:	add    al,BYTE PTR [rax]
  42b8d8:	add    BYTE PTR [rax],al
  42b8da:	add    BYTE PTR [rax],al
  42b8dc:	rex (bad) 
  42b8de:	add    al,BYTE PTR [rax]
  42b8e0:	add    BYTE PTR [rax],al
  42b8e2:	add    BYTE PTR [rax],al
  42b8e4:	push   rax
  42b8e5:	(bad)  
  42b8e6:	add    al,BYTE PTR [rax]
  42b8e8:	add    BYTE PTR [rax],al
  42b8ea:	add    BYTE PTR [rax],al
  42b8ec:	(bad)  
  42b8ed:	(bad)  
  42b8ee:	add    al,BYTE PTR [rax]
  42b8f0:	add    BYTE PTR [rax],al
  42b8f2:	add    BYTE PTR [rax],al
  42b8f4:	ins    BYTE PTR es:[rdi],dx
  42b8f5:	(bad)  
  42b8f6:	add    al,BYTE PTR [rax]
  42b8f8:	add    BYTE PTR [rax],al
  42b8fa:	add    BYTE PTR [rax],al
  42b8fc:	js     0x42b8d3
  42b8fe:	add    al,BYTE PTR [rax]
  42b900:	add    BYTE PTR [rax],al
  42b902:	add    BYTE PTR [rax],al
  42b904:	pushf  
  42b905:	(bad)  
  42b906:	add    al,BYTE PTR [rax]
  42b908:	add    BYTE PTR [rax],al
  42b90a:	add    BYTE PTR [rax],al
  42b90c:	mov    al,0xd5
  42b90e:	add    al,BYTE PTR [rax]
  42b910:	add    BYTE PTR [rax],al
  42b912:	add    BYTE PTR [rax],al
  42b914:	enter  0x2d5,0x0
	...
  42b924:	(bad)  
  42b926:	add    al,BYTE PTR [rax]
  42b928:	add    BYTE PTR [rax],al
  42b92a:	add    BYTE PTR [rax],al
  42b92c:	clc    
  42b92d:	(bad)  
  42b92e:	add    al,BYTE PTR [rax]
	...
  42b93c:	or     al,0xd6
  42b93e:	add    al,BYTE PTR [rax]
  42b940:	add    BYTE PTR [rax],al
  42b942:	add    BYTE PTR [rax],al
  42b944:	sbb    dh,dl
  42b946:	add    al,BYTE PTR [rax]
  42b948:	add    BYTE PTR [rax],al
  42b94a:	add    BYTE PTR [rax],al
  42b94c:	and    al,0xd6
  42b94e:	add    al,BYTE PTR [rax]
  42b950:	add    BYTE PTR [rax],al
  42b952:	add    BYTE PTR [rax],al
  42b954:	xor    al,0xd6
  42b956:	add    al,BYTE PTR [rax]
  42b958:	add    BYTE PTR [rax],al
  42b95a:	add    BYTE PTR [rax],al
  42b95c:	push   rax
  42b95d:	(bad)  
  42b95e:	add    al,BYTE PTR [rax]
	...
  42b96c:	push   0x2d6
  42b971:	add    BYTE PTR [rax],al
  42b973:	add    BYTE PTR [rsi+rdx*8+0x2],bh
  42b977:	add    BYTE PTR [rax],al
  42b979:	add    BYTE PTR [rax],al
  42b97b:	add    BYTE PTR [rax+0x2d6],dl
  42b981:	add    BYTE PTR [rax],al
  42b983:	add    BYTE PTR [rax+0x2d6],ah
  42b989:	add    BYTE PTR [rax],al
  42b98b:	add    BYTE PTR [rax+0x2d6],bh
  42b991:	add    BYTE PTR [rax],al
  42b993:	add    al,dl
  42b995:	(bad)  
  42b996:	add    al,BYTE PTR [rax]
  42b998:	add    BYTE PTR [rax],al
  42b99a:	add    BYTE PTR [rax],al
  42b99c:	call   0x42bc77
	...
  42b9a9:	add    BYTE PTR [rax],al
  42b9ab:	add    BYTE PTR [rdx+rax*8+0x2],dl
  42b9af:	add    BYTE PTR [rax],al
  42b9b1:	add    BYTE PTR [rax],al
  42b9b3:	add    BYTE PTR [rdx+rax*8+0x2],ch
  42b9b7:	add    BYTE PTR [rax],al
  42b9b9:	add    BYTE PTR [rax],al
  42b9bb:	add    BYTE PTR [rdx+rax*8+0x2],al
  42b9c2:	add    BYTE PTR [rax],al
  42b9c4:	xchg   esi,eax
  42b9c5:	ret    0x2
  42b9c8:	add    BYTE PTR [rax],al
  42b9ca:	add    BYTE PTR [rax],al
  42b9cc:	stos   BYTE PTR es:[rdi],al
  42b9cd:	ret    0x2
  42b9d0:	add    BYTE PTR [rax],al
  42b9d2:	add    BYTE PTR [rax],al
  42b9d4:	rol    dl,0x2
  42b9d7:	add    BYTE PTR [rax],al
  42b9d9:	add    BYTE PTR [rax],al
  42b9db:	add    dh,dl
  42b9dd:	ret    0x2
  42b9e0:	add    BYTE PTR [rax],al
  42b9e2:	add    BYTE PTR [rax],al
  42b9e4:	out    0xc2,al
  42b9e6:	add    al,BYTE PTR [rax]
  42b9e8:	add    BYTE PTR [rax],al
  42b9ea:	add    BYTE PTR [rax],al
  42b9ec:	cld    
  42b9ed:	ret    0x2
  42b9f0:	add    BYTE PTR [rax],al
  42b9f2:	add    BYTE PTR [rax],al
  42b9f4:	adc    bl,al
  42b9f6:	add    al,BYTE PTR [rax]
  42b9f8:	add    BYTE PTR [rax],al
  42b9fa:	add    BYTE PTR [rax],al
  42b9fc:	and    al,0xc3
  42b9fe:	add    al,BYTE PTR [rax]
  42ba00:	add    BYTE PTR [rax],al
  42ba02:	add    BYTE PTR [rax],al
  42ba04:	ss ret 
  42ba06:	add    al,BYTE PTR [rax]
  42ba08:	add    BYTE PTR [rax],al
  42ba0a:	add    BYTE PTR [rax],al
  42ba0c:	rex.W ret 
  42ba0e:	add    al,BYTE PTR [rax]
  42ba10:	add    BYTE PTR [rax],al
  42ba12:	add    BYTE PTR [rax],al
  42ba14:	(bad)  
  42ba16:	add    al,BYTE PTR [rax]
  42ba18:	add    BYTE PTR [rax],al
  42ba1a:	add    BYTE PTR [rax],al
  42ba1c:	jb     0x42b9e1
  42ba1e:	add    al,BYTE PTR [rax]
  42ba20:	add    BYTE PTR [rax],al
  42ba22:	add    BYTE PTR [rax],al
  42ba24:	mov    es,ebx
  42ba26:	add    al,BYTE PTR [rax]
  42ba28:	add    BYTE PTR [rax],al
  42ba2a:	add    BYTE PTR [rax],al
  42ba2c:	movabs ds:0xba000000000002c3,al
  42ba35:	ret    
  42ba36:	add    al,BYTE PTR [rax]
  42ba38:	add    BYTE PTR [rax],al
  42ba3a:	add    BYTE PTR [rax],al
  42ba3c:	mov    bl,0x2
  42ba3f:	add    BYTE PTR [rax],al
  42ba41:	add    BYTE PTR [rax],al
  42ba43:	add    ah,bl
  42ba45:	ret    
  42ba46:	add    al,BYTE PTR [rax]
  42ba48:	add    BYTE PTR [rax],al
  42ba4a:	add    BYTE PTR [rax],al
  42ba4c:	test   bl,0x2
  42ba4f:	add    BYTE PTR [rax],al
  42ba51:	add    BYTE PTR [rax],al
  42ba53:	add    BYTE PTR [rsp+rax*8],cl
  42ba56:	add    al,BYTE PTR [rax]
  42ba58:	add    BYTE PTR [rax],al
  42ba5a:	add    BYTE PTR [rax],al
  42ba5c:	and    ah,al
  42ba5e:	add    al,BYTE PTR [rax]
  42ba60:	add    BYTE PTR [rax],al
  42ba62:	add    BYTE PTR [rax],al
  42ba64:	cmp    al,ah
  42ba66:	add    al,BYTE PTR [rax]
  42ba68:	add    BYTE PTR [rax],al
  42ba6a:	add    BYTE PTR [rax],al
  42ba6c:	(bad)
  42ba71:	add    BYTE PTR [rax],al
  42ba73:	add    BYTE PTR [rdx-0x3c],ah
  42ba76:	add    al,BYTE PTR [rax]
  42ba78:	add    BYTE PTR [rax],al
  42ba7a:	add    BYTE PTR [rax],al
  42ba7c:	add    ah,0x2
  42ba7f:	add    BYTE PTR [rax],al
  42ba81:	add    BYTE PTR [rax],al
  42ba83:	add    BYTE PTR [rax+0x2c4],cl
  42ba89:	add    BYTE PTR [rax],al
  42ba8b:	add    BYTE PTR [rsp+rax*8+0x2],bl
  42ba92:	add    BYTE PTR [rax],al
  42ba94:	stos   BYTE PTR es:[rdi],al
  42ba95:	(bad)
  42ba99:	add    BYTE PTR [rax],al
  42ba9b:	add    dh,al
  42ba9d:	(bad)
  42baa1:	add    BYTE PTR [rax],al
  42baa3:	add    al,bl
  42baa5:	(bad)
  42baa9:	add    BYTE PTR [rax],al
  42baab:	add    al,ch
  42baad:	(bad)
	...
  42bab9:	add    BYTE PTR [rax],al
  42babb:	add    dh,bh
  42babd:	(bad)
  42bac1:	add    BYTE PTR [rax],al
  42bac3:	add    BYTE PTR [rsi],dl
  42bac5:	(bad)
  42bac8:	add    BYTE PTR [rax],al
  42baca:	add    BYTE PTR [rax],al
  42bacc:	sub    al,0xc5
  42bace:	add    al,BYTE PTR [rax]
  42bad0:	add    BYTE PTR [rax],al
  42bad2:	add    BYTE PTR [rax],al
  42bad4:	cmp    al,ch
  42bad6:	add    al,BYTE PTR [rax]
  42bad8:	add    BYTE PTR [rax],al
  42bada:	add    BYTE PTR [rax],al
  42badc:	(bad)
  42bae0:	add    BYTE PTR [rax],al
  42bae2:	add    BYTE PTR [rax],al
  42bae4:	push   rsi
  42bae5:	(bad)
  42bae8:	add    BYTE PTR [rax],al
  42baea:	add    BYTE PTR [rax],al
  42baec:	(bad)
  42baf0:	add    BYTE PTR [rax],al
  42baf2:	add    BYTE PTR [rax],al
  42baf4:	je     0x42babb
  42baf6:	add    al,BYTE PTR [rax]
  42baf8:	add    BYTE PTR [rax],al
  42bafa:	add    BYTE PTR [rax],al
  42bafc:	test   ch,al
  42bafe:	add    al,BYTE PTR [rax]
  42bb00:	add    BYTE PTR [rax],al
  42bb02:	add    BYTE PTR [rax],al
  42bb04:	xchg   esi,eax
  42bb05:	(bad)
  42bb08:	add    BYTE PTR [rax],al
  42bb0a:	add    BYTE PTR [rax],al
  42bb0c:	stos   BYTE PTR es:[rdi],al
  42bb0d:	(bad)
  42bb10:	add    BYTE PTR [rax],al
  42bb12:	add    BYTE PTR [rax],al
  42bb14:	mov    ah,0xc5
  42bb16:	add    al,BYTE PTR [rax]
  42bb18:	add    BYTE PTR [rax],al
  42bb1a:	add    BYTE PTR [rax],al
  42bb1c:	ret    0x2c5
  42bb1f:	add    BYTE PTR [rax],al
  42bb21:	add    BYTE PTR [rax],al
  42bb23:	add    ah,cl
  42bb25:	(bad)
  42bb28:	add    BYTE PTR [rax],al
  42bb2a:	add    BYTE PTR [rax],al
  42bb2c:	(bad)  
  42bb2d:	(bad)
  42bb30:	add    BYTE PTR [rax],al
  42bb32:	add    BYTE PTR [rax],al
  42bb34:	loopne 0x42bafb
  42bb36:	add    al,BYTE PTR [rax]
  42bb38:	add    BYTE PTR [rax],al
  42bb3a:	add    BYTE PTR [rax],al
  42bb3c:	in     al,dx
  42bb3d:	(bad)
  42bb40:	add    BYTE PTR [rax],al
  42bb42:	add    BYTE PTR [rax],al
  42bb44:	cld    
  42bb45:	(bad)
  42bb48:	add    BYTE PTR [rax],al
  42bb4a:	add    BYTE PTR [rax],al
  42bb4c:	add    al,0xc6
  42bb4e:	add    al,BYTE PTR [rax]
  42bb50:	add    BYTE PTR [rax],al
  42bb52:	add    BYTE PTR [rax],al
  42bb54:	(bad)  
  42bb55:	mov    BYTE PTR [rdx],0x0
  42bb58:	add    BYTE PTR [rax],al
  42bb5a:	add    BYTE PTR [rax],al
  42bb5c:	sbb    dh,al
  42bb5e:	add    al,BYTE PTR [rax]
  42bb60:	add    BYTE PTR [rax],al
  42bb62:	add    BYTE PTR [rax],al
  42bb64:	and    al,dh
  42bb66:	add    al,BYTE PTR [rax]
  42bb68:	add    BYTE PTR [rax],al
  42bb6a:	add    BYTE PTR [rax],al
  42bb6c:	sub    al,dh
  42bb6e:	add    al,BYTE PTR [rax]
  42bb70:	add    BYTE PTR [rax],al
  42bb72:	add    BYTE PTR [rax],al
  42bb74:	xor    al,0xc6
  42bb76:	add    al,BYTE PTR [rax]
  42bb78:	add    BYTE PTR [rax],al
  42bb7a:	add    BYTE PTR [rax],al
  42bb7c:	cmp    al,0xc6
  42bb7e:	add    al,BYTE PTR [rax]
  42bb80:	add    BYTE PTR [rax],al
  42bb82:	add    BYTE PTR [rax],al
  42bb84:	rex.RX mov BYTE PTR [rdx],0x0
  42bb88:	add    BYTE PTR [rax],al
  42bb8a:	add    BYTE PTR [rax],al
  42bb8c:	rex.WRX mov BYTE PTR [rdx],0x0
  42bb90:	add    BYTE PTR [rax],al
  42bb92:	add    BYTE PTR [rax],al
  42bb94:	pop    rax
  42bb95:	mov    BYTE PTR [rdx],0x0
  42bb98:	add    BYTE PTR [rax],al
  42bb9a:	add    BYTE PTR [rax],al
  42bb9c:	(bad)  
  42bb9d:	mov    BYTE PTR [rdx],0x0
  42bba0:	add    BYTE PTR [rax],al
  42bba2:	add    BYTE PTR [rax],al
  42bba4:	push   0x2c6
  42bba9:	add    BYTE PTR [rax],al
  42bbab:	add    BYTE PTR [rax-0x3a],dh
  42bbae:	add    al,BYTE PTR [rax]
  42bbb0:	add    BYTE PTR [rax],al
  42bbb2:	add    BYTE PTR [rax],al
  42bbb4:	jp     0x42bb7c
  42bbb6:	add    al,BYTE PTR [rax]
  42bbb8:	add    BYTE PTR [rax],al
  42bbba:	add    BYTE PTR [rax],al
  42bbbc:	test   dh,al
  42bbbe:	add    al,BYTE PTR [rax]
  42bbc0:	add    BYTE PTR [rax],al
  42bbc2:	add    BYTE PTR [rax],al
  42bbc4:	mov    es,esi
  42bbc6:	add    al,BYTE PTR [rax]
  42bbc8:	add    BYTE PTR [rax],al
  42bbca:	add    BYTE PTR [rax],al
  42bbcc:	cwde   
  42bbcd:	mov    BYTE PTR [rdx],0x0
  42bbd0:	add    BYTE PTR [rax],al
  42bbd2:	add    BYTE PTR [rax],al
  42bbd4:	movabs ds:0xac000000000002c6,al
  42bbdd:	mov    BYTE PTR [rdx],0x0
  42bbe0:	add    BYTE PTR [rax],al
  42bbe2:	add    BYTE PTR [rax],al
  42bbe4:	mov    edx,0x2c6
  42bbe9:	add    BYTE PTR [rax],al
  42bbeb:	add    dl,al
  42bbed:	mov    BYTE PTR [rdx],0x0
  42bbf0:	add    BYTE PTR [rax],al
  42bbf2:	add    BYTE PTR [rax],al
  42bbf4:	int3   
  42bbf5:	mov    BYTE PTR [rdx],0x0
  42bbf8:	add    BYTE PTR [rax],al
  42bbfa:	add    BYTE PTR [rax],al
  42bbfc:	(bad)  
  42bbfd:	mov    BYTE PTR [rdx],0x0
  42bc00:	add    BYTE PTR [rax],al
  42bc02:	add    BYTE PTR [rax],al
  42bc04:	loopne 0x42bbcc
  42bc06:	add    al,BYTE PTR [rax]
  42bc08:	add    BYTE PTR [rax],al
  42bc0a:	add    BYTE PTR [rax],al
  42bc0c:	call   0x42bed7
  42bc11:	add    BYTE PTR [rax],al
  42bc13:	add    dl,dh
  42bc15:	mov    BYTE PTR [rdx],0x0
  42bc18:	add    BYTE PTR [rax],al
  42bc1a:	add    BYTE PTR [rax],al
  42bc1c:	cld    
  42bc1d:	mov    BYTE PTR [rdx],0x0
  42bc20:	add    BYTE PTR [rax],al
  42bc22:	add    BYTE PTR [rax],al
  42bc24:	(bad)  
  42bc25:	mov    DWORD PTR [rdx],0x0
  42bc2b:	add    BYTE PTR [rax],dl
  42bc2d:	mov    DWORD PTR [rdx],0x0
  42bc33:	add    BYTE PTR [rdi+rax*8],bl
  42bc36:	add    al,BYTE PTR [rax]
  42bc38:	add    BYTE PTR [rax],al
  42bc3a:	add    BYTE PTR [rax],al
  42bc3c:	mov    DWORD PTR es:[rdx],0x0
  42bc43:	add    BYTE PTR [rax],dh
  42bc45:	mov    DWORD PTR [rdx],0x0
  42bc4b:	add    BYTE PTR [rdx],bh
  42bc4d:	mov    DWORD PTR [rdx],0x0
  42bc53:	add    BYTE PTR [rdi+rax*8+0x2],al
  42bc57:	add    BYTE PTR [rax],al
  42bc59:	add    BYTE PTR [rax],al
  42bc5b:	add    BYTE PTR [rsi-0x39],cl
  42bc5e:	add    al,BYTE PTR [rax]
  42bc60:	add    BYTE PTR [rax],al
  42bc62:	add    BYTE PTR [rax],al
  42bc64:	pop    rax
  42bc65:	mov    DWORD PTR [rdx],0x0
  42bc6b:	add    BYTE PTR [rdx-0x39],ah
  42bc6e:	add    al,BYTE PTR [rax]
  42bc70:	add    BYTE PTR [rax],al
  42bc72:	add    BYTE PTR [rax],al
  42bc74:	outs   dx,BYTE PTR ds:[rsi]
  42bc75:	mov    DWORD PTR [rdx],0x0
	...
  42bc83:	add    BYTE PTR [rax-0x39],bh
  42bc86:	add    al,BYTE PTR [rax]
	...
  42bc94:	nop
  42bc95:	mov    DWORD PTR [rdx],0x0
  42bc9b:	add    BYTE PTR [rdi+rax*8+0x2],ch
  42bca2:	add    BYTE PTR [rax],al
  42bca4:	(bad)  
  42bca5:	mov    DWORD PTR [rdx],0x0
  42bcab:	add    ah,bl
  42bcad:	mov    DWORD PTR [rdx],0x0
  42bcb3:	add    ah,ch
  42bcb5:	mov    DWORD PTR [rdx],0x0
  42bcbb:	add    BYTE PTR [rax],al
  42bcbd:	enter  0x2,0x0
  42bcc1:	add    BYTE PTR [rax],al
  42bcc3:	add    BYTE PTR [rax+rcx*8],bl
  42bcc6:	add    al,BYTE PTR [rax]
  42bcc8:	add    BYTE PTR [rax],al
  42bcca:	add    BYTE PTR [rax],al
  42bccc:	cmp    al,cl
  42bcce:	add    al,BYTE PTR [rax]
  42bcd0:	add    BYTE PTR [rax],al
  42bcd2:	add    BYTE PTR [rax],al
  42bcd4:	push   rax
  42bcd5:	enter  0x2,0x0
  42bcd9:	add    BYTE PTR [rax],al
  42bcdb:	add    BYTE PTR [rax+rcx*8+0x2],ah
  42bcdf:	add    BYTE PTR [rax],al
  42bce1:	add    BYTE PTR [rax],al
  42bce3:	add    BYTE PTR [rax+0x2c8],al
  42bce9:	add    BYTE PTR [rax],al
  42bceb:	add    BYTE PTR [rax+0x2c8],dl
  42bcf1:	add    BYTE PTR [rax],al
  42bcf3:	add    BYTE PTR [rax+0x2c8],ch
  42bcf9:	add    BYTE PTR [rax],al
  42bcfb:	add    al,al
  42bcfd:	enter  0x2,0x0
  42bd01:	add    BYTE PTR [rax],al
  42bd03:	add    ah,bl
  42bd05:	enter  0x2,0x0
  42bd09:	add    BYTE PTR [rax],al
  42bd0b:	add    ah,dh
  42bd0d:	enter  0x2,0x0
  42bd11:	add    BYTE PTR [rax],al
  42bd13:	add    BYTE PTR [rax],dl
  42bd15:	leave  
  42bd16:	add    al,BYTE PTR [rax]
  42bd18:	add    BYTE PTR [rax],al
  42bd1a:	add    BYTE PTR [rax],al
  42bd1c:	xor    al,0xc9
  42bd1e:	add    al,BYTE PTR [rax]
  42bd20:	add    BYTE PTR [rax],al
  42bd22:	add    BYTE PTR [rax],al
  42bd24:	push   rax
  42bd25:	leave  
  42bd26:	add    al,BYTE PTR [rax]
  42bd28:	add    BYTE PTR [rax],al
  42bd2a:	add    BYTE PTR [rax],al
  42bd2c:	push   0x2c9
  42bd31:	add    BYTE PTR [rax],al
  42bd33:	add    BYTE PTR [rax+0x2c9],cl
  42bd39:	add    BYTE PTR [rax],al
  42bd3b:	add    BYTE PTR [rax+0x2c9],ah
  42bd41:	add    BYTE PTR [rax],al
  42bd43:	add    al,al
  42bd45:	leave  
  42bd46:	add    al,BYTE PTR [rax]
  42bd48:	add    BYTE PTR [rax],al
  42bd4a:	add    BYTE PTR [rax],al
  42bd4c:	(bad)  
  42bd4d:	leave  
  42bd4e:	add    al,BYTE PTR [rax]
  42bd50:	add    BYTE PTR [rax],al
  42bd52:	add    BYTE PTR [rax],al
  42bd54:	in     al,0xc9
  42bd56:	add    al,BYTE PTR [rax]
  42bd58:	add    BYTE PTR [rax],al
  42bd5a:	add    BYTE PTR [rax],al
  42bd5c:	clc    
  42bd5d:	leave  
  42bd5e:	add    al,BYTE PTR [rax]
	...
  42bd6c:	or     al,0xca
  42bd6e:	add    al,BYTE PTR [rax]
  42bd70:	add    BYTE PTR [rax],al
  42bd72:	add    BYTE PTR [rax],al
  42bd74:	sub    al,0xca
  42bd76:	add    al,BYTE PTR [rax]
  42bd78:	add    BYTE PTR [rax],al
  42bd7a:	add    BYTE PTR [rax],al
  42bd7c:	rex.WR retf 0x2
  42bd80:	add    BYTE PTR [rax],al
  42bd82:	add    BYTE PTR [rax],al
  42bd84:	ins    BYTE PTR es:[rdi],dx
  42bd85:	retf   0x2
  42bd88:	add    BYTE PTR [rax],al
  42bd8a:	add    BYTE PTR [rax],al
  42bd8c:	mov    edx,cs
  42bd8e:	add    al,BYTE PTR [rax]
  42bd90:	add    BYTE PTR [rax],al
  42bd92:	add    BYTE PTR [rax],al
  42bd94:	test   al,0xca
  42bd96:	add    al,BYTE PTR [rax]
  42bd98:	add    BYTE PTR [rax],al
  42bd9a:	add    BYTE PTR [rax],al
  42bd9c:	enter  0x2ca,0x0
  42bda0:	add    BYTE PTR [rax],al
  42bda2:	add    BYTE PTR [rax],al
  42bda4:	call   0x42c073
  42bda9:	add    BYTE PTR [rax],al
  42bdab:	add    BYTE PTR [rax],cl
  42bdad:	retf   
  42bdae:	add    al,BYTE PTR [rax]
  42bdb0:	add    BYTE PTR [rax],al
  42bdb2:	add    BYTE PTR [rax],al
  42bdb4:	and    bl,cl
  42bdb6:	add    al,BYTE PTR [rax]
	...
  42bdc4:	xor    al,0xcb
  42bdc6:	add    al,BYTE PTR [rax]
  42bdc8:	add    BYTE PTR [rax],al
  42bdca:	add    BYTE PTR [rax],al
  42bdcc:	push   rax
  42bdcd:	retf   
  42bdce:	add    al,BYTE PTR [rax]
  42bdd0:	add    BYTE PTR [rax],al
  42bdd2:	add    BYTE PTR [rax],al
  42bdd4:	push   0x2cb
  42bdd9:	add    BYTE PTR [rax],al
  42bddb:	add    BYTE PTR [rax-0x35],bh
  42bdde:	add    al,BYTE PTR [rax]
  42bde0:	add    BYTE PTR [rax],al
  42bde2:	add    BYTE PTR [rax],al
  42bde4:	nop
  42bde5:	retf   
  42bde6:	add    al,BYTE PTR [rax]
  42bde8:	add    BYTE PTR [rax],al
  42bdea:	add    BYTE PTR [rax],al
  42bdec:	test   al,0xcb
  42bdee:	add    al,BYTE PTR [rax]
  42bdf0:	add    BYTE PTR [rax],al
  42bdf2:	add    BYTE PTR [rax],al
  42bdf4:	ror    bl,0x2
	...
  42be03:	add    ah,dl
  42be05:	retf   
  42be06:	add    al,BYTE PTR [rax]
  42be08:	add    BYTE PTR [rax],al
  42be0a:	add    BYTE PTR [rax],al
  42be0c:	call   0x42c0dc
  42be11:	add    BYTE PTR [rax],al
  42be13:	add    BYTE PTR [rax],al
  42be15:	int3   
  42be16:	add    al,BYTE PTR [rax]
  42be18:	add    BYTE PTR [rax],al
  42be1a:	add    BYTE PTR [rax],al
  42be1c:	sbb    al,0xcc
  42be1e:	add    al,BYTE PTR [rax]
  42be20:	add    BYTE PTR [rax],al
  42be22:	add    BYTE PTR [rax],al
  42be24:	xor    ah,cl
  42be26:	add    al,BYTE PTR [rax]
  42be28:	add    BYTE PTR [rax],al
  42be2a:	add    BYTE PTR [rax],al
  42be2c:	push   rax
  42be2d:	int3   
  42be2e:	add    al,BYTE PTR [rax]
  42be30:	add    BYTE PTR [rax],al
  42be32:	add    BYTE PTR [rax],al
  42be34:	fs int3 
  42be36:	add    al,BYTE PTR [rax]
  42be38:	add    BYTE PTR [rax],al
  42be3a:	add    BYTE PTR [rax],al
  42be3c:	js     0x42be0a
  42be3e:	add    al,BYTE PTR [rax]
  42be40:	add    BYTE PTR [rax],al
  42be42:	add    BYTE PTR [rax],al
  42be44:	mov    ah,cl
  42be46:	add    al,BYTE PTR [rax]
  42be48:	add    BYTE PTR [rax],al
  42be4a:	add    BYTE PTR [rax],al
  42be4c:	pushf  
  42be4d:	int3   
  42be4e:	add    al,BYTE PTR [rax]
  42be50:	add    BYTE PTR [rax],al
  42be52:	add    BYTE PTR [rax],al
  42be54:	mov    eax,0x2cc
  42be59:	add    BYTE PTR [rax],al
  42be5b:	add    al,dl
  42be5d:	int3   
  42be5e:	add    al,BYTE PTR [rax]
  42be60:	add    BYTE PTR [rax],al
  42be62:	add    BYTE PTR [rax],al
  42be64:	in     al,dx
  42be65:	int3   
  42be66:	add    al,BYTE PTR [rax]
  42be68:	add    BYTE PTR [rax],al
  42be6a:	add    BYTE PTR [rax],al
  42be6c:	or     ch,cl
  42be6e:	add    al,BYTE PTR [rax]
  42be70:	add    BYTE PTR [rax],al
  42be72:	add    BYTE PTR [rax],al
  42be74:	and    ch,cl
  42be76:	add    al,BYTE PTR [rax]
  42be78:	add    BYTE PTR [rax],al
  42be7a:	add    BYTE PTR [rax],al
  42be7c:	rex.R int 0x2
  42be7f:	add    BYTE PTR [rax],al
  42be81:	add    BYTE PTR [rax],al
  42be83:	add    BYTE PTR [rax-0x33],ah
  42be86:	add    al,BYTE PTR [rax]
  42be88:	add    BYTE PTR [rax],al
  42be8a:	add    BYTE PTR [rax],al
  42be8c:	js     0x42be5b
  42be8e:	add    al,BYTE PTR [rax]
  42be90:	add    BYTE PTR [rax],al
  42be92:	add    BYTE PTR [rax],al
  42be94:	nop
  42be95:	int    0x2
  42be97:	add    BYTE PTR [rax],al
  42be99:	add    BYTE PTR [rax],al
  42be9b:	add    BYTE PTR [rax+0x2cd],ch
  42bea1:	add    BYTE PTR [rax],al
  42bea3:	add    BYTE PTR [rbp+rcx*8+0x2],bh
  42beaa:	add    BYTE PTR [rax],al
  42beac:	(bad)  
  42bead:	int    0x2
	...
  42bebb:	add    al,ah
  42bebd:	int    0x2
  42bebf:	add    BYTE PTR [rax],al
  42bec1:	add    BYTE PTR [rax],al
  42bec3:	add    ah,bh
  42bec5:	int    0x2
  42bec7:	add    BYTE PTR [rax],al
  42bec9:	add    BYTE PTR [rax],al
  42becb:	add    BYTE PTR [rsi+rcx*8],dl
  42bece:	add    al,BYTE PTR [rax]
	...
  42bedc:	sub    al,0xce
  42bede:	add    al,BYTE PTR [rax]
  42bee0:	add    BYTE PTR [rax],al
  42bee2:	add    BYTE PTR [rax],al
  42bee4:	cmp    al,0xce
  42bee6:	add    al,BYTE PTR [rax]
  42bee8:	add    BYTE PTR [rax],al
  42beea:	add    BYTE PTR [rax],al
  42beec:	push   rsp
  42beed:	(bad)  
  42beee:	add    al,BYTE PTR [rax]
  42bef0:	add    BYTE PTR [rax],al
  42bef2:	add    BYTE PTR [rax],al
  42bef4:	jo     0x42bec4
  42bef6:	add    al,BYTE PTR [rax]
  42bef8:	add    BYTE PTR [rax],al
  42befa:	add    BYTE PTR [rax],al
  42befc:	test   dh,cl
  42befe:	add    al,BYTE PTR [rax]
  42bf00:	add    BYTE PTR [rax],al
  42bf02:	add    BYTE PTR [rax],al
  42bf04:	cwde   
  42bf05:	(bad)  
  42bf06:	add    al,BYTE PTR [rax]
  42bf08:	add    BYTE PTR [rax],al
  42bf0a:	add    BYTE PTR [rax],al
  42bf0c:	mov    al,0xce
  42bf0e:	add    al,BYTE PTR [rax]
  42bf10:	add    BYTE PTR [rax],al
  42bf12:	add    BYTE PTR [rax],al
  42bf14:	(bad)  
  42bf15:	(bad)  
  42bf16:	add    al,BYTE PTR [rax]
  42bf18:	add    BYTE PTR [rax],al
  42bf1a:	add    BYTE PTR [rax],al
  42bf1c:	(bad)  
  42bf1d:	(bad)  
  42bf1e:	add    al,BYTE PTR [rax]
  42bf20:	add    BYTE PTR [rax],al
  42bf22:	add    BYTE PTR [rax],al
  42bf24:	loopne 0x42bef4
  42bf26:	add    al,BYTE PTR [rax]
  42bf28:	add    BYTE PTR [rax],al
  42bf2a:	add    BYTE PTR [rax],al
  42bf2c:	cld    
  42bf2d:	(bad)  
  42bf2e:	add    al,BYTE PTR [rax]
  42bf30:	add    BYTE PTR [rax],al
  42bf32:	add    BYTE PTR [rax],al
  42bf34:	sbb    bh,cl
  42bf36:	add    al,BYTE PTR [rax]
  42bf38:	add    BYTE PTR [rax],al
  42bf3a:	add    BYTE PTR [rax],al
  42bf3c:	xor    bh,cl
  42bf3e:	add    al,BYTE PTR [rax]
  42bf40:	add    BYTE PTR [rax],al
  42bf42:	add    BYTE PTR [rax],al
  42bf44:	rex.WR iretq 
  42bf46:	add    al,BYTE PTR [rax]
  42bf48:	add    BYTE PTR [rax],al
  42bf4a:	add    BYTE PTR [rax],al
  42bf4c:	pop    rsp
  42bf4d:	iret   
  42bf4e:	add    al,BYTE PTR [rax]
  42bf50:	add    BYTE PTR [rax],al
  42bf52:	add    BYTE PTR [rax],al
  42bf54:	ins    BYTE PTR es:[rdi],dx
  42bf55:	iret   
  42bf56:	add    al,BYTE PTR [rax]
  42bf58:	add    BYTE PTR [rax],al
  42bf5a:	add    BYTE PTR [rax],al
  42bf5c:	jl     0x42bf2d
  42bf5e:	add    al,BYTE PTR [rax]
  42bf60:	add    BYTE PTR [rax],al
  42bf62:	add    BYTE PTR [rax],al
  42bf64:	xchg   esp,eax
  42bf65:	iret   
  42bf66:	add    al,BYTE PTR [rax]
  42bf68:	add    BYTE PTR [rax],al
  42bf6a:	add    BYTE PTR [rax],al
  42bf6c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  42bf6d:	iret   
  42bf6e:	add    al,BYTE PTR [rax]
  42bf70:	add    BYTE PTR [rax],al
  42bf72:	add    BYTE PTR [rax],al
  42bf74:	ror    bh,0x2
  42bf77:	add    BYTE PTR [rax],al
  42bf79:	add    BYTE PTR [rax],al
  42bf7b:	add    al,bl
  42bf7d:	iret   
  42bf7e:	add    al,BYTE PTR [rax]
  42bf80:	add    BYTE PTR [rax],al
  42bf82:	add    BYTE PTR [rax],al
  42bf84:	in     al,dx
  42bf85:	iret   
  42bf86:	add    al,BYTE PTR [rax]
  42bf88:	add    BYTE PTR [rax],al
  42bf8a:	add    BYTE PTR [rax],al
  42bf8c:	cld    
  42bf8d:	iret   
  42bf8e:	add    al,BYTE PTR [rax]
  42bf90:	add    BYTE PTR [rax],al
  42bf92:	add    BYTE PTR [rax],al
  42bf94:	and    al,0xd0
  42bf96:	add    al,BYTE PTR [rax]
  42bf98:	add    BYTE PTR [rax],al
  42bf9a:	add    BYTE PTR [rax],al
  42bf9c:	rex.R rol BYTE PTR [rdx],1
  42bf9f:	add    BYTE PTR [rax],al
  42bfa1:	add    BYTE PTR [rax],al
  42bfa3:	add    BYTE PTR [rax+rdx*8+0x2],bl
  42bfa7:	add    BYTE PTR [rax],al
  42bfa9:	add    BYTE PTR [rax],al
  42bfab:	add    BYTE PTR [rax+rdx*8+0x2],dh
  42bfaf:	add    BYTE PTR [rax],al
  42bfb1:	add    BYTE PTR [rax],al
  42bfb3:	add    BYTE PTR [rax+0x2d0],dl
  42bfb9:	add    BYTE PTR [rax],al
  42bfbb:	add    BYTE PTR [rax+0x2d0],ch
  42bfc1:	add    BYTE PTR [rax],al
  42bfc3:	add    al,al
  42bfc5:	rol    BYTE PTR [rdx],1
  42bfc7:	add    BYTE PTR [rax],al
  42bfc9:	add    BYTE PTR [rax],al
  42bfcb:	add    ah,bl
  42bfcd:	rol    BYTE PTR [rdx],1
  42bfcf:	add    BYTE PTR [rax],al
  42bfd1:	add    BYTE PTR [rax],al
  42bfd3:	add    al,ch
  42bfd5:	rol    BYTE PTR [rdx],1
  42bfd7:	add    BYTE PTR [rax],al
  42bfd9:	add    BYTE PTR [rax],al
  42bfdb:	add    ah,dh
  42bfdd:	rol    BYTE PTR [rdx],1
  42bfdf:	add    BYTE PTR [rax],al
  42bfe1:	add    BYTE PTR [rax],al
  42bfe3:	add    BYTE PTR [rcx+rdx*8],cl
  42bfe6:	add    al,BYTE PTR [rax]
  42bfe8:	add    BYTE PTR [rax],al
  42bfea:	add    BYTE PTR [rax],al
  42bfec:	sub    al,0xd1
  42bfee:	add    al,BYTE PTR [rax]
  42bff0:	add    BYTE PTR [rax],al
  42bff2:	add    BYTE PTR [rax],al
  42bff4:	rex.WR rol QWORD PTR [rdx],1
  42bff7:	add    BYTE PTR [rax],al
  42bff9:	add    BYTE PTR [rax],al
  42bffb:	add    BYTE PTR [rcx+rdx*8+0x2],ah
  42bfff:	add    BYTE PTR [rax],al
  42c001:	add    BYTE PTR [rax],al
  42c003:	add    BYTE PTR [rax+0x2d1],al
  42c009:	add    BYTE PTR [rax],al
  42c00b:	add    BYTE PTR [rcx+rdx*8+0x2],dl
  42c012:	add    BYTE PTR [rax],al
  42c014:	mov    al,0xd1
  42c016:	add    al,BYTE PTR [rax]
  42c018:	add    BYTE PTR [rax],al
  42c01a:	add    BYTE PTR [rax],al
  42c01c:	int3   
  42c01d:	rol    DWORD PTR [rdx],1
  42c01f:	add    BYTE PTR [rax],al
  42c021:	add    BYTE PTR [rax],al
  42c023:	add    al,ch
  42c025:	rol    DWORD PTR [rdx],1
  42c027:	add    BYTE PTR [rax],al
  42c029:	add    BYTE PTR [rax],al
  42c02b:	add    BYTE PTR [rax],al
  42c02d:	rol    BYTE PTR [rdx],cl
  42c02f:	add    BYTE PTR [rax],al
  42c031:	add    BYTE PTR [rax],al
  42c033:	add    BYTE PTR [rdx+rdx*8],bl
  42c036:	add    al,BYTE PTR [rax]
  42c038:	add    BYTE PTR [rax],al
  42c03a:	add    BYTE PTR [rax],al
  42c03c:	cmp    dl,dl
  42c03e:	add    al,BYTE PTR [rax]
  42c040:	add    BYTE PTR [rax],al
  42c042:	add    BYTE PTR [rax],al
  42c044:	pop    rsp
  42c045:	rol    BYTE PTR [rdx],cl
  42c047:	add    BYTE PTR [rax],al
  42c049:	add    BYTE PTR [rax],al
  42c04b:	add    BYTE PTR [rdx+rdx*8+0x2],ch
  42c04f:	add    BYTE PTR [rax],al
  42c051:	add    BYTE PTR [rax],al
  42c053:	add    BYTE PTR [rdx+rdx*8+0x2],bh
  42c057:	add    BYTE PTR [rax],al
  42c059:	add    BYTE PTR [rax],al
  42c05b:	add    BYTE PTR [rax+0x2d2],dl
  42c061:	add    BYTE PTR [rax],al
  42c063:	add    BYTE PTR [rax+0x2d2],ah
  42c069:	add    BYTE PTR [rax],al
  42c06b:	add    BYTE PTR [rdx+rdx*8+0x2],dh
  42c072:	add    BYTE PTR [rax],al
  42c074:	(bad)  
  42c075:	rol    BYTE PTR [rdx],cl
  42c077:	add    BYTE PTR [rax],al
  42c079:	add    BYTE PTR [rax],al
  42c07b:	add    ah,dl
  42c07d:	rol    BYTE PTR [rdx],cl
  42c07f:	add    BYTE PTR [rax],al
  42c081:	add    BYTE PTR [rax],al
  42c083:	add    al,ch
  42c085:	rol    BYTE PTR [rdx],cl
  42c087:	add    BYTE PTR [rax],al
  42c089:	add    BYTE PTR [rax],al
  42c08b:	add    ah,dh
  42c08d:	rol    BYTE PTR [rdx],cl
  42c08f:	add    BYTE PTR [rax],al
  42c091:	add    BYTE PTR [rax],al
  42c093:	add    BYTE PTR [rax],dl
  42c095:	rol    DWORD PTR [rdx],cl
  42c097:	add    BYTE PTR [rax],al
  42c099:	add    BYTE PTR [rax],al
  42c09b:	add    BYTE PTR [rax],ch
  42c09d:	rol    DWORD PTR [rdx],cl
  42c09f:	add    BYTE PTR [rax],al
  42c0a1:	add    BYTE PTR [rax],al
  42c0a3:	add    BYTE PTR [rbx+rdx*8],bh
  42c0a6:	add    al,BYTE PTR [rax]
  42c0a8:	add    BYTE PTR [rax],al
  42c0aa:	add    BYTE PTR [rax],al
  42c0ac:	push   rax
  42c0ad:	rol    DWORD PTR [rdx],cl
  42c0af:	add    BYTE PTR [rax],al
  42c0b1:	add    BYTE PTR [rax],al
  42c0b3:	add    BYTE PTR [rax-0x2d],ch
  42c0b6:	add    al,BYTE PTR [rax]
  42c0b8:	add    BYTE PTR [rax],al
  42c0ba:	add    BYTE PTR [rax],al
  42c0bc:	jl     0x42c091
  42c0be:	add    al,BYTE PTR [rax]
  42c0c0:	add    BYTE PTR [rax],al
  42c0c2:	add    BYTE PTR [rax],al
  42c0c4:	nop
  42c0c5:	rol    DWORD PTR [rdx],cl
  42c0c7:	add    BYTE PTR [rax],al
  42c0c9:	add    BYTE PTR [rax],al
  42c0cb:	add    BYTE PTR [rbx+rdx*8+0x2],bl
  42c0d2:	add    BYTE PTR [rax],al
  42c0d4:	lods   al,BYTE PTR ds:[rsi]
  42c0d5:	rol    DWORD PTR [rdx],cl
  42c0d7:	add    BYTE PTR [rax],al
  42c0d9:	add    BYTE PTR [rax],al
  42c0db:	add    BYTE PTR [rbx+rdx*8+0x2],bh
  42c0e2:	add    BYTE PTR [rax],al
  42c0e4:	int3   
  42c0e5:	rol    DWORD PTR [rdx],cl
  42c0e7:	add    BYTE PTR [rax],al
  42c0e9:	add    BYTE PTR [rax],al
  42c0eb:	add    al,ch
  42c0ed:	rol    DWORD PTR [rdx],cl
  42c0ef:	add    BYTE PTR [rax],al
  42c0f1:	add    BYTE PTR [rax],al
  42c0f3:	add    al,bh
  42c0f5:	rol    DWORD PTR [rdx],cl
  42c0f7:	add    BYTE PTR [rax],al
  42c0f9:	add    BYTE PTR [rax],al
  42c0fb:	add    BYTE PTR [rax],cl
  42c0fd:	(bad)  
  42c0fe:	add    al,BYTE PTR [rax]
  42c100:	add    BYTE PTR [rax],al
  42c102:	add    BYTE PTR [rax],al
  42c104:	sbb    ah,dl
  42c106:	add    al,BYTE PTR [rax]
  42c108:	add    BYTE PTR [rax],al
  42c10a:	add    BYTE PTR [rax],al
  42c10c:	xor    ah,dl
  42c10e:	add    al,BYTE PTR [rax]
  42c110:	add    BYTE PTR [rax],al
  42c112:	add    BYTE PTR [rax],al
  42c114:	rex (bad) 
  42c116:	add    al,BYTE PTR [rax]
  42c118:	add    BYTE PTR [rax],al
  42c11a:	add    BYTE PTR [rax],al
  42c11c:	push   rax
  42c11d:	(bad)  
  42c11e:	add    al,BYTE PTR [rax]
  42c120:	add    BYTE PTR [rax],al
  42c122:	add    BYTE PTR [rax],al
  42c124:	push   0x2d4
  42c129:	add    BYTE PTR [rax],al
  42c12b:	add    BYTE PTR [rax-0x2c],bh
  42c12e:	add    al,BYTE PTR [rax]
  42c130:	add    BYTE PTR [rax],al
  42c132:	add    BYTE PTR [rax],al
  42c134:	mov    esp,ss
  42c136:	add    al,BYTE PTR [rax]
  42c138:	add    BYTE PTR [rax],al
  42c13a:	add    BYTE PTR [rax],al
  42c13c:	pushf  
  42c13d:	(bad)  
  42c13e:	add    al,BYTE PTR [rax]
  42c140:	add    BYTE PTR [rax],al
  42c142:	add    BYTE PTR [rax],al
  42c144:	mov    eax,0x2d4
  42c149:	add    BYTE PTR [rax],al
  42c14b:	add    al,dl
  42c14d:	(bad)  
  42c14e:	add    al,BYTE PTR [rax]
  42c150:	add    BYTE PTR [rax],al
  42c152:	add    BYTE PTR [rax],al
  42c154:	in     al,0xd4
  42c156:	add    al,BYTE PTR [rax]
  42c158:	add    BYTE PTR [rax],al
  42c15a:	add    BYTE PTR [rax],al
  42c15c:	clc    
  42c15d:	(bad)  
  42c15e:	add    al,BYTE PTR [rax]
  42c160:	add    BYTE PTR [rax],al
  42c162:	add    BYTE PTR [rax],al
  42c164:	add    al,0xd5
  42c166:	add    al,BYTE PTR [rax]
  42c168:	add    BYTE PTR [rax],al
  42c16a:	add    BYTE PTR [rax],al
  42c16c:	adc    al,0xd5
  42c16e:	add    al,BYTE PTR [rax]
  42c170:	add    BYTE PTR [rax],al
  42c172:	add    BYTE PTR [rax],al
  42c174:	and    ch,dl
  42c176:	add    al,BYTE PTR [rax]
  42c178:	add    BYTE PTR [rax],al
  42c17a:	add    BYTE PTR [rax],al
  42c17c:	xor    ch,dl
  42c17e:	add    al,BYTE PTR [rax]
  42c180:	add    BYTE PTR [rax],al
  42c182:	add    BYTE PTR [rax],al
  42c184:	rex (bad) 
  42c186:	add    al,BYTE PTR [rax]
  42c188:	add    BYTE PTR [rax],al
  42c18a:	add    BYTE PTR [rax],al
  42c18c:	push   rax
  42c18d:	(bad)  
  42c18e:	add    al,BYTE PTR [rax]
  42c190:	add    BYTE PTR [rax],al
  42c192:	add    BYTE PTR [rax],al
  42c194:	(bad)  
  42c195:	(bad)  
  42c196:	add    al,BYTE PTR [rax]
  42c198:	add    BYTE PTR [rax],al
  42c19a:	add    BYTE PTR [rax],al
  42c19c:	ins    BYTE PTR es:[rdi],dx
  42c19d:	(bad)  
  42c19e:	add    al,BYTE PTR [rax]
  42c1a0:	add    BYTE PTR [rax],al
  42c1a2:	add    BYTE PTR [rax],al
  42c1a4:	js     0x42c17b
  42c1a6:	add    al,BYTE PTR [rax]
  42c1a8:	add    BYTE PTR [rax],al
  42c1aa:	add    BYTE PTR [rax],al
  42c1ac:	pushf  
  42c1ad:	(bad)  
  42c1ae:	add    al,BYTE PTR [rax]
  42c1b0:	add    BYTE PTR [rax],al
  42c1b2:	add    BYTE PTR [rax],al
  42c1b4:	mov    al,0xd5
  42c1b6:	add    al,BYTE PTR [rax]
  42c1b8:	add    BYTE PTR [rax],al
  42c1ba:	add    BYTE PTR [rax],al
  42c1bc:	enter  0x2d5,0x0
	...
  42c1cc:	(bad)  
  42c1ce:	add    al,BYTE PTR [rax]
  42c1d0:	add    BYTE PTR [rax],al
  42c1d2:	add    BYTE PTR [rax],al
  42c1d4:	clc    
  42c1d5:	(bad)  
  42c1d6:	add    al,BYTE PTR [rax]
	...
  42c1e4:	or     al,0xd6
  42c1e6:	add    al,BYTE PTR [rax]
  42c1e8:	add    BYTE PTR [rax],al
  42c1ea:	add    BYTE PTR [rax],al
  42c1ec:	sbb    dh,dl
  42c1ee:	add    al,BYTE PTR [rax]
  42c1f0:	add    BYTE PTR [rax],al
  42c1f2:	add    BYTE PTR [rax],al
  42c1f4:	and    al,0xd6
  42c1f6:	add    al,BYTE PTR [rax]
  42c1f8:	add    BYTE PTR [rax],al
  42c1fa:	add    BYTE PTR [rax],al
  42c1fc:	xor    al,0xd6
  42c1fe:	add    al,BYTE PTR [rax]
  42c200:	add    BYTE PTR [rax],al
  42c202:	add    BYTE PTR [rax],al
  42c204:	push   rax
  42c205:	(bad)  
  42c206:	add    al,BYTE PTR [rax]
	...
  42c214:	push   0x2d6
  42c219:	add    BYTE PTR [rax],al
  42c21b:	add    BYTE PTR [rsi+rdx*8+0x2],bh
  42c21f:	add    BYTE PTR [rax],al
  42c221:	add    BYTE PTR [rax],al
  42c223:	add    BYTE PTR [rax+0x2d6],dl
  42c229:	add    BYTE PTR [rax],al
  42c22b:	add    BYTE PTR [rax+0x2d6],ah
  42c231:	add    BYTE PTR [rax],al
  42c233:	add    BYTE PTR [rax+0x2d6],bh
  42c239:	add    BYTE PTR [rax],al
  42c23b:	add    al,dl
  42c23d:	(bad)  
  42c23e:	add    al,BYTE PTR [rax]
  42c240:	add    BYTE PTR [rax],al
  42c242:	add    BYTE PTR [rax],al
  42c244:	call   0x42c51f
	...
  42c251:	add    BYTE PTR [rax],al
  42c253:	add    al,bl
  42c255:	add    BYTE PTR [rbp+riz*2+0x6c],al
  42c259:	gs je  0x42c2c1
  42c25c:	rex.XB jb 0x42c2c8
  42c25f:	je     0x42c2ca
  42c261:	movsxd esp,DWORD PTR [rcx+0x6c]
  42c264:	push   rbx
  42c265:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42c26a:	outs   dx,BYTE PTR ds:[rsi]
  42c26b:	add    al,bh
  42c26d:	add    BYTE PTR [rbp+0x6e],al
  42c270:	je     0x42c2d7
  42c272:	jb     0x42c2b7
  42c274:	jb     0x42c2df
  42c276:	je     0x42c2e1
  42c278:	movsxd esp,DWORD PTR [rcx+0x6c]
  42c27b:	push   rbx
  42c27c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42c281:	outs   dx,BYTE PTR ds:[rsi]
  42c282:	add    BYTE PTR [rax],al
  42c284:	xchg   esp,eax
  42c285:	add    DWORD PTR [rdi+0x65],eax
  42c288:	je     0x42c2cd
  42c28a:	outs   dx,DWORD PTR ds:[rsi]
  42c28b:	ins    DWORD PTR es:[rdi],dx
  42c28c:	ins    DWORD PTR es:[rdi],dx
  42c28d:	(bad)  
  42c28e:	outs   dx,BYTE PTR ds:[rsi]
  42c28f:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1cd0057
  42c298:	rex.RXB
  42c299:	gs je  0x42c2df
  42c29c:	jne    0x42c310
  42c29e:	jb     0x42c305
  42c2a0:	outs   dx,BYTE PTR ds:[rsi]
  42c2a1:	je     0x42c2f3
  42c2a3:	jb     0x42c314
  42c2a5:	movsxd esp,DWORD PTR [rbp+0x73]
  42c2a8:	jae    0x42c2aa
  42c2aa:	(bad)  
  42c2ab:	add    DWORD PTR [rdi+0x65],eax
  42c2ae:	je     0x42c2f3
  42c2b0:	jne    0x42c324
  42c2b2:	jb     0x42c319
  42c2b4:	outs   dx,BYTE PTR ds:[rsi]
  42c2b5:	je     0x42c307
  42c2b7:	jb     0x42c328
  42c2b9:	movsxd esp,DWORD PTR [rbp+0x73]
  42c2bc:	jae    0x42c307
  42c2be:	fs add dl,dl
  42c2c1:	add    DWORD PTR [rdi+0x65],eax
  42c2c4:	je     0x42c309
  42c2c6:	jne    0x42c33a
  42c2c8:	jb     0x42c32f
  42c2ca:	outs   dx,BYTE PTR ds:[rsi]
  42c2cb:	je     0x42c321
  42c2cd:	push   0x64616572
  42c2d2:	rex.WB
  42c2d3:	add    BYTE PTR fs:[rax],al
  42c2d6:	adc    BYTE PTR [rdx],al
  42c2d8:	rex.RXB
  42c2d9:	gs je  0x42c328
  42c2dc:	(bad)  
  42c2dd:	jae    0x42c353
  42c2df:	rex.RB jb 0x42c354
  42c2e2:	outs   dx,DWORD PTR ds:[rsi]
  42c2e3:	jb     0x42c2e5
  42c2e5:	add    BYTE PTR [rdx],ah
  42c2e7:	add    al,BYTE PTR [rdi+0x65]
  42c2ea:	je     0x42c339
  42c2ec:	outs   dx,DWORD PTR ds:[rsi]
  42c2ed:	fs jne 0x42c35c
  42c2f0:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
  42c2fa:	add    BYTE PTR [rax],al
  42c2fc:	and    al,0x2
  42c2fe:	rex.RXB
  42c2ff:	gs je  0x42c34f
  42c302:	outs   dx,DWORD PTR ds:[rsi]
  42c303:	fs jne 0x42c372
  42c306:	gs rex.W (bad) 
  42c309:	outs   dx,BYTE PTR ds:[rsi]
  42c30a:	fs ins BYTE PTR es:[rdi],dx
  42c30c:	add    BYTE PTR gs:[r8],al
  42c310:	(bad)  
  42c311:	add    al,BYTE PTR [rdi+0x65]
  42c314:	je     0x42c363
  42c316:	outs   dx,DWORD PTR ds:[rsi]
  42c317:	fs jne 0x42c386
  42c31a:	gs rex.W (bad) 
  42c31d:	outs   dx,BYTE PTR ds:[rsi]
  42c31e:	fs ins BYTE PTR es:[rdi],dx
  42c320:	gs push rdi
  42c322:	add    BYTE PTR [rax],al
  42c324:	push   rsi
  42c325:	add    al,BYTE PTR [rdi+0x65]
  42c328:	je     0x42c37a
  42c32a:	jb     0x42c39b
  42c32c:	movsxd eax,DWORD PTR [rcx+0x64]
  42c32f:	fs jb  0x42c397
  42c332:	jae    0x42c3a7
  42c334:	add    BYTE PTR [rax],al
  42c336:	jae    0x42c33a
  42c338:	rex.RXB
  42c339:	gs je  0x42c38f
  42c33c:	je     0x42c39f
  42c33e:	jb     0x42c3b4
  42c340:	jne    0x42c3b2
  42c342:	rex.WB outs dx,BYTE PTR ds:[rsi]
  42c344:	outs   dx,WORD PTR ds:[rsi]
  42c346:	add    BYTE PTR [r10+0x74654702],cl
  42c34d:	push   rbx
  42c34e:	jns    0x42c3c3
  42c350:	je     0x42c3b7
  42c352:	ins    DWORD PTR es:[rdi],dx
  42c353:	push   rsp
  42c354:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  42c35b:	ins    BYTE PTR es:[rdi],dx
  42c35c:	gs push rsp
  42c35e:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  42c365:	gs je  0x42c3bc
  42c368:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  42c36f:	je     0x42c371
  42c371:	add    cl,bh
  42c373:	add    cl,BYTE PTR [rcx+0x6e]
  42c376:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  42c37e:	rex.XB jb 0x42c3ea
  42c381:	je     0x42c3ec
  42c383:	movsxd esp,DWORD PTR [rcx+0x6c]
  42c386:	push   rbx
  42c387:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42c38c:	outs   dx,BYTE PTR ds:[rsi]
  42c38d:	add    BYTE PTR [rax],dl
  42c38f:	add    ecx,DWORD PTR [rcx+0x73]
  42c392:	rex.R
  42c393:	rex.X
  42c394:	rex.XB push r11
  42c396:	rex.WR
  42c397:	gs (bad) 
  42c399:	fs rex.X jns 0x42c411
  42c39d:	gs rex.RB js 0x42c3a1
  42c3a1:	add    BYTE PTR [rbx+0x3],cl
  42c3a4:	rex.WR
  42c3a5:	gs (bad) 
  42c3a7:	jbe    0x42c40e
  42c3a9:	rex.XB jb 0x42c415
  42c3ac:	je     0x42c417
  42c3ae:	movsxd esp,DWORD PTR [rcx+0x6c]
  42c3b1:	push   rbx
  42c3b2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  42c3b7:	outs   dx,BYTE PTR ds:[rsi]
  42c3b8:	add    BYTE PTR [rax],al
  42c3ba:	pop    rbx
  42c3bb:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
  42c3bf:	(bad)  
  42c3c0:	ins    BYTE PTR es:[rdi],dx
  42c3c1:	rex.RX jb 0x42c429
  42c3c4:	add    BYTE PTR gs:[rdx+0x3],bh
  42c3c8:	rex.WRB jne 0x42c437
  42c3cb:	je     0x42c436
  42c3cd:	rex.X jns 0x42c444
  42c3d0:	gs push rsp
  42c3d2:	outs   dx,DWORD PTR ds:[rsi]
  42c3d3:	push   rdi
  42c3d4:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  42c3dc:	mov    ebx,0x65755103
  42c3e1:	jb     0x42c45c
  42c3e3:	push   rax
  42c3e4:	gs jb  0x42c44d
  42c3e7:	outs   dx,DWORD PTR ds:[rsi]
  42c3e8:	jb     0x42c457
  42c3ea:	(bad)  
  42c3eb:	outs   dx,BYTE PTR ds:[rsi]
  42c3ec:	movsxd esp,DWORD PTR [rbp+0x43]
  42c3ef:	outs   dx,DWORD PTR ds:[rsi]
  42c3f0:	jne    0x42c460
  42c3f2:	je     0x42c459
  42c3f4:	jb     0x42c3f6
  42c3f6:	add    DWORD PTR [rdx+rdx*2],eax
  42c3f9:	je     0x42c467
  42c3fb:	rex.B
  42c3fc:	fs fs rex.RX jne 0x42c46f
  42c401:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42c405:	outs   dx,BYTE PTR ds:[rsi]
  42c406:	push   rsp
  42c407:	(bad)  
  42c408:	(bad)  
  42c409:	ins    BYTE PTR es:[rdi],dx
  42c40a:	add    BYTE PTR gs:[rdx],al
  42c40d:	add    al,0x52
  42c40f:	je     0x42c47d
  42c411:	rex.XB (bad) 
  42c413:	jo     0x42c489
  42c415:	jne    0x42c489
  42c417:	rex.XB outs dx,DWORD PTR gs:[rsi]
  42c41a:	outs   dx,BYTE PTR ds:[rsi]
  42c41b:	je     0x42c482
  42c41d:	js     0x42c493
  42c41f:	add    BYTE PTR [rcx],cl
  42c421:	add    al,0x52
  42c423:	je     0x42c491
  42c425:	rex.WR outs dx,DWORD PTR ds:[rsi]
  42c427:	outs   dx,DWORD PTR ds:[rsi]
  42c428:	imul   esi,DWORD PTR [rbp+0x70],0x46
  42c42c:	jne    0x42c49c
  42c42e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  42c432:	outs   dx,BYTE PTR ds:[rsi]
  42c433:	rex.RB outs dx,BYTE PTR ds:[rsi]
  42c435:	je     0x42c4a9
  42c437:	jns    0x42c439
  42c439:	add    BYTE PTR [rax],dl
  42c43b:	add    al,0x52
  42c43d:	je     0x42c4ab
  42c43f:	push   rsi
  42c440:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  42c447:	outs   dx,BYTE PTR ds:[rsi]
  42c448:	ja     0x42c4b3
  42c44a:	outs   dx,BYTE PTR ds:[rsi]
  42c44b:	add    BYTE PTR fs:[rax],al
  42c44e:	rex.WX add al,0x53
  42c451:	gs je  0x42c498
  42c454:	ins    BYTE PTR es:[rdi],dx
  42c455:	ins    BYTE PTR es:[rdi],dx
  42c456:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
  42c45e:	jns    0x42c4a1
  42c460:	add    BYTE PTR [rax],al
  42c462:	lahf   
  42c463:	add    al,0x53
  42c465:	gs je  0x42c4bd
  42c468:	outs   dx,BYTE PTR ds:[rsi]
  42c469:	push   0x6c646e61
  42c46e:	gs fs rex.RB js 0x42c4d6
  42c473:	gs jo  0x42c4ea
  42c476:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  42c47d:	gs jb  0x42c480
  42c480:	lods   al,BYTE PTR ds:[rsi]
  42c481:	add    al,0x53
  42c483:	ins    BYTE PTR es:[rdi],dx
  42c484:	gs gs jo 0x42c488
  42c488:	mov    edx,0x72655404
  42c48d:	ins    DWORD PTR es:[rdi],dx
  42c48e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  42c495:	outs   dx,DWORD PTR ds:[rsi]
  42c496:	movsxd esp,DWORD PTR [rbp+0x73]
  42c499:	jae    0x42c49b
  42c49b:	add    cl,al
  42c49d:	add    al,0x54
  42c49f:	ins    BYTE PTR es:[rdi],dx
  42c4a0:	jae    0x42c4e9
  42c4a2:	gs je  0x42c4fb
  42c4a5:	(bad)  
  42c4a6:	ins    BYTE PTR es:[rdi],dx
  42c4a7:	jne    0x42c50e
  42c4a9:	add    dh,cl
  42c4ab:	add    al,0x55
  42c4ad:	outs   dx,BYTE PTR ds:[rsi]
  42c4ae:	push   0x6c646e61
  42c4b3:	gs fs rex.RB js 0x42c51b
  42c4b8:	gs jo  0x42c52f
  42c4bb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  42c4c2:	gs jb  0x42c4c5
  42c4c5:	add    ah,ch
  42c4c7:	add    al,0x56
  42c4c9:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  42c4d0:	jb     0x42c541
  42c4d2:	je     0x42c539
  42c4d4:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  42c4d8:	out    dx,al
  42c4d9:	add    al,0x56
  42c4db:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  42c4e2:	jne    0x42c549
  42c4e4:	jb     0x42c55f
  42c4e6:	add    BYTE PTR [rax],al
  42c4e8:	(bad)  
  42c4e9:	add    eax,0x65646957
  42c4ee:	rex.XB push 0x6f547261
  42c4f4:	rex.WRB jne 0x42c563
  42c4f7:	je     0x42c562
  42c4f9:	rex.X jns 0x42c570
  42c4fc:	add    BYTE PTR gs:[rdi],dh
  42c4ff:	add    BYTE PTR [rdi+0x5f],bl
  42c502:	rex.XB pop r15
  42c504:	jae    0x42c576
  42c506:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42c50a:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  42c511:	ins    BYTE PTR es:[rdi],dx
  42c512:	gs jb  0x42c515
  42c515:	add    BYTE PTR [rdi],bh
  42c517:	add    BYTE PTR [rdi+0x5f],bl
  42c51a:	pop    rdi
  42c51b:	ins    BYTE PTR es:[rdi],dx
  42c51c:	movsxd ebx,DWORD PTR [rdi+0x63]
  42c51f:	outs   dx,DWORD PTR ds:[rsi]
  42c520:	fs gs jo 0x42c585
  42c524:	addr32 gs pop rdi
  42c527:	data16 jne 0x42c598
  42c52a:	movsxd eax,DWORD PTR [rax]
  42c52c:	rex.WRX add BYTE PTR [rdi+0x5f],r11b
  42c530:	fs ins BYTE PTR es:[rdi],dx
  42c532:	ins    BYTE PTR es:[rdi],dx
  42c533:	outs   dx,DWORD PTR ds:[rsi]
  42c534:	outs   dx,BYTE PTR ds:[rsi]
  42c535:	gs js  0x42c5a1
  42c538:	je     0x42c53a
  42c53a:	push   rcx
  42c53b:	add    BYTE PTR [rdi+0x5f],bl
  42c53e:	addr32 gs je 0x42c5af
  42c542:	(bad)  
  42c543:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  42c54a:	push   rdx
  42c54b:	add    BYTE PTR [rdi+0x5f],bl
  42c54e:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  42c555:	add    BYTE PTR [rbx+0x0],dl
  42c558:	pop    rdi
  42c559:	pop    rdi
  42c55a:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  42c561:	movsxd eax,DWORD PTR [rax]
  42c563:	add    BYTE PTR [rdx+0x0],bl
  42c566:	pop    rdi
  42c567:	pop    rdi
  42c568:	ins    BYTE PTR es:[rdi],dx
  42c569:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42c56c:	jbe    0x42c5cd
  42c56e:	imul   ebp,DWORD PTR [rsi+0x69],0x5b000074
  42c575:	add    BYTE PTR [rdi+0x5f],bl
  42c578:	ins    DWORD PTR es:[rdi],dx
  42c579:	(bad)  
  42c57a:	pop    rdi
  42c57b:	movsxd esi,DWORD PTR [rbp+0x72]
  42c57e:	pop    rdi
  42c57f:	ins    DWORD PTR es:[rdi],dx
  42c580:	(bad)  
  42c581:	js     0x42c583
  42c583:	add    BYTE PTR [rax+0x0],ah
  42c586:	pop    rdi
  42c587:	pop    rdi
  42c588:	jae    0x42c5ef
  42c58a:	je     0x42c5eb
  42c58c:	(bad)  
  42c58d:	jo     0x42c5ff
  42c58f:	pop    rdi
  42c590:	je     0x42c60b
  42c592:	jo     0x42c5f9
  42c594:	add    BYTE PTR [rax],al
  42c596:	(bad)  
  42c597:	add    BYTE PTR [rdi+0x5f],bl
  42c59a:	jae    0x42c601
  42c59c:	je     0x42c613
  42c59e:	jae    0x42c605
  42c5a0:	jb     0x42c60f
  42c5a2:	(bad)  
  42c5a3:	je     0x42c60d
  42c5a5:	gs jb  0x42c61a
  42c5a8:	add    BYTE PTR [rax],al
  42c5aa:	jno    0x42c5ac
  42c5ac:	pop    rdi
  42c5ad:	(bad)  
  42c5ae:	movsxd ebp,DWORD PTR [rbp+0x64]
  42c5b1:	ins    BYTE PTR es:[rdi],dx
  42c5b2:	outs   dx,BYTE PTR ds:[rsi]
  42c5b3:	add    BYTE PTR [rax+0x0],bh
  42c5b6:	pop    rdi
  42c5b7:	(bad)  
  42c5b8:	ins    DWORD PTR es:[rdi],dx
  42c5b9:	jae    0x42c622
  42c5bb:	pop    rdi
  42c5bc:	gs js  0x42c628
  42c5bf:	je     0x42c5c1
  42c5c1:	add    BYTE PTR [rdx+0x65635f00],cl
  42c5c7:	js     0x42c632
  42c5c9:	je     0x42c5cb
  42c5cb:	add    BYTE PTR [rdx+0x72655f00],bh
  42c5d1:	jb     0x42c641
  42c5d3:	outs   dx,DWORD PTR ds:[rsi]
  42c5d4:	add    BYTE PTR [rax],al
  42c5d6:	fiadd  DWORD PTR [rax]
  42c5d8:	pop    rdi
  42c5d9:	ins    WORD PTR es:[rdi],dx
  42c5db:	outs   dx,DWORD PTR ds:[rsi]
  42c5dc:	fs add BYTE PTR gs:[rax],al
  42c5e0:	sbb    al,BYTE PTR [rcx]
  42c5e2:	pop    rdi
  42c5e3:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  42c5ea:	ins    DWORD PTR es:[rdi],dx
  42c5eb:	add    BYTE PTR [rdi+0x1],bh
  42c5ee:	pop    rdi
  42c5ef:	ins    BYTE PTR es:[rdi],dx
  42c5f0:	outs   dx,DWORD PTR ds:[rsi]
  42c5f1:	movsxd esp,DWORD PTR [rcx+0x6c]
  42c5f4:	je     0x42c65f
  42c5f6:	ins    DWORD PTR es:[rdi],dx
  42c5f7:	gs ss xor al,0x0
  42c5fb:	add    BYTE PTR [rax+0x6f6c5f01],al
  42c601:	movsxd ebp,DWORD PTR [rbx+0x0]
  42c604:	and    eax,0x6e6f5f02
  42c609:	gs js  0x42c675
  42c60c:	je     0x42c60e
  42c60e:	scas   eax,DWORD PTR es:[rdi]
  42c60f:	add    bl,BYTE PTR [rdi+0x74]
  42c612:	imul   ebp,DWORD PTR [rbp+0x65],0xc4003436
  42c619:	add    bl,BYTE PTR [rdi+0x75]
  42c61c:	outs   dx,BYTE PTR ds:[rsi]
  42c61d:	ins    BYTE PTR es:[rdi],dx
  42c61e:	outs   dx,DWORD PTR ds:[rsi]
  42c61f:	movsxd ebp,DWORD PTR [rbx+0x0]
  42c622:	jg     0x42c627
  42c624:	(bad)  
  42c625:	(bad)  
  42c626:	outs   dx,DWORD PTR ds:[rsi]
  42c627:	jb     0x42c69d
  42c629:	add    BYTE PTR [rax+0x6c616303],dl
  42c62f:	ins    BYTE PTR es:[rdi],dx
  42c630:	outs   dx,DWORD PTR ds:[rsi]
  42c631:	movsxd eax,DWORD PTR [rax]
  42c633:	add    BYTE PTR [rbp+0x69786503],bl
  42c639:	je     0x42c63b
  42c63b:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  42c642:	jae    0x42c6ac
  42c644:	add    BYTE PTR [rax],al
  42c646:	scas   al,BYTE PTR es:[rdi]
  42c647:	add    esp,DWORD PTR [rsi+0x6f]
  42c64a:	jo     0x42c6b1
  42c64c:	outs   dx,BYTE PTR ds:[rsi]
  42c64d:	add    BYTE PTR [rax+0x72706603],dh
  42c653:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  42c65a:	data16 jo 0x42c6d2
  42c65d:	je     0x42c6c2
  42c65f:	add    BYTE PTR [rbx+0x75706603],dh
  42c665:	je     0x42c6da
  42c667:	add    BYTE PTR [rdi+0x65726603],dh
  42c66d:	add    BYTE PTR gs:[rax],al
  42c670:	ret    0x6603
  42c673:	ja     0x42c6e7
  42c675:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c600
  42c67d:	gs je  0x42c6e3
  42c680:	push   0xffffffffc7007261
  42c685:	add    esp,DWORD PTR [rdi+0x65]
  42c688:	je     0x42c6ef
  42c68a:	outs   dx,BYTE PTR ds:[rsi]
  42c68b:	jbe    0x42c68d
  42c68d:	add    ah,dl
  42c68f:	add    ebp,DWORD PTR [rcx+0x73]
  42c692:	ins    BYTE PTR es:[rdi],dx
  42c693:	outs   dx,DWORD PTR ds:[rsi]
  42c694:	ja     0x42c6fb
  42c696:	jb     0x42c698
  42c698:	xlat   BYTE PTR ds:[rbx]
  42c699:	add    ebp,DWORD PTR [rcx+0x73]
  42c69c:	jae    0x42c70e
  42c69e:	(bad)  
  42c69f:	movsxd esp,DWORD PTR [rbp+0x0]
  42c6a2:	fadd   DWORD PTR [rbx]
  42c6a4:	imul   esi,DWORD PTR [rbx+0x75],0x72657070
  42c6ab:	add    dl,ch
  42c6ad:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  42c6b1:	(bad)  
  42c6b2:	ins    BYTE PTR es:[rdi],dx
  42c6b3:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  42c6b7:	jbe    0x42c6b9
  42c6b9:	add    ch,ch
  42c6bb:	add    ebp,DWORD PTR [rdi+rbp*2+0x67]
  42c6bf:	xor    DWORD PTR [rax],esi
  42c6c1:	add    al,dh
  42c6c3:	add    ebp,DWORD PTR [rbp+0x61]
  42c6c6:	ins    BYTE PTR es:[rdi],dx
  42c6c7:	ins    BYTE PTR es:[rdi],dx
  42c6c8:	outs   dx,DWORD PTR ds:[rsi]
  42c6c9:	movsxd eax,DWORD PTR [rax]
  42c6cb:	add    al,bh
  42c6cd:	add    ebp,DWORD PTR [rbp+0x65]
  42c6d0:	ins    DWORD PTR es:[rdi],dx
  42c6d1:	movsxd esi,DWORD PTR [rax+0x79]
  42c6d4:	add    BYTE PTR [rax],al
  42c6d6:	cli    
  42c6d7:	add    ebp,DWORD PTR [rbp+0x65]
  42c6da:	ins    DWORD PTR es:[rdi],dx
  42c6db:	jae    0x42c742
  42c6dd:	je     0x42c6df
  42c6df:	add    BYTE PTR [rax],cl
  42c6e1:	add    al,0x71
  42c6e3:	jae    0x42c754
  42c6e5:	jb     0x42c75b
  42c6e7:	add    BYTE PTR [rsi],dl
  42c6e9:	add    al,0x73
  42c6eb:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  42c6f2:	and    eax,DWORD PTR [rbx+rsi*2]
  42c6f5:	je     0x42c769
  42c6f7:	movsxd ebp,DWORD PTR [rax+0x72]
  42c6fa:	add    BYTE PTR [rax],al
  42c6fc:	and    al,0x4
  42c6fe:	jae    0x42c774
  42c700:	jb     0x42c765
  42c702:	ins    DWORD PTR es:[rdi],dx
  42c703:	jo     0x42c705
  42c705:	add    BYTE PTR [rax],ch
  42c707:	add    al,0x73
  42c709:	je     0x42c77d
  42c70b:	movsxd esi,DWORD PTR [rbx+0x70]
  42c70e:	outs   dx,BYTE PTR ds:[rsi]
  42c70f:	add    BYTE PTR [rcx],ch
  42c711:	add    al,0x73
  42c713:	je     0x42c787
  42c715:	gs jb  0x42c78a
  42c718:	outs   dx,DWORD PTR ds:[rsi]
  42c719:	jb     0x42c71b
  42c71b:	add    BYTE PTR [rbx],ch
  42c71d:	add    al,0x73
  42c71f:	je     0x42c793
  42c721:	ins    BYTE PTR es:[rdi],dx
  42c722:	outs   dx,BYTE PTR gs:[rsi]
  42c724:	add    BYTE PTR [rax],al
  42c726:	sub    al,0x4
  42c728:	jae    0x42c79e
  42c72a:	jb     0x42c79a
  42c72c:	movsxd esp,DWORD PTR [rcx+0x74]
  42c72f:	add    BYTE PTR [rsi],ch
  42c731:	add    al,0x73
  42c733:	je     0x42c7a7
  42c735:	outs   dx,BYTE PTR ds:[rsi]
  42c736:	movsxd ebp,DWORD PTR [rbp+0x70]
  42c739:	add    BYTE PTR [rdx],dh
  42c73b:	add    al,0x73
  42c73d:	je     0x42c7b1
  42c73f:	jb     0x42c7a4
  42c741:	push   0x4340072
  42c746:	jae    0x42c7bc
  42c748:	jb     0x42c7bd
  42c74a:	je     0x42c7be
  42c74c:	add    BYTE PTR [rax],al
  42c74e:	ss add al,0x73
  42c751:	je     0x42c7c5
  42c753:	je     0x42c7c4
  42c755:	imul   eax,DWORD PTR [rax],0x0
  42c758:	cmp    BYTE PTR [rbx+rsi*2],al
  42c75b:	je     0x42c7cf
  42c75d:	je     0x42c7ce
  42c75f:	ins    BYTE PTR es:[rdi],dx
  42c760:	add    BYTE PTR [rax],al
  42c762:	rex.WRX add al,0x76
  42c765:	data16 jo 0x42c7da
  42c768:	imul   ebp,DWORD PTR [rsi+0x74],0x61000066
  42c76f:	add    al,0x77
  42c771:	movsxd esi,DWORD PTR [rbx+0x6c]
  42c774:	outs   dx,BYTE PTR gs:[rsi]
  42c776:	add    BYTE PTR [rax],al
  42c778:	or     al,BYTE PTR [rax]
  42c77a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  42c77c:	ins    DWORD PTR es:[rdi],dx
  42c77d:	ins    DWORD PTR es:[rdi],dx
  42c77e:	(bad)  
  42c77f:	outs   dx,BYTE PTR ds:[rsi]
  42c780:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
  42c789:	addr32 jbe 0x42c7e3
  42c78c:	add    BYTE PTR [rax],al
  42c78e:	add    BYTE PTR [rax],al
  42c790:	or     DWORD PTR [rax],eax
  42c792:	(bad)  
  42c793:	jbe    0x42c7f4
  42c795:	(bad)  
  42c796:	imul   esi,DWORD PTR [rbx+rsi*2+0x74],0x6d616572
  42c79e:	pop    rdi
  42c79f:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  42c7a6:	outs   dx,BYTE PTR ds:[rsi]
  42c7a7:	gs js  0x42c81e
  42c7aa:	add    BYTE PTR [rax],al
  42c7ac:	adc    al,BYTE PTR [rax]
  42c7ae:	(bad)  
  42c7af:	jbe    0x42c810
  42c7b1:	movsxd ebp,DWORD PTR [rdi+0x64]
  42c7b4:	movsxd ebx,DWORD PTR gs:[rdi+0x69]
  42c7b8:	jae    0x42c819
  42c7ba:	fs movsxd ebp,DWORD PTR gs:[rdi+0x64]
  42c7bf:	gs jb  0x42c7c2
  42c7c2:	add    BYTE PTR [rax],al
  42c7c4:	adc    eax,DWORD PTR [rax]
  42c7c6:	(bad)  
  42c7c7:	jbe    0x42c828
  42c7c9:	movsxd ebp,DWORD PTR [rdi+0x64]
  42c7cc:	movsxd ebx,DWORD PTR gs:[rdi+0x69]
  42c7d0:	jae    0x42c831
  42c7d2:	outs   dx,BYTE PTR gs:[rsi]
  42c7d4:	movsxd ebp,DWORD PTR [rdi+0x64]
  42c7d7:	gs jb  0x42c7da
  42c7da:	add    BYTE PTR [rax],al
  42c7dc:	adc    al,0x0
  42c7de:	(bad)  
  42c7df:	jbe    0x42c840
  42c7e1:	movsxd ebp,DWORD PTR [rdi+0x64]
  42c7e4:	movsxd ebx,DWORD PTR gs:[rdi+0x6e]
  42c7e8:	gs js  0x42c85f
  42c7eb:	add    BYTE PTR [rdx],ch
  42c7ed:	add    BYTE PTR [rcx+0x76],ah
  42c7f0:	pop    rdi
  42c7f1:	data16 jb 0x42c859
  42c7f4:	gs pop rdi
  42c7f6:	jo     0x42c859
  42c7f8:	movsxd ebp,DWORD PTR [rbx+0x65]
  42c7fb:	je     0x42c7fd
  42c7fd:	add    BYTE PTR [rax],al
  42c7ff:	add    BYTE PTR [rax+rax*1],ch
  42c802:	(bad)  
  42c803:	jbe    0x42c864
  42c805:	addr32 gs je 0x42c868
  42c809:	(bad)  
  42c80a:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x5f726570
  42c812:	jae    0x42c875
  42c814:	ins    DWORD PTR es:[rdi],dx
  42c815:	jo     0x42c883
  42c817:	add    BYTE PTR gs:[rax],al
  42c81a:	add    BYTE PTR [rax],al
  42c81c:	sub    eax,0x5f766100
  42c821:	addr32 gs je 0x42c884
  42c825:	movsxd ebp,DWORD PTR [rdi+0x64]
  42c828:	movsxd ebx,DWORD PTR gs:[rdi+0x74]
  42c82c:	(bad)  
  42c82d:	addr32 pop rdi
  42c82f:	jae    0x42c8a5
  42c831:	jb     0x42c89c
  42c833:	outs   dx,BYTE PTR ds:[rsi]
  42c834:	add    BYTE PTR [eax],al
  42c837:	add    BYTE PTR [rax],dh
  42c839:	add    BYTE PTR [rcx+0x76],ah
  42c83c:	pop    rdi
  42c83d:	addr32 gs je 0x42c8a0
  42c841:	jo     0x42c8b5
  42c843:	outs   dx,DWORD PTR ds:[rsi]
  42c844:	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x616e
  42c84b:	ins    DWORD PTR es:[rdi],dx
  42c84c:	add    BYTE PTR gs:[rax],al
  42c84f:	add    BYTE PTR [rip+0x5f766100],dh        # 0x5fb92955
  42c855:	imul   ebp,DWORD PTR [rsi+0x69],0x61705f74
  42c85c:	movsxd ebp,DWORD PTR [rbx+0x65]
  42c85f:	je     0x42c861
  42c861:	add    BYTE PTR [rax],al
  42c863:	add    BYTE PTR [rax+0x0],cl
  42c866:	(bad)  
  42c867:	jbe    0x42c8c8
  42c869:	jo     0x42c8cc
  42c86b:	movsxd ebp,DWORD PTR [rbx+0x65]
  42c86e:	je     0x42c8cf
  42c870:	jae    0x42c8db
  42c872:	fs gs pop rdi
  42c875:	fs (bad) 
  42c877:	je     0x42c8da
  42c879:	pop    rdi
  42c87a:	outs   dx,BYTE PTR ds:[rsi]
  42c87b:	(bad)  
  42c87c:	ins    DWORD PTR es:[rdi],dx
  42c87d:	add    BYTE PTR gs:[rax],al
  42c880:	imul   eax,DWORD PTR [rax],0x61
  42c883:	jbe    0x42c8e8
  42c885:	outs   dx,DWORD PTR ds:[rsi]
  42c886:	fs movsxd ebx,DWORD PTR gs:[rdi+0x63]
  42c88b:	ins    BYTE PTR es:[rdi],dx
  42c88c:	outs   dx,DWORD PTR ds:[rsi]
  42c88d:	jae    0x42c8f4
  42c88f:	add    BYTE PTR [rax+rax*1+0x61],ch
  42c893:	jbe    0x42c8f8
  42c895:	outs   dx,DWORD PTR ds:[rsi]
  42c896:	fs movsxd ebx,DWORD PTR gs:[rdi+0x63]
  42c89b:	outs   dx,DWORD PTR ds:[rsi]
  42c89c:	outs   dx,BYTE PTR ds:[rsi]
  42c89d:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42c8a3:	je     0x42c90e
  42c8a5:	outs   dx,DWORD PTR ds:[rsi]
  42c8a6:	outs   dx,BYTE PTR ds:[rsi]
  42c8a7:	add    BYTE PTR [rdx+0x0],dh
  42c8aa:	(bad)  
  42c8ab:	jbe    0x42c910
  42c8ad:	outs   dx,DWORD PTR ds:[rsi]
  42c8ae:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  42c8b3:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  42c8b7:	gs pop rdi
  42c8b9:	(bad)  
  42c8ba:	jne    0x42c920
  42c8bc:	imul   ebp,DWORD PTR [rdi+0x34],0x61007300
  42c8c3:	jbe    0x42c928
  42c8c5:	outs   dx,DWORD PTR ds:[rsi]
  42c8c6:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  42c8cb:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  42c8cf:	gs pop rdi
  42c8d1:	jae    0x42c948
  42c8d3:	(bad)  
  42c8d4:	je     0x42c93f
  42c8d6:	je     0x42c944
  42c8d8:	xor    al,BYTE PTR gs:[rax]
  42c8db:	add    BYTE PTR [rax+rax*1+0x61],dh
  42c8df:	jbe    0x42c944
  42c8e1:	outs   dx,DWORD PTR ds:[rsi]
  42c8e2:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  42c8e7:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  42c8eb:	gs pop rdi
  42c8ed:	jbe    0x42c958
  42c8ef:	fs outs dx,DWORD PTR gs:[rsi]
  42c8f2:	xor    al,BYTE PTR [rax]
  42c8f4:	jl     0x42c8f6
  42c8f6:	(bad)  
  42c8f7:	jbe    0x42c95c
  42c8f9:	outs   dx,DWORD PTR ds:[rsi]
  42c8fa:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  42c8ff:	gs jae 0x42c965
  42c902:	jb     0x42c96d
  42c904:	jo     0x42c97a
  42c906:	outs   dx,DWORD PTR ds:[rsi]
  42c907:	jb     0x42c968
  42c909:	addr32 gs je 0x42c90d
  42c90d:	add    BYTE PTR [rax],al
  42c90f:	add    BYTE PTR [rbp+0x0],bh
  42c912:	(bad)  
  42c913:	jbe    0x42c978
  42c915:	outs   dx,DWORD PTR ds:[rsi]
  42c916:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  42c91b:	gs jae 0x42c981
  42c91e:	jb     0x42c989
  42c920:	jo     0x42c996
  42c922:	outs   dx,DWORD PTR ds:[rsi]
  42c923:	jb     0x42c984
  42c925:	addr32 gs je 0x42c988
  42c929:	(bad)  
  42c92a:	jns    0x42c98b
  42c92c:	outs   dx,BYTE PTR ds:[rsi]
  42c92d:	(bad)  
  42c92e:	ins    DWORD PTR es:[rdi],dx
  42c92f:	add    BYTE PTR gs:[rax],al
  42c932:	add    BYTE PTR [rax],al
  42c934:	jle    0x42c936
  42c936:	(bad)  
  42c937:	jbe    0x42c99c
  42c939:	outs   dx,DWORD PTR ds:[rsi]
  42c93a:	fs movsxd ebx,DWORD PTR gs:[rdi+0x64]
  42c93f:	gs jae 0x42c9a5
  42c942:	jb     0x42c9ad
  42c944:	jo     0x42c9ba
  42c946:	outs   dx,DWORD PTR ds:[rsi]
  42c947:	jb     0x42c9a8
  42c949:	outs   dx,BYTE PTR ds:[rsi]
  42c94a:	gs js  0x42c9c1
  42c94d:	add    BYTE PTR [rax],al
  42c94f:	add    BYTE PTR [rcx+0x63766100],cl
  42c955:	outs   dx,DWORD PTR ds:[rsi]
  42c956:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  42c95b:	imul   ebp,DWORD PTR [rsi+0x64],0x6365645f
  42c962:	outs   dx,DWORD PTR ds:[rsi]
  42c963:	fs gs jb 0x42c967
  42c967:	add    BYTE PTR [rdx+0x63766100],cl
  42c96d:	outs   dx,DWORD PTR ds:[rsi]
  42c96e:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  42c973:	imul   ebp,DWORD PTR [rsi+0x64],0x6365645f
  42c97a:	outs   dx,DWORD PTR ds:[rsi]
  42c97b:	fs gs jb 0x42c9de
  42c97f:	(bad)  
  42c980:	jns    0x42c9e1
  42c982:	outs   dx,BYTE PTR ds:[rsi]
  42c983:	(bad)  
  42c984:	ins    DWORD PTR es:[rdi],dx
  42c985:	add    BYTE PTR gs:[rax],al
  42c988:	mov    eax,DWORD PTR [rax]
  42c98a:	(bad)  
  42c98b:	jbe    0x42c9f0
  42c98d:	outs   dx,DWORD PTR ds:[rsi]
  42c98e:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  42c993:	imul   ebp,DWORD PTR [rsi+0x64],0x636e655f
  42c99a:	outs   dx,DWORD PTR ds:[rsi]
  42c99b:	fs gs jb 0x42c99f
  42c99f:	add    BYTE PTR [rax+rax*1+0x6f637661],cl
  42c9a6:	fs movsxd ebx,DWORD PTR gs:[rdi+0x66]
  42c9ab:	imul   ebp,DWORD PTR [rsi+0x64],0x636e655f
  42c9b2:	outs   dx,DWORD PTR ds:[rsi]
  42c9b3:	fs gs jb 0x42ca16
  42c9b7:	(bad)  
  42c9b8:	jns    0x42ca19
  42c9ba:	outs   dx,BYTE PTR ds:[rsi]
  42c9bb:	(bad)  
  42c9bc:	ins    DWORD PTR es:[rdi],dx
  42c9bd:	add    BYTE PTR gs:[rax],al
  42c9c0:	xchg   ecx,eax
  42c9c1:	add    BYTE PTR [rcx+0x76],ah
  42c9c4:	movsxd ebp,DWORD PTR [rdi+0x64]
  42c9c7:	movsxd ebx,DWORD PTR gs:[rdi+0x67]
  42c9cb:	gs je  0x42ca2d
  42c9ce:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  42c9d2:	jae    0x42c9d4
  42c9d4:	pushf  
  42c9d5:	add    BYTE PTR [rcx+0x76],ah
  42c9d8:	movsxd ebp,DWORD PTR [rdi+0x64]
  42c9db:	movsxd ebx,DWORD PTR gs:[rdi+0x6f]
  42c9df:	jo     0x42ca46
  42c9e1:	outs   dx,BYTE PTR ds:[rsi]
  42c9e2:	xor    al,BYTE PTR [rax]
  42c9e4:	movabs ds:0x6365646f63766100,al
  42c9ed:	pop    rdi
  42c9ee:	jbe    0x42ca55
  42c9f0:	jb     0x42ca65
  42c9f2:	imul   ebp,DWORD PTR [rdi+0x6e],0xdb000000
  42c9f9:	add    BYTE PTR [rcx+0x76],ah
  42c9fc:	jae    0x42ca73
  42c9fe:	(bad)  
  42c9ff:	je     0x42ca6a
  42ca01:	je     0x42ca6f
  42ca03:	gs pop rdi
  42ca05:	data16 jb 0x42ca6d
  42ca08:	add    BYTE PTR gs:[rax],al
  42ca0b:	add    BYTE PTR [rdx],al
  42ca0d:	add    BYTE PTR [rcx+0x76],ah
  42ca10:	pop    rdi
  42ca11:	imul   ebp,DWORD PTR [rsi+0x70],0x615f7475
  42ca18:	jne    0x42ca7e
  42ca1a:	imul   ebp,DWORD PTR [rdi+0x5f],0x69766564
  42ca21:	movsxd esp,DWORD PTR [rbp+0x5f]
  42ca24:	outs   dx,BYTE PTR ds:[rsi]
  42ca25:	gs js  0x42ca9c
  42ca28:	add    BYTE PTR [rax],al
  42ca2a:	add    BYTE PTR [rax],al
  42ca2c:	add    eax,DWORD PTR [rax]
  42ca2e:	(bad)  
  42ca2f:	jbe    0x42ca90
  42ca31:	imul   ebp,DWORD PTR [rsi+0x70],0x765f7475
  42ca38:	imul   esp,DWORD PTR [rbp+riz*2+0x6f],0x7665645f
  42ca40:	imul   esp,DWORD PTR [rbx+0x65],0x78656e5f
  42ca47:	je     0x42ca49
  42ca49:	add    BYTE PTR [rax],al
  42ca4b:	add    BYTE PTR [rax+rax*1],al
  42ca4e:	(bad)  
  42ca4f:	jbe    0x42cab0
  42ca51:	outs   dx,DWORD PTR ds:[rsi]
  42ca52:	jne    0x42cac8
  42ca54:	jo     0x42cacb
  42ca56:	je     0x42cab7
  42ca58:	(bad)  
  42ca59:	jne    0x42cabf
  42ca5b:	imul   ebp,DWORD PTR [rdi+0x5f],0x69766564
  42ca62:	movsxd esp,DWORD PTR [rbp+0x5f]
  42ca65:	outs   dx,BYTE PTR ds:[rsi]
  42ca66:	gs js  0x42cadd
  42ca69:	add    BYTE PTR [rax],al
  42ca6b:	add    BYTE PTR [rip+0x5f766100],al        # 0x5fb92b71
  42ca71:	outs   dx,DWORD PTR ds:[rsi]
  42ca72:	jne    0x42cae8
  42ca74:	jo     0x42caeb
  42ca76:	je     0x42cad7
  42ca78:	jbe    0x42cae3
  42ca7a:	fs outs dx,DWORD PTR gs:[rsi]
  42ca7d:	pop    rdi
  42ca7e:	fs gs jbe 0x42caeb
  42ca82:	movsxd esp,DWORD PTR [rbp+0x5f]
  42ca85:	outs   dx,BYTE PTR ds:[rsi]
  42ca86:	gs js  0x42cafd
  42ca89:	add    BYTE PTR [rax],al
  42ca8b:	add    BYTE PTR [rcx],cl
  42ca8d:	add    BYTE PTR [rcx+0x76],ah
  42ca90:	fs gs jbe 0x42cafd
  42ca94:	movsxd esp,DWORD PTR [rbp+0x5f]
  42ca97:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42ca9a:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42caa0:	je     0x42cb0b
  42caa2:	outs   dx,DWORD PTR ds:[rsi]
  42caa3:	outs   dx,BYTE PTR ds:[rsi]
  42caa4:	add    BYTE PTR [rax],al
  42caa6:	add    BYTE PTR [rax],al
  42caa8:	or     eax,DWORD PTR [rax]
  42caaa:	(bad)  
  42caab:	jbe    0x42cb11
  42caad:	gs jbe 0x42cb19
  42cab0:	movsxd esp,DWORD PTR [rbp+0x5f]
  42cab3:	data16 jb 0x42cb1b
  42cab6:	gs pop rdi
  42cab8:	ins    BYTE PTR es:[rdi],dx
  42cab9:	imul   esi,DWORD PTR [rbx+0x74],0x7665645f
  42cac0:	imul   esp,DWORD PTR [rbx+0x65],0x73
  42cac7:	add    BYTE PTR [rsi],cl
  42cac9:	add    BYTE PTR [rcx+0x76],ah
  42cacc:	fs gs jbe 0x42cb39
  42cad0:	movsxd esp,DWORD PTR [rbp+0x5f]
  42cad3:	ins    BYTE PTR es:[rdi],dx
  42cad4:	imul   esi,DWORD PTR [rbx+0x74],0x706e695f
  42cadb:	jne    0x42cb51
  42cadd:	pop    rdi
  42cade:	jae    0x42cb4f
  42cae0:	jne    0x42cb54
  42cae2:	movsxd esp,DWORD PTR [rbp+0x73]
  42cae5:	add    BYTE PTR [rax],al
  42cae7:	add    BYTE PTR [rdi],cl
  42cae9:	add    BYTE PTR [rcx+0x76],ah
  42caec:	fs gs jbe 0x42cb59
  42caf0:	movsxd esp,DWORD PTR [rbp+0x5f]
  42caf3:	ins    BYTE PTR es:[rdi],dx
  42caf4:	imul   esi,DWORD PTR [rbx+0x74],0x74756f5f
  42cafb:	jo     0x42cb72
  42cafd:	je     0x42cb5e
  42caff:	jae    0x42cb6a
  42cb01:	outs   dx,BYTE PTR ds:[rsi]
  42cb02:	imul   esi,DWORD PTR [rbx+0x0],0x0
  42cb06:	add    BYTE PTR [rax],al
  42cb08:	adc    BYTE PTR [rax],al
  42cb0a:	(bad)  
  42cb0b:	jbe    0x42cb71
  42cb0d:	gs jbe 0x42cb79
  42cb10:	movsxd esp,DWORD PTR [rbp+0x5f]
  42cb13:	jb     0x42cb7a
  42cb15:	imul   esi,DWORD PTR [ebx+0x74],0x615f7265
  42cb1d:	ins    BYTE PTR es:[rdi],dx
  42cb1e:	ins    BYTE PTR es:[rdi],dx
  42cb1f:	add    BYTE PTR [rcx],dl
  42cb21:	add    BYTE PTR [rcx+0x76],ah
  42cb24:	fs gs jbe 0x42cb91
  42cb28:	movsxd esp,DWORD PTR [rbp+0x5f]
  42cb2b:	jbe    0x42cb92
  42cb2d:	jb     0x42cba2
  42cb2f:	imul   ebp,DWORD PTR [rdi+0x6e],0x160000
  42cb36:	(bad)  
  42cb37:	jbe    0x42cb9f
  42cb39:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x6f635f72
  42cb41:	outs   dx,BYTE PTR ds:[rsi]
  42cb42:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42cb48:	je     0x42cbb3
  42cb4a:	outs   dx,DWORD PTR ds:[rsi]
  42cb4b:	outs   dx,BYTE PTR ds:[rsi]
  42cb4c:	add    BYTE PTR [rax],al
  42cb4e:	add    BYTE PTR [rax],al
  42cb50:	(bad)  
  42cb51:	add    BYTE PTR [rcx+0x76],ah
  42cb54:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  42cb5b:	addr32 gs je 0x42cbbe
  42cb5f:	(bad)  
  42cb60:	jns    0x42cbc1
  42cb62:	outs   dx,BYTE PTR ds:[rsi]
  42cb63:	(bad)  
  42cb64:	ins    DWORD PTR es:[rdi],dx
  42cb65:	add    BYTE PTR gs:[rax],al
  42cb68:	add    BYTE PTR [rcx+0x76],spl
  42cb6c:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x5f72
  42cb73:	outs   dx,BYTE PTR ds:[rsi]
  42cb74:	gs js  0x42cbeb
  42cb77:	add    BYTE PTR [rdx+0x0],al
  42cb7a:	(bad)  
  42cb7b:	jbe    0x42cbe3
  42cb7d:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x61705f72
  42cb85:	fs pop rdi
  42cb87:	movsxd ebp,DWORD PTR [rdi+0x75]
  42cb8a:	outs   dx,BYTE PTR ds:[rsi]
  42cb8b:	je     0x42cb8d
  42cb8d:	add    BYTE PTR [rax],al
  42cb8f:	add    BYTE PTR [rbx+0x0],al
  42cb92:	(bad)  
  42cb93:	jbe    0x42cbfb
  42cb95:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x61705f72
  42cb9d:	fs pop rdi
  42cb9f:	addr32 gs je 0x42cc02
  42cba3:	outs   dx,BYTE PTR ds:[rsi]
  42cba4:	(bad)  
  42cba5:	ins    DWORD PTR es:[rdi],dx
  42cba6:	add    BYTE PTR gs:[rax+rax*1+0x61],al
  42cbab:	jbe    0x42cc13
  42cbad:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x61705f72
  42cbb5:	fs pop rdi
  42cbb7:	addr32 gs je 0x42cc1a
  42cbbb:	je     0x42cc36
  42cbbd:	jo     0x42cc24
  42cbbf:	add    BYTE PTR [rdi+0x0],cl
  42cbc2:	(bad)  
  42cbc3:	jbe    0x42cc2b
  42cbc5:	imul   ebp,DWORD PTR [rsp+rsi*2+0x65],0x65765f72
  42cbcd:	jb     0x42cc42
  42cbcf:	imul   ebp,DWORD PTR [rdi+0x6e],0x70000
  42cbd6:	(bad)  
  42cbd7:	jbe    0x42cc38
  42cbd9:	fs jne 0x42cc49
  42cbdc:	jo     0x42cc3d
  42cbde:	outs   dx,WORD PTR ds:[rsi]
  42cbe0:	jb     0x42cc4f
  42cbe2:	(bad)  
  42cbe3:	je     0x42cbe5
  42cbe5:	add    BYTE PTR [rax],al
  42cbe7:	add    BYTE PTR [rbx],cl
  42cbe9:	add    BYTE PTR [rcx+0x76],ah
  42cbec:	pop    rdi
  42cbed:	imul   bp,WORD PTR [rsi+0x64],0x695f
  42cbf3:	outs   dx,BYTE PTR ds:[rsi]
  42cbf4:	jo     0x42cc6b
  42cbf6:	je     0x42cc57
  42cbf8:	outs   dx,WORD PTR ds:[rsi]
  42cbfa:	jb     0x42cc69
  42cbfc:	(bad)  
  42cbfd:	je     0x42cbff
  42cbff:	add    BYTE PTR [rip+0x5f766100],dl        # 0x5fb92d05
  42cc05:	outs   dx,WORD PTR ds:[rsi]
  42cc07:	jb     0x42cc76
  42cc09:	(bad)  
  42cc0a:	je     0x42cc6b
  42cc0c:	addr32 gs je 0x42cc6f
  42cc10:	jo     0x42cc84
  42cc12:	outs   dx,DWORD PTR ds:[rsi]
  42cc13:	(bad)  
  42cc14:	gs pop rdi
  42cc16:	jae    0x42cc7b
  42cc18:	outs   dx,DWORD PTR ds:[rsi]
  42cc19:	jb     0x42cc80
  42cc1b:	add    BYTE PTR [rip+0x5f766100],ah        # 0x5fb92d21
  42cc21:	addr32 jne 0x42cc89
  42cc24:	jae    0x42cc99
  42cc26:	pop    rdi
  42cc27:	outs   dx,WORD PTR ds:[rsi]
  42cc29:	jb     0x42cc98
  42cc2b:	(bad)  
  42cc2c:	je     0x42cc2e
  42cc2e:	add    BYTE PTR [rax],al
  42cc30:	(bad)  
  42cc31:	add    BYTE PTR [rcx+0x76],ah
  42cc34:	pop    rdi
  42cc35:	addr32 jne 0x42cc9d
  42cc38:	jae    0x42ccad
  42cc3a:	pop    rdi
  42cc3b:	jae    0x42cc9e
  42cc3d:	ins    DWORD PTR es:[rdi],dx
  42cc3e:	jo     0x42ccac
  42cc40:	gs pop rdi
  42cc42:	(bad)  
  42cc43:	jae    0x42ccb5
  42cc45:	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x72]
  42cc4a:	(bad)  
  42cc4b:	je     0x42ccb6
  42cc4d:	outs   dx,DWORD PTR ds:[rsi]
  42cc4e:	add    BYTE PTR [rax],al
  42cc50:	sub    al,BYTE PTR [rax]
  42cc52:	(bad)  
  42cc53:	jbe    0x42ccb4
  42cc55:	imul   esp,DWORD PTR [rsi+0x6f],0x74616d72
  42cc5c:	pop    rdi
  42cc5d:	outs   dx,BYTE PTR ds:[rsi]
  42cc5e:	gs js  0x42ccd5
  42cc61:	add    BYTE PTR [rax],al
  42cc63:	add    BYTE PTR [rax],dh
  42cc65:	add    BYTE PTR [rcx+0x76],ah
  42cc68:	pop    rdi
  42cc69:	outs   dx,DWORD PTR ds:[rsi]
  42cc6a:	outs   dx,WORD PTR ds:[rsi]
  42cc6c:	jb     0x42ccdb
  42cc6e:	(bad)  
  42cc6f:	je     0x42ccd0
  42cc71:	outs   dx,BYTE PTR ds:[rsi]
  42cc72:	gs js  0x42cce9
  42cc75:	add    BYTE PTR [rax],al
  42cc77:	add    BYTE PTR [rax],bh
  42cc79:	add    BYTE PTR [rcx+0x76],ah
  42cc7c:	pop    rdi
  42cc7d:	jb     0x42cce4
  42cc7f:	(bad)  
  42cc80:	fs pop rdi
  42cc82:	data16 jb 0x42cce6
  42cc85:	ins    DWORD PTR es:[rdi],dx
  42cc86:	add    BYTE PTR gs:[rbx],bh
  42cc89:	add    BYTE PTR [rcx+0x76],ah
  42cc8c:	pop    rdi
  42cc8d:	jb     0x42ccf4
  42cc8f:	imul   esi,DWORD PTR [ebx+0x74],0x615f7265
  42cc97:	ins    BYTE PTR es:[rdi],dx
  42cc98:	ins    BYTE PTR es:[rdi],dx
  42cc99:	add    BYTE PTR [rax],al
  42cc9b:	add    BYTE PTR [rax+rax*1+0x61],al
  42cc9f:	jbe    0x42cd00
  42cca1:	jae    0x42cd17
  42cca3:	jb     0x42cd0a
  42cca5:	(bad)  
  42cca6:	ins    DWORD PTR es:[rdi],dx
  42cca7:	pop    rdi
  42cca8:	addr32 gs je 0x42cd0b
  42ccac:	jae    0x42cd17
  42ccae:	fs gs pop rdi
  42ccb1:	fs (bad) 
  42ccb3:	je     0x42cd16
  42ccb5:	add    BYTE PTR [rax],al
  42ccb7:	add    BYTE PTR [rsi+0x0],cl
  42ccba:	(bad)  
  42ccbb:	jbe    0x42cd23
  42ccbd:	outs   dx,DWORD PTR ds:[rsi]
  42ccbe:	jb     0x42cd2d
  42ccc0:	(bad)  
  42ccc1:	je     0x42cd22
  42ccc3:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
  42ccc7:	gs pop rdi
  42ccc9:	imul   ebp,DWORD PTR [rsi+0x70],0x7475
  42ccd0:	rex.WRXB add BYTE PTR [r9+0x76],r12b
  42ccd4:	outs   dx,WORD PTR ds:[rsi]
  42ccd6:	jb     0x42cd45
  42ccd8:	(bad)  
  42ccd9:	je     0x42cd3a
  42ccdb:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42ccde:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42cce4:	je     0x42cd4f
  42cce6:	outs   dx,DWORD PTR ds:[rsi]
  42cce7:	outs   dx,BYTE PTR ds:[rsi]
  42cce8:	add    BYTE PTR [rax],al
  42ccea:	add    BYTE PTR [rax],al
  42ccec:	push   rax
  42cced:	add    BYTE PTR [rcx+0x76],ah
  42ccf0:	outs   dx,WORD PTR ds:[rsi]
  42ccf2:	jb     0x42cd61
  42ccf4:	(bad)  
  42ccf5:	je     0x42cd56
  42ccf7:	imul   bp,WORD PTR [rsi+0x64],0x735f
  42ccfd:	je     0x42cd71
  42ccff:	gs (bad) 
  42cd01:	ins    DWORD PTR es:[rdi],dx
  42cd02:	pop    rdi
  42cd03:	imul   ebp,DWORD PTR [rsi+0x66],0x53006f
  42cd0a:	(bad)  
  42cd0b:	jbe    0x42cd73
  42cd0d:	outs   dx,DWORD PTR ds:[rsi]
  42cd0e:	jb     0x42cd7d
  42cd10:	(bad)  
  42cd11:	je     0x42cd72
  42cd13:	addr32 gs je 0x42cd76
  42cd17:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  42cd1b:	jae    0x42cd1d
  42cd1d:	add    BYTE PTR [rax],al
  42cd1f:	add    BYTE PTR [rcx+0x0],bl
  42cd22:	(bad)  
  42cd23:	jbe    0x42cd8b
  42cd25:	outs   dx,DWORD PTR ds:[rsi]
  42cd26:	jb     0x42cd95
  42cd28:	(bad)  
  42cd29:	je     0x42cd8a
  42cd2b:	ins    DWORD PTR es:[rdi],dx
  42cd2c:	(bad)  
  42cd2d:	je     0x42cd92
  42cd2f:	push   0x7274735f
  42cd34:	gs (bad) 
  42cd36:	ins    DWORD PTR es:[rdi],dx
  42cd37:	pop    rdi
  42cd38:	jae    0x42cdaa
  42cd3a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  42cd3e:	imul   esp,DWORD PTR [rbp+0x72],0x5a000000
  42cd45:	add    BYTE PTR [rcx+0x76],ah
  42cd48:	outs   dx,WORD PTR ds:[rsi]
  42cd4a:	jb     0x42cdb9
  42cd4c:	(bad)  
  42cd4d:	je     0x42cdae
  42cd4f:	outs   dx,BYTE PTR ds:[rsi]
  42cd50:	gs je  0x42cdca
  42cd53:	outs   dx,DWORD PTR ds:[rsi]
  42cd54:	jb     0x42cdc1
  42cd56:	pop    rdi
  42cd57:	fs imul ebp,DWORD PTR gs:[rsi+0x69],0x74
  42cd60:	pop    rbx
  42cd61:	add    BYTE PTR [rcx+0x76],ah
  42cd64:	outs   dx,WORD PTR ds:[rsi]
  42cd66:	jb     0x42cdd5
  42cd68:	(bad)  
  42cd69:	je     0x42cdca
  42cd6b:	outs   dx,BYTE PTR ds:[rsi]
  42cd6c:	gs je  0x42cde6
  42cd6f:	outs   dx,DWORD PTR ds:[rsi]
  42cd70:	jb     0x42cddd
  42cd72:	pop    rdi
  42cd73:	imul   ebp,DWORD PTR [rsi+0x69],0x5d0074
  42cd7a:	(bad)  
  42cd7b:	jbe    0x42cde3
  42cd7d:	outs   dx,DWORD PTR ds:[rsi]
  42cd7e:	jb     0x42cded
  42cd80:	(bad)  
  42cd81:	je     0x42cde2
  42cd83:	outs   dx,DWORD PTR ds:[rsi]
  42cd84:	jo     0x42cdeb
  42cd86:	outs   dx,BYTE PTR ds:[rsi]
  42cd87:	pop    rdi
  42cd88:	imul   ebp,DWORD PTR [rsi+0x70],0x7475
  42cd8f:	add    BYTE PTR [rax+0x0],ah
  42cd92:	(bad)  
  42cd93:	jbe    0x42cdfb
  42cd95:	outs   dx,DWORD PTR ds:[rsi]
  42cd96:	jb     0x42ce05
  42cd98:	(bad)  
  42cd99:	je     0x42cdfa
  42cd9b:	jae    0x42ce02
  42cd9d:	imul   ebx,DWORD PTR gs:[rdi+0x66],0x69
  42cda2:	ins    BYTE PTR es:[rdi],dx
  42cda3:	add    BYTE PTR gs:[rax],al
  42cda6:	add    BYTE PTR [rax],al
  42cda8:	(bad)  
  42cda9:	add    BYTE PTR [rcx+0x76],ah
  42cdac:	outs   dx,WORD PTR ds:[rsi]
  42cdae:	jb     0x42ce1d
  42cdb0:	(bad)  
  42cdb1:	je     0x42ce12
  42cdb3:	jbe    0x42ce1a
  42cdb5:	jb     0x42ce2a
  42cdb7:	imul   ebp,DWORD PTR [rdi+0x6e],0x6a0000
  42cdbe:	(bad)  
  42cdbf:	jbe    0x42ce2a
  42cdc1:	outs   dx,DWORD PTR ds:[rsi]
  42cdc2:	pop    rdi
  42cdc3:	outs   dx,BYTE PTR gs:[rsi]
  42cdc5:	jne    0x42ce34
  42cdc7:	pop    rdi
  42cdc8:	jo     0x42ce3c
  42cdca:	outs   dx,DWORD PTR ds:[rsi]
  42cdcb:	je     0x42ce3c
  42cdcd:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42cdd0:	jae    0x42cdd2
  42cdd2:	add    BYTE PTR [rax],al
  42cdd4:	mov    al,BYTE PTR [rax]
  42cdd6:	(bad)  
  42cdd7:	jbe    0x42ce42
  42cdd9:	outs   dx,DWORD PTR ds:[rsi]
  42cdda:	pop    rdi
  42cddb:	jae    0x42ce46
  42cddd:	jp     0x42ce44
  42cddf:	add    BYTE PTR [rip+0x72766100],al        # 0x72b92ee5
  42cde5:	gs jae 0x42ce49
  42cde8:	ins    DWORD PTR es:[rdi],dx
  42cde9:	jo     0x42ce57
  42cdeb:	gs pop rdi
  42cded:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42cdf0:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42cdf6:	je     0x42ce61
  42cdf8:	outs   dx,DWORD PTR ds:[rsi]
  42cdf9:	outs   dx,BYTE PTR ds:[rsi]
  42cdfa:	add    BYTE PTR [rax],al
  42cdfc:	or     DWORD PTR [rax],eax
  42cdfe:	(bad)  
  42cdff:	jbe    0x42ce73
  42ce01:	gs jae 0x42ce65
  42ce04:	ins    DWORD PTR es:[rdi],dx
  42ce05:	jo     0x42ce73
  42ce07:	gs pop rdi
  42ce09:	addr32 gs je 0x42ce6c
  42ce0d:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  42ce11:	jae    0x42ce13
  42ce13:	add    BYTE PTR [rax+rax*1],dl
  42ce16:	(bad)  
  42ce17:	jbe    0x42ce8b
  42ce19:	gs jae 0x42ce7d
  42ce1c:	ins    DWORD PTR es:[rdi],dx
  42ce1d:	jo     0x42ce8b
  42ce1f:	gs pop rdi
  42ce21:	jbe    0x42ce88
  42ce23:	jb     0x42ce98
  42ce25:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  42ce2c:	or     BYTE PTR [rax],al
  42ce2e:	(bad)  
  42ce2f:	jbe    0x42ce90
  42ce31:	(bad)  
  42ce32:	jae    0x42cea4
  42ce34:	jb     0x42ce9f
  42ce36:	outs   dx,BYTE PTR ds:[rsi]
  42ce37:	je     0x42ce9f
  42ce39:	add    BYTE PTR [rax],al
  42ce3b:	add    BYTE PTR [rbx],bl
  42ce3d:	add    BYTE PTR [rcx+0x76],ah
  42ce40:	pop    rdi
  42ce41:	(bad)  
  42ce42:	jo     0x42ceb6
  42ce44:	imul   ebp,DWORD PTR [rsi+0x74],0x7070615f
  42ce4b:	outs   dx,BYTE PTR gs:[rsi]
  42ce4d:	fs pop rdi
  42ce4f:	fs (bad) 
  42ce51:	je     0x42ceb4
  42ce53:	add    BYTE PTR [rax+rax*1],bl
  42ce56:	(bad)  
  42ce57:	jbe    0x42ceb8
  42ce59:	(bad)  
  42ce5a:	jo     0x42cece
  42ce5c:	imul   ebp,DWORD PTR [rsi+0x74],0x6168635f
  42ce63:	outs   dx,BYTE PTR ds:[rsi]
  42ce64:	outs   dx,BYTE PTR ds:[rsi]
  42ce65:	gs ins BYTE PTR es:[rdi],dx
  42ce67:	pop    rdi
  42ce68:	ins    BYTE PTR es:[rdi],dx
  42ce69:	(bad)  
  42ce6a:	jns    0x42cedb
  42ce6c:	jne    0x42cee2
  42ce6e:	add    BYTE PTR [rax],al
  42ce70:	sbb    eax,0x5f766100
  42ce75:	(bad)  
  42ce76:	jo     0x42ceea
  42ce78:	imul   ebp,DWORD PTR [rsi+0x74],0x6168635f
  42ce7f:	jb     0x42cef4
  42ce81:	add    BYTE PTR [rax],al
  42ce83:	add    BYTE PTR [rsi],bl
  42ce85:	add    BYTE PTR [rcx+0x76],ah
  42ce88:	pop    rdi
  42ce89:	(bad)  
  42ce8a:	jo     0x42cefe
  42ce8c:	imul   ebp,DWORD PTR [rsi+0x74],0x656c635f
  42ce93:	(bad)  
  42ce94:	jb     0x42ce96
  42ce96:	add    BYTE PTR [rax],al
  42ce98:	and    BYTE PTR [rax],al
  42ce9a:	(bad)  
  42ce9b:	jbe    0x42cefc
  42ce9d:	(bad)  
  42ce9e:	jo     0x42cf12
  42cea0:	imul   ebp,DWORD PTR [rsi+0x74],0x6e69665f
  42cea7:	(bad)  
  42cea8:	ins    BYTE PTR es:[rdi],dx
  42cea9:	imul   edi,DWORD PTR [rdx+0x65],0x0
  42ceb0:	and    al,BYTE PTR [rax]
  42ceb2:	(bad)  
  42ceb3:	jbe    0x42cf14
  42ceb5:	(bad)  
  42ceb6:	jo     0x42cf2a
  42ceb8:	imul   ebp,DWORD PTR [rsi+0x74],0x696e695f
  42cebf:	je     0x42cec1
  42cec1:	add    BYTE PTR [rax],al
  42cec3:	add    BYTE PTR [rip+0x5f766100],ah        # 0x5fb92fc9
  42cec9:	(bad)  
  42ceca:	jo     0x42cf3e
  42cecc:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  42ced3:	add    BYTE PTR [rax+rax*1],dh
  42ced6:	(bad)  
  42ced7:	jbe    0x42cf38
  42ced9:	movsxd esp,DWORD PTR [rcx+0x6c]
  42cedc:	ins    BYTE PTR es:[rdi],dx
  42cedd:	outs   dx,DWORD PTR ds:[rsi]
  42cede:	movsxd eax,DWORD PTR [rax]
  42cee0:	(bad)  
  42cee1:	add    BYTE PTR [rcx+0x76],ah
  42cee4:	pop    rdi
  42cee5:	movsxd ebp,DWORD PTR [rax+0x72]
  42cee8:	outs   dx,DWORD PTR ds:[rsi]
  42cee9:	ins    DWORD PTR es:[rdi],dx
  42ceea:	(bad)  
  42ceeb:	pop    rdi
  42ceec:	ins    BYTE PTR es:[rdi],dx
  42ceed:	outs   dx,DWORD PTR ds:[rsi]
  42ceee:	movsxd esp,DWORD PTR [rcx+0x74]
  42cef1:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d616e5f
  42cef8:	add    BYTE PTR gs:[rax],al
  42cefb:	add    BYTE PTR [rax+0x0],al
  42cefe:	(bad)  
  42ceff:	jbe    0x42cf60
  42cf01:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42cf04:	outs   dx,DWORD PTR ds:[rsi]
  42cf05:	jb     0x42cf66
  42cf07:	jo     0x42cf7b
  42cf09:	imul   ebp,DWORD PTR [rbp+0x61],0x73656972
  42cf10:	pop    rdi
  42cf11:	outs   dx,BYTE PTR ds:[rsi]
  42cf12:	(bad)  
  42cf13:	ins    DWORD PTR es:[rdi],dx
  42cf14:	add    BYTE PTR gs:[rax],al
  42cf17:	add    BYTE PTR [rcx+0x0],al
  42cf1a:	(bad)  
  42cf1b:	jbe    0x42cf7c
  42cf1d:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42cf20:	outs   dx,DWORD PTR ds:[rsi]
  42cf21:	jb     0x42cf82
  42cf23:	jb     0x42cf86
  42cf25:	outs   dx,BYTE PTR ds:[rsi]
  42cf26:	addr32 gs pop rdi
  42cf29:	outs   dx,BYTE PTR ds:[rsi]
  42cf2a:	(bad)  
  42cf2b:	ins    DWORD PTR es:[rdi],dx
  42cf2c:	add    BYTE PTR gs:[rax],al
  42cf2f:	add    BYTE PTR [rbx+0x0],al
  42cf32:	(bad)  
  42cf33:	jbe    0x42cf94
  42cf35:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42cf38:	outs   dx,DWORD PTR ds:[rsi]
  42cf39:	jb     0x42cf9a
  42cf3b:	je     0x42cfaf
  42cf3d:	(bad)  
  42cf3e:	outs   dx,BYTE PTR ds:[rsi]
  42cf3f:	jae    0x42cfa7
  42cf41:	gs jb  0x42cfa3
  42cf44:	outs   dx,BYTE PTR ds:[rsi]
  42cf45:	(bad)  
  42cf46:	ins    DWORD PTR es:[rdi],dx
  42cf47:	add    BYTE PTR gs:[rax],al
  42cf4a:	add    BYTE PTR [rax],al
  42cf4c:	push   rbx
  42cf4d:	add    BYTE PTR [rcx+0x76],ah
  42cf50:	pop    rdi
  42cf51:	imul   esp,DWORD PTR fs:[rbx+0x74],0x706f635f
  42cf59:	jns    0x42cf5b
  42cf5b:	add    BYTE PTR [rbp+0x0],dl
  42cf5e:	(bad)  
  42cf5f:	jbe    0x42cfc0
  42cf61:	imul   esp,DWORD PTR fs:[rbx+0x74],0x6572665f
  42cf69:	add    BYTE PTR gs:[rax],al
  42cf6c:	push   rsi
  42cf6d:	add    BYTE PTR [rcx+0x76],ah
  42cf70:	pop    rdi
  42cf71:	imul   esp,DWORD PTR fs:[rbx+0x74],0x7465675f
  42cf79:	add    BYTE PTR [rax],al
  42cf7b:	add    BYTE PTR [rax+0x0],bl
  42cf7e:	(bad)  
  42cf7f:	jbe    0x42cfe0
  42cf81:	imul   esp,DWORD PTR fs:[rbx+0x74],0x7261705f
  42cf89:	jae    0x42cff0
  42cf8b:	pop    rdi
  42cf8c:	jae    0x42d002
  42cf8e:	jb     0x42cff9
  42cf90:	outs   dx,BYTE PTR ds:[rsi]
  42cf91:	add    BYTE PTR [eax],al
  42cf94:	pop    rcx
  42cf95:	add    BYTE PTR [rcx+0x76],ah
  42cf98:	pop    rdi
  42cf99:	imul   esp,DWORD PTR fs:[rbx+0x74],0x7465735f
  42cfa1:	add    BYTE PTR [rax],al
  42cfa3:	add    BYTE PTR [rbp+0x0],bl
  42cfa6:	(bad)  
  42cfa7:	jbe    0x42d008
  42cfa9:	imul   esi,DWORD PTR fs:[rbx+0x70],0x5f79616c
  42cfb1:	jb     0x42d022
  42cfb3:	je     0x42d016
  42cfb5:	je     0x42d020
  42cfb7:	outs   dx,DWORD PTR ds:[rsi]
  42cfb8:	outs   dx,BYTE PTR ds:[rsi]
  42cfb9:	pop    rdi
  42cfba:	addr32 gs je 0x42cfbe
  42cfbe:	add    BYTE PTR [rax],al
  42cfc0:	jle    0x42cfc2
  42cfc2:	(bad)  
  42cfc3:	jbe    0x42d024
  42cfc5:	outs   dx,WORD PTR ds:[rsi]
  42cfc7:	jb     0x42d02c
  42cfc9:	gs pop rdi
  42cfcb:	movsxd esi,DWORD PTR [rax+0x75]
  42cfce:	pop    rdi
  42cfcf:	data16 ins BYTE PTR es:[rdi],dx
  42cfd1:	(bad)  
  42cfd2:	addr32 jae 0x42cfd5
  42cfd5:	add    BYTE PTR [rax],al
  42cfd7:	add    BYTE PTR [rdi+0x0],bh
  42cfda:	(bad)  
  42cfdb:	jbe    0x42d03c
  42cfdd:	data16 jb 0x42d041
  42cfe0:	ins    DWORD PTR es:[rdi],dx
  42cfe1:	gs pop rdi
  42cfe3:	(bad)  
  42cfe4:	ins    BYTE PTR es:[rdi],dx
  42cfe5:	ins    BYTE PTR es:[rdi],dx
  42cfe6:	outs   dx,DWORD PTR ds:[rsi]
  42cfe7:	movsxd eax,DWORD PTR [rax]
  42cfe9:	add    BYTE PTR [rax],al
  42cfeb:	add    BYTE PTR [rbx+0x5f766100],al
  42cff1:	data16 jb 0x42d055
  42cff4:	ins    DWORD PTR es:[rdi],dx
  42cff5:	gs pop rdi
  42cff7:	data16 jb 0x42d05f
  42cffa:	add    BYTE PTR gs:[rax+rax*1+0x665f7661],al
  42d002:	jb     0x42d065
  42d004:	ins    DWORD PTR es:[rdi],dx
  42d005:	gs pop rdi
  42d007:	addr32 gs je 0x42d06a
  42d00b:	(bad)  
  42d00c:	gs jae 0x42d083
  42d00f:	pop    rdi
  42d010:	data16 outs dx,WORD PTR gs:[rsi]
  42d014:	jb     0x42d08a
  42d016:	pop    rdi
  42d017:	je     0x42d082
  42d019:	ins    DWORD PTR es:[rdi],dx
  42d01a:	gs jae 0x42d091
  42d01d:	(bad)  
  42d01e:	ins    DWORD PTR es:[rdi],dx
  42d01f:	jo     0x42d021
  42d021:	add    BYTE PTR [rax],al
  42d023:	add    BYTE PTR [rsi+0x5f766100],al
  42d029:	data16 jb 0x42d08d
  42d02c:	ins    DWORD PTR es:[rdi],dx
  42d02d:	gs pop rdi
  42d02f:	addr32 gs je 0x42d092
  42d033:	movsxd ebp,DWORD PTR [rax+0x61]
  42d036:	outs   dx,BYTE PTR ds:[rsi]
  42d037:	outs   dx,BYTE PTR ds:[rsi]
  42d038:	gs ins BYTE PTR es:[rdi],dx
  42d03a:	pop    rdi
  42d03b:	ins    BYTE PTR es:[rdi],dx
  42d03c:	(bad)  
  42d03d:	jns    0x42d0ae
  42d03f:	jne    0x42d0b5
  42d041:	add    BYTE PTR [rax],al
  42d043:	add    BYTE PTR [rdi+0x5f766100],al
  42d049:	data16 jb 0x42d0ad
  42d04c:	ins    DWORD PTR es:[rdi],dx
  42d04d:	gs pop rdi
  42d04f:	addr32 gs je 0x42d0b2
  42d053:	movsxd ebp,DWORD PTR [rax+0x61]
  42d056:	outs   dx,BYTE PTR ds:[rsi]
  42d057:	outs   dx,BYTE PTR ds:[rsi]
  42d058:	gs ins BYTE PTR es:[rdi],dx
  42d05a:	jae    0x42d05c
  42d05c:	mov    eax,DWORD PTR [rax]
  42d05e:	(bad)  
  42d05f:	jbe    0x42d0c0
  42d061:	data16 jb 0x42d0c5
  42d064:	ins    DWORD PTR es:[rdi],dx
  42d065:	gs pop rdi
  42d067:	addr32 gs je 0x42d0ca
  42d06b:	ins    DWORD PTR es:[rdi],dx
  42d06c:	gs je  0x42d0d0
  42d06f:	fs (bad) 
  42d071:	je     0x42d0d4
  42d073:	add    BYTE PTR [rax+rax*1+0x665f7661],cl
  42d07a:	jb     0x42d0dd
  42d07c:	ins    DWORD PTR es:[rdi],dx
  42d07d:	gs pop rdi
  42d07f:	addr32 gs je 0x42d0e2
  42d083:	jo     0x42d0f0
  42d085:	je     0x42d0e6
  42d087:	fs jne 0x42d0fc
  42d08a:	(bad)  
  42d08b:	je     0x42d0f6
  42d08d:	outs   dx,DWORD PTR ds:[rsi]
  42d08e:	outs   dx,BYTE PTR ds:[rsi]
  42d08f:	add    BYTE PTR [rbp+0x5f766100],cl
  42d095:	data16 jb 0x42d0f9
  42d098:	ins    DWORD PTR es:[rdi],dx
  42d099:	gs pop rdi
  42d09b:	addr32 gs je 0x42d0fe
  42d09f:	jo     0x42d10c
  42d0a1:	je     0x42d102
  42d0a3:	jo     0x42d114
  42d0a5:	jae    0x42d0a7
  42d0a7:	add    BYTE PTR [rsi+0x5f766100],cl
  42d0ad:	data16 jb 0x42d111
  42d0b0:	ins    DWORD PTR es:[rdi],dx
  42d0b1:	gs pop rdi
  42d0b3:	addr32 gs je 0x42d116
  42d0b7:	jo     0x42d124
  42d0b9:	je     0x42d11a
  42d0bb:	jae    0x42d126
  42d0bd:	jp     0x42d124
  42d0bf:	add    BYTE PTR [rbp+0x5f766100],ah
  42d0c5:	data16 jb 0x42d129
  42d0c8:	ins    DWORD PTR es:[rdi],dx
  42d0c9:	gs pop rdi
  42d0cb:	jae    0x42d136
  42d0cd:	fs gs pop rdi
  42d0d0:	fs (bad) 
  42d0d2:	je     0x42d135
  42d0d4:	pop    rdi
  42d0d5:	outs   dx,BYTE PTR ds:[rsi]
  42d0d6:	(bad)  
  42d0d7:	ins    DWORD PTR es:[rdi],dx
  42d0d8:	add    BYTE PTR gs:[rax],al
  42d0db:	add    BYTE PTR [rdi+0x5f766100],ah
  42d0e1:	data16 jb 0x42d149
  42d0e4:	add    BYTE PTR gs:[rax],al
  42d0e7:	add    BYTE PTR [rax+0x5f766100],ch
  42d0ed:	data16 jb 0x42d155
  42d0f0:	gs jo  0x42d0f3
  42d0f3:	add    BYTE PTR [rbx+0x5f766100],ch
  42d0f9:	addr32 gs je 0x42d15c
  42d0fd:	(bad)  
  42d0fe:	imul   esi,DWORD PTR [rbx+rsi*2+0x5f],0x5f726570
  42d106:	jo     0x42d171
  42d108:	js     0x42d16f
  42d10a:	ins    BYTE PTR es:[rdi],dx
  42d10b:	add    BYTE PTR [rbp+0x5f766100],ch
  42d111:	addr32 gs je 0x42d174
  42d115:	movsxd ebp,DWORD PTR [rax+0x61]
  42d118:	outs   dx,BYTE PTR ds:[rsi]
  42d119:	outs   dx,BYTE PTR ds:[rsi]
  42d11a:	gs ins BYTE PTR es:[rdi],dx
  42d11c:	pop    rdi
  42d11d:	fs gs jae 0x42d184
  42d121:	jb     0x42d18c
  42d123:	jo     0x42d199
  42d125:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  42d12c:	mov    cl,0x0
  42d12e:	(bad)  
  42d12f:	jbe    0x42d190
  42d131:	addr32 gs je 0x42d194
  42d135:	movsxd ebp,DWORD PTR [rax+0x61]
  42d138:	outs   dx,BYTE PTR ds:[rsi]
  42d139:	outs   dx,BYTE PTR ds:[rsi]
  42d13a:	gs ins BYTE PTR es:[rdi],dx
  42d13c:	pop    rdi
  42d13d:	ins    BYTE PTR es:[rdi],dx
  42d13e:	(bad)  
  42d13f:	jns    0x42d1b0
  42d141:	jne    0x42d1b7
  42d143:	pop    rdi
  42d144:	jae    0x42d1ba
  42d146:	jb     0x42d1b1
  42d148:	outs   dx,BYTE PTR ds:[rsi]
  42d149:	add    BYTE PTR [eax],al
  42d14c:	mov    dl,0x0
  42d14e:	(bad)  
  42d14f:	jbe    0x42d1b0
  42d151:	addr32 gs je 0x42d1b4
  42d155:	movsxd ebp,DWORD PTR [rax+0x61]
  42d158:	outs   dx,BYTE PTR ds:[rsi]
  42d159:	outs   dx,BYTE PTR ds:[rsi]
  42d15a:	gs ins BYTE PTR es:[rdi],dx
  42d15c:	pop    rdi
  42d15d:	outs   dx,BYTE PTR ds:[rsi]
  42d15e:	(bad)  
  42d15f:	ins    DWORD PTR es:[rdi],dx
  42d160:	add    BYTE PTR gs:[rax],al
  42d163:	add    BYTE PTR [rbx+0x5f766100],dh
  42d169:	addr32 gs je 0x42d1cc
  42d16d:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42d170:	outs   dx,DWORD PTR ds:[rsi]
  42d171:	jb     0x42d1e6
  42d173:	jo     0x42d1d6
  42d175:	movsxd esp,DWORD PTR [rbp+0x5f]
  42d178:	outs   dx,BYTE PTR ds:[rsi]
  42d179:	(bad)  
  42d17a:	ins    DWORD PTR es:[rdi],dx
  42d17b:	add    BYTE PTR gs:[rax],al
  42d17e:	add    BYTE PTR [rax],al
  42d180:	mov    ah,0x0
  42d182:	(bad)  
  42d183:	jbe    0x42d1e4
  42d185:	addr32 gs je 0x42d1e8
  42d189:	movsxd esi,DWORD PTR [rax+0x75]
  42d18c:	pop    rdi
  42d18d:	data16 ins BYTE PTR es:[rdi],dx
  42d18f:	(bad)  
  42d190:	addr32 jae 0x42d193
  42d193:	add    BYTE PTR [rax+0x5f766100],bh
  42d199:	addr32 gs je 0x42d1fc
  42d19d:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  42d1a1:	outs   dx,BYTE PTR ds:[rsi]
  42d1a2:	pop    rdi
  42d1a3:	movsxd ebp,DWORD PTR [rdi+0x6c]
  42d1a6:	outs   dx,DWORD PTR ds:[rsi]
  42d1a7:	jb     0x42d208
  42d1a9:	outs   dx,BYTE PTR ds:[rsi]
  42d1aa:	(bad)  
  42d1ab:	ins    DWORD PTR es:[rdi],dx
  42d1ac:	add    BYTE PTR gs:[rax],al
  42d1af:	add    BYTE PTR [rcx+0x5f766100],bh
  42d1b5:	addr32 gs je 0x42d218
  42d1b9:	ins    DWORD PTR es:[rdi],dx
  42d1ba:	gs imul esp,DWORD PTR fs:[rcx+0x5f],0x65707974
  42d1c3:	pop    rdi
  42d1c4:	jae    0x42d23a
  42d1c6:	jb     0x42d231
  42d1c8:	outs   dx,BYTE PTR ds:[rsi]
  42d1c9:	add    BYTE PTR [eax],al
  42d1cc:	mov    esp,0x5f766100
  42d1d1:	addr32 gs je 0x42d234
  42d1d5:	jo     0x42d240
  42d1d7:	movsxd esi,DWORD PTR [rbp+rsi*2+0x72]
  42d1db:	gs pop rdi
  42d1dd:	je     0x42d258
  42d1df:	jo     0x42d246
  42d1e1:	pop    rdi
  42d1e2:	movsxd ebp,DWORD PTR [rax+0x61]
  42d1e5:	jb     0x42d1e7
  42d1e7:	add    BYTE PTR [rdi+0x5f766100],bh
  42d1ed:	addr32 gs je 0x42d250
  42d1f1:	jo     0x42d25c
  42d1f3:	js     0x42d254
  42d1f5:	ins    WORD PTR es:[rdi],dx
  42d1f7:	je     0x42d258
  42d1f9:	outs   dx,BYTE PTR ds:[rsi]
  42d1fa:	(bad)  
  42d1fb:	ins    DWORD PTR es:[rdi],dx
  42d1fc:	add    BYTE PTR gs:[rax],al
  42d1ff:	add    ch,al
  42d201:	add    BYTE PTR [rcx+0x76],ah
  42d204:	pop    rdi
  42d205:	addr32 gs je 0x42d268
  42d209:	jae    0x42d26c
  42d20b:	ins    DWORD PTR es:[rdi],dx
  42d20c:	jo     0x42d27a
  42d20e:	gs pop rdi
  42d210:	ins    WORD PTR es:[rdi],dx
  42d212:	je     0x42d273
  42d214:	outs   dx,BYTE PTR ds:[rsi]
  42d215:	(bad)  
  42d216:	ins    DWORD PTR es:[rdi],dx
  42d217:	add    BYTE PTR gs:[rax],al
  42d21a:	add    BYTE PTR [rax],al
  42d21c:	mov    BYTE PTR [rax],0x61
  42d21f:	jbe    0x42d280
  42d221:	addr32 gs je 0x42d284
  42d225:	jae    0x42d288
  42d227:	ins    DWORD PTR es:[rdi],dx
  42d228:	jo     0x42d296
  42d22a:	gs pop rdi
  42d22c:	ins    WORD PTR es:[rdi],dx
  42d22e:	je     0x42d28f
  42d230:	jae    0x42d2a6
  42d232:	jb     0x42d29d
  42d234:	outs   dx,BYTE PTR ds:[rsi]
  42d235:	add    BYTE PTR [eax],al
  42d238:	mov    DWORD PTR [rax],0x675f7661
  42d23e:	gs je  0x42d2a0
  42d241:	jae    0x42d2b7
  42d243:	(bad)  
  42d244:	outs   dx,BYTE PTR ds:[rsi]
  42d245:	fs (bad) 
  42d247:	jb     0x42d2ad
  42d249:	pop    rdi
  42d24a:	movsxd ebp,DWORD PTR [rax+0x61]
  42d24d:	outs   dx,BYTE PTR ds:[rsi]
  42d24e:	outs   dx,BYTE PTR ds:[rsi]
  42d24f:	gs ins BYTE PTR es:[rdi],dx
  42d251:	pop    rdi
  42d252:	ins    BYTE PTR es:[rdi],dx
  42d253:	(bad)  
  42d254:	jns    0x42d2c5
  42d256:	jne    0x42d2cc
  42d258:	add    BYTE PTR [rax],al
  42d25a:	add    BYTE PTR [rax],al
  42d25c:	retf   0x6100
  42d25f:	jbe    0x42d2c0
  42d261:	addr32 gs je 0x42d2c4
  42d265:	je     0x42d2d6
  42d267:	imul   esp,DWORD PTR [rbp+0x6e],0x0
  42d26b:	add    dh,cl
  42d26d:	add    BYTE PTR [rcx+0x76],ah
  42d270:	pop    rdi
  42d271:	push   0x5f687361
  42d276:	(bad)  
  42d277:	ins    BYTE PTR es:[rdi],dx
  42d278:	ins    BYTE PTR es:[rdi],dx
  42d279:	outs   dx,DWORD PTR ds:[rsi]
  42d27a:	movsxd eax,DWORD PTR [rax]
  42d27c:	rol    BYTE PTR [rax],cl
  42d27e:	(bad)  
  42d27f:	jbe    0x42d2e0
  42d281:	push   0x5f687361
  42d286:	imul   bp,WORD PTR [rsi+0x61],0x5f6c
  42d28c:	push   0xffffffffd3007865
  42d291:	add    BYTE PTR [rcx+0x76],ah
  42d294:	pop    rdi
  42d295:	push   0x5f687361
  42d29a:	data16 jb 0x42d302
  42d29d:	gs jo  0x42d2a0
  42d2a0:	(bad)  
  42d2a1:	add    BYTE PTR [rcx+0x76],ah
  42d2a4:	pop    rdi
  42d2a5:	push   0x5f687361
  42d2aa:	addr32 gs je 0x42d30d
  42d2ae:	outs   dx,BYTE PTR ds:[rsi]
  42d2af:	(bad)  
  42d2b0:	ins    DWORD PTR es:[rdi],dx
  42d2b1:	add    BYTE PTR gs:[rax],al
  42d2b4:	(bad)  
  42d2b5:	add    BYTE PTR [rcx+0x76],ah
  42d2b8:	pop    rdi
  42d2b9:	push   0x5f687361
  42d2be:	imul   ebp,DWORD PTR [rsi+0x69],0xd7000074
  42d2c5:	add    BYTE PTR [rcx+0x76],ah
  42d2c8:	pop    rdi
  42d2c9:	push   0x5f687361
  42d2ce:	outs   dx,BYTE PTR ds:[rsi]
  42d2cf:	(bad)  
  42d2d0:	ins    DWORD PTR es:[rdi],dx
  42d2d1:	gs jae 0x42d2d4
  42d2d4:	fadd   DWORD PTR [rax]
  42d2d6:	(bad)  
  42d2d7:	jbe    0x42d338
  42d2d9:	push   0x5f687361
  42d2de:	jne    0x42d350
  42d2e0:	fs (bad) 
  42d2e2:	je     0x42d349
  42d2e4:	add    BYTE PTR [rax],al
  42d2e6:	add    BYTE PTR [rax],al
  42d2e8:	icebp  
  42d2e9:	add    BYTE PTR [rcx+0x76],ah
  42d2ec:	pop    rdi
  42d2ed:	ins    BYTE PTR es:[rdi],dx
  42d2ee:	outs   dx,DWORD PTR ds:[rsi]
  42d2ef:	add    BYTE PTR [eax],al
  42d2f2:	add    BYTE PTR [rax],al
  42d2f4:	hlt    
  42d2f5:	add    BYTE PTR [rcx+0x76],ah
  42d2f8:	pop    rdi
  42d2f9:	ins    BYTE PTR es:[rdi],dx
  42d2fa:	outs   dx,DWORD PTR ds:[rsi]
  42d2fb:	addr32 pop rdi
  42d2fd:	fs gs data16 (bad) 
  42d301:	jne    0x42d36f
  42d303:	je     0x42d364
  42d305:	movsxd esp,DWORD PTR [rcx+0x6c]
  42d308:	ins    BYTE PTR es:[rdi],dx
  42d309:	(bad)  
  42d30b:	movsxd ebp,DWORD PTR [rbx+0x0]
  42d30e:	add    BYTE PTR [rax],al
  42d310:	cmc    
  42d311:	add    BYTE PTR [rcx+0x76],ah
  42d314:	pop    rdi
  42d315:	ins    BYTE PTR es:[rdi],dx
  42d316:	outs   dx,DWORD PTR ds:[rsi]
  42d317:	addr32 pop rdi
  42d319:	outs   dx,WORD PTR ds:[rsi]
  42d31b:	jb     0x42d38a
  42d31d:	(bad)  
  42d31e:	je     0x42d37f
  42d320:	ins    BYTE PTR es:[rdi],dx
  42d321:	imul   ebp,DWORD PTR [rsi+0x65],0x0
  42d328:	test   BYTE PTR [rax],0x61
  42d32b:	jbe    0x42d38c
  42d32d:	ins    BYTE PTR es:[rdi],dx
  42d32e:	outs   dx,DWORD PTR ds:[rsi]
  42d32f:	addr32 pop rdi
  42d331:	addr32 gs je 0x42d394
  42d335:	data16 ins BYTE PTR es:[rdi],dx
  42d337:	(bad)  
  42d338:	addr32 jae 0x42d33b
  42d33b:	add    bh,dh
  42d33d:	add    BYTE PTR [rcx+0x76],ah
  42d340:	pop    rdi
  42d341:	ins    BYTE PTR es:[rdi],dx
  42d342:	outs   dx,DWORD PTR ds:[rsi]
  42d343:	addr32 pop rdi
  42d345:	addr32 gs je 0x42d3a8
  42d349:	ins    BYTE PTR es:[rdi],dx
  42d34a:	gs jbe 0x42d3b2
  42d34d:	ins    BYTE PTR es:[rdi],dx
  42d34e:	add    BYTE PTR [rax],al
  42d350:	clc    
  42d351:	add    BYTE PTR [rcx+0x76],ah
  42d354:	pop    rdi
  42d355:	ins    BYTE PTR es:[rdi],dx
  42d356:	outs   dx,DWORD PTR ds:[rsi]
  42d357:	addr32 pop rdi
  42d359:	jae    0x42d3c0
  42d35b:	je     0x42d3bc
  42d35d:	movsxd esp,DWORD PTR [rcx+0x6c]
  42d360:	ins    BYTE PTR es:[rdi],dx
  42d361:	(bad)  
  42d363:	movsxd ebp,DWORD PTR [rbx+0x0]
  42d366:	add    BYTE PTR [rax],al
  42d368:	stc    
  42d369:	add    BYTE PTR [rcx+0x76],ah
  42d36c:	pop    rdi
  42d36d:	ins    BYTE PTR es:[rdi],dx
  42d36e:	outs   dx,DWORD PTR ds:[rsi]
  42d36f:	addr32 pop rdi
  42d371:	jae    0x42d3d8
  42d373:	je     0x42d3d4
  42d375:	data16 ins BYTE PTR es:[rdi],dx
  42d377:	(bad)  
  42d378:	addr32 jae 0x42d37b
  42d37b:	add    dl,bh
  42d37d:	add    BYTE PTR [rcx+0x76],ah
  42d380:	pop    rdi
  42d381:	ins    BYTE PTR es:[rdi],dx
  42d382:	outs   dx,DWORD PTR ds:[rsi]
  42d383:	addr32 pop rdi
  42d385:	jae    0x42d3ec
  42d387:	je     0x42d3e8
  42d389:	ins    BYTE PTR es:[rdi],dx
  42d38a:	gs jbe 0x42d3f2
  42d38d:	ins    BYTE PTR es:[rdi],dx
  42d38e:	add    BYTE PTR [rax],al
  42d390:	cld    
  42d391:	add    BYTE PTR [rcx+0x76],ah
  42d394:	pop    rdi
  42d395:	ins    DWORD PTR es:[rdi],dx
  42d396:	(bad)  
  42d397:	ins    BYTE PTR es:[rdi],dx
  42d398:	ins    BYTE PTR es:[rdi],dx
  42d399:	outs   dx,DWORD PTR ds:[rsi]
  42d39a:	movsxd eax,DWORD PTR [rax]
  42d39c:	std    
  42d39d:	add    BYTE PTR [rcx+0x76],ah
  42d3a0:	pop    rdi
  42d3a1:	ins    DWORD PTR es:[rdi],dx
  42d3a2:	(bad)  
  42d3a3:	ins    BYTE PTR es:[rdi],dx
  42d3a4:	ins    BYTE PTR es:[rdi],dx
  42d3a5:	outs   dx,DWORD PTR ds:[rsi]
  42d3a6:	movsxd edi,DWORD PTR [rdx+0x0]
  42d3a9:	add    BYTE PTR [rax],al
  42d3ab:	add    bh,bh
  42d3ad:	add    BYTE PTR [rcx+0x76],ah
  42d3b0:	pop    rdi
  42d3b1:	ins    DWORD PTR es:[rdi],dx
  42d3b2:	(bad)  
  42d3b3:	je     0x42d418
  42d3b5:	push   0x6d616e5f
  42d3ba:	add    BYTE PTR gs:[rax],al
  42d3bd:	add    DWORD PTR [rcx+0x76],esp
  42d3c0:	pop    rdi
  42d3c1:	ins    DWORD PTR es:[rdi],dx
  42d3c2:	(bad)  
  42d3c3:	js     0x42d424
  42d3c5:	(bad)  
  42d3c6:	ins    BYTE PTR es:[rdi],dx
  42d3c7:	ins    BYTE PTR es:[rdi],dx
  42d3c8:	outs   dx,DWORD PTR ds:[rsi]
  42d3c9:	movsxd eax,DWORD PTR [rax]
  42d3cb:	add    BYTE PTR [rcx],dl
  42d3cd:	add    DWORD PTR [rcx+0x76],esp
  42d3d0:	pop    rdi
  42d3d1:	outs   dx,DWORD PTR ds:[rsi]
  42d3d2:	jo     0x42d448
  42d3d4:	pop    rdi
  42d3d5:	movsxd ebp,DWORD PTR [rax+0x69]
  42d3d8:	ins    BYTE PTR es:[rdi],dx
  42d3d9:	fs pop rdi
  42d3db:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  42d3df:	jae    0x42d440
  42d3e1:	outs   dx,BYTE PTR ds:[rsi]
  42d3e2:	gs js  0x42d459
  42d3e5:	add    BYTE PTR [rax],al
  42d3e7:	add    BYTE PTR [rdx],bl
  42d3e9:	add    DWORD PTR [rcx+0x76],esp
  42d3ec:	pop    rdi
  42d3ed:	outs   dx,DWORD PTR ds:[rsi]
  42d3ee:	jo     0x42d464
  42d3f0:	pop    rdi
  42d3f1:	imul   bp,WORD PTR [rsi+0x64],0x0
  42d3f7:	add    BYTE PTR [rip+0x5f766101],bl        # 0x5fb934fe
  42d3fd:	outs   dx,DWORD PTR ds:[rsi]
  42d3fe:	jo     0x42d474
  42d400:	pop    rdi
  42d401:	data16 jb 0x42d469
  42d404:	add    BYTE PTR gs:[rax],al
  42d407:	add    BYTE PTR [rdi],bl
  42d409:	add    DWORD PTR [rcx+0x76],esp
  42d40c:	pop    rdi
  42d40d:	outs   dx,DWORD PTR ds:[rsi]
  42d40e:	jo     0x42d484
  42d410:	pop    rdi
  42d411:	addr32 gs je 0x42d415
  42d415:	add    BYTE PTR [rax],al
  42d417:	add    BYTE PTR [rip+0x5f766101],ah        # 0x5fb9351e
  42d41d:	outs   dx,DWORD PTR ds:[rsi]
  42d41e:	jo     0x42d494
  42d420:	pop    rdi
  42d421:	addr32 gs je 0x42d484
  42d425:	imul   esp,DWORD PTR [rbp+0x79],0x5f
  42d429:	jbe    0x42d48c
  42d42b:	ins    BYTE PTR es:[rdi],dx
  42d42c:	jne    0x42d493
  42d42e:	add    BYTE PTR [rax],al
  42d430:	sub    al,0x1
  42d432:	(bad)  
  42d433:	jbe    0x42d494
  42d435:	outs   dx,DWORD PTR ds:[rsi]
  42d436:	jo     0x42d4ac
  42d438:	pop    rdi
  42d439:	outs   dx,BYTE PTR ds:[rsi]
  42d43a:	gs js  0x42d4b1
  42d43d:	add    BYTE PTR [rax],al
  42d43f:	add    BYTE PTR [rcx],dh
  42d441:	add    DWORD PTR [rcx+0x76],esp
  42d444:	pop    rdi
  42d445:	outs   dx,DWORD PTR ds:[rsi]
  42d446:	jo     0x42d4bc
  42d448:	pop    rdi
  42d449:	jae    0x42d4b0
  42d44b:	je     0x42d44d
  42d44d:	add    BYTE PTR [rax],al
  42d44f:	add    BYTE PTR [rcx+rax*1],dh
  42d452:	(bad)  
  42d453:	jbe    0x42d4b4
  42d455:	outs   dx,DWORD PTR ds:[rsi]
  42d456:	jo     0x42d4cc
  42d458:	pop    rdi
  42d459:	jae    0x42d4c0
  42d45b:	je     0x42d4bc
  42d45d:	fs gs data16 (bad) 
  42d461:	jne    0x42d4cf
  42d463:	je     0x42d4d8
  42d465:	add    BYTE PTR [rax],al
  42d467:	add    BYTE PTR [rcx+0x1],al
  42d46a:	(bad)  
  42d46b:	jbe    0x42d4cc
  42d46d:	outs   dx,DWORD PTR ds:[rsi]
  42d46e:	jo     0x42d4e4
  42d470:	pop    rdi
  42d471:	jae    0x42d4db
  42d473:	outs   dx,DWORD PTR ds:[rsi]
  42d474:	ja     0x42d4a8
  42d476:	add    BYTE PTR [rax],al
  42d478:	rex.XB add DWORD PTR [r9+0x76],esp
  42d47c:	pop    rdi
  42d47d:	jo     0x42d4e0
  42d47f:	jb     0x42d4f4
  42d481:	gs pop rdi
  42d483:	movsxd esi,DWORD PTR [rax+0x75]
  42d486:	pop    rdi
  42d487:	movsxd esp,DWORD PTR [rcx+0x70]
  42d48a:	jae    0x42d48c
  42d48c:	rex.RX add DWORD PTR [rcx+0x76],r12d
  42d490:	pop    rdi
  42d491:	jo     0x42d4f4
  42d493:	jb     0x42d508
  42d495:	gs pop rdi
  42d497:	je     0x42d502
  42d499:	ins    DWORD PTR es:[rdi],dx
  42d49a:	add    BYTE PTR gs:[rbx+0x1],cl
  42d49e:	(bad)  
  42d49f:	jbe    0x42d500
  42d4a1:	jo     0x42d50c
  42d4a3:	js     0x42d504
  42d4a5:	ins    WORD PTR es:[rdi],dx
  42d4a7:	je     0x42d508
  42d4a9:	fs gs jae 0x42d510
  42d4ad:	pop    rdi
  42d4ae:	addr32 gs je 0x42d511
  42d4b2:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x14c0000
  42d4ba:	(bad)  
  42d4bb:	jbe    0x42d51c
  42d4bd:	jo     0x42d528
  42d4bf:	js     0x42d520
  42d4c1:	ins    WORD PTR es:[rdi],dx
  42d4c3:	je     0x42d524
  42d4c5:	fs gs jae 0x42d52c
  42d4c9:	pop    rdi
  42d4ca:	outs   dx,BYTE PTR ds:[rsi]
  42d4cb:	gs js  0x42d542
  42d4ce:	add    BYTE PTR [rax],al
  42d4d0:	push   rdi
  42d4d1:	add    DWORD PTR [rcx+0x76],esp
  42d4d4:	pop    rdi
  42d4d5:	jb     0x42d53c
  42d4d7:	(bad)  
  42d4d8:	ins    BYTE PTR es:[rdi],dx
  42d4d9:	ins    BYTE PTR es:[rdi],dx
  42d4da:	outs   dx,DWORD PTR ds:[rsi]
  42d4db:	movsxd ebx,DWORD PTR [rdi+0x61]
  42d4de:	jb     0x42d552
  42d4e0:	(bad)  
  42d4e1:	jns    0x42d4e3
  42d4e3:	add    BYTE PTR [rdx+0x1],bl
  42d4e6:	(bad)  
  42d4e7:	jbe    0x42d548
  42d4e9:	jb     0x42d550
  42d4eb:	(bad)  
  42d4ec:	ins    BYTE PTR es:[rdi],dx
  42d4ed:	ins    BYTE PTR es:[rdi],dx
  42d4ee:	outs   dx,DWORD PTR ds:[rsi]
  42d4ef:	movsxd esi,DWORD PTR [rax+0x5f]
  42d4f2:	(bad)  
  42d4f3:	jb     0x42d567
  42d4f5:	(bad)  
  42d4f6:	jns    0x42d4f8
  42d4f8:	pop    rbx
  42d4f9:	add    DWORD PTR [rcx+0x76],esp
  42d4fc:	pop    rdi
  42d4fd:	jb     0x42d564
  42d4ff:	fs jne 0x42d565
  42d502:	add    BYTE PTR gs:[rsi+0x1],bl
  42d506:	(bad)  
  42d507:	jbe    0x42d568
  42d509:	jb     0x42d570
  42d50b:	jae    0x42d570
  42d50d:	(bad)  
  42d50e:	ins    BYTE PTR es:[rdi],dx
  42d50f:	gs pop rdi
  42d511:	jno    0x42d513
  42d513:	add    BYTE PTR [rdx+0x5f766101],al
  42d519:	jae    0x42d58f
  42d51b:	jb     0x42d581
  42d51d:	jne    0x42d58f
  42d51f:	add    BYTE PTR [rbx+0x5f766101],al
  42d525:	jae    0x42d59b
  42d527:	jb     0x42d58e
  42d529:	jb     0x42d59d
  42d52b:	outs   dx,DWORD PTR ds:[rsi]
  42d52c:	jb     0x42d52e
  42d52e:	add    BYTE PTR [rax],al
  42d530:	xchg   BYTE PTR [rcx],al
  42d532:	(bad)  
  42d533:	jbe    0x42d594
  42d535:	jae    0x42d5ab
  42d537:	jb     0x42d5a5
  42d539:	movsxd esp,DWORD PTR [rcx+0x74]
  42d53c:	add    BYTE PTR [rax],al
  42d53e:	add    BYTE PTR [rax],al
  42d540:	xchg   DWORD PTR [rcx],eax
  42d542:	(bad)  
  42d543:	jbe    0x42d5a4
  42d545:	jae    0x42d5bb
  42d547:	jb     0x42d5b5
  42d549:	movsxd esp,DWORD PTR [rcx+0x74]
  42d54c:	data16 add BYTE PTR [rax],al
  42d54f:	add    BYTE PTR [rax+0x5f766101],cl
  42d555:	jae    0x42d5cb
  42d557:	jb     0x42d5c5
  42d559:	movsxd esi,DWORD PTR [rax+0x79]
  42d55c:	add    BYTE PTR [rax],al
  42d55e:	add    BYTE PTR [rax],al
  42d560:	lea    eax,[rcx]
  42d562:	(bad)  
  42d563:	jbe    0x42d5c4
  42d565:	jae    0x42d5db
  42d567:	jb     0x42d5dd
  42d569:	outs   dx,DWORD PTR ds:[rsi]
  42d56a:	add    BYTE PTR fs:[rsi+0x5f766101],cl
  42d571:	jae    0x42d5e7
  42d573:	jb     0x42d5e9
  42d575:	outs   dx,DWORD PTR ds:[rsi]
  42d576:	imul   eax,DWORD PTR [rax],0xffffffa0
  42d579:	add    DWORD PTR [rcx+0x76],esp
  42d57c:	pop    rdi
  42d57d:	je     0x42d5e8
  42d57f:	ins    DWORD PTR es:[rdi],dx
  42d580:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  42d584:	gs pop rdi
  42d586:	ins    DWORD PTR es:[rdi],dx
  42d587:	(bad)  
  42d588:	imul   esp,DWORD PTR [rbp+0x5f],0x6d
  42d58c:	jo     0x42d5f3
  42d58e:	addr32 pop rdi
  42d590:	je     0x42d5f5
  42d592:	pop    rdi
  42d593:	jae    0x42d609
  42d595:	jb     0x42d600
  42d597:	outs   dx,BYTE PTR ds:[rsi]
  42d598:	add    BYTE PTR [eax],al
  42d59b:	add    BYTE PTR [rdi+0x5f766101],ch
  42d5a1:	jne    0x42d617
  42d5a3:	data16 cmp BYTE PTR [rdi+0x64],bl
  42d5a7:	movsxd ebp,DWORD PTR gs:[rdi+0x64]
  42d5ab:	add    BYTE PTR gs:[rax],al
  42d5ae:	add    BYTE PTR [rax],al
  42d5b0:	mov    BYTE PTR [rcx],0x61
  42d5b3:	jbe    0x42d62a
  42d5b5:	je     0x42d620
  42d5b7:	ins    BYTE PTR es:[rdi],dx
  42d5b8:	pop    rdi
  42d5b9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42d5bc:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42d5c2:	je     0x42d62d
  42d5c4:	outs   dx,DWORD PTR ds:[rsi]
  42d5c5:	outs   dx,BYTE PTR ds:[rsi]
  42d5c6:	add    BYTE PTR [rax],al
  42d5c8:	enter  0x6101,0x76
  42d5cc:	jne    0x42d642
  42d5ce:	imul   ebp,DWORD PTR [rdi+rbx*2+0x76],0x69737265
  42d5d6:	outs   dx,DWORD PTR ds:[rsi]
  42d5d7:	outs   dx,BYTE PTR ds:[rsi]
  42d5d8:	add    BYTE PTR [rax],al
  42d5da:	add    BYTE PTR [rax],al
  42d5dc:	add    BYTE PTR [rax],al
  42d5de:	jo     0x42d64f
  42d5e0:	jae    0x42d656
  42d5e2:	jo     0x42d656
  42d5e4:	outs   dx,DWORD PTR ds:[rsi]
  42d5e5:	movsxd ebx,DWORD PTR [rdi+0x63]
  42d5e8:	outs   dx,DWORD PTR ds:[rsi]
  42d5e9:	outs   dx,BYTE PTR ds:[rsi]
  42d5ea:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42d5f0:	je     0x42d65b
  42d5f2:	outs   dx,DWORD PTR ds:[rsi]
  42d5f3:	outs   dx,BYTE PTR ds:[rsi]
  42d5f4:	add    BYTE PTR [rax],al
  42d5f6:	add    BYTE PTR [rax],al
  42d5f8:	add    eax,DWORD PTR [rax]
  42d5fa:	jo     0x42d66b
  42d5fc:	jae    0x42d672
  42d5fe:	jo     0x42d672
  42d600:	outs   dx,DWORD PTR ds:[rsi]
  42d601:	movsxd ebx,DWORD PTR [rdi+0x76]
  42d604:	gs jb  0x42d67a
  42d607:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  42d60e:	jae    0x42d687
  42d610:	jb     0x42d671
  42d612:	(bad)  
  42d613:	ins    BYTE PTR es:[rdi],dx
  42d614:	ins    BYTE PTR es:[rdi],dx
  42d615:	outs   dx,DWORD PTR ds:[rsi]
  42d616:	movsxd eax,DWORD PTR [rax]
  42d618:	or     BYTE PTR [rax],al
  42d61a:	jae    0x42d693
  42d61c:	jb     0x42d67d
  42d61e:	data16 jb 0x42d686
  42d621:	add    BYTE PTR gs:[rax],al
  42d624:	or     DWORD PTR [rax],eax
  42d626:	jae    0x42d69f
  42d628:	jb     0x42d689
  42d62a:	addr32 gs je 0x42d68d
  42d62e:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  42d632:	jae    0x42d634
  42d634:	adc    eax,DWORD PTR [rax]
  42d636:	jae    0x42d6af
  42d638:	jb     0x42d69f
  42d63a:	jae    0x42d69d
  42d63c:	ins    DWORD PTR es:[rdi],dx
  42d63d:	jo     0x42d6ab
  42d63f:	gs pop rdi
  42d641:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42d644:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42d64a:	je     0x42d6b5
  42d64c:	outs   dx,DWORD PTR ds:[rsi]
  42d64d:	outs   dx,BYTE PTR ds:[rsi]
  42d64e:	add    BYTE PTR [rax],al
  42d650:	adc    eax,0x72777300
  42d655:	gs jae 0x42d6b9
  42d658:	ins    DWORD PTR es:[rdi],dx
  42d659:	jo     0x42d6c7
  42d65b:	gs pop rdi
  42d65d:	jbe    0x42d6c4
  42d65f:	jb     0x42d6d4
  42d661:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  42d668:	add    al,BYTE PTR [rax]
  42d66a:	jae    0x42d6e3
  42d66c:	jae    0x42d6cd
  42d66e:	(bad)  
  42d66f:	ins    BYTE PTR es:[rdi],dx
  42d670:	ins    BYTE PTR es:[rdi],dx
  42d671:	outs   dx,DWORD PTR ds:[rsi]
  42d672:	movsxd ebx,DWORD PTR [rdi+0x63]
  42d675:	outs   dx,DWORD PTR ds:[rsi]
  42d676:	outs   dx,BYTE PTR ds:[rsi]
  42d677:	je     0x42d6de
  42d679:	js     0x42d6ef
  42d67b:	add    BYTE PTR [rcx],cl
  42d67d:	add    BYTE PTR [rbx+0x77],dh
  42d680:	jae    0x42d6e1
  42d682:	data16 jb 0x42d6ea
  42d685:	rex.XB outs dx,DWORD PTR gs:[rsi]
  42d688:	outs   dx,BYTE PTR ds:[rsi]
  42d689:	je     0x42d6f0
  42d68b:	js     0x42d701
  42d68d:	add    BYTE PTR [rax],al
  42d68f:	add    BYTE PTR [rax+rax*1],dl
  42d692:	jae    0x42d70b
  42d694:	jae    0x42d6f5
  42d696:	addr32 gs je 0x42d6f9
  42d69a:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
  42d69e:	jae    0x42d6a0
  42d6a0:	(bad)  
  42d6a1:	add    BYTE PTR [rbx+0x77],dh
  42d6a4:	jae    0x42d705
  42d6a6:	imul   esi,DWORD PTR [rbx+0x53],0x6f707075
  42d6ad:	jb     0x42d723
  42d6af:	gs rex.WB outs dx,BYTE PTR fs:[rsi]
  42d6b3:	jo     0x42d72a
  42d6b5:	je     0x42d6b7
  42d6b7:	add    BYTE PTR [rax],bl
  42d6b9:	add    BYTE PTR [rbx+0x77],dh
  42d6bc:	jae    0x42d71d
  42d6be:	imul   esi,DWORD PTR [rbx+0x53],0x6f707075
  42d6c5:	jb     0x42d73b
  42d6c7:	gs fs rex.WRXB jne 0x42d740
  42d6cc:	jo     0x42d743
  42d6ce:	je     0x42d6d0
  42d6d0:	and    DWORD PTR [rax],eax
  42d6d2:	jae    0x42d74b
  42d6d4:	jae    0x42d739
  42d6d6:	(bad)  
  42d6d7:	ins    BYTE PTR es:[rdi],dx
  42d6d8:	gs pop rdi
  42d6da:	movsxd ebp,DWORD PTR [rdi+0x6e]
  42d6dd:	imul   sp,WORD PTR [rdi+0x75],0x6172
  42d6e3:	je     0x42d74e
  42d6e5:	outs   dx,DWORD PTR ds:[rsi]
  42d6e6:	outs   dx,BYTE PTR ds:[rsi]
  42d6e7:	add    BYTE PTR [rbx],ah
  42d6e9:	add    BYTE PTR [rbx+0x77],dh
  42d6ec:	jae    0x42d751
  42d6ee:	(bad)  
  42d6ef:	ins    BYTE PTR es:[rdi],dx
  42d6f0:	gs pop rdi
  42d6f2:	jbe    0x42d759
  42d6f4:	jb     0x42d769
  42d6f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  42d6fd:	mov    al,0x2
  42d6ff:	add    BYTE PTR [rax],al
  42d701:	mov    al,0x2
  42d703:	add    BYTE PTR [rax],al
  42d705:	mov    al,0x2
  42d707:	add    BYTE PTR [rax],al
  42d709:	mov    al,0x2
  42d70b:	add    BYTE PTR [rax],al
  42d70d:	mov    al,0x2
  42d70f:	add    BYTE PTR [rax],al
  42d711:	mov    al,0x2
  42d713:	add    BYTE PTR [rax],al
  42d715:	mov    al,0x2
  42d717:	add    BYTE PTR [rax],al
  42d719:	mov    al,0x2
  42d71b:	add    BYTE PTR [rax],al
  42d71d:	mov    al,0x2
  42d71f:	add    BYTE PTR [rax],al
  42d721:	mov    al,0x2
  42d723:	add    BYTE PTR [rax],al
  42d725:	mov    al,0x2
  42d727:	add    BYTE PTR [rax],al
  42d729:	mov    al,0x2
  42d72b:	add    BYTE PTR [rax],al
  42d72d:	mov    al,0x2
  42d72f:	add    BYTE PTR [rax],al
  42d731:	mov    al,0x2
  42d733:	add    BYTE PTR [rax],al
  42d735:	mov    al,0x2
  42d737:	add    BYTE PTR [rax],al
  42d739:	mov    al,0x2
  42d73b:	add    BYTE PTR [rax],al
  42d73d:	mov    al,0x2
  42d73f:	add    BYTE PTR [rax],al
  42d741:	mov    al,0x2
  42d743:	add    BYTE PTR [rax],al
  42d745:	mov    al,0x2
  42d747:	add    BYTE PTR [rax],al
  42d749:	mov    al,0x2
  42d74b:	add    BYTE PTR [rax],al
  42d74d:	mov    al,0x2
  42d74f:	add    BYTE PTR [rax],al
  42d751:	mov    al,0x2
  42d753:	add    BYTE PTR [rax],al
  42d755:	mov    al,0x2
  42d757:	add    BYTE PTR [rax],al
  42d759:	mov    al,0x2
  42d75b:	add    BYTE PTR [rax],al
  42d75d:	mov    al,0x2
  42d75f:	add    BYTE PTR [rax],al
  42d761:	mov    al,0x2
  42d763:	add    BYTE PTR [rax],al
  42d765:	mov    al,0x2
  42d767:	add    BYTE PTR [rax],al
  42d769:	mov    al,0x2
  42d76b:	add    BYTE PTR [rax],al
  42d76d:	mov    al,0x2
  42d76f:	add    BYTE PTR [rax],al
  42d771:	mov    al,0x2
  42d773:	add    BYTE PTR [rax],al
  42d775:	mov    al,0x2
  42d777:	add    BYTE PTR [rax],al
  42d779:	mov    al,0x2
  42d77b:	add    BYTE PTR [rax],al
  42d77d:	mov    al,0x2
  42d77f:	add    BYTE PTR [rbx+0x45],cl
  42d782:	push   rdx
  42d783:	rex.WRX
  42d784:	rex.RB
  42d785:	xor    r14,QWORD PTR [rdx]
  42d788:	cs fs ins BYTE PTR es:[rdi],dx
  42d78b:	ins    BYTE PTR es:[rdi],dx
  42d78c:	add    BYTE PTR [rax],al
  42d78e:	add    BYTE PTR [rax],al
  42d790:	adc    al,0xb0
  42d792:	add    al,BYTE PTR [rax]
  42d794:	adc    al,0xb0
  42d796:	add    al,BYTE PTR [rax]
  42d798:	adc    al,0xb0
  42d79a:	add    al,BYTE PTR [rax]
  42d79c:	adc    al,0xb0
  42d79e:	add    al,BYTE PTR [rax]
  42d7a0:	adc    al,0xb0
  42d7a2:	add    al,BYTE PTR [rax]
  42d7a4:	adc    al,0xb0
  42d7a6:	add    al,BYTE PTR [rax]
  42d7a8:	adc    al,0xb0
  42d7aa:	add    al,BYTE PTR [rax]
  42d7ac:	adc    al,0xb0
  42d7ae:	add    al,BYTE PTR [rax]
  42d7b0:	adc    al,0xb0
  42d7b2:	add    al,BYTE PTR [rax]
  42d7b4:	adc    al,0xb0
  42d7b6:	add    al,BYTE PTR [rax]
  42d7b8:	adc    al,0xb0
  42d7ba:	add    al,BYTE PTR [rax]
  42d7bc:	adc    al,0xb0
  42d7be:	add    al,BYTE PTR [rax]
  42d7c0:	adc    al,0xb0
  42d7c2:	add    al,BYTE PTR [rax]
  42d7c4:	adc    al,0xb0
  42d7c6:	add    al,BYTE PTR [rax]
  42d7c8:	adc    al,0xb0
  42d7ca:	add    al,BYTE PTR [rax]
  42d7cc:	adc    al,0xb0
  42d7ce:	add    al,BYTE PTR [rax]
  42d7d0:	adc    al,0xb0
  42d7d2:	add    al,BYTE PTR [rax]
  42d7d4:	adc    al,0xb0
  42d7d6:	add    al,BYTE PTR [rax]
  42d7d8:	adc    al,0xb0
  42d7da:	add    al,BYTE PTR [rax]
  42d7dc:	adc    al,0xb0
  42d7de:	add    al,BYTE PTR [rax]
  42d7e0:	adc    al,0xb0
  42d7e2:	add    al,BYTE PTR [rax]
  42d7e4:	adc    al,0xb0
  42d7e6:	add    al,BYTE PTR [rax]
  42d7e8:	adc    al,0xb0
  42d7ea:	add    al,BYTE PTR [rax]
  42d7ec:	adc    al,0xb0
  42d7ee:	add    al,BYTE PTR [rax]
  42d7f0:	adc    al,0xb0
  42d7f2:	add    al,BYTE PTR [rax]
  42d7f4:	adc    al,0xb0
  42d7f6:	add    al,BYTE PTR [rax]
  42d7f8:	adc    al,0xb0
  42d7fa:	add    al,BYTE PTR [rax]
  42d7fc:	adc    al,0xb0
  42d7fe:	add    al,BYTE PTR [rax]
  42d800:	adc    al,0xb0
  42d802:	add    al,BYTE PTR [rax]
  42d804:	adc    al,0xb0
  42d806:	add    al,BYTE PTR [rax]
  42d808:	adc    al,0xb0
  42d80a:	add    al,BYTE PTR [rax]
  42d80c:	adc    al,0xb0
  42d80e:	add    al,BYTE PTR [rax]
  42d810:	adc    al,0xb0
  42d812:	add    al,BYTE PTR [rax]
  42d814:	adc    al,0xb0
  42d816:	add    al,BYTE PTR [rax]
  42d818:	adc    al,0xb0
  42d81a:	add    al,BYTE PTR [rax]
  42d81c:	adc    al,0xb0
  42d81e:	add    al,BYTE PTR [rax]
  42d820:	adc    al,0xb0
  42d822:	add    al,BYTE PTR [rax]
  42d824:	adc    al,0xb0
  42d826:	add    al,BYTE PTR [rax]
  42d828:	adc    al,0xb0
  42d82a:	add    al,BYTE PTR [rax]
  42d82c:	adc    al,0xb0
  42d82e:	add    al,BYTE PTR [rax]
  42d830:	adc    al,0xb0
  42d832:	add    al,BYTE PTR [rax]
  42d834:	adc    al,0xb0
  42d836:	add    al,BYTE PTR [rax]
  42d838:	adc    al,0xb0
  42d83a:	add    al,BYTE PTR [rax]
  42d83c:	adc    al,0xb0
  42d83e:	add    al,BYTE PTR [rax]
  42d840:	adc    al,0xb0
  42d842:	add    al,BYTE PTR [rax]
  42d844:	adc    al,0xb0
  42d846:	add    al,BYTE PTR [rax]
  42d848:	adc    al,0xb0
  42d84a:	add    al,BYTE PTR [rax]
  42d84c:	adc    al,0xb0
  42d84e:	add    al,BYTE PTR [rax]
  42d850:	adc    al,0xb0
  42d852:	add    al,BYTE PTR [rax]
  42d854:	adc    al,0xb0
  42d856:	add    al,BYTE PTR [rax]
  42d858:	adc    al,0xb0
  42d85a:	add    al,BYTE PTR [rax]
  42d85c:	adc    al,0xb0
  42d85e:	add    al,BYTE PTR [rax]
  42d860:	adc    al,0xb0
  42d862:	add    al,BYTE PTR [rax]
  42d864:	adc    al,0xb0
  42d866:	add    al,BYTE PTR [rax]
  42d868:	adc    al,0xb0
  42d86a:	add    al,BYTE PTR [rax]
  42d86c:	adc    al,0xb0
  42d86e:	add    al,BYTE PTR [rax]
  42d870:	ins    DWORD PTR es:[rdi],dx
  42d871:	jae    0x42d8e9
  42d873:	movsxd esi,DWORD PTR [rdx+0x74]
  42d876:	cs fs ins BYTE PTR es:[rdi],dx
  42d879:	ins    BYTE PTR es:[rdi],dx
  42d87a:	add    BYTE PTR [rax],al
  42d87c:	sub    BYTE PTR [rax+0x48530002],dh
  42d882:	rex.RB
  42d883:	rex.WR
  42d884:	xor    r14,QWORD PTR [rdx]
  42d887:	cs fs ins BYTE PTR es:[rdi],dx
  42d88a:	ins    BYTE PTR es:[rdi],dx
  42d88b:	add    BYTE PTR [rax+rsi*4],bh
  42d88e:	add    al,BYTE PTR [rax]
  42d890:	cmp    al,0xb0
  42d892:	add    al,BYTE PTR [rax]
  42d894:	cmp    al,0xb0
  42d896:	add    al,BYTE PTR [rax]
  42d898:	cmp    al,0xb0
  42d89a:	add    al,BYTE PTR [rax]
  42d89c:	cmp    al,0xb0
  42d89e:	add    al,BYTE PTR [rax]
  42d8a0:	cmp    al,0xb0
  42d8a2:	add    al,BYTE PTR [rax]
  42d8a4:	cmp    al,0xb0
  42d8a6:	add    al,BYTE PTR [rax]
  42d8a8:	cmp    al,0xb0
  42d8aa:	add    al,BYTE PTR [rax]
  42d8ac:	cmp    al,0xb0
  42d8ae:	add    al,BYTE PTR [rax]
  42d8b0:	cmp    al,0xb0
  42d8b2:	add    al,BYTE PTR [rax]
  42d8b4:	cmp    al,0xb0
  42d8b6:	add    al,BYTE PTR [rax]
  42d8b8:	cmp    al,0xb0
  42d8ba:	add    al,BYTE PTR [rax]
  42d8bc:	cmp    al,0xb0
  42d8be:	add    al,BYTE PTR [rax]
  42d8c0:	cmp    al,0xb0
  42d8c2:	add    al,BYTE PTR [rax]
  42d8c4:	cmp    al,0xb0
  42d8c6:	add    al,BYTE PTR [rax]
  42d8c8:	cmp    al,0xb0
  42d8ca:	add    al,BYTE PTR [rax]
  42d8cc:	cmp    al,0xb0
  42d8ce:	add    al,BYTE PTR [rax]
  42d8d0:	cmp    al,0xb0
  42d8d2:	add    al,BYTE PTR [rax]
  42d8d4:	cmp    al,0xb0
  42d8d6:	add    al,BYTE PTR [rax]
  42d8d8:	cmp    al,0xb0
  42d8da:	add    al,BYTE PTR [rax]
  42d8dc:	cmp    al,0xb0
  42d8de:	add    al,BYTE PTR [rax]
  42d8e0:	cmp    al,0xb0
  42d8e2:	add    al,BYTE PTR [rax]
  42d8e4:	cmp    al,0xb0
  42d8e6:	add    al,BYTE PTR [rax]
  42d8e8:	cmp    al,0xb0
  42d8ea:	add    al,BYTE PTR [rax]
  42d8ec:	cmp    al,0xb0
  42d8ee:	add    al,BYTE PTR [rax]
  42d8f0:	cmp    al,0xb0
  42d8f2:	add    al,BYTE PTR [rax]
  42d8f4:	(bad)  
  42d8f5:	jbe    0x42d95a
  42d8f7:	outs   dx,DWORD PTR ds:[rsi]
  42d8f8:	fs movsxd ebp,DWORD PTR gs:[rip+0x642e3635]        # 0x64710f35
  42d900:	ins    BYTE PTR es:[rdi],dx
  42d901:	ins    BYTE PTR es:[rdi],dx
  42d902:	add    BYTE PTR [rax],al
  42d904:	push   rax
  42d905:	mov    al,0x2
  42d907:	add    BYTE PTR [rax-0x50],dl
  42d90a:	add    al,BYTE PTR [rax]
  42d90c:	push   rax
  42d90d:	mov    al,0x2
  42d90f:	add    BYTE PTR [rax-0x50],dl
  42d912:	add    al,BYTE PTR [rax]
  42d914:	push   rax
  42d915:	mov    al,0x2
  42d917:	add    BYTE PTR [rax-0x50],dl
  42d91a:	add    al,BYTE PTR [rax]
  42d91c:	push   rax
  42d91d:	mov    al,0x2
  42d91f:	add    BYTE PTR [rax-0x50],dl
  42d922:	add    al,BYTE PTR [rax]
  42d924:	push   rax
  42d925:	mov    al,0x2
  42d927:	add    BYTE PTR [rax-0x50],dl
  42d92a:	add    al,BYTE PTR [rax]
  42d92c:	(bad)  
  42d92d:	jbe    0x42d993
  42d92f:	gs jbe 0x42d99b
  42d932:	movsxd esp,DWORD PTR [rbp+0x2d]
  42d935:	xor    eax,0x6c642e36
  42d93a:	ins    BYTE PTR es:[rdi],dx
  42d93b:	add    BYTE PTR [rax+rsi*4+0x2],ah
  42d93f:	add    BYTE PTR [rax+rsi*4+0x2],ah
  42d943:	add    BYTE PTR [rax+rsi*4+0x2],ah
  42d947:	add    BYTE PTR [rax+rsi*4+0x2],ah
  42d94b:	add    BYTE PTR [rax+rsi*4+0x2],ah
  42d94f:	add    BYTE PTR [rax+rsi*4+0x2],ah
  42d953:	add    BYTE PTR [rax+rsi*4+0x2],ah
  42d957:	add    BYTE PTR [rcx+0x76],ah
  42d95a:	imul   bp,WORD PTR [rsp+rsi*2+0x65],0x2d72
  42d961:	xor    eax,0x6c6c642e
  42d966:	add    BYTE PTR [rax],al
  42d968:	js     0x42d91a
  42d96a:	add    al,BYTE PTR [rax]
  42d96c:	js     0x42d91e
  42d96e:	add    al,BYTE PTR [rax]
  42d970:	js     0x42d922
  42d972:	add    al,BYTE PTR [rax]
  42d974:	js     0x42d926
  42d976:	add    al,BYTE PTR [rax]
  42d978:	js     0x42d92a
  42d97a:	add    al,BYTE PTR [rax]
  42d97c:	js     0x42d92e
  42d97e:	add    al,BYTE PTR [rax]
  42d980:	js     0x42d932
  42d982:	add    al,BYTE PTR [rax]
  42d984:	js     0x42d936
  42d986:	add    al,BYTE PTR [rax]
  42d988:	js     0x42d93a
  42d98a:	add    al,BYTE PTR [rax]
  42d98c:	js     0x42d93e
  42d98e:	add    al,BYTE PTR [rax]
  42d990:	js     0x42d942
  42d992:	add    al,BYTE PTR [rax]
  42d994:	js     0x42d946
  42d996:	add    al,BYTE PTR [rax]
  42d998:	js     0x42d94a
  42d99a:	add    al,BYTE PTR [rax]
  42d99c:	js     0x42d94e
  42d99e:	add    al,BYTE PTR [rax]
  42d9a0:	js     0x42d952
  42d9a2:	add    al,BYTE PTR [rax]
  42d9a4:	js     0x42d956
  42d9a6:	add    al,BYTE PTR [rax]
  42d9a8:	js     0x42d95a
  42d9aa:	add    al,BYTE PTR [rax]
  42d9ac:	js     0x42d95e
  42d9ae:	add    al,BYTE PTR [rax]
  42d9b0:	js     0x42d962
  42d9b2:	add    al,BYTE PTR [rax]
  42d9b4:	js     0x42d966
  42d9b6:	add    al,BYTE PTR [rax]
  42d9b8:	js     0x42d96a
  42d9ba:	add    al,BYTE PTR [rax]
  42d9bc:	js     0x42d96e
  42d9be:	add    al,BYTE PTR [rax]
  42d9c0:	(bad)  
  42d9c1:	jbe    0x42da29
  42d9c3:	outs   dx,DWORD PTR ds:[rsi]
  42d9c4:	jb     0x42da33
  42d9c6:	(bad)  
  42d9c7:	je     0x42d9f6
  42d9c9:	xor    eax,0x6c642e36
  42d9ce:	ins    BYTE PTR es:[rdi],dx
  42d9cf:	add    BYTE PTR [rax+rsi*4-0x4f73fffe],cl
  42d9d6:	add    al,BYTE PTR [rax]
  42d9d8:	mov    WORD PTR [rax+0x76610002],?
  42d9de:	jb     0x42da45
  42d9e0:	jae    0x42da43
  42d9e2:	ins    DWORD PTR es:[rdi],dx
  42d9e3:	jo     0x42da51
  42d9e5:	gs sub eax,0x6c642e32
  42d9eb:	ins    BYTE PTR es:[rdi],dx
  42d9ec:	add    BYTE PTR [rax],al
  42d9ee:	add    BYTE PTR [rax],al
  42d9f0:	movabs al,ds:0xa00002b0a00002b0
  42d9f9:	mov    al,0x2
  42d9fb:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da01:	mov    al,0x2
  42da03:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da09:	mov    al,0x2
  42da0b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da11:	mov    al,0x2
  42da13:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da19:	mov    al,0x2
  42da1b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da21:	mov    al,0x2
  42da23:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da29:	mov    al,0x2
  42da2b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da31:	mov    al,0x2
  42da33:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da39:	mov    al,0x2
  42da3b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da41:	mov    al,0x2
  42da43:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da49:	mov    al,0x2
  42da4b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da51:	mov    al,0x2
  42da53:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da59:	mov    al,0x2
  42da5b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da61:	mov    al,0x2
  42da63:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da69:	mov    al,0x2
  42da6b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da71:	mov    al,0x2
  42da73:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da79:	mov    al,0x2
  42da7b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da81:	mov    al,0x2
  42da83:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da89:	mov    al,0x2
  42da8b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da91:	mov    al,0x2
  42da93:	add    BYTE PTR [rax-0x5ffffd50],ah
  42da99:	mov    al,0x2
  42da9b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42daa1:	mov    al,0x2
  42daa3:	add    BYTE PTR [rax-0x5ffffd50],ah
  42daa9:	mov    al,0x2
  42daab:	add    BYTE PTR [rax-0x5ffffd50],ah
  42dab1:	mov    al,0x2
  42dab3:	add    BYTE PTR [rax-0x5ffffd50],ah
  42dab9:	mov    al,0x2
  42dabb:	add    BYTE PTR [rax-0x5ffffd50],ah
  42dac1:	mov    al,0x2
  42dac3:	add    BYTE PTR [rax-0x5ffffd50],ah
  42dac9:	mov    al,0x2
  42dacb:	add    BYTE PTR [rax-0x5ffffd50],ah
  42dad1:	mov    al,0x2
  42dad3:	add    BYTE PTR [rax-0x5ffffd50],ah
  42dad9:	mov    al,0x2
  42dadb:	add    BYTE PTR [rax-0x5ffffd50],ah
  42dae1:	mov    al,0x2
  42dae3:	add    BYTE PTR [rax-0x5ffffd50],ah
  42dae9:	mov    al,0x2
  42daeb:	add    BYTE PTR [rax-0x5ffffd50],ah
  42daf1:	mov    al,0x2
  42daf3:	add    BYTE PTR [rax-0x5ffffd50],ah
  42daf9:	mov    al,0x2
  42dafb:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db01:	mov    al,0x2
  42db03:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db09:	mov    al,0x2
  42db0b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db11:	mov    al,0x2
  42db13:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db19:	mov    al,0x2
  42db1b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db21:	mov    al,0x2
  42db23:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db29:	mov    al,0x2
  42db2b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db31:	mov    al,0x2
  42db33:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db39:	mov    al,0x2
  42db3b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db41:	mov    al,0x2
  42db43:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db49:	mov    al,0x2
  42db4b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db51:	mov    al,0x2
  42db53:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db59:	mov    al,0x2
  42db5b:	add    BYTE PTR [rax-0x5ffffd50],ah
  42db61:	mov    al,0x2
  42db63:	add    BYTE PTR [rcx+0x76],ah
  42db66:	jne    0x42dbdc
  42db68:	imul   ebp,DWORD PTR [rbp+rbp*1+0x35],0x6c642e34
  42db70:	ins    BYTE PTR es:[rdi],dx
  42db71:	add    BYTE PTR [rax],al
  42db73:	add    BYTE PTR [rax+rsi*4-0x4f4bfffe],dh
  42db7a:	add    al,BYTE PTR [rax]
  42db7c:	jo     0x42dbed
  42db7e:	jae    0x42dbf4
  42db80:	jo     0x42dbf4
  42db82:	outs   dx,DWORD PTR ds:[rsi]
  42db83:	movsxd ebp,DWORD PTR [rip+0x642e3335]        # 0x64710ebe
  42db89:	ins    BYTE PTR es:[rdi],dx
  42db8a:	ins    BYTE PTR es:[rdi],dx
  42db8b:	add    al,cl
  42db8d:	mov    al,0x2
  42db8f:	add    al,cl
  42db91:	mov    al,0x2
  42db93:	add    al,cl
  42db95:	mov    al,0x2
  42db97:	add    al,cl
  42db99:	mov    al,0x2
  42db9b:	add    al,cl
  42db9d:	mov    al,0x2
  42db9f:	add    BYTE PTR [rbx+0x77],dh
  42dba2:	jb     0x42dc09
  42dba4:	jae    0x42dc07
  42dba6:	ins    DWORD PTR es:[rdi],dx
  42dba7:	jo     0x42dc15
  42dba9:	gs sub eax,0x6c642e31
  42dbaf:	ins    BYTE PTR es:[rdi],dx
  42dbb0:	add    BYTE PTR [rax],al
  42dbb2:	add    BYTE PTR [rax],al
  42dbb4:	fdiv   QWORD PTR [rax-0x4f23fffe]
  42dbba:	add    al,BYTE PTR [rax]
  42dbbc:	fdiv   QWORD PTR [rax-0x4f23fffe]
  42dbc2:	add    al,BYTE PTR [rax]
  42dbc4:	fdiv   QWORD PTR [rax-0x4f23fffe]
  42dbca:	add    al,BYTE PTR [rax]
  42dbcc:	fdiv   QWORD PTR [rax+0x77730002]
  42dbd2:	jae    0x42dc37
  42dbd4:	(bad)  
  42dbd5:	ins    BYTE PTR es:[rdi],dx
  42dbd6:	gs sub eax,0x6c642e33
  42dbdc:	ins    BYTE PTR es:[rdi],dx
  42dbdd:	add    BYTE PTR [rax],al
	...

Disassembly of section .CRT:

000000000042e000 <.CRT>:
	...
  42e008:	(bad)  
  42e009:	adc    DWORD PTR [rax+0x0],eax
	...
  42e020:	adc    BYTE PTR [rax],dl
  42e022:	add    BYTE PTR [rax],al
  42e025:	add    BYTE PTR [rax],al
  42e027:	add    BYTE PTR [rax+0x26],dl
  42e02a:	add    BYTE PTR [r8],al
	...
  42e03d:	add    BYTE PTR [rax],al
  42e03f:	add    BYTE PTR [rax+0x4128],al
  42e045:	add    BYTE PTR [rax],al
  42e047:	add    BYTE PTR [rax+0x28],dl
  42e04a:	add    BYTE PTR [r8],al
	...

Disassembly of section .tls:

000000000042f000 <.tls>:
	...
  42f020:	add    al,dh
  42f022:	rex.X add BYTE PTR [rax],al
  42f025:	add    BYTE PTR [rax],al
  42f027:	add    BYTE PTR [rax-0x10],ah
  42f02a:	rex.X add BYTE PTR [rax],al
  42f02d:	add    BYTE PTR [rax],al
  42f02f:	add    ah,bl
  42f031:	cdq    
  42f032:	rex.X add BYTE PTR [rax],al
  42f035:	add    BYTE PTR [rax],al
  42f037:	add    BYTE PTR [rax-0x20],al
  42f03a:	rex.X add BYTE PTR [rax],al
	...
