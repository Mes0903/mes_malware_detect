
80d3d281ab93307f50f069426f8ddd133456a2d5b7ea8aa84e2fc63ffa96d630.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x68
   140001004:	mov    rax,QWORD PTR [rip+0x3e925]        # 0x14003f930
   14000100b:	xor    rax,rsp
   14000100e:	mov    QWORD PTR [rsp+0x50],rax
   140001013:	lea    rdx,[rsp+0x20]
   140001018:	call   0x1400121e4
   14000101d:	or     ecx,0xffffffff
   140001020:	test   eax,eax
   140001022:	cmove  ecx,DWORD PTR [rsp+0x34]
   140001027:	mov    eax,ecx
   140001029:	mov    rcx,QWORD PTR [rsp+0x50]
   14000102e:	xor    rcx,rsp
   140001031:	call   0x140012670
   140001036:	add    rsp,0x68
   14000103a:	ret    
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	int3   
   140001041:	int3   
   140001042:	int3   
   140001043:	int3   
   140001044:	int3   
   140001045:	int3   
   140001046:	int3   
   140001047:	int3   
   140001048:	int3   
   140001049:	int3   
   14000104a:	int3   
   14000104b:	int3   
   14000104c:	int3   
   14000104d:	int3   
   14000104e:	int3   
   14000104f:	int3   
   140001050:	mov    QWORD PTR [rsp+0x10],rbx
   140001055:	mov    QWORD PTR [rsp+0x18],rsi
   14000105a:	push   rdi
   14000105b:	sub    rsp,0x30
   14000105f:	and    QWORD PTR [rsp+0x40],0x0
   140001065:	xor    eax,eax
   140001067:	mov    rbx,rcx
   14000106a:	test   rcx,rcx
   14000106d:	je     0x1400010af
   14000106f:	or     rcx,0xffffffffffffffff
   140001073:	mov    rdi,rbx
   140001076:	lea    edx,[rax+0x2]
   140001079:	repnz scas ax,WORD PTR es:[rdi]
   14000107c:	not    rcx
   14000107f:	and    ecx,ecx
   140001081:	movsxd rdi,ecx
   140001084:	mov    rcx,rdi
   140001087:	call   0x140012bd4
   14000108c:	mov    rsi,rax
   14000108f:	test   rax,rax
   140001092:	je     0x1400010af
   140001094:	lea    rcx,[rsp+0x40]
   140001099:	mov    r9,rbx
   14000109c:	mov    r8,rdi
   14000109f:	mov    rdx,rax
   1400010a2:	mov    QWORD PTR [rsp+0x20],rdi
   1400010a7:	call   0x140012bb4
   1400010ac:	mov    rax,rsi
   1400010af:	mov    rbx,QWORD PTR [rsp+0x48]
   1400010b4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400010b9:	add    rsp,0x30
   1400010bd:	pop    rdi
   1400010be:	ret    
   1400010bf:	int3   
   1400010c0:	int3   
   1400010c1:	int3   
   1400010c2:	int3   
   1400010c3:	int3   
   1400010c4:	int3   
   1400010c5:	int3   
   1400010c6:	int3   
   1400010c7:	int3   
   1400010c8:	int3   
   1400010c9:	int3   
   1400010ca:	int3   
   1400010cb:	int3   
   1400010cc:	int3   
   1400010cd:	int3   
   1400010ce:	int3   
   1400010cf:	int3   
   1400010d0:	jmp    0x140012ecc
   1400010d5:	int3   
   1400010d6:	int3   
   1400010d7:	int3   
   1400010d8:	int3   
   1400010d9:	int3   
   1400010da:	int3   
   1400010db:	int3   
   1400010dc:	int3   
   1400010dd:	int3   
   1400010de:	int3   
   1400010df:	int3   
   1400010e0:	jmp    0x140012ed8
   1400010e5:	int3   
   1400010e6:	int3   
   1400010e7:	int3   
   1400010e8:	int3   
   1400010e9:	int3   
   1400010ea:	int3   
   1400010eb:	int3   
   1400010ec:	int3   
   1400010ed:	int3   
   1400010ee:	int3   
   1400010ef:	int3   
   1400010f0:	rex push rbx
   1400010f2:	mov    eax,0x1030
   1400010f7:	call   0x140012f50
   1400010fc:	sub    rsp,rax
   1400010ff:	mov    rax,QWORD PTR [rip+0x3e82a]        # 0x14003f930
   140001106:	xor    rax,rsp
   140001109:	mov    QWORD PTR [rsp+0x1020],rax
   140001111:	lea    rcx,[rsp+0x22]
   140001116:	xor    ebx,ebx
   140001118:	xor    edx,edx
   14000111a:	mov    r8d,0xffe
   140001120:	mov    WORD PTR [rsp+0x20],bx
   140001125:	call   0x140012fb0
   14000112a:	call   0x140011404
   14000112f:	test   eax,eax
   140001131:	je     0x140001137
   140001133:	xor    eax,eax
   140001135:	jmp    0x140001185
   140001137:	lea    rdx,[rsp+0x20]
   14000113c:	lea    rcx,[rip+0x36ebd]        # 0x140038000
   140001143:	mov    r8d,0x800
   140001149:	call   0x140011124
   14000114e:	test   eax,eax
   140001150:	je     0x140001180
   140001152:	lea    rcx,[rsp+0x20]
   140001157:	lea    rax,[rip+0x36eea]        # 0x140038048
   14000115e:	sub    rax,rcx
   140001161:	movzx  edx,WORD PTR [rcx]
   140001164:	movzx  r8d,WORD PTR [rcx+rax*1]
   140001169:	sub    edx,r8d
   14000116c:	jne    0x140001177
   14000116e:	add    rcx,0x2
   140001172:	test   r8d,r8d
   140001175:	jne    0x140001161
   140001177:	test   edx,edx
   140001179:	setne  bl
   14000117c:	mov    eax,ebx
   14000117e:	jmp    0x140001185
   140001180:	mov    eax,0x1
   140001185:	mov    rcx,QWORD PTR [rsp+0x1020]
   14000118d:	xor    rcx,rsp
   140001190:	call   0x140012670
   140001195:	add    rsp,0x1030
   14000119c:	pop    rbx
   14000119d:	ret    
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	int3   
   1400011a1:	int3   
   1400011a2:	int3   
   1400011a3:	int3   
   1400011a4:	int3   
   1400011a5:	int3   
   1400011a6:	int3   
   1400011a7:	int3   
   1400011a8:	int3   
   1400011a9:	int3   
   1400011aa:	int3   
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	sub    rsp,0x28
   1400011b4:	lea    rdx,[rsp+0x38]
   1400011b9:	call   0x14000c638
   1400011be:	mov    rax,QWORD PTR [rsp+0x38]
   1400011c3:	xor    ecx,ecx
   1400011c5:	test   rax,rax
   1400011c8:	je     0x1400011e9
   1400011ca:	jmp    0x1400011db
   1400011cc:	cmp    WORD PTR [rax],0xa
   1400011d0:	je     0x1400011e1
   1400011d2:	cmp    WORD PTR [rax],cx
   1400011d5:	je     0x1400011e1
   1400011d7:	add    rax,0x2
   1400011db:	cmp    WORD PTR [rax],0xd
   1400011df:	jne    0x1400011cc
   1400011e1:	mov    WORD PTR [rax],cx
   1400011e4:	mov    rax,QWORD PTR [rsp+0x38]
   1400011e9:	add    rsp,0x28
   1400011ed:	ret    
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	int3   
   1400011f1:	int3   
   1400011f2:	int3   
   1400011f3:	int3   
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	mov    eax,DWORD PTR [rip+0x36e4e]        # 0x140038054
   140001206:	ret    
   140001207:	int3   
   140001208:	int3   
   140001209:	int3   
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	mov    rax,rsp
   140001213:	mov    QWORD PTR [rax+0x10],rbx
   140001217:	mov    QWORD PTR [rax+0x18],rsi
   14000121b:	mov    QWORD PTR [rax+0x20],rdi
   14000121f:	push   rbp
   140001220:	lea    rbp,[rax-0xfb8]
   140001227:	mov    eax,0x10b0
   14000122c:	call   0x140012f50
   140001231:	sub    rsp,rax
   140001234:	mov    rax,QWORD PTR [rip+0x3e6f5]        # 0x14003f930
   14000123b:	xor    rax,rsp
   14000123e:	mov    QWORD PTR [rbp+0xfa0],rax
   140001245:	mov    rsi,rcx
   140001248:	lea    rcx,[rsp+0x34]
   14000124d:	call   0x140008d18
   140001252:	mov    rdi,rax
   140001255:	cmp    rax,0xffffffffffffffff
   140001259:	jne    0x140001263
   14000125b:	lea    ecx,[rax+0x6]
   14000125e:	jmp    0x140001381
   140001263:	call   0x14000a34c
   140001268:	mov    rbx,rax
   14000126b:	call   0x14000acac
   140001270:	mov    QWORD PTR [rsp+0x28],rbx
   140001275:	mov    ebx,0x400
   14000127a:	lea    r8,[rip+0x36ddf]        # 0x140038060
   140001281:	lea    rcx,[rbp+0x7a0]
   140001288:	mov    r9,rax
   14000128b:	mov    edx,ebx
   14000128d:	mov    DWORD PTR [rsp+0x20],0x5c
   140001295:	call   0x14000a30c
   14000129a:	mov    r9d,DWORD PTR [rsp+0x34]
   14000129f:	lea    r8,[rip+0x36dca]        # 0x140038070
   1400012a6:	lea    rcx,[rbp-0x60]
   1400012aa:	mov    edx,ebx
   1400012ac:	call   0x14000a30c
   1400012b1:	lea    rax,[rip+0x36de8]        # 0x1400380a0
   1400012b8:	lea    r11,[rip+0x36db9]        # 0x140038078
   1400012bf:	mov    QWORD PTR [rsp+0x48],rax
   1400012c4:	lea    rax,[rbp-0x60]
   1400012c8:	mov    QWORD PTR [rsp+0x58],rsi
   1400012cd:	lea    r8,[rsp+0x40]
   1400012d2:	lea    rdx,[rbp+0x7a0]
   1400012d9:	xor    esi,esi
   1400012db:	xor    ecx,ecx
   1400012dd:	mov    QWORD PTR [rsp+0x50],rax
   1400012e2:	mov    QWORD PTR [rsp+0x40],r11
   1400012e7:	mov    QWORD PTR [rsp+0x60],rsi
   1400012ec:	call   0x14000a10c
   1400012f1:	test   eax,eax
   1400012f3:	jne    0x14000137f
   1400012f9:	xor    eax,eax
   1400012fb:	lea    r8,[rsp+0x30]
   140001300:	lea    rdx,[rbp-0x80]
   140001304:	mov    rcx,rdi
   140001307:	mov    WORD PTR [rbp-0x80],si
   14000130b:	mov    DWORD PTR [rsp+0x30],0x10
   140001313:	mov    QWORD PTR [rbp-0x7e],rax
   140001317:	mov    DWORD PTR [rbp-0x76],eax
   14000131a:	mov    WORD PTR [rbp-0x72],ax
   14000131e:	call   QWORD PTR [rip+0x2e134]        # 0x14002f458
   140001324:	cmp    eax,0xffffffff
   140001327:	jne    0x14000132e
   140001329:	lea    ecx,[rsi+0x6]
   14000132c:	jmp    0x140001381
   14000132e:	xor    r9d,r9d
   140001331:	movsxd rbx,eax
   140001334:	lea    rdx,[rbp-0x70]
   140001338:	lea    r8d,[r9+0x6]
   14000133c:	mov    rcx,rbx
   14000133f:	call   QWORD PTR [rip+0x2e10b]        # 0x14002f450
   140001345:	cmp    eax,0x6
   140001348:	je     0x140001351
   14000134a:	mov    ecx,0x7
   14000134f:	jmp    0x140001381
   140001351:	lea    rcx,[rbp-0x70]
   140001355:	call   0x14001309c
   14000135a:	mov    DWORD PTR [rip+0x36cf4],eax        # 0x140038054
   140001360:	test   eax,eax
   140001362:	jg     0x14000136b
   140001364:	mov    ecx,0x8
   140001369:	jmp    0x140001381
   14000136b:	mov    rcx,rbx
   14000136e:	call   0x14000a0cc
   140001373:	mov    rcx,rdi
   140001376:	call   0x14000a0cc
   14000137b:	xor    eax,eax
   14000137d:	jmp    0x140001386
   14000137f:	xor    ecx,ecx
   140001381:	call   0x14000bd98
   140001386:	mov    rcx,QWORD PTR [rbp+0xfa0]
   14000138d:	xor    rcx,rsp
   140001390:	call   0x140012670
   140001395:	lea    r11,[rsp+0x10b0]
   14000139d:	mov    rbx,QWORD PTR [r11+0x18]
   1400013a1:	mov    rsi,QWORD PTR [r11+0x20]
   1400013a5:	mov    rdi,QWORD PTR [r11+0x28]
   1400013a9:	mov    rsp,r11
   1400013ac:	pop    rbp
   1400013ad:	ret    
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	int3   
   1400013b1:	int3   
   1400013b2:	int3   
   1400013b3:	int3   
   1400013b4:	int3   
   1400013b5:	int3   
   1400013b6:	int3   
   1400013b7:	int3   
   1400013b8:	int3   
   1400013b9:	int3   
   1400013ba:	int3   
   1400013bb:	int3   
   1400013bc:	int3   
   1400013bd:	int3   
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400013c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400013ca:	push   rdi
   1400013cb:	sub    rsp,0x20
   1400013cf:	xor    ebx,ebx
   1400013d1:	mov    rsi,rcx
   1400013d4:	test   rcx,rcx
   1400013d7:	je     0x140001484
   1400013dd:	or     rcx,0xffffffffffffffff
   1400013e1:	xor    eax,eax
   1400013e3:	mov    rdi,rsi
   1400013e6:	repnz scas ax,WORD PTR es:[rdi]
   1400013e9:	not    rcx
   1400013ec:	dec    rcx
   1400013ef:	cmp    rcx,0x400
   1400013f6:	jae    0x140001484
   1400013fc:	call   0x1400092d8
   140001401:	test   eax,eax
   140001403:	je     0x14000143c
   140001405:	lea    r8,[rip+0x36ca4]        # 0x1400380b0
   14000140c:	lea    rcx,[rip+0x4922d]        # 0x14004a640
   140001413:	mov    r9,rsi
   140001416:	mov    edx,0x410
   14000141b:	call   0x14000a30c
   140001420:	test   eax,eax
   140001422:	js     0x140001484
   140001424:	cmp    eax,0x820
   140001429:	jae    0x140001484
   14000142b:	lea    rcx,[rip+0x4920e]        # 0x14004a640
   140001432:	call   0x1400092e8
   140001437:	mov    rbx,rax
   14000143a:	jmp    0x140001484
   14000143c:	mov    rcx,rsi
   14000143f:	call   0x1400092e8
   140001444:	lea    r8,[rip+0x36c8d]        # 0x1400380d8
   14000144b:	lea    rcx,[rip+0x491ee]        # 0x14004a640
   140001452:	mov    r9,rax
   140001455:	mov    edx,0x410
   14000145a:	mov    rdi,rax
   14000145d:	call   0x14000a30c
   140001462:	test   eax,eax
   140001464:	js     0x14000147c
   140001466:	cmp    eax,0x820
   14000146b:	jae    0x14000147c
   14000146d:	lea    rcx,[rip+0x491cc]        # 0x14004a640
   140001474:	call   0x1400130e8
   140001479:	mov    rbx,rax
   14000147c:	mov    rcx,rdi
   14000147f:	call   0x1400130a8
   140001484:	mov    rsi,QWORD PTR [rsp+0x38]
   140001489:	mov    rax,rbx
   14000148c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001491:	add    rsp,0x20
   140001495:	pop    rdi
   140001496:	ret    
   140001497:	int3   
   140001498:	int3   
   140001499:	int3   
   14000149a:	int3   
   14000149b:	int3   
   14000149c:	int3   
   14000149d:	int3   
   14000149e:	int3   
   14000149f:	int3   
   1400014a0:	rex push rdi
   1400014a2:	sub    rsp,0x20
   1400014a6:	mov    r9,rcx
   1400014a9:	test   rcx,rcx
   1400014ac:	je     0x1400014fe
   1400014ae:	or     rdx,0xffffffffffffffff
   1400014b2:	xor    eax,eax
   1400014b4:	mov    rdi,r9
   1400014b7:	mov    rcx,rdx
   1400014ba:	repnz scas ax,WORD PTR es:[rdi]
   1400014bd:	not    rcx
   1400014c0:	dec    rcx
   1400014c3:	je     0x1400014fe
   1400014c5:	mov    rcx,rdx
   1400014c8:	mov    rdi,r9
   1400014cb:	repnz scas ax,WORD PTR es:[rdi]
   1400014ce:	not    rcx
   1400014d1:	dec    rcx
   1400014d4:	cmp    rcx,0x400
   1400014db:	jae    0x1400014fe
   1400014dd:	lea    r8,[rip+0x36c1c]        # 0x140038100
   1400014e4:	lea    rcx,[rip+0x46915]        # 0x140047e00
   1400014eb:	mov    edx,0x420
   1400014f0:	call   0x14000a30c
   1400014f5:	lea    rax,[rip+0x46904]        # 0x140047e00
   1400014fc:	jmp    0x140001500
   1400014fe:	xor    eax,eax
   140001500:	add    rsp,0x20
   140001504:	pop    rdi
   140001505:	ret    
   140001506:	int3   
   140001507:	int3   
   140001508:	int3   
   140001509:	int3   
   14000150a:	int3   
   14000150b:	int3   
   14000150c:	int3   
   14000150d:	int3   
   14000150e:	int3   
   14000150f:	int3   
   140001510:	sub    rsp,0x28
   140001514:	test   rcx,rcx
   140001517:	jle    0x140001544
   140001519:	mov    r9,rcx
   14000151c:	lea    r8,[rip+0x36c1d]        # 0x140038140
   140001523:	lea    rcx,[rip+0x448b6]        # 0x140045de0
   14000152a:	mov    edx,0x40f
   14000152f:	call   0x14000a30c
   140001534:	lea    rcx,[rip+0x448a5]        # 0x140045de0
   14000153b:	add    rsp,0x28
   14000153f:	jmp    0x1400130e8
   140001544:	xor    eax,eax
   140001546:	add    rsp,0x28
   14000154a:	ret    
   14000154b:	int3   
   14000154c:	int3   
   14000154d:	int3   
   14000154e:	int3   
   14000154f:	int3   
   140001550:	int3   
   140001551:	int3   
   140001552:	int3   
   140001553:	int3   
   140001554:	int3   
   140001555:	int3   
   140001556:	int3   
   140001557:	int3   
   140001558:	int3   
   140001559:	int3   
   14000155a:	int3   
   14000155b:	int3   
   14000155c:	int3   
   14000155d:	int3   
   14000155e:	int3   
   14000155f:	int3   
   140001560:	sub    rsp,0x28
   140001564:	test   rcx,rcx
   140001567:	je     0x1400015ae
   140001569:	lea    rdx,[rip+0x36b64]        # 0x1400380d4
   140001570:	call   0x140013160
   140001575:	lea    rcx,[rip+0x36bf4]        # 0x140038170
   14000157c:	lea    r8,[rip+0x36bfd]        # 0x140038180
   140001583:	test   rax,rax
   140001586:	mov    edx,0x40f
   14000158b:	cmove  rax,rcx
   14000158f:	lea    rcx,[rip+0x4168a]        # 0x140042c20
   140001596:	mov    r9,rax
   140001599:	call   0x14000a30c
   14000159e:	lea    rcx,[rip+0x4167b]        # 0x140042c20
   1400015a5:	add    rsp,0x28
   1400015a9:	jmp    0x1400130e8
   1400015ae:	xor    eax,eax
   1400015b0:	add    rsp,0x28
   1400015b4:	ret    
   1400015b5:	int3   
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	sub    rsp,0x28
   1400015c4:	test   rcx,rcx
   1400015c7:	je     0x140001607
   1400015c9:	lea    rdx,[rip+0x36b2c]        # 0x1400380fc
   1400015d0:	call   0x140013160
   1400015d5:	lea    rcx,[rip+0x36bc4]        # 0x1400381a0
   1400015dc:	lea    r8,[rip+0x36bcd]        # 0x1400381b0
   1400015e3:	test   rax,rax
   1400015e6:	mov    edx,0x400
   1400015eb:	cmove  rax,rcx
   1400015ef:	lea    rcx,[rip+0x4986a]        # 0x14004ae60
   1400015f6:	mov    r9,rax
   1400015f9:	call   0x14000a30c
   1400015fe:	lea    rax,[rip+0x4985b]        # 0x14004ae60
   140001605:	jmp    0x140001609
   140001607:	xor    eax,eax
   140001609:	add    rsp,0x28
   14000160d:	ret    
   14000160e:	int3   
   14000160f:	int3   
   140001610:	int3   
   140001611:	int3   
   140001612:	int3   
   140001613:	int3   
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	int3   
   140001619:	int3   
   14000161a:	int3   
   14000161b:	int3   
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	mov    QWORD PTR [rsp+0x8],rbx
   140001625:	push   rdi
   140001626:	sub    rsp,0x70
   14000162a:	call   0x140009458
   14000162f:	mov    rbx,rax
   140001632:	call   0x140009458
   140001637:	mov    rdi,rax
   14000163a:	call   0x140009458
   14000163f:	mov    edx,0x5c
   140001644:	lea    ecx,[rdx-0x21]
   140001647:	mov    r9,rax
   14000164a:	lea    rax,[rip+0x36b87]        # 0x1400381d8
   140001651:	mov    QWORD PTR [rsp+0x68],rax
   140001656:	mov    DWORD PTR [rsp+0x60],edx
   14000165a:	mov    QWORD PTR [rsp+0x58],rbx
   14000165f:	mov    DWORD PTR [rsp+0x50],ecx
   140001663:	lea    rax,[rip+0x36b86]        # 0x1400381f0
   14000166a:	lea    r8,[rip+0x36baf]        # 0x140038220
   140001671:	mov    QWORD PTR [rsp+0x48],rax
   140001676:	mov    DWORD PTR [rsp+0x40],edx
   14000167a:	mov    QWORD PTR [rsp+0x38],rdi
   14000167f:	mov    DWORD PTR [rsp+0x30],ecx
   140001683:	lea    rax,[rip+0x36b7e]        # 0x140038208
   14000168a:	lea    rcx,[rip+0x46faf]        # 0x140048640
   140001691:	mov    QWORD PTR [rsp+0x28],rax
   140001696:	mov    DWORD PTR [rsp+0x20],edx
   14000169a:	mov    edx,0x800
   14000169f:	call   0x14000a30c
   1400016a4:	mov    rbx,QWORD PTR [rsp+0x80]
   1400016ac:	lea    rax,[rip+0x46f8d]        # 0x140048640
   1400016b3:	add    rsp,0x70
   1400016b7:	pop    rdi
   1400016b8:	ret    
   1400016b9:	int3   
   1400016ba:	int3   
   1400016bb:	int3   
   1400016bc:	int3   
   1400016bd:	int3   
   1400016be:	int3   
   1400016bf:	int3   
   1400016c0:	rex push rbx
   1400016c2:	sub    rsp,0x20
   1400016c6:	mov    edx,DWORD PTR [rip+0x4b7b4]        # 0x14004ce80
   1400016cc:	mov    eax,DWORD PTR [rip+0x4b7b2]        # 0x14004ce84
   1400016d2:	mov    rbx,rcx
   1400016d5:	cmp    edx,eax
   1400016d7:	jl     0x140001710
   1400016d9:	je     0x1400016ed
   1400016db:	lea    rcx,[rip+0x36b6e]        # 0x140038250
   1400016e2:	call   0x14000c328
   1400016e7:	mov    eax,DWORD PTR [rip+0x4b797]        # 0x14004ce84
   1400016ed:	mov    rcx,QWORD PTR [rip+0x4b794]        # 0x14004ce88
   1400016f4:	add    eax,0x5
   1400016f7:	movsxd rdx,eax
   1400016fa:	mov    DWORD PTR [rip+0x4b784],eax        # 0x14004ce84
   140001700:	shl    rdx,0x3
   140001704:	call   0x1400131c4
   140001709:	mov    QWORD PTR [rip+0x4b778],rax        # 0x14004ce88
   140001710:	mov    rcx,rbx
   140001713:	call   0x1400130e8
   140001718:	movsxd r8,DWORD PTR [rip+0x4b761]        # 0x14004ce80
   14000171f:	mov    rcx,QWORD PTR [rip+0x4b762]        # 0x14004ce88
   140001726:	mov    QWORD PTR [rcx+r8*8],rax
   14000172a:	inc    r8d
   14000172d:	mov    DWORD PTR [rip+0x4b74c],r8d        # 0x14004ce80
   140001734:	add    rsp,0x20
   140001738:	pop    rbx
   140001739:	ret    
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	mov    QWORD PTR [rsp+0x8],rbx
   140001745:	mov    QWORD PTR [rsp+0x10],rbp
   14000174a:	push   rdi
   14000174b:	sub    rsp,0x30
   14000174f:	call   0x140009458
   140001754:	lea    rbp,[rip+0x43e85]        # 0x1400455e0
   14000175b:	mov    edi,0x400
   140001760:	mov    rbx,rax
   140001763:	lea    rax,[rip+0x36b36]        # 0x1400382a0
   14000176a:	lea    r8,[rip+0x36b47]        # 0x1400382b8
   140001771:	mov    QWORD PTR [rsp+0x28],rax
   140001776:	mov    edx,edi
   140001778:	mov    rcx,rbp
   14000177b:	mov    r9,rbx
   14000177e:	mov    DWORD PTR [rsp+0x20],0x5c
   140001786:	call   0x14000a30c
   14000178b:	mov    rcx,rbp
   14000178e:	call   0x1400016c0
   140001793:	lea    r11,[rip+0x36b2e]        # 0x1400382c8
   14000179a:	lea    r8,[rip+0x36b3f]        # 0x1400382e0
   1400017a1:	mov    QWORD PTR [rsp+0x28],r11
   1400017a6:	mov    r9,rbx
   1400017a9:	mov    edx,edi
   1400017ab:	mov    rcx,rbp
   1400017ae:	mov    DWORD PTR [rsp+0x20],0x5c
   1400017b6:	call   0x14000a30c
   1400017bb:	mov    rcx,rbp
   1400017be:	call   0x1400016c0
   1400017c3:	lea    r11,[rip+0x36b26]        # 0x1400382f0
   1400017ca:	lea    r8,[rip+0x36b37]        # 0x140038308
   1400017d1:	mov    QWORD PTR [rsp+0x28],r11
   1400017d6:	mov    r9,rbx
   1400017d9:	mov    edx,edi
   1400017db:	mov    rcx,rbp
   1400017de:	mov    DWORD PTR [rsp+0x20],0x5c
   1400017e6:	call   0x14000a30c
   1400017eb:	mov    rcx,rbp
   1400017ee:	mov    rbx,QWORD PTR [rsp+0x40]
   1400017f3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400017f8:	add    rsp,0x30
   1400017fc:	pop    rdi
   1400017fd:	jmp    0x1400016c0
   140001802:	int3   
   140001803:	int3   
   140001804:	int3   
   140001805:	int3   
   140001806:	int3   
   140001807:	int3   
   140001808:	int3   
   140001809:	int3   
   14000180a:	int3   
   14000180b:	int3   
   14000180c:	int3   
   14000180d:	int3   
   14000180e:	int3   
   14000180f:	int3   
   140001810:	mov    QWORD PTR [rsp+0x8],rbx
   140001815:	mov    QWORD PTR [rsp+0x10],rbp
   14000181a:	mov    QWORD PTR [rsp+0x18],rsi
   14000181f:	push   rdi
   140001820:	push   r12
   140001822:	push   r14
   140001824:	sub    rsp,0x20
   140001828:	mov    rsi,QWORD PTR [rip+0x4b659]        # 0x14004ce88
   14000182f:	xor    ebx,ebx
   140001831:	xor    r12d,r12d
   140001834:	xor    ebp,ebp
   140001836:	cmp    DWORD PTR [rip+0x4b644],ebx        # 0x14004ce80
   14000183c:	lea    r14,[rip+0x3fbdd]        # 0x140041420
   140001843:	jle    0x1400018af
   140001845:	cmp    ebx,0x400
   14000184b:	jge    0x1400018af
   14000184d:	test   rbp,rbp
   140001850:	je     0x140001861
   140001852:	movsxd rax,ebx
   140001855:	mov    ecx,0x3b
   14000185a:	inc    ebx
   14000185c:	mov    WORD PTR [r14+rax*2],cx
   140001861:	mov    r8,QWORD PTR [rsi+rbp*8]
   140001865:	mov    eax,0x400
   14000186a:	sub    eax,ebx
   14000186c:	movsxd rdx,eax
   14000186f:	movsxd rax,ebx
   140001872:	lea    rcx,[r14+rax*2]
   140001876:	call   0x14000a30c
   14000187b:	mov    rsi,QWORD PTR [rip+0x4b606]        # 0x14004ce88
   140001882:	or     rcx,0xffffffffffffffff
   140001886:	mov    rdi,QWORD PTR [rsi+rbp*8]
   14000188a:	xor    eax,eax
   14000188c:	repnz scas ax,WORD PTR es:[rdi]
   14000188f:	not    rcx
   140001892:	dec    rcx
   140001895:	add    ebx,ecx
   140001897:	mov    rcx,QWORD PTR [rsi+rbp*8]
   14000189b:	call   0x1400130a8
   1400018a0:	inc    r12d
   1400018a3:	inc    rbp
   1400018a6:	cmp    r12d,DWORD PTR [rip+0x4b5d3]        # 0x14004ce80
   1400018ad:	jl     0x140001845
   1400018af:	mov    rcx,rsi
   1400018b2:	call   0x1400130a8
   1400018b7:	and    DWORD PTR [rip+0x4b5c2],0x0        # 0x14004ce80
   1400018be:	and    DWORD PTR [rip+0x4b5bf],0x0        # 0x14004ce84
   1400018c5:	mov    rbx,QWORD PTR [rsp+0x40]
   1400018ca:	mov    rbp,QWORD PTR [rsp+0x48]
   1400018cf:	mov    rsi,QWORD PTR [rsp+0x50]
   1400018d4:	mov    rax,r14
   1400018d7:	add    rsp,0x20
   1400018db:	pop    r14
   1400018dd:	pop    r12
   1400018df:	pop    rdi
   1400018e0:	ret    
   1400018e1:	int3   
   1400018e2:	int3   
   1400018e3:	int3   
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	sub    rsp,0x28
   1400018f4:	call   0x140009438
   1400018f9:	test   rax,rax
   1400018fc:	jne    0x14000190c
   1400018fe:	call   0x140001810
   140001903:	lea    r8,[rip+0x36a0e]        # 0x140038318
   14000190a:	jmp    0x140001918
   14000190c:	call   0x140009438
   140001911:	lea    r8,[rip+0x36a30]        # 0x140038348
   140001918:	lea    rcx,[rip+0x49d41]        # 0x14004b660
   14000191f:	mov    r9,rax
   140001922:	mov    edx,0x400
   140001927:	call   0x14000a30c
   14000192c:	lea    rax,[rip+0x49d2d]        # 0x14004b660
   140001933:	add    rsp,0x28
   140001937:	ret    
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	int3   
   14000193d:	int3   
   14000193e:	int3   
   14000193f:	int3   
   140001940:	sub    rsp,0x38
   140001944:	call   0x140009458
   140001949:	lea    r8,[rip+0x36a40]        # 0x140038390
   140001950:	lea    rcx,[rip+0x41ae9]        # 0x140043440
   140001957:	mov    r9,rax
   14000195a:	lea    rax,[rip+0x36a17]        # 0x140038378
   140001961:	mov    edx,0x400
   140001966:	mov    QWORD PTR [rsp+0x28],rax
   14000196b:	mov    DWORD PTR [rsp+0x20],0x5c
   140001973:	call   0x14000a30c
   140001978:	lea    rax,[rip+0x41ac1]        # 0x140043440
   14000197f:	add    rsp,0x38
   140001983:	ret    
   140001984:	int3   
   140001985:	int3   
   140001986:	int3   
   140001987:	int3   
   140001988:	int3   
   140001989:	int3   
   14000198a:	int3   
   14000198b:	int3   
   14000198c:	int3   
   14000198d:	int3   
   14000198e:	int3   
   14000198f:	int3   
   140001990:	sub    rsp,0x38
   140001994:	call   0x140009458
   140001999:	lea    r8,[rip+0x36a18]        # 0x1400383b8
   1400019a0:	lea    rcx,[rip+0x43439]        # 0x140044de0
   1400019a7:	mov    r9,rax
   1400019aa:	lea    rax,[rip+0x369ef]        # 0x1400383a0
   1400019b1:	mov    edx,0x400
   1400019b6:	mov    QWORD PTR [rsp+0x28],rax
   1400019bb:	mov    DWORD PTR [rsp+0x20],0x5c
   1400019c3:	call   0x14000a30c
   1400019c8:	lea    rax,[rip+0x43411]        # 0x140044de0
   1400019cf:	add    rsp,0x38
   1400019d3:	ret    
   1400019d4:	int3   
   1400019d5:	int3   
   1400019d6:	int3   
   1400019d7:	int3   
   1400019d8:	int3   
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400019e5:	push   rdi
   1400019e6:	sub    rsp,0x50
   1400019ea:	mov    rbx,rcx
   1400019ed:	test   rcx,rcx
   1400019f0:	je     0x140001a61
   1400019f2:	or     rcx,0xffffffffffffffff
   1400019f6:	xor    eax,eax
   1400019f8:	mov    rdi,rbx
   1400019fb:	repnz scas ax,WORD PTR es:[rdi]
   1400019fe:	not    rcx
   140001a01:	dec    rcx
   140001a04:	je     0x140001a61
   140001a06:	call   0x140009458
   140001a0b:	mov    ecx,0x5c
   140001a10:	lea    r8,[rip+0x369c1]        # 0x1400383d8
   140001a17:	mov    r9,rax
   140001a1a:	lea    rax,[rip+0x369a7]        # 0x1400383c8
   140001a21:	mov    edx,0x400
   140001a26:	mov    QWORD PTR [rsp+0x48],rax
   140001a2b:	mov    DWORD PTR [rsp+0x40],ecx
   140001a2f:	mov    QWORD PTR [rsp+0x38],rbx
   140001a34:	lea    rax,[rip+0x36995]        # 0x1400383d0
   140001a3b:	mov    DWORD PTR [rsp+0x30],0x3b
   140001a43:	mov    QWORD PTR [rsp+0x28],rax
   140001a48:	mov    DWORD PTR [rsp+0x20],ecx
   140001a4c:	lea    rcx,[rip+0x44bad]        # 0x140046600
   140001a53:	call   0x14000a30c
   140001a58:	lea    rax,[rip+0x44ba1]        # 0x140046600
   140001a5f:	jmp    0x140001a63
   140001a61:	xor    eax,eax
   140001a63:	mov    rbx,QWORD PTR [rsp+0x60]
   140001a68:	add    rsp,0x50
   140001a6c:	pop    rdi
   140001a6d:	ret    
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	int3   
   140001a71:	int3   
   140001a72:	int3   
   140001a73:	int3   
   140001a74:	int3   
   140001a75:	int3   
   140001a76:	int3   
   140001a77:	int3   
   140001a78:	int3   
   140001a79:	int3   
   140001a7a:	int3   
   140001a7b:	int3   
   140001a7c:	int3   
   140001a7d:	int3   
   140001a7e:	int3   
   140001a7f:	int3   
   140001a80:	sub    rsp,0x38
   140001a84:	call   0x1400093f8
   140001a89:	test   rax,rax
   140001a8c:	jne    0x140001ab0
   140001a8e:	call   0x14000acac
   140001a93:	lea    r8,[rip+0x3697e]        # 0x140038418
   140001a9a:	lea    rcx,[rip+0x45b5f]        # 0x140047600
   140001aa1:	mov    r9,rax
   140001aa4:	mov    edx,0x400
   140001aa9:	call   0x14000a30c
   140001aae:	jmp    0x140001ae4
   140001ab0:	call   0x1400093f8
   140001ab5:	lea    r8,[rip+0x36984]        # 0x140038440
   140001abc:	lea    rcx,[rip+0x45b3d]        # 0x140047600
   140001ac3:	mov    r9,rax
   140001ac6:	lea    rax,[rip+0x3696b]        # 0x140038438
   140001acd:	mov    edx,0x400
   140001ad2:	mov    QWORD PTR [rsp+0x28],rax
   140001ad7:	mov    DWORD PTR [rsp+0x20],0x5c
   140001adf:	call   0x14000a30c
   140001ae4:	lea    rax,[rip+0x45b15]        # 0x140047600
   140001aeb:	add    rsp,0x38
   140001aef:	ret    
   140001af0:	int3   
   140001af1:	int3   
   140001af2:	int3   
   140001af3:	int3   
   140001af4:	int3   
   140001af5:	int3   
   140001af6:	int3   
   140001af7:	int3   
   140001af8:	int3   
   140001af9:	int3   
   140001afa:	int3   
   140001afb:	int3   
   140001afc:	int3   
   140001afd:	int3   
   140001afe:	int3   
   140001aff:	int3   
   140001b00:	sub    rsp,0x28
   140001b04:	mov    r9d,DWORD PTR [rip+0x36549]        # 0x140038054
   140001b0b:	lea    r8,[rip+0x36956]        # 0x140038468
   140001b12:	lea    rcx,[rip+0x47b27]        # 0x140049640
   140001b19:	mov    edx,0x400
   140001b1e:	call   0x14000a30c
   140001b23:	lea    rax,[rip+0x47b16]        # 0x140049640
   140001b2a:	add    rsp,0x28
   140001b2e:	ret    
   140001b2f:	int3   
   140001b30:	int3   
   140001b31:	int3   
   140001b32:	int3   
   140001b33:	int3   
   140001b34:	int3   
   140001b35:	int3   
   140001b36:	int3   
   140001b37:	int3   
   140001b38:	int3   
   140001b39:	int3   
   140001b3a:	int3   
   140001b3b:	int3   
   140001b3c:	int3   
   140001b3d:	int3   
   140001b3e:	int3   
   140001b3f:	int3   
   140001b40:	sub    rsp,0x28
   140001b44:	mov    r9,rcx
   140001b47:	lea    r8,[rip+0x3694a]        # 0x140038498
   140001b4e:	lea    rcx,[rip+0x482eb]        # 0x140049e40
   140001b55:	mov    edx,0x400
   140001b5a:	call   0x14000a30c
   140001b5f:	lea    rax,[rip+0x482da]        # 0x140049e40
   140001b66:	add    rsp,0x28
   140001b6a:	ret    
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	int3   
   140001b71:	int3   
   140001b72:	int3   
   140001b73:	int3   
   140001b74:	int3   
   140001b75:	int3   
   140001b76:	int3   
   140001b77:	int3   
   140001b78:	int3   
   140001b79:	int3   
   140001b7a:	int3   
   140001b7b:	int3   
   140001b7c:	int3   
   140001b7d:	int3   
   140001b7e:	int3   
   140001b7f:	int3   
   140001b80:	mov    QWORD PTR [rsp+0x8],rbx
   140001b85:	push   rdi
   140001b86:	sub    rsp,0x20
   140001b8a:	mov    rdi,rcx
   140001b8d:	xor    ebx,ebx
   140001b8f:	call   0x1400092d8
   140001b94:	test   eax,eax
   140001b96:	je     0x140001bcf
   140001b98:	lea    r8,[rip+0x36911]        # 0x1400384b0
   140001b9f:	lea    rcx,[rip+0x4087a]        # 0x140042420
   140001ba6:	mov    r9,rdi
   140001ba9:	mov    edx,0x400
   140001bae:	call   0x14000a30c
   140001bb3:	test   eax,eax
   140001bb5:	js     0x140001c17
   140001bb7:	cmp    eax,0x800
   140001bbc:	jae    0x140001c17
   140001bbe:	lea    rcx,[rip+0x4085b]        # 0x140042420
   140001bc5:	call   0x1400092e8
   140001bca:	mov    rbx,rax
   140001bcd:	jmp    0x140001c17
   140001bcf:	mov    rcx,rdi
   140001bd2:	call   0x1400092e8
   140001bd7:	lea    r8,[rip+0x368f2]        # 0x1400384d0
   140001bde:	lea    rcx,[rip+0x4083b]        # 0x140042420
   140001be5:	mov    r9,rax
   140001be8:	mov    edx,0x400
   140001bed:	mov    rdi,rax
   140001bf0:	call   0x14000a30c
   140001bf5:	test   eax,eax
   140001bf7:	js     0x140001c0f
   140001bf9:	cmp    eax,0x800
   140001bfe:	jae    0x140001c0f
   140001c00:	lea    rcx,[rip+0x40819]        # 0x140042420
   140001c07:	call   0x1400130e8
   140001c0c:	mov    rbx,rax
   140001c0f:	mov    rcx,rdi
   140001c12:	call   0x1400130a8
   140001c17:	mov    rax,rbx
   140001c1a:	mov    rbx,QWORD PTR [rsp+0x30]
   140001c1f:	add    rsp,0x20
   140001c23:	pop    rdi
   140001c24:	ret    
   140001c25:	int3   
   140001c26:	int3   
   140001c27:	int3   
   140001c28:	int3   
   140001c29:	int3   
   140001c2a:	int3   
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	sub    rsp,0x28
   140001c34:	test   ecx,ecx
   140001c36:	lea    rax,[rip+0x368b3]        # 0x1400384f0
   140001c3d:	lea    r9,[rip+0x368bc]        # 0x140038500
   140001c44:	lea    r8,[rip+0x368c5]        # 0x140038510
   140001c4b:	lea    rcx,[rip+0x41fee]        # 0x140043c40
   140001c52:	mov    edx,0x400
   140001c57:	cmovne r9,rax
   140001c5b:	call   0x14000a30c
   140001c60:	lea    rax,[rip+0x41fd9]        # 0x140043c40
   140001c67:	add    rsp,0x28
   140001c6b:	ret    
   140001c6c:	int3   
   140001c6d:	int3   
   140001c6e:	int3   
   140001c6f:	int3   
   140001c70:	int3   
   140001c71:	int3   
   140001c72:	int3   
   140001c73:	int3   
   140001c74:	int3   
   140001c75:	int3   
   140001c76:	int3   
   140001c77:	int3   
   140001c78:	int3   
   140001c79:	int3   
   140001c7a:	int3   
   140001c7b:	int3   
   140001c7c:	int3   
   140001c7d:	int3   
   140001c7e:	int3   
   140001c7f:	int3   
   140001c80:	sub    rsp,0x38
   140001c84:	call   0x1400095e8
   140001c89:	lea    r8,[rip+0x368b0]        # 0x140038540
   140001c90:	lea    rcx,[rip+0x4a1c9]        # 0x14004be60
   140001c97:	mov    edx,0x400
   140001c9c:	mov    r9,rax
   140001c9f:	mov    DWORD PTR [rsp+0x20],0x5c
   140001ca7:	call   0x14000a30c
   140001cac:	lea    rax,[rip+0x4a1ad]        # 0x14004be60
   140001cb3:	add    rsp,0x38
   140001cb7:	ret    
   140001cb8:	int3   
   140001cb9:	int3   
   140001cba:	int3   
   140001cbb:	int3   
   140001cbc:	int3   
   140001cbd:	int3   
   140001cbe:	int3   
   140001cbf:	int3   
   140001cc0:	sub    rsp,0x28
   140001cc4:	lea    r8,[rip+0x368d5]        # 0x1400385a0
   140001ccb:	lea    rcx,[rip+0x3ff4e]        # 0x140041c20
   140001cd2:	mov    edx,0x400
   140001cd7:	call   0x14000a30c
   140001cdc:	lea    rax,[rip+0x3ff3d]        # 0x140041c20
   140001ce3:	add    rsp,0x28
   140001ce7:	ret    
   140001ce8:	int3   
   140001ce9:	int3   
   140001cea:	int3   
   140001ceb:	int3   
   140001cec:	int3   
   140001ced:	int3   
   140001cee:	int3   
   140001cef:	int3   
   140001cf0:	sub    rsp,0x28
   140001cf4:	lea    r8,[rip+0x368cd]        # 0x1400385c8
   140001cfb:	lea    rcx,[rip+0x428de]        # 0x1400445e0
   140001d02:	mov    edx,0x400
   140001d07:	call   0x14000a30c
   140001d0c:	lea    rax,[rip+0x428cd]        # 0x1400445e0
   140001d13:	add    rsp,0x28
   140001d17:	ret    
   140001d18:	int3   
   140001d19:	int3   
   140001d1a:	int3   
   140001d1b:	int3   
   140001d1c:	int3   
   140001d1d:	int3   
   140001d1e:	int3   
   140001d1f:	int3   
   140001d20:	sub    rsp,0x28
   140001d24:	lea    r8,[rip+0x368bd]        # 0x1400385e8
   140001d2b:	lea    rcx,[rip+0x450ce]        # 0x140046e00
   140001d32:	mov    edx,0x400
   140001d37:	call   0x14000a30c
   140001d3c:	lea    rax,[rip+0x450bd]        # 0x140046e00
   140001d43:	add    rsp,0x28
   140001d47:	ret    
   140001d48:	int3   
   140001d49:	int3   
   140001d4a:	int3   
   140001d4b:	int3   
   140001d4c:	int3   
   140001d4d:	int3   
   140001d4e:	int3   
   140001d4f:	int3   
   140001d50:	test   rcx,rcx
   140001d53:	je     0x140001dbc
   140001d55:	push   rdi
   140001d56:	sub    rsp,0x20
   140001d5a:	cmp    DWORD PTR [rip+0x362fb],0x32        # 0x14003805c
   140001d61:	mov    r8,rcx
   140001d64:	jge    0x140001db7
   140001d66:	or     rcx,0xffffffffffffffff
   140001d6a:	xor    eax,eax
   140001d6c:	mov    rdi,r8
   140001d6f:	repnz scas ax,WORD PTR es:[rdi]
   140001d72:	not    rcx
   140001d75:	dec    rcx
   140001d78:	mov    rdi,rcx
   140001d7b:	test   ecx,ecx
   140001d7d:	jle    0x140001db7
   140001d7f:	mov    edx,DWORD PTR [rip+0x4b0db]        # 0x14004ce60
   140001d85:	add    edx,ecx
   140001d87:	cmp    edx,0x1fff
   140001d8d:	jge    0x140001db7
   140001d8f:	mov    rcx,r8
   140001d92:	call   0x1400130e8
   140001d97:	movsxd rcx,DWORD PTR [rip+0x362be]        # 0x14003805c
   140001d9e:	lea    r8,[rip+0x4269b]        # 0x140044440
   140001da5:	mov    QWORD PTR [r8+rcx*8],rax
   140001da9:	inc    ecx
   140001dab:	add    DWORD PTR [rip+0x4b0af],edi        # 0x14004ce60
   140001db1:	mov    DWORD PTR [rip+0x362a5],ecx        # 0x14003805c
   140001db7:	add    rsp,0x20
   140001dbb:	pop    rdi
   140001dbc:	ret    
   140001dbd:	int3   
   140001dbe:	int3   
   140001dbf:	int3   
   140001dc0:	int3   
   140001dc1:	int3   
   140001dc2:	int3   
   140001dc3:	int3   
   140001dc4:	int3   
   140001dc5:	int3   
   140001dc6:	int3   
   140001dc7:	int3   
   140001dc8:	int3   
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140001dd5:	mov    QWORD PTR [rsp+0x10],rbp
   140001dda:	push   rdi
   140001ddb:	sub    rsp,0x30
   140001ddf:	mov    rbx,rcx
   140001de2:	or     r8,0xffffffffffffffff
   140001de6:	xor    eax,eax
   140001de8:	mov    rcx,r8
   140001deb:	mov    rdi,rbx
   140001dee:	mov    r9d,0x1fff
   140001df4:	repnz scas ax,WORD PTR es:[rdi]
   140001df7:	not    rcx
   140001dfa:	dec    rcx
   140001dfd:	cmp    rcx,r9
   140001e00:	jae    0x140001e97
   140001e06:	cmp    QWORD PTR [rip+0x4b05b],rax        # 0x14004ce68
   140001e0d:	jne    0x140001e20
   140001e0f:	mov    rcx,rbx
   140001e12:	call   0x1400130e8
   140001e17:	mov    QWORD PTR [rip+0x4b04a],rax        # 0x14004ce68
   140001e1e:	jmp    0x140001e8f
   140001e20:	mov    rdi,QWORD PTR [rip+0x4b041]        # 0x14004ce68
   140001e27:	mov    rcx,r8
   140001e2a:	repnz scas ax,WORD PTR es:[rdi]
   140001e2d:	mov    rdi,rbx
   140001e30:	not    rcx
   140001e33:	lea    rdx,[rcx-0x1]
   140001e37:	mov    rcx,r8
   140001e3a:	repnz scas ax,WORD PTR es:[rdi]
   140001e3d:	not    rcx
   140001e40:	lea    eax,[rdx+rcx*1+0x1]
   140001e44:	cmp    eax,r9d
   140001e47:	jge    0x140001e8f
   140001e49:	movsxd rbp,eax
   140001e4c:	lea    rcx,[rbp+rbp*1+0x0]
   140001e51:	call   0x140013298
   140001e56:	mov    rdi,rax
   140001e59:	test   rax,rax
   140001e5c:	je     0x140001e97
   140001e5e:	mov    r9,QWORD PTR [rip+0x4b003]        # 0x14004ce68
   140001e65:	lea    r8,[rip+0x367b4]        # 0x140038620
   140001e6c:	mov    rdx,rbp
   140001e6f:	mov    rcx,rax
   140001e72:	mov    QWORD PTR [rsp+0x20],rbx
   140001e77:	call   0x14000a30c
   140001e7c:	mov    rcx,QWORD PTR [rip+0x4afe5]        # 0x14004ce68
   140001e83:	call   0x1400130a8
   140001e88:	mov    QWORD PTR [rip+0x4afd9],rdi        # 0x14004ce68
   140001e8f:	mov    rcx,rbx
   140001e92:	call   0x140001d50
   140001e97:	mov    rbx,QWORD PTR [rsp+0x40]
   140001e9c:	mov    rbp,QWORD PTR [rsp+0x48]
   140001ea1:	add    rsp,0x30
   140001ea5:	pop    rdi
   140001ea6:	ret    
   140001ea7:	int3   
   140001ea8:	int3   
   140001ea9:	int3   
   140001eaa:	int3   
   140001eab:	int3   
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140001eb5:	mov    QWORD PTR [rsp+0x10],rsi
   140001eba:	push   rdi
   140001ebb:	sub    rsp,0x20
   140001ebf:	call   0x140001740
   140001ec4:	lea    rcx,[rip+0x36765]        # 0x140038630
   140001ecb:	call   0x140001d50
   140001ed0:	call   0x140001940
   140001ed5:	mov    rcx,rax
   140001ed8:	call   0x140001d50
   140001edd:	call   0x140001c80
   140001ee2:	mov    rcx,rax
   140001ee5:	call   0x140001d50
   140001eea:	call   0x140001cc0
   140001eef:	mov    rcx,rax
   140001ef2:	call   0x140001d50
   140001ef7:	call   0x140001cf0
   140001efc:	mov    rcx,rax
   140001eff:	call   0x140001d50
   140001f04:	call   0x140001a80
   140001f09:	mov    rcx,rax
   140001f0c:	call   0x140001d50
   140001f11:	lea    rcx,[rip+0x36730]        # 0x140038648
   140001f18:	call   0x140013474
   140001f1d:	mov    rcx,rax
   140001f20:	call   0x1400014a0
   140001f25:	mov    rcx,rax
   140001f28:	call   0x140001d50
   140001f2d:	lea    rcx,[rip+0x3673c]        # 0x140038670
   140001f34:	call   0x140013474
   140001f39:	mov    rcx,rax
   140001f3c:	call   0x1400019e0
   140001f41:	mov    rcx,rax
   140001f44:	call   0x140001d50
   140001f49:	lea    rcx,[rip+0x36740]        # 0x140038690
   140001f50:	call   0x140013474
   140001f55:	xor    esi,esi
   140001f57:	mov    rbx,rax
   140001f5a:	test   rax,rax
   140001f5d:	je     0x140001fb6
   140001f5f:	cmp    WORD PTR [rax],si
   140001f62:	je     0x140001fb6
   140001f64:	jmp    0x140001f6a
   140001f66:	add    rbx,0x2
   140001f6a:	movzx  ecx,WORD PTR [rbx]
   140001f6d:	mov    edx,0x8
   140001f72:	call   0x140013350
   140001f77:	test   eax,eax
   140001f79:	jne    0x140001f66
   140001f7b:	cmp    WORD PTR [rbx],si
   140001f7e:	je     0x140001fb6
   140001f80:	mov    rdi,rbx
   140001f83:	movzx  ecx,WORD PTR [rbx]
   140001f86:	mov    edx,0x8
   140001f8b:	call   0x140013350
   140001f90:	test   eax,eax
   140001f92:	jne    0x140001f9d
   140001f94:	add    rbx,0x2
   140001f98:	cmp    WORD PTR [rbx],si
   140001f9b:	jne    0x140001f83
   140001f9d:	cmp    WORD PTR [rbx],si
   140001fa0:	je     0x140001fa9
   140001fa2:	mov    WORD PTR [rbx],si
   140001fa5:	add    rbx,0x2
   140001fa9:	mov    rcx,rdi
   140001fac:	call   0x140001dd0
   140001fb1:	cmp    WORD PTR [rbx],si
   140001fb4:	jne    0x140001f6a
   140001fb6:	mov    rbx,QWORD PTR [rsp+0x30]
   140001fbb:	mov    rsi,QWORD PTR [rsp+0x38]
   140001fc0:	add    rsp,0x20
   140001fc4:	pop    rdi
   140001fc5:	ret    
   140001fc6:	int3   
   140001fc7:	int3   
   140001fc8:	int3   
   140001fc9:	int3   
   140001fca:	int3   
   140001fcb:	int3   
   140001fcc:	int3   
   140001fcd:	int3   
   140001fce:	int3   
   140001fcf:	int3   
   140001fd0:	rex push rbx
   140001fd2:	sub    rsp,0x20
   140001fd6:	mov    ebx,edx
   140001fd8:	call   0x1400130e8
   140001fdd:	mov    ecx,ebx
   140001fdf:	mov    QWORD PTR [rip+0x4ae8a],rax        # 0x14004ce70
   140001fe6:	call   0x140001c30
   140001feb:	mov    rcx,rax
   140001fee:	add    rsp,0x20
   140001ff2:	pop    rbx
   140001ff3:	jmp    0x140001d50
   140001ff8:	int3   
   140001ff9:	int3   
   140001ffa:	int3   
   140001ffb:	int3   
   140001ffc:	int3   
   140001ffd:	int3   
   140001ffe:	int3   
   140001fff:	int3   
   140002000:	mov    QWORD PTR [rsp+0x18],rbx
   140002005:	push   rbp
   140002006:	push   rsi
   140002007:	push   rdi
   140002008:	sub    rsp,0x840
   14000200f:	mov    rax,QWORD PTR [rip+0x3d91a]        # 0x14003f930
   140002016:	xor    rax,rsp
   140002019:	mov    QWORD PTR [rsp+0x830],rax
   140002021:	mov    rbx,rdx
   140002024:	mov    rsi,rcx
   140002027:	mov    ebp,0x400
   14000202c:	test   rcx,rcx
   14000202f:	jne    0x14000207f
   140002031:	test   rdx,rdx
   140002034:	je     0x140002104
   14000203a:	xor    esi,esi
   14000203c:	test   rbx,rbx
   14000203f:	je     0x1400020c0
   140002041:	or     rcx,0xffffffffffffffff
   140002045:	xor    eax,eax
   140002047:	mov    rdi,rbx
   14000204a:	repnz scas ax,WORD PTR es:[rdi]
   14000204d:	not    rcx
   140002050:	dec    rcx
   140002053:	cmp    rcx,0x100
   14000205a:	jae    0x1400020c0
   14000205c:	lea    r8,[rip+0x3665d]        # 0x1400386c0
   140002063:	lea    rcx,[rsp+0x30]
   140002068:	mov    r9,rbx
   14000206b:	mov    rdx,rbp
   14000206e:	call   0x14000a30c
   140002073:	lea    rcx,[rsp+0x30]
   140002078:	call   0x140001d50
   14000207d:	jmp    0x1400020c2
   14000207f:	or     rcx,0xffffffffffffffff
   140002083:	xor    eax,eax
   140002085:	mov    rdi,rsi
   140002088:	repnz scas ax,WORD PTR es:[rdi]
   14000208b:	not    rcx
   14000208e:	dec    rcx
   140002091:	cmp    rcx,0x100
   140002098:	jae    0x14000203a
   14000209a:	lea    r8,[rip+0x3660f]        # 0x1400386b0
   1400020a1:	lea    rcx,[rsp+0x30]
   1400020a6:	mov    r9,rsi
   1400020a9:	mov    rdx,rbp
   1400020ac:	call   0x14000a30c
   1400020b1:	lea    rcx,[rsp+0x30]
   1400020b6:	call   0x140001d50
   1400020bb:	jmp    0x14000203c
   1400020c0:	xor    ebx,ebx
   1400020c2:	lea    rax,[rip+0x36607]        # 0x1400386d0
   1400020c9:	test   rbx,rbx
   1400020cc:	lea    r8,[rip+0x3661d]        # 0x1400386f0
   1400020d3:	cmove  rbx,rax
   1400020d7:	lea    rax,[rip+0x36602]        # 0x1400386e0
   1400020de:	test   rsi,rsi
   1400020e1:	cmove  rsi,rax
   1400020e5:	lea    rcx,[rsp+0x30]
   1400020ea:	mov    rdx,rbp
   1400020ed:	mov    r9,rsi
   1400020f0:	mov    QWORD PTR [rsp+0x20],rbx
   1400020f5:	call   0x14000a30c
   1400020fa:	lea    rcx,[rsp+0x30]
   1400020ff:	call   0x140001d50
   140002104:	mov    rcx,QWORD PTR [rsp+0x830]
   14000210c:	xor    rcx,rsp
   14000210f:	call   0x140012670
   140002114:	mov    rbx,QWORD PTR [rsp+0x870]
   14000211c:	add    rsp,0x840
   140002123:	pop    rdi
   140002124:	pop    rsi
   140002125:	pop    rbp
   140002126:	ret    
   140002127:	int3   
   140002128:	int3   
   140002129:	int3   
   14000212a:	int3   
   14000212b:	int3   
   14000212c:	int3   
   14000212d:	int3   
   14000212e:	int3   
   14000212f:	int3   
   140002130:	mov    QWORD PTR [rsp+0x8],rbx
   140002135:	mov    QWORD PTR [rsp+0x10],rbp
   14000213a:	mov    QWORD PTR [rsp+0x18],rsi
   14000213f:	push   rdi
   140002140:	push   r12
   140002142:	push   r13
   140002144:	sub    rsp,0x20
   140002148:	lea    edi,[r8-0x1]
   14000214c:	xor    esi,esi
   14000214e:	xor    ebp,ebp
   140002150:	xor    r10d,r10d
   140002153:	mov    rbx,r9
   140002156:	mov    r12,rdx
   140002159:	mov    r13,rcx
   14000215c:	test   edi,edi
   14000215e:	jle    0x1400021c6
   140002160:	mov    r11,QWORD PTR [r9]
   140002163:	lea    r8,[rip+0x3667e]        # 0x1400387e8
   14000216a:	mov    rax,r11
   14000216d:	sub    r8,r11
   140002170:	movzx  ecx,WORD PTR [rax]
   140002173:	movzx  edx,WORD PTR [rax+r8*1]
   140002178:	sub    ecx,edx
   14000217a:	jne    0x140002184
   14000217c:	add    rax,0x2
   140002180:	test   edx,edx
   140002182:	jne    0x140002170
   140002184:	test   ecx,ecx
   140002186:	je     0x1400021bb
   140002188:	lea    r8,[rip+0x36669]        # 0x1400387f8
   14000218f:	mov    rax,r11
   140002192:	sub    r8,r11
   140002195:	movzx  ecx,WORD PTR [rax]
   140002198:	movzx  edx,WORD PTR [rax+r8*1]
   14000219d:	sub    ecx,edx
   14000219f:	jne    0x1400021a9
   1400021a1:	add    rax,0x2
   1400021a5:	test   edx,edx
   1400021a7:	jne    0x140002195
   1400021a9:	test   ecx,ecx
   1400021ab:	je     0x1400021bb
   1400021ad:	inc    r10d
   1400021b0:	add    r9,0x8
   1400021b4:	cmp    r10d,edi
   1400021b7:	jl     0x140002160
   1400021b9:	jmp    0x1400021c6
   1400021bb:	movsxd rax,r10d
   1400021be:	mov    rsi,r11
   1400021c1:	mov    rbp,QWORD PTR [rbx+rax*8+0x8]
   1400021c6:	mov    rcx,r12
   1400021c9:	call   0x140009c58
   1400021ce:	cmp    eax,0xffffffff
   1400021d1:	je     0x1400022bd
   1400021d7:	mov    ecx,eax
   1400021d9:	call   0x140008f08
   1400021de:	mov    rbx,rax
   1400021e1:	cmp    rax,0xffffffffffffffff
   1400021e5:	je     0x1400022bd
   1400021eb:	mov    rcx,r12
   1400021ee:	call   0x140009ad8
   1400021f3:	mov    rdi,rax
   1400021f6:	test   rax,rax
   1400021f9:	je     0x1400022bd
   1400021ff:	mov    edx,0x2
   140002204:	mov    rcx,rbx
   140002207:	call   0x1400090c8
   14000220c:	test   eax,eax
   14000220e:	je     0x1400022bd
   140002214:	mov    rdx,rdi
   140002217:	mov    rcx,rbx
   14000221a:	call   0x1400090f8
   14000221f:	test   eax,eax
   140002221:	je     0x1400022bd
   140002227:	test   rsi,rsi
   14000222a:	je     0x1400022d8
   140002230:	test   rbp,rbp
   140002233:	je     0x1400022d8
   140002239:	lea    rdx,[rip+0x36520]        # 0x140038760
   140002240:	mov    rcx,rbx
   140002243:	call   0x1400090f8
   140002248:	test   eax,eax
   14000224a:	je     0x1400022bd
   14000224c:	mov    rdx,rsi
   14000224f:	mov    rcx,rbx
   140002252:	call   0x1400090f8
   140002257:	test   eax,eax
   140002259:	je     0x1400022bd
   14000225b:	mov    rdx,rbp
   14000225e:	mov    rcx,rbx
   140002261:	call   0x1400090f8
   140002266:	test   eax,eax
   140002268:	je     0x1400022bd
   14000226a:	lea    rdx,[rip+0x364e7]        # 0x140038758
   140002271:	mov    rcx,rbx
   140002274:	call   0x1400090f8
   140002279:	test   eax,eax
   14000227b:	je     0x1400022bd
   14000227d:	xor    edi,edi
   14000227f:	mov    rcx,rbx
   140002282:	call   0x1400091b8
   140002287:	test   rax,rax
   14000228a:	je     0x1400022ae
   14000228c:	lea    r8,[rip+0x3651d]        # 0x1400387b0
   140002293:	sub    r8,rax
   140002296:	movzx  ecx,WORD PTR [rax]
   140002299:	movzx  edx,WORD PTR [rax+r8*1]
   14000229e:	sub    ecx,edx
   1400022a0:	jne    0x1400022aa
   1400022a2:	add    rax,0x2
   1400022a6:	test   edx,edx
   1400022a8:	jne    0x140002296
   1400022aa:	test   ecx,ecx
   1400022ac:	je     0x1400022f3
   1400022ae:	inc    edi
   1400022b0:	cmp    edi,0x5
   1400022b3:	jl     0x14000227f
   1400022b5:	mov    rcx,rbx
   1400022b8:	call   0x14000a0cc
   1400022bd:	xor    eax,eax
   1400022bf:	mov    rbx,QWORD PTR [rsp+0x40]
   1400022c4:	mov    rbp,QWORD PTR [rsp+0x48]
   1400022c9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400022ce:	add    rsp,0x20
   1400022d2:	pop    r13
   1400022d4:	pop    r12
   1400022d6:	pop    rdi
   1400022d7:	ret    
   1400022d8:	lea    rdx,[rip+0x36441]        # 0x140038720
   1400022df:	mov    rcx,rbx
   1400022e2:	call   0x1400090f8
   1400022e7:	test   eax,eax
   1400022e9:	je     0x1400022bd
   1400022eb:	mov    rdx,r13
   1400022ee:	jmp    0x14000225e
   1400022f3:	mov    rcx,rbx
   1400022f6:	call   0x14000a0cc
   1400022fb:	mov    eax,0x1
   140002300:	jmp    0x1400022bf
   140002302:	int3   
   140002303:	int3   
   140002304:	int3   
   140002305:	int3   
   140002306:	int3   
   140002307:	int3   
   140002308:	int3   
   140002309:	int3   
   14000230a:	int3   
   14000230b:	int3   
   14000230c:	int3   
   14000230d:	int3   
   14000230e:	int3   
   14000230f:	int3   
   140002310:	sub    rsp,0x28
   140002314:	mov    ecx,0x18
   140002319:	call   0x14000bd98
   14000231e:	mov    rcx,rax
   140002321:	add    rsp,0x28
   140002325:	jmp    0x140009fcc
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	int3   
   14000232d:	int3   
   14000232e:	int3   
   14000232f:	int3   
   140002330:	mov    QWORD PTR [rsp+0x18],rbx
   140002335:	push   rbp
   140002336:	push   rsi
   140002337:	push   rdi
   140002338:	push   r12
   14000233a:	push   r13
   14000233c:	push   r14
   14000233e:	push   r15
   140002340:	lea    rbp,[rsp-0xb820]
   140002348:	mov    eax,0xb920
   14000234d:	call   0x140012f50
   140002352:	sub    rsp,rax
   140002355:	mov    rax,QWORD PTR [rip+0x3d5d4]        # 0x14003f930
   14000235c:	xor    rax,rsp
   14000235f:	mov    QWORD PTR [rbp+0xb810],rax
   140002366:	or     DWORD PTR [rbp-0x80],0xffffffff
   14000236a:	xor    edi,edi
   14000236c:	movsxd r14,ecx
   14000236f:	lea    r12d,[rdi+0x1]
   140002373:	mov    r13,rdx
   140002376:	lea    rcx,[rbp+0x7012]
   14000237d:	mov    ebx,edi
   14000237f:	xor    edx,edx
   140002381:	mov    r8d,0x7fe
   140002387:	mov    DWORD PTR [rsp+0x40],r12d
   14000238c:	mov    DWORD PTR [rsp+0x7c],r12d
   140002391:	mov    QWORD PTR [rbp-0x68],rdi
   140002395:	mov    QWORD PTR [rbp-0x48],rdi
   140002399:	mov    DWORD PTR [rsp+0x54],edi
   14000239d:	mov    DWORD PTR [rsp+0x50],edi
   1400023a1:	mov    DWORD PTR [rsp+0x70],edi
   1400023a5:	mov    DWORD PTR [rsp+0x44],edi
   1400023a9:	mov    DWORD PTR [rsp+0x78],edi
   1400023ad:	mov    DWORD PTR [rsp+0x60],edi
   1400023b1:	mov    DWORD PTR [rsp+0x58],edi
   1400023b5:	mov    DWORD PTR [rsp+0x5c],ebx
   1400023b9:	mov    DWORD PTR [rbp-0x78],edi
   1400023bc:	mov    QWORD PTR [rbp-0x70],rdi
   1400023c0:	mov    QWORD PTR [rsp+0x68],rdi
   1400023c5:	mov    r15d,edi
   1400023c8:	mov    QWORD PTR [rbp-0x58],rdi
   1400023cc:	mov    DWORD PTR [rbp-0x7c],edi
   1400023cf:	mov    QWORD PTR [rbp-0x60],rdi
   1400023d3:	mov    QWORD PTR [rbp-0x50],rdi
   1400023d7:	mov    WORD PTR [rbp+0x7010],di
   1400023de:	call   0x140012fb0
   1400023e3:	mov    DWORD PTR [rsp+0x74],edi
   1400023e7:	call   0x140009ddc
   1400023ec:	mov    QWORD PTR [rbp-0x40],rax
   1400023f0:	mov    esi,0x800
   1400023f5:	cmp    r14d,0x2
   1400023f9:	jne    0x140002405
   1400023fb:	mov    rax,QWORD PTR [r13+0x8]
   1400023ff:	cmp    WORD PTR [rax],0x2d
   140002403:	jne    0x14000243a
   140002405:	cmp    r14d,0x3
   140002409:	jne    0x140003003
   14000240f:	mov    rdi,QWORD PTR [r13+0x8]
   140002413:	lea    rax,[rip+0x363ee]        # 0x140038808
   14000241a:	sub    rdi,rax
   14000241d:	movzx  edx,WORD PTR [rax]
   140002420:	movzx  ecx,WORD PTR [rax+rdi*1]
   140002424:	sub    edx,ecx
   140002426:	jne    0x140002430
   140002428:	add    rax,0x2
   14000242c:	test   ecx,ecx
   14000242e:	jne    0x14000241d
   140002430:	xor    edi,edi
   140002432:	test   edx,edx
   140002434:	jne    0x140003003
   14000243a:	mov    ebx,0xffe
   14000243f:	lea    rcx,[rbp+0x5012]
   140002446:	xor    edx,edx
   140002448:	mov    r8d,ebx
   14000244b:	mov    WORD PTR [rbp+0x5010],di
   140002452:	call   0x140012fb0
   140002457:	lea    rcx,[rbp+0x4012]
   14000245e:	mov    r8d,ebx
   140002461:	xor    edx,edx
   140002463:	mov    WORD PTR [rbp+0x4010],di
   14000246a:	call   0x140012fb0
   14000246f:	lea    rcx,[rbp+0x3012]
   140002476:	mov    r8d,ebx
   140002479:	xor    edx,edx
   14000247b:	mov    WORD PTR [rbp+0x3010],di
   140002482:	call   0x140012fb0
   140002487:	lea    rcx,[rbp+0x12]
   14000248b:	mov    r8d,ebx
   14000248e:	xor    edx,edx
   140002490:	mov    WORD PTR [rbp+0x10],di
   140002494:	call   0x140012fb0
   140002499:	lea    rcx,[rbp+0x1012]
   1400024a0:	mov    r8d,ebx
   1400024a3:	xor    edx,edx
   1400024a5:	mov    WORD PTR [rbp+0x1010],di
   1400024ac:	call   0x140012fb0
   1400024b1:	lea    rcx,[rbp+0x6012]
   1400024b8:	mov    r8d,ebx
   1400024bb:	xor    edx,edx
   1400024bd:	mov    WORD PTR [rbp+0x6010],di
   1400024c4:	call   0x140012fb0
   1400024c9:	lea    rcx,[rbp+0x2012]
   1400024d0:	mov    r8d,ebx
   1400024d3:	xor    edx,edx
   1400024d5:	mov    WORD PTR [rbp+0x2010],di
   1400024dc:	call   0x140012fb0
   1400024e1:	lea    rcx,[rbp+0x4010]
   1400024e8:	mov    edx,esi
   1400024ea:	call   0x140010ee4
   1400024ef:	lea    rcx,[rbp+0x3010]
   1400024f6:	mov    edx,esi
   1400024f8:	call   0x140010fa4
   1400024fd:	lea    rcx,[rbp+0x10]
   140002501:	mov    edx,esi
   140002503:	call   0x140010f44
   140002508:	lea    rdx,[rbp+0x1010]
   14000250f:	lea    rcx,[rbp+0x4010]
   140002516:	mov    r8d,esi
   140002519:	call   0x140010d94
   14000251e:	lea    rdx,[rbp+0x6010]
   140002525:	lea    rcx,[rbp+0x3010]
   14000252c:	mov    r8d,esi
   14000252f:	call   0x140010d94
   140002534:	lea    rdx,[rbp+0x2010]
   14000253b:	lea    rcx,[rbp+0x10]
   14000253f:	mov    r8d,esi
   140002542:	call   0x140010d94
   140002547:	lea    rdx,[rbp+0x1010]
   14000254e:	lea    rdi,[rip+0x362cb]        # 0x140038820
   140002555:	sub    rdi,rdx
   140002558:	movzx  ecx,WORD PTR [rdx]
   14000255b:	movzx  eax,WORD PTR [rdx+rdi*1]
   14000255f:	sub    ecx,eax
   140002561:	jne    0x14000256b
   140002563:	add    rdx,0x2
   140002567:	test   eax,eax
   140002569:	jne    0x140002558
   14000256b:	xor    r12d,r12d
   14000256e:	test   ecx,ecx
   140002570:	jne    0x140002577
   140002572:	lea    edi,[rcx+0x1]
   140002575:	jmp    0x1400025da
   140002577:	lea    rax,[rbp+0x1010]
   14000257e:	lea    rdi,[rip+0x362ab]        # 0x140038830
   140002585:	sub    rdi,rax
   140002588:	movzx  edx,WORD PTR [rax]
   14000258b:	movzx  ecx,WORD PTR [rax+rdi*1]
   14000258f:	sub    edx,ecx
   140002591:	jne    0x14000259b
   140002593:	add    rax,0x2
   140002597:	test   ecx,ecx
   140002599:	jne    0x140002588
   14000259b:	test   edx,edx
   14000259d:	jne    0x1400025a4
   14000259f:	lea    edi,[rdx+0x2]
   1400025a2:	jmp    0x1400025da
   1400025a4:	lea    rax,[rbp+0x1010]
   1400025ab:	lea    rdx,[rip+0x3628e]        # 0x140038840
   1400025b2:	sub    rdx,rax
   1400025b5:	movzx  ecx,WORD PTR [rax]
   1400025b8:	cmp    cx,WORD PTR [rax+rdx*1]
   1400025bc:	jne    0x1400025cc
   1400025be:	add    rax,0x2
   1400025c2:	test   cx,cx
   1400025c5:	jne    0x1400025b5
   1400025c7:	mov    eax,r12d
   1400025ca:	jmp    0x1400025d1
   1400025cc:	sbb    eax,eax
   1400025ce:	sbb    eax,0xffffffff
   1400025d1:	neg    eax
   1400025d3:	sbb    edi,edi
   1400025d5:	not    edi
   1400025d7:	and    edi,0x3
   1400025da:	lea    rax,[rbp+0x6010]
   1400025e1:	lea    rdx,[rip+0x36268]        # 0x140038850
   1400025e8:	sub    rdx,rax
   1400025eb:	movzx  r8d,WORD PTR [rax]
   1400025ef:	movzx  ecx,WORD PTR [rax+rdx*1]
   1400025f3:	sub    r8d,ecx
   1400025f6:	jne    0x140002600
   1400025f8:	add    rax,0x2
   1400025fc:	test   ecx,ecx
   1400025fe:	jne    0x1400025eb
   140002600:	test   r8d,r8d
   140002603:	lea    rdx,[rip+0x35f2a]        # 0x140038534
   14000260a:	lea    rcx,[rbp+0x2010]
   140002611:	lea    r8,[rsp+0x48]
   140002616:	mov    ebx,r12d
   140002619:	mov    QWORD PTR [rsp+0x48],r12
   14000261e:	sete   bl
   140002621:	call   0x140013f24
   140002626:	mov    rsi,QWORD PTR [rsp+0x48]
   14000262b:	test   edi,edi
   14000262d:	jne    0x14000275b
   140002633:	lea    rdx,[rbp+0x1010]
   14000263a:	lea    rcx,[rbp+0x4010]
   140002641:	mov    r8d,0x800
   140002647:	call   0x140011124
   14000264c:	lea    rdx,[rbp+0x1010]
   140002653:	lea    rdi,[rip+0x36206]        # 0x140038860
   14000265a:	sub    rdi,rdx
   14000265d:	movzx  ecx,WORD PTR [rdx]
   140002660:	movzx  eax,WORD PTR [rdx+rdi*1]
   140002664:	sub    ecx,eax
   140002666:	jne    0x140002670
   140002668:	add    rdx,0x2
   14000266c:	test   eax,eax
   14000266e:	jne    0x14000265d
   140002670:	test   ecx,ecx
   140002672:	jne    0x140002679
   140002674:	lea    edi,[rcx+0x1]
   140002677:	jmp    0x1400026dc
   140002679:	lea    rax,[rbp+0x1010]
   140002680:	lea    rdi,[rip+0x361e9]        # 0x140038870
   140002687:	sub    rdi,rax
   14000268a:	movzx  edx,WORD PTR [rax]
   14000268d:	movzx  ecx,WORD PTR [rax+rdi*1]
   140002691:	sub    edx,ecx
   140002693:	jne    0x14000269d
   140002695:	add    rax,0x2
   140002699:	test   ecx,ecx
   14000269b:	jne    0x14000268a
   14000269d:	test   edx,edx
   14000269f:	jne    0x1400026a6
   1400026a1:	lea    edi,[rdx+0x2]
   1400026a4:	jmp    0x1400026dc
   1400026a6:	lea    rax,[rbp+0x1010]
   1400026ad:	lea    rdx,[rip+0x361cc]        # 0x140038880
   1400026b4:	sub    rdx,rax
   1400026b7:	movzx  ecx,WORD PTR [rax]
   1400026ba:	cmp    cx,WORD PTR [rax+rdx*1]
   1400026be:	jne    0x1400026ce
   1400026c0:	add    rax,0x2
   1400026c4:	test   cx,cx
   1400026c7:	jne    0x1400026b7
   1400026c9:	mov    eax,r12d
   1400026cc:	jmp    0x1400026d3
   1400026ce:	sbb    eax,eax
   1400026d0:	sbb    eax,0xffffffff
   1400026d3:	neg    eax
   1400026d5:	sbb    edi,edi
   1400026d7:	not    edi
   1400026d9:	and    edi,0x3
   1400026dc:	lea    rdx,[rbp+0x6010]
   1400026e3:	lea    rcx,[rbp+0x3010]
   1400026ea:	mov    r8d,0x800
   1400026f0:	call   0x140011124
   1400026f5:	lea    r11,[rbp+0x6010]
   1400026fc:	lea    rdx,[rip+0x3618d]        # 0x140038890
   140002703:	sub    rdx,r11
   140002706:	movzx  ecx,WORD PTR [r11]
   14000270a:	movzx  eax,WORD PTR [r11+rdx*1]
   14000270f:	sub    ecx,eax
   140002711:	jne    0x14000271b
   140002713:	add    r11,0x2
   140002717:	test   eax,eax
   140002719:	jne    0x140002706
   14000271b:	test   ecx,ecx
   14000271d:	lea    rdx,[rbp+0x2010]
   140002724:	lea    rcx,[rbp+0x10]
   140002728:	mov    r8d,0x800
   14000272e:	mov    ebx,r12d
   140002731:	sete   bl
   140002734:	call   0x140011124
   140002739:	lea    r8,[rsp+0x48]
   14000273e:	lea    rdx,[rip+0x36157]        # 0x14003889c
   140002745:	lea    rcx,[rbp+0x2010]
   14000274c:	mov    QWORD PTR [rsp+0x48],r12
   140002751:	call   0x140013f24
   140002756:	mov    rsi,QWORD PTR [rsp+0x48]
   14000275b:	lea    rdx,[rbp+0x5010]
   140002762:	lea    rcx,[rip+0x3613f]        # 0x1400388a8
   140002769:	mov    r8d,0x800
   14000276f:	call   0x140011124
   140002774:	test   eax,eax
   140002776:	je     0x1400027d5
   140002778:	lea    rax,[rbp+0x5010]
   14000277f:	lea    r8,[rip+0x3615a]        # 0x1400388e0
   140002786:	sub    r8,rax
   140002789:	movzx  edx,WORD PTR [rax]
   14000278c:	movzx  ecx,WORD PTR [rax+r8*1]
   140002791:	sub    edx,ecx
   140002793:	jne    0x14000279d
   140002795:	add    rax,0x2
   140002799:	test   ecx,ecx
   14000279b:	jne    0x140002789
   14000279d:	test   edx,edx
   14000279f:	jne    0x1400027d5
   1400027a1:	call   0x1400107c0
   1400027a6:	mov    eax,0x1
   1400027ab:	mov    rcx,QWORD PTR [rbp+0xb810]
   1400027b2:	xor    rcx,rsp
   1400027b5:	call   0x140012670
   1400027ba:	mov    rbx,QWORD PTR [rsp+0xb970]
   1400027c2:	add    rsp,0xb920
   1400027c9:	pop    r15
   1400027cb:	pop    r14
   1400027cd:	pop    r13
   1400027cf:	pop    r12
   1400027d1:	pop    rdi
   1400027d2:	pop    rsi
   1400027d3:	pop    rbp
   1400027d4:	ret    
   1400027d5:	xor    ecx,ecx
   1400027d7:	mov    eax,r12d
   1400027da:	lea    r12d,[rcx+0xa]
   1400027de:	test   edi,edi
   1400027e0:	je     0x1400028aa
   1400027e6:	test   ebx,ebx
   1400027e8:	jne    0x1400028aa
   1400027ee:	cmp    rsi,0xffffffffffffffff
   1400027f2:	je     0x1400028aa
   1400027f8:	call   0x140012ed8
   1400027fd:	xor    ecx,ecx
   1400027ff:	xor    edx,edx
   140002801:	mov    WORD PTR [rbp+0x3010],cx
   140002808:	lea    rcx,[rbp+0x3012]
   14000280f:	mov    r8d,0xffe
   140002815:	mov    rbx,rax
   140002818:	call   0x140012fb0
   14000281d:	xor    eax,eax
   14000281f:	lea    rcx,[rbp+0x12]
   140002823:	xor    edx,edx
   140002825:	mov    r8d,0xffe
   14000282b:	mov    WORD PTR [rbp+0x10],ax
   14000282f:	call   0x140012fb0
   140002834:	lea    rcx,[rbp+0x10]
   140002838:	mov    edx,0x800
   14000283d:	call   0x140011004
   140002842:	lea    rdx,[rbp+0x3010]
   140002849:	lea    rcx,[rbp+0x10]
   14000284d:	mov    r8d,0x800
   140002853:	call   0x140011124
   140002858:	xor    ecx,ecx
   14000285a:	test   eax,eax
   14000285c:	je     0x14000287f
   14000285e:	lea    r8,[rsp+0x48]
   140002863:	lea    rdx,[rip+0x36082]        # 0x1400388ec
   14000286a:	lea    rcx,[rbp+0x3010]
   140002871:	call   0x140013f24
   140002876:	mov    r11,QWORD PTR [rsp+0x48]
   14000287b:	xor    ecx,ecx
   14000287d:	jmp    0x14000288e
   14000287f:	mov    r11,r12
   140002882:	cmp    edi,0x3
   140002885:	mov    eax,0x93a80
   14000288a:	cmove  r11,rax
   14000288e:	lea    rax,[rsi-0x15180]
   140002895:	cmp    rbx,rax
   140002898:	jl     0x1400028a5
   14000289a:	lea    rax,[r11+rsi*1]
   14000289e:	cmp    rbx,rax
   1400028a1:	mov    eax,ecx
   1400028a3:	jle    0x1400028aa
   1400028a5:	mov    eax,0x1
   1400028aa:	cmp    edi,0x2
   1400028ad:	jne    0x1400028ba
   1400028af:	xor    edi,edi
   1400028b1:	test   eax,eax
   1400028b3:	jne    0x1400028bc
   1400028b5:	jmp    0x1400027a1
   1400028ba:	xor    edi,edi
   1400028bc:	call   0x1400010f0
   1400028c1:	test   eax,eax
   1400028c3:	je     0x140002f90
   1400028c9:	mov    ebx,0xffe
   1400028ce:	lea    rcx,[rbp+0x12]
   1400028d2:	xor    edx,edx
   1400028d4:	mov    r8d,ebx
   1400028d7:	mov    WORD PTR [rbp+0x10],di
   1400028db:	call   0x140012fb0
   1400028e0:	lea    rcx,[rbp+0x3012]
   1400028e7:	mov    r8d,ebx
   1400028ea:	xor    edx,edx
   1400028ec:	mov    WORD PTR [rbp+0x3010],di
   1400028f3:	call   0x140012fb0
   1400028f8:	lea    rcx,[rbp+0x4012]
   1400028ff:	mov    r8d,ebx
   140002902:	xor    edx,edx
   140002904:	mov    WORD PTR [rbp+0x4010],di
   14000290b:	call   0x140012fb0
   140002910:	lea    rcx,[rbp+0x1012]
   140002917:	mov    r8d,ebx
   14000291a:	xor    edx,edx
   14000291c:	mov    WORD PTR [rbp+0x1010],di
   140002923:	call   0x140012fb0
   140002928:	lea    rcx,[rbp+0x2012]
   14000292f:	mov    r8d,ebx
   140002932:	xor    edx,edx
   140002934:	mov    WORD PTR [rbp+0x2010],di
   14000293b:	call   0x140012fb0
   140002940:	lea    rcx,[rbp+0x6012]
   140002947:	mov    r8d,ebx
   14000294a:	xor    edx,edx
   14000294c:	mov    WORD PTR [rbp+0x6010],di
   140002953:	call   0x140012fb0
   140002958:	mov    edi,0x800
   14000295d:	lea    rcx,[rbp+0x10]
   140002961:	mov    edx,edi
   140002963:	call   0x140010ee4
   140002968:	lea    rcx,[rbp+0x3010]
   14000296f:	mov    edx,edi
   140002971:	call   0x140010fa4
   140002976:	lea    rcx,[rbp+0x4010]
   14000297d:	mov    edx,edi
   14000297f:	call   0x140010f44
   140002984:	lea    rdx,[rbp+0x1010]
   14000298b:	lea    rcx,[rbp+0x10]
   14000298f:	mov    r8d,edi
   140002992:	call   0x140010d94
   140002997:	lea    rdx,[rbp+0x2010]
   14000299e:	lea    rcx,[rbp+0x3010]
   1400029a5:	mov    r8d,edi
   1400029a8:	call   0x140010d94
   1400029ad:	lea    rdx,[rbp+0x6010]
   1400029b4:	lea    rcx,[rbp+0x4010]
   1400029bb:	mov    r8d,edi
   1400029be:	call   0x140010d94
   1400029c3:	lea    rdx,[rbp+0x1010]
   1400029ca:	lea    rdi,[rip+0x35f27]        # 0x1400388f8
   1400029d1:	sub    rdi,rdx
   1400029d4:	movzx  ecx,WORD PTR [rdx]
   1400029d7:	movzx  eax,WORD PTR [rdx+rdi*1]
   1400029db:	sub    ecx,eax
   1400029dd:	jne    0x1400029e7
   1400029df:	add    rdx,0x2
   1400029e3:	test   eax,eax
   1400029e5:	jne    0x1400029d4
   1400029e7:	xor    r9d,r9d
   1400029ea:	test   ecx,ecx
   1400029ec:	jne    0x1400029f3
   1400029ee:	lea    ebx,[rcx+0x1]
   1400029f1:	jmp    0x140002a56
   1400029f3:	lea    rax,[rbp+0x1010]
   1400029fa:	lea    rdi,[rip+0x35f07]        # 0x140038908
   140002a01:	sub    rdi,rax
   140002a04:	movzx  edx,WORD PTR [rax]
   140002a07:	movzx  ecx,WORD PTR [rax+rdi*1]
   140002a0b:	sub    edx,ecx
   140002a0d:	jne    0x140002a17
   140002a0f:	add    rax,0x2
   140002a13:	test   ecx,ecx
   140002a15:	jne    0x140002a04
   140002a17:	test   edx,edx
   140002a19:	jne    0x140002a20
   140002a1b:	lea    ebx,[rdx+0x2]
   140002a1e:	jmp    0x140002a56
   140002a20:	lea    rax,[rbp+0x1010]
   140002a27:	lea    rdx,[rip+0x35eea]        # 0x140038918
   140002a2e:	sub    rdx,rax
   140002a31:	movzx  ecx,WORD PTR [rax]
   140002a34:	cmp    cx,WORD PTR [rax+rdx*1]
   140002a38:	jne    0x140002a48
   140002a3a:	add    rax,0x2
   140002a3e:	test   cx,cx
   140002a41:	jne    0x140002a31
   140002a43:	mov    eax,r9d
   140002a46:	jmp    0x140002a4d
   140002a48:	sbb    eax,eax
   140002a4a:	sbb    eax,0xffffffff
   140002a4d:	neg    eax
   140002a4f:	sbb    ebx,ebx
   140002a51:	not    ebx
   140002a53:	and    ebx,0x3
   140002a56:	lea    rax,[rbp+0x2010]
   140002a5d:	lea    rdx,[rip+0x35ec4]        # 0x140038928
   140002a64:	sub    rdx,rax
   140002a67:	movzx  r8d,WORD PTR [rax]
   140002a6b:	movzx  ecx,WORD PTR [rax+rdx*1]
   140002a6f:	sub    r8d,ecx
   140002a72:	jne    0x140002a7c
   140002a74:	add    rax,0x2
   140002a78:	test   ecx,ecx
   140002a7a:	jne    0x140002a67
   140002a7c:	test   r8d,r8d
   140002a7f:	mov    edi,r9d
   140002a82:	lea    rdx,[rip+0x35eab]        # 0x140038934
   140002a89:	lea    r8,[rsp+0x48]
   140002a8e:	lea    rcx,[rbp+0x6010]
   140002a95:	mov    QWORD PTR [rsp+0x48],r9
   140002a9a:	sete   dil
   140002a9e:	call   0x140013f24
   140002aa3:	mov    rsi,QWORD PTR [rsp+0x48]
   140002aa8:	xor    eax,eax
   140002aaa:	test   ebx,ebx
   140002aac:	jne    0x140002be3
   140002ab2:	lea    rdx,[rbp+0x1010]
   140002ab9:	lea    rcx,[rbp+0x10]
   140002abd:	mov    r8d,0x800
   140002ac3:	call   0x140011124
   140002ac8:	lea    rdx,[rbp+0x1010]
   140002acf:	lea    rdi,[rip+0x35e6a]        # 0x140038940
   140002ad6:	sub    rdi,rdx
   140002ad9:	movzx  ecx,WORD PTR [rdx]
   140002adc:	movzx  eax,WORD PTR [rdx+rdi*1]
   140002ae0:	sub    ecx,eax
   140002ae2:	jne    0x140002aec
   140002ae4:	add    rdx,0x2
   140002ae8:	test   eax,eax
   140002aea:	jne    0x140002ad9
   140002aec:	xor    esi,esi
   140002aee:	test   ecx,ecx
   140002af0:	jne    0x140002af7
   140002af2:	lea    ebx,[rsi+0x1]
   140002af5:	jmp    0x140002b59
   140002af7:	lea    rax,[rbp+0x1010]
   140002afe:	lea    rdi,[rip+0x35e4b]        # 0x140038950
   140002b05:	sub    rdi,rax
   140002b08:	movzx  edx,WORD PTR [rax]
   140002b0b:	movzx  ecx,WORD PTR [rax+rdi*1]
   140002b0f:	sub    edx,ecx
   140002b11:	jne    0x140002b1b
   140002b13:	add    rax,0x2
   140002b17:	test   ecx,ecx
   140002b19:	jne    0x140002b08
   140002b1b:	test   edx,edx
   140002b1d:	jne    0x140002b24
   140002b1f:	lea    ebx,[rdx+0x2]
   140002b22:	jmp    0x140002b59
   140002b24:	lea    rax,[rbp+0x1010]
   140002b2b:	lea    rdx,[rip+0x35e2e]        # 0x140038960
   140002b32:	sub    rdx,rax
   140002b35:	movzx  ecx,WORD PTR [rax]
   140002b38:	cmp    cx,WORD PTR [rax+rdx*1]
   140002b3c:	jne    0x140002b4b
   140002b3e:	add    rax,0x2
   140002b42:	test   cx,cx
   140002b45:	jne    0x140002b35
   140002b47:	mov    eax,esi
   140002b49:	jmp    0x140002b50
   140002b4b:	sbb    eax,eax
   140002b4d:	sbb    eax,0xffffffff
   140002b50:	neg    eax
   140002b52:	sbb    ebx,ebx
   140002b54:	not    ebx
   140002b56:	and    ebx,0x3
   140002b59:	lea    rdx,[rbp+0x2010]
   140002b60:	lea    rcx,[rbp+0x3010]
   140002b67:	mov    r8d,0x800
   140002b6d:	call   0x140011124
   140002b72:	lea    rdx,[rbp+0x2010]
   140002b79:	lea    rdi,[rip+0x35df0]        # 0x140038970
   140002b80:	sub    rdi,rdx
   140002b83:	movzx  ecx,WORD PTR [rdx]
   140002b86:	movzx  eax,WORD PTR [rdx+rdi*1]
   140002b8a:	sub    ecx,eax
   140002b8c:	jne    0x140002b96
   140002b8e:	add    rdx,0x2
   140002b92:	test   eax,eax
   140002b94:	jne    0x140002b83
   140002b96:	test   ecx,ecx
   140002b98:	lea    rdx,[rbp+0x6010]
   140002b9f:	lea    rcx,[rbp+0x4010]
   140002ba6:	mov    r8d,0x800
   140002bac:	mov    edi,esi
   140002bae:	sete   dil
   140002bb2:	call   0x140011124
   140002bb7:	lea    r8,[rsp+0x48]
   140002bbc:	lea    rdx,[rip+0x35db9]        # 0x14003897c
   140002bc3:	lea    rcx,[rbp+0x6010]
   140002bca:	mov    QWORD PTR [rsp+0x48],rsi
   140002bcf:	call   0x140013f24
   140002bd4:	mov    rsi,QWORD PTR [rsp+0x48]
   140002bd9:	xor    eax,eax
   140002bdb:	test   ebx,ebx
   140002bdd:	je     0x140002ca1
   140002be3:	test   edi,edi
   140002be5:	jne    0x140002f85
   140002beb:	cmp    rsi,0xffffffffffffffff
   140002bef:	je     0x140002f85
   140002bf5:	xor    ecx,ecx
   140002bf7:	call   0x140012ed8
   140002bfc:	lea    rcx,[rbp+0x12]
   140002c00:	xor    edx,edx
   140002c02:	mov    rdi,rax
   140002c05:	xor    eax,eax
   140002c07:	mov    r8d,0xffe
   140002c0d:	mov    WORD PTR [rbp+0x10],ax
   140002c11:	call   0x140012fb0
   140002c16:	xor    eax,eax
   140002c18:	lea    rcx,[rbp+0x5012]
   140002c1f:	xor    edx,edx
   140002c21:	mov    r8d,0xffe
   140002c27:	mov    WORD PTR [rbp+0x5010],ax
   140002c2e:	call   0x140012fb0
   140002c33:	lea    rcx,[rbp+0x5010]
   140002c3a:	mov    edx,0x800
   140002c3f:	call   0x140011004
   140002c44:	lea    rdx,[rbp+0x10]
   140002c48:	lea    rcx,[rbp+0x5010]
   140002c4f:	mov    r8d,0x800
   140002c55:	call   0x140011124
   140002c5a:	test   eax,eax
   140002c5c:	je     0x140002c7a
   140002c5e:	lea    r8,[rsp+0x48]
   140002c63:	lea    rdx,[rip+0x35d1a]        # 0x140038984
   140002c6a:	lea    rcx,[rbp+0x10]
   140002c6e:	call   0x140013f24
   140002c73:	mov    r12,QWORD PTR [rsp+0x48]
   140002c78:	jmp    0x140002c86
   140002c7a:	cmp    ebx,0x3
   140002c7d:	mov    eax,0x93a80
   140002c82:	cmove  r12,rax
   140002c86:	lea    rax,[rsi-0x15180]
   140002c8d:	cmp    rdi,rax
   140002c90:	jl     0x140002c9f
   140002c92:	lea    rax,[r12+rsi*1]
   140002c96:	cmp    rdi,rax
   140002c99:	jle    0x140002f85
   140002c9f:	xor    eax,eax
   140002ca1:	mov    r12d,0xffe
   140002ca7:	lea    rcx,[rbp+0x5012]
   140002cae:	xor    edx,edx
   140002cb0:	mov    r8d,r12d
   140002cb3:	mov    WORD PTR [rbp+0x5010],ax
   140002cba:	call   0x140012fb0
   140002cbf:	lea    rdx,[rbp+0x5010]
   140002cc6:	lea    rcx,[rip+0x35cc3]        # 0x140038990
   140002ccd:	mov    r8d,0x800
   140002cd3:	call   0x140011124
   140002cd8:	lea    rdx,[rbp+0x5010]
   140002cdf:	lea    rdi,[rip+0x35ce2]        # 0x1400389c8
   140002ce6:	sub    rdi,rdx
   140002ce9:	movzx  ecx,WORD PTR [rdx]
   140002cec:	movzx  eax,WORD PTR [rdx+rdi*1]
   140002cf0:	sub    ecx,eax
   140002cf2:	jne    0x140002cfc
   140002cf4:	add    rdx,0x2
   140002cf8:	test   eax,eax
   140002cfa:	jne    0x140002ce9
   140002cfc:	xor    edi,edi
   140002cfe:	test   ecx,ecx
   140002d00:	mov    esi,edi
   140002d02:	sete   sil
   140002d06:	call   0x1400010f0
   140002d0b:	test   eax,eax
   140002d0d:	je     0x140002d6b
   140002d0f:	lea    r8d,[rdi+0x24]
   140002d13:	lea    rcx,[rbp-0x20]
   140002d17:	xor    edx,edx
   140002d19:	call   0x140012fb0
   140002d1e:	lea    rdx,[rbp-0xc]
   140002d22:	lea    r9,[rbp-0x14]
   140002d26:	mov    QWORD PTR [rsp+0x20],rdx
   140002d2b:	lea    r8,[rbp-0x10]
   140002d2f:	lea    rcx,[rip+0x35cba]        # 0x1400389f0
   140002d36:	lea    rdx,[rip+0x35c9b]        # 0x1400389d8
   140002d3d:	call   0x140013f24
   140002d42:	sub    DWORD PTR [rbp-0xc],0x76c
   140002d49:	dec    DWORD PTR [rbp-0x10]
   140002d4c:	xor    ecx,ecx
   140002d4e:	call   0x140012ed8
   140002d53:	lea    rcx,[rbp-0x20]
   140002d57:	mov    rdi,rax
   140002d5a:	call   0x140012ecc
   140002d5f:	xor    ecx,ecx
   140002d61:	cmp    rdi,rax
   140002d64:	setg   cl
   140002d67:	xor    edi,edi
   140002d69:	jmp    0x140002d6d
   140002d6b:	mov    ecx,edi
   140002d6d:	test   esi,esi
   140002d6f:	jne    0x140002d79
   140002d71:	test   ecx,ecx
   140002d73:	je     0x140002f87
   140002d79:	lea    rcx,[rbp-0x20]
   140002d7d:	call   0x1400103e0
   140002d82:	lea    rcx,[rbp+0x1012]
   140002d89:	mov    r8,r12
   140002d8c:	mov    rdx,rax
   140002d8f:	mov    rax,QWORD PTR [rax]
   140002d92:	mov    WORD PTR [rbp+0x1010],di
   140002d99:	mov    QWORD PTR [rbp-0x38],rax
   140002d9d:	mov    rax,QWORD PTR [rdx+0x8]
   140002da1:	mov    QWORD PTR [rbp-0x30],rax
   140002da5:	mov    rax,QWORD PTR [rdx+0x10]
   140002da9:	xor    edx,edx
   140002dab:	mov    QWORD PTR [rbp-0x28],rax
   140002daf:	call   0x140012fb0
   140002db4:	lea    rcx,[rbp+0x12]
   140002db8:	mov    r8,r12
   140002dbb:	xor    edx,edx
   140002dbd:	mov    WORD PTR [rbp+0x10],di
   140002dc1:	call   0x140012fb0
   140002dc6:	mov    esi,0x800
   140002dcb:	lea    rcx,[rbp+0x10]
   140002dcf:	mov    edx,esi
   140002dd1:	call   0x140010ee4
   140002dd6:	mov    ebx,DWORD PTR [rbp-0x38]
   140002dd9:	mov    ecx,ebx
   140002ddb:	dec    ecx
   140002ddd:	je     0x140002e07
   140002ddf:	dec    ecx
   140002de1:	je     0x140002df7
   140002de3:	dec    ecx
   140002de5:	jne    0x140002e36
   140002de7:	lea    rdi,[rip+0x35c5a]        # 0x140038a48
   140002dee:	lea    r8,[rip+0x35c63]        # 0x140038a58
   140002df5:	jmp    0x140002e15
   140002df7:	lea    rdi,[rip+0x35c2a]        # 0x140038a28
   140002dfe:	lea    r8,[rip+0x35c33]        # 0x140038a38
   140002e05:	jmp    0x140002e15
   140002e07:	lea    rdi,[rip+0x35bfa]        # 0x140038a08
   140002e0e:	lea    r8,[rip+0x35c03]        # 0x140038a18
   140002e15:	or     rcx,0xffffffffffffffff
   140002e19:	xor    eax,eax
   140002e1b:	mov    rdx,rsi
   140002e1e:	repnz scas ax,WORD PTR es:[rdi]
   140002e21:	not    rcx
   140002e24:	lea    r9,[rcx-0x1]
   140002e28:	lea    rcx,[rbp+0x1010]
   140002e2f:	call   0x140013da4
   140002e34:	xor    edi,edi
   140002e36:	lea    rdx,[rbp+0x1010]
   140002e3d:	lea    rcx,[rbp+0x10]
   140002e41:	call   0x1400114b4
   140002e46:	test   eax,eax
   140002e48:	jne    0x140002e5a
   140002e4a:	lea    rdx,[rbp+0x1010]
   140002e51:	lea    rcx,[rbp+0x10]
   140002e55:	call   0x140011064
   140002e5a:	lea    rcx,[rbp+0x12]
   140002e5e:	mov    r8,r12
   140002e61:	xor    edx,edx
   140002e63:	mov    WORD PTR [rbp+0x10],di
   140002e67:	call   0x140012fb0
   140002e6c:	lea    rcx,[rbp+0x3012]
   140002e73:	mov    r8,r12
   140002e76:	xor    edx,edx
   140002e78:	mov    WORD PTR [rbp+0x3010],di
   140002e7f:	call   0x140012fb0
   140002e84:	xor    ecx,ecx
   140002e86:	call   0x140012ed8
   140002e8b:	lea    r9,[rip+0x35bd2]        # 0x140038a64
   140002e92:	lea    rcx,[rbp+0x10]
   140002e96:	mov    r8,rsi
   140002e99:	mov    rdx,rsi
   140002e9c:	mov    QWORD PTR [rsp+0x20],rax
   140002ea1:	call   0x140013d80
   140002ea6:	lea    rcx,[rbp+0x3010]
   140002ead:	mov    edx,esi
   140002eaf:	call   0x140010f44
   140002eb4:	lea    rdx,[rbp+0x10]
   140002eb8:	lea    rcx,[rbp+0x3010]
   140002ebf:	call   0x1400114b4
   140002ec4:	test   eax,eax
   140002ec6:	jne    0x140002ed8
   140002ec8:	lea    rdx,[rbp+0x10]
   140002ecc:	lea    rcx,[rbp+0x3010]
   140002ed3:	call   0x140011064
   140002ed8:	lea    rcx,[rbp+0x2012]
   140002edf:	mov    r8,r12
   140002ee2:	xor    edx,edx
   140002ee4:	mov    WORD PTR [rbp+0x2010],di
   140002eeb:	call   0x140012fb0
   140002ef0:	lea    rcx,[rbp+0x12]
   140002ef4:	mov    r8,r12
   140002ef7:	xor    edx,edx
   140002ef9:	mov    WORD PTR [rbp+0x10],di
   140002efd:	call   0x140012fb0
   140002f02:	lea    rcx,[rbp+0x10]
   140002f06:	mov    edx,esi
   140002f08:	call   0x140010fa4
   140002f0d:	xor    eax,eax
   140002f0f:	or     rcx,0xffffffffffffffff
   140002f13:	cmp    DWORD PTR [rbp-0x34],0x1
   140002f17:	mov    rdx,rsi
   140002f1a:	jne    0x140002f2c
   140002f1c:	lea    rdi,[rip+0x35b4d]        # 0x140038a70
   140002f23:	lea    r8,[rip+0x35b56]        # 0x140038a80
   140002f2a:	jmp    0x140002f3a
   140002f2c:	lea    rdi,[rip+0x35b5d]        # 0x140038a90
   140002f33:	lea    r8,[rip+0x35b66]        # 0x140038aa0
   140002f3a:	repnz scas ax,WORD PTR es:[rdi]
   140002f3d:	not    rcx
   140002f40:	lea    r9,[rcx-0x1]
   140002f44:	lea    rcx,[rbp+0x2010]
   140002f4b:	call   0x140013da4
   140002f50:	lea    rdx,[rbp+0x2010]
   140002f57:	lea    rcx,[rbp+0x10]
   140002f5b:	call   0x1400114b4
   140002f60:	xor    edi,edi
   140002f62:	test   eax,eax
   140002f64:	jne    0x140002f76
   140002f66:	lea    rdx,[rbp+0x2010]
   140002f6d:	lea    rcx,[rbp+0x10]
   140002f71:	call   0x140011064
   140002f76:	cmp    ebx,0x1
   140002f79:	jne    0x140002f87
   140002f7b:	call   0x14000ff80
   140002f80:	jmp    0x1400027a6
   140002f85:	xor    edi,edi
   140002f87:	cmp    ebx,0x2
   140002f8a:	je     0x1400027a6
   140002f90:	mov    r12d,DWORD PTR [rsp+0x40]
   140002f95:	mov    ebx,r15d
   140002f98:	mov    rcx,r13
   140002f9b:	call   0x140004338
   140002fa0:	cmp    r14d,0x3
   140002fa4:	jl     0x140003009
   140002fa6:	mov    rdi,QWORD PTR [r13+0x8]
   140002faa:	lea    rax,[rip+0x35aff]        # 0x140038ab0
   140002fb1:	sub    rdi,rax
   140002fb4:	movzx  edx,WORD PTR [rax]
   140002fb7:	movzx  ecx,WORD PTR [rax+rdi*1]
   140002fbb:	sub    edx,ecx
   140002fbd:	jne    0x140002fc7
   140002fbf:	add    rax,0x2
   140002fc3:	test   ecx,ecx
   140002fc5:	jne    0x140002fb4
   140002fc7:	xor    edi,edi
   140002fc9:	test   edx,edx
   140002fcb:	jne    0x140003009
   140002fcd:	mov    rcx,QWORD PTR [r13+0x10]
   140002fd1:	call   0x140013c8c
   140002fd6:	mov    rcx,QWORD PTR [r13+0x18]
   140002fda:	mov    edi,eax
   140002fdc:	call   0x140001050
   140002fe1:	mov    ecx,edi
   140002fe3:	mov    rdx,rax
   140002fe6:	mov    rbx,rax
   140002fe9:	call   0x14000b9f8
   140002fee:	test   rbx,rbx
   140002ff1:	je     0x140002ffb
   140002ff3:	mov    rcx,rbx
   140002ff6:	call   0x1400130a8
   140002ffb:	xor    ecx,ecx
   140002ffd:	call   0x140013c2c
   140003002:	int3   
   140003003:	mov    DWORD PTR [rbp-0x78],r12d
   140003007:	jmp    0x140002f98
   140003009:	lea    rcx,[rip+0x35ab0]        # 0x140038ac0
   140003010:	call   0x140013860
   140003015:	test   rax,rax
   140003018:	je     0x14000302b
   14000301a:	mov    ebx,0x1
   14000301f:	mov    DWORD PTR [rsp+0x58],0x1
   140003027:	mov    DWORD PTR [rsp+0x5c],ebx
   14000302b:	mov    ecx,ebx
   14000302d:	call   0x1400051e0
   140003032:	mov    ecx,ebx
   140003034:	call   0x140005540
   140003039:	cmp    r14d,0x2
   14000303d:	jle    0x14000308b
   14000303f:	mov    rdi,QWORD PTR [r13+0x8]
   140003043:	lea    rax,[rip+0x35a8e]        # 0x140038ad8
   14000304a:	sub    rdi,rax
   14000304d:	movzx  edx,WORD PTR [rax]
   140003050:	movzx  ecx,WORD PTR [rax+rdi*1]
   140003054:	sub    edx,ecx
   140003056:	jne    0x140003060
   140003058:	add    rax,0x2
   14000305c:	test   ecx,ecx
   14000305e:	jne    0x14000304d
   140003060:	xor    edi,edi
   140003062:	test   edx,edx
   140003064:	jne    0x14000308b
   140003066:	cmp    r14d,0x4
   14000306a:	jne    0x140003072
   14000306c:	mov    rdx,QWORD PTR [r13+0x18]
   140003070:	jmp    0x14000307a
   140003072:	cmp    r14d,0x3
   140003076:	jne    0x140003083
   140003078:	xor    edx,edx
   14000307a:	mov    rcx,QWORD PTR [r13+0x10]
   14000307e:	call   0x1400114b4
   140003083:	xor    ecx,ecx
   140003085:	call   0x140013c2c
   14000308a:	int3   
   14000308b:	mov    esi,0x1
   140003090:	mov    ebx,esi
   140003092:	cmp    rbx,r14
   140003095:	jge    0x1400037f5
   14000309b:	test   r15,r15
   14000309e:	jne    0x1400033b0
   1400030a4:	mov    r8,QWORD PTR [r13+rbx*8+0x0]
   1400030a9:	or     rcx,0xffffffffffffffff
   1400030ad:	xor    eax,eax
   1400030af:	mov    rdi,r8
   1400030b2:	repnz scas ax,WORD PTR es:[rdi]
   1400030b5:	xor    edi,edi
   1400030b7:	not    rcx
   1400030ba:	dec    rcx
   1400030bd:	test   ecx,ecx
   1400030bf:	jle    0x1400033a2
   1400030c5:	cmp    WORD PTR [r8],0x2d
   1400030ca:	je     0x1400030e3
   1400030cc:	lea    rax,[rip+0x49dbd]        # 0x14004ce90
   1400030d3:	mov    r15,r8
   1400030d6:	mov    DWORD PTR [rbp-0x80],esi
   1400030d9:	mov    QWORD PTR [r13+rbx*8+0x0],rax
   1400030de:	jmp    0x1400033a2
   1400030e3:	lea    rax,[rip+0x35a06]        # 0x140038af0
   1400030ea:	mov    rdi,r8
   1400030ed:	sub    rdi,rax
   1400030f0:	movzx  edx,WORD PTR [rax]
   1400030f3:	movzx  ecx,WORD PTR [rax+rdi*1]
   1400030f7:	sub    edx,ecx
   1400030f9:	jne    0x140003103
   1400030fb:	add    rax,0x2
   1400030ff:	test   ecx,ecx
   140003101:	jne    0x1400030f0
   140003103:	xor    edi,edi
   140003105:	test   edx,edx
   140003107:	je     0x14000312f
   140003109:	lea    rax,[rip+0x359f8]        # 0x140038b08
   140003110:	mov    rdi,r8
   140003113:	sub    rdi,rax
   140003116:	movzx  edx,WORD PTR [rax]
   140003119:	movzx  ecx,WORD PTR [rax+rdi*1]
   14000311d:	sub    edx,ecx
   14000311f:	jne    0x140003129
   140003121:	add    rax,0x2
   140003125:	test   ecx,ecx
   140003127:	jne    0x140003116
   140003129:	xor    edi,edi
   14000312b:	test   edx,edx
   14000312d:	jne    0x140003143
   14000312f:	mov    DWORD PTR [rsp+0x44],0x1
   140003137:	mov    r12d,edi
   14000313a:	mov    DWORD PTR [rsp+0x40],edi
   14000313e:	jmp    0x140003254
   140003143:	lea    rax,[rip+0x359d6]        # 0x140038b20
   14000314a:	mov    rdi,r8
   14000314d:	sub    rdi,rax
   140003150:	movzx  edx,WORD PTR [rax]
   140003153:	movzx  ecx,WORD PTR [rax+rdi*1]
   140003157:	sub    edx,ecx
   140003159:	jne    0x140003163
   14000315b:	add    rax,0x2
   14000315f:	test   ecx,ecx
   140003161:	jne    0x140003150
   140003163:	xor    edi,edi
   140003165:	test   edx,edx
   140003167:	jne    0x140003182
   140003169:	mov    DWORD PTR [rsp+0x44],0x1
   140003171:	mov    DWORD PTR [rsp+0x54],0x1
   140003179:	lea    rax,[rip+0x359c0]        # 0x140038b40
   140003180:	jmp    0x1400031af
   140003182:	lea    rax,[rip+0x359cf]        # 0x140038b58
   140003189:	mov    rdi,r8
   14000318c:	sub    rdi,rax
   14000318f:	movzx  edx,WORD PTR [rax]
   140003192:	movzx  ecx,WORD PTR [rax+rdi*1]
   140003196:	sub    edx,ecx
   140003198:	jne    0x1400031a2
   14000319a:	add    rax,0x2
   14000319e:	test   ecx,ecx
   1400031a0:	jne    0x14000318f
   1400031a2:	xor    edi,edi
   1400031a4:	test   edx,edx
   1400031a6:	jne    0x1400031c0
   1400031a8:	lea    rax,[rip+0x49ce5]        # 0x14004ce94
   1400031af:	mov    DWORD PTR [rsp+0x40],edi
   1400031b3:	mov    r12d,edi
   1400031b6:	mov    QWORD PTR [r13+rbx*8+0x0],rax
   1400031bb:	jmp    0x1400033a2
   1400031c0:	lea    rax,[rip+0x359a9]        # 0x140038b70
   1400031c7:	mov    rdi,r8
   1400031ca:	sub    rdi,rax
   1400031cd:	movzx  edx,WORD PTR [rax]
   1400031d0:	movzx  ecx,WORD PTR [rax+rdi*1]
   1400031d4:	sub    edx,ecx
   1400031d6:	jne    0x1400031e0
   1400031d8:	add    rax,0x2
   1400031dc:	test   ecx,ecx
   1400031de:	jne    0x1400031cd
   1400031e0:	xor    edi,edi
   1400031e2:	test   edx,edx
   1400031e4:	jne    0x1400031f3
   1400031e6:	mov    DWORD PTR [rsp+0x58],0x1
   1400031ee:	jmp    0x1400033a2
   1400031f3:	lea    rax,[rip+0x3598e]        # 0x140038b88
   1400031fa:	mov    rdi,r8
   1400031fd:	sub    rdi,rax
   140003200:	movzx  edx,WORD PTR [rax]
   140003203:	movzx  ecx,WORD PTR [rax+rdi*1]
   140003207:	sub    edx,ecx
   140003209:	jne    0x140003213
   14000320b:	add    rax,0x2
   14000320f:	test   ecx,ecx
   140003211:	jne    0x140003200
   140003213:	xor    edi,edi
   140003215:	test   edx,edx
   140003217:	jne    0x14000322e
   140003219:	mov    DWORD PTR [rsp+0x54],0x1
   140003221:	mov    DWORD PTR [rsp+0x70],0x1
   140003229:	jmp    0x1400033a2
   14000322e:	lea    rax,[rip+0x35963]        # 0x140038b98
   140003235:	mov    rdi,r8
   140003238:	sub    rdi,rax
   14000323b:	movzx  edx,WORD PTR [rax]
   14000323e:	movzx  ecx,WORD PTR [rax+rdi*1]
   140003242:	sub    edx,ecx
   140003244:	jne    0x14000324e
   140003246:	add    rax,0x2
   14000324a:	test   ecx,ecx
   14000324c:	jne    0x14000323b
   14000324e:	xor    edi,edi
   140003250:	test   edx,edx
   140003252:	jne    0x140003261
   140003254:	mov    DWORD PTR [rsp+0x54],0x1
   14000325c:	jmp    0x1400033a2
   140003261:	lea    rax,[rip+0x35940]        # 0x140038ba8
   140003268:	mov    rdi,r8
   14000326b:	sub    rdi,rax
   14000326e:	movzx  edx,WORD PTR [rax]
   140003271:	movzx  ecx,WORD PTR [rax+rdi*1]
   140003275:	sub    edx,ecx
   140003277:	jne    0x140003281
   140003279:	add    rax,0x2
   14000327d:	test   ecx,ecx
   14000327f:	jne    0x14000326e
   140003281:	xor    edi,edi
   140003283:	test   edx,edx
   140003285:	jne    0x140003294
   140003287:	mov    DWORD PTR [rsp+0x50],0x1
   14000328f:	jmp    0x1400033a2
   140003294:	lea    rax,[rip+0x3591d]        # 0x140038bb8
   14000329b:	mov    rdi,r8
   14000329e:	sub    rdi,rax
   1400032a1:	movzx  edx,WORD PTR [rax]
   1400032a4:	movzx  ecx,WORD PTR [rax+rdi*1]
   1400032a8:	sub    edx,ecx
   1400032aa:	jne    0x1400032b4
   1400032ac:	add    rax,0x2
   1400032b0:	test   ecx,ecx
   1400032b2:	jne    0x1400032a1
   1400032b4:	xor    edi,edi
   1400032b6:	test   edx,edx
   1400032b8:	je     0x140003343
   1400032be:	lea    rax,[rip+0x3590b]        # 0x140038bd0
   1400032c5:	mov    rdi,r8
   1400032c8:	sub    rdi,rax
   1400032cb:	movzx  edx,WORD PTR [rax]
   1400032ce:	movzx  ecx,WORD PTR [rax+rdi*1]
   1400032d2:	sub    edx,ecx
   1400032d4:	jne    0x1400032de
   1400032d6:	add    rax,0x2
   1400032da:	test   ecx,ecx
   1400032dc:	jne    0x1400032cb
   1400032de:	xor    edi,edi
   1400032e0:	test   edx,edx
   1400032e2:	jne    0x1400032f7
   1400032e4:	mov    DWORD PTR [rsp+0x7c],edi
   1400032e8:	mov    DWORD PTR [rip+0x49b72],0x1        # 0x14004ce64
   1400032f2:	jmp    0x1400033a2
   1400032f7:	lea    rax,[rip+0x358ea]        # 0x140038be8
   1400032fe:	mov    rdi,r8
   140003301:	sub    rdi,rax
   140003304:	movzx  edx,WORD PTR [rax]
   140003307:	movzx  ecx,WORD PTR [rax+rdi*1]
   14000330b:	sub    edx,ecx
   14000330d:	jne    0x140003317
   14000330f:	add    rax,0x2
   140003313:	test   ecx,ecx
   140003315:	jne    0x140003304
   140003317:	xor    edi,edi
   140003319:	test   edx,edx
   14000331b:	je     0x140003343
   14000331d:	lea    rax,[rip+0x358d4]        # 0x140038bf8
   140003324:	mov    rdi,r8
   140003327:	sub    rdi,rax
   14000332a:	movzx  edx,WORD PTR [rax]
   14000332d:	movzx  ecx,WORD PTR [rax+rdi*1]
   140003331:	sub    edx,ecx
   140003333:	jne    0x14000333d
   140003335:	add    rax,0x2
   140003339:	test   ecx,ecx
   14000333b:	jne    0x14000332a
   14000333d:	xor    edi,edi
   14000333f:	test   edx,edx
   140003341:	jne    0x14000334a
   140003343:	inc    esi
   140003345:	inc    rbx
   140003348:	jmp    0x1400033a2
   14000334a:	lea    rdx,[rip+0x358b7]        # 0x140038c08
   140003351:	mov    rcx,r8
   140003354:	call   0x140013160
   140003359:	test   rax,rax
   14000335c:	je     0x1400033e9
   140003362:	mov    rdi,QWORD PTR [r13+rbx*8+0x0]
   140003367:	or     r8,0xffffffffffffffff
   14000336b:	xor    eax,eax
   14000336d:	mov    rcx,r8
   140003370:	repnz scas ax,WORD PTR es:[rdi]
   140003373:	lea    rdi,[rip+0x358ae]        # 0x140038c28
   14000337a:	not    rcx
   14000337d:	lea    rdx,[rcx-0x1]
   140003381:	mov    rcx,r8
   140003384:	repnz scas ax,WORD PTR es:[rdi]
   140003387:	not    rcx
   14000338a:	dec    rcx
   14000338d:	cmp    rdx,rcx
   140003390:	jbe    0x1400033e9
   140003392:	mov    rcx,QWORD PTR [r13+rbx*8+0x0]
   140003397:	call   0x1400130e8
   14000339c:	mov    QWORD PTR [rbp-0x60],rax
   1400033a0:	xor    edi,edi
   1400033a2:	inc    rbx
   1400033a5:	inc    esi
   1400033a7:	cmp    rbx,r14
   1400033aa:	jl     0x14000309b
   1400033b0:	mov    r8d,DWORD PTR [rsp+0x44]
   1400033b5:	mov    r9d,DWORD PTR [rsp+0x60]
   1400033ba:	test   r8d,r8d
   1400033bd:	je     0x140003807
   1400033c3:	test   r9d,r9d
   1400033c6:	jne    0x140003807
   1400033cc:	call   0x14000aa1c
   1400033d1:	mov    rcx,rax
   1400033d4:	call   0x140001000
   1400033d9:	test   eax,eax
   1400033db:	jns    0x1400037fd
   1400033e1:	xor    ecx,ecx
   1400033e3:	call   0x140013c2c
   1400033e8:	int3   
   1400033e9:	mov    rcx,QWORD PTR [r13+rbx*8+0x0]
   1400033ee:	lea    rdx,[rip+0x35853]        # 0x140038c48
   1400033f5:	call   0x140013160
   1400033fa:	or     r8,0xffffffffffffffff
   1400033fe:	test   rax,rax
   140003401:	je     0x140003442
   140003403:	mov    rdi,QWORD PTR [r13+rbx*8+0x0]
   140003408:	xor    eax,eax
   14000340a:	mov    rcx,r8
   14000340d:	repnz scas ax,WORD PTR es:[rdi]
   140003410:	lea    rdi,[rip+0x35851]        # 0x140038c68
   140003417:	not    rcx
   14000341a:	lea    rdx,[rcx-0x1]
   14000341e:	mov    rcx,r8
   140003421:	repnz scas ax,WORD PTR es:[rdi]
   140003424:	not    rcx
   140003427:	dec    rcx
   14000342a:	cmp    rdx,rcx
   14000342d:	jbe    0x140003442
   14000342f:	mov    rcx,QWORD PTR [r13+rbx*8+0x0]
   140003434:	call   0x1400130e8
   140003439:	mov    QWORD PTR [rbp-0x50],rax
   14000343d:	jmp    0x1400033a0
   140003442:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   140003447:	mov    rcx,r8
   14000344a:	xor    eax,eax
   14000344c:	lea    rdi,[rip+0x35831]        # 0x140038c84
   140003453:	repnz scas ax,WORD PTR es:[rdi]
   140003456:	not    rcx
   140003459:	lea    r8,[rcx-0x1]
   14000345d:	lea    rcx,[rip+0x35828]        # 0x140038c8c
   140003464:	call   0x140013790
   140003469:	xor    edi,edi
   14000346b:	test   eax,eax
   14000346d:	je     0x1400033a2
   140003473:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   140003478:	lea    rax,[rip+0x35819]        # 0x140038c98
   14000347f:	mov    r8,rdx
   140003482:	sub    r8,rax
   140003485:	movzx  edi,WORD PTR [rax]
   140003488:	movzx  ecx,WORD PTR [rax+r8*1]
   14000348d:	sub    edi,ecx
   14000348f:	jne    0x140003499
   140003491:	add    rax,0x2
   140003495:	test   ecx,ecx
   140003497:	jne    0x140003485
   140003499:	test   edi,edi
   14000349b:	jne    0x1400034a7
   14000349d:	inc    esi
   14000349f:	inc    rbx
   1400034a2:	jmp    0x1400033a0
   1400034a7:	lea    rax,[rip+0x35802]        # 0x140038cb0
   1400034ae:	mov    r8,rdx
   1400034b1:	sub    r8,rax
   1400034b4:	movzx  edi,WORD PTR [rax]
   1400034b7:	movzx  ecx,WORD PTR [rax+r8*1]
   1400034bc:	sub    edi,ecx
   1400034be:	jne    0x1400034c8
   1400034c0:	add    rax,0x2
   1400034c4:	test   ecx,ecx
   1400034c6:	jne    0x1400034b4
   1400034c8:	test   edi,edi
   1400034ca:	je     0x14000349d
   1400034cc:	lea    rax,[rip+0x357f5]        # 0x140038cc8
   1400034d3:	mov    r8,rdx
   1400034d6:	sub    r8,rax
   1400034d9:	movzx  edi,WORD PTR [rax]
   1400034dc:	movzx  ecx,WORD PTR [rax+r8*1]
   1400034e1:	sub    edi,ecx
   1400034e3:	jne    0x1400034ed
   1400034e5:	add    rax,0x2
   1400034e9:	test   ecx,ecx
   1400034eb:	jne    0x1400034d9
   1400034ed:	test   edi,edi
   1400034ef:	jne    0x1400034fe
   1400034f1:	mov    DWORD PTR [rsp+0x78],0x1
   1400034f9:	jmp    0x1400035d3
   1400034fe:	lea    rax,[rip+0x357d3]        # 0x140038cd8
   140003505:	mov    r8,rdx
   140003508:	sub    r8,rax
   14000350b:	movzx  edi,WORD PTR [rax]
   14000350e:	movzx  ecx,WORD PTR [rax+r8*1]
   140003513:	sub    edi,ecx
   140003515:	jne    0x14000351f
   140003517:	add    rax,0x2
   14000351b:	test   ecx,ecx
   14000351d:	jne    0x14000350b
   14000351f:	test   edi,edi
   140003521:	jne    0x140003530
   140003523:	mov    DWORD PTR [rsp+0x60],0x1
   14000352b:	jmp    0x1400033a0
   140003530:	lea    rax,[rip+0x357b1]        # 0x140038ce8
   140003537:	mov    r8,rdx
   14000353a:	sub    r8,rax
   14000353d:	movzx  edi,WORD PTR [rax]
   140003540:	movzx  ecx,WORD PTR [rax+r8*1]
   140003545:	sub    edi,ecx
   140003547:	jne    0x140003551
   140003549:	add    rax,0x2
   14000354d:	test   ecx,ecx
   14000354f:	jne    0x14000353d
   140003551:	test   edi,edi
   140003553:	je     0x1400035d3
   140003555:	lea    rax,[rip+0x3579c]        # 0x140038cf8
   14000355c:	mov    r8,rdx
   14000355f:	sub    r8,rax
   140003562:	movzx  edi,WORD PTR [rax]
   140003565:	movzx  ecx,WORD PTR [rax+r8*1]
   14000356a:	sub    edi,ecx
   14000356c:	jne    0x140003576
   14000356e:	add    rax,0x2
   140003572:	test   ecx,ecx
   140003574:	jne    0x140003562
   140003576:	test   edi,edi
   140003578:	je     0x1400037ea
   14000357e:	lea    rax,[rip+0x3578b]        # 0x140038d10
   140003585:	mov    r8,rdx
   140003588:	sub    r8,rax
   14000358b:	movzx  edi,WORD PTR [rax]
   14000358e:	movzx  ecx,WORD PTR [rax+r8*1]
   140003593:	sub    edi,ecx
   140003595:	jne    0x14000359f
   140003597:	add    rax,0x2
   14000359b:	test   ecx,ecx
   14000359d:	jne    0x14000358b
   14000359f:	test   edi,edi
   1400035a1:	je     0x1400037ea
   1400035a7:	lea    rax,[rip+0x35782]        # 0x140038d30
   1400035ae:	mov    r8,rdx
   1400035b1:	sub    r8,rax
   1400035b4:	movzx  edi,WORD PTR [rax]
   1400035b7:	movzx  ecx,WORD PTR [rax+r8*1]
   1400035bc:	sub    edi,ecx
   1400035be:	jne    0x1400035c8
   1400035c0:	add    rax,0x2
   1400035c4:	test   ecx,ecx
   1400035c6:	jne    0x1400035b4
   1400035c8:	test   edi,edi
   1400035ca:	jne    0x1400035e1
   1400035cc:	mov    DWORD PTR [rbp-0x7c],0x1
   1400035d3:	xor    edi,edi
   1400035d5:	mov    r12d,edi
   1400035d8:	mov    DWORD PTR [rsp+0x40],edi
   1400035dc:	jmp    0x1400033a2
   1400035e1:	lea    rax,[rip+0x35770]        # 0x140038d58
   1400035e8:	mov    r8,rdx
   1400035eb:	sub    r8,rax
   1400035ee:	movzx  edi,WORD PTR [rax]
   1400035f1:	movzx  ecx,WORD PTR [rax+r8*1]
   1400035f6:	sub    edi,ecx
   1400035f8:	jne    0x140003602
   1400035fa:	add    rax,0x2
   1400035fe:	test   ecx,ecx
   140003600:	jne    0x1400035ee
   140003602:	test   edi,edi
   140003604:	je     0x1400033a0
   14000360a:	lea    rax,[rip+0x35757]        # 0x140038d68
   140003611:	mov    r8,rdx
   140003614:	sub    r8,rax
   140003617:	movzx  edi,WORD PTR [rax]
   14000361a:	movzx  ecx,WORD PTR [rax+r8*1]
   14000361f:	sub    edi,ecx
   140003621:	jne    0x14000362b
   140003623:	add    rax,0x2
   140003627:	test   ecx,ecx
   140003629:	jne    0x140003617
   14000362b:	test   edi,edi
   14000362d:	je     0x1400033a0
   140003633:	lea    rax,[rip+0x35746]        # 0x140038d80
   14000363a:	mov    r8,rdx
   14000363d:	sub    r8,rax
   140003640:	movzx  edi,WORD PTR [rax]
   140003643:	movzx  ecx,WORD PTR [rax+r8*1]
   140003648:	sub    edi,ecx
   14000364a:	jne    0x140003654
   14000364c:	add    rax,0x2
   140003650:	test   ecx,ecx
   140003652:	jne    0x140003640
   140003654:	test   edi,edi
   140003656:	je     0x1400033a0
   14000365c:	lea    rax,[rip+0x3573d]        # 0x140038da0
   140003663:	mov    r8,rdx
   140003666:	sub    r8,rax
   140003669:	movzx  edi,WORD PTR [rax]
   14000366c:	movzx  ecx,WORD PTR [rax+r8*1]
   140003671:	sub    edi,ecx
   140003673:	jne    0x14000367d
   140003675:	add    rax,0x2
   140003679:	test   ecx,ecx
   14000367b:	jne    0x140003669
   14000367d:	test   edi,edi
   14000367f:	je     0x1400033a0
   140003685:	lea    rax,[rip+0x3572c]        # 0x140038db8
   14000368c:	mov    r8,rdx
   14000368f:	sub    r8,rax
   140003692:	movzx  edi,WORD PTR [rax]
   140003695:	movzx  ecx,WORD PTR [rax+r8*1]
   14000369a:	sub    edi,ecx
   14000369c:	jne    0x1400036a6
   14000369e:	add    rax,0x2
   1400036a2:	test   ecx,ecx
   1400036a4:	jne    0x140003692
   1400036a6:	test   edi,edi
   1400036a8:	je     0x1400033a0
   1400036ae:	lea    rax,[rip+0x35713]        # 0x140038dc8
   1400036b5:	mov    r8,rdx
   1400036b8:	sub    r8,rax
   1400036bb:	movzx  edi,WORD PTR [rax]
   1400036be:	movzx  ecx,WORD PTR [rax+r8*1]
   1400036c3:	sub    edi,ecx
   1400036c5:	jne    0x1400036cf
   1400036c7:	add    rax,0x2
   1400036cb:	test   ecx,ecx
   1400036cd:	jne    0x1400036bb
   1400036cf:	test   edi,edi
   1400036d1:	je     0x1400033a0
   1400036d7:	lea    rax,[rip+0x35702]        # 0x140038de0
   1400036de:	mov    r8,rdx
   1400036e1:	sub    r8,rax
   1400036e4:	movzx  edi,WORD PTR [rax]
   1400036e7:	movzx  ecx,WORD PTR [rax+r8*1]
   1400036ec:	sub    edi,ecx
   1400036ee:	jne    0x1400036f8
   1400036f0:	add    rax,0x2
   1400036f4:	test   ecx,ecx
   1400036f6:	jne    0x1400036e4
   1400036f8:	test   edi,edi
   1400036fa:	je     0x1400033a0
   140003700:	lea    rax,[rip+0x356e9]        # 0x140038df0
   140003707:	mov    r8,rdx
   14000370a:	sub    r8,rax
   14000370d:	movzx  edi,WORD PTR [rax]
   140003710:	movzx  ecx,WORD PTR [rax+r8*1]
   140003715:	sub    edi,ecx
   140003717:	jne    0x140003721
   140003719:	add    rax,0x2
   14000371d:	test   ecx,ecx
   14000371f:	jne    0x14000370d
   140003721:	test   edi,edi
   140003723:	je     0x1400033a0
   140003729:	lea    rax,[rip+0x356d8]        # 0x140038e08
   140003730:	mov    r8,rdx
   140003733:	sub    r8,rax
   140003736:	movzx  edi,WORD PTR [rax]
   140003739:	movzx  ecx,WORD PTR [rax+r8*1]
   14000373e:	sub    edi,ecx
   140003740:	jne    0x14000374a
   140003742:	add    rax,0x2
   140003746:	test   ecx,ecx
   140003748:	jne    0x140003736
   14000374a:	test   edi,edi
   14000374c:	je     0x1400033a0
   140003752:	lea    rax,[rip+0x356bf]        # 0x140038e18
   140003759:	mov    r8,rdx
   14000375c:	sub    r8,rax
   14000375f:	movzx  edi,WORD PTR [rax]
   140003762:	movzx  ecx,WORD PTR [rax+r8*1]
   140003767:	sub    edi,ecx
   140003769:	jne    0x140003773
   14000376b:	add    rax,0x2
   14000376f:	test   ecx,ecx
   140003771:	jne    0x14000375f
   140003773:	test   edi,edi
   140003775:	je     0x1400033a0
   14000377b:	lea    rax,[rip+0x356ae]        # 0x140038e30
   140003782:	mov    r8,rdx
   140003785:	sub    r8,rax
   140003788:	movzx  edi,WORD PTR [rax]
   14000378b:	movzx  ecx,WORD PTR [rax+r8*1]
   140003790:	sub    edi,ecx
   140003792:	jne    0x14000379c
   140003794:	add    rax,0x2
   140003798:	test   ecx,ecx
   14000379a:	jne    0x140003788
   14000379c:	test   edi,edi
   14000379e:	je     0x1400033a0
   1400037a4:	or     rcx,0xffffffffffffffff
   1400037a8:	xor    eax,eax
   1400037aa:	lea    rdi,[rip+0x3568f]        # 0x140038e40
   1400037b1:	repnz scas ax,WORD PTR es:[rdi]
   1400037b4:	not    rcx
   1400037b7:	lea    r8,[rcx-0x1]
   1400037bb:	lea    rcx,[rip+0x35686]        # 0x140038e48
   1400037c2:	call   0x140013790
   1400037c7:	xor    edi,edi
   1400037c9:	test   eax,eax
   1400037cb:	je     0x1400033a2
   1400037d1:	lea    ecx,[rdi+0x18]
   1400037d4:	call   0x14000bd98
   1400037d9:	mov    rcx,rax
   1400037dc:	call   0x140009fcc
   1400037e1:	or     ecx,0xffffffff
   1400037e4:	call   0x140013c2c
   1400037e9:	int3   
   1400037ea:	xor    edi,edi
   1400037ec:	mov    DWORD PTR [rsp+0x7c],edi
   1400037f0:	jmp    0x1400033a2
   1400037f5:	mov    r8d,r15d
   1400037f8:	mov    r9d,r15d
   1400037fb:	jmp    0x140003807
   1400037fd:	mov    r8d,DWORD PTR [rsp+0x44]
   140003802:	mov    r9d,DWORD PTR [rsp+0x60]
   140003807:	mov    eax,r14d
   14000380a:	cmp    eax,0x2
   14000380d:	jne    0x140003841
   14000380f:	mov    rdi,QWORD PTR [r13+0x8]
   140003813:	lea    rax,[rip+0x35636]        # 0x140038e50
   14000381a:	sub    rdi,rax
   14000381d:	movzx  edx,WORD PTR [rax]
   140003820:	movzx  ecx,WORD PTR [rax+rdi*1]
   140003824:	sub    edx,ecx
   140003826:	jne    0x140003830
   140003828:	add    rax,0x2
   14000382c:	test   ecx,ecx
   14000382e:	jne    0x14000381d
   140003830:	xor    edi,edi
   140003832:	test   edx,edx
   140003834:	jne    0x14000383e
   140003836:	xor    ecx,ecx
   140003838:	call   0x140013c2c
   14000383d:	int3   
   14000383e:	mov    eax,r14d
   140003841:	mov    ecx,DWORD PTR [rsp+0x78]
   140003845:	test   ecx,ecx
   140003847:	je     0x140003852
   140003849:	test   r9d,r9d
   14000384c:	jne    0x1400041eb
   140003852:	cmp    esi,eax
   140003854:	jg     0x1400041eb
   14000385a:	test   ecx,ecx
   14000385c:	jne    0x140003876
   14000385e:	test   r9d,r9d
   140003861:	jne    0x140003876
   140003863:	test   r8d,r8d
   140003866:	jne    0x140003876
   140003868:	cmp    DWORD PTR [rbp-0x7c],edi
   14000386b:	jne    0x140003876
   14000386d:	test   r15,r15
   140003870:	je     0x1400041eb
   140003876:	cmp    DWORD PTR [rsp+0x70],0x1
   14000387b:	je     0x140003883
   14000387d:	cmp    r8d,0x1
   140003881:	jne    0x140003893
   140003883:	cmp    DWORD PTR [rsp+0x50],0x1
   140003888:	jne    0x140003893
   14000388a:	mov    r12d,edi
   14000388d:	mov    DWORD PTR [rsp+0x40],edi
   140003891:	jmp    0x140003897
   140003893:	mov    DWORD PTR [rsp+0x50],edi
   140003897:	call   0x140001eb0
   14000389c:	mov    esi,DWORD PTR [rsp+0x5c]
   1400038a0:	mov    ecx,esi
   1400038a2:	call   0x140009268
   1400038a7:	test   r15,r15
   1400038aa:	je     0x140003bea
   1400038b0:	xor    eax,eax
   1400038b2:	or     r8,0xffffffffffffffff
   1400038b6:	lea    rdi,[rip+0x355a3]        # 0x140038e60
   1400038bd:	mov    rcx,r8
   1400038c0:	repnz scas ax,WORD PTR es:[rdi]
   1400038c3:	mov    rdi,r15
   1400038c6:	not    rcx
   1400038c9:	lea    rdx,[rcx-0x1]
   1400038cd:	mov    rcx,r8
   1400038d0:	repnz scas ax,WORD PTR es:[rdi]
   1400038d3:	not    rcx
   1400038d6:	lea    eax,[rdx+rcx*1+0x1]
   1400038da:	movsxd rbx,eax
   1400038dd:	lea    rcx,[rbx+rbx*1]
   1400038e1:	call   0x140013298
   1400038e6:	mov    rdi,rax
   1400038e9:	test   rax,rax
   1400038ec:	je     0x140003925
   1400038ee:	lea    r9,[rip+0x3556b]        # 0x140038e60
   1400038f5:	lea    r8,[rip+0x3559c]        # 0x140038e98
   1400038fc:	mov    rdx,rbx
   1400038ff:	mov    rcx,rax
   140003902:	mov    QWORD PTR [rsp+0x20],r15
   140003907:	call   0x14000a30c
   14000390c:	cmp    eax,0xffffffff
   14000390f:	je     0x140003925
   140003911:	mov    rcx,rdi
   140003914:	call   0x14000c83c
   140003919:	test   eax,eax
   14000391b:	jne    0x140003925
   14000391d:	mov    rcx,rdi
   140003920:	call   0x140001d50
   140003925:	cmp    DWORD PTR [rsp+0x44],0x1
   14000392a:	je     0x140003a63
   140003930:	cmp    DWORD PTR [rsp+0x70],0x1
   140003935:	je     0x140003a63
   14000393b:	xor    edi,edi
   14000393d:	mov    rcx,r15
   140003940:	cmp    DWORD PTR [rip+0x4951e],edi        # 0x14004ce64
   140003946:	je     0x140003977
   140003948:	mov    edx,DWORD PTR [rsp+0x58]
   14000394c:	call   0x14000687c
   140003951:	mov    rsi,rax
   140003954:	mov    rcx,r15
   140003957:	call   0x1400130e8
   14000395c:	xor    ecx,ecx
   14000395e:	mov    QWORD PTR [rip+0x4950b],rax        # 0x14004ce70
   140003965:	call   0x140001c30
   14000396a:	mov    rcx,rax
   14000396d:	call   0x140001d50
   140003972:	jmp    0x140003a8f
   140003977:	lea    rdx,[rsp+0x68]
   14000397c:	call   0x14000c638
   140003981:	mov    ebx,eax
   140003983:	cmp    QWORD PTR [rsp+0x68],rdi
   140003988:	je     0x140003a43
   14000398e:	cmp    DWORD PTR [rsp+0x7c],edi
   140003992:	je     0x1400039cf
   140003994:	call   0x14000a29c
   140003999:	mov    rdx,QWORD PTR [rsp+0x68]
   14000399e:	mov    r8d,ebx
   1400039a1:	mov    rcx,rax
   1400039a4:	mov    rdi,rax
   1400039a7:	mov    QWORD PTR [rbp-0x58],rax
   1400039ab:	call   0x14000c288
   1400039b0:	test   eax,eax
   1400039b2:	jne    0x140003a18
   1400039b4:	cmp    DWORD PTR [rsp+0x58],0x1
   1400039b9:	jne    0x1400039cf
   1400039bb:	lea    rcx,[rip+0x354e6]        # 0x140038ea8
   1400039c2:	call   0x14000c338
   1400039c7:	mov    rcx,rdi
   1400039ca:	call   0x14000c338
   1400039cf:	mov    rcx,r15
   1400039d2:	call   0x1400130e8
   1400039d7:	xor    ecx,ecx
   1400039d9:	mov    QWORD PTR [rip+0x49490],rax        # 0x14004ce70
   1400039e0:	call   0x140001c30
   1400039e5:	mov    rcx,rax
   1400039e8:	call   0x140001d50
   1400039ed:	mov    rcx,QWORD PTR [rsp+0x68]
   1400039f2:	call   0x140001050
   1400039f7:	mov    edx,ebx
   1400039f9:	mov    rcx,rax
   1400039fc:	mov    rdi,rax
   1400039ff:	call   0x14000c768
   140003a04:	xor    ebx,ebx
   140003a06:	mov    edx,esi
   140003a08:	test   eax,eax
   140003a0a:	je     0x140003a27
   140003a0c:	mov    rcx,QWORD PTR [rsp+0x68]
   140003a11:	call   0x14000680c
   140003a16:	jmp    0x140003a31
   140003a18:	mov    rcx,rdi
   140003a1b:	call   0x1400130e8
   140003a20:	mov    ecx,0x1
   140003a25:	jmp    0x1400039d9
   140003a27:	xor    ecx,ecx
   140003a29:	call   0x14000680c
   140003a2e:	mov    DWORD PTR [rax+0x10],ebx
   140003a31:	mov    rsi,rax
   140003a34:	test   rdi,rdi
   140003a37:	je     0x140003a8d
   140003a39:	mov    rcx,rdi
   140003a3c:	call   0x1400130a8
   140003a41:	jmp    0x140003a8d
   140003a43:	mov    edx,esi
   140003a45:	xor    ecx,ecx
   140003a47:	call   0x14000680c
   140003a4c:	mov    rcx,r15
   140003a4f:	mov    rsi,rax
   140003a52:	call   0x1400130e8
   140003a57:	mov    DWORD PTR [rsi+0x10],edi
   140003a5a:	mov    QWORD PTR [rsi+0x20],rax
   140003a5e:	jmp    0x140003954
   140003a63:	mov    rcx,r15
   140003a66:	call   0x1400130e8
   140003a6b:	xor    ecx,ecx
   140003a6d:	mov    QWORD PTR [rip+0x493fc],rax        # 0x14004ce70
   140003a74:	call   0x140001c30
   140003a79:	mov    rcx,rax
   140003a7c:	call   0x140001d50
   140003a81:	mov    edx,esi
   140003a83:	xor    ecx,ecx
   140003a85:	call   0x14000680c
   140003a8a:	mov    rsi,rax
   140003a8d:	xor    edi,edi
   140003a8f:	mov    rcx,QWORD PTR [rsi+0x190]
   140003a96:	test   rcx,rcx
   140003a99:	je     0x140003bfd
   140003a9f:	call   0x140008ad4
   140003aa4:	mov    r12,rax
   140003aa7:	test   rax,rax
   140003aaa:	je     0x140003b20
   140003aac:	mov    rdi,QWORD PTR [r12+0x8]
   140003ab1:	xor    eax,eax
   140003ab3:	or     r8,0xffffffffffffffff
   140003ab7:	mov    rcx,r8
   140003aba:	repnz scas ax,WORD PTR es:[rdi]
   140003abd:	lea    rdi,[rip+0x35414]        # 0x140038ed8
   140003ac4:	not    rcx
   140003ac7:	lea    rdx,[rcx-0x1]
   140003acb:	mov    rcx,r8
   140003ace:	repnz scas ax,WORD PTR es:[rdi]
   140003ad1:	not    rcx
   140003ad4:	lea    rdi,[rdx+rcx*1+0x1]
   140003ad9:	lea    edx,[rax+0x2]
   140003adc:	mov    rcx,rdi
   140003adf:	call   0x140012bd4
   140003ae4:	mov    r9,QWORD PTR [r12+0x8]
   140003ae9:	lea    r8,[rip+0x35400]        # 0x140038ef0
   140003af0:	mov    rcx,rax
   140003af3:	mov    rdx,rdi
   140003af6:	mov    rbx,rax
   140003af9:	call   0x14000a30c
   140003afe:	mov    rcx,rbx
   140003b01:	call   0x140001d50
   140003b06:	mov    rcx,r12
   140003b09:	mov    DWORD PTR [rsp+0x74],0x1
   140003b11:	call   0x140008c94
   140003b16:	mov    rcx,rbx
   140003b19:	call   0x1400130a8
   140003b1e:	xor    edi,edi
   140003b20:	cmp    DWORD PTR [rsi+0x198],0x1
   140003b27:	jne    0x140003b3d
   140003b29:	lea    rcx,[rip+0x353e0]        # 0x140038f10
   140003b30:	call   0x140001d50
   140003b35:	mov    DWORD PTR [rsp+0x74],0x1
   140003b3d:	mov    r12d,DWORD PTR [rsp+0x40]
   140003b42:	call   0x1400018f0
   140003b47:	mov    rcx,rax
   140003b4a:	call   0x140001d50
   140003b4f:	mov    ebx,edi
   140003b51:	cmp    DWORD PTR [rsi+0x40],edi
   140003b54:	jle    0x140003b78
   140003b56:	lea    rdi,[rsi+0x48]
   140003b5a:	xor    eax,eax
   140003b5c:	mov    rcx,QWORD PTR [rdi]
   140003b5f:	test   rcx,rcx
   140003b62:	je     0x140003b6b
   140003b64:	call   0x140001dd0
   140003b69:	xor    eax,eax
   140003b6b:	inc    ebx
   140003b6d:	add    rdi,0x8
   140003b71:	cmp    ebx,DWORD PTR [rsi+0x40]
   140003b74:	jl     0x140003b5c
   140003b76:	xor    edi,edi
   140003b78:	mov    ebx,edi
   140003b7a:	cmp    DWORD PTR [rsi+0xe8],edi
   140003b80:	jle    0x140003ba1
   140003b82:	lea    rdi,[rsi+0xf0]
   140003b89:	mov    rcx,QWORD PTR [rdi]
   140003b8c:	call   0x140001dd0
   140003b91:	inc    ebx
   140003b93:	add    rdi,0x8
   140003b97:	cmp    ebx,DWORD PTR [rsi+0xe8]
   140003b9d:	jl     0x140003b89
   140003b9f:	xor    edi,edi
   140003ba1:	mov    rdx,QWORD PTR [rsi+0x38]
   140003ba5:	mov    rcx,QWORD PTR [rsi+0x30]
   140003ba9:	call   0x140002000
   140003bae:	mov    ebx,DWORD PTR [rsp+0x50]
   140003bb2:	test   ebx,ebx
   140003bb4:	je     0x140003bc2
   140003bb6:	lea    rcx,[rip+0x353a3]        # 0x140038f60
   140003bbd:	call   0x140001d50
   140003bc2:	cmp    DWORD PTR [rsi+0x14],0x1
   140003bc6:	cmove  r12d,edi
   140003bca:	cmp    r12d,0x1
   140003bce:	jne    0x140003c1a
   140003bd0:	cmp    QWORD PTR [rsi+0x28],rdi
   140003bd4:	jne    0x140003c0e
   140003bd6:	cmp    QWORD PTR [rsi+0x20],rdi
   140003bda:	jne    0x140003c0e
   140003bdc:	mov    ecx,DWORD PTR [rsi+0x10]
   140003bdf:	lea    rdx,[rbp-0x70]
   140003be3:	call   0x14000be48
   140003be8:	jmp    0x140003c1a
   140003bea:	mov    edx,esi
   140003bec:	xor    ecx,ecx
   140003bee:	call   0x14000680c
   140003bf3:	mov    rsi,rax
   140003bf6:	mov    DWORD PTR [rax+0x10],0x1
   140003bfd:	lea    rcx,[rip+0x3532c]        # 0x140038f30
   140003c04:	call   0x140001d50
   140003c09:	jmp    0x140003b42
   140003c0e:	lea    rdx,[rbp-0x70]
   140003c12:	mov    rcx,rsi
   140003c15:	call   0x14000beb8
   140003c1a:	mov    rax,QWORD PTR [rbp-0x60]
   140003c1e:	test   rax,rax
   140003c21:	je     0x140003c44
   140003c23:	mov    rcx,rax
   140003c26:	call   0x140001560
   140003c2b:	mov    rcx,rax
   140003c2e:	call   0x140001d50
   140003c33:	mov    rcx,QWORD PTR [rbp-0x40]
   140003c37:	call   0x140001510
   140003c3c:	mov    rcx,rax
   140003c3f:	call   0x140001d50
   140003c44:	mov    rax,QWORD PTR [rbp-0x50]
   140003c48:	test   rax,rax
   140003c4b:	je     0x140003c5d
   140003c4d:	mov    rcx,rax
   140003c50:	call   0x1400015c0
   140003c55:	mov    rcx,rax
   140003c58:	call   0x140001d50
   140003c5d:	mov    ecx,DWORD PTR [rsp+0x78]
   140003c61:	mov    rdx,rsi
   140003c64:	call   0x1400044c8
   140003c69:	mov    rcx,QWORD PTR [rsi]
   140003c6c:	test   rcx,rcx
   140003c6f:	je     0x140003c91
   140003c71:	call   0x1400130e8
   140003c76:	mov    rcx,QWORD PTR [rsi+0x8]
   140003c7a:	mov    r15,rax
   140003c7d:	mov    QWORD PTR [rbp-0x68],rax
   140003c81:	test   rcx,rcx
   140003c84:	je     0x140003c95
   140003c86:	call   0x1400130e8
   140003c8b:	mov    QWORD PTR [rbp-0x48],rax
   140003c8f:	jmp    0x140003c95
   140003c91:	mov    r15,QWORD PTR [rbp-0x68]
   140003c95:	mov    rdx,QWORD PTR [rsi+0x28]
   140003c99:	mov    edi,r14d
   140003c9c:	test   rdx,rdx
   140003c9f:	je     0x140003cd6
   140003ca1:	mov    rcx,QWORD PTR [rsp+0x68]
   140003ca6:	mov    r9,r13
   140003ca9:	mov    r8d,r14d
   140003cac:	call   0x140002130
   140003cb1:	cmp    eax,0x1
   140003cb4:	jne    0x140003cd6
   140003cb6:	mov    rcx,rsi
   140003cb9:	call   0x1400066fc
   140003cbe:	mov    rcx,QWORD PTR [rsp+0x68]
   140003cc3:	test   rcx,rcx
   140003cc6:	je     0x140003ccd
   140003cc8:	call   0x1400130a8
   140003ccd:	mov    rcx,QWORD PTR [rbp-0x58]
   140003cd1:	call   0x140009648
   140003cd6:	test   r15,r15
   140003cd9:	jne    0x140003cf2
   140003cdb:	call   0x140005080
   140003ce0:	lea    rcx,[rip+0x352c9]        # 0x140038fb0
   140003ce7:	mov    QWORD PTR [rbp-0x68],rax
   140003ceb:	call   0x1400130e8
   140003cf0:	jmp    0x140003cf6
   140003cf2:	mov    rax,QWORD PTR [rbp-0x48]
   140003cf6:	mov    r15d,DWORD PTR [rsp+0x5c]
   140003cfb:	mov    rcx,QWORD PTR [rbp-0x68]
   140003cff:	mov    rdx,rax
   140003d02:	mov    r8d,r15d
   140003d05:	call   0x1400053c0
   140003d0a:	mov    r8d,DWORD PTR [rsi+0x10]
   140003d0e:	mov    rdx,r13
   140003d11:	mov    ecx,edi
   140003d13:	call   0x1400044d8
   140003d18:	cmp    eax,0x1
   140003d1b:	je     0x140003d26
   140003d1d:	mov    rcx,QWORD PTR [rbp-0x58]
   140003d21:	call   0x140009648
   140003d26:	mov    rcx,rsi
   140003d29:	call   0x1400066fc
   140003d2e:	mov    rcx,QWORD PTR [rsp+0x68]
   140003d33:	test   rcx,rcx
   140003d36:	je     0x140003d3d
   140003d38:	call   0x1400130a8
   140003d3d:	test   r12d,r12d
   140003d40:	je     0x140003d92
   140003d42:	call   0x14000b878
   140003d47:	xor    r12d,r12d
   140003d4a:	test   eax,eax
   140003d4c:	je     0x140003d68
   140003d4e:	cmp    DWORD PTR [rsp+0x74],r12d
   140003d53:	jne    0x140003d95
   140003d55:	mov    rcx,QWORD PTR [rbp-0x70]
   140003d59:	call   0x140001b40
   140003d5e:	mov    rcx,rax
   140003d61:	call   0x140001d50
   140003d66:	jmp    0x140003d95
   140003d68:	mov    rcx,QWORD PTR [rbp-0x70]
   140003d6c:	call   0x140001210
   140003d71:	test   rax,rax
   140003d74:	je     0x140003d8b
   140003d76:	test   ebx,ebx
   140003d78:	je     0x140003d83
   140003d7a:	or     ecx,0xffffffff
   140003d7d:	call   0x140013c2c
   140003d82:	int3   
   140003d83:	mov    rcx,rax
   140003d86:	call   0x14000c328
   140003d8b:	call   0x140001b00
   140003d90:	jmp    0x140003d5e
   140003d92:	xor    r12d,r12d
   140003d95:	call   0x1400093f8
   140003d9a:	test   rax,rax
   140003d9d:	jne    0x140003da6
   140003d9f:	call   0x14000b0bc
   140003da4:	jmp    0x140003df2
   140003da6:	call   0x1400093f8
   140003dab:	mov    ecx,0x5c
   140003db0:	lea    r8,[rip+0x35259]        # 0x140039010
   140003db7:	mov    r9,rax
   140003dba:	lea    rax,[rip+0x351d7]        # 0x140038f98
   140003dc1:	mov    edx,0x400
   140003dc6:	mov    QWORD PTR [rsp+0x38],rax
   140003dcb:	mov    DWORD PTR [rsp+0x30],ecx
   140003dcf:	lea    rax,[rip+0x35232]        # 0x140039008
   140003dd6:	mov    QWORD PTR [rsp+0x28],rax
   140003ddb:	mov    DWORD PTR [rsp+0x20],ecx
   140003ddf:	lea    rcx,[rbp+0x7010]
   140003de6:	call   0x14000a30c
   140003deb:	lea    rax,[rbp+0x7010]
   140003df2:	mov    QWORD PTR [rip+0x4907f],rax        # 0x14004ce78
   140003df9:	test   rax,rax
   140003dfc:	jne    0x140003e24
   140003dfe:	test   ebx,ebx
   140003e00:	je     0x140003e0b
   140003e02:	or     ecx,0xffffffff
   140003e05:	call   0x140013c2c
   140003e0a:	int3   
   140003e0b:	mov    ecx,0x2
   140003e10:	call   0x14000bd98
   140003e15:	mov    rcx,rax
   140003e18:	call   0x14000c328
   140003e1d:	mov    rax,QWORD PTR [rip+0x49054]        # 0x14004ce78
   140003e24:	movsxd rsi,DWORD PTR [rbp-0x80]
   140003e28:	mov    ebx,0x1
   140003e2d:	mov    QWORD PTR [rip+0x4060c],rax        # 0x140044440
   140003e34:	cmp    rbx,r14
   140003e37:	jge    0x140003ea4
   140003e39:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   140003e3e:	test   rdx,rdx
   140003e41:	je     0x140003e95
   140003e43:	lea    rcx,[rip+0x3515a]        # 0x140038fa4
   140003e4a:	mov    r8d,0x2
   140003e50:	call   0x140013790
   140003e55:	test   eax,eax
   140003e57:	jne    0x140003e95
   140003e59:	test   rsi,rsi
   140003e5c:	js     0x140003e63
   140003e5e:	cmp    rbx,rsi
   140003e61:	jge    0x140003e89
   140003e63:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   140003e68:	or     rcx,0xffffffffffffffff
   140003e6c:	xor    eax,eax
   140003e6e:	mov    rdi,rdx
   140003e71:	repnz scas ax,WORD PTR es:[rdi]
   140003e74:	not    rcx
   140003e77:	dec    rcx
   140003e7a:	cmp    rcx,0x2
   140003e7e:	jbe    0x140003e89
   140003e80:	lea    rcx,[rdx+0x4]
   140003e84:	call   0x140001dd0
   140003e89:	lea    rax,[rip+0x49008]        # 0x14004ce98
   140003e90:	mov    QWORD PTR [r13+rbx*8+0x0],rax
   140003e95:	inc    rbx
   140003e98:	cmp    rbx,r14
   140003e9b:	jl     0x140003e39
   140003e9d:	mov    rax,QWORD PTR [rip+0x48fd4]        # 0x14004ce78
   140003ea4:	mov    rcx,rax
   140003ea7:	call   0x140001b80
   140003eac:	mov    rcx,rax
   140003eaf:	call   0x140001d50
   140003eb4:	mov    rcx,QWORD PTR [rip+0x48fad]        # 0x14004ce68
   140003ebb:	call   0x1400013c0
   140003ec0:	mov    rcx,rax
   140003ec3:	call   0x140001d50
   140003ec8:	lea    rcx,[rip+0x35159]        # 0x140039028
   140003ecf:	call   0x140001d50
   140003ed4:	mov    edi,0x1
   140003ed9:	jmp    0x140003f14
   140003edb:	mov    rcx,QWORD PTR [r13+rdi*8+0x0]
   140003ee0:	test   rcx,rcx
   140003ee3:	je     0x140003f11
   140003ee5:	lea    rax,[rip+0x35164]        # 0x140039050
   140003eec:	mov    r9,rcx
   140003eef:	sub    r9,rax
   140003ef2:	movzx  edx,WORD PTR [rax]
   140003ef5:	movzx  r8d,WORD PTR [rax+r9*1]
   140003efa:	sub    edx,r8d
   140003efd:	jne    0x140003f08
   140003eff:	add    rax,0x2
   140003f03:	test   r8d,r8d
   140003f06:	jne    0x140003ef2
   140003f08:	test   edx,edx
   140003f0a:	je     0x140003f11
   140003f0c:	call   0x140001d50
   140003f11:	inc    rdi
   140003f14:	cmp    rdi,r14
   140003f17:	jl     0x140003edb
   140003f19:	cmp    DWORD PTR [rbp-0x78],r12d
   140003f1d:	je     0x140003f2b
   140003f1f:	lea    rcx,[rip+0x35142]        # 0x140039068
   140003f26:	call   0x140001d50
   140003f2b:	mov    rcx,QWORD PTR [rip+0x48f3e]        # 0x14004ce70
   140003f32:	call   0x140001d50
   140003f37:	test   r15d,r15d
   140003f3a:	je     0x140003f60
   140003f3c:	mov    edx,DWORD PTR [rip+0x48f1e]        # 0x14004ce60
   140003f42:	lea    rcx,[rip+0x35137]        # 0x140039080
   140003f49:	call   0x1400136cc
   140003f4e:	mov    edx,DWORD PTR [rip+0x34108]        # 0x14003805c
   140003f54:	lea    rcx,[rip+0x35145]        # 0x1400390a0
   140003f5b:	call   0x1400136cc
   140003f60:	cmp    DWORD PTR [rip+0x340f5],0x31        # 0x14003805c
   140003f67:	jl     0x140003f75
   140003f69:	lea    rcx,[rip+0x35148]        # 0x1400390b8
   140003f70:	call   0x14000c328
   140003f75:	mov    ebx,DWORD PTR [rsp+0x58]
   140003f79:	lea    r14,[rip+0x404c0]        # 0x140044440
   140003f80:	test   ebx,ebx
   140003f82:	je     0x140004122
   140003f88:	lea    rcx,[rbp+0x7810]
   140003f8f:	xor    edx,edx
   140003f91:	mov    r8d,0x4000
   140003f97:	call   0x140012fb0
   140003f9c:	xor    eax,eax
   140003f9e:	or     rsi,0xffffffffffffffff
   140003fa2:	lea    rdi,[rip+0x35147]        # 0x1400390f0
   140003fa9:	mov    rcx,rsi
   140003fac:	mov    r13d,0x2000
   140003fb2:	repnz scas ax,WORD PTR es:[rdi]
   140003fb5:	lea    r8,[rip+0x3514c]        # 0x140039108
   140003fbc:	mov    edx,r13d
   140003fbf:	not    rcx
   140003fc2:	lea    r9,[rcx-0x1]
   140003fc6:	lea    rcx,[rbp+0x7810]
   140003fcd:	call   0x140013da4
   140003fd2:	mov    r8,QWORD PTR [rip+0x48e9f]        # 0x14004ce78
   140003fd9:	xor    eax,eax
   140003fdb:	lea    rdi,[rbp+0x7810]
   140003fe2:	mov    rcx,rsi
   140003fe5:	lea    r15d,[r13-0x1]
   140003fe9:	repnz scas ax,WORD PTR es:[rdi]
   140003fec:	mov    r9d,r15d
   140003fef:	mov    edx,r13d
   140003ff2:	not    rcx
   140003ff5:	dec    rcx
   140003ff8:	sub    r9,rcx
   140003ffb:	lea    rcx,[rbp+0x7810]
   140004002:	call   0x1400135e4
   140004007:	xor    eax,eax
   140004009:	lea    rdi,[rip+0x3412c]        # 0x14003813c
   140004010:	mov    rcx,rsi
   140004013:	lea    r8,[rip+0x34162]        # 0x14003817c
   14000401a:	mov    edx,r13d
   14000401d:	repnz scas ax,WORD PTR es:[rdi]
   140004020:	not    rcx
   140004023:	lea    r9,[rcx-0x1]
   140004027:	lea    rcx,[rbp+0x7810]
   14000402e:	call   0x1400135e4
   140004033:	cmp    DWORD PTR [rip+0x34022],r12d        # 0x14003805c
   14000403a:	mov    esi,r12d
   14000403d:	jle    0x1400040e9
   140004043:	mov    rbx,r14
   140004046:	mov    r8,QWORD PTR [rbx]
   140004049:	test   r8,r8
   14000404c:	je     0x1400040a6
   14000404e:	or     rcx,0xffffffffffffffff
   140004052:	xor    eax,eax
   140004054:	lea    rdi,[rbp+0x7810]
   14000405b:	repnz scas ax,WORD PTR es:[rdi]
   14000405e:	mov    r9,r15
   140004061:	mov    rdx,r13
   140004064:	not    rcx
   140004067:	dec    rcx
   14000406a:	sub    r9,rcx
   14000406d:	lea    rcx,[rbp+0x7810]
   140004074:	call   0x1400135e4
   140004079:	or     rcx,0xffffffffffffffff
   14000407d:	xor    eax,eax
   14000407f:	lea    rdi,[rip+0x34126]        # 0x1400381ac
   140004086:	lea    r8,[rip+0x3420f]        # 0x14003829c
   14000408d:	mov    rdx,r13
   140004090:	repnz scas ax,WORD PTR es:[rdi]
   140004093:	not    rcx
   140004096:	lea    r9,[rcx-0x1]
   14000409a:	lea    rcx,[rbp+0x7810]
   1400040a1:	call   0x1400135e4
   1400040a6:	or     rcx,0xffffffffffffffff
   1400040aa:	xor    eax,eax
   1400040ac:	lea    rdi,[rip+0x34291]        # 0x140038344
   1400040b3:	repnz scas ax,WORD PTR es:[rdi]
   1400040b6:	lea    r8,[rip+0x342b7]        # 0x140038374
   1400040bd:	mov    rdx,r13
   1400040c0:	not    rcx
   1400040c3:	lea    r9,[rcx-0x1]
   1400040c7:	lea    rcx,[rbp+0x7810]
   1400040ce:	call   0x1400135e4
   1400040d3:	inc    esi
   1400040d5:	add    rbx,0x8
   1400040d9:	cmp    esi,DWORD PTR [rip+0x33f7d]        # 0x14003805c
   1400040df:	jl     0x140004046
   1400040e5:	mov    ebx,DWORD PTR [rsp+0x58]
   1400040e9:	or     rcx,0xffffffffffffffff
   1400040ed:	xor    eax,eax
   1400040ef:	lea    rdi,[rip+0x3439e]        # 0x140038494
   1400040f6:	repnz scas ax,WORD PTR es:[rdi]
   1400040f9:	lea    r8,[rip+0x343fc]        # 0x1400384fc
   140004100:	mov    rdx,r13
   140004103:	not    rcx
   140004106:	lea    r9,[rcx-0x1]
   14000410a:	lea    rcx,[rbp+0x7810]
   140004111:	call   0x1400135e4
   140004116:	lea    rcx,[rbp+0x7810]
   14000411d:	call   0x140009fcc
   140004122:	mov    rdx,QWORD PTR [rip+0x48d4f]        # 0x14004ce78
   140004129:	mov    r8,r14
   14000412c:	cmp    DWORD PTR [rsp+0x54],r12d
   140004131:	je     0x140004175
   140004133:	mov    ecx,0x2
   140004138:	call   0x14000a10c
   14000413d:	cmp    eax,0xffffffff
   140004140:	jne    0x1400041d2
   140004146:	cmp    DWORD PTR [rsp+0x50],r12d
   14000414b:	je     0x140004155
   14000414d:	or     ecx,eax
   14000414f:	call   0x140013c2c
   140004154:	int3   
   140004155:	mov    ecx,0x1000
   14000415a:	call   0x140013298
   14000415f:	mov    ecx,0x3
   140004164:	mov    rdi,rax
   140004167:	call   0x14000bd98
   14000416c:	lea    r8,[rip+0x34fad]        # 0x140039120
   140004173:	jmp    0x1400041ae
   140004175:	xor    ecx,ecx
   140004177:	call   0x14000a10c
   14000417c:	cmp    eax,0xffffffff
   14000417f:	jne    0x1400041d2
   140004181:	cmp    DWORD PTR [rsp+0x50],r12d
   140004186:	je     0x140004190
   140004188:	or     ecx,eax
   14000418a:	call   0x140013c2c
   14000418f:	int3   
   140004190:	mov    ecx,0x1000
   140004195:	call   0x140013298
   14000419a:	mov    ecx,0x4
   14000419f:	mov    rdi,rax
   1400041a2:	call   0x14000bd98
   1400041a7:	lea    r8,[rip+0x34f82]        # 0x140039130
   1400041ae:	mov    rcx,QWORD PTR [rip+0x48cc3]        # 0x14004ce78
   1400041b5:	mov    r9,rax
   1400041b8:	mov    edx,0x800
   1400041bd:	mov    QWORD PTR [rsp+0x20],rcx
   1400041c2:	mov    rcx,rdi
   1400041c5:	call   0x14000a30c
   1400041ca:	mov    rcx,rdi
   1400041cd:	call   0x14000c328
   1400041d2:	call   0x140009dfc
   1400041d7:	test   ebx,ebx
   1400041d9:	je     0x1400041e4
   1400041db:	mov    rcx,QWORD PTR [rbp-0x60]
   1400041df:	call   0x140009e1c
   1400041e4:	xor    eax,eax
   1400041e6:	jmp    0x1400027ab
   1400041eb:	mov    ecx,0x18
   1400041f0:	call   0x14000bd98
   1400041f5:	mov    rcx,rax
   1400041f8:	call   0x140009fcc
   1400041fd:	or     ecx,0xffffffff
   140004200:	call   0x140013c2c
   140004205:	int3   
   140004206:	int3   
   140004207:	int3   
   140004208:	mov    rdx,QWORD PTR [rip+0x51151]        # 0x140055360
   14000420f:	mov    ecx,DWORD PTR [rip+0x5113f]        # 0x140055354
   140004215:	jmp    0x140002330
   14000421a:	int3   
   14000421b:	int3   
   14000421c:	int3   
   14000421d:	int3   
   14000421e:	int3   
   14000421f:	int3   
   140004220:	int3   
   140004221:	int3   
   140004222:	int3   
   140004223:	int3   
   140004224:	int3   
   140004225:	int3   
   140004226:	int3   
   140004227:	int3   
   140004228:	rex push rbx
   14000422a:	push   rsi
   14000422b:	push   rdi
   14000422c:	sub    rsp,0x860
   140004233:	mov    rax,QWORD PTR [rip+0x3b6f6]        # 0x14003f930
   14000423a:	xor    rax,rsp
   14000423d:	mov    QWORD PTR [rsp+0x850],rax
   140004245:	mov    rsi,rcx
   140004248:	movsxd rbx,edx
   14000424b:	lea    rcx,[rsp+0x50]
   140004250:	mov    edx,0x400
   140004255:	mov    rdi,r8
   140004258:	call   0x14000b05c
   14000425d:	mov    QWORD PTR [rsp+0x40],rdi
   140004262:	mov    ecx,0x5c
   140004267:	mov    DWORD PTR [rsp+0x38],ecx
   14000426b:	lea    rax,[rip+0x34ece]        # 0x140039140
   140004272:	lea    r9,[rip+0x34ecf]        # 0x140039148
   140004279:	mov    QWORD PTR [rsp+0x30],rax
   14000427e:	mov    DWORD PTR [rsp+0x28],ecx
   140004282:	lea    rax,[rsp+0x50]
   140004287:	mov    rdx,rbx
   14000428a:	or     r8,0xffffffffffffffff
   14000428e:	mov    rcx,rsi
   140004291:	mov    QWORD PTR [rsp+0x20],rax
   140004296:	call   0x140013d80
   14000429b:	mov    rcx,QWORD PTR [rsp+0x850]
   1400042a3:	xor    rcx,rsp
   1400042a6:	call   0x140012670
   1400042ab:	add    rsp,0x860
   1400042b2:	pop    rdi
   1400042b3:	pop    rsi
   1400042b4:	pop    rbx
   1400042b5:	ret    
   1400042b6:	int3   
   1400042b7:	int3   
   1400042b8:	int3   
   1400042b9:	int3   
   1400042ba:	int3   
   1400042bb:	int3   
   1400042bc:	int3   
   1400042bd:	int3   
   1400042be:	int3   
   1400042bf:	int3   
   1400042c0:	int3   
   1400042c1:	int3   
   1400042c2:	int3   
   1400042c3:	int3   
   1400042c4:	int3   
   1400042c5:	int3   
   1400042c6:	int3   
   1400042c7:	int3   
   1400042c8:	sub    rsp,0x838
   1400042cf:	mov    rax,QWORD PTR [rip+0x3b65a]        # 0x14003f930
   1400042d6:	xor    rax,rsp
   1400042d9:	mov    QWORD PTR [rsp+0x820],rax
   1400042e1:	lea    rcx,[rip+0x34e78]        # 0x140039160
   1400042e8:	call   QWORD PTR [rip+0x2ad1a]        # 0x14002f008
   1400042ee:	test   rax,rax
   1400042f1:	jne    0x140004314
   1400042f3:	lea    r8,[rip+0x34e86]        # 0x140039180
   1400042fa:	lea    rcx,[rsp+0x20]
   1400042ff:	mov    edx,0x400
   140004304:	call   0x140004228
   140004309:	lea    rcx,[rsp+0x20]
   14000430e:	call   QWORD PTR [rip+0x2acec]        # 0x14002f000
   140004314:	mov    rcx,QWORD PTR [rsp+0x820]
   14000431c:	xor    rcx,rsp
   14000431f:	call   0x140012670
   140004324:	add    rsp,0x838
   14000432b:	ret    
   14000432c:	int3   
   14000432d:	int3   
   14000432e:	int3   
   14000432f:	int3   
   140004330:	int3   
   140004331:	int3   
   140004332:	int3   
   140004333:	int3   
   140004334:	int3   
   140004335:	int3   
   140004336:	int3   
   140004337:	int3   
   140004338:	mov    rax,rsp
   14000433b:	mov    QWORD PTR [rax+0x8],rbx
   14000433f:	mov    QWORD PTR [rax+0x10],rbp
   140004343:	mov    QWORD PTR [rax+0x18],rsi
   140004347:	mov    QWORD PTR [rax+0x20],rdi
   14000434b:	push   r12
   14000434d:	sub    rsp,0x30
   140004351:	lea    rcx,[rip+0x34e48]        # 0x1400391a0
   140004358:	call   0x140013474
   14000435d:	mov    rbp,rax
   140004360:	call   0x14000acac
   140004365:	or     rsi,0xffffffffffffffff
   140004369:	mov    rbx,rax
   14000436c:	xor    eax,eax
   14000436e:	mov    rcx,rsi
   140004371:	mov    rdi,rbx
   140004374:	repnz scas ax,WORD PTR es:[rdi]
   140004377:	not    rcx
   14000437a:	test   rbp,rbp
   14000437d:	je     0x1400043c8
   14000437f:	lea    rdx,[rcx-0x1]
   140004383:	mov    rdi,rbp
   140004386:	mov    rcx,rsi
   140004389:	repnz scas ax,WORD PTR es:[rdi]
   14000438c:	not    rcx
   14000438f:	lea    eax,[rdx+rcx*1+0xb]
   140004393:	movsxd r12,eax
   140004396:	lea    rcx,[r12+r12*1]
   14000439a:	call   0x140013298
   14000439f:	mov    rdi,rax
   1400043a2:	test   rax,rax
   1400043a5:	je     0x1400043fa
   1400043a7:	lea    r9,[rip+0x34e02]        # 0x1400391b0
   1400043ae:	mov    r8,rsi
   1400043b1:	mov    rdx,r12
   1400043b4:	mov    rcx,rax
   1400043b7:	mov    QWORD PTR [rsp+0x28],rbx
   1400043bc:	mov    QWORD PTR [rsp+0x20],rbp
   1400043c1:	call   0x140013d80
   1400043c6:	jmp    0x1400043fa
   1400043c8:	add    ecx,0x9
   1400043cb:	movsxd rbp,ecx
   1400043ce:	lea    rcx,[rbp+rbp*1+0x0]
   1400043d3:	call   0x140013298
   1400043d8:	mov    rdi,rax
   1400043db:	test   rax,rax
   1400043de:	je     0x1400043fa
   1400043e0:	lea    r9,[rip+0x34de9]        # 0x1400391d0
   1400043e7:	mov    r8,rsi
   1400043ea:	mov    rdx,rbp
   1400043ed:	mov    rcx,rax
   1400043f0:	mov    QWORD PTR [rsp+0x20],rbx
   1400043f5:	call   0x140013d80
   1400043fa:	mov    rcx,rdi
   1400043fd:	call   0x140014218
   140004402:	mov    rbx,QWORD PTR [rsp+0x40]
   140004407:	mov    rbp,QWORD PTR [rsp+0x48]
   14000440c:	mov    rsi,QWORD PTR [rsp+0x50]
   140004411:	mov    rdi,QWORD PTR [rsp+0x58]
   140004416:	add    rsp,0x30
   14000441a:	pop    r12
   14000441c:	jmp    0x1400042c8
   140004421:	int3   
   140004422:	int3   
   140004423:	int3   
   140004424:	int3   
   140004425:	int3   
   140004426:	int3   
   140004427:	int3   
   140004428:	mov    QWORD PTR [rsp+0x8],rbx
   14000442d:	push   rdi
   14000442e:	sub    rsp,0x240
   140004435:	mov    rax,QWORD PTR [rip+0x3b4f4]        # 0x14003f930
   14000443c:	xor    rax,rsp
   14000443f:	mov    QWORD PTR [rsp+0x230],rax
   140004447:	lea    r8,[rip+0x34e8a]        # 0x1400392d8
   14000444e:	lea    rcx,[rsp+0x20]
   140004453:	mov    edx,0x400
   140004458:	xor    ebx,ebx
   14000445a:	call   0x140004228
   14000445f:	lea    rcx,[rsp+0x20]
   140004464:	call   QWORD PTR [rip+0x2ab96]        # 0x14002f000
   14000446a:	mov    rdi,rax
   14000446d:	test   rax,rax
   140004470:	je     0x140004496
   140004472:	lea    rdx,[rip+0x34e77]        # 0x1400392f0
   140004479:	mov    rcx,rax
   14000447c:	call   QWORD PTR [rip+0x2ab96]        # 0x14002f018
   140004482:	test   rax,rax
   140004485:	je     0x14000448d
   140004487:	xor    ecx,ecx
   140004489:	call   rax
   14000448b:	mov    ebx,eax
   14000448d:	mov    rcx,rdi
   140004490:	call   QWORD PTR [rip+0x2ab7a]        # 0x14002f010
   140004496:	mov    eax,ebx
   140004498:	mov    rcx,QWORD PTR [rsp+0x230]
   1400044a0:	xor    rcx,rsp
   1400044a3:	call   0x140012670
   1400044a8:	mov    rbx,QWORD PTR [rsp+0x250]
   1400044b0:	add    rsp,0x240
   1400044b7:	pop    rdi
   1400044b8:	ret    
   1400044b9:	int3   
   1400044ba:	int3   
   1400044bb:	int3   
   1400044bc:	int3   
   1400044bd:	int3   
   1400044be:	int3   
   1400044bf:	int3   
   1400044c0:	int3   
   1400044c1:	int3   
   1400044c2:	int3   
   1400044c3:	int3   
   1400044c4:	int3   
   1400044c5:	int3   
   1400044c6:	int3   
   1400044c7:	int3   
   1400044c8:	ret    0x0
   1400044cb:	int3   
   1400044cc:	int3   
   1400044cd:	int3   
   1400044ce:	int3   
   1400044cf:	int3   
   1400044d0:	int3   
   1400044d1:	int3   
   1400044d2:	int3   
   1400044d3:	int3   
   1400044d4:	int3   
   1400044d5:	int3   
   1400044d6:	int3   
   1400044d7:	int3   
   1400044d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400044dd:	push   rdi
   1400044de:	sub    rsp,0x840
   1400044e5:	mov    rax,QWORD PTR [rip+0x3b444]        # 0x14003f930
   1400044ec:	xor    rax,rsp
   1400044ef:	mov    QWORD PTR [rsp+0x830],rax
   1400044f7:	mov    r11,rdx
   1400044fa:	mov    r9d,ecx
   1400044fd:	mov    ebx,0x1
   140004502:	test   r8d,r8d
   140004505:	jne    0x14000461a
   14000450b:	cmp    ecx,ebx
   14000450d:	je     0x14000461a
   140004513:	cmp    ecx,0x2
   140004516:	jne    0x140004544
   140004518:	mov    rax,QWORD PTR [rdx+0x8]
   14000451c:	lea    rdx,[rip+0x34cc5]        # 0x1400391e8
   140004523:	sub    rdx,rax
   140004526:	movzx  ecx,WORD PTR [rax]
   140004529:	movzx  r8d,WORD PTR [rax+rdx*1]
   14000452e:	sub    ecx,r8d
   140004531:	jne    0x14000453c
   140004533:	add    rax,0x2
   140004537:	test   r8d,r8d
   14000453a:	jne    0x140004526
   14000453c:	test   ecx,ecx
   14000453e:	je     0x14000461a
   140004544:	xor    ecx,ecx
   140004546:	test   r9d,r9d
   140004549:	jle    0x1400045a9
   14000454b:	mov    rax,QWORD PTR [r11]
   14000454e:	lea    r10,[rip+0x34cab]        # 0x140039200
   140004555:	mov    rdx,rax
   140004558:	sub    r10,rax
   14000455b:	movzx  r8d,WORD PTR [rdx]
   14000455f:	movzx  edi,WORD PTR [rdx+r10*1]
   140004564:	sub    r8d,edi
   140004567:	jne    0x140004571
   140004569:	add    rdx,0x2
   14000456d:	test   edi,edi
   14000456f:	jne    0x14000455b
   140004571:	test   r8d,r8d
   140004574:	je     0x14000461a
   14000457a:	lea    r10,[rip+0x34c97]        # 0x140039218
   140004581:	sub    r10,rax
   140004584:	movzx  edx,WORD PTR [rax]
   140004587:	movzx  r8d,WORD PTR [rax+r10*1]
   14000458c:	sub    edx,r8d
   14000458f:	jne    0x14000459a
   140004591:	add    rax,0x2
   140004595:	test   r8d,r8d
   140004598:	jne    0x140004584
   14000459a:	test   edx,edx
   14000459c:	je     0x14000461a
   14000459e:	add    ecx,ebx
   1400045a0:	add    r11,0x8
   1400045a4:	cmp    ecx,r9d
   1400045a7:	jl     0x14000454b
   1400045a9:	lea    rax,[rip+0x34c88]        # 0x140039238
   1400045b0:	lea    r9,[rip+0x34cf1]        # 0x1400392a8
   1400045b7:	lea    rcx,[rsp+0x30]
   1400045bc:	mov    QWORD PTR [rsp+0x28],rax
   1400045c1:	lea    rax,[rip+0x34c88]        # 0x140039250
   1400045c8:	or     r8,0xffffffffffffffff
   1400045cc:	mov    edx,0x400
   1400045d1:	mov    QWORD PTR [rsp+0x20],rax
   1400045d6:	call   0x140013d80
   1400045db:	lea    r8,[rip+0x34cd6]        # 0x1400392b8
   1400045e2:	lea    rdx,[rsp+0x30]
   1400045e7:	mov    rcx,0xffffffff80000002
   1400045ee:	call   0x14000aabc
   1400045f3:	cmp    eax,ebx
   1400045f5:	jne    0x14000461a
   1400045f7:	lea    r8,[rip+0x34cca]        # 0x1400392c8
   1400045fe:	lea    rdx,[rsp+0x30]
   140004603:	mov    rcx,0xffffffff80000001
   14000460a:	call   0x14000aabc
   14000460f:	cmp    eax,ebx
   140004611:	je     0x14000461a
   140004613:	call   0x140004428
   140004618:	mov    ebx,eax
   14000461a:	mov    eax,ebx
   14000461c:	mov    rcx,QWORD PTR [rsp+0x830]
   140004624:	xor    rcx,rsp
   140004627:	call   0x140012670
   14000462c:	mov    rbx,QWORD PTR [rsp+0x850]
   140004634:	add    rsp,0x840
   14000463b:	pop    rdi
   14000463c:	ret    
   14000463d:	int3   
   14000463e:	int3   
   14000463f:	int3   
   140004640:	mov    QWORD PTR [rsp+0x8],rbx
   140004645:	mov    QWORD PTR [rsp+0x10],rsi
   14000464a:	push   rdi
   14000464b:	sub    rsp,0x20
   14000464f:	xor    eax,eax
   140004651:	mov    rbx,rcx
   140004654:	test   rcx,rcx
   140004657:	je     0x140004692
   140004659:	or     rcx,0xffffffffffffffff
   14000465d:	lea    edx,[rax+0x1]
   140004660:	mov    rdi,rbx
   140004663:	repnz scas al,BYTE PTR es:[rdi]
   140004665:	not    rcx
   140004668:	sub    rcx,rdx
   14000466b:	lea    esi,[rdx+rcx*1]
   14000466e:	lea    eax,[rsi+rsi*1]
   140004671:	movsxd rcx,eax
   140004674:	call   0x140012bd4
   140004679:	mov    rdi,rax
   14000467c:	test   rax,rax
   14000467f:	je     0x140004692
   140004681:	movsxd r8,esi
   140004684:	mov    rdx,rbx
   140004687:	mov    rcx,rax
   14000468a:	call   0x14001443c
   14000468f:	mov    rax,rdi
   140004692:	mov    rbx,QWORD PTR [rsp+0x30]
   140004697:	mov    rsi,QWORD PTR [rsp+0x38]
   14000469c:	add    rsp,0x20
   1400046a0:	pop    rdi
   1400046a1:	ret    
   1400046a2:	int3   
   1400046a3:	int3   
   1400046a4:	int3   
   1400046a5:	int3   
   1400046a6:	int3   
   1400046a7:	int3   
   1400046a8:	int3   
   1400046a9:	int3   
   1400046aa:	int3   
   1400046ab:	int3   
   1400046ac:	int3   
   1400046ad:	int3   
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	mov    QWORD PTR [rsp+0x18],rbx
   1400046b5:	mov    QWORD PTR [rsp+0x20],rsi
   1400046ba:	push   rdi
   1400046bb:	sub    rsp,0x840
   1400046c2:	mov    rax,QWORD PTR [rip+0x3b267]        # 0x14003f930
   1400046c9:	xor    rax,rsp
   1400046cc:	mov    QWORD PTR [rsp+0x830],rax
   1400046d4:	mov    edi,r8d
   1400046d7:	mov    rsi,rdx
   1400046da:	mov    rbx,rcx
   1400046dd:	call   0x14000aa1c
   1400046e2:	lea    r8,[rip+0x34c47]        # 0x140039330
   1400046e9:	lea    rcx,[rsp+0x30]
   1400046ee:	mov    edx,0x400
   1400046f3:	mov    r9,rax
   1400046f6:	mov    QWORD PTR [rsp+0x28],rbx
   1400046fb:	mov    DWORD PTR [rsp+0x20],0x5c
   140004703:	call   0x14000a30c
   140004708:	lea    rcx,[rsp+0x30]
   14000470d:	call   0x140008538
   140004712:	mov    QWORD PTR [rsi],rax
   140004715:	test   edi,edi
   140004717:	je     0x140004732
   140004719:	lea    rdx,[rsp+0x30]
   14000471e:	lea    rcx,[rip+0x34c1b]        # 0x140039340
   140004725:	call   0x1400145d4
   14000472a:	mov    rcx,QWORD PTR [rsi]
   14000472d:	call   0x140008458
   140004732:	mov    rcx,QWORD PTR [rsp+0x830]
   14000473a:	xor    rcx,rsp
   14000473d:	call   0x140012670
   140004742:	lea    r11,[rsp+0x840]
   14000474a:	mov    rbx,QWORD PTR [r11+0x20]
   14000474e:	mov    rsi,QWORD PTR [r11+0x28]
   140004752:	mov    rsp,r11
   140004755:	pop    rdi
   140004756:	ret    
   140004757:	int3   
   140004758:	int3   
   140004759:	int3   
   14000475a:	int3   
   14000475b:	int3   
   14000475c:	int3   
   14000475d:	int3   
   14000475e:	int3   
   14000475f:	int3   
   140004760:	mov    QWORD PTR [rsp+0x10],rbx
   140004765:	mov    QWORD PTR [rsp+0x18],rbp
   14000476a:	push   rsi
   14000476b:	push   rdi
   14000476c:	push   r13
   14000476e:	sub    rsp,0x4a0
   140004775:	mov    rax,QWORD PTR [rip+0x3b1b4]        # 0x14003f930
   14000477c:	xor    rax,rsp
   14000477f:	mov    QWORD PTR [rsp+0x490],rax
   140004787:	mov    rax,QWORD PTR [rcx+0x18]
   14000478b:	mov    rbx,rcx
   14000478e:	mov    DWORD PTR [rsp+0x30],0x400
   140004796:	mov    QWORD PTR [rsp+0x40],rax
   14000479b:	lea    rax,[rip+0x34bc6]        # 0x140039368
   1400047a2:	mov    QWORD PTR [rsp+0x48],rax
   1400047a7:	call   0x140001990
   1400047ac:	mov    rcx,rax
   1400047af:	call   0x1400092e8
   1400047b4:	mov    rcx,QWORD PTR [rbx+0x18]
   1400047b8:	xor    ebp,ebp
   1400047ba:	mov    QWORD PTR [rsp+0x50],rax
   1400047bf:	lea    rax,[rip+0x34bba]        # 0x140039380
   1400047c6:	lea    r9,[rsp+0x90]
   1400047ce:	mov    QWORD PTR [rsp+0x58],rax
   1400047d3:	lea    rax,[rsp+0x30]
   1400047d8:	lea    r8,[rsp+0x40]
   1400047dd:	lea    edx,[rbp+0x4]
   1400047e0:	mov    QWORD PTR [rsp+0x60],rbp
   1400047e5:	mov    QWORD PTR [rsp+0x20],rax
   1400047ea:	call   0x14000a4fc
   1400047ef:	lea    rcx,[rsp+0x90]
   1400047f7:	call   0x140004640
   1400047fc:	mov    rsi,rax
   1400047ff:	cmp    DWORD PTR [rsp+0x30],ebp
   140004803:	jle    0x14000499e
   140004809:	lea    rdx,[rip+0x34bb0]        # 0x1400393c0
   140004810:	mov    rcx,rax
   140004813:	call   0x140013160
   140004818:	lea    r13d,[rbp+0xa]
   14000481c:	mov    r11,rax
   14000481f:	test   rax,rax
   140004822:	je     0x1400048ad
   140004828:	or     rcx,0xffffffffffffffff
   14000482c:	xor    eax,eax
   14000482e:	lea    rdi,[rip+0x34bab]        # 0x1400393e0
   140004835:	repnz scas ax,WORD PTR es:[rdi]
   140004838:	mov    edx,r13d
   14000483b:	not    rcx
   14000483e:	lea    rdi,[r11+rcx*2-0x2]
   140004843:	mov    rcx,rdi
   140004846:	call   0x140014680
   14000484b:	cmp    rax,rdi
   14000484e:	jbe    0x1400048ad
   140004850:	sub    rax,rdi
   140004853:	sar    rax,1
   140004856:	lea    rcx,[rax+rax*1+0x2]
   14000485b:	call   0x140013298
   140004860:	mov    rcx,rax
   140004863:	mov    QWORD PTR [rbx+0x8],rax
   140004867:	test   rax,rax
   14000486a:	je     0x1400049cf
   140004870:	jmp    0x14000488f
   140004872:	cmp    ax,0x9
   140004876:	je     0x140004898
   140004878:	cmp    ax,r13w
   14000487c:	je     0x140004898
   14000487e:	cmp    ax,0xd
   140004882:	je     0x140004898
   140004884:	mov    WORD PTR [rcx],ax
   140004887:	add    rcx,0x2
   14000488b:	add    rdi,0x2
   14000488f:	movzx  eax,WORD PTR [rdi]
   140004892:	cmp    ax,0x20
   140004896:	jne    0x140004872
   140004898:	mov    WORD PTR [rcx],bp
   14000489b:	mov    rax,QWORD PTR [rbx+0x8]
   14000489f:	cmp    WORD PTR [rax],bp
   1400048a2:	jne    0x1400048ad
   1400048a4:	call   0x1400130a8
   1400048a9:	mov    QWORD PTR [rbx+0x8],rbp
   1400048ad:	lea    rdx,[rip+0x34b4c]        # 0x140039400
   1400048b4:	mov    rcx,rsi
   1400048b7:	call   0x140013160
   1400048bc:	mov    r11,rax
   1400048bf:	test   rax,rax
   1400048c2:	je     0x14000494a
   1400048c8:	or     rcx,0xffffffffffffffff
   1400048cc:	xor    eax,eax
   1400048ce:	lea    rdi,[rip+0x34b53]        # 0x140039428
   1400048d5:	repnz scas ax,WORD PTR es:[rdi]
   1400048d8:	mov    edx,r13d
   1400048db:	not    rcx
   1400048de:	lea    rdi,[r11+rcx*2-0x2]
   1400048e3:	mov    rcx,rdi
   1400048e6:	call   0x140014680
   1400048eb:	cmp    rax,rdi
   1400048ee:	jbe    0x14000494a
   1400048f0:	sub    rax,rdi
   1400048f3:	sar    rax,1
   1400048f6:	lea    rcx,[rax+rax*1+0x2]
   1400048fb:	call   0x140013298
   140004900:	mov    rcx,rax
   140004903:	mov    QWORD PTR [rbx],rax
   140004906:	test   rax,rax
   140004909:	je     0x1400049cf
   14000490f:	jmp    0x14000492e
   140004911:	cmp    ax,0x9
   140004915:	je     0x140004937
   140004917:	cmp    ax,r13w
   14000491b:	je     0x140004937
   14000491d:	cmp    ax,0xd
   140004921:	je     0x140004937
   140004923:	mov    WORD PTR [rcx],ax
   140004926:	add    rcx,0x2
   14000492a:	add    rdi,0x2
   14000492e:	movzx  eax,WORD PTR [rdi]
   140004931:	cmp    ax,0x20
   140004935:	jne    0x140004911
   140004937:	mov    WORD PTR [rcx],bp
   14000493a:	mov    rax,QWORD PTR [rbx]
   14000493d:	cmp    WORD PTR [rax],bp
   140004940:	jne    0x14000494a
   140004942:	call   0x1400130a8
   140004947:	mov    QWORD PTR [rbx],rbp
   14000494a:	mov    rcx,QWORD PTR [rbx+0x8]
   14000494e:	mov    edi,0x3
   140004953:	test   rcx,rcx
   140004956:	je     0x140004978
   140004958:	lea    rdx,[rip+0x34af1]        # 0x140039450
   14000495f:	mov    r8d,edi
   140004962:	call   0x140013790
   140004967:	test   eax,eax
   140004969:	jg     0x140004978
   14000496b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000496f:	call   0x1400130a8
   140004974:	mov    QWORD PTR [rbx+0x8],rbp
   140004978:	mov    rcx,QWORD PTR [rbx]
   14000497b:	test   rcx,rcx
   14000497e:	je     0x14000499e
   140004980:	lea    rdx,[rip+0x34ad1]        # 0x140039458
   140004987:	mov    r8,rdi
   14000498a:	call   0x140013790
   14000498f:	test   eax,eax
   140004991:	jg     0x14000499e
   140004993:	mov    rcx,QWORD PTR [rbx]
   140004996:	call   0x1400130a8
   14000499b:	mov    QWORD PTR [rbx],rbp
   14000499e:	test   rsi,rsi
   1400049a1:	je     0x1400049ab
   1400049a3:	mov    rcx,rsi
   1400049a6:	call   0x1400130a8
   1400049ab:	lea    rcx,[rip+0x34aae]        # 0x140039460
   1400049b2:	call   0x1400130e8
   1400049b7:	mov    QWORD PTR [rbx+0x10],rax
   1400049bb:	lea    rax,[rip+0x34af6]        # 0x1400394b8
   1400049c2:	mov    QWORD PTR [rbx+0x20],rax
   1400049c6:	call   0x14000a1bc
   1400049cb:	mov    QWORD PTR [rbx+0x28],rax
   1400049cf:	mov    rcx,QWORD PTR [rsp+0x490]
   1400049d7:	xor    rcx,rsp
   1400049da:	call   0x140012670
   1400049df:	lea    r11,[rsp+0x4a0]
   1400049e7:	mov    rbx,QWORD PTR [r11+0x28]
   1400049eb:	mov    rbp,QWORD PTR [r11+0x30]
   1400049ef:	mov    rsp,r11
   1400049f2:	pop    r13
   1400049f4:	pop    rdi
   1400049f5:	pop    rsi
   1400049f6:	ret    
   1400049f7:	int3   
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	int3   
   1400049fd:	int3   
   1400049fe:	int3   
   1400049ff:	int3   
   140004a00:	mov    edx,DWORD PTR [rip+0x49492]        # 0x14004de98
   140004a06:	or     ecx,0xffffffff
   140004a09:	test   edx,edx
   140004a0b:	jle    0x140004a25
   140004a0d:	lea    rax,[rip+0x48c8c]        # 0x14004d6a0
   140004a14:	mov    r8d,edx
   140004a17:	cmp    DWORD PTR [rax],ecx
   140004a19:	cmovg  ecx,DWORD PTR [rax]
   140004a1c:	add    rax,0x8
   140004a20:	dec    r8
   140004a23:	jne    0x140004a17
   140004a25:	xor    eax,eax
   140004a27:	test   ecx,ecx
   140004a29:	jle    0x140004a55
   140004a2b:	xor    r8d,r8d
   140004a2e:	test   edx,edx
   140004a30:	jle    0x140004a4a
   140004a32:	lea    r9,[rip+0x48c67]        # 0x14004d6a0
   140004a39:	cmp    DWORD PTR [r9],eax
   140004a3c:	je     0x140004a4a
   140004a3e:	inc    r8d
   140004a41:	add    r9,0x8
   140004a45:	cmp    r8d,edx
   140004a48:	jl     0x140004a39
   140004a4a:	cmp    r8d,edx
   140004a4d:	je     0x140004a58
   140004a4f:	inc    eax
   140004a51:	cmp    eax,ecx
   140004a53:	jl     0x140004a2b
   140004a55:	lea    eax,[rcx+0x1]
   140004a58:	ret    
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	mov    r8d,DWORD PTR [rip+0x49431]        # 0x14004de98
   140004a67:	xor    edx,edx
   140004a69:	lea    r9,[rip+0x48c30]        # 0x14004d6a0
   140004a70:	test   r8d,r8d
   140004a73:	jle    0x140004a87
   140004a75:	mov    rax,r9
   140004a78:	cmp    DWORD PTR [rax],ecx
   140004a7a:	je     0x140004a98
   140004a7c:	inc    edx
   140004a7e:	add    rax,0x8
   140004a82:	cmp    edx,r8d
   140004a85:	jl     0x140004a78
   140004a87:	movsxd rax,edx
   140004a8a:	inc    r8d
   140004a8d:	mov    DWORD PTR [r9+rax*8],ecx
   140004a91:	mov    DWORD PTR [rip+0x49400],r8d        # 0x14004de98
   140004a98:	ret    
   140004a99:	int3   
   140004a9a:	int3   
   140004a9b:	int3   
   140004a9c:	int3   
   140004a9d:	int3   
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	sub    rsp,0x28
   140004aa4:	mov    r8,rdx
   140004aa7:	mov    rdx,rcx
   140004aaa:	mov    rcx,QWORD PTR [rip+0x493ef]        # 0x14004dea0
   140004ab1:	call   0x1400082e8
   140004ab6:	mov    QWORD PTR [rip+0x493e3],rax        # 0x14004dea0
   140004abd:	add    rsp,0x28
   140004ac1:	ret    
   140004ac2:	int3   
   140004ac3:	int3   
   140004ac4:	int3   
   140004ac5:	int3   
   140004ac6:	int3   
   140004ac7:	int3   
   140004ac8:	int3   
   140004ac9:	int3   
   140004aca:	int3   
   140004acb:	int3   
   140004acc:	int3   
   140004acd:	int3   
   140004ace:	int3   
   140004acf:	int3   
   140004ad0:	sub    rsp,0xb8
   140004ad7:	mov    rax,QWORD PTR [rip+0x3ae52]        # 0x14003f930
   140004ade:	xor    rax,rsp
   140004ae1:	mov    QWORD PTR [rsp+0xa0],rax
   140004ae9:	mov    QWORD PTR [rsp+0x28],rdx
   140004aee:	mov    DWORD PTR [rsp+0x20],ecx
   140004af2:	lea    r9,[rip+0x34f67]        # 0x140039a60
   140004af9:	lea    rcx,[rsp+0x30]
   140004afe:	lea    r8,[rip+0x34f8b]        # 0x140039a90
   140004b05:	mov    edx,0x32
   140004b0a:	call   0x14000a30c
   140004b0f:	mov    rcx,QWORD PTR [rip+0x4938a]        # 0x14004dea0
   140004b16:	lea    rdx,[rsp+0x30]
   140004b1b:	call   0x1400082a8
   140004b20:	mov    rcx,QWORD PTR [rsp+0xa0]
   140004b28:	xor    rcx,rsp
   140004b2b:	call   0x140012670
   140004b30:	add    rsp,0xb8
   140004b37:	ret    
   140004b38:	int3   
   140004b39:	int3   
   140004b3a:	int3   
   140004b3b:	int3   
   140004b3c:	int3   
   140004b3d:	int3   
   140004b3e:	int3   
   140004b3f:	int3   
   140004b40:	lea    rdx,[rip+0x34f59]        # 0x140039aa0
   140004b47:	jmp    0x140004ad0
   140004b4c:	int3   
   140004b4d:	int3   
   140004b4e:	int3   
   140004b4f:	int3   
   140004b50:	int3   
   140004b51:	int3   
   140004b52:	int3   
   140004b53:	int3   
   140004b54:	int3   
   140004b55:	int3   
   140004b56:	int3   
   140004b57:	int3   
   140004b58:	int3   
   140004b59:	int3   
   140004b5a:	int3   
   140004b5b:	int3   
   140004b5c:	int3   
   140004b5d:	int3   
   140004b5e:	int3   
   140004b5f:	int3   
   140004b60:	lea    rdx,[rip+0x34f51]        # 0x140039ab8
   140004b67:	jmp    0x140004ad0
   140004b6c:	int3   
   140004b6d:	int3   
   140004b6e:	int3   
   140004b6f:	int3   
   140004b70:	int3   
   140004b71:	int3   
   140004b72:	int3   
   140004b73:	int3   
   140004b74:	int3   
   140004b75:	int3   
   140004b76:	int3   
   140004b77:	int3   
   140004b78:	int3   
   140004b79:	int3   
   140004b7a:	int3   
   140004b7b:	int3   
   140004b7c:	int3   
   140004b7d:	int3   
   140004b7e:	int3   
   140004b7f:	int3   
   140004b80:	lea    rdx,[rip+0x34f49]        # 0x140039ad0
   140004b87:	jmp    0x140004ad0
   140004b8c:	int3   
   140004b8d:	int3   
   140004b8e:	int3   
   140004b8f:	int3   
   140004b90:	int3   
   140004b91:	int3   
   140004b92:	int3   
   140004b93:	int3   
   140004b94:	int3   
   140004b95:	int3   
   140004b96:	int3   
   140004b97:	int3   
   140004b98:	int3   
   140004b99:	int3   
   140004b9a:	int3   
   140004b9b:	int3   
   140004b9c:	int3   
   140004b9d:	int3   
   140004b9e:	int3   
   140004b9f:	int3   
   140004ba0:	sub    rsp,0x28
   140004ba4:	lea    rdx,[rip+0x34f3d]        # 0x140039ae8
   140004bab:	call   0x140004ad0
   140004bb0:	mov    rcx,rax
   140004bb3:	add    rsp,0x28
   140004bb7:	jmp    0x14000ac9c
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	int3   
   140004bc1:	int3   
   140004bc2:	int3   
   140004bc3:	int3   
   140004bc4:	int3   
   140004bc5:	int3   
   140004bc6:	int3   
   140004bc7:	int3   
   140004bc8:	int3   
   140004bc9:	int3   
   140004bca:	int3   
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	lea    rdx,[rip+0x34f21]        # 0x140039af8
   140004bd7:	jmp    0x140004ad0
   140004bdc:	int3   
   140004bdd:	int3   
   140004bde:	int3   
   140004bdf:	int3   
   140004be0:	int3   
   140004be1:	int3   
   140004be2:	int3   
   140004be3:	int3   
   140004be4:	int3   
   140004be5:	int3   
   140004be6:	int3   
   140004be7:	int3   
   140004be8:	int3   
   140004be9:	int3   
   140004bea:	int3   
   140004beb:	int3   
   140004bec:	int3   
   140004bed:	int3   
   140004bee:	int3   
   140004bef:	int3   
   140004bf0:	lea    rdx,[rip+0x34f11]        # 0x140039b08
   140004bf7:	jmp    0x140004ad0
   140004bfc:	int3   
   140004bfd:	int3   
   140004bfe:	int3   
   140004bff:	int3   
   140004c00:	int3   
   140004c01:	int3   
   140004c02:	int3   
   140004c03:	int3   
   140004c04:	int3   
   140004c05:	int3   
   140004c06:	int3   
   140004c07:	int3   
   140004c08:	int3   
   140004c09:	int3   
   140004c0a:	int3   
   140004c0b:	int3   
   140004c0c:	int3   
   140004c0d:	int3   
   140004c0e:	int3   
   140004c0f:	int3   
   140004c10:	lea    rdx,[rip+0x34f01]        # 0x140039b18
   140004c17:	jmp    0x140004ad0
   140004c1c:	int3   
   140004c1d:	int3   
   140004c1e:	int3   
   140004c1f:	int3   
   140004c20:	int3   
   140004c21:	int3   
   140004c22:	int3   
   140004c23:	int3   
   140004c24:	int3   
   140004c25:	int3   
   140004c26:	int3   
   140004c27:	int3   
   140004c28:	int3   
   140004c29:	int3   
   140004c2a:	int3   
   140004c2b:	int3   
   140004c2c:	int3   
   140004c2d:	int3   
   140004c2e:	int3   
   140004c2f:	int3   
   140004c30:	sub    rsp,0x28
   140004c34:	lea    rdx,[rip+0x34eed]        # 0x140039b28
   140004c3b:	call   0x140004ad0
   140004c40:	test   rax,rax
   140004c43:	je     0x140004c58
   140004c45:	lea    rdx,[rip+0x34ef4]        # 0x140039b40
   140004c4c:	mov    rcx,rax
   140004c4f:	call   0x1400147a4
   140004c54:	test   eax,eax
   140004c56:	je     0x140004c5d
   140004c58:	mov    eax,0x1
   140004c5d:	add    rsp,0x28
   140004c61:	ret    
   140004c62:	int3   
   140004c63:	int3   
   140004c64:	int3   
   140004c65:	int3   
   140004c66:	int3   
   140004c67:	int3   
   140004c68:	int3   
   140004c69:	int3   
   140004c6a:	int3   
   140004c6b:	int3   
   140004c6c:	int3   
   140004c6d:	int3   
   140004c6e:	int3   
   140004c6f:	int3   
   140004c70:	sub    rsp,0x28
   140004c74:	lea    rdx,[rip+0x34ed5]        # 0x140039b50
   140004c7b:	call   0x140004ad0
   140004c80:	test   rax,rax
   140004c83:	je     0x140004c9f
   140004c85:	lea    rdx,[rip+0x34edc]        # 0x140039b68
   140004c8c:	mov    rcx,rax
   140004c8f:	call   0x1400147a4
   140004c94:	test   eax,eax
   140004c96:	jne    0x140004c9f
   140004c98:	mov    eax,0x1
   140004c9d:	jmp    0x140004ca1
   140004c9f:	xor    eax,eax
   140004ca1:	add    rsp,0x28
   140004ca5:	ret    
   140004ca6:	int3   
   140004ca7:	int3   
   140004ca8:	int3   
   140004ca9:	int3   
   140004caa:	int3   
   140004cab:	int3   
   140004cac:	int3   
   140004cad:	int3   
   140004cae:	int3   
   140004caf:	int3   
   140004cb0:	mov    r8d,DWORD PTR [rip+0x491e1]        # 0x14004de98
   140004cb7:	xor    eax,eax
   140004cb9:	test   r8d,r8d
   140004cbc:	jle    0x140004cd7
   140004cbe:	lea    r9,[rip+0x489db]        # 0x14004d6a0
   140004cc5:	mov    rdx,r9
   140004cc8:	cmp    DWORD PTR [rdx],ecx
   140004cca:	je     0x140004cda
   140004ccc:	inc    eax
   140004cce:	add    rdx,0x8
   140004cd2:	cmp    eax,r8d
   140004cd5:	jl     0x140004cc8
   140004cd7:	xor    eax,eax
   140004cd9:	ret    
   140004cda:	cdqe   
   140004cdc:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140004ce1:	ret    
   140004ce2:	int3   
   140004ce3:	int3   
   140004ce4:	int3   
   140004ce5:	int3   
   140004ce6:	int3   
   140004ce7:	int3   
   140004ce8:	int3   
   140004ce9:	int3   
   140004cea:	int3   
   140004ceb:	int3   
   140004cec:	int3   
   140004ced:	int3   
   140004cee:	int3   
   140004cef:	int3   
   140004cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140004cf5:	mov    QWORD PTR [rsp+0x10],rbp
   140004cfa:	mov    QWORD PTR [rsp+0x18],rsi
   140004cff:	push   rdi
   140004d00:	push   r12
   140004d02:	push   r13
   140004d04:	sub    rsp,0x20
   140004d08:	mov    ebx,r8d
   140004d0b:	mov    esi,edx
   140004d0d:	mov    ebp,ecx
   140004d0f:	test   ecx,ecx
   140004d11:	jns    0x140004d51
   140004d13:	test   ebx,ebx
   140004d15:	je     0x140004f60
   140004d1b:	lea    rdx,[rip+0x34dd6]        # 0x140039af8
   140004d22:	mov    ecx,esi
   140004d24:	call   0x140004ad0
   140004d29:	lea    rdx,[rip+0x34d70]        # 0x140039aa0
   140004d30:	mov    ecx,esi
   140004d32:	mov    rbx,rax
   140004d35:	call   0x140004ad0
   140004d3a:	lea    rcx,[rip+0x34ecf]        # 0x140039c10
   140004d41:	mov    rdx,rax
   140004d44:	mov    r8,rbx
   140004d47:	call   0x1400145d4
   140004d4c:	jmp    0x140004f60
   140004d51:	lea    r12,[rip+0x34d48]        # 0x140039aa0
   140004d58:	mov    ecx,esi
   140004d5a:	mov    rdx,r12
   140004d5d:	call   0x140004ad0
   140004d62:	mov    rdx,r12
   140004d65:	mov    ecx,ebp
   140004d67:	mov    rdi,rax
   140004d6a:	call   0x140004ad0
   140004d6f:	sub    rdi,rax
   140004d72:	movzx  ecx,WORD PTR [rax]
   140004d75:	cmp    cx,WORD PTR [rax+rdi*1]
   140004d79:	jne    0x140004d88
   140004d7b:	add    rax,0x2
   140004d7f:	test   cx,cx
   140004d82:	jne    0x140004d72
   140004d84:	xor    eax,eax
   140004d86:	jmp    0x140004d8d
   140004d88:	sbb    eax,eax
   140004d8a:	sbb    eax,0xffffffff
   140004d8d:	test   eax,eax
   140004d8f:	jle    0x140004dd9
   140004d91:	test   ebx,ebx
   140004d93:	je     0x140004dd2
   140004d95:	lea    rdx,[rip+0x34d5c]        # 0x140039af8
   140004d9c:	mov    ecx,ebp
   140004d9e:	call   0x140004ad0
   140004da3:	mov    rdx,r12
   140004da6:	mov    ecx,esi
   140004da8:	mov    rdi,rax
   140004dab:	call   0x140004ad0
   140004db0:	mov    rdx,r12
   140004db3:	mov    ecx,ebp
   140004db5:	mov    rbx,rax
   140004db8:	call   0x140004ad0
   140004dbd:	lea    rcx,[rip+0x34e9c]        # 0x140039c60
   140004dc4:	mov    rdx,rax
   140004dc7:	mov    r9,rdi
   140004dca:	mov    r8,rbx
   140004dcd:	call   0x1400145d4
   140004dd2:	mov    eax,ebp
   140004dd4:	jmp    0x140004f62
   140004dd9:	jns    0x140004e1a
   140004ddb:	test   ebx,ebx
   140004ddd:	je     0x140004f60
   140004de3:	lea    rdx,[rip+0x34d0e]        # 0x140039af8
   140004dea:	mov    ecx,esi
   140004dec:	call   0x140004ad0
   140004df1:	mov    rdx,r12
   140004df4:	mov    ecx,esi
   140004df6:	mov    rdi,rax
   140004df9:	call   0x140004ad0
   140004dfe:	mov    rdx,r12
   140004e01:	mov    ecx,ebp
   140004e03:	mov    rbx,rax
   140004e06:	call   0x140004ad0
   140004e0b:	mov    r9,rdi
   140004e0e:	lea    rcx,[rip+0x34e9b]        # 0x140039cb0
   140004e15:	jmp    0x140004f55
   140004e1a:	lea    r13,[rip+0x34c97]        # 0x140039ab8
   140004e21:	mov    ecx,esi
   140004e23:	mov    rdx,r13
   140004e26:	call   0x140004ad0
   140004e2b:	mov    rdx,r13
   140004e2e:	mov    ecx,ebp
   140004e30:	mov    rdi,rax
   140004e33:	call   0x140004ad0
   140004e38:	sub    rdi,rax
   140004e3b:	movzx  ecx,WORD PTR [rax]
   140004e3e:	cmp    cx,WORD PTR [rax+rdi*1]
   140004e42:	jne    0x140004e51
   140004e44:	add    rax,0x2
   140004e48:	test   cx,cx
   140004e4b:	jne    0x140004e3b
   140004e4d:	xor    edi,edi
   140004e4f:	jmp    0x140004e56
   140004e51:	sbb    edi,edi
   140004e53:	sbb    edi,0xffffffff
   140004e56:	test   edi,edi
   140004e58:	jle    0x140004e96
   140004e5a:	test   ebx,ebx
   140004e5c:	je     0x140004dd2
   140004e62:	lea    rdx,[rip+0x34c8f]        # 0x140039af8
   140004e69:	mov    ecx,ebp
   140004e6b:	call   0x140004ad0
   140004e70:	mov    rdx,r13
   140004e73:	mov    ecx,esi
   140004e75:	mov    rdi,rax
   140004e78:	call   0x140004ad0
   140004e7d:	mov    rdx,r13
   140004e80:	mov    ecx,ebp
   140004e82:	mov    rbx,rax
   140004e85:	call   0x140004ad0
   140004e8a:	lea    rcx,[rip+0x34e6f]        # 0x140039d00
   140004e91:	jmp    0x140004dc4
   140004e96:	lea    rdx,[rip+0x34c5b]        # 0x140039af8
   140004e9d:	mov    ecx,esi
   140004e9f:	call   0x140004ad0
   140004ea4:	mov    r12,rax
   140004ea7:	test   edi,edi
   140004ea9:	jne    0x140004f30
   140004eaf:	test   rax,rax
   140004eb2:	je     0x140004ef4
   140004eb4:	mov    rdx,QWORD PTR [rip+0x48fed]        # 0x14004dea8
   140004ebb:	test   rdx,rdx
   140004ebe:	je     0x140004ef4
   140004ec0:	mov    rcx,rax
   140004ec3:	call   0x1400147a4
   140004ec8:	test   eax,eax
   140004eca:	jne    0x140004ef4
   140004ecc:	test   ebx,ebx
   140004ece:	je     0x140004f60
   140004ed4:	mov    rdx,r13
   140004ed7:	mov    ecx,esi
   140004ed9:	call   0x140004ad0
   140004ede:	mov    rdx,r13
   140004ee1:	mov    ecx,ebp
   140004ee3:	mov    rbx,rax
   140004ee6:	call   0x140004ad0
   140004eeb:	lea    rcx,[rip+0x34e5e]        # 0x140039d50
   140004ef2:	jmp    0x140004f52
   140004ef4:	test   ebx,ebx
   140004ef6:	je     0x140004dd2
   140004efc:	lea    rdx,[rip+0x34bf5]        # 0x140039af8
   140004f03:	mov    ecx,ebp
   140004f05:	call   0x140004ad0
   140004f0a:	mov    rdx,r13
   140004f0d:	mov    ecx,esi
   140004f0f:	mov    rdi,rax
   140004f12:	call   0x140004ad0
   140004f17:	mov    rdx,r13
   140004f1a:	mov    ecx,ebp
   140004f1c:	mov    rbx,rax
   140004f1f:	call   0x140004ad0
   140004f24:	lea    rcx,[rip+0x34ea5]        # 0x140039dd0
   140004f2b:	jmp    0x140004dc4
   140004f30:	test   ebx,ebx
   140004f32:	je     0x140004f60
   140004f34:	mov    rdx,r13
   140004f37:	mov    ecx,esi
   140004f39:	call   0x140004ad0
   140004f3e:	mov    rdx,r13
   140004f41:	mov    ecx,ebp
   140004f43:	mov    rbx,rax
   140004f46:	call   0x140004ad0
   140004f4b:	lea    rcx,[rip+0x34ece]        # 0x140039e20
   140004f52:	mov    r9,r12
   140004f55:	mov    r8,rbx
   140004f58:	mov    rdx,rax
   140004f5b:	call   0x1400145d4
   140004f60:	mov    eax,esi
   140004f62:	mov    rbx,QWORD PTR [rsp+0x40]
   140004f67:	mov    rbp,QWORD PTR [rsp+0x48]
   140004f6c:	mov    rsi,QWORD PTR [rsp+0x50]
   140004f71:	add    rsp,0x20
   140004f75:	pop    r13
   140004f77:	pop    r12
   140004f79:	pop    rdi
   140004f7a:	ret    
   140004f7b:	int3   
   140004f7c:	int3   
   140004f7d:	int3   
   140004f7e:	int3   
   140004f7f:	int3   
   140004f80:	int3   
   140004f81:	int3   
   140004f82:	int3   
   140004f83:	int3   
   140004f84:	int3   
   140004f85:	int3   
   140004f86:	int3   
   140004f87:	int3   
   140004f88:	int3   
   140004f89:	int3   
   140004f8a:	int3   
   140004f8b:	int3   
   140004f8c:	int3   
   140004f8d:	int3   
   140004f8e:	int3   
   140004f8f:	int3   
   140004f90:	mov    QWORD PTR [rsp+0x8],rbx
   140004f95:	mov    QWORD PTR [rsp+0x10],rsi
   140004f9a:	push   rdi
   140004f9b:	sub    rsp,0x20
   140004f9f:	mov    edi,edx
   140004fa1:	mov    rsi,rcx
   140004fa4:	call   0x14000b0bc
   140004fa9:	test   rax,rax
   140004fac:	je     0x140004fd1
   140004fae:	mov    r8,rsi
   140004fb1:	sub    r8,rax
   140004fb4:	movzx  ecx,WORD PTR [rax]
   140004fb7:	movzx  edx,WORD PTR [rax+r8*1]
   140004fbc:	sub    ecx,edx
   140004fbe:	jne    0x140004fc8
   140004fc0:	add    rax,0x2
   140004fc4:	test   edx,edx
   140004fc6:	jne    0x140004fb4
   140004fc8:	test   ecx,ecx
   140004fca:	jne    0x140004fd1
   140004fcc:	lea    ebx,[rcx+0x1]
   140004fcf:	jmp    0x140004fd3
   140004fd1:	xor    ebx,ebx
   140004fd3:	test   edi,edi
   140004fd5:	je     0x140004ffb
   140004fd7:	lea    rax,[rip+0x34e92]        # 0x140039e70
   140004fde:	cmp    ebx,0x1
   140004fe1:	lea    rdx,[rip+0x34b90]        # 0x140039b78
   140004fe8:	lea    rcx,[rip+0x34b99]        # 0x140039b88
   140004fef:	mov    r8,rsi
   140004ff2:	cmove  rdx,rax
   140004ff6:	call   0x1400145d4
   140004ffb:	mov    rsi,QWORD PTR [rsp+0x38]
   140005000:	mov    eax,ebx
   140005002:	mov    rbx,QWORD PTR [rsp+0x30]
   140005007:	add    rsp,0x20
   14000500b:	pop    rdi
   14000500c:	ret    
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	int3   
   140005011:	int3   
   140005012:	int3   
   140005013:	int3   
   140005014:	int3   
   140005015:	int3   
   140005016:	int3   
   140005017:	int3   
   140005018:	int3   
   140005019:	int3   
   14000501a:	int3   
   14000501b:	int3   
   14000501c:	int3   
   14000501d:	int3   
   14000501e:	int3   
   14000501f:	int3   
   140005020:	sub    rsp,0x28
   140005024:	mov    rcx,QWORD PTR [rip+0x48e75]        # 0x14004dea0
   14000502b:	lea    rdx,[rip+0x34e4e]        # 0x140039e80
   140005032:	call   0x1400082a8
   140005037:	mov    r11,rax
   14000503a:	xor    eax,eax
   14000503c:	test   r11,r11
   14000503f:	je     0x140005064
   140005041:	lea    r8,[rip+0x34e80]        # 0x140039ec8
   140005048:	sub    r8,r11
   14000504b:	movzx  ecx,WORD PTR [r11]
   14000504f:	movzx  edx,WORD PTR [r11+r8*1]
   140005054:	sub    ecx,edx
   140005056:	jne    0x140005060
   140005058:	add    r11,0x2
   14000505c:	test   edx,edx
   14000505e:	jne    0x14000504b
   140005060:	test   ecx,ecx
   140005062:	je     0x140005069
   140005064:	mov    eax,0x1
   140005069:	add    rsp,0x28
   14000506d:	ret    
   14000506e:	int3   
   14000506f:	int3   
   140005070:	int3   
   140005071:	int3   
   140005072:	int3   
   140005073:	int3   
   140005074:	int3   
   140005075:	int3   
   140005076:	int3   
   140005077:	int3   
   140005078:	int3   
   140005079:	int3   
   14000507a:	int3   
   14000507b:	int3   
   14000507c:	int3   
   14000507d:	int3   
   14000507e:	int3   
   14000507f:	int3   
   140005080:	lea    rax,[rip+0x34e51]        # 0x140039ed8
   140005087:	ret    
   140005088:	int3   
   140005089:	int3   
   14000508a:	int3   
   14000508b:	int3   
   14000508c:	int3   
   14000508d:	int3   
   14000508e:	int3   
   14000508f:	int3   
   140005090:	mov    QWORD PTR [rsp+0x8],rbx
   140005095:	mov    QWORD PTR [rsp+0x10],rbp
   14000509a:	mov    QWORD PTR [rsp+0x18],rsi
   14000509f:	push   rdi
   1400050a0:	sub    rsp,0x20
   1400050a4:	mov    rbx,rdx
   1400050a7:	mov    rdx,rcx
   1400050aa:	mov    rcx,QWORD PTR [rip+0x48def]        # 0x14004dea0
   1400050b1:	call   0x1400082a8
   1400050b6:	test   rax,rax
   1400050b9:	je     0x14000515b
   1400050bf:	mov    rcx,rax
   1400050c2:	call   0x140008538
   1400050c7:	mov    rsi,rax
   1400050ca:	test   rax,rax
   1400050cd:	je     0x14000515b
   1400050d3:	xor    edi,edi
   1400050d5:	test   rbx,rbx
   1400050d8:	je     0x14000513b
   1400050da:	or     rcx,0xffffffffffffffff
   1400050de:	xor    eax,eax
   1400050e0:	mov    rdi,rbx
   1400050e3:	repnz scas ax,WORD PTR es:[rdi]
   1400050e6:	not    rcx
   1400050e9:	dec    rcx
   1400050ec:	movsxd rbp,ecx
   1400050ef:	lea    ecx,[rax+0x2]
   1400050f2:	lea    rdx,[rbp+rbp*1+0x0]
   1400050f7:	call   0x140012bd4
   1400050fc:	mov    rdi,rax
   1400050ff:	test   rax,rax
   140005102:	je     0x14000513b
   140005104:	xor    edx,edx
   140005106:	test   rbp,rbp
   140005109:	jle    0x14000513b
   14000510b:	mov    rcx,rax
   14000510e:	cmp    WORD PTR [rbx+rdx*2],0x3a
   140005113:	je     0x14000511c
   140005115:	cmp    WORD PTR [rbx+rdx*2],0x3d
   14000511a:	jne    0x140005128
   14000511c:	mov    eax,0x5c
   140005121:	mov    WORD PTR [rcx],ax
   140005124:	add    rcx,0x2
   140005128:	movzx  eax,WORD PTR [rbx+rdx*2]
   14000512c:	inc    rdx
   14000512f:	mov    WORD PTR [rcx],ax
   140005132:	add    rcx,0x2
   140005136:	cmp    rdx,rbp
   140005139:	jl     0x14000510e
   14000513b:	mov    rdx,rdi
   14000513e:	mov    rcx,rsi
   140005141:	call   0x1400082a8
   140005146:	mov    rbx,rax
   140005149:	test   rdi,rdi
   14000514c:	je     0x140005156
   14000514e:	mov    rcx,rdi
   140005151:	call   0x1400130a8
   140005156:	mov    rax,rbx
   140005159:	jmp    0x14000515d
   14000515b:	xor    eax,eax
   14000515d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005162:	mov    rbp,QWORD PTR [rsp+0x38]
   140005167:	mov    rsi,QWORD PTR [rsp+0x40]
   14000516c:	add    rsp,0x20
   140005170:	pop    rdi
   140005171:	ret    
   140005172:	int3   
   140005173:	int3   
   140005174:	int3   
   140005175:	int3   
   140005176:	int3   
   140005177:	int3   
   140005178:	int3   
   140005179:	int3   
   14000517a:	int3   
   14000517b:	int3   
   14000517c:	int3   
   14000517d:	int3   
   14000517e:	int3   
   14000517f:	int3   
   140005180:	mov    rdx,rcx
   140005183:	lea    rcx,[rip+0x34d5e]        # 0x140039ee8
   14000518a:	jmp    0x140005090
   14000518f:	int3   
   140005190:	int3   
   140005191:	int3   
   140005192:	int3   
   140005193:	int3   
   140005194:	int3   
   140005195:	int3   
   140005196:	int3   
   140005197:	int3   
   140005198:	int3   
   140005199:	int3   
   14000519a:	int3   
   14000519b:	int3   
   14000519c:	int3   
   14000519d:	int3   
   14000519e:	int3   
   14000519f:	int3   
   1400051a0:	mov    rdx,rcx
   1400051a3:	lea    rcx,[rip+0x34d86]        # 0x140039f30
   1400051aa:	jmp    0x140005090
   1400051af:	int3   
   1400051b0:	int3   
   1400051b1:	int3   
   1400051b2:	int3   
   1400051b3:	int3   
   1400051b4:	int3   
   1400051b5:	int3   
   1400051b6:	int3   
   1400051b7:	int3   
   1400051b8:	int3   
   1400051b9:	int3   
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	int3   
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	mov    rcx,QWORD PTR [rip+0x48cd9]        # 0x14004dea0
   1400051c7:	lea    rdx,[rip+0x34da2]        # 0x140039f70
   1400051ce:	jmp    0x1400082a8
   1400051d3:	int3   
   1400051d4:	int3   
   1400051d5:	int3   
   1400051d6:	int3   
   1400051d7:	int3   
   1400051d8:	int3   
   1400051d9:	int3   
   1400051da:	int3   
   1400051db:	int3   
   1400051dc:	int3   
   1400051dd:	int3   
   1400051de:	int3   
   1400051df:	int3   
   1400051e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400051e5:	push   rdi
   1400051e6:	sub    rsp,0x20
   1400051ea:	mov    ebx,ecx
   1400051ec:	lea    rcx,[rip+0x484ad]        # 0x14004d6a0
   1400051f3:	xor    edi,edi
   1400051f5:	xor    edx,edx
   1400051f7:	mov    r8d,0x7f8
   1400051fd:	mov    DWORD PTR [rip+0x48c95],edi        # 0x14004de98
   140005203:	call   0x140012fb0
   140005208:	lea    rdx,[rip+0x48c91]        # 0x14004dea0
   14000520f:	lea    rcx,[rip+0x340ea]        # 0x140039300
   140005216:	mov    r8d,ebx
   140005219:	call   0x1400046b0
   14000521e:	cmp    QWORD PTR [rip+0x48c7b],rdi        # 0x14004dea0
   140005225:	mov    rbx,QWORD PTR [rsp+0x30]
   14000522a:	setne  dil
   14000522e:	mov    eax,edi
   140005230:	add    rsp,0x20
   140005234:	pop    rdi
   140005235:	ret    
   140005236:	int3   
   140005237:	int3   
   140005238:	int3   
   140005239:	int3   
   14000523a:	int3   
   14000523b:	int3   
   14000523c:	int3   
   14000523d:	int3   
   14000523e:	int3   
   14000523f:	int3   
   140005240:	rex push rbx
   140005242:	sub    rsp,0xb0
   140005249:	mov    rax,QWORD PTR [rip+0x3a6e0]        # 0x14003f930
   140005250:	xor    rax,rsp
   140005253:	mov    QWORD PTR [rsp+0xa0],rax
   14000525b:	mov    QWORD PTR [rsp+0x28],rdx
   140005260:	mov    rbx,r8
   140005263:	mov    DWORD PTR [rsp+0x20],ecx
   140005267:	lea    rcx,[rsp+0x30]
   14000526c:	lea    r9,[rip+0x34375]        # 0x1400395e8
   140005273:	lea    r8,[rip+0x3443e]        # 0x1400396b8
   14000527a:	mov    edx,0x32
   14000527f:	call   0x14000a30c
   140005284:	mov    rcx,QWORD PTR [rip+0x48c15]        # 0x14004dea0
   14000528b:	lea    rdx,[rsp+0x30]
   140005290:	mov    r8,rbx
   140005293:	call   0x1400082e8
   140005298:	mov    QWORD PTR [rip+0x48c01],rax        # 0x14004dea0
   14000529f:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400052a7:	xor    rcx,rsp
   1400052aa:	call   0x140012670
   1400052af:	add    rsp,0xb0
   1400052b6:	pop    rbx
   1400052b7:	ret    
   1400052b8:	int3   
   1400052b9:	int3   
   1400052ba:	int3   
   1400052bb:	int3   
   1400052bc:	int3   
   1400052bd:	int3   
   1400052be:	int3   
   1400052bf:	int3   
   1400052c0:	mov    r8,rdx
   1400052c3:	lea    rdx,[rip+0x341fe]        # 0x1400394c8
   1400052ca:	jmp    0x140005240
   1400052cf:	int3   
   1400052d0:	int3   
   1400052d1:	int3   
   1400052d2:	int3   
   1400052d3:	int3   
   1400052d4:	int3   
   1400052d5:	int3   
   1400052d6:	int3   
   1400052d7:	int3   
   1400052d8:	int3   
   1400052d9:	int3   
   1400052da:	int3   
   1400052db:	int3   
   1400052dc:	int3   
   1400052dd:	int3   
   1400052de:	int3   
   1400052df:	int3   
   1400052e0:	mov    r8,rdx
   1400052e3:	lea    rdx,[rip+0x3432e]        # 0x140039618
   1400052ea:	jmp    0x140005240
   1400052ef:	int3   
   1400052f0:	int3   
   1400052f1:	int3   
   1400052f2:	int3   
   1400052f3:	int3   
   1400052f4:	int3   
   1400052f5:	int3   
   1400052f6:	int3   
   1400052f7:	int3   
   1400052f8:	int3   
   1400052f9:	int3   
   1400052fa:	int3   
   1400052fb:	int3   
   1400052fc:	int3   
   1400052fd:	int3   
   1400052fe:	int3   
   1400052ff:	int3   
   140005300:	mov    r8,rdx
   140005303:	lea    rdx,[rip+0x343be]        # 0x1400396c8
   14000530a:	jmp    0x140005240
   14000530f:	int3   
   140005310:	int3   
   140005311:	int3   
   140005312:	int3   
   140005313:	int3   
   140005314:	int3   
   140005315:	int3   
   140005316:	int3   
   140005317:	int3   
   140005318:	int3   
   140005319:	int3   
   14000531a:	int3   
   14000531b:	int3   
   14000531c:	int3   
   14000531d:	int3   
   14000531e:	int3   
   14000531f:	int3   
   140005320:	mov    r8,rdx
   140005323:	lea    rdx,[rip+0x3455e]        # 0x140039888
   14000532a:	jmp    0x140005240
   14000532f:	int3   
   140005330:	int3   
   140005331:	int3   
   140005332:	int3   
   140005333:	int3   
   140005334:	int3   
   140005335:	int3   
   140005336:	int3   
   140005337:	int3   
   140005338:	int3   
   140005339:	int3   
   14000533a:	int3   
   14000533b:	int3   
   14000533c:	int3   
   14000533d:	int3   
   14000533e:	int3   
   14000533f:	int3   
   140005340:	mov    r8,rdx
   140005343:	lea    rdx,[rip+0x3454e]        # 0x140039898
   14000534a:	jmp    0x140005240
   14000534f:	int3   
   140005350:	int3   
   140005351:	int3   
   140005352:	int3   
   140005353:	int3   
   140005354:	int3   
   140005355:	int3   
   140005356:	int3   
   140005357:	int3   
   140005358:	int3   
   140005359:	int3   
   14000535a:	int3   
   14000535b:	int3   
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	mov    r8,rdx
   140005363:	lea    rdx,[rip+0x345de]        # 0x140039948
   14000536a:	jmp    0x140005240
   14000536f:	int3   
   140005370:	int3   
   140005371:	int3   
   140005372:	int3   
   140005373:	int3   
   140005374:	int3   
   140005375:	int3   
   140005376:	int3   
   140005377:	int3   
   140005378:	int3   
   140005379:	int3   
   14000537a:	int3   
   14000537b:	int3   
   14000537c:	int3   
   14000537d:	int3   
   14000537e:	int3   
   14000537f:	int3   
   140005380:	mov    r8,rdx
   140005383:	lea    rdx,[rip+0x3451e]        # 0x1400398a8
   14000538a:	jmp    0x140005240
   14000538f:	int3   
   140005390:	int3   
   140005391:	int3   
   140005392:	int3   
   140005393:	int3   
   140005394:	int3   
   140005395:	int3   
   140005396:	int3   
   140005397:	int3   
   140005398:	int3   
   140005399:	int3   
   14000539a:	int3   
   14000539b:	int3   
   14000539c:	int3   
   14000539d:	int3   
   14000539e:	int3   
   14000539f:	int3   
   1400053a0:	mov    r8,rdx
   1400053a3:	lea    rdx,[rip+0x345ae]        # 0x140039958
   1400053aa:	jmp    0x140005240
   1400053af:	int3   
   1400053b0:	int3   
   1400053b1:	int3   
   1400053b2:	int3   
   1400053b3:	int3   
   1400053b4:	int3   
   1400053b5:	int3   
   1400053b6:	int3   
   1400053b7:	int3   
   1400053b8:	int3   
   1400053b9:	int3   
   1400053ba:	int3   
   1400053bb:	int3   
   1400053bc:	int3   
   1400053bd:	int3   
   1400053be:	int3   
   1400053bf:	int3   
   1400053c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400053c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400053ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400053cf:	push   rdi
   1400053d0:	push   r12
   1400053d2:	push   r13
   1400053d4:	sub    rsp,0x20
   1400053d8:	xor    esi,esi
   1400053da:	or     edi,0xffffffff
   1400053dd:	mov    r13d,r8d
   1400053e0:	cmp    DWORD PTR [rip+0x48ab2],esi        # 0x14004de98
   1400053e6:	jle    0x1400054f6
   1400053ec:	lea    rbp,[rip+0x482ad]        # 0x14004d6a0
   1400053f3:	mov    ebx,DWORD PTR [rbp+0x0]
   1400053f6:	lea    rdx,[rip+0x3470b]        # 0x140039b08
   1400053fd:	mov    ecx,ebx
   1400053ff:	call   0x140004ad0
   140005404:	test   rax,rax
   140005407:	jne    0x140005420
   140005409:	lea    rdx,[rip+0x34708]        # 0x140039b18
   140005410:	mov    ecx,ebx
   140005412:	call   0x140004ad0
   140005417:	test   rax,rax
   14000541a:	je     0x1400054b0
   140005420:	lea    rdx,[rip+0x346e1]        # 0x140039b08
   140005427:	mov    ecx,ebx
   140005429:	call   0x140004ad0
   14000542e:	test   rax,rax
   140005431:	je     0x1400054e4
   140005437:	lea    rdx,[rip+0x346da]        # 0x140039b18
   14000543e:	mov    ecx,ebx
   140005440:	call   0x140004ad0
   140005445:	test   rax,rax
   140005448:	je     0x1400054e4
   14000544e:	lea    rdx,[rip+0x346b3]        # 0x140039b08
   140005455:	mov    ecx,ebx
   140005457:	call   0x140004ad0
   14000545c:	mov    r12,rax
   14000545f:	call   0x14000a1ac
   140005464:	sub    r12,rax
   140005467:	movzx  ecx,WORD PTR [rax]
   14000546a:	movzx  edx,WORD PTR [rax+r12*1]
   14000546f:	sub    ecx,edx
   140005471:	jne    0x14000547b
   140005473:	add    rax,0x2
   140005477:	test   edx,edx
   140005479:	jne    0x140005467
   14000547b:	test   ecx,ecx
   14000547d:	jne    0x1400054e4
   14000547f:	lea    rdx,[rip+0x34692]        # 0x140039b18
   140005486:	mov    ecx,ebx
   140005488:	call   0x140004ad0
   14000548d:	mov    r12,rax
   140005490:	call   0x14000a1bc
   140005495:	sub    r12,rax
   140005498:	movzx  ecx,WORD PTR [rax]
   14000549b:	movzx  edx,WORD PTR [rax+r12*1]
   1400054a0:	sub    ecx,edx
   1400054a2:	jne    0x1400054ac
   1400054a4:	add    rax,0x2
   1400054a8:	test   edx,edx
   1400054aa:	jne    0x140005498
   1400054ac:	test   ecx,ecx
   1400054ae:	jne    0x1400054e4
   1400054b0:	lea    rdx,[rip+0x345e9]        # 0x140039aa0
   1400054b7:	mov    ecx,ebx
   1400054b9:	call   0x140004ad0
   1400054be:	test   rax,rax
   1400054c1:	je     0x1400054e4
   1400054c3:	lea    rdx,[rip+0x345ee]        # 0x140039ab8
   1400054ca:	mov    ecx,ebx
   1400054cc:	call   0x140004ad0
   1400054d1:	test   rax,rax
   1400054d4:	je     0x1400054e4
   1400054d6:	mov    r8d,r13d
   1400054d9:	mov    edx,ebx
   1400054db:	mov    ecx,edi
   1400054dd:	call   0x140004cf0
   1400054e2:	mov    edi,eax
   1400054e4:	inc    esi
   1400054e6:	add    rbp,0x8
   1400054ea:	cmp    esi,DWORD PTR [rip+0x489a8]        # 0x14004de98
   1400054f0:	jl     0x1400053f3
   1400054f6:	test   r13d,r13d
   1400054f9:	je     0x14000551a
   1400054fb:	lea    rdx,[rip+0x345f6]        # 0x140039af8
   140005502:	mov    ecx,edi
   140005504:	call   0x140004ad0
   140005509:	lea    rcx,[rip+0x346b0]        # 0x140039bc0
   140005510:	mov    edx,edi
   140005512:	mov    r8,rax
   140005515:	call   0x1400145d4
   14000551a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000551f:	mov    rbp,QWORD PTR [rsp+0x48]
   140005524:	mov    rsi,QWORD PTR [rsp+0x50]
   140005529:	mov    eax,edi
   14000552b:	add    rsp,0x20
   14000552f:	pop    r13
   140005531:	pop    r12
   140005533:	pop    rdi
   140005534:	ret    
   140005535:	int3   
   140005536:	int3   
   140005537:	int3   
   140005538:	int3   
   140005539:	int3   
   14000553a:	int3   
   14000553b:	int3   
   14000553c:	int3   
   14000553d:	int3   
   14000553e:	int3   
   14000553f:	int3   
   140005540:	mov    QWORD PTR [rsp+0x8],rbx
   140005545:	mov    QWORD PTR [rsp+0x10],rbp
   14000554a:	mov    QWORD PTR [rsp+0x18],rsi
   14000554f:	push   rdi
   140005550:	push   r12
   140005552:	push   r13
   140005554:	push   r14
   140005556:	push   r15
   140005558:	mov    eax,0x3030
   14000555d:	call   0x140012f50
   140005562:	sub    rsp,rax
   140005565:	mov    rax,QWORD PTR [rip+0x3a3c4]        # 0x14003f930
   14000556c:	xor    rax,rsp
   14000556f:	mov    QWORD PTR [rsp+0x3020],rax
   140005577:	and    DWORD PTR [rsp+0x30],0x0
   14000557c:	mov    r12d,ecx
   14000557f:	xor    ebp,ebp
   140005581:	lea    rcx,[rsp+0x50]
   140005586:	xor    edx,edx
   140005588:	mov    r8d,0x2fd0
   14000558e:	mov    DWORD PTR [rsp+0x20],ebp
   140005592:	lea    edi,[rbp+0x1]
   140005595:	call   0x140012fb0
   14000559a:	lea    rdx,[rsp+0x30]
   14000559f:	lea    rcx,[rsp+0x50]
   1400055a4:	call   0x14000b1fc
   1400055a9:	mov    r11d,DWORD PTR [rsp+0x30]
   1400055ae:	test   r11d,r11d
   1400055b1:	jne    0x1400055b7
   1400055b3:	xor    edi,edi
   1400055b5:	jmp    0x1400055c7
   1400055b7:	cmp    r11d,edi
   1400055ba:	jne    0x1400055c7
   1400055bc:	xor    edi,edi
   1400055be:	cmp    QWORD PTR [rsp+0x58],rdi
   1400055c3:	setne  dil
   1400055c7:	xor    r14d,r14d
   1400055ca:	movsxd rdi,edi
   1400055cd:	lea    r15,[rip+0x480d0]        # 0x14004d6a4
   1400055d4:	mov    DWORD PTR [rsp+0x34],r14d
   1400055d9:	mov    QWORD PTR [rsp+0x28],rdi
   1400055de:	test   r11d,r11d
   1400055e1:	jle    0x1400058a3
   1400055e7:	lea    rbx,[rsp+0x58]
   1400055ec:	mov    rcx,QWORD PTR [rbx+0x10]
   1400055f0:	and    DWORD PTR [rsp+0x3c],0x0
   1400055f5:	call   0x14000a4ec
   1400055fa:	mov    rcx,rax
   1400055fd:	mov    rsi,rax
   140005600:	mov    QWORD PTR [rsp+0x48],rax
   140005605:	call   0x140004640
   14000560a:	mov    r13,rax
   14000560d:	test   rdi,rdi
   140005610:	jne    0x140005621
   140005612:	mov    rcx,rax
   140005615:	call   0x1400130e8
   14000561a:	mov    QWORD PTR [rip+0x48887],rax        # 0x14004dea8
   140005621:	and    DWORD PTR [rsp+0x38],0x0
   140005626:	cmp    DWORD PTR [rip+0x4886b],0x0        # 0x14004de98
   14000562d:	jle    0x140005717
   140005633:	mov    esi,DWORD PTR [r15-0x4]
   140005637:	lea    rdx,[rip+0x344ba]        # 0x140039af8
   14000563e:	mov    ecx,esi
   140005640:	call   0x140004ad0
   140005645:	lea    rdx,[rip+0x344bc]        # 0x140039b08
   14000564c:	mov    ecx,esi
   14000564e:	mov    rdi,rax
   140005651:	call   0x140004ad0
   140005656:	lea    rdx,[rip+0x344bb]        # 0x140039b18
   14000565d:	mov    ecx,esi
   14000565f:	mov    rbp,rax
   140005662:	call   0x140004ad0
   140005667:	mov    r14,rax
   14000566a:	test   rdi,rdi
   14000566d:	je     0x140005b32
   140005673:	mov    rdx,r13
   140005676:	mov    rcx,rdi
   140005679:	call   0x1400147a4
   14000567e:	test   eax,eax
   140005680:	jne    0x140005b32
   140005686:	test   r12d,r12d
   140005689:	je     0x14000569f
   14000568b:	lea    rcx,[rip+0x33e4e]        # 0x1400394e0
   140005692:	mov    r9,r13
   140005695:	mov    r8,rdi
   140005698:	mov    edx,esi
   14000569a:	call   0x1400145d4
   14000569f:	test   rbp,rbp
   1400056a2:	je     0x140005927
   1400056a8:	mov    rdx,QWORD PTR [rbx+0x18]
   1400056ac:	mov    rcx,rbp
   1400056af:	call   0x1400147a4
   1400056b4:	test   eax,eax
   1400056b6:	je     0x140005927
   1400056bc:	test   r12d,r12d
   1400056bf:	je     0x1400056e3
   1400056c1:	cmp    QWORD PTR [rbx+0x18],0x0
   1400056c6:	lea    r9,[rip+0x3419b]        # 0x140039868
   1400056cd:	mov    r8,rbp
   1400056d0:	cmovne r9,QWORD PTR [rbx+0x18]
   1400056d5:	lea    rcx,[rip+0x341e4]        # 0x1400398c0
   1400056dc:	mov    edx,esi
   1400056de:	call   0x1400145d4
   1400056e3:	mov    rdi,QWORD PTR [rsp+0x28]
   1400056e8:	mov    ebp,DWORD PTR [rsp+0x20]
   1400056ec:	mov    eax,DWORD PTR [rsp+0x38]
   1400056f0:	add    r15,0x8
   1400056f4:	inc    eax
   1400056f6:	cmp    eax,DWORD PTR [rip+0x4879c]        # 0x14004de98
   1400056fc:	mov    DWORD PTR [rsp+0x38],eax
   140005700:	jl     0x140005633
   140005706:	mov    r14d,DWORD PTR [rsp+0x34]
   14000570b:	mov    rsi,QWORD PTR [rsp+0x48]
   140005710:	lea    r15,[rip+0x47f8d]        # 0x14004d6a4
   140005717:	test   r13,r13
   14000571a:	je     0x140005724
   14000571c:	mov    rcx,r13
   14000571f:	call   0x1400130a8
   140005724:	test   rsi,rsi
   140005727:	je     0x140005731
   140005729:	mov    rcx,rsi
   14000572c:	call   0x1400130a8
   140005731:	cmp    DWORD PTR [rsp+0x3c],0x0
   140005736:	jne    0x140005887
   14000573c:	call   0x140004a00
   140005741:	mov    esi,eax
   140005743:	movsxd rax,r14d
   140005746:	lea    rcx,[rax+rax*2]
   14000574a:	add    rcx,rcx
   14000574d:	lea    rcx,[rsp+rcx*8+0x50]
   140005752:	call   0x140004760
   140005757:	mov    r8,QWORD PTR [rbx-0x8]
   14000575b:	test   r8,r8
   14000575e:	je     0x140005887
   140005764:	cmp    QWORD PTR [rbx],0x0
   140005768:	je     0x140005887
   14000576e:	cmp    QWORD PTR [rbx+0x8],0x0
   140005773:	je     0x140005887
   140005779:	cmp    QWORD PTR [rbx+0x18],0x0
   14000577e:	je     0x140005887
   140005784:	cmp    QWORD PTR [rbx+0x20],0x0
   140005789:	je     0x140005887
   14000578f:	movsxd rcx,DWORD PTR [rip+0x48702]        # 0x14004de98
   140005796:	lea    rdx,[rip+0x47f03]        # 0x14004d6a0
   14000579d:	mov    DWORD PTR [rdx+rcx*8],esi
   1400057a0:	mov    DWORD PTR [rdx+rcx*8+0x4],0x1
   1400057a8:	inc    ecx
   1400057aa:	mov    DWORD PTR [rip+0x486e8],ecx        # 0x14004de98
   1400057b0:	lea    rdx,[rip+0x33d11]        # 0x1400394c8
   1400057b7:	mov    ecx,esi
   1400057b9:	call   0x140005240
   1400057be:	mov    r8,QWORD PTR [rbx]
   1400057c1:	lea    rdx,[rip+0x33e50]        # 0x140039618
   1400057c8:	mov    ecx,esi
   1400057ca:	call   0x140005240
   1400057cf:	mov    r8,QWORD PTR [rbx+0x8]
   1400057d3:	lea    rdx,[rip+0x33eee]        # 0x1400396c8
   1400057da:	mov    ecx,esi
   1400057dc:	call   0x140005240
   1400057e1:	mov    r8,QWORD PTR [rbx+0x10]
   1400057e5:	lea    rdx,[rip+0x3409c]        # 0x140039888
   1400057ec:	mov    ecx,esi
   1400057ee:	call   0x140005240
   1400057f3:	mov    r8,QWORD PTR [rbx+0x18]
   1400057f7:	lea    rdx,[rip+0x3409a]        # 0x140039898
   1400057fe:	mov    ecx,esi
   140005800:	call   0x140005240
   140005805:	mov    r8,QWORD PTR [rbx+0x20]
   140005809:	lea    rdx,[rip+0x34138]        # 0x140039948
   140005810:	mov    ecx,esi
   140005812:	call   0x140005240
   140005817:	lea    r8,[rip+0x341b2]        # 0x1400399d0
   14000581e:	lea    rdx,[rip+0x34083]        # 0x1400398a8
   140005825:	mov    ecx,esi
   140005827:	call   0x140005240
   14000582c:	lea    rdx,[rip+0x34125]        # 0x140039958
   140005833:	mov    ecx,esi
   140005835:	lea    r8,[rip+0x341a4]        # 0x1400399e0
   14000583c:	test   rdi,rdi
   14000583f:	jne    0x140005848
   140005841:	lea    r8,[rip+0x33d90]        # 0x1400395d8
   140005848:	call   0x140005240
   14000584d:	mov    ebp,0x1
   140005852:	mov    DWORD PTR [rsp+0x20],ebp
   140005856:	test   r12d,r12d
   140005859:	je     0x140005887
   14000585b:	cmp    QWORD PTR [rbx+0x10],0x0
   140005860:	lea    rdi,[rip+0x34189]        # 0x1400399f0
   140005867:	mov    ecx,esi
   140005869:	cmovne rdi,QWORD PTR [rbx+0x10]
   14000586e:	call   0x140004c70
   140005873:	lea    rcx,[rip+0x34186]        # 0x140039a00
   14000587a:	mov    r9d,eax
   14000587d:	mov    r8,rdi
   140005880:	mov    edx,esi
   140005882:	call   0x1400145d4
   140005887:	mov    rdi,QWORD PTR [rsp+0x28]
   14000588c:	inc    r14d
   14000588f:	add    rbx,0x30
   140005893:	mov    DWORD PTR [rsp+0x34],r14d
   140005898:	cmp    r14d,DWORD PTR [rsp+0x30]
   14000589d:	jl     0x1400055ec
   1400058a3:	xor    edi,edi
   1400058a5:	cmp    DWORD PTR [rip+0x485ed],edi        # 0x14004de98
   1400058ab:	jle    0x1400058f4
   1400058ad:	mov    r14,QWORD PTR [rsp+0x28]
   1400058b2:	mov    ebx,DWORD PTR [r15-0x4]
   1400058b6:	mov    ecx,ebx
   1400058b8:	call   0x140004c70
   1400058bd:	test   eax,eax
   1400058bf:	je     0x1400058e6
   1400058c1:	cmp    DWORD PTR [r15],0x0
   1400058c5:	jne    0x1400058e6
   1400058c7:	test   r14,r14
   1400058ca:	jne    0x1400058e1
   1400058cc:	lea    r8,[rip+0x33dd5]        # 0x1400396a8
   1400058d3:	lea    rdx,[rip+0x3407e]        # 0x140039958
   1400058da:	mov    ecx,ebx
   1400058dc:	call   0x140005240
   1400058e1:	mov    ebp,0x1
   1400058e6:	inc    edi
   1400058e8:	add    r15,0x8
   1400058ec:	cmp    edi,DWORD PTR [rip+0x485a6]        # 0x14004de98
   1400058f2:	jl     0x1400058b2
   1400058f4:	mov    eax,ebp
   1400058f6:	mov    rcx,QWORD PTR [rsp+0x3020]
   1400058fe:	xor    rcx,rsp
   140005901:	call   0x140012670
   140005906:	lea    r11,[rsp+0x3030]
   14000590e:	mov    rbx,QWORD PTR [r11+0x30]
   140005912:	mov    rbp,QWORD PTR [r11+0x38]
   140005916:	mov    rsi,QWORD PTR [r11+0x40]
   14000591a:	mov    rsp,r11
   14000591d:	pop    r15
   14000591f:	pop    r14
   140005921:	pop    r13
   140005923:	pop    r12
   140005925:	pop    rdi
   140005926:	ret    
   140005927:	test   r12d,r12d
   14000592a:	je     0x14000595c
   14000592c:	cmp    QWORD PTR [rbx+0x18],0x0
   140005931:	lea    rax,[rip+0x33c08]        # 0x140039540
   140005938:	lea    r9,[rip+0x33bf1]        # 0x140039530
   14000593f:	cmovne r9,QWORD PTR [rbx+0x18]
   140005944:	test   rbp,rbp
   140005947:	mov    r8,rbp
   14000594a:	lea    rcx,[rip+0x33bff]        # 0x140039550
   140005951:	mov    edx,esi
   140005953:	cmove  r8,rax
   140005957:	call   0x1400145d4
   14000595c:	test   r14,r14
   14000595f:	je     0x1400059c9
   140005961:	test   rbp,rbp
   140005964:	je     0x140005990
   140005966:	or     rcx,0xffffffffffffffff
   14000596a:	xor    eax,eax
   14000596c:	lea    rdi,[rip+0x33c35]        # 0x1400395a8
   140005973:	repnz scas ax,WORD PTR es:[rdi]
   140005976:	lea    rdx,[rip+0x33c3b]        # 0x1400395b8
   14000597d:	not    rcx
   140005980:	lea    r8,[rcx-0x1]
   140005984:	mov    rcx,rbp
   140005987:	call   0x140013790
   14000598c:	test   eax,eax
   14000598e:	jne    0x1400059c9
   140005990:	mov    rdx,QWORD PTR [rbx+0x20]
   140005994:	mov    rcx,r14
   140005997:	call   0x1400147a4
   14000599c:	test   eax,eax
   14000599e:	je     0x1400059c9
   1400059a0:	test   r12d,r12d
   1400059a3:	je     0x1400056e3
   1400059a9:	cmp    QWORD PTR [rbx+0x20],0x0
   1400059ae:	lea    r9,[rip+0x33e2b]        # 0x1400397e0
   1400059b5:	mov    r8,r14
   1400059b8:	cmovne r9,QWORD PTR [rbx+0x20]
   1400059bd:	lea    rcx,[rip+0x33e3c]        # 0x140039800
   1400059c4:	jmp    0x1400056dc
   1400059c9:	test   r12d,r12d
   1400059cc:	je     0x1400059f0
   1400059ce:	cmp    QWORD PTR [rbx+0x20],0x0
   1400059d3:	lea    r9,[rip+0x33bee]        # 0x1400395c8
   1400059da:	lea    rcx,[rip+0x33c4f]        # 0x140039630
   1400059e1:	cmovne r9,QWORD PTR [rbx+0x20]
   1400059e6:	mov    r8,r14
   1400059e9:	mov    edx,esi
   1400059eb:	call   0x1400145d4
   1400059f0:	mov    r14,QWORD PTR [rsp+0x28]
   1400059f5:	lea    rbp,[rip+0x340bc]        # 0x140039ab8
   1400059fc:	test   r14,r14
   1400059ff:	je     0x140005a9b
   140005a05:	mov    rdx,rbp
   140005a08:	mov    ecx,esi
   140005a0a:	call   0x140004ad0
   140005a0f:	test   rax,rax
   140005a12:	je     0x140005a49
   140005a14:	cmp    QWORD PTR [rbx],0x0
   140005a18:	je     0x140005a49
   140005a1a:	mov    rdx,rbp
   140005a1d:	mov    ecx,esi
   140005a1f:	call   0x140004ad0
   140005a24:	mov    rdi,QWORD PTR [rbx]
   140005a27:	mov    rdx,QWORD PTR [rbx]
   140005a2a:	or     rcx,0xffffffffffffffff
   140005a2e:	mov    r11,rax
   140005a31:	xor    eax,eax
   140005a33:	repnz scas ax,WORD PTR es:[rdi]
   140005a36:	not    rcx
   140005a39:	lea    r8,[rcx-0x1]
   140005a3d:	mov    rcx,r11
   140005a40:	call   0x140014944
   140005a45:	test   eax,eax
   140005a47:	je     0x140005a9b
   140005a49:	test   r12d,r12d
   140005a4c:	je     0x140005a93
   140005a4e:	cmp    QWORD PTR [rbx],0x0
   140005a52:	lea    rdi,[rip+0x33cf7]        # 0x140039750
   140005a59:	mov    rdx,rbp
   140005a5c:	cmovne rdi,QWORD PTR [rbx]
   140005a60:	mov    ecx,esi
   140005a62:	call   0x140004ad0
   140005a67:	test   rax,rax
   140005a6a:	jne    0x140005a75
   140005a6c:	lea    rax,[rip+0x33ced]        # 0x140039760
   140005a73:	jmp    0x140005a7f
   140005a75:	mov    rdx,rbp
   140005a78:	mov    ecx,esi
   140005a7a:	call   0x140004ad0
   140005a7f:	lea    rcx,[rip+0x33cea]        # 0x140039770
   140005a86:	mov    r9,rdi
   140005a89:	mov    r8,rax
   140005a8c:	mov    edx,esi
   140005a8e:	call   0x1400145d4
   140005a93:	mov    rdi,r14
   140005a96:	jmp    0x1400056e8
   140005a9b:	test   r12d,r12d
   140005a9e:	je     0x140005ae5
   140005aa0:	cmp    QWORD PTR [rbx],0x0
   140005aa4:	lea    rdi,[rip+0x33bdd]        # 0x140039688
   140005aab:	mov    rdx,rbp
   140005aae:	cmovne rdi,QWORD PTR [rbx]
   140005ab2:	mov    ecx,esi
   140005ab4:	call   0x140004ad0
   140005ab9:	test   rax,rax
   140005abc:	jne    0x140005ac7
   140005abe:	lea    rax,[rip+0x33bd3]        # 0x140039698
   140005ac5:	jmp    0x140005ad1
   140005ac7:	mov    rdx,rbp
   140005aca:	mov    ecx,esi
   140005acc:	call   0x140004ad0
   140005ad1:	lea    rcx,[rip+0x33c08]        # 0x1400396e0
   140005ad8:	mov    r9,rdi
   140005adb:	mov    r8,rax
   140005ade:	mov    edx,esi
   140005ae0:	call   0x1400145d4
   140005ae5:	mov    ecx,esi
   140005ae7:	mov    DWORD PTR [rsp+0x3c],0x1
   140005aef:	mov    DWORD PTR [r15],0x1
   140005af6:	call   0x140004c70
   140005afb:	mov    rdi,r14
   140005afe:	test   eax,eax
   140005b00:	jne    0x1400056e8
   140005b06:	test   r14,r14
   140005b09:	je     0x1400056e8
   140005b0f:	lea    r8,[rip+0x33c2a]        # 0x140039740
   140005b16:	lea    rdx,[rip+0x33e3b]        # 0x140039958
   140005b1d:	mov    ecx,esi
   140005b1f:	call   0x140005240
   140005b24:	mov    ebp,0x1
   140005b29:	mov    DWORD PTR [rsp+0x20],ebp
   140005b2d:	jmp    0x1400056ec
   140005b32:	test   r12d,r12d
   140005b35:	je     0x1400056e3
   140005b3b:	lea    rax,[rip+0x33de6]        # 0x140039928
   140005b42:	test   r13,r13
   140005b45:	mov    r9,r13
   140005b48:	cmove  r9,rax
   140005b4c:	lea    rax,[rip+0x33de5]        # 0x140039938
   140005b53:	test   rdi,rdi
   140005b56:	cmove  rdi,rax
   140005b5a:	lea    rcx,[rip+0x33e0f]        # 0x140039970
   140005b61:	mov    r8,rdi
   140005b64:	jmp    0x1400056dc
   140005b69:	int3   
   140005b6a:	int3   
   140005b6b:	int3   
   140005b6c:	mov    QWORD PTR [rsp+0x8],rbx
   140005b71:	push   rdi
   140005b72:	sub    rsp,0x20
   140005b76:	cmp    DWORD PTR [rcx+0x40],0x14
   140005b7a:	mov    edi,r8d
   140005b7d:	mov    rbx,rcx
   140005b80:	jge    0x140005ba9
   140005b82:	mov    rcx,rdx
   140005b85:	call   0x1400092e8
   140005b8a:	movsxd rdx,DWORD PTR [rbx+0x40]
   140005b8e:	mov    QWORD PTR [rbx+rdx*8+0x48],rax
   140005b93:	inc    DWORD PTR [rbx+0x40]
   140005b96:	test   edi,edi
   140005b98:	je     0x140005ba9
   140005b9a:	lea    rcx,[rip+0x34417]        # 0x140039fb8
   140005ba1:	mov    rdx,rax
   140005ba4:	call   0x1400145d4
   140005ba9:	mov    rbx,QWORD PTR [rsp+0x30]
   140005bae:	add    rsp,0x20
   140005bb2:	pop    rdi
   140005bb3:	ret    
   140005bb4:	int3   
   140005bb5:	int3   
   140005bb6:	int3   
   140005bb7:	int3   
   140005bb8:	int3   
   140005bb9:	int3   
   140005bba:	int3   
   140005bbb:	int3   
   140005bbc:	mov    rax,rsp
   140005bbf:	mov    QWORD PTR [rax+0x8],rbx
   140005bc3:	mov    DWORD PTR [rax+0x20],r9d
   140005bc7:	mov    DWORD PTR [rax+0x18],r8d
   140005bcb:	mov    QWORD PTR [rax+0x10],rdx
   140005bcf:	push   rbp
   140005bd0:	push   rsi
   140005bd1:	push   rdi
   140005bd2:	push   r12
   140005bd4:	push   r13
   140005bd6:	push   r14
   140005bd8:	push   r15
   140005bda:	sub    rsp,0x30
   140005bde:	mov    r12,rcx
   140005be1:	or     rcx,0xffffffffffffffff
   140005be5:	xor    eax,eax
   140005be7:	mov    rdi,r12
   140005bea:	mov    r15,rdx
   140005bed:	repnz scas ax,WORD PTR es:[rdi]
   140005bf0:	not    rcx
   140005bf3:	dec    rcx
   140005bf6:	mov    r14,rcx
   140005bf9:	mov    QWORD PTR [rsp+0x20],rcx
   140005bfe:	test   r14d,r14d
   140005c01:	jle    0x140005d80
   140005c07:	lea    eax,[r14+0x1]
   140005c0b:	movsxd rcx,eax
   140005c0e:	add    rcx,rcx
   140005c11:	call   0x140013298
   140005c16:	xor    edx,edx
   140005c18:	mov    rbx,rax
   140005c1b:	test   rax,rax
   140005c1e:	je     0x140005d80
   140005c24:	mov    edi,edx
   140005c26:	movsxd rbp,r14d
   140005c29:	lea    r8d,[rdx+0x20]
   140005c2d:	test   r14d,r14d
   140005c30:	jle    0x140005c65
   140005c32:	mov    r14d,r8d
   140005c35:	movzx  ecx,WORD PTR [r12+rdi*2]
   140005c3a:	mov    edx,0x8
   140005c3f:	call   0x140013350
   140005c44:	test   eax,eax
   140005c46:	je     0x140005c4d
   140005c48:	mov    WORD PTR [r12+rdi*2],r14w
   140005c4d:	inc    rdi
   140005c50:	cmp    rdi,rbp
   140005c53:	jl     0x140005c35
   140005c55:	mov    r14,QWORD PTR [rsp+0x20]
   140005c5a:	mov    r15,QWORD PTR [rsp+0x78]
   140005c5f:	xor    edx,edx
   140005c61:	lea    r8d,[rdx+0x20]
   140005c65:	mov    r13d,edx
   140005c68:	mov    rsi,rdx
   140005c6b:	mov    rcx,rdx
   140005c6e:	test   rbp,rbp
   140005c71:	jle    0x140005d78
   140005c77:	movzx  eax,WORD PTR [r12+rsi*2]
   140005c7c:	cmp    ax,r8w
   140005c80:	je     0x140005c89
   140005c82:	mov    WORD PTR [rbx+rcx*2],ax
   140005c86:	inc    rcx
   140005c89:	cmp    WORD PTR [r12+rsi*2],r8w
   140005c8e:	je     0x140005c9d
   140005c90:	lea    eax,[r14-0x1]
   140005c94:	cmp    r13d,eax
   140005c97:	jne    0x140005d69
   140005c9d:	test   rcx,rcx
   140005ca0:	jle    0x140005d69
   140005ca6:	mov    WORD PTR [rbx+rcx*2],dx
   140005caa:	cmp    DWORD PTR [rsp+0x80],edx
   140005cb1:	je     0x140005d3d
   140005cb7:	or     rcx,0xffffffffffffffff
   140005cbb:	xor    eax,eax
   140005cbd:	lea    rdi,[rip+0x3432c]        # 0x140039ff0
   140005cc4:	repnz scas ax,WORD PTR es:[rdi]
   140005cc7:	lea    rdx,[rip+0x3433a]        # 0x14003a008
   140005cce:	not    rcx
   140005cd1:	dec    rcx
   140005cd4:	movsxd r8,ecx
   140005cd7:	mov    rcx,rbx
   140005cda:	call   0x140013790
   140005cdf:	xor    ecx,ecx
   140005ce1:	test   eax,eax
   140005ce3:	jne    0x140005d3d
   140005ce5:	cmp    QWORD PTR [r15+0x190],rcx
   140005cec:	jne    0x140005d3d
   140005cee:	or     r8,0xffffffffffffffff
   140005cf2:	xor    eax,eax
   140005cf4:	mov    rdi,rbx
   140005cf7:	mov    rcx,r8
   140005cfa:	repnz scas ax,WORD PTR es:[rdi]
   140005cfd:	lea    rdi,[rip+0x3431c]        # 0x14003a020
   140005d04:	not    rcx
   140005d07:	lea    rdx,[rcx-0x1]
   140005d0b:	mov    rcx,r8
   140005d0e:	repnz scas ax,WORD PTR es:[rdi]
   140005d11:	not    rcx
   140005d14:	dec    rcx
   140005d17:	cmp    rdx,rcx
   140005d1a:	jbe    0x140005d3d
   140005d1c:	mov    rcx,r8
   140005d1f:	lea    rdi,[rip+0x34312]        # 0x14003a038
   140005d26:	repnz scas ax,WORD PTR es:[rdi]
   140005d29:	not    rcx
   140005d2c:	lea    rcx,[rbx+rcx*2-0x2]
   140005d31:	call   0x1400130e8
   140005d36:	mov    QWORD PTR [r15+0x190],rax
   140005d3d:	mov    rcx,rbx
   140005d40:	call   0x14000cc9c
   140005d45:	xor    edx,edx
   140005d47:	test   eax,eax
   140005d49:	je     0x140005d60
   140005d4b:	mov    r8d,DWORD PTR [rsp+0x88]
   140005d53:	mov    rdx,rbx
   140005d56:	mov    rcx,r15
   140005d59:	call   0x140005b6c
   140005d5e:	xor    edx,edx
   140005d60:	mov    rcx,rdx
   140005d63:	mov    r8d,0x20
   140005d69:	inc    rsi
   140005d6c:	inc    r13d
   140005d6f:	cmp    rsi,rbp
   140005d72:	jl     0x140005c77
   140005d78:	mov    rcx,rbx
   140005d7b:	call   0x1400130a8
   140005d80:	mov    rbx,QWORD PTR [rsp+0x70]
   140005d85:	add    rsp,0x30
   140005d89:	pop    r15
   140005d8b:	pop    r14
   140005d8d:	pop    r13
   140005d8f:	pop    r12
   140005d91:	pop    rdi
   140005d92:	pop    rsi
   140005d93:	pop    rbp
   140005d94:	ret    
   140005d95:	int3   
   140005d96:	int3   
   140005d97:	int3   
   140005d98:	int3   
   140005d99:	int3   
   140005d9a:	int3   
   140005d9b:	int3   
   140005d9c:	mov    QWORD PTR [rsp+0x8],rbx
   140005da1:	push   rdi
   140005da2:	sub    rsp,0x20
   140005da6:	mov    rbx,rcx
   140005da9:	test   rcx,rcx
   140005dac:	jne    0x140005db2
   140005dae:	xor    eax,eax
   140005db0:	jmp    0x140005e25
   140005db2:	mov    rcx,QWORD PTR [rcx+0x20]
   140005db6:	lea    rdx,[rip+0x3439f]        # 0x14003a15c
   140005dbd:	call   0x14000740c
   140005dc2:	mov    rdi,rax
   140005dc5:	test   rax,rax
   140005dc8:	je     0x140005de9
   140005dca:	call   0x14000a1ac
   140005dcf:	sub    rax,rdi
   140005dd2:	movzx  ecx,WORD PTR [rdi]
   140005dd5:	movzx  edx,WORD PTR [rdi+rax*1]
   140005dd9:	sub    ecx,edx
   140005ddb:	jne    0x140005de5
   140005ddd:	add    rdi,0x2
   140005de1:	test   edx,edx
   140005de3:	jne    0x140005dd2
   140005de5:	test   ecx,ecx
   140005de7:	jne    0x140005dae
   140005de9:	mov    rcx,QWORD PTR [rbx+0x20]
   140005ded:	lea    rdx,[rip+0x34374]        # 0x14003a168
   140005df4:	call   0x14000740c
   140005df9:	mov    rbx,rax
   140005dfc:	test   rax,rax
   140005dff:	je     0x140005e20
   140005e01:	call   0x14000a1bc
   140005e06:	sub    rax,rbx
   140005e09:	movzx  ecx,WORD PTR [rbx]
   140005e0c:	movzx  edx,WORD PTR [rbx+rax*1]
   140005e10:	sub    ecx,edx
   140005e12:	jne    0x140005e1c
   140005e14:	add    rbx,0x2
   140005e18:	test   edx,edx
   140005e1a:	jne    0x140005e09
   140005e1c:	test   ecx,ecx
   140005e1e:	jne    0x140005dae
   140005e20:	mov    eax,0x1
   140005e25:	mov    rbx,QWORD PTR [rsp+0x30]
   140005e2a:	add    rsp,0x20
   140005e2e:	pop    rdi
   140005e2f:	ret    
   140005e30:	int3   
   140005e31:	int3   
   140005e32:	int3   
   140005e33:	int3   
   140005e34:	int3   
   140005e35:	int3   
   140005e36:	int3   
   140005e37:	int3   
   140005e38:	int3   
   140005e39:	int3   
   140005e3a:	int3   
   140005e3b:	int3   
   140005e3c:	mov    QWORD PTR [rsp+0x8],rbx
   140005e41:	mov    DWORD PTR [rsp+0x18],r8d
   140005e46:	push   rbp
   140005e47:	push   rsi
   140005e48:	push   rdi
   140005e49:	push   r12
   140005e4b:	push   r13
   140005e4d:	push   r14
   140005e4f:	push   r15
   140005e51:	sub    rsp,0x40
   140005e55:	xor    ebp,ebp
   140005e57:	mov    r12d,r8d
   140005e5a:	mov    rbx,rdx
   140005e5d:	mov    edi,ebp
   140005e5f:	mov    QWORD PTR [rsp+0x88],rbp
   140005e67:	mov    r15d,ebp
   140005e6a:	mov    QWORD PTR [rsp+0x98],rbp
   140005e72:	mov    QWORD PTR [rdx],rbp
   140005e75:	mov    QWORD PTR [rdx+0x8],rbp
   140005e79:	mov    DWORD PTR [rdx+0x10],ebp
   140005e7c:	mov    QWORD PTR [rdx+0x18],rbp
   140005e80:	mov    QWORD PTR [rdx+0x28],rbp
   140005e84:	call   0x140007afc
   140005e89:	mov    QWORD PTR [rsp+0x30],rax
   140005e8e:	test   rax,rax
   140005e91:	je     0x1400066bd
   140005e97:	lea    rdx,[rip+0x342da]        # 0x14003a178
   140005e9e:	mov    rcx,rax
   140005ea1:	call   0x1400073bc
   140005ea6:	mov    r14,rax
   140005ea9:	mov    QWORD PTR [rsp+0x38],rax
   140005eae:	test   rax,rax
   140005eb1:	je     0x14000669b
   140005eb7:	mov    rcx,QWORD PTR [rax+0x20]
   140005ebb:	lea    rdx,[rip+0x342c6]        # 0x14003a188
   140005ec2:	call   0x14000740c
   140005ec7:	mov    rcx,QWORD PTR [r14+0x20]
   140005ecb:	lea    rdx,[rip+0x342ce]        # 0x14003a1a0
   140005ed2:	mov    r13,rax
   140005ed5:	call   0x14000740c
   140005eda:	mov    rsi,rax
   140005edd:	test   r13,r13
   140005ee0:	je     0x140006010
   140005ee6:	test   rax,rax
   140005ee9:	je     0x140006010
   140005eef:	lea    rdx,[rip+0x342ba]        # 0x14003a1b0
   140005ef6:	mov    rcx,rax
   140005ef9:	call   0x140013160
   140005efe:	cmp    rax,rsi
   140005f01:	jne    0x140005f18
   140005f03:	mov    rcx,rsi
   140005f06:	call   0x1400130e8
   140005f0b:	or     r8,0xffffffffffffffff
   140005f0f:	mov    QWORD PTR [rbx+0x20],rax
   140005f13:	jmp    0x140005fd0
   140005f18:	or     r8,0xffffffffffffffff
   140005f1c:	xor    eax,eax
   140005f1e:	mov    rdi,rsi
   140005f21:	mov    rcx,r8
   140005f24:	repnz scas ax,WORD PTR es:[rdi]
   140005f27:	mov    rdi,r13
   140005f2a:	not    rcx
   140005f2d:	lea    rdx,[rcx-0x1]
   140005f31:	mov    rcx,r8
   140005f34:	repnz scas ax,WORD PTR es:[rdi]
   140005f37:	not    rcx
   140005f3a:	dec    rcx
   140005f3d:	add    rdx,rcx
   140005f40:	lea    rcx,[rdx+rdx*1+0x4]
   140005f45:	call   0x140013298
   140005f4a:	mov    rdx,rax
   140005f4d:	mov    QWORD PTR [rbx+0x20],rax
   140005f51:	test   rax,rax
   140005f54:	je     0x1400066d8
   140005f5a:	mov    rcx,r13
   140005f5d:	movzx  eax,WORD PTR [rcx]
   140005f60:	add    rcx,0x2
   140005f64:	mov    WORD PTR [rdx],ax
   140005f67:	add    rdx,0x2
   140005f6b:	test   ax,ax
   140005f6e:	jne    0x140005f5d
   140005f70:	or     r8,0xffffffffffffffff
   140005f74:	xor    eax,eax
   140005f76:	mov    rdi,r13
   140005f79:	mov    rcx,r8
   140005f7c:	repnz scas ax,WORD PTR es:[rdi]
   140005f7f:	not    rcx
   140005f82:	cmp    WORD PTR [r13+rcx*2-0x4],0x2f
   140005f89:	je     0x140005fb0
   140005f8b:	mov    rdi,QWORD PTR [rbx+0x20]
   140005f8f:	mov    rcx,r8
   140005f92:	lea    rdx,[rip+0x340db]        # 0x14003a074
   140005f99:	repnz scas ax,WORD PTR es:[rdi]
   140005f9c:	xor    ecx,ecx
   140005f9e:	movzx  eax,WORD PTR [rdx+rcx*1]
   140005fa2:	add    rcx,0x2
   140005fa6:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   140005fab:	test   ax,ax
   140005fae:	jne    0x140005f9e
   140005fb0:	mov    rdi,QWORD PTR [rbx+0x20]
   140005fb4:	xor    eax,eax
   140005fb6:	mov    rcx,r8
   140005fb9:	repnz scas ax,WORD PTR es:[rdi]
   140005fbc:	xor    ecx,ecx
   140005fbe:	movzx  eax,WORD PTR [rsi+rcx*1]
   140005fc2:	add    rcx,0x2
   140005fc6:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   140005fcb:	test   ax,ax
   140005fce:	jne    0x140005fbe
   140005fd0:	mov    rsi,QWORD PTR [rbx+0x20]
   140005fd4:	xor    eax,eax
   140005fd6:	mov    rcx,r8
   140005fd9:	mov    rdi,rsi
   140005fdc:	repnz scas ax,WORD PTR es:[rdi]
   140005fdf:	not    rcx
   140005fe2:	add    rcx,rcx
   140005fe5:	call   0x140013298
   140005fea:	mov    rdx,rax
   140005fed:	mov    QWORD PTR [rbx+0x28],rax
   140005ff1:	test   rax,rax
   140005ff4:	je     0x1400066d8
   140005ffa:	movzx  eax,WORD PTR [rsi]
   140005ffd:	add    rsi,0x2
   140006001:	mov    WORD PTR [rdx],ax
   140006004:	add    rdx,0x2
   140006008:	test   ax,ax
   14000600b:	jne    0x140005ffa
   14000600d:	mov    rdi,rbp
   140006010:	xor    esi,esi
   140006012:	cmp    QWORD PTR [rbx+0x28],rsi
   140006016:	jne    0x140006296
   14000601c:	mov    rcx,QWORD PTR [r14+0x18]
   140006020:	lea    rdx,[rip+0x34199]        # 0x14003a1c0
   140006027:	call   0x1400073bc
   14000602c:	mov    r12,rax
   14000602f:	test   rax,rax
   140006032:	je     0x14000628e
   140006038:	mov    rcx,rax
   14000603b:	call   0x140005d9c
   140006040:	test   eax,eax
   140006042:	je     0x140006270
   140006048:	mov    rcx,QWORD PTR [r12+0x18]
   14000604d:	lea    rdx,[rip+0x34184]        # 0x14003a1d8
   140006054:	call   0x1400073bc
   140006059:	mov    rbp,rax
   14000605c:	test   rax,rax
   14000605f:	je     0x14000614d
   140006065:	test   r15,r15
   140006068:	jne    0x14000616f
   14000606e:	mov    rcx,QWORD PTR [rbp+0x20]
   140006072:	lea    rdx,[rip+0x34167]        # 0x14003a1e0
   140006079:	call   0x14000740c
   14000607e:	mov    rsi,rax
   140006081:	xor    eax,eax
   140006083:	test   rsi,rsi
   140006086:	je     0x140006136
   14000608c:	test   rdi,rdi
   14000608f:	jne    0x1400060cd
   140006091:	or     rcx,0xffffffffffffffff
   140006095:	mov    rdi,rsi
   140006098:	repnz scas ax,WORD PTR es:[rdi]
   14000609b:	not    rcx
   14000609e:	add    rcx,rcx
   1400060a1:	call   0x140013298
   1400060a6:	mov    QWORD PTR [rsp+0x88],rax
   1400060ae:	test   rax,rax
   1400060b1:	je     0x1400066d8
   1400060b7:	mov    rdx,rsi
   1400060ba:	sub    rax,rsi
   1400060bd:	movzx  ecx,WORD PTR [rdx]
   1400060c0:	mov    WORD PTR [rdx+rax*1],cx
   1400060c4:	add    rdx,0x2
   1400060c8:	test   cx,cx
   1400060cb:	jne    0x1400060bd
   1400060cd:	mov    rcx,QWORD PTR [rbp+0x20]
   1400060d1:	lea    rdx,[rip+0x34118]        # 0x14003a1f0
   1400060d8:	call   0x14000740c
   1400060dd:	test   rax,rax
   1400060e0:	je     0x140006136
   1400060e2:	lea    rdx,[rip+0x34117]        # 0x14003a200
   1400060e9:	mov    rcx,rax
   1400060ec:	call   0x1400147a4
   1400060f1:	test   eax,eax
   1400060f3:	jne    0x140006136
   1400060f5:	or     rcx,0xffffffffffffffff
   1400060f9:	xor    eax,eax
   1400060fb:	mov    rdi,rsi
   1400060fe:	repnz scas ax,WORD PTR es:[rdi]
   140006101:	not    rcx
   140006104:	add    rcx,rcx
   140006107:	call   0x140013298
   14000610c:	mov    r15,rax
   14000610f:	mov    QWORD PTR [rsp+0x98],rax
   140006117:	test   rax,rax
   14000611a:	je     0x1400066d8
   140006120:	mov    rdx,rax
   140006123:	sub    rdx,rsi
   140006126:	movzx  ecx,WORD PTR [rsi]
   140006129:	mov    WORD PTR [rsi+rdx*1],cx
   14000612d:	add    rsi,0x2
   140006131:	test   cx,cx
   140006134:	jne    0x140006126
   140006136:	mov    rbp,QWORD PTR [rbp+0x10]
   14000613a:	mov    rdi,QWORD PTR [rsp+0x88]
   140006142:	xor    esi,esi
   140006144:	test   rbp,rbp
   140006147:	jne    0x140006065
   14000614d:	test   r15,r15
   140006150:	jne    0x14000616f
   140006152:	mov    rcx,QWORD PTR [rsp+0x88]
   14000615a:	test   rcx,rcx
   14000615d:	je     0x14000616f
   14000615f:	call   0x1400130e8
   140006164:	mov    r15,rax
   140006167:	mov    QWORD PTR [rsp+0x98],rax
   14000616f:	test   r13,r13
   140006172:	je     0x140006270
   140006178:	test   r15,r15
   14000617b:	je     0x140006270
   140006181:	or     r8,0xffffffffffffffff
   140006185:	xor    eax,eax
   140006187:	mov    rdi,r13
   14000618a:	mov    rcx,r8
   14000618d:	lea    rbp,[rip+0x3407c]        # 0x14003a210
   140006194:	repnz scas ax,WORD PTR es:[rdi]
   140006197:	mov    rdi,r15
   14000619a:	not    rcx
   14000619d:	lea    rdx,[rcx-0x1]
   1400061a1:	mov    rcx,r8
   1400061a4:	repnz scas ax,WORD PTR es:[rdi]
   1400061a7:	mov    rdi,rbp
   1400061aa:	not    rcx
   1400061ad:	dec    rcx
   1400061b0:	add    rdx,rcx
   1400061b3:	mov    rcx,r8
   1400061b6:	repnz scas ax,WORD PTR es:[rdi]
   1400061b9:	not    rcx
   1400061bc:	dec    rcx
   1400061bf:	add    rdx,rcx
   1400061c2:	lea    rcx,[rdx+rdx*1+0x4]
   1400061c7:	call   0x140013298
   1400061cc:	mov    QWORD PTR [rbx+0x28],rax
   1400061d0:	test   rax,rax
   1400061d3:	je     0x1400066d8
   1400061d9:	mov    rdx,r13
   1400061dc:	movzx  ecx,WORD PTR [rdx]
   1400061df:	add    rdx,0x2
   1400061e3:	mov    WORD PTR [rax],cx
   1400061e6:	add    rax,0x2
   1400061ea:	test   cx,cx
   1400061ed:	jne    0x1400061dc
   1400061ef:	or     r8,0xffffffffffffffff
   1400061f3:	xor    eax,eax
   1400061f5:	mov    rdi,r13
   1400061f8:	mov    rcx,r8
   1400061fb:	repnz scas ax,WORD PTR es:[rdi]
   1400061fe:	not    rcx
   140006201:	cmp    WORD PTR [r13+rcx*2-0x4],0x2f
   140006208:	je     0x14000622f
   14000620a:	mov    rdi,QWORD PTR [rbx+0x28]
   14000620e:	mov    rcx,r8
   140006211:	lea    rdx,[rip+0x33e94]        # 0x14003a0ac
   140006218:	repnz scas ax,WORD PTR es:[rdi]
   14000621b:	xor    ecx,ecx
   14000621d:	movzx  eax,WORD PTR [rdx+rcx*1]
   140006221:	add    rcx,0x2
   140006225:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   14000622a:	test   ax,ax
   14000622d:	jne    0x14000621d
   14000622f:	mov    rdi,QWORD PTR [rbx+0x28]
   140006233:	xor    eax,eax
   140006235:	mov    rcx,r8
   140006238:	repnz scas ax,WORD PTR es:[rdi]
   14000623b:	xor    ecx,ecx
   14000623d:	movzx  eax,WORD PTR [r15+rcx*1]
   140006242:	add    rcx,0x2
   140006246:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   14000624b:	test   ax,ax
   14000624e:	jne    0x14000623d
   140006250:	mov    rdi,QWORD PTR [rbx+0x28]
   140006254:	xor    eax,eax
   140006256:	mov    rcx,r8
   140006259:	repnz scas ax,WORD PTR es:[rdi]
   14000625c:	xor    ecx,ecx
   14000625e:	movzx  eax,WORD PTR [rcx+rbp*1]
   140006262:	add    rcx,0x2
   140006266:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   14000626b:	test   ax,ax
   14000626e:	jne    0x14000625e
   140006270:	mov    rcx,QWORD PTR [r12+0x10]
   140006275:	lea    rdx,[rip+0x33fa4]        # 0x14003a220
   14000627c:	call   0x1400073bc
   140006281:	mov    rdi,QWORD PTR [rsp+0x88]
   140006289:	jmp    0x14000602c
   14000628e:	mov    r12d,DWORD PTR [rsp+0x90]
   140006296:	mov    rcx,QWORD PTR [r14+0x18]
   14000629a:	lea    rdx,[rip+0x33f97]        # 0x14003a238
   1400062a1:	call   0x1400073bc
   1400062a6:	mov    rbp,rax
   1400062a9:	test   rax,rax
   1400062ac:	je     0x1400065ca
   1400062b2:	mov    rcx,rbp
   1400062b5:	call   0x140005d9c
   1400062ba:	test   eax,eax
   1400062bc:	je     0x1400065a1
   1400062c2:	mov    rcx,QWORD PTR [rbp+0x18]
   1400062c6:	lea    rdx,[rip+0x33f83]        # 0x14003a250
   1400062cd:	call   0x1400073bc
   1400062d2:	mov    rdi,rax
   1400062d5:	test   rax,rax
   1400062d8:	jne    0x1400062f6
   1400062da:	mov    rcx,QWORD PTR [rbp+0x18]
   1400062de:	lea    rdx,[rip+0x33f7b]        # 0x14003a260
   1400062e5:	call   0x1400073bc
   1400062ea:	mov    rdi,rax
   1400062ed:	test   rax,rax
   1400062f0:	je     0x1400063b5
   1400062f6:	mov    rcx,QWORD PTR [rdi+0x20]
   1400062fa:	lea    rdx,[rip+0x33f6f]        # 0x14003a270
   140006301:	call   0x14000740c
   140006306:	test   rax,rax
   140006309:	je     0x140006316
   14000630b:	mov    rcx,rax
   14000630e:	call   0x1400130e8
   140006313:	mov    QWORD PTR [rbx],rax
   140006316:	mov    rcx,QWORD PTR [rdi+0x20]
   14000631a:	lea    rdx,[rip+0x33f5f]        # 0x14003a280
   140006321:	call   0x14000740c
   140006326:	test   rax,rax
   140006329:	je     0x140006337
   14000632b:	mov    rcx,rax
   14000632e:	call   0x1400130e8
   140006333:	mov    QWORD PTR [rbx+0x8],rax
   140006337:	mov    rcx,QWORD PTR [rdi+0x20]
   14000633b:	lea    rdx,[rip+0x33f4e]        # 0x14003a290
   140006342:	call   0x14000740c
   140006347:	mov    rcx,rax
   14000634a:	mov    rsi,rax
   14000634d:	call   0x14000cc2c
   140006352:	test   eax,eax
   140006354:	je     0x140006362
   140006356:	mov    rcx,rsi
   140006359:	call   0x1400130e8
   14000635e:	mov    QWORD PTR [rbx+0x38],rax
   140006362:	mov    rcx,QWORD PTR [rdi+0x20]
   140006366:	lea    rdx,[rip+0x33f43]        # 0x14003a2b0
   14000636d:	call   0x14000740c
   140006372:	mov    rcx,rax
   140006375:	mov    rsi,rax
   140006378:	call   0x14000cc2c
   14000637d:	test   eax,eax
   14000637f:	je     0x14000638d
   140006381:	mov    rcx,rsi
   140006384:	call   0x1400130e8
   140006389:	mov    QWORD PTR [rbx+0x30],rax
   14000638d:	mov    rcx,QWORD PTR [rdi+0x20]
   140006391:	lea    rdx,[rip+0x33f40]        # 0x14003a2d8
   140006398:	call   0x14000740c
   14000639d:	xor    esi,esi
   14000639f:	test   rax,rax
   1400063a2:	je     0x1400063b5
   1400063a4:	mov    r9d,r12d
   1400063a7:	xor    r8d,r8d
   1400063aa:	mov    rdx,rbx
   1400063ad:	mov    rcx,rax
   1400063b0:	call   0x140005bbc
   1400063b5:	mov    rcx,QWORD PTR [rbp+0x18]
   1400063b9:	lea    rdx,[rip+0x33f38]        # 0x14003a2f8
   1400063c0:	jmp    0x140006557
   1400063c5:	mov    rcx,QWORD PTR [r12+0x20]
   1400063ca:	lea    rdx,[rip+0x33f3f]        # 0x14003a310
   1400063d1:	call   0x14000740c
   1400063d6:	mov    r13,rax
   1400063d9:	test   rax,rax
   1400063dc:	je     0x14000654b
   1400063e2:	mov    rcx,QWORD PTR [r12+0x20]
   1400063e7:	lea    rdx,[rip+0x33f32]        # 0x14003a320
   1400063ee:	call   0x14000740c
   1400063f3:	mov    r14,rax
   1400063f6:	test   rax,rax
   1400063f9:	je     0x14000654b
   1400063ff:	mov    rdx,rax
   140006402:	mov    rcx,r13
   140006405:	call   0x14000ca0c
   14000640a:	test   eax,eax
   14000640c:	je     0x14000654b
   140006412:	call   0x1400092d8
   140006417:	test   eax,eax
   140006419:	je     0x140006490
   14000641b:	xor    eax,eax
   14000641d:	or     r8,0xffffffffffffffff
   140006421:	mov    rdi,r14
   140006424:	mov    rcx,r8
   140006427:	repnz scas ax,WORD PTR es:[rdi]
   14000642a:	mov    rdi,r13
   14000642d:	not    rcx
   140006430:	lea    rdx,[rcx-0x1]
   140006434:	mov    rcx,r8
   140006437:	repnz scas ax,WORD PTR es:[rdi]
   14000643a:	not    rcx
   14000643d:	lea    r15d,[rdx+rcx*1+0xf]
   140006442:	movsxd rax,r15d
   140006445:	lea    rcx,[rax+rax*1]
   140006449:	call   0x140013298
   14000644e:	mov    rdi,rax
   140006451:	test   rax,rax
   140006454:	je     0x1400066d8
   14000645a:	lea    r8,[rip+0x33ecf]        # 0x14003a330
   140006461:	mov    r9,r13
   140006464:	movsxd rdx,r15d
   140006467:	mov    rcx,rax
   14000646a:	mov    QWORD PTR [rsp+0x20],r14
   14000646f:	call   0x14000a30c
   140006474:	xor    r13d,r13d
   140006477:	test   eax,eax
   140006479:	js     0x14000648b
   14000647b:	cmp    eax,r15d
   14000647e:	jge    0x14000648b
   140006480:	mov    rcx,rdi
   140006483:	call   0x1400092e8
   140006488:	mov    rsi,rax
   14000648b:	mov    rcx,rdi
   14000648e:	jmp    0x14000650c
   140006490:	mov    rcx,r14
   140006493:	call   0x1400092e8
   140006498:	or     r8,0xffffffffffffffff
   14000649c:	mov    r14,rax
   14000649f:	xor    eax,eax
   1400064a1:	mov    rcx,r8
   1400064a4:	mov    rdi,r14
   1400064a7:	repnz scas ax,WORD PTR es:[rdi]
   1400064aa:	mov    rdi,r13
   1400064ad:	not    rcx
   1400064b0:	lea    rdx,[rcx-0x1]
   1400064b4:	mov    rcx,r8
   1400064b7:	repnz scas ax,WORD PTR es:[rdi]
   1400064ba:	not    rcx
   1400064bd:	lea    edi,[rdx+rcx*1+0xf]
   1400064c1:	movsxd r15,edi
   1400064c4:	lea    rcx,[r15+r15*1]
   1400064c8:	call   0x140013298
   1400064cd:	mov    rsi,rax
   1400064d0:	test   rax,rax
   1400064d3:	je     0x1400066d8
   1400064d9:	lea    r8,[rip+0x33e60]        # 0x14003a340
   1400064e0:	mov    r9,r13
   1400064e3:	mov    rdx,r15
   1400064e6:	mov    rcx,rax
   1400064e9:	mov    QWORD PTR [rsp+0x20],r14
   1400064ee:	call   0x14000a30c
   1400064f3:	xor    r13d,r13d
   1400064f6:	test   eax,eax
   1400064f8:	js     0x1400064fe
   1400064fa:	cmp    eax,edi
   1400064fc:	jl     0x140006509
   1400064fe:	mov    rcx,rsi
   140006501:	call   0x1400130a8
   140006506:	mov    rsi,r13
   140006509:	mov    rcx,r14
   14000650c:	call   0x1400130a8
   140006511:	test   rsi,rsi
   140006514:	je     0x140006549
   140006516:	movsxd rax,DWORD PTR [rbx+0xe8]
   14000651d:	cmp    eax,0x14
   140006520:	jge    0x140006549
   140006522:	mov    QWORD PTR [rbx+rax*8+0xf0],rsi
   14000652a:	inc    DWORD PTR [rbx+0xe8]
   140006530:	cmp    DWORD PTR [rsp+0x90],r13d
   140006538:	je     0x140006549
   14000653a:	lea    rcx,[rip+0x33e0f]        # 0x14003a350
   140006541:	mov    rdx,rsi
   140006544:	call   0x1400145d4
   140006549:	xor    esi,esi
   14000654b:	mov    rcx,QWORD PTR [r12+0x10]
   140006550:	lea    rdx,[rip+0x33e29]        # 0x14003a380
   140006557:	call   0x1400073bc
   14000655c:	mov    r12,rax
   14000655f:	test   rax,rax
   140006562:	jne    0x1400063c5
   140006568:	mov    rcx,QWORD PTR [rbp+0x18]
   14000656c:	lea    rdx,[rip+0x33e25]        # 0x14003a398
   140006573:	call   0x1400073bc
   140006578:	test   rax,rax
   14000657b:	je     0x1400065a1
   14000657d:	mov    rcx,QWORD PTR [rax+0x20]
   140006581:	lea    rdx,[rip+0x33e38]        # 0x14003a3c0
   140006588:	call   0x14000740c
   14000658d:	test   rax,rax
   140006590:	je     0x1400065a1
   140006592:	mov    rcx,rax
   140006595:	call   0x1400130e8
   14000659a:	mov    QWORD PTR [rbx+0x190],rax
   1400065a1:	mov    rcx,QWORD PTR [rbp+0x10]
   1400065a5:	lea    rdx,[rip+0x33e24]        # 0x14003a3d0
   1400065ac:	call   0x1400073bc
   1400065b1:	mov    r12d,DWORD PTR [rsp+0x90]
   1400065b9:	mov    rbp,rax
   1400065bc:	test   rax,rax
   1400065bf:	jne    0x1400062b2
   1400065c5:	mov    r14,QWORD PTR [rsp+0x38]
   1400065ca:	mov    rcx,QWORD PTR [r14+0x18]
   1400065ce:	lea    rdx,[rip+0x33e13]        # 0x14003a3e8
   1400065d5:	call   0x1400073bc
   1400065da:	test   rax,rax
   1400065dd:	jne    0x140006609
   1400065df:	mov    rcx,QWORD PTR [r14+0x18]
   1400065e3:	lea    rdx,[rip+0x33e26]        # 0x14003a410
   1400065ea:	call   0x1400073bc
   1400065ef:	test   rax,rax
   1400065f2:	jne    0x140006609
   1400065f4:	mov    rcx,QWORD PTR [r14+0x18]
   1400065f8:	lea    rdx,[rip+0x33e29]        # 0x14003a428
   1400065ff:	call   0x1400073bc
   140006604:	test   rax,rax
   140006607:	je     0x140006625
   140006609:	mov    rcx,QWORD PTR [rax+0x20]
   14000660d:	lea    rdx,[rip+0x33e34]        # 0x14003a448
   140006614:	call   0x14000740c
   140006619:	test   rax,rax
   14000661c:	je     0x140006625
   14000661e:	mov    DWORD PTR [rbx+0x14],0x2
   140006625:	mov    rcx,QWORD PTR [r14+0x18]
   140006629:	lea    rdx,[rip+0x33e38]        # 0x14003a468
   140006630:	call   0x1400073bc
   140006635:	test   rax,rax
   140006638:	je     0x140006644
   14000663a:	mov    DWORD PTR [rbx+0x198],0x1
   140006644:	mov    rcx,QWORD PTR [r14+0x18]
   140006648:	lea    rdx,[rip+0x33e39]        # 0x14003a488
   14000664f:	call   0x1400073bc
   140006654:	test   rax,rax
   140006657:	je     0x140006689
   140006659:	mov    rcx,QWORD PTR [rax+0x18]
   14000665d:	lea    rdx,[rip+0x33e3c]        # 0x14003a4a0
   140006664:	call   0x1400073bc
   140006669:	test   rax,rax
   14000666c:	je     0x140006689
   14000666e:	mov    rax,QWORD PTR [rax+0x18]
   140006672:	test   rax,rax
   140006675:	je     0x140006689
   140006677:	mov    rcx,QWORD PTR [rax+0x8]
   14000667b:	test   rcx,rcx
   14000667e:	je     0x140006689
   140006680:	call   0x1400130e8
   140006685:	mov    QWORD PTR [rbx+0x18],rax
   140006689:	mov    r15,QWORD PTR [rsp+0x98]
   140006691:	mov    rdi,QWORD PTR [rsp+0x88]
   140006699:	xor    ebp,ebp
   14000669b:	mov    rsi,QWORD PTR [rsp+0x30]
   1400066a0:	lea    rdx,[rip+0x33e09]        # 0x14003a4b0
   1400066a7:	mov    rcx,rsi
   1400066aa:	call   0x1400073bc
   1400066af:	test   rax,rax
   1400066b2:	je     0x1400066c0
   1400066b4:	mov    DWORD PTR [rbx+0x10],0x1
   1400066bb:	jmp    0x1400066c0
   1400066bd:	mov    rsi,rax
   1400066c0:	mov    rcx,rdi
   1400066c3:	call   0x1400130a8
   1400066c8:	mov    rcx,r15
   1400066cb:	call   0x1400130a8
   1400066d0:	mov    rcx,rsi
   1400066d3:	call   0x1400079ec
   1400066d8:	mov    rbx,QWORD PTR [rsp+0x80]
   1400066e0:	add    rsp,0x40
   1400066e4:	pop    r15
   1400066e6:	pop    r14
   1400066e8:	pop    r13
   1400066ea:	pop    r12
   1400066ec:	pop    rdi
   1400066ed:	pop    rsi
   1400066ee:	pop    rbp
   1400066ef:	ret    
   1400066f0:	int3   
   1400066f1:	int3   
   1400066f2:	int3   
   1400066f3:	int3   
   1400066f4:	int3   
   1400066f5:	int3   
   1400066f6:	int3   
   1400066f7:	int3   
   1400066f8:	int3   
   1400066f9:	int3   
   1400066fa:	int3   
   1400066fb:	int3   
   1400066fc:	test   rcx,rcx
   1400066ff:	je     0x1400067f7
   140006705:	mov    QWORD PTR [rsp+0x8],rbx
   14000670a:	mov    QWORD PTR [rsp+0x10],rsi
   14000670f:	push   rdi
   140006710:	sub    rsp,0x20
   140006714:	mov    rbx,rcx
   140006717:	mov    rcx,QWORD PTR [rcx]
   14000671a:	test   rcx,rcx
   14000671d:	je     0x140006724
   14000671f:	call   0x1400130a8
   140006724:	mov    rcx,QWORD PTR [rbx+0x8]
   140006728:	test   rcx,rcx
   14000672b:	je     0x140006732
   14000672d:	call   0x1400130a8
   140006732:	mov    rcx,QWORD PTR [rbx+0x18]
   140006736:	test   rcx,rcx
   140006739:	je     0x140006740
   14000673b:	call   0x1400130a8
   140006740:	mov    rcx,QWORD PTR [rbx+0x20]
   140006744:	test   rcx,rcx
   140006747:	je     0x14000674e
   140006749:	call   0x1400130a8
   14000674e:	mov    rcx,QWORD PTR [rbx+0x28]
   140006752:	test   rcx,rcx
   140006755:	je     0x14000675c
   140006757:	call   0x1400130a8
   14000675c:	mov    rcx,QWORD PTR [rbx+0x30]
   140006760:	test   rcx,rcx
   140006763:	je     0x14000676a
   140006765:	call   0x1400130a8
   14000676a:	mov    rcx,QWORD PTR [rbx+0x38]
   14000676e:	test   rcx,rcx
   140006771:	je     0x140006778
   140006773:	call   0x1400130a8
   140006778:	xor    esi,esi
   14000677a:	cmp    DWORD PTR [rbx+0x40],esi
   14000677d:	jle    0x14000679f
   14000677f:	lea    rdi,[rbx+0x48]
   140006783:	mov    rcx,QWORD PTR [rdi]
   140006786:	test   rcx,rcx
   140006789:	je     0x140006790
   14000678b:	call   0x1400130a8
   140006790:	and    QWORD PTR [rdi],0x0
   140006794:	inc    esi
   140006796:	add    rdi,0x8
   14000679a:	cmp    esi,DWORD PTR [rbx+0x40]
   14000679d:	jl     0x140006783
   14000679f:	xor    esi,esi
   1400067a1:	cmp    DWORD PTR [rbx+0xe8],esi
   1400067a7:	jle    0x1400067cf
   1400067a9:	lea    rdi,[rbx+0xf0]
   1400067b0:	mov    rcx,QWORD PTR [rdi]
   1400067b3:	test   rcx,rcx
   1400067b6:	je     0x1400067bd
   1400067b8:	call   0x1400130a8
   1400067bd:	and    QWORD PTR [rdi],0x0
   1400067c1:	inc    esi
   1400067c3:	add    rdi,0x8
   1400067c7:	cmp    esi,DWORD PTR [rbx+0xe8]
   1400067cd:	jl     0x1400067b0
   1400067cf:	mov    rcx,QWORD PTR [rbx+0x190]
   1400067d6:	test   rcx,rcx
   1400067d9:	je     0x1400067e0
   1400067db:	call   0x1400130a8
   1400067e0:	mov    rcx,rbx
   1400067e3:	call   0x1400130a8
   1400067e8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400067ed:	mov    rsi,QWORD PTR [rsp+0x38]
   1400067f2:	add    rsp,0x20
   1400067f6:	pop    rdi
   1400067f7:	ret    
   1400067f8:	int3   
   1400067f9:	int3   
   1400067fa:	int3   
   1400067fb:	int3   
   1400067fc:	int3   
   1400067fd:	int3   
   1400067fe:	int3   
   1400067ff:	int3   
   140006800:	int3   
   140006801:	int3   
   140006802:	int3   
   140006803:	int3   
   140006804:	int3   
   140006805:	int3   
   140006806:	int3   
   140006807:	int3   
   140006808:	int3   
   140006809:	int3   
   14000680a:	int3   
   14000680b:	int3   
   14000680c:	mov    QWORD PTR [rsp+0x8],rbx
   140006811:	mov    QWORD PTR [rsp+0x10],rsi
   140006816:	push   rdi
   140006817:	sub    rsp,0x20
   14000681b:	mov    esi,edx
   14000681d:	mov    rdi,rcx
   140006820:	mov    edx,0x1a0
   140006825:	mov    ecx,0x1
   14000682a:	call   0x140012bd4
   14000682f:	mov    rbx,rax
   140006832:	and    DWORD PTR [rax+0x14],0x0
   140006836:	and    DWORD PTR [rax+0x198],0x0
   14000683d:	mov    DWORD PTR [rax+0x10],0x1
   140006844:	test   rdi,rdi
   140006847:	je     0x140006857
   140006849:	mov    r8d,esi
   14000684c:	mov    rdx,rax
   14000684f:	mov    rcx,rdi
   140006852:	call   0x140005e3c
   140006857:	mov    rsi,QWORD PTR [rsp+0x38]
   14000685c:	mov    rax,rbx
   14000685f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006864:	add    rsp,0x20
   140006868:	pop    rdi
   140006869:	ret    
   14000686a:	int3   
   14000686b:	int3   
   14000686c:	int3   
   14000686d:	int3   
   14000686e:	int3   
   14000686f:	int3   
   140006870:	int3   
   140006871:	int3   
   140006872:	int3   
   140006873:	int3   
   140006874:	int3   
   140006875:	int3   
   140006876:	int3   
   140006877:	int3   
   140006878:	int3   
   140006879:	int3   
   14000687a:	int3   
   14000687b:	int3   
   14000687c:	mov    DWORD PTR [rsp+0x10],edx
   140006880:	push   rbx
   140006881:	push   rbp
   140006882:	push   rsi
   140006883:	push   rdi
   140006884:	push   r12
   140006886:	push   r13
   140006888:	push   r14
   14000688a:	push   r15
   14000688c:	sub    rsp,0x38
   140006890:	xor    edi,edi
   140006892:	mov    esi,edi
   140006894:	mov    r13d,edi
   140006897:	mov    r15d,edi
   14000689a:	mov    r14d,edi
   14000689d:	mov    r12d,edi
   1400068a0:	mov    DWORD PTR [rsp+0x90],edi
   1400068a7:	mov    DWORD PTR [rsp+0x80],edi
   1400068ae:	mov    DWORD PTR [rsp+0x20],edi
   1400068b2:	mov    DWORD PTR [rsp+0x98],edi
   1400068b9:	mov    ebp,edi
   1400068bb:	test   rcx,rcx
   1400068be:	je     0x140006b08
   1400068c4:	call   0x140008538
   1400068c9:	mov    rbp,rax
   1400068cc:	mov    rbx,rax
   1400068cf:	test   rax,rax
   1400068d2:	je     0x140006a23
   1400068d8:	mov    rdi,QWORD PTR [rbx]
   1400068db:	test   rdi,rdi
   1400068de:	je     0x1400069b3
   1400068e4:	lea    r8,[rip+0x33765]        # 0x14003a050
   1400068eb:	mov    rcx,rdi
   1400068ee:	sub    r8,rdi
   1400068f1:	movzx  eax,WORD PTR [rcx]
   1400068f4:	movzx  edx,WORD PTR [rcx+r8*1]
   1400068f9:	sub    eax,edx
   1400068fb:	jne    0x140006905
   1400068fd:	add    rcx,0x2
   140006901:	test   edx,edx
   140006903:	jne    0x1400068f1
   140006905:	test   eax,eax
   140006907:	jne    0x140006912
   140006909:	mov    r13,QWORD PTR [rbx+0x8]
   14000690d:	jmp    0x1400069b3
   140006912:	lea    r8,[rip+0x33747]        # 0x14003a060
   140006919:	mov    rax,rdi
   14000691c:	sub    r8,rdi
   14000691f:	movzx  ecx,WORD PTR [rax]
   140006922:	movzx  edx,WORD PTR [rax+r8*1]
   140006927:	sub    ecx,edx
   140006929:	jne    0x140006933
   14000692b:	add    rax,0x2
   14000692f:	test   edx,edx
   140006931:	jne    0x14000691f
   140006933:	test   ecx,ecx
   140006935:	jne    0x14000693d
   140006937:	mov    rsi,QWORD PTR [rbx+0x8]
   14000693b:	jmp    0x1400069b3
   14000693d:	lea    rdx,[rip+0x33734]        # 0x14003a078
   140006944:	mov    r8d,0x6
   14000694a:	mov    rcx,rdi
   14000694d:	call   0x140013790
   140006952:	test   eax,eax
   140006954:	jne    0x140006963
   140006956:	mov    DWORD PTR [rsp+0x90],0x1
   140006961:	jmp    0x1400069b3
   140006963:	lea    r8,[rip+0x3371e]        # 0x14003a088
   14000696a:	mov    rax,rdi
   14000696d:	sub    r8,rdi
   140006970:	movzx  ecx,WORD PTR [rax]
   140006973:	movzx  edx,WORD PTR [rax+r8*1]
   140006978:	sub    ecx,edx
   14000697a:	jne    0x140006984
   14000697c:	add    rax,0x2
   140006980:	test   edx,edx
   140006982:	jne    0x140006970
   140006984:	test   ecx,ecx
   140006986:	jne    0x14000698e
   140006988:	mov    r15,QWORD PTR [rbx+0x8]
   14000698c:	jmp    0x1400069b3
   14000698e:	lea    rdx,[rip+0x33703]        # 0x14003a098
   140006995:	sub    rdx,rdi
   140006998:	movzx  eax,WORD PTR [rdi]
   14000699b:	movzx  ecx,WORD PTR [rdi+rdx*1]
   14000699f:	sub    eax,ecx
   1400069a1:	jne    0x1400069ab
   1400069a3:	add    rdi,0x2
   1400069a7:	test   ecx,ecx
   1400069a9:	jne    0x140006998
   1400069ab:	test   eax,eax
   1400069ad:	jne    0x1400069b3
   1400069af:	mov    r14,QWORD PTR [rbx+0x8]
   1400069b3:	mov    rbx,QWORD PTR [rbx+0x18]
   1400069b7:	test   rbx,rbx
   1400069ba:	jne    0x1400068d8
   1400069c0:	test   r15,r15
   1400069c3:	je     0x140006a09
   1400069c5:	or     rcx,0xffffffffffffffff
   1400069c9:	xor    eax,eax
   1400069cb:	mov    rdi,r15
   1400069ce:	repnz scas ax,WORD PTR es:[rdi]
   1400069d1:	lea    edx,[rax+0x2f]
   1400069d4:	not    rcx
   1400069d7:	dec    rcx
   1400069da:	mov    rbx,rcx
   1400069dd:	mov    QWORD PTR [rsp+0x20],rcx
   1400069e2:	mov    rcx,r15
   1400069e5:	call   0x1400149dc
   1400069ea:	or     rcx,0xffffffffffffffff
   1400069ee:	mov    rdi,rax
   1400069f1:	xor    eax,eax
   1400069f3:	repnz scas ax,WORD PTR es:[rdi]
   1400069f6:	mov    eax,ebx
   1400069f8:	not    rcx
   1400069fb:	dec    rcx
   1400069fe:	sub    eax,ecx
   140006a00:	inc    eax
   140006a02:	mov    DWORD PTR [rsp+0x80],eax
   140006a09:	test   r14,r14
   140006a0c:	je     0x140006a23
   140006a0e:	or     rcx,0xffffffffffffffff
   140006a12:	xor    eax,eax
   140006a14:	mov    rdi,r14
   140006a17:	repnz scas ax,WORD PTR es:[rdi]
   140006a1a:	not    rcx
   140006a1d:	lea    rbx,[rcx-0x1]
   140006a21:	jmp    0x140006a2b
   140006a23:	mov    rbx,QWORD PTR [rsp+0x98]
   140006a2b:	mov    rax,QWORD PTR [rsp+0x20]
   140006a30:	mov    edx,0x2
   140006a35:	lea    eax,[rbx+rax*1+0x1]
   140006a39:	movsxd rdi,eax
   140006a3c:	mov    rcx,rdi
   140006a3f:	call   0x140012bd4
   140006a44:	movsxd r9,DWORD PTR [rsp+0x80]
   140006a4c:	mov    r8,r15
   140006a4f:	mov    rcx,rax
   140006a52:	mov    rdx,rdi
   140006a55:	mov    r12,rax
   140006a58:	call   0x140013da4
   140006a5d:	xor    edi,edi
   140006a5f:	test   ebx,ebx
   140006a61:	jle    0x140006a86
   140006a63:	xor    eax,eax
   140006a65:	or     rcx,0xffffffffffffffff
   140006a69:	mov    rdi,r12
   140006a6c:	repnz scas ax,WORD PTR es:[rdi]
   140006a6f:	xor    ecx,ecx
   140006a71:	movzx  eax,WORD PTR [r14+rcx*1]
   140006a76:	add    rcx,0x2
   140006a7a:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   140006a7f:	test   ax,ax
   140006a82:	jne    0x140006a71
   140006a84:	xor    edi,edi
   140006a86:	or     r14,0xffffffffffffffff
   140006a8a:	test   rsi,rsi
   140006a8d:	je     0x140006b0c
   140006a8f:	xor    eax,eax
   140006a91:	mov    rcx,r14
   140006a94:	mov    rdi,rsi
   140006a97:	repnz scas ax,WORD PTR es:[rdi]
   140006a9a:	not    rcx
   140006a9d:	dec    rcx
   140006aa0:	je     0x140006b04
   140006aa2:	mov    rcx,r14
   140006aa5:	mov    rdi,rsi
   140006aa8:	lea    r8,[rsp+0x80]
   140006ab0:	repnz scas ax,WORD PTR es:[rdi]
   140006ab3:	not    rcx
   140006ab6:	lea    rdx,[rcx-0x1]
   140006aba:	mov    rcx,rsi
   140006abd:	call   0x14000bf88
   140006ac2:	mov    edx,DWORD PTR [rsp+0x88]
   140006ac9:	xor    ecx,ecx
   140006acb:	mov    rbx,rax
   140006ace:	test   rax,rax
   140006ad1:	jne    0x140006add
   140006ad3:	call   0x14000680c
   140006ad8:	jmp    0x140006c99
   140006add:	mov    rax,QWORD PTR [rsp+0x80]
   140006ae5:	mov    WORD PTR [rbx+rax*2],cx
   140006ae9:	mov    rcx,rbx
   140006aec:	call   0x14000680c
   140006af1:	mov    rcx,rbx
   140006af4:	mov    rdi,rax
   140006af7:	call   0x1400130a8
   140006afc:	mov    rax,rdi
   140006aff:	jmp    0x140006c99
   140006b04:	xor    edi,edi
   140006b06:	jmp    0x140006b0c
   140006b08:	or     r14,0xffffffffffffffff
   140006b0c:	mov    edx,0x1a0
   140006b11:	mov    ecx,0x1
   140006b16:	call   0x140012bd4
   140006b1b:	cmp    DWORD PTR [rsp+0x90],0x1
   140006b23:	mov    DWORD PTR [rax+0x14],edi
   140006b26:	mov    DWORD PTR [rax+0x198],edi
   140006b2c:	mov    rbx,rax
   140006b2f:	jne    0x140006c5b
   140006b35:	test   rbp,rbp
   140006b38:	je     0x140006c8a
   140006b3e:	mov    r15d,DWORD PTR [rsp+0x88]
   140006b46:	xor    eax,eax
   140006b48:	mov    rcx,r14
   140006b4b:	lea    rdi,[rip+0x3355e]        # 0x14003a0b0
   140006b52:	repnz scas ax,WORD PTR es:[rdi]
   140006b55:	lea    rdi,[rip+0x3356c]        # 0x14003a0c8
   140006b5c:	not    rcx
   140006b5f:	lea    r13,[rcx-0x1]
   140006b63:	mov    rcx,r14
   140006b66:	repnz scas ax,WORD PTR es:[rdi]
   140006b69:	xor    edi,edi
   140006b6b:	not    rcx
   140006b6e:	lea    r14,[rcx-0x1]
   140006b72:	mov    rcx,QWORD PTR [rbp+0x0]
   140006b76:	test   rcx,rcx
   140006b79:	je     0x140006c0e
   140006b7f:	lea    rdx,[rip+0x33562]        # 0x14003a0e8
   140006b86:	mov    r8d,0x6
   140006b8c:	call   0x140013790
   140006b91:	test   eax,eax
   140006b93:	jne    0x140006c0e
   140006b95:	mov    rsi,QWORD PTR [rbp+0x8]
   140006b99:	test   rsi,rsi
   140006b9c:	je     0x140006c0e
   140006b9e:	lea    rdx,[rip+0x33553]        # 0x14003a0f8
   140006ba5:	movsxd r8,r13d
   140006ba8:	mov    rcx,rsi
   140006bab:	call   0x140013790
   140006bb0:	test   eax,eax
   140006bb2:	jne    0x140006c1d
   140006bb4:	cmp    QWORD PTR [rbx+0x190],rdi
   140006bbb:	jne    0x140006c0e
   140006bbd:	or     r8,0xffffffffffffffff
   140006bc1:	xor    eax,eax
   140006bc3:	mov    rdi,rsi
   140006bc6:	mov    rcx,r8
   140006bc9:	repnz scas ax,WORD PTR es:[rdi]
   140006bcc:	lea    rdi,[rip+0x3353d]        # 0x14003a110
   140006bd3:	not    rcx
   140006bd6:	lea    rdx,[rcx-0x1]
   140006bda:	mov    rcx,r8
   140006bdd:	repnz scas ax,WORD PTR es:[rdi]
   140006be0:	not    rcx
   140006be3:	dec    rcx
   140006be6:	cmp    rdx,rcx
   140006be9:	jbe    0x140006c0c
   140006beb:	mov    rcx,r8
   140006bee:	lea    rdi,[rip+0x33533]        # 0x14003a128
   140006bf5:	repnz scas ax,WORD PTR es:[rdi]
   140006bf8:	not    rcx
   140006bfb:	lea    rcx,[rsi+rcx*2-0x2]
   140006c00:	call   0x1400130e8
   140006c05:	mov    QWORD PTR [rbx+0x190],rax
   140006c0c:	xor    edi,edi
   140006c0e:	mov    rbp,QWORD PTR [rbp+0x18]
   140006c12:	test   rbp,rbp
   140006c15:	jne    0x140006b72
   140006c1b:	jmp    0x140006c8a
   140006c1d:	lea    rdx,[rip+0x3351c]        # 0x14003a140
   140006c24:	movsxd r8,r14d
   140006c27:	mov    rcx,rsi
   140006c2a:	call   0x140013790
   140006c2f:	test   eax,eax
   140006c31:	jne    0x140006c3f
   140006c33:	mov    DWORD PTR [rbx+0x198],0x1
   140006c3d:	jmp    0x140006c0e
   140006c3f:	mov    rcx,rsi
   140006c42:	call   0x14000cc9c
   140006c47:	test   eax,eax
   140006c49:	je     0x140006c0e
   140006c4b:	mov    r8d,r15d
   140006c4e:	mov    rdx,rsi
   140006c51:	mov    rcx,rbx
   140006c54:	call   0x140005b6c
   140006c59:	jmp    0x140006c0e
   140006c5b:	test   r13,r13
   140006c5e:	je     0x140006c8a
   140006c60:	xor    eax,eax
   140006c62:	mov    rcx,r14
   140006c65:	mov    rdi,r13
   140006c68:	repnz scas ax,WORD PTR es:[rdi]
   140006c6b:	not    rcx
   140006c6e:	dec    rcx
   140006c71:	je     0x140006c8a
   140006c73:	mov    r9d,DWORD PTR [rsp+0x88]
   140006c7b:	lea    r8d,[rax+0x1]
   140006c7f:	mov    rdx,rbx
   140006c82:	mov    rcx,r13
   140006c85:	call   0x140005bbc
   140006c8a:	mov    rcx,r12
   140006c8d:	call   0x1400130e8
   140006c92:	mov    QWORD PTR [rbx+0x20],rax
   140006c96:	mov    rax,rbx
   140006c99:	add    rsp,0x38
   140006c9d:	pop    r15
   140006c9f:	pop    r14
   140006ca1:	pop    r13
   140006ca3:	pop    r12
   140006ca5:	pop    rdi
   140006ca6:	pop    rsi
   140006ca7:	pop    rbp
   140006ca8:	pop    rbx
   140006ca9:	ret    
   140006caa:	int3   
   140006cab:	int3   
   140006cac:	mov    QWORD PTR [rsp+0x8],rbx
   140006cb1:	push   rdi
   140006cb2:	sub    rsp,0x20
   140006cb6:	xor    edi,edi
   140006cb8:	mov    rbx,rcx
   140006cbb:	test   rcx,rcx
   140006cbe:	je     0x140006cdf
   140006cc0:	movzx  ecx,WORD PTR [rcx]
   140006cc3:	jmp    0x140006cd1
   140006cc5:	cmp    WORD PTR [rbx],di
   140006cc8:	je     0x140006cdf
   140006cca:	add    rbx,0x2
   140006cce:	movzx  ecx,WORD PTR [rbx]
   140006cd1:	mov    edx,0x8
   140006cd6:	call   0x140013350
   140006cdb:	test   eax,eax
   140006cdd:	jne    0x140006cc5
   140006cdf:	mov    rax,rbx
   140006ce2:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ce7:	add    rsp,0x20
   140006ceb:	pop    rdi
   140006cec:	ret    
   140006ced:	int3   
   140006cee:	int3   
   140006cef:	int3   
   140006cf0:	int3   
   140006cf1:	int3   
   140006cf2:	int3   
   140006cf3:	int3   
   140006cf4:	int3   
   140006cf5:	int3   
   140006cf6:	int3   
   140006cf7:	int3   
   140006cf8:	int3   
   140006cf9:	int3   
   140006cfa:	int3   
   140006cfb:	int3   
   140006cfc:	sub    rsp,0x28
   140006d00:	movzx  edx,WORD PTR [rcx]
   140006d03:	mov    r10d,0x61
   140006d09:	movzx  eax,dx
   140006d0c:	lea    r9d,[r10-0x20]
   140006d10:	cmp    r10w,dx
   140006d14:	ja     0x140006d1c
   140006d16:	cmp    ax,0x7a
   140006d1a:	jbe    0x140006d34
   140006d1c:	cmp    r9w,ax
   140006d20:	ja     0x140006d28
   140006d22:	cmp    ax,0x5a
   140006d26:	jbe    0x140006d34
   140006d28:	cmp    ax,0x5f
   140006d2c:	je     0x140006d34
   140006d2e:	cmp    ax,0x3a
   140006d32:	jne    0x140006d8a
   140006d34:	cmp    r10w,ax
   140006d38:	ja     0x140006d40
   140006d3a:	cmp    ax,0x7a
   140006d3e:	jbe    0x140006d76
   140006d40:	cmp    r9w,ax
   140006d44:	ja     0x140006d4c
   140006d46:	cmp    ax,0x5a
   140006d4a:	jbe    0x140006d76
   140006d4c:	mov    r8d,0x30
   140006d52:	cmp    r8w,ax
   140006d56:	ja     0x140006d5e
   140006d58:	cmp    ax,0x39
   140006d5c:	jbe    0x140006d76
   140006d5e:	cmp    ax,0x5f
   140006d62:	je     0x140006d76
   140006d64:	cmp    ax,0x3a
   140006d68:	je     0x140006d76
   140006d6a:	cmp    ax,0x2e
   140006d6e:	je     0x140006d76
   140006d70:	cmp    ax,0x2d
   140006d74:	jne    0x140006d8a
   140006d76:	test   dx,dx
   140006d79:	je     0x140006d92
   140006d7b:	add    rcx,0x2
   140006d7f:	movzx  edx,WORD PTR [rcx]
   140006d82:	movzx  eax,dx
   140006d85:	test   dx,dx
   140006d88:	jne    0x140006d34
   140006d8a:	mov    rax,rcx
   140006d8d:	add    rsp,0x28
   140006d91:	ret    
   140006d92:	lea    rcx,[rip+0x47117]        # 0x14004deb0
   140006d99:	mov    edx,0x1
   140006d9e:	call   0x140014a20
   140006da3:	int3   
   140006da4:	int3   
   140006da5:	int3   
   140006da6:	int3   
   140006da7:	int3   
   140006da8:	int3   
   140006da9:	int3   
   140006daa:	int3   
   140006dab:	int3   
   140006dac:	mov    QWORD PTR [rsp+0x8],rbx
   140006db1:	push   rdi
   140006db2:	sub    rsp,0x20
   140006db6:	xor    edi,edi
   140006db8:	mov    rbx,rcx
   140006dbb:	test   rcx,rcx
   140006dbe:	je     0x140006e0d
   140006dc0:	lea    r8d,[rdi+0x4]
   140006dc4:	lea    rdx,[rip+0x336f5]        # 0x14003a4c0
   140006dcb:	call   0x140013790
   140006dd0:	test   eax,eax
   140006dd2:	jne    0x140006e0d
   140006dd4:	mov    eax,edi
   140006dd6:	cmp    WORD PTR [rbx],di
   140006dd9:	je     0x140006e53
   140006ddb:	inc    eax
   140006ddd:	add    rbx,0x2
   140006de1:	cmp    eax,0x4
   140006de4:	jl     0x140006dd6
   140006de6:	lea    rdx,[rip+0x336e3]        # 0x14003a4d0
   140006ded:	mov    r8d,0x3
   140006df3:	mov    rcx,rbx
   140006df6:	call   0x140013790
   140006dfb:	test   eax,eax
   140006dfd:	je     0x140006e2d
   140006dff:	cmp    WORD PTR [rbx],di
   140006e02:	je     0x140006e1b
   140006e04:	add    rbx,0x2
   140006e08:	cmp    WORD PTR [rbx],di
   140006e0b:	jne    0x140006de6
   140006e0d:	mov    rax,rbx
   140006e10:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e15:	add    rsp,0x20
   140006e19:	pop    rdi
   140006e1a:	ret    
   140006e1b:	lea    rcx,[rip+0x4708e]        # 0x14004deb0
   140006e22:	mov    edx,0x1
   140006e27:	call   0x140014a20
   140006e2c:	int3   
   140006e2d:	mov    eax,edi
   140006e2f:	cmp    WORD PTR [rbx],di
   140006e32:	je     0x140006e41
   140006e34:	inc    eax
   140006e36:	add    rbx,0x2
   140006e3a:	cmp    eax,0x3
   140006e3d:	jl     0x140006e2f
   140006e3f:	jmp    0x140006e0d
   140006e41:	lea    rcx,[rip+0x47068]        # 0x14004deb0
   140006e48:	mov    edx,0x1
   140006e4d:	call   0x140014a20
   140006e52:	int3   
   140006e53:	lea    rcx,[rip+0x47056]        # 0x14004deb0
   140006e5a:	mov    edx,0x1
   140006e5f:	call   0x140014a20
   140006e64:	int3   
   140006e65:	int3   
   140006e66:	int3   
   140006e67:	int3   
   140006e68:	int3   
   140006e69:	int3   
   140006e6a:	int3   
   140006e6b:	int3   
   140006e6c:	mov    QWORD PTR [rsp+0x8],rbx
   140006e71:	push   rdi
   140006e72:	sub    rsp,0x20
   140006e76:	xor    edi,edi
   140006e78:	mov    rbx,rcx
   140006e7b:	test   rcx,rcx
   140006e7e:	je     0x140006ec2
   140006e80:	lea    r8d,[rdi+0x2]
   140006e84:	lea    rdx,[rip+0x3364d]        # 0x14003a4d8
   140006e8b:	call   0x140013790
   140006e90:	test   eax,eax
   140006e92:	jne    0x140006ec2
   140006e94:	mov    eax,edi
   140006e96:	lea    edx,[rdi+0x1]
   140006e99:	cmp    WORD PTR [rbx],di
   140006e9c:	je     0x140006ef5
   140006e9e:	add    eax,edx
   140006ea0:	add    rbx,0x2
   140006ea4:	cmp    eax,0x2
   140006ea7:	jl     0x140006e99
   140006ea9:	jmp    0x140006eba
   140006eab:	cmp    ax,0x3e
   140006eaf:	je     0x140006edd
   140006eb1:	test   ax,ax
   140006eb4:	je     0x140006ed0
   140006eb6:	add    rbx,0x2
   140006eba:	movzx  eax,WORD PTR [rbx]
   140006ebd:	test   ax,ax
   140006ec0:	jne    0x140006eab
   140006ec2:	mov    rax,rbx
   140006ec5:	mov    rbx,QWORD PTR [rsp+0x30]
   140006eca:	add    rsp,0x20
   140006ece:	pop    rdi
   140006ecf:	ret    
   140006ed0:	lea    rcx,[rip+0x46fd9]        # 0x14004deb0
   140006ed7:	call   0x140014a20
   140006edc:	int3   
   140006edd:	cmp    WORD PTR [rbx],di
   140006ee0:	je     0x140006ee8
   140006ee2:	lea    rax,[rbx+0x2]
   140006ee6:	jmp    0x140006ec5
   140006ee8:	lea    rcx,[rip+0x46fc1]        # 0x14004deb0
   140006eef:	call   0x140014a20
   140006ef4:	int3   
   140006ef5:	lea    rcx,[rip+0x46fb4]        # 0x14004deb0
   140006efc:	call   0x140014a20
   140006f01:	int3   
   140006f02:	int3   
   140006f03:	int3   
   140006f04:	int3   
   140006f05:	int3   
   140006f06:	int3   
   140006f07:	int3   
   140006f08:	int3   
   140006f09:	int3   
   140006f0a:	int3   
   140006f0b:	int3   
   140006f0c:	mov    QWORD PTR [rsp+0x8],rbx
   140006f11:	mov    QWORD PTR [rsp+0x10],rbp
   140006f16:	push   rdi
   140006f17:	sub    rsp,0x20
   140006f1b:	xor    edi,edi
   140006f1d:	mov    rbx,rcx
   140006f20:	test   rcx,rcx
   140006f23:	je     0x140006f6e
   140006f25:	lea    ebp,[rdi+0x2]
   140006f28:	lea    rdx,[rip+0x335b1]        # 0x14003a4e0
   140006f2f:	mov    r8d,ebp
   140006f32:	call   0x140013790
   140006f37:	test   eax,eax
   140006f39:	jne    0x140006f6e
   140006f3b:	mov    eax,edi
   140006f3d:	cmp    WORD PTR [rbx],di
   140006f40:	je     0x140006fb7
   140006f42:	inc    eax
   140006f44:	add    rbx,rbp
   140006f47:	cmp    eax,ebp
   140006f49:	jl     0x140006f3d
   140006f4b:	lea    rdx,[rip+0x33596]        # 0x14003a4e8
   140006f52:	mov    r8,rbp
   140006f55:	mov    rcx,rbx
   140006f58:	call   0x140013790
   140006f5d:	test   eax,eax
   140006f5f:	je     0x140006f93
   140006f61:	cmp    WORD PTR [rbx],di
   140006f64:	je     0x140006f81
   140006f66:	add    rbx,rbp
   140006f69:	cmp    WORD PTR [rbx],di
   140006f6c:	jne    0x140006f4b
   140006f6e:	mov    rbp,QWORD PTR [rsp+0x38]
   140006f73:	mov    rax,rbx
   140006f76:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f7b:	add    rsp,0x20
   140006f7f:	pop    rdi
   140006f80:	ret    
   140006f81:	lea    rcx,[rip+0x46f28]        # 0x14004deb0
   140006f88:	mov    edx,0x1
   140006f8d:	call   0x140014a20
   140006f92:	int3   
   140006f93:	mov    eax,edi
   140006f95:	cmp    WORD PTR [rbx],di
   140006f98:	je     0x140006fa5
   140006f9a:	inc    eax
   140006f9c:	add    rbx,rbp
   140006f9f:	cmp    eax,ebp
   140006fa1:	jl     0x140006f95
   140006fa3:	jmp    0x140006f6e
   140006fa5:	lea    rcx,[rip+0x46f04]        # 0x14004deb0
   140006fac:	mov    edx,0x1
   140006fb1:	call   0x140014a20
   140006fb6:	int3   
   140006fb7:	lea    rcx,[rip+0x46ef2]        # 0x14004deb0
   140006fbe:	mov    edx,0x1
   140006fc3:	call   0x140014a20
   140006fc8:	int3   
   140006fc9:	int3   
   140006fca:	int3   
   140006fcb:	int3   
   140006fcc:	int3   
   140006fcd:	int3   
   140006fce:	int3   
   140006fcf:	int3   
   140006fd0:	int3   
   140006fd1:	int3   
   140006fd2:	int3   
   140006fd3:	int3   
   140006fd4:	int3   
   140006fd5:	int3   
   140006fd6:	int3   
   140006fd7:	int3   
   140006fd8:	int3   
   140006fd9:	int3   
   140006fda:	int3   
   140006fdb:	int3   
   140006fdc:	mov    QWORD PTR [rsp+0x8],rbx
   140006fe1:	mov    QWORD PTR [rsp+0x10],rbp
   140006fe6:	mov    QWORD PTR [rsp+0x18],rsi
   140006feb:	push   rdi
   140006fec:	sub    rsp,0x20
   140006ff0:	mov    rdi,r8
   140006ff3:	xor    ebp,ebp
   140006ff5:	mov    ebx,ecx
   140006ff7:	mov    rcx,QWORD PTR [rip+0x46fca]        # 0x14004dfc8
   140006ffe:	sub    rdi,rdx
   140007001:	mov    rsi,rdx
   140007004:	sar    rdi,1
   140007007:	cmp    edi,DWORD PTR [rip+0x334ef]        # 0x14003a4fc
   14000700d:	jle    0x14000703c
   14000700f:	test   rcx,rcx
   140007012:	je     0x140007019
   140007014:	call   0x1400130a8
   140007019:	lea    eax,[rdi+0x1]
   14000701c:	movsxd rcx,eax
   14000701f:	add    rcx,rcx
   140007022:	call   0x140013298
   140007027:	mov    rcx,rax
   14000702a:	mov    QWORD PTR [rip+0x46f97],rax        # 0x14004dfc8
   140007031:	test   rax,rax
   140007034:	je     0x140007061
   140007036:	mov    DWORD PTR [rip+0x334c0],edi        # 0x14003a4fc
   14000703c:	lea    eax,[rdi+0x1]
   14000703f:	mov    DWORD PTR [rip+0x46f6b],ebx        # 0x14004dfb0
   140007045:	movsxd rbx,edi
   140007048:	movsxd rdx,eax
   14000704b:	mov    r9,rbx
   14000704e:	mov    r8,rsi
   140007051:	call   0x140013da4
   140007056:	mov    rax,QWORD PTR [rip+0x46f6b]        # 0x14004dfc8
   14000705d:	mov    WORD PTR [rax+rbx*2],bp
   140007061:	mov    rbx,QWORD PTR [rsp+0x30]
   140007066:	mov    rbp,QWORD PTR [rsp+0x38]
   14000706b:	mov    rsi,QWORD PTR [rsp+0x40]
   140007070:	add    rsp,0x20
   140007074:	pop    rdi
   140007075:	ret    
   140007076:	int3   
   140007077:	int3   
   140007078:	int3   
   140007079:	int3   
   14000707a:	int3   
   14000707b:	int3   
   14000707c:	rex push rbx
   14000707e:	sub    rsp,0x20
   140007082:	mov    rax,QWORD PTR [rip+0x46f37]        # 0x14004dfc0
   140007089:	mov    rcx,rax
   14000708c:	mov    rbx,rax
   14000708f:	call   0x140006cac
   140007094:	mov    rcx,rax
   140007097:	mov    QWORD PTR [rip+0x46f22],rax        # 0x14004dfc0
   14000709e:	call   0x140006dac
   1400070a3:	mov    rcx,rax
   1400070a6:	mov    QWORD PTR [rip+0x46f13],rax        # 0x14004dfc0
   1400070ad:	call   0x140006e6c
   1400070b2:	mov    rcx,rax
   1400070b5:	mov    QWORD PTR [rip+0x46f04],rax        # 0x14004dfc0
   1400070bc:	call   0x140006f0c
   1400070c1:	mov    QWORD PTR [rip+0x46ef8],rax        # 0x14004dfc0
   1400070c8:	cmp    rax,rbx
   1400070cb:	jne    0x140007089
   1400070cd:	add    rsp,0x20
   1400070d1:	pop    rbx
   1400070d2:	ret    
   1400070d3:	int3   
   1400070d4:	int3   
   1400070d5:	int3   
   1400070d6:	int3   
   1400070d7:	int3   
   1400070d8:	int3   
   1400070d9:	int3   
   1400070da:	int3   
   1400070db:	int3   
   1400070dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400070e1:	push   rdi
   1400070e2:	sub    rsp,0x20
   1400070e6:	mov    edi,ecx
   1400070e8:	mov    ecx,0x28
   1400070ed:	mov    rbx,rdx
   1400070f0:	call   0x140013298
   1400070f5:	xor    ecx,ecx
   1400070f7:	test   rax,rax
   1400070fa:	je     0x14000710e
   1400070fc:	mov    DWORD PTR [rax],edi
   1400070fe:	mov    QWORD PTR [rax+0x8],rbx
   140007102:	mov    QWORD PTR [rax+0x10],rcx
   140007106:	mov    QWORD PTR [rax+0x18],rcx
   14000710a:	mov    QWORD PTR [rax+0x20],rcx
   14000710e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007113:	add    rsp,0x20
   140007117:	pop    rdi
   140007118:	ret    
   140007119:	int3   
   14000711a:	int3   
   14000711b:	int3   
   14000711c:	int3   
   14000711d:	int3   
   14000711e:	int3   
   14000711f:	int3   
   140007120:	int3   
   140007121:	int3   
   140007122:	int3   
   140007123:	int3   
   140007124:	int3   
   140007125:	int3   
   140007126:	int3   
   140007127:	int3   
   140007128:	int3   
   140007129:	int3   
   14000712a:	int3   
   14000712b:	int3   
   14000712c:	mov    QWORD PTR [rsp+0x8],rbx
   140007131:	push   rdi
   140007132:	sub    rsp,0x20
   140007136:	mov    rdi,rcx
   140007139:	mov    ecx,0x18
   14000713e:	mov    rbx,rdx
   140007141:	call   0x140013298
   140007146:	test   rax,rax
   140007149:	je     0x140007157
   14000714b:	and    QWORD PTR [rax+0x10],0x0
   140007150:	mov    QWORD PTR [rax],rdi
   140007153:	mov    QWORD PTR [rax+0x8],rbx
   140007157:	mov    rbx,QWORD PTR [rsp+0x30]
   14000715c:	add    rsp,0x20
   140007160:	pop    rdi
   140007161:	ret    
   140007162:	int3   
   140007163:	int3   
   140007164:	int3   
   140007165:	int3   
   140007166:	int3   
   140007167:	int3   
   140007168:	int3   
   140007169:	int3   
   14000716a:	int3   
   14000716b:	int3   
   14000716c:	mov    QWORD PTR [rsp+0x8],rbx
   140007171:	mov    QWORD PTR [rsp+0x10],rbp
   140007176:	mov    QWORD PTR [rsp+0x18],rsi
   14000717b:	push   rdi
   14000717c:	sub    rsp,0x20
   140007180:	mov    rax,QWORD PTR [rip+0x46e39]        # 0x14004dfc0
   140007187:	xor    ebp,ebp
   140007189:	mov    esi,ebp
   14000718b:	mov    edi,ebp
   14000718d:	cmp    rdi,rax
   140007190:	je     0x14000735a
   140007196:	mov    rdi,rax
   140007199:	call   0x14000707c
   14000719e:	mov    rbx,QWORD PTR [rip+0x46e1b]        # 0x14004dfc0
   1400071a5:	cmp    WORD PTR [rbx],bp
   1400071a8:	je     0x14000735a
   1400071ae:	cmp    WORD PTR [rbx],0x3e
   1400071b2:	je     0x14000735a
   1400071b8:	cmp    WORD PTR [rbx],0x2f
   1400071bc:	jne    0x1400071c9
   1400071be:	cmp    WORD PTR [rbx+0x2],0x3e
   1400071c3:	je     0x14000735a
   1400071c9:	movzx  ecx,WORD PTR [rbx]
   1400071cc:	mov    edx,0x8
   1400071d1:	call   0x140013350
   1400071d6:	test   eax,eax
   1400071d8:	jne    0x1400071f2
   1400071da:	cmp    WORD PTR [rbx],0x3d
   1400071de:	je     0x1400071f2
   1400071e0:	cmp    WORD PTR [rbx],bp
   1400071e3:	je     0x1400072b5
   1400071e9:	add    rbx,0x2
   1400071ed:	cmp    WORD PTR [rbx],bp
   1400071f0:	jne    0x1400071c9
   1400071f2:	mov    rdx,QWORD PTR [rip+0x46dc7]        # 0x14004dfc0
   1400071f9:	mov    r8,rbx
   1400071fc:	xor    ecx,ecx
   1400071fe:	call   0x140006fdc
   140007203:	test   rsi,rsi
   140007206:	je     0x140007210
   140007208:	mov    rcx,rsi
   14000720b:	call   0x1400130a8
   140007210:	mov    rcx,QWORD PTR [rip+0x46db1]        # 0x14004dfc8
   140007217:	call   0x1400130e8
   14000721c:	mov    QWORD PTR [rip+0x46d9d],rbx        # 0x14004dfc0
   140007223:	mov    rsi,rax
   140007226:	call   0x14000707c
   14000722b:	cmp    WORD PTR [rax],0x3d
   14000722f:	mov    QWORD PTR [rip+0x46d8a],rax        # 0x14004dfc0
   140007236:	jne    0x14000718d
   14000723c:	cmp    WORD PTR [rax],bp
   14000723f:	je     0x140007348
   140007245:	add    rax,0x2
   140007249:	mov    rcx,rax
   14000724c:	mov    QWORD PTR [rip+0x46d6d],rax        # 0x14004dfc0
   140007253:	call   0x140006cac
   140007258:	mov    QWORD PTR [rip+0x46d61],rax        # 0x14004dfc0
   14000725f:	movzx  edx,WORD PTR [rax]
   140007262:	cmp    dx,0x22
   140007266:	je     0x1400072d9
   140007268:	cmp    dx,0x27
   14000726c:	je     0x1400072d9
   14000726e:	mov    rbx,rax
   140007271:	test   dx,dx
   140007274:	je     0x14000729c
   140007276:	movzx  ecx,WORD PTR [rbx]
   140007279:	mov    edx,0x8
   14000727e:	call   0x140013350
   140007283:	test   eax,eax
   140007285:	jne    0x140007295
   140007287:	cmp    WORD PTR [rbx],bp
   14000728a:	je     0x1400072c7
   14000728c:	add    rbx,0x2
   140007290:	cmp    WORD PTR [rbx],bp
   140007293:	jne    0x140007276
   140007295:	mov    rax,QWORD PTR [rip+0x46d24]        # 0x14004dfc0
   14000729c:	mov    r8,rbx
   14000729f:	mov    rdx,rax
   1400072a2:	mov    ecx,0x6
   1400072a7:	call   0x140006fdc
   1400072ac:	mov    QWORD PTR [rip+0x46d0d],rbx        # 0x14004dfc0
   1400072b3:	jmp    0x14000731d
   1400072b5:	lea    rcx,[rip+0x46bf4]        # 0x14004deb0
   1400072bc:	mov    edx,0x1
   1400072c1:	call   0x140014a20
   1400072c6:	int3   
   1400072c7:	lea    rcx,[rip+0x46be2]        # 0x14004deb0
   1400072ce:	mov    edx,0x1
   1400072d3:	call   0x140014a20
   1400072d8:	int3   
   1400072d9:	add    rax,0x2
   1400072dd:	mov    QWORD PTR [rip+0x46cdc],rax        # 0x14004dfc0
   1400072e4:	mov    rbx,rax
   1400072e7:	movzx  ecx,WORD PTR [rax]
   1400072ea:	jmp    0x1400072fd
   1400072ec:	cmp    cx,dx
   1400072ef:	je     0x140007302
   1400072f1:	test   cx,cx
   1400072f4:	je     0x140007336
   1400072f6:	add    rbx,0x2
   1400072fa:	movzx  ecx,WORD PTR [rbx]
   1400072fd:	test   cx,cx
   140007300:	jne    0x1400072ec
   140007302:	mov    r8,rbx
   140007305:	mov    rdx,rax
   140007308:	mov    ecx,0x6
   14000730d:	call   0x140006fdc
   140007312:	lea    r11,[rbx+0x2]
   140007316:	mov    QWORD PTR [rip+0x46ca3],r11        # 0x14004dfc0
   14000731d:	mov    rcx,QWORD PTR [rip+0x46ca4]        # 0x14004dfc8
   140007324:	call   0x1400130e8
   140007329:	mov    rcx,rsi
   14000732c:	mov    rdx,rax
   14000732f:	call   0x14000712c
   140007334:	jmp    0x14000735c
   140007336:	lea    rcx,[rip+0x46b73]        # 0x14004deb0
   14000733d:	mov    edx,0x1
   140007342:	call   0x140014a20
   140007347:	int3   
   140007348:	lea    rcx,[rip+0x46b61]        # 0x14004deb0
   14000734f:	mov    edx,0x1
   140007354:	call   0x140014a20
   140007359:	int3   
   14000735a:	xor    eax,eax
   14000735c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007361:	mov    rbp,QWORD PTR [rsp+0x38]
   140007366:	mov    rsi,QWORD PTR [rsp+0x40]
   14000736b:	add    rsp,0x20
   14000736f:	pop    rdi
   140007370:	ret    
   140007371:	int3   
   140007372:	int3   
   140007373:	int3   
   140007374:	int3   
   140007375:	int3   
   140007376:	int3   
   140007377:	int3   
   140007378:	int3   
   140007379:	int3   
   14000737a:	int3   
   14000737b:	int3   
   14000737c:	test   rcx,rcx
   14000737f:	je     0x1400073b0
   140007381:	push   rbx
   140007382:	sub    rsp,0x20
   140007386:	mov    rbx,rcx
   140007389:	mov    rcx,QWORD PTR [rcx]
   14000738c:	call   0x1400130a8
   140007391:	mov    rcx,QWORD PTR [rbx+0x8]
   140007395:	call   0x1400130a8
   14000739a:	mov    rcx,QWORD PTR [rbx+0x10]
   14000739e:	call   0x14000737c
   1400073a3:	mov    rcx,rbx
   1400073a6:	call   0x1400130a8
   1400073ab:	add    rsp,0x20
   1400073af:	pop    rbx
   1400073b0:	ret    
   1400073b1:	int3   
   1400073b2:	int3   
   1400073b3:	int3   
   1400073b4:	int3   
   1400073b5:	int3   
   1400073b6:	int3   
   1400073b7:	int3   
   1400073b8:	int3   
   1400073b9:	int3   
   1400073ba:	int3   
   1400073bb:	int3   
   1400073bc:	mov    r10,rdx
   1400073bf:	test   rcx,rcx
   1400073c2:	je     0x1400073f7
   1400073c4:	cmp    DWORD PTR [rcx],0x0
   1400073c7:	jne    0x1400073ed
   1400073c9:	mov    rax,QWORD PTR [rcx+0x8]
   1400073cd:	mov    r8,r10
   1400073d0:	sub    r8,rax
   1400073d3:	movzx  edx,WORD PTR [rax]
   1400073d6:	movzx  r9d,WORD PTR [rax+r8*1]
   1400073db:	sub    edx,r9d
   1400073de:	jne    0x1400073e9
   1400073e0:	add    rax,0x2
   1400073e4:	test   r9d,r9d
   1400073e7:	jne    0x1400073d3
   1400073e9:	test   edx,edx
   1400073eb:	je     0x1400073f3
   1400073ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400073f1:	jmp    0x1400073bf
   1400073f3:	mov    rax,rcx
   1400073f6:	ret    
   1400073f7:	xor    eax,eax
   1400073f9:	ret    
   1400073fa:	int3   
   1400073fb:	int3   
   1400073fc:	int3   
   1400073fd:	int3   
   1400073fe:	int3   
   1400073ff:	int3   
   140007400:	int3   
   140007401:	int3   
   140007402:	int3   
   140007403:	int3   
   140007404:	int3   
   140007405:	int3   
   140007406:	int3   
   140007407:	int3   
   140007408:	int3   
   140007409:	int3   
   14000740a:	int3   
   14000740b:	int3   
   14000740c:	mov    r10,rdx
   14000740f:	jmp    0x140007438
   140007411:	mov    rax,QWORD PTR [rcx]
   140007414:	mov    r8,r10
   140007417:	sub    r8,rax
   14000741a:	movzx  edx,WORD PTR [rax]
   14000741d:	movzx  r9d,WORD PTR [rax+r8*1]
   140007422:	sub    edx,r9d
   140007425:	jne    0x140007430
   140007427:	add    rax,0x2
   14000742b:	test   r9d,r9d
   14000742e:	jne    0x14000741a
   140007430:	test   edx,edx
   140007432:	je     0x140007440
   140007434:	mov    rcx,QWORD PTR [rcx+0x10]
   140007438:	test   rcx,rcx
   14000743b:	jne    0x140007411
   14000743d:	xor    eax,eax
   14000743f:	ret    
   140007440:	mov    rax,QWORD PTR [rcx+0x8]
   140007444:	ret    
   140007445:	int3   
   140007446:	int3   
   140007447:	int3   
   140007448:	int3   
   140007449:	int3   
   14000744a:	int3   
   14000744b:	int3   
   14000744c:	test   rcx,rcx
   14000744f:	je     0x14000747a
   140007451:	push   rbx
   140007452:	sub    rsp,0x20
   140007456:	mov    rbx,rcx
   140007459:	mov    r8,QWORD PTR [rbx+0x8]
   14000745d:	mov    rdx,QWORD PTR [rbx]
   140007460:	lea    rcx,[rip+0x33129]        # 0x14003a590
   140007467:	call   0x1400145d4
   14000746c:	mov    rbx,QWORD PTR [rbx+0x10]
   140007470:	test   rbx,rbx
   140007473:	jne    0x140007459
   140007475:	add    rsp,0x20
   140007479:	pop    rbx
   14000747a:	ret    
   14000747b:	int3   
   14000747c:	int3   
   14000747d:	int3   
   14000747e:	int3   
   14000747f:	int3   
   140007480:	int3   
   140007481:	int3   
   140007482:	int3   
   140007483:	int3   
   140007484:	int3   
   140007485:	int3   
   140007486:	int3   
   140007487:	int3   
   140007488:	int3   
   140007489:	int3   
   14000748a:	int3   
   14000748b:	int3   
   14000748c:	test   ecx,ecx
   14000748e:	jle    0x1400074ad
   140007490:	push   rbx
   140007491:	sub    rsp,0x20
   140007495:	mov    ebx,ecx
   140007497:	lea    rcx,[rip+0x33106]        # 0x14003a5a4
   14000749e:	call   0x1400145d4
   1400074a3:	dec    rbx
   1400074a6:	jne    0x140007497
   1400074a8:	add    rsp,0x20
   1400074ac:	pop    rbx
   1400074ad:	ret    
   1400074ae:	int3   
   1400074af:	int3   
   1400074b0:	int3   
   1400074b1:	int3   
   1400074b2:	int3   
   1400074b3:	int3   
   1400074b4:	int3   
   1400074b5:	int3   
   1400074b6:	int3   
   1400074b7:	int3   
   1400074b8:	int3   
   1400074b9:	int3   
   1400074ba:	int3   
   1400074bb:	int3   
   1400074bc:	rex push rbx
   1400074be:	sub    rsp,0x20
   1400074c2:	mov    rdx,QWORD PTR [rip+0x3310f]        # 0x14003a5d8
   1400074c9:	mov    rbx,rcx
   1400074cc:	call   0x140013160
   1400074d1:	test   rax,rax
   1400074d4:	je     0x1400074dc
   1400074d6:	add    rax,0x10
   1400074da:	jmp    0x1400074e0
   1400074dc:	lea    rax,[rbx+0x2]
   1400074e0:	add    rsp,0x20
   1400074e4:	pop    rbx
   1400074e5:	ret    
   1400074e6:	int3   
   1400074e7:	int3   
   1400074e8:	int3   
   1400074e9:	int3   
   1400074ea:	int3   
   1400074eb:	int3   
   1400074ec:	sub    rsp,0x28
   1400074f0:	mov    rdx,rcx
   1400074f3:	mov    rcx,QWORD PTR [rip+0x330ce]        # 0x14003a5c8
   1400074fa:	mov    r8d,0x8
   140007500:	call   0x140013790
   140007505:	xor    ecx,ecx
   140007507:	test   eax,eax
   140007509:	sete   cl
   14000750c:	mov    eax,ecx
   14000750e:	add    rsp,0x28
   140007512:	ret    
   140007513:	int3   
   140007514:	int3   
   140007515:	int3   
   140007516:	int3   
   140007517:	int3   
   140007518:	int3   
   140007519:	int3   
   14000751a:	int3   
   14000751b:	int3   
   14000751c:	mov    QWORD PTR [rsp+0x8],rbx
   140007521:	mov    QWORD PTR [rsp+0x10],rbp
   140007526:	mov    QWORD PTR [rsp+0x18],rsi
   14000752b:	push   rdi
   14000752c:	sub    rsp,0x20
   140007530:	xor    esi,esi
   140007532:	mov    rbx,rcx
   140007535:	mov    rdi,rcx
   140007538:	cmp    WORD PTR [rcx],si
   14000753b:	je     0x1400076be
   140007541:	lea    ebp,[rsi+0x1]
   140007544:	mov    rcx,rbx
   140007547:	call   0x1400074ec
   14000754c:	mov    rcx,rbx
   14000754f:	test   eax,eax
   140007551:	je     0x14000757b
   140007553:	call   0x1400074bc
   140007558:	jmp    0x140007571
   14000755a:	movzx  ecx,WORD PTR [rbx]
   14000755d:	mov    WORD PTR [rdi],cx
   140007560:	add    rdi,0x2
   140007564:	cmp    WORD PTR [rbx],si
   140007567:	je     0x1400076d6
   14000756d:	add    rbx,0x2
   140007571:	cmp    rbx,rax
   140007574:	jb     0x14000755a
   140007576:	jmp    0x1400076b5
   14000757b:	lea    rdx,[rip+0x32f6e]        # 0x14003a4f0
   140007582:	mov    r8d,0x5
   140007588:	call   0x140013790
   14000758d:	test   eax,eax
   14000758f:	jne    0x1400075b8
   140007591:	mov    eax,0x26
   140007596:	mov    WORD PTR [rdi],ax
   140007599:	add    rdi,0x2
   14000759d:	mov    eax,esi
   14000759f:	cmp    WORD PTR [rbx],si
   1400075a2:	je     0x1400076e5
   1400075a8:	add    eax,ebp
   1400075aa:	add    rbx,0x2
   1400075ae:	cmp    eax,0x5
   1400075b1:	jl     0x14000759f
   1400075b3:	jmp    0x1400076b5
   1400075b8:	lea    rdx,[rip+0x32f41]        # 0x14003a500
   1400075bf:	mov    r8d,0x4
   1400075c5:	mov    rcx,rbx
   1400075c8:	call   0x140013790
   1400075cd:	test   eax,eax
   1400075cf:	jne    0x1400075f4
   1400075d1:	mov    eax,0x3c
   1400075d6:	mov    WORD PTR [rdi],ax
   1400075d9:	mov    eax,esi
   1400075db:	cmp    WORD PTR [rbx],si
   1400075de:	je     0x1400076f4
   1400075e4:	add    eax,ebp
   1400075e6:	add    rbx,0x2
   1400075ea:	cmp    eax,0x4
   1400075ed:	jl     0x1400075db
   1400075ef:	jmp    0x1400076b5
   1400075f4:	lea    rdx,[rip+0x32f15]        # 0x14003a510
   1400075fb:	mov    r8d,0x4
   140007601:	mov    rcx,rbx
   140007604:	call   0x140013790
   140007609:	test   eax,eax
   14000760b:	jne    0x140007630
   14000760d:	mov    eax,0x3e
   140007612:	mov    WORD PTR [rdi],ax
   140007615:	mov    eax,esi
   140007617:	cmp    WORD PTR [rbx],si
   14000761a:	je     0x140007703
   140007620:	add    eax,ebp
   140007622:	add    rbx,0x2
   140007626:	cmp    eax,0x4
   140007629:	jl     0x140007617
   14000762b:	jmp    0x1400076b5
   140007630:	lea    rdx,[rip+0x32ee9]        # 0x14003a520
   140007637:	mov    r8d,0x6
   14000763d:	mov    rcx,rbx
   140007640:	call   0x140013790
   140007645:	test   eax,eax
   140007647:	jne    0x140007669
   140007649:	mov    eax,0x27
   14000764e:	mov    WORD PTR [rdi],ax
   140007651:	mov    eax,esi
   140007653:	cmp    WORD PTR [rbx],si
   140007656:	je     0x140007712
   14000765c:	add    eax,ebp
   14000765e:	add    rbx,0x2
   140007662:	cmp    eax,0x6
   140007665:	jl     0x140007653
   140007667:	jmp    0x1400076b5
   140007669:	lea    rdx,[rip+0x32ec0]        # 0x14003a530
   140007670:	mov    r8d,0x7
   140007676:	mov    rcx,rbx
   140007679:	call   0x140013790
   14000767e:	test   eax,eax
   140007680:	jne    0x1400076a2
   140007682:	mov    eax,0x22
   140007687:	mov    WORD PTR [rdi],ax
   14000768a:	mov    eax,esi
   14000768c:	cmp    WORD PTR [rbx],si
   14000768f:	je     0x140007721
   140007695:	add    eax,ebp
   140007697:	add    rbx,0x2
   14000769b:	cmp    eax,0x7
   14000769e:	jl     0x14000768c
   1400076a0:	jmp    0x1400076b5
   1400076a2:	movzx  eax,WORD PTR [rbx]
   1400076a5:	mov    WORD PTR [rdi],ax
   1400076a8:	add    rdi,0x2
   1400076ac:	cmp    WORD PTR [rbx],si
   1400076af:	je     0x140007730
   1400076b1:	add    rbx,0x2
   1400076b5:	cmp    WORD PTR [rbx],si
   1400076b8:	jne    0x140007544
   1400076be:	mov    rbx,QWORD PTR [rsp+0x30]
   1400076c3:	mov    rbp,QWORD PTR [rsp+0x38]
   1400076c8:	mov    WORD PTR [rdi],si
   1400076cb:	mov    rsi,QWORD PTR [rsp+0x40]
   1400076d0:	add    rsp,0x20
   1400076d4:	pop    rdi
   1400076d5:	ret    
   1400076d6:	lea    rcx,[rip+0x467d3]        # 0x14004deb0
   1400076dd:	mov    edx,ebp
   1400076df:	call   0x140014a20
   1400076e4:	int3   
   1400076e5:	lea    rcx,[rip+0x467c4]        # 0x14004deb0
   1400076ec:	mov    edx,ebp
   1400076ee:	call   0x140014a20
   1400076f3:	int3   
   1400076f4:	lea    rcx,[rip+0x467b5]        # 0x14004deb0
   1400076fb:	mov    edx,ebp
   1400076fd:	call   0x140014a20
   140007702:	int3   
   140007703:	lea    rcx,[rip+0x467a6]        # 0x14004deb0
   14000770a:	mov    edx,ebp
   14000770c:	call   0x140014a20
   140007711:	int3   
   140007712:	lea    rcx,[rip+0x46797]        # 0x14004deb0
   140007719:	mov    edx,ebp
   14000771b:	call   0x140014a20
   140007720:	int3   
   140007721:	lea    rcx,[rip+0x46788]        # 0x14004deb0
   140007728:	mov    edx,ebp
   14000772a:	call   0x140014a20
   14000772f:	int3   
   140007730:	lea    rcx,[rip+0x46779]        # 0x14004deb0
   140007737:	mov    edx,ebp
   140007739:	call   0x140014a20
   14000773e:	int3   
   14000773f:	int3   
   140007740:	int3   
   140007741:	int3   
   140007742:	int3   
   140007743:	int3   
   140007744:	int3   
   140007745:	int3   
   140007746:	int3   
   140007747:	int3   
   140007748:	int3   
   140007749:	int3   
   14000774a:	int3   
   14000774b:	int3   
   14000774c:	mov    QWORD PTR [rsp+0x8],rbx
   140007751:	mov    QWORD PTR [rsp+0x10],rsi
   140007756:	push   rdi
   140007757:	sub    rsp,0x20
   14000775b:	call   0x14000707c
   140007760:	xor    esi,esi
   140007762:	mov    rdi,rax
   140007765:	test   rax,rax
   140007768:	je     0x14000787e
   14000776e:	cmp    WORD PTR [rax],si
   140007771:	je     0x14000787e
   140007777:	cmp    WORD PTR [rax],0x3c
   14000777b:	jne    0x1400077b8
   14000777d:	lea    rbx,[rax+0x2]
   140007781:	cmp    WORD PTR [rbx],0x2f
   140007785:	jne    0x140007798
   140007787:	lea    rbx,[rax+0x4]
   14000778b:	mov    rcx,rbx
   14000778e:	call   0x140006cfc
   140007793:	lea    ecx,[rsi+0x2]
   140007796:	jmp    0x1400077a5
   140007798:	mov    rcx,rbx
   14000779b:	call   0x140006cfc
   1400077a0:	mov    ecx,0x1
   1400077a5:	mov    rdx,rbx
   1400077a8:	mov    r8,rax
   1400077ab:	mov    rdi,rax
   1400077ae:	call   0x140006fdc
   1400077b3:	jmp    0x140007863
   1400077b8:	cmp    WORD PTR [rax],0x3e
   1400077bc:	jne    0x1400077d1
   1400077be:	mov    DWORD PTR [rip+0x467e8],0x3        # 0x14004dfb0
   1400077c8:	add    rdi,0x2
   1400077cc:	jmp    0x140007863
   1400077d1:	cmp    WORD PTR [rax],0x2f
   1400077d5:	jne    0x14000780e
   1400077d7:	cmp    WORD PTR [rax+0x2],0x3e
   1400077dc:	jne    0x14000780e
   1400077de:	mov    DWORD PTR [rip+0x467c8],0x4        # 0x14004dfb0
   1400077e8:	mov    eax,esi
   1400077ea:	cmp    WORD PTR [rdi],si
   1400077ed:	je     0x1400077fc
   1400077ef:	inc    eax
   1400077f1:	add    rdi,0x2
   1400077f5:	cmp    eax,0x2
   1400077f8:	jl     0x1400077ea
   1400077fa:	jmp    0x140007863
   1400077fc:	lea    rcx,[rip+0x466ad]        # 0x14004deb0
   140007803:	mov    edx,0x1
   140007808:	call   0x140014a20
   14000780d:	int3   
   14000780e:	lea    rbx,[rax+0x2]
   140007812:	jmp    0x14000783c
   140007814:	cmp    ax,0x3c
   140007818:	je     0x140007844
   14000781a:	mov    rcx,rbx
   14000781d:	call   0x1400074ec
   140007822:	test   eax,eax
   140007824:	je     0x140007833
   140007826:	mov    rcx,rbx
   140007829:	call   0x1400074bc
   14000782e:	mov    rbx,rax
   140007831:	jmp    0x14000783c
   140007833:	cmp    WORD PTR [rbx],si
   140007836:	je     0x14000786c
   140007838:	add    rbx,0x2
   14000783c:	movzx  eax,WORD PTR [rbx]
   14000783f:	test   ax,ax
   140007842:	jne    0x140007814
   140007844:	mov    r8,rbx
   140007847:	mov    rdx,rdi
   14000784a:	mov    ecx,0x5
   14000784f:	call   0x140006fdc
   140007854:	mov    rcx,QWORD PTR [rip+0x4676d]        # 0x14004dfc8
   14000785b:	call   0x14000751c
   140007860:	mov    rdi,rbx
   140007863:	mov    QWORD PTR [rip+0x46756],rdi        # 0x14004dfc0
   14000786a:	jmp    0x140007888
   14000786c:	lea    rcx,[rip+0x4663d]        # 0x14004deb0
   140007873:	mov    edx,0x1
   140007878:	call   0x140014a20
   14000787d:	int3   
   14000787e:	mov    DWORD PTR [rip+0x46728],0x7        # 0x14004dfb0
   140007888:	mov    rbx,QWORD PTR [rsp+0x30]
   14000788d:	mov    rsi,QWORD PTR [rsp+0x38]
   140007892:	add    rsp,0x20
   140007896:	pop    rdi
   140007897:	ret    
   140007898:	int3   
   140007899:	int3   
   14000789a:	int3   
   14000789b:	int3   
   14000789c:	int3   
   14000789d:	int3   
   14000789e:	int3   
   14000789f:	int3   
   1400078a0:	int3   
   1400078a1:	int3   
   1400078a2:	int3   
   1400078a3:	int3   
   1400078a4:	int3   
   1400078a5:	int3   
   1400078a6:	int3   
   1400078a7:	int3   
   1400078a8:	int3   
   1400078a9:	int3   
   1400078aa:	int3   
   1400078ab:	int3   
   1400078ac:	rex push rbx
   1400078ae:	sub    rsp,0x20
   1400078b2:	mov    eax,DWORD PTR [rip+0x466f8]        # 0x14004dfb0
   1400078b8:	cmp    eax,0x1
   1400078bb:	jne    0x140007992
   1400078c1:	mov    rcx,QWORD PTR [rip+0x46700]        # 0x14004dfc8
   1400078c8:	call   0x1400130e8
   1400078cd:	xor    ecx,ecx
   1400078cf:	mov    rdx,rax
   1400078d2:	call   0x1400070dc
   1400078d7:	mov    rcx,QWORD PTR [rip+0x466da]        # 0x14004dfb8
   1400078de:	test   rcx,rcx
   1400078e1:	mov    rbx,rax
   1400078e4:	cmove  rcx,rax
   1400078e8:	mov    QWORD PTR [rip+0x466c9],rcx        # 0x14004dfb8
   1400078ef:	jmp    0x1400078fd
   1400078f1:	mov    rcx,QWORD PTR [rbx+0x20]
   1400078f5:	mov    QWORD PTR [rax+0x10],rcx
   1400078f9:	mov    QWORD PTR [rbx+0x20],rax
   1400078fd:	call   0x14000716c
   140007902:	test   rax,rax
   140007905:	jne    0x1400078f1
   140007907:	call   0x14000774c
   14000790c:	mov    eax,DWORD PTR [rip+0x4669e]        # 0x14004dfb0
   140007912:	cmp    eax,0x4
   140007915:	je     0x140007974
   140007917:	cmp    eax,0x3
   14000791a:	je     0x140007939
   14000791c:	cmp    eax,0x7
   14000791f:	je     0x140007939
   140007921:	mov    ecx,0xa
   140007926:	call   0x14000bd98
   14000792b:	mov    rcx,rax
   14000792e:	call   0x14000c328
   140007933:	mov    eax,DWORD PTR [rip+0x46677]        # 0x14004dfb0
   140007939:	cmp    eax,0x4
   14000793c:	je     0x140007974
   14000793e:	cmp    eax,0x3
   140007941:	jne    0x14000797f
   140007943:	call   0x14000774c
   140007948:	call   0x1400078ac
   14000794d:	mov    QWORD PTR [rbx+0x18],rax
   140007951:	mov    eax,DWORD PTR [rip+0x46659]        # 0x14004dfb0
   140007957:	cmp    eax,0x2
   14000795a:	jne    0x14000797f
   14000795c:	call   0x14000774c
   140007961:	mov    r11d,DWORD PTR [rip+0x46648]        # 0x14004dfb0
   140007968:	cmp    r11d,0x7
   14000796c:	je     0x140007974
   14000796e:	cmp    r11d,0x3
   140007972:	jne    0x14000795c
   140007974:	call   0x14000774c
   140007979:	mov    eax,DWORD PTR [rip+0x46631]        # 0x14004dfb0
   14000797f:	cmp    eax,0x7
   140007982:	je     0x14000798d
   140007984:	call   0x1400078ac
   140007989:	mov    QWORD PTR [rbx+0x10],rax
   14000798d:	mov    rax,rbx
   140007990:	jmp    0x1400079d1
   140007992:	cmp    eax,0x5
   140007995:	jne    0x1400079cf
   140007997:	mov    rcx,QWORD PTR [rip+0x4662a]        # 0x14004dfc8
   14000799e:	call   0x1400130e8
   1400079a3:	mov    ecx,0x1
   1400079a8:	mov    rdx,rax
   1400079ab:	call   0x1400070dc
   1400079b0:	mov    rcx,QWORD PTR [rip+0x46601]        # 0x14004dfb8
   1400079b7:	test   rcx,rcx
   1400079ba:	mov    rbx,rax
   1400079bd:	cmove  rcx,rax
   1400079c1:	mov    QWORD PTR [rip+0x465f0],rcx        # 0x14004dfb8
   1400079c8:	call   0x14000774c
   1400079cd:	jmp    0x14000798d
   1400079cf:	xor    eax,eax
   1400079d1:	add    rsp,0x20
   1400079d5:	pop    rbx
   1400079d6:	ret    
   1400079d7:	int3   
   1400079d8:	int3   
   1400079d9:	int3   
   1400079da:	int3   
   1400079db:	int3   
   1400079dc:	int3   
   1400079dd:	int3   
   1400079de:	int3   
   1400079df:	int3   
   1400079e0:	int3   
   1400079e1:	int3   
   1400079e2:	int3   
   1400079e3:	int3   
   1400079e4:	int3   
   1400079e5:	int3   
   1400079e6:	int3   
   1400079e7:	int3   
   1400079e8:	int3   
   1400079e9:	int3   
   1400079ea:	int3   
   1400079eb:	int3   
   1400079ec:	test   rcx,rcx
   1400079ef:	je     0x140007a2a
   1400079f1:	push   rbx
   1400079f2:	sub    rsp,0x20
   1400079f6:	mov    rbx,rcx
   1400079f9:	mov    rcx,QWORD PTR [rcx+0x18]
   1400079fd:	call   0x1400079ec
   140007a02:	mov    rcx,QWORD PTR [rbx+0x10]
   140007a06:	call   0x1400079ec
   140007a0b:	mov    rcx,QWORD PTR [rbx+0x20]
   140007a0f:	call   0x14000737c
   140007a14:	mov    rcx,QWORD PTR [rbx+0x8]
   140007a18:	call   0x1400130a8
   140007a1d:	mov    rcx,rbx
   140007a20:	call   0x1400130a8
   140007a25:	add    rsp,0x20
   140007a29:	pop    rbx
   140007a2a:	ret    
   140007a2b:	int3   
   140007a2c:	int3   
   140007a2d:	int3   
   140007a2e:	int3   
   140007a2f:	int3   
   140007a30:	int3   
   140007a31:	int3   
   140007a32:	int3   
   140007a33:	int3   
   140007a34:	int3   
   140007a35:	int3   
   140007a36:	int3   
   140007a37:	int3   
   140007a38:	int3   
   140007a39:	int3   
   140007a3a:	int3   
   140007a3b:	int3   
   140007a3c:	test   rcx,rcx
   140007a3f:	je     0x140007ae9
   140007a45:	mov    QWORD PTR [rsp+0x8],rbx
   140007a4a:	push   rdi
   140007a4b:	sub    rsp,0x20
   140007a4f:	mov    edi,edx
   140007a51:	mov    rbx,rcx
   140007a54:	cmp    DWORD PTR [rbx],0x0
   140007a57:	jne    0x140007ac2
   140007a59:	lea    rcx,[rip+0x32aac]        # 0x14003a50c
   140007a60:	call   0x1400145d4
   140007a65:	mov    ecx,edi
   140007a67:	call   0x14000748c
   140007a6c:	mov    rdx,QWORD PTR [rbx+0x8]
   140007a70:	lea    rcx,[rip+0x32af1]        # 0x14003a568
   140007a77:	call   0x1400145d4
   140007a7c:	mov    rcx,QWORD PTR [rbx+0x20]
   140007a80:	call   0x14000744c
   140007a85:	cmp    QWORD PTR [rbx+0x18],0x0
   140007a8a:	jne    0x140007a9a
   140007a8c:	lea    rcx,[rip+0x32add]        # 0x14003a570
   140007a93:	call   0x1400145d4
   140007a98:	jmp    0x140007ad2
   140007a9a:	lea    rcx,[rip+0x32a7b]        # 0x14003a51c
   140007aa1:	call   0x1400145d4
   140007aa6:	mov    rcx,QWORD PTR [rbx+0x18]
   140007aaa:	lea    edx,[rdi+0x1]
   140007aad:	call   0x140007a3c
   140007ab2:	mov    ecx,edi
   140007ab4:	call   0x14000748c
   140007ab9:	lea    rcx,[rip+0x32ab8]        # 0x14003a578
   140007ac0:	jmp    0x140007ac9
   140007ac2:	lea    rcx,[rip+0x32abb]        # 0x14003a584
   140007ac9:	mov    rdx,QWORD PTR [rbx+0x8]
   140007acd:	call   0x1400145d4
   140007ad2:	mov    rbx,QWORD PTR [rbx+0x10]
   140007ad6:	test   rbx,rbx
   140007ad9:	jne    0x140007a54
   140007adf:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ae4:	add    rsp,0x20
   140007ae8:	pop    rdi
   140007ae9:	ret    
   140007aea:	int3   
   140007aeb:	int3   
   140007aec:	int3   
   140007aed:	int3   
   140007aee:	int3   
   140007aef:	int3   
   140007af0:	int3   
   140007af1:	int3   
   140007af2:	int3   
   140007af3:	int3   
   140007af4:	int3   
   140007af5:	int3   
   140007af6:	int3   
   140007af7:	int3   
   140007af8:	int3   
   140007af9:	int3   
   140007afa:	int3   
   140007afb:	int3   
   140007afc:	mov    QWORD PTR [rsp+0x8],rcx
   140007b01:	push   rbx
   140007b02:	sub    rsp,0x20
   140007b06:	lea    rcx,[rip+0x463a3]        # 0x14004deb0
   140007b0d:	mov    rdx,rsp
   140007b10:	call   0x140014e60
   140007b15:	xor    ebx,ebx
   140007b17:	test   eax,eax
   140007b19:	je     0x140007b66
   140007b1b:	dec    eax
   140007b1d:	jne    0x140007b7f
   140007b1f:	mov    rcx,QWORD PTR [rip+0x46492]        # 0x14004dfb8
   140007b26:	test   rcx,rcx
   140007b29:	je     0x140007b37
   140007b2b:	call   0x1400079ec
   140007b30:	mov    QWORD PTR [rip+0x46481],rbx        # 0x14004dfb8
   140007b37:	mov    rcx,QWORD PTR [rip+0x4648a]        # 0x14004dfc8
   140007b3e:	test   rcx,rcx
   140007b41:	je     0x140007b48
   140007b43:	call   0x1400130a8
   140007b48:	call   0x140014c3c
   140007b4d:	lea    rdx,[rip+0x329ec]        # 0x14003a540
   140007b54:	lea    rcx,[rax+0x60]
   140007b58:	call   0x140014b0c
   140007b5d:	or     ecx,0xffffffff
   140007b60:	call   0x140013c2c
   140007b65:	int3   
   140007b66:	mov    rax,QWORD PTR [rsp+0x30]
   140007b6b:	mov    QWORD PTR [rip+0x4644e],rax        # 0x14004dfc0
   140007b72:	call   0x14000774c
   140007b77:	call   0x1400078ac
   140007b7c:	mov    rbx,rax
   140007b7f:	mov    rax,rbx
   140007b82:	add    rsp,0x20
   140007b86:	pop    rbx
   140007b87:	ret    
   140007b88:	mov    QWORD PTR [rsp+0x10],rbx
   140007b8d:	mov    QWORD PTR [rsp+0x18],rsi
   140007b92:	push   rdi
   140007b93:	sub    rsp,0x30
   140007b97:	and    QWORD PTR [rsp+0x40],0x0
   140007b9d:	xor    eax,eax
   140007b9f:	mov    rbx,rcx
   140007ba2:	test   rcx,rcx
   140007ba5:	je     0x140007be7
   140007ba7:	or     rcx,0xffffffffffffffff
   140007bab:	mov    rdi,rbx
   140007bae:	lea    edx,[rax+0x2]
   140007bb1:	repnz scas ax,WORD PTR es:[rdi]
   140007bb4:	not    rcx
   140007bb7:	and    ecx,ecx
   140007bb9:	movsxd rdi,ecx
   140007bbc:	mov    rcx,rdi
   140007bbf:	call   0x140012bd4
   140007bc4:	mov    rsi,rax
   140007bc7:	test   rax,rax
   140007bca:	je     0x140007be7
   140007bcc:	lea    rcx,[rsp+0x40]
   140007bd1:	mov    r9,rbx
   140007bd4:	mov    r8,rdi
   140007bd7:	mov    rdx,rax
   140007bda:	mov    QWORD PTR [rsp+0x20],rdi
   140007bdf:	call   0x140012bb4
   140007be4:	mov    rax,rsi
   140007be7:	mov    rbx,QWORD PTR [rsp+0x48]
   140007bec:	mov    rsi,QWORD PTR [rsp+0x50]
   140007bf1:	add    rsp,0x30
   140007bf5:	pop    rdi
   140007bf6:	ret    
   140007bf7:	int3   
   140007bf8:	int3   
   140007bf9:	int3   
   140007bfa:	int3   
   140007bfb:	int3   
   140007bfc:	int3   
   140007bfd:	int3   
   140007bfe:	int3   
   140007bff:	int3   
   140007c00:	int3   
   140007c01:	int3   
   140007c02:	int3   
   140007c03:	int3   
   140007c04:	int3   
   140007c05:	int3   
   140007c06:	int3   
   140007c07:	int3   
   140007c08:	mov    rax,rsp
   140007c0b:	mov    QWORD PTR [rax+0x8],rbx
   140007c0f:	mov    QWORD PTR [rax+0x10],rbp
   140007c13:	mov    QWORD PTR [rax+0x18],rsi
   140007c17:	mov    QWORD PTR [rax+0x20],rdi
   140007c1b:	push   r12
   140007c1d:	sub    rsp,0x20
   140007c21:	call   0x1400130e8
   140007c26:	or     rsi,0xffffffffffffffff
   140007c2a:	lea    rdi,[rip+0x329af]        # 0x14003a5e0
   140007c31:	mov    rbx,rax
   140007c34:	xor    eax,eax
   140007c36:	mov    rcx,rsi
   140007c39:	repnz scas ax,WORD PTR es:[rdi]
   140007c3c:	mov    rdi,rbx
   140007c3f:	not    rcx
   140007c42:	lea    rbp,[rcx-0x1]
   140007c46:	mov    rcx,rsi
   140007c49:	repnz scas ax,WORD PTR es:[rdi]
   140007c4c:	mov    ebp,ebp
   140007c4e:	not    rcx
   140007c51:	dec    rcx
   140007c54:	cmp    rcx,rbp
   140007c57:	jb     0x140007c94
   140007c59:	lea    rdx,[rip+0x329b0]        # 0x14003a610
   140007c60:	mov    r8d,ebp
   140007c63:	mov    rcx,rbx
   140007c66:	call   0x140013790
   140007c6b:	xor    r12d,r12d
   140007c6e:	test   eax,eax
   140007c70:	jne    0x140007c94
   140007c72:	lea    rdi,[rbx+rbp*2]
   140007c76:	lea    edx,[rsi+0x2f]
   140007c79:	mov    rcx,rdi
   140007c7c:	call   0x140014680
   140007c81:	test   rax,rax
   140007c84:	je     0x140007c94
   140007c86:	mov    rcx,rdi
   140007c89:	mov    WORD PTR [rax],r12w
   140007c8d:	call   0x140013c8c
   140007c92:	mov    esi,eax
   140007c94:	mov    rcx,rbx
   140007c97:	call   0x1400130a8
   140007c9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ca1:	mov    rbp,QWORD PTR [rsp+0x38]
   140007ca6:	mov    rdi,QWORD PTR [rsp+0x48]
   140007cab:	mov    eax,esi
   140007cad:	mov    rsi,QWORD PTR [rsp+0x40]
   140007cb2:	add    rsp,0x20
   140007cb6:	pop    r12
   140007cb8:	ret    
   140007cb9:	int3   
   140007cba:	int3   
   140007cbb:	int3   
   140007cbc:	int3   
   140007cbd:	int3   
   140007cbe:	int3   
   140007cbf:	int3   
   140007cc0:	int3   
   140007cc1:	int3   
   140007cc2:	int3   
   140007cc3:	int3   
   140007cc4:	int3   
   140007cc5:	int3   
   140007cc6:	int3   
   140007cc7:	int3   
   140007cc8:	mov    rax,rsp
   140007ccb:	mov    QWORD PTR [rax+0x8],rbx
   140007ccf:	mov    QWORD PTR [rax+0x10],rbp
   140007cd3:	mov    QWORD PTR [rax+0x18],rsi
   140007cd7:	mov    QWORD PTR [rax+0x20],rdi
   140007cdb:	push   r12
   140007cdd:	push   r13
   140007cdf:	push   r14
   140007ce1:	sub    rsp,0x20
   140007ce5:	mov    rsi,rdx
   140007ce8:	mov    rbx,rcx
   140007ceb:	call   0x1400130e8
   140007cf0:	mov    rcx,rax
   140007cf3:	mov    edx,0x5c
   140007cf8:	mov    rdi,rax
   140007cfb:	call   0x1400149dc
   140007d00:	xor    r13d,r13d
   140007d03:	test   rax,rax
   140007d06:	je     0x140007d27
   140007d08:	cmp    rax,rdi
   140007d0b:	jbe    0x140007d1a
   140007d0d:	cmp    WORD PTR [rax-0x2],0x3a
   140007d12:	je     0x140007d1a
   140007d14:	mov    WORD PTR [rax],r13w
   140007d18:	jmp    0x140007d1f
   140007d1a:	mov    WORD PTR [rax+0x2],r13w
   140007d1f:	mov    rcx,rdi
   140007d22:	call   0x140009d58
   140007d27:	mov    rcx,rdi
   140007d2a:	call   0x1400130a8
   140007d2f:	lea    rdx,[rip+0x3290a]        # 0x14003a640
   140007d36:	mov    rcx,rbx
   140007d39:	call   0x1400152e0
   140007d3e:	mov    r12,rax
   140007d41:	test   rax,rax
   140007d44:	je     0x140007f8a
   140007d4a:	test   rsi,rsi
   140007d4d:	je     0x140007f82
   140007d53:	mov    r14d,0x1
   140007d59:	mov    rcx,QWORD PTR [rsi]
   140007d5c:	call   0x140007c08
   140007d61:	mov    edi,eax
   140007d63:	cmp    eax,0xffffffff
   140007d66:	je     0x140007d83
   140007d68:	mov    ecx,eax
   140007d6a:	call   0x140004c70
   140007d6f:	test   eax,eax
   140007d71:	je     0x140007d83
   140007d73:	mov    ecx,edi
   140007d75:	call   0x140004cb0
   140007d7a:	cmp    eax,r14d
   140007d7d:	jne    0x140007f75
   140007d83:	mov    rbp,QWORD PTR [rsi]
   140007d86:	test   rbp,rbp
   140007d89:	je     0x140007f75
   140007d8f:	mov    rdi,QWORD PTR [rsi+0x8]
   140007d93:	test   rdi,rdi
   140007d96:	je     0x140007f75
   140007d9c:	or     rcx,0xffffffffffffffff
   140007da0:	xor    eax,eax
   140007da2:	repnz scas ax,WORD PTR es:[rdi]
   140007da5:	mov    rdi,rbp
   140007da8:	not    rcx
   140007dab:	sub    rcx,r14
   140007dae:	mov    rdx,rcx
   140007db1:	or     rcx,0xffffffffffffffff
   140007db5:	repnz scas ax,WORD PTR es:[rdi]
   140007db8:	not    rcx
   140007dbb:	sub    rcx,r14
   140007dbe:	add    rdx,rcx
   140007dc1:	lea    ecx,[rax+0x2]
   140007dc4:	lea    rdx,[rdx+rdx*1+0x10]
   140007dc9:	call   0x140012bd4
   140007dce:	mov    edx,r13d
   140007dd1:	mov    rcx,r13
   140007dd4:	mov    rbx,rax
   140007dd7:	mov    r9d,0x5c
   140007ddd:	movzx  eax,WORD PTR [rbp+0x0]
   140007de1:	test   ax,ax
   140007de4:	je     0x140007e0b
   140007de6:	cmp    ax,r9w
   140007dea:	jne    0x140007df7
   140007dec:	mov    WORD PTR [rbx+rcx*2],r9w
   140007df1:	add    edx,r14d
   140007df4:	add    rcx,r14
   140007df7:	movzx  eax,WORD PTR [rbp+0x0]
   140007dfb:	add    edx,r14d
   140007dfe:	mov    WORD PTR [rbx+rcx*2],ax
   140007e02:	add    rcx,r14
   140007e05:	add    rbp,0x2
   140007e09:	jmp    0x140007ddd
   140007e0b:	mov    eax,0x3d
   140007e10:	add    edx,r14d
   140007e13:	mov    WORD PTR [rbx+rcx*2],ax
   140007e17:	mov    r8,QWORD PTR [rsi+0x10]
   140007e1b:	test   r8,r8
   140007e1e:	je     0x140007ea9
   140007e24:	or     rdx,0xffffffffffffffff
   140007e28:	xor    eax,eax
   140007e2a:	mov    rdi,rbx
   140007e2d:	mov    rcx,rdx
   140007e30:	repnz scas ax,WORD PTR es:[rdi]
   140007e33:	xor    ecx,ecx
   140007e35:	movzx  eax,WORD PTR [r8+rcx*1]
   140007e3a:	add    rcx,0x2
   140007e3e:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   140007e43:	test   ax,ax
   140007e46:	jne    0x140007e35
   140007e48:	xor    eax,eax
   140007e4a:	mov    rcx,rdx
   140007e4d:	mov    rdi,rbx
   140007e50:	repnz scas ax,WORD PTR es:[rdi]
   140007e53:	xor    ecx,ecx
   140007e55:	lea    rdx,[rip+0x327ec]        # 0x14003a648
   140007e5c:	movzx  eax,WORD PTR [rdx+rcx*1]
   140007e60:	add    rcx,0x2
   140007e64:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   140007e69:	test   ax,ax
   140007e6c:	jne    0x140007e5c
   140007e6e:	mov    rcx,rbx
   140007e71:	call   0x140007b88
   140007e76:	mov    rbp,rax
   140007e79:	test   rax,rax
   140007e7c:	je     0x140007f68
   140007e82:	or     rcx,0xffffffffffffffff
   140007e86:	xor    eax,eax
   140007e88:	mov    rdi,rbp
   140007e8b:	repnz scas al,BYTE PTR es:[rdi]
   140007e8d:	mov    r9,r12
   140007e90:	mov    rdx,r14
   140007e93:	not    rcx
   140007e96:	sub    rcx,r14
   140007e99:	mov    r8,rcx
   140007e9c:	mov    rcx,rbp
   140007e9f:	call   0x140015170
   140007ea4:	jmp    0x140007f60
   140007ea9:	mov    rdi,QWORD PTR [rsi+0x8]
   140007ead:	jmp    0x140007ef7
   140007eaf:	add    edx,r14d
   140007eb2:	cmp    cx,r9w
   140007eb6:	jne    0x140007eef
   140007eb8:	movsxd rcx,edx
   140007ebb:	add    edx,r14d
   140007ebe:	cmp    WORD PTR [rdi+0x2],r9w
   140007ec3:	jne    0x140007ecc
   140007ec5:	mov    WORD PTR [rbx+rax*2],r9w
   140007eca:	jmp    0x140007ed8
   140007ecc:	cmp    WORD PTR [rdi+0x2],0x3a
   140007ed1:	mov    WORD PTR [rbx+rax*2],r9w
   140007ed6:	jne    0x140007ee6
   140007ed8:	movzx  eax,WORD PTR [rdi+0x2]
   140007edc:	add    rdi,0x4
   140007ee0:	mov    WORD PTR [rbx+rcx*2],ax
   140007ee4:	jmp    0x140007ef7
   140007ee6:	movzx  eax,WORD PTR [rdi]
   140007ee9:	mov    WORD PTR [rbx+rcx*2],ax
   140007eed:	jmp    0x140007ef3
   140007eef:	mov    WORD PTR [rbx+rax*2],cx
   140007ef3:	add    rdi,0x2
   140007ef7:	movzx  ecx,WORD PTR [rdi]
   140007efa:	movsxd rax,edx
   140007efd:	test   cx,cx
   140007f00:	jne    0x140007eaf
   140007f02:	mov    WORD PTR [rbx+rax*2],r13w
   140007f07:	or     rcx,0xffffffffffffffff
   140007f0b:	xor    eax,eax
   140007f0d:	mov    rdi,rbx
   140007f10:	lea    rdx,[rip+0x32735]        # 0x14003a64c
   140007f17:	repnz scas ax,WORD PTR es:[rdi]
   140007f1a:	xor    ecx,ecx
   140007f1c:	movzx  eax,WORD PTR [rdx+rcx*1]
   140007f20:	add    rcx,0x2
   140007f24:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   140007f29:	test   ax,ax
   140007f2c:	jne    0x140007f1c
   140007f2e:	mov    rcx,rbx
   140007f31:	call   0x14000a4ec
   140007f36:	or     rcx,0xffffffffffffffff
   140007f3a:	mov    r9,r12
   140007f3d:	mov    rbp,rax
   140007f40:	xor    eax,eax
   140007f42:	mov    rdx,r14
   140007f45:	mov    rdi,rbp
   140007f48:	repnz scas al,BYTE PTR es:[rdi]
   140007f4a:	not    rcx
   140007f4d:	sub    rcx,r14
   140007f50:	mov    r8,rcx
   140007f53:	mov    rcx,rbp
   140007f56:	call   0x140015170
   140007f5b:	test   rbp,rbp
   140007f5e:	je     0x140007f68
   140007f60:	mov    rcx,rbp
   140007f63:	call   0x1400130a8
   140007f68:	test   rbx,rbx
   140007f6b:	je     0x140007f75
   140007f6d:	mov    rcx,rbx
   140007f70:	call   0x1400130a8
   140007f75:	mov    rsi,QWORD PTR [rsi+0x18]
   140007f79:	test   rsi,rsi
   140007f7c:	jne    0x140007d59
   140007f82:	mov    rcx,r12
   140007f85:	call   0x140014f7c
   140007f8a:	mov    rbx,QWORD PTR [rsp+0x40]
   140007f8f:	mov    rbp,QWORD PTR [rsp+0x48]
   140007f94:	mov    rsi,QWORD PTR [rsp+0x50]
   140007f99:	mov    rdi,QWORD PTR [rsp+0x58]
   140007f9e:	add    rsp,0x20
   140007fa2:	pop    r14
   140007fa4:	pop    r13
   140007fa6:	pop    r12
   140007fa8:	ret    
   140007fa9:	int3   
   140007faa:	int3   
   140007fab:	int3   
   140007fac:	int3   
   140007fad:	int3   
   140007fae:	int3   
   140007faf:	int3   
   140007fb0:	int3   
   140007fb1:	int3   
   140007fb2:	int3   
   140007fb3:	int3   
   140007fb4:	int3   
   140007fb5:	int3   
   140007fb6:	int3   
   140007fb7:	int3   
   140007fb8:	mov    QWORD PTR [rsp+0x8],rbx
   140007fbd:	mov    QWORD PTR [rsp+0x10],rdi
   140007fc2:	xor    r10d,r10d
   140007fc5:	mov    rax,rcx
   140007fc8:	cmp    WORD PTR [rcx],r10w
   140007fcc:	je     0x140008052
   140007fd2:	lea    edi,[r10+0xa]
   140007fd6:	lea    r11d,[r10+0x9]
   140007fda:	lea    r9d,[r10+0x2]
   140007fde:	lea    ebx,[rdi+0x3]
   140007fe1:	movzx  edx,WORD PTR [rcx]
   140007fe4:	cmp    edx,r11d
   140007fe7:	jl     0x14000803e
   140007fe9:	cmp    edx,edi
   140007feb:	jle    0x140008039
   140007fed:	cmp    edx,ebx
   140007fef:	je     0x140008039
   140007ff1:	cmp    edx,0x5c
   140007ff4:	jne    0x14000803e
   140007ff6:	add    rcx,r9
   140007ff9:	movzx  r8d,WORD PTR [rcx]
   140007ffd:	test   r8w,r8w
   140008001:	je     0x140008052
   140008003:	movzx  edx,r8w
   140008007:	cmp    edx,r11d
   14000800a:	jl     0x140008033
   14000800c:	cmp    edx,edi
   14000800e:	jle    0x140008039
   140008010:	cmp    edx,ebx
   140008012:	je     0x140008039
   140008014:	cmp    edx,0x6e
   140008017:	je     0x14000802e
   140008019:	cmp    edx,0x72
   14000801c:	je     0x140008029
   14000801e:	cmp    edx,0x74
   140008021:	jne    0x140008033
   140008023:	mov    WORD PTR [rax],r11w
   140008027:	jmp    0x140008046
   140008029:	mov    WORD PTR [rax],bx
   14000802c:	jmp    0x140008046
   14000802e:	mov    WORD PTR [rax],di
   140008031:	jmp    0x140008046
   140008033:	mov    WORD PTR [rax],r8w
   140008037:	jmp    0x140008046
   140008039:	add    rcx,r9
   14000803c:	jmp    0x14000804c
   14000803e:	cmp    rax,rcx
   140008041:	je     0x140008046
   140008043:	mov    WORD PTR [rax],dx
   140008046:	add    rcx,r9
   140008049:	add    rax,r9
   14000804c:	cmp    WORD PTR [rcx],r10w
   140008050:	jne    0x140007fe1
   140008052:	mov    rbx,QWORD PTR [rsp+0x8]
   140008057:	mov    rdi,QWORD PTR [rsp+0x10]
   14000805c:	mov    WORD PTR [rax],r10w
   140008060:	ret    
   140008061:	int3   
   140008062:	int3   
   140008063:	int3   
   140008064:	int3   
   140008065:	int3   
   140008066:	int3   
   140008067:	int3   
   140008068:	mov    QWORD PTR [rsp+0x8],rbx
   14000806d:	mov    QWORD PTR [rsp+0x10],rbp
   140008072:	mov    QWORD PTR [rsp+0x18],rsi
   140008077:	push   rdi
   140008078:	push   r12
   14000807a:	push   r13
   14000807c:	push   r14
   14000807e:	push   r15
   140008080:	sub    rsp,0x20
   140008084:	xor    ebp,ebp
   140008086:	mov    r14,r9
   140008089:	mov    r15,r8
   14000808c:	mov    QWORD PTR [rdx],rbp
   14000808f:	mov    QWORD PTR [r8],rbp
   140008092:	mov    r13,rdx
   140008095:	mov    QWORD PTR [r9],rbp
   140008098:	mov    rdi,rcx
   14000809b:	test   rcx,rcx
   14000809e:	je     0x140008282
   1400080a4:	cmp    WORD PTR [rcx],bp
   1400080a7:	je     0x140008282
   1400080ad:	lea    r12d,[rbp+0x8]
   1400080b1:	mov    rbx,rdi
   1400080b4:	movzx  ecx,WORD PTR [rdi]
   1400080b7:	mov    edx,r12d
   1400080ba:	call   0x140013350
   1400080bf:	test   eax,eax
   1400080c1:	jne    0x1400080cf
   1400080c3:	cmp    WORD PTR [rdi],0xd
   1400080c7:	je     0x1400080cf
   1400080c9:	cmp    WORD PTR [rdi],0xa
   1400080cd:	jne    0x1400080d5
   1400080cf:	add    rdi,0x2
   1400080d3:	jmp    0x1400080b4
   1400080d5:	cmp    WORD PTR [rdi],0x23
   1400080d9:	jne    0x1400080f5
   1400080db:	jmp    0x1400080e9
   1400080dd:	cmp    ax,0xa
   1400080e1:	je     0x1400080f5
   1400080e3:	cmp    ax,0xd
   1400080e7:	je     0x1400080f5
   1400080e9:	add    rdi,0x2
   1400080ed:	movzx  eax,WORD PTR [rdi]
   1400080f0:	test   ax,ax
   1400080f3:	jne    0x1400080dd
   1400080f5:	cmp    rbx,rdi
   1400080f8:	jne    0x1400080b1
   1400080fa:	cmp    WORD PTR [rdi],bp
   1400080fd:	je     0x140008282
   140008103:	mov    rsi,rdi
   140008106:	movzx  ecx,WORD PTR [rdi]
   140008109:	test   cx,cx
   14000810c:	je     0x140008126
   14000810e:	mov    edx,r12d
   140008111:	call   0x140013350
   140008116:	test   eax,eax
   140008118:	jne    0x140008126
   14000811a:	cmp    WORD PTR [rdi],0x3a
   14000811e:	je     0x140008126
   140008120:	cmp    WORD PTR [rdi],0x3d
   140008124:	jne    0x140008132
   140008126:	cmp    rsi,rdi
   140008129:	je     0x140008138
   14000812b:	cmp    WORD PTR [rdi-0x2],0x5c
   140008130:	jne    0x140008138
   140008132:	add    rdi,0x2
   140008136:	jmp    0x140008106
   140008138:	mov    rbx,rdi
   14000813b:	sub    rbx,rsi
   14000813e:	sar    rbx,1
   140008141:	lea    eax,[rbx+0x1]
   140008144:	movsxd r12,eax
   140008147:	lea    rcx,[r12+r12*1]
   14000814b:	call   0x140013298
   140008150:	mov    rbp,rax
   140008153:	test   rax,rax
   140008156:	je     0x140008282
   14000815c:	movsxd rbx,ebx
   14000815f:	mov    r8,rsi
   140008162:	mov    rdx,r12
   140008165:	mov    r9,rbx
   140008168:	mov    rcx,rax
   14000816b:	call   0x140013da4
   140008170:	xor    eax,eax
   140008172:	mov    WORD PTR [rbp+rbx*2+0x0],ax
   140008177:	lea    r12d,[rax+0x8]
   14000817b:	mov    QWORD PTR [r13+0x0],rbp
   14000817f:	movzx  ecx,WORD PTR [rdi]
   140008182:	mov    edx,r12d
   140008185:	call   0x140013350
   14000818a:	xor    r13d,r13d
   14000818d:	jmp    0x14000819e
   14000818f:	add    rdi,0x2
   140008193:	mov    edx,r12d
   140008196:	movzx  ecx,WORD PTR [rdi]
   140008199:	call   0x140013350
   14000819e:	test   eax,eax
   1400081a0:	jne    0x14000818f
   1400081a2:	cmp    WORD PTR [rdi],r13w
   1400081a6:	je     0x140008282
   1400081ac:	cmp    WORD PTR [rdi],0x3a
   1400081b0:	je     0x1400081c6
   1400081b2:	cmp    WORD PTR [rdi],0x3d
   1400081b6:	jne    0x1400081d9
   1400081b8:	jmp    0x1400081c6
   1400081ba:	cmp    WORD PTR [rdi],0xa
   1400081be:	je     0x1400081d9
   1400081c0:	cmp    WORD PTR [rdi],0xd
   1400081c4:	je     0x1400081d9
   1400081c6:	add    rdi,0x2
   1400081ca:	mov    edx,r12d
   1400081cd:	movzx  ecx,WORD PTR [rdi]
   1400081d0:	call   0x140013350
   1400081d5:	test   eax,eax
   1400081d7:	jne    0x1400081ba
   1400081d9:	movzx  eax,WORD PTR [rdi]
   1400081dc:	test   ax,ax
   1400081df:	je     0x140008282
   1400081e5:	mov    rbp,rdi
   1400081e8:	cmp    ax,0xa
   1400081ec:	jne    0x1400081f5
   1400081ee:	cmp    WORD PTR [rdi-0x2],0x5c
   1400081f3:	jne    0x14000820e
   1400081f5:	cmp    ax,0xd
   1400081f9:	jne    0x140008202
   1400081fb:	cmp    WORD PTR [rdi-0x2],0x5c
   140008200:	jne    0x14000820e
   140008202:	add    rdi,0x2
   140008206:	movzx  eax,WORD PTR [rdi]
   140008209:	test   ax,ax
   14000820c:	jne    0x1400081e8
   14000820e:	mov    rbx,rdi
   140008211:	cmp    rdi,rbp
   140008214:	jbe    0x140008231
   140008216:	lea    rsi,[rbx-0x2]
   14000821a:	mov    edx,r12d
   14000821d:	movzx  ecx,WORD PTR [rsi]
   140008220:	call   0x140013350
   140008225:	test   eax,eax
   140008227:	je     0x140008231
   140008229:	mov    rbx,rsi
   14000822c:	cmp    rsi,rbp
   14000822f:	ja     0x140008216
   140008231:	sub    rbx,rbp
   140008234:	sar    rbx,1
   140008237:	lea    eax,[rbx+0x1]
   14000823a:	movsxd r12,eax
   14000823d:	lea    rcx,[r12+r12*1]
   140008241:	call   0x140013298
   140008246:	mov    rsi,rax
   140008249:	test   rax,rax
   14000824c:	je     0x140008282
   14000824e:	movsxd rbx,ebx
   140008251:	mov    r8,rbp
   140008254:	mov    rdx,r12
   140008257:	mov    r9,rbx
   14000825a:	mov    rcx,rax
   14000825d:	call   0x140013da4
   140008262:	mov    WORD PTR [rsi+rbx*2],r13w
   140008267:	mov    rcx,rsi
   14000826a:	mov    QWORD PTR [r15],rsi
   14000826d:	call   0x1400130e8
   140008272:	mov    rcx,rsi
   140008275:	mov    QWORD PTR [r14],rax
   140008278:	call   0x140007fb8
   14000827d:	mov    rax,rdi
   140008280:	jmp    0x140008284
   140008282:	xor    eax,eax
   140008284:	mov    rbx,QWORD PTR [rsp+0x50]
   140008289:	mov    rbp,QWORD PTR [rsp+0x58]
   14000828e:	mov    rsi,QWORD PTR [rsp+0x60]
   140008293:	add    rsp,0x20
   140008297:	pop    r15
   140008299:	pop    r14
   14000829b:	pop    r13
   14000829d:	pop    r12
   14000829f:	pop    rdi
   1400082a0:	ret    
   1400082a1:	int3   
   1400082a2:	int3   
   1400082a3:	int3   
   1400082a4:	int3   
   1400082a5:	int3   
   1400082a6:	int3   
   1400082a7:	int3   
   1400082a8:	mov    r11,rdx
   1400082ab:	xor    eax,eax
   1400082ad:	jmp    0x1400082db
   1400082af:	mov    r8,QWORD PTR [rcx]
   1400082b2:	mov    r9,r11
   1400082b5:	sub    r9,r8
   1400082b8:	movzx  edx,WORD PTR [r8]
   1400082bc:	movzx  r10d,WORD PTR [r8+r9*1]
   1400082c1:	sub    edx,r10d
   1400082c4:	jne    0x1400082cf
   1400082c6:	add    r8,0x2
   1400082ca:	test   r10d,r10d
   1400082cd:	jne    0x1400082b8
   1400082cf:	test   edx,edx
   1400082d1:	jne    0x1400082d7
   1400082d3:	mov    rax,QWORD PTR [rcx+0x8]
   1400082d7:	mov    rcx,QWORD PTR [rcx+0x18]
   1400082db:	test   rcx,rcx
   1400082de:	jne    0x1400082af
   1400082e0:	repz ret 
   1400082e2:	int3   
   1400082e3:	int3   
   1400082e4:	int3   
   1400082e5:	int3   
   1400082e6:	int3   
   1400082e7:	int3   
   1400082e8:	mov    rax,rsp
   1400082eb:	mov    QWORD PTR [rax+0x8],rbx
   1400082ef:	mov    QWORD PTR [rax+0x10],rbp
   1400082f3:	mov    QWORD PTR [rax+0x18],rsi
   1400082f7:	mov    QWORD PTR [rax+0x20],rdi
   1400082fb:	push   r12
   1400082fd:	sub    rsp,0x20
   140008301:	xor    esi,esi
   140008303:	mov    rbp,r8
   140008306:	mov    r12,rdx
   140008309:	mov    rdi,rcx
   14000830c:	mov    rbx,rcx
   14000830f:	test   rcx,rcx
   140008312:	je     0x140008367
   140008314:	mov    rax,QWORD PTR [rbx]
   140008317:	mov    r9,r12
   14000831a:	sub    r9,rax
   14000831d:	movzx  ecx,WORD PTR [rax]
   140008320:	movzx  edx,WORD PTR [rax+r9*1]
   140008325:	sub    ecx,edx
   140008327:	jne    0x140008331
   140008329:	add    rax,0x2
   14000832d:	test   edx,edx
   14000832f:	jne    0x14000831d
   140008331:	test   ecx,ecx
   140008333:	jne    0x14000835b
   140008335:	test   rsi,rsi
   140008338:	jne    0x140008340
   14000833a:	mov    rdi,QWORD PTR [rbx+0x18]
   14000833e:	jmp    0x140008348
   140008340:	mov    rax,QWORD PTR [rbx+0x18]
   140008344:	mov    QWORD PTR [rsi+0x18],rax
   140008348:	mov    rcx,QWORD PTR [rbx]
   14000834b:	call   0x1400130a8
   140008350:	mov    rcx,QWORD PTR [rbx+0x8]
   140008354:	call   0x1400130a8
   140008359:	jmp    0x14000835e
   14000835b:	mov    rsi,rbx
   14000835e:	mov    rbx,QWORD PTR [rbx+0x18]
   140008362:	test   rbx,rbx
   140008365:	jne    0x140008314
   140008367:	test   rbp,rbp
   14000836a:	je     0x1400083a3
   14000836c:	mov    ecx,0x20
   140008371:	call   0x140013298
   140008376:	mov    rbx,rax
   140008379:	test   rax,rax
   14000837c:	je     0x1400083a6
   14000837e:	mov    rcx,r12
   140008381:	call   0x1400130e8
   140008386:	mov    rcx,rbp
   140008389:	mov    QWORD PTR [rbx],rax
   14000838c:	call   0x1400130e8
   140008391:	and    QWORD PTR [rbx+0x10],0x0
   140008396:	mov    QWORD PTR [rbx+0x8],rax
   14000839a:	mov    QWORD PTR [rbx+0x18],rdi
   14000839e:	mov    rax,rbx
   1400083a1:	jmp    0x1400083a6
   1400083a3:	mov    rax,rdi
   1400083a6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400083ab:	mov    rbp,QWORD PTR [rsp+0x38]
   1400083b0:	mov    rsi,QWORD PTR [rsp+0x40]
   1400083b5:	mov    rdi,QWORD PTR [rsp+0x48]
   1400083ba:	add    rsp,0x20
   1400083be:	pop    r12
   1400083c0:	ret    
   1400083c1:	int3   
   1400083c2:	int3   
   1400083c3:	int3   
   1400083c4:	int3   
   1400083c5:	int3   
   1400083c6:	int3   
   1400083c7:	int3   
   1400083c8:	test   rcx,rcx
   1400083cb:	je     0x140008421
   1400083cd:	mov    QWORD PTR [rsp+0x8],rbx
   1400083d2:	push   rdi
   1400083d3:	sub    rsp,0x20
   1400083d7:	mov    rbx,rcx
   1400083da:	mov    rcx,QWORD PTR [rbx]
   1400083dd:	mov    rdi,QWORD PTR [rbx+0x18]
   1400083e1:	test   rcx,rcx
   1400083e4:	je     0x1400083eb
   1400083e6:	call   0x1400130a8
   1400083eb:	mov    rcx,QWORD PTR [rbx+0x8]
   1400083ef:	test   rcx,rcx
   1400083f2:	je     0x1400083f9
   1400083f4:	call   0x1400130a8
   1400083f9:	mov    rcx,QWORD PTR [rbx+0x10]
   1400083fd:	test   rcx,rcx
   140008400:	je     0x140008407
   140008402:	call   0x1400130a8
   140008407:	mov    rcx,rbx
   14000840a:	call   0x1400130a8
   14000840f:	mov    rbx,rdi
   140008412:	test   rdi,rdi
   140008415:	jne    0x1400083da
   140008417:	mov    rbx,QWORD PTR [rsp+0x30]
   14000841c:	add    rsp,0x20
   140008420:	pop    rdi
   140008421:	ret    
   140008422:	int3   
   140008423:	int3   
   140008424:	int3   
   140008425:	int3   
   140008426:	int3   
   140008427:	int3   
   140008428:	test   rcx,rcx
   14000842b:	jne    0x140008439
   14000842d:	lea    rcx,[rip+0x3221c]        # 0x14003a650
   140008434:	jmp    0x1400136cc
   140008439:	mov    r8,QWORD PTR [rcx+0x8]
   14000843d:	mov    rdx,QWORD PTR [rcx]
   140008440:	lea    rcx,[rip+0x32219]        # 0x14003a660
   140008447:	jmp    0x1400136cc
   14000844c:	int3   
   14000844d:	int3   
   14000844e:	int3   
   14000844f:	int3   
   140008450:	int3   
   140008451:	int3   
   140008452:	int3   
   140008453:	int3   
   140008454:	int3   
   140008455:	int3   
   140008456:	int3   
   140008457:	int3   
   140008458:	rex push rbx
   14000845a:	sub    rsp,0x20
   14000845e:	mov    rbx,rcx
   140008461:	test   rcx,rcx
   140008464:	je     0x140008482
   140008466:	mov    r8,QWORD PTR [rbx+0x8]
   14000846a:	mov    rdx,QWORD PTR [rbx]
   14000846d:	lea    rcx,[rip+0x3220c]        # 0x14003a680
   140008474:	call   0x1400136cc
   140008479:	mov    rbx,QWORD PTR [rbx+0x18]
   14000847d:	test   rbx,rbx
   140008480:	jne    0x140008466
   140008482:	lea    rcx,[rip+0x321e7]        # 0x14003a670
   140008489:	add    rsp,0x20
   14000848d:	pop    rbx
   14000848e:	jmp    0x1400136cc
   140008493:	int3   
   140008494:	int3   
   140008495:	int3   
   140008496:	int3   
   140008497:	int3   
   140008498:	int3   
   140008499:	int3   
   14000849a:	int3   
   14000849b:	int3   
   14000849c:	int3   
   14000849d:	int3   
   14000849e:	int3   
   14000849f:	int3   
   1400084a0:	int3   
   1400084a1:	int3   
   1400084a2:	int3   
   1400084a3:	int3   
   1400084a4:	int3   
   1400084a5:	int3   
   1400084a6:	int3   
   1400084a7:	int3   
   1400084a8:	rex push rbx
   1400084aa:	push   rsi
   1400084ab:	push   rdi
   1400084ac:	sub    rsp,0x20
   1400084b0:	xor    edi,edi
   1400084b2:	jmp    0x140008503
   1400084b4:	mov    edx,0x20
   1400084b9:	lea    ecx,[rdx-0x1f]
   1400084bc:	call   0x140012bd4
   1400084c1:	mov    rbx,rax
   1400084c4:	test   rax,rax
   1400084c7:	je     0x14000852a
   1400084c9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400084ce:	mov    QWORD PTR [rax],rcx
   1400084d1:	mov    rax,QWORD PTR [rsp+0x48]
   1400084d6:	mov    QWORD PTR [rbx+0x8],rax
   1400084da:	mov    rax,QWORD PTR [rsp+0x40]
   1400084df:	mov    QWORD PTR [rbx+0x10],rax
   1400084e3:	test   rcx,rcx
   1400084e6:	je     0x1400084f9
   1400084e8:	call   0x140007c08
   1400084ed:	cmp    eax,0xffffffff
   1400084f0:	je     0x1400084f9
   1400084f2:	mov    ecx,eax
   1400084f4:	call   0x140004a60
   1400084f9:	mov    QWORD PTR [rbx+0x18],rdi
   1400084fd:	mov    rcx,rsi
   140008500:	mov    rdi,rbx
   140008503:	lea    r9,[rsp+0x40]
   140008508:	lea    r8,[rsp+0x48]
   14000850d:	lea    rdx,[rsp+0x50]
   140008512:	call   0x140008068
   140008517:	mov    rsi,rax
   14000851a:	test   rax,rax
   14000851d:	jne    0x1400084b4
   14000851f:	mov    rax,rdi
   140008522:	add    rsp,0x20
   140008526:	pop    rdi
   140008527:	pop    rsi
   140008528:	pop    rbx
   140008529:	ret    
   14000852a:	jmp    0x140008522
   14000852c:	int3   
   14000852d:	int3   
   14000852e:	int3   
   14000852f:	int3   
   140008530:	int3   
   140008531:	int3   
   140008532:	int3   
   140008533:	int3   
   140008534:	int3   
   140008535:	int3   
   140008536:	int3   
   140008537:	int3   
   140008538:	mov    QWORD PTR [rsp+0x8],rbx
   14000853d:	push   rdi
   14000853e:	sub    rsp,0x20
   140008542:	lea    rdx,[rsp+0x38]
   140008547:	xor    ebx,ebx
   140008549:	mov    QWORD PTR [rsp+0x38],rbx
   14000854e:	call   0x14000c638
   140008553:	mov    rcx,QWORD PTR [rsp+0x38]
   140008558:	test   rcx,rcx
   14000855b:	jne    0x140008561
   14000855d:	xor    eax,eax
   14000855f:	jmp    0x14000858e
   140008561:	call   0x14000a4dc
   140008566:	mov    rdi,rax
   140008569:	test   rax,rax
   14000856c:	je     0x140008581
   14000856e:	mov    rcx,rax
   140008571:	call   0x1400084a8
   140008576:	mov    rcx,rdi
   140008579:	mov    rbx,rax
   14000857c:	call   0x1400130a8
   140008581:	mov    rcx,QWORD PTR [rsp+0x38]
   140008586:	call   0x1400130a8
   14000858b:	mov    rax,rbx
   14000858e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008593:	add    rsp,0x20
   140008597:	pop    rdi
   140008598:	ret    
   140008599:	int3   
   14000859a:	int3   
   14000859b:	int3   
   14000859c:	mov    QWORD PTR [rsp+0x8],rbx
   1400085a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400085a6:	mov    QWORD PTR [rsp+0x18],rsi
   1400085ab:	push   rdi
   1400085ac:	sub    rsp,0x20
   1400085b0:	xor    ebp,ebp
   1400085b2:	mov    rbx,rcx
   1400085b5:	lea    rcx,[rdx+0x4]
   1400085b9:	mov    rdi,rdx
   1400085bc:	mov    DWORD PTR [rdx],ebp
   1400085be:	lea    r8d,[rbp+0x28]
   1400085c2:	xor    edx,edx
   1400085c4:	call   0x140012fb0
   1400085c9:	jmp    0x14000862c
   1400085cb:	cmp    DWORD PTR [rdi],0xa
   1400085ce:	jge    0x140008636
   1400085d0:	mov    esi,ebp
   1400085d2:	jmp    0x1400085f8
   1400085d4:	mov    edx,0x4
   1400085d9:	movzx  ecx,r11w
   1400085dd:	call   0x140013350
   1400085e2:	test   eax,eax
   1400085e4:	je     0x1400085fe
   1400085e6:	movzx  eax,WORD PTR [rbx]
   1400085e9:	lea    ecx,[rsi+rsi*4]
   1400085ec:	add    rbx,0x2
   1400085f0:	movzx  r11d,WORD PTR [rbx]
   1400085f4:	lea    esi,[rax+rcx*2-0x30]
   1400085f8:	test   r11w,r11w
   1400085fc:	jne    0x1400085d4
   1400085fe:	movsxd rax,DWORD PTR [rdi]
   140008601:	mov    DWORD PTR [rdi+rax*4+0x4],esi
   140008605:	inc    DWORD PTR [rdi]
   140008607:	movzx  eax,WORD PTR [rbx]
   14000860a:	test   ax,ax
   14000860d:	je     0x140008636
   14000860f:	mov    edx,0x4
   140008614:	movzx  ecx,ax
   140008617:	call   0x140013350
   14000861c:	test   eax,eax
   14000861e:	jne    0x14000862c
   140008620:	add    rbx,0x2
   140008624:	movzx  eax,WORD PTR [rbx]
   140008627:	test   ax,ax
   14000862a:	jne    0x14000860f
   14000862c:	movzx  r11d,WORD PTR [rbx]
   140008630:	test   r11w,r11w
   140008634:	jne    0x1400085cb
   140008636:	mov    rbx,QWORD PTR [rsp+0x30]
   14000863b:	mov    rbp,QWORD PTR [rsp+0x38]
   140008640:	mov    rsi,QWORD PTR [rsp+0x40]
   140008645:	add    rsp,0x20
   140008649:	pop    rdi
   14000864a:	ret    
   14000864b:	int3   
   14000864c:	int3   
   14000864d:	int3   
   14000864e:	int3   
   14000864f:	int3   
   140008650:	int3   
   140008651:	int3   
   140008652:	int3   
   140008653:	int3   
   140008654:	int3   
   140008655:	int3   
   140008656:	int3   
   140008657:	int3   
   140008658:	int3   
   140008659:	int3   
   14000865a:	int3   
   14000865b:	int3   
   14000865c:	xor    r9d,r9d
   14000865f:	lea    r8,[rdx+0x4]
   140008663:	sub    rcx,rdx
   140008666:	mov    edx,DWORD PTR [r8]
   140008669:	cmp    DWORD PTR [rcx+r8*1],edx
   14000866d:	jne    0x140008682
   14000866f:	inc    r9
   140008672:	add    r8,0x4
   140008676:	cmp    r9,0xa
   14000867a:	jl     0x140008666
   14000867c:	mov    eax,0x1
   140008681:	ret    
   140008682:	xor    eax,eax
   140008684:	ret    
   140008685:	int3   
   140008686:	int3   
   140008687:	int3   
   140008688:	int3   
   140008689:	int3   
   14000868a:	int3   
   14000868b:	int3   
   14000868c:	xor    r9d,r9d
   14000868f:	lea    r8,[rdx+0x4]
   140008693:	sub    rcx,rdx
   140008696:	mov    edx,DWORD PTR [r8]
   140008699:	cmp    DWORD PTR [rcx+r8*1],edx
   14000869d:	jg     0x1400086ae
   14000869f:	jl     0x1400086b4
   1400086a1:	inc    r9
   1400086a4:	add    r8,0x4
   1400086a8:	cmp    r9,0xa
   1400086ac:	jl     0x140008696
   1400086ae:	mov    eax,0x1
   1400086b3:	ret    
   1400086b4:	xor    eax,eax
   1400086b6:	ret    
   1400086b7:	int3   
   1400086b8:	int3   
   1400086b9:	int3   
   1400086ba:	int3   
   1400086bb:	int3   
   1400086bc:	int3   
   1400086bd:	int3   
   1400086be:	int3   
   1400086bf:	int3   
   1400086c0:	int3   
   1400086c1:	int3   
   1400086c2:	int3   
   1400086c3:	int3   
   1400086c4:	int3   
   1400086c5:	int3   
   1400086c6:	int3   
   1400086c7:	int3   
   1400086c8:	int3   
   1400086c9:	int3   
   1400086ca:	int3   
   1400086cb:	int3   
   1400086cc:	mov    r10d,DWORD PTR [rcx]
   1400086cf:	xor    r9d,r9d
   1400086d2:	test   r10d,r10d
   1400086d5:	jle    0x1400086f3
   1400086d7:	lea    r8,[rdx+0x4]
   1400086db:	sub    rcx,rdx
   1400086de:	mov    eax,DWORD PTR [r8]
   1400086e1:	cmp    DWORD PTR [rcx+r8*1],eax
   1400086e5:	jne    0x1400086f9
   1400086e7:	inc    r9d
   1400086ea:	add    r8,0x4
   1400086ee:	cmp    r9d,r10d
   1400086f1:	jl     0x1400086de
   1400086f3:	mov    eax,0x1
   1400086f8:	ret    
   1400086f9:	xor    eax,eax
   1400086fb:	ret    
   1400086fc:	int3   
   1400086fd:	int3   
   1400086fe:	int3   
   1400086ff:	int3   
   140008700:	int3   
   140008701:	int3   
   140008702:	int3   
   140008703:	int3   
   140008704:	int3   
   140008705:	int3   
   140008706:	int3   
   140008707:	int3   
   140008708:	int3   
   140008709:	int3   
   14000870a:	int3   
   14000870b:	int3   
   14000870c:	mov    QWORD PTR [rsp+0x8],rbx
   140008711:	push   rdi
   140008712:	sub    rsp,0x20
   140008716:	xor    ebx,ebx
   140008718:	lea    rdi,[rdx+0x4]
   14000871c:	mov    edx,DWORD PTR [rdi]
   14000871e:	lea    rcx,[rip+0x31f6b]        # 0x14003a690
   140008725:	call   0x1400145d4
   14000872a:	cmp    rbx,0x9
   14000872e:	jge    0x14000873c
   140008730:	lea    rcx,[rip+0x31f61]        # 0x14003a698
   140008737:	call   0x1400145d4
   14000873c:	inc    rbx
   14000873f:	add    rdi,0x4
   140008743:	cmp    rbx,0xa
   140008747:	jl     0x14000871c
   140008749:	lea    rcx,[rip+0x31f4c]        # 0x14003a69c
   140008750:	mov    rbx,QWORD PTR [rsp+0x30]
   140008755:	add    rsp,0x20
   140008759:	pop    rdi
   14000875a:	jmp    0x1400145d4
   14000875f:	int3   
   140008760:	int3   
   140008761:	int3   
   140008762:	int3   
   140008763:	int3   
   140008764:	int3   
   140008765:	int3   
   140008766:	int3   
   140008767:	int3   
   140008768:	int3   
   140008769:	int3   
   14000876a:	int3   
   14000876b:	int3   
   14000876c:	mov    QWORD PTR [rsp+0x18],rbx
   140008771:	mov    QWORD PTR [rsp+0x20],rbp
   140008776:	push   rsi
   140008777:	push   rdi
   140008778:	push   r12
   14000877a:	push   r13
   14000877c:	push   r15
   14000877e:	sub    rsp,0x90
   140008785:	mov    rax,QWORD PTR [rip+0x371a4]        # 0x14003f930
   14000878c:	xor    rax,rsp
   14000878f:	mov    QWORD PTR [rsp+0x80],rax
   140008797:	mov    rax,rdx
   14000879a:	mov    rbx,rcx
   14000879d:	lea    rdx,[rsp+0x20]
   1400087a2:	mov    rcx,rax
   1400087a5:	call   0x14000859c
   1400087aa:	mov    rcx,rbx
   1400087ad:	call   0x1400130e8
   1400087b2:	xor    ebx,ebx
   1400087b4:	mov    rsi,rax
   1400087b7:	test   rax,rax
   1400087ba:	je     0x1400088b2
   1400087c0:	mov    rdi,rax
   1400087c3:	cmp    WORD PTR [rax],bx
   1400087c6:	je     0x1400088a8
   1400087cc:	mov    r15d,0x2b
   1400087d2:	lea    r13d,[r15-0x1]
   1400087d6:	jmp    0x1400087ed
   1400087d8:	mov    edx,0x8
   1400087dd:	movzx  ecx,ax
   1400087e0:	call   0x140013350
   1400087e5:	test   eax,eax
   1400087e7:	je     0x1400087f5
   1400087e9:	add    rdi,0x2
   1400087ed:	movzx  eax,WORD PTR [rdi]
   1400087f0:	test   ax,ax
   1400087f3:	jne    0x1400087d8
   1400087f5:	mov    r12,rdi
   1400087f8:	jmp    0x14000880f
   1400087fa:	mov    edx,0x8
   1400087ff:	movzx  ecx,ax
   140008802:	call   0x140013350
   140008807:	test   eax,eax
   140008809:	jne    0x140008817
   14000880b:	add    rdi,0x2
   14000880f:	movzx  eax,WORD PTR [rdi]
   140008812:	test   ax,ax
   140008815:	jne    0x1400087fa
   140008817:	mov    rax,rdi
   14000881a:	cmp    WORD PTR [rdi],bx
   14000881d:	je     0x140008823
   14000881f:	add    rdi,0x2
   140008823:	cmp    r12,rax
   140008826:	jae    0x140008899
   140008828:	movzx  ebp,bx
   14000882b:	cmp    WORD PTR [rax-0x2],r15w
   140008830:	jne    0x140008837
   140008832:	mov    ebp,r15d
   140008835:	jmp    0x140008842
   140008837:	cmp    WORD PTR [rax-0x2],r13w
   14000883c:	jne    0x140008846
   14000883e:	movzx  ebp,r13w
   140008842:	add    rax,0xfffffffffffffffe
   140008846:	lea    rdx,[rsp+0x50]
   14000884b:	mov    rcx,r12
   14000884e:	mov    WORD PTR [rax],bx
   140008851:	call   0x14000859c
   140008856:	movzx  r11d,bp
   14000885a:	sub    r11d,r13d
   14000885d:	je     0x140008886
   14000885f:	dec    r11d
   140008862:	je     0x140008875
   140008864:	lea    rdx,[rsp+0x20]
   140008869:	lea    rcx,[rsp+0x50]
   14000886e:	call   0x14000865c
   140008873:	jmp    0x140008895
   140008875:	lea    rdx,[rsp+0x50]
   14000887a:	lea    rcx,[rsp+0x20]
   14000887f:	call   0x14000868c
   140008884:	jmp    0x140008895
   140008886:	lea    rdx,[rsp+0x20]
   14000888b:	lea    rcx,[rsp+0x50]
   140008890:	call   0x1400086cc
   140008895:	test   eax,eax
   140008897:	jne    0x1400088a3
   140008899:	cmp    WORD PTR [rdi],bx
   14000889c:	je     0x1400088a8
   14000889e:	jmp    0x1400087ed
   1400088a3:	mov    ebx,0x1
   1400088a8:	mov    rcx,rsi
   1400088ab:	call   0x1400130a8
   1400088b0:	mov    eax,ebx
   1400088b2:	mov    rcx,QWORD PTR [rsp+0x80]
   1400088ba:	xor    rcx,rsp
   1400088bd:	call   0x140012670
   1400088c2:	lea    r11,[rsp+0x90]
   1400088ca:	mov    rbx,QWORD PTR [r11+0x40]
   1400088ce:	mov    rbp,QWORD PTR [r11+0x48]
   1400088d2:	mov    rsp,r11
   1400088d5:	pop    r15
   1400088d7:	pop    r13
   1400088d9:	pop    r12
   1400088db:	pop    rdi
   1400088dc:	pop    rsi
   1400088dd:	ret    
   1400088de:	int3   
   1400088df:	int3   
   1400088e0:	int3   
   1400088e1:	int3   
   1400088e2:	int3   
   1400088e3:	int3   
   1400088e4:	int3   
   1400088e5:	int3   
   1400088e6:	int3   
   1400088e7:	int3   
   1400088e8:	int3   
   1400088e9:	int3   
   1400088ea:	int3   
   1400088eb:	int3   
   1400088ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400088f1:	mov    QWORD PTR [rsp+0x10],rbp
   1400088f6:	mov    QWORD PTR [rsp+0x18],rsi
   1400088fb:	push   rdi
   1400088fc:	sub    rsp,0x20
   140008900:	mov    rsi,rdx
   140008903:	mov    edx,0x26
   140008908:	mov    rbp,rcx
   14000890b:	call   0x140014680
   140008910:	xor    ebx,ebx
   140008912:	mov    rdi,rax
   140008915:	cmp    WORD PTR [rbp+0x0],bx
   140008919:	jne    0x14000891f
   14000891b:	xor    eax,eax
   14000891d:	jmp    0x14000895c
   14000891f:	mov    rdx,rsi
   140008922:	mov    rcx,rbp
   140008925:	test   rax,rax
   140008928:	jne    0x140008931
   14000892a:	call   0x14000876c
   14000892f:	jmp    0x14000895c
   140008931:	mov    WORD PTR [rax],bx
   140008934:	call   0x14000876c
   140008939:	test   eax,eax
   14000893b:	je     0x140008952
   14000893d:	lea    rcx,[rdi+0x2]
   140008941:	mov    rdx,rsi
   140008944:	call   0x1400088ec
   140008949:	test   eax,eax
   14000894b:	je     0x140008952
   14000894d:	mov    ebx,0x1
   140008952:	mov    eax,0x26
   140008957:	mov    WORD PTR [rdi],ax
   14000895a:	mov    eax,ebx
   14000895c:	mov    rbx,QWORD PTR [rsp+0x30]
   140008961:	mov    rbp,QWORD PTR [rsp+0x38]
   140008966:	mov    rsi,QWORD PTR [rsp+0x40]
   14000896b:	add    rsp,0x20
   14000896f:	pop    rdi
   140008970:	ret    
   140008971:	int3   
   140008972:	int3   
   140008973:	int3   
   140008974:	mov    QWORD PTR [rsp+0x18],rbx
   140008979:	mov    QWORD PTR [rsp+0x20],rdi
   14000897e:	push   rbp
   14000897f:	lea    rbp,[rsp-0x1160]
   140008987:	mov    eax,0x1260
   14000898c:	call   0x140012f50
   140008991:	sub    rsp,rax
   140008994:	mov    rax,QWORD PTR [rip+0x36f95]        # 0x14003f930
   14000899b:	xor    rax,rsp
   14000899e:	mov    QWORD PTR [rbp+0x1150],rax
   1400089a5:	mov    QWORD PTR [rsp+0x28],rcx
   1400089aa:	mov    rdi,rcx
   1400089ad:	lea    rax,[rip+0x31cf4]        # 0x14003a6a8
   1400089b4:	mov    rbx,rdx
   1400089b7:	lea    rcx,[rbp+0x150]
   1400089be:	lea    r9,[rip+0x31d13]        # 0x14003a6d8
   1400089c5:	or     r8,0xffffffffffffffff
   1400089c9:	mov    edx,0x1000
   1400089ce:	mov    QWORD PTR [rsp+0x20],rax
   1400089d3:	call   0x140013d80
   1400089d8:	lea    r11,[rsp+0x30]
   1400089dd:	lea    rdx,[rbp+0x150]
   1400089e4:	mov    r9d,0x20019
   1400089ea:	xor    r8d,r8d
   1400089ed:	mov    rcx,0xffffffff80000002
   1400089f4:	mov    QWORD PTR [rsp+0x20],r11
   1400089f9:	call   QWORD PTR [rip+0x38971]        # 0x140041370
   1400089ff:	test   eax,eax
   140008a01:	je     0x140008a0a
   140008a03:	xor    eax,eax
   140008a05:	jmp    0x140008aa3
   140008a0a:	mov    rcx,QWORD PTR [rsp+0x30]
   140008a0f:	lea    rax,[rsp+0x38]
   140008a14:	lea    r9,[rsp+0x3c]
   140008a19:	mov    QWORD PTR [rsp+0x28],rax
   140008a1e:	lea    rax,[rsp+0x40]
   140008a23:	lea    rdx,[rip+0x31cbe]        # 0x14003a6e8
   140008a2a:	xor    r8d,r8d
   140008a2d:	mov    DWORD PTR [rsp+0x38],0x208
   140008a35:	mov    QWORD PTR [rsp+0x20],rax
   140008a3a:	call   QWORD PTR [rip+0x38928]        # 0x140041368
   140008a40:	mov    rcx,QWORD PTR [rsp+0x30]
   140008a45:	test   eax,eax
   140008a47:	je     0x140008a51
   140008a49:	call   QWORD PTR [rip+0x38911]        # 0x140041360
   140008a4f:	jmp    0x140008a03
   140008a51:	call   QWORD PTR [rip+0x38909]        # 0x140041360
   140008a57:	cmp    DWORD PTR [rsp+0x3c],0x1
   140008a5c:	jne    0x140008a03
   140008a5e:	mov    rcx,QWORD PTR [rbx+0x8]
   140008a62:	test   rcx,rcx
   140008a65:	je     0x140008a6c
   140008a67:	call   0x1400130a8
   140008a6c:	mov    rcx,rdi
   140008a6f:	call   0x1400130e8
   140008a74:	lea    rdx,[rbx+0x10]
   140008a78:	mov    rcx,rax
   140008a7b:	mov    QWORD PTR [rbx+0x8],rax
   140008a7f:	call   0x14000859c
   140008a84:	mov    rcx,QWORD PTR [rbx]
   140008a87:	test   rcx,rcx
   140008a8a:	je     0x140008a91
   140008a8c:	call   0x1400130a8
   140008a91:	lea    rcx,[rsp+0x40]
   140008a96:	call   0x1400130e8
   140008a9b:	mov    QWORD PTR [rbx],rax
   140008a9e:	mov    eax,0x1
   140008aa3:	mov    rcx,QWORD PTR [rbp+0x1150]
   140008aaa:	xor    rcx,rsp
   140008aad:	call   0x140012670
   140008ab2:	lea    r11,[rsp+0x1260]
   140008aba:	mov    rbx,QWORD PTR [r11+0x20]
   140008abe:	mov    rdi,QWORD PTR [r11+0x28]
   140008ac2:	mov    rsp,r11
   140008ac5:	pop    rbp
   140008ac6:	ret    
   140008ac7:	int3   
   140008ac8:	int3   
   140008ac9:	int3   
   140008aca:	int3   
   140008acb:	int3   
   140008acc:	int3   
   140008acd:	int3   
   140008ace:	int3   
   140008acf:	int3   
   140008ad0:	int3   
   140008ad1:	int3   
   140008ad2:	int3   
   140008ad3:	int3   
   140008ad4:	mov    QWORD PTR [rsp+0x10],rbx
   140008ad9:	mov    QWORD PTR [rsp+0x18],rsi
   140008ade:	push   rbp
   140008adf:	push   rdi
   140008ae0:	push   r12
   140008ae2:	lea    rbp,[rsp-0x1a0]
   140008aea:	sub    rsp,0x2a0
   140008af1:	mov    rax,QWORD PTR [rip+0x36e38]        # 0x14003f930
   140008af8:	xor    rax,rsp
   140008afb:	mov    QWORD PTR [rbp+0x190],rax
   140008b02:	mov    r12,rcx
   140008b05:	lea    r8,[rip+0x31bec]        # 0x14003a6f8
   140008b0c:	lea    rcx,[rsp+0x48]
   140008b11:	xor    ebx,ebx
   140008b13:	xor    edx,edx
   140008b15:	xor    edi,edi
   140008b17:	and    QWORD PTR [rsp+0x48],rbx
   140008b1c:	mov    DWORD PTR [rsp+0x40],0x1fe
   140008b24:	call   0x1400134e0
   140008b29:	cmp    QWORD PTR [rsp+0x48],rbx
   140008b2e:	je     0x140008b7a
   140008b30:	test   eax,eax
   140008b32:	jne    0x140008b7a
   140008b34:	lea    edx,[rdi+0x40]
   140008b37:	lea    ecx,[rdi+0x1]
   140008b3a:	call   0x140012bd4
   140008b3f:	lea    rcx,[rip+0x31bd2]        # 0x14003a718
   140008b46:	mov    rbx,rax
   140008b49:	call   0x1400130e8
   140008b4e:	lea    rdx,[rbx+0x10]
   140008b52:	mov    rcx,rax
   140008b55:	mov    QWORD PTR [rbx+0x8],rax
   140008b59:	call   0x14000859c
   140008b5e:	mov    rcx,QWORD PTR [rsp+0x48]
   140008b63:	call   0x1400130e8
   140008b68:	mov    QWORD PTR [rbx],rax
   140008b6b:	mov    rcx,QWORD PTR [rsp+0x48]
   140008b70:	call   0x1400130a8
   140008b75:	jmp    0x140008c5f
   140008b7a:	lea    rax,[rsp+0x50]
   140008b7f:	lea    rdx,[rip+0x31ba2]        # 0x14003a728
   140008b86:	mov    r9d,0x20019
   140008b8c:	xor    r8d,r8d
   140008b8f:	mov    rcx,0xffffffff80000002
   140008b96:	mov    QWORD PTR [rsp+0x20],rax
   140008b9b:	call   QWORD PTR [rip+0x387cf]        # 0x140041370
   140008ba1:	test   eax,eax
   140008ba3:	je     0x140008bac
   140008ba5:	xor    eax,eax
   140008ba7:	jmp    0x140008c62
   140008bac:	and    QWORD PTR [rsp+0x38],0x0
   140008bb2:	and    QWORD PTR [rsp+0x30],0x0
   140008bb8:	mov    rcx,QWORD PTR [rsp+0x50]
   140008bbd:	and    QWORD PTR [rsp+0x28],0x0
   140008bc3:	and    QWORD PTR [rsp+0x20],0x0
   140008bc9:	lea    r9,[rsp+0x40]
   140008bce:	lea    r8,[rbp-0x70]
   140008bd2:	mov    edx,edi
   140008bd4:	call   QWORD PTR [rip+0x3879e]        # 0x140041378
   140008bda:	mov    esi,eax
   140008bdc:	test   eax,eax
   140008bde:	jne    0x140008c42
   140008be0:	test   r12,r12
   140008be3:	je     0x140008bf3
   140008be5:	lea    rdx,[rbp-0x70]
   140008be9:	mov    rcx,r12
   140008bec:	call   0x1400088ec
   140008bf1:	jmp    0x140008bf8
   140008bf3:	mov    eax,0x1
   140008bf8:	test   eax,eax
   140008bfa:	je     0x140008c42
   140008bfc:	lea    rdx,[rsp+0x58]
   140008c01:	lea    rcx,[rbp-0x70]
   140008c05:	call   0x14000859c
   140008c0a:	test   rbx,rbx
   140008c0d:	je     0x140008c26
   140008c0f:	lea    rdx,[rbx+0x10]
   140008c13:	lea    rcx,[rsp+0x58]
   140008c18:	call   0x14000868c
   140008c1d:	test   eax,eax
   140008c1f:	je     0x140008c42
   140008c21:	mov    rdx,rbx
   140008c24:	jmp    0x140008c39
   140008c26:	mov    edx,0x40
   140008c2b:	lea    ecx,[rdx-0x3f]
   140008c2e:	call   0x140012bd4
   140008c33:	mov    rbx,rax
   140008c36:	mov    rdx,rax
   140008c39:	lea    rcx,[rbp-0x70]
   140008c3d:	call   0x140008974
   140008c42:	inc    edi
   140008c44:	mov    DWORD PTR [rsp+0x40],0x1fe
   140008c4c:	test   esi,esi
   140008c4e:	je     0x140008bac
   140008c54:	mov    rcx,QWORD PTR [rsp+0x50]
   140008c59:	call   QWORD PTR [rip+0x38701]        # 0x140041360
   140008c5f:	mov    rax,rbx
   140008c62:	mov    rcx,QWORD PTR [rbp+0x190]
   140008c69:	xor    rcx,rsp
   140008c6c:	call   0x140012670
   140008c71:	lea    r11,[rsp+0x2a0]
   140008c79:	mov    rbx,QWORD PTR [r11+0x28]
   140008c7d:	mov    rsi,QWORD PTR [r11+0x30]
   140008c81:	mov    rsp,r11
   140008c84:	pop    r12
   140008c86:	pop    rdi
   140008c87:	pop    rbp
   140008c88:	ret    
   140008c89:	int3   
   140008c8a:	int3   
   140008c8b:	int3   
   140008c8c:	int3   
   140008c8d:	int3   
   140008c8e:	int3   
   140008c8f:	int3   
   140008c90:	int3   
   140008c91:	int3   
   140008c92:	int3   
   140008c93:	int3   
   140008c94:	rex push rbx
   140008c96:	sub    rsp,0x20
   140008c9a:	mov    rbx,rcx
   140008c9d:	mov    rcx,QWORD PTR [rcx]
   140008ca0:	test   rcx,rcx
   140008ca3:	je     0x140008caa
   140008ca5:	call   0x1400130a8
   140008caa:	mov    rcx,QWORD PTR [rbx+0x8]
   140008cae:	test   rcx,rcx
   140008cb1:	je     0x140008cb8
   140008cb3:	call   0x1400130a8
   140008cb8:	mov    rcx,rbx
   140008cbb:	add    rsp,0x20
   140008cbf:	pop    rbx
   140008cc0:	jmp    0x1400130a8
   140008cc5:	int3   
   140008cc6:	int3   
   140008cc7:	int3   
   140008cc8:	sub    rsp,0x68
   140008ccc:	mov    rax,QWORD PTR [rip+0x36c5d]        # 0x14003f930
   140008cd3:	xor    rax,rsp
   140008cd6:	mov    QWORD PTR [rsp+0x50],rax
   140008cdb:	lea    rdx,[rsp+0x20]
   140008ce0:	call   0x1400121e4
   140008ce5:	or     ecx,0xffffffff
   140008ce8:	test   eax,eax
   140008cea:	cmove  ecx,DWORD PTR [rsp+0x34]
   140008cef:	mov    eax,ecx
   140008cf1:	mov    rcx,QWORD PTR [rsp+0x50]
   140008cf6:	xor    rcx,rsp
   140008cf9:	call   0x140012670
   140008cfe:	add    rsp,0x68
   140008d02:	ret    
   140008d03:	int3   
   140008d04:	int3   
   140008d05:	int3   
   140008d06:	int3   
   140008d07:	int3   
   140008d08:	int3   
   140008d09:	int3   
   140008d0a:	int3   
   140008d0b:	int3   
   140008d0c:	int3   
   140008d0d:	int3   
   140008d0e:	int3   
   140008d0f:	int3   
   140008d10:	int3   
   140008d11:	int3   
   140008d12:	int3   
   140008d13:	int3   
   140008d14:	int3   
   140008d15:	int3   
   140008d16:	int3   
   140008d17:	int3   
   140008d18:	mov    QWORD PTR [rsp+0x10],rbx
   140008d1d:	mov    QWORD PTR [rsp+0x18],rsi
   140008d22:	push   rdi
   140008d23:	sub    rsp,0x40
   140008d27:	mov    rax,QWORD PTR [rip+0x36c02]        # 0x14003f930
   140008d2e:	xor    rax,rsp
   140008d31:	mov    QWORD PTR [rsp+0x38],rax
   140008d36:	xor    eax,eax
   140008d38:	mov    rdi,rcx
   140008d3b:	mov    DWORD PTR [rsp+0x20],0x10
   140008d43:	mov    WORD PTR [rsp+0x28],ax
   140008d48:	mov    QWORD PTR [rsp+0x2a],rax
   140008d4d:	mov    DWORD PTR [rsp+0x32],eax
   140008d51:	mov    WORD PTR [rsp+0x36],ax
   140008d56:	call   0x140009fec
   140008d5b:	lea    rcx,[rip+0x319f6]        # 0x14003a758
   140008d62:	mov    ebx,0x2
   140008d67:	mov    WORD PTR [rsp+0x28],bx
   140008d6c:	call   QWORD PTR [rip+0x266c6]        # 0x14002f438
   140008d72:	lea    edx,[rbx-0x1]
   140008d75:	xor    r8d,r8d
   140008d78:	mov    ecx,ebx
   140008d7a:	mov    DWORD PTR [rsp+0x2c],eax
   140008d7e:	call   QWORD PTR [rip+0x266bc]        # 0x14002f440
   140008d84:	or     rsi,0xffffffffffffffff
   140008d88:	mov    rbx,rax
   140008d8b:	cmp    rax,rsi
   140008d8e:	jne    0x140008d95
   140008d90:	mov    rax,rsi
   140008d93:	jmp    0x140008df7
   140008d95:	lea    rdx,[rsp+0x28]
   140008d9a:	mov    r8d,0x10
   140008da0:	mov    rcx,rax
   140008da3:	call   QWORD PTR [rip+0x2669f]        # 0x14002f448
   140008da9:	mov    rcx,rbx
   140008dac:	cmp    eax,esi
   140008dae:	jne    0x140008db7
   140008db0:	call   0x14000a0cc
   140008db5:	jmp    0x140008d90
   140008db7:	lea    r8,[rsp+0x20]
   140008dbc:	lea    rdx,[rsp+0x28]
   140008dc1:	call   QWORD PTR [rip+0x26669]        # 0x14002f430
   140008dc7:	mov    rcx,rbx
   140008dca:	cmp    eax,esi
   140008dcc:	je     0x140008db0
   140008dce:	mov    edx,0x7fffffff
   140008dd3:	call   QWORD PTR [rip+0x2668f]        # 0x14002f468
   140008dd9:	cmp    eax,esi
   140008ddb:	jne    0x140008de2
   140008ddd:	mov    rcx,rbx
   140008de0:	jmp    0x140008db0
   140008de2:	movzx  ecx,WORD PTR [rsp+0x2a]
   140008de7:	call   QWORD PTR [rip+0x26673]        # 0x14002f460
   140008ded:	movzx  r11d,ax
   140008df1:	mov    rax,rbx
   140008df4:	mov    DWORD PTR [rdi],r11d
   140008df7:	mov    rcx,QWORD PTR [rsp+0x38]
   140008dfc:	xor    rcx,rsp
   140008dff:	call   0x140012670
   140008e04:	mov    rbx,QWORD PTR [rsp+0x58]
   140008e09:	mov    rsi,QWORD PTR [rsp+0x60]
   140008e0e:	add    rsp,0x40
   140008e12:	pop    rdi
   140008e13:	ret    
   140008e14:	int3   
   140008e15:	int3   
   140008e16:	int3   
   140008e17:	int3   
   140008e18:	int3   
   140008e19:	int3   
   140008e1a:	int3   
   140008e1b:	int3   
   140008e1c:	int3   
   140008e1d:	int3   
   140008e1e:	int3   
   140008e1f:	int3   
   140008e20:	int3   
   140008e21:	int3   
   140008e22:	int3   
   140008e23:	int3   
   140008e24:	int3   
   140008e25:	int3   
   140008e26:	int3   
   140008e27:	int3   
   140008e28:	mov    QWORD PTR [rsp+0x10],rbx
   140008e2d:	push   rdi
   140008e2e:	sub    rsp,0x40
   140008e32:	mov    rax,QWORD PTR [rip+0x36af7]        # 0x14003f930
   140008e39:	xor    rax,rsp
   140008e3c:	mov    QWORD PTR [rsp+0x30],rax
   140008e41:	xor    eax,eax
   140008e43:	mov    ebx,ecx
   140008e45:	mov    WORD PTR [rsp+0x20],ax
   140008e4a:	mov    QWORD PTR [rsp+0x22],rax
   140008e4f:	mov    DWORD PTR [rsp+0x2a],eax
   140008e53:	mov    WORD PTR [rsp+0x2e],ax
   140008e58:	call   0x140009fec
   140008e5d:	mov    edi,0x2
   140008e62:	movzx  ecx,bx
   140008e65:	mov    WORD PTR [rsp+0x20],di
   140008e6a:	call   QWORD PTR [rip+0x265b8]        # 0x14002f428
   140008e70:	lea    rcx,[rip+0x318f1]        # 0x14003a768
   140008e77:	mov    WORD PTR [rsp+0x22],ax
   140008e7c:	call   QWORD PTR [rip+0x265b6]        # 0x14002f438
   140008e82:	lea    edx,[rdi-0x1]
   140008e85:	xor    r8d,r8d
   140008e88:	mov    ecx,edi
   140008e8a:	mov    DWORD PTR [rsp+0x24],eax
   140008e8e:	call   QWORD PTR [rip+0x265ac]        # 0x14002f440
   140008e94:	or     rdi,0xffffffffffffffff
   140008e98:	mov    rbx,rax
   140008e9b:	cmp    rax,rdi
   140008e9e:	jne    0x140008ea5
   140008ea0:	mov    rax,rdi
   140008ea3:	jmp    0x140008ede
   140008ea5:	lea    rdx,[rsp+0x20]
   140008eaa:	mov    r8d,0x10
   140008eb0:	mov    rcx,rax
   140008eb3:	call   QWORD PTR [rip+0x2658f]        # 0x14002f448
   140008eb9:	mov    rcx,rbx
   140008ebc:	cmp    eax,edi
   140008ebe:	jne    0x140008ec7
   140008ec0:	call   0x14000a0cc
   140008ec5:	jmp    0x140008ea0
   140008ec7:	mov    edx,0x7fffffff
   140008ecc:	call   QWORD PTR [rip+0x26596]        # 0x14002f468
   140008ed2:	cmp    eax,edi
   140008ed4:	jne    0x140008edb
   140008ed6:	mov    rcx,rbx
   140008ed9:	jmp    0x140008ec0
   140008edb:	mov    rax,rbx
   140008ede:	mov    rcx,QWORD PTR [rsp+0x30]
   140008ee3:	xor    rcx,rsp
   140008ee6:	call   0x140012670
   140008eeb:	mov    rbx,QWORD PTR [rsp+0x58]
   140008ef0:	add    rsp,0x40
   140008ef4:	pop    rdi
   140008ef5:	ret    
   140008ef6:	int3   
   140008ef7:	int3   
   140008ef8:	int3   
   140008ef9:	int3   
   140008efa:	int3   
   140008efb:	int3   
   140008efc:	int3   
   140008efd:	int3   
   140008efe:	int3   
   140008eff:	int3   
   140008f00:	int3   
   140008f01:	int3   
   140008f02:	int3   
   140008f03:	int3   
   140008f04:	int3   
   140008f05:	int3   
   140008f06:	int3   
   140008f07:	int3   
   140008f08:	mov    QWORD PTR [rsp+0x10],rbx
   140008f0d:	push   rdi
   140008f0e:	sub    rsp,0x40
   140008f12:	mov    rax,QWORD PTR [rip+0x36a17]        # 0x14003f930
   140008f19:	xor    rax,rsp
   140008f1c:	mov    QWORD PTR [rsp+0x30],rax
   140008f21:	xor    eax,eax
   140008f23:	mov    ebx,ecx
   140008f25:	mov    WORD PTR [rsp+0x20],ax
   140008f2a:	mov    QWORD PTR [rsp+0x22],rax
   140008f2f:	mov    DWORD PTR [rsp+0x2a],eax
   140008f33:	mov    WORD PTR [rsp+0x2e],ax
   140008f38:	call   0x140009fec
   140008f3d:	mov    edi,0x2
   140008f42:	movzx  ecx,bx
   140008f45:	mov    WORD PTR [rsp+0x20],di
   140008f4a:	call   QWORD PTR [rip+0x264d8]        # 0x14002f428
   140008f50:	lea    rcx,[rip+0x31821]        # 0x14003a778
   140008f57:	mov    WORD PTR [rsp+0x22],ax
   140008f5c:	call   QWORD PTR [rip+0x264d6]        # 0x14002f438
   140008f62:	lea    edx,[rdi-0x1]
   140008f65:	xor    r8d,r8d
   140008f68:	mov    ecx,edi
   140008f6a:	mov    DWORD PTR [rsp+0x24],eax
   140008f6e:	call   QWORD PTR [rip+0x264cc]        # 0x14002f440
   140008f74:	or     rdi,0xffffffffffffffff
   140008f78:	mov    rbx,rax
   140008f7b:	cmp    rax,rdi
   140008f7e:	jne    0x140008f85
   140008f80:	mov    rax,rdi
   140008f83:	jmp    0x140008faa
   140008f85:	lea    rdx,[rsp+0x20]
   140008f8a:	mov    r8d,0x10
   140008f90:	mov    rcx,rax
   140008f93:	call   QWORD PTR [rip+0x26487]        # 0x14002f420
   140008f99:	cmp    eax,edi
   140008f9b:	jne    0x140008fa7
   140008f9d:	mov    rcx,rbx
   140008fa0:	call   0x14000a0cc
   140008fa5:	jmp    0x140008f80
   140008fa7:	mov    rax,rbx
   140008faa:	mov    rcx,QWORD PTR [rsp+0x30]
   140008faf:	xor    rcx,rsp
   140008fb2:	call   0x140012670
   140008fb7:	mov    rbx,QWORD PTR [rsp+0x58]
   140008fbc:	add    rsp,0x40
   140008fc0:	pop    rdi
   140008fc1:	ret    
   140008fc2:	int3   
   140008fc3:	int3   
   140008fc4:	int3   
   140008fc5:	int3   
   140008fc6:	int3   
   140008fc7:	int3   
   140008fc8:	mov    QWORD PTR [rsp+0x10],rbx
   140008fcd:	mov    QWORD PTR [rsp+0x18],rsi
   140008fd2:	mov    QWORD PTR [rsp+0x20],rdi
   140008fd7:	push   rbp
   140008fd8:	mov    rbp,rsp
   140008fdb:	sub    rsp,0x40
   140008fdf:	mov    rax,QWORD PTR [rip+0x3694a]        # 0x14003f930
   140008fe6:	xor    rax,rsp
   140008fe9:	mov    QWORD PTR [rbp-0x8],rax
   140008fed:	xor    eax,eax
   140008fef:	mov    rsi,rcx
   140008ff2:	mov    DWORD PTR [rbp-0x20],0x10
   140008ff9:	mov    WORD PTR [rbp-0x18],ax
   140008ffd:	mov    QWORD PTR [rbp-0x16],rax
   140009001:	mov    DWORD PTR [rbp-0xe],eax
   140009004:	mov    WORD PTR [rbp-0xa],ax
   140009008:	call   0x140009fec
   14000900d:	movzx  ecx,WORD PTR [rsi]
   140009010:	mov    ebx,0x2
   140009015:	mov    WORD PTR [rbp-0x18],bx
   140009019:	call   QWORD PTR [rip+0x26409]        # 0x14002f428
   14000901f:	lea    rcx,[rip+0x31762]        # 0x14003a788
   140009026:	mov    WORD PTR [rbp-0x16],ax
   14000902a:	call   QWORD PTR [rip+0x26408]        # 0x14002f438
   140009030:	lea    edx,[rbx-0x1]
   140009033:	xor    r8d,r8d
   140009036:	mov    ecx,ebx
   140009038:	mov    DWORD PTR [rbp-0x14],eax
   14000903b:	call   QWORD PTR [rip+0x263ff]        # 0x14002f440
   140009041:	or     rbx,0xffffffffffffffff
   140009045:	mov    rdi,rax
   140009048:	cmp    rax,rbx
   14000904b:	je     0x140009093
   14000904d:	lea    r8d,[rbx+0x11]
   140009051:	lea    rdx,[rbp-0x18]
   140009055:	mov    rcx,rax
   140009058:	call   QWORD PTR [rip+0x263ea]        # 0x14002f448
   14000905e:	mov    rcx,rdi
   140009061:	cmp    eax,ebx
   140009063:	je     0x14000908e
   140009065:	lea    r8,[rbp-0x20]
   140009069:	lea    rdx,[rbp-0x18]
   14000906d:	call   QWORD PTR [rip+0x263bd]        # 0x14002f430
   140009073:	cmp    eax,ebx
   140009075:	je     0x14000908b
   140009077:	movzx  ecx,WORD PTR [rbp-0x16]
   14000907b:	call   QWORD PTR [rip+0x263df]        # 0x14002f460
   140009081:	mov    rbx,rdi
   140009084:	movzx  r11d,ax
   140009088:	mov    DWORD PTR [rsi],r11d
   14000908b:	mov    rcx,rdi
   14000908e:	call   0x14000a0cc
   140009093:	mov    rax,rbx
   140009096:	mov    rcx,QWORD PTR [rbp-0x8]
   14000909a:	xor    rcx,rsp
   14000909d:	call   0x140012670
   1400090a2:	mov    rbx,QWORD PTR [rsp+0x58]
   1400090a7:	mov    rsi,QWORD PTR [rsp+0x60]
   1400090ac:	mov    rdi,QWORD PTR [rsp+0x68]
   1400090b1:	add    rsp,0x40
   1400090b5:	pop    rbp
   1400090b6:	ret    
   1400090b7:	int3   
   1400090b8:	int3   
   1400090b9:	int3   
   1400090ba:	int3   
   1400090bb:	int3   
   1400090bc:	int3   
   1400090bd:	int3   
   1400090be:	int3   
   1400090bf:	int3   
   1400090c0:	int3   
   1400090c1:	int3   
   1400090c2:	int3   
   1400090c3:	int3   
   1400090c4:	int3   
   1400090c5:	int3   
   1400090c6:	int3   
   1400090c7:	int3   
   1400090c8:	sub    rsp,0x28
   1400090cc:	xor    r9d,r9d
   1400090cf:	mov    BYTE PTR [rsp+0x38],dl
   1400090d3:	lea    rdx,[rsp+0x38]
   1400090d8:	lea    r8d,[r9+0x1]
   1400090dc:	call   QWORD PTR [rip+0x26396]        # 0x14002f478
   1400090e2:	xor    ecx,ecx
   1400090e4:	cmp    eax,0xffffffff
   1400090e7:	setne  cl
   1400090ea:	mov    eax,ecx
   1400090ec:	add    rsp,0x28
   1400090f0:	ret    
   1400090f1:	int3   
   1400090f2:	int3   
   1400090f3:	int3   
   1400090f4:	int3   
   1400090f5:	int3   
   1400090f6:	int3   
   1400090f7:	int3   
   1400090f8:	mov    rax,rsp
   1400090fb:	mov    QWORD PTR [rax+0x8],rbx
   1400090ff:	mov    QWORD PTR [rax+0x10],rbp
   140009103:	mov    QWORD PTR [rax+0x18],rsi
   140009107:	mov    QWORD PTR [rax+0x20],rdi
   14000910b:	push   r12
   14000910d:	sub    rsp,0x20
   140009111:	xor    ebx,ebx
   140009113:	mov    rsi,rdx
   140009116:	mov    r12,rcx
   140009119:	test   rdx,rdx
   14000911c:	jne    0x140009122
   14000911e:	xor    eax,eax
   140009120:	jmp    0x140009191
   140009122:	or     rcx,0xffffffffffffffff
   140009126:	xor    eax,eax
   140009128:	mov    rdi,rdx
   14000912b:	repnz scas ax,WORD PTR es:[rdi]
   14000912e:	not    rcx
   140009131:	lea    eax,[rcx+rcx*1+0x4]
   140009135:	movsxd rdi,eax
   140009138:	lea    rcx,[rdi+rdi*1]
   14000913c:	call   0x140013298
   140009141:	mov    rbp,rax
   140009144:	test   rax,rax
   140009147:	je     0x14000911e
   140009149:	lea    r8,[rip+0x31648]        # 0x14003a798
   140009150:	mov    r9,rsi
   140009153:	mov    rdx,rdi
   140009156:	mov    rcx,rax
   140009159:	call   0x14000a30c
   14000915e:	or     rcx,0xffffffffffffffff
   140009162:	xor    eax,eax
   140009164:	mov    rdi,rbp
   140009167:	xor    r9d,r9d
   14000916a:	mov    rdx,rbp
   14000916d:	repnz scas ax,WORD PTR es:[rdi]
   140009170:	not    rcx
   140009173:	lea    r8d,[rcx+rcx*1-0x2]
   140009178:	mov    rcx,r12
   14000917b:	call   QWORD PTR [rip+0x262f7]        # 0x14002f478
   140009181:	mov    rcx,rbp
   140009184:	cmp    eax,0xffffffff
   140009187:	setne  bl
   14000918a:	call   0x1400130a8
   14000918f:	mov    eax,ebx
   140009191:	mov    rbx,QWORD PTR [rsp+0x30]
   140009196:	mov    rbp,QWORD PTR [rsp+0x38]
   14000919b:	mov    rsi,QWORD PTR [rsp+0x40]
   1400091a0:	mov    rdi,QWORD PTR [rsp+0x48]
   1400091a5:	add    rsp,0x20
   1400091a9:	pop    r12
   1400091ab:	ret    
   1400091ac:	int3   
   1400091ad:	int3   
   1400091ae:	int3   
   1400091af:	int3   
   1400091b0:	int3   
   1400091b1:	int3   
   1400091b2:	int3   
   1400091b3:	int3   
   1400091b4:	int3   
   1400091b5:	int3   
   1400091b6:	int3   
   1400091b7:	int3   
   1400091b8:	mov    rax,rsp
   1400091bb:	mov    QWORD PTR [rax+0x8],rbx
   1400091bf:	mov    QWORD PTR [rax+0x10],rbp
   1400091c3:	mov    QWORD PTR [rax+0x18],rsi
   1400091c7:	mov    QWORD PTR [rax+0x20],rdi
   1400091cb:	push   r12
   1400091cd:	sub    rsp,0x20
   1400091d1:	lea    rbp,[rip+0x44df8]        # 0x14004dfd0
   1400091d8:	xor    r12d,r12d
   1400091db:	mov    rsi,rcx
   1400091de:	mov    rdi,rbp
   1400091e1:	mov    ebx,r12d
   1400091e4:	movsxd rax,ebx
   1400091e7:	xor    r9d,r9d
   1400091ea:	mov    rcx,rsi
   1400091ed:	lea    rdx,[rbp+rax*2+0x0]
   1400091f2:	lea    r8d,[r9+0x2]
   1400091f6:	call   QWORD PTR [rip+0x26254]        # 0x14002f450
   1400091fc:	cmp    eax,0xffffffff
   1400091ff:	je     0x140009237
   140009201:	test   eax,eax
   140009203:	je     0x14000922c
   140009205:	cmp    WORD PTR [rdi],0xa
   140009209:	je     0x14000922c
   14000920b:	cmp    WORD PTR [rdi],0xd
   14000920f:	je     0x140009217
   140009211:	inc    ebx
   140009213:	add    rdi,0x2
   140009217:	cmp    ebx,0x3ff
   14000921d:	jl     0x1400091e4
   14000921f:	mov    WORD PTR [rip+0x455a7],r12w        # 0x14004e7ce
   140009227:	mov    rax,rbp
   14000922a:	jmp    0x140009239
   14000922c:	movsxd rcx,ebx
   14000922f:	mov    WORD PTR [rbp+rcx*2+0x0],r12w
   140009235:	jmp    0x140009227
   140009237:	xor    eax,eax
   140009239:	mov    rbx,QWORD PTR [rsp+0x30]
   14000923e:	mov    rbp,QWORD PTR [rsp+0x38]
   140009243:	mov    rsi,QWORD PTR [rsp+0x40]
   140009248:	mov    rdi,QWORD PTR [rsp+0x48]
   14000924d:	add    rsp,0x20
   140009251:	pop    r12
   140009253:	ret    
   140009254:	int3   
   140009255:	int3   
   140009256:	int3   
   140009257:	int3   
   140009258:	int3   
   140009259:	int3   
   14000925a:	int3   
   14000925b:	int3   
   14000925c:	int3   
   14000925d:	int3   
   14000925e:	int3   
   14000925f:	int3   
   140009260:	int3   
   140009261:	int3   
   140009262:	int3   
   140009263:	int3   
   140009264:	int3   
   140009265:	int3   
   140009266:	int3   
   140009267:	int3   
   140009268:	mov    QWORD PTR [rsp+0x8],rbx
   14000926d:	push   rdi
   14000926e:	sub    rsp,0x20
   140009272:	mov    ebx,ecx
   140009274:	call   0x14000a1ac
   140009279:	lea    rdx,[rip+0x31528]        # 0x14003a7a8
   140009280:	mov    rcx,rax
   140009283:	mov    r8d,0x3
   140009289:	mov    rdi,rax
   14000928c:	call   0x140014944
   140009291:	xor    edx,edx
   140009293:	test   eax,eax
   140009295:	sete   dl
   140009298:	mov    DWORD PTR [rip+0x314d6],edx        # 0x14003a774
   14000929e:	test   ebx,ebx
   1400092a0:	je     0x1400092c0
   1400092a2:	call   0x14000a1bc
   1400092a7:	mov    r9d,DWORD PTR [rip+0x314c6]        # 0x14003a774
   1400092ae:	lea    rcx,[rip+0x314fb]        # 0x14003a7b0
   1400092b5:	mov    r8,rax
   1400092b8:	mov    rdx,rdi
   1400092bb:	call   0x1400136cc
   1400092c0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400092c5:	add    rsp,0x20
   1400092c9:	pop    rdi
   1400092ca:	ret    
   1400092cb:	int3   
   1400092cc:	int3   
   1400092cd:	int3   
   1400092ce:	int3   
   1400092cf:	int3   
   1400092d0:	int3   
   1400092d1:	int3   
   1400092d2:	int3   
   1400092d3:	int3   
   1400092d4:	int3   
   1400092d5:	int3   
   1400092d6:	int3   
   1400092d7:	int3   
   1400092d8:	mov    eax,DWORD PTR [rip+0x31496]        # 0x14003a774
   1400092de:	ret    
   1400092df:	int3   
   1400092e0:	int3   
   1400092e1:	int3   
   1400092e2:	int3   
   1400092e3:	int3   
   1400092e4:	int3   
   1400092e5:	int3   
   1400092e6:	int3   
   1400092e7:	int3   
   1400092e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400092ed:	mov    QWORD PTR [rsp+0x10],rbp
   1400092f2:	mov    QWORD PTR [rsp+0x18],rsi
   1400092f7:	push   rdi
   1400092f8:	sub    rsp,0x20
   1400092fc:	xor    esi,esi
   1400092fe:	xor    eax,eax
   140009300:	mov    rbx,rcx
   140009303:	test   rcx,rcx
   140009306:	je     0x1400093d1
   14000930c:	or     rcx,0xffffffffffffffff
   140009310:	mov    rdi,rbx
   140009313:	lea    rdx,[rip+0x314ce]        # 0x14003a7e8
   14000931a:	repnz scas ax,WORD PTR es:[rdi]
   14000931d:	not    rcx
   140009320:	lea    rdi,[rcx-0x1]
   140009324:	mov    rcx,rbx
   140009327:	call   0x1400152ec
   14000932c:	test   rax,rax
   14000932f:	jne    0x14000933e
   140009331:	mov    rcx,rbx
   140009334:	call   0x1400130e8
   140009339:	jmp    0x1400093d1
   14000933e:	mov    ebp,0x22
   140009343:	cmp    edi,0x1
   140009346:	jle    0x140009357
   140009348:	cmp    WORD PTR [rbx],bp
   14000934b:	jne    0x140009357
   14000934d:	movsxd rax,edi
   140009350:	cmp    WORD PTR [rbx+rax*2-0x2],bp
   140009355:	je     0x140009331
   140009357:	lea    ecx,[rdi+0x3]
   14000935a:	movsxd rdi,edi
   14000935d:	mov    rax,rsi
   140009360:	test   rdi,rdi
   140009363:	jle    0x140009375
   140009365:	cmp    WORD PTR [rbx+rax*2],bp
   140009369:	jne    0x14000936d
   14000936b:	inc    ecx
   14000936d:	inc    rax
   140009370:	cmp    rax,rdi
   140009373:	jl     0x140009365
   140009375:	movsxd rcx,ecx
   140009378:	add    rcx,rcx
   14000937b:	call   0x140013298
   140009380:	mov    rdx,rax
   140009383:	test   rax,rax
   140009386:	je     0x1400093d1
   140009388:	mov    WORD PTR [rax],bp
   14000938b:	mov    r8,rsi
   14000938e:	mov    eax,0x1
   140009393:	test   rdi,rdi
   140009396:	jle    0x1400093c9
   140009398:	lea    rcx,[rdx+0x2]
   14000939c:	movzx  r9d,WORD PTR [rbx+r8*2]
   1400093a1:	cmp    r9w,bp
   1400093a5:	jne    0x1400093b7
   1400093a7:	mov    r10d,0x5c
   1400093ad:	inc    eax
   1400093af:	mov    WORD PTR [rcx],r10w
   1400093b3:	add    rcx,0x2
   1400093b7:	inc    r8
   1400093ba:	mov    WORD PTR [rcx],r9w
   1400093be:	inc    eax
   1400093c0:	add    rcx,0x2
   1400093c4:	cmp    r8,rdi
   1400093c7:	jl     0x14000939c
   1400093c9:	cdqe   
   1400093cb:	mov    DWORD PTR [rdx+rax*2],ebp
   1400093ce:	mov    rax,rdx
   1400093d1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400093d6:	mov    rbp,QWORD PTR [rsp+0x38]
   1400093db:	mov    rsi,QWORD PTR [rsp+0x40]
   1400093e0:	add    rsp,0x20
   1400093e4:	pop    rdi
   1400093e5:	ret    
   1400093e6:	int3   
   1400093e7:	int3   
   1400093e8:	int3   
   1400093e9:	int3   
   1400093ea:	int3   
   1400093eb:	int3   
   1400093ec:	int3   
   1400093ed:	int3   
   1400093ee:	int3   
   1400093ef:	int3   
   1400093f0:	int3   
   1400093f1:	int3   
   1400093f2:	int3   
   1400093f3:	int3   
   1400093f4:	int3   
   1400093f5:	int3   
   1400093f6:	int3   
   1400093f7:	int3   
   1400093f8:	lea    rcx,[rip+0x313f1]        # 0x14003a7f0
   1400093ff:	jmp    0x140013474
   140009404:	int3   
   140009405:	int3   
   140009406:	int3   
   140009407:	int3   
   140009408:	int3   
   140009409:	int3   
   14000940a:	int3   
   14000940b:	int3   
   14000940c:	int3   
   14000940d:	int3   
   14000940e:	int3   
   14000940f:	int3   
   140009410:	int3   
   140009411:	int3   
   140009412:	int3   
   140009413:	int3   
   140009414:	int3   
   140009415:	int3   
   140009416:	int3   
   140009417:	int3   
   140009418:	lea    rcx,[rip+0x313f1]        # 0x14003a810
   14000941f:	jmp    0x140013474
   140009424:	int3   
   140009425:	int3   
   140009426:	int3   
   140009427:	int3   
   140009428:	int3   
   140009429:	int3   
   14000942a:	int3   
   14000942b:	int3   
   14000942c:	int3   
   14000942d:	int3   
   14000942e:	int3   
   14000942f:	int3   
   140009430:	int3   
   140009431:	int3   
   140009432:	int3   
   140009433:	int3   
   140009434:	int3   
   140009435:	int3   
   140009436:	int3   
   140009437:	int3   
   140009438:	lea    rcx,[rip+0x313f9]        # 0x14003a838
   14000943f:	jmp    0x140013474
   140009444:	int3   
   140009445:	int3   
   140009446:	int3   
   140009447:	int3   
   140009448:	int3   
   140009449:	int3   
   14000944a:	int3   
   14000944b:	int3   
   14000944c:	int3   
   14000944d:	int3   
   14000944e:	int3   
   14000944f:	int3   
   140009450:	int3   
   140009451:	int3   
   140009452:	int3   
   140009453:	int3   
   140009454:	int3   
   140009455:	int3   
   140009456:	int3   
   140009457:	int3   
   140009458:	mov    QWORD PTR [rsp+0x8],rsi
   14000945d:	push   rdi
   14000945e:	sub    rsp,0x30
   140009462:	cmp    DWORD PTR [rip+0x46b67],0x0        # 0x14004ffd0
   140009469:	lea    rsi,[rip+0x46360]        # 0x14004f7d0
   140009470:	jne    0x14000956b
   140009476:	lea    rcx,[rip+0x31393]        # 0x14003a810
   14000947d:	call   0x140013474
   140009482:	lea    rdi,[rip+0x31367]        # 0x14003a7f0
   140009489:	test   rax,rax
   14000948c:	jne    0x1400094ec
   14000948e:	mov    rcx,rdi
   140009491:	call   0x140013474
   140009496:	test   rax,rax
   140009499:	jne    0x1400094ec
   14000949b:	call   0x14000acac
   1400094a0:	or     rcx,0xffffffffffffffff
   1400094a4:	mov    edx,0x400
   1400094a9:	mov    r8,rax
   1400094ac:	xor    eax,eax
   1400094ae:	mov    rdi,r8
   1400094b1:	repnz scas ax,WORD PTR es:[rdi]
   1400094b4:	not    rcx
   1400094b7:	lea    r9,[rcx-0x4]
   1400094bb:	mov    rcx,rsi
   1400094be:	call   0x140013da4
   1400094c3:	xor    eax,eax
   1400094c5:	or     rcx,0xffffffffffffffff
   1400094c9:	mov    rdi,rsi
   1400094cc:	lea    rdx,[rip+0x31395]        # 0x14003a868
   1400094d3:	repnz scas ax,WORD PTR es:[rdi]
   1400094d6:	xor    ecx,ecx
   1400094d8:	movzx  eax,WORD PTR [rdx+rcx*1]
   1400094dc:	add    rcx,0x2
   1400094e0:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   1400094e5:	test   ax,ax
   1400094e8:	jne    0x1400094d8
   1400094ea:	jmp    0x140009561
   1400094ec:	mov    rcx,rdi
   1400094ef:	call   0x140013474
   1400094f4:	test   rax,rax
   1400094f7:	je     0x140009519
   1400094f9:	mov    rcx,rdi
   1400094fc:	call   0x140013474
   140009501:	lea    r8,[rip+0x31370]        # 0x14003a878
   140009508:	mov    r9,rax
   14000950b:	lea    rax,[rip+0x3135e]        # 0x14003a870
   140009512:	mov    QWORD PTR [rsp+0x28],rax
   140009517:	jmp    0x14000954c
   140009519:	lea    rcx,[rip+0x312f0]        # 0x14003a810
   140009520:	call   0x140013474
   140009525:	test   rax,rax
   140009528:	je     0x140009561
   14000952a:	lea    rcx,[rip+0x312df]        # 0x14003a810
   140009531:	call   0x140013474
   140009536:	lea    rcx,[rip+0x3134b]        # 0x14003a888
   14000953d:	lea    r8,[rip+0x3134c]        # 0x14003a890
   140009544:	mov    r9,rax
   140009547:	mov    QWORD PTR [rsp+0x28],rcx
   14000954c:	mov    edx,0x400
   140009551:	mov    rcx,rsi
   140009554:	mov    DWORD PTR [rsp+0x20],0x5c
   14000955c:	call   0x14000a30c
   140009561:	mov    DWORD PTR [rip+0x46a65],0x1        # 0x14004ffd0
   14000956b:	mov    rax,rsi
   14000956e:	mov    rsi,QWORD PTR [rsp+0x40]
   140009573:	add    rsp,0x30
   140009577:	pop    rdi
   140009578:	ret    
   140009579:	int3   
   14000957a:	int3   
   14000957b:	int3   
   14000957c:	int3   
   14000957d:	int3   
   14000957e:	int3   
   14000957f:	int3   
   140009580:	int3   
   140009581:	int3   
   140009582:	int3   
   140009583:	int3   
   140009584:	int3   
   140009585:	int3   
   140009586:	int3   
   140009587:	int3   
   140009588:	sub    rsp,0x38
   14000958c:	cmp    DWORD PTR [rip+0x46a41],0x0        # 0x14004ffd4
   140009593:	jne    0x1400095d3
   140009595:	call   0x140009458
   14000959a:	lea    rcx,[rip+0x312ff]        # 0x14003a8a0
   1400095a1:	lea    r8,[rip+0x31308]        # 0x14003a8b0
   1400095a8:	mov    QWORD PTR [rsp+0x28],rcx
   1400095ad:	lea    rcx,[rip+0x4521c]        # 0x14004e7d0
   1400095b4:	mov    edx,0x400
   1400095b9:	mov    r9,rax
   1400095bc:	mov    DWORD PTR [rsp+0x20],0x5c
   1400095c4:	call   0x14000a30c
   1400095c9:	mov    DWORD PTR [rip+0x46a01],0x1        # 0x14004ffd4
   1400095d3:	lea    rax,[rip+0x451f6]        # 0x14004e7d0
   1400095da:	add    rsp,0x38
   1400095de:	ret    
   1400095df:	int3   
   1400095e0:	int3   
   1400095e1:	int3   
   1400095e2:	int3   
   1400095e3:	int3   
   1400095e4:	int3   
   1400095e5:	int3   
   1400095e6:	int3   
   1400095e7:	int3   
   1400095e8:	sub    rsp,0x38
   1400095ec:	cmp    DWORD PTR [rip+0x469e5],0x0        # 0x14004ffd8
   1400095f3:	jne    0x140009633
   1400095f5:	call   0x140009458
   1400095fa:	lea    rcx,[rip+0x312bf]        # 0x14003a8c0
   140009601:	lea    r8,[rip+0x312d0]        # 0x14003a8d8
   140009608:	mov    QWORD PTR [rsp+0x28],rcx
   14000960d:	lea    rcx,[rip+0x459bc]        # 0x14004efd0
   140009614:	mov    edx,0x400
   140009619:	mov    r9,rax
   14000961c:	mov    DWORD PTR [rsp+0x20],0x5c
   140009624:	call   0x14000a30c
   140009629:	mov    DWORD PTR [rip+0x469a5],0x1        # 0x14004ffd8
   140009633:	lea    rax,[rip+0x45996]        # 0x14004efd0
   14000963a:	add    rsp,0x38
   14000963e:	ret    
   14000963f:	int3   
   140009640:	int3   
   140009641:	int3   
   140009642:	int3   
   140009643:	int3   
   140009644:	int3   
   140009645:	int3   
   140009646:	int3   
   140009647:	int3   
   140009648:	sub    rsp,0x28
   14000964c:	test   rcx,rcx
   14000964f:	je     0x140009656
   140009651:	call   0x140015324
   140009656:	xor    ecx,ecx
   140009658:	call   0x140013c2c
   14000965d:	int3   
   14000965e:	int3   
   14000965f:	int3   
   140009660:	int3   
   140009661:	int3   
   140009662:	int3   
   140009663:	int3   
   140009664:	int3   
   140009665:	int3   
   140009666:	int3   
   140009667:	int3   
   140009668:	mov    rax,rsp
   14000966b:	mov    QWORD PTR [rax+0x8],rbx
   14000966f:	mov    QWORD PTR [rax+0x10],rbp
   140009673:	mov    QWORD PTR [rax+0x18],rsi
   140009677:	mov    QWORD PTR [rax+0x20],rdi
   14000967b:	push   r12
   14000967d:	sub    rsp,0x20
   140009681:	mov    rbx,rcx
   140009684:	mov    edi,0x400
   140009689:	mov    ecx,edi
   14000968b:	call   0x140013298
   140009690:	xor    r12d,r12d
   140009693:	mov    rsi,rax
   140009696:	mov    ebp,r12d
   140009699:	test   rax,rax
   14000969c:	jne    0x1400097a4
   1400096a2:	jmp    0x1400097b3
   1400096a7:	mov    ecx,0xfeff
   1400096ac:	cmp    ax,cx
   1400096af:	je     0x1400097a0
   1400096b5:	mov    ecx,0xfffe
   1400096ba:	cmp    ax,cx
   1400096bd:	je     0x1400097a0
   1400096c3:	movsxd rcx,ebp
   1400096c6:	movsxd rdx,edi
   1400096c9:	add    rcx,rsi
   1400096cc:	cmp    ax,0x7f
   1400096d0:	jae    0x1400096e2
   1400096d2:	movzx  r9d,ax
   1400096d6:	lea    r8,[rip+0x310a7]        # 0x14003a784
   1400096dd:	jmp    0x140009797
   1400096e2:	lea    r8,[rip+0x310ab]        # 0x14003a794
   1400096e9:	mov    r9d,0x5c
   1400096ef:	call   0x140015354
   1400096f4:	inc    ebp
   1400096f6:	dec    edi
   1400096f8:	movsxd rcx,ebp
   1400096fb:	lea    r8,[rip+0x310a2]        # 0x14003a7a4
   140009702:	mov    r9d,0x75
   140009708:	add    rcx,rsi
   14000970b:	movsxd rdx,edi
   14000970e:	call   0x140015354
   140009713:	movzx  r9d,WORD PTR [rbx]
   140009717:	inc    ebp
   140009719:	movsxd rcx,ebp
   14000971c:	dec    edi
   14000971e:	lea    r8,[rip+0x310bf]        # 0x14003a7e4
   140009725:	shr    r9d,0xc
   140009729:	add    rcx,rsi
   14000972c:	movsxd rdx,edi
   14000972f:	call   0x140015354
   140009734:	movzx  r9d,BYTE PTR [rbx+0x1]
   140009739:	inc    ebp
   14000973b:	movsxd rcx,ebp
   14000973e:	dec    edi
   140009740:	lea    r8,[rip+0x3111d]        # 0x14003a864
   140009747:	and    r9d,0xf
   14000974b:	add    rcx,rsi
   14000974e:	movsxd rdx,edi
   140009751:	call   0x140015354
   140009756:	movzx  r9d,WORD PTR [rbx]
   14000975a:	inc    ebp
   14000975c:	shr    r9d,0x4
   140009760:	dec    edi
   140009762:	movsxd rcx,ebp
   140009765:	lea    r8,[rip+0x31168]        # 0x14003a8d4
   14000976c:	and    r9d,0xf
   140009770:	movsxd rdx,edi
   140009773:	add    rcx,rsi
   140009776:	call   0x140015354
   14000977b:	movzx  r9d,WORD PTR [rbx]
   14000977f:	inc    ebp
   140009781:	dec    edi
   140009783:	movsxd rcx,ebp
   140009786:	and    r9d,0xf
   14000978a:	add    rcx,rsi
   14000978d:	movsxd rdx,edi
   140009790:	lea    r8,[rip+0x31151]        # 0x14003a8e8
   140009797:	call   0x140015354
   14000979c:	inc    ebp
   14000979e:	dec    edi
   1400097a0:	add    rbx,0x2
   1400097a4:	movzx  eax,WORD PTR [rbx]
   1400097a7:	test   ax,ax
   1400097aa:	jne    0x1400096a7
   1400097b0:	mov    rax,rsi
   1400097b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097b8:	mov    rbp,QWORD PTR [rsp+0x38]
   1400097bd:	mov    rsi,QWORD PTR [rsp+0x40]
   1400097c2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400097c7:	add    rsp,0x20
   1400097cb:	pop    r12
   1400097cd:	ret    
   1400097ce:	int3   
   1400097cf:	int3   
   1400097d0:	int3   
   1400097d1:	int3   
   1400097d2:	int3   
   1400097d3:	int3   
   1400097d4:	int3   
   1400097d5:	int3   
   1400097d6:	int3   
   1400097d7:	int3   
   1400097d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400097dd:	push   rbp
   1400097de:	push   rsi
   1400097df:	push   rdi
   1400097e0:	push   r12
   1400097e2:	push   r13
   1400097e4:	push   r14
   1400097e6:	push   r15
   1400097e8:	sub    rsp,0x30
   1400097ec:	mov    rsi,rcx
   1400097ef:	or     rcx,0xffffffffffffffff
   1400097f3:	xor    eax,eax
   1400097f5:	xor    r15d,r15d
   1400097f8:	mov    rdi,rsi
   1400097fb:	repnz scas ax,WORD PTR es:[rdi]
   1400097fe:	lea    edx,[r15+0x2]
   140009802:	mov    r12d,r15d
   140009805:	not    rcx
   140009808:	mov    r14d,r15d
   14000980b:	lea    eax,[rcx+0x1]
   14000980e:	movsxd rdi,ecx
   140009811:	movsxd rcx,eax
   140009814:	call   0x140012bd4
   140009819:	mov    rbx,rax
   14000981c:	test   rax,rax
   14000981f:	je     0x140009978
   140009825:	mov    rbp,r15
   140009828:	mov    r13,rdi
   14000982b:	test   edi,edi
   14000982d:	jle    0x14000996d
   140009833:	mov    QWORD PTR [rsp+0x80],rax
   14000983b:	lea    rax,[rsi+0x8]
   14000983f:	lea    edx,[rdi-0x6]
   140009842:	mov    QWORD PTR [rsp+0x20],rax
   140009847:	lea    rax,[rsi+0x6]
   14000984b:	lea    r15,[rsi+0xa]
   14000984f:	mov    QWORD PTR [rsp+0x88],rax
   140009857:	lea    rax,[rsi+0x4]
   14000985b:	mov    DWORD PTR [rsp+0x78],edx
   14000985f:	lea    rdi,[rsi+0x2]
   140009863:	mov    rcx,rbx
   140009866:	mov    QWORD PTR [rsp+0x28],rax
   14000986b:	cmp    r14d,edx
   14000986e:	jge    0x14000991c
   140009874:	cmp    WORD PTR [rsi+rbp*2],0x5c
   140009879:	jne    0x14000991c
   14000987f:	cmp    WORD PTR [rdi],0x75
   140009883:	jne    0x14000991c
   140009889:	movzx  ecx,WORD PTR [rax]
   14000988c:	call   0x140015488
   140009891:	test   eax,eax
   140009893:	je     0x140009914
   140009895:	mov    rax,QWORD PTR [rsp+0x88]
   14000989d:	movzx  ecx,WORD PTR [rax]
   1400098a0:	call   0x140015488
   1400098a5:	test   eax,eax
   1400098a7:	je     0x140009914
   1400098a9:	mov    rax,QWORD PTR [rsp+0x20]
   1400098ae:	movzx  ecx,WORD PTR [rax]
   1400098b1:	call   0x140015488
   1400098b6:	test   eax,eax
   1400098b8:	je     0x140009914
   1400098ba:	movzx  ecx,WORD PTR [r15]
   1400098be:	call   0x140015488
   1400098c3:	test   eax,eax
   1400098c5:	je     0x140009914
   1400098c7:	movsxd rax,r12d
   1400098ca:	lea    rdx,[rip+0x3101f]        # 0x14003a8f0
   1400098d1:	lea    r8,[rbx+rax*2]
   1400098d5:	movsxd rax,r14d
   1400098d8:	lea    rcx,[rsi+rax*2+0x4]
   1400098dd:	call   0x140013f24
   1400098e2:	mov    rax,QWORD PTR [rsp+0x28]
   1400098e7:	add    QWORD PTR [rsp+0x88],0xc
   1400098f0:	add    QWORD PTR [rsp+0x20],0xc
   1400098f6:	mov    rcx,QWORD PTR [rsp+0x80]
   1400098fe:	add    rax,0xc
   140009902:	add    r14d,0x6
   140009906:	add    rbp,0x6
   14000990a:	add    rdi,0xc
   14000990e:	add    r15,0xc
   140009912:	jmp    0x140009949
   140009914:	mov    rcx,QWORD PTR [rsp+0x80]
   14000991c:	movzx  eax,WORD PTR [rsi+rbp*2]
   140009920:	add    QWORD PTR [rsp+0x88],0x2
   140009929:	add    QWORD PTR [rsp+0x20],0x2
   14000992f:	mov    WORD PTR [rcx],ax
   140009932:	mov    rax,QWORD PTR [rsp+0x28]
   140009937:	inc    r14d
   14000993a:	inc    rbp
   14000993d:	add    rdi,0x2
   140009941:	add    rax,0x2
   140009945:	add    r15,0x2
   140009949:	mov    edx,DWORD PTR [rsp+0x78]
   14000994d:	add    rcx,0x2
   140009951:	inc    r12d
   140009954:	mov    QWORD PTR [rsp+0x28],rax
   140009959:	mov    QWORD PTR [rsp+0x80],rcx
   140009961:	cmp    rbp,r13
   140009964:	jl     0x14000986b
   14000996a:	xor    r15d,r15d
   14000996d:	movsxd rax,r12d
   140009970:	mov    WORD PTR [rbx+rax*2],r15w
   140009975:	mov    rax,rbx
   140009978:	mov    rbx,QWORD PTR [rsp+0x70]
   14000997d:	add    rsp,0x30
   140009981:	pop    r15
   140009983:	pop    r14
   140009985:	pop    r13
   140009987:	pop    r12
   140009989:	pop    rdi
   14000998a:	pop    rsi
   14000998b:	pop    rbp
   14000998c:	ret    
   14000998d:	int3   
   14000998e:	int3   
   14000998f:	int3   
   140009990:	int3   
   140009991:	int3   
   140009992:	int3   
   140009993:	int3   
   140009994:	int3   
   140009995:	int3   
   140009996:	int3   
   140009997:	int3   
   140009998:	jmp    0x1400099ac
   14000999a:	movzx  eax,WORD PTR [rcx]
   14000999d:	cmp    ax,dx
   1400099a0:	cmove  ax,r8w
   1400099a5:	mov    WORD PTR [rcx],ax
   1400099a8:	add    rcx,0x2
   1400099ac:	cmp    WORD PTR [rcx],0x0
   1400099b0:	jne    0x14000999a
   1400099b2:	repz ret 
   1400099b4:	int3   
   1400099b5:	int3   
   1400099b6:	int3   
   1400099b7:	int3   
   1400099b8:	int3   
   1400099b9:	int3   
   1400099ba:	int3   
   1400099bb:	int3   
   1400099bc:	int3   
   1400099bd:	int3   
   1400099be:	int3   
   1400099bf:	int3   
   1400099c0:	int3   
   1400099c1:	int3   
   1400099c2:	int3   
   1400099c3:	int3   
   1400099c4:	int3   
   1400099c5:	int3   
   1400099c6:	int3   
   1400099c7:	int3   
   1400099c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400099cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400099d2:	mov    QWORD PTR [rsp+0x18],rsi
   1400099d7:	push   rdi
   1400099d8:	push   r12
   1400099da:	push   r13
   1400099dc:	sub    rsp,0x50
   1400099e0:	mov    rbx,rcx
   1400099e3:	test   rcx,rcx
   1400099e6:	je     0x140009aad
   1400099ec:	call   0x14000aa1c
   1400099f1:	mov    rsi,rax
   1400099f4:	test   rax,rax
   1400099f7:	je     0x140009aad
   1400099fd:	or     r8,0xffffffffffffffff
   140009a01:	xor    eax,eax
   140009a03:	mov    rdi,rsi
   140009a06:	mov    rcx,r8
   140009a09:	lea    r12,[rip+0x30ef0]        # 0x14003a900
   140009a10:	lea    r13,[rip+0x30ee1]        # 0x14003a8f8
   140009a17:	repnz scas ax,WORD PTR es:[rdi]
   140009a1a:	mov    rdi,r12
   140009a1d:	not    rcx
   140009a20:	lea    rdx,[rcx-0x1]
   140009a24:	mov    rcx,r8
   140009a27:	repnz scas ax,WORD PTR es:[rdi]
   140009a2a:	mov    rdi,r13
   140009a2d:	not    rcx
   140009a30:	dec    rcx
   140009a33:	add    rdx,rcx
   140009a36:	mov    rcx,r8
   140009a39:	repnz scas ax,WORD PTR es:[rdi]
   140009a3c:	mov    rdi,rbx
   140009a3f:	not    rcx
   140009a42:	dec    rcx
   140009a45:	add    rdx,rcx
   140009a48:	mov    rcx,r8
   140009a4b:	repnz scas ax,WORD PTR es:[rdi]
   140009a4e:	not    rcx
   140009a51:	lea    rbp,[rdx+rcx*1+0x3]
   140009a56:	lea    rcx,[rbp+rbp*1+0x0]
   140009a5b:	call   0x140013298
   140009a60:	mov    rdi,rax
   140009a63:	test   rax,rax
   140009a66:	je     0x140009aad
   140009a68:	mov    QWORD PTR [rsp+0x48],rbx
   140009a6d:	mov    eax,0x5c
   140009a72:	lea    r8,[rip+0x30e8f]        # 0x14003a908
   140009a79:	mov    DWORD PTR [rsp+0x40],eax
   140009a7d:	mov    QWORD PTR [rsp+0x38],r12
   140009a82:	mov    DWORD PTR [rsp+0x30],eax
   140009a86:	mov    r9,rsi
   140009a89:	mov    rdx,rbp
   140009a8c:	mov    rcx,rdi
   140009a8f:	mov    QWORD PTR [rsp+0x28],r13
   140009a94:	mov    DWORD PTR [rsp+0x20],eax
   140009a98:	call   0x14000a30c
   140009a9d:	test   eax,eax
   140009a9f:	js     0x140009aad
   140009aa1:	cdqe   
   140009aa3:	cmp    rax,rbp
   140009aa6:	jae    0x140009aad
   140009aa8:	mov    rax,rdi
   140009aab:	jmp    0x140009aaf
   140009aad:	xor    eax,eax
   140009aaf:	lea    r11,[rsp+0x50]
   140009ab4:	mov    rbx,QWORD PTR [r11+0x20]
   140009ab8:	mov    rbp,QWORD PTR [r11+0x28]
   140009abc:	mov    rsi,QWORD PTR [r11+0x30]
   140009ac0:	mov    rsp,r11
   140009ac3:	pop    r13
   140009ac5:	pop    r12
   140009ac7:	pop    rdi
   140009ac8:	ret    
   140009ac9:	int3   
   140009aca:	int3   
   140009acb:	int3   
   140009acc:	int3   
   140009acd:	int3   
   140009ace:	int3   
   140009acf:	int3   
   140009ad0:	int3   
   140009ad1:	int3   
   140009ad2:	int3   
   140009ad3:	int3   
   140009ad4:	int3   
   140009ad5:	int3   
   140009ad6:	int3   
   140009ad7:	int3   
   140009ad8:	mov    QWORD PTR [rsp+0x10],rbx
   140009add:	mov    QWORD PTR [rsp+0x18],rbp
   140009ae2:	push   rsi
   140009ae3:	push   rdi
   140009ae4:	push   r12
   140009ae6:	push   r13
   140009ae8:	push   r14
   140009aea:	mov    eax,0x1030
   140009aef:	call   0x140012f50
   140009af4:	sub    rsp,rax
   140009af7:	mov    rax,QWORD PTR [rip+0x35e32]        # 0x14003f930
   140009afe:	xor    rax,rsp
   140009b01:	mov    QWORD PTR [rsp+0x1020],rax
   140009b09:	xor    r14d,r14d
   140009b0c:	mov    rsi,rcx
   140009b0f:	lea    edx,[r14+0x3f]
   140009b13:	mov    ebp,r14d
   140009b16:	call   0x1400149dc
   140009b1b:	mov    r12,rax
   140009b1e:	test   rax,rax
   140009b21:	je     0x140009b60
   140009b23:	mov    rdi,rax
   140009b26:	sub    rdi,rsi
   140009b29:	sar    rdi,1
   140009b2c:	lea    eax,[rdi+0x1]
   140009b2f:	movsxd r13,eax
   140009b32:	lea    rcx,[r13+r13*1+0x0]
   140009b37:	call   0x140013298
   140009b3c:	mov    rbx,rax
   140009b3f:	test   rax,rax
   140009b42:	je     0x140009c1c
   140009b48:	movsxd r9,edi
   140009b4b:	mov    r8,rsi
   140009b4e:	mov    rdx,r13
   140009b51:	mov    rcx,rax
   140009b54:	mov    WORD PTR [rax+r9*2],r14w
   140009b59:	call   0x140013da4
   140009b5e:	jmp    0x140009b63
   140009b60:	mov    rbx,rsi
   140009b63:	lea    rdx,[rsp+0x820]
   140009b6b:	mov    rcx,rbx
   140009b6e:	call   0x14000ab3c
   140009b73:	cmp    eax,0x1
   140009b76:	jne    0x140009c0c
   140009b7c:	lea    rcx,[rsp+0x820]
   140009b84:	call   0x1400099c8
   140009b89:	mov    rsi,rax
   140009b8c:	test   rax,rax
   140009b8f:	je     0x140009c0c
   140009b91:	lea    rdx,[rip+0x30d54]        # 0x14003a8ec
   140009b98:	mov    rcx,rax
   140009b9b:	call   0x1400152e0
   140009ba0:	mov    rdi,rax
   140009ba3:	test   rax,rax
   140009ba6:	je     0x140009c04
   140009ba8:	lea    rcx,[rsp+0x20]
   140009bad:	mov    r8,rax
   140009bb0:	mov    edx,0x400
   140009bb5:	call   0x14001550c
   140009bba:	mov    rcx,rdi
   140009bbd:	call   0x140014f7c
   140009bc2:	or     rcx,0xffffffffffffffff
   140009bc6:	xor    eax,eax
   140009bc8:	lea    rdi,[rsp+0x20]
   140009bcd:	repnz scas ax,WORD PTR es:[rdi]
   140009bd0:	not    rcx
   140009bd3:	movsxd r13,ecx
   140009bd6:	lea    rdi,[rcx-0x1]
   140009bda:	lea    rcx,[r13+r13*1+0x0]
   140009bdf:	call   0x140013298
   140009be4:	mov    rbp,rax
   140009be7:	test   rax,rax
   140009bea:	je     0x140009c04
   140009bec:	movsxd r9,edi
   140009bef:	lea    r8,[rsp+0x20]
   140009bf4:	mov    rdx,r13
   140009bf7:	mov    rcx,rax
   140009bfa:	mov    WORD PTR [rax+r9*2],r14w
   140009bff:	call   0x140013da4
   140009c04:	mov    rcx,rsi
   140009c07:	call   0x1400130a8
   140009c0c:	test   r12,r12
   140009c0f:	je     0x140009c19
   140009c11:	mov    rcx,rbx
   140009c14:	call   0x1400130a8
   140009c19:	mov    rax,rbp
   140009c1c:	mov    rcx,QWORD PTR [rsp+0x1020]
   140009c24:	xor    rcx,rsp
   140009c27:	call   0x140012670
   140009c2c:	lea    r11,[rsp+0x1030]
   140009c34:	mov    rbx,QWORD PTR [r11+0x38]
   140009c38:	mov    rbp,QWORD PTR [r11+0x40]
   140009c3c:	mov    rsp,r11
   140009c3f:	pop    r14
   140009c41:	pop    r13
   140009c43:	pop    r12
   140009c45:	pop    rdi
   140009c46:	pop    rsi
   140009c47:	ret    
   140009c48:	int3   
   140009c49:	int3   
   140009c4a:	int3   
   140009c4b:	int3   
   140009c4c:	int3   
   140009c4d:	int3   
   140009c4e:	int3   
   140009c4f:	int3   
   140009c50:	int3   
   140009c51:	int3   
   140009c52:	int3   
   140009c53:	int3   
   140009c54:	int3   
   140009c55:	int3   
   140009c56:	int3   
   140009c57:	int3   
   140009c58:	mov    QWORD PTR [rsp+0x10],rbx
   140009c5d:	mov    QWORD PTR [rsp+0x18],rbp
   140009c62:	push   rsi
   140009c63:	push   rdi
   140009c64:	push   r12
   140009c66:	push   r13
   140009c68:	push   r14
   140009c6a:	sub    rsp,0x830
   140009c71:	mov    rax,QWORD PTR [rip+0x35cb8]        # 0x14003f930
   140009c78:	xor    rax,rsp
   140009c7b:	mov    QWORD PTR [rsp+0x820],rax
   140009c83:	or     ebx,0xffffffff
   140009c86:	mov    rsi,rcx
   140009c89:	lea    edx,[rbx+0x40]
   140009c8c:	call   0x1400149dc
   140009c91:	xor    r14d,r14d
   140009c94:	mov    rbp,rax
   140009c97:	test   rax,rax
   140009c9a:	je     0x140009cd7
   140009c9c:	mov    r12,rax
   140009c9f:	sub    r12,rsi
   140009ca2:	sar    r12,1
   140009ca5:	lea    eax,[r12+0x1]
   140009caa:	movsxd r13,eax
   140009cad:	lea    rcx,[r13+r13*1+0x0]
   140009cb2:	call   0x140013298
   140009cb7:	mov    rdi,rax
   140009cba:	test   rax,rax
   140009cbd:	je     0x140009d16
   140009cbf:	movsxd r9,r12d
   140009cc2:	mov    r8,rsi
   140009cc5:	mov    rdx,r13
   140009cc8:	mov    rcx,rax
   140009ccb:	mov    WORD PTR [rax+r9*2],r14w
   140009cd0:	call   0x140013da4
   140009cd5:	jmp    0x140009cda
   140009cd7:	mov    rdi,rsi
   140009cda:	lea    rdx,[rsp+0x20]
   140009cdf:	mov    rcx,rdi
   140009ce2:	call   0x14000ab3c
   140009ce7:	cmp    eax,0x1
   140009cea:	jne    0x140009d09
   140009cec:	lea    edx,[rax+0x5e]
   140009cef:	lea    rcx,[rsp+0x20]
   140009cf4:	call   0x1400149dc
   140009cf9:	test   rax,rax
   140009cfc:	je     0x140009d09
   140009cfe:	lea    rcx,[rax+0x2]
   140009d02:	call   0x140013c8c
   140009d07:	mov    ebx,eax
   140009d09:	test   rbp,rbp
   140009d0c:	je     0x140009d16
   140009d0e:	mov    rcx,rdi
   140009d11:	call   0x1400130a8
   140009d16:	mov    eax,ebx
   140009d18:	mov    rcx,QWORD PTR [rsp+0x820]
   140009d20:	xor    rcx,rsp
   140009d23:	call   0x140012670
   140009d28:	lea    r11,[rsp+0x830]
   140009d30:	mov    rbx,QWORD PTR [r11+0x38]
   140009d34:	mov    rbp,QWORD PTR [r11+0x40]
   140009d38:	mov    rsp,r11
   140009d3b:	pop    r14
   140009d3d:	pop    r13
   140009d3f:	pop    r12
   140009d41:	pop    rdi
   140009d42:	pop    rsi
   140009d43:	ret    
   140009d44:	int3   
   140009d45:	int3   
   140009d46:	int3   
   140009d47:	int3   
   140009d48:	int3   
   140009d49:	int3   
   140009d4a:	int3   
   140009d4b:	int3   
   140009d4c:	int3   
   140009d4d:	int3   
   140009d4e:	int3   
   140009d4f:	int3   
   140009d50:	int3   
   140009d51:	int3   
   140009d52:	int3   
   140009d53:	int3   
   140009d54:	int3   
   140009d55:	int3   
   140009d56:	int3   
   140009d57:	int3   
   140009d58:	mov    QWORD PTR [rsp+0x8],rbx
   140009d5d:	mov    QWORD PTR [rsp+0x10],rbp
   140009d62:	mov    QWORD PTR [rsp+0x18],rsi
   140009d67:	push   rdi
   140009d68:	sub    rsp,0x20
   140009d6c:	mov    rdi,rcx
   140009d6f:	call   0x140008cc8
   140009d74:	xor    ebp,ebp
   140009d76:	test   eax,eax
   140009d78:	jns    0x140009dc5
   140009d7a:	lea    edx,[rbp+0x5c]
   140009d7d:	mov    rcx,rdi
   140009d80:	call   0x1400149dc
   140009d85:	mov    rbx,rax
   140009d88:	test   rax,rax
   140009d8b:	je     0x140009dc5
   140009d8d:	mov    rcx,rdi
   140009d90:	call   0x1400130e8
   140009d95:	mov    rsi,rax
   140009d98:	cmp    rbx,rdi
   140009d9b:	jbe    0x140009da9
   140009d9d:	cmp    WORD PTR [rbx-0x2],0x3a
   140009da2:	je     0x140009da9
   140009da4:	mov    WORD PTR [rbx],bp
   140009da7:	jmp    0x140009dad
   140009da9:	mov    WORD PTR [rbx+0x2],bp
   140009dad:	mov    rcx,rdi
   140009db0:	call   0x140009d58
   140009db5:	mov    rcx,rsi
   140009db8:	call   0x14000a96c
   140009dbd:	mov    rcx,rsi
   140009dc0:	call   0x1400130a8
   140009dc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140009dca:	mov    rbp,QWORD PTR [rsp+0x38]
   140009dcf:	mov    rsi,QWORD PTR [rsp+0x40]
   140009dd4:	add    rsp,0x20
   140009dd8:	pop    rdi
   140009dd9:	ret    
   140009dda:	int3   
   140009ddb:	int3   
   140009ddc:	sub    rsp,0x28
   140009de0:	call   QWORD PTR [rip+0x2523a]        # 0x14002f020
   140009de6:	mov    DWORD PTR [rip+0x4c810],eax        # 0x1400565fc
   140009dec:	xor    eax,eax
   140009dee:	add    rsp,0x28
   140009df2:	ret    
   140009df3:	int3   
   140009df4:	int3   
   140009df5:	int3   
   140009df6:	int3   
   140009df7:	int3   
   140009df8:	int3   
   140009df9:	int3   
   140009dfa:	int3   
   140009dfb:	int3   
   140009dfc:	sub    rsp,0x28
   140009e00:	call   QWORD PTR [rip+0x2521a]        # 0x14002f020
   140009e06:	mov    DWORD PTR [rip+0x4c7ec],eax        # 0x1400565f8
   140009e0c:	add    rsp,0x28
   140009e10:	ret    
   140009e11:	int3   
   140009e12:	int3   
   140009e13:	int3   
   140009e14:	int3   
   140009e15:	int3   
   140009e16:	int3   
   140009e17:	int3   
   140009e18:	int3   
   140009e19:	int3   
   140009e1a:	int3   
   140009e1b:	int3   
   140009e1c:	test   rcx,rcx
   140009e1f:	je     0x140009f14
   140009e25:	mov    QWORD PTR [rsp+0x8],rbx
   140009e2a:	mov    QWORD PTR [rsp+0x10],rsi
   140009e2f:	push   rdi
   140009e30:	sub    rsp,0x20
   140009e34:	lea    rdx,[rip+0x30c99]        # 0x14003aad4
   140009e3b:	xor    ebx,ebx
   140009e3d:	call   0x140013160
   140009e42:	test   rax,rax
   140009e45:	je     0x140009f05
   140009e4b:	lea    rcx,[rax+0x2]
   140009e4f:	call   0x1400130e8
   140009e54:	mov    rsi,rax
   140009e57:	test   rax,rax
   140009e5a:	je     0x140009f05
   140009e60:	xor    eax,eax
   140009e62:	or     rcx,0xffffffffffffffff
   140009e66:	mov    rdi,rsi
   140009e69:	repnz scas ax,WORD PTR es:[rdi]
   140009e6c:	xor    ecx,ecx
   140009e6e:	lea    rdx,[rip+0x32343]        # 0x14003c1b8
   140009e75:	movzx  eax,WORD PTR [rdx+rcx*1]
   140009e79:	add    rcx,0x2
   140009e7d:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   140009e82:	test   ax,ax
   140009e85:	jne    0x140009e75
   140009e87:	mov    rcx,rsi
   140009e8a:	test   rsi,rsi
   140009e8d:	je     0x140009f00
   140009e8f:	lea    rdx,[rip+0x30c4e]        # 0x14003aae4
   140009e96:	call   0x1400152e0
   140009e9b:	mov    rdi,rax
   140009e9e:	test   rax,rax
   140009ea1:	je     0x140009efd
   140009ea3:	mov    r8d,DWORD PTR [rip+0x4c752]        # 0x1400565fc
   140009eaa:	lea    rdx,[rip+0x32317]        # 0x14003c1c8
   140009eb1:	mov    rcx,rax
   140009eb4:	call   0x1400155dc
   140009eb9:	mov    r8d,DWORD PTR [rip+0x4c738]        # 0x1400565f8
   140009ec0:	lea    rdx,[rip+0x32341]        # 0x14003c208
   140009ec7:	mov    rcx,rdi
   140009eca:	call   0x1400155dc
   140009ecf:	mov    edx,DWORD PTR [rip+0x4c723]        # 0x1400565f8
   140009ed5:	mov    eax,DWORD PTR [rip+0x4c721]        # 0x1400565fc
   140009edb:	cmp    edx,eax
   140009edd:	jle    0x140009ee3
   140009edf:	sub    edx,eax
   140009ee1:	mov    ebx,edx
   140009ee3:	lea    rdx,[rip+0x32386]        # 0x14003c270
   140009eea:	mov    r8d,ebx
   140009eed:	mov    rcx,rdi
   140009ef0:	call   0x1400155dc
   140009ef5:	mov    rcx,rdi
   140009ef8:	call   0x140014f7c
   140009efd:	mov    rcx,rsi
   140009f00:	call   0x1400130a8
   140009f05:	mov    rbx,QWORD PTR [rsp+0x30]
   140009f0a:	mov    rsi,QWORD PTR [rsp+0x38]
   140009f0f:	add    rsp,0x20
   140009f13:	pop    rdi
   140009f14:	ret    
   140009f15:	int3   
   140009f16:	int3   
   140009f17:	int3   
   140009f18:	int3   
   140009f19:	int3   
   140009f1a:	int3   
   140009f1b:	int3   
   140009f1c:	mov    QWORD PTR [rsp+0x8],rbx
   140009f21:	push   rdi
   140009f22:	sub    rsp,0x20
   140009f26:	mov    rdi,rcx
   140009f29:	mov    rdx,rcx
   140009f2c:	lea    r8,[rip+0x3238d]        # 0x14003c2c0
   140009f33:	mov    r9d,0x21010
   140009f39:	xor    ecx,ecx
   140009f3b:	call   QWORD PTR [rip+0x254bf]        # 0x14002f400
   140009f41:	mov    ecx,0xb
   140009f46:	call   0x14000bd98
   140009f4b:	mov    rbx,rax
   140009f4e:	call   0x140014c3c
   140009f53:	mov    rdx,rbx
   140009f56:	lea    rcx,[rax+0x60]
   140009f5a:	call   0x1400155dc
   140009f5f:	call   0x14001583c
   140009f64:	cmp    DWORD PTR [rax],0x0
   140009f67:	je     0x140009f73
   140009f69:	mov    rcx,rdi
   140009f6c:	call   0x140015670
   140009f71:	jmp    0x140009f8b
   140009f73:	call   0x140014c3c
   140009f78:	lea    rdx,[rip+0x32389]        # 0x14003c308
   140009f7f:	mov    r8,rdi
   140009f82:	lea    rcx,[rax+0x60]
   140009f86:	call   0x1400155dc
   140009f8b:	call   QWORD PTR [rip+0x254ef]        # 0x14002f480
   140009f91:	mov    ecx,0xc
   140009f96:	mov    edi,eax
   140009f98:	call   0x14000bd98
   140009f9d:	mov    rbx,rax
   140009fa0:	call   0x140014c3c
   140009fa5:	lea    rdx,[rip+0x3229c]        # 0x14003c248
   140009fac:	lea    rcx,[rax+0x60]
   140009fb0:	mov    r9d,edi
   140009fb3:	mov    r8,rbx
   140009fb6:	call   0x1400155dc
   140009fbb:	or     ecx,0xffffffff
   140009fbe:	call   0x140013c2c
   140009fc3:	int3   
   140009fc4:	int3   
   140009fc5:	int3   
   140009fc6:	int3   
   140009fc7:	int3   
   140009fc8:	int3   
   140009fc9:	int3   
   140009fca:	int3   
   140009fcb:	int3   
   140009fcc:	mov    rdx,rcx
   140009fcf:	lea    r8,[rip+0x3235a]        # 0x14003c330
   140009fd6:	mov    r9d,0x21040
   140009fdc:	xor    ecx,ecx
   140009fde:	rex.W jmp QWORD PTR [rip+0x2541b]        # 0x14002f400
   140009fe5:	int3   
   140009fe6:	int3   
   140009fe7:	int3   
   140009fe8:	int3   
   140009fe9:	int3   
   140009fea:	int3   
   140009feb:	int3   
   140009fec:	mov    QWORD PTR [rsp+0x8],rbx
   140009ff1:	push   rdi
   140009ff2:	sub    rsp,0x1d0
   140009ff9:	mov    rax,QWORD PTR [rip+0x35930]        # 0x14003f930
   14000a000:	xor    rax,rsp
   14000a003:	mov    QWORD PTR [rsp+0x1c0],rax
   14000a00b:	cmp    DWORD PTR [rip+0x4985e],0x0        # 0x140053870
   14000a012:	jne    0x14000a0a4
   14000a018:	lea    rcx,[rip+0x32239]        # 0x14003c258
   14000a01f:	mov    edi,0x1
   14000a024:	call   0x14000d75c
   14000a029:	mov    rbx,rax
   14000a02c:	test   rax,rax
   14000a02f:	jne    0x14000a058
   14000a031:	lea    rcx,[rip+0x322e0]        # 0x14003c318
   14000a038:	call   0x14000d75c
   14000a03d:	xor    edi,edi
   14000a03f:	mov    rbx,rax
   14000a042:	test   rax,rax
   14000a045:	jne    0x14000a058
   14000a047:	lea    ecx,[rax+0xd]
   14000a04a:	call   0x14000bd98
   14000a04f:	mov    rcx,rax
   14000a052:	call   0x140009f1c
   14000a057:	int3   
   14000a058:	lea    rdx,[rsp+0x20]
   14000a05d:	mov    ecx,0x2
   14000a062:	call   QWORD PTR [rip+0x25408]        # 0x14002f470
   14000a068:	test   eax,eax
   14000a06a:	je     0x14000a07f
   14000a06c:	mov    ecx,0xe
   14000a071:	call   0x14000bd98
   14000a076:	mov    rcx,rax
   14000a079:	call   0x140009f1c
   14000a07e:	int3   
   14000a07f:	test   edi,edi
   14000a081:	je     0x14000a09a
   14000a083:	lea    rdx,[rip+0x322ee]        # 0x14003c378
   14000a08a:	mov    rcx,rbx
   14000a08d:	call   QWORD PTR [rip+0x24f85]        # 0x14002f018
   14000a093:	mov    QWORD PTR [rip+0x497ce],rax        # 0x140053868
   14000a09a:	mov    DWORD PTR [rip+0x497cc],0x1        # 0x140053870
   14000a0a4:	mov    rcx,QWORD PTR [rsp+0x1c0]
   14000a0ac:	xor    rcx,rsp
   14000a0af:	call   0x140012670
   14000a0b4:	mov    rbx,QWORD PTR [rsp+0x1e0]
   14000a0bc:	add    rsp,0x1d0
   14000a0c3:	pop    rdi
   14000a0c4:	ret    
   14000a0c5:	int3   
   14000a0c6:	int3   
   14000a0c7:	int3   
   14000a0c8:	int3   
   14000a0c9:	int3   
   14000a0ca:	int3   
   14000a0cb:	int3   
   14000a0cc:	rex push rbx
   14000a0ce:	sub    rsp,0x20
   14000a0d2:	mov    rbx,rcx
   14000a0d5:	call   0x140009fec
   14000a0da:	test   rbx,rbx
   14000a0dd:	je     0x14000a0fb
   14000a0df:	mov    rax,QWORD PTR [rip+0x49782]        # 0x140053868
   14000a0e6:	test   rax,rax
   14000a0e9:	je     0x14000a0f2
   14000a0eb:	xor    edx,edx
   14000a0ed:	mov    rcx,rbx
   14000a0f0:	call   rax
   14000a0f2:	mov    rcx,rbx
   14000a0f5:	call   QWORD PTR [rip+0x25315]        # 0x14002f410
   14000a0fb:	add    rsp,0x20
   14000a0ff:	pop    rbx
   14000a100:	ret    
   14000a101:	int3   
   14000a102:	int3   
   14000a103:	int3   
   14000a104:	int3   
   14000a105:	int3   
   14000a106:	int3   
   14000a107:	int3   
   14000a108:	int3   
   14000a109:	int3   
   14000a10a:	int3   
   14000a10b:	int3   
   14000a10c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a111:	mov    QWORD PTR [rsp+0x10],rbp
   14000a116:	mov    QWORD PTR [rsp+0x18],rsi
   14000a11b:	push   rdi
   14000a11c:	sub    rsp,0x20
   14000a120:	mov    rsi,r8
   14000a123:	mov    rbp,rdx
   14000a126:	mov    edi,ecx
   14000a128:	call   0x14001583c
   14000a12d:	mov    rbx,rsi
   14000a130:	and    DWORD PTR [rax],0x0
   14000a133:	cmp    QWORD PTR [rsi],0x0
   14000a137:	je     0x14000a14e
   14000a139:	mov    rcx,QWORD PTR [rbx]
   14000a13c:	call   0x1400092e8
   14000a141:	mov    QWORD PTR [rbx],rax
   14000a144:	add    rbx,0x8
   14000a148:	cmp    QWORD PTR [rbx],0x0
   14000a14c:	jne    0x14000a139
   14000a14e:	mov    ecx,0x1
   14000a153:	mov    r8,rsi
   14000a156:	mov    rdx,rbp
   14000a159:	cmp    edi,ecx
   14000a15b:	jne    0x14000a16a
   14000a15d:	call   0x1400158c4
   14000a162:	xor    ecx,ecx
   14000a164:	call   0x140013c2c
   14000a169:	int3   
   14000a16a:	test   edi,edi
   14000a16c:	je     0x14000a170
   14000a16e:	xor    ecx,ecx
   14000a170:	call   0x1400158c4
   14000a175:	test   eax,eax
   14000a177:	js     0x14000a17d
   14000a179:	xor    eax,eax
   14000a17b:	jmp    0x14000a18d
   14000a17d:	call   0x14001583c
   14000a182:	mov    ecx,DWORD PTR [rax]
   14000a184:	neg    ecx
   14000a186:	sbb    eax,eax
   14000a188:	neg    eax
   14000a18a:	add    eax,0xfffffffe
   14000a18d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a192:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a197:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a19c:	add    rsp,0x20
   14000a1a0:	pop    rdi
   14000a1a1:	ret    
   14000a1a2:	int3   
   14000a1a3:	int3   
   14000a1a4:	int3   
   14000a1a5:	int3   
   14000a1a6:	int3   
   14000a1a7:	int3   
   14000a1a8:	int3   
   14000a1a9:	int3   
   14000a1aa:	int3   
   14000a1ab:	int3   
   14000a1ac:	lea    rax,[rip+0x321dd]        # 0x14003c390
   14000a1b3:	ret    
   14000a1b4:	int3   
   14000a1b5:	int3   
   14000a1b6:	int3   
   14000a1b7:	int3   
   14000a1b8:	int3   
   14000a1b9:	int3   
   14000a1ba:	int3   
   14000a1bb:	int3   
   14000a1bc:	lea    rax,[rip+0x321dd]        # 0x14003c3a0
   14000a1c3:	ret    
   14000a1c4:	int3   
   14000a1c5:	int3   
   14000a1c6:	int3   
   14000a1c7:	int3   
   14000a1c8:	int3   
   14000a1c9:	int3   
   14000a1ca:	int3   
   14000a1cb:	int3   
   14000a1cc:	mov    rax,QWORD PTR [rip+0x31fdd]        # 0x14003c1b0
   14000a1d3:	ret    
   14000a1d4:	int3   
   14000a1d5:	int3   
   14000a1d6:	int3   
   14000a1d7:	int3   
   14000a1d8:	int3   
   14000a1d9:	int3   
   14000a1da:	int3   
   14000a1db:	int3   
   14000a1dc:	sub    rsp,0x858
   14000a1e3:	mov    rax,QWORD PTR [rip+0x35746]        # 0x14003f930
   14000a1ea:	xor    rax,rsp
   14000a1ed:	mov    QWORD PTR [rsp+0x840],rax
   14000a1f5:	lea    rax,[rsp+0x38]
   14000a1fa:	lea    rdx,[rip+0x321c7]        # 0x14003c3c8
   14000a201:	mov    r9d,0x20019
   14000a207:	xor    r8d,r8d
   14000a20a:	mov    rcx,0xffffffff80000002
   14000a211:	mov    QWORD PTR [rsp+0x20],rax
   14000a216:	call   QWORD PTR [rip+0x37154]        # 0x140041370
   14000a21c:	test   eax,eax
   14000a21e:	jne    0x14000a277
   14000a220:	mov    rcx,QWORD PTR [rsp+0x38]
   14000a225:	lea    rax,[rsp+0x34]
   14000a22a:	lea    r9,[rsp+0x30]
   14000a22f:	mov    QWORD PTR [rsp+0x28],rax
   14000a234:	lea    rax,[rsp+0x40]
   14000a239:	lea    rdx,[rip+0x321b8]        # 0x14003c3f8
   14000a240:	xor    r8d,r8d
   14000a243:	mov    DWORD PTR [rsp+0x30],0x1
   14000a24b:	mov    DWORD PTR [rsp+0x34],0x800
   14000a253:	mov    QWORD PTR [rsp+0x20],rax
   14000a258:	call   QWORD PTR [rip+0x3710a]        # 0x140041368
   14000a25e:	test   eax,eax
   14000a260:	jne    0x14000a277
   14000a262:	lea    rdx,[rsp+0x40]
   14000a267:	lea    rcx,[rip+0x321a2]        # 0x14003c410
   14000a26e:	call   0x1400147a4
   14000a273:	test   eax,eax
   14000a275:	je     0x14000a27c
   14000a277:	mov    eax,0x1
   14000a27c:	mov    rcx,QWORD PTR [rsp+0x840]
   14000a284:	xor    rcx,rsp
   14000a287:	call   0x140012670
   14000a28c:	add    rsp,0x858
   14000a293:	ret    
   14000a294:	int3   
   14000a295:	int3   
   14000a296:	int3   
   14000a297:	int3   
   14000a298:	int3   
   14000a299:	int3   
   14000a29a:	int3   
   14000a29b:	int3   
   14000a29c:	rex push rbx
   14000a29e:	sub    rsp,0x20
   14000a2a2:	lea    rdx,[rip+0x3235f]        # 0x14003c608
   14000a2a9:	jmp    0x14000a2d4
   14000a2ab:	mov    edx,0x500
   14000a2b0:	mov    r8d,0x180
   14000a2b6:	mov    rcx,rbx
   14000a2b9:	call   0x1400164d0
   14000a2be:	cmp    eax,0xffffffff
   14000a2c1:	jne    0x14000a2e5
   14000a2c3:	call   0x14001583c
   14000a2c8:	cmp    DWORD PTR [rax],0x11
   14000a2cb:	jne    0x14000a2ec
   14000a2cd:	lea    rdx,[rip+0x32344]        # 0x14003c618
   14000a2d4:	xor    ecx,ecx
   14000a2d6:	call   0x140015a8c
   14000a2db:	mov    rbx,rax
   14000a2de:	test   rax,rax
   14000a2e1:	jne    0x14000a2ab
   14000a2e3:	jmp    0x14000a2ec
   14000a2e5:	mov    ecx,eax
   14000a2e7:	call   0x1400159c8
   14000a2ec:	mov    rcx,rbx
   14000a2ef:	add    rsp,0x20
   14000a2f3:	pop    rbx
   14000a2f4:	jmp    0x1400130e8
   14000a2f9:	int3   
   14000a2fa:	int3   
   14000a2fb:	int3   
   14000a2fc:	int3   
   14000a2fd:	int3   
   14000a2fe:	int3   
   14000a2ff:	int3   
   14000a300:	int3   
   14000a301:	int3   
   14000a302:	int3   
   14000a303:	int3   
   14000a304:	int3   
   14000a305:	int3   
   14000a306:	int3   
   14000a307:	int3   
   14000a308:	int3   
   14000a309:	int3   
   14000a30a:	int3   
   14000a30b:	int3   
   14000a30c:	mov    QWORD PTR [rsp+0x18],r8
   14000a311:	mov    QWORD PTR [rsp+0x20],r9
   14000a316:	push   rbx
   14000a317:	push   rdi
   14000a318:	sub    rsp,0x28
   14000a31c:	lea    r9,[rsp+0x58]
   14000a321:	mov    rbx,rdx
   14000a324:	mov    rdi,rcx
   14000a327:	call   0x1400167ac
   14000a32c:	xor    ecx,ecx
   14000a32e:	test   eax,eax
   14000a330:	js     0x14000a33a
   14000a332:	movsxd rdx,eax
   14000a335:	cmp    rdx,rbx
   14000a338:	jb     0x14000a33f
   14000a33a:	mov    WORD PTR [rdi+rbx*2-0x2],cx
   14000a33f:	add    rsp,0x28
   14000a343:	pop    rdi
   14000a344:	pop    rbx
   14000a345:	ret    
   14000a346:	int3   
   14000a347:	int3   
   14000a348:	int3   
   14000a349:	int3   
   14000a34a:	int3   
   14000a34b:	int3   
   14000a34c:	lea    rax,[rip+0x322d5]        # 0x14003c628
   14000a353:	ret    
   14000a354:	int3   
   14000a355:	int3   
   14000a356:	int3   
   14000a357:	int3   
   14000a358:	int3   
   14000a359:	int3   
   14000a35a:	int3   
   14000a35b:	int3   
   14000a35c:	lea    rax,[rip+0x322dd]        # 0x14003c640
   14000a363:	ret    
   14000a364:	int3   
   14000a365:	int3   
   14000a366:	int3   
   14000a367:	int3   
   14000a368:	int3   
   14000a369:	int3   
   14000a36a:	int3   
   14000a36b:	int3   
   14000a36c:	lea    rax,[rip+0x32405]        # 0x14003c778
   14000a373:	mov    r9,QWORD PTR [rax]
   14000a376:	mov    rdx,rcx
   14000a379:	sub    r9,rcx
   14000a37c:	movzx  r8d,WORD PTR [rdx]
   14000a380:	movzx  r10d,WORD PTR [rdx+r9*1]
   14000a385:	sub    r8d,r10d
   14000a388:	jne    0x14000a393
   14000a38a:	add    rdx,0x2
   14000a38e:	test   r10d,r10d
   14000a391:	jne    0x14000a37c
   14000a393:	test   r8d,r8d
   14000a396:	je     0x14000a3ab
   14000a398:	lea    rdx,[rip+0x32401]        # 0x14003c7a0
   14000a39f:	add    rax,0x8
   14000a3a3:	cmp    rax,rdx
   14000a3a6:	jl     0x14000a373
   14000a3a8:	xor    eax,eax
   14000a3aa:	ret    
   14000a3ab:	mov    eax,0x1
   14000a3b0:	ret    
   14000a3b1:	int3   
   14000a3b2:	int3   
   14000a3b3:	int3   
   14000a3b4:	int3   
   14000a3b5:	int3   
   14000a3b6:	int3   
   14000a3b7:	int3   
   14000a3b8:	int3   
   14000a3b9:	int3   
   14000a3ba:	int3   
   14000a3bb:	int3   
   14000a3bc:	mov    QWORD PTR [rsp+0x8],rbx
   14000a3c1:	mov    QWORD PTR [rsp+0x10],rsi
   14000a3c6:	push   rdi
   14000a3c7:	sub    rsp,0x20
   14000a3cb:	xor    ebx,ebx
   14000a3cd:	lea    rdi,[rip+0x48c0c]        # 0x140052fe0
   14000a3d4:	cmp    DWORD PTR [rip+0x494a2],ebx        # 0x14005387c
   14000a3da:	jne    0x14000a496
   14000a3e0:	call   QWORD PTR [rip+0x24c42]        # 0x14002f028
   14000a3e6:	lea    r10,[rip+0x30e93]        # 0x14003b280
   14000a3ed:	mov    ecx,ebx
   14000a3ef:	mov    rdx,r10
   14000a3f2:	lea    r9,[rip+0x31997]        # 0x14003bd90
   14000a3f9:	cmp    eax,DWORD PTR [rdx]
   14000a3fb:	je     0x14000a408
   14000a3fd:	add    rdx,0x10
   14000a401:	inc    ecx
   14000a403:	cmp    rdx,r9
   14000a406:	jl     0x14000a3f9
   14000a408:	mov    r8d,0xb1
   14000a40e:	cmp    ecx,r8d
   14000a411:	jne    0x14000a42a
   14000a413:	movzx  edx,al
   14000a416:	mov    ecx,ebx
   14000a418:	mov    rax,r10
   14000a41b:	cmp    edx,DWORD PTR [rax]
   14000a41d:	je     0x14000a42a
   14000a41f:	add    rax,0x10
   14000a423:	inc    ecx
   14000a425:	cmp    rax,r9
   14000a428:	jl     0x14000a41b
   14000a42a:	lea    rsi,[rip+0xffffffffffff5bcf]        # 0x140000000
   14000a431:	cmp    ecx,r8d
   14000a434:	jge    0x14000a453
   14000a436:	movsxd r8,ecx
   14000a439:	mov    edx,0x40
   14000a43e:	mov    rcx,rdi
   14000a441:	add    r8,r8
   14000a444:	mov    r9d,edx
   14000a447:	mov    r8,QWORD PTR [r10+r8*8+0x8]
   14000a44c:	call   0x140013da4
   14000a451:	jmp    0x14000a46b
   14000a453:	mov    rcx,rbx
   14000a456:	movzx  eax,WORD PTR [rcx+rsi*1+0x3c7a0]
   14000a45e:	mov    WORD PTR [rcx+rdi*1],ax
   14000a462:	add    rcx,0x2
   14000a466:	test   ax,ax
   14000a469:	jne    0x14000a456
   14000a46b:	lea    rdx,[rip+0x30682]        # 0x14003aaf4
   14000a472:	mov    rcx,rdi
   14000a475:	call   0x1400147a4
   14000a47a:	test   eax,eax
   14000a47c:	jne    0x14000a496
   14000a47e:	mov    rdx,rbx
   14000a481:	movzx  ecx,WORD PTR [rdx+rsi*1+0x3c7b0]
   14000a489:	mov    WORD PTR [rdx+rdi*1],cx
   14000a48d:	add    rdx,0x2
   14000a491:	test   cx,cx
   14000a494:	jne    0x14000a481
   14000a496:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a49b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a4a0:	mov    rax,rdi
   14000a4a3:	add    rsp,0x20
   14000a4a7:	pop    rdi
   14000a4a8:	ret    
   14000a4a9:	int3   
   14000a4aa:	int3   
   14000a4ab:	int3   
   14000a4ac:	int3   
   14000a4ad:	int3   
   14000a4ae:	int3   
   14000a4af:	int3   
   14000a4b0:	int3   
   14000a4b1:	int3   
   14000a4b2:	int3   
   14000a4b3:	int3   
   14000a4b4:	int3   
   14000a4b5:	int3   
   14000a4b6:	int3   
   14000a4b7:	int3   
   14000a4b8:	int3   
   14000a4b9:	int3   
   14000a4ba:	int3   
   14000a4bb:	int3   
   14000a4bc:	sub    rsp,0x28
   14000a4c0:	or     r9,0xffffffffffffffff
   14000a4c4:	call   0x140013da4
   14000a4c9:	xor    eax,eax
   14000a4cb:	add    rsp,0x28
   14000a4cf:	ret    
   14000a4d0:	int3   
   14000a4d1:	int3   
   14000a4d2:	int3   
   14000a4d3:	int3   
   14000a4d4:	int3   
   14000a4d5:	int3   
   14000a4d6:	int3   
   14000a4d7:	int3   
   14000a4d8:	int3   
   14000a4d9:	int3   
   14000a4da:	int3   
   14000a4db:	int3   
   14000a4dc:	jmp    0x1400097d8
   14000a4e1:	int3   
   14000a4e2:	int3   
   14000a4e3:	int3   
   14000a4e4:	int3   
   14000a4e5:	int3   
   14000a4e6:	int3   
   14000a4e7:	int3   
   14000a4e8:	int3   
   14000a4e9:	int3   
   14000a4ea:	int3   
   14000a4eb:	int3   
   14000a4ec:	jmp    0x140009668
   14000a4f1:	int3   
   14000a4f2:	int3   
   14000a4f3:	int3   
   14000a4f4:	int3   
   14000a4f5:	int3   
   14000a4f6:	int3   
   14000a4f7:	int3   
   14000a4f8:	int3   
   14000a4f9:	int3   
   14000a4fa:	int3   
   14000a4fb:	int3   
   14000a4fc:	mov    QWORD PTR [rsp+0x8],rbx
   14000a501:	push   rbp
   14000a502:	push   rsi
   14000a503:	push   rdi
   14000a504:	push   r12
   14000a506:	push   r13
   14000a508:	push   r14
   14000a50a:	push   r15
   14000a50c:	lea    rbp,[rsp-0x820]
   14000a514:	sub    rsp,0x920
   14000a51b:	mov    rax,QWORD PTR [rip+0x3540e]        # 0x14003f930
   14000a522:	xor    rax,rsp
   14000a525:	mov    QWORD PTR [rbp+0x810],rax
   14000a52c:	mov    rsi,QWORD PTR [rbp+0x880]
   14000a533:	xor    eax,eax
   14000a535:	mov    r12,r8
   14000a538:	mov    r14d,DWORD PTR [rsi]
   14000a53b:	movsxd rbx,edx
   14000a53e:	mov    r13,r9
   14000a541:	xor    r15d,r15d
   14000a544:	mov    edi,0x200
   14000a549:	lea    r8,[rsp+0x70]
   14000a54e:	lea    rdx,[rsp+0x60]
   14000a553:	lea    rcx,[rsp+0x50]
   14000a558:	mov    r9d,edi
   14000a55b:	mov    DWORD PTR [rsi],r15d
   14000a55e:	mov    DWORD PTR [rsp+0x70],0x18
   14000a566:	mov    QWORD PTR [rsp+0x78],r15
   14000a56b:	mov    DWORD PTR [rbp-0x80],0x1
   14000a572:	mov    QWORD PTR [rsp+0x50],rax
   14000a577:	mov    QWORD PTR [rsp+0x58],rax
   14000a57c:	mov    QWORD PTR [rsp+0x60],rax
   14000a581:	mov    QWORD PTR [rsp+0x68],rax
   14000a586:	call   QWORD PTR [rip+0x24ac4]        # 0x14002f050
   14000a58c:	test   eax,eax
   14000a58e:	je     0x14000a785
   14000a594:	lea    r8,[rsp+0x70]
   14000a599:	lea    rdx,[rsp+0x68]
   14000a59e:	lea    rcx,[rsp+0x58]
   14000a5a3:	mov    r9d,edi
   14000a5a6:	call   QWORD PTR [rip+0x24aa4]        # 0x14002f050
   14000a5ac:	test   eax,eax
   14000a5ae:	je     0x14000a785
   14000a5b4:	lea    edi,[r15+0x68]
   14000a5b8:	lea    rcx,[rbp-0x60]
   14000a5bc:	xor    edx,edx
   14000a5be:	mov    r8d,edi
   14000a5c1:	call   0x140012fb0
   14000a5c6:	mov    rax,QWORD PTR [rsp+0x50]
   14000a5cb:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a5d0:	mov    QWORD PTR [rbp-0x10],rax
   14000a5d4:	mov    rax,QWORD PTR [rsp+0x68]
   14000a5d9:	lea    edx,[rdi-0x67]
   14000a5dc:	xor    r8d,r8d
   14000a5df:	mov    DWORD PTR [rbp-0x60],edi
   14000a5e2:	mov    DWORD PTR [rbp-0x24],0x100
   14000a5e9:	mov    QWORD PTR [rbp-0x8],rax
   14000a5ed:	mov    QWORD PTR [rbp+0x0],rax
   14000a5f1:	call   QWORD PTR [rip+0x24a51]        # 0x14002f048
   14000a5f7:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a5fc:	lea    edx,[rdi-0x67]
   14000a5ff:	xor    r8d,r8d
   14000a602:	call   QWORD PTR [rip+0x24a40]        # 0x14002f048
   14000a608:	mov    edx,r15d
   14000a60b:	lea    rax,[rip+0x304f2]        # 0x14003ab04
   14000a612:	movzx  eax,WORD PTR [rdx+rax*1]
   14000a616:	add    rdx,0x2
   14000a61a:	mov    WORD PTR [rbp+rdx*1+0xe],ax
   14000a61f:	test   ax,ax
   14000a622:	jne    0x14000a60b
   14000a624:	mov    r10,QWORD PTR [r12]
   14000a628:	or     r11,0xffffffffffffffff
   14000a62c:	xor    eax,eax
   14000a62e:	lea    rdi,[rbp+0x10]
   14000a632:	mov    rcx,r11
   14000a635:	repnz scas ax,WORD PTR es:[rdi]
   14000a638:	xor    ecx,ecx
   14000a63a:	movzx  eax,WORD PTR [r10+rcx*1]
   14000a63f:	add    rcx,0x2
   14000a643:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   14000a648:	test   ax,ax
   14000a64b:	jne    0x14000a63a
   14000a64d:	xor    eax,eax
   14000a64f:	lea    rdi,[rbp+0x10]
   14000a653:	mov    rcx,r11
   14000a656:	repnz scas ax,WORD PTR es:[rdi]
   14000a659:	xor    ecx,ecx
   14000a65b:	lea    rdx,[rip+0x304b2]        # 0x14003ab14
   14000a662:	movzx  eax,WORD PTR [rdx+rcx*1]
   14000a666:	add    rcx,0x2
   14000a66a:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   14000a66f:	test   ax,ax
   14000a672:	jne    0x14000a662
   14000a674:	mov    edx,0x1
   14000a679:	jmp    0x14000a6cb
   14000a67b:	xor    eax,eax
   14000a67d:	lea    rdi,[rbp+0x10]
   14000a681:	mov    rcx,r11
   14000a684:	repnz scas ax,WORD PTR es:[rdi]
   14000a687:	xor    ecx,ecx
   14000a689:	lea    r9,[rip+0x30494]        # 0x14003ab24
   14000a690:	movzx  eax,WORD PTR [r9+rcx*1]
   14000a695:	add    rcx,0x2
   14000a699:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   14000a69e:	test   ax,ax
   14000a6a1:	jne    0x14000a690
   14000a6a3:	mov    r9,QWORD PTR [r12+rdx*8]
   14000a6a7:	xor    eax,eax
   14000a6a9:	lea    rdi,[rbp+0x10]
   14000a6ad:	mov    rcx,r11
   14000a6b0:	repnz scas ax,WORD PTR es:[rdi]
   14000a6b3:	xor    ecx,ecx
   14000a6b5:	movzx  eax,WORD PTR [r9+rcx*1]
   14000a6ba:	add    rcx,0x2
   14000a6be:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   14000a6c3:	test   ax,ax
   14000a6c6:	jne    0x14000a6b5
   14000a6c8:	inc    rdx
   14000a6cb:	cmp    rdx,rbx
   14000a6ce:	jl     0x14000a67b
   14000a6d0:	lea    rax,[rbp-0x78]
   14000a6d4:	lea    rdx,[rbp+0x10]
   14000a6d8:	xor    r9d,r9d
   14000a6db:	mov    QWORD PTR [rsp+0x48],rax
   14000a6e0:	lea    rax,[rbp-0x60]
   14000a6e4:	xor    r8d,r8d
   14000a6e7:	mov    QWORD PTR [rsp+0x40],rax
   14000a6ec:	mov    QWORD PTR [rsp+0x38],r15
   14000a6f1:	mov    QWORD PTR [rsp+0x30],r15
   14000a6f6:	mov    rcx,r10
   14000a6f9:	mov    DWORD PTR [rsp+0x28],r15d
   14000a6fe:	mov    DWORD PTR [rsp+0x20],0x1
   14000a706:	call   0x14000d82c
   14000a70b:	mov    edi,eax
   14000a70d:	test   eax,eax
   14000a70f:	je     0x14000a723
   14000a711:	mov    rcx,QWORD PTR [rbp-0x78]
   14000a715:	test   rcx,rcx
   14000a718:	je     0x14000a723
   14000a71a:	or     edx,0xffffffff
   14000a71d:	call   QWORD PTR [rip+0x2491d]        # 0x14002f040
   14000a723:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a728:	call   QWORD PTR [rip+0x2490a]        # 0x14002f038
   14000a72e:	mov    rcx,QWORD PTR [rsp+0x68]
   14000a733:	call   QWORD PTR [rip+0x248ff]        # 0x14002f038
   14000a739:	test   edi,edi
   14000a73b:	jne    0x14000a74f
   14000a73d:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a742:	call   QWORD PTR [rip+0x248f0]        # 0x14002f038
   14000a748:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a74d:	jmp    0x14000a7ab
   14000a74f:	mov    rcx,QWORD PTR [rbp-0x70]
   14000a753:	call   QWORD PTR [rip+0x248df]        # 0x14002f038
   14000a759:	mov    rcx,QWORD PTR [rbp-0x78]
   14000a75d:	call   QWORD PTR [rip+0x248d5]        # 0x14002f038
   14000a763:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a768:	mov    r9,rsi
   14000a76b:	mov    r8d,r14d
   14000a76e:	mov    rdx,r13
   14000a771:	mov    QWORD PTR [rsp+0x20],r15
   14000a776:	call   QWORD PTR [rip+0x248b4]        # 0x14002f030
   14000a77c:	movsxd rdx,DWORD PTR [rsi]
   14000a77f:	mov    BYTE PTR [rdx+r13*1],r15b
   14000a783:	jmp    0x14000a73d
   14000a785:	mov    rcx,QWORD PTR [rsp+0x50]
   14000a78a:	call   QWORD PTR [rip+0x248a8]        # 0x14002f038
   14000a790:	mov    rcx,QWORD PTR [rsp+0x58]
   14000a795:	call   QWORD PTR [rip+0x2489d]        # 0x14002f038
   14000a79b:	mov    rcx,QWORD PTR [rsp+0x60]
   14000a7a0:	call   QWORD PTR [rip+0x24892]        # 0x14002f038
   14000a7a6:	mov    rcx,QWORD PTR [rsp+0x68]
   14000a7ab:	call   QWORD PTR [rip+0x24887]        # 0x14002f038
   14000a7b1:	mov    rcx,QWORD PTR [rbp+0x810]
   14000a7b8:	xor    rcx,rsp
   14000a7bb:	call   0x140012670
   14000a7c0:	mov    rbx,QWORD PTR [rsp+0x960]
   14000a7c8:	add    rsp,0x920
   14000a7cf:	pop    r15
   14000a7d1:	pop    r14
   14000a7d3:	pop    r13
   14000a7d5:	pop    r12
   14000a7d7:	pop    rdi
   14000a7d8:	pop    rsi
   14000a7d9:	pop    rbp
   14000a7da:	ret    
   14000a7db:	int3   
   14000a7dc:	int3   
   14000a7dd:	int3   
   14000a7de:	int3   
   14000a7df:	int3   
   14000a7e0:	int3   
   14000a7e1:	int3   
   14000a7e2:	int3   
   14000a7e3:	int3   
   14000a7e4:	int3   
   14000a7e5:	int3   
   14000a7e6:	int3   
   14000a7e7:	int3   
   14000a7e8:	int3   
   14000a7e9:	int3   
   14000a7ea:	int3   
   14000a7eb:	int3   
   14000a7ec:	mov    QWORD PTR [rsp+0x18],rbx
   14000a7f1:	push   rbp
   14000a7f2:	push   rsi
   14000a7f3:	push   rdi
   14000a7f4:	lea    rbp,[rsp-0xf60]
   14000a7fc:	mov    eax,0x1060
   14000a801:	call   0x140012f50
   14000a806:	sub    rsp,rax
   14000a809:	mov    rax,QWORD PTR [rip+0x35120]        # 0x14003f930
   14000a810:	xor    rax,rsp
   14000a813:	mov    QWORD PTR [rbp+0xf50],rax
   14000a81a:	mov    DWORD PTR [rsp+0x3c],edx
   14000a81e:	lea    rax,[rsp+0x30]
   14000a823:	mov    rdi,rcx
   14000a826:	lea    rdx,[rip+0x31f93]        # 0x14003c7c0
   14000a82d:	mov    r9d,0x20019
   14000a833:	xor    r8d,r8d
   14000a836:	mov    rcx,0xffffffff80000002
   14000a83d:	mov    QWORD PTR [rsp+0x20],rax
   14000a842:	mov    DWORD PTR [rsp+0x40],0x400
   14000a84a:	mov    ebx,0x1
   14000a84f:	call   QWORD PTR [rip+0x36b1b]        # 0x140041370
   14000a855:	xor    esi,esi
   14000a857:	test   eax,eax
   14000a859:	jne    0x14000a934
   14000a85f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a864:	lea    rax,[rsp+0x40]
   14000a869:	lea    r9,[rsp+0x38]
   14000a86e:	mov    QWORD PTR [rsp+0x28],rax
   14000a873:	lea    rax,[rsp+0x50]
   14000a878:	lea    rdx,[rip+0x31f99]        # 0x14003c818
   14000a87f:	xor    r8d,r8d
   14000a882:	mov    QWORD PTR [rsp+0x20],rax
   14000a887:	call   QWORD PTR [rip+0x36adb]        # 0x140041368
   14000a88d:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a892:	test   eax,eax
   14000a894:	cmovne ebx,esi
   14000a897:	call   QWORD PTR [rip+0x36ac3]        # 0x140041360
   14000a89d:	lea    r9,[rip+0x31fac]        # 0x14003c850
   14000a8a4:	test   eax,eax
   14000a8a6:	lea    rax,[rsp+0x50]
   14000a8ab:	lea    r8,[rip+0x31ff6]        # 0x14003c8a8
   14000a8b2:	lea    rcx,[rbp+0x750]
   14000a8b9:	mov    edx,0x400
   14000a8be:	mov    QWORD PTR [rsp+0x20],rax
   14000a8c3:	cmovne ebx,esi
   14000a8c6:	call   0x140013d5c
   14000a8cb:	lea    r11,[rsp+0x30]
   14000a8d0:	lea    rdx,[rbp+0x750]
   14000a8d7:	mov    r9d,0x20019
   14000a8dd:	xor    r8d,r8d
   14000a8e0:	mov    rcx,0xffffffff80000002
   14000a8e7:	mov    QWORD PTR [rsp+0x20],r11
   14000a8ec:	call   QWORD PTR [rip+0x36a7e]        # 0x140041370
   14000a8f2:	test   eax,eax
   14000a8f4:	jne    0x14000a934
   14000a8f6:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a8fb:	lea    rax,[rsp+0x3c]
   14000a900:	lea    r9,[rsp+0x38]
   14000a905:	mov    QWORD PTR [rsp+0x28],rax
   14000a90a:	lea    rdx,[rip+0x31f27]        # 0x14003c838
   14000a911:	xor    r8d,r8d
   14000a914:	mov    QWORD PTR [rsp+0x20],rdi
   14000a919:	call   QWORD PTR [rip+0x36a49]        # 0x140041368
   14000a91f:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a924:	test   eax,eax
   14000a926:	cmovne ebx,esi
   14000a929:	call   QWORD PTR [rip+0x36a31]        # 0x140041360
   14000a92f:	test   eax,eax
   14000a931:	cmovne ebx,esi
   14000a934:	mov    eax,ebx
   14000a936:	mov    rcx,QWORD PTR [rbp+0xf50]
   14000a93d:	xor    rcx,rsp
   14000a940:	call   0x140012670
   14000a945:	mov    rbx,QWORD PTR [rsp+0x1090]
   14000a94d:	add    rsp,0x1060
   14000a954:	pop    rdi
   14000a955:	pop    rsi
   14000a956:	pop    rbp
   14000a957:	ret    
   14000a958:	int3   
   14000a959:	int3   
   14000a95a:	int3   
   14000a95b:	int3   
   14000a95c:	int3   
   14000a95d:	int3   
   14000a95e:	int3   
   14000a95f:	int3   
   14000a960:	int3   
   14000a961:	int3   
   14000a962:	int3   
   14000a963:	int3   
   14000a964:	int3   
   14000a965:	int3   
   14000a966:	int3   
   14000a967:	int3   
   14000a968:	int3   
   14000a969:	int3   
   14000a96a:	int3   
   14000a96b:	int3   
   14000a96c:	xor    edx,edx
   14000a96e:	rex.W jmp QWORD PTR [rip+0x246e3]        # 0x14002f058
   14000a975:	int3   
   14000a976:	int3   
   14000a977:	int3   
   14000a978:	int3   
   14000a979:	int3   
   14000a97a:	int3   
   14000a97b:	int3   
   14000a97c:	sub    rsp,0x28
   14000a980:	lea    rcx,[rip+0x46659]        # 0x140050fe0
   14000a987:	mov    edx,0x400
   14000a98c:	call   QWORD PTR [rip+0x246ce]        # 0x14002f060
   14000a992:	lea    rax,[rip+0x46647]        # 0x140050fe0
   14000a999:	add    rsp,0x28
   14000a99d:	ret    
   14000a99e:	int3   
   14000a99f:	int3   
   14000a9a0:	int3   
   14000a9a1:	int3   
   14000a9a2:	int3   
   14000a9a3:	int3   
   14000a9a4:	int3   
   14000a9a5:	int3   
   14000a9a6:	int3   
   14000a9a7:	int3   
   14000a9a8:	int3   
   14000a9a9:	int3   
   14000a9aa:	int3   
   14000a9ab:	int3   
   14000a9ac:	rex push rdi
   14000a9ae:	sub    rsp,0x20
   14000a9b2:	lea    rcx,[rip+0x32047]        # 0x14003ca00
   14000a9b9:	call   0x140013474
   14000a9be:	mov    r11,rax
   14000a9c1:	test   rax,rax
   14000a9c4:	je     0x14000a9f8
   14000a9c6:	or     rcx,0xffffffffffffffff
   14000a9ca:	xor    eax,eax
   14000a9cc:	mov    rdi,r11
   14000a9cf:	repnz scas ax,WORD PTR es:[rdi]
   14000a9d2:	not    rcx
   14000a9d5:	dec    rcx
   14000a9d8:	je     0x14000a9f8
   14000a9da:	lea    rcx,[rip+0x48e9f]        # 0x140053880
   14000a9e1:	sub    rcx,r11
   14000a9e4:	movzx  eax,WORD PTR [r11]
   14000a9e8:	mov    WORD PTR [rcx+r11*1],ax
   14000a9ed:	add    r11,0x2
   14000a9f1:	test   ax,ax
   14000a9f4:	jne    0x14000a9e4
   14000a9f6:	jmp    0x14000aa09
   14000a9f8:	lea    rcx,[rip+0x48e81]        # 0x140053880
   14000a9ff:	mov    edx,0x400
   14000aa04:	call   0x14000ef5c
   14000aa09:	lea    rax,[rip+0x48e70]        # 0x140053880
   14000aa10:	add    rsp,0x20
   14000aa14:	pop    rdi
   14000aa15:	ret    
   14000aa16:	int3   
   14000aa17:	int3   
   14000aa18:	int3   
   14000aa19:	int3   
   14000aa1a:	int3   
   14000aa1b:	int3   
   14000aa1c:	sub    rsp,0x28
   14000aa20:	cmp    DWORD PTR [rip+0x49659],0x0        # 0x140054080
   14000aa27:	jne    0x14000aa4e
   14000aa29:	call   0x14000a9ac
   14000aa2e:	lea    rdx,[rip+0x31ff3]        # 0x14003ca28
   14000aa35:	lea    rcx,[rip+0x48624]        # 0x140053060
   14000aa3c:	mov    r8,rax
   14000aa3f:	call   0x140013c98
   14000aa44:	mov    DWORD PTR [rip+0x49632],0x1        # 0x140054080
   14000aa4e:	lea    rax,[rip+0x4860b]        # 0x140053060
   14000aa55:	add    rsp,0x28
   14000aa59:	ret    
   14000aa5a:	int3   
   14000aa5b:	int3   
   14000aa5c:	int3   
   14000aa5d:	int3   
   14000aa5e:	int3   
   14000aa5f:	int3   
   14000aa60:	int3   
   14000aa61:	int3   
   14000aa62:	int3   
   14000aa63:	int3   
   14000aa64:	int3   
   14000aa65:	int3   
   14000aa66:	int3   
   14000aa67:	int3   
   14000aa68:	int3   
   14000aa69:	int3   
   14000aa6a:	int3   
   14000aa6b:	int3   
   14000aa6c:	sub    rsp,0x28
   14000aa70:	cmp    DWORD PTR [rip+0x4960d],0x0        # 0x140054084
   14000aa77:	jne    0x14000aa9e
   14000aa79:	call   0x14000a97c
   14000aa7e:	lea    rdx,[rip+0x31fd3]        # 0x14003ca58
   14000aa85:	lea    rcx,[rip+0x46d54]        # 0x1400517e0
   14000aa8c:	mov    r8,rax
   14000aa8f:	call   0x140013c98
   14000aa94:	mov    DWORD PTR [rip+0x495e6],0x1        # 0x140054084
   14000aa9e:	lea    rax,[rip+0x46d3b]        # 0x1400517e0
   14000aaa5:	add    rsp,0x28
   14000aaa9:	ret    
   14000aaaa:	int3   
   14000aaab:	int3   
   14000aaac:	int3   
   14000aaad:	int3   
   14000aaae:	int3   
   14000aaaf:	int3   
   14000aab0:	int3   
   14000aab1:	int3   
   14000aab2:	int3   
   14000aab3:	int3   
   14000aab4:	int3   
   14000aab5:	int3   
   14000aab6:	int3   
   14000aab7:	int3   
   14000aab8:	int3   
   14000aab9:	int3   
   14000aaba:	int3   
   14000aabb:	int3   
   14000aabc:	rex push rbx
   14000aabe:	sub    rsp,0x40
   14000aac2:	or     DWORD PTR [rsp+0x68],0xffffffff
   14000aac7:	lea    rax,[rsp+0x38]
   14000aacc:	mov    rbx,r8
   14000aacf:	mov    r9d,0x20019
   14000aad5:	xor    r8d,r8d
   14000aad8:	mov    DWORD PTR [rsp+0x30],0x4
   14000aae0:	mov    QWORD PTR [rsp+0x20],rax
   14000aae5:	call   QWORD PTR [rip+0x36885]        # 0x140041370
   14000aaeb:	test   eax,eax
   14000aaed:	jne    0x14000ab24
   14000aaef:	mov    rcx,QWORD PTR [rsp+0x38]
   14000aaf4:	lea    rax,[rsp+0x30]
   14000aaf9:	lea    r9,[rsp+0x34]
   14000aafe:	mov    QWORD PTR [rsp+0x28],rax
   14000ab03:	lea    rax,[rsp+0x68]
   14000ab08:	xor    r8d,r8d
   14000ab0b:	mov    rdx,rbx
   14000ab0e:	mov    QWORD PTR [rsp+0x20],rax
   14000ab13:	call   QWORD PTR [rip+0x3684f]        # 0x140041368
   14000ab19:	mov    rcx,QWORD PTR [rsp+0x38]
   14000ab1e:	call   QWORD PTR [rip+0x3683c]        # 0x140041360
   14000ab24:	mov    eax,DWORD PTR [rsp+0x68]
   14000ab28:	add    rsp,0x40
   14000ab2c:	pop    rbx
   14000ab2d:	ret    
   14000ab2e:	int3   
   14000ab2f:	int3   
   14000ab30:	int3   
   14000ab31:	int3   
   14000ab32:	int3   
   14000ab33:	int3   
   14000ab34:	int3   
   14000ab35:	int3   
   14000ab36:	int3   
   14000ab37:	int3   
   14000ab38:	int3   
   14000ab39:	int3   
   14000ab3a:	int3   
   14000ab3b:	int3   
   14000ab3c:	mov    QWORD PTR [rsp+0x18],rbx
   14000ab41:	mov    QWORD PTR [rsp+0x20],rbp
   14000ab46:	push   rsi
   14000ab47:	push   rdi
   14000ab48:	push   r12
   14000ab4a:	sub    rsp,0x2b0
   14000ab51:	mov    rax,QWORD PTR [rip+0x34dd8]        # 0x14003f930
   14000ab58:	xor    rax,rsp
   14000ab5b:	mov    QWORD PTR [rsp+0x2a0],rax
   14000ab63:	mov    edi,0x5f
   14000ab68:	mov    rbx,rdx
   14000ab6b:	mov    rbp,rcx
   14000ab6e:	lea    edx,[rdi-0x30]
   14000ab71:	mov    r8d,edi
   14000ab74:	call   0x140009998
   14000ab79:	lea    edx,[rdi-0x25]
   14000ab7c:	mov    r8d,edi
   14000ab7f:	mov    rcx,rbp
   14000ab82:	call   0x140009998
   14000ab87:	call   0x14000aa1c
   14000ab8c:	or     rcx,0xffffffffffffffff
   14000ab90:	mov    rdi,rax
   14000ab93:	xor    eax,eax
   14000ab95:	repnz scas ax,WORD PTR es:[rdi]
   14000ab98:	mov    rdi,rbp
   14000ab9b:	not    rcx
   14000ab9e:	lea    rdx,[rcx-0x1]
   14000aba2:	or     rcx,0xffffffffffffffff
   14000aba6:	repnz scas ax,WORD PTR es:[rdi]
   14000aba9:	not    rcx
   14000abac:	dec    rcx
   14000abaf:	add    rdx,rcx
   14000abb2:	lea    rcx,[rdx+rdx*1+0x14]
   14000abb7:	call   0x140013298
   14000abbc:	mov    rsi,rax
   14000abbf:	test   rax,rax
   14000abc2:	jne    0x14000abcb
   14000abc4:	xor    eax,eax
   14000abc6:	jmp    0x14000ac61
   14000abcb:	call   0x14000aa1c
   14000abd0:	mov    DWORD PTR [rsp+0x48],0x2a
   14000abd8:	mov    QWORD PTR [rsp+0x40],rbp
   14000abdd:	mov    r8,rax
   14000abe0:	mov    r9d,0x5c
   14000abe6:	lea    rax,[rip+0x31a67]        # 0x14003c654
   14000abed:	mov    DWORD PTR [rsp+0x38],r9d
   14000abf2:	mov    QWORD PTR [rsp+0x30],rax
   14000abf7:	lea    rax,[rip+0x31e8a]        # 0x14003ca88
   14000abfe:	mov    DWORD PTR [rsp+0x28],r9d
   14000ac03:	lea    rdx,[rip+0x31e86]        # 0x14003ca90
   14000ac0a:	mov    rcx,rsi
   14000ac0d:	mov    QWORD PTR [rsp+0x20],rax
   14000ac12:	call   0x140013c98
   14000ac17:	lea    rdx,[rsp+0x50]
   14000ac1c:	mov    rcx,rsi
   14000ac1f:	call   QWORD PTR [rip+0x2444b]        # 0x14002f070
   14000ac25:	mov    rcx,rsi
   14000ac28:	mov    rdi,rax
   14000ac2b:	call   0x1400130a8
   14000ac30:	cmp    rdi,0xffffffffffffffff
   14000ac34:	je     0x14000abc4
   14000ac36:	lea    rcx,[rsp+0x7c]
   14000ac3b:	lea    rdx,[rsp+0x7c]
   14000ac40:	sub    rbx,rcx
   14000ac43:	movzx  ecx,WORD PTR [rdx]
   14000ac46:	mov    WORD PTR [rbx+rdx*1],cx
   14000ac4a:	add    rdx,0x2
   14000ac4e:	test   cx,cx
   14000ac51:	jne    0x14000ac43
   14000ac53:	mov    rcx,rdi
   14000ac56:	call   QWORD PTR [rip+0x2440c]        # 0x14002f068
   14000ac5c:	mov    eax,0x1
   14000ac61:	mov    rcx,QWORD PTR [rsp+0x2a0]
   14000ac69:	xor    rcx,rsp
   14000ac6c:	call   0x140012670
   14000ac71:	lea    r11,[rsp+0x2b0]
   14000ac79:	mov    rbx,QWORD PTR [r11+0x30]
   14000ac7d:	mov    rbp,QWORD PTR [r11+0x38]
   14000ac81:	mov    rsp,r11
   14000ac84:	pop    r12
   14000ac86:	pop    rdi
   14000ac87:	pop    rsi
   14000ac88:	ret    
   14000ac89:	int3   
   14000ac8a:	int3   
   14000ac8b:	int3   
   14000ac8c:	int3   
   14000ac8d:	int3   
   14000ac8e:	int3   
   14000ac8f:	int3   
   14000ac90:	int3   
   14000ac91:	int3   
   14000ac92:	int3   
   14000ac93:	int3   
   14000ac94:	int3   
   14000ac95:	int3   
   14000ac96:	int3   
   14000ac97:	int3   
   14000ac98:	int3   
   14000ac99:	int3   
   14000ac9a:	int3   
   14000ac9b:	int3   
   14000ac9c:	jmp    0x1400130e8
   14000aca1:	int3   
   14000aca2:	int3   
   14000aca3:	int3   
   14000aca4:	int3   
   14000aca5:	int3   
   14000aca6:	int3   
   14000aca7:	int3   
   14000aca8:	int3   
   14000aca9:	int3   
   14000acaa:	int3   
   14000acab:	int3   
   14000acac:	mov    rax,rsp
   14000acaf:	mov    QWORD PTR [rax+0x8],rbx
   14000acb3:	mov    QWORD PTR [rax+0x10],rsi
   14000acb7:	mov    QWORD PTR [rax+0x18],rdi
   14000acbb:	mov    QWORD PTR [rax+0x20],r12
   14000acbf:	push   rbp
   14000acc0:	lea    rbp,[rax-0x1f98]
   14000acc7:	mov    eax,0x2090
   14000accc:	call   0x140012f50
   14000acd1:	sub    rsp,rax
   14000acd4:	mov    rax,QWORD PTR [rip+0x34c55]        # 0x14003f930
   14000acdb:	xor    rax,rsp
   14000acde:	mov    QWORD PTR [rbp+0x1f80],rax
   14000ace5:	xor    ebx,ebx
   14000ace7:	lea    rsi,[rip+0x45af2]        # 0x1400507e0
   14000acee:	cmp    DWORD PTR [rip+0x48b80],ebx        # 0x140053874
   14000acf4:	jne    0x14000b027
   14000acfa:	mov    r8d,0x800
   14000ad00:	mov    rdx,rsi
   14000ad03:	xor    ecx,ecx
   14000ad05:	call   QWORD PTR [rip+0x2436d]        # 0x14002f078
   14000ad0b:	lea    edi,[rbx+0x5c]
   14000ad0e:	mov    rcx,rsi
   14000ad11:	mov    edx,edi
   14000ad13:	call   0x1400149dc
   14000ad18:	mov    ecx,ebx
   14000ad1a:	mov    WORD PTR [rax],bx
   14000ad1d:	movzx  eax,WORD PTR [rcx+rsi*1]
   14000ad21:	add    rcx,0x2
   14000ad25:	mov    WORD PTR [rsp+rcx*1+0x7e],ax
   14000ad2a:	test   ax,ax
   14000ad2d:	jne    0x14000ad1d
   14000ad2f:	lea    rcx,[rbp-0x80]
   14000ad33:	mov    edx,edi
   14000ad35:	call   0x1400149dc
   14000ad3a:	test   rax,rax
   14000ad3d:	je     0x14000ad4d
   14000ad3f:	lea    rcx,[rbp-0x80]
   14000ad43:	mov    edx,edi
   14000ad45:	call   0x1400149dc
   14000ad4a:	mov    WORD PTR [rax],bx
   14000ad4d:	lea    rax,[rip+0x316cc]        # 0x14003c420
   14000ad54:	lea    r8,[rbp-0x80]
   14000ad58:	lea    rdx,[rip+0x316e1]        # 0x14003c440
   14000ad5f:	mov    QWORD PTR [rsp+0x30],rax
   14000ad64:	lea    rax,[rip+0x316cd]        # 0x14003c438
   14000ad6b:	lea    rcx,[rbp+0x1780]
   14000ad72:	mov    r9d,edi
   14000ad75:	mov    DWORD PTR [rsp+0x28],edi
   14000ad79:	mov    QWORD PTR [rsp+0x20],rax
   14000ad7e:	call   0x140013c98
   14000ad83:	lea    rdx,[rip+0x316ce]        # 0x14003c458
   14000ad8a:	lea    rax,[rip+0x316df]        # 0x14003c470
   14000ad91:	mov    QWORD PTR [rsp+0x30],rdx
   14000ad96:	lea    r8,[rbp-0x80]
   14000ad9a:	lea    rcx,[rbp+0x780]
   14000ada1:	lea    rdx,[rip+0x316d0]        # 0x14003c478
   14000ada8:	mov    r9d,edi
   14000adab:	mov    DWORD PTR [rsp+0x28],edi
   14000adaf:	mov    QWORD PTR [rsp+0x20],rax
   14000adb4:	call   0x140013c98
   14000adb9:	lea    rdx,[rsp+0x50]
   14000adbe:	lea    rcx,[rbp+0x1780]
   14000adc5:	call   0x1400121e4
   14000adca:	mov    r12d,0x1
   14000add0:	test   eax,eax
   14000add2:	jne    0x14000adf9
   14000add4:	lea    rdx,[rsp+0x50]
   14000add9:	lea    rcx,[rbp+0x780]
   14000ade0:	call   0x1400121e4
   14000ade5:	mov    ecx,DWORD PTR [rip+0x48a89]        # 0x140053874
   14000adeb:	test   eax,eax
   14000aded:	cmove  ecx,r12d
   14000adf1:	mov    DWORD PTR [rip+0x48a7d],ecx        # 0x140053874
   14000adf7:	jmp    0x14000adff
   14000adf9:	mov    ecx,DWORD PTR [rip+0x48a75]        # 0x140053874
   14000adff:	test   ecx,ecx
   14000ae01:	jne    0x14000b027
   14000ae07:	lea    r9,[rip+0x31682]        # 0x14003c490
   14000ae0e:	lea    r8,[rip+0x3168b]        # 0x14003c4a0
   14000ae15:	lea    rdx,[rip+0x316cc]        # 0x14003c4e8
   14000ae1c:	lea    rcx,[rip+0x479bd]        # 0x1400527e0
   14000ae23:	call   0x140013c98
   14000ae28:	lea    rcx,[rsp+0x48]
   14000ae2d:	lea    rdx,[rip+0x479ac]        # 0x1400527e0
   14000ae34:	mov    QWORD PTR [rsp+0x20],rcx
   14000ae39:	mov    r9d,0x20019
   14000ae3f:	xor    r8d,r8d
   14000ae42:	mov    rcx,0xffffffff80000002
   14000ae49:	call   QWORD PTR [rip+0x36521]        # 0x140041370
   14000ae4f:	test   eax,eax
   14000ae51:	jne    0x14000af09
   14000ae57:	mov    rcx,QWORD PTR [rsp+0x48]
   14000ae5c:	lea    rax,[rsp+0x40]
   14000ae61:	lea    r9,[rsp+0x44]
   14000ae66:	mov    QWORD PTR [rsp+0x28],rax
   14000ae6b:	lea    rdx,[rip+0x31686]        # 0x14003c4f8
   14000ae72:	xor    r8d,r8d
   14000ae75:	mov    QWORD PTR [rsp+0x20],rsi
   14000ae7a:	mov    DWORD PTR [rsp+0x40],0x800
   14000ae82:	call   QWORD PTR [rip+0x364e0]        # 0x140041368
   14000ae88:	test   eax,eax
   14000ae8a:	jne    0x14000af09
   14000ae8c:	lea    rax,[rip+0x31675]        # 0x14003c508
   14000ae93:	lea    rdx,[rip+0x31686]        # 0x14003c520
   14000ae9a:	lea    rcx,[rbp+0x780]
   14000aea1:	mov    r9d,edi
   14000aea4:	mov    r8,rsi
   14000aea7:	mov    QWORD PTR [rsp+0x20],rax
   14000aeac:	call   0x140013c98
   14000aeb1:	lea    rdx,[rsp+0x50]
   14000aeb6:	lea    rcx,[rbp+0x780]
   14000aebd:	call   0x1400121e4
   14000aec2:	test   eax,eax
   14000aec4:	je     0x14000aefe
   14000aec6:	call   0x14000a1dc
   14000aecb:	test   eax,eax
   14000aecd:	jne    0x14000b020
   14000aed3:	lea    rcx,[rbp+0xf80]
   14000aeda:	mov    edx,0x400
   14000aedf:	call   0x14000a7ec
   14000aee4:	test   eax,eax
   14000aee6:	je     0x14000af09
   14000aee8:	lea    r8,[rbp+0xf80]
   14000aeef:	lea    rdx,[rip+0x3163a]        # 0x14003c530
   14000aef6:	mov    rcx,rsi
   14000aef9:	call   0x140013c98
   14000aefe:	mov    edx,r12d
   14000af01:	mov    DWORD PTR [rip+0x4896d],edx        # 0x140053874
   14000af07:	jmp    0x14000af0f
   14000af09:	mov    edx,DWORD PTR [rip+0x48965]        # 0x140053874
   14000af0f:	test   edx,edx
   14000af11:	jne    0x14000b027
   14000af17:	mov    r8d,0x800
   14000af1d:	mov    rdx,rsi
   14000af20:	xor    ecx,ecx
   14000af22:	call   QWORD PTR [rip+0x24150]        # 0x14002f078
   14000af28:	lea    rdx,[rip+0x31611]        # 0x14003c540
   14000af2f:	mov    rcx,rsi
   14000af32:	call   0x140013160
   14000af37:	test   rax,rax
   14000af3a:	je     0x14000afeb
   14000af40:	lea    rdx,[rip+0x31619]        # 0x14003c560
   14000af47:	mov    rcx,rsi
   14000af4a:	call   0x140013160
   14000af4f:	mov    rcx,rbx
   14000af52:	mov    WORD PTR [rax],bx
   14000af55:	movzx  eax,WORD PTR [rcx+rsi*1]
   14000af59:	add    rcx,0x2
   14000af5d:	mov    WORD PTR [rsp+rcx*1+0x7e],ax
   14000af62:	test   ax,ax
   14000af65:	jne    0x14000af55
   14000af67:	or     r8,0xffffffffffffffff
   14000af6b:	xor    eax,eax
   14000af6d:	lea    rdi,[rbp-0x80]
   14000af71:	mov    rcx,r8
   14000af74:	repnz scas ax,WORD PTR es:[rdi]
   14000af77:	lea    rcx,[rip+0x31602]        # 0x14003c580
   14000af7e:	xor    edx,edx
   14000af80:	movzx  eax,WORD PTR [rcx+rdx*1]
   14000af84:	add    rdx,0x2
   14000af88:	mov    WORD PTR [rdi+rdx*1-0x4],ax
   14000af8d:	test   ax,ax
   14000af90:	jne    0x14000af80
   14000af92:	xor    eax,eax
   14000af94:	mov    rdi,rsi
   14000af97:	mov    rcx,r8
   14000af9a:	repnz scas ax,WORD PTR es:[rdi]
   14000af9d:	xor    ecx,ecx
   14000af9f:	lea    rdx,[rip+0x315ea]        # 0x14003c590
   14000afa6:	movzx  eax,WORD PTR [rdx+rcx*1]
   14000afaa:	add    rcx,0x2
   14000afae:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   14000afb3:	test   ax,ax
   14000afb6:	jne    0x14000afa6
   14000afb8:	lea    rdx,[rsp+0x50]
   14000afbd:	mov    rcx,rsi
   14000afc0:	call   0x1400121e4
   14000afc5:	test   eax,eax
   14000afc7:	jne    0x14000afeb
   14000afc9:	lea    rdx,[rsp+0x50]
   14000afce:	lea    rcx,[rbp-0x80]
   14000afd2:	call   0x1400121e4
   14000afd7:	mov    ecx,DWORD PTR [rip+0x48897]        # 0x140053874
   14000afdd:	test   eax,eax
   14000afdf:	cmove  ecx,r12d
   14000afe3:	mov    DWORD PTR [rip+0x4888b],ecx        # 0x140053874
   14000afe9:	jmp    0x14000aff1
   14000afeb:	mov    ecx,DWORD PTR [rip+0x48883]        # 0x140053874
   14000aff1:	test   ecx,ecx
   14000aff3:	jne    0x14000b027
   14000aff5:	lea    rcx,[rbp+0xf80]
   14000affc:	mov    edx,0x400
   14000b001:	call   0x14000a7ec
   14000b006:	test   eax,eax
   14000b008:	je     0x14000b027
   14000b00a:	lea    r8,[rbp+0xf80]
   14000b011:	lea    rdx,[rip+0x31588]        # 0x14003c5a0
   14000b018:	mov    rcx,rsi
   14000b01b:	call   0x140013c98
   14000b020:	mov    DWORD PTR [rip+0x4884d],r12d        # 0x140053874
   14000b027:	mov    rax,rsi
   14000b02a:	mov    rcx,QWORD PTR [rbp+0x1f80]
   14000b031:	xor    rcx,rsp
   14000b034:	call   0x140012670
   14000b039:	lea    r11,[rsp+0x2090]
   14000b041:	mov    rbx,QWORD PTR [r11+0x10]
   14000b045:	mov    rsi,QWORD PTR [r11+0x18]
   14000b049:	mov    rdi,QWORD PTR [r11+0x20]
   14000b04d:	mov    r12,QWORD PTR [r11+0x28]
   14000b051:	mov    rsp,r11
   14000b054:	pop    rbp
   14000b055:	ret    
   14000b056:	int3   
   14000b057:	int3   
   14000b058:	int3   
   14000b059:	int3   
   14000b05a:	int3   
   14000b05b:	int3   
   14000b05c:	mov    QWORD PTR [rsp+0x8],rbx
   14000b061:	push   rdi
   14000b062:	sub    rsp,0x20
   14000b066:	movsxd rbx,edx
   14000b069:	mov    rdi,rcx
   14000b06c:	call   0x14000acac
   14000b071:	mov    rdx,rbx
   14000b074:	mov    r9d,0x400
   14000b07a:	mov    rcx,rdi
   14000b07d:	mov    r8,rax
   14000b080:	call   0x140013da4
   14000b085:	mov    edx,0x5c
   14000b08a:	mov    rcx,rdi
   14000b08d:	call   0x1400149dc
   14000b092:	xor    ecx,ecx
   14000b094:	test   rax,rax
   14000b097:	je     0x14000b09c
   14000b099:	mov    WORD PTR [rax],cx
   14000b09c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b0a1:	add    rsp,0x20
   14000b0a5:	pop    rdi
   14000b0a6:	ret    
   14000b0a7:	int3   
   14000b0a8:	int3   
   14000b0a9:	int3   
   14000b0aa:	int3   
   14000b0ab:	int3   
   14000b0ac:	int3   
   14000b0ad:	int3   
   14000b0ae:	int3   
   14000b0af:	int3   
   14000b0b0:	int3   
   14000b0b1:	int3   
   14000b0b2:	int3   
   14000b0b3:	int3   
   14000b0b4:	int3   
   14000b0b5:	int3   
   14000b0b6:	int3   
   14000b0b7:	int3   
   14000b0b8:	int3   
   14000b0b9:	int3   
   14000b0ba:	int3   
   14000b0bb:	int3   
   14000b0bc:	mov    QWORD PTR [rsp+0x8],rbx
   14000b0c1:	mov    QWORD PTR [rsp+0x10],rbp
   14000b0c6:	push   rsi
   14000b0c7:	sub    rsp,0x940
   14000b0ce:	mov    rax,QWORD PTR [rip+0x3485b]        # 0x14003f930
   14000b0d5:	xor    rax,rsp
   14000b0d8:	mov    QWORD PTR [rsp+0x930],rax
   14000b0e0:	xor    ebp,ebp
   14000b0e2:	lea    rsi,[rip+0x46ef7]        # 0x140051fe0
   14000b0e9:	cmp    DWORD PTR [rip+0x48789],ebp        # 0x140053878
   14000b0ef:	jne    0x14000b165
   14000b0f1:	call   0x14000acac
   14000b0f6:	mov    rdx,rsi
   14000b0f9:	sub    rdx,rax
   14000b0fc:	movzx  ecx,WORD PTR [rax]
   14000b0ff:	mov    WORD PTR [rdx+rax*1],cx
   14000b103:	add    rax,0x2
   14000b107:	test   cx,cx
   14000b10a:	jne    0x14000b0fc
   14000b10c:	mov    edx,0x5c
   14000b111:	mov    rcx,rsi
   14000b114:	call   0x1400149dc
   14000b119:	lea    r8,[rip+0x314a8]        # 0x14003c5c8
   14000b120:	lea    rdx,[rip+0x314a9]        # 0x14003c5d0
   14000b127:	mov    rbx,rax
   14000b12a:	lea    rax,[rip+0x3147f]        # 0x14003c5b0
   14000b131:	lea    rcx,[rsp+0x60]
   14000b136:	mov    r9d,0x5c
   14000b13c:	mov    QWORD PTR [rsp+0x20],rax
   14000b141:	call   0x140013c98
   14000b146:	lea    rax,[rsp+0x60]
   14000b14b:	lea    r11,[rsp+0x60]
   14000b150:	sub    rbx,rax
   14000b153:	movzx  eax,WORD PTR [r11]
   14000b157:	add    r11,0x2
   14000b15b:	mov    WORD PTR [rbx+r11*1],ax
   14000b160:	test   ax,ax
   14000b163:	jne    0x14000b153
   14000b165:	lea    rdx,[rsp+0x30]
   14000b16a:	mov    rcx,rsi
   14000b16d:	call   0x1400121e4
   14000b172:	test   eax,eax
   14000b174:	jne    0x14000b19e
   14000b176:	mov    rax,rsi
   14000b179:	mov    rcx,QWORD PTR [rsp+0x930]
   14000b181:	xor    rcx,rsp
   14000b184:	call   0x140012670
   14000b189:	lea    r11,[rsp+0x940]
   14000b191:	mov    rbx,QWORD PTR [r11+0x10]
   14000b195:	mov    rbp,QWORD PTR [r11+0x18]
   14000b199:	mov    rsp,r11
   14000b19c:	pop    rsi
   14000b19d:	ret    
   14000b19e:	mov    ebx,0x400
   14000b1a3:	lea    rcx,[rsp+0x130]
   14000b1ab:	mov    edx,ebx
   14000b1ad:	call   0x14000a7ec
   14000b1b2:	test   eax,eax
   14000b1b4:	je     0x14000b1e0
   14000b1b6:	lea    r9,[rsp+0x130]
   14000b1be:	lea    r8,[rip+0x3141b]        # 0x14003c5e0
   14000b1c5:	mov    edx,ebx
   14000b1c7:	mov    rcx,rsi
   14000b1ca:	call   0x140013d5c
   14000b1cf:	lea    rdx,[rsp+0x30]
   14000b1d4:	mov    rcx,rsi
   14000b1d7:	call   0x1400121e4
   14000b1dc:	test   eax,eax
   14000b1de:	je     0x14000b176
   14000b1e0:	mov    ecx,0x2
   14000b1e5:	call   0x14000bd98
   14000b1ea:	mov    rcx,rax
   14000b1ed:	call   0x140009f1c
   14000b1f2:	int3   
   14000b1f3:	int3   
   14000b1f4:	int3   
   14000b1f5:	int3   
   14000b1f6:	int3   
   14000b1f7:	int3   
   14000b1f8:	int3   
   14000b1f9:	int3   
   14000b1fa:	int3   
   14000b1fb:	int3   
   14000b1fc:	mov    QWORD PTR [rsp+0x18],rbx
   14000b201:	push   rbp
   14000b202:	push   rsi
   14000b203:	push   rdi
   14000b204:	push   r12
   14000b206:	push   r15
   14000b208:	lea    rbp,[rsp-0x3a0]
   14000b210:	sub    rsp,0x4a0
   14000b217:	mov    rax,QWORD PTR [rip+0x34712]        # 0x14003f930
   14000b21e:	xor    rax,rsp
   14000b221:	mov    QWORD PTR [rbp+0x390],rax
   14000b228:	and    DWORD PTR [rdx],0x0
   14000b22b:	mov    rbx,rdx
   14000b22e:	lea    rax,[rsp+0x48]
   14000b233:	mov    rsi,rcx
   14000b236:	lea    rdx,[rip+0x31683]        # 0x14003c8c0
   14000b23d:	mov    r9d,0x20019
   14000b243:	xor    r8d,r8d
   14000b246:	mov    rcx,0xffffffff80000002
   14000b24d:	mov    QWORD PTR [rsp+0x20],rax
   14000b252:	call   QWORD PTR [rip+0x36118]        # 0x140041370
   14000b258:	test   eax,eax
   14000b25a:	jne    0x14000b489
   14000b260:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b265:	xor    r12d,r12d
   14000b268:	lea    r9,[rsp+0x40]
   14000b26d:	and    QWORD PTR [rsp+0x38],r12
   14000b272:	and    QWORD PTR [rsp+0x30],r12
   14000b277:	and    QWORD PTR [rsp+0x28],r12
   14000b27c:	and    QWORD PTR [rsp+0x20],r12
   14000b281:	lea    r8,[rsp+0x70]
   14000b286:	xor    edx,edx
   14000b288:	mov    DWORD PTR [rsp+0x40],0x104
   14000b290:	call   QWORD PTR [rip+0x360e2]        # 0x140041378
   14000b296:	test   eax,eax
   14000b298:	jne    0x14000b47e
   14000b29e:	or     r15,0xffffffffffffffff
   14000b2a2:	lea    rdx,[rip+0x3166f]        # 0x14003c918
   14000b2a9:	lea    rcx,[rsp+0x70]
   14000b2ae:	mov    r8d,0x3
   14000b2b4:	mov    DWORD PTR [rsp+0x50],0x104
   14000b2bc:	call   0x140013790
   14000b2c1:	test   eax,eax
   14000b2c3:	js     0x14000b43b
   14000b2c9:	xor    eax,eax
   14000b2cb:	lea    rdi,[rsp+0x70]
   14000b2d0:	mov    rcx,r15
   14000b2d3:	repnz scas ax,WORD PTR es:[rdi]
   14000b2d6:	not    rcx
   14000b2d9:	dec    rcx
   14000b2dc:	cmp    rcx,0x3
   14000b2e0:	jbe    0x14000b43b
   14000b2e6:	lea    rax,[rsp+0x70]
   14000b2eb:	lea    r9,[rip+0x31686]        # 0x14003c978
   14000b2f2:	lea    rcx,[rbp+0x180]
   14000b2f9:	mov    QWORD PTR [rsp+0x28],rax
   14000b2fe:	lea    rax,[rip+0x3161b]        # 0x14003c920
   14000b305:	mov    r8,r15
   14000b308:	mov    edx,0x104
   14000b30d:	mov    QWORD PTR [rsp+0x20],rax
   14000b312:	call   0x140013d80
   14000b317:	lea    rdx,[rsp+0x58]
   14000b31c:	mov    r9d,0x20019
   14000b322:	mov    QWORD PTR [rsp+0x20],rdx
   14000b327:	lea    rdx,[rbp+0x180]
   14000b32e:	xor    r8d,r8d
   14000b331:	mov    rcx,0xffffffff80000002
   14000b338:	call   QWORD PTR [rip+0x36032]        # 0x140041370
   14000b33e:	test   eax,eax
   14000b340:	jne    0x14000b43b
   14000b346:	mov    ecx,0x208
   14000b34b:	call   0x140013298
   14000b350:	movsxd rcx,DWORD PTR [rbx]
   14000b353:	lea    rdx,[rcx+rcx*2]
   14000b357:	add    rdx,rdx
   14000b35a:	mov    QWORD PTR [rsi+rdx*8+0x18],rax
   14000b35f:	movsxd rax,DWORD PTR [rbx]
   14000b362:	lea    rcx,[rax+rax*2]
   14000b366:	add    rcx,rcx
   14000b369:	mov    rax,QWORD PTR [rsi+rcx*8+0x18]
   14000b36e:	test   rax,rax
   14000b371:	je     0x14000b4f8
   14000b377:	lea    rcx,[rsp+0x50]
   14000b37c:	lea    r9,[rsp+0x60]
   14000b381:	lea    rdx,[rip+0x31600]        # 0x14003c988
   14000b388:	mov    QWORD PTR [rsp+0x28],rcx
   14000b38d:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b392:	xor    r8d,r8d
   14000b395:	mov    QWORD PTR [rsp+0x20],rax
   14000b39a:	call   QWORD PTR [rip+0x35fc8]        # 0x140041368
   14000b3a0:	test   eax,eax
   14000b3a2:	movsxd rax,DWORD PTR [rbx]
   14000b3a5:	jne    0x14000b41f
   14000b3a7:	lea    rdi,[rax+rax*2]
   14000b3ab:	xor    eax,eax
   14000b3ad:	mov    rcx,r15
   14000b3b0:	add    rdi,rdi
   14000b3b3:	lea    rdx,[rip+0x315e6]        # 0x14003c9a0
   14000b3ba:	mov    rdi,QWORD PTR [rsi+rdi*8+0x18]
   14000b3bf:	repnz scas ax,WORD PTR es:[rdi]
   14000b3c2:	xor    ecx,ecx
   14000b3c4:	movzx  eax,WORD PTR [rdx+rcx*1]
   14000b3c8:	add    rcx,0x2
   14000b3cc:	mov    WORD PTR [rdi+rcx*1-0x4],ax
   14000b3d1:	test   ax,ax
   14000b3d4:	jne    0x14000b3c4
   14000b3d6:	lea    rcx,[rsp+0x70]
   14000b3db:	call   0x1400130e8
   14000b3e0:	movsxd rcx,DWORD PTR [rbx]
   14000b3e3:	lea    rdx,[rcx+rcx*2]
   14000b3e7:	add    rdx,rdx
   14000b3ea:	mov    QWORD PTR [rsi+rdx*8+0x8],rax
   14000b3ef:	movsxd rax,DWORD PTR [rbx]
   14000b3f2:	lea    rcx,[rax+rax*2]
   14000b3f6:	lea    rax,[rip+0x315c3]        # 0x14003c9c0
   14000b3fd:	add    rcx,rcx
   14000b400:	mov    QWORD PTR [rsi+rcx*8+0x28],rax
   14000b405:	movsxd rax,DWORD PTR [rbx]
   14000b408:	lea    rcx,[rax+rax*2]
   14000b40c:	lea    rax,[rip+0x315bd]        # 0x14003c9d0
   14000b413:	add    rcx,rcx
   14000b416:	mov    QWORD PTR [rsi+rcx*8+0x20],rax
   14000b41b:	inc    DWORD PTR [rbx]
   14000b41d:	jmp    0x14000b430
   14000b41f:	lea    rcx,[rax+rax*2]
   14000b423:	add    rcx,rcx
   14000b426:	mov    rcx,QWORD PTR [rsi+rcx*8+0x18]
   14000b42b:	call   0x1400130a8
   14000b430:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b435:	call   QWORD PTR [rip+0x35f25]        # 0x140041360
   14000b43b:	and    QWORD PTR [rsp+0x38],0x0
   14000b441:	and    QWORD PTR [rsp+0x30],0x0
   14000b447:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b44c:	and    QWORD PTR [rsp+0x28],0x0
   14000b452:	and    QWORD PTR [rsp+0x20],0x0
   14000b458:	inc    r12d
   14000b45b:	lea    r9,[rsp+0x40]
   14000b460:	lea    r8,[rsp+0x70]
   14000b465:	mov    edx,r12d
   14000b468:	mov    DWORD PTR [rsp+0x40],0x104
   14000b470:	call   QWORD PTR [rip+0x35f02]        # 0x140041378
   14000b476:	test   eax,eax
   14000b478:	je     0x14000b2a2
   14000b47e:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b483:	call   QWORD PTR [rip+0x35ed7]        # 0x140041360
   14000b489:	xor    edi,edi
   14000b48b:	cmp    edi,DWORD PTR [rbx]
   14000b48d:	jae    0x14000b4b4
   14000b48f:	lea    r12,[rsi+0x18]
   14000b493:	call   0x14000b0bc
   14000b498:	mov    rcx,QWORD PTR [r12]
   14000b49c:	mov    rdx,rax
   14000b49f:	call   0x1400147a4
   14000b4a4:	test   eax,eax
   14000b4a6:	je     0x14000b4b2
   14000b4a8:	inc    edi
   14000b4aa:	add    r12,0x30
   14000b4ae:	cmp    edi,DWORD PTR [rbx]
   14000b4b0:	jb     0x14000b493
   14000b4b2:	cmp    edi,DWORD PTR [rbx]
   14000b4b4:	jne    0x14000b4f8
   14000b4b6:	call   0x14000b0bc
   14000b4bb:	movsxd rcx,DWORD PTR [rbx]
   14000b4be:	lea    rdx,[rcx+rcx*2]
   14000b4c2:	add    rdx,rdx
   14000b4c5:	mov    QWORD PTR [rsi+rdx*8+0x18],rax
   14000b4ca:	movsxd rax,DWORD PTR [rbx]
   14000b4cd:	lea    rcx,[rax+rax*2]
   14000b4d1:	lea    rax,[rip+0x31508]        # 0x14003c9e0
   14000b4d8:	add    rcx,rcx
   14000b4db:	mov    QWORD PTR [rsi+rcx*8+0x28],rax
   14000b4e0:	movsxd rax,DWORD PTR [rbx]
   14000b4e3:	lea    rcx,[rax+rax*2]
   14000b4e7:	lea    rax,[rip+0x31502]        # 0x14003c9f0
   14000b4ee:	add    rcx,rcx
   14000b4f1:	mov    QWORD PTR [rsi+rcx*8+0x20],rax
   14000b4f6:	inc    DWORD PTR [rbx]
   14000b4f8:	mov    rcx,QWORD PTR [rbp+0x390]
   14000b4ff:	xor    rcx,rsp
   14000b502:	call   0x140012670
   14000b507:	mov    rbx,QWORD PTR [rsp+0x4e0]
   14000b50f:	add    rsp,0x4a0
   14000b516:	pop    r15
   14000b518:	pop    r12
   14000b51a:	pop    rdi
   14000b51b:	pop    rsi
   14000b51c:	pop    rbp
   14000b51d:	ret    
   14000b51e:	int3   
   14000b51f:	int3   
   14000b520:	int3   
   14000b521:	int3   
   14000b522:	int3   
   14000b523:	int3   
   14000b524:	int3   
   14000b525:	int3   
   14000b526:	int3   
   14000b527:	int3   
   14000b528:	int3   
   14000b529:	int3   
   14000b52a:	int3   
   14000b52b:	int3   
   14000b52c:	rex push rbx
   14000b52e:	sub    rsp,0x40
   14000b532:	mov    rbx,rcx
   14000b535:	call   0x14000acac
   14000b53a:	mov    QWORD PTR [rsp+0x30],rbx
   14000b53f:	lea    r9,[rip+0x30e6a]        # 0x14003c3b0
   14000b546:	lea    rcx,[rip+0x44a93]        # 0x14004ffe0
   14000b54d:	or     r8,0xffffffffffffffff
   14000b551:	mov    edx,0x400
   14000b556:	mov    DWORD PTR [rsp+0x28],0x5c
   14000b55e:	mov    QWORD PTR [rsp+0x20],rax
   14000b563:	call   0x140013d80
   14000b568:	lea    rax,[rip+0x44a71]        # 0x14004ffe0
   14000b56f:	add    rsp,0x40
   14000b573:	pop    rbx
   14000b574:	ret    
   14000b575:	int3   
   14000b576:	int3   
   14000b577:	int3   
   14000b578:	mov    QWORD PTR [rsp+0x10],rbx
   14000b57d:	mov    QWORD PTR [rsp+0x18],rsi
   14000b582:	push   rbp
   14000b583:	push   rdi
   14000b584:	push   r12
   14000b586:	lea    rbp,[rsp-0x19a0]
   14000b58e:	mov    eax,0x1aa0
   14000b593:	call   0x140012f50
   14000b598:	sub    rsp,rax
   14000b59b:	mov    rax,QWORD PTR [rip+0x3438e]        # 0x14003f930
   14000b5a2:	xor    rax,rsp
   14000b5a5:	mov    QWORD PTR [rbp+0x1990],rax
   14000b5ac:	mov    rax,QWORD PTR [rip+0x48add]        # 0x140054090
   14000b5b3:	xor    edi,edi
   14000b5b5:	mov    rbx,rcx
   14000b5b8:	test   rax,rax
   14000b5bb:	jne    0x14000b71c
   14000b5c1:	lea    rcx,[rip+0x314f0]        # 0x14003cab8
   14000b5c8:	call   0x14000b52c
   14000b5cd:	mov    rcx,rax
   14000b5d0:	call   QWORD PTR [rip+0x23a2a]        # 0x14002f000
   14000b5d6:	mov    QWORD PTR [rip+0x48ab3],rax        # 0x140054090
   14000b5dd:	test   rax,rax
   14000b5e0:	jne    0x14000b71c
   14000b5e6:	mov    esi,0x7fe
   14000b5eb:	lea    rcx,[rbp+0x192]
   14000b5f2:	xor    edx,edx
   14000b5f4:	mov    r8d,esi
   14000b5f7:	mov    WORD PTR [rbp+0x190],di
   14000b5fe:	call   0x140012fb0
   14000b603:	lea    rcx,[rbp+0x1192]
   14000b60a:	mov    r8d,esi
   14000b60d:	xor    edx,edx
   14000b60f:	mov    WORD PTR [rbp+0x1190],di
   14000b616:	call   0x140012fb0
   14000b61b:	mov    r12d,0x400
   14000b621:	lea    rcx,[rbp+0x190]
   14000b628:	mov    edx,r12d
   14000b62b:	call   0x14000a7ec
   14000b630:	test   eax,eax
   14000b632:	je     0x14000b710
   14000b638:	lea    rcx,[rbp+0x992]
   14000b63f:	mov    r8d,esi
   14000b642:	xor    edx,edx
   14000b644:	mov    WORD PTR [rbp+0x990],di
   14000b64b:	call   0x140012fb0
   14000b650:	lea    esi,[rdi+0x5c]
   14000b653:	lea    r9,[rbp+0x190]
   14000b65a:	lea    r8,[rip+0x31477]        # 0x14003cad8
   14000b661:	lea    rcx,[rbp+0x1190]
   14000b668:	mov    edx,r12d
   14000b66b:	mov    DWORD PTR [rsp+0x28],esi
   14000b66f:	mov    DWORD PTR [rsp+0x20],esi
   14000b673:	call   0x140013d5c
   14000b678:	lea    r9,[rbp+0x190]
   14000b67f:	lea    r8,[rip+0x3148a]        # 0x14003cb10
   14000b686:	lea    rcx,[rbp+0x990]
   14000b68d:	mov    edx,r12d
   14000b690:	mov    DWORD PTR [rsp+0x28],esi
   14000b694:	mov    DWORD PTR [rsp+0x20],esi
   14000b698:	call   0x140013d5c
   14000b69d:	lea    rdx,[rsp+0x40]
   14000b6a2:	lea    rcx,[rbp+0x990]
   14000b6a9:	call   QWORD PTR [rip+0x239c1]        # 0x14002f070
   14000b6af:	cmp    rax,0xffffffffffffffff
   14000b6b3:	je     0x14000b6fa
   14000b6b5:	mov    rcx,rax
   14000b6b8:	call   QWORD PTR [rip+0x239aa]        # 0x14002f068
   14000b6be:	lea    r11,[rsp+0x6c]
   14000b6c3:	lea    r9,[rbp+0x190]
   14000b6ca:	mov    QWORD PTR [rsp+0x30],r11
   14000b6cf:	lea    r8,[rip+0x3145a]        # 0x14003cb30
   14000b6d6:	lea    rcx,[rbp+0x990]
   14000b6dd:	mov    edx,r12d
   14000b6e0:	mov    DWORD PTR [rsp+0x28],esi
   14000b6e4:	mov    DWORD PTR [rsp+0x20],esi
   14000b6e8:	call   0x140013d5c
   14000b6ed:	lea    rcx,[rbp+0x990]
   14000b6f4:	call   QWORD PTR [rip+0x23906]        # 0x14002f000
   14000b6fa:	lea    rcx,[rbp+0x1190]
   14000b701:	call   QWORD PTR [rip+0x238f9]        # 0x14002f000
   14000b707:	mov    QWORD PTR [rip+0x48982],rax        # 0x140054090
   14000b70e:	jmp    0x14000b717
   14000b710:	mov    rax,QWORD PTR [rip+0x48979]        # 0x140054090
   14000b717:	test   rax,rax
   14000b71a:	je     0x14000b728
   14000b71c:	mov    rdx,rbx
   14000b71f:	mov    rcx,rax
   14000b722:	call   QWORD PTR [rip+0x238f0]        # 0x14002f018
   14000b728:	mov    rcx,QWORD PTR [rbp+0x1990]
   14000b72f:	xor    rcx,rsp
   14000b732:	call   0x140012670
   14000b737:	lea    r11,[rsp+0x1aa0]
   14000b73f:	mov    rbx,QWORD PTR [r11+0x28]
   14000b743:	mov    rsi,QWORD PTR [r11+0x30]
   14000b747:	mov    rsp,r11
   14000b74a:	pop    r12
   14000b74c:	pop    rdi
   14000b74d:	pop    rbp
   14000b74e:	ret    
   14000b74f:	int3   
   14000b750:	int3   
   14000b751:	int3   
   14000b752:	int3   
   14000b753:	int3   
   14000b754:	int3   
   14000b755:	int3   
   14000b756:	int3   
   14000b757:	int3   
   14000b758:	sub    rsp,0x28
   14000b75c:	mov    rcx,QWORD PTR [rip+0x4892d]        # 0x140054090
   14000b763:	test   rcx,rcx
   14000b766:	je     0x14000b776
   14000b768:	call   QWORD PTR [rip+0x238a2]        # 0x14002f010
   14000b76e:	and    QWORD PTR [rip+0x4891a],0x0        # 0x140054090
   14000b776:	add    rsp,0x28
   14000b77a:	ret    
   14000b77b:	int3   
   14000b77c:	int3   
   14000b77d:	int3   
   14000b77e:	int3   
   14000b77f:	int3   
   14000b780:	int3   
   14000b781:	int3   
   14000b782:	int3   
   14000b783:	int3   
   14000b784:	int3   
   14000b785:	int3   
   14000b786:	int3   
   14000b787:	int3   
   14000b788:	sub    rsp,0x28
   14000b78c:	mov    rax,QWORD PTR [rip+0x48905]        # 0x140054098
   14000b793:	test   rax,rax
   14000b796:	jne    0x14000b7b0
   14000b798:	lea    rcx,[rip+0x313a9]        # 0x14003cb48
   14000b79f:	call   0x14000b578
   14000b7a4:	mov    QWORD PTR [rip+0x488ed],rax        # 0x140054098
   14000b7ab:	test   rax,rax
   14000b7ae:	je     0x14000b7b2
   14000b7b0:	call   rax
   14000b7b2:	add    rsp,0x28
   14000b7b6:	ret    
   14000b7b7:	int3   
   14000b7b8:	int3   
   14000b7b9:	int3   
   14000b7ba:	int3   
   14000b7bb:	int3   
   14000b7bc:	int3   
   14000b7bd:	int3   
   14000b7be:	int3   
   14000b7bf:	int3   
   14000b7c0:	int3   
   14000b7c1:	int3   
   14000b7c2:	int3   
   14000b7c3:	int3   
   14000b7c4:	int3   
   14000b7c5:	int3   
   14000b7c6:	int3   
   14000b7c7:	int3   
   14000b7c8:	rex push rbx
   14000b7ca:	sub    rsp,0x20
   14000b7ce:	mov    rax,QWORD PTR [rip+0x488cb]        # 0x1400540a0
   14000b7d5:	mov    rbx,rcx
   14000b7d8:	test   rax,rax
   14000b7db:	jne    0x14000b7fb
   14000b7dd:	lea    rcx,[rip+0x31374]        # 0x14003cb58
   14000b7e4:	call   0x14000b578
   14000b7e9:	mov    QWORD PTR [rip+0x488b0],rax        # 0x1400540a0
   14000b7f0:	test   rax,rax
   14000b7f3:	jne    0x14000b7fb
   14000b7f5:	add    rsp,0x20
   14000b7f9:	pop    rbx
   14000b7fa:	ret    
   14000b7fb:	mov    rcx,rbx
   14000b7fe:	add    rsp,0x20
   14000b802:	pop    rbx
   14000b803:	rex.W jmp rax
   14000b806:	int3   
   14000b807:	int3   
   14000b808:	int3   
   14000b809:	int3   
   14000b80a:	int3   
   14000b80b:	int3   
   14000b80c:	int3   
   14000b80d:	int3   
   14000b80e:	int3   
   14000b80f:	int3   
   14000b810:	int3   
   14000b811:	int3   
   14000b812:	int3   
   14000b813:	int3   
   14000b814:	int3   
   14000b815:	int3   
   14000b816:	int3   
   14000b817:	int3   
   14000b818:	sub    rsp,0x28
   14000b81c:	mov    rax,QWORD PTR [rip+0x48885]        # 0x1400540a8
   14000b823:	test   rax,rax
   14000b826:	jne    0x14000b840
   14000b828:	lea    rcx,[rip+0x31339]        # 0x14003cb68
   14000b82f:	call   0x14000b578
   14000b834:	mov    QWORD PTR [rip+0x4886d],rax        # 0x1400540a8
   14000b83b:	test   rax,rax
   14000b83e:	je     0x14000b842
   14000b840:	call   rax
   14000b842:	add    rsp,0x28
   14000b846:	ret    
   14000b847:	int3   
   14000b848:	int3   
   14000b849:	int3   
   14000b84a:	int3   
   14000b84b:	int3   
   14000b84c:	int3   
   14000b84d:	int3   
   14000b84e:	int3   
   14000b84f:	int3   
   14000b850:	int3   
   14000b851:	int3   
   14000b852:	int3   
   14000b853:	int3   
   14000b854:	int3   
   14000b855:	int3   
   14000b856:	int3   
   14000b857:	int3   
   14000b858:	sub    rsp,0x28
   14000b85c:	call   0x14000b818
   14000b861:	xor    ecx,ecx
   14000b863:	call   0x140013c2c
   14000b868:	int3   
   14000b869:	int3   
   14000b86a:	int3   
   14000b86b:	int3   
   14000b86c:	int3   
   14000b86d:	int3   
   14000b86e:	int3   
   14000b86f:	int3   
   14000b870:	int3   
   14000b871:	int3   
   14000b872:	int3   
   14000b873:	int3   
   14000b874:	int3   
   14000b875:	int3   
   14000b876:	int3   
   14000b877:	int3   
   14000b878:	xor    eax,eax
   14000b87a:	ret    
   14000b87b:	int3   
   14000b87c:	int3   
   14000b87d:	int3   
   14000b87e:	int3   
   14000b87f:	int3   
   14000b880:	int3   
   14000b881:	int3   
   14000b882:	int3   
   14000b883:	int3   
   14000b884:	int3   
   14000b885:	int3   
   14000b886:	int3   
   14000b887:	int3   
   14000b888:	mov    QWORD PTR [rsp+0x8],rbx
   14000b88d:	push   rdi
   14000b88e:	sub    rsp,0x20
   14000b892:	mov    rdi,rcx
   14000b895:	mov    ecx,0xb
   14000b89a:	call   0x14000bd98
   14000b89f:	mov    rbx,rax
   14000b8a2:	call   0x140014c3c
   14000b8a7:	mov    rdx,rbx
   14000b8aa:	lea    rcx,[rax+0x60]
   14000b8ae:	call   0x1400155dc
   14000b8b3:	call   0x14001583c
   14000b8b8:	cmp    DWORD PTR [rax],0x0
   14000b8bb:	je     0x14000b8c7
   14000b8bd:	mov    rcx,rdi
   14000b8c0:	call   0x140015670
   14000b8c5:	jmp    0x14000b8df
   14000b8c7:	call   0x140014c3c
   14000b8cc:	lea    rdx,[rip+0x312a5]        # 0x14003cb78
   14000b8d3:	mov    r8,rdi
   14000b8d6:	lea    rcx,[rax+0x60]
   14000b8da:	call   0x1400155dc
   14000b8df:	call   0x14000b818
   14000b8e4:	xor    ecx,ecx
   14000b8e6:	call   0x140013c2c
   14000b8eb:	int3   
   14000b8ec:	int3   
   14000b8ed:	int3   
   14000b8ee:	int3   
   14000b8ef:	int3   
   14000b8f0:	int3   
   14000b8f1:	int3   
   14000b8f2:	int3   
   14000b8f3:	int3   
   14000b8f4:	int3   
   14000b8f5:	int3   
   14000b8f6:	int3   
   14000b8f7:	int3   
   14000b8f8:	sub    rsp,0x28
   14000b8fc:	call   0x14000b818
   14000b901:	xor    ecx,ecx
   14000b903:	call   0x140013c2c
   14000b908:	int3   
   14000b909:	int3   
   14000b90a:	int3   
   14000b90b:	int3   
   14000b90c:	int3   
   14000b90d:	int3   
   14000b90e:	int3   
   14000b90f:	int3   
   14000b910:	int3   
   14000b911:	int3   
   14000b912:	int3   
   14000b913:	int3   
   14000b914:	int3   
   14000b915:	int3   
   14000b916:	int3   
   14000b917:	int3   
   14000b918:	rex push rbx
   14000b91a:	sub    rsp,0x40
   14000b91e:	mov    rax,QWORD PTR [rip+0x3400b]        # 0x14003f930
   14000b925:	xor    rax,rsp
   14000b928:	mov    QWORD PTR [rsp+0x38],rax
   14000b92d:	cmp    edx,0x2
   14000b930:	je     0x14000b9d7
   14000b936:	cmp    edx,0x401
   14000b93c:	je     0x14000b957
   14000b93e:	call   QWORD PTR [rip+0x23a7c]        # 0x14002f3c0
   14000b944:	mov    rcx,QWORD PTR [rsp+0x38]
   14000b949:	xor    rcx,rsp
   14000b94c:	call   0x140012670
   14000b951:	add    rsp,0x40
   14000b955:	pop    rbx
   14000b956:	ret    
   14000b957:	mov    rcx,QWORD PTR [rip+0x4872a]        # 0x140054088
   14000b95e:	lea    r8,[rsp+0x24]
   14000b963:	lea    rdx,[rsp+0x28]
   14000b968:	mov    DWORD PTR [rsp+0x24],0x10
   14000b970:	call   QWORD PTR [rip+0x23ae2]        # 0x14002f458
   14000b976:	mov    rbx,rax
   14000b979:	cmp    rax,0xffffffffffffffff
   14000b97d:	jne    0x14000b990
   14000b97f:	lea    ecx,[rax+0x7]
   14000b982:	call   0x14000bd98
   14000b987:	mov    rcx,rax
   14000b98a:	call   0x14000b888
   14000b98f:	int3   
   14000b990:	xor    r9d,r9d
   14000b993:	lea    rdx,[rsp+0x20]
   14000b998:	mov    rcx,rax
   14000b99b:	lea    r8d,[r9+0x1]
   14000b99f:	call   QWORD PTR [rip+0x23aab]        # 0x14002f450
   14000b9a5:	cmp    eax,0x1
   14000b9a8:	jne    0x14000b9d7
   14000b9aa:	cmp    BYTE PTR [rsp+0x20],0x5a
   14000b9af:	je     0x14000b9c2
   14000b9b1:	lea    ecx,[rax+0x11]
   14000b9b4:	call   0x14000bd98
   14000b9b9:	mov    rcx,rax
   14000b9bc:	call   0x14000b888
   14000b9c1:	int3   
   14000b9c2:	mov    rcx,rbx
   14000b9c5:	call   0x14000a0cc
   14000b9ca:	call   0x14000b818
   14000b9cf:	xor    ecx,ecx
   14000b9d1:	call   0x140013c2c
   14000b9d6:	int3   
   14000b9d7:	call   0x14000b818
   14000b9dc:	xor    ecx,ecx
   14000b9de:	call   0x140013c2c
   14000b9e3:	int3   
   14000b9e4:	int3   
   14000b9e5:	int3   
   14000b9e6:	int3   
   14000b9e7:	int3   
   14000b9e8:	int3   
   14000b9e9:	int3   
   14000b9ea:	int3   
   14000b9eb:	int3   
   14000b9ec:	int3   
   14000b9ed:	int3   
   14000b9ee:	int3   
   14000b9ef:	int3   
   14000b9f0:	int3   
   14000b9f1:	int3   
   14000b9f2:	int3   
   14000b9f3:	int3   
   14000b9f4:	int3   
   14000b9f5:	int3   
   14000b9f6:	int3   
   14000b9f7:	int3   
   14000b9f8:	mov    QWORD PTR [rsp+0x18],rbx
   14000b9fd:	push   rbp
   14000b9fe:	push   rsi
   14000b9ff:	push   rdi
   14000ba00:	lea    rbp,[rsp-0x47]
   14000ba05:	sub    rsp,0x100
   14000ba0c:	mov    rax,QWORD PTR [rip+0x33f1d]        # 0x14003f930
   14000ba13:	xor    rax,rsp
   14000ba16:	mov    QWORD PTR [rbp+0x3f],rax
   14000ba1a:	and    DWORD PTR [rbp-0x49],0x0
   14000ba1e:	mov    rdi,rdx
   14000ba21:	xor    edx,edx
   14000ba23:	mov    ebx,ecx
   14000ba25:	lea    rcx,[rbp-0x41]
   14000ba29:	lea    r8d,[rdx+0x40]
   14000ba2d:	call   0x140012fb0
   14000ba32:	xor    ecx,ecx
   14000ba34:	call   QWORD PTR [rip+0x235ce]        # 0x14002f008
   14000ba3a:	lea    rcx,[rbp-0x59]
   14000ba3e:	mov    rsi,rax
   14000ba41:	call   0x140008d18
   14000ba46:	mov    QWORD PTR [rip+0x4863b],rax        # 0x140054088
   14000ba4d:	cmp    rax,0xffffffffffffffff
   14000ba51:	jne    0x14000ba64
   14000ba53:	lea    ecx,[rax+0x6]
   14000ba56:	call   0x14000bd98
   14000ba5b:	mov    rcx,rax
   14000ba5e:	call   0x14000b888
   14000ba63:	int3   
   14000ba64:	test   ebx,ebx
   14000ba66:	jg     0x14000ba7b
   14000ba68:	mov    ecx,0x13
   14000ba6d:	call   0x14000bd98
   14000ba72:	mov    rcx,rax
   14000ba75:	call   0x14000b888
   14000ba7a:	int3   
   14000ba7b:	mov    ecx,ebx
   14000ba7d:	call   0x140008f08
   14000ba82:	mov    rbx,rax
   14000ba85:	cmp    rax,0xffffffffffffffff
   14000ba89:	jne    0x14000ba9c
   14000ba8b:	lea    ecx,[rax+0x12]
   14000ba8e:	call   0x14000bd98
   14000ba93:	mov    rcx,rax
   14000ba96:	call   0x14000b888
   14000ba9b:	int3   
   14000ba9c:	mov    eax,DWORD PTR [rbp-0x59]
   14000ba9f:	or     r8,0xffffffffffffffff
   14000baa3:	lea    r9,[rip+0x31062]        # 0x14003cb0c
   14000baaa:	lea    edx,[r8+0x7]
   14000baae:	lea    rcx,[rbp+0x37]
   14000bab2:	mov    DWORD PTR [rsp+0x20],eax
   14000bab6:	call   0x1400167c4
   14000babb:	xor    r9d,r9d
   14000babe:	lea    rdx,[rbp+0x37]
   14000bac2:	lea    r8d,[r9+0x6]
   14000bac6:	mov    rcx,rbx
   14000bac9:	call   QWORD PTR [rip+0x239a9]        # 0x14002f478
   14000bacf:	cmp    eax,0x6
   14000bad2:	je     0x14000bae7
   14000bad4:	mov    ecx,0x14
   14000bad9:	call   0x14000bd98
   14000bade:	mov    rcx,rax
   14000bae1:	call   0x14000b888
   14000bae6:	int3   
   14000bae7:	mov    rcx,rbx
   14000baea:	call   0x14000a0cc
   14000baef:	test   rdi,rdi
   14000baf2:	je     0x14000bc07
   14000baf8:	and    DWORD PTR [rbp-0x49],0x0
   14000bafc:	lea    rax,[rip+0xfffffffffffffe15]        # 0x14000b918
   14000bb03:	mov    edx,0x7f00
   14000bb08:	xor    ecx,ecx
   14000bb0a:	mov    QWORD PTR [rbp-0x31],rsi
   14000bb0e:	mov    QWORD PTR [rbp-0x41],rax
   14000bb12:	call   QWORD PTR [rip+0x238a0]        # 0x14002f3b8
   14000bb18:	lea    rcx,[rbp-0x49]
   14000bb1c:	mov    QWORD PTR [rbp-0x19],0x6
   14000bb24:	mov    QWORD PTR [rbp-0x21],rax
   14000bb28:	lea    rax,[rip+0x31059]        # 0x14003cb88
   14000bb2f:	mov    QWORD PTR [rbp-0x9],rax
   14000bb33:	call   QWORD PTR [rip+0x238b7]        # 0x14002f3f0
   14000bb39:	and    QWORD PTR [rsp+0x58],0x0
   14000bb3f:	mov    QWORD PTR [rsp+0x50],rsi
   14000bb44:	and    QWORD PTR [rsp+0x48],0x0
   14000bb4a:	and    QWORD PTR [rsp+0x40],0x0
   14000bb50:	mov    eax,0x80000000
   14000bb55:	lea    r8,[rip+0x31044]        # 0x14003cba0
   14000bb5c:	lea    rdx,[rip+0x31055]        # 0x14003cbb8
   14000bb63:	mov    DWORD PTR [rsp+0x38],eax
   14000bb67:	mov    DWORD PTR [rsp+0x30],eax
   14000bb6b:	mov    DWORD PTR [rsp+0x28],eax
   14000bb6f:	mov    r9d,0xcf0000
   14000bb75:	xor    ecx,ecx
   14000bb77:	mov    DWORD PTR [rsp+0x20],eax
   14000bb7b:	call   QWORD PTR [rip+0x23867]        # 0x14002f3e8
   14000bb81:	lea    r9,[rip+0xfffffffffffffd70]        # 0x14000b8f8
   14000bb88:	xor    edx,edx
   14000bb8a:	mov    rcx,rax
   14000bb8d:	mov    r8d,0x4e20
   14000bb93:	mov    rbx,rax
   14000bb96:	call   QWORD PTR [rip+0x23844]        # 0x14002f3e0
   14000bb9c:	test   rax,rax
   14000bb9f:	jne    0x14000bbb2
   14000bba1:	lea    ecx,[rax+0x15]
   14000bba4:	call   0x14000bd98
   14000bba9:	mov    rcx,rax
   14000bbac:	call   0x14000b888
   14000bbb1:	int3   
   14000bbb2:	call   0x14000b788
   14000bbb7:	mov    rcx,rdi
   14000bbba:	call   0x14000b7c8
   14000bbbf:	mov    rcx,QWORD PTR [rip+0x484c2]        # 0x140054088
   14000bbc6:	mov    r9d,0x8
   14000bbcc:	mov    r8d,0x401
   14000bbd2:	mov    rdx,rbx
   14000bbd5:	call   QWORD PTR [rip+0x2383d]        # 0x14002f418
   14000bbdb:	jmp    0x14000bbf1
   14000bbdd:	lea    rcx,[rbp+0x7]
   14000bbe1:	call   QWORD PTR [rip+0x237f1]        # 0x14002f3d8
   14000bbe7:	lea    rcx,[rbp+0x7]
   14000bbeb:	call   QWORD PTR [rip+0x237df]        # 0x14002f3d0
   14000bbf1:	lea    rcx,[rbp+0x7]
   14000bbf5:	xor    r9d,r9d
   14000bbf8:	xor    r8d,r8d
   14000bbfb:	xor    edx,edx
   14000bbfd:	call   QWORD PTR [rip+0x237c5]        # 0x14002f3c8
   14000bc03:	test   eax,eax
   14000bc05:	jne    0x14000bbdd
   14000bc07:	xor    eax,eax
   14000bc09:	mov    rcx,QWORD PTR [rbp+0x3f]
   14000bc0d:	xor    rcx,rsp
   14000bc10:	call   0x140012670
   14000bc15:	mov    rbx,QWORD PTR [rsp+0x130]
   14000bc1d:	add    rsp,0x100
   14000bc24:	pop    rdi
   14000bc25:	pop    rsi
   14000bc26:	pop    rbp
   14000bc27:	ret    
   14000bc28:	mov    QWORD PTR [rsp+0x10],rbx
   14000bc2d:	mov    QWORD PTR [rsp+0x18],rbp
   14000bc32:	push   rdi
   14000bc33:	sub    rsp,0x850
   14000bc3a:	mov    rax,QWORD PTR [rip+0x33cef]        # 0x14003f930
   14000bc41:	xor    rax,rsp
   14000bc44:	mov    QWORD PTR [rsp+0x840],rax
   14000bc4c:	mov    rbx,rcx
   14000bc4f:	call   0x140009588
   14000bc54:	mov    ebp,0x400
   14000bc59:	mov    r9,rax
   14000bc5c:	lea    rax,[rip+0x31a75]        # 0x14003d6d8
   14000bc63:	lea    r8,[rip+0x32566]        # 0x14003e1d0
   14000bc6a:	mov    QWORD PTR [rsp+0x38],rax
   14000bc6f:	lea    rax,[rip+0x32542]        # 0x14003e1b8
   14000bc76:	mov    QWORD PTR [rsp+0x30],rbx
   14000bc7b:	mov    QWORD PTR [rsp+0x28],rax
   14000bc80:	lea    rcx,[rsp+0x40]
   14000bc85:	mov    edx,ebp
   14000bc87:	mov    DWORD PTR [rsp+0x20],0x5c
   14000bc8f:	call   0x14000a30c
   14000bc94:	lea    rcx,[rsp+0x40]
   14000bc99:	call   0x140008538
   14000bc9e:	xor    edi,edi
   14000bca0:	mov    QWORD PTR [rip+0x48411],rax        # 0x1400540b8
   14000bca7:	test   rax,rax
   14000bcaa:	jne    0x14000bd00
   14000bcac:	lea    edx,[rax+0x5f]
   14000bcaf:	mov    rcx,rbx
   14000bcb2:	call   0x1400149dc
   14000bcb7:	test   rax,rax
   14000bcba:	je     0x14000bcbf
   14000bcbc:	mov    WORD PTR [rax],di
   14000bcbf:	call   0x140009588
   14000bcc4:	lea    r8,[rip+0x3254d]        # 0x14003e218
   14000bccb:	lea    rcx,[rsp+0x40]
   14000bcd0:	mov    r9,rax
   14000bcd3:	lea    rax,[rip+0x3250e]        # 0x14003e1e8
   14000bcda:	mov    rdx,rbp
   14000bcdd:	mov    QWORD PTR [rsp+0x38],rax
   14000bce2:	lea    rax,[rip+0x32517]        # 0x14003e200
   14000bce9:	mov    QWORD PTR [rsp+0x30],rbx
   14000bcee:	mov    QWORD PTR [rsp+0x28],rax
   14000bcf3:	mov    DWORD PTR [rsp+0x20],0x5c
   14000bcfb:	call   0x14000a30c
   14000bd00:	lea    rcx,[rsp+0x40]
   14000bd05:	call   0x140008538
   14000bd0a:	mov    QWORD PTR [rip+0x483a7],rax        # 0x1400540b8
   14000bd11:	test   rax,rax
   14000bd14:	jne    0x14000bd68
   14000bd16:	call   0x140009588
   14000bd1b:	lea    r8,[rip+0x32536]        # 0x14003e258
   14000bd22:	lea    rcx,[rsp+0x40]
   14000bd27:	mov    r9,rax
   14000bd2a:	lea    rax,[rip+0x324ff]        # 0x14003e230
   14000bd31:	mov    rdx,rbp
   14000bd34:	mov    QWORD PTR [rsp+0x28],rax
   14000bd39:	mov    DWORD PTR [rsp+0x20],0x5c
   14000bd41:	call   0x14000a30c
   14000bd46:	lea    rcx,[rsp+0x40]
   14000bd4b:	call   0x140008538
   14000bd50:	mov    QWORD PTR [rip+0x48361],rax        # 0x1400540b8
   14000bd57:	test   rax,rax
   14000bd5a:	jne    0x14000bd68
   14000bd5c:	lea    rcx,[rip+0x32505]        # 0x14003e268
   14000bd63:	call   0x14000c328
   14000bd68:	mov    rcx,QWORD PTR [rsp+0x840]
   14000bd70:	xor    rcx,rsp
   14000bd73:	call   0x140012670
   14000bd78:	lea    r11,[rsp+0x850]
   14000bd80:	mov    rbx,QWORD PTR [r11+0x18]
   14000bd84:	mov    rbp,QWORD PTR [r11+0x20]
   14000bd88:	mov    rsp,r11
   14000bd8b:	pop    rdi
   14000bd8c:	ret    
   14000bd8d:	int3   
   14000bd8e:	int3   
   14000bd8f:	int3   
   14000bd90:	int3   
   14000bd91:	int3   
   14000bd92:	int3   
   14000bd93:	int3   
   14000bd94:	int3   
   14000bd95:	int3   
   14000bd96:	int3   
   14000bd97:	int3   
   14000bd98:	mov    QWORD PTR [rsp+0x8],rbx
   14000bd9d:	push   rdi
   14000bd9e:	sub    rsp,0x20
   14000bda2:	mov    rdi,QWORD PTR [rip+0x321bf]        # 0x14003df68
   14000bda9:	mov    rbx,QWORD PTR [rip+0x321c0]        # 0x14003df70
   14000bdb0:	lea    r9,[rip+0x321a9]        # 0x14003df60
   14000bdb7:	mov    rax,r9
   14000bdba:	xor    edx,edx
   14000bdbc:	cmp    DWORD PTR [rax],ecx
   14000bdbe:	je     0x14000bdd4
   14000bdc0:	lea    r8,[rip+0x323f1]        # 0x14003e1b8
   14000bdc7:	add    rax,0x18
   14000bdcb:	inc    edx
   14000bdcd:	cmp    rax,r8
   14000bdd0:	jl     0x14000bdbc
   14000bdd2:	jmp    0x14000bde5
   14000bdd4:	movsxd rax,edx
   14000bdd7:	lea    rcx,[rax+rax*2]
   14000bddb:	mov    rdi,QWORD PTR [r9+rcx*8+0x8]
   14000bde0:	mov    rbx,QWORD PTR [r9+rcx*8+0x10]
   14000bde5:	cmp    DWORD PTR [rip+0x482d8],0x0        # 0x1400540c4
   14000bdec:	je     0x14000bdf3
   14000bdee:	mov    rax,rbx
   14000bdf1:	jmp    0x14000be3a
   14000bdf3:	cmp    DWORD PTR [rip+0x482c6],0x0        # 0x1400540c0
   14000bdfa:	mov    DWORD PTR [rip+0x482c0],0x1        # 0x1400540c4
   14000be04:	jne    0x14000be1d
   14000be06:	call   0x14000a3bc
   14000be0b:	mov    rcx,rax
   14000be0e:	call   0x14000bc28
   14000be13:	mov    DWORD PTR [rip+0x482a3],0x1        # 0x1400540c0
   14000be1d:	mov    rcx,QWORD PTR [rip+0x48294]        # 0x1400540b8
   14000be24:	mov    rdx,rdi
   14000be27:	call   0x1400082a8
   14000be2c:	test   rax,rax
   14000be2f:	cmove  rax,rbx
   14000be33:	and    DWORD PTR [rip+0x4828a],0x0        # 0x1400540c4
   14000be3a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000be3f:	add    rsp,0x20
   14000be43:	pop    rdi
   14000be44:	ret    
   14000be45:	int3   
   14000be46:	int3   
   14000be47:	int3   
   14000be48:	mov    QWORD PTR [rsp+0x8],rbx
   14000be4d:	push   rdi
   14000be4e:	sub    rsp,0x40
   14000be52:	mov    rdi,rdx
   14000be55:	call   0x14000a1cc
   14000be5a:	mov    rbx,rax
   14000be5d:	call   0x140009588
   14000be62:	mov    QWORD PTR [rsp+0x30],rbx
   14000be67:	mov    r9,rax
   14000be6a:	lea    rax,[rip+0x3242f]        # 0x14003e2a0
   14000be71:	lea    rbx,[rip+0x48258]        # 0x1400540d0
   14000be78:	mov    QWORD PTR [rsp+0x28],rax
   14000be7d:	lea    r8,[rip+0x3242c]        # 0x14003e2b0
   14000be84:	mov    edx,0x400
   14000be89:	mov    rcx,rbx
   14000be8c:	mov    DWORD PTR [rsp+0x20],0x5c
   14000be94:	call   0x14000a30c
   14000be99:	mov    QWORD PTR [rdi],rbx
   14000be9c:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bea1:	add    rsp,0x40
   14000bea5:	pop    rdi
   14000bea6:	ret    
   14000bea7:	int3   
   14000bea8:	int3   
   14000bea9:	int3   
   14000beaa:	int3   
   14000beab:	int3   
   14000beac:	int3   
   14000bead:	int3   
   14000beae:	int3   
   14000beaf:	int3   
   14000beb0:	int3   
   14000beb1:	int3   
   14000beb2:	int3   
   14000beb3:	int3   
   14000beb4:	int3   
   14000beb5:	int3   
   14000beb6:	int3   
   14000beb7:	int3   
   14000beb8:	mov    QWORD PTR [rsp+0x8],rbx
   14000bebd:	push   rdi
   14000bebe:	sub    rsp,0x20
   14000bec2:	mov    rbx,rcx
   14000bec5:	mov    rcx,QWORD PTR [rcx+0x28]
   14000bec9:	mov    rdi,rdx
   14000becc:	test   rcx,rcx
   14000becf:	jne    0x14000bed5
   14000bed1:	mov    rcx,QWORD PTR [rbx+0x20]
   14000bed5:	call   0x140005180
   14000beda:	mov    QWORD PTR [rdi],rax
   14000bedd:	test   rax,rax
   14000bee0:	jne    0x14000bef2
   14000bee2:	cmp    DWORD PTR [rbx+0x14],0x2
   14000bee6:	je     0x14000bef2
   14000bee8:	mov    rdx,rdi
   14000beeb:	xor    ecx,ecx
   14000beed:	call   0x14000be48
   14000bef2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000bef7:	add    rsp,0x20
   14000befb:	pop    rdi
   14000befc:	ret    
   14000befd:	int3   
   14000befe:	int3   
   14000beff:	int3   
   14000bf00:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf05:	push   rdi
   14000bf06:	sub    rsp,0x30
   14000bf0a:	mov    rbx,rdx
   14000bf0d:	call   0x140009588
   14000bf12:	lea    rdi,[rip+0x489b7]        # 0x1400548d0
   14000bf19:	lea    r8,[rip+0x323a8]        # 0x14003e2c8
   14000bf20:	mov    edx,0x400
   14000bf25:	mov    r9,rax
   14000bf28:	mov    rcx,rdi
   14000bf2b:	mov    DWORD PTR [rsp+0x20],0x5c
   14000bf33:	call   0x14000a30c
   14000bf38:	mov    QWORD PTR [rbx],rdi
   14000bf3b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bf40:	add    rsp,0x30
   14000bf44:	pop    rdi
   14000bf45:	ret    
   14000bf46:	int3   
   14000bf47:	int3   
   14000bf48:	int3   
   14000bf49:	int3   
   14000bf4a:	int3   
   14000bf4b:	int3   
   14000bf4c:	int3   
   14000bf4d:	int3   
   14000bf4e:	int3   
   14000bf4f:	int3   
   14000bf50:	rex push rbx
   14000bf52:	sub    rsp,0x20
   14000bf56:	mov    rax,rcx
   14000bf59:	mov    rcx,QWORD PTR [rcx+0x28]
   14000bf5d:	mov    rbx,rdx
   14000bf60:	test   rcx,rcx
   14000bf63:	jne    0x14000bf69
   14000bf65:	mov    rcx,QWORD PTR [rax+0x20]
   14000bf69:	call   0x1400051a0
   14000bf6e:	mov    QWORD PTR [rbx],rax
   14000bf71:	test   rax,rax
   14000bf74:	jne    0x14000bf80
   14000bf76:	mov    rdx,rbx
   14000bf79:	xor    ecx,ecx
   14000bf7b:	call   0x14000bf00
   14000bf80:	add    rsp,0x20
   14000bf84:	pop    rbx
   14000bf85:	ret    
   14000bf86:	int3   
   14000bf87:	int3   
   14000bf88:	mov    rax,rsp
   14000bf8b:	mov    QWORD PTR [rax+0x8],rbx
   14000bf8f:	mov    QWORD PTR [rax+0x10],rbp
   14000bf93:	mov    QWORD PTR [rax+0x18],rsi
   14000bf97:	mov    QWORD PTR [rax+0x20],rdi
   14000bf9b:	push   r12
   14000bf9d:	push   r13
   14000bf9f:	push   r15
   14000bfa1:	sub    rsp,0x20
   14000bfa5:	mov    r13d,0x1
   14000bfab:	mov    rbx,rdx
   14000bfae:	mov    rdi,rcx
   14000bfb1:	cmp    DWORD PTR [rip+0x49318],r13d        # 0x1400552d0
   14000bfb8:	lea    r15,[rip+0x49111]        # 0x1400550d0
   14000bfbf:	je     0x14000bfe8
   14000bfc1:	mov    DWORD PTR [rip+0x49308],r13d        # 0x1400552d0
   14000bfc8:	xor    r9d,r9d
   14000bfcb:	lea    r10,[rip+0x3232e]        # 0x14003e300
   14000bfd2:	movzx  eax,WORD PTR [r10]
   14000bfd6:	add    r10,0x2
   14000bfda:	mov    WORD PTR [r15+rax*2],r9w
   14000bfdf:	add    r9d,r13d
   14000bfe2:	cmp    r9d,0x40
   14000bfe6:	jl     0x14000bfd2
   14000bfe8:	test   dl,0x3
   14000bfeb:	je     0x14000bff4
   14000bfed:	xor    eax,eax
   14000bfef:	jmp    0x14000c126
   14000bff4:	mov    rax,rdx
   14000bff7:	shr    rax,0x2
   14000bffb:	lea    rax,[rax+rax*2]
   14000bfff:	mov    QWORD PTR [r8],rax
   14000c002:	cmp    WORD PTR [rcx+rdx*2-0x2],0x3d
   14000c008:	jne    0x14000c010
   14000c00a:	dec    rax
   14000c00d:	mov    QWORD PTR [r8],rax
   14000c010:	cmp    WORD PTR [rcx+rdx*2-0x4],0x3d
   14000c016:	jne    0x14000c01b
   14000c018:	dec    QWORD PTR [r8]
   14000c01b:	mov    rsi,QWORD PTR [r8]
   14000c01e:	lea    rcx,[rsi+rsi*1+0x2]
   14000c023:	call   0x140013298
   14000c028:	mov    r11,rax
   14000c02b:	test   rax,rax
   14000c02e:	je     0x14000bfed
   14000c030:	xor    ecx,ecx
   14000c032:	xor    edx,edx
   14000c034:	test   rbx,rbx
   14000c037:	je     0x14000c123
   14000c03d:	mov    r8,rax
   14000c040:	movsxd rax,ecx
   14000c043:	cmp    WORD PTR [rdi+rax*2],0x3d
   14000c048:	jne    0x14000c04f
   14000c04a:	xor    r9d,r9d
   14000c04d:	jmp    0x14000c058
   14000c04f:	movzx  eax,WORD PTR [rdi+rax*2]
   14000c053:	movzx  r9d,WORD PTR [r15+rax*2]
   14000c058:	add    ecx,r13d
   14000c05b:	movsxd rax,ecx
   14000c05e:	cmp    WORD PTR [rdi+rax*2],0x3d
   14000c063:	jne    0x14000c06a
   14000c065:	xor    r12d,r12d
   14000c068:	jmp    0x14000c073
   14000c06a:	movzx  eax,WORD PTR [rdi+rax*2]
   14000c06e:	movzx  r12d,WORD PTR [r15+rax*2]
   14000c073:	add    ecx,r13d
   14000c076:	movsxd rax,ecx
   14000c079:	cmp    WORD PTR [rdi+rax*2],0x3d
   14000c07e:	jne    0x14000c084
   14000c080:	xor    ebp,ebp
   14000c082:	jmp    0x14000c08d
   14000c084:	movzx  eax,WORD PTR [rdi+rax*2]
   14000c088:	movzx  ebp,WORD PTR [r15+rax*2]
   14000c08d:	add    ecx,r13d
   14000c090:	movsxd rax,ecx
   14000c093:	cmp    WORD PTR [rdi+rax*2],0x3d
   14000c098:	jne    0x14000c09f
   14000c09a:	xor    r10d,r10d
   14000c09d:	jmp    0x14000c0a8
   14000c09f:	movzx  eax,WORD PTR [rdi+rax*2]
   14000c0a3:	movzx  r10d,WORD PTR [r15+rax*2]
   14000c0a8:	shl    r9d,0x6
   14000c0ac:	movsxd rax,edx
   14000c0af:	add    ecx,r13d
   14000c0b2:	add    r9d,r12d
   14000c0b5:	shl    r9d,0x6
   14000c0b9:	add    r9d,ebp
   14000c0bc:	shl    r9d,0x6
   14000c0c0:	add    r9d,r10d
   14000c0c3:	mov    r10d,0xff
   14000c0c9:	cmp    rax,rsi
   14000c0cc:	jae    0x14000c0e3
   14000c0ce:	mov    eax,r9d
   14000c0d1:	add    edx,r13d
   14000c0d4:	shr    eax,0x10
   14000c0d7:	and    ax,r10w
   14000c0db:	mov    WORD PTR [r8],ax
   14000c0df:	add    r8,0x2
   14000c0e3:	movsxd rax,edx
   14000c0e6:	cmp    rax,rsi
   14000c0e9:	jae    0x14000c100
   14000c0eb:	mov    eax,r9d
   14000c0ee:	add    edx,r13d
   14000c0f1:	shr    eax,0x8
   14000c0f4:	and    ax,r10w
   14000c0f8:	mov    WORD PTR [r8],ax
   14000c0fc:	add    r8,0x2
   14000c100:	movsxd rax,edx
   14000c103:	cmp    rax,rsi
   14000c106:	jae    0x14000c117
   14000c108:	and    r9w,r10w
   14000c10c:	add    edx,r13d
   14000c10f:	mov    WORD PTR [r8],r9w
   14000c113:	add    r8,0x2
   14000c117:	movsxd rax,ecx
   14000c11a:	cmp    rax,rbx
   14000c11d:	jb     0x14000c040
   14000c123:	mov    rax,r11
   14000c126:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c12b:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c130:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c135:	mov    rdi,QWORD PTR [rsp+0x58]
   14000c13a:	add    rsp,0x20
   14000c13e:	pop    r15
   14000c140:	pop    r13
   14000c142:	pop    r12
   14000c144:	ret    
   14000c145:	int3   
   14000c146:	int3   
   14000c147:	int3   
   14000c148:	sub    rsp,0x68
   14000c14c:	mov    rax,QWORD PTR [rip+0x337dd]        # 0x14003f930
   14000c153:	xor    rax,rsp
   14000c156:	mov    QWORD PTR [rsp+0x50],rax
   14000c15b:	lea    rdx,[rsp+0x20]
   14000c160:	call   0x1400121e4
   14000c165:	or     ecx,0xffffffff
   14000c168:	test   eax,eax
   14000c16a:	cmove  ecx,DWORD PTR [rsp+0x34]
   14000c16f:	mov    eax,ecx
   14000c171:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c176:	xor    rcx,rsp
   14000c179:	call   0x140012670
   14000c17e:	add    rsp,0x68
   14000c182:	ret    
   14000c183:	int3   
   14000c184:	int3   
   14000c185:	int3   
   14000c186:	int3   
   14000c187:	int3   
   14000c188:	int3   
   14000c189:	int3   
   14000c18a:	int3   
   14000c18b:	int3   
   14000c18c:	int3   
   14000c18d:	int3   
   14000c18e:	int3   
   14000c18f:	int3   
   14000c190:	int3   
   14000c191:	int3   
   14000c192:	int3   
   14000c193:	int3   
   14000c194:	int3   
   14000c195:	int3   
   14000c196:	int3   
   14000c197:	int3   
   14000c198:	mov    QWORD PTR [rsp+0x10],rbx
   14000c19d:	mov    QWORD PTR [rsp+0x18],rsi
   14000c1a2:	push   rdi
   14000c1a3:	sub    rsp,0x30
   14000c1a7:	and    QWORD PTR [rsp+0x40],0x0
   14000c1ad:	xor    eax,eax
   14000c1af:	mov    rbx,rcx
   14000c1b2:	test   rcx,rcx
   14000c1b5:	je     0x14000c1f7
   14000c1b7:	or     rcx,0xffffffffffffffff
   14000c1bb:	mov    rdi,rbx
   14000c1be:	lea    edx,[rax+0x2]
   14000c1c1:	repnz scas ax,WORD PTR es:[rdi]
   14000c1c4:	not    rcx
   14000c1c7:	and    ecx,ecx
   14000c1c9:	movsxd rdi,ecx
   14000c1cc:	mov    rcx,rdi
   14000c1cf:	call   0x140012bd4
   14000c1d4:	mov    rsi,rax
   14000c1d7:	test   rax,rax
   14000c1da:	je     0x14000c1f7
   14000c1dc:	lea    rcx,[rsp+0x40]
   14000c1e1:	mov    r9,rbx
   14000c1e4:	mov    r8,rdi
   14000c1e7:	mov    rdx,rax
   14000c1ea:	mov    QWORD PTR [rsp+0x20],rdi
   14000c1ef:	call   0x140012bb4
   14000c1f4:	mov    rax,rsi
   14000c1f7:	mov    rbx,QWORD PTR [rsp+0x48]
   14000c1fc:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c201:	add    rsp,0x30
   14000c205:	pop    rdi
   14000c206:	ret    
   14000c207:	int3   
   14000c208:	int3   
   14000c209:	int3   
   14000c20a:	int3   
   14000c20b:	int3   
   14000c20c:	int3   
   14000c20d:	int3   
   14000c20e:	int3   
   14000c20f:	int3   
   14000c210:	int3   
   14000c211:	int3   
   14000c212:	int3   
   14000c213:	int3   
   14000c214:	int3   
   14000c215:	int3   
   14000c216:	int3   
   14000c217:	int3   
   14000c218:	mov    QWORD PTR [rsp+0x8],rbx
   14000c21d:	mov    QWORD PTR [rsp+0x10],rsi
   14000c222:	push   rdi
   14000c223:	sub    rsp,0x20
   14000c227:	xor    eax,eax
   14000c229:	mov    rbx,rcx
   14000c22c:	test   rcx,rcx
   14000c22f:	je     0x14000c26a
   14000c231:	or     rcx,0xffffffffffffffff
   14000c235:	lea    edx,[rax+0x1]
   14000c238:	mov    rdi,rbx
   14000c23b:	repnz scas al,BYTE PTR es:[rdi]
   14000c23d:	not    rcx
   14000c240:	sub    rcx,rdx
   14000c243:	lea    esi,[rdx+rcx*1]
   14000c246:	lea    eax,[rsi+rsi*1]
   14000c249:	movsxd rcx,eax
   14000c24c:	call   0x140012bd4
   14000c251:	mov    rdi,rax
   14000c254:	test   rax,rax
   14000c257:	je     0x14000c26a
   14000c259:	movsxd r8,esi
   14000c25c:	mov    rdx,rbx
   14000c25f:	mov    rcx,rax
   14000c262:	call   0x14001443c
   14000c267:	mov    rax,rdi
   14000c26a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c26f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c274:	add    rsp,0x20
   14000c278:	pop    rdi
   14000c279:	ret    
   14000c27a:	int3   
   14000c27b:	int3   
   14000c27c:	int3   
   14000c27d:	int3   
   14000c27e:	int3   
   14000c27f:	int3   
   14000c280:	int3   
   14000c281:	int3   
   14000c282:	int3   
   14000c283:	int3   
   14000c284:	int3   
   14000c285:	int3   
   14000c286:	int3   
   14000c287:	int3   
   14000c288:	mov    rax,rsp
   14000c28b:	mov    QWORD PTR [rax+0x8],rbx
   14000c28f:	mov    QWORD PTR [rax+0x10],rbp
   14000c293:	mov    QWORD PTR [rax+0x18],rsi
   14000c297:	mov    QWORD PTR [rax+0x20],rdi
   14000c29b:	push   r12
   14000c29d:	sub    rsp,0x20
   14000c2a1:	mov    rsi,rdx
   14000c2a4:	lea    rdx,[rip+0x320ed]        # 0x14003e398
   14000c2ab:	movsxd rdi,r8d
   14000c2ae:	call   0x1400152e0
   14000c2b3:	xor    ebx,ebx
   14000c2b5:	mov    r12,rax
   14000c2b8:	test   rax,rax
   14000c2bb:	je     0x14000c2fa
   14000c2bd:	mov    rcx,rsi
   14000c2c0:	call   0x14000c198
   14000c2c5:	mov    r8,rdi
   14000c2c8:	mov    r9,r12
   14000c2cb:	mov    rcx,rax
   14000c2ce:	mov    edx,0x1
   14000c2d3:	mov    rsi,rax
   14000c2d6:	call   0x140015170
   14000c2db:	mov    rcx,r12
   14000c2de:	mov    rbp,rax
   14000c2e1:	call   0x140014f7c
   14000c2e6:	test   rsi,rsi
   14000c2e9:	je     0x14000c2f3
   14000c2eb:	mov    rcx,rsi
   14000c2ee:	call   0x1400130a8
   14000c2f3:	cmp    ebp,edi
   14000c2f5:	sete   bl
   14000c2f8:	mov    eax,ebx
   14000c2fa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c2ff:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c304:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c309:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c30e:	add    rsp,0x20
   14000c312:	pop    r12
   14000c314:	ret    
   14000c315:	int3   
   14000c316:	int3   
   14000c317:	int3   
   14000c318:	int3   
   14000c319:	int3   
   14000c31a:	int3   
   14000c31b:	int3   
   14000c31c:	int3   
   14000c31d:	int3   
   14000c31e:	int3   
   14000c31f:	int3   
   14000c320:	int3   
   14000c321:	int3   
   14000c322:	int3   
   14000c323:	int3   
   14000c324:	int3   
   14000c325:	int3   
   14000c326:	int3   
   14000c327:	int3   
   14000c328:	jmp    0x140009f1c
   14000c32d:	int3   
   14000c32e:	int3   
   14000c32f:	int3   
   14000c330:	int3   
   14000c331:	int3   
   14000c332:	int3   
   14000c333:	int3   
   14000c334:	int3   
   14000c335:	int3   
   14000c336:	int3   
   14000c337:	int3   
   14000c338:	jmp    0x140009fcc
   14000c33d:	int3   
   14000c33e:	int3   
   14000c33f:	int3   
   14000c340:	int3   
   14000c341:	int3   
   14000c342:	int3   
   14000c343:	int3   
   14000c344:	int3   
   14000c345:	int3   
   14000c346:	int3   
   14000c347:	int3   
   14000c348:	mov    QWORD PTR [rsp+0x10],rbx
   14000c34d:	push   rbp
   14000c34e:	push   rsi
   14000c34f:	push   rdi
   14000c350:	push   r12
   14000c352:	push   r13
   14000c354:	push   r14
   14000c356:	push   r15
   14000c358:	lea    rbp,[rsp-0x1f]
   14000c35d:	sub    rsp,0xa0
   14000c364:	mov    rax,QWORD PTR [rip+0x335c5]        # 0x14003f930
   14000c36b:	xor    rax,rsp
   14000c36e:	mov    QWORD PTR [rbp+0xf],rax
   14000c372:	xor    edi,edi
   14000c374:	cmp    BYTE PTR [rcx+0x4],0x6c
   14000c378:	mov    r14,rcx
   14000c37b:	mov    esi,edi
   14000c37d:	mov    ebx,edi
   14000c37f:	mov    r12b,dil
   14000c382:	mov    r13d,edi
   14000c385:	mov    r15d,edi
   14000c388:	mov    r10d,edi
   14000c38b:	je     0x14000c3aa
   14000c38d:	mov    eax,DWORD PTR [rip+0x32055]        # 0x14003e3e8
   14000c393:	mov    DWORD PTR [r9],eax
   14000c396:	movzx  eax,WORD PTR [rip+0x3204f]        # 0x14003e3ec
   14000c39d:	mov    WORD PTR [r9+0x4],ax
   14000c3a2:	lea    eax,[rdi+0x1]
   14000c3a5:	jmp    0x14000c509
   14000c3aa:	movsxd rax,r8d
   14000c3ad:	mov    BYTE PTR [rbp-0x71],dil
   14000c3b1:	mov    BYTE PTR [rbp-0x31],dil
   14000c3b5:	mov    r11,rdi
   14000c3b8:	mov    edx,0x1
   14000c3bd:	mov    QWORD PTR [rsp],rax
   14000c3c1:	cmp    rax,0x5
   14000c3c5:	jle    0x14000c4f2
   14000c3cb:	lea    r8,[rcx+0x5]
   14000c3cf:	neg    r14
   14000c3d2:	mov    cl,BYTE PTR [r8]
   14000c3d5:	cmp    cl,0x20
   14000c3d8:	je     0x14000c4e1
   14000c3de:	cmp    cl,0x9
   14000c3e1:	je     0x14000c4e1
   14000c3e7:	cmp    cl,0xa
   14000c3ea:	je     0x14000c4e1
   14000c3f0:	cmp    cl,0xd
   14000c3f3:	je     0x14000c4e1
   14000c3f9:	lea    rax,[r14+r8*1]
   14000c3fd:	cmp    rax,0x5
   14000c401:	je     0x14000c4f2
   14000c407:	cmp    cl,0x3f
   14000c40a:	jne    0x14000c411
   14000c40c:	mov    r15d,edx
   14000c40f:	jmp    0x14000c422
   14000c411:	test   r15d,r15d
   14000c414:	je     0x14000c422
   14000c416:	cmp    cl,0x3e
   14000c419:	je     0x14000c4f2
   14000c41f:	mov    r15d,edi
   14000c422:	test   rbx,rbx
   14000c425:	je     0x14000c484
   14000c427:	test   r13d,r13d
   14000c42a:	je     0x14000c484
   14000c42c:	cmp    cl,0x22
   14000c42f:	je     0x14000c43a
   14000c431:	cmp    cl,0x27
   14000c434:	jne    0x14000c4cb
   14000c43a:	test   r12b,r12b
   14000c43d:	jne    0x14000c451
   14000c43f:	mov    r12b,cl
   14000c442:	mov    r10d,edi
   14000c445:	mov    r11,rdi
   14000c448:	mov    BYTE PTR [rbp-0x71],dil
   14000c44c:	jmp    0x14000c4e1
   14000c451:	cmp    cl,r12b
   14000c454:	jne    0x14000c4cb
   14000c456:	lea    rdi,[rip+0x31f93]        # 0x14003e3f0
   14000c45d:	sub    rdi,rbx
   14000c460:	movzx  eax,BYTE PTR [rbx]
   14000c463:	movzx  ecx,BYTE PTR [rbx+rdi*1]
   14000c467:	sub    eax,ecx
   14000c469:	jne    0x14000c472
   14000c46b:	add    rbx,rdx
   14000c46e:	test   ecx,ecx
   14000c470:	jne    0x14000c460
   14000c472:	xor    edi,edi
   14000c474:	test   eax,eax
   14000c476:	je     0x14000c530
   14000c47c:	mov    ebx,edi
   14000c47e:	mov    BYTE PTR [rbp-0x31],dil
   14000c482:	jmp    0x14000c4e1
   14000c484:	test   rsi,rsi
   14000c487:	jne    0x14000c49f
   14000c489:	lea    rsi,[rbp-0x71]
   14000c48d:	mov    BYTE PTR [rbp-0x71],cl
   14000c490:	mov    BYTE PTR [rbp-0x70],dil
   14000c494:	mov    r10d,edx
   14000c497:	mov    r11,rdx
   14000c49a:	mov    r13d,edi
   14000c49d:	jmp    0x14000c4e1
   14000c49f:	cmp    cl,0x3d
   14000c4a2:	jne    0x14000c4cb
   14000c4a4:	test   rbx,rbx
   14000c4a7:	jne    0x14000c4c0
   14000c4a9:	lea    rcx,[rbp-0x31]
   14000c4ad:	sub    rcx,rsi
   14000c4b0:	mov    al,BYTE PTR [rsi]
   14000c4b2:	mov    BYTE PTR [rcx+rsi*1],al
   14000c4b5:	add    rsi,rdx
   14000c4b8:	test   al,al
   14000c4ba:	jne    0x14000c4b0
   14000c4bc:	lea    rbx,[rbp-0x31]
   14000c4c0:	mov    r13d,edx
   14000c4c3:	mov    rsi,rdi
   14000c4c6:	mov    r12b,dil
   14000c4c9:	jmp    0x14000c4e1
   14000c4cb:	cmp    r10d,0x3f
   14000c4cf:	jae    0x14000c4f2
   14000c4d1:	mov    BYTE PTR [rbp+r11*1-0x71],cl
   14000c4d6:	add    r10d,edx
   14000c4d9:	add    r11,rdx
   14000c4dc:	mov    BYTE PTR [rbp+r11*1-0x71],dil
   14000c4e1:	add    r8,rdx
   14000c4e4:	lea    rax,[r14+r8*1]
   14000c4e8:	cmp    rax,QWORD PTR [rsp]
   14000c4ec:	jl     0x14000c3d2
   14000c4f2:	mov    eax,DWORD PTR [rip+0x31f24]        # 0x14003e41c
   14000c4f8:	mov    DWORD PTR [r9],eax
   14000c4fb:	movzx  eax,WORD PTR [rip+0x31f1e]        # 0x14003e420
   14000c502:	mov    WORD PTR [r9+0x4],ax
   14000c507:	mov    eax,edx
   14000c509:	mov    rcx,QWORD PTR [rbp+0xf]
   14000c50d:	xor    rcx,rsp
   14000c510:	call   0x140012670
   14000c515:	mov    rbx,QWORD PTR [rsp+0xe8]
   14000c51d:	add    rsp,0xa0
   14000c524:	pop    r15
   14000c526:	pop    r14
   14000c528:	pop    r13
   14000c52a:	pop    r12
   14000c52c:	pop    rdi
   14000c52d:	pop    rsi
   14000c52e:	pop    rbp
   14000c52f:	ret    
   14000c530:	mov    rcx,rdi
   14000c533:	test   r11,r11
   14000c536:	jle    0x14000c56f
   14000c538:	mov    al,BYTE PTR [rbp+rcx*1-0x71]
   14000c53c:	cmp    al,0x41
   14000c53e:	jl     0x14000c544
   14000c540:	cmp    al,0x5a
   14000c542:	jle    0x14000c567
   14000c544:	cmp    al,0x61
   14000c546:	jl     0x14000c54c
   14000c548:	cmp    al,0x7a
   14000c54a:	jle    0x14000c567
   14000c54c:	test   rcx,rcx
   14000c54f:	je     0x14000c5a6
   14000c551:	jle    0x14000c591
   14000c553:	cmp    al,0x2d
   14000c555:	je     0x14000c567
   14000c557:	cmp    al,0x30
   14000c559:	jl     0x14000c55f
   14000c55b:	cmp    al,0x39
   14000c55d:	jle    0x14000c567
   14000c55f:	cmp    al,0x2e
   14000c561:	je     0x14000c567
   14000c563:	cmp    al,0x5f
   14000c565:	jne    0x14000c591
   14000c567:	add    rcx,rdx
   14000c56a:	cmp    rcx,r11
   14000c56d:	jl     0x14000c538
   14000c56f:	or     rcx,0xffffffffffffffff
   14000c573:	xor    eax,eax
   14000c575:	lea    rdi,[rbp-0x71]
   14000c579:	repnz scas al,BYTE PTR es:[rdi]
   14000c57b:	movsxd rax,DWORD PTR [rbp+0x7f]
   14000c57f:	not    rcx
   14000c582:	sub    rcx,rdx
   14000c585:	cmp    rcx,rax
   14000c588:	jb     0x14000c5bb
   14000c58a:	xor    eax,eax
   14000c58c:	jmp    0x14000c509
   14000c591:	mov    eax,DWORD PTR [rip+0x31e6d]        # 0x14003e404
   14000c597:	mov    DWORD PTR [r9],eax
   14000c59a:	movzx  eax,WORD PTR [rip+0x31e67]        # 0x14003e408
   14000c5a1:	jmp    0x14000c502
   14000c5a6:	mov    eax,DWORD PTR [rip+0x31e50]        # 0x14003e3fc
   14000c5ac:	mov    DWORD PTR [r9],eax
   14000c5af:	movzx  eax,WORD PTR [rip+0x31e4a]        # 0x14003e400
   14000c5b6:	jmp    0x14000c502
   14000c5bb:	lea    rax,[rbp-0x71]
   14000c5bf:	mov    rdi,r9
   14000c5c2:	lea    rcx,[rbp-0x71]
   14000c5c6:	sub    rdi,rax
   14000c5c9:	mov    al,BYTE PTR [rcx]
   14000c5cb:	mov    BYTE PTR [rdi+rcx*1],al
   14000c5ce:	add    rcx,rdx
   14000c5d1:	test   al,al
   14000c5d3:	jne    0x14000c5c9
   14000c5d5:	lea    rdi,[rip+0x31e30]        # 0x14003e40c
   14000c5dc:	mov    rax,r9
   14000c5df:	sub    rdi,r9
   14000c5e2:	movzx  ecx,BYTE PTR [rax]
   14000c5e5:	movzx  r8d,BYTE PTR [rax+rdi*1]
   14000c5ea:	sub    ecx,r8d
   14000c5ed:	jne    0x14000c5f7
   14000c5ef:	add    rax,rdx
   14000c5f2:	test   r8d,r8d
   14000c5f5:	jne    0x14000c5e2
   14000c5f7:	test   ecx,ecx
   14000c5f9:	je     0x14000c507
   14000c5ff:	lea    rdi,[rip+0x31e0e]        # 0x14003e414
   14000c606:	sub    rdi,r9
   14000c609:	movzx  eax,BYTE PTR [r9]
   14000c60d:	movzx  ecx,BYTE PTR [r9+rdi*1]
   14000c612:	sub    eax,ecx
   14000c614:	jne    0x14000c61d
   14000c616:	add    r9,rdx
   14000c619:	test   ecx,ecx
   14000c61b:	jne    0x14000c609
   14000c61d:	test   eax,eax
   14000c61f:	je     0x14000c507
   14000c625:	jmp    0x14000c58a
   14000c62a:	int3   
   14000c62b:	int3   
   14000c62c:	int3   
   14000c62d:	int3   
   14000c62e:	int3   
   14000c62f:	int3   
   14000c630:	int3   
   14000c631:	int3   
   14000c632:	int3   
   14000c633:	int3   
   14000c634:	int3   
   14000c635:	int3   
   14000c636:	int3   
   14000c637:	int3   
   14000c638:	mov    rax,rsp
   14000c63b:	mov    QWORD PTR [rax+0x8],rbx
   14000c63f:	mov    QWORD PTR [rax+0x10],rbp
   14000c643:	mov    QWORD PTR [rax+0x18],rsi
   14000c647:	mov    QWORD PTR [rax+0x20],rdi
   14000c64b:	push   r12
   14000c64d:	sub    rsp,0x20
   14000c651:	mov    rbx,rdx
   14000c654:	mov    rdi,rcx
   14000c657:	call   0x14000c148
   14000c65c:	movsxd rbp,eax
   14000c65f:	test   eax,eax
   14000c661:	js     0x14000c695
   14000c663:	lea    rdx,[rip+0x31d26]        # 0x14003e390
   14000c66a:	mov    rcx,rdi
   14000c66d:	call   0x1400152e0
   14000c672:	mov    rsi,rax
   14000c675:	test   rax,rax
   14000c678:	je     0x14000c695
   14000c67a:	lea    ecx,[rbp+0x2]
   14000c67d:	movsxd rcx,ecx
   14000c680:	call   0x140013298
   14000c685:	mov    rdi,rax
   14000c688:	test   rax,rax
   14000c68b:	jne    0x14000c6b6
   14000c68d:	mov    rcx,rsi
   14000c690:	call   0x140014f7c
   14000c695:	and    QWORD PTR [rbx],0x0
   14000c699:	xor    eax,eax
   14000c69b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c6a0:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c6a5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c6aa:	mov    rdi,QWORD PTR [rsp+0x48]
   14000c6af:	add    rsp,0x20
   14000c6b3:	pop    r12
   14000c6b5:	ret    
   14000c6b6:	mov    r8,rbp
   14000c6b9:	mov    r9,rsi
   14000c6bc:	mov    edx,0x1
   14000c6c1:	mov    rcx,rax
   14000c6c4:	call   0x140016ac8
   14000c6c9:	mov    r12,rax
   14000c6cc:	cmp    eax,ebp
   14000c6ce:	jle    0x14000c6e2
   14000c6d0:	mov    ecx,0x9
   14000c6d5:	call   0x14000bd98
   14000c6da:	mov    rcx,rax
   14000c6dd:	call   0x140009f1c
   14000c6e2:	mov    rcx,rsi
   14000c6e5:	call   0x140014f7c
   14000c6ea:	cmp    r12d,ebp
   14000c6ed:	je     0x14000c6f9
   14000c6ef:	mov    rcx,rdi
   14000c6f2:	call   0x1400130a8
   14000c6f7:	jmp    0x14000c695
   14000c6f9:	xor    edx,edx
   14000c6fb:	movsxd rcx,r12d
   14000c6fe:	xor    eax,eax
   14000c700:	cmp    rax,rcx
   14000c703:	jge    0x14000c716
   14000c705:	cmp    BYTE PTR [rax+rdi*1],0x0
   14000c709:	jne    0x14000c70d
   14000c70b:	inc    edx
   14000c70d:	inc    rax
   14000c710:	cmp    rax,0x6
   14000c714:	jl     0x14000c700
   14000c716:	cmp    edx,0x1
   14000c719:	jle    0x14000c726
   14000c71b:	mov    QWORD PTR [rbx],rdi
   14000c71e:	mov    WORD PTR [rcx+rdi*1],0x0
   14000c724:	jmp    0x14000c73d
   14000c726:	mov    BYTE PTR [rcx+rdi*1],0x0
   14000c72a:	mov    rcx,rdi
   14000c72d:	call   0x14000c218
   14000c732:	mov    rcx,rdi
   14000c735:	mov    QWORD PTR [rbx],rax
   14000c738:	call   0x1400130a8
   14000c73d:	mov    rdi,QWORD PTR [rbx]
   14000c740:	xor    eax,eax
   14000c742:	or     rcx,0xffffffffffffffff
   14000c746:	repnz scas ax,WORD PTR es:[rdi]
   14000c749:	not    rcx
   14000c74c:	lea    eax,[rcx-0x1]
   14000c74f:	jmp    0x14000c69b
   14000c754:	int3   
   14000c755:	int3   
   14000c756:	int3   
   14000c757:	int3   
   14000c758:	int3   
   14000c759:	int3   
   14000c75a:	int3   
   14000c75b:	int3   
   14000c75c:	int3   
   14000c75d:	int3   
   14000c75e:	int3   
   14000c75f:	int3   
   14000c760:	int3   
   14000c761:	int3   
   14000c762:	int3   
   14000c763:	int3   
   14000c764:	int3   
   14000c765:	int3   
   14000c766:	int3   
   14000c767:	int3   
   14000c768:	sub    rsp,0x68
   14000c76c:	mov    rax,QWORD PTR [rip+0x331bd]        # 0x14003f930
   14000c773:	xor    rax,rsp
   14000c776:	mov    QWORD PTR [rsp+0x50],rax
   14000c77b:	movzx  eax,BYTE PTR [rcx]
   14000c77e:	test   eax,eax
   14000c780:	je     0x14000c80c
   14000c786:	sub    eax,0x3c
   14000c789:	je     0x14000c7c9
   14000c78b:	sub    eax,0x10
   14000c78e:	je     0x14000c7ab
   14000c790:	sub    eax,0xb2
   14000c795:	je     0x14000c7a5
   14000c797:	dec    eax
   14000c799:	jne    0x14000c822
   14000c79f:	cmp    BYTE PTR [rcx+0x4],0xfe
   14000c7a3:	jmp    0x14000c81c
   14000c7a5:	cmp    BYTE PTR [rcx+0x4],0xff
   14000c7a9:	jmp    0x14000c81c
   14000c7ab:	cmp    DWORD PTR [rcx+0x4],0x6f
   14000c7af:	jne    0x14000c822
   14000c7b1:	cmp    BYTE PTR [rcx+0x8],0xa7
   14000c7b5:	jne    0x14000c822
   14000c7b7:	cmp    BYTE PTR [rcx+0xc],0x94
   14000c7bb:	jne    0x14000c822
   14000c7bd:	mov    r8d,edx
   14000c7c0:	lea    rdx,[rip+0x31c01]        # 0x14003e3c8
   14000c7c7:	jmp    0x14000c7ec
   14000c7c9:	movzx  eax,BYTE PTR [rcx+0x4]
   14000c7cd:	test   eax,eax
   14000c7cf:	je     0x14000c800
   14000c7d1:	cmp    eax,0x3f
   14000c7d4:	jne    0x14000c822
   14000c7d6:	cmp    DWORD PTR [rcx+0x8],0x78
   14000c7da:	jne    0x14000c822
   14000c7dc:	cmp    DWORD PTR [rcx+0xc],0x6d
   14000c7e0:	jne    0x14000c822
   14000c7e2:	mov    r8d,edx
   14000c7e5:	lea    rdx,[rip+0x31bd4]        # 0x14003e3c0
   14000c7ec:	lea    r9,[rsp+0x30]
   14000c7f1:	mov    DWORD PTR [rsp+0x20],0x19
   14000c7f9:	call   0x14000c348
   14000c7fe:	jmp    0x14000c827
   14000c800:	cmp    DWORD PTR [rcx+0x8],0x3f
   14000c804:	jne    0x14000c822
   14000c806:	cmp    DWORD PTR [rcx+0xc],0x0
   14000c80a:	jmp    0x14000c81c
   14000c80c:	cmp    DWORD PTR [rcx+0x4],0x3c
   14000c810:	jne    0x14000c822
   14000c812:	cmp    DWORD PTR [rcx+0x8],0x0
   14000c816:	jne    0x14000c822
   14000c818:	cmp    DWORD PTR [rcx+0xc],0x3f
   14000c81c:	jne    0x14000c822
   14000c81e:	xor    eax,eax
   14000c820:	jmp    0x14000c827
   14000c822:	mov    eax,0x1
   14000c827:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c82c:	xor    rcx,rsp
   14000c82f:	call   0x140012670
   14000c834:	add    rsp,0x68
   14000c838:	ret    
   14000c839:	int3   
   14000c83a:	int3   
   14000c83b:	int3   
   14000c83c:	mov    QWORD PTR [rsp+0x8],rdi
   14000c841:	mov    r8,rcx
   14000c844:	or     rcx,0xffffffffffffffff
   14000c848:	xor    eax,eax
   14000c84a:	mov    rdi,r8
   14000c84d:	xor    edx,edx
   14000c84f:	repnz scas ax,WORD PTR es:[rdi]
   14000c852:	not    rcx
   14000c855:	dec    rcx
   14000c858:	mov    r9,rcx
   14000c85b:	movsxd rdi,ecx
   14000c85e:	test   ecx,ecx
   14000c860:	jle    0x14000c881
   14000c862:	movzx  ecx,WORD PTR [r8+rdx*2]
   14000c867:	lea    eax,[rcx-0x20]
   14000c86a:	cmp    eax,0x5e
   14000c86d:	ja     0x14000c897
   14000c86f:	cmp    ecx,0x22
   14000c872:	je     0x14000c897
   14000c874:	cmp    ecx,0x25
   14000c877:	je     0x14000c897
   14000c879:	inc    rdx
   14000c87c:	cmp    rdx,rdi
   14000c87f:	jl     0x14000c862
   14000c881:	test   r9d,r9d
   14000c884:	jle    0x14000c88f
   14000c886:	cmp    WORD PTR [r8+rdi*2-0x2],0x5c
   14000c88d:	je     0x14000c897
   14000c88f:	xor    eax,eax
   14000c891:	mov    rdi,QWORD PTR [rsp+0x8]
   14000c896:	ret    
   14000c897:	mov    eax,0x1
   14000c89c:	jmp    0x14000c891
   14000c89e:	int3   
   14000c89f:	int3   
   14000c8a0:	int3   
   14000c8a1:	int3   
   14000c8a2:	int3   
   14000c8a3:	int3   
   14000c8a4:	int3   
   14000c8a5:	int3   
   14000c8a6:	int3   
   14000c8a7:	int3   
   14000c8a8:	int3   
   14000c8a9:	int3   
   14000c8aa:	int3   
   14000c8ab:	int3   
   14000c8ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000c8b1:	mov    QWORD PTR [rsp+0x10],rbp
   14000c8b6:	mov    QWORD PTR [rsp+0x18],rsi
   14000c8bb:	push   rdi
   14000c8bc:	sub    rsp,0x20
   14000c8c0:	mov    rdi,rdx
   14000c8c3:	mov    rsi,rcx
   14000c8c6:	call   0x14000c83c
   14000c8cb:	xor    ebx,ebx
   14000c8cd:	test   eax,eax
   14000c8cf:	jne    0x14000c99a
   14000c8d5:	mov    rcx,rdi
   14000c8d8:	call   0x14000c83c
   14000c8dd:	test   eax,eax
   14000c8df:	jne    0x14000c99a
   14000c8e5:	lea    rdi,[rip+0x32e54]        # 0x14003f740
   14000c8ec:	mov    rdx,QWORD PTR [rdi]
   14000c8ef:	mov    rcx,rsi
   14000c8f2:	call   0x1400147a4
   14000c8f7:	test   eax,eax
   14000c8f9:	je     0x14000c993
   14000c8ff:	lea    rax,[rip+0x32f22]        # 0x14003f828
   14000c906:	add    rdi,0x8
   14000c90a:	cmp    rdi,rax
   14000c90d:	jl     0x14000c8ec
   14000c90f:	xor    eax,eax
   14000c911:	or     rbp,0xffffffffffffffff
   14000c915:	lea    rdi,[rip+0x32f0c]        # 0x14003f828
   14000c91c:	mov    rcx,rbp
   14000c91f:	lea    rdx,[rip+0x32f12]        # 0x14003f838
   14000c926:	repnz scas ax,WORD PTR es:[rdi]
   14000c929:	not    rcx
   14000c92c:	lea    r8,[rcx-0x1]
   14000c930:	mov    rcx,rsi
   14000c933:	call   0x140013790
   14000c938:	test   eax,eax
   14000c93a:	je     0x14000c993
   14000c93c:	xor    eax,eax
   14000c93e:	lea    rdi,[rip+0x32f03]        # 0x14003f848
   14000c945:	mov    rcx,rbp
   14000c948:	repnz scas ax,WORD PTR es:[rdi]
   14000c94b:	lea    rdx,[rip+0x32f06]        # 0x14003f858
   14000c952:	not    rcx
   14000c955:	lea    r8,[rcx-0x1]
   14000c959:	mov    rcx,rsi
   14000c95c:	call   0x140013790
   14000c961:	test   eax,eax
   14000c963:	je     0x14000c993
   14000c965:	xor    eax,eax
   14000c967:	lea    rdi,[rip+0x32efa]        # 0x14003f868
   14000c96e:	mov    rcx,rbp
   14000c971:	repnz scas ax,WORD PTR es:[rdi]
   14000c974:	lea    rdx,[rip+0x32efd]        # 0x14003f878
   14000c97b:	not    rcx
   14000c97e:	lea    r8,[rcx-0x1]
   14000c982:	mov    rcx,rsi
   14000c985:	call   0x140013790
   14000c98a:	test   eax,eax
   14000c98c:	sete   bl
   14000c98f:	mov    eax,ebx
   14000c991:	jmp    0x14000c99c
   14000c993:	mov    eax,0x1
   14000c998:	jmp    0x14000c99c
   14000c99a:	xor    eax,eax
   14000c99c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c9a1:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c9a6:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c9ab:	add    rsp,0x20
   14000c9af:	pop    rdi
   14000c9b0:	ret    
   14000c9b1:	int3   
   14000c9b2:	int3   
   14000c9b3:	int3   
   14000c9b4:	int3   
   14000c9b5:	int3   
   14000c9b6:	int3   
   14000c9b7:	int3   
   14000c9b8:	int3   
   14000c9b9:	int3   
   14000c9ba:	int3   
   14000c9bb:	int3   
   14000c9bc:	mov    QWORD PTR [rsp+0x8],rdi
   14000c9c1:	mov    r9,rcx
   14000c9c4:	or     r10,0xffffffffffffffff
   14000c9c8:	xor    eax,eax
   14000c9ca:	mov    rcx,r10
   14000c9cd:	mov    rdi,r9
   14000c9d0:	xor    r8d,r8d
   14000c9d3:	repnz scas ax,WORD PTR es:[rdi]
   14000c9d6:	not    rcx
   14000c9d9:	dec    rcx
   14000c9dc:	je     0x14000c9f3
   14000c9de:	cmp    WORD PTR [r9],dx
   14000c9e2:	je     0x14000c9fc
   14000c9e4:	inc    r8d
   14000c9e7:	add    r9,0x2
   14000c9eb:	movsxd rax,r8d
   14000c9ee:	cmp    rax,rcx
   14000c9f1:	jb     0x14000c9de
   14000c9f3:	mov    eax,r10d
   14000c9f6:	mov    rdi,QWORD PTR [rsp+0x8]
   14000c9fb:	ret    
   14000c9fc:	mov    eax,r8d
   14000c9ff:	jmp    0x14000c9f6
   14000ca01:	int3   
   14000ca02:	int3   
   14000ca03:	int3   
   14000ca04:	int3   
   14000ca05:	int3   
   14000ca06:	int3   
   14000ca07:	int3   
   14000ca08:	int3   
   14000ca09:	int3   
   14000ca0a:	int3   
   14000ca0b:	int3   
   14000ca0c:	mov    QWORD PTR [rsp+0x18],rbx
   14000ca11:	push   rbp
   14000ca12:	push   rsi
   14000ca13:	push   rdi
   14000ca14:	push   r12
   14000ca16:	push   r13
   14000ca18:	push   r14
   14000ca1a:	push   r15
   14000ca1c:	mov    eax,0x1030
   14000ca21:	call   0x140012f50
   14000ca26:	sub    rsp,rax
   14000ca29:	mov    rax,QWORD PTR [rip+0x32f00]        # 0x14003f930
   14000ca30:	xor    rax,rsp
   14000ca33:	mov    QWORD PTR [rsp+0x1020],rax
   14000ca3b:	mov    r13,rcx
   14000ca3e:	mov    rdi,rdx
   14000ca41:	lea    rcx,[rsp+0x22]
   14000ca46:	xor    r14d,r14d
   14000ca49:	xor    edx,edx
   14000ca4b:	mov    r8d,0xffe
   14000ca51:	mov    WORD PTR [rsp+0x20],r14w
   14000ca57:	call   0x140012fb0
   14000ca5c:	mov    rdx,rdi
   14000ca5f:	mov    rcx,r13
   14000ca62:	call   0x14000c8ac
   14000ca67:	test   eax,eax
   14000ca69:	je     0x14000ca75
   14000ca6b:	mov    eax,0x1
   14000ca70:	jmp    0x14000cbf9
   14000ca75:	mov    ebx,DWORD PTR [rip+0x31a09]        # 0x14003e484
   14000ca7b:	test   ebx,ebx
   14000ca7d:	jns    0x14000cbb8
   14000ca83:	lea    rdx,[rsp+0x20]
   14000ca88:	lea    rcx,[rip+0x32e01]        # 0x14003f890
   14000ca8f:	mov    r8d,0x800
   14000ca95:	mov    DWORD PTR [rip+0x319e8],r14d        # 0x14003e484
   14000ca9c:	call   0x140011124
   14000caa1:	test   eax,eax
   14000caa3:	je     0x14000cbb2
   14000caa9:	or     r15,0xffffffffffffffff
   14000caad:	xor    eax,eax
   14000caaf:	lea    rdi,[rsp+0x20]
   14000cab4:	mov    rcx,r15
   14000cab7:	repnz scas ax,WORD PTR es:[rdi]
   14000caba:	not    rcx
   14000cabd:	dec    rcx
   14000cac0:	je     0x14000cbb2
   14000cac6:	lea    ebx,[rax+0x1]
   14000cac9:	movsxd rcx,ecx
   14000cacc:	lea    edx,[rax+0x2c]
   14000cacf:	mov    DWORD PTR [rip+0x319af],ebx        # 0x14003e484
   14000cad5:	test   rcx,rcx
   14000cad8:	jle    0x14000caf1
   14000cada:	cmp    WORD PTR [rsp+rax*2+0x20],dx
   14000cadf:	jne    0x14000cae3
   14000cae1:	inc    ebx
   14000cae3:	inc    rax
   14000cae6:	cmp    rax,rcx
   14000cae9:	jl     0x14000cada
   14000caeb:	mov    DWORD PTR [rip+0x31993],ebx        # 0x14003e484
   14000caf1:	movsxd rcx,ebx
   14000caf4:	mov    edx,0x8
   14000caf9:	call   0x140012bd4
   14000cafe:	lea    rdi,[rsp+0x20]
   14000cb03:	mov    rcx,r15
   14000cb06:	mov    QWORD PTR [rip+0x487cb],rax        # 0x1400552d8
   14000cb0d:	xor    eax,eax
   14000cb0f:	lea    rsi,[rsp+0x20]
   14000cb14:	repnz scas ax,WORD PTR es:[rdi]
   14000cb17:	mov    ebp,r14d
   14000cb1a:	not    rcx
   14000cb1d:	dec    rcx
   14000cb20:	je     0x14000cbb8
   14000cb26:	mov    r12,r14
   14000cb29:	cmp    ebp,ebx
   14000cb2b:	jge    0x14000cbb8
   14000cb31:	mov    edx,0x2c
   14000cb36:	mov    rcx,rsi
   14000cb39:	call   0x14000c9bc
   14000cb3e:	movsxd rdi,eax
   14000cb41:	test   eax,eax
   14000cb43:	js     0x14000cb9c
   14000cb45:	mov    WORD PTR [rsi+rdi*2],r14w
   14000cb4a:	inc    edi
   14000cb4c:	movsxd rcx,edi
   14000cb4f:	lea    rax,[rsi+rcx*2]
   14000cb53:	jmp    0x14000cb5b
   14000cb55:	inc    edi
   14000cb57:	add    rax,0x2
   14000cb5b:	cmp    WORD PTR [rax],0x20
   14000cb5f:	je     0x14000cb55
   14000cb61:	mov    rcx,rsi
   14000cb64:	call   0x1400130e8
   14000cb69:	mov    rcx,QWORD PTR [rip+0x48768]        # 0x1400552d8
   14000cb70:	mov    ebx,DWORD PTR [rip+0x3190e]        # 0x14003e484
   14000cb76:	mov    QWORD PTR [r12+rcx*1],rax
   14000cb7a:	movsxd rax,edi
   14000cb7d:	mov    rcx,r15
   14000cb80:	lea    rsi,[rsi+rax*2]
   14000cb84:	xor    eax,eax
   14000cb86:	inc    ebp
   14000cb88:	mov    rdi,rsi
   14000cb8b:	add    r12,0x8
   14000cb8f:	repnz scas ax,WORD PTR es:[rdi]
   14000cb92:	not    rcx
   14000cb95:	dec    rcx
   14000cb98:	jne    0x14000cb29
   14000cb9a:	jmp    0x14000cbb8
   14000cb9c:	mov    rcx,rsi
   14000cb9f:	call   0x1400130e8
   14000cba4:	mov    rcx,QWORD PTR [rip+0x4872d]        # 0x1400552d8
   14000cbab:	movsxd rdx,ebp
   14000cbae:	mov    QWORD PTR [rcx+rdx*8],rax
   14000cbb2:	mov    ebx,DWORD PTR [rip+0x318cc]        # 0x14003e484
   14000cbb8:	mov    ecx,r14d
   14000cbbb:	test   ebx,ebx
   14000cbbd:	jle    0x14000cbf7
   14000cbbf:	mov    rdx,QWORD PTR [rip+0x48712]        # 0x1400552d8
   14000cbc6:	mov    r8,QWORD PTR [rdx]
   14000cbc9:	mov    rax,r13
   14000cbcc:	sub    r8,r13
   14000cbcf:	movzx  edi,WORD PTR [rax]
   14000cbd2:	movzx  r9d,WORD PTR [rax+r8*1]
   14000cbd7:	sub    edi,r9d
   14000cbda:	jne    0x14000cbe5
   14000cbdc:	add    rax,0x2
   14000cbe0:	test   r9d,r9d
   14000cbe3:	jne    0x14000cbcf
   14000cbe5:	test   edi,edi
   14000cbe7:	je     0x14000ca6b
   14000cbed:	inc    ecx
   14000cbef:	add    rdx,0x8
   14000cbf3:	cmp    ecx,ebx
   14000cbf5:	jl     0x14000cbc6
   14000cbf7:	xor    eax,eax
   14000cbf9:	mov    rcx,QWORD PTR [rsp+0x1020]
   14000cc01:	xor    rcx,rsp
   14000cc04:	call   0x140012670
   14000cc09:	mov    rbx,QWORD PTR [rsp+0x1080]
   14000cc11:	add    rsp,0x1030
   14000cc18:	pop    r15
   14000cc1a:	pop    r14
   14000cc1c:	pop    r13
   14000cc1e:	pop    r12
   14000cc20:	pop    rdi
   14000cc21:	pop    rsi
   14000cc22:	pop    rbp
   14000cc23:	ret    
   14000cc24:	int3   
   14000cc25:	int3   
   14000cc26:	int3   
   14000cc27:	int3   
   14000cc28:	int3   
   14000cc29:	int3   
   14000cc2a:	int3   
   14000cc2b:	int3   
   14000cc2c:	rex push rdi
   14000cc2e:	sub    rsp,0x20
   14000cc32:	mov    r10,rcx
   14000cc35:	test   rcx,rcx
   14000cc38:	je     0x14000cc8a
   14000cc3a:	or     rcx,0xffffffffffffffff
   14000cc3e:	xor    eax,eax
   14000cc40:	mov    rdi,r10
   14000cc43:	repnz scas ax,WORD PTR es:[rdi]
   14000cc46:	not    rcx
   14000cc49:	dec    rcx
   14000cc4c:	mov    rdi,rcx
   14000cc4f:	test   ecx,ecx
   14000cc51:	je     0x14000cc8c
   14000cc53:	mov    rcx,r10
   14000cc56:	call   0x14000c83c
   14000cc5b:	test   eax,eax
   14000cc5d:	jne    0x14000cc8a
   14000cc5f:	xor    edx,edx
   14000cc61:	xor    ecx,ecx
   14000cc63:	test   rcx,rcx
   14000cc66:	je     0x14000cc6f
   14000cc68:	lea    eax,[rdi-0x1]
   14000cc6b:	cmp    edx,eax
   14000cc6d:	jge    0x14000cc83
   14000cc6f:	movzx  eax,WORD PTR [r10+rcx*2]
   14000cc74:	add    eax,0xffffffd0
   14000cc77:	cmp    eax,0x9
   14000cc7a:	ja     0x14000cc8a
   14000cc7c:	inc    edx
   14000cc7e:	inc    rcx
   14000cc81:	jmp    0x14000cc63
   14000cc83:	mov    eax,0x1
   14000cc88:	jmp    0x14000cc8c
   14000cc8a:	xor    eax,eax
   14000cc8c:	add    rsp,0x20
   14000cc90:	pop    rdi
   14000cc91:	ret    
   14000cc92:	int3   
   14000cc93:	int3   
   14000cc94:	int3   
   14000cc95:	int3   
   14000cc96:	int3   
   14000cc97:	int3   
   14000cc98:	int3   
   14000cc99:	int3   
   14000cc9a:	int3   
   14000cc9b:	int3   
   14000cc9c:	mov    QWORD PTR [rsp+0x10],rbp
   14000cca1:	mov    QWORD PTR [rsp+0x18],rsi
   14000cca6:	mov    QWORD PTR [rsp+0x20],rdi
   14000ccab:	push   r12
   14000ccad:	push   r13
   14000ccaf:	push   r14
   14000ccb1:	sub    rsp,0x850
   14000ccb8:	mov    rax,QWORD PTR [rip+0x32c71]        # 0x14003f930
   14000ccbf:	xor    rax,rsp
   14000ccc2:	mov    QWORD PTR [rsp+0x840],rax
   14000ccca:	mov    rsi,rcx
   14000cccd:	lea    rdx,[rip+0x31cbc]        # 0x14003e990
   14000ccd4:	mov    r12d,0x2
   14000ccda:	xor    r13d,r13d
   14000ccdd:	mov    rdi,QWORD PTR [rdx]
   14000cce0:	mov    rax,rsi
   14000cce3:	sub    rdi,rsi
   14000cce6:	movzx  ecx,WORD PTR [rax]
   14000cce9:	movzx  r8d,WORD PTR [rax+rdi*1]
   14000ccee:	sub    ecx,r8d
   14000ccf1:	jne    0x14000ccfb
   14000ccf3:	add    rax,r12
   14000ccf6:	test   r8d,r8d
   14000ccf9:	jne    0x14000cce6
   14000ccfb:	test   ecx,ecx
   14000ccfd:	je     0x14000ce85
   14000cd03:	lea    rax,[rip+0x31dbe]        # 0x14003eac8
   14000cd0a:	add    rdx,0x8
   14000cd0e:	cmp    rdx,rax
   14000cd11:	jl     0x14000ccdd
   14000cd13:	lea    rbp,[rip+0x322f6]        # 0x14003f010
   14000cd1a:	or     r14,0xffffffffffffffff
   14000cd1e:	mov    rdi,QWORD PTR [rbp+0x0]
   14000cd22:	mov    rdx,QWORD PTR [rbp+0x0]
   14000cd26:	xor    eax,eax
   14000cd28:	mov    rcx,r14
   14000cd2b:	repnz scas ax,WORD PTR es:[rdi]
   14000cd2e:	not    rcx
   14000cd31:	dec    rcx
   14000cd34:	movsxd r8,ecx
   14000cd37:	mov    rcx,rsi
   14000cd3a:	call   0x140013790
   14000cd3f:	test   eax,eax
   14000cd41:	jne    0x14000cd53
   14000cd43:	mov    rcx,rsi
   14000cd46:	call   0x14000c83c
   14000cd4b:	test   eax,eax
   14000cd4d:	je     0x14000ce85
   14000cd53:	lea    rax,[rip+0x323c6]        # 0x14003f120
   14000cd5a:	add    rbp,0x8
   14000cd5e:	cmp    rbp,rax
   14000cd61:	jl     0x14000cd1e
   14000cd63:	xor    eax,eax
   14000cd65:	mov    rcx,r14
   14000cd68:	mov    rdi,rsi
   14000cd6b:	repnz scas ax,WORD PTR es:[rdi]
   14000cd6e:	not    rcx
   14000cd71:	dec    rcx
   14000cd74:	cmp    rcx,0x5
   14000cd78:	jb     0x14000ce81
   14000cd7e:	lea    rcx,[rip+0x3216f]        # 0x14003eef4
   14000cd85:	mov    r8,r12
   14000cd88:	mov    rdx,rsi
   14000cd8b:	call   0x140013790
   14000cd90:	test   eax,eax
   14000cd92:	jne    0x14000ce81
   14000cd98:	xor    eax,eax
   14000cd9a:	mov    rcx,r14
   14000cd9d:	mov    rdi,rsi
   14000cda0:	repnz scas ax,WORD PTR es:[rdi]
   14000cda3:	mov    edi,r13d
   14000cda6:	lea    r11d,[rax+0x1]
   14000cdaa:	not    rcx
   14000cdad:	mov    r10d,r13d
   14000cdb0:	dec    rcx
   14000cdb3:	mov    r8,rcx
   14000cdb6:	cmp    ecx,0x200
   14000cdbc:	jg     0x14000ce8a
   14000cdc2:	movsxd r9,r8d
   14000cdc5:	mov    rdx,r12
   14000cdc8:	mov    rcx,r13
   14000cdcb:	cmp    r12,r9
   14000cdce:	jge    0x14000ce62
   14000cdd4:	test   r11d,r11d
   14000cdd7:	je     0x14000ce06
   14000cdd9:	movzx  eax,WORD PTR [rsi+rdx*2]
   14000cddd:	cmp    ax,0x3d
   14000cde1:	je     0x14000cded
   14000cde3:	mov    WORD PTR [rsp+rcx*2+0x430],ax
   14000cdeb:	jmp    0x14000ce4e
   14000cded:	test   rcx,rcx
   14000cdf0:	je     0x14000ce53
   14000cdf2:	mov    WORD PTR [rsp+rcx*2+0x430],r13w
   14000cdfb:	mov    r11d,r13d
   14000cdfe:	mov    edi,r13d
   14000ce01:	mov    rcx,r13
   14000ce04:	jmp    0x14000ce53
   14000ce06:	test   rcx,rcx
   14000ce09:	jne    0x14000ce2f
   14000ce0b:	test   r10d,r10d
   14000ce0e:	jne    0x14000ce34
   14000ce10:	cmp    WORD PTR [rsi+rdx*2],0x22
   14000ce15:	jne    0x14000ce45
   14000ce17:	cmp    WORD PTR [rsi+r9*2-0x2],0x22
   14000ce1e:	jne    0x14000ce45
   14000ce20:	lea    eax,[r8-0x1]
   14000ce24:	cmp    r12d,eax
   14000ce27:	je     0x14000ce45
   14000ce29:	lea    r10d,[rcx+0x1]
   14000ce2d:	jmp    0x14000ce53
   14000ce2f:	test   r10d,r10d
   14000ce32:	je     0x14000ce45
   14000ce34:	lea    eax,[r8-0x1]
   14000ce38:	cmp    r12d,eax
   14000ce3b:	jne    0x14000ce45
   14000ce3d:	mov    WORD PTR [rsp+rcx*2+0x20],r13w
   14000ce43:	jmp    0x14000ce53
   14000ce45:	movzx  eax,WORD PTR [rsi+rdx*2]
   14000ce49:	mov    WORD PTR [rsp+rcx*2+0x20],ax
   14000ce4e:	inc    edi
   14000ce50:	inc    rcx
   14000ce53:	inc    rdx
   14000ce56:	inc    r12d
   14000ce59:	cmp    rdx,r9
   14000ce5c:	jl     0x14000cdd4
   14000ce62:	movsxd rax,edi
   14000ce65:	lea    rdx,[rsp+0x20]
   14000ce6a:	lea    rcx,[rsp+0x430]
   14000ce72:	mov    WORD PTR [rsp+rax*2+0x20],r13w
   14000ce78:	call   0x14000ca0c
   14000ce7d:	test   eax,eax
   14000ce7f:	jne    0x14000ce85
   14000ce81:	xor    eax,eax
   14000ce83:	jmp    0x14000ce8a
   14000ce85:	mov    eax,0x1
   14000ce8a:	mov    rcx,QWORD PTR [rsp+0x840]
   14000ce92:	xor    rcx,rsp
   14000ce95:	call   0x140012670
   14000ce9a:	lea    r11,[rsp+0x850]
   14000cea2:	mov    rbp,QWORD PTR [r11+0x28]
   14000cea6:	mov    rsi,QWORD PTR [r11+0x30]
   14000ceaa:	mov    rdi,QWORD PTR [r11+0x38]
   14000ceae:	mov    rsp,r11
   14000ceb1:	pop    r14
   14000ceb3:	pop    r13
   14000ceb5:	pop    r12
   14000ceb7:	ret    
   14000ceb8:	mov    QWORD PTR [rsp+0x8],rbx
   14000cebd:	mov    QWORD PTR [rsp+0x10],rbp
   14000cec2:	mov    QWORD PTR [rsp+0x18],rsi
   14000cec7:	push   rdi
   14000cec8:	sub    rsp,0x40
   14000cecc:	cmp    QWORD PTR [rcx],0x0
   14000ced0:	mov    edi,r9d
   14000ced3:	mov    rsi,r8
   14000ced6:	mov    rbp,rdx
   14000ced9:	mov    rbx,rcx
   14000cedc:	je     0x14000cf2f
   14000cede:	lea    rcx,[rip+0x23323]        # 0x140030208
   14000cee5:	call   QWORD PTR [rip+0x2211d]        # 0x14002f008
   14000ceeb:	test   rax,rax
   14000ceee:	je     0x14000cf55
   14000cef0:	lea    rdx,[rip+0x232f9]        # 0x1400301f0
   14000cef7:	mov    rcx,rax
   14000cefa:	call   QWORD PTR [rip+0x22118]        # 0x14002f018
   14000cf00:	test   rax,rax
   14000cf03:	je     0x14000cf55
   14000cf05:	mov    rcx,QWORD PTR [rbx]
   14000cf08:	and    QWORD PTR [rsp+0x30],0x0
   14000cf0e:	mov    r9d,DWORD PTR [rsp+0x70]
   14000cf13:	mov    QWORD PTR [rsp+0x28],rcx
   14000cf18:	mov    rcx,QWORD PTR [rsp+0x78]
   14000cf1d:	mov    r8d,edi
   14000cf20:	mov    QWORD PTR [rsp+0x20],rcx
   14000cf25:	mov    rcx,rbp
   14000cf28:	mov    rdx,rsi
   14000cf2b:	call   rax
   14000cf2d:	jmp    0x14000cf5a
   14000cf2f:	cmp    DWORD PTR [rcx+0x8],0x0
   14000cf33:	je     0x14000cf55
   14000cf35:	mov    rax,QWORD PTR [rsp+0x78]
   14000cf3a:	mov    r9d,DWORD PTR [rsp+0x70]
   14000cf3f:	mov    r8d,edi
   14000cf42:	mov    rdx,rsi
   14000cf45:	mov    rcx,rbp
   14000cf48:	mov    QWORD PTR [rsp+0x20],rax
   14000cf4d:	call   QWORD PTR [rip+0x3441d]        # 0x140041370
   14000cf53:	jmp    0x14000cf5a
   14000cf55:	mov    eax,0x1
   14000cf5a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cf5f:	mov    rbp,QWORD PTR [rsp+0x58]
   14000cf64:	mov    rsi,QWORD PTR [rsp+0x60]
   14000cf69:	add    rsp,0x40
   14000cf6d:	pop    rdi
   14000cf6e:	ret    
   14000cf6f:	int3   
   14000cf70:	mov    QWORD PTR [rsp+0x8],rbx
   14000cf75:	mov    QWORD PTR [rsp+0x10],rsi
   14000cf7a:	push   rdi
   14000cf7b:	sub    rsp,0x30
   14000cf7f:	cmp    QWORD PTR [rcx],0x0
   14000cf83:	mov    rdi,r8
   14000cf86:	mov    rsi,rdx
   14000cf89:	mov    rbx,rcx
   14000cf8c:	je     0x14000cfd3
   14000cf8e:	lea    rcx,[rip+0x23273]        # 0x140030208
   14000cf95:	call   QWORD PTR [rip+0x2206d]        # 0x14002f008
   14000cf9b:	test   rax,rax
   14000cf9e:	je     0x14000cfe7
   14000cfa0:	lea    rdx,[rip+0x23281]        # 0x140030228
   14000cfa7:	mov    rcx,rax
   14000cfaa:	call   QWORD PTR [rip+0x22068]        # 0x14002f018
   14000cfb0:	test   rax,rax
   14000cfb3:	je     0x14000cfe7
   14000cfb5:	mov    rcx,QWORD PTR [rbx]
   14000cfb8:	and    QWORD PTR [rsp+0x28],0x0
   14000cfbe:	xor    r9d,r9d
   14000cfc1:	mov    QWORD PTR [rsp+0x20],rcx
   14000cfc6:	xor    r8d,r8d
   14000cfc9:	mov    rdx,rdi
   14000cfcc:	mov    rcx,rsi
   14000cfcf:	call   rax
   14000cfd1:	jmp    0x14000cfec
   14000cfd3:	cmp    DWORD PTR [rcx+0x8],0x0
   14000cfd7:	je     0x14000cfe7
   14000cfd9:	mov    rdx,r8
   14000cfdc:	mov    rcx,rsi
   14000cfdf:	call   QWORD PTR [rip+0x3439b]        # 0x140041380
   14000cfe5:	jmp    0x14000cfec
   14000cfe7:	mov    eax,0x1
   14000cfec:	mov    rbx,QWORD PTR [rsp+0x40]
   14000cff1:	mov    rsi,QWORD PTR [rsp+0x48]
   14000cff6:	add    rsp,0x30
   14000cffa:	pop    rdi
   14000cffb:	ret    
   14000cffc:	mov    QWORD PTR [rsp+0x8],rbx
   14000d001:	push   rdi
   14000d002:	sub    rsp,0x20
   14000d006:	mov    rbx,rcx
   14000d009:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d00d:	mov    rdi,rdx
   14000d010:	test   rcx,rcx
   14000d013:	je     0x14000d022
   14000d015:	mov    r8,rdx
   14000d018:	mov    rdx,QWORD PTR [rbx]
   14000d01b:	call   0x14000cf70
   14000d020:	jmp    0x14000d089
   14000d022:	cmp    BYTE PTR [rip+0x482bf],0x0        # 0x1400552e8
   14000d029:	jne    0x14000d066
   14000d02b:	lea    rcx,[rip+0x231d6]        # 0x140030208
   14000d032:	call   QWORD PTR [rip+0x21fd0]        # 0x14002f008
   14000d038:	test   rax,rax
   14000d03b:	je     0x14000d056
   14000d03d:	lea    rdx,[rip+0x231fc]        # 0x140030240
   14000d044:	mov    rcx,rax
   14000d047:	call   QWORD PTR [rip+0x21fcb]        # 0x14002f018
   14000d04d:	mov    QWORD PTR [rip+0x4828c],rax        # 0x1400552e0
   14000d054:	jmp    0x14000d05d
   14000d056:	mov    rax,QWORD PTR [rip+0x48283]        # 0x1400552e0
   14000d05d:	mov    BYTE PTR [rip+0x48284],0x1        # 0x1400552e8
   14000d064:	jmp    0x14000d06d
   14000d066:	mov    rax,QWORD PTR [rip+0x48273]        # 0x1400552e0
   14000d06d:	mov    rcx,QWORD PTR [rbx]
   14000d070:	mov    rdx,rdi
   14000d073:	test   rax,rax
   14000d076:	je     0x14000d083
   14000d078:	mov    r8d,DWORD PTR [rbx+0x8]
   14000d07c:	xor    r9d,r9d
   14000d07f:	call   rax
   14000d081:	jmp    0x14000d089
   14000d083:	call   QWORD PTR [rip+0x342f7]        # 0x140041380
   14000d089:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d08e:	add    rsp,0x20
   14000d092:	pop    rdi
   14000d093:	ret    
   14000d094:	mov    r11,rsp
   14000d097:	mov    QWORD PTR [r11+0x10],rbx
   14000d09b:	push   rdi
   14000d09c:	sub    rsp,0x30
   14000d0a0:	and    QWORD PTR [r11+0x8],0x0
   14000d0a5:	mov    rbx,rcx
   14000d0a8:	mov    rcx,QWORD PTR [rcx+0x10]
   14000d0ac:	mov    edi,r9d
   14000d0af:	mov    rax,r8
   14000d0b2:	mov    r10,rdx
   14000d0b5:	test   rcx,rcx
   14000d0b8:	je     0x14000d0d3
   14000d0ba:	lea    rdx,[r11+0x8]
   14000d0be:	mov    QWORD PTR [r11-0x10],rdx
   14000d0c2:	mov    DWORD PTR [r11-0x18],r9d
   14000d0c6:	xor    r9d,r9d
   14000d0c9:	mov    rdx,r10
   14000d0cc:	call   0x14000ceb8
   14000d0d1:	jmp    0x14000d0ec
   14000d0d3:	lea    rcx,[rsp+0x40]
   14000d0d8:	xor    r8d,r8d
   14000d0db:	mov    rdx,rax
   14000d0de:	mov    QWORD PTR [rsp+0x20],rcx
   14000d0e3:	mov    rcx,r10
   14000d0e6:	call   QWORD PTR [rip+0x34284]        # 0x140041370
   14000d0ec:	mov    r11d,eax
   14000d0ef:	test   eax,eax
   14000d0f1:	jne    0x14000d119
   14000d0f3:	mov    rcx,QWORD PTR [rbx]
   14000d0f6:	test   rcx,rcx
   14000d0f9:	je     0x14000d108
   14000d0fb:	call   QWORD PTR [rip+0x3425f]        # 0x140041360
   14000d101:	and    QWORD PTR [rbx],0x0
   14000d105:	mov    r11d,eax
   14000d108:	mov    rax,QWORD PTR [rsp+0x40]
   14000d10d:	and    edi,0x300
   14000d113:	mov    QWORD PTR [rbx],rax
   14000d116:	mov    DWORD PTR [rbx+0x8],edi
   14000d119:	mov    eax,r11d
   14000d11c:	mov    rbx,QWORD PTR [rsp+0x48]
   14000d121:	add    rsp,0x30
   14000d125:	pop    rdi
   14000d126:	ret    
   14000d127:	int3   
   14000d128:	mov    r11,rsp
   14000d12b:	mov    QWORD PTR [r11+0x8],rbx
   14000d12f:	mov    QWORD PTR [r11+0x10],rsi
   14000d133:	push   rdi
   14000d134:	sub    rsp,0x40
   14000d138:	mov    eax,DWORD PTR [r9]
   14000d13b:	mov    rbx,r8
   14000d13e:	mov    rdi,r9
   14000d141:	add    eax,eax
   14000d143:	xor    esi,esi
   14000d145:	xor    r8d,r8d
   14000d148:	mov    DWORD PTR [r9],esi
   14000d14b:	mov    rcx,QWORD PTR [rcx]
   14000d14e:	mov    DWORD PTR [rsp+0x30],eax
   14000d152:	lea    rax,[r11-0x18]
   14000d156:	lea    r9,[r11+0x20]
   14000d15a:	mov    QWORD PTR [r11-0x20],rax
   14000d15e:	mov    QWORD PTR [r11-0x28],rbx
   14000d162:	call   QWORD PTR [rip+0x34200]        # 0x140041368
   14000d168:	test   eax,eax
   14000d16a:	jne    0x14000d1aa
   14000d16c:	cmp    DWORD PTR [rsp+0x68],0x1
   14000d171:	je     0x14000d181
   14000d173:	cmp    DWORD PTR [rsp+0x68],0x2
   14000d178:	je     0x14000d181
   14000d17a:	mov    eax,0xd
   14000d17f:	jmp    0x14000d1aa
   14000d181:	mov    ecx,DWORD PTR [rsp+0x30]
   14000d185:	test   rbx,rbx
   14000d188:	je     0x14000d1a4
   14000d18a:	test   ecx,ecx
   14000d18c:	je     0x14000d1a1
   14000d18e:	test   cl,0x1
   14000d191:	jne    0x14000d17a
   14000d193:	mov    eax,ecx
   14000d195:	shr    rax,1
   14000d198:	cmp    WORD PTR [rbx+rax*2-0x2],si
   14000d19d:	je     0x14000d1a4
   14000d19f:	jmp    0x14000d17a
   14000d1a1:	mov    WORD PTR [rbx],si
   14000d1a4:	shr    ecx,1
   14000d1a6:	xor    eax,eax
   14000d1a8:	mov    DWORD PTR [rdi],ecx
   14000d1aa:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d1af:	mov    rsi,QWORD PTR [rsp+0x58]
   14000d1b4:	add    rsp,0x40
   14000d1b8:	pop    rdi
   14000d1b9:	ret    
   14000d1ba:	int3   
   14000d1bb:	int3   
   14000d1bc:	lea    eax,[rcx+rdx*1]
   14000d1bf:	cmp    eax,edx
   14000d1c1:	jae    0x14000d1c9
   14000d1c3:	mov    eax,0x80070216
   14000d1c8:	ret    
   14000d1c9:	mov    DWORD PTR [r8],eax
   14000d1cc:	xor    eax,eax
   14000d1ce:	ret    
   14000d1cf:	int3   
   14000d1d0:	int3   
   14000d1d1:	int3   
   14000d1d2:	int3   
   14000d1d3:	int3   
   14000d1d4:	int3   
   14000d1d5:	int3   
   14000d1d6:	int3   
   14000d1d7:	int3   
   14000d1d8:	int3   
   14000d1d9:	int3   
   14000d1da:	int3   
   14000d1db:	int3   
   14000d1dc:	mov    eax,edx
   14000d1de:	mov    r9d,ecx
   14000d1e1:	imul   r9,rax
   14000d1e5:	mov    eax,0xffffffff
   14000d1ea:	cmp    r9,rax
   14000d1ed:	ja     0x14000d1f5
   14000d1ef:	mov    DWORD PTR [r8],r9d
   14000d1f2:	xor    eax,eax
   14000d1f4:	ret    
   14000d1f5:	mov    eax,0x80070216
   14000d1fa:	ret    
   14000d1fb:	int3   
   14000d1fc:	int3   
   14000d1fd:	int3   
   14000d1fe:	int3   
   14000d1ff:	int3   
   14000d200:	int3   
   14000d201:	int3   
   14000d202:	int3   
   14000d203:	int3   
   14000d204:	int3   
   14000d205:	int3   
   14000d206:	int3   
   14000d207:	int3   
   14000d208:	int3   
   14000d209:	int3   
   14000d20a:	int3   
   14000d20b:	int3   
   14000d20c:	rex push rbx
   14000d20e:	sub    rsp,0x20
   14000d212:	cmp    DWORD PTR [rdx+0x20],0x0
   14000d216:	mov    r8,QWORD PTR [rdx+0x28]
   14000d21a:	lea    rax,[rip+0x224df]        # 0x14002f700
   14000d221:	mov    rbx,rdx
   14000d224:	mov    rdx,QWORD PTR [rdx+0x18]
   14000d228:	lea    rcx,[rip+0x22521]        # 0x14002f750
   14000d22f:	cmovne rcx,rax
   14000d233:	call   0x14000fec8
   14000d238:	mov    ecx,DWORD PTR [rbx+0x40]
   14000d23b:	xor    edx,edx
   14000d23d:	or     ecx,0x806d0001
   14000d243:	call   0x14002a9c0
   14000d248:	int3   
   14000d249:	int3   
   14000d24a:	int3   
   14000d24b:	int3   
   14000d24c:	int3   
   14000d24d:	int3   
   14000d24e:	int3   
   14000d24f:	int3   
   14000d250:	int3   
   14000d251:	int3   
   14000d252:	int3   
   14000d253:	int3   
   14000d254:	int3   
   14000d255:	int3   
   14000d256:	int3   
   14000d257:	int3   
   14000d258:	int3   
   14000d259:	int3   
   14000d25a:	int3   
   14000d25b:	int3   
   14000d25c:	lea    rax,[rip+0xffffffffffffffa9]        # 0x14000d20c
   14000d263:	mov    QWORD PTR [rip+0x480c6],rax        # 0x140055330
   14000d26a:	mov    eax,0x1
   14000d26f:	ret    
   14000d270:	int3   
   14000d271:	int3   
   14000d272:	int3   
   14000d273:	int3   
   14000d274:	int3   
   14000d275:	int3   
   14000d276:	int3   
   14000d277:	int3   
   14000d278:	int3   
   14000d279:	int3   
   14000d27a:	int3   
   14000d27b:	int3   
   14000d27c:	mov    r11,rsp
   14000d27f:	mov    QWORD PTR [r11+0x8],rsi
   14000d283:	mov    QWORD PTR [r11+0x10],rdi
   14000d287:	lea    rsi,[rip+0x22522]        # 0x14002f7b0
   14000d28e:	lea    rdi,[rip+0x2250b]        # 0x14002f7a0
   14000d295:	mov    ecx,0x8
   14000d29a:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000d29d:	mov    rsi,QWORD PTR [r11+0x8]
   14000d2a1:	mov    rdi,QWORD PTR [r11+0x10]
   14000d2a5:	mov    eax,0x0
   14000d2aa:	setae  al
   14000d2ad:	ret    
   14000d2ae:	int3   
   14000d2af:	int3   
   14000d2b0:	int3   
   14000d2b1:	int3   
   14000d2b2:	int3   
   14000d2b3:	int3   
   14000d2b4:	int3   
   14000d2b5:	int3   
   14000d2b6:	int3   
   14000d2b7:	int3   
   14000d2b8:	int3   
   14000d2b9:	int3   
   14000d2ba:	int3   
   14000d2bb:	int3   
   14000d2bc:	rex push rbx
   14000d2be:	sub    rsp,0x20
   14000d2c2:	xor    edx,edx
   14000d2c4:	mov    rbx,rcx
   14000d2c7:	lea    r8d,[rdx+0x40]
   14000d2cb:	call   0x140012fb0
   14000d2d0:	mov    rcx,rbx
   14000d2d3:	mov    DWORD PTR [rbx],0x40
   14000d2d9:	call   QWORD PTR [rip+0x21da1]        # 0x14002f080
   14000d2df:	mov    rax,rbx
   14000d2e2:	add    rsp,0x20
   14000d2e6:	pop    rbx
   14000d2e7:	ret    
   14000d2e8:	int3   
   14000d2e9:	int3   
   14000d2ea:	int3   
   14000d2eb:	int3   
   14000d2ec:	int3   
   14000d2ed:	int3   
   14000d2ee:	int3   
   14000d2ef:	int3   
   14000d2f0:	int3   
   14000d2f1:	int3   
   14000d2f2:	int3   
   14000d2f3:	int3   
   14000d2f4:	int3   
   14000d2f5:	int3   
   14000d2f6:	int3   
   14000d2f7:	int3   
   14000d2f8:	int3   
   14000d2f9:	int3   
   14000d2fa:	int3   
   14000d2fb:	int3   
   14000d2fc:	mov    rax,QWORD PTR [rcx+0x8]
   14000d300:	ret    
   14000d301:	int3   
   14000d302:	int3   
   14000d303:	int3   
   14000d304:	int3   
   14000d305:	int3   
   14000d306:	int3   
   14000d307:	int3   
   14000d308:	int3   
   14000d309:	int3   
   14000d30a:	int3   
   14000d30b:	int3   
   14000d30c:	mov    rax,QWORD PTR [rcx+0x10]
   14000d310:	ret    
   14000d311:	int3   
   14000d312:	int3   
   14000d313:	int3   
   14000d314:	int3   
   14000d315:	int3   
   14000d316:	int3   
   14000d317:	int3   
   14000d318:	int3   
   14000d319:	int3   
   14000d31a:	int3   
   14000d31b:	int3   
   14000d31c:	mov    rax,QWORD PTR [rcx+0x30]
   14000d320:	ret    
   14000d321:	int3   
   14000d322:	int3   
   14000d323:	int3   
   14000d324:	int3   
   14000d325:	int3   
   14000d326:	int3   
   14000d327:	int3   
   14000d328:	int3   
   14000d329:	int3   
   14000d32a:	int3   
   14000d32b:	int3   
   14000d32c:	sub    rsp,0x158
   14000d333:	mov    rax,QWORD PTR [rip+0x325f6]        # 0x14003f930
   14000d33a:	xor    rax,rsp
   14000d33d:	mov    QWORD PTR [rsp+0x140],rax
   14000d345:	lea    rcx,[rsp+0x20]
   14000d34a:	xor    edx,edx
   14000d34c:	mov    r8d,0x114
   14000d352:	call   0x140012fb0
   14000d357:	lea    rcx,[rsp+0x20]
   14000d35c:	mov    DWORD PTR [rsp+0x20],0x114
   14000d364:	call   QWORD PTR [rip+0x21d1e]        # 0x14002f088
   14000d36a:	xor    eax,eax
   14000d36c:	cmp    DWORD PTR [rsp+0x30],0x1
   14000d371:	je     0x14000d37b
   14000d373:	cmp    DWORD PTR [rsp+0x30],0x2
   14000d378:	sete   al
   14000d37b:	mov    rcx,QWORD PTR [rsp+0x140]
   14000d383:	xor    rcx,rsp
   14000d386:	call   0x140012670
   14000d38b:	add    rsp,0x158
   14000d392:	ret    
   14000d393:	int3   
   14000d394:	int3   
   14000d395:	int3   
   14000d396:	int3   
   14000d397:	int3   
   14000d398:	int3   
   14000d399:	int3   
   14000d39a:	int3   
   14000d39b:	int3   
   14000d39c:	sub    rsp,0x158
   14000d3a3:	mov    rax,QWORD PTR [rip+0x32586]        # 0x14003f930
   14000d3aa:	xor    rax,rsp
   14000d3ad:	mov    QWORD PTR [rsp+0x140],rax
   14000d3b5:	cmp    DWORD PTR [rip+0x47f34],0x0        # 0x1400552f0
   14000d3bc:	je     0x14000d3c6
   14000d3be:	mov    eax,DWORD PTR [rip+0x47f28]        # 0x1400552ec
   14000d3c4:	jmp    0x14000d42c
   14000d3c6:	lea    rcx,[rsp+0x20]
   14000d3cb:	xor    edx,edx
   14000d3cd:	mov    r8d,0x114
   14000d3d3:	call   0x140012fb0
   14000d3d8:	lea    rcx,[rsp+0x20]
   14000d3dd:	mov    DWORD PTR [rsp+0x20],0x114
   14000d3e5:	call   QWORD PTR [rip+0x21c9d]        # 0x14002f088
   14000d3eb:	cmp    DWORD PTR [rsp+0x30],0x2
   14000d3f0:	mov    r11d,0x1
   14000d3f6:	ja     0x14000d401
   14000d3f8:	jne    0x14000d41f
   14000d3fa:	cmp    DWORD PTR [rsp+0x24],0x5
   14000d3ff:	jbe    0x14000d40c
   14000d401:	mov    eax,r11d
   14000d404:	mov    DWORD PTR [rip+0x47ee2],eax        # 0x1400552ec
   14000d40a:	jmp    0x14000d425
   14000d40c:	jne    0x14000d41f
   14000d40e:	mov    eax,DWORD PTR [rip+0x47ed8]        # 0x1400552ec
   14000d414:	cmp    DWORD PTR [rsp+0x28],r11d
   14000d419:	cmovae eax,r11d
   14000d41d:	jmp    0x14000d404
   14000d41f:	mov    eax,DWORD PTR [rip+0x47ec7]        # 0x1400552ec
   14000d425:	mov    DWORD PTR [rip+0x47ec4],r11d        # 0x1400552f0
   14000d42c:	mov    rcx,QWORD PTR [rsp+0x140]
   14000d434:	xor    rcx,rsp
   14000d437:	call   0x140012670
   14000d43c:	add    rsp,0x158
   14000d443:	ret    
   14000d444:	int3   
   14000d445:	int3   
   14000d446:	int3   
   14000d447:	int3   
   14000d448:	int3   
   14000d449:	int3   
   14000d44a:	int3   
   14000d44b:	int3   
   14000d44c:	rex push rbx
   14000d44e:	sub    rsp,0x150
   14000d455:	mov    rax,QWORD PTR [rip+0x324d4]        # 0x14003f930
   14000d45c:	xor    rax,rsp
   14000d45f:	mov    QWORD PTR [rsp+0x140],rax
   14000d467:	xor    ebx,ebx
   14000d469:	cmp    DWORD PTR [rip+0x47e89],ebx        # 0x1400552f8
   14000d46f:	je     0x14000d479
   14000d471:	mov    eax,DWORD PTR [rip+0x47e7d]        # 0x1400552f4
   14000d477:	jmp    0x14000d4ea
   14000d479:	lea    rcx,[rsp+0x20]
   14000d47e:	xor    edx,edx
   14000d480:	mov    r8d,0x11c
   14000d486:	call   0x140012fb0
   14000d48b:	mov    edx,0x2
   14000d490:	mov    r8b,0x3
   14000d493:	xor    ecx,ecx
   14000d495:	mov    DWORD PTR [rsp+0x20],0x11c
   14000d49d:	mov    DWORD PTR [rsp+0x24],0x6
   14000d4a5:	mov    DWORD PTR [rsp+0x28],edx
   14000d4a9:	call   QWORD PTR [rip+0x21be9]        # 0x14002f098
   14000d4af:	mov    r8b,0x3
   14000d4b2:	mov    rcx,rax
   14000d4b5:	mov    edx,0x1
   14000d4ba:	call   QWORD PTR [rip+0x21bd8]        # 0x14002f098
   14000d4c0:	lea    rcx,[rsp+0x20]
   14000d4c5:	mov    edx,0x3
   14000d4ca:	mov    r8,rax
   14000d4cd:	call   QWORD PTR [rip+0x21bbd]        # 0x14002f090
   14000d4d3:	mov    DWORD PTR [rip+0x47e1b],0x1        # 0x1400552f8
   14000d4dd:	test   eax,eax
   14000d4df:	setne  bl
   14000d4e2:	mov    DWORD PTR [rip+0x47e0c],ebx        # 0x1400552f4
   14000d4e8:	mov    eax,ebx
   14000d4ea:	mov    rcx,QWORD PTR [rsp+0x140]
   14000d4f2:	xor    rcx,rsp
   14000d4f5:	call   0x140012670
   14000d4fa:	add    rsp,0x150
   14000d501:	pop    rbx
   14000d502:	ret    
   14000d503:	int3   
   14000d504:	int3   
   14000d505:	int3   
   14000d506:	int3   
   14000d507:	int3   
   14000d508:	int3   
   14000d509:	int3   
   14000d50a:	int3   
   14000d50b:	int3   
   14000d50c:	rex push rbx
   14000d50e:	sub    rsp,0x150
   14000d515:	mov    rax,QWORD PTR [rip+0x32414]        # 0x14003f930
   14000d51c:	xor    rax,rsp
   14000d51f:	mov    QWORD PTR [rsp+0x140],rax
   14000d527:	xor    ebx,ebx
   14000d529:	cmp    DWORD PTR [rip+0x47dd1],ebx        # 0x140055300
   14000d52f:	je     0x14000d539
   14000d531:	mov    eax,DWORD PTR [rip+0x47dc5]        # 0x1400552fc
   14000d537:	jmp    0x14000d584
   14000d539:	lea    rcx,[rsp+0x20]
   14000d53e:	xor    edx,edx
   14000d540:	mov    r8d,0x114
   14000d546:	call   0x140012fb0
   14000d54b:	lea    rcx,[rsp+0x20]
   14000d550:	mov    DWORD PTR [rsp+0x20],0x114
   14000d558:	call   QWORD PTR [rip+0x21b2a]        # 0x14002f088
   14000d55e:	cmp    DWORD PTR [rsp+0x30],0x2
   14000d563:	mov    r11d,0x1
   14000d569:	jne    0x14000d575
   14000d56b:	cmp    DWORD PTR [rsp+0x24],0x6
   14000d570:	jb     0x14000d575
   14000d572:	mov    ebx,r11d
   14000d575:	mov    DWORD PTR [rip+0x47d81],ebx        # 0x1400552fc
   14000d57b:	mov    DWORD PTR [rip+0x47d7e],r11d        # 0x140055300
   14000d582:	mov    eax,ebx
   14000d584:	mov    rcx,QWORD PTR [rsp+0x140]
   14000d58c:	xor    rcx,rsp
   14000d58f:	call   0x140012670
   14000d594:	add    rsp,0x150
   14000d59b:	pop    rbx
   14000d59c:	ret    
   14000d59d:	int3   
   14000d59e:	int3   
   14000d59f:	int3   
   14000d5a0:	int3   
   14000d5a1:	int3   
   14000d5a2:	int3   
   14000d5a3:	int3   
   14000d5a4:	int3   
   14000d5a5:	int3   
   14000d5a6:	int3   
   14000d5a7:	int3   
   14000d5a8:	int3   
   14000d5a9:	int3   
   14000d5aa:	int3   
   14000d5ab:	int3   
   14000d5ac:	rex push rbx
   14000d5ae:	sub    rsp,0x150
   14000d5b5:	mov    rax,QWORD PTR [rip+0x32374]        # 0x14003f930
   14000d5bc:	xor    rax,rsp
   14000d5bf:	mov    QWORD PTR [rsp+0x140],rax
   14000d5c7:	xor    ebx,ebx
   14000d5c9:	cmp    DWORD PTR [rip+0x47d39],ebx        # 0x140055308
   14000d5cf:	je     0x14000d5d9
   14000d5d1:	mov    eax,DWORD PTR [rip+0x47d2d]        # 0x140055304
   14000d5d7:	jmp    0x14000d63e
   14000d5d9:	lea    rcx,[rsp+0x20]
   14000d5de:	xor    edx,edx
   14000d5e0:	mov    r8d,0x11c
   14000d5e6:	call   0x140012fb0
   14000d5eb:	lea    rcx,[rsp+0x20]
   14000d5f0:	mov    DWORD PTR [rsp+0x20],0x11c
   14000d5f8:	call   QWORD PTR [rip+0x21a8a]        # 0x14002f088
   14000d5fe:	cmp    DWORD PTR [rsp+0x30],0x2
   14000d603:	mov    r11d,0x1
   14000d609:	jne    0x14000d62f
   14000d60b:	cmp    DWORD PTR [rsp+0x24],0x6
   14000d610:	jne    0x14000d62f
   14000d612:	cmp    DWORD PTR [rsp+0x28],ebx
   14000d616:	jne    0x14000d62f
   14000d618:	cmp    BYTE PTR [rsp+0x13a],r11b
   14000d620:	jne    0x14000d62f
   14000d622:	cmp    WORD PTR [rsp+0x134],bx
   14000d62a:	jne    0x14000d62f
   14000d62c:	mov    ebx,r11d
   14000d62f:	mov    DWORD PTR [rip+0x47ccf],ebx        # 0x140055304
   14000d635:	mov    DWORD PTR [rip+0x47ccc],r11d        # 0x140055308
   14000d63c:	mov    eax,ebx
   14000d63e:	mov    rcx,QWORD PTR [rsp+0x140]
   14000d646:	xor    rcx,rsp
   14000d649:	call   0x140012670
   14000d64e:	add    rsp,0x150
   14000d655:	pop    rbx
   14000d656:	ret    
   14000d657:	int3   
   14000d658:	int3   
   14000d659:	int3   
   14000d65a:	int3   
   14000d65b:	int3   
   14000d65c:	int3   
   14000d65d:	int3   
   14000d65e:	int3   
   14000d65f:	int3   
   14000d660:	int3   
   14000d661:	int3   
   14000d662:	int3   
   14000d663:	int3   
   14000d664:	int3   
   14000d665:	int3   
   14000d666:	int3   
   14000d667:	int3   
   14000d668:	int3   
   14000d669:	int3   
   14000d66a:	int3   
   14000d66b:	int3   
   14000d66c:	rex push rbx
   14000d66e:	sub    rsp,0x20
   14000d672:	and    DWORD PTR [rsp+0x30],0x0
   14000d677:	lea    rcx,[rip+0x22152]        # 0x14002f7d0
   14000d67e:	call   QWORD PTR [rip+0x21984]        # 0x14002f008
   14000d684:	lea    rdx,[rip+0x22135]        # 0x14002f7c0
   14000d68b:	mov    rcx,rax
   14000d68e:	call   QWORD PTR [rip+0x21984]        # 0x14002f018
   14000d694:	mov    rbx,rax
   14000d697:	test   rax,rax
   14000d69a:	je     0x14000d6ac
   14000d69c:	call   QWORD PTR [rip+0x219fe]        # 0x14002f0a0
   14000d6a2:	lea    rdx,[rsp+0x30]
   14000d6a7:	mov    rcx,rax
   14000d6aa:	call   rbx
   14000d6ac:	mov    eax,DWORD PTR [rsp+0x30]
   14000d6b0:	add    rsp,0x20
   14000d6b4:	pop    rbx
   14000d6b5:	ret    
   14000d6b6:	int3   
   14000d6b7:	int3   
   14000d6b8:	int3   
   14000d6b9:	int3   
   14000d6ba:	int3   
   14000d6bb:	int3   
   14000d6bc:	sub    rsp,0x58
   14000d6c0:	xor    edx,edx
   14000d6c2:	lea    rcx,[rsp+0x20]
   14000d6c7:	lea    r8d,[rdx+0x30]
   14000d6cb:	call   0x140012fb0
   14000d6d0:	lea    rcx,[rsp+0x20]
   14000d6d5:	call   QWORD PTR [rip+0x219cd]        # 0x14002f0a8
   14000d6db:	xor    eax,eax
   14000d6dd:	cmp    WORD PTR [rsp+0x20],0x9
   14000d6e3:	sete   al
   14000d6e6:	add    rsp,0x58
   14000d6ea:	ret    
   14000d6eb:	int3   
   14000d6ec:	int3   
   14000d6ed:	int3   
   14000d6ee:	int3   
   14000d6ef:	int3   
   14000d6f0:	int3   
   14000d6f1:	int3   
   14000d6f2:	int3   
   14000d6f3:	int3   
   14000d6f4:	int3   
   14000d6f5:	int3   
   14000d6f6:	int3   
   14000d6f7:	int3   
   14000d6f8:	int3   
   14000d6f9:	int3   
   14000d6fa:	int3   
   14000d6fb:	int3   
   14000d6fc:	rex push rbx
   14000d6fe:	sub    rsp,0x40
   14000d702:	xor    ebx,ebx
   14000d704:	xor    r9d,r9d
   14000d707:	xor    r8d,r8d
   14000d70a:	mov    QWORD PTR [rsp+0x30],rbx
   14000d70f:	mov    edx,0x40000000
   14000d714:	mov    DWORD PTR [rsp+0x28],0x80
   14000d71c:	mov    DWORD PTR [rsp+0x20],0x3
   14000d724:	call   QWORD PTR [rip+0x2198e]        # 0x14002f0b8
   14000d72a:	cmp    rax,0xffffffffffffffff
   14000d72e:	jne    0x14000d740
   14000d730:	call   QWORD PTR [rip+0x2197a]        # 0x14002f0b0
   14000d736:	cmp    eax,0x20
   14000d739:	jne    0x14000d749
   14000d73b:	lea    ebx,[rax-0x1f]
   14000d73e:	jmp    0x14000d749
   14000d740:	mov    rcx,rax
   14000d743:	call   QWORD PTR [rip+0x218ef]        # 0x14002f038
   14000d749:	mov    eax,ebx
   14000d74b:	add    rsp,0x40
   14000d74f:	pop    rbx
   14000d750:	ret    
   14000d751:	int3   
   14000d752:	int3   
   14000d753:	int3   
   14000d754:	int3   
   14000d755:	int3   
   14000d756:	int3   
   14000d757:	int3   
   14000d758:	int3   
   14000d759:	int3   
   14000d75a:	int3   
   14000d75b:	int3   
   14000d75c:	mov    QWORD PTR [rsp+0x10],rbx
   14000d761:	push   rsi
   14000d762:	sub    rsp,0x450
   14000d769:	mov    rax,QWORD PTR [rip+0x321c0]        # 0x14003f930
   14000d770:	xor    rax,rsp
   14000d773:	mov    QWORD PTR [rsp+0x440],rax
   14000d77b:	mov    rbx,rcx
   14000d77e:	lea    rcx,[rsp+0x22]
   14000d783:	xor    esi,esi
   14000d785:	xor    edx,edx
   14000d787:	mov    r8d,0x206
   14000d78d:	mov    WORD PTR [rsp+0x20],si
   14000d792:	call   0x140012fb0
   14000d797:	lea    rcx,[rsp+0x20]
   14000d79c:	mov    edx,0x104
   14000d7a1:	call   QWORD PTR [rip+0x21919]        # 0x14002f0c0
   14000d7a7:	test   eax,eax
   14000d7a9:	je     0x14000d7fc
   14000d7ab:	cmp    eax,0x104
   14000d7b0:	ja     0x14000d7fc
   14000d7b2:	lea    rcx,[rsp+0x232]
   14000d7ba:	xor    edx,edx
   14000d7bc:	mov    r8d,0x206
   14000d7c2:	mov    WORD PTR [rsp+0x230],si
   14000d7ca:	call   0x140012fb0
   14000d7cf:	lea    r8,[rsp+0x20]
   14000d7d4:	lea    rdx,[rip+0x2256d]        # 0x14002fd48
   14000d7db:	lea    rcx,[rsp+0x230]
   14000d7e3:	mov    r9,rbx
   14000d7e6:	call   QWORD PTR [rip+0x21c0c]        # 0x14002f3f8
   14000d7ec:	lea    rcx,[rsp+0x230]
   14000d7f4:	call   QWORD PTR [rip+0x21806]        # 0x14002f000
   14000d7fa:	jmp    0x14000d7fe
   14000d7fc:	xor    eax,eax
   14000d7fe:	mov    rcx,QWORD PTR [rsp+0x440]
   14000d806:	xor    rcx,rsp
   14000d809:	call   0x140012670
   14000d80e:	mov    rbx,QWORD PTR [rsp+0x468]
   14000d816:	add    rsp,0x450
   14000d81d:	pop    rsi
   14000d81e:	ret    
   14000d81f:	int3   
   14000d820:	int3   
   14000d821:	int3   
   14000d822:	int3   
   14000d823:	int3   
   14000d824:	int3   
   14000d825:	int3   
   14000d826:	int3   
   14000d827:	int3   
   14000d828:	int3   
   14000d829:	int3   
   14000d82a:	int3   
   14000d82b:	int3   
   14000d82c:	sub    rsp,0x58
   14000d830:	test   rcx,rcx
   14000d833:	jne    0x14000d839
   14000d835:	xor    eax,eax
   14000d837:	jmp    0x14000d889
   14000d839:	mov    rax,QWORD PTR [rsp+0xa8]
   14000d841:	mov    QWORD PTR [rsp+0x48],rax
   14000d846:	mov    rax,QWORD PTR [rsp+0xa0]
   14000d84e:	mov    QWORD PTR [rsp+0x40],rax
   14000d853:	mov    rax,QWORD PTR [rsp+0x98]
   14000d85b:	mov    QWORD PTR [rsp+0x38],rax
   14000d860:	mov    rax,QWORD PTR [rsp+0x90]
   14000d868:	mov    QWORD PTR [rsp+0x30],rax
   14000d86d:	mov    eax,DWORD PTR [rsp+0x88]
   14000d874:	mov    DWORD PTR [rsp+0x28],eax
   14000d878:	mov    eax,DWORD PTR [rsp+0x80]
   14000d87f:	mov    DWORD PTR [rsp+0x20],eax
   14000d883:	call   QWORD PTR [rip+0x2183f]        # 0x14002f0c8
   14000d889:	add    rsp,0x58
   14000d88d:	ret    
   14000d88e:	int3   
   14000d88f:	int3   
   14000d890:	int3   
   14000d891:	int3   
   14000d892:	int3   
   14000d893:	int3   
   14000d894:	int3   
   14000d895:	int3   
   14000d896:	int3   
   14000d897:	int3   
   14000d898:	int3   
   14000d899:	int3   
   14000d89a:	int3   
   14000d89b:	int3   
   14000d89c:	sub    rsp,0x68
   14000d8a0:	test   rdx,rdx
   14000d8a3:	jne    0x14000d8a9
   14000d8a5:	xor    eax,eax
   14000d8a7:	jmp    0x14000d906
   14000d8a9:	mov    rax,QWORD PTR [rsp+0xc0]
   14000d8b1:	mov    QWORD PTR [rsp+0x50],rax
   14000d8b6:	mov    rax,QWORD PTR [rsp+0xb8]
   14000d8be:	mov    QWORD PTR [rsp+0x48],rax
   14000d8c3:	mov    rax,QWORD PTR [rsp+0xb0]
   14000d8cb:	mov    QWORD PTR [rsp+0x40],rax
   14000d8d0:	mov    rax,QWORD PTR [rsp+0xa8]
   14000d8d8:	mov    QWORD PTR [rsp+0x38],rax
   14000d8dd:	mov    eax,DWORD PTR [rsp+0xa0]
   14000d8e4:	mov    DWORD PTR [rsp+0x30],eax
   14000d8e8:	mov    eax,DWORD PTR [rsp+0x98]
   14000d8ef:	mov    DWORD PTR [rsp+0x28],eax
   14000d8f3:	mov    rax,QWORD PTR [rsp+0x90]
   14000d8fb:	mov    QWORD PTR [rsp+0x20],rax
   14000d900:	call   QWORD PTR [rip+0x33a82]        # 0x140041388
   14000d906:	add    rsp,0x68
   14000d90a:	ret    
   14000d90b:	int3   
   14000d90c:	int3   
   14000d90d:	int3   
   14000d90e:	int3   
   14000d90f:	int3   
   14000d910:	int3   
   14000d911:	int3   
   14000d912:	int3   
   14000d913:	int3   
   14000d914:	int3   
   14000d915:	int3   
   14000d916:	int3   
   14000d917:	int3   
   14000d918:	int3   
   14000d919:	int3   
   14000d91a:	int3   
   14000d91b:	int3   
   14000d91c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d921:	mov    QWORD PTR [rsp+0x10],rsi
   14000d926:	push   rbp
   14000d927:	push   rdi
   14000d928:	push   r12
   14000d92a:	lea    rbp,[rsp-0x47]
   14000d92f:	sub    rsp,0xf0
   14000d936:	mov    rsi,rcx
   14000d939:	mov    ebx,r8d
   14000d93c:	mov    rdi,rdx
   14000d93f:	mov    r12d,0x68
   14000d945:	lea    rcx,[rbp-0x29]
   14000d949:	xor    edx,edx
   14000d94b:	mov    r8d,r12d
   14000d94e:	call   0x140012fb0
   14000d953:	xor    r11d,r11d
   14000d956:	mov    DWORD PTR [rbp-0x29],r12d
   14000d95a:	xor    r12d,r12d
   14000d95d:	mov    QWORD PTR [rbp-0x49],r11
   14000d961:	mov    QWORD PTR [rbp-0x41],r11
   14000d965:	mov    QWORD PTR [rbp-0x39],r11
   14000d969:	mov    DWORD PTR [rbp+0x13],0x1
   14000d970:	mov    WORD PTR [rbp+0x17],r12w
   14000d975:	call   QWORD PTR [rip+0x21725]        # 0x14002f0a0
   14000d97b:	lea    r8,[rbp+0x7f]
   14000d97f:	mov    edx,0x2000000
   14000d984:	mov    rcx,rax
   14000d987:	call   QWORD PTR [rip+0x33a03]        # 0x140041390
   14000d98d:	test   eax,eax
   14000d98f:	je     0x14000d9fc
   14000d991:	mov    rcx,QWORD PTR [rbp+0x7f]
   14000d995:	lea    rax,[rbp-0x49]
   14000d999:	xor    r9d,r9d
   14000d99c:	mov    QWORD PTR [rsp+0x50],rax
   14000d9a1:	lea    rax,[rbp-0x29]
   14000d9a5:	mov    r8,rdi
   14000d9a8:	mov    QWORD PTR [rsp+0x48],rax
   14000d9ad:	mov    QWORD PTR [rsp+0x40],r12
   14000d9b2:	mov    QWORD PTR [rsp+0x38],r12
   14000d9b7:	mov    DWORD PTR [rsp+0x30],0x8000008
   14000d9bf:	mov    rdx,rsi
   14000d9c2:	mov    DWORD PTR [rsp+0x28],r12d
   14000d9c7:	mov    QWORD PTR [rsp+0x20],r12
   14000d9cc:	call   0x14000d89c
   14000d9d1:	test   eax,eax
   14000d9d3:	je     0x14000d9fc
   14000d9d5:	mov    rcx,QWORD PTR [rbp-0x49]
   14000d9d9:	mov    edx,ebx
   14000d9db:	call   QWORD PTR [rip+0x2165f]        # 0x14002f040
   14000d9e1:	mov    rcx,QWORD PTR [rbp-0x49]
   14000d9e5:	call   QWORD PTR [rip+0x2164d]        # 0x14002f038
   14000d9eb:	mov    rcx,QWORD PTR [rbp-0x41]
   14000d9ef:	call   QWORD PTR [rip+0x21643]        # 0x14002f038
   14000d9f5:	lea    eax,[r12+0x1]
   14000d9fa:	jmp    0x14000d9fe
   14000d9fc:	xor    eax,eax
   14000d9fe:	lea    r11,[rsp+0xf0]
   14000da06:	mov    rbx,QWORD PTR [r11+0x20]
   14000da0a:	mov    rsi,QWORD PTR [r11+0x28]
   14000da0e:	mov    rsp,r11
   14000da11:	pop    r12
   14000da13:	pop    rdi
   14000da14:	pop    rbp
   14000da15:	ret    
   14000da16:	int3   
   14000da17:	int3   
   14000da18:	int3   
   14000da19:	int3   
   14000da1a:	int3   
   14000da1b:	int3   
   14000da1c:	mov    rax,rsp
   14000da1f:	mov    QWORD PTR [rax+0x10],rbx
   14000da23:	mov    QWORD PTR [rax+0x18],rsi
   14000da27:	mov    QWORD PTR [rax+0x20],rdi
   14000da2b:	push   rbp
   14000da2c:	lea    rbp,[rax-0x2758]
   14000da33:	mov    eax,0x2850
   14000da38:	call   0x140012f50
   14000da3d:	sub    rsp,rax
   14000da40:	mov    rax,QWORD PTR [rip+0x31ee9]        # 0x14003f930
   14000da47:	xor    rax,rsp
   14000da4a:	mov    QWORD PTR [rbp+0x2740],rax
   14000da51:	mov    rbx,rcx
   14000da54:	lea    rcx,[rbp+0x1742]
   14000da5b:	xor    edi,edi
   14000da5d:	xor    edx,edx
   14000da5f:	mov    r8d,0xffe
   14000da65:	mov    WORD PTR [rbp+0x1740],di
   14000da6c:	call   0x140012fb0
   14000da71:	mov    esi,0x800
   14000da76:	lea    r9,[rip+0x222e3]        # 0x14002fd60
   14000da7d:	lea    r8,[rip+0x22334]        # 0x14002fdb8
   14000da84:	lea    rcx,[rbp+0x1740]
   14000da8b:	mov    edx,esi
   14000da8d:	mov    QWORD PTR [rsp+0x20],rbx
   14000da92:	call   0x140013d5c
   14000da97:	lea    r11,[rsp+0x38]
   14000da9c:	lea    rdx,[rbp+0x1740]
   14000daa3:	mov    r9d,0x20019
   14000daa9:	xor    r8d,r8d
   14000daac:	mov    rcx,0xffffffff80000002
   14000dab3:	mov    QWORD PTR [rsp+0x20],r11
   14000dab8:	call   QWORD PTR [rip+0x338b2]        # 0x140041370
   14000dabe:	test   eax,eax
   14000dac0:	jne    0x14000dbd2
   14000dac6:	mov    rcx,QWORD PTR [rsp+0x38]
   14000dacb:	lea    rax,[rsp+0x30]
   14000dad0:	lea    rdx,[rip+0x222f1]        # 0x14002fdc8
   14000dad7:	mov    QWORD PTR [rsp+0x28],rax
   14000dadc:	lea    rax,[rsp+0x40]
   14000dae1:	xor    r9d,r9d
   14000dae4:	xor    r8d,r8d
   14000dae7:	mov    DWORD PTR [rsp+0x30],esi
   14000daeb:	mov    QWORD PTR [rsp+0x20],rax
   14000daf0:	call   QWORD PTR [rip+0x33872]        # 0x140041368
   14000daf6:	mov    rcx,QWORD PTR [rsp+0x38]
   14000dafb:	mov    ebx,eax
   14000dafd:	call   QWORD PTR [rip+0x3385d]        # 0x140041360
   14000db03:	test   ebx,ebx
   14000db05:	jne    0x14000dbd2
   14000db0b:	lea    rcx,[rbp+0x742]
   14000db12:	xor    edx,edx
   14000db14:	mov    r8d,0xffe
   14000db1a:	mov    WORD PTR [rbp+0x740],di
   14000db21:	call   0x140012fb0
   14000db26:	lea    r11,[rip+0x222b3]        # 0x14002fde0
   14000db2d:	lea    r9,[rsp+0x40]
   14000db32:	lea    r8,[rip+0x222c7]        # 0x14002fe00
   14000db39:	lea    rcx,[rbp+0x740]
   14000db40:	mov    edx,esi
   14000db42:	mov    QWORD PTR [rsp+0x20],r11
   14000db47:	call   0x140013d5c
   14000db4c:	lea    rcx,[rbp+0x740]
   14000db53:	call   QWORD PTR [rip+0x3388f]        # 0x1400413e8
   14000db59:	test   eax,eax
   14000db5b:	je     0x14000dbd2
   14000db5d:	lea    rax,[rip+0x222ac]        # 0x14002fe10
   14000db64:	lea    r9,[rsp+0x40]
   14000db69:	lea    r8,[rip+0x222c8]        # 0x14002fe38
   14000db70:	lea    rcx,[rbp+0x740]
   14000db77:	mov    edx,esi
   14000db79:	mov    QWORD PTR [rsp+0x20],rax
   14000db7e:	call   0x140013d5c
   14000db83:	lea    rcx,[rbp+0x740]
   14000db8a:	call   QWORD PTR [rip+0x33858]        # 0x1400413e8
   14000db90:	lea    r9,[rsp+0x40]
   14000db95:	lea    r8,[rip+0x222d4]        # 0x14002fe70
   14000db9c:	mov    ebx,eax
   14000db9e:	lea    rax,[rip+0x222a3]        # 0x14002fe48
   14000dba5:	lea    rcx,[rbp+0x740]
   14000dbac:	mov    edx,esi
   14000dbae:	mov    QWORD PTR [rsp+0x20],rax
   14000dbb3:	call   0x140013d5c
   14000dbb8:	lea    rcx,[rbp+0x740]
   14000dbbf:	call   QWORD PTR [rip+0x33823]        # 0x1400413e8
   14000dbc5:	test   ebx,ebx
   14000dbc7:	jne    0x14000dbcd
   14000dbc9:	test   eax,eax
   14000dbcb:	je     0x14000dbd2
   14000dbcd:	mov    edi,0x1
   14000dbd2:	mov    eax,edi
   14000dbd4:	mov    rcx,QWORD PTR [rbp+0x2740]
   14000dbdb:	xor    rcx,rsp
   14000dbde:	call   0x140012670
   14000dbe3:	lea    r11,[rsp+0x2850]
   14000dbeb:	mov    rbx,QWORD PTR [r11+0x18]
   14000dbef:	mov    rsi,QWORD PTR [r11+0x20]
   14000dbf3:	mov    rdi,QWORD PTR [r11+0x28]
   14000dbf7:	mov    rsp,r11
   14000dbfa:	pop    rbp
   14000dbfb:	ret    
   14000dbfc:	int3   
   14000dbfd:	int3   
   14000dbfe:	int3   
   14000dbff:	int3   
   14000dc00:	int3   
   14000dc01:	int3   
   14000dc02:	int3   
   14000dc03:	int3   
   14000dc04:	int3   
   14000dc05:	int3   
   14000dc06:	int3   
   14000dc07:	int3   
   14000dc08:	int3   
   14000dc09:	int3   
   14000dc0a:	int3   
   14000dc0b:	int3   
   14000dc0c:	sub    rsp,0x58
   14000dc10:	lea    rax,[rip+0x22269]        # 0x14002fe80
   14000dc17:	mov    QWORD PTR [rsp+0x40],rax
   14000dc1c:	mov    DWORD PTR [rsp+0x38],r9d
   14000dc21:	mov    DWORD PTR [rsp+0x30],r8d
   14000dc26:	mov    DWORD PTR [rsp+0x28],edx
   14000dc2a:	mov    rdx,QWORD PTR [rsp+0x88]
   14000dc32:	mov    DWORD PTR [rsp+0x20],ecx
   14000dc36:	mov    rcx,QWORD PTR [rsp+0x80]
   14000dc3e:	lea    r9,[rip+0x2225b]        # 0x14002fea0
   14000dc45:	lea    r8,[rip+0x2226c]        # 0x14002feb8
   14000dc4c:	call   0x140013d5c
   14000dc51:	add    rsp,0x58
   14000dc55:	ret    
   14000dc56:	int3   
   14000dc57:	int3   
   14000dc58:	int3   
   14000dc59:	int3   
   14000dc5a:	int3   
   14000dc5b:	int3   
   14000dc5c:	sub    rsp,0x58
   14000dc60:	lea    rax,[rip+0x22281]        # 0x14002fee8
   14000dc67:	mov    QWORD PTR [rsp+0x40],rax
   14000dc6c:	mov    DWORD PTR [rsp+0x38],r9d
   14000dc71:	mov    DWORD PTR [rsp+0x30],r8d
   14000dc76:	mov    DWORD PTR [rsp+0x28],edx
   14000dc7a:	mov    rdx,QWORD PTR [rsp+0x88]
   14000dc82:	mov    DWORD PTR [rsp+0x20],ecx
   14000dc86:	mov    rcx,QWORD PTR [rsp+0x80]
   14000dc8e:	lea    r9,[rip+0x22273]        # 0x14002ff08
   14000dc95:	lea    r8,[rip+0x22284]        # 0x14002ff20
   14000dc9c:	call   0x140013d5c
   14000dca1:	add    rsp,0x58
   14000dca5:	ret    
   14000dca6:	int3   
   14000dca7:	int3   
   14000dca8:	int3   
   14000dca9:	int3   
   14000dcaa:	int3   
   14000dcab:	int3   
   14000dcac:	sub    rsp,0x58
   14000dcb0:	lea    rax,[rip+0x22299]        # 0x14002ff50
   14000dcb7:	mov    QWORD PTR [rsp+0x40],rax
   14000dcbc:	mov    DWORD PTR [rsp+0x38],r9d
   14000dcc1:	mov    DWORD PTR [rsp+0x30],r8d
   14000dcc6:	mov    DWORD PTR [rsp+0x28],edx
   14000dcca:	mov    rdx,QWORD PTR [rsp+0x88]
   14000dcd2:	mov    DWORD PTR [rsp+0x20],ecx
   14000dcd6:	mov    rcx,QWORD PTR [rsp+0x80]
   14000dcde:	lea    r9,[rip+0x2228b]        # 0x14002ff70
   14000dce5:	lea    r8,[rip+0x2229c]        # 0x14002ff88
   14000dcec:	call   0x140013d5c
   14000dcf1:	add    rsp,0x58
   14000dcf5:	ret    
   14000dcf6:	int3   
   14000dcf7:	int3   
   14000dcf8:	int3   
   14000dcf9:	int3   
   14000dcfa:	int3   
   14000dcfb:	int3   
   14000dcfc:	mov    QWORD PTR [rsp+0x10],rbx
   14000dd01:	mov    QWORD PTR [rsp+0x20],rsi
   14000dd06:	push   rbp
   14000dd07:	push   rdi
   14000dd08:	push   r12
   14000dd0a:	lea    rbp,[rsp-0xf50]
   14000dd12:	mov    eax,0x1050
   14000dd17:	call   0x140012f50
   14000dd1c:	sub    rsp,rax
   14000dd1f:	mov    rax,QWORD PTR [rip+0x31c0a]        # 0x14003f930
   14000dd26:	xor    rax,rsp
   14000dd29:	mov    QWORD PTR [rbp+0xf40],rax
   14000dd30:	mov    rbx,rcx
   14000dd33:	mov    edi,r8d
   14000dd36:	mov    r12,rdx
   14000dd39:	lea    rcx,[rsp+0x42]
   14000dd3e:	xor    esi,esi
   14000dd40:	xor    edx,edx
   14000dd42:	mov    r8d,0x7fe
   14000dd48:	mov    WORD PTR [rsp+0x40],si
   14000dd4d:	call   0x140012fb0
   14000dd52:	lea    r8,[rip+0x222b7]        # 0x140030010
   14000dd59:	lea    rcx,[rsp+0x40]
   14000dd5e:	mov    r9,rbx
   14000dd61:	mov    edx,0x400
   14000dd66:	call   0x140013d5c
   14000dd6b:	lea    rax,[rsp+0x30]
   14000dd70:	neg    edi
   14000dd72:	sbb    rcx,rcx
   14000dd75:	lea    rdx,[rsp+0x40]
   14000dd7a:	mov    r9d,0x20019
   14000dd80:	add    rcx,0xffffffff80000002
   14000dd87:	xor    r8d,r8d
   14000dd8a:	mov    QWORD PTR [rsp+0x20],rax
   14000dd8f:	call   QWORD PTR [rip+0x335db]        # 0x140041370
   14000dd95:	test   eax,eax
   14000dd97:	je     0x14000dda2
   14000dd99:	cmp    eax,0x2
   14000dd9c:	sete   sil
   14000dda0:	jmp    0x14000de07
   14000dda2:	mov    rcx,QWORD PTR [rsp+0x30]
   14000dda7:	lea    r9,[rsp+0x38]
   14000ddac:	lea    r8,[rbp+0x740]
   14000ddb3:	lea    rdx,[rip+0x2184a]        # 0x14002f604
   14000ddba:	mov    DWORD PTR [rsp+0x38],0x800
   14000ddc2:	call   QWORD PTR [rip+0x335d0]        # 0x140041398
   14000ddc8:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ddcd:	test   eax,eax
   14000ddcf:	je     0x14000dddb
   14000ddd1:	call   QWORD PTR [rip+0x33589]        # 0x140041360
   14000ddd7:	xor    eax,eax
   14000ddd9:	jmp    0x14000de09
   14000dddb:	call   QWORD PTR [rip+0x3357f]        # 0x140041360
   14000dde1:	lea    rdx,[rbp+0x740]
   14000dde8:	sub    rdx,r12
   14000ddeb:	movzx  eax,WORD PTR [r12]
   14000ddf0:	movzx  ecx,WORD PTR [r12+rdx*1]
   14000ddf5:	sub    eax,ecx
   14000ddf7:	jne    0x14000de01
   14000ddf9:	add    r12,0x2
   14000ddfd:	test   ecx,ecx
   14000ddff:	jne    0x14000ddeb
   14000de01:	test   eax,eax
   14000de03:	setne  sil
   14000de07:	mov    eax,esi
   14000de09:	mov    rcx,QWORD PTR [rbp+0xf40]
   14000de10:	xor    rcx,rsp
   14000de13:	call   0x140012670
   14000de18:	lea    r11,[rsp+0x1050]
   14000de20:	mov    rbx,QWORD PTR [r11+0x28]
   14000de24:	mov    rsi,QWORD PTR [r11+0x38]
   14000de28:	mov    rsp,r11
   14000de2b:	pop    r12
   14000de2d:	pop    rdi
   14000de2e:	pop    rbp
   14000de2f:	ret    
   14000de30:	int3   
   14000de31:	int3   
   14000de32:	int3   
   14000de33:	int3   
   14000de34:	int3   
   14000de35:	int3   
   14000de36:	int3   
   14000de37:	int3   
   14000de38:	int3   
   14000de39:	int3   
   14000de3a:	int3   
   14000de3b:	int3   
   14000de3c:	rex push rbp
   14000de3e:	push   rbx
   14000de3f:	push   rsi
   14000de40:	push   rdi
   14000de41:	push   r12
   14000de43:	push   r13
   14000de45:	push   r14
   14000de47:	push   r15
   14000de49:	lea    rbp,[rsp-0x17]
   14000de4e:	sub    rsp,0xb8
   14000de55:	mov    rax,QWORD PTR [rip+0x31ad4]        # 0x14003f930
   14000de5c:	xor    rax,rsp
   14000de5f:	mov    QWORD PTR [rbp+0x7],rax
   14000de63:	mov    r14,QWORD PTR [rbp+0x7f]
   14000de67:	xor    eax,eax
   14000de69:	xor    esi,esi
   14000de6b:	mov    QWORD PTR [rsp+0x20],r9
   14000de70:	mov    r13,r8
   14000de73:	mov    rbx,rdx
   14000de76:	mov    WORD PTR [rbp-0x79],si
   14000de7a:	mov    QWORD PTR [rbp-0x77],rax
   14000de7e:	mov    QWORD PTR [rbp-0x6f],rax
   14000de82:	mov    QWORD PTR [rbp-0x67],rax
   14000de86:	mov    DWORD PTR [rbp-0x5f],eax
   14000de89:	mov    WORD PTR [rbp-0x5b],ax
   14000de8d:	mov    WORD PTR [rbp-0x59],si
   14000de91:	mov    QWORD PTR [rbp-0x57],rax
   14000de95:	mov    QWORD PTR [rbp-0x4f],rax
   14000de99:	mov    QWORD PTR [rbp-0x47],rax
   14000de9d:	mov    DWORD PTR [rbp-0x3f],eax
   14000dea0:	mov    WORD PTR [rbp-0x3b],ax
   14000dea4:	mov    WORD PTR [rbp-0x39],si
   14000dea8:	mov    QWORD PTR [rbp-0x37],rax
   14000deac:	mov    QWORD PTR [rbp-0x2f],rax
   14000deb0:	mov    QWORD PTR [rbp-0x27],rax
   14000deb4:	mov    DWORD PTR [rbp-0x1f],eax
   14000deb7:	mov    WORD PTR [rbp-0x1b],ax
   14000debb:	mov    WORD PTR [rbp-0x19],si
   14000debf:	mov    QWORD PTR [rbp-0x17],rax
   14000dec3:	mov    QWORD PTR [rbp-0xf],rax
   14000dec7:	mov    QWORD PTR [rbp-0x7],rax
   14000decb:	mov    DWORD PTR [rbp+0x1],eax
   14000dece:	mov    WORD PTR [rbp+0x5],ax
   14000ded2:	mov    rdi,rcx
   14000ded5:	test   rcx,rcx
   14000ded8:	je     0x14000e08c
   14000dede:	call   QWORD PTR [rip+0x211ec]        # 0x14002f0d0
   14000dee4:	lea    r12d,[rsi+0x10]
   14000dee8:	lea    r8,[rip+0x21725]        # 0x14002f614
   14000deef:	lea    rcx,[rbp-0x79]
   14000def3:	mov    edx,r12d
   14000def6:	movsxd r15,eax
   14000def9:	call   0x140016c68
   14000defe:	lea    r8,[rip+0x2173f]        # 0x14002f644
   14000df05:	lea    rcx,[rbp-0x59]
   14000df09:	mov    edx,r12d
   14000df0c:	call   0x140016c68
   14000df11:	lea    r8,[rip+0x21744]        # 0x14002f65c
   14000df18:	lea    rcx,[rbp-0x39]
   14000df1c:	mov    edx,r12d
   14000df1f:	call   0x140016c68
   14000df24:	lea    r8,[rip+0x21749]        # 0x14002f674
   14000df2b:	lea    rcx,[rbp-0x19]
   14000df2f:	mov    edx,r12d
   14000df32:	call   0x140016c68
   14000df37:	lea    rcx,[rbp-0x79]
   14000df3b:	mov    r8,rdi
   14000df3e:	mov    edx,r12d
   14000df41:	call   0x140016c68
   14000df46:	mov    r11d,esi
   14000df49:	mov    eax,esi
   14000df4b:	test   r15d,r15d
   14000df4e:	jle    0x14000df6c
   14000df50:	cmp    WORD PTR [rdi+rax*2],0x2e
   14000df55:	je     0x14000df64
   14000df57:	inc    rax
   14000df5a:	inc    r11d
   14000df5d:	cmp    rax,r15
   14000df60:	jl     0x14000df50
   14000df62:	jmp    0x14000df6c
   14000df64:	movsxd rax,r11d
   14000df67:	mov    WORD PTR [rbp+rax*2-0x79],si
   14000df6c:	lea    rcx,[rbp-0x79]
   14000df70:	call   0x140013c8c
   14000df75:	lea    rcx,[rbp-0x79]
   14000df79:	mov    DWORD PTR [rbx],eax
   14000df7b:	call   QWORD PTR [rip+0x2114f]        # 0x14002f0d0
   14000df81:	lea    rcx,[rbp-0x59]
   14000df85:	lea    ebx,[rax+0x1]
   14000df88:	mov    rdx,r12
   14000df8b:	movsxd rsi,ebx
   14000df8e:	lea    r8,[rdi+rsi*2]
   14000df92:	call   0x140016c68
   14000df97:	mov    rax,rsi
   14000df9a:	cmp    rsi,r15
   14000df9d:	jge    0x14000dfbf
   14000df9f:	cmp    WORD PTR [rdi+rax*2],0x2e
   14000dfa4:	je     0x14000dfb2
   14000dfa6:	inc    rax
   14000dfa9:	inc    ebx
   14000dfab:	cmp    rax,r15
   14000dfae:	jl     0x14000df9f
   14000dfb0:	jmp    0x14000dfbf
   14000dfb2:	movsxd rax,ebx
   14000dfb5:	sub    rax,rsi
   14000dfb8:	xor    ecx,ecx
   14000dfba:	mov    WORD PTR [rbp+rax*2-0x59],cx
   14000dfbf:	lea    rcx,[rbp-0x59]
   14000dfc3:	call   0x140013c8c
   14000dfc8:	lea    rcx,[rbp-0x59]
   14000dfcc:	mov    DWORD PTR [r13+0x0],eax
   14000dfd0:	call   QWORD PTR [rip+0x210fa]        # 0x14002f0d0
   14000dfd6:	lea    rcx,[rbp-0x79]
   14000dfda:	mov    ebx,eax
   14000dfdc:	call   QWORD PTR [rip+0x210ee]        # 0x14002f0d0
   14000dfe2:	lea    ebx,[rbx+rax*1+0x2]
   14000dfe6:	cmp    ebx,r15d
   14000dfe9:	jge    0x14000e087
   14000dfef:	movsxd rsi,ebx
   14000dff2:	lea    rcx,[rbp-0x39]
   14000dff6:	mov    rdx,r12
   14000dff9:	lea    r8,[rdi+rsi*2]
   14000dffd:	mov    r13,r12
   14000e000:	call   0x140016c68
   14000e005:	mov    rax,rsi
   14000e008:	cmp    rsi,r15
   14000e00b:	jge    0x14000e02d
   14000e00d:	cmp    WORD PTR [rdi+rax*2],0x5f
   14000e012:	je     0x14000e020
   14000e014:	inc    rax
   14000e017:	inc    ebx
   14000e019:	cmp    rax,r15
   14000e01c:	jl     0x14000e00d
   14000e01e:	jmp    0x14000e02d
   14000e020:	movsxd rax,ebx
   14000e023:	sub    rax,rsi
   14000e026:	xor    ecx,ecx
   14000e028:	mov    WORD PTR [rbp+rax*2-0x39],cx
   14000e02d:	lea    rcx,[rbp-0x39]
   14000e031:	call   0x140013c8c
   14000e036:	mov    rcx,QWORD PTR [rsp+0x20]
   14000e03b:	mov    DWORD PTR [rcx],eax
   14000e03d:	lea    rcx,[rbp-0x39]
   14000e041:	call   QWORD PTR [rip+0x21089]        # 0x14002f0d0
   14000e047:	lea    rcx,[rbp-0x59]
   14000e04b:	mov    ebx,eax
   14000e04d:	call   QWORD PTR [rip+0x2107d]        # 0x14002f0d0
   14000e053:	lea    rcx,[rbp-0x79]
   14000e057:	add    ebx,eax
   14000e059:	call   QWORD PTR [rip+0x21071]        # 0x14002f0d0
   14000e05f:	lea    ecx,[rax+rbx*1+0x3]
   14000e063:	cmp    ecx,r15d
   14000e066:	jge    0x14000e07b
   14000e068:	movsxd rax,ecx
   14000e06b:	lea    rcx,[rbp-0x19]
   14000e06f:	mov    rdx,r13
   14000e072:	lea    r8,[rdi+rax*2]
   14000e076:	call   0x140016c68
   14000e07b:	lea    rcx,[rbp-0x19]
   14000e07f:	call   0x140013c8c
   14000e084:	mov    DWORD PTR [r14],eax
   14000e087:	mov    eax,0x1
   14000e08c:	mov    rcx,QWORD PTR [rbp+0x7]
   14000e090:	xor    rcx,rsp
   14000e093:	call   0x140012670
   14000e098:	add    rsp,0xb8
   14000e09f:	pop    r15
   14000e0a1:	pop    r14
   14000e0a3:	pop    r13
   14000e0a5:	pop    r12
   14000e0a7:	pop    rdi
   14000e0a8:	pop    rsi
   14000e0a9:	pop    rbx
   14000e0aa:	pop    rbp
   14000e0ab:	ret    
   14000e0ac:	int3   
   14000e0ad:	int3   
   14000e0ae:	int3   
   14000e0af:	int3   
   14000e0b0:	int3   
   14000e0b1:	int3   
   14000e0b2:	int3   
   14000e0b3:	int3   
   14000e0b4:	int3   
   14000e0b5:	int3   
   14000e0b6:	int3   
   14000e0b7:	int3   
   14000e0b8:	int3   
   14000e0b9:	int3   
   14000e0ba:	int3   
   14000e0bb:	int3   
   14000e0bc:	mov    rax,rsp
   14000e0bf:	mov    QWORD PTR [rax+0x8],rcx
   14000e0c3:	push   rdi
   14000e0c4:	sub    rsp,0x50
   14000e0c8:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000e0d1:	mov    QWORD PTR [rax+0x18],rbx
   14000e0d5:	mov    QWORD PTR [rax+0x20],rsi
   14000e0d9:	mov    rsi,rcx
   14000e0dc:	xor    edi,edi
   14000e0de:	mov    WORD PTR [rcx],di
   14000e0e1:	mov    DWORD PTR [rax-0x38],0x104
   14000e0e8:	mov    r9,rcx
   14000e0eb:	xor    r8d,r8d
   14000e0ee:	xor    edx,edx
   14000e0f0:	lea    rcx,[rip+0x22419]        # 0x140030510
   14000e0f7:	call   QWORD PTR [rip+0x332d3]        # 0x1400413d0
   14000e0fd:	mov    ebx,eax
   14000e0ff:	test   eax,eax
   14000e101:	jns    0x14000e11b
   14000e103:	mov    edx,eax
   14000e105:	lea    rcx,[rip+0x217b4]        # 0x14002f8c0
   14000e10c:	call   0x14000fec8
   14000e111:	xor    edx,edx
   14000e113:	mov    ecx,ebx
   14000e115:	call   0x14002a9c0
   14000e11a:	nop
   14000e11b:	jmp    0x14000e126
   14000e11d:	mov    rsi,QWORD PTR [rsp+0x60]
   14000e122:	mov    ebx,DWORD PTR [rsp+0x68]
   14000e126:	test   ebx,ebx
   14000e128:	jns    0x14000e1a7
   14000e12a:	mov    QWORD PTR [rsp+0x20],rsi
   14000e12f:	xor    r9d,r9d
   14000e132:	xor    r8d,r8d
   14000e135:	lea    edx,[r9+0x1a]
   14000e139:	xor    ecx,ecx
   14000e13b:	call   QWORD PTR [rip+0x33287]        # 0x1400413c8
   14000e141:	mov    ebx,eax
   14000e143:	test   eax,eax
   14000e145:	jns    0x14000e15f
   14000e147:	mov    edx,eax
   14000e149:	lea    rcx,[rip+0x21840]        # 0x14002f990
   14000e150:	call   0x14000fec8
   14000e155:	xor    edx,edx
   14000e157:	mov    ecx,ebx
   14000e159:	call   0x14002a9c0
   14000e15e:	nop
   14000e15f:	jmp    0x14000e16a
   14000e161:	mov    rsi,QWORD PTR [rsp+0x60]
   14000e166:	mov    ebx,DWORD PTR [rsp+0x68]
   14000e16a:	test   ebx,ebx
   14000e16c:	jns    0x14000e1a7
   14000e16e:	mov    r9d,0x1
   14000e174:	lea    r8d,[r9+0x19]
   14000e178:	mov    rdx,rsi
   14000e17b:	xor    ecx,ecx
   14000e17d:	call   QWORD PTR [rip+0x3323d]        # 0x1400413c0
   14000e183:	mov    ebx,eax
   14000e185:	test   eax,eax
   14000e187:	jns    0x14000e1a1
   14000e189:	mov    edx,eax
   14000e18b:	lea    rcx,[rip+0x218ae]        # 0x14002fa40
   14000e192:	call   0x14000fec8
   14000e197:	xor    edx,edx
   14000e199:	mov    ecx,ebx
   14000e19b:	call   0x14002a9c0
   14000e1a0:	nop
   14000e1a1:	jmp    0x14000e1a7
   14000e1a3:	mov    ebx,DWORD PTR [rsp+0x68]
   14000e1a7:	mov    eax,ebx
   14000e1a9:	mov    rbx,QWORD PTR [rsp+0x70]
   14000e1ae:	mov    rsi,QWORD PTR [rsp+0x78]
   14000e1b3:	add    rsp,0x50
   14000e1b7:	pop    rdi
   14000e1b8:	ret    
   14000e1b9:	int3   
   14000e1ba:	int3   
   14000e1bb:	int3   
   14000e1bc:	int3   
   14000e1bd:	int3   
   14000e1be:	int3   
   14000e1bf:	int3   
   14000e1c0:	int3   
   14000e1c1:	int3   
   14000e1c2:	int3   
   14000e1c3:	int3   
   14000e1c4:	int3   
   14000e1c5:	int3   
   14000e1c6:	int3   
   14000e1c7:	int3   
   14000e1c8:	int3   
   14000e1c9:	int3   
   14000e1ca:	int3   
   14000e1cb:	int3   
   14000e1cc:	mov    QWORD PTR [rsp+0x10],rbx
   14000e1d1:	push   rbp
   14000e1d2:	push   rsi
   14000e1d3:	push   rdi
   14000e1d4:	push   r12
   14000e1d6:	push   r13
   14000e1d8:	push   r14
   14000e1da:	push   r15
   14000e1dc:	lea    rbp,[rsp-0x1f60]
   14000e1e4:	mov    eax,0x2060
   14000e1e9:	call   0x140012f50
   14000e1ee:	sub    rsp,rax
   14000e1f1:	mov    rax,QWORD PTR [rip+0x31738]        # 0x14003f930
   14000e1f8:	xor    rax,rsp
   14000e1fb:	mov    QWORD PTR [rbp+0x1f50],rax
   14000e202:	mov    r13,rcx
   14000e205:	mov    rbx,r8
   14000e208:	mov    r12d,edx
   14000e20b:	xor    r15d,r15d
   14000e20e:	mov    r14d,0x7fe
   14000e214:	lea    rcx,[rbp+0x752]
   14000e21b:	xor    edx,edx
   14000e21d:	mov    r8d,r14d
   14000e220:	mov    esi,r9d
   14000e223:	mov    edi,r15d
   14000e226:	mov    WORD PTR [rbp+0x750],r15w
   14000e22e:	call   0x140012fb0
   14000e233:	lea    rcx,[rsp+0x52]
   14000e238:	mov    r8d,r14d
   14000e23b:	xor    edx,edx
   14000e23d:	mov    WORD PTR [rsp+0x50],r15w
   14000e243:	call   0x140012fb0
   14000e248:	lea    rcx,[rbp+0x1752]
   14000e24f:	mov    r8d,r14d
   14000e252:	xor    edx,edx
   14000e254:	mov    WORD PTR [rbp+0x1750],r15w
   14000e25c:	call   0x140012fb0
   14000e261:	lea    rcx,[rbp+0xf52]
   14000e268:	mov    r8d,r14d
   14000e26b:	xor    edx,edx
   14000e26d:	mov    WORD PTR [rbp+0xf50],r15w
   14000e275:	call   0x140012fb0
   14000e27a:	test   r13,r13
   14000e27d:	je     0x14000e297
   14000e27f:	mov    rcx,r13
   14000e282:	call   QWORD PTR [rip+0x20d80]        # 0x14002f008
   14000e288:	mov    rdi,rax
   14000e28b:	test   rax,rax
   14000e28e:	jne    0x14000e297
   14000e290:	xor    eax,eax
   14000e292:	jmp    0x14000e360
   14000e297:	mov    r8d,esi
   14000e29a:	mov    rdx,rbx
   14000e29d:	mov    rcx,rdi
   14000e2a0:	call   QWORD PTR [rip+0x20dd2]        # 0x14002f078
   14000e2a6:	test   eax,eax
   14000e2a8:	je     0x14000e290
   14000e2aa:	mov    r8d,esi
   14000e2ad:	mov    rdx,rbx
   14000e2b0:	mov    rcx,rbx
   14000e2b3:	test   r12d,r12d
   14000e2b6:	je     0x14000e38a
   14000e2bc:	call   QWORD PTR [rip+0x20e2e]        # 0x14002f0f0
   14000e2c2:	test   eax,eax
   14000e2c4:	je     0x14000e290
   14000e2c6:	mov    r8d,0x400
   14000e2cc:	lea    rax,[rbp+0xf50]
   14000e2d3:	lea    r9,[rsp+0x50]
   14000e2d8:	mov    QWORD PTR [rsp+0x40],r8
   14000e2dd:	mov    QWORD PTR [rsp+0x38],rax
   14000e2e2:	mov    QWORD PTR [rsp+0x30],r8
   14000e2e7:	lea    rax,[rbp+0x1750]
   14000e2ee:	lea    rdx,[rbp+0x750]
   14000e2f5:	mov    rcx,rbx
   14000e2f8:	mov    QWORD PTR [rsp+0x28],rax
   14000e2fd:	mov    QWORD PTR [rsp+0x20],r8
   14000e302:	call   0x140016cd4
   14000e307:	or     rcx,0xffffffffffffffff
   14000e30b:	xor    eax,eax
   14000e30d:	lea    rdi,[rsp+0x50]
   14000e312:	repnz scas ax,WORD PTR es:[rdi]
   14000e315:	not    rcx
   14000e318:	dec    rcx
   14000e31b:	cmp    ecx,0x1
   14000e31e:	jle    0x14000e339
   14000e320:	movsxd rcx,ecx
   14000e323:	cmp    WORD PTR [rsp+rcx*2+0x4e],0x5c
   14000e329:	je     0x14000e333
   14000e32b:	cmp    WORD PTR [rsp+rcx*2+0x4e],0x2f
   14000e331:	jne    0x14000e339
   14000e333:	mov    WORD PTR [rsp+rcx*2+0x4e],r15w
   14000e339:	lea    r8,[rbp+0x750]
   14000e340:	mov    rdx,rsi
   14000e343:	mov    rcx,rbx
   14000e346:	call   0x140016c68
   14000e34b:	lea    r8,[rsp+0x50]
   14000e350:	mov    rdx,rsi
   14000e353:	mov    rcx,rbx
   14000e356:	call   0x140017684
   14000e35b:	mov    eax,0x1
   14000e360:	mov    rcx,QWORD PTR [rbp+0x1f50]
   14000e367:	xor    rcx,rsp
   14000e36a:	call   0x140012670
   14000e36f:	mov    rbx,QWORD PTR [rsp+0x20a8]
   14000e377:	add    rsp,0x2060
   14000e37e:	pop    r15
   14000e380:	pop    r14
   14000e382:	pop    r13
   14000e384:	pop    r12
   14000e386:	pop    rdi
   14000e387:	pop    rsi
   14000e388:	pop    rbp
   14000e389:	ret    
   14000e38a:	call   QWORD PTR [rip+0x20d58]        # 0x14002f0e8
   14000e390:	jmp    0x14000e2c2
   14000e395:	int3   
   14000e396:	int3   
   14000e397:	int3   
   14000e398:	int3   
   14000e399:	int3   
   14000e39a:	int3   
   14000e39b:	int3   
   14000e39c:	mov    rax,rsp
   14000e39f:	mov    QWORD PTR [rax+0x8],rbx
   14000e3a3:	mov    QWORD PTR [rax+0x10],rsi
   14000e3a7:	mov    QWORD PTR [rax+0x18],rdi
   14000e3ab:	mov    QWORD PTR [rax+0x20],r13
   14000e3af:	push   rbp
   14000e3b0:	push   r14
   14000e3b2:	push   r15
   14000e3b4:	lea    rbp,[rax-0x7c8]
   14000e3bb:	sub    rsp,0x8b0
   14000e3c2:	mov    rax,QWORD PTR [rip+0x31567]        # 0x14003f930
   14000e3c9:	xor    rax,rsp
   14000e3cc:	mov    QWORD PTR [rbp+0x7a0],rax
   14000e3d3:	xor    r15d,r15d
   14000e3d6:	mov    r14,rcx
   14000e3d9:	mov    edi,0x20019
   14000e3de:	lea    rcx,[rsp+0x70]
   14000e3e3:	lea    r8,[rip+0x2185e]        # 0x14002fc48
   14000e3ea:	mov    rdx,0xffffffff80000002
   14000e3f1:	mov    r9d,edi
   14000e3f4:	mov    QWORD PTR [rsp+0x70],r15
   14000e3f9:	mov    DWORD PTR [rsp+0x78],r15d
   14000e3fe:	mov    QWORD PTR [rbp-0x80],r15
   14000e402:	mov    QWORD PTR [rsp+0x58],r15
   14000e407:	mov    DWORD PTR [rsp+0x60],r15d
   14000e40c:	mov    QWORD PTR [rsp+0x68],r15
   14000e411:	mov    QWORD PTR [rsp+0x40],r15
   14000e416:	mov    DWORD PTR [rsp+0x48],r15d
   14000e41b:	mov    QWORD PTR [rsp+0x50],r15
   14000e420:	mov    QWORD PTR [rbp-0x78],r15
   14000e424:	mov    DWORD PTR [rbp-0x70],r15d
   14000e428:	mov    QWORD PTR [rbp-0x68],r15
   14000e42c:	mov    esi,r15d
   14000e42f:	mov    r13d,r15d
   14000e432:	call   0x14000d094
   14000e437:	test   eax,eax
   14000e439:	je     0x14000e452
   14000e43b:	mov    rcx,QWORD PTR [rsp+0x70]
   14000e440:	test   rcx,rcx
   14000e443:	je     0x14000e44b
   14000e445:	call   QWORD PTR [rip+0x32f15]        # 0x140041360
   14000e44b:	xor    eax,eax
   14000e44d:	jmp    0x14000e5e3
   14000e452:	mov    rbx,QWORD PTR [rsp+0x70]
   14000e457:	lea    r8,[rip+0x21802]        # 0x14002fc60
   14000e45e:	lea    rcx,[rsp+0x58]
   14000e463:	mov    rdx,rbx
   14000e466:	mov    r9d,edi
   14000e469:	call   0x14000d094
   14000e46e:	test   eax,eax
   14000e470:	je     0x14000e48c
   14000e472:	mov    rcx,QWORD PTR [rsp+0x58]
   14000e477:	test   rcx,rcx
   14000e47a:	je     0x14000e482
   14000e47c:	call   QWORD PTR [rip+0x32ede]        # 0x140041360
   14000e482:	test   rbx,rbx
   14000e485:	je     0x14000e44b
   14000e487:	mov    rcx,rbx
   14000e48a:	jmp    0x14000e445
   14000e48c:	mov    r9d,edi
   14000e48f:	mov    rdi,QWORD PTR [rsp+0x58]
   14000e494:	lea    r8,[rip+0x217dd]        # 0x14002fc78
   14000e49b:	lea    rcx,[rsp+0x40]
   14000e4a0:	mov    rdx,rdi
   14000e4a3:	call   0x14000d094
   14000e4a8:	test   eax,eax
   14000e4aa:	je     0x14000e4c6
   14000e4ac:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e4b1:	test   rcx,rcx
   14000e4b4:	je     0x14000e4bc
   14000e4b6:	call   QWORD PTR [rip+0x32ea4]        # 0x140041360
   14000e4bc:	test   rdi,rdi
   14000e4bf:	je     0x14000e482
   14000e4c1:	mov    rcx,rdi
   14000e4c4:	jmp    0x14000e47c
   14000e4c6:	lea    rcx,[rbp-0x60]
   14000e4ca:	xor    edx,edx
   14000e4cc:	mov    r8d,0x400
   14000e4d2:	call   0x140012fb0
   14000e4d7:	xor    edx,edx
   14000e4d9:	jmp    0x14000e512
   14000e4db:	lea    rax,[rbp-0x60]
   14000e4df:	mov    r8,r14
   14000e4e2:	inc    esi
   14000e4e4:	sub    r8,rax
   14000e4e7:	movzx  ecx,WORD PTR [rax]
   14000e4ea:	movzx  edx,WORD PTR [rax+r8*1]
   14000e4ef:	sub    ecx,edx
   14000e4f1:	jne    0x14000e4fb
   14000e4f3:	add    rax,0x2
   14000e4f7:	test   edx,edx
   14000e4f9:	jne    0x14000e4e7
   14000e4fb:	test   ecx,ecx
   14000e4fd:	je     0x14000e530
   14000e4ff:	lea    rcx,[rbp-0x60]
   14000e503:	xor    edx,edx
   14000e505:	mov    r8d,0x400
   14000e50b:	call   0x140012fb0
   14000e510:	mov    edx,esi
   14000e512:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e517:	lea    r8,[rbp-0x60]
   14000e51b:	mov    r9d,0x400
   14000e521:	call   QWORD PTR [rip+0x32e79]        # 0x1400413a0
   14000e527:	test   eax,eax
   14000e529:	je     0x14000e4db
   14000e52b:	jmp    0x14000e5b2
   14000e530:	mov    rdx,QWORD PTR [rsp+0x40]
   14000e535:	lea    r8,[rbp-0x60]
   14000e539:	lea    rcx,[rbp-0x78]
   14000e53d:	mov    r9d,0x20019
   14000e543:	call   0x14000d094
   14000e548:	mov    rsi,QWORD PTR [rbp-0x78]
   14000e54c:	test   eax,eax
   14000e54e:	jne    0x14000e5a4
   14000e550:	lea    rax,[rsp+0x34]
   14000e555:	lea    r9,[rsp+0x38]
   14000e55a:	lea    rdx,[rip+0x21737]        # 0x14002fc98
   14000e561:	mov    QWORD PTR [rsp+0x28],rax
   14000e566:	lea    rax,[rsp+0x30]
   14000e56b:	xor    r8d,r8d
   14000e56e:	mov    rcx,rsi
   14000e571:	mov    DWORD PTR [rsp+0x30],r15d
   14000e576:	mov    DWORD PTR [rsp+0x34],0x4
   14000e57e:	mov    QWORD PTR [rsp+0x20],rax
   14000e583:	call   QWORD PTR [rip+0x32ddf]        # 0x140041368
   14000e589:	test   eax,eax
   14000e58b:	jne    0x14000e5a4
   14000e58d:	cmp    DWORD PTR [rsp+0x38],0x4
   14000e592:	jne    0x14000e5a4
   14000e594:	mov    eax,r15d
   14000e597:	test   eax,eax
   14000e599:	jne    0x14000e5a4
   14000e59b:	cmp    DWORD PTR [rsp+0x30],0x1
   14000e5a0:	sete   r13b
   14000e5a4:	test   rsi,rsi
   14000e5a7:	je     0x14000e5b2
   14000e5a9:	mov    rcx,rsi
   14000e5ac:	call   QWORD PTR [rip+0x32dae]        # 0x140041360
   14000e5b2:	cmp    QWORD PTR [rsp+0x40],r15
   14000e5b7:	je     0x14000e5c4
   14000e5b9:	mov    rcx,QWORD PTR [rsp+0x40]
   14000e5be:	call   QWORD PTR [rip+0x32d9c]        # 0x140041360
   14000e5c4:	test   rdi,rdi
   14000e5c7:	je     0x14000e5d2
   14000e5c9:	mov    rcx,rdi
   14000e5cc:	call   QWORD PTR [rip+0x32d8e]        # 0x140041360
   14000e5d2:	test   rbx,rbx
   14000e5d5:	je     0x14000e5e0
   14000e5d7:	mov    rcx,rbx
   14000e5da:	call   QWORD PTR [rip+0x32d80]        # 0x140041360
   14000e5e0:	mov    eax,r13d
   14000e5e3:	mov    rcx,QWORD PTR [rbp+0x7a0]
   14000e5ea:	xor    rcx,rsp
   14000e5ed:	call   0x140012670
   14000e5f2:	lea    r11,[rsp+0x8b0]
   14000e5fa:	mov    rbx,QWORD PTR [r11+0x20]
   14000e5fe:	mov    rsi,QWORD PTR [r11+0x28]
   14000e602:	mov    rdi,QWORD PTR [r11+0x30]
   14000e606:	mov    r13,QWORD PTR [r11+0x38]
   14000e60a:	mov    rsp,r11
   14000e60d:	pop    r15
   14000e60f:	pop    r14
   14000e611:	pop    rbp
   14000e612:	ret    
   14000e613:	int3   
   14000e614:	int3   
   14000e615:	int3   
   14000e616:	int3   
   14000e617:	int3   
   14000e618:	int3   
   14000e619:	int3   
   14000e61a:	int3   
   14000e61b:	int3   
   14000e61c:	mov    QWORD PTR [rsp+0x8],rbx
   14000e621:	mov    QWORD PTR [rsp+0x10],rsi
   14000e626:	mov    QWORD PTR [rsp+0x18],rdi
   14000e62b:	push   rbp
   14000e62c:	push   r12
   14000e62e:	push   r13
   14000e630:	push   r14
   14000e632:	push   r15
   14000e634:	mov    rbp,rsp
   14000e637:	sub    rsp,0x80
   14000e63e:	xor    r15d,r15d
   14000e641:	mov    r12,r8
   14000e644:	mov    rsi,rcx
   14000e647:	mov    r13d,r9d
   14000e64a:	mov    r14d,edx
   14000e64d:	mov    DWORD PTR [rbp+0x48],r9d
   14000e651:	mov    edi,0x20019
   14000e656:	lea    r8,[rip+0x21663]        # 0x14002fcc0
   14000e65d:	lea    rcx,[rbp-0x48]
   14000e661:	mov    rdx,0xffffffff80000002
   14000e668:	mov    r9d,edi
   14000e66b:	mov    QWORD PTR [rbp-0x48],r15
   14000e66f:	mov    DWORD PTR [rbp-0x40],r15d
   14000e673:	mov    QWORD PTR [rbp-0x38],r15
   14000e677:	mov    QWORD PTR [rbp-0x30],r15
   14000e67b:	mov    DWORD PTR [rbp-0x28],r15d
   14000e67f:	mov    QWORD PTR [rbp-0x20],r15
   14000e683:	mov    QWORD PTR [rbp-0x18],r15
   14000e687:	mov    DWORD PTR [rbp-0x10],r15d
   14000e68b:	mov    QWORD PTR [rbp-0x8],r15
   14000e68f:	mov    QWORD PTR [rbp-0x60],r15
   14000e693:	mov    DWORD PTR [rbp-0x58],r15d
   14000e697:	mov    QWORD PTR [rbp-0x50],r15
   14000e69b:	call   0x14000d094
   14000e6a0:	test   eax,eax
   14000e6a2:	je     0x14000e6ba
   14000e6a4:	mov    rcx,QWORD PTR [rbp-0x48]
   14000e6a8:	test   rcx,rcx
   14000e6ab:	je     0x14000e6b3
   14000e6ad:	call   QWORD PTR [rip+0x32cad]        # 0x140041360
   14000e6b3:	xor    eax,eax
   14000e6b5:	jmp    0x14000e7cf
   14000e6ba:	mov    rbx,QWORD PTR [rbp-0x48]
   14000e6be:	lea    r8,[rip+0x21613]        # 0x14002fcd8
   14000e6c5:	lea    rcx,[rbp-0x30]
   14000e6c9:	mov    rdx,rbx
   14000e6cc:	mov    r9d,edi
   14000e6cf:	call   0x14000d094
   14000e6d4:	test   eax,eax
   14000e6d6:	je     0x14000e6f1
   14000e6d8:	mov    rcx,QWORD PTR [rbp-0x30]
   14000e6dc:	test   rcx,rcx
   14000e6df:	je     0x14000e6e7
   14000e6e1:	call   QWORD PTR [rip+0x32c79]        # 0x140041360
   14000e6e7:	test   rbx,rbx
   14000e6ea:	je     0x14000e6b3
   14000e6ec:	mov    rcx,rbx
   14000e6ef:	jmp    0x14000e6ad
   14000e6f1:	mov    r9d,edi
   14000e6f4:	mov    rdi,QWORD PTR [rbp-0x30]
   14000e6f8:	lea    r8,[rip+0x215f1]        # 0x14002fcf0
   14000e6ff:	lea    rcx,[rbp-0x18]
   14000e703:	mov    rdx,rdi
   14000e706:	call   0x14000d094
   14000e70b:	test   eax,eax
   14000e70d:	je     0x14000e728
   14000e70f:	mov    rcx,QWORD PTR [rbp-0x18]
   14000e713:	test   rcx,rcx
   14000e716:	je     0x14000e71e
   14000e718:	call   QWORD PTR [rip+0x32c42]        # 0x140041360
   14000e71e:	test   rdi,rdi
   14000e721:	je     0x14000e6e7
   14000e723:	mov    rcx,rdi
   14000e726:	jmp    0x14000e6e1
   14000e728:	mov    r8,rsi
   14000e72b:	mov    rsi,QWORD PTR [rbp-0x18]
   14000e72f:	lea    rcx,[rbp-0x60]
   14000e733:	mov    rdx,rsi
   14000e736:	mov    r9d,0x20019
   14000e73c:	call   0x14000d094
   14000e741:	test   eax,eax
   14000e743:	je     0x14000e75e
   14000e745:	mov    rcx,QWORD PTR [rbp-0x60]
   14000e749:	test   rcx,rcx
   14000e74c:	je     0x14000e754
   14000e74e:	call   QWORD PTR [rip+0x32c0c]        # 0x140041360
   14000e754:	test   rsi,rsi
   14000e757:	je     0x14000e71e
   14000e759:	mov    rcx,rsi
   14000e75c:	jmp    0x14000e718
   14000e75e:	lea    r9,[rbp+0x48]
   14000e762:	lea    rdx,[rip+0x215a7]        # 0x14002fd10
   14000e769:	lea    rcx,[rbp-0x60]
   14000e76d:	mov    r8,r12
   14000e770:	call   0x14000d128
   14000e775:	test   eax,eax
   14000e777:	jne    0x14000e745
   14000e779:	mov    r8d,r13d
   14000e77c:	mov    rdx,r12
   14000e77f:	mov    rcx,r12
   14000e782:	test   r14d,r14d
   14000e785:	je     0x14000e7f0
   14000e787:	call   QWORD PTR [rip+0x20963]        # 0x14002f0f0
   14000e78d:	test   eax,eax
   14000e78f:	je     0x14000e745
   14000e791:	mov    rcx,QWORD PTR [rbp-0x60]
   14000e795:	test   rcx,rcx
   14000e798:	je     0x14000e7a0
   14000e79a:	call   QWORD PTR [rip+0x32bc0]        # 0x140041360
   14000e7a0:	test   rsi,rsi
   14000e7a3:	je     0x14000e7ae
   14000e7a5:	mov    rcx,rsi
   14000e7a8:	call   QWORD PTR [rip+0x32bb2]        # 0x140041360
   14000e7ae:	test   rdi,rdi
   14000e7b1:	je     0x14000e7bc
   14000e7b3:	mov    rcx,rdi
   14000e7b6:	call   QWORD PTR [rip+0x32ba4]        # 0x140041360
   14000e7bc:	test   rbx,rbx
   14000e7bf:	je     0x14000e7ca
   14000e7c1:	mov    rcx,rbx
   14000e7c4:	call   QWORD PTR [rip+0x32b96]        # 0x140041360
   14000e7ca:	mov    eax,0x1
   14000e7cf:	lea    r11,[rsp+0x80]
   14000e7d7:	mov    rbx,QWORD PTR [r11+0x30]
   14000e7db:	mov    rsi,QWORD PTR [r11+0x38]
   14000e7df:	mov    rdi,QWORD PTR [r11+0x40]
   14000e7e3:	mov    rsp,r11
   14000e7e6:	pop    r15
   14000e7e8:	pop    r14
   14000e7ea:	pop    r13
   14000e7ec:	pop    r12
   14000e7ee:	pop    rbp
   14000e7ef:	ret    
   14000e7f0:	call   QWORD PTR [rip+0x208f2]        # 0x14002f0e8
   14000e7f6:	jmp    0x14000e78d
   14000e7f8:	int3   
   14000e7f9:	int3   
   14000e7fa:	int3   
   14000e7fb:	int3   
   14000e7fc:	int3   
   14000e7fd:	int3   
   14000e7fe:	int3   
   14000e7ff:	int3   
   14000e800:	int3   
   14000e801:	int3   
   14000e802:	int3   
   14000e803:	int3   
   14000e804:	int3   
   14000e805:	int3   
   14000e806:	int3   
   14000e807:	int3   
   14000e808:	int3   
   14000e809:	int3   
   14000e80a:	int3   
   14000e80b:	int3   
   14000e80c:	mov    r8d,0xbb8
   14000e812:	jmp    0x14000d91c
   14000e817:	int3   
   14000e818:	int3   
   14000e819:	int3   
   14000e81a:	int3   
   14000e81b:	int3   
   14000e81c:	int3   
   14000e81d:	int3   
   14000e81e:	int3   
   14000e81f:	int3   
   14000e820:	int3   
   14000e821:	int3   
   14000e822:	int3   
   14000e823:	int3   
   14000e824:	int3   
   14000e825:	int3   
   14000e826:	int3   
   14000e827:	int3   
   14000e828:	int3   
   14000e829:	int3   
   14000e82a:	int3   
   14000e82b:	int3   
   14000e82c:	rex push rbx
   14000e82e:	push   rbp
   14000e82f:	push   rsi
   14000e830:	push   rdi
   14000e831:	push   r14
   14000e833:	push   r15
   14000e835:	sub    rsp,0x848
   14000e83c:	mov    rax,QWORD PTR [rip+0x310ed]        # 0x14003f930
   14000e843:	xor    rax,rsp
   14000e846:	mov    QWORD PTR [rsp+0x830],rax
   14000e84e:	mov    ebx,r9d
   14000e851:	mov    ebp,r8d
   14000e854:	mov    edi,edx
   14000e856:	mov    esi,ecx
   14000e858:	cmp    r9d,DWORD PTR [rsp+0x8a0]
   14000e860:	jg     0x14000e979
   14000e866:	mov    r14d,0x1
   14000e86c:	mov    r15d,0x400
   14000e872:	cmp    esi,r14d
   14000e875:	jg     0x14000e8aa
   14000e877:	cmp    edi,0x3
   14000e87a:	jne    0x14000e885
   14000e87c:	test   ebp,ebp
   14000e87e:	jne    0x14000e885
   14000e880:	cmp    ebx,0x2
   14000e883:	je     0x14000e8aa
   14000e885:	lea    rax,[rsp+0x30]
   14000e88a:	mov    r9d,ebx
   14000e88d:	mov    r8d,ebp
   14000e890:	mov    edx,edi
   14000e892:	mov    ecx,esi
   14000e894:	mov    QWORD PTR [rsp+0x28],r15
   14000e899:	mov    QWORD PTR [rsp+0x20],rax
   14000e89e:	call   0x14000dc0c
   14000e8a3:	lea    rcx,[rsp+0x30]
   14000e8a8:	jmp    0x14000e8b1
   14000e8aa:	lea    rcx,[rip+0x2170f]        # 0x14002ffc0
   14000e8b1:	mov    r8d,DWORD PTR [rsp+0x8b0]
   14000e8b9:	mov    rdx,QWORD PTR [rsp+0x8a8]
   14000e8c1:	call   0x14000dcfc
   14000e8c6:	test   eax,eax
   14000e8c8:	jne    0x14000e99b
   14000e8ce:	cmp    esi,r14d
   14000e8d1:	jg     0x14000e8e7
   14000e8d3:	cmp    edi,0x4
   14000e8d6:	jge    0x14000e8e7
   14000e8d8:	cmp    edi,0x3
   14000e8db:	jne    0x14000e923
   14000e8dd:	cmp    ebp,r14d
   14000e8e0:	jne    0x14000e923
   14000e8e2:	cmp    ebx,r14d
   14000e8e5:	jl     0x14000e923
   14000e8e7:	lea    rax,[rsp+0x30]
   14000e8ec:	mov    r9d,ebx
   14000e8ef:	mov    r8d,ebp
   14000e8f2:	mov    edx,edi
   14000e8f4:	mov    ecx,esi
   14000e8f6:	mov    QWORD PTR [rsp+0x28],r15
   14000e8fb:	mov    QWORD PTR [rsp+0x20],rax
   14000e900:	call   0x14000dc5c
   14000e905:	mov    r8d,DWORD PTR [rsp+0x8b0]
   14000e90d:	mov    rdx,QWORD PTR [rsp+0x8a8]
   14000e915:	lea    rcx,[rsp+0x30]
   14000e91a:	call   0x14000dcfc
   14000e91f:	test   eax,eax
   14000e921:	jne    0x14000e99b
   14000e923:	cmp    esi,r14d
   14000e926:	jg     0x14000e92d
   14000e928:	cmp    edi,0x5
   14000e92b:	jl     0x14000e969
   14000e92d:	lea    rax,[rsp+0x30]
   14000e932:	mov    r9d,ebx
   14000e935:	mov    r8d,ebp
   14000e938:	mov    edx,edi
   14000e93a:	mov    ecx,esi
   14000e93c:	mov    QWORD PTR [rsp+0x28],r15
   14000e941:	mov    QWORD PTR [rsp+0x20],rax
   14000e946:	call   0x14000dcac
   14000e94b:	mov    r8d,DWORD PTR [rsp+0x8b0]
   14000e953:	mov    rdx,QWORD PTR [rsp+0x8a8]
   14000e95b:	lea    rcx,[rsp+0x30]
   14000e960:	call   0x14000dcfc
   14000e965:	test   eax,eax
   14000e967:	jne    0x14000e99b
   14000e969:	add    ebx,r14d
   14000e96c:	cmp    ebx,DWORD PTR [rsp+0x8a0]
   14000e973:	jle    0x14000e872
   14000e979:	xor    eax,eax
   14000e97b:	mov    rcx,QWORD PTR [rsp+0x830]
   14000e983:	xor    rcx,rsp
   14000e986:	call   0x140012670
   14000e98b:	add    rsp,0x848
   14000e992:	pop    r15
   14000e994:	pop    r14
   14000e996:	pop    rdi
   14000e997:	pop    rsi
   14000e998:	pop    rbp
   14000e999:	pop    rbx
   14000e99a:	ret    
   14000e99b:	mov    eax,r14d
   14000e99e:	jmp    0x14000e97b
   14000e9a0:	int3   
   14000e9a1:	int3   
   14000e9a2:	int3   
   14000e9a3:	int3   
   14000e9a4:	int3   
   14000e9a5:	int3   
   14000e9a6:	int3   
   14000e9a7:	int3   
   14000e9a8:	int3   
   14000e9a9:	int3   
   14000e9aa:	int3   
   14000e9ab:	int3   
   14000e9ac:	mov    QWORD PTR [rsp+0x8],rbx
   14000e9b1:	push   rbp
   14000e9b2:	push   rsi
   14000e9b3:	push   rdi
   14000e9b4:	push   r12
   14000e9b6:	push   r13
   14000e9b8:	push   r14
   14000e9ba:	push   r15
   14000e9bc:	lea    rbp,[rsp-0xfb0]
   14000e9c4:	mov    eax,0x10b0
   14000e9c9:	call   0x140012f50
   14000e9ce:	sub    rsp,rax
   14000e9d1:	mov    rax,QWORD PTR [rip+0x30f58]        # 0x14003f930
   14000e9d8:	xor    rax,rsp
   14000e9db:	mov    QWORD PTR [rbp+0xfa0],rax
   14000e9e2:	xor    r15d,r15d
   14000e9e5:	mov    r14,r8
   14000e9e8:	mov    ebx,ecx
   14000e9ea:	mov    r13,rdx
   14000e9ed:	mov    r12d,0x20019
   14000e9f3:	lea    r8,[rip+0x2166e]        # 0x140030068
   14000e9fa:	lea    rcx,[rsp+0x70]
   14000e9ff:	mov    r9d,r12d
   14000ea02:	mov    rdx,0xffffffff80000002
   14000ea09:	mov    QWORD PTR [rsp+0x70],r15
   14000ea0e:	mov    DWORD PTR [rsp+0x78],r15d
   14000ea13:	mov    QWORD PTR [rbp-0x80],r15
   14000ea17:	mov    QWORD PTR [rsp+0x40],r15
   14000ea1c:	mov    DWORD PTR [rsp+0x48],r15d
   14000ea21:	mov    QWORD PTR [rsp+0x50],r15
   14000ea26:	mov    QWORD PTR [rsp+0x28],r15
   14000ea2b:	mov    DWORD PTR [rsp+0x30],r15d
   14000ea30:	mov    QWORD PTR [rsp+0x38],r15
   14000ea35:	mov    QWORD PTR [rbp-0x78],r15
   14000ea39:	mov    DWORD PTR [rbp-0x70],r15d
   14000ea3d:	mov    QWORD PTR [rbp-0x68],r15
   14000ea41:	mov    QWORD PTR [rsp+0x58],r15
   14000ea46:	mov    DWORD PTR [rsp+0x60],r15d
   14000ea4b:	mov    QWORD PTR [rsp+0x68],r15
   14000ea50:	call   0x14000d094
   14000ea55:	test   eax,eax
   14000ea57:	je     0x14000ea70
   14000ea59:	mov    rcx,QWORD PTR [rsp+0x70]
   14000ea5e:	test   rcx,rcx
   14000ea61:	je     0x14000ea69
   14000ea63:	call   QWORD PTR [rip+0x328f7]        # 0x140041360
   14000ea69:	xor    eax,eax
   14000ea6b:	jmp    0x14000ec36
   14000ea70:	test   ebx,ebx
   14000ea72:	mov    rbx,QWORD PTR [rsp+0x70]
   14000ea77:	mov    r9d,r12d
   14000ea7a:	mov    rdx,rbx
   14000ea7d:	lea    rcx,[rsp+0x40]
   14000ea82:	je     0x14000eae8
   14000ea84:	lea    r8,[rip+0x215f5]        # 0x140030080
   14000ea8b:	call   0x14000d094
   14000ea90:	test   eax,eax
   14000ea92:	je     0x14000eaae
   14000ea94:	mov    rcx,QWORD PTR [rsp+0x40]
   14000ea99:	test   rcx,rcx
   14000ea9c:	je     0x14000eaa4
   14000ea9e:	call   QWORD PTR [rip+0x328bc]        # 0x140041360
   14000eaa4:	test   rbx,rbx
   14000eaa7:	je     0x14000ea69
   14000eaa9:	mov    rcx,rbx
   14000eaac:	jmp    0x14000ea63
   14000eaae:	lea    r8,[rip+0x215db]        # 0x140030090
   14000eab5:	mov    rdi,QWORD PTR [rsp+0x40]
   14000eaba:	lea    rcx,[rsp+0x28]
   14000eabf:	mov    r9d,r12d
   14000eac2:	mov    rdx,rdi
   14000eac5:	call   0x14000d094
   14000eaca:	test   eax,eax
   14000eacc:	je     0x14000eb01
   14000eace:	mov    rcx,QWORD PTR [rsp+0x28]
   14000ead3:	test   rcx,rcx
   14000ead6:	je     0x14000eade
   14000ead8:	call   QWORD PTR [rip+0x32882]        # 0x140041360
   14000eade:	test   rdi,rdi
   14000eae1:	je     0x14000eaa4
   14000eae3:	mov    rcx,rdi
   14000eae6:	jmp    0x14000ea9e
   14000eae8:	lea    r8,[rip+0x215c1]        # 0x1400300b0
   14000eaef:	call   0x14000d094
   14000eaf4:	test   eax,eax
   14000eaf6:	jne    0x14000ea94
   14000eaf8:	lea    r8,[rip+0x215c9]        # 0x1400300c8
   14000eaff:	jmp    0x14000eab5
   14000eb01:	lea    rcx,[rbp-0x5e]
   14000eb05:	xor    edx,edx
   14000eb07:	mov    r8d,0xffe
   14000eb0d:	mov    WORD PTR [rbp-0x60],r15w
   14000eb12:	call   0x140012fb0
   14000eb17:	lea    r9,[rsp+0x20]
   14000eb1c:	lea    r8,[rbp-0x60]
   14000eb20:	lea    rdx,[rip+0x215b1]        # 0x1400300d8
   14000eb27:	lea    rcx,[rsp+0x28]
   14000eb2c:	mov    DWORD PTR [rsp+0x20],0x800
   14000eb34:	call   0x14000d128
   14000eb39:	test   eax,eax
   14000eb3b:	jne    0x14000eace
   14000eb3d:	mov    rsi,QWORD PTR [rsp+0x28]
   14000eb42:	lea    r8,[rbp-0x60]
   14000eb46:	lea    rcx,[rbp-0x78]
   14000eb4a:	mov    rdx,rsi
   14000eb4d:	mov    r9d,r12d
   14000eb50:	call   0x14000d094
   14000eb55:	test   eax,eax
   14000eb57:	je     0x14000eb79
   14000eb59:	mov    rcx,QWORD PTR [rbp-0x78]
   14000eb5d:	test   rcx,rcx
   14000eb60:	je     0x14000eb68
   14000eb62:	call   QWORD PTR [rip+0x327f8]        # 0x140041360
   14000eb68:	test   rsi,rsi
   14000eb6b:	je     0x14000eade
   14000eb71:	mov    rcx,rsi
   14000eb74:	jmp    0x14000ead8
   14000eb79:	mov    r9d,r12d
   14000eb7c:	mov    r12,QWORD PTR [rbp-0x78]
   14000eb80:	lea    r8,[rip+0x21571]        # 0x1400300f8
   14000eb87:	lea    rcx,[rsp+0x58]
   14000eb8c:	mov    rdx,r12
   14000eb8f:	mov    DWORD PTR [rsp+0x20],0x800
   14000eb97:	call   0x14000d094
   14000eb9c:	test   eax,eax
   14000eb9e:	je     0x14000ebba
   14000eba0:	mov    rcx,QWORD PTR [rsp+0x58]
   14000eba5:	test   rcx,rcx
   14000eba8:	je     0x14000ebb0
   14000ebaa:	call   QWORD PTR [rip+0x327b0]        # 0x140041360
   14000ebb0:	test   r12,r12
   14000ebb3:	je     0x14000eb68
   14000ebb5:	mov    rcx,r12
   14000ebb8:	jmp    0x14000eb62
   14000ebba:	lea    r9,[rsp+0x20]
   14000ebbf:	lea    rdx,[rip+0x21542]        # 0x140030108
   14000ebc6:	lea    rcx,[rsp+0x58]
   14000ebcb:	mov    r8,r13
   14000ebce:	call   0x14000d128
   14000ebd3:	test   eax,eax
   14000ebd5:	jne    0x14000eba0
   14000ebd7:	lea    r8,[rip+0x21552]        # 0x140030130
   14000ebde:	mov    rdx,r14
   14000ebe1:	mov    rcx,r13
   14000ebe4:	call   0x140017684
   14000ebe9:	mov    rcx,QWORD PTR [rsp+0x58]
   14000ebee:	test   rcx,rcx
   14000ebf1:	je     0x14000ebf9
   14000ebf3:	call   QWORD PTR [rip+0x32767]        # 0x140041360
   14000ebf9:	test   r12,r12
   14000ebfc:	je     0x14000ec07
   14000ebfe:	mov    rcx,r12
   14000ec01:	call   QWORD PTR [rip+0x32759]        # 0x140041360
   14000ec07:	test   rsi,rsi
   14000ec0a:	je     0x14000ec15
   14000ec0c:	mov    rcx,rsi
   14000ec0f:	call   QWORD PTR [rip+0x3274b]        # 0x140041360
   14000ec15:	test   rdi,rdi
   14000ec18:	je     0x14000ec23
   14000ec1a:	mov    rcx,rdi
   14000ec1d:	call   QWORD PTR [rip+0x3273d]        # 0x140041360
   14000ec23:	test   rbx,rbx
   14000ec26:	je     0x14000ec31
   14000ec28:	mov    rcx,rbx
   14000ec2b:	call   QWORD PTR [rip+0x3272f]        # 0x140041360
   14000ec31:	mov    eax,0x1
   14000ec36:	mov    rcx,QWORD PTR [rbp+0xfa0]
   14000ec3d:	xor    rcx,rsp
   14000ec40:	call   0x140012670
   14000ec45:	mov    rbx,QWORD PTR [rsp+0x10f0]
   14000ec4d:	add    rsp,0x10b0
   14000ec54:	pop    r15
   14000ec56:	pop    r14
   14000ec58:	pop    r13
   14000ec5a:	pop    r12
   14000ec5c:	pop    rdi
   14000ec5d:	pop    rsi
   14000ec5e:	pop    rbp
   14000ec5f:	ret    
   14000ec60:	int3   
   14000ec61:	int3   
   14000ec62:	int3   
   14000ec63:	int3   
   14000ec64:	int3   
   14000ec65:	int3   
   14000ec66:	int3   
   14000ec67:	int3   
   14000ec68:	int3   
   14000ec69:	int3   
   14000ec6a:	int3   
   14000ec6b:	int3   
   14000ec6c:	mov    rax,rsp
   14000ec6f:	mov    QWORD PTR [rax+0x8],rbx
   14000ec73:	mov    QWORD PTR [rax+0x10],rsi
   14000ec77:	mov    QWORD PTR [rax+0x18],rdi
   14000ec7b:	push   rbp
   14000ec7c:	push   r12
   14000ec7e:	push   r13
   14000ec80:	lea    rbp,[rax-0xfa8]
   14000ec87:	mov    eax,0x1090
   14000ec8c:	call   0x140012f50
   14000ec91:	sub    rsp,rax
   14000ec94:	mov    rax,QWORD PTR [rip+0x30c95]        # 0x14003f930
   14000ec9b:	xor    rax,rsp
   14000ec9e:	mov    QWORD PTR [rbp+0xf80],rax
   14000eca5:	lea    rcx,[rbp-0x7e]
   14000eca9:	xor    r13d,r13d
   14000ecac:	xor    edx,edx
   14000ecae:	mov    r8d,0xffe
   14000ecb4:	mov    WORD PTR [rbp-0x80],r13w
   14000ecb9:	call   0x140012fb0
   14000ecbe:	lea    rcx,[rbp-0x80]
   14000ecc2:	mov    edx,0x800
   14000ecc7:	mov    QWORD PTR [rsp+0x48],r13
   14000eccc:	call   QWORD PTR [rip+0x20426]        # 0x14002f0f8
   14000ecd2:	dec    eax
   14000ecd4:	cmp    eax,0x7fe
   14000ecd9:	ja     0x14000ef25
   14000ecdf:	call   0x14000d66c
   14000ece4:	lea    rdx,[rbp-0x80]
   14000ece8:	test   eax,eax
   14000ecea:	je     0x14000ee3f
   14000ecf0:	lea    rcx,[rsp+0x28]
   14000ecf5:	call   0x14000f854
   14000ecfa:	lea    rdx,[rip+0x20ae7]        # 0x14002f7e8
   14000ed01:	lea    rcx,[rsp+0x38]
   14000ed06:	call   0x14000f854
   14000ed0b:	lea    rdx,[rsp+0x38]
   14000ed10:	lea    rcx,[rsp+0x28]
   14000ed15:	call   0x14000fb48
   14000ed1a:	mov    rax,QWORD PTR [rsp+0x38]
   14000ed1f:	or     edi,0xffffffff
   14000ed22:	test   rax,rax
   14000ed25:	je     0x14000ed5b
   14000ed27:	mov    ecx,edi
   14000ed29:	lock xadd DWORD PTR [rax+0x10],ecx
   14000ed2e:	add    ecx,edi
   14000ed30:	jne    0x14000ed5b
   14000ed32:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ed37:	mov    rcx,QWORD PTR [rbx]
   14000ed3a:	test   rcx,rcx
   14000ed3d:	je     0x14000ed45
   14000ed3f:	call   QWORD PTR [rip+0x20643]        # 0x14002f388
   14000ed45:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ed49:	test   rcx,rcx
   14000ed4c:	je     0x14000ed53
   14000ed4e:	call   0x140016c60
   14000ed53:	mov    rcx,rbx
   14000ed56:	call   0x140016ae8
   14000ed5b:	lea    rcx,[rip+0x20ad6]        # 0x14002f838
   14000ed62:	call   QWORD PTR [rip+0x202a0]        # 0x14002f008
   14000ed68:	lea    rdx,[rip+0x20aa9]        # 0x14002f818
   14000ed6f:	mov    rcx,rax
   14000ed72:	call   QWORD PTR [rip+0x202a0]        # 0x14002f018
   14000ed78:	lea    rcx,[rip+0x20af1]        # 0x14002f870
   14000ed7f:	mov    r12,rax
   14000ed82:	call   QWORD PTR [rip+0x20280]        # 0x14002f008
   14000ed88:	lea    rdx,[rip+0x20ac1]        # 0x14002f850
   14000ed8f:	mov    rcx,rax
   14000ed92:	call   QWORD PTR [rip+0x20280]        # 0x14002f018
   14000ed98:	mov    rbx,QWORD PTR [rsp+0x28]
   14000ed9d:	mov    rsi,rax
   14000eda0:	test   r12,r12
   14000eda3:	je     0x14000ee1d
   14000eda5:	test   rax,rax
   14000eda8:	je     0x14000ee1d
   14000edaa:	lea    rcx,[rsp+0x48]
   14000edaf:	call   r12
   14000edb2:	test   eax,eax
   14000edb4:	je     0x14000ee1d
   14000edb6:	test   rbx,rbx
   14000edb9:	je     0x14000edc0
   14000edbb:	mov    rcx,QWORD PTR [rbx]
   14000edbe:	jmp    0x14000edc3
   14000edc0:	mov    rcx,r13
   14000edc3:	lea    rdx,[rsp+0x50]
   14000edc8:	call   0x1400121e4
   14000edcd:	mov    rcx,QWORD PTR [rsp+0x48]
   14000edd2:	test   eax,eax
   14000edd4:	jne    0x14000ee1b
   14000edd6:	call   rsi
   14000edd8:	test   rbx,rbx
   14000eddb:	je     0x14000ee11
   14000eddd:	mov    eax,edi
   14000eddf:	lock xadd DWORD PTR [rbx+0x10],eax
   14000ede4:	add    eax,edi
   14000ede6:	jne    0x14000ee11
   14000ede8:	mov    rbx,QWORD PTR [rsp+0x28]
   14000eded:	mov    rcx,QWORD PTR [rbx]
   14000edf0:	test   rcx,rcx
   14000edf3:	je     0x14000edfb
   14000edf5:	call   QWORD PTR [rip+0x2058d]        # 0x14002f388
   14000edfb:	mov    rcx,QWORD PTR [rbx+0x8]
   14000edff:	test   rcx,rcx
   14000ee02:	je     0x14000ee09
   14000ee04:	call   0x140016c60
   14000ee09:	mov    rcx,rbx
   14000ee0c:	call   0x140016ae8
   14000ee11:	mov    eax,0x1
   14000ee16:	jmp    0x14000ef27
   14000ee1b:	call   rsi
   14000ee1d:	test   rbx,rbx
   14000ee20:	je     0x14000ef25
   14000ee26:	mov    eax,edi
   14000ee28:	lock xadd DWORD PTR [rbx+0x10],eax
   14000ee2d:	add    eax,edi
   14000ee2f:	jne    0x14000ef25
   14000ee35:	mov    rbx,QWORD PTR [rsp+0x28]
   14000ee3a:	jmp    0x14000ef01
   14000ee3f:	lea    rcx,[rsp+0x30]
   14000ee44:	call   0x14000f854
   14000ee49:	lea    rdx,[rip+0x20a38]        # 0x14002f888
   14000ee50:	lea    rcx,[rsp+0x40]
   14000ee55:	call   0x14000f854
   14000ee5a:	lea    rdx,[rsp+0x40]
   14000ee5f:	lea    rcx,[rsp+0x30]
   14000ee64:	call   0x14000fb48
   14000ee69:	mov    rax,QWORD PTR [rsp+0x40]
   14000ee6e:	or     edi,0xffffffff
   14000ee71:	test   rax,rax
   14000ee74:	je     0x14000eeaa
   14000ee76:	mov    ecx,edi
   14000ee78:	lock xadd DWORD PTR [rax+0x10],ecx
   14000ee7d:	add    ecx,edi
   14000ee7f:	jne    0x14000eeaa
   14000ee81:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ee86:	mov    rcx,QWORD PTR [rbx]
   14000ee89:	test   rcx,rcx
   14000ee8c:	je     0x14000ee94
   14000ee8e:	call   QWORD PTR [rip+0x204f4]        # 0x14002f388
   14000ee94:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ee98:	test   rcx,rcx
   14000ee9b:	je     0x14000eea2
   14000ee9d:	call   0x140016c60
   14000eea2:	mov    rcx,rbx
   14000eea5:	call   0x140016ae8
   14000eeaa:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eeaf:	test   rbx,rbx
   14000eeb2:	je     0x14000eeb9
   14000eeb4:	mov    rcx,QWORD PTR [rbx]
   14000eeb7:	jmp    0x14000eebc
   14000eeb9:	mov    rcx,r13
   14000eebc:	lea    rdx,[rsp+0x50]
   14000eec1:	call   0x1400121e4
   14000eec6:	test   eax,eax
   14000eec8:	jne    0x14000eeec
   14000eeca:	test   rbx,rbx
   14000eecd:	je     0x14000ee11
   14000eed3:	mov    eax,edi
   14000eed5:	lock xadd DWORD PTR [rbx+0x10],eax
   14000eeda:	add    eax,edi
   14000eedc:	jne    0x14000ee11
   14000eee2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000eee7:	jmp    0x14000eded
   14000eeec:	test   rbx,rbx
   14000eeef:	je     0x14000ef25
   14000eef1:	mov    eax,edi
   14000eef3:	lock xadd DWORD PTR [rbx+0x10],eax
   14000eef8:	add    eax,edi
   14000eefa:	jne    0x14000ef25
   14000eefc:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ef01:	mov    rcx,QWORD PTR [rbx]
   14000ef04:	test   rcx,rcx
   14000ef07:	je     0x14000ef0f
   14000ef09:	call   QWORD PTR [rip+0x20479]        # 0x14002f388
   14000ef0f:	mov    rcx,QWORD PTR [rbx+0x8]
   14000ef13:	test   rcx,rcx
   14000ef16:	je     0x14000ef1d
   14000ef18:	call   0x140016c60
   14000ef1d:	mov    rcx,rbx
   14000ef20:	call   0x140016ae8
   14000ef25:	xor    eax,eax
   14000ef27:	mov    rcx,QWORD PTR [rbp+0xf80]
   14000ef2e:	xor    rcx,rsp
   14000ef31:	call   0x140012670
   14000ef36:	lea    r11,[rsp+0x1090]
   14000ef3e:	mov    rbx,QWORD PTR [r11+0x20]
   14000ef42:	mov    rsi,QWORD PTR [r11+0x28]
   14000ef46:	mov    rdi,QWORD PTR [r11+0x30]
   14000ef4a:	mov    rsp,r11
   14000ef4d:	pop    r13
   14000ef4f:	pop    r12
   14000ef51:	pop    rbp
   14000ef52:	ret    
   14000ef53:	int3   
   14000ef54:	int3   
   14000ef55:	int3   
   14000ef56:	int3   
   14000ef57:	int3   
   14000ef58:	int3   
   14000ef59:	int3   
   14000ef5a:	int3   
   14000ef5b:	int3   
   14000ef5c:	mov    rax,rsp
   14000ef5f:	push   rsi
   14000ef60:	push   rdi
   14000ef61:	push   r12
   14000ef63:	sub    rsp,0x260
   14000ef6a:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000ef73:	mov    QWORD PTR [rax+0x18],rbx
   14000ef77:	mov    rax,QWORD PTR [rip+0x309b2]        # 0x14003f930
   14000ef7e:	xor    rax,rsp
   14000ef81:	mov    QWORD PTR [rsp+0x250],rax
   14000ef89:	movsxd r12,edx
   14000ef8c:	mov    rdi,rcx
   14000ef8f:	xor    ebx,ebx
   14000ef91:	mov    WORD PTR [rcx],bx
   14000ef94:	lea    rcx,[rsp+0x40]
   14000ef99:	call   0x14000e0bc
   14000ef9e:	mov    esi,eax
   14000efa0:	test   eax,eax
   14000efa2:	jns    0x14000efbb
   14000efa4:	mov    edx,eax
   14000efa6:	lea    rcx,[rip+0x20b53]        # 0x14002fb00
   14000efad:	call   0x14000fec8
   14000efb2:	xor    edx,edx
   14000efb4:	mov    ecx,esi
   14000efb6:	call   0x14002a9c0
   14000efbb:	lea    rdx,[rsp+0x40]
   14000efc0:	lea    rcx,[rsp+0x28]
   14000efc5:	call   0x14000f854
   14000efca:	mov    rax,QWORD PTR [rax]
   14000efcd:	test   rax,rax
   14000efd0:	je     0x14000efd7
   14000efd2:	mov    r8,QWORD PTR [rax]
   14000efd5:	jmp    0x14000efda
   14000efd7:	mov    r8,rbx
   14000efda:	mov    rdx,r12
   14000efdd:	mov    r9d,0x104
   14000efe3:	mov    rcx,rdi
   14000efe6:	call   0x140013da4
   14000efeb:	mov    rdi,QWORD PTR [rsp+0x28]
   14000eff0:	test   rdi,rdi
   14000eff3:	je     0x14000f02b
   14000eff5:	or     eax,0xffffffff
   14000eff8:	lock xadd DWORD PTR [rdi+0x10],eax
   14000effd:	dec    eax
   14000efff:	jne    0x14000f02b
   14000f001:	test   rdi,rdi
   14000f004:	je     0x14000f02b
   14000f006:	cmp    QWORD PTR [rdi],rbx
   14000f009:	je     0x14000f014
   14000f00b:	mov    rcx,QWORD PTR [rdi]
   14000f00e:	call   QWORD PTR [rip+0x20374]        # 0x14002f388
   14000f014:	mov    rcx,QWORD PTR [rdi+0x8]
   14000f018:	test   rcx,rcx
   14000f01b:	je     0x14000f022
   14000f01d:	call   0x140016c60
   14000f022:	mov    rcx,rdi
   14000f025:	call   0x140016ae8
   14000f02a:	nop
   14000f02b:	jmp    0x14000f033
   14000f02d:	xor    ebx,ebx
   14000f02f:	mov    esi,DWORD PTR [rsp+0x20]
   14000f033:	test   esi,esi
   14000f035:	setns  bl
   14000f038:	mov    eax,ebx
   14000f03a:	mov    rcx,QWORD PTR [rsp+0x250]
   14000f042:	xor    rcx,rsp
   14000f045:	call   0x140012670
   14000f04a:	mov    rbx,QWORD PTR [rsp+0x290]
   14000f052:	add    rsp,0x260
   14000f059:	pop    r12
   14000f05b:	pop    rdi
   14000f05c:	pop    rsi
   14000f05d:	ret    
   14000f05e:	int3   
   14000f05f:	int3   
   14000f060:	int3   
   14000f061:	int3   
   14000f062:	int3   
   14000f063:	int3   
   14000f064:	int3   
   14000f065:	int3   
   14000f066:	int3   
   14000f067:	int3   
   14000f068:	int3   
   14000f069:	int3   
   14000f06a:	int3   
   14000f06b:	int3   
   14000f06c:	mov    rax,rsp
   14000f06f:	push   rsi
   14000f070:	push   rdi
   14000f071:	push   r12
   14000f073:	sub    rsp,0x270
   14000f07a:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000f083:	mov    QWORD PTR [rax+0x18],rbx
   14000f087:	mov    rax,QWORD PTR [rip+0x308a2]        # 0x14003f930
   14000f08e:	xor    rax,rsp
   14000f091:	mov    QWORD PTR [rsp+0x260],rax
   14000f099:	movsxd r12,edx
   14000f09c:	mov    rdi,rcx
   14000f09f:	xor    ebx,ebx
   14000f0a1:	mov    WORD PTR [rcx],bx
   14000f0a4:	mov    DWORD PTR [rsp+0x20],0x104
   14000f0ac:	lea    r9,[rsp+0x50]
   14000f0b1:	xor    r8d,r8d
   14000f0b4:	xor    edx,edx
   14000f0b6:	lea    rcx,[rip+0x21453]        # 0x140030510
   14000f0bd:	call   QWORD PTR [rip+0x3230d]        # 0x1400413d0
   14000f0c3:	mov    esi,eax
   14000f0c5:	test   eax,eax
   14000f0c7:	jns    0x14000f0e0
   14000f0c9:	mov    edx,eax
   14000f0cb:	lea    rcx,[rip+0x20a9e]        # 0x14002fb70
   14000f0d2:	call   0x14000fec8
   14000f0d7:	xor    edx,edx
   14000f0d9:	mov    ecx,esi
   14000f0db:	call   0x14002a9c0
   14000f0e0:	lea    rdx,[rsp+0x50]
   14000f0e5:	lea    rcx,[rsp+0x38]
   14000f0ea:	call   0x14000f854
   14000f0ef:	mov    rax,QWORD PTR [rax]
   14000f0f2:	test   rax,rax
   14000f0f5:	je     0x14000f0fc
   14000f0f7:	mov    r8,QWORD PTR [rax]
   14000f0fa:	jmp    0x14000f0ff
   14000f0fc:	mov    r8,rbx
   14000f0ff:	mov    rdx,r12
   14000f102:	mov    r9d,0x104
   14000f108:	mov    rcx,rdi
   14000f10b:	call   0x140013da4
   14000f110:	mov    rdi,QWORD PTR [rsp+0x38]
   14000f115:	test   rdi,rdi
   14000f118:	je     0x14000f150
   14000f11a:	or     eax,0xffffffff
   14000f11d:	lock xadd DWORD PTR [rdi+0x10],eax
   14000f122:	dec    eax
   14000f124:	jne    0x14000f150
   14000f126:	test   rdi,rdi
   14000f129:	je     0x14000f150
   14000f12b:	cmp    QWORD PTR [rdi],rbx
   14000f12e:	je     0x14000f139
   14000f130:	mov    rcx,QWORD PTR [rdi]
   14000f133:	call   QWORD PTR [rip+0x2024f]        # 0x14002f388
   14000f139:	mov    rcx,QWORD PTR [rdi+0x8]
   14000f13d:	test   rcx,rcx
   14000f140:	je     0x14000f147
   14000f142:	call   0x140016c60
   14000f147:	mov    rcx,rdi
   14000f14a:	call   0x140016ae8
   14000f14f:	nop
   14000f150:	jmp    0x14000f158
   14000f152:	xor    ebx,ebx
   14000f154:	mov    esi,DWORD PTR [rsp+0x30]
   14000f158:	test   esi,esi
   14000f15a:	setns  bl
   14000f15d:	mov    eax,ebx
   14000f15f:	mov    rcx,QWORD PTR [rsp+0x260]
   14000f167:	xor    rcx,rsp
   14000f16a:	call   0x140012670
   14000f16f:	mov    rbx,QWORD PTR [rsp+0x2a0]
   14000f177:	add    rsp,0x270
   14000f17e:	pop    r12
   14000f180:	pop    rdi
   14000f181:	pop    rsi
   14000f182:	ret    
   14000f183:	int3   
   14000f184:	int3   
   14000f185:	int3   
   14000f186:	int3   
   14000f187:	int3   
   14000f188:	int3   
   14000f189:	int3   
   14000f18a:	int3   
   14000f18b:	int3   
   14000f18c:	mov    DWORD PTR [rsp+0x10],edx
   14000f190:	push   rbp
   14000f191:	push   rbx
   14000f192:	push   rsi
   14000f193:	push   rdi
   14000f194:	push   r12
   14000f196:	mov    rbp,rsp
   14000f199:	sub    rsp,0x70
   14000f19d:	and    QWORD PTR [rbp-0x48],0x0
   14000f1a2:	and    DWORD PTR [rbp-0x40],0x0
   14000f1a6:	and    QWORD PTR [rbp-0x38],0x0
   14000f1ab:	and    QWORD PTR [rbp-0x30],0x0
   14000f1b0:	and    DWORD PTR [rbp-0x28],0x0
   14000f1b4:	and    QWORD PTR [rbp-0x20],0x0
   14000f1b9:	and    QWORD PTR [rbp-0x18],0x0
   14000f1be:	and    DWORD PTR [rbp-0x10],0x0
   14000f1c2:	and    QWORD PTR [rbp-0x8],0x0
   14000f1c7:	mov    r12,rcx
   14000f1ca:	mov    esi,0x20019
   14000f1cf:	lea    r8,[rip+0x20b52]        # 0x14002fd28
   14000f1d6:	lea    rcx,[rbp-0x48]
   14000f1da:	mov    r9d,esi
   14000f1dd:	mov    rdx,0xffffffff80000000
   14000f1e4:	call   0x14000d094
   14000f1e9:	test   eax,eax
   14000f1eb:	je     0x14000f203
   14000f1ed:	mov    rcx,QWORD PTR [rbp-0x48]
   14000f1f1:	test   rcx,rcx
   14000f1f4:	je     0x14000f1fc
   14000f1f6:	call   QWORD PTR [rip+0x32164]        # 0x140041360
   14000f1fc:	xor    eax,eax
   14000f1fe:	jmp    0x14000f3bf
   14000f203:	and    QWORD PTR [rbp-0x50],0x0
   14000f208:	lea    rdx,[rbp-0x50]
   14000f20c:	lea    rcx,[rip+0x2033d]        # 0x14002f550
   14000f213:	call   QWORD PTR [rip+0x20277]        # 0x14002f490
   14000f219:	test   eax,eax
   14000f21b:	js     0x14000f1ed
   14000f21d:	mov    rdx,QWORD PTR [rbp-0x50]
   14000f221:	lea    rcx,[rbp+0x48]
   14000f225:	call   0x14000f854
   14000f22a:	mov    rcx,QWORD PTR [rbp-0x50]
   14000f22e:	call   QWORD PTR [rip+0x20264]        # 0x14002f498
   14000f234:	mov    rbx,QWORD PTR [rbp+0x48]
   14000f238:	test   rbx,rbx
   14000f23b:	je     0x14000f242
   14000f23d:	mov    r8,QWORD PTR [rbx]
   14000f240:	jmp    0x14000f245
   14000f242:	xor    r8d,r8d
   14000f245:	mov    rdi,QWORD PTR [rbp-0x48]
   14000f249:	lea    rcx,[rbp-0x30]
   14000f24d:	mov    r9d,esi
   14000f250:	mov    rdx,rdi
   14000f253:	call   0x14000d094
   14000f258:	test   eax,eax
   14000f25a:	je     0x14000f2b9
   14000f25c:	test   rbx,rbx
   14000f25f:	je     0x14000f299
   14000f261:	or     eax,0xffffffff
   14000f264:	lock xadd DWORD PTR [rbx+0x10],eax
   14000f269:	dec    eax
   14000f26b:	jne    0x14000f295
   14000f26d:	mov    rbx,QWORD PTR [rbp+0x48]
   14000f271:	mov    rcx,QWORD PTR [rbx]
   14000f274:	test   rcx,rcx
   14000f277:	je     0x14000f27f
   14000f279:	call   QWORD PTR [rip+0x20109]        # 0x14002f388
   14000f27f:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f283:	test   rcx,rcx
   14000f286:	je     0x14000f28d
   14000f288:	call   0x140016c60
   14000f28d:	mov    rcx,rbx
   14000f290:	call   0x140016ae8
   14000f295:	mov    rdi,QWORD PTR [rbp-0x48]
   14000f299:	mov    rcx,QWORD PTR [rbp-0x30]
   14000f29d:	test   rcx,rcx
   14000f2a0:	je     0x14000f2a8
   14000f2a2:	call   QWORD PTR [rip+0x320b8]        # 0x140041360
   14000f2a8:	test   rdi,rdi
   14000f2ab:	je     0x14000f1fc
   14000f2b1:	mov    rcx,rdi
   14000f2b4:	jmp    0x14000f1f6
   14000f2b9:	mov    r9d,esi
   14000f2bc:	mov    rsi,QWORD PTR [rbp-0x30]
   14000f2c0:	lea    r8,[rip+0x20a71]        # 0x14002fd38
   14000f2c7:	lea    rcx,[rbp-0x18]
   14000f2cb:	mov    rdx,rsi
   14000f2ce:	call   0x14000d094
   14000f2d3:	test   eax,eax
   14000f2d5:	je     0x14000f338
   14000f2d7:	test   rbx,rbx
   14000f2da:	je     0x14000f318
   14000f2dc:	or     eax,0xffffffff
   14000f2df:	lock xadd DWORD PTR [rbx+0x10],eax
   14000f2e4:	dec    eax
   14000f2e6:	jne    0x14000f310
   14000f2e8:	mov    rbx,QWORD PTR [rbp+0x48]
   14000f2ec:	mov    rcx,QWORD PTR [rbx]
   14000f2ef:	test   rcx,rcx
   14000f2f2:	je     0x14000f2fa
   14000f2f4:	call   QWORD PTR [rip+0x2008e]        # 0x14002f388
   14000f2fa:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f2fe:	test   rcx,rcx
   14000f301:	je     0x14000f308
   14000f303:	call   0x140016c60
   14000f308:	mov    rcx,rbx
   14000f30b:	call   0x140016ae8
   14000f310:	mov    rsi,QWORD PTR [rbp-0x30]
   14000f314:	mov    rdi,QWORD PTR [rbp-0x48]
   14000f318:	mov    rcx,QWORD PTR [rbp-0x18]
   14000f31c:	test   rcx,rcx
   14000f31f:	je     0x14000f327
   14000f321:	call   QWORD PTR [rip+0x32039]        # 0x140041360
   14000f327:	test   rsi,rsi
   14000f32a:	je     0x14000f2a8
   14000f330:	mov    rcx,rsi
   14000f333:	jmp    0x14000f2a2
   14000f338:	lea    r9,[rbp+0x38]
   14000f33c:	lea    rcx,[rbp-0x18]
   14000f340:	mov    r8,r12
   14000f343:	xor    edx,edx
   14000f345:	call   0x14000d128
   14000f34a:	test   eax,eax
   14000f34c:	jne    0x14000f2d7
   14000f34e:	test   rbx,rbx
   14000f351:	je     0x14000f38f
   14000f353:	or     eax,0xffffffff
   14000f356:	lock xadd DWORD PTR [rbx+0x10],eax
   14000f35b:	dec    eax
   14000f35d:	jne    0x14000f387
   14000f35f:	mov    rbx,QWORD PTR [rbp+0x48]
   14000f363:	mov    rcx,QWORD PTR [rbx]
   14000f366:	test   rcx,rcx
   14000f369:	je     0x14000f371
   14000f36b:	call   QWORD PTR [rip+0x20017]        # 0x14002f388
   14000f371:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f375:	test   rcx,rcx
   14000f378:	je     0x14000f37f
   14000f37a:	call   0x140016c60
   14000f37f:	mov    rcx,rbx
   14000f382:	call   0x140016ae8
   14000f387:	mov    rsi,QWORD PTR [rbp-0x30]
   14000f38b:	mov    rdi,QWORD PTR [rbp-0x48]
   14000f38f:	mov    rcx,QWORD PTR [rbp-0x18]
   14000f393:	test   rcx,rcx
   14000f396:	je     0x14000f39e
   14000f398:	call   QWORD PTR [rip+0x31fc2]        # 0x140041360
   14000f39e:	test   rsi,rsi
   14000f3a1:	je     0x14000f3ac
   14000f3a3:	mov    rcx,rsi
   14000f3a6:	call   QWORD PTR [rip+0x31fb4]        # 0x140041360
   14000f3ac:	test   rdi,rdi
   14000f3af:	je     0x14000f3ba
   14000f3b1:	mov    rcx,rdi
   14000f3b4:	call   QWORD PTR [rip+0x31fa6]        # 0x140041360
   14000f3ba:	mov    eax,0x1
   14000f3bf:	add    rsp,0x70
   14000f3c3:	pop    r12
   14000f3c5:	pop    rdi
   14000f3c6:	pop    rsi
   14000f3c7:	pop    rbx
   14000f3c8:	pop    rbp
   14000f3c9:	ret    
   14000f3ca:	int3   
   14000f3cb:	int3   
   14000f3cc:	int3   
   14000f3cd:	int3   
   14000f3ce:	int3   
   14000f3cf:	int3   
   14000f3d0:	int3   
   14000f3d1:	int3   
   14000f3d2:	int3   
   14000f3d3:	int3   
   14000f3d4:	int3   
   14000f3d5:	int3   
   14000f3d6:	int3   
   14000f3d7:	int3   
   14000f3d8:	int3   
   14000f3d9:	int3   
   14000f3da:	int3   
   14000f3db:	int3   
   14000f3dc:	mov    QWORD PTR [rsp+0x8],rbx
   14000f3e1:	push   rbp
   14000f3e2:	push   rsi
   14000f3e3:	push   rdi
   14000f3e4:	push   r12
   14000f3e6:	push   r13
   14000f3e8:	mov    rbp,rsp
   14000f3eb:	sub    rsp,0x60
   14000f3ef:	xor    r12d,r12d
   14000f3f2:	mov    rsi,rcx
   14000f3f5:	lea    rdx,[rip+0x20d4c]        # 0x140030148
   14000f3fc:	lea    rcx,[rbp+0x40]
   14000f400:	mov    QWORD PTR [rbp-0x18],r12
   14000f404:	mov    DWORD PTR [rbp-0x10],r12d
   14000f408:	mov    QWORD PTR [rbp-0x8],r12
   14000f40c:	lea    edi,[r12+0x1]
   14000f411:	call   0x14000f854
   14000f416:	mov    r11,QWORD PTR [rbp+0x40]
   14000f41a:	mov    QWORD PTR [rbp+0x48],r11
   14000f41e:	test   r11,r11
   14000f421:	je     0x14000f428
   14000f423:	lock add DWORD PTR [r11+0x10],edi
   14000f428:	lea    rdx,[rip+0x2025d]        # 0x14002f68c
   14000f42f:	lea    rcx,[rbp-0x30]
   14000f433:	call   0x14000f854
   14000f438:	lea    rdx,[rbp-0x30]
   14000f43c:	lea    rcx,[rbp+0x48]
   14000f440:	call   0x14000fb48
   14000f445:	mov    rax,QWORD PTR [rbp-0x30]
   14000f449:	or     r13d,0xffffffff
   14000f44d:	test   rax,rax
   14000f450:	je     0x14000f487
   14000f452:	mov    ecx,r13d
   14000f455:	lock xadd DWORD PTR [rax+0x10],ecx
   14000f45a:	add    ecx,r13d
   14000f45d:	jne    0x14000f487
   14000f45f:	mov    rbx,QWORD PTR [rbp-0x30]
   14000f463:	mov    rcx,QWORD PTR [rbx]
   14000f466:	test   rcx,rcx
   14000f469:	je     0x14000f471
   14000f46b:	call   QWORD PTR [rip+0x1ff17]        # 0x14002f388
   14000f471:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f475:	test   rcx,rcx
   14000f478:	je     0x14000f47f
   14000f47a:	call   0x140016c60
   14000f47f:	mov    rcx,rbx
   14000f482:	call   0x140016ae8
   14000f487:	lea    rcx,[rbp-0x28]
   14000f48b:	mov    rdx,rsi
   14000f48e:	call   0x14000f854
   14000f493:	lea    rdx,[rbp-0x28]
   14000f497:	lea    rcx,[rbp+0x48]
   14000f49b:	call   0x14000fb48
   14000f4a0:	mov    r11,QWORD PTR [rbp-0x28]
   14000f4a4:	test   r11,r11
   14000f4a7:	je     0x14000f4df
   14000f4a9:	mov    eax,r13d
   14000f4ac:	lock xadd DWORD PTR [r11+0x10],eax
   14000f4b2:	add    eax,r13d
   14000f4b5:	jne    0x14000f4df
   14000f4b7:	mov    rbx,QWORD PTR [rbp-0x28]
   14000f4bb:	mov    rcx,QWORD PTR [rbx]
   14000f4be:	test   rcx,rcx
   14000f4c1:	je     0x14000f4c9
   14000f4c3:	call   QWORD PTR [rip+0x1febf]        # 0x14002f388
   14000f4c9:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f4cd:	test   rcx,rcx
   14000f4d0:	je     0x14000f4d7
   14000f4d2:	call   0x140016c60
   14000f4d7:	mov    rcx,rbx
   14000f4da:	call   0x140016ae8
   14000f4df:	mov    rbx,QWORD PTR [rbp+0x48]
   14000f4e3:	test   rbx,rbx
   14000f4e6:	je     0x14000f4ed
   14000f4e8:	mov    rdx,QWORD PTR [rbx]
   14000f4eb:	jmp    0x14000f4f0
   14000f4ed:	mov    rdx,r12
   14000f4f0:	lea    rax,[rbp-0x20]
   14000f4f4:	mov    r9d,0x20019
   14000f4fa:	xor    r8d,r8d
   14000f4fd:	mov    rcx,0xffffffff80000001
   14000f504:	mov    QWORD PTR [rsp+0x20],rax
   14000f509:	call   QWORD PTR [rip+0x31e61]        # 0x140041370
   14000f50f:	test   eax,eax
   14000f511:	je     0x14000f626
   14000f517:	cmp    eax,0x2
   14000f51a:	jne    0x14000f5a6
   14000f520:	test   rbx,rbx
   14000f523:	je     0x14000f55a
   14000f525:	mov    eax,r13d
   14000f528:	lock xadd DWORD PTR [rbx+0x10],eax
   14000f52d:	add    eax,r13d
   14000f530:	jne    0x14000f55a
   14000f532:	mov    rbx,QWORD PTR [rbp+0x48]
   14000f536:	mov    rcx,QWORD PTR [rbx]
   14000f539:	test   rcx,rcx
   14000f53c:	je     0x14000f544
   14000f53e:	call   QWORD PTR [rip+0x1fe44]        # 0x14002f388
   14000f544:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f548:	test   rcx,rcx
   14000f54b:	je     0x14000f552
   14000f54d:	call   0x140016c60
   14000f552:	mov    rcx,rbx
   14000f555:	call   0x140016ae8
   14000f55a:	mov    r11,QWORD PTR [rbp+0x40]
   14000f55e:	test   r11,r11
   14000f561:	je     0x14000f70d
   14000f567:	mov    eax,r13d
   14000f56a:	lock xadd DWORD PTR [r11+0x10],eax
   14000f570:	add    eax,r13d
   14000f573:	jne    0x14000f70d
   14000f579:	mov    rbx,QWORD PTR [rbp+0x40]
   14000f57d:	mov    rcx,QWORD PTR [rbx]
   14000f580:	test   rcx,rcx
   14000f583:	je     0x14000f58b
   14000f585:	call   QWORD PTR [rip+0x1fdfd]        # 0x14002f388
   14000f58b:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f58f:	test   rcx,rcx
   14000f592:	je     0x14000f599
   14000f594:	call   0x140016c60
   14000f599:	mov    rcx,rbx
   14000f59c:	call   0x140016ae8
   14000f5a1:	jmp    0x14000f70d
   14000f5a6:	test   rbx,rbx
   14000f5a9:	je     0x14000f5e0
   14000f5ab:	mov    eax,r13d
   14000f5ae:	lock xadd DWORD PTR [rbx+0x10],eax
   14000f5b3:	add    eax,r13d
   14000f5b6:	jne    0x14000f5e0
   14000f5b8:	mov    rbx,QWORD PTR [rbp+0x48]
   14000f5bc:	mov    rcx,QWORD PTR [rbx]
   14000f5bf:	test   rcx,rcx
   14000f5c2:	je     0x14000f5ca
   14000f5c4:	call   QWORD PTR [rip+0x1fdbe]        # 0x14002f388
   14000f5ca:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f5ce:	test   rcx,rcx
   14000f5d1:	je     0x14000f5d8
   14000f5d3:	call   0x140016c60
   14000f5d8:	mov    rcx,rbx
   14000f5db:	call   0x140016ae8
   14000f5e0:	mov    r11,QWORD PTR [rbp+0x40]
   14000f5e4:	test   r11,r11
   14000f5e7:	je     0x14000f61f
   14000f5e9:	mov    eax,r13d
   14000f5ec:	lock xadd DWORD PTR [r11+0x10],eax
   14000f5f2:	add    eax,r13d
   14000f5f5:	jne    0x14000f61f
   14000f5f7:	mov    rbx,QWORD PTR [rbp+0x40]
   14000f5fb:	mov    rcx,QWORD PTR [rbx]
   14000f5fe:	test   rcx,rcx
   14000f601:	je     0x14000f609
   14000f603:	call   QWORD PTR [rip+0x1fd7f]        # 0x14002f388
   14000f609:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f60d:	test   rcx,rcx
   14000f610:	je     0x14000f617
   14000f612:	call   0x140016c60
   14000f617:	mov    rcx,rbx
   14000f61a:	call   0x140016ae8
   14000f61f:	xor    eax,eax
   14000f621:	jmp    0x14000f70f
   14000f626:	mov    rcx,QWORD PTR [rbp-0x20]
   14000f62a:	call   QWORD PTR [rip+0x31d30]        # 0x140041360
   14000f630:	mov    r11,QWORD PTR [rbp+0x40]
   14000f634:	test   r11,r11
   14000f637:	je     0x14000f63e
   14000f639:	mov    r8,QWORD PTR [r11]
   14000f63c:	jmp    0x14000f641
   14000f63e:	mov    r8,r12
   14000f641:	lea    rcx,[rbp-0x18]
   14000f645:	mov    rdx,0xffffffff80000001
   14000f64c:	mov    r9d,0x2001f
   14000f652:	call   0x14000d094
   14000f657:	test   eax,eax
   14000f659:	jne    0x14000f685
   14000f65b:	lea    rcx,[rbp-0x18]
   14000f65f:	mov    rdx,rsi
   14000f662:	call   0x14000f74c
   14000f667:	test   eax,eax
   14000f669:	je     0x14000f672
   14000f66b:	cmp    eax,0x2
   14000f66e:	cmovne edi,r12d
   14000f672:	mov    rcx,QWORD PTR [rbp-0x18]
   14000f676:	test   rcx,rcx
   14000f679:	je     0x14000f685
   14000f67b:	call   QWORD PTR [rip+0x31cdf]        # 0x140041360
   14000f681:	mov    QWORD PTR [rbp-0x18],r12
   14000f685:	test   rbx,rbx
   14000f688:	je     0x14000f6bf
   14000f68a:	mov    eax,r13d
   14000f68d:	lock xadd DWORD PTR [rbx+0x10],eax
   14000f692:	add    eax,r13d
   14000f695:	jne    0x14000f6bf
   14000f697:	mov    rbx,QWORD PTR [rbp+0x48]
   14000f69b:	mov    rcx,QWORD PTR [rbx]
   14000f69e:	test   rcx,rcx
   14000f6a1:	je     0x14000f6a9
   14000f6a3:	call   QWORD PTR [rip+0x1fcdf]        # 0x14002f388
   14000f6a9:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f6ad:	test   rcx,rcx
   14000f6b0:	je     0x14000f6b7
   14000f6b2:	call   0x140016c60
   14000f6b7:	mov    rcx,rbx
   14000f6ba:	call   0x140016ae8
   14000f6bf:	mov    r11,QWORD PTR [rbp+0x40]
   14000f6c3:	test   r11,r11
   14000f6c6:	je     0x14000f6fe
   14000f6c8:	mov    eax,r13d
   14000f6cb:	lock xadd DWORD PTR [r11+0x10],eax
   14000f6d1:	add    eax,r13d
   14000f6d4:	jne    0x14000f6fe
   14000f6d6:	mov    rbx,QWORD PTR [rbp+0x40]
   14000f6da:	mov    rcx,QWORD PTR [rbx]
   14000f6dd:	test   rcx,rcx
   14000f6e0:	je     0x14000f6e8
   14000f6e2:	call   QWORD PTR [rip+0x1fca0]        # 0x14002f388
   14000f6e8:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f6ec:	test   rcx,rcx
   14000f6ef:	je     0x14000f6f6
   14000f6f1:	call   0x140016c60
   14000f6f6:	mov    rcx,rbx
   14000f6f9:	call   0x140016ae8
   14000f6fe:	mov    rcx,QWORD PTR [rbp-0x18]
   14000f702:	test   rcx,rcx
   14000f705:	je     0x14000f70d
   14000f707:	call   QWORD PTR [rip+0x31c53]        # 0x140041360
   14000f70d:	mov    eax,edi
   14000f70f:	mov    rbx,QWORD PTR [rsp+0x90]
   14000f717:	add    rsp,0x60
   14000f71b:	pop    r13
   14000f71d:	pop    r12
   14000f71f:	pop    rdi
   14000f720:	pop    rsi
   14000f721:	pop    rbp
   14000f722:	ret    
   14000f723:	int3   
   14000f724:	rex push rbx
   14000f726:	sub    rsp,0x20
   14000f72a:	mov    rbx,rcx
   14000f72d:	mov    rcx,QWORD PTR [rcx]
   14000f730:	test   rcx,rcx
   14000f733:	je     0x14000f73f
   14000f735:	call   QWORD PTR [rip+0x31c25]        # 0x140041360
   14000f73b:	and    QWORD PTR [rbx],0x0
   14000f73f:	and    DWORD PTR [rbx+0x8],0x0
   14000f743:	add    rsp,0x20
   14000f747:	pop    rbx
   14000f748:	ret    
   14000f749:	int3   
   14000f74a:	int3   
   14000f74b:	int3   
   14000f74c:	mov    QWORD PTR [rsp+0x18],rbx
   14000f751:	push   rbp
   14000f752:	push   rsi
   14000f753:	push   rdi
   14000f754:	lea    rbp,[rsp-0x180]
   14000f75c:	sub    rsp,0x280
   14000f763:	mov    rax,QWORD PTR [rip+0x301c6]        # 0x14003f930
   14000f76a:	xor    rax,rsp
   14000f76d:	mov    QWORD PTR [rbp+0x170],rax
   14000f774:	mov    r9d,DWORD PTR [rcx+0x8]
   14000f778:	xor    eax,eax
   14000f77a:	mov    rsi,rdx
   14000f77d:	mov    r8,rdx
   14000f780:	mov    rdx,QWORD PTR [rcx]
   14000f783:	mov    rdi,rcx
   14000f786:	lea    rcx,[rsp+0x48]
   14000f78b:	or     r9d,0x2001f
   14000f792:	mov    QWORD PTR [rsp+0x48],rax
   14000f797:	mov    DWORD PTR [rsp+0x50],eax
   14000f79b:	mov    QWORD PTR [rsp+0x58],rax
   14000f7a0:	call   0x14000d094
   14000f7a5:	jmp    0x14000f7b6
   14000f7a7:	lea    rdx,[rsp+0x70]
   14000f7ac:	lea    rcx,[rsp+0x48]
   14000f7b1:	call   0x14000f74c
   14000f7b6:	mov    rcx,QWORD PTR [rsp+0x48]
   14000f7bb:	mov    ebx,eax
   14000f7bd:	test   eax,eax
   14000f7bf:	jne    0x14000f825
   14000f7c1:	xor    ebx,ebx
   14000f7c3:	lea    rax,[rsp+0x60]
   14000f7c8:	lea    r9,[rsp+0x40]
   14000f7cd:	mov    QWORD PTR [rsp+0x38],rax
   14000f7d2:	mov    QWORD PTR [rsp+0x30],rbx
   14000f7d7:	lea    r8,[rsp+0x70]
   14000f7dc:	xor    edx,edx
   14000f7de:	mov    QWORD PTR [rsp+0x28],rbx
   14000f7e3:	mov    DWORD PTR [rsp+0x40],0x100
   14000f7eb:	mov    QWORD PTR [rsp+0x20],rbx
   14000f7f0:	call   QWORD PTR [rip+0x31b82]        # 0x140041378
   14000f7f6:	test   eax,eax
   14000f7f8:	je     0x14000f7a7
   14000f7fa:	mov    rcx,QWORD PTR [rsp+0x48]
   14000f7ff:	test   rcx,rcx
   14000f802:	je     0x14000f80f
   14000f804:	call   QWORD PTR [rip+0x31b56]        # 0x140041360
   14000f80a:	mov    QWORD PTR [rsp+0x48],rbx
   14000f80f:	mov    rdx,rsi
   14000f812:	mov    rcx,rdi
   14000f815:	mov    DWORD PTR [rsp+0x50],ebx
   14000f819:	call   0x14000cffc
   14000f81e:	mov    rcx,QWORD PTR [rsp+0x48]
   14000f823:	mov    ebx,eax
   14000f825:	test   rcx,rcx
   14000f828:	je     0x14000f830
   14000f82a:	call   QWORD PTR [rip+0x31b30]        # 0x140041360
   14000f830:	mov    eax,ebx
   14000f832:	mov    rcx,QWORD PTR [rbp+0x170]
   14000f839:	xor    rcx,rsp
   14000f83c:	call   0x140012670
   14000f841:	mov    rbx,QWORD PTR [rsp+0x2b0]
   14000f849:	add    rsp,0x280
   14000f850:	pop    rdi
   14000f851:	pop    rsi
   14000f852:	pop    rbp
   14000f853:	ret    
   14000f854:	rex push rdi
   14000f856:	sub    rsp,0x30
   14000f85a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000f863:	mov    QWORD PTR [rsp+0x40],rbx
   14000f868:	mov    QWORD PTR [rsp+0x48],rsi
   14000f86d:	mov    rsi,rdx
   14000f870:	mov    rdi,rcx
   14000f873:	mov    ecx,0x18
   14000f878:	call   0x140016bbc
   14000f87d:	mov    rbx,rax
   14000f880:	mov    QWORD PTR [rsp+0x50],rax
   14000f885:	test   rax,rax
   14000f888:	je     0x14000f8b7
   14000f88a:	and    QWORD PTR [rax+0x8],0x0
   14000f88f:	mov    DWORD PTR [rax+0x10],0x1
   14000f896:	mov    rcx,rsi
   14000f899:	call   QWORD PTR [rip+0x1faf9]        # 0x14002f398
   14000f89f:	mov    QWORD PTR [rbx],rax
   14000f8a2:	test   rax,rax
   14000f8a5:	jne    0x14000f8b9
   14000f8a7:	test   rsi,rsi
   14000f8aa:	je     0x14000f8b9
   14000f8ac:	mov    ecx,0x8007000e
   14000f8b1:	call   0x14002a970
   14000f8b6:	int3   
   14000f8b7:	xor    ebx,ebx
   14000f8b9:	mov    QWORD PTR [rdi],rbx
   14000f8bc:	test   rbx,rbx
   14000f8bf:	jne    0x14000f8cc
   14000f8c1:	mov    ecx,0x8007000e
   14000f8c6:	call   0x14002a970
   14000f8cb:	int3   
   14000f8cc:	mov    rax,rdi
   14000f8cf:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f8d4:	mov    rsi,QWORD PTR [rsp+0x48]
   14000f8d9:	add    rsp,0x30
   14000f8dd:	pop    rdi
   14000f8de:	ret    
   14000f8df:	int3   
   14000f8e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f8e5:	mov    QWORD PTR [rsp+0x10],rbp
   14000f8ea:	mov    QWORD PTR [rsp+0x18],rsi
   14000f8ef:	push   rdi
   14000f8f0:	push   r12
   14000f8f2:	push   r13
   14000f8f4:	sub    rsp,0x20
   14000f8f8:	and    QWORD PTR [rcx+0x8],0x0
   14000f8fd:	mov    rsi,rcx
   14000f900:	mov    DWORD PTR [rcx+0x10],0x1
   14000f907:	mov    rcx,QWORD PTR [rdx]
   14000f90a:	mov    r13,r8
   14000f90d:	mov    r12,rdx
   14000f910:	test   rcx,rcx
   14000f913:	je     0x14000f927
   14000f915:	mov    rcx,QWORD PTR [rcx]
   14000f918:	test   rcx,rcx
   14000f91b:	je     0x14000f927
   14000f91d:	call   QWORD PTR [rip+0x1fa7d]        # 0x14002f3a0
   14000f923:	mov    ebp,eax
   14000f925:	jmp    0x14000f929
   14000f927:	xor    ebp,ebp
   14000f929:	mov    rax,QWORD PTR [r13+0x0]
   14000f92d:	test   rax,rax
   14000f930:	je     0x14000f944
   14000f932:	mov    rcx,QWORD PTR [rax]
   14000f935:	test   rcx,rcx
   14000f938:	je     0x14000f944
   14000f93a:	call   QWORD PTR [rip+0x1fa60]        # 0x14002f3a0
   14000f940:	mov    edi,eax
   14000f942:	jmp    0x14000f946
   14000f944:	xor    edi,edi
   14000f946:	lea    ebx,[rdi+rbp*1]
   14000f949:	cmp    ebx,edi
   14000f94b:	jb     0x14000f9f0
   14000f951:	mov    eax,ebx
   14000f953:	mov    ecx,0xffffffff
   14000f958:	add    rax,rax
   14000f95b:	cmp    rax,rcx
   14000f95e:	ja     0x14000f9f0
   14000f964:	lea    edx,[rbx+rbx*1]
   14000f967:	xor    ecx,ecx
   14000f969:	call   QWORD PTR [rip+0x1fa39]        # 0x14002f3a8
   14000f96f:	mov    rcx,rax
   14000f972:	mov    QWORD PTR [rsi],rax
   14000f975:	test   rax,rax
   14000f978:	jne    0x14000f989
   14000f97a:	test   ebx,ebx
   14000f97c:	je     0x14000f9d4
   14000f97e:	mov    ecx,0x8007000e
   14000f983:	call   0x14002a970
   14000f988:	int3   
   14000f989:	mov    r8,QWORD PTR [r12]
   14000f98d:	test   r8,r8
   14000f990:	je     0x14000f995
   14000f992:	mov    r8,QWORD PTR [r8]
   14000f995:	test   r8,r8
   14000f998:	je     0x14000f9ac
   14000f99a:	lea    r9d,[rbp+0x1]
   14000f99e:	lea    edx,[rbx+0x1]
   14000f9a1:	add    r9,r9
   14000f9a4:	add    rdx,rdx
   14000f9a7:	call   0x1400175fc
   14000f9ac:	mov    r8,QWORD PTR [r13+0x0]
   14000f9b0:	test   r8,r8
   14000f9b3:	je     0x14000f9b8
   14000f9b5:	mov    r8,QWORD PTR [r8]
   14000f9b8:	test   r8,r8
   14000f9bb:	je     0x14000f9d4
   14000f9bd:	mov    rax,QWORD PTR [rsi]
   14000f9c0:	lea    edx,[rdi+0x1]
   14000f9c3:	mov    ecx,ebp
   14000f9c5:	add    rdx,rdx
   14000f9c8:	lea    rcx,[rax+rcx*2]
   14000f9cc:	mov    r9,rdx
   14000f9cf:	call   0x1400175fc
   14000f9d4:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f9d9:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f9de:	mov    rax,rsi
   14000f9e1:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f9e6:	add    rsp,0x20
   14000f9ea:	pop    r13
   14000f9ec:	pop    r12
   14000f9ee:	pop    rdi
   14000f9ef:	ret    
   14000f9f0:	mov    ecx,0x8007000e
   14000f9f5:	call   0x14002a970
   14000f9fa:	int3   
   14000f9fb:	int3   
   14000f9fc:	mov    rax,rsp
   14000f9ff:	mov    QWORD PTR [rax+0x8],rbx
   14000fa03:	mov    QWORD PTR [rax+0x10],rsi
   14000fa07:	push   rdi
   14000fa08:	sub    rsp,0x40
   14000fa0c:	lea    rbx,[rcx+0x18]
   14000fa10:	xor    esi,esi
   14000fa12:	mov    rdi,rcx
   14000fa15:	cmp    QWORD PTR [rbx],rsi
   14000fa18:	jne    0x14000fad8
   14000fa1e:	mov    r8d,DWORD PTR [rcx+0x8]
   14000fa22:	mov    QWORD PTR [rax-0x18],rsi
   14000fa26:	mov    DWORD PTR [rax-0x20],esi
   14000fa29:	mov    r9d,0x400
   14000fa2f:	xor    edx,edx
   14000fa31:	mov    ecx,0x1300
   14000fa36:	mov    QWORD PTR [rax-0x28],rbx
   14000fa3a:	call   QWORD PTR [rip+0x1f6a0]        # 0x14002f0e0
   14000fa40:	mov    rcx,QWORD PTR [rbx]
   14000fa43:	test   rcx,rcx
   14000fa46:	je     0x14000fa7b
   14000fa48:	call   QWORD PTR [rip+0x1f682]        # 0x14002f0d0
   14000fa4e:	cmp    eax,0x1
   14000fa51:	jle    0x14000fad8
   14000fa57:	mov    rcx,QWORD PTR [rbx]
   14000fa5a:	cdqe   
   14000fa5c:	cmp    WORD PTR [rcx+rax*2-0x2],0xa
   14000fa62:	jne    0x14000fad8
   14000fa64:	mov    WORD PTR [rcx+rax*2-0x2],si
   14000fa69:	mov    rcx,QWORD PTR [rbx]
   14000fa6c:	cmp    WORD PTR [rcx+rax*2-0x4],0xd
   14000fa72:	jne    0x14000fad8
   14000fa74:	mov    WORD PTR [rcx+rax*2-0x4],si
   14000fa79:	jmp    0x14000fad8
   14000fa7b:	mov    edx,0x40
   14000fa80:	xor    ecx,ecx
   14000fa82:	call   QWORD PTR [rip+0x1f650]        # 0x14002f0d8
   14000fa88:	mov    rcx,rax
   14000fa8b:	mov    QWORD PTR [rbx],rax
   14000fa8e:	test   rax,rax
   14000fa91:	je     0x14000fad8
   14000fa93:	mov    r9d,DWORD PTR [rdi+0x8]
   14000fa97:	lea    eax,[r9+0x7ffbfe00]
   14000fa9e:	cmp    eax,0xfdff
   14000faa3:	ja     0x14000fab3
   14000faa5:	mov    edx,0x200
   14000faaa:	movzx  eax,r9w
   14000faae:	sub    ax,dx
   14000fab1:	jmp    0x14000fab5
   14000fab3:	mov    eax,esi
   14000fab5:	mov    edx,0x20
   14000faba:	test   ax,ax
   14000fabd:	je     0x14000facc
   14000fabf:	movzx  r9d,ax
   14000fac3:	lea    r8,[rip+0x207de]        # 0x1400302a8
   14000faca:	jmp    0x14000fad3
   14000facc:	lea    r8,[rip+0x207a5]        # 0x140030278
   14000fad3:	call   0x140013d5c
   14000fad8:	mov    rax,QWORD PTR [rbx]
   14000fadb:	mov    rsi,QWORD PTR [rsp+0x58]
   14000fae0:	mov    rbx,QWORD PTR [rsp+0x50]
   14000fae5:	add    rsp,0x40
   14000fae9:	pop    rdi
   14000faea:	ret    
   14000faeb:	int3   
   14000faec:	mov    QWORD PTR [rsp+0x10],rbx
   14000faf1:	push   rdi
   14000faf2:	sub    rsp,0x20
   14000faf6:	mov    rbx,QWORD PTR [rcx]
   14000faf9:	mov    rdi,rcx
   14000fafc:	test   rbx,rbx
   14000faff:	je     0x14000fb3a
   14000fb01:	or     eax,0xffffffff
   14000fb04:	lock xadd DWORD PTR [rbx+0x10],eax
   14000fb09:	dec    eax
   14000fb0b:	jne    0x14000fb36
   14000fb0d:	test   rbx,rbx
   14000fb10:	je     0x14000fb36
   14000fb12:	mov    rcx,QWORD PTR [rbx]
   14000fb15:	test   rcx,rcx
   14000fb18:	je     0x14000fb20
   14000fb1a:	call   QWORD PTR [rip+0x1f868]        # 0x14002f388
   14000fb20:	mov    rcx,QWORD PTR [rbx+0x8]
   14000fb24:	test   rcx,rcx
   14000fb27:	je     0x14000fb2e
   14000fb29:	call   0x140016c60
   14000fb2e:	mov    rcx,rbx
   14000fb31:	call   0x140016ae8
   14000fb36:	and    QWORD PTR [rdi],0x0
   14000fb3a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fb3f:	add    rsp,0x20
   14000fb43:	pop    rdi
   14000fb44:	ret    
   14000fb45:	int3   
   14000fb46:	int3   
   14000fb47:	int3   
   14000fb48:	rex push rdi
   14000fb4a:	sub    rsp,0x30
   14000fb4e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000fb57:	mov    QWORD PTR [rsp+0x40],rbx
   14000fb5c:	mov    QWORD PTR [rsp+0x48],rsi
   14000fb61:	mov    rbx,rdx
   14000fb64:	mov    rdi,rcx
   14000fb67:	mov    ecx,0x18
   14000fb6c:	call   0x140016bbc
   14000fb71:	mov    QWORD PTR [rsp+0x50],rax
   14000fb76:	test   rax,rax
   14000fb79:	je     0x14000fb8e
   14000fb7b:	mov    r8,rbx
   14000fb7e:	mov    rdx,rdi
   14000fb81:	mov    rcx,rax
   14000fb84:	call   0x14000f8e0
   14000fb89:	mov    rsi,rax
   14000fb8c:	jmp    0x14000fb90
   14000fb8e:	xor    esi,esi
   14000fb90:	test   rsi,rsi
   14000fb93:	jne    0x14000fba0
   14000fb95:	mov    ecx,0x8007000e
   14000fb9a:	call   0x14002a970
   14000fb9f:	int3   
   14000fba0:	mov    rbx,QWORD PTR [rdi]
   14000fba3:	test   rbx,rbx
   14000fba6:	je     0x14000fbe1
   14000fba8:	or     eax,0xffffffff
   14000fbab:	lock xadd DWORD PTR [rbx+0x10],eax
   14000fbb0:	dec    eax
   14000fbb2:	jne    0x14000fbdd
   14000fbb4:	test   rbx,rbx
   14000fbb7:	je     0x14000fbdd
   14000fbb9:	mov    rcx,QWORD PTR [rbx]
   14000fbbc:	test   rcx,rcx
   14000fbbf:	je     0x14000fbc7
   14000fbc1:	call   QWORD PTR [rip+0x1f7c1]        # 0x14002f388
   14000fbc7:	mov    rcx,QWORD PTR [rbx+0x8]
   14000fbcb:	test   rcx,rcx
   14000fbce:	je     0x14000fbd5
   14000fbd0:	call   0x140016c60
   14000fbd5:	mov    rcx,rbx
   14000fbd8:	call   0x140016ae8
   14000fbdd:	and    QWORD PTR [rdi],0x0
   14000fbe1:	mov    QWORD PTR [rdi],rsi
   14000fbe4:	mov    rax,rdi
   14000fbe7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000fbec:	mov    rsi,QWORD PTR [rsp+0x48]
   14000fbf1:	add    rsp,0x30
   14000fbf5:	pop    rdi
   14000fbf6:	ret    
   14000fbf7:	int3   
   14000fbf8:	jmp    0x140017ab8
   14000fbfd:	int3   
   14000fbfe:	int3   
   14000fbff:	int3   
   14000fc00:	int3   
   14000fc01:	int3   
   14000fc02:	int3   
   14000fc03:	int3   
   14000fc04:	int3   
   14000fc05:	int3   
   14000fc06:	int3   
   14000fc07:	int3   
   14000fc08:	mov    QWORD PTR [rsp+0x18],rbx
   14000fc0d:	mov    QWORD PTR [rsp+0x20],rsi
   14000fc12:	push   rdi
   14000fc13:	sub    rsp,0x50
   14000fc17:	mov    rax,QWORD PTR [rip+0x2fd12]        # 0x14003f930
   14000fc1e:	xor    rax,rsp
   14000fc21:	mov    QWORD PTR [rsp+0x40],rax
   14000fc26:	mov    rdi,rcx
   14000fc29:	lea    rcx,[rsp+0x30]
   14000fc2e:	mov    rbx,rdx
   14000fc31:	call   0x140018950
   14000fc36:	lea    rcx,[rsp+0x30]
   14000fc3b:	call   0x140017ab8
   14000fc40:	lea    r8,[rip+0x20849]        # 0x140030490
   14000fc47:	mov    rdx,rbx
   14000fc4a:	mov    r9,rax
   14000fc4d:	mov    rcx,rdi
   14000fc50:	call   0x140018934
   14000fc55:	xor    esi,esi
   14000fc57:	test   rax,rax
   14000fc5a:	je     0x14000fc94
   14000fc5c:	lea    rcx,[rax+0x4]
   14000fc60:	cmp    rcx,rbx
   14000fc63:	jae    0x14000fc94
   14000fc65:	movzx  r8d,WORD PTR [rsp+0x38]
   14000fc6b:	sub    rbx,rax
   14000fc6e:	lea    rcx,[rdi+rax*2]
   14000fc72:	mov    DWORD PTR [rsp+0x20],r8d
   14000fc77:	lea    rdx,[rbx-0x1]
   14000fc7b:	lea    r9,[rip+0x2082e]        # 0x1400304b0
   14000fc82:	or     r8,0xffffffffffffffff
   14000fc86:	call   0x140013d80
   14000fc8b:	test   eax,eax
   14000fc8d:	jns    0x14000fc94
   14000fc8f:	mov    WORD PTR [rdi+rbx*2-0x2],si
   14000fc94:	mov    rax,rdi
   14000fc97:	mov    rcx,QWORD PTR [rsp+0x40]
   14000fc9c:	xor    rcx,rsp
   14000fc9f:	call   0x140012670
   14000fca4:	mov    rbx,QWORD PTR [rsp+0x70]
   14000fca9:	mov    rsi,QWORD PTR [rsp+0x78]
   14000fcae:	add    rsp,0x50
   14000fcb2:	pop    rdi
   14000fcb3:	ret    
   14000fcb4:	int3   
   14000fcb5:	int3   
   14000fcb6:	int3   
   14000fcb7:	int3   
   14000fcb8:	int3   
   14000fcb9:	int3   
   14000fcba:	int3   
   14000fcbb:	int3   
   14000fcbc:	int3   
   14000fcbd:	int3   
   14000fcbe:	int3   
   14000fcbf:	int3   
   14000fcc0:	int3   
   14000fcc1:	int3   
   14000fcc2:	int3   
   14000fcc3:	int3   
   14000fcc4:	int3   
   14000fcc5:	int3   
   14000fcc6:	int3   
   14000fcc7:	int3   
   14000fcc8:	mov    QWORD PTR [rsp+0x18],rbx
   14000fccd:	mov    QWORD PTR [rsp+0x20],rsi
   14000fcd2:	push   rbp
   14000fcd3:	push   rdi
   14000fcd4:	push   r12
   14000fcd6:	push   r13
   14000fcd8:	push   r14
   14000fcda:	lea    rbp,[rsp-0xf90]
   14000fce2:	mov    eax,0x1090
   14000fce7:	call   0x140012f50
   14000fcec:	sub    rsp,rax
   14000fcef:	mov    rax,QWORD PTR [rip+0x2fc3a]        # 0x14003f930
   14000fcf6:	xor    rax,rsp
   14000fcf9:	mov    QWORD PTR [rbp+0xf80],rax
   14000fd00:	mov    rsi,rcx
   14000fd03:	mov    rdi,rdx
   14000fd06:	mov    ebx,0x7fe
   14000fd0b:	lea    rcx,[rbp+0x782]
   14000fd12:	xor    r13d,r13d
   14000fd15:	xor    edx,edx
   14000fd17:	mov    r8d,ebx
   14000fd1a:	mov    WORD PTR [rbp+0x780],r13w
   14000fd22:	call   0x140012fb0
   14000fd27:	or     r14,0xffffffffffffffff
   14000fd2b:	lea    rcx,[rbp+0x780]
   14000fd32:	mov    r8,r14
   14000fd35:	mov    r9,rsi
   14000fd38:	mov    edx,0x400
   14000fd3d:	mov    QWORD PTR [rsp+0x20],rdi
   14000fd42:	call   0x140018dcc
   14000fd47:	test   eax,eax
   14000fd49:	jns    0x14000fd53
   14000fd4b:	mov    WORD PTR [rbp+0xf7e],r13w
   14000fd53:	xor    edx,edx
   14000fd55:	lea    rcx,[rsp+0x42]
   14000fd5a:	mov    WORD PTR [rsp+0x40],r13w
   14000fd60:	lea    r8d,[rdx+0x3e]
   14000fd64:	call   0x140012fb0
   14000fd69:	mov    edi,0x20
   14000fd6e:	lea    rcx,[rsp+0x40]
   14000fd73:	mov    edx,edi
   14000fd75:	call   0x14000fc08
   14000fd7a:	lea    r8,[rip+0x2061b]        # 0x14003039c
   14000fd81:	lea    rcx,[rsp+0x40]
   14000fd86:	mov    edx,edi
   14000fd88:	call   0x140017684
   14000fd8d:	lea    rcx,[rbp-0x7e]
   14000fd91:	mov    r8,rbx
   14000fd94:	xor    edx,edx
   14000fd96:	mov    WORD PTR [rbp-0x80],r13w
   14000fd9b:	call   0x140012fb0
   14000fda0:	xor    eax,eax
   14000fda2:	mov    rcx,r14
   14000fda5:	mov    rdi,rsi
   14000fda8:	repnz scas ax,WORD PTR es:[rdi]
   14000fdab:	not    rcx
   14000fdae:	dec    rcx
   14000fdb1:	cmp    rcx,0x6
   14000fdb5:	jbe    0x14000fdce
   14000fdb7:	lea    rsi,[rsi+rcx*2-0xc]
   14000fdbc:	lea    rdi,[rip+0x206fd]        # 0x1400304c0
   14000fdc3:	lea    ecx,[rax+0x7]
   14000fdc6:	repz cmps WORD PTR ds:[rsi],WORD PTR es:[rdi]
   14000fdc9:	lea    edx,[rax+0x1]
   14000fdcc:	je     0x14000fdd1
   14000fdce:	mov    edx,r13d
   14000fdd1:	lea    rdi,[rsp+0x40]
   14000fdd6:	mov    rcx,r14
   14000fdd9:	lea    rbx,[rip+0x205cc]        # 0x1400303ac
   14000fde0:	repnz scas ax,WORD PTR es:[rdi]
   14000fde3:	lea    rax,[rip+0x206e6]        # 0x1400304d0
   14000fdea:	test   edx,edx
   14000fdec:	not    rcx
   14000fdef:	cmovne rbx,rax
   14000fdf3:	lea    rsi,[rcx-0x1]
   14000fdf7:	lea    r12,[rcx+rcx*1-0x2]
   14000fdfc:	call   QWORD PTR [rip+0x1f30e]        # 0x14002f110
   14000fe02:	mov    edi,eax
   14000fe04:	call   QWORD PTR [rip+0x1f2fe]        # 0x14002f108
   14000fe0a:	mov    edx,0x3ff
   14000fe0f:	sub    rdx,rsi
   14000fe12:	lea    rsi,[rbp+0x780]
   14000fe19:	lea    rcx,[rbp+r12*1-0x80]
   14000fe1e:	mov    QWORD PTR [rsp+0x38],rsi
   14000fe23:	mov    QWORD PTR [rsp+0x30],rbx
   14000fe28:	lea    r9,[rip+0x206b1]        # 0x1400304e0
   14000fe2f:	mov    r8,r14
   14000fe32:	mov    DWORD PTR [rsp+0x28],edi
   14000fe36:	mov    DWORD PTR [rsp+0x20],eax
   14000fe3a:	call   0x140013d80
   14000fe3f:	test   eax,eax
   14000fe41:	jns    0x14000fe62
   14000fe43:	mov    rdx,r13
   14000fe46:	lea    rax,[rip+0x206bb]        # 0x140030508
   14000fe4d:	movzx  eax,WORD PTR [rdx+rax*1]
   14000fe51:	add    rdx,0x2
   14000fe55:	mov    WORD PTR [rbp+rdx*1+0x774],ax
   14000fe5d:	test   ax,ax
   14000fe60:	jne    0x14000fe46
   14000fe62:	lea    rdx,[rsp+0x40]
   14000fe67:	lea    rcx,[rbp-0x80]
   14000fe6b:	mov    r8,r12
   14000fe6e:	call   0x140018e00
   14000fe73:	xor    eax,eax
   14000fe75:	lea    rdi,[rbp-0x80]
   14000fe79:	mov    rcx,r14
   14000fe7c:	repnz scas ax,WORD PTR es:[rdi]
   14000fe7f:	mov    eax,DWORD PTR [rip+0x20557]        # 0x1400303dc
   14000fe85:	lea    rcx,[rbp-0x80]
   14000fe89:	mov    DWORD PTR [rdi-0x2],eax
   14000fe8c:	call   QWORD PTR [rip+0x1f26e]        # 0x14002f100
   14000fe92:	mov    rcx,QWORD PTR [rbp+0xf80]
   14000fe99:	xor    rcx,rsp
   14000fe9c:	call   0x140012670
   14000fea1:	lea    r11,[rsp+0x1090]
   14000fea9:	mov    rbx,QWORD PTR [r11+0x40]
   14000fead:	mov    rsi,QWORD PTR [r11+0x48]
   14000feb1:	mov    rsp,r11
   14000feb4:	pop    r14
   14000feb6:	pop    r13
   14000feb8:	pop    r12
   14000feba:	pop    rdi
   14000febb:	pop    rbp
   14000febc:	ret    
   14000febd:	int3   
   14000febe:	int3   
   14000febf:	int3   
   14000fec0:	int3   
   14000fec1:	int3   
   14000fec2:	int3   
   14000fec3:	int3   
   14000fec4:	int3   
   14000fec5:	int3   
   14000fec6:	int3   
   14000fec7:	int3   
   14000fec8:	mov    rax,rsp
   14000fecb:	mov    QWORD PTR [rax+0x8],rcx
   14000fecf:	mov    QWORD PTR [rax+0x10],rdx
   14000fed3:	mov    QWORD PTR [rax+0x18],r8
   14000fed7:	mov    QWORD PTR [rax+0x20],r9
   14000fedb:	sub    rsp,0x28
   14000fedf:	lea    rdx,[rax+0x10]
   14000fee3:	call   0x14000fcc8
   14000fee8:	add    rsp,0x28
   14000feec:	ret    
   14000feed:	int3   
   14000feee:	int3   
   14000feef:	int3   
   14000fef0:	lea    eax,[rcx+rdx*1]
   14000fef3:	cmp    eax,edx
   14000fef5:	jae    0x14000fefd
   14000fef7:	mov    eax,0x80070216
   14000fefc:	ret    
   14000fefd:	mov    DWORD PTR [r8],eax
   14000ff00:	xor    eax,eax
   14000ff02:	ret    
   14000ff03:	int3   
   14000ff04:	int3   
   14000ff05:	int3   
   14000ff06:	int3   
   14000ff07:	int3   
   14000ff08:	int3   
   14000ff09:	int3   
   14000ff0a:	int3   
   14000ff0b:	int3   
   14000ff0c:	int3   
   14000ff0d:	int3   
   14000ff0e:	int3   
   14000ff0f:	int3   
   14000ff10:	mov    eax,edx
   14000ff12:	mov    r9d,ecx
   14000ff15:	imul   r9,rax
   14000ff19:	mov    eax,0xffffffff
   14000ff1e:	cmp    r9,rax
   14000ff21:	ja     0x14000ff29
   14000ff23:	mov    DWORD PTR [r8],r9d
   14000ff26:	xor    eax,eax
   14000ff28:	ret    
   14000ff29:	mov    eax,0x80070216
   14000ff2e:	ret    
   14000ff2f:	int3   
   14000ff30:	int3   
   14000ff31:	int3   
   14000ff32:	int3   
   14000ff33:	int3   
   14000ff34:	int3   
   14000ff35:	int3   
   14000ff36:	int3   
   14000ff37:	int3   
   14000ff38:	int3   
   14000ff39:	int3   
   14000ff3a:	int3   
   14000ff3b:	int3   
   14000ff3c:	int3   
   14000ff3d:	int3   
   14000ff3e:	int3   
   14000ff3f:	int3   
   14000ff40:	sub    rsp,0x28
   14000ff44:	and    QWORD PTR [rsp+0x30],0x0
   14000ff4a:	lea    r8,[rsp+0x30]
   14000ff4f:	lea    rdx,[rip+0xffffffffffffffea]        # 0x14000ff40
   14000ff56:	mov    ecx,0x4
   14000ff5b:	call   QWORD PTR [rip+0x1f1b7]        # 0x14002f118
   14000ff61:	mov    rax,QWORD PTR [rsp+0x30]
   14000ff66:	add    rsp,0x28
   14000ff6a:	ret    
   14000ff6b:	int3   
   14000ff6c:	int3   
   14000ff6d:	int3   
   14000ff6e:	int3   
   14000ff6f:	int3   
   14000ff70:	int3   
   14000ff71:	int3   
   14000ff72:	int3   
   14000ff73:	int3   
   14000ff74:	int3   
   14000ff75:	int3   
   14000ff76:	int3   
   14000ff77:	int3   
   14000ff78:	int3   
   14000ff79:	int3   
   14000ff7a:	int3   
   14000ff7b:	int3   
   14000ff7c:	int3   
   14000ff7d:	int3   
   14000ff7e:	int3   
   14000ff7f:	int3   
   14000ff80:	sub    rsp,0x38
   14000ff84:	lea    r8,[rip+0x20995]        # 0x140030920
   14000ff8b:	lea    rdx,[rip+0x209d6]        # 0x140030968
   14000ff92:	xor    r9d,r9d
   14000ff95:	xor    ecx,ecx
   14000ff97:	mov    DWORD PTR [rsp+0x28],0x1
   14000ff9f:	and    QWORD PTR [rsp+0x20],0x0
   14000ffa5:	call   QWORD PTR [rip+0x3142d]        # 0x1400413d8
   14000ffab:	add    rsp,0x38
   14000ffaf:	ret    
   14000ffb0:	int3   
   14000ffb1:	int3   
   14000ffb2:	int3   
   14000ffb3:	int3   
   14000ffb4:	int3   
   14000ffb5:	int3   
   14000ffb6:	int3   
   14000ffb7:	int3   
   14000ffb8:	int3   
   14000ffb9:	int3   
   14000ffba:	int3   
   14000ffbb:	int3   
   14000ffbc:	int3   
   14000ffbd:	int3   
   14000ffbe:	int3   
   14000ffbf:	int3   
   14000ffc0:	mov    rax,rsp
   14000ffc3:	mov    QWORD PTR [rax+0x10],rbx
   14000ffc7:	mov    QWORD PTR [rax+0x18],rsi
   14000ffcb:	mov    QWORD PTR [rax+0x20],rdi
   14000ffcf:	push   rbp
   14000ffd0:	push   r12
   14000ffd2:	push   r13
   14000ffd4:	lea    rbp,[rax-0x3f88]
   14000ffdb:	mov    eax,0x4070
   14000ffe0:	call   0x140012f50
   14000ffe5:	sub    rsp,rax
   14000ffe8:	mov    rax,QWORD PTR [rip+0x2f941]        # 0x14003f930
   14000ffef:	xor    rax,rsp
   14000fff2:	mov    QWORD PTR [rbp+0x3f60],rax
   14000fff9:	xor    esi,esi
   14000fffb:	mov    rbx,rcx
   14000fffe:	mov    r13d,0xffe
   140010004:	mov    DWORD PTR [rsp+0x44],esi
   140010008:	lea    rcx,[rsp+0x62]
   14001000d:	xor    edx,edx
   14001000f:	mov    r8d,r13d
   140010012:	mov    edi,esi
   140010014:	mov    WORD PTR [rsp+0x60],si
   140010019:	call   0x140012fb0
   14001001e:	lea    rcx,[rbp+0xf62]
   140010025:	mov    r8d,r13d
   140010028:	xor    edx,edx
   14001002a:	mov    WORD PTR [rbp+0xf60],si
   140010031:	call   0x140012fb0
   140010036:	lea    rax,[rsp+0x48]
   14001003b:	lea    rdx,[rip+0x206fe]        # 0x140030740
   140010042:	mov    r12d,0x800
   140010048:	mov    r9d,0x20019
   14001004e:	xor    r8d,r8d
   140010051:	mov    rcx,0xffffffff80000002
   140010058:	mov    QWORD PTR [rsp+0x20],rax
   14001005d:	mov    DWORD PTR [rsp+0x40],r12d
   140010062:	call   QWORD PTR [rip+0x31308]        # 0x140041370
   140010068:	test   eax,eax
   14001006a:	jne    0x140010193
   140010070:	xor    edx,edx
   140010072:	jmp    0x140010162
   140010077:	lea    rax,[rsp+0x60]
   14001007c:	lea    r9,[rip+0x2072d]        # 0x1400307b0
   140010083:	lea    r8,[rip+0x2077e]        # 0x140030808
   14001008a:	lea    rcx,[rbp+0xf60]
   140010091:	mov    rdx,r12
   140010094:	mov    QWORD PTR [rsp+0x20],rax
   140010099:	call   0x140013d5c
   14001009e:	lea    r11,[rsp+0x50]
   1400100a3:	lea    rdx,[rbp+0xf60]
   1400100aa:	mov    r9d,0x20019
   1400100b0:	xor    r8d,r8d
   1400100b3:	mov    rcx,0xffffffff80000002
   1400100ba:	mov    QWORD PTR [rsp+0x20],r11
   1400100bf:	call   QWORD PTR [rip+0x312ab]        # 0x140041370
   1400100c5:	test   eax,eax
   1400100c7:	jne    0x140010159
   1400100cd:	lea    rcx,[rbp+0x1f62]
   1400100d4:	mov    r8,r13
   1400100d7:	xor    edx,edx
   1400100d9:	mov    WORD PTR [rbp+0x1f60],si
   1400100e0:	call   0x140012fb0
   1400100e5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400100ea:	lea    rax,[rsp+0x40]
   1400100ef:	lea    r9,[rsp+0x44]
   1400100f4:	lea    rdx,[rip+0x205bd]        # 0x1400306b8
   1400100fb:	mov    QWORD PTR [rsp+0x28],rax
   140010100:	lea    rax,[rbp+0x1f60]
   140010107:	xor    r8d,r8d
   14001010a:	mov    QWORD PTR [rsp+0x20],rax
   14001010f:	mov    DWORD PTR [rsp+0x40],r12d
   140010114:	call   QWORD PTR [rip+0x3124e]        # 0x140041368
   14001011a:	test   eax,eax
   14001011c:	jne    0x140010159
   14001011e:	cmp    DWORD PTR [rsp+0x40],esi
   140010122:	jbe    0x140010159
   140010124:	mov    rcx,QWORD PTR [rsp+0x50]
   140010129:	lea    rax,[rsp+0x40]
   14001012e:	lea    r9,[rsp+0x44]
   140010133:	mov    QWORD PTR [rsp+0x28],rax
   140010138:	lea    rax,[rbp+0x2f60]
   14001013f:	lea    rdx,[rip+0x205e2]        # 0x140030728
   140010146:	xor    r8d,r8d
   140010149:	mov    DWORD PTR [rsp+0x40],r12d
   14001014e:	mov    QWORD PTR [rsp+0x20],rax
   140010153:	call   QWORD PTR [rip+0x3120f]        # 0x140041368
   140010159:	inc    edi
   14001015b:	mov    DWORD PTR [rsp+0x40],r12d
   140010160:	mov    edx,edi
   140010162:	mov    rcx,QWORD PTR [rsp+0x48]
   140010167:	mov    QWORD PTR [rsp+0x38],rsi
   14001016c:	mov    QWORD PTR [rsp+0x30],rsi
   140010171:	lea    r9,[rsp+0x40]
   140010176:	lea    r8,[rsp+0x60]
   14001017b:	mov    QWORD PTR [rsp+0x28],rsi
   140010180:	mov    QWORD PTR [rsp+0x20],rsi
   140010185:	call   QWORD PTR [rip+0x311ed]        # 0x140041378
   14001018b:	test   eax,eax
   14001018d:	je     0x140010077
   140010193:	lea    rdx,[rbp+0x2f60]
   14001019a:	mov    rcx,rbx
   14001019d:	call   0x14000f854
   1400101a2:	mov    rax,rbx
   1400101a5:	mov    rcx,QWORD PTR [rbp+0x3f60]
   1400101ac:	xor    rcx,rsp
   1400101af:	call   0x140012670
   1400101b4:	lea    r11,[rsp+0x4070]
   1400101bc:	mov    rbx,QWORD PTR [r11+0x28]
   1400101c0:	mov    rsi,QWORD PTR [r11+0x30]
   1400101c4:	mov    rdi,QWORD PTR [r11+0x38]
   1400101c8:	mov    rsp,r11
   1400101cb:	pop    r13
   1400101cd:	pop    r12
   1400101cf:	pop    rbp
   1400101d0:	ret    
   1400101d1:	int3   
   1400101d2:	int3   
   1400101d3:	int3   
   1400101d4:	int3   
   1400101d5:	int3   
   1400101d6:	int3   
   1400101d7:	int3   
   1400101d8:	int3   
   1400101d9:	int3   
   1400101da:	int3   
   1400101db:	int3   
   1400101dc:	int3   
   1400101dd:	int3   
   1400101de:	int3   
   1400101df:	int3   
   1400101e0:	rex push rbp
   1400101e2:	push   rsi
   1400101e3:	push   rdi
   1400101e4:	push   r13
   1400101e6:	push   r14
   1400101e8:	lea    rbp,[rsp-0xfb0]
   1400101f0:	mov    eax,0x10b0
   1400101f5:	call   0x140012f50
   1400101fa:	sub    rsp,rax
   1400101fd:	mov    QWORD PTR [rbp-0x78],0xfffffffffffffffe
   140010205:	mov    QWORD PTR [rsp+0x10f0],rbx
   14001020d:	mov    rax,QWORD PTR [rip+0x2f71c]        # 0x14003f930
   140010214:	xor    rax,rsp
   140010217:	mov    QWORD PTR [rbp+0xfa0],rax
   14001021e:	mov    r13d,r8d
   140010221:	mov    r14,rdx
   140010224:	mov    rsi,rcx
   140010227:	mov    QWORD PTR [rbp-0x70],rcx
   14001022b:	and    DWORD PTR [rsp+0x20],0x0
   140010230:	and    QWORD PTR [rsp+0x28],0x0
   140010236:	and    DWORD PTR [rsp+0x30],0x0
   14001023b:	and    QWORD PTR [rsp+0x38],0x0
   140010241:	xor    ebx,ebx
   140010243:	mov    QWORD PTR [rsp+0x58],rbx
   140010248:	and    DWORD PTR [rsp+0x60],ebx
   14001024c:	and    QWORD PTR [rsp+0x68],rbx
   140010251:	xor    edi,edi
   140010253:	mov    QWORD PTR [rsp+0x40],rdi
   140010258:	and    DWORD PTR [rsp+0x48],edi
   14001025c:	and    QWORD PTR [rsp+0x50],rdi
   140010261:	and    QWORD PTR [rsp+0x70],rdi
   140010266:	and    DWORD PTR [rsp+0x78],edi
   14001026a:	and    QWORD PTR [rbp-0x80],rdi
   14001026e:	mov    DWORD PTR [rsp+0x24],0x800
   140010276:	call   0x14000ffc0
   14001027b:	mov    DWORD PTR [rsp+0x20],0x1
   140010283:	mov    r9d,0x20019
   140010289:	lea    r8,[rip+0x20508]        # 0x140030798
   140010290:	mov    rdx,0xffffffff80000002
   140010297:	lea    rcx,[rsp+0x28]
   14001029c:	call   0x14000d094
   1400102a1:	test   eax,eax
   1400102a3:	jne    0x140010364
   1400102a9:	mov    ebx,0x20019
   1400102ae:	mov    r9d,ebx
   1400102b1:	lea    r8,[rip+0x20560]        # 0x140030818
   1400102b8:	mov    rdx,QWORD PTR [rsp+0x28]
   1400102bd:	lea    rcx,[rsp+0x58]
   1400102c2:	call   0x14000d094
   1400102c7:	test   eax,eax
   1400102c9:	jne    0x14001035f
   1400102cf:	mov    r9d,ebx
   1400102d2:	lea    r8,[rip+0x20557]        # 0x140030830
   1400102d9:	mov    rbx,QWORD PTR [rsp+0x58]
   1400102de:	mov    rdx,rbx
   1400102e1:	lea    rcx,[rsp+0x40]
   1400102e6:	call   0x14000d094
   1400102eb:	mov    rdi,QWORD PTR [rsp+0x40]
   1400102f0:	test   eax,eax
   1400102f2:	jne    0x140010364
   1400102f4:	mov    r9d,0x20019
   1400102fa:	mov    r8,r14
   1400102fd:	mov    rdx,rdi
   140010300:	lea    rcx,[rsp+0x70]
   140010305:	call   0x14000d094
   14001030a:	test   eax,eax
   14001030c:	jne    0x140010364
   14001030e:	lea    r9,[rsp+0x24]
   140010313:	lea    r8,[rbp-0x60]
   140010317:	lea    rdx,[rip+0x20532]        # 0x140030850
   14001031e:	lea    rcx,[rsp+0x70]
   140010323:	call   0x14000d128
   140010328:	test   eax,eax
   14001032a:	jne    0x140010364
   14001032c:	mov    r8d,0x800
   140010332:	lea    rdx,[rbp-0x60]
   140010336:	lea    rcx,[rbp-0x60]
   14001033a:	test   r13d,r13d
   14001033d:	je     0x140010357
   14001033f:	call   QWORD PTR [rip+0x1edab]        # 0x14002f0f0
   140010345:	test   eax,eax
   140010347:	je     0x140010364
   140010349:	lea    rdx,[rbp-0x60]
   14001034d:	mov    rcx,rsi
   140010350:	call   0x1400109a8
   140010355:	jmp    0x140010364
   140010357:	call   QWORD PTR [rip+0x1ed8b]        # 0x14002f0e8
   14001035d:	jmp    0x140010345
   14001035f:	mov    rbx,QWORD PTR [rsp+0x58]
   140010364:	mov    rcx,QWORD PTR [rsp+0x70]
   140010369:	test   rcx,rcx
   14001036c:	je     0x140010375
   14001036e:	call   QWORD PTR [rip+0x30fec]        # 0x140041360
   140010374:	nop
   140010375:	test   rdi,rdi
   140010378:	je     0x140010384
   14001037a:	mov    rcx,rdi
   14001037d:	call   QWORD PTR [rip+0x30fdd]        # 0x140041360
   140010383:	nop
   140010384:	test   rbx,rbx
   140010387:	je     0x140010393
   140010389:	mov    rcx,rbx
   14001038c:	call   QWORD PTR [rip+0x30fce]        # 0x140041360
   140010392:	nop
   140010393:	cmp    QWORD PTR [rsp+0x28],0x0
   140010399:	je     0x1400103a6
   14001039b:	mov    rcx,QWORD PTR [rsp+0x28]
   1400103a0:	call   QWORD PTR [rip+0x30fba]        # 0x140041360
   1400103a6:	mov    rax,rsi
   1400103a9:	mov    rcx,QWORD PTR [rbp+0xfa0]
   1400103b0:	xor    rcx,rsp
   1400103b3:	call   0x140012670
   1400103b8:	mov    rbx,QWORD PTR [rsp+0x10f0]
   1400103c0:	add    rsp,0x10b0
   1400103c7:	pop    r14
   1400103c9:	pop    r13
   1400103cb:	pop    rdi
   1400103cc:	pop    rsi
   1400103cd:	pop    rbp
   1400103ce:	ret    
   1400103cf:	int3   
   1400103d0:	int3   
   1400103d1:	int3   
   1400103d2:	int3   
   1400103d3:	int3   
   1400103d4:	int3   
   1400103d5:	int3   
   1400103d6:	int3   
   1400103d7:	int3   
   1400103d8:	int3   
   1400103d9:	int3   
   1400103da:	int3   
   1400103db:	int3   
   1400103dc:	int3   
   1400103dd:	int3   
   1400103de:	int3   
   1400103df:	int3   
   1400103e0:	mov    rax,rsp
   1400103e3:	mov    QWORD PTR [rax+0x8],rcx
   1400103e7:	push   rdi
   1400103e8:	push   r12
   1400103ea:	push   r13
   1400103ec:	push   r14
   1400103ee:	push   r15
   1400103f0:	sub    rsp,0x90
   1400103f7:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140010400:	mov    QWORD PTR [rax+0x10],rbx
   140010404:	mov    QWORD PTR [rax+0x18],rsi
   140010408:	mov    rax,QWORD PTR [rip+0x2f521]        # 0x14003f930
   14001040f:	xor    rax,rsp
   140010412:	mov    QWORD PTR [rsp+0x80],rax
   14001041a:	mov    rsi,rcx
   14001041d:	mov    DWORD PTR [rsp+0x38],0x2
   140010425:	and    DWORD PTR [rsp+0x3c],0x0
   14001042a:	mov    r8d,0x1
   140010430:	lea    rdx,[rip+0x20431]        # 0x140030868
   140010437:	lea    rcx,[rsp+0x30]
   14001043c:	call   0x1400101e0
   140010441:	nop
   140010442:	mov    rbx,QWORD PTR [rsp+0x30]
   140010447:	test   rbx,rbx
   14001044a:	je     0x140010461
   14001044c:	mov    rcx,QWORD PTR [rbx]
   14001044f:	test   rcx,rcx
   140010452:	je     0x140010461
   140010454:	call   QWORD PTR [rip+0x1ef46]        # 0x14002f3a0
   14001045a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001045f:	jmp    0x140010463
   140010461:	xor    eax,eax
   140010463:	cmp    eax,0x1
   140010466:	jae    0x1400104c6
   140010468:	test   rbx,rbx
   14001046b:	je     0x1400104a4
   14001046d:	or     edi,0xffffffff
   140010470:	mov    eax,edi
   140010472:	lock xadd DWORD PTR [rbx+0x10],eax
   140010477:	add    eax,edi
   140010479:	jne    0x1400104a4
   14001047b:	test   rbx,rbx
   14001047e:	je     0x1400104a4
   140010480:	mov    rcx,QWORD PTR [rbx]
   140010483:	test   rcx,rcx
   140010486:	je     0x14001048e
   140010488:	call   QWORD PTR [rip+0x1eefa]        # 0x14002f388
   14001048e:	mov    rcx,QWORD PTR [rbx+0x8]
   140010492:	test   rcx,rcx
   140010495:	je     0x14001049c
   140010497:	call   0x140016c60
   14001049c:	mov    rcx,rbx
   14001049f:	call   0x140016ae8
   1400104a4:	mov    rax,QWORD PTR [rsp+0x38]
   1400104a9:	mov    QWORD PTR [rsi],rax
   1400104ac:	mov    rax,QWORD PTR [rsp+0x40]
   1400104b1:	mov    QWORD PTR [rsi+0x8],rax
   1400104b5:	mov    rax,QWORD PTR [rsp+0x48]
   1400104ba:	mov    QWORD PTR [rsi+0x10],rax
   1400104be:	mov    rax,rsi
   1400104c1:	jmp    0x140010781
   1400104c6:	mov    QWORD PTR [rsp+0x28],rbx
   1400104cb:	test   rbx,rbx
   1400104ce:	je     0x1400104d4
   1400104d0:	lock inc DWORD PTR [rbx+0x10]
   1400104d4:	lea    rdx,[rip+0x2039d]        # 0x140030878
   1400104db:	lea    rcx,[rsp+0x50]
   1400104e0:	call   0x14000f854
   1400104e5:	nop
   1400104e6:	lea    rdx,[rsp+0x50]
   1400104eb:	lea    rcx,[rsp+0x28]
   1400104f0:	call   0x14000fb48
   1400104f5:	nop
   1400104f6:	mov    rax,QWORD PTR [rsp+0x50]
   1400104fb:	or     edi,0xffffffff
   1400104fe:	test   rax,rax
   140010501:	je     0x140010537
   140010503:	mov    ecx,edi
   140010505:	lock xadd DWORD PTR [rax+0x10],ecx
   14001050a:	add    ecx,edi
   14001050c:	jne    0x140010537
   14001050e:	mov    rbx,QWORD PTR [rsp+0x50]
   140010513:	mov    rcx,QWORD PTR [rbx]
   140010516:	test   rcx,rcx
   140010519:	je     0x140010521
   14001051b:	call   QWORD PTR [rip+0x1ee67]        # 0x14002f388
   140010521:	mov    rcx,QWORD PTR [rbx+0x8]
   140010525:	test   rcx,rcx
   140010528:	je     0x14001052f
   14001052a:	call   0x140016c60
   14001052f:	mov    rcx,rbx
   140010532:	call   0x140016ae8
   140010537:	mov    rbx,QWORD PTR [rsp+0x28]
   14001053c:	test   rbx,rbx
   14001053f:	je     0x140010546
   140010541:	mov    rcx,QWORD PTR [rbx]
   140010544:	jmp    0x140010548
   140010546:	xor    ecx,ecx
   140010548:	call   QWORD PTR [rip+0x1eab2]        # 0x14002f000
   14001054e:	lea    rdx,[rip+0x2034b]        # 0x1400308a0
   140010555:	lea    rcx,[rsp+0x58]
   14001055a:	call   0x14000f854
   14001055f:	nop
   140010560:	lea    rdx,[rsp+0x58]
   140010565:	lea    rcx,[rsp+0x30]
   14001056a:	call   0x14000fb48
   14001056f:	nop
   140010570:	mov    rax,QWORD PTR [rsp+0x58]
   140010575:	test   rax,rax
   140010578:	je     0x1400105b3
   14001057a:	mov    ecx,edi
   14001057c:	lock xadd DWORD PTR [rax+0x10],ecx
   140010581:	add    ecx,edi
   140010583:	jne    0x1400105ae
   140010585:	mov    rbx,QWORD PTR [rsp+0x58]
   14001058a:	mov    rcx,QWORD PTR [rbx]
   14001058d:	test   rcx,rcx
   140010590:	je     0x140010598
   140010592:	call   QWORD PTR [rip+0x1edf0]        # 0x14002f388
   140010598:	mov    rcx,QWORD PTR [rbx+0x8]
   14001059c:	test   rcx,rcx
   14001059f:	je     0x1400105a6
   1400105a1:	call   0x140016c60
   1400105a6:	mov    rcx,rbx
   1400105a9:	call   0x140016ae8
   1400105ae:	mov    rbx,QWORD PTR [rsp+0x28]
   1400105b3:	mov    rax,QWORD PTR [rsp+0x30]
   1400105b8:	test   rax,rax
   1400105bb:	je     0x1400105c2
   1400105bd:	mov    rcx,QWORD PTR [rax]
   1400105c0:	jmp    0x1400105c4
   1400105c2:	xor    ecx,ecx
   1400105c4:	call   QWORD PTR [rip+0x1ea36]        # 0x14002f000
   1400105ca:	mov    r12,rax
   1400105cd:	test   rax,rax
   1400105d0:	jne    0x14001061f
   1400105d2:	test   rbx,rbx
   1400105d5:	je     0x14001060c
   1400105d7:	mov    eax,edi
   1400105d9:	lock xadd DWORD PTR [rbx+0x10],eax
   1400105de:	add    eax,edi
   1400105e0:	jne    0x14001060c
   1400105e2:	mov    rbx,QWORD PTR [rsp+0x28]
   1400105e7:	mov    rcx,QWORD PTR [rbx]
   1400105ea:	test   rcx,rcx
   1400105ed:	je     0x1400105f5
   1400105ef:	call   QWORD PTR [rip+0x1ed93]        # 0x14002f388
   1400105f5:	mov    rcx,QWORD PTR [rbx+0x8]
   1400105f9:	test   rcx,rcx
   1400105fc:	je     0x140010603
   1400105fe:	call   0x140016c60
   140010603:	mov    rcx,rbx
   140010606:	call   0x140016ae8
   14001060b:	nop
   14001060c:	mov    rbx,QWORD PTR [rsp+0x30]
   140010611:	test   rbx,rbx
   140010614:	je     0x1400104a4
   14001061a:	jmp    0x140010470
   14001061f:	call   QWORD PTR [rip+0x30dd3]        # 0x1400413f8
   140010625:	mov    rcx,rax
   140010628:	mov    rax,QWORD PTR [rax]
   14001062b:	lea    rdx,[rsp+0x68]
   140010630:	call   QWORD PTR [rax+0x8]
   140010633:	mov    r13,QWORD PTR [rax]
   140010636:	mov    QWORD PTR [rsp+0x38],r13
   14001063b:	mov    r14,QWORD PTR [rax+0x8]
   14001063f:	mov    QWORD PTR [rsp+0x40],r14
   140010644:	mov    r15,QWORD PTR [rax+0x10]
   140010648:	mov    QWORD PTR [rsp+0x48],r15
   14001064d:	mov    rcx,r12
   140010650:	call   QWORD PTR [rip+0x1e9ba]        # 0x14002f010
   140010656:	nop
   140010657:	test   rbx,rbx
   14001065a:	je     0x140010691
   14001065c:	mov    eax,edi
   14001065e:	lock xadd DWORD PTR [rbx+0x10],eax
   140010663:	add    eax,edi
   140010665:	jne    0x140010691
   140010667:	mov    rbx,QWORD PTR [rsp+0x28]
   14001066c:	mov    rcx,QWORD PTR [rbx]
   14001066f:	test   rcx,rcx
   140010672:	je     0x14001067a
   140010674:	call   QWORD PTR [rip+0x1ed0e]        # 0x14002f388
   14001067a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001067e:	test   rcx,rcx
   140010681:	je     0x140010688
   140010683:	call   0x140016c60
   140010688:	mov    rcx,rbx
   14001068b:	call   0x140016ae8
   140010690:	nop
   140010691:	mov    rbx,QWORD PTR [rsp+0x30]
   140010696:	test   rbx,rbx
   140010699:	je     0x1400106cf
   14001069b:	mov    eax,edi
   14001069d:	lock xadd DWORD PTR [rbx+0x10],eax
   1400106a2:	add    eax,edi
   1400106a4:	jne    0x1400106cf
   1400106a6:	test   rbx,rbx
   1400106a9:	je     0x1400106cf
   1400106ab:	mov    rcx,QWORD PTR [rbx]
   1400106ae:	test   rcx,rcx
   1400106b1:	je     0x1400106b9
   1400106b3:	call   QWORD PTR [rip+0x1eccf]        # 0x14002f388
   1400106b9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400106bd:	test   rcx,rcx
   1400106c0:	je     0x1400106c7
   1400106c2:	call   0x140016c60
   1400106c7:	mov    rcx,rbx
   1400106ca:	call   0x140016ae8
   1400106cf:	mov    QWORD PTR [rsi],r13
   1400106d2:	mov    QWORD PTR [rsi+0x8],r14
   1400106d6:	mov    QWORD PTR [rsi+0x10],r15
   1400106da:	jmp    0x1400104be
   1400106df:	mov    rax,QWORD PTR [rsp+0x28]
   1400106e4:	or     edi,0xffffffff
   1400106e7:	test   rax,rax
   1400106ea:	je     0x140010721
   1400106ec:	mov    ecx,edi
   1400106ee:	lock xadd DWORD PTR [rax+0x10],ecx
   1400106f3:	add    ecx,edi
   1400106f5:	jne    0x140010721
   1400106f7:	mov    rbx,QWORD PTR [rsp+0x28]
   1400106fc:	mov    rcx,QWORD PTR [rbx]
   1400106ff:	test   rcx,rcx
   140010702:	je     0x14001070a
   140010704:	call   QWORD PTR [rip+0x1ec7e]        # 0x14002f388
   14001070a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001070e:	test   rcx,rcx
   140010711:	je     0x140010718
   140010713:	call   0x140016c60
   140010718:	mov    rcx,rbx
   14001071b:	call   0x140016ae8
   140010720:	nop
   140010721:	mov    rbx,QWORD PTR [rsp+0x30]
   140010726:	test   rbx,rbx
   140010729:	je     0x14001075f
   14001072b:	mov    eax,edi
   14001072d:	lock xadd DWORD PTR [rbx+0x10],eax
   140010732:	add    eax,edi
   140010734:	jne    0x14001075f
   140010736:	test   rbx,rbx
   140010739:	je     0x14001075f
   14001073b:	mov    rcx,QWORD PTR [rbx]
   14001073e:	test   rcx,rcx
   140010741:	je     0x140010749
   140010743:	call   QWORD PTR [rip+0x1ec3f]        # 0x14002f388
   140010749:	mov    rcx,QWORD PTR [rbx+0x8]
   14001074d:	test   rcx,rcx
   140010750:	je     0x140010757
   140010752:	call   0x140016c60
   140010757:	mov    rcx,rbx
   14001075a:	call   0x140016ae8
   14001075f:	mov    rax,QWORD PTR [rsp+0xc0]
   140010767:	mov    rcx,QWORD PTR [rsp+0x38]
   14001076c:	mov    QWORD PTR [rax],rcx
   14001076f:	mov    rcx,QWORD PTR [rsp+0x40]
   140010774:	mov    QWORD PTR [rax+0x8],rcx
   140010778:	mov    rcx,QWORD PTR [rsp+0x48]
   14001077d:	mov    QWORD PTR [rax+0x10],rcx
   140010781:	mov    rcx,QWORD PTR [rsp+0x80]
   140010789:	xor    rcx,rsp
   14001078c:	call   0x140012670
   140010791:	lea    r11,[rsp+0x90]
   140010799:	mov    rbx,QWORD PTR [r11+0x38]
   14001079d:	mov    rsi,QWORD PTR [r11+0x40]
   1400107a1:	mov    rsp,r11
   1400107a4:	pop    r15
   1400107a6:	pop    r14
   1400107a8:	pop    r13
   1400107aa:	pop    r12
   1400107ac:	pop    rdi
   1400107ad:	ret    
   1400107ae:	int3   
   1400107af:	int3   
   1400107b0:	int3   
   1400107b1:	int3   
   1400107b2:	int3   
   1400107b3:	int3   
   1400107b4:	int3   
   1400107b5:	int3   
   1400107b6:	int3   
   1400107b7:	int3   
   1400107b8:	int3   
   1400107b9:	int3   
   1400107ba:	int3   
   1400107bb:	int3   
   1400107bc:	int3   
   1400107bd:	int3   
   1400107be:	int3   
   1400107bf:	int3   
   1400107c0:	rex push rbp
   1400107c2:	push   rbx
   1400107c3:	push   rsi
   1400107c4:	push   rdi
   1400107c5:	mov    rbp,rsp
   1400107c8:	sub    rsp,0x38
   1400107cc:	lea    rdx,[rip+0x200ed]        # 0x1400308c0
   1400107d3:	lea    rcx,[rbp+0x38]
   1400107d7:	mov    r8d,0x1
   1400107dd:	call   0x1400101e0
   1400107e2:	mov    rbx,QWORD PTR [rbp+0x38]
   1400107e6:	test   rbx,rbx
   1400107e9:	je     0x1400107ff
   1400107eb:	mov    rcx,QWORD PTR [rbx]
   1400107ee:	test   rcx,rcx
   1400107f1:	je     0x1400107ff
   1400107f3:	call   QWORD PTR [rip+0x1eba7]        # 0x14002f3a0
   1400107f9:	mov    rbx,QWORD PTR [rbp+0x38]
   1400107fd:	jmp    0x140010801
   1400107ff:	xor    eax,eax
   140010801:	cmp    eax,0x1
   140010804:	jae    0x140010817
   140010806:	test   rbx,rbx
   140010809:	je     0x14001099f
   14001080f:	or     edi,0xffffffff
   140010812:	jmp    0x14001096b
   140010817:	mov    QWORD PTR [rbp+0x30],rbx
   14001081b:	test   rbx,rbx
   14001081e:	je     0x140010824
   140010820:	lock inc DWORD PTR [rbx+0x10]
   140010824:	lea    rdx,[rip+0x200a5]        # 0x1400308d0
   14001082b:	lea    rcx,[rbp+0x40]
   14001082f:	call   0x14000f854
   140010834:	lea    rdx,[rbp+0x40]
   140010838:	lea    rcx,[rbp+0x30]
   14001083c:	call   0x14000fb48
   140010841:	mov    rax,QWORD PTR [rbp+0x40]
   140010845:	or     edi,0xffffffff
   140010848:	test   rax,rax
   14001084b:	je     0x140010880
   14001084d:	mov    ecx,edi
   14001084f:	lock xadd DWORD PTR [rax+0x10],ecx
   140010854:	add    ecx,edi
   140010856:	jne    0x140010880
   140010858:	mov    rbx,QWORD PTR [rbp+0x40]
   14001085c:	mov    rcx,QWORD PTR [rbx]
   14001085f:	test   rcx,rcx
   140010862:	je     0x14001086a
   140010864:	call   QWORD PTR [rip+0x1eb1e]        # 0x14002f388
   14001086a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001086e:	test   rcx,rcx
   140010871:	je     0x140010878
   140010873:	call   0x140016c60
   140010878:	mov    rcx,rbx
   14001087b:	call   0x140016ae8
   140010880:	mov    rbx,QWORD PTR [rbp+0x30]
   140010884:	test   rbx,rbx
   140010887:	je     0x14001088e
   140010889:	mov    rcx,QWORD PTR [rbx]
   14001088c:	jmp    0x140010890
   14001088e:	xor    ecx,ecx
   140010890:	call   QWORD PTR [rip+0x1e76a]        # 0x14002f000
   140010896:	lea    rdx,[rip+0x2005b]        # 0x1400308f8
   14001089d:	lea    rcx,[rbp-0x18]
   1400108a1:	call   0x14000f854
   1400108a6:	lea    rdx,[rbp-0x18]
   1400108aa:	lea    rcx,[rbp+0x38]
   1400108ae:	call   0x14000fb48
   1400108b3:	mov    r11,QWORD PTR [rbp-0x18]
   1400108b7:	test   r11,r11
   1400108ba:	je     0x1400108f4
   1400108bc:	mov    eax,edi
   1400108be:	lock xadd DWORD PTR [r11+0x10],eax
   1400108c4:	add    eax,edi
   1400108c6:	jne    0x1400108f0
   1400108c8:	mov    rbx,QWORD PTR [rbp-0x18]
   1400108cc:	mov    rcx,QWORD PTR [rbx]
   1400108cf:	test   rcx,rcx
   1400108d2:	je     0x1400108da
   1400108d4:	call   QWORD PTR [rip+0x1eaae]        # 0x14002f388
   1400108da:	mov    rcx,QWORD PTR [rbx+0x8]
   1400108de:	test   rcx,rcx
   1400108e1:	je     0x1400108e8
   1400108e3:	call   0x140016c60
   1400108e8:	mov    rcx,rbx
   1400108eb:	call   0x140016ae8
   1400108f0:	mov    rbx,QWORD PTR [rbp+0x30]
   1400108f4:	mov    rax,QWORD PTR [rbp+0x38]
   1400108f8:	test   rax,rax
   1400108fb:	je     0x140010902
   1400108fd:	mov    rcx,QWORD PTR [rax]
   140010900:	jmp    0x140010904
   140010902:	xor    ecx,ecx
   140010904:	call   QWORD PTR [rip+0x1e6f6]        # 0x14002f000
   14001090a:	mov    rsi,rax
   14001090d:	test   rax,rax
   140010910:	je     0x14001092a
   140010912:	call   QWORD PTR [rip+0x30ae0]        # 0x1400413f8
   140010918:	mov    rcx,rax
   14001091b:	mov    rdx,QWORD PTR [rax]
   14001091e:	call   QWORD PTR [rdx+0x10]
   140010921:	mov    rcx,rsi
   140010924:	call   QWORD PTR [rip+0x1e6e6]        # 0x14002f010
   14001092a:	test   rbx,rbx
   14001092d:	je     0x140010962
   14001092f:	mov    eax,edi
   140010931:	lock xadd DWORD PTR [rbx+0x10],eax
   140010936:	add    eax,edi
   140010938:	jne    0x140010962
   14001093a:	mov    rbx,QWORD PTR [rbp+0x30]
   14001093e:	mov    rcx,QWORD PTR [rbx]
   140010941:	test   rcx,rcx
   140010944:	je     0x14001094c
   140010946:	call   QWORD PTR [rip+0x1ea3c]        # 0x14002f388
   14001094c:	mov    rcx,QWORD PTR [rbx+0x8]
   140010950:	test   rcx,rcx
   140010953:	je     0x14001095a
   140010955:	call   0x140016c60
   14001095a:	mov    rcx,rbx
   14001095d:	call   0x140016ae8
   140010962:	mov    rbx,QWORD PTR [rbp+0x38]
   140010966:	test   rbx,rbx
   140010969:	je     0x14001099f
   14001096b:	mov    eax,edi
   14001096d:	lock xadd DWORD PTR [rbx+0x10],eax
   140010972:	add    eax,edi
   140010974:	jne    0x14001099f
   140010976:	test   rbx,rbx
   140010979:	je     0x14001099f
   14001097b:	mov    rcx,QWORD PTR [rbx]
   14001097e:	test   rcx,rcx
   140010981:	je     0x140010989
   140010983:	call   QWORD PTR [rip+0x1e9ff]        # 0x14002f388
   140010989:	mov    rcx,QWORD PTR [rbx+0x8]
   14001098d:	test   rcx,rcx
   140010990:	je     0x140010997
   140010992:	call   0x140016c60
   140010997:	mov    rcx,rbx
   14001099a:	call   0x140016ae8
   14001099f:	add    rsp,0x38
   1400109a3:	pop    rdi
   1400109a4:	pop    rsi
   1400109a5:	pop    rbx
   1400109a6:	pop    rbp
   1400109a7:	ret    
   1400109a8:	rex push rdi
   1400109aa:	sub    rsp,0x30
   1400109ae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400109b7:	mov    QWORD PTR [rsp+0x40],rbx
   1400109bc:	mov    QWORD PTR [rsp+0x50],rsi
   1400109c1:	mov    rsi,rdx
   1400109c4:	mov    rdi,rcx
   1400109c7:	test   rdx,rdx
   1400109ca:	je     0x1400109e4
   1400109cc:	mov    rax,QWORD PTR [rcx]
   1400109cf:	test   rax,rax
   1400109d2:	je     0x1400109d9
   1400109d4:	mov    rcx,QWORD PTR [rax]
   1400109d7:	jmp    0x1400109db
   1400109d9:	xor    ecx,ecx
   1400109db:	cmp    rcx,rdx
   1400109de:	je     0x140010a7e
   1400109e4:	mov    rbx,QWORD PTR [rdi]
   1400109e7:	test   rbx,rbx
   1400109ea:	je     0x140010a25
   1400109ec:	or     eax,0xffffffff
   1400109ef:	lock xadd DWORD PTR [rbx+0x10],eax
   1400109f4:	dec    eax
   1400109f6:	jne    0x140010a21
   1400109f8:	test   rbx,rbx
   1400109fb:	je     0x140010a21
   1400109fd:	mov    rcx,QWORD PTR [rbx]
   140010a00:	test   rcx,rcx
   140010a03:	je     0x140010a0b
   140010a05:	call   QWORD PTR [rip+0x1e97d]        # 0x14002f388
   140010a0b:	mov    rcx,QWORD PTR [rbx+0x8]
   140010a0f:	test   rcx,rcx
   140010a12:	je     0x140010a19
   140010a14:	call   0x140016c60
   140010a19:	mov    rcx,rbx
   140010a1c:	call   0x140016ae8
   140010a21:	and    QWORD PTR [rdi],0x0
   140010a25:	mov    ecx,0x18
   140010a2a:	call   0x140016bbc
   140010a2f:	mov    rbx,rax
   140010a32:	mov    QWORD PTR [rsp+0x48],rax
   140010a37:	test   rax,rax
   140010a3a:	je     0x140010a69
   140010a3c:	and    QWORD PTR [rax+0x8],0x0
   140010a41:	mov    DWORD PTR [rax+0x10],0x1
   140010a48:	mov    rcx,rsi
   140010a4b:	call   QWORD PTR [rip+0x1e947]        # 0x14002f398
   140010a51:	mov    QWORD PTR [rbx],rax
   140010a54:	test   rax,rax
   140010a57:	jne    0x140010a6b
   140010a59:	test   rsi,rsi
   140010a5c:	je     0x140010a6b
   140010a5e:	mov    ecx,0x8007000e
   140010a63:	call   0x14002a970
   140010a68:	int3   
   140010a69:	xor    ebx,ebx
   140010a6b:	mov    QWORD PTR [rdi],rbx
   140010a6e:	test   rbx,rbx
   140010a71:	jne    0x140010a7e
   140010a73:	mov    ecx,0x8007000e
   140010a78:	call   0x14002a970
   140010a7d:	int3   
   140010a7e:	mov    rax,rdi
   140010a81:	mov    rbx,QWORD PTR [rsp+0x40]
   140010a86:	mov    rsi,QWORD PTR [rsp+0x50]
   140010a8b:	add    rsp,0x30
   140010a8f:	pop    rdi
   140010a90:	ret    
   140010a91:	int3   
   140010a92:	int3   
   140010a93:	int3   
   140010a94:	lea    eax,[rcx+rdx*1]
   140010a97:	cmp    eax,edx
   140010a99:	jae    0x140010aa1
   140010a9b:	mov    eax,0x80070216
   140010aa0:	ret    
   140010aa1:	mov    DWORD PTR [r8],eax
   140010aa4:	xor    eax,eax
   140010aa6:	ret    
   140010aa7:	int3   
   140010aa8:	int3   
   140010aa9:	int3   
   140010aaa:	int3   
   140010aab:	int3   
   140010aac:	int3   
   140010aad:	int3   
   140010aae:	int3   
   140010aaf:	int3   
   140010ab0:	int3   
   140010ab1:	int3   
   140010ab2:	int3   
   140010ab3:	int3   
   140010ab4:	mov    eax,edx
   140010ab6:	mov    r9d,ecx
   140010ab9:	imul   r9,rax
   140010abd:	mov    eax,0xffffffff
   140010ac2:	cmp    r9,rax
   140010ac5:	ja     0x140010acd
   140010ac7:	mov    DWORD PTR [r8],r9d
   140010aca:	xor    eax,eax
   140010acc:	ret    
   140010acd:	mov    eax,0x80070216
   140010ad2:	ret    
   140010ad3:	int3   
   140010ad4:	int3   
   140010ad5:	int3   
   140010ad6:	int3   
   140010ad7:	int3   
   140010ad8:	int3   
   140010ad9:	int3   
   140010ada:	int3   
   140010adb:	int3   
   140010adc:	int3   
   140010add:	int3   
   140010ade:	int3   
   140010adf:	int3   
   140010ae0:	int3   
   140010ae1:	int3   
   140010ae2:	int3   
   140010ae3:	int3   
   140010ae4:	rex push rbx
   140010ae6:	sub    rsp,0x150
   140010aed:	mov    rax,QWORD PTR [rip+0x2ee3c]        # 0x14003f930
   140010af4:	xor    rax,rsp
   140010af7:	mov    QWORD PTR [rsp+0x140],rax
   140010aff:	xor    ebx,ebx
   140010b01:	cmp    DWORD PTR [rip+0x44809],ebx        # 0x140055310
   140010b07:	je     0x140010b11
   140010b09:	mov    eax,DWORD PTR [rip+0x447fd]        # 0x14005530c
   140010b0f:	jmp    0x140010b5c
   140010b11:	lea    rcx,[rsp+0x20]
   140010b16:	xor    edx,edx
   140010b18:	mov    r8d,0x114
   140010b1e:	call   0x140012fb0
   140010b23:	lea    rcx,[rsp+0x20]
   140010b28:	mov    DWORD PTR [rsp+0x20],0x114
   140010b30:	call   QWORD PTR [rip+0x1e552]        # 0x14002f088
   140010b36:	cmp    DWORD PTR [rsp+0x30],0x2
   140010b3b:	mov    r11d,0x1
   140010b41:	jne    0x140010b4d
   140010b43:	cmp    DWORD PTR [rsp+0x24],0x6
   140010b48:	jb     0x140010b4d
   140010b4a:	mov    ebx,r11d
   140010b4d:	mov    DWORD PTR [rip+0x447b9],ebx        # 0x14005530c
   140010b53:	mov    DWORD PTR [rip+0x447b6],r11d        # 0x140055310
   140010b5a:	mov    eax,ebx
   140010b5c:	mov    rcx,QWORD PTR [rsp+0x140]
   140010b64:	xor    rcx,rsp
   140010b67:	call   0x140012670
   140010b6c:	add    rsp,0x150
   140010b73:	pop    rbx
   140010b74:	ret    
   140010b75:	int3   
   140010b76:	int3   
   140010b77:	int3   
   140010b78:	int3   
   140010b79:	int3   
   140010b7a:	int3   
   140010b7b:	int3   
   140010b7c:	int3   
   140010b7d:	int3   
   140010b7e:	int3   
   140010b7f:	int3   
   140010b80:	int3   
   140010b81:	int3   
   140010b82:	int3   
   140010b83:	int3   
   140010b84:	mov    QWORD PTR [rsp+0x18],rbx
   140010b89:	push   rbp
   140010b8a:	push   rsi
   140010b8b:	push   rdi
   140010b8c:	push   r12
   140010b8e:	push   r14
   140010b90:	lea    rbp,[rsp-0x2f70]
   140010b98:	mov    eax,0x3070
   140010b9d:	call   0x140012f50
   140010ba2:	sub    rsp,rax
   140010ba5:	mov    rax,QWORD PTR [rip+0x2ed84]        # 0x14003f930
   140010bac:	xor    rax,rsp
   140010baf:	mov    QWORD PTR [rbp+0x2f60],rax
   140010bb6:	mov    rdi,rcx
   140010bb9:	mov    r12d,edx
   140010bbc:	xor    ebx,ebx
   140010bbe:	mov    r14d,0xffe
   140010bc4:	lea    rcx,[rsp+0x62]
   140010bc9:	xor    edx,edx
   140010bcb:	mov    r8d,r14d
   140010bce:	mov    esi,ebx
   140010bd0:	mov    WORD PTR [rsp+0x60],bx
   140010bd5:	call   0x140012fb0
   140010bda:	lea    rcx,[rbp+0xf62]
   140010be1:	mov    r8d,r14d
   140010be4:	xor    edx,edx
   140010be6:	mov    WORD PTR [rbp+0xf60],bx
   140010bed:	call   0x140012fb0
   140010bf2:	lea    rax,[rsp+0x48]
   140010bf7:	lea    rdx,[rip+0x20232]        # 0x140030e30
   140010bfe:	mov    r9d,0x20019
   140010c04:	xor    r8d,r8d
   140010c07:	mov    rcx,0xffffffff80000002
   140010c0e:	mov    QWORD PTR [rsp+0x20],rax
   140010c13:	mov    DWORD PTR [rsp+0x40],0x800
   140010c1b:	call   QWORD PTR [rip+0x3074f]        # 0x140041370
   140010c21:	test   eax,eax
   140010c23:	jne    0x140010d4d
   140010c29:	xor    edx,edx
   140010c2b:	jmp    0x140010d1c
   140010c30:	lea    rax,[rsp+0x60]
   140010c35:	lea    r9,[rip+0x20254]        # 0x140030e90
   140010c3c:	lea    r8,[rip+0x201d5]        # 0x140030e18
   140010c43:	lea    rcx,[rbp+0xf60]
   140010c4a:	mov    edx,0x800
   140010c4f:	mov    QWORD PTR [rsp+0x20],rax
   140010c54:	call   0x140013d5c
   140010c59:	lea    r11,[rsp+0x50]
   140010c5e:	lea    rdx,[rbp+0xf60]
   140010c65:	mov    r9d,0x20019
   140010c6b:	xor    r8d,r8d
   140010c6e:	mov    rcx,0xffffffff80000002
   140010c75:	mov    QWORD PTR [rsp+0x20],r11
   140010c7a:	call   QWORD PTR [rip+0x306f0]        # 0x140041370
   140010c80:	test   eax,eax
   140010c82:	jne    0x140010d10
   140010c88:	lea    rcx,[rbp+0x1f62]
   140010c8f:	mov    r8,r14
   140010c92:	xor    edx,edx
   140010c94:	mov    WORD PTR [rbp+0x1f60],bx
   140010c9b:	call   0x140012fb0
   140010ca0:	mov    rcx,QWORD PTR [rsp+0x50]
   140010ca5:	lea    rax,[rsp+0x40]
   140010caa:	lea    r9,[rsp+0x44]
   140010caf:	lea    rdx,[rip+0x20032]        # 0x140030ce8
   140010cb6:	mov    QWORD PTR [rsp+0x28],rax
   140010cbb:	lea    rax,[rbp+0x1f60]
   140010cc2:	xor    r8d,r8d
   140010cc5:	mov    QWORD PTR [rsp+0x20],rax
   140010cca:	mov    DWORD PTR [rsp+0x40],0x800
   140010cd2:	call   QWORD PTR [rip+0x30690]        # 0x140041368
   140010cd8:	test   eax,eax
   140010cda:	jne    0x140010d10
   140010cdc:	cmp    DWORD PTR [rsp+0x40],ebx
   140010ce0:	jbe    0x140010d10
   140010ce2:	mov    rcx,QWORD PTR [rsp+0x50]
   140010ce7:	lea    rax,[rsp+0x40]
   140010cec:	lea    r9,[rsp+0x44]
   140010cf1:	mov    QWORD PTR [rsp+0x28],rax
   140010cf6:	lea    rdx,[rip+0x201eb]        # 0x140030ee8
   140010cfd:	xor    r8d,r8d
   140010d00:	mov    QWORD PTR [rsp+0x20],rdi
   140010d05:	mov    DWORD PTR [rsp+0x40],r12d
   140010d0a:	call   QWORD PTR [rip+0x30658]        # 0x140041368
   140010d10:	inc    esi
   140010d12:	mov    DWORD PTR [rsp+0x40],0x800
   140010d1a:	mov    edx,esi
   140010d1c:	mov    rcx,QWORD PTR [rsp+0x48]
   140010d21:	mov    QWORD PTR [rsp+0x38],rbx
   140010d26:	mov    QWORD PTR [rsp+0x30],rbx
   140010d2b:	lea    r9,[rsp+0x40]
   140010d30:	lea    r8,[rsp+0x60]
   140010d35:	mov    QWORD PTR [rsp+0x28],rbx
   140010d3a:	mov    QWORD PTR [rsp+0x20],rbx
   140010d3f:	call   QWORD PTR [rip+0x30633]        # 0x140041378
   140010d45:	test   eax,eax
   140010d47:	je     0x140010c30
   140010d4d:	xor    eax,eax
   140010d4f:	or     rcx,0xffffffffffffffff
   140010d53:	repnz scas ax,WORD PTR es:[rdi]
   140010d56:	not    rcx
   140010d59:	dec    rcx
   140010d5c:	setne  bl
   140010d5f:	mov    eax,ebx
   140010d61:	mov    rcx,QWORD PTR [rbp+0x2f60]
   140010d68:	xor    rcx,rsp
   140010d6b:	call   0x140012670
   140010d70:	mov    rbx,QWORD PTR [rsp+0x30b0]
   140010d78:	add    rsp,0x3070
   140010d7f:	pop    r14
   140010d81:	pop    r12
   140010d83:	pop    rdi
   140010d84:	pop    rsi
   140010d85:	pop    rbp
   140010d86:	ret    
   140010d87:	int3   
   140010d88:	int3   
   140010d89:	int3   
   140010d8a:	int3   
   140010d8b:	int3   
   140010d8c:	int3   
   140010d8d:	int3   
   140010d8e:	int3   
   140010d8f:	int3   
   140010d90:	int3   
   140010d91:	int3   
   140010d92:	int3   
   140010d93:	int3   
   140010d94:	mov    rax,rsp
   140010d97:	mov    QWORD PTR [rax+0x8],rbx
   140010d9b:	mov    QWORD PTR [rax+0x10],rsi
   140010d9f:	mov    DWORD PTR [rax+0x18],r8d
   140010da3:	push   rdi
   140010da4:	sub    rsp,0x40
   140010da8:	xor    ebx,ebx
   140010daa:	mov    rdi,rdx
   140010dad:	mov    rsi,rcx
   140010db0:	mov    QWORD PTR [rax-0x18],rbx
   140010db4:	mov    DWORD PTR [rax+0x20],0x1
   140010dbb:	call   0x140013474
   140010dc0:	test   rax,rax
   140010dc3:	je     0x140010ddb
   140010dc5:	mov    edx,DWORD PTR [rsp+0x60]
   140010dc9:	mov    r8,rax
   140010dcc:	mov    rcx,rdi
   140010dcf:	call   0x140016c68
   140010dd4:	test   eax,eax
   140010dd6:	sete   bl
   140010dd9:	jmp    0x140010e50
   140010ddb:	call   0x140010ae4
   140010de0:	mov    rdx,QWORD PTR [rip+0x2eb29]        # 0x14003f910
   140010de7:	mov    r9d,0x20019
   140010ded:	test   eax,eax
   140010def:	lea    rax,[rsp+0x30]
   140010df4:	mov    rcx,0xffffffff80000001
   140010dfb:	cmovne rdx,QWORD PTR [rip+0x2eb15]        # 0x14003f918
   140010e03:	xor    r8d,r8d
   140010e06:	mov    QWORD PTR [rsp+0x20],rax
   140010e0b:	call   QWORD PTR [rip+0x3055f]        # 0x140041370
   140010e11:	test   eax,eax
   140010e13:	je     0x140010e19
   140010e15:	xor    eax,eax
   140010e17:	jmp    0x140010e52
   140010e19:	mov    rcx,QWORD PTR [rsp+0x30]
   140010e1e:	lea    rax,[rsp+0x60]
   140010e23:	lea    r9,[rsp+0x68]
   140010e28:	mov    QWORD PTR [rsp+0x28],rax
   140010e2d:	xor    r8d,r8d
   140010e30:	mov    rdx,rsi
   140010e33:	mov    QWORD PTR [rsp+0x20],rdi
   140010e38:	call   QWORD PTR [rip+0x3052a]        # 0x140041368
   140010e3e:	test   eax,eax
   140010e40:	jne    0x140010e45
   140010e42:	lea    ebx,[rax+0x1]
   140010e45:	mov    rcx,QWORD PTR [rsp+0x30]
   140010e4a:	call   QWORD PTR [rip+0x30510]        # 0x140041360
   140010e50:	mov    eax,ebx
   140010e52:	mov    rbx,QWORD PTR [rsp+0x50]
   140010e57:	mov    rsi,QWORD PTR [rsp+0x58]
   140010e5c:	add    rsp,0x40
   140010e60:	pop    rdi
   140010e61:	ret    
   140010e62:	int3   
   140010e63:	int3   
   140010e64:	int3   
   140010e65:	int3   
   140010e66:	int3   
   140010e67:	int3   
   140010e68:	int3   
   140010e69:	int3   
   140010e6a:	int3   
   140010e6b:	int3   
   140010e6c:	int3   
   140010e6d:	int3   
   140010e6e:	int3   
   140010e6f:	int3   
   140010e70:	int3   
   140010e71:	int3   
   140010e72:	int3   
   140010e73:	int3   
   140010e74:	rex push rbx
   140010e76:	sub    rsp,0x50
   140010e7a:	xor    ebx,ebx
   140010e7c:	mov    QWORD PTR [rsp+0x60],rbx
   140010e81:	call   0x140010ae4
   140010e86:	mov    rdx,QWORD PTR [rip+0x2ea83]        # 0x14003f910
   140010e8d:	mov    QWORD PTR [rsp+0x40],rbx
   140010e92:	test   eax,eax
   140010e94:	lea    rax,[rsp+0x60]
   140010e99:	cmovne rdx,QWORD PTR [rip+0x2ea77]        # 0x14003f918
   140010ea1:	mov    QWORD PTR [rsp+0x38],rax
   140010ea6:	mov    QWORD PTR [rsp+0x30],rbx
   140010eab:	xor    r9d,r9d
   140010eae:	xor    r8d,r8d
   140010eb1:	mov    rcx,0xffffffff80000001
   140010eb8:	mov    DWORD PTR [rsp+0x28],0xf003f
   140010ec0:	mov    DWORD PTR [rsp+0x20],ebx
   140010ec4:	call   QWORD PTR [rip+0x304de]        # 0x1400413a8
   140010eca:	mov    rcx,QWORD PTR [rsp+0x60]
   140010ecf:	test   eax,eax
   140010ed1:	cmovne rcx,rbx
   140010ed5:	mov    rax,rcx
   140010ed8:	add    rsp,0x50
   140010edc:	pop    rbx
   140010edd:	ret    
   140010ede:	int3   
   140010edf:	int3   
   140010ee0:	int3   
   140010ee1:	int3   
   140010ee2:	int3   
   140010ee3:	int3   
   140010ee4:	mov    QWORD PTR [rsp+0x8],rbx
   140010ee9:	push   rdi
   140010eea:	sub    rsp,0x20
   140010eee:	xor    eax,eax
   140010ef0:	mov    rdi,rcx
   140010ef3:	test   rcx,rcx
   140010ef6:	je     0x140010f32
   140010ef8:	mov    ebx,edx
   140010efa:	lea    r8,[rip+0x2018f]        # 0x140031090
   140010f01:	mov    edx,edx
   140010f03:	mov    WORD PTR [rcx],ax
   140010f06:	call   0x140017684
   140010f0b:	lea    r8,[rip+0x1fc1a]        # 0x140030b2c
   140010f12:	mov    edx,ebx
   140010f14:	mov    rcx,rdi
   140010f17:	call   0x140017684
   140010f1c:	lea    r8,[rip+0x201ad]        # 0x1400310d0
   140010f23:	mov    edx,ebx
   140010f25:	mov    rcx,rdi
   140010f28:	call   0x140017684
   140010f2d:	mov    eax,0x1
   140010f32:	mov    rbx,QWORD PTR [rsp+0x30]
   140010f37:	add    rsp,0x20
   140010f3b:	pop    rdi
   140010f3c:	ret    
   140010f3d:	int3   
   140010f3e:	int3   
   140010f3f:	int3   
   140010f40:	int3   
   140010f41:	int3   
   140010f42:	int3   
   140010f43:	int3   
   140010f44:	mov    QWORD PTR [rsp+0x8],rbx
   140010f49:	push   rdi
   140010f4a:	sub    rsp,0x20
   140010f4e:	xor    eax,eax
   140010f50:	mov    rdi,rcx
   140010f53:	test   rcx,rcx
   140010f56:	je     0x140010f92
   140010f58:	mov    ebx,edx
   140010f5a:	lea    r8,[rip+0x2017f]        # 0x1400310e0
   140010f61:	mov    edx,edx
   140010f63:	mov    WORD PTR [rcx],ax
   140010f66:	call   0x140017684
   140010f6b:	lea    r8,[rip+0x1fbca]        # 0x140030b3c
   140010f72:	mov    edx,ebx
   140010f74:	mov    rcx,rdi
   140010f77:	call   0x140017684
   140010f7c:	lea    r8,[rip+0x201b5]        # 0x140031138
   140010f83:	mov    edx,ebx
   140010f85:	mov    rcx,rdi
   140010f88:	call   0x140017684
   140010f8d:	mov    eax,0x1
   140010f92:	mov    rbx,QWORD PTR [rsp+0x30]
   140010f97:	add    rsp,0x20
   140010f9b:	pop    rdi
   140010f9c:	ret    
   140010f9d:	int3   
   140010f9e:	int3   
   140010f9f:	int3   
   140010fa0:	int3   
   140010fa1:	int3   
   140010fa2:	int3   
   140010fa3:	int3   
   140010fa4:	mov    QWORD PTR [rsp+0x8],rbx
   140010fa9:	push   rdi
   140010faa:	sub    rsp,0x20
   140010fae:	xor    eax,eax
   140010fb0:	mov    rdi,rcx
   140010fb3:	test   rcx,rcx
   140010fb6:	je     0x140010ff2
   140010fb8:	mov    ebx,edx
   140010fba:	lea    r8,[rip+0x2018f]        # 0x140031150
   140010fc1:	mov    edx,edx
   140010fc3:	mov    WORD PTR [rcx],ax
   140010fc6:	call   0x140017684
   140010fcb:	lea    r8,[rip+0x1fb8a]        # 0x140030b5c
   140010fd2:	mov    edx,ebx
   140010fd4:	mov    rcx,rdi
   140010fd7:	call   0x140017684
   140010fdc:	lea    r8,[rip+0x201c5]        # 0x1400311a8
   140010fe3:	mov    edx,ebx
   140010fe5:	mov    rcx,rdi
   140010fe8:	call   0x140017684
   140010fed:	mov    eax,0x1
   140010ff2:	mov    rbx,QWORD PTR [rsp+0x30]
   140010ff7:	add    rsp,0x20
   140010ffb:	pop    rdi
   140010ffc:	ret    
   140010ffd:	int3   
   140010ffe:	int3   
   140010fff:	int3   
   140011000:	int3   
   140011001:	int3   
   140011002:	int3   
   140011003:	int3   
   140011004:	mov    QWORD PTR [rsp+0x8],rbx
   140011009:	push   rdi
   14001100a:	sub    rsp,0x20
   14001100e:	xor    eax,eax
   140011010:	mov    rdi,rcx
   140011013:	test   rcx,rcx
   140011016:	je     0x140011052
   140011018:	mov    ebx,edx
   14001101a:	lea    r8,[rip+0x2019f]        # 0x1400311c0
   140011021:	mov    edx,edx
   140011023:	mov    WORD PTR [rcx],ax
   140011026:	call   0x140017684
   14001102b:	lea    r8,[rip+0x1fb52]        # 0x140030b84
   140011032:	mov    edx,ebx
   140011034:	mov    rcx,rdi
   140011037:	call   0x140017684
   14001103c:	lea    r8,[rip+0x201c5]        # 0x140031208
   140011043:	mov    edx,ebx
   140011045:	mov    rcx,rdi
   140011048:	call   0x140017684
   14001104d:	mov    eax,0x1
   140011052:	mov    rbx,QWORD PTR [rsp+0x30]
   140011057:	add    rsp,0x20
   14001105b:	pop    rdi
   14001105c:	ret    
   14001105d:	int3   
   14001105e:	int3   
   14001105f:	int3   
   140011060:	int3   
   140011061:	int3   
   140011062:	int3   
   140011063:	int3   
   140011064:	mov    rax,rsp
   140011067:	mov    QWORD PTR [rax+0x8],rbx
   14001106b:	mov    QWORD PTR [rax+0x10],rbp
   14001106f:	mov    QWORD PTR [rax+0x20],rsi
   140011073:	push   rdi
   140011074:	sub    rsp,0x30
   140011078:	xor    ebx,ebx
   14001107a:	mov    rdi,rdx
   14001107d:	mov    rsi,rcx
   140011080:	mov    QWORD PTR [rax+0x18],rbx
   140011084:	call   0x140010e74
   140011089:	mov    rcx,rdi
   14001108c:	call   QWORD PTR [rip+0x1e03e]        # 0x14002f0d0
   140011092:	lea    ebp,[rax+rax*1+0x2]
   140011096:	call   0x140010ae4
   14001109b:	mov    rdx,QWORD PTR [rip+0x2e86e]        # 0x14003f910
   1400110a2:	test   eax,eax
   1400110a4:	lea    rax,[rsp+0x50]
   1400110a9:	mov    r9d,0x20006
   1400110af:	cmovne rdx,QWORD PTR [rip+0x2e861]        # 0x14003f918
   1400110b7:	xor    r8d,r8d
   1400110ba:	mov    rcx,0xffffffff80000001
   1400110c1:	mov    QWORD PTR [rsp+0x20],rax
   1400110c6:	call   QWORD PTR [rip+0x302a4]        # 0x140041370
   1400110cc:	test   eax,eax
   1400110ce:	je     0x1400110d4
   1400110d0:	xor    eax,eax
   1400110d2:	jmp    0x140011109
   1400110d4:	mov    rcx,QWORD PTR [rsp+0x50]
   1400110d9:	mov    DWORD PTR [rsp+0x28],ebp
   1400110dd:	mov    QWORD PTR [rsp+0x20],rdi
   1400110e2:	mov    edi,0x1
   1400110e7:	xor    r8d,r8d
   1400110ea:	mov    rdx,rsi
   1400110ed:	mov    r9d,edi
   1400110f0:	call   QWORD PTR [rip+0x302ba]        # 0x1400413b0
   1400110f6:	test   eax,eax
   1400110f8:	jne    0x1400110fc
   1400110fa:	mov    ebx,edi
   1400110fc:	mov    rcx,QWORD PTR [rsp+0x50]
   140011101:	call   QWORD PTR [rip+0x30259]        # 0x140041360
   140011107:	mov    eax,ebx
   140011109:	mov    rbx,QWORD PTR [rsp+0x40]
   14001110e:	mov    rbp,QWORD PTR [rsp+0x48]
   140011113:	mov    rsi,QWORD PTR [rsp+0x58]
   140011118:	add    rsp,0x30
   14001111c:	pop    rdi
   14001111d:	ret    
   14001111e:	int3   
   14001111f:	int3   
   140011120:	int3   
   140011121:	int3   
   140011122:	int3   
   140011123:	int3   
   140011124:	rex push rbp
   140011126:	push   rbx
   140011127:	push   rsi
   140011128:	push   rdi
   140011129:	push   r13
   14001112b:	lea    rbp,[rsp-0x1f60]
   140011133:	mov    eax,0x2060
   140011138:	call   0x140012f50
   14001113d:	sub    rsp,rax
   140011140:	mov    rax,QWORD PTR [rip+0x2e7e9]        # 0x14003f930
   140011147:	xor    rax,rsp
   14001114a:	mov    QWORD PTR [rbp+0x1f50],rax
   140011151:	xor    ebx,ebx
   140011153:	mov    rsi,rcx
   140011156:	mov    rdi,rdx
   140011159:	mov    DWORD PTR [rsp+0x44],r8d
   14001115e:	lea    r13d,[rbx+0x1]
   140011162:	lea    rcx,[rbp+0xf52]
   140011169:	xor    edx,edx
   14001116b:	mov    r8d,0xffe
   140011171:	mov    QWORD PTR [rsp+0x38],rbx
   140011176:	mov    DWORD PTR [rsp+0x40],r13d
   14001117b:	mov    WORD PTR [rbp+0xf50],bx
   140011182:	call   0x140012fb0
   140011187:	lea    rcx,[rsp+0x52]
   14001118c:	xor    edx,edx
   14001118e:	mov    r8d,0xffe
   140011194:	mov    WORD PTR [rsp+0x50],bx
   140011199:	call   0x140012fb0
   14001119e:	mov    rcx,rsi
   1400111a1:	call   0x140013474
   1400111a6:	test   rax,rax
   1400111a9:	je     0x1400111c6
   1400111ab:	mov    edx,DWORD PTR [rsp+0x44]
   1400111af:	mov    r8,rax
   1400111b2:	mov    rcx,rdi
   1400111b5:	call   0x140016c68
   1400111ba:	test   eax,eax
   1400111bc:	sete   bl
   1400111bf:	mov    eax,ebx
   1400111c1:	jmp    0x1400113df
   1400111c6:	call   0x140010ae4
   1400111cb:	mov    rdx,QWORD PTR [rip+0x2e72e]        # 0x14003f900
   1400111d2:	mov    r9d,0x20019
   1400111d8:	test   eax,eax
   1400111da:	lea    rax,[rsp+0x38]
   1400111df:	mov    rcx,0xffffffff80000001
   1400111e6:	cmovne rdx,QWORD PTR [rip+0x2e71a]        # 0x14003f908
   1400111ee:	xor    r8d,r8d
   1400111f1:	mov    QWORD PTR [rsp+0x20],rax
   1400111f6:	call   QWORD PTR [rip+0x30174]        # 0x140041370
   1400111fc:	test   eax,eax
   1400111fe:	je     0x140011207
   140011200:	xor    eax,eax
   140011202:	jmp    0x1400113df
   140011207:	mov    rcx,QWORD PTR [rsp+0x38]
   14001120c:	lea    rax,[rsp+0x44]
   140011211:	lea    r9,[rsp+0x40]
   140011216:	mov    QWORD PTR [rsp+0x28],rax
   14001121b:	xor    r8d,r8d
   14001121e:	mov    rdx,rsi
   140011221:	mov    QWORD PTR [rsp+0x20],rdi
   140011226:	call   QWORD PTR [rip+0x3013c]        # 0x140041368
   14001122c:	test   eax,eax
   14001122e:	jne    0x1400113b6
   140011234:	mov    rcx,QWORD PTR [rsp+0x38]
   140011239:	lea    rax,[rsp+0x30]
   14001123e:	lea    r9,[rsp+0x40]
   140011243:	mov    QWORD PTR [rsp+0x28],rax
   140011248:	lea    rax,[rbp+0xf50]
   14001124f:	lea    rdx,[rip+0x1fd82]        # 0x140030fd8
   140011256:	xor    r8d,r8d
   140011259:	mov    DWORD PTR [rsp+0x30],0x800
   140011261:	mov    QWORD PTR [rsp+0x20],rax
   140011266:	call   QWORD PTR [rip+0x300fc]        # 0x140041368
   14001126c:	test   eax,eax
   14001126e:	je     0x140011278
   140011270:	mov    ebx,r13d
   140011273:	jmp    0x1400113b6
   140011278:	mov    rcx,QWORD PTR [rsp+0x38]
   14001127d:	call   QWORD PTR [rip+0x300dd]        # 0x140041360
   140011283:	lea    r11,[rsp+0x38]
   140011288:	lea    rdx,[rip+0x1fd89]        # 0x140031018
   14001128f:	mov    r9d,0x20019
   140011295:	xor    r8d,r8d
   140011298:	mov    rcx,0xffffffff80000002
   14001129f:	mov    QWORD PTR [rsp+0x20],r11
   1400112a4:	call   QWORD PTR [rip+0x300c6]        # 0x140041370
   1400112aa:	test   eax,eax
   1400112ac:	jne    0x140011270
   1400112ae:	mov    rcx,QWORD PTR [rsp+0x38]
   1400112b3:	lea    rax,[rsp+0x30]
   1400112b8:	lea    r9,[rsp+0x40]
   1400112bd:	mov    QWORD PTR [rsp+0x28],rax
   1400112c2:	lea    rax,[rsp+0x50]
   1400112c7:	lea    rdx,[rip+0x1fd82]        # 0x140031050
   1400112ce:	xor    r8d,r8d
   1400112d1:	mov    DWORD PTR [rsp+0x30],0x800
   1400112d9:	mov    QWORD PTR [rsp+0x20],rax
   1400112de:	call   QWORD PTR [rip+0x30084]        # 0x140041368
   1400112e4:	test   eax,eax
   1400112e6:	jne    0x140011270
   1400112e8:	lea    rax,[rsp+0x50]
   1400112ed:	lea    r8,[rbp+0xf50]
   1400112f4:	mov    DWORD PTR [rsp+0x30],0x800
   1400112fc:	sub    r8,rax
   1400112ff:	movzx  ecx,WORD PTR [rax]
   140011302:	movzx  edx,WORD PTR [rax+r8*1]
   140011307:	sub    ecx,edx
   140011309:	jne    0x140011313
   14001130b:	add    rax,0x2
   14001130f:	test   edx,edx
   140011311:	jne    0x1400112ff
   140011313:	test   ecx,ecx
   140011315:	js     0x1400113dc
   14001131b:	mov    rcx,QWORD PTR [rsp+0x38]
   140011320:	lea    rax,[rsp+0x30]
   140011325:	lea    r9,[rsp+0x40]
   14001132a:	mov    QWORD PTR [rsp+0x28],rax
   14001132f:	xor    r8d,r8d
   140011332:	mov    rdx,rsi
   140011335:	mov    QWORD PTR [rsp+0x20],rdi
   14001133a:	call   QWORD PTR [rip+0x30028]        # 0x140041368
   140011340:	test   eax,eax
   140011342:	jne    0x140011270
   140011348:	mov    rcx,QWORD PTR [rsp+0x38]
   14001134d:	call   QWORD PTR [rip+0x3000d]        # 0x140041360
   140011353:	call   0x140010ae4
   140011358:	mov    rdx,QWORD PTR [rip+0x2e5a1]        # 0x14003f900
   14001135f:	test   eax,eax
   140011361:	lea    rax,[rsp+0x38]
   140011366:	mov    r9d,0x20006
   14001136c:	cmovne rdx,QWORD PTR [rip+0x2e594]        # 0x14003f908
   140011374:	xor    r8d,r8d
   140011377:	mov    rcx,0xffffffff80000001
   14001137e:	mov    QWORD PTR [rsp+0x20],rax
   140011383:	call   QWORD PTR [rip+0x2ffe7]        # 0x140041370
   140011389:	test   eax,eax
   14001138b:	jne    0x140011200
   140011391:	mov    eax,DWORD PTR [rsp+0x30]
   140011395:	mov    rcx,QWORD PTR [rsp+0x38]
   14001139a:	mov    r9d,r13d
   14001139d:	mov    DWORD PTR [rsp+0x28],eax
   1400113a1:	xor    r8d,r8d
   1400113a4:	mov    rdx,rsi
   1400113a7:	mov    QWORD PTR [rsp+0x20],rdi
   1400113ac:	call   QWORD PTR [rip+0x2fffe]        # 0x1400413b0
   1400113b2:	test   eax,eax
   1400113b4:	je     0x1400113c6
   1400113b6:	mov    rcx,QWORD PTR [rsp+0x38]
   1400113bb:	call   QWORD PTR [rip+0x2ff9f]        # 0x140041360
   1400113c1:	jmp    0x1400111bf
   1400113c6:	mov    rcx,QWORD PTR [rsp+0x38]
   1400113cb:	call   QWORD PTR [rip+0x2ff8f]        # 0x140041360
   1400113d1:	mov    rdx,rdi
   1400113d4:	mov    rcx,rsi
   1400113d7:	call   0x140011064
   1400113dc:	mov    eax,r13d
   1400113df:	mov    rcx,QWORD PTR [rbp+0x1f50]
   1400113e6:	xor    rcx,rsp
   1400113e9:	call   0x140012670
   1400113ee:	add    rsp,0x2060
   1400113f5:	pop    r13
   1400113f7:	pop    rdi
   1400113f8:	pop    rsi
   1400113f9:	pop    rbx
   1400113fa:	pop    rbp
   1400113fb:	ret    
   1400113fc:	int3   
   1400113fd:	int3   
   1400113fe:	int3   
   1400113ff:	int3   
   140011400:	int3   
   140011401:	int3   
   140011402:	int3   
   140011403:	int3   
   140011404:	rex push rbx
   140011406:	mov    eax,0x1040
   14001140b:	call   0x140012f50
   140011410:	sub    rsp,rax
   140011413:	mov    rax,QWORD PTR [rip+0x2e516]        # 0x14003f930
   14001141a:	xor    rax,rsp
   14001141d:	mov    QWORD PTR [rsp+0x1030],rax
   140011425:	lea    rcx,[rsp+0x30]
   14001142a:	mov    edx,0x400
   14001142f:	call   QWORD PTR [rip+0x1dc2b]        # 0x14002f060
   140011435:	xor    ebx,ebx
   140011437:	test   eax,eax
   140011439:	je     0x140011489
   14001143b:	lea    rax,[rip+0x1fdd6]        # 0x140031218
   140011442:	lea    r9,[rsp+0x30]
   140011447:	lea    r8,[rip+0x1fdfa]        # 0x140031248
   14001144e:	lea    rcx,[rsp+0x830]
   140011456:	mov    edx,0x400
   14001145b:	mov    QWORD PTR [rsp+0x20],rax
   140011460:	call   0x140011b10
   140011465:	test   eax,eax
   140011467:	jle    0x140011489
   140011469:	lea    rcx,[rsp+0x830]
   140011471:	call   QWORD PTR [rip+0x1dca9]        # 0x14002f120
   140011477:	cmp    eax,0xffffffff
   14001147a:	je     0x140011485
   14001147c:	test   al,0x10
   14001147e:	jne    0x140011485
   140011480:	mov    ebx,0x1
   140011485:	mov    eax,ebx
   140011487:	jmp    0x14001148b
   140011489:	xor    eax,eax
   14001148b:	mov    rcx,QWORD PTR [rsp+0x1030]
   140011493:	xor    rcx,rsp
   140011496:	call   0x140012670
   14001149b:	add    rsp,0x1040
   1400114a2:	pop    rbx
   1400114a3:	ret    
   1400114a4:	int3   
   1400114a5:	int3   
   1400114a6:	int3   
   1400114a7:	int3   
   1400114a8:	int3   
   1400114a9:	int3   
   1400114aa:	int3   
   1400114ab:	int3   
   1400114ac:	int3   
   1400114ad:	int3   
   1400114ae:	int3   
   1400114af:	int3   
   1400114b0:	int3   
   1400114b1:	int3   
   1400114b2:	int3   
   1400114b3:	int3   
   1400114b4:	mov    QWORD PTR [rsp+0x18],rbx
   1400114b9:	push   rbp
   1400114ba:	push   rsi
   1400114bb:	push   rdi
   1400114bc:	push   r12
   1400114be:	push   r13
   1400114c0:	lea    rbp,[rsp-0x1fb0]
   1400114c8:	mov    eax,0x20b0
   1400114cd:	call   0x140012f50
   1400114d2:	sub    rsp,rax
   1400114d5:	mov    rax,QWORD PTR [rip+0x2e454]        # 0x14003f930
   1400114dc:	xor    rax,rsp
   1400114df:	mov    QWORD PTR [rbp+0x1fa0],rax
   1400114e6:	mov    rsi,rcx
   1400114e9:	mov    rdi,rdx
   1400114ec:	mov    ebx,0xffe
   1400114f1:	lea    rcx,[rbp-0x5e]
   1400114f5:	xor    r12d,r12d
   1400114f8:	xor    edx,edx
   1400114fa:	mov    r8d,ebx
   1400114fd:	mov    WORD PTR [rbp-0x60],r12w
   140011502:	call   0x140012fb0
   140011507:	lea    rcx,[rbp+0xfa2]
   14001150e:	mov    r8d,ebx
   140011511:	xor    edx,edx
   140011513:	mov    WORD PTR [rbp+0xfa0],r12w
   14001151b:	call   0x140012fb0
   140011520:	lea    rcx,[rbp-0x60]
   140011524:	mov    edx,0x800
   140011529:	call   0x140010b84
   14001152e:	test   eax,eax
   140011530:	je     0x140011ae9
   140011536:	lea    rdx,[rbp-0x60]
   14001153a:	lea    rcx,[rsp+0x38]
   14001153f:	call   0x14000f854
   140011544:	lea    rdx,[rip+0x1f9b5]        # 0x140030f00
   14001154b:	lea    rcx,[rsp+0x70]
   140011550:	call   0x14000f854
   140011555:	lea    rdx,[rsp+0x70]
   14001155a:	lea    rcx,[rsp+0x38]
   14001155f:	call   0x14000fb48
   140011564:	mov    rax,QWORD PTR [rsp+0x70]
   140011569:	or     r13d,0xffffffff
   14001156d:	test   rax,rax
   140011570:	je     0x1400115a8
   140011572:	mov    ecx,r13d
   140011575:	lock xadd DWORD PTR [rax+0x10],ecx
   14001157a:	add    ecx,r13d
   14001157d:	jne    0x1400115a8
   14001157f:	mov    rbx,QWORD PTR [rsp+0x70]
   140011584:	mov    rcx,QWORD PTR [rbx]
   140011587:	test   rcx,rcx
   14001158a:	je     0x140011592
   14001158c:	call   QWORD PTR [rip+0x1ddf6]        # 0x14002f388
   140011592:	mov    rcx,QWORD PTR [rbx+0x8]
   140011596:	test   rcx,rcx
   140011599:	je     0x1400115a0
   14001159b:	call   0x140016c60
   1400115a0:	mov    rcx,rbx
   1400115a3:	call   0x140016ae8
   1400115a8:	lea    rdx,[rip+0x1f4f5]        # 0x140030aa4
   1400115af:	lea    rcx,[rsp+0x30]
   1400115b4:	call   0x140011b3c
   1400115b9:	lea    r8,[rbp+0xfa0]
   1400115c0:	lea    rcx,[rip+0x1f959]        # 0x140030f20
   1400115c7:	mov    r9d,0x800
   1400115cd:	mov    edx,0x1
   1400115d2:	call   0x14000e61c
   1400115d7:	test   eax,eax
   1400115d9:	jne    0x140011612
   1400115db:	lea    rdx,[rbp-0x60]
   1400115df:	lea    rcx,[rbp-0x80]
   1400115e3:	call   0x14000f854
   1400115e8:	lea    rcx,[rsp+0x30]
   1400115ed:	mov    rdx,rax
   1400115f0:	call   0x14000fb48
   1400115f5:	mov    rbx,QWORD PTR [rbp-0x80]
   1400115f9:	test   rbx,rbx
   1400115fc:	je     0x140011673
   1400115fe:	mov    eax,r13d
   140011601:	lock xadd DWORD PTR [rbx+0x10],eax
   140011606:	add    eax,r13d
   140011609:	jne    0x140011673
   14001160b:	test   rbx,rbx
   14001160e:	je     0x140011673
   140011610:	jmp    0x14001164f
   140011612:	lea    rdx,[rbp+0xfa0]
   140011619:	lea    rcx,[rsp+0x50]
   14001161e:	call   0x14000f854
   140011623:	lea    rdx,[rsp+0x50]
   140011628:	lea    rcx,[rsp+0x30]
   14001162d:	call   0x14000fb48
   140011632:	mov    r11,QWORD PTR [rsp+0x50]
   140011637:	test   r11,r11
   14001163a:	je     0x140011673
   14001163c:	mov    eax,r13d
   14001163f:	lock xadd DWORD PTR [r11+0x10],eax
   140011645:	add    eax,r13d
   140011648:	jne    0x140011673
   14001164a:	mov    rbx,QWORD PTR [rsp+0x50]
   14001164f:	mov    rcx,QWORD PTR [rbx]
   140011652:	test   rcx,rcx
   140011655:	je     0x14001165d
   140011657:	call   QWORD PTR [rip+0x1dd2b]        # 0x14002f388
   14001165d:	mov    rcx,QWORD PTR [rbx+0x8]
   140011661:	test   rcx,rcx
   140011664:	je     0x14001166b
   140011666:	call   0x140016c60
   14001166b:	mov    rcx,rbx
   14001166e:	call   0x140016ae8
   140011673:	lea    rdx,[rip+0x1f8b6]        # 0x140030f30
   14001167a:	lea    rcx,[rsp+0x78]
   14001167f:	call   0x14000f854
   140011684:	lea    rdx,[rsp+0x78]
   140011689:	lea    rcx,[rsp+0x30]
   14001168e:	call   0x14000fb48
   140011693:	mov    r11,QWORD PTR [rsp+0x78]
   140011698:	test   r11,r11
   14001169b:	je     0x1400116d4
   14001169d:	mov    eax,r13d
   1400116a0:	lock xadd DWORD PTR [r11+0x10],eax
   1400116a6:	add    eax,r13d
   1400116a9:	jne    0x1400116d4
   1400116ab:	mov    rbx,QWORD PTR [rsp+0x78]
   1400116b0:	mov    rcx,QWORD PTR [rbx]
   1400116b3:	test   rcx,rcx
   1400116b6:	je     0x1400116be
   1400116b8:	call   QWORD PTR [rip+0x1dcca]        # 0x14002f388
   1400116be:	mov    rcx,QWORD PTR [rbx+0x8]
   1400116c2:	test   rcx,rcx
   1400116c5:	je     0x1400116cc
   1400116c7:	call   0x140016c60
   1400116cc:	mov    rcx,rbx
   1400116cf:	call   0x140016ae8
   1400116d4:	lea    rdx,[rip+0x1f3d9]        # 0x140030ab4
   1400116db:	lea    rcx,[rsp+0x28]
   1400116e0:	call   0x140011b3c
   1400116e5:	lea    rdx,[rsp+0x38]
   1400116ea:	lea    rcx,[rsp+0x28]
   1400116ef:	call   0x14000fb48
   1400116f4:	lea    rdx,[rip+0x1f3e9]        # 0x140030ae4
   1400116fb:	lea    rcx,[rbp-0x70]
   1400116ff:	call   0x140011b3c
   140011704:	lea    rcx,[rsp+0x28]
   140011709:	mov    rdx,rax
   14001170c:	call   0x14000fb48
   140011711:	mov    rbx,QWORD PTR [rbp-0x70]
   140011715:	test   rbx,rbx
   140011718:	je     0x140011750
   14001171a:	mov    eax,r13d
   14001171d:	lock xadd DWORD PTR [rbx+0x10],eax
   140011722:	add    eax,r13d
   140011725:	jne    0x140011750
   140011727:	test   rbx,rbx
   14001172a:	je     0x140011750
   14001172c:	mov    rcx,QWORD PTR [rbx]
   14001172f:	test   rcx,rcx
   140011732:	je     0x14001173a
   140011734:	call   QWORD PTR [rip+0x1dc4e]        # 0x14002f388
   14001173a:	mov    rcx,QWORD PTR [rbx+0x8]
   14001173e:	test   rcx,rcx
   140011741:	je     0x140011748
   140011743:	call   0x140016c60
   140011748:	mov    rcx,rbx
   14001174b:	call   0x140016ae8
   140011750:	lea    rdx,[rip+0x1f801]        # 0x140030f58
   140011757:	lea    rcx,[rsp+0x60]
   14001175c:	call   0x14000f854
   140011761:	lea    rdx,[rsp+0x60]
   140011766:	lea    rcx,[rsp+0x28]
   14001176b:	call   0x14000fb48
   140011770:	mov    r11,QWORD PTR [rsp+0x60]
   140011775:	test   r11,r11
   140011778:	je     0x1400117b1
   14001177a:	mov    eax,r13d
   14001177d:	lock xadd DWORD PTR [r11+0x10],eax
   140011783:	add    eax,r13d
   140011786:	jne    0x1400117b1
   140011788:	mov    rbx,QWORD PTR [rsp+0x60]
   14001178d:	mov    rcx,QWORD PTR [rbx]
   140011790:	test   rcx,rcx
   140011793:	je     0x14001179b
   140011795:	call   QWORD PTR [rip+0x1dbed]        # 0x14002f388
   14001179b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001179f:	test   rcx,rcx
   1400117a2:	je     0x1400117a9
   1400117a4:	call   0x140016c60
   1400117a9:	mov    rcx,rbx
   1400117ac:	call   0x140016ae8
   1400117b1:	lea    rdx,[rsp+0x30]
   1400117b6:	lea    rcx,[rsp+0x28]
   1400117bb:	call   0x14000fb48
   1400117c0:	lea    rdx,[rip+0x1f7a9]        # 0x140030f70
   1400117c7:	lea    rcx,[rsp+0x40]
   1400117cc:	call   0x14000f854
   1400117d1:	lea    rdx,[rsp+0x40]
   1400117d6:	lea    rcx,[rsp+0x28]
   1400117db:	call   0x14000fb48
   1400117e0:	mov    r11,QWORD PTR [rsp+0x40]
   1400117e5:	test   r11,r11
   1400117e8:	je     0x140011821
   1400117ea:	mov    eax,r13d
   1400117ed:	lock xadd DWORD PTR [r11+0x10],eax
   1400117f3:	add    eax,r13d
   1400117f6:	jne    0x140011821
   1400117f8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400117fd:	mov    rcx,QWORD PTR [rbx]
   140011800:	test   rcx,rcx
   140011803:	je     0x14001180b
   140011805:	call   QWORD PTR [rip+0x1db7d]        # 0x14002f388
   14001180b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001180f:	test   rcx,rcx
   140011812:	je     0x140011819
   140011814:	call   0x140016c60
   140011819:	mov    rcx,rbx
   14001181c:	call   0x140016ae8
   140011821:	lea    rcx,[rbp-0x68]
   140011825:	mov    rdx,rsi
   140011828:	call   0x14000f854
   14001182d:	lea    rcx,[rsp+0x28]
   140011832:	mov    rdx,rax
   140011835:	call   0x14000fb48
   14001183a:	mov    rbx,QWORD PTR [rbp-0x68]
   14001183e:	test   rbx,rbx
   140011841:	je     0x140011879
   140011843:	mov    eax,r13d
   140011846:	lock xadd DWORD PTR [rbx+0x10],eax
   14001184b:	add    eax,r13d
   14001184e:	jne    0x140011879
   140011850:	test   rbx,rbx
   140011853:	je     0x140011879
   140011855:	mov    rcx,QWORD PTR [rbx]
   140011858:	test   rcx,rcx
   14001185b:	je     0x140011863
   14001185d:	call   QWORD PTR [rip+0x1db25]        # 0x14002f388
   140011863:	mov    rcx,QWORD PTR [rbx+0x8]
   140011867:	test   rcx,rcx
   14001186a:	je     0x140011871
   14001186c:	call   0x140016c60
   140011871:	mov    rcx,rbx
   140011874:	call   0x140016ae8
   140011879:	lea    rdx,[rip+0x1f27c]        # 0x140030afc
   140011880:	lea    rcx,[rsp+0x58]
   140011885:	call   0x14000f854
   14001188a:	lea    rdx,[rsp+0x58]
   14001188f:	lea    rcx,[rsp+0x28]
   140011894:	call   0x14000fb48
   140011899:	mov    r11,QWORD PTR [rsp+0x58]
   14001189e:	test   r11,r11
   1400118a1:	je     0x1400118da
   1400118a3:	mov    eax,r13d
   1400118a6:	lock xadd DWORD PTR [r11+0x10],eax
   1400118ac:	add    eax,r13d
   1400118af:	jne    0x1400118da
   1400118b1:	mov    rbx,QWORD PTR [rsp+0x58]
   1400118b6:	mov    rcx,QWORD PTR [rbx]
   1400118b9:	test   rcx,rcx
   1400118bc:	je     0x1400118c4
   1400118be:	call   QWORD PTR [rip+0x1dac4]        # 0x14002f388
   1400118c4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400118c8:	test   rcx,rcx
   1400118cb:	je     0x1400118d2
   1400118cd:	call   0x140016c60
   1400118d2:	mov    rcx,rbx
   1400118d5:	call   0x140016ae8
   1400118da:	test   rdi,rdi
   1400118dd:	je     0x1400119fd
   1400118e3:	lea    rdx,[rip+0x1f32a]        # 0x140030c14
   1400118ea:	lea    rcx,[rsp+0x68]
   1400118ef:	call   0x14000f854
   1400118f4:	lea    rdx,[rsp+0x68]
   1400118f9:	lea    rcx,[rsp+0x28]
   1400118fe:	call   0x14000fb48
   140011903:	mov    r11,QWORD PTR [rsp+0x68]
   140011908:	test   r11,r11
   14001190b:	je     0x140011944
   14001190d:	mov    eax,r13d
   140011910:	lock xadd DWORD PTR [r11+0x10],eax
   140011916:	add    eax,r13d
   140011919:	jne    0x140011944
   14001191b:	mov    rbx,QWORD PTR [rsp+0x68]
   140011920:	mov    rcx,QWORD PTR [rbx]
   140011923:	test   rcx,rcx
   140011926:	je     0x14001192e
   140011928:	call   QWORD PTR [rip+0x1da5a]        # 0x14002f388
   14001192e:	mov    rcx,QWORD PTR [rbx+0x8]
   140011932:	test   rcx,rcx
   140011935:	je     0x14001193c
   140011937:	call   0x140016c60
   14001193c:	mov    rcx,rbx
   14001193f:	call   0x140016ae8
   140011944:	lea    rcx,[rbp-0x78]
   140011948:	mov    rdx,rdi
   14001194b:	call   0x14000f854
   140011950:	lea    rcx,[rsp+0x28]
   140011955:	mov    rdx,rax
   140011958:	call   0x14000fb48
   14001195d:	mov    rbx,QWORD PTR [rbp-0x78]
   140011961:	test   rbx,rbx
   140011964:	je     0x14001199c
   140011966:	mov    eax,r13d
   140011969:	lock xadd DWORD PTR [rbx+0x10],eax
   14001196e:	add    eax,r13d
   140011971:	jne    0x14001199c
   140011973:	test   rbx,rbx
   140011976:	je     0x14001199c
   140011978:	mov    rcx,QWORD PTR [rbx]
   14001197b:	test   rcx,rcx
   14001197e:	je     0x140011986
   140011980:	call   QWORD PTR [rip+0x1da02]        # 0x14002f388
   140011986:	mov    rcx,QWORD PTR [rbx+0x8]
   14001198a:	test   rcx,rcx
   14001198d:	je     0x140011994
   14001198f:	call   0x140016c60
   140011994:	mov    rcx,rbx
   140011997:	call   0x140016ae8
   14001199c:	lea    rdx,[rip+0x1f171]        # 0x140030b14
   1400119a3:	lea    rcx,[rsp+0x48]
   1400119a8:	call   0x14000f854
   1400119ad:	lea    rdx,[rsp+0x48]
   1400119b2:	lea    rcx,[rsp+0x28]
   1400119b7:	call   0x14000fb48
   1400119bc:	mov    r11,QWORD PTR [rsp+0x48]
   1400119c1:	test   r11,r11
   1400119c4:	je     0x1400119fd
   1400119c6:	mov    eax,r13d
   1400119c9:	lock xadd DWORD PTR [r11+0x10],eax
   1400119cf:	add    eax,r13d
   1400119d2:	jne    0x1400119fd
   1400119d4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400119d9:	mov    rcx,QWORD PTR [rbx]
   1400119dc:	test   rcx,rcx
   1400119df:	je     0x1400119e7
   1400119e1:	call   QWORD PTR [rip+0x1d9a1]        # 0x14002f388
   1400119e7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400119eb:	test   rcx,rcx
   1400119ee:	je     0x1400119f5
   1400119f0:	call   0x140016c60
   1400119f5:	mov    rcx,rbx
   1400119f8:	call   0x140016ae8
   1400119fd:	mov    rbx,QWORD PTR [rsp+0x28]
   140011a02:	test   rbx,rbx
   140011a05:	je     0x140011a0c
   140011a07:	mov    rdx,QWORD PTR [rbx]
   140011a0a:	jmp    0x140011a0f
   140011a0c:	mov    rdx,r12
   140011a0f:	mov    rax,QWORD PTR [rsp+0x38]
   140011a14:	test   rax,rax
   140011a17:	je     0x140011a1e
   140011a19:	mov    rcx,QWORD PTR [rax]
   140011a1c:	jmp    0x140011a21
   140011a1e:	mov    rcx,r12
   140011a21:	or     r8d,0xffffffff
   140011a25:	call   0x14000d91c
   140011a2a:	mov    edi,eax
   140011a2c:	test   rbx,rbx
   140011a2f:	je     0x140011a67
   140011a31:	mov    ecx,r13d
   140011a34:	lock xadd DWORD PTR [rbx+0x10],ecx
   140011a39:	add    ecx,r13d
   140011a3c:	jne    0x140011a67
   140011a3e:	mov    rbx,QWORD PTR [rsp+0x28]
   140011a43:	mov    rcx,QWORD PTR [rbx]
   140011a46:	test   rcx,rcx
   140011a49:	je     0x140011a51
   140011a4b:	call   QWORD PTR [rip+0x1d937]        # 0x14002f388
   140011a51:	mov    rcx,QWORD PTR [rbx+0x8]
   140011a55:	test   rcx,rcx
   140011a58:	je     0x140011a5f
   140011a5a:	call   0x140016c60
   140011a5f:	mov    rcx,rbx
   140011a62:	call   0x140016ae8
   140011a67:	mov    rax,QWORD PTR [rsp+0x30]
   140011a6c:	test   rax,rax
   140011a6f:	je     0x140011aa7
   140011a71:	mov    ecx,r13d
   140011a74:	lock xadd DWORD PTR [rax+0x10],ecx
   140011a79:	add    ecx,r13d
   140011a7c:	jne    0x140011aa7
   140011a7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a83:	mov    rcx,QWORD PTR [rbx]
   140011a86:	test   rcx,rcx
   140011a89:	je     0x140011a91
   140011a8b:	call   QWORD PTR [rip+0x1d8f7]        # 0x14002f388
   140011a91:	mov    rcx,QWORD PTR [rbx+0x8]
   140011a95:	test   rcx,rcx
   140011a98:	je     0x140011a9f
   140011a9a:	call   0x140016c60
   140011a9f:	mov    rcx,rbx
   140011aa2:	call   0x140016ae8
   140011aa7:	mov    rax,QWORD PTR [rsp+0x38]
   140011aac:	test   rax,rax
   140011aaf:	je     0x140011ae7
   140011ab1:	mov    ecx,r13d
   140011ab4:	lock xadd DWORD PTR [rax+0x10],ecx
   140011ab9:	add    ecx,r13d
   140011abc:	jne    0x140011ae7
   140011abe:	mov    rbx,QWORD PTR [rsp+0x38]
   140011ac3:	mov    rcx,QWORD PTR [rbx]
   140011ac6:	test   rcx,rcx
   140011ac9:	je     0x140011ad1
   140011acb:	call   QWORD PTR [rip+0x1d8b7]        # 0x14002f388
   140011ad1:	mov    rcx,QWORD PTR [rbx+0x8]
   140011ad5:	test   rcx,rcx
   140011ad8:	je     0x140011adf
   140011ada:	call   0x140016c60
   140011adf:	mov    rcx,rbx
   140011ae2:	call   0x140016ae8
   140011ae7:	mov    eax,edi
   140011ae9:	mov    rcx,QWORD PTR [rbp+0x1fa0]
   140011af0:	xor    rcx,rsp
   140011af3:	call   0x140012670
   140011af8:	mov    rbx,QWORD PTR [rsp+0x20f0]
   140011b00:	add    rsp,0x20b0
   140011b07:	pop    r13
   140011b09:	pop    r12
   140011b0b:	pop    rdi
   140011b0c:	pop    rsi
   140011b0d:	pop    rbp
   140011b0e:	ret    
   140011b0f:	int3   
   140011b10:	mov    r11,rsp
   140011b13:	mov    QWORD PTR [r11+0x18],r8
   140011b17:	mov    QWORD PTR [r11+0x20],r9
   140011b1b:	sub    rsp,0x38
   140011b1f:	lea    rax,[r11+0x20]
   140011b23:	mov    r9,r8
   140011b26:	mov    r8,rdx
   140011b29:	mov    edx,0x400
   140011b2e:	mov    QWORD PTR [r11-0x18],rax
   140011b32:	call   0x140018dcc
   140011b37:	add    rsp,0x38
   140011b3b:	ret    
   140011b3c:	rex push rdi
   140011b3e:	sub    rsp,0x30
   140011b42:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011b4b:	mov    QWORD PTR [rsp+0x48],rbx
   140011b50:	mov    QWORD PTR [rsp+0x50],rsi
   140011b55:	mov    rsi,rdx
   140011b58:	mov    rdi,rcx
   140011b5b:	mov    ecx,0x18
   140011b60:	call   0x140016bbc
   140011b65:	mov    rbx,rax
   140011b68:	mov    QWORD PTR [rsp+0x40],rax
   140011b6d:	test   rax,rax
   140011b70:	je     0x140011b8b
   140011b72:	and    QWORD PTR [rax+0x8],0x0
   140011b77:	mov    DWORD PTR [rax+0x10],0x1
   140011b7e:	mov    rcx,rsi
   140011b81:	call   0x14002aaa0
   140011b86:	mov    QWORD PTR [rbx],rax
   140011b89:	jmp    0x140011b8d
   140011b8b:	xor    ebx,ebx
   140011b8d:	mov    QWORD PTR [rdi],rbx
   140011b90:	test   rbx,rbx
   140011b93:	jne    0x140011ba0
   140011b95:	mov    ecx,0x8007000e
   140011b9a:	call   0x14002a970
   140011b9f:	int3   
   140011ba0:	mov    rax,rdi
   140011ba3:	mov    rbx,QWORD PTR [rsp+0x48]
   140011ba8:	mov    rsi,QWORD PTR [rsp+0x50]
   140011bad:	add    rsp,0x30
   140011bb1:	pop    rdi
   140011bb2:	ret    
   140011bb3:	lea    rax,[rip+0x2f7a6]        # 0x140041360
   140011bba:	jmp    0x140011bbf
   140011bbf:	mov    QWORD PTR [rsp+0x8],rcx
   140011bc4:	mov    QWORD PTR [rsp+0x10],rdx
   140011bc9:	mov    QWORD PTR [rsp+0x18],r8
   140011bce:	mov    QWORD PTR [rsp+0x20],r9
   140011bd3:	sub    rsp,0x68
   140011bd7:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140011bdd:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140011be3:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140011be9:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140011bef:	mov    rdx,rax
   140011bf2:	lea    rcx,[rip+0x24d77]        # 0x140036970
   140011bf9:	call   0x140011de0
   140011bfe:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140011c04:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140011c0a:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140011c10:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140011c16:	mov    rcx,QWORD PTR [rsp+0x70]
   140011c1b:	mov    rdx,QWORD PTR [rsp+0x78]
   140011c20:	mov    r8,QWORD PTR [rsp+0x80]
   140011c28:	mov    r9,QWORD PTR [rsp+0x88]
   140011c30:	add    rsp,0x68
   140011c34:	jmp    0x140011c36
   140011c36:	jmp    rax
   140011c38:	lea    rax,[rip+0x2f729]        # 0x140041368
   140011c3f:	jmp    0x140011bbf
   140011c44:	lea    rax,[rip+0x2f725]        # 0x140041370
   140011c4b:	jmp    0x140011bbf
   140011c50:	lea    rax,[rip+0x2f721]        # 0x140041378
   140011c57:	jmp    0x140011bbf
   140011c5c:	lea    rax,[rip+0x2f71d]        # 0x140041380
   140011c63:	jmp    0x140011bbf
   140011c68:	lea    rax,[rip+0x2f719]        # 0x140041388
   140011c6f:	jmp    0x140011bbf
   140011c74:	lea    rax,[rip+0x2f715]        # 0x140041390
   140011c7b:	jmp    0x140011bbf
   140011c80:	lea    rax,[rip+0x2f711]        # 0x140041398
   140011c87:	jmp    0x140011bbf
   140011c8c:	lea    rax,[rip+0x2f70d]        # 0x1400413a0
   140011c93:	jmp    0x140011bbf
   140011c98:	lea    rax,[rip+0x2f709]        # 0x1400413a8
   140011c9f:	jmp    0x140011bbf
   140011ca4:	lea    rax,[rip+0x2f705]        # 0x1400413b0
   140011cab:	jmp    0x140011bbf
   140011cb0:	lea    rax,[rip+0x2f709]        # 0x1400413c0
   140011cb7:	jmp    0x140011cbc
   140011cbc:	mov    QWORD PTR [rsp+0x8],rcx
   140011cc1:	mov    QWORD PTR [rsp+0x10],rdx
   140011cc6:	mov    QWORD PTR [rsp+0x18],r8
   140011ccb:	mov    QWORD PTR [rsp+0x20],r9
   140011cd0:	sub    rsp,0x68
   140011cd4:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140011cda:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140011ce0:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140011ce6:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140011cec:	mov    rdx,rax
   140011cef:	lea    rcx,[rip+0x24c9a]        # 0x140036990
   140011cf6:	call   0x140011de0
   140011cfb:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140011d01:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140011d07:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140011d0d:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140011d13:	mov    rcx,QWORD PTR [rsp+0x70]
   140011d18:	mov    rdx,QWORD PTR [rsp+0x78]
   140011d1d:	mov    r8,QWORD PTR [rsp+0x80]
   140011d25:	mov    r9,QWORD PTR [rsp+0x88]
   140011d2d:	add    rsp,0x68
   140011d31:	jmp    0x140011d33
   140011d33:	jmp    rax
   140011d35:	lea    rax,[rip+0x2f68c]        # 0x1400413c8
   140011d3c:	jmp    0x140011cbc
   140011d41:	lea    rax,[rip+0x2f688]        # 0x1400413d0
   140011d48:	jmp    0x140011cbc
   140011d4d:	lea    rax,[rip+0x2f684]        # 0x1400413d8
   140011d54:	jmp    0x140011cbc
   140011d59:	lea    rax,[rip+0x2f698]        # 0x1400413f8
   140011d60:	jmp    0x140011d65
   140011d65:	mov    QWORD PTR [rsp+0x8],rcx
   140011d6a:	mov    QWORD PTR [rsp+0x10],rdx
   140011d6f:	mov    QWORD PTR [rsp+0x18],r8
   140011d74:	mov    QWORD PTR [rsp+0x20],r9
   140011d79:	sub    rsp,0x68
   140011d7d:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140011d83:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140011d89:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   140011d8f:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140011d95:	mov    rdx,rax
   140011d98:	lea    rcx,[rip+0x24c11]        # 0x1400369b0
   140011d9f:	call   0x140011de0
   140011da4:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140011daa:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   140011db0:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140011db6:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140011dbc:	mov    rcx,QWORD PTR [rsp+0x70]
   140011dc1:	mov    rdx,QWORD PTR [rsp+0x78]
   140011dc6:	mov    r8,QWORD PTR [rsp+0x80]
   140011dce:	mov    r9,QWORD PTR [rsp+0x88]
   140011dd6:	add    rsp,0x68
   140011dda:	jmp    0x140011ddc
   140011ddc:	jmp    rax
   140011dde:	int3   
   140011ddf:	int3   
   140011de0:	rex push rbp
   140011de2:	push   rbx
   140011de3:	push   rsi
   140011de4:	push   rdi
   140011de5:	push   r12
   140011de7:	push   r13
   140011de9:	push   r14
   140011deb:	push   r15
   140011ded:	mov    rbp,rsp
   140011df0:	sub    rsp,0x78
   140011df4:	mov    eax,DWORD PTR [rcx+0x4]
   140011df7:	mov    r9d,DWORD PTR [rcx]
   140011dfa:	mov    r13d,DWORD PTR [rcx+0x8]
   140011dfe:	mov    r10d,DWORD PTR [rcx+0xc]
   140011e02:	and    DWORD PTR [rbp-0x38],0x0
   140011e06:	mov    rsi,rcx
   140011e09:	mov    r15d,DWORD PTR [rsi+0x14]
   140011e0d:	mov    ecx,DWORD PTR [rcx+0x10]
   140011e10:	mov    r14,rdx
   140011e13:	lea    rdx,[rip+0xfffffffffffee1e6]        # 0x140000000
   140011e1a:	and    r9d,0x1
   140011e1e:	mov    DWORD PTR [rbp-0x58],0x48
   140011e25:	add    rax,rdx
   140011e28:	add    r15,rdx
   140011e2b:	add    r13,rdx
   140011e2e:	add    r10,rdx
   140011e31:	add    rcx,rdx
   140011e34:	mov    edx,DWORD PTR [rsi+0x1c]
   140011e37:	mov    QWORD PTR [rbp-0x40],rax
   140011e3b:	xor    eax,eax
   140011e3d:	mov    QWORD PTR [rbp-0x50],rsi
   140011e41:	and    QWORD PTR [rbp-0x28],rax
   140011e45:	and    QWORD PTR [rbp-0x20],rax
   140011e49:	and    DWORD PTR [rbp-0x18],eax
   140011e4c:	mov    DWORD PTR [rbp+0x48],edx
   140011e4f:	mov    QWORD PTR [rbp-0x48],r14
   140011e53:	mov    QWORD PTR [rbp-0x30],rax
   140011e57:	test   r9b,r9b
   140011e5a:	jne    0x140011e80
   140011e5c:	xor    edx,edx
   140011e5e:	lea    rax,[rbp-0x58]
   140011e62:	lea    r9,[rbp+0x50]
   140011e66:	lea    r8d,[rdx+0x1]
   140011e6a:	mov    ecx,0xc06d0057
   140011e6f:	mov    QWORD PTR [rbp+0x50],rax
   140011e73:	call   QWORD PTR [rip+0x1d38f]        # 0x14002f208
   140011e79:	xor    eax,eax
   140011e7b:	jmp    0x140012091
   140011e80:	mov    rdi,QWORD PTR [r13+0x0]
   140011e84:	movabs rax,0x8000000000000000
   140011e8e:	mov    r12,r14
   140011e91:	sub    r12,r10
   140011e94:	sar    r12,0x3
   140011e98:	mov    r12d,r12d
   140011e9b:	test   QWORD PTR [rcx+r12*8],rax
   140011e9f:	mov    eax,0x0
   140011ea4:	sete   al
   140011ea7:	mov    DWORD PTR [rbp-0x38],eax
   140011eaa:	test   eax,eax
   140011eac:	je     0x140011ec2
   140011eae:	mov    eax,DWORD PTR [rcx+r12*8]
   140011eb2:	lea    rcx,[rip+0xfffffffffffee149]        # 0x140000002
   140011eb9:	add    rax,rcx
   140011ebc:	mov    QWORD PTR [rbp-0x30],rax
   140011ec0:	jmp    0x140011eca
   140011ec2:	movzx  eax,WORD PTR [rcx+r12*8]
   140011ec7:	mov    DWORD PTR [rbp-0x30],eax
   140011eca:	mov    rax,QWORD PTR [rip+0x4346f]        # 0x140055340
   140011ed1:	xor    ebx,ebx
   140011ed3:	test   rax,rax
   140011ed6:	je     0x140011ef3
   140011ed8:	lea    rdx,[rbp-0x58]
   140011edc:	xor    ecx,ecx
   140011ede:	call   rax
   140011ee0:	mov    rbx,rax
   140011ee3:	test   rax,rax
   140011ee6:	jne    0x14001206b
   140011eec:	mov    rax,QWORD PTR [rip+0x4344d]        # 0x140055340
   140011ef3:	test   rdi,rdi
   140011ef6:	jne    0x140011fbc
   140011efc:	test   rax,rax
   140011eff:	je     0x140011f12
   140011f01:	lea    rdx,[rbp-0x58]
   140011f05:	lea    ecx,[rdi+0x1]
   140011f08:	call   rax
   140011f0a:	mov    rdi,rax
   140011f0d:	test   rax,rax
   140011f10:	jne    0x140011f70
   140011f12:	mov    rcx,QWORD PTR [rbp-0x40]
   140011f16:	call   QWORD PTR [rip+0x1d2e4]        # 0x14002f200
   140011f1c:	mov    rdi,rax
   140011f1f:	test   rax,rax
   140011f22:	jne    0x140011f70
   140011f24:	call   QWORD PTR [rip+0x1d186]        # 0x14002f0b0
   140011f2a:	mov    DWORD PTR [rbp-0x18],eax
   140011f2d:	mov    rax,QWORD PTR [rip+0x433fc]        # 0x140055330
   140011f34:	test   rax,rax
   140011f37:	je     0x140011f4a
   140011f39:	lea    rdx,[rbp-0x58]
   140011f3d:	lea    ecx,[rdi+0x3]
   140011f40:	call   rax
   140011f42:	mov    rdi,rax
   140011f45:	test   rax,rax
   140011f48:	jne    0x140011f70
   140011f4a:	xor    edx,edx
   140011f4c:	lea    rax,[rbp-0x58]
   140011f50:	lea    r9,[rbp+0x58]
   140011f54:	lea    r8d,[rdx+0x1]
   140011f58:	mov    ecx,0xc06d007e
   140011f5d:	mov    QWORD PTR [rbp+0x58],rax
   140011f61:	call   QWORD PTR [rip+0x1d2a1]        # 0x14002f208
   140011f67:	mov    rax,QWORD PTR [rbp-0x20]
   140011f6b:	jmp    0x140012091
   140011f70:	mov    rax,rdi
   140011f73:	xchg   QWORD PTR [r13+0x0],rax
   140011f77:	cmp    rax,rdi
   140011f7a:	je     0x140011fac
   140011f7c:	cmp    DWORD PTR [rsi+0x18],0x0
   140011f80:	je     0x140011fb5
   140011f82:	mov    edx,0x10
   140011f87:	lea    ecx,[rdx+0x30]
   140011f8a:	call   QWORD PTR [rip+0x1d148]        # 0x14002f0d8
   140011f90:	test   rax,rax
   140011f93:	je     0x140011fb5
   140011f95:	mov    QWORD PTR [rax+0x8],rsi
   140011f99:	mov    rcx,QWORD PTR [rip+0x43398]        # 0x140055338
   140011fa0:	mov    QWORD PTR [rax],rcx
   140011fa3:	mov    QWORD PTR [rip+0x4338e],rax        # 0x140055338
   140011faa:	jmp    0x140011fb5
   140011fac:	mov    rcx,rdi
   140011faf:	call   QWORD PTR [rip+0x1d05b]        # 0x14002f010
   140011fb5:	mov    rax,QWORD PTR [rip+0x43384]        # 0x140055340
   140011fbc:	mov    QWORD PTR [rbp-0x28],rdi
   140011fc0:	test   rax,rax
   140011fc3:	je     0x140011fd3
   140011fc5:	lea    rdx,[rbp-0x58]
   140011fc9:	mov    ecx,0x2
   140011fce:	call   rax
   140011fd0:	mov    rbx,rax
   140011fd3:	test   rbx,rbx
   140011fd6:	jne    0x140012068
   140011fdc:	cmp    DWORD PTR [rsi+0x14],ebx
   140011fdf:	je     0x14001200c
   140011fe1:	cmp    DWORD PTR [rsi+0x1c],ebx
   140011fe4:	je     0x14001200c
   140011fe6:	movsxd rax,DWORD PTR [rdi+0x3c]
   140011fea:	cmp    DWORD PTR [rax+rdi*1],0x4550
   140011ff1:	jne    0x14001200c
   140011ff3:	mov    ecx,DWORD PTR [rbp+0x48]
   140011ff6:	cmp    DWORD PTR [rax+rdi*1+0x8],ecx
   140011ffa:	jne    0x14001200c
   140011ffc:	cmp    rdi,QWORD PTR [rax+rdi*1+0x30]
   140012001:	jne    0x14001200c
   140012003:	mov    rbx,QWORD PTR [r15+r12*8]
   140012007:	test   rbx,rbx
   14001200a:	jne    0x140012068
   14001200c:	mov    rdx,QWORD PTR [rbp-0x30]
   140012010:	mov    rcx,rdi
   140012013:	call   QWORD PTR [rip+0x1cfff]        # 0x14002f018
   140012019:	mov    rbx,rax
   14001201c:	test   rax,rax
   14001201f:	jne    0x140012068
   140012021:	call   QWORD PTR [rip+0x1d089]        # 0x14002f0b0
   140012027:	mov    DWORD PTR [rbp-0x18],eax
   14001202a:	mov    rax,QWORD PTR [rip+0x432ff]        # 0x140055330
   140012031:	test   rax,rax
   140012034:	je     0x140012047
   140012036:	lea    rdx,[rbp-0x58]
   14001203a:	lea    ecx,[rbx+0x4]
   14001203d:	call   rax
   14001203f:	mov    rbx,rax
   140012042:	test   rax,rax
   140012045:	jne    0x140012068
   140012047:	xor    edx,edx
   140012049:	lea    rax,[rbp-0x58]
   14001204d:	lea    r9,[rbp+0x60]
   140012051:	lea    r8d,[rdx+0x1]
   140012055:	mov    ecx,0xc06d007f
   14001205a:	mov    QWORD PTR [rbp+0x60],rax
   14001205e:	call   QWORD PTR [rip+0x1d1a4]        # 0x14002f208
   140012064:	mov    rbx,QWORD PTR [rbp-0x20]
   140012068:	mov    QWORD PTR [r14],rbx
   14001206b:	mov    rax,QWORD PTR [rip+0x432ce]        # 0x140055340
   140012072:	test   rax,rax
   140012075:	je     0x14001208e
   140012077:	and    DWORD PTR [rbp-0x18],0x0
   14001207b:	lea    rdx,[rbp-0x58]
   14001207f:	mov    ecx,0x5
   140012084:	mov    QWORD PTR [rbp-0x28],rdi
   140012088:	mov    QWORD PTR [rbp-0x20],rbx
   14001208c:	call   rax
   14001208e:	mov    rax,rbx
   140012091:	add    rsp,0x78
   140012095:	pop    r15
   140012097:	pop    r14
   140012099:	pop    r13
   14001209b:	pop    r12
   14001209d:	pop    rdi
   14001209e:	pop    rsi
   14001209f:	pop    rbx
   1400120a0:	pop    rbp
   1400120a1:	ret    
   1400120a2:	int3   
   1400120a3:	int3   
   1400120a4:	rex push rbx
   1400120a6:	sub    rsp,0x20
   1400120aa:	mov    r11d,DWORD PTR [r8]
   1400120ad:	mov    rbx,rdx
   1400120b0:	mov    r9,rcx
   1400120b3:	and    r11d,0xfffffff8
   1400120b7:	test   BYTE PTR [r8],0x4
   1400120bb:	mov    r10,rcx
   1400120be:	je     0x1400120d3
   1400120c0:	mov    eax,DWORD PTR [r8+0x8]
   1400120c4:	movsxd r10,DWORD PTR [r8+0x4]
   1400120c8:	neg    eax
   1400120ca:	add    r10,rcx
   1400120cd:	movsxd rcx,eax
   1400120d0:	and    r10,rcx
   1400120d3:	movsxd rax,r11d
   1400120d6:	mov    rdx,QWORD PTR [rax+r10*1]
   1400120da:	mov    rax,QWORD PTR [rbx+0x10]
   1400120de:	mov    ecx,DWORD PTR [rax+0x8]
   1400120e1:	add    rcx,QWORD PTR [rbx+0x8]
   1400120e5:	test   BYTE PTR [rcx+0x3],0xf
   1400120e9:	je     0x1400120f7
   1400120eb:	movzx  eax,BYTE PTR [rcx+0x3]
   1400120ef:	and    eax,0xfffffff0
   1400120f2:	cdqe   
   1400120f4:	add    r9,rax
   1400120f7:	xor    r9,rdx
   1400120fa:	mov    rcx,r9
   1400120fd:	add    rsp,0x20
   140012101:	pop    rbx
   140012102:	jmp    0x140012670
   140012107:	int3   
   140012108:	sub    rsp,0x28
   14001210c:	mov    r8,QWORD PTR [r9+0x38]
   140012110:	mov    rcx,rdx
   140012113:	mov    rdx,r9
   140012116:	call   0x1400120a4
   14001211b:	mov    eax,0x1
   140012120:	add    rsp,0x28
   140012124:	ret    
   140012125:	int3   
   140012126:	int3   
   140012127:	int3   
   140012128:	rex push rbx
   14001212a:	sub    rsp,0x20
   14001212e:	mov    rbx,rcx
   140012131:	call   0x1400192e4
   140012136:	cmp    rax,0x5
   14001213a:	jb     0x1400121dc
   140012140:	mov    r9w,0x5c
   140012145:	mov    r8w,0x2f
   14001214a:	cmp    WORD PTR [rbx],r9w
   14001214e:	je     0x14001215a
   140012150:	cmp    WORD PTR [rbx],r8w
   140012154:	jne    0x1400121dc
   14001215a:	cmp    WORD PTR [rbx+0x2],r9w
   14001215f:	je     0x140012168
   140012161:	cmp    WORD PTR [rbx+0x2],r8w
   140012166:	jne    0x1400121dc
   140012168:	cmp    WORD PTR [rbx+0x4],r9w
   14001216d:	je     0x1400121dc
   14001216f:	cmp    WORD PTR [rbx+0x4],r8w
   140012174:	je     0x1400121dc
   140012176:	lea    rax,[rbx+0x6]
   14001217a:	xor    edx,edx
   14001217c:	movzx  ecx,WORD PTR [rax]
   14001217f:	test   cx,cx
   140012182:	je     0x1400121dc
   140012184:	cmp    cx,r9w
   140012188:	je     0x14001219c
   14001218a:	cmp    cx,r8w
   14001218e:	je     0x14001219c
   140012190:	add    rax,0x2
   140012194:	movzx  ecx,WORD PTR [rax]
   140012197:	test   cx,cx
   14001219a:	jne    0x140012184
   14001219c:	cmp    WORD PTR [rax],dx
   14001219f:	je     0x1400121dc
   1400121a1:	add    rax,0x2
   1400121a5:	cmp    WORD PTR [rax],dx
   1400121a8:	je     0x1400121dc
   1400121aa:	movzx  ecx,WORD PTR [rax]
   1400121ad:	test   cx,cx
   1400121b0:	je     0x1400121d5
   1400121b2:	cmp    cx,r9w
   1400121b6:	je     0x1400121ca
   1400121b8:	cmp    cx,r8w
   1400121bc:	je     0x1400121ca
   1400121be:	add    rax,0x2
   1400121c2:	movzx  ecx,WORD PTR [rax]
   1400121c5:	test   cx,cx
   1400121c8:	jne    0x1400121b2
   1400121ca:	cmp    WORD PTR [rax],dx
   1400121cd:	je     0x1400121d5
   1400121cf:	cmp    WORD PTR [rax+0x2],dx
   1400121d3:	jne    0x1400121dc
   1400121d5:	mov    eax,0x1
   1400121da:	jmp    0x1400121de
   1400121dc:	xor    eax,eax
   1400121de:	add    rsp,0x20
   1400121e2:	pop    rbx
   1400121e3:	ret    
   1400121e4:	mov    QWORD PTR [rsp+0x18],rbx
   1400121e9:	push   rbp
   1400121ea:	push   rsi
   1400121eb:	push   rdi
   1400121ec:	push   r12
   1400121ee:	push   r13
   1400121f0:	push   r14
   1400121f2:	push   r15
   1400121f4:	lea    rbp,[rsp-0x3d0]
   1400121fc:	sub    rsp,0x4d0
   140012203:	mov    rax,QWORD PTR [rip+0x2d726]        # 0x14003f930
   14001220a:	xor    rax,rsp
   14001220d:	mov    QWORD PTR [rbp+0x3c0],rax
   140012214:	xor    r14d,r14d
   140012217:	mov    rdi,rdx
   14001221a:	mov    rsi,rcx
   14001221d:	mov    r13d,r14d
   140012220:	test   rcx,rcx
   140012223:	jne    0x140012245
   140012225:	call   0x14001585c
   14001222a:	mov    DWORD PTR [rax],r14d
   14001222d:	call   0x14001583c
   140012232:	mov    DWORD PTR [rax],0x16
   140012238:	call   0x140019f74
   14001223d:	or     eax,0xffffffff
   140012240:	jmp    0x140012627
   140012245:	test   rdx,rdx
   140012248:	je     0x140012225
   14001224a:	lea    rdx,[rip+0x1f097]        # 0x1400312e8
   140012251:	call   0x1400152ec
   140012256:	test   rax,rax
   140012259:	je     0x140012270
   14001225b:	call   0x14001583c
   140012260:	mov    edi,0x2
   140012265:	mov    DWORD PTR [rax],edi
   140012267:	call   0x14001585c
   14001226c:	mov    DWORD PTR [rax],edi
   14001226e:	jmp    0x14001223d
   140012270:	cmp    WORD PTR [rsi+0x2],0x3a
   140012275:	jne    0x140012295
   140012277:	movzx  ecx,WORD PTR [rsi]
   14001227a:	test   cx,cx
   14001227d:	je     0x140012286
   14001227f:	cmp    WORD PTR [rsi+0x4],r14w
   140012284:	je     0x14001225b
   140012286:	call   0x140019d74
   14001228b:	movzx  r15d,ax
   14001228f:	sub    r15d,0x60
   140012293:	jmp    0x14001229d
   140012295:	call   0x140019bac
   14001229a:	mov    r15d,eax
   14001229d:	lea    r8,[rsp+0x60]
   1400122a2:	xor    r9d,r9d
   1400122a5:	xor    edx,edx
   1400122a7:	mov    rcx,rsi
   1400122aa:	mov    DWORD PTR [rsp+0x28],r14d
   1400122af:	mov    QWORD PTR [rsp+0x20],r14
   1400122b4:	call   QWORD PTR [rip+0x1cf6e]        # 0x14002f228
   1400122ba:	or     rbx,0xffffffffffffffff
   1400122be:	mov    r12,rax
   1400122c1:	cmp    rax,rbx
   1400122c4:	jne    0x1400123f8
   1400122ca:	lea    rdx,[rip+0x1f00f]        # 0x1400312e0
   1400122d1:	mov    rcx,rsi
   1400122d4:	mov    r12,r14
   1400122d7:	call   0x1400152ec
   1400122dc:	test   rax,rax
   1400122df:	je     0x1400123e0
   1400122e5:	call   0x14001583c
   1400122ea:	mov    r14d,DWORD PTR [rax]
   1400122ed:	call   0x14001583c
   1400122f2:	lea    rcx,[rbp+0x1b0]
   1400122f9:	and    DWORD PTR [rax],r12d
   1400122fc:	mov    r8d,0x104
   140012302:	mov    rdx,rsi
   140012305:	call   0x140019300
   14001230a:	mov    r13,rax
   14001230d:	test   rax,rax
   140012310:	je     0x14001231c
   140012312:	call   0x14001583c
   140012317:	mov    DWORD PTR [rax],r14d
   14001231a:	jmp    0x140012345
   14001231c:	call   0x14001583c
   140012321:	cmp    DWORD PTR [rax],0x22
   140012324:	jne    0x1400123e0
   14001232a:	call   0x14001583c
   14001232f:	xor    r8d,r8d
   140012332:	mov    rdx,rsi
   140012335:	xor    ecx,ecx
   140012337:	mov    DWORD PTR [rax],r14d
   14001233a:	call   0x140019300
   14001233f:	mov    r12,rax
   140012342:	mov    r13,rax
   140012345:	xor    r14d,r14d
   140012348:	test   r13,r13
   14001234b:	je     0x1400123d3
   140012351:	mov    rcx,r13
   140012354:	call   0x1400192e4
   140012359:	cmp    rax,0x3
   14001235d:	je     0x14001236b
   14001235f:	mov    rcx,r13
   140012362:	call   0x140012128
   140012367:	test   eax,eax
   140012369:	je     0x1400123d3
   14001236b:	mov    rcx,r13
   14001236e:	call   QWORD PTR [rip+0x1ceac]        # 0x14002f220
   140012374:	mov    r13d,0x1
   14001237a:	cmp    eax,r13d
   14001237d:	jbe    0x1400123d3
   14001237f:	test   r12,r12
   140012382:	je     0x14001238c
   140012384:	mov    rcx,r12
   140012387:	call   0x1400130a8
   14001238c:	mov    DWORD PTR [rsp+0x30],ebx
   140012390:	xor    r9d,r9d
   140012393:	mov    r8d,r13d
   140012396:	mov    edx,r13d
   140012399:	mov    ecx,0x7bc
   14001239e:	mov    DWORD PTR [rsp+0x28],r14d
   1400123a3:	mov    DWORD PTR [rsp+0x60],0x10
   1400123ab:	mov    QWORD PTR [rsp+0x7c],r14
   1400123b0:	mov    WORD PTR [rbp-0x74],r14w
   1400123b5:	mov    DWORD PTR [rsp+0x20],r14d
   1400123ba:	call   0x1400198e0
   1400123bf:	mov    r13d,r14d
   1400123c2:	mov    QWORD PTR [rdi+0x20],rax
   1400123c6:	mov    QWORD PTR [rdi+0x18],rax
   1400123ca:	mov    QWORD PTR [rdi+0x28],rax
   1400123ce:	jmp    0x1400125c8
   1400123d3:	test   r12,r12
   1400123d6:	je     0x1400123e0
   1400123d8:	mov    rcx,r12
   1400123db:	call   0x1400130a8
   1400123e0:	call   0x14001583c
   1400123e5:	mov    edi,0x2
   1400123ea:	mov    DWORD PTR [rax],edi
   1400123ec:	call   0x14001585c
   1400123f1:	mov    DWORD PTR [rax],edi
   1400123f3:	jmp    0x140012625
   1400123f8:	test   DWORD PTR [rsp+0x60],0x400
   140012400:	je     0x14001244e
   140012402:	cmp    DWORD PTR [rbp-0x7c],0xa000000c
   140012409:	jne    0x14001244e
   14001240b:	lea    rcx,[rsp+0x40]
   140012410:	mov    r9d,0x40
   140012416:	xor    r8d,r8d
   140012419:	mov    rdx,rsi
   14001241c:	mov    DWORD PTR [rsp+0x40],ebx
   140012420:	mov    DWORD PTR [rsp+0x20],r14d
   140012425:	call   0x14001667c
   14001242a:	test   eax,eax
   14001242c:	jne    0x1400123e0
   14001242e:	mov    ecx,DWORD PTR [rsp+0x40]
   140012432:	cmp    ecx,ebx
   140012434:	je     0x1400123e0
   140012436:	mov    rdx,rdi
   140012439:	call   0x14001952c
   14001243e:	mov    ecx,DWORD PTR [rsp+0x40]
   140012442:	mov    ebx,eax
   140012444:	call   0x1400159c8
   140012449:	jmp    0x140012625
   14001244e:	cmp    DWORD PTR [rsp+0x74],r14d
   140012453:	jne    0x140012462
   140012455:	cmp    DWORD PTR [rsp+0x78],r14d
   14001245a:	jne    0x140012462
   14001245c:	mov    QWORD PTR [rdi+0x20],r14
   140012460:	jmp    0x1400124c9
   140012462:	lea    rdx,[rsp+0x40]
   140012467:	lea    rcx,[rsp+0x74]
   14001246c:	call   QWORD PTR [rip+0x1cda6]        # 0x14002f218
   140012472:	test   eax,eax
   140012474:	je     0x14001260f
   14001247a:	lea    rdx,[rsp+0x48]
   14001247f:	lea    rcx,[rsp+0x40]
   140012484:	call   QWORD PTR [rip+0x1cd86]        # 0x14002f210
   14001248a:	test   eax,eax
   14001248c:	je     0x14001260f
   140012492:	movzx  eax,WORD PTR [rsp+0x54]
   140012497:	movzx  r10d,WORD PTR [rsp+0x52]
   14001249d:	movzx  r9d,WORD PTR [rsp+0x50]
   1400124a3:	movzx  r8d,WORD PTR [rsp+0x4e]
   1400124a9:	movzx  edx,WORD PTR [rsp+0x4a]
   1400124ae:	movzx  ecx,WORD PTR [rsp+0x48]
   1400124b3:	mov    DWORD PTR [rsp+0x30],ebx
   1400124b7:	mov    DWORD PTR [rsp+0x28],eax
   1400124bb:	mov    DWORD PTR [rsp+0x20],r10d
   1400124c0:	call   0x1400198e0
   1400124c5:	mov    QWORD PTR [rdi+0x20],rax
   1400124c9:	cmp    DWORD PTR [rsp+0x6c],r14d
   1400124ce:	jne    0x1400124dd
   1400124d0:	cmp    DWORD PTR [rsp+0x70],r14d
   1400124d5:	jne    0x1400124dd
   1400124d7:	mov    rax,QWORD PTR [rdi+0x20]
   1400124db:	jmp    0x140012540
   1400124dd:	lea    rdx,[rsp+0x40]
   1400124e2:	lea    rcx,[rsp+0x6c]
   1400124e7:	call   QWORD PTR [rip+0x1cd2b]        # 0x14002f218
   1400124ed:	test   eax,eax
   1400124ef:	je     0x14001260f
   1400124f5:	lea    rdx,[rsp+0x48]
   1400124fa:	lea    rcx,[rsp+0x40]
   1400124ff:	call   QWORD PTR [rip+0x1cd0b]        # 0x14002f210
   140012505:	test   eax,eax
   140012507:	je     0x14001260f
   14001250d:	movzx  eax,WORD PTR [rsp+0x54]
   140012512:	movzx  r10d,WORD PTR [rsp+0x52]
   140012518:	movzx  r9d,WORD PTR [rsp+0x50]
   14001251e:	movzx  r8d,WORD PTR [rsp+0x4e]
   140012524:	movzx  edx,WORD PTR [rsp+0x4a]
   140012529:	movzx  ecx,WORD PTR [rsp+0x48]
   14001252e:	mov    DWORD PTR [rsp+0x30],ebx
   140012532:	mov    DWORD PTR [rsp+0x28],eax
   140012536:	mov    DWORD PTR [rsp+0x20],r10d
   14001253b:	call   0x1400198e0
   140012540:	mov    QWORD PTR [rdi+0x18],rax
   140012544:	cmp    DWORD PTR [rsp+0x64],r14d
   140012549:	jne    0x140012558
   14001254b:	cmp    DWORD PTR [rsp+0x68],r14d
   140012550:	jne    0x140012558
   140012552:	mov    rax,QWORD PTR [rdi+0x20]
   140012556:	jmp    0x1400125bb
   140012558:	lea    rdx,[rsp+0x40]
   14001255d:	lea    rcx,[rsp+0x64]
   140012562:	call   QWORD PTR [rip+0x1ccb0]        # 0x14002f218
   140012568:	test   eax,eax
   14001256a:	je     0x14001260f
   140012570:	lea    rdx,[rsp+0x48]
   140012575:	lea    rcx,[rsp+0x40]
   14001257a:	call   QWORD PTR [rip+0x1cc90]        # 0x14002f210
   140012580:	test   eax,eax
   140012582:	je     0x14001260f
   140012588:	movzx  eax,WORD PTR [rsp+0x54]
   14001258d:	movzx  r10d,WORD PTR [rsp+0x52]
   140012593:	movzx  r9d,WORD PTR [rsp+0x50]
   140012599:	movzx  r8d,WORD PTR [rsp+0x4e]
   14001259f:	movzx  edx,WORD PTR [rsp+0x4a]
   1400125a4:	movzx  ecx,WORD PTR [rsp+0x48]
   1400125a9:	mov    DWORD PTR [rsp+0x30],ebx
   1400125ad:	mov    DWORD PTR [rsp+0x28],eax
   1400125b1:	mov    DWORD PTR [rsp+0x20],r10d
   1400125b6:	call   0x1400198e0
   1400125bb:	mov    rcx,r12
   1400125be:	mov    QWORD PTR [rdi+0x28],rax
   1400125c2:	call   QWORD PTR [rip+0x1caa0]        # 0x14002f068
   1400125c8:	mov    ecx,DWORD PTR [rsp+0x60]
   1400125cc:	mov    rdx,rsi
   1400125cf:	call   0x140019434
   1400125d4:	mov    WORD PTR [rdi+0x6],ax
   1400125d8:	mov    eax,0x1
   1400125dd:	mov    WORD PTR [rdi+0x8],ax
   1400125e1:	mov    eax,DWORD PTR [rbp-0x80]
   1400125e4:	mov    DWORD PTR [rdi+0x14],eax
   1400125e7:	cmp    DWORD PTR [rsp+0x7c],r14d
   1400125ec:	je     0x1400125f5
   1400125ee:	mov    DWORD PTR [rdi+0x14],r14d
   1400125f2:	mov    r13d,ebx
   1400125f5:	lea    ecx,[r15-0x1]
   1400125f9:	mov    WORD PTR [rdi+0x4],r14w
   1400125fe:	mov    DWORD PTR [rdi+0xa],0x0
   140012605:	mov    DWORD PTR [rdi],ecx
   140012607:	mov    DWORD PTR [rdi+0x10],ecx
   14001260a:	mov    eax,r13d
   14001260d:	jmp    0x140012627
   14001260f:	call   QWORD PTR [rip+0x1ca9b]        # 0x14002f0b0
   140012615:	mov    ecx,eax
   140012617:	call   0x14001587c
   14001261c:	mov    rcx,r12
   14001261f:	call   QWORD PTR [rip+0x1ca43]        # 0x14002f068
   140012625:	mov    eax,ebx
   140012627:	mov    rcx,QWORD PTR [rbp+0x3c0]
   14001262e:	xor    rcx,rsp
   140012631:	call   0x140012670
   140012636:	mov    rbx,QWORD PTR [rsp+0x520]
   14001263e:	add    rsp,0x4d0
   140012645:	pop    r15
   140012647:	pop    r14
   140012649:	pop    r13
   14001264b:	pop    r12
   14001264d:	pop    rdi
   14001264e:	pop    rsi
   14001264f:	pop    rbp
   140012650:	ret    
   140012651:	int3   
   140012652:	int3   
   140012653:	int3   
   140012654:	int3   
   140012655:	int3   
   140012656:	int3   
   140012657:	int3   
   140012658:	int3   
   140012659:	int3   
   14001265a:	int3   
   14001265b:	int3   
   14001265c:	int3   
   14001265d:	int3   
   14001265e:	int3   
   14001265f:	int3   
   140012660:	int3   
   140012661:	int3   
   140012662:	int3   
   140012663:	int3   
   140012664:	int3   
   140012665:	int3   
   140012666:	data16 nop WORD PTR [rax+rax*1+0x0]
   140012670:	cmp    rcx,QWORD PTR [rip+0x2d2b9]        # 0x14003f930
   140012677:	jne    0x14001268a
   140012679:	rol    rcx,0x10
   14001267d:	test   cx,0xffff
   140012682:	jne    0x140012686
   140012684:	repz ret 
   140012686:	ror    rcx,0x10
   14001268a:	jmp    0x140019f94
   14001268f:	int3   
   140012690:	rex push rbx
   140012692:	sub    rsp,0x20
   140012696:	mov    rbx,rcx
   140012699:	mov    BYTE PTR [rcx+0x18],0x0
   14001269d:	test   rdx,rdx
   1400126a0:	jne    0x140012721
   1400126a2:	call   0x14001ae14
   1400126a7:	mov    QWORD PTR [rbx+0x10],rax
   1400126ab:	mov    rdx,QWORD PTR [rax+0xc0]
   1400126b2:	mov    QWORD PTR [rbx],rdx
   1400126b5:	mov    rcx,QWORD PTR [rax+0xb8]
   1400126bc:	mov    QWORD PTR [rbx+0x8],rcx
   1400126c0:	cmp    rdx,QWORD PTR [rip+0x2e189]        # 0x140040850
   1400126c7:	je     0x1400126df
   1400126c9:	mov    eax,DWORD PTR [rax+0xc8]
   1400126cf:	test   DWORD PTR [rip+0x2dd4b],eax        # 0x140040420
   1400126d5:	jne    0x1400126df
   1400126d7:	call   0x14001ac2c
   1400126dc:	mov    QWORD PTR [rbx],rax
   1400126df:	mov    rax,QWORD PTR [rip+0x2dc3a]        # 0x140040320
   1400126e6:	cmp    QWORD PTR [rbx+0x8],rax
   1400126ea:	je     0x140012707
   1400126ec:	mov    rax,QWORD PTR [rbx+0x10]
   1400126f0:	mov    ecx,DWORD PTR [rax+0xc8]
   1400126f6:	test   DWORD PTR [rip+0x2dd24],ecx        # 0x140040420
   1400126fc:	jne    0x140012707
   1400126fe:	call   0x14001a35c
   140012703:	mov    QWORD PTR [rbx+0x8],rax
   140012707:	mov    rax,QWORD PTR [rbx+0x10]
   14001270b:	test   BYTE PTR [rax+0xc8],0x2
   140012712:	jne    0x140012728
   140012714:	or     DWORD PTR [rax+0xc8],0x2
   14001271b:	mov    BYTE PTR [rbx+0x18],0x1
   14001271f:	jmp    0x140012728
   140012721:	movups xmm0,XMMWORD PTR [rdx]
   140012724:	movdqu XMMWORD PTR [rcx],xmm0
   140012728:	mov    rax,rbx
   14001272b:	add    rsp,0x20
   14001272f:	pop    rbx
   140012730:	ret    
   140012731:	int3   
   140012732:	int3   
   140012733:	int3   
   140012734:	mov    QWORD PTR [rsp+0x20],rbx
   140012739:	push   rbp
   14001273a:	push   rsi
   14001273b:	push   rdi
   14001273c:	push   r12
   14001273e:	push   r13
   140012740:	push   r14
   140012742:	push   r15
   140012744:	mov    rbp,rsp
   140012747:	sub    rsp,0x80
   14001274e:	mov    rax,QWORD PTR [rip+0x2d1db]        # 0x14003f930
   140012755:	xor    rax,rsp
   140012758:	mov    QWORD PTR [rbp-0x10],rax
   14001275c:	xor    r15d,r15d
   14001275f:	mov    rdi,r8
   140012762:	mov    rsi,rdx
   140012765:	mov    r13,rcx
   140012768:	mov    ebx,r15d
   14001276b:	mov    DWORD PTR [rbp-0x40],r15d
   14001276f:	test   rcx,rcx
   140012772:	je     0x140012780
   140012774:	test   r8,r8
   140012777:	jne    0x140012780
   140012779:	xor    eax,eax
   14001277b:	jmp    0x140012a9f
   140012780:	test   rdx,rdx
   140012783:	jne    0x14001279e
   140012785:	call   0x14001583c
   14001278a:	mov    DWORD PTR [rax],0x16
   140012790:	call   0x140019f74
   140012795:	or     rax,0xffffffffffffffff
   140012799:	jmp    0x140012a9f
   14001279e:	lea    rcx,[rbp-0x38]
   1400127a2:	mov    rdx,r9
   1400127a5:	call   0x140012690
   1400127aa:	test   r13,r13
   1400127ad:	je     0x1400129f6
   1400127b3:	mov    r14,QWORD PTR [rbp-0x38]
   1400127b7:	cmp    DWORD PTR [r14+0x14],r15d
   1400127bb:	jne    0x14001282f
   1400127bd:	test   rdi,rdi
   1400127c0:	je     0x140012a8b
   1400127c6:	mov    ecx,0xff
   1400127cb:	cmp    WORD PTR [rsi],cx
   1400127ce:	ja     0x14001280a
   1400127d0:	mov    al,BYTE PTR [rsi]
   1400127d2:	mov    BYTE PTR [r13+rbx*1+0x0],al
   1400127d7:	movzx  eax,WORD PTR [rsi]
   1400127da:	add    rsi,0x2
   1400127de:	test   ax,ax
   1400127e1:	je     0x1400127f0
   1400127e3:	inc    rbx
   1400127e6:	cmp    rbx,rdi
   1400127e9:	jb     0x1400127cb
   1400127eb:	jmp    0x140012a8b
   1400127f0:	cmp    BYTE PTR [rbp-0x20],r15b
   1400127f4:	je     0x140012a9c
   1400127fa:	mov    rcx,QWORD PTR [rbp-0x28]
   1400127fe:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140012805:	jmp    0x140012a9c
   14001280a:	call   0x14001583c
   14001280f:	mov    DWORD PTR [rax],0x2a
   140012815:	cmp    BYTE PTR [rbp-0x20],r15b
   140012819:	je     0x140012795
   14001281f:	mov    rax,QWORD PTR [rbp-0x28]
   140012823:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001282a:	jmp    0x140012795
   14001282f:	cmp    DWORD PTR [r14+0x10c],0x1
   140012837:	jne    0x1400128d0
   14001283d:	test   rdi,rdi
   140012840:	je     0x14001286e
   140012842:	mov    rax,rsi
   140012845:	mov    rcx,rdi
   140012848:	cmp    WORD PTR [rax],r15w
   14001284c:	je     0x140012857
   14001284e:	add    rax,0x2
   140012852:	dec    rcx
   140012855:	jne    0x140012848
   140012857:	test   rcx,rcx
   14001285a:	je     0x14001286e
   14001285c:	cmp    WORD PTR [rax],r15w
   140012860:	jne    0x14001286e
   140012862:	mov    rdi,rax
   140012865:	sub    rdi,rsi
   140012868:	sar    rdi,1
   14001286b:	inc    rdi
   14001286e:	mov    ecx,DWORD PTR [r14+0x4]
   140012872:	lea    rax,[rbp-0x40]
   140012876:	mov    r9d,edi
   140012879:	mov    QWORD PTR [rsp+0x38],rax
   14001287e:	mov    QWORD PTR [rsp+0x30],r15
   140012883:	mov    r8,rsi
   140012886:	xor    edx,edx
   140012888:	mov    DWORD PTR [rsp+0x28],edi
   14001288c:	mov    QWORD PTR [rsp+0x20],r13
   140012891:	call   QWORD PTR [rip+0x1c999]        # 0x14002f230
   140012897:	cdqe   
   140012899:	test   rax,rax
   14001289c:	je     0x14001280a
   1400128a2:	cmp    DWORD PTR [rbp-0x40],r15d
   1400128a6:	jne    0x14001280a
   1400128ac:	cmp    BYTE PTR [r13+rax*1-0x1],r15b
   1400128b1:	jne    0x1400128b6
   1400128b3:	dec    rax
   1400128b6:	cmp    BYTE PTR [rbp-0x20],r15b
   1400128ba:	je     0x140012a9f
   1400128c0:	mov    rcx,QWORD PTR [rbp-0x28]
   1400128c4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400128cb:	jmp    0x140012a9f
   1400128d0:	mov    ecx,DWORD PTR [r14+0x4]
   1400128d4:	lea    rax,[rbp-0x40]
   1400128d8:	or     rbx,0xffffffffffffffff
   1400128dc:	mov    QWORD PTR [rsp+0x38],rax
   1400128e1:	mov    QWORD PTR [rsp+0x30],r15
   1400128e6:	mov    r9d,ebx
   1400128e9:	mov    r8,rsi
   1400128ec:	xor    edx,edx
   1400128ee:	mov    DWORD PTR [rsp+0x28],edi
   1400128f2:	mov    QWORD PTR [rsp+0x20],r13
   1400128f7:	call   QWORD PTR [rip+0x1c933]        # 0x14002f230
   1400128fd:	movsxd r12,eax
   140012900:	test   eax,eax
   140012902:	je     0x140012915
   140012904:	cmp    DWORD PTR [rbp-0x40],r15d
   140012908:	jne    0x140012a80
   14001290e:	lea    rax,[r12-0x1]
   140012913:	jmp    0x1400128b6
   140012915:	cmp    DWORD PTR [rbp-0x40],r15d
   140012919:	jne    0x140012a80
   14001291f:	call   QWORD PTR [rip+0x1c78b]        # 0x14002f0b0
   140012925:	cmp    eax,0x7a
   140012928:	jne    0x140012a80
   14001292e:	test   rdi,rdi
   140012931:	je     0x1400129ca
   140012937:	mov    ecx,DWORD PTR [r14+0x4]
   14001293b:	lea    rax,[rbp-0x40]
   14001293f:	mov    r9d,0x1
   140012945:	mov    QWORD PTR [rsp+0x38],rax
   14001294a:	mov    eax,DWORD PTR [r14+0x10c]
   140012951:	mov    QWORD PTR [rsp+0x30],r15
   140012956:	mov    DWORD PTR [rsp+0x28],eax
   14001295a:	lea    rax,[rbp-0x18]
   14001295e:	mov    r8,rsi
   140012961:	xor    edx,edx
   140012963:	mov    QWORD PTR [rsp+0x20],rax
   140012968:	call   QWORD PTR [rip+0x1c8c2]        # 0x14002f230
   14001296e:	test   eax,eax
   140012970:	je     0x140012a80
   140012976:	cmp    DWORD PTR [rbp-0x40],r15d
   14001297a:	jne    0x140012a80
   140012980:	test   eax,eax
   140012982:	js     0x140012a80
   140012988:	cmp    eax,0x5
   14001298b:	ja     0x140012a80
   140012991:	movsxd rdx,eax
   140012994:	lea    rax,[rdx+r12*1]
   140012998:	cmp    rax,rdi
   14001299b:	ja     0x1400129ca
   14001299d:	mov    rcx,r15
   1400129a0:	test   rdx,rdx
   1400129a3:	jle    0x1400129bd
   1400129a5:	mov    al,BYTE PTR [rbp+rcx*1-0x18]
   1400129a9:	mov    BYTE PTR [r13+r12*1+0x0],al
   1400129ae:	test   al,al
   1400129b0:	je     0x1400129dd
   1400129b2:	inc    rcx
   1400129b5:	inc    r12
   1400129b8:	cmp    rcx,rdx
   1400129bb:	jl     0x1400129a5
   1400129bd:	add    rsi,0x2
   1400129c1:	cmp    r12,rdi
   1400129c4:	jb     0x140012937
   1400129ca:	cmp    BYTE PTR [rbp-0x20],r15b
   1400129ce:	je     0x1400129ee
   1400129d0:	mov    rax,QWORD PTR [rbp-0x28]
   1400129d4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400129db:	jmp    0x1400129ee
   1400129dd:	cmp    BYTE PTR [rbp-0x20],r15b
   1400129e1:	je     0x1400129ee
   1400129e3:	mov    rcx,QWORD PTR [rbp-0x28]
   1400129e7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400129ee:	mov    rax,r12
   1400129f1:	jmp    0x140012a9f
   1400129f6:	mov    rax,QWORD PTR [rbp-0x38]
   1400129fa:	cmp    DWORD PTR [rax+0x14],r15d
   1400129fe:	jne    0x140012a3e
   140012a00:	movzx  eax,WORD PTR [rsi]
   140012a03:	mov    rdx,r15
   140012a06:	test   ax,ax
   140012a09:	je     0x140012a28
   140012a0b:	mov    ecx,0xff
   140012a10:	cmp    ax,cx
   140012a13:	ja     0x14001280a
   140012a19:	add    rsi,0x2
   140012a1d:	inc    rdx
   140012a20:	movzx  eax,WORD PTR [rsi]
   140012a23:	test   ax,ax
   140012a26:	jne    0x140012a10
   140012a28:	cmp    BYTE PTR [rbp-0x20],r15b
   140012a2c:	je     0x140012a39
   140012a2e:	mov    rcx,QWORD PTR [rbp-0x28]
   140012a32:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140012a39:	mov    rax,rdx
   140012a3c:	jmp    0x140012a9f
   140012a3e:	lea    rcx,[rbp-0x40]
   140012a42:	or     rbx,0xffffffffffffffff
   140012a46:	mov    r8,rsi
   140012a49:	mov    QWORD PTR [rsp+0x38],rcx
   140012a4e:	mov    ecx,DWORD PTR [rax+0x4]
   140012a51:	mov    QWORD PTR [rsp+0x30],r15
   140012a56:	mov    r9d,ebx
   140012a59:	xor    edx,edx
   140012a5b:	mov    DWORD PTR [rsp+0x28],r15d
   140012a60:	mov    QWORD PTR [rsp+0x20],r15
   140012a65:	call   QWORD PTR [rip+0x1c7c5]        # 0x14002f230
   140012a6b:	cdqe   
   140012a6d:	test   rax,rax
   140012a70:	je     0x140012a80
   140012a72:	cmp    DWORD PTR [rbp-0x40],r15d
   140012a76:	jne    0x140012a80
   140012a78:	dec    rax
   140012a7b:	jmp    0x1400128b6
   140012a80:	call   0x14001583c
   140012a85:	mov    DWORD PTR [rax],0x2a
   140012a8b:	cmp    BYTE PTR [rbp-0x20],r15b
   140012a8f:	je     0x140012a9c
   140012a91:	mov    rax,QWORD PTR [rbp-0x28]
   140012a95:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140012a9c:	mov    rax,rbx
   140012a9f:	mov    rcx,QWORD PTR [rbp-0x10]
   140012aa3:	xor    rcx,rsp
   140012aa6:	call   0x140012670
   140012aab:	mov    rbx,QWORD PTR [rsp+0xd8]
   140012ab3:	add    rsp,0x80
   140012aba:	pop    r15
   140012abc:	pop    r14
   140012abe:	pop    r13
   140012ac0:	pop    r12
   140012ac2:	pop    rdi
   140012ac3:	pop    rsi
   140012ac4:	pop    rbp
   140012ac5:	ret    
   140012ac6:	int3   
   140012ac7:	int3   
   140012ac8:	mov    QWORD PTR [rsp+0x8],rbx
   140012acd:	mov    QWORD PTR [rsp+0x10],rsi
   140012ad2:	mov    QWORD PTR [rsp+0x18],rdi
   140012ad7:	push   r12
   140012ad9:	sub    rsp,0x20
   140012add:	xor    r12d,r12d
   140012ae0:	mov    rax,r9
   140012ae3:	mov    rdi,r8
   140012ae6:	mov    rbx,rdx
   140012ae9:	mov    rsi,rcx
   140012aec:	test   rdx,rdx
   140012aef:	je     0x140012b42
   140012af1:	test   r8,r8
   140012af4:	je     0x140012b47
   140012af6:	test   rdx,rdx
   140012af9:	je     0x140012afe
   140012afb:	mov    BYTE PTR [rdx],r12b
   140012afe:	test   rcx,rcx
   140012b01:	je     0x140012b06
   140012b03:	and    QWORD PTR [rcx],r12
   140012b06:	mov    r8,QWORD PTR [rsp+0x50]
   140012b0b:	cmp    r8,rdi
   140012b0e:	cmova  r8,rdi
   140012b12:	cmp    r8,0x7fffffff
   140012b19:	ja     0x140012b47
   140012b1b:	mov    r9,QWORD PTR [rsp+0x58]
   140012b20:	mov    rdx,rax
   140012b23:	mov    rcx,rbx
   140012b26:	call   0x140012734
   140012b2b:	cmp    rax,0xffffffffffffffff
   140012b2f:	jne    0x140012b5c
   140012b31:	test   rbx,rbx
   140012b34:	je     0x140012b39
   140012b36:	mov    BYTE PTR [rbx],r12b
   140012b39:	call   0x14001583c
   140012b3e:	mov    eax,DWORD PTR [rax]
   140012b40:	jmp    0x140012b9e
   140012b42:	test   r8,r8
   140012b45:	je     0x140012af6
   140012b47:	call   0x14001583c
   140012b4c:	mov    ebx,0x16
   140012b51:	mov    DWORD PTR [rax],ebx
   140012b53:	call   0x140019f74
   140012b58:	mov    eax,ebx
   140012b5a:	jmp    0x140012b9e
   140012b5c:	inc    rax
   140012b5f:	test   rbx,rbx
   140012b62:	je     0x140012b93
   140012b64:	cmp    rax,rdi
   140012b67:	jbe    0x140012b8e
   140012b69:	cmp    QWORD PTR [rsp+0x50],0xffffffffffffffff
   140012b6f:	je     0x140012b85
   140012b71:	mov    BYTE PTR [rbx],r12b
   140012b74:	cmp    rdi,rax
   140012b77:	ja     0x140012b85
   140012b79:	call   0x14001583c
   140012b7e:	mov    ebx,0x22
   140012b83:	jmp    0x140012b51
   140012b85:	mov    rax,rdi
   140012b88:	mov    r12d,0x50
   140012b8e:	mov    BYTE PTR [rax+rbx*1-0x1],0x0
   140012b93:	test   rsi,rsi
   140012b96:	je     0x140012b9b
   140012b98:	mov    QWORD PTR [rsi],rax
   140012b9b:	mov    eax,r12d
   140012b9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140012ba3:	mov    rsi,QWORD PTR [rsp+0x38]
   140012ba8:	mov    rdi,QWORD PTR [rsp+0x40]
   140012bad:	add    rsp,0x20
   140012bb1:	pop    r12
   140012bb3:	ret    
   140012bb4:	sub    rsp,0x38
   140012bb8:	mov    rax,QWORD PTR [rsp+0x60]
   140012bbd:	and    QWORD PTR [rsp+0x28],0x0
   140012bc3:	mov    QWORD PTR [rsp+0x20],rax
   140012bc8:	call   0x140012ac8
   140012bcd:	add    rsp,0x38
   140012bd1:	ret    
   140012bd2:	int3   
   140012bd3:	int3   
   140012bd4:	rex push rbx
   140012bd6:	sub    rsp,0x20
   140012bda:	and    DWORD PTR [rsp+0x40],0x0
   140012bdf:	lea    r8,[rsp+0x40]
   140012be4:	call   0x14001aff0
   140012be9:	mov    rbx,rax
   140012bec:	test   rax,rax
   140012bef:	jne    0x140012c0c
   140012bf1:	cmp    DWORD PTR [rsp+0x40],eax
   140012bf5:	je     0x140012c0c
   140012bf7:	call   0x14001583c
   140012bfc:	test   rax,rax
   140012bff:	je     0x140012c0c
   140012c01:	call   0x14001583c
   140012c06:	mov    ecx,DWORD PTR [rsp+0x40]
   140012c0a:	mov    DWORD PTR [rax],ecx
   140012c0c:	mov    rax,rbx
   140012c0f:	add    rsp,0x20
   140012c13:	pop    rbx
   140012c14:	ret    
   140012c15:	int3   
   140012c16:	int3   
   140012c17:	int3   
   140012c18:	mov    QWORD PTR [rsp+0x10],rbx
   140012c1d:	mov    QWORD PTR [rsp+0x18],rdi
   140012c22:	mov    QWORD PTR [rsp+0x20],r12
   140012c27:	push   rbp
   140012c28:	mov    rbp,rsp
   140012c2b:	sub    rsp,0x70
   140012c2f:	mov    rax,QWORD PTR [rip+0x2ccfa]        # 0x14003f930
   140012c36:	xor    rax,rsp
   140012c39:	mov    QWORD PTR [rbp-0x8],rax
   140012c3d:	and    DWORD PTR [rbp-0x38],0x0
   140012c41:	and    DWORD PTR [rbp-0x34],0x0
   140012c45:	mov    edi,edx
   140012c47:	mov    rbx,rcx
   140012c4a:	test   rcx,rcx
   140012c4d:	jne    0x140012c64
   140012c4f:	call   0x14001583c
   140012c54:	mov    DWORD PTR [rax],0x16
   140012c5a:	call   0x140019f74
   140012c5f:	jmp    0x140012ea3
   140012c64:	movsxd r10,DWORD PTR [rcx+0x14]
   140012c68:	mov    r8d,0x408
   140012c6e:	lea    rax,[r10-0x45]
   140012c72:	mov    QWORD PTR [rbp-0x40],r10
   140012c76:	cmp    rax,r8
   140012c79:	ja     0x140012e98
   140012c7f:	mov    ecx,DWORD PTR [rcx+0x10]
   140012c82:	test   ecx,ecx
   140012c84:	js     0x140012c8b
   140012c86:	cmp    ecx,0xb
   140012c89:	jle    0x140012cce
   140012c8b:	mov    eax,0x2aaaaaab
   140012c90:	imul   ecx
   140012c92:	sar    edx,1
   140012c94:	mov    eax,edx
   140012c96:	shr    eax,0x1f
   140012c99:	add    edx,eax
   140012c9b:	lea    eax,[rdx+rdx*2]
   140012c9e:	shl    eax,0x2
   140012ca1:	sub    ecx,eax
   140012ca3:	movsxd rax,edx
   140012ca6:	add    r10,rax
   140012ca9:	mov    DWORD PTR [rbx+0x10],ecx
   140012cac:	mov    QWORD PTR [rbp-0x40],r10
   140012cb0:	test   ecx,ecx
   140012cb2:	jns    0x140012cc1
   140012cb4:	lea    eax,[rcx+0xc]
   140012cb7:	dec    r10
   140012cba:	mov    DWORD PTR [rbx+0x10],eax
   140012cbd:	mov    QWORD PTR [rbp-0x40],r10
   140012cc1:	lea    rax,[r10-0x45]
   140012cc5:	cmp    rax,r8
   140012cc8:	ja     0x140012e98
   140012cce:	movsxd rax,DWORD PTR [rbx+0x10]
   140012cd2:	lea    rcx,[rip+0x2dc8f]        # 0x140040968
   140012cd9:	movabs r12,0xa3d70a3d70a3d70b
   140012ce3:	movsxd r11,DWORD PTR [rcx+rax*4]
   140012ce7:	mov    rax,r10
   140012cea:	cqo    
   140012cec:	and    edx,0x3
   140012cef:	add    rax,rdx
   140012cf2:	and    eax,0x3
   140012cf5:	cmp    rax,rdx
   140012cf8:	jne    0x140012d1a
   140012cfa:	mov    rax,r12
   140012cfd:	imul   r10
   140012d00:	add    rdx,r10
   140012d03:	sar    rdx,0x6
   140012d07:	mov    rax,rdx
   140012d0a:	shr    rax,0x3f
   140012d0e:	add    rdx,rax
   140012d11:	imul   rdx,rdx,0x64
   140012d15:	cmp    r10,rdx
   140012d18:	jne    0x140012d44
   140012d1a:	lea    rcx,[r10+0x76c]
   140012d21:	mov    rax,r12
   140012d24:	imul   rcx
   140012d27:	add    rdx,rcx
   140012d2a:	sar    rdx,0x8
   140012d2e:	mov    rax,rdx
   140012d31:	shr    rax,0x3f
   140012d35:	add    rdx,rax
   140012d38:	imul   rdx,rdx,0x190
   140012d3f:	cmp    rcx,rdx
   140012d42:	jne    0x140012d4d
   140012d44:	cmp    DWORD PTR [rbx+0x10],0x1
   140012d48:	jle    0x140012d4d
   140012d4a:	inc    r11
   140012d4d:	lea    rcx,[r10+0x12b]
   140012d54:	lea    r8,[r10-0x1]
   140012d58:	mov    rax,r12
   140012d5b:	imul   r10,r10,0x16d
   140012d62:	imul   rcx
   140012d65:	mov    rax,r12
   140012d68:	lea    r9,[rcx+rdx*1]
   140012d6c:	imul   r8
   140012d6f:	mov    rax,r8
   140012d72:	sar    r9,0x8
   140012d76:	add    rdx,r8
   140012d79:	sar    rdx,0x6
   140012d7d:	mov    rcx,r9
   140012d80:	shr    rcx,0x3f
   140012d84:	add    r9,rcx
   140012d87:	movsxd rcx,DWORD PTR [rbx+0xc]
   140012d8b:	add    r9,rcx
   140012d8e:	mov    rcx,rdx
   140012d91:	shr    rcx,0x3f
   140012d95:	add    rdx,rcx
   140012d98:	sub    r9,rdx
   140012d9b:	cqo    
   140012d9d:	and    edx,0x3
   140012da0:	add    rax,rdx
   140012da3:	sar    rax,0x2
   140012da7:	add    rax,r11
   140012daa:	add    rax,r9
   140012dad:	lea    rax,[r10+rax*1-0x63df]
   140012db5:	lea    rcx,[rax+rax*2]
   140012db9:	movsxd rax,DWORD PTR [rbx+0x8]
   140012dbd:	shl    rcx,0x3
   140012dc1:	add    rax,rcx
   140012dc4:	movsxd rcx,DWORD PTR [rbx+0x4]
   140012dc8:	imul   rax,rax,0x3c
   140012dcc:	add    rcx,rax
   140012dcf:	movsxd rax,DWORD PTR [rbx]
   140012dd2:	imul   rcx,rcx,0x3c
   140012dd6:	add    rax,rcx
   140012dd9:	mov    QWORD PTR [rbp-0x40],rax
   140012ddd:	test   edi,edi
   140012ddf:	je     0x140012e6f
   140012de5:	call   0x14001be0c
   140012dea:	lea    rcx,[rbp-0x38]
   140012dee:	call   0x14001b38c
   140012df3:	test   eax,eax
   140012df5:	jne    0x140012e59
   140012df7:	lea    rcx,[rbp-0x34]
   140012dfb:	call   0x14001b3bc
   140012e00:	test   eax,eax
   140012e02:	jne    0x140012e43
   140012e04:	movsxd rax,DWORD PTR [rbp-0x34]
   140012e08:	lea    rdx,[rbp-0x40]
   140012e0c:	lea    rcx,[rbp-0x30]
   140012e10:	add    QWORD PTR [rbp-0x40],rax
   140012e14:	call   0x14001779c
   140012e19:	test   eax,eax
   140012e1b:	jne    0x140012e98
   140012e1d:	mov    eax,DWORD PTR [rbx+0x20]
   140012e20:	test   eax,eax
   140012e22:	jg     0x140012e2c
   140012e24:	jns    0x140012e80
   140012e26:	cmp    DWORD PTR [rbp-0x10],0x0
   140012e2a:	jle    0x140012e80
   140012e2c:	movsxd rax,DWORD PTR [rbp-0x38]
   140012e30:	lea    rdx,[rbp-0x40]
   140012e34:	lea    rcx,[rbp-0x30]
   140012e38:	add    QWORD PTR [rbp-0x40],rax
   140012e3c:	call   0x14001779c
   140012e41:	jmp    0x140012e7c
   140012e43:	and    QWORD PTR [rsp+0x20],0x0
   140012e49:	xor    r9d,r9d
   140012e4c:	xor    r8d,r8d
   140012e4f:	xor    edx,edx
   140012e51:	xor    ecx,ecx
   140012e53:	call   0x140019ed0
   140012e58:	int3   
   140012e59:	and    QWORD PTR [rsp+0x20],0x0
   140012e5f:	xor    r9d,r9d
   140012e62:	xor    r8d,r8d
   140012e65:	xor    edx,edx
   140012e67:	xor    ecx,ecx
   140012e69:	call   0x140019ed0
   140012e6e:	int3   
   140012e6f:	lea    rdx,[rbp-0x40]
   140012e73:	lea    rcx,[rbp-0x30]
   140012e77:	call   0x14001b08c
   140012e7c:	test   eax,eax
   140012e7e:	jne    0x140012e98
   140012e80:	lea    rdx,[rbp-0x30]
   140012e84:	mov    rcx,rbx
   140012e87:	mov    r8d,0x24
   140012e8d:	call   0x140018e00
   140012e92:	mov    rax,QWORD PTR [rbp-0x40]
   140012e96:	jmp    0x140012ea7
   140012e98:	call   0x14001583c
   140012e9d:	mov    DWORD PTR [rax],0x16
   140012ea3:	or     rax,0xffffffffffffffff
   140012ea7:	mov    rcx,QWORD PTR [rbp-0x8]
   140012eab:	xor    rcx,rsp
   140012eae:	call   0x140012670
   140012eb3:	lea    r11,[rsp+0x70]
   140012eb8:	mov    rbx,QWORD PTR [r11+0x18]
   140012ebc:	mov    rdi,QWORD PTR [r11+0x20]
   140012ec0:	mov    r12,QWORD PTR [r11+0x28]
   140012ec4:	mov    rsp,r11
   140012ec7:	pop    rbp
   140012ec8:	ret    
   140012ec9:	int3   
   140012eca:	int3   
   140012ecb:	int3   
   140012ecc:	mov    edx,0x1
   140012ed1:	jmp    0x140012c18
   140012ed6:	int3   
   140012ed7:	int3   
   140012ed8:	rex push rbx
   140012eda:	sub    rsp,0x20
   140012ede:	mov    rbx,rcx
   140012ee1:	lea    rcx,[rsp+0x30]
   140012ee6:	call   QWORD PTR [rip+0x1c34c]        # 0x14002f238
   140012eec:	mov    rdx,QWORD PTR [rsp+0x30]
   140012ef1:	or     rcx,0xffffffffffffffff
   140012ef5:	movabs r11,0xfe624e212ac18000
   140012eff:	movabs rax,0xd6bf94d5e57a42bd
   140012f09:	add    rdx,r11
   140012f0c:	mul    rdx
   140012f0f:	movabs rax,0x793406fff
   140012f19:	shr    rdx,0x17
   140012f1d:	cmp    rdx,rax
   140012f20:	cmovg  rdx,rcx
   140012f24:	test   rbx,rbx
   140012f27:	je     0x140012f2c
   140012f29:	mov    QWORD PTR [rbx],rdx
   140012f2c:	mov    rax,rdx
   140012f2f:	add    rsp,0x20
   140012f33:	pop    rbx
   140012f34:	ret    
   140012f35:	int3   
   140012f36:	int3   
   140012f37:	int3   
   140012f38:	int3   
   140012f39:	int3   
   140012f3a:	int3   
   140012f3b:	int3   
   140012f3c:	int3   
   140012f3d:	int3   
   140012f3e:	int3   
   140012f3f:	int3   
   140012f40:	int3   
   140012f41:	int3   
   140012f42:	int3   
   140012f43:	int3   
   140012f44:	int3   
   140012f45:	int3   
   140012f46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140012f50:	sub    rsp,0x10
   140012f54:	mov    QWORD PTR [rsp],r10
   140012f58:	mov    QWORD PTR [rsp+0x8],r11
   140012f5d:	xor    r11,r11
   140012f60:	lea    r10,[rsp+0x18]
   140012f65:	sub    r10,rax
   140012f68:	cmovb  r10,r11
   140012f6c:	mov    r11,QWORD PTR gs:0x10
   140012f75:	cmp    r10,r11
   140012f78:	jae    0x140012f90
   140012f7a:	and    r10w,0xf000
   140012f80:	lea    r11,[r11-0x1000]
   140012f87:	mov    BYTE PTR [r11],0x0
   140012f8b:	cmp    r10,r11
   140012f8e:	jne    0x140012f80
   140012f90:	mov    r10,QWORD PTR [rsp]
   140012f94:	mov    r11,QWORD PTR [rsp+0x8]
   140012f99:	add    rsp,0x10
   140012f9d:	ret    
   140012f9e:	int3   
   140012f9f:	int3   
   140012fa0:	int3   
   140012fa1:	int3   
   140012fa2:	int3   
   140012fa3:	int3   
   140012fa4:	int3   
   140012fa5:	int3   
   140012fa6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140012fb0:	mov    rax,rcx
   140012fb3:	cmp    r8,0x8
   140012fb7:	jb     0x14001300c
   140012fb9:	movzx  edx,dl
   140012fbc:	movabs r9,0x101010101010101
   140012fc6:	imul   rdx,r9
   140012fca:	cmp    r8,0x40
   140012fce:	jb     0x140012fee
   140012fd0:	neg    rcx
   140012fd3:	and    ecx,0x7
   140012fd6:	je     0x140012fde
   140012fd8:	sub    r8,rcx
   140012fdb:	mov    QWORD PTR [rax],rdx
   140012fde:	add    rcx,rax
   140012fe1:	mov    r9,r8
   140012fe4:	and    r8,0x3f
   140012fe8:	shr    r9,0x6
   140012fec:	jne    0x140013027
   140012fee:	mov    r9,r8
   140012ff1:	and    r8,0x7
   140012ff5:	shr    r9,0x3
   140012ff9:	je     0x14001300c
   140012ffb:	data16 data16 xchg ax,ax
   140012fff:	nop
   140013000:	mov    QWORD PTR [rcx],rdx
   140013003:	add    rcx,0x8
   140013007:	dec    r9
   14001300a:	jne    0x140013000
   14001300c:	test   r8,r8
   14001300f:	je     0x14001301b
   140013011:	mov    BYTE PTR [rcx],dl
   140013013:	inc    rcx
   140013016:	dec    r8
   140013019:	jne    0x140013011
   14001301b:	ret    
   14001301c:	nop    DWORD PTR [rax+0x0]
   140013020:	data16 data16 xchg ax,ax
   140013024:	data16 xchg ax,ax
   140013027:	cmp    r9,0x1c00
   14001302e:	jae    0x140013060
   140013030:	mov    QWORD PTR [rcx],rdx
   140013033:	mov    QWORD PTR [rcx+0x8],rdx
   140013037:	mov    QWORD PTR [rcx+0x10],rdx
   14001303b:	add    rcx,0x40
   14001303f:	mov    QWORD PTR [rcx-0x28],rdx
   140013043:	mov    QWORD PTR [rcx-0x20],rdx
   140013047:	dec    r9
   14001304a:	mov    QWORD PTR [rcx-0x18],rdx
   14001304e:	mov    QWORD PTR [rcx-0x10],rdx
   140013052:	mov    QWORD PTR [rcx-0x8],rdx
   140013056:	jne    0x140013030
   140013058:	jmp    0x140012fee
   14001305a:	nop    WORD PTR [rax+rax*1+0x0]
   140013060:	movnti QWORD PTR [rcx],rdx
   140013064:	movnti QWORD PTR [rcx+0x8],rdx
   140013069:	movnti QWORD PTR [rcx+0x10],rdx
   14001306e:	add    rcx,0x40
   140013072:	movnti QWORD PTR [rcx-0x28],rdx
   140013077:	movnti QWORD PTR [rcx-0x20],rdx
   14001307c:	dec    r9
   14001307f:	movnti QWORD PTR [rcx-0x18],rdx
   140013084:	movnti QWORD PTR [rcx-0x10],rdx
   140013089:	movnti QWORD PTR [rcx-0x8],rdx
   14001308e:	jne    0x140013060
   140013090:	lock or BYTE PTR [rsp],0x0
   140013095:	jmp    0x140012fee
   14001309a:	int3   
   14001309b:	int3   
   14001309c:	xor    edx,edx
   14001309e:	lea    r8d,[rdx+0xa]
   1400130a2:	jmp    0x14001c0e4
   1400130a7:	int3   
   1400130a8:	test   rcx,rcx
   1400130ab:	je     0x1400130e4
   1400130ad:	push   rbx
   1400130ae:	sub    rsp,0x20
   1400130b2:	mov    r8,rcx
   1400130b5:	mov    rcx,QWORD PTR [rip+0x42984]        # 0x140055a40
   1400130bc:	xor    edx,edx
   1400130be:	call   QWORD PTR [rip+0x1c17c]        # 0x14002f240
   1400130c4:	test   eax,eax
   1400130c6:	jne    0x1400130df
   1400130c8:	call   0x14001583c
   1400130cd:	mov    rbx,rax
   1400130d0:	call   QWORD PTR [rip+0x1bfda]        # 0x14002f0b0
   1400130d6:	mov    ecx,eax
   1400130d8:	call   0x1400157f4
   1400130dd:	mov    DWORD PTR [rbx],eax
   1400130df:	add    rsp,0x20
   1400130e3:	pop    rbx
   1400130e4:	ret    
   1400130e5:	int3   
   1400130e6:	int3   
   1400130e7:	int3   
   1400130e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400130ed:	mov    QWORD PTR [rsp+0x10],rsi
   1400130f2:	push   rdi
   1400130f3:	sub    rsp,0x30
   1400130f7:	mov    rbx,rcx
   1400130fa:	test   rcx,rcx
   1400130fd:	je     0x14001314b
   1400130ff:	call   0x1400192e4
   140013104:	mov    edx,0x2
   140013109:	lea    rcx,[rax+0x1]
   14001310d:	mov    rsi,rax
   140013110:	call   0x140012bd4
   140013115:	mov    rdi,rax
   140013118:	test   rax,rax
   14001311b:	je     0x14001314b
   14001311d:	lea    rdx,[rsi+0x1]
   140013121:	mov    r8,rbx
   140013124:	mov    rcx,rax
   140013127:	call   0x140016c68
   14001312c:	test   eax,eax
   14001312e:	jne    0x140013135
   140013130:	mov    rax,rdi
   140013133:	jmp    0x14001314d
   140013135:	and    QWORD PTR [rsp+0x20],0x0
   14001313b:	xor    r9d,r9d
   14001313e:	xor    r8d,r8d
   140013141:	xor    edx,edx
   140013143:	xor    ecx,ecx
   140013145:	call   0x140019ed0
   14001314a:	int3   
   14001314b:	xor    eax,eax
   14001314d:	mov    rbx,QWORD PTR [rsp+0x40]
   140013152:	mov    rsi,QWORD PTR [rsp+0x48]
   140013157:	add    rsp,0x30
   14001315b:	pop    rdi
   14001315c:	ret    
   14001315d:	int3   
   14001315e:	int3   
   14001315f:	int3   
   140013160:	xor    r11d,r11d
   140013163:	mov    r10,rdx
   140013166:	mov    r8,rcx
   140013169:	cmp    WORD PTR [rdx],r11w
   14001316d:	jne    0x140013173
   14001316f:	mov    rax,rcx
   140013172:	ret    
   140013173:	movzx  eax,WORD PTR [rcx]
   140013176:	test   ax,ax
   140013179:	je     0x1400131bd
   14001317b:	mov    r9,rcx
   14001317e:	sub    r9,rdx
   140013181:	mov    rdx,r10
   140013184:	test   ax,ax
   140013187:	je     0x1400131a6
   140013189:	cmp    WORD PTR [rdx],r11w
   14001318d:	je     0x1400131c0
   14001318f:	movzx  ecx,WORD PTR [r9+rdx*1]
   140013194:	movzx  eax,WORD PTR [rdx]
   140013197:	cmp    ecx,eax
   140013199:	jne    0x1400131a6
   14001319b:	add    rdx,0x2
   14001319f:	cmp    WORD PTR [r9+rdx*1],r11w
   1400131a4:	jne    0x140013189
   1400131a6:	cmp    WORD PTR [rdx],r11w
   1400131aa:	je     0x1400131c0
   1400131ac:	add    r8,0x2
   1400131b0:	add    r9,0x2
   1400131b4:	movzx  eax,WORD PTR [r8]
   1400131b8:	test   ax,ax
   1400131bb:	jne    0x140013181
   1400131bd:	xor    eax,eax
   1400131bf:	ret    
   1400131c0:	mov    rax,r8
   1400131c3:	ret    
   1400131c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400131c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400131ce:	push   rdi
   1400131cf:	sub    rsp,0x20
   1400131d3:	mov    rbx,rdx
   1400131d6:	mov    rdi,rcx
   1400131d9:	test   rcx,rcx
   1400131dc:	jne    0x1400131e8
   1400131de:	mov    rcx,rdx
   1400131e1:	call   0x140013298
   1400131e6:	jmp    0x140013252
   1400131e8:	test   rdx,rdx
   1400131eb:	jne    0x1400131f4
   1400131ed:	call   0x1400130a8
   1400131f2:	jmp    0x140013250
   1400131f4:	cmp    rdx,0xffffffffffffffe0
   1400131f8:	ja     0x14001323d
   1400131fa:	mov    rcx,QWORD PTR [rip+0x4283f]        # 0x140055a40
   140013201:	mov    eax,0x1
   140013206:	test   rbx,rbx
   140013209:	cmove  rbx,rax
   14001320d:	mov    r8,rdi
   140013210:	xor    edx,edx
   140013212:	mov    r9,rbx
   140013215:	call   QWORD PTR [rip+0x1c02d]        # 0x14002f248
   14001321b:	mov    rsi,rax
   14001321e:	test   rax,rax
   140013221:	jne    0x140013292
   140013223:	cmp    DWORD PTR [rip+0x42827],eax        # 0x140055a50
   140013229:	je     0x14001327b
   14001322b:	mov    rcx,rbx
   14001322e:	call   0x14001c174
   140013233:	test   eax,eax
   140013235:	je     0x140013262
   140013237:	cmp    rbx,0xffffffffffffffe0
   14001323b:	jbe    0x1400131fa
   14001323d:	mov    rcx,rbx
   140013240:	call   0x14001c174
   140013245:	call   0x14001583c
   14001324a:	mov    DWORD PTR [rax],0xc
   140013250:	xor    eax,eax
   140013252:	mov    rbx,QWORD PTR [rsp+0x30]
   140013257:	mov    rsi,QWORD PTR [rsp+0x38]
   14001325c:	add    rsp,0x20
   140013260:	pop    rdi
   140013261:	ret    
   140013262:	call   0x14001583c
   140013267:	mov    rbx,rax
   14001326a:	call   QWORD PTR [rip+0x1be40]        # 0x14002f0b0
   140013270:	mov    ecx,eax
   140013272:	call   0x1400157f4
   140013277:	mov    DWORD PTR [rbx],eax
   140013279:	jmp    0x140013250
   14001327b:	call   0x14001583c
   140013280:	mov    rbx,rax
   140013283:	call   QWORD PTR [rip+0x1be27]        # 0x14002f0b0
   140013289:	mov    ecx,eax
   14001328b:	call   0x1400157f4
   140013290:	mov    DWORD PTR [rbx],eax
   140013292:	mov    rax,rsi
   140013295:	jmp    0x140013252
   140013297:	int3   
   140013298:	mov    QWORD PTR [rsp+0x8],rbx
   14001329d:	mov    QWORD PTR [rsp+0x10],rsi
   1400132a2:	push   rdi
   1400132a3:	sub    rsp,0x20
   1400132a7:	mov    rbx,rcx
   1400132aa:	cmp    rcx,0xffffffffffffffe0
   1400132ae:	ja     0x14001332c
   1400132b0:	mov    edi,0x1
   1400132b5:	test   rcx,rcx
   1400132b8:	cmovne rdi,rcx
   1400132bc:	mov    rcx,QWORD PTR [rip+0x4277d]        # 0x140055a40
   1400132c3:	test   rcx,rcx
   1400132c6:	jne    0x1400132e8
   1400132c8:	call   0x14001c434
   1400132cd:	mov    ecx,0x1e
   1400132d2:	call   0x14001c1d4
   1400132d7:	mov    ecx,0xff
   1400132dc:	call   0x140013908
   1400132e1:	mov    rcx,QWORD PTR [rip+0x42758]        # 0x140055a40
   1400132e8:	mov    r8,rdi
   1400132eb:	xor    edx,edx
   1400132ed:	call   QWORD PTR [rip+0x1bf5d]        # 0x14002f250
   1400132f3:	mov    rsi,rax
   1400132f6:	test   rax,rax
   1400132f9:	jne    0x140013327
   1400132fb:	cmp    DWORD PTR [rip+0x4274f],eax        # 0x140055a50
   140013301:	je     0x140013311
   140013303:	mov    rcx,rbx
   140013306:	call   0x14001c174
   14001330b:	test   eax,eax
   14001330d:	je     0x14001331c
   14001330f:	jmp    0x1400132bc
   140013311:	call   0x14001583c
   140013316:	mov    DWORD PTR [rax],0xc
   14001331c:	call   0x14001583c
   140013321:	mov    DWORD PTR [rax],0xc
   140013327:	mov    rax,rsi
   14001332a:	jmp    0x14001333e
   14001332c:	call   0x14001c174
   140013331:	call   0x14001583c
   140013336:	mov    DWORD PTR [rax],0xc
   14001333c:	xor    eax,eax
   14001333e:	mov    rbx,QWORD PTR [rsp+0x30]
   140013343:	mov    rsi,QWORD PTR [rsp+0x38]
   140013348:	add    rsp,0x20
   14001334c:	pop    rdi
   14001334d:	ret    
   14001334e:	int3   
   14001334f:	int3   
   140013350:	mov    WORD PTR [rsp+0x8],cx
   140013355:	push   rbx
   140013356:	sub    rsp,0x20
   14001335a:	mov    eax,0xffff
   14001335f:	movzx  ebx,dx
   140013362:	cmp    cx,ax
   140013365:	jne    0x14001336b
   140013367:	xor    eax,eax
   140013369:	jmp    0x1400133b0
   14001336b:	mov    eax,0x100
   140013370:	cmp    cx,ax
   140013373:	jae    0x140013385
   140013375:	mov    rax,QWORD PTR [rip+0x2d62c]        # 0x1400409a8
   14001337c:	movzx  ecx,cx
   14001337f:	movzx  eax,WORD PTR [rax+rcx*2]
   140013383:	jmp    0x1400133ab
   140013385:	mov    ecx,0x1
   14001338a:	lea    r9,[rsp+0x40]
   14001338f:	lea    rdx,[rsp+0x30]
   140013394:	mov    r8d,ecx
   140013397:	call   QWORD PTR [rip+0x1bebb]        # 0x14002f258
   14001339d:	xor    ecx,ecx
   14001339f:	test   eax,eax
   1400133a1:	je     0x1400133a8
   1400133a3:	movzx  ecx,WORD PTR [rsp+0x40]
   1400133a8:	movzx  eax,cx
   1400133ab:	movzx  ecx,bx
   1400133ae:	and    eax,ecx
   1400133b0:	add    rsp,0x20
   1400133b4:	pop    rbx
   1400133b5:	ret    
   1400133b6:	int3   
   1400133b7:	int3   
   1400133b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400133bd:	mov    QWORD PTR [rsp+0x10],rsi
   1400133c2:	push   rdi
   1400133c3:	sub    rsp,0x20
   1400133c7:	cmp    DWORD PTR [rip+0x44476],0x0        # 0x140057844
   1400133ce:	mov    rbx,QWORD PTR [rip+0x41fa3]        # 0x140055378
   1400133d5:	mov    rsi,rcx
   1400133d8:	je     0x140013461
   1400133de:	test   rbx,rbx
   1400133e1:	jne    0x140013416
   1400133e3:	cmp    QWORD PTR [rip+0x41f7e],rbx        # 0x140055368
   1400133ea:	je     0x140013461
   1400133ec:	call   0x14001c834
   1400133f1:	mov    QWORD PTR [rip+0x41fe0],rax        # 0x1400553d8
   1400133f8:	call   0x14001c6fc
   1400133fd:	test   eax,eax
   1400133ff:	jns    0x14001340a
   140013401:	call   0x14001c634
   140013406:	test   eax,eax
   140013408:	jne    0x140013461
   14001340a:	mov    rbx,QWORD PTR [rip+0x41f67]        # 0x140055378
   140013411:	test   rbx,rbx
   140013414:	je     0x140013461
   140013416:	test   rsi,rsi
   140013419:	je     0x140013461
   14001341b:	mov    rcx,rsi
   14001341e:	call   0x1400192e4
   140013423:	mov    rdi,rax
   140013426:	mov    rcx,QWORD PTR [rbx]
   140013429:	test   rcx,rcx
   14001342c:	je     0x140013461
   14001342e:	call   0x1400192e4
   140013433:	cmp    rax,rdi
   140013436:	jbe    0x140013451
   140013438:	mov    rcx,QWORD PTR [rbx]
   14001343b:	cmp    WORD PTR [rcx+rdi*2],0x3d
   140013440:	jne    0x140013451
   140013442:	mov    r8,rdi
   140013445:	mov    rdx,rsi
   140013448:	call   0x14001c5a0
   14001344d:	test   eax,eax
   14001344f:	je     0x140013457
   140013451:	add    rbx,0x8
   140013455:	jmp    0x140013426
   140013457:	mov    rax,QWORD PTR [rbx]
   14001345a:	lea    rax,[rax+rdi*2+0x2]
   14001345f:	jmp    0x140013463
   140013461:	xor    eax,eax
   140013463:	mov    rbx,QWORD PTR [rsp+0x30]
   140013468:	mov    rsi,QWORD PTR [rsp+0x38]
   14001346d:	add    rsp,0x20
   140013471:	pop    rdi
   140013472:	ret    
   140013473:	int3   
   140013474:	rex push rbx
   140013476:	sub    rsp,0x20
   14001347a:	mov    rbx,rcx
   14001347d:	xor    eax,eax
   14001347f:	test   rcx,rcx
   140013482:	setne  al
   140013485:	test   eax,eax
   140013487:	jne    0x14001349d
   140013489:	call   0x14001583c
   14001348e:	mov    DWORD PTR [rax],0x16
   140013494:	call   0x140019f74
   140013499:	xor    eax,eax
   14001349b:	jmp    0x1400134d9
   14001349d:	mov    edx,0x7fff
   1400134a2:	call   0x14001cd0c
   1400134a7:	xor    ecx,ecx
   1400134a9:	cmp    rax,0x7fff
   1400134af:	setb   cl
   1400134b2:	test   ecx,ecx
   1400134b4:	je     0x140013489
   1400134b6:	mov    ecx,0x7
   1400134bb:	call   0x14001ccc8
   1400134c0:	nop
   1400134c1:	mov    rcx,rbx
   1400134c4:	call   0x1400133b8
   1400134c9:	mov    rbx,rax
   1400134cc:	mov    ecx,0x7
   1400134d1:	call   0x14001cbc8
   1400134d6:	mov    rax,rbx
   1400134d9:	add    rsp,0x20
   1400134dd:	pop    rbx
   1400134de:	ret    
   1400134df:	int3   
   1400134e0:	mov    rax,rsp
   1400134e3:	mov    QWORD PTR [rax+0x8],rbx
   1400134e7:	mov    QWORD PTR [rax+0x10],rsi
   1400134eb:	mov    QWORD PTR [rax+0x18],rdi
   1400134ef:	mov    QWORD PTR [rax+0x20],r12
   1400134f3:	push   r13
   1400134f5:	sub    rsp,0x30
   1400134f9:	mov    r12,r8
   1400134fc:	mov    rdi,rdx
   1400134ff:	mov    rsi,rcx
   140013502:	mov    ecx,0x7
   140013507:	call   0x14001ccc8
   14001350c:	nop
   14001350d:	xor    ebx,ebx
   14001350f:	mov    eax,ebx
   140013511:	test   rsi,rsi
   140013514:	setne  al
   140013517:	test   eax,eax
   140013519:	jne    0x14001352e
   14001351b:	call   0x14001583c
   140013520:	mov    ebx,0x16
   140013525:	mov    DWORD PTR [rax],ebx
   140013527:	call   0x140019f74
   14001352c:	jmp    0x1400135a4
   14001352e:	mov    QWORD PTR [rsi],rbx
   140013531:	test   rdi,rdi
   140013534:	je     0x140013539
   140013536:	mov    QWORD PTR [rdi],rbx
   140013539:	mov    eax,ebx
   14001353b:	test   r12,r12
   14001353e:	setne  al
   140013541:	test   eax,eax
   140013543:	je     0x14001351b
   140013545:	mov    rcx,r12
   140013548:	call   0x1400133b8
   14001354d:	mov    r13,rax
   140013550:	test   rax,rax
   140013553:	je     0x1400135a4
   140013555:	mov    rcx,rax
   140013558:	call   0x1400192e4
   14001355d:	lea    r12,[rax+0x1]
   140013561:	mov    edx,0x2
   140013566:	mov    rcx,r12
   140013569:	call   0x140012bd4
   14001356e:	mov    QWORD PTR [rsi],rax
   140013571:	test   rax,rax
   140013574:	jne    0x14001358a
   140013576:	call   0x14001583c
   14001357b:	mov    DWORD PTR [rax],0xc
   140013581:	call   0x14001583c
   140013586:	mov    ebx,DWORD PTR [rax]
   140013588:	jmp    0x1400135a4
   14001358a:	mov    r8,r13
   14001358d:	mov    rdx,r12
   140013590:	mov    rcx,rax
   140013593:	call   0x140016c68
   140013598:	test   eax,eax
   14001359a:	jne    0x1400135b2
   14001359c:	test   rdi,rdi
   14001359f:	je     0x1400135a4
   1400135a1:	mov    QWORD PTR [rdi],r12
   1400135a4:	mov    ecx,0x7
   1400135a9:	call   0x14001cbc8
   1400135ae:	mov    eax,ebx
   1400135b0:	jmp    0x1400135c7
   1400135b2:	mov    QWORD PTR [rsp+0x20],rbx
   1400135b7:	xor    r9d,r9d
   1400135ba:	xor    r8d,r8d
   1400135bd:	xor    edx,edx
   1400135bf:	xor    ecx,ecx
   1400135c1:	call   0x140019ed0
   1400135c6:	nop
   1400135c7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400135cc:	mov    rsi,QWORD PTR [rsp+0x48]
   1400135d1:	mov    rdi,QWORD PTR [rsp+0x50]
   1400135d6:	mov    r12,QWORD PTR [rsp+0x58]
   1400135db:	add    rsp,0x30
   1400135df:	pop    r13
   1400135e1:	ret    
   1400135e2:	int3   
   1400135e3:	int3   
   1400135e4:	rex push rbx
   1400135e6:	sub    rsp,0x20
   1400135ea:	xor    ebx,ebx
   1400135ec:	mov    r11,r8
   1400135ef:	mov    r10,rdx
   1400135f2:	test   r9,r9
   1400135f5:	jne    0x140013605
   1400135f7:	test   rcx,rcx
   1400135fa:	jne    0x14001360a
   1400135fc:	test   rdx,rdx
   1400135ff:	jne    0x14001361c
   140013601:	xor    eax,eax
   140013603:	jmp    0x14001362f
   140013605:	test   rcx,rcx
   140013608:	je     0x14001361c
   14001360a:	test   rdx,rdx
   14001360d:	je     0x14001361c
   14001360f:	test   r9,r9
   140013612:	je     0x140013635
   140013614:	test   r8,r8
   140013617:	jne    0x140013635
   140013619:	mov    WORD PTR [rcx],bx
   14001361c:	call   0x14001583c
   140013621:	mov    ebx,0x16
   140013626:	mov    DWORD PTR [rax],ebx
   140013628:	call   0x140019f74
   14001362d:	mov    eax,ebx
   14001362f:	add    rsp,0x20
   140013633:	pop    rbx
   140013634:	ret    
   140013635:	mov    r8,rcx
   140013638:	cmp    WORD PTR [r8],bx
   14001363c:	je     0x140013647
   14001363e:	add    r8,0x2
   140013642:	dec    rdx
   140013645:	jne    0x140013638
   140013647:	test   rdx,rdx
   14001364a:	je     0x140013619
   14001364c:	cmp    r9,0xffffffffffffffff
   140013650:	jne    0x14001366e
   140013652:	sub    r8,r11
   140013655:	movzx  eax,WORD PTR [r11]
   140013659:	mov    WORD PTR [r8+r11*1],ax
   14001365e:	add    r11,0x2
   140013662:	test   ax,ax
   140013665:	je     0x14001369b
   140013667:	dec    rdx
   14001366a:	jne    0x140013655
   14001366c:	jmp    0x14001369b
   14001366e:	test   r9,r9
   140013671:	je     0x140013697
   140013673:	sub    r11,r8
   140013676:	movzx  eax,WORD PTR [r11+r8*1]
   14001367b:	mov    WORD PTR [r8],ax
   14001367f:	add    r8,0x2
   140013683:	test   ax,ax
   140013686:	je     0x140013692
   140013688:	dec    rdx
   14001368b:	je     0x140013692
   14001368d:	dec    r9
   140013690:	jne    0x140013676
   140013692:	test   r9,r9
   140013695:	jne    0x14001369b
   140013697:	mov    WORD PTR [r8],bx
   14001369b:	test   rdx,rdx
   14001369e:	jne    0x140013601
   1400136a4:	cmp    r9,0xffffffffffffffff
   1400136a8:	jne    0x1400136b8
   1400136aa:	mov    WORD PTR [rcx+r10*2-0x2],bx
   1400136b0:	lea    eax,[rdx+0x50]
   1400136b3:	jmp    0x14001362f
   1400136b8:	mov    WORD PTR [rcx],bx
   1400136bb:	call   0x14001583c
   1400136c0:	mov    ebx,0x22
   1400136c5:	jmp    0x140013626
   1400136ca:	int3   
   1400136cb:	int3   
   1400136cc:	mov    rax,rsp
   1400136cf:	mov    QWORD PTR [rax+0x8],rcx
   1400136d3:	mov    QWORD PTR [rax+0x10],rdx
   1400136d7:	mov    QWORD PTR [rax+0x18],r8
   1400136db:	mov    QWORD PTR [rax+0x20],r9
   1400136df:	push   rbx
   1400136e0:	push   rdi
   1400136e1:	sub    rsp,0x28
   1400136e5:	xor    eax,eax
   1400136e7:	test   rcx,rcx
   1400136ea:	setne  al
   1400136ed:	test   eax,eax
   1400136ef:	jne    0x140013706
   1400136f1:	call   0x14001583c
   1400136f6:	mov    DWORD PTR [rax],0x16
   1400136fc:	call   0x140019f74
   140013701:	or     eax,0xffffffff
   140013704:	jmp    0x140013770
   140013706:	lea    rdi,[rsp+0x48]
   14001370b:	call   0x140014c3c
   140013710:	lea    rdx,[rax+0x30]
   140013714:	mov    ecx,0x1
   140013719:	call   0x140014db0
   14001371e:	nop
   14001371f:	call   0x140014c3c
   140013724:	lea    rcx,[rax+0x30]
   140013728:	call   0x14001cd2c
   14001372d:	mov    ebx,eax
   14001372f:	call   0x140014c3c
   140013734:	mov    r9,rdi
   140013737:	xor    r8d,r8d
   14001373a:	mov    rdx,QWORD PTR [rsp+0x40]
   14001373f:	lea    rcx,[rax+0x30]
   140013743:	call   0x14001cf18
   140013748:	mov    edi,eax
   14001374a:	call   0x140014c3c
   14001374f:	lea    rdx,[rax+0x30]
   140013753:	mov    ecx,ebx
   140013755:	call   0x14001ce00
   14001375a:	nop
   14001375b:	call   0x140014c3c
   140013760:	lea    rdx,[rax+0x30]
   140013764:	mov    ecx,0x1
   140013769:	call   0x140014e30
   14001376e:	mov    eax,edi
   140013770:	add    rsp,0x28
   140013774:	pop    rdi
   140013775:	pop    rbx
   140013776:	ret    
   140013777:	int3   
   140013778:	mov    rcx,QWORD PTR [rip+0x2c1b1]        # 0x14003f930
   14001377f:	xor    eax,eax
   140013781:	or     rcx,0x1
   140013785:	cmp    QWORD PTR [rip+0x41bbc],rcx        # 0x140055348
   14001378c:	sete   al
   14001378f:	ret    
   140013790:	test   r8,r8
   140013793:	jne    0x1400137ad
   140013795:	xor    eax,eax
   140013797:	ret    
   140013798:	movzx  eax,WORD PTR [rcx]
   14001379b:	test   ax,ax
   14001379e:	je     0x1400137b2
   1400137a0:	cmp    ax,WORD PTR [rdx]
   1400137a3:	jne    0x1400137b2
   1400137a5:	add    rcx,0x2
   1400137a9:	add    rdx,0x2
   1400137ad:	dec    r8
   1400137b0:	jne    0x140013798
   1400137b2:	movzx  eax,WORD PTR [rcx]
   1400137b5:	movzx  ecx,WORD PTR [rdx]
   1400137b8:	sub    eax,ecx
   1400137ba:	ret    
   1400137bb:	int3   
   1400137bc:	mov    QWORD PTR [rsp+0x8],rbx
   1400137c1:	mov    QWORD PTR [rsp+0x10],rsi
   1400137c6:	push   rdi
   1400137c7:	sub    rsp,0x20
   1400137cb:	cmp    DWORD PTR [rip+0x44072],0x0        # 0x140057844
   1400137d2:	mov    rbx,QWORD PTR [rip+0x41b8f]        # 0x140055368
   1400137d9:	mov    rsi,rcx
   1400137dc:	je     0x14001384b
   1400137de:	test   rbx,rbx
   1400137e1:	jne    0x140013801
   1400137e3:	cmp    QWORD PTR [rip+0x41b8e],rbx        # 0x140055378
   1400137ea:	je     0x14001384b
   1400137ec:	call   0x14001db88
   1400137f1:	test   eax,eax
   1400137f3:	jne    0x14001384b
   1400137f5:	mov    rbx,QWORD PTR [rip+0x41b6c]        # 0x140055368
   1400137fc:	test   rbx,rbx
   1400137ff:	je     0x14001384b
   140013801:	test   rsi,rsi
   140013804:	je     0x14001384b
   140013806:	mov    rcx,rsi
   140013809:	call   0x14001dae0
   14001380e:	mov    rdi,rax
   140013811:	mov    rcx,QWORD PTR [rbx]
   140013814:	test   rcx,rcx
   140013817:	je     0x14001384b
   140013819:	call   0x14001dae0
   14001381e:	cmp    rax,rdi
   140013821:	jbe    0x14001383b
   140013823:	mov    rcx,QWORD PTR [rbx]
   140013826:	cmp    BYTE PTR [rcx+rdi*1],0x3d
   14001382a:	jne    0x14001383b
   14001382c:	mov    r8,rdi
   14001382f:	mov    rdx,rsi
   140013832:	call   0x14001dac8
   140013837:	test   eax,eax
   140013839:	je     0x140013841
   14001383b:	add    rbx,0x8
   14001383f:	jmp    0x140013811
   140013841:	mov    rax,QWORD PTR [rbx]
   140013844:	lea    rax,[rax+rdi*1+0x1]
   140013849:	jmp    0x14001384d
   14001384b:	xor    eax,eax
   14001384d:	mov    rbx,QWORD PTR [rsp+0x30]
   140013852:	mov    rsi,QWORD PTR [rsp+0x38]
   140013857:	add    rsp,0x20
   14001385b:	pop    rdi
   14001385c:	ret    
   14001385d:	int3   
   14001385e:	int3   
   14001385f:	int3   
   140013860:	rex push rbx
   140013862:	sub    rsp,0x20
   140013866:	mov    rbx,rcx
   140013869:	xor    eax,eax
   14001386b:	test   rcx,rcx
   14001386e:	setne  al
   140013871:	test   eax,eax
   140013873:	jne    0x140013889
   140013875:	call   0x14001583c
   14001387a:	mov    DWORD PTR [rax],0x16
   140013880:	call   0x140019f74
   140013885:	xor    eax,eax
   140013887:	jmp    0x1400138c5
   140013889:	mov    edx,0x7fff
   14001388e:	call   0x14001dce0
   140013893:	xor    ecx,ecx
   140013895:	cmp    rax,0x7fff
   14001389b:	setb   cl
   14001389e:	test   ecx,ecx
   1400138a0:	je     0x140013875
   1400138a2:	mov    ecx,0x7
   1400138a7:	call   0x14001ccc8
   1400138ac:	nop
   1400138ad:	mov    rcx,rbx
   1400138b0:	call   0x1400137bc
   1400138b5:	mov    rbx,rax
   1400138b8:	mov    ecx,0x7
   1400138bd:	call   0x14001cbc8
   1400138c2:	mov    rax,rbx
   1400138c5:	add    rsp,0x20
   1400138c9:	pop    rbx
   1400138ca:	ret    
   1400138cb:	int3   
   1400138cc:	rex push rbx
   1400138ce:	sub    rsp,0x20
   1400138d2:	mov    ebx,ecx
   1400138d4:	lea    rcx,[rip+0x1da25]        # 0x140031300
   1400138db:	call   QWORD PTR [rip+0x1b727]        # 0x14002f008
   1400138e1:	test   rax,rax
   1400138e4:	je     0x1400138ff
   1400138e6:	lea    rdx,[rip+0x1da03]        # 0x1400312f0
   1400138ed:	mov    rcx,rax
   1400138f0:	call   QWORD PTR [rip+0x1b722]        # 0x14002f018
   1400138f6:	test   rax,rax
   1400138f9:	je     0x1400138ff
   1400138fb:	mov    ecx,ebx
   1400138fd:	call   rax
   1400138ff:	add    rsp,0x20
   140013903:	pop    rbx
   140013904:	ret    
   140013905:	int3   
   140013906:	int3   
   140013907:	int3   
   140013908:	rex push rbx
   14001390a:	sub    rsp,0x20
   14001390e:	mov    ebx,ecx
   140013910:	call   0x1400138cc
   140013915:	mov    ecx,ebx
   140013917:	call   QWORD PTR [rip+0x1b943]        # 0x14002f260
   14001391d:	int3   
   14001391e:	int3   
   14001391f:	int3   
   140013920:	mov    ecx,0x8
   140013925:	jmp    0x14001ccc8
   14001392a:	int3   
   14001392b:	int3   
   14001392c:	mov    ecx,0x8
   140013931:	jmp    0x14001cbc8
   140013936:	int3   
   140013937:	int3   
   140013938:	rex push rbx
   14001393a:	sub    rsp,0x20
   14001393e:	call   0x14001aca4
   140013943:	mov    rcx,rax
   140013946:	mov    rbx,rax
   140013949:	call   0x14001c16c
   14001394e:	mov    rcx,rbx
   140013951:	call   0x140019d7c
   140013956:	mov    rcx,rbx
   140013959:	call   0x14001dfd4
   14001395e:	mov    rcx,rbx
   140013961:	call   0x14001dfcc
   140013966:	mov    rcx,rbx
   140013969:	call   0x14001dd68
   14001396e:	mov    rcx,rbx
   140013971:	add    rsp,0x20
   140013975:	pop    rbx
   140013976:	jmp    0x14001dd48
   14001397b:	int3   
   14001397c:	cmp    rcx,rdx
   14001397f:	jae    0x1400139ae
   140013981:	mov    QWORD PTR [rsp+0x8],rbx
   140013986:	push   rdi
   140013987:	sub    rsp,0x20
   14001398b:	mov    rdi,rdx
   14001398e:	mov    rbx,rcx
   140013991:	mov    rax,QWORD PTR [rbx]
   140013994:	test   rax,rax
   140013997:	je     0x14001399b
   140013999:	call   rax
   14001399b:	add    rbx,0x8
   14001399f:	cmp    rbx,rdi
   1400139a2:	jb     0x140013991
   1400139a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400139a9:	add    rsp,0x20
   1400139ad:	pop    rdi
   1400139ae:	ret    
   1400139af:	int3   
   1400139b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400139b5:	push   rdi
   1400139b6:	sub    rsp,0x20
   1400139ba:	xor    eax,eax
   1400139bc:	mov    rdi,rdx
   1400139bf:	mov    rbx,rcx
   1400139c2:	cmp    rcx,rdx
   1400139c5:	jae    0x1400139de
   1400139c7:	test   eax,eax
   1400139c9:	jne    0x1400139de
   1400139cb:	mov    rcx,QWORD PTR [rbx]
   1400139ce:	test   rcx,rcx
   1400139d1:	je     0x1400139d5
   1400139d3:	call   rcx
   1400139d5:	add    rbx,0x8
   1400139d9:	cmp    rbx,rdi
   1400139dc:	jb     0x1400139c7
   1400139de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400139e3:	add    rsp,0x20
   1400139e7:	pop    rdi
   1400139e8:	ret    
   1400139e9:	int3   
   1400139ea:	int3   
   1400139eb:	int3   
   1400139ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400139f1:	push   rdi
   1400139f2:	sub    rsp,0x20
   1400139f6:	cmp    QWORD PTR [rip+0x2023a],0x0        # 0x140033c38
   1400139fe:	mov    ebx,ecx
   140013a00:	je     0x140013a1a
   140013a02:	lea    rcx,[rip+0x2022f]        # 0x140033c38
   140013a09:	call   0x14001e270
   140013a0e:	test   eax,eax
   140013a10:	je     0x140013a1a
   140013a12:	mov    ecx,ebx
   140013a14:	call   QWORD PTR [rip+0x2021e]        # 0x140033c38
   140013a1a:	call   0x14001e1b4
   140013a1f:	lea    rdx,[rip+0x1baca]        # 0x14002f4f0
   140013a26:	lea    rcx,[rip+0x1ba9b]        # 0x14002f4c8
   140013a2d:	call   0x1400139b0
   140013a32:	test   eax,eax
   140013a34:	jne    0x140013a90
   140013a36:	lea    rcx,[rip+0xa73f]        # 0x14001e17c
   140013a3d:	call   0x14001e12c
   140013a42:	lea    rbx,[rip+0x1ba5f]        # 0x14002f4a8
   140013a49:	lea    rdi,[rip+0x1ba70]        # 0x14002f4c0
   140013a50:	jmp    0x140013a60
   140013a52:	mov    rax,QWORD PTR [rbx]
   140013a55:	test   rax,rax
   140013a58:	je     0x140013a5c
   140013a5a:	call   rax
   140013a5c:	add    rbx,0x8
   140013a60:	cmp    rbx,rdi
   140013a63:	jb     0x140013a52
   140013a65:	cmp    QWORD PTR [rip+0x43df3],0x0        # 0x140057860
   140013a6d:	je     0x140013a8e
   140013a6f:	lea    rcx,[rip+0x43dea]        # 0x140057860
   140013a76:	call   0x14001e270
   140013a7b:	test   eax,eax
   140013a7d:	je     0x140013a8e
   140013a7f:	xor    r8d,r8d
   140013a82:	xor    ecx,ecx
   140013a84:	lea    edx,[r8+0x2]
   140013a88:	call   QWORD PTR [rip+0x43dd2]        # 0x140057860
   140013a8e:	xor    eax,eax
   140013a90:	mov    rbx,QWORD PTR [rsp+0x30]
   140013a95:	add    rsp,0x20
   140013a99:	pop    rdi
   140013a9a:	ret    
   140013a9b:	int3   
   140013a9c:	mov    QWORD PTR [rsp+0x8],rbx
   140013aa1:	mov    QWORD PTR [rsp+0x10],rsi
   140013aa6:	mov    DWORD PTR [rsp+0x18],r8d
   140013aab:	push   rdi
   140013aac:	push   r12
   140013aae:	push   r13
   140013ab0:	push   r14
   140013ab2:	push   r15
   140013ab4:	sub    rsp,0x40
   140013ab8:	mov    r12d,r8d
   140013abb:	mov    ebx,edx
   140013abd:	mov    r15d,ecx
   140013ac0:	mov    ecx,0x8
   140013ac5:	call   0x14001ccc8
   140013aca:	nop
   140013acb:	cmp    DWORD PTR [rip+0x418ce],0x1        # 0x1400553a0
   140013ad2:	je     0x140013bd9
   140013ad8:	mov    DWORD PTR [rip+0x418ba],0x1        # 0x14005539c
   140013ae2:	mov    BYTE PTR [rip+0x418af],r12b        # 0x140055398
   140013ae9:	test   ebx,ebx
   140013aeb:	jne    0x140013bc5
   140013af1:	mov    rcx,QWORD PTR [rip+0x43d58]        # 0x140057850
   140013af8:	call   QWORD PTR [rip+0x1b76a]        # 0x14002f268
   140013afe:	mov    rsi,rax
   140013b01:	mov    QWORD PTR [rsp+0x30],rax
   140013b06:	test   rax,rax
   140013b09:	je     0x140013bb2
   140013b0f:	mov    rcx,QWORD PTR [rip+0x43d32]        # 0x140057848
   140013b16:	call   QWORD PTR [rip+0x1b74c]        # 0x14002f268
   140013b1c:	mov    rdi,rax
   140013b1f:	mov    QWORD PTR [rsp+0x20],rax
   140013b24:	mov    r14,rsi
   140013b27:	mov    QWORD PTR [rsp+0x28],rsi
   140013b2c:	mov    r13,rax
   140013b2f:	mov    QWORD PTR [rsp+0x38],rax
   140013b34:	sub    rdi,0x8
   140013b38:	mov    QWORD PTR [rsp+0x20],rdi
   140013b3d:	cmp    rdi,rsi
   140013b40:	jb     0x140013bb2
   140013b42:	call   0x14001aca4
   140013b47:	cmp    QWORD PTR [rdi],rax
   140013b4a:	jne    0x140013b4e
   140013b4c:	jmp    0x140013b34
   140013b4e:	cmp    rdi,rsi
   140013b51:	jb     0x140013bb2
   140013b53:	mov    rcx,QWORD PTR [rdi]
   140013b56:	call   QWORD PTR [rip+0x1b70c]        # 0x14002f268
   140013b5c:	mov    rbx,rax
   140013b5f:	call   0x14001aca4
   140013b64:	mov    QWORD PTR [rdi],rax
   140013b67:	call   rbx
   140013b69:	mov    rcx,QWORD PTR [rip+0x43ce0]        # 0x140057850
   140013b70:	call   QWORD PTR [rip+0x1b6f2]        # 0x14002f268
   140013b76:	mov    rbx,rax
   140013b79:	mov    rcx,QWORD PTR [rip+0x43cc8]        # 0x140057848
   140013b80:	call   QWORD PTR [rip+0x1b6e2]        # 0x14002f268
   140013b86:	cmp    r14,rbx
   140013b89:	jne    0x140013b90
   140013b8b:	cmp    r13,rax
   140013b8e:	je     0x140013b4c
   140013b90:	mov    r14,rbx
   140013b93:	mov    QWORD PTR [rsp+0x28],rbx
   140013b98:	mov    rsi,rbx
   140013b9b:	mov    QWORD PTR [rsp+0x30],rbx
   140013ba0:	mov    r13,rax
   140013ba3:	mov    QWORD PTR [rsp+0x38],rax
   140013ba8:	mov    rdi,rax
   140013bab:	mov    QWORD PTR [rsp+0x20],rax
   140013bb0:	jmp    0x140013b4c
   140013bb2:	lea    rdx,[rip+0x1b95f]        # 0x14002f518
   140013bb9:	lea    rcx,[rip+0x1b938]        # 0x14002f4f8
   140013bc0:	call   0x14001397c
   140013bc5:	lea    rdx,[rip+0x1b95c]        # 0x14002f528
   140013bcc:	lea    rcx,[rip+0x1b94d]        # 0x14002f520
   140013bd3:	call   0x14001397c
   140013bd8:	nop
   140013bd9:	test   r12d,r12d
   140013bdc:	je     0x140013bed
   140013bde:	mov    ecx,0x8
   140013be3:	call   0x14001cbc8
   140013be8:	test   r12d,r12d
   140013beb:	jne    0x140013c13
   140013bed:	mov    DWORD PTR [rip+0x417a9],0x1        # 0x1400553a0
   140013bf7:	mov    ecx,0x8
   140013bfc:	call   0x14001cbc8
   140013c01:	mov    ecx,r15d
   140013c04:	call   0x1400138cc
   140013c09:	mov    ecx,r15d
   140013c0c:	call   QWORD PTR [rip+0x1b64e]        # 0x14002f260
   140013c12:	int3   
   140013c13:	mov    rbx,QWORD PTR [rsp+0x70]
   140013c18:	mov    rsi,QWORD PTR [rsp+0x78]
   140013c1d:	add    rsp,0x40
   140013c21:	pop    r15
   140013c23:	pop    r14
   140013c25:	pop    r13
   140013c27:	pop    r12
   140013c29:	pop    rdi
   140013c2a:	ret    
   140013c2b:	int3   
   140013c2c:	xor    r8d,r8d
   140013c2f:	xor    edx,edx
   140013c31:	jmp    0x140013a9c
   140013c36:	int3   
   140013c37:	int3   
   140013c38:	xor    r8d,r8d
   140013c3b:	lea    edx,[r8+0x1]
   140013c3f:	jmp    0x140013a9c
   140013c44:	xor    edx,edx
   140013c46:	xor    ecx,ecx
   140013c48:	lea    r8d,[rdx+0x1]
   140013c4c:	jmp    0x140013a9c
   140013c51:	int3   
   140013c52:	int3   
   140013c53:	int3   
   140013c54:	mov    edx,0x1
   140013c59:	xor    ecx,ecx
   140013c5b:	mov    r8d,edx
   140013c5e:	jmp    0x140013a9c
   140013c63:	int3   
   140013c64:	rex push rbx
   140013c66:	sub    rsp,0x20
   140013c6a:	mov    ebx,ecx
   140013c6c:	call   0x14001c434
   140013c71:	mov    ecx,ebx
   140013c73:	call   0x14001c1d4
   140013c78:	xor    r8d,r8d
   140013c7b:	mov    ecx,0xff
   140013c80:	lea    edx,[r8+0x1]
   140013c84:	call   0x140013a9c
   140013c89:	int3   
   140013c8a:	int3   
   140013c8b:	int3   
   140013c8c:	xor    edx,edx
   140013c8e:	lea    r8d,[rdx+0xa]
   140013c92:	jmp    0x14001e49c
   140013c97:	int3   
   140013c98:	mov    QWORD PTR [rsp+0x10],rdx
   140013c9d:	mov    QWORD PTR [rsp+0x18],r8
   140013ca2:	mov    QWORD PTR [rsp+0x20],r9
   140013ca7:	push   rbp
   140013ca8:	push   rbx
   140013ca9:	push   rdi
   140013caa:	mov    rbp,rsp
   140013cad:	sub    rsp,0x50
   140013cb1:	and    QWORD PTR [rbp-0x30],0x0
   140013cb6:	mov    rdi,rdx
   140013cb9:	xor    edx,edx
   140013cbb:	mov    rbx,rcx
   140013cbe:	lea    rcx,[rbp-0x28]
   140013cc2:	lea    r8d,[rdx+0x28]
   140013cc6:	call   0x140012fb0
   140013ccb:	test   rdi,rdi
   140013cce:	jne    0x140013ce5
   140013cd0:	call   0x14001583c
   140013cd5:	mov    DWORD PTR [rax],0x16
   140013cdb:	call   0x140019f74
   140013ce0:	or     eax,0xffffffff
   140013ce3:	jmp    0x140013d54
   140013ce5:	test   rbx,rbx
   140013ce8:	je     0x140013cd0
   140013cea:	lea    r9,[rbp+0x30]
   140013cee:	lea    rcx,[rbp-0x30]
   140013cf2:	xor    r8d,r8d
   140013cf5:	mov    rdx,rdi
   140013cf8:	mov    DWORD PTR [rbp-0x18],0x42
   140013cff:	mov    QWORD PTR [rbp-0x20],rbx
   140013d03:	mov    QWORD PTR [rbp-0x30],rbx
   140013d07:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140013d0e:	call   0x14001e6d0
   140013d13:	dec    DWORD PTR [rbp-0x28]
   140013d16:	mov    ebx,eax
   140013d18:	js     0x140013d2e
   140013d1a:	mov    rcx,QWORD PTR [rbp-0x30]
   140013d1e:	mov    BYTE PTR [rcx],0x0
   140013d21:	mov    rcx,QWORD PTR [rbp-0x30]
   140013d25:	inc    rcx
   140013d28:	mov    QWORD PTR [rbp-0x30],rcx
   140013d2c:	jmp    0x140013d3d
   140013d2e:	lea    rdx,[rbp-0x30]
   140013d32:	xor    ecx,ecx
   140013d34:	call   0x14001e4a4
   140013d39:	mov    rcx,QWORD PTR [rbp-0x30]
   140013d3d:	dec    DWORD PTR [rbp-0x28]
   140013d40:	js     0x140013d47
   140013d42:	mov    BYTE PTR [rcx],0x0
   140013d45:	jmp    0x140013d52
   140013d47:	lea    rdx,[rbp-0x30]
   140013d4b:	xor    ecx,ecx
   140013d4d:	call   0x14001e4a4
   140013d52:	mov    eax,ebx
   140013d54:	add    rsp,0x50
   140013d58:	pop    rdi
   140013d59:	pop    rbx
   140013d5a:	pop    rbp
   140013d5b:	ret    
   140013d5c:	mov    r11,rsp
   140013d5f:	mov    QWORD PTR [r11+0x18],r8
   140013d63:	mov    QWORD PTR [r11+0x20],r9
   140013d67:	sub    rsp,0x38
   140013d6b:	lea    rax,[r11+0x20]
   140013d6f:	xor    r9d,r9d
   140013d72:	mov    QWORD PTR [r11-0x18],rax
   140013d76:	call   0x140018c00
   140013d7b:	add    rsp,0x38
   140013d7f:	ret    
   140013d80:	mov    r11,rsp
   140013d83:	mov    QWORD PTR [r11+0x20],r9
   140013d87:	sub    rsp,0x38
   140013d8b:	lea    rax,[r11+0x28]
   140013d8f:	mov    QWORD PTR [r11-0x10],rax
   140013d93:	and    QWORD PTR [r11-0x18],0x0
   140013d98:	call   0x140018c7c
   140013d9d:	add    rsp,0x38
   140013da1:	ret    
   140013da2:	int3   
   140013da3:	int3   
   140013da4:	rex push rbx
   140013da6:	sub    rsp,0x20
   140013daa:	xor    ebx,ebx
   140013dac:	mov    r10,r8
   140013daf:	test   r9,r9
   140013db2:	jne    0x140013dc2
   140013db4:	test   rcx,rcx
   140013db7:	jne    0x140013dc7
   140013db9:	test   rdx,rdx
   140013dbc:	jne    0x140013dde
   140013dbe:	xor    eax,eax
   140013dc0:	jmp    0x140013df1
   140013dc2:	test   rcx,rcx
   140013dc5:	je     0x140013dde
   140013dc7:	test   rdx,rdx
   140013dca:	je     0x140013dde
   140013dcc:	test   r9,r9
   140013dcf:	jne    0x140013dd6
   140013dd1:	mov    WORD PTR [rcx],bx
   140013dd4:	jmp    0x140013dbe
   140013dd6:	test   r8,r8
   140013dd9:	jne    0x140013df7
   140013ddb:	mov    WORD PTR [rcx],bx
   140013dde:	call   0x14001583c
   140013de3:	mov    ebx,0x16
   140013de8:	mov    DWORD PTR [rax],ebx
   140013dea:	call   0x140019f74
   140013def:	mov    eax,ebx
   140013df1:	add    rsp,0x20
   140013df5:	pop    rbx
   140013df6:	ret    
   140013df7:	mov    r11,rcx
   140013dfa:	mov    r8,rdx
   140013dfd:	cmp    r9,0xffffffffffffffff
   140013e01:	jne    0x140013e1f
   140013e03:	sub    r11,r10
   140013e06:	movzx  eax,WORD PTR [r10]
   140013e0a:	mov    WORD PTR [r11+r10*1],ax
   140013e0f:	add    r10,0x2
   140013e13:	test   ax,ax
   140013e16:	je     0x140013e47
   140013e18:	dec    r8
   140013e1b:	jne    0x140013e06
   140013e1d:	jmp    0x140013e47
   140013e1f:	sub    r10,rcx
   140013e22:	movzx  eax,WORD PTR [r10+r11*1]
   140013e27:	mov    WORD PTR [r11],ax
   140013e2b:	add    r11,0x2
   140013e2f:	test   ax,ax
   140013e32:	je     0x140013e3e
   140013e34:	dec    r8
   140013e37:	je     0x140013e3e
   140013e39:	dec    r9
   140013e3c:	jne    0x140013e22
   140013e3e:	test   r9,r9
   140013e41:	jne    0x140013e47
   140013e43:	mov    WORD PTR [r11],bx
   140013e47:	test   r8,r8
   140013e4a:	jne    0x140013dbe
   140013e50:	cmp    r9,0xffffffffffffffff
   140013e54:	jne    0x140013e61
   140013e56:	mov    WORD PTR [rcx+rdx*2-0x2],bx
   140013e5b:	lea    eax,[r8+0x50]
   140013e5f:	jmp    0x140013df1
   140013e61:	mov    WORD PTR [rcx],bx
   140013e64:	call   0x14001583c
   140013e69:	mov    ebx,0x22
   140013e6e:	jmp    0x140013de8
   140013e73:	int3   
   140013e74:	mov    rax,rsp
   140013e77:	mov    QWORD PTR [rax+0x8],rbx
   140013e7b:	mov    QWORD PTR [rax+0x10],rbp
   140013e7f:	mov    QWORD PTR [rax+0x18],rsi
   140013e83:	push   rdi
   140013e84:	sub    rsp,0x50
   140013e88:	and    QWORD PTR [rax-0x38],0x0
   140013e8d:	mov    rbx,rdx
   140013e90:	xor    edx,edx
   140013e92:	mov    rdi,r8
   140013e95:	mov    rbp,rcx
   140013e98:	lea    r8d,[rdx+0x28]
   140013e9c:	lea    rcx,[rax-0x30]
   140013ea0:	mov    rsi,r9
   140013ea3:	call   0x140012fb0
   140013ea8:	test   rbx,rbx
   140013eab:	jne    0x140013ec2
   140013ead:	call   0x14001583c
   140013eb2:	mov    DWORD PTR [rax],0x16
   140013eb8:	call   0x140019f74
   140013ebd:	or     eax,0xffffffff
   140013ec0:	jmp    0x140013f0e
   140013ec2:	test   rdi,rdi
   140013ec5:	je     0x140013ead
   140013ec7:	mov    rcx,rbx
   140013eca:	call   0x1400192e4
   140013ecf:	mov    DWORD PTR [rsp+0x38],0x49
   140013ed7:	mov    QWORD PTR [rsp+0x30],rbx
   140013edc:	mov    QWORD PTR [rsp+0x20],rbx
   140013ee1:	cmp    rax,0x3fffffff
   140013ee7:	jbe    0x140013ef3
   140013ee9:	mov    DWORD PTR [rsp+0x28],0x7fffffff
   140013ef1:	jmp    0x140013ef9
   140013ef3:	add    eax,eax
   140013ef5:	mov    DWORD PTR [rsp+0x28],eax
   140013ef9:	mov    r9,QWORD PTR [rsp+0x80]
   140013f01:	lea    rcx,[rsp+0x20]
   140013f06:	mov    r8,rsi
   140013f09:	mov    rdx,rdi
   140013f0c:	call   rbp
   140013f0e:	mov    rbx,QWORD PTR [rsp+0x60]
   140013f13:	mov    rbp,QWORD PTR [rsp+0x68]
   140013f18:	mov    rsi,QWORD PTR [rsp+0x70]
   140013f1d:	add    rsp,0x50
   140013f21:	pop    rdi
   140013f22:	ret    
   140013f23:	int3   
   140013f24:	mov    r11,rsp
   140013f27:	mov    QWORD PTR [r11+0x10],rdx
   140013f2b:	mov    QWORD PTR [r11+0x18],r8
   140013f2f:	mov    QWORD PTR [r11+0x20],r9
   140013f33:	sub    rsp,0x38
   140013f37:	mov    r8,rdx
   140013f3a:	lea    rax,[r11+0x18]
   140013f3e:	mov    rdx,rcx
   140013f41:	lea    rcx,[rip+0xb368]        # 0x14001f2b0
   140013f48:	xor    r9d,r9d
   140013f4b:	mov    QWORD PTR [r11-0x18],rax
   140013f4f:	call   0x140013e74
   140013f54:	add    rsp,0x38
   140013f58:	ret    
   140013f59:	int3   
   140013f5a:	int3   
   140013f5b:	int3   
   140013f5c:	mov    QWORD PTR [rsp+0x8],rbx
   140013f61:	mov    QWORD PTR [rsp+0x10],rsi
   140013f66:	push   rbp
   140013f67:	push   rdi
   140013f68:	push   r12
   140013f6a:	push   r13
   140013f6c:	push   r14
   140013f6e:	mov    rbp,rsp
   140013f71:	sub    rsp,0x40
   140013f75:	xor    r14d,r14d
   140013f78:	mov    rsi,rdx
   140013f7b:	mov    rdi,rcx
   140013f7e:	cmp    DWORD PTR [rip+0x438bf],r14d        # 0x140057844
   140013f85:	mov    QWORD PTR [rbp+0x48],r14
   140013f89:	jne    0x140013f93
   140013f8b:	or     eax,0xffffffff
   140013f8e:	jmp    0x1400141fe
   140013f93:	test   rcx,rcx
   140013f96:	jne    0x140013faa
   140013f98:	call   0x14001583c
   140013f9d:	mov    DWORD PTR [rax],0x16
   140013fa3:	call   0x140019f74
   140013fa8:	jmp    0x140013f8b
   140013faa:	test   rdx,rdx
   140013fad:	jne    0x140014016
   140013faf:	lea    r13d,[rdx+0x3d]
   140013fb3:	mov    edx,r13d
   140013fb6:	call   0x140014680
   140013fbb:	test   rax,rax
   140013fbe:	je     0x140013fe8
   140013fc0:	mov    rcx,rax
   140013fc3:	sub    rcx,rdi
   140013fc6:	and    rcx,0xfffffffffffffffe
   140013fca:	cmp    rcx,0xfffe
   140013fd1:	jge    0x140013f98
   140013fd3:	mov    ebx,0x7fff
   140013fd8:	lea    rcx,[rax+0x2]
   140013fdc:	mov    edx,ebx
   140013fde:	call   0x14001cd0c
   140013fe3:	cmp    rax,rbx
   140013fe6:	jae    0x140013f98
   140013fe8:	mov    rcx,rdi
   140013feb:	call   0x1400192e4
   140013ff0:	mov    edx,0x2
   140013ff5:	lea    rcx,[rax+0x1]
   140013ff9:	mov    rbx,rax
   140013ffc:	call   0x140020ca8
   140014001:	mov    QWORD PTR [rbp+0x48],rax
   140014005:	test   rax,rax
   140014008:	je     0x140013f8b
   14001400a:	mov    r8,rdi
   14001400d:	lea    rdx,[rbx+0x1]
   140014011:	mov    rcx,rax
   140014014:	jmp    0x140014091
   140014016:	mov    ebx,0x7fff
   14001401b:	mov    edx,ebx
   14001401d:	call   0x14001cd0c
   140014022:	mov    edx,ebx
   140014024:	mov    rcx,rsi
   140014027:	mov    r12,rax
   14001402a:	call   0x14001cd0c
   14001402f:	cmp    r12,rbx
   140014032:	jae    0x140013f98
   140014038:	cmp    rax,rbx
   14001403b:	jae    0x140013f98
   140014041:	lea    rbx,[rax+r12*1+0x2]
   140014046:	mov    edx,0x2
   14001404b:	mov    rcx,rbx
   14001404e:	call   0x140020ca8
   140014053:	mov    QWORD PTR [rbp+0x48],rax
   140014057:	test   rax,rax
   14001405a:	je     0x140013f8b
   140014060:	mov    r8,rdi
   140014063:	mov    rdx,rbx
   140014066:	mov    rcx,rax
   140014069:	call   0x140016c68
   14001406e:	mov    rax,QWORD PTR [rbp+0x48]
   140014072:	mov    r13d,0x3d
   140014078:	mov    WORD PTR [rax+r12*2],r13w
   14001407d:	mov    rax,QWORD PTR [rbp+0x48]
   140014081:	inc    r12
   140014084:	sub    rbx,r12
   140014087:	mov    r8,rsi
   14001408a:	lea    rcx,[rax+r12*2]
   14001408e:	mov    rdx,rbx
   140014091:	call   0x140016c68
   140014096:	lea    rcx,[rbp+0x48]
   14001409a:	mov    edx,0x1
   14001409f:	call   0x14002086c
   1400140a4:	test   eax,eax
   1400140a6:	je     0x1400140bf
   1400140a8:	mov    rcx,QWORD PTR [rbp+0x48]
   1400140ac:	test   rcx,rcx
   1400140af:	je     0x140013f8b
   1400140b5:	call   0x1400130a8
   1400140ba:	jmp    0x140013f8b
   1400140bf:	cmp    QWORD PTR [rip+0x412a2],r14        # 0x140055368
   1400140c6:	je     0x1400141fc
   1400140cc:	mov    QWORD PTR [rsp+0x38],r14
   1400140d1:	mov    QWORD PTR [rsp+0x30],r14
   1400140d6:	or     ebx,0xffffffff
   1400140d9:	mov    r8,rdi
   1400140dc:	xor    edx,edx
   1400140de:	xor    ecx,ecx
   1400140e0:	mov    r9d,ebx
   1400140e3:	mov    DWORD PTR [rsp+0x28],r14d
   1400140e8:	mov    QWORD PTR [rbp+0x40],r14
   1400140ec:	mov    QWORD PTR [rsp+0x20],r14
   1400140f1:	call   QWORD PTR [rip+0x1b139]        # 0x14002f230
   1400140f7:	mov    r12d,eax
   1400140fa:	test   eax,eax
   1400140fc:	jne    0x140014110
   1400140fe:	call   0x14001583c
   140014103:	mov    DWORD PTR [rax],0x2a
   140014109:	mov    eax,ebx
   14001410b:	jmp    0x1400141fe
   140014110:	test   rsi,rsi
   140014113:	je     0x140014142
   140014115:	mov    QWORD PTR [rsp+0x38],r14
   14001411a:	mov    QWORD PTR [rsp+0x30],r14
   14001411f:	mov    r9d,ebx
   140014122:	mov    r8,rsi
   140014125:	xor    edx,edx
   140014127:	xor    ecx,ecx
   140014129:	mov    DWORD PTR [rsp+0x28],r14d
   14001412e:	mov    QWORD PTR [rsp+0x20],r14
   140014133:	call   QWORD PTR [rip+0x1b0f7]        # 0x14002f230
   140014139:	test   eax,eax
   14001413b:	je     0x1400140fe
   14001413d:	lea    r12d,[r12+rax*1+0x1]
   140014142:	movsxd rcx,r12d
   140014145:	mov    edx,0x1
   14001414a:	call   0x140020ca8
   14001414f:	mov    QWORD PTR [rbp+0x40],rax
   140014153:	test   rax,rax
   140014156:	je     0x140014109
   140014158:	mov    QWORD PTR [rsp+0x38],r14
   14001415d:	mov    QWORD PTR [rsp+0x30],r14
   140014162:	mov    r9d,ebx
   140014165:	mov    r8,rdi
   140014168:	xor    edx,edx
   14001416a:	xor    ecx,ecx
   14001416c:	mov    DWORD PTR [rsp+0x28],r12d
   140014171:	mov    QWORD PTR [rsp+0x20],rax
   140014176:	call   QWORD PTR [rip+0x1b0b4]        # 0x14002f230
   14001417c:	test   eax,eax
   14001417e:	jne    0x14001418e
   140014180:	mov    rcx,QWORD PTR [rbp+0x40]
   140014184:	call   0x1400130a8
   140014189:	jmp    0x1400140fe
   14001418e:	test   rsi,rsi
   140014191:	je     0x1400141d6
   140014193:	mov    rcx,QWORD PTR [rbp+0x40]
   140014197:	call   0x14001dae0
   14001419c:	mov    rcx,QWORD PTR [rbp+0x40]
   1400141a0:	mov    QWORD PTR [rsp+0x38],r14
   1400141a5:	mov    BYTE PTR [rax+rcx*1],r13b
   1400141a9:	inc    rax
   1400141ac:	mov    QWORD PTR [rsp+0x30],r14
   1400141b1:	sub    r12d,eax
   1400141b4:	add    rax,QWORD PTR [rbp+0x40]
   1400141b8:	mov    r9d,ebx
   1400141bb:	mov    r8,rsi
   1400141be:	xor    edx,edx
   1400141c0:	xor    ecx,ecx
   1400141c2:	mov    DWORD PTR [rsp+0x28],r12d
   1400141c7:	mov    QWORD PTR [rsp+0x20],rax
   1400141cc:	call   QWORD PTR [rip+0x1b05e]        # 0x14002f230
   1400141d2:	test   eax,eax
   1400141d4:	je     0x140014180
   1400141d6:	lea    rcx,[rbp+0x40]
   1400141da:	xor    edx,edx
   1400141dc:	call   0x1400204d0
   1400141e1:	test   eax,eax
   1400141e3:	je     0x1400141fc
   1400141e5:	mov    rcx,QWORD PTR [rbp+0x40]
   1400141e9:	test   rcx,rcx
   1400141ec:	je     0x140014109
   1400141f2:	call   0x1400130a8
   1400141f7:	jmp    0x140014109
   1400141fc:	xor    eax,eax
   1400141fe:	mov    rbx,QWORD PTR [rsp+0x70]
   140014203:	mov    rsi,QWORD PTR [rsp+0x78]
   140014208:	add    rsp,0x40
   14001420c:	pop    r14
   14001420e:	pop    r13
   140014210:	pop    r12
   140014212:	pop    rdi
   140014213:	pop    rbp
   140014214:	ret    
   140014215:	int3   
   140014216:	int3   
   140014217:	int3   
   140014218:	rex push rbx
   14001421a:	sub    rsp,0x20
   14001421e:	mov    rbx,rcx
   140014221:	mov    ecx,0x7
   140014226:	call   0x14001ccc8
   14001422b:	nop
   14001422c:	xor    edx,edx
   14001422e:	mov    rcx,rbx
   140014231:	call   0x140013f5c
   140014236:	mov    ebx,eax
   140014238:	mov    ecx,0x7
   14001423d:	call   0x14001cbc8
   140014242:	mov    eax,ebx
   140014244:	add    rsp,0x20
   140014248:	pop    rbx
   140014249:	ret    
   14001424a:	int3   
   14001424b:	int3   
   14001424c:	mov    QWORD PTR [rsp+0x8],rbx
   140014251:	mov    QWORD PTR [rsp+0x10],rsi
   140014256:	mov    QWORD PTR [rsp+0x18],rdi
   14001425b:	push   rbp
   14001425c:	push   r12
   14001425e:	push   r13
   140014260:	push   r14
   140014262:	push   r15
   140014264:	mov    rbp,rsp
   140014267:	sub    rsp,0x50
   14001426b:	xor    r15d,r15d
   14001426e:	mov    rsi,r8
   140014271:	mov    r13,rdx
   140014274:	mov    rdi,rcx
   140014277:	mov    ebx,r15d
   14001427a:	test   rcx,rcx
   14001427d:	je     0x14001428f
   14001427f:	test   r8,r8
   140014282:	jne    0x14001428b
   140014284:	xor    eax,eax
   140014286:	jmp    0x14001441b
   14001428b:	mov    WORD PTR [rcx],r15w
   14001428f:	test   rdx,rdx
   140014292:	jne    0x1400142ad
   140014294:	call   0x14001583c
   140014299:	mov    DWORD PTR [rax],0x16
   14001429f:	call   0x140019f74
   1400142a4:	or     rax,0xffffffffffffffff
   1400142a8:	jmp    0x14001441b
   1400142ad:	lea    rcx,[rbp-0x20]
   1400142b1:	mov    rdx,r9
   1400142b4:	call   0x140012690
   1400142b9:	mov    rax,QWORD PTR [rbp-0x20]
   1400142bd:	test   rdi,rdi
   1400142c0:	je     0x1400143c0
   1400142c6:	cmp    DWORD PTR [rax+0x14],r15d
   1400142ca:	jne    0x140014317
   1400142cc:	test   rsi,rsi
   1400142cf:	je     0x1400142eb
   1400142d1:	movzx  eax,BYTE PTR [rbx+r13*1]
   1400142d6:	mov    WORD PTR [rdi],ax
   1400142d9:	cmp    BYTE PTR [rbx+r13*1],r15b
   1400142dd:	je     0x1400142fe
   1400142df:	inc    rbx
   1400142e2:	add    rdi,0x2
   1400142e6:	cmp    rbx,rsi
   1400142e9:	jb     0x1400142d1
   1400142eb:	cmp    BYTE PTR [rbp-0x8],r15b
   1400142ef:	je     0x14001430f
   1400142f1:	mov    rax,QWORD PTR [rbp-0x10]
   1400142f5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400142fc:	jmp    0x14001430f
   1400142fe:	cmp    BYTE PTR [rbp-0x8],r15b
   140014302:	je     0x14001430f
   140014304:	mov    rcx,QWORD PTR [rbp-0x10]
   140014308:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001430f:	mov    rax,rbx
   140014312:	jmp    0x14001441b
   140014317:	mov    ecx,DWORD PTR [rax+0x4]
   14001431a:	or     rbx,0xffffffffffffffff
   14001431e:	mov    r8,r13
   140014321:	lea    edx,[rbx+0xa]
   140014324:	mov    r9d,ebx
   140014327:	mov    DWORD PTR [rsp+0x28],esi
   14001432b:	mov    QWORD PTR [rsp+0x20],rdi
   140014330:	call   QWORD PTR [rip+0x1af3a]        # 0x14002f270
   140014336:	cdqe   
   140014338:	test   rax,rax
   14001433b:	jne    0x140014407
   140014341:	call   QWORD PTR [rip+0x1ad69]        # 0x14002f0b0
   140014347:	cmp    eax,0x7a
   14001434a:	je     0x14001435d
   14001434c:	call   0x14001583c
   140014351:	mov    DWORD PTR [rax],0x2a
   140014357:	mov    WORD PTR [rdi],r15w
   14001435b:	jmp    0x1400142eb
   14001435d:	mov    r14d,esi
   140014360:	mov    r12,r13
   140014363:	test   esi,esi
   140014365:	je     0x140014393
   140014367:	dec    r14d
   14001436a:	cmp    BYTE PTR [r12],r15b
   14001436e:	je     0x140014393
   140014370:	movzx  ecx,BYTE PTR [r12]
   140014375:	lea    rdx,[rbp-0x20]
   140014379:	call   0x140020e3c
   14001437e:	test   eax,eax
   140014380:	je     0x14001438b
   140014382:	inc    r12
   140014385:	cmp    BYTE PTR [r12],r15b
   140014389:	je     0x14001434c
   14001438b:	inc    r12
   14001438e:	test   r14d,r14d
   140014391:	jmp    0x140014365
   140014393:	mov    rax,QWORD PTR [rbp-0x20]
   140014397:	sub    r12d,r13d
   14001439a:	mov    r8,r13
   14001439d:	mov    ecx,DWORD PTR [rax+0x4]
   1400143a0:	mov    edx,0x1
   1400143a5:	mov    r9d,r12d
   1400143a8:	mov    DWORD PTR [rsp+0x28],esi
   1400143ac:	mov    QWORD PTR [rsp+0x20],rdi
   1400143b1:	call   QWORD PTR [rip+0x1aeb9]        # 0x14002f270
   1400143b7:	cdqe   
   1400143b9:	test   rax,rax
   1400143bc:	jne    0x14001440a
   1400143be:	jmp    0x14001434c
   1400143c0:	cmp    DWORD PTR [rax+0x14],r15d
   1400143c4:	jne    0x1400143d0
   1400143c6:	mov    rcx,r13
   1400143c9:	call   0x14001dae0
   1400143ce:	jmp    0x14001440a
   1400143d0:	mov    ecx,DWORD PTR [rax+0x4]
   1400143d3:	or     rbx,0xffffffffffffffff
   1400143d7:	mov    r8,r13
   1400143da:	lea    edx,[rbx+0xa]
   1400143dd:	mov    r9d,ebx
   1400143e0:	mov    DWORD PTR [rsp+0x28],r15d
   1400143e5:	mov    QWORD PTR [rsp+0x20],r15
   1400143ea:	call   QWORD PTR [rip+0x1ae80]        # 0x14002f270
   1400143f0:	cdqe   
   1400143f2:	test   rax,rax
   1400143f5:	jne    0x140014407
   1400143f7:	call   0x14001583c
   1400143fc:	mov    DWORD PTR [rax],0x2a
   140014402:	jmp    0x1400142eb
   140014407:	dec    rax
   14001440a:	cmp    BYTE PTR [rbp-0x8],r15b
   14001440e:	je     0x14001441b
   140014410:	mov    rcx,QWORD PTR [rbp-0x10]
   140014414:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001441b:	lea    r11,[rsp+0x50]
   140014420:	mov    rbx,QWORD PTR [r11+0x30]
   140014424:	mov    rsi,QWORD PTR [r11+0x38]
   140014428:	mov    rdi,QWORD PTR [r11+0x40]
   14001442c:	mov    rsp,r11
   14001442f:	pop    r15
   140014431:	pop    r14
   140014433:	pop    r13
   140014435:	pop    r12
   140014437:	pop    rbp
   140014438:	ret    
   140014439:	int3   
   14001443a:	int3   
   14001443b:	int3   
   14001443c:	cmp    DWORD PTR [rip+0x41ed1],0x0        # 0x140056314
   140014443:	jne    0x14001444e
   140014445:	lea    r9,[rip+0x2c40c]        # 0x140040858
   14001444c:	jmp    0x140014451
   14001444e:	xor    r9d,r9d
   140014451:	jmp    0x14001424c
   140014456:	int3   
   140014457:	int3   
   140014458:	mov    QWORD PTR [rsp+0x8],rbx
   14001445d:	mov    QWORD PTR [rsp+0x10],rbp
   140014462:	mov    QWORD PTR [rsp+0x18],rsi
   140014467:	push   rdi
   140014468:	push   r13
   14001446a:	push   r14
   14001446c:	sub    rsp,0x40
   140014470:	xor    r14d,r14d
   140014473:	mov    r13,r9
   140014476:	mov    rdi,r8
   140014479:	mov    rbx,rdx
   14001447c:	mov    rsi,rcx
   14001447f:	mov    ebp,r14d
   140014482:	test   rdx,rdx
   140014485:	jne    0x14001448e
   140014487:	test   r8,r8
   14001448a:	je     0x1400144af
   14001448c:	jmp    0x140014493
   14001448e:	test   r8,r8
   140014491:	jne    0x1400144ab
   140014493:	call   0x14001583c
   140014498:	mov    ebx,0x16
   14001449d:	mov    DWORD PTR [rax],ebx
   14001449f:	call   0x140019f74
   1400144a4:	mov    eax,ebx
   1400144a6:	jmp    0x1400145ba
   1400144ab:	mov    WORD PTR [rdx],r14w
   1400144af:	test   rcx,rcx
   1400144b2:	je     0x1400144b7
   1400144b4:	mov    QWORD PTR [rcx],r14
   1400144b7:	mov    rdx,QWORD PTR [rsp+0x88]
   1400144bf:	lea    rcx,[rsp+0x20]
   1400144c4:	call   0x140012690
   1400144c9:	mov    r8,QWORD PTR [rsp+0x80]
   1400144d1:	cmp    r8,rdi
   1400144d4:	cmova  r8,rdi
   1400144d8:	cmp    r8,0x7fffffff
   1400144df:	jbe    0x140014507
   1400144e1:	call   0x14001583c
   1400144e6:	mov    ebx,0x16
   1400144eb:	mov    DWORD PTR [rax],ebx
   1400144ed:	call   0x140019f74
   1400144f2:	cmp    BYTE PTR [rsp+0x38],r14b
   1400144f7:	je     0x1400144a4
   1400144f9:	mov    rax,QWORD PTR [rsp+0x30]
   1400144fe:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014505:	jmp    0x1400144a4
   140014507:	lea    r9,[rsp+0x20]
   14001450c:	mov    rdx,r13
   14001450f:	mov    rcx,rbx
   140014512:	call   0x14001424c
   140014517:	cmp    rax,0xffffffffffffffff
   14001451b:	jne    0x140014546
   14001451d:	test   rbx,rbx
   140014520:	je     0x140014526
   140014522:	mov    WORD PTR [rbx],r14w
   140014526:	call   0x14001583c
   14001452b:	mov    eax,DWORD PTR [rax]
   14001452d:	cmp    BYTE PTR [rsp+0x38],r14b
   140014532:	je     0x1400145ba
   140014538:	mov    rcx,QWORD PTR [rsp+0x30]
   14001453d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014544:	jmp    0x1400145ba
   140014546:	inc    rax
   140014549:	test   rbx,rbx
   14001454c:	je     0x14001459d
   14001454e:	cmp    rax,rdi
   140014551:	jbe    0x140014597
   140014553:	cmp    QWORD PTR [rsp+0x80],0xffffffffffffffff
   14001455c:	je     0x14001458f
   14001455e:	mov    WORD PTR [rbx],r14w
   140014562:	call   0x14001583c
   140014567:	mov    ebx,0x22
   14001456c:	mov    DWORD PTR [rax],ebx
   14001456e:	call   0x140019f74
   140014573:	cmp    BYTE PTR [rsp+0x38],r14b
   140014578:	je     0x1400144a4
   14001457e:	mov    rcx,QWORD PTR [rsp+0x30]
   140014583:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001458a:	jmp    0x1400144a4
   14001458f:	mov    rax,rdi
   140014592:	mov    ebp,0x50
   140014597:	mov    WORD PTR [rbx+rax*2-0x2],r14w
   14001459d:	test   rsi,rsi
   1400145a0:	je     0x1400145a5
   1400145a2:	mov    QWORD PTR [rsi],rax
   1400145a5:	cmp    BYTE PTR [rsp+0x38],r14b
   1400145aa:	je     0x1400145b8
   1400145ac:	mov    rcx,QWORD PTR [rsp+0x30]
   1400145b1:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400145b8:	mov    eax,ebp
   1400145ba:	mov    rbx,QWORD PTR [rsp+0x60]
   1400145bf:	mov    rbp,QWORD PTR [rsp+0x68]
   1400145c4:	mov    rsi,QWORD PTR [rsp+0x70]
   1400145c9:	add    rsp,0x40
   1400145cd:	pop    r14
   1400145cf:	pop    r13
   1400145d1:	pop    rdi
   1400145d2:	ret    
   1400145d3:	int3   
   1400145d4:	mov    rax,rsp
   1400145d7:	mov    QWORD PTR [rax+0x8],rcx
   1400145db:	mov    QWORD PTR [rax+0x10],rdx
   1400145df:	mov    QWORD PTR [rax+0x18],r8
   1400145e3:	mov    QWORD PTR [rax+0x20],r9
   1400145e7:	push   rbx
   1400145e8:	push   rdi
   1400145e9:	sub    rsp,0x28
   1400145ed:	xor    eax,eax
   1400145ef:	test   rcx,rcx
   1400145f2:	setne  al
   1400145f5:	test   eax,eax
   1400145f7:	jne    0x14001460e
   1400145f9:	call   0x14001583c
   1400145fe:	mov    DWORD PTR [rax],0x16
   140014604:	call   0x140019f74
   140014609:	or     eax,0xffffffff
   14001460c:	jmp    0x140014678
   14001460e:	lea    rdi,[rsp+0x48]
   140014613:	call   0x140014c3c
   140014618:	lea    rdx,[rax+0x30]
   14001461c:	mov    ecx,0x1
   140014621:	call   0x140014db0
   140014626:	nop
   140014627:	call   0x140014c3c
   14001462c:	lea    rcx,[rax+0x30]
   140014630:	call   0x14001cd2c
   140014635:	mov    ebx,eax
   140014637:	call   0x140014c3c
   14001463c:	mov    r9,rdi
   14001463f:	xor    r8d,r8d
   140014642:	mov    rdx,QWORD PTR [rsp+0x40]
   140014647:	lea    rcx,[rax+0x30]
   14001464b:	call   0x14001e6d0
   140014650:	mov    edi,eax
   140014652:	call   0x140014c3c
   140014657:	lea    rdx,[rax+0x30]
   14001465b:	mov    ecx,ebx
   14001465d:	call   0x14001ce00
   140014662:	nop
   140014663:	call   0x140014c3c
   140014668:	lea    rdx,[rax+0x30]
   14001466c:	mov    ecx,0x1
   140014671:	call   0x140014e30
   140014676:	mov    eax,edi
   140014678:	add    rsp,0x28
   14001467c:	pop    rdi
   14001467d:	pop    rbx
   14001467e:	ret    
   14001467f:	int3   
   140014680:	jmp    0x14001468b
   140014682:	cmp    ax,dx
   140014685:	je     0x140014698
   140014687:	add    rcx,0x2
   14001468b:	movzx  eax,WORD PTR [rcx]
   14001468e:	test   ax,ax
   140014691:	jne    0x140014682
   140014693:	cmp    ax,dx
   140014696:	jne    0x14001469c
   140014698:	mov    rax,rcx
   14001469b:	ret    
   14001469c:	xor    eax,eax
   14001469e:	ret    
   14001469f:	int3   
   1400146a0:	mov    rax,rsp
   1400146a3:	mov    QWORD PTR [rax+0x8],rbx
   1400146a7:	mov    QWORD PTR [rax+0x10],rbp
   1400146ab:	mov    QWORD PTR [rax+0x18],rsi
   1400146af:	push   rdi
   1400146b0:	sub    rsp,0x40
   1400146b4:	mov    rsi,rcx
   1400146b7:	mov    rdi,rdx
   1400146ba:	lea    rcx,[rax-0x28]
   1400146be:	mov    rdx,r8
   1400146c1:	call   0x140012690
   1400146c6:	xor    ebp,ebp
   1400146c8:	test   rsi,rsi
   1400146cb:	jne    0x1400146fa
   1400146cd:	call   0x14001583c
   1400146d2:	mov    DWORD PTR [rax],0x16
   1400146d8:	call   0x140019f74
   1400146dd:	cmp    BYTE PTR [rsp+0x38],bpl
   1400146e2:	je     0x1400146f0
   1400146e4:	mov    rax,QWORD PTR [rsp+0x30]
   1400146e9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400146f0:	mov    eax,0x7fffffff
   1400146f5:	jmp    0x14001478d
   1400146fa:	test   rdi,rdi
   1400146fd:	je     0x1400146cd
   1400146ff:	mov    rax,QWORD PTR [rsp+0x20]
   140014704:	cmp    DWORD PTR [rax+0x14],ebp
   140014707:	jne    0x140014743
   140014709:	sub    rsi,rdi
   14001470c:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140014710:	cmp    bx,0x41
   140014714:	jb     0x140014720
   140014716:	cmp    bx,0x5a
   14001471a:	ja     0x140014720
   14001471c:	add    bx,0x20
   140014720:	movzx  eax,WORD PTR [rdi]
   140014723:	cmp    ax,0x41
   140014727:	jb     0x140014733
   140014729:	cmp    ax,0x5a
   14001472d:	ja     0x140014733
   14001472f:	add    ax,0x20
   140014733:	add    rdi,0x2
   140014737:	test   bx,bx
   14001473a:	je     0x140014772
   14001473c:	cmp    bx,ax
   14001473f:	je     0x14001470c
   140014741:	jmp    0x140014772
   140014743:	movzx  ecx,WORD PTR [rsi]
   140014746:	lea    rdx,[rsp+0x20]
   14001474b:	call   0x140019c9c
   140014750:	movzx  ecx,WORD PTR [rdi]
   140014753:	lea    rdx,[rsp+0x20]
   140014758:	movzx  ebx,ax
   14001475b:	add    rsi,0x2
   14001475f:	call   0x140019c9c
   140014764:	add    rdi,0x2
   140014768:	test   bx,bx
   14001476b:	je     0x140014772
   14001476d:	cmp    bx,ax
   140014770:	je     0x140014743
   140014772:	movzx  ecx,ax
   140014775:	movzx  eax,bx
   140014778:	sub    eax,ecx
   14001477a:	cmp    BYTE PTR [rsp+0x38],bpl
   14001477f:	je     0x14001478d
   140014781:	mov    rcx,QWORD PTR [rsp+0x30]
   140014786:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001478d:	mov    rbx,QWORD PTR [rsp+0x50]
   140014792:	mov    rbp,QWORD PTR [rsp+0x58]
   140014797:	mov    rsi,QWORD PTR [rsp+0x60]
   14001479c:	add    rsp,0x40
   1400147a0:	pop    rdi
   1400147a1:	ret    
   1400147a2:	int3   
   1400147a3:	int3   
   1400147a4:	sub    rsp,0x28
   1400147a8:	xor    r8d,r8d
   1400147ab:	mov    r9,rcx
   1400147ae:	cmp    DWORD PTR [rip+0x41b5f],r8d        # 0x140056314
   1400147b5:	jne    0x140014821
   1400147b7:	test   rcx,rcx
   1400147ba:	jne    0x1400147d6
   1400147bc:	call   0x14001583c
   1400147c1:	mov    DWORD PTR [rax],0x16
   1400147c7:	call   0x140019f74
   1400147cc:	mov    eax,0x7fffffff
   1400147d1:	add    rsp,0x28
   1400147d5:	ret    
   1400147d6:	test   rdx,rdx
   1400147d9:	je     0x1400147bc
   1400147db:	sub    r9,rdx
   1400147de:	movzx  eax,WORD PTR [r9+rdx*1]
   1400147e3:	cmp    ax,0x41
   1400147e7:	jb     0x1400147f3
   1400147e9:	cmp    ax,0x5a
   1400147ed:	ja     0x1400147f3
   1400147ef:	add    ax,0x20
   1400147f3:	movzx  ecx,WORD PTR [rdx]
   1400147f6:	cmp    cx,0x41
   1400147fa:	jb     0x140014806
   1400147fc:	cmp    cx,0x5a
   140014800:	ja     0x140014806
   140014802:	add    cx,0x20
   140014806:	add    rdx,0x2
   14001480a:	test   ax,ax
   14001480d:	je     0x140014814
   14001480f:	cmp    ax,cx
   140014812:	je     0x1400147de
   140014814:	movzx  ecx,cx
   140014817:	movzx  eax,ax
   14001481a:	sub    eax,ecx
   14001481c:	add    rsp,0x28
   140014820:	ret    
   140014821:	add    rsp,0x28
   140014825:	jmp    0x1400146a0
   14001482a:	int3   
   14001482b:	int3   
   14001482c:	mov    rax,rsp
   14001482f:	mov    QWORD PTR [rax+0x8],rbx
   140014833:	mov    QWORD PTR [rax+0x10],rbp
   140014837:	mov    QWORD PTR [rax+0x18],rsi
   14001483b:	mov    QWORD PTR [rax+0x20],rdi
   14001483f:	push   r12
   140014841:	sub    rsp,0x40
   140014845:	xor    r12d,r12d
   140014848:	mov    rbp,r8
   14001484b:	mov    rdi,rdx
   14001484e:	mov    rsi,rcx
   140014851:	mov    eax,r12d
   140014854:	test   r8,r8
   140014857:	je     0x140014927
   14001485d:	test   rcx,rcx
   140014860:	jne    0x14001487c
   140014862:	call   0x14001583c
   140014867:	mov    DWORD PTR [rax],0x16
   14001486d:	call   0x140019f74
   140014872:	mov    eax,0x7fffffff
   140014877:	jmp    0x140014927
   14001487c:	test   rdx,rdx
   14001487f:	je     0x140014862
   140014881:	lea    rcx,[rsp+0x20]
   140014886:	mov    rdx,r9
   140014889:	call   0x140012690
   14001488e:	mov    r11,QWORD PTR [rsp+0x20]
   140014893:	cmp    DWORD PTR [r11+0x14],r12d
   140014897:	jne    0x1400148d8
   140014899:	sub    rsi,rdi
   14001489c:	movzx  ebx,WORD PTR [rsi+rdi*1]
   1400148a0:	cmp    bx,0x41
   1400148a4:	jb     0x1400148b0
   1400148a6:	cmp    bx,0x5a
   1400148aa:	ja     0x1400148b0
   1400148ac:	add    bx,0x20
   1400148b0:	movzx  eax,WORD PTR [rdi]
   1400148b3:	cmp    ax,0x41
   1400148b7:	jb     0x1400148c3
   1400148b9:	cmp    ax,0x5a
   1400148bd:	ja     0x1400148c3
   1400148bf:	add    ax,0x20
   1400148c3:	add    rdi,0x2
   1400148c7:	dec    rbp
   1400148ca:	je     0x14001490c
   1400148cc:	test   bx,bx
   1400148cf:	je     0x14001490c
   1400148d1:	cmp    bx,ax
   1400148d4:	je     0x14001489c
   1400148d6:	jmp    0x14001490c
   1400148d8:	movzx  ecx,WORD PTR [rsi]
   1400148db:	lea    rdx,[rsp+0x20]
   1400148e0:	call   0x140019c9c
   1400148e5:	movzx  ecx,WORD PTR [rdi]
   1400148e8:	lea    rdx,[rsp+0x20]
   1400148ed:	movzx  ebx,ax
   1400148f0:	call   0x140019c9c
   1400148f5:	add    rsi,0x2
   1400148f9:	add    rdi,0x2
   1400148fd:	dec    rbp
   140014900:	je     0x14001490c
   140014902:	test   bx,bx
   140014905:	je     0x14001490c
   140014907:	cmp    bx,ax
   14001490a:	je     0x1400148d8
   14001490c:	movzx  ecx,ax
   14001490f:	movzx  eax,bx
   140014912:	sub    eax,ecx
   140014914:	cmp    BYTE PTR [rsp+0x38],r12b
   140014919:	je     0x140014927
   14001491b:	mov    rcx,QWORD PTR [rsp+0x30]
   140014920:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014927:	mov    rbx,QWORD PTR [rsp+0x50]
   14001492c:	mov    rbp,QWORD PTR [rsp+0x58]
   140014931:	mov    rsi,QWORD PTR [rsp+0x60]
   140014936:	mov    rdi,QWORD PTR [rsp+0x68]
   14001493b:	add    rsp,0x40
   14001493f:	pop    r12
   140014941:	ret    
   140014942:	int3   
   140014943:	int3   
   140014944:	sub    rsp,0x28
   140014948:	xor    eax,eax
   14001494a:	mov    r10,rdx
   14001494d:	mov    r11,rcx
   140014950:	cmp    DWORD PTR [rip+0x419be],eax        # 0x140056314
   140014956:	jne    0x1400149cf
   140014958:	test   r8,r8
   14001495b:	je     0x1400149d7
   14001495d:	test   rcx,rcx
   140014960:	jne    0x14001497c
   140014962:	call   0x14001583c
   140014967:	mov    DWORD PTR [rax],0x16
   14001496d:	call   0x140019f74
   140014972:	mov    eax,0x7fffffff
   140014977:	add    rsp,0x28
   14001497b:	ret    
   14001497c:	test   rdx,rdx
   14001497f:	je     0x140014962
   140014981:	sub    r11,rdx
   140014984:	movzx  ecx,WORD PTR [r11+r10*1]
   140014989:	cmp    cx,0x41
   14001498d:	jb     0x140014999
   14001498f:	cmp    cx,0x5a
   140014993:	ja     0x140014999
   140014995:	add    cx,0x20
   140014999:	movzx  edx,WORD PTR [r10]
   14001499d:	cmp    dx,0x41
   1400149a1:	jb     0x1400149ad
   1400149a3:	cmp    dx,0x5a
   1400149a7:	ja     0x1400149ad
   1400149a9:	add    dx,0x20
   1400149ad:	add    r10,0x2
   1400149b1:	dec    r8
   1400149b4:	je     0x1400149c0
   1400149b6:	test   cx,cx
   1400149b9:	je     0x1400149c0
   1400149bb:	cmp    cx,dx
   1400149be:	je     0x140014984
   1400149c0:	movzx  eax,dx
   1400149c3:	movzx  ecx,cx
   1400149c6:	sub    ecx,eax
   1400149c8:	mov    eax,ecx
   1400149ca:	add    rsp,0x28
   1400149ce:	ret    
   1400149cf:	xor    r9d,r9d
   1400149d2:	call   0x14001482c
   1400149d7:	add    rsp,0x28
   1400149db:	ret    
   1400149dc:	mov    r9,rcx
   1400149df:	xor    r8d,r8d
   1400149e2:	movzx  eax,WORD PTR [rcx]
   1400149e5:	add    rcx,0x2
   1400149e9:	test   ax,ax
   1400149ec:	jne    0x1400149e2
   1400149ee:	sub    rcx,0x2
   1400149f2:	cmp    rcx,r9
   1400149f5:	je     0x1400149fc
   1400149f7:	cmp    WORD PTR [rcx],dx
   1400149fa:	jne    0x1400149ee
   1400149fc:	cmp    WORD PTR [rcx],dx
   1400149ff:	cmove  r8,rcx
   140014a03:	mov    rax,r8
   140014a06:	ret    
   140014a07:	int3   
   140014a08:	int3   
   140014a09:	int3   
   140014a0a:	int3   
   140014a0b:	int3   
   140014a0c:	int3   
   140014a0d:	int3   
   140014a0e:	int3   
   140014a0f:	int3   
   140014a10:	int3   
   140014a11:	int3   
   140014a12:	int3   
   140014a13:	int3   
   140014a14:	int3   
   140014a15:	int3   
   140014a16:	data16 nop WORD PTR [rax+rax*1+0x0]
   140014a20:	sub    rsp,0x538
   140014a27:	test   rdx,rdx
   140014a2a:	jne    0x140014a2f
   140014a2c:	inc    rdx
   140014a2f:	xor    r10,r10
   140014a32:	cmp    QWORD PTR [rcx],r10
   140014a35:	jne    0x140014ac3
   140014a3b:	mov    rax,rdx
   140014a3e:	mov    rbx,QWORD PTR [rcx+0x8]
   140014a42:	mov    rsi,QWORD PTR [rcx+0x20]
   140014a46:	mov    rdi,QWORD PTR [rcx+0x28]
   140014a4a:	mov    r12,QWORD PTR [rcx+0x30]
   140014a4e:	mov    r13,QWORD PTR [rcx+0x38]
   140014a52:	mov    r14,QWORD PTR [rcx+0x40]
   140014a56:	mov    r15,QWORD PTR [rcx+0x48]
   140014a5a:	ldmxcsr DWORD PTR [rcx+0x58]
   140014a5e:	fnclex 
   140014a60:	fldcw  WORD PTR [rcx+0x5c]
   140014a63:	movdqa xmm6,XMMWORD PTR [rcx+0x60]
   140014a68:	movdqa xmm7,XMMWORD PTR [rcx+0x70]
   140014a6d:	movdqa xmm8,XMMWORD PTR [rcx+0x80]
   140014a76:	movdqa xmm9,XMMWORD PTR [rcx+0x90]
   140014a7f:	movdqa xmm10,XMMWORD PTR [rcx+0xa0]
   140014a88:	movdqa xmm11,XMMWORD PTR [rcx+0xb0]
   140014a91:	movdqa xmm12,XMMWORD PTR [rcx+0xc0]
   140014a9a:	movdqa xmm13,XMMWORD PTR [rcx+0xd0]
   140014aa3:	movdqa xmm14,XMMWORD PTR [rcx+0xe0]
   140014aac:	movdqa xmm15,XMMWORD PTR [rcx+0xf0]
   140014ab5:	mov    rdx,QWORD PTR [rcx+0x50]
   140014ab9:	mov    rbp,QWORD PTR [rcx+0x18]
   140014abd:	mov    rsp,QWORD PTR [rcx+0x10]
   140014ac1:	jmp    rdx
   140014ac3:	mov    DWORD PTR [rsp+0x30],0x80000026
   140014acb:	mov    DWORD PTR [rsp+0x34],r10d
   140014ad0:	mov    QWORD PTR [rsp+0x38],r10
   140014ad5:	mov    QWORD PTR [rsp+0x40],r10
   140014ada:	mov    QWORD PTR [rsp+0x28],r10
   140014adf:	inc    r10d
   140014ae2:	mov    DWORD PTR [rsp+0x48],r10d
   140014ae7:	mov    QWORD PTR [rsp+0x50],rcx
   140014aec:	lea    rax,[rsp+0x60]
   140014af1:	mov    QWORD PTR [rsp+0x20],rax
   140014af6:	mov    r9,rdx
   140014af9:	lea    r8,[rsp+0x30]
   140014afe:	mov    rdx,QWORD PTR [rcx+0x50]
   140014b02:	mov    rcx,QWORD PTR [rcx]
   140014b05:	call   0x14002ac24
   140014b0a:	jmp    0x140014ac3
   140014b0c:	mov    rax,rsp
   140014b0f:	mov    QWORD PTR [rax+0x10],rdx
   140014b13:	mov    QWORD PTR [rax+0x8],rcx
   140014b17:	mov    QWORD PTR [rax+0x18],r8
   140014b1b:	mov    QWORD PTR [rax+0x20],r9
   140014b1f:	push   rbx
   140014b20:	push   rsi
   140014b21:	push   rdi
   140014b22:	push   r12
   140014b24:	sub    rsp,0x28
   140014b28:	mov    rdi,rcx
   140014b2b:	xor    esi,esi
   140014b2d:	xor    eax,eax
   140014b2f:	test   rcx,rcx
   140014b32:	setne  al
   140014b35:	test   eax,eax
   140014b37:	jne    0x140014b51
   140014b39:	call   0x14001583c
   140014b3e:	mov    DWORD PTR [rax],0x16
   140014b44:	call   0x140019f74
   140014b49:	or     eax,0xffffffff
   140014b4c:	jmp    0x140014c30
   140014b51:	xor    eax,eax
   140014b53:	test   rdx,rdx
   140014b56:	setne  al
   140014b59:	test   eax,eax
   140014b5b:	je     0x140014b39
   140014b5d:	lea    r12,[rsp+0x60]
   140014b62:	call   0x140014d4c
   140014b67:	nop
   140014b68:	test   BYTE PTR [rdi+0x18],0x40
   140014b6c:	jne    0x140014bf8
   140014b72:	mov    rcx,rdi
   140014b75:	call   0x1400211a0
   140014b7a:	cmp    eax,0xffffffff
   140014b7d:	je     0x140014ba9
   140014b7f:	cmp    eax,0xfffffffe
   140014b82:	je     0x140014ba9
   140014b84:	movsxd rdx,eax
   140014b87:	mov    rcx,rdx
   140014b8a:	sar    rcx,0x5
   140014b8e:	lea    r8,[rip+0x41a8b]        # 0x140056620
   140014b95:	and    edx,0x1f
   140014b98:	imul   rdx,rdx,0x58
   140014b9c:	add    rdx,QWORD PTR [r8+rcx*8]
   140014ba0:	lea    rcx,[rip+0x2c0b9]        # 0x140040c60
   140014ba7:	jmp    0x140014bba
   140014ba9:	lea    rcx,[rip+0x2c0b0]        # 0x140040c60
   140014bb0:	mov    rdx,rcx
   140014bb3:	lea    r8,[rip+0x41a66]        # 0x140056620
   140014bba:	test   BYTE PTR [rdx+0x38],0x7f
   140014bbe:	jne    0x140014be5
   140014bc0:	cmp    eax,0xffffffff
   140014bc3:	je     0x140014bdf
   140014bc5:	cmp    eax,0xfffffffe
   140014bc8:	je     0x140014bdf
   140014bca:	movsxd rcx,eax
   140014bcd:	mov    rax,rcx
   140014bd0:	sar    rax,0x5
   140014bd4:	and    ecx,0x1f
   140014bd7:	imul   rcx,rcx,0x58
   140014bdb:	add    rcx,QWORD PTR [r8+rax*8]
   140014bdf:	test   BYTE PTR [rcx+0x38],0x80
   140014be3:	je     0x140014bf8
   140014be5:	call   0x14001583c
   140014bea:	mov    DWORD PTR [rax],0x16
   140014bf0:	call   0x140019f74
   140014bf5:	or     esi,0xffffffff
   140014bf8:	test   esi,esi
   140014bfa:	jne    0x140014c26
   140014bfc:	mov    rcx,rdi
   140014bff:	call   0x14001cd2c
   140014c04:	mov    ebx,eax
   140014c06:	mov    r9,r12
   140014c09:	xor    r8d,r8d
   140014c0c:	mov    rdx,QWORD PTR [rsp+0x58]
   140014c11:	mov    rcx,rdi
   140014c14:	call   0x14001cf18
   140014c19:	mov    esi,eax
   140014c1b:	mov    rdx,rdi
   140014c1e:	mov    ecx,ebx
   140014c20:	call   0x14001ce00
   140014c25:	nop
   140014c26:	mov    rcx,rdi
   140014c29:	call   0x140014de4
   140014c2e:	mov    eax,esi
   140014c30:	add    rsp,0x28
   140014c34:	pop    r12
   140014c36:	pop    rdi
   140014c37:	pop    rsi
   140014c38:	pop    rbx
   140014c39:	ret    
   140014c3a:	int3   
   140014c3b:	int3   
   140014c3c:	lea    rax,[rip+0x2acfd]        # 0x14003f940
   140014c43:	ret    
   140014c44:	rex push rbx
   140014c46:	sub    rsp,0x20
   140014c4a:	mov    eax,DWORD PTR [rip+0x42bf0]        # 0x140057840
   140014c50:	mov    ebx,0x14
   140014c55:	test   eax,eax
   140014c57:	jne    0x140014c60
   140014c59:	mov    eax,0x200
   140014c5e:	jmp    0x140014c65
   140014c60:	cmp    eax,ebx
   140014c62:	cmovl  eax,ebx
   140014c65:	movsxd rcx,eax
   140014c68:	mov    edx,0x8
   140014c6d:	mov    DWORD PTR [rip+0x42bcd],eax        # 0x140057840
   140014c73:	call   0x140020ca8
   140014c78:	mov    QWORD PTR [rip+0x41bb1],rax        # 0x140056830
   140014c7f:	test   rax,rax
   140014c82:	jne    0x140014ca8
   140014c84:	lea    edx,[rax+0x8]
   140014c87:	mov    rcx,rbx
   140014c8a:	mov    DWORD PTR [rip+0x42bb0],ebx        # 0x140057840
   140014c90:	call   0x140020ca8
   140014c95:	mov    QWORD PTR [rip+0x41b94],rax        # 0x140056830
   140014c9c:	test   rax,rax
   140014c9f:	jne    0x140014ca8
   140014ca1:	mov    eax,0x1a
   140014ca6:	jmp    0x140014d1e
   140014ca8:	xor    ecx,ecx
   140014caa:	lea    rdx,[rip+0x2ac8f]        # 0x14003f940
   140014cb1:	mov    QWORD PTR [rcx+rax*1],rdx
   140014cb5:	add    rdx,0x30
   140014cb9:	add    rcx,0x8
   140014cbd:	dec    rbx
   140014cc0:	je     0x140014ccb
   140014cc2:	mov    rax,QWORD PTR [rip+0x41b67]        # 0x140056830
   140014cc9:	jmp    0x140014cb1
   140014ccb:	xor    r8d,r8d
   140014cce:	lea    rdx,[rip+0x2ac87]        # 0x14003f95c
   140014cd5:	lea    r9d,[r8+0x3]
   140014cd9:	mov    rcx,r8
   140014cdc:	lea    r10,[rip+0x4193d]        # 0x140056620
   140014ce3:	mov    rax,r8
   140014ce6:	sar    rax,0x5
   140014cea:	and    ecx,0x1f
   140014ced:	mov    rax,QWORD PTR [r10+rax*8]
   140014cf1:	imul   rcx,rcx,0x58
   140014cf5:	mov    r10,QWORD PTR [rcx+rax*1]
   140014cf9:	cmp    r10,0xffffffffffffffff
   140014cfd:	je     0x140014d0a
   140014cff:	cmp    r10,0xfffffffffffffffe
   140014d03:	je     0x140014d0a
   140014d05:	test   r10,r10
   140014d08:	jne    0x140014d10
   140014d0a:	mov    DWORD PTR [rdx],0xfffffffe
   140014d10:	inc    r8
   140014d13:	add    rdx,0x30
   140014d17:	dec    r9
   140014d1a:	jne    0x140014cd9
   140014d1c:	xor    eax,eax
   140014d1e:	add    rsp,0x20
   140014d22:	pop    rbx
   140014d23:	ret    
   140014d24:	sub    rsp,0x28
   140014d28:	call   0x140021428
   140014d2d:	cmp    BYTE PTR [rip+0x40664],0x0        # 0x140055398
   140014d34:	je     0x140014d3b
   140014d36:	call   0x1400211c8
   140014d3b:	mov    rcx,QWORD PTR [rip+0x41aee]        # 0x140056830
   140014d42:	add    rsp,0x28
   140014d46:	jmp    0x1400130a8
   140014d4b:	int3   
   140014d4c:	rex push rbx
   140014d4e:	sub    rsp,0x20
   140014d52:	mov    rbx,rcx
   140014d55:	lea    rcx,[rip+0x2abe4]        # 0x14003f940
   140014d5c:	cmp    rbx,rcx
   140014d5f:	jb     0x140014d9f
   140014d61:	lea    rax,[rip+0x2af68]        # 0x14003fcd0
   140014d68:	cmp    rbx,rax
   140014d6b:	ja     0x140014d9f
   140014d6d:	mov    rdx,rbx
   140014d70:	movabs rax,0x2aaaaaaaaaaaaaab
   140014d7a:	sub    rdx,rcx
   140014d7d:	imul   rdx
   140014d80:	sar    rdx,0x3
   140014d84:	mov    rcx,rdx
   140014d87:	shr    rcx,0x3f
   140014d8b:	lea    ecx,[rcx+rdx*1+0x10]
   140014d8f:	call   0x14001ccc8
   140014d94:	bts    DWORD PTR [rbx+0x18],0xf
   140014d99:	add    rsp,0x20
   140014d9d:	pop    rbx
   140014d9e:	ret    
   140014d9f:	lea    rcx,[rbx+0x30]
   140014da3:	add    rsp,0x20
   140014da7:	pop    rbx
   140014da8:	rex.W jmp QWORD PTR [rip+0x1a4d1]        # 0x14002f280
   140014daf:	int3   
   140014db0:	rex push rbx
   140014db2:	sub    rsp,0x20
   140014db6:	mov    rbx,rdx
   140014db9:	cmp    ecx,0x14
   140014dbc:	jge    0x140014dd1
   140014dbe:	add    ecx,0x10
   140014dc1:	call   0x14001ccc8
   140014dc6:	bts    DWORD PTR [rbx+0x18],0xf
   140014dcb:	add    rsp,0x20
   140014dcf:	pop    rbx
   140014dd0:	ret    
   140014dd1:	lea    rcx,[rdx+0x30]
   140014dd5:	add    rsp,0x20
   140014dd9:	pop    rbx
   140014dda:	rex.W jmp QWORD PTR [rip+0x1a49f]        # 0x14002f280
   140014de1:	int3   
   140014de2:	int3   
   140014de3:	int3   
   140014de4:	lea    rdx,[rip+0x2ab55]        # 0x14003f940
   140014deb:	cmp    rcx,rdx
   140014dee:	jb     0x140014e25
   140014df0:	lea    rax,[rip+0x2aed9]        # 0x14003fcd0
   140014df7:	cmp    rcx,rax
   140014dfa:	ja     0x140014e25
   140014dfc:	btr    DWORD PTR [rcx+0x18],0xf
   140014e01:	sub    rcx,rdx
   140014e04:	movabs rax,0x2aaaaaaaaaaaaaab
   140014e0e:	imul   rcx
   140014e11:	sar    rdx,0x3
   140014e15:	mov    rcx,rdx
   140014e18:	shr    rcx,0x3f
   140014e1c:	lea    ecx,[rcx+rdx*1+0x10]
   140014e20:	jmp    0x14001cbc8
   140014e25:	add    rcx,0x30
   140014e29:	rex.W jmp QWORD PTR [rip+0x1a458]        # 0x14002f288
   140014e30:	cmp    ecx,0x14
   140014e33:	jge    0x140014e42
   140014e35:	btr    DWORD PTR [rdx+0x18],0xf
   140014e3a:	add    ecx,0x10
   140014e3d:	jmp    0x14001cbc8
   140014e42:	lea    rcx,[rdx+0x30]
   140014e46:	rex.W jmp QWORD PTR [rip+0x1a43b]        # 0x14002f288
   140014e4d:	int3   
   140014e4e:	int3   
   140014e4f:	int3   
   140014e50:	int3   
   140014e51:	int3   
   140014e52:	int3   
   140014e53:	int3   
   140014e54:	int3   
   140014e55:	int3   
   140014e56:	data16 nop WORD PTR [rax+rax*1+0x0]
   140014e60:	mov    rax,QWORD PTR [rip+0x419c1]        # 0x140056828
   140014e67:	test   rax,rax
   140014e6a:	jne    0x140014efe
   140014e70:	mov    QWORD PTR [rcx],rax
   140014e73:	mov    QWORD PTR [rcx+0x8],rbx
   140014e77:	mov    QWORD PTR [rcx+0x18],rbp
   140014e7b:	mov    QWORD PTR [rcx+0x20],rsi
   140014e7f:	mov    QWORD PTR [rcx+0x28],rdi
   140014e83:	mov    QWORD PTR [rcx+0x30],r12
   140014e87:	mov    QWORD PTR [rcx+0x38],r13
   140014e8b:	mov    QWORD PTR [rcx+0x40],r14
   140014e8f:	mov    QWORD PTR [rcx+0x48],r15
   140014e93:	lea    r8,[rsp+0x8]
   140014e98:	mov    QWORD PTR [rcx+0x10],r8
   140014e9c:	mov    r8,QWORD PTR [rsp]
   140014ea0:	mov    QWORD PTR [rcx+0x50],r8
   140014ea4:	stmxcsr DWORD PTR [rcx+0x58]
   140014ea8:	fnstcw WORD PTR [rcx+0x5c]
   140014eab:	movdqa XMMWORD PTR [rcx+0x60],xmm6
   140014eb0:	movdqa XMMWORD PTR [rcx+0x70],xmm7
   140014eb5:	movdqa XMMWORD PTR [rcx+0x80],xmm8
   140014ebe:	movdqa XMMWORD PTR [rcx+0x90],xmm9
   140014ec7:	movdqa XMMWORD PTR [rcx+0xa0],xmm10
   140014ed0:	movdqa XMMWORD PTR [rcx+0xb0],xmm11
   140014ed9:	movdqa XMMWORD PTR [rcx+0xc0],xmm12
   140014ee2:	movdqa XMMWORD PTR [rcx+0xd0],xmm13
   140014eeb:	movdqa XMMWORD PTR [rcx+0xe0],xmm14
   140014ef4:	movdqa XMMWORD PTR [rcx+0xf0],xmm15
   140014efd:	ret    
   140014efe:	jmp    rax
   140014f00:	mov    QWORD PTR [rsp+0x8],rbx
   140014f05:	push   rdi
   140014f06:	sub    rsp,0x20
   140014f0a:	or     edi,0xffffffff
   140014f0d:	mov    rbx,rcx
   140014f10:	test   rcx,rcx
   140014f13:	jne    0x140014f29
   140014f15:	call   0x14001583c
   140014f1a:	mov    DWORD PTR [rax],0x16
   140014f20:	call   0x140019f74
   140014f25:	or     eax,edi
   140014f27:	jmp    0x140014f6f
   140014f29:	test   BYTE PTR [rcx+0x18],0x83
   140014f2d:	je     0x140014f69
   140014f2f:	call   0x140021274
   140014f34:	mov    rcx,rbx
   140014f37:	mov    edi,eax
   140014f39:	call   0x140021434
   140014f3e:	mov    rcx,rbx
   140014f41:	call   0x1400211a0
   140014f46:	mov    ecx,eax
   140014f48:	call   0x1400159c8
   140014f4d:	test   eax,eax
   140014f4f:	jns    0x140014f56
   140014f51:	or     edi,0xffffffff
   140014f54:	jmp    0x140014f69
   140014f56:	mov    rcx,QWORD PTR [rbx+0x28]
   140014f5a:	test   rcx,rcx
   140014f5d:	je     0x140014f69
   140014f5f:	call   0x1400130a8
   140014f64:	and    QWORD PTR [rbx+0x28],0x0
   140014f69:	and    DWORD PTR [rbx+0x18],0x0
   140014f6d:	mov    eax,edi
   140014f6f:	mov    rbx,QWORD PTR [rsp+0x30]
   140014f74:	add    rsp,0x20
   140014f78:	pop    rdi
   140014f79:	ret    
   140014f7a:	int3   
   140014f7b:	int3   
   140014f7c:	mov    QWORD PTR [rsp+0x10],rbx
   140014f81:	mov    QWORD PTR [rsp+0x8],rcx
   140014f86:	push   rdi
   140014f87:	sub    rsp,0x20
   140014f8b:	mov    rbx,rcx
   140014f8e:	or     edi,0xffffffff
   140014f91:	xor    eax,eax
   140014f93:	test   rcx,rcx
   140014f96:	setne  al
   140014f99:	test   eax,eax
   140014f9b:	jne    0x140014fb1
   140014f9d:	call   0x14001583c
   140014fa2:	mov    DWORD PTR [rax],0x16
   140014fa8:	call   0x140019f74
   140014fad:	mov    eax,edi
   140014faf:	jmp    0x140014fd7
   140014fb1:	test   BYTE PTR [rcx+0x18],0x40
   140014fb5:	je     0x140014fbd
   140014fb7:	and    DWORD PTR [rcx+0x18],0x0
   140014fbb:	jmp    0x140014fad
   140014fbd:	call   0x140014d4c
   140014fc2:	nop
   140014fc3:	mov    rcx,rbx
   140014fc6:	call   0x140014f00
   140014fcb:	mov    edi,eax
   140014fcd:	mov    rcx,rbx
   140014fd0:	call   0x140014de4
   140014fd5:	jmp    0x140014fad
   140014fd7:	mov    rbx,QWORD PTR [rsp+0x38]
   140014fdc:	add    rsp,0x20
   140014fe0:	pop    rdi
   140014fe1:	ret    
   140014fe2:	int3   
   140014fe3:	int3   
   140014fe4:	mov    QWORD PTR [rsp+0x8],rbx
   140014fe9:	mov    QWORD PTR [rsp+0x18],rbp
   140014fee:	mov    QWORD PTR [rsp+0x20],rsi
   140014ff3:	push   rdi
   140014ff4:	push   r12
   140014ff6:	push   r13
   140014ff8:	push   r14
   140014ffa:	push   r15
   140014ffc:	sub    rsp,0x20
   140015000:	mov    rsi,r9
   140015003:	mov    r15,r8
   140015006:	mov    r12,rdx
   140015009:	mov    r14,rcx
   14001500c:	test   rdx,rdx
   14001500f:	je     0x14001502b
   140015011:	test   r8,r8
   140015014:	je     0x14001502b
   140015016:	test   r9,r9
   140015019:	jne    0x14001504a
   14001501b:	call   0x14001583c
   140015020:	mov    DWORD PTR [rax],0x16
   140015026:	call   0x140019f74
   14001502b:	xor    eax,eax
   14001502d:	mov    rbx,QWORD PTR [rsp+0x50]
   140015032:	mov    rbp,QWORD PTR [rsp+0x60]
   140015037:	mov    rsi,QWORD PTR [rsp+0x68]
   14001503c:	add    rsp,0x20
   140015040:	pop    r15
   140015042:	pop    r14
   140015044:	pop    r13
   140015046:	pop    r12
   140015048:	pop    rdi
   140015049:	ret    
   14001504a:	test   rcx,rcx
   14001504d:	je     0x14001501b
   14001504f:	xor    edx,edx
   140015051:	or     rax,0xffffffffffffffff
   140015055:	div    r12
   140015058:	cmp    r8,rax
   14001505b:	ja     0x14001501b
   14001505d:	mov    rdi,r12
   140015060:	imul   rdi,r15
   140015064:	test   DWORD PTR [r9+0x18],0x10c
   14001506c:	mov    rbp,rdi
   14001506f:	je     0x140015077
   140015071:	mov    r13d,DWORD PTR [r9+0x24]
   140015075:	jmp    0x14001507d
   140015077:	mov    r13d,0x1000
   14001507d:	test   rdi,rdi
   140015080:	je     0x140015166
   140015086:	mov    eax,DWORD PTR [rsi+0x18]
   140015089:	and    eax,0x108
   14001508e:	je     0x1400150cc
   140015090:	mov    ecx,DWORD PTR [rsi+0x8]
   140015093:	test   ecx,ecx
   140015095:	je     0x1400150cc
   140015097:	js     0x140015124
   14001509d:	cmp    rbp,rcx
   1400150a0:	mov    rdx,r14
   1400150a3:	cmovb  ecx,ebp
   1400150a6:	mov    DWORD PTR [rsp+0x58],ecx
   1400150aa:	mov    ebx,ecx
   1400150ac:	mov    r8d,ecx
   1400150af:	mov    rcx,QWORD PTR [rsi]
   1400150b2:	call   0x140018e00
   1400150b7:	mov    eax,DWORD PTR [rsp+0x58]
   1400150bb:	add    QWORD PTR [rsi],rbx
   1400150be:	sub    DWORD PTR [rsi+0x8],eax
   1400150c1:	sub    rbp,rbx
   1400150c4:	add    r14,rbx
   1400150c7:	jmp    0x14001515e
   1400150cc:	mov    ebx,r13d
   1400150cf:	cmp    rbp,rbx
   1400150d2:	jb     0x140015138
   1400150d4:	test   eax,eax
   1400150d6:	je     0x1400150e4
   1400150d8:	mov    rcx,rsi
   1400150db:	call   0x140021274
   1400150e0:	test   eax,eax
   1400150e2:	jne    0x140015128
   1400150e4:	test   r13d,r13d
   1400150e7:	je     0x1400150f7
   1400150e9:	xor    edx,edx
   1400150eb:	mov    rax,rbp
   1400150ee:	div    rbx
   1400150f1:	mov    ebx,ebp
   1400150f3:	sub    ebx,edx
   1400150f5:	jmp    0x1400150f9
   1400150f7:	mov    ebx,ebp
   1400150f9:	mov    rcx,rsi
   1400150fc:	call   0x1400211a0
   140015101:	mov    r8d,ebx
   140015104:	mov    rdx,r14
   140015107:	mov    ecx,eax
   140015109:	call   0x140021bcc
   14001510e:	cmp    eax,0xffffffff
   140015111:	je     0x140015124
   140015113:	mov    ecx,eax
   140015115:	cmp    eax,ebx
   140015117:	cmova  ecx,ebx
   14001511a:	sub    rbp,rcx
   14001511d:	add    r14,rcx
   140015120:	cmp    eax,ebx
   140015122:	jae    0x14001515e
   140015124:	or     DWORD PTR [rsi+0x18],0x20
   140015128:	sub    rdi,rbp
   14001512b:	xor    edx,edx
   14001512d:	mov    rax,rdi
   140015130:	div    r12
   140015133:	jmp    0x14001502d
   140015138:	movsx  ecx,BYTE PTR [r14]
   14001513c:	mov    rdx,rsi
   14001513f:	call   0x14001e4a4
   140015144:	cmp    eax,0xffffffff
   140015147:	je     0x140015128
   140015149:	inc    r14
   14001514c:	dec    rbp
   14001514f:	cmp    DWORD PTR [rsi+0x24],0x0
   140015153:	mov    r13d,0x1
   140015159:	cmovg  r13d,DWORD PTR [rsi+0x24]
   14001515e:	test   rbp,rbp
   140015161:	jmp    0x140015080
   140015166:	mov    rax,r15
   140015169:	jmp    0x14001502d
   14001516e:	int3   
   14001516f:	int3   
   140015170:	mov    rax,rsp
   140015173:	mov    QWORD PTR [rax+0x8],rbx
   140015177:	mov    QWORD PTR [rax+0x10],rsi
   14001517b:	mov    QWORD PTR [rax+0x18],rdi
   14001517f:	mov    QWORD PTR [rax+0x20],r9
   140015183:	push   r12
   140015185:	sub    rsp,0x20
   140015189:	mov    rbx,r9
   14001518c:	mov    rdi,r8
   14001518f:	mov    rsi,rdx
   140015192:	mov    r12,rcx
   140015195:	test   rdx,rdx
   140015198:	je     0x1400151e7
   14001519a:	test   r8,r8
   14001519d:	je     0x1400151e7
   14001519f:	xor    eax,eax
   1400151a1:	test   rbx,rbx
   1400151a4:	setne  al
   1400151a7:	test   eax,eax
   1400151a9:	jne    0x1400151bd
   1400151ab:	call   0x14001583c
   1400151b0:	mov    DWORD PTR [rax],0x16
   1400151b6:	call   0x140019f74
   1400151bb:	jmp    0x1400151e7
   1400151bd:	mov    rcx,rbx
   1400151c0:	call   0x140014d4c
   1400151c5:	nop
   1400151c6:	mov    r9,rbx
   1400151c9:	mov    r8,rdi
   1400151cc:	mov    rdx,rsi
   1400151cf:	mov    rcx,r12
   1400151d2:	call   0x140014fe4
   1400151d7:	mov    rdi,rax
   1400151da:	mov    rcx,rbx
   1400151dd:	call   0x140014de4
   1400151e2:	mov    rax,rdi
   1400151e5:	jmp    0x1400151e9
   1400151e7:	xor    eax,eax
   1400151e9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400151ee:	mov    rsi,QWORD PTR [rsp+0x38]
   1400151f3:	mov    rdi,QWORD PTR [rsp+0x40]
   1400151f8:	add    rsp,0x20
   1400151fc:	pop    r12
   1400151fe:	ret    
   1400151ff:	int3   
   140015200:	mov    QWORD PTR [rsp+0x10],rbx
   140015205:	mov    QWORD PTR [rsp+0x18],rsi
   14001520a:	push   rdi
   14001520b:	push   r12
   14001520d:	push   r13
   14001520f:	sub    rsp,0x30
   140015213:	mov    QWORD PTR [rsp+0x20],rsp
   140015218:	mov    r12d,r8d
   14001521b:	mov    rdi,rdx
   14001521e:	mov    rsi,rcx
   140015221:	xor    r13d,r13d
   140015224:	mov    eax,r13d
   140015227:	test   rcx,rcx
   14001522a:	setne  al
   14001522d:	test   eax,eax
   14001522f:	jne    0x140015248
   140015231:	call   0x14001583c
   140015236:	mov    DWORD PTR [rax],0x16
   14001523c:	call   0x140019f74
   140015241:	xor    eax,eax
   140015243:	jmp    0x1400152c9
   140015248:	mov    eax,r13d
   14001524b:	test   rdx,rdx
   14001524e:	setne  al
   140015251:	test   eax,eax
   140015253:	je     0x140015231
   140015255:	mov    eax,r13d
   140015258:	cmp    WORD PTR [rdx],r13w
   14001525c:	setne  al
   14001525f:	test   eax,eax
   140015261:	je     0x140015231
   140015263:	call   0x140021f8c
   140015268:	mov    rbx,rax
   14001526b:	mov    QWORD PTR [rsp+0x50],rax
   140015270:	test   rax,rax
   140015273:	jne    0x140015282
   140015275:	call   0x14001583c
   14001527a:	mov    DWORD PTR [rax],0x18
   140015280:	jmp    0x140015241
   140015282:	cmp    WORD PTR [rsi],r13w
   140015286:	jne    0x1400152aa
   140015288:	call   0x14001583c
   14001528d:	mov    DWORD PTR [rax],0x16
   140015293:	lea    rdx,[rip+0xc]        # 0x1400152a6
   14001529a:	mov    rcx,QWORD PTR [rsp+0x20]
   14001529f:	call   0x140022100
   1400152a4:	nop
   1400152a5:	nop
   1400152a6:	xor    eax,eax
   1400152a8:	jmp    0x1400152c9
   1400152aa:	mov    r9,rax
   1400152ad:	mov    r8d,r12d
   1400152b0:	mov    rdx,rdi
   1400152b3:	mov    rcx,rsi
   1400152b6:	call   0x140021cac
   1400152bb:	mov    rdi,rax
   1400152be:	mov    rcx,rbx
   1400152c1:	call   0x140014de4
   1400152c6:	mov    rax,rdi
   1400152c9:	mov    rbx,QWORD PTR [rsp+0x58]
   1400152ce:	mov    rsi,QWORD PTR [rsp+0x60]
   1400152d3:	add    rsp,0x30
   1400152d7:	pop    r13
   1400152d9:	pop    r12
   1400152db:	pop    rdi
   1400152dc:	ret    
   1400152dd:	int3   
   1400152de:	int3   
   1400152df:	int3   
   1400152e0:	mov    r8d,0x40
   1400152e6:	jmp    0x140015200
   1400152eb:	int3   
   1400152ec:	mov    r9,rdx
   1400152ef:	movzx  eax,WORD PTR [rcx]
   1400152f2:	test   ax,ax
   1400152f5:	je     0x140015321
   1400152f7:	cmp    WORD PTR [r9],0x0
   1400152fc:	mov    r8,r9
   1400152ff:	je     0x140015317
   140015301:	movzx  edx,WORD PTR [r9]
   140015305:	cmp    dx,ax
   140015308:	je     0x14001531d
   14001530a:	add    r8,0x2
   14001530e:	movzx  edx,WORD PTR [r8]
   140015312:	test   dx,dx
   140015315:	jne    0x140015305
   140015317:	add    rcx,0x2
   14001531b:	jmp    0x1400152ef
   14001531d:	mov    rax,rcx
   140015320:	ret    
   140015321:	xor    eax,eax
   140015323:	ret    
   140015324:	sub    rsp,0x28
   140015328:	call   QWORD PTR [rip+0x19f62]        # 0x14002f290
   14001532e:	test   eax,eax
   140015330:	jne    0x14001533a
   140015332:	call   QWORD PTR [rip+0x19d78]        # 0x14002f0b0
   140015338:	jmp    0x14001533c
   14001533a:	xor    eax,eax
   14001533c:	test   eax,eax
   14001533e:	je     0x14001534c
   140015340:	mov    ecx,eax
   140015342:	call   0x14001587c
   140015347:	or     eax,0xffffffff
   14001534a:	jmp    0x14001534e
   14001534c:	xor    eax,eax
   14001534e:	add    rsp,0x28
   140015352:	ret    
   140015353:	int3   
   140015354:	mov    QWORD PTR [rsp+0x18],r8
   140015359:	mov    QWORD PTR [rsp+0x20],r9
   14001535e:	push   rbp
   14001535f:	push   rbx
   140015360:	push   rsi
   140015361:	push   rdi
   140015362:	mov    rbp,rsp
   140015365:	sub    rsp,0x58
   140015369:	and    QWORD PTR [rbp-0x38],0x0
   14001536e:	mov    rbx,rdx
   140015371:	xor    edx,edx
   140015373:	mov    rsi,r8
   140015376:	mov    rdi,rcx
   140015379:	lea    r8d,[rdx+0x28]
   14001537d:	lea    rcx,[rbp-0x30]
   140015381:	call   0x140012fb0
   140015386:	test   rsi,rsi
   140015389:	jne    0x1400153a0
   14001538b:	call   0x14001583c
   140015390:	mov    DWORD PTR [rax],0x16
   140015396:	call   0x140019f74
   14001539b:	or     eax,0xffffffff
   14001539e:	jmp    0x1400153fc
   1400153a0:	test   rbx,rbx
   1400153a3:	je     0x1400153aa
   1400153a5:	test   rdi,rdi
   1400153a8:	je     0x14001538b
   1400153aa:	mov    eax,0x7fffffff
   1400153af:	lea    r9,[rbp+0x40]
   1400153b3:	lea    rcx,[rbp-0x38]
   1400153b7:	cmp    rbx,rax
   1400153ba:	mov    rdx,rsi
   1400153bd:	mov    DWORD PTR [rbp-0x20],0x42
   1400153c4:	cmova  ebx,eax
   1400153c7:	xor    r8d,r8d
   1400153ca:	mov    QWORD PTR [rbp-0x28],rdi
   1400153ce:	mov    DWORD PTR [rbp-0x30],ebx
   1400153d1:	mov    QWORD PTR [rbp-0x38],rdi
   1400153d5:	call   0x14001cf18
   1400153da:	mov    ebx,eax
   1400153dc:	test   rdi,rdi
   1400153df:	je     0x1400153fc
   1400153e1:	dec    DWORD PTR [rbp-0x30]
   1400153e4:	js     0x1400153ef
   1400153e6:	mov    rax,QWORD PTR [rbp-0x38]
   1400153ea:	mov    BYTE PTR [rax],0x0
   1400153ed:	jmp    0x1400153fa
   1400153ef:	lea    rdx,[rbp-0x38]
   1400153f3:	xor    ecx,ecx
   1400153f5:	call   0x14001e4a4
   1400153fa:	mov    eax,ebx
   1400153fc:	add    rsp,0x58
   140015400:	pop    rdi
   140015401:	pop    rsi
   140015402:	pop    rbx
   140015403:	pop    rbp
   140015404:	ret    
   140015405:	int3   
   140015406:	int3   
   140015407:	int3   
   140015408:	rex push rbx
   14001540a:	sub    rsp,0x40
   14001540e:	cmp    DWORD PTR [rip+0x40eff],0x0        # 0x140056314
   140015415:	movsxd rbx,ecx
   140015418:	jne    0x14001542a
   14001541a:	mov    rax,QWORD PTR [rip+0x2b40f]        # 0x140040830
   140015421:	movzx  eax,WORD PTR [rax+rbx*2]
   140015425:	and    eax,0x4
   140015428:	jmp    0x140015480
   14001542a:	lea    rcx,[rsp+0x20]
   14001542f:	xor    edx,edx
   140015431:	call   0x140012690
   140015436:	mov    rax,QWORD PTR [rsp+0x20]
   14001543b:	cmp    DWORD PTR [rax+0x10c],0x1
   140015442:	jle    0x14001545a
   140015444:	lea    r8,[rsp+0x20]
   140015449:	mov    edx,0x4
   14001544e:	mov    ecx,ebx
   140015450:	call   0x140022164
   140015455:	mov    r11d,eax
   140015458:	jmp    0x14001546a
   14001545a:	mov    rax,QWORD PTR [rax+0x140]
   140015461:	movzx  r11d,WORD PTR [rax+rbx*2]
   140015466:	and    r11d,0x4
   14001546a:	cmp    BYTE PTR [rsp+0x38],0x0
   14001546f:	je     0x14001547d
   140015471:	mov    rax,QWORD PTR [rsp+0x30]
   140015476:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001547d:	mov    eax,r11d
   140015480:	add    rsp,0x40
   140015484:	pop    rbx
   140015485:	ret    
   140015486:	int3   
   140015487:	int3   
   140015488:	rex push rbx
   14001548a:	sub    rsp,0x40
   14001548e:	cmp    DWORD PTR [rip+0x40e7f],0x0        # 0x140056314
   140015495:	movsxd rbx,ecx
   140015498:	jne    0x1400154ac
   14001549a:	mov    rax,QWORD PTR [rip+0x2b38f]        # 0x140040830
   1400154a1:	movzx  eax,WORD PTR [rax+rbx*2]
   1400154a5:	and    eax,0x80
   1400154aa:	jmp    0x140015505
   1400154ac:	lea    rcx,[rsp+0x20]
   1400154b1:	xor    edx,edx
   1400154b3:	call   0x140012690
   1400154b8:	mov    rax,QWORD PTR [rsp+0x20]
   1400154bd:	cmp    DWORD PTR [rax+0x10c],0x1
   1400154c4:	jle    0x1400154dc
   1400154c6:	lea    r8,[rsp+0x20]
   1400154cb:	mov    edx,0x80
   1400154d0:	mov    ecx,ebx
   1400154d2:	call   0x140022164
   1400154d7:	mov    r11d,eax
   1400154da:	jmp    0x1400154ef
   1400154dc:	mov    rax,QWORD PTR [rax+0x140]
   1400154e3:	movzx  r11d,WORD PTR [rax+rbx*2]
   1400154e8:	and    r11d,0x80
   1400154ef:	cmp    BYTE PTR [rsp+0x38],0x0
   1400154f4:	je     0x140015502
   1400154f6:	mov    rax,QWORD PTR [rsp+0x30]
   1400154fb:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140015502:	mov    eax,r11d
   140015505:	add    rsp,0x40
   140015509:	pop    rbx
   14001550a:	ret    
   14001550b:	int3   
   14001550c:	mov    QWORD PTR [rsp+0x18],rbx
   140015511:	mov    QWORD PTR [rsp+0x20],rsi
   140015516:	push   rdi
   140015517:	push   r12
   140015519:	push   r13
   14001551b:	sub    rsp,0x30
   14001551f:	mov    r12,r8
   140015522:	mov    ebx,edx
   140015524:	mov    rdi,rcx
   140015527:	mov    rsi,rcx
   14001552a:	xor    r13d,r13d
   14001552d:	test   rcx,rcx
   140015530:	jne    0x14001554a
   140015532:	test   edx,edx
   140015534:	je     0x14001554a
   140015536:	call   0x14001583c
   14001553b:	mov    DWORD PTR [rax],0x16
   140015541:	call   0x140019f74
   140015546:	xor    eax,eax
   140015548:	jmp    0x1400155c5
   14001554a:	mov    eax,r13d
   14001554d:	test   edx,edx
   14001554f:	setns  al
   140015552:	test   eax,eax
   140015554:	je     0x140015536
   140015556:	mov    eax,r13d
   140015559:	test   r8,r8
   14001555c:	setne  al
   14001555f:	test   eax,eax
   140015561:	je     0x140015536
   140015563:	test   edx,edx
   140015565:	je     0x140015546
   140015567:	mov    QWORD PTR [rsp+0x50],r8
   14001556c:	mov    rcx,r8
   14001556f:	call   0x140014d4c
   140015574:	nop
   140015575:	test   rdi,rdi
   140015578:	je     0x1400155ba
   14001557a:	dec    ebx
   14001557c:	mov    DWORD PTR [rsp+0x58],ebx
   140015580:	je     0x1400155b6
   140015582:	mov    rcx,r12
   140015585:	call   0x14002224c
   14001558a:	movzx  r11d,ax
   14001558e:	cmp    r11d,0xffff
   140015595:	jne    0x1400155a1
   140015597:	cmp    rsi,rdi
   14001559a:	jne    0x1400155b6
   14001559c:	mov    rdi,r13
   14001559f:	jmp    0x1400155ba
   1400155a1:	mov    WORD PTR [rsi],r11w
   1400155a5:	add    rsi,0x2
   1400155a9:	mov    QWORD PTR [rsp+0x20],rsi
   1400155ae:	cmp    r11d,0xa
   1400155b2:	je     0x1400155b6
   1400155b4:	jmp    0x14001557a
   1400155b6:	mov    WORD PTR [rsi],r13w
   1400155ba:	mov    rcx,r12
   1400155bd:	call   0x140014de4
   1400155c2:	mov    rax,rdi
   1400155c5:	mov    rbx,QWORD PTR [rsp+0x60]
   1400155ca:	mov    rsi,QWORD PTR [rsp+0x68]
   1400155cf:	add    rsp,0x30
   1400155d3:	pop    r13
   1400155d5:	pop    r12
   1400155d7:	pop    rdi
   1400155d8:	ret    
   1400155d9:	int3   
   1400155da:	int3   
   1400155db:	int3   
   1400155dc:	mov    rax,rsp
   1400155df:	mov    QWORD PTR [rax+0x10],rdx
   1400155e3:	mov    QWORD PTR [rax+0x8],rcx
   1400155e7:	mov    QWORD PTR [rax+0x18],r8
   1400155eb:	mov    QWORD PTR [rax+0x20],r9
   1400155ef:	push   rbx
   1400155f0:	push   rsi
   1400155f1:	push   rdi
   1400155f2:	sub    rsp,0x20
   1400155f6:	mov    rdi,rcx
   1400155f9:	xor    eax,eax
   1400155fb:	test   rcx,rcx
   1400155fe:	setne  al
   140015601:	test   eax,eax
   140015603:	jne    0x14001561a
   140015605:	call   0x14001583c
   14001560a:	mov    DWORD PTR [rax],0x16
   140015610:	call   0x140019f74
   140015615:	or     eax,0xffffffff
   140015618:	jmp    0x140015665
   14001561a:	xor    eax,eax
   14001561c:	test   rdx,rdx
   14001561f:	setne  al
   140015622:	test   eax,eax
   140015624:	je     0x140015605
   140015626:	lea    rsi,[rsp+0x50]
   14001562b:	call   0x140014d4c
   140015630:	nop
   140015631:	mov    rcx,rdi
   140015634:	call   0x14001cd2c
   140015639:	mov    ebx,eax
   14001563b:	mov    r9,rsi
   14001563e:	xor    r8d,r8d
   140015641:	mov    rdx,QWORD PTR [rsp+0x48]
   140015646:	mov    rcx,rdi
   140015649:	call   0x14001e6d0
   14001564e:	mov    esi,eax
   140015650:	mov    rdx,rdi
   140015653:	mov    ecx,ebx
   140015655:	call   0x14001ce00
   14001565a:	nop
   14001565b:	mov    rcx,rdi
   14001565e:	call   0x140014de4
   140015663:	mov    eax,esi
   140015665:	add    rsp,0x20
   140015669:	pop    rdi
   14001566a:	pop    rsi
   14001566b:	pop    rbx
   14001566c:	ret    
   14001566d:	int3   
   14001566e:	int3   
   14001566f:	int3   
   140015670:	mov    rax,rsp
   140015673:	mov    QWORD PTR [rax+0x10],rbx
   140015677:	mov    QWORD PTR [rax+0x18],rsi
   14001567b:	push   rdi
   14001567c:	sub    rsp,0x30
   140015680:	mov    rdi,rcx
   140015683:	xor    esi,esi
   140015685:	mov    QWORD PTR [rax+0x8],rsi
   140015689:	test   rcx,rcx
   14001568c:	je     0x140015747
   140015692:	cmp    WORD PTR [rcx],si
   140015695:	je     0x140015747
   14001569b:	mov    QWORD PTR [rax-0x18],0x7fffffff
   1400156a3:	mov    r9,rcx
   1400156a6:	xor    r8d,r8d
   1400156a9:	xor    edx,edx
   1400156ab:	lea    rcx,[rax+0x8]
   1400156af:	call   0x140012bb4
   1400156b4:	test   eax,eax
   1400156b6:	je     0x1400156d7
   1400156b8:	cmp    eax,0x16
   1400156bb:	je     0x1400156c2
   1400156bd:	cmp    eax,0x22
   1400156c0:	jne    0x1400156d7
   1400156c2:	mov    QWORD PTR [rsp+0x20],rsi
   1400156c7:	xor    r9d,r9d
   1400156ca:	xor    r8d,r8d
   1400156cd:	xor    edx,edx
   1400156cf:	xor    ecx,ecx
   1400156d1:	call   0x140019ed0
   1400156d6:	int3   
   1400156d7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400156dc:	test   rcx,rcx
   1400156df:	je     0x1400157e2
   1400156e5:	mov    edx,0x1
   1400156ea:	call   0x140020ca8
   1400156ef:	mov    rbx,rax
   1400156f2:	test   rax,rax
   1400156f5:	je     0x1400157e2
   1400156fb:	or     QWORD PTR [rsp+0x20],0xffffffffffffffff
   140015701:	mov    r9,rdi
   140015704:	mov    r8,QWORD PTR [rsp+0x40]
   140015709:	mov    rdx,rax
   14001570c:	xor    ecx,ecx
   14001570e:	call   0x140012bb4
   140015713:	test   eax,eax
   140015715:	je     0x14001574a
   140015717:	cmp    eax,0x16
   14001571a:	je     0x140015721
   14001571c:	cmp    eax,0x22
   14001571f:	jne    0x140015736
   140015721:	mov    QWORD PTR [rsp+0x20],rsi
   140015726:	xor    r9d,r9d
   140015729:	xor    r8d,r8d
   14001572c:	xor    edx,edx
   14001572e:	xor    ecx,ecx
   140015730:	call   0x140019ed0
   140015735:	int3   
   140015736:	test   eax,eax
   140015738:	je     0x14001574a
   14001573a:	mov    rcx,rbx
   14001573d:	call   0x1400130a8
   140015742:	jmp    0x1400157e2
   140015747:	mov    rbx,rsi
   14001574a:	mov    edi,0x2
   14001574f:	mov    ecx,edi
   140015751:	call   0x140022628
   140015756:	nop
   140015757:	test   rbx,rbx
   14001575a:	je     0x140015782
   14001575c:	mov    rcx,rbx
   14001575f:	call   0x14001dae0
   140015764:	mov    r8,rax
   140015767:	mov    rdx,rbx
   14001576a:	mov    ecx,edi
   14001576c:	call   0x14002146c
   140015771:	mov    r8d,edi
   140015774:	lea    rdx,[rip+0x1bba1]        # 0x14003131c
   14001577b:	mov    ecx,edi
   14001577d:	call   0x14002146c
   140015782:	mov    rcx,rbx
   140015785:	call   0x1400130a8
   14001578a:	call   0x14001583c
   14001578f:	mov    ebx,DWORD PTR [rax]
   140015791:	test   ebx,ebx
   140015793:	js     0x14001579e
   140015795:	call   0x140022448
   14001579a:	cmp    ebx,DWORD PTR [rax]
   14001579c:	jl     0x1400157a5
   14001579e:	call   0x140022448
   1400157a3:	mov    ebx,DWORD PTR [rax]
   1400157a5:	call   0x140022450
   1400157aa:	movsxd rcx,ebx
   1400157ad:	mov    rbx,QWORD PTR [rax+rcx*8]
   1400157b1:	mov    rcx,rbx
   1400157b4:	call   0x14001dae0
   1400157b9:	mov    r8,rax
   1400157bc:	mov    rdx,rbx
   1400157bf:	mov    ecx,edi
   1400157c1:	call   0x14002146c
   1400157c6:	mov    r8d,0x1
   1400157cc:	lea    rdx,[rip+0x1bb45]        # 0x140031318
   1400157d3:	mov    ecx,edi
   1400157d5:	call   0x14002146c
   1400157da:	nop
   1400157db:	mov    ecx,edi
   1400157dd:	call   0x1400226d0
   1400157e2:	mov    rbx,QWORD PTR [rsp+0x48]
   1400157e7:	mov    rsi,QWORD PTR [rsp+0x50]
   1400157ec:	add    rsp,0x30
   1400157f0:	pop    rdi
   1400157f1:	ret    
   1400157f2:	int3   
   1400157f3:	int3   
   1400157f4:	lea    r9,[rip+0x2a505]        # 0x14003fd00
   1400157fb:	xor    eax,eax
   1400157fd:	mov    rdx,r9
   140015800:	lea    r8d,[rax+0x8]
   140015804:	cmp    ecx,DWORD PTR [rdx]
   140015806:	je     0x140015833
   140015808:	inc    eax
   14001580a:	add    rdx,r8
   14001580d:	cmp    eax,0x2d
   140015810:	jb     0x140015804
   140015812:	lea    eax,[rcx-0x13]
   140015815:	cmp    eax,0x11
   140015818:	ja     0x140015820
   14001581a:	mov    eax,0xd
   14001581f:	ret    
   140015820:	add    ecx,0xffffff44
   140015826:	mov    eax,0x16
   14001582b:	cmp    ecx,0xe
   14001582e:	cmovbe eax,r8d
   140015832:	ret    
   140015833:	cdqe   
   140015835:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14001583a:	ret    
   14001583b:	int3   
   14001583c:	sub    rsp,0x28
   140015840:	call   0x14001ad90
   140015845:	test   rax,rax
   140015848:	jne    0x140015853
   14001584a:	lea    rax,[rip+0x2a617]        # 0x14003fe68
   140015851:	jmp    0x140015857
   140015853:	add    rax,0x10
   140015857:	add    rsp,0x28
   14001585b:	ret    
   14001585c:	sub    rsp,0x28
   140015860:	call   0x14001ad90
   140015865:	test   rax,rax
   140015868:	jne    0x140015873
   14001586a:	lea    rax,[rip+0x2a5fb]        # 0x14003fe6c
   140015871:	jmp    0x140015877
   140015873:	add    rax,0x14
   140015877:	add    rsp,0x28
   14001587b:	ret    
   14001587c:	rex push rbx
   14001587e:	sub    rsp,0x20
   140015882:	mov    ebx,ecx
   140015884:	call   0x14001ad90
   140015889:	test   rax,rax
   14001588c:	jne    0x140015897
   14001588e:	lea    rax,[rip+0x2a5d7]        # 0x14003fe6c
   140015895:	jmp    0x14001589b
   140015897:	add    rax,0x14
   14001589b:	mov    DWORD PTR [rax],ebx
   14001589d:	call   0x14001ad90
   1400158a2:	lea    r10,[rip+0x2a5bf]        # 0x14003fe68
   1400158a9:	test   rax,rax
   1400158ac:	je     0x1400158b2
   1400158ae:	lea    r10,[rax+0x10]
   1400158b2:	mov    ecx,ebx
   1400158b4:	call   0x1400157f4
   1400158b9:	mov    DWORD PTR [r10],eax
   1400158bc:	add    rsp,0x20
   1400158c0:	pop    rbx
   1400158c1:	ret    
   1400158c2:	int3   
   1400158c3:	int3   
   1400158c4:	sub    rsp,0x28
   1400158c8:	xor    r9d,r9d
   1400158cb:	test   rdx,rdx
   1400158ce:	jne    0x1400158e9
   1400158d0:	call   0x14001583c
   1400158d5:	mov    DWORD PTR [rax],0x16
   1400158db:	call   0x140019f74
   1400158e0:	or     rax,0xffffffffffffffff
   1400158e4:	add    rsp,0x28
   1400158e8:	ret    
   1400158e9:	cmp    WORD PTR [rdx],r9w
   1400158ed:	je     0x1400158d0
   1400158ef:	test   r8,r8
   1400158f2:	je     0x1400158d0
   1400158f4:	mov    rax,QWORD PTR [r8]
   1400158f7:	test   rax,rax
   1400158fa:	je     0x1400158d0
   1400158fc:	cmp    WORD PTR [rax],r9w
   140015900:	je     0x1400158d0
   140015902:	add    rsp,0x28
   140015906:	jmp    0x140022990
   14001590b:	int3   
   14001590c:	mov    QWORD PTR [rsp+0x8],rbx
   140015911:	push   rdi
   140015912:	sub    rsp,0x20
   140015916:	movsxd rdi,ecx
   140015919:	mov    ecx,edi
   14001591b:	call   0x1400225b4
   140015920:	cmp    rax,0xffffffffffffffff
   140015924:	je     0x14001597f
   140015926:	mov    rax,QWORD PTR [rip+0x40cf3]        # 0x140056620
   14001592d:	mov    ecx,0x2
   140015932:	cmp    edi,0x1
   140015935:	jne    0x140015940
   140015937:	test   BYTE PTR [rax+0xb8],dil
   14001593e:	jne    0x14001594a
   140015940:	cmp    edi,ecx
   140015942:	jne    0x140015961
   140015944:	test   BYTE PTR [rax+0x60],0x1
   140015948:	je     0x140015961
   14001594a:	call   0x1400225b4
   14001594f:	mov    ecx,0x1
   140015954:	mov    rbx,rax
   140015957:	call   0x1400225b4
   14001595c:	cmp    rax,rbx
   14001595f:	je     0x14001597f
   140015961:	mov    ecx,edi
   140015963:	call   0x1400225b4
   140015968:	mov    rcx,rax
   14001596b:	call   QWORD PTR [rip+0x196c7]        # 0x14002f038
   140015971:	test   eax,eax
   140015973:	jne    0x14001597f
   140015975:	call   QWORD PTR [rip+0x19735]        # 0x14002f0b0
   14001597b:	mov    ebx,eax
   14001597d:	jmp    0x140015981
   14001597f:	xor    ebx,ebx
   140015981:	mov    ecx,edi
   140015983:	call   0x140022508
   140015988:	mov    r11,rdi
   14001598b:	mov    rcx,rdi
   14001598e:	sar    rcx,0x5
   140015992:	and    r11d,0x1f
   140015996:	lea    rdx,[rip+0x40c83]        # 0x140056620
   14001599d:	mov    rcx,QWORD PTR [rdx+rcx*8]
   1400159a1:	imul   r11,r11,0x58
   1400159a5:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   1400159ab:	test   ebx,ebx
   1400159ad:	je     0x1400159bb
   1400159af:	mov    ecx,ebx
   1400159b1:	call   0x14001587c
   1400159b6:	or     eax,0xffffffff
   1400159b9:	jmp    0x1400159bd
   1400159bb:	xor    eax,eax
   1400159bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400159c2:	add    rsp,0x20
   1400159c6:	pop    rdi
   1400159c7:	ret    
   1400159c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400159cd:	mov    DWORD PTR [rsp+0x8],ecx
   1400159d1:	push   rsi
   1400159d2:	push   rdi
   1400159d3:	push   r12
   1400159d5:	sub    rsp,0x20
   1400159d9:	movsxd rbx,ecx
   1400159dc:	cmp    ebx,0xfffffffe
   1400159df:	jne    0x1400159f9
   1400159e1:	call   0x14001585c
   1400159e6:	and    DWORD PTR [rax],0x0
   1400159e9:	call   0x14001583c
   1400159ee:	mov    DWORD PTR [rax],0x9
   1400159f4:	jmp    0x140015a7a
   1400159f9:	test   ecx,ecx
   1400159fb:	js     0x140015a62
   1400159fd:	cmp    ebx,DWORD PTR [rip+0x40c01]        # 0x140056604
   140015a03:	jae    0x140015a62
   140015a05:	mov    rdi,rbx
   140015a08:	mov    rsi,rbx
   140015a0b:	sar    rsi,0x5
   140015a0f:	lea    r12,[rip+0x40c0a]        # 0x140056620
   140015a16:	and    edi,0x1f
   140015a19:	imul   rdi,rdi,0x58
   140015a1d:	mov    rax,QWORD PTR [r12+rsi*8]
   140015a21:	movsx  ecx,BYTE PTR [rax+rdi*1+0x8]
   140015a26:	and    ecx,0x1
   140015a29:	je     0x140015a62
   140015a2b:	mov    ecx,ebx
   140015a2d:	call   0x140022628
   140015a32:	nop
   140015a33:	mov    rax,QWORD PTR [r12+rsi*8]
   140015a37:	test   BYTE PTR [rax+rdi*1+0x8],0x1
   140015a3c:	je     0x140015a49
   140015a3e:	mov    ecx,ebx
   140015a40:	call   0x14001590c
   140015a45:	mov    edi,eax
   140015a47:	jmp    0x140015a57
   140015a49:	call   0x14001583c
   140015a4e:	mov    DWORD PTR [rax],0x9
   140015a54:	or     edi,0xffffffff
   140015a57:	mov    ecx,ebx
   140015a59:	call   0x1400226d0
   140015a5e:	mov    eax,edi
   140015a60:	jmp    0x140015a7d
   140015a62:	call   0x14001585c
   140015a67:	and    DWORD PTR [rax],0x0
   140015a6a:	call   0x14001583c
   140015a6f:	mov    DWORD PTR [rax],0x9
   140015a75:	call   0x140019f74
   140015a7a:	or     eax,0xffffffff
   140015a7d:	mov    rbx,QWORD PTR [rsp+0x50]
   140015a82:	add    rsp,0x20
   140015a86:	pop    r12
   140015a88:	pop    rdi
   140015a89:	pop    rsi
   140015a8a:	ret    
   140015a8b:	int3   
   140015a8c:	mov    QWORD PTR [rsp+0x8],rbx
   140015a91:	mov    QWORD PTR [rsp+0x10],rsi
   140015a96:	push   rdi
   140015a97:	push   r12
   140015a99:	push   r13
   140015a9b:	push   r14
   140015a9d:	push   r15
   140015a9f:	sub    rsp,0x30
   140015aa3:	mov    rsi,rdx
   140015aa6:	mov    rdi,rcx
   140015aa9:	xor    r15d,r15d
   140015aac:	mov    r13d,r15d
   140015aaf:	mov    QWORD PTR [rsp+0x70],r15
   140015ab4:	lea    ebx,[r15+0x2]
   140015ab8:	mov    ecx,ebx
   140015aba:	call   0x14001cbe0
   140015abf:	test   eax,eax
   140015ac1:	jne    0x140015aca
   140015ac3:	xor    eax,eax
   140015ac5:	jmp    0x140015d0d
   140015aca:	lea    r8,[rip+0x1b857]        # 0x140031328
   140015ad1:	xor    edx,edx
   140015ad3:	lea    rcx,[rsp+0x70]
   140015ad8:	call   0x1400134e0
   140015add:	test   eax,eax
   140015adf:	je     0x140015aff
   140015ae1:	cmp    eax,0x16
   140015ae4:	jne    0x140015afb
   140015ae6:	mov    QWORD PTR [rsp+0x20],r15
   140015aeb:	xor    r9d,r9d
   140015aee:	xor    r8d,r8d
   140015af1:	xor    edx,edx
   140015af3:	xor    ecx,ecx
   140015af5:	call   0x140019ed0
   140015afa:	int3   
   140015afb:	test   eax,eax
   140015afd:	jne    0x140015b1b
   140015aff:	mov    rcx,QWORD PTR [rsp+0x70]
   140015b04:	test   rcx,rcx
   140015b07:	je     0x140015b1b
   140015b09:	xor    edx,edx
   140015b0b:	call   0x140022de0
   140015b10:	test   eax,eax
   140015b12:	jne    0x140015b1b
   140015b14:	mov    rdi,QWORD PTR [rsp+0x70]
   140015b19:	jmp    0x140015b50
   140015b1b:	test   rdi,rdi
   140015b1e:	je     0x140015b2e
   140015b20:	xor    edx,edx
   140015b22:	mov    rcx,rdi
   140015b25:	call   0x140022de0
   140015b2a:	test   eax,eax
   140015b2c:	je     0x140015b50
   140015b2e:	xor    edx,edx
   140015b30:	lea    rcx,[rip+0x1b7ed]        # 0x140031324
   140015b37:	call   0x140022de0
   140015b3c:	lea    rdi,[rip+0x1b7e1]        # 0x140031324
   140015b43:	lea    rcx,[rip+0x1b7d6]        # 0x140031320
   140015b4a:	test   eax,eax
   140015b4c:	cmovne rdi,rcx
   140015b50:	test   rsi,rsi
   140015b53:	je     0x140015b60
   140015b55:	mov    rcx,rsi
   140015b58:	call   0x1400192e4
   140015b5d:	mov    r13,rax
   140015b60:	mov    rcx,rdi
   140015b63:	call   0x1400192e4
   140015b68:	lea    ecx,[rax+r13*1+0xc]
   140015b6d:	mov    r12d,ecx
   140015b70:	mov    rdx,rbx
   140015b73:	call   0x140012bd4
   140015b78:	mov    rbx,rax
   140015b7b:	test   rax,rax
   140015b7e:	je     0x140015cf8
   140015b84:	mov    WORD PTR [rax],r15w
   140015b88:	mov    r8,rdi
   140015b8b:	mov    edx,r12d
   140015b8e:	mov    rcx,rax
   140015b91:	call   0x140017684
   140015b96:	test   eax,eax
   140015b98:	jne    0x140015ce3
   140015b9e:	mov    rcx,rdi
   140015ba1:	call   0x1400192e4
   140015ba6:	cmp    WORD PTR [rdi+rax*2-0x2],0x5c
   140015bac:	je     0x140015be1
   140015bae:	cmp    WORD PTR [rdi+rax*2-0x2],0x2f
   140015bb4:	je     0x140015be1
   140015bb6:	lea    r8,[rip+0x1b767]        # 0x140031324
   140015bbd:	mov    edx,r12d
   140015bc0:	mov    rcx,rbx
   140015bc3:	call   0x140017684
   140015bc8:	test   eax,eax
   140015bca:	je     0x140015be1
   140015bcc:	mov    QWORD PTR [rsp+0x20],r15
   140015bd1:	xor    r9d,r9d
   140015bd4:	xor    r8d,r8d
   140015bd7:	xor    edx,edx
   140015bd9:	xor    ecx,ecx
   140015bdb:	call   0x140019ed0
   140015be0:	int3   
   140015be1:	test   rsi,rsi
   140015be4:	je     0x140015c0d
   140015be6:	mov    r8,rsi
   140015be9:	mov    rdx,r12
   140015bec:	mov    rcx,rbx
   140015bef:	call   0x140017684
   140015bf4:	test   eax,eax
   140015bf6:	je     0x140015c0d
   140015bf8:	mov    QWORD PTR [rsp+0x20],r15
   140015bfd:	xor    r9d,r9d
   140015c00:	xor    r8d,r8d
   140015c03:	xor    edx,edx
   140015c05:	xor    ecx,ecx
   140015c07:	call   0x140019ed0
   140015c0c:	int3   
   140015c0d:	mov    rcx,rbx
   140015c10:	call   0x1400192e4
   140015c15:	lea    r14,[rbx+rax*2]
   140015c19:	mov    ecx,0x2
   140015c1e:	call   0x14001ccc8
   140015c23:	nop
   140015c24:	mov    edi,DWORD PTR [rip+0x2b222]        # 0x140040e4c
   140015c2a:	mov    eax,0x1
   140015c2f:	cmp    DWORD PTR [rip+0x406e2],r13d        # 0x140056318
   140015c36:	cmovb  edi,eax
   140015c39:	mov    DWORD PTR [rip+0x2b20d],edi        # 0x140040e4c
   140015c3f:	mov    DWORD PTR [rip+0x406d2],r13d        # 0x140056318
   140015c46:	call   0x14001583c
   140015c4b:	mov    esi,DWORD PTR [rax]
   140015c4d:	mov    ecx,DWORD PTR [rip+0x2b1f9]        # 0x140040e4c
   140015c53:	inc    ecx
   140015c55:	mov    DWORD PTR [rip+0x2b1f1],ecx        # 0x140040e4c
   140015c5b:	mov    eax,ecx
   140015c5d:	sub    eax,edi
   140015c5f:	cmp    eax,0x7fffffff
   140015c64:	jbe    0x140015c7a
   140015c66:	call   0x14001583c
   140015c6b:	mov    DWORD PTR [rax],esi
   140015c6d:	mov    rcx,rbx
   140015c70:	call   0x1400130a8
   140015c75:	mov    rbx,r15
   140015c78:	jmp    0x140015cc2
   140015c7a:	mov    rax,r14
   140015c7d:	sub    rax,rbx
   140015c80:	sar    rax,1
   140015c83:	mov    r8,r12
   140015c86:	sub    r8,rax
   140015c89:	mov    r9d,0xa
   140015c8f:	mov    rdx,r14
   140015c92:	call   0x140022d2c
   140015c97:	test   eax,eax
   140015c99:	jne    0x140015cce
   140015c9b:	call   0x14001583c
   140015ca0:	mov    DWORD PTR [rax],r15d
   140015ca3:	xor    edx,edx
   140015ca5:	mov    rcx,rbx
   140015ca8:	call   0x140022de0
   140015cad:	test   eax,eax
   140015caf:	je     0x140015c4d
   140015cb1:	call   0x14001583c
   140015cb6:	cmp    DWORD PTR [rax],0xd
   140015cb9:	je     0x140015c4d
   140015cbb:	call   0x14001583c
   140015cc0:	mov    DWORD PTR [rax],esi
   140015cc2:	mov    ecx,0x2
   140015cc7:	call   0x14001cbc8
   140015ccc:	jmp    0x140015cf8
   140015cce:	mov    QWORD PTR [rsp+0x20],r15
   140015cd3:	xor    r9d,r9d
   140015cd6:	xor    r8d,r8d
   140015cd9:	xor    edx,edx
   140015cdb:	xor    ecx,ecx
   140015cdd:	call   0x140019ed0
   140015ce2:	nop
   140015ce3:	mov    QWORD PTR [rsp+0x20],r15
   140015ce8:	xor    r9d,r9d
   140015ceb:	xor    r8d,r8d
   140015cee:	xor    edx,edx
   140015cf0:	xor    ecx,ecx
   140015cf2:	call   0x140019ed0
   140015cf7:	int3   
   140015cf8:	mov    rcx,QWORD PTR [rsp+0x70]
   140015cfd:	call   0x1400130a8
   140015d02:	mov    rcx,r15
   140015d05:	call   0x1400130a8
   140015d0a:	mov    rax,rbx
   140015d0d:	mov    rbx,QWORD PTR [rsp+0x60]
   140015d12:	mov    rsi,QWORD PTR [rsp+0x68]
   140015d17:	add    rsp,0x30
   140015d1b:	pop    r15
   140015d1d:	pop    r14
   140015d1f:	pop    r13
   140015d21:	pop    r12
   140015d23:	pop    rdi
   140015d24:	ret    
   140015d25:	int3   
   140015d26:	int3   
   140015d27:	int3   
   140015d28:	mov    QWORD PTR [rsp+0x10],rbx
   140015d2d:	mov    QWORD PTR [rsp+0x18],r8
   140015d32:	mov    QWORD PTR [rsp+0x8],rcx
   140015d37:	push   rbp
   140015d38:	push   rsi
   140015d39:	push   rdi
   140015d3a:	push   r12
   140015d3c:	push   r13
   140015d3e:	push   r14
   140015d40:	push   r15
   140015d42:	mov    rbp,rsp
   140015d45:	sub    rsp,0x80
   140015d4c:	xor    edi,edi
   140015d4e:	mov    r13b,0x80
   140015d51:	mov    esi,r9d
   140015d54:	mov    rbx,rdx
   140015d57:	mov    DWORD PTR [rbp-0x18],0x18
   140015d5e:	lea    r12d,[rdi+0x1]
   140015d62:	mov    DWORD PTR [rbp-0x28],edi
   140015d65:	mov    BYTE PTR [rbp+0x58],dil
   140015d69:	mov    QWORD PTR [rbp-0x10],rdi
   140015d6d:	test   r13b,r9b
   140015d70:	je     0x140015d7a
   140015d72:	mov    DWORD PTR [rbp-0x8],edi
   140015d75:	mov    r15b,0x10
   140015d78:	jmp    0x140015d81
   140015d7a:	mov    DWORD PTR [rbp-0x8],r12d
   140015d7e:	mov    r15b,dil
   140015d81:	lea    rcx,[rbp-0x28]
   140015d85:	call   0x140023b1c
   140015d8a:	test   eax,eax
   140015d8c:	jne    0x1400164bb
   140015d92:	mov    eax,0x8000
   140015d97:	test   eax,esi
   140015d99:	jne    0x140015dab
   140015d9b:	test   esi,0x74000
   140015da1:	jne    0x140015da8
   140015da3:	cmp    DWORD PTR [rbp-0x28],eax
   140015da6:	je     0x140015dab
   140015da8:	or     r15b,r13b
   140015dab:	mov    ecx,esi
   140015dad:	mov    r9d,0x3
   140015db3:	mov    eax,0xc0000000
   140015db8:	and    ecx,r9d
   140015dbb:	mov    r8d,0x80000000
   140015dc1:	je     0x140015e1e
   140015dc3:	dec    ecx
   140015dc5:	je     0x140015e08
   140015dc7:	dec    ecx
   140015dc9:	je     0x140015e03
   140015dcb:	call   0x14001585c
   140015dd0:	mov    DWORD PTR [rax],edi
   140015dd2:	or     DWORD PTR [rbx],0xffffffff
   140015dd5:	call   0x14001583c
   140015dda:	mov    ebx,0x16
   140015ddf:	mov    DWORD PTR [rax],ebx
   140015de1:	call   0x140019f74
   140015de6:	mov    eax,ebx
   140015de8:	mov    rbx,QWORD PTR [rsp+0xc8]
   140015df0:	add    rsp,0x80
   140015df7:	pop    r15
   140015df9:	pop    r14
   140015dfb:	pop    r13
   140015dfd:	pop    r12
   140015dff:	pop    rdi
   140015e00:	pop    rsi
   140015e01:	pop    rbp
   140015e02:	ret    
   140015e03:	mov    r14d,eax
   140015e06:	jmp    0x140015e21
   140015e08:	test   sil,0x8
   140015e0c:	je     0x140015e16
   140015e0e:	test   esi,0x70000
   140015e14:	jne    0x140015e03
   140015e16:	mov    r14d,0x40000000
   140015e1c:	jmp    0x140015e21
   140015e1e:	mov    r14d,r8d
   140015e21:	mov    ecx,DWORD PTR [rbp+0x60]
   140015e24:	mov    DWORD PTR [rbp-0x40],r14d
   140015e28:	mov    r13d,0x2
   140015e2e:	sub    ecx,0x10
   140015e31:	je     0x140015e60
   140015e33:	sub    ecx,0x10
   140015e36:	je     0x140015e5b
   140015e38:	sub    ecx,0x10
   140015e3b:	je     0x140015e56
   140015e3d:	sub    ecx,0x10
   140015e40:	je     0x140015e51
   140015e42:	cmp    ecx,0x40
   140015e45:	jne    0x140015dcb
   140015e47:	cmp    r14d,r8d
   140015e4a:	mov    edx,edi
   140015e4c:	sete   dl
   140015e4f:	jmp    0x140015e62
   140015e51:	mov    edx,r9d
   140015e54:	jmp    0x140015e62
   140015e56:	mov    edx,r13d
   140015e59:	jmp    0x140015e62
   140015e5b:	mov    edx,r12d
   140015e5e:	jmp    0x140015e62
   140015e60:	mov    edx,edi
   140015e62:	mov    eax,esi
   140015e64:	mov    ecx,0x700
   140015e69:	mov    DWORD PTR [rbp-0x3c],edx
   140015e6c:	and    eax,ecx
   140015e6e:	mov    r8d,0x100
   140015e74:	je     0x140015ebc
   140015e76:	cmp    eax,r8d
   140015e79:	je     0x140015eb4
   140015e7b:	cmp    eax,0x200
   140015e80:	je     0x140015eac
   140015e82:	cmp    eax,0x300
   140015e87:	je     0x140015ea7
   140015e89:	cmp    eax,0x400
   140015e8e:	je     0x140015ebc
   140015e90:	cmp    eax,0x500
   140015e95:	je     0x140015ebf
   140015e97:	cmp    eax,0x600
   140015e9c:	je     0x140015eac
   140015e9e:	cmp    eax,ecx
   140015ea0:	je     0x140015ebf
   140015ea2:	jmp    0x140015dcb
   140015ea7:	mov    r12d,r13d
   140015eaa:	jmp    0x140015ebf
   140015eac:	mov    r12d,0x5
   140015eb2:	jmp    0x140015ebf
   140015eb4:	mov    r12d,0x4
   140015eba:	jmp    0x140015ebf
   140015ebc:	mov    r12d,r9d
   140015ebf:	mov    ecx,0x80
   140015ec4:	mov    DWORD PTR [rbp-0x34],ecx
   140015ec7:	test   r8d,esi
   140015eca:	je     0x140015ee2
   140015ecc:	mov    al,BYTE PTR [rip+0x3f47e]        # 0x140055350
   140015ed2:	not    al
   140015ed4:	and    al,BYTE PTR [rbp+0x68]
   140015ed7:	test   al,0x80
   140015ed9:	lea    eax,[rcx-0x7f]
   140015edc:	cmove  ecx,eax
   140015edf:	mov    DWORD PTR [rbp-0x34],ecx
   140015ee2:	test   sil,0x40
   140015ee6:	je     0x140015efe
   140015ee8:	bts    ecx,0x1a
   140015eec:	bts    r14d,0x10
   140015ef1:	or     edx,0x4
   140015ef4:	mov    DWORD PTR [rbp-0x3c],edx
   140015ef7:	mov    DWORD PTR [rbp-0x34],ecx
   140015efa:	mov    DWORD PTR [rbp-0x40],r14d
   140015efe:	bt     esi,0xc
   140015f02:	jae    0x140015f0a
   140015f04:	or     ecx,r8d
   140015f07:	mov    DWORD PTR [rbp-0x34],ecx
   140015f0a:	test   sil,0x20
   140015f0e:	je     0x140015f16
   140015f10:	bts    ecx,0x1b
   140015f14:	jmp    0x140015f20
   140015f16:	test   sil,0x10
   140015f1a:	je     0x140015f23
   140015f1c:	bts    ecx,0x1c
   140015f20:	mov    DWORD PTR [rbp-0x34],ecx
   140015f23:	call   0x1400226f8
   140015f28:	mov    DWORD PTR [rbx],eax
   140015f2a:	cmp    eax,0xffffffff
   140015f2d:	jne    0x140015f50
   140015f2f:	call   0x14001585c
   140015f34:	mov    DWORD PTR [rax],edi
   140015f36:	or     DWORD PTR [rbx],0xffffffff
   140015f39:	call   0x14001583c
   140015f3e:	mov    DWORD PTR [rax],0x18
   140015f44:	call   0x14001583c
   140015f49:	mov    eax,DWORD PTR [rax]
   140015f4b:	jmp    0x140015de8
   140015f50:	mov    rax,QWORD PTR [rbp+0x40]
   140015f54:	mov    r8d,DWORD PTR [rbp-0x3c]
   140015f58:	mov    rcx,QWORD PTR [rbp+0x50]
   140015f5c:	mov    DWORD PTR [rax],0x1
   140015f62:	mov    eax,DWORD PTR [rbp-0x34]
   140015f65:	mov    QWORD PTR [rsp+0x30],rdi
   140015f6a:	mov    DWORD PTR [rsp+0x28],eax
   140015f6e:	lea    r9,[rbp-0x18]
   140015f72:	mov    edx,r14d
   140015f75:	mov    DWORD PTR [rsp+0x20],r12d
   140015f7a:	call   QWORD PTR [rip+0x19138]        # 0x14002f0b8
   140015f80:	mov    QWORD PTR [rbp-0x20],rax
   140015f84:	cmp    rax,0xffffffffffffffff
   140015f88:	jne    0x140016019
   140015f8e:	mov    ecx,0xc0000000
   140015f93:	mov    eax,r14d
   140015f96:	and    eax,ecx
   140015f98:	cmp    eax,ecx
   140015f9a:	jne    0x140015fdf
   140015f9c:	mov    eax,0x1
   140015fa1:	test   al,sil
   140015fa4:	je     0x140015fdf
   140015fa6:	mov    eax,DWORD PTR [rbp-0x34]
   140015fa9:	mov    r8d,DWORD PTR [rbp-0x3c]
   140015fad:	mov    rcx,QWORD PTR [rbp+0x50]
   140015fb1:	btr    r14d,0x1f
   140015fb6:	mov    QWORD PTR [rsp+0x30],rdi
   140015fbb:	mov    DWORD PTR [rsp+0x28],eax
   140015fbf:	lea    r9,[rbp-0x18]
   140015fc3:	mov    edx,r14d
   140015fc6:	mov    DWORD PTR [rsp+0x20],r12d
   140015fcb:	mov    DWORD PTR [rbp-0x40],r14d
   140015fcf:	call   QWORD PTR [rip+0x190e3]        # 0x14002f0b8
   140015fd5:	mov    QWORD PTR [rbp-0x20],rax
   140015fd9:	cmp    rax,0xffffffffffffffff
   140015fdd:	jne    0x140016019
   140015fdf:	movsxd rcx,DWORD PTR [rbx]
   140015fe2:	lea    r14,[rip+0x40637]        # 0x140056620
   140015fe9:	mov    rax,rcx
   140015fec:	and    ecx,0x1f
   140015fef:	sar    rax,0x5
   140015ff3:	imul   rcx,rcx,0x58
   140015ff7:	mov    rax,QWORD PTR [r14+rax*8]
   140015ffb:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140016000:	call   QWORD PTR [rip+0x190aa]        # 0x14002f0b0
   140016006:	mov    ecx,eax
   140016008:	call   0x14001587c
   14001600d:	call   0x14001583c
   140016012:	mov    edi,DWORD PTR [rax]
   140016014:	jmp    0x1400164b4
   140016019:	mov    rcx,rax
   14001601c:	call   QWORD PTR [rip+0x19276]        # 0x14002f298
   140016022:	test   eax,eax
   140016024:	jne    0x140016071
   140016026:	movsxd rcx,DWORD PTR [rbx]
   140016029:	lea    r14,[rip+0x405f0]        # 0x140056620
   140016030:	mov    rax,rcx
   140016033:	and    ecx,0x1f
   140016036:	sar    rax,0x5
   14001603a:	imul   rcx,rcx,0x58
   14001603e:	mov    rax,QWORD PTR [r14+rax*8]
   140016042:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140016047:	call   QWORD PTR [rip+0x19063]        # 0x14002f0b0
   14001604d:	mov    ecx,eax
   14001604f:	mov    ebx,eax
   140016051:	call   0x14001587c
   140016056:	mov    rcx,QWORD PTR [rbp-0x20]
   14001605a:	call   QWORD PTR [rip+0x18fd8]        # 0x14002f038
   140016060:	test   ebx,ebx
   140016062:	jne    0x14001600d
   140016064:	call   0x14001583c
   140016069:	mov    DWORD PTR [rax],0xd
   14001606f:	jmp    0x14001600d
   140016071:	cmp    eax,r13d
   140016074:	jne    0x14001607c
   140016076:	or     r15b,0x40
   14001607a:	jmp    0x140016085
   14001607c:	cmp    eax,0x3
   14001607f:	jne    0x140016085
   140016081:	or     r15b,0x8
   140016085:	mov    rdx,QWORD PTR [rbp-0x20]
   140016089:	mov    ecx,DWORD PTR [rbx]
   14001608b:	call   0x140022458
   140016090:	movsxd rcx,DWORD PTR [rbx]
   140016093:	lea    r14,[rip+0x40586]        # 0x140056620
   14001609a:	mov    rax,rcx
   14001609d:	and    ecx,0x1f
   1400160a0:	mov    r8d,0x1
   1400160a6:	sar    rax,0x5
   1400160aa:	or     r15b,r8b
   1400160ad:	mov    rax,QWORD PTR [r14+rax*8]
   1400160b1:	imul   rcx,rcx,0x58
   1400160b5:	mov    BYTE PTR [rax+rcx*1+0x8],r15b
   1400160ba:	movsxd rcx,DWORD PTR [rbx]
   1400160bd:	mov    rax,rcx
   1400160c0:	and    ecx,0x1f
   1400160c3:	sar    rax,0x5
   1400160c7:	imul   rcx,rcx,0x58
   1400160cb:	mov    rax,QWORD PTR [r14+rax*8]
   1400160cf:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   1400160d4:	mov    al,r15b
   1400160d7:	and    al,0x48
   1400160d9:	mov    BYTE PTR [rbp-0x30],al
   1400160dc:	jne    0x140016165
   1400160e2:	test   r15b,r15b
   1400160e5:	jns    0x140016390
   1400160eb:	test   r13b,sil
   1400160ee:	je     0x140016165
   1400160f0:	mov    ecx,DWORD PTR [rbx]
   1400160f2:	mov    r8d,r13d
   1400160f5:	or     edx,0xffffffff
   1400160f8:	call   0x1400239b4
   1400160fd:	mov    DWORD PTR [rbp-0x38],eax
   140016100:	cmp    eax,0xffffffff
   140016103:	jne    0x14001611e
   140016105:	call   0x14001585c
   14001610a:	cmp    DWORD PTR [rax],0x83
   140016110:	je     0x14001615f
   140016112:	mov    ecx,DWORD PTR [rbx]
   140016114:	call   0x14001590c
   140016119:	jmp    0x14001600d
   14001611e:	mov    ecx,DWORD PTR [rbx]
   140016120:	lea    rdx,[rbp-0x2c]
   140016124:	mov    r8d,0x1
   14001612a:	mov    WORD PTR [rbp-0x2c],di
   14001612e:	call   0x140023174
   140016133:	test   eax,eax
   140016135:	jne    0x14001614e
   140016137:	cmp    WORD PTR [rbp-0x2c],0x1a
   14001613c:	jne    0x14001614e
   14001613e:	movsxd rdx,DWORD PTR [rbp-0x38]
   140016142:	mov    ecx,DWORD PTR [rbx]
   140016144:	call   0x140022fdc
   140016149:	cmp    eax,0xffffffff
   14001614c:	je     0x140016112
   14001614e:	mov    ecx,DWORD PTR [rbx]
   140016150:	xor    r8d,r8d
   140016153:	xor    edx,edx
   140016155:	call   0x1400239b4
   14001615a:	cmp    eax,0xffffffff
   14001615d:	je     0x140016112
   14001615f:	mov    r8d,0x1
   140016165:	test   r15b,r15b
   140016168:	jns    0x140016390
   14001616e:	mov    edx,0x74000
   140016173:	mov    ecx,0x4000
   140016178:	test   edx,esi
   14001617a:	jne    0x140016189
   14001617c:	mov    eax,DWORD PTR [rbp-0x28]
   14001617f:	and    eax,edx
   140016181:	jne    0x140016187
   140016183:	or     esi,ecx
   140016185:	jmp    0x140016189
   140016187:	or     esi,eax
   140016189:	mov    eax,esi
   14001618b:	and    eax,edx
   14001618d:	cmp    eax,ecx
   14001618f:	je     0x1400161d4
   140016191:	cmp    eax,0x10000
   140016196:	je     0x1400161c1
   140016198:	cmp    eax,0x14000
   14001619d:	je     0x1400161c1
   14001619f:	cmp    eax,0x20000
   1400161a4:	je     0x1400161ce
   1400161a6:	cmp    eax,0x24000
   1400161ab:	je     0x1400161ce
   1400161ad:	cmp    eax,0x40000
   1400161b2:	je     0x1400161bb
   1400161b4:	cmp    eax,0x44000
   1400161b9:	jne    0x1400161d8
   1400161bb:	mov    BYTE PTR [rbp+0x58],r8b
   1400161bf:	jmp    0x1400161d8
   1400161c1:	mov    ecx,0x301
   1400161c6:	mov    eax,esi
   1400161c8:	and    eax,ecx
   1400161ca:	cmp    eax,ecx
   1400161cc:	jne    0x1400161d8
   1400161ce:	mov    BYTE PTR [rbp+0x58],r13b
   1400161d2:	jmp    0x1400161d8
   1400161d4:	mov    BYTE PTR [rbp+0x58],dil
   1400161d8:	test   esi,0x70000
   1400161de:	je     0x140016390
   1400161e4:	test   r15b,0x40
   1400161e8:	mov    r15d,DWORD PTR [rbp-0x40]
   1400161ec:	mov    DWORD PTR [rbp-0x38],edi
   1400161ef:	jne    0x140016394
   1400161f5:	mov    eax,r15d
   1400161f8:	mov    ecx,0xc0000000
   1400161fd:	and    eax,ecx
   1400161ff:	cmp    eax,0x40000000
   140016204:	je     0x140016317
   14001620a:	cmp    eax,0x80000000
   14001620f:	je     0x140016281
   140016211:	cmp    eax,ecx
   140016213:	jne    0x140016394
   140016219:	test   r12d,r12d
   14001621c:	je     0x140016394
   140016222:	cmp    r12d,r13d
   140016225:	jbe    0x140016237
   140016227:	cmp    r12d,0x4
   14001622b:	jbe    0x14001625a
   14001622d:	cmp    r12d,0x5
   140016231:	jne    0x140016394
   140016237:	movsx  ecx,BYTE PTR [rbp+0x58]
   14001623b:	mov    r12d,edi
   14001623e:	dec    ecx
   140016240:	je     0x14001635b
   140016246:	dec    ecx
   140016248:	jne    0x140016394
   14001624e:	mov    DWORD PTR [rbp-0x38],0xfeff
   140016255:	jmp    0x140016368
   14001625a:	mov    ecx,DWORD PTR [rbx]
   14001625c:	mov    r8d,r13d
   14001625f:	xor    edx,edx
   140016261:	call   0x140022e60
   140016266:	test   rax,rax
   140016269:	je     0x140016237
   14001626b:	mov    ecx,DWORD PTR [rbx]
   14001626d:	xor    r8d,r8d
   140016270:	xor    edx,edx
   140016272:	call   0x140022e60
   140016277:	cmp    rax,0xffffffffffffffff
   14001627b:	je     0x140016112
   140016281:	mov    ecx,DWORD PTR [rbx]
   140016283:	lea    rdx,[rbp-0x38]
   140016287:	mov    r8d,0x3
   14001628d:	call   0x140023174
   140016292:	cmp    eax,0xffffffff
   140016295:	je     0x140016112
   14001629b:	cmp    eax,r13d
   14001629e:	je     0x1400162bb
   1400162a0:	cmp    eax,0x3
   1400162a3:	jne    0x140016306
   1400162a5:	cmp    DWORD PTR [rbp-0x38],0xbfbbef
   1400162ac:	jne    0x1400162bb
   1400162ae:	lea    r8d,[rax-0x2]
   1400162b2:	mov    BYTE PTR [rbp+0x58],r8b
   1400162b6:	jmp    0x14001639a
   1400162bb:	movzx  eax,WORD PTR [rbp-0x38]
   1400162bf:	cmp    eax,0xfffe
   1400162c4:	jne    0x1400162e0
   1400162c6:	mov    ecx,DWORD PTR [rbx]
   1400162c8:	call   0x14001590c
   1400162cd:	call   0x14001583c
   1400162d2:	mov    ebx,0x16
   1400162d7:	mov    DWORD PTR [rax],ebx
   1400162d9:	mov    edi,ebx
   1400162db:	jmp    0x1400164b4
   1400162e0:	cmp    eax,0xfeff
   1400162e5:	jne    0x140016306
   1400162e7:	mov    ecx,DWORD PTR [rbx]
   1400162e9:	xor    r8d,r8d
   1400162ec:	mov    edx,r13d
   1400162ef:	call   0x1400239b4
   1400162f4:	cmp    eax,0xffffffff
   1400162f7:	je     0x140016112
   1400162fd:	mov    BYTE PTR [rbp+0x58],r13b
   140016301:	jmp    0x140016394
   140016306:	mov    ecx,DWORD PTR [rbx]
   140016308:	xor    r8d,r8d
   14001630b:	xor    edx,edx
   14001630d:	call   0x1400239b4
   140016312:	cmp    eax,0xffffffff
   140016315:	jmp    0x140016354
   140016317:	test   r12d,r12d
   14001631a:	je     0x140016394
   14001631c:	cmp    r12d,r13d
   14001631f:	jbe    0x140016237
   140016325:	cmp    r12d,0x4
   140016329:	ja     0x14001622d
   14001632f:	mov    ecx,DWORD PTR [rbx]
   140016331:	mov    r8d,r13d
   140016334:	xor    edx,edx
   140016336:	call   0x140022e60
   14001633b:	test   rax,rax
   14001633e:	je     0x140016237
   140016344:	mov    ecx,DWORD PTR [rbx]
   140016346:	xor    r8d,r8d
   140016349:	xor    edx,edx
   14001634b:	call   0x140022e60
   140016350:	cmp    rax,0xffffffffffffffff
   140016354:	jne    0x140016394
   140016356:	jmp    0x140016112
   14001635b:	mov    DWORD PTR [rbp-0x38],0xbfbbef
   140016362:	mov    r13d,0x3
   140016368:	mov    ecx,DWORD PTR [rbx]
   14001636a:	movsxd rax,r12d
   14001636d:	mov    r8d,r13d
   140016370:	lea    rdx,[rbp+rax*1-0x38]
   140016375:	sub    r8d,r12d
   140016378:	call   0x140021bcc
   14001637d:	cmp    eax,0xffffffff
   140016380:	je     0x140016112
   140016386:	add    r12d,eax
   140016389:	cmp    r13d,r12d
   14001638c:	jg     0x140016368
   14001638e:	jmp    0x140016394
   140016390:	mov    r15d,DWORD PTR [rbp-0x40]
   140016394:	mov    r8d,0x1
   14001639a:	movsxd rcx,DWORD PTR [rbx]
   14001639d:	mov    r12b,BYTE PTR [rbp+0x58]
   1400163a1:	mov    rax,rcx
   1400163a4:	and    ecx,0x1f
   1400163a7:	and    r12b,0x7f
   1400163ab:	sar    rax,0x5
   1400163af:	imul   rcx,rcx,0x58
   1400163b3:	mov    rax,QWORD PTR [r14+rax*8]
   1400163b7:	and    BYTE PTR [rax+rcx*1+0x38],0x80
   1400163bc:	or     BYTE PTR [rax+rcx*1+0x38],r12b
   1400163c1:	movsxd rdx,DWORD PTR [rbx]
   1400163c4:	mov    rax,rdx
   1400163c7:	and    edx,0x1f
   1400163ca:	sar    rax,0x5
   1400163ce:	imul   rdx,rdx,0x58
   1400163d2:	mov    rcx,QWORD PTR [r14+rax*8]
   1400163d6:	mov    eax,esi
   1400163d8:	and    BYTE PTR [rcx+rdx*1+0x38],0x7f
   1400163dd:	shr    eax,0x10
   1400163e0:	shl    al,0x7
   1400163e3:	or     BYTE PTR [rcx+rdx*1+0x38],al
   1400163e7:	cmp    BYTE PTR [rbp-0x30],dil
   1400163eb:	jne    0x14001640d
   1400163ed:	test   sil,0x8
   1400163f1:	je     0x14001640d
   1400163f3:	movsxd rcx,DWORD PTR [rbx]
   1400163f6:	mov    rax,rcx
   1400163f9:	and    ecx,0x1f
   1400163fc:	sar    rax,0x5
   140016400:	imul   rcx,rcx,0x58
   140016404:	mov    rax,QWORD PTR [r14+rax*8]
   140016408:	or     BYTE PTR [rax+rcx*1+0x8],0x20
   14001640d:	mov    ecx,0xc0000000
   140016412:	mov    eax,r15d
   140016415:	and    eax,ecx
   140016417:	cmp    eax,ecx
   140016419:	jne    0x1400164b4
   14001641f:	test   r8b,sil
   140016422:	je     0x1400164b4
   140016428:	mov    rcx,QWORD PTR [rbp-0x20]
   14001642c:	call   QWORD PTR [rip+0x18c06]        # 0x14002f038
   140016432:	mov    eax,DWORD PTR [rbp-0x34]
   140016435:	mov    r8d,DWORD PTR [rbp-0x3c]
   140016439:	mov    rcx,QWORD PTR [rbp+0x50]
   14001643d:	mov    QWORD PTR [rsp+0x30],rdi
   140016442:	mov    DWORD PTR [rsp+0x28],eax
   140016446:	btr    r15d,0x1f
   14001644b:	lea    r9,[rbp-0x18]
   14001644f:	mov    DWORD PTR [rsp+0x20],0x3
   140016457:	mov    edx,r15d
   14001645a:	call   QWORD PTR [rip+0x18c58]        # 0x14002f0b8
   140016460:	cmp    rax,0xffffffffffffffff
   140016464:	jne    0x14001649b
   140016466:	call   QWORD PTR [rip+0x18c44]        # 0x14002f0b0
   14001646c:	mov    ecx,eax
   14001646e:	call   0x14001587c
   140016473:	movsxd r11,DWORD PTR [rbx]
   140016476:	mov    rax,r11
   140016479:	and    r11d,0x1f
   14001647d:	sar    rax,0x5
   140016481:	imul   r11,r11,0x58
   140016485:	mov    rax,QWORD PTR [r14+rax*8]
   140016489:	and    BYTE PTR [rax+r11*1+0x8],0xfe
   14001648f:	mov    ecx,DWORD PTR [rbx]
   140016491:	call   0x140022508
   140016496:	jmp    0x14001600d
   14001649b:	movsxd rdx,DWORD PTR [rbx]
   14001649e:	mov    rcx,rdx
   1400164a1:	and    edx,0x1f
   1400164a4:	sar    rcx,0x5
   1400164a8:	imul   rdx,rdx,0x58
   1400164ac:	mov    rcx,QWORD PTR [r14+rcx*8]
   1400164b0:	mov    QWORD PTR [rdx+rcx*1],rax
   1400164b4:	mov    eax,edi
   1400164b6:	jmp    0x140015de8
   1400164bb:	xor    r9d,r9d
   1400164be:	xor    r8d,r8d
   1400164c1:	xor    edx,edx
   1400164c3:	xor    ecx,ecx
   1400164c5:	mov    QWORD PTR [rsp+0x20],rdi
   1400164ca:	call   0x140019ed0
   1400164cf:	int3   
   1400164d0:	mov    rax,rsp
   1400164d3:	mov    DWORD PTR [rax+0x10],edx
   1400164d6:	mov    QWORD PTR [rax+0x18],r8
   1400164da:	mov    QWORD PTR [rax+0x20],r9
   1400164de:	push   rbx
   1400164df:	push   rdi
   1400164e0:	sub    rsp,0x48
   1400164e4:	or     DWORD PTR [rax-0x28],0xffffffff
   1400164e8:	and    DWORD PTR [rax-0x24],0x0
   1400164ec:	xor    r8d,r8d
   1400164ef:	test   rcx,rcx
   1400164f2:	setne  r8b
   1400164f6:	test   r8d,r8d
   1400164f9:	jne    0x140016513
   1400164fb:	call   0x14001583c
   140016500:	mov    DWORD PTR [rax],0x16
   140016506:	call   0x140019f74
   14001650b:	or     eax,0xffffffff
   14001650e:	jmp    0x14001659e
   140016513:	lea    rax,[rsp+0x70]
   140016518:	add    rax,0x8
   14001651c:	mov    r8d,DWORD PTR [rax-0x8]
   140016520:	mov    DWORD PTR [rsp+0x28],r8d
   140016525:	mov    DWORD PTR [rsp+0x20],0x40
   14001652d:	mov    r9d,edx
   140016530:	mov    r8,rcx
   140016533:	lea    rdx,[rsp+0x30]
   140016538:	lea    rcx,[rsp+0x34]
   14001653d:	call   0x140015d28
   140016542:	mov    edi,eax
   140016544:	mov    DWORD PTR [rsp+0x38],eax
   140016548:	cmp    DWORD PTR [rsp+0x34],0x0
   14001654d:	je     0x140016588
   14001654f:	test   eax,eax
   140016551:	je     0x14001657b
   140016553:	movsxd rbx,DWORD PTR [rsp+0x30]
   140016558:	mov    rcx,rbx
   14001655b:	mov    rax,rbx
   14001655e:	sar    rax,0x5
   140016562:	lea    rdx,[rip+0x400b7]        # 0x140056620
   140016569:	and    ecx,0x1f
   14001656c:	imul   rcx,rcx,0x58
   140016570:	mov    rax,QWORD PTR [rdx+rax*8]
   140016574:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140016579:	jmp    0x14001657f
   14001657b:	mov    ebx,DWORD PTR [rsp+0x30]
   14001657f:	mov    ecx,ebx
   140016581:	call   0x1400226d0
   140016586:	jmp    0x14001658c
   140016588:	mov    ebx,DWORD PTR [rsp+0x30]
   14001658c:	test   edi,edi
   14001658e:	je     0x14001659c
   140016590:	call   0x14001583c
   140016595:	mov    DWORD PTR [rax],edi
   140016597:	jmp    0x14001650b
   14001659c:	mov    eax,ebx
   14001659e:	add    rsp,0x48
   1400165a2:	pop    rdi
   1400165a3:	pop    rbx
   1400165a4:	ret    
   1400165a5:	int3   
   1400165a6:	int3   
   1400165a7:	int3   
   1400165a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400165ad:	push   rdi
   1400165ae:	sub    rsp,0x40
   1400165b2:	and    DWORD PTR [rsp+0x30],0x0
   1400165b7:	xor    eax,eax
   1400165b9:	mov    rdi,QWORD PTR [rsp+0x70]
   1400165be:	test   rdi,rdi
   1400165c1:	setne  al
   1400165c4:	test   eax,eax
   1400165c6:	jne    0x1400165e0
   1400165c8:	call   0x14001583c
   1400165cd:	mov    ebx,0x16
   1400165d2:	mov    DWORD PTR [rax],ebx
   1400165d4:	call   0x140019f74
   1400165d9:	mov    eax,ebx
   1400165db:	jmp    0x14001666f
   1400165e0:	or     DWORD PTR [rdi],0xffffffff
   1400165e3:	xor    eax,eax
   1400165e5:	test   rcx,rcx
   1400165e8:	setne  al
   1400165eb:	test   eax,eax
   1400165ed:	je     0x1400165c8
   1400165ef:	cmp    DWORD PTR [rsp+0x78],0x0
   1400165f4:	je     0x140016609
   1400165f6:	test   r9d,0xfffffe7f
   1400165fd:	mov    eax,0x0
   140016602:	sete   al
   140016605:	test   eax,eax
   140016607:	je     0x1400165c8
   140016609:	mov    DWORD PTR [rsp+0x28],r9d
   14001660e:	mov    DWORD PTR [rsp+0x20],r8d
   140016613:	mov    r9d,edx
   140016616:	mov    r8,rcx
   140016619:	mov    rdx,rdi
   14001661c:	lea    rcx,[rsp+0x30]
   140016621:	call   0x140015d28
   140016626:	mov    ebx,eax
   140016628:	mov    DWORD PTR [rsp+0x34],eax
   14001662c:	cmp    DWORD PTR [rsp+0x30],0x0
   140016631:	je     0x14001665f
   140016633:	test   eax,eax
   140016635:	je     0x140016658
   140016637:	movsxd rcx,DWORD PTR [rdi]
   14001663a:	mov    rax,rcx
   14001663d:	sar    rax,0x5
   140016641:	lea    rdx,[rip+0x3ffd8]        # 0x140056620
   140016648:	and    ecx,0x1f
   14001664b:	imul   rcx,rcx,0x58
   14001664f:	mov    rax,QWORD PTR [rdx+rax*8]
   140016653:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   140016658:	mov    ecx,DWORD PTR [rdi]
   14001665a:	call   0x1400226d0
   14001665f:	test   ebx,ebx
   140016661:	je     0x1400165d9
   140016667:	or     DWORD PTR [rdi],0xffffffff
   14001666a:	jmp    0x1400165d9
   14001666f:	mov    rbx,QWORD PTR [rsp+0x50]
   140016674:	add    rsp,0x40
   140016678:	pop    rdi
   140016679:	ret    
   14001667a:	int3   
   14001667b:	int3   
   14001667c:	sub    rsp,0x38
   140016680:	mov    eax,r9d
   140016683:	mov    r9d,DWORD PTR [rsp+0x60]
   140016688:	mov    r10d,r8d
   14001668b:	mov    r11,rdx
   14001668e:	mov    DWORD PTR [rsp+0x28],0x1
   140016696:	mov    QWORD PTR [rsp+0x20],rcx
   14001669b:	mov    r8d,eax
   14001669e:	mov    edx,r10d
   1400166a1:	mov    rcx,r11
   1400166a4:	call   0x1400165a8
   1400166a9:	add    rsp,0x38
   1400166ad:	ret    
   1400166ae:	int3   
   1400166af:	int3   
   1400166b0:	mov    rax,rsp
   1400166b3:	mov    QWORD PTR [rax+0x8],rbx
   1400166b7:	mov    QWORD PTR [rax+0x10],rsi
   1400166bb:	mov    QWORD PTR [rax+0x18],rdi
   1400166bf:	mov    QWORD PTR [rax+0x20],r12
   1400166c3:	push   rbp
   1400166c4:	mov    rbp,rsp
   1400166c7:	sub    rsp,0x50
   1400166cb:	and    QWORD PTR [rbp-0x30],0x0
   1400166d0:	mov    rdi,rdx
   1400166d3:	xor    edx,edx
   1400166d5:	mov    rsi,r8
   1400166d8:	mov    rbx,rcx
   1400166db:	lea    r8d,[rdx+0x28]
   1400166df:	lea    rcx,[rbp-0x28]
   1400166e3:	mov    r12,r9
   1400166e6:	call   0x140012fb0
   1400166eb:	test   rsi,rsi
   1400166ee:	jne    0x140016708
   1400166f0:	call   0x14001583c
   1400166f5:	mov    DWORD PTR [rax],0x16
   1400166fb:	call   0x140019f74
   140016700:	or     eax,0xffffffff
   140016703:	jmp    0x140016792
   140016708:	test   rdi,rdi
   14001670b:	je     0x140016712
   14001670d:	test   rbx,rbx
   140016710:	je     0x1400166f0
   140016712:	mov    DWORD PTR [rbp-0x18],0x42
   140016719:	mov    QWORD PTR [rbp-0x20],rbx
   14001671d:	mov    QWORD PTR [rbp-0x30],rbx
   140016721:	cmp    rdi,0x3fffffff
   140016728:	jbe    0x140016733
   14001672a:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140016731:	jmp    0x140016739
   140016733:	lea    eax,[rdi+rdi*1]
   140016736:	mov    DWORD PTR [rbp-0x28],eax
   140016739:	mov    r9,QWORD PTR [rbp+0x30]
   14001673d:	lea    rcx,[rbp-0x30]
   140016741:	mov    r8,r12
   140016744:	mov    rdx,rsi
   140016747:	call   0x14001e6d0
   14001674c:	mov    edi,eax
   14001674e:	test   rbx,rbx
   140016751:	je     0x140016792
   140016753:	dec    DWORD PTR [rbp-0x28]
   140016756:	js     0x14001676c
   140016758:	mov    rax,QWORD PTR [rbp-0x30]
   14001675c:	mov    BYTE PTR [rax],0x0
   14001675f:	mov    rax,QWORD PTR [rbp-0x30]
   140016763:	inc    rax
   140016766:	mov    QWORD PTR [rbp-0x30],rax
   14001676a:	jmp    0x14001677b
   14001676c:	lea    rdx,[rbp-0x30]
   140016770:	xor    ecx,ecx
   140016772:	call   0x14001e4a4
   140016777:	mov    rax,QWORD PTR [rbp-0x30]
   14001677b:	dec    DWORD PTR [rbp-0x28]
   14001677e:	js     0x140016785
   140016780:	mov    BYTE PTR [rax],0x0
   140016783:	jmp    0x140016790
   140016785:	lea    rdx,[rbp-0x30]
   140016789:	xor    ecx,ecx
   14001678b:	call   0x14001e4a4
   140016790:	mov    eax,edi
   140016792:	mov    rbx,QWORD PTR [rsp+0x60]
   140016797:	mov    rsi,QWORD PTR [rsp+0x68]
   14001679c:	mov    rdi,QWORD PTR [rsp+0x70]
   1400167a1:	mov    r12,QWORD PTR [rsp+0x78]
   1400167a6:	add    rsp,0x50
   1400167aa:	pop    rbp
   1400167ab:	ret    
   1400167ac:	sub    rsp,0x38
   1400167b0:	mov    QWORD PTR [rsp+0x20],r9
   1400167b5:	xor    r9d,r9d
   1400167b8:	call   0x1400166b0
   1400167bd:	add    rsp,0x38
   1400167c1:	ret    
   1400167c2:	int3   
   1400167c3:	int3   
   1400167c4:	mov    r11,rsp
   1400167c7:	mov    QWORD PTR [r11+0x20],r9
   1400167cb:	sub    rsp,0x38
   1400167cf:	lea    rax,[r11+0x28]
   1400167d3:	mov    QWORD PTR [r11-0x10],rax
   1400167d7:	and    QWORD PTR [r11-0x18],0x0
   1400167dc:	call   0x140023c34
   1400167e1:	add    rsp,0x38
   1400167e5:	ret    
   1400167e6:	int3   
   1400167e7:	int3   
   1400167e8:	mov    QWORD PTR [rsp+0x20],rbx
   1400167ed:	push   rbp
   1400167ee:	push   rsi
   1400167ef:	push   rdi
   1400167f0:	push   r12
   1400167f2:	push   r13
   1400167f4:	push   r14
   1400167f6:	push   r15
   1400167f8:	sub    rsp,0x20
   1400167fc:	mov    r13,rcx
   1400167ff:	mov    r14,rcx
   140016802:	mov    QWORD PTR [rsp+0x68],rcx
   140016807:	mov    rcx,rdx
   14001680a:	mov    r15,r9
   14001680d:	mov    r12,r8
   140016810:	mov    rsi,rdx
   140016813:	mov    QWORD PTR [rsp+0x70],rdx
   140016818:	test   r8,r8
   14001681b:	je     0x140016837
   14001681d:	test   r9,r9
   140016820:	je     0x140016837
   140016822:	test   r14,r14
   140016825:	jne    0x14001684e
   140016827:	call   0x14001583c
   14001682c:	mov    DWORD PTR [rax],0x16
   140016832:	call   0x140019f74
   140016837:	xor    eax,eax
   140016839:	mov    rbx,QWORD PTR [rsp+0x78]
   14001683e:	add    rsp,0x20
   140016842:	pop    r15
   140016844:	pop    r14
   140016846:	pop    r13
   140016848:	pop    r12
   14001684a:	pop    rdi
   14001684b:	pop    rsi
   14001684c:	pop    rbp
   14001684d:	ret    
   14001684e:	mov    rdi,QWORD PTR [rsp+0x80]
   140016856:	test   rdi,rdi
   140016859:	je     0x140016869
   14001685b:	xor    edx,edx
   14001685d:	or     rax,0xffffffffffffffff
   140016861:	div    r12
   140016864:	cmp    r9,rax
   140016867:	jbe    0x140016892
   140016869:	cmp    rsi,0xffffffffffffffff
   14001686d:	je     0x14001687f
   14001686f:	mov    r8,rsi
   140016872:	xor    edx,edx
   140016874:	mov    rcx,r13
   140016877:	call   0x140012fb0
   14001687c:	mov    rcx,rsi
   14001687f:	test   rdi,rdi
   140016882:	je     0x140016827
   140016884:	xor    edx,edx
   140016886:	or     rax,0xffffffffffffffff
   14001688a:	div    r12
   14001688d:	cmp    r15,rax
   140016890:	ja     0x140016827
   140016892:	mov    rbx,r12
   140016895:	imul   rbx,r15
   140016899:	test   DWORD PTR [rdi+0x18],0x10c
   1400168a0:	mov    rbp,rbx
   1400168a3:	je     0x1400168ab
   1400168a5:	mov    r9d,DWORD PTR [rdi+0x24]
   1400168a9:	jmp    0x1400168b1
   1400168ab:	mov    r9d,0x1000
   1400168b1:	mov    DWORD PTR [rsp+0x60],r9d
   1400168b6:	test   rbx,rbx
   1400168b9:	je     0x140016a17
   1400168bf:	test   DWORD PTR [rdi+0x18],0x10c
   1400168c6:	mov    r10d,0x7fffffff
   1400168cc:	je     0x14001692c
   1400168ce:	movsxd r14,DWORD PTR [rdi+0x8]
   1400168d2:	test   r14d,r14d
   1400168d5:	je     0x140016927
   1400168d7:	js     0x1400169fd
   1400168dd:	cmp    rbp,r14
   1400168e0:	cmovb  r14d,ebp
   1400168e4:	mov    r9d,r14d
   1400168e7:	cmp    r9,rcx
   1400168ea:	ja     0x1400169da
   1400168f0:	mov    r8,QWORD PTR [rdi]
   1400168f3:	mov    rdx,rcx
   1400168f6:	mov    rcx,QWORD PTR [rsp+0x68]
   1400168fb:	call   0x1400175fc
   140016900:	sub    DWORD PTR [rdi+0x8],r14d
   140016904:	mov    eax,r14d
   140016907:	mov    r14,QWORD PTR [rsp+0x68]
   14001690c:	sub    rbp,rax
   14001690f:	add    QWORD PTR [rdi],rax
   140016912:	mov    rcx,QWORD PTR [rsp+0x70]
   140016917:	mov    r9d,DWORD PTR [rsp+0x60]
   14001691c:	add    r14,rax
   14001691f:	sub    rcx,rax
   140016922:	jmp    0x1400169c8
   140016927:	mov    r14,QWORD PTR [rsp+0x68]
   14001692c:	mov    r8d,r9d
   14001692f:	cmp    rbp,r8
   140016932:	jb     0x14001699c
   140016934:	test   r9d,r9d
   140016937:	je     0x140016959
   140016939:	xor    edx,edx
   14001693b:	cmp    rbp,r10
   14001693e:	jbe    0x14001694b
   140016940:	mov    eax,r10d
   140016943:	mov    r14d,r10d
   140016946:	div    r9d
   140016949:	jmp    0x140016954
   14001694b:	mov    rax,rbp
   14001694e:	mov    r14d,ebp
   140016951:	div    r8
   140016954:	sub    r14d,edx
   140016957:	jmp    0x140016963
   140016959:	mov    r14d,ebp
   14001695c:	cmp    rbp,r10
   14001695f:	cmova  r14d,r10d
   140016963:	mov    eax,r14d
   140016966:	cmp    rax,rcx
   140016969:	ja     0x1400169da
   14001696b:	mov    rcx,rdi
   14001696e:	call   0x1400211a0
   140016973:	mov    r8d,r14d
   140016976:	mov    r14,QWORD PTR [rsp+0x68]
   14001697b:	mov    rdx,r14
   14001697e:	mov    ecx,eax
   140016980:	call   0x140023898
   140016985:	test   eax,eax
   140016987:	je     0x140016a11
   14001698d:	cmp    eax,0xffffffff
   140016990:	je     0x1400169fd
   140016992:	mov    eax,eax
   140016994:	sub    rbp,rax
   140016997:	jmp    0x140016912
   14001699c:	mov    rcx,rdi
   14001699f:	call   0x140023d7c
   1400169a4:	cmp    eax,0xffffffff
   1400169a7:	je     0x140016a01
   1400169a9:	mov    rcx,QWORD PTR [rsp+0x70]
   1400169ae:	test   rcx,rcx
   1400169b1:	je     0x1400169da
   1400169b3:	mov    BYTE PTR [r14],al
   1400169b6:	mov    r9d,DWORD PTR [rdi+0x24]
   1400169ba:	dec    rbp
   1400169bd:	inc    r14
   1400169c0:	dec    rcx
   1400169c3:	mov    DWORD PTR [rsp+0x60],r9d
   1400169c8:	mov    QWORD PTR [rsp+0x68],r14
   1400169cd:	mov    QWORD PTR [rsp+0x70],rcx
   1400169d2:	test   rbp,rbp
   1400169d5:	jmp    0x1400168b9
   1400169da:	cmp    rsi,0xffffffffffffffff
   1400169de:	je     0x1400169ed
   1400169e0:	mov    r8,rsi
   1400169e3:	xor    edx,edx
   1400169e5:	mov    rcx,r13
   1400169e8:	call   0x140012fb0
   1400169ed:	call   0x14001583c
   1400169f2:	mov    DWORD PTR [rax],0x22
   1400169f8:	jmp    0x140016832
   1400169fd:	or     DWORD PTR [rdi+0x18],0x20
   140016a01:	sub    rbx,rbp
   140016a04:	xor    edx,edx
   140016a06:	mov    rax,rbx
   140016a09:	div    r12
   140016a0c:	jmp    0x140016839
   140016a11:	or     DWORD PTR [rdi+0x18],0x10
   140016a15:	jmp    0x140016a01
   140016a17:	mov    rax,r15
   140016a1a:	jmp    0x140016839
   140016a1f:	int3   
   140016a20:	mov    rax,rsp
   140016a23:	mov    QWORD PTR [rax+0x8],rbx
   140016a27:	mov    QWORD PTR [rax+0x10],rsi
   140016a2b:	mov    QWORD PTR [rax+0x18],rdi
   140016a2f:	mov    QWORD PTR [rax+0x20],r12
   140016a33:	push   r13
   140016a35:	sub    rsp,0x30
   140016a39:	mov    rsi,r9
   140016a3c:	mov    r13,r8
   140016a3f:	mov    rdi,rdx
   140016a42:	mov    r12,rcx
   140016a45:	test   r8,r8
   140016a48:	je     0x140016aaa
   140016a4a:	test   r9,r9
   140016a4d:	je     0x140016aaa
   140016a4f:	mov    rbx,QWORD PTR [rsp+0x60]
   140016a54:	test   rbx,rbx
   140016a57:	jne    0x140016a7b
   140016a59:	cmp    rdx,0xffffffffffffffff
   140016a5d:	je     0x140016a69
   140016a5f:	mov    r8,rdx
   140016a62:	xor    edx,edx
   140016a64:	call   0x140012fb0
   140016a69:	call   0x14001583c
   140016a6e:	mov    DWORD PTR [rax],0x16
   140016a74:	call   0x140019f74
   140016a79:	jmp    0x140016aaa
   140016a7b:	mov    rcx,rbx
   140016a7e:	call   0x140014d4c
   140016a83:	nop
   140016a84:	mov    QWORD PTR [rsp+0x20],rbx
   140016a89:	mov    r9,rsi
   140016a8c:	mov    r8,r13
   140016a8f:	mov    rdx,rdi
   140016a92:	mov    rcx,r12
   140016a95:	call   0x1400167e8
   140016a9a:	mov    rdi,rax
   140016a9d:	mov    rcx,rbx
   140016aa0:	call   0x140014de4
   140016aa5:	mov    rax,rdi
   140016aa8:	jmp    0x140016aac
   140016aaa:	xor    eax,eax
   140016aac:	mov    rbx,QWORD PTR [rsp+0x40]
   140016ab1:	mov    rsi,QWORD PTR [rsp+0x48]
   140016ab6:	mov    rdi,QWORD PTR [rsp+0x50]
   140016abb:	mov    r12,QWORD PTR [rsp+0x58]
   140016ac0:	add    rsp,0x30
   140016ac4:	pop    r13
   140016ac6:	ret    
   140016ac7:	int3   
   140016ac8:	sub    rsp,0x38
   140016acc:	mov    QWORD PTR [rsp+0x20],r9
   140016ad1:	mov    r9,r8
   140016ad4:	mov    r8,rdx
   140016ad7:	or     rdx,0xffffffffffffffff
   140016adb:	call   0x140016a20
   140016ae0:	add    rsp,0x38
   140016ae4:	ret    
   140016ae5:	int3   
   140016ae6:	int3   
   140016ae7:	int3   
   140016ae8:	jmp    0x1400130a8
   140016aed:	int3   
   140016aee:	int3   
   140016aef:	int3   
   140016af0:	mov    QWORD PTR [rsp+0x8],rbx
   140016af5:	push   rdi
   140016af6:	sub    rsp,0x20
   140016afa:	lea    rax,[rip+0x1a837]        # 0x140031338
   140016b01:	mov    ebx,edx
   140016b03:	mov    rdi,rcx
   140016b06:	mov    QWORD PTR [rcx],rax
   140016b09:	call   0x140023ed0
   140016b0e:	test   bl,0x1
   140016b11:	je     0x140016b1b
   140016b13:	mov    rcx,rdi
   140016b16:	call   0x140016ae8
   140016b1b:	mov    rax,rdi
   140016b1e:	mov    rbx,QWORD PTR [rsp+0x30]
   140016b23:	add    rsp,0x20
   140016b27:	pop    rdi
   140016b28:	ret    
   140016b29:	int3   
   140016b2a:	int3   
   140016b2b:	int3   
   140016b2c:	sub    rsp,0x28
   140016b30:	mov    rax,rdx
   140016b33:	lea    rdx,[rcx+0x11]
   140016b37:	lea    rcx,[rax+0x11]
   140016b3b:	call   0x140023f50
   140016b40:	test   eax,eax
   140016b42:	sete   al
   140016b45:	add    rsp,0x28
   140016b49:	ret    
   140016b4a:	int3   
   140016b4b:	int3   
   140016b4c:	lea    rax,[rip+0x1a7f5]        # 0x140031348
   140016b53:	mov    QWORD PTR [rcx],rax
   140016b56:	jmp    0x140024128
   140016b5b:	int3   
   140016b5c:	mov    QWORD PTR [rsp+0x8],rbx
   140016b61:	push   rdi
   140016b62:	sub    rsp,0x20
   140016b66:	lea    rax,[rip+0x1a7db]        # 0x140031348
   140016b6d:	mov    ebx,edx
   140016b6f:	mov    rdi,rcx
   140016b72:	mov    QWORD PTR [rcx],rax
   140016b75:	call   0x140024128
   140016b7a:	test   bl,0x1
   140016b7d:	je     0x140016b87
   140016b7f:	mov    rcx,rdi
   140016b82:	call   0x140016ae8
   140016b87:	mov    rax,rdi
   140016b8a:	mov    rbx,QWORD PTR [rsp+0x30]
   140016b8f:	add    rsp,0x20
   140016b93:	pop    rdi
   140016b94:	ret    
   140016b95:	int3   
   140016b96:	int3   
   140016b97:	int3   
   140016b98:	rex push rbx
   140016b9a:	sub    rsp,0x20
   140016b9e:	mov    rbx,rcx
   140016ba1:	call   0x140024174
   140016ba6:	lea    r11,[rip+0x1a79b]        # 0x140031348
   140016bad:	mov    QWORD PTR [rbx],r11
   140016bb0:	mov    rax,rbx
   140016bb3:	add    rsp,0x20
   140016bb7:	pop    rbx
   140016bb8:	ret    
   140016bb9:	int3   
   140016bba:	int3   
   140016bbb:	int3   
   140016bbc:	rex push rbx
   140016bbe:	sub    rsp,0x40
   140016bc2:	mov    rbx,rcx
   140016bc5:	jmp    0x140016bd6
   140016bc7:	mov    rcx,rbx
   140016bca:	call   0x14001c174
   140016bcf:	test   eax,eax
   140016bd1:	je     0x140016be6
   140016bd3:	mov    rcx,rbx
   140016bd6:	call   0x140013298
   140016bdb:	test   rax,rax
   140016bde:	je     0x140016bc7
   140016be0:	add    rsp,0x40
   140016be4:	pop    rbx
   140016be5:	ret    
   140016be6:	mov    eax,DWORD PTR [rip+0x3e7d4]        # 0x1400553c0
   140016bec:	mov    r8d,0x1
   140016bf2:	lea    rbx,[rip+0x1a74f]        # 0x140031348
   140016bf9:	test   r8b,al
   140016bfc:	jne    0x140016c37
   140016bfe:	or     eax,r8d
   140016c01:	lea    rdx,[rsp+0x58]
   140016c06:	lea    rcx,[rip+0x3e79b]        # 0x1400553a8
   140016c0d:	mov    DWORD PTR [rip+0x3e7ad],eax        # 0x1400553c0
   140016c13:	lea    rax,[rip+0x1a73e]        # 0x140031358
   140016c1a:	mov    QWORD PTR [rsp+0x58],rax
   140016c1f:	call   0x140024000
   140016c24:	lea    rcx,[rip+0x17bd5]        # 0x14002e800
   140016c2b:	mov    QWORD PTR [rip+0x3e776],rbx        # 0x1400553a8
   140016c32:	call   0x14001e12c
   140016c37:	lea    rdx,[rip+0x3e76a]        # 0x1400553a8
   140016c3e:	lea    rcx,[rsp+0x20]
   140016c43:	call   0x140024174
   140016c48:	lea    rdx,[rip+0x1fbe1]        # 0x140036830
   140016c4f:	lea    rcx,[rsp+0x20]
   140016c54:	mov    QWORD PTR [rsp+0x20],rbx
   140016c59:	call   0x1400241a0
   140016c5e:	int3   
   140016c5f:	int3   
   140016c60:	jmp    0x140016ae8
   140016c65:	int3   
   140016c66:	int3   
   140016c67:	int3   
   140016c68:	rex push rbx
   140016c6a:	sub    rsp,0x20
   140016c6e:	xor    r10d,r10d
   140016c71:	mov    r9,rcx
   140016c74:	test   rcx,rcx
   140016c77:	je     0x140016c87
   140016c79:	test   rdx,rdx
   140016c7c:	je     0x140016c87
   140016c7e:	test   r8,r8
   140016c81:	jne    0x140016ca0
   140016c83:	mov    WORD PTR [rcx],r10w
   140016c87:	call   0x14001583c
   140016c8c:	mov    ebx,0x16
   140016c91:	mov    DWORD PTR [rax],ebx
   140016c93:	call   0x140019f74
   140016c98:	mov    eax,ebx
   140016c9a:	add    rsp,0x20
   140016c9e:	pop    rbx
   140016c9f:	ret    
   140016ca0:	sub    rcx,r8
   140016ca3:	movzx  eax,WORD PTR [r8]
   140016ca7:	mov    WORD PTR [rcx+r8*1],ax
   140016cac:	add    r8,0x2
   140016cb0:	test   ax,ax
   140016cb3:	je     0x140016cba
   140016cb5:	dec    rdx
   140016cb8:	jne    0x140016ca3
   140016cba:	test   rdx,rdx
   140016cbd:	jne    0x140016ccf
   140016cbf:	mov    WORD PTR [r9],r10w
   140016cc3:	call   0x14001583c
   140016cc8:	mov    ebx,0x22
   140016ccd:	jmp    0x140016c91
   140016ccf:	xor    eax,eax
   140016cd1:	jmp    0x140016c9a
   140016cd3:	int3   
   140016cd4:	mov    QWORD PTR [rsp+0x10],rbx
   140016cd9:	mov    QWORD PTR [rsp+0x18],r8
   140016cde:	push   rbp
   140016cdf:	push   rsi
   140016ce0:	push   rdi
   140016ce1:	push   r12
   140016ce3:	push   r13
   140016ce5:	push   r14
   140016ce7:	push   r15
   140016ce9:	sub    rsp,0x20
   140016ced:	mov    r12,QWORD PTR [rsp+0x98]
   140016cf5:	mov    r13,QWORD PTR [rsp+0x88]
   140016cfd:	mov    rsi,rcx
   140016d00:	xor    ecx,ecx
   140016d02:	mov    r15,r9
   140016d05:	mov    rdi,r8
   140016d08:	mov    r9d,ecx
   140016d0b:	mov    DWORD PTR [rsp+0x60],ecx
   140016d0f:	mov    r14,rdx
   140016d12:	test   rsi,rsi
   140016d15:	je     0x140016d21
   140016d17:	test   rdx,rdx
   140016d1a:	jne    0x140016d2c
   140016d1c:	test   r8,r8
   140016d1f:	je     0x140016d31
   140016d21:	mov    r9d,0x1
   140016d27:	jmp    0x140016efd
   140016d2c:	test   r8,r8
   140016d2f:	je     0x140016d21
   140016d31:	test   r15,r15
   140016d34:	jne    0x140016d42
   140016d36:	cmp    QWORD PTR [rsp+0x80],rcx
   140016d3e:	jne    0x140016d21
   140016d40:	jmp    0x140016d4c
   140016d42:	cmp    QWORD PTR [rsp+0x80],rcx
   140016d4a:	je     0x140016d21
   140016d4c:	test   r13,r13
   140016d4f:	jne    0x140016d5d
   140016d51:	cmp    QWORD PTR [rsp+0x90],rcx
   140016d59:	jne    0x140016d21
   140016d5b:	jmp    0x140016d67
   140016d5d:	cmp    QWORD PTR [rsp+0x90],rcx
   140016d65:	je     0x140016d21
   140016d67:	test   r12,r12
   140016d6a:	jne    0x140016d78
   140016d6c:	cmp    QWORD PTR [rsp+0xa0],rcx
   140016d74:	jne    0x140016d21
   140016d76:	jmp    0x140016d82
   140016d78:	cmp    QWORD PTR [rsp+0xa0],rcx
   140016d80:	je     0x140016d21
   140016d82:	mov    eax,0x1
   140016d87:	mov    rbx,rsi
   140016d8a:	cmp    WORD PTR [rbx],cx
   140016d8d:	je     0x140016d98
   140016d8f:	add    rbx,0x2
   140016d93:	dec    rax
   140016d96:	jne    0x140016d8a
   140016d98:	cmp    WORD PTR [rbx],0x3a
   140016d9c:	jne    0x140016dc9
   140016d9e:	test   rdx,rdx
   140016da1:	je     0x140016dc3
   140016da3:	cmp    r8,0x3
   140016da7:	jb     0x140016efd
   140016dad:	mov    r9d,0x2
   140016db3:	mov    r8,rsi
   140016db6:	mov    rdx,rdi
   140016db9:	mov    rcx,r14
   140016dbc:	call   0x140013da4
   140016dc1:	xor    ecx,ecx
   140016dc3:	lea    rsi,[rbx+0x2]
   140016dc7:	jmp    0x140016dd1
   140016dc9:	test   rdx,rdx
   140016dcc:	je     0x140016dd1
   140016dce:	mov    WORD PTR [rdx],cx
   140016dd1:	movzx  eax,WORD PTR [rsi]
   140016dd4:	mov    rbp,rcx
   140016dd7:	mov    rdi,rcx
   140016dda:	mov    rbx,rsi
   140016ddd:	test   ax,ax
   140016de0:	je     0x140016e44
   140016de2:	cmp    ax,0x2f
   140016de6:	je     0x140016df9
   140016de8:	cmp    ax,0x5c
   140016dec:	je     0x140016df9
   140016dee:	cmp    ax,0x2e
   140016df2:	jne    0x140016dfd
   140016df4:	mov    rdi,rbx
   140016df7:	jmp    0x140016dfd
   140016df9:	lea    rbp,[rbx+0x2]
   140016dfd:	add    rbx,0x2
   140016e01:	movzx  eax,WORD PTR [rbx]
   140016e04:	test   ax,ax
   140016e07:	jne    0x140016de2
   140016e09:	test   rbp,rbp
   140016e0c:	je     0x140016e44
   140016e0e:	test   r15,r15
   140016e11:	je     0x140016e3f
   140016e13:	mov    r9,rbp
   140016e16:	sub    r9,rsi
   140016e19:	sar    r9,1
   140016e1c:	cmp    QWORD PTR [rsp+0x80],r9
   140016e24:	jbe    0x140016ef3
   140016e2a:	mov    rdx,QWORD PTR [rsp+0x80]
   140016e32:	mov    r8,rsi
   140016e35:	mov    rcx,r15
   140016e38:	call   0x140013da4
   140016e3d:	xor    ecx,ecx
   140016e3f:	mov    rsi,rbp
   140016e42:	jmp    0x140016e4d
   140016e44:	test   r15,r15
   140016e47:	je     0x140016e4d
   140016e49:	mov    WORD PTR [r15],cx
   140016e4d:	test   rdi,rdi
   140016e50:	je     0x140016eb5
   140016e52:	cmp    rdi,rsi
   140016e55:	jb     0x140016eb5
   140016e57:	test   r13,r13
   140016e5a:	je     0x140016e88
   140016e5c:	mov    r9,rdi
   140016e5f:	sub    r9,rsi
   140016e62:	sar    r9,1
   140016e65:	cmp    QWORD PTR [rsp+0x90],r9
   140016e6d:	jbe    0x140016ef3
   140016e73:	mov    rdx,QWORD PTR [rsp+0x90]
   140016e7b:	mov    r8,rsi
   140016e7e:	mov    rcx,r13
   140016e81:	call   0x140013da4
   140016e86:	xor    ecx,ecx
   140016e88:	test   r12,r12
   140016e8b:	je     0x140016eec
   140016e8d:	sub    rbx,rdi
   140016e90:	sar    rbx,1
   140016e93:	cmp    QWORD PTR [rsp+0xa0],rbx
   140016e9b:	jbe    0x140016ef3
   140016e9d:	mov    rdx,QWORD PTR [rsp+0xa0]
   140016ea5:	mov    r9,rbx
   140016ea8:	mov    r8,rdi
   140016eab:	mov    rcx,r12
   140016eae:	call   0x140013da4
   140016eb3:	jmp    0x140016eec
   140016eb5:	test   r13,r13
   140016eb8:	je     0x140016ee2
   140016eba:	sub    rbx,rsi
   140016ebd:	sar    rbx,1
   140016ec0:	cmp    QWORD PTR [rsp+0x90],rbx
   140016ec8:	jbe    0x140016ef3
   140016eca:	mov    rdx,QWORD PTR [rsp+0x90]
   140016ed2:	mov    r9,rbx
   140016ed5:	mov    r8,rsi
   140016ed8:	mov    rcx,r13
   140016edb:	call   0x140013da4
   140016ee0:	xor    ecx,ecx
   140016ee2:	test   r12,r12
   140016ee5:	je     0x140016eec
   140016ee7:	mov    WORD PTR [r12],cx
   140016eec:	xor    eax,eax
   140016eee:	jmp    0x140016f73
   140016ef3:	mov    r9d,DWORD PTR [rsp+0x60]
   140016ef8:	mov    rdi,QWORD PTR [rsp+0x70]
   140016efd:	test   r14,r14
   140016f00:	je     0x140016f0b
   140016f02:	test   rdi,rdi
   140016f05:	je     0x140016f0b
   140016f07:	mov    WORD PTR [r14],cx
   140016f0b:	test   r15,r15
   140016f0e:	je     0x140016f1e
   140016f10:	cmp    QWORD PTR [rsp+0x80],rcx
   140016f18:	jbe    0x140016f1e
   140016f1a:	mov    WORD PTR [r15],cx
   140016f1e:	test   r13,r13
   140016f21:	je     0x140016f32
   140016f23:	cmp    QWORD PTR [rsp+0x90],rcx
   140016f2b:	jbe    0x140016f32
   140016f2d:	mov    WORD PTR [r13+0x0],cx
   140016f32:	test   r12,r12
   140016f35:	je     0x140016f46
   140016f37:	cmp    QWORD PTR [rsp+0xa0],rcx
   140016f3f:	jbe    0x140016f46
   140016f41:	mov    WORD PTR [r12],cx
   140016f46:	test   rsi,rsi
   140016f49:	jne    0x140016f60
   140016f4b:	call   0x14001583c
   140016f50:	mov    ebx,0x16
   140016f55:	mov    DWORD PTR [rax],ebx
   140016f57:	call   0x140019f74
   140016f5c:	mov    eax,ebx
   140016f5e:	jmp    0x140016f73
   140016f60:	test   r9d,r9d
   140016f63:	jne    0x140016f4b
   140016f65:	call   0x14001583c
   140016f6a:	mov    ecx,0x22
   140016f6f:	mov    DWORD PTR [rax],ecx
   140016f71:	mov    eax,ecx
   140016f73:	mov    rbx,QWORD PTR [rsp+0x68]
   140016f78:	add    rsp,0x20
   140016f7c:	pop    r15
   140016f7e:	pop    r14
   140016f80:	pop    r13
   140016f82:	pop    r12
   140016f84:	pop    rdi
   140016f85:	pop    rsi
   140016f86:	pop    rbp
   140016f87:	ret    
   140016f88:	mov    QWORD PTR [rsp+0x10],rbx
   140016f8d:	mov    QWORD PTR [rsp+0x18],rbp
   140016f92:	mov    QWORD PTR [rsp+0x20],rsi
   140016f97:	push   rdi
   140016f98:	push   r12
   140016f9a:	push   r13
   140016f9c:	push   r14
   140016f9e:	push   r15
   140016fa0:	sub    rsp,0x20
   140016fa4:	movsxd rdi,DWORD PTR [r8+0xc]
   140016fa8:	mov    r15,rcx
   140016fab:	mov    rcx,r8
   140016fae:	mov    rbp,r9
   140016fb1:	mov    r13,r8
   140016fb4:	mov    r14,rdx
   140016fb7:	call   0x1400242c0
   140016fbc:	mov    r10,QWORD PTR [r15]
   140016fbf:	mov    QWORD PTR [rbp+0x0],r10
   140016fc3:	mov    r12d,eax
   140016fc6:	test   edi,edi
   140016fc8:	je     0x140017052
   140016fce:	lea    rcx,[rdi+rdi*4]
   140016fd2:	lea    rsi,[rcx*4-0x14]
   140016fda:	movsxd rbx,DWORD PTR [r13+0x10]
   140016fde:	add    rbx,QWORD PTR [r14+0x8]
   140016fe2:	add    rbx,rsi
   140016fe5:	cmp    r12d,DWORD PTR [rbx+0x4]
   140016fe9:	jle    0x140017034
   140016feb:	cmp    r12d,DWORD PTR [rbx+0x8]
   140016fef:	jg     0x140017034
   140016ff1:	mov    rcx,QWORD PTR [r14]
   140016ff4:	lea    rdx,[rsp+0x50]
   140016ff9:	xor    r8d,r8d
   140016ffc:	call   0x14002ac2a
   140017001:	movsxd r8,DWORD PTR [rbx+0x10]
   140017005:	mov    r9d,DWORD PTR [rbx+0xc]
   140017009:	add    r8,QWORD PTR [rsp+0x50]
   14001700e:	mov    r10d,DWORD PTR [rax]
   140017011:	xor    ecx,ecx
   140017013:	test   r9d,r9d
   140017016:	je     0x14001702f
   140017018:	lea    rdx,[r8+0xc]
   14001701c:	movsxd rax,DWORD PTR [rdx]
   14001701f:	cmp    rax,r10
   140017022:	je     0x14001702f
   140017024:	inc    ecx
   140017026:	add    rdx,0x14
   14001702a:	cmp    ecx,r9d
   14001702d:	jb     0x14001701c
   14001702f:	cmp    ecx,r9d
   140017032:	jb     0x14001703e
   140017034:	sub    rsi,0x14
   140017038:	dec    edi
   14001703a:	je     0x140017052
   14001703c:	jmp    0x140016fda
   14001703e:	mov    rax,QWORD PTR [r15]
   140017041:	lea    rcx,[rcx+rcx*4]
   140017045:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   14001704a:	mov    rcx,QWORD PTR [rcx+rax*1]
   14001704e:	mov    QWORD PTR [rbp+0x0],rcx
   140017052:	mov    rbx,QWORD PTR [rsp+0x58]
   140017057:	mov    rsi,QWORD PTR [rsp+0x68]
   14001705c:	mov    rax,rbp
   14001705f:	mov    rbp,QWORD PTR [rsp+0x60]
   140017064:	add    rsp,0x20
   140017068:	pop    r15
   14001706a:	pop    r14
   14001706c:	pop    r13
   14001706e:	pop    r12
   140017070:	pop    rdi
   140017071:	ret    
   140017072:	int3   
   140017073:	int3   
   140017074:	sub    rsp,0x28
   140017078:	call   0x14001ae14
   14001707d:	mov    rax,QWORD PTR [rax+0x128]
   140017084:	add    rsp,0x28
   140017088:	ret    
   140017089:	int3   
   14001708a:	int3   
   14001708b:	int3   
   14001708c:	sub    rsp,0x28
   140017090:	call   0x14001ae14
   140017095:	mov    rax,QWORD PTR [rax+0x130]
   14001709c:	add    rsp,0x28
   1400170a0:	ret    
   1400170a1:	int3   
   1400170a2:	int3   
   1400170a3:	int3   
   1400170a4:	rex push rbx
   1400170a6:	sub    rsp,0x20
   1400170aa:	mov    rbx,rcx
   1400170ad:	call   0x14001ae14
   1400170b2:	mov    QWORD PTR [rax+0x128],rbx
   1400170b9:	add    rsp,0x20
   1400170bd:	pop    rbx
   1400170be:	ret    
   1400170bf:	int3   
   1400170c0:	rex push rbx
   1400170c2:	sub    rsp,0x20
   1400170c6:	mov    rbx,rcx
   1400170c9:	call   0x14001ae14
   1400170ce:	mov    QWORD PTR [rax+0x130],rbx
   1400170d5:	add    rsp,0x20
   1400170d9:	pop    rbx
   1400170da:	ret    
   1400170db:	int3   
   1400170dc:	mov    rax,rsp
   1400170df:	mov    QWORD PTR [rax+0x8],rbx
   1400170e3:	mov    QWORD PTR [rax+0x10],rbp
   1400170e7:	mov    QWORD PTR [rax+0x20],rsi
   1400170eb:	push   rdi
   1400170ec:	push   r12
   1400170ee:	push   r13
   1400170f0:	sub    rsp,0x20
   1400170f4:	lea    r9,[rax+0x18]
   1400170f8:	mov    rbp,r8
   1400170fb:	mov    r12,rdx
   1400170fe:	call   0x140016f88
   140017103:	mov    rdx,r12
   140017106:	mov    rcx,rbp
   140017109:	mov    r13,rax
   14001710c:	call   0x1400242c0
   140017111:	movsxd rdi,DWORD PTR [rbp+0xc]
   140017115:	mov    esi,eax
   140017117:	test   edi,edi
   140017119:	je     0x14001714f
   14001711b:	lea    rcx,[rdi+rdi*4]
   14001711f:	lea    rbx,[rcx*4-0x14]
   140017127:	call   0x14001ae14
   14001712c:	movsxd rcx,DWORD PTR [rbp+0x10]
   140017130:	mov    rdx,QWORD PTR [rax+0x128]
   140017137:	add    rdx,rcx
   14001713a:	add    rdx,rbx
   14001713d:	cmp    esi,DWORD PTR [rdx+0x4]
   140017140:	jle    0x140017147
   140017142:	cmp    esi,DWORD PTR [rdx+0x8]
   140017145:	jle    0x140017151
   140017147:	sub    rbx,0x14
   14001714b:	dec    edi
   14001714d:	jne    0x140017127
   14001714f:	xor    edx,edx
   140017151:	test   rdx,rdx
   140017154:	jne    0x14001715c
   140017156:	or     r9d,0xffffffff
   14001715a:	jmp    0x140017160
   14001715c:	mov    r9d,DWORD PTR [rdx+0x4]
   140017160:	mov    r8,rbp
   140017163:	mov    rdx,r12
   140017166:	mov    rcx,r13
   140017169:	call   0x140024528
   14001716e:	mov    rbx,QWORD PTR [rsp+0x40]
   140017173:	mov    rbp,QWORD PTR [rsp+0x48]
   140017178:	mov    rsi,QWORD PTR [rsp+0x58]
   14001717d:	add    rsp,0x20
   140017181:	pop    r13
   140017183:	pop    r12
   140017185:	pop    rdi
   140017186:	ret    
   140017187:	int3   
   140017188:	mov    QWORD PTR [rsp+0x10],rbx
   14001718d:	mov    QWORD PTR [rsp+0x18],rsi
   140017192:	push   rdi
   140017193:	sub    rsp,0x40
   140017197:	mov    rbx,r9
   14001719a:	mov    rdi,r8
   14001719d:	mov    rsi,rcx
   1400171a0:	mov    QWORD PTR [rsp+0x50],rdx
   1400171a5:	call   0x14001ae14
   1400171aa:	mov    rdx,QWORD PTR [rbx+0x8]
   1400171ae:	mov    QWORD PTR [rax+0x128],rdx
   1400171b5:	call   0x14001ae14
   1400171ba:	mov    rdx,QWORD PTR [rsi+0x38]
   1400171be:	mov    QWORD PTR [rax+0x130],rdx
   1400171c5:	call   0x14001ae14
   1400171ca:	mov    rdx,QWORD PTR [rbx+0x38]
   1400171ce:	mov    r8d,DWORD PTR [rdx]
   1400171d1:	lea    rdx,[rsp+0x50]
   1400171d6:	mov    r9,rbx
   1400171d9:	add    r8,QWORD PTR [rax+0x128]
   1400171e0:	xor    eax,eax
   1400171e2:	mov    rcx,rsi
   1400171e5:	mov    DWORD PTR [rsp+0x38],eax
   1400171e9:	mov    QWORD PTR [rsp+0x30],rax
   1400171ee:	mov    DWORD PTR [rsp+0x28],eax
   1400171f2:	mov    QWORD PTR [rsp+0x20],r8
   1400171f7:	mov    r8,rdi
   1400171fa:	call   0x1400254a8
   1400171ff:	mov    rbx,QWORD PTR [rsp+0x58]
   140017204:	mov    rsi,QWORD PTR [rsp+0x60]
   140017209:	add    rsp,0x40
   14001720d:	pop    rdi
   14001720e:	ret    
   14001720f:	int3   
   140017210:	mov    QWORD PTR [rsp+0x8],rbx
   140017215:	mov    QWORD PTR [rsp+0x10],rbp
   14001721a:	mov    QWORD PTR [rsp+0x18],rsi
   14001721f:	push   rdi
   140017220:	sub    rsp,0x40
   140017224:	mov    rsi,r9
   140017227:	mov    rbp,r8
   14001722a:	mov    rbx,rdx
   14001722d:	mov    rdi,rcx
   140017230:	call   0x14001ae14
   140017235:	mov    QWORD PTR [rax+0x138],rbx
   14001723c:	mov    rbx,QWORD PTR [rdi]
   14001723f:	call   0x14001ae14
   140017244:	mov    rdx,QWORD PTR [rbx+0x38]
   140017248:	mov    rcx,QWORD PTR [rsp+0x78]
   14001724d:	mov    r9,QWORD PTR [rsp+0x70]
   140017252:	mov    DWORD PTR [rsp+0x38],0x1
   14001725a:	mov    QWORD PTR [rax+0x130],rdx
   140017261:	xor    ebx,ebx
   140017263:	mov    QWORD PTR [rsp+0x30],rbx
   140017268:	mov    DWORD PTR [rsp+0x28],ebx
   14001726c:	mov    QWORD PTR [rsp+0x20],rcx
   140017271:	mov    rcx,QWORD PTR [rdi]
   140017274:	mov    r8,rsi
   140017277:	mov    rdx,rbp
   14001727a:	call   0x1400254a8
   14001727f:	call   0x14001ae14
   140017284:	mov    rcx,QWORD PTR [rsp+0x80]
   14001728c:	mov    rbp,QWORD PTR [rsp+0x58]
   140017291:	mov    rsi,QWORD PTR [rsp+0x60]
   140017296:	mov    QWORD PTR [rax+0x138],rbx
   14001729d:	lea    eax,[rbx+0x1]
   1400172a0:	mov    rbx,QWORD PTR [rsp+0x50]
   1400172a5:	mov    DWORD PTR [rcx],0x1
   1400172ab:	add    rsp,0x40
   1400172af:	pop    rdi
   1400172b0:	ret    
   1400172b1:	int3   
   1400172b2:	int3   
   1400172b3:	int3   
   1400172b4:	mov    rax,rsp
   1400172b7:	mov    QWORD PTR [rax+0x20],r9
   1400172bb:	mov    QWORD PTR [rax+0x18],r8
   1400172bf:	mov    QWORD PTR [rax+0x10],rdx
   1400172c3:	mov    QWORD PTR [rax+0x8],rcx
   1400172c7:	push   rbx
   1400172c8:	sub    rsp,0x60
   1400172cc:	mov    rbx,rcx
   1400172cf:	and    DWORD PTR [rax-0x28],0x0
   1400172d3:	mov    QWORD PTR [rax-0x20],rcx
   1400172d7:	mov    QWORD PTR [rax-0x18],r8
   1400172db:	call   0x14001ae14
   1400172e0:	mov    r8,QWORD PTR [rax+0xe0]
   1400172e7:	lea    rdx,[rsp+0x48]
   1400172ec:	mov    ecx,DWORD PTR [rbx]
   1400172ee:	call   r8
   1400172f1:	mov    DWORD PTR [rsp+0x40],0x0
   1400172f9:	jmp    0x1400172fb
   1400172fb:	mov    eax,DWORD PTR [rsp+0x40]
   1400172ff:	add    rsp,0x60
   140017303:	pop    rbx
   140017304:	ret    
   140017305:	int3   
   140017306:	int3   
   140017307:	int3   
   140017308:	mov    QWORD PTR [rsp+0x8],rbx
   14001730d:	mov    QWORD PTR [rsp+0x10],rbp
   140017312:	mov    QWORD PTR [rsp+0x18],rsi
   140017317:	push   rdi
   140017318:	push   r12
   14001731a:	push   r13
   14001731c:	sub    rsp,0x20
   140017320:	movsxd rbx,DWORD PTR [rdx+0xc]
   140017324:	mov    r12,QWORD PTR [rsp+0x70]
   140017329:	mov    rdi,rdx
   14001732c:	mov    rcx,rdi
   14001732f:	mov    rdx,r12
   140017332:	mov    r13d,r9d
   140017335:	xor    ebp,ebp
   140017337:	call   0x1400242c0
   14001733c:	mov    esi,eax
   14001733e:	test   ebx,ebx
   140017340:	jne    0x140017347
   140017342:	call   0x14001dd20
   140017347:	mov    r10,QWORD PTR [rsp+0x68]
   14001734c:	mov    r8,QWORD PTR [rsp+0x60]
   140017351:	or     r11d,0xffffffff
   140017355:	mov    DWORD PTR [r10],r11d
   140017358:	mov    edx,ebx
   14001735a:	mov    DWORD PTR [r8],r11d
   14001735d:	test   ebx,ebx
   14001735f:	je     0x14001738b
   140017361:	movsxd rcx,DWORD PTR [rdi+0x10]
   140017365:	lea    rax,[rbx+rbx*4]
   140017369:	lea    rcx,[rcx+rax*4]
   14001736d:	mov    rax,QWORD PTR [r12+0x8]
   140017372:	lea    r9,[rcx+rax*1-0xc]
   140017377:	cmp    esi,DWORD PTR [r9-0x4]
   14001737b:	jle    0x140017382
   14001737d:	cmp    esi,DWORD PTR [r9]
   140017380:	jle    0x14001738b
   140017382:	sub    r9,0x14
   140017386:	add    edx,r11d
   140017389:	jne    0x140017377
   14001738b:	test   edx,edx
   14001738d:	je     0x1400173a3
   14001738f:	lea    eax,[rdx-0x1]
   140017392:	lea    rdx,[rax+rax*4]
   140017396:	movsxd rax,DWORD PTR [rdi+0x10]
   14001739a:	lea    rbp,[rax+rdx*4]
   14001739e:	add    rbp,QWORD PTR [r12+0x8]
   1400173a3:	xor    edx,edx
   1400173a5:	test   ebx,ebx
   1400173a7:	je     0x14001740e
   1400173a9:	xor    r9d,r9d
   1400173ac:	movsxd rcx,DWORD PTR [rdi+0x10]
   1400173b0:	add    rcx,QWORD PTR [r12+0x8]
   1400173b5:	add    rcx,r9
   1400173b8:	test   rbp,rbp
   1400173bb:	je     0x1400173cc
   1400173bd:	mov    eax,DWORD PTR [rbp+0x4]
   1400173c0:	cmp    DWORD PTR [rcx],eax
   1400173c2:	jle    0x1400173e9
   1400173c4:	mov    eax,DWORD PTR [rbp+0x8]
   1400173c7:	cmp    DWORD PTR [rcx+0x4],eax
   1400173ca:	jg     0x1400173e9
   1400173cc:	cmp    r13d,DWORD PTR [rcx]
   1400173cf:	jl     0x1400173e9
   1400173d1:	cmp    r13d,DWORD PTR [rcx+0x4]
   1400173d5:	jg     0x1400173e9
   1400173d7:	mov    eax,DWORD PTR [r8]
   1400173da:	cmp    eax,r11d
   1400173dd:	cmove  eax,edx
   1400173e0:	mov    DWORD PTR [r8],eax
   1400173e3:	lea    eax,[rdx+0x1]
   1400173e6:	mov    DWORD PTR [r10],eax
   1400173e9:	inc    edx
   1400173eb:	add    r9,0x14
   1400173ef:	cmp    edx,ebx
   1400173f1:	jb     0x1400173ac
   1400173f3:	cmp    DWORD PTR [r8],r11d
   1400173f6:	je     0x14001740e
   1400173f8:	mov    eax,DWORD PTR [r8]
   1400173fb:	lea    rcx,[rax+rax*4]
   1400173ff:	movsxd rax,DWORD PTR [rdi+0x10]
   140017403:	lea    rax,[rax+rcx*4]
   140017407:	add    rax,QWORD PTR [r12+0x8]
   14001740c:	jmp    0x140017418
   14001740e:	and    DWORD PTR [r8],0x0
   140017412:	and    DWORD PTR [r10],0x0
   140017416:	xor    eax,eax
   140017418:	mov    rbx,QWORD PTR [rsp+0x40]
   14001741d:	mov    rbp,QWORD PTR [rsp+0x48]
   140017422:	mov    rsi,QWORD PTR [rsp+0x50]
   140017427:	add    rsp,0x20
   14001742b:	pop    r13
   14001742d:	pop    r12
   14001742f:	pop    rdi
   140017430:	ret    
   140017431:	int3   
   140017432:	int3   
   140017433:	int3   
   140017434:	rex push rbx
   140017436:	sub    rsp,0x20
   14001743a:	mov    rbx,rcx
   14001743d:	mov    QWORD PTR [rcx],rdx
   140017440:	call   0x14001ae14
   140017445:	cmp    rbx,QWORD PTR [rax+0x120]
   14001744c:	jae    0x14001745c
   14001744e:	call   0x14001ae14
   140017453:	mov    rcx,QWORD PTR [rax+0x120]
   14001745a:	jmp    0x14001745e
   14001745c:	xor    ecx,ecx
   14001745e:	mov    QWORD PTR [rbx+0x8],rcx
   140017462:	call   0x14001ae14
   140017467:	mov    QWORD PTR [rax+0x120],rbx
   14001746e:	mov    rax,rbx
   140017471:	add    rsp,0x20
   140017475:	pop    rbx
   140017476:	ret    
   140017477:	int3   
   140017478:	rex push rbx
   14001747a:	sub    rsp,0x20
   14001747e:	mov    rbx,rcx
   140017481:	call   0x14001ae14
   140017486:	mov    rdx,QWORD PTR [rax+0x120]
   14001748d:	jmp    0x140017498
   14001748f:	cmp    QWORD PTR [rdx],rbx
   140017492:	je     0x1400174a6
   140017494:	mov    rdx,QWORD PTR [rdx+0x8]
   140017498:	test   rdx,rdx
   14001749b:	jne    0x14001748f
   14001749d:	lea    eax,[rdx+0x1]
   1400174a0:	add    rsp,0x20
   1400174a4:	pop    rbx
   1400174a5:	ret    
   1400174a6:	xor    eax,eax
   1400174a8:	jmp    0x1400174a0
   1400174aa:	int3   
   1400174ab:	int3   
   1400174ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400174b1:	push   rdi
   1400174b2:	sub    rsp,0x20
   1400174b6:	mov    rdi,rcx
   1400174b9:	call   0x14001ae14
   1400174be:	cmp    rdi,QWORD PTR [rax+0x120]
   1400174c5:	je     0x1400174cc
   1400174c7:	call   0x14001dd20
   1400174cc:	call   0x14001ae14
   1400174d1:	mov    rbx,QWORD PTR [rax+0x120]
   1400174d8:	jmp    0x1400174e3
   1400174da:	cmp    rdi,rbx
   1400174dd:	je     0x1400174f8
   1400174df:	mov    rbx,QWORD PTR [rbx+0x8]
   1400174e3:	test   rbx,rbx
   1400174e6:	jne    0x1400174da
   1400174e8:	call   0x14001dd20
   1400174ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400174f2:	add    rsp,0x20
   1400174f6:	pop    rdi
   1400174f7:	ret    
   1400174f8:	call   0x14001ae14
   1400174fd:	mov    rcx,QWORD PTR [rbx+0x8]
   140017501:	mov    QWORD PTR [rax+0x120],rcx
   140017508:	jmp    0x1400174ed
   14001750a:	int3   
   14001750b:	int3   
   14001750c:	rex push rbp
   14001750e:	push   rbx
   14001750f:	push   rsi
   140017510:	push   rdi
   140017511:	push   r12
   140017513:	push   r13
   140017515:	push   r14
   140017517:	push   r15
   140017519:	lea    rbp,[rsp-0x4b8]
   140017521:	sub    rsp,0x5b8
   140017528:	mov    rax,QWORD PTR [rip+0x28401]        # 0x14003f930
   14001752f:	xor    rax,rsp
   140017532:	mov    QWORD PTR [rbp+0x4a0],rax
   140017539:	mov    rbx,QWORD PTR [rbp+0x520]
   140017540:	mov    rdi,QWORD PTR [rbp+0x530]
   140017547:	mov    r14,QWORD PTR [rbp+0x538]
   14001754e:	mov    r13,rdx
   140017551:	mov    r15,rcx
   140017554:	mov    r12,r8
   140017557:	lea    rcx,[rsp+0x30]
   14001755c:	lea    rdx,[rip+0x19e0d]        # 0x140031370
   140017563:	mov    r8d,0x98
   140017569:	mov    rsi,r9
   14001756c:	call   0x140018e00
   140017571:	movsxd rax,DWORD PTR [rbp+0x528]
   140017578:	mov    rdx,QWORD PTR [r14]
   14001757b:	mov    rcx,QWORD PTR [r15]
   14001757e:	mov    QWORD PTR [rsp+0x68],rax
   140017583:	movzx  eax,BYTE PTR [rbp+0x540]
   14001758a:	lea    r11,[rip+0xd25f]        # 0x1400247f0
   140017591:	lea    r8,[rsp+0x30]
   140017596:	mov    QWORD PTR [rbp-0x78],rax
   14001759a:	mov    rax,QWORD PTR [r14+0x40]
   14001759e:	xor    r9d,r9d
   1400175a1:	mov    QWORD PTR [rsp+0x28],rax
   1400175a6:	lea    rax,[rbp-0x30]
   1400175aa:	mov    QWORD PTR [rsp+0x50],r11
   1400175af:	mov    QWORD PTR [rsp+0x58],rsi
   1400175b4:	mov    QWORD PTR [rsp+0x60],rbx
   1400175b9:	mov    QWORD PTR [rsp+0x70],r12
   1400175be:	mov    QWORD PTR [rsp+0x20],rax
   1400175c3:	mov    QWORD PTR [rsp+0x78],rdi
   1400175c8:	mov    QWORD PTR [rbp-0x80],r13
   1400175cc:	mov    QWORD PTR [rbp-0x70],0x19930520
   1400175d4:	call   0x14002ac24
   1400175d9:	mov    rcx,QWORD PTR [rbp+0x4a0]
   1400175e0:	xor    rcx,rsp
   1400175e3:	call   0x140012670
   1400175e8:	add    rsp,0x5b8
   1400175ef:	pop    r15
   1400175f1:	pop    r14
   1400175f3:	pop    r13
   1400175f5:	pop    r12
   1400175f7:	pop    rdi
   1400175f8:	pop    rsi
   1400175f9:	pop    rbx
   1400175fa:	pop    rbp
   1400175fb:	ret    
   1400175fc:	mov    QWORD PTR [rsp+0x8],rbx
   140017601:	mov    QWORD PTR [rsp+0x10],rsi
   140017606:	push   rdi
   140017607:	sub    rsp,0x20
   14001760b:	mov    rbx,r9
   14001760e:	mov    rsi,r8
   140017611:	mov    rdi,rdx
   140017614:	test   r9,r9
   140017617:	jne    0x14001761d
   140017619:	xor    eax,eax
   14001761b:	jmp    0x140017673
   14001761d:	test   rcx,rcx
   140017620:	jne    0x140017637
   140017622:	call   0x14001583c
   140017627:	mov    ebx,0x16
   14001762c:	mov    DWORD PTR [rax],ebx
   14001762e:	call   0x140019f74
   140017633:	mov    eax,ebx
   140017635:	jmp    0x140017673
   140017637:	test   r8,r8
   14001763a:	je     0x14001764e
   14001763c:	cmp    rdx,rbx
   14001763f:	jb     0x14001764e
   140017641:	mov    r8,rbx
   140017644:	mov    rdx,rsi
   140017647:	call   0x140018e00
   14001764c:	jmp    0x140017619
   14001764e:	mov    r8,rdx
   140017651:	xor    edx,edx
   140017653:	call   0x140012fb0
   140017658:	test   rsi,rsi
   14001765b:	je     0x140017622
   14001765d:	cmp    rdi,rbx
   140017660:	jae    0x14001766e
   140017662:	call   0x14001583c
   140017667:	mov    ebx,0x22
   14001766c:	jmp    0x14001762c
   14001766e:	mov    eax,0x16
   140017673:	mov    rbx,QWORD PTR [rsp+0x30]
   140017678:	mov    rsi,QWORD PTR [rsp+0x38]
   14001767d:	add    rsp,0x20
   140017681:	pop    rdi
   140017682:	ret    
   140017683:	int3   
   140017684:	rex push rbx
   140017686:	sub    rsp,0x20
   14001768a:	xor    r10d,r10d
   14001768d:	mov    r9,rcx
   140017690:	test   rcx,rcx
   140017693:	je     0x1400176a3
   140017695:	test   rdx,rdx
   140017698:	je     0x1400176a3
   14001769a:	test   r8,r8
   14001769d:	jne    0x1400176bc
   14001769f:	mov    WORD PTR [rcx],r10w
   1400176a3:	call   0x14001583c
   1400176a8:	mov    ebx,0x16
   1400176ad:	mov    DWORD PTR [rax],ebx
   1400176af:	call   0x140019f74
   1400176b4:	mov    eax,ebx
   1400176b6:	add    rsp,0x20
   1400176ba:	pop    rbx
   1400176bb:	ret    
   1400176bc:	cmp    WORD PTR [rcx],r10w
   1400176c0:	je     0x1400176cb
   1400176c2:	add    rcx,0x2
   1400176c6:	dec    rdx
   1400176c9:	jne    0x1400176bc
   1400176cb:	test   rdx,rdx
   1400176ce:	jne    0x1400176d6
   1400176d0:	mov    WORD PTR [r9],r10w
   1400176d4:	jmp    0x1400176a3
   1400176d6:	sub    rcx,r8
   1400176d9:	movzx  eax,WORD PTR [r8]
   1400176dd:	mov    WORD PTR [rcx+r8*1],ax
   1400176e2:	add    r8,0x2
   1400176e6:	test   ax,ax
   1400176e9:	je     0x1400176f0
   1400176eb:	dec    rdx
   1400176ee:	jne    0x1400176d9
   1400176f0:	test   rdx,rdx
   1400176f3:	jne    0x140017705
   1400176f5:	mov    WORD PTR [r9],r10w
   1400176f9:	call   0x14001583c
   1400176fe:	mov    ebx,0x22
   140017703:	jmp    0x1400176ad
   140017705:	xor    eax,eax
   140017707:	jmp    0x1400176b6
   140017709:	int3   
   14001770a:	int3   
   14001770b:	int3   
   14001770c:	mov    rax,rsp
   14001770f:	mov    QWORD PTR [rax+0x8],rbx
   140017713:	mov    QWORD PTR [rax+0x10],rbp
   140017717:	mov    QWORD PTR [rax+0x18],rsi
   14001771b:	mov    QWORD PTR [rax+0x20],rdi
   14001771f:	push   r12
   140017721:	sub    rsp,0x20
   140017725:	mov    rbx,QWORD PTR [r9+0x38]
   140017729:	mov    rsi,rdx
   14001772c:	mov    r12,r8
   14001772f:	mov    rbp,rcx
   140017732:	lea    r8,[rbx+0x4]
   140017736:	mov    rdx,r9
   140017739:	mov    rcx,rsi
   14001773c:	mov    rdi,r9
   14001773f:	call   0x1400120a4
   140017744:	mov    r11d,DWORD PTR [rbx+0x4]
   140017748:	mov    r10d,DWORD PTR [rbp+0x4]
   14001774c:	mov    eax,r11d
   14001774f:	and    r11d,0x2
   140017753:	mov    r8d,0x1
   140017759:	and    eax,r8d
   14001775c:	and    r10b,0x66
   140017760:	cmove  r11d,eax
   140017764:	test   r11d,r11d
   140017767:	je     0x14001777d
   140017769:	mov    r9,rdi
   14001776c:	mov    r8,r12
   14001776f:	mov    rdx,rsi
   140017772:	mov    rcx,rbp
   140017775:	call   0x140017188
   14001777a:	mov    r8d,eax
   14001777d:	mov    rbx,QWORD PTR [rsp+0x30]
   140017782:	mov    rbp,QWORD PTR [rsp+0x38]
   140017787:	mov    rsi,QWORD PTR [rsp+0x40]
   14001778c:	mov    rdi,QWORD PTR [rsp+0x48]
   140017791:	mov    eax,r8d
   140017794:	add    rsp,0x20
   140017798:	pop    r12
   14001779a:	ret    
   14001779b:	int3   
   14001779c:	rex push rbp
   14001779e:	push   rbx
   14001779f:	push   rdi
   1400177a0:	mov    rbp,rsp
   1400177a3:	sub    rsp,0x40
   1400177a7:	and    DWORD PTR [rbp+0x30],0x0
   1400177ab:	and    DWORD PTR [rbp+0x38],0x0
   1400177af:	and    DWORD PTR [rbp+0x20],0x0
   1400177b3:	mov    rdi,rdx
   1400177b6:	mov    rbx,rcx
   1400177b9:	test   rcx,rcx
   1400177bc:	jne    0x1400177d9
   1400177be:	call   0x14001583c
   1400177c3:	mov    ebx,0x16
   1400177c8:	mov    DWORD PTR [rax],ebx
   1400177ca:	call   0x140019f74
   1400177cf:	mov    eax,ebx
   1400177d1:	add    rsp,0x40
   1400177d5:	pop    rdi
   1400177d6:	pop    rbx
   1400177d7:	pop    rbp
   1400177d8:	ret    
   1400177d9:	mov    edx,0xff
   1400177de:	mov    r8d,0x24
   1400177e4:	call   0x140012fb0
   1400177e9:	test   rdi,rdi
   1400177ec:	je     0x1400177be
   1400177ee:	cmp    QWORD PTR [rdi],0x0
   1400177f2:	jge    0x140017802
   1400177f4:	call   0x14001583c
   1400177f9:	mov    ebx,0x16
   1400177fe:	mov    DWORD PTR [rax],ebx
   140017800:	jmp    0x1400177cf
   140017802:	movabs rax,0x793406fff
   14001780c:	cmp    QWORD PTR [rdi],rax
   14001780f:	jg     0x1400177f4
   140017811:	call   0x14001be0c
   140017816:	lea    rcx,[rbp+0x30]
   14001781a:	call   0x14001b35c
   14001781f:	test   eax,eax
   140017821:	jne    0x140017aa0
   140017827:	lea    rcx,[rbp+0x38]
   14001782b:	call   0x14001b38c
   140017830:	test   eax,eax
   140017832:	jne    0x140017a8a
   140017838:	lea    rcx,[rbp+0x20]
   14001783c:	call   0x14001b3bc
   140017841:	test   eax,eax
   140017843:	jne    0x140017a74
   140017849:	mov    rcx,QWORD PTR [rdi]
   14001784c:	cmp    rcx,0x3f480
   140017853:	jle    0x1400178b5
   140017855:	movsxd rax,DWORD PTR [rbp+0x20]
   140017859:	lea    rdx,[rbp-0x10]
   14001785d:	sub    rcx,rax
   140017860:	mov    QWORD PTR [rbp-0x10],rcx
   140017864:	mov    rcx,rbx
   140017867:	call   0x14001b08c
   14001786c:	test   eax,eax
   14001786e:	jne    0x1400177d1
   140017874:	cmp    DWORD PTR [rbp+0x30],eax
   140017877:	je     0x140017a21
   14001787d:	mov    rcx,rbx
   140017880:	call   0x14001be48
   140017885:	test   eax,eax
   140017887:	je     0x140017a21
   14001788d:	movsxd rax,DWORD PTR [rbp+0x38]
   140017891:	lea    rdx,[rbp-0x10]
   140017895:	mov    rcx,rbx
   140017898:	sub    QWORD PTR [rbp-0x10],rax
   14001789c:	call   0x14001b08c
   1400178a1:	test   eax,eax
   1400178a3:	jne    0x1400177d1
   1400178a9:	mov    DWORD PTR [rbx+0x20],0x1
   1400178b0:	jmp    0x140017a21
   1400178b5:	mov    rdx,rdi
   1400178b8:	mov    rcx,rbx
   1400178bb:	call   0x14001b08c
   1400178c0:	test   eax,eax
   1400178c2:	jne    0x1400177d1
   1400178c8:	cmp    DWORD PTR [rbp+0x30],eax
   1400178cb:	je     0x1400178ea
   1400178cd:	mov    rcx,rbx
   1400178d0:	call   0x14001be48
   1400178d5:	test   eax,eax
   1400178d7:	je     0x1400178ea
   1400178d9:	mov    eax,DWORD PTR [rbp+0x20]
   1400178dc:	mov    DWORD PTR [rbx+0x20],0x1
   1400178e3:	add    eax,DWORD PTR [rbp+0x38]
   1400178e6:	cdqe   
   1400178e8:	jmp    0x1400178ee
   1400178ea:	movsxd rax,DWORD PTR [rbp+0x20]
   1400178ee:	movsxd rcx,DWORD PTR [rbx]
   1400178f1:	movabs r8,0x8888888888888889
   1400178fb:	sub    rcx,rax
   1400178fe:	mov    rax,r8
   140017901:	imul   rcx
   140017904:	add    rdx,rcx
   140017907:	sar    rdx,0x5
   14001790b:	mov    rax,rdx
   14001790e:	shr    rax,0x3f
   140017912:	add    rdx,rax
   140017915:	mov    rax,rcx
   140017918:	imul   rdx,rdx,0x3c
   14001791c:	sub    rax,rdx
   14001791f:	mov    DWORD PTR [rbx],eax
   140017921:	test   eax,eax
   140017923:	jns    0x14001792e
   140017925:	add    eax,0x3c
   140017928:	sub    rcx,0x3c
   14001792c:	mov    DWORD PTR [rbx],eax
   14001792e:	mov    rax,r8
   140017931:	imul   rcx
   140017934:	lea    r9,[rcx+rdx*1]
   140017938:	sar    r9,0x5
   14001793c:	mov    rax,r9
   14001793f:	shr    rax,0x3f
   140017943:	add    r9,rax
   140017946:	movsxd rax,DWORD PTR [rbx+0x4]
   14001794a:	add    r9,rax
   14001794d:	mov    rax,r8
   140017950:	mov    rcx,r9
   140017953:	imul   r9
   140017956:	add    rdx,r9
   140017959:	sar    rdx,0x5
   14001795d:	mov    rax,rdx
   140017960:	shr    rax,0x3f
   140017964:	add    rdx,rax
   140017967:	imul   rdx,rdx,0x3c
   14001796b:	sub    rcx,rdx
   14001796e:	mov    DWORD PTR [rbx+0x4],ecx
   140017971:	test   ecx,ecx
   140017973:	jns    0x14001797f
   140017975:	add    ecx,0x3c
   140017978:	sub    r9,0x3c
   14001797c:	mov    DWORD PTR [rbx+0x4],ecx
   14001797f:	mov    rax,r8
   140017982:	imul   r9
   140017985:	lea    r8,[r9+rdx*1]
   140017989:	movabs r9,0x2aaaaaaaaaaaaaab
   140017993:	sar    r8,0x5
   140017997:	mov    rax,r8
   14001799a:	shr    rax,0x3f
   14001799e:	add    r8,rax
   1400179a1:	movsxd rax,DWORD PTR [rbx+0x8]
   1400179a5:	add    r8,rax
   1400179a8:	mov    rax,r9
   1400179ab:	imul   r8
   1400179ae:	sar    rdx,0x2
   1400179b2:	mov    rax,rdx
   1400179b5:	shr    rax,0x3f
   1400179b9:	add    rdx,rax
   1400179bc:	lea    rcx,[rdx+rdx*2]
   1400179c0:	mov    rdx,r8
   1400179c3:	shl    rcx,0x3
   1400179c7:	sub    rdx,rcx
   1400179ca:	mov    DWORD PTR [rbx+0x8],edx
   1400179cd:	test   edx,edx
   1400179cf:	jns    0x1400179db
   1400179d1:	lea    ecx,[rdx+0x18]
   1400179d4:	sub    r8,0x18
   1400179d8:	mov    DWORD PTR [rbx+0x8],ecx
   1400179db:	mov    rax,r9
   1400179de:	imul   r8
   1400179e1:	mov    r8,rdx
   1400179e4:	sar    r8,0x2
   1400179e8:	mov    rax,r8
   1400179eb:	shr    rax,0x3f
   1400179ef:	add    r8,rax
   1400179f2:	test   r8,r8
   1400179f5:	jle    0x140017a28
   1400179f7:	mov    eax,DWORD PTR [rbx+0x18]
   1400179fa:	lea    ecx,[r8+rax*1]
   1400179fe:	mov    eax,0x92492493
   140017a03:	imul   ecx
   140017a05:	add    edx,ecx
   140017a07:	sar    edx,0x2
   140017a0a:	mov    eax,edx
   140017a0c:	shr    eax,0x1f
   140017a0f:	add    edx,eax
   140017a11:	imul   edx,edx,0x7
   140017a14:	sub    ecx,edx
   140017a16:	add    DWORD PTR [rbx+0xc],r8d
   140017a1a:	mov    DWORD PTR [rbx+0x18],ecx
   140017a1d:	add    DWORD PTR [rbx+0x1c],r8d
   140017a21:	xor    eax,eax
   140017a23:	jmp    0x1400177d1
   140017a28:	jns    0x140017a21
   140017a2a:	mov    eax,DWORD PTR [rbx+0x18]
   140017a2d:	add    DWORD PTR [rbx+0xc],r8d
   140017a31:	lea    ecx,[r8+rax*1+0x7]
   140017a36:	mov    eax,0x92492493
   140017a3b:	imul   ecx
   140017a3d:	add    edx,ecx
   140017a3f:	sar    edx,0x2
   140017a42:	mov    eax,edx
   140017a44:	shr    eax,0x1f
   140017a47:	add    edx,eax
   140017a49:	mov    eax,DWORD PTR [rbx+0xc]
   140017a4c:	imul   edx,edx,0x7
   140017a4f:	sub    ecx,edx
   140017a51:	mov    DWORD PTR [rbx+0x18],ecx
   140017a54:	test   eax,eax
   140017a56:	jg     0x140017a1d
   140017a58:	add    eax,0x1f
   140017a5b:	mov    DWORD PTR [rbx+0x10],0xb
   140017a62:	mov    DWORD PTR [rbx+0xc],eax
   140017a65:	lea    eax,[r8+0x16d]
   140017a6c:	add    DWORD PTR [rbx+0x1c],eax
   140017a6f:	dec    DWORD PTR [rbx+0x14]
   140017a72:	jmp    0x140017a21
   140017a74:	and    QWORD PTR [rsp+0x20],0x0
   140017a7a:	xor    r9d,r9d
   140017a7d:	xor    r8d,r8d
   140017a80:	xor    edx,edx
   140017a82:	xor    ecx,ecx
   140017a84:	call   0x140019ed0
   140017a89:	int3   
   140017a8a:	and    QWORD PTR [rsp+0x20],0x0
   140017a90:	xor    r9d,r9d
   140017a93:	xor    r8d,r8d
   140017a96:	xor    edx,edx
   140017a98:	xor    ecx,ecx
   140017a9a:	call   0x140019ed0
   140017a9f:	int3   
   140017aa0:	and    QWORD PTR [rsp+0x20],0x0
   140017aa6:	xor    r9d,r9d
   140017aa9:	xor    r8d,r8d
   140017aac:	xor    edx,edx
   140017aae:	xor    ecx,ecx
   140017ab0:	call   0x140019ed0
   140017ab5:	int3   
   140017ab6:	int3   
   140017ab7:	int3   
   140017ab8:	mov    QWORD PTR [rsp+0x8],rbx
   140017abd:	mov    QWORD PTR [rsp+0x10],rsi
   140017ac2:	push   rdi
   140017ac3:	sub    rsp,0x20
   140017ac7:	mov    rdi,rcx
   140017aca:	call   0x1400256d0
   140017acf:	xor    esi,esi
   140017ad1:	mov    rbx,rax
   140017ad4:	test   rax,rax
   140017ad7:	je     0x140017aed
   140017ad9:	mov    rdx,rdi
   140017adc:	mov    rcx,rax
   140017adf:	call   0x14001779c
   140017ae4:	test   eax,eax
   140017ae6:	cmovne rbx,rsi
   140017aea:	mov    rax,rbx
   140017aed:	mov    rbx,QWORD PTR [rsp+0x30]
   140017af2:	mov    rsi,QWORD PTR [rsp+0x38]
   140017af7:	add    rsp,0x20
   140017afb:	pop    rdi
   140017afc:	ret    
   140017afd:	int3   
   140017afe:	int3   
   140017aff:	int3   
   140017b00:	rex push rbp
   140017b02:	push   rsi
   140017b03:	push   rdi
   140017b04:	push   r12
   140017b06:	push   r13
   140017b08:	push   r14
   140017b0a:	push   r15
   140017b0c:	sub    rsp,0x70
   140017b10:	lea    rbp,[rsp+0x40]
   140017b15:	mov    QWORD PTR [rbp+0x78],rbx
   140017b19:	mov    rax,QWORD PTR [rip+0x27e10]        # 0x14003f930
   140017b20:	xor    rax,rbp
   140017b23:	mov    QWORD PTR [rbp+0x28],rax
   140017b27:	mov    r12,QWORD PTR [rbp+0x98]
   140017b2e:	mov    r14,QWORD PTR [rbp+0x90]
   140017b35:	xor    r11d,r11d
   140017b38:	mov    r15,r9
   140017b3b:	mov    QWORD PTR [rbp+0x0],r8
   140017b3f:	mov    r13,rcx
   140017b42:	mov    QWORD PTR [rbp+0x8],r12
   140017b46:	mov    QWORD PTR [rbp+0x10],rcx
   140017b4a:	mov    r10d,edx
   140017b4d:	mov    r9,r8
   140017b50:	test   edx,edx
   140017b52:	je     0x140017b6d
   140017b54:	dec    r10d
   140017b57:	je     0x140017b63
   140017b59:	mov    rdi,QWORD PTR [r12+0x2b8]
   140017b61:	jmp    0x140017b75
   140017b63:	mov    rdi,QWORD PTR [r12+0x2b0]
   140017b6b:	jmp    0x140017b75
   140017b6d:	mov    rdi,QWORD PTR [r12+0x2a8]
   140017b75:	mov    r10d,0x1
   140017b7b:	cmp    DWORD PTR [r12+0x15c],r10d
   140017b83:	je     0x140017f81
   140017b89:	movzx  eax,WORD PTR [r8+0x14]
   140017b8e:	mov    r13,QWORD PTR [rip+0x1771b]        # 0x14002f2b0
   140017b95:	cmp    edx,0x2
   140017b98:	cmovne r13,QWORD PTR [rip+0x17708]        # 0x14002f2a8
   140017ba0:	mov    ecx,0x76c
   140017ba5:	mov    DWORD PTR [rsp+0x28],r11d
   140017baa:	add    ax,cx
   140017bad:	mov    ecx,DWORD PTR [r12+0x158]
   140017bb5:	mov    r9,rdi
   140017bb8:	mov    WORD PTR [rbp+0x18],ax
   140017bbc:	movzx  eax,WORD PTR [r8+0x10]
   140017bc1:	xor    edx,edx
   140017bc3:	add    ax,r10w
   140017bc7:	mov    WORD PTR [rbp+0x26],r11w
   140017bcc:	mov    QWORD PTR [rsp+0x20],r11
   140017bd1:	mov    WORD PTR [rbp+0x1a],ax
   140017bd5:	movzx  eax,WORD PTR [r8+0xc]
   140017bda:	mov    WORD PTR [rbp+0x1e],ax
   140017bde:	movzx  eax,WORD PTR [r8+0x8]
   140017be3:	mov    WORD PTR [rbp+0x20],ax
   140017be7:	movzx  eax,WORD PTR [r8+0x4]
   140017bec:	mov    WORD PTR [rbp+0x22],ax
   140017bf0:	movzx  eax,WORD PTR [r8]
   140017bf4:	lea    r8,[rbp+0x18]
   140017bf8:	mov    WORD PTR [rbp+0x24],ax
   140017bfc:	call   r13
   140017bff:	xor    r11d,r11d
   140017c02:	movsxd r12,eax
   140017c05:	test   eax,eax
   140017c07:	je     0x140017cd9
   140017c0d:	lea    rcx,[r12+r12*1+0x10]
   140017c12:	cmp    rcx,0x400
   140017c19:	ja     0x140017c53
   140017c1b:	lea    rax,[rcx+0xf]
   140017c1f:	cmp    rax,rcx
   140017c22:	ja     0x140017c2e
   140017c24:	movabs rax,0xffffffffffffff0
   140017c2e:	and    rax,0xfffffffffffffff0
   140017c32:	call   0x140012f50
   140017c37:	sub    rsp,rax
   140017c3a:	xor    r11d,r11d
   140017c3d:	lea    rbx,[rsp+0x40]
   140017c42:	test   rbx,rbx
   140017c45:	je     0x140017cd9
   140017c4b:	mov    DWORD PTR [rbx],0xcccc
   140017c51:	jmp    0x140017c69
   140017c53:	call   0x140013298
   140017c58:	xor    r11d,r11d
   140017c5b:	mov    rbx,rax
   140017c5e:	test   rax,rax
   140017c61:	je     0x140017c6d
   140017c63:	mov    DWORD PTR [rax],0xdddd
   140017c69:	add    rbx,0x10
   140017c6d:	test   rbx,rbx
   140017c70:	je     0x140017cd9
   140017c72:	mov    rax,QWORD PTR [rbp+0x8]
   140017c76:	lea    r8,[rbp+0x18]
   140017c7a:	mov    r9,rdi
   140017c7d:	mov    ecx,DWORD PTR [rax+0x158]
   140017c83:	xor    edx,edx
   140017c85:	mov    DWORD PTR [rsp+0x28],r12d
   140017c8a:	mov    rsi,rbx
   140017c8d:	mov    QWORD PTR [rsp+0x20],rbx
   140017c92:	call   r13
   140017c95:	lea    r11d,[rax-0x1]
   140017c99:	xor    edx,edx
   140017c9b:	jmp    0x140017cb9
   140017c9d:	cmp    QWORD PTR [r14],rdx
   140017ca0:	jbe    0x140017cbe
   140017ca2:	movzx  eax,WORD PTR [rsi]
   140017ca5:	mov    rcx,QWORD PTR [r15]
   140017ca8:	add    rsi,0x2
   140017cac:	mov    WORD PTR [rcx],ax
   140017caf:	add    QWORD PTR [r15],0x2
   140017cb3:	dec    QWORD PTR [r14]
   140017cb6:	dec    r11d
   140017cb9:	test   r11d,r11d
   140017cbc:	jg     0x140017c9d
   140017cbe:	lea    rcx,[rbx-0x10]
   140017cc2:	cmp    DWORD PTR [rcx],0xdddd
   140017cc8:	jne    0x140017ccf
   140017cca:	call   0x1400130a8
   140017ccf:	mov    eax,0x1
   140017cd4:	jmp    0x140017f92
   140017cd9:	mov    r13,QWORD PTR [rbp+0x10]
   140017cdd:	mov    r12,QWORD PTR [rbp+0x8]
   140017ce1:	jmp    0x140017f77
   140017ce6:	cmp    QWORD PTR [r14],r11
   140017ce9:	je     0x140017f8f
   140017cef:	mov    ebx,r11d
   140017cf2:	mov    ecx,r11d
   140017cf5:	mov    rax,r11
   140017cf8:	mov    rsi,rdi
   140017cfb:	add    rsi,0x2
   140017cff:	add    ecx,r10d
   140017d02:	add    rax,r10
   140017d05:	cmp    WORD PTR [rsi],r8w
   140017d09:	je     0x140017cfb
   140017d0b:	movzx  edx,r8w
   140017d0f:	cmp    edx,0x64
   140017d12:	jg     0x140017e61
   140017d18:	mov    r9d,0x64
   140017d1e:	cmp    edx,r9d
   140017d21:	je     0x140017e33
   140017d27:	mov    r9d,0x27
   140017d2d:	cmp    edx,r9d
   140017d30:	je     0x140017de1
   140017d36:	lea    eax,[r9+0x1a]
   140017d3a:	cmp    edx,eax
   140017d3c:	je     0x140017d5b
   140017d3e:	lea    r9d,[rax+0x7]
   140017d42:	cmp    edx,r9d
   140017d45:	je     0x140017da7
   140017d47:	lea    eax,[r9+0x5]
   140017d4b:	cmp    edx,eax
   140017d4d:	je     0x140017d74
   140017d4f:	lea    eax,[r9+0x19]
   140017d53:	cmp    edx,eax
   140017d55:	jne    0x140017f31
   140017d5b:	lea    rdx,[rip+0x196ae]        # 0x140031410
   140017d62:	mov    rcx,rdi
   140017d65:	call   0x1400147a4
   140017d6a:	test   eax,eax
   140017d6c:	jne    0x140017dc0
   140017d6e:	lea    rsi,[rdi+0xa]
   140017d72:	jmp    0x140017dd7
   140017d74:	dec    ecx
   140017d76:	je     0x140017d9a
   140017d78:	dec    ecx
   140017d7a:	je     0x140017d9d
   140017d7c:	dec    ecx
   140017d7e:	je     0x140017d90
   140017d80:	dec    ecx
   140017d82:	jne    0x140017f31
   140017d88:	lea    eax,[rcx+0x42]
   140017d8b:	jmp    0x140017f4d
   140017d90:	mov    eax,0x62
   140017d95:	jmp    0x140017f4d
   140017d9a:	mov    ebx,r10d
   140017d9d:	mov    eax,0x6d
   140017da2:	jmp    0x140017f4d
   140017da7:	dec    ecx
   140017da9:	je     0x140017db4
   140017dab:	dec    ecx
   140017dad:	je     0x140017db7
   140017daf:	jmp    0x140017f31
   140017db4:	mov    ebx,r10d
   140017db7:	movzx  eax,r9w
   140017dbb:	jmp    0x140017f4d
   140017dc0:	lea    rdx,[rip+0x19641]        # 0x140031408
   140017dc7:	mov    rcx,rdi
   140017dca:	call   0x1400147a4
   140017dcf:	test   eax,eax
   140017dd1:	jne    0x140017dd7
   140017dd3:	lea    rsi,[rdi+0x6]
   140017dd7:	mov    eax,0x70
   140017ddc:	jmp    0x140017f4d
   140017de1:	test   r10b,cl
   140017de4:	je     0x140017e27
   140017de6:	lea    rdi,[rdi+rax*2]
   140017dea:	movzx  ecx,WORD PTR [rdi]
   140017ded:	test   cx,cx
   140017df0:	je     0x140017f8f
   140017df6:	cmp    QWORD PTR [r14],r11
   140017df9:	je     0x140017f7d
   140017dff:	add    rdi,0x2
   140017e03:	cmp    cx,r9w
   140017e07:	je     0x140017f7d
   140017e0d:	mov    rax,QWORD PTR [r15]
   140017e10:	mov    WORD PTR [rax],cx
   140017e13:	add    QWORD PTR [r15],0x2
   140017e17:	dec    QWORD PTR [r14]
   140017e1a:	movzx  ecx,WORD PTR [rdi]
   140017e1d:	test   cx,cx
   140017e20:	jne    0x140017df6
   140017e22:	jmp    0x140017f7d
   140017e27:	movsxd rax,ecx
   140017e2a:	lea    rdi,[rdi+rax*2]
   140017e2e:	jmp    0x140017f7d
   140017e33:	dec    ecx
   140017e35:	je     0x140017db4
   140017e3b:	dec    ecx
   140017e3d:	je     0x140017db7
   140017e43:	dec    ecx
   140017e45:	je     0x140017e57
   140017e47:	dec    ecx
   140017e49:	jne    0x140017f31
   140017e4f:	lea    eax,[rcx+0x41]
   140017e52:	jmp    0x140017f4d
   140017e57:	mov    eax,0x61
   140017e5c:	jmp    0x140017f4d
   140017e61:	sub    edx,0x68
   140017e64:	je     0x140017f29
   140017e6a:	sub    edx,0x5
   140017e6d:	je     0x140017f15
   140017e73:	sub    edx,0x6
   140017e76:	je     0x140017f01
   140017e7c:	dec    edx
   140017e7e:	je     0x140017ea9
   140017e80:	cmp    edx,0x5
   140017e83:	jne    0x140017f31
   140017e89:	cmp    ecx,0x2
   140017e8c:	je     0x140017e9f
   140017e8e:	cmp    ecx,0x4
   140017e91:	jne    0x140017f31
   140017e97:	lea    eax,[rdx+0x54]
   140017e9a:	jmp    0x140017f4d
   140017e9f:	mov    eax,0x79
   140017ea4:	jmp    0x140017f4d
   140017ea9:	cmp    DWORD PTR [r9+0x8],0xb
   140017eae:	jg     0x140017eba
   140017eb0:	mov    rdx,QWORD PTR [r12+0x298]
   140017eb8:	jmp    0x140017ec2
   140017eba:	mov    rdx,QWORD PTR [r12+0x2a0]
   140017ec2:	cmp    ecx,r10d
   140017ec5:	jne    0x140017ef4
   140017ec7:	cmp    QWORD PTR [r14],r11
   140017eca:	jbe    0x140017ef4
   140017ecc:	mov    rcx,QWORD PTR [r15]
   140017ecf:	movzx  eax,WORD PTR [rdx]
   140017ed2:	mov    WORD PTR [rcx],ax
   140017ed5:	add    QWORD PTR [r15],0x2
   140017ed9:	dec    QWORD PTR [r14]
   140017edc:	jmp    0x140017efc
   140017ede:	cmp    QWORD PTR [r14],r11
   140017ee1:	jbe    0x140017efc
   140017ee3:	mov    rax,QWORD PTR [r15]
   140017ee6:	add    rdx,0x2
   140017eea:	mov    WORD PTR [rax],cx
   140017eed:	add    QWORD PTR [r15],0x2
   140017ef1:	dec    QWORD PTR [r14]
   140017ef4:	movzx  ecx,WORD PTR [rdx]
   140017ef7:	test   cx,cx
   140017efa:	jne    0x140017ede
   140017efc:	mov    rdi,rsi
   140017eff:	jmp    0x140017f7d
   140017f01:	dec    ecx
   140017f03:	je     0x140017f0b
   140017f05:	dec    ecx
   140017f07:	je     0x140017f0e
   140017f09:	jmp    0x140017f31
   140017f0b:	mov    ebx,r10d
   140017f0e:	mov    eax,0x53
   140017f13:	jmp    0x140017f4d
   140017f15:	dec    ecx
   140017f17:	je     0x140017f1f
   140017f19:	dec    ecx
   140017f1b:	je     0x140017f22
   140017f1d:	jmp    0x140017f31
   140017f1f:	mov    ebx,r10d
   140017f22:	mov    eax,0x4d
   140017f27:	jmp    0x140017f4d
   140017f29:	dec    ecx
   140017f2b:	je     0x140017f45
   140017f2d:	dec    ecx
   140017f2f:	je     0x140017f48
   140017f31:	mov    rax,QWORD PTR [r15]
   140017f34:	add    rdi,0x2
   140017f38:	mov    WORD PTR [rax],r8w
   140017f3c:	add    QWORD PTR [r15],0x2
   140017f40:	dec    QWORD PTR [r14]
   140017f43:	jmp    0x140017f7d
   140017f45:	mov    ebx,r10d
   140017f48:	mov    eax,0x49
   140017f4d:	mov    r8,QWORD PTR [rbp+0x0]
   140017f51:	mov    DWORD PTR [rsp+0x30],ebx
   140017f55:	mov    r9,r15
   140017f58:	movzx  edx,ax
   140017f5b:	mov    rcx,r13
   140017f5e:	mov    QWORD PTR [rsp+0x28],r12
   140017f63:	mov    QWORD PTR [rsp+0x20],r14
   140017f68:	call   0x1400180a8
   140017f6d:	xor    r11d,r11d
   140017f70:	test   eax,eax
   140017f72:	je     0x140017fb2
   140017f74:	mov    rdi,rsi
   140017f77:	mov    r10d,0x1
   140017f7d:	mov    r9,QWORD PTR [rbp+0x0]
   140017f81:	movzx  r8d,WORD PTR [rdi]
   140017f85:	test   r8w,r8w
   140017f89:	jne    0x140017ce6
   140017f8f:	mov    eax,r10d
   140017f92:	mov    rcx,QWORD PTR [rbp+0x28]
   140017f96:	xor    rcx,rbp
   140017f99:	call   0x140012670
   140017f9e:	mov    rbx,QWORD PTR [rbp+0x78]
   140017fa2:	lea    rsp,[rbp+0x30]
   140017fa6:	pop    r15
   140017fa8:	pop    r14
   140017faa:	pop    r13
   140017fac:	pop    r12
   140017fae:	pop    rdi
   140017faf:	pop    rsi
   140017fb0:	pop    rbp
   140017fb1:	ret    
   140017fb2:	xor    eax,eax
   140017fb4:	jmp    0x140017f92
   140017fb6:	int3   
   140017fb7:	int3   
   140017fb8:	mov    QWORD PTR [rsp+0x8],rbx
   140017fbd:	mov    QWORD PTR [rsp+0x10],rdi
   140017fc2:	xor    r11d,r11d
   140017fc5:	mov    ebx,ecx
   140017fc7:	cmp    DWORD PTR [rsp+0x28],r11d
   140017fcc:	je     0x140018036
   140017fce:	mov    r10,QWORD PTR [r8]
   140017fd1:	jmp    0x140018009
   140017fd3:	mov    eax,0x66666667
   140017fd8:	imul   ebx
   140017fda:	sar    edx,0x2
   140017fdd:	mov    eax,edx
   140017fdf:	shr    eax,0x1f
   140017fe2:	add    edx,eax
   140017fe4:	movzx  eax,dx
   140017fe7:	shl    ax,0x2
   140017feb:	lea    ecx,[rax+rdx*1]
   140017fee:	add    cx,cx
   140017ff1:	sub    bx,cx
   140017ff4:	add    bx,0x30
   140017ff8:	mov    WORD PTR [r10],bx
   140017ffc:	dec    QWORD PTR [r9]
   140017fff:	add    r10,0x2
   140018003:	mov    ebx,edx
   140018005:	test   edx,edx
   140018007:	jle    0x14001800f
   140018009:	cmp    QWORD PTR [r9],0x1
   14001800d:	ja     0x140017fd3
   14001800f:	mov    rdx,QWORD PTR [r8]
   140018012:	mov    QWORD PTR [r8],r10
   140018015:	sub    r10,0x2
   140018019:	movzx  eax,WORD PTR [rdx]
   14001801c:	movzx  ecx,WORD PTR [r10]
   140018020:	mov    WORD PTR [r10],ax
   140018024:	mov    WORD PTR [rdx],cx
   140018027:	add    rdx,0x2
   14001802b:	sub    r10,0x2
   14001802f:	cmp    rdx,r10
   140018032:	jb     0x140018019
   140018034:	jmp    0x14001809c
   140018036:	movsxd rax,edx
   140018039:	cmp    rax,QWORD PTR [r9]
   14001803c:	jae    0x140018099
   14001803e:	dec    edx
   140018040:	movsxd rax,edx
   140018043:	lea    r10d,[rdx+0x1]
   140018047:	test   r10d,r10d
   14001804a:	je     0x14001808a
   14001804c:	lea    rdi,[rax+rax*1]
   140018050:	mov    eax,0x66666667
   140018055:	inc    r11d
   140018058:	imul   ebx
   14001805a:	sar    edx,0x2
   14001805d:	mov    eax,edx
   14001805f:	shr    eax,0x1f
   140018062:	add    edx,eax
   140018064:	movzx  eax,dx
   140018067:	shl    ax,0x2
   14001806b:	lea    ecx,[rax+rdx*1]
   14001806e:	mov    rax,QWORD PTR [r8]
   140018071:	add    cx,cx
   140018074:	sub    bx,cx
   140018077:	add    bx,0x30
   14001807b:	mov    WORD PTR [rdi+rax*1],bx
   14001807f:	sub    rdi,0x2
   140018083:	dec    r10d
   140018086:	mov    ebx,edx
   140018088:	jne    0x140018050
   14001808a:	movsxd rcx,r11d
   14001808d:	lea    rax,[rcx+rcx*1]
   140018091:	add    QWORD PTR [r8],rax
   140018094:	sub    QWORD PTR [r9],rcx
   140018097:	jmp    0x14001809c
   140018099:	and    QWORD PTR [r9],r11
   14001809c:	mov    rbx,QWORD PTR [rsp+0x8]
   1400180a1:	mov    rdi,QWORD PTR [rsp+0x10]
   1400180a6:	ret    
   1400180a7:	int3   
   1400180a8:	mov    rax,rsp
   1400180ab:	mov    QWORD PTR [rax+0x8],rbx
   1400180af:	mov    QWORD PTR [rax+0x10],rbp
   1400180b3:	mov    QWORD PTR [rax+0x18],rsi
   1400180b7:	mov    QWORD PTR [rax+0x20],rdi
   1400180bb:	push   r12
   1400180bd:	push   r13
   1400180bf:	push   r14
   1400180c1:	sub    rsp,0x40
   1400180c5:	movzx  r10d,dx
   1400180c9:	mov    rdi,r9
   1400180cc:	mov    rsi,r8
   1400180cf:	mov    rbp,rcx
   1400180d2:	mov    r14d,0x1
   1400180d8:	cmp    r10d,0x59
   1400180dc:	jg     0x1400183c6
   1400180e2:	je     0x140018379
   1400180e8:	cmp    r10d,0x49
   1400180ec:	jg     0x14001825f
   1400180f2:	je     0x140018225
   1400180f8:	sub    r10d,0x4
   1400180fc:	je     0x140018756
   140018102:	sub    r10d,0x9
   140018106:	je     0x140018756
   14001810c:	sub    r10d,0x18
   140018110:	je     0x140018206
   140018116:	sub    r10d,0x1c
   14001811a:	je     0x1400181a5
   140018120:	dec    r10d
   140018123:	je     0x140018146
   140018125:	lea    ecx,[r14+0x5]
   140018129:	cmp    r10d,ecx
   14001812c:	jne    0x14001876b
   140018132:	mov    ecx,DWORD PTR [r8+0x8]
   140018136:	test   ecx,ecx
   140018138:	js     0x14001875b
   14001813e:	cmp    ecx,0x17
   140018141:	jmp    0x14001843c
   140018146:	xor    ebx,ebx
   140018148:	cmp    DWORD PTR [r8+0x10],ebx
   14001814c:	jl     0x14001875b
   140018152:	cmp    DWORD PTR [r8+0x10],0xb
   140018157:	jg     0x14001875b
   14001815d:	movsxd rcx,DWORD PTR [r8+0x10]
   140018161:	mov    rax,QWORD PTR [rsp+0x88]
   140018169:	mov    rdx,QWORD PTR [rax+rcx*8+0x238]
   140018171:	mov    rcx,QWORD PTR [rsp+0x80]
   140018179:	jmp    0x14001819b
   14001817b:	movzx  r8d,WORD PTR [rdx]
   14001817f:	test   r8w,r8w
   140018183:	je     0x140018756
   140018189:	mov    rax,QWORD PTR [r9]
   14001818c:	add    rdx,0x2
   140018190:	mov    WORD PTR [rax],r8w
   140018194:	add    QWORD PTR [r9],0x2
   140018198:	dec    QWORD PTR [rcx]
   14001819b:	cmp    QWORD PTR [rcx],rbx
   14001819e:	jne    0x14001817b
   1400181a0:	jmp    0x140018756
   1400181a5:	xor    ebx,ebx
   1400181a7:	cmp    DWORD PTR [r8+0x18],ebx
   1400181ab:	jl     0x14001875b
   1400181b1:	lea    ecx,[rbx+0x6]
   1400181b4:	cmp    DWORD PTR [r8+0x18],ecx
   1400181b8:	jg     0x14001875b
   1400181be:	movsxd rcx,DWORD PTR [r8+0x18]
   1400181c2:	mov    rax,QWORD PTR [rsp+0x88]
   1400181ca:	mov    rdx,QWORD PTR [rax+rcx*8+0x1a0]
   1400181d2:	mov    rcx,QWORD PTR [rsp+0x80]
   1400181da:	jmp    0x1400181fc
   1400181dc:	movzx  r8d,WORD PTR [rdx]
   1400181e0:	test   r8w,r8w
   1400181e4:	je     0x140018756
   1400181ea:	mov    rax,QWORD PTR [r9]
   1400181ed:	add    rdx,0x2
   1400181f1:	mov    WORD PTR [rax],r8w
   1400181f5:	add    QWORD PTR [r9],0x2
   1400181f9:	dec    QWORD PTR [rcx]
   1400181fc:	cmp    QWORD PTR [rcx],rbx
   1400181ff:	jne    0x1400181dc
   140018201:	jmp    0x140018756
   140018206:	mov    rax,QWORD PTR [r9]
   140018209:	mov    ecx,0x25
   14001820e:	mov    WORD PTR [rax],cx
   140018211:	mov    rax,QWORD PTR [rsp+0x80]
   140018219:	add    QWORD PTR [r9],0x2
   14001821d:	dec    QWORD PTR [rax]
   140018220:	jmp    0x140018756
   140018225:	mov    ecx,DWORD PTR [r8+0x8]
   140018229:	test   ecx,ecx
   14001822b:	js     0x14001875b
   140018231:	cmp    ecx,0x17
   140018234:	jg     0x14001875b
   14001823a:	mov    eax,0x2aaaaaab
   14001823f:	imul   ecx
   140018241:	sar    edx,1
   140018243:	mov    eax,edx
   140018245:	shr    eax,0x1f
   140018248:	add    edx,eax
   14001824a:	lea    eax,[rdx+rdx*2]
   14001824d:	shl    eax,0x2
   140018250:	sub    ecx,eax
   140018252:	mov    eax,0xc
   140018257:	cmove  ecx,eax
   14001825a:	jmp    0x140018442
   14001825f:	sub    r10d,0x4d
   140018263:	je     0x140018365
   140018269:	mov    ecx,0x6
   14001826e:	sub    r10d,ecx
   140018271:	je     0x140018349
   140018277:	sub    r10d,0x2
   14001827b:	je     0x1400182df
   14001827d:	sub    r10d,0x2
   140018281:	je     0x1400182c0
   140018283:	dec    r10d
   140018286:	jne    0x14001876b
   14001828c:	mov    rax,QWORD PTR [rsp+0x88]
   140018294:	mov    QWORD PTR [rsp+0x28],rax
   140018299:	mov    rax,QWORD PTR [rsp+0x80]
   1400182a1:	mov    QWORD PTR [rsp+0x20],rax
   1400182a6:	mov    edx,0x2
   1400182ab:	mov    rcx,rbp
   1400182ae:	call   0x140017b00
   1400182b3:	test   eax,eax
   1400182b5:	jne    0x140018756
   1400182bb:	jmp    0x14001876b
   1400182c0:	mov    eax,DWORD PTR [r8+0x18]
   1400182c4:	xor    ebx,ebx
   1400182c6:	test   eax,eax
   1400182c8:	js     0x14001875b
   1400182ce:	cmp    eax,ecx
   1400182d0:	jg     0x14001875b
   1400182d6:	test   eax,eax
   1400182d8:	je     0x1400182f9
   1400182da:	lea    ecx,[rax-0x1]
   1400182dd:	jmp    0x1400182f9
   1400182df:	xor    ebx,ebx
   1400182e1:	cmp    DWORD PTR [r8+0x18],ebx
   1400182e5:	jl     0x14001875b
   1400182eb:	cmp    DWORD PTR [r8+0x18],ecx
   1400182ef:	jg     0x14001875b
   1400182f5:	mov    ecx,DWORD PTR [r8+0x18]
   1400182f9:	cmp    DWORD PTR [r8+0x1c],ebx
   1400182fd:	jl     0x14001875b
   140018303:	cmp    DWORD PTR [r8+0x1c],0x16d
   14001830b:	jg     0x14001875b
   140018311:	cmp    DWORD PTR [r8+0x1c],ecx
   140018315:	jl     0x140018342
   140018317:	mov    r8d,DWORD PTR [r8+0x1c]
   14001831b:	mov    eax,0x92492493
   140018320:	imul   r8d
   140018323:	add    edx,r8d
   140018326:	sar    edx,0x2
   140018329:	mov    eax,edx
   14001832b:	shr    eax,0x1f
   14001832e:	add    edx,eax
   140018330:	mov    eax,edx
   140018332:	mov    ebx,edx
   140018334:	imul   eax,eax,0x7
   140018337:	sub    r8d,eax
   14001833a:	cmp    r8d,ecx
   14001833d:	jl     0x140018342
   14001833f:	add    ebx,r14d
   140018342:	mov    ecx,ebx
   140018344:	jmp    0x140018442
   140018349:	xor    ebx,ebx
   14001834b:	cmp    DWORD PTR [r8],ebx
   14001834e:	jl     0x14001875b
   140018354:	cmp    DWORD PTR [r8],0x3b
   140018358:	jg     0x14001875b
   14001835e:	mov    ecx,DWORD PTR [rsi]
   140018360:	jmp    0x140018442
   140018365:	mov    ecx,DWORD PTR [r8+0x4]
   140018369:	test   ecx,ecx
   14001836b:	js     0x14001875b
   140018371:	cmp    ecx,0x3b
   140018374:	jmp    0x14001843c
   140018379:	cmp    DWORD PTR [r8+0x14],0xfffff894
   140018381:	jl     0x14001875b
   140018387:	cmp    DWORD PTR [r8+0x14],0x1fa3
   14001838f:	jg     0x14001875b
   140018395:	mov    r8d,DWORD PTR [r8+0x14]
   140018399:	mov    eax,0x51eb851f
   14001839e:	imul   r8d
   1400183a1:	sar    edx,0x5
   1400183a4:	mov    eax,edx
   1400183a6:	shr    eax,0x1f
   1400183a9:	add    edx,eax
   1400183ab:	mov    eax,edx
   1400183ad:	lea    ecx,[rdx+0x13]
   1400183b0:	mov    edx,0x4
   1400183b5:	imul   eax,eax,0x64
   1400183b8:	sub    r8d,eax
   1400183bb:	imul   ecx,ecx,0x64
   1400183be:	add    ecx,r8d
   1400183c1:	jmp    0x140018447
   1400183c6:	cmp    r10d,0x6d
   1400183ca:	jg     0x1400185ae
   1400183d0:	je     0x140018592
   1400183d6:	sub    r10d,0x5a
   1400183da:	je     0x1400185d9
   1400183e0:	sub    r10d,0x7
   1400183e4:	je     0x140018531
   1400183ea:	dec    r10d
   1400183ed:	je     0x1400184d2
   1400183f3:	dec    r10d
   1400183f6:	je     0x140018467
   1400183f8:	dec    r10d
   1400183fb:	je     0x14001842c
   1400183fd:	mov    ecx,0x6
   140018402:	cmp    r10d,ecx
   140018405:	jne    0x14001876b
   14001840b:	mov    ecx,DWORD PTR [r8+0x1c]
   14001840f:	test   ecx,ecx
   140018411:	js     0x14001875b
   140018417:	cmp    ecx,0x16d
   14001841d:	jg     0x14001875b
   140018423:	inc    ecx
   140018425:	mov    edx,0x3
   14001842a:	jmp    0x140018447
   14001842c:	mov    ecx,DWORD PTR [r8+0xc]
   140018430:	cmp    ecx,r14d
   140018433:	jl     0x14001875b
   140018439:	cmp    ecx,0x1f
   14001843c:	jg     0x14001875b
   140018442:	mov    edx,0x2
   140018447:	mov    eax,DWORD PTR [rsp+0x90]
   14001844e:	mov    r9,QWORD PTR [rsp+0x80]
   140018456:	mov    r8,rdi
   140018459:	mov    DWORD PTR [rsp+0x20],eax
   14001845d:	call   0x140017fb8
   140018462:	jmp    0x140018756
   140018467:	mov    r13,QWORD PTR [rsp+0x88]
   14001846f:	mov    r12,QWORD PTR [rsp+0x80]
   140018477:	xor    ebx,ebx
   140018479:	mov    QWORD PTR [rsp+0x28],r13
   14001847e:	mov    QWORD PTR [rsp+0x20],r12
   140018483:	cmp    DWORD PTR [rsp+0x90],ebx
   14001848a:	je     0x1400184ce
   14001848c:	mov    edx,r14d
   14001848f:	call   0x140017b00
   140018494:	test   eax,eax
   140018496:	je     0x14001876b
   14001849c:	cmp    QWORD PTR [r12],rbx
   1400184a0:	je     0x14001876b
   1400184a6:	mov    rax,QWORD PTR [rdi]
   1400184a9:	mov    ecx,0x20
   1400184ae:	mov    QWORD PTR [rsp+0x28],r13
   1400184b3:	mov    WORD PTR [rax],cx
   1400184b6:	add    QWORD PTR [rdi],0x2
   1400184ba:	dec    QWORD PTR [r12]
   1400184be:	mov    QWORD PTR [rsp+0x20],r12
   1400184c3:	mov    r9,rdi
   1400184c6:	mov    r8,rsi
   1400184c9:	jmp    0x1400182a6
   1400184ce:	xor    edx,edx
   1400184d0:	jmp    0x14001848f
   1400184d2:	xor    ebx,ebx
   1400184d4:	cmp    DWORD PTR [r8+0x10],ebx
   1400184d8:	jl     0x14001875b
   1400184de:	cmp    DWORD PTR [r8+0x10],0xb
   1400184e3:	jg     0x14001875b
   1400184e9:	movsxd rcx,DWORD PTR [r8+0x10]
   1400184ed:	mov    rax,QWORD PTR [rsp+0x88]
   1400184f5:	mov    rdx,QWORD PTR [rax+rcx*8+0x1d8]
   1400184fd:	mov    rcx,QWORD PTR [rsp+0x80]
   140018505:	jmp    0x140018527
   140018507:	movzx  r8d,WORD PTR [rdx]
   14001850b:	test   r8w,r8w
   14001850f:	je     0x140018756
   140018515:	mov    rax,QWORD PTR [r9]
   140018518:	add    rdx,0x2
   14001851c:	mov    WORD PTR [rax],r8w
   140018520:	add    QWORD PTR [r9],0x2
   140018524:	dec    QWORD PTR [rcx]
   140018527:	cmp    QWORD PTR [rcx],rbx
   14001852a:	jne    0x140018507
   14001852c:	jmp    0x140018756
   140018531:	xor    ebx,ebx
   140018533:	cmp    DWORD PTR [r8+0x18],ebx
   140018537:	jl     0x14001875b
   14001853d:	lea    ecx,[rbx+0x6]
   140018540:	cmp    DWORD PTR [r8+0x18],ecx
   140018544:	jg     0x14001875b
   14001854a:	movsxd rcx,DWORD PTR [r8+0x18]
   14001854e:	mov    rax,QWORD PTR [rsp+0x88]
   140018556:	mov    rdx,QWORD PTR [rax+rcx*8+0x168]
   14001855e:	mov    rcx,QWORD PTR [rsp+0x80]
   140018566:	jmp    0x140018588
   140018568:	movzx  r8d,WORD PTR [rdx]
   14001856c:	test   r8w,r8w
   140018570:	je     0x140018756
   140018576:	mov    rax,QWORD PTR [r9]
   140018579:	add    rdx,0x2
   14001857d:	mov    WORD PTR [rax],r8w
   140018581:	add    QWORD PTR [r9],0x2
   140018585:	dec    QWORD PTR [rcx]
   140018588:	cmp    QWORD PTR [rcx],rbx
   14001858b:	jne    0x140018568
   14001858d:	jmp    0x140018756
   140018592:	mov    ecx,DWORD PTR [r8+0x10]
   140018596:	test   ecx,ecx
   140018598:	js     0x14001875b
   14001859e:	cmp    ecx,0xb
   1400185a1:	jg     0x14001875b
   1400185a7:	inc    ecx
   1400185a9:	jmp    0x140018442
   1400185ae:	sub    r10d,0x70
   1400185b2:	je     0x1400186ce
   1400185b8:	sub    r10d,0x7
   1400185bc:	je     0x1400186aa
   1400185c2:	dec    r10d
   1400185c5:	je     0x140018676
   1400185cb:	dec    r10d
   1400185ce:	je     0x14001864f
   1400185d0:	dec    r10d
   1400185d3:	jne    0x14001876b
   1400185d9:	call   0x14001be0c
   1400185de:	xor    ebx,ebx
   1400185e0:	mov    QWORD PTR [rsp+0x30],rbx
   1400185e5:	call   0x14001b404
   1400185ea:	cmp    DWORD PTR [rsi+0x20],ebx
   1400185ed:	mov    rsi,QWORD PTR [rsp+0x80]
   1400185f5:	mov    rdx,QWORD PTR [rdi]
   1400185f8:	mov    r9d,ebx
   1400185fb:	mov    r8,QWORD PTR [rsi]
   1400185fe:	setne  r9b
   140018602:	lea    rcx,[rsp+0x30]
   140018607:	mov    r9,QWORD PTR [rax+r9*8]
   14001860b:	mov    QWORD PTR [rsp+0x28],rbp
   140018610:	or     QWORD PTR [rsp+0x20],0xffffffffffffffff
   140018616:	call   0x140014458
   14001861b:	test   eax,eax
   14001861d:	jne    0x14001863a
   14001861f:	mov    rcx,QWORD PTR [rsp+0x30]
   140018624:	lea    rax,[rcx+rcx*1-0x2]
   140018629:	add    QWORD PTR [rdi],rax
   14001862c:	mov    rax,r14
   14001862f:	sub    rax,rcx
   140018632:	add    QWORD PTR [rsi],rax
   140018635:	jmp    0x140018756
   14001863a:	xor    r9d,r9d
   14001863d:	xor    r8d,r8d
   140018640:	xor    edx,edx
   140018642:	xor    ecx,ecx
   140018644:	mov    QWORD PTR [rsp+0x20],rbx
   140018649:	call   0x140019ed0
   14001864e:	int3   
   14001864f:	mov    ecx,DWORD PTR [r8+0x14]
   140018653:	test   ecx,ecx
   140018655:	js     0x14001875b
   14001865b:	mov    eax,0x51eb851f
   140018660:	imul   ecx
   140018662:	sar    edx,0x5
   140018665:	mov    eax,edx
   140018667:	shr    eax,0x1f
   14001866a:	add    edx,eax
   14001866c:	imul   edx,edx,0x64
   14001866f:	sub    ecx,edx
   140018671:	jmp    0x140018442
   140018676:	mov    rax,QWORD PTR [rsp+0x88]
   14001867e:	xor    ebx,ebx
   140018680:	mov    QWORD PTR [rsp+0x28],rax
   140018685:	mov    rax,QWORD PTR [rsp+0x80]
   14001868d:	mov    QWORD PTR [rsp+0x20],rax
   140018692:	cmp    DWORD PTR [rsp+0x90],ebx
   140018699:	je     0x1400186a3
   14001869b:	mov    edx,r14d
   14001869e:	jmp    0x1400182ae
   1400186a3:	xor    edx,edx
   1400186a5:	jmp    0x1400182ae
   1400186aa:	xor    ebx,ebx
   1400186ac:	cmp    DWORD PTR [r8+0x18],ebx
   1400186b0:	jl     0x14001875b
   1400186b6:	lea    ecx,[rbx+0x6]
   1400186b9:	cmp    DWORD PTR [r8+0x18],ecx
   1400186bd:	jg     0x14001875b
   1400186c3:	mov    ecx,DWORD PTR [rsi+0x18]
   1400186c6:	mov    edx,r14d
   1400186c9:	jmp    0x140018447
   1400186ce:	xor    ebx,ebx
   1400186d0:	cmp    DWORD PTR [r8+0x8],ebx
   1400186d4:	jl     0x14001875b
   1400186da:	cmp    DWORD PTR [r8+0x8],0x17
   1400186df:	jg     0x14001875b
   1400186e1:	cmp    DWORD PTR [r8+0x8],0xb
   1400186e6:	mov    rax,QWORD PTR [rsp+0x88]
   1400186ee:	jg     0x140018724
   1400186f0:	mov    rdx,QWORD PTR [rax+0x298]
   1400186f7:	mov    rcx,QWORD PTR [rsp+0x80]
   1400186ff:	jmp    0x14001871d
   140018701:	movzx  r8d,WORD PTR [rdx]
   140018705:	test   r8w,r8w
   140018709:	je     0x140018756
   14001870b:	mov    rax,QWORD PTR [r9]
   14001870e:	add    rdx,0x2
   140018712:	mov    WORD PTR [rax],r8w
   140018716:	add    QWORD PTR [r9],0x2
   14001871a:	dec    QWORD PTR [rcx]
   14001871d:	cmp    QWORD PTR [rcx],rbx
   140018720:	jne    0x140018701
   140018722:	jmp    0x140018756
   140018724:	mov    r8,QWORD PTR [rax+0x2a0]
   14001872b:	mov    rdx,QWORD PTR [rsp+0x80]
   140018733:	jmp    0x140018751
   140018735:	movzx  r9d,WORD PTR [r8]
   140018739:	test   r9w,r9w
   14001873d:	je     0x140018756
   14001873f:	mov    rcx,QWORD PTR [rdi]
   140018742:	add    r8,0x2
   140018746:	mov    WORD PTR [rcx],r9w
   14001874a:	add    QWORD PTR [rdi],0x2
   14001874e:	dec    QWORD PTR [rdx]
   140018751:	cmp    QWORD PTR [rdx],rbx
   140018754:	jne    0x140018735
   140018756:	mov    eax,r14d
   140018759:	jmp    0x14001876d
   14001875b:	call   0x14001583c
   140018760:	mov    DWORD PTR [rax],0x16
   140018766:	call   0x140019f74
   14001876b:	xor    eax,eax
   14001876d:	mov    rbx,QWORD PTR [rsp+0x60]
   140018772:	mov    rbp,QWORD PTR [rsp+0x68]
   140018777:	mov    rsi,QWORD PTR [rsp+0x70]
   14001877c:	mov    rdi,QWORD PTR [rsp+0x78]
   140018781:	add    rsp,0x40
   140018785:	pop    r14
   140018787:	pop    r13
   140018789:	pop    r12
   14001878b:	ret    
   14001878c:	mov    rax,rsp
   14001878f:	mov    QWORD PTR [rax+0x10],rbx
   140018793:	mov    QWORD PTR [rax+0x18],rsi
   140018797:	mov    QWORD PTR [rax+0x20],rdi
   14001879b:	mov    QWORD PTR [rax+0x8],rcx
   14001879f:	push   rbp
   1400187a0:	push   r12
   1400187a2:	push   r13
   1400187a4:	push   r14
   1400187a6:	push   r15
   1400187a8:	mov    rbp,rsp
   1400187ab:	sub    rsp,0x70
   1400187af:	mov    rdi,rdx
   1400187b2:	mov    rdx,QWORD PTR [rbp+0x58]
   1400187b6:	mov    r13,rcx
   1400187b9:	lea    rcx,[rbp-0x28]
   1400187bd:	xor    r15d,r15d
   1400187c0:	mov    r14,r9
   1400187c3:	mov    rbx,r8
   1400187c6:	mov    r12d,r15d
   1400187c9:	call   0x140012690
   1400187ce:	mov    r11,QWORD PTR [rbp+0x30]
   1400187d2:	test   r11,r11
   1400187d5:	je     0x1400188f2
   1400187db:	test   rdi,rdi
   1400187de:	je     0x1400188f2
   1400187e4:	mov    WORD PTR [r11],r15w
   1400187e8:	test   rbx,rbx
   1400187eb:	je     0x1400188f2
   1400187f1:	mov    rsi,QWORD PTR [rbp+0x50]
   1400187f5:	test   rsi,rsi
   1400187f8:	jne    0x140018805
   1400187fa:	mov    rax,QWORD PTR [rbp-0x28]
   1400187fe:	mov    rsi,QWORD PTR [rax+0x158]
   140018805:	mov    rax,rdi
   140018808:	mov    QWORD PTR [rbp-0x30],rax
   14001880c:	test   rdi,rdi
   14001880f:	je     0x1400188d5
   140018815:	mov    rcx,QWORD PTR [rbp+0x30]
   140018819:	movzx  edx,WORD PTR [rbx]
   14001881c:	test   edx,edx
   14001881e:	je     0x1400188a6
   140018824:	cmp    edx,0x25
   140018827:	je     0x140018849
   140018829:	mov    WORD PTR [rcx],dx
   14001882c:	mov    rcx,QWORD PTR [rbp+0x30]
   140018830:	mov    rax,QWORD PTR [rbp-0x30]
   140018834:	add    rcx,0x2
   140018838:	add    rbx,0x2
   14001883c:	dec    rax
   14001883f:	mov    QWORD PTR [rbp-0x30],rax
   140018843:	mov    QWORD PTR [rbp+0x30],rcx
   140018847:	jmp    0x14001889d
   140018849:	test   r14,r14
   14001884c:	je     0x1400188f2
   140018852:	add    rbx,0x2
   140018856:	mov    eax,r15d
   140018859:	cmp    WORD PTR [rbx],0x23
   14001885d:	jne    0x140018868
   14001885f:	mov    eax,0x1
   140018864:	add    rbx,0x2
   140018868:	movzx  edx,WORD PTR [rbx]
   14001886b:	mov    DWORD PTR [rsp+0x30],eax
   14001886f:	lea    rax,[rbp-0x30]
   140018873:	lea    r9,[rbp+0x30]
   140018877:	lea    rcx,[rbp-0x28]
   14001887b:	mov    r8,r14
   14001887e:	mov    QWORD PTR [rsp+0x28],rsi
   140018883:	mov    QWORD PTR [rsp+0x20],rax
   140018888:	call   0x1400180a8
   14001888d:	test   eax,eax
   14001888f:	je     0x1400188c9
   140018891:	mov    rcx,QWORD PTR [rbp+0x30]
   140018895:	mov    rax,QWORD PTR [rbp-0x30]
   140018899:	add    rbx,0x2
   14001889d:	test   rax,rax
   1400188a0:	jne    0x140018819
   1400188a6:	test   rax,rax
   1400188a9:	je     0x1400188d5
   1400188ab:	mov    WORD PTR [rcx],r15w
   1400188af:	sub    rdi,QWORD PTR [rbp-0x30]
   1400188b3:	cmp    BYTE PTR [rbp-0x10],r15b
   1400188b7:	je     0x1400188c4
   1400188b9:	mov    rcx,QWORD PTR [rbp-0x18]
   1400188bd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400188c4:	mov    rax,rdi
   1400188c7:	jmp    0x140018915
   1400188c9:	cmp    QWORD PTR [rbp-0x30],r15
   1400188cd:	jbe    0x1400188d5
   1400188cf:	mov    r12d,0x1
   1400188d5:	mov    WORD PTR [r13+0x0],r15w
   1400188da:	test   r12d,r12d
   1400188dd:	jne    0x1400188f2
   1400188df:	cmp    QWORD PTR [rbp-0x30],r15
   1400188e3:	ja     0x1400188f2
   1400188e5:	call   0x14001583c
   1400188ea:	mov    DWORD PTR [rax],0x22
   1400188f0:	jmp    0x140018902
   1400188f2:	call   0x14001583c
   1400188f7:	mov    DWORD PTR [rax],0x16
   1400188fd:	call   0x140019f74
   140018902:	cmp    BYTE PTR [rbp-0x10],r15b
   140018906:	je     0x140018913
   140018908:	mov    rax,QWORD PTR [rbp-0x18]
   14001890c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140018913:	xor    eax,eax
   140018915:	lea    r11,[rsp+0x70]
   14001891a:	mov    rbx,QWORD PTR [r11+0x38]
   14001891e:	mov    rsi,QWORD PTR [r11+0x40]
   140018922:	mov    rdi,QWORD PTR [r11+0x48]
   140018926:	mov    rsp,r11
   140018929:	pop    r15
   14001892b:	pop    r14
   14001892d:	pop    r13
   14001892f:	pop    r12
   140018931:	pop    rbp
   140018932:	ret    
   140018933:	int3   
   140018934:	sub    rsp,0x38
   140018938:	and    QWORD PTR [rsp+0x28],0x0
   14001893e:	and    QWORD PTR [rsp+0x20],0x0
   140018944:	call   0x14001878c
   140018949:	add    rsp,0x38
   14001894d:	ret    
   14001894e:	int3   
   14001894f:	int3   
   140018950:	mov    QWORD PTR [rsp+0x10],rbx
   140018955:	mov    QWORD PTR [rsp+0x18],rsi
   14001895a:	push   rdi
   14001895b:	sub    rsp,0x100
   140018962:	mov    rax,QWORD PTR [rip+0x26fc7]        # 0x14003f930
   140018969:	xor    rax,rsp
   14001896c:	mov    QWORD PTR [rsp+0xf0],rax
   140018974:	xor    ebx,ebx
   140018976:	mov    rdi,rcx
   140018979:	mov    DWORD PTR [rsp+0x30],ebx
   14001897d:	test   rcx,rcx
   140018980:	jne    0x1400189b8
   140018982:	call   0x14001583c
   140018987:	lea    ebx,[rdi+0x16]
   14001898a:	mov    DWORD PTR [rax],ebx
   14001898c:	call   0x140019f74
   140018991:	mov    eax,ebx
   140018993:	mov    rcx,QWORD PTR [rsp+0xf0]
   14001899b:	xor    rcx,rsp
   14001899e:	call   0x140012670
   1400189a3:	lea    r11,[rsp+0x100]
   1400189ab:	mov    rbx,QWORD PTR [r11+0x18]
   1400189af:	mov    rsi,QWORD PTR [r11+0x20]
   1400189b3:	mov    rsp,r11
   1400189b6:	pop    rdi
   1400189b7:	ret    
   1400189b8:	call   0x14001be0c
   1400189bd:	lea    rcx,[rsp+0x30]
   1400189c2:	call   0x14001b3bc
   1400189c7:	test   eax,eax
   1400189c9:	jne    0x140018ace
   1400189cf:	mov    eax,0x88888889
   1400189d4:	lea    rcx,[rsp+0x38]
   1400189d9:	imul   DWORD PTR [rsp+0x30]
   1400189dd:	add    edx,DWORD PTR [rsp+0x30]
   1400189e1:	sar    edx,0x5
   1400189e4:	mov    eax,edx
   1400189e6:	shr    eax,0x1f
   1400189e9:	add    edx,eax
   1400189eb:	mov    WORD PTR [rdi+0xa],dx
   1400189ef:	call   QWORD PTR [rip+0x16843]        # 0x14002f238
   1400189f5:	mov    rcx,QWORD PTR [rsp+0x38]
   1400189fa:	movabs rax,0xe5109ec205d7bea7
   140018a04:	mul    rcx
   140018a07:	mov    rsi,rdx
   140018a0a:	shr    rsi,0x1d
   140018a0e:	cmp    rsi,QWORD PTR [rip+0x3c9b3]        # 0x1400553c8
   140018a15:	je     0x140018a5b
   140018a17:	lea    rcx,[rsp+0x40]
   140018a1c:	call   QWORD PTR [rip+0x16896]        # 0x14002f2b8
   140018a22:	cmp    eax,0xffffffff
   140018a25:	je     0x140018a44
   140018a27:	cmp    eax,0x2
   140018a2a:	jne    0x140018a47
   140018a2c:	cmp    WORD PTR [rsp+0xda],bx
   140018a34:	je     0x140018a47
   140018a36:	cmp    DWORD PTR [rsp+0xe8],ebx
   140018a3d:	je     0x140018a47
   140018a3f:	lea    ebx,[rax-0x1]
   140018a42:	jmp    0x140018a47
   140018a44:	or     ebx,0xffffffff
   140018a47:	mov    rcx,QWORD PTR [rsp+0x38]
   140018a4c:	mov    DWORD PTR [rip+0x2748a],ebx        # 0x14003fedc
   140018a52:	mov    QWORD PTR [rip+0x3c96f],rsi        # 0x1400553c8
   140018a59:	jmp    0x140018a61
   140018a5b:	mov    ebx,DWORD PTR [rip+0x2747b]        # 0x14003fedc
   140018a61:	movabs rax,0x346dc5d63886594b
   140018a6b:	mov    WORD PTR [rdi+0xc],bx
   140018a6f:	mul    rcx
   140018a72:	movabs rax,0x624dd2f1a9fbe77
   140018a7c:	mov    r8,rdx
   140018a7f:	shr    r8,0xb
   140018a83:	mul    r8
   140018a86:	mov    rax,r8
   140018a89:	sub    rax,rdx
   140018a8c:	shr    rax,1
   140018a8f:	add    rax,rdx
   140018a92:	shr    rax,0x9
   140018a96:	imul   rax,rax,0x3e8
   140018a9d:	sub    r8,rax
   140018aa0:	movabs rax,0xfe624e212ac18000
   140018aaa:	lea    rdx,[rcx+rax*1]
   140018aae:	movabs rax,0xd6bf94d5e57a42bd
   140018ab8:	mov    WORD PTR [rdi+0x8],r8w
   140018abd:	mul    rdx
   140018ac0:	shr    rdx,0x17
   140018ac4:	xor    eax,eax
   140018ac6:	mov    QWORD PTR [rdi],rdx
   140018ac9:	jmp    0x140018993
   140018ace:	xor    r9d,r9d
   140018ad1:	xor    r8d,r8d
   140018ad4:	xor    edx,edx
   140018ad6:	xor    ecx,ecx
   140018ad8:	mov    QWORD PTR [rsp+0x20],rbx
   140018add:	call   0x140019ed0
   140018ae2:	int3   
   140018ae3:	int3   
   140018ae4:	mov    QWORD PTR [rsp+0x8],rbx
   140018ae9:	mov    QWORD PTR [rsp+0x10],rsi
   140018aee:	mov    QWORD PTR [rsp+0x18],rdi
   140018af3:	push   rbp
   140018af4:	push   r12
   140018af6:	push   r13
   140018af8:	mov    rbp,rsp
   140018afb:	sub    rsp,0x50
   140018aff:	xor    ebx,ebx
   140018b01:	mov    r12,r8
   140018b04:	mov    r13,rcx
   140018b07:	mov    rsi,rdx
   140018b0a:	lea    rcx,[rbp-0x28]
   140018b0e:	lea    r8d,[rbx+0x28]
   140018b12:	xor    edx,edx
   140018b14:	mov    rdi,r9
   140018b17:	mov    QWORD PTR [rbp-0x30],rbx
   140018b1b:	call   0x140012fb0
   140018b20:	test   rdi,rdi
   140018b23:	jne    0x140018b3d
   140018b25:	call   0x14001583c
   140018b2a:	mov    DWORD PTR [rax],0x16
   140018b30:	call   0x140019f74
   140018b35:	or     eax,0xffffffff
   140018b38:	jmp    0x140018be4
   140018b3d:	test   r12,r12
   140018b40:	je     0x140018b47
   140018b42:	test   rsi,rsi
   140018b45:	je     0x140018b25
   140018b47:	mov    DWORD PTR [rbp-0x18],0x42
   140018b4e:	mov    QWORD PTR [rbp-0x20],rsi
   140018b52:	mov    QWORD PTR [rbp-0x30],rsi
   140018b56:	cmp    r12,0x3fffffff
   140018b5d:	jbe    0x140018b68
   140018b5f:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   140018b66:	jmp    0x140018b6f
   140018b68:	lea    eax,[r12+r12*1]
   140018b6c:	mov    DWORD PTR [rbp-0x28],eax
   140018b6f:	mov    r9,QWORD PTR [rbp+0x48]
   140018b73:	mov    r8,QWORD PTR [rbp+0x40]
   140018b77:	lea    rcx,[rbp-0x30]
   140018b7b:	mov    rdx,rdi
   140018b7e:	call   r13
   140018b81:	mov    edi,eax
   140018b83:	test   rsi,rsi
   140018b86:	je     0x140018be4
   140018b88:	test   eax,eax
   140018b8a:	js     0x140018bd5
   140018b8c:	dec    DWORD PTR [rbp-0x28]
   140018b8f:	js     0x140018ba4
   140018b91:	mov    rax,QWORD PTR [rbp-0x30]
   140018b95:	mov    BYTE PTR [rax],bl
   140018b97:	mov    rax,QWORD PTR [rbp-0x30]
   140018b9b:	inc    rax
   140018b9e:	mov    QWORD PTR [rbp-0x30],rax
   140018ba2:	jmp    0x140018bb8
   140018ba4:	lea    rdx,[rbp-0x30]
   140018ba8:	xor    ecx,ecx
   140018baa:	call   0x14001e4a4
   140018baf:	cmp    eax,0xffffffff
   140018bb2:	je     0x140018bd5
   140018bb4:	mov    rax,QWORD PTR [rbp-0x30]
   140018bb8:	dec    DWORD PTR [rbp-0x28]
   140018bbb:	js     0x140018bc1
   140018bbd:	mov    BYTE PTR [rax],bl
   140018bbf:	jmp    0x140018bd1
   140018bc1:	lea    rdx,[rbp-0x30]
   140018bc5:	xor    ecx,ecx
   140018bc7:	call   0x14001e4a4
   140018bcc:	cmp    eax,0xffffffff
   140018bcf:	je     0x140018bd5
   140018bd1:	mov    eax,edi
   140018bd3:	jmp    0x140018be4
   140018bd5:	cmp    DWORD PTR [rbp-0x28],ebx
   140018bd8:	mov    WORD PTR [rsi+r12*2-0x2],bx
   140018bde:	setge  bl
   140018be1:	lea    eax,[rbx-0x2]
   140018be4:	lea    r11,[rsp+0x50]
   140018be9:	mov    rbx,QWORD PTR [r11+0x20]
   140018bed:	mov    rsi,QWORD PTR [r11+0x28]
   140018bf1:	mov    rdi,QWORD PTR [r11+0x30]
   140018bf5:	mov    rsp,r11
   140018bf8:	pop    r13
   140018bfa:	pop    r12
   140018bfc:	pop    rbp
   140018bfd:	ret    
   140018bfe:	int3   
   140018bff:	int3   
   140018c00:	mov    QWORD PTR [rsp+0x8],rbx
   140018c05:	push   rdi
   140018c06:	sub    rsp,0x30
   140018c0a:	xor    edi,edi
   140018c0c:	mov    rbx,rcx
   140018c0f:	test   r8,r8
   140018c12:	je     0x140018c5b
   140018c14:	test   rcx,rcx
   140018c17:	je     0x140018c5b
   140018c19:	test   rdx,rdx
   140018c1c:	je     0x140018c5b
   140018c1e:	mov    rax,QWORD PTR [rsp+0x60]
   140018c23:	mov    QWORD PTR [rsp+0x28],rax
   140018c28:	mov    QWORD PTR [rsp+0x20],r9
   140018c2d:	mov    r9,r8
   140018c30:	mov    r8,rdx
   140018c33:	mov    rdx,rcx
   140018c36:	lea    rcx,[rip+0xcb67]        # 0x1400257a4
   140018c3d:	call   0x140018ae4
   140018c42:	test   eax,eax
   140018c44:	jns    0x140018c49
   140018c46:	mov    WORD PTR [rbx],di
   140018c49:	cmp    eax,0xfffffffe
   140018c4c:	jne    0x140018c6e
   140018c4e:	call   0x14001583c
   140018c53:	mov    DWORD PTR [rax],0x22
   140018c59:	jmp    0x140018c66
   140018c5b:	call   0x14001583c
   140018c60:	mov    DWORD PTR [rax],0x16
   140018c66:	call   0x140019f74
   140018c6b:	or     eax,0xffffffff
   140018c6e:	mov    rbx,QWORD PTR [rsp+0x40]
   140018c73:	add    rsp,0x30
   140018c77:	pop    rdi
   140018c78:	ret    
   140018c79:	int3   
   140018c7a:	int3   
   140018c7b:	int3   
   140018c7c:	mov    QWORD PTR [rsp+0x8],rbx
   140018c81:	mov    QWORD PTR [rsp+0x10],rbp
   140018c86:	mov    QWORD PTR [rsp+0x18],rsi
   140018c8b:	push   rdi
   140018c8c:	push   r12
   140018c8e:	push   r13
   140018c90:	sub    rsp,0x30
   140018c94:	xor    r13d,r13d
   140018c97:	mov    rbp,r9
   140018c9a:	mov    rsi,r8
   140018c9d:	mov    rbx,rdx
   140018ca0:	mov    rdi,rcx
   140018ca3:	test   r9,r9
   140018ca6:	je     0x140018d9d
   140018cac:	test   r8,r8
   140018caf:	jne    0x140018cc6
   140018cb1:	test   rcx,rcx
   140018cb4:	jne    0x140018ccf
   140018cb6:	test   rdx,rdx
   140018cb9:	jne    0x140018d9d
   140018cbf:	xor    eax,eax
   140018cc1:	jmp    0x140018db0
   140018cc6:	test   rcx,rcx
   140018cc9:	je     0x140018d9d
   140018ccf:	test   rdx,rdx
   140018cd2:	je     0x140018d9d
   140018cd8:	cmp    rdx,r8
   140018cdb:	jbe    0x140018d2d
   140018cdd:	call   0x14001583c
   140018ce2:	lea    r8,[rsi+0x1]
   140018ce6:	lea    rcx,[rip+0xcab7]        # 0x1400257a4
   140018ced:	mov    ebx,DWORD PTR [rax]
   140018cef:	mov    rax,QWORD PTR [rsp+0x78]
   140018cf4:	mov    r9,rbp
   140018cf7:	mov    QWORD PTR [rsp+0x28],rax
   140018cfc:	mov    rax,QWORD PTR [rsp+0x70]
   140018d01:	mov    rdx,rdi
   140018d04:	mov    QWORD PTR [rsp+0x20],rax
   140018d09:	call   0x140018ae4
   140018d0e:	cmp    eax,0xfffffffe
   140018d11:	jne    0x140018d83
   140018d13:	call   0x14001583c
   140018d18:	cmp    DWORD PTR [rax],0x22
   140018d1b:	jne    0x140018dad
   140018d21:	call   0x14001583c
   140018d26:	mov    DWORD PTR [rax],ebx
   140018d28:	jmp    0x140018dad
   140018d2d:	call   0x14001583c
   140018d32:	lea    rcx,[rip+0xca6b]        # 0x1400257a4
   140018d39:	mov    r9,rbp
   140018d3c:	mov    r12d,DWORD PTR [rax]
   140018d3f:	mov    rax,QWORD PTR [rsp+0x78]
   140018d44:	mov    r8,rbx
   140018d47:	mov    QWORD PTR [rsp+0x28],rax
   140018d4c:	mov    rax,QWORD PTR [rsp+0x70]
   140018d51:	mov    rdx,rdi
   140018d54:	mov    QWORD PTR [rsp+0x20],rax
   140018d59:	call   0x140018ae4
   140018d5e:	mov    WORD PTR [rdi+rbx*2-0x2],r13w
   140018d64:	cmp    eax,0xfffffffe
   140018d67:	jne    0x140018d83
   140018d69:	cmp    rsi,0xffffffffffffffff
   140018d6d:	jne    0x140018d87
   140018d6f:	call   0x14001583c
   140018d74:	cmp    DWORD PTR [rax],0x22
   140018d77:	jne    0x140018dad
   140018d79:	call   0x14001583c
   140018d7e:	mov    DWORD PTR [rax],r12d
   140018d81:	jmp    0x140018dad
   140018d83:	test   eax,eax
   140018d85:	jns    0x140018db0
   140018d87:	mov    WORD PTR [rdi],r13w
   140018d8b:	cmp    eax,0xfffffffe
   140018d8e:	jne    0x140018dad
   140018d90:	call   0x14001583c
   140018d95:	mov    DWORD PTR [rax],0x22
   140018d9b:	jmp    0x140018da8
   140018d9d:	call   0x14001583c
   140018da2:	mov    DWORD PTR [rax],0x16
   140018da8:	call   0x140019f74
   140018dad:	or     eax,0xffffffff
   140018db0:	mov    rbx,QWORD PTR [rsp+0x50]
   140018db5:	mov    rbp,QWORD PTR [rsp+0x58]
   140018dba:	mov    rsi,QWORD PTR [rsp+0x60]
   140018dbf:	add    rsp,0x30
   140018dc3:	pop    r13
   140018dc5:	pop    r12
   140018dc7:	pop    rdi
   140018dc8:	ret    
   140018dc9:	int3   
   140018dca:	int3   
   140018dcb:	int3   
   140018dcc:	sub    rsp,0x38
   140018dd0:	mov    rax,QWORD PTR [rsp+0x60]
   140018dd5:	mov    QWORD PTR [rsp+0x28],rax
   140018dda:	and    QWORD PTR [rsp+0x20],0x0
   140018de0:	call   0x140018c7c
   140018de5:	add    rsp,0x38
   140018de9:	ret    
   140018dea:	int3   
   140018deb:	int3   
   140018dec:	int3   
   140018ded:	int3   
   140018dee:	int3   
   140018def:	int3   
   140018df0:	int3   
   140018df1:	int3   
   140018df2:	int3   
   140018df3:	int3   
   140018df4:	int3   
   140018df5:	int3   
   140018df6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140018e00:	mov    r11,rcx
   140018e03:	sub    rdx,rcx
   140018e06:	jb     0x140018faa
   140018e0c:	cmp    r8,0x8
   140018e10:	jb     0x140018e73
   140018e12:	test   cl,0x7
   140018e15:	je     0x140018e4d
   140018e17:	test   cl,0x1
   140018e1a:	je     0x140018e27
   140018e1c:	mov    al,BYTE PTR [rdx+rcx*1]
   140018e1f:	dec    r8
   140018e22:	mov    BYTE PTR [rcx],al
   140018e24:	inc    rcx
   140018e27:	test   cl,0x2
   140018e2a:	je     0x140018e3b
   140018e2c:	mov    ax,WORD PTR [rdx+rcx*1]
   140018e30:	sub    r8,0x2
   140018e34:	mov    WORD PTR [rcx],ax
   140018e37:	add    rcx,0x2
   140018e3b:	test   cl,0x4
   140018e3e:	je     0x140018e4d
   140018e40:	mov    eax,DWORD PTR [rdx+rcx*1]
   140018e43:	sub    r8,0x4
   140018e47:	mov    DWORD PTR [rcx],eax
   140018e49:	add    rcx,0x4
   140018e4d:	mov    r9,r8
   140018e50:	shr    r9,0x5
   140018e54:	jne    0x140018ea7
   140018e56:	mov    r9,r8
   140018e59:	shr    r9,0x3
   140018e5d:	je     0x140018e73
   140018e5f:	mov    rax,QWORD PTR [rdx+rcx*1]
   140018e63:	mov    QWORD PTR [rcx],rax
   140018e66:	add    rcx,0x8
   140018e6a:	dec    r9
   140018e6d:	jne    0x140018e5f
   140018e6f:	and    r8,0x7
   140018e73:	test   r8,r8
   140018e76:	jne    0x140018e80
   140018e78:	mov    rax,r11
   140018e7b:	ret    
   140018e7c:	nop    DWORD PTR [rax+0x0]
   140018e80:	mov    al,BYTE PTR [rdx+rcx*1]
   140018e83:	mov    BYTE PTR [rcx],al
   140018e85:	inc    rcx
   140018e88:	dec    r8
   140018e8b:	jne    0x140018e80
   140018e8d:	mov    rax,r11
   140018e90:	ret    
   140018e91:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140018ea0:	data16 data16 xchg ax,ax
   140018ea4:	data16 xchg ax,ax
   140018ea7:	cmp    r9,0x2000
   140018eae:	jae    0x140018ef2
   140018eb0:	mov    rax,QWORD PTR [rdx+rcx*1]
   140018eb4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140018eb9:	add    rcx,0x20
   140018ebd:	mov    QWORD PTR [rcx-0x20],rax
   140018ec1:	mov    QWORD PTR [rcx-0x18],r10
   140018ec5:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   140018eca:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140018ecf:	dec    r9
   140018ed2:	mov    QWORD PTR [rcx-0x10],rax
   140018ed6:	mov    QWORD PTR [rcx-0x8],r10
   140018eda:	jne    0x140018eb0
   140018edc:	and    r8,0x1f
   140018ee0:	jmp    0x140018e56
   140018ee5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140018ef0:	xchg   ax,ax
   140018ef2:	cmp    rdx,0x1000
   140018ef9:	jb     0x140018eb0
   140018efb:	mov    eax,0x20
   140018f00:	prefetchnta BYTE PTR [rdx+rcx*1]
   140018f04:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140018f09:	add    rcx,0x80
   140018f10:	dec    eax
   140018f12:	jne    0x140018f00
   140018f14:	sub    rcx,0x1000
   140018f1b:	mov    eax,0x40
   140018f20:	mov    r9,QWORD PTR [rdx+rcx*1]
   140018f24:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140018f29:	movnti QWORD PTR [rcx],r9
   140018f2d:	movnti QWORD PTR [rcx+0x8],r10
   140018f32:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   140018f37:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   140018f3c:	movnti QWORD PTR [rcx+0x10],r9
   140018f41:	movnti QWORD PTR [rcx+0x18],r10
   140018f46:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   140018f4b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140018f50:	add    rcx,0x40
   140018f54:	movnti QWORD PTR [rcx-0x20],r9
   140018f59:	movnti QWORD PTR [rcx-0x18],r10
   140018f5e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140018f63:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140018f68:	dec    eax
   140018f6a:	movnti QWORD PTR [rcx-0x10],r9
   140018f6f:	movnti QWORD PTR [rcx-0x8],r10
   140018f74:	jne    0x140018f20
   140018f76:	sub    r8,0x1000
   140018f7d:	cmp    r8,0x1000
   140018f84:	jae    0x140018efb
   140018f8a:	lock or BYTE PTR [rsp],0x0
   140018f8f:	jmp    0x140018e4d
   140018f94:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140018fa0:	data16 data16 xchg ax,ax
   140018fa4:	data16 data16 xchg ax,ax
   140018fa8:	xchg   ax,ax
   140018faa:	add    rcx,r8
   140018fad:	cmp    r8,0x8
   140018fb1:	jb     0x140019014
   140018fb3:	test   cl,0x7
   140018fb6:	je     0x140018fee
   140018fb8:	test   cl,0x1
   140018fbb:	je     0x140018fc8
   140018fbd:	dec    rcx
   140018fc0:	mov    al,BYTE PTR [rdx+rcx*1]
   140018fc3:	dec    r8
   140018fc6:	mov    BYTE PTR [rcx],al
   140018fc8:	test   cl,0x2
   140018fcb:	je     0x140018fdc
   140018fcd:	sub    rcx,0x2
   140018fd1:	mov    ax,WORD PTR [rdx+rcx*1]
   140018fd5:	sub    r8,0x2
   140018fd9:	mov    WORD PTR [rcx],ax
   140018fdc:	test   cl,0x4
   140018fdf:	je     0x140018fee
   140018fe1:	sub    rcx,0x4
   140018fe5:	mov    eax,DWORD PTR [rdx+rcx*1]
   140018fe8:	sub    r8,0x4
   140018fec:	mov    DWORD PTR [rcx],eax
   140018fee:	mov    r9,r8
   140018ff1:	shr    r9,0x5
   140018ff5:	jne    0x140019047
   140018ff7:	mov    r9,r8
   140018ffa:	shr    r9,0x3
   140018ffe:	je     0x140019014
   140019000:	sub    rcx,0x8
   140019004:	mov    rax,QWORD PTR [rdx+rcx*1]
   140019008:	dec    r9
   14001900b:	mov    QWORD PTR [rcx],rax
   14001900e:	jne    0x140019000
   140019010:	and    r8,0x7
   140019014:	test   r8,r8
   140019017:	jne    0x140019020
   140019019:	mov    rax,r11
   14001901c:	ret    
   14001901d:	nop    DWORD PTR [rax]
   140019020:	dec    rcx
   140019023:	mov    al,BYTE PTR [rdx+rcx*1]
   140019026:	dec    r8
   140019029:	mov    BYTE PTR [rcx],al
   14001902b:	jne    0x140019020
   14001902d:	mov    rax,r11
   140019030:	ret    
   140019031:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140019040:	data16 data16 xchg ax,ax
   140019044:	data16 xchg ax,ax
   140019047:	cmp    r9,0x2000
   14001904e:	jae    0x140019092
   140019050:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140019055:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14001905a:	sub    rcx,0x20
   14001905e:	mov    QWORD PTR [rcx+0x18],rax
   140019062:	mov    QWORD PTR [rcx+0x10],r10
   140019066:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14001906b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14001906f:	dec    r9
   140019072:	mov    QWORD PTR [rcx+0x8],rax
   140019076:	mov    QWORD PTR [rcx],r10
   140019079:	jne    0x140019050
   14001907b:	and    r8,0x1f
   14001907f:	jmp    0x140018ff7
   140019084:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140019090:	xchg   ax,ax
   140019092:	cmp    rdx,0xfffffffffffff000
   140019099:	ja     0x140019050
   14001909b:	mov    eax,0x20
   1400190a0:	sub    rcx,0x80
   1400190a7:	prefetchnta BYTE PTR [rdx+rcx*1]
   1400190ab:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   1400190b0:	dec    eax
   1400190b2:	jne    0x1400190a0
   1400190b4:	add    rcx,0x1000
   1400190bb:	mov    eax,0x40
   1400190c0:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   1400190c5:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   1400190ca:	movnti QWORD PTR [rcx-0x8],r9
   1400190cf:	movnti QWORD PTR [rcx-0x10],r10
   1400190d4:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   1400190d9:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   1400190de:	movnti QWORD PTR [rcx-0x18],r9
   1400190e3:	movnti QWORD PTR [rcx-0x20],r10
   1400190e8:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   1400190ed:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   1400190f2:	sub    rcx,0x40
   1400190f6:	movnti QWORD PTR [rcx+0x18],r9
   1400190fb:	movnti QWORD PTR [rcx+0x10],r10
   140019100:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   140019105:	mov    r10,QWORD PTR [rdx+rcx*1]
   140019109:	dec    eax
   14001910b:	movnti QWORD PTR [rcx+0x8],r9
   140019110:	movnti QWORD PTR [rcx],r10
   140019114:	jne    0x1400190c0
   140019116:	sub    r8,0x1000
   14001911d:	cmp    r8,0x1000
   140019124:	jae    0x14001909b
   14001912a:	lock or BYTE PTR [rsp],0x0
   14001912f:	jmp    0x140018fee
   140019134:	mov    QWORD PTR [rsp+0x10],rbx
   140019139:	push   rdi
   14001913a:	sub    rsp,0xa0
   140019141:	lea    rcx,[rsp+0x30]
   140019146:	call   QWORD PTR [rip+0x1617c]        # 0x14002f2c8
   14001914c:	mov    r11d,0x5a4d
   140019152:	lea    rdi,[rip+0xfffffffffffe6ea7]        # 0x140000000
   140019159:	cmp    WORD PTR [rip+0xfffffffffffe6e9f],r11w        # 0x140000000
   140019161:	je     0x140019167
   140019163:	xor    ebx,ebx
   140019165:	jmp    0x140019198
   140019167:	movsxd rax,DWORD PTR [rip+0xfffffffffffe6ece]        # 0x14000003c
   14001916e:	add    rax,rdi
   140019171:	cmp    DWORD PTR [rax],0x4550
   140019177:	jne    0x140019163
   140019179:	mov    ecx,0x20b
   14001917e:	cmp    WORD PTR [rax+0x18],cx
   140019182:	jne    0x140019163
   140019184:	xor    ebx,ebx
   140019186:	cmp    DWORD PTR [rax+0x84],0xe
   14001918d:	jbe    0x140019198
   14001918f:	cmp    DWORD PTR [rax+0xf8],ebx
   140019195:	setne  bl
   140019198:	mov    DWORD PTR [rsp+0xb0],ebx
   14001919f:	call   0x14001c114
   1400191a4:	test   eax,eax
   1400191a6:	jne    0x1400191ca
   1400191a8:	cmp    DWORD PTR [rip+0x3c231],0x1        # 0x1400553e0
   1400191af:	jne    0x1400191b6
   1400191b1:	call   0x14001c434
   1400191b6:	mov    ecx,0x1c
   1400191bb:	call   0x14001c1d4
   1400191c0:	mov    ecx,0xff
   1400191c5:	call   0x140013908
   1400191ca:	call   0x14001af6c
   1400191cf:	test   eax,eax
   1400191d1:	jne    0x1400191f5
   1400191d3:	cmp    DWORD PTR [rip+0x3c206],0x1        # 0x1400553e0
   1400191da:	jne    0x1400191e1
   1400191dc:	call   0x14001c434
   1400191e1:	mov    ecx,0x10
   1400191e6:	call   0x14001c1d4
   1400191eb:	mov    ecx,0xff
   1400191f0:	call   0x140013908
   1400191f5:	call   0x14001e144
   1400191fa:	nop
   1400191fb:	call   0x140020ecc
   140019200:	test   eax,eax
   140019202:	jns    0x14001920e
   140019204:	mov    ecx,0x1b
   140019209:	call   0x140013c64
   14001920e:	call   QWORD PTR [rip+0x160ac]        # 0x14002f2c0
   140019214:	mov    QWORD PTR [rip+0x3d605],rax        # 0x140056820
   14001921b:	call   0x14001c834
   140019220:	mov    QWORD PTR [rip+0x3c1b1],rax        # 0x1400553d8
   140019227:	call   0x14002671c
   14001922c:	test   eax,eax
   14001922e:	jns    0x14001923a
   140019230:	mov    ecx,0x8
   140019235:	call   0x140013c64
   14001923a:	call   0x14001c6fc
   14001923f:	test   eax,eax
   140019241:	jns    0x14001924d
   140019243:	mov    ecx,0x9
   140019248:	call   0x140013c64
   14001924d:	mov    ecx,0x1
   140019252:	call   0x1400139ec
   140019257:	test   eax,eax
   140019259:	je     0x140019262
   14001925b:	mov    ecx,eax
   14001925d:	call   0x140013c64
   140019262:	call   0x14002652c
   140019267:	test   BYTE PTR [rsp+0x6c],0x1
   14001926c:	movzx  edx,WORD PTR [rsp+0x70]
   140019271:	mov    r9d,0xa
   140019277:	cmovne r9d,edx
   14001927b:	mov    r8,rax
   14001927e:	xor    edx,edx
   140019280:	mov    rcx,rdi
   140019283:	call   0x140004208
   140019288:	mov    edi,eax
   14001928a:	mov    DWORD PTR [rsp+0x20],eax
   14001928e:	test   ebx,ebx
   140019290:	jne    0x140019299
   140019292:	mov    ecx,eax
   140019294:	call   0x140013c2c
   140019299:	call   0x140013c44
   14001929e:	jmp    0x1400192ba
   1400192a0:	mov    edi,eax
   1400192a2:	cmp    DWORD PTR [rsp+0xb0],0x0
   1400192aa:	jne    0x1400192b4
   1400192ac:	mov    ecx,eax
   1400192ae:	call   0x140013c38
   1400192b3:	int3   
   1400192b4:	call   0x140013c54
   1400192b9:	nop
   1400192ba:	mov    eax,edi
   1400192bc:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400192c4:	add    rsp,0xa0
   1400192cb:	pop    rdi
   1400192cc:	ret    
   1400192cd:	int3   
   1400192ce:	int3   
   1400192cf:	int3   
   1400192d0:	sub    rsp,0x28
   1400192d4:	call   0x14002680c
   1400192d9:	add    rsp,0x28
   1400192dd:	jmp    0x140019134
   1400192e2:	int3   
   1400192e3:	int3   
   1400192e4:	mov    rax,rcx
   1400192e7:	movzx  edx,WORD PTR [rax]
   1400192ea:	add    rax,0x2
   1400192ee:	test   dx,dx
   1400192f1:	jne    0x1400192e7
   1400192f3:	sub    rax,rcx
   1400192f6:	sar    rax,1
   1400192f9:	dec    rax
   1400192fc:	ret    
   1400192fd:	int3   
   1400192fe:	int3   
   1400192ff:	int3   
   140019300:	mov    QWORD PTR [rsp+0x8],rbx
   140019305:	mov    QWORD PTR [rsp+0x18],rbp
   14001930a:	push   rsi
   14001930b:	push   rdi
   14001930c:	push   r12
   14001930e:	sub    rsp,0x20
   140019312:	xor    r12d,r12d
   140019315:	mov    rsi,r8
   140019318:	mov    rbp,rdx
   14001931b:	mov    rdi,rcx
   14001931e:	test   rdx,rdx
   140019321:	je     0x140019419
   140019327:	cmp    WORD PTR [rdx],r12w
   14001932b:	je     0x140019419
   140019331:	test   rcx,rcx
   140019334:	jne    0x1400193a9
   140019336:	xor    r9d,r9d
   140019339:	xor    r8d,r8d
   14001933c:	xor    edx,edx
   14001933e:	mov    rcx,rbp
   140019341:	call   QWORD PTR [rip+0x15f89]        # 0x14002f2d0
   140019347:	test   eax,eax
   140019349:	jne    0x14001935f
   14001934b:	call   QWORD PTR [rip+0x15d5f]        # 0x14002f0b0
   140019351:	mov    ecx,eax
   140019353:	call   0x14001587c
   140019358:	xor    eax,eax
   14001935a:	jmp    0x140019421
   14001935f:	mov    eax,eax
   140019361:	cmp    rsi,rax
   140019364:	cmova  rax,rsi
   140019368:	mov    rsi,rax
   14001936b:	movabs rax,0x7fffffffffffffff
   140019375:	cmp    rsi,rax
   140019378:	jbe    0x140019387
   14001937a:	call   0x14001583c
   14001937f:	mov    DWORD PTR [rax],0x16
   140019385:	jmp    0x140019358
   140019387:	mov    edx,0x2
   14001938c:	mov    rcx,rsi
   14001938f:	call   0x140012bd4
   140019394:	mov    rbx,rax
   140019397:	test   rax,rax
   14001939a:	jne    0x1400193c3
   14001939c:	call   0x14001583c
   1400193a1:	mov    DWORD PTR [rax],0xc
   1400193a7:	jmp    0x140019358
   1400193a9:	test   r8,r8
   1400193ac:	jne    0x1400193c0
   1400193ae:	call   0x14001583c
   1400193b3:	mov    DWORD PTR [rax],0x16
   1400193b9:	call   0x140019f74
   1400193be:	jmp    0x140019358
   1400193c0:	mov    rbx,rcx
   1400193c3:	lea    r9,[rsp+0x48]
   1400193c8:	mov    r8,rbx
   1400193cb:	mov    edx,esi
   1400193cd:	mov    rcx,rbp
   1400193d0:	call   QWORD PTR [rip+0x15efa]        # 0x14002f2d0
   1400193d6:	mov    ecx,eax
   1400193d8:	cmp    rcx,rsi
   1400193db:	jb     0x1400193fa
   1400193dd:	test   rdi,rdi
   1400193e0:	jne    0x1400193ea
   1400193e2:	mov    rcx,rbx
   1400193e5:	call   0x1400130a8
   1400193ea:	call   0x14001583c
   1400193ef:	mov    DWORD PTR [rax],0x22
   1400193f5:	jmp    0x140019358
   1400193fa:	test   eax,eax
   1400193fc:	jne    0x140019414
   1400193fe:	test   rdi,rdi
   140019401:	jne    0x14001934b
   140019407:	mov    rcx,rbx
   14001940a:	call   0x1400130a8
   14001940f:	jmp    0x14001934b
   140019414:	mov    rax,rbx
   140019417:	jmp    0x140019421
   140019419:	mov    edx,r8d
   14001941c:	call   0x140026a14
   140019421:	mov    rbx,QWORD PTR [rsp+0x40]
   140019426:	mov    rbp,QWORD PTR [rsp+0x50]
   14001942b:	add    rsp,0x20
   14001942f:	pop    r12
   140019431:	pop    rdi
   140019432:	pop    rsi
   140019433:	ret    
   140019434:	mov    QWORD PTR [rsp+0x8],rbx
   140019439:	mov    QWORD PTR [rsp+0x10],rsi
   14001943e:	push   rdi
   14001943f:	sub    rsp,0x20
   140019443:	mov    r8,rdx
   140019446:	movzx  edx,cl
   140019449:	cmp    WORD PTR [r8+0x2],0x3a
   14001944f:	mov    rax,r8
   140019452:	jne    0x140019458
   140019454:	lea    rax,[r8+0x4]
   140019458:	xor    esi,esi
   14001945a:	cmp    WORD PTR [rax],0x5c
   14001945e:	je     0x140019466
   140019460:	cmp    WORD PTR [rax],0x2f
   140019464:	jne    0x14001946c
   140019466:	cmp    WORD PTR [rax+0x2],si
   14001946a:	je     0x14001947b
   14001946c:	test   dl,0x10
   14001946f:	jne    0x14001947b
   140019471:	mov    ebx,0x8000
   140019476:	cmp    WORD PTR [rax],si
   140019479:	jne    0x140019480
   14001947b:	mov    ebx,0x4040
   140019480:	shl    dx,0x7
   140019484:	mov    eax,0x80
   140019489:	mov    rcx,r8
   14001948c:	not    dx
   14001948f:	and    dx,ax
   140019492:	mov    eax,0x100
   140019497:	or     dx,ax
   14001949a:	or     bx,dx
   14001949d:	mov    edx,0x2e
   1400194a2:	call   0x1400149dc
   1400194a7:	mov    rdi,rax
   1400194aa:	test   rax,rax
   1400194ad:	je     0x1400194ff
   1400194af:	lea    rdx,[rip+0x17f9a]        # 0x140031450
   1400194b6:	mov    rcx,rax
   1400194b9:	call   0x1400147a4
   1400194be:	test   eax,eax
   1400194c0:	je     0x1400194fb
   1400194c2:	lea    rdx,[rip+0x17f77]        # 0x140031440
   1400194c9:	mov    rcx,rdi
   1400194cc:	call   0x1400147a4
   1400194d1:	test   eax,eax
   1400194d3:	je     0x1400194fb
   1400194d5:	lea    rdx,[rip+0x17f54]        # 0x140031430
   1400194dc:	mov    rcx,rdi
   1400194df:	call   0x1400147a4
   1400194e4:	test   eax,eax
   1400194e6:	je     0x1400194fb
   1400194e8:	lea    rdx,[rip+0x17f31]        # 0x140031420
   1400194ef:	mov    rcx,rdi
   1400194f2:	call   0x1400147a4
   1400194f7:	test   eax,eax
   1400194f9:	jne    0x1400194ff
   1400194fb:	or     bx,0x40
   1400194ff:	mov    rsi,QWORD PTR [rsp+0x38]
   140019504:	movzx  eax,bx
   140019507:	shr    ax,0x3
   14001950b:	and    ax,0x38
   14001950f:	or     bx,ax
   140019512:	movzx  eax,bx
   140019515:	shr    ax,0x6
   140019519:	and    ax,0x7
   14001951d:	or     ax,bx
   140019520:	mov    rbx,QWORD PTR [rsp+0x30]
   140019525:	add    rsp,0x20
   140019529:	pop    rdi
   14001952a:	ret    
   14001952b:	int3   
   14001952c:	mov    QWORD PTR [rsp+0x18],rbx
   140019531:	mov    QWORD PTR [rsp+0x20],rsi
   140019536:	push   rdi
   140019537:	push   r12
   140019539:	push   r13
   14001953b:	push   r14
   14001953d:	push   r15
   14001953f:	sub    rsp,0xa0
   140019546:	mov    rax,QWORD PTR [rip+0x263e3]        # 0x14003f930
   14001954d:	xor    rax,rsp
   140019550:	mov    QWORD PTR [rsp+0x98],rax
   140019558:	mov    rdi,rdx
   14001955b:	movsxd rsi,ecx
   14001955e:	mov    DWORD PTR [rsp+0x4c],esi
   140019562:	xor    ebx,ebx
   140019564:	mov    eax,ebx
   140019566:	test   rdx,rdx
   140019569:	setne  al
   14001956c:	test   eax,eax
   14001956e:	jne    0x140019587
   140019570:	call   0x14001585c
   140019575:	mov    DWORD PTR [rax],ebx
   140019577:	call   0x14001583c
   14001957c:	mov    DWORD PTR [rax],0x16
   140019582:	jmp    0x1400198a9
   140019587:	xor    edx,edx
   140019589:	lea    r8d,[rdx+0x30]
   14001958d:	mov    rcx,rdi
   140019590:	call   0x140012fb0
   140019595:	cmp    esi,0xfffffffe
   140019598:	jne    0x1400195b1
   14001959a:	call   0x14001585c
   14001959f:	mov    DWORD PTR [rax],ebx
   1400195a1:	call   0x14001583c
   1400195a6:	mov    DWORD PTR [rax],0x9
   1400195ac:	jmp    0x1400198ae
   1400195b1:	test   esi,esi
   1400195b3:	js     0x140019897
   1400195b9:	cmp    esi,DWORD PTR [rip+0x3d045]        # 0x140056604
   1400195bf:	jae    0x140019897
   1400195c5:	mov    r12,rsi
   1400195c8:	mov    r13,rsi
   1400195cb:	sar    r13,0x5
   1400195cf:	lea    r15,[rip+0x3d04a]        # 0x140056620
   1400195d6:	and    r12d,0x1f
   1400195da:	imul   r12,r12,0x58
   1400195de:	mov    rax,QWORD PTR [r15+r13*8]
   1400195e2:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   1400195e8:	mov    r14d,0x1
   1400195ee:	and    ecx,r14d
   1400195f1:	je     0x140019897
   1400195f7:	mov    ecx,esi
   1400195f9:	call   0x140022628
   1400195fe:	nop
   1400195ff:	mov    rcx,QWORD PTR [r15+r13*8]
   140019603:	test   BYTE PTR [rcx+r12*1+0x8],r14b
   140019608:	jne    0x14001961a
   14001960a:	call   0x14001583c
   14001960f:	mov    DWORD PTR [rax],0x9
   140019615:	jmp    0x140019889
   14001961a:	mov    rcx,QWORD PTR [rcx+r12*1]
   14001961e:	call   QWORD PTR [rip+0x15c74]        # 0x14002f298
   140019624:	btr    eax,0xf
   140019628:	cmp    eax,r14d
   14001962b:	je     0x1400196c5
   140019631:	cmp    eax,0x2
   140019634:	je     0x140019656
   140019636:	cmp    eax,0x3
   140019639:	je     0x140019651
   14001963b:	test   eax,eax
   14001963d:	je     0x14001960a
   14001963f:	call   QWORD PTR [rip+0x15a6b]        # 0x14002f0b0
   140019645:	mov    ecx,eax
   140019647:	call   0x14001587c
   14001964c:	jmp    0x140019889
   140019651:	cmp    eax,0x2
   140019654:	jne    0x14001965d
   140019656:	mov    ecx,0x2000
   14001965b:	jmp    0x140019662
   14001965d:	mov    ecx,0x1000
   140019662:	mov    WORD PTR [rdi+0x6],cx
   140019666:	mov    DWORD PTR [rdi],esi
   140019668:	mov    DWORD PTR [rdi+0x10],esi
   14001966b:	mov    WORD PTR [rdi+0x8],r14w
   140019670:	mov    WORD PTR [rdi+0x4],bx
   140019674:	mov    DWORD PTR [rdi+0xa],ebx
   140019677:	mov    QWORD PTR [rdi+0x28],rbx
   14001967b:	mov    QWORD PTR [rdi+0x20],rbx
   14001967f:	mov    QWORD PTR [rdi+0x18],rbx
   140019683:	cmp    eax,0x2
   140019686:	jne    0x140019690
   140019688:	mov    DWORD PTR [rdi+0x14],ebx
   14001968b:	jmp    0x14001988c
   140019690:	mov    rcx,QWORD PTR [r15+r13*8]
   140019694:	mov    QWORD PTR [rsp+0x28],rbx
   140019699:	lea    rax,[rsp+0x48]
   14001969e:	mov    QWORD PTR [rsp+0x20],rax
   1400196a3:	xor    r9d,r9d
   1400196a6:	xor    r8d,r8d
   1400196a9:	xor    edx,edx
   1400196ab:	mov    rcx,QWORD PTR [rcx+r12*1]
   1400196af:	call   QWORD PTR [rip+0x15c2b]        # 0x14002f2e0
   1400196b5:	neg    eax
   1400196b7:	sbb    ecx,ecx
   1400196b9:	and    ecx,DWORD PTR [rsp+0x48]
   1400196bd:	mov    DWORD PTR [rdi+0x14],ecx
   1400196c0:	jmp    0x14001988c
   1400196c5:	mov    DWORD PTR [rdi+0xa],ebx
   1400196c8:	mov    DWORD PTR [rdi+0x4],ebx
   1400196cb:	mov    WORD PTR [rdi+0x8],r14w
   1400196d0:	mov    rcx,QWORD PTR [r15+r13*8]
   1400196d4:	lea    rdx,[rsp+0x60]
   1400196d9:	mov    rcx,QWORD PTR [rcx+r12*1]
   1400196dd:	call   QWORD PTR [rip+0x15bf5]        # 0x14002f2d8
   1400196e3:	test   eax,eax
   1400196e5:	je     0x14001963f
   1400196eb:	movzx  eax,WORD PTR [rdi+0x6]
   1400196ef:	test   BYTE PTR [rsp+0x60],r14b
   1400196f4:	je     0x1400196fd
   1400196f6:	or     eax,0x124
   1400196fb:	jmp    0x140019702
   1400196fd:	or     eax,0x1b6
   140019702:	mov    WORD PTR [rdi+0x6],ax
   140019706:	cmp    DWORD PTR [rsp+0x74],ebx
   14001970a:	jne    0x140019718
   14001970c:	cmp    DWORD PTR [rsp+0x78],ebx
   140019710:	jne    0x140019718
   140019712:	mov    QWORD PTR [rdi+0x20],rbx
   140019716:	jmp    0x140019780
   140019718:	lea    rdx,[rsp+0x40]
   14001971d:	lea    rcx,[rsp+0x74]
   140019722:	call   QWORD PTR [rip+0x15af0]        # 0x14002f218
   140019728:	test   eax,eax
   14001972a:	je     0x140019889
   140019730:	lea    rdx,[rsp+0x50]
   140019735:	lea    rcx,[rsp+0x40]
   14001973a:	call   QWORD PTR [rip+0x15ad0]        # 0x14002f210
   140019740:	test   eax,eax
   140019742:	je     0x140019889
   140019748:	movzx  eax,WORD PTR [rsp+0x5c]
   14001974d:	movzx  r10d,WORD PTR [rsp+0x5a]
   140019753:	movzx  r9d,WORD PTR [rsp+0x58]
   140019759:	movzx  r8d,WORD PTR [rsp+0x56]
   14001975f:	movzx  edx,WORD PTR [rsp+0x52]
   140019764:	movzx  ecx,WORD PTR [rsp+0x50]
   140019769:	or     DWORD PTR [rsp+0x30],0xffffffff
   14001976e:	mov    DWORD PTR [rsp+0x28],eax
   140019772:	mov    DWORD PTR [rsp+0x20],r10d
   140019777:	call   0x1400198e0
   14001977c:	mov    QWORD PTR [rdi+0x20],rax
   140019780:	cmp    DWORD PTR [rsp+0x6c],ebx
   140019784:	jne    0x140019792
   140019786:	cmp    DWORD PTR [rsp+0x70],ebx
   14001978a:	jne    0x140019792
   14001978c:	mov    rax,QWORD PTR [rdi+0x20]
   140019790:	jmp    0x1400197f6
   140019792:	lea    rdx,[rsp+0x40]
   140019797:	lea    rcx,[rsp+0x6c]
   14001979c:	call   QWORD PTR [rip+0x15a76]        # 0x14002f218
   1400197a2:	test   eax,eax
   1400197a4:	je     0x140019889
   1400197aa:	lea    rdx,[rsp+0x50]
   1400197af:	lea    rcx,[rsp+0x40]
   1400197b4:	call   QWORD PTR [rip+0x15a56]        # 0x14002f210
   1400197ba:	test   eax,eax
   1400197bc:	je     0x140019889
   1400197c2:	movzx  eax,WORD PTR [rsp+0x5c]
   1400197c7:	movzx  r10d,WORD PTR [rsp+0x5a]
   1400197cd:	movzx  r9d,WORD PTR [rsp+0x58]
   1400197d3:	movzx  r8d,WORD PTR [rsp+0x56]
   1400197d9:	movzx  edx,WORD PTR [rsp+0x52]
   1400197de:	movzx  ecx,WORD PTR [rsp+0x50]
   1400197e3:	or     DWORD PTR [rsp+0x30],0xffffffff
   1400197e8:	mov    DWORD PTR [rsp+0x28],eax
   1400197ec:	mov    DWORD PTR [rsp+0x20],r10d
   1400197f1:	call   0x1400198e0
   1400197f6:	mov    QWORD PTR [rdi+0x18],rax
   1400197fa:	cmp    DWORD PTR [rsp+0x64],ebx
   1400197fe:	jne    0x14001980c
   140019800:	cmp    DWORD PTR [rsp+0x68],ebx
   140019804:	jne    0x14001980c
   140019806:	mov    rax,QWORD PTR [rdi+0x20]
   14001980a:	jmp    0x140019868
   14001980c:	lea    rdx,[rsp+0x40]
   140019811:	lea    rcx,[rsp+0x64]
   140019816:	call   QWORD PTR [rip+0x159fc]        # 0x14002f218
   14001981c:	test   eax,eax
   14001981e:	je     0x140019889
   140019820:	lea    rdx,[rsp+0x50]
   140019825:	lea    rcx,[rsp+0x40]
   14001982a:	call   QWORD PTR [rip+0x159e0]        # 0x14002f210
   140019830:	test   eax,eax
   140019832:	je     0x140019889
   140019834:	movzx  eax,WORD PTR [rsp+0x5c]
   140019839:	movzx  r10d,WORD PTR [rsp+0x5a]
   14001983f:	movzx  r9d,WORD PTR [rsp+0x58]
   140019845:	movzx  r8d,WORD PTR [rsp+0x56]
   14001984b:	movzx  edx,WORD PTR [rsp+0x52]
   140019850:	movzx  ecx,WORD PTR [rsp+0x50]
   140019855:	or     DWORD PTR [rsp+0x30],0xffffffff
   14001985a:	mov    DWORD PTR [rsp+0x28],eax
   14001985e:	mov    DWORD PTR [rsp+0x20],r10d
   140019863:	call   0x1400198e0
   140019868:	mov    QWORD PTR [rdi+0x28],rax
   14001986c:	mov    eax,DWORD PTR [rsp+0x84]
   140019873:	mov    DWORD PTR [rdi+0x14],eax
   140019876:	movzx  eax,WORD PTR [rdi+0x6]
   14001987a:	bts    eax,0xf
   14001987e:	mov    WORD PTR [rdi+0x6],ax
   140019882:	mov    DWORD PTR [rdi],ebx
   140019884:	mov    DWORD PTR [rdi+0x10],ebx
   140019887:	jmp    0x14001988c
   140019889:	or     ebx,0xffffffff
   14001988c:	mov    ecx,esi
   14001988e:	call   0x1400226d0
   140019893:	mov    eax,ebx
   140019895:	jmp    0x1400198b1
   140019897:	call   0x14001585c
   14001989c:	mov    DWORD PTR [rax],ebx
   14001989e:	call   0x14001583c
   1400198a3:	mov    DWORD PTR [rax],0x9
   1400198a9:	call   0x140019f74
   1400198ae:	or     eax,0xffffffff
   1400198b1:	mov    rcx,QWORD PTR [rsp+0x98]
   1400198b9:	xor    rcx,rsp
   1400198bc:	call   0x140012670
   1400198c1:	lea    r11,[rsp+0xa0]
   1400198c9:	mov    rbx,QWORD PTR [r11+0x40]
   1400198cd:	mov    rsi,QWORD PTR [r11+0x48]
   1400198d1:	mov    rsp,r11
   1400198d4:	pop    r15
   1400198d6:	pop    r14
   1400198d8:	pop    r13
   1400198da:	pop    r12
   1400198dc:	pop    rdi
   1400198dd:	ret    
   1400198de:	int3   
   1400198df:	int3   
   1400198e0:	rex push rbp
   1400198e2:	push   rbx
   1400198e3:	push   rsi
   1400198e4:	push   rdi
   1400198e5:	push   r12
   1400198e7:	push   r13
   1400198e9:	push   r14
   1400198eb:	push   r15
   1400198ed:	mov    rbp,rsp
   1400198f0:	sub    rsp,0x78
   1400198f4:	mov    rax,QWORD PTR [rip+0x26035]        # 0x14003f930
   1400198fb:	xor    rax,rsp
   1400198fe:	mov    QWORD PTR [rbp-0x10],rax
   140019902:	xor    edi,edi
   140019904:	lea    ebx,[rcx-0x76c]
   14001990a:	movsxd r15,r9d
   14001990d:	movsxd rsi,edx
   140019910:	mov    DWORD PTR [rbp-0x48],edi
   140019913:	mov    DWORD PTR [rbp-0x44],edi
   140019916:	mov    DWORD PTR [rbp-0x40],edi
   140019919:	cmp    ebx,0x46
   14001991c:	jl     0x140019b7e
   140019922:	cmp    ebx,0x44c
   140019928:	jg     0x140019b7e
   14001992e:	lea    eax,[rsi-0x1]
   140019931:	cmp    eax,0xb
   140019934:	ja     0x140019b7e
   14001993a:	cmp    r15d,0x17
   14001993e:	ja     0x140019b7e
   140019944:	movsxd r13,DWORD PTR [rbp+0x68]
   140019948:	cmp    r13d,0x3b
   14001994c:	ja     0x140019b7e
   140019952:	movsxd r14,DWORD PTR [rbp+0x70]
   140019956:	cmp    r14d,0x3b
   14001995a:	ja     0x140019b7e
   140019960:	lea    r10d,[rdi+0x1]
   140019964:	cmp    r8d,r10d
   140019967:	jl     0x140019b7e
   14001996d:	lea    rcx,[rip+0x26ff4]        # 0x140040968
   140019974:	mov    r11d,0x51eb851f
   14001997a:	mov    r9d,DWORD PTR [rcx+rsi*4-0x4]
   14001997f:	mov    ecx,DWORD PTR [rcx+rsi*4]
   140019982:	sub    ecx,r9d
   140019985:	cmp    ecx,r8d
   140019988:	jge    0x1400199ec
   14001998a:	mov    eax,ebx
   14001998c:	and    eax,0x80000003
   140019991:	jge    0x14001999c
   140019993:	sub    eax,r10d
   140019996:	or     eax,0xfffffffc
   140019999:	add    eax,r10d
   14001999c:	test   eax,eax
   14001999e:	jne    0x1400199b6
   1400199a0:	mov    eax,r11d
   1400199a3:	imul   ebx
   1400199a5:	sar    edx,0x5
   1400199a8:	mov    eax,edx
   1400199aa:	shr    eax,0x1f
   1400199ad:	add    edx,eax
   1400199af:	imul   edx,edx,0x64
   1400199b2:	cmp    ebx,edx
   1400199b4:	jne    0x1400199d9
   1400199b6:	lea    ecx,[rbx+0x76c]
   1400199bc:	mov    eax,r11d
   1400199bf:	imul   ecx
   1400199c1:	sar    edx,0x7
   1400199c4:	mov    eax,edx
   1400199c6:	shr    eax,0x1f
   1400199c9:	add    edx,eax
   1400199cb:	imul   edx,edx,0x190
   1400199d1:	cmp    ecx,edx
   1400199d3:	jne    0x140019b7e
   1400199d9:	cmp    esi,0x2
   1400199dc:	jne    0x140019b7e
   1400199e2:	cmp    r8d,0x1d
   1400199e6:	jg     0x140019b7e
   1400199ec:	mov    eax,ebx
   1400199ee:	lea    r12d,[r9+r8*1]
   1400199f2:	and    eax,0x80000003
   1400199f7:	jge    0x140019a02
   1400199f9:	sub    eax,r10d
   1400199fc:	or     eax,0xfffffffc
   1400199ff:	add    eax,r10d
   140019a02:	test   eax,eax
   140019a04:	jne    0x140019a1c
   140019a06:	mov    eax,r11d
   140019a09:	imul   ebx
   140019a0b:	sar    edx,0x5
   140019a0e:	mov    eax,edx
   140019a10:	shr    eax,0x1f
   140019a13:	add    edx,eax
   140019a15:	imul   edx,edx,0x64
   140019a18:	cmp    ebx,edx
   140019a1a:	jne    0x140019a3b
   140019a1c:	lea    ecx,[rbx+0x76c]
   140019a22:	mov    eax,r11d
   140019a25:	imul   ecx
   140019a27:	sar    edx,0x7
   140019a2a:	mov    eax,edx
   140019a2c:	shr    eax,0x1f
   140019a2f:	add    edx,eax
   140019a31:	imul   edx,edx,0x190
   140019a37:	cmp    ecx,edx
   140019a39:	jne    0x140019a43
   140019a3b:	cmp    esi,0x2
   140019a3e:	jle    0x140019a43
   140019a40:	add    r12d,r10d
   140019a43:	call   0x14001be0c
   140019a48:	lea    rcx,[rbp-0x48]
   140019a4c:	call   0x14001b35c
   140019a51:	test   eax,eax
   140019a53:	jne    0x140019b69
   140019a59:	lea    rcx,[rbp-0x44]
   140019a5d:	call   0x14001b38c
   140019a62:	test   eax,eax
   140019a64:	jne    0x140019b54
   140019a6a:	lea    rcx,[rbp-0x40]
   140019a6e:	call   0x14001b3bc
   140019a73:	test   eax,eax
   140019a75:	jne    0x140019b3f
   140019a7b:	lea    ecx,[rbx+0x12b]
   140019a81:	mov    r10d,0x51eb851f
   140019a87:	lea    r8d,[rbx-0x1]
   140019a8b:	mov    eax,r10d
   140019a8e:	mov    DWORD PTR [rbp-0x1c],r12d
   140019a92:	mov    DWORD PTR [rbp-0x24],ebx
   140019a95:	mov    DWORD PTR [rbp-0x30],r15d
   140019a99:	mov    DWORD PTR [rbp-0x34],r13d
   140019a9d:	mov    DWORD PTR [rbp-0x38],r14d
   140019aa1:	imul   ecx
   140019aa3:	mov    r9d,edx
   140019aa6:	mov    eax,r10d
   140019aa9:	sar    r9d,0x7
   140019aad:	mov    ecx,r9d
   140019ab0:	shr    ecx,0x1f
   140019ab3:	add    r9d,ecx
   140019ab6:	imul   r8d
   140019ab9:	sar    edx,0x5
   140019abc:	mov    eax,r8d
   140019abf:	mov    ecx,edx
   140019ac1:	shr    ecx,0x1f
   140019ac4:	add    edx,ecx
   140019ac6:	sub    r9d,edx
   140019ac9:	cdq    
   140019aca:	and    edx,0x3
   140019acd:	add    eax,edx
   140019acf:	sar    eax,0x2
   140019ad2:	lea    ecx,[r9+rax*1-0x11]
   140019ad7:	movsxd rax,ebx
   140019ada:	sub    rax,0x46
   140019ade:	movsxd rdx,ecx
   140019ae1:	imul   rax,rax,0x16d
   140019ae8:	add    rdx,rax
   140019aeb:	movsxd rax,r12d
   140019aee:	add    rdx,rax
   140019af1:	movsxd rax,DWORD PTR [rbp-0x40]
   140019af5:	lea    rcx,[rdx+rdx*2]
   140019af9:	lea    rdi,[r15+rcx*8]
   140019afd:	imul   rdi,rdi,0x3c
   140019b01:	add    rdi,r13
   140019b04:	imul   rdi,rdi,0x3c
   140019b08:	add    rdi,rax
   140019b0b:	lea    eax,[rsi-0x1]
   140019b0e:	add    rdi,r14
   140019b11:	cmp    DWORD PTR [rbp+0x78],0x1
   140019b15:	mov    DWORD PTR [rbp-0x28],eax
   140019b18:	je     0x140019b33
   140019b1a:	cmp    DWORD PTR [rbp+0x78],0xffffffff
   140019b1e:	jne    0x140019b3a
   140019b20:	cmp    DWORD PTR [rbp-0x48],0x0
   140019b24:	je     0x140019b3a
   140019b26:	lea    rcx,[rbp-0x38]
   140019b2a:	call   0x14001be48
   140019b2f:	test   eax,eax
   140019b31:	je     0x140019b3a
   140019b33:	movsxd rcx,DWORD PTR [rbp-0x44]
   140019b37:	add    rdi,rcx
   140019b3a:	mov    rax,rdi
   140019b3d:	jmp    0x140019b8d
   140019b3f:	xor    r9d,r9d
   140019b42:	xor    r8d,r8d
   140019b45:	xor    edx,edx
   140019b47:	xor    ecx,ecx
   140019b49:	mov    QWORD PTR [rsp+0x20],rdi
   140019b4e:	call   0x140019ed0
   140019b53:	int3   
   140019b54:	xor    r9d,r9d
   140019b57:	xor    r8d,r8d
   140019b5a:	xor    edx,edx
   140019b5c:	xor    ecx,ecx
   140019b5e:	mov    QWORD PTR [rsp+0x20],rdi
   140019b63:	call   0x140019ed0
   140019b68:	int3   
   140019b69:	xor    r9d,r9d
   140019b6c:	xor    r8d,r8d
   140019b6f:	xor    edx,edx
   140019b71:	xor    ecx,ecx
   140019b73:	mov    QWORD PTR [rsp+0x20],rdi
   140019b78:	call   0x140019ed0
   140019b7d:	int3   
   140019b7e:	call   0x14001583c
   140019b83:	mov    DWORD PTR [rax],0x16
   140019b89:	or     rax,0xffffffffffffffff
   140019b8d:	mov    rcx,QWORD PTR [rbp-0x10]
   140019b91:	xor    rcx,rsp
   140019b94:	call   0x140012670
   140019b99:	add    rsp,0x78
   140019b9d:	pop    r15
   140019b9f:	pop    r14
   140019ba1:	pop    r13
   140019ba3:	pop    r12
   140019ba5:	pop    rdi
   140019ba6:	pop    rsi
   140019ba7:	pop    rbx
   140019ba8:	pop    rbp
   140019ba9:	ret    
   140019baa:	int3   
   140019bab:	int3   
   140019bac:	mov    QWORD PTR [rsp+0x8],rbx
   140019bb1:	mov    QWORD PTR [rsp+0x10],rbp
   140019bb6:	mov    QWORD PTR [rsp+0x18],rsi
   140019bbb:	push   rdi
   140019bbc:	sub    rsp,0x240
   140019bc3:	mov    rax,QWORD PTR [rip+0x25d66]        # 0x14003f930
   140019bca:	xor    rax,rsp
   140019bcd:	mov    QWORD PTR [rsp+0x230],rax
   140019bd5:	lea    rdx,[rsp+0x20]
   140019bda:	mov    ecx,0x105
   140019bdf:	lea    rbx,[rsp+0x20]
   140019be4:	xor    ebp,ebp
   140019be6:	call   QWORD PTR [rip+0x156fc]        # 0x14002f2e8
   140019bec:	mov    edi,eax
   140019bee:	cmp    eax,0x104
   140019bf3:	jle    0x140019c30
   140019bf5:	lea    esi,[rax+0x1]
   140019bf8:	lea    edx,[rbp+0x2]
   140019bfb:	movsxd rcx,esi
   140019bfe:	call   0x140020ca8
   140019c03:	mov    rbx,rax
   140019c06:	test   rax,rax
   140019c09:	jne    0x140019c1a
   140019c0b:	call   0x14001583c
   140019c10:	xor    edi,edi
   140019c12:	mov    DWORD PTR [rax],0xc
   140019c18:	jmp    0x140019c30
   140019c1a:	mov    ebp,0x1
   140019c1f:	test   edi,edi
   140019c21:	je     0x140019c30
   140019c23:	mov    rdx,rax
   140019c26:	mov    ecx,esi
   140019c28:	call   QWORD PTR [rip+0x156ba]        # 0x14002f2e8
   140019c2e:	mov    edi,eax
   140019c30:	xor    esi,esi
   140019c32:	test   edi,edi
   140019c34:	je     0x140019c59
   140019c36:	cmp    WORD PTR [rbx+0x2],0x3a
   140019c3b:	jne    0x140019c64
   140019c3d:	cmp    WORD PTR [rbx],0x61
   140019c41:	jb     0x140019c51
   140019c43:	cmp    WORD PTR [rbx],0x7a
   140019c47:	ja     0x140019c51
   140019c49:	movzx  eax,WORD PTR [rbx]
   140019c4c:	sub    eax,0x20
   140019c4f:	jmp    0x140019c54
   140019c51:	movzx  eax,WORD PTR [rbx]
   140019c54:	lea    esi,[rax-0x40]
   140019c57:	jmp    0x140019c64
   140019c59:	call   0x14001583c
   140019c5e:	mov    DWORD PTR [rax],0xc
   140019c64:	test   ebp,ebp
   140019c66:	je     0x140019c70
   140019c68:	mov    rcx,rbx
   140019c6b:	call   0x1400130a8
   140019c70:	mov    eax,esi
   140019c72:	mov    rcx,QWORD PTR [rsp+0x230]
   140019c7a:	xor    rcx,rsp
   140019c7d:	call   0x140012670
   140019c82:	lea    r11,[rsp+0x240]
   140019c8a:	mov    rbx,QWORD PTR [r11+0x10]
   140019c8e:	mov    rbp,QWORD PTR [r11+0x18]
   140019c92:	mov    rsi,QWORD PTR [r11+0x20]
   140019c96:	mov    rsp,r11
   140019c99:	pop    rdi
   140019c9a:	ret    
   140019c9b:	int3   
   140019c9c:	mov    QWORD PTR [rsp+0x10],rbx
   140019ca1:	mov    WORD PTR [rsp+0x8],cx
   140019ca6:	push   rbp
   140019ca7:	mov    rbp,rsp
   140019caa:	sub    rsp,0x50
   140019cae:	mov    eax,0xffff
   140019cb3:	cmp    cx,ax
   140019cb6:	je     0x140019d66
   140019cbc:	lea    rcx,[rbp-0x20]
   140019cc0:	call   0x140012690
   140019cc5:	mov    rbx,QWORD PTR [rbp-0x20]
   140019cc9:	cmp    DWORD PTR [rbx+0x14],0x0
   140019ccd:	jne    0x140019cf6
   140019ccf:	movzx  edx,WORD PTR [rbp+0x10]
   140019cd3:	lea    eax,[rdx-0x41]
   140019cd6:	cmp    ax,0x19
   140019cda:	ja     0x140019ce0
   140019cdc:	add    dx,0x20
   140019ce0:	cmp    BYTE PTR [rbp-0x8],0x0
   140019ce4:	je     0x140019cf1
   140019ce6:	mov    rcx,QWORD PTR [rbp-0x10]
   140019cea:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019cf1:	movzx  eax,dx
   140019cf4:	jmp    0x140019d66
   140019cf6:	movzx  ecx,WORD PTR [rbp+0x10]
   140019cfa:	mov    edx,0x100
   140019cff:	cmp    cx,dx
   140019d02:	jae    0x140019d29
   140019d04:	mov    edx,0x1
   140019d09:	call   0x140013350
   140019d0e:	test   eax,eax
   140019d10:	jne    0x140019d18
   140019d12:	movzx  eax,WORD PTR [rbp+0x10]
   140019d16:	jmp    0x140019d55
   140019d18:	movzx  ecx,WORD PTR [rbp+0x10]
   140019d1c:	mov    rax,QWORD PTR [rbx+0x148]
   140019d23:	movzx  eax,BYTE PTR [rax+rcx*1]
   140019d27:	jmp    0x140019d55
   140019d29:	mov    ecx,DWORD PTR [rbx+0x14]
   140019d2c:	lea    rax,[rbp+0x20]
   140019d30:	mov    r9d,0x1
   140019d36:	mov    DWORD PTR [rsp+0x28],r9d
   140019d3b:	lea    r8,[rbp+0x10]
   140019d3f:	mov    QWORD PTR [rsp+0x20],rax
   140019d44:	call   0x140026aec
   140019d49:	test   eax,eax
   140019d4b:	movzx  eax,WORD PTR [rbp+0x10]
   140019d4f:	je     0x140019d55
   140019d51:	movzx  eax,WORD PTR [rbp+0x20]
   140019d55:	cmp    BYTE PTR [rbp-0x8],0x0
   140019d59:	je     0x140019d66
   140019d5b:	mov    rcx,QWORD PTR [rbp-0x10]
   140019d5f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019d66:	mov    rbx,QWORD PTR [rsp+0x68]
   140019d6b:	add    rsp,0x50
   140019d6f:	pop    rbp
   140019d70:	ret    
   140019d71:	int3   
   140019d72:	int3   
   140019d73:	int3   
   140019d74:	xor    edx,edx
   140019d76:	jmp    0x140019c9c
   140019d7b:	int3   
   140019d7c:	mov    QWORD PTR [rip+0x3b665],rcx        # 0x1400553e8
   140019d83:	ret    
   140019d84:	mov    QWORD PTR [rsp+0x10],rbx
   140019d89:	mov    QWORD PTR [rsp+0x18],rsi
   140019d8e:	push   rbp
   140019d8f:	push   rdi
   140019d90:	push   r12
   140019d92:	lea    rbp,[rsp-0x4f0]
   140019d9a:	sub    rsp,0x5f0
   140019da1:	mov    rax,QWORD PTR [rip+0x25b88]        # 0x14003f930
   140019da8:	xor    rax,rsp
   140019dab:	mov    QWORD PTR [rbp+0x4e0],rax
   140019db2:	mov    edi,r8d
   140019db5:	mov    esi,edx
   140019db7:	mov    ebx,ecx
   140019db9:	cmp    ecx,0xffffffff
   140019dbc:	je     0x140019dc3
   140019dbe:	call   0x140026b4c
   140019dc3:	and    DWORD PTR [rsp+0x70],0x0
   140019dc8:	lea    rcx,[rsp+0x74]
   140019dcd:	xor    edx,edx
   140019dcf:	mov    r8d,0x94
   140019dd5:	call   0x140012fb0
   140019dda:	lea    r11,[rsp+0x70]
   140019ddf:	lea    rax,[rbp+0x10]
   140019de3:	lea    rcx,[rbp+0x10]
   140019de7:	mov    QWORD PTR [rsp+0x48],r11
   140019dec:	mov    QWORD PTR [rsp+0x50],rax
   140019df1:	call   QWORD PTR [rip+0x15519]        # 0x14002f310
   140019df7:	mov    r12,QWORD PTR [rbp+0x108]
   140019dfe:	lea    rdx,[rsp+0x40]
   140019e03:	mov    rcx,r12
   140019e06:	xor    r8d,r8d
   140019e09:	call   0x14002ac2a
   140019e0e:	test   rax,rax
   140019e11:	je     0x140019e4a
   140019e13:	and    QWORD PTR [rsp+0x38],0x0
   140019e19:	mov    rdx,QWORD PTR [rsp+0x40]
   140019e1e:	lea    rcx,[rsp+0x60]
   140019e23:	mov    QWORD PTR [rsp+0x30],rcx
   140019e28:	lea    rcx,[rsp+0x58]
   140019e2d:	mov    r9,rax
   140019e30:	mov    QWORD PTR [rsp+0x28],rcx
   140019e35:	lea    rcx,[rbp+0x10]
   140019e39:	mov    r8,r12
   140019e3c:	mov    QWORD PTR [rsp+0x20],rcx
   140019e41:	xor    ecx,ecx
   140019e43:	call   0x14002ac30
   140019e48:	jmp    0x140019e66
   140019e4a:	mov    rax,QWORD PTR [rbp+0x508]
   140019e51:	mov    QWORD PTR [rbp+0x108],rax
   140019e58:	lea    rax,[rbp+0x508]
   140019e5f:	mov    QWORD PTR [rbp+0xa8],rax
   140019e66:	mov    rax,QWORD PTR [rbp+0x508]
   140019e6d:	mov    DWORD PTR [rsp+0x70],esi
   140019e71:	mov    DWORD PTR [rsp+0x74],edi
   140019e75:	mov    QWORD PTR [rbp-0x80],rax
   140019e79:	call   QWORD PTR [rip+0x15481]        # 0x14002f300
   140019e7f:	xor    ecx,ecx
   140019e81:	mov    edi,eax
   140019e83:	call   QWORD PTR [rip+0x1546f]        # 0x14002f2f8
   140019e89:	lea    rcx,[rsp+0x48]
   140019e8e:	call   QWORD PTR [rip+0x1545c]        # 0x14002f2f0
   140019e94:	test   eax,eax
   140019e96:	jne    0x140019ea8
   140019e98:	test   edi,edi
   140019e9a:	jne    0x140019ea8
   140019e9c:	cmp    ebx,0xffffffff
   140019e9f:	je     0x140019ea8
   140019ea1:	mov    ecx,ebx
   140019ea3:	call   0x140026b4c
   140019ea8:	mov    rcx,QWORD PTR [rbp+0x4e0]
   140019eaf:	xor    rcx,rsp
   140019eb2:	call   0x140012670
   140019eb7:	lea    r11,[rsp+0x5f0]
   140019ebf:	mov    rbx,QWORD PTR [r11+0x28]
   140019ec3:	mov    rsi,QWORD PTR [r11+0x30]
   140019ec7:	mov    rsp,r11
   140019eca:	pop    r12
   140019ecc:	pop    rdi
   140019ecd:	pop    rbp
   140019ece:	ret    
   140019ecf:	int3   
   140019ed0:	sub    rsp,0x28
   140019ed4:	mov    r8d,0x1
   140019eda:	mov    edx,0xc0000417
   140019edf:	lea    ecx,[r8+0x1]
   140019ee3:	call   0x140019d84
   140019ee8:	call   QWORD PTR [rip+0x151b2]        # 0x14002f0a0
   140019eee:	mov    edx,0xc0000417
   140019ef3:	mov    rcx,rax
   140019ef6:	add    rsp,0x28
   140019efa:	rex.W jmp QWORD PTR [rip+0x1541f]        # 0x14002f320
   140019f01:	int3   
   140019f02:	int3   
   140019f03:	int3   
   140019f04:	mov    QWORD PTR [rsp+0x8],rbx
   140019f09:	mov    QWORD PTR [rsp+0x10],rbp
   140019f0e:	mov    QWORD PTR [rsp+0x18],rsi
   140019f13:	push   rdi
   140019f14:	sub    rsp,0x30
   140019f18:	mov    rbp,rcx
   140019f1b:	mov    rcx,QWORD PTR [rip+0x3b4c6]        # 0x1400553e8
   140019f22:	mov    ebx,r9d
   140019f25:	mov    rdi,r8
   140019f28:	mov    rsi,rdx
   140019f2b:	call   QWORD PTR [rip+0x15337]        # 0x14002f268
   140019f31:	mov    r9d,ebx
   140019f34:	mov    r8,rdi
   140019f37:	mov    rdx,rsi
   140019f3a:	mov    rcx,rbp
   140019f3d:	test   rax,rax
   140019f40:	je     0x140019f63
   140019f42:	mov    r10,QWORD PTR [rsp+0x60]
   140019f47:	mov    QWORD PTR [rsp+0x20],r10
   140019f4c:	call   rax
   140019f4e:	mov    rbx,QWORD PTR [rsp+0x40]
   140019f53:	mov    rbp,QWORD PTR [rsp+0x48]
   140019f58:	mov    rsi,QWORD PTR [rsp+0x50]
   140019f5d:	add    rsp,0x30
   140019f61:	pop    rdi
   140019f62:	ret    
   140019f63:	mov    rax,QWORD PTR [rsp+0x60]
   140019f68:	mov    QWORD PTR [rsp+0x20],rax
   140019f6d:	call   0x140019ed0
   140019f72:	int3   
   140019f73:	int3   
   140019f74:	sub    rsp,0x38
   140019f78:	and    QWORD PTR [rsp+0x20],0x0
   140019f7e:	xor    r9d,r9d
   140019f81:	xor    r8d,r8d
   140019f84:	xor    edx,edx
   140019f86:	xor    ecx,ecx
   140019f88:	call   0x140019f04
   140019f8d:	add    rsp,0x38
   140019f91:	ret    
   140019f92:	int3   
   140019f93:	int3   
   140019f94:	mov    QWORD PTR [rsp+0x8],rcx
   140019f99:	sub    rsp,0x88
   140019fa0:	lea    rcx,[rip+0x3b4e9]        # 0x140055490
   140019fa7:	call   QWORD PTR [rip+0x15363]        # 0x14002f310
   140019fad:	mov    rax,QWORD PTR [rip+0x3b5d4]        # 0x140055588
   140019fb4:	mov    QWORD PTR [rsp+0x58],rax
   140019fb9:	xor    r8d,r8d
   140019fbc:	lea    rdx,[rsp+0x60]
   140019fc1:	mov    rcx,QWORD PTR [rsp+0x58]
   140019fc6:	call   0x14002ac2a
   140019fcb:	mov    QWORD PTR [rsp+0x50],rax
   140019fd0:	cmp    QWORD PTR [rsp+0x50],0x0
   140019fd6:	je     0x14001a019
   140019fd8:	mov    QWORD PTR [rsp+0x38],0x0
   140019fe1:	lea    rax,[rsp+0x48]
   140019fe6:	mov    QWORD PTR [rsp+0x30],rax
   140019feb:	lea    rax,[rsp+0x40]
   140019ff0:	mov    QWORD PTR [rsp+0x28],rax
   140019ff5:	lea    rax,[rip+0x3b494]        # 0x140055490
   140019ffc:	mov    QWORD PTR [rsp+0x20],rax
   14001a001:	mov    r9,QWORD PTR [rsp+0x50]
   14001a006:	mov    r8,QWORD PTR [rsp+0x58]
   14001a00b:	mov    rdx,QWORD PTR [rsp+0x60]
   14001a010:	xor    ecx,ecx
   14001a012:	call   0x14002ac30
   14001a017:	jmp    0x14001a03b
   14001a019:	mov    rax,QWORD PTR [rsp+0x88]
   14001a021:	mov    QWORD PTR [rip+0x3b560],rax        # 0x140055588
   14001a028:	lea    rax,[rsp+0x88]
   14001a030:	add    rax,0x8
   14001a034:	mov    QWORD PTR [rip+0x3b4ed],rax        # 0x140055528
   14001a03b:	mov    rax,QWORD PTR [rip+0x3b546]        # 0x140055588
   14001a042:	mov    QWORD PTR [rip+0x3b3b7],rax        # 0x140055400
   14001a049:	mov    rax,QWORD PTR [rsp+0x90]
   14001a051:	mov    QWORD PTR [rip+0x3b4b8],rax        # 0x140055510
   14001a058:	mov    DWORD PTR [rip+0x3b38e],0xc0000409        # 0x1400553f0
   14001a062:	mov    DWORD PTR [rip+0x3b388],0x1        # 0x1400553f4
   14001a06c:	mov    rax,QWORD PTR [rip+0x258bd]        # 0x14003f930
   14001a073:	mov    QWORD PTR [rsp+0x68],rax
   14001a078:	mov    rax,QWORD PTR [rip+0x258b9]        # 0x14003f938
   14001a07f:	mov    QWORD PTR [rsp+0x70],rax
   14001a084:	call   QWORD PTR [rip+0x15276]        # 0x14002f300
   14001a08a:	mov    DWORD PTR [rip+0x3b3f8],eax        # 0x140055488
   14001a090:	mov    ecx,0x1
   14001a095:	call   0x140026b4c
   14001a09a:	xor    ecx,ecx
   14001a09c:	call   QWORD PTR [rip+0x15256]        # 0x14002f2f8
   14001a0a2:	lea    rcx,[rip+0x173b7]        # 0x140031460
   14001a0a9:	call   QWORD PTR [rip+0x15241]        # 0x14002f2f0
   14001a0af:	cmp    DWORD PTR [rip+0x3b3d2],0x0        # 0x140055488
   14001a0b6:	jne    0x14001a0c2
   14001a0b8:	mov    ecx,0x1
   14001a0bd:	call   0x140026b4c
   14001a0c2:	call   QWORD PTR [rip+0x14fd8]        # 0x14002f0a0
   14001a0c8:	mov    edx,0xc0000409
   14001a0cd:	mov    rcx,rax
   14001a0d0:	call   QWORD PTR [rip+0x1524a]        # 0x14002f320
   14001a0d6:	add    rsp,0x88
   14001a0dd:	ret    
   14001a0de:	int3   
   14001a0df:	int3   
   14001a0e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a0e5:	mov    QWORD PTR [rsp+0x10],rbp
   14001a0ea:	mov    QWORD PTR [rsp+0x18],rsi
   14001a0ef:	push   rdi
   14001a0f0:	sub    rsp,0x20
   14001a0f4:	lea    rbx,[rcx+0x1c]
   14001a0f8:	mov    rbp,rcx
   14001a0fb:	mov    esi,0x101
   14001a100:	mov    rcx,rbx
   14001a103:	mov    r8d,esi
   14001a106:	xor    edx,edx
   14001a108:	call   0x140012fb0
   14001a10d:	xor    r11d,r11d
   14001a110:	lea    rdi,[rbp+0x10]
   14001a114:	lea    ecx,[r11+0x6]
   14001a118:	movzx  eax,r11w
   14001a11c:	mov    DWORD PTR [rbp+0xc],r11d
   14001a120:	mov    QWORD PTR [rbp+0x4],r11
   14001a124:	rep stos WORD PTR es:[rdi],ax
   14001a127:	lea    rdi,[rip+0x25dc2]        # 0x14003fef0
   14001a12e:	sub    rdi,rbp
   14001a131:	mov    al,BYTE PTR [rdi+rbx*1]
   14001a134:	mov    BYTE PTR [rbx],al
   14001a136:	inc    rbx
   14001a139:	dec    rsi
   14001a13c:	jne    0x14001a131
   14001a13e:	lea    rcx,[rbp+0x11d]
   14001a145:	mov    edx,0x100
   14001a14a:	mov    al,BYTE PTR [rcx+rdi*1]
   14001a14d:	mov    BYTE PTR [rcx],al
   14001a14f:	inc    rcx
   14001a152:	dec    rdx
   14001a155:	jne    0x14001a14a
   14001a157:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a15c:	mov    rbp,QWORD PTR [rsp+0x38]
   14001a161:	mov    rsi,QWORD PTR [rsp+0x40]
   14001a166:	add    rsp,0x20
   14001a16a:	pop    rdi
   14001a16b:	ret    
   14001a16c:	mov    rax,rsp
   14001a16f:	mov    QWORD PTR [rax+0x10],rbx
   14001a173:	mov    QWORD PTR [rax+0x18],rsi
   14001a177:	mov    QWORD PTR [rax+0x20],rdi
   14001a17b:	push   rbp
   14001a17c:	lea    rbp,[rax-0x488]
   14001a183:	sub    rsp,0x580
   14001a18a:	mov    rax,QWORD PTR [rip+0x2579f]        # 0x14003f930
   14001a191:	xor    rax,rsp
   14001a194:	mov    QWORD PTR [rbp+0x470],rax
   14001a19b:	mov    rsi,rcx
   14001a19e:	mov    ecx,DWORD PTR [rcx+0x4]
   14001a1a1:	lea    rdx,[rsp+0x50]
   14001a1a6:	call   QWORD PTR [rip+0x1517c]        # 0x14002f328
   14001a1ac:	mov    ebx,0x100
   14001a1b1:	test   eax,eax
   14001a1b3:	je     0x14001a2f5
   14001a1b9:	xor    eax,eax
   14001a1bb:	lea    rcx,[rsp+0x70]
   14001a1c0:	mov    BYTE PTR [rcx],al
   14001a1c2:	inc    eax
   14001a1c4:	inc    rcx
   14001a1c7:	cmp    eax,ebx
   14001a1c9:	jb     0x14001a1c0
   14001a1cb:	mov    al,BYTE PTR [rsp+0x56]
   14001a1cf:	mov    BYTE PTR [rsp+0x70],0x20
   14001a1d4:	lea    rdi,[rsp+0x56]
   14001a1d9:	jmp    0x14001a204
   14001a1db:	movzx  edx,BYTE PTR [rdi+0x1]
   14001a1df:	movzx  r8d,al
   14001a1e3:	cmp    r8d,edx
   14001a1e6:	ja     0x14001a1fe
   14001a1e8:	sub    edx,r8d
   14001a1eb:	mov    eax,r8d
   14001a1ee:	lea    rcx,[rsp+r8*1+0x70]
   14001a1f3:	lea    r8d,[rdx+0x1]
   14001a1f7:	mov    dl,0x20
   14001a1f9:	call   0x140012fb0
   14001a1fe:	add    rdi,0x2
   14001a202:	mov    al,BYTE PTR [rdi]
   14001a204:	test   al,al
   14001a206:	jne    0x14001a1db
   14001a208:	mov    eax,DWORD PTR [rsi+0xc]
   14001a20b:	and    DWORD PTR [rsp+0x38],0x0
   14001a210:	lea    r8,[rsp+0x70]
   14001a215:	mov    DWORD PTR [rsp+0x30],eax
   14001a219:	mov    eax,DWORD PTR [rsi+0x4]
   14001a21c:	mov    r9d,ebx
   14001a21f:	mov    DWORD PTR [rsp+0x28],eax
   14001a223:	lea    rax,[rbp+0x270]
   14001a22a:	mov    edx,0x1
   14001a22f:	xor    ecx,ecx
   14001a231:	mov    QWORD PTR [rsp+0x20],rax
   14001a236:	call   0x140027018
   14001a23b:	and    DWORD PTR [rsp+0x40],0x0
   14001a240:	mov    eax,DWORD PTR [rsi+0x4]
   14001a243:	mov    edx,DWORD PTR [rsi+0xc]
   14001a246:	mov    DWORD PTR [rsp+0x38],eax
   14001a24a:	lea    rax,[rbp+0x70]
   14001a24e:	mov    DWORD PTR [rsp+0x30],ebx
   14001a252:	mov    QWORD PTR [rsp+0x28],rax
   14001a257:	lea    r9,[rsp+0x70]
   14001a25c:	mov    r8d,ebx
   14001a25f:	xor    ecx,ecx
   14001a261:	mov    DWORD PTR [rsp+0x20],ebx
   14001a265:	call   0x140026e20
   14001a26a:	and    DWORD PTR [rsp+0x40],0x0
   14001a26f:	mov    eax,DWORD PTR [rsi+0x4]
   14001a272:	mov    edx,DWORD PTR [rsi+0xc]
   14001a275:	mov    DWORD PTR [rsp+0x38],eax
   14001a279:	lea    rax,[rbp+0x170]
   14001a280:	mov    DWORD PTR [rsp+0x30],ebx
   14001a284:	mov    QWORD PTR [rsp+0x28],rax
   14001a289:	lea    r9,[rsp+0x70]
   14001a28e:	mov    r8d,0x200
   14001a294:	xor    ecx,ecx
   14001a296:	mov    DWORD PTR [rsp+0x20],ebx
   14001a29a:	call   0x140026e20
   14001a29f:	lea    rdx,[rbp+0x70]
   14001a2a3:	lea    r8,[rbp+0x170]
   14001a2aa:	sub    rdx,rsi
   14001a2ad:	lea    r11,[rbp+0x270]
   14001a2b4:	lea    rcx,[rsi+0x1d]
   14001a2b8:	sub    r8,rsi
   14001a2bb:	test   BYTE PTR [r11],0x1
   14001a2bf:	je     0x14001a2ca
   14001a2c1:	or     BYTE PTR [rcx],0x10
   14001a2c4:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   14001a2c8:	jmp    0x14001a2d8
   14001a2ca:	test   BYTE PTR [r11],0x2
   14001a2ce:	je     0x14001a2e0
   14001a2d0:	or     BYTE PTR [rcx],0x20
   14001a2d3:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   14001a2d8:	mov    BYTE PTR [rcx+0x100],al
   14001a2de:	jmp    0x14001a2e7
   14001a2e0:	mov    BYTE PTR [rcx+0x100],0x0
   14001a2e7:	inc    rcx
   14001a2ea:	add    r11,0x2
   14001a2ee:	dec    rbx
   14001a2f1:	jne    0x14001a2bb
   14001a2f3:	jmp    0x14001a334
   14001a2f5:	xor    edx,edx
   14001a2f7:	lea    rcx,[rsi+0x1d]
   14001a2fb:	lea    r8d,[rdx-0x61]
   14001a2ff:	lea    eax,[r8+0x20]
   14001a303:	cmp    eax,0x19
   14001a306:	ja     0x14001a310
   14001a308:	or     BYTE PTR [rcx],0x10
   14001a30b:	lea    eax,[rdx+0x20]
   14001a30e:	jmp    0x14001a31c
   14001a310:	cmp    r8d,0x19
   14001a314:	ja     0x14001a324
   14001a316:	or     BYTE PTR [rcx],0x20
   14001a319:	lea    eax,[rdx-0x20]
   14001a31c:	mov    BYTE PTR [rcx+0x100],al
   14001a322:	jmp    0x14001a32b
   14001a324:	mov    BYTE PTR [rcx+0x100],0x0
   14001a32b:	inc    edx
   14001a32d:	inc    rcx
   14001a330:	cmp    edx,ebx
   14001a332:	jb     0x14001a2fb
   14001a334:	mov    rcx,QWORD PTR [rbp+0x470]
   14001a33b:	xor    rcx,rsp
   14001a33e:	call   0x140012670
   14001a343:	lea    r11,[rsp+0x580]
   14001a34b:	mov    rbx,QWORD PTR [r11+0x18]
   14001a34f:	mov    rsi,QWORD PTR [r11+0x20]
   14001a353:	mov    rdi,QWORD PTR [r11+0x28]
   14001a357:	mov    rsp,r11
   14001a35a:	pop    rbp
   14001a35b:	ret    
   14001a35c:	mov    QWORD PTR [rsp+0x10],rbx
   14001a361:	push   rdi
   14001a362:	sub    rsp,0x20
   14001a366:	call   0x14001ae14
   14001a36b:	mov    rdi,rax
   14001a36e:	mov    ecx,DWORD PTR [rax+0xc8]
   14001a374:	test   DWORD PTR [rip+0x260a6],ecx        # 0x140040420
   14001a37a:	je     0x14001a38f
   14001a37c:	cmp    QWORD PTR [rax+0xc0],0x0
   14001a384:	je     0x14001a38f
   14001a386:	mov    rbx,QWORD PTR [rax+0xb8]
   14001a38d:	jmp    0x14001a3fb
   14001a38f:	mov    ecx,0xd
   14001a394:	call   0x14001ccc8
   14001a399:	nop
   14001a39a:	mov    rbx,QWORD PTR [rdi+0xb8]
   14001a3a1:	mov    QWORD PTR [rsp+0x30],rbx
   14001a3a6:	cmp    rbx,QWORD PTR [rip+0x25f73]        # 0x140040320
   14001a3ad:	je     0x14001a3f1
   14001a3af:	test   rbx,rbx
   14001a3b2:	je     0x14001a3cf
   14001a3b4:	lock dec DWORD PTR [rbx]
   14001a3b7:	jne    0x14001a3cf
   14001a3b9:	lea    rax,[rip+0x25b30]        # 0x14003fef0
   14001a3c0:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a3c5:	cmp    rcx,rax
   14001a3c8:	je     0x14001a3cf
   14001a3ca:	call   0x1400130a8
   14001a3cf:	mov    rax,QWORD PTR [rip+0x25f4a]        # 0x140040320
   14001a3d6:	mov    QWORD PTR [rdi+0xb8],rax
   14001a3dd:	mov    rax,QWORD PTR [rip+0x25f3c]        # 0x140040320
   14001a3e4:	mov    QWORD PTR [rsp+0x30],rax
   14001a3e9:	lock inc DWORD PTR [rax]
   14001a3ec:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a3f1:	mov    ecx,0xd
   14001a3f6:	call   0x14001cbc8
   14001a3fb:	test   rbx,rbx
   14001a3fe:	jne    0x14001a408
   14001a400:	lea    ecx,[rbx+0x20]
   14001a403:	call   0x140013c64
   14001a408:	mov    rax,rbx
   14001a40b:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a410:	add    rsp,0x20
   14001a414:	pop    rdi
   14001a415:	ret    
   14001a416:	int3   
   14001a417:	int3   
   14001a418:	rex push rbx
   14001a41a:	sub    rsp,0x40
   14001a41e:	mov    ebx,ecx
   14001a420:	lea    rcx,[rsp+0x20]
   14001a425:	xor    edx,edx
   14001a427:	call   0x140012690
   14001a42c:	and    DWORD PTR [rip+0x3b52d],0x0        # 0x140055960
   14001a433:	cmp    ebx,0xfffffffe
   14001a436:	jne    0x14001a45d
   14001a438:	mov    DWORD PTR [rip+0x3b51e],0x1        # 0x140055960
   14001a442:	call   QWORD PTR [rip+0x14ef0]        # 0x14002f338
   14001a448:	cmp    BYTE PTR [rsp+0x38],0x0
   14001a44d:	je     0x14001a4a2
   14001a44f:	mov    rcx,QWORD PTR [rsp+0x30]
   14001a454:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001a45b:	jmp    0x14001a4a2
   14001a45d:	cmp    ebx,0xfffffffd
   14001a460:	jne    0x14001a474
   14001a462:	mov    DWORD PTR [rip+0x3b4f4],0x1        # 0x140055960
   14001a46c:	call   QWORD PTR [rip+0x14ebe]        # 0x14002f330
   14001a472:	jmp    0x14001a448
   14001a474:	cmp    ebx,0xfffffffc
   14001a477:	jne    0x14001a48d
   14001a479:	mov    rax,QWORD PTR [rsp+0x20]
   14001a47e:	mov    DWORD PTR [rip+0x3b4d8],0x1        # 0x140055960
   14001a488:	mov    eax,DWORD PTR [rax+0x4]
   14001a48b:	jmp    0x14001a448
   14001a48d:	cmp    BYTE PTR [rsp+0x38],0x0
   14001a492:	je     0x14001a4a0
   14001a494:	mov    rax,QWORD PTR [rsp+0x30]
   14001a499:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001a4a0:	mov    eax,ebx
   14001a4a2:	add    rsp,0x40
   14001a4a6:	pop    rbx
   14001a4a7:	ret    
   14001a4a8:	mov    QWORD PTR [rsp+0x18],rbx
   14001a4ad:	push   rbp
   14001a4ae:	push   rsi
   14001a4af:	push   rdi
   14001a4b0:	push   r12
   14001a4b2:	push   r13
   14001a4b4:	sub    rsp,0x40
   14001a4b8:	mov    rax,QWORD PTR [rip+0x25471]        # 0x14003f930
   14001a4bf:	xor    rax,rsp
   14001a4c2:	mov    QWORD PTR [rsp+0x38],rax
   14001a4c7:	mov    rsi,rdx
   14001a4ca:	call   0x14001a418
   14001a4cf:	xor    ebx,ebx
   14001a4d1:	mov    edi,eax
   14001a4d3:	test   eax,eax
   14001a4d5:	jne    0x14001a4e4
   14001a4d7:	mov    rcx,rsi
   14001a4da:	call   0x14001a0e0
   14001a4df:	jmp    0x14001a6fa
   14001a4e4:	lea    r13,[rip+0x25e45]        # 0x140040330
   14001a4eb:	mov    ecx,ebx
   14001a4ed:	mov    rbp,rbx
   14001a4f0:	mov    rax,r13
   14001a4f3:	mov    r12d,0x1
   14001a4f9:	cmp    DWORD PTR [rax],edi
   14001a4fb:	je     0x14001a627
   14001a501:	add    ecx,r12d
   14001a504:	add    rbp,r12
   14001a507:	add    rax,0x30
   14001a50b:	cmp    ecx,0x5
   14001a50e:	jb     0x14001a4f9
   14001a510:	cmp    edi,0xfde8
   14001a516:	je     0x14001a61f
   14001a51c:	cmp    edi,0xfde9
   14001a522:	je     0x14001a61f
   14001a528:	movzx  ecx,di
   14001a52b:	call   QWORD PTR [rip+0x14e0f]        # 0x14002f340
   14001a531:	test   eax,eax
   14001a533:	je     0x14001a61f
   14001a539:	lea    rdx,[rsp+0x20]
   14001a53e:	mov    ecx,edi
   14001a540:	call   QWORD PTR [rip+0x14de2]        # 0x14002f328
   14001a546:	test   eax,eax
   14001a548:	je     0x14001a613
   14001a54e:	lea    rcx,[rsi+0x1c]
   14001a552:	xor    edx,edx
   14001a554:	mov    r8d,0x101
   14001a55a:	call   0x140012fb0
   14001a55f:	mov    DWORD PTR [rsi+0x4],edi
   14001a562:	mov    DWORD PTR [rsi+0xc],ebx
   14001a565:	cmp    DWORD PTR [rsp+0x20],r12d
   14001a56a:	jbe    0x14001a5fc
   14001a570:	lea    rax,[rsp+0x26]
   14001a575:	cmp    BYTE PTR [rsp+0x26],bl
   14001a579:	je     0x14001a5a8
   14001a57b:	cmp    BYTE PTR [rax+0x1],bl
   14001a57e:	je     0x14001a5a8
   14001a580:	movzx  edi,BYTE PTR [rax]
   14001a583:	movzx  ecx,BYTE PTR [rax+0x1]
   14001a587:	cmp    edi,ecx
   14001a589:	ja     0x14001a5a0
   14001a58b:	sub    ecx,edi
   14001a58d:	lea    rdx,[rdi+rsi*1+0x1d]
   14001a592:	add    ecx,r12d
   14001a595:	or     BYTE PTR [rdx],0x4
   14001a598:	add    rdx,r12
   14001a59b:	sub    rcx,r12
   14001a59e:	jne    0x14001a595
   14001a5a0:	add    rax,0x2
   14001a5a4:	cmp    BYTE PTR [rax],bl
   14001a5a6:	jne    0x14001a57b
   14001a5a8:	lea    rax,[rsi+0x1e]
   14001a5ac:	mov    ecx,0xfe
   14001a5b1:	or     BYTE PTR [rax],0x8
   14001a5b4:	add    rax,r12
   14001a5b7:	sub    rcx,r12
   14001a5ba:	jne    0x14001a5b1
   14001a5bc:	mov    ecx,DWORD PTR [rsi+0x4]
   14001a5bf:	sub    ecx,0x3a4
   14001a5c5:	je     0x14001a5ee
   14001a5c7:	sub    ecx,0x4
   14001a5ca:	je     0x14001a5e7
   14001a5cc:	sub    ecx,0xd
   14001a5cf:	je     0x14001a5e0
   14001a5d1:	dec    ecx
   14001a5d3:	je     0x14001a5d9
   14001a5d5:	mov    eax,ebx
   14001a5d7:	jmp    0x14001a5f3
   14001a5d9:	mov    eax,0x404
   14001a5de:	jmp    0x14001a5f3
   14001a5e0:	mov    eax,0x412
   14001a5e5:	jmp    0x14001a5f3
   14001a5e7:	mov    eax,0x804
   14001a5ec:	jmp    0x14001a5f3
   14001a5ee:	mov    eax,0x411
   14001a5f3:	mov    DWORD PTR [rsi+0xc],eax
   14001a5f6:	mov    DWORD PTR [rsi+0x8],r12d
   14001a5fa:	jmp    0x14001a5ff
   14001a5fc:	mov    DWORD PTR [rsi+0x8],ebx
   14001a5ff:	lea    rdi,[rsi+0x10]
   14001a603:	movzx  eax,bx
   14001a606:	mov    ecx,0x6
   14001a60b:	rep stos WORD PTR es:[rdi],ax
   14001a60e:	jmp    0x14001a6f2
   14001a613:	cmp    DWORD PTR [rip+0x3b347],ebx        # 0x140055960
   14001a619:	jne    0x14001a4d7
   14001a61f:	or     eax,0xffffffff
   14001a622:	jmp    0x14001a6fc
   14001a627:	lea    rcx,[rsi+0x1c]
   14001a62b:	xor    edx,edx
   14001a62d:	mov    r8d,0x101
   14001a633:	call   0x140012fb0
   14001a638:	lea    r10,[rbp+rbp*2+0x0]
   14001a63d:	lea    r11,[rip+0x25ce4]        # 0x140040328
   14001a644:	shl    r10,0x4
   14001a648:	mov    ebp,0x4
   14001a64d:	lea    r8,[r10+r13*1+0x10]
   14001a652:	mov    rcx,r8
   14001a655:	cmp    BYTE PTR [r8],bl
   14001a658:	je     0x14001a68b
   14001a65a:	cmp    BYTE PTR [rcx+0x1],bl
   14001a65d:	je     0x14001a68b
   14001a65f:	movzx  edx,BYTE PTR [rcx]
   14001a662:	movzx  eax,BYTE PTR [rcx+0x1]
   14001a666:	cmp    edx,eax
   14001a668:	ja     0x14001a683
   14001a66a:	lea    r9,[rdx+rsi*1+0x1d]
   14001a66f:	mov    al,BYTE PTR [r11]
   14001a672:	add    edx,r12d
   14001a675:	or     BYTE PTR [r9],al
   14001a678:	movzx  eax,BYTE PTR [rcx+0x1]
   14001a67c:	add    r9,r12
   14001a67f:	cmp    edx,eax
   14001a681:	jbe    0x14001a66f
   14001a683:	add    rcx,0x2
   14001a687:	cmp    BYTE PTR [rcx],bl
   14001a689:	jne    0x14001a65a
   14001a68b:	add    r8,0x8
   14001a68f:	add    r11,r12
   14001a692:	sub    rbp,r12
   14001a695:	jne    0x14001a652
   14001a697:	mov    DWORD PTR [rsi+0x4],edi
   14001a69a:	sub    edi,0x3a4
   14001a6a0:	mov    DWORD PTR [rsi+0x8],r12d
   14001a6a4:	je     0x14001a6c9
   14001a6a6:	sub    edi,0x4
   14001a6a9:	je     0x14001a6c2
   14001a6ab:	sub    edi,0xd
   14001a6ae:	je     0x14001a6bb
   14001a6b0:	dec    edi
   14001a6b2:	jne    0x14001a6ce
   14001a6b4:	mov    ebx,0x404
   14001a6b9:	jmp    0x14001a6ce
   14001a6bb:	mov    ebx,0x412
   14001a6c0:	jmp    0x14001a6ce
   14001a6c2:	mov    ebx,0x804
   14001a6c7:	jmp    0x14001a6ce
   14001a6c9:	mov    ebx,0x411
   14001a6ce:	sub    r10,rsi
   14001a6d1:	mov    DWORD PTR [rsi+0xc],ebx
   14001a6d4:	lea    rcx,[rsi+0x10]
   14001a6d8:	lea    rdi,[r10+r13*1-0xc]
   14001a6dd:	mov    edx,0x6
   14001a6e2:	movzx  eax,WORD PTR [rdi+rcx*1]
   14001a6e6:	mov    WORD PTR [rcx],ax
   14001a6e9:	add    rcx,0x2
   14001a6ed:	sub    rdx,r12
   14001a6f0:	jne    0x14001a6e2
   14001a6f2:	mov    rcx,rsi
   14001a6f5:	call   0x14001a16c
   14001a6fa:	xor    eax,eax
   14001a6fc:	mov    rcx,QWORD PTR [rsp+0x38]
   14001a701:	xor    rcx,rsp
   14001a704:	call   0x140012670
   14001a709:	mov    rbx,QWORD PTR [rsp+0x80]
   14001a711:	add    rsp,0x40
   14001a715:	pop    r13
   14001a717:	pop    r12
   14001a719:	pop    rdi
   14001a71a:	pop    rsi
   14001a71b:	pop    rbp
   14001a71c:	ret    
   14001a71d:	int3   
   14001a71e:	int3   
   14001a71f:	int3   
   14001a720:	mov    rax,rsp
   14001a723:	mov    QWORD PTR [rax+0x8],rbx
   14001a727:	mov    QWORD PTR [rax+0x10],rsi
   14001a72b:	mov    QWORD PTR [rax+0x18],rdi
   14001a72f:	mov    QWORD PTR [rax+0x20],r12
   14001a733:	push   r13
   14001a735:	sub    rsp,0x30
   14001a739:	mov    edi,ecx
   14001a73b:	or     r13d,0xffffffff
   14001a73f:	call   0x14001ae14
   14001a744:	mov    rsi,rax
   14001a747:	call   0x14001a35c
   14001a74c:	mov    rbx,QWORD PTR [rsi+0xb8]
   14001a753:	mov    ecx,edi
   14001a755:	call   0x14001a418
   14001a75a:	mov    r12d,eax
   14001a75d:	cmp    eax,DWORD PTR [rbx+0x4]
   14001a760:	je     0x14001a8db
   14001a766:	mov    ecx,0x220
   14001a76b:	call   0x140020c28
   14001a770:	mov    rbx,rax
   14001a773:	xor    edi,edi
   14001a775:	test   rax,rax
   14001a778:	je     0x14001a8e0
   14001a77e:	mov    rdx,QWORD PTR [rsi+0xb8]
   14001a785:	mov    rcx,rax
   14001a788:	mov    r8d,0x220
   14001a78e:	call   0x140018e00
   14001a793:	mov    DWORD PTR [rbx],edi
   14001a795:	mov    rdx,rbx
   14001a798:	mov    ecx,r12d
   14001a79b:	call   0x14001a4a8
   14001a7a0:	mov    r13d,eax
   14001a7a3:	test   eax,eax
   14001a7a5:	jne    0x14001a8b5
   14001a7ab:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001a7b2:	lea    r12,[rip+0x25737]        # 0x14003fef0
   14001a7b9:	lock dec DWORD PTR [rcx]
   14001a7bc:	jne    0x14001a7cf
   14001a7be:	mov    rcx,QWORD PTR [rsi+0xb8]
   14001a7c5:	cmp    rcx,r12
   14001a7c8:	je     0x14001a7cf
   14001a7ca:	call   0x1400130a8
   14001a7cf:	mov    QWORD PTR [rsi+0xb8],rbx
   14001a7d6:	lock inc DWORD PTR [rbx]
   14001a7d9:	test   BYTE PTR [rsi+0xc8],0x2
   14001a7e0:	jne    0x14001a8e0
   14001a7e6:	test   BYTE PTR [rip+0x25c33],0x1        # 0x140040420
   14001a7ed:	jne    0x14001a8e0
   14001a7f3:	mov    esi,0xd
   14001a7f8:	mov    ecx,esi
   14001a7fa:	call   0x14001ccc8
   14001a7ff:	nop
   14001a800:	mov    eax,DWORD PTR [rbx+0x4]
   14001a803:	mov    DWORD PTR [rip+0x3b16b],eax        # 0x140055974
   14001a809:	mov    eax,DWORD PTR [rbx+0x8]
   14001a80c:	mov    DWORD PTR [rip+0x3b166],eax        # 0x140055978
   14001a812:	mov    eax,DWORD PTR [rbx+0xc]
   14001a815:	mov    DWORD PTR [rip+0x3b161],eax        # 0x14005597c
   14001a81b:	mov    edx,edi
   14001a81d:	lea    r8,[rip+0xfffffffffffe57dc]        # 0x140000000
   14001a824:	mov    DWORD PTR [rsp+0x20],edx
   14001a828:	cmp    edx,0x5
   14001a82b:	jge    0x14001a842
   14001a82d:	movsxd rcx,edx
   14001a830:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   14001a835:	mov    WORD PTR [r8+rcx*2+0x55968],ax
   14001a83e:	inc    edx
   14001a840:	jmp    0x14001a824
   14001a842:	mov    edx,edi
   14001a844:	mov    DWORD PTR [rsp+0x20],edx
   14001a848:	cmp    edx,0x101
   14001a84e:	jge    0x14001a863
   14001a850:	movsxd rcx,edx
   14001a853:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   14001a857:	mov    BYTE PTR [rcx+r8*1+0x40110],al
   14001a85f:	inc    edx
   14001a861:	jmp    0x14001a844
   14001a863:	mov    DWORD PTR [rsp+0x20],edi
   14001a867:	cmp    edi,0x100
   14001a86d:	jge    0x14001a885
   14001a86f:	movsxd rcx,edi
   14001a872:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   14001a879:	mov    BYTE PTR [rcx+r8*1+0x40220],al
   14001a881:	inc    edi
   14001a883:	jmp    0x14001a863
   14001a885:	mov    rax,QWORD PTR [rip+0x25a94]        # 0x140040320
   14001a88c:	lock dec DWORD PTR [rax]
   14001a88f:	jne    0x14001a8a2
   14001a891:	mov    rcx,QWORD PTR [rip+0x25a88]        # 0x140040320
   14001a898:	cmp    rcx,r12
   14001a89b:	je     0x14001a8a2
   14001a89d:	call   0x1400130a8
   14001a8a2:	mov    QWORD PTR [rip+0x25a77],rbx        # 0x140040320
   14001a8a9:	lock inc DWORD PTR [rbx]
   14001a8ac:	mov    ecx,esi
   14001a8ae:	call   0x14001cbc8
   14001a8b3:	jmp    0x14001a8e0
   14001a8b5:	cmp    eax,0xffffffff
   14001a8b8:	jne    0x14001a8e0
   14001a8ba:	lea    r12,[rip+0x2562f]        # 0x14003fef0
   14001a8c1:	cmp    rbx,r12
   14001a8c4:	je     0x14001a8ce
   14001a8c6:	mov    rcx,rbx
   14001a8c9:	call   0x1400130a8
   14001a8ce:	call   0x14001583c
   14001a8d3:	mov    DWORD PTR [rax],0x16
   14001a8d9:	jmp    0x14001a8e0
   14001a8db:	xor    edi,edi
   14001a8dd:	mov    r13d,edi
   14001a8e0:	mov    eax,r13d
   14001a8e3:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a8e8:	mov    rsi,QWORD PTR [rsp+0x48]
   14001a8ed:	mov    rdi,QWORD PTR [rsp+0x50]
   14001a8f2:	mov    r12,QWORD PTR [rsp+0x58]
   14001a8f7:	add    rsp,0x30
   14001a8fb:	pop    r13
   14001a8fd:	ret    
   14001a8fe:	int3   
   14001a8ff:	int3   
   14001a900:	sub    rsp,0x28
   14001a904:	cmp    DWORD PTR [rip+0x3cf4d],0x0        # 0x140057858
   14001a90b:	jne    0x14001a921
   14001a90d:	mov    ecx,0xfffffffd
   14001a912:	call   0x14001a720
   14001a917:	mov    DWORD PTR [rip+0x3cf37],0x1        # 0x140057858
   14001a921:	xor    eax,eax
   14001a923:	add    rsp,0x28
   14001a927:	ret    
   14001a928:	lock inc DWORD PTR [rcx]
   14001a92b:	mov    rax,QWORD PTR [rcx+0x110]
   14001a932:	test   rax,rax
   14001a935:	je     0x14001a93a
   14001a937:	lock inc DWORD PTR [rax]
   14001a93a:	mov    rax,QWORD PTR [rcx+0x120]
   14001a941:	test   rax,rax
   14001a944:	je     0x14001a949
   14001a946:	lock inc DWORD PTR [rax]
   14001a949:	mov    rax,QWORD PTR [rcx+0x118]
   14001a950:	test   rax,rax
   14001a953:	je     0x14001a958
   14001a955:	lock inc DWORD PTR [rax]
   14001a958:	mov    rax,QWORD PTR [rcx+0x130]
   14001a95f:	test   rax,rax
   14001a962:	je     0x14001a967
   14001a964:	lock inc DWORD PTR [rax]
   14001a967:	lea    rax,[rcx+0x58]
   14001a96b:	mov    r8d,0x6
   14001a971:	lea    rdx,[rip+0x25aac]        # 0x140040424
   14001a978:	cmp    QWORD PTR [rax-0x10],rdx
   14001a97c:	je     0x14001a989
   14001a97e:	mov    rdx,QWORD PTR [rax]
   14001a981:	test   rdx,rdx
   14001a984:	je     0x14001a989
   14001a986:	lock inc DWORD PTR [rdx]
   14001a989:	cmp    QWORD PTR [rax-0x8],0x0
   14001a98e:	je     0x14001a99c
   14001a990:	mov    rdx,QWORD PTR [rax+0x8]
   14001a994:	test   rdx,rdx
   14001a997:	je     0x14001a99c
   14001a999:	lock inc DWORD PTR [rdx]
   14001a99c:	add    rax,0x20
   14001a9a0:	dec    r8
   14001a9a3:	jne    0x14001a971
   14001a9a5:	mov    rax,QWORD PTR [rcx+0x158]
   14001a9ac:	lock inc DWORD PTR [rax+0x160]
   14001a9b3:	ret    
   14001a9b4:	test   rcx,rcx
   14001a9b7:	je     0x14001aa54
   14001a9bd:	or     r9d,0xffffffff
   14001a9c1:	lock add DWORD PTR [rcx],r9d
   14001a9c5:	mov    rax,QWORD PTR [rcx+0x110]
   14001a9cc:	test   rax,rax
   14001a9cf:	je     0x14001a9d5
   14001a9d1:	lock add DWORD PTR [rax],r9d
   14001a9d5:	mov    rax,QWORD PTR [rcx+0x120]
   14001a9dc:	test   rax,rax
   14001a9df:	je     0x14001a9e5
   14001a9e1:	lock add DWORD PTR [rax],r9d
   14001a9e5:	mov    rax,QWORD PTR [rcx+0x118]
   14001a9ec:	test   rax,rax
   14001a9ef:	je     0x14001a9f5
   14001a9f1:	lock add DWORD PTR [rax],r9d
   14001a9f5:	mov    rax,QWORD PTR [rcx+0x130]
   14001a9fc:	test   rax,rax
   14001a9ff:	je     0x14001aa05
   14001aa01:	lock add DWORD PTR [rax],r9d
   14001aa05:	lea    rax,[rcx+0x58]
   14001aa09:	mov    r8d,0x6
   14001aa0f:	lea    rdx,[rip+0x25a0e]        # 0x140040424
   14001aa16:	cmp    QWORD PTR [rax-0x10],rdx
   14001aa1a:	je     0x14001aa28
   14001aa1c:	mov    rdx,QWORD PTR [rax]
   14001aa1f:	test   rdx,rdx
   14001aa22:	je     0x14001aa28
   14001aa24:	lock add DWORD PTR [rdx],r9d
   14001aa28:	cmp    QWORD PTR [rax-0x8],0x0
   14001aa2d:	je     0x14001aa3c
   14001aa2f:	mov    rdx,QWORD PTR [rax+0x8]
   14001aa33:	test   rdx,rdx
   14001aa36:	je     0x14001aa3c
   14001aa38:	lock add DWORD PTR [rdx],r9d
   14001aa3c:	add    rax,0x20
   14001aa40:	dec    r8
   14001aa43:	jne    0x14001aa0f
   14001aa45:	mov    rax,QWORD PTR [rcx+0x158]
   14001aa4c:	lock add DWORD PTR [rax+0x160],r9d
   14001aa54:	mov    rax,rcx
   14001aa57:	ret    
   14001aa58:	mov    QWORD PTR [rsp+0x8],rbx
   14001aa5d:	mov    QWORD PTR [rsp+0x10],rsi
   14001aa62:	push   rdi
   14001aa63:	sub    rsp,0x20
   14001aa67:	mov    rax,QWORD PTR [rcx+0x128]
   14001aa6e:	mov    rbx,rcx
   14001aa71:	test   rax,rax
   14001aa74:	je     0x14001aaef
   14001aa76:	lea    rcx,[rip+0x26513]        # 0x140040f90
   14001aa7d:	cmp    rax,rcx
   14001aa80:	je     0x14001aaef
   14001aa82:	mov    rax,QWORD PTR [rbx+0x110]
   14001aa89:	test   rax,rax
   14001aa8c:	je     0x14001aaef
   14001aa8e:	cmp    DWORD PTR [rax],0x0
   14001aa91:	jne    0x14001aaef
   14001aa93:	mov    rcx,QWORD PTR [rbx+0x120]
   14001aa9a:	test   rcx,rcx
   14001aa9d:	je     0x14001aab5
   14001aa9f:	cmp    DWORD PTR [rcx],0x0
   14001aaa2:	jne    0x14001aab5
   14001aaa4:	call   0x1400130a8
   14001aaa9:	mov    rcx,QWORD PTR [rbx+0x128]
   14001aab0:	call   0x1400274f4
   14001aab5:	mov    rcx,QWORD PTR [rbx+0x118]
   14001aabc:	test   rcx,rcx
   14001aabf:	je     0x14001aad7
   14001aac1:	cmp    DWORD PTR [rcx],0x0
   14001aac4:	jne    0x14001aad7
   14001aac6:	call   0x1400130a8
   14001aacb:	mov    rcx,QWORD PTR [rbx+0x128]
   14001aad2:	call   0x140027488
   14001aad7:	mov    rcx,QWORD PTR [rbx+0x110]
   14001aade:	call   0x1400130a8
   14001aae3:	mov    rcx,QWORD PTR [rbx+0x128]
   14001aaea:	call   0x1400130a8
   14001aaef:	mov    rax,QWORD PTR [rbx+0x130]
   14001aaf6:	test   rax,rax
   14001aaf9:	je     0x14001ab42
   14001aafb:	cmp    DWORD PTR [rax],0x0
   14001aafe:	jne    0x14001ab42
   14001ab00:	mov    rcx,QWORD PTR [rbx+0x138]
   14001ab07:	sub    rcx,0xfe
   14001ab0e:	call   0x1400130a8
   14001ab13:	mov    rcx,QWORD PTR [rbx+0x148]
   14001ab1a:	mov    edi,0x80
   14001ab1f:	sub    rcx,rdi
   14001ab22:	call   0x1400130a8
   14001ab27:	mov    rcx,QWORD PTR [rbx+0x150]
   14001ab2e:	sub    rcx,rdi
   14001ab31:	call   0x1400130a8
   14001ab36:	mov    rcx,QWORD PTR [rbx+0x130]
   14001ab3d:	call   0x1400130a8
   14001ab42:	mov    rcx,QWORD PTR [rbx+0x158]
   14001ab49:	lea    rax,[rip+0x258e0]        # 0x140040430
   14001ab50:	cmp    rcx,rax
   14001ab53:	je     0x14001ab6f
   14001ab55:	cmp    DWORD PTR [rcx+0x160],0x0
   14001ab5c:	jne    0x14001ab6f
   14001ab5e:	call   0x140027098
   14001ab63:	mov    rcx,QWORD PTR [rbx+0x158]
   14001ab6a:	call   0x1400130a8
   14001ab6f:	lea    rdi,[rbx+0x58]
   14001ab73:	mov    esi,0x6
   14001ab78:	lea    rax,[rip+0x258a5]        # 0x140040424
   14001ab7f:	cmp    QWORD PTR [rdi-0x10],rax
   14001ab83:	je     0x14001ab97
   14001ab85:	mov    rcx,QWORD PTR [rdi]
   14001ab88:	test   rcx,rcx
   14001ab8b:	je     0x14001ab97
   14001ab8d:	cmp    DWORD PTR [rcx],0x0
   14001ab90:	jne    0x14001ab97
   14001ab92:	call   0x1400130a8
   14001ab97:	cmp    QWORD PTR [rdi-0x8],0x0
   14001ab9c:	je     0x14001abb1
   14001ab9e:	mov    rcx,QWORD PTR [rdi+0x8]
   14001aba2:	test   rcx,rcx
   14001aba5:	je     0x14001abb1
   14001aba7:	cmp    DWORD PTR [rcx],0x0
   14001abaa:	jne    0x14001abb1
   14001abac:	call   0x1400130a8
   14001abb1:	add    rdi,0x20
   14001abb5:	dec    rsi
   14001abb8:	jne    0x14001ab78
   14001abba:	mov    rcx,rbx
   14001abbd:	mov    rbx,QWORD PTR [rsp+0x30]
   14001abc2:	mov    rsi,QWORD PTR [rsp+0x38]
   14001abc7:	add    rsp,0x20
   14001abcb:	pop    rdi
   14001abcc:	jmp    0x1400130a8
   14001abd1:	int3   
   14001abd2:	int3   
   14001abd3:	int3   
   14001abd4:	rex push rbx
   14001abd6:	sub    rsp,0x20
   14001abda:	mov    rbx,rdx
   14001abdd:	test   rdx,rdx
   14001abe0:	je     0x14001ac23
   14001abe2:	test   rcx,rcx
   14001abe5:	je     0x14001ac23
   14001abe7:	mov    r10,QWORD PTR [rcx]
   14001abea:	cmp    r10,rdx
   14001abed:	je     0x14001ac1e
   14001abef:	mov    QWORD PTR [rcx],rdx
   14001abf2:	mov    rcx,rdx
   14001abf5:	call   0x14001a928
   14001abfa:	test   r10,r10
   14001abfd:	je     0x14001ac1e
   14001abff:	mov    rcx,r10
   14001ac02:	call   0x14001a9b4
   14001ac07:	cmp    DWORD PTR [r10],0x0
   14001ac0b:	jne    0x14001ac1e
   14001ac0d:	lea    rax,[rip+0x25adc]        # 0x1400406f0
   14001ac14:	cmp    r10,rax
   14001ac17:	je     0x14001ac1e
   14001ac19:	call   0x14001aa58
   14001ac1e:	mov    rax,rbx
   14001ac21:	jmp    0x14001ac25
   14001ac23:	xor    eax,eax
   14001ac25:	add    rsp,0x20
   14001ac29:	pop    rbx
   14001ac2a:	ret    
   14001ac2b:	int3   
   14001ac2c:	rex push rbx
   14001ac2e:	sub    rsp,0x20
   14001ac32:	call   0x14001ae14
   14001ac37:	mov    rbx,rax
   14001ac3a:	mov    ecx,DWORD PTR [rax+0xc8]
   14001ac40:	test   DWORD PTR [rip+0x257da],ecx        # 0x140040420
   14001ac46:	je     0x14001ac60
   14001ac48:	cmp    QWORD PTR [rax+0xc0],0x0
   14001ac50:	je     0x14001ac60
   14001ac52:	call   0x14001ae14
   14001ac57:	mov    rbx,QWORD PTR [rax+0xc0]
   14001ac5e:	jmp    0x14001ac8b
   14001ac60:	mov    ecx,0xc
   14001ac65:	call   0x14001ccc8
   14001ac6a:	nop
   14001ac6b:	lea    rcx,[rbx+0xc0]
   14001ac72:	mov    rdx,QWORD PTR [rip+0x25bd7]        # 0x140040850
   14001ac79:	call   0x14001abd4
   14001ac7e:	mov    rbx,rax
   14001ac81:	mov    ecx,0xc
   14001ac86:	call   0x14001cbc8
   14001ac8b:	test   rbx,rbx
   14001ac8e:	jne    0x14001ac98
   14001ac90:	lea    ecx,[rbx+0x20]
   14001ac93:	call   0x140013c64
   14001ac98:	mov    rax,rbx
   14001ac9b:	add    rsp,0x20
   14001ac9f:	pop    rbx
   14001aca0:	ret    
   14001aca1:	int3   
   14001aca2:	int3   
   14001aca3:	int3   
   14001aca4:	xor    ecx,ecx
   14001aca6:	rex.W jmp QWORD PTR [rip+0x1466b]        # 0x14002f318
   14001acad:	int3   
   14001acae:	int3   
   14001acaf:	int3   
   14001acb0:	sub    rsp,0x28
   14001acb4:	mov    ecx,DWORD PTR [rip+0x25bae]        # 0x140040868
   14001acba:	cmp    ecx,0xffffffff
   14001acbd:	je     0x14001accc
   14001acbf:	call   QWORD PTR [rip+0x14693]        # 0x14002f358
   14001acc5:	or     DWORD PTR [rip+0x25b9c],0xffffffff        # 0x140040868
   14001accc:	add    rsp,0x28
   14001acd0:	jmp    0x14001cb40
   14001acd5:	int3   
   14001acd6:	int3   
   14001acd7:	int3   
   14001acd8:	mov    QWORD PTR [rsp+0x8],rbx
   14001acdd:	push   rdi
   14001acde:	sub    rsp,0x20
   14001ace2:	mov    rdi,rdx
   14001ace5:	mov    rbx,rcx
   14001ace8:	lea    rax,[rip+0x18411]        # 0x140033100
   14001acef:	mov    QWORD PTR [rcx+0xa0],rax
   14001acf6:	and    DWORD PTR [rcx+0x10],0x0
   14001acfa:	mov    DWORD PTR [rcx+0x1c],0x1
   14001ad01:	mov    DWORD PTR [rcx+0xc8],0x1
   14001ad0b:	mov    BYTE PTR [rcx+0x174],0x43
   14001ad12:	mov    BYTE PTR [rcx+0x1f7],0x43
   14001ad19:	lea    rax,[rip+0x251d0]        # 0x14003fef0
   14001ad20:	mov    QWORD PTR [rcx+0xb8],rax
   14001ad27:	mov    ecx,0xd
   14001ad2c:	call   0x14001ccc8
   14001ad31:	nop
   14001ad32:	mov    rax,QWORD PTR [rbx+0xb8]
   14001ad39:	lock inc DWORD PTR [rax]
   14001ad3c:	mov    ecx,0xd
   14001ad41:	call   0x14001cbc8
   14001ad46:	mov    ecx,0xc
   14001ad4b:	call   0x14001ccc8
   14001ad50:	nop
   14001ad51:	mov    QWORD PTR [rbx+0xc0],rdi
   14001ad58:	test   rdi,rdi
   14001ad5b:	jne    0x14001ad6b
   14001ad5d:	mov    rax,QWORD PTR [rip+0x25aec]        # 0x140040850
   14001ad64:	mov    QWORD PTR [rbx+0xc0],rax
   14001ad6b:	mov    rcx,QWORD PTR [rbx+0xc0]
   14001ad72:	call   0x14001a928
   14001ad77:	nop
   14001ad78:	mov    ecx,0xc
   14001ad7d:	call   0x14001cbc8
   14001ad82:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ad87:	add    rsp,0x20
   14001ad8b:	pop    rdi
   14001ad8c:	ret    
   14001ad8d:	int3   
   14001ad8e:	int3   
   14001ad8f:	int3   
   14001ad90:	mov    QWORD PTR [rsp+0x8],rbx
   14001ad95:	push   rdi
   14001ad96:	sub    rsp,0x20
   14001ad9a:	call   QWORD PTR [rip+0x14310]        # 0x14002f0b0
   14001ada0:	mov    ecx,DWORD PTR [rip+0x25ac2]        # 0x140040868
   14001ada6:	mov    edi,eax
   14001ada8:	call   QWORD PTR [rip+0x1459a]        # 0x14002f348
   14001adae:	mov    rbx,rax
   14001adb1:	test   rax,rax
   14001adb4:	jne    0x14001adfe
   14001adb6:	lea    ecx,[rax+0x1]
   14001adb9:	mov    edx,0x2c8
   14001adbe:	call   0x140020ca8
   14001adc3:	mov    rbx,rax
   14001adc6:	test   rax,rax
   14001adc9:	je     0x14001adfe
   14001adcb:	mov    ecx,DWORD PTR [rip+0x25a97]        # 0x140040868
   14001add1:	mov    rdx,rax
   14001add4:	call   QWORD PTR [rip+0x14576]        # 0x14002f350
   14001adda:	mov    rcx,rbx
   14001addd:	test   eax,eax
   14001addf:	je     0x14001adf7
   14001ade1:	xor    edx,edx
   14001ade3:	call   0x14001acd8
   14001ade8:	call   QWORD PTR [rip+0x14322]        # 0x14002f110
   14001adee:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14001adf3:	mov    DWORD PTR [rbx],eax
   14001adf5:	jmp    0x14001adfe
   14001adf7:	call   0x1400130a8
   14001adfc:	xor    ebx,ebx
   14001adfe:	mov    ecx,edi
   14001ae00:	call   QWORD PTR [rip+0x1455a]        # 0x14002f360
   14001ae06:	mov    rax,rbx
   14001ae09:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ae0e:	add    rsp,0x20
   14001ae12:	pop    rdi
   14001ae13:	ret    
   14001ae14:	rex push rbx
   14001ae16:	sub    rsp,0x20
   14001ae1a:	call   0x14001ad90
   14001ae1f:	mov    rbx,rax
   14001ae22:	test   rax,rax
   14001ae25:	jne    0x14001ae2f
   14001ae27:	lea    ecx,[rax+0x10]
   14001ae2a:	call   0x140013c64
   14001ae2f:	mov    rax,rbx
   14001ae32:	add    rsp,0x20
   14001ae36:	pop    rbx
   14001ae37:	ret    
   14001ae38:	test   rcx,rcx
   14001ae3b:	je     0x14001af6a
   14001ae41:	mov    QWORD PTR [rsp+0x10],rbx
   14001ae46:	push   rdi
   14001ae47:	sub    rsp,0x20
   14001ae4b:	mov    rbx,rcx
   14001ae4e:	mov    rcx,QWORD PTR [rcx+0x38]
   14001ae52:	test   rcx,rcx
   14001ae55:	je     0x14001ae5c
   14001ae57:	call   0x1400130a8
   14001ae5c:	mov    rcx,QWORD PTR [rbx+0x48]
   14001ae60:	test   rcx,rcx
   14001ae63:	je     0x14001ae6a
   14001ae65:	call   0x1400130a8
   14001ae6a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001ae6e:	test   rcx,rcx
   14001ae71:	je     0x14001ae78
   14001ae73:	call   0x1400130a8
   14001ae78:	mov    rcx,QWORD PTR [rbx+0x68]
   14001ae7c:	test   rcx,rcx
   14001ae7f:	je     0x14001ae86
   14001ae81:	call   0x1400130a8
   14001ae86:	mov    rcx,QWORD PTR [rbx+0x70]
   14001ae8a:	test   rcx,rcx
   14001ae8d:	je     0x14001ae94
   14001ae8f:	call   0x1400130a8
   14001ae94:	mov    rcx,QWORD PTR [rbx+0x78]
   14001ae98:	test   rcx,rcx
   14001ae9b:	je     0x14001aea2
   14001ae9d:	call   0x1400130a8
   14001aea2:	mov    rcx,QWORD PTR [rbx+0x80]
   14001aea9:	test   rcx,rcx
   14001aeac:	je     0x14001aeb3
   14001aeae:	call   0x1400130a8
   14001aeb3:	mov    rcx,QWORD PTR [rbx+0xa0]
   14001aeba:	lea    rax,[rip+0x1823f]        # 0x140033100
   14001aec1:	cmp    rcx,rax
   14001aec4:	je     0x14001aecb
   14001aec6:	call   0x1400130a8
   14001aecb:	mov    edi,0xd
   14001aed0:	mov    ecx,edi
   14001aed2:	call   0x14001ccc8
   14001aed7:	nop
   14001aed8:	mov    rcx,QWORD PTR [rbx+0xb8]
   14001aedf:	mov    QWORD PTR [rsp+0x30],rcx
   14001aee4:	test   rcx,rcx
   14001aee7:	je     0x14001af05
   14001aee9:	lock dec DWORD PTR [rcx]
   14001aeec:	jne    0x14001af05
   14001aeee:	lea    rax,[rip+0x24ffb]        # 0x14003fef0
   14001aef5:	mov    rcx,QWORD PTR [rsp+0x30]
   14001aefa:	cmp    rcx,rax
   14001aefd:	je     0x14001af05
   14001aeff:	call   0x1400130a8
   14001af04:	nop
   14001af05:	mov    ecx,edi
   14001af07:	call   0x14001cbc8
   14001af0c:	mov    ecx,0xc
   14001af11:	call   0x14001ccc8
   14001af16:	nop
   14001af17:	mov    rdi,QWORD PTR [rbx+0xc0]
   14001af1e:	test   rdi,rdi
   14001af21:	je     0x14001af4e
   14001af23:	mov    rcx,rdi
   14001af26:	call   0x14001a9b4
   14001af2b:	cmp    rdi,QWORD PTR [rip+0x2591e]        # 0x140040850
   14001af32:	je     0x14001af4e
   14001af34:	lea    rax,[rip+0x257b5]        # 0x1400406f0
   14001af3b:	cmp    rdi,rax
   14001af3e:	je     0x14001af4e
   14001af40:	cmp    DWORD PTR [rdi],0x0
   14001af43:	jne    0x14001af4e
   14001af45:	mov    rcx,rdi
   14001af48:	call   0x14001aa58
   14001af4d:	nop
   14001af4e:	mov    ecx,0xc
   14001af53:	call   0x14001cbc8
   14001af58:	mov    rcx,rbx
   14001af5b:	call   0x1400130a8
   14001af60:	mov    rbx,QWORD PTR [rsp+0x38]
   14001af65:	add    rsp,0x20
   14001af69:	pop    rdi
   14001af6a:	ret    
   14001af6b:	int3   
   14001af6c:	rex push rbx
   14001af6e:	sub    rsp,0x20
   14001af72:	call   0x140013938
   14001af77:	call   0x14001cabc
   14001af7c:	test   eax,eax
   14001af7e:	je     0x14001afe0
   14001af80:	lea    rcx,[rip+0xfffffffffffffeb1]        # 0x14001ae38
   14001af87:	call   QWORD PTR [rip+0x143db]        # 0x14002f368
   14001af8d:	mov    DWORD PTR [rip+0x258d5],eax        # 0x140040868
   14001af93:	cmp    eax,0xffffffff
   14001af96:	je     0x14001afe0
   14001af98:	mov    edx,0x2c8
   14001af9d:	mov    ecx,0x1
   14001afa2:	call   0x140020ca8
   14001afa7:	mov    rbx,rax
   14001afaa:	test   rax,rax
   14001afad:	je     0x14001afe0
   14001afaf:	mov    ecx,DWORD PTR [rip+0x258b3]        # 0x140040868
   14001afb5:	mov    rdx,rax
   14001afb8:	call   QWORD PTR [rip+0x14392]        # 0x14002f350
   14001afbe:	test   eax,eax
   14001afc0:	je     0x14001afe0
   14001afc2:	xor    edx,edx
   14001afc4:	mov    rcx,rbx
   14001afc7:	call   0x14001acd8
   14001afcc:	call   QWORD PTR [rip+0x1413e]        # 0x14002f110
   14001afd2:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   14001afd7:	mov    DWORD PTR [rbx],eax
   14001afd9:	mov    eax,0x1
   14001afde:	jmp    0x14001afe7
   14001afe0:	call   0x14001acb0
   14001afe5:	xor    eax,eax
   14001afe7:	add    rsp,0x20
   14001afeb:	pop    rbx
   14001afec:	ret    
   14001afed:	int3   
   14001afee:	int3   
   14001afef:	int3   
   14001aff0:	mov    QWORD PTR [rsp+0x8],rbx
   14001aff5:	push   rdi
   14001aff6:	sub    rsp,0x20
   14001affa:	mov    rbx,r8
   14001affd:	mov    rdi,rdx
   14001b000:	test   rcx,rcx
   14001b003:	je     0x14001b022
   14001b005:	xor    edx,edx
   14001b007:	lea    rax,[rdx-0x20]
   14001b00b:	div    rcx
   14001b00e:	cmp    rax,rdi
   14001b011:	jae    0x14001b022
   14001b013:	call   0x14001583c
   14001b018:	mov    DWORD PTR [rax],0xc
   14001b01e:	xor    eax,eax
   14001b020:	jmp    0x14001b07f
   14001b022:	imul   rdi,rcx
   14001b026:	mov    eax,0x1
   14001b02b:	test   rdi,rdi
   14001b02e:	cmove  rdi,rax
   14001b032:	xor    eax,eax
   14001b034:	cmp    rdi,0xffffffffffffffe0
   14001b038:	ja     0x14001b052
   14001b03a:	mov    rcx,QWORD PTR [rip+0x3a9ff]        # 0x140055a40
   14001b041:	lea    edx,[rax+0x8]
   14001b044:	mov    r8,rdi
   14001b047:	call   QWORD PTR [rip+0x14203]        # 0x14002f250
   14001b04d:	test   rax,rax
   14001b050:	jne    0x14001b07f
   14001b052:	cmp    DWORD PTR [rip+0x3a9f7],0x0        # 0x140055a50
   14001b059:	je     0x14001b074
   14001b05b:	mov    rcx,rdi
   14001b05e:	call   0x14001c174
   14001b063:	test   eax,eax
   14001b065:	jne    0x14001b032
   14001b067:	test   rbx,rbx
   14001b06a:	je     0x14001b01e
   14001b06c:	mov    DWORD PTR [rbx],0xc
   14001b072:	jmp    0x14001b01e
   14001b074:	test   rbx,rbx
   14001b077:	je     0x14001b07f
   14001b079:	mov    DWORD PTR [rbx],0xc
   14001b07f:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b084:	add    rsp,0x20
   14001b088:	pop    rdi
   14001b089:	ret    
   14001b08a:	int3   
   14001b08b:	int3   
   14001b08c:	mov    QWORD PTR [rsp+0x8],rbx
   14001b091:	mov    QWORD PTR [rsp+0x10],rbp
   14001b096:	mov    QWORD PTR [rsp+0x18],rsi
   14001b09b:	push   rdi
   14001b09c:	sub    rsp,0x20
   14001b0a0:	xor    edi,edi
   14001b0a2:	mov    rsi,rdx
   14001b0a5:	mov    rbx,rcx
   14001b0a8:	test   rcx,rcx
   14001b0ab:	jne    0x14001b0c5
   14001b0ad:	call   0x14001583c
   14001b0b2:	mov    ebx,0x16
   14001b0b7:	mov    DWORD PTR [rax],ebx
   14001b0b9:	call   0x140019f74
   14001b0be:	mov    eax,ebx
   14001b0c0:	jmp    0x14001b347
   14001b0c5:	mov    edx,0xff
   14001b0ca:	mov    r8d,0x24
   14001b0d0:	call   0x140012fb0
   14001b0d5:	test   rsi,rsi
   14001b0d8:	je     0x14001b0ad
   14001b0da:	mov    r9,QWORD PTR [rsi]
   14001b0dd:	cmp    r9,0xffffffffffff5740
   14001b0e4:	jge    0x14001b0f4
   14001b0e6:	call   0x14001583c
   14001b0eb:	mov    ebx,0x16
   14001b0f0:	mov    DWORD PTR [rax],ebx
   14001b0f2:	jmp    0x14001b0be
   14001b0f4:	movabs rax,0x7934126cf
   14001b0fe:	cmp    r9,rax
   14001b101:	jg     0x14001b0e6
   14001b103:	mov    r11d,0x51eb851f
   14001b109:	movabs rax,0x883148f5cb1270b9
   14001b113:	imul   r9
   14001b116:	lea    r8,[r9+rdx*1]
   14001b11a:	sar    r8,0x18
   14001b11e:	mov    rax,r8
   14001b121:	shr    rax,0x3f
   14001b125:	add    r8,rax
   14001b128:	mov    eax,r11d
   14001b12b:	add    r8d,0x46
   14001b12f:	lea    ecx,[r8+0x12b]
   14001b136:	lea    r10d,[r8-0x1]
   14001b13a:	imul   ecx
   14001b13c:	mov    ecx,edx
   14001b13e:	sar    ecx,0x7
   14001b141:	mov    eax,ecx
   14001b143:	shr    eax,0x1f
   14001b146:	add    ecx,eax
   14001b148:	mov    eax,r11d
   14001b14b:	imul   r10d
   14001b14e:	sar    edx,0x5
   14001b151:	mov    eax,edx
   14001b153:	shr    eax,0x1f
   14001b156:	add    edx,eax
   14001b158:	mov    eax,r10d
   14001b15b:	sub    ecx,edx
   14001b15d:	cdq    
   14001b15e:	and    edx,0x3
   14001b161:	add    eax,edx
   14001b163:	sar    eax,0x2
   14001b166:	lea    ecx,[rcx+rax*1-0x11]
   14001b16a:	lea    eax,[r8-0x46]
   14001b16e:	movsxd rdx,ecx
   14001b171:	movsxd rcx,eax
   14001b174:	imul   rcx,rcx,0xfffffffffffffe93
   14001b17b:	sub    rcx,rdx
   14001b17e:	imul   rcx,rcx,0x15180
   14001b185:	add    r9,rcx
   14001b188:	jns    0x14001b1f2
   14001b18a:	mov    eax,r10d
   14001b18d:	add    r9,0x1e13380
   14001b194:	mov    r8d,r10d
   14001b197:	and    eax,0x80000003
   14001b19c:	mov    r10d,0x1
   14001b1a2:	jge    0x14001b1ad
   14001b1a4:	sub    eax,r10d
   14001b1a7:	or     eax,0xfffffffc
   14001b1aa:	add    eax,r10d
   14001b1ad:	test   eax,eax
   14001b1af:	jne    0x14001b1c9
   14001b1b1:	mov    eax,r11d
   14001b1b4:	imul   r8d
   14001b1b7:	sar    edx,0x5
   14001b1ba:	mov    ecx,edx
   14001b1bc:	shr    ecx,0x1f
   14001b1bf:	add    edx,ecx
   14001b1c1:	imul   edx,edx,0x64
   14001b1c4:	cmp    r8d,edx
   14001b1c7:	jne    0x14001b1e9
   14001b1c9:	lea    ecx,[r8+0x76c]
   14001b1d0:	mov    eax,r11d
   14001b1d3:	imul   ecx
   14001b1d5:	sar    edx,0x7
   14001b1d8:	mov    eax,edx
   14001b1da:	shr    eax,0x1f
   14001b1dd:	add    edx,eax
   14001b1df:	imul   edx,edx,0x190
   14001b1e5:	cmp    ecx,edx
   14001b1e7:	jne    0x14001b24a
   14001b1e9:	add    r9,0x15180
   14001b1f0:	jmp    0x14001b247
   14001b1f2:	mov    eax,r8d
   14001b1f5:	mov    r10d,0x1
   14001b1fb:	and    eax,0x80000003
   14001b200:	jge    0x14001b20b
   14001b202:	sub    eax,r10d
   14001b205:	or     eax,0xfffffffc
   14001b208:	add    eax,r10d
   14001b20b:	test   eax,eax
   14001b20d:	jne    0x14001b227
   14001b20f:	mov    eax,r11d
   14001b212:	imul   r8d
   14001b215:	sar    edx,0x5
   14001b218:	mov    eax,edx
   14001b21a:	shr    eax,0x1f
   14001b21d:	add    edx,eax
   14001b21f:	imul   edx,edx,0x64
   14001b222:	cmp    r8d,edx
   14001b225:	jne    0x14001b247
   14001b227:	lea    ecx,[r8+0x76c]
   14001b22e:	mov    eax,r11d
   14001b231:	imul   ecx
   14001b233:	sar    edx,0x7
   14001b236:	mov    eax,edx
   14001b238:	shr    eax,0x1f
   14001b23b:	add    edx,eax
   14001b23d:	imul   edx,edx,0x190
   14001b243:	cmp    ecx,edx
   14001b245:	jne    0x14001b24a
   14001b247:	mov    edi,r10d
   14001b24a:	movabs rbp,0x1845c8a0ce512957
   14001b254:	mov    DWORD PTR [rbx+0x14],r8d
   14001b258:	lea    r8,[rip+0x256d1]        # 0x140040930
   14001b25f:	mov    rax,rbp
   14001b262:	imul   r9
   14001b265:	sar    rdx,0xd
   14001b269:	mov    rax,rdx
   14001b26c:	shr    rax,0x3f
   14001b270:	add    rdx,rax
   14001b273:	movsxd rax,edx
   14001b276:	mov    DWORD PTR [rbx+0x1c],edx
   14001b279:	mov    edx,r10d
   14001b27c:	imul   rax,rax,0xfffffffffffeae80
   14001b283:	add    r9,rax
   14001b286:	lea    rax,[rip+0x256db]        # 0x140040968
   14001b28d:	test   edi,edi
   14001b28f:	cmove  r8,rax
   14001b293:	mov    eax,DWORD PTR [rbx+0x1c]
   14001b296:	lea    rcx,[r8+0x4]
   14001b29a:	jmp    0x14001b2a3
   14001b29c:	add    edx,r10d
   14001b29f:	add    rcx,0x4
   14001b2a3:	cmp    DWORD PTR [rcx],eax
   14001b2a5:	jl     0x14001b29c
   14001b2a7:	sub    edx,r10d
   14001b2aa:	movsxd rcx,edx
   14001b2ad:	mov    DWORD PTR [rbx+0x10],edx
   14001b2b0:	sub    eax,DWORD PTR [r8+rcx*4]
   14001b2b4:	mov    DWORD PTR [rbx+0xc],eax
   14001b2b7:	mov    rax,rbp
   14001b2ba:	imul   QWORD PTR [rsi]
   14001b2bd:	and    DWORD PTR [rbx+0x20],0x0
   14001b2c1:	mov    rcx,rdx
   14001b2c4:	sar    rcx,0xd
   14001b2c8:	mov    rax,rcx
   14001b2cb:	shr    rax,0x3f
   14001b2cf:	add    rcx,rax
   14001b2d2:	mov    eax,0x92492493
   14001b2d7:	add    ecx,0x4
   14001b2da:	imul   ecx
   14001b2dc:	add    edx,ecx
   14001b2de:	sar    edx,0x2
   14001b2e1:	mov    eax,edx
   14001b2e3:	shr    eax,0x1f
   14001b2e6:	add    edx,eax
   14001b2e8:	movabs rax,0x48d159e26af37c05
   14001b2f2:	imul   edx,edx,0x7
   14001b2f5:	sub    ecx,edx
   14001b2f7:	imul   r9
   14001b2fa:	mov    DWORD PTR [rbx+0x18],ecx
   14001b2fd:	sar    rdx,0xa
   14001b301:	mov    rax,rdx
   14001b304:	shr    rax,0x3f
   14001b308:	add    rdx,rax
   14001b30b:	movsxd rax,edx
   14001b30e:	mov    DWORD PTR [rbx+0x8],edx
   14001b311:	imul   rax,rax,0xfffffffffffff1f0
   14001b318:	add    r9,rax
   14001b31b:	movabs rax,0x8888888888888889
   14001b325:	imul   r9
   14001b328:	add    rdx,r9
   14001b32b:	sar    rdx,0x5
   14001b32f:	mov    rax,rdx
   14001b332:	shr    rax,0x3f
   14001b336:	add    rdx,rax
   14001b339:	mov    DWORD PTR [rbx+0x4],edx
   14001b33c:	imul   edx,edx,0x3c
   14001b33f:	sub    r9d,edx
   14001b342:	xor    eax,eax
   14001b344:	mov    DWORD PTR [rbx],r9d
   14001b347:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b34c:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b351:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b356:	add    rsp,0x20
   14001b35a:	pop    rdi
   14001b35b:	ret    
   14001b35c:	sub    rsp,0x28
   14001b360:	test   rcx,rcx
   14001b363:	jne    0x14001b37c
   14001b365:	call   0x14001583c
   14001b36a:	mov    DWORD PTR [rax],0x16
   14001b370:	call   0x140019f74
   14001b375:	mov    eax,0x16
   14001b37a:	jmp    0x14001b386
   14001b37c:	mov    eax,DWORD PTR [rip+0x254f2]        # 0x140040874
   14001b382:	mov    DWORD PTR [rcx],eax
   14001b384:	xor    eax,eax
   14001b386:	add    rsp,0x28
   14001b38a:	ret    
   14001b38b:	int3   
   14001b38c:	sub    rsp,0x28
   14001b390:	test   rcx,rcx
   14001b393:	jne    0x14001b3ac
   14001b395:	call   0x14001583c
   14001b39a:	mov    DWORD PTR [rax],0x16
   14001b3a0:	call   0x140019f74
   14001b3a5:	mov    eax,0x16
   14001b3aa:	jmp    0x14001b3b6
   14001b3ac:	mov    eax,DWORD PTR [rip+0x254c6]        # 0x140040878
   14001b3b2:	mov    DWORD PTR [rcx],eax
   14001b3b4:	xor    eax,eax
   14001b3b6:	add    rsp,0x28
   14001b3ba:	ret    
   14001b3bb:	int3   
   14001b3bc:	sub    rsp,0x28
   14001b3c0:	test   rcx,rcx
   14001b3c3:	jne    0x14001b3dc
   14001b3c5:	call   0x14001583c
   14001b3ca:	mov    DWORD PTR [rax],0x16
   14001b3d0:	call   0x140019f74
   14001b3d5:	mov    eax,0x16
   14001b3da:	jmp    0x14001b3e6
   14001b3dc:	mov    eax,DWORD PTR [rip+0x2548e]        # 0x140040870
   14001b3e2:	mov    DWORD PTR [rcx],eax
   14001b3e4:	xor    eax,eax
   14001b3e6:	add    rsp,0x28
   14001b3ea:	ret    
   14001b3eb:	int3   
   14001b3ec:	lea    rax,[rip+0x25481]        # 0x140040874
   14001b3f3:	ret    
   14001b3f4:	lea    rax,[rip+0x2547d]        # 0x140040878
   14001b3fb:	ret    
   14001b3fc:	lea    rax,[rip+0x2546d]        # 0x140040870
   14001b403:	ret    
   14001b404:	lea    rax,[rip+0x254f5]        # 0x140040900
   14001b40b:	ret    
   14001b40c:	mov    rax,rsp
   14001b40f:	push   rbx
   14001b410:	push   rsi
   14001b411:	push   rdi
   14001b412:	push   r12
   14001b414:	push   r13
   14001b416:	push   r14
   14001b418:	push   r15
   14001b41a:	sub    rsp,0x50
   14001b41e:	xor    r14d,r14d
   14001b421:	mov    r13d,r14d
   14001b424:	mov    esi,r14d
   14001b427:	mov    DWORD PTR [rax+0x8],r14d
   14001b42b:	mov    DWORD PTR [rax+0x10],r14d
   14001b42f:	mov    DWORD PTR [rax+0x18],r14d
   14001b433:	lea    ecx,[r14+0x7]
   14001b437:	call   0x14001ccc8
   14001b43c:	nop
   14001b43d:	call   0x14001b404
   14001b442:	mov    r12,rax
   14001b445:	lea    rcx,[rsp+0x90]
   14001b44d:	call   0x14001b3bc
   14001b452:	test   eax,eax
   14001b454:	jne    0x14001b865
   14001b45a:	lea    rcx,[rsp+0x98]
   14001b462:	call   0x14001b35c
   14001b467:	test   eax,eax
   14001b469:	jne    0x14001b851
   14001b46f:	lea    rcx,[rsp+0xa0]
   14001b477:	call   0x14001b38c
   14001b47c:	test   eax,eax
   14001b47e:	jne    0x14001b83d
   14001b484:	call   0x1400276c0
   14001b489:	mov    ebx,eax
   14001b48b:	mov    DWORD PTR [rip+0x3a59a],r14d        # 0x140055a2c
   14001b492:	or     r15d,0xffffffff
   14001b496:	mov    DWORD PTR [rip+0x25483],r15d        # 0x140040920
   14001b49d:	mov    DWORD PTR [rip+0x2546c],r15d        # 0x140040910
   14001b4a4:	lea    rcx,[rip+0x163b5]        # 0x140031860
   14001b4ab:	call   0x1400137bc
   14001b4b0:	mov    rdi,rax
   14001b4b3:	mov    QWORD PTR [rsp+0x40],rax
   14001b4b8:	test   rax,rax
   14001b4bb:	je     0x14001b552
   14001b4c1:	cmp    BYTE PTR [rax],r14b
   14001b4c4:	je     0x14001b552
   14001b4ca:	mov    rcx,QWORD PTR [rip+0x3a55f]        # 0x140055a30
   14001b4d1:	test   rcx,rcx
   14001b4d4:	je     0x14001b4fa
   14001b4d6:	mov    rdx,rcx
   14001b4d9:	mov    rcx,rax
   14001b4dc:	call   0x140023f50
   14001b4e1:	test   eax,eax
   14001b4e3:	je     0x14001b6a1
   14001b4e9:	mov    rcx,QWORD PTR [rip+0x3a540]        # 0x140055a30
   14001b4f0:	test   rcx,rcx
   14001b4f3:	je     0x14001b4fa
   14001b4f5:	call   0x1400130a8
   14001b4fa:	mov    rcx,rdi
   14001b4fd:	call   0x14001dae0
   14001b502:	lea    rcx,[rax+0x1]
   14001b506:	call   0x140020c28
   14001b50b:	mov    QWORD PTR [rip+0x3a51e],rax        # 0x140055a30
   14001b512:	test   rax,rax
   14001b515:	je     0x14001b6a1
   14001b51b:	mov    rcx,rdi
   14001b51e:	call   0x14001dae0
   14001b523:	mov    r8,rdi
   14001b526:	lea    rdx,[rax+0x1]
   14001b52a:	mov    rcx,QWORD PTR [rip+0x3a4ff]        # 0x140055a30
   14001b531:	call   0x14001dc7c
   14001b536:	test   eax,eax
   14001b538:	je     0x14001b6a6
   14001b53e:	mov    QWORD PTR [rsp+0x20],r14
   14001b543:	xor    r9d,r9d
   14001b546:	xor    r8d,r8d
   14001b549:	xor    edx,edx
   14001b54b:	xor    ecx,ecx
   14001b54d:	call   0x140019ed0
   14001b552:	mov    rcx,QWORD PTR [rip+0x3a4d7]        # 0x140055a30
   14001b559:	test   rcx,rcx
   14001b55c:	je     0x14001b56a
   14001b55e:	call   0x1400130a8
   14001b563:	mov    QWORD PTR [rip+0x3a4c6],r14        # 0x140055a30
   14001b56a:	lea    rcx,[rip+0x3a40f]        # 0x140055980
   14001b571:	call   QWORD PTR [rip+0x13d41]        # 0x14002f2b8
   14001b577:	cmp    eax,0xffffffff
   14001b57a:	je     0x14001b6a1
   14001b580:	mov    DWORD PTR [rip+0x3a4a2],0x1        # 0x140055a2c
   14001b58a:	mov    ecx,DWORD PTR [rip+0x3a3f0]        # 0x140055980
   14001b590:	imul   ecx,ecx,0x3c
   14001b593:	mov    DWORD PTR [rsp+0x90],ecx
   14001b59a:	mov    edx,DWORD PTR [rip+0x3a434]        # 0x1400559d4
   14001b5a0:	cmp    WORD PTR [rip+0x3a41e],r14w        # 0x1400559c6
   14001b5a8:	je     0x14001b5b8
   14001b5aa:	mov    eax,edx
   14001b5ac:	imul   eax,eax,0x3c
   14001b5af:	add    ecx,eax
   14001b5b1:	mov    DWORD PTR [rsp+0x90],ecx
   14001b5b8:	cmp    WORD PTR [rip+0x3a45a],r14w        # 0x140055a1a
   14001b5c0:	je     0x14001b5e5
   14001b5c2:	mov    eax,DWORD PTR [rip+0x3a460]        # 0x140055a28
   14001b5c8:	test   eax,eax
   14001b5ca:	je     0x14001b5e5
   14001b5cc:	mov    DWORD PTR [rsp+0x98],0x1
   14001b5d7:	sub    eax,edx
   14001b5d9:	imul   eax,eax,0x3c
   14001b5dc:	mov    DWORD PTR [rsp+0xa0],eax
   14001b5e3:	jmp    0x14001b5f5
   14001b5e5:	mov    DWORD PTR [rsp+0x98],r14d
   14001b5ed:	mov    DWORD PTR [rsp+0xa0],r14d
   14001b5f5:	lea    rax,[rsp+0xa8]
   14001b5fd:	mov    QWORD PTR [rsp+0x38],rax
   14001b602:	mov    QWORD PTR [rsp+0x30],r14
   14001b607:	mov    esi,0x3f
   14001b60c:	mov    DWORD PTR [rsp+0x28],esi
   14001b610:	mov    rax,QWORD PTR [r12]
   14001b614:	mov    QWORD PTR [rsp+0x20],rax
   14001b619:	mov    r9d,r15d
   14001b61c:	lea    r8,[rip+0x3a361]        # 0x140055984
   14001b623:	xor    edx,edx
   14001b625:	mov    ecx,ebx
   14001b627:	call   QWORD PTR [rip+0x13c03]        # 0x14002f230
   14001b62d:	test   eax,eax
   14001b62f:	je     0x14001b645
   14001b631:	cmp    DWORD PTR [rsp+0xa8],r14d
   14001b639:	jne    0x14001b645
   14001b63b:	mov    rax,QWORD PTR [r12]
   14001b63f:	mov    BYTE PTR [rax+0x3f],r14b
   14001b643:	jmp    0x14001b64c
   14001b645:	mov    rax,QWORD PTR [r12]
   14001b649:	mov    BYTE PTR [rax],r14b
   14001b64c:	lea    rax,[rsp+0xa8]
   14001b654:	mov    QWORD PTR [rsp+0x38],rax
   14001b659:	mov    QWORD PTR [rsp+0x30],r14
   14001b65e:	mov    DWORD PTR [rsp+0x28],esi
   14001b662:	mov    rax,QWORD PTR [r12+0x8]
   14001b667:	mov    QWORD PTR [rsp+0x20],rax
   14001b66c:	mov    r9d,r15d
   14001b66f:	lea    r8,[rip+0x3a362]        # 0x1400559d8
   14001b676:	xor    edx,edx
   14001b678:	mov    ecx,ebx
   14001b67a:	call   QWORD PTR [rip+0x13bb0]        # 0x14002f230
   14001b680:	test   eax,eax
   14001b682:	je     0x14001b699
   14001b684:	cmp    DWORD PTR [rsp+0xa8],r14d
   14001b68c:	jne    0x14001b699
   14001b68e:	mov    rax,QWORD PTR [r12+0x8]
   14001b693:	mov    BYTE PTR [rax+0x3f],r14b
   14001b697:	jmp    0x14001b6a1
   14001b699:	mov    rax,QWORD PTR [r12+0x8]
   14001b69e:	mov    BYTE PTR [rax],r14b
   14001b6a1:	mov    esi,0x1
   14001b6a6:	mov    ebx,DWORD PTR [rsp+0x90]
   14001b6ad:	call   0x14001b3fc
   14001b6b2:	mov    DWORD PTR [rax],ebx
   14001b6b4:	mov    ebx,DWORD PTR [rsp+0x98]
   14001b6bb:	call   0x14001b3ec
   14001b6c0:	mov    DWORD PTR [rax],ebx
   14001b6c2:	mov    ebx,DWORD PTR [rsp+0xa0]
   14001b6c9:	call   0x14001b3f4
   14001b6ce:	mov    DWORD PTR [rax],ebx
   14001b6d0:	mov    ecx,0x7
   14001b6d5:	call   0x14001cbc8
   14001b6da:	test   esi,esi
   14001b6dc:	jne    0x14001b87a
   14001b6e2:	lea    r15d,[rsi+0x3]
   14001b6e6:	mov    r9d,r15d
   14001b6e9:	mov    r8,rdi
   14001b6ec:	lea    edx,[rsi+0x40]
   14001b6ef:	mov    rcx,QWORD PTR [r12]
   14001b6f3:	call   0x140027600
   14001b6f8:	test   eax,eax
   14001b6fa:	jne    0x14001b828
   14001b700:	add    rdi,r15
   14001b703:	cmp    BYTE PTR [rdi],0x2d
   14001b706:	jne    0x14001b70f
   14001b708:	lea    r13d,[rsi+0x1]
   14001b70c:	inc    rdi
   14001b70f:	mov    rcx,rdi
   14001b712:	call   0x14001309c
   14001b717:	mov    r11d,eax
   14001b71a:	imul   r11d,r11d,0xe10
   14001b721:	mov    DWORD PTR [rsp+0x90],r11d
   14001b729:	mov    bl,0x30
   14001b72b:	mov    sil,0x39
   14001b72e:	mov    al,BYTE PTR [rdi]
   14001b730:	cmp    al,0x2b
   14001b732:	je     0x14001b820
   14001b738:	cmp    al,bl
   14001b73a:	jl     0x14001b745
   14001b73c:	cmp    al,sil
   14001b73f:	jle    0x14001b820
   14001b745:	cmp    BYTE PTR [rdi],0x3a
   14001b748:	jne    0x14001b7ae
   14001b74a:	inc    rdi
   14001b74d:	mov    rcx,rdi
   14001b750:	call   0x14001309c
   14001b755:	imul   eax,eax,0x3c
   14001b758:	mov    r11d,DWORD PTR [rsp+0x90]
   14001b760:	add    r11d,eax
   14001b763:	mov    DWORD PTR [rsp+0x90],r11d
   14001b76b:	jmp    0x14001b775
   14001b76d:	cmp    al,sil
   14001b770:	jg     0x14001b77b
   14001b772:	inc    rdi
   14001b775:	mov    al,BYTE PTR [rdi]
   14001b777:	cmp    al,bl
   14001b779:	jge    0x14001b76d
   14001b77b:	cmp    BYTE PTR [rdi],0x3a
   14001b77e:	jne    0x14001b7ae
   14001b780:	inc    rdi
   14001b783:	mov    rcx,rdi
   14001b786:	call   0x14001309c
   14001b78b:	mov    r11d,DWORD PTR [rsp+0x90]
   14001b793:	add    r11d,eax
   14001b796:	mov    DWORD PTR [rsp+0x90],r11d
   14001b79e:	jmp    0x14001b7a8
   14001b7a0:	cmp    al,sil
   14001b7a3:	jg     0x14001b7ae
   14001b7a5:	inc    rdi
   14001b7a8:	mov    al,BYTE PTR [rdi]
   14001b7aa:	cmp    al,bl
   14001b7ac:	jge    0x14001b7a0
   14001b7ae:	test   r13d,r13d
   14001b7b1:	je     0x14001b7be
   14001b7b3:	neg    r11d
   14001b7b6:	mov    DWORD PTR [rsp+0x90],r11d
   14001b7be:	movsx  eax,BYTE PTR [rdi]
   14001b7c1:	mov    DWORD PTR [rsp+0x98],eax
   14001b7c8:	test   eax,eax
   14001b7ca:	je     0x14001b7fa
   14001b7cc:	mov    r9,r15
   14001b7cf:	mov    r8,rdi
   14001b7d2:	mov    edx,0x40
   14001b7d7:	mov    rcx,QWORD PTR [r12+0x8]
   14001b7dc:	call   0x140027600
   14001b7e1:	test   eax,eax
   14001b7e3:	je     0x14001b802
   14001b7e5:	mov    QWORD PTR [rsp+0x20],r14
   14001b7ea:	xor    r9d,r9d
   14001b7ed:	xor    r8d,r8d
   14001b7f0:	xor    edx,edx
   14001b7f2:	xor    ecx,ecx
   14001b7f4:	call   0x140019ed0
   14001b7f9:	int3   
   14001b7fa:	mov    rax,QWORD PTR [r12+0x8]
   14001b7ff:	mov    BYTE PTR [rax],r14b
   14001b802:	mov    ebx,DWORD PTR [rsp+0x90]
   14001b809:	call   0x14001b3fc
   14001b80e:	mov    DWORD PTR [rax],ebx
   14001b810:	mov    ebx,DWORD PTR [rsp+0x98]
   14001b817:	call   0x14001b3ec
   14001b81c:	mov    DWORD PTR [rax],ebx
   14001b81e:	jmp    0x14001b87a
   14001b820:	inc    rdi
   14001b823:	jmp    0x14001b72e
   14001b828:	mov    QWORD PTR [rsp+0x20],r14
   14001b82d:	xor    r9d,r9d
   14001b830:	xor    r8d,r8d
   14001b833:	xor    edx,edx
   14001b835:	xor    ecx,ecx
   14001b837:	call   0x140019ed0
   14001b83c:	nop
   14001b83d:	mov    QWORD PTR [rsp+0x20],r14
   14001b842:	xor    r9d,r9d
   14001b845:	xor    r8d,r8d
   14001b848:	xor    edx,edx
   14001b84a:	xor    ecx,ecx
   14001b84c:	call   0x140019ed0
   14001b851:	mov    QWORD PTR [rsp+0x20],r14
   14001b856:	xor    r9d,r9d
   14001b859:	xor    r8d,r8d
   14001b85c:	xor    edx,edx
   14001b85e:	xor    ecx,ecx
   14001b860:	call   0x140019ed0
   14001b865:	mov    QWORD PTR [rsp+0x20],r14
   14001b86a:	xor    r9d,r9d
   14001b86d:	xor    r8d,r8d
   14001b870:	xor    edx,edx
   14001b872:	xor    ecx,ecx
   14001b874:	call   0x140019ed0
   14001b879:	nop
   14001b87a:	add    rsp,0x50
   14001b87e:	pop    r15
   14001b880:	pop    r14
   14001b882:	pop    r13
   14001b884:	pop    r12
   14001b886:	pop    rdi
   14001b887:	pop    rsi
   14001b888:	pop    rbx
   14001b889:	ret    
   14001b88a:	int3   
   14001b88b:	int3   
   14001b88c:	mov    QWORD PTR [rsp+0x10],rbx
   14001b891:	mov    QWORD PTR [rsp+0x18],rbp
   14001b896:	push   rsi
   14001b897:	push   rdi
   14001b898:	push   r12
   14001b89a:	sub    rsp,0x30
   14001b89e:	and    DWORD PTR [rsp+0x50],0x0
   14001b8a3:	mov    ebx,r8d
   14001b8a6:	mov    r12d,ecx
   14001b8a9:	cmp    edx,0x1
   14001b8ac:	jne    0x14001ba1d
   14001b8b2:	mov    r11d,ebx
   14001b8b5:	and    r11d,0x80000003
   14001b8bc:	jge    0x14001b8c8
   14001b8be:	dec    r11d
   14001b8c1:	or     r11d,0xfffffffc
   14001b8c5:	inc    r11d
   14001b8c8:	mov    esi,0x51eb851f
   14001b8cd:	test   r11d,r11d
   14001b8d0:	jne    0x14001b8e7
   14001b8d2:	mov    eax,esi
   14001b8d4:	imul   ebx
   14001b8d6:	sar    edx,0x5
   14001b8d9:	mov    eax,edx
   14001b8db:	shr    eax,0x1f
   14001b8de:	add    edx,eax
   14001b8e0:	imul   edx,edx,0x64
   14001b8e3:	cmp    ebx,edx
   14001b8e5:	jne    0x14001b91a
   14001b8e7:	lea    ecx,[r8+0x76c]
   14001b8ee:	mov    eax,esi
   14001b8f0:	imul   ecx
   14001b8f2:	sar    edx,0x7
   14001b8f5:	mov    eax,edx
   14001b8f7:	shr    eax,0x1f
   14001b8fa:	add    edx,eax
   14001b8fc:	imul   edx,edx,0x190
   14001b902:	cmp    ecx,edx
   14001b904:	je     0x14001b91a
   14001b906:	lea    rdi,[rip+0xfffffffffffe46f3]        # 0x140000000
   14001b90d:	movsxd rbp,r9d
   14001b910:	mov    r10d,DWORD PTR [rdi+rbp*4+0x40964]
   14001b918:	jmp    0x14001b92c
   14001b91a:	lea    rdi,[rip+0xfffffffffffe46df]        # 0x140000000
   14001b921:	movsxd rbp,r9d
   14001b924:	mov    r10d,DWORD PTR [rdi+rbp*4+0x4092c]
   14001b92c:	dec    r8d
   14001b92f:	lea    ecx,[rbx+0x12b]
   14001b935:	mov    eax,esi
   14001b937:	inc    r10d
   14001b93a:	imul   ecx
   14001b93c:	mov    r9d,edx
   14001b93f:	sar    r9d,0x7
   14001b943:	mov    eax,r9d
   14001b946:	shr    eax,0x1f
   14001b949:	add    r9d,eax
   14001b94c:	mov    eax,esi
   14001b94e:	imul   r8d
   14001b951:	sar    edx,0x5
   14001b954:	mov    eax,edx
   14001b956:	shr    eax,0x1f
   14001b959:	add    edx,eax
   14001b95b:	mov    eax,r8d
   14001b95e:	sub    r9d,edx
   14001b961:	cdq    
   14001b962:	and    edx,0x3
   14001b965:	add    eax,edx
   14001b967:	sar    eax,0x2
   14001b96a:	lea    ecx,[r10+rax*1]
   14001b96e:	mov    eax,ebx
   14001b970:	add    ecx,r9d
   14001b973:	imul   eax,eax,0x16d
   14001b979:	lea    r8d,[rax+rcx*1-0x63db]
   14001b981:	mov    ecx,DWORD PTR [rsp+0x70]
   14001b985:	mov    eax,0x92492493
   14001b98a:	imul   r8d
   14001b98d:	add    edx,r8d
   14001b990:	sar    edx,0x2
   14001b993:	mov    eax,edx
   14001b995:	shr    eax,0x1f
   14001b998:	add    edx,eax
   14001b99a:	mov    eax,ecx
   14001b99c:	imul   edx,edx,0x7
   14001b99f:	imul   eax,eax,0x7
   14001b9a2:	sub    r8d,edx
   14001b9a5:	mov    edx,DWORD PTR [rsp+0x78]
   14001b9a9:	sub    eax,r8d
   14001b9ac:	add    eax,edx
   14001b9ae:	cmp    r8d,edx
   14001b9b1:	jg     0x14001b9ba
   14001b9b3:	lea    r10d,[r10+rax*1-0x7]
   14001b9b8:	jmp    0x14001b9bd
   14001b9ba:	add    r10d,eax
   14001b9bd:	cmp    ecx,0x5
   14001b9c0:	jne    0x14001ba98
   14001b9c6:	test   r11d,r11d
   14001b9c9:	jne    0x14001b9e0
   14001b9cb:	mov    eax,esi
   14001b9cd:	imul   ebx
   14001b9cf:	sar    edx,0x5
   14001b9d2:	mov    ecx,edx
   14001b9d4:	shr    ecx,0x1f
   14001b9d7:	add    edx,ecx
   14001b9d9:	imul   edx,edx,0x64
   14001b9dc:	cmp    ebx,edx
   14001b9de:	jne    0x14001ba07
   14001b9e0:	lea    ecx,[rbx+0x76c]
   14001b9e6:	mov    eax,esi
   14001b9e8:	imul   ecx
   14001b9ea:	sar    edx,0x7
   14001b9ed:	mov    eax,edx
   14001b9ef:	shr    eax,0x1f
   14001b9f2:	add    edx,eax
   14001b9f4:	imul   edx,edx,0x190
   14001b9fa:	cmp    ecx,edx
   14001b9fc:	je     0x14001ba07
   14001b9fe:	mov    eax,DWORD PTR [rdi+rbp*4+0x40968]
   14001ba05:	jmp    0x14001ba0e
   14001ba07:	mov    eax,DWORD PTR [rdi+rbp*4+0x40930]
   14001ba0e:	cmp    r10d,eax
   14001ba11:	jle    0x14001ba98
   14001ba17:	sub    r10d,0x7
   14001ba1b:	jmp    0x14001ba98
   14001ba1d:	mov    eax,ebx
   14001ba1f:	and    eax,0x80000003
   14001ba24:	jge    0x14001ba2d
   14001ba26:	dec    eax
   14001ba28:	or     eax,0xfffffffc
   14001ba2b:	inc    eax
   14001ba2d:	mov    esi,0x51eb851f
   14001ba32:	test   eax,eax
   14001ba34:	jne    0x14001ba4b
   14001ba36:	mov    eax,esi
   14001ba38:	imul   ebx
   14001ba3a:	sar    edx,0x5
   14001ba3d:	mov    eax,edx
   14001ba3f:	shr    eax,0x1f
   14001ba42:	add    edx,eax
   14001ba44:	imul   edx,edx,0x64
   14001ba47:	cmp    ebx,edx
   14001ba49:	jne    0x14001ba7e
   14001ba4b:	lea    ecx,[r8+0x76c]
   14001ba52:	mov    eax,esi
   14001ba54:	imul   ecx
   14001ba56:	sar    edx,0x7
   14001ba59:	mov    eax,edx
   14001ba5b:	shr    eax,0x1f
   14001ba5e:	add    edx,eax
   14001ba60:	imul   edx,edx,0x190
   14001ba66:	cmp    ecx,edx
   14001ba68:	je     0x14001ba7e
   14001ba6a:	lea    rdi,[rip+0xfffffffffffe458f]        # 0x140000000
   14001ba71:	movsxd rax,r9d
   14001ba74:	mov    r10d,DWORD PTR [rdi+rax*4+0x40964]
   14001ba7c:	jmp    0x14001ba90
   14001ba7e:	lea    rdi,[rip+0xfffffffffffe457b]        # 0x140000000
   14001ba85:	movsxd rax,r9d
   14001ba88:	mov    r10d,DWORD PTR [rdi+rax*4+0x4092c]
   14001ba90:	add    r10d,DWORD PTR [rsp+0x80]
   14001ba98:	mov    eax,DWORD PTR [rsp+0x88]
   14001ba9f:	imul   eax,eax,0x3c
   14001baa2:	add    eax,DWORD PTR [rsp+0x90]
   14001baa9:	imul   eax,eax,0x3c
   14001baac:	add    eax,DWORD PTR [rsp+0x98]
   14001bab3:	imul   eax,eax,0x3e8
   14001bab9:	add    eax,DWORD PTR [rsp+0xa0]
   14001bac0:	cmp    r12d,0x1
   14001bac4:	jne    0x14001baec
   14001bac6:	mov    DWORD PTR [rip+0x24e47],r10d        # 0x140040914
   14001bacd:	mov    DWORD PTR [rip+0x24e45],eax        # 0x140040918
   14001bad3:	mov    DWORD PTR [rip+0x24e37],ebx        # 0x140040910
   14001bad9:	mov    rbx,QWORD PTR [rsp+0x58]
   14001bade:	mov    rbp,QWORD PTR [rsp+0x60]
   14001bae3:	add    rsp,0x30
   14001bae7:	pop    r12
   14001bae9:	pop    rdi
   14001baea:	pop    rsi
   14001baeb:	ret    
   14001baec:	lea    rcx,[rsp+0x50]
   14001baf1:	mov    DWORD PTR [rip+0x24e2c],r10d        # 0x140040924
   14001baf8:	mov    DWORD PTR [rip+0x24e2a],eax        # 0x140040928
   14001bafe:	call   0x14001b38c
   14001bb03:	test   eax,eax
   14001bb05:	jne    0x14001bb4a
   14001bb07:	mov    ecx,DWORD PTR [rip+0x24e1b]        # 0x140040928
   14001bb0d:	mov    eax,DWORD PTR [rsp+0x50]
   14001bb11:	imul   eax,eax,0x3e8
   14001bb17:	add    ecx,eax
   14001bb19:	mov    eax,0x5265c00
   14001bb1e:	mov    DWORD PTR [rip+0x24e04],ecx        # 0x140040928
   14001bb24:	jns    0x14001bb30
   14001bb26:	add    ecx,eax
   14001bb28:	dec    DWORD PTR [rip+0x24df6]        # 0x140040924
   14001bb2e:	jmp    0x14001bb3c
   14001bb30:	cmp    ecx,eax
   14001bb32:	jl     0x14001bb42
   14001bb34:	sub    ecx,eax
   14001bb36:	inc    DWORD PTR [rip+0x24de8]        # 0x140040924
   14001bb3c:	mov    DWORD PTR [rip+0x24de6],ecx        # 0x140040928
   14001bb42:	mov    DWORD PTR [rip+0x24dd8],ebx        # 0x140040920
   14001bb48:	jmp    0x14001bad9
   14001bb4a:	and    QWORD PTR [rsp+0x20],0x0
   14001bb50:	xor    r9d,r9d
   14001bb53:	xor    r8d,r8d
   14001bb56:	xor    edx,edx
   14001bb58:	xor    ecx,ecx
   14001bb5a:	call   0x140019ed0
   14001bb5f:	int3   
   14001bb60:	mov    rax,rsp
   14001bb63:	mov    QWORD PTR [rax+0x8],rbx
   14001bb67:	mov    QWORD PTR [rax+0x18],rbp
   14001bb6b:	mov    QWORD PTR [rax+0x20],rsi
   14001bb6f:	push   rdi
   14001bb70:	push   r12
   14001bb72:	push   r13
   14001bb74:	sub    rsp,0x60
   14001bb78:	mov    rdi,rcx
   14001bb7b:	lea    rcx,[rax+0x10]
   14001bb7f:	xor    ebx,ebx
   14001bb81:	mov    DWORD PTR [rax+0x10],ebx
   14001bb84:	call   0x14001b35c
   14001bb89:	test   eax,eax
   14001bb8b:	jne    0x14001bdf4
   14001bb91:	cmp    DWORD PTR [rsp+0x88],ebx
   14001bb98:	jne    0x14001bbb6
   14001bb9a:	xor    eax,eax
   14001bb9c:	lea    r11,[rsp+0x60]
   14001bba1:	mov    rbx,QWORD PTR [r11+0x20]
   14001bba5:	mov    rbp,QWORD PTR [r11+0x30]
   14001bba9:	mov    rsi,QWORD PTR [r11+0x38]
   14001bbad:	mov    rsp,r11
   14001bbb0:	pop    r13
   14001bbb2:	pop    r12
   14001bbb4:	pop    rdi
   14001bbb5:	ret    
   14001bbb6:	mov    esi,DWORD PTR [rdi+0x14]
   14001bbb9:	mov    r13d,0x1
   14001bbbf:	cmp    esi,DWORD PTR [rip+0x24d4b]        # 0x140040910
   14001bbc5:	jne    0x14001bbd3
   14001bbc7:	cmp    esi,DWORD PTR [rip+0x24d53]        # 0x140040920
   14001bbcd:	je     0x14001bd74
   14001bbd3:	cmp    DWORD PTR [rip+0x39e53],ebx        # 0x140055a2c
   14001bbd9:	je     0x14001bcf1
   14001bbdf:	cmp    WORD PTR [rip+0x39e32],bx        # 0x140055a18
   14001bbe6:	movzx  ecx,WORD PTR [rip+0x39e37]        # 0x140055a24
   14001bbed:	movzx  eax,WORD PTR [rip+0x39e32]        # 0x140055a26
   14001bbf4:	movzx  edx,WORD PTR [rip+0x39e27]        # 0x140055a22
   14001bbfb:	movzx  r9d,WORD PTR [rip+0x39e17]        # 0x140055a1a
   14001bc03:	mov    DWORD PTR [rsp+0x50],eax
   14001bc07:	mov    DWORD PTR [rsp+0x48],ecx
   14001bc0b:	mov    DWORD PTR [rsp+0x40],edx
   14001bc0f:	mov    ecx,r13d
   14001bc12:	jne    0x14001bc44
   14001bc14:	movzx  r10d,WORD PTR [rip+0x39e04]        # 0x140055a20
   14001bc1c:	movzx  r11d,WORD PTR [rip+0x39df8]        # 0x140055a1c
   14001bc24:	movzx  r8d,WORD PTR [rip+0x39df2]        # 0x140055a1e
   14001bc2c:	mov    DWORD PTR [rsp+0x38],r10d
   14001bc31:	mov    DWORD PTR [rsp+0x30],ebx
   14001bc35:	mov    DWORD PTR [rsp+0x28],r11d
   14001bc3a:	mov    DWORD PTR [rsp+0x20],r8d
   14001bc3f:	mov    edx,r13d
   14001bc42:	jmp    0x14001bc68
   14001bc44:	movzx  r8d,WORD PTR [rip+0x39dd4]        # 0x140055a20
   14001bc4c:	movzx  r10d,WORD PTR [rip+0x39dca]        # 0x140055a1e
   14001bc54:	xor    edx,edx
   14001bc56:	mov    DWORD PTR [rsp+0x38],r8d
   14001bc5b:	mov    DWORD PTR [rsp+0x30],r10d
   14001bc60:	mov    DWORD PTR [rsp+0x28],ebx
   14001bc64:	mov    DWORD PTR [rsp+0x20],ebx
   14001bc68:	mov    r8d,esi
   14001bc6b:	call   0x14001b88c
   14001bc70:	movzx  ecx,WORD PTR [rip+0x39d59]        # 0x1400559d0
   14001bc77:	movzx  r8d,WORD PTR [rip+0x39d4d]        # 0x1400559cc
   14001bc7f:	movzx  eax,WORD PTR [rip+0x39d4c]        # 0x1400559d2
   14001bc86:	movzx  edx,WORD PTR [rip+0x39d41]        # 0x1400559ce
   14001bc8d:	movzx  r9d,WORD PTR [rip+0x39d31]        # 0x1400559c6
   14001bc95:	mov    DWORD PTR [rsp+0x50],eax
   14001bc99:	mov    DWORD PTR [rsp+0x48],ecx
   14001bc9d:	mov    DWORD PTR [rsp+0x40],edx
   14001bca1:	xor    ecx,ecx
   14001bca3:	cmp    WORD PTR [rip+0x39d1a],bx        # 0x1400559c4
   14001bcaa:	mov    DWORD PTR [rsp+0x38],r8d
   14001bcaf:	mov    r8d,DWORD PTR [rdi+0x14]
   14001bcb3:	jne    0x14001bcd8
   14001bcb5:	movzx  r10d,WORD PTR [rip+0x39d0b]        # 0x1400559c8
   14001bcbd:	movzx  r11d,WORD PTR [rip+0x39d05]        # 0x1400559ca
   14001bcc5:	mov    DWORD PTR [rsp+0x30],ebx
   14001bcc9:	mov    DWORD PTR [rsp+0x28],r10d
   14001bcce:	mov    DWORD PTR [rsp+0x20],r11d
   14001bcd3:	jmp    0x14001bd6c
   14001bcd8:	movzx  r10d,WORD PTR [rip+0x39cea]        # 0x1400559ca
   14001bce0:	xor    edx,edx
   14001bce2:	mov    DWORD PTR [rsp+0x30],r10d
   14001bce7:	mov    DWORD PTR [rsp+0x28],ebx
   14001bceb:	mov    DWORD PTR [rsp+0x20],ebx
   14001bcef:	jmp    0x14001bd6f
   14001bcf1:	mov    eax,0x2
   14001bcf6:	mov    r12d,r13d
   14001bcf9:	lea    ebp,[rax+0x9]
   14001bcfc:	lea    r9d,[rax+0x1]
   14001bd00:	cmp    esi,0x6b
   14001bd03:	jge    0x14001bd14
   14001bd05:	lea    r9d,[rax+0x2]
   14001bd09:	mov    eax,r13d
   14001bd0c:	lea    ebp,[r9+0x6]
   14001bd10:	lea    r12d,[r9+0x1]
   14001bd14:	mov    DWORD PTR [rsp+0x50],ebx
   14001bd18:	mov    DWORD PTR [rsp+0x48],ebx
   14001bd1c:	mov    DWORD PTR [rsp+0x40],ebx
   14001bd20:	mov    DWORD PTR [rsp+0x38],0x2
   14001bd28:	mov    DWORD PTR [rsp+0x30],ebx
   14001bd2c:	mov    r8d,esi
   14001bd2f:	mov    edx,r13d
   14001bd32:	mov    ecx,r13d
   14001bd35:	mov    DWORD PTR [rsp+0x28],ebx
   14001bd39:	mov    DWORD PTR [rsp+0x20],eax
   14001bd3d:	call   0x14001b88c
   14001bd42:	mov    r8d,DWORD PTR [rdi+0x14]
   14001bd46:	mov    DWORD PTR [rsp+0x50],ebx
   14001bd4a:	mov    DWORD PTR [rsp+0x48],ebx
   14001bd4e:	mov    DWORD PTR [rsp+0x40],ebx
   14001bd52:	mov    DWORD PTR [rsp+0x38],0x2
   14001bd5a:	mov    DWORD PTR [rsp+0x30],ebx
   14001bd5e:	mov    DWORD PTR [rsp+0x28],ebx
   14001bd62:	mov    DWORD PTR [rsp+0x20],r12d
   14001bd67:	mov    r9d,ebp
   14001bd6a:	xor    ecx,ecx
   14001bd6c:	mov    edx,r13d
   14001bd6f:	call   0x14001b88c
   14001bd74:	mov    edx,DWORD PTR [rip+0x24b9a]        # 0x140040914
   14001bd7a:	mov    r8d,DWORD PTR [rip+0x24ba3]        # 0x140040924
   14001bd81:	mov    ecx,DWORD PTR [rdi+0x1c]
   14001bd84:	cmp    edx,r8d
   14001bd87:	jge    0x14001bdab
   14001bd89:	cmp    ecx,edx
   14001bd8b:	jl     0x14001bb9a
   14001bd91:	cmp    ecx,r8d
   14001bd94:	jg     0x14001bb9a
   14001bd9a:	cmp    ecx,edx
   14001bd9c:	jle    0x14001bdc1
   14001bd9e:	cmp    ecx,r8d
   14001bda1:	jge    0x14001bdc1
   14001bda3:	mov    eax,r13d
   14001bda6:	jmp    0x14001bb9c
   14001bdab:	cmp    ecx,r8d
   14001bdae:	jl     0x14001bda3
   14001bdb0:	cmp    ecx,edx
   14001bdb2:	jg     0x14001bda3
   14001bdb4:	cmp    ecx,r8d
   14001bdb7:	jle    0x14001bdc1
   14001bdb9:	cmp    ecx,edx
   14001bdbb:	jl     0x14001bb9a
   14001bdc1:	mov    eax,DWORD PTR [rdi+0x8]
   14001bdc4:	imul   eax,eax,0x3c
   14001bdc7:	add    eax,DWORD PTR [rdi+0x4]
   14001bdca:	imul   eax,eax,0x3c
   14001bdcd:	add    eax,DWORD PTR [rdi]
   14001bdcf:	imul   eax,eax,0x3e8
   14001bdd5:	cmp    ecx,edx
   14001bdd7:	jne    0x14001bde9
   14001bdd9:	cmp    eax,DWORD PTR [rip+0x24b39]        # 0x140040918
   14001bddf:	setge  bl
   14001bde2:	mov    eax,ebx
   14001bde4:	jmp    0x14001bb9c
   14001bde9:	cmp    eax,DWORD PTR [rip+0x24b39]        # 0x140040928
   14001bdef:	setl   bl
   14001bdf2:	jmp    0x14001bde2
   14001bdf4:	xor    r9d,r9d
   14001bdf7:	xor    r8d,r8d
   14001bdfa:	xor    edx,edx
   14001bdfc:	xor    ecx,ecx
   14001bdfe:	mov    QWORD PTR [rsp+0x20],rbx
   14001be03:	call   0x140019ed0
   14001be08:	int3   
   14001be09:	int3   
   14001be0a:	int3   
   14001be0b:	int3   
   14001be0c:	sub    rsp,0x28
   14001be10:	cmp    DWORD PTR [rip+0x39c21],0x0        # 0x140055a38
   14001be17:	jne    0x14001be42
   14001be19:	mov    ecx,0x6
   14001be1e:	call   0x14001ccc8
   14001be23:	nop
   14001be24:	cmp    DWORD PTR [rip+0x39c0d],0x0        # 0x140055a38
   14001be2b:	jne    0x14001be38
   14001be2d:	call   0x14001b40c
   14001be32:	inc    DWORD PTR [rip+0x39c00]        # 0x140055a38
   14001be38:	mov    ecx,0x6
   14001be3d:	call   0x14001cbc8
   14001be42:	add    rsp,0x28
   14001be46:	ret    
   14001be47:	int3   
   14001be48:	rex push rbx
   14001be4a:	sub    rsp,0x20
   14001be4e:	mov    rbx,rcx
   14001be51:	mov    ecx,0x6
   14001be56:	call   0x14001ccc8
   14001be5b:	nop
   14001be5c:	mov    rcx,rbx
   14001be5f:	call   0x14001bb60
   14001be64:	mov    ebx,eax
   14001be66:	mov    ecx,0x6
   14001be6b:	call   0x14001cbc8
   14001be70:	mov    eax,ebx
   14001be72:	add    rsp,0x20
   14001be76:	pop    rbx
   14001be77:	ret    
   14001be78:	mov    QWORD PTR [rsp+0x8],rbx
   14001be7d:	mov    QWORD PTR [rsp+0x18],rsi
   14001be82:	mov    QWORD PTR [rsp+0x20],rdi
   14001be87:	push   rbp
   14001be88:	push   r12
   14001be8a:	push   r13
   14001be8c:	push   r14
   14001be8e:	push   r15
   14001be90:	mov    rbp,rsp
   14001be93:	sub    rsp,0x40
   14001be97:	mov    r15,rdx
   14001be9a:	mov    rdx,rcx
   14001be9d:	lea    rcx,[rbp-0x20]
   14001bea1:	mov    r13d,r9d
   14001bea4:	mov    r14,r8
   14001bea7:	call   0x140012690
   14001beac:	test   r14,r14
   14001beaf:	je     0x14001beb4
   14001beb1:	mov    QWORD PTR [r14],r15
   14001beb4:	test   r15,r15
   14001beb7:	jne    0x14001bed2
   14001beb9:	call   0x14001583c
   14001bebe:	mov    DWORD PTR [rax],0x16
   14001bec4:	call   0x140019f74
   14001bec9:	cmp    BYTE PTR [rbp-0x8],0x0
   14001becd:	jmp    0x14001c0b6
   14001bed2:	test   r13d,r13d
   14001bed5:	je     0x14001bee3
   14001bed7:	cmp    r13d,0x2
   14001bedb:	jl     0x14001beb9
   14001bedd:	cmp    r13d,0x24
   14001bee1:	jg     0x14001beb9
   14001bee3:	mov    r12b,BYTE PTR [r15]
   14001bee6:	mov    r8,QWORD PTR [rbp-0x20]
   14001beea:	xor    edi,edi
   14001beec:	lea    rbx,[r15+0x1]
   14001bef0:	cmp    DWORD PTR [r8+0x10c],0x1
   14001bef8:	jle    0x14001bf12
   14001befa:	lea    r8,[rbp-0x20]
   14001befe:	movzx  ecx,r12b
   14001bf02:	mov    edx,0x8
   14001bf07:	call   0x140022164
   14001bf0c:	mov    r8,QWORD PTR [rbp-0x20]
   14001bf10:	jmp    0x14001bf24
   14001bf12:	mov    rax,QWORD PTR [r8+0x140]
   14001bf19:	movzx  ecx,r12b
   14001bf1d:	movzx  eax,WORD PTR [rax+rcx*2]
   14001bf21:	and    eax,0x8
   14001bf24:	test   eax,eax
   14001bf26:	je     0x14001bf30
   14001bf28:	mov    r12b,BYTE PTR [rbx]
   14001bf2b:	inc    rbx
   14001bf2e:	jmp    0x14001bef0
   14001bf30:	mov    esi,DWORD PTR [rbp+0x50]
   14001bf33:	cmp    r12b,0x2d
   14001bf37:	jne    0x14001bf3e
   14001bf39:	or     esi,0x2
   14001bf3c:	jmp    0x14001bf44
   14001bf3e:	cmp    r12b,0x2b
   14001bf42:	jne    0x14001bf4a
   14001bf44:	mov    r12b,BYTE PTR [rbx]
   14001bf47:	inc    rbx
   14001bf4a:	test   r13d,r13d
   14001bf4d:	js     0x14001c0aa
   14001bf53:	cmp    r13d,0x1
   14001bf57:	je     0x14001c0aa
   14001bf5d:	cmp    r13d,0x24
   14001bf61:	jg     0x14001c0aa
   14001bf67:	test   r13d,r13d
   14001bf6a:	jne    0x14001bf94
   14001bf6c:	cmp    r12b,0x30
   14001bf70:	je     0x14001bf7a
   14001bf72:	mov    r13d,0xa
   14001bf78:	jmp    0x14001bfb2
   14001bf7a:	cmp    BYTE PTR [rbx],0x78
   14001bf7d:	je     0x14001bf8c
   14001bf7f:	cmp    BYTE PTR [rbx],0x58
   14001bf82:	je     0x14001bf8c
   14001bf84:	mov    r13d,0x8
   14001bf8a:	jmp    0x14001bfb2
   14001bf8c:	mov    r13d,0x10
   14001bf92:	jmp    0x14001bfa0
   14001bf94:	cmp    r13d,0x10
   14001bf98:	jne    0x14001bfb2
   14001bf9a:	cmp    r12b,0x30
   14001bf9e:	jne    0x14001bfb2
   14001bfa0:	cmp    BYTE PTR [rbx],0x78
   14001bfa3:	je     0x14001bfaa
   14001bfa5:	cmp    BYTE PTR [rbx],0x58
   14001bfa8:	jne    0x14001bfb2
   14001bfaa:	mov    r12b,BYTE PTR [rbx+0x1]
   14001bfae:	add    rbx,0x2
   14001bfb2:	mov    r10,QWORD PTR [r8+0x140]
   14001bfb9:	xor    edx,edx
   14001bfbb:	or     eax,0xffffffff
   14001bfbe:	div    r13d
   14001bfc1:	mov    r9d,eax
   14001bfc4:	movzx  ecx,r12b
   14001bfc8:	movzx  r8d,WORD PTR [r10+rcx*2]
   14001bfcd:	mov    ecx,r8d
   14001bfd0:	and    ecx,0x4
   14001bfd3:	je     0x14001bfde
   14001bfd5:	movsx  ecx,r12b
   14001bfd9:	sub    ecx,0x30
   14001bfdc:	jmp    0x14001bffa
   14001bfde:	and    r8d,0x103
   14001bfe5:	je     0x14001c015
   14001bfe7:	lea    eax,[r12-0x61]
   14001bfec:	movsx  ecx,r12b
   14001bff0:	cmp    al,0x19
   14001bff2:	ja     0x14001bff7
   14001bff4:	sub    ecx,0x20
   14001bff7:	add    ecx,0xffffffc9
   14001bffa:	cmp    ecx,r13d
   14001bffd:	jae    0x14001c015
   14001bfff:	or     esi,0x8
   14001c002:	cmp    edi,r9d
   14001c005:	jb     0x14001c029
   14001c007:	jne    0x14001c00d
   14001c009:	cmp    ecx,edx
   14001c00b:	jbe    0x14001c029
   14001c00d:	or     esi,0x4
   14001c010:	test   r14,r14
   14001c013:	jne    0x14001c02f
   14001c015:	dec    rbx
   14001c018:	test   sil,0x8
   14001c01c:	jne    0x14001c037
   14001c01e:	test   r14,r14
   14001c021:	cmovne rbx,r15
   14001c025:	xor    edi,edi
   14001c027:	jmp    0x14001c085
   14001c029:	imul   edi,r13d
   14001c02d:	add    edi,ecx
   14001c02f:	mov    r12b,BYTE PTR [rbx]
   14001c032:	inc    rbx
   14001c035:	jmp    0x14001bfc4
   14001c037:	mov    r12d,0x7fffffff
   14001c03d:	test   sil,0x4
   14001c041:	jne    0x14001c061
   14001c043:	test   sil,0x1
   14001c047:	jne    0x14001c085
   14001c049:	mov    eax,esi
   14001c04b:	and    eax,0x2
   14001c04e:	je     0x14001c058
   14001c050:	cmp    edi,0x80000000
   14001c056:	ja     0x14001c061
   14001c058:	test   eax,eax
   14001c05a:	jne    0x14001c085
   14001c05c:	cmp    edi,r12d
   14001c05f:	jbe    0x14001c085
   14001c061:	call   0x14001583c
   14001c066:	mov    DWORD PTR [rax],0x22
   14001c06c:	test   sil,0x1
   14001c070:	je     0x14001c077
   14001c072:	or     edi,0xffffffff
   14001c075:	jmp    0x14001c085
   14001c077:	mov    al,sil
   14001c07a:	and    al,0x2
   14001c07c:	neg    al
   14001c07e:	sbb    edi,edi
   14001c080:	neg    edi
   14001c082:	add    edi,r12d
   14001c085:	test   r14,r14
   14001c088:	je     0x14001c08d
   14001c08a:	mov    QWORD PTR [r14],rbx
   14001c08d:	test   sil,0x2
   14001c091:	je     0x14001c095
   14001c093:	neg    edi
   14001c095:	cmp    BYTE PTR [rbp-0x8],0x0
   14001c099:	je     0x14001c0a6
   14001c09b:	mov    rcx,QWORD PTR [rbp-0x10]
   14001c09f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c0a6:	mov    eax,edi
   14001c0a8:	jmp    0x14001c0c5
   14001c0aa:	test   r14,r14
   14001c0ad:	je     0x14001c0b2
   14001c0af:	mov    QWORD PTR [r14],r15
   14001c0b2:	cmp    BYTE PTR [rbp-0x8],dil
   14001c0b6:	je     0x14001c0c3
   14001c0b8:	mov    rax,QWORD PTR [rbp-0x10]
   14001c0bc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001c0c3:	xor    eax,eax
   14001c0c5:	lea    r11,[rsp+0x40]
   14001c0ca:	mov    rbx,QWORD PTR [r11+0x30]
   14001c0ce:	mov    rsi,QWORD PTR [r11+0x40]
   14001c0d2:	mov    rdi,QWORD PTR [r11+0x48]
   14001c0d6:	mov    rsp,r11
   14001c0d9:	pop    r15
   14001c0db:	pop    r14
   14001c0dd:	pop    r13
   14001c0df:	pop    r12
   14001c0e1:	pop    rbp
   14001c0e2:	ret    
   14001c0e3:	int3   
   14001c0e4:	sub    rsp,0x38
   14001c0e8:	xor    eax,eax
   14001c0ea:	mov    r9d,r8d
   14001c0ed:	mov    r8,rdx
   14001c0f0:	cmp    DWORD PTR [rip+0x3a21e],eax        # 0x140056314
   14001c0f6:	mov    DWORD PTR [rsp+0x20],eax
   14001c0fa:	mov    rdx,rcx
   14001c0fd:	jne    0x14001c108
   14001c0ff:	lea    rcx,[rip+0x24752]        # 0x140040858
   14001c106:	jmp    0x14001c10a
   14001c108:	xor    ecx,ecx
   14001c10a:	call   0x14001be78
   14001c10f:	add    rsp,0x38
   14001c113:	ret    
   14001c114:	sub    rsp,0x28
   14001c118:	xor    r8d,r8d
   14001c11b:	mov    edx,0x1000
   14001c120:	xor    ecx,ecx
   14001c122:	mov    DWORD PTR [rsp+0x30],0x2
   14001c12a:	call   QWORD PTR [rip+0x130c0]        # 0x14002f1f0
   14001c130:	mov    QWORD PTR [rip+0x39909],rax        # 0x140055a40
   14001c137:	test   rax,rax
   14001c13a:	je     0x14001c165
   14001c13c:	call   QWORD PTR [rip+0x13236]        # 0x14002f378
   14001c142:	cmp    al,0x6
   14001c144:	jae    0x14001c160
   14001c146:	mov    rcx,QWORD PTR [rip+0x398f3]        # 0x140055a40
   14001c14d:	lea    r8,[rsp+0x30]
   14001c152:	mov    r9d,0x4
   14001c158:	xor    edx,edx
   14001c15a:	call   QWORD PTR [rip+0x13210]        # 0x14002f370
   14001c160:	mov    eax,0x1
   14001c165:	add    rsp,0x28
   14001c169:	ret    
   14001c16a:	int3   
   14001c16b:	int3   
   14001c16c:	mov    QWORD PTR [rip+0x398d5],rcx        # 0x140055a48
   14001c173:	ret    
   14001c174:	rex push rbx
   14001c176:	sub    rsp,0x20
   14001c17a:	mov    rbx,rcx
   14001c17d:	mov    rcx,QWORD PTR [rip+0x398c4]        # 0x140055a48
   14001c184:	call   QWORD PTR [rip+0x130de]        # 0x14002f268
   14001c18a:	test   rax,rax
   14001c18d:	je     0x14001c19f
   14001c18f:	mov    rcx,rbx
   14001c192:	call   rax
   14001c194:	test   eax,eax
   14001c196:	je     0x14001c19f
   14001c198:	mov    eax,0x1
   14001c19d:	jmp    0x14001c1a1
   14001c19f:	xor    eax,eax
   14001c1a1:	add    rsp,0x20
   14001c1a5:	pop    rbx
   14001c1a6:	ret    
   14001c1a7:	int3   
   14001c1a8:	lea    r8,[rip+0x15f81]        # 0x140032130
   14001c1af:	xor    eax,eax
   14001c1b1:	mov    rdx,r8
   14001c1b4:	cmp    ecx,DWORD PTR [rdx]
   14001c1b6:	je     0x14001c1c6
   14001c1b8:	inc    eax
   14001c1ba:	add    rdx,0x10
   14001c1be:	cmp    eax,0x16
   14001c1c1:	jb     0x14001c1b4
   14001c1c3:	xor    eax,eax
   14001c1c5:	ret    
   14001c1c6:	cdqe   
   14001c1c8:	add    rax,rax
   14001c1cb:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   14001c1d0:	ret    
   14001c1d1:	int3   
   14001c1d2:	int3   
   14001c1d3:	int3   
   14001c1d4:	mov    QWORD PTR [rsp+0x10],rbx
   14001c1d9:	mov    QWORD PTR [rsp+0x18],rbp
   14001c1de:	mov    QWORD PTR [rsp+0x20],rsi
   14001c1e3:	push   rdi
   14001c1e4:	push   r12
   14001c1e6:	push   r13
   14001c1e8:	sub    rsp,0x250
   14001c1ef:	mov    rax,QWORD PTR [rip+0x2373a]        # 0x14003f930
   14001c1f6:	xor    rax,rsp
   14001c1f9:	mov    QWORD PTR [rsp+0x240],rax
   14001c201:	mov    edi,ecx
   14001c203:	call   0x14001c1a8
   14001c208:	xor    esi,esi
   14001c20a:	mov    rbx,rax
   14001c20d:	test   rax,rax
   14001c210:	je     0x14001c404
   14001c216:	lea    ecx,[rsi+0x3]
   14001c219:	call   0x140027900
   14001c21e:	cmp    eax,0x1
   14001c221:	je     0x14001c39c
   14001c227:	lea    ecx,[rsi+0x3]
   14001c22a:	call   0x140027900
   14001c22f:	test   eax,eax
   14001c231:	jne    0x14001c240
   14001c233:	cmp    DWORD PTR [rip+0x23ca6],0x1        # 0x14003fee0
   14001c23a:	je     0x14001c39c
   14001c240:	cmp    edi,0xfc
   14001c246:	je     0x14001c404
   14001c24c:	lea    rbp,[rip+0x3980d]        # 0x140055a60
   14001c253:	mov    r12d,0x314
   14001c259:	lea    r8,[rip+0x160c0]        # 0x140032320
   14001c260:	mov    rcx,rbp
   14001c263:	mov    edx,r12d
   14001c266:	call   0x140016c68
   14001c26b:	xor    ecx,ecx
   14001c26d:	test   eax,eax
   14001c26f:	jne    0x14001c389
   14001c275:	lea    r13,[rip+0x39816]        # 0x140055a92
   14001c27c:	mov    r8d,0x104
   14001c282:	mov    WORD PTR [rip+0x39a11],si        # 0x140055c9a
   14001c289:	mov    rdx,r13
   14001c28c:	call   QWORD PTR [rip+0x12de6]        # 0x14002f078
   14001c292:	lea    edi,[r12-0x19]
   14001c297:	test   eax,eax
   14001c299:	jne    0x14001c2c5
   14001c29b:	lea    r8,[rip+0x1604e]        # 0x1400322f0
   14001c2a2:	mov    edx,edi
   14001c2a4:	mov    rcx,r13
   14001c2a7:	call   0x140016c68
   14001c2ac:	test   eax,eax
   14001c2ae:	je     0x14001c2c5
   14001c2b0:	xor    r9d,r9d
   14001c2b3:	xor    r8d,r8d
   14001c2b6:	xor    edx,edx
   14001c2b8:	xor    ecx,ecx
   14001c2ba:	mov    QWORD PTR [rsp+0x20],rsi
   14001c2bf:	call   0x140019ed0
   14001c2c4:	int3   
   14001c2c5:	mov    rcx,r13
   14001c2c8:	call   0x1400192e4
   14001c2cd:	inc    rax
   14001c2d0:	cmp    rax,0x3c
   14001c2d4:	jbe    0x14001c31d
   14001c2d6:	mov    rcx,r13
   14001c2d9:	call   0x1400192e4
   14001c2de:	lea    r8,[rip+0x16003]        # 0x1400322e8
   14001c2e5:	mov    r9d,0x3
   14001c2eb:	lea    rcx,[rbp+rax*2-0x44]
   14001c2f0:	mov    rax,rcx
   14001c2f3:	sub    rax,r13
   14001c2f6:	sar    rax,1
   14001c2f9:	sub    rdi,rax
   14001c2fc:	mov    rdx,rdi
   14001c2ff:	call   0x140013da4
   14001c304:	test   eax,eax
   14001c306:	je     0x14001c31d
   14001c308:	xor    r9d,r9d
   14001c30b:	xor    r8d,r8d
   14001c30e:	xor    edx,edx
   14001c310:	xor    ecx,ecx
   14001c312:	mov    QWORD PTR [rsp+0x20],rsi
   14001c317:	call   0x140019ed0
   14001c31c:	int3   
   14001c31d:	lea    r8,[rip+0x15fb8]        # 0x1400322dc
   14001c324:	mov    rdx,r12
   14001c327:	mov    rcx,rbp
   14001c32a:	call   0x140017684
   14001c32f:	test   eax,eax
   14001c331:	jne    0x14001c374
   14001c333:	mov    r8,rbx
   14001c336:	mov    rdx,r12
   14001c339:	mov    rcx,rbp
   14001c33c:	call   0x140017684
   14001c341:	test   eax,eax
   14001c343:	jne    0x14001c35f
   14001c345:	lea    rdx,[rip+0x15f44]        # 0x140032290
   14001c34c:	mov    r8d,0x12010
   14001c352:	mov    rcx,rbp
   14001c355:	call   0x1400276f8
   14001c35a:	jmp    0x14001c404
   14001c35f:	xor    r9d,r9d
   14001c362:	xor    r8d,r8d
   14001c365:	xor    edx,edx
   14001c367:	xor    ecx,ecx
   14001c369:	mov    QWORD PTR [rsp+0x20],rsi
   14001c36e:	call   0x140019ed0
   14001c373:	int3   
   14001c374:	xor    r9d,r9d
   14001c377:	xor    r8d,r8d
   14001c37a:	xor    edx,edx
   14001c37c:	xor    ecx,ecx
   14001c37e:	mov    QWORD PTR [rsp+0x20],rsi
   14001c383:	call   0x140019ed0
   14001c388:	int3   
   14001c389:	xor    r9d,r9d
   14001c38c:	xor    r8d,r8d
   14001c38f:	xor    edx,edx
   14001c391:	mov    QWORD PTR [rsp+0x20],rsi
   14001c396:	call   0x140019ed0
   14001c39b:	int3   
   14001c39c:	mov    ecx,0xfffffff4
   14001c3a1:	call   QWORD PTR [rip+0x12e39]        # 0x14002f1e0
   14001c3a7:	mov    rdi,rax
   14001c3aa:	test   rax,rax
   14001c3ad:	je     0x14001c404
   14001c3af:	cmp    rax,0xffffffffffffffff
   14001c3b3:	je     0x14001c404
   14001c3b5:	mov    edx,esi
   14001c3b7:	lea    r8,[rsp+0x40]
   14001c3bc:	mov    cl,BYTE PTR [rbx]
   14001c3be:	mov    BYTE PTR [r8],cl
   14001c3c1:	cmp    WORD PTR [rbx],si
   14001c3c4:	je     0x14001c3d7
   14001c3c6:	inc    edx
   14001c3c8:	inc    r8
   14001c3cb:	add    rbx,0x2
   14001c3cf:	cmp    edx,0x1f4
   14001c3d5:	jb     0x14001c3bc
   14001c3d7:	lea    rcx,[rsp+0x40]
   14001c3dc:	mov    BYTE PTR [rsp+0x233],sil
   14001c3e4:	call   0x14001dae0
   14001c3e9:	lea    r9,[rsp+0x30]
   14001c3ee:	lea    rdx,[rsp+0x40]
   14001c3f3:	mov    rcx,rdi
   14001c3f6:	mov    r8,rax
   14001c3f9:	mov    QWORD PTR [rsp+0x20],rsi
   14001c3fe:	call   QWORD PTR [rip+0x12de4]        # 0x14002f1e8
   14001c404:	mov    rcx,QWORD PTR [rsp+0x240]
   14001c40c:	xor    rcx,rsp
   14001c40f:	call   0x140012670
   14001c414:	lea    r11,[rsp+0x250]
   14001c41c:	mov    rbx,QWORD PTR [r11+0x28]
   14001c420:	mov    rbp,QWORD PTR [r11+0x30]
   14001c424:	mov    rsi,QWORD PTR [r11+0x38]
   14001c428:	mov    rsp,r11
   14001c42b:	pop    r13
   14001c42d:	pop    r12
   14001c42f:	pop    rdi
   14001c430:	ret    
   14001c431:	int3   
   14001c432:	int3   
   14001c433:	int3   
   14001c434:	sub    rsp,0x28
   14001c438:	mov    ecx,0x3
   14001c43d:	call   0x140027900
   14001c442:	cmp    eax,0x1
   14001c445:	je     0x14001c45e
   14001c447:	mov    ecx,0x3
   14001c44c:	call   0x140027900
   14001c451:	test   eax,eax
   14001c453:	jne    0x14001c472
   14001c455:	cmp    DWORD PTR [rip+0x23a84],0x1        # 0x14003fee0
   14001c45c:	jne    0x14001c472
   14001c45e:	mov    ecx,0xfc
   14001c463:	call   0x14001c1d4
   14001c468:	mov    ecx,0xff
   14001c46d:	call   0x14001c1d4
   14001c472:	add    rsp,0x28
   14001c476:	ret    
   14001c477:	int3   
   14001c478:	mov    QWORD PTR [rsp+0x8],rbx
   14001c47d:	mov    QWORD PTR [rsp+0x10],rbp
   14001c482:	mov    QWORD PTR [rsp+0x18],rsi
   14001c487:	push   rdi
   14001c488:	sub    rsp,0x50
   14001c48c:	xor    ebp,ebp
   14001c48e:	mov    rsi,r8
   14001c491:	mov    rbx,rdx
   14001c494:	mov    rdi,rcx
   14001c497:	test   r8,r8
   14001c49a:	jne    0x14001c4a3
   14001c49c:	xor    eax,eax
   14001c49e:	jmp    0x14001c58b
   14001c4a3:	test   rcx,rcx
   14001c4a6:	jne    0x14001c4c2
   14001c4a8:	call   0x14001583c
   14001c4ad:	mov    DWORD PTR [rax],0x16
   14001c4b3:	call   0x140019f74
   14001c4b8:	mov    eax,0x7fffffff
   14001c4bd:	jmp    0x14001c58b
   14001c4c2:	test   rdx,rdx
   14001c4c5:	je     0x14001c4a8
   14001c4c7:	cmp    r8,0x7fffffff
   14001c4ce:	ja     0x14001c4a8
   14001c4d0:	lea    rcx,[rsp+0x30]
   14001c4d5:	mov    rdx,r9
   14001c4d8:	call   0x140012690
   14001c4dd:	mov    r11,QWORD PTR [rsp+0x30]
   14001c4e2:	mov    ecx,DWORD PTR [r11+0x10]
   14001c4e6:	test   ecx,ecx
   14001c4e8:	jne    0x14001c531
   14001c4ea:	sub    rdi,rbx
   14001c4ed:	movzx  eax,WORD PTR [rdi+rbx*1]
   14001c4f1:	cmp    ax,0x41
   14001c4f5:	jb     0x14001c501
   14001c4f7:	cmp    ax,0x5a
   14001c4fb:	ja     0x14001c501
   14001c4fd:	add    ax,0x20
   14001c501:	movzx  ecx,WORD PTR [rbx]
   14001c504:	cmp    cx,0x41
   14001c508:	jb     0x14001c514
   14001c50a:	cmp    cx,0x5a
   14001c50e:	ja     0x14001c514
   14001c510:	add    cx,0x20
   14001c514:	add    rbx,0x2
   14001c518:	dec    rsi
   14001c51b:	je     0x14001c527
   14001c51d:	test   ax,ax
   14001c520:	je     0x14001c527
   14001c522:	cmp    ax,cx
   14001c525:	je     0x14001c4ed
   14001c527:	movzx  ecx,cx
   14001c52a:	movzx  eax,ax
   14001c52d:	sub    eax,ecx
   14001c52f:	jmp    0x14001c578
   14001c531:	mov    r9d,esi
   14001c534:	mov    r8,rdi
   14001c537:	mov    edx,0x1001
   14001c53c:	mov    DWORD PTR [rsp+0x28],esi
   14001c540:	mov    QWORD PTR [rsp+0x20],rbx
   14001c545:	call   0x140027940
   14001c54a:	test   eax,eax
   14001c54c:	jne    0x14001c575
   14001c54e:	call   0x14001583c
   14001c553:	mov    DWORD PTR [rax],0x16
   14001c559:	cmp    BYTE PTR [rsp+0x48],bpl
   14001c55e:	je     0x14001c4b8
   14001c564:	mov    rax,QWORD PTR [rsp+0x40]
   14001c569:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001c570:	jmp    0x14001c4b8
   14001c575:	add    eax,0xfffffffe
   14001c578:	cmp    BYTE PTR [rsp+0x48],bpl
   14001c57d:	je     0x14001c58b
   14001c57f:	mov    rcx,QWORD PTR [rsp+0x40]
   14001c584:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c58b:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c590:	mov    rbp,QWORD PTR [rsp+0x68]
   14001c595:	mov    rsi,QWORD PTR [rsp+0x70]
   14001c59a:	add    rsp,0x50
   14001c59e:	pop    rdi
   14001c59f:	ret    
   14001c5a0:	sub    rsp,0x28
   14001c5a4:	xor    r9d,r9d
   14001c5a7:	mov    r10,rcx
   14001c5aa:	cmp    DWORD PTR [rip+0x39d63],r9d        # 0x140056314
   14001c5b1:	jne    0x14001c62b
   14001c5b3:	test   rcx,rcx
   14001c5b6:	jne    0x14001c5d2
   14001c5b8:	call   0x14001583c
   14001c5bd:	mov    DWORD PTR [rax],0x16
   14001c5c3:	call   0x140019f74
   14001c5c8:	mov    eax,0x7fffffff
   14001c5cd:	add    rsp,0x28
   14001c5d1:	ret    
   14001c5d2:	test   rdx,rdx
   14001c5d5:	je     0x14001c5b8
   14001c5d7:	cmp    r8,0x7fffffff
   14001c5de:	ja     0x14001c5b8
   14001c5e0:	sub    r10,rdx
   14001c5e3:	movzx  eax,WORD PTR [r10+rdx*1]
   14001c5e8:	cmp    ax,0x41
   14001c5ec:	jb     0x14001c5f8
   14001c5ee:	cmp    ax,0x5a
   14001c5f2:	ja     0x14001c5f8
   14001c5f4:	add    ax,0x20
   14001c5f8:	movzx  ecx,WORD PTR [rdx]
   14001c5fb:	cmp    cx,0x41
   14001c5ff:	jb     0x14001c60b
   14001c601:	cmp    cx,0x5a
   14001c605:	ja     0x14001c60b
   14001c607:	add    cx,0x20
   14001c60b:	add    rdx,0x2
   14001c60f:	dec    r8
   14001c612:	je     0x14001c61e
   14001c614:	test   ax,ax
   14001c617:	je     0x14001c61e
   14001c619:	cmp    ax,cx
   14001c61c:	je     0x14001c5e3
   14001c61e:	movzx  ecx,cx
   14001c621:	movzx  eax,ax
   14001c624:	sub    eax,ecx
   14001c626:	add    rsp,0x28
   14001c62a:	ret    
   14001c62b:	add    rsp,0x28
   14001c62f:	jmp    0x14001c478
   14001c634:	mov    QWORD PTR [rsp+0x10],rbx
   14001c639:	mov    QWORD PTR [rsp+0x18],rbp
   14001c63e:	push   rdi
   14001c63f:	sub    rsp,0x30
   14001c643:	and    QWORD PTR [rsp+0x40],0x0
   14001c649:	mov    rbx,QWORD PTR [rip+0x38d18]        # 0x140055368
   14001c650:	mov    rax,QWORD PTR [rbx]
   14001c653:	test   rax,rax
   14001c656:	je     0x14001c6cd
   14001c658:	or     ebp,0xffffffff
   14001c65b:	and    DWORD PTR [rsp+0x28],0x0
   14001c660:	and    QWORD PTR [rsp+0x20],0x0
   14001c666:	mov    r9d,ebp
   14001c669:	mov    r8,rax
   14001c66c:	xor    edx,edx
   14001c66e:	xor    ecx,ecx
   14001c670:	call   QWORD PTR [rip+0x12bfa]        # 0x14002f270
   14001c676:	movsxd rdi,eax
   14001c679:	test   eax,eax
   14001c67b:	je     0x14001c6f5
   14001c67d:	mov    rcx,rdi
   14001c680:	mov    edx,0x2
   14001c685:	call   0x140020ca8
   14001c68a:	mov    QWORD PTR [rsp+0x40],rax
   14001c68f:	test   rax,rax
   14001c692:	je     0x14001c6f5
   14001c694:	mov    r8,QWORD PTR [rbx]
   14001c697:	mov    r9d,ebp
   14001c69a:	xor    edx,edx
   14001c69c:	xor    ecx,ecx
   14001c69e:	mov    DWORD PTR [rsp+0x28],edi
   14001c6a2:	mov    QWORD PTR [rsp+0x20],rax
   14001c6a7:	call   QWORD PTR [rip+0x12bc3]        # 0x14002f270
   14001c6ad:	test   eax,eax
   14001c6af:	je     0x14001c6eb
   14001c6b1:	lea    rcx,[rsp+0x40]
   14001c6b6:	xor    edx,edx
   14001c6b8:	call   0x14002086c
   14001c6bd:	test   eax,eax
   14001c6bf:	js     0x14001c6df
   14001c6c1:	add    rbx,0x8
   14001c6c5:	mov    rax,QWORD PTR [rbx]
   14001c6c8:	test   rax,rax
   14001c6cb:	jne    0x14001c65b
   14001c6cd:	xor    eax,eax
   14001c6cf:	mov    rbx,QWORD PTR [rsp+0x48]
   14001c6d4:	mov    rbp,QWORD PTR [rsp+0x50]
   14001c6d9:	add    rsp,0x30
   14001c6dd:	pop    rdi
   14001c6de:	ret    
   14001c6df:	mov    rcx,QWORD PTR [rsp+0x40]
   14001c6e4:	test   rcx,rcx
   14001c6e7:	je     0x14001c6f5
   14001c6e9:	jmp    0x14001c6f0
   14001c6eb:	mov    rcx,QWORD PTR [rsp+0x40]
   14001c6f0:	call   0x1400130a8
   14001c6f5:	mov    eax,ebp
   14001c6f7:	jmp    0x14001c6cf
   14001c6f9:	int3   
   14001c6fa:	int3   
   14001c6fb:	int3   
   14001c6fc:	mov    rax,rsp
   14001c6ff:	mov    QWORD PTR [rax+0x8],rbx
   14001c703:	mov    QWORD PTR [rax+0x10],rbp
   14001c707:	mov    QWORD PTR [rax+0x18],rsi
   14001c70b:	mov    QWORD PTR [rax+0x20],rdi
   14001c70f:	push   r12
   14001c711:	sub    rsp,0x30
   14001c715:	mov    rbx,QWORD PTR [rip+0x38cbc]        # 0x1400553d8
   14001c71c:	xor    r12d,r12d
   14001c71f:	mov    edi,r12d
   14001c722:	test   rbx,rbx
   14001c725:	jne    0x14001c744
   14001c727:	or     eax,0xffffffff
   14001c72a:	jmp    0x14001c7e9
   14001c72f:	cmp    ax,0x3d
   14001c733:	je     0x14001c737
   14001c735:	inc    edi
   14001c737:	mov    rcx,rbx
   14001c73a:	call   0x1400192e4
   14001c73f:	lea    rbx,[rbx+rax*2+0x2]
   14001c744:	movzx  eax,WORD PTR [rbx]
   14001c747:	test   ax,ax
   14001c74a:	jne    0x14001c72f
   14001c74c:	lea    eax,[rdi+0x1]
   14001c74f:	mov    edx,0x8
   14001c754:	movsxd rcx,eax
   14001c757:	call   0x140020ca8
   14001c75c:	mov    rdi,rax
   14001c75f:	mov    QWORD PTR [rip+0x38c12],rax        # 0x140055378
   14001c766:	test   rax,rax
   14001c769:	je     0x14001c727
   14001c76b:	mov    rbx,QWORD PTR [rip+0x38c66]        # 0x1400553d8
   14001c772:	cmp    WORD PTR [rbx],r12w
   14001c776:	je     0x14001c7cb
   14001c778:	mov    rcx,rbx
   14001c77b:	call   0x1400192e4
   14001c780:	cmp    WORD PTR [rbx],0x3d
   14001c784:	lea    esi,[rax+0x1]
   14001c787:	je     0x14001c7b7
   14001c789:	movsxd rbp,esi
   14001c78c:	mov    edx,0x2
   14001c791:	mov    rcx,rbp
   14001c794:	call   0x140020ca8
   14001c799:	mov    QWORD PTR [rdi],rax
   14001c79c:	test   rax,rax
   14001c79f:	je     0x14001c819
   14001c7a1:	mov    r8,rbx
   14001c7a4:	mov    rdx,rbp
   14001c7a7:	mov    rcx,rax
   14001c7aa:	call   0x140016c68
   14001c7af:	test   eax,eax
   14001c7b1:	jne    0x14001c804
   14001c7b3:	add    rdi,0x8
   14001c7b7:	movsxd rax,esi
   14001c7ba:	lea    rbx,[rbx+rax*2]
   14001c7be:	cmp    WORD PTR [rbx],r12w
   14001c7c2:	jne    0x14001c778
   14001c7c4:	mov    rbx,QWORD PTR [rip+0x38c0d]        # 0x1400553d8
   14001c7cb:	mov    rcx,rbx
   14001c7ce:	call   0x1400130a8
   14001c7d3:	mov    QWORD PTR [rip+0x38bfe],r12        # 0x1400553d8
   14001c7da:	mov    QWORD PTR [rdi],r12
   14001c7dd:	mov    DWORD PTR [rip+0x3b05d],0x1        # 0x140057844
   14001c7e7:	xor    eax,eax
   14001c7e9:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c7ee:	mov    rbp,QWORD PTR [rsp+0x48]
   14001c7f3:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c7f8:	mov    rdi,QWORD PTR [rsp+0x58]
   14001c7fd:	add    rsp,0x30
   14001c801:	pop    r12
   14001c803:	ret    
   14001c804:	xor    r9d,r9d
   14001c807:	xor    r8d,r8d
   14001c80a:	xor    edx,edx
   14001c80c:	xor    ecx,ecx
   14001c80e:	mov    QWORD PTR [rsp+0x20],r12
   14001c813:	call   0x140019ed0
   14001c818:	int3   
   14001c819:	mov    rcx,QWORD PTR [rip+0x38b58]        # 0x140055378
   14001c820:	call   0x1400130a8
   14001c825:	mov    QWORD PTR [rip+0x38b4c],r12        # 0x140055378
   14001c82c:	jmp    0x14001c727
   14001c831:	int3   
   14001c832:	int3   
   14001c833:	int3   
   14001c834:	mov    QWORD PTR [rsp+0x8],rbx
   14001c839:	mov    QWORD PTR [rsp+0x10],rbp
   14001c83e:	mov    QWORD PTR [rsp+0x18],rsi
   14001c843:	push   rdi
   14001c844:	sub    rsp,0x20
   14001c848:	call   QWORD PTR [rip+0x12982]        # 0x14002f1d0
   14001c84e:	xor    ebx,ebx
   14001c850:	mov    rdi,rax
   14001c853:	test   rax,rax
   14001c856:	je     0x14001c8a4
   14001c858:	cmp    WORD PTR [rdi],bx
   14001c85b:	je     0x14001c86f
   14001c85d:	add    rax,0x2
   14001c861:	cmp    WORD PTR [rax],bx
   14001c864:	jne    0x14001c85d
   14001c866:	add    rax,0x2
   14001c86a:	cmp    WORD PTR [rax],bx
   14001c86d:	jne    0x14001c85d
   14001c86f:	sub    eax,edi
   14001c871:	add    eax,0x2
   14001c874:	movsxd rbp,eax
   14001c877:	mov    rcx,rbp
   14001c87a:	call   0x140020c28
   14001c87f:	mov    rsi,rax
   14001c882:	test   rax,rax
   14001c885:	je     0x14001c898
   14001c887:	mov    r8,rbp
   14001c88a:	mov    rdx,rdi
   14001c88d:	mov    rcx,rax
   14001c890:	call   0x140018e00
   14001c895:	mov    rbx,rsi
   14001c898:	mov    rcx,rdi
   14001c89b:	call   QWORD PTR [rip+0x12937]        # 0x14002f1d8
   14001c8a1:	mov    rax,rbx
   14001c8a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c8a9:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c8ae:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c8b3:	add    rsp,0x20
   14001c8b7:	pop    rdi
   14001c8b8:	ret    
   14001c8b9:	int3   
   14001c8ba:	int3   
   14001c8bb:	int3   
   14001c8bc:	mov    r11,rsp
   14001c8bf:	mov    QWORD PTR [r11+0x8],rbx
   14001c8c3:	mov    QWORD PTR [r11+0x18],rbp
   14001c8c7:	mov    QWORD PTR [r11+0x20],rsi
   14001c8cb:	mov    QWORD PTR [r11+0x10],rdx
   14001c8cf:	push   rdi
   14001c8d0:	push   r12
   14001c8d2:	push   r13
   14001c8d4:	push   r14
   14001c8d6:	push   r15
   14001c8d8:	sub    rsp,0x40
   14001c8dc:	mov    r15,QWORD PTR [r9+0x8]
   14001c8e0:	mov    r14,QWORD PTR [r9]
   14001c8e3:	mov    eax,DWORD PTR [rcx+0x4]
   14001c8e6:	mov    rdi,QWORD PTR [r9+0x38]
   14001c8ea:	sub    r14,r15
   14001c8ed:	mov    r12,r9
   14001c8f0:	mov    r13,rdx
   14001c8f3:	mov    rbp,rcx
   14001c8f6:	test   al,0x66
   14001c8f8:	jne    0x14001c9eb
   14001c8fe:	movsxd rsi,DWORD PTR [r9+0x48]
   14001c902:	mov    QWORD PTR [r11-0x38],rcx
   14001c906:	mov    QWORD PTR [r11-0x30],r8
   14001c90a:	mov    rax,rsi
   14001c90d:	cmp    esi,DWORD PTR [rdi]
   14001c90f:	jae    0x14001ca96
   14001c915:	add    rax,rax
   14001c918:	lea    rbx,[rdi+rax*8+0xc]
   14001c91d:	mov    eax,DWORD PTR [rbx-0x8]
   14001c920:	cmp    r14,rax
   14001c923:	jb     0x14001c9d1
   14001c929:	mov    eax,DWORD PTR [rbx-0x4]
   14001c92c:	cmp    r14,rax
   14001c92f:	jae    0x14001c9d1
   14001c935:	cmp    DWORD PTR [rbx+0x4],0x0
   14001c939:	je     0x14001c9d1
   14001c93f:	cmp    DWORD PTR [rbx],0x1
   14001c942:	je     0x14001c95d
   14001c944:	mov    eax,DWORD PTR [rbx]
   14001c946:	lea    rcx,[rsp+0x30]
   14001c94b:	mov    rdx,r13
   14001c94e:	add    rax,r15
   14001c951:	call   rax
   14001c953:	test   eax,eax
   14001c955:	js     0x14001c9e4
   14001c95b:	jle    0x14001c9d1
   14001c95d:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   14001c964:	jne    0x14001c98e
   14001c966:	cmp    QWORD PTR [rip+0x16762],0x0        # 0x1400330d0
   14001c96e:	je     0x14001c98e
   14001c970:	lea    rcx,[rip+0x16759]        # 0x1400330d0
   14001c977:	call   0x14001e270
   14001c97c:	test   eax,eax
   14001c97e:	je     0x14001c98e
   14001c980:	mov    edx,0x1
   14001c985:	mov    rcx,rbp
   14001c988:	call   QWORD PTR [rip+0x16742]        # 0x1400330d0
   14001c98e:	mov    ecx,DWORD PTR [rbx+0x4]
   14001c991:	mov    r8d,0x1
   14001c997:	mov    rdx,r13
   14001c99a:	add    rcx,r15
   14001c99d:	call   0x140022130
   14001c9a2:	mov    rax,QWORD PTR [r12+0x40]
   14001c9a7:	mov    edx,DWORD PTR [rbx+0x4]
   14001c9aa:	movsxd r9,DWORD PTR [rbp+0x0]
   14001c9ae:	mov    QWORD PTR [rsp+0x28],rax
   14001c9b3:	mov    rax,QWORD PTR [r12+0x28]
   14001c9b8:	add    rdx,r15
   14001c9bb:	mov    r8,rbp
   14001c9be:	mov    rcx,r13
   14001c9c1:	mov    QWORD PTR [rsp+0x20],rax
   14001c9c6:	call   QWORD PTR [rip+0x128ac]        # 0x14002f278
   14001c9cc:	call   0x140022160
   14001c9d1:	inc    esi
   14001c9d3:	add    rbx,0x10
   14001c9d7:	cmp    esi,DWORD PTR [rdi]
   14001c9d9:	jae    0x14001ca96
   14001c9df:	jmp    0x14001c91d
   14001c9e4:	xor    eax,eax
   14001c9e6:	jmp    0x14001ca9b
   14001c9eb:	mov    r8,QWORD PTR [r9+0x20]
   14001c9ef:	xor    ebp,ebp
   14001c9f1:	xor    r13d,r13d
   14001c9f4:	sub    r8,r15
   14001c9f7:	test   al,0x20
   14001c9f9:	je     0x14001ca36
   14001c9fb:	xor    edx,edx
   14001c9fd:	cmp    DWORD PTR [rdi],edx
   14001c9ff:	jbe    0x14001ca36
   14001ca01:	lea    rcx,[rdi+0x8]
   14001ca05:	mov    eax,DWORD PTR [rcx-0x4]
   14001ca08:	cmp    r8,rax
   14001ca0b:	jb     0x14001ca14
   14001ca0d:	mov    eax,DWORD PTR [rcx]
   14001ca0f:	cmp    r8,rax
   14001ca12:	jbe    0x14001ca20
   14001ca14:	inc    edx
   14001ca16:	add    rcx,0x10
   14001ca1a:	cmp    edx,DWORD PTR [rdi]
   14001ca1c:	jae    0x14001ca36
   14001ca1e:	jmp    0x14001ca05
   14001ca20:	mov    eax,edx
   14001ca22:	add    rax,rax
   14001ca25:	mov    ecx,DWORD PTR [rdi+rax*8+0x10]
   14001ca29:	test   ecx,ecx
   14001ca2b:	jne    0x14001ca33
   14001ca2d:	mov    ebp,DWORD PTR [rdi+rax*8+0xc]
   14001ca31:	jmp    0x14001ca36
   14001ca33:	mov    r13d,ecx
   14001ca36:	movsxd rsi,DWORD PTR [r9+0x48]
   14001ca3a:	mov    rbx,rsi
   14001ca3d:	cmp    esi,DWORD PTR [rdi]
   14001ca3f:	jae    0x14001ca96
   14001ca41:	inc    rbx
   14001ca44:	shl    rbx,0x4
   14001ca48:	add    rbx,rdi
   14001ca4b:	mov    eax,DWORD PTR [rbx-0xc]
   14001ca4e:	cmp    r14,rax
   14001ca51:	jb     0x14001ca8c
   14001ca53:	mov    eax,DWORD PTR [rbx-0x8]
   14001ca56:	cmp    r14,rax
   14001ca59:	jae    0x14001ca8c
   14001ca5b:	test   r13d,r13d
   14001ca5e:	je     0x14001ca65
   14001ca60:	cmp    r13d,DWORD PTR [rbx]
   14001ca63:	je     0x14001ca96
   14001ca65:	test   ebp,ebp
   14001ca67:	je     0x14001ca6e
   14001ca69:	cmp    ebp,DWORD PTR [rbx-0x4]
   14001ca6c:	je     0x14001ca96
   14001ca6e:	cmp    DWORD PTR [rbx],0x0
   14001ca71:	jne    0x14001ca8c
   14001ca73:	mov    rdx,QWORD PTR [rsp+0x78]
   14001ca78:	lea    eax,[rsi+0x1]
   14001ca7b:	mov    cl,0x1
   14001ca7d:	mov    DWORD PTR [r12+0x48],eax
   14001ca82:	mov    r8d,DWORD PTR [rbx-0x4]
   14001ca86:	add    r8,r15
   14001ca89:	call   r8
   14001ca8c:	inc    esi
   14001ca8e:	add    rbx,0x10
   14001ca92:	cmp    esi,DWORD PTR [rdi]
   14001ca94:	jb     0x14001ca4b
   14001ca96:	mov    eax,0x1
   14001ca9b:	lea    r11,[rsp+0x40]
   14001caa0:	mov    rbx,QWORD PTR [r11+0x30]
   14001caa4:	mov    rbp,QWORD PTR [r11+0x40]
   14001caa8:	mov    rsi,QWORD PTR [r11+0x48]
   14001caac:	mov    rsp,r11
   14001caaf:	pop    r15
   14001cab1:	pop    r14
   14001cab3:	pop    r13
   14001cab5:	pop    r12
   14001cab7:	pop    rdi
   14001cab8:	ret    
   14001cab9:	int3   
   14001caba:	int3   
   14001cabb:	int3   
   14001cabc:	mov    QWORD PTR [rsp+0x8],rbx
   14001cac1:	mov    QWORD PTR [rsp+0x10],rsi
   14001cac6:	mov    QWORD PTR [rsp+0x18],rdi
   14001cacb:	push   r12
   14001cacd:	sub    rsp,0x20
   14001cad1:	lea    r12,[rip+0x23ed8]        # 0x1400409b0
   14001cad8:	xor    esi,esi
   14001cada:	xor    ebx,ebx
   14001cadc:	mov    rdi,r12
   14001cadf:	cmp    DWORD PTR [rdi+0x8],0x1
   14001cae3:	jne    0x14001cb0b
   14001cae5:	movsxd rax,esi
   14001cae8:	mov    edx,0xfa0
   14001caed:	inc    esi
   14001caef:	lea    rcx,[rax+rax*4]
   14001caf3:	lea    rax,[rip+0x39596]        # 0x140056090
   14001cafa:	lea    rcx,[rax+rcx*8]
   14001cafe:	mov    QWORD PTR [rdi],rcx
   14001cb01:	call   QWORD PTR [rip+0x126c1]        # 0x14002f1c8
   14001cb07:	test   eax,eax
   14001cb09:	je     0x14001cb31
   14001cb0b:	inc    ebx
   14001cb0d:	add    rdi,0x10
   14001cb11:	cmp    ebx,0x24
   14001cb14:	jl     0x14001cadf
   14001cb16:	mov    eax,0x1
   14001cb1b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cb20:	mov    rsi,QWORD PTR [rsp+0x38]
   14001cb25:	mov    rdi,QWORD PTR [rsp+0x40]
   14001cb2a:	add    rsp,0x20
   14001cb2e:	pop    r12
   14001cb30:	ret    
   14001cb31:	movsxd rax,ebx
   14001cb34:	add    rax,rax
   14001cb37:	and    QWORD PTR [r12+rax*8],0x0
   14001cb3c:	xor    eax,eax
   14001cb3e:	jmp    0x14001cb1b
   14001cb40:	mov    QWORD PTR [rsp+0x8],rbx
   14001cb45:	mov    QWORD PTR [rsp+0x10],rbp
   14001cb4a:	mov    QWORD PTR [rsp+0x18],rsi
   14001cb4f:	push   rdi
   14001cb50:	sub    rsp,0x20
   14001cb54:	mov    edi,0x24
   14001cb59:	lea    rbx,[rip+0x23e50]        # 0x1400409b0
   14001cb60:	mov    esi,edi
   14001cb62:	mov    rbp,QWORD PTR [rbx]
   14001cb65:	test   rbp,rbp
   14001cb68:	je     0x14001cb85
   14001cb6a:	cmp    DWORD PTR [rbx+0x8],0x1
   14001cb6e:	je     0x14001cb85
   14001cb70:	mov    rcx,rbp
   14001cb73:	call   QWORD PTR [rip+0x12647]        # 0x14002f1c0
   14001cb79:	mov    rcx,rbp
   14001cb7c:	call   0x1400130a8
   14001cb81:	and    QWORD PTR [rbx],0x0
   14001cb85:	add    rbx,0x10
   14001cb89:	dec    rsi
   14001cb8c:	jne    0x14001cb62
   14001cb8e:	lea    rbx,[rip+0x23e23]        # 0x1400409b8
   14001cb95:	mov    rcx,QWORD PTR [rbx-0x8]
   14001cb99:	test   rcx,rcx
   14001cb9c:	je     0x14001cba9
   14001cb9e:	cmp    DWORD PTR [rbx],0x1
   14001cba1:	jne    0x14001cba9
   14001cba3:	call   QWORD PTR [rip+0x12617]        # 0x14002f1c0
   14001cba9:	add    rbx,0x10
   14001cbad:	dec    rdi
   14001cbb0:	jne    0x14001cb95
   14001cbb2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cbb7:	mov    rbp,QWORD PTR [rsp+0x38]
   14001cbbc:	mov    rsi,QWORD PTR [rsp+0x40]
   14001cbc1:	add    rsp,0x20
   14001cbc5:	pop    rdi
   14001cbc6:	ret    
   14001cbc7:	int3   
   14001cbc8:	movsxd rcx,ecx
   14001cbcb:	lea    rax,[rip+0x23dde]        # 0x1400409b0
   14001cbd2:	add    rcx,rcx
   14001cbd5:	mov    rcx,QWORD PTR [rax+rcx*8]
   14001cbd9:	rex.W jmp QWORD PTR [rip+0x126a8]        # 0x14002f288
   14001cbe0:	mov    QWORD PTR [rsp+0x8],rbx
   14001cbe5:	mov    QWORD PTR [rsp+0x10],rsi
   14001cbea:	mov    QWORD PTR [rsp+0x18],rdi
   14001cbef:	push   r13
   14001cbf1:	sub    rsp,0x20
   14001cbf5:	movsxd rbx,ecx
   14001cbf8:	mov    esi,0x1
   14001cbfd:	cmp    QWORD PTR [rip+0x38e3b],0x0        # 0x140055a40
   14001cc05:	jne    0x14001cc1e
   14001cc07:	call   0x14001c434
   14001cc0c:	lea    ecx,[rsi+0x1d]
   14001cc0f:	call   0x14001c1d4
   14001cc14:	mov    ecx,0xff
   14001cc19:	call   0x140013908
   14001cc1e:	mov    rdi,rbx
   14001cc21:	add    rdi,rdi
   14001cc24:	lea    r13,[rip+0x23d85]        # 0x1400409b0
   14001cc2b:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14001cc31:	je     0x14001cc37
   14001cc33:	mov    eax,esi
   14001cc35:	jmp    0x14001ccb0
   14001cc37:	mov    ecx,0x28
   14001cc3c:	call   0x140020c28
   14001cc41:	mov    rbx,rax
   14001cc44:	test   rax,rax
   14001cc47:	jne    0x14001cc58
   14001cc49:	call   0x14001583c
   14001cc4e:	mov    DWORD PTR [rax],0xc
   14001cc54:	xor    eax,eax
   14001cc56:	jmp    0x14001ccb0
   14001cc58:	mov    ecx,0xa
   14001cc5d:	call   0x14001ccc8
   14001cc62:	nop
   14001cc63:	mov    rcx,rbx
   14001cc66:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   14001cc6c:	jne    0x14001cc9b
   14001cc6e:	mov    edx,0xfa0
   14001cc73:	call   QWORD PTR [rip+0x1254f]        # 0x14002f1c8
   14001cc79:	test   eax,eax
   14001cc7b:	jne    0x14001cc94
   14001cc7d:	mov    rcx,rbx
   14001cc80:	call   0x1400130a8
   14001cc85:	call   0x14001583c
   14001cc8a:	mov    DWORD PTR [rax],0xc
   14001cc90:	xor    esi,esi
   14001cc92:	jmp    0x14001cca1
   14001cc94:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   14001cc99:	jmp    0x14001cca1
   14001cc9b:	call   0x1400130a8
   14001cca0:	nop
   14001cca1:	mov    rcx,QWORD PTR [rip+0x23da8]        # 0x140040a50
   14001cca8:	call   QWORD PTR [rip+0x125da]        # 0x14002f288
   14001ccae:	jmp    0x14001cc33
   14001ccb0:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ccb5:	mov    rsi,QWORD PTR [rsp+0x38]
   14001ccba:	mov    rdi,QWORD PTR [rsp+0x40]
   14001ccbf:	add    rsp,0x20
   14001ccc3:	pop    r13
   14001ccc5:	ret    
   14001ccc6:	int3   
   14001ccc7:	int3   
   14001ccc8:	mov    QWORD PTR [rsp+0x8],rbx
   14001cccd:	push   rdi
   14001ccce:	sub    rsp,0x20
   14001ccd2:	movsxd rbx,ecx
   14001ccd5:	lea    rdi,[rip+0x23cd4]        # 0x1400409b0
   14001ccdc:	add    rbx,rbx
   14001ccdf:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14001cce4:	jne    0x14001ccf7
   14001cce6:	call   0x14001cbe0
   14001cceb:	test   eax,eax
   14001cced:	jne    0x14001ccf7
   14001ccef:	lea    ecx,[rax+0x11]
   14001ccf2:	call   0x140013c64
   14001ccf7:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14001ccfb:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cd00:	add    rsp,0x20
   14001cd04:	pop    rdi
   14001cd05:	rex.W jmp QWORD PTR [rip+0x12574]        # 0x14002f280
   14001cd0c:	xor    r8d,r8d
   14001cd0f:	mov    eax,r8d
   14001cd12:	test   rdx,rdx
   14001cd15:	je     0x14001cd29
   14001cd17:	cmp    WORD PTR [rcx],r8w
   14001cd1b:	je     0x14001cd29
   14001cd1d:	inc    rax
   14001cd20:	add    rcx,0x2
   14001cd24:	cmp    rax,rdx
   14001cd27:	jb     0x14001cd17
   14001cd29:	repz ret 
   14001cd2b:	int3   
   14001cd2c:	mov    QWORD PTR [rsp+0x8],rbx
   14001cd31:	mov    QWORD PTR [rsp+0x10],rdi
   14001cd36:	push   r12
   14001cd38:	sub    rsp,0x20
   14001cd3c:	mov    rbx,rcx
   14001cd3f:	call   0x1400211a0
   14001cd44:	mov    ecx,eax
   14001cd46:	call   0x1400279e8
   14001cd4b:	test   eax,eax
   14001cd4d:	je     0x14001cdea
   14001cd53:	call   0x140014c3c
   14001cd58:	add    rax,0x30
   14001cd5c:	cmp    rbx,rax
   14001cd5f:	jne    0x14001cd65
   14001cd61:	xor    eax,eax
   14001cd63:	jmp    0x14001cd78
   14001cd65:	call   0x140014c3c
   14001cd6a:	add    rax,0x60
   14001cd6e:	cmp    rbx,rax
   14001cd71:	jne    0x14001cdea
   14001cd73:	mov    eax,0x1
   14001cd78:	inc    DWORD PTR [rip+0x38626]        # 0x1400553a4
   14001cd7e:	test   DWORD PTR [rbx+0x18],0x10c
   14001cd85:	jne    0x14001cdea
   14001cd87:	lea    r12,[rip+0x39532]        # 0x1400562c0
   14001cd8e:	movsxd rdi,eax
   14001cd91:	cmp    QWORD PTR [r12+rdi*8],0x0
   14001cd96:	jne    0x14001cdc3
   14001cd98:	mov    ecx,0x1000
   14001cd9d:	call   0x140020c28
   14001cda2:	mov    QWORD PTR [r12+rdi*8],rax
   14001cda6:	test   rax,rax
   14001cda9:	jne    0x14001cdc3
   14001cdab:	lea    rax,[rbx+0x20]
   14001cdaf:	mov    QWORD PTR [rbx+0x10],rax
   14001cdb3:	mov    QWORD PTR [rbx],rax
   14001cdb6:	mov    eax,0x2
   14001cdbb:	mov    DWORD PTR [rbx+0x24],eax
   14001cdbe:	mov    DWORD PTR [rbx+0x8],eax
   14001cdc1:	jmp    0x14001cddc
   14001cdc3:	mov    rcx,QWORD PTR [r12+rdi*8]
   14001cdc7:	mov    DWORD PTR [rbx+0x24],0x1000
   14001cdce:	mov    DWORD PTR [rbx+0x8],0x1000
   14001cdd5:	mov    QWORD PTR [rbx+0x10],rcx
   14001cdd9:	mov    QWORD PTR [rbx],rcx
   14001cddc:	or     DWORD PTR [rbx+0x18],0x1102
   14001cde3:	mov    eax,0x1
   14001cde8:	jmp    0x14001cdec
   14001cdea:	xor    eax,eax
   14001cdec:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cdf1:	mov    rdi,QWORD PTR [rsp+0x38]
   14001cdf6:	add    rsp,0x20
   14001cdfa:	pop    r12
   14001cdfc:	ret    
   14001cdfd:	int3   
   14001cdfe:	int3   
   14001cdff:	int3   
   14001ce00:	test   ecx,ecx
   14001ce02:	je     0x14001ce36
   14001ce04:	push   rbx
   14001ce05:	sub    rsp,0x20
   14001ce09:	test   DWORD PTR [rdx+0x18],0x1000
   14001ce10:	mov    rbx,rdx
   14001ce13:	je     0x14001ce31
   14001ce15:	mov    rcx,rdx
   14001ce18:	call   0x140021274
   14001ce1d:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14001ce24:	and    DWORD PTR [rbx+0x24],0x0
   14001ce28:	and    QWORD PTR [rbx],0x0
   14001ce2c:	and    QWORD PTR [rbx+0x10],0x0
   14001ce31:	add    rsp,0x20
   14001ce35:	pop    rbx
   14001ce36:	ret    
   14001ce37:	int3   
   14001ce38:	rex push rbx
   14001ce3a:	sub    rsp,0x20
   14001ce3e:	test   BYTE PTR [rdx+0x18],0x40
   14001ce42:	mov    rbx,r8
   14001ce45:	je     0x14001ce53
   14001ce47:	cmp    QWORD PTR [rdx+0x10],0x0
   14001ce4c:	jne    0x14001ce53
   14001ce4e:	inc    DWORD PTR [r8]
   14001ce51:	jmp    0x14001ce78
   14001ce53:	dec    DWORD PTR [rdx+0x8]
   14001ce56:	js     0x14001ce65
   14001ce58:	mov    rax,QWORD PTR [rdx]
   14001ce5b:	mov    BYTE PTR [rax],cl
   14001ce5d:	inc    QWORD PTR [rdx]
   14001ce60:	movzx  eax,cl
   14001ce63:	jmp    0x14001ce6d
   14001ce65:	movsx  ecx,cl
   14001ce68:	call   0x14001e4a4
   14001ce6d:	cmp    eax,0xffffffff
   14001ce70:	jne    0x14001ce76
   14001ce72:	or     DWORD PTR [rbx],eax
   14001ce74:	jmp    0x14001ce78
   14001ce76:	inc    DWORD PTR [rbx]
   14001ce78:	add    rsp,0x20
   14001ce7c:	pop    rbx
   14001ce7d:	ret    
   14001ce7e:	int3   
   14001ce7f:	int3   
   14001ce80:	mov    QWORD PTR [rsp+0x8],rbx
   14001ce85:	mov    QWORD PTR [rsp+0x10],rbp
   14001ce8a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ce8f:	push   rdi
   14001ce90:	push   r12
   14001ce92:	push   r13
   14001ce94:	sub    rsp,0x20
   14001ce98:	test   BYTE PTR [r8+0x18],0x40
   14001ce9d:	mov    rbx,QWORD PTR [rsp+0x60]
   14001cea2:	mov    rdi,r9
   14001cea5:	mov    r12d,DWORD PTR [rbx]
   14001cea8:	mov    rbp,r8
   14001ceab:	mov    esi,edx
   14001cead:	mov    r13,rcx
   14001ceb0:	je     0x14001cebe
   14001ceb2:	cmp    QWORD PTR [r8+0x10],0x0
   14001ceb7:	jne    0x14001cebe
   14001ceb9:	add    DWORD PTR [r9],edx
   14001cebc:	jmp    0x14001cefc
   14001cebe:	and    DWORD PTR [rbx],0x0
   14001cec1:	test   edx,edx
   14001cec3:	jle    0x14001cef9
   14001cec5:	mov    cl,BYTE PTR [r13+0x0]
   14001cec9:	mov    r8,rdi
   14001cecc:	mov    rdx,rbp
   14001cecf:	dec    esi
   14001ced1:	call   0x14001ce38
   14001ced6:	inc    r13
   14001ced9:	cmp    DWORD PTR [rdi],0xffffffff
   14001cedc:	jne    0x14001cef0
   14001cede:	cmp    DWORD PTR [rbx],0x2a
   14001cee1:	jne    0x14001cef4
   14001cee3:	mov    r8,rdi
   14001cee6:	mov    rdx,rbp
   14001cee9:	mov    cl,0x3f
   14001ceeb:	call   0x14001ce38
   14001cef0:	test   esi,esi
   14001cef2:	jg     0x14001cec5
   14001cef4:	cmp    DWORD PTR [rbx],0x0
   14001cef7:	jne    0x14001cefc
   14001cef9:	mov    DWORD PTR [rbx],r12d
   14001cefc:	mov    rbx,QWORD PTR [rsp+0x40]
   14001cf01:	mov    rbp,QWORD PTR [rsp+0x48]
   14001cf06:	mov    rsi,QWORD PTR [rsp+0x50]
   14001cf0b:	add    rsp,0x20
   14001cf0f:	pop    r13
   14001cf11:	pop    r12
   14001cf13:	pop    rdi
   14001cf14:	ret    
   14001cf15:	int3   
   14001cf16:	int3   
   14001cf17:	int3   
   14001cf18:	mov    QWORD PTR [rsp+0x18],rbx
   14001cf1d:	push   rbp
   14001cf1e:	push   rsi
   14001cf1f:	push   rdi
   14001cf20:	push   r12
   14001cf22:	push   r13
   14001cf24:	push   r14
   14001cf26:	push   r15
   14001cf28:	lea    rbp,[rsp-0x1d0]
   14001cf30:	sub    rsp,0x2d0
   14001cf37:	mov    rax,QWORD PTR [rip+0x229f2]        # 0x14003f930
   14001cf3e:	xor    rax,rsp
   14001cf41:	mov    QWORD PTR [rbp+0x1c8],rax
   14001cf48:	xor    eax,eax
   14001cf4a:	mov    rbx,rcx
   14001cf4d:	mov    QWORD PTR [rsp+0x70],rcx
   14001cf52:	mov    QWORD PTR [rsp+0x68],rdx
   14001cf57:	lea    rcx,[rbp-0x80]
   14001cf5b:	mov    rdx,r8
   14001cf5e:	mov    r14,r9
   14001cf61:	mov    DWORD PTR [rsp+0x64],eax
   14001cf65:	mov    r13d,eax
   14001cf68:	mov    DWORD PTR [rsp+0x58],eax
   14001cf6c:	mov    edi,eax
   14001cf6e:	mov    DWORD PTR [rsp+0x44],eax
   14001cf72:	mov    DWORD PTR [rsp+0x4c],eax
   14001cf76:	mov    DWORD PTR [rsp+0x5c],eax
   14001cf7a:	mov    DWORD PTR [rsp+0x54],eax
   14001cf7e:	call   0x140012690
   14001cf83:	call   0x14001583c
   14001cf88:	xor    r10d,r10d
   14001cf8b:	mov    QWORD PTR [rbp-0x60],rax
   14001cf8f:	test   rbx,rbx
   14001cf92:	jne    0x14001cfc0
   14001cf94:	call   0x14001583c
   14001cf99:	mov    DWORD PTR [rax],0x16
   14001cf9f:	call   0x140019f74
   14001cfa4:	xor    r11d,r11d
   14001cfa7:	cmp    BYTE PTR [rbp-0x68],r11b
   14001cfab:	je     0x14001cfb8
   14001cfad:	mov    rax,QWORD PTR [rbp-0x70]
   14001cfb1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001cfb8:	or     eax,0xffffffff
   14001cfbb:	jmp    0x14001d77a
   14001cfc0:	or     r15d,0xffffffff
   14001cfc4:	test   BYTE PTR [rbx+0x18],0x40
   14001cfc8:	lea    r9,[rip+0xfffffffffffe3031]        # 0x140000000
   14001cfcf:	jne    0x14001d07a
   14001cfd5:	mov    rcx,rbx
   14001cfd8:	call   0x1400211a0
   14001cfdd:	lea    rdx,[rip+0x23c7c]        # 0x140040c60
   14001cfe4:	cmp    eax,r15d
   14001cfe7:	je     0x14001d011
   14001cfe9:	cmp    eax,0xfffffffe
   14001cfec:	je     0x14001d011
   14001cfee:	movsxd r8,eax
   14001cff1:	lea    r9,[rip+0xfffffffffffe3008]        # 0x140000000
   14001cff8:	mov    rcx,r8
   14001cffb:	and    r8d,0x1f
   14001cfff:	sar    rcx,0x5
   14001d003:	imul   r8,r8,0x58
   14001d007:	add    r8,QWORD PTR [r9+rcx*8+0x56620]
   14001d00f:	jmp    0x14001d01b
   14001d011:	mov    r8,rdx
   14001d014:	lea    r9,[rip+0xfffffffffffe2fe5]        # 0x140000000
   14001d01b:	test   BYTE PTR [r8+0x38],0x7f
   14001d020:	jne    0x14001d04b
   14001d022:	cmp    eax,r15d
   14001d025:	je     0x14001d045
   14001d027:	cmp    eax,0xfffffffe
   14001d02a:	je     0x14001d045
   14001d02c:	movsxd rdx,eax
   14001d02f:	mov    rax,rdx
   14001d032:	and    edx,0x1f
   14001d035:	sar    rax,0x5
   14001d039:	imul   rdx,rdx,0x58
   14001d03d:	add    rdx,QWORD PTR [r9+rax*8+0x56620]
   14001d045:	test   BYTE PTR [rdx+0x38],0x80
   14001d049:	je     0x14001d077
   14001d04b:	call   0x14001583c
   14001d050:	mov    DWORD PTR [rax],0x16
   14001d056:	call   0x140019f74
   14001d05b:	xor    r11d,r11d
   14001d05e:	cmp    BYTE PTR [rbp-0x68],r11b
   14001d062:	je     0x14001d06f
   14001d064:	mov    rax,QWORD PTR [rbp-0x70]
   14001d068:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001d06f:	mov    eax,r15d
   14001d072:	jmp    0x14001d77a
   14001d077:	xor    r10d,r10d
   14001d07a:	mov    r8,QWORD PTR [rsp+0x68]
   14001d07f:	test   r8,r8
   14001d082:	je     0x14001d04b
   14001d084:	mov    r12b,BYTE PTR [r8]
   14001d087:	mov    esi,r10d
   14001d08a:	mov    DWORD PTR [rsp+0x40],r10d
   14001d08f:	mov    DWORD PTR [rsp+0x48],r10d
   14001d094:	mov    edx,r10d
   14001d097:	mov    QWORD PTR [rbp-0x50],r10
   14001d09b:	test   r12b,r12b
   14001d09e:	je     0x14001d767
   14001d0a4:	mov    rbx,QWORD PTR [rbp-0x48]
   14001d0a8:	mov    r11d,0x200
   14001d0ae:	inc    r8
   14001d0b1:	mov    QWORD PTR [rsp+0x68],r8
   14001d0b6:	test   esi,esi
   14001d0b8:	js     0x14001d767
   14001d0be:	lea    eax,[r12-0x20]
   14001d0c3:	cmp    al,0x58
   14001d0c5:	ja     0x14001d0d9
   14001d0c7:	movsx  rax,r12b
   14001d0cb:	movsx  ecx,BYTE PTR [rax+r9*1+0x32b70]
   14001d0d4:	and    ecx,0xf
   14001d0d7:	jmp    0x14001d0dc
   14001d0d9:	mov    ecx,r10d
   14001d0dc:	movsxd rax,edx
   14001d0df:	movsxd rcx,ecx
   14001d0e2:	lea    rdx,[rax+rcx*8]
   14001d0e6:	movsx  edx,BYTE PTR [rdx+r9*1+0x32b90]
   14001d0ef:	sar    edx,0x4
   14001d0f2:	mov    DWORD PTR [rsp+0x60],edx
   14001d0f6:	mov    ecx,edx
   14001d0f8:	test   edx,edx
   14001d0fa:	je     0x14001d851
   14001d100:	dec    ecx
   14001d102:	je     0x14001d982
   14001d108:	dec    ecx
   14001d10a:	je     0x14001d932
   14001d110:	dec    ecx
   14001d112:	je     0x14001d8f9
   14001d118:	dec    ecx
   14001d11a:	je     0x14001d8ec
   14001d120:	dec    ecx
   14001d122:	je     0x14001d8b2
   14001d128:	dec    ecx
   14001d12a:	je     0x14001d7a4
   14001d130:	dec    ecx
   14001d132:	jne    0x14001d75b
   14001d138:	movsx  eax,r12b
   14001d13c:	cmp    eax,0x64
   14001d13f:	jg     0x14001d2b8
   14001d145:	je     0x14001d3b9
   14001d14b:	cmp    eax,0x41
   14001d14e:	je     0x14001d28c
   14001d154:	cmp    eax,0x43
   14001d157:	je     0x14001d232
   14001d15d:	cmp    eax,0x45
   14001d160:	je     0x14001d28c
   14001d166:	cmp    eax,0x47
   14001d169:	je     0x14001d28c
   14001d16f:	cmp    eax,0x53
   14001d172:	je     0x14001d1e8
   14001d174:	cmp    eax,0x58
   14001d177:	je     0x14001d353
   14001d17d:	cmp    eax,0x5a
   14001d180:	je     0x14001d199
   14001d182:	cmp    eax,0x61
   14001d185:	je     0x14001d298
   14001d18b:	cmp    eax,0x63
   14001d18e:	je     0x14001d240
   14001d194:	jmp    0x14001d5c4
   14001d199:	mov    rax,QWORD PTR [r14]
   14001d19c:	add    r14,0x8
   14001d1a0:	test   rax,rax
   14001d1a3:	je     0x14001d1d4
   14001d1a5:	mov    rbx,QWORD PTR [rax+0x8]
   14001d1a9:	test   rbx,rbx
   14001d1ac:	je     0x14001d1d4
   14001d1ae:	movsx  eax,WORD PTR [rax]
   14001d1b1:	bt     r13d,0xb
   14001d1b6:	jae    0x14001d1ca
   14001d1b8:	cdq    
   14001d1b9:	mov    DWORD PTR [rsp+0x54],0x1
   14001d1c1:	sub    eax,edx
   14001d1c3:	sar    eax,1
   14001d1c5:	jmp    0x14001d5c0
   14001d1ca:	mov    DWORD PTR [rsp+0x54],r10d
   14001d1cf:	jmp    0x14001d5c0
   14001d1d4:	mov    rbx,QWORD PTR [rip+0x23a15]        # 0x140040bf0
   14001d1db:	mov    rcx,rbx
   14001d1de:	call   0x14001dae0
   14001d1e3:	jmp    0x14001d5bd
   14001d1e8:	test   r13d,0x830
   14001d1ef:	jne    0x14001d1f6
   14001d1f1:	bts    r13d,0xb
   14001d1f6:	mov    rbx,QWORD PTR [r14]
   14001d1f9:	cmp    edi,r15d
   14001d1fc:	mov    eax,edi
   14001d1fe:	mov    ecx,0x7fffffff
   14001d203:	cmove  eax,ecx
   14001d206:	add    r14,0x8
   14001d20a:	test   r13d,0x810
   14001d211:	je     0x14001d320
   14001d217:	test   rbx,rbx
   14001d21a:	mov    DWORD PTR [rsp+0x54],0x1
   14001d222:	cmove  rbx,QWORD PTR [rip+0x239ce]        # 0x140040bf8
   14001d22a:	mov    rcx,rbx
   14001d22d:	jmp    0x14001d314
   14001d232:	test   r13d,0x830
   14001d239:	jne    0x14001d240
   14001d23b:	bts    r13d,0xb
   14001d240:	add    r14,0x8
   14001d244:	test   r13d,0x810
   14001d24b:	je     0x14001d274
   14001d24d:	movzx  r9d,WORD PTR [r14-0x8]
   14001d252:	lea    rdx,[rbp-0x40]
   14001d256:	lea    rcx,[rsp+0x48]
   14001d25b:	mov    r8,r11
   14001d25e:	call   0x140027c0c
   14001d263:	xor    r10d,r10d
   14001d266:	test   eax,eax
   14001d268:	je     0x14001d283
   14001d26a:	mov    DWORD PTR [rsp+0x5c],0x1
   14001d272:	jmp    0x14001d283
   14001d274:	mov    al,BYTE PTR [r14-0x8]
   14001d278:	mov    DWORD PTR [rsp+0x48],0x1
   14001d280:	mov    BYTE PTR [rbp-0x40],al
   14001d283:	lea    rbx,[rbp-0x40]
   14001d287:	jmp    0x14001d5c4
   14001d28c:	mov    DWORD PTR [rsp+0x78],0x1
   14001d294:	add    r12b,0x20
   14001d298:	or     r13d,0x40
   14001d29c:	lea    rbx,[rbp-0x40]
   14001d2a0:	mov    esi,r11d
   14001d2a3:	test   edi,edi
   14001d2a5:	jns    0x14001d4c9
   14001d2ab:	mov    DWORD PTR [rsp+0x44],0x6
   14001d2b3:	jmp    0x14001d514
   14001d2b8:	cmp    eax,0x65
   14001d2bb:	jl     0x14001d5c4
   14001d2c1:	cmp    eax,0x67
   14001d2c4:	jle    0x14001d298
   14001d2c6:	cmp    eax,0x69
   14001d2c9:	je     0x14001d3b9
   14001d2cf:	cmp    eax,0x6e
   14001d2d2:	je     0x14001d388
   14001d2d8:	cmp    eax,0x6f
   14001d2db:	je     0x14001d378
   14001d2e1:	cmp    eax,0x70
   14001d2e4:	je     0x14001d349
   14001d2e6:	cmp    eax,0x73
   14001d2e9:	je     0x14001d1f6
   14001d2ef:	cmp    eax,0x75
   14001d2f2:	je     0x14001d3bd
   14001d2f8:	cmp    eax,0x78
   14001d2fb:	jne    0x14001d5c4
   14001d301:	mov    eax,0x27
   14001d306:	jmp    0x14001d358
   14001d308:	dec    eax
   14001d30a:	cmp    WORD PTR [rcx],r10w
   14001d30e:	je     0x14001d318
   14001d310:	add    rcx,0x2
   14001d314:	test   eax,eax
   14001d316:	jne    0x14001d308
   14001d318:	sub    rcx,rbx
   14001d31b:	sar    rcx,1
   14001d31e:	jmp    0x14001d340
   14001d320:	test   rbx,rbx
   14001d323:	cmove  rbx,QWORD PTR [rip+0x238c5]        # 0x140040bf0
   14001d32b:	mov    rcx,rbx
   14001d32e:	jmp    0x14001d33a
   14001d330:	dec    eax
   14001d332:	cmp    BYTE PTR [rcx],r10b
   14001d335:	je     0x14001d33e
   14001d337:	inc    rcx
   14001d33a:	test   eax,eax
   14001d33c:	jne    0x14001d330
   14001d33e:	sub    ecx,ebx
   14001d340:	mov    DWORD PTR [rsp+0x48],ecx
   14001d344:	jmp    0x14001d5c4
   14001d349:	mov    edi,0x10
   14001d34e:	bts    r13d,0xf
   14001d353:	mov    eax,0x7
   14001d358:	mov    DWORD PTR [rsp+0x64],eax
   14001d35c:	mov    r9d,0x10
   14001d362:	test   r13b,r13b
   14001d365:	jns    0x14001d3c3
   14001d367:	add    al,0x51
   14001d369:	mov    BYTE PTR [rsp+0x50],0x30
   14001d36e:	lea    edx,[r9-0xe]
   14001d372:	mov    BYTE PTR [rsp+0x51],al
   14001d376:	jmp    0x14001d3c7
   14001d378:	mov    r9d,0x8
   14001d37e:	test   r13b,r13b
   14001d381:	jns    0x14001d3c3
   14001d383:	or     r13d,r11d
   14001d386:	jmp    0x14001d3c3
   14001d388:	mov    rdi,QWORD PTR [r14]
   14001d38b:	add    r14,0x8
   14001d38f:	call   0x140013778
   14001d394:	xor    r10d,r10d
   14001d397:	test   eax,eax
   14001d399:	je     0x14001d04b
   14001d39f:	test   r13b,0x20
   14001d3a3:	je     0x14001d3aa
   14001d3a5:	mov    WORD PTR [rdi],si
   14001d3a8:	jmp    0x14001d3ac
   14001d3aa:	mov    DWORD PTR [rdi],esi
   14001d3ac:	mov    DWORD PTR [rsp+0x5c],0x1
   14001d3b4:	jmp    0x14001d729
   14001d3b9:	or     r13d,0x40
   14001d3bd:	mov    r9d,0xa
   14001d3c3:	mov    edx,DWORD PTR [rsp+0x4c]
   14001d3c7:	mov    eax,0x8000
   14001d3cc:	test   eax,r13d
   14001d3cf:	jne    0x14001d3d8
   14001d3d1:	bt     r13d,0xc
   14001d3d6:	jae    0x14001d3e1
   14001d3d8:	mov    r8,QWORD PTR [r14]
   14001d3db:	add    r14,0x8
   14001d3df:	jmp    0x14001d40f
   14001d3e1:	add    r14,0x8
   14001d3e5:	test   r13b,0x20
   14001d3e9:	je     0x14001d3ff
   14001d3eb:	test   r13b,0x40
   14001d3ef:	je     0x14001d3f8
   14001d3f1:	movsx  r8,WORD PTR [r14-0x8]
   14001d3f6:	jmp    0x14001d40f
   14001d3f8:	movzx  r8d,WORD PTR [r14-0x8]
   14001d3fd:	jmp    0x14001d40f
   14001d3ff:	test   r13b,0x40
   14001d403:	je     0x14001d40b
   14001d405:	movsxd r8,DWORD PTR [r14-0x8]
   14001d409:	jmp    0x14001d40f
   14001d40b:	mov    r8d,DWORD PTR [r14-0x8]
   14001d40f:	test   r13b,0x40
   14001d413:	je     0x14001d422
   14001d415:	test   r8,r8
   14001d418:	jns    0x14001d422
   14001d41a:	neg    r8
   14001d41d:	bts    r13d,0x8
   14001d422:	test   eax,r13d
   14001d425:	jne    0x14001d431
   14001d427:	bt     r13d,0xc
   14001d42c:	jb     0x14001d431
   14001d42e:	mov    r8d,r8d
   14001d431:	test   edi,edi
   14001d433:	jns    0x14001d43c
   14001d435:	mov    edi,0x1
   14001d43a:	jmp    0x14001d447
   14001d43c:	and    r13d,0xfffffff7
   14001d440:	cmp    edi,r11d
   14001d443:	cmovg  edi,r11d
   14001d447:	mov    esi,DWORD PTR [rsp+0x64]
   14001d44b:	mov    rax,r8
   14001d44e:	lea    rbx,[rbp+0x1bf]
   14001d455:	neg    rax
   14001d458:	sbb    ecx,ecx
   14001d45a:	and    ecx,edx
   14001d45c:	mov    DWORD PTR [rsp+0x4c],ecx
   14001d460:	mov    ecx,edi
   14001d462:	dec    edi
   14001d464:	test   ecx,ecx
   14001d466:	jg     0x14001d46d
   14001d468:	test   r8,r8
   14001d46b:	je     0x14001d48c
   14001d46d:	xor    edx,edx
   14001d46f:	mov    rax,r8
   14001d472:	movsxd rcx,r9d
   14001d475:	div    rcx
   14001d478:	mov    r8,rax
   14001d47b:	lea    eax,[rdx+0x30]
   14001d47e:	cmp    eax,0x39
   14001d481:	jle    0x14001d485
   14001d483:	add    eax,esi
   14001d485:	mov    BYTE PTR [rbx],al
   14001d487:	dec    rbx
   14001d48a:	jmp    0x14001d460
   14001d48c:	mov    esi,DWORD PTR [rsp+0x40]
   14001d490:	lea    rax,[rbp+0x1bf]
   14001d497:	mov    DWORD PTR [rsp+0x44],edi
   14001d49b:	sub    eax,ebx
   14001d49d:	inc    rbx
   14001d4a0:	mov    DWORD PTR [rsp+0x48],eax
   14001d4a4:	test   r11d,r13d
   14001d4a7:	je     0x14001d5c4
   14001d4ad:	test   eax,eax
   14001d4af:	je     0x14001d4ba
   14001d4b1:	cmp    BYTE PTR [rbx],0x30
   14001d4b4:	je     0x14001d5c4
   14001d4ba:	dec    rbx
   14001d4bd:	inc    DWORD PTR [rsp+0x48]
   14001d4c1:	mov    BYTE PTR [rbx],0x30
   14001d4c4:	jmp    0x14001d5c4
   14001d4c9:	jne    0x14001d4db
   14001d4cb:	cmp    r12b,0x67
   14001d4cf:	jne    0x14001d514
   14001d4d1:	mov    DWORD PTR [rsp+0x44],0x1
   14001d4d9:	jmp    0x14001d514
   14001d4db:	cmp    edi,r11d
   14001d4de:	cmovg  edi,r11d
   14001d4e2:	mov    DWORD PTR [rsp+0x44],edi
   14001d4e6:	cmp    edi,0xa3
   14001d4ec:	jle    0x14001d514
   14001d4ee:	add    edi,0x15d
   14001d4f4:	movsxd rcx,edi
   14001d4f7:	call   0x140020c28
   14001d4fc:	mov    QWORD PTR [rbp-0x50],rax
   14001d500:	test   rax,rax
   14001d503:	je     0x14001d50c
   14001d505:	mov    rbx,rax
   14001d508:	mov    esi,edi
   14001d50a:	jmp    0x14001d514
   14001d50c:	mov    DWORD PTR [rsp+0x44],0xa3
   14001d514:	mov    rax,QWORD PTR [r14]
   14001d517:	mov    rcx,QWORD PTR [rip+0x23712]        # 0x140040c30
   14001d51e:	add    r14,0x8
   14001d522:	movsx  edi,r12b
   14001d526:	movsxd rsi,esi
   14001d529:	mov    QWORD PTR [rbp-0x48],rax
   14001d52d:	call   QWORD PTR [rip+0x11d35]        # 0x14002f268
   14001d533:	lea    rcx,[rbp-0x80]
   14001d537:	mov    r9d,edi
   14001d53a:	mov    QWORD PTR [rsp+0x30],rcx
   14001d53f:	mov    ecx,DWORD PTR [rsp+0x78]
   14001d543:	mov    r8,rsi
   14001d546:	mov    DWORD PTR [rsp+0x28],ecx
   14001d54a:	mov    ecx,DWORD PTR [rsp+0x44]
   14001d54e:	mov    rdx,rbx
   14001d551:	mov    DWORD PTR [rsp+0x20],ecx
   14001d555:	lea    rcx,[rbp-0x48]
   14001d559:	call   rax
   14001d55b:	mov    edi,r13d
   14001d55e:	and    edi,0x80
   14001d564:	je     0x14001d584
   14001d566:	xor    eax,eax
   14001d568:	cmp    DWORD PTR [rsp+0x44],eax
   14001d56c:	jne    0x14001d584
   14001d56e:	mov    rcx,QWORD PTR [rip+0x236d3]        # 0x140040c48
   14001d575:	call   QWORD PTR [rip+0x11ced]        # 0x14002f268
   14001d57b:	lea    rdx,[rbp-0x80]
   14001d57f:	mov    rcx,rbx
   14001d582:	call   rax
   14001d584:	cmp    r12b,0x67
   14001d588:	jne    0x14001d5a4
   14001d58a:	test   edi,edi
   14001d58c:	jne    0x14001d5a4
   14001d58e:	mov    rcx,QWORD PTR [rip+0x236ab]        # 0x140040c40
   14001d595:	call   QWORD PTR [rip+0x11ccd]        # 0x14002f268
   14001d59b:	lea    rdx,[rbp-0x80]
   14001d59f:	mov    rcx,rbx
   14001d5a2:	call   rax
   14001d5a4:	cmp    BYTE PTR [rbx],0x2d
   14001d5a7:	jne    0x14001d5b1
   14001d5a9:	bts    r13d,0x8
   14001d5ae:	inc    rbx
   14001d5b1:	mov    rcx,rbx
   14001d5b4:	call   0x14001dae0
   14001d5b9:	mov    esi,DWORD PTR [rsp+0x40]
   14001d5bd:	xor    r10d,r10d
   14001d5c0:	mov    DWORD PTR [rsp+0x48],eax
   14001d5c4:	cmp    DWORD PTR [rsp+0x5c],r10d
   14001d5c9:	jne    0x14001d729
   14001d5cf:	test   r13b,0x40
   14001d5d3:	je     0x14001d606
   14001d5d5:	bt     r13d,0x8
   14001d5da:	jae    0x14001d5e3
   14001d5dc:	mov    BYTE PTR [rsp+0x50],0x2d
   14001d5e1:	jmp    0x14001d5ee
   14001d5e3:	test   r13b,0x1
   14001d5e7:	je     0x14001d5f9
   14001d5e9:	mov    BYTE PTR [rsp+0x50],0x2b
   14001d5ee:	mov    edi,0x1
   14001d5f3:	mov    DWORD PTR [rsp+0x4c],edi
   14001d5f7:	jmp    0x14001d60a
   14001d5f9:	test   r13b,0x2
   14001d5fd:	je     0x14001d606
   14001d5ff:	mov    BYTE PTR [rsp+0x50],0x20
   14001d604:	jmp    0x14001d5ee
   14001d606:	mov    edi,DWORD PTR [rsp+0x4c]
   14001d60a:	mov    r12d,DWORD PTR [rsp+0x58]
   14001d60f:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d614:	sub    r12d,DWORD PTR [rsp+0x48]
   14001d619:	sub    r12d,edi
   14001d61c:	test   r13b,0xc
   14001d620:	jne    0x14001d634
   14001d622:	lea    r9,[rsp+0x40]
   14001d627:	mov    r8,rsi
   14001d62a:	mov    edx,r12d
   14001d62d:	mov    cl,0x20
   14001d62f:	call   0x140027c20
   14001d634:	mov    rax,QWORD PTR [rbp-0x60]
   14001d638:	lea    r9,[rsp+0x40]
   14001d63d:	lea    rcx,[rsp+0x50]
   14001d642:	mov    r8,rsi
   14001d645:	mov    edx,edi
   14001d647:	mov    QWORD PTR [rsp+0x20],rax
   14001d64c:	call   0x14001ce80
   14001d651:	test   r13b,0x8
   14001d655:	je     0x14001d66f
   14001d657:	test   r13b,0x4
   14001d65b:	jne    0x14001d66f
   14001d65d:	lea    r9,[rsp+0x40]
   14001d662:	mov    r8,rsi
   14001d665:	mov    edx,r12d
   14001d668:	mov    cl,0x30
   14001d66a:	call   0x140027c20
   14001d66f:	mov    edi,DWORD PTR [rsp+0x48]
   14001d673:	xor    eax,eax
   14001d675:	cmp    DWORD PTR [rsp+0x54],eax
   14001d679:	je     0x14001d6e2
   14001d67b:	test   edi,edi
   14001d67d:	jle    0x14001d6e2
   14001d67f:	mov    rsi,rbx
   14001d682:	movzx  r9d,WORD PTR [rsi]
   14001d686:	lea    rdx,[rbp+0x1c0]
   14001d68d:	lea    rcx,[rbp-0x58]
   14001d691:	mov    r8d,0x6
   14001d697:	dec    edi
   14001d699:	add    rsi,0x2
   14001d69d:	call   0x140027c0c
   14001d6a2:	xor    r10d,r10d
   14001d6a5:	test   eax,eax
   14001d6a7:	jne    0x14001d6d8
   14001d6a9:	mov    edx,DWORD PTR [rbp-0x58]
   14001d6ac:	test   edx,edx
   14001d6ae:	je     0x14001d6d8
   14001d6b0:	mov    rax,QWORD PTR [rbp-0x60]
   14001d6b4:	mov    r8,QWORD PTR [rsp+0x70]
   14001d6b9:	lea    r9,[rsp+0x40]
   14001d6be:	lea    rcx,[rbp+0x1c0]
   14001d6c5:	mov    QWORD PTR [rsp+0x20],rax
   14001d6ca:	call   0x14001ce80
   14001d6cf:	xor    r10d,r10d
   14001d6d2:	test   edi,edi
   14001d6d4:	jne    0x14001d682
   14001d6d6:	jmp    0x14001d700
   14001d6d8:	mov    esi,r15d
   14001d6db:	mov    DWORD PTR [rsp+0x40],r15d
   14001d6e0:	jmp    0x14001d704
   14001d6e2:	mov    rax,QWORD PTR [rbp-0x60]
   14001d6e6:	lea    r9,[rsp+0x40]
   14001d6eb:	mov    r8,rsi
   14001d6ee:	mov    edx,edi
   14001d6f0:	mov    rcx,rbx
   14001d6f3:	mov    QWORD PTR [rsp+0x20],rax
   14001d6f8:	call   0x14001ce80
   14001d6fd:	xor    r10d,r10d
   14001d700:	mov    esi,DWORD PTR [rsp+0x40]
   14001d704:	test   esi,esi
   14001d706:	js     0x14001d729
   14001d708:	test   r13b,0x4
   14001d70c:	je     0x14001d729
   14001d70e:	mov    r8,QWORD PTR [rsp+0x70]
   14001d713:	lea    r9,[rsp+0x40]
   14001d718:	mov    edx,r12d
   14001d71b:	mov    cl,0x20
   14001d71d:	call   0x140027c20
   14001d722:	mov    esi,DWORD PTR [rsp+0x40]
   14001d726:	xor    r10d,r10d
   14001d729:	mov    rax,QWORD PTR [rbp-0x50]
   14001d72d:	test   rax,rax
   14001d730:	je     0x14001d741
   14001d732:	mov    rcx,rax
   14001d735:	call   0x1400130a8
   14001d73a:	xor    r10d,r10d
   14001d73d:	mov    QWORD PTR [rbp-0x50],r10
   14001d741:	mov    edi,DWORD PTR [rsp+0x44]
   14001d745:	mov    r8,QWORD PTR [rsp+0x68]
   14001d74a:	mov    edx,DWORD PTR [rsp+0x60]
   14001d74e:	mov    r11d,0x200
   14001d754:	lea    r9,[rip+0xfffffffffffe28a5]        # 0x140000000
   14001d75b:	mov    r12b,BYTE PTR [r8]
   14001d75e:	test   r12b,r12b
   14001d761:	jne    0x14001d0ae
   14001d767:	cmp    BYTE PTR [rbp-0x68],r10b
   14001d76b:	je     0x14001d778
   14001d76d:	mov    rcx,QWORD PTR [rbp-0x70]
   14001d771:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001d778:	mov    eax,esi
   14001d77a:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14001d781:	xor    rcx,rsp
   14001d784:	call   0x140012670
   14001d789:	mov    rbx,QWORD PTR [rsp+0x320]
   14001d791:	add    rsp,0x2d0
   14001d798:	pop    r15
   14001d79a:	pop    r14
   14001d79c:	pop    r13
   14001d79e:	pop    r12
   14001d7a0:	pop    rdi
   14001d7a1:	pop    rsi
   14001d7a2:	pop    rbp
   14001d7a3:	ret    
   14001d7a4:	cmp    r12b,0x49
   14001d7a8:	je     0x14001d7e2
   14001d7aa:	cmp    r12b,0x68
   14001d7ae:	je     0x14001d7d9
   14001d7b0:	cmp    r12b,0x6c
   14001d7b4:	je     0x14001d7c3
   14001d7b6:	cmp    r12b,0x77
   14001d7ba:	jne    0x14001d75b
   14001d7bc:	bts    r13d,0xb
   14001d7c1:	jmp    0x14001d75b
   14001d7c3:	cmp    BYTE PTR [r8],0x6c
   14001d7c7:	jne    0x14001d7d3
   14001d7c9:	inc    r8
   14001d7cc:	bts    r13d,0xc
   14001d7d1:	jmp    0x14001d75b
   14001d7d3:	or     r13d,0x10
   14001d7d7:	jmp    0x14001d75b
   14001d7d9:	or     r13d,0x20
   14001d7dd:	jmp    0x14001d75b
   14001d7e2:	mov    al,BYTE PTR [r8]
   14001d7e5:	bts    r13d,0xf
   14001d7ea:	cmp    al,0x36
   14001d7ec:	jne    0x14001d803
   14001d7ee:	cmp    BYTE PTR [r8+0x1],0x34
   14001d7f3:	jne    0x14001d803
   14001d7f5:	add    r8,0x2
   14001d7f9:	bts    r13d,0xf
   14001d7fe:	jmp    0x14001d75b
   14001d803:	cmp    al,0x33
   14001d805:	jne    0x14001d81c
   14001d807:	cmp    BYTE PTR [r8+0x1],0x32
   14001d80c:	jne    0x14001d81c
   14001d80e:	add    r8,0x2
   14001d812:	btr    r13d,0xf
   14001d817:	jmp    0x14001d75b
   14001d81c:	cmp    al,0x64
   14001d81e:	je     0x14001d75b
   14001d824:	cmp    al,0x69
   14001d826:	je     0x14001d75b
   14001d82c:	cmp    al,0x6f
   14001d82e:	je     0x14001d75b
   14001d834:	cmp    al,0x75
   14001d836:	je     0x14001d75b
   14001d83c:	cmp    al,0x78
   14001d83e:	je     0x14001d75b
   14001d844:	cmp    al,0x58
   14001d846:	je     0x14001d75b
   14001d84c:	mov    DWORD PTR [rsp+0x60],r10d
   14001d851:	lea    rdx,[rbp-0x80]
   14001d855:	movzx  ecx,r12b
   14001d859:	mov    DWORD PTR [rsp+0x54],r10d
   14001d85e:	call   0x140020e3c
   14001d863:	xor    esi,esi
   14001d865:	test   eax,eax
   14001d867:	je     0x14001d894
   14001d869:	mov    rdx,QWORD PTR [rsp+0x70]
   14001d86e:	lea    r8,[rsp+0x40]
   14001d873:	mov    cl,r12b
   14001d876:	call   0x14001ce38
   14001d87b:	mov    rdx,QWORD PTR [rsp+0x68]
   14001d880:	mov    r12b,BYTE PTR [rdx]
   14001d883:	inc    rdx
   14001d886:	mov    QWORD PTR [rsp+0x68],rdx
   14001d88b:	test   r12b,r12b
   14001d88e:	je     0x14001d9ab
   14001d894:	mov    rdx,QWORD PTR [rsp+0x70]
   14001d899:	lea    r8,[rsp+0x40]
   14001d89e:	mov    cl,r12b
   14001d8a1:	call   0x14001ce38
   14001d8a6:	mov    esi,DWORD PTR [rsp+0x40]
   14001d8aa:	xor    r10d,r10d
   14001d8ad:	jmp    0x14001d745
   14001d8b2:	cmp    r12b,0x2a
   14001d8b6:	jne    0x14001d8d8
   14001d8b8:	mov    edi,DWORD PTR [r14]
   14001d8bb:	add    r14,0x8
   14001d8bf:	mov    DWORD PTR [rsp+0x44],edi
   14001d8c3:	test   edi,edi
   14001d8c5:	jns    0x14001d75b
   14001d8cb:	mov    edi,r15d
   14001d8ce:	mov    DWORD PTR [rsp+0x44],r15d
   14001d8d3:	jmp    0x14001d75b
   14001d8d8:	lea    ecx,[rdi+rdi*4]
   14001d8db:	movsx  eax,r12b
   14001d8df:	lea    edi,[rax+rcx*2-0x30]
   14001d8e3:	mov    DWORD PTR [rsp+0x44],edi
   14001d8e7:	jmp    0x14001d75b
   14001d8ec:	mov    edi,r10d
   14001d8ef:	mov    DWORD PTR [rsp+0x44],r10d
   14001d8f4:	jmp    0x14001d75b
   14001d8f9:	cmp    r12b,0x2a
   14001d8fd:	jne    0x14001d91a
   14001d8ff:	mov    eax,DWORD PTR [r14]
   14001d902:	add    r14,0x8
   14001d906:	mov    DWORD PTR [rsp+0x58],eax
   14001d90a:	test   eax,eax
   14001d90c:	jns    0x14001d75b
   14001d912:	or     r13d,0x4
   14001d916:	neg    eax
   14001d918:	jmp    0x14001d929
   14001d91a:	mov    eax,DWORD PTR [rsp+0x58]
   14001d91e:	lea    ecx,[rax+rax*4]
   14001d921:	movsx  eax,r12b
   14001d925:	lea    eax,[rax+rcx*2-0x30]
   14001d929:	mov    DWORD PTR [rsp+0x58],eax
   14001d92d:	jmp    0x14001d75b
   14001d932:	cmp    r12b,0x20
   14001d936:	je     0x14001d979
   14001d938:	cmp    r12b,0x23
   14001d93c:	je     0x14001d96f
   14001d93e:	cmp    r12b,0x2b
   14001d942:	je     0x14001d966
   14001d944:	cmp    r12b,0x2d
   14001d948:	je     0x14001d95d
   14001d94a:	cmp    r12b,0x30
   14001d94e:	jne    0x14001d75b
   14001d954:	or     r13d,0x8
   14001d958:	jmp    0x14001d75b
   14001d95d:	or     r13d,0x4
   14001d961:	jmp    0x14001d75b
   14001d966:	or     r13d,0x1
   14001d96a:	jmp    0x14001d75b
   14001d96f:	bts    r13d,0x7
   14001d974:	jmp    0x14001d75b
   14001d979:	or     r13d,0x2
   14001d97d:	jmp    0x14001d75b
   14001d982:	mov    DWORD PTR [rsp+0x78],r10d
   14001d987:	mov    DWORD PTR [rsp+0x5c],r10d
   14001d98c:	mov    DWORD PTR [rsp+0x58],r10d
   14001d991:	mov    DWORD PTR [rsp+0x4c],r10d
   14001d996:	mov    r13d,r10d
   14001d999:	mov    edi,r15d
   14001d99c:	mov    DWORD PTR [rsp+0x44],r15d
   14001d9a1:	mov    DWORD PTR [rsp+0x54],r10d
   14001d9a6:	jmp    0x14001d75b
   14001d9ab:	call   0x14001583c
   14001d9b0:	mov    DWORD PTR [rax],0x16
   14001d9b6:	call   0x140019f74
   14001d9bb:	cmp    BYTE PTR [rbp-0x68],sil
   14001d9bf:	jmp    0x14001d062
   14001d9c4:	mov    rax,rsp
   14001d9c7:	mov    QWORD PTR [rax+0x8],rbx
   14001d9cb:	mov    QWORD PTR [rax+0x10],rsi
   14001d9cf:	mov    QWORD PTR [rax+0x18],rdi
   14001d9d3:	mov    QWORD PTR [rax+0x20],r12
   14001d9d7:	push   rbp
   14001d9d8:	mov    rbp,rsp
   14001d9db:	sub    rsp,0x60
   14001d9df:	mov    rsi,rcx
   14001d9e2:	mov    rdi,rdx
   14001d9e5:	lea    rcx,[rbp-0x20]
   14001d9e9:	mov    rdx,r9
   14001d9ec:	mov    r12,r9
   14001d9ef:	mov    rbx,r8
   14001d9f2:	call   0x140012690
   14001d9f7:	test   rbx,rbx
   14001d9fa:	jne    0x14001da13
   14001d9fc:	cmp    BYTE PTR [rbp-0x8],bl
   14001d9ff:	je     0x14001da0c
   14001da01:	mov    rax,QWORD PTR [rbp-0x10]
   14001da05:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001da0c:	xor    eax,eax
   14001da0e:	jmp    0x14001daac
   14001da13:	test   rsi,rsi
   14001da16:	jne    0x14001da40
   14001da18:	call   0x14001583c
   14001da1d:	mov    DWORD PTR [rax],0x16
   14001da23:	call   0x140019f74
   14001da28:	cmp    BYTE PTR [rbp-0x8],0x0
   14001da2c:	je     0x14001da39
   14001da2e:	mov    rax,QWORD PTR [rbp-0x10]
   14001da32:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001da39:	mov    eax,0x7fffffff
   14001da3e:	jmp    0x14001daac
   14001da40:	test   rdi,rdi
   14001da43:	je     0x14001da18
   14001da45:	cmp    rbx,0x7fffffff
   14001da4c:	ja     0x14001da18
   14001da4e:	mov    rcx,QWORD PTR [rbp-0x18]
   14001da52:	cmp    DWORD PTR [rcx+0x8],0x0
   14001da56:	jne    0x14001da6b
   14001da58:	mov    r9,r12
   14001da5b:	mov    r8,rbx
   14001da5e:	mov    rdx,rdi
   14001da61:	mov    rcx,rsi
   14001da64:	call   0x140028b14
   14001da69:	jmp    0x14001da9b
   14001da6b:	mov    eax,DWORD PTR [rcx+0x4]
   14001da6e:	mov    edx,DWORD PTR [rcx+0xc]
   14001da71:	lea    rcx,[rbp-0x20]
   14001da75:	mov    DWORD PTR [rsp+0x38],eax
   14001da79:	mov    DWORD PTR [rsp+0x30],ebx
   14001da7d:	mov    r9,rsi
   14001da80:	mov    r8d,0x1001
   14001da86:	mov    QWORD PTR [rsp+0x28],rdi
   14001da8b:	mov    DWORD PTR [rsp+0x20],ebx
   14001da8f:	call   0x140028a88
   14001da94:	test   eax,eax
   14001da96:	je     0x14001da28
   14001da98:	add    eax,0xfffffffe
   14001da9b:	cmp    BYTE PTR [rbp-0x8],0x0
   14001da9f:	je     0x14001daac
   14001daa1:	mov    rcx,QWORD PTR [rbp-0x10]
   14001daa5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001daac:	lea    r11,[rsp+0x60]
   14001dab1:	mov    rbx,QWORD PTR [r11+0x10]
   14001dab5:	mov    rsi,QWORD PTR [r11+0x18]
   14001dab9:	mov    rdi,QWORD PTR [r11+0x20]
   14001dabd:	mov    r12,QWORD PTR [r11+0x28]
   14001dac1:	mov    rsp,r11
   14001dac4:	pop    rbp
   14001dac5:	ret    
   14001dac6:	int3   
   14001dac7:	int3   
   14001dac8:	xor    r9d,r9d
   14001dacb:	jmp    0x14001d9c4
   14001dad0:	int3   
   14001dad1:	int3   
   14001dad2:	int3   
   14001dad3:	int3   
   14001dad4:	int3   
   14001dad5:	int3   
   14001dad6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001dae0:	mov    rax,rcx
   14001dae3:	neg    rcx
   14001dae6:	test   rax,0x7
   14001daec:	je     0x14001dafd
   14001daee:	xchg   ax,ax
   14001daf0:	mov    dl,BYTE PTR [rax]
   14001daf2:	inc    rax
   14001daf5:	test   dl,dl
   14001daf7:	je     0x14001db58
   14001daf9:	test   al,0x7
   14001dafb:	jne    0x14001daf0
   14001dafd:	movabs r8,0x7efefefefefefeff
   14001db07:	movabs r11,0x8101010101010100
   14001db11:	mov    rdx,QWORD PTR [rax]
   14001db14:	mov    r9,r8
   14001db17:	add    rax,0x8
   14001db1b:	add    r9,rdx
   14001db1e:	not    rdx
   14001db21:	xor    rdx,r9
   14001db24:	and    rdx,r11
   14001db27:	je     0x14001db11
   14001db29:	mov    rdx,QWORD PTR [rax-0x8]
   14001db2d:	test   dl,dl
   14001db2f:	je     0x14001db82
   14001db31:	test   dh,dh
   14001db33:	je     0x14001db7c
   14001db35:	shr    rdx,0x10
   14001db39:	test   dl,dl
   14001db3b:	je     0x14001db76
   14001db3d:	test   dh,dh
   14001db3f:	je     0x14001db70
   14001db41:	shr    rdx,0x10
   14001db45:	test   dl,dl
   14001db47:	je     0x14001db6a
   14001db49:	test   dh,dh
   14001db4b:	je     0x14001db64
   14001db4d:	shr    edx,0x10
   14001db50:	test   dl,dl
   14001db52:	je     0x14001db5e
   14001db54:	test   dh,dh
   14001db56:	jne    0x14001db11
   14001db58:	lea    rax,[rcx+rax*1-0x1]
   14001db5d:	ret    
   14001db5e:	lea    rax,[rcx+rax*1-0x2]
   14001db63:	ret    
   14001db64:	lea    rax,[rcx+rax*1-0x3]
   14001db69:	ret    
   14001db6a:	lea    rax,[rcx+rax*1-0x4]
   14001db6f:	ret    
   14001db70:	lea    rax,[rcx+rax*1-0x5]
   14001db75:	ret    
   14001db76:	lea    rax,[rcx+rax*1-0x6]
   14001db7b:	ret    
   14001db7c:	lea    rax,[rcx+rax*1-0x7]
   14001db81:	ret    
   14001db82:	lea    rax,[rcx+rax*1-0x8]
   14001db87:	ret    
   14001db88:	mov    QWORD PTR [rsp+0x10],rbx
   14001db8d:	mov    QWORD PTR [rsp+0x18],rbp
   14001db92:	push   rdi
   14001db93:	sub    rsp,0x40
   14001db97:	and    QWORD PTR [rsp+0x50],0x0
   14001db9d:	mov    rbx,QWORD PTR [rip+0x377d4]        # 0x140055378
   14001dba4:	mov    rax,QWORD PTR [rbx]
   14001dba7:	test   rax,rax
   14001dbaa:	je     0x14001dc5a
   14001dbb0:	or     ebp,0xffffffff
   14001dbb3:	and    QWORD PTR [rsp+0x38],0x0
   14001dbb9:	and    QWORD PTR [rsp+0x30],0x0
   14001dbbf:	and    DWORD PTR [rsp+0x28],0x0
   14001dbc4:	and    QWORD PTR [rsp+0x20],0x0
   14001dbca:	mov    r9d,ebp
   14001dbcd:	mov    r8,rax
   14001dbd0:	xor    edx,edx
   14001dbd2:	xor    ecx,ecx
   14001dbd4:	call   QWORD PTR [rip+0x11656]        # 0x14002f230
   14001dbda:	movsxd rdi,eax
   14001dbdd:	test   eax,eax
   14001dbdf:	je     0x14001dc76
   14001dbe5:	mov    rcx,rdi
   14001dbe8:	mov    edx,0x1
   14001dbed:	call   0x140020ca8
   14001dbf2:	mov    QWORD PTR [rsp+0x50],rax
   14001dbf7:	test   rax,rax
   14001dbfa:	je     0x14001dc76
   14001dbfc:	and    QWORD PTR [rsp+0x38],0x0
   14001dc02:	and    QWORD PTR [rsp+0x30],0x0
   14001dc08:	mov    r8,QWORD PTR [rbx]
   14001dc0b:	mov    r9d,ebp
   14001dc0e:	xor    edx,edx
   14001dc10:	xor    ecx,ecx
   14001dc12:	mov    DWORD PTR [rsp+0x28],edi
   14001dc16:	mov    QWORD PTR [rsp+0x20],rax
   14001dc1b:	call   QWORD PTR [rip+0x1160f]        # 0x14002f230
   14001dc21:	test   eax,eax
   14001dc23:	je     0x14001dc6c
   14001dc25:	lea    rcx,[rsp+0x50]
   14001dc2a:	xor    edx,edx
   14001dc2c:	call   0x1400204d0
   14001dc31:	test   eax,eax
   14001dc33:	jns    0x14001dc4a
   14001dc35:	mov    rcx,QWORD PTR [rsp+0x50]
   14001dc3a:	test   rcx,rcx
   14001dc3d:	je     0x14001dc4a
   14001dc3f:	call   0x1400130a8
   14001dc44:	and    QWORD PTR [rsp+0x50],0x0
   14001dc4a:	add    rbx,0x8
   14001dc4e:	mov    rax,QWORD PTR [rbx]
   14001dc51:	test   rax,rax
   14001dc54:	jne    0x14001dbb3
   14001dc5a:	xor    eax,eax
   14001dc5c:	mov    rbx,QWORD PTR [rsp+0x58]
   14001dc61:	mov    rbp,QWORD PTR [rsp+0x60]
   14001dc66:	add    rsp,0x40
   14001dc6a:	pop    rdi
   14001dc6b:	ret    
   14001dc6c:	mov    rcx,QWORD PTR [rsp+0x50]
   14001dc71:	call   0x1400130a8
   14001dc76:	mov    eax,ebp
   14001dc78:	jmp    0x14001dc5c
   14001dc7a:	int3   
   14001dc7b:	int3   
   14001dc7c:	rex push rbx
   14001dc7e:	sub    rsp,0x20
   14001dc82:	test   rcx,rcx
   14001dc85:	je     0x14001dc94
   14001dc87:	test   rdx,rdx
   14001dc8a:	je     0x14001dc94
   14001dc8c:	test   r8,r8
   14001dc8f:	jne    0x14001dcad
   14001dc91:	mov    BYTE PTR [rcx],r8b
   14001dc94:	call   0x14001583c
   14001dc99:	mov    ebx,0x16
   14001dc9e:	mov    DWORD PTR [rax],ebx
   14001dca0:	call   0x140019f74
   14001dca5:	mov    eax,ebx
   14001dca7:	add    rsp,0x20
   14001dcab:	pop    rbx
   14001dcac:	ret    
   14001dcad:	mov    r9,rcx
   14001dcb0:	sub    r9,r8
   14001dcb3:	mov    al,BYTE PTR [r8]
   14001dcb6:	mov    BYTE PTR [r9+r8*1],al
   14001dcba:	inc    r8
   14001dcbd:	test   al,al
   14001dcbf:	je     0x14001dcc6
   14001dcc1:	dec    rdx
   14001dcc4:	jne    0x14001dcb3
   14001dcc6:	test   rdx,rdx
   14001dcc9:	jne    0x14001dcd9
   14001dccb:	mov    BYTE PTR [rcx],dl
   14001dccd:	call   0x14001583c
   14001dcd2:	mov    ebx,0x22
   14001dcd7:	jmp    0x14001dc9e
   14001dcd9:	xor    eax,eax
   14001dcdb:	jmp    0x14001dca7
   14001dcdd:	int3   
   14001dcde:	int3   
   14001dcdf:	int3   
   14001dce0:	xor    eax,eax
   14001dce2:	test   rdx,rdx
   14001dce5:	je     0x14001dcf7
   14001dce7:	cmp    BYTE PTR [rcx],0x0
   14001dcea:	je     0x14001dcf7
   14001dcec:	inc    rax
   14001dcef:	inc    rcx
   14001dcf2:	cmp    rax,rdx
   14001dcf5:	jb     0x14001dce7
   14001dcf7:	repz ret 
   14001dcf9:	int3   
   14001dcfa:	int3   
   14001dcfb:	int3   
   14001dcfc:	sub    rsp,0x28
   14001dd00:	call   0x14001ae14
   14001dd05:	mov    rcx,QWORD PTR [rax+0xd0]
   14001dd0c:	test   rcx,rcx
   14001dd0f:	je     0x14001dd15
   14001dd11:	call   rcx
   14001dd13:	jmp    0x14001dd15
   14001dd15:	call   0x140028c18
   14001dd1a:	add    rsp,0x28
   14001dd1e:	ret    
   14001dd1f:	int3   
   14001dd20:	sub    rsp,0x28
   14001dd24:	mov    rcx,QWORD PTR [rip+0x385a5]        # 0x1400562d0
   14001dd2b:	call   QWORD PTR [rip+0x11537]        # 0x14002f268
   14001dd31:	test   rax,rax
   14001dd34:	je     0x14001dd3a
   14001dd36:	call   rax
   14001dd38:	jmp    0x14001dd3a
   14001dd3a:	call   0x14001dcfc
   14001dd3f:	int3   
   14001dd40:	add    rsp,0x28
   14001dd44:	ret    
   14001dd45:	int3   
   14001dd46:	int3   
   14001dd47:	int3   
   14001dd48:	sub    rsp,0x28
   14001dd4c:	lea    rcx,[rip+0xffffffffffffffa9]        # 0x14001dcfc
   14001dd53:	call   QWORD PTR [rip+0x115bf]        # 0x14002f318
   14001dd59:	mov    QWORD PTR [rip+0x38570],rax        # 0x1400562d0
   14001dd60:	add    rsp,0x28
   14001dd64:	ret    
   14001dd65:	int3   
   14001dd66:	int3   
   14001dd67:	int3   
   14001dd68:	mov    QWORD PTR [rip+0x38569],rcx        # 0x1400562d8
   14001dd6f:	mov    QWORD PTR [rip+0x3856a],rcx        # 0x1400562e0
   14001dd76:	mov    QWORD PTR [rip+0x3856b],rcx        # 0x1400562e8
   14001dd7d:	mov    QWORD PTR [rip+0x3856c],rcx        # 0x1400562f0
   14001dd84:	ret    
   14001dd85:	int3   
   14001dd86:	int3   
   14001dd87:	int3   
   14001dd88:	mov    rcx,QWORD PTR [rip+0x38559]        # 0x1400562e8
   14001dd8f:	rex.W jmp QWORD PTR [rip+0x114d2]        # 0x14002f268
   14001dd96:	int3   
   14001dd97:	int3   
   14001dd98:	mov    QWORD PTR [rsp+0x10],rbx
   14001dd9d:	mov    QWORD PTR [rsp+0x18],rsi
   14001dda2:	push   rdi
   14001dda3:	push   r12
   14001dda5:	push   r13
   14001dda7:	push   r14
   14001dda9:	push   r15
   14001ddab:	sub    rsp,0x30
   14001ddaf:	mov    ebx,ecx
   14001ddb1:	xor    edi,edi
   14001ddb3:	mov    DWORD PTR [rsp+0x60],edi
   14001ddb7:	xor    esi,esi
   14001ddb9:	mov    edx,ecx
   14001ddbb:	sub    edx,0x2
   14001ddbe:	je     0x14001de89
   14001ddc4:	sub    edx,0x2
   14001ddc7:	je     0x14001de2b
   14001ddc9:	sub    edx,0x2
   14001ddcc:	je     0x14001de1b
   14001ddce:	sub    edx,0x2
   14001ddd1:	je     0x14001de2b
   14001ddd3:	sub    edx,0x3
   14001ddd6:	je     0x14001de2b
   14001ddd8:	sub    edx,0x4
   14001dddb:	je     0x14001de0b
   14001dddd:	sub    edx,0x6
   14001dde0:	je     0x14001ddf8
   14001dde2:	dec    edx
   14001dde4:	je     0x14001de1b
   14001dde6:	call   0x14001583c
   14001ddeb:	mov    DWORD PTR [rax],0x16
   14001ddf1:	call   0x140019f74
   14001ddf6:	jmp    0x14001de38
   14001ddf8:	lea    r12,[rip+0x384e1]        # 0x1400562e0
   14001ddff:	mov    rcx,QWORD PTR [rip+0x384da]        # 0x1400562e0
   14001de06:	jmp    0x14001de97
   14001de0b:	lea    r12,[rip+0x384de]        # 0x1400562f0
   14001de12:	mov    rcx,QWORD PTR [rip+0x384d7]        # 0x1400562f0
   14001de19:	jmp    0x14001de97
   14001de1b:	lea    r12,[rip+0x384c6]        # 0x1400562e8
   14001de22:	mov    rcx,QWORD PTR [rip+0x384bf]        # 0x1400562e8
   14001de29:	jmp    0x14001de97
   14001de2b:	call   0x14001ad90
   14001de30:	mov    rsi,rax
   14001de33:	test   rax,rax
   14001de36:	jne    0x14001de40
   14001de38:	or     eax,0xffffffff
   14001de3b:	jmp    0x14001dfb2
   14001de40:	mov    rdx,QWORD PTR [rax+0xa0]
   14001de47:	mov    rcx,rdx
   14001de4a:	movsxd r8,DWORD PTR [rip+0x1537b]        # 0x1400331cc
   14001de51:	cmp    DWORD PTR [rcx+0x4],ebx
   14001de54:	je     0x14001de69
   14001de56:	add    rcx,0x10
   14001de5a:	mov    rax,r8
   14001de5d:	shl    rax,0x4
   14001de61:	add    rax,rdx
   14001de64:	cmp    rcx,rax
   14001de67:	jb     0x14001de51
   14001de69:	mov    rax,r8
   14001de6c:	shl    rax,0x4
   14001de70:	add    rax,rdx
   14001de73:	cmp    rcx,rax
   14001de76:	jae    0x14001de7d
   14001de78:	cmp    DWORD PTR [rcx+0x4],ebx
   14001de7b:	je     0x14001de7f
   14001de7d:	xor    ecx,ecx
   14001de7f:	lea    r12,[rcx+0x8]
   14001de83:	mov    r13,QWORD PTR [r12]
   14001de87:	jmp    0x14001dea9
   14001de89:	lea    r12,[rip+0x38448]        # 0x1400562d8
   14001de90:	mov    rcx,QWORD PTR [rip+0x38441]        # 0x1400562d8
   14001de97:	mov    edi,0x1
   14001de9c:	mov    DWORD PTR [rsp+0x60],edi
   14001dea0:	call   QWORD PTR [rip+0x113c2]        # 0x14002f268
   14001dea6:	mov    r13,rax
   14001dea9:	cmp    r13,0x1
   14001dead:	jne    0x14001deb6
   14001deaf:	xor    eax,eax
   14001deb1:	jmp    0x14001dfb2
   14001deb6:	test   r13,r13
   14001deb9:	jne    0x14001dec5
   14001debb:	lea    ecx,[r13+0x3]
   14001debf:	call   0x140013c38
   14001dec4:	int3   
   14001dec5:	test   edi,edi
   14001dec7:	je     0x14001ded1
   14001dec9:	xor    ecx,ecx
   14001decb:	call   0x14001ccc8
   14001ded0:	nop
   14001ded1:	cmp    ebx,0x8
   14001ded4:	je     0x14001dee7
   14001ded6:	cmp    ebx,0xb
   14001ded9:	je     0x14001dee7
   14001dedb:	cmp    ebx,0x4
   14001dede:	je     0x14001dee7
   14001dee0:	mov    r15,QWORD PTR [rsp+0x28]
   14001dee5:	jmp    0x14001df13
   14001dee7:	mov    r15,QWORD PTR [rsi+0xa8]
   14001deee:	mov    QWORD PTR [rsp+0x28],r15
   14001def3:	and    QWORD PTR [rsi+0xa8],0x0
   14001defb:	cmp    ebx,0x8
   14001defe:	jne    0x14001df13
   14001df00:	mov    r14d,DWORD PTR [rsi+0xb0]
   14001df07:	mov    DWORD PTR [rsi+0xb0],0x8c
   14001df11:	jmp    0x14001df18
   14001df13:	mov    r14d,DWORD PTR [rsp+0x60]
   14001df18:	cmp    ebx,0x8
   14001df1b:	jne    0x14001df56
   14001df1d:	mov    ecx,DWORD PTR [rip+0x1529d]        # 0x1400331c0
   14001df23:	mov    edx,ecx
   14001df25:	mov    DWORD PTR [rsp+0x20],ecx
   14001df29:	mov    eax,DWORD PTR [rip+0x15295]        # 0x1400331c4
   14001df2f:	add    ecx,eax
   14001df31:	cmp    edx,ecx
   14001df33:	jge    0x14001df5f
   14001df35:	movsxd rcx,edx
   14001df38:	add    rcx,rcx
   14001df3b:	mov    rax,QWORD PTR [rsi+0xa0]
   14001df42:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14001df48:	inc    edx
   14001df4a:	mov    DWORD PTR [rsp+0x20],edx
   14001df4e:	mov    ecx,DWORD PTR [rip+0x1526c]        # 0x1400331c0
   14001df54:	jmp    0x14001df29
   14001df56:	call   0x14001aca4
   14001df5b:	mov    QWORD PTR [r12],rax
   14001df5f:	test   edi,edi
   14001df61:	je     0x14001df6a
   14001df63:	xor    ecx,ecx
   14001df65:	call   0x14001cbc8
   14001df6a:	mov    edi,0x8
   14001df6f:	cmp    ebx,edi
   14001df71:	jne    0x14001df80
   14001df73:	mov    edx,DWORD PTR [rsi+0xb0]
   14001df79:	mov    ecx,edi
   14001df7b:	call   r13
   14001df7e:	jmp    0x14001df85
   14001df80:	mov    ecx,ebx
   14001df82:	call   r13
   14001df85:	cmp    ebx,edi
   14001df87:	je     0x14001df97
   14001df89:	cmp    ebx,0xb
   14001df8c:	je     0x14001df97
   14001df8e:	cmp    ebx,0x4
   14001df91:	jne    0x14001deaf
   14001df97:	mov    QWORD PTR [rsi+0xa8],r15
   14001df9e:	cmp    ebx,edi
   14001dfa0:	jne    0x14001deaf
   14001dfa6:	mov    DWORD PTR [rsi+0xb0],r14d
   14001dfad:	jmp    0x14001deaf
   14001dfb2:	mov    rbx,QWORD PTR [rsp+0x68]
   14001dfb7:	mov    rsi,QWORD PTR [rsp+0x70]
   14001dfbc:	add    rsp,0x30
   14001dfc0:	pop    r15
   14001dfc2:	pop    r14
   14001dfc4:	pop    r13
   14001dfc6:	pop    r12
   14001dfc8:	pop    rdi
   14001dfc9:	ret    
   14001dfca:	int3   
   14001dfcb:	int3   
   14001dfcc:	mov    QWORD PTR [rip+0x3832d],rcx        # 0x140056300
   14001dfd3:	ret    
   14001dfd4:	mov    QWORD PTR [rip+0x3832d],rcx        # 0x140056308
   14001dfdb:	ret    
   14001dfdc:	rex push rbx
   14001dfde:	sub    rsp,0x20
   14001dfe2:	mov    edx,0x8
   14001dfe7:	lea    ecx,[rdx+0x18]
   14001dfea:	call   0x140020ca8
   14001dfef:	mov    rcx,rax
   14001dff2:	mov    rbx,rax
   14001dff5:	call   QWORD PTR [rip+0x1131d]        # 0x14002f318
   14001dffb:	mov    QWORD PTR [rip+0x3984e],rax        # 0x140057850
   14001e002:	mov    QWORD PTR [rip+0x3983f],rax        # 0x140057848
   14001e009:	test   rbx,rbx
   14001e00c:	jne    0x14001e013
   14001e00e:	lea    eax,[rbx+0x18]
   14001e011:	jmp    0x14001e019
   14001e013:	and    QWORD PTR [rbx],0x0
   14001e017:	xor    eax,eax
   14001e019:	add    rsp,0x20
   14001e01d:	pop    rbx
   14001e01e:	ret    
   14001e01f:	int3   
   14001e020:	mov    QWORD PTR [rsp+0x8],rbx
   14001e025:	mov    QWORD PTR [rsp+0x10],rsi
   14001e02a:	mov    QWORD PTR [rsp+0x18],rdi
   14001e02f:	push   r12
   14001e031:	push   r13
   14001e033:	push   r14
   14001e035:	sub    rsp,0x20
   14001e039:	mov    r14,rcx
   14001e03c:	call   0x140013920
   14001e041:	nop
   14001e042:	mov    rcx,QWORD PTR [rip+0x39807]        # 0x140057850
   14001e049:	call   QWORD PTR [rip+0x11219]        # 0x14002f268
   14001e04f:	mov    r12,rax
   14001e052:	mov    rcx,QWORD PTR [rip+0x397ef]        # 0x140057848
   14001e059:	call   QWORD PTR [rip+0x11209]        # 0x14002f268
   14001e05f:	mov    rbx,rax
   14001e062:	cmp    rax,r12
   14001e065:	jb     0x14001e106
   14001e06b:	mov    rdi,rax
   14001e06e:	sub    rdi,r12
   14001e071:	lea    r13,[rdi+0x8]
   14001e075:	cmp    r13,0x8
   14001e079:	jb     0x14001e106
   14001e07f:	mov    rcx,r12
   14001e082:	call   0x140028c58
   14001e087:	mov    rsi,rax
   14001e08a:	cmp    rax,r13
   14001e08d:	jae    0x14001e0e4
   14001e08f:	mov    edx,0x1000
   14001e094:	cmp    rax,rdx
   14001e097:	cmovb  rdx,rax
   14001e09b:	add    rdx,rax
   14001e09e:	cmp    rdx,rax
   14001e0a1:	jb     0x14001e0b4
   14001e0a3:	mov    rcx,r12
   14001e0a6:	call   0x140020d2c
   14001e0ab:	xor    ebx,ebx
   14001e0ad:	test   rax,rax
   14001e0b0:	jne    0x14001e0cc
   14001e0b2:	jmp    0x14001e0b6
   14001e0b4:	xor    ebx,ebx
   14001e0b6:	lea    rdx,[rsi+0x20]
   14001e0ba:	cmp    rdx,rsi
   14001e0bd:	jb     0x14001e108
   14001e0bf:	mov    rcx,r12
   14001e0c2:	call   0x140020d2c
   14001e0c7:	test   rax,rax
   14001e0ca:	je     0x14001e108
   14001e0cc:	sar    rdi,0x3
   14001e0d0:	lea    rbx,[rax+rdi*8]
   14001e0d4:	mov    rcx,rax
   14001e0d7:	call   QWORD PTR [rip+0x1123b]        # 0x14002f318
   14001e0dd:	mov    QWORD PTR [rip+0x3976c],rax        # 0x140057850
   14001e0e4:	mov    rcx,r14
   14001e0e7:	call   QWORD PTR [rip+0x1122b]        # 0x14002f318
   14001e0ed:	mov    QWORD PTR [rbx],rax
   14001e0f0:	lea    rcx,[rbx+0x8]
   14001e0f4:	call   QWORD PTR [rip+0x1121e]        # 0x14002f318
   14001e0fa:	mov    QWORD PTR [rip+0x39747],rax        # 0x140057848
   14001e101:	mov    rbx,r14
   14001e104:	jmp    0x14001e108
   14001e106:	xor    ebx,ebx
   14001e108:	call   0x14001392c
   14001e10d:	mov    rax,rbx
   14001e110:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e115:	mov    rsi,QWORD PTR [rsp+0x48]
   14001e11a:	mov    rdi,QWORD PTR [rsp+0x50]
   14001e11f:	add    rsp,0x20
   14001e123:	pop    r14
   14001e125:	pop    r13
   14001e127:	pop    r12
   14001e129:	ret    
   14001e12a:	int3   
   14001e12b:	int3   
   14001e12c:	sub    rsp,0x28
   14001e130:	call   0x14001e020
   14001e135:	neg    rax
   14001e138:	sbb    eax,eax
   14001e13a:	neg    eax
   14001e13c:	dec    eax
   14001e13e:	add    rsp,0x28
   14001e142:	ret    
   14001e143:	int3   
   14001e144:	mov    QWORD PTR [rsp+0x8],rbx
   14001e149:	push   rdi
   14001e14a:	sub    rsp,0x20
   14001e14e:	lea    rbx,[rip+0x15d7b]        # 0x140033ed0
   14001e155:	lea    rdi,[rip+0x15d74]        # 0x140033ed0
   14001e15c:	jmp    0x14001e16c
   14001e15e:	mov    rax,QWORD PTR [rbx]
   14001e161:	test   rax,rax
   14001e164:	je     0x14001e168
   14001e166:	call   rax
   14001e168:	add    rbx,0x8
   14001e16c:	cmp    rbx,rdi
   14001e16f:	jb     0x14001e15e
   14001e171:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e176:	add    rsp,0x20
   14001e17a:	pop    rdi
   14001e17b:	ret    
   14001e17c:	mov    QWORD PTR [rsp+0x8],rbx
   14001e181:	push   rdi
   14001e182:	sub    rsp,0x20
   14001e186:	lea    rbx,[rip+0x15d53]        # 0x140033ee0
   14001e18d:	lea    rdi,[rip+0x15d4c]        # 0x140033ee0
   14001e194:	jmp    0x14001e1a4
   14001e196:	mov    rax,QWORD PTR [rbx]
   14001e199:	test   rax,rax
   14001e19c:	je     0x14001e1a0
   14001e19e:	call   rax
   14001e1a0:	add    rbx,0x8
   14001e1a4:	cmp    rbx,rdi
   14001e1a7:	jb     0x14001e196
   14001e1a9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e1ae:	add    rsp,0x20
   14001e1b2:	pop    rdi
   14001e1b3:	ret    
   14001e1b4:	mov    QWORD PTR [rsp+0x8],rbx
   14001e1b9:	push   rdi
   14001e1ba:	sub    rsp,0x20
   14001e1be:	lea    rbx,[rip+0x22a3b]        # 0x140040c00
   14001e1c5:	mov    edi,0xa
   14001e1ca:	mov    rcx,QWORD PTR [rbx]
   14001e1cd:	call   QWORD PTR [rip+0x11145]        # 0x14002f318
   14001e1d3:	mov    QWORD PTR [rbx],rax
   14001e1d6:	add    rbx,0x8
   14001e1da:	dec    rdi
   14001e1dd:	jne    0x14001e1ca
   14001e1df:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e1e4:	add    rsp,0x20
   14001e1e8:	pop    rdi
   14001e1e9:	ret    
   14001e1ea:	int3   
   14001e1eb:	int3   
   14001e1ec:	int3   
   14001e1ed:	int3   
   14001e1ee:	int3   
   14001e1ef:	int3   
   14001e1f0:	mov    rax,rcx
   14001e1f3:	mov    ecx,0x5a4d
   14001e1f8:	cmp    WORD PTR [rax],cx
   14001e1fb:	je     0x14001e200
   14001e1fd:	xor    eax,eax
   14001e1ff:	ret    
   14001e200:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001e204:	add    rcx,rax
   14001e207:	xor    eax,eax
   14001e209:	cmp    DWORD PTR [rcx],0x4550
   14001e20f:	jne    0x14001e21d
   14001e211:	mov    edx,0x20b
   14001e216:	cmp    WORD PTR [rcx+0x18],dx
   14001e21a:	sete   al
   14001e21d:	repz ret 
   14001e21f:	int3   
   14001e220:	movsxd r8,DWORD PTR [rcx+0x3c]
   14001e224:	xor    r9d,r9d
   14001e227:	mov    r10,rdx
   14001e22a:	add    r8,rcx
   14001e22d:	movzx  eax,WORD PTR [r8+0x14]
   14001e232:	movzx  r11d,WORD PTR [r8+0x6]
   14001e237:	lea    rcx,[rax+r8*1+0x18]
   14001e23c:	test   r11d,r11d
   14001e23f:	je     0x14001e25f
   14001e241:	mov    edx,DWORD PTR [rcx+0xc]
   14001e244:	cmp    r10,rdx
   14001e247:	jb     0x14001e253
   14001e249:	mov    eax,DWORD PTR [rcx+0x8]
   14001e24c:	add    eax,edx
   14001e24e:	cmp    r10,rax
   14001e251:	jb     0x14001e262
   14001e253:	inc    r9d
   14001e256:	add    rcx,0x28
   14001e25a:	cmp    r9d,r11d
   14001e25d:	jb     0x14001e241
   14001e25f:	xor    eax,eax
   14001e261:	ret    
   14001e262:	mov    rax,rcx
   14001e265:	ret    
   14001e266:	int3   
   14001e267:	int3   
   14001e268:	int3   
   14001e269:	int3   
   14001e26a:	int3   
   14001e26b:	int3   
   14001e26c:	int3   
   14001e26d:	int3   
   14001e26e:	int3   
   14001e26f:	int3   
   14001e270:	sub    rsp,0x28
   14001e274:	mov    r8,rcx
   14001e277:	lea    r9,[rip+0xfffffffffffe1d82]        # 0x140000000
   14001e27e:	mov    rcx,r9
   14001e281:	call   0x14001e1f0
   14001e286:	test   eax,eax
   14001e288:	je     0x14001e2ac
   14001e28a:	sub    r8,r9
   14001e28d:	mov    rdx,r8
   14001e290:	mov    rcx,r9
   14001e293:	call   0x14001e220
   14001e298:	test   rax,rax
   14001e29b:	je     0x14001e2ac
   14001e29d:	mov    eax,DWORD PTR [rax+0x24]
   14001e2a0:	shr    eax,0x1f
   14001e2a3:	not    eax
   14001e2a5:	and    eax,0x1
   14001e2a8:	jmp    0x14001e2ac
   14001e2aa:	xor    eax,eax
   14001e2ac:	add    rsp,0x28
   14001e2b0:	ret    
   14001e2b1:	int3   
   14001e2b2:	int3   
   14001e2b3:	int3   
   14001e2b4:	mov    QWORD PTR [rsp+0x18],rbx
   14001e2b9:	mov    QWORD PTR [rsp+0x8],rcx
   14001e2be:	push   rbp
   14001e2bf:	push   rsi
   14001e2c0:	push   rdi
   14001e2c1:	push   r12
   14001e2c3:	push   r13
   14001e2c5:	push   r14
   14001e2c7:	push   r15
   14001e2c9:	sub    rsp,0x20
   14001e2cd:	mov    ebp,r9d
   14001e2d0:	mov    r12d,r8d
   14001e2d3:	mov    r13,rdx
   14001e2d6:	test   rdx,rdx
   14001e2d9:	je     0x14001e2de
   14001e2db:	mov    QWORD PTR [rdx],rcx
   14001e2de:	test   rcx,rcx
   14001e2e1:	jne    0x14001e2fa
   14001e2e3:	call   0x14001583c
   14001e2e8:	mov    DWORD PTR [rax],0x16
   14001e2ee:	call   0x140019f74
   14001e2f3:	xor    eax,eax
   14001e2f5:	jmp    0x14001e487
   14001e2fa:	test   r8d,r8d
   14001e2fd:	je     0x14001e30b
   14001e2ff:	cmp    r8d,0x2
   14001e303:	jl     0x14001e2e3
   14001e305:	cmp    r8d,0x24
   14001e309:	jg     0x14001e2e3
   14001e30b:	movzx  esi,WORD PTR [rcx]
   14001e30e:	xor    edi,edi
   14001e310:	lea    rbx,[rcx+0x2]
   14001e314:	lea    r15d,[rdi+0x8]
   14001e318:	jmp    0x14001e321
   14001e31a:	movzx  esi,WORD PTR [rbx]
   14001e31d:	add    rbx,0x2
   14001e321:	mov    edx,r15d
   14001e324:	movzx  ecx,si
   14001e327:	call   0x140013350
   14001e32c:	test   eax,eax
   14001e32e:	jne    0x14001e31a
   14001e330:	cmp    si,0x2d
   14001e334:	jne    0x14001e33b
   14001e336:	or     ebp,0x2
   14001e339:	jmp    0x14001e341
   14001e33b:	cmp    si,0x2b
   14001e33f:	jne    0x14001e348
   14001e341:	movzx  esi,WORD PTR [rbx]
   14001e344:	add    rbx,0x2
   14001e348:	test   r12d,r12d
   14001e34b:	jne    0x14001e378
   14001e34d:	movzx  ecx,si
   14001e350:	call   0x140028ca0
   14001e355:	test   eax,eax
   14001e357:	je     0x14001e361
   14001e359:	mov    r12d,0xa
   14001e35f:	jmp    0x14001e39e
   14001e361:	cmp    WORD PTR [rbx],0x78
   14001e365:	je     0x14001e372
   14001e367:	cmp    WORD PTR [rbx],0x58
   14001e36b:	je     0x14001e372
   14001e36d:	mov    r12d,r15d
   14001e370:	jmp    0x14001e39e
   14001e372:	mov    r12d,0x10
   14001e378:	cmp    r12d,0x10
   14001e37c:	jne    0x14001e39e
   14001e37e:	movzx  ecx,si
   14001e381:	call   0x140028ca0
   14001e386:	test   eax,eax
   14001e388:	jne    0x14001e39e
   14001e38a:	cmp    WORD PTR [rbx],0x78
   14001e38e:	je     0x14001e396
   14001e390:	cmp    WORD PTR [rbx],0x58
   14001e394:	jne    0x14001e39e
   14001e396:	movzx  esi,WORD PTR [rbx+0x2]
   14001e39a:	add    rbx,0x4
   14001e39e:	xor    edx,edx
   14001e3a0:	or     eax,0xffffffff
   14001e3a3:	div    r12d
   14001e3a6:	mov    r15d,eax
   14001e3a9:	mov    r14d,edx
   14001e3ac:	movzx  ecx,si
   14001e3af:	call   0x140028ca0
   14001e3b4:	cmp    eax,0xffffffff
   14001e3b7:	jne    0x14001e3e4
   14001e3b9:	mov    eax,0x41
   14001e3be:	cmp    ax,si
   14001e3c1:	ja     0x14001e3c9
   14001e3c3:	cmp    si,0x5a
   14001e3c7:	jbe    0x14001e3d2
   14001e3c9:	lea    eax,[rsi-0x61]
   14001e3cc:	cmp    ax,0x19
   14001e3d0:	ja     0x14001e400
   14001e3d2:	lea    eax,[rsi-0x61]
   14001e3d5:	cmp    ax,0x19
   14001e3d9:	movzx  eax,si
   14001e3dc:	ja     0x14001e3e1
   14001e3de:	sub    eax,0x20
   14001e3e1:	add    eax,0xffffffc9
   14001e3e4:	cmp    eax,r12d
   14001e3e7:	jae    0x14001e400
   14001e3e9:	or     ebp,0x8
   14001e3ec:	cmp    edi,r15d
   14001e3ef:	jb     0x14001e41a
   14001e3f1:	jne    0x14001e3f8
   14001e3f3:	cmp    eax,r14d
   14001e3f6:	jbe    0x14001e41a
   14001e3f8:	or     ebp,0x4
   14001e3fb:	test   r13,r13
   14001e3fe:	jne    0x14001e420
   14001e400:	mov    r14,QWORD PTR [rsp+0x60]
   14001e405:	sub    rbx,0x2
   14001e409:	test   bpl,0x8
   14001e40d:	jne    0x14001e429
   14001e40f:	test   r13,r13
   14001e412:	cmovne rbx,r14
   14001e416:	xor    edi,edi
   14001e418:	jmp    0x14001e474
   14001e41a:	imul   edi,r12d
   14001e41e:	add    edi,eax
   14001e420:	movzx  esi,WORD PTR [rbx]
   14001e423:	add    rbx,0x2
   14001e427:	jmp    0x14001e3ac
   14001e429:	mov    esi,0x7fffffff
   14001e42e:	test   bpl,0x4
   14001e432:	jne    0x14001e451
   14001e434:	test   bpl,0x1
   14001e438:	jne    0x14001e474
   14001e43a:	mov    eax,ebp
   14001e43c:	and    eax,0x2
   14001e43f:	je     0x14001e449
   14001e441:	cmp    edi,0x80000000
   14001e447:	ja     0x14001e451
   14001e449:	test   eax,eax
   14001e44b:	jne    0x14001e474
   14001e44d:	cmp    edi,esi
   14001e44f:	jbe    0x14001e474
   14001e451:	call   0x14001583c
   14001e456:	mov    DWORD PTR [rax],0x22
   14001e45c:	test   bpl,0x1
   14001e460:	je     0x14001e467
   14001e462:	or     edi,0xffffffff
   14001e465:	jmp    0x14001e474
   14001e467:	mov    al,bpl
   14001e46a:	and    al,0x2
   14001e46c:	neg    al
   14001e46e:	sbb    edi,edi
   14001e470:	neg    edi
   14001e472:	add    edi,esi
   14001e474:	test   r13,r13
   14001e477:	je     0x14001e47d
   14001e479:	mov    QWORD PTR [r13+0x0],rbx
   14001e47d:	test   bpl,0x2
   14001e481:	je     0x14001e485
   14001e483:	neg    edi
   14001e485:	mov    eax,edi
   14001e487:	mov    rbx,QWORD PTR [rsp+0x70]
   14001e48c:	add    rsp,0x20
   14001e490:	pop    r15
   14001e492:	pop    r14
   14001e494:	pop    r13
   14001e496:	pop    r12
   14001e498:	pop    rdi
   14001e499:	pop    rsi
   14001e49a:	pop    rbp
   14001e49b:	ret    
   14001e49c:	xor    r9d,r9d
   14001e49f:	jmp    0x14001e2b4
   14001e4a4:	mov    rax,rsp
   14001e4a7:	mov    QWORD PTR [rax+0x10],rbx
   14001e4ab:	mov    QWORD PTR [rax+0x18],rbp
   14001e4af:	mov    QWORD PTR [rax+0x20],rsi
   14001e4b3:	mov    DWORD PTR [rax+0x8],ecx
   14001e4b6:	push   rdi
   14001e4b7:	sub    rsp,0x20
   14001e4bb:	mov    rcx,rdx
   14001e4be:	mov    rbx,rdx
   14001e4c1:	call   0x1400211a0
   14001e4c6:	mov    ecx,DWORD PTR [rbx+0x18]
   14001e4c9:	movsxd rsi,eax
   14001e4cc:	test   cl,0x82
   14001e4cf:	jne    0x14001e4e8
   14001e4d1:	call   0x14001583c
   14001e4d6:	mov    DWORD PTR [rax],0x9
   14001e4dc:	or     DWORD PTR [rbx+0x18],0x20
   14001e4e0:	or     eax,0xffffffff
   14001e4e3:	jmp    0x14001e61c
   14001e4e8:	test   cl,0x40
   14001e4eb:	je     0x14001e4fa
   14001e4ed:	call   0x14001583c
   14001e4f2:	mov    DWORD PTR [rax],0x22
   14001e4f8:	jmp    0x14001e4dc
   14001e4fa:	xor    edi,edi
   14001e4fc:	test   cl,0x1
   14001e4ff:	je     0x14001e51a
   14001e501:	mov    DWORD PTR [rbx+0x8],edi
   14001e504:	test   cl,0x10
   14001e507:	je     0x14001e596
   14001e50d:	mov    rax,QWORD PTR [rbx+0x10]
   14001e511:	and    ecx,0xfffffffe
   14001e514:	mov    QWORD PTR [rbx],rax
   14001e517:	mov    DWORD PTR [rbx+0x18],ecx
   14001e51a:	mov    eax,DWORD PTR [rbx+0x18]
   14001e51d:	mov    DWORD PTR [rbx+0x8],edi
   14001e520:	and    eax,0xffffffef
   14001e523:	or     eax,0x2
   14001e526:	mov    DWORD PTR [rbx+0x18],eax
   14001e529:	test   eax,0x10c
   14001e52e:	jne    0x14001e55f
   14001e530:	call   0x140014c3c
   14001e535:	add    rax,0x30
   14001e539:	cmp    rbx,rax
   14001e53c:	je     0x14001e54c
   14001e53e:	call   0x140014c3c
   14001e543:	add    rax,0x60
   14001e547:	cmp    rbx,rax
   14001e54a:	jne    0x14001e557
   14001e54c:	mov    ecx,esi
   14001e54e:	call   0x1400279e8
   14001e553:	test   eax,eax
   14001e555:	jne    0x14001e55f
   14001e557:	mov    rcx,rbx
   14001e55a:	call   0x140028e38
   14001e55f:	test   DWORD PTR [rbx+0x18],0x108
   14001e566:	je     0x14001e5f9
   14001e56c:	mov    ebp,DWORD PTR [rbx]
   14001e56e:	mov    rdx,QWORD PTR [rbx+0x10]
   14001e572:	sub    ebp,DWORD PTR [rbx+0x10]
   14001e575:	lea    rax,[rdx+0x1]
   14001e579:	mov    QWORD PTR [rbx],rax
   14001e57c:	mov    eax,DWORD PTR [rbx+0x24]
   14001e57f:	dec    eax
   14001e581:	mov    DWORD PTR [rbx+0x8],eax
   14001e584:	test   ebp,ebp
   14001e586:	jle    0x14001e5a1
   14001e588:	mov    r8d,ebp
   14001e58b:	mov    ecx,esi
   14001e58d:	call   0x140021bcc
   14001e592:	mov    edi,eax
   14001e594:	jmp    0x14001e5ed
   14001e596:	or     ecx,0x20
   14001e599:	mov    DWORD PTR [rbx+0x18],ecx
   14001e59c:	jmp    0x14001e4e0
   14001e5a1:	cmp    esi,0xffffffff
   14001e5a4:	je     0x14001e5c9
   14001e5a6:	cmp    esi,0xfffffffe
   14001e5a9:	je     0x14001e5c9
   14001e5ab:	mov    rcx,rsi
   14001e5ae:	mov    rax,rsi
   14001e5b1:	lea    rdx,[rip+0x38068]        # 0x140056620
   14001e5b8:	and    ecx,0x1f
   14001e5bb:	sar    rax,0x5
   14001e5bf:	imul   rcx,rcx,0x58
   14001e5c3:	add    rcx,QWORD PTR [rdx+rax*8]
   14001e5c7:	jmp    0x14001e5d0
   14001e5c9:	lea    rcx,[rip+0x22690]        # 0x140040c60
   14001e5d0:	test   BYTE PTR [rcx+0x8],0x20
   14001e5d4:	je     0x14001e5ed
   14001e5d6:	xor    edx,edx
   14001e5d8:	mov    ecx,esi
   14001e5da:	lea    r8d,[rdx+0x2]
   14001e5de:	call   0x140022ef8
   14001e5e3:	cmp    rax,0xffffffffffffffff
   14001e5e7:	je     0x14001e4dc
   14001e5ed:	mov    rcx,QWORD PTR [rbx+0x10]
   14001e5f1:	mov    al,BYTE PTR [rsp+0x30]
   14001e5f5:	mov    BYTE PTR [rcx],al
   14001e5f7:	jmp    0x14001e60f
   14001e5f9:	mov    ebp,0x1
   14001e5fe:	lea    rdx,[rsp+0x30]
   14001e603:	mov    ecx,esi
   14001e605:	mov    r8d,ebp
   14001e608:	call   0x140021bcc
   14001e60d:	mov    edi,eax
   14001e60f:	cmp    edi,ebp
   14001e611:	jne    0x14001e4dc
   14001e617:	movzx  eax,BYTE PTR [rsp+0x30]
   14001e61c:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e621:	mov    rbp,QWORD PTR [rsp+0x40]
   14001e626:	mov    rsi,QWORD PTR [rsp+0x48]
   14001e62b:	add    rsp,0x20
   14001e62f:	pop    rdi
   14001e630:	ret    
   14001e631:	int3   
   14001e632:	int3   
   14001e633:	int3   
   14001e634:	mov    QWORD PTR [rsp+0x8],rbx
   14001e639:	mov    QWORD PTR [rsp+0x10],rbp
   14001e63e:	mov    QWORD PTR [rsp+0x18],rsi
   14001e643:	push   rdi
   14001e644:	push   r12
   14001e646:	push   r13
   14001e648:	sub    rsp,0x20
   14001e64c:	test   BYTE PTR [r8+0x18],0x40
   14001e651:	mov    rbx,QWORD PTR [rsp+0x60]
   14001e656:	mov    rdi,r9
   14001e659:	mov    r12d,DWORD PTR [rbx]
   14001e65c:	mov    rbp,r8
   14001e65f:	mov    esi,edx
   14001e661:	mov    r13,rcx
   14001e664:	je     0x14001e672
   14001e666:	cmp    QWORD PTR [r8+0x10],0x0
   14001e66b:	jne    0x14001e672
   14001e66d:	add    DWORD PTR [r9],edx
   14001e670:	jmp    0x14001e6b5
   14001e672:	and    DWORD PTR [rbx],0x0
   14001e675:	test   edx,edx
   14001e677:	jle    0x14001e6b2
   14001e679:	movzx  ecx,WORD PTR [r13+0x0]
   14001e67e:	mov    r8,rdi
   14001e681:	mov    rdx,rbp
   14001e684:	dec    esi
   14001e686:	call   0x140025718
   14001e68b:	add    r13,0x2
   14001e68f:	cmp    DWORD PTR [rdi],0xffffffff
   14001e692:	jne    0x14001e6a9
   14001e694:	cmp    DWORD PTR [rbx],0x2a
   14001e697:	jne    0x14001e6ad
   14001e699:	mov    ecx,0x3f
   14001e69e:	mov    r8,rdi
   14001e6a1:	mov    rdx,rbp
   14001e6a4:	call   0x140025718
   14001e6a9:	test   esi,esi
   14001e6ab:	jg     0x14001e679
   14001e6ad:	cmp    DWORD PTR [rbx],0x0
   14001e6b0:	jne    0x14001e6b5
   14001e6b2:	mov    DWORD PTR [rbx],r12d
   14001e6b5:	mov    rbx,QWORD PTR [rsp+0x40]
   14001e6ba:	mov    rbp,QWORD PTR [rsp+0x48]
   14001e6bf:	mov    rsi,QWORD PTR [rsp+0x50]
   14001e6c4:	add    rsp,0x20
   14001e6c8:	pop    r13
   14001e6ca:	pop    r12
   14001e6cc:	pop    rdi
   14001e6cd:	ret    
   14001e6ce:	int3   
   14001e6cf:	int3   
   14001e6d0:	mov    QWORD PTR [rsp+0x18],rbx
   14001e6d5:	push   rbp
   14001e6d6:	push   rsi
   14001e6d7:	push   rdi
   14001e6d8:	push   r12
   14001e6da:	push   r13
   14001e6dc:	push   r14
   14001e6de:	push   r15
   14001e6e0:	lea    rbp,[rsp-0x3e0]
   14001e6e8:	sub    rsp,0x4e0
   14001e6ef:	mov    rax,QWORD PTR [rip+0x2123a]        # 0x14003f930
   14001e6f6:	xor    rax,rsp
   14001e6f9:	mov    QWORD PTR [rbp+0x3d0],rax
   14001e700:	xor    eax,eax
   14001e702:	mov    rbx,rcx
   14001e705:	mov    QWORD PTR [rsp+0x78],rcx
   14001e70a:	mov    QWORD PTR [rbp-0x80],rdx
   14001e70e:	lea    rcx,[rbp-0x70]
   14001e712:	mov    rdx,r8
   14001e715:	mov    r14,r9
   14001e718:	mov    QWORD PTR [rsp+0x50],r9
   14001e71d:	mov    DWORD PTR [rsp+0x74],eax
   14001e721:	mov    r12d,eax
   14001e724:	mov    DWORD PTR [rsp+0x5c],eax
   14001e728:	mov    edi,eax
   14001e72a:	mov    DWORD PTR [rsp+0x44],eax
   14001e72e:	mov    DWORD PTR [rsp+0x48],eax
   14001e732:	mov    DWORD PTR [rsp+0x70],eax
   14001e736:	mov    DWORD PTR [rsp+0x58],eax
   14001e73a:	call   0x140012690
   14001e73f:	call   0x14001583c
   14001e744:	xor    r10d,r10d
   14001e747:	mov    QWORD PTR [rbp-0x48],rax
   14001e74b:	test   rbx,rbx
   14001e74e:	jne    0x14001e77c
   14001e750:	call   0x14001583c
   14001e755:	mov    DWORD PTR [rax],0x16
   14001e75b:	call   0x140019f74
   14001e760:	xor    r11d,r11d
   14001e763:	cmp    BYTE PTR [rbp-0x58],r11b
   14001e767:	je     0x14001e774
   14001e769:	mov    rax,QWORD PTR [rbp-0x60]
   14001e76d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e774:	or     eax,0xffffffff
   14001e777:	jmp    0x14001f19a
   14001e77c:	mov    r8,QWORD PTR [rbp-0x80]
   14001e780:	test   r8,r8
   14001e783:	je     0x14001e750
   14001e785:	movzx  r13d,WORD PTR [r8]
   14001e789:	mov    esi,r10d
   14001e78c:	mov    DWORD PTR [rsp+0x40],r10d
   14001e791:	mov    r15d,r10d
   14001e794:	mov    edx,r10d
   14001e797:	mov    QWORD PTR [rbp-0x50],r10
   14001e79b:	test   r13w,r13w
   14001e79f:	je     0x14001f187
   14001e7a5:	mov    rbx,QWORD PTR [rbp-0x48]
   14001e7a9:	mov    ecx,0x58
   14001e7ae:	mov    r9d,0x200
   14001e7b4:	lea    r11d,[rcx-0x38]
   14001e7b8:	add    r8,0x2
   14001e7bc:	mov    QWORD PTR [rbp-0x80],r8
   14001e7c0:	test   esi,esi
   14001e7c2:	js     0x14001f187
   14001e7c8:	movzx  eax,r13w
   14001e7cc:	sub    ax,r11w
   14001e7d0:	cmp    ax,cx
   14001e7d3:	ja     0x14001e7ea
   14001e7d5:	lea    rcx,[rip+0x143b4]        # 0x140032b90
   14001e7dc:	movzx  eax,r13w
   14001e7e0:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   14001e7e5:	and    ecx,0xf
   14001e7e8:	jmp    0x14001e7ed
   14001e7ea:	mov    ecx,r10d
   14001e7ed:	movsxd rax,edx
   14001e7f0:	movsxd rcx,ecx
   14001e7f3:	lea    rdx,[rax+rcx*8]
   14001e7f7:	lea    rax,[rip+0x14392]        # 0x140032b90
   14001e7fe:	movsx  edx,BYTE PTR [rdx+rax*1]
   14001e802:	sar    edx,0x4
   14001e805:	mov    DWORD PTR [rsp+0x6c],edx
   14001e809:	mov    ecx,edx
   14001e80b:	test   edx,edx
   14001e80d:	je     0x14001f02e
   14001e813:	dec    ecx
   14001e815:	je     0x14001f13e
   14001e81b:	dec    ecx
   14001e81d:	je     0x14001f0f1
   14001e823:	dec    ecx
   14001e825:	je     0x14001f0a6
   14001e82b:	dec    ecx
   14001e82d:	je     0x14001f099
   14001e833:	dec    ecx
   14001e835:	je     0x14001f055
   14001e83b:	dec    ecx
   14001e83d:	je     0x14001ef3b
   14001e843:	dec    ecx
   14001e845:	jne    0x14001f174
   14001e84b:	movzx  eax,r13w
   14001e84f:	mov    ecx,0x64
   14001e854:	cmp    eax,ecx
   14001e856:	jg     0x14001ea64
   14001e85c:	je     0x14001eb86
   14001e862:	cmp    eax,0x41
   14001e865:	je     0x14001ea31
   14001e86b:	cmp    eax,0x43
   14001e86e:	je     0x14001e9bc
   14001e874:	cmp    eax,0x45
   14001e877:	je     0x14001ea31
   14001e87d:	cmp    eax,0x47
   14001e880:	je     0x14001ea31
   14001e886:	cmp    eax,0x53
   14001e889:	je     0x14001e917
   14001e88f:	cmp    eax,0x58
   14001e892:	je     0x14001eb06
   14001e898:	cmp    eax,0x5a
   14001e89b:	je     0x14001e8b4
   14001e89d:	cmp    eax,0x61
   14001e8a0:	je     0x14001ea3c
   14001e8a6:	cmp    eax,0x63
   14001e8a9:	je     0x14001e9c8
   14001e8af:	jmp    0x14001e984
   14001e8b4:	mov    rax,QWORD PTR [r14]
   14001e8b7:	add    r14,0x8
   14001e8bb:	mov    QWORD PTR [rsp+0x50],r14
   14001e8c0:	test   rax,rax
   14001e8c3:	je     0x14001e900
   14001e8c5:	mov    rbx,QWORD PTR [rax+0x8]
   14001e8c9:	test   rbx,rbx
   14001e8cc:	je     0x14001e900
   14001e8ce:	mov    edi,0x2d
   14001e8d3:	bt     r12d,0xb
   14001e8d8:	jae    0x14001e8f2
   14001e8da:	movsx  eax,WORD PTR [rax]
   14001e8dd:	mov    DWORD PTR [rsp+0x58],0x1
   14001e8e5:	cdq    
   14001e8e6:	sub    eax,edx
   14001e8e8:	sar    eax,1
   14001e8ea:	mov    r15d,eax
   14001e8ed:	jmp    0x14001e989
   14001e8f2:	movsx  r15d,WORD PTR [rax]
   14001e8f6:	mov    DWORD PTR [rsp+0x58],r10d
   14001e8fb:	jmp    0x14001e989
   14001e900:	mov    rbx,QWORD PTR [rip+0x222e9]        # 0x140040bf0
   14001e907:	mov    rcx,rbx
   14001e90a:	call   0x14001dae0
   14001e90f:	xor    r10d,r10d
   14001e912:	mov    r15,rax
   14001e915:	jmp    0x14001e984
   14001e917:	test   r12d,0x830
   14001e91e:	jne    0x14001e923
   14001e920:	or     r12d,r11d
   14001e923:	cmp    DWORD PTR [rsp+0x44],0xffffffff
   14001e928:	mov    rbx,QWORD PTR [r14]
   14001e92b:	mov    eax,0x7fffffff
   14001e930:	cmove  edi,eax
   14001e933:	add    r14,0x8
   14001e937:	mov    QWORD PTR [rsp+0x50],r14
   14001e93c:	test   r11b,r12b
   14001e93f:	je     0x14001eac6
   14001e945:	test   rbx,rbx
   14001e948:	mov    r15d,r10d
   14001e94b:	cmove  rbx,QWORD PTR [rip+0x2229d]        # 0x140040bf0
   14001e953:	mov    rsi,rbx
   14001e956:	test   edi,edi
   14001e958:	jle    0x14001e980
   14001e95a:	cmp    BYTE PTR [rsi],r10b
   14001e95d:	je     0x14001e980
   14001e95f:	movzx  ecx,BYTE PTR [rsi]
   14001e962:	lea    rdx,[rbp-0x70]
   14001e966:	call   0x140020e3c
   14001e96b:	xor    r10d,r10d
   14001e96e:	test   eax,eax
   14001e970:	je     0x14001e975
   14001e972:	inc    rsi
   14001e975:	inc    r15d
   14001e978:	inc    rsi
   14001e97b:	cmp    r15d,edi
   14001e97e:	jl     0x14001e95a
   14001e980:	mov    esi,DWORD PTR [rsp+0x40]
   14001e984:	mov    edi,0x2d
   14001e989:	cmp    DWORD PTR [rsp+0x70],r10d
   14001e98e:	jne    0x14001ef0a
   14001e994:	test   r12b,0x40
   14001e998:	je     0x14001ede3
   14001e99e:	bt     r12d,0x8
   14001e9a3:	jae    0x14001edb5
   14001e9a9:	mov    WORD PTR [rsp+0x60],di
   14001e9ae:	mov    edi,0x1
   14001e9b3:	mov    DWORD PTR [rsp+0x48],edi
   14001e9b7:	jmp    0x14001ede7
   14001e9bc:	test   r12d,0x830
   14001e9c3:	jne    0x14001e9c8
   14001e9c5:	or     r12d,r11d
   14001e9c8:	movzx  eax,WORD PTR [r14]
   14001e9cc:	add    r14,0x8
   14001e9d0:	mov    DWORD PTR [rsp+0x58],0x1
   14001e9d8:	mov    QWORD PTR [rsp+0x50],r14
   14001e9dd:	mov    WORD PTR [rsp+0x64],ax
   14001e9e2:	test   r11b,r12b
   14001e9e5:	je     0x14001ea1e
   14001e9e7:	mov    BYTE PTR [rsp+0x68],al
   14001e9eb:	mov    rax,QWORD PTR [rbp-0x70]
   14001e9ef:	mov    BYTE PTR [rsp+0x69],r10b
   14001e9f4:	movsxd r8,DWORD PTR [rax+0x10c]
   14001e9fb:	lea    r9,[rbp-0x70]
   14001e9ff:	lea    rdx,[rsp+0x68]
   14001ea04:	lea    rcx,[rbp-0x30]
   14001ea08:	call   0x14002908c
   14001ea0d:	xor    r10d,r10d
   14001ea10:	test   eax,eax
   14001ea12:	jns    0x14001ea22
   14001ea14:	mov    DWORD PTR [rsp+0x70],0x1
   14001ea1c:	jmp    0x14001ea22
   14001ea1e:	mov    WORD PTR [rbp-0x30],ax
   14001ea22:	lea    rbx,[rbp-0x30]
   14001ea26:	mov    r15d,0x1
   14001ea2c:	jmp    0x14001e984
   14001ea31:	mov    DWORD PTR [rbp-0x78],0x1
   14001ea38:	add    r13w,r11w
   14001ea3c:	mov    ecx,0x67
   14001ea41:	or     r12d,0x40
   14001ea45:	lea    rbx,[rbp-0x30]
   14001ea49:	mov    esi,r9d
   14001ea4c:	test   edi,edi
   14001ea4e:	jns    0x14001eca6
   14001ea54:	mov    r15d,0x6
   14001ea5a:	mov    DWORD PTR [rsp+0x44],r15d
   14001ea5f:	jmp    0x14001ecf9
   14001ea64:	cmp    eax,0x65
   14001ea67:	jl     0x14001e984
   14001ea6d:	mov    ecx,0x67
   14001ea72:	cmp    eax,ecx
   14001ea74:	jle    0x14001ea41
   14001ea76:	mov    ecx,0x69
   14001ea7b:	cmp    eax,ecx
   14001ea7d:	je     0x14001eb86
   14001ea83:	cmp    eax,0x6e
   14001ea86:	je     0x14001eb4d
   14001ea8c:	mov    ecx,0x6f
   14001ea91:	cmp    eax,ecx
   14001ea93:	je     0x14001eb37
   14001ea99:	cmp    eax,0x70
   14001ea9c:	je     0x14001eafc
   14001ea9e:	cmp    eax,0x73
   14001eaa1:	je     0x14001e923
   14001eaa7:	mov    ecx,0x75
   14001eaac:	cmp    eax,ecx
   14001eaae:	je     0x14001eb8a
   14001eab4:	mov    ecx,0x78
   14001eab9:	cmp    eax,ecx
   14001eabb:	jne    0x14001e984
   14001eac1:	lea    eax,[rcx-0x51]
   14001eac4:	jmp    0x14001eb0b
   14001eac6:	test   rbx,rbx
   14001eac9:	mov    DWORD PTR [rsp+0x58],0x1
   14001ead1:	cmove  rbx,QWORD PTR [rip+0x2211f]        # 0x140040bf8
   14001ead9:	mov    rax,rbx
   14001eadc:	jmp    0x14001eaea
   14001eade:	dec    edi
   14001eae0:	cmp    WORD PTR [rax],r10w
   14001eae4:	je     0x14001eaee
   14001eae6:	add    rax,0x2
   14001eaea:	test   edi,edi
   14001eaec:	jne    0x14001eade
   14001eaee:	sub    rax,rbx
   14001eaf1:	sar    rax,1
   14001eaf4:	mov    r15d,eax
   14001eaf7:	jmp    0x14001e984
   14001eafc:	mov    edi,0x10
   14001eb01:	bts    r12d,0xf
   14001eb06:	mov    eax,0x7
   14001eb0b:	mov    DWORD PTR [rsp+0x74],eax
   14001eb0f:	mov    r9d,0x10
   14001eb15:	mov    r13d,0x200
   14001eb1b:	test   r12b,r12b
   14001eb1e:	jns    0x14001eb96
   14001eb20:	lea    ecx,[r9+0x20]
   14001eb24:	add    ax,0x51
   14001eb28:	lea    edx,[rcx-0x2e]
   14001eb2b:	mov    WORD PTR [rsp+0x60],cx
   14001eb30:	mov    WORD PTR [rsp+0x62],ax
   14001eb35:	jmp    0x14001eb9a
   14001eb37:	mov    r9d,0x8
   14001eb3d:	test   r12b,r12b
   14001eb40:	jns    0x14001eb90
   14001eb42:	mov    r13d,0x200
   14001eb48:	or     r12d,r13d
   14001eb4b:	jmp    0x14001eb96
   14001eb4d:	mov    rdi,QWORD PTR [r14]
   14001eb50:	add    r14,0x8
   14001eb54:	mov    QWORD PTR [rsp+0x50],r14
   14001eb59:	call   0x140013778
   14001eb5e:	xor    r10d,r10d
   14001eb61:	test   eax,eax
   14001eb63:	je     0x14001e750
   14001eb69:	lea    r11d,[r10+0x20]
   14001eb6d:	test   r11b,r12b
   14001eb70:	je     0x14001eb77
   14001eb72:	mov    WORD PTR [rdi],si
   14001eb75:	jmp    0x14001eb79
   14001eb77:	mov    DWORD PTR [rdi],esi
   14001eb79:	mov    DWORD PTR [rsp+0x70],0x1
   14001eb81:	jmp    0x14001ef10
   14001eb86:	or     r12d,0x40
   14001eb8a:	mov    r9d,0xa
   14001eb90:	mov    r13d,0x200
   14001eb96:	mov    edx,DWORD PTR [rsp+0x48]
   14001eb9a:	mov    eax,0x8000
   14001eb9f:	test   eax,r12d
   14001eba2:	je     0x14001ebad
   14001eba4:	mov    r8,QWORD PTR [r14]
   14001eba7:	add    r14,0x8
   14001ebab:	jmp    0x14001ebe6
   14001ebad:	bt     r12d,0xc
   14001ebb2:	jb     0x14001eba4
   14001ebb4:	add    r14,0x8
   14001ebb8:	test   r11b,r12b
   14001ebbb:	je     0x14001ebd6
   14001ebbd:	mov    QWORD PTR [rsp+0x50],r14
   14001ebc2:	test   r12b,0x40
   14001ebc6:	je     0x14001ebcf
   14001ebc8:	movsx  r8,WORD PTR [r14-0x8]
   14001ebcd:	jmp    0x14001ebeb
   14001ebcf:	movzx  r8d,WORD PTR [r14-0x8]
   14001ebd4:	jmp    0x14001ebeb
   14001ebd6:	test   r12b,0x40
   14001ebda:	je     0x14001ebe2
   14001ebdc:	movsxd r8,DWORD PTR [r14-0x8]
   14001ebe0:	jmp    0x14001ebe6
   14001ebe2:	mov    r8d,DWORD PTR [r14-0x8]
   14001ebe6:	mov    QWORD PTR [rsp+0x50],r14
   14001ebeb:	test   r12b,0x40
   14001ebef:	je     0x14001ebfe
   14001ebf1:	test   r8,r8
   14001ebf4:	jns    0x14001ebfe
   14001ebf6:	neg    r8
   14001ebf9:	bts    r12d,0x8
   14001ebfe:	test   eax,r12d
   14001ec01:	jne    0x14001ec0d
   14001ec03:	bt     r12d,0xc
   14001ec08:	jb     0x14001ec0d
   14001ec0a:	mov    r8d,r8d
   14001ec0d:	test   edi,edi
   14001ec0f:	jns    0x14001ec18
   14001ec11:	mov    edi,0x1
   14001ec16:	jmp    0x14001ec23
   14001ec18:	and    r12d,0xfffffff7
   14001ec1c:	cmp    edi,r13d
   14001ec1f:	cmovg  edi,r13d
   14001ec23:	mov    esi,DWORD PTR [rsp+0x74]
   14001ec27:	mov    rax,r8
   14001ec2a:	lea    rbx,[rbp+0x1cf]
   14001ec31:	neg    rax
   14001ec34:	sbb    ecx,ecx
   14001ec36:	and    ecx,edx
   14001ec38:	mov    DWORD PTR [rsp+0x48],ecx
   14001ec3c:	mov    ecx,edi
   14001ec3e:	dec    edi
   14001ec40:	test   ecx,ecx
   14001ec42:	jg     0x14001ec49
   14001ec44:	test   r8,r8
   14001ec47:	je     0x14001ec68
   14001ec49:	xor    edx,edx
   14001ec4b:	mov    rax,r8
   14001ec4e:	movsxd rcx,r9d
   14001ec51:	div    rcx
   14001ec54:	mov    r8,rax
   14001ec57:	lea    eax,[rdx+0x30]
   14001ec5a:	cmp    eax,0x39
   14001ec5d:	jle    0x14001ec61
   14001ec5f:	add    eax,esi
   14001ec61:	mov    BYTE PTR [rbx],al
   14001ec63:	dec    rbx
   14001ec66:	jmp    0x14001ec3c
   14001ec68:	mov    esi,DWORD PTR [rsp+0x40]
   14001ec6c:	lea    rax,[rbp+0x1cf]
   14001ec73:	mov    DWORD PTR [rsp+0x44],edi
   14001ec77:	sub    eax,ebx
   14001ec79:	inc    rbx
   14001ec7c:	mov    r15d,eax
   14001ec7f:	test   r13d,r12d
   14001ec82:	je     0x14001e984
   14001ec88:	test   eax,eax
   14001ec8a:	mov    eax,0x30
   14001ec8f:	je     0x14001ec99
   14001ec91:	cmp    BYTE PTR [rbx],al
   14001ec93:	je     0x14001e984
   14001ec99:	dec    rbx
   14001ec9c:	inc    r15d
   14001ec9f:	mov    BYTE PTR [rbx],al
   14001eca1:	jmp    0x14001e984
   14001eca6:	jne    0x14001ecb9
   14001eca8:	cmp    r13w,cx
   14001ecac:	jne    0x14001ecef
   14001ecae:	mov    r15d,0x1
   14001ecb4:	jmp    0x14001ea5a
   14001ecb9:	cmp    edi,r9d
   14001ecbc:	mov    r15d,0xa3
   14001ecc2:	cmovg  edi,r9d
   14001ecc6:	mov    DWORD PTR [rsp+0x44],edi
   14001ecca:	cmp    edi,r15d
   14001eccd:	jle    0x14001ecf6
   14001eccf:	add    edi,0x15d
   14001ecd5:	movsxd rcx,edi
   14001ecd8:	call   0x140020c28
   14001ecdd:	mov    QWORD PTR [rbp-0x50],rax
   14001ece1:	test   rax,rax
   14001ece4:	je     0x14001ea5a
   14001ecea:	mov    rbx,rax
   14001eced:	mov    esi,edi
   14001ecef:	mov    r15d,DWORD PTR [rsp+0x44]
   14001ecf4:	jmp    0x14001ecf9
   14001ecf6:	mov    r15d,edi
   14001ecf9:	mov    rax,QWORD PTR [r14]
   14001ecfc:	mov    rcx,QWORD PTR [rip+0x21f2d]        # 0x140040c30
   14001ed03:	add    r14,0x8
   14001ed07:	mov    QWORD PTR [rsp+0x50],r14
   14001ed0c:	movsx  edi,r13b
   14001ed10:	movsxd rsi,esi
   14001ed13:	mov    QWORD PTR [rbp-0x40],rax
   14001ed17:	call   QWORD PTR [rip+0x1054b]        # 0x14002f268
   14001ed1d:	lea    rcx,[rbp-0x70]
   14001ed21:	mov    QWORD PTR [rsp+0x30],rcx
   14001ed26:	mov    ecx,DWORD PTR [rbp-0x78]
   14001ed29:	mov    r9d,edi
   14001ed2c:	mov    DWORD PTR [rsp+0x28],ecx
   14001ed30:	lea    rcx,[rbp-0x40]
   14001ed34:	mov    r8,rsi
   14001ed37:	mov    rdx,rbx
   14001ed3a:	mov    DWORD PTR [rsp+0x20],r15d
   14001ed3f:	call   rax
   14001ed41:	mov    edi,r12d
   14001ed44:	and    edi,0x80
   14001ed4a:	je     0x14001ed67
   14001ed4c:	test   r15d,r15d
   14001ed4f:	jne    0x14001ed67
   14001ed51:	mov    rcx,QWORD PTR [rip+0x21ef0]        # 0x140040c48
   14001ed58:	call   QWORD PTR [rip+0x1050a]        # 0x14002f268
   14001ed5e:	lea    rdx,[rbp-0x70]
   14001ed62:	mov    rcx,rbx
   14001ed65:	call   rax
   14001ed67:	mov    ecx,0x67
   14001ed6c:	cmp    r13w,cx
   14001ed70:	jne    0x14001ed8c
   14001ed72:	test   edi,edi
   14001ed74:	jne    0x14001ed8c
   14001ed76:	mov    rcx,QWORD PTR [rip+0x21ec3]        # 0x140040c40
   14001ed7d:	call   QWORD PTR [rip+0x104e5]        # 0x14002f268
   14001ed83:	lea    rdx,[rbp-0x70]
   14001ed87:	mov    rcx,rbx
   14001ed8a:	call   rax
   14001ed8c:	mov    edi,0x2d
   14001ed91:	cmp    BYTE PTR [rbx],dil
   14001ed94:	jne    0x14001ed9e
   14001ed96:	bts    r12d,0x8
   14001ed9b:	inc    rbx
   14001ed9e:	mov    rcx,rbx
   14001eda1:	call   0x14001dae0
   14001eda6:	mov    esi,DWORD PTR [rsp+0x40]
   14001edaa:	xor    r10d,r10d
   14001edad:	mov    r15d,eax
   14001edb0:	jmp    0x14001e989
   14001edb5:	test   r12b,0x1
   14001edb9:	je     0x14001edca
   14001edbb:	mov    eax,0x2b
   14001edc0:	mov    WORD PTR [rsp+0x60],ax
   14001edc5:	jmp    0x14001e9ae
   14001edca:	test   r12b,0x2
   14001edce:	je     0x14001ede3
   14001edd0:	mov    eax,0x20
   14001edd5:	mov    WORD PTR [rsp+0x60],ax
   14001edda:	lea    edi,[rax-0x1f]
   14001eddd:	mov    DWORD PTR [rsp+0x48],edi
   14001ede1:	jmp    0x14001edec
   14001ede3:	mov    edi,DWORD PTR [rsp+0x48]
   14001ede7:	mov    eax,0x20
   14001edec:	mov    r14d,DWORD PTR [rsp+0x5c]
   14001edf1:	mov    r13,QWORD PTR [rsp+0x78]
   14001edf6:	sub    r14d,r15d
   14001edf9:	sub    r14d,edi
   14001edfc:	test   r12b,0xc
   14001ee00:	jne    0x14001ee14
   14001ee02:	lea    r9,[rsp+0x40]
   14001ee07:	mov    ecx,eax
   14001ee09:	mov    r8,r13
   14001ee0c:	mov    edx,r14d
   14001ee0f:	call   0x140025750
   14001ee14:	mov    rsi,QWORD PTR [rbp-0x48]
   14001ee18:	lea    r9,[rsp+0x40]
   14001ee1d:	lea    rcx,[rsp+0x60]
   14001ee22:	mov    r8,r13
   14001ee25:	mov    edx,edi
   14001ee27:	mov    QWORD PTR [rsp+0x20],rsi
   14001ee2c:	call   0x14001e634
   14001ee31:	test   r12b,0x8
   14001ee35:	je     0x14001ee52
   14001ee37:	test   r12b,0x4
   14001ee3b:	jne    0x14001ee52
   14001ee3d:	lea    r9,[rsp+0x40]
   14001ee42:	mov    ecx,0x30
   14001ee47:	mov    r8,r13
   14001ee4a:	mov    edx,r14d
   14001ee4d:	call   0x140025750
   14001ee52:	xor    eax,eax
   14001ee54:	cmp    DWORD PTR [rsp+0x58],eax
   14001ee58:	jne    0x14001eec0
   14001ee5a:	test   r15d,r15d
   14001ee5d:	jle    0x14001eec0
   14001ee5f:	mov    rdi,rbx
   14001ee62:	mov    esi,r15d
   14001ee65:	mov    rax,QWORD PTR [rbp-0x70]
   14001ee69:	lea    r9,[rbp-0x70]
   14001ee6d:	lea    rcx,[rsp+0x64]
   14001ee72:	movsxd r8,DWORD PTR [rax+0x10c]
   14001ee79:	mov    rdx,rdi
   14001ee7c:	dec    esi
   14001ee7e:	call   0x14002908c
   14001ee83:	xor    r10d,r10d
   14001ee86:	movsxd r13,eax
   14001ee89:	test   eax,eax
   14001ee8b:	jle    0x14001eeb2
   14001ee8d:	mov    rdx,QWORD PTR [rsp+0x78]
   14001ee92:	movzx  ecx,WORD PTR [rsp+0x64]
   14001ee97:	lea    r8,[rsp+0x40]
   14001ee9c:	call   0x140025718
   14001eea1:	add    rdi,r13
   14001eea4:	xor    r10d,r10d
   14001eea7:	test   esi,esi
   14001eea9:	jg     0x14001ee65
   14001eeab:	mov    r13,QWORD PTR [rsp+0x78]
   14001eeb0:	jmp    0x14001eedb
   14001eeb2:	mov    r13,QWORD PTR [rsp+0x78]
   14001eeb7:	or     esi,0xffffffff
   14001eeba:	mov    DWORD PTR [rsp+0x40],esi
   14001eebe:	jmp    0x14001eedf
   14001eec0:	lea    r9,[rsp+0x40]
   14001eec5:	mov    r8,r13
   14001eec8:	mov    edx,r15d
   14001eecb:	mov    rcx,rbx
   14001eece:	mov    QWORD PTR [rsp+0x20],rsi
   14001eed3:	call   0x14001e634
   14001eed8:	xor    r10d,r10d
   14001eedb:	mov    esi,DWORD PTR [rsp+0x40]
   14001eedf:	test   esi,esi
   14001eee1:	js     0x14001ef05
   14001eee3:	test   r12b,0x4
   14001eee7:	je     0x14001ef05
   14001eee9:	lea    r9,[rsp+0x40]
   14001eeee:	mov    ecx,0x20
   14001eef3:	mov    r8,r13
   14001eef6:	mov    edx,r14d
   14001eef9:	call   0x140025750
   14001eefe:	mov    esi,DWORD PTR [rsp+0x40]
   14001ef02:	xor    r10d,r10d
   14001ef05:	mov    r14,QWORD PTR [rsp+0x50]
   14001ef0a:	mov    r11d,0x20
   14001ef10:	mov    rax,QWORD PTR [rbp-0x50]
   14001ef14:	test   rax,rax
   14001ef17:	je     0x14001f162
   14001ef1d:	mov    rcx,rax
   14001ef20:	call   0x1400130a8
   14001ef25:	mov    edi,DWORD PTR [rsp+0x44]
   14001ef29:	xor    r10d,r10d
   14001ef2c:	mov    QWORD PTR [rbp-0x50],r10
   14001ef30:	mov    r11d,0x20
   14001ef36:	jmp    0x14001f166
   14001ef3b:	movzx  eax,r13w
   14001ef3f:	cmp    eax,0x49
   14001ef42:	je     0x14001ef94
   14001ef44:	cmp    eax,0x68
   14001ef47:	je     0x14001ef8c
   14001ef49:	mov    ecx,0x6c
   14001ef4e:	cmp    eax,ecx
   14001ef50:	je     0x14001ef6a
   14001ef52:	mov    ecx,0x58
   14001ef57:	cmp    eax,0x77
   14001ef5a:	jne    0x14001f179
   14001ef60:	bts    r12d,0xb
   14001ef65:	jmp    0x14001f179
   14001ef6a:	cmp    WORD PTR [r8],cx
   14001ef6e:	mov    ecx,0x58
   14001ef73:	jne    0x14001ef83
   14001ef75:	add    r8,0x2
   14001ef79:	bts    r12d,0xc
   14001ef7e:	jmp    0x14001f179
   14001ef83:	or     r12d,0x10
   14001ef87:	jmp    0x14001f179
   14001ef8c:	or     r12d,r11d
   14001ef8f:	jmp    0x14001f174
   14001ef94:	bts    r12d,0xf
   14001ef99:	cmp    WORD PTR [r8],0x36
   14001ef9e:	jne    0x14001efb6
   14001efa0:	cmp    WORD PTR [r8+0x2],0x34
   14001efa6:	jne    0x14001efb6
   14001efa8:	add    r8,0x4
   14001efac:	bts    r12d,0xf
   14001efb1:	jmp    0x14001f174
   14001efb6:	cmp    WORD PTR [r8],0x33
   14001efbb:	jne    0x14001efd3
   14001efbd:	cmp    WORD PTR [r8+0x2],0x32
   14001efc3:	jne    0x14001efd3
   14001efc5:	add    r8,0x4
   14001efc9:	btr    r12d,0xf
   14001efce:	jmp    0x14001f174
   14001efd3:	mov    eax,0x64
   14001efd8:	cmp    WORD PTR [r8],ax
   14001efdc:	je     0x14001f174
   14001efe2:	mov    eax,0x69
   14001efe7:	cmp    WORD PTR [r8],ax
   14001efeb:	je     0x14001f174
   14001eff1:	mov    eax,0x6f
   14001eff6:	cmp    WORD PTR [r8],ax
   14001effa:	je     0x14001f174
   14001f000:	mov    eax,0x75
   14001f005:	lea    ecx,[rax-0x1d]
   14001f008:	cmp    WORD PTR [r8],ax
   14001f00c:	je     0x14001f179
   14001f012:	lea    eax,[rcx+0x20]
   14001f015:	cmp    WORD PTR [r8],ax
   14001f019:	je     0x14001f179
   14001f01f:	cmp    WORD PTR [r8],cx
   14001f023:	je     0x14001f179
   14001f029:	mov    DWORD PTR [rsp+0x6c],r10d
   14001f02e:	mov    rdx,QWORD PTR [rsp+0x78]
   14001f033:	lea    r8,[rsp+0x40]
   14001f038:	movzx  ecx,r13w
   14001f03c:	mov    DWORD PTR [rsp+0x58],0x1
   14001f044:	call   0x140025718
   14001f049:	mov    esi,DWORD PTR [rsp+0x40]
   14001f04d:	xor    r10d,r10d
   14001f050:	jmp    0x14001ef30
   14001f055:	cmp    r13w,0x2a
   14001f05a:	jne    0x14001f085
   14001f05c:	mov    edi,DWORD PTR [r14]
   14001f05f:	add    r14,0x8
   14001f063:	mov    ecx,0x58
   14001f068:	mov    QWORD PTR [rsp+0x50],r14
   14001f06d:	mov    DWORD PTR [rsp+0x44],edi
   14001f071:	test   edi,edi
   14001f073:	jns    0x14001f179
   14001f079:	or     edi,0xffffffff
   14001f07c:	mov    DWORD PTR [rsp+0x44],edi
   14001f080:	jmp    0x14001f179
   14001f085:	lea    ecx,[rdi+rdi*4]
   14001f088:	movzx  eax,r13w
   14001f08c:	lea    edi,[rax+rcx*2-0x30]
   14001f090:	mov    DWORD PTR [rsp+0x44],edi
   14001f094:	jmp    0x14001f174
   14001f099:	mov    edi,r10d
   14001f09c:	mov    DWORD PTR [rsp+0x44],r10d
   14001f0a1:	jmp    0x14001f174
   14001f0a6:	cmp    r13w,0x2a
   14001f0ab:	jne    0x14001f0d9
   14001f0ad:	mov    eax,DWORD PTR [r14]
   14001f0b0:	add    r14,0x8
   14001f0b4:	mov    ecx,0x58
   14001f0b9:	mov    QWORD PTR [rsp+0x50],r14
   14001f0be:	mov    DWORD PTR [rsp+0x5c],eax
   14001f0c2:	test   eax,eax
   14001f0c4:	jns    0x14001f179
   14001f0ca:	or     r12d,0x4
   14001f0ce:	neg    eax
   14001f0d0:	mov    DWORD PTR [rsp+0x5c],eax
   14001f0d4:	jmp    0x14001f179
   14001f0d9:	mov    eax,DWORD PTR [rsp+0x5c]
   14001f0dd:	lea    ecx,[rax+rax*4]
   14001f0e0:	movzx  eax,r13w
   14001f0e4:	lea    eax,[rax+rcx*2-0x30]
   14001f0e8:	mov    DWORD PTR [rsp+0x5c],eax
   14001f0ec:	jmp    0x14001f174
   14001f0f1:	movzx  eax,r13w
   14001f0f5:	cmp    eax,r11d
   14001f0f8:	je     0x14001f138
   14001f0fa:	cmp    eax,0x23
   14001f0fd:	je     0x14001f131
   14001f0ff:	mov    ecx,0x2b
   14001f104:	cmp    eax,ecx
   14001f106:	je     0x14001f12b
   14001f108:	mov    ecx,0x2d
   14001f10d:	cmp    eax,ecx
   14001f10f:	je     0x14001f125
   14001f111:	mov    ecx,0x30
   14001f116:	cmp    eax,ecx
   14001f118:	mov    ecx,0x58
   14001f11d:	jne    0x14001f179
   14001f11f:	or     r12d,0x8
   14001f123:	jmp    0x14001f179
   14001f125:	or     r12d,0x4
   14001f129:	jmp    0x14001f174
   14001f12b:	or     r12d,0x1
   14001f12f:	jmp    0x14001f174
   14001f131:	bts    r12d,0x7
   14001f136:	jmp    0x14001f174
   14001f138:	or     r12d,0x2
   14001f13c:	jmp    0x14001f174
   14001f13e:	or     edi,0xffffffff
   14001f141:	mov    DWORD PTR [rbp-0x78],r10d
   14001f145:	mov    DWORD PTR [rsp+0x70],r10d
   14001f14a:	mov    DWORD PTR [rsp+0x5c],r10d
   14001f14f:	mov    DWORD PTR [rsp+0x48],r10d
   14001f154:	mov    r12d,r10d
   14001f157:	mov    DWORD PTR [rsp+0x44],edi
   14001f15b:	mov    DWORD PTR [rsp+0x58],r10d
   14001f160:	jmp    0x14001f174
   14001f162:	mov    edi,DWORD PTR [rsp+0x44]
   14001f166:	mov    edx,DWORD PTR [rsp+0x6c]
   14001f16a:	mov    r8,QWORD PTR [rbp-0x80]
   14001f16e:	mov    r9d,0x200
   14001f174:	mov    ecx,0x58
   14001f179:	movzx  r13d,WORD PTR [r8]
   14001f17d:	test   r13w,r13w
   14001f181:	jne    0x14001e7b8
   14001f187:	cmp    BYTE PTR [rbp-0x58],r10b
   14001f18b:	je     0x14001f198
   14001f18d:	mov    rcx,QWORD PTR [rbp-0x60]
   14001f191:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001f198:	mov    eax,esi
   14001f19a:	mov    rcx,QWORD PTR [rbp+0x3d0]
   14001f1a1:	xor    rcx,rsp
   14001f1a4:	call   0x140012670
   14001f1a9:	mov    rbx,QWORD PTR [rsp+0x530]
   14001f1b1:	add    rsp,0x4e0
   14001f1b8:	pop    r15
   14001f1ba:	pop    r14
   14001f1bc:	pop    r13
   14001f1be:	pop    r12
   14001f1c0:	pop    rdi
   14001f1c1:	pop    rsi
   14001f1c2:	pop    rbp
   14001f1c3:	ret    
   14001f1c4:	mov    QWORD PTR [rsp+0x8],rbx
   14001f1c9:	mov    QWORD PTR [rsp+0x10],rsi
   14001f1ce:	push   rdi
   14001f1cf:	sub    rsp,0x20
   14001f1d3:	mov    rsi,r9
   14001f1d6:	mov    rdi,r8
   14001f1d9:	mov    rbx,rdx
   14001f1dc:	cmp    rcx,QWORD PTR [rdx]
   14001f1df:	jne    0x14001f248
   14001f1e1:	cmp    QWORD PTR [r8],r9
   14001f1e4:	jne    0x14001f226
   14001f1e6:	mov    rcx,QWORD PTR [rbx]
   14001f1e9:	mov    edx,0x4
   14001f1ee:	call   0x140020ca8
   14001f1f3:	mov    QWORD PTR [rdi],rax
   14001f1f6:	test   rax,rax
   14001f1f9:	jne    0x14001f1ff
   14001f1fb:	xor    eax,eax
   14001f1fd:	jmp    0x14001f24d
   14001f1ff:	mov    rax,QWORD PTR [rsp+0x50]
   14001f204:	mov    rdx,rsi
   14001f207:	mov    DWORD PTR [rax],0x1
   14001f20d:	mov    r8,QWORD PTR [rbx]
   14001f210:	mov    rcx,QWORD PTR [rdi]
   14001f213:	add    r8,r8
   14001f216:	call   0x140018e00
   14001f21b:	mov    r11,QWORD PTR [rbx]
   14001f21e:	add    r11,r11
   14001f221:	mov    QWORD PTR [rbx],r11
   14001f224:	jmp    0x14001f248
   14001f226:	mov    rdx,QWORD PTR [rdx]
   14001f229:	mov    rcx,QWORD PTR [rdi]
   14001f22c:	mov    r8d,0x4
   14001f232:	call   0x140020db4
   14001f237:	test   rax,rax
   14001f23a:	je     0x14001f1fb
   14001f23c:	mov    QWORD PTR [rdi],rax
   14001f23f:	mov    rcx,QWORD PTR [rbx]
   14001f242:	add    rcx,rcx
   14001f245:	mov    QWORD PTR [rbx],rcx
   14001f248:	mov    eax,0x1
   14001f24d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f252:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f257:	add    rsp,0x20
   14001f25b:	pop    rdi
   14001f25c:	ret    
   14001f25d:	int3   
   14001f25e:	int3   
   14001f25f:	int3   
   14001f260:	mov    QWORD PTR [rsp+0x8],rbx
   14001f265:	mov    QWORD PTR [rsp+0x10],rsi
   14001f26a:	push   rdi
   14001f26b:	sub    rsp,0x20
   14001f26f:	mov    rsi,rdx
   14001f272:	mov    rdi,rcx
   14001f275:	inc    DWORD PTR [rdi]
   14001f277:	mov    rcx,rsi
   14001f27a:	call   0x14002224c
   14001f27f:	movzx  ebx,ax
   14001f282:	mov    eax,0xffff
   14001f287:	cmp    bx,ax
   14001f28a:	je     0x14001f29d
   14001f28c:	mov    edx,0x8
   14001f291:	movzx  ecx,bx
   14001f294:	call   0x140013350
   14001f299:	test   eax,eax
   14001f29b:	jne    0x14001f275
   14001f29d:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f2a2:	movzx  eax,bx
   14001f2a5:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f2aa:	add    rsp,0x20
   14001f2ae:	pop    rdi
   14001f2af:	ret    
   14001f2b0:	mov    QWORD PTR [rsp+0x18],rbx
   14001f2b5:	push   rbp
   14001f2b6:	push   rsi
   14001f2b7:	push   rdi
   14001f2b8:	push   r12
   14001f2ba:	push   r13
   14001f2bc:	push   r14
   14001f2be:	push   r15
   14001f2c0:	lea    rbp,[rsp-0x2c0]
   14001f2c8:	sub    rsp,0x3c0
   14001f2cf:	mov    rax,QWORD PTR [rip+0x2065a]        # 0x14003f930
   14001f2d6:	xor    rax,rsp
   14001f2d9:	mov    QWORD PTR [rbp+0x2b0],rax
   14001f2e0:	lea    r12,[rbp-0x10]
   14001f2e4:	mov    QWORD PTR [rbp-0x48],r9
   14001f2e8:	mov    rbx,rdx
   14001f2eb:	mov    QWORD PTR [rbp-0x78],r12
   14001f2ef:	xor    r12d,r12d
   14001f2f2:	mov    QWORD PTR [rsp+0x68],rdx
   14001f2f7:	mov    eax,r12d
   14001f2fa:	movzx  esi,r12w
   14001f2fe:	mov    rdi,rcx
   14001f301:	mov    QWORD PTR [rsp+0x78],rcx
   14001f306:	mov    QWORD PTR [rbp-0x58],0x15e
   14001f30e:	mov    DWORD PTR [rbp-0x70],r12d
   14001f312:	mov    DWORD PTR [rbp-0x50],eax
   14001f315:	mov    DWORD PTR [rsp+0x3c],esi
   14001f319:	mov    QWORD PTR [rsp+0x70],r12
   14001f31e:	test   rdx,rdx
   14001f321:	jne    0x14001f33b
   14001f323:	call   0x14001583c
   14001f328:	mov    DWORD PTR [rax],0x16
   14001f32e:	call   0x140019f74
   14001f333:	or     eax,0xffffffff
   14001f336:	jmp    0x1400204a3
   14001f33b:	test   rcx,rcx
   14001f33e:	je     0x14001f323
   14001f340:	lea    rcx,[rbp-0x30]
   14001f344:	mov    rdx,r8
   14001f347:	call   0x140012690
   14001f34c:	movzx  eax,WORD PTR [rbx]
   14001f34f:	mov    BYTE PTR [rsp+0x40],r12b
   14001f354:	mov    r15d,r12d
   14001f357:	mov    DWORD PTR [rsp+0x34],r12d
   14001f35c:	mov    DWORD PTR [rsp+0x44],r12d
   14001f361:	mov    r13d,r12d
   14001f364:	mov    DWORD PTR [rbp-0x80],r12d
   14001f368:	test   ax,ax
   14001f36b:	je     0x14002048f
   14001f371:	mov    r14d,0xffff
   14001f377:	mov    r13d,0x1
   14001f37d:	mov    r12d,0x25
   14001f383:	movzx  ecx,ax
   14001f386:	lea    edx,[r12-0x1d]
   14001f38b:	call   0x140013350
   14001f390:	xor    r8d,r8d
   14001f393:	test   eax,eax
   14001f395:	je     0x14001f3ea
   14001f397:	lea    rcx,[rsp+0x44]
   14001f39c:	sub    r15d,r13d
   14001f39f:	mov    rdx,rdi
   14001f3a2:	mov    DWORD PTR [rsp+0x44],r15d
   14001f3a7:	call   0x14001f260
   14001f3ac:	cmp    r14w,ax
   14001f3b0:	je     0x14001f3bd
   14001f3b2:	mov    rdx,rdi
   14001f3b5:	movzx  ecx,ax
   14001f3b8:	call   0x14002920c
   14001f3bd:	add    rbx,0x2
   14001f3c1:	mov    edx,0x8
   14001f3c6:	movzx  ecx,WORD PTR [rbx]
   14001f3c9:	call   0x140013350
   14001f3ce:	test   eax,eax
   14001f3d0:	jne    0x14001f3bd
   14001f3d2:	mov    r15d,DWORD PTR [rsp+0x44]
   14001f3d7:	mov    esi,DWORD PTR [rsp+0x3c]
   14001f3db:	mov    QWORD PTR [rsp+0x68],rbx
   14001f3e0:	mov    DWORD PTR [rsp+0x34],r15d
   14001f3e5:	jmp    0x14002041c
   14001f3ea:	mov    r10,QWORD PTR [rsp+0x68]
   14001f3ef:	cmp    r12w,WORD PTR [r10]
   14001f3f3:	jne    0x1400203cd
   14001f3f9:	cmp    r12w,WORD PTR [r10+0x2]
   14001f3fe:	je     0x1400203b6
   14001f404:	movzx  r13d,r8w
   14001f408:	mov    r15b,r8b
   14001f40b:	mov    eax,r8d
   14001f40e:	mov    edx,r8d
   14001f411:	mov    r9d,0x1
   14001f417:	mov    DWORD PTR [rbp-0x40],r13d
   14001f41b:	mov    DWORD PTR [rbp-0x60],r15d
   14001f41f:	mov    DWORD PTR [rsp+0x4c],eax
   14001f423:	mov    DWORD PTR [rsp+0x60],r8d
   14001f428:	mov    r13b,r9b
   14001f42b:	mov    r15d,r8d
   14001f42e:	mov    DWORD PTR [rsp+0x58],edx
   14001f432:	mov    r14d,r8d
   14001f435:	mov    BYTE PTR [rsp+0x5c],r8b
   14001f43a:	mov    BYTE PTR [rsp+0x48],r8b
   14001f43f:	mov    BYTE PTR [rsp+0x30],al
   14001f443:	mov    dil,r8b
   14001f446:	mov    r12b,r8b
   14001f449:	or     esi,0xffffffff
   14001f44c:	add    r10,0x2
   14001f450:	mov    ecx,0xff00
   14001f455:	movzx  ebx,WORD PTR [r10]
   14001f459:	mov    QWORD PTR [rsp+0x68],r10
   14001f45e:	test   cx,bx
   14001f461:	jne    0x14001f498
   14001f463:	movzx  ecx,bl
   14001f466:	call   0x140015408
   14001f46b:	mov    edx,DWORD PTR [rsp+0x58]
   14001f46f:	mov    r10,QWORD PTR [rsp+0x68]
   14001f474:	xor    r8d,r8d
   14001f477:	lea    r9d,[r8+0x1]
   14001f47b:	test   eax,eax
   14001f47d:	je     0x14001f494
   14001f47f:	lea    eax,[r14+r14*4]
   14001f483:	add    edx,r9d
   14001f486:	lea    r14d,[rbx+rax*2-0x30]
   14001f48b:	mov    DWORD PTR [rsp+0x58],edx
   14001f48f:	jmp    0x14001f58b
   14001f494:	mov    al,BYTE PTR [rsp+0x30]
   14001f498:	cmp    ebx,0x2a
   14001f49b:	je     0x14001f584
   14001f4a1:	cmp    ebx,0x46
   14001f4a4:	je     0x14001f58b
   14001f4aa:	cmp    ebx,0x49
   14001f4ad:	je     0x14001f506
   14001f4af:	cmp    ebx,0x4c
   14001f4b2:	je     0x14001f4fe
   14001f4b4:	cmp    ebx,0x4e
   14001f4b7:	je     0x14001f58b
   14001f4bd:	cmp    ebx,0x68
   14001f4c0:	je     0x14001f4f3
   14001f4c2:	mov    ecx,0x6c
   14001f4c7:	cmp    ebx,ecx
   14001f4c9:	je     0x14001f4d5
   14001f4cb:	cmp    ebx,0x77
   14001f4ce:	je     0x14001f4eb
   14001f4d0:	jmp    0x14001f57f
   14001f4d5:	lea    rax,[r10+0x2]
   14001f4d9:	cmp    WORD PTR [rax],cx
   14001f4dc:	jne    0x14001f4e8
   14001f4de:	mov    r10,rax
   14001f4e1:	mov    QWORD PTR [rsp+0x68],rax
   14001f4e6:	jmp    0x14001f523
   14001f4e8:	add    r13b,r9b
   14001f4eb:	add    r12b,r9b
   14001f4ee:	jmp    0x14001f58b
   14001f4f3:	add    r13b,sil
   14001f4f6:	add    r12b,sil
   14001f4f9:	jmp    0x14001f58b
   14001f4fe:	add    r13b,r9b
   14001f501:	jmp    0x14001f58b
   14001f506:	movzx  eax,WORD PTR [r10+0x2]
   14001f50b:	cmp    ax,0x36
   14001f50f:	jne    0x14001f52c
   14001f511:	lea    rcx,[r10+0x4]
   14001f515:	cmp    WORD PTR [rcx],0x34
   14001f519:	jne    0x14001f52c
   14001f51b:	mov    r10,rcx
   14001f51e:	mov    QWORD PTR [rsp+0x68],rcx
   14001f523:	add    r15d,r9d
   14001f526:	mov    QWORD PTR [rbp-0x68],r8
   14001f52a:	jmp    0x14001f58b
   14001f52c:	cmp    ax,0x33
   14001f530:	jne    0x14001f546
   14001f532:	lea    rcx,[r10+0x4]
   14001f536:	cmp    WORD PTR [rcx],0x32
   14001f53a:	jne    0x14001f546
   14001f53c:	mov    r10,rcx
   14001f53f:	mov    QWORD PTR [rsp+0x68],rcx
   14001f544:	jmp    0x14001f58b
   14001f546:	mov    ecx,0x64
   14001f54b:	cmp    ax,cx
   14001f54e:	je     0x14001f523
   14001f550:	mov    ecx,0x69
   14001f555:	cmp    ax,cx
   14001f558:	je     0x14001f523
   14001f55a:	mov    ecx,0x6f
   14001f55f:	cmp    ax,cx
   14001f562:	je     0x14001f523
   14001f564:	mov    ecx,0x78
   14001f569:	cmp    ax,cx
   14001f56c:	je     0x14001f523
   14001f56e:	mov    ecx,0x58
   14001f573:	cmp    ax,cx
   14001f576:	je     0x14001f523
   14001f578:	add    r15d,r9d
   14001f57b:	mov    QWORD PTR [rbp-0x68],r8
   14001f57f:	add    dil,r9b
   14001f582:	jmp    0x14001f58b
   14001f584:	add    al,r9b
   14001f587:	mov    BYTE PTR [rsp+0x30],al
   14001f58b:	mov    al,BYTE PTR [rsp+0x30]
   14001f58f:	test   dil,dil
   14001f592:	je     0x14001f44c
   14001f598:	mov    esi,DWORD PTR [rsp+0x3c]
   14001f59c:	mov    BYTE PTR [rsp+0x38],r13b
   14001f5a1:	mov    r13d,DWORD PTR [rbp-0x40]
   14001f5a5:	mov    DWORD PTR [rsp+0x54],r15d
   14001f5aa:	mov    r15d,DWORD PTR [rbp-0x60]
   14001f5ae:	mov    DWORD PTR [rsp+0x50],r14d
   14001f5b3:	mov    cl,al
   14001f5b5:	test   al,al
   14001f5b7:	jne    0x14001f5d3
   14001f5b9:	mov    rax,QWORD PTR [rbp-0x48]
   14001f5bd:	mov    QWORD PTR [rbp-0x38],rax
   14001f5c1:	add    rax,0x8
   14001f5c5:	mov    QWORD PTR [rbp-0x48],rax
   14001f5c9:	mov    rax,QWORD PTR [rax-0x8]
   14001f5cd:	mov    QWORD PTR [rbp-0x60],rax
   14001f5d1:	jmp    0x14001f5d7
   14001f5d3:	mov    QWORD PTR [rbp-0x60],r8
   14001f5d7:	mov    bl,r8b
   14001f5da:	test   r12b,r12b
   14001f5dd:	jne    0x14001f5f3
   14001f5df:	cmp    WORD PTR [r10],0x53
   14001f5e4:	je     0x14001f5f0
   14001f5e6:	cmp    WORD PTR [r10],0x43
   14001f5eb:	mov    r12b,r9b
   14001f5ee:	jne    0x14001f5f3
   14001f5f0:	mov    r12b,0xff
   14001f5f3:	movzx  r14d,WORD PTR [r10]
   14001f5f7:	mov    r11d,0x6e
   14001f5fd:	or     r14d,0x20
   14001f601:	cmp    r14d,r11d
   14001f604:	je     0x14001f674
   14001f606:	cmp    r14d,0x63
   14001f60a:	je     0x14001f62e
   14001f60c:	cmp    r14d,0x7b
   14001f610:	je     0x14001f62e
   14001f612:	mov    rdx,QWORD PTR [rsp+0x78]
   14001f617:	lea    rcx,[rsp+0x44]
   14001f61c:	call   0x14001f260
   14001f621:	movzx  esi,ax
   14001f624:	mov    eax,DWORD PTR [rsp+0x44]
   14001f628:	mov    DWORD PTR [rsp+0x34],eax
   14001f62c:	jmp    0x14001f64a
   14001f62e:	mov    eax,DWORD PTR [rsp+0x34]
   14001f632:	mov    rcx,QWORD PTR [rsp+0x78]
   14001f637:	add    eax,r9d
   14001f63a:	mov    DWORD PTR [rsp+0x34],eax
   14001f63e:	mov    DWORD PTR [rsp+0x44],eax
   14001f642:	call   0x14002224c
   14001f647:	movzx  esi,ax
   14001f64a:	mov    eax,0xffff
   14001f64f:	mov    DWORD PTR [rsp+0x3c],esi
   14001f653:	cmp    ax,si
   14001f656:	je     0x14002047b
   14001f65c:	mov    r10,QWORD PTR [rsp+0x68]
   14001f661:	mov    edx,DWORD PTR [rsp+0x58]
   14001f665:	mov    cl,BYTE PTR [rsp+0x30]
   14001f669:	xor    r8d,r8d
   14001f66c:	lea    r9d,[r8+0x1]
   14001f670:	lea    r11d,[r8+0x6e]
   14001f674:	mov    edi,DWORD PTR [rsp+0x50]
   14001f678:	test   edx,edx
   14001f67a:	je     0x14001f684
   14001f67c:	test   edi,edi
   14001f67e:	je     0x140020435
   14001f684:	mov    eax,0x6f
   14001f689:	cmp    r14d,eax
   14001f68c:	jg     0x14001fb72
   14001f692:	je     0x1400200d1
   14001f698:	cmp    r14d,0x63
   14001f69c:	je     0x14001fb51
   14001f6a2:	mov    eax,0x64
   14001f6a7:	cmp    r14d,eax
   14001f6aa:	je     0x1400200d1
   14001f6b0:	jle    0x14001fba4
   14001f6b6:	cmp    r14d,0x67
   14001f6ba:	jle    0x14001f714
   14001f6bc:	cmp    r14d,0x69
   14001f6c0:	je     0x14001f6f9
   14001f6c2:	cmp    r14d,r11d
   14001f6c5:	jne    0x14001fba4
   14001f6cb:	mov    r15d,DWORD PTR [rsp+0x34]
   14001f6d0:	mov    eax,r15d
   14001f6d3:	test   cl,cl
   14001f6d5:	jne    0x14002038e
   14001f6db:	mov    r12d,DWORD PTR [rsp+0x54]
   14001f6e0:	test   r12d,r12d
   14001f6e3:	je     0x14002036f
   14001f6e9:	mov    rax,QWORD PTR [rbp-0x60]
   14001f6ed:	mov    rcx,QWORD PTR [rbp-0x68]
   14001f6f1:	mov    QWORD PTR [rax],rcx
   14001f6f4:	jmp    0x14002038e
   14001f6f9:	mov    r14d,eax
   14001f6fc:	mov    eax,0x2d
   14001f701:	cmp    ax,si
   14001f704:	jne    0x14001fd39
   14001f70a:	mov    BYTE PTR [rsp+0x48],r9b
   14001f70f:	jmp    0x14001fd43
   14001f714:	mov    ecx,0x2d
   14001f719:	mov    rdi,r8
   14001f71c:	cmp    cx,si
   14001f71f:	jne    0x14001f72d
   14001f721:	mov    rax,QWORD PTR [rbp-0x78]
   14001f725:	mov    rdi,r9
   14001f728:	mov    WORD PTR [rax],cx
   14001f72b:	jmp    0x14001f737
   14001f72d:	mov    eax,0x2b
   14001f732:	cmp    ax,si
   14001f735:	jne    0x14001f761
   14001f737:	mov    r13,QWORD PTR [rsp+0x78]
   14001f73c:	mov    r12d,DWORD PTR [rsp+0x50]
   14001f741:	mov    r15d,DWORD PTR [rsp+0x34]
   14001f746:	mov    rcx,r13
   14001f749:	sub    r12d,r9d
   14001f74c:	add    r15d,r9d
   14001f74f:	call   0x14002224c
   14001f754:	mov    edx,DWORD PTR [rsp+0x58]
   14001f758:	movzx  esi,ax
   14001f75b:	mov    DWORD PTR [rsp+0x3c],esi
   14001f75f:	jmp    0x14001f770
   14001f761:	mov    r12d,DWORD PTR [rsp+0x50]
   14001f766:	mov    r15d,DWORD PTR [rsp+0x34]
   14001f76b:	mov    r13,QWORD PTR [rsp+0x78]
   14001f770:	test   edx,edx
   14001f772:	mov    eax,0xffffffff
   14001f777:	mov    ebx,0xff00
   14001f77c:	cmove  r12d,eax
   14001f780:	test   bx,si
   14001f783:	jne    0x14001f7f2
   14001f785:	lea    r14d,[rax+0x2]
   14001f789:	movzx  eax,si
   14001f78c:	movzx  ecx,al
   14001f78f:	call   0x140015408
   14001f794:	test   eax,eax
   14001f796:	je     0x14001f7f2
   14001f798:	mov    eax,r12d
   14001f79b:	sub    r12d,r14d
   14001f79e:	test   eax,eax
   14001f7a0:	je     0x14001f7f2
   14001f7a2:	mov    rcx,QWORD PTR [rbp-0x78]
   14001f7a6:	add    DWORD PTR [rsp+0x60],r14d
   14001f7ab:	movsx  eax,sil
   14001f7af:	mov    WORD PTR [rcx+rdi*2],ax
   14001f7b3:	lea    rax,[rbp-0x70]
   14001f7b7:	add    rdi,r14
   14001f7ba:	lea    r9,[rbp-0x10]
   14001f7be:	lea    r8,[rbp-0x78]
   14001f7c2:	lea    rdx,[rbp-0x58]
   14001f7c6:	mov    rcx,rdi
   14001f7c9:	mov    QWORD PTR [rsp+0x20],rax
   14001f7ce:	call   0x14001f1c4
   14001f7d3:	test   eax,eax
   14001f7d5:	je     0x14001f986
   14001f7db:	mov    rcx,r13
   14001f7de:	add    r15d,r14d
   14001f7e1:	call   0x14002224c
   14001f7e6:	movzx  esi,ax
   14001f7e9:	mov    DWORD PTR [rsp+0x3c],esi
   14001f7ed:	test   bx,ax
   14001f7f0:	je     0x14001f789
   14001f7f2:	mov    rax,QWORD PTR [rbp-0x30]
   14001f7f6:	mov    rcx,QWORD PTR [rax+0x128]
   14001f7fd:	mov    rax,QWORD PTR [rcx+0x58]
   14001f801:	movzx  ebx,WORD PTR [rax]
   14001f804:	movsx  eax,sil
   14001f808:	cmp    ebx,eax
   14001f80a:	jne    0x14001f8d2
   14001f810:	mov    eax,r12d
   14001f813:	mov    r14d,0x1
   14001f819:	sub    r12d,r14d
   14001f81c:	test   eax,eax
   14001f81e:	je     0x14001f8d2
   14001f824:	mov    rcx,r13
   14001f827:	add    r15d,r14d
   14001f82a:	call   0x14002224c
   14001f82f:	lea    r9,[rbp-0x10]
   14001f833:	lea    r8,[rbp-0x78]
   14001f837:	movzx  esi,ax
   14001f83a:	mov    rax,QWORD PTR [rbp-0x78]
   14001f83e:	lea    rdx,[rbp-0x58]
   14001f842:	mov    WORD PTR [rax+rdi*2],bx
   14001f846:	lea    rax,[rbp-0x70]
   14001f84a:	add    rdi,r14
   14001f84d:	mov    rcx,rdi
   14001f850:	mov    QWORD PTR [rsp+0x20],rax
   14001f855:	mov    DWORD PTR [rsp+0x3c],esi
   14001f859:	call   0x14001f1c4
   14001f85e:	test   eax,eax
   14001f860:	je     0x14001f986
   14001f866:	mov    ebx,0xff00
   14001f86b:	jmp    0x14001f8cd
   14001f86d:	movzx  eax,si
   14001f870:	movzx  ecx,al
   14001f873:	call   0x140015408
   14001f878:	test   eax,eax
   14001f87a:	je     0x14001f8d2
   14001f87c:	mov    eax,r12d
   14001f87f:	sub    r12d,r14d
   14001f882:	test   eax,eax
   14001f884:	je     0x14001f8d2
   14001f886:	mov    rax,QWORD PTR [rbp-0x78]
   14001f88a:	add    DWORD PTR [rsp+0x60],r14d
   14001f88f:	lea    r9,[rbp-0x10]
   14001f893:	mov    WORD PTR [rax+rdi*2],si
   14001f897:	lea    rax,[rbp-0x70]
   14001f89b:	add    rdi,r14
   14001f89e:	lea    r8,[rbp-0x78]
   14001f8a2:	lea    rdx,[rbp-0x58]
   14001f8a6:	mov    rcx,rdi
   14001f8a9:	mov    QWORD PTR [rsp+0x20],rax
   14001f8ae:	call   0x14001f1c4
   14001f8b3:	test   eax,eax
   14001f8b5:	je     0x14001f986
   14001f8bb:	mov    rcx,r13
   14001f8be:	add    r15d,r14d
   14001f8c1:	call   0x14002224c
   14001f8c6:	movzx  esi,ax
   14001f8c9:	mov    DWORD PTR [rsp+0x3c],esi
   14001f8cd:	test   bx,si
   14001f8d0:	je     0x14001f86d
   14001f8d2:	mov    ebx,DWORD PTR [rsp+0x60]
   14001f8d6:	test   ebx,ebx
   14001f8d8:	je     0x14001fa7b
   14001f8de:	mov    edx,0x65
   14001f8e3:	cmp    dx,si
   14001f8e6:	je     0x14001f8f4
   14001f8e8:	lea    eax,[rdx-0x20]
   14001f8eb:	cmp    ax,si
   14001f8ee:	jne    0x14001fa7b
   14001f8f4:	mov    eax,r12d
   14001f8f7:	mov    ecx,0x1
   14001f8fc:	sub    r12d,ecx
   14001f8ff:	test   eax,eax
   14001f901:	je     0x14001fa80
   14001f907:	mov    rax,QWORD PTR [rbp-0x78]
   14001f90b:	lea    r9,[rbp-0x10]
   14001f90f:	lea    r8,[rbp-0x78]
   14001f913:	mov    WORD PTR [rax+rdi*2],dx
   14001f917:	add    rdi,rcx
   14001f91a:	lea    rax,[rbp-0x70]
   14001f91e:	lea    rdx,[rbp-0x58]
   14001f922:	mov    rcx,rdi
   14001f925:	mov    QWORD PTR [rsp+0x20],rax
   14001f92a:	call   0x14001f1c4
   14001f92f:	test   eax,eax
   14001f931:	je     0x14001f986
   14001f933:	mov    rcx,r13
   14001f936:	inc    r15d
   14001f939:	call   0x14002224c
   14001f93e:	mov    ecx,0x2d
   14001f943:	movzx  esi,ax
   14001f946:	mov    DWORD PTR [rsp+0x3c],esi
   14001f94a:	cmp    cx,ax
   14001f94d:	jne    0x14001f9ea
   14001f953:	mov    rax,QWORD PTR [rbp-0x78]
   14001f957:	lea    r14d,[rcx-0x2c]
   14001f95b:	lea    r9,[rbp-0x10]
   14001f95f:	mov    WORD PTR [rax+rdi*2],cx
   14001f963:	lea    rax,[rbp-0x70]
   14001f967:	add    rdi,r14
   14001f96a:	lea    r8,[rbp-0x78]
   14001f96e:	lea    rdx,[rbp-0x58]
   14001f972:	mov    rcx,rdi
   14001f975:	mov    QWORD PTR [rsp+0x20],rax
   14001f97a:	call   0x14001f1c4
   14001f97f:	xor    r8d,r8d
   14001f982:	test   eax,eax
   14001f984:	jne    0x14001f9fb
   14001f986:	mov    rbx,QWORD PTR [rsp+0x70]
   14001f98b:	xor    r12d,r12d
   14001f98e:	mov    r14d,0xffff
   14001f994:	mov    edi,0x1
   14001f999:	cmp    DWORD PTR [rbp-0x50],edi
   14001f99c:	jne    0x14001f9a6
   14001f99e:	mov    rcx,rbx
   14001f9a1:	call   0x1400130a8
   14001f9a6:	cmp    DWORD PTR [rbp-0x70],edi
   14001f9a9:	jne    0x14001f9b4
   14001f9ab:	mov    rcx,QWORD PTR [rbp-0x78]
   14001f9af:	call   0x1400130a8
   14001f9b4:	cmp    r14w,si
   14001f9b8:	jne    0x14002048b
   14001f9be:	mov    eax,DWORD PTR [rbp-0x80]
   14001f9c1:	test   eax,eax
   14001f9c3:	jne    0x14001f9d0
   14001f9c5:	mov    dl,BYTE PTR [rsp+0x40]
   14001f9c9:	test   dl,dl
   14001f9cb:	jne    0x14001f9d0
   14001f9cd:	or     eax,0xffffffff
   14001f9d0:	cmp    BYTE PTR [rbp-0x18],r12b
   14001f9d4:	je     0x1400204a3
   14001f9da:	mov    rcx,QWORD PTR [rbp-0x20]
   14001f9de:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001f9e5:	jmp    0x1400204a3
   14001f9ea:	mov    eax,0x2b
   14001f9ef:	cmp    ax,si
   14001f9f2:	jne    0x14001fa1c
   14001f9f4:	xor    r8d,r8d
   14001f9f7:	lea    r14d,[rax-0x2a]
   14001f9fb:	mov    eax,r12d
   14001f9fe:	sub    r12d,r14d
   14001fa01:	test   eax,eax
   14001fa03:	jne    0x14001fa0a
   14001fa05:	mov    r12d,r8d
   14001fa08:	jmp    0x14001fa1c
   14001fa0a:	add    r15d,r14d
   14001fa0d:	mov    rcx,r13
   14001fa10:	call   0x14002224c
   14001fa15:	movzx  esi,ax
   14001fa18:	mov    DWORD PTR [rsp+0x3c],esi
   14001fa1c:	mov    eax,0xff00
   14001fa21:	test   ax,si
   14001fa24:	jne    0x14001fa7b
   14001fa26:	movzx  eax,si
   14001fa29:	movzx  ecx,al
   14001fa2c:	call   0x140015408
   14001fa31:	mov    ecx,0x1
   14001fa36:	test   eax,eax
   14001fa38:	je     0x14001fa80
   14001fa3a:	mov    eax,r12d
   14001fa3d:	sub    r12d,ecx
   14001fa40:	test   eax,eax
   14001fa42:	je     0x14001fa80
   14001fa44:	mov    rax,QWORD PTR [rbp-0x78]
   14001fa48:	add    ebx,ecx
   14001fa4a:	lea    r9,[rbp-0x10]
   14001fa4e:	mov    WORD PTR [rax+rdi*2],si
   14001fa52:	add    rdi,rcx
   14001fa55:	lea    rax,[rbp-0x70]
   14001fa59:	lea    r8,[rbp-0x78]
   14001fa5d:	lea    rdx,[rbp-0x58]
   14001fa61:	mov    rcx,rdi
   14001fa64:	mov    QWORD PTR [rsp+0x20],rax
   14001fa69:	call   0x14001f1c4
   14001fa6e:	test   eax,eax
   14001fa70:	je     0x14001f986
   14001fa76:	inc    r15d
   14001fa79:	jmp    0x14001fa0d
   14001fa7b:	mov    ecx,0x1
   14001fa80:	sub    r15d,ecx
   14001fa83:	mov    r14d,0xffff
   14001fa89:	mov    DWORD PTR [rsp+0x34],r15d
   14001fa8e:	mov    DWORD PTR [rsp+0x44],r15d
   14001fa93:	cmp    r14w,si
   14001fa97:	je     0x14001faa9
   14001fa99:	mov    rdx,r13
   14001fa9c:	movzx  ecx,si
   14001fa9f:	call   0x14002920c
   14001faa4:	mov    ecx,0x1
   14001faa9:	xor    r8d,r8d
   14001faac:	test   ebx,ebx
   14001faae:	je     0x14002044e
   14001fab4:	cmp    BYTE PTR [rsp+0x30],r8b
   14001fab9:	jne    0x140020394
   14001fabf:	mov    rax,QWORD PTR [rbp-0x58]
   14001fac3:	mov    r13d,DWORD PTR [rbp-0x80]
   14001fac7:	mov    r12,QWORD PTR [rbp-0x78]
   14001facb:	add    r13d,ecx
   14001face:	lea    rbx,[rax+rax*1+0x2]
   14001fad3:	mov    WORD PTR [r12+rdi*2],r8w
   14001fad8:	mov    rcx,rbx
   14001fadb:	mov    DWORD PTR [rbp-0x80],r13d
   14001fadf:	call   0x140020c28
   14001fae4:	xor    r13d,r13d
   14001fae7:	mov    rdi,rax
   14001faea:	test   rax,rax
   14001faed:	je     0x14002044e
   14001faf3:	lea    rax,[rbx-0x1]
   14001faf7:	mov    r9,r12
   14001fafa:	mov    r8,rbx
   14001fafd:	mov    rdx,rdi
   14001fb00:	xor    ecx,ecx
   14001fb02:	mov    QWORD PTR [rsp+0x20],rax
   14001fb07:	call   0x140012bb4
   14001fb0c:	test   eax,eax
   14001fb0e:	je     0x14001fb22
   14001fb10:	cmp    eax,0x16
   14001fb13:	je     0x14002045b
   14001fb19:	cmp    eax,0x22
   14001fb1c:	je     0x14002045b
   14001fb22:	mov    rcx,QWORD PTR [rip+0x2110f]        # 0x140040c38
   14001fb29:	movsx  ebx,BYTE PTR [rsp+0x38]
   14001fb2e:	call   QWORD PTR [rip+0xf734]        # 0x14002f268
   14001fb34:	mov    rdx,QWORD PTR [rbp-0x60]
   14001fb38:	lea    r9,[rbp-0x30]
   14001fb3c:	lea    ecx,[rbx-0x1]
   14001fb3f:	mov    r8,rdi
   14001fb42:	call   rax
   14001fb44:	mov    rcx,rdi
   14001fb47:	call   0x1400130a8
   14001fb4c:	jmp    0x140020394
   14001fb51:	test   edx,edx
   14001fb53:	jne    0x14001fb61
   14001fb55:	add    edi,r9d
   14001fb58:	mov    DWORD PTR [rsp+0x58],r9d
   14001fb5d:	mov    DWORD PTR [rsp+0x50],edi
   14001fb61:	test   r12b,r12b
   14001fb64:	jle    0x14001fefa
   14001fb6a:	mov    r15b,r9b
   14001fb6d:	jmp    0x14001fefa
   14001fb72:	cmp    r14d,0x70
   14001fb76:	je     0x1400200be
   14001fb7c:	cmp    r14d,0x73
   14001fb80:	je     0x14001feef
   14001fb86:	cmp    r14d,0x75
   14001fb8a:	je     0x1400200d1
   14001fb90:	mov    eax,0x78
   14001fb95:	cmp    r14d,eax
   14001fb98:	je     0x14001f6fc
   14001fb9e:	cmp    r14d,0x7b
   14001fba2:	je     0x14001fbd8
   14001fba4:	mov    r14d,0xffff
   14001fbaa:	cmp    WORD PTR [r10],si
   14001fbae:	jne    0x14002043b
   14001fbb4:	mov    dl,BYTE PTR [rsp+0x40]
   14001fbb8:	mov    r15d,DWORD PTR [rsp+0x34]
   14001fbbd:	dec    dl
   14001fbbf:	mov    BYTE PTR [rsp+0x40],dl
   14001fbc3:	test   cl,cl
   14001fbc5:	jne    0x140020394
   14001fbcb:	mov    r9,QWORD PTR [rbp-0x38]
   14001fbcf:	mov    QWORD PTR [rbp-0x48],r9
   14001fbd3:	jmp    0x140020394
   14001fbd8:	test   r12b,r12b
   14001fbdb:	movzx  r15d,r15b
   14001fbdf:	mov    eax,0x5e
   14001fbe4:	cmovg  r15d,r9d
   14001fbe8:	add    r10,0x2
   14001fbec:	mov    QWORD PTR [rsp+0x68],r10
   14001fbf1:	cmp    ax,WORD PTR [r10]
   14001fbf5:	jne    0x14001fc05
   14001fbf7:	add    r10,0x2
   14001fbfb:	mov    BYTE PTR [rsp+0x5c],0xff
   14001fc00:	mov    QWORD PTR [rsp+0x68],r10
   14001fc05:	mov    rbx,QWORD PTR [rsp+0x70]
   14001fc0a:	test   rbx,rbx
   14001fc0d:	jne    0x14001fc37
   14001fc0f:	mov    ecx,0x2000
   14001fc14:	call   0x140020c28
   14001fc19:	xor    r12d,r12d
   14001fc1c:	mov    rbx,rax
   14001fc1f:	mov    QWORD PTR [rsp+0x70],rax
   14001fc24:	test   rax,rax
   14001fc27:	je     0x14001f98e
   14001fc2d:	lea    edi,[r12+0x1]
   14001fc32:	mov    DWORD PTR [rbp-0x50],edi
   14001fc35:	jmp    0x14001fc3f
   14001fc37:	xor    r12d,r12d
   14001fc3a:	lea    edi,[r12+0x1]
   14001fc3f:	xor    edx,edx
   14001fc41:	mov    r8d,0x2000
   14001fc47:	mov    rcx,rbx
   14001fc4a:	call   0x140012fb0
   14001fc4f:	mov    r10,QWORD PTR [rsp+0x68]
   14001fc54:	mov    r11d,0x5d
   14001fc5a:	cmp    r11w,WORD PTR [r10]
   14001fc5e:	jne    0x14001fc6e
   14001fc60:	lea    eax,[r11-0x3d]
   14001fc64:	mov    r13d,r11d
   14001fc67:	add    r10,0x2
   14001fc6b:	mov    BYTE PTR [rbx+0xb],al
   14001fc6e:	movzx  ecx,WORD PTR [r10]
   14001fc72:	cmp    r11w,cx
   14001fc76:	je     0x14001fd25
   14001fc7c:	mov    esi,0x2d
   14001fc81:	add    r10,0x2
   14001fc85:	cmp    si,cx
   14001fc88:	jne    0x14001fcf7
   14001fc8a:	test   r13w,r13w
   14001fc8e:	je     0x14001fcf7
   14001fc90:	movzx  eax,WORD PTR [r10]
   14001fc94:	cmp    r11w,ax
   14001fc98:	je     0x14001fcf7
   14001fc9a:	add    r10,0x2
   14001fc9e:	mov    QWORD PTR [rsp+0x68],r10
   14001fca3:	cmp    r13w,ax
   14001fca7:	jae    0x14001fcaf
   14001fca9:	movzx  r9d,ax
   14001fcad:	jmp    0x14001fcb7
   14001fcaf:	movzx  r9d,r13w
   14001fcb3:	movzx  r13d,ax
   14001fcb7:	cmp    r13w,r9w
   14001fcbb:	jae    0x14001fce9
   14001fcbd:	movzx  r10d,r13w
   14001fcc1:	movzx  ecx,r13w
   14001fcc5:	mov    r8,r10
   14001fcc8:	mov    edx,edi
   14001fcca:	and    ecx,0x7
   14001fccd:	shr    r8,0x3
   14001fcd1:	add    r13w,di
   14001fcd5:	shl    dl,cl
   14001fcd7:	add    r10,rdi
   14001fcda:	or     BYTE PTR [r8+rbx*1],dl
   14001fcde:	cmp    r13w,r9w
   14001fce2:	jb     0x14001fcc1
   14001fce4:	mov    r10,QWORD PTR [rsp+0x68]
   14001fce9:	movzx  r8d,r9w
   14001fced:	movzx  eax,r9w
   14001fcf1:	movzx  r13d,r12w
   14001fcf5:	jmp    0x14001fd02
   14001fcf7:	movzx  r13d,cx
   14001fcfb:	movzx  r8d,cx
   14001fcff:	movzx  eax,cx
   14001fd02:	and    eax,0x7
   14001fd05:	shr    r8,0x3
   14001fd09:	mov    edx,edi
   14001fd0b:	mov    cl,al
   14001fd0d:	shl    dl,cl
   14001fd0f:	or     BYTE PTR [r8+rbx*1],dl
   14001fd13:	movzx  ecx,WORD PTR [r10]
   14001fd17:	cmp    r11w,cx
   14001fd1b:	jne    0x14001fc81
   14001fd21:	mov    esi,DWORD PTR [rsp+0x3c]
   14001fd25:	cmp    WORD PTR [r10],r12w
   14001fd29:	je     0x14001f98e
   14001fd2f:	mov    QWORD PTR [rsp+0x68],r10
   14001fd34:	jmp    0x14001fefa
   14001fd39:	mov    eax,0x2b
   14001fd3e:	cmp    ax,si
   14001fd41:	jne    0x14001fd57
   14001fd43:	sub    edi,r9d
   14001fd46:	mov    DWORD PTR [rsp+0x50],edi
   14001fd4a:	jne    0x14001fdd3
   14001fd50:	test   edx,edx
   14001fd52:	je     0x14001fdd3
   14001fd54:	mov    bl,r9b
   14001fd57:	mov    r13,QWORD PTR [rsp+0x78]
   14001fd5c:	mov    r12d,DWORD PTR [rsp+0x34]
   14001fd61:	mov    eax,0x30
   14001fd66:	cmp    ax,si
   14001fd69:	jne    0x14001fe2b
   14001fd6f:	lea    r15d,[rax-0x2f]
   14001fd73:	mov    rcx,r13
   14001fd76:	add    r12d,r15d
   14001fd79:	mov    DWORD PTR [rsp+0x34],r12d
   14001fd7e:	mov    DWORD PTR [rsp+0x44],r12d
   14001fd83:	call   0x14002224c
   14001fd88:	movzx  esi,ax
   14001fd8b:	lea    eax,[r15+0x77]
   14001fd8f:	mov    DWORD PTR [rsp+0x3c],esi
   14001fd93:	cmp    ax,si
   14001fd96:	je     0x14001feaf
   14001fd9c:	lea    ecx,[rax-0x20]
   14001fd9f:	cmp    cx,si
   14001fda2:	je     0x14001feaf
   14001fda8:	mov    DWORD PTR [rsp+0x60],r15d
   14001fdad:	cmp    r14d,eax
   14001fdb0:	je     0x14001fdfe
   14001fdb2:	xor    ecx,ecx
   14001fdb4:	cmp    DWORD PTR [rsp+0x58],ecx
   14001fdb8:	je     0x14001fdc6
   14001fdba:	sub    edi,r15d
   14001fdbd:	mov    DWORD PTR [rsp+0x50],edi
   14001fdc1:	jne    0x14001fdc6
   14001fdc3:	add    bl,r15b
   14001fdc6:	mov    r14d,0x6f
   14001fdcc:	mov    r12d,DWORD PTR [rsp+0x54]
   14001fdd1:	jmp    0x14001fe35
   14001fdd3:	mov    r12d,DWORD PTR [rsp+0x34]
   14001fdd8:	mov    r13,QWORD PTR [rsp+0x78]
   14001fddd:	add    r12d,r9d
   14001fde0:	mov    rcx,r13
   14001fde3:	mov    DWORD PTR [rsp+0x34],r12d
   14001fde8:	mov    DWORD PTR [rsp+0x44],r12d
   14001fded:	call   0x14002224c
   14001fdf2:	movzx  esi,ax
   14001fdf5:	mov    DWORD PTR [rsp+0x3c],esi
   14001fdf9:	jmp    0x14001fd61
   14001fdfe:	sub    r12d,r15d
   14001fe01:	mov    eax,0xffff
   14001fe06:	mov    DWORD PTR [rsp+0x34],r12d
   14001fe0b:	mov    DWORD PTR [rsp+0x44],r12d
   14001fe10:	cmp    ax,si
   14001fe13:	je     0x14001fe20
   14001fe15:	mov    rdx,r13
   14001fe18:	movzx  ecx,si
   14001fe1b:	call   0x14002920c
   14001fe20:	mov    eax,0x30
   14001fe25:	mov    esi,eax
   14001fe27:	mov    DWORD PTR [rsp+0x3c],eax
   14001fe2b:	mov    r12d,DWORD PTR [rsp+0x54]
   14001fe30:	mov    eax,0x78
   14001fe35:	mov    r15d,DWORD PTR [rsp+0x34]
   14001fe3a:	xor    edi,edi
   14001fe3c:	test   r12d,r12d
   14001fe3f:	je     0x140020217
   14001fe45:	test   bl,bl
   14001fe47:	mov    rbx,QWORD PTR [rbp-0x68]
   14001fe4b:	jne    0x1400201fd
   14001fe51:	mov    r13d,DWORD PTR [rsp+0x50]
   14001fe56:	cmp    r14d,eax
   14001fe59:	je     0x140020140
   14001fe5f:	cmp    r14d,0x70
   14001fe63:	je     0x140020140
   14001fe69:	mov    eax,0xff00
   14001fe6e:	test   ax,si
   14001fe71:	jne    0x1400201d5
   14001fe77:	movzx  eax,si
   14001fe7a:	movzx  ecx,al
   14001fe7d:	call   0x140015408
   14001fe82:	test   eax,eax
   14001fe84:	je     0x1400201d5
   14001fe8a:	mov    eax,0x6f
   14001fe8f:	cmp    r14d,eax
   14001fe92:	jne    0x140020137
   14001fe98:	mov    eax,0x38
   14001fe9d:	cmp    ax,si
   14001fea0:	jbe    0x1400201d5
   14001fea6:	shl    rbx,0x3
   14001feaa:	jmp    0x14002018a
   14001feaf:	add    r12d,r15d
   14001feb2:	mov    rcx,r13
   14001feb5:	mov    DWORD PTR [rsp+0x34],r12d
   14001feba:	mov    DWORD PTR [rsp+0x44],r12d
   14001febf:	call   0x14002224c
   14001fec4:	xor    ecx,ecx
   14001fec6:	movzx  esi,ax
   14001fec9:	mov    DWORD PTR [rsp+0x3c],esi
   14001fecd:	cmp    DWORD PTR [rsp+0x58],ecx
   14001fed1:	je     0x14001fee2
   14001fed3:	sub    edi,0x2
   14001fed6:	mov    DWORD PTR [rsp+0x50],edi
   14001feda:	cmp    edi,r15d
   14001fedd:	jge    0x14001fee2
   14001fedf:	add    bl,r15b
   14001fee2:	mov    eax,0x78
   14001fee7:	mov    r14d,eax
   14001feea:	jmp    0x14001fdcc
   14001feef:	movzx  r15d,r15b
   14001fef3:	test   r12b,r12b
   14001fef6:	cmovg  r15d,r9d
   14001fefa:	mov    r12d,DWORD PTR [rsp+0x34]
   14001feff:	mov    rbx,QWORD PTR [rbp-0x60]
   14001ff03:	mov    ecx,0x1
   14001ff08:	sub    r12d,ecx
   14001ff0b:	mov    eax,0xffff
   14001ff10:	mov    DWORD PTR [rsp+0x34],r12d
   14001ff15:	mov    DWORD PTR [rsp+0x44],r12d
   14001ff1a:	cmp    ax,si
   14001ff1d:	je     0x14001ff31
   14001ff1f:	mov    rdx,QWORD PTR [rsp+0x78]
   14001ff24:	movzx  ecx,si
   14001ff27:	call   0x14002920c
   14001ff2c:	mov    ecx,0x1
   14001ff31:	mov    dil,BYTE PTR [rsp+0x5c]
   14001ff36:	mov    r13d,DWORD PTR [rsp+0x50]
   14001ff3b:	xor    r8d,r8d
   14001ff3e:	cmp    DWORD PTR [rsp+0x58],r8d
   14001ff43:	je     0x14001ff53
   14001ff45:	mov    eax,r13d
   14001ff48:	sub    r13d,ecx
   14001ff4b:	test   eax,eax
   14001ff4d:	je     0x140020078
   14001ff53:	add    r12d,ecx
   14001ff56:	mov    rcx,QWORD PTR [rsp+0x78]
   14001ff5b:	mov    DWORD PTR [rsp+0x34],r12d
   14001ff60:	mov    DWORD PTR [rsp+0x44],r12d
   14001ff65:	call   0x14002224c
   14001ff6a:	mov    r8d,0xffff
   14001ff70:	movzx  esi,ax
   14001ff73:	mov    DWORD PTR [rsp+0x3c],esi
   14001ff77:	cmp    r8w,ax
   14001ff7b:	je     0x14002004b
   14001ff81:	cmp    r14d,0x63
   14001ff85:	je     0x14001ffd2
   14001ff87:	cmp    r14d,0x73
   14001ff8b:	jne    0x14001ffa7
   14001ff8d:	cmp    ax,0x9
   14001ff91:	jb     0x14001ff9d
   14001ff93:	cmp    ax,0xd
   14001ff97:	jbe    0x14002004b
   14001ff9d:	mov    eax,0x20
   14001ffa2:	cmp    si,ax
   14001ffa5:	jne    0x14001ffd2
   14001ffa7:	cmp    r14d,0x7b
   14001ffab:	jne    0x14002004b
   14001ffb1:	mov    rcx,QWORD PTR [rsp+0x70]
   14001ffb6:	movzx  eax,si
   14001ffb9:	movzx  edx,si
   14001ffbc:	shr    rax,0x3
   14001ffc0:	and    edx,0x7
   14001ffc3:	movsx  ecx,BYTE PTR [rax+rcx*1]
   14001ffc7:	movsx  eax,dil
   14001ffcb:	xor    ecx,eax
   14001ffcd:	bt     ecx,edx
   14001ffd0:	jae    0x14002004b
   14001ffd2:	xor    r8d,r8d
   14001ffd5:	cmp    BYTE PTR [rsp+0x30],r8b
   14001ffda:	jne    0x14002003d
   14001ffdc:	test   r15b,r15b
   14001ffdf:	je     0x14001fff2
   14001ffe1:	mov    rcx,QWORD PTR [rbp-0x60]
   14001ffe5:	mov    WORD PTR [rcx],si
   14001ffe8:	add    rcx,0x2
   14001ffec:	mov    QWORD PTR [rbp-0x60],rcx
   14001fff0:	jmp    0x140020041
   14001fff2:	mov    rdx,QWORD PTR [rbp-0x60]
   14001fff6:	mov    DWORD PTR [rsp+0x4c],r8d
   14001fffb:	lea    rcx,[rsp+0x4c]
   140020000:	movzx  r9d,si
   140020004:	mov    r8d,0x5
   14002000a:	call   0x140027c0c
   14002000f:	xor    r8d,r8d
   140020012:	test   eax,eax
   140020014:	je     0x140020032
   140020016:	cmp    eax,0x16
   140020019:	je     0x140020020
   14002001b:	cmp    eax,0x22
   14002001e:	jne    0x140020041
   140020020:	xor    r9d,r9d
   140020023:	xor    edx,edx
   140020025:	xor    ecx,ecx
   140020027:	mov    QWORD PTR [rsp+0x20],r8
   14002002c:	call   0x140019ed0
   140020031:	int3   
   140020032:	movsxd rax,DWORD PTR [rsp+0x4c]
   140020037:	add    QWORD PTR [rbp-0x60],rax
   14002003b:	jmp    0x140020041
   14002003d:	add    rbx,0x2
   140020041:	mov    ecx,0x1
   140020046:	jmp    0x14001ff3e
   14002004b:	mov    ecx,0x1
   140020050:	sub    r12d,ecx
   140020053:	mov    DWORD PTR [rsp+0x34],r12d
   140020058:	mov    DWORD PTR [rsp+0x44],r12d
   14002005d:	cmp    r8w,si
   140020061:	je     0x140020075
   140020063:	mov    rdx,QWORD PTR [rsp+0x78]
   140020068:	movzx  ecx,si
   14002006b:	call   0x14002920c
   140020070:	mov    ecx,0x1
   140020075:	xor    r8d,r8d
   140020078:	mov    rax,QWORD PTR [rbp-0x60]
   14002007c:	cmp    rbx,rax
   14002007f:	je     0x14001f986
   140020085:	cmp    BYTE PTR [rsp+0x30],r8b
   14002008a:	jne    0x140020389
   140020090:	add    DWORD PTR [rbp-0x80],ecx
   140020093:	cmp    r14d,0x63
   140020097:	je     0x140020389
   14002009d:	test   r15b,r15b
   1400200a0:	mov    r15d,DWORD PTR [rsp+0x34]
   1400200a5:	mov    r14d,0xffff
   1400200ab:	je     0x1400200b6
   1400200ad:	mov    WORD PTR [rax],r8w
   1400200b1:	jmp    0x140020394
   1400200b6:	mov    BYTE PTR [rax],r8b
   1400200b9:	jmp    0x140020394
   1400200be:	mov    r12d,DWORD PTR [rsp+0x54]
   1400200c3:	mov    BYTE PTR [rsp+0x38],r9b
   1400200c8:	mov    QWORD PTR [rbp-0x68],r8
   1400200cc:	add    r12d,r9d
   1400200cf:	jmp    0x1400200d6
   1400200d1:	mov    r12d,DWORD PTR [rsp+0x54]
   1400200d6:	mov    eax,0x2d
   1400200db:	cmp    ax,si
   1400200de:	jne    0x1400200e7
   1400200e0:	mov    BYTE PTR [rsp+0x48],r9b
   1400200e5:	jmp    0x1400200f5
   1400200e7:	mov    eax,0x2b
   1400200ec:	cmp    ax,si
   1400200ef:	jne    0x14001fe30
   1400200f5:	sub    edi,r9d
   1400200f8:	mov    DWORD PTR [rsp+0x50],edi
   1400200fc:	jne    0x14002010a
   1400200fe:	test   edx,edx
   140020100:	je     0x14002010a
   140020102:	mov    bl,r9b
   140020105:	jmp    0x14001fe30
   14002010a:	mov    r15d,DWORD PTR [rsp+0x34]
   14002010f:	mov    rcx,QWORD PTR [rsp+0x78]
   140020114:	add    r15d,r9d
   140020117:	mov    DWORD PTR [rsp+0x34],r15d
   14002011c:	mov    DWORD PTR [rsp+0x44],r15d
   140020121:	call   0x14002224c
   140020126:	movzx  esi,ax
   140020129:	mov    eax,0x78
   14002012e:	mov    DWORD PTR [rsp+0x3c],esi
   140020132:	jmp    0x14001fe3a
   140020137:	lea    rbx,[rbx+rbx*4]
   14002013b:	add    rbx,rbx
   14002013e:	jmp    0x14002018a
   140020140:	mov    eax,0xff00
   140020145:	test   ax,si
   140020148:	jne    0x1400201d5
   14002014e:	movzx  ebx,si
   140020151:	movzx  edi,bl
   140020154:	mov    ecx,edi
   140020156:	call   0x140015488
   14002015b:	test   eax,eax
   14002015d:	je     0x1400201d5
   14002015f:	shl    QWORD PTR [rbp-0x68],0x4
   140020164:	mov    ecx,edi
   140020166:	call   0x140015408
   14002016b:	xor    edi,edi
   14002016d:	test   eax,eax
   14002016f:	je     0x140020176
   140020171:	movzx  esi,bx
   140020174:	jmp    0x140020182
   140020176:	mov    esi,0xffdf
   14002017b:	and    si,bx
   14002017e:	sub    si,0x7
   140020182:	mov    rbx,QWORD PTR [rbp-0x68]
   140020186:	mov    DWORD PTR [rsp+0x3c],esi
   14002018a:	movzx  eax,si
   14002018d:	mov    ecx,0x1
   140020192:	add    DWORD PTR [rsp+0x60],ecx
   140020196:	sub    eax,0x30
   140020199:	cdqe   
   14002019b:	add    rbx,rax
   14002019e:	mov    QWORD PTR [rbp-0x68],rbx
   1400201a2:	cmp    DWORD PTR [rsp+0x58],edi
   1400201a6:	je     0x1400201ad
   1400201a8:	sub    r13d,ecx
   1400201ab:	je     0x1400201fd
   1400201ad:	add    r15d,ecx
   1400201b0:	mov    rcx,QWORD PTR [rsp+0x78]
   1400201b5:	mov    DWORD PTR [rsp+0x34],r15d
   1400201ba:	mov    DWORD PTR [rsp+0x44],r15d
   1400201bf:	call   0x14002224c
   1400201c4:	movzx  esi,ax
   1400201c7:	mov    eax,0x78
   1400201cc:	mov    DWORD PTR [rsp+0x3c],esi
   1400201d0:	jmp    0x14001fe56
   1400201d5:	dec    r15d
   1400201d8:	mov    eax,0xffff
   1400201dd:	mov    DWORD PTR [rsp+0x34],r15d
   1400201e2:	mov    DWORD PTR [rsp+0x44],r15d
   1400201e7:	cmp    ax,si
   1400201ea:	je     0x1400201f9
   1400201ec:	mov    rdx,QWORD PTR [rsp+0x78]
   1400201f1:	movzx  ecx,si
   1400201f4:	call   0x14002920c
   1400201f9:	mov    rbx,QWORD PTR [rbp-0x68]
   1400201fd:	xor    r8d,r8d
   140020200:	cmp    BYTE PTR [rsp+0x48],r8b
   140020205:	je     0x140020348
   14002020b:	neg    rbx
   14002020e:	mov    QWORD PTR [rbp-0x68],rbx
   140020212:	jmp    0x140020348
   140020217:	test   bl,bl
   140020219:	mov    ebx,DWORD PTR [rsp+0x4c]
   14002021d:	jne    0x140020338
   140020223:	mov    r13d,DWORD PTR [rsp+0x50]
   140020228:	cmp    r14d,eax
   14002022b:	je     0x140020279
   14002022d:	cmp    r14d,0x70
   140020231:	je     0x140020279
   140020233:	mov    eax,0xff00
   140020238:	test   ax,si
   14002023b:	jne    0x140020310
   140020241:	movzx  eax,si
   140020244:	movzx  ecx,al
   140020247:	call   0x140015408
   14002024c:	test   eax,eax
   14002024e:	je     0x140020310
   140020254:	mov    eax,0x6f
   140020259:	cmp    r14d,eax
   14002025c:	jne    0x140020271
   14002025e:	mov    eax,0x38
   140020263:	cmp    ax,si
   140020266:	jbe    0x140020310
   14002026c:	shl    ebx,0x3
   14002026f:	jmp    0x1400202c9
   140020271:	lea    eax,[rbx+rbx*4]
   140020274:	lea    ebx,[rax+rax*1]
   140020277:	jmp    0x1400202c9
   140020279:	mov    eax,0xff00
   14002027e:	test   ax,si
   140020281:	jne    0x140020310
   140020287:	movzx  ebx,si
   14002028a:	movzx  edi,bl
   14002028d:	mov    ecx,edi
   14002028f:	call   0x140015488
   140020294:	test   eax,eax
   140020296:	je     0x140020310
   140020298:	mov    eax,DWORD PTR [rsp+0x4c]
   14002029c:	mov    ecx,edi
   14002029e:	shl    eax,0x4
   1400202a1:	mov    DWORD PTR [rsp+0x4c],eax
   1400202a5:	call   0x140015408
   1400202aa:	xor    edi,edi
   1400202ac:	test   eax,eax
   1400202ae:	je     0x1400202b5
   1400202b0:	movzx  esi,bx
   1400202b3:	jmp    0x1400202c1
   1400202b5:	mov    esi,0xffdf
   1400202ba:	and    si,bx
   1400202bd:	sub    si,0x7
   1400202c1:	mov    ebx,DWORD PTR [rsp+0x4c]
   1400202c5:	mov    DWORD PTR [rsp+0x3c],esi
   1400202c9:	movzx  eax,si
   1400202cc:	mov    ecx,0x1
   1400202d1:	add    DWORD PTR [rsp+0x60],ecx
   1400202d5:	lea    ebx,[rbx+rax*1-0x30]
   1400202d9:	mov    DWORD PTR [rsp+0x4c],ebx
   1400202dd:	cmp    DWORD PTR [rsp+0x58],edi
   1400202e1:	je     0x1400202e8
   1400202e3:	sub    r13d,ecx
   1400202e6:	je     0x140020338
   1400202e8:	add    r15d,ecx
   1400202eb:	mov    rcx,QWORD PTR [rsp+0x78]
   1400202f0:	mov    DWORD PTR [rsp+0x34],r15d
   1400202f5:	mov    DWORD PTR [rsp+0x44],r15d
   1400202fa:	call   0x14002224c
   1400202ff:	movzx  esi,ax
   140020302:	mov    eax,0x78
   140020307:	mov    DWORD PTR [rsp+0x3c],esi
   14002030b:	jmp    0x140020228
   140020310:	dec    r15d
   140020313:	mov    eax,0xffff
   140020318:	mov    DWORD PTR [rsp+0x34],r15d
   14002031d:	mov    DWORD PTR [rsp+0x44],r15d
   140020322:	cmp    ax,si
   140020325:	je     0x140020334
   140020327:	mov    rdx,QWORD PTR [rsp+0x78]
   14002032c:	movzx  ecx,si
   14002032f:	call   0x14002920c
   140020334:	mov    ebx,DWORD PTR [rsp+0x4c]
   140020338:	xor    r8d,r8d
   14002033b:	cmp    BYTE PTR [rsp+0x48],r8b
   140020340:	je     0x140020348
   140020342:	neg    ebx
   140020344:	mov    DWORD PTR [rsp+0x4c],ebx
   140020348:	mov    eax,DWORD PTR [rsp+0x60]
   14002034c:	cmp    r14d,0x46
   140020350:	cmove  eax,r8d
   140020354:	test   eax,eax
   140020356:	je     0x14001f986
   14002035c:	cmp    BYTE PTR [rsp+0x30],r8b
   140020361:	jne    0x14002038e
   140020363:	inc    DWORD PTR [rbp-0x80]
   140020366:	mov    eax,DWORD PTR [rsp+0x4c]
   14002036a:	jmp    0x14001f6e0
   14002036f:	mov    rcx,QWORD PTR [rbp-0x60]
   140020373:	mov    r14d,0xffff
   140020379:	cmp    BYTE PTR [rsp+0x38],r8b
   14002037e:	je     0x140020384
   140020380:	mov    DWORD PTR [rcx],eax
   140020382:	jmp    0x140020394
   140020384:	mov    WORD PTR [rcx],ax
   140020387:	jmp    0x140020394
   140020389:	mov    r15d,DWORD PTR [rsp+0x34]
   14002038e:	mov    r14d,0xffff
   140020394:	mov    rbx,QWORD PTR [rsp+0x68]
   140020399:	mov    rdi,QWORD PTR [rsp+0x78]
   14002039e:	mov    eax,0x1
   1400203a3:	add    BYTE PTR [rsp+0x40],al
   1400203a7:	add    rbx,0x2
   1400203ab:	lea    r12d,[rax+0x24]
   1400203af:	mov    QWORD PTR [rsp+0x68],rbx
   1400203b4:	jmp    0x1400203ff
   1400203b6:	cmp    r12w,WORD PTR [r10]
   1400203ba:	jne    0x1400203cd
   1400203bc:	lea    rax,[r10+0x2]
   1400203c0:	cmp    r12w,WORD PTR [rax]
   1400203c4:	cmove  r10,rax
   1400203c8:	mov    QWORD PTR [rsp+0x68],r10
   1400203cd:	inc    r15d
   1400203d0:	mov    rcx,rdi
   1400203d3:	mov    DWORD PTR [rsp+0x34],r15d
   1400203d8:	mov    DWORD PTR [rsp+0x44],r15d
   1400203dd:	call   0x14002224c
   1400203e2:	mov    rbx,QWORD PTR [rsp+0x68]
   1400203e7:	movzx  esi,ax
   1400203ea:	movzx  eax,WORD PTR [rbx]
   1400203ed:	add    rbx,0x2
   1400203f1:	mov    DWORD PTR [rsp+0x3c],esi
   1400203f5:	mov    QWORD PTR [rsp+0x68],rbx
   1400203fa:	cmp    ax,si
   1400203fd:	jne    0x140020470
   1400203ff:	cmp    r14w,si
   140020403:	jne    0x140020416
   140020405:	cmp    WORD PTR [rbx],r12w
   140020409:	jne    0x14002044e
   14002040b:	mov    eax,0x6e
   140020410:	cmp    WORD PTR [rbx+0x2],ax
   140020414:	jne    0x14002044e
   140020416:	mov    r13d,0x1
   14002041c:	movzx  eax,WORD PTR [rbx]
   14002041f:	xor    r12d,r12d
   140020422:	test   ax,ax
   140020425:	jne    0x14001f37d
   14002042b:	mov    rbx,QWORD PTR [rsp+0x70]
   140020430:	jmp    0x14001f994
   140020435:	mov    r14d,0xffff
   14002043b:	cmp    r14w,si
   14002043f:	je     0x14002044e
   140020441:	mov    rdx,QWORD PTR [rsp+0x78]
   140020446:	movzx  ecx,si
   140020449:	call   0x14002920c
   14002044e:	mov    rbx,QWORD PTR [rsp+0x70]
   140020453:	xor    r12d,r12d
   140020456:	jmp    0x14001f994
   14002045b:	xor    r9d,r9d
   14002045e:	xor    r8d,r8d
   140020461:	xor    edx,edx
   140020463:	xor    ecx,ecx
   140020465:	mov    QWORD PTR [rsp+0x20],r13
   14002046a:	call   0x140019ed0
   14002046f:	int3   
   140020470:	cmp    r14w,si
   140020474:	je     0x14002044e
   140020476:	mov    rdx,rdi
   140020479:	jmp    0x140020446
   14002047b:	mov    rbx,QWORD PTR [rsp+0x70]
   140020480:	xor    r12d,r12d
   140020483:	mov    r14d,eax
   140020486:	jmp    0x14001f994
   14002048b:	mov    r13d,DWORD PTR [rbp-0x80]
   14002048f:	cmp    BYTE PTR [rbp-0x18],r12b
   140020493:	je     0x1400204a0
   140020495:	mov    rcx,QWORD PTR [rbp-0x20]
   140020499:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400204a0:	mov    eax,r13d
   1400204a3:	mov    rcx,QWORD PTR [rbp+0x2b0]
   1400204aa:	xor    rcx,rsp
   1400204ad:	call   0x140012670
   1400204b2:	mov    rbx,QWORD PTR [rsp+0x410]
   1400204ba:	add    rsp,0x3c0
   1400204c1:	pop    r15
   1400204c3:	pop    r14
   1400204c5:	pop    r13
   1400204c7:	pop    r12
   1400204c9:	pop    rdi
   1400204ca:	pop    rsi
   1400204cb:	pop    rbp
   1400204cc:	ret    
   1400204cd:	int3   
   1400204ce:	int3   
   1400204cf:	int3   
   1400204d0:	mov    QWORD PTR [rsp+0x18],rbx
   1400204d5:	mov    DWORD PTR [rsp+0x10],edx
   1400204d9:	push   rbp
   1400204da:	push   rsi
   1400204db:	push   rdi
   1400204dc:	push   r12
   1400204de:	push   r13
   1400204e0:	push   r14
   1400204e2:	push   r15
   1400204e4:	sub    rsp,0x30
   1400204e8:	xor    r13d,r13d
   1400204eb:	mov    ebp,edx
   1400204ed:	mov    r14,rcx
   1400204f0:	mov    ebx,r13d
   1400204f3:	test   rcx,rcx
   1400204f6:	jne    0x14002050d
   1400204f8:	call   0x14001583c
   1400204fd:	mov    DWORD PTR [rax],0x16
   140020503:	call   0x140019f74
   140020508:	jmp    0x1400205f9
   14002050d:	mov    r12,QWORD PTR [rcx]
   140020510:	test   r12,r12
   140020513:	je     0x1400205ee
   140020519:	mov    edx,0x3d
   14002051e:	mov    rcx,r12
   140020521:	call   0x14002956c
   140020526:	mov    rdi,rax
   140020529:	mov    QWORD PTR [rsp+0x70],rax
   14002052e:	test   rax,rax
   140020531:	je     0x1400205ee
   140020537:	cmp    r12,rax
   14002053a:	je     0x1400205ee
   140020540:	cmp    BYTE PTR [rax+0x1],r13b
   140020544:	mov    rsi,QWORD PTR [rip+0x34e1d]        # 0x140055368
   14002054b:	mov    r15d,r13d
   14002054e:	sete   r15b
   140020552:	cmp    rsi,QWORD PTR [rip+0x34e17]        # 0x140055370
   140020559:	jne    0x1400205cf
   14002055b:	mov    rbp,rsi
   14002055e:	mov    eax,r13d
   140020561:	test   rsi,rsi
   140020564:	jne    0x140020571
   140020566:	mov    rsi,r13
   140020569:	jmp    0x1400205c4
   14002056b:	add    rsi,0x8
   14002056f:	inc    eax
   140020571:	cmp    QWORD PTR [rsi],r13
   140020574:	jne    0x14002056b
   140020576:	inc    eax
   140020578:	mov    edx,0x8
   14002057d:	movsxd rcx,eax
   140020580:	call   0x140020ca8
   140020585:	mov    rdi,rax
   140020588:	mov    rsi,rax
   14002058b:	test   rax,rax
   14002058e:	jne    0x140020598
   140020590:	lea    ecx,[rax+0x9]
   140020593:	call   0x140013c64
   140020598:	mov    rax,QWORD PTR [rbp+0x0]
   14002059c:	test   rax,rax
   14002059f:	je     0x1400205bc
   1400205a1:	sub    rbp,rdi
   1400205a4:	mov    rcx,rax
   1400205a7:	call   0x140029410
   1400205ac:	mov    QWORD PTR [rdi],rax
   1400205af:	add    rdi,0x8
   1400205b3:	mov    rax,QWORD PTR [rdi+rbp*1]
   1400205b7:	test   rax,rax
   1400205ba:	jne    0x1400205a4
   1400205bc:	mov    QWORD PTR [rdi],r13
   1400205bf:	mov    rdi,QWORD PTR [rsp+0x70]
   1400205c4:	mov    ebp,DWORD PTR [rsp+0x78]
   1400205c8:	mov    QWORD PTR [rip+0x34d99],rsi        # 0x140055368
   1400205cf:	test   rsi,rsi
   1400205d2:	jne    0x14002065f
   1400205d8:	test   ebp,ebp
   1400205da:	je     0x140020614
   1400205dc:	cmp    QWORD PTR [rip+0x34d95],r13        # 0x140055378
   1400205e3:	je     0x140020614
   1400205e5:	call   0x14001db88
   1400205ea:	test   eax,eax
   1400205ec:	je     0x140020658
   1400205ee:	call   0x14001583c
   1400205f3:	mov    DWORD PTR [rax],0x16
   1400205f9:	or     eax,0xffffffff
   1400205fc:	mov    rbx,QWORD PTR [rsp+0x80]
   140020604:	add    rsp,0x30
   140020608:	pop    r15
   14002060a:	pop    r14
   14002060c:	pop    r13
   14002060e:	pop    r12
   140020610:	pop    rdi
   140020611:	pop    rsi
   140020612:	pop    rbp
   140020613:	ret    
   140020614:	test   r15d,r15d
   140020617:	je     0x14002061d
   140020619:	xor    eax,eax
   14002061b:	jmp    0x1400205fc
   14002061d:	mov    ecx,0x8
   140020622:	call   0x140020c28
   140020627:	mov    QWORD PTR [rip+0x34d3a],rax        # 0x140055368
   14002062e:	test   rax,rax
   140020631:	je     0x1400205f9
   140020633:	mov    QWORD PTR [rax],r13
   140020636:	cmp    QWORD PTR [rip+0x34d3b],r13        # 0x140055378
   14002063d:	jne    0x140020658
   14002063f:	mov    ecx,0x8
   140020644:	call   0x140020c28
   140020649:	mov    QWORD PTR [rip+0x34d28],rax        # 0x140055378
   140020650:	test   rax,rax
   140020653:	je     0x1400205f9
   140020655:	mov    QWORD PTR [rax],r13
   140020658:	mov    rsi,QWORD PTR [rip+0x34d09]        # 0x140055368
   14002065f:	mov    rbp,rsi
   140020662:	test   rsi,rsi
   140020665:	je     0x1400205f9
   140020667:	mov    rcx,QWORD PTR [rsi]
   14002066a:	mov    eax,edi
   14002066c:	mov    rdi,rsi
   14002066f:	sub    eax,r12d
   140020672:	movsxd r13,eax
   140020675:	test   rcx,rcx
   140020678:	je     0x1400206b9
   14002067a:	mov    rdx,rcx
   14002067d:	mov    r8,r13
   140020680:	mov    rcx,r12
   140020683:	call   0x14001dac8
   140020688:	test   eax,eax
   14002068a:	jne    0x1400206a6
   14002068c:	mov    rax,QWORD PTR [rdi]
   14002068f:	cmp    BYTE PTR [r13+rax*1+0x0],0x3d
   140020695:	je     0x14002073c
   14002069b:	cmp    BYTE PTR [r13+rax*1+0x0],bl
   1400206a0:	je     0x14002073c
   1400206a6:	add    rdi,0x8
   1400206aa:	mov    rcx,QWORD PTR [rdi]
   1400206ad:	test   rcx,rcx
   1400206b0:	jne    0x14002067a
   1400206b2:	mov    rsi,QWORD PTR [rip+0x34caf]        # 0x140055368
   1400206b9:	sub    rdi,rsi
   1400206bc:	sar    rdi,0x3
   1400206c0:	neg    edi
   1400206c2:	xor    r13d,r13d
   1400206c5:	test   edi,edi
   1400206c7:	js     0x140020759
   1400206cd:	cmp    QWORD PTR [rbp+0x0],r13
   1400206d1:	je     0x140020759
   1400206d7:	movsxd rsi,edi
   1400206da:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   1400206df:	call   0x1400130a8
   1400206e4:	test   r15d,r15d
   1400206e7:	je     0x14002074f
   1400206e9:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   1400206ee:	je     0x14002070d
   1400206f0:	lea    rcx,[rbp+rsi*8+0x8]
   1400206f5:	mov    rax,QWORD PTR [rcx]
   1400206f8:	inc    edi
   1400206fa:	add    rcx,0x8
   1400206fe:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140020703:	inc    rsi
   140020706:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   14002070b:	jne    0x1400206f5
   14002070d:	movsxd rdx,edi
   140020710:	movabs rax,0x1fffffffffffffff
   14002071a:	cmp    rdx,rax
   14002071d:	jae    0x1400207b5
   140020723:	mov    rcx,QWORD PTR [rip+0x34c3e]        # 0x140055368
   14002072a:	mov    r8d,0x8
   140020730:	call   0x140020db4
   140020735:	test   rax,rax
   140020738:	je     0x1400207b5
   14002073a:	jmp    0x1400207ae
   14002073c:	mov    rsi,QWORD PTR [rip+0x34c25]        # 0x140055368
   140020743:	sub    rdi,rsi
   140020746:	sar    rdi,0x3
   14002074a:	jmp    0x1400206c2
   14002074f:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140020754:	mov    QWORD PTR [r14],r13
   140020757:	jmp    0x1400207b5
   140020759:	test   r15d,r15d
   14002075c:	jne    0x14002085c
   140020762:	test   edi,edi
   140020764:	jns    0x140020768
   140020766:	neg    edi
   140020768:	lea    eax,[rdi+0x2]
   14002076b:	cmp    eax,edi
   14002076d:	jl     0x1400205f9
   140020773:	movsxd r8,eax
   140020776:	movabs rax,0x1fffffffffffffff
   140020780:	cmp    r8,rax
   140020783:	jae    0x1400205f9
   140020789:	mov    edx,0x8
   14002078e:	mov    rcx,rsi
   140020791:	call   0x140020db4
   140020796:	test   rax,rax
   140020799:	je     0x1400205f9
   14002079f:	movsxd rcx,edi
   1400207a2:	mov    QWORD PTR [rax+rcx*8],r12
   1400207a6:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   1400207ab:	mov    QWORD PTR [r14],r13
   1400207ae:	mov    QWORD PTR [rip+0x34bb3],rax        # 0x140055368
   1400207b5:	cmp    DWORD PTR [rsp+0x78],r13d
   1400207ba:	je     0x140020830
   1400207bc:	mov    rcx,r12
   1400207bf:	call   0x14001dae0
   1400207c4:	mov    edx,0x1
   1400207c9:	lea    rcx,[rax+0x2]
   1400207cd:	call   0x140020ca8
   1400207d2:	mov    rdi,rax
   1400207d5:	test   rax,rax
   1400207d8:	je     0x140020830
   1400207da:	mov    rcx,r12
   1400207dd:	call   0x14001dae0
   1400207e2:	mov    r8,r12
   1400207e5:	mov    rcx,rdi
   1400207e8:	lea    rdx,[rax+0x2]
   1400207ec:	call   0x14001dc7c
   1400207f1:	test   eax,eax
   1400207f3:	jne    0x140020847
   1400207f5:	mov    rdx,rdi
   1400207f8:	mov    rcx,rdi
   1400207fb:	sub    rdx,r12
   1400207fe:	add    rdx,QWORD PTR [rsp+0x70]
   140020803:	mov    BYTE PTR [rdx],r13b
   140020806:	inc    rdx
   140020809:	test   r15d,r15d
   14002080c:	cmovne rdx,r13
   140020810:	call   QWORD PTR [rip+0xe9a2]        # 0x14002f1b8
   140020816:	test   eax,eax
   140020818:	jne    0x140020828
   14002081a:	or     ebx,0xffffffff
   14002081d:	call   0x14001583c
   140020822:	mov    DWORD PTR [rax],0x2a
   140020828:	mov    rcx,rdi
   14002082b:	call   0x1400130a8
   140020830:	test   r15d,r15d
   140020833:	je     0x140020840
   140020835:	mov    rcx,r12
   140020838:	call   0x1400130a8
   14002083d:	mov    QWORD PTR [r14],r13
   140020840:	mov    eax,ebx
   140020842:	jmp    0x1400205fc
   140020847:	xor    r9d,r9d
   14002084a:	xor    r8d,r8d
   14002084d:	xor    edx,edx
   14002084f:	xor    ecx,ecx
   140020851:	mov    QWORD PTR [rsp+0x20],r13
   140020856:	call   0x140019ed0
   14002085b:	int3   
   14002085c:	mov    rcx,r12
   14002085f:	call   0x1400130a8
   140020864:	mov    QWORD PTR [r14],r13
   140020867:	jmp    0x140020619
   14002086c:	mov    QWORD PTR [rsp+0x18],rbx
   140020871:	mov    DWORD PTR [rsp+0x10],edx
   140020875:	push   rbp
   140020876:	push   rsi
   140020877:	push   rdi
   140020878:	push   r12
   14002087a:	push   r13
   14002087c:	push   r14
   14002087e:	push   r15
   140020880:	sub    rsp,0x30
   140020884:	xor    ebp,ebp
   140020886:	mov    edi,edx
   140020888:	mov    r14,rcx
   14002088b:	mov    ebx,ebp
   14002088d:	test   rcx,rcx
   140020890:	jne    0x1400208a7
   140020892:	call   0x14001583c
   140020897:	mov    DWORD PTR [rax],0x16
   14002089d:	call   0x140019f74
   1400208a2:	jmp    0x1400209a1
   1400208a7:	mov    r12,QWORD PTR [rcx]
   1400208aa:	test   r12,r12
   1400208ad:	je     0x140020996
   1400208b3:	mov    edx,0x3d
   1400208b8:	mov    rcx,r12
   1400208bb:	call   0x140014680
   1400208c0:	mov    r13,rax
   1400208c3:	test   rax,rax
   1400208c6:	je     0x140020996
   1400208cc:	cmp    r12,rax
   1400208cf:	je     0x140020996
   1400208d5:	cmp    WORD PTR [rax+0x2],bp
   1400208d9:	mov    rsi,QWORD PTR [rip+0x34a98]        # 0x140055378
   1400208e0:	mov    r15d,ebp
   1400208e3:	sete   r15b
   1400208e7:	cmp    rsi,QWORD PTR [rip+0x34a92]        # 0x140055380
   1400208ee:	jne    0x14002095f
   1400208f0:	xor    ecx,ecx
   1400208f2:	mov    rbp,rsi
   1400208f5:	mov    eax,ecx
   1400208f7:	test   rsi,rsi
   1400208fa:	jne    0x140020904
   1400208fc:	jmp    0x140020958
   1400208fe:	add    rsi,0x8
   140020902:	inc    eax
   140020904:	cmp    QWORD PTR [rsi],rcx
   140020907:	jne    0x1400208fe
   140020909:	inc    eax
   14002090b:	mov    edx,0x8
   140020910:	movsxd rcx,eax
   140020913:	call   0x140020ca8
   140020918:	mov    rdi,rax
   14002091b:	mov    rsi,rax
   14002091e:	test   rax,rax
   140020921:	jne    0x14002092b
   140020923:	lea    ecx,[rax+0x9]
   140020926:	call   0x140013c64
   14002092b:	mov    rax,QWORD PTR [rbp+0x0]
   14002092f:	test   rax,rax
   140020932:	je     0x14002094f
   140020934:	sub    rbp,rdi
   140020937:	mov    rcx,rax
   14002093a:	call   0x1400130e8
   14002093f:	mov    QWORD PTR [rdi],rax
   140020942:	add    rdi,0x8
   140020946:	mov    rax,QWORD PTR [rdi+rbp*1]
   14002094a:	test   rax,rax
   14002094d:	jne    0x140020937
   14002094f:	xor    ebp,ebp
   140020951:	mov    QWORD PTR [rdi],rbp
   140020954:	mov    edi,DWORD PTR [rsp+0x78]
   140020958:	mov    QWORD PTR [rip+0x34a19],rsi        # 0x140055378
   14002095f:	test   rsi,rsi
   140020962:	jne    0x140020a0d
   140020968:	mov    rax,QWORD PTR [rip+0x349f9]        # 0x140055368
   14002096f:	test   edi,edi
   140020971:	je     0x1400209bc
   140020973:	test   rax,rax
   140020976:	je     0x1400209bc
   140020978:	call   0x14001c834
   14002097d:	mov    QWORD PTR [rip+0x34a54],rax        # 0x1400553d8
   140020984:	call   0x14001c6fc
   140020989:	test   eax,eax
   14002098b:	jns    0x140020a06
   14002098d:	call   0x14001c634
   140020992:	test   eax,eax
   140020994:	je     0x140020a06
   140020996:	call   0x14001583c
   14002099b:	mov    DWORD PTR [rax],0x16
   1400209a1:	or     eax,0xffffffff
   1400209a4:	mov    rbx,QWORD PTR [rsp+0x80]
   1400209ac:	add    rsp,0x30
   1400209b0:	pop    r15
   1400209b2:	pop    r14
   1400209b4:	pop    r13
   1400209b6:	pop    r12
   1400209b8:	pop    rdi
   1400209b9:	pop    rsi
   1400209ba:	pop    rbp
   1400209bb:	ret    
   1400209bc:	test   r15d,r15d
   1400209bf:	je     0x1400209c5
   1400209c1:	xor    eax,eax
   1400209c3:	jmp    0x1400209a4
   1400209c5:	test   rax,rax
   1400209c8:	jne    0x1400209ed
   1400209ca:	lea    ecx,[rax+0x8]
   1400209cd:	call   0x140020c28
   1400209d2:	mov    QWORD PTR [rip+0x3498f],rax        # 0x140055368
   1400209d9:	test   rax,rax
   1400209dc:	je     0x1400209a1
   1400209de:	mov    QWORD PTR [rax],rbp
   1400209e1:	mov    rsi,QWORD PTR [rip+0x34990]        # 0x140055378
   1400209e8:	test   rsi,rsi
   1400209eb:	jne    0x140020a0d
   1400209ed:	mov    ecx,0x8
   1400209f2:	call   0x140020c28
   1400209f7:	mov    QWORD PTR [rip+0x3497a],rax        # 0x140055378
   1400209fe:	test   rax,rax
   140020a01:	je     0x1400209a1
   140020a03:	mov    QWORD PTR [rax],rbp
   140020a06:	mov    rsi,QWORD PTR [rip+0x3496b]        # 0x140055378
   140020a0d:	mov    rbp,rsi
   140020a10:	test   rsi,rsi
   140020a13:	je     0x1400209a1
   140020a15:	mov    rax,QWORD PTR [rsi]
   140020a18:	sub    r13,r12
   140020a1b:	mov    rdi,rsi
   140020a1e:	sar    r13,1
   140020a21:	mov    QWORD PTR [rsp+0x70],r13
   140020a26:	movsxd r13,r13d
   140020a29:	test   rax,rax
   140020a2c:	je     0x140020a73
   140020a2e:	mov    esi,0x3d
   140020a33:	mov    r8,r13
   140020a36:	mov    rdx,rax
   140020a39:	mov    rcx,r12
   140020a3c:	call   0x14001c5a0
   140020a41:	xor    ecx,ecx
   140020a43:	test   eax,eax
   140020a45:	jne    0x140020a60
   140020a47:	mov    rax,QWORD PTR [rdi]
   140020a4a:	cmp    WORD PTR [rax+r13*2],si
   140020a4f:	je     0x140020af6
   140020a55:	cmp    WORD PTR [rax+r13*2],cx
   140020a5a:	je     0x140020af6
   140020a60:	add    rdi,0x8
   140020a64:	mov    rax,QWORD PTR [rdi]
   140020a67:	test   rax,rax
   140020a6a:	jne    0x140020a33
   140020a6c:	mov    rsi,QWORD PTR [rip+0x34905]        # 0x140055378
   140020a73:	sub    rdi,rsi
   140020a76:	sar    rdi,0x3
   140020a7a:	neg    edi
   140020a7c:	xor    r13d,r13d
   140020a7f:	test   edi,edi
   140020a81:	js     0x140020b13
   140020a87:	cmp    QWORD PTR [rbp+0x0],r13
   140020a8b:	je     0x140020b13
   140020a91:	movsxd rsi,edi
   140020a94:	mov    rcx,QWORD PTR [rbp+rsi*8+0x0]
   140020a99:	call   0x1400130a8
   140020a9e:	test   r15d,r15d
   140020aa1:	je     0x140020b09
   140020aa3:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140020aa8:	je     0x140020ac7
   140020aaa:	lea    rcx,[rbp+rsi*8+0x8]
   140020aaf:	mov    rax,QWORD PTR [rcx]
   140020ab2:	inc    edi
   140020ab4:	add    rcx,0x8
   140020ab8:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
   140020abd:	inc    rsi
   140020ac0:	cmp    QWORD PTR [rbp+rsi*8+0x0],r13
   140020ac5:	jne    0x140020aaf
   140020ac7:	movsxd rdx,edi
   140020aca:	movabs rax,0x1fffffffffffffff
   140020ad4:	cmp    rdx,rax
   140020ad7:	jae    0x140020b6f
   140020add:	mov    rcx,QWORD PTR [rip+0x34894]        # 0x140055378
   140020ae4:	mov    r8d,0x8
   140020aea:	call   0x140020db4
   140020aef:	test   rax,rax
   140020af2:	je     0x140020b6f
   140020af4:	jmp    0x140020b68
   140020af6:	mov    rsi,QWORD PTR [rip+0x3487b]        # 0x140055378
   140020afd:	sub    rdi,rsi
   140020b00:	sar    rdi,0x3
   140020b04:	jmp    0x140020a7c
   140020b09:	mov    QWORD PTR [rbp+rsi*8+0x0],r12
   140020b0e:	mov    QWORD PTR [r14],r13
   140020b11:	jmp    0x140020b6f
   140020b13:	test   r15d,r15d
   140020b16:	jne    0x140020c17
   140020b1c:	test   edi,edi
   140020b1e:	jns    0x140020b22
   140020b20:	neg    edi
   140020b22:	lea    eax,[rdi+0x2]
   140020b25:	cmp    eax,edi
   140020b27:	jl     0x1400209a1
   140020b2d:	movsxd r8,eax
   140020b30:	movabs rax,0x1fffffffffffffff
   140020b3a:	cmp    r8,rax
   140020b3d:	jae    0x1400209a1
   140020b43:	mov    edx,0x8
   140020b48:	mov    rcx,rsi
   140020b4b:	call   0x140020db4
   140020b50:	test   rax,rax
   140020b53:	je     0x1400209a1
   140020b59:	movsxd rcx,edi
   140020b5c:	mov    QWORD PTR [rax+rcx*8],r12
   140020b60:	mov    QWORD PTR [rax+rcx*8+0x8],r13
   140020b65:	mov    QWORD PTR [r14],r13
   140020b68:	mov    QWORD PTR [rip+0x34809],rax        # 0x140055378
   140020b6f:	cmp    DWORD PTR [rsp+0x78],r13d
   140020b74:	je     0x140020beb
   140020b76:	mov    rcx,r12
   140020b79:	call   0x1400192e4
   140020b7e:	mov    esi,0x2
   140020b83:	lea    rcx,[rsi+rax*1]
   140020b87:	mov    edx,esi
   140020b89:	call   0x140020ca8
   140020b8e:	mov    rdi,rax
   140020b91:	test   rax,rax
   140020b94:	je     0x140020beb
   140020b96:	mov    rcx,r12
   140020b99:	call   0x1400192e4
   140020b9e:	mov    r8,r12
   140020ba1:	mov    rcx,rdi
   140020ba4:	lea    rdx,[rsi+rax*1]
   140020ba8:	call   0x140016c68
   140020bad:	test   eax,eax
   140020baf:	jne    0x140020c02
   140020bb1:	mov    rax,QWORD PTR [rsp+0x70]
   140020bb6:	mov    rcx,rdi
   140020bb9:	lea    rdx,[rdi+rax*2]
   140020bbd:	mov    WORD PTR [rdx],r13w
   140020bc1:	add    rdx,rsi
   140020bc4:	test   r15d,r15d
   140020bc7:	cmovne rdx,r13
   140020bcb:	call   QWORD PTR [rip+0xe5df]        # 0x14002f1b0
   140020bd1:	test   eax,eax
   140020bd3:	jne    0x140020be3
   140020bd5:	or     ebx,0xffffffff
   140020bd8:	call   0x14001583c
   140020bdd:	mov    DWORD PTR [rax],0x2a
   140020be3:	mov    rcx,rdi
   140020be6:	call   0x1400130a8
   140020beb:	test   r15d,r15d
   140020bee:	je     0x140020bfb
   140020bf0:	mov    rcx,r12
   140020bf3:	call   0x1400130a8
   140020bf8:	mov    QWORD PTR [r14],r13
   140020bfb:	mov    eax,ebx
   140020bfd:	jmp    0x1400209a4
   140020c02:	xor    r9d,r9d
   140020c05:	xor    r8d,r8d
   140020c08:	xor    edx,edx
   140020c0a:	xor    ecx,ecx
   140020c0c:	mov    QWORD PTR [rsp+0x20],r13
   140020c11:	call   0x140019ed0
   140020c16:	int3   
   140020c17:	mov    rcx,r12
   140020c1a:	call   0x1400130a8
   140020c1f:	mov    QWORD PTR [r14],r13
   140020c22:	jmp    0x1400209c1
   140020c27:	int3   
   140020c28:	mov    rax,rsp
   140020c2b:	mov    QWORD PTR [rax+0x8],rbx
   140020c2f:	mov    QWORD PTR [rax+0x10],rbp
   140020c33:	mov    QWORD PTR [rax+0x18],rsi
   140020c37:	mov    QWORD PTR [rax+0x20],rdi
   140020c3b:	push   r12
   140020c3d:	sub    rsp,0x20
   140020c41:	mov    edi,DWORD PTR [rip+0x356c9]        # 0x140056310
   140020c47:	xor    ebp,ebp
   140020c49:	mov    rsi,rcx
   140020c4c:	or     r12d,0xffffffff
   140020c50:	mov    rcx,rsi
   140020c53:	call   0x140013298
   140020c58:	mov    rbx,rax
   140020c5b:	test   rax,rax
   140020c5e:	jne    0x140020c88
   140020c60:	test   edi,edi
   140020c62:	je     0x140020c88
   140020c64:	mov    ecx,ebp
   140020c66:	call   QWORD PTR [rip+0xe53c]        # 0x14002f1a8
   140020c6c:	mov    edi,DWORD PTR [rip+0x3569e]        # 0x140056310
   140020c72:	lea    r11d,[rbp+0x3e8]
   140020c79:	cmp    r11d,edi
   140020c7c:	mov    ebp,r11d
   140020c7f:	cmova  ebp,r12d
   140020c83:	cmp    ebp,r12d
   140020c86:	jne    0x140020c50
   140020c88:	mov    rbp,QWORD PTR [rsp+0x38]
   140020c8d:	mov    rsi,QWORD PTR [rsp+0x40]
   140020c92:	mov    rdi,QWORD PTR [rsp+0x48]
   140020c97:	mov    rax,rbx
   140020c9a:	mov    rbx,QWORD PTR [rsp+0x30]
   140020c9f:	add    rsp,0x20
   140020ca3:	pop    r12
   140020ca5:	ret    
   140020ca6:	int3   
   140020ca7:	int3   
   140020ca8:	mov    rax,rsp
   140020cab:	mov    QWORD PTR [rax+0x8],rbx
   140020caf:	mov    QWORD PTR [rax+0x10],rbp
   140020cb3:	mov    QWORD PTR [rax+0x18],rsi
   140020cb7:	mov    QWORD PTR [rax+0x20],rdi
   140020cbb:	push   r12
   140020cbd:	sub    rsp,0x20
   140020cc1:	xor    edi,edi
   140020cc3:	mov    rsi,rdx
   140020cc6:	mov    rbp,rcx
   140020cc9:	or     r12d,0xffffffff
   140020ccd:	xor    r8d,r8d
   140020cd0:	mov    rdx,rsi
   140020cd3:	mov    rcx,rbp
   140020cd6:	call   0x14001aff0
   140020cdb:	mov    rbx,rax
   140020cde:	test   rax,rax
   140020ce1:	jne    0x140020d0d
   140020ce3:	cmp    DWORD PTR [rip+0x35627],eax        # 0x140056310
   140020ce9:	jbe    0x140020d0d
   140020ceb:	mov    ecx,edi
   140020ced:	call   QWORD PTR [rip+0xe4b5]        # 0x14002f1a8
   140020cf3:	lea    r11d,[rdi+0x3e8]
   140020cfa:	cmp    r11d,DWORD PTR [rip+0x3560f]        # 0x140056310
   140020d01:	mov    edi,r11d
   140020d04:	cmova  edi,r12d
   140020d08:	cmp    edi,r12d
   140020d0b:	jne    0x140020ccd
   140020d0d:	mov    rbp,QWORD PTR [rsp+0x38]
   140020d12:	mov    rsi,QWORD PTR [rsp+0x40]
   140020d17:	mov    rdi,QWORD PTR [rsp+0x48]
   140020d1c:	mov    rax,rbx
   140020d1f:	mov    rbx,QWORD PTR [rsp+0x30]
   140020d24:	add    rsp,0x20
   140020d28:	pop    r12
   140020d2a:	ret    
   140020d2b:	int3   
   140020d2c:	mov    rax,rsp
   140020d2f:	mov    QWORD PTR [rax+0x8],rbx
   140020d33:	mov    QWORD PTR [rax+0x10],rbp
   140020d37:	mov    QWORD PTR [rax+0x18],rsi
   140020d3b:	mov    QWORD PTR [rax+0x20],rdi
   140020d3f:	push   r12
   140020d41:	sub    rsp,0x20
   140020d45:	xor    esi,esi
   140020d47:	mov    rdi,rdx
   140020d4a:	mov    rbp,rcx
   140020d4d:	or     r12d,0xffffffff
   140020d51:	mov    rdx,rdi
   140020d54:	mov    rcx,rbp
   140020d57:	call   0x1400131c4
   140020d5c:	mov    rbx,rax
   140020d5f:	test   rax,rax
   140020d62:	jne    0x140020d93
   140020d64:	test   rdi,rdi
   140020d67:	je     0x140020d93
   140020d69:	cmp    DWORD PTR [rip+0x355a1],eax        # 0x140056310
   140020d6f:	jbe    0x140020d93
   140020d71:	mov    ecx,esi
   140020d73:	call   QWORD PTR [rip+0xe42f]        # 0x14002f1a8
   140020d79:	lea    r11d,[rsi+0x3e8]
   140020d80:	cmp    r11d,DWORD PTR [rip+0x35589]        # 0x140056310
   140020d87:	mov    esi,r11d
   140020d8a:	cmova  esi,r12d
   140020d8e:	cmp    esi,r12d
   140020d91:	jne    0x140020d51
   140020d93:	mov    rbp,QWORD PTR [rsp+0x38]
   140020d98:	mov    rsi,QWORD PTR [rsp+0x40]
   140020d9d:	mov    rdi,QWORD PTR [rsp+0x48]
   140020da2:	mov    rax,rbx
   140020da5:	mov    rbx,QWORD PTR [rsp+0x30]
   140020daa:	add    rsp,0x20
   140020dae:	pop    r12
   140020db0:	ret    
   140020db1:	int3   
   140020db2:	int3   
   140020db3:	int3   
   140020db4:	mov    QWORD PTR [rsp+0x8],rbx
   140020db9:	mov    QWORD PTR [rsp+0x10],rbp
   140020dbe:	mov    QWORD PTR [rsp+0x18],rsi
   140020dc3:	push   rdi
   140020dc4:	push   r12
   140020dc6:	push   r13
   140020dc8:	sub    rsp,0x20
   140020dcc:	xor    esi,esi
   140020dce:	mov    rdi,r8
   140020dd1:	mov    rbp,rdx
   140020dd4:	or     r13d,0xffffffff
   140020dd8:	mov    r12,rcx
   140020ddb:	mov    r8,rdi
   140020dde:	mov    rdx,rbp
   140020de1:	mov    rcx,r12
   140020de4:	call   0x140029574
   140020de9:	mov    rbx,rax
   140020dec:	test   rax,rax
   140020def:	jne    0x140020e20
   140020df1:	test   rdi,rdi
   140020df4:	je     0x140020e20
   140020df6:	cmp    DWORD PTR [rip+0x35514],eax        # 0x140056310
   140020dfc:	jbe    0x140020e20
   140020dfe:	mov    ecx,esi
   140020e00:	call   QWORD PTR [rip+0xe3a2]        # 0x14002f1a8
   140020e06:	lea    r11d,[rsi+0x3e8]
   140020e0d:	cmp    r11d,DWORD PTR [rip+0x354fc]        # 0x140056310
   140020e14:	mov    esi,r11d
   140020e17:	cmova  esi,r13d
   140020e1b:	cmp    esi,r13d
   140020e1e:	jne    0x140020ddb
   140020e20:	mov    rbp,QWORD PTR [rsp+0x48]
   140020e25:	mov    rsi,QWORD PTR [rsp+0x50]
   140020e2a:	mov    rax,rbx
   140020e2d:	mov    rbx,QWORD PTR [rsp+0x40]
   140020e32:	add    rsp,0x20
   140020e36:	pop    r13
   140020e38:	pop    r12
   140020e3a:	pop    rdi
   140020e3b:	ret    
   140020e3c:	rex push rbx
   140020e3e:	sub    rsp,0x40
   140020e42:	mov    ebx,ecx
   140020e44:	lea    rcx,[rsp+0x20]
   140020e49:	call   0x140012690
   140020e4e:	mov    rax,QWORD PTR [rsp+0x20]
   140020e53:	movzx  r11d,bl
   140020e57:	mov    rcx,QWORD PTR [rax+0x140]
   140020e5e:	movzx  eax,WORD PTR [rcx+r11*2]
   140020e63:	and    eax,0x8000
   140020e68:	cmp    BYTE PTR [rsp+0x38],0x0
   140020e6d:	je     0x140020e7b
   140020e6f:	mov    rcx,QWORD PTR [rsp+0x30]
   140020e74:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020e7b:	add    rsp,0x40
   140020e7f:	pop    rbx
   140020e80:	ret    
   140020e81:	int3   
   140020e82:	int3   
   140020e83:	int3   
   140020e84:	rex push rbx
   140020e86:	sub    rsp,0x40
   140020e8a:	mov    ebx,ecx
   140020e8c:	lea    rcx,[rsp+0x20]
   140020e91:	xor    edx,edx
   140020e93:	call   0x140012690
   140020e98:	mov    rax,QWORD PTR [rsp+0x20]
   140020e9d:	movzx  r11d,bl
   140020ea1:	mov    rcx,QWORD PTR [rax+0x140]
   140020ea8:	movzx  eax,WORD PTR [rcx+r11*2]
   140020ead:	and    eax,0x8000
   140020eb2:	cmp    BYTE PTR [rsp+0x38],0x0
   140020eb7:	je     0x140020ec5
   140020eb9:	mov    rcx,QWORD PTR [rsp+0x30]
   140020ebe:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020ec5:	add    rsp,0x40
   140020ec9:	pop    rbx
   140020eca:	ret    
   140020ecb:	int3   
   140020ecc:	mov    QWORD PTR [rsp+0x8],rbx
   140020ed1:	mov    QWORD PTR [rsp+0x10],rbp
   140020ed6:	mov    QWORD PTR [rsp+0x18],rdi
   140020edb:	push   r12
   140020edd:	push   r13
   140020edf:	push   r14
   140020ee1:	sub    rsp,0x90
   140020ee8:	lea    rcx,[rsp+0x20]
   140020eed:	call   QWORD PTR [rip+0xe3d5]        # 0x14002f2c8
   140020ef3:	mov    edx,0x58
   140020ef8:	lea    ebp,[rdx-0x38]
   140020efb:	mov    ecx,ebp
   140020efd:	call   0x140020ca8
   140020f02:	xor    r14d,r14d
   140020f05:	mov    rdx,rax
   140020f08:	test   rax,rax
   140020f0b:	jne    0x140020f15
   140020f0d:	or     eax,0xffffffff
   140020f10:	jmp    0x140021180
   140020f15:	mov    QWORD PTR [rip+0x35704],rax        # 0x140056620
   140020f1c:	add    rax,0xb00
   140020f22:	mov    ecx,ebp
   140020f24:	mov    DWORD PTR [rip+0x356da],ecx        # 0x140056604
   140020f2a:	cmp    rdx,rax
   140020f2d:	jae    0x140020f74
   140020f2f:	add    rdx,0x9
   140020f33:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140020f38:	mov    WORD PTR [rdx-0x1],0xa00
   140020f3e:	mov    DWORD PTR [rdx+0x3],r14d
   140020f42:	mov    WORD PTR [rdx+0x2f],0xa00
   140020f48:	mov    BYTE PTR [rdx+0x31],0xa
   140020f4c:	mov    DWORD PTR [rdx+0x47],r14d
   140020f50:	mov    BYTE PTR [rdx+0x43],r14b
   140020f54:	mov    rax,QWORD PTR [rip+0x356c5]        # 0x140056620
   140020f5b:	add    rdx,0x58
   140020f5f:	lea    rcx,[rdx-0x9]
   140020f63:	add    rax,0xb00
   140020f69:	cmp    rcx,rax
   140020f6c:	jb     0x140020f33
   140020f6e:	mov    ecx,DWORD PTR [rip+0x35690]        # 0x140056604
   140020f74:	cmp    WORD PTR [rsp+0x62],r14w
   140020f7a:	je     0x1400210b4
   140020f80:	mov    rax,QWORD PTR [rsp+0x68]
   140020f85:	test   rax,rax
   140020f88:	je     0x1400210b4
   140020f8e:	movsxd r12,DWORD PTR [rax]
   140020f91:	mov    ebx,0x800
   140020f96:	lea    r13,[rax+0x4]
   140020f9a:	add    r12,r13
   140020f9d:	cmp    DWORD PTR [rax],ebx
   140020f9f:	cmovl  ebx,DWORD PTR [rax]
   140020fa2:	cmp    ecx,ebx
   140020fa4:	jge    0x140021031
   140020faa:	lea    rdi,[rip+0x35677]        # 0x140056628
   140020fb1:	mov    edx,0x58
   140020fb6:	mov    rcx,rbp
   140020fb9:	call   0x140020ca8
   140020fbe:	test   rax,rax
   140020fc1:	je     0x14002102b
   140020fc3:	mov    edx,DWORD PTR [rip+0x3563b]        # 0x140056604
   140020fc9:	lea    rcx,[rax+0xb00]
   140020fd0:	mov    QWORD PTR [rdi],rax
   140020fd3:	add    edx,ebp
   140020fd5:	mov    DWORD PTR [rip+0x35629],edx        # 0x140056604
   140020fdb:	cmp    rax,rcx
   140020fde:	jae    0x140021021
   140020fe0:	lea    rdx,[rax+0x9]
   140020fe4:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140020fe9:	and    BYTE PTR [rdx+0x2f],0x80
   140020fed:	mov    WORD PTR [rdx-0x1],0xa00
   140020ff3:	mov    DWORD PTR [rdx+0x3],r14d
   140020ff7:	mov    WORD PTR [rdx+0x30],0xa0a
   140020ffd:	mov    DWORD PTR [rdx+0x47],r14d
   140021001:	mov    BYTE PTR [rdx+0x43],r14b
   140021005:	mov    rax,QWORD PTR [rdi]
   140021008:	add    rdx,0x58
   14002100c:	lea    rcx,[rdx-0x9]
   140021010:	add    rax,0xb00
   140021016:	cmp    rcx,rax
   140021019:	jb     0x140020fe4
   14002101b:	mov    edx,DWORD PTR [rip+0x355e3]        # 0x140056604
   140021021:	add    rdi,0x8
   140021025:	cmp    edx,ebx
   140021027:	jl     0x140020fb1
   140021029:	jmp    0x140021031
   14002102b:	mov    ebx,DWORD PTR [rip+0x355d3]        # 0x140056604
   140021031:	mov    edi,r14d
   140021034:	test   ebx,ebx
   140021036:	jle    0x1400210b4
   140021038:	cmp    QWORD PTR [r12],0xffffffffffffffff
   14002103d:	je     0x1400210a7
   14002103f:	cmp    QWORD PTR [r12],0xfffffffffffffffe
   140021044:	je     0x1400210a7
   140021046:	test   BYTE PTR [r13+0x0],0x1
   14002104b:	je     0x1400210a7
   14002104d:	test   BYTE PTR [r13+0x0],0x8
   140021052:	jne    0x140021062
   140021054:	mov    rcx,QWORD PTR [r12]
   140021058:	call   QWORD PTR [rip+0xe23a]        # 0x14002f298
   14002105e:	test   eax,eax
   140021060:	je     0x1400210a7
   140021062:	movsxd rbp,edi
   140021065:	lea    rcx,[rip+0x355b4]        # 0x140056620
   14002106c:	mov    edx,0xfa0
   140021071:	mov    rax,rbp
   140021074:	and    ebp,0x1f
   140021077:	sar    rax,0x5
   14002107b:	imul   rbp,rbp,0x58
   14002107f:	add    rbp,QWORD PTR [rcx+rax*8]
   140021083:	mov    rax,QWORD PTR [r12]
   140021087:	mov    QWORD PTR [rbp+0x0],rax
   14002108b:	mov    al,BYTE PTR [r13+0x0]
   14002108f:	lea    rcx,[rbp+0x10]
   140021093:	mov    BYTE PTR [rbp+0x8],al
   140021096:	call   QWORD PTR [rip+0xe12c]        # 0x14002f1c8
   14002109c:	test   eax,eax
   14002109e:	je     0x140020f0d
   1400210a4:	inc    DWORD PTR [rbp+0xc]
   1400210a7:	inc    edi
   1400210a9:	inc    r13
   1400210ac:	add    r12,0x8
   1400210b0:	cmp    edi,ebx
   1400210b2:	jl     0x140021038
   1400210b4:	mov    r12d,r14d
   1400210b7:	mov    rbx,r14
   1400210ba:	mov    rdi,QWORD PTR [rip+0x3555f]        # 0x140056620
   1400210c1:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   1400210c6:	je     0x1400210d9
   1400210c8:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   1400210cd:	je     0x1400210d9
   1400210cf:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   1400210d4:	jmp    0x14002115e
   1400210d9:	lea    eax,[r12-0x1]
   1400210de:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   1400210e3:	neg    eax
   1400210e5:	mov    eax,0xfffffff6
   1400210ea:	sbb    ecx,ecx
   1400210ec:	add    ecx,0xfffffff5
   1400210ef:	test   r12d,r12d
   1400210f2:	cmove  ecx,eax
   1400210f5:	call   QWORD PTR [rip+0xe0e5]        # 0x14002f1e0
   1400210fb:	mov    rbp,rax
   1400210fe:	cmp    rax,0xffffffffffffffff
   140021102:	je     0x140021151
   140021104:	test   rax,rax
   140021107:	je     0x140021151
   140021109:	mov    rcx,rax
   14002110c:	call   QWORD PTR [rip+0xe186]        # 0x14002f298
   140021112:	test   eax,eax
   140021114:	je     0x140021151
   140021116:	movzx  eax,al
   140021119:	mov    QWORD PTR [rbx+rdi*1],rbp
   14002111d:	cmp    eax,0x2
   140021120:	jne    0x140021129
   140021122:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140021127:	jmp    0x140021133
   140021129:	cmp    eax,0x3
   14002112c:	jne    0x140021133
   14002112e:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   140021133:	lea    rcx,[rbx+rdi*1+0x10]
   140021138:	mov    edx,0xfa0
   14002113d:	call   QWORD PTR [rip+0xe085]        # 0x14002f1c8
   140021143:	test   eax,eax
   140021145:	je     0x140020f0d
   14002114b:	inc    DWORD PTR [rbx+rdi*1+0xc]
   14002114f:	jmp    0x14002115e
   140021151:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140021156:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14002115e:	add    rbx,0x58
   140021162:	inc    r12d
   140021165:	cmp    rbx,0x108
   14002116c:	jl     0x1400210ba
   140021172:	mov    ecx,DWORD PTR [rip+0x3548c]        # 0x140056604
   140021178:	call   QWORD PTR [rip+0xe022]        # 0x14002f1a0
   14002117e:	xor    eax,eax
   140021180:	lea    r11,[rsp+0x90]
   140021188:	mov    rbx,QWORD PTR [r11+0x20]
   14002118c:	mov    rbp,QWORD PTR [r11+0x28]
   140021190:	mov    rdi,QWORD PTR [r11+0x30]
   140021194:	mov    rsp,r11
   140021197:	pop    r14
   140021199:	pop    r13
   14002119b:	pop    r12
   14002119d:	ret    
   14002119e:	int3   
   14002119f:	int3   
   1400211a0:	sub    rsp,0x28
   1400211a4:	test   rcx,rcx
   1400211a7:	jne    0x1400211be
   1400211a9:	call   0x14001583c
   1400211ae:	mov    DWORD PTR [rax],0x16
   1400211b4:	call   0x140019f74
   1400211b9:	or     eax,0xffffffff
   1400211bc:	jmp    0x1400211c1
   1400211be:	mov    eax,DWORD PTR [rcx+0x1c]
   1400211c1:	add    rsp,0x28
   1400211c5:	ret    
   1400211c6:	int3   
   1400211c7:	int3   
   1400211c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400211cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400211d2:	push   rdi
   1400211d3:	sub    rsp,0x30
   1400211d7:	xor    edi,edi
   1400211d9:	lea    ecx,[rdi+0x1]
   1400211dc:	call   0x14001ccc8
   1400211e1:	nop
   1400211e2:	lea    ebx,[rdi+0x3]
   1400211e5:	mov    DWORD PTR [rsp+0x20],ebx
   1400211e9:	cmp    ebx,DWORD PTR [rip+0x36651]        # 0x140057840
   1400211ef:	jge    0x140021256
   1400211f1:	movsxd rsi,ebx
   1400211f4:	mov    rax,QWORD PTR [rip+0x35635]        # 0x140056830
   1400211fb:	cmp    QWORD PTR [rax+rsi*8],0x0
   140021200:	je     0x140021252
   140021202:	mov    rcx,QWORD PTR [rax+rsi*8]
   140021206:	test   BYTE PTR [rcx+0x18],0x83
   14002120a:	je     0x14002121c
   14002120c:	call   0x140014f7c
   140021211:	cmp    eax,0xffffffff
   140021214:	je     0x14002121c
   140021216:	inc    edi
   140021218:	mov    DWORD PTR [rsp+0x24],edi
   14002121c:	cmp    ebx,0x14
   14002121f:	jl     0x140021252
   140021221:	mov    rax,QWORD PTR [rip+0x35608]        # 0x140056830
   140021228:	mov    rcx,QWORD PTR [rax+rsi*8]
   14002122c:	add    rcx,0x30
   140021230:	call   QWORD PTR [rip+0xdf8a]        # 0x14002f1c0
   140021236:	mov    rcx,QWORD PTR [rip+0x355f3]        # 0x140056830
   14002123d:	mov    rcx,QWORD PTR [rcx+rsi*8]
   140021241:	call   0x1400130a8
   140021246:	mov    r11,QWORD PTR [rip+0x355e3]        # 0x140056830
   14002124d:	and    QWORD PTR [r11+rsi*8],0x0
   140021252:	inc    ebx
   140021254:	jmp    0x1400211e5
   140021256:	mov    ecx,0x1
   14002125b:	call   0x14001cbc8
   140021260:	mov    eax,edi
   140021262:	mov    rbx,QWORD PTR [rsp+0x40]
   140021267:	mov    rsi,QWORD PTR [rsp+0x48]
   14002126c:	add    rsp,0x30
   140021270:	pop    rdi
   140021271:	ret    
   140021272:	int3   
   140021273:	int3   
   140021274:	mov    QWORD PTR [rsp+0x8],rbx
   140021279:	mov    QWORD PTR [rsp+0x10],rsi
   14002127e:	push   rdi
   14002127f:	sub    rsp,0x20
   140021283:	mov    eax,DWORD PTR [rcx+0x18]
   140021286:	xor    esi,esi
   140021288:	mov    rbx,rcx
   14002128b:	and    al,0x3
   14002128d:	cmp    al,0x2
   14002128f:	jne    0x1400212d0
   140021291:	test   DWORD PTR [rcx+0x18],0x108
   140021298:	je     0x1400212d0
   14002129a:	mov    edi,DWORD PTR [rcx]
   14002129c:	sub    edi,DWORD PTR [rcx+0x10]
   14002129f:	test   edi,edi
   1400212a1:	jle    0x1400212d0
   1400212a3:	call   0x1400211a0
   1400212a8:	mov    rdx,QWORD PTR [rbx+0x10]
   1400212ac:	mov    r8d,edi
   1400212af:	mov    ecx,eax
   1400212b1:	call   0x140021bcc
   1400212b6:	cmp    eax,edi
   1400212b8:	jne    0x1400212c9
   1400212ba:	mov    eax,DWORD PTR [rbx+0x18]
   1400212bd:	test   al,al
   1400212bf:	jns    0x1400212d0
   1400212c1:	and    eax,0xfffffffd
   1400212c4:	mov    DWORD PTR [rbx+0x18],eax
   1400212c7:	jmp    0x1400212d0
   1400212c9:	or     DWORD PTR [rbx+0x18],0x20
   1400212cd:	or     esi,0xffffffff
   1400212d0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400212d4:	and    DWORD PTR [rbx+0x8],0x0
   1400212d8:	mov    eax,esi
   1400212da:	mov    rsi,QWORD PTR [rsp+0x38]
   1400212df:	mov    QWORD PTR [rbx],rcx
   1400212e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400212e7:	add    rsp,0x20
   1400212eb:	pop    rdi
   1400212ec:	ret    
   1400212ed:	int3   
   1400212ee:	int3   
   1400212ef:	int3   
   1400212f0:	rex push rbx
   1400212f2:	sub    rsp,0x20
   1400212f6:	mov    rbx,rcx
   1400212f9:	test   rcx,rcx
   1400212fc:	jne    0x140021308
   1400212fe:	add    rsp,0x20
   140021302:	pop    rbx
   140021303:	jmp    0x14002133c
   140021308:	call   0x140021274
   14002130d:	test   eax,eax
   14002130f:	je     0x140021316
   140021311:	or     eax,0xffffffff
   140021314:	jmp    0x140021336
   140021316:	test   DWORD PTR [rbx+0x18],0x4000
   14002131d:	je     0x140021334
   14002131f:	mov    rcx,rbx
   140021322:	call   0x1400211a0
   140021327:	mov    ecx,eax
   140021329:	call   0x1400297a8
   14002132e:	neg    eax
   140021330:	sbb    eax,eax
   140021332:	jmp    0x140021336
   140021334:	xor    eax,eax
   140021336:	add    rsp,0x20
   14002133a:	pop    rbx
   14002133b:	ret    
   14002133c:	mov    QWORD PTR [rsp+0x8],rbx
   140021341:	mov    QWORD PTR [rsp+0x10],rsi
   140021346:	mov    QWORD PTR [rsp+0x18],rdi
   14002134b:	push   r12
   14002134d:	push   r13
   14002134f:	push   r15
   140021351:	sub    rsp,0x30
   140021355:	mov    r13d,ecx
   140021358:	xor    esi,esi
   14002135a:	xor    edi,edi
   14002135c:	lea    ecx,[rsi+0x1]
   14002135f:	call   0x14001ccc8
   140021364:	nop
   140021365:	xor    ebx,ebx
   140021367:	or     r15d,0xffffffff
   14002136b:	mov    DWORD PTR [rsp+0x20],ebx
   14002136f:	cmp    ebx,DWORD PTR [rip+0x364cb]        # 0x140057840
   140021375:	jge    0x1400213fb
   14002137b:	movsxd r12,ebx
   14002137e:	mov    rax,QWORD PTR [rip+0x354ab]        # 0x140056830
   140021385:	cmp    QWORD PTR [rax+r12*8],0x0
   14002138a:	je     0x1400213f4
   14002138c:	mov    rdx,QWORD PTR [rax+r12*8]
   140021390:	test   BYTE PTR [rdx+0x18],0x83
   140021394:	je     0x1400213f4
   140021396:	mov    ecx,ebx
   140021398:	call   0x140014db0
   14002139d:	nop
   14002139e:	mov    rax,QWORD PTR [rip+0x3548b]        # 0x140056830
   1400213a5:	mov    rcx,QWORD PTR [rax+r12*8]
   1400213a9:	test   BYTE PTR [rcx+0x18],0x83
   1400213ad:	je     0x1400213e2
   1400213af:	cmp    r13d,0x1
   1400213b3:	jne    0x1400213c7
   1400213b5:	call   0x1400212f0
   1400213ba:	cmp    eax,r15d
   1400213bd:	je     0x1400213e2
   1400213bf:	inc    esi
   1400213c1:	mov    DWORD PTR [rsp+0x24],esi
   1400213c5:	jmp    0x1400213e2
   1400213c7:	test   r13d,r13d
   1400213ca:	jne    0x1400213e2
   1400213cc:	test   BYTE PTR [rcx+0x18],0x2
   1400213d0:	je     0x1400213e2
   1400213d2:	call   0x1400212f0
   1400213d7:	cmp    eax,r15d
   1400213da:	cmove  edi,r15d
   1400213de:	mov    DWORD PTR [rsp+0x28],edi
   1400213e2:	mov    rdx,QWORD PTR [rip+0x35447]        # 0x140056830
   1400213e9:	mov    rdx,QWORD PTR [rdx+r12*8]
   1400213ed:	mov    ecx,ebx
   1400213ef:	call   0x140014e30
   1400213f4:	inc    ebx
   1400213f6:	jmp    0x14002136b
   1400213fb:	mov    ecx,0x1
   140021400:	call   0x14001cbc8
   140021405:	cmp    r13d,0x1
   140021409:	cmove  edi,esi
   14002140c:	mov    eax,edi
   14002140e:	mov    rbx,QWORD PTR [rsp+0x50]
   140021413:	mov    rsi,QWORD PTR [rsp+0x58]
   140021418:	mov    rdi,QWORD PTR [rsp+0x60]
   14002141d:	add    rsp,0x30
   140021421:	pop    r15
   140021423:	pop    r13
   140021425:	pop    r12
   140021427:	ret    
   140021428:	mov    ecx,0x1
   14002142d:	jmp    0x14002133c
   140021432:	int3   
   140021433:	int3   
   140021434:	rex push rbx
   140021436:	sub    rsp,0x20
   14002143a:	test   BYTE PTR [rcx+0x18],0x83
   14002143e:	mov    rbx,rcx
   140021441:	je     0x140021465
   140021443:	test   BYTE PTR [rcx+0x18],0x8
   140021447:	je     0x140021465
   140021449:	mov    rcx,QWORD PTR [rcx+0x10]
   14002144d:	call   0x1400130a8
   140021452:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140021459:	xor    eax,eax
   14002145b:	mov    QWORD PTR [rbx],rax
   14002145e:	mov    QWORD PTR [rbx+0x10],rax
   140021462:	mov    DWORD PTR [rbx+0x8],eax
   140021465:	add    rsp,0x20
   140021469:	pop    rbx
   14002146a:	ret    
   14002146b:	int3   
   14002146c:	mov    QWORD PTR [rsp+0x20],rbx
   140021471:	push   rbp
   140021472:	push   rsi
   140021473:	push   rdi
   140021474:	push   r12
   140021476:	push   r13
   140021478:	push   r14
   14002147a:	push   r15
   14002147c:	lea    rbp,[rsp-0x1a30]
   140021484:	mov    eax,0x1b30
   140021489:	call   0x140012f50
   14002148e:	sub    rsp,rax
   140021491:	mov    rax,QWORD PTR [rip+0x1e498]        # 0x14003f930
   140021498:	xor    rax,rsp
   14002149b:	mov    QWORD PTR [rbp+0x1a20],rax
   1400214a2:	xor    edi,edi
   1400214a4:	mov    r14d,r8d
   1400214a7:	mov    r13,rdx
   1400214aa:	and    DWORD PTR [rsp+0x44],edi
   1400214ae:	movsxd rbx,ecx
   1400214b1:	test   r8d,r8d
   1400214b4:	jne    0x1400214bd
   1400214b6:	xor    eax,eax
   1400214b8:	jmp    0x140021ba2
   1400214bd:	test   rdx,rdx
   1400214c0:	jne    0x1400214e1
   1400214c2:	call   0x14001585c
   1400214c7:	and    DWORD PTR [rax],edi
   1400214c9:	call   0x14001583c
   1400214ce:	mov    DWORD PTR [rax],0x16
   1400214d4:	call   0x140019f74
   1400214d9:	or     eax,0xffffffff
   1400214dc:	jmp    0x140021ba2
   1400214e1:	mov    r15,rbx
   1400214e4:	mov    r12,rbx
   1400214e7:	lea    rax,[rip+0x35132]        # 0x140056620
   1400214ee:	sar    r12,0x5
   1400214f2:	and    r15d,0x1f
   1400214f6:	mov    rcx,QWORD PTR [rax+r12*8]
   1400214fa:	mov    QWORD PTR [rsp+0x50],r12
   1400214ff:	imul   r15,r15,0x58
   140021503:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140021508:	mov    QWORD PTR [rsp+0x60],r15
   14002150d:	add    sil,sil
   140021510:	sar    sil,1
   140021513:	cmp    sil,0x2
   140021517:	je     0x14002151f
   140021519:	cmp    sil,0x1
   14002151d:	jne    0x140021528
   14002151f:	mov    eax,r14d
   140021522:	not    eax
   140021524:	test   al,0x1
   140021526:	je     0x1400214c2
   140021528:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   14002152e:	je     0x14002153d
   140021530:	xor    edx,edx
   140021532:	mov    ecx,ebx
   140021534:	lea    r8d,[rdx+0x2]
   140021538:	call   0x140022e60
   14002153d:	mov    ecx,ebx
   14002153f:	call   0x1400279e8
   140021544:	test   eax,eax
   140021546:	je     0x140021816
   14002154c:	lea    rax,[rip+0x350cd]        # 0x140056620
   140021553:	mov    rax,QWORD PTR [rax+r12*8]
   140021557:	test   BYTE PTR [r15+rax*1+0x8],0x80
   14002155d:	je     0x140021816
   140021563:	call   0x14001ae14
   140021568:	xor    ebx,ebx
   14002156a:	lea    rdx,[rsp+0x5c]
   14002156f:	mov    rcx,QWORD PTR [rax+0xc0]
   140021576:	lea    rax,[rip+0x350a3]        # 0x140056620
   14002157d:	cmp    DWORD PTR [rcx+0x14],ebx
   140021580:	mov    rcx,QWORD PTR [rax+r12*8]
   140021584:	mov    rcx,QWORD PTR [r15+rcx*1]
   140021588:	sete   bl
   14002158b:	call   QWORD PTR [rip+0xdbff]        # 0x14002f190
   140021591:	test   eax,eax
   140021593:	je     0x140021816
   140021599:	test   ebx,ebx
   14002159b:	je     0x1400215a6
   14002159d:	test   sil,sil
   1400215a0:	je     0x140021816
   1400215a6:	call   QWORD PTR [rip+0xdbec]        # 0x14002f198
   1400215ac:	and    DWORD PTR [rsp+0x58],edi
   1400215b0:	mov    rbx,r13
   1400215b3:	mov    DWORD PTR [rsp+0x5c],eax
   1400215b7:	test   r14d,r14d
   1400215ba:	je     0x14002180d
   1400215c0:	test   sil,sil
   1400215c3:	jne    0x14002174d
   1400215c9:	mov    cl,BYTE PTR [rbx]
   1400215cb:	xor    eax,eax
   1400215cd:	cmp    cl,0xa
   1400215d0:	sete   al
   1400215d3:	mov    DWORD PTR [rsp+0x4c],eax
   1400215d7:	lea    rax,[rip+0x35042]        # 0x140056620
   1400215de:	mov    rdx,QWORD PTR [rax+r12*8]
   1400215e2:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   1400215e8:	je     0x14002160a
   1400215ea:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   1400215ef:	mov    BYTE PTR [rsp+0x61],cl
   1400215f3:	mov    r8d,0x2
   1400215f9:	mov    BYTE PTR [rsp+0x60],al
   1400215fd:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140021603:	lea    rdx,[rsp+0x60]
   140021608:	jmp    0x140021653
   14002160a:	movsx  ecx,cl
   14002160d:	call   0x140020e84
   140021612:	test   eax,eax
   140021614:	je     0x14002164a
   140021616:	mov    rax,r14
   140021619:	sub    rax,rbx
   14002161c:	add    rax,r13
   14002161f:	cmp    rax,0x1
   140021623:	jle    0x1400217d6
   140021629:	lea    rcx,[rsp+0x40]
   14002162e:	mov    r8d,0x2
   140021634:	mov    rdx,rbx
   140021637:	call   0x140029204
   14002163c:	cmp    eax,0xffffffff
   14002163f:	je     0x1400217f7
   140021645:	inc    rbx
   140021648:	jmp    0x140021666
   14002164a:	mov    r8d,0x1
   140021650:	mov    rdx,rbx
   140021653:	lea    rcx,[rsp+0x40]
   140021658:	call   0x140029204
   14002165d:	cmp    eax,0xffffffff
   140021660:	je     0x1400217f7
   140021666:	and    QWORD PTR [rsp+0x38],0x0
   14002166c:	and    QWORD PTR [rsp+0x30],0x0
   140021672:	mov    ecx,DWORD PTR [rsp+0x5c]
   140021676:	lea    rax,[rsp+0x60]
   14002167b:	lea    r8,[rsp+0x40]
   140021680:	mov    r9d,0x1
   140021686:	xor    edx,edx
   140021688:	mov    DWORD PTR [rsp+0x28],0x5
   140021690:	inc    rbx
   140021693:	mov    QWORD PTR [rsp+0x20],rax
   140021698:	call   QWORD PTR [rip+0xdb92]        # 0x14002f230
   14002169e:	mov    r12d,eax
   1400216a1:	test   eax,eax
   1400216a3:	je     0x1400217f7
   1400216a9:	mov    rcx,QWORD PTR [rsp+0x50]
   1400216ae:	and    QWORD PTR [rsp+0x20],0x0
   1400216b4:	lea    rax,[rip+0x34f65]        # 0x140056620
   1400216bb:	mov    rcx,QWORD PTR [rax+rcx*8]
   1400216bf:	lea    r9,[rsp+0x58]
   1400216c4:	lea    rdx,[rsp+0x60]
   1400216c9:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400216cd:	mov    r8d,r12d
   1400216d0:	call   QWORD PTR [rip+0xdb12]        # 0x14002f1e8
   1400216d6:	test   eax,eax
   1400216d8:	je     0x140021800
   1400216de:	mov    edi,ebx
   1400216e0:	sub    edi,r13d
   1400216e3:	add    edi,DWORD PTR [rsp+0x44]
   1400216e7:	cmp    DWORD PTR [rsp+0x58],r12d
   1400216ec:	jl     0x1400217f7
   1400216f2:	cmp    DWORD PTR [rsp+0x4c],0x0
   1400216f7:	mov    r12,QWORD PTR [rsp+0x50]
   1400216fc:	je     0x1400217c7
   140021702:	and    QWORD PTR [rsp+0x20],0x0
   140021708:	lea    rax,[rip+0x34f11]        # 0x140056620
   14002170f:	mov    BYTE PTR [rsp+0x60],0xd
   140021714:	mov    rcx,QWORD PTR [rax+r12*8]
   140021718:	lea    r9,[rsp+0x58]
   14002171d:	lea    rdx,[rsp+0x60]
   140021722:	mov    rcx,QWORD PTR [r15+rcx*1]
   140021726:	mov    r8d,0x1
   14002172c:	call   QWORD PTR [rip+0xdab6]        # 0x14002f1e8
   140021732:	test   eax,eax
   140021734:	je     0x140021800
   14002173a:	cmp    DWORD PTR [rsp+0x58],0x1
   14002173f:	jl     0x1400217f7
   140021745:	inc    DWORD PTR [rsp+0x44]
   140021749:	inc    edi
   14002174b:	jmp    0x1400217c7
   14002174d:	cmp    sil,0x1
   140021751:	je     0x140021759
   140021753:	cmp    sil,0x2
   140021757:	jne    0x140021777
   140021759:	movzx  eax,WORD PTR [rbx]
   14002175c:	xor    r12d,r12d
   14002175f:	cmp    ax,0xa
   140021763:	mov    WORD PTR [rsp+0x40],ax
   140021768:	sete   r12b
   14002176c:	add    rbx,0x2
   140021770:	mov    DWORD PTR [rsp+0x4c],r12d
   140021775:	jmp    0x14002177c
   140021777:	mov    r12d,DWORD PTR [rsp+0x4c]
   14002177c:	cmp    sil,0x1
   140021780:	je     0x140021788
   140021782:	cmp    sil,0x2
   140021786:	jne    0x1400217c2
   140021788:	movzx  ecx,WORD PTR [rsp+0x40]
   14002178d:	call   0x140029880
   140021792:	cmp    ax,WORD PTR [rsp+0x40]
   140021797:	jne    0x140021800
   140021799:	add    edi,0x2
   14002179c:	test   r12d,r12d
   14002179f:	je     0x1400217c2
   1400217a1:	mov    r12d,0xd
   1400217a7:	mov    ecx,r12d
   1400217aa:	mov    WORD PTR [rsp+0x40],r12w
   1400217b0:	call   0x140029880
   1400217b5:	cmp    ax,WORD PTR [rsp+0x40]
   1400217ba:	jne    0x140021800
   1400217bc:	inc    edi
   1400217be:	inc    DWORD PTR [rsp+0x44]
   1400217c2:	mov    r12,QWORD PTR [rsp+0x50]
   1400217c7:	mov    eax,ebx
   1400217c9:	sub    eax,r13d
   1400217cc:	cmp    eax,r14d
   1400217cf:	jae    0x1400217f7
   1400217d1:	jmp    0x1400215c0
   1400217d6:	mov    al,BYTE PTR [rbx]
   1400217d8:	lea    rdx,[rip+0x34e41]        # 0x140056620
   1400217df:	inc    edi
   1400217e1:	mov    rcx,QWORD PTR [rdx+r12*8]
   1400217e5:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   1400217ea:	mov    rax,QWORD PTR [rdx+r12*8]
   1400217ee:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   1400217f7:	mov    ebx,DWORD PTR [rsp+0x4c]
   1400217fb:	jmp    0x140021af9
   140021800:	call   QWORD PTR [rip+0xd8aa]        # 0x14002f0b0
   140021806:	mov    ebx,eax
   140021808:	jmp    0x140021af9
   14002180d:	mov    ebx,DWORD PTR [rsp+0x4c]
   140021811:	jmp    0x140021b01
   140021816:	lea    rax,[rip+0x34e03]        # 0x140056620
   14002181d:	mov    rcx,QWORD PTR [rax+r12*8]
   140021821:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140021827:	je     0x140021b2b
   14002182d:	xor    ebx,ebx
   14002182f:	mov    r12,r13
   140021832:	test   sil,sil
   140021835:	jne    0x140021906
   14002183b:	test   r14d,r14d
   14002183e:	je     0x140021b61
   140021844:	lea    edx,[rbx+0xd]
   140021847:	mov    r15d,DWORD PTR [rsp+0x44]
   14002184c:	lea    rsi,[rbp+0x620]
   140021853:	xor    ecx,ecx
   140021855:	mov    eax,r12d
   140021858:	sub    eax,r13d
   14002185b:	cmp    eax,r14d
   14002185e:	jae    0x140021887
   140021860:	mov    al,BYTE PTR [r12]
   140021864:	inc    r12
   140021867:	cmp    al,0xa
   140021869:	jne    0x140021876
   14002186b:	mov    BYTE PTR [rsi],dl
   14002186d:	inc    r15d
   140021870:	inc    rsi
   140021873:	inc    rcx
   140021876:	inc    rcx
   140021879:	mov    BYTE PTR [rsi],al
   14002187b:	inc    rsi
   14002187e:	cmp    rcx,0x13ff
   140021885:	jb     0x140021855
   140021887:	and    QWORD PTR [rsp+0x20],rbx
   14002188c:	lea    rax,[rbp+0x620]
   140021893:	mov    r8d,esi
   140021896:	sub    r8d,eax
   140021899:	mov    rax,QWORD PTR [rsp+0x50]
   14002189e:	lea    rcx,[rip+0x34d7b]        # 0x140056620
   1400218a5:	mov    rcx,QWORD PTR [rcx+rax*8]
   1400218a9:	mov    DWORD PTR [rsp+0x44],r15d
   1400218ae:	mov    r15,QWORD PTR [rsp+0x60]
   1400218b3:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400218b7:	lea    r9,[rsp+0x48]
   1400218bc:	lea    rdx,[rbp+0x620]
   1400218c3:	call   QWORD PTR [rip+0xd91f]        # 0x14002f1e8
   1400218c9:	test   eax,eax
   1400218cb:	je     0x140021800
   1400218d1:	add    edi,DWORD PTR [rsp+0x48]
   1400218d5:	lea    rax,[rbp+0x620]
   1400218dc:	sub    rsi,rax
   1400218df:	movsxd rax,DWORD PTR [rsp+0x48]
   1400218e4:	cmp    rax,rsi
   1400218e7:	jl     0x140021af9
   1400218ed:	mov    eax,r12d
   1400218f0:	mov    edx,0xd
   1400218f5:	sub    eax,r13d
   1400218f8:	cmp    eax,r14d
   1400218fb:	jb     0x140021847
   140021901:	jmp    0x140021af9
   140021906:	cmp    sil,0x2
   14002190a:	jne    0x1400219e8
   140021910:	test   r14d,r14d
   140021913:	je     0x140021b61
   140021919:	mov    edx,0xd
   14002191e:	mov    r15d,DWORD PTR [rsp+0x44]
   140021923:	lea    rsi,[rbp+0x620]
   14002192a:	xor    ecx,ecx
   14002192c:	mov    eax,r12d
   14002192f:	sub    eax,r13d
   140021932:	cmp    eax,r14d
   140021935:	jae    0x140021969
   140021937:	movzx  eax,WORD PTR [r12]
   14002193c:	add    r12,0x2
   140021940:	cmp    ax,0xa
   140021944:	jne    0x140021955
   140021946:	mov    WORD PTR [rsi],dx
   140021949:	add    r15d,0x2
   14002194d:	add    rsi,0x2
   140021951:	add    rcx,0x2
   140021955:	add    rcx,0x2
   140021959:	mov    WORD PTR [rsi],ax
   14002195c:	add    rsi,0x2
   140021960:	cmp    rcx,0x13fe
   140021967:	jb     0x14002192c
   140021969:	and    QWORD PTR [rsp+0x20],rbx
   14002196e:	lea    rax,[rbp+0x620]
   140021975:	mov    r8d,esi
   140021978:	sub    r8d,eax
   14002197b:	mov    rax,QWORD PTR [rsp+0x50]
   140021980:	lea    rcx,[rip+0x34c99]        # 0x140056620
   140021987:	mov    rcx,QWORD PTR [rcx+rax*8]
   14002198b:	mov    DWORD PTR [rsp+0x44],r15d
   140021990:	mov    r15,QWORD PTR [rsp+0x60]
   140021995:	mov    rcx,QWORD PTR [r15+rcx*1]
   140021999:	lea    r9,[rsp+0x48]
   14002199e:	lea    rdx,[rbp+0x620]
   1400219a5:	call   QWORD PTR [rip+0xd83d]        # 0x14002f1e8
   1400219ab:	test   eax,eax
   1400219ad:	je     0x140021800
   1400219b3:	add    edi,DWORD PTR [rsp+0x48]
   1400219b7:	lea    rax,[rbp+0x620]
   1400219be:	sub    rsi,rax
   1400219c1:	movsxd rax,DWORD PTR [rsp+0x48]
   1400219c6:	cmp    rax,rsi
   1400219c9:	jl     0x140021af9
   1400219cf:	mov    eax,r12d
   1400219d2:	mov    edx,0xd
   1400219d7:	sub    eax,r13d
   1400219da:	cmp    eax,r14d
   1400219dd:	jb     0x14002191e
   1400219e3:	jmp    0x140021af9
   1400219e8:	test   r14d,r14d
   1400219eb:	je     0x140021b61
   1400219f1:	mov    r8d,0xd
   1400219f7:	lea    rcx,[rsp+0x70]
   1400219fc:	xor    edx,edx
   1400219fe:	mov    eax,r12d
   140021a01:	sub    eax,r13d
   140021a04:	cmp    eax,r14d
   140021a07:	jae    0x140021a38
   140021a09:	movzx  eax,WORD PTR [r12]
   140021a0e:	add    r12,0x2
   140021a12:	cmp    ax,0xa
   140021a16:	jne    0x140021a24
   140021a18:	mov    WORD PTR [rcx],r8w
   140021a1c:	add    rcx,0x2
   140021a20:	add    rdx,0x2
   140021a24:	add    rdx,0x2
   140021a28:	mov    WORD PTR [rcx],ax
   140021a2b:	add    rcx,0x2
   140021a2f:	cmp    rdx,0x6a8
   140021a36:	jb     0x1400219fe
   140021a38:	and    QWORD PTR [rsp+0x38],0x0
   140021a3e:	and    QWORD PTR [rsp+0x30],0x0
   140021a44:	lea    rax,[rsp+0x70]
   140021a49:	sub    ecx,eax
   140021a4b:	lea    r8,[rsp+0x70]
   140021a50:	mov    DWORD PTR [rsp+0x28],0xd55
   140021a58:	mov    eax,ecx
   140021a5a:	mov    ecx,0xfde9
   140021a5f:	cdq    
   140021a60:	sub    eax,edx
   140021a62:	xor    edx,edx
   140021a64:	sar    eax,1
   140021a66:	mov    r9d,eax
   140021a69:	lea    rax,[rbp+0x620]
   140021a70:	mov    QWORD PTR [rsp+0x20],rax
   140021a75:	call   QWORD PTR [rip+0xd7b5]        # 0x14002f230
   140021a7b:	mov    r15d,eax
   140021a7e:	test   eax,eax
   140021a80:	je     0x140021b21
   140021a86:	xor    esi,esi
   140021a88:	mov    rax,QWORD PTR [rsp+0x50]
   140021a8d:	and    QWORD PTR [rsp+0x20],0x0
   140021a93:	movsxd rcx,esi
   140021a96:	lea    rdx,[rbp+rcx*1+0x620]
   140021a9e:	mov    r8d,r15d
   140021aa1:	lea    rcx,[rip+0x34b78]        # 0x140056620
   140021aa8:	mov    rcx,QWORD PTR [rcx+rax*8]
   140021aac:	mov    rax,QWORD PTR [rsp+0x60]
   140021ab1:	lea    r9,[rsp+0x48]
   140021ab6:	mov    rcx,QWORD PTR [rax+rcx*1]
   140021aba:	sub    r8d,esi
   140021abd:	call   QWORD PTR [rip+0xd725]        # 0x14002f1e8
   140021ac3:	test   eax,eax
   140021ac5:	je     0x140021ad2
   140021ac7:	add    esi,DWORD PTR [rsp+0x48]
   140021acb:	cmp    r15d,esi
   140021ace:	jg     0x140021a88
   140021ad0:	jmp    0x140021ada
   140021ad2:	call   QWORD PTR [rip+0xd5d8]        # 0x14002f0b0
   140021ad8:	mov    ebx,eax
   140021ada:	cmp    r15d,esi
   140021add:	jg     0x140021af4
   140021adf:	mov    edi,r12d
   140021ae2:	mov    r8d,0xd
   140021ae8:	sub    edi,r13d
   140021aeb:	cmp    edi,r14d
   140021aee:	jb     0x1400219f7
   140021af4:	mov    r15,QWORD PTR [rsp+0x60]
   140021af9:	test   edi,edi
   140021afb:	jne    0x140021b9c
   140021b01:	test   ebx,ebx
   140021b03:	je     0x140021b61
   140021b05:	cmp    ebx,0x5
   140021b08:	jne    0x140021b55
   140021b0a:	call   0x14001583c
   140021b0f:	mov    DWORD PTR [rax],0x9
   140021b15:	call   0x14001585c
   140021b1a:	mov    DWORD PTR [rax],ebx
   140021b1c:	jmp    0x1400214d9
   140021b21:	call   QWORD PTR [rip+0xd589]        # 0x14002f0b0
   140021b27:	mov    ebx,eax
   140021b29:	jmp    0x140021af4
   140021b2b:	mov    rcx,QWORD PTR [r15+rcx*1]
   140021b2f:	and    QWORD PTR [rsp+0x20],rdi
   140021b34:	lea    r9,[rsp+0x48]
   140021b39:	mov    r8d,r14d
   140021b3c:	mov    rdx,r13
   140021b3f:	call   QWORD PTR [rip+0xd6a3]        # 0x14002f1e8
   140021b45:	test   eax,eax
   140021b47:	je     0x140021800
   140021b4d:	mov    edi,DWORD PTR [rsp+0x48]
   140021b51:	xor    ebx,ebx
   140021b53:	jmp    0x140021af9
   140021b55:	mov    ecx,ebx
   140021b57:	call   0x14001587c
   140021b5c:	jmp    0x1400214d9
   140021b61:	mov    rax,QWORD PTR [rsp+0x50]
   140021b66:	lea    rcx,[rip+0x34ab3]        # 0x140056620
   140021b6d:	mov    rax,QWORD PTR [rcx+rax*8]
   140021b71:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140021b77:	je     0x140021b84
   140021b79:	cmp    BYTE PTR [r13+0x0],0x1a
   140021b7e:	je     0x1400214b6
   140021b84:	call   0x14001583c
   140021b89:	mov    DWORD PTR [rax],0x1c
   140021b8f:	call   0x14001585c
   140021b94:	and    DWORD PTR [rax],0x0
   140021b97:	jmp    0x1400214d9
   140021b9c:	sub    edi,DWORD PTR [rsp+0x44]
   140021ba0:	mov    eax,edi
   140021ba2:	mov    rcx,QWORD PTR [rbp+0x1a20]
   140021ba9:	xor    rcx,rsp
   140021bac:	call   0x140012670
   140021bb1:	mov    rbx,QWORD PTR [rsp+0x1b88]
   140021bb9:	add    rsp,0x1b30
   140021bc0:	pop    r15
   140021bc2:	pop    r14
   140021bc4:	pop    r13
   140021bc6:	pop    r12
   140021bc8:	pop    rdi
   140021bc9:	pop    rsi
   140021bca:	pop    rbp
   140021bcb:	ret    
   140021bcc:	mov    QWORD PTR [rsp+0x10],rbx
   140021bd1:	mov    DWORD PTR [rsp+0x8],ecx
   140021bd5:	push   rsi
   140021bd6:	push   rdi
   140021bd7:	push   r12
   140021bd9:	push   r13
   140021bdb:	push   r14
   140021bdd:	sub    rsp,0x20
   140021be1:	mov    esi,r8d
   140021be4:	mov    r12,rdx
   140021be7:	movsxd rdi,ecx
   140021bea:	cmp    edi,0xfffffffe
   140021bed:	jne    0x140021c07
   140021bef:	call   0x14001585c
   140021bf4:	and    DWORD PTR [rax],0x0
   140021bf7:	call   0x14001583c
   140021bfc:	mov    DWORD PTR [rax],0x9
   140021c02:	jmp    0x140021c96
   140021c07:	test   ecx,ecx
   140021c09:	js     0x140021c7e
   140021c0b:	cmp    edi,DWORD PTR [rip+0x349f3]        # 0x140056604
   140021c11:	jae    0x140021c7e
   140021c13:	mov    rbx,rdi
   140021c16:	mov    r13,rdi
   140021c19:	sar    r13,0x5
   140021c1d:	lea    r14,[rip+0x349fc]        # 0x140056620
   140021c24:	and    ebx,0x1f
   140021c27:	imul   rbx,rbx,0x58
   140021c2b:	mov    rax,QWORD PTR [r14+r13*8]
   140021c2f:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140021c34:	and    ecx,0x1
   140021c37:	je     0x140021c7e
   140021c39:	mov    ecx,edi
   140021c3b:	call   0x140022628
   140021c40:	nop
   140021c41:	mov    rax,QWORD PTR [r14+r13*8]
   140021c45:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140021c4a:	je     0x140021c5d
   140021c4c:	mov    r8d,esi
   140021c4f:	mov    rdx,r12
   140021c52:	mov    ecx,edi
   140021c54:	call   0x14002146c
   140021c59:	mov    ebx,eax
   140021c5b:	jmp    0x140021c73
   140021c5d:	call   0x14001583c
   140021c62:	mov    DWORD PTR [rax],0x9
   140021c68:	call   0x14001585c
   140021c6d:	and    DWORD PTR [rax],0x0
   140021c70:	or     ebx,0xffffffff
   140021c73:	mov    ecx,edi
   140021c75:	call   0x1400226d0
   140021c7a:	mov    eax,ebx
   140021c7c:	jmp    0x140021c99
   140021c7e:	call   0x14001585c
   140021c83:	and    DWORD PTR [rax],0x0
   140021c86:	call   0x14001583c
   140021c8b:	mov    DWORD PTR [rax],0x9
   140021c91:	call   0x140019f74
   140021c96:	or     eax,0xffffffff
   140021c99:	mov    rbx,QWORD PTR [rsp+0x58]
   140021c9e:	add    rsp,0x20
   140021ca2:	pop    r14
   140021ca4:	pop    r13
   140021ca6:	pop    r12
   140021ca8:	pop    rdi
   140021ca9:	pop    rsi
   140021caa:	ret    
   140021cab:	int3   
   140021cac:	mov    QWORD PTR [rsp+0x8],rbx
   140021cb1:	mov    QWORD PTR [rsp+0x18],rbp
   140021cb6:	mov    QWORD PTR [rsp+0x20],rsi
   140021cbb:	push   rdi
   140021cbc:	push   r12
   140021cbe:	push   r13
   140021cc0:	push   r14
   140021cc2:	push   r15
   140021cc4:	sub    rsp,0x30
   140021cc8:	mov    esi,DWORD PTR [rip+0x348a2]        # 0x140056570
   140021cce:	xor    r14d,r14d
   140021cd1:	mov    rbp,r9
   140021cd4:	lea    r15d,[r14+0x20]
   140021cd8:	mov    r12d,r8d
   140021cdb:	mov    rbx,rdx
   140021cde:	mov    r13,rcx
   140021ce1:	mov    r9d,r14d
   140021ce4:	mov    r10d,r14d
   140021ce7:	mov    r11d,r14d
   140021cea:	cmp    WORD PTR [rdx],r15w
   140021cee:	jne    0x140021cfa
   140021cf0:	add    rbx,0x2
   140021cf4:	cmp    WORD PTR [rbx],r15w
   140021cf8:	je     0x140021cf0
   140021cfa:	movzx  eax,WORD PTR [rbx]
   140021cfd:	mov    r8d,0x1
   140021d03:	cmp    eax,0x61
   140021d06:	je     0x140021d38
   140021d08:	cmp    eax,0x72
   140021d0b:	je     0x140021d30
   140021d0d:	cmp    eax,0x77
   140021d10:	je     0x140021d29
   140021d12:	call   0x14001583c
   140021d17:	mov    DWORD PTR [rax],0x16
   140021d1d:	call   0x140019f74
   140021d22:	xor    eax,eax
   140021d24:	jmp    0x140021f6c
   140021d29:	mov    edi,0x301
   140021d2e:	jmp    0x140021d3d
   140021d30:	mov    edi,r14d
   140021d33:	or     esi,r8d
   140021d36:	jmp    0x140021d40
   140021d38:	mov    edi,0x109
   140021d3d:	or     esi,0x2
   140021d40:	add    rbx,0x2
   140021d44:	mov    edx,r8d
   140021d47:	movzx  eax,WORD PTR [rbx]
   140021d4a:	test   ax,ax
   140021d4d:	je     0x140021f16
   140021d53:	test   edx,edx
   140021d55:	je     0x140021e4f
   140021d5b:	movzx  ecx,ax
   140021d5e:	cmp    ecx,0x53
   140021d61:	jg     0x140021ddc
   140021d63:	je     0x140021dcf
   140021d65:	sub    ecx,r15d
   140021d68:	je     0x140021e3f
   140021d6e:	sub    ecx,0xb
   140021d71:	je     0x140021dba
   140021d73:	dec    ecx
   140021d75:	je     0x140021db5
   140021d77:	sub    ecx,0x18
   140021d7a:	je     0x140021da3
   140021d7c:	sub    ecx,0xa
   140021d7f:	je     0x140021d9a
   140021d81:	cmp    ecx,0x4
   140021d84:	jne    0x140021d12
   140021d86:	test   r10d,r10d
   140021d89:	jne    0x140021e36
   140021d8f:	mov    r10d,r8d
   140021d92:	or     edi,0x10
   140021d95:	jmp    0x140021e3f
   140021d9a:	bts    edi,0x7
   140021d9e:	jmp    0x140021e3f
   140021da3:	test   dil,0x40
   140021da7:	jne    0x140021e36
   140021dad:	or     edi,0x40
   140021db0:	jmp    0x140021e3f
   140021db5:	mov    r11d,r8d
   140021db8:	jmp    0x140021e36
   140021dba:	test   dil,0x2
   140021dbe:	jne    0x140021e36
   140021dc0:	and    edi,0xfffffffe
   140021dc3:	and    esi,0xfffffffc
   140021dc6:	or     edi,0x2
   140021dc9:	bts    esi,0x7
   140021dcd:	jmp    0x140021e3f
   140021dcf:	test   r10d,r10d
   140021dd2:	jne    0x140021e36
   140021dd4:	mov    r10d,r8d
   140021dd7:	or     edi,r15d
   140021dda:	jmp    0x140021e3f
   140021ddc:	sub    ecx,0x54
   140021ddf:	je     0x140021e30
   140021de1:	sub    ecx,0xe
   140021de4:	je     0x140021e22
   140021de6:	dec    ecx
   140021de8:	je     0x140021e14
   140021dea:	sub    ecx,0xb
   140021ded:	je     0x140021e06
   140021def:	cmp    ecx,0x6
   140021df2:	jne    0x140021d12
   140021df8:	test   edi,0xc000
   140021dfe:	jne    0x140021e36
   140021e00:	bts    edi,0xe
   140021e04:	jmp    0x140021e3f
   140021e06:	test   r9d,r9d
   140021e09:	jne    0x140021e36
   140021e0b:	mov    r9d,r8d
   140021e0e:	btr    esi,0xe
   140021e12:	jmp    0x140021e3f
   140021e14:	test   r9d,r9d
   140021e17:	jne    0x140021e36
   140021e19:	mov    r9d,r8d
   140021e1c:	bts    esi,0xe
   140021e20:	jmp    0x140021e3f
   140021e22:	test   edi,0xc000
   140021e28:	jne    0x140021e36
   140021e2a:	bts    edi,0xf
   140021e2e:	jmp    0x140021e3f
   140021e30:	bt     edi,0xc
   140021e34:	jae    0x140021e3b
   140021e36:	mov    edx,r14d
   140021e39:	jmp    0x140021e3f
   140021e3b:	bts    edi,0xc
   140021e3f:	add    rbx,0x2
   140021e43:	movzx  eax,WORD PTR [rbx]
   140021e46:	test   ax,ax
   140021e49:	jne    0x140021d53
   140021e4f:	test   r11d,r11d
   140021e52:	je     0x140021f16
   140021e58:	jmp    0x140021e5e
   140021e5a:	add    rbx,0x2
   140021e5e:	cmp    WORD PTR [rbx],r15w
   140021e62:	je     0x140021e5a
   140021e64:	lea    rcx,[rip+0x10e0d]        # 0x140032c78
   140021e6b:	mov    r8d,0x3
   140021e71:	mov    rdx,rbx
   140021e74:	call   0x140013790
   140021e79:	test   eax,eax
   140021e7b:	jne    0x140021d12
   140021e81:	add    rbx,0x6
   140021e85:	jmp    0x140021e8b
   140021e87:	add    rbx,0x2
   140021e8b:	cmp    WORD PTR [rbx],r15w
   140021e8f:	je     0x140021e87
   140021e91:	cmp    WORD PTR [rbx],0x3d
   140021e95:	jne    0x140021d12
   140021e9b:	add    rbx,0x2
   140021e9f:	cmp    WORD PTR [rbx],r15w
   140021ea3:	je     0x140021e9b
   140021ea5:	lea    rdx,[rip+0x10dd4]        # 0x140032c80
   140021eac:	mov    r8d,0x5
   140021eb2:	mov    rcx,rbx
   140021eb5:	call   0x140014944
   140021eba:	test   eax,eax
   140021ebc:	jne    0x140021ec8
   140021ebe:	add    rbx,0xa
   140021ec2:	bts    edi,0x12
   140021ec6:	jmp    0x140021f16
   140021ec8:	lea    rdx,[rip+0x10dc1]        # 0x140032c90
   140021ecf:	mov    r8d,0x8
   140021ed5:	mov    rcx,rbx
   140021ed8:	call   0x140014944
   140021edd:	test   eax,eax
   140021edf:	jne    0x140021eeb
   140021ee1:	add    rbx,0x10
   140021ee5:	bts    edi,0x11
   140021ee9:	jmp    0x140021f16
   140021eeb:	lea    rdx,[rip+0x10db6]        # 0x140032ca8
   140021ef2:	mov    r8d,0x7
   140021ef8:	mov    rcx,rbx
   140021efb:	call   0x140014944
   140021f00:	test   eax,eax
   140021f02:	jne    0x140021d12
   140021f08:	add    rbx,0xe
   140021f0c:	bts    edi,0x10
   140021f10:	jmp    0x140021f16
   140021f12:	add    rbx,0x2
   140021f16:	cmp    WORD PTR [rbx],r15w
   140021f1a:	je     0x140021f12
   140021f1c:	cmp    WORD PTR [rbx],r14w
   140021f20:	jne    0x140021d12
   140021f26:	lea    rcx,[rsp+0x68]
   140021f2b:	mov    r9d,r12d
   140021f2e:	mov    r8d,edi
   140021f31:	mov    rdx,r13
   140021f34:	mov    DWORD PTR [rsp+0x20],0x180
   140021f3c:	call   0x14001667c
   140021f41:	test   eax,eax
   140021f43:	jne    0x140021d22
   140021f49:	inc    DWORD PTR [rip+0x33455]        # 0x1400553a4
   140021f4f:	mov    eax,DWORD PTR [rsp+0x68]
   140021f53:	mov    DWORD PTR [rbp+0x18],esi
   140021f56:	mov    DWORD PTR [rbp+0x1c],eax
   140021f59:	mov    DWORD PTR [rbp+0x8],r14d
   140021f5d:	mov    QWORD PTR [rbp+0x0],r14
   140021f61:	mov    rax,rbp
   140021f64:	mov    QWORD PTR [rbp+0x10],r14
   140021f68:	mov    QWORD PTR [rbp+0x28],r14
   140021f6c:	mov    rbx,QWORD PTR [rsp+0x60]
   140021f71:	mov    rbp,QWORD PTR [rsp+0x70]
   140021f76:	mov    rsi,QWORD PTR [rsp+0x78]
   140021f7b:	add    rsp,0x30
   140021f7f:	pop    r15
   140021f81:	pop    r14
   140021f83:	pop    r13
   140021f85:	pop    r12
   140021f87:	pop    rdi
   140021f88:	ret    
   140021f89:	int3   
   140021f8a:	int3   
   140021f8b:	int3   
   140021f8c:	mov    QWORD PTR [rsp+0x8],rbx
   140021f91:	mov    QWORD PTR [rsp+0x10],rsi
   140021f96:	push   rdi
   140021f97:	sub    rsp,0x30
   140021f9b:	xor    ebx,ebx
   140021f9d:	lea    ecx,[rbx+0x1]
   140021fa0:	call   0x14001ccc8
   140021fa5:	nop
   140021fa6:	xor    edi,edi
   140021fa8:	mov    DWORD PTR [rsp+0x20],edi
   140021fac:	cmp    edi,DWORD PTR [rip+0x3588e]        # 0x140057840
   140021fb2:	jge    0x1400220a4
   140021fb8:	movsxd rsi,edi
   140021fbb:	mov    rax,QWORD PTR [rip+0x3486e]        # 0x140056830
   140021fc2:	cmp    QWORD PTR [rax+rsi*8],0x0
   140021fc7:	je     0x14002202f
   140021fc9:	mov    rax,QWORD PTR [rax+rsi*8]
   140021fcd:	test   BYTE PTR [rax+0x18],0x83
   140021fd1:	jne    0x140022028
   140021fd3:	test   DWORD PTR [rax+0x18],0x8000
   140021fda:	jne    0x140022028
   140021fdc:	lea    eax,[rdi-0x3]
   140021fdf:	cmp    eax,0x10
   140021fe2:	ja     0x140021ff4
   140021fe4:	lea    ecx,[rdi+0x10]
   140021fe7:	call   0x14001cbe0
   140021fec:	test   eax,eax
   140021fee:	je     0x1400220a4
   140021ff4:	mov    rdx,QWORD PTR [rip+0x34835]        # 0x140056830
   140021ffb:	mov    rdx,QWORD PTR [rdx+rsi*8]
   140021fff:	mov    ecx,edi
   140022001:	call   0x140014db0
   140022006:	mov    r11,QWORD PTR [rip+0x34823]        # 0x140056830
   14002200d:	mov    rax,QWORD PTR [r11+rsi*8]
   140022011:	test   BYTE PTR [rax+0x18],0x83
   140022015:	je     0x140022023
   140022017:	mov    rdx,rax
   14002201a:	mov    ecx,edi
   14002201c:	call   0x140014e30
   140022021:	jmp    0x140022028
   140022023:	mov    rbx,rax
   140022026:	jmp    0x1400220a4
   140022028:	inc    edi
   14002202a:	jmp    0x140021fa8
   14002202f:	mov    ecx,0x58
   140022034:	call   0x140020c28
   140022039:	mov    rcx,rax
   14002203c:	movsxd rdi,edi
   14002203f:	mov    rax,QWORD PTR [rip+0x347ea]        # 0x140056830
   140022046:	mov    QWORD PTR [rax+rdi*8],rcx
   14002204a:	test   rcx,rcx
   14002204d:	je     0x1400220a4
   14002204f:	add    rcx,0x30
   140022053:	mov    edx,0xfa0
   140022058:	call   QWORD PTR [rip+0xd16a]        # 0x14002f1c8
   14002205e:	test   eax,eax
   140022060:	jne    0x140022080
   140022062:	mov    rcx,QWORD PTR [rip+0x347c7]        # 0x140056830
   140022069:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14002206d:	call   0x1400130a8
   140022072:	mov    r11,QWORD PTR [rip+0x347b7]        # 0x140056830
   140022079:	and    QWORD PTR [r11+rdi*8],0x0
   14002207e:	jmp    0x1400220a4
   140022080:	mov    rax,QWORD PTR [rip+0x347a9]        # 0x140056830
   140022087:	mov    rcx,QWORD PTR [rax+rdi*8]
   14002208b:	add    rcx,0x30
   14002208f:	call   QWORD PTR [rip+0xd1eb]        # 0x14002f280
   140022095:	mov    r11,QWORD PTR [rip+0x34794]        # 0x140056830
   14002209c:	mov    rbx,QWORD PTR [r11+rdi*8]
   1400220a0:	and    DWORD PTR [rbx+0x18],0x0
   1400220a4:	test   rbx,rbx
   1400220a7:	je     0x1400220c6
   1400220a9:	and    DWORD PTR [rbx+0x18],0x8000
   1400220b0:	and    DWORD PTR [rbx+0x8],0x0
   1400220b4:	and    QWORD PTR [rbx+0x10],0x0
   1400220b9:	and    QWORD PTR [rbx],0x0
   1400220bd:	and    QWORD PTR [rbx+0x28],0x0
   1400220c2:	or     DWORD PTR [rbx+0x1c],0xffffffff
   1400220c6:	mov    ecx,0x1
   1400220cb:	call   0x14001cbc8
   1400220d0:	mov    rax,rbx
   1400220d3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400220d8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400220dd:	add    rsp,0x30
   1400220e1:	pop    rdi
   1400220e2:	ret    
   1400220e3:	int3   
   1400220e4:	int3   
   1400220e5:	int3   
   1400220e6:	int3   
   1400220e7:	int3   
   1400220e8:	int3   
   1400220e9:	int3   
   1400220ea:	int3   
   1400220eb:	int3   
   1400220ec:	int3   
   1400220ed:	int3   
   1400220ee:	int3   
   1400220ef:	int3   
   1400220f0:	int3   
   1400220f1:	int3   
   1400220f2:	int3   
   1400220f3:	int3   
   1400220f4:	int3   
   1400220f5:	int3   
   1400220f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140022100:	sub    rsp,0x4d8
   140022107:	xor    r8,r8
   14002210a:	xor    r9,r9
   14002210d:	mov    QWORD PTR [rsp+0x20],rsp
   140022112:	mov    QWORD PTR [rsp+0x28],r8
   140022117:	call   0x14002ac24
   14002211c:	add    rsp,0x4d8
   140022123:	ret    
   140022124:	int3   
   140022125:	int3   
   140022126:	int3   
   140022127:	int3   
   140022128:	int3   
   140022129:	int3   
   14002212a:	nop    WORD PTR [rax+rax*1+0x0]
   140022130:	mov    QWORD PTR [rsp+0x8],rcx
   140022135:	mov    QWORD PTR [rsp+0x18],rdx
   14002213a:	mov    DWORD PTR [rsp+0x10],r8d
   14002213f:	mov    r9,0x19930520
   140022146:	jmp    0x140022150
   140022148:	int3   
   140022149:	int3   
   14002214a:	int3   
   14002214b:	int3   
   14002214c:	int3   
   14002214d:	int3   
   14002214e:	xchg   ax,ax
   140022150:	ret    
   140022151:	int3   
   140022152:	int3   
   140022153:	int3   
   140022154:	int3   
   140022155:	int3   
   140022156:	int3   
   140022157:	nop    WORD PTR [rax+rax*1+0x0]
   140022160:	ret    
   140022161:	int3   
   140022162:	int3   
   140022163:	int3   
   140022164:	mov    QWORD PTR [rsp+0x10],rsi
   140022169:	push   rbp
   14002216a:	push   rdi
   14002216b:	push   r12
   14002216d:	mov    rbp,rsp
   140022170:	sub    rsp,0x60
   140022174:	movsxd rdi,ecx
   140022177:	mov    r12d,edx
   14002217a:	lea    rcx,[rbp-0x20]
   14002217e:	mov    rdx,r8
   140022181:	call   0x140012690
   140022186:	lea    r11d,[rdi+0x1]
   14002218a:	cmp    r11d,0x100
   140022191:	ja     0x1400221a7
   140022193:	mov    rax,QWORD PTR [rbp-0x20]
   140022197:	mov    rcx,QWORD PTR [rax+0x140]
   14002219e:	movzx  eax,WORD PTR [rcx+rdi*2]
   1400221a2:	jmp    0x140022227
   1400221a7:	mov    esi,edi
   1400221a9:	lea    rdx,[rbp-0x20]
   1400221ad:	sar    esi,0x8
   1400221b0:	movzx  ecx,sil
   1400221b4:	call   0x140020e3c
   1400221b9:	mov    edx,0x1
   1400221be:	test   eax,eax
   1400221c0:	je     0x1400221d4
   1400221c2:	mov    BYTE PTR [rbp+0x38],sil
   1400221c6:	mov    BYTE PTR [rbp+0x39],dil
   1400221ca:	mov    BYTE PTR [rbp+0x3a],0x0
   1400221ce:	lea    r9d,[rdx+0x1]
   1400221d2:	jmp    0x1400221df
   1400221d4:	mov    BYTE PTR [rbp+0x38],dil
   1400221d8:	mov    BYTE PTR [rbp+0x39],0x0
   1400221dc:	mov    r9d,edx
   1400221df:	mov    rcx,QWORD PTR [rbp-0x20]
   1400221e3:	mov    DWORD PTR [rsp+0x38],edx
   1400221e7:	lea    r8,[rbp+0x38]
   1400221eb:	mov    eax,DWORD PTR [rcx+0x14]
   1400221ee:	mov    DWORD PTR [rsp+0x30],eax
   1400221f2:	mov    eax,DWORD PTR [rcx+0x4]
   1400221f5:	lea    rcx,[rbp-0x20]
   1400221f9:	mov    DWORD PTR [rsp+0x28],eax
   1400221fd:	lea    rax,[rbp+0x20]
   140022201:	mov    QWORD PTR [rsp+0x20],rax
   140022206:	call   0x140027018
   14002220b:	test   eax,eax
   14002220d:	jne    0x140022223
   14002220f:	cmp    BYTE PTR [rbp-0x8],al
   140022212:	je     0x14002221f
   140022214:	mov    rax,QWORD PTR [rbp-0x10]
   140022218:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002221f:	xor    eax,eax
   140022221:	jmp    0x14002223b
   140022223:	movzx  eax,WORD PTR [rbp+0x20]
   140022227:	and    eax,r12d
   14002222a:	cmp    BYTE PTR [rbp-0x8],0x0
   14002222e:	je     0x14002223b
   140022230:	mov    rcx,QWORD PTR [rbp-0x10]
   140022234:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002223b:	mov    rsi,QWORD PTR [rsp+0x88]
   140022243:	add    rsp,0x60
   140022247:	pop    r12
   140022249:	pop    rdi
   14002224a:	pop    rbp
   14002224b:	ret    
   14002224c:	mov    QWORD PTR [rsp+0x18],rbx
   140022251:	push   rsi
   140022252:	push   rdi
   140022253:	push   r12
   140022255:	sub    rsp,0x20
   140022259:	test   BYTE PTR [rcx+0x18],0x40
   14002225d:	mov    rdi,rcx
   140022260:	lea    r12,[rip+0x343b9]        # 0x140056620
   140022267:	lea    rsi,[rip+0x1e9f2]        # 0x140040c60
   14002226e:	jne    0x14002231d
   140022274:	call   0x1400211a0
   140022279:	cmp    eax,0xffffffff
   14002227c:	je     0x1400222b3
   14002227e:	mov    rcx,rdi
   140022281:	call   0x1400211a0
   140022286:	cmp    eax,0xfffffffe
   140022289:	je     0x1400222b3
   14002228b:	mov    rcx,rdi
   14002228e:	call   0x1400211a0
   140022293:	mov    rcx,rdi
   140022296:	movsxd rbx,eax
   140022299:	sar    rbx,0x5
   14002229d:	call   0x1400211a0
   1400222a2:	mov    r11d,eax
   1400222a5:	and    r11d,0x1f
   1400222a9:	imul   r11,r11,0x58
   1400222ad:	add    r11,QWORD PTR [r12+rbx*8]
   1400222b1:	jmp    0x1400222b6
   1400222b3:	mov    r11,rsi
   1400222b6:	test   BYTE PTR [r11+0x38],0x7f
   1400222bb:	je     0x14002231d
   1400222bd:	dec    DWORD PTR [rdi+0x8]
   1400222c0:	js     0x1400222d0
   1400222c2:	mov    rax,QWORD PTR [rdi]
   1400222c5:	movzx  ecx,BYTE PTR [rax]
   1400222c8:	inc    rax
   1400222cb:	mov    QWORD PTR [rdi],rax
   1400222ce:	jmp    0x1400222da
   1400222d0:	mov    rcx,rdi
   1400222d3:	call   0x140023d7c
   1400222d8:	mov    ecx,eax
   1400222da:	cmp    ecx,0xffffffff
   1400222dd:	jne    0x1400222e9
   1400222df:	mov    eax,0xffff
   1400222e4:	jmp    0x140022438
   1400222e9:	dec    DWORD PTR [rdi+0x8]
   1400222ec:	mov    BYTE PTR [rsp+0x40],cl
   1400222f0:	js     0x140022300
   1400222f2:	mov    rax,QWORD PTR [rdi]
   1400222f5:	movzx  ecx,BYTE PTR [rax]
   1400222f8:	inc    rax
   1400222fb:	mov    QWORD PTR [rdi],rax
   1400222fe:	jmp    0x14002230a
   140022300:	mov    rcx,rdi
   140022303:	call   0x140023d7c
   140022308:	mov    ecx,eax
   14002230a:	cmp    ecx,0xffffffff
   14002230d:	je     0x1400222df
   14002230f:	mov    BYTE PTR [rsp+0x41],cl
   140022313:	movzx  eax,WORD PTR [rsp+0x40]
   140022318:	jmp    0x140022438
   14002231d:	test   BYTE PTR [rdi+0x18],0x40
   140022321:	jne    0x140022412
   140022327:	mov    rcx,rdi
   14002232a:	call   0x1400211a0
   14002232f:	cmp    eax,0xffffffff
   140022332:	je     0x140022365
   140022334:	mov    rcx,rdi
   140022337:	call   0x1400211a0
   14002233c:	cmp    eax,0xfffffffe
   14002233f:	je     0x140022365
   140022341:	mov    rcx,rdi
   140022344:	call   0x1400211a0
   140022349:	mov    rcx,rdi
   14002234c:	movsxd rbx,eax
   14002234f:	sar    rbx,0x5
   140022353:	call   0x1400211a0
   140022358:	mov    esi,eax
   14002235a:	and    esi,0x1f
   14002235d:	imul   rsi,rsi,0x58
   140022361:	add    rsi,QWORD PTR [r12+rbx*8]
   140022365:	test   BYTE PTR [rsi+0x8],0x80
   140022369:	je     0x140022412
   14002236f:	dec    DWORD PTR [rdi+0x8]
   140022372:	mov    ebx,0x1
   140022377:	js     0x140022387
   140022379:	mov    rax,QWORD PTR [rdi]
   14002237c:	movzx  ecx,BYTE PTR [rax]
   14002237f:	inc    rax
   140022382:	mov    QWORD PTR [rdi],rax
   140022385:	jmp    0x140022391
   140022387:	mov    rcx,rdi
   14002238a:	call   0x140023d7c
   14002238f:	mov    ecx,eax
   140022391:	cmp    ecx,0xffffffff
   140022394:	je     0x1400222df
   14002239a:	mov    BYTE PTR [rsp+0x48],cl
   14002239e:	movzx  ecx,cl
   1400223a1:	call   0x140020e84
   1400223a6:	test   eax,eax
   1400223a8:	je     0x1400223e7
   1400223aa:	dec    DWORD PTR [rdi+0x8]
   1400223ad:	js     0x1400223bd
   1400223af:	mov    rax,QWORD PTR [rdi]
   1400223b2:	movzx  ecx,BYTE PTR [rax]
   1400223b5:	inc    rax
   1400223b8:	mov    QWORD PTR [rdi],rax
   1400223bb:	jmp    0x1400223c7
   1400223bd:	mov    rcx,rdi
   1400223c0:	call   0x140023d7c
   1400223c5:	mov    ecx,eax
   1400223c7:	cmp    ecx,0xffffffff
   1400223ca:	jne    0x1400223de
   1400223cc:	movsx  ecx,BYTE PTR [rsp+0x48]
   1400223d1:	mov    rdx,rdi
   1400223d4:	call   0x140029b48
   1400223d9:	jmp    0x1400222df
   1400223de:	mov    BYTE PTR [rsp+0x49],cl
   1400223e2:	mov    ebx,0x2
   1400223e7:	lea    rdx,[rsp+0x48]
   1400223ec:	lea    rcx,[rsp+0x40]
   1400223f1:	movsxd r8,ebx
   1400223f4:	call   0x140029204
   1400223f9:	cmp    eax,0xffffffff
   1400223fc:	jne    0x140022313
   140022402:	call   0x14001583c
   140022407:	mov    DWORD PTR [rax],0x2a
   14002240d:	jmp    0x1400222df
   140022412:	movsxd rax,DWORD PTR [rdi+0x8]
   140022416:	add    rax,0xfffffffffffffffe
   14002241a:	mov    DWORD PTR [rdi+0x8],eax
   14002241d:	test   eax,eax
   14002241f:	js     0x140022430
   140022421:	mov    rcx,QWORD PTR [rdi]
   140022424:	movzx  eax,WORD PTR [rcx]
   140022427:	add    rcx,0x2
   14002242b:	mov    QWORD PTR [rdi],rcx
   14002242e:	jmp    0x140022438
   140022430:	mov    rcx,rdi
   140022433:	call   0x1400298dc
   140022438:	mov    rbx,QWORD PTR [rsp+0x50]
   14002243d:	add    rsp,0x20
   140022441:	pop    r12
   140022443:	pop    rdi
   140022444:	pop    rsi
   140022445:	ret    
   140022446:	int3   
   140022447:	int3   
   140022448:	lea    rax,[rip+0x1e9d1]        # 0x140040e20
   14002244f:	ret    
   140022450:	lea    rax,[rip+0x1e869]        # 0x140040cc0
   140022457:	ret    
   140022458:	mov    QWORD PTR [rsp+0x8],rbx
   14002245d:	mov    QWORD PTR [rsp+0x10],rbp
   140022462:	mov    QWORD PTR [rsp+0x18],rsi
   140022467:	push   rdi
   140022468:	sub    rsp,0x20
   14002246c:	mov    rbx,rdx
   14002246f:	test   ecx,ecx
   140022471:	js     0x1400224da
   140022473:	cmp    ecx,DWORD PTR [rip+0x3418b]        # 0x140056604
   140022479:	jae    0x1400224da
   14002247b:	movsxd rdi,ecx
   14002247e:	lea    rbp,[rip+0x3419b]        # 0x140056620
   140022485:	mov    rsi,rdi
   140022488:	and    edi,0x1f
   14002248b:	sar    rsi,0x5
   14002248f:	imul   rdi,rdi,0x58
   140022493:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   140022498:	cmp    QWORD PTR [rdi+rax*1],0xffffffffffffffff
   14002249d:	jne    0x1400224da
   14002249f:	cmp    DWORD PTR [rip+0x1da3a],0x1        # 0x14003fee0
   1400224a6:	jne    0x1400224cd
   1400224a8:	test   ecx,ecx
   1400224aa:	je     0x1400224c2
   1400224ac:	dec    ecx
   1400224ae:	je     0x1400224bb
   1400224b0:	dec    ecx
   1400224b2:	jne    0x1400224cd
   1400224b4:	mov    ecx,0xfffffff4
   1400224b9:	jmp    0x1400224c7
   1400224bb:	mov    ecx,0xfffffff5
   1400224c0:	jmp    0x1400224c7
   1400224c2:	mov    ecx,0xfffffff6
   1400224c7:	call   QWORD PTR [rip+0xccbb]        # 0x14002f188
   1400224cd:	mov    rax,QWORD PTR [rbp+rsi*8+0x0]
   1400224d2:	mov    QWORD PTR [rdi+rax*1],rbx
   1400224d6:	xor    eax,eax
   1400224d8:	jmp    0x1400224f0
   1400224da:	call   0x14001583c
   1400224df:	mov    DWORD PTR [rax],0x9
   1400224e5:	call   0x14001585c
   1400224ea:	and    DWORD PTR [rax],0x0
   1400224ed:	or     eax,0xffffffff
   1400224f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400224f5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400224fa:	mov    rsi,QWORD PTR [rsp+0x40]
   1400224ff:	add    rsp,0x20
   140022503:	pop    rdi
   140022504:	ret    
   140022505:	int3   
   140022506:	int3   
   140022507:	int3   
   140022508:	mov    QWORD PTR [rsp+0x8],rbx
   14002250d:	mov    QWORD PTR [rsp+0x10],rbp
   140022512:	push   rdi
   140022513:	sub    rsp,0x20
   140022517:	test   ecx,ecx
   140022519:	js     0x14002258c
   14002251b:	cmp    ecx,DWORD PTR [rip+0x340e3]        # 0x140056604
   140022521:	jae    0x14002258c
   140022523:	movsxd rbx,ecx
   140022526:	lea    rbp,[rip+0x340f3]        # 0x140056620
   14002252d:	mov    rdi,rbx
   140022530:	and    ebx,0x1f
   140022533:	sar    rdi,0x5
   140022537:	imul   rbx,rbx,0x58
   14002253b:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   140022540:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140022545:	je     0x14002258c
   140022547:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14002254c:	je     0x14002258c
   14002254e:	cmp    DWORD PTR [rip+0x1d98b],0x1        # 0x14003fee0
   140022555:	jne    0x14002257e
   140022557:	test   ecx,ecx
   140022559:	je     0x140022571
   14002255b:	dec    ecx
   14002255d:	je     0x14002256a
   14002255f:	dec    ecx
   140022561:	jne    0x14002257e
   140022563:	mov    ecx,0xfffffff4
   140022568:	jmp    0x140022576
   14002256a:	mov    ecx,0xfffffff5
   14002256f:	jmp    0x140022576
   140022571:	mov    ecx,0xfffffff6
   140022576:	xor    edx,edx
   140022578:	call   QWORD PTR [rip+0xcc0a]        # 0x14002f188
   14002257e:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   140022583:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   140022588:	xor    eax,eax
   14002258a:	jmp    0x1400225a2
   14002258c:	call   0x14001583c
   140022591:	mov    DWORD PTR [rax],0x9
   140022597:	call   0x14001585c
   14002259c:	and    DWORD PTR [rax],0x0
   14002259f:	or     eax,0xffffffff
   1400225a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400225a7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400225ac:	add    rsp,0x20
   1400225b0:	pop    rdi
   1400225b1:	ret    
   1400225b2:	int3   
   1400225b3:	int3   
   1400225b4:	sub    rsp,0x28
   1400225b8:	cmp    ecx,0xfffffffe
   1400225bb:	jne    0x1400225d2
   1400225bd:	call   0x14001585c
   1400225c2:	and    DWORD PTR [rax],0x0
   1400225c5:	call   0x14001583c
   1400225ca:	mov    DWORD PTR [rax],0x9
   1400225d0:	jmp    0x14002261f
   1400225d2:	test   ecx,ecx
   1400225d4:	js     0x140022607
   1400225d6:	cmp    ecx,DWORD PTR [rip+0x34028]        # 0x140056604
   1400225dc:	jae    0x140022607
   1400225de:	movsxd rdx,ecx
   1400225e1:	lea    rcx,[rip+0x34038]        # 0x140056620
   1400225e8:	mov    rax,rdx
   1400225eb:	and    edx,0x1f
   1400225ee:	sar    rax,0x5
   1400225f2:	imul   rdx,rdx,0x58
   1400225f6:	mov    rax,QWORD PTR [rcx+rax*8]
   1400225fa:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   1400225ff:	je     0x140022607
   140022601:	mov    rax,QWORD PTR [rax+rdx*1]
   140022605:	jmp    0x140022623
   140022607:	call   0x14001585c
   14002260c:	and    DWORD PTR [rax],0x0
   14002260f:	call   0x14001583c
   140022614:	mov    DWORD PTR [rax],0x9
   14002261a:	call   0x140019f74
   14002261f:	or     rax,0xffffffffffffffff
   140022623:	add    rsp,0x28
   140022627:	ret    
   140022628:	mov    rax,rsp
   14002262b:	mov    QWORD PTR [rax+0x8],rbx
   14002262f:	mov    QWORD PTR [rax+0x10],rsi
   140022633:	mov    QWORD PTR [rax+0x18],rdi
   140022637:	mov    QWORD PTR [rax+0x20],r12
   14002263b:	push   r14
   14002263d:	sub    rsp,0x20
   140022641:	movsxd rbx,ecx
   140022644:	mov    r12,rbx
   140022647:	sar    r12,0x5
   14002264b:	lea    r14,[rip+0x33fce]        # 0x140056620
   140022652:	and    ebx,0x1f
   140022655:	imul   rbx,rbx,0x58
   140022659:	mov    rsi,QWORD PTR [r14+r12*8]
   14002265d:	mov    edi,0x1
   140022662:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140022667:	jne    0x14002269d
   140022669:	lea    ecx,[rdi+0x9]
   14002266c:	call   0x14001ccc8
   140022671:	nop
   140022672:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140022677:	jne    0x140022693
   140022679:	lea    rcx,[rbx+rsi*1+0x10]
   14002267e:	mov    edx,0xfa0
   140022683:	call   QWORD PTR [rip+0xcb3f]        # 0x14002f1c8
   140022689:	neg    eax
   14002268b:	sbb    edx,edx
   14002268d:	and    edi,edx
   14002268f:	inc    DWORD PTR [rbx+rsi*1+0xc]
   140022693:	mov    ecx,0xa
   140022698:	call   0x14001cbc8
   14002269d:	test   edi,edi
   14002269f:	je     0x1400226b0
   1400226a1:	mov    rcx,QWORD PTR [r14+r12*8]
   1400226a5:	lea    rcx,[rcx+rbx*1+0x10]
   1400226aa:	call   QWORD PTR [rip+0xcbd0]        # 0x14002f280
   1400226b0:	mov    eax,edi
   1400226b2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400226b7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400226bc:	mov    rdi,QWORD PTR [rsp+0x40]
   1400226c1:	mov    r12,QWORD PTR [rsp+0x48]
   1400226c6:	add    rsp,0x20
   1400226ca:	pop    r14
   1400226cc:	ret    
   1400226cd:	int3   
   1400226ce:	int3   
   1400226cf:	int3   
   1400226d0:	movsxd rdx,ecx
   1400226d3:	lea    rcx,[rip+0x33f46]        # 0x140056620
   1400226da:	mov    rax,rdx
   1400226dd:	and    edx,0x1f
   1400226e0:	sar    rax,0x5
   1400226e4:	imul   rdx,rdx,0x58
   1400226e8:	mov    rax,QWORD PTR [rcx+rax*8]
   1400226ec:	lea    rcx,[rax+rdx*1+0x10]
   1400226f1:	rex.W jmp QWORD PTR [rip+0xcb90]        # 0x14002f288
   1400226f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400226fd:	mov    QWORD PTR [rsp+0x10],rsi
   140022702:	mov    QWORD PTR [rsp+0x18],rdi
   140022707:	push   r12
   140022709:	push   r13
   14002270b:	push   r14
   14002270d:	sub    rsp,0x40
   140022711:	or     rsi,0xffffffffffffffff
   140022715:	mov    r12d,esi
   140022718:	xor    r13d,r13d
   14002271b:	lea    ebx,[rsi+0xc]
   14002271e:	mov    ecx,ebx
   140022720:	call   0x14001cbe0
   140022725:	test   eax,eax
   140022727:	jne    0x140022730
   140022729:	mov    eax,esi
   14002272b:	jmp    0x1400228e6
   140022730:	mov    ecx,ebx
   140022732:	call   0x14001ccc8
   140022737:	nop
   140022738:	xor    edi,edi
   14002273a:	lea    rax,[rip+0x33edf]        # 0x140056620
   140022741:	mov    DWORD PTR [rsp+0x24],edi
   140022745:	cmp    edi,0x40
   140022748:	jge    0x1400228d9
   14002274e:	movsxd r14,edi
   140022751:	mov    rbx,QWORD PTR [rax+r14*8]
   140022755:	test   rbx,rbx
   140022758:	je     0x14002284f
   14002275e:	mov    QWORD PTR [rsp+0x30],rbx
   140022763:	mov    rax,QWORD PTR [rax+r14*8]
   140022767:	add    rax,0xb00
   14002276d:	cmp    rbx,rax
   140022770:	jae    0x14002283f
   140022776:	test   BYTE PTR [rbx+0x8],0x1
   14002277a:	jne    0x14002282b
   140022780:	cmp    DWORD PTR [rbx+0xc],0x0
   140022784:	jne    0x1400227c2
   140022786:	mov    ecx,0xa
   14002278b:	call   0x14001ccc8
   140022790:	nop
   140022791:	cmp    DWORD PTR [rbx+0xc],0x0
   140022795:	jne    0x1400227b8
   140022797:	lea    rcx,[rbx+0x10]
   14002279b:	mov    edx,0xfa0
   1400227a0:	call   QWORD PTR [rip+0xca22]        # 0x14002f1c8
   1400227a6:	test   eax,eax
   1400227a8:	jne    0x1400227b5
   1400227aa:	lea    r13d,[rax+0x1]
   1400227ae:	mov    DWORD PTR [rsp+0x28],r13d
   1400227b3:	jmp    0x1400227b8
   1400227b5:	inc    DWORD PTR [rbx+0xc]
   1400227b8:	mov    ecx,0xa
   1400227bd:	call   0x14001cbc8
   1400227c2:	test   r13d,r13d
   1400227c5:	jne    0x14002282b
   1400227c7:	lea    rcx,[rbx+0x10]
   1400227cb:	call   QWORD PTR [rip+0xcaaf]        # 0x14002f280
   1400227d1:	test   BYTE PTR [rbx+0x8],0x1
   1400227d5:	je     0x1400227e3
   1400227d7:	lea    rcx,[rbx+0x10]
   1400227db:	call   QWORD PTR [rip+0xcaa7]        # 0x14002f288
   1400227e1:	jmp    0x14002282b
   1400227e3:	or     rsi,0xffffffffffffffff
   1400227e7:	test   r13d,r13d
   1400227ea:	jne    0x14002282b
   1400227ec:	mov    BYTE PTR [rbx+0x8],0x1
   1400227f0:	mov    QWORD PTR [rbx],rsi
   1400227f3:	lea    r8,[rip+0x33e26]        # 0x140056620
   1400227fa:	sub    rbx,QWORD PTR [r8+r14*8]
   1400227fe:	movabs rax,0x2e8ba2e8ba2e8ba3
   140022808:	imul   rbx
   14002280b:	mov    r12,rdx
   14002280e:	sar    r12,0x4
   140022812:	mov    rax,r12
   140022815:	shr    rax,0x3f
   140022819:	add    r12,rax
   14002281c:	mov    eax,edi
   14002281e:	shl    eax,0x5
   140022821:	add    r12d,eax
   140022824:	mov    DWORD PTR [rsp+0x20],r12d
   140022829:	jmp    0x14002283f
   14002282b:	add    rbx,0x58
   14002282f:	or     rsi,0xffffffffffffffff
   140022833:	lea    rax,[rip+0x33de6]        # 0x140056620
   14002283a:	jmp    0x14002275e
   14002283f:	cmp    r12d,esi
   140022842:	jne    0x1400228d9
   140022848:	inc    edi
   14002284a:	jmp    0x14002273a
   14002284f:	mov    edx,0x58
   140022854:	lea    ecx,[rdx-0x38]
   140022857:	call   0x140020ca8
   14002285c:	mov    QWORD PTR [rsp+0x30],rax
   140022861:	test   rax,rax
   140022864:	je     0x1400228d9
   140022866:	movsxd rdx,edi
   140022869:	lea    r8,[rip+0x33db0]        # 0x140056620
   140022870:	mov    QWORD PTR [r8+rdx*8],rax
   140022874:	add    DWORD PTR [rip+0x33d89],0x20        # 0x140056604
   14002287b:	mov    rcx,QWORD PTR [r8+rdx*8]
   14002287f:	add    rcx,0xb00
   140022886:	cmp    rax,rcx
   140022889:	jae    0x1400228a5
   14002288b:	mov    BYTE PTR [rax+0x8],0x0
   14002288f:	mov    QWORD PTR [rax],rsi
   140022892:	mov    BYTE PTR [rax+0x9],0xa
   140022896:	and    DWORD PTR [rax+0xc],0x0
   14002289a:	add    rax,0x58
   14002289e:	mov    QWORD PTR [rsp+0x30],rax
   1400228a3:	jmp    0x14002287b
   1400228a5:	shl    edi,0x5
   1400228a8:	mov    DWORD PTR [rsp+0x20],edi
   1400228ac:	movsxd rcx,edi
   1400228af:	mov    rax,rcx
   1400228b2:	sar    rax,0x5
   1400228b6:	and    ecx,0x1f
   1400228b9:	imul   rcx,rcx,0x58
   1400228bd:	mov    rax,QWORD PTR [r8+rax*8]
   1400228c1:	mov    BYTE PTR [rax+rcx*1+0x8],0x1
   1400228c6:	mov    ecx,edi
   1400228c8:	call   0x140022628
   1400228cd:	test   eax,eax
   1400228cf:	cmove  edi,esi
   1400228d2:	mov    r12d,edi
   1400228d5:	mov    DWORD PTR [rsp+0x20],edi
   1400228d9:	mov    ecx,0xb
   1400228de:	call   0x14001cbc8
   1400228e3:	mov    eax,r12d
   1400228e6:	mov    rbx,QWORD PTR [rsp+0x60]
   1400228eb:	mov    rsi,QWORD PTR [rsp+0x68]
   1400228f0:	mov    rdi,QWORD PTR [rsp+0x70]
   1400228f5:	add    rsp,0x40
   1400228f9:	pop    r14
   1400228fb:	pop    r13
   1400228fd:	pop    r12
   1400228ff:	ret    
   140022900:	mov    QWORD PTR [rsp+0x8],rbx
   140022905:	push   rdi
   140022906:	sub    rsp,0x40
   14002290a:	mov    r10,r9
   14002290d:	mov    rax,r8
   140022910:	mov    rbx,rdx
   140022913:	mov    edi,ecx
   140022915:	test   rdx,rdx
   140022918:	jne    0x140022930
   14002291a:	call   0x14001583c
   14002291f:	mov    DWORD PTR [rax],0x16
   140022925:	call   0x140019f74
   14002292a:	or     rax,0xffffffffffffffff
   14002292e:	jmp    0x140022982
   140022930:	test   rax,rax
   140022933:	je     0x14002291a
   140022935:	mov    QWORD PTR [rsp+0x20],rdx
   14002293a:	lea    r9,[rsp+0x30]
   14002293f:	lea    r8,[rsp+0x58]
   140022944:	mov    rdx,r10
   140022947:	mov    rcx,rax
   14002294a:	call   0x140029e50
   14002294f:	cmp    eax,0xffffffff
   140022952:	je     0x14002292a
   140022954:	mov    r9,QWORD PTR [rsp+0x30]
   140022959:	mov    r8,QWORD PTR [rsp+0x58]
   14002295e:	mov    rdx,rbx
   140022961:	mov    ecx,edi
   140022963:	call   0x140029ba8
   140022968:	mov    rcx,QWORD PTR [rsp+0x58]
   14002296d:	mov    rbx,rax
   140022970:	call   0x1400130a8
   140022975:	mov    rcx,QWORD PTR [rsp+0x30]
   14002297a:	call   0x1400130a8
   14002297f:	mov    rax,rbx
   140022982:	mov    rbx,QWORD PTR [rsp+0x50]
   140022987:	add    rsp,0x40
   14002298b:	pop    rdi
   14002298c:	ret    
   14002298d:	int3   
   14002298e:	int3   
   14002298f:	int3   
   140022990:	mov    QWORD PTR [rsp+0x18],rbx
   140022995:	mov    QWORD PTR [rsp+0x20],r9
   14002299a:	mov    DWORD PTR [rsp+0x8],ecx
   14002299e:	push   rbp
   14002299f:	push   rsi
   1400229a0:	push   rdi
   1400229a1:	push   r12
   1400229a3:	push   r13
   1400229a5:	push   r14
   1400229a7:	push   r15
   1400229a9:	sub    rsp,0x30
   1400229ad:	xor    r15d,r15d
   1400229b0:	mov    r12,r9
   1400229b3:	mov    r14,r8
   1400229b6:	mov    rbp,rdx
   1400229b9:	mov    r13d,ecx
   1400229bc:	mov    rdi,rdx
   1400229bf:	test   rdx,rdx
   1400229c2:	jne    0x1400229f0
   1400229c4:	call   0x14001583c
   1400229c9:	mov    DWORD PTR [rax],0x16
   1400229cf:	call   0x140019f74
   1400229d4:	or     rax,0xffffffffffffffff
   1400229d8:	mov    rbx,QWORD PTR [rsp+0x80]
   1400229e0:	add    rsp,0x30
   1400229e4:	pop    r15
   1400229e6:	pop    r14
   1400229e8:	pop    r13
   1400229ea:	pop    r12
   1400229ec:	pop    rdi
   1400229ed:	pop    rsi
   1400229ee:	pop    rbp
   1400229ef:	ret    
   1400229f0:	cmp    WORD PTR [rdx],r15w
   1400229f4:	je     0x1400229c4
   1400229f6:	test   r8,r8
   1400229f9:	je     0x1400229c4
   1400229fb:	mov    rax,QWORD PTR [r8]
   1400229fe:	test   rax,rax
   140022a01:	je     0x1400229c4
   140022a03:	cmp    WORD PTR [rax],r15w
   140022a07:	je     0x1400229c4
   140022a09:	mov    edx,0x5c
   140022a0e:	mov    rcx,rbp
   140022a11:	call   0x1400149dc
   140022a16:	mov    edx,0x2f
   140022a1b:	mov    rcx,rbp
   140022a1e:	mov    rsi,rax
   140022a21:	call   0x1400149dc
   140022a26:	test   rax,rax
   140022a29:	jne    0x140022aca
   140022a2f:	test   rsi,rsi
   140022a32:	jne    0x140022ad7
   140022a38:	lea    edx,[rax+0x3a]
   140022a3b:	mov    rcx,rbp
   140022a3e:	call   0x140014680
   140022a43:	mov    rsi,rax
   140022a46:	test   rax,rax
   140022a49:	jne    0x140022ad7
   140022a4f:	mov    rcx,rbp
   140022a52:	call   0x1400192e4
   140022a57:	lea    edx,[rsi+0x2]
   140022a5a:	lea    rbx,[rax+0x3]
   140022a5e:	mov    rcx,rbx
   140022a61:	call   0x140020ca8
   140022a66:	mov    rdi,rax
   140022a69:	test   rax,rax
   140022a6c:	je     0x1400229d4
   140022a72:	lea    r8,[rip+0x105d3]        # 0x14003304c
   140022a79:	mov    rdx,rbx
   140022a7c:	mov    rcx,rax
   140022a7f:	call   0x140016c68
   140022a84:	test   eax,eax
   140022a86:	jne    0x140022ab5
   140022a88:	mov    r8,rbp
   140022a8b:	mov    rdx,rbx
   140022a8e:	mov    rcx,rdi
   140022a91:	call   0x140017684
   140022a96:	test   eax,eax
   140022a98:	jne    0x140022aa0
   140022a9a:	lea    rsi,[rdi+0x4]
   140022a9e:	jmp    0x140022ad7
   140022aa0:	xor    r9d,r9d
   140022aa3:	xor    r8d,r8d
   140022aa6:	xor    edx,edx
   140022aa8:	xor    ecx,ecx
   140022aaa:	mov    QWORD PTR [rsp+0x20],r15
   140022aaf:	call   0x140019ed0
   140022ab4:	int3   
   140022ab5:	xor    r9d,r9d
   140022ab8:	xor    r8d,r8d
   140022abb:	xor    edx,edx
   140022abd:	xor    ecx,ecx
   140022abf:	mov    QWORD PTR [rsp+0x20],r15
   140022ac4:	call   0x140019ed0
   140022ac9:	int3   
   140022aca:	test   rsi,rsi
   140022acd:	je     0x140022ad4
   140022acf:	cmp    rax,rsi
   140022ad2:	jbe    0x140022ad7
   140022ad4:	mov    rsi,rax
   140022ad7:	or     rbx,0xffffffffffffffff
   140022adb:	mov    rcx,rsi
   140022ade:	lea    edx,[rbx+0x2f]
   140022ae1:	call   0x1400149dc
   140022ae6:	mov    rcx,rdi
   140022ae9:	test   rax,rax
   140022aec:	je     0x140022b16
   140022aee:	xor    edx,edx
   140022af0:	call   0x140022de0
   140022af5:	test   eax,eax
   140022af7:	jne    0x140022bdc
   140022afd:	mov    r9,r12
   140022b00:	mov    r8,r14
   140022b03:	mov    rdx,rdi
   140022b06:	mov    ecx,r13d
   140022b09:	call   0x140022900
   140022b0e:	mov    rbx,rax
   140022b11:	jmp    0x140022bdc
   140022b16:	call   0x1400192e4
   140022b1b:	mov    edx,0x2
   140022b20:	lea    r12,[rax+0x5]
   140022b24:	mov    rcx,r12
   140022b27:	call   0x140020ca8
   140022b2c:	mov    rsi,rax
   140022b2f:	test   rax,rax
   140022b32:	jne    0x140022b3c
   140022b34:	mov    rax,rbx
   140022b37:	jmp    0x1400229d8
   140022b3c:	mov    r8,rdi
   140022b3f:	mov    rdx,r12
   140022b42:	mov    rcx,rax
   140022b45:	call   0x140016c68
   140022b4a:	test   eax,eax
   140022b4c:	jne    0x140022c08
   140022b52:	mov    rcx,rdi
   140022b55:	call   0x1400192e4
   140022b5a:	lea    r15,[rsi+rax*2]
   140022b5e:	call   0x14001583c
   140022b63:	lea    r13,[rip+0x1e2d6]        # 0x140040e40
   140022b6a:	mov    eax,DWORD PTR [rax]
   140022b6c:	mov    DWORD PTR [rsp+0x78],eax
   140022b70:	mov    rax,r15
   140022b73:	sub    rax,rsi
   140022b76:	sar    rax,1
   140022b79:	sub    r12,rax
   140022b7c:	mov    r8,QWORD PTR [r13+0x0]
   140022b80:	mov    rdx,r12
   140022b83:	mov    rcx,r15
   140022b86:	call   0x140016c68
   140022b8b:	test   eax,eax
   140022b8d:	jne    0x140022bf2
   140022b8f:	xor    edx,edx
   140022b91:	mov    rcx,rsi
   140022b94:	call   0x140022de0
   140022b99:	test   eax,eax
   140022b9b:	je     0x140022baf
   140022b9d:	lea    rax,[rip+0x1e284]        # 0x140040e28
   140022ba4:	sub    r13,0x8
   140022ba8:	cmp    r13,rax
   140022bab:	jge    0x140022b7c
   140022bad:	jmp    0x140022bd4
   140022baf:	call   0x14001583c
   140022bb4:	mov    ecx,DWORD PTR [rsp+0x78]
   140022bb8:	mov    r9,QWORD PTR [rsp+0x88]
   140022bc0:	mov    DWORD PTR [rax],ecx
   140022bc2:	mov    ecx,DWORD PTR [rsp+0x70]
   140022bc6:	mov    r8,r14
   140022bc9:	mov    rdx,rsi
   140022bcc:	call   0x140022900
   140022bd1:	mov    rbx,rax
   140022bd4:	mov    rcx,rsi
   140022bd7:	call   0x1400130a8
   140022bdc:	cmp    rdi,rbp
   140022bdf:	je     0x140022b34
   140022be5:	mov    rcx,rdi
   140022be8:	call   0x1400130a8
   140022bed:	jmp    0x140022b34
   140022bf2:	and    QWORD PTR [rsp+0x20],0x0
   140022bf8:	xor    r9d,r9d
   140022bfb:	xor    r8d,r8d
   140022bfe:	xor    edx,edx
   140022c00:	xor    ecx,ecx
   140022c02:	call   0x140019ed0
   140022c07:	int3   
   140022c08:	xor    r9d,r9d
   140022c0b:	xor    r8d,r8d
   140022c0e:	xor    edx,edx
   140022c10:	xor    ecx,ecx
   140022c12:	mov    QWORD PTR [rsp+0x20],r15
   140022c17:	call   0x140019ed0
   140022c1c:	int3   
   140022c1d:	int3   
   140022c1e:	int3   
   140022c1f:	int3   
   140022c20:	mov    QWORD PTR [rsp+0x8],rbx
   140022c25:	mov    QWORD PTR [rsp+0x10],rbp
   140022c2a:	mov    QWORD PTR [rsp+0x18],rsi
   140022c2f:	push   rdi
   140022c30:	sub    rsp,0x20
   140022c34:	xor    ebp,ebp
   140022c36:	mov    esi,r9d
   140022c39:	mov    r11,r8
   140022c3c:	mov    r10,rdx
   140022c3f:	mov    edi,ecx
   140022c41:	test   rdx,rdx
   140022c44:	jne    0x140022c5e
   140022c46:	call   0x14001583c
   140022c4b:	mov    ebx,0x16
   140022c50:	mov    DWORD PTR [rax],ebx
   140022c52:	call   0x140019f74
   140022c57:	mov    eax,ebx
   140022c59:	jmp    0x140022d17
   140022c5e:	test   r8,r8
   140022c61:	je     0x140022c46
   140022c63:	mov    WORD PTR [rdx],bp
   140022c66:	mov    edx,DWORD PTR [rsp+0x50]
   140022c6a:	mov    eax,edx
   140022c6c:	neg    eax
   140022c6e:	sbb    rcx,rcx
   140022c71:	neg    rcx
   140022c74:	inc    rcx
   140022c77:	cmp    r8,rcx
   140022c7a:	ja     0x140022c88
   140022c7c:	call   0x14001583c
   140022c81:	mov    ebx,0x22
   140022c86:	jmp    0x140022c50
   140022c88:	lea    eax,[r9-0x2]
   140022c8c:	mov    ebx,0x22
   140022c91:	cmp    eax,ebx
   140022c93:	ja     0x140022c46
   140022c95:	mov    rcx,rbp
   140022c98:	mov    r8,r10
   140022c9b:	test   edx,edx
   140022c9d:	je     0x140022caf
   140022c9f:	lea    eax,[rbx+0xb]
   140022ca2:	lea    r8,[r10+0x2]
   140022ca6:	lea    ecx,[rbx-0x21]
   140022ca9:	mov    WORD PTR [r10],ax
   140022cad:	neg    edi
   140022caf:	mov    r9,r8
   140022cb2:	xor    edx,edx
   140022cb4:	mov    eax,edi
   140022cb6:	div    esi
   140022cb8:	mov    edi,eax
   140022cba:	cmp    edx,0x9
   140022cbd:	jbe    0x140022cc5
   140022cbf:	add    dx,0x57
   140022cc3:	jmp    0x140022cc9
   140022cc5:	add    dx,0x30
   140022cc9:	mov    WORD PTR [r8],dx
   140022ccd:	inc    rcx
   140022cd0:	add    r8,0x2
   140022cd4:	test   eax,eax
   140022cd6:	je     0x140022cdd
   140022cd8:	cmp    rcx,r11
   140022cdb:	jb     0x140022cb2
   140022cdd:	cmp    rcx,r11
   140022ce0:	jb     0x140022cf0
   140022ce2:	mov    WORD PTR [r10],bp
   140022ce6:	call   0x14001583c
   140022ceb:	jmp    0x140022c50
   140022cf0:	mov    WORD PTR [r8],bp
   140022cf4:	sub    r8,0x2
   140022cf8:	movzx  eax,WORD PTR [r9]
   140022cfc:	movzx  ecx,WORD PTR [r8]
   140022d00:	mov    WORD PTR [r8],ax
   140022d04:	mov    WORD PTR [r9],cx
   140022d08:	add    r9,0x2
   140022d0c:	sub    r8,0x2
   140022d10:	cmp    r9,r8
   140022d13:	jb     0x140022cf8
   140022d15:	xor    eax,eax
   140022d17:	mov    rbx,QWORD PTR [rsp+0x30]
   140022d1c:	mov    rbp,QWORD PTR [rsp+0x38]
   140022d21:	mov    rsi,QWORD PTR [rsp+0x40]
   140022d26:	add    rsp,0x20
   140022d2a:	pop    rdi
   140022d2b:	ret    
   140022d2c:	sub    rsp,0x38
   140022d30:	and    DWORD PTR [rsp+0x20],0x0
   140022d35:	call   0x140022c20
   140022d3a:	add    rsp,0x38
   140022d3e:	ret    
   140022d3f:	int3   
   140022d40:	mov    QWORD PTR [rsp+0x8],rbx
   140022d45:	mov    QWORD PTR [rsp+0x10],rsi
   140022d4a:	push   rdi
   140022d4b:	sub    rsp,0x30
   140022d4f:	xor    edi,edi
   140022d51:	lea    ecx,[rdi+0x1]
   140022d54:	call   0x14001ccc8
   140022d59:	nop
   140022d5a:	xor    ebx,ebx
   140022d5c:	mov    DWORD PTR [rsp+0x20],ebx
   140022d60:	cmp    ebx,DWORD PTR [rip+0x34ada]        # 0x140057840
   140022d66:	jge    0x140022dc4
   140022d68:	movsxd rsi,ebx
   140022d6b:	mov    rax,QWORD PTR [rip+0x33abe]        # 0x140056830
   140022d72:	cmp    QWORD PTR [rax+rsi*8],0x0
   140022d77:	je     0x140022dc0
   140022d79:	mov    rdx,QWORD PTR [rax+rsi*8]
   140022d7d:	test   BYTE PTR [rdx+0x18],0x83
   140022d81:	je     0x140022dc0
   140022d83:	mov    ecx,ebx
   140022d85:	call   0x140014db0
   140022d8a:	nop
   140022d8b:	mov    rdx,QWORD PTR [rip+0x33a9e]        # 0x140056830
   140022d92:	mov    rcx,QWORD PTR [rdx+rsi*8]
   140022d96:	test   BYTE PTR [rcx+0x18],0x83
   140022d9a:	je     0x140022db5
   140022d9c:	cmp    QWORD PTR [rcx+0x28],0x0
   140022da1:	je     0x140022db5
   140022da3:	call   0x140014f00
   140022da8:	inc    edi
   140022daa:	mov    DWORD PTR [rsp+0x24],edi
   140022dae:	mov    rdx,QWORD PTR [rip+0x33a7b]        # 0x140056830
   140022db5:	mov    rdx,QWORD PTR [rdx+rsi*8]
   140022db9:	mov    ecx,ebx
   140022dbb:	call   0x140014e30
   140022dc0:	inc    ebx
   140022dc2:	jmp    0x140022d5c
   140022dc4:	mov    ecx,0x1
   140022dc9:	call   0x14001cbc8
   140022dce:	mov    eax,edi
   140022dd0:	mov    rbx,QWORD PTR [rsp+0x40]
   140022dd5:	mov    rsi,QWORD PTR [rsp+0x48]
   140022dda:	add    rsp,0x30
   140022dde:	pop    rdi
   140022ddf:	ret    
   140022de0:	rex push rbx
   140022de2:	sub    rsp,0x20
   140022de6:	mov    ebx,edx
   140022de8:	test   rcx,rcx
   140022deb:	jne    0x140022e0a
   140022ded:	call   0x14001585c
   140022df2:	and    DWORD PTR [rax],0x0
   140022df5:	call   0x14001583c
   140022dfa:	mov    ebx,0x16
   140022dff:	mov    DWORD PTR [rax],ebx
   140022e01:	call   0x140019f74
   140022e06:	mov    eax,ebx
   140022e08:	jmp    0x140022e5a
   140022e0a:	test   edx,0xfffffff9
   140022e10:	jne    0x140022ded
   140022e12:	call   QWORD PTR [rip+0xc308]        # 0x14002f120
   140022e18:	cmp    eax,0xffffffff
   140022e1b:	jne    0x140022e33
   140022e1d:	call   QWORD PTR [rip+0xc28d]        # 0x14002f0b0
   140022e23:	mov    ecx,eax
   140022e25:	call   0x14001587c
   140022e2a:	call   0x14001583c
   140022e2f:	mov    eax,DWORD PTR [rax]
   140022e31:	jmp    0x140022e5a
   140022e33:	test   al,0x10
   140022e35:	jne    0x140022e58
   140022e37:	test   al,0x1
   140022e39:	je     0x140022e58
   140022e3b:	test   bl,0x2
   140022e3e:	je     0x140022e58
   140022e40:	call   0x14001585c
   140022e45:	mov    DWORD PTR [rax],0x5
   140022e4b:	call   0x14001583c
   140022e50:	mov    DWORD PTR [rax],0xd
   140022e56:	jmp    0x140022e2a
   140022e58:	xor    eax,eax
   140022e5a:	add    rsp,0x20
   140022e5e:	pop    rbx
   140022e5f:	ret    
   140022e60:	mov    QWORD PTR [rsp+0x8],rbx
   140022e65:	push   rdi
   140022e66:	sub    rsp,0x20
   140022e6a:	movsxd rbx,ecx
   140022e6d:	mov    edi,r8d
   140022e70:	mov    QWORD PTR [rsp+0x38],rdx
   140022e75:	mov    ecx,ebx
   140022e77:	call   0x1400225b4
   140022e7c:	cmp    rax,0xffffffffffffffff
   140022e80:	jne    0x140022e93
   140022e82:	call   0x14001583c
   140022e87:	mov    DWORD PTR [rax],0x9
   140022e8d:	or     rax,0xffffffffffffffff
   140022e91:	jmp    0x140022eea
   140022e93:	mov    edx,DWORD PTR [rsp+0x38]
   140022e97:	lea    r8,[rsp+0x3c]
   140022e9c:	mov    r9d,edi
   140022e9f:	mov    rcx,rax
   140022ea2:	call   QWORD PTR [rip+0xc2d8]        # 0x14002f180
   140022ea8:	mov    DWORD PTR [rsp+0x38],eax
   140022eac:	cmp    eax,0xffffffff
   140022eaf:	jne    0x140022ec4
   140022eb1:	call   QWORD PTR [rip+0xc1f9]        # 0x14002f0b0
   140022eb7:	test   eax,eax
   140022eb9:	je     0x140022ec4
   140022ebb:	mov    ecx,eax
   140022ebd:	call   0x14001587c
   140022ec2:	jmp    0x140022e8d
   140022ec4:	mov    rcx,rbx
   140022ec7:	mov    rax,rbx
   140022eca:	lea    rdx,[rip+0x3374f]        # 0x140056620
   140022ed1:	sar    rax,0x5
   140022ed5:	and    ecx,0x1f
   140022ed8:	mov    rax,QWORD PTR [rdx+rax*8]
   140022edc:	imul   rcx,rcx,0x58
   140022ee0:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140022ee5:	mov    rax,QWORD PTR [rsp+0x38]
   140022eea:	mov    rbx,QWORD PTR [rsp+0x30]
   140022eef:	add    rsp,0x20
   140022ef3:	pop    rdi
   140022ef4:	ret    
   140022ef5:	int3   
   140022ef6:	int3   
   140022ef7:	int3   
   140022ef8:	mov    QWORD PTR [rsp+0x10],rbx
   140022efd:	mov    DWORD PTR [rsp+0x8],ecx
   140022f01:	push   rsi
   140022f02:	push   rdi
   140022f03:	push   r12
   140022f05:	push   r13
   140022f07:	push   r14
   140022f09:	sub    rsp,0x20
   140022f0d:	mov    esi,r8d
   140022f10:	mov    r12,rdx
   140022f13:	movsxd rdi,ecx
   140022f16:	cmp    edi,0xfffffffe
   140022f19:	jne    0x140022f33
   140022f1b:	call   0x14001585c
   140022f20:	and    DWORD PTR [rax],0x0
   140022f23:	call   0x14001583c
   140022f28:	mov    DWORD PTR [rax],0x9
   140022f2e:	jmp    0x140022fc5
   140022f33:	test   ecx,ecx
   140022f35:	js     0x140022fad
   140022f37:	cmp    edi,DWORD PTR [rip+0x336c7]        # 0x140056604
   140022f3d:	jae    0x140022fad
   140022f3f:	mov    rbx,rdi
   140022f42:	mov    r13,rdi
   140022f45:	sar    r13,0x5
   140022f49:	lea    r14,[rip+0x336d0]        # 0x140056620
   140022f50:	and    ebx,0x1f
   140022f53:	imul   rbx,rbx,0x58
   140022f57:	mov    rax,QWORD PTR [r14+r13*8]
   140022f5b:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140022f60:	and    ecx,0x1
   140022f63:	je     0x140022fad
   140022f65:	mov    ecx,edi
   140022f67:	call   0x140022628
   140022f6c:	nop
   140022f6d:	mov    rax,QWORD PTR [r14+r13*8]
   140022f71:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140022f76:	je     0x140022f8a
   140022f78:	mov    r8d,esi
   140022f7b:	mov    rdx,r12
   140022f7e:	mov    ecx,edi
   140022f80:	call   0x140022e60
   140022f85:	mov    rbx,rax
   140022f88:	jmp    0x140022fa1
   140022f8a:	call   0x14001583c
   140022f8f:	mov    DWORD PTR [rax],0x9
   140022f95:	call   0x14001585c
   140022f9a:	and    DWORD PTR [rax],0x0
   140022f9d:	or     rbx,0xffffffffffffffff
   140022fa1:	mov    ecx,edi
   140022fa3:	call   0x1400226d0
   140022fa8:	mov    rax,rbx
   140022fab:	jmp    0x140022fc9
   140022fad:	call   0x14001585c
   140022fb2:	and    DWORD PTR [rax],0x0
   140022fb5:	call   0x14001583c
   140022fba:	mov    DWORD PTR [rax],0x9
   140022fc0:	call   0x140019f74
   140022fc5:	or     rax,0xffffffffffffffff
   140022fc9:	mov    rbx,QWORD PTR [rsp+0x58]
   140022fce:	add    rsp,0x20
   140022fd2:	pop    r14
   140022fd4:	pop    r13
   140022fd6:	pop    r12
   140022fd8:	pop    rdi
   140022fd9:	pop    rsi
   140022fda:	ret    
   140022fdb:	int3   
   140022fdc:	mov    rax,rsp
   140022fdf:	mov    QWORD PTR [rax+0x8],rbx
   140022fe3:	mov    QWORD PTR [rax+0x10],rbp
   140022fe7:	mov    QWORD PTR [rax+0x18],rsi
   140022feb:	mov    QWORD PTR [rax+0x20],rdi
   140022fef:	push   r12
   140022ff1:	push   r13
   140022ff3:	push   r15
   140022ff5:	sub    rsp,0x20
   140022ff9:	mov    rbp,rdx
   140022ffc:	xor    edi,edi
   140022ffe:	xor    edx,edx
   140023000:	lea    r8d,[rdi+0x1]
   140023004:	mov    esi,ecx
   140023006:	call   0x140022e60
   14002300b:	mov    r13,rax
   14002300e:	cmp    rax,0xffffffffffffffff
   140023012:	je     0x140023064
   140023014:	lea    r8d,[rdi+0x2]
   140023018:	xor    edx,edx
   14002301a:	mov    ecx,esi
   14002301c:	call   0x140022e60
   140023021:	cmp    rax,0xffffffffffffffff
   140023025:	je     0x140023064
   140023027:	mov    rbx,rbp
   14002302a:	sub    rbx,rax
   14002302d:	test   rbx,rbx
   140023030:	jle    0x1400230f7
   140023036:	call   QWORD PTR [rip+0xc134]        # 0x14002f170
   14002303c:	mov    r15d,0x1000
   140023042:	lea    edx,[rdi+0x8]
   140023045:	mov    rcx,rax
   140023048:	mov    r8d,r15d
   14002304b:	call   QWORD PTR [rip+0xc1ff]        # 0x14002f250
   140023051:	mov    rbp,rax
   140023054:	test   rax,rax
   140023057:	jne    0x14002308a
   140023059:	call   0x14001583c
   14002305e:	mov    DWORD PTR [rax],0xc
   140023064:	call   0x14001583c
   140023069:	mov    eax,DWORD PTR [rax]
   14002306b:	mov    rbx,QWORD PTR [rsp+0x40]
   140023070:	mov    rbp,QWORD PTR [rsp+0x48]
   140023075:	mov    rsi,QWORD PTR [rsp+0x50]
   14002307a:	mov    rdi,QWORD PTR [rsp+0x58]
   14002307f:	add    rsp,0x20
   140023083:	pop    r15
   140023085:	pop    r13
   140023087:	pop    r12
   140023089:	ret    
   14002308a:	mov    edx,0x8000
   14002308f:	mov    ecx,esi
   140023091:	call   0x140023a4c
   140023096:	mov    r12d,eax
   140023099:	mov    r8d,ebx
   14002309c:	cmp    rbx,r15
   14002309f:	mov    rdx,rbp
   1400230a2:	cmovge r8d,r15d
   1400230a6:	mov    ecx,esi
   1400230a8:	call   0x14002146c
   1400230ad:	cmp    eax,0xffffffff
   1400230b0:	je     0x1400230be
   1400230b2:	cdqe   
   1400230b4:	sub    rbx,rax
   1400230b7:	test   rbx,rbx
   1400230ba:	jle    0x1400230d7
   1400230bc:	jmp    0x140023099
   1400230be:	call   0x14001585c
   1400230c3:	cmp    DWORD PTR [rax],0x5
   1400230c6:	jne    0x1400230d3
   1400230c8:	call   0x14001583c
   1400230cd:	mov    DWORD PTR [rax],0xd
   1400230d3:	or     rdi,0xffffffffffffffff
   1400230d7:	mov    edx,r12d
   1400230da:	mov    ecx,esi
   1400230dc:	call   0x140023a4c
   1400230e1:	call   QWORD PTR [rip+0xc089]        # 0x14002f170
   1400230e7:	mov    r8,rbp
   1400230ea:	mov    rcx,rax
   1400230ed:	xor    edx,edx
   1400230ef:	call   QWORD PTR [rip+0xc14b]        # 0x14002f240
   1400230f5:	jmp    0x14002314c
   1400230f7:	jns    0x140023156
   1400230f9:	xor    r8d,r8d
   1400230fc:	mov    rdx,rbp
   1400230ff:	mov    ecx,esi
   140023101:	call   0x140022e60
   140023106:	cmp    rax,0xffffffffffffffff
   14002310a:	je     0x140023064
   140023110:	mov    ecx,esi
   140023112:	call   0x1400225b4
   140023117:	mov    rcx,rax
   14002311a:	call   QWORD PTR [rip+0xc058]        # 0x14002f178
   140023120:	neg    eax
   140023122:	sbb    rdi,rdi
   140023125:	neg    rdi
   140023128:	dec    rdi
   14002312b:	cmp    rdi,0xffffffffffffffff
   14002312f:	jne    0x140023156
   140023131:	call   0x14001583c
   140023136:	mov    DWORD PTR [rax],0xd
   14002313c:	call   0x14001585c
   140023141:	mov    rbx,rax
   140023144:	call   QWORD PTR [rip+0xbf66]        # 0x14002f0b0
   14002314a:	mov    DWORD PTR [rbx],eax
   14002314c:	cmp    rdi,0xffffffffffffffff
   140023150:	je     0x140023064
   140023156:	xor    r8d,r8d
   140023159:	mov    rdx,r13
   14002315c:	mov    ecx,esi
   14002315e:	call   0x140022e60
   140023163:	cmp    rax,0xffffffffffffffff
   140023167:	je     0x140023064
   14002316d:	xor    eax,eax
   14002316f:	jmp    0x14002306b
   140023174:	mov    QWORD PTR [rsp+0x10],rdx
   140023179:	mov    DWORD PTR [rsp+0x8],ecx
   14002317d:	push   rbp
   14002317e:	push   rbx
   14002317f:	push   rsi
   140023180:	push   rdi
   140023181:	push   r12
   140023183:	push   r13
   140023185:	push   r14
   140023187:	push   r15
   140023189:	mov    rbp,rsp
   14002318c:	sub    rsp,0x58
   140023190:	movsxd rax,ecx
   140023193:	mov    ebx,r8d
   140023196:	mov    DWORD PTR [rbp-0x20],0xfffffffe
   14002319d:	mov    DWORD PTR [rbp-0x1c],ebx
   1400231a0:	cmp    eax,0xfffffffe
   1400231a3:	jne    0x1400231be
   1400231a5:	call   0x14001585c
   1400231aa:	xor    edi,edi
   1400231ac:	mov    DWORD PTR [rax],edi
   1400231ae:	call   0x14001583c
   1400231b3:	mov    DWORD PTR [rax],0x9
   1400231b9:	jmp    0x140023883
   1400231be:	xor    edi,edi
   1400231c0:	test   ecx,ecx
   1400231c2:	js     0x14002386c
   1400231c8:	cmp    eax,DWORD PTR [rip+0x33436]        # 0x140056604
   1400231ce:	jae    0x14002386c
   1400231d4:	mov    rsi,rax
   1400231d7:	mov    r15,rax
   1400231da:	lea    r9,[rip+0xfffffffffffdce1f]        # 0x140000000
   1400231e1:	sar    r15,0x5
   1400231e5:	and    esi,0x1f
   1400231e8:	mov    rcx,QWORD PTR [r9+r15*8+0x56620]
   1400231f0:	imul   rsi,rsi,0x58
   1400231f4:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   1400231f8:	test   al,0x1
   1400231fa:	je     0x14002386c
   140023200:	cmp    ebx,0x7fffffff
   140023206:	jbe    0x14002321f
   140023208:	call   0x14001585c
   14002320d:	mov    DWORD PTR [rax],edi
   14002320f:	call   0x14001583c
   140023214:	mov    DWORD PTR [rax],0x16
   14002321a:	jmp    0x14002387e
   14002321f:	mov    r12d,edi
   140023222:	test   ebx,ebx
   140023224:	je     0x140023868
   14002322a:	test   al,0x2
   14002322c:	jne    0x140023868
   140023232:	test   rdx,rdx
   140023235:	je     0x140023208
   140023237:	mov    r13b,BYTE PTR [rcx+rsi*1+0x38]
   14002323c:	mov    r8d,0x4
   140023242:	add    r13b,r13b
   140023245:	sar    r13b,1
   140023248:	movsx  ecx,r13b
   14002324c:	mov    BYTE PTR [rbp+0x60],r13b
   140023250:	dec    ecx
   140023252:	je     0x140023268
   140023254:	dec    ecx
   140023256:	jne    0x140023263
   140023258:	mov    eax,ebx
   14002325a:	not    eax
   14002325c:	test   al,0x1
   14002325e:	je     0x140023208
   140023260:	and    ebx,0xfffffffe
   140023263:	mov    r14,rdx
   140023266:	jmp    0x1400232c8
   140023268:	mov    eax,ebx
   14002326a:	not    eax
   14002326c:	test   al,0x1
   14002326e:	je     0x140023208
   140023270:	shr    ebx,1
   140023272:	cmp    ebx,r8d
   140023275:	cmovb  ebx,r8d
   140023279:	mov    ecx,ebx
   14002327b:	call   0x140020c28
   140023280:	mov    r14,rax
   140023283:	test   rax,rax
   140023286:	jne    0x1400232a3
   140023288:	call   0x14001583c
   14002328d:	mov    DWORD PTR [rax],0xc
   140023293:	call   0x14001585c
   140023298:	mov    DWORD PTR [rax],0x8
   14002329e:	jmp    0x140023883
   1400232a3:	mov    ecx,DWORD PTR [rbp+0x48]
   1400232a6:	xor    edx,edx
   1400232a8:	lea    r8d,[rdx+0x1]
   1400232ac:	call   0x140022e60
   1400232b1:	lea    r9,[rip+0xfffffffffffdcd48]        # 0x140000000
   1400232b8:	mov    r11,rax
   1400232bb:	mov    rax,QWORD PTR [r9+r15*8+0x56620]
   1400232c3:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   1400232c8:	mov    rax,QWORD PTR [r9+r15*8+0x56620]
   1400232d0:	mov    rdx,r14
   1400232d3:	mov    r8d,0xa
   1400232d9:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400232de:	je     0x14002337f
   1400232e4:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   1400232e8:	cmp    cl,r8b
   1400232eb:	je     0x14002337f
   1400232f1:	test   ebx,ebx
   1400232f3:	je     0x14002337f
   1400232f9:	mov    BYTE PTR [r14],cl
   1400232fc:	mov    rax,QWORD PTR [r9+r15*8+0x56620]
   140023304:	or     r10d,0xffffffff
   140023308:	add    ebx,r10d
   14002330b:	lea    rdx,[r14+0x1]
   14002330f:	lea    r12d,[r8-0x9]
   140023313:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   140023318:	test   r13b,r13b
   14002331b:	je     0x14002337f
   14002331d:	mov    rax,QWORD PTR [r9+r15*8+0x56620]
   140023325:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   140023329:	cmp    cl,r8b
   14002332c:	je     0x14002337f
   14002332e:	test   ebx,ebx
   140023330:	je     0x14002337f
   140023332:	mov    BYTE PTR [rdx],cl
   140023334:	mov    rax,QWORD PTR [r9+r15*8+0x56620]
   14002333c:	add    ebx,r10d
   14002333f:	inc    rdx
   140023342:	lea    r12d,[r8-0x8]
   140023346:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   14002334b:	cmp    r13b,0x1
   14002334f:	jne    0x14002337f
   140023351:	mov    rax,QWORD PTR [r9+r15*8+0x56620]
   140023359:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   14002335d:	cmp    cl,r8b
   140023360:	je     0x14002337f
   140023362:	test   ebx,ebx
   140023364:	je     0x14002337f
   140023366:	mov    BYTE PTR [rdx],cl
   140023368:	mov    rax,QWORD PTR [r9+r15*8+0x56620]
   140023370:	inc    rdx
   140023373:	lea    r12d,[r8-0x7]
   140023377:	add    ebx,r10d
   14002337a:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   14002337f:	mov    rcx,QWORD PTR [r9+r15*8+0x56620]
   140023387:	lea    r9,[rbp-0x24]
   14002338b:	mov    r8d,ebx
   14002338e:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140023392:	mov    QWORD PTR [rsp+0x20],rdi
   140023397:	call   QWORD PTR [rip+0xbc93]        # 0x14002f030
   14002339d:	test   eax,eax
   14002339f:	je     0x14002382d
   1400233a5:	movsxd rdx,DWORD PTR [rbp-0x24]
   1400233a9:	test   edx,edx
   1400233ab:	js     0x14002382d
   1400233b1:	mov    eax,ebx
   1400233b3:	cmp    rdx,rax
   1400233b6:	ja     0x14002382d
   1400233bc:	lea    r8,[rip+0xfffffffffffdcc3d]        # 0x140000000
   1400233c3:	add    r12d,edx
   1400233c6:	mov    rax,QWORD PTR [r8+r15*8+0x56620]
   1400233ce:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   1400233d3:	je     0x14002380e
   1400233d9:	cmp    r13b,0x2
   1400233dd:	je     0x14002366f
   1400233e3:	test   edx,edx
   1400233e5:	je     0x1400233f4
   1400233e7:	cmp    BYTE PTR [r14],0xa
   1400233eb:	jne    0x1400233f4
   1400233ed:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   1400233f2:	jmp    0x1400233f9
   1400233f4:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   1400233f9:	movsxd rax,r12d
   1400233fc:	mov    rbx,r14
   1400233ff:	mov    r13,r14
   140023402:	add    rax,r14
   140023405:	mov    QWORD PTR [rbp-0x18],rax
   140023409:	cmp    r14,rax
   14002340c:	jae    0x14002352d
   140023412:	mov    r12d,0xd
   140023418:	mov    al,BYTE PTR [r13+0x0]
   14002341c:	cmp    al,0x1a
   14002341e:	je     0x14002350e
   140023424:	cmp    al,r12b
   140023427:	je     0x140023436
   140023429:	mov    BYTE PTR [rbx],al
   14002342b:	inc    rbx
   14002342e:	inc    r13
   140023431:	jmp    0x140023502
   140023436:	mov    rax,QWORD PTR [rbp-0x18]
   14002343a:	dec    rax
   14002343d:	cmp    r13,rax
   140023440:	jae    0x140023459
   140023442:	lea    rax,[r13+0x1]
   140023446:	cmp    BYTE PTR [rax],0xa
   140023449:	jne    0x140023451
   14002344b:	add    r13,0x2
   14002344f:	jmp    0x1400234cf
   140023451:	mov    r13,rax
   140023454:	jmp    0x1400234fc
   140023459:	mov    rcx,QWORD PTR [r8+r15*8+0x56620]
   140023461:	lea    r9,[rbp-0x24]
   140023465:	lea    rdx,[rbp+0x58]
   140023469:	mov    rcx,QWORD PTR [rcx+rsi*1]
   14002346d:	mov    r8d,0x1
   140023473:	inc    r13
   140023476:	mov    QWORD PTR [rsp+0x20],rdi
   14002347b:	call   QWORD PTR [rip+0xbbaf]        # 0x14002f030
   140023481:	test   eax,eax
   140023483:	jne    0x14002348f
   140023485:	call   QWORD PTR [rip+0xbc25]        # 0x14002f0b0
   14002348b:	test   eax,eax
   14002348d:	jne    0x1400234f5
   14002348f:	cmp    DWORD PTR [rbp-0x24],edi
   140023492:	je     0x1400234f5
   140023494:	lea    r8,[rip+0xfffffffffffdcb65]        # 0x140000000
   14002349b:	mov    rax,QWORD PTR [r8+r15*8+0x56620]
   1400234a3:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400234a8:	je     0x1400234c4
   1400234aa:	cmp    BYTE PTR [rbp+0x58],0xa
   1400234ae:	je     0x1400234cf
   1400234b0:	mov    BYTE PTR [rbx],r12b
   1400234b3:	mov    rcx,QWORD PTR [r8+r15*8+0x56620]
   1400234bb:	mov    al,BYTE PTR [rbp+0x58]
   1400234be:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   1400234c2:	jmp    0x1400234ff
   1400234c4:	cmp    rbx,r14
   1400234c7:	jne    0x1400234d4
   1400234c9:	cmp    BYTE PTR [rbp+0x58],0xa
   1400234cd:	jne    0x1400234d4
   1400234cf:	mov    BYTE PTR [rbx],0xa
   1400234d2:	jmp    0x1400234ff
   1400234d4:	mov    ecx,DWORD PTR [rbp+0x48]
   1400234d7:	mov    r8d,0x1
   1400234dd:	or     rdx,0xffffffffffffffff
   1400234e1:	call   0x140022e60
   1400234e6:	cmp    BYTE PTR [rbp+0x58],0xa
   1400234ea:	lea    r8,[rip+0xfffffffffffdcb0f]        # 0x140000000
   1400234f1:	je     0x140023502
   1400234f3:	jmp    0x1400234fc
   1400234f5:	lea    r8,[rip+0xfffffffffffdcb04]        # 0x140000000
   1400234fc:	mov    BYTE PTR [rbx],r12b
   1400234ff:	inc    rbx
   140023502:	cmp    r13,QWORD PTR [rbp-0x18]
   140023506:	jb     0x140023418
   14002350c:	jmp    0x14002352d
   14002350e:	mov    rax,QWORD PTR [r8+r15*8+0x56620]
   140023516:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14002351b:	jne    0x140023524
   14002351d:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   140023522:	jmp    0x14002352d
   140023524:	mov    al,BYTE PTR [r13+0x0]
   140023528:	mov    BYTE PTR [rbx],al
   14002352a:	inc    rbx
   14002352d:	mov    r12d,ebx
   140023530:	sub    r12d,r14d
   140023533:	cmp    BYTE PTR [rbp+0x60],0x1
   140023537:	jne    0x14002380e
   14002353d:	test   r12d,r12d
   140023540:	je     0x14002380e
   140023546:	dec    rbx
   140023549:	test   BYTE PTR [rbx],0x80
   14002354c:	jne    0x140023556
   14002354e:	inc    rbx
   140023551:	jmp    0x140023607
   140023556:	mov    edx,0x1
   14002355b:	jmp    0x14002356c
   14002355d:	cmp    edx,0x4
   140023560:	jg     0x140023579
   140023562:	cmp    rbx,r14
   140023565:	jb     0x140023579
   140023567:	dec    rbx
   14002356a:	inc    edx
   14002356c:	movzx  eax,BYTE PTR [rbx]
   14002356f:	cmp    BYTE PTR [rax+r8*1+0x40e50],dil
   140023577:	je     0x14002355d
   140023579:	movzx  ecx,BYTE PTR [rbx]
   14002357c:	movsx  eax,BYTE PTR [rcx+r8*1+0x40e50]
   140023585:	test   eax,eax
   140023587:	jne    0x14002359c
   140023589:	call   0x14001583c
   14002358e:	mov    DWORD PTR [rax],0x2a
   140023594:	or     ebx,0xffffffff
   140023597:	jmp    0x140023811
   14002359c:	inc    eax
   14002359e:	cmp    eax,edx
   1400235a0:	jne    0x1400235aa
   1400235a2:	movsxd rax,edx
   1400235a5:	add    rbx,rax
   1400235a8:	jmp    0x140023607
   1400235aa:	mov    rax,QWORD PTR [r8+r15*8+0x56620]
   1400235b2:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400235b7:	je     0x1400235f4
   1400235b9:	inc    rbx
   1400235bc:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   1400235c0:	cmp    edx,0x2
   1400235c3:	jl     0x1400235d6
   1400235c5:	mov    al,BYTE PTR [rbx]
   1400235c7:	mov    rcx,QWORD PTR [r8+r15*8+0x56620]
   1400235cf:	inc    rbx
   1400235d2:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   1400235d6:	cmp    edx,0x3
   1400235d9:	jne    0x1400235ec
   1400235db:	mov    al,BYTE PTR [rbx]
   1400235dd:	mov    rcx,QWORD PTR [r8+r15*8+0x56620]
   1400235e5:	inc    rbx
   1400235e8:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   1400235ec:	movsxd rax,edx
   1400235ef:	sub    rbx,rax
   1400235f2:	jmp    0x140023607
   1400235f4:	mov    ecx,DWORD PTR [rbp+0x48]
   1400235f7:	neg    edx
   1400235f9:	mov    r8d,0x1
   1400235ff:	movsxd rdx,edx
   140023602:	call   0x140022e60
   140023607:	mov    eax,DWORD PTR [rbp-0x1c]
   14002360a:	mov    r13,QWORD PTR [rbp+0x50]
   14002360e:	sub    ebx,r14d
   140023611:	shr    eax,1
   140023613:	mov    r9d,ebx
   140023616:	mov    r8,r14
   140023619:	mov    DWORD PTR [rsp+0x28],eax
   14002361d:	xor    edx,edx
   14002361f:	mov    ecx,0xfde9
   140023624:	mov    QWORD PTR [rsp+0x20],r13
   140023629:	call   QWORD PTR [rip+0xbc41]        # 0x14002f270
   14002362f:	mov    r12d,eax
   140023632:	test   eax,eax
   140023634:	jne    0x14002364b
   140023636:	call   QWORD PTR [rip+0xba74]        # 0x14002f0b0
   14002363c:	mov    ecx,eax
   14002363e:	call   0x14001587c
   140023643:	or     ebx,0xffffffff
   140023646:	jmp    0x140023815
   14002364b:	cmp    eax,ebx
   14002364d:	mov    ebx,DWORD PTR [rbp-0x20]
   140023650:	lea    rax,[rip+0xfffffffffffdc9a9]        # 0x140000000
   140023657:	mov    rax,QWORD PTR [rax+r15*8+0x56620]
   14002365f:	setne  dil
   140023663:	add    r12d,r12d
   140023666:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   14002366a:	jmp    0x140023815
   14002366f:	test   edx,edx
   140023671:	mov    edx,0xa
   140023676:	je     0x140023685
   140023678:	cmp    WORD PTR [r14],dx
   14002367c:	jne    0x140023685
   14002367e:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   140023683:	jmp    0x14002368a
   140023685:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   14002368a:	movsxd rax,r12d
   14002368d:	mov    rbx,r14
   140023690:	mov    r13,r14
   140023693:	add    rax,r14
   140023696:	mov    QWORD PTR [rbp+0x60],rax
   14002369a:	cmp    r14,rax
   14002369d:	jae    0x140023808
   1400236a3:	mov    r12d,0xd
   1400236a9:	movzx  eax,WORD PTR [r13+0x0]
   1400236ae:	cmp    ax,0x1a
   1400236b2:	je     0x1400237e6
   1400236b8:	cmp    ax,r12w
   1400236bc:	je     0x1400236ce
   1400236be:	mov    WORD PTR [rbx],ax
   1400236c1:	add    rbx,0x2
   1400236c5:	add    r13,0x2
   1400236c9:	jmp    0x1400237da
   1400236ce:	mov    rax,QWORD PTR [rbp+0x60]
   1400236d2:	add    rax,0xfffffffffffffffe
   1400236d6:	cmp    r13,rax
   1400236d9:	jae    0x1400236f5
   1400236db:	lea    rax,[r13+0x2]
   1400236df:	cmp    WORD PTR [rax],dx
   1400236e2:	jne    0x1400236ed
   1400236e4:	add    r13,0x4
   1400236e8:	jmp    0x14002379a
   1400236ed:	mov    r13,rax
   1400236f0:	jmp    0x1400237d2
   1400236f5:	mov    rcx,QWORD PTR [r8+r15*8+0x56620]
   1400236fd:	lea    r9,[rbp-0x24]
   140023701:	lea    rdx,[rbp-0x28]
   140023705:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140023709:	mov    r8d,0x2
   14002370f:	add    r13,0x2
   140023713:	mov    QWORD PTR [rsp+0x20],rdi
   140023718:	call   QWORD PTR [rip+0xb912]        # 0x14002f030
   14002371e:	test   eax,eax
   140023720:	jne    0x140023730
   140023722:	call   QWORD PTR [rip+0xb988]        # 0x14002f0b0
   140023728:	test   eax,eax
   14002372a:	jne    0x1400237c6
   140023730:	cmp    DWORD PTR [rbp-0x24],edi
   140023733:	je     0x1400237c6
   140023739:	lea    r8,[rip+0xfffffffffffdc8c0]        # 0x140000000
   140023740:	mov    rax,QWORD PTR [r8+r15*8+0x56620]
   140023748:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14002374d:	je     0x14002378a
   14002374f:	mov    edx,0xa
   140023754:	cmp    WORD PTR [rbp-0x28],dx
   140023758:	je     0x14002379a
   14002375a:	mov    WORD PTR [rbx],r12w
   14002375e:	mov    al,BYTE PTR [rbp-0x28]
   140023761:	mov    rcx,QWORD PTR [r8+r15*8+0x56620]
   140023769:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   14002376d:	mov    al,BYTE PTR [rbp-0x27]
   140023770:	mov    rcx,QWORD PTR [r8+r15*8+0x56620]
   140023778:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14002377c:	mov    rax,QWORD PTR [r8+r15*8+0x56620]
   140023784:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   140023788:	jmp    0x1400237d6
   14002378a:	cmp    rbx,r14
   14002378d:	jne    0x14002379f
   14002378f:	mov    edx,0xa
   140023794:	cmp    WORD PTR [rbp-0x28],dx
   140023798:	jne    0x14002379f
   14002379a:	mov    WORD PTR [rbx],dx
   14002379d:	jmp    0x1400237d6
   14002379f:	mov    ecx,DWORD PTR [rbp+0x48]
   1400237a2:	mov    rdx,0xfffffffffffffffe
   1400237a9:	lea    r8d,[rdx+0x3]
   1400237ad:	call   0x140022e60
   1400237b2:	mov    edx,0xa
   1400237b7:	lea    r8,[rip+0xfffffffffffdc842]        # 0x140000000
   1400237be:	cmp    WORD PTR [rbp-0x28],dx
   1400237c2:	je     0x1400237da
   1400237c4:	jmp    0x1400237d2
   1400237c6:	mov    edx,0xa
   1400237cb:	lea    r8,[rip+0xfffffffffffdc82e]        # 0x140000000
   1400237d2:	mov    WORD PTR [rbx],r12w
   1400237d6:	add    rbx,0x2
   1400237da:	cmp    r13,QWORD PTR [rbp+0x60]
   1400237de:	jb     0x1400236a9
   1400237e4:	jmp    0x140023808
   1400237e6:	mov    rax,QWORD PTR [r8+r15*8+0x56620]
   1400237ee:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   1400237f3:	jne    0x1400237fc
   1400237f5:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   1400237fa:	jmp    0x140023808
   1400237fc:	movzx  eax,WORD PTR [r13+0x0]
   140023801:	mov    WORD PTR [rbx],ax
   140023804:	add    rbx,0x2
   140023808:	mov    r12d,ebx
   14002380b:	sub    r12d,r14d
   14002380e:	mov    ebx,DWORD PTR [rbp-0x20]
   140023811:	mov    r13,QWORD PTR [rbp+0x50]
   140023815:	cmp    r14,r13
   140023818:	je     0x140023822
   14002381a:	mov    rcx,r14
   14002381d:	call   0x1400130a8
   140023822:	cmp    ebx,0xfffffffe
   140023825:	cmove  ebx,r12d
   140023829:	mov    eax,ebx
   14002382b:	jmp    0x140023886
   14002382d:	call   QWORD PTR [rip+0xb87d]        # 0x14002f0b0
   140023833:	cmp    eax,0x5
   140023836:	jne    0x140023853
   140023838:	call   0x14001583c
   14002383d:	mov    DWORD PTR [rax],0x9
   140023843:	call   0x14001585c
   140023848:	mov    DWORD PTR [rax],0x5
   14002384e:	jmp    0x140023594
   140023853:	cmp    eax,0x6d
   140023856:	jne    0x14002385c
   140023858:	mov    ebx,edi
   14002385a:	jmp    0x140023811
   14002385c:	mov    ecx,eax
   14002385e:	call   0x14001587c
   140023863:	jmp    0x140023594
   140023868:	xor    eax,eax
   14002386a:	jmp    0x140023886
   14002386c:	call   0x14001585c
   140023871:	mov    DWORD PTR [rax],edi
   140023873:	call   0x14001583c
   140023878:	mov    DWORD PTR [rax],0x9
   14002387e:	call   0x140019f74
   140023883:	or     eax,0xffffffff
   140023886:	add    rsp,0x58
   14002388a:	pop    r15
   14002388c:	pop    r14
   14002388e:	pop    r13
   140023890:	pop    r12
   140023892:	pop    rdi
   140023893:	pop    rsi
   140023894:	pop    rbx
   140023895:	pop    rbp
   140023896:	ret    
   140023897:	int3   
   140023898:	mov    QWORD PTR [rsp+0x10],rbx
   14002389d:	mov    QWORD PTR [rsp+0x18],rsi
   1400238a2:	mov    DWORD PTR [rsp+0x8],ecx
   1400238a6:	push   rdi
   1400238a7:	push   r12
   1400238a9:	push   r13
   1400238ab:	push   r14
   1400238ad:	push   r15
   1400238af:	sub    rsp,0x20
   1400238b3:	mov    esi,r8d
   1400238b6:	mov    r13,rdx
   1400238b9:	movsxd rdi,ecx
   1400238bc:	cmp    edi,0xfffffffe
   1400238bf:	jne    0x1400238da
   1400238c1:	call   0x14001585c
   1400238c6:	xor    ebx,ebx
   1400238c8:	mov    DWORD PTR [rax],ebx
   1400238ca:	call   0x14001583c
   1400238cf:	mov    DWORD PTR [rax],0x9
   1400238d5:	jmp    0x140023998
   1400238da:	xor    ebx,ebx
   1400238dc:	test   ecx,ecx
   1400238de:	js     0x140023981
   1400238e4:	cmp    edi,DWORD PTR [rip+0x32d1a]        # 0x140056604
   1400238ea:	jae    0x140023981
   1400238f0:	mov    r12,rdi
   1400238f3:	mov    r14,rdi
   1400238f6:	sar    r14,0x5
   1400238fa:	lea    r15,[rip+0x32d1f]        # 0x140056620
   140023901:	and    r12d,0x1f
   140023905:	imul   r12,r12,0x58
   140023909:	mov    rax,QWORD PTR [r15+r14*8]
   14002390d:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   140023913:	and    ecx,0x1
   140023916:	je     0x140023981
   140023918:	mov    eax,ebx
   14002391a:	cmp    r8d,0x7fffffff
   140023921:	setbe  al
   140023924:	test   eax,eax
   140023926:	jne    0x14002393c
   140023928:	call   0x14001585c
   14002392d:	mov    DWORD PTR [rax],ebx
   14002392f:	call   0x14001583c
   140023934:	mov    DWORD PTR [rax],0x16
   14002393a:	jmp    0x140023993
   14002393c:	mov    ecx,edi
   14002393e:	call   0x140022628
   140023943:	nop
   140023944:	mov    rax,QWORD PTR [r15+r14*8]
   140023948:	test   BYTE PTR [rax+r12*1+0x8],0x1
   14002394e:	je     0x140023961
   140023950:	mov    r8d,esi
   140023953:	mov    rdx,r13
   140023956:	mov    ecx,edi
   140023958:	call   0x140023174
   14002395d:	mov    ebx,eax
   14002395f:	jmp    0x140023976
   140023961:	call   0x14001583c
   140023966:	mov    DWORD PTR [rax],0x9
   14002396c:	call   0x14001585c
   140023971:	mov    DWORD PTR [rax],ebx
   140023973:	or     ebx,0xffffffff
   140023976:	mov    ecx,edi
   140023978:	call   0x1400226d0
   14002397d:	mov    eax,ebx
   14002397f:	jmp    0x14002399b
   140023981:	call   0x14001585c
   140023986:	mov    DWORD PTR [rax],ebx
   140023988:	call   0x14001583c
   14002398d:	mov    DWORD PTR [rax],0x9
   140023993:	call   0x140019f74
   140023998:	or     eax,0xffffffff
   14002399b:	mov    rbx,QWORD PTR [rsp+0x58]
   1400239a0:	mov    rsi,QWORD PTR [rsp+0x60]
   1400239a5:	add    rsp,0x20
   1400239a9:	pop    r15
   1400239ab:	pop    r14
   1400239ad:	pop    r13
   1400239af:	pop    r12
   1400239b1:	pop    rdi
   1400239b2:	ret    
   1400239b3:	int3   
   1400239b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400239b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400239be:	push   rdi
   1400239bf:	sub    rsp,0x20
   1400239c3:	movsxd rbx,ecx
   1400239c6:	mov    edi,r8d
   1400239c9:	mov    esi,edx
   1400239cb:	mov    ecx,ebx
   1400239cd:	call   0x1400225b4
   1400239d2:	cmp    rax,0xffffffffffffffff
   1400239d6:	jne    0x1400239e8
   1400239d8:	call   0x14001583c
   1400239dd:	mov    DWORD PTR [rax],0x9
   1400239e3:	or     eax,0xffffffff
   1400239e6:	jmp    0x140023a3a
   1400239e8:	mov    r9d,edi
   1400239eb:	xor    r8d,r8d
   1400239ee:	mov    edx,esi
   1400239f0:	mov    rcx,rax
   1400239f3:	call   QWORD PTR [rip+0xb787]        # 0x14002f180
   1400239f9:	mov    edi,eax
   1400239fb:	cmp    eax,0xffffffff
   1400239fe:	jne    0x140023a08
   140023a00:	call   QWORD PTR [rip+0xb6aa]        # 0x14002f0b0
   140023a06:	jmp    0x140023a0a
   140023a08:	xor    eax,eax
   140023a0a:	test   eax,eax
   140023a0c:	je     0x140023a17
   140023a0e:	mov    ecx,eax
   140023a10:	call   0x14001587c
   140023a15:	jmp    0x1400239e3
   140023a17:	mov    rcx,rbx
   140023a1a:	mov    rax,rbx
   140023a1d:	lea    rdx,[rip+0x32bfc]        # 0x140056620
   140023a24:	sar    rax,0x5
   140023a28:	and    ecx,0x1f
   140023a2b:	mov    rax,QWORD PTR [rdx+rax*8]
   140023a2f:	imul   rcx,rcx,0x58
   140023a33:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140023a38:	mov    eax,edi
   140023a3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140023a3f:	mov    rsi,QWORD PTR [rsp+0x38]
   140023a44:	add    rsp,0x20
   140023a48:	pop    rdi
   140023a49:	ret    
   140023a4a:	int3   
   140023a4b:	int3   
   140023a4c:	mov    QWORD PTR [rsp+0x8],rbx
   140023a51:	movsxd r8,ecx
   140023a54:	lea    rbx,[rip+0x32bc5]        # 0x140056620
   140023a5b:	mov    r9,r8
   140023a5e:	and    r8d,0x1f
   140023a62:	sar    r9,0x5
   140023a66:	imul   r8,r8,0x58
   140023a6a:	mov    rcx,QWORD PTR [rbx+r9*8]
   140023a6e:	mov    al,BYTE PTR [rcx+r8*1+0x38]
   140023a73:	movzx  r11d,BYTE PTR [rcx+r8*1+0x8]
   140023a79:	add    al,al
   140023a7b:	and    r11d,0x80
   140023a82:	movsx  r10d,al
   140023a86:	sar    r10d,1
   140023a89:	cmp    edx,0x4000
   140023a8f:	je     0x140023ae9
   140023a91:	cmp    edx,0x8000
   140023a97:	je     0x140023ae1
   140023a99:	cmp    edx,0x10000
   140023a9f:	je     0x140023ac9
   140023aa1:	cmp    edx,0x20000
   140023aa7:	je     0x140023ac9
   140023aa9:	cmp    edx,0x40000
   140023aaf:	jne    0x140023af9
   140023ab1:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140023ab7:	mov    rax,QWORD PTR [rbx+r9*8]
   140023abb:	and    BYTE PTR [rax+r8*1+0x38],0x81
   140023ac1:	or     BYTE PTR [rax+r8*1+0x38],0x1
   140023ac7:	jmp    0x140023af9
   140023ac9:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140023acf:	mov    rax,QWORD PTR [rbx+r9*8]
   140023ad3:	and    BYTE PTR [rax+r8*1+0x38],0x82
   140023ad9:	or     BYTE PTR [rax+r8*1+0x38],0x2
   140023adf:	jmp    0x140023af9
   140023ae1:	and    BYTE PTR [rcx+r8*1+0x8],0x7f
   140023ae7:	jmp    0x140023af9
   140023ae9:	or     BYTE PTR [rcx+r8*1+0x8],0x80
   140023aef:	mov    rcx,QWORD PTR [rbx+r9*8]
   140023af3:	and    BYTE PTR [rcx+r8*1+0x38],0x80
   140023af9:	test   r11d,r11d
   140023afc:	jne    0x140023b05
   140023afe:	mov    eax,0x8000
   140023b03:	jmp    0x140023b14
   140023b05:	neg    r10d
   140023b08:	sbb    eax,eax
   140023b0a:	and    eax,0xc000
   140023b0f:	add    eax,0x4000
   140023b14:	mov    rbx,QWORD PTR [rsp+0x8]
   140023b19:	ret    
   140023b1a:	int3   
   140023b1b:	int3   
   140023b1c:	sub    rsp,0x28
   140023b20:	test   rcx,rcx
   140023b23:	jne    0x140023b3c
   140023b25:	call   0x14001583c
   140023b2a:	mov    DWORD PTR [rax],0x16
   140023b30:	call   0x140019f74
   140023b35:	mov    eax,0x16
   140023b3a:	jmp    0x140023b46
   140023b3c:	mov    eax,DWORD PTR [rip+0x32a32]        # 0x140056574
   140023b42:	mov    DWORD PTR [rcx],eax
   140023b44:	xor    eax,eax
   140023b46:	add    rsp,0x28
   140023b4a:	ret    
   140023b4b:	int3   
   140023b4c:	mov    QWORD PTR [rsp+0x8],rbx
   140023b51:	mov    QWORD PTR [rsp+0x10],rsi
   140023b56:	mov    QWORD PTR [rsp+0x18],rdi
   140023b5b:	push   rbp
   140023b5c:	push   r12
   140023b5e:	push   r13
   140023b60:	mov    rbp,rsp
   140023b63:	sub    rsp,0x50
   140023b67:	xor    ebx,ebx
   140023b69:	mov    r12,r8
   140023b6c:	mov    r13,rcx
   140023b6f:	mov    rsi,rdx
   140023b72:	lea    rcx,[rbp-0x28]
   140023b76:	lea    r8d,[rbx+0x28]
   140023b7a:	xor    edx,edx
   140023b7c:	mov    rdi,r9
   140023b7f:	mov    QWORD PTR [rbp-0x30],rbx
   140023b83:	call   0x140012fb0
   140023b88:	test   rdi,rdi
   140023b8b:	jne    0x140023ba2
   140023b8d:	call   0x14001583c
   140023b92:	mov    DWORD PTR [rax],0x16
   140023b98:	call   0x140019f74
   140023b9d:	or     eax,0xffffffff
   140023ba0:	jmp    0x140023c18
   140023ba2:	test   r12,r12
   140023ba5:	je     0x140023bac
   140023ba7:	test   rsi,rsi
   140023baa:	je     0x140023b8d
   140023bac:	mov    r9,QWORD PTR [rbp+0x48]
   140023bb0:	mov    r8,QWORD PTR [rbp+0x40]
   140023bb4:	mov    ecx,0x7fffffff
   140023bb9:	cmp    r12,rcx
   140023bbc:	mov    eax,r12d
   140023bbf:	mov    rdx,rdi
   140023bc2:	cmova  eax,ecx
   140023bc5:	lea    rcx,[rbp-0x30]
   140023bc9:	mov    DWORD PTR [rbp-0x18],0x42
   140023bd0:	mov    QWORD PTR [rbp-0x20],rsi
   140023bd4:	mov    QWORD PTR [rbp-0x30],rsi
   140023bd8:	mov    DWORD PTR [rbp-0x28],eax
   140023bdb:	call   r13
   140023bde:	mov    edi,eax
   140023be0:	test   rsi,rsi
   140023be3:	je     0x140023c18
   140023be5:	test   eax,eax
   140023be7:	js     0x140023c0a
   140023be9:	dec    DWORD PTR [rbp-0x28]
   140023bec:	js     0x140023bf6
   140023bee:	mov    rax,QWORD PTR [rbp-0x30]
   140023bf2:	mov    BYTE PTR [rax],bl
   140023bf4:	jmp    0x140023c06
   140023bf6:	lea    rdx,[rbp-0x30]
   140023bfa:	xor    ecx,ecx
   140023bfc:	call   0x14001e4a4
   140023c01:	cmp    eax,0xffffffff
   140023c04:	je     0x140023c0a
   140023c06:	mov    eax,edi
   140023c08:	jmp    0x140023c18
   140023c0a:	cmp    DWORD PTR [rbp-0x28],ebx
   140023c0d:	mov    BYTE PTR [rsi+r12*1-0x1],bl
   140023c12:	setge  bl
   140023c15:	lea    eax,[rbx-0x2]
   140023c18:	lea    r11,[rsp+0x50]
   140023c1d:	mov    rbx,QWORD PTR [r11+0x20]
   140023c21:	mov    rsi,QWORD PTR [r11+0x28]
   140023c25:	mov    rdi,QWORD PTR [r11+0x30]
   140023c29:	mov    rsp,r11
   140023c2c:	pop    r13
   140023c2e:	pop    r12
   140023c30:	pop    rbp
   140023c31:	ret    
   140023c32:	int3   
   140023c33:	int3   
   140023c34:	mov    rax,rsp
   140023c37:	mov    QWORD PTR [rax+0x8],rbx
   140023c3b:	mov    QWORD PTR [rax+0x10],rbp
   140023c3f:	mov    QWORD PTR [rax+0x18],rsi
   140023c43:	mov    QWORD PTR [rax+0x20],rdi
   140023c47:	push   r12
   140023c49:	sub    rsp,0x30
   140023c4d:	mov    rbp,r9
   140023c50:	mov    rsi,r8
   140023c53:	mov    rbx,rdx
   140023c56:	mov    rdi,rcx
   140023c59:	test   r9,r9
   140023c5c:	je     0x140023d4e
   140023c62:	test   r8,r8
   140023c65:	jne    0x140023c7c
   140023c67:	test   rcx,rcx
   140023c6a:	jne    0x140023c85
   140023c6c:	test   rdx,rdx
   140023c6f:	jne    0x140023d4e
   140023c75:	xor    eax,eax
   140023c77:	jmp    0x140023d61
   140023c7c:	test   rcx,rcx
   140023c7f:	je     0x140023d4e
   140023c85:	test   rdx,rdx
   140023c88:	je     0x140023d4e
   140023c8e:	cmp    rdx,r8
   140023c91:	jbe    0x140023ce0
   140023c93:	call   0x14001583c
   140023c98:	lea    r8,[rsi+0x1]
   140023c9c:	lea    rcx,[rip+0x3fd1]        # 0x140027c74
   140023ca3:	mov    ebx,DWORD PTR [rax]
   140023ca5:	mov    rax,QWORD PTR [rsp+0x68]
   140023caa:	mov    r9,rbp
   140023cad:	mov    QWORD PTR [rsp+0x28],rax
   140023cb2:	mov    rax,QWORD PTR [rsp+0x60]
   140023cb7:	mov    rdx,rdi
   140023cba:	mov    QWORD PTR [rsp+0x20],rax
   140023cbf:	call   0x140023b4c
   140023cc4:	cmp    eax,0xfffffffe
   140023cc7:	jne    0x140023d35
   140023cc9:	call   0x14001583c
   140023cce:	cmp    DWORD PTR [rax],0x22
   140023cd1:	jne    0x140023d5e
   140023cd7:	call   0x14001583c
   140023cdc:	mov    DWORD PTR [rax],ebx
   140023cde:	jmp    0x140023d5e
   140023ce0:	call   0x14001583c
   140023ce5:	lea    rcx,[rip+0x3f88]        # 0x140027c74
   140023cec:	mov    r9,rbp
   140023cef:	mov    r12d,DWORD PTR [rax]
   140023cf2:	mov    rax,QWORD PTR [rsp+0x68]
   140023cf7:	mov    r8,rbx
   140023cfa:	mov    QWORD PTR [rsp+0x28],rax
   140023cff:	mov    rax,QWORD PTR [rsp+0x60]
   140023d04:	mov    rdx,rdi
   140023d07:	mov    QWORD PTR [rsp+0x20],rax
   140023d0c:	call   0x140023b4c
   140023d11:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140023d16:	cmp    eax,0xfffffffe
   140023d19:	jne    0x140023d35
   140023d1b:	cmp    rsi,0xffffffffffffffff
   140023d1f:	jne    0x140023d39
   140023d21:	call   0x14001583c
   140023d26:	cmp    DWORD PTR [rax],0x22
   140023d29:	jne    0x140023d5e
   140023d2b:	call   0x14001583c
   140023d30:	mov    DWORD PTR [rax],r12d
   140023d33:	jmp    0x140023d5e
   140023d35:	test   eax,eax
   140023d37:	jns    0x140023d61
   140023d39:	mov    BYTE PTR [rdi],0x0
   140023d3c:	cmp    eax,0xfffffffe
   140023d3f:	jne    0x140023d5e
   140023d41:	call   0x14001583c
   140023d46:	mov    DWORD PTR [rax],0x22
   140023d4c:	jmp    0x140023d59
   140023d4e:	call   0x14001583c
   140023d53:	mov    DWORD PTR [rax],0x16
   140023d59:	call   0x140019f74
   140023d5e:	or     eax,0xffffffff
   140023d61:	mov    rbx,QWORD PTR [rsp+0x40]
   140023d66:	mov    rbp,QWORD PTR [rsp+0x48]
   140023d6b:	mov    rsi,QWORD PTR [rsp+0x50]
   140023d70:	mov    rdi,QWORD PTR [rsp+0x58]
   140023d75:	add    rsp,0x30
   140023d79:	pop    r12
   140023d7b:	ret    
   140023d7c:	mov    QWORD PTR [rsp+0x8],rbx
   140023d81:	mov    QWORD PTR [rsp+0x10],rsi
   140023d86:	push   rdi
   140023d87:	sub    rsp,0x20
   140023d8b:	mov    rdi,rcx
   140023d8e:	test   rcx,rcx
   140023d91:	jne    0x140023da8
   140023d93:	call   0x14001583c
   140023d98:	mov    DWORD PTR [rax],0x16
   140023d9e:	call   0x140019f74
   140023da3:	jmp    0x140023ebb
   140023da8:	mov    eax,DWORD PTR [rcx+0x18]
   140023dab:	test   al,0x83
   140023dad:	je     0x140023ebb
   140023db3:	test   al,0x40
   140023db5:	jne    0x140023ebb
   140023dbb:	test   al,0x2
   140023dbd:	je     0x140023dca
   140023dbf:	or     eax,0x20
   140023dc2:	mov    DWORD PTR [rcx+0x18],eax
   140023dc5:	jmp    0x140023ebb
   140023dca:	or     eax,0x1
   140023dcd:	mov    DWORD PTR [rcx+0x18],eax
   140023dd0:	test   eax,0x10c
   140023dd5:	jne    0x140023dde
   140023dd7:	call   0x140028e38
   140023ddc:	jmp    0x140023de5
   140023dde:	mov    rax,QWORD PTR [rcx+0x10]
   140023de2:	mov    QWORD PTR [rcx],rax
   140023de5:	mov    rcx,rdi
   140023de8:	call   0x1400211a0
   140023ded:	mov    r8d,DWORD PTR [rdi+0x24]
   140023df1:	mov    rdx,QWORD PTR [rdi+0x10]
   140023df5:	mov    ecx,eax
   140023df7:	call   0x140023898
   140023dfc:	mov    DWORD PTR [rdi+0x8],eax
   140023dff:	test   eax,eax
   140023e01:	je     0x140023eaa
   140023e07:	cmp    eax,0xffffffff
   140023e0a:	je     0x140023eaa
   140023e10:	test   BYTE PTR [rdi+0x18],0x82
   140023e14:	jne    0x140023e75
   140023e16:	mov    rcx,rdi
   140023e19:	call   0x1400211a0
   140023e1e:	cmp    eax,0xffffffff
   140023e21:	je     0x140023e5f
   140023e23:	mov    rcx,rdi
   140023e26:	call   0x1400211a0
   140023e2b:	cmp    eax,0xfffffffe
   140023e2e:	je     0x140023e5f
   140023e30:	mov    rcx,rdi
   140023e33:	call   0x1400211a0
   140023e38:	mov    rcx,rdi
   140023e3b:	lea    rsi,[rip+0x327de]        # 0x140056620
   140023e42:	movsxd rbx,eax
   140023e45:	sar    rbx,0x5
   140023e49:	call   0x1400211a0
   140023e4e:	mov    r11d,eax
   140023e51:	and    r11d,0x1f
   140023e55:	imul   r11,r11,0x58
   140023e59:	add    r11,QWORD PTR [rsi+rbx*8]
   140023e5d:	jmp    0x140023e66
   140023e5f:	lea    r11,[rip+0x1cdfa]        # 0x140040c60
   140023e66:	mov    al,BYTE PTR [r11+0x8]
   140023e6a:	and    al,0x82
   140023e6c:	cmp    al,0x82
   140023e6e:	jne    0x140023e75
   140023e70:	bts    DWORD PTR [rdi+0x18],0xd
   140023e75:	cmp    DWORD PTR [rdi+0x24],0x200
   140023e7c:	jne    0x140023e99
   140023e7e:	test   BYTE PTR [rdi+0x18],0x8
   140023e82:	je     0x140023e99
   140023e84:	mov    eax,DWORD PTR [rdi+0x24]
   140023e87:	test   DWORD PTR [rdi+0x18],0x400
   140023e8e:	mov    ecx,0x1000
   140023e93:	cmove  eax,ecx
   140023e96:	mov    DWORD PTR [rdi+0x24],eax
   140023e99:	mov    rcx,QWORD PTR [rdi]
   140023e9c:	dec    DWORD PTR [rdi+0x8]
   140023e9f:	movzx  eax,BYTE PTR [rcx]
   140023ea2:	inc    rcx
   140023ea5:	mov    QWORD PTR [rdi],rcx
   140023ea8:	jmp    0x140023ebe
   140023eaa:	neg    eax
   140023eac:	sbb    eax,eax
   140023eae:	and    eax,0x10
   140023eb1:	add    eax,0x10
   140023eb4:	or     DWORD PTR [rdi+0x18],eax
   140023eb7:	and    DWORD PTR [rdi+0x8],0x0
   140023ebb:	or     eax,0xffffffff
   140023ebe:	mov    rbx,QWORD PTR [rsp+0x30]
   140023ec3:	mov    rsi,QWORD PTR [rsp+0x38]
   140023ec8:	add    rsp,0x20
   140023ecc:	pop    rdi
   140023ecd:	ret    
   140023ece:	int3   
   140023ecf:	int3   
   140023ed0:	rex push rbx
   140023ed2:	sub    rsp,0x30
   140023ed6:	mov    rbx,rcx
   140023ed9:	mov    ecx,0xe
   140023ede:	call   0x14001ccc8
   140023ee3:	nop
   140023ee4:	mov    rax,QWORD PTR [rbx+0x8]
   140023ee8:	test   rax,rax
   140023eeb:	je     0x140023f2c
   140023eed:	mov    rcx,QWORD PTR [rip+0x32434]        # 0x140056328
   140023ef4:	lea    rdx,[rip+0x32425]        # 0x140056320
   140023efb:	mov    QWORD PTR [rsp+0x20],rcx
   140023f00:	test   rcx,rcx
   140023f03:	je     0x140023f1e
   140023f05:	cmp    QWORD PTR [rcx],rax
   140023f08:	jne    0x140023f19
   140023f0a:	mov    rax,QWORD PTR [rcx+0x8]
   140023f0e:	mov    QWORD PTR [rdx+0x8],rax
   140023f12:	call   0x1400130a8
   140023f17:	jmp    0x140023f1e
   140023f19:	mov    rdx,rcx
   140023f1c:	jmp    0x140023efb
   140023f1e:	mov    rcx,QWORD PTR [rbx+0x8]
   140023f22:	call   0x1400130a8
   140023f27:	and    QWORD PTR [rbx+0x8],0x0
   140023f2c:	mov    ecx,0xe
   140023f31:	call   0x14001cbc8
   140023f36:	add    rsp,0x30
   140023f3a:	pop    rbx
   140023f3b:	ret    
   140023f3c:	int3   
   140023f3d:	int3   
   140023f3e:	int3   
   140023f3f:	int3   
   140023f40:	int3   
   140023f41:	int3   
   140023f42:	int3   
   140023f43:	int3   
   140023f44:	int3   
   140023f45:	int3   
   140023f46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140023f50:	sub    rdx,rcx
   140023f53:	mov    r9,rdx
   140023f56:	test   cl,0x7
   140023f59:	je     0x140023f76
   140023f5b:	mov    al,BYTE PTR [rcx]
   140023f5d:	mov    dl,BYTE PTR [rcx+r9*1]
   140023f61:	cmp    al,dl
   140023f63:	jne    0x140023fbb
   140023f65:	inc    rcx
   140023f68:	test   al,al
   140023f6a:	je     0x140023fc3
   140023f6c:	test   rcx,0x7
   140023f73:	jne    0x140023f5b
   140023f75:	nop
   140023f76:	movabs r11,0x8101010101010100
   140023f80:	lea    rdx,[rcx+r9*1]
   140023f84:	and    dx,0xfff
   140023f89:	cmp    dx,0xff8
   140023f8e:	ja     0x140023f5b
   140023f90:	mov    rax,QWORD PTR [rcx]
   140023f93:	mov    rdx,QWORD PTR [rcx+r9*1]
   140023f97:	cmp    rax,rdx
   140023f9a:	jne    0x140023f5b
   140023f9c:	movabs r10,0x7efefefefefefeff
   140023fa6:	add    r10,rdx
   140023fa9:	xor    rax,0xffffffffffffffff
   140023fad:	add    rcx,0x8
   140023fb1:	xor    rax,r10
   140023fb4:	test   r11,rax
   140023fb7:	je     0x140023f80
   140023fb9:	jmp    0x140023fca
   140023fbb:	sbb    rax,rax
   140023fbe:	sbb    rax,0xffffffffffffffff
   140023fc2:	ret    
   140023fc3:	xor    eax,eax
   140023fc5:	ret    
   140023fc6:	data16 data16 xchg ax,ax
   140023fca:	test   dl,dl
   140023fcc:	je     0x140023ff5
   140023fce:	test   dh,dh
   140023fd0:	je     0x140023ff5
   140023fd2:	shr    rdx,0x10
   140023fd6:	test   dl,dl
   140023fd8:	je     0x140023ff5
   140023fda:	test   dh,dh
   140023fdc:	je     0x140023ff5
   140023fde:	shr    rdx,0x10
   140023fe2:	test   dl,dl
   140023fe4:	je     0x140023ff5
   140023fe6:	test   dh,dh
   140023fe8:	je     0x140023ff5
   140023fea:	shr    edx,0x10
   140023fed:	test   dl,dl
   140023fef:	je     0x140023ff5
   140023ff1:	test   dh,dh
   140023ff3:	jne    0x140023f80
   140023ff5:	xor    eax,eax
   140023ff7:	ret    
   140023ff8:	sbb    rax,rax
   140023ffb:	sbb    rax,0xffffffffffffffff
   140023fff:	ret    
   140024000:	lea    rax,[rip+0xf059]        # 0x140033060
   140024007:	mov    QWORD PTR [rcx],rax
   14002400a:	mov    rax,QWORD PTR [rdx]
   14002400d:	mov    BYTE PTR [rcx+0x10],0x0
   140024011:	mov    QWORD PTR [rcx+0x8],rax
   140024015:	mov    rax,rcx
   140024018:	ret    
   140024019:	int3   
   14002401a:	int3   
   14002401b:	int3   
   14002401c:	cmp    QWORD PTR [rcx+0x8],0x0
   140024021:	lea    rax,[rip+0xf048]        # 0x140033070
   140024028:	cmovne rax,QWORD PTR [rcx+0x8]
   14002402d:	ret    
   14002402e:	int3   
   14002402f:	int3   
   140024030:	test   rdx,rdx
   140024033:	je     0x140024089
   140024035:	mov    QWORD PTR [rsp+0x8],rbx
   14002403a:	mov    QWORD PTR [rsp+0x10],rsi
   14002403f:	push   rdi
   140024040:	sub    rsp,0x20
   140024044:	mov    rdi,rcx
   140024047:	mov    rcx,rdx
   14002404a:	mov    rbx,rdx
   14002404d:	call   0x14001dae0
   140024052:	mov    rsi,rax
   140024055:	lea    rcx,[rax+0x1]
   140024059:	call   0x140013298
   14002405e:	mov    QWORD PTR [rdi+0x8],rax
   140024062:	test   rax,rax
   140024065:	je     0x14002407a
   140024067:	lea    rdx,[rsi+0x1]
   14002406b:	mov    r8,rbx
   14002406e:	mov    rcx,rax
   140024071:	call   0x14001dc7c
   140024076:	mov    BYTE PTR [rdi+0x10],0x1
   14002407a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002407f:	mov    rsi,QWORD PTR [rsp+0x38]
   140024084:	add    rsp,0x20
   140024088:	pop    rdi
   140024089:	ret    
   14002408a:	int3   
   14002408b:	int3   
   14002408c:	rex push rbx
   14002408e:	sub    rsp,0x20
   140024092:	cmp    BYTE PTR [rcx+0x10],0x0
   140024096:	mov    rbx,rcx
   140024099:	je     0x1400240a4
   14002409b:	mov    rcx,QWORD PTR [rcx+0x8]
   14002409f:	call   0x1400130a8
   1400240a4:	and    QWORD PTR [rbx+0x8],0x0
   1400240a9:	mov    BYTE PTR [rbx+0x10],0x0
   1400240ad:	add    rsp,0x20
   1400240b1:	pop    rbx
   1400240b2:	ret    
   1400240b3:	int3   
   1400240b4:	rex push rbx
   1400240b6:	sub    rsp,0x20
   1400240ba:	and    QWORD PTR [rcx+0x8],0x0
   1400240bf:	lea    rax,[rip+0xef9a]        # 0x140033060
   1400240c6:	mov    BYTE PTR [rcx+0x10],0x0
   1400240ca:	mov    QWORD PTR [rcx],rax
   1400240cd:	mov    rdx,QWORD PTR [rdx]
   1400240d0:	mov    rbx,rcx
   1400240d3:	call   0x140024030
   1400240d8:	mov    rax,rbx
   1400240db:	add    rsp,0x20
   1400240df:	pop    rbx
   1400240e0:	ret    
   1400240e1:	int3   
   1400240e2:	int3   
   1400240e3:	int3   
   1400240e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400240e9:	push   rdi
   1400240ea:	sub    rsp,0x20
   1400240ee:	mov    rdi,rdx
   1400240f1:	mov    rbx,rcx
   1400240f4:	cmp    rcx,rdx
   1400240f7:	je     0x14002411a
   1400240f9:	call   0x14002408c
   1400240fe:	cmp    BYTE PTR [rdi+0x10],0x0
   140024102:	je     0x140024112
   140024104:	mov    rdx,QWORD PTR [rdi+0x8]
   140024108:	mov    rcx,rbx
   14002410b:	call   0x140024030
   140024110:	jmp    0x14002411a
   140024112:	mov    rax,QWORD PTR [rdi+0x8]
   140024116:	mov    QWORD PTR [rbx+0x8],rax
   14002411a:	mov    rax,rbx
   14002411d:	mov    rbx,QWORD PTR [rsp+0x30]
   140024122:	add    rsp,0x20
   140024126:	pop    rdi
   140024127:	ret    
   140024128:	lea    rax,[rip+0xef31]        # 0x140033060
   14002412f:	mov    QWORD PTR [rcx],rax
   140024132:	jmp    0x14002408c
   140024137:	int3   
   140024138:	mov    QWORD PTR [rsp+0x8],rbx
   14002413d:	push   rdi
   14002413e:	sub    rsp,0x20
   140024142:	lea    rax,[rip+0xef17]        # 0x140033060
   140024149:	mov    ebx,edx
   14002414b:	mov    rdi,rcx
   14002414e:	mov    QWORD PTR [rcx],rax
   140024151:	call   0x14002408c
   140024156:	test   bl,0x1
   140024159:	je     0x140024163
   14002415b:	mov    rcx,rdi
   14002415e:	call   0x140016ae8
   140024163:	mov    rax,rdi
   140024166:	mov    rbx,QWORD PTR [rsp+0x30]
   14002416b:	add    rsp,0x20
   14002416f:	pop    rdi
   140024170:	ret    
   140024171:	int3   
   140024172:	int3   
   140024173:	int3   
   140024174:	rex push rbx
   140024176:	sub    rsp,0x20
   14002417a:	and    QWORD PTR [rcx+0x8],0x0
   14002417f:	lea    rax,[rip+0xeeda]        # 0x140033060
   140024186:	mov    rbx,rcx
   140024189:	mov    QWORD PTR [rcx],rax
   14002418c:	mov    BYTE PTR [rcx+0x10],0x0
   140024190:	call   0x1400240e4
   140024195:	mov    rax,rbx
   140024198:	add    rsp,0x20
   14002419c:	pop    rbx
   14002419d:	ret    
   14002419e:	int3   
   14002419f:	int3   
   1400241a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400241a5:	mov    QWORD PTR [rsp+0x18],rdi
   1400241aa:	push   rbp
   1400241ab:	mov    rbp,rsp
   1400241ae:	sub    rsp,0x60
   1400241b2:	mov    rdi,rdx
   1400241b5:	mov    rbx,rcx
   1400241b8:	lea    rcx,[rbp-0x40]
   1400241bc:	lea    rdx,[rip+0xeecd]        # 0x140033090
   1400241c3:	mov    r8d,0x40
   1400241c9:	call   0x140018e00
   1400241ce:	lea    rdx,[rbp+0x10]
   1400241d2:	mov    rcx,rdi
   1400241d5:	mov    QWORD PTR [rbp-0x18],rbx
   1400241d9:	mov    QWORD PTR [rbp-0x10],rdi
   1400241dd:	call   0x14002ac36
   1400241e2:	mov    r11,rax
   1400241e5:	mov    QWORD PTR [rbp+0x10],rax
   1400241e9:	mov    QWORD PTR [rbp-0x8],rax
   1400241ed:	test   rdi,rdi
   1400241f0:	je     0x14002420d
   1400241f2:	test   BYTE PTR [rdi],0x8
   1400241f5:	mov    ecx,0x1994000
   1400241fa:	je     0x140024201
   1400241fc:	mov    DWORD PTR [rbp-0x20],ecx
   1400241ff:	jmp    0x14002420d
   140024201:	mov    eax,DWORD PTR [rbp-0x20]
   140024204:	test   r11,r11
   140024207:	cmove  eax,ecx
   14002420a:	mov    DWORD PTR [rbp-0x20],eax
   14002420d:	mov    r8d,DWORD PTR [rbp-0x28]
   140024211:	mov    edx,DWORD PTR [rbp-0x3c]
   140024214:	mov    ecx,DWORD PTR [rbp-0x40]
   140024217:	lea    r9,[rbp-0x20]
   14002421b:	call   QWORD PTR [rip+0xafe7]        # 0x14002f208
   140024221:	lea    r11,[rsp+0x60]
   140024226:	mov    rbx,QWORD PTR [r11+0x18]
   14002422a:	mov    rdi,QWORD PTR [r11+0x20]
   14002422e:	mov    rsp,r11
   140024231:	pop    rbp
   140024232:	ret    
   140024233:	int3   
   140024234:	mov    QWORD PTR [rsp+0x8],rbx
   140024239:	mov    QWORD PTR [rsp+0x10],rbp
   14002423e:	mov    QWORD PTR [rsp+0x18],rsi
   140024243:	push   rdi
   140024244:	sub    rsp,0x20
   140024248:	mov    rbp,r8
   14002424b:	mov    rsi,rdx
   14002424e:	mov    rbx,rcx
   140024251:	test   rcx,rcx
   140024254:	jne    0x14002425b
   140024256:	call   0x14001dd20
   14002425b:	movsxd rax,DWORD PTR [rbx+0x18]
   14002425f:	mov    edi,DWORD PTR [rbx+0x14]
   140024262:	add    rax,QWORD PTR [rsi+0x8]
   140024266:	jne    0x14002426d
   140024268:	call   0x14001dd20
   14002426d:	xor    ecx,ecx
   14002426f:	test   edi,edi
   140024271:	je     0x1400242a6
   140024273:	mov    r9,QWORD PTR [rsi+0x8]
   140024277:	movsxd r8,DWORD PTR [rbx+0x18]
   14002427b:	lea    rdx,[r9+r8*1]
   14002427f:	movsxd rax,DWORD PTR [rdx]
   140024282:	add    rax,r9
   140024285:	cmp    rbp,rax
   140024288:	jl     0x140024294
   14002428a:	inc    ecx
   14002428c:	add    rdx,0x8
   140024290:	cmp    ecx,edi
   140024292:	jb     0x14002427f
   140024294:	test   ecx,ecx
   140024296:	je     0x1400242a6
   140024298:	lea    eax,[rcx-0x1]
   14002429b:	lea    rdx,[r8+rax*8]
   14002429f:	mov    eax,DWORD PTR [rdx+r9*1+0x4]
   1400242a4:	jmp    0x1400242a9
   1400242a6:	or     eax,0xffffffff
   1400242a9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400242ae:	mov    rbp,QWORD PTR [rsp+0x38]
   1400242b3:	mov    rsi,QWORD PTR [rsp+0x40]
   1400242b8:	add    rsp,0x20
   1400242bc:	pop    rdi
   1400242bd:	ret    
   1400242be:	int3   
   1400242bf:	int3   
   1400242c0:	mov    r8,QWORD PTR [rdx]
   1400242c3:	jmp    0x140024234
   1400242c8:	sub    rsp,0x28
   1400242cc:	movsxd r9,DWORD PTR [r8+0x1c]
   1400242d0:	mov    rax,QWORD PTR [rcx]
   1400242d3:	mov    r10,r8
   1400242d6:	mov    eax,DWORD PTR [r9+rax*1]
   1400242da:	cmp    eax,0xfffffffe
   1400242dd:	jne    0x1400242ea
   1400242df:	mov    r8,QWORD PTR [rdx]
   1400242e2:	mov    rcx,r10
   1400242e5:	call   0x140024234
   1400242ea:	add    rsp,0x28
   1400242ee:	ret    
   1400242ef:	int3   
   1400242f0:	movsxd rdx,DWORD PTR [r8+0x1c]
   1400242f4:	mov    rax,QWORD PTR [rcx]
   1400242f7:	mov    DWORD PTR [rdx+rax*1],r9d
   1400242fb:	ret    
   1400242fc:	mov    QWORD PTR [rsp+0x8],rbx
   140024301:	push   rdi
   140024302:	sub    rsp,0x20
   140024306:	mov    edi,r9d
   140024309:	lea    r9,[rsp+0x40]
   14002430e:	mov    rbx,r8
   140024311:	call   0x140016f88
   140024316:	mov    rcx,QWORD PTR [rax]
   140024319:	movsxd rax,DWORD PTR [rbx+0x1c]
   14002431d:	mov    QWORD PTR [rsp+0x40],rcx
   140024322:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   140024326:	jle    0x14002432c
   140024328:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14002432c:	mov    rbx,QWORD PTR [rsp+0x30]
   140024331:	add    rsp,0x20
   140024335:	pop    rdi
   140024336:	ret    
   140024337:	int3   
   140024338:	rex push rbx
   14002433a:	sub    rsp,0x20
   14002433e:	lea    r9,[rsp+0x40]
   140024343:	mov    rbx,r8
   140024346:	call   0x140016f88
   14002434b:	mov    rcx,QWORD PTR [rax]
   14002434e:	movsxd rax,DWORD PTR [rbx+0x1c]
   140024352:	mov    QWORD PTR [rsp+0x40],rcx
   140024357:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14002435b:	add    rsp,0x20
   14002435f:	pop    rbx
   140024360:	ret    
   140024361:	int3   
   140024362:	int3   
   140024363:	int3   
   140024364:	lea    rax,[rip+0xed75]        # 0x1400330e0
   14002436b:	mov    QWORD PTR [rcx],rax
   14002436e:	jmp    0x140024128
   140024373:	int3   
   140024374:	mov    QWORD PTR [rsp+0x8],rbx
   140024379:	push   rdi
   14002437a:	sub    rsp,0x20
   14002437e:	lea    rax,[rip+0xed5b]        # 0x1400330e0
   140024385:	mov    ebx,edx
   140024387:	mov    rdi,rcx
   14002438a:	mov    QWORD PTR [rcx],rax
   14002438d:	call   0x140024128
   140024392:	test   bl,0x1
   140024395:	je     0x14002439f
   140024397:	mov    rcx,rdi
   14002439a:	call   0x140016ae8
   14002439f:	mov    rax,rdi
   1400243a2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400243a7:	add    rsp,0x20
   1400243ab:	pop    rdi
   1400243ac:	ret    
   1400243ad:	int3   
   1400243ae:	int3   
   1400243af:	int3   
   1400243b0:	mov    rax,rsp
   1400243b3:	mov    QWORD PTR [rax+0x8],rbx
   1400243b7:	mov    QWORD PTR [rax+0x10],rbp
   1400243bb:	mov    QWORD PTR [rax+0x18],rsi
   1400243bf:	mov    QWORD PTR [rax+0x20],rdi
   1400243c3:	push   r12
   1400243c5:	sub    rsp,0x20
   1400243c9:	mov    esi,DWORD PTR [rcx+0x4]
   1400243cc:	xor    ebx,ebx
   1400243ce:	mov    r12,r8
   1400243d1:	mov    rbp,rdx
   1400243d4:	mov    rdi,rcx
   1400243d7:	test   esi,esi
   1400243d9:	je     0x1400243e9
   1400243db:	movsxd rsi,esi
   1400243de:	call   0x140017074
   1400243e3:	lea    r11,[rsi+rax*1]
   1400243e7:	jmp    0x1400243ec
   1400243e9:	mov    r11,rbx
   1400243ec:	test   r11,r11
   1400243ef:	je     0x1400244b3
   1400243f5:	test   esi,esi
   1400243f7:	je     0x140024408
   1400243f9:	movsxd rsi,DWORD PTR [rdi+0x4]
   1400243fd:	call   0x140017074
   140024402:	lea    r11,[rsi+rax*1]
   140024406:	jmp    0x14002440b
   140024408:	mov    r11,rbx
   14002440b:	cmp    BYTE PTR [r11+0x10],bl
   14002440f:	je     0x1400244b3
   140024415:	test   esi,esi
   140024417:	je     0x14002442a
   140024419:	call   0x140017074
   14002441e:	mov    rsi,rax
   140024421:	movsxd rax,DWORD PTR [rdi+0x4]
   140024425:	add    rsi,rax
   140024428:	jmp    0x14002442d
   14002442a:	mov    rsi,rbx
   14002442d:	call   0x14001708c
   140024432:	mov    r11,rax
   140024435:	movsxd rax,DWORD PTR [rbp+0x4]
   140024439:	add    r11,rax
   14002443c:	cmp    rsi,r11
   14002443f:	je     0x14002447c
   140024441:	cmp    DWORD PTR [rdi+0x4],ebx
   140024444:	je     0x140024457
   140024446:	call   0x140017074
   14002444b:	mov    rsi,rax
   14002444e:	movsxd rax,DWORD PTR [rdi+0x4]
   140024452:	add    rsi,rax
   140024455:	jmp    0x14002445a
   140024457:	mov    rsi,rbx
   14002445a:	call   0x14001708c
   14002445f:	lea    rcx,[rsi+0x10]
   140024463:	mov    r11,rax
   140024466:	movsxd rax,DWORD PTR [rbp+0x4]
   14002446a:	lea    rdx,[r11+rax*1+0x10]
   14002446f:	call   0x140023f50
   140024474:	test   eax,eax
   140024476:	je     0x14002447c
   140024478:	xor    eax,eax
   14002447a:	jmp    0x1400244b8
   14002447c:	mov    al,0x2
   14002447e:	test   BYTE PTR [rbp+0x0],al
   140024481:	je     0x140024488
   140024483:	test   BYTE PTR [rdi],0x8
   140024486:	je     0x1400244af
   140024488:	test   BYTE PTR [r12],0x1
   14002448d:	je     0x140024494
   14002448f:	test   BYTE PTR [rdi],0x1
   140024492:	je     0x1400244af
   140024494:	test   BYTE PTR [r12],0x4
   140024499:	je     0x1400244a0
   14002449b:	test   BYTE PTR [rdi],0x4
   14002449e:	je     0x1400244af
   1400244a0:	test   BYTE PTR [r12],al
   1400244a4:	je     0x1400244aa
   1400244a6:	test   BYTE PTR [rdi],al
   1400244a8:	je     0x1400244af
   1400244aa:	mov    ebx,0x1
   1400244af:	mov    eax,ebx
   1400244b1:	jmp    0x1400244b8
   1400244b3:	mov    eax,0x1
   1400244b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400244bd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400244c2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400244c7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400244cc:	add    rsp,0x20
   1400244d0:	pop    r12
   1400244d2:	ret    
   1400244d3:	int3   
   1400244d4:	sub    rsp,0x28
   1400244d8:	mov    rax,QWORD PTR [rcx]
   1400244db:	cmp    DWORD PTR [rax],0xe0434352
   1400244e1:	je     0x140024505
   1400244e3:	cmp    DWORD PTR [rax],0xe0434f4d
   1400244e9:	je     0x140024505
   1400244eb:	cmp    DWORD PTR [rax],0xe06d7363
   1400244f1:	jne    0x14002451e
   1400244f3:	call   0x14001ae14
   1400244f8:	and    DWORD PTR [rax+0x100],0x0
   1400244ff:	call   0x14001dcfc
   140024504:	int3   
   140024505:	call   0x14001ae14
   14002450a:	cmp    DWORD PTR [rax+0x100],0x0
   140024511:	jle    0x14002451e
   140024513:	call   0x14001ae14
   140024518:	dec    DWORD PTR [rax+0x100]
   14002451e:	xor    eax,eax
   140024520:	add    rsp,0x28
   140024524:	ret    
   140024525:	int3   
   140024526:	int3   
   140024527:	int3   
   140024528:	mov    rax,rsp
   14002452b:	mov    DWORD PTR [rax+0x20],r9d
   14002452f:	mov    QWORD PTR [rax+0x18],r8
   140024533:	mov    QWORD PTR [rax+0x10],rdx
   140024537:	mov    QWORD PTR [rax+0x8],rcx
   14002453b:	push   rbx
   14002453c:	push   rsi
   14002453d:	push   rdi
   14002453e:	push   r12
   140024540:	push   r13
   140024542:	push   r14
   140024544:	push   r15
   140024546:	sub    rsp,0x30
   14002454a:	mov    r13d,r9d
   14002454d:	mov    rsi,r8
   140024550:	mov    r15,rdx
   140024553:	mov    r14,rcx
   140024556:	call   0x1400242c8
   14002455b:	mov    edi,eax
   14002455d:	call   0x140017074
   140024562:	mov    QWORD PTR [rsp+0x28],rax
   140024567:	call   0x14001ae14
   14002456c:	inc    DWORD PTR [rax+0x100]
   140024572:	cmp    edi,0xffffffff
   140024575:	je     0x140024668
   14002457b:	cmp    edi,r13d
   14002457e:	jle    0x140024668
   140024584:	cmp    edi,0xffffffff
   140024587:	jle    0x14002458e
   140024589:	cmp    edi,DWORD PTR [rsi+0x4]
   14002458c:	jl     0x140024593
   14002458e:	call   0x14001dd20
   140024593:	movsxd r12,edi
   140024596:	call   0x140017074
   14002459b:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002459f:	lea    rax,[rax+r12*8]
   1400245a3:	mov    edi,DWORD PTR [rcx+rax*1]
   1400245a6:	mov    DWORD PTR [rsp+0x20],edi
   1400245aa:	call   0x140017074
   1400245af:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400245b3:	lea    rax,[rax+r12*8]
   1400245b7:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   1400245bc:	je     0x1400245da
   1400245be:	call   0x140017074
   1400245c3:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400245c7:	lea    rax,[rax+r12*8]
   1400245cb:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   1400245d0:	call   0x140017074
   1400245d5:	add    rax,rbx
   1400245d8:	jmp    0x1400245dc
   1400245da:	xor    eax,eax
   1400245dc:	test   rax,rax
   1400245df:	je     0x14002463f
   1400245e1:	mov    r9d,edi
   1400245e4:	mov    r8,rsi
   1400245e7:	mov    rdx,r15
   1400245ea:	mov    rcx,r14
   1400245ed:	call   0x1400242f0
   1400245f2:	call   0x140017074
   1400245f7:	movsxd rcx,DWORD PTR [rsi+0x8]
   1400245fb:	lea    rax,[rax+r12*8]
   1400245ff:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   140024604:	je     0x140024622
   140024606:	call   0x140017074
   14002460b:	movsxd rcx,DWORD PTR [rsi+0x8]
   14002460f:	lea    rax,[rax+r12*8]
   140024613:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140024618:	call   0x140017074
   14002461d:	add    rax,rbx
   140024620:	jmp    0x140024624
   140024622:	xor    eax,eax
   140024624:	mov    r8d,0x103
   14002462a:	mov    rdx,r14
   14002462d:	mov    rcx,rax
   140024630:	call   0x14002a360
   140024635:	mov    rcx,QWORD PTR [rsp+0x28]
   14002463a:	call   0x1400170a4
   14002463f:	jmp    0x14002465f
   140024641:	mov    r13d,DWORD PTR [rsp+0x88]
   140024649:	mov    rsi,QWORD PTR [rsp+0x80]
   140024651:	mov    r15,QWORD PTR [rsp+0x78]
   140024656:	mov    r14,QWORD PTR [rsp+0x70]
   14002465b:	mov    edi,DWORD PTR [rsp+0x20]
   14002465f:	mov    DWORD PTR [rsp+0x24],edi
   140024663:	jmp    0x140024572
   140024668:	call   0x14001ae14
   14002466d:	cmp    DWORD PTR [rax+0x100],0x0
   140024674:	jle    0x140024681
   140024676:	call   0x14001ae14
   14002467b:	dec    DWORD PTR [rax+0x100]
   140024681:	cmp    edi,0xffffffff
   140024684:	je     0x140024690
   140024686:	cmp    edi,r13d
   140024689:	jle    0x140024690
   14002468b:	call   0x14001dd20
   140024690:	mov    r9d,edi
   140024693:	mov    r8,rsi
   140024696:	mov    rdx,r15
   140024699:	mov    rcx,r14
   14002469c:	call   0x1400242f0
   1400246a1:	add    rsp,0x30
   1400246a5:	pop    r15
   1400246a7:	pop    r14
   1400246a9:	pop    r13
   1400246ab:	pop    r12
   1400246ad:	pop    rdi
   1400246ae:	pop    rsi
   1400246af:	pop    rbx
   1400246b0:	ret    
   1400246b1:	int3   
   1400246b2:	int3   
   1400246b3:	int3   
   1400246b4:	test   rcx,rcx
   1400246b7:	je     0x1400246f5
   1400246b9:	mov    BYTE PTR [rsp+0x10],dl
   1400246bd:	sub    rsp,0x28
   1400246c1:	cmp    DWORD PTR [rcx],0xe06d7363
   1400246c7:	jne    0x1400246f1
   1400246c9:	mov    rax,QWORD PTR [rcx+0x30]
   1400246cd:	test   rax,rax
   1400246d0:	je     0x1400246f1
   1400246d2:	cmp    DWORD PTR [rax+0x4],0x0
   1400246d6:	je     0x1400246f1
   1400246d8:	movsxd rax,DWORD PTR [rax+0x4]
   1400246dc:	mov    rdx,QWORD PTR [rcx+0x38]
   1400246e0:	add    rdx,rax
   1400246e3:	mov    rcx,QWORD PTR [rcx+0x28]
   1400246e7:	call   rdx
   1400246e9:	jmp    0x1400246f1
   1400246eb:	call   0x14001dcfc
   1400246f0:	nop
   1400246f1:	add    rsp,0x28
   1400246f5:	ret    
   1400246f6:	int3   
   1400246f7:	int3   
   1400246f8:	movsxd rax,DWORD PTR [rdx]
   1400246fb:	add    rax,rcx
   1400246fe:	cmp    DWORD PTR [rdx+0x4],0x0
   140024702:	jl     0x14002471a
   140024704:	movsxd r9,DWORD PTR [rdx+0x4]
   140024708:	movsxd rdx,DWORD PTR [rdx+0x8]
   14002470c:	mov    rcx,QWORD PTR [r9+rcx*1]
   140024710:	movsxd r8,DWORD PTR [rdx+rcx*1]
   140024714:	add    r8,r9
   140024717:	add    rax,r8
   14002471a:	ret    
   14002471b:	int3   
   14002471c:	mov    QWORD PTR [rsp+0x8],rbx
   140024721:	mov    QWORD PTR [rsp+0x10],rbp
   140024726:	mov    QWORD PTR [rsp+0x18],rsi
   14002472b:	push   rdi
   14002472c:	push   r12
   14002472e:	push   r13
   140024730:	push   r14
   140024732:	push   r15
   140024734:	sub    rsp,0x20
   140024738:	mov    rsi,rdx
   14002473b:	mov    r14,rcx
   14002473e:	test   rdx,rdx
   140024741:	jne    0x14002474e
   140024743:	call   0x14001dd20
   140024748:	call   0x14001dcfc
   14002474d:	int3   
   14002474e:	xor    edi,edi
   140024750:	xor    r12b,r12b
   140024753:	cmp    DWORD PTR [rdx],edi
   140024755:	jle    0x1400247cf
   140024757:	call   0x14001708c
   14002475c:	mov    r11,rax
   14002475f:	mov    rax,QWORD PTR [r14+0x30]
   140024763:	movsxd rcx,DWORD PTR [rax+0xc]
   140024767:	lea    r13,[r11+rcx*1+0x4]
   14002476c:	call   0x14001708c
   140024771:	mov    r11,rax
   140024774:	mov    rax,QWORD PTR [r14+0x30]
   140024778:	movsxd rcx,DWORD PTR [rax+0xc]
   14002477c:	mov    ebp,DWORD PTR [r11+rcx*1]
   140024780:	test   ebp,ebp
   140024782:	jle    0x1400247c9
   140024784:	movsxd rax,edi
   140024787:	lea    r15,[rax+rax*4]
   14002478b:	call   0x14001708c
   140024790:	mov    rbx,rax
   140024793:	movsxd rax,DWORD PTR [r13+0x0]
   140024797:	add    rbx,rax
   14002479a:	call   0x140017074
   14002479f:	movsxd rcx,DWORD PTR [rsi+0x4]
   1400247a3:	mov    r8,QWORD PTR [r14+0x30]
   1400247a7:	lea    rax,[rax+r15*4]
   1400247ab:	mov    rdx,rbx
   1400247ae:	add    rcx,rax
   1400247b1:	call   0x1400243b0
   1400247b6:	test   eax,eax
   1400247b8:	jne    0x1400247c6
   1400247ba:	dec    ebp
   1400247bc:	add    r13,0x4
   1400247c0:	test   ebp,ebp
   1400247c2:	jg     0x14002478b
   1400247c4:	jmp    0x1400247c9
   1400247c6:	mov    r12b,0x1
   1400247c9:	inc    edi
   1400247cb:	cmp    edi,DWORD PTR [rsi]
   1400247cd:	jl     0x140024757
   1400247cf:	mov    rbx,QWORD PTR [rsp+0x50]
   1400247d4:	mov    rbp,QWORD PTR [rsp+0x58]
   1400247d9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400247de:	mov    al,r12b
   1400247e1:	add    rsp,0x20
   1400247e5:	pop    r15
   1400247e7:	pop    r14
   1400247e9:	pop    r13
   1400247eb:	pop    r12
   1400247ed:	pop    rdi
   1400247ee:	ret    
   1400247ef:	int3   
   1400247f0:	rex push rbx
   1400247f2:	push   rsi
   1400247f3:	push   rdi
   1400247f4:	push   r12
   1400247f6:	push   r13
   1400247f8:	push   r14
   1400247fa:	push   r15
   1400247fc:	sub    rsp,0x80
   140024803:	mov    rdi,rcx
   140024806:	xor    r13d,r13d
   140024809:	mov    DWORD PTR [rsp+0x20],r13d
   14002480e:	and    DWORD PTR [rsp+0xc0],r13d
   140024816:	and    QWORD PTR [rsp+0x48],r13
   14002481b:	and    QWORD PTR [rsp+0x40],r13
   140024820:	call   0x14001ae14
   140024825:	mov    rax,QWORD PTR [rax+0xf8]
   14002482c:	mov    QWORD PTR [rsp+0xd8],rax
   140024834:	call   0x14001ae14
   140024839:	mov    rax,QWORD PTR [rax+0xf0]
   140024840:	mov    QWORD PTR [rsp+0xd0],rax
   140024848:	mov    rsi,QWORD PTR [rdi+0x50]
   14002484c:	mov    QWORD PTR [rsp+0xc8],rsi
   140024854:	mov    rax,QWORD PTR [rdi+0x48]
   140024858:	mov    QWORD PTR [rsp+0x38],rax
   14002485d:	mov    rbx,QWORD PTR [rdi+0x40]
   140024861:	mov    r15,QWORD PTR [rdi+0x30]
   140024865:	mov    r12,QWORD PTR [rdi+0x28]
   140024869:	mov    QWORD PTR [rsp+0x60],r12
   14002486e:	call   0x14001ae14
   140024873:	mov    QWORD PTR [rax+0xf0],rsi
   14002487a:	call   0x14001ae14
   14002487f:	mov    QWORD PTR [rax+0xf8],rbx
   140024886:	call   0x14001ae14
   14002488b:	mov    rdx,QWORD PTR [rax+0xf0]
   140024892:	mov    rdx,QWORD PTR [rdx+0x28]
   140024896:	lea    rcx,[rsp+0x70]
   14002489b:	call   0x140017434
   1400248a0:	mov    r14,rax
   1400248a3:	mov    QWORD PTR [rsp+0x50],rax
   1400248a8:	cmp    QWORD PTR [rdi+0x58],r13
   1400248ac:	je     0x1400248ca
   1400248ae:	mov    DWORD PTR [rsp+0xc0],0x1
   1400248b9:	call   0x14001ae14
   1400248be:	mov    rcx,QWORD PTR [rax+0x138]
   1400248c5:	mov    QWORD PTR [rsp+0x40],rcx
   1400248ca:	mov    r8d,0x100
   1400248d0:	mov    rdx,r12
   1400248d3:	mov    rcx,r15
   1400248d6:	call   0x14002a360
   1400248db:	mov    rbx,rax
   1400248de:	mov    QWORD PTR [rsp+0x48],rax
   1400248e3:	mov    rdi,QWORD PTR [rsp+0xd8]
   1400248eb:	mov    r15,QWORD PTR [rsp+0xd0]
   1400248f3:	jmp    0x140024972
   1400248f5:	mov    DWORD PTR [rsp+0x20],0x1
   1400248fd:	call   0x14001ae14
   140024902:	and    DWORD PTR [rax+0x2c0],0x0
   140024909:	mov    rsi,QWORD PTR [rsp+0xc8]
   140024911:	cmp    DWORD PTR [rsp+0xc0],0x0
   140024919:	je     0x14002493b
   14002491b:	mov    dl,0x1
   14002491d:	mov    rcx,rsi
   140024920:	call   0x1400246b4
   140024925:	mov    r11,QWORD PTR [rsp+0x40]
   14002492a:	lea    r9,[r11+0x20]
   14002492e:	mov    r8d,DWORD PTR [r11+0x18]
   140024932:	mov    edx,DWORD PTR [r11+0x4]
   140024936:	mov    ecx,DWORD PTR [r11]
   140024939:	jmp    0x140024948
   14002493b:	lea    r9,[rsi+0x20]
   14002493f:	mov    r8d,DWORD PTR [rsi+0x18]
   140024943:	mov    edx,DWORD PTR [rsi+0x4]
   140024946:	mov    ecx,DWORD PTR [rsi]
   140024948:	call   QWORD PTR [rip+0xa8ba]        # 0x14002f208
   14002494e:	mov    r13d,DWORD PTR [rsp+0x20]
   140024953:	mov    rbx,QWORD PTR [rsp+0x48]
   140024958:	mov    rdi,QWORD PTR [rsp+0xd8]
   140024960:	mov    r15,QWORD PTR [rsp+0xd0]
   140024968:	mov    r12,QWORD PTR [rsp+0x60]
   14002496d:	mov    r14,QWORD PTR [rsp+0x50]
   140024972:	mov    rcx,r14
   140024975:	call   0x1400174ac
   14002497a:	test   r13d,r13d
   14002497d:	jne    0x1400249bf
   14002497f:	cmp    DWORD PTR [rsi],0xe06d7363
   140024985:	jne    0x1400249bf
   140024987:	cmp    DWORD PTR [rsi+0x18],0x4
   14002498b:	jne    0x1400249bf
   14002498d:	cmp    DWORD PTR [rsi+0x20],0x19930520
   140024994:	je     0x1400249a8
   140024996:	cmp    DWORD PTR [rsi+0x20],0x19930521
   14002499d:	je     0x1400249a8
   14002499f:	cmp    DWORD PTR [rsi+0x20],0x19930522
   1400249a6:	jne    0x1400249bf
   1400249a8:	mov    rcx,QWORD PTR [rsi+0x28]
   1400249ac:	call   0x140017478
   1400249b1:	test   eax,eax
   1400249b3:	je     0x1400249bf
   1400249b5:	mov    dl,0x1
   1400249b7:	mov    rcx,rsi
   1400249ba:	call   0x1400246b4
   1400249bf:	call   0x14001ae14
   1400249c4:	mov    QWORD PTR [rax+0xf0],r15
   1400249cb:	call   0x14001ae14
   1400249d0:	mov    QWORD PTR [rax+0xf8],rdi
   1400249d7:	mov    rax,QWORD PTR [rsp+0x38]
   1400249dc:	movsxd rcx,DWORD PTR [rax+0x1c]
   1400249e0:	mov    rax,QWORD PTR [r12]
   1400249e4:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   1400249ec:	mov    rax,rbx
   1400249ef:	add    rsp,0x80
   1400249f6:	pop    r15
   1400249f8:	pop    r14
   1400249fa:	pop    r13
   1400249fc:	pop    r12
   1400249fe:	pop    rdi
   1400249ff:	pop    rsi
   140024a00:	pop    rbx
   140024a01:	ret    
   140024a02:	int3   
   140024a03:	int3   
   140024a04:	mov    QWORD PTR [rsp+0x8],rbx
   140024a09:	mov    QWORD PTR [rsp+0x10],rsi
   140024a0e:	mov    QWORD PTR [rsp+0x18],rdi
   140024a13:	push   r12
   140024a15:	push   r13
   140024a17:	push   r14
   140024a19:	sub    rsp,0x30
   140024a1d:	mov    rsi,r9
   140024a20:	mov    rdi,r8
   140024a23:	mov    r12,rdx
   140024a26:	mov    r14,rcx
   140024a29:	xor    ebx,ebx
   140024a2b:	mov    r13d,DWORD PTR [r8+0x4]
   140024a2f:	test   r13d,r13d
   140024a32:	je     0x140024a43
   140024a34:	movsxd r13,r13d
   140024a37:	call   0x140017074
   140024a3c:	lea    r11,[r13+rax*1+0x0]
   140024a41:	jmp    0x140024a46
   140024a43:	mov    r11,rbx
   140024a46:	test   r11,r11
   140024a49:	je     0x140024bea
   140024a4f:	test   r13d,r13d
   140024a52:	je     0x140024a65
   140024a54:	call   0x140017074
   140024a59:	mov    r11,rax
   140024a5c:	movsxd rax,DWORD PTR [rdi+0x4]
   140024a60:	add    r11,rax
   140024a63:	jmp    0x140024a68
   140024a65:	mov    r11,rbx
   140024a68:	cmp    BYTE PTR [r11+0x10],bl
   140024a6c:	je     0x140024bea
   140024a72:	cmp    DWORD PTR [rdi+0x8],ebx
   140024a75:	jne    0x140024a83
   140024a77:	test   DWORD PTR [rdi],0x80000000
   140024a7d:	je     0x140024bea
   140024a83:	mov    ecx,DWORD PTR [rdi]
   140024a85:	test   ecx,ecx
   140024a87:	js     0x140024a94
   140024a89:	movsxd rax,DWORD PTR [rdi+0x8]
   140024a8d:	add    rax,QWORD PTR [r12]
   140024a91:	mov    r12,rax
   140024a94:	mov    edi,0x1
   140024a99:	test   cl,0x8
   140024a9c:	je     0x140024add
   140024a9e:	mov    edx,edi
   140024aa0:	mov    rcx,QWORD PTR [r14+0x28]
   140024aa4:	call   0x14002a3a8
   140024aa9:	test   eax,eax
   140024aab:	je     0x140024bda
   140024ab1:	mov    edx,edi
   140024ab3:	mov    rcx,r12
   140024ab6:	call   0x14002a3a8
   140024abb:	test   eax,eax
   140024abd:	je     0x140024bda
   140024ac3:	mov    rcx,QWORD PTR [r14+0x28]
   140024ac7:	mov    QWORD PTR [r12],rcx
   140024acb:	lea    rdx,[rsi+0x8]
   140024acf:	call   0x1400246f8
   140024ad4:	mov    QWORD PTR [r12],rax
   140024ad8:	jmp    0x140024be0
   140024add:	test   BYTE PTR [rsi],dil
   140024ae0:	je     0x140024b31
   140024ae2:	mov    edx,edi
   140024ae4:	mov    rcx,QWORD PTR [r14+0x28]
   140024ae8:	call   0x14002a3a8
   140024aed:	test   eax,eax
   140024aef:	je     0x140024bda
   140024af5:	mov    edx,edi
   140024af7:	mov    rcx,r12
   140024afa:	call   0x14002a3a8
   140024aff:	test   eax,eax
   140024b01:	je     0x140024bda
   140024b07:	movsxd r8,DWORD PTR [rsi+0x14]
   140024b0b:	mov    rdx,QWORD PTR [r14+0x28]
   140024b0f:	mov    rcx,r12
   140024b12:	call   0x140018e00
   140024b17:	cmp    DWORD PTR [rsi+0x14],0x8
   140024b1b:	jne    0x140024be0
   140024b21:	cmp    QWORD PTR [r12],rbx
   140024b25:	je     0x140024be0
   140024b2b:	mov    rcx,QWORD PTR [r12]
   140024b2f:	jmp    0x140024acb
   140024b31:	cmp    DWORD PTR [rsi+0x18],ebx
   140024b34:	je     0x140024b47
   140024b36:	call   0x14001708c
   140024b3b:	mov    r11,rax
   140024b3e:	movsxd rax,DWORD PTR [rsi+0x18]
   140024b42:	add    r11,rax
   140024b45:	jmp    0x140024b4a
   140024b47:	mov    r11,rbx
   140024b4a:	mov    edx,edi
   140024b4c:	mov    rcx,QWORD PTR [r14+0x28]
   140024b50:	test   r11,r11
   140024b53:	jne    0x140024b8d
   140024b55:	call   0x14002a3a8
   140024b5a:	test   eax,eax
   140024b5c:	je     0x140024bda
   140024b5e:	mov    edx,edi
   140024b60:	mov    rcx,r12
   140024b63:	call   0x14002a3a8
   140024b68:	test   eax,eax
   140024b6a:	je     0x140024bda
   140024b6c:	movsxd r10,DWORD PTR [rsi+0x14]
   140024b70:	lea    rdx,[rsi+0x8]
   140024b74:	mov    rcx,QWORD PTR [r14+0x28]
   140024b78:	call   0x1400246f8
   140024b7d:	mov    rdx,rax
   140024b80:	mov    r8,r10
   140024b83:	mov    rcx,r12
   140024b86:	call   0x140018e00
   140024b8b:	jmp    0x140024be0
   140024b8d:	call   0x14002a3a8
   140024b92:	test   eax,eax
   140024b94:	je     0x140024bda
   140024b96:	mov    edx,edi
   140024b98:	mov    rcx,r12
   140024b9b:	call   0x14002a3a8
   140024ba0:	test   eax,eax
   140024ba2:	je     0x140024bda
   140024ba4:	cmp    DWORD PTR [rsi+0x18],ebx
   140024ba7:	je     0x140024bba
   140024ba9:	call   0x14001708c
   140024bae:	mov    rcx,rax
   140024bb1:	movsxd rax,DWORD PTR [rsi+0x18]
   140024bb5:	add    rcx,rax
   140024bb8:	jmp    0x140024bbd
   140024bba:	mov    rcx,rbx
   140024bbd:	call   0x14002a3a8
   140024bc2:	test   eax,eax
   140024bc4:	je     0x140024bda
   140024bc6:	mov    al,BYTE PTR [rsi]
   140024bc8:	and    al,0x4
   140024bca:	neg    al
   140024bcc:	sbb    ecx,ecx
   140024bce:	neg    ecx
   140024bd0:	add    ecx,edi
   140024bd2:	mov    ebx,ecx
   140024bd4:	mov    DWORD PTR [rsp+0x20],ecx
   140024bd8:	jmp    0x140024be0
   140024bda:	call   0x14001dd20
   140024bdf:	nop
   140024be0:	mov    eax,ebx
   140024be2:	jmp    0x140024bec
   140024be4:	call   0x14001dcfc
   140024be9:	nop
   140024bea:	xor    eax,eax
   140024bec:	mov    rbx,QWORD PTR [rsp+0x50]
   140024bf1:	mov    rsi,QWORD PTR [rsp+0x58]
   140024bf6:	mov    rdi,QWORD PTR [rsp+0x60]
   140024bfb:	add    rsp,0x30
   140024bff:	pop    r14
   140024c01:	pop    r13
   140024c03:	pop    r12
   140024c05:	ret    
   140024c06:	int3   
   140024c07:	int3   
   140024c08:	mov    QWORD PTR [rsp+0x8],rbx
   140024c0d:	mov    QWORD PTR [rsp+0x10],rsi
   140024c12:	push   rdi
   140024c13:	sub    rsp,0x20
   140024c17:	mov    rbx,r9
   140024c1a:	mov    rsi,rcx
   140024c1d:	test   DWORD PTR [r8],0x80000000
   140024c24:	je     0x140024c2b
   140024c26:	mov    rdi,rdx
   140024c29:	jmp    0x140024c32
   140024c2b:	movsxd rdi,DWORD PTR [r8+0x8]
   140024c2f:	add    rdi,QWORD PTR [rdx]
   140024c32:	call   0x140024a04
   140024c37:	dec    eax
   140024c39:	je     0x140024c75
   140024c3b:	dec    eax
   140024c3d:	jne    0x140024ca0
   140024c3f:	xor    r10d,r10d
   140024c42:	cmp    DWORD PTR [rbx+0x18],r10d
   140024c46:	je     0x140024c57
   140024c48:	call   0x14001708c
   140024c4d:	mov    r10,rax
   140024c50:	movsxd rax,DWORD PTR [rbx+0x18]
   140024c54:	add    r10,rax
   140024c57:	lea    rdx,[rbx+0x8]
   140024c5b:	mov    rcx,QWORD PTR [rsi+0x28]
   140024c5f:	call   0x1400246f8
   140024c64:	mov    rdx,rax
   140024c67:	mov    r8d,0x1
   140024c6d:	mov    rcx,rdi
   140024c70:	call   r10
   140024c73:	jmp    0x140024ca0
   140024c75:	xor    r10d,r10d
   140024c78:	cmp    DWORD PTR [rbx+0x18],r10d
   140024c7c:	je     0x140024c8a
   140024c7e:	call   0x14001708c
   140024c83:	movsxd r10,DWORD PTR [rbx+0x18]
   140024c87:	add    r10,rax
   140024c8a:	lea    rdx,[rbx+0x8]
   140024c8e:	mov    rcx,QWORD PTR [rsi+0x28]
   140024c92:	call   0x1400246f8
   140024c97:	mov    rdx,rax
   140024c9a:	mov    rcx,rdi
   140024c9d:	call   r10
   140024ca0:	jmp    0x140024ca8
   140024ca2:	call   0x14001dcfc
   140024ca7:	nop
   140024ca8:	mov    rbx,QWORD PTR [rsp+0x30]
   140024cad:	mov    rsi,QWORD PTR [rsp+0x38]
   140024cb2:	add    rsp,0x20
   140024cb6:	pop    rdi
   140024cb7:	ret    
   140024cb8:	mov    rax,rsp
   140024cbb:	mov    QWORD PTR [rax+0x8],rbx
   140024cbf:	mov    QWORD PTR [rax+0x18],rbp
   140024cc3:	push   rsi
   140024cc4:	push   rdi
   140024cc5:	push   r12
   140024cc7:	push   r13
   140024cc9:	push   r14
   140024ccb:	sub    rsp,0x50
   140024ccf:	mov    r13,QWORD PTR [rsp+0xa0]
   140024cd7:	mov    rbp,r9
   140024cda:	mov    r12,rdx
   140024cdd:	mov    r14,r8
   140024ce0:	mov    rbx,rcx
   140024ce3:	lea    r9,[rax+0x10]
   140024ce7:	mov    r8,r13
   140024cea:	mov    rdx,rbp
   140024ced:	mov    rcx,r12
   140024cf0:	call   0x140016f88
   140024cf5:	mov    r9,QWORD PTR [rsp+0xb0]
   140024cfd:	mov    rsi,QWORD PTR [rsp+0xa8]
   140024d05:	mov    rdi,rax
   140024d08:	test   r9,r9
   140024d0b:	je     0x140024d1b
   140024d0d:	mov    r8,rsi
   140024d10:	mov    rdx,rax
   140024d13:	mov    rcx,rbx
   140024d16:	call   0x140024c08
   140024d1b:	call   0x140017074
   140024d20:	movsxd rcx,DWORD PTR [rsi+0xc]
   140024d24:	mov    r9,rdi
   140024d27:	add    rax,rcx
   140024d2a:	mov    cl,BYTE PTR [rsp+0xc0]
   140024d31:	mov    r8,r14
   140024d34:	mov    BYTE PTR [rsp+0x40],cl
   140024d38:	mov    rcx,QWORD PTR [rsp+0xb8]
   140024d40:	mov    QWORD PTR [rsp+0x38],rbp
   140024d45:	mov    edx,DWORD PTR [rcx]
   140024d47:	mov    QWORD PTR [rsp+0x30],r13
   140024d4c:	mov    rcx,r12
   140024d4f:	mov    DWORD PTR [rsp+0x28],edx
   140024d53:	mov    rdx,rbx
   140024d56:	mov    QWORD PTR [rsp+0x20],rax
   140024d5b:	call   0x14001750c
   140024d60:	lea    r11,[rsp+0x50]
   140024d65:	mov    rbx,QWORD PTR [r11+0x30]
   140024d69:	mov    rbp,QWORD PTR [r11+0x40]
   140024d6d:	mov    rsp,r11
   140024d70:	pop    r14
   140024d72:	pop    r13
   140024d74:	pop    r12
   140024d76:	pop    rdi
   140024d77:	pop    rsi
   140024d78:	ret    
   140024d79:	int3   
   140024d7a:	int3   
   140024d7b:	int3   
   140024d7c:	mov    QWORD PTR [rsp+0x10],rbx
   140024d81:	mov    QWORD PTR [rsp+0x18],r8
   140024d86:	push   rbp
   140024d87:	push   rsi
   140024d88:	push   rdi
   140024d89:	push   r12
   140024d8b:	push   r13
   140024d8d:	push   r14
   140024d8f:	push   r15
   140024d91:	sub    rsp,0x60
   140024d95:	cmp    DWORD PTR [rcx],0x80000003
   140024d9b:	mov    r14,r9
   140024d9e:	mov    r12,r8
   140024da1:	mov    r15,rdx
   140024da4:	mov    rsi,rcx
   140024da7:	je     0x140024f9c
   140024dad:	call   0x14001ae14
   140024db2:	mov    edi,DWORD PTR [rsp+0xd0]
   140024db9:	mov    rbp,QWORD PTR [rsp+0xc0]
   140024dc1:	cmp    QWORD PTR [rax+0xe0],0x0
   140024dc9:	je     0x140024e20
   140024dcb:	call   0x14001ae14
   140024dd0:	mov    rbx,rax
   140024dd3:	call   0x14001aca4
   140024dd8:	cmp    QWORD PTR [rbx+0xe0],rax
   140024ddf:	je     0x140024e20
   140024de1:	cmp    DWORD PTR [rsi],0xe0434f4d
   140024de7:	je     0x140024e20
   140024de9:	cmp    DWORD PTR [rsi],0xe0434352
   140024def:	je     0x140024e20
   140024df1:	mov    rax,QWORD PTR [rsp+0xd8]
   140024df9:	mov    r9,r14
   140024dfc:	mov    r8,r12
   140024dff:	mov    QWORD PTR [rsp+0x30],rax
   140024e04:	mov    rdx,r15
   140024e07:	mov    rcx,rsi
   140024e0a:	mov    DWORD PTR [rsp+0x28],edi
   140024e0e:	mov    QWORD PTR [rsp+0x20],rbp
   140024e13:	call   0x1400172b4
   140024e18:	test   eax,eax
   140024e1a:	jne    0x140024f9c
   140024e20:	cmp    DWORD PTR [rbp+0xc],0x0
   140024e24:	jne    0x140024e2b
   140024e26:	call   0x14001dd20
   140024e2b:	mov    r12d,DWORD PTR [rsp+0xc8]
   140024e33:	lea    rax,[rsp+0x50]
   140024e38:	mov    QWORD PTR [rsp+0x30],r14
   140024e3d:	mov    QWORD PTR [rsp+0x28],rax
   140024e42:	lea    rax,[rsp+0xa0]
   140024e4a:	mov    r8d,edi
   140024e4d:	mov    r9d,r12d
   140024e50:	mov    rdx,rbp
   140024e53:	mov    rcx,r15
   140024e56:	mov    QWORD PTR [rsp+0x20],rax
   140024e5b:	call   0x140017308
   140024e60:	mov    ecx,DWORD PTR [rsp+0xa0]
   140024e67:	cmp    ecx,DWORD PTR [rsp+0x50]
   140024e6b:	jae    0x140024f9c
   140024e71:	lea    rdi,[rax+0xc]
   140024e75:	lea    r13,[rdi-0xc]
   140024e79:	cmp    r12d,DWORD PTR [r13+0x0]
   140024e7d:	jl     0x140024f85
   140024e83:	cmp    r12d,DWORD PTR [rdi-0x8]
   140024e87:	jg     0x140024f85
   140024e8d:	call   0x140017074
   140024e92:	movsxd rcx,DWORD PTR [rdi]
   140024e95:	lea    rdx,[rcx+rcx*4]
   140024e99:	movsxd rcx,DWORD PTR [rdi+0x4]
   140024e9d:	lea    rdx,[rcx+rdx*4]
   140024ea1:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   140024ea6:	je     0x140024ecb
   140024ea8:	call   0x140017074
   140024ead:	movsxd rcx,DWORD PTR [rdi]
   140024eb0:	lea    rdx,[rcx+rcx*4]
   140024eb4:	movsxd rcx,DWORD PTR [rdi+0x4]
   140024eb8:	lea    rdx,[rcx+rdx*4]
   140024ebc:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140024ec1:	call   0x140017074
   140024ec6:	add    rax,rbx
   140024ec9:	jmp    0x140024ecd
   140024ecb:	xor    eax,eax
   140024ecd:	test   rax,rax
   140024ed0:	je     0x140024f18
   140024ed2:	call   0x140017074
   140024ed7:	movsxd rcx,DWORD PTR [rdi]
   140024eda:	lea    rdx,[rcx+rcx*4]
   140024ede:	movsxd rcx,DWORD PTR [rdi+0x4]
   140024ee2:	lea    rdx,[rcx+rdx*4]
   140024ee6:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   140024eeb:	je     0x140024f10
   140024eed:	call   0x140017074
   140024ef2:	movsxd rcx,DWORD PTR [rdi]
   140024ef5:	lea    rdx,[rcx+rcx*4]
   140024ef9:	movsxd rcx,DWORD PTR [rdi+0x4]
   140024efd:	lea    rdx,[rcx+rdx*4]
   140024f01:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   140024f06:	call   0x140017074
   140024f0b:	add    rax,rbx
   140024f0e:	jmp    0x140024f12
   140024f10:	xor    eax,eax
   140024f12:	cmp    BYTE PTR [rax+0x10],0x0
   140024f16:	jne    0x140024f7e
   140024f18:	call   0x140017074
   140024f1d:	movsxd rcx,DWORD PTR [rdi]
   140024f20:	lea    rdx,[rcx+rcx*4]
   140024f24:	movsxd rcx,DWORD PTR [rdi+0x4]
   140024f28:	lea    rdx,[rcx+rdx*4]
   140024f2c:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   140024f31:	jne    0x140024f7e
   140024f33:	call   0x140017074
   140024f38:	mov    ecx,DWORD PTR [rdi]
   140024f3a:	mov    r8,QWORD PTR [rsp+0xb0]
   140024f42:	dec    ecx
   140024f44:	mov    BYTE PTR [rsp+0x40],0x0
   140024f49:	mov    QWORD PTR [rsp+0x38],r13
   140024f4e:	and    QWORD PTR [rsp+0x30],0x0
   140024f54:	movsxd rcx,ecx
   140024f57:	mov    r9,r14
   140024f5a:	lea    rdx,[rcx+rcx*4]
   140024f5e:	lea    rcx,[rax+rdx*4]
   140024f62:	movsxd rax,DWORD PTR [rdi+0x4]
   140024f66:	mov    rdx,r15
   140024f69:	add    rcx,rax
   140024f6c:	mov    QWORD PTR [rsp+0x28],rcx
   140024f71:	mov    rcx,rsi
   140024f74:	mov    QWORD PTR [rsp+0x20],rbp
   140024f79:	call   0x140024cb8
   140024f7e:	mov    ecx,DWORD PTR [rsp+0xa0]
   140024f85:	inc    ecx
   140024f87:	add    rdi,0x14
   140024f8b:	mov    DWORD PTR [rsp+0xa0],ecx
   140024f92:	cmp    ecx,DWORD PTR [rsp+0x50]
   140024f96:	jb     0x140024e75
   140024f9c:	mov    rbx,QWORD PTR [rsp+0xa8]
   140024fa4:	add    rsp,0x60
   140024fa8:	pop    r15
   140024faa:	pop    r14
   140024fac:	pop    r13
   140024fae:	pop    r12
   140024fb0:	pop    rdi
   140024fb1:	pop    rsi
   140024fb2:	pop    rbp
   140024fb3:	ret    
   140024fb4:	mov    rax,rsp
   140024fb7:	mov    QWORD PTR [rax+0x20],rbx
   140024fbb:	mov    QWORD PTR [rax+0x18],r8
   140024fbf:	mov    QWORD PTR [rax+0x10],rdx
   140024fc3:	push   rbp
   140024fc4:	push   rsi
   140024fc5:	push   rdi
   140024fc6:	push   r12
   140024fc8:	push   r13
   140024fca:	push   r14
   140024fcc:	push   r15
   140024fce:	lea    rbp,[rax-0x3f]
   140024fd2:	sub    rsp,0x90
   140024fd9:	mov    rbx,QWORD PTR [rbp+0x67]
   140024fdd:	mov    r13,rdx
   140024fe0:	mov    rdi,rcx
   140024fe3:	xor    r14b,r14b
   140024fe6:	mov    rdx,r9
   140024fe9:	mov    rcx,rbx
   140024fec:	mov    r15,r9
   140024fef:	mov    r12,r8
   140024ff2:	mov    BYTE PTR [rbp+0x47],r14b
   140024ff6:	call   0x1400242c0
   140024ffb:	lea    r9,[rbp-0x21]
   140024fff:	mov    r8,rbx
   140025002:	mov    rdx,r15
   140025005:	mov    rcx,r13
   140025008:	mov    esi,eax
   14002500a:	call   0x140016f88
   14002500f:	mov    r8,rbx
   140025012:	mov    rdx,r15
   140025015:	mov    rcx,r13
   140025018:	call   0x140024338
   14002501d:	mov    r8,rbx
   140025020:	mov    rdx,r15
   140025023:	cmp    esi,eax
   140025025:	jle    0x140025046
   140025027:	lea    rcx,[rbp-0x21]
   14002502b:	mov    r9d,esi
   14002502e:	call   0x1400242f0
   140025033:	mov    r9d,esi
   140025036:	mov    r8,rbx
   140025039:	mov    rdx,r15
   14002503c:	mov    rcx,r13
   14002503f:	call   0x1400242fc
   140025044:	jmp    0x140025050
   140025046:	mov    rcx,r13
   140025049:	call   0x140024338
   14002504e:	mov    esi,eax
   140025050:	cmp    esi,0xffffffff
   140025053:	jl     0x14002505a
   140025055:	cmp    esi,DWORD PTR [rbx+0x4]
   140025058:	jl     0x14002505f
   14002505a:	call   0x14001dd20
   14002505f:	cmp    DWORD PTR [rdi],0xe06d7363
   140025065:	jne    0x140025443
   14002506b:	cmp    DWORD PTR [rdi+0x18],0x4
   14002506f:	jne    0x140025206
   140025075:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14002507c:	je     0x140025094
   14002507e:	cmp    DWORD PTR [rdi+0x20],0x19930521
   140025085:	je     0x140025094
   140025087:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14002508e:	jne    0x140025206
   140025094:	cmp    QWORD PTR [rdi+0x30],0x0
   140025099:	jne    0x140025206
   14002509f:	call   0x14001ae14
   1400250a4:	cmp    QWORD PTR [rax+0xf0],0x0
   1400250ac:	je     0x140025428
   1400250b2:	call   0x14001ae14
   1400250b7:	mov    rdi,QWORD PTR [rax+0xf0]
   1400250be:	call   0x14001ae14
   1400250c3:	mov    rcx,QWORD PTR [rdi+0x38]
   1400250c7:	mov    r12,QWORD PTR [rax+0xf8]
   1400250ce:	mov    QWORD PTR [rbp+0x57],r12
   1400250d2:	call   0x1400170c0
   1400250d7:	mov    edx,0x1
   1400250dc:	mov    rcx,rdi
   1400250df:	call   0x14002a3a8
   1400250e4:	test   eax,eax
   1400250e6:	jne    0x1400250ed
   1400250e8:	call   0x14001dd20
   1400250ed:	cmp    DWORD PTR [rdi],0xe06d7363
   1400250f3:	jne    0x140025122
   1400250f5:	cmp    DWORD PTR [rdi+0x18],0x4
   1400250f9:	jne    0x140025122
   1400250fb:	cmp    DWORD PTR [rdi+0x20],0x19930520
   140025102:	je     0x140025116
   140025104:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14002510b:	je     0x140025116
   14002510d:	cmp    DWORD PTR [rdi+0x20],0x19930522
   140025114:	jne    0x140025122
   140025116:	cmp    QWORD PTR [rdi+0x30],0x0
   14002511b:	jne    0x140025122
   14002511d:	call   0x14001dd20
   140025122:	call   0x14001ae14
   140025127:	cmp    QWORD PTR [rax+0x108],0x0
   14002512f:	je     0x140025206
   140025135:	call   0x14001ae14
   14002513a:	mov    r12,QWORD PTR [rax+0x108]
   140025141:	call   0x14001ae14
   140025146:	mov    rdx,r12
   140025149:	and    QWORD PTR [rax+0x108],0x0
   140025151:	mov    rcx,rdi
   140025154:	call   0x14002471c
   140025159:	test   al,al
   14002515b:	jne    0x140025202
   140025161:	xor    r13d,r13d
   140025164:	cmp    DWORD PTR [r12],r13d
   140025168:	jle    0x1400251be
   14002516a:	xor    esi,esi
   14002516c:	call   0x140017074
   140025171:	movsxd rcx,DWORD PTR [r12+0x4]
   140025176:	add    rax,rsi
   140025179:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14002517e:	je     0x14002519c
   140025180:	call   0x140017074
   140025185:	movsxd rcx,DWORD PTR [r12+0x4]
   14002518a:	add    rax,rsi
   14002518d:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   140025192:	call   0x140017074
   140025197:	add    rax,rbx
   14002519a:	jmp    0x14002519e
   14002519c:	xor    eax,eax
   14002519e:	lea    rdx,[rip+0x1bdab]        # 0x140040f50
   1400251a5:	mov    rcx,rax
   1400251a8:	call   0x140016b2c
   1400251ad:	test   al,al
   1400251af:	jne    0x1400251c4
   1400251b1:	inc    r13d
   1400251b4:	add    rsi,0x14
   1400251b8:	cmp    r13d,DWORD PTR [r12]
   1400251bc:	jl     0x14002516c
   1400251be:	call   0x14001dcfc
   1400251c3:	int3   
   1400251c4:	mov    dl,0x1
   1400251c6:	mov    rcx,rdi
   1400251c9:	call   0x1400246b4
   1400251ce:	lea    r11,[rip+0xdf1b]        # 0x1400330f0
   1400251d5:	lea    rdx,[rbp+0x47]
   1400251d9:	lea    rcx,[rbp-0x11]
   1400251dd:	mov    QWORD PTR [rbp+0x47],r11
   1400251e1:	call   0x1400240b4
   1400251e6:	lea    r11,[rip+0xdef3]        # 0x1400330e0
   1400251ed:	lea    rdx,[rip+0x116c4]        # 0x1400368b8
   1400251f4:	lea    rcx,[rbp-0x11]
   1400251f8:	mov    QWORD PTR [rbp-0x11],r11
   1400251fc:	call   0x1400241a0
   140025201:	int3   
   140025202:	mov    r12,QWORD PTR [rbp+0x57]
   140025206:	cmp    DWORD PTR [rdi],0xe06d7363
   14002520c:	jne    0x140025443
   140025212:	cmp    DWORD PTR [rdi+0x18],0x4
   140025216:	jne    0x140025443
   14002521c:	cmp    DWORD PTR [rdi+0x20],0x19930520
   140025223:	je     0x14002523b
   140025225:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14002522c:	je     0x14002523b
   14002522e:	cmp    DWORD PTR [rdi+0x20],0x19930522
   140025235:	jne    0x140025443
   14002523b:	cmp    DWORD PTR [rbx+0xc],0x0
   14002523f:	jbe    0x140025388
   140025245:	mov    r8d,DWORD PTR [rbp+0x77]
   140025249:	lea    rax,[rbp-0x31]
   14002524d:	mov    QWORD PTR [rsp+0x30],r15
   140025252:	mov    QWORD PTR [rsp+0x28],rax
   140025257:	lea    rax,[rbp-0x39]
   14002525b:	mov    r9d,esi
   14002525e:	mov    rdx,rbx
   140025261:	mov    rcx,r13
   140025264:	mov    QWORD PTR [rsp+0x20],rax
   140025269:	call   0x140017308
   14002526e:	mov    ecx,DWORD PTR [rbp-0x39]
   140025271:	mov    edx,DWORD PTR [rbp-0x31]
   140025274:	cmp    ecx,edx
   140025276:	jae    0x140025388
   14002527c:	lea    r12,[rax+0x10]
   140025280:	cmp    DWORD PTR [r12-0x10],esi
   140025285:	jg     0x14002536e
   14002528b:	cmp    esi,DWORD PTR [r12-0xc]
   140025290:	jg     0x14002536e
   140025296:	call   0x140017074
   14002529b:	movsxd r13,DWORD PTR [r12]
   14002529f:	mov    r14d,DWORD PTR [r12-0x4]
   1400252a4:	add    r13,rax
   1400252a7:	test   r14d,r14d
   1400252aa:	jle    0x140025360
   1400252b0:	call   0x14001708c
   1400252b5:	mov    rcx,QWORD PTR [rdi+0x30]
   1400252b9:	movsxd rdx,DWORD PTR [rcx+0xc]
   1400252bd:	lea    rax,[rax+rdx*1+0x4]
   1400252c2:	mov    QWORD PTR [rbp-0x29],rax
   1400252c6:	call   0x14001708c
   1400252cb:	mov    rcx,QWORD PTR [rdi+0x30]
   1400252cf:	movsxd rdx,DWORD PTR [rcx+0xc]
   1400252d3:	mov    ecx,DWORD PTR [rax+rdx*1]
   1400252d6:	mov    DWORD PTR [rbp-0x35],ecx
   1400252d9:	test   ecx,ecx
   1400252db:	jle    0x140025314
   1400252dd:	call   0x14001708c
   1400252e2:	mov    rcx,QWORD PTR [rbp-0x29]
   1400252e6:	mov    r8,QWORD PTR [rdi+0x30]
   1400252ea:	movsxd rcx,DWORD PTR [rcx]
   1400252ed:	add    rax,rcx
   1400252f0:	mov    rcx,r13
   1400252f3:	mov    rdx,rax
   1400252f6:	mov    QWORD PTR [rbp-0x19],rax
   1400252fa:	call   0x1400243b0
   1400252ff:	test   eax,eax
   140025301:	jne    0x14002531d
   140025303:	mov    eax,DWORD PTR [rbp-0x35]
   140025306:	add    QWORD PTR [rbp-0x29],0x4
   14002530b:	dec    eax
   14002530d:	mov    DWORD PTR [rbp-0x35],eax
   140025310:	test   eax,eax
   140025312:	jg     0x1400252dd
   140025314:	dec    r14d
   140025317:	add    r13,0x14
   14002531b:	jmp    0x1400252a7
   14002531d:	mov    al,BYTE PTR [rbp+0x6f]
   140025320:	mov    r8,QWORD PTR [rbp+0x57]
   140025324:	mov    r14b,0x1
   140025327:	mov    BYTE PTR [rsp+0x40],al
   14002532b:	lea    rax,[r12-0x10]
   140025330:	mov    r9,r15
   140025333:	mov    QWORD PTR [rsp+0x38],rax
   140025338:	mov    rax,QWORD PTR [rbp-0x19]
   14002533c:	mov    rcx,rdi
   14002533f:	mov    QWORD PTR [rsp+0x30],rax
   140025344:	mov    QWORD PTR [rsp+0x28],r13
   140025349:	mov    r13,QWORD PTR [rbp+0x4f]
   14002534d:	mov    rdx,r13
   140025350:	mov    BYTE PTR [rbp+0x47],r14b
   140025354:	mov    QWORD PTR [rsp+0x20],rbx
   140025359:	call   0x140024cb8
   14002535e:	jmp    0x140025368
   140025360:	mov    r14b,BYTE PTR [rbp+0x47]
   140025364:	mov    r13,QWORD PTR [rbp+0x4f]
   140025368:	mov    edx,DWORD PTR [rbp-0x31]
   14002536b:	mov    ecx,DWORD PTR [rbp-0x39]
   14002536e:	inc    ecx
   140025370:	add    r12,0x14
   140025374:	mov    DWORD PTR [rbp-0x39],ecx
   140025377:	cmp    ecx,edx
   140025379:	jb     0x140025280
   14002537f:	test   r14b,r14b
   140025382:	jne    0x140025414
   140025388:	mov    eax,DWORD PTR [rbx]
   14002538a:	and    eax,0x1fffffff
   14002538f:	cmp    eax,0x19930521
   140025394:	jb     0x140025414
   140025396:	mov    esi,DWORD PTR [rbx+0x20]
   140025399:	test   esi,esi
   14002539b:	je     0x1400253aa
   14002539d:	movsxd rsi,esi
   1400253a0:	call   0x140017074
   1400253a5:	add    rax,rsi
   1400253a8:	jmp    0x1400253ac
   1400253aa:	xor    eax,eax
   1400253ac:	test   rax,rax
   1400253af:	je     0x140025414
   1400253b1:	test   esi,esi
   1400253b3:	je     0x1400253c6
   1400253b5:	call   0x140017074
   1400253ba:	mov    rdx,rax
   1400253bd:	movsxd rax,DWORD PTR [rbx+0x20]
   1400253c1:	add    rdx,rax
   1400253c4:	jmp    0x1400253c8
   1400253c6:	xor    edx,edx
   1400253c8:	mov    rcx,rdi
   1400253cb:	call   0x14002471c
   1400253d0:	test   al,al
   1400253d2:	jne    0x140025414
   1400253d4:	lea    r9,[rbp+0x47]
   1400253d8:	mov    r8,rbx
   1400253db:	mov    rdx,r15
   1400253de:	mov    rcx,r13
   1400253e1:	call   0x140016f88
   1400253e6:	mov    cl,BYTE PTR [rbp+0x6f]
   1400253e9:	mov    r8,QWORD PTR [rbp+0x57]
   1400253ed:	mov    BYTE PTR [rsp+0x40],cl
   1400253f1:	mov    QWORD PTR [rsp+0x38],r15
   1400253f6:	mov    QWORD PTR [rsp+0x30],rbx
   1400253fb:	or     DWORD PTR [rsp+0x28],0xffffffff
   140025400:	and    QWORD PTR [rsp+0x20],0x0
   140025406:	mov    r9,rax
   140025409:	mov    rdx,rdi
   14002540c:	mov    rcx,r13
   14002540f:	call   0x14001750c
   140025414:	call   0x14001ae14
   140025419:	cmp    QWORD PTR [rax+0x108],0x0
   140025421:	je     0x140025428
   140025423:	call   0x14001dd20
   140025428:	mov    rbx,QWORD PTR [rsp+0xe8]
   140025430:	add    rsp,0x90
   140025437:	pop    r15
   140025439:	pop    r14
   14002543b:	pop    r13
   14002543d:	pop    r12
   14002543f:	pop    rdi
   140025440:	pop    rsi
   140025441:	pop    rbp
   140025442:	ret    
   140025443:	cmp    DWORD PTR [rbx+0xc],0x0
   140025447:	jbe    0x140025414
   140025449:	cmp    BYTE PTR [rbp+0x6f],0x0
   14002544d:	jne    0x14002547b
   14002544f:	mov    rax,QWORD PTR [rbp+0x7f]
   140025453:	mov    r9,r15
   140025456:	mov    r8,r12
   140025459:	mov    QWORD PTR [rsp+0x38],rax
   14002545e:	mov    eax,DWORD PTR [rbp+0x77]
   140025461:	mov    rdx,r13
   140025464:	mov    DWORD PTR [rsp+0x30],eax
   140025468:	mov    rcx,rdi
   14002546b:	mov    DWORD PTR [rsp+0x28],esi
   14002546f:	mov    QWORD PTR [rsp+0x20],rbx
   140025474:	call   0x140024d7c
   140025479:	jmp    0x140025414
   14002547b:	call   0x14001dcfc
   140025480:	int3   
   140025481:	int3   
   140025482:	int3   
   140025483:	int3   
   140025484:	rex push rbx
   140025486:	sub    rsp,0x20
   14002548a:	mov    rbx,rcx
   14002548d:	call   0x140024174
   140025492:	lea    r11,[rip+0xdc47]        # 0x1400330e0
   140025499:	mov    QWORD PTR [rbx],r11
   14002549c:	mov    rax,rbx
   14002549f:	add    rsp,0x20
   1400254a3:	pop    rbx
   1400254a4:	ret    
   1400254a5:	int3   
   1400254a6:	int3   
   1400254a7:	int3   
   1400254a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400254ad:	mov    QWORD PTR [rsp+0x10],rbp
   1400254b2:	mov    QWORD PTR [rsp+0x18],rsi
   1400254b7:	push   rdi
   1400254b8:	push   r12
   1400254ba:	push   r14
   1400254bc:	sub    rsp,0x40
   1400254c0:	mov    rbp,r9
   1400254c3:	mov    r12,r8
   1400254c6:	mov    rsi,rdx
   1400254c9:	mov    rbx,rcx
   1400254cc:	call   0x14001ae14
   1400254d1:	mov    rdi,QWORD PTR [rsp+0x80]
   1400254d9:	cmp    DWORD PTR [rax+0x2c0],0x0
   1400254e0:	mov    edx,0x1fffffff
   1400254e5:	mov    r8d,0x80000029
   1400254eb:	mov    r9d,0x80000026
   1400254f1:	mov    r14d,0x1
   1400254f7:	jne    0x140025531
   1400254f9:	cmp    DWORD PTR [rbx],0xe06d7363
   1400254ff:	je     0x140025531
   140025501:	cmp    DWORD PTR [rbx],r8d
   140025504:	jne    0x140025516
   140025506:	cmp    DWORD PTR [rbx+0x18],0xf
   14002550a:	jne    0x140025516
   14002550c:	cmp    QWORD PTR [rbx+0x60],0x19930520
   140025514:	je     0x140025531
   140025516:	cmp    DWORD PTR [rbx],r9d
   140025519:	je     0x140025531
   14002551b:	mov    ecx,DWORD PTR [rdi]
   14002551d:	and    ecx,edx
   14002551f:	cmp    ecx,0x19930522
   140025525:	jb     0x140025531
   140025527:	test   BYTE PTR [rdi+0x24],r14b
   14002552b:	jne    0x1400256b1
   140025531:	mov    eax,DWORD PTR [rbx+0x4]
   140025534:	test   al,0x66
   140025536:	je     0x1400255cf
   14002553c:	cmp    DWORD PTR [rdi+0x4],0x0
   140025540:	je     0x1400256b1
   140025546:	cmp    DWORD PTR [rsp+0x88],0x0
   14002554e:	jne    0x1400256b1
   140025554:	and    eax,0x20
   140025557:	je     0x140025598
   140025559:	cmp    DWORD PTR [rbx],r9d
   14002555c:	jne    0x140025598
   14002555e:	mov    r8,QWORD PTR [r12+0xf8]
   140025566:	mov    rdx,rbp
   140025569:	mov    rcx,rdi
   14002556c:	call   0x140024234
   140025571:	mov    ebx,eax
   140025573:	cmp    eax,0xffffffff
   140025576:	jl     0x14002557d
   140025578:	cmp    eax,DWORD PTR [rdi+0x4]
   14002557b:	jl     0x140025582
   14002557d:	call   0x14001dd20
   140025582:	mov    r9d,ebx
   140025585:	mov    rcx,rsi
   140025588:	mov    rdx,rbp
   14002558b:	mov    r8,rdi
   14002558e:	call   0x140024528
   140025593:	jmp    0x1400256b1
   140025598:	test   eax,eax
   14002559a:	je     0x1400255bc
   14002559c:	cmp    DWORD PTR [rbx],r8d
   14002559f:	jne    0x1400255bc
   1400255a1:	mov    esi,DWORD PTR [rbx+0x38]
   1400255a4:	cmp    esi,0xffffffff
   1400255a7:	jl     0x1400255ae
   1400255a9:	cmp    esi,DWORD PTR [rdi+0x4]
   1400255ac:	jl     0x1400255b3
   1400255ae:	call   0x14001dd20
   1400255b3:	mov    rcx,QWORD PTR [rbx+0x28]
   1400255b7:	mov    r9d,esi
   1400255ba:	jmp    0x140025588
   1400255bc:	mov    r8,rdi
   1400255bf:	mov    rdx,rbp
   1400255c2:	mov    rcx,rsi
   1400255c5:	call   0x1400170dc
   1400255ca:	jmp    0x1400256b1
   1400255cf:	cmp    DWORD PTR [rdi+0xc],0x0
   1400255d3:	jne    0x140025603
   1400255d5:	mov    eax,DWORD PTR [rdi]
   1400255d7:	and    eax,edx
   1400255d9:	cmp    eax,0x19930521
   1400255de:	jb     0x1400256b1
   1400255e4:	cmp    DWORD PTR [rdi+0x20],0x0
   1400255e8:	je     0x1400255f8
   1400255ea:	call   0x140017074
   1400255ef:	movsxd rcx,DWORD PTR [rdi+0x20]
   1400255f3:	add    rax,rcx
   1400255f6:	jmp    0x1400255fa
   1400255f8:	xor    eax,eax
   1400255fa:	test   rax,rax
   1400255fd:	je     0x1400256b1
   140025603:	cmp    DWORD PTR [rbx],0xe06d7363
   140025609:	jne    0x140025678
   14002560b:	cmp    DWORD PTR [rbx+0x18],0x3
   14002560f:	jb     0x140025678
   140025611:	cmp    DWORD PTR [rbx+0x20],0x19930522
   140025618:	jbe    0x140025678
   14002561a:	mov    rax,QWORD PTR [rbx+0x30]
   14002561e:	cmp    DWORD PTR [rax+0x8],0x0
   140025622:	je     0x140025636
   140025624:	call   0x14001708c
   140025629:	mov    rcx,QWORD PTR [rbx+0x30]
   14002562d:	movsxd r11,DWORD PTR [rcx+0x8]
   140025631:	add    r11,rax
   140025634:	jmp    0x140025639
   140025636:	xor    r11d,r11d
   140025639:	test   r11,r11
   14002563c:	je     0x140025678
   14002563e:	movzx  eax,BYTE PTR [rsp+0x98]
   140025646:	mov    r9,rbp
   140025649:	mov    r8,r12
   14002564c:	mov    DWORD PTR [rsp+0x38],eax
   140025650:	mov    rax,QWORD PTR [rsp+0x90]
   140025658:	mov    rdx,rsi
   14002565b:	mov    QWORD PTR [rsp+0x30],rax
   140025660:	mov    eax,DWORD PTR [rsp+0x88]
   140025667:	mov    rcx,rbx
   14002566a:	mov    DWORD PTR [rsp+0x28],eax
   14002566e:	mov    QWORD PTR [rsp+0x20],rdi
   140025673:	call   r11
   140025676:	jmp    0x1400256b4
   140025678:	mov    rax,QWORD PTR [rsp+0x90]
   140025680:	mov    r9,rbp
   140025683:	mov    r8,r12
   140025686:	mov    QWORD PTR [rsp+0x38],rax
   14002568b:	mov    eax,DWORD PTR [rsp+0x88]
   140025692:	mov    rdx,rsi
   140025695:	mov    DWORD PTR [rsp+0x30],eax
   140025699:	mov    al,BYTE PTR [rsp+0x98]
   1400256a0:	mov    rcx,rbx
   1400256a3:	mov    BYTE PTR [rsp+0x28],al
   1400256a7:	mov    QWORD PTR [rsp+0x20],rdi
   1400256ac:	call   0x140024fb4
   1400256b1:	mov    eax,r14d
   1400256b4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400256b9:	mov    rbp,QWORD PTR [rsp+0x68]
   1400256be:	mov    rsi,QWORD PTR [rsp+0x70]
   1400256c3:	add    rsp,0x40
   1400256c7:	pop    r14
   1400256c9:	pop    r12
   1400256cb:	pop    rdi
   1400256cc:	ret    
   1400256cd:	int3   
   1400256ce:	int3   
   1400256cf:	int3   
   1400256d0:	rex push rbx
   1400256d2:	sub    rsp,0x20
   1400256d6:	call   0x14001ad90
   1400256db:	mov    rbx,rax
   1400256de:	test   rax,rax
   1400256e1:	jne    0x1400256f2
   1400256e3:	call   0x14001583c
   1400256e8:	mov    DWORD PTR [rax],0xc
   1400256ee:	xor    eax,eax
   1400256f0:	jmp    0x140025710
   1400256f2:	cmp    QWORD PTR [rax+0x78],0x0
   1400256f7:	jne    0x14002570c
   1400256f9:	mov    ecx,0x24
   1400256fe:	call   0x140020c28
   140025703:	mov    QWORD PTR [rbx+0x78],rax
   140025707:	test   rax,rax
   14002570a:	je     0x1400256e3
   14002570c:	mov    rax,QWORD PTR [rbx+0x78]
   140025710:	add    rsp,0x20
   140025714:	pop    rbx
   140025715:	ret    
   140025716:	int3   
   140025717:	int3   
   140025718:	rex push rbx
   14002571a:	sub    rsp,0x20
   14002571e:	test   BYTE PTR [rdx+0x18],0x40
   140025722:	mov    rbx,r8
   140025725:	je     0x140025733
   140025727:	cmp    QWORD PTR [rdx+0x10],0x0
   14002572c:	jne    0x140025733
   14002572e:	inc    DWORD PTR [r8]
   140025731:	jmp    0x140025749
   140025733:	call   0x140028e8c
   140025738:	mov    ecx,0xffff
   14002573d:	cmp    ax,cx
   140025740:	jne    0x140025747
   140025742:	or     DWORD PTR [rbx],0xffffffff
   140025745:	jmp    0x140025749
   140025747:	inc    DWORD PTR [rbx]
   140025749:	add    rsp,0x20
   14002574d:	pop    rbx
   14002574e:	ret    
   14002574f:	int3   
   140025750:	test   edx,edx
   140025752:	jle    0x1400257a0
   140025754:	mov    QWORD PTR [rsp+0x8],rbx
   140025759:	mov    QWORD PTR [rsp+0x10],rbp
   14002575e:	mov    QWORD PTR [rsp+0x18],rsi
   140025763:	push   rdi
   140025764:	sub    rsp,0x20
   140025768:	mov    rdi,r9
   14002576b:	mov    rsi,r8
   14002576e:	mov    ebx,edx
   140025770:	movzx  ebp,cx
   140025773:	mov    r8,rdi
   140025776:	mov    rdx,rsi
   140025779:	movzx  ecx,bp
   14002577c:	dec    ebx
   14002577e:	call   0x140025718
   140025783:	cmp    DWORD PTR [rdi],0xffffffff
   140025786:	je     0x14002578c
   140025788:	test   ebx,ebx
   14002578a:	jg     0x140025773
   14002578c:	mov    rbx,QWORD PTR [rsp+0x30]
   140025791:	mov    rbp,QWORD PTR [rsp+0x38]
   140025796:	mov    rsi,QWORD PTR [rsp+0x40]
   14002579b:	add    rsp,0x20
   14002579f:	pop    rdi
   1400257a0:	ret    
   1400257a1:	int3   
   1400257a2:	int3   
   1400257a3:	int3   
   1400257a4:	mov    QWORD PTR [rsp+0x18],rbx
   1400257a9:	push   rbp
   1400257aa:	push   rsi
   1400257ab:	push   rdi
   1400257ac:	push   r12
   1400257ae:	push   r13
   1400257b0:	push   r14
   1400257b2:	push   r15
   1400257b4:	lea    rbp,[rsp-0x3e0]
   1400257bc:	sub    rsp,0x4e0
   1400257c3:	mov    rax,QWORD PTR [rip+0x1a166]        # 0x14003f930
   1400257ca:	xor    rax,rsp
   1400257cd:	mov    QWORD PTR [rbp+0x3d0],rax
   1400257d4:	xor    eax,eax
   1400257d6:	mov    rbx,rcx
   1400257d9:	mov    QWORD PTR [rsp+0x78],rcx
   1400257de:	mov    QWORD PTR [rbp-0x80],rdx
   1400257e2:	lea    rcx,[rbp-0x70]
   1400257e6:	mov    rdx,r8
   1400257e9:	mov    r14,r9
   1400257ec:	mov    QWORD PTR [rsp+0x50],r9
   1400257f1:	mov    DWORD PTR [rsp+0x70],eax
   1400257f5:	mov    r12d,eax
   1400257f8:	mov    DWORD PTR [rsp+0x58],eax
   1400257fc:	mov    edi,eax
   1400257fe:	mov    DWORD PTR [rsp+0x48],eax
   140025802:	mov    DWORD PTR [rsp+0x4c],eax
   140025806:	mov    DWORD PTR [rsp+0x6c],eax
   14002580a:	mov    DWORD PTR [rsp+0x44],eax
   14002580e:	call   0x140012690
   140025813:	call   0x14001583c
   140025818:	xor    r10d,r10d
   14002581b:	mov    QWORD PTR [rbp-0x48],rax
   14002581f:	test   rbx,rbx
   140025822:	jne    0x140025850
   140025824:	call   0x14001583c
   140025829:	mov    DWORD PTR [rax],0x16
   14002582f:	call   0x140019f74
   140025834:	xor    r11d,r11d
   140025837:	cmp    BYTE PTR [rbp-0x58],r11b
   14002583b:	je     0x140025848
   14002583d:	mov    rax,QWORD PTR [rbp-0x60]
   140025841:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140025848:	or     eax,0xffffffff
   14002584b:	jmp    0x1400262ac
   140025850:	mov    r8,QWORD PTR [rbp-0x80]
   140025854:	test   r8,r8
   140025857:	je     0x140025824
   140025859:	movzx  r13d,WORD PTR [r8]
   14002585d:	mov    edx,r10d
   140025860:	mov    r15d,r10d
   140025863:	mov    r9d,r10d
   140025866:	mov    QWORD PTR [rbp-0x50],r10
   14002586a:	mov    DWORD PTR [rsp+0x40],edx
   14002586e:	test   r13w,r13w
   140025872:	je     0x140026299
   140025878:	mov    rbx,QWORD PTR [rbp-0x40]
   14002587c:	or     esi,0xffffffff
   14002587f:	lea    ecx,[rsi+0x59]
   140025882:	lea    r11d,[rsi+0x21]
   140025886:	add    r8,0x2
   14002588a:	mov    QWORD PTR [rbp-0x80],r8
   14002588e:	test   edx,edx
   140025890:	js     0x14002628e
   140025896:	movzx  eax,r13w
   14002589a:	sub    ax,r11w
   14002589e:	cmp    ax,cx
   1400258a1:	ja     0x1400258b8
   1400258a3:	lea    rcx,[rip+0xd9b6]        # 0x140033260
   1400258aa:	movzx  eax,r13w
   1400258ae:	movzx  ecx,BYTE PTR [rax+rcx*1-0x20]
   1400258b3:	and    ecx,0xf
   1400258b6:	jmp    0x1400258bb
   1400258b8:	mov    ecx,r10d
   1400258bb:	movsxd rax,ecx
   1400258be:	lea    rcx,[rax+rax*8]
   1400258c2:	movsxd rax,r9d
   1400258c5:	add    rcx,rax
   1400258c8:	lea    rax,[rip+0xd991]        # 0x140033260
   1400258cf:	movzx  r9d,BYTE PTR [rcx+rax*1]
   1400258d4:	shr    r9d,0x4
   1400258d8:	mov    DWORD PTR [rsp+0x68],r9d
   1400258dd:	cmp    r9d,0x8
   1400258e1:	je     0x1400262d6
   1400258e7:	mov    ecx,r9d
   1400258ea:	test   r9d,r9d
   1400258ed:	je     0x14002613d
   1400258f3:	dec    ecx
   1400258f5:	je     0x140026248
   1400258fb:	dec    ecx
   1400258fd:	je     0x1400261fb
   140025903:	dec    ecx
   140025905:	je     0x1400261b0
   14002590b:	dec    ecx
   14002590d:	je     0x1400261a3
   140025913:	dec    ecx
   140025915:	je     0x140026160
   14002591b:	dec    ecx
   14002591d:	je     0x14002604a
   140025923:	dec    ecx
   140025925:	jne    0x14002627b
   14002592b:	movzx  eax,r13w
   14002592f:	mov    ecx,0x64
   140025934:	cmp    eax,ecx
   140025936:	jg     0x140025b4e
   14002593c:	je     0x140025c77
   140025942:	cmp    eax,0x41
   140025945:	je     0x140025b17
   14002594b:	cmp    eax,0x43
   14002594e:	je     0x140025aa5
   140025954:	cmp    eax,0x45
   140025957:	je     0x140025b17
   14002595d:	cmp    eax,0x47
   140025960:	je     0x140025b17
   140025966:	cmp    eax,0x53
   140025969:	je     0x140025a30
   14002596f:	cmp    eax,0x58
   140025972:	je     0x140025bf3
   140025978:	cmp    eax,0x5a
   14002597b:	je     0x1400259cc
   14002597d:	cmp    eax,0x61
   140025980:	je     0x140025b22
   140025986:	cmp    eax,0x63
   140025989:	je     0x140025ab1
   14002598f:	mov    r13d,DWORD PTR [rsp+0x44]
   140025994:	mov    edi,0x2d
   140025999:	cmp    DWORD PTR [rsp+0x6c],r10d
   14002599e:	jne    0x140026001
   1400259a4:	test   r12b,0x40
   1400259a8:	je     0x140025edd
   1400259ae:	bt     r12d,0x8
   1400259b3:	jae    0x140025eaf
   1400259b9:	mov    WORD PTR [rsp+0x5c],di
   1400259be:	mov    edi,0x1
   1400259c3:	mov    DWORD PTR [rsp+0x4c],edi
   1400259c7:	jmp    0x140025ee1
   1400259cc:	mov    rax,QWORD PTR [r14]
   1400259cf:	add    r14,0x8
   1400259d3:	mov    QWORD PTR [rsp+0x50],r14
   1400259d8:	test   rax,rax
   1400259db:	je     0x140025a16
   1400259dd:	mov    rbx,QWORD PTR [rax+0x8]
   1400259e1:	test   rbx,rbx
   1400259e4:	je     0x140025a16
   1400259e6:	mov    edi,0x2d
   1400259eb:	bt     r12d,0xb
   1400259f0:	jae    0x140025a08
   1400259f2:	movsx  eax,WORD PTR [rax]
   1400259f5:	lea    r13d,[rdi-0x2c]
   1400259f9:	cdq    
   1400259fa:	mov    DWORD PTR [rsp+0x44],r13d
   1400259ff:	sub    eax,edx
   140025a01:	sar    eax,1
   140025a03:	mov    r15d,eax
   140025a06:	jmp    0x140025999
   140025a08:	movsx  r15d,WORD PTR [rax]
   140025a0c:	mov    r13d,r10d
   140025a0f:	mov    DWORD PTR [rsp+0x44],r10d
   140025a14:	jmp    0x140025999
   140025a16:	mov    rbx,QWORD PTR [rip+0x1b1d3]        # 0x140040bf0
   140025a1d:	mov    rcx,rbx
   140025a20:	call   0x14001dae0
   140025a25:	xor    r10d,r10d
   140025a28:	mov    r15,rax
   140025a2b:	jmp    0x14002598f
   140025a30:	test   r12d,0x830
   140025a37:	jne    0x140025a3c
   140025a39:	or     r12d,r11d
   140025a3c:	cmp    DWORD PTR [rsp+0x48],esi
   140025a40:	mov    rbx,QWORD PTR [r14]
   140025a43:	mov    eax,0x7fffffff
   140025a48:	cmove  edi,eax
   140025a4b:	add    r14,0x8
   140025a4f:	mov    QWORD PTR [rsp+0x50],r14
   140025a54:	test   r11b,r12b
   140025a57:	je     0x140025bb0
   140025a5d:	test   rbx,rbx
   140025a60:	mov    r15d,r10d
   140025a63:	cmove  rbx,QWORD PTR [rip+0x1b185]        # 0x140040bf0
   140025a6b:	mov    rsi,rbx
   140025a6e:	test   edi,edi
   140025a70:	jle    0x14002598f
   140025a76:	cmp    BYTE PTR [rsi],r10b
   140025a79:	je     0x14002598f
   140025a7f:	movzx  ecx,BYTE PTR [rsi]
   140025a82:	lea    rdx,[rbp-0x70]
   140025a86:	call   0x140020e3c
   140025a8b:	xor    r10d,r10d
   140025a8e:	test   eax,eax
   140025a90:	je     0x140025a95
   140025a92:	inc    rsi
   140025a95:	inc    r15d
   140025a98:	inc    rsi
   140025a9b:	cmp    r15d,edi
   140025a9e:	jl     0x140025a76
   140025aa0:	jmp    0x14002598f
   140025aa5:	test   r12d,0x830
   140025aac:	jne    0x140025ab1
   140025aae:	or     r12d,r11d
   140025ab1:	movzx  eax,WORD PTR [r14]
   140025ab5:	add    r14,0x8
   140025ab9:	mov    r13d,0x1
   140025abf:	mov    WORD PTR [rsp+0x60],ax
   140025ac4:	mov    DWORD PTR [rsp+0x44],r13d
   140025ac9:	mov    QWORD PTR [rsp+0x50],r14
   140025ace:	test   r11b,r12b
   140025ad1:	je     0x140025b07
   140025ad3:	mov    BYTE PTR [rsp+0x64],al
   140025ad7:	mov    rax,QWORD PTR [rbp-0x70]
   140025adb:	mov    BYTE PTR [rsp+0x65],r10b
   140025ae0:	movsxd r8,DWORD PTR [rax+0x10c]
   140025ae7:	lea    r9,[rbp-0x70]
   140025aeb:	lea    rdx,[rsp+0x64]
   140025af0:	lea    rcx,[rbp-0x30]
   140025af4:	call   0x14002908c
   140025af9:	xor    r10d,r10d
   140025afc:	test   eax,eax
   140025afe:	jns    0x140025b0b
   140025b00:	mov    DWORD PTR [rsp+0x6c],r13d
   140025b05:	jmp    0x140025b0b
   140025b07:	mov    WORD PTR [rbp-0x30],ax
   140025b0b:	lea    rbx,[rbp-0x30]
   140025b0f:	mov    r15d,r13d
   140025b12:	jmp    0x140025994
   140025b17:	mov    DWORD PTR [rbp-0x78],0x1
   140025b1e:	add    r13w,r11w
   140025b22:	mov    ecx,0x67
   140025b27:	mov    eax,0x200
   140025b2c:	or     r12d,0x40
   140025b30:	lea    rbx,[rbp-0x30]
   140025b34:	mov    esi,eax
   140025b36:	test   edi,edi
   140025b38:	jns    0x140025d9a
   140025b3e:	mov    r15d,0x6
   140025b44:	mov    DWORD PTR [rsp+0x48],r15d
   140025b49:	jmp    0x140025deb
   140025b4e:	cmp    eax,0x65
   140025b51:	jl     0x14002598f
   140025b57:	mov    ecx,0x67
   140025b5c:	cmp    eax,ecx
   140025b5e:	jle    0x140025b27
   140025b60:	mov    ecx,0x69
   140025b65:	cmp    eax,ecx
   140025b67:	je     0x140025c77
   140025b6d:	cmp    eax,0x6e
   140025b70:	je     0x140025c3a
   140025b76:	mov    ecx,0x6f
   140025b7b:	cmp    eax,ecx
   140025b7d:	je     0x140025c25
   140025b83:	cmp    eax,0x70
   140025b86:	je     0x140025be9
   140025b88:	cmp    eax,0x73
   140025b8b:	je     0x140025a3c
   140025b91:	mov    ecx,0x75
   140025b96:	cmp    eax,ecx
   140025b98:	je     0x140025c7b
   140025b9e:	mov    ecx,0x78
   140025ba3:	cmp    eax,ecx
   140025ba5:	jne    0x140025ea0
   140025bab:	lea    eax,[rcx-0x51]
   140025bae:	jmp    0x140025bf8
   140025bb0:	test   rbx,rbx
   140025bb3:	mov    r13d,0x1
   140025bb9:	cmove  rbx,QWORD PTR [rip+0x1b037]        # 0x140040bf8
   140025bc1:	mov    DWORD PTR [rsp+0x44],r13d
   140025bc6:	mov    rax,rbx
   140025bc9:	jmp    0x140025bd7
   140025bcb:	dec    edi
   140025bcd:	cmp    WORD PTR [rax],r10w
   140025bd1:	je     0x140025bdb
   140025bd3:	add    rax,0x2
   140025bd7:	test   edi,edi
   140025bd9:	jne    0x140025bcb
   140025bdb:	sub    rax,rbx
   140025bde:	sar    rax,1
   140025be1:	mov    r15d,eax
   140025be4:	jmp    0x140025994
   140025be9:	mov    edi,0x10
   140025bee:	bts    r12d,0xf
   140025bf3:	mov    eax,0x7
   140025bf8:	mov    r9d,0x10
   140025bfe:	mov    DWORD PTR [rsp+0x70],eax
   140025c02:	mov    esi,0x200
   140025c07:	lea    r13d,[r9+0x20]
   140025c0b:	test   r12b,r12b
   140025c0e:	jns    0x140025c8c
   140025c10:	add    ax,0x51
   140025c14:	mov    WORD PTR [rsp+0x5c],r13w
   140025c1a:	lea    edx,[r9-0xe]
   140025c1e:	mov    WORD PTR [rsp+0x5e],ax
   140025c23:	jmp    0x140025c90
   140025c25:	mov    r9d,0x8
   140025c2b:	test   r12b,r12b
   140025c2e:	jns    0x140025c81
   140025c30:	mov    esi,0x200
   140025c35:	or     r12d,esi
   140025c38:	jmp    0x140025c86
   140025c3a:	mov    rdi,QWORD PTR [r14]
   140025c3d:	add    r14,0x8
   140025c41:	mov    QWORD PTR [rsp+0x50],r14
   140025c46:	call   0x140013778
   140025c4b:	xor    r10d,r10d
   140025c4e:	test   eax,eax
   140025c50:	je     0x1400262d6
   140025c56:	mov    eax,DWORD PTR [rsp+0x40]
   140025c5a:	lea    r11d,[r10+0x20]
   140025c5e:	test   r11b,r12b
   140025c61:	je     0x140025c68
   140025c63:	mov    WORD PTR [rdi],ax
   140025c66:	jmp    0x140025c6a
   140025c68:	mov    DWORD PTR [rdi],eax
   140025c6a:	mov    DWORD PTR [rsp+0x6c],0x1
   140025c72:	jmp    0x140026007
   140025c77:	or     r12d,0x40
   140025c7b:	mov    r9d,0xa
   140025c81:	mov    esi,0x200
   140025c86:	mov    r13d,0x30
   140025c8c:	mov    edx,DWORD PTR [rsp+0x4c]
   140025c90:	mov    eax,0x8000
   140025c95:	test   eax,r12d
   140025c98:	je     0x140025ca3
   140025c9a:	mov    r8,QWORD PTR [r14]
   140025c9d:	add    r14,0x8
   140025ca1:	jmp    0x140025cdc
   140025ca3:	bt     r12d,0xc
   140025ca8:	jb     0x140025c9a
   140025caa:	add    r14,0x8
   140025cae:	test   r11b,r12b
   140025cb1:	je     0x140025ccc
   140025cb3:	mov    QWORD PTR [rsp+0x50],r14
   140025cb8:	test   r12b,0x40
   140025cbc:	je     0x140025cc5
   140025cbe:	movsx  r8,WORD PTR [r14-0x8]
   140025cc3:	jmp    0x140025ce1
   140025cc5:	movzx  r8d,WORD PTR [r14-0x8]
   140025cca:	jmp    0x140025ce1
   140025ccc:	test   r12b,0x40
   140025cd0:	je     0x140025cd8
   140025cd2:	movsxd r8,DWORD PTR [r14-0x8]
   140025cd6:	jmp    0x140025cdc
   140025cd8:	mov    r8d,DWORD PTR [r14-0x8]
   140025cdc:	mov    QWORD PTR [rsp+0x50],r14
   140025ce1:	test   r12b,0x40
   140025ce5:	je     0x140025cf4
   140025ce7:	test   r8,r8
   140025cea:	jns    0x140025cf4
   140025cec:	neg    r8
   140025cef:	bts    r12d,0x8
   140025cf4:	test   eax,r12d
   140025cf7:	jne    0x140025d03
   140025cf9:	bt     r12d,0xc
   140025cfe:	jb     0x140025d03
   140025d00:	mov    r8d,r8d
   140025d03:	test   edi,edi
   140025d05:	jns    0x140025d0e
   140025d07:	mov    edi,0x1
   140025d0c:	jmp    0x140025d17
   140025d0e:	and    r12d,0xfffffff7
   140025d12:	cmp    edi,esi
   140025d14:	cmovg  edi,esi
   140025d17:	mov    r14d,DWORD PTR [rsp+0x70]
   140025d1c:	mov    rax,r8
   140025d1f:	lea    rbx,[rbp+0x1cf]
   140025d26:	neg    rax
   140025d29:	sbb    ecx,ecx
   140025d2b:	and    ecx,edx
   140025d2d:	mov    DWORD PTR [rsp+0x4c],ecx
   140025d31:	mov    ecx,edi
   140025d33:	dec    edi
   140025d35:	test   ecx,ecx
   140025d37:	jg     0x140025d3e
   140025d39:	test   r8,r8
   140025d3c:	je     0x140025d5e
   140025d3e:	xor    edx,edx
   140025d40:	mov    rax,r8
   140025d43:	movsxd rcx,r9d
   140025d46:	div    rcx
   140025d49:	mov    r8,rax
   140025d4c:	lea    eax,[rdx+0x30]
   140025d4f:	cmp    eax,0x39
   140025d52:	jle    0x140025d57
   140025d54:	add    eax,r14d
   140025d57:	mov    BYTE PTR [rbx],al
   140025d59:	dec    rbx
   140025d5c:	jmp    0x140025d31
   140025d5e:	mov    r14,QWORD PTR [rsp+0x50]
   140025d63:	lea    rax,[rbp+0x1cf]
   140025d6a:	mov    DWORD PTR [rsp+0x48],edi
   140025d6e:	sub    eax,ebx
   140025d70:	inc    rbx
   140025d73:	mov    r15d,eax
   140025d76:	test   esi,r12d
   140025d79:	je     0x14002598f
   140025d7f:	test   eax,eax
   140025d81:	je     0x140025d8c
   140025d83:	cmp    BYTE PTR [rbx],r13b
   140025d86:	je     0x14002598f
   140025d8c:	dec    rbx
   140025d8f:	inc    r15d
   140025d92:	mov    BYTE PTR [rbx],r13b
   140025d95:	jmp    0x14002598f
   140025d9a:	jne    0x140025dad
   140025d9c:	cmp    r13w,cx
   140025da0:	jne    0x140025de1
   140025da2:	mov    r15d,0x1
   140025da8:	jmp    0x140025b44
   140025dad:	cmp    edi,eax
   140025daf:	mov    r15d,0xa3
   140025db5:	cmovg  edi,eax
   140025db8:	mov    DWORD PTR [rsp+0x48],edi
   140025dbc:	cmp    edi,r15d
   140025dbf:	jle    0x140025de8
   140025dc1:	add    edi,0x15d
   140025dc7:	movsxd rcx,edi
   140025dca:	call   0x140020c28
   140025dcf:	mov    QWORD PTR [rbp-0x50],rax
   140025dd3:	test   rax,rax
   140025dd6:	je     0x140025b44
   140025ddc:	mov    rbx,rax
   140025ddf:	mov    esi,edi
   140025de1:	mov    r15d,DWORD PTR [rsp+0x48]
   140025de6:	jmp    0x140025deb
   140025de8:	mov    r15d,edi
   140025deb:	mov    rax,QWORD PTR [r14]
   140025dee:	mov    rcx,QWORD PTR [rip+0x1ae3b]        # 0x140040c30
   140025df5:	add    r14,0x8
   140025df9:	mov    QWORD PTR [rsp+0x50],r14
   140025dfe:	movsx  edi,r13b
   140025e02:	movsxd rsi,esi
   140025e05:	mov    QWORD PTR [rbp-0x40],rax
   140025e09:	call   QWORD PTR [rip+0x9459]        # 0x14002f268
   140025e0f:	lea    rcx,[rbp-0x70]
   140025e13:	mov    QWORD PTR [rsp+0x30],rcx
   140025e18:	mov    ecx,DWORD PTR [rbp-0x78]
   140025e1b:	mov    r9d,edi
   140025e1e:	mov    DWORD PTR [rsp+0x28],ecx
   140025e22:	lea    rcx,[rbp-0x40]
   140025e26:	mov    r8,rsi
   140025e29:	mov    rdx,rbx
   140025e2c:	mov    DWORD PTR [rsp+0x20],r15d
   140025e31:	call   rax
   140025e33:	mov    edi,r12d
   140025e36:	and    edi,0x80
   140025e3c:	je     0x140025e59
   140025e3e:	test   r15d,r15d
   140025e41:	jne    0x140025e59
   140025e43:	mov    rcx,QWORD PTR [rip+0x1adfe]        # 0x140040c48
   140025e4a:	call   QWORD PTR [rip+0x9418]        # 0x14002f268
   140025e50:	lea    rdx,[rbp-0x70]
   140025e54:	mov    rcx,rbx
   140025e57:	call   rax
   140025e59:	mov    ecx,0x67
   140025e5e:	cmp    r13w,cx
   140025e62:	jne    0x140025e7e
   140025e64:	test   edi,edi
   140025e66:	jne    0x140025e7e
   140025e68:	mov    rcx,QWORD PTR [rip+0x1add1]        # 0x140040c40
   140025e6f:	call   QWORD PTR [rip+0x93f3]        # 0x14002f268
   140025e75:	lea    rdx,[rbp-0x70]
   140025e79:	mov    rcx,rbx
   140025e7c:	call   rax
   140025e7e:	mov    edi,0x2d
   140025e83:	cmp    BYTE PTR [rbx],dil
   140025e86:	jne    0x140025e90
   140025e88:	bts    r12d,0x8
   140025e8d:	inc    rbx
   140025e90:	mov    rcx,rbx
   140025e93:	call   0x14001dae0
   140025e98:	xor    r10d,r10d
   140025e9b:	mov    r15d,eax
   140025e9e:	jmp    0x140025ea5
   140025ea0:	mov    edi,0x2d
   140025ea5:	mov    r13d,DWORD PTR [rsp+0x44]
   140025eaa:	jmp    0x140025999
   140025eaf:	test   r12b,0x1
   140025eb3:	je     0x140025ec4
   140025eb5:	mov    eax,0x2b
   140025eba:	mov    WORD PTR [rsp+0x5c],ax
   140025ebf:	jmp    0x1400259be
   140025ec4:	test   r12b,0x2
   140025ec8:	je     0x140025edd
   140025eca:	mov    eax,0x20
   140025ecf:	mov    WORD PTR [rsp+0x5c],ax
   140025ed4:	lea    edi,[rax-0x1f]
   140025ed7:	mov    DWORD PTR [rsp+0x4c],edi
   140025edb:	jmp    0x140025ee6
   140025edd:	mov    edi,DWORD PTR [rsp+0x4c]
   140025ee1:	mov    eax,0x20
   140025ee6:	mov    r14d,DWORD PTR [rsp+0x58]
   140025eeb:	mov    rsi,QWORD PTR [rsp+0x78]
   140025ef0:	sub    r14d,r15d
   140025ef3:	sub    r14d,edi
   140025ef6:	test   r12b,0xc
   140025efa:	jne    0x140025f0e
   140025efc:	lea    r9,[rsp+0x40]
   140025f01:	mov    ecx,eax
   140025f03:	mov    r8,rsi
   140025f06:	mov    edx,r14d
   140025f09:	call   0x140025750
   140025f0e:	mov    rax,QWORD PTR [rbp-0x48]
   140025f12:	lea    r9,[rsp+0x40]
   140025f17:	lea    rcx,[rsp+0x5c]
   140025f1c:	mov    r8,rsi
   140025f1f:	mov    edx,edi
   140025f21:	mov    QWORD PTR [rsp+0x20],rax
   140025f26:	call   0x14001e634
   140025f2b:	test   r12b,0x8
   140025f2f:	je     0x140025f4c
   140025f31:	test   r12b,0x4
   140025f35:	jne    0x140025f4c
   140025f37:	lea    r9,[rsp+0x40]
   140025f3c:	mov    ecx,0x30
   140025f41:	mov    r8,rsi
   140025f44:	mov    edx,r14d
   140025f47:	call   0x140025750
   140025f4c:	test   r13d,r13d
   140025f4f:	jne    0x140025fb7
   140025f51:	test   r15d,r15d
   140025f54:	jle    0x140025fb7
   140025f56:	mov    rdi,rbx
   140025f59:	mov    esi,r15d
   140025f5c:	mov    rax,QWORD PTR [rbp-0x70]
   140025f60:	lea    r9,[rbp-0x70]
   140025f64:	lea    rcx,[rsp+0x60]
   140025f69:	movsxd r8,DWORD PTR [rax+0x10c]
   140025f70:	mov    rdx,rdi
   140025f73:	dec    esi
   140025f75:	call   0x14002908c
   140025f7a:	xor    r10d,r10d
   140025f7d:	movsxd r13,eax
   140025f80:	test   eax,eax
   140025f82:	jle    0x140025fa9
   140025f84:	mov    rdx,QWORD PTR [rsp+0x78]
   140025f89:	movzx  ecx,WORD PTR [rsp+0x60]
   140025f8e:	lea    r8,[rsp+0x40]
   140025f93:	call   0x140025718
   140025f98:	add    rdi,r13
   140025f9b:	xor    r10d,r10d
   140025f9e:	test   esi,esi
   140025fa0:	jg     0x140025f5c
   140025fa2:	mov    rsi,QWORD PTR [rsp+0x78]
   140025fa7:	jmp    0x140025fd6
   140025fa9:	mov    rsi,QWORD PTR [rsp+0x78]
   140025fae:	or     edx,0xffffffff
   140025fb1:	mov    DWORD PTR [rsp+0x40],edx
   140025fb5:	jmp    0x140025fda
   140025fb7:	mov    rax,QWORD PTR [rbp-0x48]
   140025fbb:	lea    r9,[rsp+0x40]
   140025fc0:	mov    r8,rsi
   140025fc3:	mov    edx,r15d
   140025fc6:	mov    rcx,rbx
   140025fc9:	mov    QWORD PTR [rsp+0x20],rax
   140025fce:	call   0x14001e634
   140025fd3:	xor    r10d,r10d
   140025fd6:	mov    edx,DWORD PTR [rsp+0x40]
   140025fda:	test   edx,edx
   140025fdc:	js     0x14002603d
   140025fde:	test   r12b,0x4
   140025fe2:	je     0x14002603d
   140025fe4:	lea    r9,[rsp+0x40]
   140025fe9:	mov    ecx,0x20
   140025fee:	mov    r8,rsi
   140025ff1:	mov    edx,r14d
   140025ff4:	call   0x140025750
   140025ff9:	mov    r14,QWORD PTR [rsp+0x50]
   140025ffe:	xor    r10d,r10d
   140026001:	mov    r11d,0x20
   140026007:	mov    edx,DWORD PTR [rsp+0x40]
   14002600b:	mov    rax,QWORD PTR [rbp-0x50]
   14002600f:	test   rax,rax
   140026012:	je     0x14002626b
   140026018:	mov    rcx,rax
   14002601b:	call   0x1400130a8
   140026020:	mov    edi,DWORD PTR [rsp+0x48]
   140026024:	xor    r10d,r10d
   140026027:	mov    QWORD PTR [rbp-0x50],r10
   14002602b:	or     esi,0xffffffff
   14002602e:	mov    edx,DWORD PTR [rsp+0x40]
   140026032:	mov    r11d,0x20
   140026038:	jmp    0x140026272
   14002603d:	mov    r14,QWORD PTR [rsp+0x50]
   140026042:	mov    r11d,0x20
   140026048:	jmp    0x14002600b
   14002604a:	movzx  eax,r13w
   14002604e:	cmp    eax,0x49
   140026051:	je     0x1400260a3
   140026053:	cmp    eax,0x68
   140026056:	je     0x14002609b
   140026058:	mov    ecx,0x6c
   14002605d:	cmp    eax,ecx
   14002605f:	je     0x140026079
   140026061:	mov    ecx,0x58
   140026066:	cmp    eax,0x77
   140026069:	jne    0x140026280
   14002606f:	bts    r12d,0xb
   140026074:	jmp    0x140026280
   140026079:	cmp    WORD PTR [r8],cx
   14002607d:	mov    ecx,0x58
   140026082:	jne    0x140026092
   140026084:	add    r8,0x2
   140026088:	bts    r12d,0xc
   14002608d:	jmp    0x140026280
   140026092:	or     r12d,0x10
   140026096:	jmp    0x140026280
   14002609b:	or     r12d,r11d
   14002609e:	jmp    0x14002627b
   1400260a3:	bts    r12d,0xf
   1400260a8:	cmp    WORD PTR [r8],0x36
   1400260ad:	jne    0x1400260c5
   1400260af:	cmp    WORD PTR [r8+0x2],0x34
   1400260b5:	jne    0x1400260c5
   1400260b7:	add    r8,0x4
   1400260bb:	bts    r12d,0xf
   1400260c0:	jmp    0x14002627b
   1400260c5:	cmp    WORD PTR [r8],0x33
   1400260ca:	jne    0x1400260e2
   1400260cc:	cmp    WORD PTR [r8+0x2],0x32
   1400260d2:	jne    0x1400260e2
   1400260d4:	add    r8,0x4
   1400260d8:	btr    r12d,0xf
   1400260dd:	jmp    0x14002627b
   1400260e2:	mov    eax,0x64
   1400260e7:	cmp    WORD PTR [r8],ax
   1400260eb:	je     0x14002627b
   1400260f1:	mov    eax,0x69
   1400260f6:	cmp    WORD PTR [r8],ax
   1400260fa:	je     0x14002627b
   140026100:	mov    eax,0x6f
   140026105:	cmp    WORD PTR [r8],ax
   140026109:	je     0x14002627b
   14002610f:	mov    eax,0x75
   140026114:	lea    ecx,[rax-0x1d]
   140026117:	cmp    WORD PTR [r8],ax
   14002611b:	je     0x140026280
   140026121:	lea    eax,[rcx+0x20]
   140026124:	cmp    WORD PTR [r8],ax
   140026128:	je     0x140026280
   14002612e:	cmp    WORD PTR [r8],cx
   140026132:	je     0x140026280
   140026138:	mov    DWORD PTR [rsp+0x68],r10d
   14002613d:	mov    rdx,QWORD PTR [rsp+0x78]
   140026142:	lea    r8,[rsp+0x40]
   140026147:	movzx  ecx,r13w
   14002614b:	mov    DWORD PTR [rsp+0x44],0x1
   140026153:	call   0x140025718
   140026158:	xor    r10d,r10d
   14002615b:	jmp    0x14002602e
   140026160:	cmp    r13w,0x2a
   140026165:	jne    0x14002618f
   140026167:	mov    edi,DWORD PTR [r14]
   14002616a:	add    r14,0x8
   14002616e:	mov    ecx,0x58
   140026173:	mov    QWORD PTR [rsp+0x50],r14
   140026178:	mov    DWORD PTR [rsp+0x48],edi
   14002617c:	test   edi,edi
   14002617e:	jns    0x140026280
   140026184:	mov    edi,esi
   140026186:	mov    DWORD PTR [rsp+0x48],esi
   14002618a:	jmp    0x140026280
   14002618f:	lea    ecx,[rdi+rdi*4]
   140026192:	movzx  eax,r13w
   140026196:	lea    edi,[rax+rcx*2-0x30]
   14002619a:	mov    DWORD PTR [rsp+0x48],edi
   14002619e:	jmp    0x14002627b
   1400261a3:	mov    edi,r10d
   1400261a6:	mov    DWORD PTR [rsp+0x48],r10d
   1400261ab:	jmp    0x14002627b
   1400261b0:	cmp    r13w,0x2a
   1400261b5:	jne    0x1400261e3
   1400261b7:	mov    eax,DWORD PTR [r14]
   1400261ba:	add    r14,0x8
   1400261be:	mov    ecx,0x58
   1400261c3:	mov    QWORD PTR [rsp+0x50],r14
   1400261c8:	mov    DWORD PTR [rsp+0x58],eax
   1400261cc:	test   eax,eax
   1400261ce:	jns    0x140026280
   1400261d4:	or     r12d,0x4
   1400261d8:	neg    eax
   1400261da:	mov    DWORD PTR [rsp+0x58],eax
   1400261de:	jmp    0x140026280
   1400261e3:	mov    eax,DWORD PTR [rsp+0x58]
   1400261e7:	lea    ecx,[rax+rax*4]
   1400261ea:	movzx  eax,r13w
   1400261ee:	lea    eax,[rax+rcx*2-0x30]
   1400261f2:	mov    DWORD PTR [rsp+0x58],eax
   1400261f6:	jmp    0x14002627b
   1400261fb:	movzx  eax,r13w
   1400261ff:	cmp    eax,r11d
   140026202:	je     0x140026242
   140026204:	cmp    eax,0x23
   140026207:	je     0x14002623b
   140026209:	mov    ecx,0x2b
   14002620e:	cmp    eax,ecx
   140026210:	je     0x140026235
   140026212:	mov    ecx,0x2d
   140026217:	cmp    eax,ecx
   140026219:	je     0x14002622f
   14002621b:	mov    ecx,0x30
   140026220:	cmp    eax,ecx
   140026222:	mov    ecx,0x58
   140026227:	jne    0x140026280
   140026229:	or     r12d,0x8
   14002622d:	jmp    0x140026280
   14002622f:	or     r12d,0x4
   140026233:	jmp    0x14002627b
   140026235:	or     r12d,0x1
   140026239:	jmp    0x14002627b
   14002623b:	bts    r12d,0x7
   140026240:	jmp    0x14002627b
   140026242:	or     r12d,0x2
   140026246:	jmp    0x14002627b
   140026248:	mov    DWORD PTR [rbp-0x78],r10d
   14002624c:	mov    DWORD PTR [rsp+0x6c],r10d
   140026251:	mov    DWORD PTR [rsp+0x58],r10d
   140026256:	mov    DWORD PTR [rsp+0x4c],r10d
   14002625b:	mov    r12d,r10d
   14002625e:	mov    edi,esi
   140026260:	mov    DWORD PTR [rsp+0x48],esi
   140026264:	mov    DWORD PTR [rsp+0x44],r10d
   140026269:	jmp    0x14002627b
   14002626b:	mov    edi,DWORD PTR [rsp+0x48]
   14002626f:	or     esi,0xffffffff
   140026272:	mov    r9d,DWORD PTR [rsp+0x68]
   140026277:	mov    r8,QWORD PTR [rbp-0x80]
   14002627b:	mov    ecx,0x58
   140026280:	movzx  r13d,WORD PTR [r8]
   140026284:	test   r13w,r13w
   140026288:	jne    0x140025886
   14002628e:	test   r9d,r9d
   140026291:	je     0x140026299
   140026293:	cmp    r9d,0x7
   140026297:	jne    0x1400262d6
   140026299:	cmp    BYTE PTR [rbp-0x58],r10b
   14002629d:	je     0x1400262aa
   14002629f:	mov    rcx,QWORD PTR [rbp-0x60]
   1400262a3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400262aa:	mov    eax,edx
   1400262ac:	mov    rcx,QWORD PTR [rbp+0x3d0]
   1400262b3:	xor    rcx,rsp
   1400262b6:	call   0x140012670
   1400262bb:	mov    rbx,QWORD PTR [rsp+0x530]
   1400262c3:	add    rsp,0x4e0
   1400262ca:	pop    r15
   1400262cc:	pop    r14
   1400262ce:	pop    r13
   1400262d0:	pop    r12
   1400262d2:	pop    rdi
   1400262d3:	pop    rsi
   1400262d4:	pop    rbp
   1400262d5:	ret    
   1400262d6:	call   0x14001583c
   1400262db:	mov    DWORD PTR [rax],0x16
   1400262e1:	call   0x140019f74
   1400262e6:	xor    r11d,r11d
   1400262e9:	cmp    BYTE PTR [rbp-0x58],r11b
   1400262ed:	je     0x1400262fa
   1400262ef:	mov    rax,QWORD PTR [rbp-0x60]
   1400262f3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400262fa:	mov    eax,esi
   1400262fc:	jmp    0x1400262ac
   1400262fe:	int3   
   1400262ff:	int3   
   140026300:	sub    rsp,0x28
   140026304:	mov    rax,QWORD PTR [rcx]
   140026307:	cmp    DWORD PTR [rax],0xe06d7363
   14002630d:	jne    0x14002633a
   14002630f:	cmp    DWORD PTR [rax+0x18],0x4
   140026313:	jne    0x14002633a
   140026315:	mov    eax,DWORD PTR [rax+0x20]
   140026318:	cmp    eax,0x19930520
   14002631d:	je     0x140026334
   14002631f:	cmp    eax,0x19930521
   140026324:	je     0x140026334
   140026326:	cmp    eax,0x19930522
   14002632b:	je     0x140026334
   14002632d:	cmp    eax,0x1994000
   140026332:	jne    0x14002633a
   140026334:	call   0x14001dcfc
   140026339:	int3   
   14002633a:	xor    eax,eax
   14002633c:	add    rsp,0x28
   140026340:	ret    
   140026341:	int3   
   140026342:	int3   
   140026343:	int3   
   140026344:	sub    rsp,0x28
   140026348:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x140026300
   14002634f:	call   QWORD PTR [rip+0x8fa3]        # 0x14002f2f8
   140026355:	xor    eax,eax
   140026357:	add    rsp,0x28
   14002635b:	ret    
   14002635c:	mov    QWORD PTR [rsp+0x8],rbx
   140026361:	mov    QWORD PTR [rsp+0x10],rbp
   140026366:	mov    QWORD PTR [rsp+0x18],rsi
   14002636b:	push   rdi
   14002636c:	sub    rsp,0x20
   140026370:	mov    rsi,rdx
   140026373:	mov    edi,ecx
   140026375:	call   0x14001ad90
   14002637a:	xor    r9d,r9d
   14002637d:	mov    rbx,rax
   140026380:	test   rax,rax
   140026383:	je     0x140026515
   140026389:	mov    rdx,QWORD PTR [rax+0xa0]
   140026390:	mov    rcx,rdx
   140026393:	cmp    DWORD PTR [rcx],edi
   140026395:	je     0x1400263a7
   140026397:	lea    rax,[rdx+0xc0]
   14002639e:	add    rcx,0x10
   1400263a2:	cmp    rcx,rax
   1400263a5:	jb     0x140026393
   1400263a7:	lea    rax,[rdx+0xc0]
   1400263ae:	cmp    rcx,rax
   1400263b1:	jae    0x1400263b7
   1400263b3:	cmp    DWORD PTR [rcx],edi
   1400263b5:	je     0x1400263ba
   1400263b7:	mov    rcx,r9
   1400263ba:	test   rcx,rcx
   1400263bd:	je     0x140026515
   1400263c3:	mov    r8,QWORD PTR [rcx+0x8]
   1400263c7:	test   r8,r8
   1400263ca:	je     0x140026515
   1400263d0:	cmp    r8,0x5
   1400263d4:	jne    0x1400263e3
   1400263d6:	mov    QWORD PTR [rcx+0x8],r9
   1400263da:	lea    eax,[r8-0x4]
   1400263de:	jmp    0x140026517
   1400263e3:	cmp    r8,0x1
   1400263e7:	jne    0x1400263f1
   1400263e9:	or     eax,0xffffffff
   1400263ec:	jmp    0x140026517
   1400263f1:	mov    rbp,QWORD PTR [rbx+0xa8]
   1400263f8:	mov    QWORD PTR [rbx+0xa8],rsi
   1400263ff:	cmp    DWORD PTR [rcx+0x4],0x8
   140026403:	jne    0x1400264ff
   140026409:	mov    edx,0x30
   14002640e:	mov    rax,QWORD PTR [rbx+0xa0]
   140026415:	add    rdx,0x10
   140026419:	mov    QWORD PTR [rdx+rax*1-0x8],r9
   14002641e:	cmp    rdx,0xc0
   140026425:	jl     0x14002640e
   140026427:	cmp    DWORD PTR [rcx],0xc000008e
   14002642d:	mov    edi,DWORD PTR [rbx+0xb0]
   140026433:	jne    0x140026444
   140026435:	mov    DWORD PTR [rbx+0xb0],0x83
   14002643f:	jmp    0x1400264e9
   140026444:	cmp    DWORD PTR [rcx],0xc0000090
   14002644a:	jne    0x14002645b
   14002644c:	mov    DWORD PTR [rbx+0xb0],0x81
   140026456:	jmp    0x1400264e9
   14002645b:	cmp    DWORD PTR [rcx],0xc0000091
   140026461:	jne    0x14002646f
   140026463:	mov    DWORD PTR [rbx+0xb0],0x84
   14002646d:	jmp    0x1400264e9
   14002646f:	cmp    DWORD PTR [rcx],0xc0000093
   140026475:	jne    0x140026483
   140026477:	mov    DWORD PTR [rbx+0xb0],0x85
   140026481:	jmp    0x1400264e9
   140026483:	cmp    DWORD PTR [rcx],0xc000008d
   140026489:	jne    0x140026497
   14002648b:	mov    DWORD PTR [rbx+0xb0],0x82
   140026495:	jmp    0x1400264e9
   140026497:	cmp    DWORD PTR [rcx],0xc000008f
   14002649d:	jne    0x1400264ab
   14002649f:	mov    DWORD PTR [rbx+0xb0],0x86
   1400264a9:	jmp    0x1400264e9
   1400264ab:	cmp    DWORD PTR [rcx],0xc0000092
   1400264b1:	jne    0x1400264bf
   1400264b3:	mov    DWORD PTR [rbx+0xb0],0x8a
   1400264bd:	jmp    0x1400264e9
   1400264bf:	cmp    DWORD PTR [rcx],0xc00002b5
   1400264c5:	jne    0x1400264d3
   1400264c7:	mov    DWORD PTR [rbx+0xb0],0x8d
   1400264d1:	jmp    0x1400264e9
   1400264d3:	cmp    DWORD PTR [rcx],0xc00002b4
   1400264d9:	mov    eax,edi
   1400264db:	mov    edx,0x8e
   1400264e0:	cmove  eax,edx
   1400264e3:	mov    DWORD PTR [rbx+0xb0],eax
   1400264e9:	mov    edx,DWORD PTR [rbx+0xb0]
   1400264ef:	mov    ecx,0x8
   1400264f4:	call   r8
   1400264f7:	mov    DWORD PTR [rbx+0xb0],edi
   1400264fd:	jmp    0x140026509
   1400264ff:	mov    QWORD PTR [rcx+0x8],r9
   140026503:	mov    ecx,DWORD PTR [rcx+0x4]
   140026506:	call   r8
   140026509:	mov    QWORD PTR [rbx+0xa8],rbp
   140026510:	jmp    0x1400263e9
   140026515:	xor    eax,eax
   140026517:	mov    rbx,QWORD PTR [rsp+0x30]
   14002651c:	mov    rbp,QWORD PTR [rsp+0x38]
   140026521:	mov    rsi,QWORD PTR [rsp+0x40]
   140026526:	add    rsp,0x20
   14002652a:	pop    rdi
   14002652b:	ret    
   14002652c:	mov    rcx,QWORD PTR [rip+0x302ed]        # 0x140056820
   140026533:	xor    r8d,r8d
   140026536:	lea    rax,[rip+0xcc93]        # 0x1400331d0
   14002653d:	test   rcx,rcx
   140026540:	mov    edx,r8d
   140026543:	cmove  rcx,rax
   140026547:	cmp    WORD PTR [rcx],0x20
   14002654b:	ja     0x140026557
   14002654d:	cmp    WORD PTR [rcx],r8w
   140026551:	je     0x14002657f
   140026553:	test   edx,edx
   140026555:	je     0x140026577
   140026557:	cmp    WORD PTR [rcx],0x22
   14002655b:	jne    0x140026567
   14002655d:	test   edx,edx
   14002655f:	mov    eax,r8d
   140026562:	sete   al
   140026565:	mov    edx,eax
   140026567:	add    rcx,0x2
   14002656b:	jmp    0x140026547
   14002656d:	cmp    ax,0x20
   140026571:	ja     0x14002657f
   140026573:	add    rcx,0x2
   140026577:	movzx  eax,WORD PTR [rcx]
   14002657a:	test   ax,ax
   14002657d:	jne    0x14002656d
   14002657f:	mov    rax,rcx
   140026582:	ret    
   140026583:	int3   
   140026584:	mov    rax,rsp
   140026587:	mov    QWORD PTR [rax+0x8],rbx
   14002658b:	mov    QWORD PTR [rax+0x10],rsi
   14002658f:	mov    QWORD PTR [rax+0x18],rdi
   140026593:	mov    QWORD PTR [rax+0x20],r13
   140026597:	push   r14
   140026599:	mov    r11,QWORD PTR [rsp+0x30]
   14002659e:	xor    esi,esi
   1400265a0:	mov    rbx,r9
   1400265a3:	mov    DWORD PTR [r11],esi
   1400265a6:	mov    r10,rdx
   1400265a9:	mov    DWORD PTR [r9],0x1
   1400265b0:	test   rdx,rdx
   1400265b3:	je     0x1400265bc
   1400265b5:	mov    QWORD PTR [rdx],r8
   1400265b8:	add    r10,0x8
   1400265bc:	mov    edx,esi
   1400265be:	mov    r14d,0x22
   1400265c4:	cmp    WORD PTR [rcx],r14w
   1400265c8:	jne    0x1400265dd
   1400265ca:	test   edx,edx
   1400265cc:	mov    eax,esi
   1400265ce:	sete   al
   1400265d1:	add    rcx,0x2
   1400265d5:	mov    edx,eax
   1400265d7:	movzx  eax,r14w
   1400265db:	jmp    0x1400265fc
   1400265dd:	inc    DWORD PTR [r11]
   1400265e0:	test   r8,r8
   1400265e3:	je     0x1400265f0
   1400265e5:	movzx  eax,WORD PTR [rcx]
   1400265e8:	mov    WORD PTR [r8],ax
   1400265ec:	add    r8,0x2
   1400265f0:	movzx  eax,WORD PTR [rcx]
   1400265f3:	add    rcx,0x2
   1400265f7:	test   ax,ax
   1400265fa:	je     0x140026618
   1400265fc:	test   edx,edx
   1400265fe:	jne    0x1400265c4
   140026600:	cmp    ax,0x20
   140026604:	je     0x14002660c
   140026606:	cmp    ax,0x9
   14002660a:	jne    0x1400265c4
   14002660c:	test   r8,r8
   14002660f:	je     0x14002661c
   140026611:	mov    WORD PTR [r8-0x2],si
   140026616:	jmp    0x14002661c
   140026618:	sub    rcx,0x2
   14002661c:	mov    edi,esi
   14002661e:	mov    r13d,0x5c
   140026624:	cmp    WORD PTR [rcx],si
   140026627:	je     0x1400266fb
   14002662d:	cmp    WORD PTR [rcx],0x20
   140026631:	je     0x140026639
   140026633:	cmp    WORD PTR [rcx],0x9
   140026637:	jne    0x14002663f
   140026639:	add    rcx,0x2
   14002663d:	jmp    0x14002662d
   14002663f:	cmp    WORD PTR [rcx],si
   140026642:	je     0x1400266fb
   140026648:	test   r10,r10
   14002664b:	je     0x140026654
   14002664d:	mov    QWORD PTR [r10],r8
   140026650:	add    r10,0x8
   140026654:	inc    DWORD PTR [rbx]
   140026656:	mov    r9d,0x1
   14002665c:	mov    edx,esi
   14002665e:	jmp    0x140026666
   140026660:	add    rcx,0x2
   140026664:	inc    edx
   140026666:	cmp    WORD PTR [rcx],r13w
   14002666a:	je     0x140026660
   14002666c:	cmp    WORD PTR [rcx],r14w
   140026670:	jne    0x1400266ac
   140026672:	test   r9b,dl
   140026675:	jne    0x140026696
   140026677:	test   edi,edi
   140026679:	je     0x14002668a
   14002667b:	lea    rax,[rcx+0x2]
   14002667f:	cmp    WORD PTR [rax],r14w
   140026683:	jne    0x14002668a
   140026685:	mov    rcx,rax
   140026688:	jmp    0x140026696
   14002668a:	test   edi,edi
   14002668c:	mov    eax,esi
   14002668e:	mov    r9d,esi
   140026691:	sete   al
   140026694:	mov    edi,eax
   140026696:	shr    edx,1
   140026698:	jmp    0x1400266ac
   14002669a:	dec    edx
   14002669c:	test   r8,r8
   14002669f:	je     0x1400266a9
   1400266a1:	mov    WORD PTR [r8],r13w
   1400266a5:	add    r8,0x2
   1400266a9:	inc    DWORD PTR [r11]
   1400266ac:	test   edx,edx
   1400266ae:	jne    0x14002669a
   1400266b0:	movzx  eax,WORD PTR [rcx]
   1400266b3:	test   ax,ax
   1400266b6:	je     0x1400266e6
   1400266b8:	test   edi,edi
   1400266ba:	jne    0x1400266c8
   1400266bc:	cmp    ax,0x20
   1400266c0:	je     0x1400266e6
   1400266c2:	cmp    ax,0x9
   1400266c6:	je     0x1400266e6
   1400266c8:	test   r9d,r9d
   1400266cb:	je     0x1400266dd
   1400266cd:	test   r8,r8
   1400266d0:	je     0x1400266da
   1400266d2:	mov    WORD PTR [r8],ax
   1400266d6:	add    r8,0x2
   1400266da:	inc    DWORD PTR [r11]
   1400266dd:	add    rcx,0x2
   1400266e1:	jmp    0x140026656
   1400266e6:	test   r8,r8
   1400266e9:	je     0x1400266f3
   1400266eb:	mov    WORD PTR [r8],si
   1400266ef:	add    r8,0x2
   1400266f3:	inc    DWORD PTR [r11]
   1400266f6:	jmp    0x140026624
   1400266fb:	test   r10,r10
   1400266fe:	je     0x140026703
   140026700:	mov    QWORD PTR [r10],rsi
   140026703:	inc    DWORD PTR [rbx]
   140026705:	mov    rsi,QWORD PTR [rsp+0x18]
   14002670a:	mov    rdi,QWORD PTR [rsp+0x20]
   14002670f:	mov    rbx,QWORD PTR [rsp+0x10]
   140026714:	mov    r13,QWORD PTR [rsp+0x28]
   140026719:	pop    r14
   14002671b:	ret    
   14002671c:	mov    QWORD PTR [rsp+0x18],rbx
   140026721:	push   rbp
   140026722:	push   rsi
   140026723:	push   rdi
   140026724:	sub    rsp,0x30
   140026728:	lea    rdi,[rip+0x2fc01]        # 0x140056330
   14002672f:	xor    ebp,ebp
   140026731:	mov    r8d,0x104
   140026737:	mov    rdx,rdi
   14002673a:	xor    ecx,ecx
   14002673c:	mov    WORD PTR [rip+0x2fdf5],bp        # 0x140056538
   140026743:	call   QWORD PTR [rip+0x892f]        # 0x14002f078
   140026749:	mov    rbx,QWORD PTR [rip+0x300d0]        # 0x140056820
   140026750:	mov    QWORD PTR [rip+0x2ec39],rdi        # 0x140055390
   140026757:	test   rbx,rbx
   14002675a:	je     0x140026761
   14002675c:	cmp    WORD PTR [rbx],bp
   14002675f:	jne    0x140026764
   140026761:	mov    rbx,rdi
   140026764:	lea    rax,[rsp+0x58]
   140026769:	lea    r9,[rsp+0x50]
   14002676e:	xor    r8d,r8d
   140026771:	xor    edx,edx
   140026773:	mov    rcx,rbx
   140026776:	mov    QWORD PTR [rsp+0x20],rax
   14002677b:	call   0x140026584
   140026780:	movsxd rsi,DWORD PTR [rsp+0x50]
   140026785:	movabs rax,0x1fffffffffffffff
   14002678f:	cmp    rsi,rax
   140026792:	jae    0x1400267fc
   140026794:	movsxd rax,DWORD PTR [rsp+0x58]
   140026799:	movabs rcx,0x7fffffffffffffff
   1400267a3:	cmp    rax,rcx
   1400267a6:	jae    0x1400267fc
   1400267a8:	lea    rcx,[rax+rsi*4]
   1400267ac:	add    rax,rax
   1400267af:	add    rcx,rcx
   1400267b2:	cmp    rcx,rax
   1400267b5:	jb     0x1400267fc
   1400267b7:	call   0x140020c28
   1400267bc:	mov    rdi,rax
   1400267bf:	test   rax,rax
   1400267c2:	je     0x1400267fc
   1400267c4:	lea    r8,[rax+rsi*8]
   1400267c8:	lea    rax,[rsp+0x58]
   1400267cd:	lea    r9,[rsp+0x50]
   1400267d2:	mov    rdx,rdi
   1400267d5:	mov    rcx,rbx
   1400267d8:	mov    QWORD PTR [rsp+0x20],rax
   1400267dd:	call   0x140026584
   1400267e2:	mov    r11d,DWORD PTR [rsp+0x50]
   1400267e7:	mov    QWORD PTR [rip+0x2eb72],rdi        # 0x140055360
   1400267ee:	dec    r11d
   1400267f1:	xor    eax,eax
   1400267f3:	mov    DWORD PTR [rip+0x2eb5a],r11d        # 0x140055354
   1400267fa:	jmp    0x1400267ff
   1400267fc:	or     eax,0xffffffff
   1400267ff:	mov    rbx,QWORD PTR [rsp+0x60]
   140026804:	add    rsp,0x30
   140026808:	pop    rdi
   140026809:	pop    rsi
   14002680a:	pop    rbp
   14002680b:	ret    
   14002680c:	mov    QWORD PTR [rsp+0x18],rbx
   140026811:	push   rdi
   140026812:	sub    rsp,0x20
   140026816:	mov    rax,QWORD PTR [rip+0x19113]        # 0x14003f930
   14002681d:	and    QWORD PTR [rsp+0x30],0x0
   140026823:	movabs rdi,0x2b992ddfa232
   14002682d:	cmp    rax,rdi
   140026830:	je     0x14002683e
   140026832:	not    rax
   140026835:	mov    QWORD PTR [rip+0x190fc],rax        # 0x14003f938
   14002683c:	jmp    0x1400268b4
   14002683e:	lea    rcx,[rsp+0x30]
   140026843:	call   QWORD PTR [rip+0x89ef]        # 0x14002f238
   140026849:	mov    rbx,QWORD PTR [rsp+0x30]
   14002684e:	call   QWORD PTR [rip+0x88b4]        # 0x14002f108
   140026854:	mov    r11d,eax
   140026857:	xor    rbx,r11
   14002685a:	call   QWORD PTR [rip+0x88b0]        # 0x14002f110
   140026860:	mov    r11d,eax
   140026863:	xor    rbx,r11
   140026866:	call   QWORD PTR [rip+0x87b4]        # 0x14002f020
   14002686c:	lea    rcx,[rsp+0x38]
   140026871:	mov    r11d,eax
   140026874:	xor    rbx,r11
   140026877:	call   QWORD PTR [rip+0x88e3]        # 0x14002f160
   14002687d:	mov    r11,QWORD PTR [rsp+0x38]
   140026882:	xor    r11,rbx
   140026885:	movabs rax,0xffffffffffff
   14002688f:	and    r11,rax
   140026892:	movabs rax,0x2b992ddfa233
   14002689c:	cmp    r11,rdi
   14002689f:	cmove  r11,rax
   1400268a3:	mov    QWORD PTR [rip+0x19086],r11        # 0x14003f930
   1400268aa:	not    r11
   1400268ad:	mov    QWORD PTR [rip+0x19084],r11        # 0x14003f938
   1400268b4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400268b9:	add    rsp,0x20
   1400268bd:	pop    rdi
   1400268be:	ret    
   1400268bf:	int3   
   1400268c0:	rex push rbx
   1400268c2:	push   rbp
   1400268c3:	push   rsi
   1400268c4:	push   rdi
   1400268c5:	push   r12
   1400268c7:	sub    rsp,0x40
   1400268cb:	mov    rax,QWORD PTR [rip+0x1905e]        # 0x14003f930
   1400268d2:	xor    rax,rsp
   1400268d5:	mov    QWORD PTR [rsp+0x30],rax
   1400268da:	xor    r12d,r12d
   1400268dd:	mov    edi,r8d
   1400268e0:	mov    rbx,rdx
   1400268e3:	mov    esi,ecx
   1400268e5:	test   ecx,ecx
   1400268e7:	je     0x140026912
   1400268e9:	call   0x14002a3b4
   1400268ee:	test   eax,eax
   1400268f0:	jne    0x140026919
   1400268f2:	call   0x14001585c
   1400268f7:	mov    DWORD PTR [rax],0xf
   1400268fd:	call   0x14001583c
   140026902:	mov    DWORD PTR [rax],0xd
   140026908:	call   0x140019f74
   14002690d:	jmp    0x1400269f7
   140026912:	call   0x140019bac
   140026917:	mov    esi,eax
   140026919:	test   rbx,rbx
   14002691c:	je     0x140026937
   14002691e:	test   edi,edi
   140026920:	jg     0x14002692f
   140026922:	call   0x14001583c
   140026927:	mov    DWORD PTR [rax],0x16
   14002692d:	jmp    0x140026908
   14002692f:	mov    ebp,edi
   140026931:	mov    WORD PTR [rbx],r12w
   140026935:	jmp    0x14002693a
   140026937:	mov    ebp,r12d
   14002693a:	test   esi,esi
   14002693c:	je     0x14002695b
   14002693e:	add    si,0x40
   140026942:	mov    eax,0x3a
   140026947:	mov    DWORD PTR [rsp+0x2c],0x2e
   14002694f:	mov    WORD PTR [rsp+0x28],si
   140026954:	mov    WORD PTR [rsp+0x2a],ax
   140026959:	jmp    0x140026963
   14002695b:	mov    DWORD PTR [rsp+0x28],0x2e
   140026963:	lea    r9,[rsp+0x20]
   140026968:	lea    rcx,[rsp+0x28]
   14002696d:	mov    r8,rbx
   140026970:	mov    edx,ebp
   140026972:	call   QWORD PTR [rip+0x8958]        # 0x14002f2d0
   140026978:	test   eax,eax
   14002697a:	je     0x1400269ea
   14002697c:	test   rbx,rbx
   14002697f:	je     0x14002699b
   140026981:	cmp    eax,ebp
   140026983:	jge    0x14002698a
   140026985:	mov    rax,rbx
   140026988:	jmp    0x1400269f9
   14002698a:	call   0x14001583c
   14002698f:	mov    DWORD PTR [rax],0x22
   140026995:	mov    WORD PTR [rbx],r12w
   140026999:	jmp    0x1400269f7
   14002699b:	cmp    eax,edi
   14002699d:	mov    edx,0x2
   1400269a2:	cmovg  edi,eax
   1400269a5:	movsxd rcx,edi
   1400269a8:	call   0x140012bd4
   1400269ad:	mov    rbx,rax
   1400269b0:	test   rax,rax
   1400269b3:	jne    0x1400269cd
   1400269b5:	call   0x14001583c
   1400269ba:	mov    DWORD PTR [rax],0xc
   1400269c0:	call   0x14001585c
   1400269c5:	mov    DWORD PTR [rax],0x8
   1400269cb:	jmp    0x1400269f7
   1400269cd:	lea    r9,[rsp+0x20]
   1400269d2:	lea    rcx,[rsp+0x28]
   1400269d7:	mov    r8,rax
   1400269da:	mov    edx,edi
   1400269dc:	call   QWORD PTR [rip+0x88ee]        # 0x14002f2d0
   1400269e2:	test   eax,eax
   1400269e4:	je     0x1400269ea
   1400269e6:	cmp    eax,edi
   1400269e8:	jl     0x140026985
   1400269ea:	call   QWORD PTR [rip+0x86c0]        # 0x14002f0b0
   1400269f0:	mov    ecx,eax
   1400269f2:	call   0x14001587c
   1400269f7:	xor    eax,eax
   1400269f9:	mov    rcx,QWORD PTR [rsp+0x30]
   1400269fe:	xor    rcx,rsp
   140026a01:	call   0x140012670
   140026a06:	add    rsp,0x40
   140026a0a:	pop    r12
   140026a0c:	pop    rdi
   140026a0d:	pop    rsi
   140026a0e:	pop    rbp
   140026a0f:	pop    rbx
   140026a10:	ret    
   140026a11:	int3   
   140026a12:	int3   
   140026a13:	int3   
   140026a14:	mov    QWORD PTR [rsp+0x8],rbx
   140026a19:	push   rdi
   140026a1a:	sub    rsp,0x20
   140026a1e:	mov    ebx,edx
   140026a20:	mov    rdi,rcx
   140026a23:	mov    ecx,0x7
   140026a28:	call   0x14001ccc8
   140026a2d:	nop
   140026a2e:	mov    r8d,ebx
   140026a31:	mov    rdx,rdi
   140026a34:	xor    ecx,ecx
   140026a36:	call   0x1400268c0
   140026a3b:	mov    rbx,rax
   140026a3e:	mov    ecx,0x7
   140026a43:	call   0x14001cbc8
   140026a48:	mov    rax,rbx
   140026a4b:	mov    rbx,QWORD PTR [rsp+0x30]
   140026a50:	add    rsp,0x20
   140026a54:	pop    rdi
   140026a55:	ret    
   140026a56:	int3   
   140026a57:	int3   
   140026a58:	mov    rax,rsp
   140026a5b:	mov    QWORD PTR [rax+0x8],rbx
   140026a5f:	mov    QWORD PTR [rax+0x10],rbp
   140026a63:	mov    QWORD PTR [rax+0x18],rsi
   140026a67:	mov    QWORD PTR [rax+0x20],rdi
   140026a6b:	push   r12
   140026a6d:	sub    rsp,0x20
   140026a71:	mov    r10,QWORD PTR [r9+0x38]
   140026a75:	mov    rsi,rdx
   140026a78:	mov    r12,r8
   140026a7b:	mov    eax,DWORD PTR [r10]
   140026a7e:	mov    rbp,rcx
   140026a81:	mov    rdx,r9
   140026a84:	add    rax,rax
   140026a87:	mov    rcx,rsi
   140026a8a:	mov    rdi,r9
   140026a8d:	lea    rbx,[r10+rax*8+0x4]
   140026a92:	mov    r8,rbx
   140026a95:	call   0x1400120a4
   140026a9a:	mov    r11d,DWORD PTR [rbx]
   140026a9d:	mov    r10d,DWORD PTR [rbp+0x4]
   140026aa1:	mov    eax,r11d
   140026aa4:	and    r11d,0x2
   140026aa8:	mov    edx,0x1
   140026aad:	and    eax,edx
   140026aaf:	and    r10b,0x66
   140026ab3:	cmove  r11d,eax
   140026ab7:	test   r11d,r11d
   140026aba:	je     0x140026acf
   140026abc:	mov    r9,rdi
   140026abf:	mov    r8,r12
   140026ac2:	mov    rdx,rsi
   140026ac5:	mov    rcx,rbp
   140026ac8:	call   0x14001c8bc
   140026acd:	mov    edx,eax
   140026acf:	mov    rbx,QWORD PTR [rsp+0x30]
   140026ad4:	mov    rbp,QWORD PTR [rsp+0x38]
   140026ad9:	mov    rsi,QWORD PTR [rsp+0x40]
   140026ade:	mov    rdi,QWORD PTR [rsp+0x48]
   140026ae3:	mov    eax,edx
   140026ae5:	add    rsp,0x20
   140026ae9:	pop    r12
   140026aeb:	ret    
   140026aec:	mov    QWORD PTR [rsp+0x8],rbx
   140026af1:	mov    QWORD PTR [rsp+0x10],rsi
   140026af6:	push   rdi
   140026af7:	sub    rsp,0x30
   140026afb:	movsxd rax,r9d
   140026afe:	mov    rbx,r8
   140026b01:	mov    edi,edx
   140026b03:	mov    esi,ecx
   140026b05:	test   r9d,r9d
   140026b08:	jle    0x140026b15
   140026b0a:	mov    rdx,rax
   140026b0d:	mov    rcx,rbx
   140026b10:	call   0x14001cd0c
   140026b15:	mov    r9d,DWORD PTR [rsp+0x68]
   140026b1a:	mov    rdx,QWORD PTR [rsp+0x60]
   140026b1f:	mov    r8,rbx
   140026b22:	mov    DWORD PTR [rsp+0x28],r9d
   140026b27:	mov    QWORD PTR [rsp+0x20],rdx
   140026b2c:	mov    edx,edi
   140026b2e:	mov    r9d,eax
   140026b31:	mov    ecx,esi
   140026b33:	call   QWORD PTR [rip+0x861f]        # 0x14002f158
   140026b39:	mov    rbx,QWORD PTR [rsp+0x40]
   140026b3e:	mov    rsi,QWORD PTR [rsp+0x48]
   140026b43:	add    rsp,0x30
   140026b47:	pop    rdi
   140026b48:	ret    
   140026b49:	int3   
   140026b4a:	int3   
   140026b4b:	int3   
   140026b4c:	and    DWORD PTR [rip+0x2faad],0x0        # 0x140056600
   140026b53:	ret    
   140026b54:	rex push rbp
   140026b56:	push   r12
   140026b58:	push   r13
   140026b5a:	push   r14
   140026b5c:	push   r15
   140026b5e:	sub    rsp,0x50
   140026b62:	lea    rbp,[rsp+0x40]
   140026b67:	mov    QWORD PTR [rbp+0x40],rbx
   140026b6b:	mov    QWORD PTR [rbp+0x48],rsi
   140026b6f:	mov    QWORD PTR [rbp+0x50],rdi
   140026b73:	mov    rax,QWORD PTR [rip+0x18db6]        # 0x14003f930
   140026b7a:	xor    rax,rbp
   140026b7d:	mov    QWORD PTR [rbp+0x8],rax
   140026b81:	mov    ebx,DWORD PTR [rbp+0x60]
   140026b84:	xor    edi,edi
   140026b86:	mov    r14,r9
   140026b89:	mov    r15d,r8d
   140026b8c:	mov    DWORD PTR [rbp+0x0],edx
   140026b8f:	test   ebx,ebx
   140026b91:	jle    0x140026bbd
   140026b93:	mov    r10d,ebx
   140026b96:	mov    rax,r9
   140026b99:	dec    r10d
   140026b9c:	cmp    BYTE PTR [rax],dil
   140026b9f:	je     0x140026bad
   140026ba1:	inc    rax
   140026ba4:	test   r10d,r10d
   140026ba7:	jne    0x140026b99
   140026ba9:	or     r10d,0xffffffff
   140026bad:	mov    eax,ebx
   140026baf:	sub    eax,r10d
   140026bb2:	dec    eax
   140026bb4:	cmp    eax,ebx
   140026bb6:	lea    ebx,[rax+0x1]
   140026bb9:	jl     0x140026bbd
   140026bbb:	mov    ebx,eax
   140026bbd:	mov    r12d,DWORD PTR [rbp+0x78]
   140026bc1:	mov    esi,edi
   140026bc3:	test   r12d,r12d
   140026bc6:	jne    0x140026bcf
   140026bc8:	mov    rax,QWORD PTR [rcx]
   140026bcb:	mov    r12d,DWORD PTR [rax+0x4]
   140026bcf:	neg    DWORD PTR [rbp+0x80]
   140026bd5:	mov    r9d,ebx
   140026bd8:	mov    r8,r14
   140026bdb:	sbb    edx,edx
   140026bdd:	mov    ecx,r12d
   140026be0:	mov    DWORD PTR [rsp+0x28],edi
   140026be4:	and    edx,0x8
   140026be7:	mov    QWORD PTR [rsp+0x20],rdi
   140026bec:	inc    edx
   140026bee:	call   QWORD PTR [rip+0x867c]        # 0x14002f270
   140026bf4:	movsxd r13,eax
   140026bf7:	test   eax,eax
   140026bf9:	jne    0x140026c02
   140026bfb:	xor    eax,eax
   140026bfd:	jmp    0x140026df8
   140026c02:	movabs r8,0xffffffffffffff0
   140026c0c:	test   eax,eax
   140026c0e:	jle    0x140026c6e
   140026c10:	xor    edx,edx
   140026c12:	lea    rax,[rdx-0x20]
   140026c16:	div    r13
   140026c19:	cmp    rax,0x2
   140026c1d:	jb     0x140026c6e
   140026c1f:	lea    rcx,[r13+r13*1+0x10]
   140026c24:	cmp    rcx,0x400
   140026c2b:	ja     0x140026c57
   140026c2d:	lea    rax,[rcx+0xf]
   140026c31:	cmp    rax,rcx
   140026c34:	ja     0x140026c39
   140026c36:	mov    rax,r8
   140026c39:	and    rax,0xfffffffffffffff0
   140026c3d:	call   0x140012f50
   140026c42:	sub    rsp,rax
   140026c45:	lea    rdi,[rsp+0x40]
   140026c4a:	test   rdi,rdi
   140026c4d:	je     0x140026bfb
   140026c4f:	mov    DWORD PTR [rdi],0xcccc
   140026c55:	jmp    0x140026c6a
   140026c57:	call   0x140013298
   140026c5c:	mov    rdi,rax
   140026c5f:	test   rax,rax
   140026c62:	je     0x140026c6e
   140026c64:	mov    DWORD PTR [rax],0xdddd
   140026c6a:	add    rdi,0x10
   140026c6e:	test   rdi,rdi
   140026c71:	je     0x140026bfb
   140026c73:	mov    r9d,ebx
   140026c76:	mov    r8,r14
   140026c79:	mov    edx,0x1
   140026c7e:	mov    ecx,r12d
   140026c81:	mov    DWORD PTR [rsp+0x28],r13d
   140026c86:	mov    QWORD PTR [rsp+0x20],rdi
   140026c8b:	call   QWORD PTR [rip+0x85df]        # 0x14002f270
   140026c91:	test   eax,eax
   140026c93:	je     0x140026de5
   140026c99:	mov    r14d,DWORD PTR [rbp+0x0]
   140026c9d:	and    DWORD PTR [rsp+0x28],esi
   140026ca1:	and    QWORD PTR [rsp+0x20],rsi
   140026ca6:	mov    ecx,r14d
   140026ca9:	mov    r9d,r13d
   140026cac:	mov    r8,rdi
   140026caf:	mov    edx,r15d
   140026cb2:	call   QWORD PTR [rip+0x84a0]        # 0x14002f158
   140026cb8:	movsxd rsi,eax
   140026cbb:	test   eax,eax
   140026cbd:	je     0x140026de5
   140026cc3:	mov    r8d,0x400
   140026cc9:	test   r8d,r15d
   140026ccc:	je     0x140026d05
   140026cce:	mov    ecx,DWORD PTR [rbp+0x70]
   140026cd1:	test   ecx,ecx
   140026cd3:	je     0x140026de5
   140026cd9:	cmp    esi,ecx
   140026cdb:	jg     0x140026de5
   140026ce1:	mov    rax,QWORD PTR [rbp+0x68]
   140026ce5:	mov    DWORD PTR [rsp+0x28],ecx
   140026ce9:	mov    r9d,r13d
   140026cec:	mov    r8,rdi
   140026cef:	mov    edx,r15d
   140026cf2:	mov    ecx,r14d
   140026cf5:	mov    QWORD PTR [rsp+0x20],rax
   140026cfa:	call   QWORD PTR [rip+0x8458]        # 0x14002f158
   140026d00:	jmp    0x140026de5
   140026d05:	test   eax,eax
   140026d07:	jle    0x140026d70
   140026d09:	xor    edx,edx
   140026d0b:	lea    rax,[rdx-0x20]
   140026d0f:	div    rsi
   140026d12:	cmp    rax,0x2
   140026d16:	jb     0x140026d70
   140026d18:	lea    rcx,[rsi+rsi*1+0x10]
   140026d1d:	cmp    rcx,r8
   140026d20:	ja     0x140026d57
   140026d22:	lea    rax,[rcx+0xf]
   140026d26:	cmp    rax,rcx
   140026d29:	ja     0x140026d35
   140026d2b:	movabs rax,0xffffffffffffff0
   140026d35:	and    rax,0xfffffffffffffff0
   140026d39:	call   0x140012f50
   140026d3e:	sub    rsp,rax
   140026d41:	lea    rbx,[rsp+0x40]
   140026d46:	test   rbx,rbx
   140026d49:	je     0x140026de5
   140026d4f:	mov    DWORD PTR [rbx],0xcccc
   140026d55:	jmp    0x140026d6a
   140026d57:	call   0x140013298
   140026d5c:	mov    rbx,rax
   140026d5f:	test   rax,rax
   140026d62:	je     0x140026d72
   140026d64:	mov    DWORD PTR [rax],0xdddd
   140026d6a:	add    rbx,0x10
   140026d6e:	jmp    0x140026d72
   140026d70:	xor    ebx,ebx
   140026d72:	test   rbx,rbx
   140026d75:	je     0x140026de5
   140026d77:	mov    r9d,r13d
   140026d7a:	mov    r8,rdi
   140026d7d:	mov    edx,r15d
   140026d80:	mov    ecx,r14d
   140026d83:	mov    DWORD PTR [rsp+0x28],esi
   140026d87:	mov    QWORD PTR [rsp+0x20],rbx
   140026d8c:	call   QWORD PTR [rip+0x83c6]        # 0x14002f158
   140026d92:	xor    ecx,ecx
   140026d94:	test   eax,eax
   140026d96:	je     0x140026dd4
   140026d98:	mov    eax,DWORD PTR [rbp+0x70]
   140026d9b:	xor    edx,edx
   140026d9d:	mov    QWORD PTR [rsp+0x38],rcx
   140026da2:	mov    r9d,esi
   140026da5:	mov    r8,rbx
   140026da8:	mov    QWORD PTR [rsp+0x30],rcx
   140026dad:	test   eax,eax
   140026daf:	jne    0x140026dbc
   140026db1:	mov    DWORD PTR [rsp+0x28],ecx
   140026db5:	mov    QWORD PTR [rsp+0x20],rcx
   140026dba:	jmp    0x140026dc9
   140026dbc:	mov    DWORD PTR [rsp+0x28],eax
   140026dc0:	mov    rax,QWORD PTR [rbp+0x68]
   140026dc4:	mov    QWORD PTR [rsp+0x20],rax
   140026dc9:	mov    ecx,r12d
   140026dcc:	call   QWORD PTR [rip+0x845e]        # 0x14002f230
   140026dd2:	mov    esi,eax
   140026dd4:	lea    rcx,[rbx-0x10]
   140026dd8:	cmp    DWORD PTR [rcx],0xdddd
   140026dde:	jne    0x140026de5
   140026de0:	call   0x1400130a8
   140026de5:	lea    rcx,[rdi-0x10]
   140026de9:	cmp    DWORD PTR [rcx],0xdddd
   140026def:	jne    0x140026df6
   140026df1:	call   0x1400130a8
   140026df6:	mov    eax,esi
   140026df8:	mov    rcx,QWORD PTR [rbp+0x8]
   140026dfc:	xor    rcx,rbp
   140026dff:	call   0x140012670
   140026e04:	mov    rbx,QWORD PTR [rbp+0x40]
   140026e08:	mov    rsi,QWORD PTR [rbp+0x48]
   140026e0c:	mov    rdi,QWORD PTR [rbp+0x50]
   140026e10:	lea    rsp,[rbp+0x10]
   140026e14:	pop    r15
   140026e16:	pop    r14
   140026e18:	pop    r13
   140026e1a:	pop    r12
   140026e1c:	pop    rbp
   140026e1d:	ret    
   140026e1e:	int3   
   140026e1f:	int3   
   140026e20:	mov    QWORD PTR [rsp+0x8],rbx
   140026e25:	mov    QWORD PTR [rsp+0x10],rsi
   140026e2a:	push   rdi
   140026e2b:	sub    rsp,0x70
   140026e2f:	mov    esi,edx
   140026e31:	mov    rdx,rcx
   140026e34:	lea    rcx,[rsp+0x50]
   140026e39:	mov    rbx,r9
   140026e3c:	mov    edi,r8d
   140026e3f:	call   0x140012690
   140026e44:	mov    eax,DWORD PTR [rsp+0xb8]
   140026e4b:	mov    r11d,DWORD PTR [rsp+0xc0]
   140026e53:	lea    rcx,[rsp+0x50]
   140026e58:	mov    DWORD PTR [rsp+0x40],r11d
   140026e5d:	mov    DWORD PTR [rsp+0x38],eax
   140026e61:	mov    eax,DWORD PTR [rsp+0xb0]
   140026e68:	mov    DWORD PTR [rsp+0x30],eax
   140026e6c:	mov    rax,QWORD PTR [rsp+0xa8]
   140026e74:	mov    r9,rbx
   140026e77:	mov    QWORD PTR [rsp+0x28],rax
   140026e7c:	mov    eax,DWORD PTR [rsp+0xa0]
   140026e83:	mov    r8d,edi
   140026e86:	mov    edx,esi
   140026e88:	mov    DWORD PTR [rsp+0x20],eax
   140026e8c:	call   0x140026b54
   140026e91:	cmp    BYTE PTR [rsp+0x68],0x0
   140026e96:	je     0x140026ea4
   140026e98:	mov    rcx,QWORD PTR [rsp+0x60]
   140026e9d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140026ea4:	lea    r11,[rsp+0x70]
   140026ea9:	mov    rbx,QWORD PTR [r11+0x10]
   140026ead:	mov    rsi,QWORD PTR [r11+0x18]
   140026eb1:	mov    rsp,r11
   140026eb4:	pop    rdi
   140026eb5:	ret    
   140026eb6:	int3   
   140026eb7:	int3   
   140026eb8:	rex push rbp
   140026eba:	push   r12
   140026ebc:	push   r13
   140026ebe:	push   r14
   140026ec0:	push   r15
   140026ec2:	sub    rsp,0x40
   140026ec6:	lea    rbp,[rsp+0x30]
   140026ecb:	mov    QWORD PTR [rbp+0x40],rbx
   140026ecf:	mov    QWORD PTR [rbp+0x48],rsi
   140026ed3:	mov    QWORD PTR [rbp+0x50],rdi
   140026ed7:	mov    rax,QWORD PTR [rip+0x18a52]        # 0x14003f930
   140026ede:	xor    rax,rbp
   140026ee1:	mov    QWORD PTR [rbp+0x0],rax
   140026ee5:	mov    esi,DWORD PTR [rbp+0x68]
   140026ee8:	xor    edi,edi
   140026eea:	mov    r13d,r9d
   140026eed:	mov    r14,r8
   140026ef0:	mov    r15d,edx
   140026ef3:	test   esi,esi
   140026ef5:	jne    0x140026efd
   140026ef7:	mov    rax,QWORD PTR [rcx]
   140026efa:	mov    esi,DWORD PTR [rax+0x4]
   140026efd:	neg    DWORD PTR [rbp+0x70]
   140026f00:	mov    ecx,esi
   140026f02:	mov    DWORD PTR [rsp+0x28],edi
   140026f06:	sbb    edx,edx
   140026f08:	mov    QWORD PTR [rsp+0x20],rdi
   140026f0d:	and    edx,0x8
   140026f10:	inc    edx
   140026f12:	call   QWORD PTR [rip+0x8358]        # 0x14002f270
   140026f18:	movsxd r12,eax
   140026f1b:	test   eax,eax
   140026f1d:	jne    0x140026f26
   140026f1f:	xor    eax,eax
   140026f21:	jmp    0x140026ff0
   140026f26:	jle    0x140026f8f
   140026f28:	movabs rax,0x7ffffffffffffff0
   140026f32:	cmp    r12,rax
   140026f35:	ja     0x140026f8f
   140026f37:	lea    rcx,[r12+r12*1+0x10]
   140026f3c:	cmp    rcx,0x400
   140026f43:	ja     0x140026f76
   140026f45:	lea    rax,[rcx+0xf]
   140026f49:	cmp    rax,rcx
   140026f4c:	ja     0x140026f58
   140026f4e:	movabs rax,0xffffffffffffff0
   140026f58:	and    rax,0xfffffffffffffff0
   140026f5c:	call   0x140012f50
   140026f61:	sub    rsp,rax
   140026f64:	lea    rbx,[rsp+0x30]
   140026f69:	test   rbx,rbx
   140026f6c:	je     0x140026f1f
   140026f6e:	mov    DWORD PTR [rbx],0xcccc
   140026f74:	jmp    0x140026f89
   140026f76:	call   0x140013298
   140026f7b:	mov    rbx,rax
   140026f7e:	test   rax,rax
   140026f81:	je     0x140026f92
   140026f83:	mov    DWORD PTR [rax],0xdddd
   140026f89:	add    rbx,0x10
   140026f8d:	jmp    0x140026f92
   140026f8f:	mov    rbx,rdi
   140026f92:	test   rbx,rbx
   140026f95:	je     0x140026f1f
   140026f97:	mov    r8,r12
   140026f9a:	xor    edx,edx
   140026f9c:	mov    rcx,rbx
   140026f9f:	add    r8,r8
   140026fa2:	call   0x140012fb0
   140026fa7:	mov    r9d,r13d
   140026faa:	mov    r8,r14
   140026fad:	mov    edx,0x1
   140026fb2:	mov    ecx,esi
   140026fb4:	mov    DWORD PTR [rsp+0x28],r12d
   140026fb9:	mov    QWORD PTR [rsp+0x20],rbx
   140026fbe:	call   QWORD PTR [rip+0x82ac]        # 0x14002f270
   140026fc4:	test   eax,eax
   140026fc6:	je     0x140026fdd
   140026fc8:	mov    r9,QWORD PTR [rbp+0x60]
   140026fcc:	mov    r8d,eax
   140026fcf:	mov    rdx,rbx
   140026fd2:	mov    ecx,r15d
   140026fd5:	call   QWORD PTR [rip+0x827d]        # 0x14002f258
   140026fdb:	mov    edi,eax
   140026fdd:	lea    rcx,[rbx-0x10]
   140026fe1:	cmp    DWORD PTR [rcx],0xdddd
   140026fe7:	jne    0x140026fee
   140026fe9:	call   0x1400130a8
   140026fee:	mov    eax,edi
   140026ff0:	mov    rcx,QWORD PTR [rbp+0x0]
   140026ff4:	xor    rcx,rbp
   140026ff7:	call   0x140012670
   140026ffc:	mov    rbx,QWORD PTR [rbp+0x40]
   140027000:	mov    rsi,QWORD PTR [rbp+0x48]
   140027004:	mov    rdi,QWORD PTR [rbp+0x50]
   140027008:	lea    rsp,[rbp+0x10]
   14002700c:	pop    r15
   14002700e:	pop    r14
   140027010:	pop    r13
   140027012:	pop    r12
   140027014:	pop    rbp
   140027015:	ret    
   140027016:	int3   
   140027017:	int3   
   140027018:	mov    QWORD PTR [rsp+0x8],rbx
   14002701d:	mov    QWORD PTR [rsp+0x10],rsi
   140027022:	push   rdi
   140027023:	sub    rsp,0x60
   140027027:	mov    esi,edx
   140027029:	mov    rdx,rcx
   14002702c:	lea    rcx,[rsp+0x40]
   140027031:	mov    ebx,r9d
   140027034:	mov    rdi,r8
   140027037:	call   0x140012690
   14002703c:	mov    r11d,DWORD PTR [rsp+0xa8]
   140027044:	mov    eax,DWORD PTR [rsp+0x98]
   14002704b:	lea    rcx,[rsp+0x40]
   140027050:	mov    DWORD PTR [rsp+0x30],r11d
   140027055:	mov    DWORD PTR [rsp+0x28],eax
   140027059:	mov    rax,QWORD PTR [rsp+0x90]
   140027061:	mov    r9d,ebx
   140027064:	mov    r8,rdi
   140027067:	mov    edx,esi
   140027069:	mov    QWORD PTR [rsp+0x20],rax
   14002706e:	call   0x140026eb8
   140027073:	cmp    BYTE PTR [rsp+0x58],0x0
   140027078:	je     0x140027086
   14002707a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002707f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140027086:	mov    rbx,QWORD PTR [rsp+0x70]
   14002708b:	mov    rsi,QWORD PTR [rsp+0x78]
   140027090:	add    rsp,0x60
   140027094:	pop    rdi
   140027095:	ret    
   140027096:	int3   
   140027097:	int3   
   140027098:	test   rcx,rcx
   14002709b:	je     0x140027485
   1400270a1:	push   rbx
   1400270a2:	sub    rsp,0x20
   1400270a6:	mov    rbx,rcx
   1400270a9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400270ad:	call   0x1400130a8
   1400270b2:	mov    rcx,QWORD PTR [rbx+0x10]
   1400270b6:	call   0x1400130a8
   1400270bb:	mov    rcx,QWORD PTR [rbx+0x18]
   1400270bf:	call   0x1400130a8
   1400270c4:	mov    rcx,QWORD PTR [rbx+0x20]
   1400270c8:	call   0x1400130a8
   1400270cd:	mov    rcx,QWORD PTR [rbx+0x28]
   1400270d1:	call   0x1400130a8
   1400270d6:	mov    rcx,QWORD PTR [rbx+0x30]
   1400270da:	call   0x1400130a8
   1400270df:	mov    rcx,QWORD PTR [rbx]
   1400270e2:	call   0x1400130a8
   1400270e7:	mov    rcx,QWORD PTR [rbx+0x40]
   1400270eb:	call   0x1400130a8
   1400270f0:	mov    rcx,QWORD PTR [rbx+0x48]
   1400270f4:	call   0x1400130a8
   1400270f9:	mov    rcx,QWORD PTR [rbx+0x50]
   1400270fd:	call   0x1400130a8
   140027102:	mov    rcx,QWORD PTR [rbx+0x58]
   140027106:	call   0x1400130a8
   14002710b:	mov    rcx,QWORD PTR [rbx+0x60]
   14002710f:	call   0x1400130a8
   140027114:	mov    rcx,QWORD PTR [rbx+0x68]
   140027118:	call   0x1400130a8
   14002711d:	mov    rcx,QWORD PTR [rbx+0x38]
   140027121:	call   0x1400130a8
   140027126:	mov    rcx,QWORD PTR [rbx+0x70]
   14002712a:	call   0x1400130a8
   14002712f:	mov    rcx,QWORD PTR [rbx+0x78]
   140027133:	call   0x1400130a8
   140027138:	mov    rcx,QWORD PTR [rbx+0x80]
   14002713f:	call   0x1400130a8
   140027144:	mov    rcx,QWORD PTR [rbx+0x88]
   14002714b:	call   0x1400130a8
   140027150:	mov    rcx,QWORD PTR [rbx+0x90]
   140027157:	call   0x1400130a8
   14002715c:	mov    rcx,QWORD PTR [rbx+0x98]
   140027163:	call   0x1400130a8
   140027168:	mov    rcx,QWORD PTR [rbx+0xa0]
   14002716f:	call   0x1400130a8
   140027174:	mov    rcx,QWORD PTR [rbx+0xa8]
   14002717b:	call   0x1400130a8
   140027180:	mov    rcx,QWORD PTR [rbx+0xb0]
   140027187:	call   0x1400130a8
   14002718c:	mov    rcx,QWORD PTR [rbx+0xb8]
   140027193:	call   0x1400130a8
   140027198:	mov    rcx,QWORD PTR [rbx+0xc0]
   14002719f:	call   0x1400130a8
   1400271a4:	mov    rcx,QWORD PTR [rbx+0xc8]
   1400271ab:	call   0x1400130a8
   1400271b0:	mov    rcx,QWORD PTR [rbx+0xd0]
   1400271b7:	call   0x1400130a8
   1400271bc:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400271c3:	call   0x1400130a8
   1400271c8:	mov    rcx,QWORD PTR [rbx+0xe0]
   1400271cf:	call   0x1400130a8
   1400271d4:	mov    rcx,QWORD PTR [rbx+0xe8]
   1400271db:	call   0x1400130a8
   1400271e0:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400271e7:	call   0x1400130a8
   1400271ec:	mov    rcx,QWORD PTR [rbx+0xf8]
   1400271f3:	call   0x1400130a8
   1400271f8:	mov    rcx,QWORD PTR [rbx+0x100]
   1400271ff:	call   0x1400130a8
   140027204:	mov    rcx,QWORD PTR [rbx+0x108]
   14002720b:	call   0x1400130a8
   140027210:	mov    rcx,QWORD PTR [rbx+0x110]
   140027217:	call   0x1400130a8
   14002721c:	mov    rcx,QWORD PTR [rbx+0x118]
   140027223:	call   0x1400130a8
   140027228:	mov    rcx,QWORD PTR [rbx+0x120]
   14002722f:	call   0x1400130a8
   140027234:	mov    rcx,QWORD PTR [rbx+0x128]
   14002723b:	call   0x1400130a8
   140027240:	mov    rcx,QWORD PTR [rbx+0x130]
   140027247:	call   0x1400130a8
   14002724c:	mov    rcx,QWORD PTR [rbx+0x138]
   140027253:	call   0x1400130a8
   140027258:	mov    rcx,QWORD PTR [rbx+0x140]
   14002725f:	call   0x1400130a8
   140027264:	mov    rcx,QWORD PTR [rbx+0x148]
   14002726b:	call   0x1400130a8
   140027270:	mov    rcx,QWORD PTR [rbx+0x150]
   140027277:	call   0x1400130a8
   14002727c:	mov    rcx,QWORD PTR [rbx+0x170]
   140027283:	call   0x1400130a8
   140027288:	mov    rcx,QWORD PTR [rbx+0x178]
   14002728f:	call   0x1400130a8
   140027294:	mov    rcx,QWORD PTR [rbx+0x180]
   14002729b:	call   0x1400130a8
   1400272a0:	mov    rcx,QWORD PTR [rbx+0x188]
   1400272a7:	call   0x1400130a8
   1400272ac:	mov    rcx,QWORD PTR [rbx+0x190]
   1400272b3:	call   0x1400130a8
   1400272b8:	mov    rcx,QWORD PTR [rbx+0x198]
   1400272bf:	call   0x1400130a8
   1400272c4:	mov    rcx,QWORD PTR [rbx+0x168]
   1400272cb:	call   0x1400130a8
   1400272d0:	mov    rcx,QWORD PTR [rbx+0x1a8]
   1400272d7:	call   0x1400130a8
   1400272dc:	mov    rcx,QWORD PTR [rbx+0x1b0]
   1400272e3:	call   0x1400130a8
   1400272e8:	mov    rcx,QWORD PTR [rbx+0x1b8]
   1400272ef:	call   0x1400130a8
   1400272f4:	mov    rcx,QWORD PTR [rbx+0x1c0]
   1400272fb:	call   0x1400130a8
   140027300:	mov    rcx,QWORD PTR [rbx+0x1c8]
   140027307:	call   0x1400130a8
   14002730c:	mov    rcx,QWORD PTR [rbx+0x1d0]
   140027313:	call   0x1400130a8
   140027318:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14002731f:	call   0x1400130a8
   140027324:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14002732b:	call   0x1400130a8
   140027330:	mov    rcx,QWORD PTR [rbx+0x1e0]
   140027337:	call   0x1400130a8
   14002733c:	mov    rcx,QWORD PTR [rbx+0x1e8]
   140027343:	call   0x1400130a8
   140027348:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14002734f:	call   0x1400130a8
   140027354:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14002735b:	call   0x1400130a8
   140027360:	mov    rcx,QWORD PTR [rbx+0x200]
   140027367:	call   0x1400130a8
   14002736c:	mov    rcx,QWORD PTR [rbx+0x208]
   140027373:	call   0x1400130a8
   140027378:	mov    rcx,QWORD PTR [rbx+0x210]
   14002737f:	call   0x1400130a8
   140027384:	mov    rcx,QWORD PTR [rbx+0x218]
   14002738b:	call   0x1400130a8
   140027390:	mov    rcx,QWORD PTR [rbx+0x220]
   140027397:	call   0x1400130a8
   14002739c:	mov    rcx,QWORD PTR [rbx+0x228]
   1400273a3:	call   0x1400130a8
   1400273a8:	mov    rcx,QWORD PTR [rbx+0x230]
   1400273af:	call   0x1400130a8
   1400273b4:	mov    rcx,QWORD PTR [rbx+0x238]
   1400273bb:	call   0x1400130a8
   1400273c0:	mov    rcx,QWORD PTR [rbx+0x240]
   1400273c7:	call   0x1400130a8
   1400273cc:	mov    rcx,QWORD PTR [rbx+0x248]
   1400273d3:	call   0x1400130a8
   1400273d8:	mov    rcx,QWORD PTR [rbx+0x250]
   1400273df:	call   0x1400130a8
   1400273e4:	mov    rcx,QWORD PTR [rbx+0x258]
   1400273eb:	call   0x1400130a8
   1400273f0:	mov    rcx,QWORD PTR [rbx+0x260]
   1400273f7:	call   0x1400130a8
   1400273fc:	mov    rcx,QWORD PTR [rbx+0x268]
   140027403:	call   0x1400130a8
   140027408:	mov    rcx,QWORD PTR [rbx+0x270]
   14002740f:	call   0x1400130a8
   140027414:	mov    rcx,QWORD PTR [rbx+0x278]
   14002741b:	call   0x1400130a8
   140027420:	mov    rcx,QWORD PTR [rbx+0x280]
   140027427:	call   0x1400130a8
   14002742c:	mov    rcx,QWORD PTR [rbx+0x288]
   140027433:	call   0x1400130a8
   140027438:	mov    rcx,QWORD PTR [rbx+0x290]
   14002743f:	call   0x1400130a8
   140027444:	mov    rcx,QWORD PTR [rbx+0x298]
   14002744b:	call   0x1400130a8
   140027450:	mov    rcx,QWORD PTR [rbx+0x2a0]
   140027457:	call   0x1400130a8
   14002745c:	mov    rcx,QWORD PTR [rbx+0x2a8]
   140027463:	call   0x1400130a8
   140027468:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14002746f:	call   0x1400130a8
   140027474:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14002747b:	call   0x1400130a8
   140027480:	add    rsp,0x20
   140027484:	pop    rbx
   140027485:	ret    
   140027486:	int3   
   140027487:	int3   
   140027488:	test   rcx,rcx
   14002748b:	je     0x1400274f3
   14002748d:	push   rbx
   14002748e:	sub    rsp,0x20
   140027492:	mov    rbx,rcx
   140027495:	mov    rcx,QWORD PTR [rcx]
   140027498:	cmp    rcx,QWORD PTR [rip+0x19af1]        # 0x140040f90
   14002749f:	je     0x1400274a6
   1400274a1:	call   0x1400130a8
   1400274a6:	mov    rcx,QWORD PTR [rbx+0x8]
   1400274aa:	cmp    rcx,QWORD PTR [rip+0x19ae7]        # 0x140040f98
   1400274b1:	je     0x1400274b8
   1400274b3:	call   0x1400130a8
   1400274b8:	mov    rcx,QWORD PTR [rbx+0x10]
   1400274bc:	cmp    rcx,QWORD PTR [rip+0x19add]        # 0x140040fa0
   1400274c3:	je     0x1400274ca
   1400274c5:	call   0x1400130a8
   1400274ca:	mov    rcx,QWORD PTR [rbx+0x58]
   1400274ce:	cmp    rcx,QWORD PTR [rip+0x19b13]        # 0x140040fe8
   1400274d5:	je     0x1400274dc
   1400274d7:	call   0x1400130a8
   1400274dc:	mov    rcx,QWORD PTR [rbx+0x60]
   1400274e0:	cmp    rcx,QWORD PTR [rip+0x19b09]        # 0x140040ff0
   1400274e7:	je     0x1400274ee
   1400274e9:	call   0x1400130a8
   1400274ee:	add    rsp,0x20
   1400274f2:	pop    rbx
   1400274f3:	ret    
   1400274f4:	test   rcx,rcx
   1400274f7:	je     0x1400275fd
   1400274fd:	push   rbx
   1400274fe:	sub    rsp,0x20
   140027502:	mov    rbx,rcx
   140027505:	mov    rcx,QWORD PTR [rcx+0x18]
   140027509:	cmp    rcx,QWORD PTR [rip+0x19a98]        # 0x140040fa8
   140027510:	je     0x140027517
   140027512:	call   0x1400130a8
   140027517:	mov    rcx,QWORD PTR [rbx+0x20]
   14002751b:	cmp    rcx,QWORD PTR [rip+0x19a8e]        # 0x140040fb0
   140027522:	je     0x140027529
   140027524:	call   0x1400130a8
   140027529:	mov    rcx,QWORD PTR [rbx+0x28]
   14002752d:	cmp    rcx,QWORD PTR [rip+0x19a84]        # 0x140040fb8
   140027534:	je     0x14002753b
   140027536:	call   0x1400130a8
   14002753b:	mov    rcx,QWORD PTR [rbx+0x30]
   14002753f:	cmp    rcx,QWORD PTR [rip+0x19a7a]        # 0x140040fc0
   140027546:	je     0x14002754d
   140027548:	call   0x1400130a8
   14002754d:	mov    rcx,QWORD PTR [rbx+0x38]
   140027551:	cmp    rcx,QWORD PTR [rip+0x19a70]        # 0x140040fc8
   140027558:	je     0x14002755f
   14002755a:	call   0x1400130a8
   14002755f:	mov    rcx,QWORD PTR [rbx+0x40]
   140027563:	cmp    rcx,QWORD PTR [rip+0x19a66]        # 0x140040fd0
   14002756a:	je     0x140027571
   14002756c:	call   0x1400130a8
   140027571:	mov    rcx,QWORD PTR [rbx+0x48]
   140027575:	cmp    rcx,QWORD PTR [rip+0x19a5c]        # 0x140040fd8
   14002757c:	je     0x140027583
   14002757e:	call   0x1400130a8
   140027583:	mov    rcx,QWORD PTR [rbx+0x68]
   140027587:	cmp    rcx,QWORD PTR [rip+0x19a6a]        # 0x140040ff8
   14002758e:	je     0x140027595
   140027590:	call   0x1400130a8
   140027595:	mov    rcx,QWORD PTR [rbx+0x70]
   140027599:	cmp    rcx,QWORD PTR [rip+0x19a60]        # 0x140041000
   1400275a0:	je     0x1400275a7
   1400275a2:	call   0x1400130a8
   1400275a7:	mov    rcx,QWORD PTR [rbx+0x78]
   1400275ab:	cmp    rcx,QWORD PTR [rip+0x19a56]        # 0x140041008
   1400275b2:	je     0x1400275b9
   1400275b4:	call   0x1400130a8
   1400275b9:	mov    rcx,QWORD PTR [rbx+0x80]
   1400275c0:	cmp    rcx,QWORD PTR [rip+0x19a49]        # 0x140041010
   1400275c7:	je     0x1400275ce
   1400275c9:	call   0x1400130a8
   1400275ce:	mov    rcx,QWORD PTR [rbx+0x88]
   1400275d5:	cmp    rcx,QWORD PTR [rip+0x19a3c]        # 0x140041018
   1400275dc:	je     0x1400275e3
   1400275de:	call   0x1400130a8
   1400275e3:	mov    rcx,QWORD PTR [rbx+0x90]
   1400275ea:	cmp    rcx,QWORD PTR [rip+0x19a2f]        # 0x140041020
   1400275f1:	je     0x1400275f8
   1400275f3:	call   0x1400130a8
   1400275f8:	add    rsp,0x20
   1400275fc:	pop    rbx
   1400275fd:	ret    
   1400275fe:	int3   
   1400275ff:	int3   
   140027600:	rex push rbx
   140027602:	sub    rsp,0x20
   140027606:	xor    ebx,ebx
   140027608:	mov    r10,r8
   14002760b:	test   r9,r9
   14002760e:	jne    0x14002761e
   140027610:	test   rcx,rcx
   140027613:	jne    0x140027623
   140027615:	test   rdx,rdx
   140027618:	jne    0x140027638
   14002761a:	xor    eax,eax
   14002761c:	jmp    0x14002764b
   14002761e:	test   rcx,rcx
   140027621:	je     0x140027638
   140027623:	test   rdx,rdx
   140027626:	je     0x140027638
   140027628:	test   r9,r9
   14002762b:	jne    0x140027631
   14002762d:	mov    BYTE PTR [rcx],bl
   14002762f:	jmp    0x14002761a
   140027631:	test   r8,r8
   140027634:	jne    0x140027651
   140027636:	mov    BYTE PTR [rcx],bl
   140027638:	call   0x14001583c
   14002763d:	mov    ebx,0x16
   140027642:	mov    DWORD PTR [rax],ebx
   140027644:	call   0x140019f74
   140027649:	mov    eax,ebx
   14002764b:	add    rsp,0x20
   14002764f:	pop    rbx
   140027650:	ret    
   140027651:	mov    r11,rcx
   140027654:	mov    r8,rdx
   140027657:	cmp    r9,0xffffffffffffffff
   14002765b:	jne    0x140027675
   14002765d:	sub    r11,r10
   140027660:	mov    al,BYTE PTR [r10]
   140027663:	mov    BYTE PTR [r11+r10*1],al
   140027667:	inc    r10
   14002766a:	test   al,al
   14002766c:	je     0x140027698
   14002766e:	dec    r8
   140027671:	jne    0x140027660
   140027673:	jmp    0x140027698
   140027675:	sub    r10,rcx
   140027678:	mov    al,BYTE PTR [r10+r11*1]
   14002767c:	mov    BYTE PTR [r11],al
   14002767f:	inc    r11
   140027682:	test   al,al
   140027684:	je     0x140027690
   140027686:	dec    r8
   140027689:	je     0x140027690
   14002768b:	dec    r9
   14002768e:	jne    0x140027678
   140027690:	test   r9,r9
   140027693:	jne    0x140027698
   140027695:	mov    BYTE PTR [r11],bl
   140027698:	test   r8,r8
   14002769b:	jne    0x14002761a
   1400276a1:	cmp    r9,0xffffffffffffffff
   1400276a5:	jne    0x1400276b1
   1400276a7:	mov    BYTE PTR [rcx+rdx*1-0x1],bl
   1400276ab:	lea    eax,[r8+0x50]
   1400276af:	jmp    0x14002764b
   1400276b1:	mov    BYTE PTR [rcx],bl
   1400276b3:	call   0x14001583c
   1400276b8:	mov    ebx,0x22
   1400276bd:	jmp    0x140027642
   1400276bf:	int3   
   1400276c0:	sub    rsp,0x28
   1400276c4:	call   0x14001ae14
   1400276c9:	mov    rcx,QWORD PTR [rax+0xc0]
   1400276d0:	cmp    rcx,QWORD PTR [rip+0x19179]        # 0x140040850
   1400276d7:	je     0x1400276ef
   1400276d9:	mov    eax,DWORD PTR [rax+0xc8]
   1400276df:	test   DWORD PTR [rip+0x18d3b],eax        # 0x140040420
   1400276e5:	jne    0x1400276ef
   1400276e7:	call   0x14001ac2c
   1400276ec:	mov    rcx,rax
   1400276ef:	mov    eax,DWORD PTR [rcx+0x4]
   1400276f2:	add    rsp,0x28
   1400276f6:	ret    
   1400276f7:	int3   
   1400276f8:	rex push rbx
   1400276fa:	push   rbp
   1400276fb:	push   rsi
   1400276fc:	push   rdi
   1400276fd:	push   r12
   1400276ff:	push   r13
   140027701:	push   r14
   140027703:	sub    rsp,0x50
   140027707:	mov    rax,QWORD PTR [rip+0x18222]        # 0x14003f930
   14002770e:	xor    rax,rsp
   140027711:	mov    QWORD PTR [rsp+0x48],rax
   140027716:	mov    ebp,r8d
   140027719:	mov    r14,rdx
   14002771c:	mov    r13,rcx
   14002771f:	call   0x14001aca4
   140027724:	xor    ebx,ebx
   140027726:	cmp    QWORD PTR [rip+0x2ee1b],rbx        # 0x140056548
   14002772d:	mov    rdi,rax
   140027730:	jne    0x14002780b
   140027736:	lea    rcx,[rip+0xbb0b]        # 0x140033248
   14002773d:	call   QWORD PTR [rip+0x78bd]        # 0x14002f000
   140027743:	mov    rsi,rax
   140027746:	test   rax,rax
   140027749:	je     0x1400278e2
   14002774f:	lea    rdx,[rip+0xbae2]        # 0x140033238
   140027756:	mov    rcx,rax
   140027759:	call   QWORD PTR [rip+0x78b9]        # 0x14002f018
   14002775f:	test   rax,rax
   140027762:	je     0x1400278e2
   140027768:	mov    rcx,rax
   14002776b:	call   QWORD PTR [rip+0x7ba7]        # 0x14002f318
   140027771:	lea    rdx,[rip+0xbab0]        # 0x140033228
   140027778:	mov    rcx,rsi
   14002777b:	mov    QWORD PTR [rip+0x2edc6],rax        # 0x140056548
   140027782:	call   QWORD PTR [rip+0x7890]        # 0x14002f018
   140027788:	mov    rcx,rax
   14002778b:	call   QWORD PTR [rip+0x7b87]        # 0x14002f318
   140027791:	lea    rdx,[rip+0xba78]        # 0x140033210
   140027798:	mov    rcx,rsi
   14002779b:	mov    QWORD PTR [rip+0x2edae],rax        # 0x140056550
   1400277a2:	call   QWORD PTR [rip+0x7870]        # 0x14002f018
   1400277a8:	mov    rcx,rax
   1400277ab:	call   QWORD PTR [rip+0x7b67]        # 0x14002f318
   1400277b1:	lea    rdx,[rip+0xba38]        # 0x1400331f0
   1400277b8:	mov    rcx,rsi
   1400277bb:	mov    QWORD PTR [rip+0x2ed96],rax        # 0x140056558
   1400277c2:	call   QWORD PTR [rip+0x7850]        # 0x14002f018
   1400277c8:	mov    rcx,rax
   1400277cb:	call   QWORD PTR [rip+0x7b47]        # 0x14002f318
   1400277d1:	mov    r11,rax
   1400277d4:	mov    QWORD PTR [rip+0x2ed8d],rax        # 0x140056568
   1400277db:	test   rax,rax
   1400277de:	je     0x140027802
   1400277e0:	lea    rdx,[rip+0xb9f1]        # 0x1400331d8
   1400277e7:	mov    rcx,rsi
   1400277ea:	call   QWORD PTR [rip+0x7828]        # 0x14002f018
   1400277f0:	mov    rcx,rax
   1400277f3:	call   QWORD PTR [rip+0x7b1f]        # 0x14002f318
   1400277f9:	mov    QWORD PTR [rip+0x2ed60],rax        # 0x140056560
   140027800:	jmp    0x140027812
   140027802:	mov    rax,QWORD PTR [rip+0x2ed57]        # 0x140056560
   140027809:	jmp    0x140027819
   14002780b:	mov    rax,QWORD PTR [rip+0x2ed4e]        # 0x140056560
   140027812:	mov    r11,QWORD PTR [rip+0x2ed4f]        # 0x140056568
   140027819:	cmp    rax,rdi
   14002781c:	je     0x140027880
   14002781e:	cmp    r11,rdi
   140027821:	je     0x140027880
   140027823:	mov    rcx,rax
   140027826:	call   QWORD PTR [rip+0x7a3c]        # 0x14002f268
   14002782c:	mov    rcx,QWORD PTR [rip+0x2ed35]        # 0x140056568
   140027833:	mov    rsi,rax
   140027836:	call   QWORD PTR [rip+0x7a2c]        # 0x14002f268
   14002783c:	mov    r12,rax
   14002783f:	test   rsi,rsi
   140027842:	je     0x140027880
   140027844:	test   rax,rax
   140027847:	je     0x140027880
   140027849:	call   rsi
   14002784b:	test   rax,rax
   14002784e:	je     0x14002787a
   140027850:	lea    rcx,[rsp+0x30]
   140027855:	mov    r9d,0xc
   14002785b:	lea    r8,[rsp+0x38]
   140027860:	mov    QWORD PTR [rsp+0x20],rcx
   140027865:	lea    edx,[r9-0xb]
   140027869:	mov    rcx,rax
   14002786c:	call   r12
   14002786f:	test   eax,eax
   140027871:	je     0x14002787a
   140027873:	test   BYTE PTR [rsp+0x40],0x1
   140027878:	jne    0x140027880
   14002787a:	bts    ebp,0x15
   14002787e:	jmp    0x1400278c0
   140027880:	mov    rcx,QWORD PTR [rip+0x2ecc9]        # 0x140056550
   140027887:	cmp    rcx,rdi
   14002788a:	je     0x1400278c0
   14002788c:	call   QWORD PTR [rip+0x79d6]        # 0x14002f268
   140027892:	test   rax,rax
   140027895:	je     0x1400278c0
   140027897:	call   rax
   140027899:	mov    rbx,rax
   14002789c:	test   rax,rax
   14002789f:	je     0x1400278c0
   1400278a1:	mov    rcx,QWORD PTR [rip+0x2ecb0]        # 0x140056558
   1400278a8:	cmp    rcx,rdi
   1400278ab:	je     0x1400278c0
   1400278ad:	call   QWORD PTR [rip+0x79b5]        # 0x14002f268
   1400278b3:	test   rax,rax
   1400278b6:	je     0x1400278c0
   1400278b8:	mov    rcx,rbx
   1400278bb:	call   rax
   1400278bd:	mov    rbx,rax
   1400278c0:	mov    rcx,QWORD PTR [rip+0x2ec81]        # 0x140056548
   1400278c7:	call   QWORD PTR [rip+0x799b]        # 0x14002f268
   1400278cd:	test   rax,rax
   1400278d0:	je     0x1400278e2
   1400278d2:	mov    r9d,ebp
   1400278d5:	mov    r8,r14
   1400278d8:	mov    rdx,r13
   1400278db:	mov    rcx,rbx
   1400278de:	call   rax
   1400278e0:	jmp    0x1400278e4
   1400278e2:	xor    eax,eax
   1400278e4:	mov    rcx,QWORD PTR [rsp+0x48]
   1400278e9:	xor    rcx,rsp
   1400278ec:	call   0x140012670
   1400278f1:	add    rsp,0x50
   1400278f5:	pop    r14
   1400278f7:	pop    r13
   1400278f9:	pop    r12
   1400278fb:	pop    rdi
   1400278fc:	pop    rsi
   1400278fd:	pop    rbp
   1400278fe:	pop    rbx
   1400278ff:	ret    
   140027900:	sub    rsp,0x28
   140027904:	test   ecx,ecx
   140027906:	js     0x140027928
   140027908:	cmp    ecx,0x2
   14002790b:	jle    0x14002791a
   14002790d:	cmp    ecx,0x3
   140027910:	jne    0x140027928
   140027912:	mov    eax,DWORD PTR [rip+0x2dac8]        # 0x1400553e0
   140027918:	jmp    0x14002793b
   14002791a:	mov    eax,DWORD PTR [rip+0x2dac0]        # 0x1400553e0
   140027920:	mov    DWORD PTR [rip+0x2daba],ecx        # 0x1400553e0
   140027926:	jmp    0x14002793b
   140027928:	call   0x14001583c
   14002792d:	mov    DWORD PTR [rax],0x16
   140027933:	call   0x140019f74
   140027938:	or     eax,0xffffffff
   14002793b:	add    rsp,0x28
   14002793f:	ret    
   140027940:	mov    rax,rsp
   140027943:	mov    QWORD PTR [rax+0x8],rbx
   140027947:	mov    QWORD PTR [rax+0x10],rbp
   14002794b:	mov    QWORD PTR [rax+0x18],rsi
   14002794f:	mov    QWORD PTR [rax+0x20],rdi
   140027953:	push   r12
   140027955:	sub    rsp,0x30
   140027959:	movsxd rbx,r9d
   14002795c:	mov    rsi,r8
   14002795f:	mov    ebp,edx
   140027961:	mov    r12d,ecx
   140027964:	test   r9d,r9d
   140027967:	jle    0x140027977
   140027969:	mov    rdx,rbx
   14002796c:	mov    rcx,r8
   14002796f:	call   0x14001cd0c
   140027974:	mov    rbx,rax
   140027977:	movsxd rax,DWORD PTR [rsp+0x68]
   14002797c:	mov    rdi,QWORD PTR [rsp+0x60]
   140027981:	test   eax,eax
   140027983:	jle    0x140027990
   140027985:	mov    rdx,rax
   140027988:	mov    rcx,rdi
   14002798b:	call   0x14001cd0c
   140027990:	test   ebx,ebx
   140027992:	je     0x1400279b4
   140027994:	test   eax,eax
   140027996:	je     0x1400279b4
   140027998:	mov    DWORD PTR [rsp+0x28],eax
   14002799c:	mov    r9d,ebx
   14002799f:	mov    r8,rsi
   1400279a2:	mov    edx,ebp
   1400279a4:	mov    ecx,r12d
   1400279a7:	mov    QWORD PTR [rsp+0x20],rdi
   1400279ac:	call   QWORD PTR [rip+0x779e]        # 0x14002f150
   1400279b2:	jmp    0x1400279cb
   1400279b4:	sub    ebx,eax
   1400279b6:	mov    eax,0x3
   1400279bb:	lea    ecx,[rax-0x2]
   1400279be:	cmovs  eax,ecx
   1400279c1:	mov    ecx,0x2
   1400279c6:	test   ebx,ebx
   1400279c8:	cmove  eax,ecx
   1400279cb:	mov    rbx,QWORD PTR [rsp+0x40]
   1400279d0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400279d5:	mov    rsi,QWORD PTR [rsp+0x50]
   1400279da:	mov    rdi,QWORD PTR [rsp+0x58]
   1400279df:	add    rsp,0x30
   1400279e3:	pop    r12
   1400279e5:	ret    
   1400279e6:	int3   
   1400279e7:	int3   
   1400279e8:	sub    rsp,0x28
   1400279ec:	cmp    ecx,0xfffffffe
   1400279ef:	jne    0x1400279fe
   1400279f1:	call   0x14001583c
   1400279f6:	mov    DWORD PTR [rax],0x9
   1400279fc:	jmp    0x140027a40
   1400279fe:	test   ecx,ecx
   140027a00:	js     0x140027a30
   140027a02:	cmp    ecx,DWORD PTR [rip+0x2ebfc]        # 0x140056604
   140027a08:	jae    0x140027a30
   140027a0a:	movsxd rcx,ecx
   140027a0d:	lea    rdx,[rip+0x2ec0c]        # 0x140056620
   140027a14:	mov    rax,rcx
   140027a17:	and    ecx,0x1f
   140027a1a:	sar    rax,0x5
   140027a1e:	imul   rcx,rcx,0x58
   140027a22:	mov    rax,QWORD PTR [rdx+rax*8]
   140027a26:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140027a2b:	and    eax,0x40
   140027a2e:	jmp    0x140027a42
   140027a30:	call   0x14001583c
   140027a35:	mov    DWORD PTR [rax],0x9
   140027a3b:	call   0x140019f74
   140027a40:	xor    eax,eax
   140027a42:	add    rsp,0x28
   140027a46:	ret    
   140027a47:	int3   
   140027a48:	mov    QWORD PTR [rsp+0x8],rbx
   140027a4d:	mov    WORD PTR [rsp+0x20],r9w
   140027a53:	push   rbp
   140027a54:	push   rsi
   140027a55:	push   rdi
   140027a56:	mov    rbp,rsp
   140027a59:	sub    rsp,0x60
   140027a5d:	mov    rdi,r8
   140027a60:	mov    rsi,rdx
   140027a63:	mov    rbx,rcx
   140027a66:	test   rdx,rdx
   140027a69:	jne    0x140027a7e
   140027a6b:	test   r8,r8
   140027a6e:	je     0x140027a7e
   140027a70:	test   rcx,rcx
   140027a73:	je     0x140027a77
   140027a75:	and    DWORD PTR [rcx],edx
   140027a77:	xor    eax,eax
   140027a79:	jmp    0x140027b08
   140027a7e:	test   rcx,rcx
   140027a81:	je     0x140027a86
   140027a83:	or     DWORD PTR [rcx],0xffffffff
   140027a86:	cmp    r8,0x7fffffff
   140027a8d:	jbe    0x140027aa4
   140027a8f:	call   0x14001583c
   140027a94:	mov    ebx,0x16
   140027a99:	mov    DWORD PTR [rax],ebx
   140027a9b:	call   0x140019f74
   140027aa0:	mov    eax,ebx
   140027aa2:	jmp    0x140027b08
   140027aa4:	mov    rdx,QWORD PTR [rbp+0x40]
   140027aa8:	lea    rcx,[rbp-0x20]
   140027aac:	call   0x140012690
   140027ab1:	mov    r11,QWORD PTR [rbp-0x20]
   140027ab5:	cmp    DWORD PTR [r11+0x14],0x0
   140027aba:	jne    0x140027b72
   140027ac0:	movzx  eax,WORD PTR [rbp+0x38]
   140027ac4:	mov    ecx,0xff
   140027ac9:	cmp    ax,cx
   140027acc:	jbe    0x140027b18
   140027ace:	test   rsi,rsi
   140027ad1:	je     0x140027ae5
   140027ad3:	test   rdi,rdi
   140027ad6:	je     0x140027ae5
   140027ad8:	mov    r8,rdi
   140027adb:	xor    edx,edx
   140027add:	mov    rcx,rsi
   140027ae0:	call   0x140012fb0
   140027ae5:	call   0x14001583c
   140027aea:	mov    DWORD PTR [rax],0x2a
   140027af0:	call   0x14001583c
   140027af5:	cmp    BYTE PTR [rbp-0x8],0x0
   140027af9:	mov    eax,DWORD PTR [rax]
   140027afb:	je     0x140027b08
   140027afd:	mov    rcx,QWORD PTR [rbp-0x10]
   140027b01:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140027b08:	mov    rbx,QWORD PTR [rsp+0x80]
   140027b10:	add    rsp,0x60
   140027b14:	pop    rdi
   140027b15:	pop    rsi
   140027b16:	pop    rbp
   140027b17:	ret    
   140027b18:	test   rsi,rsi
   140027b1b:	je     0x140027b4d
   140027b1d:	test   rdi,rdi
   140027b20:	jne    0x140027b4b
   140027b22:	call   0x14001583c
   140027b27:	lea    ebx,[rdi+0x22]
   140027b2a:	mov    DWORD PTR [rax],ebx
   140027b2c:	call   0x140019f74
   140027b31:	cmp    BYTE PTR [rbp-0x8],dil
   140027b35:	je     0x140027aa0
   140027b3b:	mov    rcx,QWORD PTR [rbp-0x10]
   140027b3f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140027b46:	jmp    0x140027aa0
   140027b4b:	mov    BYTE PTR [rsi],al
   140027b4d:	test   rbx,rbx
   140027b50:	je     0x140027b58
   140027b52:	mov    DWORD PTR [rbx],0x1
   140027b58:	cmp    BYTE PTR [rbp-0x8],0x0
   140027b5c:	je     0x140027a77
   140027b62:	mov    rax,QWORD PTR [rbp-0x10]
   140027b66:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140027b6d:	jmp    0x140027a77
   140027b72:	and    DWORD PTR [rbp+0x28],0x0
   140027b76:	mov    ecx,DWORD PTR [r11+0x4]
   140027b7a:	lea    rax,[rbp+0x28]
   140027b7e:	mov    QWORD PTR [rsp+0x38],rax
   140027b83:	and    QWORD PTR [rsp+0x30],0x0
   140027b89:	lea    r8,[rbp+0x38]
   140027b8d:	mov    r9d,0x1
   140027b93:	xor    edx,edx
   140027b95:	mov    DWORD PTR [rsp+0x28],edi
   140027b99:	mov    QWORD PTR [rsp+0x20],rsi
   140027b9e:	call   QWORD PTR [rip+0x768c]        # 0x14002f230
   140027ba4:	test   eax,eax
   140027ba6:	je     0x140027bbb
   140027ba8:	cmp    DWORD PTR [rbp+0x28],0x0
   140027bac:	jne    0x140027ae5
   140027bb2:	test   rbx,rbx
   140027bb5:	je     0x140027b58
   140027bb7:	mov    DWORD PTR [rbx],eax
   140027bb9:	jmp    0x140027b58
   140027bbb:	call   QWORD PTR [rip+0x74ef]        # 0x14002f0b0
   140027bc1:	cmp    eax,0x7a
   140027bc4:	jne    0x140027ae5
   140027bca:	test   rsi,rsi
   140027bcd:	je     0x140027be1
   140027bcf:	test   rdi,rdi
   140027bd2:	je     0x140027be1
   140027bd4:	mov    r8,rdi
   140027bd7:	xor    edx,edx
   140027bd9:	mov    rcx,rsi
   140027bdc:	call   0x140012fb0
   140027be1:	call   0x14001583c
   140027be6:	mov    ebx,0x22
   140027beb:	mov    DWORD PTR [rax],ebx
   140027bed:	call   0x140019f74
   140027bf2:	cmp    BYTE PTR [rbp-0x8],0x0
   140027bf6:	je     0x140027aa0
   140027bfc:	mov    rax,QWORD PTR [rbp-0x10]
   140027c00:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140027c07:	jmp    0x140027aa0
   140027c0c:	sub    rsp,0x38
   140027c10:	and    QWORD PTR [rsp+0x20],0x0
   140027c16:	call   0x140027a48
   140027c1b:	add    rsp,0x38
   140027c1f:	ret    
   140027c20:	test   edx,edx
   140027c22:	jle    0x140027c70
   140027c24:	mov    QWORD PTR [rsp+0x8],rbx
   140027c29:	mov    QWORD PTR [rsp+0x10],rbp
   140027c2e:	mov    QWORD PTR [rsp+0x18],rsi
   140027c33:	push   rdi
   140027c34:	sub    rsp,0x20
   140027c38:	mov    rdi,r9
   140027c3b:	mov    rsi,r8
   140027c3e:	mov    ebx,edx
   140027c40:	mov    bpl,cl
   140027c43:	mov    r8,rdi
   140027c46:	mov    rdx,rsi
   140027c49:	mov    cl,bpl
   140027c4c:	dec    ebx
   140027c4e:	call   0x14001ce38
   140027c53:	cmp    DWORD PTR [rdi],0xffffffff
   140027c56:	je     0x140027c5c
   140027c58:	test   ebx,ebx
   140027c5a:	jg     0x140027c43
   140027c5c:	mov    rbx,QWORD PTR [rsp+0x30]
   140027c61:	mov    rbp,QWORD PTR [rsp+0x38]
   140027c66:	mov    rsi,QWORD PTR [rsp+0x40]
   140027c6b:	add    rsp,0x20
   140027c6f:	pop    rdi
   140027c70:	ret    
   140027c71:	int3   
   140027c72:	int3   
   140027c73:	int3   
   140027c74:	mov    QWORD PTR [rsp+0x18],rbx
   140027c79:	push   rbp
   140027c7a:	push   rsi
   140027c7b:	push   rdi
   140027c7c:	push   r12
   140027c7e:	push   r13
   140027c80:	push   r14
   140027c82:	push   r15
   140027c84:	lea    rbp,[rsp-0x1d0]
   140027c8c:	sub    rsp,0x2d0
   140027c93:	mov    rax,QWORD PTR [rip+0x17c96]        # 0x14003f930
   140027c9a:	xor    rax,rsp
   140027c9d:	mov    QWORD PTR [rbp+0x1c8],rax
   140027ca4:	xor    eax,eax
   140027ca6:	mov    rbx,rcx
   140027ca9:	mov    QWORD PTR [rsp+0x70],rcx
   140027cae:	mov    QWORD PTR [rsp+0x68],rdx
   140027cb3:	lea    rcx,[rbp-0x80]
   140027cb7:	mov    rdx,r8
   140027cba:	mov    r15,r9
   140027cbd:	mov    DWORD PTR [rsp+0x64],eax
   140027cc1:	mov    r13d,eax
   140027cc4:	mov    DWORD PTR [rsp+0x58],eax
   140027cc8:	mov    edi,eax
   140027cca:	mov    DWORD PTR [rsp+0x44],eax
   140027cce:	mov    DWORD PTR [rsp+0x4c],eax
   140027cd2:	mov    DWORD PTR [rsp+0x5c],eax
   140027cd6:	mov    DWORD PTR [rsp+0x54],eax
   140027cda:	call   0x140012690
   140027cdf:	call   0x14001583c
   140027ce4:	xor    r10d,r10d
   140027ce7:	mov    QWORD PTR [rbp-0x60],rax
   140027ceb:	test   rbx,rbx
   140027cee:	jne    0x140027d1c
   140027cf0:	call   0x14001583c
   140027cf5:	mov    DWORD PTR [rax],0x16
   140027cfb:	call   0x140019f74
   140027d00:	xor    r11d,r11d
   140027d03:	cmp    BYTE PTR [rbp-0x68],r11b
   140027d07:	je     0x140027d14
   140027d09:	mov    rax,QWORD PTR [rbp-0x70]
   140027d0d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140027d14:	or     eax,0xffffffff
   140027d17:	jmp    0x1400284f7
   140027d1c:	or     r14d,0xffffffff
   140027d20:	test   BYTE PTR [rbx+0x18],0x40
   140027d24:	lea    r9,[rip+0xfffffffffffd82d5]        # 0x140000000
   140027d2b:	jne    0x140027dd6
   140027d31:	mov    rcx,rbx
   140027d34:	call   0x1400211a0
   140027d39:	lea    rdx,[rip+0x18f20]        # 0x140040c60
   140027d40:	cmp    eax,r14d
   140027d43:	je     0x140027d6d
   140027d45:	cmp    eax,0xfffffffe
   140027d48:	je     0x140027d6d
   140027d4a:	movsxd r8,eax
   140027d4d:	lea    r9,[rip+0xfffffffffffd82ac]        # 0x140000000
   140027d54:	mov    rcx,r8
   140027d57:	and    r8d,0x1f
   140027d5b:	sar    rcx,0x5
   140027d5f:	imul   r8,r8,0x58
   140027d63:	add    r8,QWORD PTR [r9+rcx*8+0x56620]
   140027d6b:	jmp    0x140027d77
   140027d6d:	mov    r8,rdx
   140027d70:	lea    r9,[rip+0xfffffffffffd8289]        # 0x140000000
   140027d77:	test   BYTE PTR [r8+0x38],0x7f
   140027d7c:	jne    0x140027da7
   140027d7e:	cmp    eax,r14d
   140027d81:	je     0x140027da1
   140027d83:	cmp    eax,0xfffffffe
   140027d86:	je     0x140027da1
   140027d88:	movsxd rdx,eax
   140027d8b:	mov    rax,rdx
   140027d8e:	and    edx,0x1f
   140027d91:	sar    rax,0x5
   140027d95:	imul   rdx,rdx,0x58
   140027d99:	add    rdx,QWORD PTR [r9+rax*8+0x56620]
   140027da1:	test   BYTE PTR [rdx+0x38],0x80
   140027da5:	je     0x140027dd3
   140027da7:	call   0x14001583c
   140027dac:	mov    DWORD PTR [rax],0x16
   140027db2:	call   0x140019f74
   140027db7:	xor    r11d,r11d
   140027dba:	cmp    BYTE PTR [rbp-0x68],r11b
   140027dbe:	je     0x140027dcb
   140027dc0:	mov    rax,QWORD PTR [rbp-0x70]
   140027dc4:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140027dcb:	mov    eax,r14d
   140027dce:	jmp    0x1400284f7
   140027dd3:	xor    r10d,r10d
   140027dd6:	mov    rdx,QWORD PTR [rsp+0x68]
   140027ddb:	test   rdx,rdx
   140027dde:	je     0x140027da7
   140027de0:	mov    r12b,BYTE PTR [rdx]
   140027de3:	mov    esi,r10d
   140027de6:	mov    DWORD PTR [rsp+0x40],r10d
   140027deb:	mov    DWORD PTR [rsp+0x48],r10d
   140027df0:	mov    r8d,r10d
   140027df3:	mov    QWORD PTR [rbp-0x50],r10
   140027df7:	test   r12b,r12b
   140027dfa:	je     0x1400284e4
   140027e00:	mov    rbx,QWORD PTR [rbp-0x48]
   140027e04:	mov    r11d,0x200
   140027e0a:	inc    rdx
   140027e0d:	mov    QWORD PTR [rsp+0x68],rdx
   140027e12:	test   esi,esi
   140027e14:	js     0x1400284d5
   140027e1a:	lea    eax,[r12-0x20]
   140027e1f:	cmp    al,0x58
   140027e21:	ja     0x140027e35
   140027e23:	movsx  rax,r12b
   140027e27:	movzx  ecx,BYTE PTR [rax+r9*1+0x33240]
   140027e30:	and    ecx,0xf
   140027e33:	jmp    0x140027e38
   140027e35:	mov    ecx,r10d
   140027e38:	movsxd rax,ecx
   140027e3b:	lea    rcx,[rax+rax*8]
   140027e3f:	movsxd rax,r8d
   140027e42:	add    rcx,rax
   140027e45:	movzx  r8d,BYTE PTR [rcx+r9*1+0x33260]
   140027e4e:	shr    r8d,0x4
   140027e52:	mov    DWORD PTR [rsp+0x60],r8d
   140027e57:	cmp    r8d,0x8
   140027e5b:	je     0x140027da7
   140027e61:	mov    ecx,r8d
   140027e64:	test   r8d,r8d
   140027e67:	je     0x1400285d0
   140027e6d:	dec    ecx
   140027e6f:	je     0x140028701
   140027e75:	dec    ecx
   140027e77:	je     0x1400286b1
   140027e7d:	dec    ecx
   140027e7f:	je     0x140028678
   140027e85:	dec    ecx
   140027e87:	je     0x14002866b
   140027e8d:	dec    ecx
   140027e8f:	je     0x140028631
   140027e95:	dec    ecx
   140027e97:	je     0x140028521
   140027e9d:	dec    ecx
   140027e9f:	jne    0x1400284c9
   140027ea5:	movsx  eax,r12b
   140027ea9:	cmp    eax,0x64
   140027eac:	jg     0x140028025
   140027eb2:	je     0x140028126
   140027eb8:	cmp    eax,0x41
   140027ebb:	je     0x140027ff9
   140027ec1:	cmp    eax,0x43
   140027ec4:	je     0x140027f9f
   140027eca:	cmp    eax,0x45
   140027ecd:	je     0x140027ff9
   140027ed3:	cmp    eax,0x47
   140027ed6:	je     0x140027ff9
   140027edc:	cmp    eax,0x53
   140027edf:	je     0x140027f55
   140027ee1:	cmp    eax,0x58
   140027ee4:	je     0x1400280c0
   140027eea:	cmp    eax,0x5a
   140027eed:	je     0x140027f06
   140027eef:	cmp    eax,0x61
   140027ef2:	je     0x140028005
   140027ef8:	cmp    eax,0x63
   140027efb:	je     0x140027fad
   140027f01:	jmp    0x140028331
   140027f06:	mov    rax,QWORD PTR [r15]
   140027f09:	add    r15,0x8
   140027f0d:	test   rax,rax
   140027f10:	je     0x140027f41
   140027f12:	mov    rbx,QWORD PTR [rax+0x8]
   140027f16:	test   rbx,rbx
   140027f19:	je     0x140027f41
   140027f1b:	movsx  eax,WORD PTR [rax]
   140027f1e:	bt     r13d,0xb
   140027f23:	jae    0x140027f37
   140027f25:	cdq    
   140027f26:	mov    DWORD PTR [rsp+0x54],0x1
   140027f2e:	sub    eax,edx
   140027f30:	sar    eax,1
   140027f32:	jmp    0x14002832d
   140027f37:	mov    DWORD PTR [rsp+0x54],r10d
   140027f3c:	jmp    0x14002832d
   140027f41:	mov    rbx,QWORD PTR [rip+0x18ca8]        # 0x140040bf0
   140027f48:	mov    rcx,rbx
   140027f4b:	call   0x14001dae0
   140027f50:	jmp    0x14002832a
   140027f55:	test   r13d,0x830
   140027f5c:	jne    0x140027f63
   140027f5e:	bts    r13d,0xb
   140027f63:	mov    rbx,QWORD PTR [r15]
   140027f66:	cmp    edi,r14d
   140027f69:	mov    eax,edi
   140027f6b:	mov    ecx,0x7fffffff
   140027f70:	cmove  eax,ecx
   140027f73:	add    r15,0x8
   140027f77:	test   r13d,0x810
   140027f7e:	je     0x14002808d
   140027f84:	test   rbx,rbx
   140027f87:	mov    DWORD PTR [rsp+0x54],0x1
   140027f8f:	cmove  rbx,QWORD PTR [rip+0x18c61]        # 0x140040bf8
   140027f97:	mov    rcx,rbx
   140027f9a:	jmp    0x140028081
   140027f9f:	test   r13d,0x830
   140027fa6:	jne    0x140027fad
   140027fa8:	bts    r13d,0xb
   140027fad:	add    r15,0x8
   140027fb1:	test   r13d,0x810
   140027fb8:	je     0x140027fe1
   140027fba:	movzx  r9d,WORD PTR [r15-0x8]
   140027fbf:	lea    rdx,[rbp-0x40]
   140027fc3:	lea    rcx,[rsp+0x48]
   140027fc8:	mov    r8,r11
   140027fcb:	call   0x140027c0c
   140027fd0:	xor    r10d,r10d
   140027fd3:	test   eax,eax
   140027fd5:	je     0x140027ff0
   140027fd7:	mov    DWORD PTR [rsp+0x5c],0x1
   140027fdf:	jmp    0x140027ff0
   140027fe1:	mov    al,BYTE PTR [r15-0x8]
   140027fe5:	mov    DWORD PTR [rsp+0x48],0x1
   140027fed:	mov    BYTE PTR [rbp-0x40],al
   140027ff0:	lea    rbx,[rbp-0x40]
   140027ff4:	jmp    0x140028331
   140027ff9:	mov    DWORD PTR [rsp+0x78],0x1
   140028001:	add    r12b,0x20
   140028005:	or     r13d,0x40
   140028009:	lea    rbx,[rbp-0x40]
   14002800d:	mov    esi,r11d
   140028010:	test   edi,edi
   140028012:	jns    0x140028236
   140028018:	mov    DWORD PTR [rsp+0x44],0x6
   140028020:	jmp    0x140028281
   140028025:	cmp    eax,0x65
   140028028:	jl     0x140028331
   14002802e:	cmp    eax,0x67
   140028031:	jle    0x140028005
   140028033:	cmp    eax,0x69
   140028036:	je     0x140028126
   14002803c:	cmp    eax,0x6e
   14002803f:	je     0x1400280f5
   140028045:	cmp    eax,0x6f
   140028048:	je     0x1400280e5
   14002804e:	cmp    eax,0x70
   140028051:	je     0x1400280b6
   140028053:	cmp    eax,0x73
   140028056:	je     0x140027f63
   14002805c:	cmp    eax,0x75
   14002805f:	je     0x14002812a
   140028065:	cmp    eax,0x78
   140028068:	jne    0x140028331
   14002806e:	mov    eax,0x27
   140028073:	jmp    0x1400280c5
   140028075:	dec    eax
   140028077:	cmp    WORD PTR [rcx],r10w
   14002807b:	je     0x140028085
   14002807d:	add    rcx,0x2
   140028081:	test   eax,eax
   140028083:	jne    0x140028075
   140028085:	sub    rcx,rbx
   140028088:	sar    rcx,1
   14002808b:	jmp    0x1400280ad
   14002808d:	test   rbx,rbx
   140028090:	cmove  rbx,QWORD PTR [rip+0x18b58]        # 0x140040bf0
   140028098:	mov    rcx,rbx
   14002809b:	jmp    0x1400280a7
   14002809d:	dec    eax
   14002809f:	cmp    BYTE PTR [rcx],r10b
   1400280a2:	je     0x1400280ab
   1400280a4:	inc    rcx
   1400280a7:	test   eax,eax
   1400280a9:	jne    0x14002809d
   1400280ab:	sub    ecx,ebx
   1400280ad:	mov    DWORD PTR [rsp+0x48],ecx
   1400280b1:	jmp    0x140028331
   1400280b6:	mov    edi,0x10
   1400280bb:	bts    r13d,0xf
   1400280c0:	mov    eax,0x7
   1400280c5:	mov    DWORD PTR [rsp+0x64],eax
   1400280c9:	mov    r9d,0x10
   1400280cf:	test   r13b,r13b
   1400280d2:	jns    0x140028130
   1400280d4:	add    al,0x51
   1400280d6:	mov    BYTE PTR [rsp+0x50],0x30
   1400280db:	lea    edx,[r9-0xe]
   1400280df:	mov    BYTE PTR [rsp+0x51],al
   1400280e3:	jmp    0x140028134
   1400280e5:	mov    r9d,0x8
   1400280eb:	test   r13b,r13b
   1400280ee:	jns    0x140028130
   1400280f0:	or     r13d,r11d
   1400280f3:	jmp    0x140028130
   1400280f5:	mov    rdi,QWORD PTR [r15]
   1400280f8:	add    r15,0x8
   1400280fc:	call   0x140013778
   140028101:	xor    r10d,r10d
   140028104:	test   eax,eax
   140028106:	je     0x140027da7
   14002810c:	test   r13b,0x20
   140028110:	je     0x140028117
   140028112:	mov    WORD PTR [rdi],si
   140028115:	jmp    0x140028119
   140028117:	mov    DWORD PTR [rdi],esi
   140028119:	mov    DWORD PTR [rsp+0x5c],0x1
   140028121:	jmp    0x140028496
   140028126:	or     r13d,0x40
   14002812a:	mov    r9d,0xa
   140028130:	mov    edx,DWORD PTR [rsp+0x4c]
   140028134:	mov    eax,0x8000
   140028139:	test   eax,r13d
   14002813c:	jne    0x140028145
   14002813e:	bt     r13d,0xc
   140028143:	jae    0x14002814e
   140028145:	mov    r8,QWORD PTR [r15]
   140028148:	add    r15,0x8
   14002814c:	jmp    0x14002817c
   14002814e:	add    r15,0x8
   140028152:	test   r13b,0x20
   140028156:	je     0x14002816c
   140028158:	test   r13b,0x40
   14002815c:	je     0x140028165
   14002815e:	movsx  r8,WORD PTR [r15-0x8]
   140028163:	jmp    0x14002817c
   140028165:	movzx  r8d,WORD PTR [r15-0x8]
   14002816a:	jmp    0x14002817c
   14002816c:	test   r13b,0x40
   140028170:	je     0x140028178
   140028172:	movsxd r8,DWORD PTR [r15-0x8]
   140028176:	jmp    0x14002817c
   140028178:	mov    r8d,DWORD PTR [r15-0x8]
   14002817c:	test   r13b,0x40
   140028180:	je     0x14002818f
   140028182:	test   r8,r8
   140028185:	jns    0x14002818f
   140028187:	neg    r8
   14002818a:	bts    r13d,0x8
   14002818f:	test   eax,r13d
   140028192:	jne    0x14002819e
   140028194:	bt     r13d,0xc
   140028199:	jb     0x14002819e
   14002819b:	mov    r8d,r8d
   14002819e:	test   edi,edi
   1400281a0:	jns    0x1400281a9
   1400281a2:	mov    edi,0x1
   1400281a7:	jmp    0x1400281b4
   1400281a9:	and    r13d,0xfffffff7
   1400281ad:	cmp    edi,r11d
   1400281b0:	cmovg  edi,r11d
   1400281b4:	mov    esi,DWORD PTR [rsp+0x64]
   1400281b8:	mov    rax,r8
   1400281bb:	lea    rbx,[rbp+0x1bf]
   1400281c2:	neg    rax
   1400281c5:	sbb    ecx,ecx
   1400281c7:	and    ecx,edx
   1400281c9:	mov    DWORD PTR [rsp+0x4c],ecx
   1400281cd:	mov    ecx,edi
   1400281cf:	dec    edi
   1400281d1:	test   ecx,ecx
   1400281d3:	jg     0x1400281da
   1400281d5:	test   r8,r8
   1400281d8:	je     0x1400281f9
   1400281da:	xor    edx,edx
   1400281dc:	mov    rax,r8
   1400281df:	movsxd rcx,r9d
   1400281e2:	div    rcx
   1400281e5:	mov    r8,rax
   1400281e8:	lea    eax,[rdx+0x30]
   1400281eb:	cmp    eax,0x39
   1400281ee:	jle    0x1400281f2
   1400281f0:	add    eax,esi
   1400281f2:	mov    BYTE PTR [rbx],al
   1400281f4:	dec    rbx
   1400281f7:	jmp    0x1400281cd
   1400281f9:	mov    esi,DWORD PTR [rsp+0x40]
   1400281fd:	lea    rax,[rbp+0x1bf]
   140028204:	mov    DWORD PTR [rsp+0x44],edi
   140028208:	sub    eax,ebx
   14002820a:	inc    rbx
   14002820d:	mov    DWORD PTR [rsp+0x48],eax
   140028211:	test   r11d,r13d
   140028214:	je     0x140028331
   14002821a:	test   eax,eax
   14002821c:	je     0x140028227
   14002821e:	cmp    BYTE PTR [rbx],0x30
   140028221:	je     0x140028331
   140028227:	dec    rbx
   14002822a:	inc    DWORD PTR [rsp+0x48]
   14002822e:	mov    BYTE PTR [rbx],0x30
   140028231:	jmp    0x140028331
   140028236:	jne    0x140028248
   140028238:	cmp    r12b,0x67
   14002823c:	jne    0x140028281
   14002823e:	mov    DWORD PTR [rsp+0x44],0x1
   140028246:	jmp    0x140028281
   140028248:	cmp    edi,r11d
   14002824b:	cmovg  edi,r11d
   14002824f:	mov    DWORD PTR [rsp+0x44],edi
   140028253:	cmp    edi,0xa3
   140028259:	jle    0x140028281
   14002825b:	add    edi,0x15d
   140028261:	movsxd rcx,edi
   140028264:	call   0x140020c28
   140028269:	mov    QWORD PTR [rbp-0x50],rax
   14002826d:	test   rax,rax
   140028270:	je     0x140028279
   140028272:	mov    rbx,rax
   140028275:	mov    esi,edi
   140028277:	jmp    0x140028281
   140028279:	mov    DWORD PTR [rsp+0x44],0xa3
   140028281:	mov    rax,QWORD PTR [r15]
   140028284:	mov    rcx,QWORD PTR [rip+0x189a5]        # 0x140040c30
   14002828b:	add    r15,0x8
   14002828f:	movsx  edi,r12b
   140028293:	movsxd rsi,esi
   140028296:	mov    QWORD PTR [rbp-0x48],rax
   14002829a:	call   QWORD PTR [rip+0x6fc8]        # 0x14002f268
   1400282a0:	lea    rcx,[rbp-0x80]
   1400282a4:	mov    r9d,edi
   1400282a7:	mov    QWORD PTR [rsp+0x30],rcx
   1400282ac:	mov    ecx,DWORD PTR [rsp+0x78]
   1400282b0:	mov    r8,rsi
   1400282b3:	mov    DWORD PTR [rsp+0x28],ecx
   1400282b7:	mov    ecx,DWORD PTR [rsp+0x44]
   1400282bb:	mov    rdx,rbx
   1400282be:	mov    DWORD PTR [rsp+0x20],ecx
   1400282c2:	lea    rcx,[rbp-0x48]
   1400282c6:	call   rax
   1400282c8:	mov    edi,r13d
   1400282cb:	and    edi,0x80
   1400282d1:	je     0x1400282f1
   1400282d3:	xor    eax,eax
   1400282d5:	cmp    DWORD PTR [rsp+0x44],eax
   1400282d9:	jne    0x1400282f1
   1400282db:	mov    rcx,QWORD PTR [rip+0x18966]        # 0x140040c48
   1400282e2:	call   QWORD PTR [rip+0x6f80]        # 0x14002f268
   1400282e8:	lea    rdx,[rbp-0x80]
   1400282ec:	mov    rcx,rbx
   1400282ef:	call   rax
   1400282f1:	cmp    r12b,0x67
   1400282f5:	jne    0x140028311
   1400282f7:	test   edi,edi
   1400282f9:	jne    0x140028311
   1400282fb:	mov    rcx,QWORD PTR [rip+0x1893e]        # 0x140040c40
   140028302:	call   QWORD PTR [rip+0x6f60]        # 0x14002f268
   140028308:	lea    rdx,[rbp-0x80]
   14002830c:	mov    rcx,rbx
   14002830f:	call   rax
   140028311:	cmp    BYTE PTR [rbx],0x2d
   140028314:	jne    0x14002831e
   140028316:	bts    r13d,0x8
   14002831b:	inc    rbx
   14002831e:	mov    rcx,rbx
   140028321:	call   0x14001dae0
   140028326:	mov    esi,DWORD PTR [rsp+0x40]
   14002832a:	xor    r10d,r10d
   14002832d:	mov    DWORD PTR [rsp+0x48],eax
   140028331:	cmp    DWORD PTR [rsp+0x5c],r10d
   140028336:	jne    0x140028496
   14002833c:	test   r13b,0x40
   140028340:	je     0x140028373
   140028342:	bt     r13d,0x8
   140028347:	jae    0x140028350
   140028349:	mov    BYTE PTR [rsp+0x50],0x2d
   14002834e:	jmp    0x14002835b
   140028350:	test   r13b,0x1
   140028354:	je     0x140028366
   140028356:	mov    BYTE PTR [rsp+0x50],0x2b
   14002835b:	mov    edi,0x1
   140028360:	mov    DWORD PTR [rsp+0x4c],edi
   140028364:	jmp    0x140028377
   140028366:	test   r13b,0x2
   14002836a:	je     0x140028373
   14002836c:	mov    BYTE PTR [rsp+0x50],0x20
   140028371:	jmp    0x14002835b
   140028373:	mov    edi,DWORD PTR [rsp+0x4c]
   140028377:	mov    r12d,DWORD PTR [rsp+0x58]
   14002837c:	mov    rsi,QWORD PTR [rsp+0x70]
   140028381:	sub    r12d,DWORD PTR [rsp+0x48]
   140028386:	sub    r12d,edi
   140028389:	test   r13b,0xc
   14002838d:	jne    0x1400283a1
   14002838f:	lea    r9,[rsp+0x40]
   140028394:	mov    r8,rsi
   140028397:	mov    edx,r12d
   14002839a:	mov    cl,0x20
   14002839c:	call   0x140027c20
   1400283a1:	mov    rax,QWORD PTR [rbp-0x60]
   1400283a5:	lea    r9,[rsp+0x40]
   1400283aa:	lea    rcx,[rsp+0x50]
   1400283af:	mov    r8,rsi
   1400283b2:	mov    edx,edi
   1400283b4:	mov    QWORD PTR [rsp+0x20],rax
   1400283b9:	call   0x14001ce80
   1400283be:	test   r13b,0x8
   1400283c2:	je     0x1400283dc
   1400283c4:	test   r13b,0x4
   1400283c8:	jne    0x1400283dc
   1400283ca:	lea    r9,[rsp+0x40]
   1400283cf:	mov    r8,rsi
   1400283d2:	mov    edx,r12d
   1400283d5:	mov    cl,0x30
   1400283d7:	call   0x140027c20
   1400283dc:	mov    edi,DWORD PTR [rsp+0x48]
   1400283e0:	xor    eax,eax
   1400283e2:	cmp    DWORD PTR [rsp+0x54],eax
   1400283e6:	je     0x14002844f
   1400283e8:	test   edi,edi
   1400283ea:	jle    0x14002844f
   1400283ec:	mov    rsi,rbx
   1400283ef:	movzx  r9d,WORD PTR [rsi]
   1400283f3:	lea    rdx,[rbp+0x1c0]
   1400283fa:	lea    rcx,[rbp-0x58]
   1400283fe:	mov    r8d,0x6
   140028404:	dec    edi
   140028406:	add    rsi,0x2
   14002840a:	call   0x140027c0c
   14002840f:	xor    r10d,r10d
   140028412:	test   eax,eax
   140028414:	jne    0x140028445
   140028416:	mov    edx,DWORD PTR [rbp-0x58]
   140028419:	test   edx,edx
   14002841b:	je     0x140028445
   14002841d:	mov    rax,QWORD PTR [rbp-0x60]
   140028421:	mov    r8,QWORD PTR [rsp+0x70]
   140028426:	lea    r9,[rsp+0x40]
   14002842b:	lea    rcx,[rbp+0x1c0]
   140028432:	mov    QWORD PTR [rsp+0x20],rax
   140028437:	call   0x14001ce80
   14002843c:	xor    r10d,r10d
   14002843f:	test   edi,edi
   140028441:	jne    0x1400283ef
   140028443:	jmp    0x14002846d
   140028445:	mov    esi,r14d
   140028448:	mov    DWORD PTR [rsp+0x40],r14d
   14002844d:	jmp    0x140028471
   14002844f:	mov    rax,QWORD PTR [rbp-0x60]
   140028453:	lea    r9,[rsp+0x40]
   140028458:	mov    r8,rsi
   14002845b:	mov    edx,edi
   14002845d:	mov    rcx,rbx
   140028460:	mov    QWORD PTR [rsp+0x20],rax
   140028465:	call   0x14001ce80
   14002846a:	xor    r10d,r10d
   14002846d:	mov    esi,DWORD PTR [rsp+0x40]
   140028471:	test   esi,esi
   140028473:	js     0x140028496
   140028475:	test   r13b,0x4
   140028479:	je     0x140028496
   14002847b:	mov    r8,QWORD PTR [rsp+0x70]
   140028480:	lea    r9,[rsp+0x40]
   140028485:	mov    edx,r12d
   140028488:	mov    cl,0x20
   14002848a:	call   0x140027c20
   14002848f:	mov    esi,DWORD PTR [rsp+0x40]
   140028493:	xor    r10d,r10d
   140028496:	mov    rax,QWORD PTR [rbp-0x50]
   14002849a:	test   rax,rax
   14002849d:	je     0x1400284ae
   14002849f:	mov    rcx,rax
   1400284a2:	call   0x1400130a8
   1400284a7:	xor    r10d,r10d
   1400284aa:	mov    QWORD PTR [rbp-0x50],r10
   1400284ae:	mov    edi,DWORD PTR [rsp+0x44]
   1400284b2:	mov    rdx,QWORD PTR [rsp+0x68]
   1400284b7:	mov    r8d,DWORD PTR [rsp+0x60]
   1400284bc:	mov    r11d,0x200
   1400284c2:	lea    r9,[rip+0xfffffffffffd7b37]        # 0x140000000
   1400284c9:	mov    r12b,BYTE PTR [rdx]
   1400284cc:	test   r12b,r12b
   1400284cf:	jne    0x140027e0a
   1400284d5:	test   r8d,r8d
   1400284d8:	je     0x1400284e4
   1400284da:	cmp    r8d,0x7
   1400284de:	jne    0x140027da7
   1400284e4:	cmp    BYTE PTR [rbp-0x68],r10b
   1400284e8:	je     0x1400284f5
   1400284ea:	mov    rcx,QWORD PTR [rbp-0x70]
   1400284ee:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400284f5:	mov    eax,esi
   1400284f7:	mov    rcx,QWORD PTR [rbp+0x1c8]
   1400284fe:	xor    rcx,rsp
   140028501:	call   0x140012670
   140028506:	mov    rbx,QWORD PTR [rsp+0x320]
   14002850e:	add    rsp,0x2d0
   140028515:	pop    r15
   140028517:	pop    r14
   140028519:	pop    r13
   14002851b:	pop    r12
   14002851d:	pop    rdi
   14002851e:	pop    rsi
   14002851f:	pop    rbp
   140028520:	ret    
   140028521:	cmp    r12b,0x49
   140028525:	je     0x140028564
   140028527:	cmp    r12b,0x68
   14002852b:	je     0x14002855b
   14002852d:	cmp    r12b,0x6c
   140028531:	je     0x140028540
   140028533:	cmp    r12b,0x77
   140028537:	jne    0x1400284c9
   140028539:	bts    r13d,0xb
   14002853e:	jmp    0x1400284c9
   140028540:	cmp    BYTE PTR [rdx],0x6c
   140028543:	jne    0x140028552
   140028545:	inc    rdx
   140028548:	bts    r13d,0xc
   14002854d:	jmp    0x1400284c9
   140028552:	or     r13d,0x10
   140028556:	jmp    0x1400284c9
   14002855b:	or     r13d,0x20
   14002855f:	jmp    0x1400284c9
   140028564:	mov    al,BYTE PTR [rdx]
   140028566:	bts    r13d,0xf
   14002856b:	cmp    al,0x36
   14002856d:	jne    0x140028583
   14002856f:	cmp    BYTE PTR [rdx+0x1],0x34
   140028573:	jne    0x140028583
   140028575:	add    rdx,0x2
   140028579:	bts    r13d,0xf
   14002857e:	jmp    0x1400284c9
   140028583:	cmp    al,0x33
   140028585:	jne    0x14002859b
   140028587:	cmp    BYTE PTR [rdx+0x1],0x32
   14002858b:	jne    0x14002859b
   14002858d:	add    rdx,0x2
   140028591:	btr    r13d,0xf
   140028596:	jmp    0x1400284c9
   14002859b:	cmp    al,0x64
   14002859d:	je     0x1400284c9
   1400285a3:	cmp    al,0x69
   1400285a5:	je     0x1400284c9
   1400285ab:	cmp    al,0x6f
   1400285ad:	je     0x1400284c9
   1400285b3:	cmp    al,0x75
   1400285b5:	je     0x1400284c9
   1400285bb:	cmp    al,0x78
   1400285bd:	je     0x1400284c9
   1400285c3:	cmp    al,0x58
   1400285c5:	je     0x1400284c9
   1400285cb:	mov    DWORD PTR [rsp+0x60],r10d
   1400285d0:	lea    rdx,[rbp-0x80]
   1400285d4:	movzx  ecx,r12b
   1400285d8:	mov    DWORD PTR [rsp+0x54],r10d
   1400285dd:	call   0x140020e3c
   1400285e2:	xor    esi,esi
   1400285e4:	test   eax,eax
   1400285e6:	je     0x140028613
   1400285e8:	mov    rdx,QWORD PTR [rsp+0x70]
   1400285ed:	lea    r8,[rsp+0x40]
   1400285f2:	mov    cl,r12b
   1400285f5:	call   0x14001ce38
   1400285fa:	mov    rdx,QWORD PTR [rsp+0x68]
   1400285ff:	mov    r12b,BYTE PTR [rdx]
   140028602:	inc    rdx
   140028605:	mov    QWORD PTR [rsp+0x68],rdx
   14002860a:	test   r12b,r12b
   14002860d:	je     0x14002872a
   140028613:	mov    rdx,QWORD PTR [rsp+0x70]
   140028618:	lea    r8,[rsp+0x40]
   14002861d:	mov    cl,r12b
   140028620:	call   0x14001ce38
   140028625:	mov    esi,DWORD PTR [rsp+0x40]
   140028629:	xor    r10d,r10d
   14002862c:	jmp    0x1400284b2
   140028631:	cmp    r12b,0x2a
   140028635:	jne    0x140028657
   140028637:	mov    edi,DWORD PTR [r15]
   14002863a:	add    r15,0x8
   14002863e:	mov    DWORD PTR [rsp+0x44],edi
   140028642:	test   edi,edi
   140028644:	jns    0x1400284c9
   14002864a:	mov    edi,r14d
   14002864d:	mov    DWORD PTR [rsp+0x44],r14d
   140028652:	jmp    0x1400284c9
   140028657:	lea    ecx,[rdi+rdi*4]
   14002865a:	movsx  eax,r12b
   14002865e:	lea    edi,[rax+rcx*2-0x30]
   140028662:	mov    DWORD PTR [rsp+0x44],edi
   140028666:	jmp    0x1400284c9
   14002866b:	mov    edi,r10d
   14002866e:	mov    DWORD PTR [rsp+0x44],r10d
   140028673:	jmp    0x1400284c9
   140028678:	cmp    r12b,0x2a
   14002867c:	jne    0x140028699
   14002867e:	mov    eax,DWORD PTR [r15]
   140028681:	add    r15,0x8
   140028685:	mov    DWORD PTR [rsp+0x58],eax
   140028689:	test   eax,eax
   14002868b:	jns    0x1400284c9
   140028691:	or     r13d,0x4
   140028695:	neg    eax
   140028697:	jmp    0x1400286a8
   140028699:	mov    eax,DWORD PTR [rsp+0x58]
   14002869d:	lea    ecx,[rax+rax*4]
   1400286a0:	movsx  eax,r12b
   1400286a4:	lea    eax,[rax+rcx*2-0x30]
   1400286a8:	mov    DWORD PTR [rsp+0x58],eax
   1400286ac:	jmp    0x1400284c9
   1400286b1:	cmp    r12b,0x20
   1400286b5:	je     0x1400286f8
   1400286b7:	cmp    r12b,0x23
   1400286bb:	je     0x1400286ee
   1400286bd:	cmp    r12b,0x2b
   1400286c1:	je     0x1400286e5
   1400286c3:	cmp    r12b,0x2d
   1400286c7:	je     0x1400286dc
   1400286c9:	cmp    r12b,0x30
   1400286cd:	jne    0x1400284c9
   1400286d3:	or     r13d,0x8
   1400286d7:	jmp    0x1400284c9
   1400286dc:	or     r13d,0x4
   1400286e0:	jmp    0x1400284c9
   1400286e5:	or     r13d,0x1
   1400286e9:	jmp    0x1400284c9
   1400286ee:	bts    r13d,0x7
   1400286f3:	jmp    0x1400284c9
   1400286f8:	or     r13d,0x2
   1400286fc:	jmp    0x1400284c9
   140028701:	mov    DWORD PTR [rsp+0x78],r10d
   140028706:	mov    DWORD PTR [rsp+0x5c],r10d
   14002870b:	mov    DWORD PTR [rsp+0x58],r10d
   140028710:	mov    DWORD PTR [rsp+0x4c],r10d
   140028715:	mov    r13d,r10d
   140028718:	mov    edi,r14d
   14002871b:	mov    DWORD PTR [rsp+0x44],r14d
   140028720:	mov    DWORD PTR [rsp+0x54],r10d
   140028725:	jmp    0x1400284c9
   14002872a:	call   0x14001583c
   14002872f:	mov    DWORD PTR [rax],0x16
   140028735:	call   0x140019f74
   14002873a:	cmp    BYTE PTR [rbp-0x68],sil
   14002873e:	jmp    0x140027dbe
   140028743:	int3   
   140028744:	rex push rbp
   140028746:	push   rbx
   140028747:	push   rsi
   140028748:	push   rdi
   140028749:	push   r12
   14002874b:	push   r13
   14002874d:	push   r14
   14002874f:	push   r15
   140028751:	sub    rsp,0x68
   140028755:	lea    rbp,[rsp+0x30]
   14002875a:	mov    rax,QWORD PTR [rip+0x171cf]        # 0x14003f930
   140028761:	xor    rax,rbp
   140028764:	mov    QWORD PTR [rbp+0x28],rax
   140028768:	mov    edi,DWORD PTR [rbp+0xa0]
   14002876e:	mov    r12,QWORD PTR [rbp+0xa8]
   140028775:	xor    ebx,ebx
   140028777:	mov    DWORD PTR [rbp+0x4],r8d
   14002877b:	mov    r13,r9
   14002877e:	mov    DWORD PTR [rbp+0x0],edx
   140028781:	mov    r8,rcx
   140028784:	mov    QWORD PTR [rbp+0x8],r12
   140028788:	mov    r15d,0x1
   14002878e:	test   edi,edi
   140028790:	jle    0x1400287d5
   140028792:	mov    edx,edi
   140028794:	mov    rax,r9
   140028797:	sub    edx,r15d
   14002879a:	or     ecx,0xffffffff
   14002879d:	cmp    BYTE PTR [rax],bl
   14002879f:	je     0x1400287aa
   1400287a1:	add    rax,r15
   1400287a4:	test   edx,edx
   1400287a6:	jne    0x140028797
   1400287a8:	mov    edx,ecx
   1400287aa:	mov    eax,ecx
   1400287ac:	sub    eax,edx
   1400287ae:	add    edi,eax
   1400287b0:	mov    esi,DWORD PTR [rbp+0xb0]
   1400287b6:	test   esi,esi
   1400287b8:	jle    0x1400287e3
   1400287ba:	mov    eax,esi
   1400287bc:	mov    rdx,r12
   1400287bf:	sub    eax,r15d
   1400287c2:	cmp    BYTE PTR [rdx],bl
   1400287c4:	je     0x1400287cf
   1400287c6:	add    rdx,r15
   1400287c9:	test   eax,eax
   1400287cb:	jne    0x1400287bf
   1400287cd:	mov    eax,ecx
   1400287cf:	sub    ecx,eax
   1400287d1:	add    esi,ecx
   1400287d3:	jmp    0x1400287e7
   1400287d5:	or     ecx,0xffffffff
   1400287d8:	cmp    edi,ecx
   1400287da:	jge    0x1400287b0
   1400287dc:	xor    eax,eax
   1400287de:	jmp    0x140028a6b
   1400287e3:	cmp    esi,ecx
   1400287e5:	jl     0x1400287dc
   1400287e7:	mov    r14d,DWORD PTR [rbp+0xb8]
   1400287ee:	test   r14d,r14d
   1400287f1:	jne    0x1400287fa
   1400287f3:	mov    rax,QWORD PTR [r8]
   1400287f6:	mov    r14d,DWORD PTR [rax+0x4]
   1400287fa:	test   edi,edi
   1400287fc:	je     0x140028806
   1400287fe:	test   esi,esi
   140028800:	jne    0x14002889f
   140028806:	cmp    edi,esi
   140028808:	jne    0x140028814
   14002880a:	mov    eax,0x2
   14002880f:	jmp    0x140028a6b
   140028814:	cmp    esi,r15d
   140028817:	jle    0x140028821
   140028819:	mov    eax,r15d
   14002881c:	jmp    0x140028a6b
   140028821:	cmp    edi,r15d
   140028824:	jle    0x140028830
   140028826:	mov    eax,0x3
   14002882b:	jmp    0x140028a6b
   140028830:	lea    rdx,[rbp+0x10]
   140028834:	mov    ecx,r14d
   140028837:	call   QWORD PTR [rip+0x6aeb]        # 0x14002f328
   14002883d:	test   eax,eax
   14002883f:	je     0x1400287dc
   140028841:	test   edi,edi
   140028843:	jle    0x14002886e
   140028845:	cmp    DWORD PTR [rbp+0x10],0x2
   140028849:	jb     0x140028826
   14002884b:	cmp    BYTE PTR [rbp+0x16],bl
   14002884e:	lea    rax,[rbp+0x16]
   140028852:	je     0x140028826
   140028854:	cmp    BYTE PTR [rax+0x1],bl
   140028857:	je     0x140028826
   140028859:	mov    cl,BYTE PTR [r13+0x0]
   14002885d:	cmp    cl,BYTE PTR [rax]
   14002885f:	jb     0x140028866
   140028861:	cmp    cl,BYTE PTR [rax+0x1]
   140028864:	jbe    0x14002880a
   140028866:	add    rax,0x2
   14002886a:	cmp    BYTE PTR [rax],bl
   14002886c:	jmp    0x140028852
   14002886e:	test   esi,esi
   140028870:	jle    0x14002889f
   140028872:	cmp    DWORD PTR [rbp+0x10],0x2
   140028876:	jb     0x140028819
   140028878:	cmp    BYTE PTR [rbp+0x16],bl
   14002887b:	lea    rax,[rbp+0x16]
   14002887f:	je     0x140028819
   140028881:	cmp    BYTE PTR [rax+0x1],bl
   140028884:	je     0x140028819
   140028886:	mov    cl,BYTE PTR [r12]
   14002888a:	cmp    cl,BYTE PTR [rax]
   14002888c:	jb     0x140028897
   14002888e:	cmp    cl,BYTE PTR [rax+0x1]
   140028891:	jbe    0x14002880a
   140028897:	add    rax,0x2
   14002889b:	cmp    BYTE PTR [rax],bl
   14002889d:	jmp    0x14002887f
   14002889f:	mov    r9d,edi
   1400288a2:	mov    r8,r13
   1400288a5:	mov    edx,0x9
   1400288aa:	mov    ecx,r14d
   1400288ad:	mov    DWORD PTR [rsp+0x28],ebx
   1400288b1:	mov    QWORD PTR [rsp+0x20],rbx
   1400288b6:	call   QWORD PTR [rip+0x69b4]        # 0x14002f270
   1400288bc:	movsxd r15,eax
   1400288bf:	test   eax,eax
   1400288c1:	je     0x1400287dc
   1400288c7:	movabs r8,0xffffffffffffff0
   1400288d1:	jle    0x140028939
   1400288d3:	xor    edx,edx
   1400288d5:	lea    rax,[rdx-0x20]
   1400288d9:	div    r15
   1400288dc:	cmp    rax,0x2
   1400288e0:	jb     0x140028939
   1400288e2:	lea    rcx,[r15+r15*1+0x10]
   1400288e7:	cmp    rcx,0x400
   1400288ee:	ja     0x140028920
   1400288f0:	lea    rax,[rcx+0xf]
   1400288f4:	cmp    rax,rcx
   1400288f7:	ja     0x1400288fc
   1400288f9:	mov    rax,r8
   1400288fc:	and    rax,0xfffffffffffffff0
   140028900:	call   0x140012f50
   140028905:	sub    rsp,rax
   140028908:	lea    r12,[rsp+0x30]
   14002890d:	test   r12,r12
   140028910:	je     0x1400287dc
   140028916:	mov    DWORD PTR [r12],0xcccc
   14002891e:	jmp    0x140028933
   140028920:	call   0x140013298
   140028925:	mov    r12,rax
   140028928:	test   rax,rax
   14002892b:	je     0x14002893c
   14002892d:	mov    DWORD PTR [rax],0xdddd
   140028933:	add    r12,0x10
   140028937:	jmp    0x14002893c
   140028939:	mov    r12,rbx
   14002893c:	test   r12,r12
   14002893f:	je     0x1400287dc
   140028945:	mov    r9d,edi
   140028948:	mov    r8,r13
   14002894b:	mov    edx,0x1
   140028950:	mov    ecx,r14d
   140028953:	mov    DWORD PTR [rsp+0x28],r15d
   140028958:	mov    QWORD PTR [rsp+0x20],r12
   14002895d:	call   QWORD PTR [rip+0x690d]        # 0x14002f270
   140028963:	test   eax,eax
   140028965:	je     0x140028a57
   14002896b:	mov    r8,QWORD PTR [rbp+0x8]
   14002896f:	mov    r9d,esi
   140028972:	mov    edx,0x9
   140028977:	mov    ecx,r14d
   14002897a:	mov    DWORD PTR [rsp+0x28],ebx
   14002897e:	mov    QWORD PTR [rsp+0x20],rbx
   140028983:	call   QWORD PTR [rip+0x68e7]        # 0x14002f270
   140028989:	movsxd r13,eax
   14002898c:	test   eax,eax
   14002898e:	je     0x140028a57
   140028994:	jle    0x1400289fd
   140028996:	xor    edx,edx
   140028998:	lea    rax,[rdx-0x20]
   14002899c:	div    r13
   14002899f:	cmp    rax,0x2
   1400289a3:	jb     0x1400289fd
   1400289a5:	lea    rcx,[r13+r13*1+0x10]
   1400289aa:	cmp    rcx,0x400
   1400289b1:	ja     0x1400289e4
   1400289b3:	lea    rax,[rcx+0xf]
   1400289b7:	cmp    rax,rcx
   1400289ba:	ja     0x1400289c6
   1400289bc:	movabs rax,0xffffffffffffff0
   1400289c6:	and    rax,0xfffffffffffffff0
   1400289ca:	call   0x140012f50
   1400289cf:	sub    rsp,rax
   1400289d2:	lea    rdi,[rsp+0x30]
   1400289d7:	test   rdi,rdi
   1400289da:	je     0x140028a57
   1400289dc:	mov    DWORD PTR [rdi],0xcccc
   1400289e2:	jmp    0x1400289f7
   1400289e4:	call   0x140013298
   1400289e9:	mov    rdi,rax
   1400289ec:	test   rax,rax
   1400289ef:	je     0x140028a00
   1400289f1:	mov    DWORD PTR [rax],0xdddd
   1400289f7:	add    rdi,0x10
   1400289fb:	jmp    0x140028a00
   1400289fd:	mov    rdi,rbx
   140028a00:	test   rdi,rdi
   140028a03:	je     0x140028a57
   140028a05:	mov    r8,QWORD PTR [rbp+0x8]
   140028a09:	mov    r9d,esi
   140028a0c:	mov    edx,0x1
   140028a11:	mov    ecx,r14d
   140028a14:	mov    DWORD PTR [rsp+0x28],r13d
   140028a19:	mov    QWORD PTR [rsp+0x20],rdi
   140028a1e:	call   QWORD PTR [rip+0x684c]        # 0x14002f270
   140028a24:	test   eax,eax
   140028a26:	je     0x140028a46
   140028a28:	mov    edx,DWORD PTR [rbp+0x4]
   140028a2b:	mov    ecx,DWORD PTR [rbp+0x0]
   140028a2e:	mov    r9d,r15d
   140028a31:	mov    r8,r12
   140028a34:	mov    DWORD PTR [rsp+0x28],r13d
   140028a39:	mov    QWORD PTR [rsp+0x20],rdi
   140028a3e:	call   QWORD PTR [rip+0x670c]        # 0x14002f150
   140028a44:	mov    ebx,eax
   140028a46:	lea    rcx,[rdi-0x10]
   140028a4a:	cmp    DWORD PTR [rcx],0xdddd
   140028a50:	jne    0x140028a57
   140028a52:	call   0x1400130a8
   140028a57:	lea    rcx,[r12-0x10]
   140028a5c:	cmp    DWORD PTR [rcx],0xdddd
   140028a62:	jne    0x140028a69
   140028a64:	call   0x1400130a8
   140028a69:	mov    eax,ebx
   140028a6b:	mov    rcx,QWORD PTR [rbp+0x28]
   140028a6f:	xor    rcx,rbp
   140028a72:	call   0x140012670
   140028a77:	lea    rsp,[rbp+0x38]
   140028a7b:	pop    r15
   140028a7d:	pop    r14
   140028a7f:	pop    r13
   140028a81:	pop    r12
   140028a83:	pop    rdi
   140028a84:	pop    rsi
   140028a85:	pop    rbx
   140028a86:	pop    rbp
   140028a87:	ret    
   140028a88:	mov    QWORD PTR [rsp+0x8],rbx
   140028a8d:	mov    QWORD PTR [rsp+0x10],rsi
   140028a92:	push   rdi
   140028a93:	sub    rsp,0x60
   140028a97:	mov    esi,edx
   140028a99:	mov    rdx,rcx
   140028a9c:	lea    rcx,[rsp+0x40]
   140028aa1:	mov    rbx,r9
   140028aa4:	mov    edi,r8d
   140028aa7:	call   0x140012690
   140028aac:	mov    r11d,DWORD PTR [rsp+0xa8]
   140028ab4:	mov    eax,DWORD PTR [rsp+0xa0]
   140028abb:	lea    rcx,[rsp+0x40]
   140028ac0:	mov    DWORD PTR [rsp+0x38],r11d
   140028ac5:	mov    DWORD PTR [rsp+0x30],eax
   140028ac9:	mov    rax,QWORD PTR [rsp+0x98]
   140028ad1:	mov    QWORD PTR [rsp+0x28],rax
   140028ad6:	mov    eax,DWORD PTR [rsp+0x90]
   140028add:	mov    r9,rbx
   140028ae0:	mov    r8d,edi
   140028ae3:	mov    edx,esi
   140028ae5:	mov    DWORD PTR [rsp+0x20],eax
   140028ae9:	call   0x140028744
   140028aee:	cmp    BYTE PTR [rsp+0x58],0x0
   140028af3:	je     0x140028b01
   140028af5:	mov    rcx,QWORD PTR [rsp+0x50]
   140028afa:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028b01:	mov    rbx,QWORD PTR [rsp+0x70]
   140028b06:	mov    rsi,QWORD PTR [rsp+0x78]
   140028b0b:	add    rsp,0x60
   140028b0f:	pop    rdi
   140028b10:	ret    
   140028b11:	int3   
   140028b12:	int3   
   140028b13:	int3   
   140028b14:	mov    QWORD PTR [rsp+0x8],rbx
   140028b19:	mov    QWORD PTR [rsp+0x10],rsi
   140028b1e:	mov    QWORD PTR [rsp+0x18],rdi
   140028b23:	push   rbp
   140028b24:	mov    rbp,rsp
   140028b27:	sub    rsp,0x60
   140028b2b:	mov    rsi,rcx
   140028b2e:	mov    rdi,rdx
   140028b31:	lea    rcx,[rbp-0x20]
   140028b35:	mov    rdx,r9
   140028b38:	mov    rbx,r8
   140028b3b:	call   0x140012690
   140028b40:	test   rbx,rbx
   140028b43:	jne    0x140028b5c
   140028b45:	cmp    BYTE PTR [rbp-0x8],bl
   140028b48:	je     0x140028b55
   140028b4a:	mov    rax,QWORD PTR [rbp-0x10]
   140028b4e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140028b55:	xor    eax,eax
   140028b57:	jmp    0x140028c01
   140028b5c:	test   rsi,rsi
   140028b5f:	jne    0x140028b89
   140028b61:	call   0x14001583c
   140028b66:	mov    DWORD PTR [rax],0x16
   140028b6c:	call   0x140019f74
   140028b71:	cmp    BYTE PTR [rbp-0x8],0x0
   140028b75:	je     0x140028b82
   140028b77:	mov    rax,QWORD PTR [rbp-0x10]
   140028b7b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140028b82:	mov    eax,0x7fffffff
   140028b87:	jmp    0x140028c01
   140028b89:	test   rdi,rdi
   140028b8c:	je     0x140028b61
   140028b8e:	cmp    rbx,0x7fffffff
   140028b95:	ja     0x140028b61
   140028b97:	mov    rax,QWORD PTR [rbp-0x20]
   140028b9b:	mov    edx,DWORD PTR [rax+0x10]
   140028b9e:	test   edx,edx
   140028ba0:	jne    0x140028bb6
   140028ba2:	lea    r9,[rbp-0x20]
   140028ba6:	mov    r8,rbx
   140028ba9:	mov    rdx,rdi
   140028bac:	mov    rcx,rsi
   140028baf:	call   0x14002a460
   140028bb4:	jmp    0x140028bf0
   140028bb6:	mov    eax,DWORD PTR [rax+0x8]
   140028bb9:	lea    rcx,[rbp-0x20]
   140028bbd:	mov    r9,rsi
   140028bc0:	mov    DWORD PTR [rsp+0x38],eax
   140028bc4:	mov    DWORD PTR [rsp+0x30],ebx
   140028bc8:	mov    r8d,0x1001
   140028bce:	mov    QWORD PTR [rsp+0x28],rdi
   140028bd3:	mov    DWORD PTR [rsp+0x20],ebx
   140028bd7:	call   0x140028a88
   140028bdc:	test   eax,eax
   140028bde:	jne    0x140028bed
   140028be0:	call   0x14001583c
   140028be5:	mov    DWORD PTR [rax],0x16
   140028beb:	jmp    0x140028b71
   140028bed:	add    eax,0xfffffffe
   140028bf0:	cmp    BYTE PTR [rbp-0x8],0x0
   140028bf4:	je     0x140028c01
   140028bf6:	mov    rcx,QWORD PTR [rbp-0x10]
   140028bfa:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140028c01:	lea    r11,[rsp+0x60]
   140028c06:	mov    rbx,QWORD PTR [r11+0x10]
   140028c0a:	mov    rsi,QWORD PTR [r11+0x18]
   140028c0e:	mov    rdi,QWORD PTR [r11+0x20]
   140028c12:	mov    rsp,r11
   140028c15:	pop    rbp
   140028c16:	ret    
   140028c17:	int3   
   140028c18:	sub    rsp,0x28
   140028c1c:	call   0x14001dd88
   140028c21:	test   rax,rax
   140028c24:	je     0x140028c30
   140028c26:	mov    ecx,0x16
   140028c2b:	call   0x14001dd98
   140028c30:	test   BYTE PTR [rip+0x183f1],0x2        # 0x140041028
   140028c37:	je     0x140028c4d
   140028c39:	mov    r8d,0x1
   140028c3f:	mov    edx,0x40000015
   140028c44:	lea    ecx,[r8+0x2]
   140028c48:	call   0x140019d84
   140028c4d:	mov    ecx,0x3
   140028c52:	call   0x140013c38
   140028c57:	int3   
   140028c58:	sub    rsp,0x28
   140028c5c:	test   rcx,rcx
   140028c5f:	jne    0x140028c7a
   140028c61:	call   0x14001583c
   140028c66:	mov    DWORD PTR [rax],0x16
   140028c6c:	call   0x140019f74
   140028c71:	or     rax,0xffffffffffffffff
   140028c75:	add    rsp,0x28
   140028c79:	ret    
   140028c7a:	mov    r8,rcx
   140028c7d:	mov    rcx,QWORD PTR [rip+0x2cdbc]        # 0x140055a40
   140028c84:	xor    edx,edx
   140028c86:	add    rsp,0x28
   140028c8a:	rex.W jmp QWORD PTR [rip+0x64b7]        # 0x14002f148
   140028c91:	int3   
   140028c92:	int3   
   140028c93:	int3   
   140028c94:	mov    ecx,0x2
   140028c99:	jmp    0x140013c64
   140028c9e:	int3   
   140028c9f:	int3   
   140028ca0:	mov    edx,0x30
   140028ca5:	cmp    cx,dx
   140028ca8:	jb     0x140028e31
   140028cae:	cmp    cx,0x3a
   140028cb2:	jae    0x140028cba
   140028cb4:	movzx  eax,cx
   140028cb7:	sub    eax,edx
   140028cb9:	ret    
   140028cba:	mov    edx,0xff10
   140028cbf:	cmp    cx,dx
   140028cc2:	jae    0x140028e23
   140028cc8:	mov    edx,0x660
   140028ccd:	cmp    cx,dx
   140028cd0:	jb     0x140028e31
   140028cd6:	lea    eax,[rdx+0xa]
   140028cd9:	cmp    cx,ax
   140028cdc:	jb     0x140028cb4
   140028cde:	mov    edx,0x6f0
   140028ce3:	cmp    cx,dx
   140028ce6:	jb     0x140028e31
   140028cec:	lea    eax,[rdx+0xa]
   140028cef:	cmp    cx,ax
   140028cf2:	jb     0x140028cb4
   140028cf4:	mov    edx,0x966
   140028cf9:	cmp    cx,dx
   140028cfc:	jb     0x140028e31
   140028d02:	lea    eax,[rdx+0xa]
   140028d05:	cmp    cx,ax
   140028d08:	jb     0x140028cb4
   140028d0a:	lea    edx,[rax+0x76]
   140028d0d:	cmp    cx,dx
   140028d10:	jb     0x140028e31
   140028d16:	lea    eax,[rdx+0xa]
   140028d19:	cmp    cx,ax
   140028d1c:	jb     0x140028cb4
   140028d1e:	lea    edx,[rax+0x76]
   140028d21:	cmp    cx,dx
   140028d24:	jb     0x140028e31
   140028d2a:	lea    eax,[rdx+0xa]
   140028d2d:	cmp    cx,ax
   140028d30:	jb     0x140028cb4
   140028d32:	lea    edx,[rax+0x76]
   140028d35:	cmp    cx,dx
   140028d38:	jb     0x140028e31
   140028d3e:	lea    eax,[rdx+0xa]
   140028d41:	cmp    cx,ax
   140028d44:	jb     0x140028cb4
   140028d4a:	lea    edx,[rax+0x76]
   140028d4d:	cmp    cx,dx
   140028d50:	jb     0x140028e31
   140028d56:	lea    eax,[rdx+0xa]
   140028d59:	cmp    cx,ax
   140028d5c:	jb     0x140028cb4
   140028d62:	mov    edx,0xc66
   140028d67:	cmp    cx,dx
   140028d6a:	jb     0x140028e31
   140028d70:	lea    eax,[rdx+0xa]
   140028d73:	cmp    cx,ax
   140028d76:	jb     0x140028cb4
   140028d7c:	lea    edx,[rax+0x76]
   140028d7f:	cmp    cx,dx
   140028d82:	jb     0x140028e31
   140028d88:	lea    eax,[rdx+0xa]
   140028d8b:	cmp    cx,ax
   140028d8e:	jb     0x140028cb4
   140028d94:	lea    edx,[rax+0x76]
   140028d97:	cmp    cx,dx
   140028d9a:	jb     0x140028e31
   140028da0:	lea    eax,[rdx+0xa]
   140028da3:	cmp    cx,ax
   140028da6:	jb     0x140028cb4
   140028dac:	mov    edx,0xe50
   140028db1:	cmp    cx,dx
   140028db4:	jb     0x140028e31
   140028db6:	lea    eax,[rdx+0xa]
   140028db9:	cmp    cx,ax
   140028dbc:	jb     0x140028cb4
   140028dc2:	lea    edx,[rax+0x76]
   140028dc5:	cmp    cx,dx
   140028dc8:	jb     0x140028e31
   140028dca:	lea    eax,[rdx+0xa]
   140028dcd:	cmp    cx,ax
   140028dd0:	jb     0x140028cb4
   140028dd6:	lea    edx,[rax+0x46]
   140028dd9:	cmp    cx,dx
   140028ddc:	jb     0x140028e31
   140028dde:	lea    eax,[rdx+0xa]
   140028de1:	cmp    cx,ax
   140028de4:	jb     0x140028cb4
   140028dea:	mov    edx,0x1040
   140028def:	cmp    cx,dx
   140028df2:	jb     0x140028e31
   140028df4:	lea    eax,[rdx+0xa]
   140028df7:	cmp    cx,ax
   140028dfa:	jb     0x140028cb4
   140028e00:	mov    edx,0x17e0
   140028e05:	cmp    cx,dx
   140028e08:	jb     0x140028e31
   140028e0a:	lea    eax,[rdx+0xa]
   140028e0d:	cmp    cx,ax
   140028e10:	jb     0x140028cb4
   140028e16:	lea    edx,[rax+0x26]
   140028e19:	cmp    cx,dx
   140028e1c:	jb     0x140028e31
   140028e1e:	lea    eax,[rdx+0xa]
   140028e21:	jmp    0x140028e28
   140028e23:	mov    eax,0xff1a
   140028e28:	cmp    cx,ax
   140028e2b:	jb     0x140028cb4
   140028e31:	or     eax,0xffffffff
   140028e34:	ret    
   140028e35:	int3   
   140028e36:	int3   
   140028e37:	int3   
   140028e38:	rex push rbx
   140028e3a:	sub    rsp,0x20
   140028e3e:	inc    DWORD PTR [rip+0x2c560]        # 0x1400553a4
   140028e44:	mov    rbx,rcx
   140028e47:	mov    ecx,0x1000
   140028e4c:	call   0x140020c28
   140028e51:	mov    QWORD PTR [rbx+0x10],rax
   140028e55:	test   rax,rax
   140028e58:	je     0x140028e67
   140028e5a:	or     DWORD PTR [rbx+0x18],0x8
   140028e5e:	mov    DWORD PTR [rbx+0x24],0x1000
   140028e65:	jmp    0x140028e7a
   140028e67:	or     DWORD PTR [rbx+0x18],0x4
   140028e6b:	lea    rax,[rbx+0x20]
   140028e6f:	mov    DWORD PTR [rbx+0x24],0x2
   140028e76:	mov    QWORD PTR [rbx+0x10],rax
   140028e7a:	mov    rax,QWORD PTR [rbx+0x10]
   140028e7e:	and    DWORD PTR [rbx+0x8],0x0
   140028e82:	mov    QWORD PTR [rbx],rax
   140028e85:	add    rsp,0x20
   140028e89:	pop    rbx
   140028e8a:	ret    
   140028e8b:	int3   
   140028e8c:	mov    QWORD PTR [rsp+0x18],rbx
   140028e91:	mov    QWORD PTR [rsp+0x20],rbp
   140028e96:	push   rsi
   140028e97:	push   rdi
   140028e98:	push   r12
   140028e9a:	sub    rsp,0x40
   140028e9e:	mov    rax,QWORD PTR [rip+0x16a8b]        # 0x14003f930
   140028ea5:	xor    rax,rsp
   140028ea8:	mov    QWORD PTR [rsp+0x30],rax
   140028ead:	test   BYTE PTR [rdx+0x18],0x40
   140028eb1:	mov    rdi,rdx
   140028eb4:	movzx  esi,cx
   140028eb7:	jne    0x140029042
   140028ebd:	mov    rcx,rdx
   140028ec0:	call   0x1400211a0
   140028ec5:	lea    rbp,[rip+0x17d94]        # 0x140040c60
   140028ecc:	lea    r12,[rip+0x2d74d]        # 0x140056620
   140028ed3:	cmp    eax,0xffffffff
   140028ed6:	je     0x140028f0d
   140028ed8:	mov    rcx,rdi
   140028edb:	call   0x1400211a0
   140028ee0:	cmp    eax,0xfffffffe
   140028ee3:	je     0x140028f0d
   140028ee5:	mov    rcx,rdi
   140028ee8:	call   0x1400211a0
   140028eed:	mov    rcx,rdi
   140028ef0:	movsxd rbx,eax
   140028ef3:	sar    rbx,0x5
   140028ef7:	call   0x1400211a0
   140028efc:	mov    r11d,eax
   140028eff:	and    r11d,0x1f
   140028f03:	imul   r11,r11,0x58
   140028f07:	add    r11,QWORD PTR [r12+rbx*8]
   140028f0b:	jmp    0x140028f10
   140028f0d:	mov    r11,rbp
   140028f10:	mov    al,BYTE PTR [r11+0x38]
   140028f14:	and    al,0x7f
   140028f16:	cmp    al,0x2
   140028f18:	je     0x14002902b
   140028f1e:	mov    rcx,rdi
   140028f21:	call   0x1400211a0
   140028f26:	cmp    eax,0xffffffff
   140028f29:	je     0x140028f60
   140028f2b:	mov    rcx,rdi
   140028f2e:	call   0x1400211a0
   140028f33:	cmp    eax,0xfffffffe
   140028f36:	je     0x140028f60
   140028f38:	mov    rcx,rdi
   140028f3b:	call   0x1400211a0
   140028f40:	mov    rcx,rdi
   140028f43:	movsxd rbx,eax
   140028f46:	sar    rbx,0x5
   140028f4a:	call   0x1400211a0
   140028f4f:	mov    r11d,eax
   140028f52:	and    r11d,0x1f
   140028f56:	imul   r11,r11,0x58
   140028f5a:	add    r11,QWORD PTR [r12+rbx*8]
   140028f5e:	jmp    0x140028f63
   140028f60:	mov    r11,rbp
   140028f63:	mov    al,BYTE PTR [r11+0x38]
   140028f67:	and    al,0x7f
   140028f69:	cmp    al,0x1
   140028f6b:	je     0x14002902b
   140028f71:	mov    rcx,rdi
   140028f74:	call   0x1400211a0
   140028f79:	cmp    eax,0xffffffff
   140028f7c:	je     0x140028faf
   140028f7e:	mov    rcx,rdi
   140028f81:	call   0x1400211a0
   140028f86:	cmp    eax,0xfffffffe
   140028f89:	je     0x140028faf
   140028f8b:	mov    rcx,rdi
   140028f8e:	call   0x1400211a0
   140028f93:	mov    rcx,rdi
   140028f96:	movsxd rbx,eax
   140028f99:	sar    rbx,0x5
   140028f9d:	call   0x1400211a0
   140028fa2:	mov    ebp,eax
   140028fa4:	and    ebp,0x1f
   140028fa7:	imul   rbp,rbp,0x58
   140028fab:	add    rbp,QWORD PTR [r12+rbx*8]
   140028faf:	test   BYTE PTR [rbp+0x8],0x80
   140028fb3:	je     0x140029042
   140028fb9:	lea    rdx,[rsp+0x24]
   140028fbe:	lea    rcx,[rsp+0x20]
   140028fc3:	movzx  r9d,si
   140028fc7:	mov    r8d,0x5
   140028fcd:	call   0x140027c0c
   140028fd2:	xor    ebx,ebx
   140028fd4:	test   eax,eax
   140028fd6:	je     0x140028fe2
   140028fd8:	mov    eax,0xffff
   140028fdd:	jmp    0x14002906b
   140028fe2:	cmp    DWORD PTR [rsp+0x20],ebx
   140028fe6:	jle    0x140029026
   140028fe8:	lea    rbp,[rsp+0x24]
   140028fed:	dec    DWORD PTR [rdi+0x8]
   140028ff0:	js     0x140029008
   140028ff2:	mov    rcx,QWORD PTR [rdi]
   140028ff5:	mov    al,BYTE PTR [rbp+0x0]
   140028ff8:	mov    BYTE PTR [rcx],al
   140028ffa:	mov    rax,QWORD PTR [rdi]
   140028ffd:	movzx  ecx,BYTE PTR [rax]
   140029000:	inc    rax
   140029003:	mov    QWORD PTR [rdi],rax
   140029006:	jmp    0x140029016
   140029008:	movsx  ecx,BYTE PTR [rbp+0x0]
   14002900c:	mov    rdx,rdi
   14002900f:	call   0x14001e4a4
   140029014:	mov    ecx,eax
   140029016:	cmp    ecx,0xffffffff
   140029019:	je     0x140028fd8
   14002901b:	inc    ebx
   14002901d:	inc    rbp
   140029020:	cmp    ebx,DWORD PTR [rsp+0x20]
   140029024:	jl     0x140028fed
   140029026:	movzx  eax,si
   140029029:	jmp    0x14002906b
   14002902b:	movsxd rcx,DWORD PTR [rdi+0x8]
   14002902f:	add    rcx,0xfffffffffffffffe
   140029033:	mov    DWORD PTR [rdi+0x8],ecx
   140029036:	test   ecx,ecx
   140029038:	js     0x140029060
   14002903a:	mov    rcx,QWORD PTR [rdi]
   14002903d:	mov    WORD PTR [rcx],si
   140029040:	jmp    0x140029057
   140029042:	movsxd rax,DWORD PTR [rdi+0x8]
   140029046:	add    rax,0xfffffffffffffffe
   14002904a:	mov    DWORD PTR [rdi+0x8],eax
   14002904d:	test   eax,eax
   14002904f:	js     0x140029060
   140029051:	mov    rax,QWORD PTR [rdi]
   140029054:	mov    WORD PTR [rax],si
   140029057:	add    QWORD PTR [rdi],0x2
   14002905b:	movzx  eax,si
   14002905e:	jmp    0x14002906b
   140029060:	mov    rdx,rdi
   140029063:	movzx  ecx,si
   140029066:	call   0x14002a564
   14002906b:	mov    rcx,QWORD PTR [rsp+0x30]
   140029070:	xor    rcx,rsp
   140029073:	call   0x140012670
   140029078:	mov    rbx,QWORD PTR [rsp+0x70]
   14002907d:	mov    rbp,QWORD PTR [rsp+0x78]
   140029082:	add    rsp,0x40
   140029086:	pop    r12
   140029088:	pop    rdi
   140029089:	pop    rsi
   14002908a:	ret    
   14002908b:	int3   
   14002908c:	mov    rax,rsp
   14002908f:	mov    QWORD PTR [rax+0x8],rbx
   140029093:	mov    QWORD PTR [rax+0x10],rsi
   140029097:	mov    QWORD PTR [rax+0x18],rdi
   14002909b:	mov    QWORD PTR [rax+0x20],r12
   14002909f:	push   rbp
   1400290a0:	mov    rbp,rsp
   1400290a3:	sub    rsp,0x50
   1400290a7:	xor    r12d,r12d
   1400290aa:	mov    rsi,r8
   1400290ad:	mov    rdi,rdx
   1400290b0:	mov    rbx,rcx
   1400290b3:	test   rdx,rdx
   1400290b6:	je     0x1400290cb
   1400290b8:	test   r8,r8
   1400290bb:	je     0x1400290cb
   1400290bd:	cmp    BYTE PTR [rdx],r12b
   1400290c0:	jne    0x1400290e7
   1400290c2:	test   rcx,rcx
   1400290c5:	je     0x1400290cb
   1400290c7:	mov    WORD PTR [rcx],r12w
   1400290cb:	xor    eax,eax
   1400290cd:	mov    rbx,QWORD PTR [rsp+0x60]
   1400290d2:	mov    rsi,QWORD PTR [rsp+0x68]
   1400290d7:	mov    rdi,QWORD PTR [rsp+0x70]
   1400290dc:	mov    r12,QWORD PTR [rsp+0x78]
   1400290e1:	add    rsp,0x50
   1400290e5:	pop    rbp
   1400290e6:	ret    
   1400290e7:	lea    rcx,[rbp-0x20]
   1400290eb:	mov    rdx,r9
   1400290ee:	call   0x140012690
   1400290f3:	mov    r11,QWORD PTR [rbp-0x20]
   1400290f7:	cmp    DWORD PTR [r11+0x14],r12d
   1400290fb:	jne    0x140029120
   1400290fd:	test   rbx,rbx
   140029100:	je     0x140029108
   140029102:	movzx  eax,BYTE PTR [rdi]
   140029105:	mov    WORD PTR [rbx],ax
   140029108:	cmp    BYTE PTR [rbp-0x8],r12b
   14002910c:	je     0x140029119
   14002910e:	mov    rax,QWORD PTR [rbp-0x10]
   140029112:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140029119:	mov    eax,0x1
   14002911e:	jmp    0x1400290cd
   140029120:	movzx  ecx,BYTE PTR [rdi]
   140029123:	lea    rdx,[rbp-0x20]
   140029127:	call   0x140020e3c
   14002912c:	test   eax,eax
   14002912e:	je     0x1400291cb
   140029134:	mov    rcx,QWORD PTR [rbp-0x20]
   140029138:	mov    r9d,DWORD PTR [rcx+0x10c]
   14002913f:	cmp    r9d,0x1
   140029143:	jle    0x140029175
   140029145:	cmp    esi,r9d
   140029148:	jl     0x140029175
   14002914a:	mov    ecx,DWORD PTR [rcx+0x4]
   14002914d:	mov    eax,r12d
   140029150:	test   rbx,rbx
   140029153:	setne  al
   140029156:	mov    r8,rdi
   140029159:	mov    edx,0x9
   14002915e:	mov    DWORD PTR [rsp+0x28],eax
   140029162:	mov    QWORD PTR [rsp+0x20],rbx
   140029167:	call   QWORD PTR [rip+0x6103]        # 0x14002f270
   14002916d:	mov    rcx,QWORD PTR [rbp-0x20]
   140029171:	test   eax,eax
   140029173:	jne    0x140029187
   140029175:	movsxd rax,DWORD PTR [rcx+0x10c]
   14002917c:	cmp    rsi,rax
   14002917f:	jb     0x1400291a7
   140029181:	cmp    BYTE PTR [rdi+0x1],r12b
   140029185:	je     0x1400291a7
   140029187:	mov    eax,DWORD PTR [rcx+0x10c]
   14002918d:	cmp    BYTE PTR [rbp-0x8],r12b
   140029191:	je     0x1400290cd
   140029197:	mov    rcx,QWORD PTR [rbp-0x10]
   14002919b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400291a2:	jmp    0x1400290cd
   1400291a7:	call   0x14001583c
   1400291ac:	mov    DWORD PTR [rax],0x2a
   1400291b2:	cmp    BYTE PTR [rbp-0x8],r12b
   1400291b6:	je     0x1400291c3
   1400291b8:	mov    rax,QWORD PTR [rbp-0x10]
   1400291bc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400291c3:	or     eax,0xffffffff
   1400291c6:	jmp    0x1400290cd
   1400291cb:	mov    eax,r12d
   1400291ce:	mov    r9d,0x1
   1400291d4:	test   rbx,rbx
   1400291d7:	setne  al
   1400291da:	lea    edx,[r9+0x8]
   1400291de:	mov    r8,rdi
   1400291e1:	mov    DWORD PTR [rsp+0x28],eax
   1400291e5:	mov    rax,QWORD PTR [rbp-0x20]
   1400291e9:	mov    QWORD PTR [rsp+0x20],rbx
   1400291ee:	mov    ecx,DWORD PTR [rax+0x4]
   1400291f1:	call   QWORD PTR [rip+0x6079]        # 0x14002f270
   1400291f7:	test   eax,eax
   1400291f9:	jne    0x140029108
   1400291ff:	jmp    0x1400291a7
   140029201:	int3   
   140029202:	int3   
   140029203:	int3   
   140029204:	xor    r9d,r9d
   140029207:	jmp    0x14002908c
   14002920c:	mov    QWORD PTR [rsp+0x18],rbx
   140029211:	mov    QWORD PTR [rsp+0x20],rbp
   140029216:	push   rsi
   140029217:	push   rdi
   140029218:	push   r12
   14002921a:	push   r13
   14002921c:	push   r15
   14002921e:	sub    rsp,0x40
   140029222:	mov    rax,QWORD PTR [rip+0x16707]        # 0x14003f930
   140029229:	xor    rax,rsp
   14002922c:	mov    QWORD PTR [rsp+0x30],rax
   140029231:	mov    r13d,0xffff
   140029237:	mov    rdi,rdx
   14002923a:	movzx  ebp,cx
   14002923d:	mov    WORD PTR [rsp+0x24],cx
   140029242:	cmp    cx,r13w
   140029246:	je     0x1400293e0
   14002924c:	test   BYTE PTR [rdx+0x18],0x1
   140029250:	mov    esi,0x2
   140029255:	jne    0x14002926b
   140029257:	test   BYTE PTR [rdx+0x18],0x80
   14002925b:	je     0x1400293e0
   140029261:	test   BYTE PTR [rdx+0x18],sil
   140029265:	jne    0x1400293e0
   14002926b:	cmp    QWORD PTR [rdx+0x10],0x0
   140029270:	jne    0x14002927a
   140029272:	mov    rcx,rdx
   140029275:	call   0x140028e38
   14002927a:	test   BYTE PTR [rdi+0x18],0x40
   14002927e:	jne    0x1400293ae
   140029284:	mov    rcx,rdi
   140029287:	call   0x1400211a0
   14002928c:	lea    r12,[rip+0x179cd]        # 0x140040c60
   140029293:	lea    r15,[rip+0x2d386]        # 0x140056620
   14002929a:	cmp    eax,0xffffffff
   14002929d:	je     0x1400292d4
   14002929f:	mov    rcx,rdi
   1400292a2:	call   0x1400211a0
   1400292a7:	cmp    eax,0xfffffffe
   1400292aa:	je     0x1400292d4
   1400292ac:	mov    rcx,rdi
   1400292af:	call   0x1400211a0
   1400292b4:	mov    rcx,rdi
   1400292b7:	movsxd rbx,eax
   1400292ba:	sar    rbx,0x5
   1400292be:	call   0x1400211a0
   1400292c3:	mov    r11d,eax
   1400292c6:	and    r11d,0x1f
   1400292ca:	imul   r11,r11,0x58
   1400292ce:	add    r11,QWORD PTR [r15+rbx*8]
   1400292d2:	jmp    0x1400292d7
   1400292d4:	mov    r11,r12
   1400292d7:	test   BYTE PTR [r11+0x8],0x80
   1400292dc:	je     0x1400293ae
   1400292e2:	mov    rcx,rdi
   1400292e5:	call   0x1400211a0
   1400292ea:	cmp    eax,0xffffffff
   1400292ed:	je     0x140029322
   1400292ef:	mov    rcx,rdi
   1400292f2:	call   0x1400211a0
   1400292f7:	cmp    eax,0xfffffffe
   1400292fa:	je     0x140029322
   1400292fc:	mov    rcx,rdi
   1400292ff:	call   0x1400211a0
   140029304:	mov    rcx,rdi
   140029307:	movsxd rbx,eax
   14002930a:	sar    rbx,0x5
   14002930e:	call   0x1400211a0
   140029313:	mov    r12d,eax
   140029316:	and    r12d,0x1f
   14002931a:	imul   r12,r12,0x58
   14002931e:	add    r12,QWORD PTR [r15+rbx*8]
   140029322:	test   BYTE PTR [r12+0x38],0x7f
   140029328:	je     0x14002933d
   14002932a:	mov    al,BYTE PTR [rsp+0x25]
   14002932e:	mov    BYTE PTR [rsp+0x28],bpl
   140029333:	mov    DWORD PTR [rsp+0x20],esi
   140029337:	mov    BYTE PTR [rsp+0x29],al
   14002933b:	jmp    0x140029362
   14002933d:	lea    rdx,[rsp+0x28]
   140029342:	lea    rcx,[rsp+0x20]
   140029347:	movzx  r9d,bp
   14002934b:	mov    r8d,0x5
   140029351:	call   0x140027c0c
   140029356:	test   eax,eax
   140029358:	jne    0x1400293e0
   14002935e:	mov    esi,DWORD PTR [rsp+0x20]
   140029362:	mov    rax,QWORD PTR [rdi+0x10]
   140029366:	movsxd rdx,esi
   140029369:	add    rdx,rax
   14002936c:	cmp    QWORD PTR [rdi],rdx
   14002936f:	jae    0x14002937f
   140029371:	cmp    DWORD PTR [rdi+0x8],0x0
   140029375:	jne    0x1400293e0
   140029377:	cmp    esi,DWORD PTR [rdi+0x24]
   14002937a:	jg     0x1400293e0
   14002937c:	mov    QWORD PTR [rdi],rdx
   14002937f:	lea    eax,[rsi-0x1]
   140029382:	movsxd rdx,eax
   140029385:	test   eax,eax
   140029387:	js     0x14002939e
   140029389:	dec    QWORD PTR [rdi]
   14002938c:	mov    al,BYTE PTR [rsp+rdx*1+0x28]
   140029390:	dec    rdx
   140029393:	mov    rcx,QWORD PTR [rdi]
   140029396:	mov    BYTE PTR [rcx],al
   140029398:	jns    0x140029389
   14002939a:	mov    esi,DWORD PTR [rsp+0x20]
   14002939e:	add    DWORD PTR [rdi+0x8],esi
   1400293a1:	and    DWORD PTR [rdi+0x18],0xffffffef
   1400293a5:	or     DWORD PTR [rdi+0x18],0x1
   1400293a9:	movzx  eax,bp
   1400293ac:	jmp    0x1400293e4
   1400293ae:	mov    rax,QWORD PTR [rdi+0x10]
   1400293b2:	add    rax,rsi
   1400293b5:	cmp    QWORD PTR [rdi],rax
   1400293b8:	jae    0x1400293c8
   1400293ba:	cmp    DWORD PTR [rdi+0x8],0x0
   1400293be:	jne    0x1400293e0
   1400293c0:	cmp    DWORD PTR [rdi+0x24],esi
   1400293c3:	jb     0x1400293e0
   1400293c5:	mov    QWORD PTR [rdi],rax
   1400293c8:	add    QWORD PTR [rdi],0xfffffffffffffffe
   1400293cc:	test   BYTE PTR [rdi+0x18],0x40
   1400293d0:	mov    rax,QWORD PTR [rdi]
   1400293d3:	je     0x14002940a
   1400293d5:	cmp    WORD PTR [rax],bp
   1400293d8:	je     0x14002939e
   1400293da:	add    rax,rsi
   1400293dd:	mov    QWORD PTR [rdi],rax
   1400293e0:	movzx  eax,r13w
   1400293e4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400293e9:	xor    rcx,rsp
   1400293ec:	call   0x140012670
   1400293f1:	lea    r11,[rsp+0x40]
   1400293f6:	mov    rbx,QWORD PTR [r11+0x40]
   1400293fa:	mov    rbp,QWORD PTR [r11+0x48]
   1400293fe:	mov    rsp,r11
   140029401:	pop    r15
   140029403:	pop    r13
   140029405:	pop    r12
   140029407:	pop    rdi
   140029408:	pop    rsi
   140029409:	ret    
   14002940a:	mov    WORD PTR [rax],bp
   14002940d:	jmp    0x14002939e
   14002940f:	int3   
   140029410:	mov    QWORD PTR [rsp+0x8],rbx
   140029415:	mov    QWORD PTR [rsp+0x10],rsi
   14002941a:	push   rdi
   14002941b:	sub    rsp,0x30
   14002941f:	mov    rbx,rcx
   140029422:	test   rcx,rcx
   140029425:	je     0x14002946e
   140029427:	call   0x14001dae0
   14002942c:	mov    rsi,rax
   14002942f:	lea    rcx,[rax+0x1]
   140029433:	call   0x140013298
   140029438:	mov    rdi,rax
   14002943b:	test   rax,rax
   14002943e:	je     0x14002946e
   140029440:	lea    rdx,[rsi+0x1]
   140029444:	mov    r8,rbx
   140029447:	mov    rcx,rax
   14002944a:	call   0x14001dc7c
   14002944f:	test   eax,eax
   140029451:	jne    0x140029458
   140029453:	mov    rax,rdi
   140029456:	jmp    0x140029470
   140029458:	and    QWORD PTR [rsp+0x20],0x0
   14002945e:	xor    r9d,r9d
   140029461:	xor    r8d,r8d
   140029464:	xor    edx,edx
   140029466:	xor    ecx,ecx
   140029468:	call   0x140019ed0
   14002946d:	int3   
   14002946e:	xor    eax,eax
   140029470:	mov    rbx,QWORD PTR [rsp+0x40]
   140029475:	mov    rsi,QWORD PTR [rsp+0x48]
   14002947a:	add    rsp,0x30
   14002947e:	pop    rdi
   14002947f:	ret    
   140029480:	mov    QWORD PTR [rsp+0x8],rbx
   140029485:	mov    QWORD PTR [rsp+0x10],rsi
   14002948a:	mov    QWORD PTR [rsp+0x18],rdi
   14002948f:	push   rbp
   140029490:	mov    rbp,rsp
   140029493:	sub    rsp,0x40
   140029497:	mov    rbx,rcx
   14002949a:	mov    edi,edx
   14002949c:	lea    rcx,[rbp-0x20]
   1400294a0:	mov    rdx,r8
   1400294a3:	call   0x140012690
   1400294a8:	xor    esi,esi
   1400294aa:	test   rbx,rbx
   1400294ad:	jne    0x1400294e7
   1400294af:	call   0x14001583c
   1400294b4:	mov    DWORD PTR [rax],0x16
   1400294ba:	call   0x140019f74
   1400294bf:	cmp    BYTE PTR [rbp-0x8],sil
   1400294c3:	je     0x1400294d0
   1400294c5:	mov    rax,QWORD PTR [rbp-0x10]
   1400294c9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400294d0:	xor    eax,eax
   1400294d2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400294d7:	mov    rsi,QWORD PTR [rsp+0x58]
   1400294dc:	mov    rdi,QWORD PTR [rsp+0x60]
   1400294e1:	add    rsp,0x40
   1400294e5:	pop    rbp
   1400294e6:	ret    
   1400294e7:	mov    rdx,QWORD PTR [rbp-0x18]
   1400294eb:	cmp    DWORD PTR [rdx+0x8],esi
   1400294ee:	jne    0x14002950d
   1400294f0:	mov    edx,edi
   1400294f2:	mov    rcx,rbx
   1400294f5:	call   0x14002a6f4
   1400294fa:	cmp    BYTE PTR [rbp-0x8],sil
   1400294fe:	je     0x1400294d2
   140029500:	mov    rcx,QWORD PTR [rbp-0x10]
   140029504:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002950b:	jmp    0x1400294d2
   14002950d:	movzx  ecx,BYTE PTR [rbx]
   140029510:	test   cx,cx
   140029513:	je     0x140029548
   140029515:	movzx  eax,cl
   140029518:	test   BYTE PTR [rax+rdx*1+0x1d],0x4
   14002951d:	je     0x14002953c
   14002951f:	inc    rbx
   140029522:	cmp    BYTE PTR [rbx],sil
   140029525:	je     0x1400294bf
   140029527:	movzx  eax,BYTE PTR [rbx]
   14002952a:	movzx  ecx,cx
   14002952d:	shl    ecx,0x8
   140029530:	or     ecx,eax
   140029532:	cmp    edi,ecx
   140029534:	jne    0x140029543
   140029536:	lea    rax,[rbx-0x1]
   14002953a:	jmp    0x1400294fa
   14002953c:	movzx  eax,cx
   14002953f:	cmp    edi,eax
   140029541:	je     0x140029548
   140029543:	inc    rbx
   140029546:	jmp    0x14002950d
   140029548:	movzx  eax,cx
   14002954b:	cmp    edi,eax
   14002954d:	jne    0x1400294bf
   140029553:	cmp    BYTE PTR [rbp-0x8],sil
   140029557:	je     0x140029564
   140029559:	mov    rax,QWORD PTR [rbp-0x10]
   14002955d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140029564:	mov    rax,rbx
   140029567:	jmp    0x1400294d2
   14002956c:	xor    r8d,r8d
   14002956f:	jmp    0x140029480
   140029574:	mov    QWORD PTR [rsp+0x8],rbx
   140029579:	mov    QWORD PTR [rsp+0x10],rsi
   14002957e:	push   rdi
   14002957f:	sub    rsp,0x20
   140029583:	xor    edi,edi
   140029585:	mov    rbx,rdx
   140029588:	mov    rsi,rcx
   14002958b:	test   rdx,rdx
   14002958e:	je     0x1400295ad
   140029590:	xor    edx,edx
   140029592:	lea    rax,[rdi-0x20]
   140029596:	div    rbx
   140029599:	cmp    rax,r8
   14002959c:	jae    0x1400295ad
   14002959e:	call   0x14001583c
   1400295a3:	mov    DWORD PTR [rax],0xc
   1400295a9:	xor    eax,eax
   1400295ab:	jmp    0x1400295ea
   1400295ad:	imul   rbx,r8
   1400295b1:	test   rcx,rcx
   1400295b4:	je     0x1400295be
   1400295b6:	call   0x140028c58
   1400295bb:	mov    rdi,rax
   1400295be:	mov    rdx,rbx
   1400295c1:	mov    rcx,rsi
   1400295c4:	call   0x1400131c4
   1400295c9:	mov    rsi,rax
   1400295cc:	test   rax,rax
   1400295cf:	je     0x1400295e7
   1400295d1:	cmp    rdi,rbx
   1400295d4:	jae    0x1400295e7
   1400295d6:	sub    rbx,rdi
   1400295d9:	lea    rcx,[rdi+rax*1]
   1400295dd:	xor    edx,edx
   1400295df:	mov    r8,rbx
   1400295e2:	call   0x140012fb0
   1400295e7:	mov    rax,rsi
   1400295ea:	mov    rbx,QWORD PTR [rsp+0x30]
   1400295ef:	mov    rsi,QWORD PTR [rsp+0x38]
   1400295f4:	add    rsp,0x20
   1400295f8:	pop    rdi
   1400295f9:	ret    
   1400295fa:	int3   
   1400295fb:	int3   
   1400295fc:	int3   
   1400295fd:	int3   
   1400295fe:	int3   
   1400295ff:	int3   
   140029600:	int3   
   140029601:	int3   
   140029602:	int3   
   140029603:	int3   
   140029604:	int3   
   140029605:	int3   
   140029606:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029610:	sub    rdx,rcx
   140029613:	cmp    r8,0x8
   140029617:	jb     0x14002963b
   140029619:	test   cl,0x7
   14002961c:	je     0x140029632
   14002961e:	xchg   ax,ax
   140029620:	mov    al,BYTE PTR [rcx]
   140029622:	cmp    al,BYTE PTR [rdx+rcx*1]
   140029625:	jne    0x140029653
   140029627:	inc    rcx
   14002962a:	dec    r8
   14002962d:	test   cl,0x7
   140029630:	jne    0x140029620
   140029632:	mov    r9,r8
   140029635:	shr    r9,0x3
   140029639:	jne    0x14002965a
   14002963b:	test   r8,r8
   14002963e:	je     0x14002964f
   140029640:	mov    al,BYTE PTR [rcx]
   140029642:	cmp    al,BYTE PTR [rdx+rcx*1]
   140029645:	jne    0x140029653
   140029647:	inc    rcx
   14002964a:	dec    r8
   14002964d:	jne    0x140029640
   14002964f:	xor    rax,rax
   140029652:	ret    
   140029653:	sbb    eax,eax
   140029655:	sbb    eax,0xffffffff
   140029658:	ret    
   140029659:	nop
   14002965a:	shr    r9,0x2
   14002965e:	je     0x140029697
   140029660:	mov    rax,QWORD PTR [rcx]
   140029663:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140029667:	jne    0x1400296c4
   140029669:	mov    rax,QWORD PTR [rcx+0x8]
   14002966d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140029672:	jne    0x1400296c0
   140029674:	mov    rax,QWORD PTR [rcx+0x10]
   140029678:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14002967d:	jne    0x1400296bc
   14002967f:	mov    rax,QWORD PTR [rcx+0x18]
   140029683:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140029688:	jne    0x1400296b8
   14002968a:	add    rcx,0x20
   14002968e:	dec    r9
   140029691:	jne    0x140029660
   140029693:	and    r8,0x1f
   140029697:	mov    r9,r8
   14002969a:	shr    r9,0x3
   14002969e:	je     0x14002963b
   1400296a0:	mov    rax,QWORD PTR [rcx]
   1400296a3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400296a7:	jne    0x1400296c4
   1400296a9:	add    rcx,0x8
   1400296ad:	dec    r9
   1400296b0:	jne    0x1400296a0
   1400296b2:	and    r8,0x7
   1400296b6:	jmp    0x14002963b
   1400296b8:	add    rcx,0x8
   1400296bc:	add    rcx,0x8
   1400296c0:	add    rcx,0x8
   1400296c4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   1400296c8:	bswap  rax
   1400296cb:	bswap  rcx
   1400296ce:	cmp    rax,rcx
   1400296d1:	sbb    eax,eax
   1400296d3:	sbb    eax,0xffffffff
   1400296d6:	ret    
   1400296d7:	int3   
   1400296d8:	int3   
   1400296d9:	int3   
   1400296da:	int3   
   1400296db:	int3   
   1400296dc:	int3   
   1400296dd:	int3   
   1400296de:	int3   
   1400296df:	int3   
   1400296e0:	int3   
   1400296e1:	int3   
   1400296e2:	int3   
   1400296e3:	int3   
   1400296e4:	int3   
   1400296e5:	int3   
   1400296e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400296f0:	test   r8,r8
   1400296f3:	je     0x14002976a
   1400296f5:	sub    rdx,rcx
   1400296f8:	mov    r9,rdx
   1400296fb:	movabs r11,0x8101010101010100
   140029705:	test   cl,0x7
   140029708:	je     0x140029729
   14002970a:	mov    al,BYTE PTR [rcx]
   14002970c:	mov    dl,BYTE PTR [rcx+r9*1]
   140029710:	inc    rcx
   140029713:	cmp    al,dl
   140029715:	jne    0x14002976e
   140029717:	dec    r8
   14002971a:	je     0x14002976a
   14002971c:	test   al,al
   14002971e:	je     0x14002976a
   140029720:	test   rcx,0x7
   140029727:	jne    0x14002970a
   140029729:	lea    rdx,[rcx+r9*1]
   14002972d:	and    dx,0xfff
   140029732:	cmp    dx,0xff8
   140029737:	ja     0x14002970a
   140029739:	mov    rax,QWORD PTR [rcx]
   14002973c:	mov    rdx,QWORD PTR [rcx+r9*1]
   140029740:	cmp    rax,rdx
   140029743:	jne    0x14002970a
   140029745:	add    rcx,0x8
   140029749:	sub    r8,0x8
   14002974d:	movabs r10,0x7efefefefefefeff
   140029757:	jbe    0x14002976a
   140029759:	xor    rax,0xffffffffffffffff
   14002975d:	add    r10,rdx
   140029760:	xor    rax,r10
   140029763:	test   r11,rax
   140029766:	je     0x140029729
   140029768:	jmp    0x140029776
   14002976a:	xor    rax,rax
   14002976d:	ret    
   14002976e:	sbb    rax,rax
   140029771:	sbb    rax,0xffffffffffffffff
   140029775:	ret    
   140029776:	test   dl,dl
   140029778:	je     0x1400297a1
   14002977a:	test   dh,dh
   14002977c:	je     0x1400297a1
   14002977e:	shr    rdx,0x10
   140029782:	test   dl,dl
   140029784:	je     0x1400297a1
   140029786:	test   dh,dh
   140029788:	je     0x1400297a1
   14002978a:	shr    rdx,0x10
   14002978e:	test   dl,dl
   140029790:	je     0x1400297a1
   140029792:	test   dh,dh
   140029794:	je     0x1400297a1
   140029796:	shr    edx,0x10
   140029799:	test   dl,dl
   14002979b:	je     0x1400297a1
   14002979d:	test   dh,dh
   14002979f:	jne    0x140029729
   1400297a1:	xor    rax,rax
   1400297a4:	ret    
   1400297a5:	int3   
   1400297a6:	int3   
   1400297a7:	int3   
   1400297a8:	mov    QWORD PTR [rsp+0x18],rbx
   1400297ad:	mov    DWORD PTR [rsp+0x8],ecx
   1400297b1:	push   rsi
   1400297b2:	push   rdi
   1400297b3:	push   r12
   1400297b5:	sub    rsp,0x20
   1400297b9:	movsxd rdi,ecx
   1400297bc:	cmp    edi,0xfffffffe
   1400297bf:	jne    0x1400297d1
   1400297c1:	call   0x14001583c
   1400297c6:	mov    DWORD PTR [rax],0x9
   1400297cc:	jmp    0x14002986e
   1400297d1:	test   ecx,ecx
   1400297d3:	js     0x14002985e
   1400297d9:	cmp    edi,DWORD PTR [rip+0x2ce25]        # 0x140056604
   1400297df:	jae    0x14002985e
   1400297e1:	mov    rbx,rdi
   1400297e4:	mov    rsi,rdi
   1400297e7:	sar    rsi,0x5
   1400297eb:	lea    r12,[rip+0x2ce2e]        # 0x140056620
   1400297f2:	and    ebx,0x1f
   1400297f5:	imul   rbx,rbx,0x58
   1400297f9:	mov    rax,QWORD PTR [r12+rsi*8]
   1400297fd:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140029802:	and    ecx,0x1
   140029805:	je     0x14002985e
   140029807:	mov    ecx,edi
   140029809:	call   0x140022628
   14002980e:	nop
   14002980f:	mov    rax,QWORD PTR [r12+rsi*8]
   140029813:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   140029818:	je     0x140029845
   14002981a:	mov    ecx,edi
   14002981c:	call   0x1400225b4
   140029821:	mov    rcx,rax
   140029824:	call   QWORD PTR [rip+0x5916]        # 0x14002f140
   14002982a:	test   eax,eax
   14002982c:	jne    0x140029838
   14002982e:	call   QWORD PTR [rip+0x587c]        # 0x14002f0b0
   140029834:	mov    ebx,eax
   140029836:	jmp    0x14002983a
   140029838:	xor    ebx,ebx
   14002983a:	test   ebx,ebx
   14002983c:	je     0x140029853
   14002983e:	call   0x14001585c
   140029843:	mov    DWORD PTR [rax],ebx
   140029845:	call   0x14001583c
   14002984a:	mov    DWORD PTR [rax],0x9
   140029850:	or     ebx,0xffffffff
   140029853:	mov    ecx,edi
   140029855:	call   0x1400226d0
   14002985a:	mov    eax,ebx
   14002985c:	jmp    0x140029871
   14002985e:	call   0x14001583c
   140029863:	mov    DWORD PTR [rax],0x9
   140029869:	call   0x140019f74
   14002986e:	or     eax,0xffffffff
   140029871:	mov    rbx,QWORD PTR [rsp+0x50]
   140029876:	add    rsp,0x20
   14002987a:	pop    r12
   14002987c:	pop    rdi
   14002987d:	pop    rsi
   14002987e:	ret    
   14002987f:	int3   
   140029880:	mov    WORD PTR [rsp+0x8],cx
   140029885:	sub    rsp,0x38
   140029889:	mov    rcx,QWORD PTR [rip+0x177b0]        # 0x140041040
   140029890:	cmp    rcx,0xfffffffffffffffe
   140029894:	jne    0x1400298a2
   140029896:	call   0x14002a710
   14002989b:	mov    rcx,QWORD PTR [rip+0x1779e]        # 0x140041040
   1400298a2:	cmp    rcx,0xffffffffffffffff
   1400298a6:	jne    0x1400298af
   1400298a8:	mov    eax,0xffff
   1400298ad:	jmp    0x1400298d4
   1400298af:	and    QWORD PTR [rsp+0x20],0x0
   1400298b5:	lea    r9,[rsp+0x48]
   1400298ba:	lea    rdx,[rsp+0x40]
   1400298bf:	mov    r8d,0x1
   1400298c5:	call   QWORD PTR [rip+0x586d]        # 0x14002f138
   1400298cb:	test   eax,eax
   1400298cd:	je     0x1400298a8
   1400298cf:	movzx  eax,WORD PTR [rsp+0x40]
   1400298d4:	add    rsp,0x38
   1400298d8:	ret    
   1400298d9:	int3   
   1400298da:	int3   
   1400298db:	int3   
   1400298dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400298e1:	mov    QWORD PTR [rsp+0x10],rsi
   1400298e6:	push   rdi
   1400298e7:	sub    rsp,0x20
   1400298eb:	mov    rdi,rcx
   1400298ee:	test   rcx,rcx
   1400298f1:	jne    0x140029908
   1400298f3:	call   0x14001583c
   1400298f8:	mov    DWORD PTR [rax],0x16
   1400298fe:	call   0x140019f74
   140029903:	jmp    0x140029a26
   140029908:	mov    eax,DWORD PTR [rcx+0x18]
   14002990b:	test   al,0x83
   14002990d:	je     0x140029a26
   140029913:	test   al,0x40
   140029915:	jne    0x140029a26
   14002991b:	test   al,0x2
   14002991d:	je     0x14002992a
   14002991f:	or     eax,0x20
   140029922:	mov    DWORD PTR [rcx+0x18],eax
   140029925:	jmp    0x140029a26
   14002992a:	or     eax,0x1
   14002992d:	mov    DWORD PTR [rcx+0x18],eax
   140029930:	test   eax,0x10c
   140029935:	jne    0x14002993e
   140029937:	call   0x140028e38
   14002993c:	jmp    0x140029945
   14002993e:	mov    rax,QWORD PTR [rcx+0x10]
   140029942:	mov    QWORD PTR [rcx],rax
   140029945:	mov    rcx,rdi
   140029948:	call   0x1400211a0
   14002994d:	mov    r8d,DWORD PTR [rdi+0x24]
   140029951:	mov    rdx,QWORD PTR [rdi+0x10]
   140029955:	mov    ecx,eax
   140029957:	call   0x140023898
   14002995c:	mov    DWORD PTR [rdi+0x8],eax
   14002995f:	test   eax,eax
   140029961:	je     0x140029a15
   140029967:	cmp    eax,0x1
   14002996a:	je     0x140029a15
   140029970:	cmp    eax,0xffffffff
   140029973:	je     0x140029a15
   140029979:	test   BYTE PTR [rdi+0x18],0x82
   14002997d:	jne    0x1400299de
   14002997f:	mov    rcx,rdi
   140029982:	call   0x1400211a0
   140029987:	cmp    eax,0xffffffff
   14002998a:	je     0x1400299c8
   14002998c:	mov    rcx,rdi
   14002998f:	call   0x1400211a0
   140029994:	cmp    eax,0xfffffffe
   140029997:	je     0x1400299c8
   140029999:	mov    rcx,rdi
   14002999c:	call   0x1400211a0
   1400299a1:	mov    rcx,rdi
   1400299a4:	lea    rsi,[rip+0x2cc75]        # 0x140056620
   1400299ab:	movsxd rbx,eax
   1400299ae:	sar    rbx,0x5
   1400299b2:	call   0x1400211a0
   1400299b7:	mov    r11d,eax
   1400299ba:	and    r11d,0x1f
   1400299be:	imul   r11,r11,0x58
   1400299c2:	add    r11,QWORD PTR [rsi+rbx*8]
   1400299c6:	jmp    0x1400299cf
   1400299c8:	lea    r11,[rip+0x17291]        # 0x140040c60
   1400299cf:	mov    al,BYTE PTR [r11+0x8]
   1400299d3:	and    al,0x82
   1400299d5:	cmp    al,0x82
   1400299d7:	jne    0x1400299de
   1400299d9:	bts    DWORD PTR [rdi+0x18],0xd
   1400299de:	cmp    DWORD PTR [rdi+0x24],0x200
   1400299e5:	jne    0x140029a02
   1400299e7:	test   BYTE PTR [rdi+0x18],0x8
   1400299eb:	je     0x140029a02
   1400299ed:	mov    eax,DWORD PTR [rdi+0x24]
   1400299f0:	test   DWORD PTR [rdi+0x18],0x400
   1400299f7:	mov    ecx,0x1000
   1400299fc:	cmove  eax,ecx
   1400299ff:	mov    DWORD PTR [rdi+0x24],eax
   140029a02:	mov    rcx,QWORD PTR [rdi]
   140029a05:	add    DWORD PTR [rdi+0x8],0xfffffffe
   140029a09:	movzx  eax,WORD PTR [rcx]
   140029a0c:	add    rcx,0x2
   140029a10:	mov    QWORD PTR [rdi],rcx
   140029a13:	jmp    0x140029a2b
   140029a15:	neg    eax
   140029a17:	sbb    eax,eax
   140029a19:	and    eax,0x10
   140029a1c:	add    eax,0x10
   140029a1f:	or     DWORD PTR [rdi+0x18],eax
   140029a22:	and    DWORD PTR [rdi+0x8],0x0
   140029a26:	mov    eax,0xffff
   140029a2b:	mov    rbx,QWORD PTR [rsp+0x30]
   140029a30:	mov    rsi,QWORD PTR [rsp+0x38]
   140029a35:	add    rsp,0x20
   140029a39:	pop    rdi
   140029a3a:	ret    
   140029a3b:	int3   
   140029a3c:	mov    QWORD PTR [rsp+0x8],rbx
   140029a41:	push   rdi
   140029a42:	sub    rsp,0x20
   140029a46:	test   BYTE PTR [rdx+0x18],0x40
   140029a4a:	mov    rbx,rdx
   140029a4d:	mov    edi,ecx
   140029a4f:	jne    0x140029adf
   140029a55:	mov    rcx,rdx
   140029a58:	call   0x1400211a0
   140029a5d:	lea    rdx,[rip+0x171fc]        # 0x140040c60
   140029a64:	lea    r8,[rip+0x2cbb5]        # 0x140056620
   140029a6b:	movsxd r11,eax
   140029a6e:	cmp    r11d,0xffffffff
   140029a72:	je     0x140029a91
   140029a74:	cmp    r11d,0xfffffffe
   140029a78:	je     0x140029a91
   140029a7a:	mov    rcx,r11
   140029a7d:	mov    rax,r11
   140029a80:	and    ecx,0x1f
   140029a83:	sar    rax,0x5
   140029a87:	imul   rcx,rcx,0x58
   140029a8b:	add    rcx,QWORD PTR [r8+rax*8]
   140029a8f:	jmp    0x140029a94
   140029a91:	mov    rcx,rdx
   140029a94:	test   BYTE PTR [rcx+0x38],0x7f
   140029a98:	jne    0x140029ac1
   140029a9a:	cmp    r11d,0xffffffff
   140029a9e:	je     0x140029abb
   140029aa0:	cmp    r11d,0xfffffffe
   140029aa4:	je     0x140029abb
   140029aa6:	mov    rdx,r11
   140029aa9:	mov    rax,r11
   140029aac:	and    edx,0x1f
   140029aaf:	sar    rax,0x5
   140029ab3:	imul   rdx,rdx,0x58
   140029ab7:	add    rdx,QWORD PTR [r8+rax*8]
   140029abb:	test   BYTE PTR [rdx+0x38],0x80
   140029abf:	je     0x140029adf
   140029ac1:	call   0x14001583c
   140029ac6:	mov    DWORD PTR [rax],0x16
   140029acc:	call   0x140019f74
   140029ad1:	or     eax,0xffffffff
   140029ad4:	mov    rbx,QWORD PTR [rsp+0x30]
   140029ad9:	add    rsp,0x20
   140029add:	pop    rdi
   140029ade:	ret    
   140029adf:	cmp    edi,0xffffffff
   140029ae2:	je     0x140029ad1
   140029ae4:	test   BYTE PTR [rbx+0x18],0x1
   140029ae8:	jne    0x140029af6
   140029aea:	test   BYTE PTR [rbx+0x18],0x80
   140029aee:	je     0x140029ad1
   140029af0:	test   BYTE PTR [rbx+0x18],0x2
   140029af4:	jne    0x140029ad1
   140029af6:	cmp    QWORD PTR [rbx+0x10],0x0
   140029afb:	jne    0x140029b05
   140029afd:	mov    rcx,rbx
   140029b00:	call   0x140028e38
   140029b05:	mov    rax,QWORD PTR [rbx]
   140029b08:	cmp    rax,QWORD PTR [rbx+0x10]
   140029b0c:	jne    0x140029b1a
   140029b0e:	cmp    DWORD PTR [rbx+0x8],0x0
   140029b12:	jne    0x140029ad1
   140029b14:	inc    rax
   140029b17:	mov    QWORD PTR [rbx],rax
   140029b1a:	dec    QWORD PTR [rbx]
   140029b1d:	test   BYTE PTR [rbx+0x18],0x40
   140029b21:	mov    rax,QWORD PTR [rbx]
   140029b24:	je     0x140029b33
   140029b26:	cmp    BYTE PTR [rax],dil
   140029b29:	je     0x140029b36
   140029b2b:	inc    rax
   140029b2e:	mov    QWORD PTR [rbx],rax
   140029b31:	jmp    0x140029ad1
   140029b33:	mov    BYTE PTR [rax],dil
   140029b36:	inc    DWORD PTR [rbx+0x8]
   140029b39:	and    DWORD PTR [rbx+0x18],0xffffffef
   140029b3d:	or     DWORD PTR [rbx+0x18],0x1
   140029b41:	movzx  eax,dil
   140029b45:	jmp    0x140029ad4
   140029b47:	int3   
   140029b48:	mov    QWORD PTR [rsp+0x8],rbx
   140029b4d:	mov    QWORD PTR [rsp+0x10],rdx
   140029b52:	push   rdi
   140029b53:	sub    rsp,0x20
   140029b57:	mov    rbx,rdx
   140029b5a:	mov    edi,ecx
   140029b5c:	xor    eax,eax
   140029b5e:	test   rdx,rdx
   140029b61:	setne  al
   140029b64:	test   eax,eax
   140029b66:	jne    0x140029b7d
   140029b68:	call   0x14001583c
   140029b6d:	mov    DWORD PTR [rax],0x16
   140029b73:	call   0x140019f74
   140029b78:	or     eax,0xffffffff
   140029b7b:	jmp    0x140029b9c
   140029b7d:	mov    rcx,rdx
   140029b80:	call   0x140014d4c
   140029b85:	nop
   140029b86:	mov    rdx,rbx
   140029b89:	mov    ecx,edi
   140029b8b:	call   0x140029a3c
   140029b90:	mov    edi,eax
   140029b92:	mov    rcx,rbx
   140029b95:	call   0x140014de4
   140029b9a:	mov    eax,edi
   140029b9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140029ba1:	add    rsp,0x20
   140029ba5:	pop    rdi
   140029ba6:	ret    
   140029ba7:	int3   
   140029ba8:	mov    QWORD PTR [rsp+0x20],r9
   140029bad:	mov    QWORD PTR [rsp+0x10],rdx
   140029bb2:	push   rbp
   140029bb3:	push   rbx
   140029bb4:	push   rdi
   140029bb5:	push   r12
   140029bb7:	push   r13
   140029bb9:	push   r14
   140029bbb:	push   r15
   140029bbd:	lea    rbp,[rsp-0x27]
   140029bc2:	sub    rsp,0xe0
   140029bc9:	xor    edi,edi
   140029bcb:	mov    r12d,ecx
   140029bce:	lea    eax,[rdi+0x4]
   140029bd1:	lea    r13d,[rdi+0x3]
   140029bd5:	mov    r15d,edi
   140029bd8:	mov    r14b,dil
   140029bdb:	test   ecx,ecx
   140029bdd:	je     0x140029bf2
   140029bdf:	cmp    ecx,0x1
   140029be2:	je     0x140029bf2
   140029be4:	jle    0x140029bf8
   140029be6:	cmp    ecx,r13d
   140029be9:	jle    0x140029bf2
   140029beb:	cmp    ecx,eax
   140029bed:	jne    0x140029bf8
   140029bef:	mov    r14b,0x1
   140029bf2:	mov    QWORD PTR [rbp-0x51],r8
   140029bf6:	jmp    0x140029c32
   140029bf8:	call   0x14001585c
   140029bfd:	mov    DWORD PTR [rax],edi
   140029bff:	call   0x14001583c
   140029c04:	mov    DWORD PTR [rax],0x16
   140029c0a:	call   0x140019f74
   140029c0f:	jmp    0x140029e36
   140029c14:	add    r8,0x2
   140029c18:	cmp    WORD PTR [r8],di
   140029c1c:	jne    0x140029c14
   140029c1e:	cmp    WORD PTR [r8+0x2],di
   140029c23:	je     0x140029c32
   140029c25:	mov    ecx,0x20
   140029c2a:	mov    WORD PTR [r8],cx
   140029c2e:	add    r8,0x2
   140029c32:	cmp    WORD PTR [r8],di
   140029c36:	jne    0x140029c14
   140029c38:	mov    ebx,0x68
   140029c3d:	lea    rcx,[rbp-0x49]
   140029c41:	xor    edx,edx
   140029c43:	mov    r8d,ebx
   140029c46:	call   0x140012fb0
   140029c4b:	mov    DWORD PTR [rbp-0x49],ebx
   140029c4e:	mov    ebx,DWORD PTR [rip+0x2c9b0]        # 0x140056604
   140029c54:	lea    r8,[rip+0x2c9c5]        # 0x140056620
   140029c5b:	test   ebx,ebx
   140029c5d:	je     0x140029c86
   140029c5f:	lea    edx,[rbx-0x1]
   140029c62:	movsxd rcx,edx
   140029c65:	mov    rax,rcx
   140029c68:	and    ecx,0x1f
   140029c6b:	sar    rax,0x5
   140029c6f:	imul   rcx,rcx,0x58
   140029c73:	mov    rax,QWORD PTR [r8+rax*8]
   140029c77:	cmp    BYTE PTR [rax+rcx*1+0x8],dil
   140029c7c:	jne    0x140029c84
   140029c7e:	dec    edx
   140029c80:	dec    ebx
   140029c82:	jne    0x140029c62
   140029c84:	test   ebx,ebx
   140029c86:	js     0x140029e2b
   140029c8c:	cmp    ebx,0x1c71
   140029c92:	jae    0x140029e2b
   140029c98:	movzx  eax,bx
   140029c9b:	mov    edx,0x1
   140029ca0:	shl    ax,0x3
   140029ca4:	lea    ecx,[rax+rbx*1+0x4]
   140029ca8:	mov    WORD PTR [rbp-0x7],cx
   140029cac:	movzx  ecx,cx
   140029caf:	call   0x140020ca8
   140029cb4:	mov    QWORD PTR [rbp-0x1],rax
   140029cb8:	test   rax,rax
   140029cbb:	je     0x140029e2b
   140029cc1:	mov    DWORD PTR [rax],ebx
   140029cc3:	mov    rax,QWORD PTR [rbp-0x1]
   140029cc7:	movsxd r11,ebx
   140029cca:	lea    rcx,[rax+0x4]
   140029cce:	lea    rdx,[r11+rax*1+0x4]
   140029cd3:	test   ebx,ebx
   140029cd5:	jle    0x140029d29
   140029cd7:	mov    r8,rdi
   140029cda:	mov    r9d,ebx
   140029cdd:	lea    r11,[rip+0x2c93c]        # 0x140056620
   140029ce4:	mov    r10,r8
   140029ce7:	mov    rax,r8
   140029cea:	and    r10d,0x1f
   140029cee:	sar    rax,0x5
   140029cf2:	imul   r10,r10,0x58
   140029cf6:	add    r10,QWORD PTR [r11+rax*8]
   140029cfa:	mov    al,BYTE PTR [r10+0x8]
   140029cfe:	test   al,0x10
   140029d00:	jne    0x140029d0c
   140029d02:	mov    BYTE PTR [rcx],al
   140029d04:	mov    rax,QWORD PTR [r10]
   140029d07:	mov    QWORD PTR [rdx],rax
   140029d0a:	jmp    0x140029d13
   140029d0c:	mov    BYTE PTR [rcx],dil
   140029d0f:	or     QWORD PTR [rdx],0xffffffffffffffff
   140029d13:	inc    r8
   140029d16:	inc    rcx
   140029d19:	add    rdx,0x8
   140029d1d:	dec    r9
   140029d20:	jne    0x140029ce4
   140029d22:	mov    rax,QWORD PTR [rbp-0x1]
   140029d26:	movsxd r11,ebx
   140029d29:	test   r14b,r14b
   140029d2c:	je     0x140029d5f
   140029d2e:	cmp    ebx,r13d
   140029d31:	lea    rcx,[rax+0x4]
   140029d35:	lea    rdx,[r11+rax*1+0x4]
   140029d3a:	cmovl  r13d,ebx
   140029d3e:	test   r13d,r13d
   140029d41:	jle    0x140029d59
   140029d43:	mov    eax,r13d
   140029d46:	mov    BYTE PTR [rcx],dil
   140029d49:	or     QWORD PTR [rdx],0xffffffffffffffff
   140029d4d:	add    rdx,0x8
   140029d51:	inc    rcx
   140029d54:	dec    rax
   140029d57:	jne    0x140029d46
   140029d59:	mov    r15d,0x8
   140029d5f:	call   0x14001585c
   140029d64:	mov    rdx,QWORD PTR [rbp-0x51]
   140029d68:	mov    rcx,QWORD PTR [rbp+0x6f]
   140029d6c:	mov    DWORD PTR [rax],edi
   140029d6e:	lea    rax,[rbp-0x69]
   140029d72:	bts    r15d,0xa
   140029d77:	mov    QWORD PTR [rsp+0x48],rax
   140029d7c:	lea    rax,[rbp-0x49]
   140029d80:	xor    r9d,r9d
   140029d83:	mov    QWORD PTR [rsp+0x40],rax
   140029d88:	mov    rax,QWORD PTR [rbp+0x7f]
   140029d8c:	mov    QWORD PTR [rsp+0x38],rdi
   140029d91:	mov    QWORD PTR [rsp+0x30],rax
   140029d96:	xor    r8d,r8d
   140029d99:	mov    DWORD PTR [rsp+0x28],r15d
   140029d9e:	mov    DWORD PTR [rsp+0x20],0x1
   140029da6:	call   QWORD PTR [rip+0x531c]        # 0x14002f0c8
   140029dac:	mov    ebx,eax
   140029dae:	call   QWORD PTR [rip+0x52fc]        # 0x14002f0b0
   140029db4:	mov    rcx,QWORD PTR [rbp-0x1]
   140029db8:	mov    r13d,eax
   140029dbb:	call   0x1400130a8
   140029dc0:	test   ebx,ebx
   140029dc2:	jne    0x140029dce
   140029dc4:	mov    ecx,r13d
   140029dc7:	call   0x14001587c
   140029dcc:	jmp    0x140029e36
   140029dce:	cmp    r12d,0x2
   140029dd2:	jne    0x140029ddc
   140029dd4:	xor    ecx,ecx
   140029dd6:	call   0x140013c38
   140029ddb:	int3   
   140029ddc:	test   r12d,r12d
   140029ddf:	jne    0x140029e02
   140029de1:	mov    rcx,QWORD PTR [rbp-0x69]
   140029de5:	or     edx,0xffffffff
   140029de8:	call   QWORD PTR [rip+0x5252]        # 0x14002f040
   140029dee:	mov    rcx,QWORD PTR [rbp-0x69]
   140029df2:	lea    rdx,[rbp+0x67]
   140029df6:	call   QWORD PTR [rip+0x5334]        # 0x14002f130
   140029dfc:	movsxd rdi,DWORD PTR [rbp+0x67]
   140029e00:	jmp    0x140029e0c
   140029e02:	mov    eax,0x4
   140029e07:	cmp    r12d,eax
   140029e0a:	jne    0x140029e18
   140029e0c:	mov    rcx,QWORD PTR [rbp-0x69]
   140029e10:	call   QWORD PTR [rip+0x5222]        # 0x14002f038
   140029e16:	jmp    0x140029e1c
   140029e18:	mov    rdi,QWORD PTR [rbp-0x69]
   140029e1c:	mov    rcx,QWORD PTR [rbp-0x61]
   140029e20:	call   QWORD PTR [rip+0x5212]        # 0x14002f038
   140029e26:	mov    rax,rdi
   140029e29:	jmp    0x140029e3a
   140029e2b:	call   0x14001583c
   140029e30:	mov    DWORD PTR [rax],0xc
   140029e36:	or     rax,0xffffffffffffffff
   140029e3a:	add    rsp,0xe0
   140029e41:	pop    r15
   140029e43:	pop    r14
   140029e45:	pop    r13
   140029e47:	pop    r12
   140029e49:	pop    rdi
   140029e4a:	pop    rbx
   140029e4b:	pop    rbp
   140029e4c:	ret    
   140029e4d:	int3   
   140029e4e:	int3   
   140029e4f:	int3   
   140029e50:	rex push rbp
   140029e52:	push   rbx
   140029e53:	push   rsi
   140029e54:	push   rdi
   140029e55:	push   r12
   140029e57:	push   r13
   140029e59:	push   r14
   140029e5b:	push   r15
   140029e5d:	lea    rbp,[rsp-0x17]
   140029e62:	sub    rsp,0x88
   140029e69:	mov    rax,QWORD PTR [rip+0x15ac0]        # 0x14003f930
   140029e70:	xor    rax,rsp
   140029e73:	mov    QWORD PTR [rbp+0x7],rax
   140029e77:	mov    rax,QWORD PTR [rip+0x9442]        # 0x1400332c0
   140029e7e:	xor    r15d,r15d
   140029e81:	mov    r13,r9
   140029e84:	mov    QWORD PTR [rbp-0x11],rax
   140029e88:	mov    rax,QWORD PTR [rip+0x9439]        # 0x1400332c8
   140029e8f:	mov    QWORD PTR [rbp-0x29],r9
   140029e93:	mov    QWORD PTR [rbp-0x9],rax
   140029e97:	mov    eax,DWORD PTR [rip+0x9433]        # 0x1400332d0
   140029e9d:	mov    r14,r8
   140029ea0:	mov    DWORD PTR [rbp-0x1],eax
   140029ea3:	movzx  eax,WORD PTR [rip+0x942a]        # 0x1400332d4
   140029eaa:	mov    r12,rdx
   140029ead:	mov    WORD PTR [rbp+0x3],ax
   140029eb1:	mov    rax,QWORD PTR [rcx]
   140029eb4:	mov    QWORD PTR [rbp-0x19],rcx
   140029eb8:	mov    esi,r15d
   140029ebb:	mov    QWORD PTR [rbp-0x39],r15
   140029ebf:	mov    DWORD PTR [rbp-0x41],r15d
   140029ec3:	mov    rbx,rcx
   140029ec6:	lea    edi,[r15+0x2]
   140029eca:	jmp    0x140029edf
   140029ecc:	mov    rcx,rax
   140029ecf:	call   0x1400192e4
   140029ed4:	add    rbx,0x8
   140029ed8:	lea    edi,[rdi+rax*1+0x1]
   140029edc:	mov    rax,QWORD PTR [rbx]
   140029edf:	test   rax,rax
   140029ee2:	jne    0x140029ecc
   140029ee4:	mov    eax,edi
   140029ee6:	mov    edi,0x2
   140029eeb:	mov    edx,edi
   140029eed:	mov    ecx,eax
   140029eef:	mov    QWORD PTR [rbp-0x21],rax
   140029ef3:	call   0x140020ca8
   140029ef8:	mov    QWORD PTR [r14],rax
   140029efb:	test   rax,rax
   140029efe:	jne    0x140029f3d
   140029f00:	mov    QWORD PTR [r13+0x0],r15
   140029f04:	call   0x14001583c
   140029f09:	mov    DWORD PTR [rax],0xc
   140029f0f:	call   0x14001585c
   140029f14:	mov    DWORD PTR [rax],0x8
   140029f1a:	or     eax,0xffffffff
   140029f1d:	mov    rcx,QWORD PTR [rbp+0x7]
   140029f21:	xor    rcx,rsp
   140029f24:	call   0x140012670
   140029f29:	add    rsp,0x88
   140029f30:	pop    r15
   140029f32:	pop    r14
   140029f34:	pop    r13
   140029f36:	pop    r12
   140029f38:	pop    rdi
   140029f39:	pop    rsi
   140029f3a:	pop    rbx
   140029f3b:	pop    rbp
   140029f3c:	ret    
   140029f3d:	lea    r8,[rbp-0x11]
   140029f41:	lea    rcx,[rbp-0x39]
   140029f45:	xor    edx,edx
   140029f47:	call   0x1400134e0
   140029f4c:	test   eax,eax
   140029f4e:	je     0x140029f6e
   140029f50:	cmp    eax,0x16
   140029f53:	jne    0x140029fdc
   140029f59:	xor    r9d,r9d
   140029f5c:	xor    r8d,r8d
   140029f5f:	xor    edx,edx
   140029f61:	xor    ecx,ecx
   140029f63:	mov    QWORD PTR [rsp+0x20],r15
   140029f68:	call   0x140019ed0
   140029f6d:	int3   
   140029f6e:	lea    rcx,[rbp-0x11]
   140029f72:	call   0x1400192e4
   140029f77:	mov    rcx,QWORD PTR [rbp-0x39]
   140029f7b:	lea    ebx,[rdi+rax*1]
   140029f7e:	mov    QWORD PTR [rbp-0x31],rbx
   140029f82:	test   rcx,rcx
   140029f85:	je     0x140029f92
   140029f87:	call   0x1400192e4
   140029f8c:	add    ebx,eax
   140029f8e:	mov    QWORD PTR [rbp-0x31],rbx
   140029f92:	test   r12,r12
   140029f95:	je     0x14002a101
   140029f9b:	mov    rax,QWORD PTR [r12]
   140029f9f:	mov    rbx,r12
   140029fa2:	jmp    0x140029fb7
   140029fa4:	mov    rcx,rax
   140029fa7:	call   0x1400192e4
   140029fac:	add    rbx,0x8
   140029fb0:	lea    edi,[rdi+rax*1+0x1]
   140029fb4:	mov    rax,QWORD PTR [rbx]
   140029fb7:	test   rax,rax
   140029fba:	jne    0x140029fa4
   140029fbc:	mov    rdx,QWORD PTR [rip+0x2b415]        # 0x1400553d8
   140029fc3:	test   rdx,rdx
   140029fc6:	jne    0x140029ff3
   140029fc8:	call   0x14001c834
   140029fcd:	mov    rdx,rax
   140029fd0:	mov    QWORD PTR [rip+0x2b401],rax        # 0x1400553d8
   140029fd7:	test   rax,rax
   140029fda:	jne    0x140029ff3
   140029fdc:	mov    rcx,QWORD PTR [r14]
   140029fdf:	or     esi,0xffffffff
   140029fe2:	call   0x1400130a8
   140029fe7:	mov    QWORD PTR [r14],r15
   140029fea:	mov    QWORD PTR [r13+0x0],r15
   140029fee:	jmp    0x14002a304
   140029ff3:	mov    r13d,r15d
   140029ff6:	cmp    WORD PTR [rdx],r15w
   140029ffa:	je     0x14002a028
   140029ffc:	movzx  eax,WORD PTR [rdx]
   140029fff:	mov    rcx,rdx
   14002a002:	cmp    ax,0x3d
   14002a006:	je     0x14002a028
   14002a008:	call   0x1400192e4
   14002a00d:	mov    rdx,QWORD PTR [rip+0x2b3c4]        # 0x1400553d8
   14002a014:	lea    r13d,[r13+rax*1+0x1]
   14002a019:	movsxd rax,r13d
   14002a01c:	lea    rcx,[rdx+rax*2]
   14002a020:	movzx  eax,WORD PTR [rcx]
   14002a023:	test   ax,ax
   14002a026:	jne    0x14002a002
   14002a028:	movsxd rax,r13d
   14002a02b:	mov    r15d,r13d
   14002a02e:	cmp    WORD PTR [rdx+rax*2],0x3d
   14002a033:	jne    0x14002a074
   14002a035:	xor    ebx,ebx
   14002a037:	cmp    WORD PTR [rdx+rax*2+0x2],bx
   14002a03c:	je     0x14002a074
   14002a03e:	cmp    WORD PTR [rdx+rax*2+0x4],0x3a
   14002a044:	jne    0x14002a074
   14002a046:	cmp    WORD PTR [rdx+rax*2+0x6],0x3d
   14002a04c:	jne    0x14002a074
   14002a04e:	lea    eax,[r15+0x4]
   14002a052:	movsxd rcx,eax
   14002a055:	lea    rcx,[rdx+rcx*2]
   14002a059:	call   0x1400192e4
   14002a05e:	mov    rdx,QWORD PTR [rip+0x2b373]        # 0x1400553d8
   14002a065:	lea    r15d,[r15+rax*1+0x5]
   14002a06a:	movsxd rax,r15d
   14002a06d:	cmp    WORD PTR [rdx+rax*2],0x3d
   14002a072:	je     0x14002a037
   14002a074:	mov    eax,r15d
   14002a077:	xor    ecx,ecx
   14002a079:	mov    rbx,r12
   14002a07c:	sub    eax,r13d
   14002a07f:	add    edi,eax
   14002a081:	mov    DWORD PTR [rbp-0x3d],edi
   14002a084:	cmp    QWORD PTR [r12],rcx
   14002a088:	je     0x14002a0b1
   14002a08a:	lea    rcx,[rbp-0x11]
   14002a08e:	call   0x1400192e4
   14002a093:	mov    rcx,QWORD PTR [rbx]
   14002a096:	lea    rdx,[rbp-0x11]
   14002a09a:	mov    r8,rax
   14002a09d:	call   0x140014944
   14002a0a2:	xor    ecx,ecx
   14002a0a4:	test   eax,eax
   14002a0a6:	je     0x14002a0f8
   14002a0a8:	add    rbx,0x8
   14002a0ac:	cmp    QWORD PTR [rbx],rcx
   14002a0af:	jne    0x14002a08a
   14002a0b1:	add    edi,DWORD PTR [rbp-0x31]
   14002a0b4:	mov    ecx,edi
   14002a0b6:	mov    edx,0x2
   14002a0bb:	call   0x140020ca8
   14002a0c0:	mov    rcx,QWORD PTR [rbp-0x29]
   14002a0c4:	mov    QWORD PTR [rcx],rax
   14002a0c7:	test   rax,rax
   14002a0ca:	jne    0x14002a113
   14002a0cc:	mov    rcx,QWORD PTR [r14]
   14002a0cf:	call   0x1400130a8
   14002a0d4:	xor    r15d,r15d
   14002a0d7:	mov    QWORD PTR [r14],r15
   14002a0da:	call   0x14001583c
   14002a0df:	mov    DWORD PTR [rax],0xc
   14002a0e5:	call   0x14001585c
   14002a0ea:	or     esi,0xffffffff
   14002a0ed:	mov    DWORD PTR [rax],0x8
   14002a0f3:	jmp    0x14002a304
   14002a0f8:	mov    DWORD PTR [rbp-0x41],0x1
   14002a0ff:	jmp    0x14002a0b4
   14002a101:	mov    eax,DWORD PTR [rbp-0x41]
   14002a104:	mov    QWORD PTR [r13+0x0],r15
   14002a108:	mov    r13d,DWORD PTR [rbp-0x41]
   14002a10c:	mov    r15d,DWORD PTR [rbp-0x41]
   14002a110:	mov    DWORD PTR [rbp-0x3d],eax
   14002a113:	mov    rdi,QWORD PTR [rbp-0x19]
   14002a117:	mov    rbx,QWORD PTR [r14]
   14002a11a:	mov    r8,QWORD PTR [rdi]
   14002a11d:	test   r8,r8
   14002a120:	je     0x14002a19a
   14002a122:	mov    rdx,QWORD PTR [rbp-0x21]
   14002a126:	mov    rax,rbx
   14002a129:	mov    rcx,rbx
   14002a12c:	sub    rax,rbx
   14002a12f:	sar    rax,1
   14002a132:	sub    rdx,rax
   14002a135:	call   0x140016c68
   14002a13a:	xor    ecx,ecx
   14002a13c:	test   eax,eax
   14002a13e:	jne    0x14002a331
   14002a144:	mov    rcx,QWORD PTR [rdi]
   14002a147:	call   0x1400192e4
   14002a14c:	inc    eax
   14002a14e:	add    rdi,0x8
   14002a152:	cdqe   
   14002a154:	lea    rbx,[rbx+rax*2]
   14002a158:	jmp    0x14002a19e
   14002a15a:	mov    rdx,QWORD PTR [rbp-0x21]
   14002a15e:	mov    r8,rcx
   14002a161:	mov    rax,rbx
   14002a164:	sub    rax,QWORD PTR [r14]
   14002a167:	mov    rcx,rbx
   14002a16a:	sar    rax,1
   14002a16d:	sub    rdx,rax
   14002a170:	call   0x140016c68
   14002a175:	xor    ecx,ecx
   14002a177:	test   eax,eax
   14002a179:	jne    0x14002a293
   14002a17f:	mov    rcx,QWORD PTR [rdi]
   14002a182:	call   0x1400192e4
   14002a187:	add    rdi,0x8
   14002a18b:	movsxd rcx,eax
   14002a18e:	mov    eax,0x20
   14002a193:	lea    rbx,[rbx+rcx*2]
   14002a197:	mov    WORD PTR [rbx],ax
   14002a19a:	add    rbx,0x2
   14002a19e:	mov    rcx,QWORD PTR [rdi]
   14002a1a1:	test   rcx,rcx
   14002a1a4:	jne    0x14002a15a
   14002a1a6:	mov    r14,QWORD PTR [rbp-0x29]
   14002a1aa:	mov    DWORD PTR [rbx-0x2],esi
   14002a1ad:	mov    rdi,QWORD PTR [r14]
   14002a1b0:	test   r12,r12
   14002a1b3:	je     0x14002a2eb
   14002a1b9:	mov    rax,QWORD PTR [rip+0x2b218]        # 0x1400553d8
   14002a1c0:	movsxd rcx,r13d
   14002a1c3:	sub    r15d,r13d
   14002a1c6:	lea    rdx,[rax+rcx*2]
   14002a1ca:	movsxd rbx,r15d
   14002a1cd:	mov    rcx,rdi
   14002a1d0:	add    rbx,rbx
   14002a1d3:	mov    r8,rbx
   14002a1d6:	call   0x140018e00
   14002a1db:	xor    r15d,r15d
   14002a1de:	add    rdi,rbx
   14002a1e1:	cmp    QWORD PTR [r12],r15
   14002a1e5:	je     0x14002a228
   14002a1e7:	mov    ebx,DWORD PTR [rbp-0x3d]
   14002a1ea:	mov    r8,QWORD PTR [r12]
   14002a1ee:	mov    rax,rdi
   14002a1f1:	mov    rdx,rbx
   14002a1f4:	sub    rax,QWORD PTR [r14]
   14002a1f7:	mov    rcx,rdi
   14002a1fa:	sar    rax,1
   14002a1fd:	sub    rdx,rax
   14002a200:	call   0x140016c68
   14002a205:	test   eax,eax
   14002a207:	jne    0x14002a2a6
   14002a20d:	mov    rcx,QWORD PTR [r12]
   14002a211:	call   0x1400192e4
   14002a216:	add    r12,0x8
   14002a21a:	inc    eax
   14002a21c:	cdqe   
   14002a21e:	lea    rdi,[rdi+rax*2]
   14002a222:	cmp    QWORD PTR [r12],r15
   14002a226:	jne    0x14002a1ea
   14002a228:	cmp    DWORD PTR [rbp-0x41],r15d
   14002a22c:	jne    0x14002a2ee
   14002a232:	movsxd rbx,DWORD PTR [rbp-0x31]
   14002a236:	lea    r8,[rbp-0x11]
   14002a23a:	mov    rcx,rdi
   14002a23d:	mov    rdx,rbx
   14002a240:	call   0x140016c68
   14002a245:	test   eax,eax
   14002a247:	jne    0x14002a2d6
   14002a24d:	lea    r8,[rip+0x9068]        # 0x1400332bc
   14002a254:	mov    rdx,rbx
   14002a257:	mov    rcx,rdi
   14002a25a:	call   0x140017684
   14002a25f:	test   eax,eax
   14002a261:	jne    0x14002a2c1
   14002a263:	mov    rcx,QWORD PTR [rbp-0x39]
   14002a267:	test   rcx,rcx
   14002a26a:	je     0x14002a2bb
   14002a26c:	mov    r8,rcx
   14002a26f:	mov    rdx,rbx
   14002a272:	mov    rcx,rdi
   14002a275:	call   0x140017684
   14002a27a:	test   eax,eax
   14002a27c:	je     0x14002a2bb
   14002a27e:	xor    r9d,r9d
   14002a281:	xor    r8d,r8d
   14002a284:	xor    edx,edx
   14002a286:	xor    ecx,ecx
   14002a288:	mov    QWORD PTR [rsp+0x20],r15
   14002a28d:	call   0x140019ed0
   14002a292:	int3   
   14002a293:	xor    r9d,r9d
   14002a296:	xor    r8d,r8d
   14002a299:	xor    edx,edx
   14002a29b:	mov    QWORD PTR [rsp+0x20],rcx
   14002a2a0:	call   0x140019ed0
   14002a2a5:	int3   
   14002a2a6:	xor    r9d,r9d
   14002a2a9:	xor    r8d,r8d
   14002a2ac:	xor    edx,edx
   14002a2ae:	xor    ecx,ecx
   14002a2b0:	mov    QWORD PTR [rsp+0x20],r15
   14002a2b5:	call   0x140019ed0
   14002a2ba:	int3   
   14002a2bb:	lea    rdi,[rdi+rbx*2]
   14002a2bf:	jmp    0x14002a2ee
   14002a2c1:	xor    r9d,r9d
   14002a2c4:	xor    r8d,r8d
   14002a2c7:	xor    edx,edx
   14002a2c9:	xor    ecx,ecx
   14002a2cb:	mov    QWORD PTR [rsp+0x20],r15
   14002a2d0:	call   0x140019ed0
   14002a2d5:	int3   
   14002a2d6:	xor    r9d,r9d
   14002a2d9:	xor    r8d,r8d
   14002a2dc:	xor    edx,edx
   14002a2de:	xor    ecx,ecx
   14002a2e0:	mov    QWORD PTR [rsp+0x20],r15
   14002a2e5:	call   0x140019ed0
   14002a2ea:	int3   
   14002a2eb:	xor    r15d,r15d
   14002a2ee:	test   rdi,rdi
   14002a2f1:	je     0x14002a304
   14002a2f3:	cmp    rdi,QWORD PTR [r14]
   14002a2f6:	jne    0x14002a300
   14002a2f8:	mov    WORD PTR [rdi],r15w
   14002a2fc:	add    rdi,0x2
   14002a300:	mov    WORD PTR [rdi],r15w
   14002a304:	mov    rcx,QWORD PTR [rip+0x2b0cd]        # 0x1400553d8
   14002a30b:	test   rcx,rcx
   14002a30e:	je     0x14002a315
   14002a310:	call   0x1400130a8
   14002a315:	mov    rcx,QWORD PTR [rbp-0x39]
   14002a319:	mov    QWORD PTR [rip+0x2b0b8],r15        # 0x1400553d8
   14002a320:	test   rcx,rcx
   14002a323:	je     0x14002a32a
   14002a325:	call   0x1400130a8
   14002a32a:	mov    eax,esi
   14002a32c:	jmp    0x140029f1d
   14002a331:	xor    r9d,r9d
   14002a334:	xor    r8d,r8d
   14002a337:	xor    edx,edx
   14002a339:	mov    QWORD PTR [rsp+0x20],rcx
   14002a33e:	call   0x140019ed0
   14002a343:	int3   
   14002a344:	int3   
   14002a345:	int3   
   14002a346:	int3   
   14002a347:	int3   
   14002a348:	int3   
   14002a349:	int3   
   14002a34a:	int3   
   14002a34b:	int3   
   14002a34c:	int3   
   14002a34d:	int3   
   14002a34e:	int3   
   14002a34f:	int3   
   14002a350:	int3   
   14002a351:	int3   
   14002a352:	int3   
   14002a353:	int3   
   14002a354:	int3   
   14002a355:	int3   
   14002a356:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002a360:	sub    rsp,0x28
   14002a364:	mov    QWORD PTR [rsp+0x30],rcx
   14002a369:	mov    QWORD PTR [rsp+0x38],rdx
   14002a36e:	mov    DWORD PTR [rsp+0x40],r8d
   14002a373:	mov    rdx,QWORD PTR [rdx]
   14002a376:	mov    rax,rcx
   14002a379:	call   0x140022130
   14002a37e:	call   rax
   14002a380:	call   0x140022160
   14002a385:	mov    rcx,rax
   14002a388:	mov    rdx,QWORD PTR [rsp+0x38]
   14002a38d:	mov    rdx,QWORD PTR [rdx]
   14002a390:	mov    r8d,0x2
   14002a396:	call   0x140022130
   14002a39b:	add    rsp,0x28
   14002a39f:	ret    
   14002a3a0:	mov    rax,QWORD PTR [rsp]
   14002a3a4:	mov    QWORD PTR [rcx],rax
   14002a3a7:	ret    
   14002a3a8:	neg    rcx
   14002a3ab:	sbb    eax,eax
   14002a3ad:	and    eax,0x1
   14002a3b0:	ret    
   14002a3b1:	int3   
   14002a3b2:	int3   
   14002a3b3:	int3   
   14002a3b4:	rex push rbx
   14002a3b6:	sub    rsp,0x30
   14002a3ba:	mov    rax,QWORD PTR [rip+0x1556f]        # 0x14003f930
   14002a3c1:	xor    rax,rsp
   14002a3c4:	mov    QWORD PTR [rsp+0x28],rax
   14002a3c9:	test   ecx,ecx
   14002a3cb:	jne    0x14002a3d4
   14002a3cd:	mov    eax,0x1
   14002a3d2:	jmp    0x14002a405
   14002a3d4:	add    cx,0x40
   14002a3d8:	mov    eax,0x3a
   14002a3dd:	mov    DWORD PTR [rsp+0x24],0x5c
   14002a3e5:	mov    WORD PTR [rsp+0x20],cx
   14002a3ea:	lea    rcx,[rsp+0x20]
   14002a3ef:	mov    WORD PTR [rsp+0x22],ax
   14002a3f4:	call   QWORD PTR [rip+0x4e26]        # 0x14002f220
   14002a3fa:	test   eax,eax
   14002a3fc:	je     0x14002a403
   14002a3fe:	cmp    eax,0x1
   14002a401:	jne    0x14002a3cd
   14002a403:	xor    eax,eax
   14002a405:	mov    rcx,QWORD PTR [rsp+0x28]
   14002a40a:	xor    rcx,rsp
   14002a40d:	call   0x140012670
   14002a412:	add    rsp,0x30
   14002a416:	pop    rbx
   14002a417:	ret    
   14002a418:	mov    r10,rcx
   14002a41b:	test   r8,r8
   14002a41e:	je     0x14002a45b
   14002a420:	movzx  r9d,BYTE PTR [r10]
   14002a424:	inc    r10
   14002a427:	lea    eax,[r9-0x41]
   14002a42b:	cmp    eax,0x19
   14002a42e:	ja     0x14002a434
   14002a430:	add    r9d,0x20
   14002a434:	movzx  ecx,BYTE PTR [rdx]
   14002a437:	inc    rdx
   14002a43a:	lea    eax,[rcx-0x41]
   14002a43d:	cmp    eax,0x19
   14002a440:	ja     0x14002a445
   14002a442:	add    ecx,0x20
   14002a445:	dec    r8
   14002a448:	je     0x14002a454
   14002a44a:	test   r9d,r9d
   14002a44d:	je     0x14002a454
   14002a44f:	cmp    r9d,ecx
   14002a452:	je     0x14002a420
   14002a454:	sub    r9d,ecx
   14002a457:	mov    eax,r9d
   14002a45a:	ret    
   14002a45b:	xor    eax,eax
   14002a45d:	ret    
   14002a45e:	int3   
   14002a45f:	int3   
   14002a460:	mov    rax,rsp
   14002a463:	mov    QWORD PTR [rax+0x8],rbx
   14002a467:	mov    QWORD PTR [rax+0x10],rsi
   14002a46b:	mov    QWORD PTR [rax+0x18],rdi
   14002a46f:	mov    QWORD PTR [rax+0x20],r12
   14002a473:	push   rbp
   14002a474:	mov    rbp,rsp
   14002a477:	sub    rsp,0x40
   14002a47b:	mov    r12,r8
   14002a47e:	mov    rsi,rdx
   14002a481:	mov    rdi,rcx
   14002a484:	test   r8,r8
   14002a487:	je     0x14002a547
   14002a48d:	lea    rcx,[rbp-0x20]
   14002a491:	mov    rdx,r9
   14002a494:	call   0x140012690
   14002a499:	test   rdi,rdi
   14002a49c:	jne    0x14002a4c9
   14002a49e:	call   0x14001583c
   14002a4a3:	mov    DWORD PTR [rax],0x16
   14002a4a9:	call   0x140019f74
   14002a4ae:	cmp    BYTE PTR [rbp-0x8],0x0
   14002a4b2:	je     0x14002a4bf
   14002a4b4:	mov    rax,QWORD PTR [rbp-0x10]
   14002a4b8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002a4bf:	mov    eax,0x7fffffff
   14002a4c4:	jmp    0x14002a549
   14002a4c9:	test   rsi,rsi
   14002a4cc:	je     0x14002a49e
   14002a4ce:	cmp    r12,0x7fffffff
   14002a4d5:	ja     0x14002a49e
   14002a4d7:	mov    rax,QWORD PTR [rbp-0x20]
   14002a4db:	cmp    DWORD PTR [rax+0x14],0x0
   14002a4df:	jne    0x14002a502
   14002a4e1:	mov    r8,r12
   14002a4e4:	mov    rdx,rsi
   14002a4e7:	mov    rcx,rdi
   14002a4ea:	call   0x14002a418
   14002a4ef:	cmp    BYTE PTR [rbp-0x8],0x0
   14002a4f3:	je     0x14002a549
   14002a4f5:	mov    rcx,QWORD PTR [rbp-0x10]
   14002a4f9:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a500:	jmp    0x14002a549
   14002a502:	sub    rdi,rsi
   14002a505:	movzx  ecx,BYTE PTR [rdi+rsi*1]
   14002a509:	lea    rdx,[rbp-0x20]
   14002a50d:	call   0x14002a770
   14002a512:	movzx  ecx,BYTE PTR [rsi]
   14002a515:	lea    rdx,[rbp-0x20]
   14002a519:	mov    ebx,eax
   14002a51b:	call   0x14002a770
   14002a520:	inc    rsi
   14002a523:	dec    r12
   14002a526:	je     0x14002a530
   14002a528:	test   ebx,ebx
   14002a52a:	je     0x14002a530
   14002a52c:	cmp    ebx,eax
   14002a52e:	je     0x14002a505
   14002a530:	sub    ebx,eax
   14002a532:	cmp    BYTE PTR [rbp-0x8],0x0
   14002a536:	je     0x14002a543
   14002a538:	mov    rcx,QWORD PTR [rbp-0x10]
   14002a53c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a543:	mov    eax,ebx
   14002a545:	jmp    0x14002a549
   14002a547:	xor    eax,eax
   14002a549:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a54e:	mov    rsi,QWORD PTR [rsp+0x58]
   14002a553:	mov    rdi,QWORD PTR [rsp+0x60]
   14002a558:	mov    r12,QWORD PTR [rsp+0x68]
   14002a55d:	add    rsp,0x40
   14002a561:	pop    rbp
   14002a562:	ret    
   14002a563:	int3   
   14002a564:	mov    QWORD PTR [rsp+0x8],rbx
   14002a569:	mov    QWORD PTR [rsp+0x18],rbp
   14002a56e:	push   rsi
   14002a56f:	push   rdi
   14002a570:	push   r12
   14002a572:	sub    rsp,0x20
   14002a576:	mov    r12d,ecx
   14002a579:	mov    rcx,rdx
   14002a57c:	mov    rbx,rdx
   14002a57f:	call   0x1400211a0
   14002a584:	mov    edx,DWORD PTR [rbx+0x18]
   14002a587:	movsxd rsi,eax
   14002a58a:	test   dl,0x82
   14002a58d:	jne    0x14002a5a8
   14002a58f:	call   0x14001583c
   14002a594:	mov    DWORD PTR [rax],0x9
   14002a59a:	or     DWORD PTR [rbx+0x18],0x20
   14002a59e:	mov    eax,0xffff
   14002a5a3:	jmp    0x14002a6e0
   14002a5a8:	test   dl,0x40
   14002a5ab:	je     0x14002a5ba
   14002a5ad:	call   0x14001583c
   14002a5b2:	mov    DWORD PTR [rax],0x22
   14002a5b8:	jmp    0x14002a59a
   14002a5ba:	xor    edi,edi
   14002a5bc:	test   dl,0x1
   14002a5bf:	je     0x14002a5da
   14002a5c1:	mov    DWORD PTR [rbx+0x8],edi
   14002a5c4:	test   dl,0x10
   14002a5c7:	je     0x14002a657
   14002a5cd:	mov    rax,QWORD PTR [rbx+0x10]
   14002a5d1:	and    edx,0xfffffffe
   14002a5d4:	mov    QWORD PTR [rbx],rax
   14002a5d7:	mov    DWORD PTR [rbx+0x18],edx
   14002a5da:	mov    eax,DWORD PTR [rbx+0x18]
   14002a5dd:	mov    DWORD PTR [rbx+0x8],edi
   14002a5e0:	and    eax,0xffffffef
   14002a5e3:	or     eax,0x2
   14002a5e6:	mov    DWORD PTR [rbx+0x18],eax
   14002a5e9:	test   eax,0x10c
   14002a5ee:	jne    0x14002a61f
   14002a5f0:	call   0x140014c3c
   14002a5f5:	add    rax,0x30
   14002a5f9:	cmp    rbx,rax
   14002a5fc:	je     0x14002a60c
   14002a5fe:	call   0x140014c3c
   14002a603:	add    rax,0x60
   14002a607:	cmp    rbx,rax
   14002a60a:	jne    0x14002a617
   14002a60c:	mov    ecx,esi
   14002a60e:	call   0x1400279e8
   14002a613:	test   eax,eax
   14002a615:	jne    0x14002a61f
   14002a617:	mov    rcx,rbx
   14002a61a:	call   0x140028e38
   14002a61f:	test   DWORD PTR [rbx+0x18],0x108
   14002a626:	je     0x14002a6b8
   14002a62c:	mov    ebp,DWORD PTR [rbx]
   14002a62e:	mov    rdx,QWORD PTR [rbx+0x10]
   14002a632:	sub    ebp,DWORD PTR [rbx+0x10]
   14002a635:	lea    rax,[rdx+0x2]
   14002a639:	mov    QWORD PTR [rbx],rax
   14002a63c:	mov    eax,DWORD PTR [rbx+0x24]
   14002a63f:	sub    eax,0x2
   14002a642:	mov    DWORD PTR [rbx+0x8],eax
   14002a645:	test   ebp,ebp
   14002a647:	jle    0x14002a662
   14002a649:	mov    r8d,ebp
   14002a64c:	mov    ecx,esi
   14002a64e:	call   0x140021bcc
   14002a653:	mov    edi,eax
   14002a655:	jmp    0x14002a6ae
   14002a657:	or     edx,0x20
   14002a65a:	mov    DWORD PTR [rbx+0x18],edx
   14002a65d:	jmp    0x14002a59e
   14002a662:	cmp    esi,0xffffffff
   14002a665:	je     0x14002a68a
   14002a667:	cmp    esi,0xfffffffe
   14002a66a:	je     0x14002a68a
   14002a66c:	mov    rcx,rsi
   14002a66f:	mov    rax,rsi
   14002a672:	lea    rdx,[rip+0x2bfa7]        # 0x140056620
   14002a679:	and    ecx,0x1f
   14002a67c:	sar    rax,0x5
   14002a680:	imul   rcx,rcx,0x58
   14002a684:	add    rcx,QWORD PTR [rdx+rax*8]
   14002a688:	jmp    0x14002a691
   14002a68a:	lea    rcx,[rip+0x165cf]        # 0x140040c60
   14002a691:	test   BYTE PTR [rcx+0x8],0x20
   14002a695:	je     0x14002a6ae
   14002a697:	xor    edx,edx
   14002a699:	mov    ecx,esi
   14002a69b:	lea    r8d,[rdx+0x2]
   14002a69f:	call   0x140022ef8
   14002a6a4:	cmp    rax,0xffffffffffffffff
   14002a6a8:	je     0x14002a59a
   14002a6ae:	mov    rax,QWORD PTR [rbx+0x10]
   14002a6b2:	mov    WORD PTR [rax],r12w
   14002a6b6:	jmp    0x14002a6d4
   14002a6b8:	mov    ebp,0x2
   14002a6bd:	lea    rdx,[rsp+0x48]
   14002a6c2:	mov    ecx,esi
   14002a6c4:	mov    r8d,ebp
   14002a6c7:	mov    WORD PTR [rsp+0x48],r12w
   14002a6cd:	call   0x140021bcc
   14002a6d2:	mov    edi,eax
   14002a6d4:	cmp    edi,ebp
   14002a6d6:	jne    0x14002a59a
   14002a6dc:	movzx  eax,r12w
   14002a6e0:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a6e5:	mov    rbp,QWORD PTR [rsp+0x50]
   14002a6ea:	add    rsp,0x20
   14002a6ee:	pop    r12
   14002a6f0:	pop    rdi
   14002a6f1:	pop    rsi
   14002a6f2:	ret    
   14002a6f3:	int3   
   14002a6f4:	jmp    0x14002a6fd
   14002a6f6:	cmp    al,dl
   14002a6f8:	je     0x14002a707
   14002a6fa:	inc    rcx
   14002a6fd:	mov    al,BYTE PTR [rcx]
   14002a6ff:	test   al,al
   14002a701:	jne    0x14002a6f6
   14002a703:	cmp    al,dl
   14002a705:	jne    0x14002a70b
   14002a707:	mov    rax,rcx
   14002a70a:	ret    
   14002a70b:	xor    eax,eax
   14002a70d:	ret    
   14002a70e:	int3   
   14002a70f:	int3   
   14002a710:	sub    rsp,0x48
   14002a714:	and    QWORD PTR [rsp+0x30],0x0
   14002a71a:	and    DWORD PTR [rsp+0x28],0x0
   14002a71f:	mov    r8d,0x3
   14002a725:	lea    rcx,[rip+0x94dc]        # 0x140033c08
   14002a72c:	xor    r9d,r9d
   14002a72f:	mov    edx,0x40000000
   14002a734:	mov    DWORD PTR [rsp+0x20],r8d
   14002a739:	call   QWORD PTR [rip+0x4979]        # 0x14002f0b8
   14002a73f:	mov    QWORD PTR [rip+0x168fa],rax        # 0x140041040
   14002a746:	add    rsp,0x48
   14002a74a:	ret    
   14002a74b:	int3   
   14002a74c:	sub    rsp,0x28
   14002a750:	mov    rcx,QWORD PTR [rip+0x168e9]        # 0x140041040
   14002a757:	cmp    rcx,0xffffffffffffffff
   14002a75b:	je     0x14002a769
   14002a75d:	cmp    rcx,0xfffffffffffffffe
   14002a761:	je     0x14002a769
   14002a763:	call   QWORD PTR [rip+0x48cf]        # 0x14002f038
   14002a769:	add    rsp,0x28
   14002a76d:	ret    
   14002a76e:	int3   
   14002a76f:	int3   
   14002a770:	mov    QWORD PTR [rsp+0x10],rdi
   14002a775:	mov    QWORD PTR [rsp+0x20],r12
   14002a77a:	push   rbp
   14002a77b:	mov    rbp,rsp
   14002a77e:	sub    rsp,0x70
   14002a782:	movsxd rdi,ecx
   14002a785:	lea    rcx,[rbp-0x20]
   14002a789:	call   0x140012690
   14002a78e:	cmp    edi,0x100
   14002a794:	jae    0x14002a7f3
   14002a796:	mov    rdx,QWORD PTR [rbp-0x20]
   14002a79a:	cmp    DWORD PTR [rdx+0x10c],0x1
   14002a7a1:	jle    0x14002a7b9
   14002a7a3:	lea    r8,[rbp-0x20]
   14002a7a7:	mov    edx,0x1
   14002a7ac:	mov    ecx,edi
   14002a7ae:	call   0x140022164
   14002a7b3:	mov    rdx,QWORD PTR [rbp-0x20]
   14002a7b7:	jmp    0x14002a7c7
   14002a7b9:	mov    rax,QWORD PTR [rdx+0x140]
   14002a7c0:	movzx  eax,WORD PTR [rax+rdi*2]
   14002a7c4:	and    eax,0x1
   14002a7c7:	test   eax,eax
   14002a7c9:	je     0x14002a7db
   14002a7cb:	mov    rax,QWORD PTR [rdx+0x148]
   14002a7d2:	movzx  eax,BYTE PTR [rax+rdi*1]
   14002a7d6:	jmp    0x14002a89b
   14002a7db:	cmp    BYTE PTR [rbp-0x8],0x0
   14002a7df:	je     0x14002a7ec
   14002a7e1:	mov    rax,QWORD PTR [rbp-0x10]
   14002a7e5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002a7ec:	mov    eax,edi
   14002a7ee:	jmp    0x14002a8ac
   14002a7f3:	mov    rax,QWORD PTR [rbp-0x20]
   14002a7f7:	cmp    DWORD PTR [rax+0x10c],0x1
   14002a7fe:	jle    0x14002a82b
   14002a800:	mov    r12d,edi
   14002a803:	lea    rdx,[rbp-0x20]
   14002a807:	sar    r12d,0x8
   14002a80b:	movzx  ecx,r12b
   14002a80f:	call   0x140020e3c
   14002a814:	test   eax,eax
   14002a816:	je     0x14002a82b
   14002a818:	mov    BYTE PTR [rbp+0x10],r12b
   14002a81c:	mov    BYTE PTR [rbp+0x11],dil
   14002a820:	mov    BYTE PTR [rbp+0x12],0x0
   14002a824:	mov    edx,0x2
   14002a829:	jmp    0x14002a843
   14002a82b:	call   0x14001583c
   14002a830:	mov    edx,0x1
   14002a835:	mov    DWORD PTR [rax],0x2a
   14002a83b:	mov    BYTE PTR [rbp+0x10],dil
   14002a83f:	mov    BYTE PTR [rbp+0x11],0x0
   14002a843:	mov    rcx,QWORD PTR [rbp-0x20]
   14002a847:	mov    DWORD PTR [rsp+0x40],0x1
   14002a84f:	lea    r9,[rbp+0x10]
   14002a853:	mov    eax,DWORD PTR [rcx+0x4]
   14002a856:	mov    r8d,0x100
   14002a85c:	mov    DWORD PTR [rsp+0x38],eax
   14002a860:	lea    rax,[rbp+0x20]
   14002a864:	mov    DWORD PTR [rsp+0x30],0x3
   14002a86c:	mov    QWORD PTR [rsp+0x28],rax
   14002a871:	mov    DWORD PTR [rsp+0x20],edx
   14002a875:	mov    edx,DWORD PTR [rcx+0x14]
   14002a878:	lea    rcx,[rbp-0x20]
   14002a87c:	call   0x140026e20
   14002a881:	test   eax,eax
   14002a883:	je     0x14002a7db
   14002a889:	cmp    eax,0x1
   14002a88c:	movzx  eax,BYTE PTR [rbp+0x20]
   14002a890:	je     0x14002a89b
   14002a892:	movzx  ecx,BYTE PTR [rbp+0x21]
   14002a896:	shl    eax,0x8
   14002a899:	or     eax,ecx
   14002a89b:	cmp    BYTE PTR [rbp-0x8],0x0
   14002a89f:	je     0x14002a8ac
   14002a8a1:	mov    rcx,QWORD PTR [rbp-0x10]
   14002a8a5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002a8ac:	lea    r11,[rsp+0x70]
   14002a8b1:	mov    rdi,QWORD PTR [r11+0x18]
   14002a8b5:	mov    r12,QWORD PTR [r11+0x28]
   14002a8b9:	mov    rsp,r11
   14002a8bc:	pop    rbp
   14002a8bd:	ret    
   14002a8be:	int3   
   14002a8bf:	int3   
   14002a8c0:	cmp    DWORD PTR [rip+0x2ba4d],0x0        # 0x140056314
   14002a8c7:	jne    0x14002a8d7
   14002a8c9:	lea    eax,[rcx-0x41]
   14002a8cc:	cmp    eax,0x19
   14002a8cf:	ja     0x14002a8d4
   14002a8d1:	add    ecx,0x20
   14002a8d4:	mov    eax,ecx
   14002a8d6:	ret    
   14002a8d7:	xor    edx,edx
   14002a8d9:	jmp    0x14002a770
   14002a8de:	lea    rax,[rip+0x16b03]        # 0x1400413e8
   14002a8e5:	jmp    0x14002a8ea
   14002a8ea:	mov    QWORD PTR [rsp+0x8],rcx
   14002a8ef:	mov    QWORD PTR [rsp+0x10],rdx
   14002a8f4:	mov    QWORD PTR [rsp+0x18],r8
   14002a8f9:	mov    QWORD PTR [rsp+0x20],r9
   14002a8fe:	sub    rsp,0x68
   14002a902:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14002a908:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   14002a90e:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14002a914:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   14002a91a:	mov    rdx,rax
   14002a91d:	lea    rcx,[rip+0xc0ac]        # 0x1400369d0
   14002a924:	call   0x140011de0
   14002a929:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   14002a92f:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14002a935:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   14002a93b:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   14002a941:	mov    rcx,QWORD PTR [rsp+0x70]
   14002a946:	mov    rdx,QWORD PTR [rsp+0x78]
   14002a94b:	mov    r8,QWORD PTR [rsp+0x80]
   14002a953:	mov    r9,QWORD PTR [rsp+0x88]
   14002a95b:	add    rsp,0x68
   14002a95f:	jmp    0x14002a961
   14002a961:	jmp    rax
   14002a963:	int3   
   14002a964:	int3   
   14002a965:	int3   
   14002a966:	int3   
   14002a967:	int3   
   14002a968:	int3   
   14002a969:	int3   
   14002a96a:	int3   
   14002a96b:	int3   
   14002a96c:	int3   
   14002a96d:	int3   
   14002a96e:	int3   
   14002a96f:	int3   
   14002a970:	xor    edx,edx
   14002a972:	rex.W jmp QWORD PTR [rip+0x166cf]        # 0x140041048
   14002a979:	int3   
   14002a97a:	int3   
   14002a97b:	int3   
   14002a97c:	int3   
   14002a97d:	int3   
   14002a97e:	int3   
   14002a97f:	int3   
   14002a980:	rex push rbx
   14002a982:	sub    rsp,0x20
   14002a986:	lea    rax,[rip+0x92a3]        # 0x140033c30
   14002a98d:	mov    rbx,rcx
   14002a990:	mov    QWORD PTR [rcx],rax
   14002a993:	mov    rcx,QWORD PTR [rcx+0x10]
   14002a997:	test   rcx,rcx
   14002a99a:	je     0x14002a9a2
   14002a99c:	mov    rax,QWORD PTR [rcx]
   14002a99f:	call   QWORD PTR [rax+0x10]
   14002a9a2:	mov    rcx,QWORD PTR [rbx+0x18]
   14002a9a6:	test   rcx,rcx
   14002a9a9:	je     0x14002a9b1
   14002a9ab:	call   QWORD PTR [rip+0x4847]        # 0x14002f1f8
   14002a9b1:	add    rsp,0x20
   14002a9b5:	pop    rbx
   14002a9b6:	ret    
   14002a9b7:	int3   
   14002a9b8:	int3   
   14002a9b9:	int3   
   14002a9ba:	int3   
   14002a9bb:	int3   
   14002a9bc:	int3   
   14002a9bd:	int3   
   14002a9be:	int3   
   14002a9bf:	int3   
   14002a9c0:	sub    rsp,0x48
   14002a9c4:	lea    rax,[rip+0x9265]        # 0x140033c30
   14002a9cb:	mov    DWORD PTR [rsp+0x28],ecx
   14002a9cf:	mov    QWORD PTR [rsp+0x30],rdx
   14002a9d4:	lea    rdx,[rip+0xbf3d]        # 0x140036918
   14002a9db:	lea    rcx,[rsp+0x20]
   14002a9e0:	mov    QWORD PTR [rsp+0x38],0x0
   14002a9e9:	mov    QWORD PTR [rsp+0x20],rax
   14002a9ee:	call   0x1400241a0
   14002a9f3:	int3   
   14002a9f4:	int3   
   14002a9f5:	int3   
   14002a9f6:	int3   
   14002a9f7:	int3   
   14002a9f8:	int3   
   14002a9f9:	int3   
   14002a9fa:	int3   
   14002a9fb:	int3   
   14002a9fc:	int3   
   14002a9fd:	int3   
   14002a9fe:	int3   
   14002a9ff:	int3   
   14002aa00:	rex push rbx
   14002aa02:	sub    rsp,0x20
   14002aa06:	lea    rax,[rip+0x9223]        # 0x140033c30
   14002aa0d:	mov    rbx,rcx
   14002aa10:	mov    QWORD PTR [rcx],rax
   14002aa13:	mov    eax,DWORD PTR [rdx+0x8]
   14002aa16:	mov    DWORD PTR [rcx+0x8],eax
   14002aa19:	mov    rax,QWORD PTR [rdx+0x10]
   14002aa1d:	mov    QWORD PTR [rcx+0x18],0x0
   14002aa25:	mov    QWORD PTR [rcx+0x10],rax
   14002aa29:	mov    rcx,rax
   14002aa2c:	test   rax,rax
   14002aa2f:	je     0x14002aa37
   14002aa31:	mov    rax,QWORD PTR [rax]
   14002aa34:	call   QWORD PTR [rax+0x8]
   14002aa37:	mov    rax,rbx
   14002aa3a:	add    rsp,0x20
   14002aa3e:	pop    rbx
   14002aa3f:	ret    
   14002aa40:	mov    QWORD PTR [rsp+0x8],rbx
   14002aa45:	push   rdi
   14002aa46:	sub    rsp,0x20
   14002aa4a:	lea    rax,[rip+0x91df]        # 0x140033c30
   14002aa51:	mov    rbx,rcx
   14002aa54:	mov    edi,edx
   14002aa56:	mov    QWORD PTR [rcx],rax
   14002aa59:	mov    rcx,QWORD PTR [rcx+0x10]
   14002aa5d:	test   rcx,rcx
   14002aa60:	je     0x14002aa68
   14002aa62:	mov    rax,QWORD PTR [rcx]
   14002aa65:	call   QWORD PTR [rax+0x10]
   14002aa68:	mov    rcx,QWORD PTR [rbx+0x18]
   14002aa6c:	test   rcx,rcx
   14002aa6f:	je     0x14002aa77
   14002aa71:	call   QWORD PTR [rip+0x4781]        # 0x14002f1f8
   14002aa77:	test   dil,0x1
   14002aa7b:	je     0x14002aa85
   14002aa7d:	mov    rcx,rbx
   14002aa80:	call   0x140016ae8
   14002aa85:	mov    rax,rbx
   14002aa88:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aa8d:	add    rsp,0x20
   14002aa91:	pop    rdi
   14002aa92:	ret    
   14002aa93:	int3   
   14002aa94:	int3   
   14002aa95:	int3   
   14002aa96:	int3   
   14002aa97:	int3   
   14002aa98:	int3   
   14002aa99:	int3   
   14002aa9a:	int3   
   14002aa9b:	int3   
   14002aa9c:	int3   
   14002aa9d:	int3   
   14002aa9e:	int3   
   14002aa9f:	int3   
   14002aaa0:	mov    QWORD PTR [rsp+0x8],rcx
   14002aaa5:	push   rbp
   14002aaa6:	push   rdi
   14002aaa7:	push   r12
   14002aaa9:	sub    rsp,0x50
   14002aaad:	lea    rbp,[rsp+0x30]
   14002aab2:	mov    QWORD PTR [rbp+0x48],rbx
   14002aab6:	mov    QWORD PTR [rbp+0x50],rsi
   14002aaba:	mov    rax,QWORD PTR [rip+0x14e6f]        # 0x14003f930
   14002aac1:	xor    rax,rbp
   14002aac4:	mov    QWORD PTR [rbp+0x10],rax
   14002aac8:	mov    rsi,rcx
   14002aacb:	test   rcx,rcx
   14002aace:	jne    0x14002aad7
   14002aad0:	xor    eax,eax
   14002aad2:	jmp    0x14002ac06
   14002aad7:	call   QWORD PTR [rip+0x464b]        # 0x14002f128
   14002aadd:	lea    r12d,[rax+0x1]
   14002aae1:	mov    DWORD PTR [rbp+0x4],r12d
   14002aae5:	xor    eax,eax
   14002aae7:	mov    DWORD PTR [rsp+0x28],eax
   14002aaeb:	mov    QWORD PTR [rsp+0x20],rax
   14002aaf0:	mov    r9d,r12d
   14002aaf3:	mov    r8,rsi
   14002aaf6:	xor    edx,edx
   14002aaf8:	xor    ecx,ecx
   14002aafa:	call   QWORD PTR [rip+0x4770]        # 0x14002f270
   14002ab00:	movsxd rdi,eax
   14002ab03:	mov    DWORD PTR [rbp+0x0],edi
   14002ab06:	test   eax,eax
   14002ab08:	jne    0x14002ab24
   14002ab0a:	call   QWORD PTR [rip+0x45a0]        # 0x14002f0b0
   14002ab10:	test   eax,eax
   14002ab12:	jle    0x14002ab1c
   14002ab14:	movzx  eax,ax
   14002ab17:	or     eax,0x80070000
   14002ab1c:	mov    ecx,eax
   14002ab1e:	call   0x14002a970
   14002ab23:	nop
   14002ab24:	cmp    edi,0x1000
   14002ab2a:	jge    0x14002ab5b
   14002ab2c:	mov    rax,rdi
   14002ab2f:	add    rax,rax
   14002ab32:	lea    rcx,[rax+0xf]
   14002ab36:	cmp    rcx,rax
   14002ab39:	ja     0x14002ab45
   14002ab3b:	movabs rcx,0xffffffffffffff0
   14002ab45:	and    rcx,0xfffffffffffffff0
   14002ab49:	mov    rax,rcx
   14002ab4c:	call   0x140012f50
   14002ab51:	sub    rsp,rcx
   14002ab54:	lea    rbx,[rsp+0x30]
   14002ab59:	jmp    0x14002ab69
   14002ab5b:	mov    rcx,rdi
   14002ab5e:	add    rcx,rcx
   14002ab61:	call   0x140013298
   14002ab66:	mov    rbx,rax
   14002ab69:	mov    QWORD PTR [rbp+0x8],rbx
   14002ab6d:	jmp    0x14002ab80
   14002ab6f:	xor    ebx,ebx
   14002ab71:	mov    QWORD PTR [rbp+0x8],rbx
   14002ab75:	mov    rsi,QWORD PTR [rbp+0x40]
   14002ab79:	mov    r12d,DWORD PTR [rbp+0x4]
   14002ab7d:	mov    edi,DWORD PTR [rbp+0x0]
   14002ab80:	test   rbx,rbx
   14002ab83:	jne    0x14002ab90
   14002ab85:	mov    ecx,0x8007000e
   14002ab8a:	call   0x14002a970
   14002ab8f:	int3   
   14002ab90:	mov    DWORD PTR [rsp+0x28],edi
   14002ab94:	mov    QWORD PTR [rsp+0x20],rbx
   14002ab99:	mov    r9d,r12d
   14002ab9c:	mov    r8,rsi
   14002ab9f:	xor    edx,edx
   14002aba1:	xor    ecx,ecx
   14002aba3:	call   QWORD PTR [rip+0x46c7]        # 0x14002f270
   14002aba9:	test   eax,eax
   14002abab:	jne    0x14002abd7
   14002abad:	cmp    edi,0x1000
   14002abb3:	jl     0x14002abbd
   14002abb5:	mov    rcx,rbx
   14002abb8:	call   0x1400130a8
   14002abbd:	call   QWORD PTR [rip+0x44ed]        # 0x14002f0b0
   14002abc3:	test   eax,eax
   14002abc5:	jle    0x14002abcf
   14002abc7:	movzx  eax,ax
   14002abca:	or     eax,0x80070000
   14002abcf:	mov    ecx,eax
   14002abd1:	call   0x14002a970
   14002abd6:	int3   
   14002abd7:	mov    rcx,rbx
   14002abda:	call   QWORD PTR [rip+0x47b8]        # 0x14002f398
   14002abe0:	mov    rsi,rax
   14002abe3:	cmp    edi,0x1000
   14002abe9:	jl     0x14002abf3
   14002abeb:	mov    rcx,rbx
   14002abee:	call   0x1400130a8
   14002abf3:	test   rsi,rsi
   14002abf6:	jne    0x14002ac03
   14002abf8:	mov    ecx,0x8007000e
   14002abfd:	call   0x14002a970
   14002ac02:	int3   
   14002ac03:	mov    rax,rsi
   14002ac06:	mov    rcx,QWORD PTR [rbp+0x10]
   14002ac0a:	xor    rcx,rbp
   14002ac0d:	call   0x140012670
   14002ac12:	mov    rbx,QWORD PTR [rbp+0x48]
   14002ac16:	mov    rsi,QWORD PTR [rbp+0x50]
   14002ac1a:	lea    rsp,[rbp+0x20]
   14002ac1e:	pop    r12
   14002ac20:	pop    rdi
   14002ac21:	pop    rbp
   14002ac22:	ret    
   14002ac23:	int3   
   14002ac24:	jmp    QWORD PTR [rip+0x464e]        # 0x14002f278
   14002ac2a:	jmp    QWORD PTR [rip+0x4670]        # 0x14002f2a0
   14002ac30:	jmp    QWORD PTR [rip+0x46d2]        # 0x14002f308
   14002ac36:	jmp    QWORD PTR [rip+0x452c]        # 0x14002f168
   14002ac3c:	lea    rax,[rip+0x215]        # 0x14002ae58
   14002ac43:	lea    rcx,[rip+0xd5e]        # 0x14002b9a8
   14002ac4a:	mov    QWORD PTR [rip+0x15fb7],rax        # 0x140040c08
   14002ac51:	lea    rax,[rip+0x1f0]        # 0x14002ae48
   14002ac58:	mov    QWORD PTR [rip+0x15fa1],rcx        # 0x140040c00
   14002ac5f:	mov    QWORD PTR [rip+0x15faa],rax        # 0x140040c10
   14002ac66:	lea    rax,[rip+0x1e3]        # 0x14002ae50
   14002ac6d:	mov    QWORD PTR [rip+0x15fb4],rcx        # 0x140040c28
   14002ac74:	mov    QWORD PTR [rip+0x15f9d],rax        # 0x140040c18
   14002ac7b:	lea    rax,[rip+0x16a]        # 0x14002adec
   14002ac82:	mov    QWORD PTR [rip+0x15f97],rax        # 0x140040c20
   14002ac89:	lea    rax,[rip+0xc80]        # 0x14002b910
   14002ac90:	mov    QWORD PTR [rip+0x15f99],rax        # 0x140040c30
   14002ac97:	lea    rax,[rip+0x166]        # 0x14002ae04
   14002ac9e:	mov    QWORD PTR [rip+0x15f93],rax        # 0x140040c38
   14002aca5:	lea    rax,[rip+0xa0]        # 0x14002ad4c
   14002acac:	mov    QWORD PTR [rip+0x15f8d],rax        # 0x140040c40
   14002acb3:	lea    rax,[rip+0x12]        # 0x14002accc
   14002acba:	mov    QWORD PTR [rip+0x15f87],rax        # 0x140040c48
   14002acc1:	ret    
   14002acc2:	int3   
   14002acc3:	int3   
   14002acc4:	jmp    0x14002ac3c
   14002acc9:	int3   
   14002acca:	int3   
   14002accb:	int3   
   14002accc:	rex push rbx
   14002acce:	sub    rsp,0x40
   14002acd2:	mov    rbx,rcx
   14002acd5:	lea    rcx,[rsp+0x20]
   14002acda:	call   0x140012690
   14002acdf:	movsx  ecx,BYTE PTR [rbx]
   14002ace2:	call   0x14002a8c0
   14002ace7:	cmp    eax,0x65
   14002acea:	je     0x14002acfb
   14002acec:	inc    rbx
   14002acef:	movzx  ecx,BYTE PTR [rbx]
   14002acf2:	call   0x140015408
   14002acf7:	test   eax,eax
   14002acf9:	jne    0x14002acec
   14002acfb:	movsx  ecx,BYTE PTR [rbx]
   14002acfe:	call   0x14002a8c0
   14002ad03:	cmp    eax,0x78
   14002ad06:	jne    0x14002ad0c
   14002ad08:	add    rbx,0x2
   14002ad0c:	mov    rax,QWORD PTR [rsp+0x20]
   14002ad11:	mov    dl,BYTE PTR [rbx]
   14002ad13:	mov    rcx,QWORD PTR [rax+0x128]
   14002ad1a:	mov    rax,QWORD PTR [rcx]
   14002ad1d:	mov    cl,BYTE PTR [rax]
   14002ad1f:	mov    BYTE PTR [rbx],cl
   14002ad21:	inc    rbx
   14002ad24:	mov    al,BYTE PTR [rbx]
   14002ad26:	mov    BYTE PTR [rbx],dl
   14002ad28:	mov    dl,al
   14002ad2a:	mov    al,BYTE PTR [rbx]
   14002ad2c:	inc    rbx
   14002ad2f:	test   al,al
   14002ad31:	jne    0x14002ad24
   14002ad33:	cmp    BYTE PTR [rsp+0x38],al
   14002ad37:	je     0x14002ad45
   14002ad39:	mov    rax,QWORD PTR [rsp+0x30]
   14002ad3e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ad45:	add    rsp,0x40
   14002ad49:	pop    rbx
   14002ad4a:	ret    
   14002ad4b:	int3   
   14002ad4c:	rex push rbx
   14002ad4e:	sub    rsp,0x40
   14002ad52:	mov    rbx,rcx
   14002ad55:	lea    rcx,[rsp+0x20]
   14002ad5a:	call   0x140012690
   14002ad5f:	mov    r11b,BYTE PTR [rbx]
   14002ad62:	mov    rcx,QWORD PTR [rsp+0x20]
   14002ad67:	test   r11b,r11b
   14002ad6a:	je     0x14002ad88
   14002ad6c:	mov    rax,QWORD PTR [rcx+0x128]
   14002ad73:	mov    rdx,QWORD PTR [rax]
   14002ad76:	mov    al,BYTE PTR [rdx]
   14002ad78:	cmp    r11b,al
   14002ad7b:	je     0x14002ad88
   14002ad7d:	inc    rbx
   14002ad80:	mov    r11b,BYTE PTR [rbx]
   14002ad83:	test   r11b,r11b
   14002ad86:	jne    0x14002ad78
   14002ad88:	mov    al,BYTE PTR [rbx]
   14002ad8a:	inc    rbx
   14002ad8d:	test   al,al
   14002ad8f:	je     0x14002add0
   14002ad91:	jmp    0x14002ad9e
   14002ad93:	cmp    al,0x65
   14002ad95:	je     0x14002ada4
   14002ad97:	cmp    al,0x45
   14002ad99:	je     0x14002ada4
   14002ad9b:	inc    rbx
   14002ad9e:	mov    al,BYTE PTR [rbx]
   14002ada0:	test   al,al
   14002ada2:	jne    0x14002ad93
   14002ada4:	mov    rdx,rbx
   14002ada7:	dec    rbx
   14002adaa:	cmp    BYTE PTR [rbx],0x30
   14002adad:	je     0x14002ada7
   14002adaf:	mov    rax,QWORD PTR [rcx+0x128]
   14002adb6:	mov    rcx,QWORD PTR [rax]
   14002adb9:	mov    al,BYTE PTR [rcx]
   14002adbb:	cmp    BYTE PTR [rbx],al
   14002adbd:	jne    0x14002adc2
   14002adbf:	dec    rbx
   14002adc2:	mov    al,BYTE PTR [rdx]
   14002adc4:	inc    rbx
   14002adc7:	inc    rdx
   14002adca:	mov    BYTE PTR [rbx],al
   14002adcc:	test   al,al
   14002adce:	jne    0x14002adc2
   14002add0:	cmp    BYTE PTR [rsp+0x38],0x0
   14002add5:	je     0x14002ade3
   14002add7:	mov    rax,QWORD PTR [rsp+0x30]
   14002addc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ade3:	add    rsp,0x40
   14002ade7:	pop    rbx
   14002ade8:	ret    
   14002ade9:	int3   
   14002adea:	int3   
   14002adeb:	int3   
   14002adec:	movsd  xmm0,QWORD PTR [rcx]
   14002adf0:	comisd xmm0,QWORD PTR [rip+0x8e48]        # 0x140033c40
   14002adf8:	jb     0x14002ae00
   14002adfa:	mov    eax,0x1
   14002adff:	ret    
   14002ae00:	xor    eax,eax
   14002ae02:	ret    
   14002ae03:	int3   
   14002ae04:	rex push rbx
   14002ae06:	sub    rsp,0x30
   14002ae0a:	mov    rax,r8
   14002ae0d:	mov    rbx,rdx
   14002ae10:	mov    r8,r9
   14002ae13:	mov    rdx,rax
   14002ae16:	test   ecx,ecx
   14002ae18:	je     0x14002ae2e
   14002ae1a:	lea    rcx,[rsp+0x20]
   14002ae1f:	call   0x14002b9f4
   14002ae24:	mov    r11,QWORD PTR [rsp+0x20]
   14002ae29:	mov    QWORD PTR [rbx],r11
   14002ae2c:	jmp    0x14002ae40
   14002ae2e:	lea    rcx,[rsp+0x40]
   14002ae33:	call   0x14002baf4
   14002ae38:	mov    r11d,DWORD PTR [rsp+0x40]
   14002ae3d:	mov    DWORD PTR [rbx],r11d
   14002ae40:	add    rsp,0x30
   14002ae44:	pop    rbx
   14002ae45:	ret    
   14002ae46:	int3   
   14002ae47:	int3   
   14002ae48:	xor    r9d,r9d
   14002ae4b:	jmp    0x14002ae04
   14002ae50:	xor    edx,edx
   14002ae52:	jmp    0x14002accc
   14002ae57:	int3   
   14002ae58:	xor    edx,edx
   14002ae5a:	jmp    0x14002ad4c
   14002ae5f:	int3   
   14002ae60:	mov    rax,rsp
   14002ae63:	mov    QWORD PTR [rax+0x8],rbx
   14002ae67:	mov    QWORD PTR [rax+0x10],rbp
   14002ae6b:	mov    QWORD PTR [rax+0x18],rsi
   14002ae6f:	mov    QWORD PTR [rax+0x20],rdi
   14002ae73:	push   r12
   14002ae75:	push   r13
   14002ae77:	push   r15
   14002ae79:	sub    rsp,0x50
   14002ae7d:	mov    r12,rdx
   14002ae80:	mov    rdx,QWORD PTR [rsp+0xa0]
   14002ae88:	mov    rdi,rcx
   14002ae8b:	lea    rcx,[rax-0x38]
   14002ae8f:	mov    r15d,r9d
   14002ae92:	movsxd rbx,r8d
   14002ae95:	call   0x140012690
   14002ae9a:	test   rdi,rdi
   14002ae9d:	jne    0x14002aee2
   14002ae9f:	call   0x14001583c
   14002aea4:	lea    ebx,[rdi+0x16]
   14002aea7:	mov    DWORD PTR [rax],ebx
   14002aea9:	call   0x140019f74
   14002aeae:	cmp    BYTE PTR [rsp+0x48],0x0
   14002aeb3:	je     0x14002aec1
   14002aeb5:	mov    rcx,QWORD PTR [rsp+0x40]
   14002aeba:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002aec1:	mov    eax,ebx
   14002aec3:	lea    r11,[rsp+0x50]
   14002aec8:	mov    rbx,QWORD PTR [r11+0x20]
   14002aecc:	mov    rbp,QWORD PTR [r11+0x28]
   14002aed0:	mov    rsi,QWORD PTR [r11+0x30]
   14002aed4:	mov    rdi,QWORD PTR [r11+0x38]
   14002aed8:	mov    rsp,r11
   14002aedb:	pop    r15
   14002aedd:	pop    r13
   14002aedf:	pop    r12
   14002aee1:	ret    
   14002aee2:	test   r12,r12
   14002aee5:	jne    0x14002af0d
   14002aee7:	call   0x14001583c
   14002aeec:	lea    ebx,[r12+0x16]
   14002aef1:	mov    DWORD PTR [rax],ebx
   14002aef3:	call   0x140019f74
   14002aef8:	cmp    BYTE PTR [rsp+0x48],r12b
   14002aefd:	je     0x14002aec1
   14002aeff:	mov    rax,QWORD PTR [rsp+0x40]
   14002af04:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002af0b:	jmp    0x14002aec1
   14002af0d:	xor    eax,eax
   14002af0f:	test   ebx,ebx
   14002af11:	cmovg  eax,ebx
   14002af14:	add    eax,0x9
   14002af17:	cdqe   
   14002af19:	cmp    r12,rax
   14002af1c:	ja     0x14002af2d
   14002af1e:	call   0x14001583c
   14002af23:	mov    ebx,0x22
   14002af28:	jmp    0x14002aea7
   14002af2d:	cmp    BYTE PTR [rsp+0x98],0x0
   14002af35:	mov    rsi,QWORD PTR [rsp+0x90]
   14002af3d:	je     0x14002af73
   14002af3f:	xor    ebp,ebp
   14002af41:	cmp    DWORD PTR [rsi],0x2d
   14002af44:	sete   bpl
   14002af48:	xor    r13d,r13d
   14002af4b:	add    rbp,rdi
   14002af4e:	test   ebx,ebx
   14002af50:	setg   r13b
   14002af54:	test   r13d,r13d
   14002af57:	je     0x14002af73
   14002af59:	mov    rcx,rbp
   14002af5c:	call   0x14001dae0
   14002af61:	movsxd rcx,r13d
   14002af64:	mov    rdx,rbp
   14002af67:	lea    r8,[rax+0x1]
   14002af6b:	add    rcx,rbp
   14002af6e:	call   0x140018e00
   14002af73:	cmp    DWORD PTR [rsi],0x2d
   14002af76:	mov    rdx,rdi
   14002af79:	jne    0x14002af82
   14002af7b:	mov    BYTE PTR [rdi],0x2d
   14002af7e:	lea    rdx,[rdi+0x1]
   14002af82:	test   ebx,ebx
   14002af84:	jle    0x14002afa1
   14002af86:	mov    al,BYTE PTR [rdx+0x1]
   14002af89:	mov    BYTE PTR [rdx],al
   14002af8b:	mov    rax,QWORD PTR [rsp+0x30]
   14002af90:	inc    rdx
   14002af93:	mov    rcx,QWORD PTR [rax+0x128]
   14002af9a:	mov    rax,QWORD PTR [rcx]
   14002af9d:	mov    cl,BYTE PTR [rax]
   14002af9f:	mov    BYTE PTR [rdx],cl
   14002afa1:	xor    ecx,ecx
   14002afa3:	lea    r8,[rip+0x8c9e]        # 0x140033c48
   14002afaa:	cmp    BYTE PTR [rsp+0x98],cl
   14002afb1:	sete   cl
   14002afb4:	add    rbx,rdx
   14002afb7:	add    rbx,rcx
   14002afba:	sub    rdi,rbx
   14002afbd:	cmp    r12,0xffffffffffffffff
   14002afc1:	mov    rcx,rbx
   14002afc4:	lea    rdx,[r12+rdi*1]
   14002afc8:	cmove  rdx,r12
   14002afcc:	call   0x14001dc7c
   14002afd1:	test   eax,eax
   14002afd3:	jne    0x14002b07b
   14002afd9:	lea    rcx,[rbx+0x2]
   14002afdd:	test   r15d,r15d
   14002afe0:	je     0x14002afe5
   14002afe2:	mov    BYTE PTR [rbx],0x45
   14002afe5:	mov    rax,QWORD PTR [rsi+0x10]
   14002afe9:	cmp    BYTE PTR [rax],0x30
   14002afec:	je     0x14002b044
   14002afee:	mov    r8d,DWORD PTR [rsi+0x4]
   14002aff2:	dec    r8d
   14002aff5:	jns    0x14002affe
   14002aff7:	neg    r8d
   14002affa:	mov    BYTE PTR [rbx+0x1],0x2d
   14002affe:	cmp    r8d,0x64
   14002b002:	jl     0x14002b01f
   14002b004:	mov    eax,0x51eb851f
   14002b009:	imul   r8d
   14002b00c:	sar    edx,0x5
   14002b00f:	mov    eax,edx
   14002b011:	shr    eax,0x1f
   14002b014:	add    edx,eax
   14002b016:	add    BYTE PTR [rbx+0x2],dl
   14002b019:	imul   edx,edx,0xffffff9c
   14002b01c:	add    r8d,edx
   14002b01f:	cmp    r8d,0xa
   14002b023:	jl     0x14002b040
   14002b025:	mov    eax,0x66666667
   14002b02a:	imul   r8d
   14002b02d:	sar    edx,0x2
   14002b030:	mov    eax,edx
   14002b032:	shr    eax,0x1f
   14002b035:	add    edx,eax
   14002b037:	add    BYTE PTR [rbx+0x3],dl
   14002b03a:	imul   edx,edx,0xfffffff6
   14002b03d:	add    r8d,edx
   14002b040:	add    BYTE PTR [rbx+0x4],r8b
   14002b044:	test   BYTE PTR [rip+0x2b5a9],0x1        # 0x1400565f4
   14002b04b:	je     0x14002b061
   14002b04d:	cmp    BYTE PTR [rcx],0x30
   14002b050:	jne    0x14002b061
   14002b052:	lea    rdx,[rcx+0x1]
   14002b056:	mov    r8d,0x3
   14002b05c:	call   0x140018e00
   14002b061:	cmp    BYTE PTR [rsp+0x48],0x0
   14002b066:	je     0x14002b074
   14002b068:	mov    rax,QWORD PTR [rsp+0x40]
   14002b06d:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b074:	xor    eax,eax
   14002b076:	jmp    0x14002aec3
   14002b07b:	and    QWORD PTR [rsp+0x20],0x0
   14002b081:	xor    r9d,r9d
   14002b084:	xor    r8d,r8d
   14002b087:	xor    edx,edx
   14002b089:	xor    ecx,ecx
   14002b08b:	call   0x140019ed0
   14002b090:	int3   
   14002b091:	int3   
   14002b092:	int3   
   14002b093:	int3   
   14002b094:	rex push rbx
   14002b096:	push   rbp
   14002b097:	push   rsi
   14002b098:	push   rdi
   14002b099:	sub    rsp,0x88
   14002b0a0:	mov    rax,QWORD PTR [rip+0x14889]        # 0x14003f930
   14002b0a7:	xor    rax,rsp
   14002b0aa:	mov    QWORD PTR [rsp+0x70],rax
   14002b0af:	mov    rcx,QWORD PTR [rcx]
   14002b0b2:	mov    rbx,r8
   14002b0b5:	mov    rdi,rdx
   14002b0b8:	mov    esi,r9d
   14002b0bb:	mov    ebp,0x16
   14002b0c0:	lea    r8,[rsp+0x58]
   14002b0c5:	lea    rdx,[rsp+0x40]
   14002b0ca:	mov    r9d,ebp
   14002b0cd:	call   0x14002bd88
   14002b0d2:	test   rdi,rdi
   14002b0d5:	jne    0x14002b0ea
   14002b0d7:	call   0x14001583c
   14002b0dc:	mov    DWORD PTR [rax],ebp
   14002b0de:	call   0x140019f74
   14002b0e3:	mov    eax,ebp
   14002b0e5:	jmp    0x14002b172
   14002b0ea:	test   rbx,rbx
   14002b0ed:	je     0x14002b0d7
   14002b0ef:	or     rdx,0xffffffffffffffff
   14002b0f3:	cmp    rbx,rdx
   14002b0f6:	je     0x14002b112
   14002b0f8:	xor    eax,eax
   14002b0fa:	cmp    DWORD PTR [rsp+0x40],0x2d
   14002b0ff:	mov    rdx,rbx
   14002b102:	sete   al
   14002b105:	sub    rdx,rax
   14002b108:	xor    eax,eax
   14002b10a:	test   esi,esi
   14002b10c:	setg   al
   14002b10f:	sub    rdx,rax
   14002b112:	xor    eax,eax
   14002b114:	cmp    DWORD PTR [rsp+0x40],0x2d
   14002b119:	lea    r8d,[rsi+0x1]
   14002b11d:	sete   al
   14002b120:	xor    ecx,ecx
   14002b122:	test   esi,esi
   14002b124:	setg   cl
   14002b127:	add    rax,rdi
   14002b12a:	lea    r9,[rsp+0x40]
   14002b12f:	add    rcx,rax
   14002b132:	call   0x14002bbf4
   14002b137:	test   eax,eax
   14002b139:	je     0x14002b140
   14002b13b:	mov    BYTE PTR [rdi],0x0
   14002b13e:	jmp    0x14002b172
   14002b140:	mov    rax,QWORD PTR [rsp+0xd8]
   14002b148:	mov    r9d,DWORD PTR [rsp+0xd0]
   14002b150:	mov    r8d,esi
   14002b153:	mov    QWORD PTR [rsp+0x30],rax
   14002b158:	lea    rax,[rsp+0x40]
   14002b15d:	mov    rdx,rbx
   14002b160:	mov    rcx,rdi
   14002b163:	mov    BYTE PTR [rsp+0x28],0x0
   14002b168:	mov    QWORD PTR [rsp+0x20],rax
   14002b16d:	call   0x14002ae60
   14002b172:	mov    rcx,QWORD PTR [rsp+0x70]
   14002b177:	xor    rcx,rsp
   14002b17a:	call   0x140012670
   14002b17f:	add    rsp,0x88
   14002b186:	pop    rdi
   14002b187:	pop    rsi
   14002b188:	pop    rbp
   14002b189:	pop    rbx
   14002b18a:	ret    
   14002b18b:	int3   
   14002b18c:	mov    QWORD PTR [rsp+0x10],rbx
   14002b191:	mov    QWORD PTR [rsp+0x18],rdi
   14002b196:	push   rbp
   14002b197:	push   r12
   14002b199:	push   r13
   14002b19b:	push   r14
   14002b19d:	push   r15
   14002b19f:	mov    rbp,rsp
   14002b1a2:	sub    rsp,0x50
   14002b1a6:	mov    rdi,rdx
   14002b1a9:	mov    rdx,QWORD PTR [rbp+0x58]
   14002b1ad:	mov    r14,rcx
   14002b1b0:	lea    rcx,[rbp-0x20]
   14002b1b4:	mov    r12d,r9d
   14002b1b7:	mov    rbx,r8
   14002b1ba:	mov    QWORD PTR [rbp+0x30],0x3ff
   14002b1c2:	mov    r13d,0x30
   14002b1c8:	call   0x140012690
   14002b1cd:	xor    r15d,r15d
   14002b1d0:	test   r12d,r12d
   14002b1d3:	cmovs  r12d,r15d
   14002b1d7:	test   rdi,rdi
   14002b1da:	jne    0x14002b203
   14002b1dc:	call   0x14001583c
   14002b1e1:	lea    ebx,[rdi+0x16]
   14002b1e4:	mov    DWORD PTR [rax],ebx
   14002b1e6:	call   0x140019f74
   14002b1eb:	cmp    BYTE PTR [rbp-0x8],r15b
   14002b1ef:	je     0x14002b1fc
   14002b1f1:	mov    rcx,QWORD PTR [rbp-0x10]
   14002b1f5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002b1fc:	mov    eax,ebx
   14002b1fe:	jmp    0x14002b552
   14002b203:	test   rbx,rbx
   14002b206:	jne    0x14002b22c
   14002b208:	call   0x14001583c
   14002b20d:	mov    ebx,0x16
   14002b212:	mov    DWORD PTR [rax],ebx
   14002b214:	call   0x140019f74
   14002b219:	cmp    BYTE PTR [rbp-0x8],r15b
   14002b21d:	je     0x14002b1fc
   14002b21f:	mov    rax,QWORD PTR [rbp-0x10]
   14002b223:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b22a:	jmp    0x14002b1fc
   14002b22c:	lea    eax,[r12+0xb]
   14002b231:	mov    BYTE PTR [rdi],r15b
   14002b234:	movsxd rcx,eax
   14002b237:	cmp    rbx,rcx
   14002b23a:	ja     0x14002b248
   14002b23c:	call   0x14001583c
   14002b241:	mov    ebx,0x22
   14002b246:	jmp    0x14002b1e4
   14002b248:	mov    rax,QWORD PTR [r14]
   14002b24b:	mov    ecx,0x7ff
   14002b250:	shr    rax,0x34
   14002b254:	and    rax,rcx
   14002b257:	cmp    rax,rcx
   14002b25a:	jne    0x14002b2f3
   14002b260:	lea    r8,[rbx-0x2]
   14002b264:	cmp    rbx,0xffffffffffffffff
   14002b268:	lea    rdx,[rdi+0x2]
   14002b26c:	mov    r9d,r12d
   14002b26f:	mov    rcx,r14
   14002b272:	cmove  r8,rbx
   14002b276:	mov    QWORD PTR [rsp+0x28],r15
   14002b27b:	mov    DWORD PTR [rsp+0x20],r15d
   14002b280:	call   0x14002b094
   14002b285:	test   eax,eax
   14002b287:	je     0x14002b2a6
   14002b289:	mov    BYTE PTR [rdi],r15b
   14002b28c:	cmp    BYTE PTR [rbp-0x8],r15b
   14002b290:	je     0x14002b552
   14002b296:	mov    rcx,QWORD PTR [rbp-0x10]
   14002b29a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002b2a1:	jmp    0x14002b552
   14002b2a6:	cmp    BYTE PTR [rdi+0x2],0x2d
   14002b2aa:	jne    0x14002b2b2
   14002b2ac:	mov    BYTE PTR [rdi],0x2d
   14002b2af:	inc    rdi
   14002b2b2:	mov    ebx,DWORD PTR [rbp+0x50]
   14002b2b5:	mov    BYTE PTR [rdi],0x30
   14002b2b8:	mov    edx,0x65
   14002b2bd:	mov    eax,ebx
   14002b2bf:	neg    eax
   14002b2c1:	sbb    cl,cl
   14002b2c3:	and    cl,0xe0
   14002b2c6:	add    cl,0x78
   14002b2c9:	mov    BYTE PTR [rdi+0x1],cl
   14002b2cc:	lea    rcx,[rdi+0x2]
   14002b2d0:	call   0x14002b9cc
   14002b2d5:	test   rax,rax
   14002b2d8:	je     0x14002b2ea
   14002b2da:	neg    ebx
   14002b2dc:	sbb    cl,cl
   14002b2de:	and    cl,0xe0
   14002b2e1:	add    cl,0x70
   14002b2e4:	mov    BYTE PTR [rax],cl
   14002b2e6:	mov    BYTE PTR [rax+0x3],r15b
   14002b2ea:	cmp    BYTE PTR [rbp-0x8],r15b
   14002b2ee:	jmp    0x14002b543
   14002b2f3:	movabs rax,0x8000000000000000
   14002b2fd:	test   QWORD PTR [r14],rax
   14002b300:	je     0x14002b308
   14002b302:	mov    BYTE PTR [rdi],0x2d
   14002b305:	inc    rdi
   14002b308:	mov    r9d,DWORD PTR [rbp+0x50]
   14002b30c:	mov    r11d,0x30
   14002b312:	movabs rbx,0xfffffffffffff
   14002b31c:	mov    eax,r9d
   14002b31f:	mov    BYTE PTR [rdi],r11b
   14002b322:	neg    eax
   14002b324:	mov    eax,r9d
   14002b327:	sbb    cl,cl
   14002b329:	and    cl,0xe0
   14002b32c:	add    cl,0x78
   14002b32f:	neg    eax
   14002b331:	movabs rax,0x7ff0000000000000
   14002b33b:	sbb    edx,edx
   14002b33d:	mov    BYTE PTR [rdi+0x1],cl
   14002b340:	and    edx,0xffffffe0
   14002b343:	sub    edx,0xffffffd9
   14002b346:	test   QWORD PTR [r14],rax
   14002b349:	jne    0x14002b36a
   14002b34b:	mov    BYTE PTR [rdi+0x2],r11b
   14002b34f:	mov    rax,QWORD PTR [r14]
   14002b352:	add    rdi,0x3
   14002b356:	and    rax,rbx
   14002b359:	neg    rax
   14002b35c:	sbb    rax,rax
   14002b35f:	and    eax,0x3fe
   14002b364:	mov    QWORD PTR [rbp+0x30],rax
   14002b368:	jmp    0x14002b372
   14002b36a:	mov    BYTE PTR [rdi+0x2],0x31
   14002b36e:	add    rdi,0x3
   14002b372:	mov    r15,rdi
   14002b375:	xor    r10d,r10d
   14002b378:	inc    rdi
   14002b37b:	test   r12d,r12d
   14002b37e:	jne    0x14002b385
   14002b380:	mov    BYTE PTR [r15],r10b
   14002b383:	jmp    0x14002b398
   14002b385:	mov    rax,QWORD PTR [rbp-0x20]
   14002b389:	mov    rcx,QWORD PTR [rax+0x128]
   14002b390:	mov    rax,QWORD PTR [rcx]
   14002b393:	mov    cl,BYTE PTR [rax]
   14002b395:	mov    BYTE PTR [r15],cl
   14002b398:	test   QWORD PTR [r14],rbx
   14002b39b:	jbe    0x14002b42c
   14002b3a1:	movabs r8,0xf000000000000
   14002b3ab:	test   r12d,r12d
   14002b3ae:	jle    0x14002b3df
   14002b3b0:	mov    rax,QWORD PTR [r14]
   14002b3b3:	mov    cl,r13b
   14002b3b6:	and    rax,r8
   14002b3b9:	and    rax,rbx
   14002b3bc:	shr    rax,cl
   14002b3bf:	add    ax,r11w
   14002b3c3:	cmp    ax,0x39
   14002b3c7:	jbe    0x14002b3cc
   14002b3c9:	add    ax,dx
   14002b3cc:	mov    BYTE PTR [rdi],al
   14002b3ce:	shr    r8,0x4
   14002b3d2:	dec    r12d
   14002b3d5:	inc    rdi
   14002b3d8:	add    r13w,0xfffc
   14002b3dd:	jns    0x14002b3ab
   14002b3df:	test   r13w,r13w
   14002b3e3:	js     0x14002b42c
   14002b3e5:	mov    rax,QWORD PTR [r14]
   14002b3e8:	mov    cl,r13b
   14002b3eb:	and    rax,r8
   14002b3ee:	and    rax,rbx
   14002b3f1:	shr    rax,cl
   14002b3f4:	cmp    ax,0x8
   14002b3f8:	jbe    0x14002b42c
   14002b3fa:	lea    rax,[rdi-0x1]
   14002b3fe:	cmp    BYTE PTR [rax],0x66
   14002b401:	je     0x14002b408
   14002b403:	cmp    BYTE PTR [rax],0x46
   14002b406:	jne    0x14002b410
   14002b408:	mov    BYTE PTR [rax],r11b
   14002b40b:	dec    rax
   14002b40e:	jmp    0x14002b3fe
   14002b410:	cmp    rax,r15
   14002b413:	je     0x14002b429
   14002b415:	mov    cl,BYTE PTR [rax]
   14002b417:	cmp    cl,0x39
   14002b41a:	jne    0x14002b423
   14002b41c:	add    dl,0x3a
   14002b41f:	mov    BYTE PTR [rax],dl
   14002b421:	jmp    0x14002b42c
   14002b423:	inc    cl
   14002b425:	mov    BYTE PTR [rax],cl
   14002b427:	jmp    0x14002b42c
   14002b429:	inc    BYTE PTR [rax-0x1]
   14002b42c:	test   r12d,r12d
   14002b42f:	jle    0x14002b450
   14002b431:	mov    r8d,r12d
   14002b434:	mov    dl,r11b
   14002b437:	mov    rcx,rdi
   14002b43a:	mov    ebx,r12d
   14002b43d:	call   0x140012fb0
   14002b442:	mov    r9d,DWORD PTR [rbp+0x50]
   14002b446:	add    rdi,rbx
   14002b449:	xor    r10d,r10d
   14002b44c:	lea    r11d,[r10+0x30]
   14002b450:	cmp    BYTE PTR [r15],r10b
   14002b453:	cmove  rdi,r15
   14002b457:	neg    r9d
   14002b45a:	sbb    al,al
   14002b45c:	and    al,0xe0
   14002b45e:	add    al,0x70
   14002b460:	mov    BYTE PTR [rdi],al
   14002b462:	mov    rcx,QWORD PTR [r14]
   14002b465:	shr    rcx,0x34
   14002b469:	and    ecx,0x7ff
   14002b46f:	sub    rcx,QWORD PTR [rbp+0x30]
   14002b473:	js     0x14002b47f
   14002b475:	mov    BYTE PTR [rdi+0x1],0x2b
   14002b479:	add    rdi,0x2
   14002b47d:	jmp    0x14002b48a
   14002b47f:	mov    BYTE PTR [rdi+0x1],0x2d
   14002b483:	add    rdi,0x2
   14002b487:	neg    rcx
   14002b48a:	mov    r8,rdi
   14002b48d:	mov    BYTE PTR [rdi],r11b
   14002b490:	cmp    rcx,0x3e8
   14002b497:	jl     0x14002b4cc
   14002b499:	movabs rax,0x20c49ba5e353f7cf
   14002b4a3:	imul   rcx
   14002b4a6:	sar    rdx,0x7
   14002b4aa:	mov    rax,rdx
   14002b4ad:	shr    rax,0x3f
   14002b4b1:	add    rdx,rax
   14002b4b4:	lea    eax,[r11+rdx*1]
   14002b4b8:	imul   rdx,rdx,0xfffffffffffffc18
   14002b4bf:	mov    BYTE PTR [rdi],al
   14002b4c1:	inc    rdi
   14002b4c4:	add    rcx,rdx
   14002b4c7:	cmp    rdi,r8
   14002b4ca:	jne    0x14002b4d2
   14002b4cc:	cmp    rcx,0x64
   14002b4d0:	jl     0x14002b500
   14002b4d2:	movabs rax,0xa3d70a3d70a3d70b
   14002b4dc:	imul   rcx
   14002b4df:	add    rdx,rcx
   14002b4e2:	sar    rdx,0x6
   14002b4e6:	mov    rax,rdx
   14002b4e9:	shr    rax,0x3f
   14002b4ed:	add    rdx,rax
   14002b4f0:	lea    eax,[r11+rdx*1]
   14002b4f4:	imul   rdx,rdx,0xffffffffffffff9c
   14002b4f8:	mov    BYTE PTR [rdi],al
   14002b4fa:	inc    rdi
   14002b4fd:	add    rcx,rdx
   14002b500:	cmp    rdi,r8
   14002b503:	jne    0x14002b50b
   14002b505:	cmp    rcx,0xa
   14002b509:	jl     0x14002b536
   14002b50b:	movabs rax,0x6666666666666667
   14002b515:	imul   rcx
   14002b518:	sar    rdx,0x2
   14002b51c:	mov    rax,rdx
   14002b51f:	shr    rax,0x3f
   14002b523:	add    rdx,rax
   14002b526:	lea    eax,[r11+rdx*1]
   14002b52a:	imul   rdx,rdx,0xfffffffffffffff6
   14002b52e:	mov    BYTE PTR [rdi],al
   14002b530:	inc    rdi
   14002b533:	add    rcx,rdx
   14002b536:	add    cl,r11b
   14002b539:	cmp    BYTE PTR [rbp-0x8],r10b
   14002b53d:	mov    BYTE PTR [rdi],cl
   14002b53f:	mov    BYTE PTR [rdi+0x1],r10b
   14002b543:	je     0x14002b550
   14002b545:	mov    rax,QWORD PTR [rbp-0x10]
   14002b549:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b550:	xor    eax,eax
   14002b552:	lea    r11,[rsp+0x50]
   14002b557:	mov    rbx,QWORD PTR [r11+0x38]
   14002b55b:	mov    rdi,QWORD PTR [r11+0x40]
   14002b55f:	mov    rsp,r11
   14002b562:	pop    r15
   14002b564:	pop    r14
   14002b566:	pop    r13
   14002b568:	pop    r12
   14002b56a:	pop    rbp
   14002b56b:	ret    
   14002b56c:	mov    rax,rsp
   14002b56f:	mov    QWORD PTR [rax+0x8],rbx
   14002b573:	mov    QWORD PTR [rax+0x10],rbp
   14002b577:	mov    QWORD PTR [rax+0x18],rsi
   14002b57b:	mov    QWORD PTR [rax+0x20],rdi
   14002b57f:	push   r12
   14002b581:	sub    rsp,0x40
   14002b585:	mov    ebx,DWORD PTR [r9+0x4]
   14002b589:	mov    rsi,rdx
   14002b58c:	mov    rdx,QWORD PTR [rsp+0x78]
   14002b591:	mov    rdi,rcx
   14002b594:	lea    rcx,[rax-0x28]
   14002b598:	mov    r12,r9
   14002b59b:	dec    ebx
   14002b59d:	mov    ebp,r8d
   14002b5a0:	call   0x140012690
   14002b5a5:	test   rdi,rdi
   14002b5a8:	jne    0x14002b5d3
   14002b5aa:	call   0x14001583c
   14002b5af:	lea    ebx,[rdi+0x16]
   14002b5b2:	mov    DWORD PTR [rax],ebx
   14002b5b4:	call   0x140019f74
   14002b5b9:	cmp    BYTE PTR [rsp+0x38],dil
   14002b5be:	je     0x14002b5cc
   14002b5c0:	mov    rcx,QWORD PTR [rsp+0x30]
   14002b5c5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002b5cc:	mov    eax,ebx
   14002b5ce:	jmp    0x14002b6ea
   14002b5d3:	test   rsi,rsi
   14002b5d6:	jne    0x14002b5fc
   14002b5d8:	call   0x14001583c
   14002b5dd:	lea    ebx,[rsi+0x16]
   14002b5e0:	mov    DWORD PTR [rax],ebx
   14002b5e2:	call   0x140019f74
   14002b5e7:	cmp    BYTE PTR [rsp+0x38],sil
   14002b5ec:	je     0x14002b5cc
   14002b5ee:	mov    rax,QWORD PTR [rsp+0x30]
   14002b5f3:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b5fa:	jmp    0x14002b5cc
   14002b5fc:	cmp    BYTE PTR [rsp+0x70],0x0
   14002b601:	je     0x14002b61d
   14002b603:	cmp    ebx,ebp
   14002b605:	jne    0x14002b61d
   14002b607:	xor    eax,eax
   14002b609:	cmp    DWORD PTR [r12],0x2d
   14002b60e:	movsxd rcx,ebx
   14002b611:	sete   al
   14002b614:	add    rax,rdi
   14002b617:	mov    WORD PTR [rcx+rax*1],0x30
   14002b61d:	cmp    DWORD PTR [r12],0x2d
   14002b622:	jne    0x14002b62a
   14002b624:	mov    BYTE PTR [rdi],0x2d
   14002b627:	inc    rdi
   14002b62a:	cmp    DWORD PTR [r12+0x4],0x0
   14002b630:	jg     0x14002b652
   14002b632:	mov    rcx,rdi
   14002b635:	call   0x14001dae0
   14002b63a:	lea    rcx,[rdi+0x1]
   14002b63e:	mov    rdx,rdi
   14002b641:	lea    r8,[rax+0x1]
   14002b645:	call   0x140018e00
   14002b64a:	mov    BYTE PTR [rdi],0x30
   14002b64d:	inc    rdi
   14002b650:	jmp    0x14002b65a
   14002b652:	movsxd rax,DWORD PTR [r12+0x4]
   14002b657:	add    rdi,rax
   14002b65a:	test   ebp,ebp
   14002b65c:	jle    0x14002b6d5
   14002b65e:	mov    rcx,rdi
   14002b661:	lea    rsi,[rdi+0x1]
   14002b665:	call   0x14001dae0
   14002b66a:	mov    rdx,rdi
   14002b66d:	mov    rcx,rsi
   14002b670:	lea    r8,[rax+0x1]
   14002b674:	call   0x140018e00
   14002b679:	mov    r11,QWORD PTR [rsp+0x20]
   14002b67e:	mov    rax,QWORD PTR [r11+0x128]
   14002b685:	mov    rcx,QWORD PTR [rax]
   14002b688:	mov    al,BYTE PTR [rcx]
   14002b68a:	mov    BYTE PTR [rdi],al
   14002b68c:	mov    ebx,DWORD PTR [r12+0x4]
   14002b691:	test   ebx,ebx
   14002b693:	jns    0x14002b6d5
   14002b695:	neg    ebx
   14002b697:	cmp    BYTE PTR [rsp+0x70],0x0
   14002b69c:	jne    0x14002b6a7
   14002b69e:	mov    eax,ebx
   14002b6a0:	mov    ebx,ebp
   14002b6a2:	cmp    ebp,eax
   14002b6a4:	cmovge ebx,eax
   14002b6a7:	test   ebx,ebx
   14002b6a9:	je     0x14002b6c5
   14002b6ab:	mov    rcx,rsi
   14002b6ae:	call   0x14001dae0
   14002b6b3:	movsxd rcx,ebx
   14002b6b6:	mov    rdx,rsi
   14002b6b9:	lea    r8,[rax+0x1]
   14002b6bd:	add    rcx,rsi
   14002b6c0:	call   0x140018e00
   14002b6c5:	movsxd r8,ebx
   14002b6c8:	mov    edx,0x30
   14002b6cd:	mov    rcx,rsi
   14002b6d0:	call   0x140012fb0
   14002b6d5:	cmp    BYTE PTR [rsp+0x38],0x0
   14002b6da:	je     0x14002b6e8
   14002b6dc:	mov    rax,QWORD PTR [rsp+0x30]
   14002b6e1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002b6e8:	xor    eax,eax
   14002b6ea:	mov    rbx,QWORD PTR [rsp+0x50]
   14002b6ef:	mov    rbp,QWORD PTR [rsp+0x58]
   14002b6f4:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b6f9:	mov    rdi,QWORD PTR [rsp+0x68]
   14002b6fe:	add    rsp,0x40
   14002b702:	pop    r12
   14002b704:	ret    
   14002b705:	int3   
   14002b706:	int3   
   14002b707:	int3   
   14002b708:	rex push rbx
   14002b70a:	push   rbp
   14002b70b:	push   rsi
   14002b70c:	push   rdi
   14002b70d:	sub    rsp,0x78
   14002b711:	mov    rax,QWORD PTR [rip+0x14218]        # 0x14003f930
   14002b718:	xor    rax,rsp
   14002b71b:	mov    QWORD PTR [rsp+0x60],rax
   14002b720:	mov    rcx,QWORD PTR [rcx]
   14002b723:	mov    rbx,r8
   14002b726:	mov    rdi,rdx
   14002b729:	mov    esi,r9d
   14002b72c:	mov    ebp,0x16
   14002b731:	lea    r8,[rsp+0x48]
   14002b736:	lea    rdx,[rsp+0x30]
   14002b73b:	mov    r9d,ebp
   14002b73e:	call   0x14002bd88
   14002b743:	test   rdi,rdi
   14002b746:	jne    0x14002b758
   14002b748:	call   0x14001583c
   14002b74d:	mov    DWORD PTR [rax],ebp
   14002b74f:	call   0x140019f74
   14002b754:	mov    eax,ebp
   14002b756:	jmp    0x14002b7c3
   14002b758:	test   rbx,rbx
   14002b75b:	je     0x14002b748
   14002b75d:	or     rdx,0xffffffffffffffff
   14002b761:	cmp    rbx,rdx
   14002b764:	je     0x14002b776
   14002b766:	xor    eax,eax
   14002b768:	cmp    DWORD PTR [rsp+0x30],0x2d
   14002b76d:	mov    rdx,rbx
   14002b770:	sete   al
   14002b773:	sub    rdx,rax
   14002b776:	mov    r8d,DWORD PTR [rsp+0x34]
   14002b77b:	xor    ecx,ecx
   14002b77d:	lea    r9,[rsp+0x30]
   14002b782:	add    r8d,esi
   14002b785:	cmp    DWORD PTR [rsp+0x30],0x2d
   14002b78a:	sete   cl
   14002b78d:	add    rcx,rdi
   14002b790:	call   0x14002bbf4
   14002b795:	test   eax,eax
   14002b797:	je     0x14002b79e
   14002b799:	mov    BYTE PTR [rdi],0x0
   14002b79c:	jmp    0x14002b7c3
   14002b79e:	mov    rax,QWORD PTR [rsp+0xc0]
   14002b7a6:	lea    r9,[rsp+0x30]
   14002b7ab:	mov    r8d,esi
   14002b7ae:	mov    QWORD PTR [rsp+0x28],rax
   14002b7b3:	mov    rdx,rbx
   14002b7b6:	mov    rcx,rdi
   14002b7b9:	mov    BYTE PTR [rsp+0x20],0x0
   14002b7be:	call   0x14002b56c
   14002b7c3:	mov    rcx,QWORD PTR [rsp+0x60]
   14002b7c8:	xor    rcx,rsp
   14002b7cb:	call   0x140012670
   14002b7d0:	add    rsp,0x78
   14002b7d4:	pop    rdi
   14002b7d5:	pop    rsi
   14002b7d6:	pop    rbp
   14002b7d7:	pop    rbx
   14002b7d8:	ret    
   14002b7d9:	int3   
   14002b7da:	int3   
   14002b7db:	int3   
   14002b7dc:	rex push rbx
   14002b7de:	push   rbp
   14002b7df:	push   rsi
   14002b7e0:	push   rdi
   14002b7e1:	push   r12
   14002b7e3:	sub    rsp,0x80
   14002b7ea:	mov    rax,QWORD PTR [rip+0x1413f]        # 0x14003f930
   14002b7f1:	xor    rax,rsp
   14002b7f4:	mov    QWORD PTR [rsp+0x70],rax
   14002b7f9:	mov    rcx,QWORD PTR [rcx]
   14002b7fc:	mov    rdi,r8
   14002b7ff:	mov    rsi,rdx
   14002b802:	mov    ebp,r9d
   14002b805:	mov    ebx,0x16
   14002b80a:	lea    r8,[rsp+0x58]
   14002b80f:	lea    rdx,[rsp+0x40]
   14002b814:	mov    r9d,ebx
   14002b817:	call   0x14002bd88
   14002b81c:	test   rsi,rsi
   14002b81f:	jne    0x14002b834
   14002b821:	call   0x14001583c
   14002b826:	mov    DWORD PTR [rax],ebx
   14002b828:	call   0x140019f74
   14002b82d:	mov    eax,ebx
   14002b82f:	jmp    0x14002b8f5
   14002b834:	test   rdi,rdi
   14002b837:	je     0x14002b821
   14002b839:	mov    r12d,DWORD PTR [rsp+0x44]
   14002b83e:	xor    eax,eax
   14002b840:	dec    r12d
   14002b843:	cmp    DWORD PTR [rsp+0x40],0x2d
   14002b848:	sete   al
   14002b84b:	or     rdx,0xffffffffffffffff
   14002b84f:	lea    rbx,[rax+rsi*1]
   14002b853:	cmp    rdi,rdx
   14002b856:	je     0x14002b85e
   14002b858:	mov    rdx,rdi
   14002b85b:	sub    rdx,rax
   14002b85e:	lea    r9,[rsp+0x40]
   14002b863:	mov    r8d,ebp
   14002b866:	mov    rcx,rbx
   14002b869:	call   0x14002bbf4
   14002b86e:	test   eax,eax
   14002b870:	je     0x14002b877
   14002b872:	mov    BYTE PTR [rsi],0x0
   14002b875:	jmp    0x14002b8f5
   14002b877:	mov    eax,DWORD PTR [rsp+0x44]
   14002b87b:	dec    eax
   14002b87d:	cmp    r12d,eax
   14002b880:	setl   cl
   14002b883:	cmp    eax,0xfffffffc
   14002b886:	jl     0x14002b8c3
   14002b888:	cmp    eax,ebp
   14002b88a:	jge    0x14002b8c3
   14002b88c:	test   cl,cl
   14002b88e:	je     0x14002b89c
   14002b890:	mov    al,BYTE PTR [rbx]
   14002b892:	inc    rbx
   14002b895:	test   al,al
   14002b897:	jne    0x14002b890
   14002b899:	mov    BYTE PTR [rbx-0x2],al
   14002b89c:	mov    rax,QWORD PTR [rsp+0xd8]
   14002b8a4:	lea    r9,[rsp+0x40]
   14002b8a9:	mov    r8d,ebp
   14002b8ac:	mov    QWORD PTR [rsp+0x28],rax
   14002b8b1:	mov    rdx,rdi
   14002b8b4:	mov    rcx,rsi
   14002b8b7:	mov    BYTE PTR [rsp+0x20],0x1
   14002b8bc:	call   0x14002b56c
   14002b8c1:	jmp    0x14002b8f5
   14002b8c3:	mov    rax,QWORD PTR [rsp+0xd8]
   14002b8cb:	mov    r9d,DWORD PTR [rsp+0xd0]
   14002b8d3:	mov    r8d,ebp
   14002b8d6:	mov    QWORD PTR [rsp+0x30],rax
   14002b8db:	lea    rax,[rsp+0x40]
   14002b8e0:	mov    rdx,rdi
   14002b8e3:	mov    rcx,rsi
   14002b8e6:	mov    BYTE PTR [rsp+0x28],0x1
   14002b8eb:	mov    QWORD PTR [rsp+0x20],rax
   14002b8f0:	call   0x14002ae60
   14002b8f5:	mov    rcx,QWORD PTR [rsp+0x70]
   14002b8fa:	xor    rcx,rsp
   14002b8fd:	call   0x140012670
   14002b902:	add    rsp,0x80
   14002b909:	pop    r12
   14002b90b:	pop    rdi
   14002b90c:	pop    rsi
   14002b90d:	pop    rbp
   14002b90e:	pop    rbx
   14002b90f:	ret    
   14002b910:	sub    rsp,0x38
   14002b914:	cmp    r9d,0x65
   14002b918:	je     0x14002b984
   14002b91a:	cmp    r9d,0x45
   14002b91e:	je     0x14002b984
   14002b920:	cmp    r9d,0x66
   14002b924:	jne    0x14002b93c
   14002b926:	mov    rax,QWORD PTR [rsp+0x70]
   14002b92b:	mov    r9d,DWORD PTR [rsp+0x60]
   14002b930:	mov    QWORD PTR [rsp+0x20],rax
   14002b935:	call   0x14002b708
   14002b93a:	jmp    0x14002b9a0
   14002b93c:	cmp    r9d,0x61
   14002b940:	je     0x14002b966
   14002b942:	cmp    r9d,0x41
   14002b946:	je     0x14002b966
   14002b948:	mov    rax,QWORD PTR [rsp+0x70]
   14002b94d:	mov    r9d,DWORD PTR [rsp+0x60]
   14002b952:	mov    QWORD PTR [rsp+0x28],rax
   14002b957:	mov    eax,DWORD PTR [rsp+0x68]
   14002b95b:	mov    DWORD PTR [rsp+0x20],eax
   14002b95f:	call   0x14002b7dc
   14002b964:	jmp    0x14002b9a0
   14002b966:	mov    rax,QWORD PTR [rsp+0x70]
   14002b96b:	mov    r9d,DWORD PTR [rsp+0x60]
   14002b970:	mov    QWORD PTR [rsp+0x28],rax
   14002b975:	mov    eax,DWORD PTR [rsp+0x68]
   14002b979:	mov    DWORD PTR [rsp+0x20],eax
   14002b97d:	call   0x14002b18c
   14002b982:	jmp    0x14002b9a0
   14002b984:	mov    rax,QWORD PTR [rsp+0x70]
   14002b989:	mov    r9d,DWORD PTR [rsp+0x60]
   14002b98e:	mov    QWORD PTR [rsp+0x28],rax
   14002b993:	mov    eax,DWORD PTR [rsp+0x68]
   14002b997:	mov    DWORD PTR [rsp+0x20],eax
   14002b99b:	call   0x14002b094
   14002b9a0:	add    rsp,0x38
   14002b9a4:	ret    
   14002b9a5:	int3   
   14002b9a6:	int3   
   14002b9a7:	int3   
   14002b9a8:	sub    rsp,0x48
   14002b9ac:	mov    eax,DWORD PTR [rsp+0x78]
   14002b9b0:	and    QWORD PTR [rsp+0x30],0x0
   14002b9b6:	mov    DWORD PTR [rsp+0x28],eax
   14002b9ba:	mov    eax,DWORD PTR [rsp+0x70]
   14002b9be:	mov    DWORD PTR [rsp+0x20],eax
   14002b9c2:	call   0x14002b910
   14002b9c7:	add    rsp,0x48
   14002b9cb:	ret    
   14002b9cc:	mov    r9,rcx
   14002b9cf:	xor    r8d,r8d
   14002b9d2:	mov    al,BYTE PTR [rcx]
   14002b9d4:	inc    rcx
   14002b9d7:	test   al,al
   14002b9d9:	jne    0x14002b9d2
   14002b9db:	dec    rcx
   14002b9de:	cmp    rcx,r9
   14002b9e1:	je     0x14002b9e7
   14002b9e3:	cmp    BYTE PTR [rcx],dl
   14002b9e5:	jne    0x14002b9db
   14002b9e7:	cmp    BYTE PTR [rcx],dl
   14002b9e9:	cmove  r8,rcx
   14002b9ed:	mov    rax,r8
   14002b9f0:	ret    
   14002b9f1:	int3   
   14002b9f2:	int3   
   14002b9f3:	int3   
   14002b9f4:	mov    QWORD PTR [rsp+0x18],rbx
   14002b9f9:	mov    QWORD PTR [rsp+0x20],rdi
   14002b9fe:	push   rbp
   14002b9ff:	mov    rbp,rsp
   14002ba02:	sub    rsp,0x80
   14002ba09:	mov    rax,QWORD PTR [rip+0x13f20]        # 0x14003f930
   14002ba10:	xor    rax,rsp
   14002ba13:	mov    QWORD PTR [rbp-0x8],rax
   14002ba17:	mov    rdi,rcx
   14002ba1a:	mov    rbx,rdx
   14002ba1d:	lea    rcx,[rbp-0x40]
   14002ba21:	mov    rdx,r8
   14002ba24:	call   0x140012690
   14002ba29:	lea    r11,[rbp-0x40]
   14002ba2d:	lea    rdx,[rbp-0x20]
   14002ba31:	mov    QWORD PTR [rsp+0x38],r11
   14002ba36:	and    DWORD PTR [rsp+0x30],0x0
   14002ba3b:	and    DWORD PTR [rsp+0x28],0x0
   14002ba40:	and    DWORD PTR [rsp+0x20],0x0
   14002ba45:	lea    rcx,[rbp-0x18]
   14002ba49:	xor    r9d,r9d
   14002ba4c:	mov    r8,rbx
   14002ba4f:	call   0x14002c9d8
   14002ba54:	lea    rcx,[rbp-0x18]
   14002ba58:	mov    rdx,rdi
   14002ba5b:	mov    ebx,eax
   14002ba5d:	call   0x14002be40
   14002ba62:	mov    edx,0x3
   14002ba67:	test   dl,bl
   14002ba69:	jne    0x14002baa2
   14002ba6b:	cmp    eax,0x1
   14002ba6e:	jne    0x14002ba85
   14002ba70:	cmp    BYTE PTR [rbp-0x28],0x0
   14002ba74:	je     0x14002ba81
   14002ba76:	mov    rcx,QWORD PTR [rbp-0x30]
   14002ba7a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002ba81:	mov    eax,edx
   14002ba83:	jmp    0x14002bad2
   14002ba85:	cmp    eax,0x2
   14002ba88:	jne    0x14002babf
   14002ba8a:	cmp    BYTE PTR [rbp-0x28],0x0
   14002ba8e:	je     0x14002ba9b
   14002ba90:	mov    rax,QWORD PTR [rbp-0x30]
   14002ba94:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002ba9b:	mov    eax,0x4
   14002baa0:	jmp    0x14002bad2
   14002baa2:	test   bl,0x1
   14002baa5:	jne    0x14002ba8a
   14002baa7:	test   bl,0x2
   14002baaa:	je     0x14002babf
   14002baac:	cmp    BYTE PTR [rbp-0x28],0x0
   14002bab0:	je     0x14002ba81
   14002bab2:	mov    rax,QWORD PTR [rbp-0x30]
   14002bab6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002babd:	jmp    0x14002ba81
   14002babf:	cmp    BYTE PTR [rbp-0x28],0x0
   14002bac3:	je     0x14002bad0
   14002bac5:	mov    rax,QWORD PTR [rbp-0x30]
   14002bac9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002bad0:	xor    eax,eax
   14002bad2:	mov    rcx,QWORD PTR [rbp-0x8]
   14002bad6:	xor    rcx,rsp
   14002bad9:	call   0x140012670
   14002bade:	lea    r11,[rsp+0x80]
   14002bae6:	mov    rbx,QWORD PTR [r11+0x20]
   14002baea:	mov    rdi,QWORD PTR [r11+0x28]
   14002baee:	mov    rsp,r11
   14002baf1:	pop    rbp
   14002baf2:	ret    
   14002baf3:	int3   
   14002baf4:	mov    QWORD PTR [rsp+0x18],rbx
   14002baf9:	mov    QWORD PTR [rsp+0x20],rdi
   14002bafe:	push   rbp
   14002baff:	mov    rbp,rsp
   14002bb02:	sub    rsp,0x80
   14002bb09:	mov    rax,QWORD PTR [rip+0x13e20]        # 0x14003f930
   14002bb10:	xor    rax,rsp
   14002bb13:	mov    QWORD PTR [rbp-0x8],rax
   14002bb17:	mov    rdi,rcx
   14002bb1a:	mov    rbx,rdx
   14002bb1d:	lea    rcx,[rbp-0x40]
   14002bb21:	mov    rdx,r8
   14002bb24:	call   0x140012690
   14002bb29:	lea    r11,[rbp-0x40]
   14002bb2d:	lea    rdx,[rbp-0x20]
   14002bb31:	mov    QWORD PTR [rsp+0x38],r11
   14002bb36:	and    DWORD PTR [rsp+0x30],0x0
   14002bb3b:	and    DWORD PTR [rsp+0x28],0x0
   14002bb40:	and    DWORD PTR [rsp+0x20],0x0
   14002bb45:	lea    rcx,[rbp-0x18]
   14002bb49:	xor    r9d,r9d
   14002bb4c:	mov    r8,rbx
   14002bb4f:	call   0x14002c9d8
   14002bb54:	lea    rcx,[rbp-0x18]
   14002bb58:	mov    rdx,rdi
   14002bb5b:	mov    ebx,eax
   14002bb5d:	call   0x14002c40c
   14002bb62:	mov    edx,0x3
   14002bb67:	test   dl,bl
   14002bb69:	jne    0x14002bba2
   14002bb6b:	cmp    eax,0x1
   14002bb6e:	jne    0x14002bb85
   14002bb70:	cmp    BYTE PTR [rbp-0x28],0x0
   14002bb74:	je     0x14002bb81
   14002bb76:	mov    rcx,QWORD PTR [rbp-0x30]
   14002bb7a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002bb81:	mov    eax,edx
   14002bb83:	jmp    0x14002bbd2
   14002bb85:	cmp    eax,0x2
   14002bb88:	jne    0x14002bbbf
   14002bb8a:	cmp    BYTE PTR [rbp-0x28],0x0
   14002bb8e:	je     0x14002bb9b
   14002bb90:	mov    rax,QWORD PTR [rbp-0x30]
   14002bb94:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002bb9b:	mov    eax,0x4
   14002bba0:	jmp    0x14002bbd2
   14002bba2:	test   bl,0x1
   14002bba5:	jne    0x14002bb8a
   14002bba7:	test   bl,0x2
   14002bbaa:	je     0x14002bbbf
   14002bbac:	cmp    BYTE PTR [rbp-0x28],0x0
   14002bbb0:	je     0x14002bb81
   14002bbb2:	mov    rax,QWORD PTR [rbp-0x30]
   14002bbb6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002bbbd:	jmp    0x14002bb81
   14002bbbf:	cmp    BYTE PTR [rbp-0x28],0x0
   14002bbc3:	je     0x14002bbd0
   14002bbc5:	mov    rax,QWORD PTR [rbp-0x30]
   14002bbc9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002bbd0:	xor    eax,eax
   14002bbd2:	mov    rcx,QWORD PTR [rbp-0x8]
   14002bbd6:	xor    rcx,rsp
   14002bbd9:	call   0x140012670
   14002bbde:	lea    r11,[rsp+0x80]
   14002bbe6:	mov    rbx,QWORD PTR [r11+0x20]
   14002bbea:	mov    rdi,QWORD PTR [r11+0x28]
   14002bbee:	mov    rsp,r11
   14002bbf1:	pop    rbp
   14002bbf2:	ret    
   14002bbf3:	int3   
   14002bbf4:	mov    QWORD PTR [rsp+0x8],rbx
   14002bbf9:	push   rdi
   14002bbfa:	sub    rsp,0x20
   14002bbfe:	mov    r10,QWORD PTR [r9+0x10]
   14002bc02:	xor    r11d,r11d
   14002bc05:	mov    rbx,rcx
   14002bc08:	test   rcx,rcx
   14002bc0b:	jne    0x14002bc25
   14002bc0d:	call   0x14001583c
   14002bc12:	mov    ebx,0x16
   14002bc17:	mov    DWORD PTR [rax],ebx
   14002bc19:	call   0x140019f74
   14002bc1e:	mov    eax,ebx
   14002bc20:	jmp    0x14002bcb5
   14002bc25:	test   rdx,rdx
   14002bc28:	je     0x14002bc0d
   14002bc2a:	mov    eax,r11d
   14002bc2d:	test   r8d,r8d
   14002bc30:	mov    BYTE PTR [rcx],r11b
   14002bc33:	cmovg  eax,r8d
   14002bc37:	inc    eax
   14002bc39:	cdqe   
   14002bc3b:	cmp    rdx,rax
   14002bc3e:	ja     0x14002bc4c
   14002bc40:	call   0x14001583c
   14002bc45:	mov    ebx,0x22
   14002bc4a:	jmp    0x14002bc17
   14002bc4c:	mov    BYTE PTR [rcx],0x30
   14002bc4f:	lea    rax,[rcx+0x1]
   14002bc53:	jmp    0x14002bc70
   14002bc55:	cmp    BYTE PTR [r10],r11b
   14002bc58:	je     0x14002bc63
   14002bc5a:	movsx  ecx,BYTE PTR [r10]
   14002bc5e:	inc    r10
   14002bc61:	jmp    0x14002bc68
   14002bc63:	mov    ecx,0x30
   14002bc68:	mov    BYTE PTR [rax],cl
   14002bc6a:	inc    rax
   14002bc6d:	dec    r8d
   14002bc70:	test   r8d,r8d
   14002bc73:	jg     0x14002bc55
   14002bc75:	mov    BYTE PTR [rax],r11b
   14002bc78:	js     0x14002bc8f
   14002bc7a:	cmp    BYTE PTR [r10],0x35
   14002bc7e:	jl     0x14002bc8f
   14002bc80:	jmp    0x14002bc85
   14002bc82:	mov    BYTE PTR [rax],0x30
   14002bc85:	dec    rax
   14002bc88:	cmp    BYTE PTR [rax],0x39
   14002bc8b:	je     0x14002bc82
   14002bc8d:	inc    BYTE PTR [rax]
   14002bc8f:	cmp    BYTE PTR [rbx],0x31
   14002bc92:	jne    0x14002bc9a
   14002bc94:	inc    DWORD PTR [r9+0x4]
   14002bc98:	jmp    0x14002bcb3
   14002bc9a:	lea    rcx,[rbx+0x1]
   14002bc9e:	call   0x14001dae0
   14002bca3:	lea    rdx,[rbx+0x1]
   14002bca7:	mov    rcx,rbx
   14002bcaa:	lea    r8,[rax+0x1]
   14002bcae:	call   0x140018e00
   14002bcb3:	xor    eax,eax
   14002bcb5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bcba:	add    rsp,0x20
   14002bcbe:	pop    rdi
   14002bcbf:	ret    
   14002bcc0:	mov    QWORD PTR [rsp+0x8],rbx
   14002bcc5:	movzx  r11d,WORD PTR [rdx+0x6]
   14002bcca:	mov    r9,rcx
   14002bccd:	mov    ecx,DWORD PTR [rdx+0x4]
   14002bcd0:	movzx  r8d,r11w
   14002bcd4:	mov    eax,0x8000
   14002bcd9:	mov    r10d,0x7ff
   14002bcdf:	shr    r8w,0x4
   14002bce4:	and    r11w,ax
   14002bce8:	mov    eax,DWORD PTR [rdx]
   14002bcea:	and    r8w,r10w
   14002bcee:	and    ecx,0xfffff
   14002bcf4:	mov    ebx,0x80000000
   14002bcf9:	movzx  edx,r8w
   14002bcfd:	test   edx,edx
   14002bcff:	je     0x14002bd19
   14002bd01:	cmp    edx,r10d
   14002bd04:	je     0x14002bd11
   14002bd06:	mov    edx,0x3c00
   14002bd0b:	add    r8w,dx
   14002bd0f:	jmp    0x14002bd35
   14002bd11:	mov    r8d,0x7fff
   14002bd17:	jmp    0x14002bd35
   14002bd19:	test   ecx,ecx
   14002bd1b:	jne    0x14002bd2a
   14002bd1d:	test   eax,eax
   14002bd1f:	jne    0x14002bd2a
   14002bd21:	and    DWORD PTR [r9+0x4],eax
   14002bd25:	and    DWORD PTR [r9],eax
   14002bd28:	jmp    0x14002bd7b
   14002bd2a:	mov    edx,0x3c01
   14002bd2f:	add    r8w,dx
   14002bd33:	xor    ebx,ebx
   14002bd35:	mov    r10d,eax
   14002bd38:	shl    ecx,0xb
   14002bd3b:	shr    r10d,0x15
   14002bd3f:	or     r10d,ecx
   14002bd42:	or     r10d,ebx
   14002bd45:	shl    eax,0xb
   14002bd48:	mov    DWORD PTR [r9],eax
   14002bd4b:	jmp    0x14002bd6e
   14002bd4d:	mov    edx,DWORD PTR [r9]
   14002bd50:	lea    eax,[r10+r10*1]
   14002bd54:	mov    ecx,edx
   14002bd56:	shr    ecx,0x1f
   14002bd59:	mov    r10d,ecx
   14002bd5c:	or     r10d,eax
   14002bd5f:	lea    eax,[rdx+rdx*1]
   14002bd62:	mov    DWORD PTR [r9],eax
   14002bd65:	mov    eax,0xffff
   14002bd6a:	add    r8w,ax
   14002bd6e:	mov    DWORD PTR [r9+0x4],r10d
   14002bd72:	test   r10d,r10d
   14002bd75:	jns    0x14002bd4d
   14002bd77:	or     r11w,r8w
   14002bd7b:	mov    rbx,QWORD PTR [rsp+0x8]
   14002bd80:	mov    WORD PTR [r9+0x8],r11w
   14002bd85:	ret    
   14002bd86:	int3   
   14002bd87:	int3   
   14002bd88:	rex push rbp
   14002bd8a:	push   rbx
   14002bd8b:	push   rsi
   14002bd8c:	push   rdi
   14002bd8d:	lea    rbp,[rsp-0x3f]
   14002bd92:	sub    rsp,0x88
   14002bd99:	mov    rax,QWORD PTR [rip+0x13b90]        # 0x14003f930
   14002bda0:	xor    rax,rsp
   14002bda3:	mov    QWORD PTR [rbp+0x27],rax
   14002bda7:	mov    rdi,rdx
   14002bdaa:	mov    QWORD PTR [rbp-0x19],rcx
   14002bdae:	lea    rdx,[rbp-0x19]
   14002bdb2:	lea    rcx,[rbp-0x9]
   14002bdb6:	mov    rbx,r9
   14002bdb9:	mov    rsi,r8
   14002bdbc:	call   0x14002bcc0
   14002bdc1:	mov    rax,QWORD PTR [rbp-0x9]
   14002bdc5:	xor    r8d,r8d
   14002bdc8:	mov    QWORD PTR [rbp-0x19],rax
   14002bdcc:	movzx  eax,WORD PTR [rbp-0x1]
   14002bdd0:	lea    r9,[rbp+0x7]
   14002bdd4:	lea    edx,[r8+0x11]
   14002bdd8:	lea    rcx,[rbp-0x19]
   14002bddc:	mov    WORD PTR [rbp-0x11],ax
   14002bde0:	call   0x14002d23c
   14002bde5:	movsx  ecx,BYTE PTR [rbp+0x9]
   14002bde9:	lea    r8,[rbp+0xb]
   14002bded:	mov    DWORD PTR [rdi],ecx
   14002bdef:	movsx  ecx,WORD PTR [rbp+0x7]
   14002bdf3:	mov    rdx,rbx
   14002bdf6:	mov    DWORD PTR [rdi+0x4],ecx
   14002bdf9:	mov    rcx,rsi
   14002bdfc:	mov    DWORD PTR [rdi+0x8],eax
   14002bdff:	call   0x14001dc7c
   14002be04:	test   eax,eax
   14002be06:	jne    0x14002be27
   14002be08:	mov    QWORD PTR [rdi+0x10],rsi
   14002be0c:	mov    rax,rdi
   14002be0f:	mov    rcx,QWORD PTR [rbp+0x27]
   14002be13:	xor    rcx,rsp
   14002be16:	call   0x140012670
   14002be1b:	add    rsp,0x88
   14002be22:	pop    rdi
   14002be23:	pop    rsi
   14002be24:	pop    rbx
   14002be25:	pop    rbp
   14002be26:	ret    
   14002be27:	and    QWORD PTR [rsp+0x20],0x0
   14002be2d:	xor    r9d,r9d
   14002be30:	xor    r8d,r8d
   14002be33:	xor    edx,edx
   14002be35:	xor    ecx,ecx
   14002be37:	call   0x140019ed0
   14002be3c:	int3   
   14002be3d:	int3   
   14002be3e:	int3   
   14002be3f:	int3   
   14002be40:	mov    QWORD PTR [rsp+0x18],rbx
   14002be45:	push   rbp
   14002be46:	push   rsi
   14002be47:	push   rdi
   14002be48:	push   r12
   14002be4a:	push   r13
   14002be4c:	push   r14
   14002be4e:	push   r15
   14002be50:	mov    rbp,rsp
   14002be53:	sub    rsp,0x60
   14002be57:	mov    rax,QWORD PTR [rip+0x13ad2]        # 0x14003f930
   14002be5e:	xor    rax,rsp
   14002be61:	mov    QWORD PTR [rbp-0x10],rax
   14002be65:	movzx  eax,WORD PTR [rcx+0xa]
   14002be69:	xor    ebx,ebx
   14002be6b:	mov    r15d,0x1f
   14002be71:	mov    edi,eax
   14002be73:	and    eax,0x8000
   14002be78:	mov    QWORD PTR [rbp-0x38],rdx
   14002be7c:	mov    DWORD PTR [rbp-0x3c],eax
   14002be7f:	mov    eax,DWORD PTR [rcx+0x6]
   14002be82:	and    edi,0x7fff
   14002be88:	mov    DWORD PTR [rbp-0x30],eax
   14002be8b:	mov    eax,DWORD PTR [rcx+0x2]
   14002be8e:	sub    edi,0x3fff
   14002be94:	mov    DWORD PTR [rbp-0x2c],eax
   14002be97:	movzx  eax,WORD PTR [rcx]
   14002be9a:	lea    esi,[rbx+0x1]
   14002be9d:	shl    eax,0x10
   14002bea0:	lea    r12d,[r15-0x1c]
   14002bea4:	mov    DWORD PTR [rbp-0x28],eax
   14002bea7:	cmp    edi,0xffffc001
   14002bead:	jne    0x14002bed8
   14002beaf:	mov    r8d,ebx
   14002beb2:	mov    eax,ebx
   14002beb4:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   14002beb8:	jne    0x14002bec7
   14002beba:	add    rax,rsi
   14002bebd:	cmp    rax,r12
   14002bec0:	jl     0x14002beb4
   14002bec2:	jmp    0x14002c3a9
   14002bec7:	mov    QWORD PTR [rbp-0x30],rbx
   14002becb:	mov    DWORD PTR [rbp-0x28],ebx
   14002bece:	mov    ebx,0x2
   14002bed3:	jmp    0x14002c3a9
   14002bed8:	mov    r9d,DWORD PTR [rip+0x15199]        # 0x140041078
   14002bedf:	lea    rcx,[rbp-0x30]
   14002bee3:	mov    r11d,r15d
   14002bee6:	mov    rax,QWORD PTR [rcx]
   14002bee9:	or     r14d,0xffffffff
   14002beed:	mov    DWORD PTR [rbp-0x40],edi
   14002bef0:	mov    QWORD PTR [rbp-0x20],rax
   14002bef4:	mov    eax,DWORD PTR [rcx+0x8]
   14002bef7:	mov    r13d,ebx
   14002befa:	mov    DWORD PTR [rbp-0x18],eax
   14002befd:	mov    eax,r9d
   14002bf00:	cdq    
   14002bf01:	and    edx,r15d
   14002bf04:	add    eax,edx
   14002bf06:	mov    r10d,eax
   14002bf09:	and    eax,r15d
   14002bf0c:	sub    eax,edx
   14002bf0e:	sar    r10d,0x5
   14002bf12:	sub    r11d,eax
   14002bf15:	movsxd rax,r10d
   14002bf18:	mov    ecx,DWORD PTR [rbp+rax*4-0x30]
   14002bf1c:	bt     ecx,r11d
   14002bf20:	jae    0x14002bfbb
   14002bf26:	mov    ecx,r11d
   14002bf29:	mov    eax,r14d
   14002bf2c:	movsxd r8,r10d
   14002bf2f:	shl    eax,cl
   14002bf31:	not    eax
   14002bf33:	test   DWORD PTR [rbp+r8*4-0x30],eax
   14002bf38:	jne    0x14002bf52
   14002bf3a:	lea    eax,[rsi+r8*1]
   14002bf3e:	cdqe   
   14002bf40:	jmp    0x14002bf4b
   14002bf42:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   14002bf46:	jne    0x14002bf52
   14002bf48:	add    rax,rsi
   14002bf4b:	cmp    rax,r12
   14002bf4e:	jl     0x14002bf42
   14002bf50:	jmp    0x14002bfbb
   14002bf52:	lea    eax,[r9-0x1]
   14002bf56:	mov    ecx,r15d
   14002bf59:	cdq    
   14002bf5a:	and    edx,r15d
   14002bf5d:	add    eax,edx
   14002bf5f:	mov    r8d,eax
   14002bf62:	and    eax,r15d
   14002bf65:	sub    eax,edx
   14002bf67:	sar    r8d,0x5
   14002bf6b:	mov    edx,esi
   14002bf6d:	sub    ecx,eax
   14002bf6f:	movsxd r9,r8d
   14002bf72:	mov    eax,DWORD PTR [rbp+r9*4-0x30]
   14002bf77:	shl    edx,cl
   14002bf79:	lea    ecx,[rax+rdx*1]
   14002bf7c:	cmp    ecx,eax
   14002bf7e:	jb     0x14002bf84
   14002bf80:	cmp    ecx,edx
   14002bf82:	jae    0x14002bf87
   14002bf84:	mov    r13d,esi
   14002bf87:	sub    r8d,esi
   14002bf8a:	mov    DWORD PTR [rbp+r9*4-0x30],ecx
   14002bf8f:	movsxd rdx,r8d
   14002bf92:	js     0x14002bfbb
   14002bf94:	test   r13d,r13d
   14002bf97:	je     0x14002bfbb
   14002bf99:	mov    eax,DWORD PTR [rbp+rdx*4-0x30]
   14002bf9d:	mov    r13d,ebx
   14002bfa0:	lea    r8d,[rax+0x1]
   14002bfa4:	cmp    r8d,eax
   14002bfa7:	jb     0x14002bfae
   14002bfa9:	cmp    r8d,esi
   14002bfac:	jae    0x14002bfb1
   14002bfae:	mov    r13d,esi
   14002bfb1:	mov    DWORD PTR [rbp+rdx*4-0x30],r8d
   14002bfb6:	sub    rdx,rsi
   14002bfb9:	jns    0x14002bf94
   14002bfbb:	mov    ecx,r11d
   14002bfbe:	mov    eax,r14d
   14002bfc1:	shl    eax,cl
   14002bfc3:	movsxd rcx,r10d
   14002bfc6:	and    DWORD PTR [rbp+rcx*4-0x30],eax
   14002bfca:	lea    eax,[r10+0x1]
   14002bfce:	movsxd rdx,eax
   14002bfd1:	cmp    rdx,r12
   14002bfd4:	jge    0x14002bfec
   14002bfd6:	lea    rcx,[rbp+rdx*4-0x30]
   14002bfdb:	mov    r8,r12
   14002bfde:	sub    r8,rdx
   14002bfe1:	xor    edx,edx
   14002bfe3:	shl    r8,0x2
   14002bfe7:	call   0x140012fb0
   14002bfec:	test   r13d,r13d
   14002bfef:	je     0x14002bff3
   14002bff1:	add    edi,esi
   14002bff3:	mov    edx,DWORD PTR [rip+0x1507b]        # 0x140041074
   14002bff9:	mov    eax,edx
   14002bffb:	sub    eax,DWORD PTR [rip+0x15077]        # 0x140041078
   14002c001:	cmp    edi,eax
   14002c003:	jge    0x14002c019
   14002c005:	mov    QWORD PTR [rbp-0x30],rbx
   14002c009:	mov    DWORD PTR [rbp-0x28],ebx
   14002c00c:	mov    r8d,ebx
   14002c00f:	mov    ebx,0x2
   14002c014:	jmp    0x14002c3a5
   14002c019:	cmp    edi,edx
   14002c01b:	jg     0x14002c260
   14002c021:	sub    edx,DWORD PTR [rbp-0x40]
   14002c024:	lea    rax,[rbp-0x20]
   14002c028:	mov    edi,r14d
   14002c02b:	mov    rcx,QWORD PTR [rax]
   14002c02e:	mov    r9d,ebx
   14002c031:	lea    r8,[rbp-0x30]
   14002c035:	mov    QWORD PTR [rbp-0x30],rcx
   14002c039:	mov    ecx,DWORD PTR [rax+0x8]
   14002c03c:	mov    eax,edx
   14002c03e:	cdq    
   14002c03f:	mov    DWORD PTR [rbp-0x28],ecx
   14002c042:	mov    r10,r12
   14002c045:	and    edx,r15d
   14002c048:	add    eax,edx
   14002c04a:	mov    r11d,eax
   14002c04d:	and    eax,r15d
   14002c050:	mov    r15d,0x20
   14002c056:	sub    eax,edx
   14002c058:	sar    r11d,0x5
   14002c05c:	mov    ecx,eax
   14002c05e:	mov    r13d,eax
   14002c061:	shl    edi,cl
   14002c063:	sub    r15d,eax
   14002c066:	not    edi
   14002c068:	mov    edx,DWORD PTR [r8]
   14002c06b:	mov    ecx,r13d
   14002c06e:	mov    eax,edx
   14002c070:	shr    edx,cl
   14002c072:	mov    ecx,r15d
   14002c075:	or     edx,r9d
   14002c078:	and    eax,edi
   14002c07a:	mov    DWORD PTR [rbp-0x40],eax
   14002c07d:	mov    DWORD PTR [r8],edx
   14002c080:	add    r8,0x4
   14002c084:	mov    r9d,DWORD PTR [rbp-0x40]
   14002c088:	shl    r9d,cl
   14002c08b:	sub    r10,rsi
   14002c08e:	jne    0x14002c068
   14002c090:	lea    edi,[r10+0x2]
   14002c094:	movsxd r10,r11d
   14002c097:	mov    r9,r10
   14002c09a:	mov    r8d,edi
   14002c09d:	neg    r9
   14002c0a0:	cmp    r8,r10
   14002c0a3:	jl     0x14002c0ba
   14002c0a5:	mov    rdx,r8
   14002c0a8:	shl    rdx,0x2
   14002c0ac:	lea    rax,[rdx+r9*4]
   14002c0b0:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14002c0b4:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14002c0b8:	jmp    0x14002c0bf
   14002c0ba:	mov    DWORD PTR [rbp+r8*4-0x30],ebx
   14002c0bf:	sub    r8,rsi
   14002c0c2:	jns    0x14002c0a0
   14002c0c4:	mov    r9d,DWORD PTR [rip+0x14fad]        # 0x140041078
   14002c0cb:	mov    r13d,0x1f
   14002c0d1:	mov    eax,r9d
   14002c0d4:	mov    r11d,r13d
   14002c0d7:	cdq    
   14002c0d8:	and    edx,r13d
   14002c0db:	add    eax,edx
   14002c0dd:	mov    r10d,eax
   14002c0e0:	and    eax,r13d
   14002c0e3:	sar    r10d,0x5
   14002c0e7:	sub    eax,edx
   14002c0e9:	movsxd r15,r10d
   14002c0ec:	sub    r11d,eax
   14002c0ef:	mov    ecx,DWORD PTR [rbp+r15*4-0x30]
   14002c0f4:	bt     ecx,r11d
   14002c0f8:	jae    0x14002c195
   14002c0fe:	mov    ecx,r11d
   14002c101:	mov    eax,r14d
   14002c104:	movsxd r8,r10d
   14002c107:	shl    eax,cl
   14002c109:	not    eax
   14002c10b:	test   DWORD PTR [rbp+r8*4-0x30],eax
   14002c110:	jne    0x14002c12a
   14002c112:	lea    eax,[rsi+r8*1]
   14002c116:	cdqe   
   14002c118:	jmp    0x14002c123
   14002c11a:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   14002c11e:	jne    0x14002c12a
   14002c120:	add    rax,rsi
   14002c123:	cmp    rax,r12
   14002c126:	jl     0x14002c11a
   14002c128:	jmp    0x14002c195
   14002c12a:	lea    eax,[r9-0x1]
   14002c12e:	mov    ecx,r13d
   14002c131:	mov    r9d,esi
   14002c134:	cdq    
   14002c135:	and    edx,r13d
   14002c138:	add    eax,edx
   14002c13a:	mov    r8d,eax
   14002c13d:	and    eax,r13d
   14002c140:	sub    eax,edx
   14002c142:	sar    r8d,0x5
   14002c146:	sub    ecx,eax
   14002c148:	movsxd r13,r8d
   14002c14b:	mov    eax,DWORD PTR [rbp+r13*4-0x30]
   14002c150:	shl    r9d,cl
   14002c153:	mov    ecx,ebx
   14002c155:	lea    edx,[rax+r9*1]
   14002c159:	cmp    edx,eax
   14002c15b:	jb     0x14002c162
   14002c15d:	cmp    edx,r9d
   14002c160:	jae    0x14002c164
   14002c162:	mov    ecx,esi
   14002c164:	sub    r8d,esi
   14002c167:	mov    DWORD PTR [rbp+r13*4-0x30],edx
   14002c16c:	movsxd rdx,r8d
   14002c16f:	js     0x14002c195
   14002c171:	test   ecx,ecx
   14002c173:	je     0x14002c195
   14002c175:	mov    eax,DWORD PTR [rbp+rdx*4-0x30]
   14002c179:	mov    ecx,ebx
   14002c17b:	lea    r8d,[rax+0x1]
   14002c17f:	cmp    r8d,eax
   14002c182:	jb     0x14002c189
   14002c184:	cmp    r8d,esi
   14002c187:	jae    0x14002c18b
   14002c189:	mov    ecx,esi
   14002c18b:	mov    DWORD PTR [rbp+rdx*4-0x30],r8d
   14002c190:	sub    rdx,rsi
   14002c193:	jns    0x14002c171
   14002c195:	mov    ecx,r11d
   14002c198:	mov    eax,r14d
   14002c19b:	shl    eax,cl
   14002c19d:	and    DWORD PTR [rbp+r15*4-0x30],eax
   14002c1a2:	lea    eax,[r10+0x1]
   14002c1a6:	movsxd rdx,eax
   14002c1a9:	cmp    rdx,r12
   14002c1ac:	jge    0x14002c1c4
   14002c1ae:	lea    rcx,[rbp+rdx*4-0x30]
   14002c1b3:	mov    r8,r12
   14002c1b6:	sub    r8,rdx
   14002c1b9:	xor    edx,edx
   14002c1bb:	shl    r8,0x2
   14002c1bf:	call   0x140012fb0
   14002c1c4:	mov    eax,DWORD PTR [rip+0x14eb2]        # 0x14004107c
   14002c1ca:	mov    r15d,0x1f
   14002c1d0:	mov    r9d,ebx
   14002c1d3:	inc    eax
   14002c1d5:	lea    r13d,[r15+0x1]
   14002c1d9:	lea    r8,[rbp-0x30]
   14002c1dd:	cdq    
   14002c1de:	and    edx,r15d
   14002c1e1:	add    eax,edx
   14002c1e3:	mov    r10d,eax
   14002c1e6:	and    eax,r15d
   14002c1e9:	sub    eax,edx
   14002c1eb:	sar    r10d,0x5
   14002c1ef:	mov    ecx,eax
   14002c1f1:	mov    r11d,eax
   14002c1f4:	shl    r14d,cl
   14002c1f7:	sub    r13d,eax
   14002c1fa:	not    r14d
   14002c1fd:	mov    edx,DWORD PTR [r8]
   14002c200:	mov    ecx,r11d
   14002c203:	mov    eax,edx
   14002c205:	shr    edx,cl
   14002c207:	mov    ecx,r13d
   14002c20a:	or     edx,r9d
   14002c20d:	and    eax,r14d
   14002c210:	mov    DWORD PTR [rbp-0x40],eax
   14002c213:	mov    DWORD PTR [r8],edx
   14002c216:	add    r8,0x4
   14002c21a:	mov    r9d,DWORD PTR [rbp-0x40]
   14002c21e:	shl    r9d,cl
   14002c221:	sub    r12,rsi
   14002c224:	jne    0x14002c1fd
   14002c226:	movsxd r10,r10d
   14002c229:	mov    r8,rdi
   14002c22c:	mov    r9,r10
   14002c22f:	neg    r9
   14002c232:	cmp    r8,r10
   14002c235:	jl     0x14002c24c
   14002c237:	mov    rdx,r8
   14002c23a:	shl    rdx,0x2
   14002c23e:	lea    rax,[rdx+r9*4]
   14002c242:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14002c246:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14002c24a:	jmp    0x14002c251
   14002c24c:	mov    DWORD PTR [rbp+r8*4-0x30],ebx
   14002c251:	sub    r8,rsi
   14002c254:	jns    0x14002c232
   14002c256:	mov    r8d,ebx
   14002c259:	mov    ebx,edi
   14002c25b:	jmp    0x14002c3a5
   14002c260:	mov    eax,DWORD PTR [rip+0x14e16]        # 0x14004107c
   14002c266:	cdq    
   14002c267:	and    edx,r15d
   14002c26a:	add    eax,edx
   14002c26c:	cmp    edi,DWORD PTR [rip+0x14dfe]        # 0x140041070
   14002c272:	jl     0x14002c317
   14002c278:	mov    r10d,eax
   14002c27b:	and    eax,r15d
   14002c27e:	mov    edi,0x20
   14002c283:	sub    eax,edx
   14002c285:	mov    QWORD PTR [rbp-0x30],rbx
   14002c289:	bts    DWORD PTR [rbp-0x30],0x1f
   14002c28e:	mov    ecx,eax
   14002c290:	sar    r10d,0x5
   14002c294:	mov    DWORD PTR [rbp-0x28],ebx
   14002c297:	shl    r14d,cl
   14002c29a:	mov    r11d,eax
   14002c29d:	mov    r9d,ebx
   14002c2a0:	not    r14d
   14002c2a3:	sub    edi,eax
   14002c2a5:	lea    r8,[rbp-0x30]
   14002c2a9:	mov    edx,DWORD PTR [r8]
   14002c2ac:	mov    ecx,r11d
   14002c2af:	mov    eax,edx
   14002c2b1:	shr    edx,cl
   14002c2b3:	mov    ecx,edi
   14002c2b5:	or     edx,r9d
   14002c2b8:	and    eax,r14d
   14002c2bb:	mov    DWORD PTR [rbp-0x40],eax
   14002c2be:	mov    DWORD PTR [r8],edx
   14002c2c1:	add    r8,0x4
   14002c2c5:	mov    r9d,DWORD PTR [rbp-0x40]
   14002c2c9:	shl    r9d,cl
   14002c2cc:	sub    r12,rsi
   14002c2cf:	jne    0x14002c2a9
   14002c2d1:	movsxd r9,r10d
   14002c2d4:	lea    edi,[r12+0x2]
   14002c2d9:	mov    r8,r9
   14002c2dc:	neg    r8
   14002c2df:	cmp    rdi,r9
   14002c2e2:	jl     0x14002c2f9
   14002c2e4:	mov    rdx,rdi
   14002c2e7:	shl    rdx,0x2
   14002c2eb:	lea    rax,[rdx+r8*4]
   14002c2ef:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14002c2f3:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14002c2f7:	jmp    0x14002c2fd
   14002c2f9:	mov    DWORD PTR [rbp+rdi*4-0x30],ebx
   14002c2fd:	sub    rdi,rsi
   14002c300:	jns    0x14002c2df
   14002c302:	mov    r8d,DWORD PTR [rip+0x14d7b]        # 0x140041084
   14002c309:	mov    ebx,esi
   14002c30b:	add    r8d,DWORD PTR [rip+0x14d5e]        # 0x140041070
   14002c312:	jmp    0x14002c3a5
   14002c317:	mov    r8d,DWORD PTR [rip+0x14d66]        # 0x140041084
   14002c31e:	btr    DWORD PTR [rbp-0x30],0x1f
   14002c323:	mov    r11d,eax
   14002c326:	and    eax,r15d
   14002c329:	add    r8d,edi
   14002c32c:	mov    r13d,0x20
   14002c332:	sub    eax,edx
   14002c334:	sar    r11d,0x5
   14002c338:	mov    r10d,ebx
   14002c33b:	mov    ecx,eax
   14002c33d:	mov    edi,eax
   14002c33f:	lea    r9,[rbp-0x30]
   14002c343:	shl    r14d,cl
   14002c346:	sub    r13d,eax
   14002c349:	not    r14d
   14002c34c:	mov    edx,DWORD PTR [r9]
   14002c34f:	mov    ecx,edi
   14002c351:	mov    eax,edx
   14002c353:	shr    edx,cl
   14002c355:	mov    ecx,r13d
   14002c358:	or     edx,r10d
   14002c35b:	and    eax,r14d
   14002c35e:	mov    DWORD PTR [rbp-0x40],eax
   14002c361:	mov    DWORD PTR [r9],edx
   14002c364:	add    r9,0x4
   14002c368:	mov    r10d,DWORD PTR [rbp-0x40]
   14002c36c:	shl    r10d,cl
   14002c36f:	sub    r12,rsi
   14002c372:	jne    0x14002c34c
   14002c374:	movsxd r10,r11d
   14002c377:	lea    edi,[r12+0x2]
   14002c37c:	mov    r9,r10
   14002c37f:	neg    r9
   14002c382:	cmp    rdi,r10
   14002c385:	jl     0x14002c39c
   14002c387:	mov    rdx,rdi
   14002c38a:	shl    rdx,0x2
   14002c38e:	lea    rax,[rdx+r9*4]
   14002c392:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14002c396:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14002c39a:	jmp    0x14002c3a0
   14002c39c:	mov    DWORD PTR [rbp+rdi*4-0x30],ebx
   14002c3a0:	sub    rdi,rsi
   14002c3a3:	jns    0x14002c382
   14002c3a5:	mov    rdx,QWORD PTR [rbp-0x38]
   14002c3a9:	sub    r15d,DWORD PTR [rip+0x14ccc]        # 0x14004107c
   14002c3b0:	mov    cl,r15b
   14002c3b3:	shl    r8d,cl
   14002c3b6:	neg    DWORD PTR [rbp-0x3c]
   14002c3b9:	sbb    eax,eax
   14002c3bb:	and    eax,0x80000000
   14002c3c0:	or     r8d,eax
   14002c3c3:	mov    eax,DWORD PTR [rip+0x14cb7]        # 0x140041080
   14002c3c9:	or     r8d,DWORD PTR [rbp-0x30]
   14002c3cd:	cmp    eax,0x40
   14002c3d0:	jne    0x14002c3dd
   14002c3d2:	mov    eax,DWORD PTR [rbp-0x2c]
   14002c3d5:	mov    DWORD PTR [rdx+0x4],r8d
   14002c3d9:	mov    DWORD PTR [rdx],eax
   14002c3db:	jmp    0x14002c3e5
   14002c3dd:	cmp    eax,0x20
   14002c3e0:	jne    0x14002c3e5
   14002c3e2:	mov    DWORD PTR [rdx],r8d
   14002c3e5:	mov    eax,ebx
   14002c3e7:	mov    rcx,QWORD PTR [rbp-0x10]
   14002c3eb:	xor    rcx,rsp
   14002c3ee:	call   0x140012670
   14002c3f3:	mov    rbx,QWORD PTR [rsp+0xb0]
   14002c3fb:	add    rsp,0x60
   14002c3ff:	pop    r15
   14002c401:	pop    r14
   14002c403:	pop    r13
   14002c405:	pop    r12
   14002c407:	pop    rdi
   14002c408:	pop    rsi
   14002c409:	pop    rbp
   14002c40a:	ret    
   14002c40b:	int3   
   14002c40c:	mov    QWORD PTR [rsp+0x18],rbx
   14002c411:	push   rbp
   14002c412:	push   rsi
   14002c413:	push   rdi
   14002c414:	push   r12
   14002c416:	push   r13
   14002c418:	push   r14
   14002c41a:	push   r15
   14002c41c:	mov    rbp,rsp
   14002c41f:	sub    rsp,0x60
   14002c423:	mov    rax,QWORD PTR [rip+0x13506]        # 0x14003f930
   14002c42a:	xor    rax,rsp
   14002c42d:	mov    QWORD PTR [rbp-0x10],rax
   14002c431:	movzx  eax,WORD PTR [rcx+0xa]
   14002c435:	xor    ebx,ebx
   14002c437:	mov    r15d,0x1f
   14002c43d:	mov    edi,eax
   14002c43f:	and    eax,0x8000
   14002c444:	mov    QWORD PTR [rbp-0x38],rdx
   14002c448:	mov    DWORD PTR [rbp-0x3c],eax
   14002c44b:	mov    eax,DWORD PTR [rcx+0x6]
   14002c44e:	and    edi,0x7fff
   14002c454:	mov    DWORD PTR [rbp-0x30],eax
   14002c457:	mov    eax,DWORD PTR [rcx+0x2]
   14002c45a:	sub    edi,0x3fff
   14002c460:	mov    DWORD PTR [rbp-0x2c],eax
   14002c463:	movzx  eax,WORD PTR [rcx]
   14002c466:	lea    esi,[rbx+0x1]
   14002c469:	shl    eax,0x10
   14002c46c:	lea    r12d,[r15-0x1c]
   14002c470:	mov    DWORD PTR [rbp-0x28],eax
   14002c473:	cmp    edi,0xffffc001
   14002c479:	jne    0x14002c4a4
   14002c47b:	mov    r8d,ebx
   14002c47e:	mov    eax,ebx
   14002c480:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   14002c484:	jne    0x14002c493
   14002c486:	add    rax,rsi
   14002c489:	cmp    rax,r12
   14002c48c:	jl     0x14002c480
   14002c48e:	jmp    0x14002c975
   14002c493:	mov    QWORD PTR [rbp-0x30],rbx
   14002c497:	mov    DWORD PTR [rbp-0x28],ebx
   14002c49a:	mov    ebx,0x2
   14002c49f:	jmp    0x14002c975
   14002c4a4:	mov    r9d,DWORD PTR [rip+0x14be5]        # 0x140041090
   14002c4ab:	lea    rcx,[rbp-0x30]
   14002c4af:	mov    r11d,r15d
   14002c4b2:	mov    rax,QWORD PTR [rcx]
   14002c4b5:	or     r14d,0xffffffff
   14002c4b9:	mov    DWORD PTR [rbp-0x40],edi
   14002c4bc:	mov    QWORD PTR [rbp-0x20],rax
   14002c4c0:	mov    eax,DWORD PTR [rcx+0x8]
   14002c4c3:	mov    r13d,ebx
   14002c4c6:	mov    DWORD PTR [rbp-0x18],eax
   14002c4c9:	mov    eax,r9d
   14002c4cc:	cdq    
   14002c4cd:	and    edx,r15d
   14002c4d0:	add    eax,edx
   14002c4d2:	mov    r10d,eax
   14002c4d5:	and    eax,r15d
   14002c4d8:	sub    eax,edx
   14002c4da:	sar    r10d,0x5
   14002c4de:	sub    r11d,eax
   14002c4e1:	movsxd rax,r10d
   14002c4e4:	mov    ecx,DWORD PTR [rbp+rax*4-0x30]
   14002c4e8:	bt     ecx,r11d
   14002c4ec:	jae    0x14002c587
   14002c4f2:	mov    ecx,r11d
   14002c4f5:	mov    eax,r14d
   14002c4f8:	movsxd r8,r10d
   14002c4fb:	shl    eax,cl
   14002c4fd:	not    eax
   14002c4ff:	test   DWORD PTR [rbp+r8*4-0x30],eax
   14002c504:	jne    0x14002c51e
   14002c506:	lea    eax,[rsi+r8*1]
   14002c50a:	cdqe   
   14002c50c:	jmp    0x14002c517
   14002c50e:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   14002c512:	jne    0x14002c51e
   14002c514:	add    rax,rsi
   14002c517:	cmp    rax,r12
   14002c51a:	jl     0x14002c50e
   14002c51c:	jmp    0x14002c587
   14002c51e:	lea    eax,[r9-0x1]
   14002c522:	mov    ecx,r15d
   14002c525:	cdq    
   14002c526:	and    edx,r15d
   14002c529:	add    eax,edx
   14002c52b:	mov    r8d,eax
   14002c52e:	and    eax,r15d
   14002c531:	sub    eax,edx
   14002c533:	sar    r8d,0x5
   14002c537:	mov    edx,esi
   14002c539:	sub    ecx,eax
   14002c53b:	movsxd r9,r8d
   14002c53e:	mov    eax,DWORD PTR [rbp+r9*4-0x30]
   14002c543:	shl    edx,cl
   14002c545:	lea    ecx,[rax+rdx*1]
   14002c548:	cmp    ecx,eax
   14002c54a:	jb     0x14002c550
   14002c54c:	cmp    ecx,edx
   14002c54e:	jae    0x14002c553
   14002c550:	mov    r13d,esi
   14002c553:	sub    r8d,esi
   14002c556:	mov    DWORD PTR [rbp+r9*4-0x30],ecx
   14002c55b:	movsxd rdx,r8d
   14002c55e:	js     0x14002c587
   14002c560:	test   r13d,r13d
   14002c563:	je     0x14002c587
   14002c565:	mov    eax,DWORD PTR [rbp+rdx*4-0x30]
   14002c569:	mov    r13d,ebx
   14002c56c:	lea    r8d,[rax+0x1]
   14002c570:	cmp    r8d,eax
   14002c573:	jb     0x14002c57a
   14002c575:	cmp    r8d,esi
   14002c578:	jae    0x14002c57d
   14002c57a:	mov    r13d,esi
   14002c57d:	mov    DWORD PTR [rbp+rdx*4-0x30],r8d
   14002c582:	sub    rdx,rsi
   14002c585:	jns    0x14002c560
   14002c587:	mov    ecx,r11d
   14002c58a:	mov    eax,r14d
   14002c58d:	shl    eax,cl
   14002c58f:	movsxd rcx,r10d
   14002c592:	and    DWORD PTR [rbp+rcx*4-0x30],eax
   14002c596:	lea    eax,[r10+0x1]
   14002c59a:	movsxd rdx,eax
   14002c59d:	cmp    rdx,r12
   14002c5a0:	jge    0x14002c5b8
   14002c5a2:	lea    rcx,[rbp+rdx*4-0x30]
   14002c5a7:	mov    r8,r12
   14002c5aa:	sub    r8,rdx
   14002c5ad:	xor    edx,edx
   14002c5af:	shl    r8,0x2
   14002c5b3:	call   0x140012fb0
   14002c5b8:	test   r13d,r13d
   14002c5bb:	je     0x14002c5bf
   14002c5bd:	add    edi,esi
   14002c5bf:	mov    edx,DWORD PTR [rip+0x14ac7]        # 0x14004108c
   14002c5c5:	mov    eax,edx
   14002c5c7:	sub    eax,DWORD PTR [rip+0x14ac3]        # 0x140041090
   14002c5cd:	cmp    edi,eax
   14002c5cf:	jge    0x14002c5e5
   14002c5d1:	mov    QWORD PTR [rbp-0x30],rbx
   14002c5d5:	mov    DWORD PTR [rbp-0x28],ebx
   14002c5d8:	mov    r8d,ebx
   14002c5db:	mov    ebx,0x2
   14002c5e0:	jmp    0x14002c971
   14002c5e5:	cmp    edi,edx
   14002c5e7:	jg     0x14002c82c
   14002c5ed:	sub    edx,DWORD PTR [rbp-0x40]
   14002c5f0:	lea    rax,[rbp-0x20]
   14002c5f4:	mov    edi,r14d
   14002c5f7:	mov    rcx,QWORD PTR [rax]
   14002c5fa:	mov    r9d,ebx
   14002c5fd:	lea    r8,[rbp-0x30]
   14002c601:	mov    QWORD PTR [rbp-0x30],rcx
   14002c605:	mov    ecx,DWORD PTR [rax+0x8]
   14002c608:	mov    eax,edx
   14002c60a:	cdq    
   14002c60b:	mov    DWORD PTR [rbp-0x28],ecx
   14002c60e:	mov    r10,r12
   14002c611:	and    edx,r15d
   14002c614:	add    eax,edx
   14002c616:	mov    r11d,eax
   14002c619:	and    eax,r15d
   14002c61c:	mov    r15d,0x20
   14002c622:	sub    eax,edx
   14002c624:	sar    r11d,0x5
   14002c628:	mov    ecx,eax
   14002c62a:	mov    r13d,eax
   14002c62d:	shl    edi,cl
   14002c62f:	sub    r15d,eax
   14002c632:	not    edi
   14002c634:	mov    edx,DWORD PTR [r8]
   14002c637:	mov    ecx,r13d
   14002c63a:	mov    eax,edx
   14002c63c:	shr    edx,cl
   14002c63e:	mov    ecx,r15d
   14002c641:	or     edx,r9d
   14002c644:	and    eax,edi
   14002c646:	mov    DWORD PTR [rbp-0x40],eax
   14002c649:	mov    DWORD PTR [r8],edx
   14002c64c:	add    r8,0x4
   14002c650:	mov    r9d,DWORD PTR [rbp-0x40]
   14002c654:	shl    r9d,cl
   14002c657:	sub    r10,rsi
   14002c65a:	jne    0x14002c634
   14002c65c:	lea    edi,[r10+0x2]
   14002c660:	movsxd r10,r11d
   14002c663:	mov    r9,r10
   14002c666:	mov    r8d,edi
   14002c669:	neg    r9
   14002c66c:	cmp    r8,r10
   14002c66f:	jl     0x14002c686
   14002c671:	mov    rdx,r8
   14002c674:	shl    rdx,0x2
   14002c678:	lea    rax,[rdx+r9*4]
   14002c67c:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14002c680:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14002c684:	jmp    0x14002c68b
   14002c686:	mov    DWORD PTR [rbp+r8*4-0x30],ebx
   14002c68b:	sub    r8,rsi
   14002c68e:	jns    0x14002c66c
   14002c690:	mov    r9d,DWORD PTR [rip+0x149f9]        # 0x140041090
   14002c697:	mov    r13d,0x1f
   14002c69d:	mov    eax,r9d
   14002c6a0:	mov    r11d,r13d
   14002c6a3:	cdq    
   14002c6a4:	and    edx,r13d
   14002c6a7:	add    eax,edx
   14002c6a9:	mov    r10d,eax
   14002c6ac:	and    eax,r13d
   14002c6af:	sar    r10d,0x5
   14002c6b3:	sub    eax,edx
   14002c6b5:	movsxd r15,r10d
   14002c6b8:	sub    r11d,eax
   14002c6bb:	mov    ecx,DWORD PTR [rbp+r15*4-0x30]
   14002c6c0:	bt     ecx,r11d
   14002c6c4:	jae    0x14002c761
   14002c6ca:	mov    ecx,r11d
   14002c6cd:	mov    eax,r14d
   14002c6d0:	movsxd r8,r10d
   14002c6d3:	shl    eax,cl
   14002c6d5:	not    eax
   14002c6d7:	test   DWORD PTR [rbp+r8*4-0x30],eax
   14002c6dc:	jne    0x14002c6f6
   14002c6de:	lea    eax,[rsi+r8*1]
   14002c6e2:	cdqe   
   14002c6e4:	jmp    0x14002c6ef
   14002c6e6:	cmp    DWORD PTR [rbp+rax*4-0x30],ebx
   14002c6ea:	jne    0x14002c6f6
   14002c6ec:	add    rax,rsi
   14002c6ef:	cmp    rax,r12
   14002c6f2:	jl     0x14002c6e6
   14002c6f4:	jmp    0x14002c761
   14002c6f6:	lea    eax,[r9-0x1]
   14002c6fa:	mov    ecx,r13d
   14002c6fd:	mov    r9d,esi
   14002c700:	cdq    
   14002c701:	and    edx,r13d
   14002c704:	add    eax,edx
   14002c706:	mov    r8d,eax
   14002c709:	and    eax,r13d
   14002c70c:	sub    eax,edx
   14002c70e:	sar    r8d,0x5
   14002c712:	sub    ecx,eax
   14002c714:	movsxd r13,r8d
   14002c717:	mov    eax,DWORD PTR [rbp+r13*4-0x30]
   14002c71c:	shl    r9d,cl
   14002c71f:	mov    ecx,ebx
   14002c721:	lea    edx,[rax+r9*1]
   14002c725:	cmp    edx,eax
   14002c727:	jb     0x14002c72e
   14002c729:	cmp    edx,r9d
   14002c72c:	jae    0x14002c730
   14002c72e:	mov    ecx,esi
   14002c730:	sub    r8d,esi
   14002c733:	mov    DWORD PTR [rbp+r13*4-0x30],edx
   14002c738:	movsxd rdx,r8d
   14002c73b:	js     0x14002c761
   14002c73d:	test   ecx,ecx
   14002c73f:	je     0x14002c761
   14002c741:	mov    eax,DWORD PTR [rbp+rdx*4-0x30]
   14002c745:	mov    ecx,ebx
   14002c747:	lea    r8d,[rax+0x1]
   14002c74b:	cmp    r8d,eax
   14002c74e:	jb     0x14002c755
   14002c750:	cmp    r8d,esi
   14002c753:	jae    0x14002c757
   14002c755:	mov    ecx,esi
   14002c757:	mov    DWORD PTR [rbp+rdx*4-0x30],r8d
   14002c75c:	sub    rdx,rsi
   14002c75f:	jns    0x14002c73d
   14002c761:	mov    ecx,r11d
   14002c764:	mov    eax,r14d
   14002c767:	shl    eax,cl
   14002c769:	and    DWORD PTR [rbp+r15*4-0x30],eax
   14002c76e:	lea    eax,[r10+0x1]
   14002c772:	movsxd rdx,eax
   14002c775:	cmp    rdx,r12
   14002c778:	jge    0x14002c790
   14002c77a:	lea    rcx,[rbp+rdx*4-0x30]
   14002c77f:	mov    r8,r12
   14002c782:	sub    r8,rdx
   14002c785:	xor    edx,edx
   14002c787:	shl    r8,0x2
   14002c78b:	call   0x140012fb0
   14002c790:	mov    eax,DWORD PTR [rip+0x148fe]        # 0x140041094
   14002c796:	mov    r15d,0x1f
   14002c79c:	mov    r9d,ebx
   14002c79f:	inc    eax
   14002c7a1:	lea    r13d,[r15+0x1]
   14002c7a5:	lea    r8,[rbp-0x30]
   14002c7a9:	cdq    
   14002c7aa:	and    edx,r15d
   14002c7ad:	add    eax,edx
   14002c7af:	mov    r10d,eax
   14002c7b2:	and    eax,r15d
   14002c7b5:	sub    eax,edx
   14002c7b7:	sar    r10d,0x5
   14002c7bb:	mov    ecx,eax
   14002c7bd:	mov    r11d,eax
   14002c7c0:	shl    r14d,cl
   14002c7c3:	sub    r13d,eax
   14002c7c6:	not    r14d
   14002c7c9:	mov    edx,DWORD PTR [r8]
   14002c7cc:	mov    ecx,r11d
   14002c7cf:	mov    eax,edx
   14002c7d1:	shr    edx,cl
   14002c7d3:	mov    ecx,r13d
   14002c7d6:	or     edx,r9d
   14002c7d9:	and    eax,r14d
   14002c7dc:	mov    DWORD PTR [rbp-0x40],eax
   14002c7df:	mov    DWORD PTR [r8],edx
   14002c7e2:	add    r8,0x4
   14002c7e6:	mov    r9d,DWORD PTR [rbp-0x40]
   14002c7ea:	shl    r9d,cl
   14002c7ed:	sub    r12,rsi
   14002c7f0:	jne    0x14002c7c9
   14002c7f2:	movsxd r10,r10d
   14002c7f5:	mov    r8,rdi
   14002c7f8:	mov    r9,r10
   14002c7fb:	neg    r9
   14002c7fe:	cmp    r8,r10
   14002c801:	jl     0x14002c818
   14002c803:	mov    rdx,r8
   14002c806:	shl    rdx,0x2
   14002c80a:	lea    rax,[rdx+r9*4]
   14002c80e:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14002c812:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14002c816:	jmp    0x14002c81d
   14002c818:	mov    DWORD PTR [rbp+r8*4-0x30],ebx
   14002c81d:	sub    r8,rsi
   14002c820:	jns    0x14002c7fe
   14002c822:	mov    r8d,ebx
   14002c825:	mov    ebx,edi
   14002c827:	jmp    0x14002c971
   14002c82c:	mov    eax,DWORD PTR [rip+0x14862]        # 0x140041094
   14002c832:	cdq    
   14002c833:	and    edx,r15d
   14002c836:	add    eax,edx
   14002c838:	cmp    edi,DWORD PTR [rip+0x1484a]        # 0x140041088
   14002c83e:	jl     0x14002c8e3
   14002c844:	mov    r10d,eax
   14002c847:	and    eax,r15d
   14002c84a:	mov    edi,0x20
   14002c84f:	sub    eax,edx
   14002c851:	mov    QWORD PTR [rbp-0x30],rbx
   14002c855:	bts    DWORD PTR [rbp-0x30],0x1f
   14002c85a:	mov    ecx,eax
   14002c85c:	sar    r10d,0x5
   14002c860:	mov    DWORD PTR [rbp-0x28],ebx
   14002c863:	shl    r14d,cl
   14002c866:	mov    r11d,eax
   14002c869:	mov    r9d,ebx
   14002c86c:	not    r14d
   14002c86f:	sub    edi,eax
   14002c871:	lea    r8,[rbp-0x30]
   14002c875:	mov    edx,DWORD PTR [r8]
   14002c878:	mov    ecx,r11d
   14002c87b:	mov    eax,edx
   14002c87d:	shr    edx,cl
   14002c87f:	mov    ecx,edi
   14002c881:	or     edx,r9d
   14002c884:	and    eax,r14d
   14002c887:	mov    DWORD PTR [rbp-0x40],eax
   14002c88a:	mov    DWORD PTR [r8],edx
   14002c88d:	add    r8,0x4
   14002c891:	mov    r9d,DWORD PTR [rbp-0x40]
   14002c895:	shl    r9d,cl
   14002c898:	sub    r12,rsi
   14002c89b:	jne    0x14002c875
   14002c89d:	movsxd r9,r10d
   14002c8a0:	lea    edi,[r12+0x2]
   14002c8a5:	mov    r8,r9
   14002c8a8:	neg    r8
   14002c8ab:	cmp    rdi,r9
   14002c8ae:	jl     0x14002c8c5
   14002c8b0:	mov    rdx,rdi
   14002c8b3:	shl    rdx,0x2
   14002c8b7:	lea    rax,[rdx+r8*4]
   14002c8bb:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14002c8bf:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14002c8c3:	jmp    0x14002c8c9
   14002c8c5:	mov    DWORD PTR [rbp+rdi*4-0x30],ebx
   14002c8c9:	sub    rdi,rsi
   14002c8cc:	jns    0x14002c8ab
   14002c8ce:	mov    r8d,DWORD PTR [rip+0x147c7]        # 0x14004109c
   14002c8d5:	mov    ebx,esi
   14002c8d7:	add    r8d,DWORD PTR [rip+0x147aa]        # 0x140041088
   14002c8de:	jmp    0x14002c971
   14002c8e3:	mov    r8d,DWORD PTR [rip+0x147b2]        # 0x14004109c
   14002c8ea:	btr    DWORD PTR [rbp-0x30],0x1f
   14002c8ef:	mov    r11d,eax
   14002c8f2:	and    eax,r15d
   14002c8f5:	add    r8d,edi
   14002c8f8:	mov    r13d,0x20
   14002c8fe:	sub    eax,edx
   14002c900:	sar    r11d,0x5
   14002c904:	mov    r10d,ebx
   14002c907:	mov    ecx,eax
   14002c909:	mov    edi,eax
   14002c90b:	lea    r9,[rbp-0x30]
   14002c90f:	shl    r14d,cl
   14002c912:	sub    r13d,eax
   14002c915:	not    r14d
   14002c918:	mov    edx,DWORD PTR [r9]
   14002c91b:	mov    ecx,edi
   14002c91d:	mov    eax,edx
   14002c91f:	shr    edx,cl
   14002c921:	mov    ecx,r13d
   14002c924:	or     edx,r10d
   14002c927:	and    eax,r14d
   14002c92a:	mov    DWORD PTR [rbp-0x40],eax
   14002c92d:	mov    DWORD PTR [r9],edx
   14002c930:	add    r9,0x4
   14002c934:	mov    r10d,DWORD PTR [rbp-0x40]
   14002c938:	shl    r10d,cl
   14002c93b:	sub    r12,rsi
   14002c93e:	jne    0x14002c918
   14002c940:	movsxd r10,r11d
   14002c943:	lea    edi,[r12+0x2]
   14002c948:	mov    r9,r10
   14002c94b:	neg    r9
   14002c94e:	cmp    rdi,r10
   14002c951:	jl     0x14002c968
   14002c953:	mov    rdx,rdi
   14002c956:	shl    rdx,0x2
   14002c95a:	lea    rax,[rdx+r9*4]
   14002c95e:	mov    ecx,DWORD PTR [rbp+rax*1-0x30]
   14002c962:	mov    DWORD PTR [rbp+rdx*1-0x30],ecx
   14002c966:	jmp    0x14002c96c
   14002c968:	mov    DWORD PTR [rbp+rdi*4-0x30],ebx
   14002c96c:	sub    rdi,rsi
   14002c96f:	jns    0x14002c94e
   14002c971:	mov    rdx,QWORD PTR [rbp-0x38]
   14002c975:	sub    r15d,DWORD PTR [rip+0x14718]        # 0x140041094
   14002c97c:	mov    cl,r15b
   14002c97f:	shl    r8d,cl
   14002c982:	neg    DWORD PTR [rbp-0x3c]
   14002c985:	sbb    eax,eax
   14002c987:	and    eax,0x80000000
   14002c98c:	or     r8d,eax
   14002c98f:	mov    eax,DWORD PTR [rip+0x14703]        # 0x140041098
   14002c995:	or     r8d,DWORD PTR [rbp-0x30]
   14002c999:	cmp    eax,0x40
   14002c99c:	jne    0x14002c9a9
   14002c99e:	mov    eax,DWORD PTR [rbp-0x2c]
   14002c9a1:	mov    DWORD PTR [rdx+0x4],r8d
   14002c9a5:	mov    DWORD PTR [rdx],eax
   14002c9a7:	jmp    0x14002c9b1
   14002c9a9:	cmp    eax,0x20
   14002c9ac:	jne    0x14002c9b1
   14002c9ae:	mov    DWORD PTR [rdx],r8d
   14002c9b1:	mov    eax,ebx
   14002c9b3:	mov    rcx,QWORD PTR [rbp-0x10]
   14002c9b7:	xor    rcx,rsp
   14002c9ba:	call   0x140012670
   14002c9bf:	mov    rbx,QWORD PTR [rsp+0xb0]
   14002c9c7:	add    rsp,0x60
   14002c9cb:	pop    r15
   14002c9cd:	pop    r14
   14002c9cf:	pop    r13
   14002c9d1:	pop    r12
   14002c9d3:	pop    rdi
   14002c9d4:	pop    rsi
   14002c9d5:	pop    rbp
   14002c9d6:	ret    
   14002c9d7:	int3   
   14002c9d8:	mov    QWORD PTR [rsp+0x18],rbx
   14002c9dd:	push   rbp
   14002c9de:	push   rsi
   14002c9df:	push   rdi
   14002c9e0:	push   r12
   14002c9e2:	push   r13
   14002c9e4:	push   r14
   14002c9e6:	push   r15
   14002c9e8:	lea    rbp,[rsp-0x7]
   14002c9ed:	sub    rsp,0xa0
   14002c9f4:	mov    rax,QWORD PTR [rip+0x12f35]        # 0x14003f930
   14002c9fb:	xor    rax,rsp
   14002c9fe:	mov    QWORD PTR [rbp-0x1],rax
   14002ca02:	mov    r13,QWORD PTR [rbp+0x7f]
   14002ca06:	xor    ebx,ebx
   14002ca08:	mov    DWORD PTR [rbp-0x71],r9d
   14002ca0c:	lea    r9d,[rbx+0x1]
   14002ca10:	mov    QWORD PTR [rbp-0x59],rcx
   14002ca14:	mov    QWORD PTR [rbp-0x69],rdx
   14002ca18:	lea    r10,[rbp-0x21]
   14002ca1c:	mov    WORD PTR [rbp-0x6d],bx
   14002ca20:	mov    edi,ebx
   14002ca22:	mov    DWORD PTR [rbp-0x75],r9d
   14002ca26:	mov    r14d,ebx
   14002ca29:	mov    DWORD PTR [rbp-0x79],ebx
   14002ca2c:	mov    r15d,ebx
   14002ca2f:	mov    esi,ebx
   14002ca31:	mov    r12d,ebx
   14002ca34:	mov    ecx,ebx
   14002ca36:	test   r13,r13
   14002ca39:	jne    0x14002ca52
   14002ca3b:	call   0x14001583c
   14002ca40:	mov    DWORD PTR [rax],0x16
   14002ca46:	call   0x140019f74
   14002ca4b:	xor    eax,eax
   14002ca4d:	jmp    0x14002d212
   14002ca52:	mov    r11,r8
   14002ca55:	mov    al,BYTE PTR [r8]
   14002ca58:	cmp    al,0x20
   14002ca5a:	je     0x14002ca68
   14002ca5c:	cmp    al,0x9
   14002ca5e:	je     0x14002ca68
   14002ca60:	cmp    al,0xa
   14002ca62:	je     0x14002ca68
   14002ca64:	cmp    al,0xd
   14002ca66:	jne    0x14002ca6d
   14002ca68:	add    r8,r9
   14002ca6b:	jmp    0x14002ca55
   14002ca6d:	mov    dl,BYTE PTR [r8]
   14002ca70:	add    r8,r9
   14002ca73:	cmp    ecx,0x5
   14002ca76:	jg     0x14002cc96
   14002ca7c:	je     0x14002cc7c
   14002ca82:	mov    r9d,ecx
   14002ca85:	test   ecx,ecx
   14002ca87:	je     0x14002cc1b
   14002ca8d:	dec    r9d
   14002ca90:	je     0x14002cbd3
   14002ca96:	dec    r9d
   14002ca99:	je     0x14002cb80
   14002ca9f:	dec    r9d
   14002caa2:	je     0x14002cb33
   14002caa8:	dec    r9d
   14002caab:	jne    0x14002cd5b
   14002cab1:	mov    r9d,0x1
   14002cab7:	mov    r14d,r9d
   14002caba:	mov    DWORD PTR [rbp-0x79],r9d
   14002cabe:	test   edi,edi
   14002cac0:	jne    0x14002caf3
   14002cac2:	jmp    0x14002cacd
   14002cac4:	mov    dl,BYTE PTR [r8]
   14002cac7:	sub    r12d,r9d
   14002caca:	add    r8,r9
   14002cacd:	cmp    dl,0x30
   14002cad0:	je     0x14002cac4
   14002cad2:	jmp    0x14002caf3
   14002cad4:	cmp    dl,0x39
   14002cad7:	jg     0x14002caf8
   14002cad9:	cmp    edi,0x19
   14002cadc:	jae    0x14002caed
   14002cade:	sub    dl,0x30
   14002cae1:	add    edi,r9d
   14002cae4:	mov    BYTE PTR [r10],dl
   14002cae7:	add    r10,r9
   14002caea:	sub    r12d,r9d
   14002caed:	mov    dl,BYTE PTR [r8]
   14002caf0:	add    r8,r9
   14002caf3:	cmp    dl,0x30
   14002caf6:	jge    0x14002cad4
   14002caf8:	cmp    dl,0x2b
   14002cafb:	je     0x14002cb26
   14002cafd:	cmp    dl,0x2d
   14002cb00:	je     0x14002cb26
   14002cb02:	cmp    dl,0x43
   14002cb05:	jle    0x14002cc55
   14002cb0b:	cmp    dl,0x45
   14002cb0e:	jle    0x14002cb1c
   14002cb10:	sub    dl,0x64
   14002cb13:	cmp    dl,r9b
   14002cb16:	ja     0x14002cc55
   14002cb1c:	mov    ecx,0x6
   14002cb21:	jmp    0x14002ca6d
   14002cb26:	sub    r8,r9
   14002cb29:	mov    ecx,0xb
   14002cb2e:	jmp    0x14002ca6d
   14002cb33:	mov    r9d,0x1
   14002cb39:	mov    al,0x30
   14002cb3b:	mov    r14d,r9d
   14002cb3e:	jmp    0x14002cb60
   14002cb40:	cmp    dl,0x39
   14002cb43:	jg     0x14002cb64
   14002cb45:	cmp    edi,0x19
   14002cb48:	jae    0x14002cb57
   14002cb4a:	sub    dl,al
   14002cb4c:	add    edi,r9d
   14002cb4f:	mov    BYTE PTR [r10],dl
   14002cb52:	add    r10,r9
   14002cb55:	jmp    0x14002cb5a
   14002cb57:	add    r12d,r9d
   14002cb5a:	mov    dl,BYTE PTR [r8]
   14002cb5d:	add    r8,r9
   14002cb60:	cmp    dl,al
   14002cb62:	jge    0x14002cb40
   14002cb64:	mov    rax,QWORD PTR [r13+0x0]
   14002cb68:	mov    rcx,QWORD PTR [rax+0x128]
   14002cb6f:	mov    rax,QWORD PTR [rcx]
   14002cb72:	cmp    dl,BYTE PTR [rax]
   14002cb74:	jne    0x14002caf8
   14002cb76:	mov    ecx,0x4
   14002cb7b:	jmp    0x14002ca6d
   14002cb80:	lea    eax,[rdx-0x31]
   14002cb83:	cmp    al,0x8
   14002cb85:	ja     0x14002cb9a
   14002cb87:	mov    ecx,0x3
   14002cb8c:	mov    r9d,0x1
   14002cb92:	sub    r8,r9
   14002cb95:	jmp    0x14002ca6d
   14002cb9a:	mov    rax,QWORD PTR [r13+0x0]
   14002cb9e:	mov    rcx,QWORD PTR [rax+0x128]
   14002cba5:	mov    rax,QWORD PTR [rcx]
   14002cba8:	cmp    dl,BYTE PTR [rax]
   14002cbaa:	jne    0x14002cbbc
   14002cbac:	mov    ecx,0x5
   14002cbb1:	mov    r9d,0x1
   14002cbb7:	jmp    0x14002ca6d
   14002cbbc:	cmp    dl,0x30
   14002cbbf:	jne    0x14002cdbc
   14002cbc5:	mov    r9d,0x1
   14002cbcb:	mov    ecx,r9d
   14002cbce:	jmp    0x14002ca6d
   14002cbd3:	lea    eax,[rdx-0x31]
   14002cbd6:	mov    r9d,0x1
   14002cbdc:	mov    r14d,r9d
   14002cbdf:	cmp    al,0x8
   14002cbe1:	ja     0x14002cbe9
   14002cbe3:	lea    ecx,[r9+0x2]
   14002cbe7:	jmp    0x14002cb92
   14002cbe9:	mov    rax,QWORD PTR [r13+0x0]
   14002cbed:	mov    rcx,QWORD PTR [rax+0x128]
   14002cbf4:	mov    rax,QWORD PTR [rcx]
   14002cbf7:	cmp    dl,BYTE PTR [rax]
   14002cbf9:	je     0x14002cb76
   14002cbff:	cmp    dl,0x2b
   14002cc02:	je     0x14002cb26
   14002cc08:	cmp    dl,0x2d
   14002cc0b:	je     0x14002cb26
   14002cc11:	cmp    dl,0x30
   14002cc14:	je     0x14002cbcb
   14002cc16:	jmp    0x14002cb02
   14002cc1b:	lea    eax,[rdx-0x31]
   14002cc1e:	cmp    al,0x8
   14002cc20:	jbe    0x14002cb87
   14002cc26:	mov    rax,QWORD PTR [r13+0x0]
   14002cc2a:	mov    rcx,QWORD PTR [rax+0x128]
   14002cc31:	mov    rax,QWORD PTR [rcx]
   14002cc34:	cmp    dl,BYTE PTR [rax]
   14002cc36:	je     0x14002cbac
   14002cc3c:	cmp    dl,0x2b
   14002cc3f:	je     0x14002cc6e
   14002cc41:	cmp    dl,0x2d
   14002cc44:	je     0x14002cc5d
   14002cc46:	cmp    dl,0x30
   14002cc49:	je     0x14002cbc5
   14002cc4f:	mov    r9d,0x1
   14002cc55:	sub    r8,r9
   14002cc58:	jmp    0x14002cdc5
   14002cc5d:	mov    ecx,0x2
   14002cc62:	mov    DWORD PTR [rbp-0x6d],0x8000
   14002cc69:	jmp    0x14002cbb1
   14002cc6e:	mov    ecx,0x2
   14002cc73:	mov    WORD PTR [rbp-0x6d],bx
   14002cc77:	jmp    0x14002cbb1
   14002cc7c:	sub    dl,0x30
   14002cc7f:	mov    DWORD PTR [rbp-0x79],r9d
   14002cc83:	cmp    dl,0x9
   14002cc86:	ja     0x14002cd65
   14002cc8c:	mov    ecx,0x4
   14002cc91:	jmp    0x14002cb92
   14002cc96:	mov    r9d,ecx
   14002cc99:	sub    r9d,0x6
   14002cc9d:	je     0x14002cd3f
   14002cca3:	dec    r9d
   14002cca6:	je     0x14002cd1b
   14002cca8:	dec    r9d
   14002ccab:	je     0x14002ccef
   14002ccad:	dec    r9d
   14002ccb0:	je     0x14002cd6a
   14002ccb6:	cmp    r9d,0x2
   14002ccba:	jne    0x14002cd5b
   14002ccc0:	cmp    DWORD PTR [rbp+0x77],ebx
   14002ccc3:	je     0x14002cc4f
   14002ccc5:	lea    r11,[r8-0x1]
   14002ccc9:	cmp    dl,0x2b
   14002cccc:	je     0x14002cce5
   14002ccce:	cmp    dl,0x2d
   14002ccd1:	jne    0x14002cdbc
   14002ccd7:	or     DWORD PTR [rbp-0x75],0xffffffff
   14002ccdb:	mov    ecx,0x7
   14002cce0:	jmp    0x14002cbb1
   14002cce5:	mov    ecx,0x7
   14002ccea:	jmp    0x14002cbb1
   14002ccef:	mov    r9d,0x1
   14002ccf5:	mov    r15d,r9d
   14002ccf8:	jmp    0x14002cd00
   14002ccfa:	mov    dl,BYTE PTR [r8]
   14002ccfd:	add    r8,r9
   14002cd00:	cmp    dl,0x30
   14002cd03:	je     0x14002ccfa
   14002cd05:	sub    dl,0x31
   14002cd08:	cmp    dl,0x8
   14002cd0b:	ja     0x14002cc55
   14002cd11:	mov    ecx,0x9
   14002cd16:	jmp    0x14002cb92
   14002cd1b:	lea    eax,[rdx-0x31]
   14002cd1e:	cmp    al,0x8
   14002cd20:	ja     0x14002cd2c
   14002cd22:	mov    ecx,0x9
   14002cd27:	jmp    0x14002cb8c
   14002cd2c:	cmp    dl,0x30
   14002cd2f:	jne    0x14002cdbc
   14002cd35:	mov    ecx,0x8
   14002cd3a:	jmp    0x14002cbb1
   14002cd3f:	lea    eax,[rdx-0x31]
   14002cd42:	lea    r11,[r8-0x2]
   14002cd46:	cmp    al,0x8
   14002cd48:	jbe    0x14002cd22
   14002cd4a:	cmp    dl,0x2b
   14002cd4d:	je     0x14002cd56
   14002cd4f:	cmp    dl,0x2d
   14002cd52:	je     0x14002ccd7
   14002cd54:	jmp    0x14002cd2c
   14002cd56:	mov    ecx,0x7
   14002cd5b:	cmp    ecx,0xa
   14002cd5e:	je     0x14002cdbf
   14002cd60:	jmp    0x14002cbb1
   14002cd65:	mov    r8,r11
   14002cd68:	jmp    0x14002cdc5
   14002cd6a:	mov    r9d,0x1
   14002cd70:	mov    r11b,0x30
   14002cd73:	mov    r15d,r9d
   14002cd76:	jmp    0x14002cd95
   14002cd78:	cmp    dl,0x39
   14002cd7b:	jg     0x14002cdb2
   14002cd7d:	lea    ecx,[rsi+rsi*4]
   14002cd80:	movsx  eax,dl
   14002cd83:	lea    esi,[rax+rcx*2-0x30]
   14002cd87:	cmp    esi,0x1450
   14002cd8d:	jg     0x14002cd9c
   14002cd8f:	mov    dl,BYTE PTR [r8]
   14002cd92:	add    r8,r9
   14002cd95:	cmp    dl,r11b
   14002cd98:	jge    0x14002cd78
   14002cd9a:	jmp    0x14002cdb2
   14002cd9c:	mov    esi,0x1451
   14002cda1:	jmp    0x14002cdb2
   14002cda3:	cmp    dl,0x39
   14002cda6:	jg     0x14002cc55
   14002cdac:	mov    dl,BYTE PTR [r8]
   14002cdaf:	add    r8,r9
   14002cdb2:	cmp    dl,r11b
   14002cdb5:	jge    0x14002cda3
   14002cdb7:	jmp    0x14002cc55
   14002cdbc:	mov    r8,r11
   14002cdbf:	mov    r9d,0x1
   14002cdc5:	mov    rax,QWORD PTR [rbp-0x69]
   14002cdc9:	mov    QWORD PTR [rax],r8
   14002cdcc:	test   r14d,r14d
   14002cdcf:	je     0x14002d1e8
   14002cdd5:	cmp    edi,0x18
   14002cdd8:	jbe    0x14002cdf2
   14002cdda:	mov    al,BYTE PTR [rbp-0xa]
   14002cddd:	cmp    al,0x5
   14002cddf:	jl     0x14002cde7
   14002cde1:	add    al,r9b
   14002cde4:	mov    BYTE PTR [rbp-0xa],al
   14002cde7:	sub    r10,r9
   14002cdea:	mov    edi,0x18
   14002cdef:	add    r12d,r9d
   14002cdf2:	test   edi,edi
   14002cdf4:	jne    0x14002ce0a
   14002cdf6:	movzx  edx,bx
   14002cdf9:	movzx  eax,bx
   14002cdfc:	mov    edi,ebx
   14002cdfe:	mov    ecx,ebx
   14002ce00:	jmp    0x14002d1f7
   14002ce05:	dec    edi
   14002ce07:	add    r12d,r9d
   14002ce0a:	sub    r10,r9
   14002ce0d:	cmp    BYTE PTR [r10],bl
   14002ce10:	je     0x14002ce05
   14002ce12:	lea    r8,[rbp-0x41]
   14002ce16:	lea    rcx,[rbp-0x21]
   14002ce1a:	mov    edx,edi
   14002ce1c:	call   0x14002dce8
   14002ce21:	cmp    DWORD PTR [rbp-0x75],ebx
   14002ce24:	jge    0x14002ce28
   14002ce26:	neg    esi
   14002ce28:	add    esi,r12d
   14002ce2b:	test   r15d,r15d
   14002ce2e:	jne    0x14002ce33
   14002ce30:	add    esi,DWORD PTR [rbp+0x67]
   14002ce33:	cmp    DWORD PTR [rbp-0x79],ebx
   14002ce36:	jne    0x14002ce3b
   14002ce38:	sub    esi,DWORD PTR [rbp+0x6f]
   14002ce3b:	cmp    esi,0x1450
   14002ce41:	jg     0x14002d1d2
   14002ce47:	cmp    esi,0xffffebb0
   14002ce4d:	jl     0x14002d1c2
   14002ce53:	lea    r13,[rip+0x14246]        # 0x1400410a0
   14002ce5a:	sub    r13,0x60
   14002ce5e:	test   esi,esi
   14002ce60:	je     0x14002d1b0
   14002ce66:	jns    0x14002ce75
   14002ce68:	lea    r13,[rip+0x14391]        # 0x140041200
   14002ce6f:	neg    esi
   14002ce71:	sub    r13,0x60
   14002ce75:	cmp    DWORD PTR [rbp-0x71],ebx
   14002ce78:	jne    0x14002ce7e
   14002ce7a:	mov    WORD PTR [rbp-0x41],bx
   14002ce7e:	test   esi,esi
   14002ce80:	je     0x14002d1b0
   14002ce86:	mov    edi,0x80000000
   14002ce8b:	mov    r10d,0x7fff
   14002ce91:	mov    r12d,0x1
   14002ce97:	mov    eax,esi
   14002ce99:	add    r13,0x54
   14002ce9d:	sar    esi,0x3
   14002cea0:	and    eax,0x7
   14002cea3:	mov    DWORD PTR [rbp-0x71],esi
   14002cea6:	mov    QWORD PTR [rbp-0x61],r13
   14002ceaa:	je     0x14002d1a8
   14002ceb0:	cdqe   
   14002ceb2:	mov    r15d,0x8000
   14002ceb8:	lea    rcx,[rax+rax*2]
   14002cebc:	lea    rdx,[r13+rcx*4+0x0]
   14002cec1:	cmp    WORD PTR [rdx],r15w
   14002cec5:	jb     0x14002cee2
   14002cec7:	mov    rcx,QWORD PTR [rdx]
   14002ceca:	mov    eax,DWORD PTR [rdx+0x8]
   14002cecd:	lea    rdx,[rbp-0x31]
   14002ced1:	mov    QWORD PTR [rbp-0x31],rcx
   14002ced5:	shr    rcx,0x10
   14002ced9:	mov    DWORD PTR [rbp-0x29],eax
   14002cedc:	sub    ecx,r12d
   14002cedf:	mov    DWORD PTR [rbp-0x2f],ecx
   14002cee2:	movzx  eax,WORD PTR [rdx+0xa]
   14002cee6:	movzx  ecx,WORD PTR [rbp-0x37]
   14002ceea:	mov    QWORD PTR [rbp-0x51],rbx
   14002ceee:	movzx  r9d,ax
   14002cef2:	and    ax,r10w
   14002cef6:	mov    DWORD PTR [rbp-0x49],ebx
   14002cef9:	xor    r9w,cx
   14002cefd:	and    cx,r10w
   14002cf01:	and    r9w,r15w
   14002cf05:	lea    r8d,[rcx+rax*1]
   14002cf09:	mov    WORD PTR [rbp-0x75],r9w
   14002cf0e:	cmp    cx,r10w
   14002cf12:	jae    0x14002d194
   14002cf18:	cmp    ax,r10w
   14002cf1c:	jae    0x14002d194
   14002cf22:	mov    r11d,0xbffd
   14002cf28:	cmp    r8w,r11w
   14002cf2c:	ja     0x14002d194
   14002cf32:	mov    r9d,0x3fbf
   14002cf38:	cmp    r8w,r9w
   14002cf3c:	ja     0x14002cf4a
   14002cf3e:	mov    QWORD PTR [rbp-0x3d],rbx
   14002cf42:	mov    DWORD PTR [rbp-0x41],ebx
   14002cf45:	jmp    0x14002d1a8
   14002cf4a:	test   cx,cx
   14002cf4d:	jne    0x14002cf6f
   14002cf4f:	add    r8w,r12w
   14002cf53:	test   DWORD PTR [rbp-0x39],0x7fffffff
   14002cf5a:	jne    0x14002cf6f
   14002cf5c:	cmp    DWORD PTR [rbp-0x3d],ebx
   14002cf5f:	jne    0x14002cf6f
   14002cf61:	cmp    DWORD PTR [rbp-0x41],ebx
   14002cf64:	jne    0x14002cf6f
   14002cf66:	mov    WORD PTR [rbp-0x37],bx
   14002cf6a:	jmp    0x14002d1a8
   14002cf6f:	test   ax,ax
   14002cf72:	jne    0x14002cf8a
   14002cf74:	add    r8w,r12w
   14002cf78:	test   DWORD PTR [rdx+0x8],0x7fffffff
   14002cf7f:	jne    0x14002cf8a
   14002cf81:	cmp    DWORD PTR [rdx+0x4],ebx
   14002cf84:	jne    0x14002cf8a
   14002cf86:	cmp    DWORD PTR [rdx],ebx
   14002cf88:	je     0x14002cf3e
   14002cf8a:	mov    r10d,0x5
   14002cf90:	mov    r12d,ebx
   14002cf93:	lea    rcx,[rbp-0x51]
   14002cf97:	lea    r13d,[r10-0x4]
   14002cf9b:	lea    eax,[r12+r12*1]
   14002cf9f:	mov    DWORD PTR [rbp-0x79],r10d
   14002cfa3:	movsxd r9,eax
   14002cfa6:	test   r10d,r10d
   14002cfa9:	jle    0x14002cfff
   14002cfab:	mov    edi,r12d
   14002cfae:	lea    r14,[rbp+r9*1-0x41]
   14002cfb3:	lea    r15,[rdx+0x8]
   14002cfb7:	and    edi,r13d
   14002cfba:	movzx  eax,WORD PTR [r14]
   14002cfbe:	movzx  r9d,WORD PTR [r15]
   14002cfc2:	mov    r11d,ebx
   14002cfc5:	imul   r9d,eax
   14002cfc9:	mov    eax,DWORD PTR [rcx]
   14002cfcb:	lea    esi,[rax+r9*1]
   14002cfcf:	cmp    esi,eax
   14002cfd1:	jb     0x14002cfd8
   14002cfd3:	cmp    esi,r9d
   14002cfd6:	jae    0x14002cfdb
   14002cfd8:	mov    r11d,r13d
   14002cfdb:	mov    DWORD PTR [rcx],esi
   14002cfdd:	test   r11d,r11d
   14002cfe0:	je     0x14002cfe7
   14002cfe2:	add    WORD PTR [rcx+0x4],r13w
   14002cfe7:	mov    r11d,DWORD PTR [rbp-0x79]
   14002cfeb:	add    r14,0x2
   14002cfef:	sub    r15,0x2
   14002cff3:	sub    r11d,r13d
   14002cff6:	mov    DWORD PTR [rbp-0x79],r11d
   14002cffa:	test   r11d,r11d
   14002cffd:	jg     0x14002cfba
   14002cfff:	sub    r10d,r13d
   14002d002:	add    rcx,0x2
   14002d006:	add    r12d,r13d
   14002d009:	test   r10d,r10d
   14002d00c:	jg     0x14002cf9b
   14002d00e:	mov    r10d,DWORD PTR [rbp-0x49]
   14002d012:	mov    r9d,DWORD PTR [rbp-0x51]
   14002d016:	mov    eax,0xc002
   14002d01b:	add    r8w,ax
   14002d01f:	mov    edi,0x80000000
   14002d024:	mov    r14d,0xffff
   14002d02a:	test   r8w,r8w
   14002d02e:	jle    0x14002d06f
   14002d030:	test   edi,r10d
   14002d033:	jne    0x14002d069
   14002d035:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002d039:	mov    edx,r9d
   14002d03c:	add    r10d,r10d
   14002d03f:	shr    edx,0x1f
   14002d042:	add    r9d,r9d
   14002d045:	mov    ecx,r11d
   14002d048:	shr    ecx,0x1f
   14002d04b:	lea    eax,[r11+r11*1]
   14002d04f:	add    r8w,r14w
   14002d053:	or     eax,edx
   14002d055:	or     r10d,ecx
   14002d058:	mov    DWORD PTR [rbp-0x51],r9d
   14002d05c:	mov    DWORD PTR [rbp-0x4d],eax
   14002d05f:	mov    DWORD PTR [rbp-0x49],r10d
   14002d063:	test   r8w,r8w
   14002d067:	jg     0x14002d030
   14002d069:	test   r8w,r8w
   14002d06d:	jg     0x14002d0d9
   14002d06f:	add    r8w,r14w
   14002d073:	jns    0x14002d0d9
   14002d075:	movzx  eax,r8w
   14002d079:	mov    edi,ebx
   14002d07b:	neg    ax
   14002d07e:	movzx  edx,ax
   14002d081:	add    r8w,dx
   14002d085:	test   BYTE PTR [rbp-0x51],r13b
   14002d089:	je     0x14002d08e
   14002d08b:	add    edi,r13d
   14002d08e:	mov    r11d,DWORD PTR [rbp-0x4d]
   14002d092:	mov    eax,r10d
   14002d095:	shr    r9d,1
   14002d098:	mov    ecx,r11d
   14002d09b:	shl    eax,0x1f
   14002d09e:	shr    r11d,1
   14002d0a1:	shl    ecx,0x1f
   14002d0a4:	or     r11d,eax
   14002d0a7:	shr    r10d,1
   14002d0aa:	or     r9d,ecx
   14002d0ad:	sub    rdx,r13
   14002d0b0:	mov    DWORD PTR [rbp-0x4d],r11d
   14002d0b4:	mov    DWORD PTR [rbp-0x51],r9d
   14002d0b8:	jne    0x14002d085
   14002d0ba:	test   edi,edi
   14002d0bc:	mov    DWORD PTR [rbp-0x49],r10d
   14002d0c0:	mov    edi,0x80000000
   14002d0c5:	je     0x14002d0d9
   14002d0c7:	movzx  eax,r9w
   14002d0cb:	or     ax,r13w
   14002d0cf:	mov    WORD PTR [rbp-0x51],ax
   14002d0d3:	mov    r9d,DWORD PTR [rbp-0x51]
   14002d0d7:	jmp    0x14002d0dd
   14002d0d9:	movzx  eax,WORD PTR [rbp-0x51]
   14002d0dd:	mov    r13,QWORD PTR [rbp-0x61]
   14002d0e1:	mov    r15d,0x8000
   14002d0e7:	cmp    ax,r15w
   14002d0eb:	ja     0x14002d0fd
   14002d0ed:	and    r9d,0x1ffff
   14002d0f4:	cmp    r9d,0x18000
   14002d0fb:	jne    0x14002d14d
   14002d0fd:	mov    eax,DWORD PTR [rbp-0x4f]
   14002d100:	or     ecx,0xffffffff
   14002d103:	mov    r12d,0x1
   14002d109:	cmp    eax,ecx
   14002d10b:	jne    0x14002d145
   14002d10d:	mov    eax,DWORD PTR [rbp-0x4b]
   14002d110:	mov    DWORD PTR [rbp-0x4f],ebx
   14002d113:	cmp    eax,ecx
   14002d115:	jne    0x14002d139
   14002d117:	movzx  eax,WORD PTR [rbp-0x47]
   14002d11b:	mov    DWORD PTR [rbp-0x4b],ebx
   14002d11e:	cmp    ax,r14w
   14002d122:	jne    0x14002d12f
   14002d124:	mov    WORD PTR [rbp-0x47],r15w
   14002d129:	add    r8w,r12w
   14002d12d:	jmp    0x14002d13f
   14002d12f:	add    ax,r12w
   14002d133:	mov    WORD PTR [rbp-0x47],ax
   14002d137:	jmp    0x14002d13f
   14002d139:	add    eax,r12d
   14002d13c:	mov    DWORD PTR [rbp-0x4b],eax
   14002d13f:	mov    r10d,DWORD PTR [rbp-0x49]
   14002d143:	jmp    0x14002d153
   14002d145:	add    eax,r12d
   14002d148:	mov    DWORD PTR [rbp-0x4f],eax
   14002d14b:	jmp    0x14002d153
   14002d14d:	mov    r12d,0x1
   14002d153:	mov    esi,DWORD PTR [rbp-0x71]
   14002d156:	mov    eax,0x7fff
   14002d15b:	cmp    r8w,ax
   14002d15f:	jb     0x14002d170
   14002d161:	movzx  eax,WORD PTR [rbp-0x75]
   14002d165:	mov    r10d,0x7fff
   14002d16b:	neg    ax
   14002d16e:	jmp    0x14002d198
   14002d170:	movzx  eax,WORD PTR [rbp-0x4f]
   14002d174:	or     r8w,WORD PTR [rbp-0x75]
   14002d179:	mov    DWORD PTR [rbp-0x3b],r10d
   14002d17d:	mov    WORD PTR [rbp-0x41],ax
   14002d181:	mov    eax,DWORD PTR [rbp-0x4d]
   14002d184:	mov    WORD PTR [rbp-0x37],r8w
   14002d189:	mov    DWORD PTR [rbp-0x3f],eax
   14002d18c:	mov    r10d,0x7fff
   14002d192:	jmp    0x14002d1a8
   14002d194:	neg    r9w
   14002d198:	sbb    eax,eax
   14002d19a:	mov    QWORD PTR [rbp-0x41],rbx
   14002d19e:	and    eax,edi
   14002d1a0:	add    eax,0x7fff8000
   14002d1a5:	mov    DWORD PTR [rbp-0x39],eax
   14002d1a8:	test   esi,esi
   14002d1aa:	jne    0x14002ce97
   14002d1b0:	mov    eax,DWORD PTR [rbp-0x39]
   14002d1b3:	movzx  edx,WORD PTR [rbp-0x41]
   14002d1b7:	mov    ecx,DWORD PTR [rbp-0x3f]
   14002d1ba:	mov    edi,DWORD PTR [rbp-0x3b]
   14002d1bd:	shr    eax,0x10
   14002d1c0:	jmp    0x14002d1f7
   14002d1c2:	mov    edx,ebx
   14002d1c4:	movzx  eax,bx
   14002d1c7:	mov    edi,ebx
   14002d1c9:	mov    ecx,ebx
   14002d1cb:	mov    ebx,0x1
   14002d1d0:	jmp    0x14002d1f7
   14002d1d2:	mov    ecx,ebx
   14002d1d4:	movzx  edx,bx
   14002d1d7:	mov    eax,0x7fff
   14002d1dc:	mov    ebx,0x2
   14002d1e1:	mov    edi,0x80000000
   14002d1e6:	jmp    0x14002d1f7
   14002d1e8:	movzx  edx,bx
   14002d1eb:	movzx  eax,bx
   14002d1ee:	mov    edi,ebx
   14002d1f0:	mov    ecx,ebx
   14002d1f2:	mov    ebx,0x4
   14002d1f7:	mov    r8,QWORD PTR [rbp-0x59]
   14002d1fb:	or     ax,WORD PTR [rbp-0x6d]
   14002d1ff:	mov    WORD PTR [r8+0xa],ax
   14002d204:	mov    eax,ebx
   14002d206:	mov    WORD PTR [r8],dx
   14002d20a:	mov    DWORD PTR [r8+0x2],ecx
   14002d20e:	mov    DWORD PTR [r8+0x6],edi
   14002d212:	mov    rcx,QWORD PTR [rbp-0x1]
   14002d216:	xor    rcx,rsp
   14002d219:	call   0x140012670
   14002d21e:	mov    rbx,QWORD PTR [rsp+0xf0]
   14002d226:	add    rsp,0xa0
   14002d22d:	pop    r15
   14002d22f:	pop    r14
   14002d231:	pop    r13
   14002d233:	pop    r12
   14002d235:	pop    rdi
   14002d236:	pop    rsi
   14002d237:	pop    rbp
   14002d238:	ret    
   14002d239:	int3   
   14002d23a:	int3   
   14002d23b:	int3   
   14002d23c:	mov    QWORD PTR [rsp+0x10],rbx
   14002d241:	push   rbp
   14002d242:	push   rsi
   14002d243:	push   rdi
   14002d244:	push   r12
   14002d246:	push   r13
   14002d248:	push   r14
   14002d24a:	push   r15
   14002d24c:	lea    rbp,[rsp-0x27]
   14002d251:	sub    rsp,0xc0
   14002d258:	mov    rax,QWORD PTR [rip+0x126d1]        # 0x14003f930
   14002d25f:	xor    rax,rsp
   14002d262:	mov    QWORD PTR [rbp+0x17],rax
   14002d266:	movzx  edi,WORD PTR [rcx+0x8]
   14002d26a:	mov    r10d,DWORD PTR [rcx]
   14002d26d:	mov    rbx,r9
   14002d270:	mov    r9d,DWORD PTR [rcx+0x4]
   14002d274:	movzx  ecx,di
   14002d277:	mov    r11d,0x1
   14002d27d:	mov    DWORD PTR [rbp-0x4d],edx
   14002d280:	mov    edx,0x8000
   14002d285:	xor    r13d,r13d
   14002d288:	and    cx,dx
   14002d28b:	lea    r15d,[rdx-0x1]
   14002d28f:	mov    DWORD PTR [rbp-0x39],r8d
   14002d293:	and    di,r15w
   14002d297:	mov    QWORD PTR [rbp-0x41],rbx
   14002d29b:	mov    DWORD PTR [rbp-0x9],0xcccccccc
   14002d2a2:	mov    DWORD PTR [rbp-0x5],0xcccccccc
   14002d2a9:	mov    DWORD PTR [rbp-0x1],0x3ffbcccc
   14002d2b0:	mov    WORD PTR [rbp-0x67],cx
   14002d2b4:	lea    eax,[r11+0x1f]
   14002d2b8:	lea    r8d,[r11+0x2c]
   14002d2bc:	test   cx,cx
   14002d2bf:	je     0x14002d2c7
   14002d2c1:	mov    BYTE PTR [rbx+0x2],r8b
   14002d2c5:	jmp    0x14002d2ca
   14002d2c7:	mov    BYTE PTR [rbx+0x2],al
   14002d2ca:	test   di,di
   14002d2cd:	jne    0x14002d2fe
   14002d2cf:	test   r9d,r9d
   14002d2d2:	jne    0x14002d40f
   14002d2d8:	test   r10d,r10d
   14002d2db:	jne    0x14002d40f
   14002d2e1:	cmp    cx,dx
   14002d2e4:	cmove  eax,r8d
   14002d2e8:	mov    WORD PTR [rbx+0x3],0x3001
   14002d2ee:	mov    WORD PTR [rbx],r13w
   14002d2f2:	mov    BYTE PTR [rbx+0x2],al
   14002d2f5:	mov    BYTE PTR [rbx+0x5],r13b
   14002d2f9:	jmp    0x14002dc87
   14002d2fe:	cmp    di,r15w
   14002d302:	jne    0x14002d40f
   14002d308:	mov    esi,0x80000000
   14002d30d:	mov    WORD PTR [rbx],r11w
   14002d311:	cmp    r9d,esi
   14002d314:	jne    0x14002d31b
   14002d316:	test   r10d,r10d
   14002d319:	je     0x14002d354
   14002d31b:	bt     r9d,0x1e
   14002d320:	jb     0x14002d354
   14002d322:	lea    rcx,[rbx+0x4]
   14002d326:	lea    r8,[rip+0x693b]        # 0x140033c68
   14002d32d:	mov    edx,0x16
   14002d332:	call   0x14001dc7c
   14002d337:	test   eax,eax
   14002d339:	je     0x14002d3ee
   14002d33f:	xor    r9d,r9d
   14002d342:	xor    r8d,r8d
   14002d345:	xor    edx,edx
   14002d347:	xor    ecx,ecx
   14002d349:	mov    QWORD PTR [rsp+0x20],r13
   14002d34e:	call   0x140019ed0
   14002d353:	int3   
   14002d354:	test   cx,cx
   14002d357:	je     0x14002d394
   14002d359:	cmp    r9d,0xc0000000
   14002d360:	jne    0x14002d394
   14002d362:	test   r10d,r10d
   14002d365:	jne    0x14002d3d5
   14002d367:	lea    rcx,[rbx+0x4]
   14002d36b:	lea    r8,[rip+0x68ee]        # 0x140033c60
   14002d372:	lea    edx,[r10+0x16]
   14002d376:	call   0x14001dc7c
   14002d37b:	test   eax,eax
   14002d37d:	je     0x14002d3b6
   14002d37f:	xor    r9d,r9d
   14002d382:	xor    r8d,r8d
   14002d385:	xor    edx,edx
   14002d387:	xor    ecx,ecx
   14002d389:	mov    QWORD PTR [rsp+0x20],r13
   14002d38e:	call   0x140019ed0
   14002d393:	int3   
   14002d394:	cmp    r9d,esi
   14002d397:	jne    0x14002d3d5
   14002d399:	test   r10d,r10d
   14002d39c:	jne    0x14002d3d5
   14002d39e:	lea    rcx,[rbx+0x4]
   14002d3a2:	lea    r8,[rip+0x68af]        # 0x140033c58
   14002d3a9:	lea    edx,[r10+0x16]
   14002d3ad:	call   0x14001dc7c
   14002d3b2:	test   eax,eax
   14002d3b4:	jne    0x14002d3c0
   14002d3b6:	mov    eax,0x5
   14002d3bb:	mov    BYTE PTR [rbx+0x3],al
   14002d3be:	jmp    0x14002d3f2
   14002d3c0:	xor    r9d,r9d
   14002d3c3:	xor    r8d,r8d
   14002d3c6:	xor    edx,edx
   14002d3c8:	xor    ecx,ecx
   14002d3ca:	mov    QWORD PTR [rsp+0x20],r13
   14002d3cf:	call   0x140019ed0
   14002d3d4:	int3   
   14002d3d5:	lea    rcx,[rbx+0x4]
   14002d3d9:	lea    r8,[rip+0x6870]        # 0x140033c50
   14002d3e0:	mov    edx,0x16
   14002d3e5:	call   0x14001dc7c
   14002d3ea:	test   eax,eax
   14002d3ec:	jne    0x14002d3fa
   14002d3ee:	mov    BYTE PTR [rbx+0x3],0x6
   14002d3f2:	mov    r11d,r13d
   14002d3f5:	jmp    0x14002dc87
   14002d3fa:	xor    r9d,r9d
   14002d3fd:	xor    r8d,r8d
   14002d400:	xor    edx,edx
   14002d402:	xor    ecx,ecx
   14002d404:	mov    QWORD PTR [rsp+0x20],r13
   14002d409:	call   0x140019ed0
   14002d40e:	int3   
   14002d40f:	movzx  r8d,di
   14002d413:	mov    ecx,r9d
   14002d416:	mov    DWORD PTR [rbp-0x13],r9d
   14002d41a:	shr    ecx,0x18
   14002d41d:	mov    eax,r8d
   14002d420:	mov    DWORD PTR [rbp-0x17],r10d
   14002d424:	shr    eax,0x8
   14002d427:	lea    r9,[rip+0x13c72]        # 0x1400410a0
   14002d42e:	mov    esi,0x80000000
   14002d433:	imul   r8d,r8d,0x4d10
   14002d43a:	lea    edx,[rax+rcx*2]
   14002d43d:	mov    r12d,0x5
   14002d443:	sub    r9,0x60
   14002d447:	mov    WORD PTR [rbp-0xf],di
   14002d44b:	mov    WORD PTR [rbp-0x19],r13w
   14002d450:	mov    r14d,0xbffd
   14002d456:	imul   edx,edx,0x4d
   14002d459:	lea    ecx,[rdx+r8*1-0x134312f4]
   14002d461:	mov    DWORD PTR [rbp-0x49],r12d
   14002d465:	lea    edi,[rsi-0x1]
   14002d468:	sar    ecx,0x10
   14002d46b:	movsx  r10d,cx
   14002d46f:	mov    DWORD PTR [rbp-0x61],ecx
   14002d472:	neg    r10d
   14002d475:	je     0x14002d7e0
   14002d47b:	test   r10d,r10d
   14002d47e:	jns    0x14002d491
   14002d480:	lea    r9,[rip+0x13d79]        # 0x140041200
   14002d487:	neg    r10d
   14002d48a:	sub    r9,0x60
   14002d48e:	test   r10d,r10d
   14002d491:	je     0x14002d7e0
   14002d497:	mov    r8d,DWORD PTR [rbp-0x15]
   14002d49b:	mov    edx,DWORD PTR [rbp-0x19]
   14002d49e:	mov    eax,r10d
   14002d4a1:	add    r9,0x54
   14002d4a5:	sar    r10d,0x3
   14002d4a9:	and    eax,0x7
   14002d4ac:	mov    DWORD PTR [rbp-0x51],r10d
   14002d4b0:	mov    QWORD PTR [rbp-0x59],r9
   14002d4b4:	je     0x14002d7c8
   14002d4ba:	cdqe   
   14002d4bc:	lea    rcx,[rax+rax*2]
   14002d4c0:	lea    r14,[r9+rcx*4]
   14002d4c4:	mov    r9d,0x8000
   14002d4ca:	mov    QWORD PTR [rbp-0x31],r14
   14002d4ce:	cmp    WORD PTR [r14],r9w
   14002d4d2:	jb     0x14002d4f4
   14002d4d4:	mov    rcx,QWORD PTR [r14]
   14002d4d7:	mov    eax,DWORD PTR [r14+0x8]
   14002d4db:	lea    r14,[rbp+0x7]
   14002d4df:	mov    QWORD PTR [rbp+0x7],rcx
   14002d4e3:	shr    rcx,0x10
   14002d4e7:	mov    DWORD PTR [rbp+0xf],eax
   14002d4ea:	sub    ecx,r11d
   14002d4ed:	mov    QWORD PTR [rbp-0x31],r14
   14002d4f1:	mov    DWORD PTR [rbp+0x9],ecx
   14002d4f4:	movzx  ecx,WORD PTR [r14+0xa]
   14002d4f9:	movzx  eax,WORD PTR [rbp-0xf]
   14002d4fd:	mov    DWORD PTR [rbp-0x65],r13d
   14002d501:	movzx  ebx,cx
   14002d504:	and    cx,r15w
   14002d508:	mov    QWORD PTR [rbp-0x29],0x0
   14002d510:	xor    bx,ax
   14002d513:	and    ax,r15w
   14002d517:	mov    DWORD PTR [rbp-0x21],r13d
   14002d51b:	and    bx,r9w
   14002d51f:	lea    r9d,[rax+rcx*1]
   14002d523:	mov    WORD PTR [rbp-0x69],bx
   14002d527:	cmp    ax,r15w
   14002d52b:	jae    0x14002d7a8
   14002d531:	cmp    cx,r15w
   14002d535:	jae    0x14002d7a8
   14002d53b:	mov    r15d,0xbffd
   14002d541:	cmp    r9w,r15w
   14002d545:	ja     0x14002d7a2
   14002d54b:	mov    ebx,0x3fbf
   14002d550:	cmp    r9w,bx
   14002d554:	ja     0x14002d569
   14002d556:	mov    QWORD PTR [rbp-0x15],0x0
   14002d55e:	mov    r15d,0x7fff
   14002d564:	jmp    0x14002d7bb
   14002d569:	test   ax,ax
   14002d56c:	jne    0x14002d590
   14002d56e:	add    r9w,r11w
   14002d572:	test   DWORD PTR [rbp-0x11],edi
   14002d575:	jne    0x14002d590
   14002d577:	test   r8d,r8d
   14002d57a:	jne    0x14002d590
   14002d57c:	test   edx,edx
   14002d57e:	jne    0x14002d590
   14002d580:	mov    WORD PTR [rbp-0xf],r13w
   14002d585:	mov    r15d,0x7fff
   14002d58b:	jmp    0x14002d7c4
   14002d590:	test   cx,cx
   14002d593:	jne    0x14002d5aa
   14002d595:	add    r9w,r11w
   14002d599:	test   DWORD PTR [r14+0x8],edi
   14002d59d:	jne    0x14002d5aa
   14002d59f:	cmp    DWORD PTR [r14+0x4],r13d
   14002d5a3:	jne    0x14002d5aa
   14002d5a5:	cmp    DWORD PTR [r14],r13d
   14002d5a8:	je     0x14002d556
   14002d5aa:	mov    esi,r13d
   14002d5ad:	lea    r10,[rbp-0x29]
   14002d5b1:	mov    edi,r12d
   14002d5b4:	lea    eax,[rsi+rsi*1]
   14002d5b7:	mov    r15d,edi
   14002d5ba:	movsxd rcx,eax
   14002d5bd:	test   edi,edi
   14002d5bf:	jle    0x14002d617
   14002d5c1:	mov    ebx,esi
   14002d5c3:	lea    r13,[r14+0x8]
   14002d5c7:	lea    r12,[rbp+rcx*1-0x19]
   14002d5cc:	and    ebx,r11d
   14002d5cf:	xor    r14d,r14d
   14002d5d2:	movzx  eax,WORD PTR [r12]
   14002d5d7:	movzx  ecx,WORD PTR [r13+0x0]
   14002d5dc:	mov    r8d,r14d
   14002d5df:	imul   ecx,eax
   14002d5e2:	mov    eax,DWORD PTR [r10]
   14002d5e5:	lea    edx,[rax+rcx*1]
   14002d5e8:	cmp    edx,eax
   14002d5ea:	jb     0x14002d5f0
   14002d5ec:	cmp    edx,ecx
   14002d5ee:	jae    0x14002d5f3
   14002d5f0:	mov    r8d,r11d
   14002d5f3:	mov    DWORD PTR [r10],edx
   14002d5f6:	test   r8d,r8d
   14002d5f9:	je     0x14002d600
   14002d5fb:	add    WORD PTR [r10+0x4],r11w
   14002d600:	sub    r15d,r11d
   14002d603:	add    r12,0x2
   14002d607:	sub    r13,0x2
   14002d60b:	test   r15d,r15d
   14002d60e:	jg     0x14002d5d2
   14002d610:	mov    r14,QWORD PTR [rbp-0x31]
   14002d614:	xor    r13d,r13d
   14002d617:	sub    edi,r11d
   14002d61a:	add    r10,0x2
   14002d61e:	add    esi,r11d
   14002d621:	test   edi,edi
   14002d623:	jg     0x14002d5b4
   14002d625:	mov    r10d,DWORD PTR [rbp-0x21]
   14002d629:	mov    r8d,DWORD PTR [rbp-0x29]
   14002d62d:	mov    eax,0xc002
   14002d632:	add    r9w,ax
   14002d636:	mov    esi,0x80000000
   14002d63b:	mov    ebx,0xffff
   14002d640:	test   r9w,r9w
   14002d644:	jle    0x14002d682
   14002d646:	test   esi,r10d
   14002d649:	jne    0x14002d67c
   14002d64b:	mov    edi,DWORD PTR [rbp-0x25]
   14002d64e:	mov    edx,r8d
   14002d651:	add    r10d,r10d
   14002d654:	shr    edx,0x1f
   14002d657:	add    r8d,r8d
   14002d65a:	mov    ecx,edi
   14002d65c:	shr    ecx,0x1f
   14002d65f:	lea    eax,[rdi+rdi*1]
   14002d662:	add    r9w,bx
   14002d666:	or     eax,edx
   14002d668:	or     r10d,ecx
   14002d66b:	mov    DWORD PTR [rbp-0x29],r8d
   14002d66f:	mov    DWORD PTR [rbp-0x25],eax
   14002d672:	mov    DWORD PTR [rbp-0x21],r10d
   14002d676:	test   r9w,r9w
   14002d67a:	jg     0x14002d646
   14002d67c:	test   r9w,r9w
   14002d680:	jg     0x14002d6ef
   14002d682:	add    r9w,bx
   14002d686:	jns    0x14002d6ef
   14002d688:	movzx  eax,r9w
   14002d68c:	neg    ax
   14002d68f:	movzx  edx,ax
   14002d692:	add    r9w,dx
   14002d696:	mov    WORD PTR [rbp-0x5d],r9w
   14002d69b:	mov    r9d,DWORD PTR [rbp-0x65]
   14002d69f:	test   BYTE PTR [rbp-0x29],r11b
   14002d6a3:	je     0x14002d6a8
   14002d6a5:	add    r9d,r11d
   14002d6a8:	mov    edi,DWORD PTR [rbp-0x25]
   14002d6ab:	mov    eax,r10d
   14002d6ae:	shr    r8d,1
   14002d6b1:	mov    ecx,edi
   14002d6b3:	shl    eax,0x1f
   14002d6b6:	shr    edi,1
   14002d6b8:	shl    ecx,0x1f
   14002d6bb:	or     edi,eax
   14002d6bd:	shr    r10d,1
   14002d6c0:	or     r8d,ecx
   14002d6c3:	sub    rdx,r11
   14002d6c6:	mov    DWORD PTR [rbp-0x25],edi
   14002d6c9:	mov    DWORD PTR [rbp-0x29],r8d
   14002d6cd:	jne    0x14002d69f
   14002d6cf:	test   r9d,r9d
   14002d6d2:	movzx  r9d,WORD PTR [rbp-0x5d]
   14002d6d7:	mov    DWORD PTR [rbp-0x21],r10d
   14002d6db:	je     0x14002d6ef
   14002d6dd:	movzx  eax,r8w
   14002d6e1:	or     ax,r11w
   14002d6e5:	mov    WORD PTR [rbp-0x29],ax
   14002d6e9:	mov    r8d,DWORD PTR [rbp-0x29]
   14002d6ed:	jmp    0x14002d6f3
   14002d6ef:	movzx  eax,WORD PTR [rbp-0x29]
   14002d6f3:	mov    ecx,0x8000
   14002d6f8:	cmp    ax,cx
   14002d6fb:	ja     0x14002d70d
   14002d6fd:	and    r8d,0x1ffff
   14002d704:	cmp    r8d,0x18000
   14002d70b:	jne    0x14002d755
   14002d70d:	mov    eax,DWORD PTR [rbp-0x27]
   14002d710:	or     edx,0xffffffff
   14002d713:	cmp    eax,edx
   14002d715:	jne    0x14002d74f
   14002d717:	mov    eax,DWORD PTR [rbp-0x23]
   14002d71a:	mov    DWORD PTR [rbp-0x27],r13d
   14002d71e:	cmp    eax,edx
   14002d720:	jne    0x14002d743
   14002d722:	movzx  eax,WORD PTR [rbp-0x1f]
   14002d726:	mov    DWORD PTR [rbp-0x23],r13d
   14002d72a:	cmp    ax,bx
   14002d72d:	jne    0x14002d739
   14002d72f:	mov    WORD PTR [rbp-0x1f],cx
   14002d733:	add    r9w,r11w
   14002d737:	jmp    0x14002d749
   14002d739:	add    ax,r11w
   14002d73d:	mov    WORD PTR [rbp-0x1f],ax
   14002d741:	jmp    0x14002d749
   14002d743:	add    eax,r11d
   14002d746:	mov    DWORD PTR [rbp-0x23],eax
   14002d749:	mov    r10d,DWORD PTR [rbp-0x21]
   14002d74d:	jmp    0x14002d755
   14002d74f:	add    eax,r11d
   14002d752:	mov    DWORD PTR [rbp-0x27],eax
   14002d755:	mov    r15d,0x7fff
   14002d75b:	mov    r12d,0x5
   14002d761:	mov    edi,0x7fffffff
   14002d766:	cmp    r9w,r15w
   14002d76a:	jb     0x14002d779
   14002d76c:	movzx  eax,WORD PTR [rbp-0x69]
   14002d770:	mov    r10d,DWORD PTR [rbp-0x51]
   14002d774:	neg    ax
   14002d777:	jmp    0x14002d7ab
   14002d779:	movzx  eax,WORD PTR [rbp-0x27]
   14002d77d:	or     r9w,WORD PTR [rbp-0x69]
   14002d782:	mov    DWORD PTR [rbp-0x13],r10d
   14002d786:	mov    r10d,DWORD PTR [rbp-0x51]
   14002d78a:	mov    WORD PTR [rbp-0x19],ax
   14002d78e:	mov    eax,DWORD PTR [rbp-0x25]
   14002d791:	mov    DWORD PTR [rbp-0x17],eax
   14002d794:	mov    r8d,DWORD PTR [rbp-0x15]
   14002d798:	mov    edx,DWORD PTR [rbp-0x19]
   14002d79b:	mov    WORD PTR [rbp-0xf],r9w
   14002d7a0:	jmp    0x14002d7c4
   14002d7a2:	mov    r15d,0x7fff
   14002d7a8:	neg    bx
   14002d7ab:	sbb    eax,eax
   14002d7ad:	mov    DWORD PTR [rbp-0x15],r13d
   14002d7b1:	and    eax,esi
   14002d7b3:	add    eax,0x7fff8000
   14002d7b8:	mov    DWORD PTR [rbp-0x11],eax
   14002d7bb:	mov    edx,r13d
   14002d7be:	mov    r8d,r13d
   14002d7c1:	mov    DWORD PTR [rbp-0x19],edx
   14002d7c4:	mov    r9,QWORD PTR [rbp-0x59]
   14002d7c8:	test   r10d,r10d
   14002d7cb:	jne    0x14002d49e
   14002d7d1:	mov    rbx,QWORD PTR [rbp-0x41]
   14002d7d5:	mov    ecx,DWORD PTR [rbp-0x61]
   14002d7d8:	mov    r14d,0xbffd
   14002d7de:	jmp    0x14002d7e7
   14002d7e0:	mov    r8d,DWORD PTR [rbp-0x15]
   14002d7e4:	mov    edx,DWORD PTR [rbp-0x19]
   14002d7e7:	mov    eax,DWORD PTR [rbp-0x11]
   14002d7ea:	mov    r9d,0x3fff
   14002d7f0:	shr    eax,0x10
   14002d7f3:	cmp    ax,r9w
   14002d7f7:	jb     0x14002dab1
   14002d7fd:	add    cx,r11w
   14002d801:	mov    r9d,0x8000
   14002d807:	mov    DWORD PTR [rbp-0x65],r13d
   14002d80b:	lea    r10d,[r9-0x1]
   14002d80f:	mov    DWORD PTR [rbp-0x61],ecx
   14002d812:	movzx  ecx,WORD PTR [rbp+0x1]
   14002d816:	movzx  r15d,cx
   14002d81a:	and    cx,r10w
   14002d81e:	mov    QWORD PTR [rbp-0x29],0x0
   14002d826:	xor    r15w,ax
   14002d82a:	and    ax,r10w
   14002d82e:	mov    DWORD PTR [rbp-0x21],r13d
   14002d832:	and    r15w,r9w
   14002d836:	lea    r9d,[rax+rcx*1]
   14002d83a:	cmp    ax,r10w
   14002d83e:	jae    0x14002da9b
   14002d844:	cmp    cx,r10w
   14002d848:	jae    0x14002da9b
   14002d84e:	cmp    r9w,r14w
   14002d852:	ja     0x14002da9b
   14002d858:	mov    r10d,0x3fbf
   14002d85e:	cmp    r9w,r10w
   14002d862:	ja     0x14002d86d
   14002d864:	mov    DWORD PTR [rbp-0x11],r13d
   14002d868:	jmp    0x14002daab
   14002d86d:	test   ax,ax
   14002d870:	jne    0x14002d88e
   14002d872:	add    r9w,r11w
   14002d876:	test   DWORD PTR [rbp-0x11],edi
   14002d879:	jne    0x14002d88e
   14002d87b:	test   r8d,r8d
   14002d87e:	jne    0x14002d88e
   14002d880:	test   edx,edx
   14002d882:	jne    0x14002d88e
   14002d884:	mov    WORD PTR [rbp-0xf],r13w
   14002d889:	jmp    0x14002dab1
   14002d88e:	test   cx,cx
   14002d891:	jne    0x14002d8a8
   14002d893:	add    r9w,r11w
   14002d897:	test   DWORD PTR [rbp-0x1],edi
   14002d89a:	jne    0x14002d8a8
   14002d89c:	cmp    DWORD PTR [rbp-0x5],r13d
   14002d8a0:	jne    0x14002d8a8
   14002d8a2:	cmp    DWORD PTR [rbp-0x9],r13d
   14002d8a6:	je     0x14002d864
   14002d8a8:	mov    edi,r13d
   14002d8ab:	lea    rdx,[rbp-0x29]
   14002d8af:	lea    eax,[rdi+rdi*1]
   14002d8b2:	xor    ebx,ebx
   14002d8b4:	mov    r13d,r12d
   14002d8b7:	movsxd rcx,eax
   14002d8ba:	test   r12d,r12d
   14002d8bd:	jle    0x14002d910
   14002d8bf:	mov    r14d,edi
   14002d8c2:	lea    rsi,[rbp-0x1]
   14002d8c6:	lea    r12,[rbp+rcx*1-0x19]
   14002d8cb:	and    r14d,r11d
   14002d8ce:	movzx  eax,WORD PTR [r12]
   14002d8d3:	movzx  ecx,WORD PTR [rsi]
   14002d8d6:	mov    r8d,ebx
   14002d8d9:	imul   ecx,eax
   14002d8dc:	mov    eax,DWORD PTR [rdx]
   14002d8de:	lea    r10d,[rax+rcx*1]
   14002d8e2:	cmp    r10d,eax
   14002d8e5:	jb     0x14002d8ec
   14002d8e7:	cmp    r10d,ecx
   14002d8ea:	jae    0x14002d8ef
   14002d8ec:	mov    r8d,r11d
   14002d8ef:	mov    DWORD PTR [rdx],r10d
   14002d8f2:	test   r8d,r8d
   14002d8f5:	je     0x14002d8fc
   14002d8f7:	add    WORD PTR [rdx+0x4],r11w
   14002d8fc:	sub    r13d,r11d
   14002d8ff:	add    r12,0x2
   14002d903:	sub    rsi,0x2
   14002d907:	test   r13d,r13d
   14002d90a:	jg     0x14002d8ce
   14002d90c:	mov    r12d,DWORD PTR [rbp-0x49]
   14002d910:	sub    r12d,r11d
   14002d913:	add    rdx,0x2
   14002d917:	add    edi,r11d
   14002d91a:	xor    r13d,r13d
   14002d91d:	mov    DWORD PTR [rbp-0x49],r12d
   14002d921:	test   r12d,r12d
   14002d924:	jg     0x14002d8af
   14002d926:	mov    rbx,QWORD PTR [rbp-0x41]
   14002d92a:	mov    r8d,DWORD PTR [rbp-0x21]
   14002d92e:	mov    r10d,DWORD PTR [rbp-0x29]
   14002d932:	mov    eax,0xc002
   14002d937:	mov    esi,0x80000000
   14002d93c:	mov    r12d,0xffff
   14002d942:	add    r9w,ax
   14002d946:	test   r9w,r9w
   14002d94a:	jle    0x14002d988
   14002d94c:	test   esi,r8d
   14002d94f:	jne    0x14002d982
   14002d951:	mov    edi,DWORD PTR [rbp-0x25]
   14002d954:	mov    edx,r10d
   14002d957:	add    r8d,r8d
   14002d95a:	shr    edx,0x1f
   14002d95d:	add    r10d,r10d
   14002d960:	mov    ecx,edi
   14002d962:	shr    ecx,0x1f
   14002d965:	lea    eax,[rdi+rdi*1]
   14002d968:	add    r9w,r12w
   14002d96c:	or     eax,edx
   14002d96e:	or     r8d,ecx
   14002d971:	mov    DWORD PTR [rbp-0x29],r10d
   14002d975:	mov    DWORD PTR [rbp-0x25],eax
   14002d978:	mov    DWORD PTR [rbp-0x21],r8d
   14002d97c:	test   r9w,r9w
   14002d980:	jg     0x14002d94c
   14002d982:	test   r9w,r9w
   14002d986:	jg     0x14002d9ed
   14002d988:	add    r9w,r12w
   14002d98c:	jns    0x14002d9ed
   14002d98e:	mov    ebx,DWORD PTR [rbp-0x65]
   14002d991:	movzx  eax,r9w
   14002d995:	neg    ax
   14002d998:	movzx  edx,ax
   14002d99b:	add    r9w,dx
   14002d99f:	test   BYTE PTR [rbp-0x29],r11b
   14002d9a3:	je     0x14002d9a8
   14002d9a5:	add    ebx,r11d
   14002d9a8:	mov    edi,DWORD PTR [rbp-0x25]
   14002d9ab:	mov    eax,r8d
   14002d9ae:	shr    r10d,1
   14002d9b1:	mov    ecx,edi
   14002d9b3:	shl    eax,0x1f
   14002d9b6:	shr    edi,1
   14002d9b8:	shl    ecx,0x1f
   14002d9bb:	or     edi,eax
   14002d9bd:	shr    r8d,1
   14002d9c0:	or     r10d,ecx
   14002d9c3:	sub    rdx,r11
   14002d9c6:	mov    DWORD PTR [rbp-0x25],edi
   14002d9c9:	mov    DWORD PTR [rbp-0x29],r10d
   14002d9cd:	jne    0x14002d99f
   14002d9cf:	test   ebx,ebx
   14002d9d1:	mov    rbx,QWORD PTR [rbp-0x41]
   14002d9d5:	mov    DWORD PTR [rbp-0x21],r8d
   14002d9d9:	je     0x14002d9ed
   14002d9db:	movzx  eax,r10w
   14002d9df:	or     ax,r11w
   14002d9e3:	mov    WORD PTR [rbp-0x29],ax
   14002d9e7:	mov    r10d,DWORD PTR [rbp-0x29]
   14002d9eb:	jmp    0x14002d9f1
   14002d9ed:	movzx  eax,WORD PTR [rbp-0x29]
   14002d9f1:	mov    ecx,0x8000
   14002d9f6:	cmp    ax,cx
   14002d9f9:	ja     0x14002da0b
   14002d9fb:	and    r10d,0x1ffff
   14002da02:	cmp    r10d,0x18000
   14002da09:	jne    0x14002da54
   14002da0b:	mov    eax,DWORD PTR [rbp-0x27]
   14002da0e:	or     edx,0xffffffff
   14002da11:	cmp    eax,edx
   14002da13:	jne    0x14002da4e
   14002da15:	mov    eax,DWORD PTR [rbp-0x23]
   14002da18:	mov    DWORD PTR [rbp-0x27],r13d
   14002da1c:	cmp    eax,edx
   14002da1e:	jne    0x14002da42
   14002da20:	movzx  eax,WORD PTR [rbp-0x1f]
   14002da24:	mov    DWORD PTR [rbp-0x23],r13d
   14002da28:	cmp    ax,r12w
   14002da2c:	jne    0x14002da38
   14002da2e:	mov    WORD PTR [rbp-0x1f],cx
   14002da32:	add    r9w,r11w
   14002da36:	jmp    0x14002da48
   14002da38:	add    ax,r11w
   14002da3c:	mov    WORD PTR [rbp-0x1f],ax
   14002da40:	jmp    0x14002da48
   14002da42:	add    eax,r11d
   14002da45:	mov    DWORD PTR [rbp-0x23],eax
   14002da48:	mov    r8d,DWORD PTR [rbp-0x21]
   14002da4c:	jmp    0x14002da54
   14002da4e:	add    eax,r11d
   14002da51:	mov    DWORD PTR [rbp-0x27],eax
   14002da54:	mov    eax,0x7fff
   14002da59:	cmp    r9w,ax
   14002da5d:	jb     0x14002da77
   14002da5f:	neg    r15w
   14002da63:	mov    r8d,r13d
   14002da66:	mov    edx,r13d
   14002da69:	sbb    eax,eax
   14002da6b:	and    eax,esi
   14002da6d:	add    eax,0x7fff8000
   14002da72:	mov    DWORD PTR [rbp-0x11],eax
   14002da75:	jmp    0x14002dab6
   14002da77:	movzx  eax,WORD PTR [rbp-0x27]
   14002da7b:	or     r9w,r15w
   14002da7f:	mov    DWORD PTR [rbp-0x13],r8d
   14002da83:	mov    WORD PTR [rbp-0x19],ax
   14002da87:	mov    eax,DWORD PTR [rbp-0x25]
   14002da8a:	mov    WORD PTR [rbp-0xf],r9w
   14002da8f:	mov    DWORD PTR [rbp-0x17],eax
   14002da92:	mov    r8d,DWORD PTR [rbp-0x15]
   14002da96:	mov    edx,DWORD PTR [rbp-0x19]
   14002da99:	jmp    0x14002dab6
   14002da9b:	neg    r15w
   14002da9f:	sbb    eax,eax
   14002daa1:	and    eax,esi
   14002daa3:	add    eax,0x7fff8000
   14002daa8:	mov    DWORD PTR [rbp-0x11],eax
   14002daab:	mov    edx,r13d
   14002daae:	mov    r8d,r13d
   14002dab1:	mov    ecx,0x8000
   14002dab6:	mov    eax,DWORD PTR [rbp-0x61]
   14002dab9:	mov    r12d,DWORD PTR [rbp-0x4d]
   14002dabd:	mov    WORD PTR [rbx],ax
   14002dac0:	test   BYTE PTR [rbp-0x39],r11b
   14002dac4:	je     0x14002dae3
   14002dac6:	cwde   
   14002dac7:	add    r12d,eax
   14002daca:	test   r12d,r12d
   14002dacd:	jg     0x14002dae3
   14002dacf:	cmp    WORD PTR [rbp-0x67],cx
   14002dad3:	mov    eax,0x20
   14002dad8:	lea    ecx,[rax+0xd]
   14002dadb:	cmove  eax,ecx
   14002dade:	jmp    0x14002d2e8
   14002dae3:	mov    r9d,DWORD PTR [rbp-0x11]
   14002dae7:	mov    eax,0x15
   14002daec:	mov    WORD PTR [rbp-0xf],r13w
   14002daf1:	mov    esi,DWORD PTR [rbp-0x11]
   14002daf4:	cmp    r12d,eax
   14002daf7:	lea    r10d,[rax-0xd]
   14002dafb:	cmovg  r12d,eax
   14002daff:	shr    r9d,0x10
   14002db03:	sub    r9d,0x3ffe
   14002db0a:	mov    ecx,r8d
   14002db0d:	mov    eax,edx
   14002db0f:	add    esi,esi
   14002db11:	add    r8d,r8d
   14002db14:	shr    eax,0x1f
   14002db17:	shr    ecx,0x1f
   14002db1a:	or     r8d,eax
   14002db1d:	or     esi,ecx
   14002db1f:	add    edx,edx
   14002db21:	sub    r10,r11
   14002db24:	jne    0x14002db0a
   14002db26:	mov    DWORD PTR [rbp-0x15],r8d
   14002db2a:	mov    DWORD PTR [rbp-0x19],edx
   14002db2d:	test   r9d,r9d
   14002db30:	jns    0x14002db64
   14002db32:	neg    r9d
   14002db35:	movzx  r10d,r9b
   14002db39:	test   r10d,r10d
   14002db3c:	jle    0x14002db64
   14002db3e:	mov    ecx,r8d
   14002db41:	mov    eax,esi
   14002db43:	shr    edx,1
   14002db45:	shr    r8d,1
   14002db48:	shl    eax,0x1f
   14002db4b:	shl    ecx,0x1f
   14002db4e:	sub    r10d,r11d
   14002db51:	shr    esi,1
   14002db53:	or     r8d,eax
   14002db56:	or     edx,ecx
   14002db58:	test   r10d,r10d
   14002db5b:	jg     0x14002db3e
   14002db5d:	mov    DWORD PTR [rbp-0x15],r8d
   14002db61:	mov    DWORD PTR [rbp-0x19],edx
   14002db64:	lea    r14d,[r12+0x1]
   14002db69:	lea    rdi,[rbx+0x4]
   14002db6d:	mov    r10,rdi
   14002db70:	test   r14d,r14d
   14002db73:	jle    0x14002dc43
   14002db79:	mov    r13,QWORD PTR [rbp-0x19]
   14002db7d:	mov    ecx,r8d
   14002db80:	add    r8d,r8d
   14002db83:	shr    ecx,0x1f
   14002db86:	mov    eax,edx
   14002db88:	add    edx,edx
   14002db8a:	shr    eax,0x1f
   14002db8d:	lea    r9d,[rsi+rsi*1]
   14002db91:	mov    QWORD PTR [rbp+0x7],r13
   14002db95:	or     r8d,eax
   14002db98:	or     r9d,ecx
   14002db9b:	mov    eax,edx
   14002db9d:	mov    ecx,r8d
   14002dba0:	shr    eax,0x1f
   14002dba3:	add    r8d,r8d
   14002dba6:	or     r8d,eax
   14002dba9:	add    edx,edx
   14002dbab:	add    r9d,r9d
   14002dbae:	shr    ecx,0x1f
   14002dbb1:	mov    eax,r13d
   14002dbb4:	lea    r15d,[rax+rdx*1]
   14002dbb8:	or     r9d,ecx
   14002dbbb:	cmp    r15d,edx
   14002dbbe:	jb     0x14002dbc5
   14002dbc0:	cmp    r15d,eax
   14002dbc3:	jae    0x14002dbe2
   14002dbc5:	lea    eax,[r8+0x1]
   14002dbc9:	xor    ecx,ecx
   14002dbcb:	cmp    eax,r8d
   14002dbce:	jb     0x14002dbd5
   14002dbd0:	cmp    eax,r11d
   14002dbd3:	jae    0x14002dbd8
   14002dbd5:	mov    ecx,r11d
   14002dbd8:	mov    r8d,eax
   14002dbdb:	test   ecx,ecx
   14002dbdd:	je     0x14002dbe2
   14002dbdf:	add    r9d,r11d
   14002dbe2:	shr    r13,0x20
   14002dbe6:	lea    r12d,[r8+r13*1]
   14002dbea:	cmp    r12d,r8d
   14002dbed:	jb     0x14002dbf4
   14002dbef:	cmp    r12d,r13d
   14002dbf2:	jae    0x14002dbf7
   14002dbf4:	add    r9d,r11d
   14002dbf7:	add    r9d,esi
   14002dbfa:	xor    r13d,r13d
   14002dbfd:	mov    eax,r15d
   14002dc00:	shr    eax,0x1f
   14002dc03:	lea    r8d,[r12+r12*1]
   14002dc07:	mov    ecx,r12d
   14002dc0a:	or     r8d,eax
   14002dc0d:	shr    ecx,0x1f
   14002dc10:	lea    eax,[r9+r9*1]
   14002dc14:	or     eax,ecx
   14002dc16:	lea    edx,[r15+r15*1]
   14002dc1a:	sub    r14d,r11d
   14002dc1d:	mov    DWORD PTR [rbp-0x11],eax
   14002dc20:	shr    eax,0x18
   14002dc23:	mov    DWORD PTR [rbp-0x19],edx
   14002dc26:	add    al,0x30
   14002dc28:	mov    DWORD PTR [rbp-0x15],r8d
   14002dc2c:	mov    BYTE PTR [rbp-0xe],r13b
   14002dc30:	mov    BYTE PTR [r10],al
   14002dc33:	add    r10,r11
   14002dc36:	test   r14d,r14d
   14002dc39:	jle    0x14002dc43
   14002dc3b:	mov    esi,DWORD PTR [rbp-0x11]
   14002dc3e:	jmp    0x14002db79
   14002dc43:	sub    r10,r11
   14002dc46:	mov    al,BYTE PTR [r10]
   14002dc49:	sub    r10,r11
   14002dc4c:	cmp    al,0x35
   14002dc4e:	jl     0x14002dcba
   14002dc50:	jmp    0x14002dc5f
   14002dc52:	cmp    BYTE PTR [r10],0x39
   14002dc56:	jne    0x14002dc64
   14002dc58:	mov    BYTE PTR [r10],0x30
   14002dc5c:	sub    r10,r11
   14002dc5f:	cmp    r10,rdi
   14002dc62:	jae    0x14002dc52
   14002dc64:	cmp    r10,rdi
   14002dc67:	jae    0x14002dc70
   14002dc69:	add    r10,r11
   14002dc6c:	add    WORD PTR [rbx],r11w
   14002dc70:	add    BYTE PTR [r10],r11b
   14002dc73:	sub    r10b,bl
   14002dc76:	sub    r10b,0x3
   14002dc7a:	movsx  rax,r10b
   14002dc7e:	mov    BYTE PTR [rbx+0x3],r10b
   14002dc82:	mov    BYTE PTR [rax+rbx*1+0x4],r13b
   14002dc87:	mov    eax,r11d
   14002dc8a:	mov    rcx,QWORD PTR [rbp+0x17]
   14002dc8e:	xor    rcx,rsp
   14002dc91:	call   0x140012670
   14002dc96:	mov    rbx,QWORD PTR [rsp+0x108]
   14002dc9e:	add    rsp,0xc0
   14002dca5:	pop    r15
   14002dca7:	pop    r14
   14002dca9:	pop    r13
   14002dcab:	pop    r12
   14002dcad:	pop    rdi
   14002dcae:	pop    rsi
   14002dcaf:	pop    rbp
   14002dcb0:	ret    
   14002dcb1:	cmp    BYTE PTR [r10],0x30
   14002dcb5:	jne    0x14002dcbf
   14002dcb7:	sub    r10,r11
   14002dcba:	cmp    r10,rdi
   14002dcbd:	jae    0x14002dcb1
   14002dcbf:	cmp    r10,rdi
   14002dcc2:	jae    0x14002dc73
   14002dcc4:	mov    eax,0x20
   14002dcc9:	mov    r9d,0x8000
   14002dccf:	mov    BYTE PTR [rbx+0x3],r11b
   14002dcd3:	cmp    WORD PTR [rbp-0x67],r9w
   14002dcd8:	lea    ecx,[rax+0xd]
   14002dcdb:	mov    BYTE PTR [rdi],0x30
   14002dcde:	cmove  eax,ecx
   14002dce1:	jmp    0x14002d2ee
   14002dce6:	int3   
   14002dce7:	int3   
   14002dce8:	mov    rax,rsp
   14002dceb:	mov    QWORD PTR [rax+0x8],rbx
   14002dcef:	mov    QWORD PTR [rax+0x10],rbp
   14002dcf3:	mov    QWORD PTR [rax+0x18],rsi
   14002dcf7:	mov    QWORD PTR [rax+0x20],rdi
   14002dcfb:	push   r12
   14002dcfd:	push   r13
   14002dcff:	push   r15
   14002dd01:	sub    rsp,0x10
   14002dd05:	and    DWORD PTR [r8],0x0
   14002dd09:	and    DWORD PTR [r8+0x4],0x0
   14002dd0e:	and    DWORD PTR [r8+0x8],0x0
   14002dd13:	mov    r10,r8
   14002dd16:	mov    edi,edx
   14002dd18:	mov    r12,rcx
   14002dd1b:	mov    ebx,0x404e
   14002dd20:	test   edx,edx
   14002dd22:	je     0x14002de63
   14002dd28:	xor    r11d,r11d
   14002dd2b:	xor    r8d,r8d
   14002dd2e:	xor    r9d,r9d
   14002dd31:	lea    r15d,[r11+0x1]
   14002dd35:	mov    rsi,QWORD PTR [r10]
   14002dd38:	mov    r13d,DWORD PTR [r10+0x8]
   14002dd3c:	mov    ecx,r8d
   14002dd3f:	shr    ecx,0x1f
   14002dd42:	add    r8d,r8d
   14002dd45:	add    r9d,r9d
   14002dd48:	or     r9d,ecx
   14002dd4b:	lea    edx,[r11+r11*1]
   14002dd4f:	mov    eax,r11d
   14002dd52:	shr    eax,0x1f
   14002dd55:	add    r9d,r9d
   14002dd58:	mov    QWORD PTR [rsp],rsi
   14002dd5c:	or     r8d,eax
   14002dd5f:	mov    eax,edx
   14002dd61:	add    edx,edx
   14002dd63:	mov    ecx,r8d
   14002dd66:	shr    eax,0x1f
   14002dd69:	add    r8d,r8d
   14002dd6c:	shr    ecx,0x1f
   14002dd6f:	or     r8d,eax
   14002dd72:	xor    eax,eax
   14002dd74:	or     r9d,ecx
   14002dd77:	mov    ecx,esi
   14002dd79:	mov    DWORD PTR [r10],edx
   14002dd7c:	lea    ebp,[rdx+rcx*1]
   14002dd7f:	mov    DWORD PTR [r10+0x4],r8d
   14002dd83:	mov    DWORD PTR [r10+0x8],r9d
   14002dd87:	cmp    ebp,edx
   14002dd89:	jb     0x14002dd8f
   14002dd8b:	cmp    ebp,ecx
   14002dd8d:	jae    0x14002dd92
   14002dd8f:	mov    eax,r15d
   14002dd92:	mov    DWORD PTR [r10],ebp
   14002dd95:	test   eax,eax
   14002dd97:	je     0x14002ddbd
   14002dd99:	mov    eax,r8d
   14002dd9c:	inc    r8d
   14002dd9f:	xor    ecx,ecx
   14002dda1:	cmp    r8d,eax
   14002dda4:	jb     0x14002ddab
   14002dda6:	cmp    r8d,r15d
   14002dda9:	jae    0x14002ddae
   14002ddab:	mov    ecx,r15d
   14002ddae:	mov    DWORD PTR [r10+0x4],r8d
   14002ddb2:	test   ecx,ecx
   14002ddb4:	je     0x14002ddbd
   14002ddb6:	inc    r9d
   14002ddb9:	mov    DWORD PTR [r10+0x8],r9d
   14002ddbd:	shr    rsi,0x20
   14002ddc1:	xor    eax,eax
   14002ddc3:	lea    r11d,[r8+rsi*1]
   14002ddc7:	cmp    r11d,r8d
   14002ddca:	jb     0x14002ddd1
   14002ddcc:	cmp    r11d,esi
   14002ddcf:	jae    0x14002ddd4
   14002ddd1:	mov    eax,r15d
   14002ddd4:	mov    DWORD PTR [r10+0x4],r11d
   14002ddd8:	test   eax,eax
   14002ddda:	je     0x14002dde3
   14002dddc:	add    r9d,r15d
   14002dddf:	mov    DWORD PTR [r10+0x8],r9d
   14002dde3:	add    r9d,r13d
   14002dde6:	lea    edx,[rbp+rbp*1+0x0]
   14002ddea:	mov    ecx,r11d
   14002dded:	shr    ecx,0x1f
   14002ddf0:	lea    r8d,[r11+r11*1]
   14002ddf4:	add    r9d,r9d
   14002ddf7:	or     r9d,ecx
   14002ddfa:	mov    eax,ebp
   14002ddfc:	mov    DWORD PTR [r10],edx
   14002ddff:	shr    eax,0x1f
   14002de02:	mov    DWORD PTR [r10+0x8],r9d
   14002de06:	or     r8d,eax
   14002de09:	xor    eax,eax
   14002de0b:	mov    DWORD PTR [r10+0x4],r8d
   14002de0f:	movsx  ecx,BYTE PTR [r12]
   14002de14:	lea    r11d,[rdx+rcx*1]
   14002de18:	cmp    r11d,edx
   14002de1b:	jb     0x14002de22
   14002de1d:	cmp    r11d,ecx
   14002de20:	jae    0x14002de25
   14002de22:	mov    eax,r15d
   14002de25:	mov    DWORD PTR [r10],r11d
   14002de28:	test   eax,eax
   14002de2a:	je     0x14002de50
   14002de2c:	mov    eax,r8d
   14002de2f:	inc    r8d
   14002de32:	xor    ecx,ecx
   14002de34:	cmp    r8d,eax
   14002de37:	jb     0x14002de3e
   14002de39:	cmp    r8d,r15d
   14002de3c:	jae    0x14002de41
   14002de3e:	mov    ecx,r15d
   14002de41:	mov    DWORD PTR [r10+0x4],r8d
   14002de45:	test   ecx,ecx
   14002de47:	je     0x14002de50
   14002de49:	inc    r9d
   14002de4c:	mov    DWORD PTR [r10+0x8],r9d
   14002de50:	add    r12,r15
   14002de53:	dec    edi
   14002de55:	mov    DWORD PTR [r10+0x4],r8d
   14002de59:	mov    DWORD PTR [r10+0x8],r9d
   14002de5d:	jne    0x14002dd35
   14002de63:	cmp    DWORD PTR [r10+0x8],0x0
   14002de68:	jne    0x14002dea4
   14002de6a:	mov    r9d,DWORD PTR [r10+0x4]
   14002de6e:	mov    edx,DWORD PTR [r10]
   14002de71:	mov    eax,r9d
   14002de74:	mov    r8d,r9d
   14002de77:	shl    eax,0x10
   14002de7a:	mov    ecx,edx
   14002de7c:	shr    r8d,0x10
   14002de80:	shr    ecx,0x10
   14002de83:	shl    edx,0x10
   14002de86:	mov    DWORD PTR [r10+0x8],r8d
   14002de8a:	mov    r9d,ecx
   14002de8d:	mov    DWORD PTR [r10],edx
   14002de90:	or     r9d,eax
   14002de93:	mov    eax,0xfff0
   14002de98:	add    bx,ax
   14002de9b:	mov    DWORD PTR [r10+0x4],r9d
   14002de9f:	test   r8d,r8d
   14002dea2:	je     0x14002de6e
   14002dea4:	mov    r8d,DWORD PTR [r10+0x8]
   14002dea8:	mov    r11d,0x8000
   14002deae:	test   r11d,r8d
   14002deb1:	jne    0x14002deeb
   14002deb3:	mov    r9d,DWORD PTR [r10+0x4]
   14002deb7:	mov    eax,DWORD PTR [r10]
   14002deba:	mov    edx,r9d
   14002debd:	add    r8d,r8d
   14002dec0:	mov    ecx,eax
   14002dec2:	add    eax,eax
   14002dec4:	shr    edx,0x1f
   14002dec7:	shr    ecx,0x1f
   14002deca:	add    r9d,r9d
   14002decd:	or     r8d,edx
   14002ded0:	or     r9d,ecx
   14002ded3:	mov    DWORD PTR [r10],eax
   14002ded6:	mov    eax,0xffff
   14002dedb:	add    bx,ax
   14002dede:	mov    DWORD PTR [r10+0x4],r9d
   14002dee2:	mov    DWORD PTR [r10+0x8],r8d
   14002dee6:	test   r11d,r8d
   14002dee9:	je     0x14002deb7
   14002deeb:	mov    rbp,QWORD PTR [rsp+0x38]
   14002def0:	mov    rsi,QWORD PTR [rsp+0x40]
   14002def5:	mov    rdi,QWORD PTR [rsp+0x48]
   14002defa:	mov    WORD PTR [r10+0xa],bx
   14002deff:	mov    rbx,QWORD PTR [rsp+0x30]
   14002df04:	add    rsp,0x10
   14002df08:	pop    r15
   14002df0a:	pop    r13
   14002df0c:	pop    r12
   14002df0e:	ret    
   14002df0f:	int3   
   14002df10:	mov    QWORD PTR [rsp+0x10],rdx
   14002df15:	push   rbx
   14002df16:	push   rbp
   14002df17:	sub    rsp,0x38
   14002df1b:	mov    rbp,rdx
   14002df1e:	mov    rcx,QWORD PTR [rbp+0x38]
   14002df22:	mov    ebx,DWORD PTR [rcx+0x8]
   14002df25:	mov    DWORD PTR [rbp+0x68],ebx
   14002df28:	call   0x14000f9fc
   14002df2d:	mov    r8,rax
   14002df30:	mov    edx,ebx
   14002df32:	lea    rcx,[rip+0x1a2f]        # 0x14002f968
   14002df39:	call   0x14000fec8
   14002df3e:	nop
   14002df3f:	lea    rax,[rip+0xfffffffffffe01d7]        # 0x14000e11d
   14002df46:	add    rsp,0x38
   14002df4a:	pop    rbp
   14002df4b:	pop    rbx
   14002df4c:	ret    
   14002df4d:	int3   
   14002df4e:	int3   
   14002df4f:	int3   
   14002df50:	mov    QWORD PTR [rsp+0x10],rdx
   14002df55:	push   rbx
   14002df56:	push   rbp
   14002df57:	sub    rsp,0x38
   14002df5b:	mov    rbp,rdx
   14002df5e:	mov    rcx,QWORD PTR [rbp+0x40]
   14002df62:	mov    ebx,DWORD PTR [rcx+0x8]
   14002df65:	mov    DWORD PTR [rbp+0x68],ebx
   14002df68:	call   0x14000f9fc
   14002df6d:	mov    r8,rax
   14002df70:	mov    edx,ebx
   14002df72:	lea    rcx,[rip+0x1a9f]        # 0x14002fa18
   14002df79:	call   0x14000fec8
   14002df7e:	nop
   14002df7f:	lea    rax,[rip+0xfffffffffffe01db]        # 0x14000e161
   14002df86:	add    rsp,0x38
   14002df8a:	pop    rbp
   14002df8b:	pop    rbx
   14002df8c:	ret    
   14002df8d:	int3   
   14002df8e:	int3   
   14002df8f:	int3   
   14002df90:	mov    QWORD PTR [rsp+0x10],rdx
   14002df95:	push   rbx
   14002df96:	push   rbp
   14002df97:	sub    rsp,0x38
   14002df9b:	mov    rbp,rdx
   14002df9e:	mov    rcx,QWORD PTR [rbp+0x48]
   14002dfa2:	mov    ebx,DWORD PTR [rcx+0x8]
   14002dfa5:	mov    DWORD PTR [rbp+0x68],ebx
   14002dfa8:	call   0x14000f9fc
   14002dfad:	mov    r8,rax
   14002dfb0:	mov    edx,ebx
   14002dfb2:	lea    rcx,[rip+0x1b17]        # 0x14002fad0
   14002dfb9:	call   0x14000fec8
   14002dfbe:	nop
   14002dfbf:	lea    rax,[rip+0xfffffffffffe01dd]        # 0x14000e1a3
   14002dfc6:	add    rsp,0x38
   14002dfca:	pop    rbp
   14002dfcb:	pop    rbx
   14002dfcc:	ret    
   14002dfcd:	int3   
   14002dfce:	int3   
   14002dfcf:	int3   
   14002dfd0:	int3   
   14002dfd1:	int3   
   14002dfd2:	int3   
   14002dfd3:	int3   
   14002dfd4:	int3   
   14002dfd5:	int3   
   14002dfd6:	int3   
   14002dfd7:	int3   
   14002dfd8:	int3   
   14002dfd9:	int3   
   14002dfda:	int3   
   14002dfdb:	int3   
   14002dfdc:	int3   
   14002dfdd:	int3   
   14002dfde:	int3   
   14002dfdf:	int3   
   14002dfe0:	mov    QWORD PTR [rsp+0x10],rdx
   14002dfe5:	push   rbx
   14002dfe6:	push   rbp
   14002dfe7:	sub    rsp,0x28
   14002dfeb:	mov    rbp,rdx
   14002dfee:	mov    rcx,QWORD PTR [rbp+0x38]
   14002dff2:	mov    ebx,DWORD PTR [rcx+0x8]
   14002dff5:	mov    DWORD PTR [rbp+0x20],ebx
   14002dff8:	call   0x14000f9fc
   14002dffd:	mov    r8,rax
   14002e000:	mov    edx,ebx
   14002e002:	lea    rcx,[rip+0x1b3f]        # 0x14002fb48
   14002e009:	call   0x14000fec8
   14002e00e:	nop
   14002e00f:	lea    rax,[rip+0xfffffffffffe1017]        # 0x14000f02d
   14002e016:	add    rsp,0x28
   14002e01a:	pop    rbp
   14002e01b:	pop    rbx
   14002e01c:	ret    
   14002e01d:	int3   
   14002e01e:	int3   
   14002e01f:	int3   
   14002e020:	int3   
   14002e021:	int3   
   14002e022:	int3   
   14002e023:	int3   
   14002e024:	int3   
   14002e025:	int3   
   14002e026:	int3   
   14002e027:	int3   
   14002e028:	int3   
   14002e029:	int3   
   14002e02a:	int3   
   14002e02b:	int3   
   14002e02c:	int3   
   14002e02d:	int3   
   14002e02e:	int3   
   14002e02f:	int3   
   14002e030:	mov    QWORD PTR [rsp+0x10],rdx
   14002e035:	push   rbx
   14002e036:	push   rbp
   14002e037:	sub    rsp,0x38
   14002e03b:	mov    rbp,rdx
   14002e03e:	mov    rcx,QWORD PTR [rbp+0x48]
   14002e042:	mov    ebx,DWORD PTR [rcx+0x8]
   14002e045:	mov    DWORD PTR [rbp+0x30],ebx
   14002e048:	call   0x14000f9fc
   14002e04d:	mov    r8,rax
   14002e050:	mov    edx,ebx
   14002e052:	lea    rcx,[rip+0x1bc7]        # 0x14002fc20
   14002e059:	call   0x14000fec8
   14002e05e:	nop
   14002e05f:	lea    rax,[rip+0xfffffffffffe10ec]        # 0x14000f152
   14002e066:	add    rsp,0x38
   14002e06a:	pop    rbp
   14002e06b:	pop    rbx
   14002e06c:	ret    
   14002e06d:	int3   
   14002e06e:	mov    rcx,QWORD PTR [rdx+0x50]
   14002e075:	jmp    0x140016ae8
   14002e07a:	mov    rcx,QWORD PTR [rdx+0x48]
   14002e081:	jmp    0x140016ae8
   14002e086:	lea    rcx,[rdx+0x28]
   14002e08d:	jmp    0x14000f724
   14002e092:	int3   
   14002e093:	int3   
   14002e094:	int3   
   14002e095:	int3   
   14002e096:	lea    rcx,[rdx+0x58]
   14002e09d:	jmp    0x14000f724
   14002e0a2:	int3   
   14002e0a3:	int3   
   14002e0a4:	int3   
   14002e0a5:	int3   
   14002e0a6:	lea    rcx,[rdx+0x40]
   14002e0ad:	jmp    0x14000f724
   14002e0b2:	int3   
   14002e0b3:	int3   
   14002e0b4:	int3   
   14002e0b5:	int3   
   14002e0b6:	lea    rcx,[rdx+0x70]
   14002e0bd:	jmp    0x14000f724
   14002e0c2:	int3   
   14002e0c3:	int3   
   14002e0c4:	int3   
   14002e0c5:	int3   
   14002e0c6:	rex push rbp
   14002e0c8:	sub    rsp,0x20
   14002e0cc:	mov    rbp,rdx
   14002e0cf:	mov    eax,DWORD PTR [rbp+0x20]
   14002e0d2:	and    eax,0x1
   14002e0d5:	test   eax,eax
   14002e0d7:	je     0x14002e0e9
   14002e0d9:	and    DWORD PTR [rbp+0x20],0xfffffffe
   14002e0dd:	mov    rcx,QWORD PTR [rbp+0x90]
   14002e0e4:	call   0x14000faec
   14002e0e9:	add    rsp,0x20
   14002e0ed:	pop    rbp
   14002e0ee:	ret    
   14002e0ef:	int3   
   14002e0f0:	int3   
   14002e0f1:	int3   
   14002e0f2:	int3   
   14002e0f3:	int3   
   14002e0f4:	int3   
   14002e0f5:	int3   
   14002e0f6:	lea    rcx,[rdx+0x30]
   14002e0fd:	jmp    0x14000faec
   14002e102:	int3   
   14002e103:	int3   
   14002e104:	int3   
   14002e105:	int3   
   14002e106:	lea    rcx,[rdx+0x28]
   14002e10d:	jmp    0x14000faec
   14002e112:	int3   
   14002e113:	int3   
   14002e114:	int3   
   14002e115:	int3   
   14002e116:	lea    rcx,[rdx+0x50]
   14002e11d:	jmp    0x14000faec
   14002e122:	int3   
   14002e123:	int3   
   14002e124:	int3   
   14002e125:	int3   
   14002e126:	lea    rcx,[rdx+0x58]
   14002e12d:	jmp    0x14000faec
   14002e132:	int3   
   14002e133:	int3   
   14002e134:	int3   
   14002e135:	int3   
   14002e136:	mov    QWORD PTR [rsp+0x10],rdx
   14002e13b:	push   rbp
   14002e13c:	sub    rsp,0x20
   14002e140:	mov    rbp,rdx
   14002e143:	lea    rax,[rip+0xfffffffffffe2595]        # 0x1400106df
   14002e14a:	add    rsp,0x20
   14002e14e:	pop    rbp
   14002e14f:	ret    
   14002e150:	int3   
   14002e151:	mov    rcx,QWORD PTR [rdx+0x40]
   14002e158:	jmp    0x140016ae8
   14002e15d:	rex push rbp
   14002e15f:	sub    rsp,0x20
   14002e163:	mov    rbp,rdx
   14002e166:	mov    ecx,0x7
   14002e16b:	call   0x14001cbc8
   14002e170:	nop
   14002e171:	add    rsp,0x20
   14002e175:	pop    rbp
   14002e176:	ret    
   14002e177:	int3   
   14002e178:	rex push rbp
   14002e17a:	sub    rsp,0x30
   14002e17e:	mov    rbp,rdx
   14002e181:	mov    ecx,0x7
   14002e186:	call   0x14001cbc8
   14002e18b:	nop
   14002e18c:	add    rsp,0x30
   14002e190:	pop    rbp
   14002e191:	ret    
   14002e192:	int3   
   14002e193:	rex push rbp
   14002e195:	sub    rsp,0x20
   14002e199:	mov    rbp,rdx
   14002e19c:	cmp    DWORD PTR [rbp+0x80],0x0
   14002e1a3:	je     0x14002e1b0
   14002e1a5:	mov    ecx,0x8
   14002e1aa:	call   0x14001cbc8
   14002e1af:	nop
   14002e1b0:	add    rsp,0x20
   14002e1b4:	pop    rbp
   14002e1b5:	ret    
   14002e1b6:	int3   
   14002e1b7:	rex push rbp
   14002e1b9:	sub    rsp,0x20
   14002e1bd:	mov    rbp,rdx
   14002e1c0:	call   0x140014c3c
   14002e1c5:	add    rax,0x30
   14002e1c9:	mov    rdx,rax
   14002e1cc:	mov    ecx,0x1
   14002e1d1:	call   0x140014e30
   14002e1d6:	nop
   14002e1d7:	add    rsp,0x20
   14002e1db:	pop    rbp
   14002e1dc:	ret    
   14002e1dd:	int3   
   14002e1de:	rex push rbp
   14002e1e0:	sub    rsp,0x20
   14002e1e4:	mov    rbp,rdx
   14002e1e7:	mov    rcx,QWORD PTR [rbp+0x30]
   14002e1eb:	call   0x140014de4
   14002e1f0:	nop
   14002e1f1:	add    rsp,0x20
   14002e1f5:	pop    rbp
   14002e1f6:	ret    
   14002e1f7:	int3   
   14002e1f8:	rex push rbp
   14002e1fa:	sub    rsp,0x20
   14002e1fe:	mov    rbp,rdx
   14002e201:	mov    rcx,QWORD PTR [rbp+0x48]
   14002e205:	call   0x140014de4
   14002e20a:	nop
   14002e20b:	add    rsp,0x20
   14002e20f:	pop    rbp
   14002e210:	ret    
   14002e211:	int3   
   14002e212:	rex push rbp
   14002e214:	sub    rsp,0x20
   14002e218:	mov    rbp,rdx
   14002e21b:	mov    rcx,QWORD PTR [rbp+0x50]
   14002e21f:	call   0x140014de4
   14002e224:	nop
   14002e225:	add    rsp,0x20
   14002e229:	pop    rbp
   14002e22a:	ret    
   14002e22b:	int3   
   14002e22c:	rex push rbp
   14002e22e:	sub    rsp,0x20
   14002e232:	mov    rbp,rdx
   14002e235:	mov    rcx,QWORD PTR [rbp+0x40]
   14002e239:	call   0x140014de4
   14002e23e:	nop
   14002e23f:	add    rsp,0x20
   14002e243:	pop    rbp
   14002e244:	ret    
   14002e245:	int3   
   14002e246:	rex push rbp
   14002e248:	sub    rsp,0x30
   14002e24c:	mov    rbp,rdx
   14002e24f:	mov    ecx,0x2
   14002e254:	call   0x1400226d0
   14002e259:	nop
   14002e25a:	add    rsp,0x30
   14002e25e:	pop    rbp
   14002e25f:	ret    
   14002e260:	int3   
   14002e261:	rex push rbp
   14002e263:	sub    rsp,0x20
   14002e267:	mov    rbp,rdx
   14002e26a:	mov    ecx,DWORD PTR [rbp+0x40]
   14002e26d:	call   0x1400226d0
   14002e272:	nop
   14002e273:	add    rsp,0x20
   14002e277:	pop    rbp
   14002e278:	ret    
   14002e279:	int3   
   14002e27a:	rex push rbp
   14002e27c:	sub    rsp,0x30
   14002e280:	mov    rbp,rdx
   14002e283:	mov    ecx,0x2
   14002e288:	call   0x14001cbc8
   14002e28d:	nop
   14002e28e:	add    rsp,0x30
   14002e292:	pop    rbp
   14002e293:	ret    
   14002e294:	int3   
   14002e295:	rex push rbp
   14002e297:	sub    rsp,0x30
   14002e29b:	mov    rbp,rdx
   14002e29e:	cmp    DWORD PTR [rbp+0x34],0x0
   14002e2a2:	je     0x14002e2dc
   14002e2a4:	cmp    DWORD PTR [rbp+0x38],0x0
   14002e2a8:	je     0x14002e2d1
   14002e2aa:	movsxd rdx,DWORD PTR [rbp+0x30]
   14002e2ae:	mov    rcx,rdx
   14002e2b1:	mov    rax,rdx
   14002e2b4:	sar    rax,0x5
   14002e2b8:	lea    r8,[rip+0x28361]        # 0x140056620
   14002e2bf:	and    ecx,0x1f
   14002e2c2:	imul   rcx,rcx,0x58
   14002e2c6:	mov    rax,QWORD PTR [r8+rax*8]
   14002e2ca:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002e2cf:	jmp    0x14002e2d4
   14002e2d1:	mov    edx,DWORD PTR [rbp+0x30]
   14002e2d4:	mov    ecx,edx
   14002e2d6:	call   0x1400226d0
   14002e2db:	nop
   14002e2dc:	add    rsp,0x30
   14002e2e0:	pop    rbp
   14002e2e1:	ret    
   14002e2e2:	int3   
   14002e2e3:	rex push rbp
   14002e2e5:	sub    rsp,0x30
   14002e2e9:	mov    rbp,rdx
   14002e2ec:	cmp    DWORD PTR [rbp+0x30],0x0
   14002e2f0:	je     0x14002e325
   14002e2f2:	mov    rdx,QWORD PTR [rbp+0x70]
   14002e2f6:	cmp    DWORD PTR [rbp+0x34],0x0
   14002e2fa:	je     0x14002e31d
   14002e2fc:	movsxd rcx,DWORD PTR [rdx]
   14002e2ff:	mov    rax,rcx
   14002e302:	sar    rax,0x5
   14002e306:	lea    r8,[rip+0x28313]        # 0x140056620
   14002e30d:	and    ecx,0x1f
   14002e310:	imul   rcx,rcx,0x58
   14002e314:	mov    rax,QWORD PTR [r8+rax*8]
   14002e318:	and    BYTE PTR [rax+rcx*1+0x8],0xfe
   14002e31d:	mov    ecx,DWORD PTR [rdx]
   14002e31f:	call   0x1400226d0
   14002e324:	nop
   14002e325:	add    rsp,0x30
   14002e329:	pop    rbp
   14002e32a:	ret    
   14002e32b:	int3   
   14002e32c:	rex push rbp
   14002e32e:	sub    rsp,0x30
   14002e332:	mov    rbp,rdx
   14002e335:	mov    rcx,QWORD PTR [rbp+0x60]
   14002e339:	call   0x140014de4
   14002e33e:	nop
   14002e33f:	add    rsp,0x30
   14002e343:	pop    rbp
   14002e344:	ret    
   14002e345:	int3   
   14002e346:	rex push rbp
   14002e348:	sub    rsp,0x40
   14002e34c:	mov    rbp,rdx
   14002e34f:	lea    rax,[rbp+0x40]
   14002e353:	mov    QWORD PTR [rsp+0x30],rax
   14002e358:	mov    rax,QWORD PTR [rbp+0x90]
   14002e35f:	mov    QWORD PTR [rsp+0x28],rax
   14002e364:	mov    rax,QWORD PTR [rbp+0x88]
   14002e36b:	mov    QWORD PTR [rsp+0x20],rax
   14002e370:	mov    r9,QWORD PTR [rbp+0x80]
   14002e377:	mov    r8,QWORD PTR [rbp+0x78]
   14002e37b:	mov    rdx,QWORD PTR [rbp+0x70]
   14002e37f:	call   0x140017210
   14002e384:	nop
   14002e385:	add    rsp,0x40
   14002e389:	pop    rbp
   14002e38a:	ret    
   14002e38b:	int3   
   14002e38c:	rex push rbp
   14002e38e:	sub    rsp,0x20
   14002e392:	mov    rbp,rdx
   14002e395:	mov    rax,QWORD PTR [rcx]
   14002e398:	mov    rdx,rcx
   14002e39b:	mov    ecx,DWORD PTR [rax]
   14002e39d:	call   0x14002635c
   14002e3a2:	nop
   14002e3a3:	add    rsp,0x20
   14002e3a7:	pop    rbp
   14002e3a8:	ret    
   14002e3a9:	int3   
   14002e3aa:	rex push rbp
   14002e3ac:	sub    rsp,0x40
   14002e3b0:	mov    rbp,rdx
   14002e3b3:	mov    ecx,DWORD PTR [rbp+0x4c]
   14002e3b6:	call   0x1400226d0
   14002e3bb:	nop
   14002e3bc:	add    rsp,0x40
   14002e3c0:	pop    rbp
   14002e3c1:	ret    
   14002e3c2:	int3   
   14002e3c3:	rex push rbp
   14002e3c5:	sub    rsp,0x20
   14002e3c9:	mov    rbp,rdx
   14002e3cc:	mov    ecx,0xd
   14002e3d1:	call   0x14001cbc8
   14002e3d6:	nop
   14002e3d7:	add    rsp,0x20
   14002e3db:	pop    rbp
   14002e3dc:	ret    
   14002e3dd:	int3   
   14002e3de:	rex push rbp
   14002e3e0:	sub    rsp,0x20
   14002e3e4:	mov    rbp,rdx
   14002e3e7:	mov    ecx,0xc
   14002e3ec:	call   0x14001cbc8
   14002e3f1:	nop
   14002e3f2:	add    rsp,0x20
   14002e3f6:	pop    rbp
   14002e3f7:	ret    
   14002e3f8:	int3   
   14002e3f9:	rex push rbp
   14002e3fb:	sub    rsp,0x20
   14002e3ff:	mov    rbp,rdx
   14002e402:	mov    ecx,0xd
   14002e407:	call   0x14001cbc8
   14002e40c:	nop
   14002e40d:	add    rsp,0x20
   14002e411:	pop    rbp
   14002e412:	ret    
   14002e413:	int3   
   14002e414:	int3   
   14002e415:	int3   
   14002e416:	int3   
   14002e417:	int3   
   14002e418:	int3   
   14002e419:	rex push rbp
   14002e41b:	sub    rsp,0x20
   14002e41f:	mov    rbp,rdx
   14002e422:	mov    ecx,0xc
   14002e427:	call   0x14001cbc8
   14002e42c:	nop
   14002e42d:	add    rsp,0x20
   14002e431:	pop    rbp
   14002e432:	ret    
   14002e433:	int3   
   14002e434:	rex push rbp
   14002e436:	sub    rsp,0x40
   14002e43a:	mov    rbp,rdx
   14002e43d:	mov    ecx,0x7
   14002e442:	call   0x14001cbc8
   14002e447:	nop
   14002e448:	add    rsp,0x40
   14002e44c:	pop    rbp
   14002e44d:	ret    
   14002e44e:	int3   
   14002e44f:	rex push rbp
   14002e451:	sub    rsp,0x20
   14002e455:	mov    rbp,rdx
   14002e458:	mov    ecx,0x6
   14002e45d:	call   0x14001cbc8
   14002e462:	nop
   14002e463:	add    rsp,0x20
   14002e467:	pop    rbp
   14002e468:	ret    
   14002e469:	int3   
   14002e46a:	rex push rbp
   14002e46c:	sub    rsp,0x20
   14002e470:	mov    rbp,rdx
   14002e473:	mov    rcx,QWORD PTR [rip+0x125d6]        # 0x140040a50
   14002e47a:	call   QWORD PTR [rip+0xe08]        # 0x14002f288
   14002e480:	nop
   14002e481:	add    rsp,0x20
   14002e485:	pop    rbp
   14002e486:	ret    
   14002e487:	int3   
   14002e488:	rex push rbp
   14002e48a:	sub    rsp,0x20
   14002e48e:	mov    rbp,rdx
   14002e491:	cmp    DWORD PTR [rbp+0x60],0x0
   14002e495:	je     0x14002e49f
   14002e497:	xor    ecx,ecx
   14002e499:	call   0x14001cbc8
   14002e49e:	nop
   14002e49f:	add    rsp,0x20
   14002e4a3:	pop    rbp
   14002e4a4:	ret    
   14002e4a5:	int3   
   14002e4a6:	rex push rbp
   14002e4a8:	sub    rsp,0x20
   14002e4ac:	mov    rbp,rdx
   14002e4af:	call   0x14001392c
   14002e4b4:	nop
   14002e4b5:	add    rsp,0x20
   14002e4b9:	pop    rbp
   14002e4ba:	ret    
   14002e4bb:	int3   
   14002e4bc:	int3   
   14002e4bd:	int3   
   14002e4be:	int3   
   14002e4bf:	int3   
   14002e4c0:	rex push rbp
   14002e4c2:	sub    rsp,0x20
   14002e4c6:	mov    rbp,rdx
   14002e4c9:	mov    rax,QWORD PTR [rcx]
   14002e4cc:	xor    ecx,ecx
   14002e4ce:	cmp    DWORD PTR [rax],0xc0000005
   14002e4d4:	sete   cl
   14002e4d7:	mov    eax,ecx
   14002e4d9:	mov    eax,ecx
   14002e4db:	add    rsp,0x20
   14002e4df:	pop    rbp
   14002e4e0:	ret    
   14002e4e1:	int3   
   14002e4e2:	rex push rbp
   14002e4e4:	sub    rsp,0x20
   14002e4e8:	mov    rbp,rdx
   14002e4eb:	mov    ecx,0x1
   14002e4f0:	call   0x14001cbc8
   14002e4f5:	nop
   14002e4f6:	add    rsp,0x20
   14002e4fa:	pop    rbp
   14002e4fb:	ret    
   14002e4fc:	int3   
   14002e4fd:	rex push rbp
   14002e4ff:	sub    rsp,0x20
   14002e503:	mov    rbp,rdx
   14002e506:	mov    ecx,0xa
   14002e50b:	call   0x14001cbc8
   14002e510:	nop
   14002e511:	add    rsp,0x20
   14002e515:	pop    rbp
   14002e516:	ret    
   14002e517:	int3   
   14002e518:	rex push rbp
   14002e51a:	sub    rsp,0x20
   14002e51e:	mov    rbp,rdx
   14002e521:	mov    ecx,0xa
   14002e526:	call   0x14001cbc8
   14002e52b:	nop
   14002e52c:	add    rsp,0x20
   14002e530:	pop    rbp
   14002e531:	ret    
   14002e532:	int3   
   14002e533:	int3   
   14002e534:	int3   
   14002e535:	int3   
   14002e536:	int3   
   14002e537:	int3   
   14002e538:	rex push rbp
   14002e53a:	sub    rsp,0x20
   14002e53e:	mov    rbp,rdx
   14002e541:	mov    ecx,0xb
   14002e546:	call   0x14001cbc8
   14002e54b:	nop
   14002e54c:	add    rsp,0x20
   14002e550:	pop    rbp
   14002e551:	ret    
   14002e552:	int3   
   14002e553:	rex push rbp
   14002e555:	sub    rsp,0x20
   14002e559:	mov    rbp,rdx
   14002e55c:	movsxd rcx,DWORD PTR [rbp+0x20]
   14002e560:	mov    rax,rcx
   14002e563:	mov    rdx,QWORD PTR [rip+0x282c6]        # 0x140056830
   14002e56a:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14002e56e:	call   0x140014e30
   14002e573:	nop
   14002e574:	add    rsp,0x20
   14002e578:	pop    rbp
   14002e579:	ret    
   14002e57a:	int3   
   14002e57b:	int3   
   14002e57c:	int3   
   14002e57d:	int3   
   14002e57e:	int3   
   14002e57f:	int3   
   14002e580:	int3   
   14002e581:	int3   
   14002e582:	int3   
   14002e583:	rex push rbp
   14002e585:	sub    rsp,0x20
   14002e589:	mov    rbp,rdx
   14002e58c:	mov    ecx,0x1
   14002e591:	call   0x14001cbc8
   14002e596:	nop
   14002e597:	add    rsp,0x20
   14002e59b:	pop    rbp
   14002e59c:	ret    
   14002e59d:	int3   
   14002e59e:	rex push rbp
   14002e5a0:	sub    rsp,0x20
   14002e5a4:	mov    rbp,rdx
   14002e5a7:	mov    ecx,DWORD PTR [rbp+0x50]
   14002e5aa:	call   0x1400226d0
   14002e5af:	nop
   14002e5b0:	add    rsp,0x20
   14002e5b4:	pop    rbp
   14002e5b5:	ret    
   14002e5b6:	int3   
   14002e5b7:	rex push rbp
   14002e5b9:	sub    rsp,0x20
   14002e5bd:	mov    rbp,rdx
   14002e5c0:	mov    ecx,0xe
   14002e5c5:	call   0x14001cbc8
   14002e5ca:	nop
   14002e5cb:	add    rsp,0x20
   14002e5cf:	pop    rbp
   14002e5d0:	ret    
   14002e5d1:	int3   
   14002e5d2:	rex push rbp
   14002e5d4:	sub    rsp,0x20
   14002e5d8:	mov    rbp,rdx
   14002e5db:	call   0x1400244d4
   14002e5e0:	nop
   14002e5e1:	add    rsp,0x20
   14002e5e5:	pop    rbp
   14002e5e6:	ret    
   14002e5e7:	int3   
   14002e5e8:	int3   
   14002e5e9:	int3   
   14002e5ea:	int3   
   14002e5eb:	int3   
   14002e5ec:	int3   
   14002e5ed:	int3   
   14002e5ee:	int3   
   14002e5ef:	int3   
   14002e5f0:	int3   
   14002e5f1:	int3   
   14002e5f2:	rex push rbp
   14002e5f4:	sub    rsp,0x20
   14002e5f8:	mov    rbp,rdx
   14002e5fb:	call   0x14001ae14
   14002e600:	cmp    DWORD PTR [rax+0x100],0x0
   14002e607:	jle    0x14002e614
   14002e609:	call   0x14001ae14
   14002e60e:	dec    DWORD PTR [rax+0x100]
   14002e614:	add    rsp,0x20
   14002e618:	pop    rbp
   14002e619:	ret    
   14002e61a:	int3   
   14002e61b:	rex push rbp
   14002e61d:	sub    rsp,0x20
   14002e621:	mov    rbp,rdx
   14002e624:	xor    eax,eax
   14002e626:	cmp    BYTE PTR [rbp+0x38],al
   14002e629:	setne  al
   14002e62c:	add    rsp,0x20
   14002e630:	pop    rbp
   14002e631:	ret    
   14002e632:	int3   
   14002e633:	rex push rbp
   14002e635:	sub    rsp,0x20
   14002e639:	mov    rbp,rdx
   14002e63c:	mov    QWORD PTR [rbp+0x68],rcx
   14002e640:	mov    QWORD PTR [rbp+0x58],rcx
   14002e644:	mov    rax,QWORD PTR [rbp+0x58]
   14002e648:	mov    rcx,QWORD PTR [rax]
   14002e64b:	mov    QWORD PTR [rbp+0x28],rcx
   14002e64f:	mov    DWORD PTR [rbp+0x20],0x0
   14002e656:	mov    rax,QWORD PTR [rbp+0x28]
   14002e65a:	cmp    DWORD PTR [rax],0xe06d7363
   14002e660:	jne    0x14002e6af
   14002e662:	mov    rax,QWORD PTR [rbp+0x28]
   14002e666:	cmp    DWORD PTR [rax+0x18],0x4
   14002e66a:	jne    0x14002e6af
   14002e66c:	mov    rax,QWORD PTR [rbp+0x28]
   14002e670:	cmp    DWORD PTR [rax+0x20],0x19930520
   14002e677:	je     0x14002e693
   14002e679:	mov    rax,QWORD PTR [rbp+0x28]
   14002e67d:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002e684:	je     0x14002e693
   14002e686:	mov    rax,QWORD PTR [rbp+0x28]
   14002e68a:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002e691:	jne    0x14002e6af
   14002e693:	mov    rdx,QWORD PTR [rbp+0x28]
   14002e697:	mov    rax,QWORD PTR [rbp+0xc8]
   14002e69e:	mov    rcx,QWORD PTR [rax+0x28]
   14002e6a2:	cmp    QWORD PTR [rdx+0x28],rcx
   14002e6a6:	jne    0x14002e6af
   14002e6a8:	mov    DWORD PTR [rbp+0x20],0x1
   14002e6af:	mov    rax,QWORD PTR [rbp+0x28]
   14002e6b3:	cmp    DWORD PTR [rax],0xe06d7363
   14002e6b9:	jne    0x14002e716
   14002e6bb:	mov    rax,QWORD PTR [rbp+0x28]
   14002e6bf:	cmp    DWORD PTR [rax+0x18],0x4
   14002e6c3:	jne    0x14002e716
   14002e6c5:	mov    rax,QWORD PTR [rbp+0x28]
   14002e6c9:	cmp    DWORD PTR [rax+0x20],0x19930520
   14002e6d0:	je     0x14002e6ec
   14002e6d2:	mov    rax,QWORD PTR [rbp+0x28]
   14002e6d6:	cmp    DWORD PTR [rax+0x20],0x19930521
   14002e6dd:	je     0x14002e6ec
   14002e6df:	mov    rax,QWORD PTR [rbp+0x28]
   14002e6e3:	cmp    DWORD PTR [rax+0x20],0x19930522
   14002e6ea:	jne    0x14002e716
   14002e6ec:	mov    rax,QWORD PTR [rbp+0x28]
   14002e6f0:	cmp    QWORD PTR [rax+0x30],0x0
   14002e6f5:	jne    0x14002e716
   14002e6f7:	call   0x14001ae14
   14002e6fc:	mov    DWORD PTR [rax+0x2c0],0x1
   14002e706:	mov    DWORD PTR [rbp+0x20],0x1
   14002e70d:	mov    DWORD PTR [rbp+0x30],0x1
   14002e714:	jmp    0x14002e71d
   14002e716:	mov    DWORD PTR [rbp+0x30],0x0
   14002e71d:	mov    eax,DWORD PTR [rbp+0x30]
   14002e720:	add    rsp,0x20
   14002e724:	pop    rbp
   14002e725:	ret    
   14002e726:	int3   
   14002e727:	int3   
   14002e728:	int3   
   14002e729:	int3   
   14002e72a:	int3   
   14002e72b:	int3   
   14002e72c:	int3   
   14002e72d:	int3   
   14002e72e:	int3   
   14002e72f:	int3   
   14002e730:	int3   
   14002e731:	int3   
   14002e732:	int3   
   14002e733:	rex push rbx
   14002e735:	push   rbp
   14002e736:	sub    rsp,0x28
   14002e73a:	mov    rbp,rdx
   14002e73d:	mov    rcx,QWORD PTR [rbp+0x50]
   14002e741:	call   0x1400174ac
   14002e746:	cmp    DWORD PTR [rbp+0x20],0x0
   14002e74a:	jne    0x14002e794
   14002e74c:	mov    rbx,QWORD PTR [rbp+0xc8]
   14002e753:	cmp    DWORD PTR [rbx],0xe06d7363
   14002e759:	jne    0x14002e794
   14002e75b:	cmp    DWORD PTR [rbx+0x18],0x4
   14002e75f:	jne    0x14002e794
   14002e761:	cmp    DWORD PTR [rbx+0x20],0x19930520
   14002e768:	je     0x14002e77c
   14002e76a:	cmp    DWORD PTR [rbx+0x20],0x19930521
   14002e771:	je     0x14002e77c
   14002e773:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14002e77a:	jne    0x14002e794
   14002e77c:	mov    rcx,QWORD PTR [rbx+0x28]
   14002e780:	call   0x140017478
   14002e785:	test   eax,eax
   14002e787:	je     0x14002e794
   14002e789:	mov    dl,0x1
   14002e78b:	mov    rcx,rbx
   14002e78e:	call   0x1400246b4
   14002e793:	nop
   14002e794:	call   0x14001ae14
   14002e799:	mov    rcx,QWORD PTR [rbp+0xd0]
   14002e7a0:	mov    QWORD PTR [rax+0xf0],rcx
   14002e7a7:	call   0x14001ae14
   14002e7ac:	mov    rcx,QWORD PTR [rbp+0xd8]
   14002e7b3:	mov    QWORD PTR [rax+0xf8],rcx
   14002e7ba:	add    rsp,0x28
   14002e7be:	pop    rbp
   14002e7bf:	pop    rbx
   14002e7c0:	ret    
   14002e7c1:	int3   
   14002e7c2:	rex push rbp
   14002e7c4:	sub    rsp,0x20
   14002e7c8:	mov    rbp,rdx
   14002e7cb:	mov    rcx,QWORD PTR [rbp+0x38]
   14002e7cf:	call   0x140014de4
   14002e7d4:	nop
   14002e7d5:	add    rsp,0x20
   14002e7d9:	pop    rbp
   14002e7da:	ret    
   14002e7db:	int3   
   14002e7dc:	int3   
   14002e7dd:	int3   
   14002e7de:	int3   
   14002e7df:	int3   
   14002e7e0:	lea    rax,[rip+0xfffffffffffdea25]        # 0x14000d20c
   14002e7e7:	mov    QWORD PTR [rip+0x26b42],rax        # 0x140055330
   14002e7ee:	ret    
   14002e7ef:	int3   
   14002e7f0:	lea    rcx,[rip+0x29]        # 0x14002e820
   14002e7f7:	jmp    0x14001e12c
   14002e7fc:	int3   
   14002e7fd:	int3   
   14002e7fe:	int3   
   14002e7ff:	int3   
   14002e800:	lea    rax,[rip+0x2b41]        # 0x140031348
   14002e807:	lea    rcx,[rip+0x26b9a]        # 0x1400553a8
   14002e80e:	mov    QWORD PTR [rip+0x26b93],rax        # 0x1400553a8
   14002e815:	jmp    0x140024128
   14002e81a:	int3   
   14002e81b:	int3   
   14002e81c:	int3   
   14002e81d:	int3   
   14002e81e:	int3   
   14002e81f:	int3   
   14002e820:	lea    rcx,[rip+0x12829]        # 0x140041050
   14002e827:	rex.W jmp QWORD PTR [rip+0xb62]        # 0x14002f390
