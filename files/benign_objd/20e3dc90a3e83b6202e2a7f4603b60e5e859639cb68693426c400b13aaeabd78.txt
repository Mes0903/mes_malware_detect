
20e3dc90a3e83b6202e2a7f4603b60e5e859639cb68693426c400b13aaeabd78.exe:     file format pei-i386


Disassembly of section .text:

01001000 <.text>:
 1001000:	cs add BYTE PTR es:[eax],al
 1001004:	inc    esi
 1001005:	add    BYTE PTR es:[eax],al
 1001008:	pop    esi
 1001009:	add    BYTE PTR es:[eax],al
 100100c:	add    BYTE PTR [eax],al
 100100e:	add    BYTE PTR [eax],al
 1001010:	aam    0x23
 1001012:	add    BYTE PTR [eax],al
 1001014:	jmp    0x23:0xbe000023
 100101b:	add    BYTE PTR [eax],bl
 100101d:	and    al,0x0
 100101f:	add    BYTE PTR [esp],ch
 1001022:	add    BYTE PTR [eax],al
 1001024:	scas   al,BYTE PTR es:[edi]
 1001025:	and    eax,DWORD PTR [eax]
 1001027:	add    BYTE PTR [ebx+eiz*1+0x23800000],dl
 100102e:	add    BYTE PTR [eax],al
 1001030:	outs   dx,BYTE PTR ds:[esi]
 1001031:	and    eax,DWORD PTR [eax]
 1001033:	add    BYTE PTR [esp],al
 1001036:	add    BYTE PTR [eax],al
 1001038:	pop    esp
 1001039:	and    eax,DWORD PTR [eax]
 100103b:	add    ah,cl
 100103d:	and    eax,0x25b00000
 1001042:	add    BYTE PTR [eax],al
 1001044:	mov    ds:0x94000025,al
 1001049:	and    eax,0x25840000
 100104e:	add    BYTE PTR [eax],al
 1001050:	jbe    0x1001077
 1001052:	add    BYTE PTR [eax],al
 1001054:	and    ax,0x0
 1001058:	add    BYTE PTR [eax],al
 100105a:	add    BYTE PTR [eax],al
 100105c:	xchg   edx,eax
 100105d:	daa    
 100105e:	add    BYTE PTR [eax],al
 1001060:	test   BYTE PTR [edi],ah
 1001062:	add    BYTE PTR [eax],al
 1001064:	push   0x5c000027
 1001069:	daa    
 100106a:	add    BYTE PTR [eax],al
 100106c:	dec    edx
 100106d:	daa    
 100106e:	add    BYTE PTR [eax],al
 1001070:	cmp    BYTE PTR [edi],ah
 1001072:	add    BYTE PTR [eax],al
 1001074:	sub    BYTE PTR [edi],ah
 1001076:	add    BYTE PTR [eax],al
 1001078:	push   cs
 1001079:	daa    
 100107a:	add    BYTE PTR [eax],al
 100107c:	cli    
 100107d:	add    BYTE PTR es:[eax],al
 1001080:	in     al,0x26
 1001082:	add    BYTE PTR [eax],al
 1001084:	retf   0x26
 1001087:	add    BYTE PTR [edx-0x59ffffda],bh
 100108d:	add    BYTE PTR es:[eax],al
 1001090:	xchg   esi,eax
 1001091:	add    BYTE PTR es:[eax],al
 1001094:	and    BYTE PTR [esi],0x0
 1001097:	add    BYTE PTR [edx+0x27],ah
 100109d:	add    BYTE PTR [eax],al
 100109f:	add    ah,bh
 10010a1:	and    eax,0x26060000
 10010a6:	add    BYTE PTR [eax],al
 10010a8:	adc    BYTE PTR [esi],ah
 10010aa:	add    BYTE PTR [eax],al
 10010ac:	sbb    ah,BYTE PTR [esi]
 10010ae:	add    BYTE PTR [eax],al
 10010b0:	and    al,0x26
 10010b2:	add    BYTE PTR [eax],al
 10010b4:	repnz and eax,0x24800000
 10010ba:	add    BYTE PTR [eax],al
 10010bc:	jbe    0x10010e2
 10010be:	add    BYTE PTR [eax],al
 10010c0:	ins    BYTE PTR es:[edi],dx
 10010c1:	and    al,0x0
 10010c3:	add    BYTE PTR [edx+0x24],ah
 10010c6:	add    BYTE PTR [eax],al
 10010c8:	pop    eax
 10010c9:	and    al,0x0
 10010cb:	add    al,ch
 10010cd:	and    eax,0x24940000
 10010d2:	add    BYTE PTR [eax],al
 10010d4:	pushf  
 10010d5:	and    al,0x0
 10010d7:	add    BYTE PTR [edx-0x4bffffdc],ch
 10010dd:	and    al,0x0
 10010df:	add    BYTE PTR [esp+0x24c80000],bh
 10010e6:	add    BYTE PTR [eax],al
 10010e8:	fsub   DWORD PTR [eax+eax*1]
 10010eb:	add    ah,ah
 10010ed:	and    al,0x0
 10010ef:	add    al,bh
 10010f1:	and    al,0x0
 10010f3:	add    BYTE PTR [eax],cl
 10010f5:	and    eax,0x25580000
 10010fa:	add    BYTE PTR [eax],al
 10010fc:	es and eax,0x25380000
 1001102:	add    BYTE PTR [eax],al
 1001104:	mov    ah,BYTE PTR [eax+eax*1]
 1001107:	add    BYTE PTR [eax],bl
 1001109:	and    eax,0x0
 100110e:	add    BYTE PTR [eax],al
 1001110:	add    BYTE PTR [eax],ch
 1001112:	add    BYTE PTR [eax],al
 1001114:	les    esp,FWORD PTR [edi]
 1001116:	add    BYTE PTR [eax],al
 1001118:	in     al,0x27
	...
 1001122:	add    BYTE PTR [eax],al
 1001124:	dec    edi
 1001125:	mov    eax,ds:0x3ea0
 100112a:	add    BYTE PTR [eax],al
 100112c:	add    al,BYTE PTR [eax]
 100112e:	add    BYTE PTR [eax],al
 1001130:	sbb    al,BYTE PTR [eax]
 1001132:	add    BYTE PTR [eax],al
 1001134:	jo     0x100114a
 1001136:	add    BYTE PTR [eax],al
 1001138:	jo     0x1001142
 100113a:	add    BYTE PTR [eax],al
 100113c:	arpl   WORD PTR [edi+0x75],bp
 100113f:	ins    BYTE PTR es:[edi],dx
 1001140:	and    BYTE PTR fs:[esi+0x6f],ch
 1001144:	je     0x1001166
 1001146:	gs ins DWORD PTR es:[edi],dx
 1001148:	jo     0x10011be
 100114a:	jns    0x100116c
 100114c:	ja     0x10011bd
 100114e:	jb     0x10011bb
 1001150:	imul   ebp,DWORD PTR [esi+0x67],0x74657320
 1001157:	and    BYTE PTR [esi+0x6f],ah
 100115a:	jb     0x100117c
 100115c:	jo     0x10011d0
 100115e:	outs   dx,DWORD PTR ds:[esi]
 100115f:	arpl   WORD PTR [ebp+0x73],sp
 1001162:	jae    0x1001184
 1001164:	and    esp,DWORD PTR ds:0x255b2064
 100116a:	jae    0x10011c9
 100116c:	or     al,BYTE PTR [eax]
 100116e:	add    BYTE PTR [eax],al
 1001170:	arpl   WORD PTR [edi+0x75],bp
 1001173:	ins    BYTE PTR es:[edi],dx
 1001174:	and    BYTE PTR fs:[esi+0x6f],ch
 1001178:	je     0x100119a
 100117a:	gs ins DWORD PTR es:[edi],dx
 100117c:	jo     0x10011f2
 100117e:	jns    0x10011a0
 1001180:	ja     0x10011f1
 1001182:	jb     0x10011ef
 1001184:	imul   ebp,DWORD PTR [esi+0x67],0x74657320
 100118b:	and    BYTE PTR [esi+0x6f],ah
 100118e:	jb     0x10011b0
 1001190:	jo     0x1001204
 1001192:	outs   dx,DWORD PTR ds:[esi]
 1001193:	arpl   WORD PTR [ebp+0x73],sp
 1001196:	jae    0x10011b8
 1001198:	and    esp,DWORD PTR ds:0xa64
 100119e:	add    BYTE PTR [eax],al
 10011a0:	push   ebp
 10011a1:	push   ebx
 10011a2:	inc    ecx
 10011a3:	inc    edi
 10011a4:	inc    ebp
 10011a5:	cmp    ah,BYTE PTR [eax]
 10011a7:	gs ins DWORD PTR es:[edi],dx
 10011a9:	jo     0x100121f
 10011ab:	jns    0x10011db
 10011ad:	gs js  0x1001215
 10011b0:	and    BYTE PTR [ebx+0x70],bh
 10011b3:	imul   esp,DWORD PTR [eax+eiz*1+0x7c],0x73617420
 10011bb:	imul   ebp,DWORD PTR ds:0x656d616e,0x7d
 10011c2:	or     al,BYTE PTR [eax]
 10011c4:	ins    DWORD PTR es:[edi],dx
 10011c5:	imul   esi,DWORD PTR [ebx+0x73],0x20676e69
 10011cc:	jo     0x1001237
 10011ce:	and    BYTE PTR fs:[edi+0x72],ch
 10011d2:	and    BYTE PTR [ecx+eiz*2+0x73],dh
 10011d6:	imul   esp,DWORD PTR [eax],0x6e
 10011d9:	popa   
 10011da:	ins    DWORD PTR es:[edi],dx
 10011db:	or     al,BYTE PTR gs:[eax]
 10011de:	add    BYTE PTR [eax],al
 10011e0:	push   ebp
 10011e1:	outs   dx,BYTE PTR ds:[esi]
 10011e2:	push   0x6c646e61
 10011e7:	gs fs inc ebp
 10011ea:	js     0x100124f
 10011ec:	gs jo  0x1001263
 10011ef:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 10011f6:	gs jb  0x10011f9
 10011f9:	add    BYTE PTR [eax],al
 10011fb:	add    BYTE PTR [ebx+0x65],ch
 10011fe:	jb     0x100126e
 1001200:	gs ins BYTE PTR es:[edi],dx
 1001202:	xor    esi,DWORD PTR [edx]
 1001204:	cs fs ins BYTE PTR es:[edi],dx
 1001207:	ins    BYTE PTR es:[edi],dx
	...
 1001210:	(bad)  
 1001211:	(bad)  
 1001212:	(bad)  
 1001213:	call   ebp
 1001215:	sbb    DWORD PTR [eax],eax
 1001217:	add    ecx,ebp
 1001219:	sbb    DWORD PTR [eax],eax
 100121b:	add    DWORD PTR [eax+eax*1],ebp
 100121e:	add    BYTE PTR [eax],al
 1001220:	push   ebx
 1001221:	jns    0x1001296
 1001223:	je     0x100128a
 1001225:	ins    DWORD PTR es:[edi],dx
 1001226:	and    BYTE PTR [eax+0x72],dl
 1001229:	outs   dx,DWORD PTR ds:[esi]
 100122a:	arpl   WORD PTR [ebp+0x73],sp
 100122d:	jae    0x100122f
 100122f:	add    BYTE PTR [ecx+0x64],al
 1001232:	push   0x75
 1001234:	jae    0x10012aa
 1001236:	push   esp
 1001237:	outs   dx,DWORD PTR ds:[esi]
 1001238:	imul   esp,DWORD PTR [ebp+0x6e],0x50
 100123c:	jb     0x10012a7
 100123e:	jbe    0x10012a9
 1001240:	ins    BYTE PTR es:[edi],dx
 1001241:	gs addr16 gs jae 0x1001266
 1001246:	popaw  
 1001248:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x74697720
 1001250:	push   0xa642520
 1001255:	add    BYTE PTR [eax],al
 1001257:	add    BYTE PTR [edi+ebp*2+0x6f],cl
 100125b:	imul   esi,DWORD PTR [ebp+0x70],0x50
 100125f:	jb     0x10012ca
 1001261:	jbe    0x10012cc
 1001263:	ins    BYTE PTR es:[edi],dx
 1001264:	gs addr16 gs push esi
 1001268:	popa   
 1001269:	ins    BYTE PTR es:[edi],dx
 100126a:	jne    0x10012d1
 100126c:	and    BYTE PTR [esi+0x61],ah
 100126f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x74697720
 1001277:	push   0xa642520
 100127c:	add    BYTE PTR [eax],al
 100127e:	add    BYTE PTR [eax],al
 1001280:	push   ebx
 1001281:	gs inc esp
 1001283:	bound  esi,QWORD PTR gs:[ebp+0x67]
 1001287:	push   eax
 1001288:	jb     0x10012f3
 100128a:	jbe    0x10012f5
 100128c:	ins    BYTE PTR es:[edi],dx
 100128d:	gs add BYTE PTR gs:[bx+si],al
 1001292:	add    BYTE PTR [eax],al
 1001294:	dec    edi
 1001295:	jo     0x10012fc
 1001297:	outs   dx,BYTE PTR ds:[esi]
 1001298:	push   eax
 1001299:	jb     0x100130a
 100129b:	arpl   WORD PTR [ebp+0x73],sp
 100129e:	jae    0x10012f4
 10012a0:	outs   dx,DWORD PTR ds:[esi]
 10012a1:	imul   esp,DWORD PTR [ebp+0x6e],0x20
 10012a5:	popaw  
 10012a7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x64],0x74697720
 10012af:	push   0xa642520
 10012b4:	add    BYTE PTR [eax],al
 10012b6:	add    BYTE PTR [eax],al
 10012b8:	(bad)  
 10012b9:	(bad)  
 10012ba:	(bad)  
 10012bb:	call   FWORD PTR [ebp-0x5efeffe0]
 10012c1:	and    BYTE PTR [eax],al
 10012c3:	add    DWORD PTR [ecx+0x19ecabae],esi
 10012c9:	jg     0x100129d
 10012cb:	adc    DWORD PTR [edi-0x7ffff72],edx
 10012d1:	jne    0x1001351
 10012d3:	sub    dh,BYTE PTR [edx+0x19ecabae]
 10012d9:	jg     0x10012ad
 10012db:	adc    DWORD PTR [edi-0x7ffff72],edx
 10012e1:	jne    0x1001361
 10012e3:	sub    dh,BYTE PTR [ebx+0x19ecabae]
 10012e9:	jg     0x10012bd
 10012eb:	adc    DWORD PTR [edi-0x7ffff72],edx
 10012f1:	jne    0x1001371
 10012f3:	sub    dh,BYTE PTR [esi+ebp*4+0x7f19ecab]
 10012fa:	rcl    BYTE PTR [ecx],cl
 10012fc:	xchg   edi,eax
 10012fd:	mov    es,WORD PTR [eax]
 10012ff:	add    al,bh
 1001301:	jne    0x1001381
 1001303:	sub    dh,BYTE PTR [ebp+0x19ecabae]
 1001309:	jg     0x10012dd
 100130b:	adc    DWORD PTR [edi-0x7ffff72],edx
 1001311:	jne    0x1001391
 1001313:	sub    dh,BYTE PTR [esi+0x19ecabae]
 1001319:	jg     0x10012ed
 100131b:	adc    DWORD PTR [edi-0x7ffff72],edx
 1001321:	jne    0x10013a1
 1001323:	sub    dh,BYTE PTR [edi+0x19ecabae]
 1001329:	jg     0x10012fd
 100132b:	adc    DWORD PTR [edi-0x7ffff72],edx
 1001331:	jne    0x10013b1
 1001333:	sub    bh,BYTE PTR [eax+0x19ecabae]
 1001339:	jg     0x100130d
 100133b:	adc    DWORD PTR [edi-0x7ffff72],edx
 1001341:	jne    0x10013c1
 1001343:	sub    bh,BYTE PTR [ecx+0x19ecabae]
 1001349:	jg     0x100131d
 100134b:	adc    DWORD PTR [edi-0x7ffff72],edx
 1001351:	jne    0x10013d1
 1001353:	sub    bh,BYTE PTR [edx+0x19ecabae]
 1001359:	jg     0x100132d
 100135b:	adc    DWORD PTR [edi-0x7ffff72],edx
 1001361:	jne    0x10013e1
 1001363:	sub    al,cl
 1001365:	scas   al,BYTE PTR es:[edi]
 1001366:	stos   DWORD PTR es:[edi],eax
 1001367:	in     al,dx
 1001368:	sbb    DWORD PTR [edi-0x2e],edi
 100136b:	adc    DWORD PTR [edi-0x7ffff72],edx
 1001371:	jne    0x10013f1
 1001373:	sub    bh,BYTE PTR [ebx+0x19ecabae]
 1001379:	jg     0x100134d
 100137b:	adc    DWORD PTR [edi-0x7ffff72],edx
 1001381:	jne    0x1001401
 1001383:	sub    bh,BYTE PTR [esi+ebp*4+0x7f19ecab]
 100138a:	rcl    BYTE PTR [ecx],cl
 100138c:	xchg   edi,eax
 100138d:	mov    es,WORD PTR [eax]
 100138f:	add    al,bh
 1001391:	jne    0x1001411
 1001393:	sub    bh,BYTE PTR [esi+0x19ecabae]
 1001399:	jg     0x100136d
 100139b:	adc    DWORD PTR [edi-0x7ffff72],edx
 10013a1:	jne    0x1001421
 10013a3:	sub    bh,BYTE PTR [edi+0x19ecabae]
 10013a9:	jg     0x100137d
 10013ab:	adc    DWORD PTR [edi-0x7ffff72],edx
 10013b1:	jne    0x1001431
 10013b3:	sub    al,al
 10013b5:	scas   al,BYTE PTR es:[edi]
 10013b6:	stos   DWORD PTR es:[edi],eax
 10013b7:	in     al,dx
 10013b8:	sbb    DWORD PTR [edi-0x2e],edi
 10013bb:	adc    DWORD PTR [edi-0x7ffff72],edx
 10013c1:	jne    0x1001441
 10013c3:	sub    dh,bl
 10013c5:	sub    dh,BYTE PTR [edi]
 10013c7:	push   ecx
 10013c8:	out    0xca,eax
 10013ca:	iret   
 10013cb:	adc    DWORD PTR [esi+0xaa0081],edi
 10013d1:	mov    ds:0x1f3c25fa,al
 10013d6:	dec    esi
 10013d7:	jnp    0x10013db
 10013d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 10013da:	rcl    BYTE PTR [ecx],cl
 10013dc:	mov    ds:0x4fc00036,eax
 10013e1:	jns    0x100145b
 10013e3:	loopne 0x1001423
 10013e5:	psubsw mm0,QWORD PTR [ecx-0x3f]
 10013e9:	push   esi
 10013ea:	xor    eax,DWORD PTR [esi-0x7f]
 10013ed:	ret    
 10013ee:	outs   dx,BYTE PTR ds:[esi]
 10013ef:	mov    ebp,DWORD PTR [ebx+ecx*4+0xf3e70dd]
 10013f6:	jmp    0x3456d53c
 10013fb:	inc    esi
 10013fc:	add    ebx,0x8bac8b6e
 1001402:	fnsave [eax-0xf]
 1001405:	mov    bl,0xd4
 1001407:	add    cl,BYTE PTR [eax-0x69ee2e03]
 100140d:	or     eax,0xc75f8000
 1001412:	xchg   edx,eax
 1001413:	xor    eax,0xd7174f82
 1001418:	mov    eax,0x804aa836
 100141d:	or     ch,cl
 100141f:	arpl   WORD PTR [ebx+0xb9fa2d],bp
 1001425:	add    BYTE PTR [eax],al
 1001427:	add    BYTE PTR [eax+0x0],cl
	...
 1001462:	add    BYTE PTR [eax],al
 1001464:	sbb    al,0x30
 1001466:	add    BYTE PTR [ecx],al
 1001468:	mov    al,0x14
 100146a:	add    BYTE PTR [ecx],al
 100146c:	add    DWORD PTR [eax],eax
 100146e:	add    BYTE PTR [eax],al
 1001470:	dec    esi
 1001471:	inc    edx
 1001472:	xor    DWORD PTR [eax],esi
 1001474:	add    BYTE PTR [eax],al
 1001476:	add    BYTE PTR [eax],al
 1001478:	dec    edi
 1001479:	mov    eax,ds:0x13ea0
 100147e:	add    BYTE PTR [eax],al
 1001480:	gs ins DWORD PTR es:[edi],dx
 1001482:	jo     0x10014f8
 1001484:	jns    0x10014b4
 1001486:	jo     0x10014ec
 1001488:	bound  eax,QWORD PTR [eax]
	...
 10014ae:	add    BYTE PTR [eax],al
 10014b0:	jl     0x10014cc
 10014b2:	add    BYTE PTR [eax],al
 10014b4:	push   ebp
 10014b5:	mov    ebp,esp
 10014b7:	xor    eax,eax
 10014b9:	cmp    DWORD PTR [ebp+0xc],eax
 10014bc:	jne    0x10014c5
 10014be:	mov    eax,0x80070057
 10014c3:	jmp    0x10014eb
 10014c5:	mov    edx,DWORD PTR [ebp+0x8]
 10014c8:	push   esi
 10014c9:	mov    esi,DWORD PTR [ebp+0x10]
 10014cc:	mov    cl,BYTE PTR [esi]
 10014ce:	test   cl,cl
 10014d0:	je     0x10014db
 10014d2:	mov    BYTE PTR [edx],cl
 10014d4:	inc    edx
 10014d5:	inc    esi
 10014d6:	dec    DWORD PTR [ebp+0xc]
 10014d9:	jne    0x10014cc
 10014db:	cmp    DWORD PTR [ebp+0xc],0x0
 10014df:	pop    esi
 10014e0:	jne    0x10014e8
 10014e2:	dec    edx
 10014e3:	mov    eax,0x8007007a
 10014e8:	mov    BYTE PTR [edx],0x0
 10014eb:	pop    ebp
 10014ec:	ret    0xc
 10014ef:	push   ecx
 10014f0:	and    DWORD PTR ds:0x12d3180,0x0
 10014f7:	push   ebx
 10014f8:	push   ebp
 10014f9:	push   esi
 10014fa:	push   edi
 10014fb:	mov    DWORD PTR [esp+0x10],0x1003060
 1001503:	mov    BYTE PTR ds:0x1003060,0x0
 100150a:	call   DWORD PTR ds:0x1001038
 1001510:	mov    esi,eax
 1001512:	mov    bl,BYTE PTR [esi]
 1001514:	inc    esi
 1001515:	cmp    bl,0x20
 1001518:	je     0x1001523
 100151a:	cmp    bl,0x9
 100151d:	je     0x1001523
 100151f:	test   bl,bl
 1001521:	jne    0x1001512
 1001523:	mov    edi,DWORD PTR ds:0x10010c0
 1001529:	jmp    0x100152e
 100152b:	mov    bl,BYTE PTR [esi]
 100152d:	inc    esi
 100152e:	movzx  eax,bl
 1001531:	push   eax
 1001532:	call   edi
 1001534:	test   eax,eax
 1001536:	pop    ecx
 1001537:	jne    0x100152b
 1001539:	mov    ebp,DWORD PTR ds:0x10010c4
 100153f:	movzx  edi,bl
 1001542:	push   edi
 1001543:	call   ebp
 1001545:	test   eax,eax
 1001547:	pop    ecx
 1001548:	je     0x1001576
 100154a:	jmp    0x1001563
 100154c:	mov    eax,ds:0x12d3180
 1001551:	lea    eax,[eax+eax*4]
 1001554:	lea    eax,[edi+eax*2-0x30]
 1001558:	mov    ds:0x12d3180,eax
 100155d:	mov    al,BYTE PTR [esi]
 100155f:	inc    esi
 1001560:	movzx  edi,al
 1001563:	push   edi
 1001564:	call   ebp
 1001566:	test   eax,eax
 1001568:	pop    ecx
 1001569:	jne    0x100154c
 100156b:	jmp    0x100158c
 100156d:	inc    DWORD PTR [esp+0x10]
 1001571:	mov    BYTE PTR [eax],bl
 1001573:	mov    bl,BYTE PTR [esi]
 1001575:	inc    esi
 1001576:	test   bl,bl
 1001578:	mov    eax,DWORD PTR [esp+0x10]
 100157c:	jne    0x100156d
 100157e:	push   0x1003060
 1001583:	mov    BYTE PTR [eax],bl
 1001585:	call   DWORD PTR ds:0x10010c8
 100158b:	pop    ecx
 100158c:	pop    edi
 100158d:	pop    esi
 100158e:	pop    ebp
 100158f:	pop    ebx
 1001590:	pop    ecx
 1001591:	ret    
 1001592:	sub    esp,0xa0
 1001598:	mov    eax,ds:0x100301c
 100159d:	and    DWORD PTR [esp],0x0
 10015a1:	push   ebx
 10015a2:	mov    DWORD PTR [esp+0xa0],eax
 10015a9:	call   0x10014ef
 10015ae:	cmp    DWORD PTR ds:0x12d3180,0x0
 10015b5:	jne    0x1001603
 10015b7:	mov    bl,BYTE PTR ds:0x1003060
 10015bd:	test   bl,bl
 10015bf:	jne    0x10015ce
 10015c1:	push   0x10011c4
 10015c6:	call   DWORD PTR ds:0x10010b8
 10015cc:	jmp    0x100162d
 10015ce:	mov    eax,0x1003060
 10015d3:	lea    edx,[eax+0x1]
 10015d6:	mov    cl,BYTE PTR [eax]
 10015d8:	inc    eax
 10015d9:	test   cl,cl
 10015db:	jne    0x10015d6
 10015dd:	sub    eax,edx
 10015df:	cmp    eax,0x2
 10015e2:	jne    0x1001603
 10015e4:	cmp    bl,0x2d
 10015e7:	je     0x10015ee
 10015e9:	cmp    bl,0x2f
 10015ec:	jne    0x1001603
 10015ee:	cmp    BYTE PTR ds:0x1003061,0x3f
 10015f5:	jne    0x1001603
 10015f7:	push   0x10011a0
 10015fc:	call   DWORD PTR ds:0x10010b8
 1001602:	pop    ecx
 1001603:	call   0x1001d1b
 1001608:	mov    eax,ds:0x12d3180
 100160d:	test   eax,eax
 100160f:	je     0x100163d
 1001611:	push   eax
 1001612:	call   0x1001f2c
 1001617:	test   eax,eax
 1001619:	jne    0x1001636
 100161b:	push   DWORD PTR ds:0x12d3180
 1001621:	push   0x1001170
 1001626:	call   DWORD PTR ds:0x10010b8
 100162c:	pop    ecx
 100162d:	xor    eax,eax
 100162f:	pop    ecx
 1001630:	inc    eax
 1001631:	jmp    0x1001752
 1001636:	xor    eax,eax
 1001638:	jmp    0x1001752
 100163d:	push   ebp
 100163e:	push   esi
 100163f:	push   edi
 1001640:	push   0x400
 1001645:	mov    esi,0x1003180
 100164a:	push   esi
 100164b:	call   0x1001d06
 1001650:	mov    ebx,eax
 1001652:	lea    eax,[esp+0x18]
 1001656:	push   eax
 1001657:	mov    DWORD PTR [esp+0x1c],esi
 100165b:	mov    DWORD PTR [esp+0x20],ebx
 100165f:	call   0x10021b2
 1001664:	test   ebx,ebx
 1001666:	jbe    0x10016e5
 1001668:	mov    edi,0x1003190
 100166d:	mov    DWORD PTR [esp+0x14],ebx
 1001671:	lea    ebp,[edi+0x10]
 1001674:	push   ebp
 1001675:	push   0x80
 100167a:	lea    eax,[esp+0x34]
 100167e:	push   eax
 100167f:	call   0x10014b4
 1001684:	lea    eax,[esp+0x2c]
 1001688:	push   0x2e
 100168a:	push   eax
 100168b:	call   DWORD PTR ds:0x10010bc
 1001691:	test   eax,eax
 1001693:	pop    ecx
 1001694:	pop    ecx
 1001695:	je     0x100169a
 1001697:	mov    BYTE PTR [eax],0x0
 100169a:	push   0x0
 100169c:	mov    esi,0x1003060
 10016a1:	push   esi
 10016a2:	lea    eax,[esp+0x34]
 10016a6:	push   eax
 10016a7:	call   0x1001e1c
 10016ac:	test   eax,eax
 10016ae:	jne    0x10016ce
 10016b0:	push   eax
 10016b1:	push   esi
 10016b2:	push   ebp
 10016b3:	call   0x1001e1c
 10016b8:	test   eax,eax
 10016ba:	jne    0x10016ce
 10016bc:	push   eax
 10016bd:	push   esi
 10016be:	add    ebp,0x80
 10016c4:	push   ebp
 10016c5:	call   0x1001e1c
 10016ca:	test   eax,eax
 10016cc:	je     0x10016d4
 10016ce:	mov    DWORD PTR [edi],0x1
 10016d4:	add    edi,0xb40
 10016da:	dec    DWORD PTR [esp+0x14]
 10016de:	jne    0x1001671
 10016e0:	mov    esi,0x1003180
 10016e5:	test   ebx,ebx
 10016e7:	mov    ebp,0x100113c
 10016ec:	jbe    0x1001720
 10016ee:	lea    edi,[esi+0x20]
 10016f1:	cmp    DWORD PTR [edi-0x10],0x0
 10016f5:	je     0x1001717
 10016f7:	push   DWORD PTR [esi]
 10016f9:	call   0x1001f2c
 10016fe:	test   eax,eax
 1001700:	jne    0x1001717
 1001702:	push   edi
 1001703:	push   DWORD PTR [esi]
 1001705:	push   ebp
 1001706:	call   DWORD PTR ds:0x10010b8
 100170c:	add    esp,0xc
 100170f:	mov    DWORD PTR [esp+0x10],0x1
 1001717:	add    esi,0xb40
 100171d:	dec    ebx
 100171e:	jne    0x10016ee
 1001720:	push   0x0
 1001722:	push   0x1003060
 1001727:	mov    esi,0x1003014
 100172c:	push   esi
 100172d:	call   0x1001e1c
 1001732:	test   eax,eax
 1001734:	je     0x100174b
 1001736:	call   0x1001f7d
 100173b:	test   eax,eax
 100173d:	jne    0x100174b
 100173f:	push   esi
 1001740:	push   eax
 1001741:	push   ebp
 1001742:	call   DWORD PTR ds:0x10010b8
 1001748:	add    esp,0xc
 100174b:	mov    eax,DWORD PTR [esp+0x10]
 100174f:	pop    edi
 1001750:	pop    esi
 1001751:	pop    ebp
 1001752:	pop    ebx
 1001753:	mov    ecx,DWORD PTR [esp+0x9c]
 100175a:	add    esp,0xa0
 1001760:	jmp    0x10017eb
 1001765:	push   ebp
 1001766:	mov    ebp,esp
 1001768:	sub    esp,0x10
 100176b:	mov    eax,ds:0x100301c
 1001770:	test   eax,eax
 1001772:	je     0x100177b
 1001774:	cmp    eax,0xbb40e64e
 1001779:	jne    0x10017e9
 100177b:	push   esi
 100177c:	lea    eax,[ebp-0x8]
 100177f:	push   eax
 1001780:	call   DWORD PTR ds:0x1001014
 1001786:	mov    esi,DWORD PTR [ebp-0x4]
 1001789:	xor    esi,DWORD PTR [ebp-0x8]
 100178c:	call   DWORD PTR ds:0x1001010
 1001792:	xor    esi,eax
 1001794:	call   DWORD PTR ds:0x1001018
 100179a:	xor    esi,eax
 100179c:	call   DWORD PTR ds:0x1001024
 10017a2:	xor    esi,eax
 10017a4:	lea    eax,[ebp-0x10]
 10017a7:	push   eax
 10017a8:	call   DWORD PTR ds:0x1001028
 10017ae:	mov    eax,DWORD PTR [ebp-0xc]
 10017b1:	xor    eax,DWORD PTR [ebp-0x10]
 10017b4:	xor    esi,eax
 10017b6:	mov    DWORD PTR ds:0x100301c,esi
 10017bc:	jne    0x10017c8
 10017be:	mov    DWORD PTR ds:0x100301c,0xbb40e64e
 10017c8:	push   0x10011fc
 10017cd:	call   DWORD PTR ds:0x100102c
 10017d3:	test   eax,eax
 10017d5:	pop    esi
 10017d6:	je     0x10017e9
 10017d8:	push   0x10011e0
 10017dd:	push   eax
 10017de:	call   DWORD PTR ds:0x1001030
 10017e4:	mov    ds:0x12d3188,eax
 10017e9:	leave  
 10017ea:	ret    
 10017eb:	cmp    ecx,DWORD PTR ds:0x100301c
 10017f1:	jne    0x10017f4
 10017f3:	ret    
 10017f4:	jmp    0x10017f9
 10017f9:	push   ebp
 10017fa:	lea    ebp,[esp-0x2a8]
 1001801:	sub    esp,0x328
 1001807:	mov    eax,ds:0x100301c
 100180c:	mov    DWORD PTR [ebp+0x2a4],eax
 1001812:	mov    eax,ds:0x12d3184
 1001817:	test   eax,eax
 1001819:	je     0x100181d
 100181b:	call   eax
 100181d:	cmp    DWORD PTR ds:0x12d3188,0x0
 1001824:	je     0x1001864
 1001826:	push   edi
 1001827:	xor    eax,eax
 1001829:	and    DWORD PTR [ebp-0x28],eax
 100182c:	push   0x13
 100182e:	pop    ecx
 100182f:	lea    edi,[ebp-0x7c]
 1001832:	rep stos DWORD PTR es:[edi],eax
 1001834:	mov    ecx,0xb2
 1001839:	lea    edi,[ebp-0x24]
 100183c:	rep stos DWORD PTR es:[edi],eax
 100183e:	lea    eax,[ebp-0x80]
 1001841:	mov    DWORD PTR [ebp-0x30],eax
 1001844:	lea    eax,[ebp-0x28]
 1001847:	push   0x0
 1001849:	mov    DWORD PTR [ebp-0x80],0xc0000409
 1001850:	mov    DWORD PTR [ebp-0x2c],eax
 1001853:	call   DWORD PTR ds:0x1001020
 1001859:	lea    eax,[ebp-0x30]
 100185c:	push   eax
 100185d:	call   DWORD PTR ds:0x12d3188
 1001863:	pop    edi
 1001864:	push   0x502
 1001869:	call   DWORD PTR ds:0x100101c
 100186f:	push   eax
 1001870:	call   DWORD PTR ds:0x1001034
 1001876:	mov    ecx,DWORD PTR [ebp+0x2a4]
 100187c:	call   0x10017eb
 1001881:	add    ebp,0x2a8
 1001887:	leave  
 1001888:	ret    
 1001889:	push   0x28
 100188b:	push   0x1001210
 1001890:	call   0x1001a30
 1001895:	cmp    WORD PTR ds:0x1000000,0x5a4d
 100189e:	jne    0x10018c8
 10018a0:	mov    eax,ds:0x100003c
 10018a5:	cmp    DWORD PTR [eax+0x1000000],0x4550
 10018af:	jne    0x10018c8
 10018b1:	movzx  ecx,WORD PTR [eax+0x1000018]
 10018b8:	cmp    ecx,0x10b
 10018be:	je     0x10018e1
 10018c0:	cmp    ecx,0x20b
 10018c6:	je     0x10018ce
 10018c8:	and    DWORD PTR [ebp-0x1c],0x0
 10018cc:	jmp    0x10018f8
 10018ce:	cmp    DWORD PTR [eax+0x1000084],0xe
 10018d5:	jbe    0x10018c8
 10018d7:	xor    ecx,ecx
 10018d9:	cmp    DWORD PTR [eax+0x10000f8],ecx
 10018df:	jmp    0x10018f2
 10018e1:	cmp    DWORD PTR [eax+0x1000074],0xe
 10018e8:	jbe    0x10018c8
 10018ea:	xor    ecx,ecx
 10018ec:	cmp    DWORD PTR [eax+0x10000e8],ecx
 10018f2:	setne  cl
 10018f5:	mov    DWORD PTR [ebp-0x1c],ecx
 10018f8:	and    DWORD PTR [ebp-0x4],0x0
 10018fc:	push   0x1
 10018fe:	call   DWORD PTR ds:0x10010fc
 1001904:	pop    ecx
 1001905:	or     DWORD PTR ds:0x12d318c,0xffffffff
 100190c:	or     DWORD PTR ds:0x12d3190,0xffffffff
 1001913:	call   DWORD PTR ds:0x1001108
 1001919:	mov    ecx,DWORD PTR ds:0x100304c
 100191f:	mov    DWORD PTR [eax],ecx
 1001921:	call   DWORD PTR ds:0x10010f4
 1001927:	mov    ecx,DWORD PTR ds:0x1003048
 100192d:	mov    DWORD PTR [eax],ecx
 100192f:	mov    eax,ds:0x10010f0
 1001934:	mov    eax,DWORD PTR [eax]
 1001936:	mov    ds:0x12d3194,eax
 100193b:	call   0x1001a2c
 1001940:	cmp    DWORD PTR ds:0x1003020,0x0
 1001947:	jne    0x1001955
 1001949:	push   0x1001a2c
 100194e:	call   DWORD PTR ds:0x10010ec
 1001954:	pop    ecx
 1001955:	call   0x1001a1a
 100195a:	push   0x1003010
 100195f:	push   0x100300c
 1001964:	call   0x1001a14
 1001969:	mov    eax,ds:0x1003044
 100196e:	mov    DWORD PTR [ebp-0x24],eax
 1001971:	lea    eax,[ebp-0x24]
 1001974:	push   eax
 1001975:	push   DWORD PTR ds:0x1003040
 100197b:	lea    eax,[ebp-0x20]
 100197e:	push   eax
 100197f:	lea    eax,[ebp-0x28]
 1001982:	push   eax
 1001983:	lea    eax,[ebp-0x2c]
 1001986:	push   eax
 1001987:	call   DWORD PTR ds:0x10010e4
 100198d:	mov    DWORD PTR [ebp-0x34],eax
 1001990:	push   0x1003008
 1001995:	push   0x1003000
 100199a:	call   0x1001a14
 100199f:	mov    eax,DWORD PTR [ebp-0x20]
 10019a2:	mov    ecx,DWORD PTR ds:0x10010e0
 10019a8:	mov    DWORD PTR [ecx],eax
 10019aa:	push   DWORD PTR [ebp-0x20]
 10019ad:	push   DWORD PTR [ebp-0x28]
 10019b0:	push   DWORD PTR [ebp-0x2c]
 10019b3:	call   0x1001592
 10019b8:	add    esp,0x30
 10019bb:	mov    esi,eax
 10019bd:	mov    DWORD PTR [ebp-0x38],esi
 10019c0:	cmp    DWORD PTR [ebp-0x1c],0x0
 10019c4:	jne    0x10019cd
 10019c6:	push   esi
 10019c7:	call   DWORD PTR ds:0x10010dc
 10019cd:	call   DWORD PTR ds:0x10010d8
 10019d3:	jmp    0x1001a02
 10019d5:	mov    eax,DWORD PTR [ebp-0x14]
 10019d8:	mov    ecx,DWORD PTR [eax]
 10019da:	mov    ecx,DWORD PTR [ecx]
 10019dc:	mov    DWORD PTR [ebp-0x30],ecx
 10019df:	push   eax
 10019e0:	push   ecx
 10019e1:	call   0x1001a0e
 10019e6:	pop    ecx
 10019e7:	pop    ecx
 10019e8:	ret    
 10019e9:	mov    esp,DWORD PTR [ebp-0x18]
 10019ec:	mov    esi,DWORD PTR [ebp-0x30]
 10019ef:	cmp    DWORD PTR [ebp-0x1c],0x0
 10019f3:	jne    0x10019fc
 10019f5:	push   esi
 10019f6:	call   DWORD PTR ds:0x10010d0
 10019fc:	call   DWORD PTR ds:0x1001104
 1001a02:	or     DWORD PTR [ebp-0x4],0xffffffff
 1001a06:	mov    eax,esi
 1001a08:	call   0x1001a6b
 1001a0d:	ret    
 1001a0e:	jmp    DWORD PTR ds:0x10010d4
 1001a14:	jmp    DWORD PTR ds:0x10010e8
 1001a1a:	push   0x30000
 1001a1f:	push   0x10000
 1001a24:	call   0x1001a82
 1001a29:	pop    ecx
 1001a2a:	pop    ecx
 1001a2b:	ret    
 1001a2c:	xor    eax,eax
 1001a2e:	ret    
 1001a2f:	int3   
 1001a30:	push   0x1001a7c
 1001a35:	mov    eax,fs:0x0
 1001a3b:	push   eax
 1001a3c:	mov    eax,DWORD PTR [esp+0x10]
 1001a40:	mov    DWORD PTR [esp+0x10],ebp
 1001a44:	lea    ebp,[esp+0x10]
 1001a48:	sub    esp,eax
 1001a4a:	push   ebx
 1001a4b:	push   esi
 1001a4c:	push   edi
 1001a4d:	mov    eax,DWORD PTR [ebp-0x8]
 1001a50:	mov    DWORD PTR [ebp-0x18],esp
 1001a53:	push   eax
 1001a54:	mov    eax,DWORD PTR [ebp-0x4]
 1001a57:	mov    DWORD PTR [ebp-0x4],0xffffffff
 1001a5e:	mov    DWORD PTR [ebp-0x8],eax
 1001a61:	lea    eax,[ebp-0x10]
 1001a64:	mov    fs:0x0,eax
 1001a6a:	ret    
 1001a6b:	mov    ecx,DWORD PTR [ebp-0x10]
 1001a6e:	mov    DWORD PTR fs:0x0,ecx
 1001a75:	pop    ecx
 1001a76:	pop    edi
 1001a77:	pop    esi
 1001a78:	pop    ebx
 1001a79:	leave  
 1001a7a:	push   ecx
 1001a7b:	ret    
 1001a7c:	jmp    DWORD PTR ds:0x1001100
 1001a82:	jmp    DWORD PTR ds:0x10010f8
 1001a88:	push   ebp
 1001a89:	mov    ebp,esp
 1001a8b:	sub    esp,0x20
 1001a8e:	mov    eax,ds:0x12d3198
 1001a93:	push   ebx
 1001a94:	xor    ebx,ebx
 1001a96:	mov    DWORD PTR [ebp-0x14],ebx
 1001a99:	cmp    eax,ebx
 1001a9b:	jne    0x1001aba
 1001a9d:	push   0x4
 1001a9f:	push   0x1000
 1001aa4:	push   DWORD PTR ds:0x1003024
 1001aaa:	push   ebx
 1001aab:	call   DWORD PTR ds:0x100104c
 1001ab1:	cmp    eax,ebx
 1001ab3:	mov    ds:0x12d3198,eax
 1001ab8:	je     0x1001af6
 1001aba:	push   ebx
 1001abb:	push   DWORD PTR ds:0x1003024
 1001ac1:	push   eax
 1001ac2:	push   0x5
 1001ac4:	call   DWORD PTR ds:0x1001118
 1001aca:	cmp    eax,0xc0000004
 1001acf:	jne    0x1001afd
 1001ad1:	add    DWORD PTR ds:0x1003024,0x2000
 1001adb:	push   0x8000
 1001ae0:	push   ebx
 1001ae1:	push   DWORD PTR ds:0x12d3198
 1001ae7:	call   DWORD PTR ds:0x1001050
 1001aed:	xor    eax,eax
 1001aef:	mov    ds:0x12d3198,eax
 1001af4:	jmp    0x1001a99
 1001af6:	xor    eax,eax
 1001af8:	jmp    0x1001d01
 1001afd:	push   esi
 1001afe:	mov    esi,DWORD PTR [ebp+0x8]
 1001b01:	push   edi
 1001b02:	mov    edi,DWORD PTR ds:0x12d3198
 1001b08:	mov    DWORD PTR [ebp-0xc],ebx
 1001b0b:	mov    DWORD PTR [ebp-0x1c],ebx
 1001b0e:	cmp    DWORD PTR [edi+0x3c],ebx
 1001b11:	je     0x1001b48
 1001b13:	push   0x1
 1001b15:	lea    eax,[edi+0x38]
 1001b18:	push   eax
 1001b19:	lea    eax,[ebp-0x20]
 1001b1c:	push   eax
 1001b1d:	call   DWORD PTR ds:0x1001114
 1001b23:	cmp    DWORD PTR [ebp-0x1c],ebx
 1001b26:	je     0x1001b41
 1001b28:	push   0x5c
 1001b2a:	push   DWORD PTR [ebp-0x1c]
 1001b2d:	call   DWORD PTR ds:0x10010a4
 1001b33:	cmp    eax,ebx
 1001b35:	pop    ecx
 1001b36:	pop    ecx
 1001b37:	je     0x1001b3c
 1001b39:	inc    eax
 1001b3a:	jmp    0x1001b4d
 1001b3c:	mov    eax,DWORD PTR [ebp-0x1c]
 1001b3f:	jmp    0x1001b4d
 1001b41:	mov    eax,0x100122f
 1001b46:	jmp    0x1001b4d
 1001b48:	mov    eax,0x1001220
 1001b4d:	push   0x80
 1001b52:	push   eax
 1001b53:	lea    eax,[esi+0x20]
 1001b56:	push   eax
 1001b57:	call   DWORD PTR ds:0x10010a0
 1001b5d:	mov    BYTE PTR [esi+0x9f],0x0
 1001b64:	mov    DWORD PTR [esi+0x10],ebx
 1001b67:	mov    eax,DWORD PTR [edi+0x44]
 1001b6a:	mov    DWORD PTR [esi],eax
 1001b6c:	mov    eax,DWORD PTR [edi+0x48]
 1001b6f:	mov    DWORD PTR [esi+0x4],eax
 1001b72:	mov    eax,DWORD PTR [edi+0x20]
 1001b75:	mov    DWORD PTR [esi+0x8],eax
 1001b78:	mov    eax,DWORD PTR [edi+0x24]
 1001b7b:	mov    DWORD PTR [esi+0xc],eax
 1001b7e:	mov    eax,DWORD PTR [edi+0x58]
 1001b81:	mov    DWORD PTR [esi+0x120],eax
 1001b87:	mov    eax,DWORD PTR [edi+0x5c]
 1001b8a:	mov    DWORD PTR [esi+0x124],eax
 1001b90:	mov    eax,DWORD PTR [edi+0x60]
 1001b93:	mov    DWORD PTR [esi+0x128],eax
 1001b99:	mov    eax,DWORD PTR [edi+0x64]
 1001b9c:	mov    DWORD PTR [esi+0x12c],eax
 1001ba2:	mov    eax,DWORD PTR [edi+0x68]
 1001ba5:	mov    DWORD PTR [esi+0x130],eax
 1001bab:	mov    eax,DWORD PTR [edi+0x4]
 1001bae:	add    esp,0xc
 1001bb1:	cmp    DWORD PTR [ebp+0x10],ebx
 1001bb4:	mov    DWORD PTR [esi+0x134],eax
 1001bba:	je     0x1001bf8
 1001bbc:	shl    eax,0x3
 1001bbf:	push   eax
 1001bc0:	call   DWORD PTR ds:0x10010cc
 1001bc6:	cmp    eax,ebx
 1001bc8:	pop    ecx
 1001bc9:	mov    DWORD PTR [esi+0x138],eax
 1001bcf:	je     0x1001bfe
 1001bd1:	mov    ecx,DWORD PTR [esi+0x134]
 1001bd7:	cmp    ecx,ebx
 1001bd9:	mov    edx,eax
 1001bdb:	je     0x1001bfe
 1001bdd:	lea    eax,[edi+0xdc]
 1001be3:	mov    ebx,DWORD PTR [eax+0x10]
 1001be6:	mov    DWORD PTR [edx],ebx
 1001be8:	mov    ebx,DWORD PTR [eax]
 1001bea:	mov    DWORD PTR [edx+0x4],ebx
 1001bed:	add    edx,0x8
 1001bf0:	add    eax,0x40
 1001bf3:	dec    ecx
 1001bf4:	jne    0x1001be3
 1001bf6:	jmp    0x1001bfe
 1001bf8:	mov    DWORD PTR [esi+0x138],ebx
 1001bfe:	mov    BYTE PTR [esi+0x53c],0x0
 1001c05:	mov    eax,DWORD PTR [edi+0x50]
 1001c08:	mov    DWORD PTR [esi+0x93c],eax
 1001c0e:	xor    eax,eax
 1001c10:	cmp    DWORD PTR [ebp+0x14],eax
 1001c13:	lea    ebx,[esi+0x13c]
 1001c19:	mov    BYTE PTR [esi+0x940],0x0
 1001c20:	mov    BYTE PTR [ebx],0x0
 1001c23:	je     0x1001cd2
 1001c29:	mov    DWORD PTR [ebp-0x10],0x1
 1001c30:	mov    DWORD PTR [ebp+0x8],0x3ff
 1001c37:	mov    DWORD PTR [ebp-0x8],eax
 1001c3a:	jbe    0x1001cd2
 1001c40:	mov    eax,DWORD PTR [ebp+0x18]
 1001c43:	mov    DWORD PTR [ebp-0x4],eax
 1001c46:	mov    ecx,DWORD PTR [esi]
 1001c48:	cmp    ecx,DWORD PTR [eax+0x24]
 1001c4b:	jne    0x1001cbd
 1001c4d:	mov    ecx,DWORD PTR [eax]
 1001c4f:	mov    eax,ecx
 1001c51:	lea    edx,[eax+0x1]
 1001c54:	mov    DWORD PTR [ebp-0x18],edx
 1001c57:	mov    dl,BYTE PTR [eax]
 1001c59:	inc    eax
 1001c5a:	test   dl,dl
 1001c5c:	jne    0x1001c57
 1001c5e:	sub    eax,DWORD PTR [ebp-0x18]
 1001c61:	cmp    DWORD PTR [ebp-0x10],0x0
 1001c65:	mov    DWORD PTR [ebp-0x18],eax
 1001c68:	je     0x1001c85
 1001c6a:	push   DWORD PTR [ebp+0x8]
 1001c6d:	and    DWORD PTR [ebp-0x10],0x0
 1001c71:	push   ecx
 1001c72:	push   ebx
 1001c73:	call   DWORD PTR ds:0x10010a0
 1001c79:	mov    eax,DWORD PTR [ebp+0x8]
 1001c7c:	add    esp,0xc
 1001c7f:	mov    BYTE PTR [ebx+eax*1],0x0
 1001c83:	jmp    0x1001caf
 1001c85:	cmp    DWORD PTR [ebp+0x8],0x1
 1001c89:	jbe    0x1001caf
 1001c8b:	push   DWORD PTR [ebp+0x8]
 1001c8e:	push   0x100121c
 1001c93:	push   ebx
 1001c94:	call   DWORD PTR ds:0x10010b4
 1001c9a:	dec    DWORD PTR [ebp+0x8]
 1001c9d:	push   DWORD PTR [ebp+0x8]
 1001ca0:	mov    eax,DWORD PTR [ebp-0x4]
 1001ca3:	push   DWORD PTR [eax]
 1001ca5:	push   ebx
 1001ca6:	call   DWORD PTR ds:0x10010b4
 1001cac:	add    esp,0x18
 1001caf:	mov    eax,DWORD PTR [ebp-0x18]
 1001cb2:	cmp    DWORD PTR [ebp+0x8],eax
 1001cb5:	jb     0x1001cd2
 1001cb7:	sub    DWORD PTR [ebp+0x8],eax
 1001cba:	mov    eax,DWORD PTR [ebp-0x4]
 1001cbd:	inc    DWORD PTR [ebp-0x8]
 1001cc0:	mov    ecx,DWORD PTR [ebp-0x8]
 1001cc3:	add    eax,0x2c
 1001cc6:	cmp    ecx,DWORD PTR [ebp+0x14]
 1001cc9:	mov    DWORD PTR [ebp-0x4],eax
 1001ccc:	jb     0x1001c46
 1001cd2:	mov    eax,DWORD PTR [ebp-0x14]
 1001cd5:	add    esi,0xb40
 1001cdb:	inc    eax
 1001cdc:	cmp    eax,DWORD PTR [ebp+0xc]
 1001cdf:	mov    DWORD PTR [ebp-0x14],eax
 1001ce2:	je     0x1001cff
 1001ce4:	mov    edi,DWORD PTR [edi]
 1001ce6:	test   edi,edi
 1001ce8:	je     0x1001cff
 1001cea:	add    DWORD PTR [ebp-0xc],edi
 1001ced:	mov    eax,ds:0x12d3198
 1001cf2:	mov    ecx,DWORD PTR [ebp-0xc]
 1001cf5:	lea    edi,[eax+ecx*1]
 1001cf8:	xor    ebx,ebx
 1001cfa:	jmp    0x1001b0b
 1001cff:	pop    edi
 1001d00:	pop    esi
 1001d01:	pop    ebx
 1001d02:	leave  
 1001d03:	ret    0x14
 1001d06:	xor    eax,eax
 1001d08:	push   eax
 1001d09:	push   eax
 1001d0a:	push   eax
 1001d0b:	push   DWORD PTR [esp+0x14]
 1001d0f:	push   DWORD PTR [esp+0x14]
 1001d13:	call   0x1001a88
 1001d18:	ret    0x8
 1001d1b:	push   ebp
 1001d1c:	mov    ebp,esp
 1001d1e:	sub    esp,0x1c
 1001d21:	lea    eax,[ebp-0x4]
 1001d24:	push   eax
 1001d25:	push   0x28
 1001d27:	call   DWORD PTR ds:0x100101c
 1001d2d:	push   eax
 1001d2e:	call   DWORD PTR ds:0x1001008
 1001d34:	test   eax,eax
 1001d36:	jne    0x1001d46
 1001d38:	call   DWORD PTR ds:0x1001054
 1001d3e:	push   eax
 1001d3f:	push   0x1001294
 1001d44:	jmp    0x1001da8
 1001d46:	lea    eax,[ebp-0xc]
 1001d49:	push   eax
 1001d4a:	push   0x1001280
 1001d4f:	push   0x0
 1001d51:	call   DWORD PTR ds:0x1001004
 1001d57:	test   eax,eax
 1001d59:	jne    0x1001d69
 1001d5b:	call   DWORD PTR ds:0x1001054
 1001d61:	push   eax
 1001d62:	push   0x1001258
 1001d67:	jmp    0x1001da8
 1001d69:	mov    eax,DWORD PTR [ebp-0xc]
 1001d6c:	push   0x0
 1001d6e:	mov    DWORD PTR [ebp-0x18],eax
 1001d71:	mov    eax,DWORD PTR [ebp-0x8]
 1001d74:	push   0x0
 1001d76:	push   0x10
 1001d78:	mov    DWORD PTR [ebp-0x14],eax
 1001d7b:	lea    eax,[ebp-0x1c]
 1001d7e:	push   eax
 1001d7f:	push   0x0
 1001d81:	push   DWORD PTR [ebp-0x4]
 1001d84:	mov    DWORD PTR [ebp-0x1c],0x1
 1001d8b:	mov    DWORD PTR [ebp-0x10],0x2
 1001d92:	call   DWORD PTR ds:0x1001000
 1001d98:	test   eax,eax
 1001d9a:	jne    0x1001db4
 1001d9c:	call   DWORD PTR ds:0x1001054
 1001da2:	push   eax
 1001da3:	push   0x1001230
 1001da8:	call   DWORD PTR ds:0x10010b8
 1001dae:	pop    ecx
 1001daf:	pop    ecx
 1001db0:	xor    eax,eax
 1001db2:	leave  
 1001db3:	ret    
 1001db4:	xor    eax,eax
 1001db6:	inc    eax
 1001db7:	leave  
 1001db8:	ret    
 1001db9:	push   esi
 1001dba:	xor    esi,esi
 1001dbc:	push   0x0
 1001dbe:	push   0x0
 1001dc0:	push   esi
 1001dc1:	push   0xfffffffd
 1001dc3:	call   DWORD PTR ds:0x1001074
 1001dc9:	mov    esi,eax
 1001dcb:	test   esi,esi
 1001dcd:	je     0x1001ddc
 1001dcf:	push   DWORD PTR [esp+0xc]
 1001dd3:	push   esi
 1001dd4:	call   DWORD PTR [esp+0x10]
 1001dd8:	test   eax,eax
 1001dda:	jne    0x1001dbc
 1001ddc:	xor    eax,eax
 1001dde:	inc    eax
 1001ddf:	pop    esi
 1001de0:	ret    0x8
 1001de3:	push   esi
 1001de4:	mov    esi,DWORD PTR ds:0x10010bc
 1001dea:	push   edi
 1001deb:	mov    edi,DWORD PTR [esp+0xc]
 1001def:	push   0x2a
 1001df1:	push   edi
 1001df2:	call   esi
 1001df4:	test   eax,eax
 1001df6:	pop    ecx
 1001df7:	pop    ecx
 1001df8:	je     0x1001dff
 1001dfa:	xor    eax,eax
 1001dfc:	inc    eax
 1001dfd:	jmp    0x1001e17
 1001dff:	push   0x3f
 1001e01:	push   edi
 1001e02:	call   esi
 1001e04:	test   eax,eax
 1001e06:	pop    ecx
 1001e07:	pop    ecx
 1001e08:	jne    0x1001dfa
 1001e0a:	push   0x5b
 1001e0c:	push   edi
 1001e0d:	call   esi
 1001e0f:	neg    eax
 1001e11:	pop    ecx
 1001e12:	sbb    eax,eax
 1001e14:	pop    ecx
 1001e15:	neg    eax
 1001e17:	pop    edi
 1001e18:	pop    esi
 1001e19:	ret    0x4
 1001e1c:	push   ebx
 1001e1d:	mov    ebx,DWORD PTR [esp+0x8]
 1001e21:	push   esi
 1001e22:	mov    esi,DWORD PTR [esp+0x10]
 1001e26:	push   edi
 1001e27:	cmp    DWORD PTR [esp+0x18],0x0
 1001e2c:	je     0x1001e6a
 1001e2e:	push   esi
 1001e2f:	call   0x1001de3
 1001e34:	test   eax,eax
 1001e36:	jne    0x1001e6a
 1001e38:	push   esi
 1001e39:	push   ebx
 1001e3a:	call   DWORD PTR ds:0x10010ac
 1001e40:	test   eax,eax
 1001e42:	pop    ecx
 1001e43:	pop    ecx
 1001e44:	je     0x1001e6a
 1001e46:	lea    edx,[eax+0x1]
 1001e49:	mov    cl,BYTE PTR [eax]
 1001e4b:	inc    eax
 1001e4c:	test   cl,cl
 1001e4e:	jne    0x1001e49
 1001e50:	sub    eax,edx
 1001e52:	mov    ecx,esi
 1001e54:	mov    edi,eax
 1001e56:	lea    edx,[ecx+0x1]
 1001e59:	mov    al,BYTE PTR [ecx]
 1001e5b:	inc    ecx
 1001e5c:	test   al,al
 1001e5e:	jne    0x1001e59
 1001e60:	sub    ecx,edx
 1001e62:	cmp    edi,ecx
 1001e64:	je     0x1001f1a
 1001e6a:	movzx  edi,BYTE PTR [esi]
 1001e6d:	inc    esi
 1001e6e:	test   edi,edi
 1001e70:	je     0x1001f1f
 1001e76:	cmp    edi,0x2a
 1001e79:	je     0x1001f0b
 1001e7f:	cmp    edi,0x3f
 1001e82:	je     0x1001ef0
 1001e84:	movzx  eax,BYTE PTR [ebx]
 1001e87:	inc    ebx
 1001e88:	cmp    edi,0x5b
 1001e8b:	je     0x1001ea0
 1001e8d:	push   eax
 1001e8e:	call   DWORD PTR ds:0x10010a8
 1001e94:	cmp    eax,edi
 1001e96:	pop    ecx
 1001e97:	je     0x1001e6a
 1001e99:	xor    eax,eax
 1001e9b:	jmp    0x1001f26
 1001ea0:	test   eax,eax
 1001ea2:	je     0x1001e99
 1001ea4:	push   eax
 1001ea5:	call   DWORD PTR ds:0x10010a8
 1001eab:	pop    ecx
 1001eac:	xor    edx,edx
 1001eae:	jmp    0x1001ed4
 1001eb0:	cmp    ecx,0x5d
 1001eb3:	je     0x1001e99
 1001eb5:	cmp    ecx,0x2d
 1001eb8:	jne    0x1001ece
 1001eba:	movzx  ecx,BYTE PTR [esi]
 1001ebd:	test   ecx,ecx
 1001ebf:	je     0x1001e99
 1001ec1:	cmp    ecx,0x5d
 1001ec4:	je     0x1001e99
 1001ec6:	cmp    eax,edx
 1001ec8:	jl     0x1001ece
 1001eca:	cmp    eax,ecx
 1001ecc:	jle    0x1001ee7
 1001ece:	cmp    eax,ecx
 1001ed0:	mov    edx,ecx
 1001ed2:	je     0x1001ee7
 1001ed4:	movzx  ecx,BYTE PTR [esi]
 1001ed7:	inc    esi
 1001ed8:	test   ecx,ecx
 1001eda:	jne    0x1001eb0
 1001edc:	jmp    0x1001ee7
 1001ede:	cmp    ecx,0x5d
 1001ee1:	je     0x1001e6a
 1001ee3:	movzx  ecx,BYTE PTR [esi]
 1001ee6:	inc    esi
 1001ee7:	test   ecx,ecx
 1001ee9:	jne    0x1001ede
 1001eeb:	jmp    0x1001e6a
 1001ef0:	mov    al,BYTE PTR [ebx]
 1001ef2:	inc    ebx
 1001ef3:	test   al,al
 1001ef5:	jne    0x1001e6a
 1001efb:	jmp    0x1001e99
 1001efd:	push   0x0
 1001eff:	push   esi
 1001f00:	push   ebx
 1001f01:	call   0x1001e1c
 1001f06:	inc    ebx
 1001f07:	test   eax,eax
 1001f09:	jne    0x1001f1a
 1001f0b:	cmp    BYTE PTR [ebx],0x0
 1001f0e:	jne    0x1001efd
 1001f10:	and    DWORD PTR [esp+0x18],0x0
 1001f15:	jmp    0x1001e27
 1001f1a:	xor    eax,eax
 1001f1c:	inc    eax
 1001f1d:	jmp    0x1001f26
 1001f1f:	xor    eax,eax
 1001f21:	cmp    BYTE PTR [ebx],al
 1001f23:	sete   al
 1001f26:	pop    edi
 1001f27:	pop    esi
 1001f28:	pop    ebx
 1001f29:	ret    0xc
 1001f2c:	push   ebp
 1001f2d:	mov    ebp,esp
 1001f2f:	push   ecx
 1001f30:	push   esi
 1001f31:	push   edi
 1001f32:	push   DWORD PTR [ebp+0x8]
 1001f35:	xor    edi,edi
 1001f37:	push   edi
 1001f38:	push   0x1f0fff
 1001f3d:	call   DWORD PTR ds:0x1001044
 1001f43:	mov    esi,eax
 1001f45:	cmp    esi,edi
 1001f47:	jne    0x1001f4d
 1001f49:	xor    eax,eax
 1001f4b:	jmp    0x1001f77
 1001f4d:	lea    eax,[ebp+0x8]
 1001f50:	push   eax
 1001f51:	lea    eax,[ebp-0x4]
 1001f54:	push   eax
 1001f55:	push   esi
 1001f56:	call   DWORD PTR ds:0x100103c
 1001f5c:	test   eax,eax
 1001f5e:	je     0x1001f6e
 1001f60:	push   0xffffffff
 1001f62:	push   0xffffffff
 1001f64:	push   esi
 1001f65:	call   DWORD PTR ds:0x1001040
 1001f6b:	xor    edi,edi
 1001f6d:	inc    edi
 1001f6e:	push   esi
 1001f6f:	call   DWORD PTR ds:0x1001048
 1001f75:	mov    eax,edi
 1001f77:	pop    edi
 1001f78:	pop    esi
 1001f79:	leave  
 1001f7a:	ret    0x4
 1001f7d:	push   ebp
 1001f7e:	mov    ebp,esp
 1001f80:	sub    esp,0x24
 1001f83:	or     DWORD PTR [ebp-0x18],0xffffffff
 1001f87:	or     DWORD PTR [ebp-0x14],0xffffffff
 1001f8b:	push   0x24
 1001f8d:	lea    eax,[ebp-0x24]
 1001f90:	push   eax
 1001f91:	push   0x15
 1001f93:	call   DWORD PTR ds:0x1001110
 1001f99:	xor    ecx,ecx
 1001f9b:	test   eax,eax
 1001f9d:	setge  cl
 1001fa0:	mov    eax,ecx
 1001fa2:	leave  
 1001fa3:	ret    
 1001fa4:	push   0x9c
 1001fa9:	push   0x10012b8
 1001fae:	call   0x1001a30
 1001fb3:	mov    eax,ds:0x100301c
 1001fb8:	mov    DWORD PTR [ebp-0x1c],eax
 1001fbb:	xor    esi,esi
 1001fbd:	mov    DWORD PTR [ebp-0xa4],esi
 1001fc3:	mov    edi,DWORD PTR [ebp+0xc]
 1001fc6:	mov    ebx,DWORD PTR [edi]
 1001fc8:	mov    eax,DWORD PTR [edi+0x4]
 1001fcb:	mov    DWORD PTR [ebp-0xa8],eax
 1001fd1:	mov    DWORD PTR [ebp-0x4],esi
 1001fd4:	lea    eax,[ebp-0xa4]
 1001fda:	push   eax
 1001fdb:	push   DWORD PTR [ebp+0x8]
 1001fde:	call   DWORD PTR ds:0x1001064
 1001fe4:	test   eax,eax
 1001fe6:	je     0x10020a4
 1001fec:	push   0x4
 1001fee:	push   DWORD PTR [ebp+0x8]
 1001ff1:	call   DWORD PTR ds:0x1001068
 1001ff7:	test   eax,eax
 1001ff9:	jne    0x10020a4
 1001fff:	push   0xfffffff0
 1002001:	push   DWORD PTR [ebp+0x8]
 1002004:	call   DWORD PTR ds:0x100106c
 100200a:	test   eax,0x10000000
 100200f:	jne    0x100201a
 1002011:	cmp    DWORD PTR [edi+0x10],esi
 1002014:	jne    0x10020a4
 100201a:	mov    DWORD PTR [ebp-0xa0],esi
 1002020:	mov    eax,DWORD PTR [ebp-0xa0]
 1002026:	cmp    eax,DWORD PTR [ebp-0xa8]
 100202c:	jae    0x10020a4
 100202e:	imul   eax,eax,0xb40
 1002034:	lea    esi,[eax+ebx*1]
 1002037:	mov    eax,DWORD PTR [esi]
 1002039:	cmp    eax,DWORD PTR [ebp-0xa4]
 100203f:	jne    0x1002095
 1002041:	cmp    DWORD PTR [edi+0x10],0x0
 1002045:	jne    0x100204d
 1002047:	cmp    DWORD PTR [esi+0x14],0x0
 100204b:	jne    0x1002095
 100204d:	mov    eax,DWORD PTR [ebp+0x8]
 1002050:	mov    DWORD PTR [esi+0x14],eax
 1002053:	mov    eax,DWORD PTR [edi+0x8]
 1002056:	mov    DWORD PTR [esi+0x18],eax
 1002059:	mov    eax,DWORD PTR [edi+0xc]
 100205c:	mov    DWORD PTR [esi+0x1c],eax
 100205f:	mov    edi,0x80
 1002064:	push   edi
 1002065:	lea    eax,[ebp-0x9c]
 100206b:	push   eax
 100206c:	push   DWORD PTR [esi+0x14]
 100206f:	call   DWORD PTR ds:0x1001070
 1002075:	test   eax,eax
 1002077:	je     0x10020a4
 1002079:	lea    eax,[ebp-0x9c]
 100207f:	push   eax
 1002080:	push   edi
 1002081:	add    esi,0xa0
 1002087:	push   esi
 1002088:	call   0x10014b4
 100208d:	mov    DWORD PTR [ebp-0xac],eax
 1002093:	jmp    0x10020a4
 1002095:	inc    DWORD PTR [ebp-0xa0]
 100209b:	jmp    0x1002020
 100209d:	xor    eax,eax
 100209f:	inc    eax
 10020a0:	ret    
 10020a1:	mov    esp,DWORD PTR [ebp-0x18]
 10020a4:	or     DWORD PTR [ebp-0x4],0xffffffff
 10020a8:	xor    eax,eax
 10020aa:	inc    eax
 10020ab:	mov    ecx,DWORD PTR [ebp-0x1c]
 10020ae:	call   0x10017eb
 10020b3:	call   0x1001a6b
 10020b8:	ret    0x8
 10020bb:	push   ecx
 10020bc:	push   ebp
 10020bd:	push   0x2000000
 10020c2:	push   0x0
 10020c4:	push   0x0
 10020c6:	push   DWORD PTR [esp+0x18]
 10020ca:	call   DWORD PTR ds:0x1001088
 10020d0:	mov    ebp,eax
 10020d2:	test   ebp,ebp
 10020d4:	je     0x100214c
 10020d6:	push   ebx
 10020d7:	push   esi
 10020d8:	push   edi
 10020d9:	call   DWORD PTR ds:0x1001018
 10020df:	push   eax
 10020e0:	call   DWORD PTR ds:0x100107c
 10020e6:	push   ebp
 10020e7:	mov    DWORD PTR [esp+0x14],eax
 10020eb:	call   DWORD PTR ds:0x100108c
 10020f1:	push   DWORD PTR [esp+0x18]
 10020f5:	call   DWORD PTR ds:0x10010b0
 10020fb:	mov    esi,DWORD PTR [esp+0x20]
 10020ff:	mov    ebx,DWORD PTR ds:0x1001060
 1002105:	pop    ecx
 1002106:	push   esi
 1002107:	mov    edi,0x1001fa4
 100210c:	push   edi
 100210d:	mov    DWORD PTR [esi+0xc],eax
 1002110:	mov    DWORD PTR [esi+0x10],0x1
 1002117:	call   ebx
 1002119:	push   esi
 100211a:	push   edi
 100211b:	call   0x1001db9
 1002120:	and    DWORD PTR [esi+0x10],0x0
 1002124:	push   esi
 1002125:	push   edi
 1002126:	call   ebx
 1002128:	push   esi
 1002129:	push   edi
 100212a:	call   0x1001db9
 100212f:	cmp    ebp,DWORD PTR [esp+0x10]
 1002133:	pop    edi
 1002134:	pop    esi
 1002135:	pop    ebx
 1002136:	je     0x1002149
 1002138:	push   DWORD PTR [esp+0x4]
 100213c:	call   DWORD PTR ds:0x100108c
 1002142:	push   ebp
 1002143:	call   DWORD PTR ds:0x1001090
 1002149:	xor    eax,eax
 100214b:	inc    eax
 100214c:	pop    ebp
 100214d:	pop    ecx
 100214e:	ret    0x8
 1002151:	push   edi
 1002152:	push   0x2000000
 1002157:	push   0x0
 1002159:	push   DWORD PTR [esp+0x10]
 100215d:	call   DWORD PTR ds:0x1001080
 1002163:	mov    edi,eax
 1002165:	test   edi,edi
 1002167:	je     0x10021ae
 1002169:	push   ebx
 100216a:	push   esi
 100216b:	call   DWORD PTR ds:0x1001078
 1002171:	mov    esi,DWORD PTR ds:0x1001084
 1002177:	push   edi
 1002178:	mov    ebx,eax
 100217a:	call   esi
 100217c:	push   DWORD PTR [esp+0x10]
 1002180:	call   DWORD PTR ds:0x10010b0
 1002186:	pop    ecx
 1002187:	mov    ecx,DWORD PTR [esp+0x14]
 100218b:	push   ecx
 100218c:	push   0x10020bb
 1002191:	push   edi
 1002192:	mov    DWORD PTR [ecx+0x8],eax
 1002195:	call   DWORD PTR ds:0x100105c
 100219b:	cmp    edi,ebx
 100219d:	je     0x10021a9
 100219f:	push   ebx
 10021a0:	call   esi
 10021a2:	push   edi
 10021a3:	call   DWORD PTR ds:0x1001094
 10021a9:	xor    eax,eax
 10021ab:	pop    esi
 10021ac:	inc    eax
 10021ad:	pop    ebx
 10021ae:	pop    edi
 10021af:	ret    0x8
 10021b2:	push   DWORD PTR [esp+0x4]
 10021b6:	push   0x1002151
 10021bb:	call   DWORD PTR ds:0x1001098
 10021c1:	ret    0x4
 10021c4:	dec    esp
 10021c5:	and    al,BYTE PTR [eax]
	...
 10021cf:	add    BYTE PTR [edx+0x24],cl
 10021d2:	add    BYTE PTR [eax],al
 10021d4:	adc    BYTE PTR [eax],dl
 10021d6:	add    BYTE PTR [eax],al
 10021d8:	fsub   QWORD PTR [edx]
	...
 10021e2:	add    BYTE PTR [eax],al
 10021e4:	dec    esp
 10021e5:	and    eax,0x10a00000
 10021ea:	add    BYTE PTR [eax],al
 10021ec:	cmp    al,0x22
	...
 10021f6:	add    BYTE PTR [eax],al
 10021f8:	jb     0x1002220
 10021fa:	add    BYTE PTR [eax],al
 10021fc:	add    BYTE PTR [eax],dl
 10021fe:	add    BYTE PTR [eax],al
 1002200:	cwde   
 1002201:	and    al,BYTE PTR [eax]
	...
 100220b:	add    BYTE PTR [eax+0x5c000027],bh
 1002211:	adc    BYTE PTR [eax],al
 1002213:	add    BYTE PTR [ebx+eiz*1+0x0],cl
	...
 100221f:	add    BYTE PTR [edx],bl
 1002221:	sub    BYTE PTR [eax],al
 1002223:	add    BYTE PTR [eax],dl
 1002225:	adc    DWORD PTR [eax],eax
	...
 100223b:	add    BYTE PTR [esi],ch
 100223d:	add    BYTE PTR es:[eax],al
 1002240:	inc    esi
 1002241:	add    BYTE PTR es:[eax],al
 1002244:	pop    esi
 1002245:	add    BYTE PTR es:[eax],al
 1002248:	add    BYTE PTR [eax],al
 100224a:	add    BYTE PTR [eax],al
 100224c:	aam    0x23
 100224e:	add    BYTE PTR [eax],al
 1002250:	jmp    0x23:0xbe000023
 1002257:	add    BYTE PTR [eax],bl
 1002259:	and    al,0x0
 100225b:	add    BYTE PTR [esp],ch
 100225e:	add    BYTE PTR [eax],al
 1002260:	scas   al,BYTE PTR es:[edi]
 1002261:	and    eax,DWORD PTR [eax]
 1002263:	add    BYTE PTR [ebx+eiz*1+0x23800000],dl
 100226a:	add    BYTE PTR [eax],al
 100226c:	outs   dx,BYTE PTR ds:[esi]
 100226d:	and    eax,DWORD PTR [eax]
 100226f:	add    BYTE PTR [esp],al
 1002272:	add    BYTE PTR [eax],al
 1002274:	pop    esp
 1002275:	and    eax,DWORD PTR [eax]
 1002277:	add    ah,cl
 1002279:	and    eax,0x25b00000
 100227e:	add    BYTE PTR [eax],al
 1002280:	mov    ds:0x94000025,al
 1002285:	and    eax,0x25840000
 100228a:	add    BYTE PTR [eax],al
 100228c:	jbe    0x10022b3
 100228e:	add    BYTE PTR [eax],al
 1002290:	and    ax,0x0
 1002294:	add    BYTE PTR [eax],al
 1002296:	add    BYTE PTR [eax],al
 1002298:	xchg   edx,eax
 1002299:	daa    
 100229a:	add    BYTE PTR [eax],al
 100229c:	test   BYTE PTR [edi],ah
 100229e:	add    BYTE PTR [eax],al
 10022a0:	push   0x5c000027
 10022a5:	daa    
 10022a6:	add    BYTE PTR [eax],al
 10022a8:	dec    edx
 10022a9:	daa    
 10022aa:	add    BYTE PTR [eax],al
 10022ac:	cmp    BYTE PTR [edi],ah
 10022ae:	add    BYTE PTR [eax],al
 10022b0:	sub    BYTE PTR [edi],ah
 10022b2:	add    BYTE PTR [eax],al
 10022b4:	push   cs
 10022b5:	daa    
 10022b6:	add    BYTE PTR [eax],al
 10022b8:	cli    
 10022b9:	add    BYTE PTR es:[eax],al
 10022bc:	in     al,0x26
 10022be:	add    BYTE PTR [eax],al
 10022c0:	retf   0x26
 10022c3:	add    BYTE PTR [edx-0x59ffffda],bh
 10022c9:	add    BYTE PTR es:[eax],al
 10022cc:	xchg   esi,eax
 10022cd:	add    BYTE PTR es:[eax],al
 10022d0:	and    BYTE PTR [esi],0x0
 10022d3:	add    BYTE PTR [edx+0x27],ah
 10022d9:	add    BYTE PTR [eax],al
 10022db:	add    ah,bh
 10022dd:	and    eax,0x26060000
 10022e2:	add    BYTE PTR [eax],al
 10022e4:	adc    BYTE PTR [esi],ah
 10022e6:	add    BYTE PTR [eax],al
 10022e8:	sbb    ah,BYTE PTR [esi]
 10022ea:	add    BYTE PTR [eax],al
 10022ec:	and    al,0x26
 10022ee:	add    BYTE PTR [eax],al
 10022f0:	repnz and eax,0x24800000
 10022f6:	add    BYTE PTR [eax],al
 10022f8:	jbe    0x100231e
 10022fa:	add    BYTE PTR [eax],al
 10022fc:	ins    BYTE PTR es:[edi],dx
 10022fd:	and    al,0x0
 10022ff:	add    BYTE PTR [edx+0x24],ah
 1002302:	add    BYTE PTR [eax],al
 1002304:	pop    eax
 1002305:	and    al,0x0
 1002307:	add    al,ch
 1002309:	and    eax,0x24940000
 100230e:	add    BYTE PTR [eax],al
 1002310:	pushf  
 1002311:	and    al,0x0
 1002313:	add    BYTE PTR [edx-0x4bffffdc],ch
 1002319:	and    al,0x0
 100231b:	add    BYTE PTR [esp+0x24c80000],bh
 1002322:	add    BYTE PTR [eax],al
 1002324:	fsub   DWORD PTR [eax+eax*1]
 1002327:	add    ah,ah
 1002329:	and    al,0x0
 100232b:	add    al,bh
 100232d:	and    al,0x0
 100232f:	add    BYTE PTR [eax],cl
 1002331:	and    eax,0x25580000
 1002336:	add    BYTE PTR [eax],al
 1002338:	es and eax,0x25380000
 100233e:	add    BYTE PTR [eax],al
 1002340:	mov    ah,BYTE PTR [eax+eax*1]
 1002343:	add    BYTE PTR [eax],bl
 1002345:	and    eax,0x0
 100234a:	add    BYTE PTR [eax],al
 100234c:	add    BYTE PTR [eax],ch
 100234e:	add    BYTE PTR [eax],al
 1002350:	les    esp,FWORD PTR [edi]
 1002352:	add    BYTE PTR [eax],al
 1002354:	in     al,0x27
 1002356:	add    BYTE PTR [eax],al
 1002358:	add    BYTE PTR [eax],al
 100235a:	add    BYTE PTR [eax],al
 100235c:	or     BYTE PTR [ecx],al
 100235e:	inc    edi
 100235f:	gs je  0x10023a5
 1002362:	outs   dx,DWORD PTR ds:[esi]
 1002363:	ins    DWORD PTR es:[edi],dx
 1002364:	ins    DWORD PTR es:[edi],dx
 1002365:	popa   
 1002366:	outs   dx,BYTE PTR ds:[esi]
 1002367:	fs dec esp
 1002369:	imul   ebp,DWORD PTR [esi+0x65],0x1980041
 1002370:	inc    edi
 1002371:	gs je  0x10023c4
 1002374:	jb     0x10023e5
 1002376:	arpl   WORD PTR [ecx+0x64],ax
 1002379:	fs jb  0x10023e1
 100237c:	jae    0x10023f1
 100237e:	add    BYTE PTR [eax],al
 1002380:	ja     0x1002383
 1002382:	inc    edi
 1002383:	gs je  0x10023d3
 1002386:	outs   dx,DWORD PTR ds:[esi]
 1002387:	fs jne 0x10023f6
 100238a:	gs dec eax
 100238c:	popa   
 100238d:	outs   dx,BYTE PTR ds:[esi]
 100238e:	fs ins BYTE PTR es:[edi],dx
 1002390:	gs inc ecx
 1002392:	add    BYTE PTR [eax],al
 1002394:	cdq    
 1002395:	add    dl,BYTE PTR [ecx+0x75]
 1002398:	gs jb  0x1002414
 100239b:	push   eax
 100239c:	gs jb  0x1002405
 100239f:	outs   dx,DWORD PTR ds:[esi]
 10023a0:	jb     0x100240f
 10023a2:	popa   
 10023a3:	outs   dx,BYTE PTR ds:[esi]
 10023a4:	arpl   WORD PTR [ebp+0x43],sp
 10023a7:	outs   dx,DWORD PTR ds:[esi]
 10023a8:	jne    0x1002418
 10023aa:	je     0x1002411
 10023ac:	jb     0x10023ae
 10023ae:	aad    0x1
 10023b0:	inc    edi
 10023b1:	gs je  0x1002408
 10023b4:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
 10023bb:	je     0x10023bd
 10023bd:	add    BYTE PTR [esi],bh
 10023bf:	add    DWORD PTR [edi+0x65],eax
 10023c2:	je     0x1002407
 10023c4:	jne    0x1002438
 10023c6:	jb     0x100242d
 10023c8:	outs   dx,BYTE PTR ds:[esi]
 10023c9:	je     0x100241f
 10023cb:	push   0x64616572
 10023d0:	dec    ecx
 10023d1:	add    BYTE PTR fs:[eax],al
 10023d4:	cmp    eax,DWORD PTR [ecx]
 10023d6:	inc    edi
 10023d7:	gs je  0x100241d
 10023da:	jne    0x100244e
 10023dc:	jb     0x1002443
 10023de:	outs   dx,BYTE PTR ds:[esi]
 10023df:	je     0x1002431
 10023e1:	jb     0x1002452
 10023e3:	arpl   WORD PTR [ebp+0x73],sp
 10023e6:	jae    0x1002431
 10023e8:	fs add al,al
 10023eb:	add    DWORD PTR [edi+0x65],eax
 10023ee:	je     0x1002443
 10023f0:	jns    0x1002465
 10023f2:	je     0x1002459
 10023f4:	ins    DWORD PTR es:[edi],dx
 10023f5:	push   esp
 10023f6:	imul   ebp,DWORD PTR [ebp+0x65],0x69467341
 10023fd:	ins    BYTE PTR es:[edi],dx
 10023fe:	gs push esp
 1002400:	imul   ebp,DWORD PTR [ebp+0x65],0x54035100
 1002407:	gs jb  0x1002477
 100240a:	imul   ebp,DWORD PTR [esi+0x61],0x72506574
 1002411:	outs   dx,DWORD PTR ds:[esi]
 1002412:	arpl   WORD PTR [ebp+0x73],sp
 1002415:	jae    0x1002417
 1002417:	add    BYTE PTR [edx],bh
 1002419:	add    DWORD PTR [edi+0x65],eax
 100241c:	je     0x1002461
 100241e:	jne    0x1002492
 1002420:	jb     0x1002487
 1002422:	outs   dx,BYTE PTR ds:[esi]
 1002423:	je     0x1002475
 1002425:	jb     0x1002496
 1002427:	arpl   WORD PTR [ebp+0x73],sp
 100242a:	jae    0x100242c
 100242c:	cmp    eax,0x74655303
 1002431:	push   ebp
 1002432:	outs   dx,BYTE PTR ds:[esi]
 1002433:	push   0x6c646e61
 1002438:	gs fs inc ebp
 100243b:	js     0x10024a0
 100243d:	gs jo  0x10024b4
 1002440:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
 1002447:	gs jb  0x100244a
 100244a:	dec    ebx
 100244b:	inc    ebp
 100244c:	push   edx
 100244d:	dec    esi
 100244e:	inc    ebp
 100244f:	dec    esp
 1002450:	xor    esi,DWORD PTR [edx]
 1002452:	cs fs ins BYTE PTR es:[edi],dx
 1002455:	ins    BYTE PTR es:[edi],dx
 1002456:	add    BYTE PTR [eax],al
 1002458:	or     eax,0x74735f02
 100245d:	jb     0x10024d4
 100245f:	jo     0x10024d3
 1002461:	add    ah,al
 1002463:	add    ch,BYTE PTR [ecx+0x73]
 1002466:	imul   esp,DWORD PTR fs:[edi+0x69],0x2ca0074
 100246e:	imul   esi,DWORD PTR [ebx+0x73],0x65636170
 1002475:	add    BYTE PTR [eax],cl
 1002477:	add    esi,DWORD PTR [ebx+0x74]
 100247a:	jb     0x10024df
 100247c:	push   0xef000072
 1002481:	add    dh,BYTE PTR [eax+0x72]
 1002484:	imul   ebp,DWORD PTR [esi+0x74],0xca000066
 100248b:	add    BYTE PTR [edi+0x63],bl
 100248e:	pop    edi
 100248f:	gs js  0x10024fb
 1002492:	je     0x1002494
 1002494:	sti    
 1002495:	add    BYTE PTR [edi+0x65],bl
 1002498:	js     0x1002503
 100249a:	je     0x100249c
 100249c:	dec    esi
 100249d:	add    BYTE PTR [edi+0x58],bl
 10024a0:	arpl   WORD PTR [eax+0x74],si
 10024a3:	inc    esi
 10024a4:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0xcd0072
 10024ac:	pop    edi
 10024ad:	arpl   WORD PTR [ebp+0x78],sp
 10024b0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7865029a
 10024b8:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x5f5f0071
 10024c0:	imul   ebp,DWORD PTR [esi+0x69],0x766e6574
 10024c7:	add    BYTE PTR [eax+0x0],dh
 10024ca:	pop    edi
 10024cb:	pop    edi
 10024cc:	addr16 gs je 0x100253d
 10024d0:	popa   
 10024d1:	imul   ebp,DWORD PTR [esi+0x61],0x736772
 10024d8:	inc    eax
 10024d9:	add    DWORD PTR [edi+0x69],ebx
 10024dc:	outs   dx,BYTE PTR ds:[esi]
 10024dd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
 10024e5:	add    BYTE PTR [edi+0x5f],bl
 10024e8:	jae    0x100254f
 10024ea:	je     0x1002561
 10024ec:	jae    0x1002553
 10024ee:	jb     0x100255d
 10024f0:	popa   
 10024f1:	je     0x100255b
 10024f3:	gs jb  0x1002568
 10024f6:	add    BYTE PTR [eax],al
 10024f8:	mov    ebx,0x64615f00
 10024fd:	push   0x75
 10024ff:	jae    0x1002575
 1002501:	pop    edi
 1002502:	imul   si,WORD PTR fs:[esi+0x0],0x8300
 1002509:	add    BYTE PTR [edi+0x5f],bl
 100250c:	jo     0x100256d
 100250e:	pop    edi
 100250f:	arpl   WORD PTR [edi+0x6d],bp
 1002512:	ins    DWORD PTR es:[edi],dx
 1002513:	outs   dx,DWORD PTR ds:[esi]
 1002514:	fs add BYTE PTR gs:[eax],al
 1002518:	mov    BYTE PTR [eax],al
 100251a:	pop    edi
 100251b:	pop    edi
 100251c:	jo     0x100257d
 100251e:	pop    edi
 100251f:	ins    WORD PTR es:[edi],dx
 1002521:	outs   dx,DWORD PTR ds:[esi]
 1002522:	fs add BYTE PTR gs:[eax],al
 1002526:	pushf  
 1002527:	add    BYTE PTR [edi+0x5f],bl
 100252a:	jae    0x1002591
 100252c:	je     0x100258d
 100252e:	popa   
 100252f:	jo     0x10025a1
 1002531:	pop    edi
 1002532:	je     0x10025ad
 1002534:	jo     0x100259b
 1002536:	add    BYTE PTR [eax],al
 1002538:	repnz add BYTE PTR [edi+0x65],bl
 100253c:	js     0x10025a1
 100253e:	gs jo  0x10025b5
 1002541:	pop    edi
 1002542:	push   0x6c646e61
 1002547:	gs jb  0x100257d
 100254a:	add    BYTE PTR [eax],al
 100254c:	ins    DWORD PTR es:[edi],dx
 100254d:	jae    0x10025c5
 100254f:	arpl   WORD PTR [edx+0x74],si
 1002552:	cs fs ins BYTE PTR es:[edi],dx
 1002555:	ins    BYTE PTR es:[edi],dx
 1002556:	add    BYTE PTR [eax],al
 1002558:	fild   DWORD PTR [eax]
 100255a:	pop    edi
 100255b:	arpl   WORD PTR [edi+0x6e],bp
 100255e:	je     0x10025d2
 1002560:	outs   dx,DWORD PTR ds:[esi]
 1002561:	ins    BYTE PTR es:[edi],dx
 1002562:	data16 jo 0x1002565
 1002565:	add    BYTE PTR [ecx+0x1],ch
 1002568:	inc    edi
 1002569:	gs je  0x10025b8
 100256c:	popa   
 100256d:	jae    0x10025e3
 100256f:	inc    ebp
 1002570:	jb     0x10025e4
 1002572:	outs   dx,DWORD PTR ds:[esi]
 1002573:	jb     0x1002575
 1002575:	add    BYTE PTR [eax+0x3],bh
 1002578:	push   esi
 1002579:	imul   esi,DWORD PTR [edx+0x74],0x466c6175
 1002580:	jb     0x10025e7
 1002582:	add    BYTE PTR gs:[ebp+0x3],dh
 1002586:	push   esi
 1002587:	imul   esi,DWORD PTR [edx+0x74],0x416c6175
 100258e:	ins    BYTE PTR es:[edi],dx
 100258f:	ins    BYTE PTR es:[edi],dx
 1002590:	outs   dx,DWORD PTR ds:[esi]
 1002591:	arpl   WORD PTR [eax],ax
 1002593:	add    BYTE PTR [esi],ch
 1002595:	add    BYTE PTR [ebx+0x6c],al
 1002598:	outs   dx,DWORD PTR ds:[esi]
 1002599:	jae    0x1002600
 100259b:	dec    eax
 100259c:	popa   
 100259d:	outs   dx,BYTE PTR ds:[esi]
 100259e:	fs ins BYTE PTR es:[edi],dx
 10025a0:	add    BYTE PTR gs:[edx+eax*1+0x4f],bh
 10025a5:	jo     0x100260c
 10025a7:	outs   dx,BYTE PTR ds:[esi]
 10025a8:	push   eax
 10025a9:	jb     0x100261a
 10025ab:	arpl   WORD PTR [ebp+0x73],sp
 10025ae:	jae    0x10025b0
 10025b0:	sub    al,BYTE PTR [ebx]
 10025b2:	push   ebx
 10025b3:	gs je  0x1002606
 10025b6:	jb     0x1002627
 10025b8:	arpl   WORD PTR [ebp+0x73],sp
 10025bb:	jae    0x1002614
 10025bd:	outs   dx,DWORD PTR ds:[esi]
 10025be:	jb     0x100262b
 10025c0:	imul   ebp,DWORD PTR [esi+0x67],0x53746553
 10025c7:	imul   edi,DWORD PTR [edx+0x65],0x1a40000
 10025ce:	inc    edi
 10025cf:	gs je  0x1002622
 10025d2:	jb     0x1002643
 10025d4:	arpl   WORD PTR [ebp+0x73],sp
 10025d7:	jae    0x1002630
 10025d9:	outs   dx,DWORD PTR ds:[esi]
 10025da:	jb     0x1002647
 10025dc:	imul   ebp,DWORD PTR [esi+0x67],0x53746553
 10025e3:	imul   edi,DWORD PTR [edx+0x65],0x2e20000
 10025ea:	ins    DWORD PTR es:[edi],dx
 10025eb:	popa   
 10025ec:	ins    BYTE PTR es:[edi],dx
 10025ed:	ins    BYTE PTR es:[edi],dx
 10025ee:	outs   dx,DWORD PTR ds:[esi]
 10025ef:	arpl   WORD PTR [eax],ax
 10025f1:	add    BYTE PTR [eax],dl
 10025f3:	add    esi,DWORD PTR [ebx+0x74]
 10025f6:	jb     0x1002666
 10025f8:	arpl   WORD PTR [ecx+0x74],sp
 10025fb:	add    BYTE PTR [edx],dl
 10025fd:	add    esi,DWORD PTR [ebx+0x74]
 1002600:	jb     0x1002670
 1002602:	arpl   WORD PTR [eax+0x79],si
 1002605:	add    BYTE PTR [ebx+eax*1],dl
 1002608:	jae    0x100267e
 100260a:	jb     0x100267e
 100260c:	arpl   WORD PTR [eax+0x72],bp
 100260f:	add    BYTE PTR ds:0x756f7403,ah
 1002615:	jo     0x1002687
 1002617:	gs jb  0x100261a
 100261a:	push   ss
 100261b:	add    esi,DWORD PTR [ebx+0x74]
 100261e:	jb     0x1002693
 1002620:	je     0x1002694
 1002622:	add    BYTE PTR [eax],al
 1002624:	inc    DWORD PTR [ecx]
 1002626:	pop    edi
 1002627:	jae    0x100269d
 1002629:	jb     0x100268f
 100262b:	jne    0x100269d
 100262d:	add    BYTE PTR [eax+eax*1],bl
 1002630:	inc    ecx
 1002631:	fs push 0x75
 1002634:	jae    0x10026aa
 1002636:	push   esp
 1002637:	outs   dx,DWORD PTR ds:[esi]
 1002638:	imul   esp,DWORD PTR [ebp+0x6e],0x50
 100263c:	jb     0x10026a7
 100263e:	jbe    0x10026a9
 1002640:	ins    BYTE PTR es:[edi],dx
 1002641:	gs addr16 gs jae 0x1002646
 1002646:	dec    ebp
 1002647:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
 100264b:	imul   esi,DWORD PTR [ebp+0x70],0x50
 100264f:	jb     0x10026ba
 1002651:	jbe    0x10026bc
 1002653:	ins    BYTE PTR es:[edi],dx
 1002654:	gs addr16 gs push esi
 1002658:	popa   
 1002659:	ins    BYTE PTR es:[edi],dx
 100265a:	jne    0x10026c1
 100265c:	inc    ecx
 100265d:	add    BYTE PTR [edx+0x65704f01],ch
 1002663:	outs   dx,BYTE PTR ds:[esi]
 1002664:	push   eax
 1002665:	jb     0x10026d6
 1002667:	arpl   WORD PTR [ebp+0x73],sp
 100266a:	jae    0x10026c0
 100266c:	outs   dx,DWORD PTR ds:[esi]
 100266d:	imul   esp,DWORD PTR [ebp+0x6e],0x0
 1002671:	add    BYTE PTR [ecx+0x44],al
 1002674:	push   esi
 1002675:	inc    ecx
 1002676:	push   eax
 1002677:	dec    ecx
 1002678:	xor    esi,DWORD PTR [edx]
 100267a:	cs fs ins BYTE PTR es:[edi],dx
 100267d:	ins    BYTE PTR es:[edi],dx
 100267e:	add    BYTE PTR [eax],al
 1002680:	inc    ebp
 1002681:	add    BYTE PTR [ebx+0x6c],al
 1002684:	outs   dx,DWORD PTR ds:[esi]
 1002685:	jae    0x10026ec
 1002687:	push   edi
 1002688:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
 100268f:	popa   
 1002690:	je     0x10026fb
 1002692:	outs   dx,DWORD PTR ds:[esi]
 1002693:	outs   dx,BYTE PTR ds:[esi]
 1002694:	add    BYTE PTR [eax],al
 1002696:	inc    ebx
 1002697:	add    BYTE PTR [ebx+0x6c],al
 100269a:	outs   dx,DWORD PTR ds:[esi]
 100269b:	jae    0x1002702
 100269d:	inc    esp
 100269e:	gs jae 0x100270c
 10026a1:	je     0x1002712
 10026a3:	jo     0x10026a5
 10026a5:	add    BYTE PTR [eax+0x2],bh
 10026a8:	push   ebx
 10026a9:	gs je  0x1002700
 10026ac:	push   0x64616572
 10026b1:	inc    esp
 10026b2:	gs jae 0x1002720
 10026b5:	je     0x1002726
 10026b7:	jo     0x10026b9
 10026b9:	add    dh,dh
 10026bb:	add    DWORD PTR [edi+0x70],ecx
 10026be:	outs   dx,BYTE PTR gs:[esi]
 10026c0:	inc    esp
 10026c1:	gs jae 0x100272f
 10026c4:	je     0x1002735
 10026c6:	jo     0x1002709
 10026c8:	add    BYTE PTR [eax],al
 10026ca:	add    dl,BYTE PTR [bp+di+0x65]
 10026ce:	je     0x1002720
 10026d0:	jb     0x1002741
 10026d2:	arpl   WORD PTR [ebp+0x73],sp
 10026d5:	jae    0x100272e
 10026d7:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
 10026de:	popa   
 10026df:	je     0x100274a
 10026e1:	outs   dx,DWORD PTR ds:[esi]
 10026e2:	outs   dx,BYTE PTR ds:[esi]
 10026e3:	add    dl,bh
 10026e5:	add    DWORD PTR [edi+0x70],ecx
 10026e8:	outs   dx,BYTE PTR gs:[esi]
 10026ea:	push   edi
 10026eb:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
 10026f2:	popa   
 10026f3:	je     0x100275e
 10026f5:	outs   dx,DWORD PTR ds:[esi]
 10026f6:	outs   dx,BYTE PTR ds:[esi]
 10026f7:	inc    ecx
 10026f8:	add    BYTE PTR [eax],al
 10026fa:	popa   
 10026fb:	add    DWORD PTR [edi+0x65],eax
 10026fe:	je     0x1002754
 1002700:	push   0x64616572
 1002705:	inc    esp
 1002706:	gs jae 0x1002774
 1002709:	je     0x100277a
 100270b:	jo     0x100270d
 100270d:	add    BYTE PTR [eax+0x1],cl
 1002710:	inc    edi
 1002711:	gs je  0x1002764
 1002714:	jb     0x1002785
 1002716:	arpl   WORD PTR [ebp+0x73],sp
 1002719:	jae    0x1002772
 100271b:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
 1002722:	popa   
 1002723:	je     0x100278e
 1002725:	outs   dx,DWORD PTR ds:[esi]
 1002726:	outs   dx,BYTE PTR ds:[esi]
 1002727:	add    ah,ah
 1002729:	add    BYTE PTR [esi+0x69],al
 100272c:	outs   dx,BYTE PTR ds:[esi]
 100272d:	fs push edi
 100272f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
 1002736:	inc    ecx
 1002737:	add    BYTE PTR [edi+0x1],dh
 100273a:	inc    edi
 100273b:	gs je  0x1002795
 100273e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
 1002745:	js     0x10027bb
 1002747:	inc    ecx
 1002748:	add    BYTE PTR [eax],al
 100274a:	outs   dx,BYTE PTR ds:[esi]
 100274b:	add    DWORD PTR [edi+0x65],eax
 100274e:	je     0x10027a7
 1002750:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
 1002757:	outs   dx,BYTE PTR ds:[esi]
 1002758:	addr16 inc ecx
 100275a:	add    BYTE PTR [eax],al
 100275c:	push   0x1
 100275e:	inc    edi
 100275f:	gs je  0x10027b9
 1002762:	imul   ebp,DWORD PTR [esi+0x64],0x7b00776f
 1002769:	add    DWORD PTR [edi+0x65],eax
 100276c:	je     0x10027c5
 100276e:	imul   ebp,DWORD PTR [esi+0x64],0x6854776f
 1002775:	jb     0x10027dc
 1002777:	popa   
 1002778:	fs push eax
 100277a:	jb     0x10027eb
 100277c:	arpl   WORD PTR [ebp+0x73],sp
 100277f:	jae    0x10027ca
 1002781:	add    BYTE PTR fs:[eax],al
 1002784:	fiadd  WORD PTR [eax]
 1002786:	inc    ebp
 1002787:	outs   dx,BYTE PTR ds:[esi]
 1002788:	jne    0x10027f7
 100278a:	push   edi
 100278b:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
 1002792:	into   
 1002793:	add    BYTE PTR [ebp+0x6e],al
 1002796:	jne    0x1002805
 1002798:	inc    esp
 1002799:	gs jae 0x1002807
 100279c:	je     0x100280d
 100279e:	jo     0x1002813
 10027a0:	inc    ecx
 10027a1:	add    ah,bl
 10027a3:	add    BYTE PTR [ebp+0x6e],al
 10027a6:	jne    0x1002815
 10027a8:	push   edi
 10027a9:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
 10027b0:	popa   
 10027b1:	je     0x100281c
 10027b3:	outs   dx,DWORD PTR ds:[esi]
 10027b4:	outs   dx,BYTE PTR ds:[esi]
 10027b5:	jae    0x10027f8
 10027b7:	add    BYTE PTR [ebp+0x53],dl
 10027ba:	inc    ebp
 10027bb:	push   edx
 10027bc:	xor    esi,DWORD PTR [edx]
 10027be:	cs fs ins BYTE PTR es:[edi],dx
 10027c1:	ins    BYTE PTR es:[edi],dx
 10027c2:	add    BYTE PTR [eax],al
 10027c4:	outs   dx,DWORD PTR ds:[esi]
 10027c5:	add    edx,DWORD PTR [edx+0x74]
 10027c8:	ins    BYTE PTR es:[edi],dx
 10027c9:	push   ebp
 10027ca:	outs   dx,BYTE PTR ds:[esi]
 10027cb:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
 10027d2:	jb     0x100283d
 10027d4:	outs   dx,BYTE PTR ds:[esi]
 10027d5:	addr16 push esp
 10027d7:	outs   dx,DWORD PTR ds:[esi]
 10027d8:	inc    ecx
 10027d9:	outs   dx,BYTE PTR ds:[esi]
 10027da:	jae    0x1002845
 10027dc:	push   ebx
 10027dd:	je     0x1002851
 10027df:	imul   ebp,DWORD PTR [esi+0x67],0x1280000
 10027e6:	dec    esi
 10027e7:	je     0x100283a
 10027e9:	jne    0x1002850
 10027eb:	jb     0x1002866
 10027ed:	push   ebx
 10027ee:	jns    0x1002863
 10027f0:	je     0x1002857
 10027f2:	ins    DWORD PTR es:[edi],dx
 10027f3:	dec    ecx
 10027f4:	outs   dx,BYTE PTR ds:[esi]
 10027f5:	outs   dx,WORD PTR ds:[esi]
 10027f7:	jb     0x1002866
 10027f9:	popa   
 10027fa:	je     0x1002865
 10027fc:	outs   dx,DWORD PTR ds:[esi]
 10027fd:	outs   dx,BYTE PTR ds:[esi]
 10027fe:	add    BYTE PTR [eax],al
 1002800:	ins    DWORD PTR es:[edi],dx
 1002801:	add    DWORD PTR [esi+0x74],ecx
 1002804:	push   ebx
 1002805:	gs je  0x100285b
 1002808:	jns    0x100287d
 100280a:	je     0x1002871
 100280c:	ins    DWORD PTR es:[edi],dx
 100280d:	dec    ecx
 100280e:	outs   dx,BYTE PTR ds:[esi]
 100280f:	outs   dx,WORD PTR ds:[esi]
 1002811:	jb     0x1002880
 1002813:	popa   
 1002814:	je     0x100287f
 1002816:	outs   dx,DWORD PTR ds:[esi]
 1002817:	outs   dx,BYTE PTR ds:[esi]
 1002818:	add    BYTE PTR [eax],al
 100281a:	outs   dx,BYTE PTR ds:[esi]
 100281b:	je     0x1002881
 100281d:	ins    BYTE PTR es:[edi],dx
 100281e:	ins    BYTE PTR es:[edi],dx
 100281f:	cs fs ins BYTE PTR es:[edi],dx
 1002822:	ins    BYTE PTR es:[edi],dx
 1002823:	add    BYTE PTR [edi+0x6c],ch
 1002826:	xor    esi,DWORD PTR gs:[edx]
 1002829:	cs fs ins BYTE PTR es:[edi],dx
 100282c:	ins    BYTE PTR es:[edi],dx
 100282d:	add    BYTE PTR [edi+0x4c],cl
 1002830:	inc    ebp
 1002831:	inc    ecx
 1002832:	push   ebp
 1002833:	push   esp
 1002834:	xor    esi,DWORD PTR [edx]
 1002836:	cs fs ins BYTE PTR es:[edi],dx
 1002839:	ins    BYTE PTR es:[edi],dx
	...
