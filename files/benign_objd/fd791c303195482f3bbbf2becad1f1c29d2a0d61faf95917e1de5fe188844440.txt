
fd791c303195482f3bbbf2becad1f1c29d2a0d61faf95917e1de5fe188844440.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	rex push rbx
   14000100a:	sub    rsp,0x40
   14000100e:	lea    rax,[rip+0x9ffb]        # 0x14000b010
   140001015:	mov    r10d,edx
   140001018:	sub    r10d,eax
   14000101b:	mov    r11,r8
   14000101e:	mov    al,BYTE PTR [rip+0xa877]        # 0x14000b89b
   140001024:	lea    r8,[rdx+0x1]
   140001028:	movzx  eax,BYTE PTR [rdx]
   14000102b:	mov    rbx,rcx
   14000102e:	mov    rdx,QWORD PTR [rsp+0x78]
   140001033:	shl    eax,0x18
   140001036:	or     eax,r10d
   140001039:	mov    QWORD PTR [rsp+0x28],rdx
   14000103e:	mov    DWORD PTR [rsp+0x30],eax
   140001042:	movzx  eax,WORD PTR [r8]
   140001046:	mov    DWORD PTR [rsp+0x34],eax
   14000104a:	mov    eax,DWORD PTR [r8+0x2]
   14000104e:	mov    DWORD PTR [rsp+0x38],eax
   140001052:	mov    eax,DWORD PTR [r8+0x6]
   140001056:	add    r8,0xa
   14000105a:	mov    DWORD PTR [rsp+0x3c],eax
   14000105e:	mov    rax,QWORD PTR [rcx+0x8]
   140001062:	mov    QWORD PTR [rdx],rax
   140001065:	mov    rax,QWORD PTR [rcx+0x8]
   140001069:	movzx  ecx,WORD PTR [rax]
   14000106c:	mov    QWORD PTR [rdx+0x10],r8
   140001070:	mov    DWORD PTR [rdx+0x8],ecx
   140001073:	mov    DWORD PTR [rdx+0xc],0x2
   14000107a:	movzx  eax,WORD PTR [r8]
   14000107e:	mov    r8,r11
   140001081:	mov    DWORD PTR [rdx+0x18],eax
   140001084:	mov    eax,DWORD PTR [rsp+0x70]
   140001088:	mov    DWORD PTR [rdx+0x1c],0x1
   14000108f:	lea    rdx,[rsp+0x30]
   140001094:	mov    rcx,QWORD PTR [rbx+0x20]
   140001098:	mov    DWORD PTR [rsp+0x20],eax
   14000109c:	call   QWORD PTR [rip+0x915e]        # 0x14000a200
   1400010a2:	add    rsp,0x40
   1400010a6:	pop    rbx
   1400010a7:	ret    
   1400010a8:	int3   
   1400010a9:	int3   
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    rax,rsp
   1400010b3:	mov    QWORD PTR [rax+0x8],rbx
   1400010b7:	mov    QWORD PTR [rax+0x10],rbp
   1400010bb:	mov    QWORD PTR [rax+0x18],rsi
   1400010bf:	mov    QWORD PTR [rax+0x20],rdi
   1400010c3:	push   r12
   1400010c5:	push   r14
   1400010c7:	push   r15
   1400010c9:	sub    rsp,0x40
   1400010cd:	mov    rbx,QWORD PTR [rsp+0x90]
   1400010d5:	mov    r15,r9
   1400010d8:	mov    sil,r8b
   1400010db:	mov    r14d,edx
   1400010de:	mov    r12,rcx
   1400010e1:	test   rbx,rbx
   1400010e4:	je     0x140001154
   1400010e6:	mov    rbp,QWORD PTR [rsp+0x80]
   1400010ee:	mov    eax,edx
   1400010f0:	test   edx,edx
   1400010f2:	je     0x140001116
   1400010f4:	cmp    eax,0x1
   1400010f7:	jne    0x140001119
   1400010f9:	movzx  ecx,r8b
   1400010fd:	mov    eax,0x100
   140001102:	inc    ecx
   140001104:	mov    QWORD PTR [rbx+0x10],r9
   140001108:	test   r8b,r8b
   14000110b:	mov    QWORD PTR [rbx+0x18],rbp
   14000110f:	cmovne eax,ecx
   140001112:	mov    DWORD PTR [rbx],eax
   140001114:	jmp    0x140001119
   140001116:	and    DWORD PTR [rbx],0x0
   140001119:	mov    rdi,QWORD PTR [rbx+0x28]
   14000111d:	test   rdi,rdi
   140001120:	je     0x140001154
   140001122:	mov    rcx,rdi
   140001125:	call   QWORD PTR [rip+0x9255]        # 0x14000a380
   14000112b:	mov    rax,QWORD PTR [rbx+0x30]
   14000112f:	mov    r9,r15
   140001132:	mov    QWORD PTR [rsp+0x30],rax
   140001137:	mov    r8b,sil
   14000113a:	mov    rax,QWORD PTR [rsp+0x88]
   140001142:	mov    edx,r14d
   140001145:	mov    QWORD PTR [rsp+0x28],rax
   14000114a:	mov    rcx,r12
   14000114d:	mov    QWORD PTR [rsp+0x20],rbp
   140001152:	call   rdi
   140001154:	mov    rbx,QWORD PTR [rsp+0x60]
   140001159:	mov    rbp,QWORD PTR [rsp+0x68]
   14000115e:	mov    rsi,QWORD PTR [rsp+0x70]
   140001163:	mov    rdi,QWORD PTR [rsp+0x78]
   140001168:	add    rsp,0x40
   14000116c:	pop    r15
   14000116e:	pop    r14
   140001170:	pop    r12
   140001172:	ret    
   140001173:	int3   
   140001174:	int3   
   140001175:	int3   
   140001176:	int3   
   140001177:	int3   
   140001178:	int3   
   140001179:	int3   
   14000117a:	int3   
   14000117b:	int3   
   14000117c:	int3   
   14000117d:	int3   
   14000117e:	int3   
   14000117f:	int3   
   140001180:	lea    rax,[rip+0x609]        # 0x140001790
   140001187:	mov    QWORD PTR [rip+0xd59a],rax        # 0x14000e728
   14000118e:	lea    rax,[rip+0x70b]        # 0x1400018a0
   140001195:	mov    QWORD PTR [rip+0xd57c],rax        # 0x14000e718
   14000119c:	lea    rax,[rip+0x74d]        # 0x1400018f0
   1400011a3:	mov    QWORD PTR [rip+0xd576],rax        # 0x14000e720
   1400011aa:	ret    
   1400011ab:	int3   
   1400011ac:	int3   
   1400011ad:	int3   
   1400011ae:	int3   
   1400011af:	int3   
   1400011b0:	sub    rsp,0x28
   1400011b4:	xor    edx,edx
   1400011b6:	lea    rcx,[rip+0xd5f3]        # 0x14000e7b0
   1400011bd:	mov    r8d,0xa0
   1400011c3:	call   0x140008722
   1400011c8:	lea    rcx,[rip+0x7da1]        # 0x140008f70
   1400011cf:	add    rsp,0x28
   1400011d3:	jmp    0x140007f84
   1400011d8:	int3   
   1400011d9:	int3   
   1400011da:	int3   
   1400011db:	int3   
   1400011dc:	int3   
   1400011dd:	int3   
   1400011de:	int3   
   1400011df:	int3   
   1400011e0:	lea    rcx,[rip+0x7e19]        # 0x140009000
   1400011e7:	jmp    0x140007f84
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	lea    rcx,[rip+0x7de9]        # 0x140008fe0
   1400011f7:	jmp    0x140007f84
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	lea    rcx,[rip+0x7db9]        # 0x140008fc0
   140001207:	jmp    0x140007f84
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	int3   
   140001211:	int3   
   140001212:	int3   
   140001213:	int3   
   140001214:	int3   
   140001215:	int3   
   140001216:	int3   
   140001217:	int3   
   140001218:	int3   
   140001219:	int3   
   14000121a:	int3   
   14000121b:	int3   
   14000121c:	int3   
   14000121d:	int3   
   14000121e:	int3   
   14000121f:	int3   
   140001220:	ret    0x0
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	rex push rbx
   140001232:	sub    rsp,0x20
   140001236:	lea    rax,[rip+0x978b]        # 0x14000a9c8
   14000123d:	mov    rbx,rcx
   140001240:	mov    QWORD PTR [rcx],rax
   140001243:	test   dl,0x1
   140001246:	je     0x14000124e
   140001248:	call   QWORD PTR [rip+0x90c2]        # 0x14000a310
   14000124e:	mov    rax,rbx
   140001251:	add    rsp,0x20
   140001255:	pop    rbx
   140001256:	ret    
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	mov    DWORD PTR [rdx],r8d
   140001263:	mov    rax,rdx
   140001266:	mov    QWORD PTR [rdx+0x8],rcx
   14000126a:	ret    
   14000126b:	int3   
   14000126c:	int3   
   14000126d:	int3   
   14000126e:	int3   
   14000126f:	int3   
   140001270:	int3   
   140001271:	int3   
   140001272:	int3   
   140001273:	int3   
   140001274:	int3   
   140001275:	int3   
   140001276:	int3   
   140001277:	int3   
   140001278:	int3   
   140001279:	int3   
   14000127a:	int3   
   14000127b:	int3   
   14000127c:	int3   
   14000127d:	int3   
   14000127e:	int3   
   14000127f:	int3   
   140001280:	mov    QWORD PTR [rsp+0x8],rbx
   140001285:	mov    QWORD PTR [rsp+0x10],rsi
   14000128a:	mov    QWORD PTR [rsp+0x18],rdi
   14000128f:	push   r14
   140001291:	sub    rsp,0x30
   140001295:	mov    rax,QWORD PTR [rcx]
   140001298:	mov    rsi,rcx
   14000129b:	mov    r14,r8
   14000129e:	mov    edi,edx
   1400012a0:	mov    rbx,QWORD PTR [rax+0x18]
   1400012a4:	mov    rcx,rbx
   1400012a7:	call   QWORD PTR [rip+0x90d3]        # 0x14000a380
   1400012ad:	mov    r8d,edi
   1400012b0:	lea    rdx,[rsp+0x20]
   1400012b5:	mov    rcx,rsi
   1400012b8:	call   rbx
   1400012ba:	mov    rcx,QWORD PTR [r14+0x8]
   1400012be:	cmp    QWORD PTR [rax+0x8],rcx
   1400012c2:	jne    0x1400012d2
   1400012c4:	mov    ecx,DWORD PTR [r14]
   1400012c7:	cmp    DWORD PTR [rax],ecx
   1400012c9:	jne    0x1400012d2
   1400012cb:	mov    eax,0x1
   1400012d0:	jmp    0x1400012d4
   1400012d2:	xor    eax,eax
   1400012d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400012d9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400012de:	mov    rdi,QWORD PTR [rsp+0x50]
   1400012e3:	add    rsp,0x30
   1400012e7:	pop    r14
   1400012e9:	ret    
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	cmp    rcx,QWORD PTR [rdx+0x8]
   1400012f4:	jne    0x140001301
   1400012f6:	cmp    DWORD PTR [rdx],r8d
   1400012f9:	jne    0x140001301
   1400012fb:	mov    eax,0x1
   140001300:	ret    
   140001301:	xor    eax,eax
   140001303:	ret    
   140001304:	int3   
   140001305:	int3   
   140001306:	int3   
   140001307:	int3   
   140001308:	int3   
   140001309:	int3   
   14000130a:	int3   
   14000130b:	int3   
   14000130c:	int3   
   14000130d:	int3   
   14000130e:	int3   
   14000130f:	int3   
   140001310:	lea    rax,[rip+0x91e1]        # 0x14000a4f8
   140001317:	ret    
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	rex push rbx
   140001322:	sub    rsp,0x30
   140001326:	and    DWORD PTR [rsp+0x20],0x0
   14000132b:	mov    ecx,r8d
   14000132e:	mov    rbx,rdx
   140001331:	call   QWORD PTR [rip+0x8f21]        # 0x14000a258
   140001337:	lea    rdx,[rip+0x91c2]        # 0x14000a500
   14000133e:	mov    rcx,rbx
   140001341:	test   rax,rax
   140001344:	cmovne rdx,rax
   140001348:	call   0x14000378c
   14000134d:	mov    rax,rbx
   140001350:	add    rsp,0x30
   140001354:	pop    rbx
   140001355:	ret    
   140001356:	int3   
   140001357:	int3   
   140001358:	int3   
   140001359:	int3   
   14000135a:	int3   
   14000135b:	int3   
   14000135c:	int3   
   14000135d:	int3   
   14000135e:	int3   
   14000135f:	int3   
   140001360:	lea    rax,[rip+0x91a9]        # 0x14000a510
   140001367:	ret    
   140001368:	int3   
   140001369:	int3   
   14000136a:	int3   
   14000136b:	int3   
   14000136c:	int3   
   14000136d:	int3   
   14000136e:	int3   
   14000136f:	int3   
   140001370:	rex push rbx
   140001372:	sub    rsp,0x30
   140001376:	and    DWORD PTR [rsp+0x20],0x0
   14000137b:	mov    rbx,rdx
   14000137e:	cmp    r8d,0x1
   140001382:	jne    0x140001395
   140001384:	lea    rdx,[rip+0x9195]        # 0x14000a520
   14000138b:	mov    rcx,rbx
   14000138e:	call   0x14000378c
   140001393:	jmp    0x14000139a
   140001395:	call   0x140001320
   14000139a:	mov    rax,rbx
   14000139d:	add    rsp,0x30
   1400013a1:	pop    rbx
   1400013a2:	ret    
   1400013a3:	int3   
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	lea    rax,[rip+0x9181]        # 0x14000a538
   1400013b7:	ret    
   1400013b8:	int3   
   1400013b9:	int3   
   1400013ba:	int3   
   1400013bb:	int3   
   1400013bc:	int3   
   1400013bd:	int3   
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	rex push rbx
   1400013c2:	sub    rsp,0x30
   1400013c6:	and    DWORD PTR [rsp+0x20],0x0
   1400013cb:	mov    ecx,r8d
   1400013ce:	mov    rbx,rdx
   1400013d1:	call   QWORD PTR [rip+0x8e59]        # 0x14000a230
   1400013d7:	lea    rdx,[rip+0x9122]        # 0x14000a500
   1400013de:	mov    rcx,rbx
   1400013e1:	test   rax,rax
   1400013e4:	cmovne rdx,rax
   1400013e8:	call   0x14000378c
   1400013ed:	mov    rax,rbx
   1400013f0:	add    rsp,0x30
   1400013f4:	pop    rbx
   1400013f5:	ret    
   1400013f6:	int3   
   1400013f7:	int3   
   1400013f8:	int3   
   1400013f9:	int3   
   1400013fa:	int3   
   1400013fb:	int3   
   1400013fc:	int3   
   1400013fd:	int3   
   1400013fe:	int3   
   1400013ff:	int3   
   140001400:	mov    QWORD PTR [rsp+0x8],rbx
   140001405:	push   rdi
   140001406:	sub    rsp,0x20
   14000140a:	mov    ecx,r8d
   14000140d:	mov    edi,r8d
   140001410:	mov    rbx,rdx
   140001413:	call   QWORD PTR [rip+0x8e3f]        # 0x14000a258
   140001419:	test   rax,rax
   14000141c:	mov    DWORD PTR [rbx],edi
   14000141e:	lea    rax,[rip+0xcc63]        # 0x14000e088
   140001425:	jne    0x14000142e
   140001427:	lea    rax,[rip+0xcc42]        # 0x14000e070
   14000142e:	mov    QWORD PTR [rbx+0x8],rax
   140001432:	mov    rax,rbx
   140001435:	mov    rbx,QWORD PTR [rsp+0x30]
   14000143a:	add    rsp,0x20
   14000143e:	pop    rdi
   14000143f:	ret    
   140001440:	int3   
   140001441:	int3   
   140001442:	int3   
   140001443:	int3   
   140001444:	int3   
   140001445:	int3   
   140001446:	int3   
   140001447:	int3   
   140001448:	mov    QWORD PTR [rsp+0x18],r8
   14000144d:	mov    QWORD PTR [rsp+0x20],r9
   140001452:	push   rbx
   140001453:	push   rsi
   140001454:	push   rdi
   140001455:	sub    rsp,0x20
   140001459:	mov    r10,rdx
   14000145c:	lea    r9,[rsp+0x58]
   140001461:	sub    r10,rcx
   140001464:	mov    rsi,rdx
   140001467:	sar    r10,1
   14000146a:	mov    rbx,rcx
   14000146d:	lea    rax,[r10-0x1]
   140001471:	cmp    rax,0x7ffffffe
   140001477:	ja     0x14000149b
   140001479:	lea    rdi,[r10-0x1]
   14000147d:	mov    rdx,rdi
   140001480:	call   QWORD PTR [rip+0x8ea2]        # 0x14000a328
   140001486:	xor    ecx,ecx
   140001488:	test   eax,eax
   14000148a:	js     0x140001495
   14000148c:	cdqe   
   14000148e:	cmp    rax,rdi
   140001491:	ja     0x140001495
   140001493:	jne    0x1400014a5
   140001495:	mov    WORD PTR [rbx+rdi*2],cx
   140001499:	jmp    0x1400014a5
   14000149b:	xor    ecx,ecx
   14000149d:	test   r10,r10
   1400014a0:	je     0x1400014a5
   1400014a2:	mov    WORD PTR [rbx],cx
   1400014a5:	cmp    rsi,rbx
   1400014a8:	je     0x1400014bb
   1400014aa:	or     rax,0xffffffffffffffff
   1400014ae:	inc    rax
   1400014b1:	cmp    WORD PTR [rbx+rax*2],cx
   1400014b5:	jne    0x1400014ae
   1400014b7:	lea    rbx,[rbx+rax*2]
   1400014bb:	mov    rax,rbx
   1400014be:	add    rsp,0x20
   1400014c2:	pop    rdi
   1400014c3:	pop    rsi
   1400014c4:	pop    rbx
   1400014c5:	ret    
   1400014c6:	int3   
   1400014c7:	int3   
   1400014c8:	int3   
   1400014c9:	int3   
   1400014ca:	int3   
   1400014cb:	int3   
   1400014cc:	mov    QWORD PTR [rsp+0x20],rbx
   1400014d1:	push   rbp
   1400014d2:	push   rsi
   1400014d3:	push   rdi
   1400014d4:	push   r14
   1400014d6:	push   r15
   1400014d8:	sub    rsp,0x250
   1400014df:	mov    rax,QWORD PTR [rip+0xcb22]        # 0x14000e008
   1400014e6:	xor    rax,rsp
   1400014e9:	mov    QWORD PTR [rsp+0x240],rax
   1400014f1:	mov    r14,rcx
   1400014f4:	lea    rsi,[rip+0x8ffb]        # 0x14000a4f6
   1400014fb:	mov    ecx,DWORD PTR [r8]
   1400014fe:	xor    r15d,r15d
   140001501:	mov    rbx,r8
   140001504:	mov    rdi,rdx
   140001507:	test   ecx,ecx
   140001509:	je     0x140001543
   14000150b:	sub    ecx,0x1
   14000150e:	je     0x14000153a
   140001510:	sub    ecx,0x1
   140001513:	je     0x140001531
   140001515:	sub    ecx,0x1
   140001518:	je     0x140001528
   14000151a:	cmp    ecx,0x1
   14000151d:	jne    0x14000154a
   14000151f:	lea    rsi,[rip+0x9062]        # 0x14000a588
   140001526:	jmp    0x14000154a
   140001528:	lea    rsi,[rip+0x9051]        # 0x14000a580
   14000152f:	jmp    0x14000154a
   140001531:	lea    rsi,[rip+0x9030]        # 0x14000a568
   140001538:	jmp    0x14000154a
   14000153a:	lea    rsi,[rip+0x9017]        # 0x14000a558
   140001541:	jmp    0x14000154a
   140001543:	lea    rsi,[rip+0x8ffe]        # 0x14000a548
   14000154a:	mov    r8d,DWORD PTR [r8+0x4]
   14000154e:	lea    rax,[rsp+0x40]
   140001553:	mov    QWORD PTR [rsp+0x30],r15
   140001558:	mov    r9d,0x400
   14000155e:	mov    DWORD PTR [rsp+0x28],0x100
   140001566:	xor    edx,edx
   140001568:	mov    ecx,0x1200
   14000156d:	mov    QWORD PTR [rsp+0x20],rax
   140001572:	mov    WORD PTR [rsp+0x40],r15w
   140001578:	call   QWORD PTR [rip+0x8b6a]        # 0x14000a0e8
   14000157e:	mov    r9,QWORD PTR [rbx+0x30]
   140001582:	lea    rdi,[r14+rdi*2]
   140001586:	mov    rax,QWORD PTR [rbx+0x80]
   14000158d:	mov    rdx,rdi
   140001590:	mov    rcx,r14
   140001593:	test   r9,r9
   140001596:	je     0x1400015bb
   140001598:	mov    QWORD PTR [rsp+0x30],rax
   14000159d:	lea    r8,[rip+0x8ff4]        # 0x14000a598
   1400015a4:	mov    rax,QWORD PTR [rbx+0x78]
   1400015a8:	mov    QWORD PTR [rsp+0x28],rax
   1400015ad:	mov    eax,DWORD PTR [rbx+0x38]
   1400015b0:	mov    DWORD PTR [rsp+0x20],eax
   1400015b4:	call   0x140001448
   1400015b9:	jmp    0x1400015d0
   1400015bb:	mov    r9,QWORD PTR [rbx+0x78]
   1400015bf:	lea    r8,[rip+0x8ffa]        # 0x14000a5c0
   1400015c6:	mov    QWORD PTR [rsp+0x20],rax
   1400015cb:	call   0x140001448
   1400015d0:	mov    r9,QWORD PTR [rbx+0x88]
   1400015d7:	mov    rbp,rax
   1400015da:	test   r9,r9
   1400015dd:	je     0x1400015f4
   1400015df:	lea    r8,[rip+0x8ff2]        # 0x14000a5d8
   1400015e6:	mov    rdx,rdi
   1400015e9:	mov    rcx,rax
   1400015ec:	call   0x140001448
   1400015f1:	mov    rbp,rax
   1400015f4:	call   QWORD PTR [rip+0x8b56]        # 0x14000a150
   1400015fa:	lea    rcx,[rsp+0x40]
   1400015ff:	mov    r9,rsi
   140001602:	mov    QWORD PTR [rsp+0x38],rcx
   140001607:	lea    r8,[rip+0x8fea]        # 0x14000a5f8
   14000160e:	mov    ecx,DWORD PTR [rbx+0x4]
   140001611:	mov    rdx,rdi
   140001614:	mov    DWORD PTR [rsp+0x30],ecx
   140001618:	mov    rcx,rbp
   14000161b:	mov    DWORD PTR [rsp+0x28],eax
   14000161f:	mov    eax,DWORD PTR [rbx+0x3c]
   140001622:	mov    DWORD PTR [rsp+0x20],eax
   140001626:	call   0x140001448
   14000162b:	cmp    QWORD PTR [rbx+0x10],r15
   14000162f:	jne    0x140001641
   140001631:	cmp    QWORD PTR [rbx+0x40],r15
   140001635:	jne    0x140001641
   140001637:	cmp    QWORD PTR [rbx+0x28],r15
   14000163b:	je     0x1400016d1
   140001641:	lea    r8,[rip+0x8fe8]        # 0x14000a630
   140001648:	mov    rdx,rdi
   14000164b:	mov    rcx,rax
   14000164e:	call   0x140001448
   140001653:	mov    r9,QWORD PTR [rbx+0x10]
   140001657:	test   r9,r9
   14000165a:	je     0x14000166e
   14000165c:	lea    r8,[rip+0x8fdd]        # 0x14000a640
   140001663:	mov    rdx,rdi
   140001666:	mov    rcx,rax
   140001669:	call   0x140001448
   14000166e:	mov    r9,QWORD PTR [rbx+0x40]
   140001672:	test   r9,r9
   140001675:	je     0x140001689
   140001677:	lea    r8,[rip+0x8fda]        # 0x14000a658
   14000167e:	mov    rdx,rdi
   140001681:	mov    rcx,rax
   140001684:	call   0x140001448
   140001689:	mov    rcx,QWORD PTR [rbx+0x20]
   14000168d:	mov    rdx,rdi
   140001690:	mov    r9,QWORD PTR [rbx+0x28]
   140001694:	test   rcx,rcx
   140001697:	je     0x1400016af
   140001699:	mov    QWORD PTR [rsp+0x20],rcx
   14000169e:	lea    r8,[rip+0x8fdb]        # 0x14000a680
   1400016a5:	mov    rcx,rax
   1400016a8:	call   0x140001448
   1400016ad:	jmp    0x1400016d1
   1400016af:	mov    rcx,rax
   1400016b2:	test   r9,r9
   1400016b5:	je     0x1400016c5
   1400016b7:	lea    r8,[rip+0x8fda]        # 0x14000a698
   1400016be:	call   0x140001448
   1400016c3:	jmp    0x1400016d1
   1400016c5:	lea    r8,[rip+0x8fdc]        # 0x14000a6a8
   1400016cc:	call   0x140001448
   1400016d1:	xor    eax,eax
   1400016d3:	mov    rcx,QWORD PTR [rsp+0x240]
   1400016db:	xor    rcx,rsp
   1400016de:	call   0x140007eb0
   1400016e3:	mov    rbx,QWORD PTR [rsp+0x298]
   1400016eb:	add    rsp,0x250
   1400016f2:	pop    r15
   1400016f4:	pop    r14
   1400016f6:	pop    rdi
   1400016f7:	pop    rsi
   1400016f8:	pop    rbp
   1400016f9:	ret    
   1400016fa:	int3   
   1400016fb:	int3   
   1400016fc:	int3   
   1400016fd:	int3   
   1400016fe:	int3   
   1400016ff:	int3   
   140001700:	mov    DWORD PTR [rip+0xd07a],ecx        # 0x14000e780
   140001706:	mov    eax,0x1
   14000170b:	lock xadd DWORD PTR [rip+0xd04d],eax        # 0x14000e760
   140001713:	inc    eax
   140001715:	ret    
   140001716:	int3   
   140001717:	int3   
   140001718:	int3   
   140001719:	int3   
   14000171a:	int3   
   14000171b:	int3   
   14000171c:	mov    DWORD PTR [rip+0xcf86],ecx        # 0x14000e6a8
   140001722:	mov    eax,0x1
   140001727:	lock xadd DWORD PTR [rip+0xd041],eax        # 0x14000e770
   14000172f:	inc    eax
   140001731:	ret    
   140001732:	int3   
   140001733:	int3   
   140001734:	int3   
   140001735:	int3   
   140001736:	int3   
   140001737:	int3   
   140001738:	mov    DWORD PTR [rip+0xd03a],ecx        # 0x14000e778
   14000173e:	mov    eax,0x1
   140001743:	lock xadd DWORD PTR [rip+0xcfa5],eax        # 0x14000e6f0
   14000174b:	inc    eax
   14000174d:	ret    
   14000174e:	int3   
   14000174f:	int3   
   140001750:	int3   
   140001751:	int3   
   140001752:	int3   
   140001753:	int3   
   140001754:	mov    DWORD PTR [rip+0xcf52],ecx        # 0x14000e6ac
   14000175a:	mov    eax,0x1
   14000175f:	lock xadd DWORD PTR [rip+0xcf8d],eax        # 0x14000e6f4
   140001767:	inc    eax
   140001769:	ret    
   14000176a:	int3   
   14000176b:	int3   
   14000176c:	int3   
   14000176d:	int3   
   14000176e:	int3   
   14000176f:	int3   
   140001770:	mov    DWORD PTR [rip+0xcfda],ecx        # 0x14000e750
   140001776:	mov    eax,0x1
   14000177b:	ret    
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	int3   
   140001781:	int3   
   140001782:	int3   
   140001783:	int3   
   140001784:	int3   
   140001785:	int3   
   140001786:	int3   
   140001787:	int3   
   140001788:	int3   
   140001789:	int3   
   14000178a:	int3   
   14000178b:	int3   
   14000178c:	int3   
   14000178d:	int3   
   14000178e:	int3   
   14000178f:	int3   
   140001790:	mov    QWORD PTR [rsp+0x8],rbx
   140001795:	push   rsi
   140001796:	sub    rsp,0x150
   14000179d:	mov    rax,QWORD PTR [rip+0xc864]        # 0x14000e008
   1400017a4:	xor    rax,rsp
   1400017a7:	mov    QWORD PTR [rsp+0x140],rax
   1400017af:	mov    al,BYTE PTR [rip+0xcfc7]        # 0x14000e77c
   1400017b5:	lea    rsi,[rip+0xcef4]        # 0x14000e6b0
   1400017bc:	test   al,al
   1400017be:	jne    0x140001874
   1400017c4:	mov    ebx,0x40
   1400017c9:	xor    edx,edx
   1400017cb:	mov    r8d,ebx
   1400017ce:	mov    rcx,rsi
   1400017d1:	call   0x140008722
   1400017d6:	and    QWORD PTR [rsp+0x20],0x0
   1400017dc:	lea    r8,[rsp+0x20]
   1400017e1:	lea    rdx,[rip+0xffffffffffffff88]        # 0x140001770
   1400017e8:	lea    ecx,[rbx-0x3a]
   1400017eb:	call   QWORD PTR [rip+0x88e7]        # 0x14000a0d8
   1400017f1:	test   eax,eax
   1400017f3:	je     0x14000186d
   1400017f5:	mov    rcx,QWORD PTR [rsp+0x20]
   1400017fa:	lea    rdx,[rsp+0x30]
   1400017ff:	mov    r8d,0x104
   140001805:	call   QWORD PTR [rip+0x88ad]        # 0x14000a0b8
   14000180b:	test   eax,eax
   14000180d:	je     0x14000186d
   14000180f:	lea    rcx,[rsp+0x30]
   140001814:	or     rax,0xffffffffffffffff
   140001818:	inc    rax
   14000181b:	cmp    BYTE PTR [rcx+rax*1],0x0
   14000181f:	jne    0x140001818
   140001821:	lea    rdx,[rsp+0x30]
   140001826:	add    rdx,rax
   140001829:	jmp    0x140001834
   14000182b:	cmp    BYTE PTR [rdx-0x1],0x5c
   14000182f:	je     0x14000183e
   140001831:	dec    rdx
   140001834:	lea    rax,[rsp+0x30]
   140001839:	cmp    rdx,rax
   14000183c:	ja     0x14000182b
   14000183e:	mov    rcx,rsi
   140001841:	sub    rdx,rsi
   140001844:	lea    rax,[rbx+0x7fffffbe]
   14000184b:	test   rax,rax
   14000184e:	je     0x140001862
   140001850:	mov    al,BYTE PTR [rdx+rcx*1]
   140001853:	test   al,al
   140001855:	je     0x140001862
   140001857:	mov    BYTE PTR [rcx],al
   140001859:	inc    rcx
   14000185c:	sub    rbx,0x1
   140001860:	jne    0x140001844
   140001862:	test   rbx,rbx
   140001865:	jne    0x14000186a
   140001867:	dec    rcx
   14000186a:	mov    BYTE PTR [rcx],0x0
   14000186d:	mov    BYTE PTR [rip+0xcf08],0x1        # 0x14000e77c
   140001874:	mov    rax,rsi
   140001877:	mov    rcx,QWORD PTR [rsp+0x140]
   14000187f:	xor    rcx,rsp
   140001882:	call   0x140007eb0
   140001887:	mov    rbx,QWORD PTR [rsp+0x160]
   14000188f:	add    rsp,0x150
   140001896:	pop    rsi
   140001897:	ret    
   140001898:	int3   
   140001899:	int3   
   14000189a:	int3   
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	rex push rbx
   1400018a2:	sub    rsp,0x20
   1400018a6:	lea    rcx,[rip+0x8e03]        # 0x14000a6b0
   1400018ad:	call   QWORD PTR [rip+0x8815]        # 0x14000a0c8
   1400018b3:	test   rax,rax
   1400018b6:	je     0x1400018db
   1400018b8:	lea    rdx,[rip+0x8e09]        # 0x14000a6c8
   1400018bf:	mov    rcx,rax
   1400018c2:	call   QWORD PTR [rip+0x87f8]        # 0x14000a0c0
   1400018c8:	mov    rbx,rax
   1400018cb:	test   rax,rax
   1400018ce:	je     0x1400018db
   1400018d0:	mov    rcx,rax
   1400018d3:	call   QWORD PTR [rip+0x8aa7]        # 0x14000a380
   1400018d9:	call   rbx
   1400018db:	add    rsp,0x20
   1400018df:	pop    rbx
   1400018e0:	ret    
   1400018e1:	int3   
   1400018e2:	int3   
   1400018e3:	int3   
   1400018e4:	int3   
   1400018e5:	int3   
   1400018e6:	int3   
   1400018e7:	int3   
   1400018e8:	int3   
   1400018e9:	int3   
   1400018ea:	int3   
   1400018eb:	int3   
   1400018ec:	int3   
   1400018ed:	int3   
   1400018ee:	int3   
   1400018ef:	int3   
   1400018f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400018f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400018fa:	push   rdi
   1400018fb:	sub    rsp,0x20
   1400018ff:	mov    rdi,QWORD PTR [rip+0xce62]        # 0x14000e768
   140001906:	xor    ebx,ebx
   140001908:	mov    esi,ecx
   14000190a:	test   rdi,rdi
   14000190d:	jne    0x140001956
   14000190f:	mov    rax,QWORD PTR [rip+0xce42]        # 0x14000e758
   140001916:	test   rax,rax
   140001919:	jne    0x140001937
   14000191b:	xor    edx,edx
   14000191d:	lea    rcx,[rip+0x8d8c]        # 0x14000a6b0
   140001924:	mov    r8d,0x800
   14000192a:	call   QWORD PTR [rip+0x87a0]        # 0x14000a0d0
   140001930:	mov    QWORD PTR [rip+0xce21],rax        # 0x14000e758
   140001937:	lea    rdx,[rip+0x8daa]        # 0x14000a6e8
   14000193e:	mov    rcx,rax
   140001941:	call   QWORD PTR [rip+0x8779]        # 0x14000a0c0
   140001947:	mov    QWORD PTR [rip+0xce1a],rax        # 0x14000e768
   14000194e:	mov    rdi,rax
   140001951:	test   rax,rax
   140001954:	je     0x140001965
   140001956:	mov    rcx,rdi
   140001959:	call   QWORD PTR [rip+0x8a21]        # 0x14000a380
   14000195f:	mov    ecx,esi
   140001961:	call   rdi
   140001963:	mov    ebx,eax
   140001965:	mov    rsi,QWORD PTR [rsp+0x38]
   14000196a:	mov    eax,ebx
   14000196c:	mov    rbx,QWORD PTR [rsp+0x30]
   140001971:	add    rsp,0x20
   140001975:	pop    rdi
   140001976:	ret    
   140001977:	int3   
   140001978:	int3   
   140001979:	int3   
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	mov    QWORD PTR [rsp+0x8],rbx
   140001985:	mov    QWORD PTR [rsp+0x10],rbp
   14000198a:	mov    QWORD PTR [rsp+0x18],rsi
   14000198f:	push   rdi
   140001990:	sub    rsp,0x20
   140001994:	xor    al,al
   140001996:	mov    BYTE PTR [r8],0x0
   14000199a:	mov    rbp,r9
   14000199d:	mov    rbx,r8
   1400019a0:	mov    rsi,rdx
   1400019a3:	mov    rdi,rcx
   1400019a6:	test   rdx,rdx
   1400019a9:	je     0x140001a56
   1400019af:	mov    rdx,QWORD PTR [rdx+0x10]
   1400019b3:	call   0x140001980
   1400019b8:	mov    rdx,QWORD PTR [rsi+0x20]
   1400019bc:	xor    esi,esi
   1400019be:	test   rdx,rdx
   1400019c1:	je     0x140001a56
   1400019c7:	cmp    DWORD PTR [rdx],esi
   1400019c9:	jne    0x1400019da
   1400019cb:	lea    eax,[rsi+0x1]
   1400019ce:	lock xadd DWORD PTR [rip+0xc64a],eax        # 0x14000e020
   1400019d6:	inc    eax
   1400019d8:	mov    DWORD PTR [rdx],eax
   1400019da:	cmp    DWORD PTR [rdi+0x48],esi
   1400019dd:	jne    0x1400019f0
   1400019df:	movups xmm0,XMMWORD PTR [rdx]
   1400019e2:	movups XMMWORD PTR [rdi+0x48],xmm0
   1400019e6:	movsd  xmm1,QWORD PTR [rdx+0x10]
   1400019eb:	movsd  QWORD PTR [rdi+0x58],xmm1
   1400019f0:	movups xmm0,XMMWORD PTR [rdx]
   1400019f3:	or     rcx,0xffffffffffffffff
   1400019f7:	mov    rax,rcx
   1400019fa:	movups XMMWORD PTR [rdi+0x60],xmm0
   1400019fe:	movsd  xmm1,QWORD PTR [rdx+0x10]
   140001a03:	movsd  QWORD PTR [rdi+0x70],xmm1
   140001a08:	lea    rdi,[rbx+rbp*1]
   140001a0c:	inc    rax
   140001a0f:	cmp    BYTE PTR [rbx+rax*1],sil
   140001a13:	jne    0x140001a0c
   140001a15:	add    rbx,rax
   140001a18:	mov    rax,rdi
   140001a1b:	sub    rax,rbx
   140001a1e:	cmp    rax,0x2
   140001a22:	jle    0x140001a54
   140001a24:	mov    BYTE PTR [rbx],0x5c
   140001a27:	inc    rbx
   140001a2a:	mov    rdx,QWORD PTR [rdx+0x8]
   140001a2e:	inc    rcx
   140001a31:	cmp    BYTE PTR [rdx+rcx*1],sil
   140001a35:	jne    0x140001a2e
   140001a37:	inc    rcx
   140001a3a:	sub    rdi,rbx
   140001a3d:	cmp    rcx,rdi
   140001a40:	cmovb  rdi,rcx
   140001a44:	mov    rcx,rbx
   140001a47:	mov    r8,rdi
   140001a4a:	call   0x140008716
   140001a4f:	mov    BYTE PTR [rdi+rbx*1-0x1],sil
   140001a54:	mov    al,0x1
   140001a56:	mov    rbx,QWORD PTR [rsp+0x30]
   140001a5b:	mov    rbp,QWORD PTR [rsp+0x38]
   140001a60:	mov    rsi,QWORD PTR [rsp+0x40]
   140001a65:	add    rsp,0x20
   140001a69:	pop    rdi
   140001a6a:	ret    
   140001a6b:	int3   
   140001a6c:	int3   
   140001a6d:	int3   
   140001a6e:	int3   
   140001a6f:	int3   
   140001a70:	int3   
   140001a71:	int3   
   140001a72:	int3   
   140001a73:	int3   
   140001a74:	mov    QWORD PTR [rsp+0x10],rbx
   140001a79:	mov    QWORD PTR [rsp+0x18],rbp
   140001a7e:	mov    QWORD PTR [rsp+0x20],rsi
   140001a83:	push   rdi
   140001a84:	push   r12
   140001a86:	push   r13
   140001a88:	push   r14
   140001a8a:	push   r15
   140001a8c:	sub    rsp,0x20
   140001a90:	movups xmm0,XMMWORD PTR [rdx]
   140001a93:	mov    rsi,rcx
   140001a96:	or     r15,0xffffffffffffffff
   140001a9a:	xor    edi,edi
   140001a9c:	mov    r14,rdx
   140001a9f:	movups XMMWORD PTR [rcx],xmm0
   140001aa2:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140001aa6:	lea    r12d,[r15+0x3]
   140001aaa:	movups XMMWORD PTR [rcx+0x10],xmm1
   140001aae:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140001ab2:	movups XMMWORD PTR [rcx+0x20],xmm0
   140001ab6:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140001aba:	movups XMMWORD PTR [rcx+0x30],xmm1
   140001abe:	movups xmm0,XMMWORD PTR [rdx+0x40]
   140001ac2:	movups XMMWORD PTR [rcx+0x40],xmm0
   140001ac6:	movups xmm1,XMMWORD PTR [rdx+0x50]
   140001aca:	movups XMMWORD PTR [rcx+0x50],xmm1
   140001ace:	movups xmm0,XMMWORD PTR [rdx+0x60]
   140001ad2:	movups XMMWORD PTR [rcx+0x60],xmm0
   140001ad6:	mov    ecx,0x80
   140001adb:	movups xmm0,XMMWORD PTR [rdx+0x70]
   140001adf:	movups XMMWORD PTR [rsi+rcx*1-0x10],xmm0
   140001ae4:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140001ae8:	movups XMMWORD PTR [rsi+rcx*1],xmm1
   140001aec:	mov    rcx,QWORD PTR [rdx+0x10]
   140001af0:	test   rcx,rcx
   140001af3:	jne    0x140001afc
   140001af5:	mov    QWORD PTR [rsp+0x50],r12
   140001afa:	jmp    0x140001b15
   140001afc:	mov    rax,r15
   140001aff:	inc    rax
   140001b02:	cmp    WORD PTR [rcx+rax*2],di
   140001b06:	jne    0x140001aff
   140001b08:	lea    rax,[rax*2+0x2]
   140001b10:	mov    QWORD PTR [rsp+0x50],rax
   140001b15:	mov    rax,QWORD PTR [rdx+0x20]
   140001b19:	test   rax,rax
   140001b1c:	jne    0x140001b25
   140001b1e:	lea    ebx,[rax+0x1]
   140001b21:	mov    ecx,ebx
   140001b23:	jmp    0x140001b39
   140001b25:	mov    rcx,r15
   140001b28:	inc    rcx
   140001b2b:	cmp    BYTE PTR [rax+rcx*1],dil
   140001b2f:	jne    0x140001b28
   140001b31:	mov    ebx,0x1
   140001b36:	add    rcx,rbx
   140001b39:	mov    rax,QWORD PTR [rdx+0x28]
   140001b3d:	test   rax,rax
   140001b40:	jne    0x140001b47
   140001b42:	mov    r9,rbx
   140001b45:	jmp    0x140001b56
   140001b47:	mov    r9,r15
   140001b4a:	inc    r9
   140001b4d:	cmp    BYTE PTR [rax+r9*1],dil
   140001b51:	jne    0x140001b4a
   140001b53:	add    r9,rbx
   140001b56:	mov    rax,QWORD PTR [rdx+0x30]
   140001b5a:	test   rax,rax
   140001b5d:	jne    0x140001b64
   140001b5f:	mov    r11,rbx
   140001b62:	jmp    0x140001b73
   140001b64:	mov    r11,r15
   140001b67:	inc    r11
   140001b6a:	cmp    BYTE PTR [rax+r11*1],dil
   140001b6e:	jne    0x140001b67
   140001b70:	add    r11,rbx
   140001b73:	mov    rax,QWORD PTR [rdx+0x40]
   140001b77:	test   rax,rax
   140001b7a:	jne    0x140001b81
   140001b7c:	mov    r10,rbx
   140001b7f:	jmp    0x140001b90
   140001b81:	mov    r10,r15
   140001b84:	inc    r10
   140001b87:	cmp    BYTE PTR [rax+r10*1],dil
   140001b8b:	jne    0x140001b84
   140001b8d:	add    r10,rbx
   140001b90:	mov    rax,QWORD PTR [rdx+0x78]
   140001b94:	test   rax,rax
   140001b97:	jne    0x140001b9e
   140001b99:	mov    r8,rbx
   140001b9c:	jmp    0x140001bad
   140001b9e:	mov    r8,r15
   140001ba1:	inc    r8
   140001ba4:	cmp    BYTE PTR [rax+r8*1],dil
   140001ba8:	jne    0x140001ba1
   140001baa:	add    r8,rbx
   140001bad:	mov    rax,QWORD PTR [rdx+0x68]
   140001bb1:	test   rax,rax
   140001bb4:	jne    0x140001bbb
   140001bb6:	mov    rdx,rbx
   140001bb9:	jmp    0x140001bca
   140001bbb:	mov    rdx,r15
   140001bbe:	inc    rdx
   140001bc1:	cmp    BYTE PTR [rax+rdx*1],dil
   140001bc5:	jne    0x140001bbe
   140001bc7:	add    rdx,rbx
   140001bca:	mov    rbp,QWORD PTR [r14+0x70]
   140001bce:	test   rbp,rbp
   140001bd1:	jne    0x140001bd8
   140001bd3:	mov    r13,r12
   140001bd6:	jmp    0x140001bed
   140001bd8:	mov    rax,r15
   140001bdb:	inc    rax
   140001bde:	cmp    WORD PTR [rbp+rax*2+0x0],di
   140001be3:	jne    0x140001bdb
   140001be5:	lea    r13,[rax*2+0x2]
   140001bed:	mov    rbp,QWORD PTR [r14+0x50]
   140001bf1:	test   rbp,rbp
   140001bf4:	jne    0x140001bfb
   140001bf6:	mov    rax,rbx
   140001bf9:	jmp    0x140001c0a
   140001bfb:	mov    rax,r15
   140001bfe:	inc    rax
   140001c01:	cmp    BYTE PTR [rax+rbp*1],dil
   140001c05:	jne    0x140001bfe
   140001c07:	add    rax,rbx
   140001c0a:	mov    r15,QWORD PTR [r14+0x58]
   140001c0e:	test   r15,r15
   140001c11:	je     0x140001c29
   140001c13:	or     rbp,0xffffffffffffffff
   140001c17:	inc    rbp
   140001c1a:	cmp    WORD PTR [r15+rbp*2],di
   140001c1f:	jne    0x140001c17
   140001c21:	lea    r12,[rbp*2+0x2]
   140001c29:	lea    rbp,[r12+rax*1]
   140001c2d:	mov    rax,QWORD PTR [rsi+0x90]
   140001c34:	add    rbp,r13
   140001c37:	add    rbp,rdx
   140001c3a:	add    rbp,r8
   140001c3d:	add    rbp,r10
   140001c40:	add    rbp,r11
   140001c43:	add    rbp,r9
   140001c46:	add    rbp,rcx
   140001c49:	add    rbp,QWORD PTR [rsp+0x50]
   140001c4e:	test   rax,rax
   140001c51:	je     0x140001c64
   140001c53:	cmp    DWORD PTR [rax],ebx
   140001c55:	jne    0x140001c64
   140001c57:	cmp    QWORD PTR [rsi+0x98],rbp
   140001c5e:	jae    0x140001d2a
   140001c64:	mov    rcx,rax
   140001c67:	test   rax,rax
   140001c6a:	je     0x140001c93
   140001c6c:	or     eax,0xffffffff
   140001c6f:	lock xadd DWORD PTR [rcx],eax
   140001c73:	cmp    eax,0x1
   140001c76:	jne    0x140001c85
   140001c78:	mov    rcx,QWORD PTR [rsi+0x90]
   140001c7f:	call   QWORD PTR [rip+0x86c3]        # 0x14000a348
   140001c85:	mov    QWORD PTR [rsi+0x90],rdi
   140001c8c:	mov    QWORD PTR [rsi+0x98],rdi
   140001c93:	test   rbp,rbp
   140001c96:	jne    0x140001cd1
   140001c98:	mov    rcx,QWORD PTR [rsi+0x90]
   140001c9f:	test   rcx,rcx
   140001ca2:	je     0x140001d2a
   140001ca8:	or     eax,0xffffffff
   140001cab:	lock xadd DWORD PTR [rcx],eax
   140001caf:	cmp    eax,0x1
   140001cb2:	jne    0x140001cc1
   140001cb4:	mov    rcx,QWORD PTR [rsi+0x90]
   140001cbb:	call   QWORD PTR [rip+0x8687]        # 0x14000a348
   140001cc1:	mov    QWORD PTR [rsi+0x90],rdi
   140001cc8:	mov    QWORD PTR [rsi+0x98],rdi
   140001ccf:	jmp    0x140001d2a
   140001cd1:	lea    rcx,[rbp+0x4]
   140001cd5:	call   QWORD PTR [rip+0x8665]        # 0x14000a340
   140001cdb:	mov    r15,rax
   140001cde:	test   rax,rax
   140001ce1:	je     0x140001d2a
   140001ce3:	mov    DWORD PTR [rax],edi
   140001ce5:	mov    rax,QWORD PTR [rsi+0x90]
   140001cec:	test   rax,rax
   140001cef:	je     0x140001d18
   140001cf1:	or     ecx,0xffffffff
   140001cf4:	lock xadd DWORD PTR [rax],ecx
   140001cf8:	cmp    ecx,0x1
   140001cfb:	jne    0x140001d0a
   140001cfd:	mov    rcx,QWORD PTR [rsi+0x90]
   140001d04:	call   QWORD PTR [rip+0x863e]        # 0x14000a348
   140001d0a:	mov    QWORD PTR [rsi+0x90],rdi
   140001d11:	mov    QWORD PTR [rsi+0x98],rdi
   140001d18:	mov    QWORD PTR [rsi+0x90],r15
   140001d1f:	mov    QWORD PTR [rsi+0x98],rbp
   140001d26:	lock add DWORD PTR [r15],ebx
   140001d2a:	mov    rax,QWORD PTR [rsi+0x90]
   140001d31:	mov    rcx,QWORD PTR [rsi+0x98]
   140001d38:	test   rax,rax
   140001d3b:	je     0x140001d41
   140001d3d:	lea    rdi,[rax+0x4]
   140001d41:	mov    r8,QWORD PTR [r14+0x10]
   140001d45:	lea    rdx,[rcx+rdi*1]
   140001d49:	mov    rax,rdi
   140001d4c:	lea    r9,[rsi+0x10]
   140001d50:	neg    rax
   140001d53:	mov    rcx,rdi
   140001d56:	sbb    rbx,rbx
   140001d59:	and    rbx,rdx
   140001d5c:	mov    rdx,rbx
   140001d5f:	call   0x140004404
   140001d64:	mov    r8,QWORD PTR [r14+0x20]
   140001d68:	lea    r9,[rsi+0x20]
   140001d6c:	mov    rdx,rbx
   140001d6f:	mov    rcx,rax
   140001d72:	call   0x1400044bc
   140001d77:	mov    r8,QWORD PTR [r14+0x28]
   140001d7b:	lea    r9,[rsi+0x28]
   140001d7f:	mov    rdx,rbx
   140001d82:	mov    rcx,rax
   140001d85:	call   0x1400044bc
   140001d8a:	mov    r8,QWORD PTR [r14+0x30]
   140001d8e:	lea    r9,[rsi+0x30]
   140001d92:	mov    rdx,rbx
   140001d95:	mov    rcx,rax
   140001d98:	call   0x1400044bc
   140001d9d:	mov    r8,QWORD PTR [r14+0x40]
   140001da1:	lea    r9,[rsi+0x40]
   140001da5:	mov    rdx,rbx
   140001da8:	mov    rcx,rax
   140001dab:	call   0x1400044bc
   140001db0:	mov    r8,QWORD PTR [r14+0x78]
   140001db4:	lea    r9,[rsi+0x78]
   140001db8:	mov    rdx,rbx
   140001dbb:	mov    rcx,rax
   140001dbe:	call   0x1400044bc
   140001dc3:	mov    r8,QWORD PTR [r14+0x68]
   140001dc7:	lea    r9,[rsi+0x68]
   140001dcb:	mov    rdx,rbx
   140001dce:	mov    rcx,rax
   140001dd1:	call   0x1400044bc
   140001dd6:	mov    r8,QWORD PTR [r14+0x70]
   140001dda:	lea    r9,[rsi+0x70]
   140001dde:	mov    rdx,rbx
   140001de1:	mov    rcx,rax
   140001de4:	call   0x140004404
   140001de9:	mov    r8,QWORD PTR [r14+0x50]
   140001ded:	lea    r9,[rsi+0x50]
   140001df1:	mov    rdx,rbx
   140001df4:	mov    rcx,rax
   140001df7:	call   0x1400044bc
   140001dfc:	mov    r8,QWORD PTR [r14+0x58]
   140001e00:	lea    r9,[rsi+0x58]
   140001e04:	mov    rdx,rbx
   140001e07:	mov    rcx,rax
   140001e0a:	mov    rbx,QWORD PTR [rsp+0x58]
   140001e0f:	mov    rbp,QWORD PTR [rsp+0x60]
   140001e14:	mov    rsi,QWORD PTR [rsp+0x68]
   140001e19:	add    rsp,0x20
   140001e1d:	pop    r15
   140001e1f:	pop    r14
   140001e21:	pop    r13
   140001e23:	pop    r12
   140001e25:	pop    rdi
   140001e26:	jmp    0x140004404
   140001e2b:	int3   
   140001e2c:	int3   
   140001e2d:	int3   
   140001e2e:	int3   
   140001e2f:	int3   
   140001e30:	int3   
   140001e31:	int3   
   140001e32:	int3   
   140001e33:	int3   
   140001e34:	rex push rbx
   140001e36:	sub    rsp,0x20
   140001e3a:	and    QWORD PTR [rcx+0x90],0x0
   140001e42:	mov    rbx,rcx
   140001e45:	and    QWORD PTR [rcx+0x98],0x0
   140001e4d:	call   0x140001a74
   140001e52:	mov    rax,rbx
   140001e55:	add    rsp,0x20
   140001e59:	pop    rbx
   140001e5a:	ret    
   140001e5b:	int3   
   140001e5c:	int3   
   140001e5d:	int3   
   140001e5e:	int3   
   140001e5f:	int3   
   140001e60:	int3   
   140001e61:	int3   
   140001e62:	int3   
   140001e63:	int3   
   140001e64:	rex push rbx
   140001e66:	sub    rsp,0x30
   140001e6a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001e73:	mov    rbx,QWORD PTR [rip+0xc896]        # 0x14000e710
   140001e7a:	test   rbx,rbx
   140001e7d:	je     0x140001e8c
   140001e7f:	mov    rcx,rbx
   140001e82:	call   QWORD PTR [rip+0x84f8]        # 0x14000a380
   140001e88:	call   rbx
   140001e8a:	jmp    0x140001ea7
   140001e8c:	xor    edx,edx
   140001e8e:	xor    ecx,ecx
   140001e90:	call   0x1400085cc
   140001e95:	nop
   140001e96:	mov    eax,DWORD PTR [rsp+0x40]
   140001e9a:	jmp    0x140001ea1
   140001e9c:	mov    eax,0x8007000e
   140001ea1:	jmp    0x140001ea7
   140001ea3:	mov    eax,DWORD PTR [rsp+0x40]
   140001ea7:	add    rsp,0x30
   140001eab:	pop    rbx
   140001eac:	ret    
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	int3   
   140001eb1:	int3   
   140001eb2:	int3   
   140001eb3:	int3   
   140001eb4:	mov    QWORD PTR [rsp+0x18],rbx
   140001eb9:	mov    DWORD PTR [rsp+0x10],edx
   140001ebd:	mov    QWORD PTR [rsp+0x8],rcx
   140001ec2:	push   rbp
   140001ec3:	push   rsi
   140001ec4:	push   rdi
   140001ec5:	push   r12
   140001ec7:	push   r13
   140001ec9:	push   r14
   140001ecb:	push   r15
   140001ecd:	sub    rsp,0x40
   140001ed1:	mov    r14d,DWORD PTR [rsp+0xb0]
   140001ed9:	mov    r13,r8
   140001edc:	mov    r15,QWORD PTR [rsp+0xd0]
   140001ee4:	xor    r8d,r8d
   140001ee7:	mov    rbp,QWORD PTR [rsp+0xe0]
   140001eef:	mov    r12,r9
   140001ef2:	mov    ebx,DWORD PTR [rsp+0xb8]
   140001ef9:	mov    edi,r8d
   140001efc:	mov    r10d,r14d
   140001eff:	mov    WORD PTR [r15],r8w
   140001f03:	mov    BYTE PTR [rbp+0x0],r8b
   140001f07:	test   r14d,r14d
   140001f0a:	je     0x140001f7f
   140001f0c:	sub    r10d,0x1
   140001f10:	je     0x140001f76
   140001f12:	sub    r10d,0x1
   140001f16:	je     0x140001f6d
   140001f18:	sub    r10d,0x1
   140001f1c:	je     0x140001f2d
   140001f1e:	cmp    r10d,0x1
   140001f22:	jne    0x140001f88
   140001f24:	mov    ecx,ebx
   140001f26:	call   0x140001770
   140001f2b:	jmp    0x140001f86
   140001f2d:	test   ebx,ebx
   140001f2f:	js     0x140001f64
   140001f31:	mov    rax,QWORD PTR [rsp+0xa8]
   140001f39:	mov    ebx,0x8007029c
   140001f3e:	mov    DWORD PTR [rsp+0x38],ebx
   140001f42:	mov    r8,r13
   140001f45:	mov    DWORD PTR [rsp+0x30],0x3
   140001f4d:	mov    QWORD PTR [rsp+0x28],rax
   140001f52:	mov    rax,QWORD PTR [rsp+0xa0]
   140001f5a:	mov    QWORD PTR [rsp+0x20],rax
   140001f5f:	call   0x140002408
   140001f64:	mov    ecx,ebx
   140001f66:	call   0x140001754
   140001f6b:	jmp    0x140001f86
   140001f6d:	mov    ecx,ebx
   140001f6f:	call   0x140001738
   140001f74:	jmp    0x140001f86
   140001f76:	mov    ecx,ebx
   140001f78:	call   0x14000171c
   140001f7d:	jmp    0x140001f86
   140001f7f:	mov    ecx,ebx
   140001f81:	call   0x140001700
   140001f86:	mov    edi,eax
   140001f88:	mov    rsi,QWORD PTR [rsp+0xf0]
   140001f90:	mov    DWORD PTR [rsi],r14d
   140001f93:	mov    r14d,0x1
   140001f99:	mov    eax,r14d
   140001f9c:	mov    DWORD PTR [rsi+0x4],ebx
   140001f9f:	lock xadd DWORD PTR [rip+0xc7cd],eax        # 0x14000e774
   140001fa7:	add    eax,r14d
   140001faa:	xor    ecx,ecx
   140001fac:	mov    DWORD PTR [rsi+0x8],eax
   140001faf:	mov    rax,QWORD PTR [rsp+0xc0]
   140001fb7:	test   rax,rax
   140001fba:	je     0x140001fc1
   140001fbc:	cmp    WORD PTR [rax],cx
   140001fbf:	jne    0x140001fc4
   140001fc1:	mov    rax,rcx
   140001fc4:	mov    QWORD PTR [rsi+0x10],rax
   140001fc8:	call   QWORD PTR [rip+0x8182]        # 0x14000a150
   140001fce:	mov    rbx,QWORD PTR [rip+0xc753]        # 0x14000e728
   140001fd5:	mov    DWORD PTR [rsi+0x18],eax
   140001fd8:	mov    eax,DWORD PTR [rsp+0x88]
   140001fdf:	mov    DWORD PTR [rsi+0x38],eax
   140001fe2:	mov    rax,QWORD PTR [rsp+0xa0]
   140001fea:	mov    QWORD PTR [rsi+0x20],rax
   140001fee:	mov    rax,QWORD PTR [rsp+0xa8]
   140001ff6:	mov    QWORD PTR [rsi+0x80],rax
   140001ffd:	mov    rax,QWORD PTR [rsp+0x80]
   140002005:	mov    QWORD PTR [rsi+0x30],r13
   140002009:	xor    r13d,r13d
   14000200c:	mov    QWORD PTR [rsi+0x88],rax
   140002013:	mov    DWORD PTR [rsi+0x3c],edi
   140002016:	mov    QWORD PTR [rsi+0x28],r12
   14000201a:	mov    QWORD PTR [rsi+0x40],r13
   14000201e:	mov    DWORD PTR [rsi+0x60],r13d
   140002022:	mov    QWORD PTR [rsi+0x68],r13
   140002026:	mov    QWORD PTR [rsi+0x70],r13
   14000202a:	mov    DWORD PTR [rsi+0x48],r13d
   14000202e:	mov    QWORD PTR [rsi+0x50],r13
   140002032:	mov    QWORD PTR [rsi+0x58],r13
   140002036:	test   rbx,rbx
   140002039:	je     0x140002048
   14000203b:	mov    rcx,rbx
   14000203e:	call   QWORD PTR [rip+0x833c]        # 0x14000a380
   140002044:	call   rbx
   140002046:	jmp    0x14000204b
   140002048:	mov    rax,r13
   14000204b:	mov    QWORD PTR [rsi+0x78],rax
   14000204f:	mov    r12b,r13b
   140002052:	mov    BYTE PTR [rbp+0x0],r13b
   140002056:	call   QWORD PTR [rip+0x80f4]        # 0x14000a150
   14000205c:	mov    r8d,eax
   14000205f:	lea    rbx,[rip+0xc74a]        # 0x14000e7b0
   140002066:	mov    r9d,eax
   140002069:	movabs rax,0xcccccccccccccccd
   140002073:	mul    r9
   140002076:	shr    rdx,0x4
   14000207a:	lea    rcx,[rdx+rdx*4]
   14000207e:	shl    rcx,0x2
   140002082:	sub    r8,rcx
   140002085:	mov    rbx,QWORD PTR [rbx+r8*8]
   140002089:	jmp    0x140002095
   14000208b:	cmp    DWORD PTR [rbx+0x8],r9d
   14000208f:	je     0x14000209d
   140002091:	mov    rbx,QWORD PTR [rbx+0x10]
   140002095:	test   rbx,rbx
   140002098:	jne    0x14000208b
   14000209a:	mov    rbx,r13
   14000209d:	test   rbx,rbx
   1400020a0:	je     0x1400020f1
   1400020a2:	cmp    QWORD PTR [rbx],r13
   1400020a5:	je     0x1400020f1
   1400020a7:	mov    BYTE PTR [rbp+0x0],r13b
   1400020ab:	mov    r9d,0x400
   1400020b1:	mov    rdx,QWORD PTR [rbx]
   1400020b4:	mov    r8,rbp
   1400020b7:	mov    rcx,rsi
   1400020ba:	call   0x140001980
   1400020bf:	test   al,al
   1400020c1:	je     0x1400020c7
   1400020c3:	mov    QWORD PTR [rsi+0x40],rbp
   1400020c7:	mov    rbp,QWORD PTR [rbx]
   1400020ca:	mov    rdi,QWORD PTR [rbp+0x8]
   1400020ce:	mov    rax,QWORD PTR [rdi]
   1400020d1:	mov    rbx,QWORD PTR [rax]
   1400020d4:	mov    rcx,rbx
   1400020d7:	call   QWORD PTR [rip+0x82a3]        # 0x14000a380
   1400020dd:	mov    rdx,rsi
   1400020e0:	mov    rcx,rdi
   1400020e3:	call   rbx
   1400020e5:	mov    rbp,QWORD PTR [rbp+0x10]
   1400020e9:	or     r12b,al
   1400020ec:	test   rbp,rbp
   1400020ef:	jne    0x1400020ca
   1400020f1:	mov    rdi,QWORD PTR [rip+0xc608]        # 0x14000e700
   1400020f8:	test   rdi,rdi
   1400020fb:	je     0x140002115
   1400020fd:	mov    rcx,rdi
   140002100:	call   QWORD PTR [rip+0x827a]        # 0x14000a380
   140002106:	mov    rdx,rsi
   140002109:	mov    cl,r12b
   14000210c:	call   rdi
   14000210e:	mov    rdi,QWORD PTR [rip+0xc5eb]        # 0x14000e700
   140002115:	mov    rbx,QWORD PTR [rip+0xc5dc]        # 0x14000e6f8
   14000211c:	test   rbx,rbx
   14000211f:	je     0x140002136
   140002121:	mov    rcx,rbx
   140002124:	call   QWORD PTR [rip+0x8256]        # 0x14000a380
   14000212a:	mov    rcx,rsi
   14000212d:	call   rbx
   14000212f:	mov    rdi,QWORD PTR [rip+0xc5ca]        # 0x14000e700
   140002136:	cmp    DWORD PTR [rsi+0x4],r13d
   14000213a:	jl     0x14000214a
   14000213c:	cmp    DWORD PTR [rsp+0xb0],0x4
   140002144:	jne    0x1400021f1
   14000214a:	cmp    BYTE PTR [rip+0xc5ef],r13b        # 0x14000e740
   140002151:	mov    rbx,QWORD PTR [rip+0xc5f0]        # 0x14000e748
   140002158:	jne    0x140002167
   14000215a:	test   rdi,rdi
   14000215d:	jne    0x140002164
   14000215f:	test   rbx,rbx
   140002162:	je     0x140002167
   140002164:	mov    r14b,r13b
   140002167:	cmp    BYTE PTR [rsp+0xc8],r13b
   14000216f:	jne    0x140002199
   140002171:	test   r14b,r14b
   140002174:	jne    0x140002199
   140002176:	test   rbx,rbx
   140002179:	je     0x1400021d9
   14000217b:	cmp    BYTE PTR [rip+0xc5ae],r13b        # 0x14000e730
   140002182:	jne    0x1400021d9
   140002184:	mov    rcx,rbx
   140002187:	call   QWORD PTR [rip+0x81f3]        # 0x14000a380
   14000218d:	xor    r8d,r8d
   140002190:	xor    edx,edx
   140002192:	mov    rcx,rsi
   140002195:	call   rbx
   140002197:	jmp    0x1400021d9
   140002199:	mov    edi,0x800
   14000219e:	test   rbx,rbx
   1400021a1:	je     0x1400021b7
   1400021a3:	mov    rcx,rbx
   1400021a6:	call   QWORD PTR [rip+0x81d4]        # 0x14000a380
   1400021ac:	mov    r8d,edi
   1400021af:	mov    rdx,r15
   1400021b2:	mov    rcx,rsi
   1400021b5:	call   rbx
   1400021b7:	cmp    WORD PTR [r15],r13w
   1400021bb:	jne    0x1400021cb
   1400021bd:	mov    r8,rsi
   1400021c0:	mov    rdx,rdi
   1400021c3:	mov    rcx,r15
   1400021c6:	call   0x1400014cc
   1400021cb:	test   r14b,r14b
   1400021ce:	je     0x1400021d9
   1400021d0:	mov    rcx,r15
   1400021d3:	call   QWORD PTR [rip+0x7e47]        # 0x14000a020
   1400021d9:	mov    rbx,QWORD PTR [rsp+0x90]
   1400021e1:	add    rsp,0x40
   1400021e5:	pop    r15
   1400021e7:	pop    r14
   1400021e9:	pop    r13
   1400021eb:	pop    r12
   1400021ed:	pop    rdi
   1400021ee:	pop    rsi
   1400021ef:	pop    rbp
   1400021f0:	ret    
   1400021f1:	mov    rcx,QWORD PTR [rsp+0x78]
   1400021f6:	lea    r8,[rip+0x850b]        # 0x14000a708
   1400021fd:	mov    edx,0xb46
   140002202:	call   0x1400024fc
   140002207:	int3   
   140002208:	int3   
   140002209:	int3   
   14000220a:	int3   
   14000220b:	int3   
   14000220c:	int3   
   14000220d:	int3   
   14000220e:	int3   
   14000220f:	int3   
   140002210:	rex push rbx
   140002212:	push   rdi
   140002213:	mov    eax,0x15c8
   140002218:	call   0x140008760
   14000221d:	sub    rsp,rax
   140002220:	mov    rax,QWORD PTR [rip+0xbde1]        # 0x14000e008
   140002227:	xor    rax,rsp
   14000222a:	mov    QWORD PTR [rsp+0x15b0],rax
   140002232:	mov    edi,DWORD PTR [rsp+0x1610]
   140002239:	mov    r10,QWORD PTR [rsp+0x1600]
   140002241:	mov    r11,QWORD PTR [rsp+0x1608]
   140002249:	test   edi,edi
   14000224b:	jne    0x14000225b
   14000224d:	cmp    QWORD PTR [rip+0xc4b3],0x0        # 0x14000e708
   140002255:	je     0x14000225b
   140002257:	mov    bl,0x1
   140002259:	jmp    0x14000225d
   14000225b:	xor    bl,bl
   14000225d:	lea    rax,[rsp+0x80]
   140002265:	mov    QWORD PTR [rsp+0x70],rax
   14000226a:	lea    rax,[rsp+0x1b0]
   140002272:	mov    QWORD PTR [rsp+0x60],rax
   140002277:	lea    rax,[rsp+0x5b0]
   14000227f:	mov    QWORD PTR [rsp+0x50],rax
   140002284:	mov    eax,DWORD PTR [rsp+0x1618]
   14000228b:	mov    BYTE PTR [rsp+0x48],bl
   14000228f:	and    QWORD PTR [rsp+0x40],0x0
   140002295:	mov    DWORD PTR [rsp+0x38],eax
   140002299:	mov    DWORD PTR [rsp+0x30],edi
   14000229d:	mov    QWORD PTR [rsp+0x28],r11
   1400022a2:	mov    QWORD PTR [rsp+0x20],r10
   1400022a7:	call   0x140001eb4
   1400022ac:	cmp    edi,0x4
   1400022af:	jne    0x1400022d0
   1400022b1:	lea    ecx,[rdi+0x3]
   1400022b4:	int    0x29
   1400022b6:	mov    rcx,QWORD PTR [rsp+0x15b0]
   1400022be:	xor    rcx,rsp
   1400022c1:	call   0x140007eb0
   1400022c6:	add    rsp,0x15c8
   1400022cd:	pop    rdi
   1400022ce:	pop    rbx
   1400022cf:	ret    
   1400022d0:	test   edi,edi
   1400022d2:	jne    0x1400022b6
   1400022d4:	test   bl,bl
   1400022d6:	je     0x1400022fa
   1400022d8:	mov    rbx,QWORD PTR [rip+0xc429]        # 0x14000e708
   1400022df:	mov    rcx,rbx
   1400022e2:	call   QWORD PTR [rip+0x8098]        # 0x14000a380
   1400022e8:	lea    rdx,[rsp+0x5b0]
   1400022f0:	lea    rcx,[rsp+0x80]
   1400022f8:	call   rbx
   1400022fa:	lea    rdx,[rsp+0x80]
   140002302:	lea    rcx,[rsp+0x110]
   14000230a:	call   0x140001e34
   14000230f:	lea    rdx,[rip+0xab3a]        # 0x14000ce50
   140002316:	lea    rcx,[rsp+0x110]
   14000231e:	call   0x1400085cc
   140002323:	int3   
   140002324:	int3   
   140002325:	int3   
   140002326:	int3   
   140002327:	int3   
   140002328:	int3   
   140002329:	int3   
   14000232a:	int3   
   14000232b:	int3   
   14000232c:	rex push rbx
   14000232e:	sub    rsp,0x20
   140002332:	mov    rbx,rcx
   140002335:	mov    rcx,QWORD PTR [rcx+0x90]
   14000233c:	test   rcx,rcx
   14000233f:	je     0x14000236a
   140002341:	or     eax,0xffffffff
   140002344:	lock xadd DWORD PTR [rcx],eax
   140002348:	cmp    eax,0x1
   14000234b:	jne    0x14000235a
   14000234d:	mov    rcx,QWORD PTR [rbx+0x90]
   140002354:	call   QWORD PTR [rip+0x7fee]        # 0x14000a348
   14000235a:	and    QWORD PTR [rbx+0x90],0x0
   140002362:	and    QWORD PTR [rbx+0x98],0x0
   14000236a:	add    rsp,0x20
   14000236e:	pop    rbx
   14000236f:	ret    
   140002370:	int3   
   140002371:	int3   
   140002372:	int3   
   140002373:	int3   
   140002374:	int3   
   140002375:	int3   
   140002376:	int3   
   140002377:	int3   
   140002378:	movups xmm0,XMMWORD PTR [rdx]
   14000237b:	mov    r9d,0x80
   140002381:	movups XMMWORD PTR [rcx],xmm0
   140002384:	movups xmm1,XMMWORD PTR [rdx+0x10]
   140002388:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000238c:	movups xmm0,XMMWORD PTR [rdx+0x20]
   140002390:	movups XMMWORD PTR [rcx+0x20],xmm0
   140002394:	movups xmm1,XMMWORD PTR [rdx+0x30]
   140002398:	movups XMMWORD PTR [rcx+0x30],xmm1
   14000239c:	movups xmm0,XMMWORD PTR [rdx+0x40]
   1400023a0:	movups XMMWORD PTR [rcx+0x40],xmm0
   1400023a4:	movups xmm1,XMMWORD PTR [rdx+0x50]
   1400023a8:	movups XMMWORD PTR [rcx+0x50],xmm1
   1400023ac:	movups xmm0,XMMWORD PTR [rdx+0x60]
   1400023b0:	movups XMMWORD PTR [rcx+0x60],xmm0
   1400023b4:	movups xmm0,XMMWORD PTR [rdx+0x70]
   1400023b8:	movups XMMWORD PTR [rcx+r9*1-0x10],xmm0
   1400023be:	movups xmm1,XMMWORD PTR [rdx+r9*1]
   1400023c3:	movups XMMWORD PTR [rcx+r9*1],xmm1
   1400023c8:	and    QWORD PTR [rcx+0x90],0x0
   1400023d0:	and    QWORD PTR [rcx+0x98],0x0
   1400023d8:	mov    rax,QWORD PTR [rdx+0x90]
   1400023df:	mov    r8,QWORD PTR [rdx+0x98]
   1400023e6:	test   rax,rax
   1400023e9:	je     0x1400023fc
   1400023eb:	mov    QWORD PTR [rcx+0x90],rax
   1400023f2:	mov    QWORD PTR [rcx+0x98],r8
   1400023f9:	lock inc DWORD PTR [rax]
   1400023fc:	mov    rax,rcx
   1400023ff:	ret    
   140002400:	int3   
   140002401:	int3   
   140002402:	int3   
   140002403:	int3   
   140002404:	int3   
   140002405:	int3   
   140002406:	int3   
   140002407:	int3   
   140002408:	sub    rsp,0x58
   14000240c:	mov    eax,DWORD PTR [rsp+0x98]
   140002413:	mov    DWORD PTR [rsp+0x38],eax
   140002417:	mov    eax,DWORD PTR [rsp+0x90]
   14000241e:	mov    DWORD PTR [rsp+0x30],eax
   140002422:	mov    rax,QWORD PTR [rsp+0x88]
   14000242a:	mov    QWORD PTR [rsp+0x28],rax
   14000242f:	mov    rax,QWORD PTR [rsp+0x80]
   140002437:	mov    QWORD PTR [rsp+0x20],rax
   14000243c:	call   0x140002210
   140002441:	add    rsp,0x58
   140002445:	ret    
   140002446:	int3   
   140002447:	int3   
   140002448:	int3   
   140002449:	int3   
   14000244a:	int3   
   14000244b:	int3   
   14000244c:	sub    rsp,0x48
   140002450:	mov    rax,QWORD PTR [rsp+0x48]
   140002455:	lea    r8,[rip+0x830c]        # 0x14000a768
   14000245c:	mov    DWORD PTR [rsp+0x38],r9d
   140002461:	xor    r9d,r9d
   140002464:	mov    DWORD PTR [rsp+0x30],0x1
   14000246c:	mov    QWORD PTR [rsp+0x28],rax
   140002471:	and    QWORD PTR [rsp+0x20],0x0
   140002477:	call   0x140002408
   14000247c:	add    rsp,0x48
   140002480:	ret    
   140002481:	int3   
   140002482:	int3   
   140002483:	int3   
   140002484:	int3   
   140002485:	int3   
   140002486:	int3   
   140002487:	int3   
   140002488:	sub    rsp,0x48
   14000248c:	mov    rax,QWORD PTR [rsp+0x48]
   140002491:	mov    DWORD PTR [rsp+0x38],r9d
   140002496:	xor    r9d,r9d
   140002499:	mov    DWORD PTR [rsp+0x30],0x2
   1400024a1:	mov    QWORD PTR [rsp+0x28],rax
   1400024a6:	and    QWORD PTR [rsp+0x20],0x0
   1400024ac:	call   0x140002408
   1400024b1:	add    rsp,0x48
   1400024b5:	ret    
   1400024b6:	int3   
   1400024b7:	int3   
   1400024b8:	int3   
   1400024b9:	int3   
   1400024ba:	int3   
   1400024bb:	int3   
   1400024bc:	sub    rsp,0x48
   1400024c0:	mov    rax,QWORD PTR [rsp+0x48]
   1400024c5:	lea    r8,[rip+0x823c]        # 0x14000a708
   1400024cc:	mov    DWORD PTR [rsp+0x38],r9d
   1400024d1:	mov    edx,0xad2
   1400024d6:	mov    DWORD PTR [rsp+0x30],0x4
   1400024de:	xor    r9d,r9d
   1400024e1:	mov    QWORD PTR [rsp+0x28],rax
   1400024e6:	and    QWORD PTR [rsp+0x20],0x0
   1400024ec:	call   0x140002408
   1400024f1:	add    rsp,0x48
   1400024f5:	ret    
   1400024f6:	int3   
   1400024f7:	int3   
   1400024f8:	int3   
   1400024f9:	int3   
   1400024fa:	int3   
   1400024fb:	int3   
   1400024fc:	sub    rsp,0x48
   140002500:	mov    rax,QWORD PTR [rsp+0x48]
   140002505:	xor    r9d,r9d
   140002508:	mov    DWORD PTR [rsp+0x38],0x8000ffff
   140002510:	mov    DWORD PTR [rsp+0x30],0x4
   140002518:	mov    QWORD PTR [rsp+0x28],rax
   14000251d:	and    QWORD PTR [rsp+0x20],0x0
   140002523:	call   0x140002408
   140002528:	add    rsp,0x48
   14000252c:	ret    
   14000252d:	int3   
   14000252e:	int3   
   14000252f:	int3   
   140002530:	int3   
   140002531:	int3   
   140002532:	int3   
   140002533:	int3   
   140002534:	sub    rsp,0x48
   140002538:	mov    rax,QWORD PTR [rsp+0x48]
   14000253d:	mov    DWORD PTR [rsp+0x38],r9d
   140002542:	xor    r9d,r9d
   140002545:	and    DWORD PTR [rsp+0x30],0x0
   14000254a:	mov    QWORD PTR [rsp+0x28],rax
   14000254f:	and    QWORD PTR [rsp+0x20],0x0
   140002555:	call   0x140002408
   14000255a:	add    rsp,0x48
   14000255e:	ret    
   14000255f:	int3   
   140002560:	int3   
   140002561:	int3   
   140002562:	int3   
   140002563:	int3   
   140002564:	int3   
   140002565:	int3   
   140002566:	int3   
   140002567:	int3   
   140002568:	int3   
   140002569:	int3   
   14000256a:	int3   
   14000256b:	int3   
   14000256c:	int3   
   14000256d:	int3   
   14000256e:	int3   
   14000256f:	int3   
   140002570:	rex push rdi
   140002572:	sub    rsp,0x30
   140002576:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000257f:	mov    QWORD PTR [rsp+0x40],rbx
   140002584:	mov    QWORD PTR [rsp+0x58],rsi
   140002589:	mov    rsi,rcx
   14000258c:	lea    rbx,[rdx+0x40]
   140002590:	mov    r8,QWORD PTR [rbx+0x8]
   140002594:	mov    rdx,QWORD PTR [rbx+0x10]
   140002598:	cmp    r8,rdx
   14000259b:	jne    0x140002603
   14000259d:	mov    rax,rdx
   1400025a0:	sub    rax,r8
   1400025a3:	sar    rax,0x5
   1400025a7:	cmp    rax,0x1
   1400025ab:	jae    0x140002603
   1400025ad:	sub    r8,QWORD PTR [rbx]
   1400025b0:	sar    r8,0x5
   1400025b4:	movabs rcx,0x7ffffffffffffff
   1400025be:	mov    rax,rcx
   1400025c1:	sub    rax,r8
   1400025c4:	cmp    rax,0x1
   1400025c8:	jae    0x1400025cf
   1400025ca:	call   0x140003d88
   1400025cf:	inc    r8
   1400025d2:	sub    rdx,QWORD PTR [rbx]
   1400025d5:	sar    rdx,0x5
   1400025d9:	mov    rax,rdx
   1400025dc:	shr    rax,1
   1400025df:	sub    rcx,rax
   1400025e2:	cmp    rcx,rdx
   1400025e5:	jae    0x1400025ed
   1400025e7:	xor    edi,edi
   1400025e9:	mov    edx,edi
   1400025eb:	jmp    0x1400025f2
   1400025ed:	add    rdx,rax
   1400025f0:	xor    edi,edi
   1400025f2:	cmp    rdx,r8
   1400025f5:	cmovb  rdx,r8
   1400025f9:	mov    rcx,rbx
   1400025fc:	call   0x140004608
   140002601:	jmp    0x140002605
   140002603:	xor    edi,edi
   140002605:	mov    rcx,QWORD PTR [rbx+0x8]
   140002609:	mov    QWORD PTR [rsp+0x48],rcx
   14000260e:	mov    QWORD PTR [rsp+0x50],rcx
   140002613:	test   rcx,rcx
   140002616:	je     0x140002630
   140002618:	mov    QWORD PTR [rcx+0x18],0x7
   140002620:	mov    QWORD PTR [rcx+0x10],rdi
   140002624:	mov    WORD PTR [rcx],di
   140002627:	mov    rdx,rsi
   14000262a:	call   0x140003b20
   14000262f:	nop
   140002630:	add    QWORD PTR [rbx+0x8],0x20
   140002635:	xor    eax,eax
   140002637:	jmp    0x14000263d
   140002639:	mov    eax,DWORD PTR [rsp+0x48]
   14000263d:	mov    rbx,QWORD PTR [rsp+0x40]
   140002642:	mov    rsi,QWORD PTR [rsp+0x58]
   140002647:	add    rsp,0x30
   14000264b:	pop    rdi
   14000264c:	ret    
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	int3   
   140002651:	int3   
   140002652:	int3   
   140002653:	int3   
   140002654:	mov    rax,rsp
   140002657:	mov    QWORD PTR [rax+0x8],rcx
   14000265b:	push   rsi
   14000265c:	push   rdi
   14000265d:	push   r12
   14000265f:	push   r14
   140002661:	push   r15
   140002663:	sub    rsp,0x30
   140002667:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000266f:	mov    QWORD PTR [rax+0x18],rbx
   140002673:	mov    QWORD PTR [rax+0x20],rbp
   140002677:	mov    r15,r8
   14000267a:	mov    r14,rdx
   14000267d:	mov    rbx,rcx
   140002680:	xor    r12d,r12d
   140002683:	mov    QWORD PTR [rcx],r12
   140002686:	mov    QWORD PTR [rcx+0x8],r12
   14000268a:	mov    QWORD PTR [rcx+0x10],r12
   14000268e:	lea    rsi,[rcx+0x18]
   140002692:	mov    QWORD PTR [rsi],r12
   140002695:	mov    QWORD PTR [rsi+0x8],r12
   140002699:	mov    QWORD PTR [rsi+0x10],r12
   14000269d:	test   rdx,rdx
   1400026a0:	je     0x1400026d0
   1400026a2:	mov    eax,0x7fffffff
   1400026a7:	mov    ecx,eax
   1400026a9:	mov    r9d,r12d
   1400026ac:	cmp    WORD PTR [rdx],r12w
   1400026b0:	je     0x1400026bc
   1400026b2:	add    rdx,0x2
   1400026b6:	sub    rcx,0x1
   1400026ba:	jne    0x1400026ac
   1400026bc:	mov    ebp,0x80070057
   1400026c1:	test   rcx,rcx
   1400026c4:	jne    0x1400026cb
   1400026c6:	mov    rax,r12
   1400026c9:	jmp    0x1400026da
   1400026cb:	sub    rax,rcx
   1400026ce:	jmp    0x1400026dd
   1400026d0:	mov    ebp,0x80070057
   1400026d5:	mov    rax,QWORD PTR [rsp+0x60]
   1400026da:	mov    r9d,ebp
   1400026dd:	test   r9d,r9d
   1400026e0:	cmovs  rax,r12
   1400026e4:	mov    rcx,QWORD PTR [rsp+0x58]
   1400026e9:	jns    0x1400026fd
   1400026eb:	lea    r8,[rip+0x8076]        # 0x14000a768
   1400026f2:	mov    edx,0x3c
   1400026f7:	call   0x140002534
   1400026fc:	int3   
   1400026fd:	lea    rdi,[rax+0x1]
   140002701:	cmp    rdi,rax
   140002704:	jb     0x14000270b
   140002706:	mov    r9d,r12d
   140002709:	jmp    0x140002715
   14000270b:	or     rdi,0xffffffffffffffff
   14000270f:	mov    r9d,0x80070216
   140002715:	mov    rcx,QWORD PTR [rsp+0x58]
   14000271a:	test   r9d,r9d
   14000271d:	jns    0x140002731
   14000271f:	lea    r8,[rip+0x8042]        # 0x14000a768
   140002726:	mov    edx,0x3d
   14000272b:	call   0x140002534
   140002730:	int3   
   140002731:	lea    rdx,[rdi+0x1]
   140002735:	mov    rax,r12
   140002738:	sub    rax,r12
   14000273b:	sar    rax,1
   14000273e:	cmp    rax,rdx
   140002741:	jae    0x140002760
   140002743:	movabs rax,0x7fffffffffffffff
   14000274d:	cmp    rdx,rax
   140002750:	jbe    0x140002758
   140002752:	call   0x140003d88
   140002757:	int3   
   140002758:	mov    rcx,rsi
   14000275b:	call   0x140003ccc
   140002760:	mov    rcx,QWORD PTR [rsi]
   140002763:	lea    rax,[rdi-0x1]
   140002767:	mov    r9d,r12d
   14000276a:	mov    edx,0x7ffffffe
   14000276f:	cmp    rax,rdx
   140002772:	cmova  r9d,ebp
   140002776:	test   r9d,r9d
   140002779:	js     0x1400027ba
   14000277b:	mov    r9d,r12d
   14000277e:	test   rdi,rdi
   140002781:	je     0x1400027ae
   140002783:	sub    rdx,rdi
   140002786:	sub    r14,rcx
   140002789:	lea    rax,[rdx+rdi*1]
   14000278d:	test   rax,rax
   140002790:	je     0x1400027a9
   140002792:	movzx  eax,WORD PTR [r14+rcx*1]
   140002797:	test   ax,ax
   14000279a:	je     0x1400027a9
   14000279c:	mov    WORD PTR [rcx],ax
   14000279f:	add    rcx,0x2
   1400027a3:	sub    rdi,0x1
   1400027a7:	jne    0x140002789
   1400027a9:	test   rdi,rdi
   1400027ac:	jne    0x1400027bf
   1400027ae:	sub    rcx,0x2
   1400027b2:	mov    r9d,0x8007007a
   1400027b8:	jmp    0x1400027bf
   1400027ba:	test   rdi,rdi
   1400027bd:	je     0x1400027c3
   1400027bf:	mov    WORD PTR [rcx],r12w
   1400027c3:	mov    rcx,QWORD PTR [rsp+0x58]
   1400027c8:	test   r9d,r9d
   1400027cb:	jns    0x1400027df
   1400027cd:	lea    r8,[rip+0x7f94]        # 0x14000a768
   1400027d4:	mov    edx,0x3f
   1400027d9:	call   0x140002534
   1400027de:	int3   
   1400027df:	mov    QWORD PTR [rsp+0x68],r12
   1400027e4:	lea    r8,[rsp+0x68]
   1400027e9:	mov    rdx,r15
   1400027ec:	mov    rcx,QWORD PTR [rsi]
   1400027ef:	call   QWORD PTR [rip+0x7b13]        # 0x14000a308
   1400027f5:	mov    rdi,rax
   1400027f8:	test   rax,rax
   1400027fb:	je     0x1400028a1
   140002801:	movabs rsi,0x1fffffffffffffff
   14000280b:	mov    r8,QWORD PTR [rbx+0x8]
   14000280f:	mov    rdx,QWORD PTR [rbx+0x10]
   140002813:	cmp    r8,rdx
   140002816:	jne    0x14000286d
   140002818:	mov    rcx,rdx
   14000281b:	sub    rcx,r8
   14000281e:	sar    rcx,0x3
   140002822:	cmp    rcx,0x1
   140002826:	jae    0x14000286d
   140002828:	sub    r8,QWORD PTR [rbx]
   14000282b:	sar    r8,0x3
   14000282f:	mov    rax,rsi
   140002832:	sub    rax,r8
   140002835:	cmp    rax,0x1
   140002839:	jb     0x14000289b
   14000283b:	inc    r8
   14000283e:	sub    rdx,QWORD PTR [rbx]
   140002841:	sar    rdx,0x3
   140002845:	mov    rcx,rdx
   140002848:	shr    rcx,1
   14000284b:	mov    rax,rsi
   14000284e:	sub    rax,rcx
   140002851:	cmp    rax,rdx
   140002854:	jae    0x14000285b
   140002856:	mov    rdx,r12
   140002859:	jmp    0x14000285e
   14000285b:	add    rdx,rcx
   14000285e:	cmp    rdx,r8
   140002861:	cmovb  rdx,r8
   140002865:	mov    rcx,rbx
   140002868:	call   0x14000405c
   14000286d:	mov    rax,QWORD PTR [rbx+0x8]
   140002871:	test   rax,rax
   140002874:	je     0x140002879
   140002876:	mov    QWORD PTR [rax],rdi
   140002879:	add    QWORD PTR [rbx+0x8],0x8
   14000287e:	lea    r8,[rsp+0x68]
   140002883:	mov    rdx,r15
   140002886:	xor    ecx,ecx
   140002888:	call   QWORD PTR [rip+0x7a7a]        # 0x14000a308
   14000288e:	mov    rdi,rax
   140002891:	test   rax,rax
   140002894:	je     0x1400028a1
   140002896:	jmp    0x14000280b
   14000289b:	call   0x140003d88
   1400028a0:	nop
   1400028a1:	mov    rax,rbx
   1400028a4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400028a9:	mov    rbp,QWORD PTR [rsp+0x78]
   1400028ae:	add    rsp,0x30
   1400028b2:	pop    r15
   1400028b4:	pop    r14
   1400028b6:	pop    r12
   1400028b8:	pop    rdi
   1400028b9:	pop    rsi
   1400028ba:	ret    
   1400028bb:	int3   
   1400028bc:	int3   
   1400028bd:	int3   
   1400028be:	int3   
   1400028bf:	int3   
   1400028c0:	int3   
   1400028c1:	int3   
   1400028c2:	int3   
   1400028c3:	int3   
   1400028c4:	mov    rax,rsp
   1400028c7:	mov    QWORD PTR [rax+0x8],rcx
   1400028cb:	push   rdi
   1400028cc:	push   r12
   1400028ce:	push   r13
   1400028d0:	push   r14
   1400028d2:	push   r15
   1400028d4:	sub    rsp,0xe0
   1400028db:	mov    QWORD PTR [rax-0x68],0xfffffffffffffffe
   1400028e3:	mov    QWORD PTR [rax+0x18],rbx
   1400028e7:	mov    QWORD PTR [rax+0x20],rsi
   1400028eb:	mov    rdi,rdx
   1400028ee:	mov    rbx,rcx
   1400028f1:	xor    r12d,r12d
   1400028f4:	cmp    DWORD PTR [rdx],r12d
   1400028f7:	je     0x140002b2b
   1400028fd:	mov    DWORD PTR [rax+0x10],0x3b
   140002904:	lea    r8,[rax+0x10]
   140002908:	mov    rdx,QWORD PTR [rdx+0x8]
   14000290c:	lea    rcx,[rsp+0x70]
   140002911:	call   0x140002654
   140002916:	nop
   140002917:	xorps  xmm0,xmm0
   14000291a:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140002920:	xorps  xmm1,xmm1
   140002923:	movdqu XMMWORD PTR [rsp+0x50],xmm1
   140002929:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   14000292f:	cmp    DWORD PTR [rdi+0x10],r12d
   140002933:	je     0x140002a01
   140002939:	lea    r8,[rsp+0x118]
   140002941:	mov    rdx,QWORD PTR [rdi+0x18]
   140002945:	lea    rcx,[rsp+0xa8]
   14000294d:	call   0x140002654
   140002952:	mov    rdx,rax
   140002955:	lea    rax,[rsp+0x40]
   14000295a:	cmp    rax,rdx
   14000295d:	je     0x140002986
   14000295f:	mov    rsi,QWORD PTR [rdx]
   140002962:	mov    QWORD PTR [rsp+0x40],rsi
   140002967:	mov    rcx,QWORD PTR [rdx+0x8]
   14000296b:	mov    QWORD PTR [rsp+0x48],rcx
   140002970:	mov    rax,QWORD PTR [rdx+0x10]
   140002974:	mov    QWORD PTR [rsp+0x50],rax
   140002979:	mov    QWORD PTR [rdx],r12
   14000297c:	mov    QWORD PTR [rdx+0x8],r12
   140002980:	mov    QWORD PTR [rdx+0x10],r12
   140002984:	jmp    0x14000298b
   140002986:	mov    rsi,QWORD PTR [rsp+0x40]
   14000298b:	add    rdx,0x18
   14000298f:	lea    rax,[rsp+0x58]
   140002994:	cmp    rax,rdx
   140002997:	je     0x1400029c0
   140002999:	mov    r14,QWORD PTR [rdx]
   14000299c:	mov    QWORD PTR [rsp+0x58],r14
   1400029a1:	mov    rax,QWORD PTR [rdx+0x8]
   1400029a5:	mov    QWORD PTR [rsp+0x60],rax
   1400029aa:	mov    rax,QWORD PTR [rdx+0x10]
   1400029ae:	mov    QWORD PTR [rsp+0x68],rax
   1400029b3:	mov    QWORD PTR [rdx],r12
   1400029b6:	mov    QWORD PTR [rdx+0x8],r12
   1400029ba:	mov    QWORD PTR [rdx+0x10],r12
   1400029be:	jmp    0x1400029c5
   1400029c0:	mov    r14,QWORD PTR [rsp+0x58]
   1400029c5:	mov    rcx,QWORD PTR [rsp+0xc0]
   1400029cd:	test   rcx,rcx
   1400029d0:	je     0x1400029ec
   1400029d2:	call   QWORD PTR [rip+0x7938]        # 0x14000a310
   1400029d8:	xorps  xmm0,xmm0
   1400029db:	movdqu XMMWORD PTR [rsp+0xc0],xmm0
   1400029e4:	mov    QWORD PTR [rsp+0xd0],r12
   1400029ec:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400029f4:	test   rcx,rcx
   1400029f7:	je     0x140002a0b
   1400029f9:	call   QWORD PTR [rip+0x7911]        # 0x14000a310
   1400029ff:	jmp    0x140002a0b
   140002a01:	mov    r14,QWORD PTR [rsp+0x58]
   140002a06:	mov    rsi,QWORD PTR [rsp+0x40]
   140002a0b:	mov    r13d,DWORD PTR [rdi+0x3c]
   140002a0f:	mov    r15,QWORD PTR [rsp+0x48]
   140002a14:	sub    r15,rsi
   140002a17:	sar    r15,0x3
   140002a1b:	mov    eax,0xffffffff
   140002a20:	mov    r9d,0x80070216
   140002a26:	cmp    r15,rax
   140002a29:	ja     0x140002a30
   140002a2b:	mov    ecx,r12d
   140002a2e:	jmp    0x140002a36
   140002a30:	mov    r15d,eax
   140002a33:	mov    ecx,r9d
   140002a36:	mov    r10,QWORD PTR [rsp+0x108]
   140002a3e:	test   ecx,ecx
   140002a40:	jns    0x140002a59
   140002a42:	mov    r9d,ecx
   140002a45:	lea    r8,[rip+0x7d1c]        # 0x14000a768
   140002a4c:	mov    edx,0x5a
   140002a51:	mov    rcx,r10
   140002a54:	call   0x140002534
   140002a59:	mov    r12,QWORD PTR [rsp+0x78]
   140002a5e:	sub    r12,QWORD PTR [rsp+0x70]
   140002a63:	sar    r12,0x3
   140002a67:	cmp    r12,rax
   140002a6a:	ja     0x140002a71
   140002a6c:	xor    r9d,r9d
   140002a6f:	jmp    0x140002a74
   140002a71:	mov    r12d,eax
   140002a74:	mov    rcx,QWORD PTR [rsp+0x108]
   140002a7c:	test   r9d,r9d
   140002a7f:	jns    0x140002a92
   140002a81:	lea    r8,[rip+0x7ce0]        # 0x14000a768
   140002a88:	mov    edx,0x5a
   140002a8d:	call   0x140002534
   140002a92:	mov    rax,QWORD PTR [rbx]
   140002a95:	xor    ebx,ebx
   140002a97:	test   r13d,r13d
   140002a9a:	setne  bl
   140002a9d:	mov    rdi,QWORD PTR [rax+0x18]
   140002aa1:	mov    rcx,rdi
   140002aa4:	call   QWORD PTR [rip+0x78d6]        # 0x14000a380
   140002aaa:	mov    DWORD PTR [rsp+0x30],r13d
   140002aaf:	mov    DWORD PTR [rsp+0x28],ebx
   140002ab3:	mov    DWORD PTR [rsp+0x20],r15d
   140002ab8:	mov    r9,rsi
   140002abb:	mov    r8d,r12d
   140002abe:	mov    rdx,QWORD PTR [rsp+0x70]
   140002ac3:	mov    rcx,QWORD PTR [rsp+0x110]
   140002acb:	call   rdi
   140002acd:	mov    ebx,eax
   140002acf:	test   r14,r14
   140002ad2:	je     0x140002add
   140002ad4:	mov    rcx,r14
   140002ad7:	call   QWORD PTR [rip+0x7833]        # 0x14000a310
   140002add:	test   rsi,rsi
   140002ae0:	je     0x140002aec
   140002ae2:	mov    rcx,rsi
   140002ae5:	call   QWORD PTR [rip+0x7825]        # 0x14000a310
   140002aeb:	nop
   140002aec:	mov    rcx,QWORD PTR [rsp+0x88]
   140002af4:	test   rcx,rcx
   140002af7:	je     0x140002b14
   140002af9:	call   QWORD PTR [rip+0x7811]        # 0x14000a310
   140002aff:	xorps  xmm0,xmm0
   140002b02:	movdqu XMMWORD PTR [rsp+0x88],xmm0
   140002b0b:	and    QWORD PTR [rsp+0x98],0x0
   140002b14:	mov    rcx,QWORD PTR [rsp+0x70]
   140002b19:	test   rcx,rcx
   140002b1c:	je     0x140002b24
   140002b1e:	call   QWORD PTR [rip+0x77ec]        # 0x14000a310
   140002b24:	mov    eax,ebx
   140002b26:	jmp    0x140002d79
   140002b2b:	mov    rax,QWORD PTR [rdx+0x48]
   140002b2f:	cmp    QWORD PTR [rdx+0x40],rax
   140002b33:	je     0x140002d6b
   140002b39:	xorps  xmm0,xmm0
   140002b3c:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   140002b42:	mov    rdx,r12
   140002b45:	mov    QWORD PTR [rsp+0x50],rdx
   140002b4a:	mov    rbx,QWORD PTR [rdi+0x40]
   140002b4e:	mov    rdi,rax
   140002b51:	movabs r13,0x1fffffffffffffff
   140002b5b:	mov    rsi,QWORD PTR [rsp+0x48]
   140002b60:	mov    r14,QWORD PTR [rsp+0x40]
   140002b65:	cmp    rbx,rdi
   140002b68:	je     0x140002cd1
   140002b6e:	cmp    QWORD PTR [rbx+0x18],0x8
   140002b73:	jb     0x140002b7a
   140002b75:	mov    r15,QWORD PTR [rbx]
   140002b78:	jmp    0x140002b7d
   140002b7a:	mov    r15,rbx
   140002b7d:	mov    QWORD PTR [rsp+0x118],r15
   140002b85:	lea    rax,[rsp+0x118]
   140002b8d:	cmp    rax,rsi
   140002b90:	jae    0x140002c38
   140002b96:	lea    rax,[rsp+0x118]
   140002b9e:	cmp    r14,rax
   140002ba1:	ja     0x140002c38
   140002ba7:	lea    r15,[rsp+0x118]
   140002baf:	sub    r15,r14
   140002bb2:	sar    r15,0x3
   140002bb6:	cmp    rsi,rdx
   140002bb9:	jne    0x140002c26
   140002bbb:	mov    rax,rdx
   140002bbe:	sub    rax,rsi
   140002bc1:	sar    rax,0x3
   140002bc5:	cmp    rax,0x1
   140002bc9:	jae    0x140002c26
   140002bcb:	sub    rsi,r14
   140002bce:	sar    rsi,0x3
   140002bd2:	mov    rax,r13
   140002bd5:	sub    rax,rsi
   140002bd8:	cmp    rax,0x1
   140002bdc:	jae    0x140002be3
   140002bde:	call   0x140003d88
   140002be3:	inc    rsi
   140002be6:	sub    rdx,r14
   140002be9:	sar    rdx,0x3
   140002bed:	mov    rcx,rdx
   140002bf0:	shr    rcx,1
   140002bf3:	mov    rax,r13
   140002bf6:	sub    rax,rcx
   140002bf9:	cmp    rax,rdx
   140002bfc:	jae    0x140002c03
   140002bfe:	mov    rdx,r12
   140002c01:	jmp    0x140002c06
   140002c03:	add    rdx,rcx
   140002c06:	cmp    rdx,rsi
   140002c09:	cmovb  rdx,rsi
   140002c0d:	lea    rcx,[rsp+0x40]
   140002c12:	call   0x14000405c
   140002c17:	mov    rdx,QWORD PTR [rsp+0x50]
   140002c1c:	mov    rsi,QWORD PTR [rsp+0x48]
   140002c21:	mov    r14,QWORD PTR [rsp+0x40]
   140002c26:	test   rsi,rsi
   140002c29:	je     0x140002cbf
   140002c2f:	mov    rax,QWORD PTR [r14+r15*8]
   140002c33:	mov    QWORD PTR [rsi],rax
   140002c36:	jmp    0x140002cb0
   140002c38:	cmp    rsi,rdx
   140002c3b:	jne    0x140002ca8
   140002c3d:	mov    rax,rdx
   140002c40:	sub    rax,rsi
   140002c43:	sar    rax,0x3
   140002c47:	cmp    rax,0x1
   140002c4b:	jae    0x140002ca8
   140002c4d:	sub    rsi,r14
   140002c50:	sar    rsi,0x3
   140002c54:	mov    rax,r13
   140002c57:	sub    rax,rsi
   140002c5a:	cmp    rax,0x1
   140002c5e:	jae    0x140002c65
   140002c60:	call   0x140003d88
   140002c65:	inc    rsi
   140002c68:	sub    rdx,r14
   140002c6b:	sar    rdx,0x3
   140002c6f:	mov    rcx,rdx
   140002c72:	shr    rcx,1
   140002c75:	mov    rax,r13
   140002c78:	sub    rax,rcx
   140002c7b:	cmp    rax,rdx
   140002c7e:	jae    0x140002c85
   140002c80:	mov    rdx,r12
   140002c83:	jmp    0x140002c88
   140002c85:	add    rdx,rcx
   140002c88:	cmp    rdx,rsi
   140002c8b:	cmovb  rdx,rsi
   140002c8f:	lea    rcx,[rsp+0x40]
   140002c94:	call   0x14000405c
   140002c99:	mov    rdx,QWORD PTR [rsp+0x50]
   140002c9e:	mov    rsi,QWORD PTR [rsp+0x48]
   140002ca3:	mov    r14,QWORD PTR [rsp+0x40]
   140002ca8:	test   rsi,rsi
   140002cab:	je     0x140002cbf
   140002cad:	mov    QWORD PTR [rsi],r15
   140002cb0:	mov    rdx,QWORD PTR [rsp+0x50]
   140002cb5:	mov    r14,QWORD PTR [rsp+0x40]
   140002cba:	mov    rsi,QWORD PTR [rsp+0x48]
   140002cbf:	add    rsi,0x8
   140002cc3:	mov    QWORD PTR [rsp+0x48],rsi
   140002cc8:	add    rbx,0x20
   140002ccc:	jmp    0x140002b65
   140002cd1:	sub    rsi,r14
   140002cd4:	sar    rsi,0x3
   140002cd8:	mov    eax,0xffffffff
   140002cdd:	cmp    rsi,rax
   140002ce0:	ja     0x140002ce7
   140002ce2:	mov    r9d,r12d
   140002ce5:	jmp    0x140002cef
   140002ce7:	mov    esi,eax
   140002ce9:	mov    r9d,0x80070216
   140002cef:	mov    rcx,QWORD PTR [rsp+0x108]
   140002cf7:	test   r9d,r9d
   140002cfa:	jns    0x140002d0d
   140002cfc:	lea    r8,[rip+0x7a65]        # 0x14000a768
   140002d03:	mov    edx,0x7f
   140002d08:	call   0x140002534
   140002d0d:	mov    r15,QWORD PTR [rsp+0x110]
   140002d15:	mov    rax,QWORD PTR [r15]
   140002d18:	mov    rbx,QWORD PTR [rax+0x18]
   140002d1c:	mov    rcx,rbx
   140002d1f:	call   QWORD PTR [rip+0x765b]        # 0x14000a380
   140002d25:	mov    DWORD PTR [rsp+0x30],0x5
   140002d2d:	mov    DWORD PTR [rsp+0x28],0x1
   140002d35:	mov    DWORD PTR [rsp+0x20],r12d
   140002d3a:	xor    r9d,r9d
   140002d3d:	mov    r8d,esi
   140002d40:	mov    rdx,r14
   140002d43:	mov    rcx,r15
   140002d46:	call   rbx
   140002d48:	mov    ebx,eax
   140002d4a:	cmp    QWORD PTR [rsp+0x40],r12
   140002d4f:	je     0x140002d67
   140002d51:	lea    rcx,[rsp+0x40]
   140002d56:	call   QWORD PTR [rip+0x74dc]        # 0x14000a238
   140002d5c:	mov    rcx,QWORD PTR [rsp+0x40]
   140002d61:	call   QWORD PTR [rip+0x75a9]        # 0x14000a310
   140002d67:	mov    eax,ebx
   140002d69:	jmp    0x140002d79
   140002d6b:	mov    eax,0x80070057
   140002d70:	jmp    0x140002d79
   140002d72:	mov    eax,DWORD PTR [rsp+0x118]
   140002d79:	lea    r11,[rsp+0xe0]
   140002d81:	mov    rbx,QWORD PTR [r11+0x40]
   140002d85:	mov    rsi,QWORD PTR [r11+0x48]
   140002d89:	mov    rsp,r11
   140002d8c:	pop    r15
   140002d8e:	pop    r14
   140002d90:	pop    r13
   140002d92:	pop    r12
   140002d94:	pop    rdi
   140002d95:	ret    
   140002d96:	int3   
   140002d97:	int3   
   140002d98:	int3   
   140002d99:	int3   
   140002d9a:	int3   
   140002d9b:	int3   
   140002d9c:	int3   
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	rex push rbx
   140002da2:	sub    rsp,0x20
   140002da6:	mov    rbx,rcx
   140002da9:	mov    rcx,QWORD PTR [rcx+0x18]
   140002dad:	test   rcx,rcx
   140002db0:	je     0x140002dc7
   140002db2:	call   QWORD PTR [rip+0x7558]        # 0x14000a310
   140002db8:	and    QWORD PTR [rbx+0x18],0x0
   140002dbd:	and    QWORD PTR [rbx+0x20],0x0
   140002dc2:	and    QWORD PTR [rbx+0x28],0x0
   140002dc7:	mov    rcx,QWORD PTR [rbx]
   140002dca:	test   rcx,rcx
   140002dcd:	je     0x140002de3
   140002dcf:	call   QWORD PTR [rip+0x753b]        # 0x14000a310
   140002dd5:	and    QWORD PTR [rbx],0x0
   140002dd9:	and    QWORD PTR [rbx+0x8],0x0
   140002dde:	and    QWORD PTR [rbx+0x10],0x0
   140002de3:	add    rsp,0x20
   140002de7:	pop    rbx
   140002de8:	ret    
   140002de9:	int3   
   140002dea:	int3   
   140002deb:	int3   
   140002dec:	int3   
   140002ded:	int3   
   140002dee:	int3   
   140002def:	int3   
   140002df0:	mov    r11,rsp
   140002df3:	push   r14
   140002df5:	sub    rsp,0xb0
   140002dfc:	mov    QWORD PTR [r11-0x58],0xfffffffffffffffe
   140002e04:	mov    QWORD PTR [r11+0x8],rbx
   140002e08:	mov    QWORD PTR [r11+0x10],rsi
   140002e0c:	mov    QWORD PTR [r11+0x18],rdi
   140002e10:	mov    rax,QWORD PTR [rip+0xb1f1]        # 0x14000e008
   140002e17:	xor    rax,rsp
   140002e1a:	mov    QWORD PTR [rsp+0xa8],rax
   140002e22:	mov    r14d,0x7
   140002e28:	mov    QWORD PTR [r11-0x18],r14
   140002e2c:	xor    esi,esi
   140002e2e:	mov    QWORD PTR [r11-0x20],rsi
   140002e32:	mov    WORD PTR [r11-0x30],si
   140002e37:	lea    rcx,[r11-0x78]
   140002e3b:	call   0x140004a24
   140002e40:	nop
   140002e41:	lea    rcx,[rsp+0x40]
   140002e46:	call   0x140004f10
   140002e4b:	lea    rdx,[rsp+0x28]
   140002e50:	lea    rcx,[rsp+0x40]
   140002e55:	call   0x140005190
   140002e5a:	nop
   140002e5b:	mov    rbx,QWORD PTR [rsp+0x28]
   140002e60:	mov    rdi,QWORD PTR [rsp+0x30]
   140002e65:	cmp    rbx,rdi
   140002e68:	je     0x140002f77
   140002e6e:	mov    rcx,QWORD PTR [rbx]
   140002e71:	call   0x140006440
   140002e76:	inc    esi
   140002e78:	mov    rcx,QWORD PTR [rbx]
   140002e7b:	call   0x140007170
   140002e80:	cmp    QWORD PTR [rax+0x18],0x8
   140002e85:	jb     0x140002e8a
   140002e87:	mov    rax,QWORD PTR [rax]
   140002e8a:	mov    rdx,rax
   140002e8d:	lea    rcx,[rip+0x78fc]        # 0x14000a790
   140002e94:	call   QWORD PTR [rip+0x749e]        # 0x14000a338
   140002e9a:	lea    rdx,[rsp+0x68]
   140002e9f:	mov    rcx,QWORD PTR [rbx]
   140002ea2:	call   0x1400074b4
   140002ea7:	cmp    QWORD PTR [rax+0x18],0x8
   140002eac:	jb     0x140002eb1
   140002eae:	mov    rax,QWORD PTR [rax]
   140002eb1:	mov    rdx,rax
   140002eb4:	lea    rcx,[rip+0x78e5]        # 0x14000a7a0
   140002ebb:	call   QWORD PTR [rip+0x7477]        # 0x14000a338
   140002ec1:	cmp    QWORD PTR [rsp+0x80],0x8
   140002eca:	jb     0x140002ed7
   140002ecc:	mov    rcx,QWORD PTR [rsp+0x68]
   140002ed1:	call   QWORD PTR [rip+0x7439]        # 0x14000a310
   140002ed7:	lea    rdx,[rsp+0x68]
   140002edc:	mov    rcx,QWORD PTR [rbx]
   140002edf:	call   0x1400072c0
   140002ee4:	cmp    QWORD PTR [rax+0x18],0x8
   140002ee9:	jb     0x140002eee
   140002eeb:	mov    rax,QWORD PTR [rax]
   140002eee:	mov    rdx,rax
   140002ef1:	lea    rcx,[rip+0x78c0]        # 0x14000a7b8
   140002ef8:	call   QWORD PTR [rip+0x743a]        # 0x14000a338
   140002efe:	cmp    QWORD PTR [rsp+0x80],0x8
   140002f07:	jb     0x140002f14
   140002f09:	mov    rcx,QWORD PTR [rsp+0x68]
   140002f0e:	call   QWORD PTR [rip+0x73fc]        # 0x14000a310
   140002f14:	mov    rcx,QWORD PTR [rbx]
   140002f17:	call   0x140007500
   140002f1c:	mov    rdx,rax
   140002f1f:	lea    rcx,[rip+0x78b2]        # 0x14000a7d8
   140002f26:	call   QWORD PTR [rip+0x740c]        # 0x14000a338
   140002f2c:	mov    rdx,QWORD PTR [rbx]
   140002f2f:	add    rdx,0x88
   140002f36:	cmp    QWORD PTR [rdx+0x18],0x8
   140002f3b:	jb     0x140002f40
   140002f3d:	mov    rdx,QWORD PTR [rdx]
   140002f40:	lea    rcx,[rip+0x78b1]        # 0x14000a7f8
   140002f47:	call   QWORD PTR [rip+0x73eb]        # 0x14000a338
   140002f4d:	mov    rdx,QWORD PTR [rbx]
   140002f50:	add    rdx,0xa8
   140002f57:	cmp    QWORD PTR [rdx+0x18],0x8
   140002f5c:	jb     0x140002f61
   140002f5e:	mov    rdx,QWORD PTR [rdx]
   140002f61:	lea    rcx,[rip+0x78a8]        # 0x14000a810
   140002f68:	call   QWORD PTR [rip+0x73ca]        # 0x14000a338
   140002f6e:	add    rbx,0x8
   140002f72:	jmp    0x140002e65
   140002f77:	lea    rcx,[rsp+0x28]
   140002f7c:	call   0x140003994
   140002f81:	mov    edx,esi
   140002f83:	lea    rcx,[rip+0x78a6]        # 0x14000a830
   140002f8a:	call   QWORD PTR [rip+0x73a8]        # 0x14000a338
   140002f90:	nop
   140002f91:	lea    rcx,[rsp+0x40]
   140002f96:	call   0x140004ae8
   140002f9b:	nop
   140002f9c:	cmp    r14,0x8
   140002fa0:	jb     0x140002fb1
   140002fa2:	mov    rcx,QWORD PTR [rsp+0x88]
   140002faa:	call   QWORD PTR [rip+0x7360]        # 0x14000a310
   140002fb0:	nop
   140002fb1:	xor    eax,eax
   140002fb3:	jmp    0x140002fb9
   140002fb5:	mov    eax,DWORD PTR [rsp+0x20]
   140002fb9:	mov    rcx,QWORD PTR [rsp+0xa8]
   140002fc1:	xor    rcx,rsp
   140002fc4:	call   0x140007eb0
   140002fc9:	lea    r11,[rsp+0xb0]
   140002fd1:	mov    rbx,QWORD PTR [r11+0x10]
   140002fd5:	mov    rsi,QWORD PTR [r11+0x18]
   140002fd9:	mov    rdi,QWORD PTR [r11+0x20]
   140002fdd:	mov    rsp,r11
   140002fe0:	pop    r14
   140002fe2:	ret    
   140002fe3:	int3   
   140002fe4:	int3   
   140002fe5:	int3   
   140002fe6:	int3   
   140002fe7:	int3   
   140002fe8:	int3   
   140002fe9:	int3   
   140002fea:	int3   
   140002feb:	int3   
   140002fec:	mov    rax,rsp
   140002fef:	push   rbp
   140002ff0:	push   rdi
   140002ff1:	push   r12
   140002ff3:	push   r14
   140002ff5:	push   r15
   140002ff7:	lea    rbp,[rax-0x78]
   140002ffb:	sub    rsp,0x150
   140003002:	mov    QWORD PTR [rbp-0x50],0xfffffffffffffffe
   14000300a:	mov    QWORD PTR [rax+0x10],rbx
   14000300e:	mov    QWORD PTR [rax+0x18],rsi
   140003012:	mov    rax,QWORD PTR [rip+0xafef]        # 0x14000e008
   140003019:	xor    rax,rsp
   14000301c:	mov    QWORD PTR [rbp+0x40],rax
   140003020:	mov    rbx,rcx
   140003023:	xor    r14d,r14d
   140003026:	mov    DWORD PTR [rbp-0x48],r14d
   14000302a:	mov    r9b,r14b
   14000302d:	mov    BYTE PTR [rbp-0x44],r14b
   140003031:	movabs rdi,0x200000000000
   14000303b:	mov    rcx,QWORD PTR [rip+0xb006]        # 0x14000e048
   140003042:	mov    r8,QWORD PTR [rip+0xaff7]        # 0x14000e040
   140003049:	mov    edx,DWORD PTR [rip+0xafe1]        # 0x14000e030
   14000304f:	cmp    edx,0x5
   140003052:	jbe    0x14000308c
   140003054:	test   rdi,r8
   140003057:	je     0x14000308c
   140003059:	mov    rax,rcx
   14000305c:	and    rax,rdi
   14000305f:	cmp    rax,rcx
   140003062:	jne    0x14000308c
   140003064:	lea    rdx,[rbp-0x40]
   140003068:	lea    ecx,[r14+0x3]
   14000306c:	call   QWORD PTR [rip+0x7176]        # 0x14000a1e8
   140003072:	mov    r9b,BYTE PTR [rbp-0x44]
   140003076:	mov    rcx,QWORD PTR [rip+0xafcb]        # 0x14000e048
   14000307d:	mov    r8,QWORD PTR [rip+0xafbc]        # 0x14000e040
   140003084:	mov    edx,DWORD PTR [rip+0xafa6]        # 0x14000e030
   14000308a:	jmp    0x140003092
   14000308c:	xor    eax,eax
   14000308e:	mov    QWORD PTR [rbp-0x40],rax
   140003092:	mov    DWORD PTR [rbp-0x48],0x1
   140003099:	lea    r12,[rip+0xaf90]        # 0x14000e030
   1400030a0:	cmp    edx,0x5
   1400030a3:	jbe    0x140003113
   1400030a5:	test   rdi,r8
   1400030a8:	je     0x140003113
   1400030aa:	mov    rax,rcx
   1400030ad:	and    rax,rdi
   1400030b0:	cmp    rax,rcx
   1400030b3:	jne    0x140003113
   1400030b5:	test   r9b,r9b
   1400030b8:	je     0x1400030d8
   1400030ba:	cmp    DWORD PTR [rbp-0x30],r14d
   1400030be:	jne    0x1400030d2
   1400030c0:	cmp    DWORD PTR [rbp-0x2c],r14d
   1400030c4:	jne    0x1400030d2
   1400030c6:	cmp    DWORD PTR [rbp-0x28],r14d
   1400030ca:	jne    0x1400030d2
   1400030cc:	cmp    DWORD PTR [rbp-0x24],r14d
   1400030d0:	je     0x1400030d8
   1400030d2:	lea    r9,[rbp-0x30]
   1400030d6:	jmp    0x1400030db
   1400030d8:	mov    r9,r14
   1400030db:	lea    rax,[rbp+0x10]
   1400030df:	mov    QWORD PTR [rsp+0x28],rax
   1400030e4:	mov    DWORD PTR [rsp+0x20],0x2
   1400030ec:	lea    r8,[rbp-0x40]
   1400030f0:	lea    rdx,[rip+0x7f56]        # 0x14000b04d
   1400030f7:	mov    rcx,r12
   1400030fa:	call   0x140001008
   1400030ff:	mov    rcx,QWORD PTR [rip+0xaf42]        # 0x14000e048
   140003106:	mov    r8,QWORD PTR [rip+0xaf33]        # 0x14000e040
   14000310d:	mov    edx,DWORD PTR [rip+0xaf1d]        # 0x14000e030
   140003113:	movabs rsi,0x400000000000
   14000311d:	mov    r15d,0x4
   140003123:	cmp    edx,r15d
   140003126:	jbe    0x140003191
   140003128:	test   rsi,r8
   14000312b:	je     0x140003191
   14000312d:	mov    rax,rcx
   140003130:	and    rax,rsi
   140003133:	cmp    rax,rcx
   140003136:	jne    0x140003191
   140003138:	lea    rcx,[rip+0x7401]        # 0x14000a540
   14000313f:	mov    rax,r14
   140003142:	test   rbx,rbx
   140003145:	je     0x140003158
   140003147:	mov    rcx,rbx
   14000314a:	or     rax,0xffffffffffffffff
   14000314e:	inc    rax
   140003151:	cmp    WORD PTR [rbx+rax*2],r14w
   140003156:	jne    0x14000314e
   140003158:	mov    QWORD PTR [rbp+0x30],rcx
   14000315c:	lea    eax,[rax*2+0x2]
   140003163:	mov    DWORD PTR [rbp+0x38],eax
   140003166:	mov    DWORD PTR [rbp+0x3c],r14d
   14000316a:	lea    rax,[rbp+0x10]
   14000316e:	mov    QWORD PTR [rsp+0x28],rax
   140003173:	mov    DWORD PTR [rsp+0x20],0x3
   14000317b:	xor    r9d,r9d
   14000317e:	lea    r8,[rbp-0x40]
   140003182:	lea    rdx,[rip+0x7eed]        # 0x14000b076
   140003189:	mov    rcx,r12
   14000318c:	call   0x140001008
   140003191:	mov    DWORD PTR [rsp+0x30],r14d
   140003196:	lea    rax,[rsp+0x30]
   14000319b:	mov    QWORD PTR [rbp-0x20],rax
   14000319f:	lea    rax,[rbp-0x48]
   1400031a3:	mov    QWORD PTR [rbp-0x18],rax
   1400031a7:	lea    rdx,[rbp-0x20]
   1400031ab:	lea    rcx,[rbp+0x10]
   1400031af:	call   0x140004558
   1400031b4:	nop
   1400031b5:	xor    edx,edx
   1400031b7:	xor    ecx,ecx
   1400031b9:	call   QWORD PTR [rip+0x6e41]        # 0x14000a000
   1400031bf:	mov    edi,eax
   1400031c1:	mov    DWORD PTR [rsp+0x30],eax
   1400031c5:	test   eax,eax
   1400031c7:	jns    0x1400031e6
   1400031c9:	mov    rcx,QWORD PTR [rbp+0x78]
   1400031cd:	mov    r9d,eax
   1400031d0:	lea    r8,[rip+0x7591]        # 0x14000a768
   1400031d7:	mov    edx,0xc0
   1400031dc:	call   0x140002488
   1400031e1:	jmp    0x1400035d0
   1400031e6:	lea    rcx,[rsp+0x34]
   1400031eb:	call   0x140004570
   1400031f0:	nop
   1400031f1:	mov    QWORD PTR [rsp+0x38],r14
   1400031f6:	lea    rax,[rsp+0x38]
   1400031fb:	mov    QWORD PTR [rsp+0x20],rax
   140003200:	lea    r9,[rip+0x76c1]        # 0x14000a8c8
   140003207:	xor    edx,edx
   140003209:	lea    r8d,[rdx+0x1]
   14000320d:	lea    rcx,[rip+0x77a4]        # 0x14000a9b8
   140003214:	call   QWORD PTR [rip+0x6dee]        # 0x14000a008
   14000321a:	mov    edi,eax
   14000321c:	mov    DWORD PTR [rsp+0x30],eax
   140003220:	test   eax,eax
   140003222:	jns    0x140003241
   140003224:	mov    rcx,QWORD PTR [rbp+0x78]
   140003228:	mov    r9d,eax
   14000322b:	lea    r8,[rip+0x7536]        # 0x14000a768
   140003232:	mov    edx,0xc9
   140003237:	call   0x140002488
   14000323c:	jmp    0x14000359d
   140003241:	xor    edx,edx
   140003243:	lea    r8d,[rdx+0x40]
   140003247:	lea    rcx,[rsp+0x40]
   14000324c:	call   0x140008722
   140003251:	xorps  xmm0,xmm0
   140003254:	movdqa XMMWORD PTR [rbp-0x80],xmm0
   140003259:	mov    QWORD PTR [rbp-0x70],r14
   14000325d:	mov    DWORD PTR [rsp+0x28],0x58
   140003265:	lea    rax,[rsp+0x40]
   14000326a:	mov    QWORD PTR [rsp+0x20],rax
   14000326f:	mov    r9,rbx
   140003272:	lea    r8,[rip+0xfffffffffffff2f7]        # 0x140002570
   140003279:	mov    edx,0x5
   14000327e:	lea    rcx,[rip+0x765b]        # 0x14000a8e0
   140003285:	call   QWORD PTR [rip+0x6f95]        # 0x14000a220
   14000328b:	mov    edi,eax
   14000328d:	mov    DWORD PTR [rsp+0x30],eax
   140003291:	test   eax,eax
   140003293:	jns    0x1400032b2
   140003295:	mov    rcx,QWORD PTR [rbp+0x78]
   140003299:	mov    r9d,eax
   14000329c:	lea    r8,[rip+0x74c5]        # 0x14000a768
   1400032a3:	mov    edx,0xcf
   1400032a8:	call   0x140002488
   1400032ad:	jmp    0x140003549
   1400032b2:	lea    rax,[rsp+0x40]
   1400032b7:	mov    QWORD PTR [rbp-0x20],rax
   1400032bb:	lea    rdx,[rbp-0x20]
   1400032bf:	lea    rcx,[rbp-0x60]
   1400032c3:	call   0x140004580
   1400032c8:	nop
   1400032c9:	cmp    DWORD PTR [rsp+0x68],r14d
   1400032ce:	je     0x140003380
   1400032d4:	cmp    DWORD PTR [rip+0xad55],0x5        # 0x14000e030
   1400032db:	jbe    0x140003320
   1400032dd:	test   QWORD PTR [rip+0xad5c],rsi        # 0x14000e040
   1400032e4:	je     0x140003320
   1400032e6:	mov    rax,QWORD PTR [rip+0xad5b]        # 0x14000e048
   1400032ed:	and    rax,rsi
   1400032f0:	cmp    rax,QWORD PTR [rip+0xad51]        # 0x14000e048
   1400032f7:	jne    0x140003320
   1400032f9:	lea    rax,[rbp-0x20]
   1400032fd:	mov    QWORD PTR [rsp+0x28],rax
   140003302:	mov    DWORD PTR [rsp+0x20],0x2
   14000330a:	xor    r9d,r9d
   14000330d:	lea    r8,[rbp-0x40]
   140003311:	lea    rdx,[rip+0x7d92]        # 0x14000b0aa
   140003318:	mov    rcx,r12
   14000331b:	call   0x140001008
   140003320:	mov    rbx,QWORD PTR [rsp+0x38]
   140003325:	mov    rax,QWORD PTR [rbx]
   140003328:	mov    rdi,QWORD PTR [rax+0x20]
   14000332c:	mov    rcx,rdi
   14000332f:	call   QWORD PTR [rip+0x704b]        # 0x14000a380
   140003335:	mov    rdx,QWORD PTR [rsp+0x70]
   14000333a:	mov    rcx,rbx
   14000333d:	call   rdi
   14000333f:	mov    DWORD PTR [rsp+0x30],eax
   140003343:	cmp    DWORD PTR [rip+0xace6],r15d        # 0x14000e030
   14000334a:	jbe    0x140003523
   140003350:	test   QWORD PTR [rip+0xace9],rsi        # 0x14000e040
   140003357:	je     0x140003523
   14000335d:	mov    rax,QWORD PTR [rip+0xace4]        # 0x14000e048
   140003364:	and    rax,rsi
   140003367:	cmp    rax,QWORD PTR [rip+0xacda]        # 0x14000e048
   14000336e:	jne    0x140003523
   140003374:	lea    rdx,[rip+0x7dd3]        # 0x14000b14e
   14000337b:	jmp    0x1400034f2
   140003380:	cmp    DWORD PTR [rsp+0x78],r14d
   140003385:	je     0x140003452
   14000338b:	cmp    DWORD PTR [rsp+0x40],r14d
   140003390:	jne    0x140003452
   140003396:	cmp    DWORD PTR [rip+0xac93],0x5        # 0x14000e030
   14000339d:	jbe    0x1400033f3
   14000339f:	test   QWORD PTR [rip+0xac9a],rsi        # 0x14000e040
   1400033a6:	je     0x1400033f3
   1400033a8:	mov    rax,QWORD PTR [rip+0xac99]        # 0x14000e048
   1400033af:	and    rax,rsi
   1400033b2:	cmp    rax,QWORD PTR [rip+0xac8f]        # 0x14000e048
   1400033b9:	jne    0x1400033f3
   1400033bb:	lea    rax,[rsp+0x7c]
   1400033c0:	mov    QWORD PTR [rbp+0x0],rax
   1400033c4:	mov    QWORD PTR [rbp+0x8],0x4
   1400033cc:	lea    rax,[rbp-0x20]
   1400033d0:	mov    QWORD PTR [rsp+0x28],rax
   1400033d5:	mov    DWORD PTR [rsp+0x20],0x3
   1400033dd:	xor    r9d,r9d
   1400033e0:	lea    r8,[rbp-0x40]
   1400033e4:	lea    rdx,[rip+0x7ce3]        # 0x14000b0ce
   1400033eb:	mov    rcx,r12
   1400033ee:	call   0x140001008
   1400033f3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400033f8:	mov    rax,QWORD PTR [rbx]
   1400033fb:	mov    rdi,QWORD PTR [rax+0x28]
   1400033ff:	mov    rcx,rdi
   140003402:	call   QWORD PTR [rip+0x6f78]        # 0x14000a380
   140003408:	mov    edx,DWORD PTR [rsp+0x7c]
   14000340c:	mov    rcx,rbx
   14000340f:	call   rdi
   140003411:	mov    DWORD PTR [rsp+0x30],eax
   140003415:	cmp    DWORD PTR [rip+0xac14],r15d        # 0x14000e030
   14000341c:	jbe    0x140003523
   140003422:	test   QWORD PTR [rip+0xac17],rsi        # 0x14000e040
   140003429:	je     0x140003523
   14000342f:	mov    rax,QWORD PTR [rip+0xac12]        # 0x14000e048
   140003436:	and    rax,rsi
   140003439:	cmp    rax,QWORD PTR [rip+0xac08]        # 0x14000e048
   140003440:	jne    0x140003523
   140003446:	lea    rdx,[rip+0x7d2c]        # 0x14000b179
   14000344d:	jmp    0x1400034f2
   140003452:	cmp    DWORD PTR [rsp+0x60],r14d
   140003457:	je     0x140003467
   140003459:	call   0x140002df0
   14000345e:	mov    DWORD PTR [rsp+0x30],eax
   140003462:	jmp    0x140003523
   140003467:	cmp    DWORD PTR [rip+0xabc2],0x5        # 0x14000e030
   14000346e:	jbe    0x1400034b3
   140003470:	test   QWORD PTR [rip+0xabc9],rsi        # 0x14000e040
   140003477:	je     0x1400034b3
   140003479:	mov    rax,QWORD PTR [rip+0xabc8]        # 0x14000e048
   140003480:	and    rax,rsi
   140003483:	cmp    rax,QWORD PTR [rip+0xabbe]        # 0x14000e048
   14000348a:	jne    0x1400034b3
   14000348c:	lea    rax,[rbp-0x20]
   140003490:	mov    QWORD PTR [rsp+0x28],rax
   140003495:	mov    DWORD PTR [rsp+0x20],0x2
   14000349d:	xor    r9d,r9d
   1400034a0:	lea    r8,[rbp-0x40]
   1400034a4:	lea    rdx,[rip+0x7cf5]        # 0x14000b1a0
   1400034ab:	mov    rcx,r12
   1400034ae:	call   0x140001008
   1400034b3:	lea    rdx,[rsp+0x40]
   1400034b8:	mov    rcx,QWORD PTR [rsp+0x38]
   1400034bd:	call   0x1400028c4
   1400034c2:	mov    DWORD PTR [rsp+0x30],eax
   1400034c6:	cmp    DWORD PTR [rip+0xab63],r15d        # 0x14000e030
   1400034cd:	jbe    0x140003523
   1400034cf:	test   QWORD PTR [rip+0xab6a],rsi        # 0x14000e040
   1400034d6:	je     0x140003523
   1400034d8:	mov    rax,QWORD PTR [rip+0xab69]        # 0x14000e048
   1400034df:	and    rax,rsi
   1400034e2:	cmp    rax,QWORD PTR [rip+0xab5f]        # 0x14000e048
   1400034e9:	jne    0x140003523
   1400034eb:	lea    rdx,[rip+0x7c0e]        # 0x14000b100
   1400034f2:	lea    rax,[rsp+0x30]
   1400034f7:	mov    QWORD PTR [rbp+0x0],rax
   1400034fb:	mov    QWORD PTR [rbp+0x8],0x4
   140003503:	lea    rax,[rbp-0x20]
   140003507:	mov    QWORD PTR [rsp+0x28],rax
   14000350c:	mov    DWORD PTR [rsp+0x20],0x3
   140003514:	xor    r9d,r9d
   140003517:	lea    r8,[rbp-0x40]
   14000351b:	mov    rcx,r12
   14000351e:	call   0x140001008
   140003523:	mov    edi,DWORD PTR [rsp+0x30]
   140003527:	cmp    BYTE PTR [rbp-0x58],r14b
   14000352b:	je     0x140003549
   14000352d:	mov    r9d,0x58
   140003533:	mov    r8,QWORD PTR [rbp-0x60]
   140003537:	lea    edx,[r9-0x53]
   14000353b:	lea    rcx,[rip+0x739e]        # 0x14000a8e0
   140003542:	call   QWORD PTR [rip+0x6cd0]        # 0x14000a218
   140003548:	nop
   140003549:	mov    rbx,QWORD PTR [rbp-0x80]
   14000354d:	test   rbx,rbx
   140003550:	je     0x14000359d
   140003552:	mov    rsi,QWORD PTR [rbp-0x78]
   140003556:	cmp    rbx,rsi
   140003559:	je     0x140003588
   14000355b:	cmp    QWORD PTR [rbx+0x18],0x8
   140003560:	jb     0x14000356b
   140003562:	mov    rcx,QWORD PTR [rbx]
   140003565:	call   QWORD PTR [rip+0x6da5]        # 0x14000a310
   14000356b:	mov    QWORD PTR [rbx+0x18],0x7
   140003573:	mov    QWORD PTR [rbx+0x10],r14
   140003577:	mov    WORD PTR [rbx],r14w
   14000357b:	add    rbx,0x20
   14000357f:	cmp    rbx,rsi
   140003582:	jne    0x14000355b
   140003584:	mov    rbx,QWORD PTR [rbp-0x80]
   140003588:	mov    rcx,rbx
   14000358b:	call   QWORD PTR [rip+0x6d7f]        # 0x14000a310
   140003591:	xorps  xmm0,xmm0
   140003594:	movdqa XMMWORD PTR [rbp-0x80],xmm0
   140003599:	mov    QWORD PTR [rbp-0x70],r14
   14000359d:	mov    rsi,QWORD PTR [rsp+0x38]
   1400035a2:	test   rsi,rsi
   1400035a5:	je     0x1400035c2
   1400035a7:	mov    QWORD PTR [rsp+0x38],r14
   1400035ac:	mov    rax,QWORD PTR [rsi]
   1400035af:	mov    rbx,QWORD PTR [rax+0x10]
   1400035b3:	mov    rcx,rbx
   1400035b6:	call   QWORD PTR [rip+0x6dc4]        # 0x14000a380
   1400035bc:	mov    rcx,rsi
   1400035bf:	call   rbx
   1400035c1:	nop
   1400035c2:	cmp    BYTE PTR [rsp+0x35],r14b
   1400035c7:	je     0x1400035d0
   1400035c9:	call   QWORD PTR [rip+0x6a41]        # 0x14000a010
   1400035cf:	nop
   1400035d0:	cmp    BYTE PTR [rbp+0x20],r14b
   1400035d4:	je     0x1400035e4
   1400035d6:	mov    BYTE PTR [rbp+0x20],r14b
   1400035da:	lea    rcx,[rbp+0x10]
   1400035de:	call   0x140003630
   1400035e3:	nop
   1400035e4:	cmp    DWORD PTR [rbp-0x48],0x1
   1400035e8:	jne    0x1400035fd
   1400035ea:	mov    DWORD PTR [rbp-0x48],0x2
   1400035f1:	lea    rdx,[rbp-0x40]
   1400035f5:	mov    rcx,r12
   1400035f8:	call   0x140004594
   1400035fd:	mov    eax,edi
   1400035ff:	mov    rcx,QWORD PTR [rbp+0x40]
   140003603:	xor    rcx,rsp
   140003606:	call   0x140007eb0
   14000360b:	lea    r11,[rsp+0x150]
   140003613:	mov    rbx,QWORD PTR [r11+0x38]
   140003617:	mov    rsi,QWORD PTR [r11+0x40]
   14000361b:	mov    rsp,r11
   14000361e:	pop    r15
   140003620:	pop    r14
   140003622:	pop    r12
   140003624:	pop    rdi
   140003625:	pop    rbp
   140003626:	ret    
   140003627:	int3   
   140003628:	int3   
   140003629:	int3   
   14000362a:	int3   
   14000362b:	int3   
   14000362c:	int3   
   14000362d:	int3   
   14000362e:	int3   
   14000362f:	int3   
   140003630:	sub    rsp,0x78
   140003634:	mov    rax,QWORD PTR [rip+0xa9cd]        # 0x14000e008
   14000363b:	xor    rax,rsp
   14000363e:	mov    QWORD PTR [rsp+0x60],rax
   140003643:	cmp    DWORD PTR [rip+0xa9e6],0x4        # 0x14000e030
   14000364a:	mov    r8,QWORD PTR [rcx+0x8]
   14000364e:	jbe    0x1400036b7
   140003650:	movabs r9,0x400000000000
   14000365a:	test   QWORD PTR [rip+0xa9df],r9        # 0x14000e040
   140003661:	je     0x1400036b7
   140003663:	mov    rax,QWORD PTR [rip+0xa9de]        # 0x14000e048
   14000366a:	and    rax,r9
   14000366d:	cmp    rax,QWORD PTR [rip+0xa9d4]        # 0x14000e048
   140003674:	jne    0x1400036b7
   140003676:	mov    rax,QWORD PTR [rcx]
   140003679:	and    DWORD PTR [rsp+0x5c],0x0
   14000367e:	mov    QWORD PTR [rsp+0x50],rax
   140003683:	mov    DWORD PTR [rsp+0x58],0x4
   14000368b:	lea    rax,[rsp+0x30]
   140003690:	add    r8,0x8
   140003694:	mov    QWORD PTR [rsp+0x28],rax
   140003699:	lea    rdx,[rip+0x7a88]        # 0x14000b128
   1400036a0:	xor    r9d,r9d
   1400036a3:	mov    DWORD PTR [rsp+0x20],0x3
   1400036ab:	lea    rcx,[rip+0xa97e]        # 0x14000e030
   1400036b2:	call   0x140001008
   1400036b7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400036bc:	xor    rcx,rsp
   1400036bf:	call   0x140007eb0
   1400036c4:	add    rsp,0x78
   1400036c8:	ret    
   1400036c9:	int3   
   1400036ca:	int3   
   1400036cb:	int3   
   1400036cc:	int3   
   1400036cd:	int3   
   1400036ce:	int3   
   1400036cf:	int3   
   1400036d0:	rex push rbx
   1400036d2:	sub    rsp,0x20
   1400036d6:	cmp    DWORD PTR [rcx],0x1
   1400036d9:	mov    rbx,rcx
   1400036dc:	jne    0x1400036f4
   1400036de:	mov    DWORD PTR [rcx],0x2
   1400036e4:	lea    rdx,[rcx+0x8]
   1400036e8:	lea    rcx,[rip+0xa941]        # 0x14000e030
   1400036ef:	call   0x140004594
   1400036f4:	mov    DWORD PTR [rbx],0x3
   1400036fa:	add    rsp,0x20
   1400036fe:	pop    rbx
   1400036ff:	ret    
   140003700:	int3   
   140003701:	int3   
   140003702:	int3   
   140003703:	int3   
   140003704:	int3   
   140003705:	int3   
   140003706:	int3   
   140003707:	int3   
   140003708:	mov    QWORD PTR [rsp+0x8],rbx
   14000370d:	mov    QWORD PTR [rsp+0x10],rbp
   140003712:	mov    QWORD PTR [rsp+0x18],rsi
   140003717:	push   rdi
   140003718:	sub    rsp,0x20
   14000371c:	mov    rbx,QWORD PTR [rcx+0x40]
   140003720:	xor    ebp,ebp
   140003722:	mov    rdi,rcx
   140003725:	test   rbx,rbx
   140003728:	je     0x14000376e
   14000372a:	mov    rsi,QWORD PTR [rcx+0x48]
   14000372e:	jmp    0x140003753
   140003730:	cmp    QWORD PTR [rbx+0x18],0x8
   140003735:	jb     0x140003740
   140003737:	mov    rcx,QWORD PTR [rbx]
   14000373a:	call   QWORD PTR [rip+0x6bd0]        # 0x14000a310
   140003740:	mov    QWORD PTR [rbx+0x18],0x7
   140003748:	mov    QWORD PTR [rbx+0x10],rbp
   14000374c:	mov    WORD PTR [rbx],bp
   14000374f:	add    rbx,0x20
   140003753:	cmp    rbx,rsi
   140003756:	jne    0x140003730
   140003758:	mov    rcx,QWORD PTR [rdi+0x40]
   14000375c:	call   QWORD PTR [rip+0x6bae]        # 0x14000a310
   140003762:	mov    QWORD PTR [rdi+0x40],rbp
   140003766:	mov    QWORD PTR [rdi+0x48],rbp
   14000376a:	mov    QWORD PTR [rdi+0x50],rbp
   14000376e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003773:	mov    rbp,QWORD PTR [rsp+0x38]
   140003778:	mov    rsi,QWORD PTR [rsp+0x40]
   14000377d:	add    rsp,0x20
   140003781:	pop    rdi
   140003782:	ret    
   140003783:	int3   
   140003784:	int3   
   140003785:	int3   
   140003786:	int3   
   140003787:	int3   
   140003788:	int3   
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	mov    QWORD PTR [rsp+0x8],rbx
   140003791:	mov    QWORD PTR [rsp+0x10],rsi
   140003796:	push   rdi
   140003797:	sub    rsp,0x20
   14000379b:	and    QWORD PTR [rcx+0x10],0x0
   1400037a0:	mov    rsi,rdx
   1400037a3:	mov    QWORD PTR [rcx+0x18],0xf
   1400037ab:	mov    rbx,rcx
   1400037ae:	mov    BYTE PTR [rcx],0x0
   1400037b1:	cmp    BYTE PTR [rdx],0x0
   1400037b4:	jne    0x1400037ba
   1400037b6:	xor    edi,edi
   1400037b8:	jmp    0x1400037c7
   1400037ba:	or     rdi,0xffffffffffffffff
   1400037be:	inc    rdi
   1400037c1:	cmp    BYTE PTR [rdx+rdi*1],0x0
   1400037c5:	jne    0x1400037be
   1400037c7:	mov    rdx,QWORD PTR [rcx+0x18]
   1400037cb:	cmp    rdx,0x10
   1400037cf:	jb     0x1400037d6
   1400037d1:	mov    rax,QWORD PTR [rcx]
   1400037d4:	jmp    0x1400037d9
   1400037d6:	mov    rax,rcx
   1400037d9:	cmp    rsi,rax
   1400037dc:	jb     0x140003814
   1400037de:	cmp    rdx,0x10
   1400037e2:	jb     0x1400037e7
   1400037e4:	mov    rcx,QWORD PTR [rcx]
   1400037e7:	add    rcx,QWORD PTR [rbx+0x10]
   1400037eb:	cmp    rcx,rsi
   1400037ee:	jbe    0x140003814
   1400037f0:	cmp    rdx,0x10
   1400037f4:	jb     0x1400037fb
   1400037f6:	mov    rax,QWORD PTR [rbx]
   1400037f9:	jmp    0x1400037fe
   1400037fb:	mov    rax,rbx
   1400037fe:	sub    rsi,rax
   140003801:	mov    r9,rdi
   140003804:	mov    r8,rsi
   140003807:	mov    rdx,rbx
   14000380a:	mov    rcx,rbx
   14000380d:	call   0x140003da0
   140003812:	jmp    0x140003885
   140003814:	cmp    rdi,0xfffffffffffffffe
   140003818:	ja     0x140003898
   14000381a:	cmp    rdx,rdi
   14000381d:	jae    0x140003830
   14000381f:	mov    r8,QWORD PTR [rbx+0x10]
   140003823:	mov    rdx,rdi
   140003826:	mov    rcx,rbx
   140003829:	call   0x14000411c
   14000382e:	jmp    0x14000384a
   140003830:	test   rdi,rdi
   140003833:	jne    0x14000384f
   140003835:	and    QWORD PTR [rbx+0x10],rdi
   140003839:	cmp    rdx,0x10
   14000383d:	jb     0x140003844
   14000383f:	mov    rax,QWORD PTR [rbx]
   140003842:	jmp    0x140003847
   140003844:	mov    rax,rbx
   140003847:	mov    BYTE PTR [rax],0x0
   14000384a:	test   rdi,rdi
   14000384d:	je     0x140003885
   14000384f:	cmp    QWORD PTR [rbx+0x18],0x10
   140003854:	jb     0x14000385b
   140003856:	mov    rcx,QWORD PTR [rbx]
   140003859:	jmp    0x14000385e
   14000385b:	mov    rcx,rbx
   14000385e:	test   rdi,rdi
   140003861:	je     0x14000386e
   140003863:	mov    r8,rdi
   140003866:	mov    rdx,rsi
   140003869:	call   0x140008716
   14000386e:	cmp    QWORD PTR [rbx+0x18],0x10
   140003873:	mov    QWORD PTR [rbx+0x10],rdi
   140003877:	jb     0x14000387e
   140003879:	mov    rax,QWORD PTR [rbx]
   14000387c:	jmp    0x140003881
   14000387e:	mov    rax,rbx
   140003881:	mov    BYTE PTR [rax+rdi*1],0x0
   140003885:	mov    rsi,QWORD PTR [rsp+0x38]
   14000388a:	mov    rax,rbx
   14000388d:	mov    rbx,QWORD PTR [rsp+0x30]
   140003892:	add    rsp,0x20
   140003896:	pop    rdi
   140003897:	ret    
   140003898:	call   0x140003efc
   14000389d:	int3   
   14000389e:	int3   
   14000389f:	int3   
   1400038a0:	int3   
   1400038a1:	int3   
   1400038a2:	int3   
   1400038a3:	int3   
   1400038a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400038a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400038ae:	push   rdi
   1400038af:	sub    rsp,0x20
   1400038b3:	xor    esi,esi
   1400038b5:	mov    QWORD PTR [rcx+0x18],0x7
   1400038bd:	mov    QWORD PTR [rcx+0x10],rsi
   1400038c1:	mov    rbx,rdx
   1400038c4:	mov    WORD PTR [rcx],si
   1400038c7:	mov    rdi,rcx
   1400038ca:	cmp    QWORD PTR [rdx+0x18],0x8
   1400038cf:	jae    0x1400038e6
   1400038d1:	mov    r8,QWORD PTR [rdx+0x10]
   1400038d5:	add    r8,0x1
   1400038d9:	je     0x1400038ef
   1400038db:	add    r8,r8
   1400038de:	call   QWORD PTR [rip+0x6a6c]        # 0x14000a350
   1400038e4:	jmp    0x1400038ef
   1400038e6:	mov    rax,QWORD PTR [rdx]
   1400038e9:	mov    QWORD PTR [rcx],rax
   1400038ec:	mov    QWORD PTR [rdx],rsi
   1400038ef:	mov    rax,QWORD PTR [rbx+0x10]
   1400038f3:	mov    QWORD PTR [rdi+0x10],rax
   1400038f7:	mov    rax,QWORD PTR [rbx+0x18]
   1400038fb:	mov    QWORD PTR [rdi+0x18],rax
   1400038ff:	mov    rax,rdi
   140003902:	mov    QWORD PTR [rbx+0x10],rsi
   140003906:	mov    QWORD PTR [rbx+0x18],0x7
   14000390e:	mov    WORD PTR [rbx],si
   140003911:	mov    rbx,QWORD PTR [rsp+0x30]
   140003916:	mov    rsi,QWORD PTR [rsp+0x38]
   14000391b:	add    rsp,0x20
   14000391f:	pop    rdi
   140003920:	ret    
   140003921:	int3   
   140003922:	int3   
   140003923:	int3   
   140003924:	int3   
   140003925:	int3   
   140003926:	int3   
   140003927:	int3   
   140003928:	rex push rbx
   14000392a:	sub    rsp,0x20
   14000392e:	cmp    QWORD PTR [rcx+0x18],0x8
   140003933:	mov    rbx,rcx
   140003936:	jb     0x140003941
   140003938:	mov    rcx,QWORD PTR [rcx]
   14000393b:	call   QWORD PTR [rip+0x69cf]        # 0x14000a310
   140003941:	xor    eax,eax
   140003943:	mov    QWORD PTR [rbx+0x18],0x7
   14000394b:	mov    QWORD PTR [rbx+0x10],rax
   14000394f:	mov    WORD PTR [rbx],ax
   140003952:	add    rsp,0x20
   140003956:	pop    rbx
   140003957:	ret    
   140003958:	int3   
   140003959:	int3   
   14000395a:	int3   
   14000395b:	int3   
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	rex push rbx
   140003962:	sub    rsp,0x20
   140003966:	mov    rbx,rcx
   140003969:	mov    rcx,QWORD PTR [rcx]
   14000396c:	test   rcx,rcx
   14000396f:	je     0x140003985
   140003971:	call   QWORD PTR [rip+0x6999]        # 0x14000a310
   140003977:	and    QWORD PTR [rbx],0x0
   14000397b:	and    QWORD PTR [rbx+0x8],0x0
   140003980:	and    QWORD PTR [rbx+0x10],0x0
   140003985:	add    rsp,0x20
   140003989:	pop    rbx
   14000398a:	ret    
   14000398b:	int3   
   14000398c:	int3   
   14000398d:	int3   
   14000398e:	int3   
   14000398f:	int3   
   140003990:	int3   
   140003991:	int3   
   140003992:	int3   
   140003993:	int3   
   140003994:	mov    QWORD PTR [rsp+0x8],rbx
   140003999:	mov    QWORD PTR [rsp+0x10],rbp
   14000399e:	mov    QWORD PTR [rsp+0x18],rsi
   1400039a3:	push   rdi
   1400039a4:	sub    rsp,0x20
   1400039a8:	mov    rdi,QWORD PTR [rcx]
   1400039ab:	mov    rbx,rcx
   1400039ae:	test   rdi,rdi
   1400039b1:	je     0x1400039f2
   1400039b3:	mov    rbp,QWORD PTR [rcx+0x8]
   1400039b7:	jmp    0x1400039d6
   1400039b9:	mov    rsi,QWORD PTR [rdi]
   1400039bc:	test   rsi,rsi
   1400039bf:	je     0x1400039d2
   1400039c1:	mov    rcx,rsi
   1400039c4:	call   0x140006274
   1400039c9:	mov    rcx,rsi
   1400039cc:	call   QWORD PTR [rip+0x693e]        # 0x14000a310
   1400039d2:	add    rdi,0x8
   1400039d6:	cmp    rdi,rbp
   1400039d9:	jne    0x1400039b9
   1400039db:	mov    rcx,QWORD PTR [rbx]
   1400039de:	call   QWORD PTR [rip+0x692c]        # 0x14000a310
   1400039e4:	and    QWORD PTR [rbx],0x0
   1400039e8:	and    QWORD PTR [rbx+0x8],0x0
   1400039ed:	and    QWORD PTR [rbx+0x10],0x0
   1400039f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400039f7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400039fc:	mov    rsi,QWORD PTR [rsp+0x40]
   140003a01:	add    rsp,0x20
   140003a05:	pop    rdi
   140003a06:	ret    
   140003a07:	int3   
   140003a08:	int3   
   140003a09:	int3   
   140003a0a:	int3   
   140003a0b:	int3   
   140003a0c:	int3   
   140003a0d:	int3   
   140003a0e:	int3   
   140003a0f:	int3   
   140003a10:	sub    rsp,0x28
   140003a14:	cmp    BYTE PTR [rcx+0x10],0x0
   140003a18:	je     0x140003a23
   140003a1a:	mov    BYTE PTR [rcx+0x10],0x0
   140003a1e:	call   0x140003630
   140003a23:	add    rsp,0x28
   140003a27:	ret    
   140003a28:	int3   
   140003a29:	int3   
   140003a2a:	int3   
   140003a2b:	int3   
   140003a2c:	int3   
   140003a2d:	int3   
   140003a2e:	int3   
   140003a2f:	int3   
   140003a30:	sub    rsp,0x28
   140003a34:	cmp    BYTE PTR [rcx+0x1],0x0
   140003a38:	je     0x140003a44
   140003a3a:	mov    BYTE PTR [rcx+0x1],0x0
   140003a3e:	call   QWORD PTR [rip+0x65cc]        # 0x14000a010
   140003a44:	add    rsp,0x28
   140003a48:	ret    
   140003a49:	int3   
   140003a4a:	int3   
   140003a4b:	int3   
   140003a4c:	int3   
   140003a4d:	int3   
   140003a4e:	int3   
   140003a4f:	int3   
   140003a50:	mov    QWORD PTR [rsp+0x8],rbx
   140003a55:	push   rdi
   140003a56:	sub    rsp,0x20
   140003a5a:	mov    rdi,QWORD PTR [rcx]
   140003a5d:	test   rdi,rdi
   140003a60:	je     0x140003a7b
   140003a62:	and    QWORD PTR [rcx],0x0
   140003a66:	mov    rax,QWORD PTR [rdi]
   140003a69:	mov    rbx,QWORD PTR [rax+0x10]
   140003a6d:	mov    rcx,rbx
   140003a70:	call   QWORD PTR [rip+0x690a]        # 0x14000a380
   140003a76:	mov    rcx,rdi
   140003a79:	call   rbx
   140003a7b:	mov    rbx,QWORD PTR [rsp+0x30]
   140003a80:	add    rsp,0x20
   140003a84:	pop    rdi
   140003a85:	ret    
   140003a86:	int3   
   140003a87:	int3   
   140003a88:	int3   
   140003a89:	int3   
   140003a8a:	int3   
   140003a8b:	int3   
   140003a8c:	sub    rsp,0x28
   140003a90:	cmp    BYTE PTR [rcx+0x8],0x0
   140003a94:	je     0x140003ab4
   140003a96:	mov    r8,QWORD PTR [rcx]
   140003a99:	mov    r9d,0x58
   140003a9f:	mov    BYTE PTR [rcx+0x8],0x0
   140003aa3:	lea    rcx,[rip+0x6e36]        # 0x14000a8e0
   140003aaa:	lea    edx,[r9-0x53]
   140003aae:	call   QWORD PTR [rip+0x6764]        # 0x14000a218
   140003ab4:	add    rsp,0x28
   140003ab8:	ret    
   140003ab9:	int3   
   140003aba:	int3   
   140003abb:	int3   
   140003abc:	int3   
   140003abd:	int3   
   140003abe:	int3   
   140003abf:	int3   
   140003ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140003ac5:	mov    QWORD PTR [rsp+0x10],rsi
   140003aca:	push   rdi
   140003acb:	sub    rsp,0x20
   140003acf:	mov    rdi,r8
   140003ad2:	mov    rbx,rcx
   140003ad5:	test   dl,dl
   140003ad7:	je     0x140003af9
   140003ad9:	cmp    QWORD PTR [rcx+0x18],0x10
   140003ade:	jb     0x140003af9
   140003ae0:	mov    rsi,QWORD PTR [rcx]
   140003ae3:	test   r8,r8
   140003ae6:	je     0x140003af0
   140003ae8:	mov    rdx,rsi
   140003aeb:	call   0x140008716
   140003af0:	mov    rcx,rsi
   140003af3:	call   QWORD PTR [rip+0x6817]        # 0x14000a310
   140003af9:	mov    rsi,QWORD PTR [rsp+0x38]
   140003afe:	mov    QWORD PTR [rbx+0x18],0xf
   140003b06:	mov    QWORD PTR [rbx+0x10],rdi
   140003b0a:	mov    BYTE PTR [rdi+rbx*1],0x0
   140003b0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003b13:	add    rsp,0x20
   140003b17:	pop    rdi
   140003b18:	ret    
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	mov    QWORD PTR [rsp+0x8],rbx
   140003b25:	mov    QWORD PTR [rsp+0x10],rbp
   140003b2a:	mov    QWORD PTR [rsp+0x18],rsi
   140003b2f:	push   rdi
   140003b30:	sub    rsp,0x20
   140003b34:	xor    ebp,ebp
   140003b36:	mov    rsi,rdx
   140003b39:	mov    rbx,rcx
   140003b3c:	cmp    WORD PTR [rdx],bp
   140003b3f:	jne    0x140003b45
   140003b41:	mov    edi,ebp
   140003b43:	jmp    0x140003b52
   140003b45:	or     rdi,0xffffffffffffffff
   140003b49:	inc    rdi
   140003b4c:	cmp    WORD PTR [rdx+rdi*2],bp
   140003b50:	jne    0x140003b49
   140003b52:	mov    rdx,QWORD PTR [rcx+0x18]
   140003b56:	cmp    rdx,0x8
   140003b5a:	jb     0x140003b61
   140003b5c:	mov    rax,QWORD PTR [rcx]
   140003b5f:	jmp    0x140003b64
   140003b61:	mov    rax,rcx
   140003b64:	cmp    rsi,rax
   140003b67:	jb     0x140003ba9
   140003b69:	cmp    rdx,0x8
   140003b6d:	jb     0x140003b72
   140003b6f:	mov    rcx,QWORD PTR [rcx]
   140003b72:	mov    rax,QWORD PTR [rbx+0x10]
   140003b76:	lea    rcx,[rcx+rax*2]
   140003b7a:	cmp    rcx,rsi
   140003b7d:	jbe    0x140003ba9
   140003b7f:	cmp    rdx,0x8
   140003b83:	jb     0x140003b8a
   140003b85:	mov    rax,QWORD PTR [rbx]
   140003b88:	jmp    0x140003b8d
   140003b8a:	mov    rax,rbx
   140003b8d:	sub    rsi,rax
   140003b90:	mov    r9,rdi
   140003b93:	sar    rsi,1
   140003b96:	mov    rdx,rbx
   140003b99:	mov    r8,rsi
   140003b9c:	mov    rcx,rbx
   140003b9f:	call   0x140003f2c
   140003ba4:	mov    rbx,rax
   140003ba7:	jmp    0x140003c28
   140003ba9:	movabs rax,0x7ffffffffffffffe
   140003bb3:	cmp    rdi,rax
   140003bb6:	ja     0x140003c40
   140003bbc:	cmp    rdx,rdi
   140003bbf:	jae    0x140003bd2
   140003bc1:	mov    r8,QWORD PTR [rbx+0x10]
   140003bc5:	mov    rdx,rdi
   140003bc8:	mov    rcx,rbx
   140003bcb:	call   0x1400042d8
   140003bd0:	jmp    0x140003bec
   140003bd2:	test   rdi,rdi
   140003bd5:	jne    0x140003bf1
   140003bd7:	mov    QWORD PTR [rbx+0x10],rbp
   140003bdb:	cmp    rdx,0x8
   140003bdf:	jb     0x140003be6
   140003be1:	mov    rax,QWORD PTR [rbx]
   140003be4:	jmp    0x140003be9
   140003be6:	mov    rax,rbx
   140003be9:	mov    WORD PTR [rax],bp
   140003bec:	test   rdi,rdi
   140003bef:	je     0x140003c28
   140003bf1:	cmp    QWORD PTR [rbx+0x18],0x8
   140003bf6:	jb     0x140003bfd
   140003bf8:	mov    rcx,QWORD PTR [rbx]
   140003bfb:	jmp    0x140003c00
   140003bfd:	mov    rcx,rbx
   140003c00:	test   rdi,rdi
   140003c03:	je     0x140003c11
   140003c05:	lea    r8,[rdi+rdi*1]
   140003c09:	mov    rdx,rsi
   140003c0c:	call   0x140008716
   140003c11:	cmp    QWORD PTR [rbx+0x18],0x8
   140003c16:	mov    QWORD PTR [rbx+0x10],rdi
   140003c1a:	jb     0x140003c21
   140003c1c:	mov    rax,QWORD PTR [rbx]
   140003c1f:	jmp    0x140003c24
   140003c21:	mov    rax,rbx
   140003c24:	mov    WORD PTR [rax+rdi*2],bp
   140003c28:	mov    rbp,QWORD PTR [rsp+0x38]
   140003c2d:	mov    rax,rbx
   140003c30:	mov    rbx,QWORD PTR [rsp+0x30]
   140003c35:	mov    rsi,QWORD PTR [rsp+0x40]
   140003c3a:	add    rsp,0x20
   140003c3e:	pop    rdi
   140003c3f:	ret    
   140003c40:	call   0x140003efc
   140003c45:	int3   
   140003c46:	int3   
   140003c47:	int3   
   140003c48:	int3   
   140003c49:	int3   
   140003c4a:	int3   
   140003c4b:	int3   
   140003c4c:	mov    QWORD PTR [rsp+0x8],rbx
   140003c51:	mov    QWORD PTR [rsp+0x10],rbp
   140003c56:	mov    QWORD PTR [rsp+0x18],rsi
   140003c5b:	push   rdi
   140003c5c:	sub    rsp,0x20
   140003c60:	xor    ebp,ebp
   140003c62:	mov    rdi,r8
   140003c65:	mov    rbx,rcx
   140003c68:	test   dl,dl
   140003c6a:	je     0x140003c8f
   140003c6c:	cmp    QWORD PTR [rcx+0x18],0x8
   140003c71:	jb     0x140003c8f
   140003c73:	mov    rsi,QWORD PTR [rcx]
   140003c76:	test   r8,r8
   140003c79:	je     0x140003c86
   140003c7b:	add    r8,r8
   140003c7e:	mov    rdx,rsi
   140003c81:	call   0x140008716
   140003c86:	mov    rcx,rsi
   140003c89:	call   QWORD PTR [rip+0x6681]        # 0x14000a310
   140003c8f:	mov    rsi,QWORD PTR [rsp+0x40]
   140003c94:	mov    QWORD PTR [rbx+0x18],0x7
   140003c9c:	mov    QWORD PTR [rbx+0x10],rdi
   140003ca0:	mov    WORD PTR [rbx+rdi*2],bp
   140003ca4:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ca9:	mov    rbp,QWORD PTR [rsp+0x38]
   140003cae:	add    rsp,0x20
   140003cb2:	pop    rdi
   140003cb3:	ret    
   140003cb4:	int3   
   140003cb5:	int3   
   140003cb6:	int3   
   140003cb7:	int3   
   140003cb8:	int3   
   140003cb9:	int3   
   140003cba:	int3   
   140003cbb:	int3   
   140003cbc:	mov    rcx,rdx
   140003cbf:	rex.W jmp QWORD PTR [rip+0x664a]        # 0x14000a310
   140003cc6:	int3   
   140003cc7:	int3   
   140003cc8:	int3   
   140003cc9:	int3   
   140003cca:	int3   
   140003ccb:	int3   
   140003ccc:	mov    rax,rsp
   140003ccf:	push   r14
   140003cd1:	sub    rsp,0x30
   140003cd5:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140003cdd:	mov    QWORD PTR [rax+0x8],rbx
   140003ce1:	mov    QWORD PTR [rax+0x18],rsi
   140003ce5:	mov    QWORD PTR [rax+0x20],rdi
   140003ce9:	mov    rsi,rdx
   140003cec:	mov    rdi,rcx
   140003cef:	xor    ebx,ebx
   140003cf1:	mov    QWORD PTR [rsp+0x48],rbx
   140003cf6:	test   rdx,rdx
   140003cf9:	je     0x140003d27
   140003cfb:	movabs rax,0x7fffffffffffffff
   140003d05:	cmp    rdx,rax
   140003d08:	ja     0x140003d20
   140003d0a:	lea    rcx,[rdx+rdx*1]
   140003d0e:	call   0x140007a8c
   140003d13:	mov    rbx,rax
   140003d16:	mov    QWORD PTR [rsp+0x48],rax
   140003d1b:	test   rax,rax
   140003d1e:	jne    0x140003d27
   140003d20:	call   QWORD PTR [rip+0x652a]        # 0x14000a250
   140003d26:	nop
   140003d27:	mov    r8,QWORD PTR [rdi+0x8]
   140003d2b:	sub    r8,QWORD PTR [rdi]
   140003d2e:	sar    r8,1
   140003d31:	add    r8,r8
   140003d34:	mov    rdx,QWORD PTR [rdi]
   140003d37:	mov    rcx,rbx
   140003d3a:	call   QWORD PTR [rip+0x6610]        # 0x14000a350
   140003d40:	nop
   140003d41:	mov    rcx,QWORD PTR [rdi]
   140003d44:	mov    r14,QWORD PTR [rdi+0x8]
   140003d48:	sub    r14,rcx
   140003d4b:	sar    r14,1
   140003d4e:	test   rcx,rcx
   140003d51:	je     0x140003d59
   140003d53:	call   QWORD PTR [rip+0x65b7]        # 0x14000a310
   140003d59:	lea    rax,[rbx+rsi*2]
   140003d5d:	mov    QWORD PTR [rdi+0x10],rax
   140003d61:	lea    rax,[rbx+r14*2]
   140003d65:	mov    QWORD PTR [rdi+0x8],rax
   140003d69:	mov    QWORD PTR [rdi],rbx
   140003d6c:	mov    rbx,QWORD PTR [rsp+0x40]
   140003d71:	mov    rsi,QWORD PTR [rsp+0x50]
   140003d76:	mov    rdi,QWORD PTR [rsp+0x58]
   140003d7b:	add    rsp,0x30
   140003d7f:	pop    r14
   140003d81:	ret    
   140003d82:	int3   
   140003d83:	int3   
   140003d84:	int3   
   140003d85:	int3   
   140003d86:	int3   
   140003d87:	int3   
   140003d88:	sub    rsp,0x28
   140003d8c:	lea    rcx,[rip+0x6ac5]        # 0x14000a858
   140003d93:	call   QWORD PTR [rip+0x64a7]        # 0x14000a240
   140003d99:	int3   
   140003d9a:	int3   
   140003d9b:	int3   
   140003d9c:	int3   
   140003d9d:	int3   
   140003d9e:	int3   
   140003d9f:	int3   
   140003da0:	mov    QWORD PTR [rsp+0x8],rbx
   140003da5:	mov    QWORD PTR [rsp+0x10],rbp
   140003daa:	mov    QWORD PTR [rsp+0x18],rdi
   140003daf:	push   r14
   140003db1:	sub    rsp,0x20
   140003db5:	mov    rdi,QWORD PTR [rdx+0x10]
   140003db9:	mov    rbp,r8
   140003dbc:	mov    r14,rdx
   140003dbf:	mov    rbx,rcx
   140003dc2:	cmp    rdi,r8
   140003dc5:	jb     0x140003ee3
   140003dcb:	sub    rdi,r8
   140003dce:	cmp    r9,rdi
   140003dd1:	cmovb  rdi,r9
   140003dd5:	cmp    rcx,rdx
   140003dd8:	jne    0x140003e4b
   140003dda:	lea    rax,[rdi+r8*1]
   140003dde:	cmp    QWORD PTR [rcx+0x10],rax
   140003de2:	jb     0x140003ee9
   140003de8:	cmp    QWORD PTR [rcx+0x18],0x10
   140003ded:	mov    QWORD PTR [rcx+0x10],rax
   140003df1:	jb     0x140003df6
   140003df3:	mov    rcx,QWORD PTR [rcx]
   140003df6:	mov    BYTE PTR [rcx+rax*1],0x0
   140003dfa:	mov    rdi,QWORD PTR [rbx+0x10]
   140003dfe:	cmp    rdi,r8
   140003e01:	ja     0x140003e1f
   140003e03:	and    QWORD PTR [rbx+0x10],0x0
   140003e08:	cmp    QWORD PTR [rbx+0x18],0x10
   140003e0d:	jb     0x140003e14
   140003e0f:	mov    rax,QWORD PTR [rbx]
   140003e12:	jmp    0x140003e17
   140003e14:	mov    rax,rbx
   140003e17:	mov    BYTE PTR [rax],0x0
   140003e1a:	jmp    0x140003eca
   140003e1f:	test   r8,r8
   140003e22:	je     0x140003eca
   140003e28:	cmp    QWORD PTR [rbx+0x18],0x10
   140003e2d:	jb     0x140003e34
   140003e2f:	mov    rcx,QWORD PTR [rbx]
   140003e32:	jmp    0x140003e37
   140003e34:	mov    rcx,rbx
   140003e37:	sub    rdi,r8
   140003e3a:	je     0x140003eb3
   140003e3c:	lea    rdx,[rcx+r8*1]
   140003e40:	mov    r8,rdi
   140003e43:	call   QWORD PTR [rip+0x6507]        # 0x14000a350
   140003e49:	jmp    0x140003eb3
   140003e4b:	cmp    rdi,0xfffffffffffffffe
   140003e4f:	ja     0x140003eef
   140003e55:	cmp    QWORD PTR [rcx+0x18],rdi
   140003e59:	jae    0x140003e69
   140003e5b:	mov    r8,QWORD PTR [rcx+0x10]
   140003e5f:	mov    rdx,rdi
   140003e62:	call   0x14000411c
   140003e67:	jmp    0x140003e84
   140003e69:	test   rdi,rdi
   140003e6c:	jne    0x140003e89
   140003e6e:	and    QWORD PTR [rcx+0x10],rdi
   140003e72:	cmp    QWORD PTR [rcx+0x18],0x10
   140003e77:	jb     0x140003e7e
   140003e79:	mov    rax,QWORD PTR [rcx]
   140003e7c:	jmp    0x140003e81
   140003e7e:	mov    rax,rcx
   140003e81:	mov    BYTE PTR [rax],0x0
   140003e84:	test   rdi,rdi
   140003e87:	je     0x140003eca
   140003e89:	cmp    QWORD PTR [r14+0x18],0x10
   140003e8e:	jb     0x140003e93
   140003e90:	mov    r14,QWORD PTR [r14]
   140003e93:	cmp    QWORD PTR [rbx+0x18],0x10
   140003e98:	jb     0x140003e9f
   140003e9a:	mov    rcx,QWORD PTR [rbx]
   140003e9d:	jmp    0x140003ea2
   140003e9f:	mov    rcx,rbx
   140003ea2:	test   rdi,rdi
   140003ea5:	je     0x140003eb3
   140003ea7:	lea    rdx,[r14+rbp*1]
   140003eab:	mov    r8,rdi
   140003eae:	call   0x140008716
   140003eb3:	cmp    QWORD PTR [rbx+0x18],0x10
   140003eb8:	mov    QWORD PTR [rbx+0x10],rdi
   140003ebc:	jb     0x140003ec3
   140003ebe:	mov    rax,QWORD PTR [rbx]
   140003ec1:	jmp    0x140003ec6
   140003ec3:	mov    rax,rbx
   140003ec6:	mov    BYTE PTR [rax+rdi*1],0x0
   140003eca:	mov    rbp,QWORD PTR [rsp+0x38]
   140003ecf:	mov    rax,rbx
   140003ed2:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ed7:	mov    rdi,QWORD PTR [rsp+0x40]
   140003edc:	add    rsp,0x20
   140003ee0:	pop    r14
   140003ee2:	ret    
   140003ee3:	call   0x140003f14
   140003ee8:	int3   
   140003ee9:	call   0x140003f14
   140003eee:	int3   
   140003eef:	call   0x140003efc
   140003ef4:	int3   
   140003ef5:	int3   
   140003ef6:	int3   
   140003ef7:	int3   
   140003ef8:	int3   
   140003ef9:	int3   
   140003efa:	int3   
   140003efb:	int3   
   140003efc:	sub    rsp,0x28
   140003f00:	lea    rcx,[rip+0x6969]        # 0x14000a870
   140003f07:	call   QWORD PTR [rip+0x6333]        # 0x14000a240
   140003f0d:	int3   
   140003f0e:	int3   
   140003f0f:	int3   
   140003f10:	int3   
   140003f11:	int3   
   140003f12:	int3   
   140003f13:	int3   
   140003f14:	sub    rsp,0x28
   140003f18:	lea    rcx,[rip+0x6961]        # 0x14000a880
   140003f1f:	call   QWORD PTR [rip+0x6323]        # 0x14000a248
   140003f25:	int3   
   140003f26:	int3   
   140003f27:	int3   
   140003f28:	int3   
   140003f29:	int3   
   140003f2a:	int3   
   140003f2b:	int3   
   140003f2c:	mov    rax,rsp
   140003f2f:	mov    QWORD PTR [rax+0x8],rbx
   140003f33:	mov    QWORD PTR [rax+0x10],rbp
   140003f37:	mov    QWORD PTR [rax+0x18],rsi
   140003f3b:	mov    QWORD PTR [rax+0x20],rdi
   140003f3f:	push   r14
   140003f41:	sub    rsp,0x20
   140003f45:	mov    rdi,QWORD PTR [rdx+0x10]
   140003f49:	mov    rbp,r8
   140003f4c:	mov    r14,rdx
   140003f4f:	mov    rbx,rcx
   140003f52:	cmp    rdi,r8
   140003f55:	jb     0x140004044
   140003f5b:	sub    rdi,r8
   140003f5e:	cmp    r9,rdi
   140003f61:	cmovb  rdi,r9
   140003f65:	cmp    rcx,rdx
   140003f68:	jne    0x140003f9b
   140003f6a:	lea    rax,[rdi+r8*1]
   140003f6e:	cmp    QWORD PTR [rcx+0x10],rax
   140003f72:	jb     0x14000404a
   140003f78:	cmp    QWORD PTR [rcx+0x18],0x8
   140003f7d:	mov    QWORD PTR [rcx+0x10],rax
   140003f81:	jb     0x140003f86
   140003f83:	mov    rcx,QWORD PTR [rcx]
   140003f86:	xor    esi,esi
   140003f88:	xor    edx,edx
   140003f8a:	mov    WORD PTR [rcx+rax*2],si
   140003f8e:	mov    rcx,rbx
   140003f91:	call   0x140004228
   140003f96:	jmp    0x140004026
   140003f9b:	movabs rax,0x7ffffffffffffffe
   140003fa5:	cmp    rdi,rax
   140003fa8:	ja     0x140004050
   140003fae:	xor    esi,esi
   140003fb0:	cmp    QWORD PTR [rcx+0x18],rdi
   140003fb4:	jae    0x140003fc4
   140003fb6:	mov    r8,QWORD PTR [rcx+0x10]
   140003fba:	mov    rdx,rdi
   140003fbd:	call   0x1400042d8
   140003fc2:	jmp    0x140003fdf
   140003fc4:	test   rdi,rdi
   140003fc7:	jne    0x140003fe4
   140003fc9:	cmp    QWORD PTR [rcx+0x18],0x8
   140003fce:	mov    QWORD PTR [rcx+0x10],rsi
   140003fd2:	jb     0x140003fd9
   140003fd4:	mov    rax,QWORD PTR [rcx]
   140003fd7:	jmp    0x140003fdc
   140003fd9:	mov    rax,rcx
   140003fdc:	mov    WORD PTR [rax],si
   140003fdf:	test   rdi,rdi
   140003fe2:	je     0x140004026
   140003fe4:	cmp    QWORD PTR [r14+0x18],0x8
   140003fe9:	jb     0x140003fee
   140003feb:	mov    r14,QWORD PTR [r14]
   140003fee:	cmp    QWORD PTR [rbx+0x18],0x8
   140003ff3:	jb     0x140003ffa
   140003ff5:	mov    rcx,QWORD PTR [rbx]
   140003ff8:	jmp    0x140003ffd
   140003ffa:	mov    rcx,rbx
   140003ffd:	test   rdi,rdi
   140004000:	je     0x14000400f
   140004002:	lea    r8,[rdi+rdi*1]
   140004006:	lea    rdx,[r14+rbp*2]
   14000400a:	call   0x140008716
   14000400f:	cmp    QWORD PTR [rbx+0x18],0x8
   140004014:	mov    QWORD PTR [rbx+0x10],rdi
   140004018:	jb     0x14000401f
   14000401a:	mov    rax,QWORD PTR [rbx]
   14000401d:	jmp    0x140004022
   14000401f:	mov    rax,rbx
   140004022:	mov    WORD PTR [rax+rdi*2],si
   140004026:	mov    rbp,QWORD PTR [rsp+0x38]
   14000402b:	mov    rax,rbx
   14000402e:	mov    rbx,QWORD PTR [rsp+0x30]
   140004033:	mov    rsi,QWORD PTR [rsp+0x40]
   140004038:	mov    rdi,QWORD PTR [rsp+0x48]
   14000403d:	add    rsp,0x20
   140004041:	pop    r14
   140004043:	ret    
   140004044:	call   0x140003f14
   140004049:	int3   
   14000404a:	call   0x140003f14
   14000404f:	int3   
   140004050:	call   0x140003efc
   140004055:	int3   
   140004056:	int3   
   140004057:	int3   
   140004058:	int3   
   140004059:	int3   
   14000405a:	int3   
   14000405b:	int3   
   14000405c:	mov    rax,rsp
   14000405f:	push   r14
   140004061:	sub    rsp,0x30
   140004065:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   14000406d:	mov    QWORD PTR [rax+0x8],rbx
   140004071:	mov    QWORD PTR [rax+0x18],rsi
   140004075:	mov    QWORD PTR [rax+0x20],rdi
   140004079:	mov    rsi,rdx
   14000407c:	mov    rdi,rcx
   14000407f:	xor    ebx,ebx
   140004081:	mov    QWORD PTR [rsp+0x48],rbx
   140004086:	test   rdx,rdx
   140004089:	je     0x1400040ba
   14000408b:	movabs rax,0x1fffffffffffffff
   140004095:	cmp    rdx,rax
   140004098:	ja     0x1400040b3
   14000409a:	mov    rcx,rdx
   14000409d:	shl    rcx,0x3
   1400040a1:	call   0x140007a8c
   1400040a6:	mov    rbx,rax
   1400040a9:	mov    QWORD PTR [rsp+0x48],rax
   1400040ae:	test   rax,rax
   1400040b1:	jne    0x1400040ba
   1400040b3:	call   QWORD PTR [rip+0x6197]        # 0x14000a250
   1400040b9:	nop
   1400040ba:	mov    r8,QWORD PTR [rdi+0x8]
   1400040be:	sub    r8,QWORD PTR [rdi]
   1400040c1:	and    r8,0xfffffffffffffff8
   1400040c5:	mov    rdx,QWORD PTR [rdi]
   1400040c8:	mov    rcx,rbx
   1400040cb:	call   QWORD PTR [rip+0x627f]        # 0x14000a350
   1400040d1:	nop
   1400040d2:	mov    rcx,QWORD PTR [rdi]
   1400040d5:	mov    r14,QWORD PTR [rdi+0x8]
   1400040d9:	sub    r14,rcx
   1400040dc:	sar    r14,0x3
   1400040e0:	test   rcx,rcx
   1400040e3:	je     0x1400040eb
   1400040e5:	call   QWORD PTR [rip+0x6225]        # 0x14000a310
   1400040eb:	lea    rax,[rbx+rsi*8]
   1400040ef:	mov    QWORD PTR [rdi+0x10],rax
   1400040f3:	lea    rax,[rbx+r14*8]
   1400040f7:	mov    QWORD PTR [rdi+0x8],rax
   1400040fb:	mov    QWORD PTR [rdi],rbx
   1400040fe:	mov    rbx,QWORD PTR [rsp+0x40]
   140004103:	mov    rsi,QWORD PTR [rsp+0x50]
   140004108:	mov    rdi,QWORD PTR [rsp+0x58]
   14000410d:	add    rsp,0x30
   140004111:	pop    r14
   140004113:	ret    
   140004114:	int3   
   140004115:	int3   
   140004116:	int3   
   140004117:	int3   
   140004118:	int3   
   140004119:	int3   
   14000411a:	int3   
   14000411b:	int3   
   14000411c:	mov    rax,rsp
   14000411f:	mov    QWORD PTR [rax+0x18],r8
   140004123:	mov    QWORD PTR [rax+0x10],rdx
   140004127:	mov    QWORD PTR [rax+0x8],rcx
   14000412b:	push   rbx
   14000412c:	push   rsi
   14000412d:	push   rdi
   14000412e:	push   r14
   140004130:	sub    rsp,0x38
   140004134:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   14000413c:	mov    rsi,r8
   14000413f:	mov    rbx,rcx
   140004142:	mov    rdi,rdx
   140004145:	or     rdi,0xf
   140004149:	mov    r9,0xfffffffffffffffe
   140004150:	cmp    rdi,r9
   140004153:	jbe    0x14000415a
   140004155:	mov    rdi,rdx
   140004158:	jmp    0x14000418b
   14000415a:	mov    r8,QWORD PTR [rcx+0x18]
   14000415e:	mov    rcx,r8
   140004161:	shr    rcx,1
   140004164:	movabs rax,0xaaaaaaaaaaaaaaab
   14000416e:	mul    rdi
   140004171:	shr    rdx,1
   140004174:	cmp    rcx,rdx
   140004177:	jbe    0x14000418b
   140004179:	mov    rax,r9
   14000417c:	sub    rax,rcx
   14000417f:	cmp    r8,rax
   140004182:	lea    rdi,[rcx+r8*1]
   140004186:	jbe    0x14000418b
   140004188:	mov    rdi,r9
   14000418b:	lea    rcx,[rdi+0x1]
   14000418f:	xor    r14d,r14d
   140004192:	test   rcx,rcx
   140004195:	je     0x1400041b1
   140004197:	cmp    rcx,0xffffffffffffffff
   14000419b:	ja     0x1400041aa
   14000419d:	call   0x140007a8c
   1400041a2:	mov    r14,rax
   1400041a5:	test   rax,rax
   1400041a8:	jne    0x1400041b1
   1400041aa:	call   QWORD PTR [rip+0x60a0]        # 0x14000a250
   1400041b0:	nop
   1400041b1:	jmp    0x1400041c7
   1400041b3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400041b8:	mov    rsi,QWORD PTR [rsp+0x70]
   1400041bd:	mov    rdi,QWORD PTR [rsp+0x68]
   1400041c2:	mov    r14,QWORD PTR [rsp+0x78]
   1400041c7:	test   rsi,rsi
   1400041ca:	je     0x1400041eb
   1400041cc:	cmp    QWORD PTR [rbx+0x18],0x10
   1400041d1:	jb     0x1400041d8
   1400041d3:	mov    rdx,QWORD PTR [rbx]
   1400041d6:	jmp    0x1400041db
   1400041d8:	mov    rdx,rbx
   1400041db:	test   rsi,rsi
   1400041de:	je     0x1400041eb
   1400041e0:	mov    r8,rsi
   1400041e3:	mov    rcx,r14
   1400041e6:	call   0x140008716
   1400041eb:	cmp    QWORD PTR [rbx+0x18],0x10
   1400041f0:	jb     0x1400041fb
   1400041f2:	mov    rcx,QWORD PTR [rbx]
   1400041f5:	call   QWORD PTR [rip+0x6115]        # 0x14000a310
   1400041fb:	mov    BYTE PTR [rbx],0x0
   1400041fe:	mov    QWORD PTR [rbx],r14
   140004201:	mov    QWORD PTR [rbx+0x18],rdi
   140004205:	mov    QWORD PTR [rbx+0x10],rsi
   140004209:	cmp    rdi,0x10
   14000420d:	jb     0x140004212
   14000420f:	mov    rbx,r14
   140004212:	mov    BYTE PTR [rbx+rsi*1],0x0
   140004216:	add    rsp,0x38
   14000421a:	pop    r14
   14000421c:	pop    rdi
   14000421d:	pop    rsi
   14000421e:	pop    rbx
   14000421f:	ret    
   140004220:	int3   
   140004221:	int3   
   140004222:	int3   
   140004223:	int3   
   140004224:	int3   
   140004225:	int3   
   140004226:	int3   
   140004227:	int3   
   140004228:	mov    QWORD PTR [rsp+0x8],rbx
   14000422d:	mov    QWORD PTR [rsp+0x10],rsi
   140004232:	push   rdi
   140004233:	sub    rsp,0x20
   140004237:	mov    rdi,QWORD PTR [rcx+0x10]
   14000423b:	mov    r9,r8
   14000423e:	mov    rbx,rcx
   140004241:	cmp    rdi,rdx
   140004244:	jb     0x1400042cc
   14000424a:	mov    rax,rdi
   14000424d:	sub    rax,rdx
   140004250:	cmp    rax,r8
   140004253:	ja     0x140004270
   140004255:	cmp    QWORD PTR [rcx+0x18],0x8
   14000425a:	mov    QWORD PTR [rcx+0x10],rdx
   14000425e:	jb     0x140004265
   140004260:	mov    rax,QWORD PTR [rcx]
   140004263:	jmp    0x140004268
   140004265:	mov    rax,rcx
   140004268:	xor    esi,esi
   14000426a:	mov    WORD PTR [rax+rdx*2],si
   14000426e:	jmp    0x1400042b9
   140004270:	xor    esi,esi
   140004272:	test   r8,r8
   140004275:	je     0x1400042b9
   140004277:	cmp    QWORD PTR [rcx+0x18],0x8
   14000427c:	jb     0x140004283
   14000427e:	mov    rax,QWORD PTR [rcx]
   140004281:	jmp    0x140004286
   140004283:	mov    rax,rcx
   140004286:	sub    rdi,r8
   140004289:	lea    rcx,[rax+rdx*2]
   14000428d:	mov    r8,rdi
   140004290:	sub    r8,rdx
   140004293:	je     0x1400042a2
   140004295:	add    r8,r8
   140004298:	lea    rdx,[rcx+r9*2]
   14000429c:	call   QWORD PTR [rip+0x60ae]        # 0x14000a350
   1400042a2:	cmp    QWORD PTR [rbx+0x18],0x8
   1400042a7:	mov    QWORD PTR [rbx+0x10],rdi
   1400042ab:	jb     0x1400042b2
   1400042ad:	mov    rax,QWORD PTR [rbx]
   1400042b0:	jmp    0x1400042b5
   1400042b2:	mov    rax,rbx
   1400042b5:	mov    WORD PTR [rax+rdi*2],si
   1400042b9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400042be:	mov    rax,rbx
   1400042c1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042c6:	add    rsp,0x20
   1400042ca:	pop    rdi
   1400042cb:	ret    
   1400042cc:	call   0x140003f14
   1400042d1:	int3   
   1400042d2:	int3   
   1400042d3:	int3   
   1400042d4:	int3   
   1400042d5:	int3   
   1400042d6:	int3   
   1400042d7:	int3   
   1400042d8:	mov    rax,rsp
   1400042db:	mov    QWORD PTR [rax+0x18],r8
   1400042df:	mov    QWORD PTR [rax+0x10],rdx
   1400042e3:	mov    QWORD PTR [rax+0x8],rcx
   1400042e7:	push   rbx
   1400042e8:	push   rsi
   1400042e9:	push   rdi
   1400042ea:	push   r14
   1400042ec:	push   r15
   1400042ee:	sub    rsp,0x30
   1400042f2:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   1400042fa:	mov    r14,r8
   1400042fd:	mov    rbx,rcx
   140004300:	mov    rdi,rdx
   140004303:	or     rdi,0x7
   140004307:	movabs r9,0x7ffffffffffffffe
   140004311:	cmp    rdi,r9
   140004314:	jbe    0x14000431b
   140004316:	mov    rdi,rdx
   140004319:	jmp    0x14000434c
   14000431b:	mov    r8,QWORD PTR [rcx+0x18]
   14000431f:	mov    rcx,r8
   140004322:	shr    rcx,1
   140004325:	movabs rax,0xaaaaaaaaaaaaaaab
   14000432f:	mul    rdi
   140004332:	shr    rdx,1
   140004335:	cmp    rcx,rdx
   140004338:	jbe    0x14000434c
   14000433a:	mov    rax,r9
   14000433d:	sub    rax,rcx
   140004340:	cmp    r8,rax
   140004343:	lea    rdi,[rcx+r8*1]
   140004347:	jbe    0x14000434c
   140004349:	mov    rdi,r9
   14000434c:	lea    rcx,[rdi+0x1]
   140004350:	xor    esi,esi
   140004352:	mov    r15d,esi
   140004355:	test   rcx,rcx
   140004358:	je     0x140004380
   14000435a:	movabs rax,0x7fffffffffffffff
   140004364:	cmp    rcx,rax
   140004367:	ja     0x140004379
   140004369:	add    rcx,rcx
   14000436c:	call   0x140007a8c
   140004371:	mov    r15,rax
   140004374:	test   rax,rax
   140004377:	jne    0x140004380
   140004379:	call   QWORD PTR [rip+0x5ed1]        # 0x14000a250
   14000437f:	nop
   140004380:	jmp    0x140004398
   140004382:	xor    esi,esi
   140004384:	mov    rbx,QWORD PTR [rsp+0x60]
   140004389:	mov    r14,QWORD PTR [rsp+0x70]
   14000438e:	mov    rdi,QWORD PTR [rsp+0x68]
   140004393:	mov    r15,QWORD PTR [rsp+0x78]
   140004398:	test   r14,r14
   14000439b:	je     0x1400043bd
   14000439d:	cmp    QWORD PTR [rbx+0x18],0x8
   1400043a2:	jb     0x1400043a9
   1400043a4:	mov    rdx,QWORD PTR [rbx]
   1400043a7:	jmp    0x1400043ac
   1400043a9:	mov    rdx,rbx
   1400043ac:	test   r14,r14
   1400043af:	je     0x1400043bd
   1400043b1:	lea    r8,[r14+r14*1]
   1400043b5:	mov    rcx,r15
   1400043b8:	call   0x140008716
   1400043bd:	cmp    QWORD PTR [rbx+0x18],0x8
   1400043c2:	jb     0x1400043cd
   1400043c4:	mov    rcx,QWORD PTR [rbx]
   1400043c7:	call   QWORD PTR [rip+0x5f43]        # 0x14000a310
   1400043cd:	mov    QWORD PTR [rbx],r15
   1400043d0:	mov    QWORD PTR [rbx+0x18],rdi
   1400043d4:	mov    QWORD PTR [rbx+0x10],r14
   1400043d8:	cmp    rdi,0x8
   1400043dc:	jb     0x1400043e1
   1400043de:	mov    rbx,r15
   1400043e1:	mov    WORD PTR [rbx+r14*2],si
   1400043e6:	add    rsp,0x30
   1400043ea:	pop    r15
   1400043ec:	pop    r14
   1400043ee:	pop    rdi
   1400043ef:	pop    rsi
   1400043f0:	pop    rbx
   1400043f1:	ret    
   1400043f2:	int3   
   1400043f3:	int3   
   1400043f4:	int3   
   1400043f5:	int3   
   1400043f6:	int3   
   1400043f7:	int3   
   1400043f8:	mov    eax,ecx
   1400043fa:	ret    
   1400043fb:	int3   
   1400043fc:	int3   
   1400043fd:	int3   
   1400043fe:	int3   
   1400043ff:	int3   
   140004400:	int3   
   140004401:	int3   
   140004402:	int3   
   140004403:	int3   
   140004404:	mov    rax,rsp
   140004407:	mov    QWORD PTR [rax+0x10],rbx
   14000440b:	mov    QWORD PTR [rax+0x18],rbp
   14000440f:	mov    QWORD PTR [rax+0x20],rsi
   140004413:	push   rdi
   140004414:	push   r14
   140004416:	push   r15
   140004418:	sub    rsp,0x20
   14000441c:	xor    ebp,ebp
   14000441e:	mov    rbx,rdx
   140004421:	test   r8,r8
   140004424:	mov    WORD PTR [rax+0x8],bp
   140004428:	lea    rdx,[rax+0x8]
   14000442c:	mov    r15,r9
   14000442f:	cmovne rdx,r8
   140004433:	mov    rdi,rcx
   140004436:	test   rdx,rdx
   140004439:	jne    0x140004440
   14000443b:	lea    esi,[rbp+0x2]
   14000443e:	jmp    0x140004455
   140004440:	or     rax,0xffffffffffffffff
   140004444:	inc    rax
   140004447:	cmp    WORD PTR [rdx+rax*2],bp
   14000444b:	jne    0x140004444
   14000444d:	lea    rsi,[rax*2+0x2]
   140004455:	sub    rbx,rcx
   140004458:	shr    rsi,1
   14000445b:	shr    rbx,1
   14000445e:	cmp    rsi,rbx
   140004461:	cmovb  rbx,rsi
   140004465:	lea    r14,[rbx+rbx*1]
   140004469:	mov    r8,r14
   14000446c:	call   0x140008716
   140004471:	test   r15,r15
   140004474:	je     0x140004484
   140004476:	cmp    rbx,0x1
   14000447a:	mov    rax,rbp
   14000447d:	cmova  rax,rdi
   140004481:	mov    QWORD PTR [r15],rax
   140004484:	cmp    rbx,rsi
   140004487:	jae    0x140004496
   140004489:	test   rbx,rbx
   14000448c:	je     0x140004496
   14000448e:	xor    eax,eax
   140004490:	mov    WORD PTR [r14+rdi*1-0x2],ax
   140004496:	mov    rbx,QWORD PTR [rsp+0x48]
   14000449b:	lea    rax,[r14+rdi*1]
   14000449f:	mov    rbp,QWORD PTR [rsp+0x50]
   1400044a4:	mov    rsi,QWORD PTR [rsp+0x58]
   1400044a9:	add    rsp,0x20
   1400044ad:	pop    r15
   1400044af:	pop    r14
   1400044b1:	pop    rdi
   1400044b2:	ret    
   1400044b3:	int3   
   1400044b4:	int3   
   1400044b5:	int3   
   1400044b6:	int3   
   1400044b7:	int3   
   1400044b8:	int3   
   1400044b9:	int3   
   1400044ba:	int3   
   1400044bb:	int3   
   1400044bc:	mov    rax,rsp
   1400044bf:	mov    QWORD PTR [rax+0x10],rbx
   1400044c3:	mov    QWORD PTR [rax+0x18],rsi
   1400044c7:	mov    QWORD PTR [rax+0x20],rdi
   1400044cb:	push   r14
   1400044cd:	sub    rsp,0x20
   1400044d1:	mov    rbx,rdx
   1400044d4:	mov    BYTE PTR [rax+0x8],0x0
   1400044d8:	test   r8,r8
   1400044db:	lea    rdx,[rax+0x8]
   1400044df:	mov    r14,r9
   1400044e2:	mov    rsi,rcx
   1400044e5:	cmovne rdx,r8
   1400044e9:	test   rdx,rdx
   1400044ec:	jne    0x1400044f3
   1400044ee:	lea    edi,[rdx+0x1]
   1400044f1:	jmp    0x140004503
   1400044f3:	or     rdi,0xffffffffffffffff
   1400044f7:	inc    rdi
   1400044fa:	cmp    BYTE PTR [rdx+rdi*1],0x0
   1400044fe:	jne    0x1400044f7
   140004500:	inc    rdi
   140004503:	sub    rbx,rcx
   140004506:	cmp    rdi,rbx
   140004509:	cmovb  rbx,rdi
   14000450d:	mov    r8,rbx
   140004510:	call   0x140008716
   140004515:	test   r14,r14
   140004518:	je     0x140004527
   14000451a:	xor    eax,eax
   14000451c:	cmp    rbx,0x1
   140004520:	cmova  rax,rsi
   140004524:	mov    QWORD PTR [r14],rax
   140004527:	cmp    rbx,rdi
   14000452a:	jae    0x140004537
   14000452c:	test   rbx,rbx
   14000452f:	je     0x140004537
   140004531:	xor    eax,eax
   140004533:	mov    BYTE PTR [rbx+rsi*1-0x1],al
   140004537:	mov    rdi,QWORD PTR [rsp+0x48]
   14000453c:	lea    rax,[rbx+rsi*1]
   140004540:	mov    rbx,QWORD PTR [rsp+0x38]
   140004545:	mov    rsi,QWORD PTR [rsp+0x40]
   14000454a:	add    rsp,0x20
   14000454e:	pop    r14
   140004550:	ret    
   140004551:	int3   
   140004552:	int3   
   140004553:	int3   
   140004554:	int3   
   140004555:	int3   
   140004556:	int3   
   140004557:	int3   
   140004558:	movups xmm0,XMMWORD PTR [rdx]
   14000455b:	mov    BYTE PTR [rcx+0x10],0x1
   14000455f:	mov    rax,rcx
   140004562:	movdqu XMMWORD PTR [rcx],xmm0
   140004566:	ret    
   140004567:	int3   
   140004568:	int3   
   140004569:	int3   
   14000456a:	int3   
   14000456b:	int3   
   14000456c:	int3   
   14000456d:	int3   
   14000456e:	int3   
   14000456f:	int3   
   140004570:	mov    BYTE PTR [rcx+0x1],0x1
   140004574:	mov    rax,rcx
   140004577:	ret    
   140004578:	int3   
   140004579:	int3   
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	mov    rax,QWORD PTR [rdx]
   140004583:	mov    QWORD PTR [rcx],rax
   140004586:	mov    rax,rcx
   140004589:	mov    BYTE PTR [rcx+0x8],0x1
   14000458d:	ret    
   14000458e:	int3   
   14000458f:	int3   
   140004590:	int3   
   140004591:	int3   
   140004592:	int3   
   140004593:	int3   
   140004594:	sub    rsp,0x68
   140004598:	mov    rax,QWORD PTR [rip+0x9a69]        # 0x14000e008
   14000459f:	xor    rax,rsp
   1400045a2:	mov    QWORD PTR [rsp+0x50],rax
   1400045a7:	cmp    DWORD PTR [rcx],0x5
   1400045aa:	jbe    0x1400045ed
   1400045ac:	movabs r8,0x200000000000
   1400045b6:	test   QWORD PTR [rcx+0x10],r8
   1400045ba:	je     0x1400045ed
   1400045bc:	mov    rax,QWORD PTR [rcx+0x18]
   1400045c0:	and    rax,r8
   1400045c3:	cmp    rax,QWORD PTR [rcx+0x18]
   1400045c7:	jne    0x1400045ed
   1400045c9:	lea    rax,[rsp+0x30]
   1400045ce:	mov    r8,rdx
   1400045d1:	mov    QWORD PTR [rsp+0x28],rax
   1400045d6:	lea    rdx,[rip+0x6a44]        # 0x14000b021
   1400045dd:	xor    r9d,r9d
   1400045e0:	mov    DWORD PTR [rsp+0x20],0x2
   1400045e8:	call   0x140001008
   1400045ed:	mov    rcx,QWORD PTR [rsp+0x50]
   1400045f2:	xor    rcx,rsp
   1400045f5:	call   0x140007eb0
   1400045fa:	add    rsp,0x68
   1400045fe:	ret    
   1400045ff:	int3   
   140004600:	int3   
   140004601:	int3   
   140004602:	int3   
   140004603:	int3   
   140004604:	int3   
   140004605:	int3   
   140004606:	int3   
   140004607:	int3   
   140004608:	mov    rax,rsp
   14000460b:	push   rdi
   14000460c:	push   r12
   14000460e:	push   r13
   140004610:	push   r14
   140004612:	push   r15
   140004614:	sub    rsp,0x40
   140004618:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140004620:	mov    QWORD PTR [rax+0x8],rbx
   140004624:	mov    QWORD PTR [rax+0x18],rsi
   140004628:	mov    rdi,rdx
   14000462b:	mov    r14,rcx
   14000462e:	xor    r13d,r13d
   140004631:	mov    esi,r13d
   140004634:	mov    QWORD PTR [rsp+0x78],r13
   140004639:	test   rdx,rdx
   14000463c:	je     0x14000466d
   14000463e:	movabs rax,0x7ffffffffffffff
   140004648:	cmp    rdx,rax
   14000464b:	ja     0x140004666
   14000464d:	mov    rcx,rdx
   140004650:	shl    rcx,0x5
   140004654:	call   0x140007a8c
   140004659:	mov    rsi,rax
   14000465c:	mov    QWORD PTR [rsp+0x78],rax
   140004661:	test   rax,rax
   140004664:	jne    0x14000466d
   140004666:	call   QWORD PTR [rip+0x5be4]        # 0x14000a250
   14000466c:	nop
   14000466d:	mov    r8,rsi
   140004670:	mov    rdx,QWORD PTR [r14+0x8]
   140004674:	mov    rcx,QWORD PTR [r14]
   140004677:	call   0x1400046fc
   14000467c:	nop
   14000467d:	mov    r12,QWORD PTR [r14+0x8]
   140004681:	mov    rbx,QWORD PTR [r14]
   140004684:	mov    r15,r12
   140004687:	sub    r15,rbx
   14000468a:	test   rbx,rbx
   14000468d:	je     0x1400046c3
   14000468f:	jmp    0x1400046b5
   140004691:	cmp    QWORD PTR [rbx+0x18],0x8
   140004696:	jb     0x1400046a1
   140004698:	mov    rcx,QWORD PTR [rbx]
   14000469b:	call   QWORD PTR [rip+0x5c6f]        # 0x14000a310
   1400046a1:	mov    QWORD PTR [rbx+0x18],0x7
   1400046a9:	mov    QWORD PTR [rbx+0x10],r13
   1400046ad:	mov    WORD PTR [rbx],r13w
   1400046b1:	add    rbx,0x20
   1400046b5:	cmp    rbx,r12
   1400046b8:	jne    0x140004691
   1400046ba:	mov    rcx,QWORD PTR [r14]
   1400046bd:	call   QWORD PTR [rip+0x5c4d]        # 0x14000a310
   1400046c3:	shl    rdi,0x5
   1400046c7:	add    rdi,rsi
   1400046ca:	mov    QWORD PTR [r14+0x10],rdi
   1400046ce:	and    r15,0xffffffffffffffe0
   1400046d2:	add    r15,rsi
   1400046d5:	mov    QWORD PTR [r14+0x8],r15
   1400046d9:	mov    QWORD PTR [r14],rsi
   1400046dc:	lea    r11,[rsp+0x40]
   1400046e1:	mov    rbx,QWORD PTR [r11+0x30]
   1400046e5:	mov    rsi,QWORD PTR [r11+0x40]
   1400046e9:	mov    rsp,r11
   1400046ec:	pop    r15
   1400046ee:	pop    r14
   1400046f0:	pop    r13
   1400046f2:	pop    r12
   1400046f4:	pop    rdi
   1400046f5:	ret    
   1400046f6:	int3   
   1400046f7:	int3   
   1400046f8:	int3   
   1400046f9:	int3   
   1400046fa:	int3   
   1400046fb:	int3   
   1400046fc:	mov    rax,rsp
   1400046ff:	mov    QWORD PTR [rax+0x20],r9
   140004703:	mov    QWORD PTR [rax+0x18],r8
   140004707:	push   rdi
   140004708:	sub    rsp,0x30
   14000470c:	mov    QWORD PTR [rax-0x18],0xfffffffffffffffe
   140004714:	mov    QWORD PTR [rax+0x8],rbx
   140004718:	mov    QWORD PTR [rax+0x10],rsi
   14000471c:	mov    rbx,r8
   14000471f:	mov    rsi,rdx
   140004722:	mov    rdi,rcx
   140004725:	mov    QWORD PTR [rsp+0x58],rbx
   14000472a:	cmp    rcx,rdx
   14000472d:	je     0x140004751
   14000472f:	test   rbx,rbx
   140004732:	je     0x14000473f
   140004734:	mov    rdx,rdi
   140004737:	mov    rcx,rbx
   14000473a:	call   0x1400038a4
   14000473f:	add    rbx,0x20
   140004743:	mov    QWORD PTR [rsp+0x50],rbx
   140004748:	add    rdi,0x20
   14000474c:	cmp    rdi,rsi
   14000474f:	jne    0x14000472f
   140004751:	mov    rax,rbx
   140004754:	mov    rbx,QWORD PTR [rsp+0x40]
   140004759:	mov    rsi,QWORD PTR [rsp+0x48]
   14000475e:	add    rsp,0x30
   140004762:	pop    rdi
   140004763:	ret    
   140004764:	int3   
   140004765:	int3   
   140004766:	int3   
   140004767:	int3   
   140004768:	int3   
   140004769:	int3   
   14000476a:	int3   
   14000476b:	int3   
   14000476c:	int3   
   14000476d:	int3   
   14000476e:	int3   
   14000476f:	int3   
   140004770:	xchg   ax,ax
   140004772:	ret    
   140004773:	int3   
   140004774:	int3   
   140004775:	int3   
   140004776:	int3   
   140004777:	int3   
   140004778:	int3   
   140004779:	int3   
   14000477a:	int3   
   14000477b:	int3   
   14000477c:	rex push rbx
   14000477e:	sub    rsp,0x40
   140004782:	mov    rax,QWORD PTR [rip+0x987f]        # 0x14000e008
   140004789:	xor    rax,rsp
   14000478c:	mov    QWORD PTR [rsp+0x38],rax
   140004791:	mov    rax,QWORD PTR [rip+0x98a0]        # 0x14000e038
   140004798:	lea    r9,[rip+0x98b1]        # 0x14000e050
   14000479f:	mov    rbx,r8
   1400047a2:	lea    rdx,[rip+0xffffffffffffc907]        # 0x1400010b0
   1400047a9:	lea    r8,[rip+0x9880]        # 0x14000e030
   1400047b0:	lea    rcx,[rsp+0x28]
   1400047b5:	movups xmm0,XMMWORD PTR [rax-0x10]
   1400047b9:	and    QWORD PTR [rip+0x9897],0x0        # 0x14000e058
   1400047c1:	and    QWORD PTR [rip+0x9897],0x0        # 0x14000e060
   1400047c9:	movdqu XMMWORD PTR [rsp+0x28],xmm0
   1400047cf:	call   QWORD PTR [rip+0x5a23]        # 0x14000a1f8
   1400047d5:	test   eax,eax
   1400047d7:	jne    0x1400047f4
   1400047d9:	mov    r8,QWORD PTR [rip+0x9858]        # 0x14000e038
   1400047e0:	lea    edx,[rax+0x2]
   1400047e3:	mov    rcx,QWORD PTR [rip+0x9866]        # 0x14000e050
   1400047ea:	movzx  r9d,WORD PTR [r8]
   1400047ee:	call   QWORD PTR [rip+0x59fc]        # 0x14000a1f0
   1400047f4:	lea    rcx,[rsp+0x20]
   1400047f9:	call   0x140004570
   1400047fe:	mov    rcx,rbx
   140004801:	call   0x140002fec
   140004806:	cmp    BYTE PTR [rsp+0x21],0x0
   14000480b:	mov    ebx,eax
   14000480d:	je     0x14000482b
   14000480f:	mov    rcx,QWORD PTR [rip+0x983a]        # 0x14000e050
   140004816:	call   QWORD PTR [rip+0x59ec]        # 0x14000a208
   14000481c:	and    QWORD PTR [rip+0x982c],0x0        # 0x14000e050
   140004824:	and    DWORD PTR [rip+0x9805],0x0        # 0x14000e030
   14000482b:	mov    eax,ebx
   14000482d:	mov    rcx,QWORD PTR [rsp+0x38]
   140004832:	xor    rcx,rsp
   140004835:	call   0x140007eb0
   14000483a:	add    rsp,0x40
   14000483e:	pop    rbx
   14000483f:	ret    
   140004840:	int3   
   140004841:	int3   
   140004842:	int3   
   140004843:	int3   
   140004844:	int3   
   140004845:	int3   
   140004846:	int3   
   140004847:	int3   
   140004848:	rex push rbx
   14000484a:	sub    rsp,0x50
   14000484e:	mov    r9d,DWORD PTR [rsp+0x98]
   140004856:	mov    eax,edx
   140004858:	mov    edx,DWORD PTR [rsp+0x90]
   14000485f:	mov    r10,rcx
   140004862:	mov    rcx,QWORD PTR [rsp+0x88]
   14000486a:	movzx  ebx,r9w
   14000486e:	or     ebx,0x80070000
   140004874:	test   r9d,r9d
   140004877:	cmovle ebx,r9d
   14000487b:	xor    r9d,r9d
   14000487e:	mov    DWORD PTR [rsp+0x38],ebx
   140004882:	mov    DWORD PTR [rsp+0x30],edx
   140004886:	mov    edx,eax
   140004888:	mov    QWORD PTR [rsp+0x28],rcx
   14000488d:	mov    rcx,r10
   140004890:	and    QWORD PTR [rsp+0x20],0x0
   140004896:	call   0x140002210
   14000489b:	mov    eax,ebx
   14000489d:	add    rsp,0x50
   1400048a1:	pop    rbx
   1400048a2:	ret    
   1400048a3:	int3   
   1400048a4:	int3   
   1400048a5:	int3   
   1400048a6:	int3   
   1400048a7:	int3   
   1400048a8:	int3   
   1400048a9:	int3   
   1400048aa:	int3   
   1400048ab:	int3   
   1400048ac:	mov    rax,rsp
   1400048af:	mov    QWORD PTR [rax+0x8],rbx
   1400048b3:	mov    QWORD PTR [rax+0x10],rbp
   1400048b7:	mov    QWORD PTR [rax+0x18],rsi
   1400048bb:	mov    QWORD PTR [rax+0x20],rdi
   1400048bf:	push   r14
   1400048c1:	sub    rsp,0x50
   1400048c5:	mov    rdi,r8
   1400048c8:	mov    esi,edx
   1400048ca:	mov    rbp,rcx
   1400048cd:	call   QWORD PTR [rip+0x5785]        # 0x14000a058
   1400048d3:	mov    r14,QWORD PTR [rsp+0x88]
   1400048db:	mov    ebx,eax
   1400048dd:	test   eax,eax
   1400048df:	jne    0x140004911
   1400048e1:	mov    DWORD PTR [rsp+0x38],0x8007029c
   1400048e9:	xor    r9d,r9d
   1400048ec:	mov    DWORD PTR [rsp+0x30],0x3
   1400048f4:	mov    r8,rdi
   1400048f7:	mov    QWORD PTR [rsp+0x28],r14
   1400048fc:	mov    edx,esi
   1400048fe:	and    QWORD PTR [rsp+0x20],0x0
   140004904:	mov    rcx,rbp
   140004907:	call   0x140002408
   14000490c:	mov    ebx,0x29c
   140004911:	movzx  ecx,bx
   140004914:	mov    r8,rdi
   140004917:	or     ecx,0x80070000
   14000491d:	mov    edx,esi
   14000491f:	test   ebx,ebx
   140004921:	cmovle ecx,ebx
   140004924:	xor    r9d,r9d
   140004927:	mov    DWORD PTR [rsp+0x38],ecx
   14000492b:	mov    rcx,rbp
   14000492e:	and    DWORD PTR [rsp+0x30],0x0
   140004933:	mov    QWORD PTR [rsp+0x28],r14
   140004938:	and    QWORD PTR [rsp+0x20],0x0
   14000493e:	call   0x140002210
   140004943:	mov    rbp,QWORD PTR [rsp+0x68]
   140004948:	mov    eax,ebx
   14000494a:	mov    rbx,QWORD PTR [rsp+0x60]
   14000494f:	mov    rsi,QWORD PTR [rsp+0x70]
   140004954:	mov    rdi,QWORD PTR [rsp+0x78]
   140004959:	add    rsp,0x50
   14000495d:	pop    r14
   14000495f:	ret    
   140004960:	int3   
   140004961:	int3   
   140004962:	int3   
   140004963:	int3   
   140004964:	int3   
   140004965:	int3   
   140004966:	int3   
   140004967:	int3   
   140004968:	sub    rsp,0x48
   14000496c:	mov    rax,QWORD PTR [rsp+0x48]
   140004971:	mov    QWORD PTR [rsp+0x28],rax
   140004976:	call   0x1400048ac
   14000497b:	add    rsp,0x48
   14000497f:	ret    
   140004980:	int3   
   140004981:	int3   
   140004982:	int3   
   140004983:	int3   
   140004984:	int3   
   140004985:	int3   
   140004986:	int3   
   140004987:	int3   
   140004988:	sub    rsp,0x48
   14000498c:	mov    rax,QWORD PTR [rsp+0x48]
   140004991:	lea    r8,[rip+0x60c8]        # 0x14000aa60
   140004998:	mov    edx,0x52
   14000499d:	mov    QWORD PTR [rsp+0x28],rax
   1400049a2:	call   0x1400048ac
   1400049a7:	add    rsp,0x48
   1400049ab:	ret    
   1400049ac:	int3   
   1400049ad:	int3   
   1400049ae:	int3   
   1400049af:	int3   
   1400049b0:	int3   
   1400049b1:	int3   
   1400049b2:	int3   
   1400049b3:	int3   
   1400049b4:	sub    rsp,0x48
   1400049b8:	mov    rax,QWORD PTR [rsp+0x48]
   1400049bd:	lea    r8,[rip+0x609c]        # 0x14000aa60
   1400049c4:	mov    DWORD PTR [rsp+0x38],r9d
   1400049c9:	and    DWORD PTR [rsp+0x30],0x0
   1400049ce:	mov    QWORD PTR [rsp+0x28],rax
   1400049d3:	call   0x140004848
   1400049d8:	add    rsp,0x48
   1400049dc:	ret    
   1400049dd:	int3   
   1400049de:	int3   
   1400049df:	int3   
   1400049e0:	int3   
   1400049e1:	int3   
   1400049e2:	int3   
   1400049e3:	int3   
   1400049e4:	sub    rsp,0x48
   1400049e8:	mov    rax,QWORD PTR [rsp+0x48]
   1400049ed:	lea    r8,[rip+0x606c]        # 0x14000aa60
   1400049f4:	mov    DWORD PTR [rsp+0x38],0x8007000e
   1400049fc:	xor    r9d,r9d
   1400049ff:	and    DWORD PTR [rsp+0x30],0x0
   140004a04:	mov    QWORD PTR [rsp+0x28],rax
   140004a09:	and    QWORD PTR [rsp+0x20],0x0
   140004a0f:	lea    edx,[r9+0x4b]
   140004a13:	call   0x140002408
   140004a18:	add    rsp,0x48
   140004a1c:	ret    
   140004a1d:	int3   
   140004a1e:	int3   
   140004a1f:	int3   
   140004a20:	int3   
   140004a21:	int3   
   140004a22:	int3   
   140004a23:	int3   
   140004a24:	rex push rbx
   140004a26:	sub    rsp,0x60
   140004a2a:	mov    rax,QWORD PTR [rip+0x95d7]        # 0x14000e008
   140004a31:	xor    rax,rsp
   140004a34:	mov    QWORD PTR [rsp+0x50],rax
   140004a39:	lea    rax,[rip+0x5fe0]        # 0x14000aa20
   140004a40:	mov    rbx,rcx
   140004a43:	mov    QWORD PTR [rcx],rax
   140004a46:	xor    eax,eax
   140004a48:	mov    QWORD PTR [rcx+0x8],rax
   140004a4c:	mov    QWORD PTR [rcx+0x10],rax
   140004a50:	mov    QWORD PTR [rcx+0x18],rax
   140004a54:	cmp    DWORD PTR [rip+0x95d5],0x5        # 0x14000e030
   140004a5b:	jbe    0x140004a88
   140004a5d:	lea    rax,[rsp+0x30]
   140004a62:	xor    r9d,r9d
   140004a65:	mov    QWORD PTR [rsp+0x28],rax
   140004a6a:	lea    rdx,[rip+0x684e]        # 0x14000b2bf
   140004a71:	xor    r8d,r8d
   140004a74:	mov    DWORD PTR [rsp+0x20],0x2
   140004a7c:	lea    rcx,[rip+0x95ad]        # 0x14000e030
   140004a83:	call   0x140001008
   140004a88:	mov    rax,rbx
   140004a8b:	mov    rcx,QWORD PTR [rsp+0x50]
   140004a90:	xor    rcx,rsp
   140004a93:	call   0x140007eb0
   140004a98:	add    rsp,0x60
   140004a9c:	pop    rbx
   140004a9d:	ret    
   140004a9e:	int3   
   140004a9f:	int3   
   140004aa0:	int3   
   140004aa1:	int3   
   140004aa2:	int3   
   140004aa3:	int3   
   140004aa4:	int3   
   140004aa5:	int3   
   140004aa6:	int3   
   140004aa7:	int3   
   140004aa8:	int3   
   140004aa9:	int3   
   140004aaa:	int3   
   140004aab:	int3   
   140004aac:	int3   
   140004aad:	int3   
   140004aae:	int3   
   140004aaf:	int3   
   140004ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140004ab5:	push   rdi
   140004ab6:	sub    rsp,0x20
   140004aba:	mov    ebx,edx
   140004abc:	mov    rdi,rcx
   140004abf:	call   0x140004ae8
   140004ac4:	test   bl,0x1
   140004ac7:	je     0x140004ad2
   140004ac9:	mov    rcx,rdi
   140004acc:	call   QWORD PTR [rip+0x583e]        # 0x14000a310
   140004ad2:	mov    rax,rdi
   140004ad5:	mov    rbx,QWORD PTR [rsp+0x30]
   140004ada:	add    rsp,0x20
   140004ade:	pop    rdi
   140004adf:	ret    
   140004ae0:	int3   
   140004ae1:	int3   
   140004ae2:	int3   
   140004ae3:	int3   
   140004ae4:	int3   
   140004ae5:	int3   
   140004ae6:	int3   
   140004ae7:	int3   
   140004ae8:	mov    r11,rsp
   140004aeb:	mov    QWORD PTR [r11+0x10],rbx
   140004aef:	mov    QWORD PTR [r11+0x18],rbp
   140004af3:	mov    QWORD PTR [r11+0x20],rsi
   140004af7:	push   rdi
   140004af8:	sub    rsp,0x60
   140004afc:	mov    rax,QWORD PTR [rip+0x9505]        # 0x14000e008
   140004b03:	xor    rax,rsp
   140004b06:	mov    QWORD PTR [rsp+0x50],rax
   140004b0b:	lea    rax,[rip+0x5f0e]        # 0x14000aa20
   140004b12:	mov    rdi,rcx
   140004b15:	mov    QWORD PTR [rcx],rax
   140004b18:	cmp    DWORD PTR [rip+0x9511],0x5        # 0x14000e030
   140004b1f:	jbe    0x140004b4a
   140004b21:	lea    rax,[r11-0x38]
   140004b25:	xor    r9d,r9d
   140004b28:	mov    QWORD PTR [r11-0x40],rax
   140004b2c:	lea    rdx,[rip+0x66ca]        # 0x14000b1fd
   140004b33:	xor    r8d,r8d
   140004b36:	mov    DWORD PTR [rsp+0x20],0x2
   140004b3e:	lea    rcx,[rip+0x94eb]        # 0x14000e030
   140004b45:	call   0x140001008
   140004b4a:	mov    rbx,QWORD PTR [rdi+0x8]
   140004b4e:	xor    ebp,ebp
   140004b50:	test   rbx,rbx
   140004b53:	je     0x140004b99
   140004b55:	mov    rsi,QWORD PTR [rdi+0x10]
   140004b59:	jmp    0x140004b7e
   140004b5b:	cmp    QWORD PTR [rbx+0x18],0x8
   140004b60:	jb     0x140004b6b
   140004b62:	mov    rcx,QWORD PTR [rbx]
   140004b65:	call   QWORD PTR [rip+0x57a5]        # 0x14000a310
   140004b6b:	mov    QWORD PTR [rbx+0x18],0x7
   140004b73:	mov    QWORD PTR [rbx+0x10],rbp
   140004b77:	mov    WORD PTR [rbx],bp
   140004b7a:	add    rbx,0x20
   140004b7e:	cmp    rbx,rsi
   140004b81:	jne    0x140004b5b
   140004b83:	mov    rcx,QWORD PTR [rdi+0x8]
   140004b87:	call   QWORD PTR [rip+0x5783]        # 0x14000a310
   140004b8d:	mov    QWORD PTR [rdi+0x8],rbp
   140004b91:	mov    QWORD PTR [rdi+0x10],rbp
   140004b95:	mov    QWORD PTR [rdi+0x18],rbp
   140004b99:	mov    rcx,QWORD PTR [rsp+0x50]
   140004b9e:	xor    rcx,rsp
   140004ba1:	call   0x140007eb0
   140004ba6:	lea    r11,[rsp+0x60]
   140004bab:	mov    rbx,QWORD PTR [r11+0x18]
   140004baf:	mov    rbp,QWORD PTR [r11+0x20]
   140004bb3:	mov    rsi,QWORD PTR [r11+0x28]
   140004bb7:	mov    rsp,r11
   140004bba:	pop    rdi
   140004bbb:	ret    
   140004bbc:	int3   
   140004bbd:	int3   
   140004bbe:	int3   
   140004bbf:	int3   
   140004bc0:	int3   
   140004bc1:	int3   
   140004bc2:	int3   
   140004bc3:	int3   
   140004bc4:	mov    rax,rsp
   140004bc7:	push   rbp
   140004bc8:	push   rdi
   140004bc9:	push   r12
   140004bcb:	push   r14
   140004bcd:	push   r15
   140004bcf:	lea    rbp,[rax-0x5f]
   140004bd3:	sub    rsp,0xb0
   140004bda:	mov    QWORD PTR [rbp-0x29],0xfffffffffffffffe
   140004be2:	mov    QWORD PTR [rax+0x18],rbx
   140004be6:	mov    QWORD PTR [rax+0x20],rsi
   140004bea:	mov    rax,QWORD PTR [rip+0x9417]        # 0x14000e008
   140004bf1:	xor    rax,rsp
   140004bf4:	mov    QWORD PTR [rbp+0x27],rax
   140004bf8:	mov    rsi,rdx
   140004bfb:	mov    r15,rcx
   140004bfe:	xorps  xmm0,xmm0
   140004c01:	movdqu XMMWORD PTR [rbp-0x41],xmm0
   140004c06:	xor    r12d,r12d
   140004c09:	mov    r14d,r12d
   140004c0c:	mov    QWORD PTR [rbp-0x31],r12
   140004c10:	mov    eax,0x8007007a
   140004c15:	mov    DWORD PTR [rbp-0x49],eax
   140004c18:	mov    ebx,0x208
   140004c1d:	mov    rdi,QWORD PTR [rbp-0x41]
   140004c21:	cmp    rbx,0xfffffff
   140004c28:	jae    0x140004c97
   140004c2a:	mov    rax,r14
   140004c2d:	sub    rax,rdi
   140004c30:	sar    rax,1
   140004c33:	cmp    rax,rbx
   140004c36:	jae    0x140004c5b
   140004c38:	movabs rax,0x7fffffffffffffff
   140004c42:	cmp    rbx,rax
   140004c45:	ja     0x140004c91
   140004c47:	mov    rdx,rbx
   140004c4a:	lea    rcx,[rbp-0x41]
   140004c4e:	call   0x140003ccc
   140004c53:	mov    r14,QWORD PTR [rbp-0x31]
   140004c57:	mov    rdi,QWORD PTR [rbp-0x41]
   140004c5b:	cmp    QWORD PTR [rsi+0x18],0x8
   140004c60:	jb     0x140004c67
   140004c62:	mov    r8,QWORD PTR [rsi]
   140004c65:	jmp    0x140004c6a
   140004c67:	mov    r8,rsi
   140004c6a:	mov    rdx,r14
   140004c6d:	sub    rdx,rdi
   140004c70:	sar    rdx,1
   140004c73:	mov    r9d,0x1
   140004c79:	mov    rcx,rdi
   140004c7c:	call   QWORD PTR [rip+0x5476]        # 0x14000a0f8
   140004c82:	mov    DWORD PTR [rbp-0x49],eax
   140004c85:	add    rbx,rbx
   140004c88:	cmp    eax,0x8007007a
   140004c8d:	jne    0x140004c97
   140004c8f:	jmp    0x140004c21
   140004c91:	call   0x140003d88
   140004c96:	int3   
   140004c97:	test   eax,eax
   140004c99:	js     0x140004e56
   140004c9f:	mov    QWORD PTR [rbp-0x1],0x7
   140004ca7:	mov    QWORD PTR [rbp-0x9],r12
   140004cab:	mov    WORD PTR [rbp-0x19],r12w
   140004cb0:	mov    rdx,rdi
   140004cb3:	lea    rcx,[rbp-0x19]
   140004cb7:	call   0x140003b20
   140004cbc:	nop
   140004cbd:	lea    rbx,[r15+0x8]
   140004cc1:	mov    rcx,QWORD PTR [rbx+0x8]
   140004cc5:	lea    rax,[rbp-0x19]
   140004cc9:	cmp    rax,rcx
   140004ccc:	jae    0x140004d6a
   140004cd2:	lea    rax,[rbp-0x19]
   140004cd6:	cmp    QWORD PTR [rbx],rax
   140004cd9:	ja     0x140004d6a
   140004cdf:	lea    rsi,[rbp-0x19]
   140004ce3:	sub    rsi,QWORD PTR [rbx]
   140004ce6:	mov    rdx,QWORD PTR [rbx+0x10]
   140004cea:	cmp    rcx,rdx
   140004ced:	jne    0x140004d51
   140004cef:	mov    rax,rdx
   140004cf2:	sub    rax,rcx
   140004cf5:	sar    rax,0x5
   140004cf9:	cmp    rax,0x1
   140004cfd:	jae    0x140004d51
   140004cff:	sub    rcx,QWORD PTR [rbx]
   140004d02:	sar    rcx,0x5
   140004d06:	movabs r8,0x7ffffffffffffff
   140004d10:	mov    rax,r8
   140004d13:	sub    rax,rcx
   140004d16:	cmp    rax,0x1
   140004d1a:	jae    0x140004d22
   140004d1c:	call   0x140003d88
   140004d21:	int3   
   140004d22:	inc    rcx
   140004d25:	sub    rdx,QWORD PTR [rbx]
   140004d28:	sar    rdx,0x5
   140004d2c:	mov    rax,rdx
   140004d2f:	shr    rax,1
   140004d32:	sub    r8,rax
   140004d35:	cmp    r8,rdx
   140004d38:	jae    0x140004d3f
   140004d3a:	mov    rdx,r12
   140004d3d:	jmp    0x140004d42
   140004d3f:	add    rdx,rax
   140004d42:	cmp    rdx,rcx
   140004d45:	cmovb  rdx,rcx
   140004d49:	mov    rcx,rbx
   140004d4c:	call   0x140004608
   140004d51:	and    rsi,0xffffffffffffffe0
   140004d55:	add    rsi,QWORD PTR [rbx]
   140004d58:	mov    rcx,QWORD PTR [rbx+0x8]
   140004d5c:	test   rcx,rcx
   140004d5f:	je     0x140004de7
   140004d65:	mov    rdx,rsi
   140004d68:	jmp    0x140004de2
   140004d6a:	mov    rdx,QWORD PTR [rbx+0x10]
   140004d6e:	cmp    rcx,rdx
   140004d71:	jne    0x140004dd5
   140004d73:	mov    rax,rdx
   140004d76:	sub    rax,rcx
   140004d79:	sar    rax,0x5
   140004d7d:	cmp    rax,0x1
   140004d81:	jae    0x140004dd5
   140004d83:	sub    rcx,QWORD PTR [rbx]
   140004d86:	sar    rcx,0x5
   140004d8a:	movabs r8,0x7ffffffffffffff
   140004d94:	mov    rax,r8
   140004d97:	sub    rax,rcx
   140004d9a:	cmp    rax,0x1
   140004d9e:	jae    0x140004da6
   140004da0:	call   0x140003d88
   140004da5:	int3   
   140004da6:	inc    rcx
   140004da9:	sub    rdx,QWORD PTR [rbx]
   140004dac:	sar    rdx,0x5
   140004db0:	mov    rax,rdx
   140004db3:	shr    rax,1
   140004db6:	sub    r8,rax
   140004db9:	cmp    r8,rdx
   140004dbc:	jae    0x140004dc3
   140004dbe:	mov    rdx,r12
   140004dc1:	jmp    0x140004dc6
   140004dc3:	add    rdx,rax
   140004dc6:	cmp    rdx,rcx
   140004dc9:	cmovb  rdx,rcx
   140004dcd:	mov    rcx,rbx
   140004dd0:	call   0x140004608
   140004dd5:	mov    rcx,QWORD PTR [rbx+0x8]
   140004dd9:	test   rcx,rcx
   140004ddc:	je     0x140004de7
   140004dde:	lea    rdx,[rbp-0x19]
   140004de2:	call   0x1400038a4
   140004de7:	add    QWORD PTR [rbx+0x8],0x20
   140004dec:	cmp    QWORD PTR [rbp-0x1],0x8
   140004df1:	jb     0x140004dfd
   140004df3:	mov    rcx,QWORD PTR [rbp-0x19]
   140004df7:	call   QWORD PTR [rip+0x5513]        # 0x14000a310
   140004dfd:	cmp    DWORD PTR [rip+0x922c],0x5        # 0x14000e030
   140004e04:	jbe    0x140004ec8
   140004e0a:	lea    rcx,[rip+0x572f]        # 0x14000a540
   140004e11:	mov    rax,r12
   140004e14:	test   rdi,rdi
   140004e17:	je     0x140004e2a
   140004e19:	mov    rcx,rdi
   140004e1c:	or     rax,0xffffffffffffffff
   140004e20:	inc    rax
   140004e23:	cmp    WORD PTR [rdi+rax*2],r12w
   140004e28:	jne    0x140004e20
   140004e2a:	mov    QWORD PTR [rbp+0x7],rcx
   140004e2e:	lea    eax,[rax*2+0x2]
   140004e35:	mov    DWORD PTR [rbp+0xf],eax
   140004e38:	mov    DWORD PTR [rbp+0x13],r12d
   140004e3c:	lea    rax,[rbp-0x19]
   140004e40:	mov    QWORD PTR [rsp+0x28],rax
   140004e45:	mov    DWORD PTR [rsp+0x20],0x3
   140004e4d:	lea    rdx,[rip+0x64ff]        # 0x14000b353
   140004e54:	jmp    0x140004eb6
   140004e56:	cmp    DWORD PTR [rip+0x91d3],0x3        # 0x14000e030
   140004e5d:	jbe    0x140004ecb
   140004e5f:	lea    rcx,[rip+0x56da]        # 0x14000a540
   140004e66:	mov    rax,r12
   140004e69:	test   rdi,rdi
   140004e6c:	je     0x140004e7f
   140004e6e:	mov    rcx,rdi
   140004e71:	or     rax,0xffffffffffffffff
   140004e75:	inc    rax
   140004e78:	cmp    WORD PTR [rdi+rax*2],r12w
   140004e7d:	jne    0x140004e75
   140004e7f:	mov    QWORD PTR [rbp+0x7],rcx
   140004e83:	lea    eax,[rax*2+0x2]
   140004e8a:	mov    DWORD PTR [rbp+0xf],eax
   140004e8d:	mov    DWORD PTR [rbp+0x13],r12d
   140004e91:	lea    rax,[rbp-0x49]
   140004e95:	mov    QWORD PTR [rbp+0x17],rax
   140004e99:	mov    ecx,0x4
   140004e9e:	mov    QWORD PTR [rbp+0x1f],rcx
   140004ea2:	lea    rax,[rbp-0x19]
   140004ea6:	mov    QWORD PTR [rsp+0x28],rax
   140004eab:	mov    DWORD PTR [rsp+0x20],ecx
   140004eaf:	lea    rdx,[rip+0x636d]        # 0x14000b223
   140004eb6:	xor    r9d,r9d
   140004eb9:	xor    r8d,r8d
   140004ebc:	lea    rcx,[rip+0x916d]        # 0x14000e030
   140004ec3:	call   0x140001008
   140004ec8:	mov    eax,DWORD PTR [rbp-0x49]
   140004ecb:	test   eax,eax
   140004ecd:	setns  bl
   140004ed0:	test   rdi,rdi
   140004ed3:	je     0x140004ede
   140004ed5:	mov    rcx,rdi
   140004ed8:	call   QWORD PTR [rip+0x5432]        # 0x14000a310
   140004ede:	mov    al,bl
   140004ee0:	mov    rcx,QWORD PTR [rbp+0x27]
   140004ee4:	xor    rcx,rsp
   140004ee7:	call   0x140007eb0
   140004eec:	lea    r11,[rsp+0xb0]
   140004ef4:	mov    rbx,QWORD PTR [r11+0x40]
   140004ef8:	mov    rsi,QWORD PTR [r11+0x48]
   140004efc:	mov    rsp,r11
   140004eff:	pop    r15
   140004f01:	pop    r14
   140004f03:	pop    r12
   140004f05:	pop    rdi
   140004f06:	pop    rbp
   140004f07:	ret    
   140004f08:	int3   
   140004f09:	int3   
   140004f0a:	int3   
   140004f0b:	int3   
   140004f0c:	int3   
   140004f0d:	int3   
   140004f0e:	int3   
   140004f0f:	int3   
   140004f10:	mov    rax,rsp
   140004f13:	push   rbp
   140004f14:	push   rdi
   140004f15:	push   r12
   140004f17:	push   r14
   140004f19:	push   r15
   140004f1b:	lea    rbp,[rax-0x5f]
   140004f1f:	sub    rsp,0xa0
   140004f26:	mov    QWORD PTR [rbp-0x19],0xfffffffffffffffe
   140004f2e:	mov    QWORD PTR [rax+0x10],rbx
   140004f32:	mov    QWORD PTR [rax+0x18],rsi
   140004f36:	mov    rax,QWORD PTR [rip+0x90cb]        # 0x14000e008
   140004f3d:	xor    rax,rsp
   140004f40:	mov    QWORD PTR [rbp+0x2f],rax
   140004f44:	mov    r15,rcx
   140004f47:	xor    r12d,r12d
   140004f4a:	mov    QWORD PTR [rbp-0x21],r12
   140004f4e:	lea    rax,[rbp-0x21]
   140004f52:	mov    QWORD PTR [rsp+0x20],rax
   140004f57:	mov    r9d,0x20019
   140004f5d:	xor    r8d,r8d
   140004f60:	lea    rdx,[rip+0x5b49]        # 0x14000aab0
   140004f67:	mov    rcx,0xffffffff80000002
   140004f6e:	call   QWORD PTR [rip+0x520c]        # 0x14000a180
   140004f74:	mov    rcx,QWORD PTR [rbp+0x5f]
   140004f78:	test   eax,eax
   140004f7a:	je     0x140004f8a
   140004f7c:	mov    r9d,eax
   140004f7f:	lea    edx,[r12+0x38]
   140004f84:	call   0x1400049b4
   140004f89:	int3   
   140004f8a:	mov    esi,r12d
   140004f8d:	xor    edx,edx
   140004f8f:	jmp    0x1400050b0
   140004f94:	mov    rcx,QWORD PTR [rbp+0x5f]
   140004f98:	test   eax,eax
   140004f9a:	jne    0x140005124
   140004fa0:	cmp    DWORD PTR [rbp-0x29],0x8
   140004fa4:	setb   al
   140004fa7:	mov    rcx,QWORD PTR [rbp+0x5f]
   140004fab:	test   al,al
   140004fad:	je     0x14000510c
   140004fb3:	mov    ecx,DWORD PTR [rbp-0x25]
   140004fb6:	call   0x1400085b0
   140004fbb:	mov    rbx,rax
   140004fbe:	mov    QWORD PTR [rbp-0x9],rax
   140004fc2:	mov    rcx,QWORD PTR [rbp+0x5f]
   140004fc6:	test   rax,rax
   140004fc9:	je     0x140005106
   140004fcf:	mov    DWORD PTR [rbp-0x29],0x7
   140004fd6:	lea    rax,[rbp-0x25]
   140004fda:	mov    QWORD PTR [rsp+0x38],rax
   140004fdf:	mov    QWORD PTR [rsp+0x30],rbx
   140004fe4:	mov    QWORD PTR [rsp+0x28],r12
   140004fe9:	mov    QWORD PTR [rsp+0x20],r12
   140004fee:	lea    r9,[rbp-0x29]
   140004ff2:	lea    r8,[rbp+0x1f]
   140004ff6:	mov    edx,esi
   140004ff8:	mov    rcx,QWORD PTR [rbp-0x21]
   140004ffc:	call   QWORD PTR [rip+0x5176]        # 0x14000a178
   140005002:	mov    rcx,QWORD PTR [rbp+0x5f]
   140005006:	test   eax,eax
   140005008:	jne    0x1400050f8
   14000500e:	xor    r8d,r8d
   140005011:	xor    edx,edx
   140005013:	mov    rcx,rbx
   140005016:	call   QWORD PTR [rip+0x5104]        # 0x14000a120
   14000501c:	mov    r14d,eax
   14000501f:	test   eax,eax
   140005021:	mov    rcx,QWORD PTR [rbp+0x5f]
   140005025:	je     0x1400050f2
   14000502b:	mov    eax,0x2
   140005030:	mul    r14
   140005033:	mov    rcx,0xffffffffffffffff
   14000503a:	cmovo  rax,rcx
   14000503e:	mov    rcx,rax
   140005041:	call   0x1400085b0
   140005046:	mov    rdi,rax
   140005049:	mov    QWORD PTR [rbp-0x11],rax
   14000504d:	mov    r8d,r14d
   140005050:	mov    rdx,rax
   140005053:	mov    rcx,rbx
   140005056:	call   QWORD PTR [rip+0x50c4]        # 0x14000a120
   14000505c:	mov    QWORD PTR [rbp+0x17],0x7
   140005064:	mov    QWORD PTR [rbp+0xf],r12
   140005068:	mov    WORD PTR [rbp-0x1],r12w
   14000506d:	mov    rdx,rdi
   140005070:	lea    rcx,[rbp-0x1]
   140005074:	call   0x140003b20
   140005079:	nop
   14000507a:	lea    rdx,[rbp-0x1]
   14000507e:	mov    rcx,r15
   140005081:	call   0x140004bc4
   140005086:	nop
   140005087:	cmp    QWORD PTR [rbp+0x17],0x8
   14000508c:	jb     0x140005099
   14000508e:	mov    rcx,QWORD PTR [rbp-0x1]
   140005092:	call   QWORD PTR [rip+0x5278]        # 0x14000a310
   140005098:	nop
   140005099:	mov    rcx,rdi
   14000509c:	call   QWORD PTR [rip+0x528e]        # 0x14000a330
   1400050a2:	nop
   1400050a3:	mov    rcx,rbx
   1400050a6:	call   QWORD PTR [rip+0x5284]        # 0x14000a330
   1400050ac:	inc    esi
   1400050ae:	mov    edx,esi
   1400050b0:	lea    rax,[rbp-0x25]
   1400050b4:	mov    QWORD PTR [rsp+0x38],rax
   1400050b9:	mov    QWORD PTR [rsp+0x30],r12
   1400050be:	mov    QWORD PTR [rsp+0x28],r12
   1400050c3:	mov    QWORD PTR [rsp+0x20],r12
   1400050c8:	mov    DWORD PTR [rbp-0x29],0x7
   1400050cf:	mov    DWORD PTR [rbp-0x25],r12d
   1400050d3:	lea    r9,[rbp-0x29]
   1400050d7:	lea    r8,[rbp+0x1f]
   1400050db:	mov    rcx,QWORD PTR [rbp-0x21]
   1400050df:	call   QWORD PTR [rip+0x5093]        # 0x14000a178
   1400050e5:	cmp    eax,0x103
   1400050ea:	jne    0x140004f94
   1400050f0:	jmp    0x140005132
   1400050f2:	call   0x140004988
   1400050f7:	int3   
   1400050f8:	mov    r9d,eax
   1400050fb:	mov    edx,0x4e
   140005100:	call   0x1400049b4
   140005105:	int3   
   140005106:	call   0x1400049e4
   14000510b:	nop
   14000510c:	mov    r9d,0x8000ffff
   140005112:	lea    r8,[rip+0x5947]        # 0x14000aa60
   140005119:	mov    edx,0x47
   14000511e:	call   0x140002534
   140005123:	int3   
   140005124:	mov    r9d,eax
   140005127:	mov    edx,0x46
   14000512c:	call   0x1400049b4
   140005131:	nop
   140005132:	mov    rcx,QWORD PTR [rbp-0x21]
   140005136:	test   rcx,rcx
   140005139:	je     0x140005141
   14000513b:	call   QWORD PTR [rip+0x502f]        # 0x14000a170
   140005141:	mov    rcx,QWORD PTR [rbp+0x2f]
   140005145:	xor    rcx,rsp
   140005148:	call   0x140007eb0
   14000514d:	lea    r11,[rsp+0xa0]
   140005155:	mov    rbx,QWORD PTR [r11+0x38]
   140005159:	mov    rsi,QWORD PTR [r11+0x40]
   14000515d:	mov    rsp,r11
   140005160:	pop    r15
   140005162:	pop    r14
   140005164:	pop    r12
   140005166:	pop    rdi
   140005167:	pop    rbp
   140005168:	ret    
   140005169:	int3   
   14000516a:	int3   
   14000516b:	int3   
   14000516c:	int3   
   14000516d:	int3   
   14000516e:	int3   
   14000516f:	int3   
   140005170:	sub    rsp,0x28
   140005174:	mov    rcx,QWORD PTR [rcx]
   140005177:	test   rcx,rcx
   14000517a:	je     0x140005182
   14000517c:	call   QWORD PTR [rip+0x4fee]        # 0x14000a170
   140005182:	add    rsp,0x28
   140005186:	ret    
   140005187:	int3   
   140005188:	int3   
   140005189:	int3   
   14000518a:	int3   
   14000518b:	int3   
   14000518c:	int3   
   14000518d:	int3   
   14000518e:	int3   
   14000518f:	int3   
   140005190:	mov    rax,rsp
   140005193:	push   rbp
   140005194:	push   r12
   140005196:	push   r13
   140005198:	push   r14
   14000519a:	push   r15
   14000519c:	lea    rbp,[rax-0x2e8]
   1400051a3:	sub    rsp,0x3c0
   1400051aa:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   1400051b2:	mov    QWORD PTR [rax+0x8],rbx
   1400051b6:	mov    QWORD PTR [rax+0x18],rsi
   1400051ba:	mov    QWORD PTR [rax+0x20],rdi
   1400051be:	mov    rax,QWORD PTR [rip+0x8e43]        # 0x14000e008
   1400051c5:	xor    rax,rsp
   1400051c8:	mov    QWORD PTR [rbp+0x2b0],rax
   1400051cf:	mov    r12,rdx
   1400051d2:	mov    QWORD PTR [rsp+0x40],rdx
   1400051d7:	mov    QWORD PTR [rbp-0x38],rdx
   1400051db:	xor    ebx,ebx
   1400051dd:	mov    DWORD PTR [rsp+0x48],ebx
   1400051e1:	mov    QWORD PTR [rdx],rbx
   1400051e4:	mov    QWORD PTR [rdx+0x8],rbx
   1400051e8:	mov    QWORD PTR [rdx+0x10],rbx
   1400051ec:	mov    DWORD PTR [rsp+0x48],0x1
   1400051f4:	mov    rsi,QWORD PTR [rcx+0x8]
   1400051f8:	mov    rdi,QWORD PTR [rcx+0x10]
   1400051fc:	cmp    rsi,rdi
   1400051ff:	je     0x140005b02
   140005205:	or     r15,0xffffffffffffffff
   140005209:	lea    r13,[rip+0x5330]        # 0x14000a540
   140005210:	movabs r14,0x7fffffffffffffff
   14000521a:	cmp    QWORD PTR [rsi+0x18],0x8
   14000521f:	jb     0x140005226
   140005221:	mov    rcx,QWORD PTR [rsi]
   140005224:	jmp    0x140005229
   140005226:	mov    rcx,rsi
   140005229:	call   QWORD PTR [rip+0x4e51]        # 0x14000a080
   14000522f:	cmp    eax,0xffffffff
   140005232:	je     0x140005a78
   140005238:	test   al,0x10
   14000523a:	jne    0x140005351
   140005240:	cmp    QWORD PTR [rsi+0x18],0x8
   140005245:	jb     0x14000524c
   140005247:	mov    rcx,QWORD PTR [rsi]
   14000524a:	jmp    0x14000524f
   14000524c:	mov    rcx,rsi
   14000524f:	call   QWORD PTR [rip+0x4f5b]        # 0x14000a1b0
   140005255:	mov    r14,rax
   140005258:	mov    rcx,QWORD PTR [rbp+0x2e8]
   14000525f:	test   rax,rax
   140005262:	je     0x14000582f
   140005268:	mov    QWORD PTR [rsp+0x50],rbx
   14000526d:	mov    rdx,QWORD PTR [rsi+0x10]
   140005271:	cmp    QWORD PTR [rsi+0x18],0x8
   140005276:	jb     0x14000527d
   140005278:	mov    rcx,QWORD PTR [rsi]
   14000527b:	jmp    0x140005280
   14000527d:	mov    rcx,rsi
   140005280:	inc    rdx
   140005283:	lea    r8,[rsp+0x50]
   140005288:	call   QWORD PTR [rip+0x4e72]        # 0x14000a100
   14000528e:	mov    rcx,QWORD PTR [rbp+0x2e8]
   140005295:	test   eax,eax
   140005297:	js     0x14000581a
   14000529d:	lea    rdx,[rip+0x57e4]        # 0x14000aa88
   1400052a4:	mov    rcx,QWORD PTR [rsp+0x50]
   1400052a9:	call   QWORD PTR [rip+0x5071]        # 0x14000a320
   1400052af:	test   eax,eax
   1400052b1:	jne    0x14000573b
   1400052b7:	mov    ecx,0x100
   1400052bc:	call   0x140007a8c
   1400052c1:	mov    rbx,rax
   1400052c4:	mov    QWORD PTR [rbp-0x20],rax
   1400052c8:	xor    ecx,ecx
   1400052ca:	test   rax,rax
   1400052cd:	je     0x140005335
   1400052cf:	lea    rax,[rsp+0x58]
   1400052d4:	mov    QWORD PTR [rsp+0x38],rax
   1400052d9:	mov    QWORD PTR [rsp+0x70],0x7
   1400052e2:	mov    QWORD PTR [rsp+0x68],rcx
   1400052e7:	mov    WORD PTR [rsp+0x58],cx
   1400052ec:	mov    r9,r15
   1400052ef:	xor    r8d,r8d
   1400052f2:	mov    rdx,rsi
   1400052f5:	lea    rcx,[rsp+0x58]
   1400052fa:	call   0x140003f2c
   1400052ff:	nop
   140005300:	mov    QWORD PTR [rbp-0x70],0x7
   140005308:	xor    eax,eax
   14000530a:	mov    QWORD PTR [rbp-0x78],rax
   14000530e:	mov    WORD PTR [rsp+0x78],ax
   140005313:	mov    rdx,r14
   140005316:	lea    rcx,[rsp+0x78]
   14000531b:	call   0x140003b20
   140005320:	nop
   140005321:	lea    r8,[rsp+0x58]
   140005326:	lea    rdx,[rsp+0x78]
   14000532b:	mov    rcx,rbx
   14000532e:	call   0x1400060d8
   140005333:	jmp    0x140005338
   140005335:	mov    rax,rcx
   140005338:	mov    QWORD PTR [rsp+0x38],rax
   14000533d:	lea    rdx,[rsp+0x38]
   140005342:	mov    rcx,r12
   140005345:	call   0x140005ba8
   14000534a:	xor    ebx,ebx
   14000534c:	jmp    0x140005729
   140005351:	mov    QWORD PTR [rbp+0x0],0x7
   140005359:	mov    QWORD PTR [rbp-0x8],rbx
   14000535d:	mov    WORD PTR [rbp-0x18],bx
   140005361:	lea    rdx,[rip+0x5730]        # 0x14000aa98
   140005368:	lea    rcx,[rbp-0x18]
   14000536c:	call   0x140003b20
   140005371:	nop
   140005372:	xorps  xmm0,xmm0
   140005375:	movdqu XMMWORD PTR [rsp+0x78],xmm0
   14000537b:	mov    rdx,rbx
   14000537e:	mov    QWORD PTR [rbp-0x78],rbx
   140005382:	mov    r8,QWORD PTR [rsi+0x10]
   140005386:	mov    rax,QWORD PTR [rbp-0x8]
   14000538a:	add    rax,0x6
   14000538e:	add    r8,rax
   140005391:	je     0x1400053ad
   140005393:	cmp    r8,r14
   140005396:	ja     0x140005847
   14000539c:	mov    rdx,r8
   14000539f:	lea    rcx,[rsp+0x78]
   1400053a4:	call   0x140003ccc
   1400053a9:	mov    rdx,QWORD PTR [rbp-0x78]
   1400053ad:	lea    r9,[rbp-0x18]
   1400053b1:	cmp    QWORD PTR [rbp+0x0],0x8
   1400053b6:	cmovae r9,QWORD PTR [rbp-0x18]
   1400053bb:	cmp    QWORD PTR [rsi+0x18],0x8
   1400053c0:	jb     0x1400053c7
   1400053c2:	mov    r8,QWORD PTR [rsi]
   1400053c5:	jmp    0x1400053ca
   1400053c7:	mov    r8,rsi
   1400053ca:	mov    r14,QWORD PTR [rsp+0x78]
   1400053cf:	sub    rdx,r14
   1400053d2:	sar    rdx,1
   1400053d5:	mov    DWORD PTR [rsp+0x20],0x1
   1400053dd:	mov    rcx,r14
   1400053e0:	call   QWORD PTR [rip+0x4d22]        # 0x14000a108
   1400053e6:	mov    DWORD PTR [rsp+0x30],eax
   1400053ea:	test   eax,eax
   1400053ec:	js     0x1400059d5
   1400053f2:	mov    DWORD PTR [rbp+0x10],ebx
   1400053f5:	xor    edx,edx
   1400053f7:	mov    r8d,0x24c
   1400053fd:	lea    rcx,[rbp+0x14]
   140005401:	call   0x140008722
   140005406:	lea    rdx,[rbp+0x10]
   14000540a:	mov    rcx,r14
   14000540d:	call   QWORD PTR [rip+0x4c5d]        # 0x14000a070
   140005413:	mov    rbx,rax
   140005416:	mov    QWORD PTR [rbp-0x60],rax
   14000541a:	cmp    rax,r15
   14000541d:	jne    0x1400054cc
   140005423:	call   QWORD PTR [rip+0x4c2f]        # 0x14000a058
   140005429:	mov    DWORD PTR [rsp+0x34],eax
   14000542d:	cmp    eax,0x2
   140005430:	jne    0x14000584d
   140005436:	xor    ebx,ebx
   140005438:	cmp    DWORD PTR [rip+0x8bf1],0x4        # 0x14000e030
   14000543f:	jbe    0x1400054a3
   140005441:	mov    rcx,r13
   140005444:	mov    eax,ebx
   140005446:	test   r14,r14
   140005449:	je     0x14000545b
   14000544b:	mov    rcx,r14
   14000544e:	mov    rax,r15
   140005451:	inc    rax
   140005454:	cmp    WORD PTR [r14+rax*2],bx
   140005459:	jne    0x140005451
   14000545b:	mov    QWORD PTR [rbp+0x280],rcx
   140005462:	lea    eax,[rax*2+0x2]
   140005469:	mov    DWORD PTR [rbp+0x288],eax
   14000546f:	mov    DWORD PTR [rbp+0x28c],ebx
   140005475:	lea    rax,[rbp+0x260]
   14000547c:	mov    QWORD PTR [rsp+0x28],rax
   140005481:	mov    DWORD PTR [rsp+0x20],0x3
   140005489:	xor    r9d,r9d
   14000548c:	xor    r8d,r8d
   14000548f:	lea    rdx,[rip+0x5f61]        # 0x14000b3f7
   140005496:	lea    rcx,[rip+0x8b93]        # 0x14000e030
   14000549d:	call   0x140001008
   1400054a2:	nop
   1400054a3:	test   r14,r14
   1400054a6:	je     0x1400054b2
   1400054a8:	mov    rcx,r14
   1400054ab:	call   QWORD PTR [rip+0x4e5f]        # 0x14000a310
   1400054b1:	nop
   1400054b2:	cmp    QWORD PTR [rbp+0x0],0x8
   1400054b7:	jb     0x140005729
   1400054bd:	mov    rcx,QWORD PTR [rbp-0x18]
   1400054c1:	call   QWORD PTR [rip+0x4e49]        # 0x14000a310
   1400054c7:	jmp    0x140005729
   1400054cc:	xor    r10d,r10d
   1400054cf:	cmp    DWORD PTR [rip+0x8b5a],0x5        # 0x14000e030
   1400054d6:	jbe    0x140005572
   1400054dc:	mov    rcx,r13
   1400054df:	mov    rax,r10
   1400054e2:	test   r14,r14
   1400054e5:	je     0x1400054f7
   1400054e7:	mov    rcx,r14
   1400054ea:	mov    rax,r15
   1400054ed:	inc    rax
   1400054f0:	cmp    WORD PTR [r14+rax*2],r10w
   1400054f5:	jne    0x1400054ed
   1400054f7:	mov    QWORD PTR [rbp+0x280],rcx
   1400054fe:	lea    eax,[rax*2+0x2]
   140005505:	mov    DWORD PTR [rbp+0x288],eax
   14000550b:	mov    DWORD PTR [rbp+0x28c],r10d
   140005512:	lea    rcx,[rbp+0x3c]
   140005516:	mov    rax,r15
   140005519:	inc    rax
   14000551c:	cmp    WORD PTR [rcx+rax*2],r10w
   140005521:	jne    0x140005519
   140005523:	lea    rcx,[rbp+0x3c]
   140005527:	mov    QWORD PTR [rbp+0x290],rcx
   14000552e:	lea    eax,[rax*2+0x2]
   140005535:	mov    DWORD PTR [rbp+0x298],eax
   14000553b:	mov    DWORD PTR [rbp+0x29c],r10d
   140005542:	lea    rax,[rbp+0x260]
   140005549:	mov    QWORD PTR [rsp+0x28],rax
   14000554e:	mov    DWORD PTR [rsp+0x20],0x4
   140005556:	xor    r9d,r9d
   140005559:	xor    r8d,r8d
   14000555c:	lea    rdx,[rip+0x5d20]        # 0x14000b283
   140005563:	lea    rcx,[rip+0x8ac6]        # 0x14000e030
   14000556a:	call   0x140001008
   14000556f:	xor    r10d,r10d
   140005572:	mov    edx,0x104
   140005577:	mov    eax,edx
   140005579:	lea    rcx,[rbp+0x3c]
   14000557d:	mov    r9d,r10d
   140005580:	cmp    WORD PTR [rcx],r10w
   140005584:	je     0x140005590
   140005586:	add    rcx,0x2
   14000558a:	sub    rax,0x1
   14000558e:	jne    0x140005580
   140005590:	test   rax,rax
   140005593:	jne    0x1400055a0
   140005595:	mov    r9d,0x80070057
   14000559b:	mov    rcx,r10
   14000559e:	jmp    0x1400055a6
   1400055a0:	mov    rcx,rdx
   1400055a3:	sub    rcx,rax
   1400055a6:	mov    DWORD PTR [rsp+0x30],r9d
   1400055ab:	mov    rax,QWORD PTR [rbp+0x2e8]
   1400055b2:	test   r9d,r9d
   1400055b5:	js     0x1400059c0
   1400055bb:	xorps  xmm0,xmm0
   1400055be:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   1400055c4:	mov    rdx,r10
   1400055c7:	mov    QWORD PTR [rsp+0x68],rdx
   1400055cc:	lea    r8,[rcx+0x6]
   1400055d0:	add    r8,QWORD PTR [rsi+0x10]
   1400055d4:	je     0x1400055fb
   1400055d6:	movabs rax,0x7fffffffffffffff
   1400055e0:	cmp    r8,rax
   1400055e3:	ja     0x1400058e3
   1400055e9:	mov    rdx,r8
   1400055ec:	lea    rcx,[rsp+0x58]
   1400055f1:	call   0x140003ccc
   1400055f6:	mov    rdx,QWORD PTR [rsp+0x68]
   1400055fb:	cmp    QWORD PTR [rsi+0x18],0x8
   140005600:	jb     0x140005607
   140005602:	mov    r8,QWORD PTR [rsi]
   140005605:	jmp    0x14000560a
   140005607:	mov    r8,rsi
   14000560a:	mov    r12,QWORD PTR [rsp+0x58]
   14000560f:	sub    rdx,r12
   140005612:	sar    rdx,1
   140005615:	mov    DWORD PTR [rsp+0x20],0x1
   14000561d:	lea    r9,[rbp+0x3c]
   140005621:	mov    rcx,r12
   140005624:	call   QWORD PTR [rip+0x4ade]        # 0x14000a108
   14000562a:	mov    DWORD PTR [rsp+0x30],eax
   14000562e:	xor    ecx,ecx
   140005630:	test   eax,eax
   140005632:	js     0x1400058e9
   140005638:	mov    ecx,0x100
   14000563d:	call   0x140007a8c
   140005642:	mov    QWORD PTR [rbp-0x68],rax
   140005646:	xor    ecx,ecx
   140005648:	test   rax,rax
   14000564b:	je     0x1400056b5
   14000564d:	lea    rax,[rbp-0x58]
   140005651:	mov    QWORD PTR [rsp+0x38],rax
   140005656:	mov    QWORD PTR [rbp-0x40],0x7
   14000565e:	mov    QWORD PTR [rbp-0x48],rcx
   140005662:	mov    WORD PTR [rbp-0x58],cx
   140005666:	mov    rdx,r12
   140005669:	lea    rcx,[rbp-0x58]
   14000566d:	call   0x140003b20
   140005672:	nop
   140005673:	mov    QWORD PTR [rbp+0x278],0x7
   14000567e:	xor    eax,eax
   140005680:	mov    QWORD PTR [rbp+0x270],rax
   140005687:	mov    WORD PTR [rbp+0x260],ax
   14000568e:	lea    rdx,[rbp+0x3c]
   140005692:	lea    rcx,[rbp+0x260]
   140005699:	call   0x140003b20
   14000569e:	nop
   14000569f:	lea    r8,[rbp-0x58]
   1400056a3:	lea    rdx,[rbp+0x260]
   1400056aa:	mov    rcx,QWORD PTR [rbp-0x68]
   1400056ae:	call   0x1400060d8
   1400056b3:	jmp    0x1400056b8
   1400056b5:	mov    rax,rcx
   1400056b8:	mov    QWORD PTR [rsp+0x38],rax
   1400056bd:	lea    rdx,[rsp+0x38]
   1400056c2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400056c7:	call   0x140005ba8
   1400056cc:	nop
   1400056cd:	test   r12,r12
   1400056d0:	je     0x1400056db
   1400056d2:	mov    rcx,r12
   1400056d5:	call   QWORD PTR [rip+0x4c35]        # 0x14000a310
   1400056db:	lea    rdx,[rbp+0x10]
   1400056df:	mov    rcx,rbx
   1400056e2:	call   QWORD PTR [rip+0x4980]        # 0x14000a068
   1400056e8:	xor    r10d,r10d
   1400056eb:	test   eax,eax
   1400056ed:	jne    0x1400054cf
   1400056f3:	test   rbx,rbx
   1400056f6:	je     0x140005702
   1400056f8:	mov    rcx,rbx
   1400056fb:	call   QWORD PTR [rip+0x4977]        # 0x14000a078
   140005701:	nop
   140005702:	xor    ebx,ebx
   140005704:	test   r14,r14
   140005707:	je     0x140005713
   140005709:	mov    rcx,r14
   14000570c:	call   QWORD PTR [rip+0x4bfe]        # 0x14000a310
   140005712:	nop
   140005713:	cmp    QWORD PTR [rbp+0x0],0x8
   140005718:	jb     0x140005724
   14000571a:	mov    rcx,QWORD PTR [rbp-0x18]
   14000571e:	call   QWORD PTR [rip+0x4bec]        # 0x14000a310
   140005724:	mov    r12,QWORD PTR [rsp+0x40]
   140005729:	add    rsi,0x20
   14000572d:	cmp    rsi,rdi
   140005730:	je     0x140005b02
   140005736:	jmp    0x140005210
   14000573b:	cmp    DWORD PTR [rip+0x88ee],0x2        # 0x14000e030
   140005742:	jbe    0x1400057f4
   140005748:	cmp    QWORD PTR [rsi+0x18],0x8
   14000574d:	jb     0x140005752
   14000574f:	mov    rsi,QWORD PTR [rsi]
   140005752:	mov    rax,rbx
   140005755:	test   rsi,rsi
   140005758:	je     0x140005769
   14000575a:	mov    r13,rsi
   14000575d:	mov    rax,r15
   140005760:	inc    rax
   140005763:	cmp    WORD PTR [rsi+rax*2],bx
   140005767:	jne    0x140005760
   140005769:	mov    QWORD PTR [rbp+0x280],r13
   140005770:	lea    eax,[rax*2+0x2]
   140005777:	mov    DWORD PTR [rbp+0x288],eax
   14000577d:	mov    DWORD PTR [rbp+0x28c],ebx
   140005783:	inc    r15
   140005786:	cmp    WORD PTR [r14+r15*2],bx
   14000578b:	jne    0x140005783
   14000578d:	mov    QWORD PTR [rbp+0x290],r14
   140005794:	lea    eax,[r15*2+0x2]
   14000579c:	mov    DWORD PTR [rbp+0x298],eax
   1400057a2:	mov    DWORD PTR [rbp+0x29c],ebx
   1400057a8:	mov    DWORD PTR [rsp+0x34],0x80070057
   1400057b0:	lea    rax,[rsp+0x34]
   1400057b5:	mov    QWORD PTR [rbp+0x2a0],rax
   1400057bc:	mov    QWORD PTR [rbp+0x2a8],0x4
   1400057c7:	lea    rax,[rbp+0x260]
   1400057ce:	mov    QWORD PTR [rsp+0x28],rax
   1400057d3:	mov    DWORD PTR [rsp+0x20],0x5
   1400057db:	xor    r9d,r9d
   1400057de:	xor    r8d,r8d
   1400057e1:	lea    rdx,[rip+0x59d9]        # 0x14000b1c1
   1400057e8:	lea    rcx,[rip+0x8841]        # 0x14000e030
   1400057ef:	call   0x140001008
   1400057f4:	mov    ecx,0x80070057
   1400057f9:	call   0x1400043f8
   1400057fe:	mov    r9d,eax
   140005801:	mov    rcx,QWORD PTR [rbp+0x2e8]
   140005808:	lea    r8,[rip+0x5251]        # 0x14000aa60
   14000580f:	mov    edx,0x74
   140005814:	call   0x140002534
   140005819:	int3   
   14000581a:	mov    r9d,eax
   14000581d:	lea    r8,[rip+0x523c]        # 0x14000aa60
   140005824:	mov    edx,0x6e
   140005829:	call   0x140002534
   14000582e:	int3   
   14000582f:	mov    r9d,0x80070057
   140005835:	lea    r8,[rip+0x5224]        # 0x14000aa60
   14000583c:	mov    edx,0x6b
   140005841:	call   0x140002534
   140005846:	nop
   140005847:	call   0x140003d88
   14000584c:	nop
   14000584d:	cmp    DWORD PTR [rip+0x87dc],0x2        # 0x14000e030
   140005854:	jbe    0x1400058ca
   140005856:	xor    ecx,ecx
   140005858:	mov    eax,ecx
   14000585a:	test   r14,r14
   14000585d:	je     0x14000586f
   14000585f:	mov    r13,r14
   140005862:	mov    rax,r15
   140005865:	inc    rax
   140005868:	cmp    WORD PTR [r14+rax*2],cx
   14000586d:	jne    0x140005865
   14000586f:	mov    QWORD PTR [rbp+0x280],r13
   140005876:	lea    eax,[rax*2+0x2]
   14000587d:	mov    DWORD PTR [rbp+0x288],eax
   140005883:	mov    DWORD PTR [rbp+0x28c],ecx
   140005889:	lea    rax,[rsp+0x34]
   14000588e:	mov    QWORD PTR [rbp+0x290],rax
   140005895:	mov    edx,0x4
   14000589a:	mov    QWORD PTR [rbp+0x298],rdx
   1400058a1:	lea    rax,[rbp+0x260]
   1400058a8:	mov    QWORD PTR [rsp+0x28],rax
   1400058ad:	mov    DWORD PTR [rsp+0x20],edx
   1400058b1:	xor    r9d,r9d
   1400058b4:	xor    r8d,r8d
   1400058b7:	lea    rdx,[rip+0x5aff]        # 0x14000b3bd
   1400058be:	lea    rcx,[rip+0x876b]        # 0x14000e030
   1400058c5:	call   0x140001008
   1400058ca:	mov    rcx,QWORD PTR [rbp+0x2e8]
   1400058d1:	lea    r8,[rip+0x5188]        # 0x14000aa60
   1400058d8:	mov    edx,0x9a
   1400058dd:	call   0x140004968
   1400058e2:	nop
   1400058e3:	call   0x140003d88
   1400058e8:	int3   
   1400058e9:	cmp    DWORD PTR [rip+0x8740],0x2        # 0x14000e030
   1400058f0:	jbe    0x14000599d
   1400058f6:	mov    rax,rcx
   1400058f9:	test   r12,r12
   1400058fc:	je     0x14000590e
   1400058fe:	mov    r13,r12
   140005901:	mov    rax,r15
   140005904:	inc    rax
   140005907:	cmp    WORD PTR [r12+rax*2],cx
   14000590c:	jne    0x140005904
   14000590e:	mov    QWORD PTR [rbp+0x280],r13
   140005915:	lea    eax,[rax*2+0x2]
   14000591c:	mov    DWORD PTR [rbp+0x288],eax
   140005922:	mov    DWORD PTR [rbp+0x28c],ecx
   140005928:	lea    rax,[rbp+0x3c]
   14000592c:	inc    r15
   14000592f:	cmp    WORD PTR [rax+r15*2],cx
   140005934:	jne    0x14000592c
   140005936:	lea    rax,[rbp+0x3c]
   14000593a:	mov    QWORD PTR [rbp+0x290],rax
   140005941:	lea    eax,[r15*2+0x2]
   140005949:	mov    DWORD PTR [rbp+0x298],eax
   14000594f:	mov    DWORD PTR [rbp+0x29c],ecx
   140005955:	lea    rax,[rsp+0x30]
   14000595a:	mov    QWORD PTR [rbp+0x2a0],rax
   140005961:	mov    QWORD PTR [rbp+0x2a8],0x4
   14000596c:	lea    rax,[rbp+0x260]
   140005973:	mov    QWORD PTR [rsp+0x28],rax
   140005978:	mov    DWORD PTR [rsp+0x20],0x5
   140005980:	xor    r9d,r9d
   140005983:	xor    r8d,r8d
   140005986:	lea    rdx,[rip+0x5977]        # 0x14000b304
   14000598d:	lea    rcx,[rip+0x869c]        # 0x14000e030
   140005994:	call   0x140001008
   140005999:	mov    eax,DWORD PTR [rsp+0x30]
   14000599d:	mov    ecx,eax
   14000599f:	call   0x1400043f8
   1400059a4:	mov    r9d,eax
   1400059a7:	mov    rcx,QWORD PTR [rbp+0x2e8]
   1400059ae:	lea    r8,[rip+0x50ab]        # 0x14000aa60
   1400059b5:	mov    edx,0xb4
   1400059ba:	call   0x140002534
   1400059bf:	nop
   1400059c0:	lea    r8,[rip+0x5099]        # 0x14000aa60
   1400059c7:	mov    edx,0xa5
   1400059cc:	mov    rcx,rax
   1400059cf:	call   0x140002534
   1400059d4:	nop
   1400059d5:	cmp    DWORD PTR [rip+0x8654],0x2        # 0x14000e030
   1400059dc:	jbe    0x140005a55
   1400059de:	mov    rax,rbx
   1400059e1:	test   r14,r14
   1400059e4:	je     0x1400059f6
   1400059e6:	mov    r13,r14
   1400059e9:	mov    rax,r15
   1400059ec:	inc    rax
   1400059ef:	cmp    WORD PTR [r14+rax*2],bx
   1400059f4:	jne    0x1400059ec
   1400059f6:	mov    QWORD PTR [rbp+0x280],r13
   1400059fd:	lea    eax,[rax*2+0x2]
   140005a04:	mov    DWORD PTR [rbp+0x288],eax
   140005a0a:	mov    DWORD PTR [rbp+0x28c],ebx
   140005a10:	lea    rax,[rsp+0x30]
   140005a15:	mov    QWORD PTR [rbp+0x290],rax
   140005a1c:	mov    ecx,0x4
   140005a21:	mov    QWORD PTR [rbp+0x298],rcx
   140005a28:	lea    rax,[rbp+0x260]
   140005a2f:	mov    QWORD PTR [rsp+0x28],rax
   140005a34:	mov    DWORD PTR [rsp+0x20],ecx
   140005a38:	xor    r9d,r9d
   140005a3b:	xor    r8d,r8d
   140005a3e:	lea    rdx,[rip+0x593b]        # 0x14000b380
   140005a45:	lea    rcx,[rip+0x85e4]        # 0x14000e030
   140005a4c:	call   0x140001008
   140005a51:	mov    eax,DWORD PTR [rsp+0x30]
   140005a55:	mov    ecx,eax
   140005a57:	call   0x1400043f8
   140005a5c:	mov    r9d,eax
   140005a5f:	mov    rcx,QWORD PTR [rbp+0x2e8]
   140005a66:	lea    r8,[rip+0x4ff3]        # 0x14000aa60
   140005a6d:	mov    edx,0x87
   140005a72:	call   0x140002534
   140005a77:	nop
   140005a78:	cmp    DWORD PTR [rip+0x85b1],0x2        # 0x14000e030
   140005a7f:	jbe    0x140005ae9
   140005a81:	cmp    QWORD PTR [rsi+0x18],0x8
   140005a86:	jb     0x140005a8b
   140005a88:	mov    rsi,QWORD PTR [rsi]
   140005a8b:	mov    rax,rbx
   140005a8e:	test   rsi,rsi
   140005a91:	je     0x140005aa2
   140005a93:	mov    r13,rsi
   140005a96:	mov    rax,r15
   140005a99:	inc    rax
   140005a9c:	cmp    WORD PTR [rsi+rax*2],bx
   140005aa0:	jne    0x140005a99
   140005aa2:	mov    QWORD PTR [rbp+0x280],r13
   140005aa9:	lea    eax,[rax*2+0x2]
   140005ab0:	mov    DWORD PTR [rbp+0x288],eax
   140005ab6:	mov    DWORD PTR [rbp+0x28c],ebx
   140005abc:	lea    rax,[rbp+0x260]
   140005ac3:	mov    QWORD PTR [rsp+0x28],rax
   140005ac8:	mov    DWORD PTR [rsp+0x20],0x3
   140005ad0:	xor    r9d,r9d
   140005ad3:	xor    r8d,r8d
   140005ad6:	lea    rdx,[rip+0x5806]        # 0x14000b2e3
   140005add:	lea    rcx,[rip+0x854c]        # 0x14000e030
   140005ae4:	call   0x140001008
   140005ae9:	mov    rcx,QWORD PTR [rbp+0x2e8]
   140005af0:	lea    r8,[rip+0x4f69]        # 0x14000aa60
   140005af7:	mov    edx,0x65
   140005afc:	call   0x140004968
   140005b01:	int3   
   140005b02:	cmp    DWORD PTR [rip+0x8527],0x5        # 0x14000e030
   140005b09:	jbe    0x140005b38
   140005b0b:	lea    rax,[rbp+0x260]
   140005b12:	mov    QWORD PTR [rsp+0x28],rax
   140005b17:	mov    DWORD PTR [rsp+0x20],0x2
   140005b1f:	xor    r9d,r9d
   140005b22:	xor    r8d,r8d
   140005b25:	lea    rdx,[rip+0x572d]        # 0x14000b259
   140005b2c:	lea    rcx,[rip+0x84fd]        # 0x14000e030
   140005b33:	call   0x140001008
   140005b38:	mov    rax,r12
   140005b3b:	mov    rcx,QWORD PTR [rbp+0x2b0]
   140005b42:	xor    rcx,rsp
   140005b45:	call   0x140007eb0
   140005b4a:	lea    r11,[rsp+0x3c0]
   140005b52:	mov    rbx,QWORD PTR [r11+0x30]
   140005b56:	mov    rsi,QWORD PTR [r11+0x40]
   140005b5a:	mov    rdi,QWORD PTR [r11+0x48]
   140005b5e:	mov    rsp,r11
   140005b61:	pop    r15
   140005b63:	pop    r14
   140005b65:	pop    r13
   140005b67:	pop    r12
   140005b69:	pop    rbp
   140005b6a:	ret    
   140005b6b:	int3   
   140005b6c:	int3   
   140005b6d:	int3   
   140005b6e:	int3   
   140005b6f:	int3   
   140005b70:	int3   
   140005b71:	int3   
   140005b72:	int3   
   140005b73:	int3   
   140005b74:	sub    rsp,0x28
   140005b78:	mov    rcx,QWORD PTR [rcx]
   140005b7b:	lea    rax,[rcx-0x1]
   140005b7f:	cmp    rax,0xfffffffffffffffd
   140005b83:	ja     0x140005b8b
   140005b85:	call   QWORD PTR [rip+0x44ed]        # 0x14000a078
   140005b8b:	add    rsp,0x28
   140005b8f:	ret    
   140005b90:	int3   
   140005b91:	int3   
   140005b92:	int3   
   140005b93:	int3   
   140005b94:	int3   
   140005b95:	int3   
   140005b96:	int3   
   140005b97:	int3   
   140005b98:	mov    rcx,QWORD PTR [rcx]
   140005b9b:	rex.W jmp QWORD PTR [rip+0x478e]        # 0x14000a330
   140005ba2:	int3   
   140005ba3:	int3   
   140005ba4:	int3   
   140005ba5:	int3   
   140005ba6:	int3   
   140005ba7:	int3   
   140005ba8:	mov    QWORD PTR [rsp+0x8],rbx
   140005bad:	push   rdi
   140005bae:	sub    rsp,0x20
   140005bb2:	mov    rbx,rcx
   140005bb5:	mov    rdi,rdx
   140005bb8:	mov    rcx,QWORD PTR [rcx+0x8]
   140005bbc:	mov    rdx,QWORD PTR [rbx+0x10]
   140005bc0:	cmp    rcx,rdx
   140005bc3:	jne    0x140005c20
   140005bc5:	mov    rax,rdx
   140005bc8:	sub    rax,rcx
   140005bcb:	sar    rax,0x3
   140005bcf:	cmp    rax,0x1
   140005bd3:	jae    0x140005c20
   140005bd5:	sub    rcx,QWORD PTR [rbx]
   140005bd8:	movabs r8,0x1fffffffffffffff
   140005be2:	sar    rcx,0x3
   140005be6:	mov    rax,r8
   140005be9:	sub    rax,rcx
   140005bec:	cmp    rax,0x1
   140005bf0:	jb     0x140005c3f
   140005bf2:	sub    rdx,QWORD PTR [rbx]
   140005bf5:	inc    rcx
   140005bf8:	sar    rdx,0x3
   140005bfc:	mov    rax,rdx
   140005bff:	shr    rax,1
   140005c02:	sub    r8,rax
   140005c05:	cmp    r8,rdx
   140005c08:	jae    0x140005c0e
   140005c0a:	xor    edx,edx
   140005c0c:	jmp    0x140005c11
   140005c0e:	add    rdx,rax
   140005c11:	cmp    rdx,rcx
   140005c14:	cmovb  rdx,rcx
   140005c18:	mov    rcx,rbx
   140005c1b:	call   0x140005c4c
   140005c20:	mov    rcx,QWORD PTR [rbx+0x8]
   140005c24:	test   rcx,rcx
   140005c27:	je     0x140005c2f
   140005c29:	mov    rax,QWORD PTR [rdi]
   140005c2c:	mov    QWORD PTR [rcx],rax
   140005c2f:	add    QWORD PTR [rbx+0x8],0x8
   140005c34:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c39:	add    rsp,0x20
   140005c3d:	pop    rdi
   140005c3e:	ret    
   140005c3f:	call   0x140003d88
   140005c44:	int3   
   140005c45:	int3   
   140005c46:	int3   
   140005c47:	int3   
   140005c48:	int3   
   140005c49:	int3   
   140005c4a:	int3   
   140005c4b:	int3   
   140005c4c:	mov    rax,rsp
   140005c4f:	push   rdi
   140005c50:	push   r12
   140005c52:	push   r13
   140005c54:	push   r14
   140005c56:	push   r15
   140005c58:	sub    rsp,0x40
   140005c5c:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140005c64:	mov    QWORD PTR [rax+0x8],rbx
   140005c68:	mov    QWORD PTR [rax+0x18],rsi
   140005c6c:	mov    r14,rdx
   140005c6f:	mov    rdi,rcx
   140005c72:	xor    ebx,ebx
   140005c74:	mov    QWORD PTR [rsp+0x78],rbx
   140005c79:	test   rdx,rdx
   140005c7c:	je     0x140005cad
   140005c7e:	movabs rax,0x1fffffffffffffff
   140005c88:	cmp    rdx,rax
   140005c8b:	ja     0x140005ca6
   140005c8d:	mov    rcx,rdx
   140005c90:	shl    rcx,0x3
   140005c94:	call   0x140007a8c
   140005c99:	mov    rbx,rax
   140005c9c:	mov    QWORD PTR [rsp+0x78],rax
   140005ca1:	test   rax,rax
   140005ca4:	jne    0x140005cad
   140005ca6:	call   QWORD PTR [rip+0x45a4]        # 0x14000a250
   140005cac:	nop
   140005cad:	mov    r8,rbx
   140005cb0:	mov    rdx,QWORD PTR [rdi+0x8]
   140005cb4:	mov    rcx,QWORD PTR [rdi]
   140005cb7:	call   0x140005d34
   140005cbc:	nop
   140005cbd:	mov    r12,QWORD PTR [rdi+0x8]
   140005cc1:	mov    rsi,QWORD PTR [rdi]
   140005cc4:	mov    r15,r12
   140005cc7:	sub    r15,rsi
   140005cca:	sar    r15,0x3
   140005cce:	test   rsi,rsi
   140005cd1:	je     0x140005d00
   140005cd3:	jmp    0x140005cf2
   140005cd5:	mov    r13,QWORD PTR [rsi]
   140005cd8:	test   r13,r13
   140005cdb:	je     0x140005cee
   140005cdd:	mov    rcx,r13
   140005ce0:	call   0x140006274
   140005ce5:	mov    rcx,r13
   140005ce8:	call   QWORD PTR [rip+0x4622]        # 0x14000a310
   140005cee:	add    rsi,0x8
   140005cf2:	cmp    rsi,r12
   140005cf5:	jne    0x140005cd5
   140005cf7:	mov    rcx,QWORD PTR [rdi]
   140005cfa:	call   QWORD PTR [rip+0x4610]        # 0x14000a310
   140005d00:	lea    rax,[rbx+r14*8]
   140005d04:	mov    QWORD PTR [rdi+0x10],rax
   140005d08:	lea    rax,[rbx+r15*8]
   140005d0c:	mov    QWORD PTR [rdi+0x8],rax
   140005d10:	mov    QWORD PTR [rdi],rbx
   140005d13:	lea    r11,[rsp+0x40]
   140005d18:	mov    rbx,QWORD PTR [r11+0x30]
   140005d1c:	mov    rsi,QWORD PTR [r11+0x40]
   140005d20:	mov    rsp,r11
   140005d23:	pop    r15
   140005d25:	pop    r14
   140005d27:	pop    r13
   140005d29:	pop    r12
   140005d2b:	pop    rdi
   140005d2c:	ret    
   140005d2d:	int3   
   140005d2e:	int3   
   140005d2f:	int3   
   140005d30:	int3   
   140005d31:	int3   
   140005d32:	int3   
   140005d33:	int3   
   140005d34:	mov    QWORD PTR [rsp+0x20],r9
   140005d39:	mov    QWORD PTR [rsp+0x18],r8
   140005d3e:	sub    rsp,0x38
   140005d42:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005d4b:	mov    QWORD PTR [rsp+0x58],r8
   140005d50:	xor    r11d,r11d
   140005d53:	mov    r10d,r11d
   140005d56:	mov    r9,rdx
   140005d59:	sub    r9,rcx
   140005d5c:	add    r9,0x7
   140005d60:	shr    r9,0x3
   140005d64:	cmp    rcx,rdx
   140005d67:	cmova  r9,r11
   140005d6b:	test   r9,r9
   140005d6e:	je     0x140005d94
   140005d70:	sub    rcx,r8
   140005d73:	test   r8,r8
   140005d76:	je     0x140005d83
   140005d78:	mov    rax,QWORD PTR [rcx+r8*1]
   140005d7c:	mov    QWORD PTR [rcx+r8*1],r11
   140005d80:	mov    QWORD PTR [r8],rax
   140005d83:	add    r8,0x8
   140005d87:	mov    QWORD PTR [rsp+0x50],r8
   140005d8c:	inc    r10
   140005d8f:	cmp    r10,r9
   140005d92:	jne    0x140005d73
   140005d94:	mov    rax,r8
   140005d97:	add    rsp,0x38
   140005d9b:	ret    
   140005d9c:	int3   
   140005d9d:	int3   
   140005d9e:	int3   
   140005d9f:	int3   
   140005da0:	int3   
   140005da1:	int3   
   140005da2:	int3   
   140005da3:	int3   
   140005da4:	mov    QWORD PTR [rsp+0x8],rbx
   140005da9:	mov    QWORD PTR [rsp+0x10],rbp
   140005dae:	mov    QWORD PTR [rsp+0x18],rsi
   140005db3:	push   rdi
   140005db4:	sub    rsp,0x50
   140005db8:	mov    edi,edx
   140005dba:	mov    rsi,rcx
   140005dbd:	call   QWORD PTR [rip+0x4295]        # 0x14000a058
   140005dc3:	mov    rbp,QWORD PTR [rsp+0x88]
   140005dcb:	test   eax,eax
   140005dcd:	jne    0x140005e03
   140005dcf:	mov    DWORD PTR [rsp+0x38],0x8007029c
   140005dd7:	lea    r8,[rip+0x4d3a]        # 0x14000ab18
   140005dde:	mov    DWORD PTR [rsp+0x30],0x3
   140005de6:	xor    r9d,r9d
   140005de9:	mov    QWORD PTR [rsp+0x28],rbp
   140005dee:	mov    edx,edi
   140005df0:	and    QWORD PTR [rsp+0x20],0x0
   140005df6:	mov    rcx,rsi
   140005df9:	call   0x140002408
   140005dfe:	mov    eax,0x29c
   140005e03:	movzx  ebx,ax
   140005e06:	lea    r8,[rip+0x4d0b]        # 0x14000ab18
   140005e0d:	or     ebx,0x80070000
   140005e13:	mov    edx,edi
   140005e15:	test   eax,eax
   140005e17:	mov    rcx,rsi
   140005e1a:	cmovle ebx,eax
   140005e1d:	xor    r9d,r9d
   140005e20:	mov    DWORD PTR [rsp+0x38],ebx
   140005e24:	mov    DWORD PTR [rsp+0x30],0x2
   140005e2c:	mov    QWORD PTR [rsp+0x28],rbp
   140005e31:	and    QWORD PTR [rsp+0x20],0x0
   140005e37:	call   0x140002210
   140005e3c:	mov    rbp,QWORD PTR [rsp+0x68]
   140005e41:	mov    eax,ebx
   140005e43:	mov    rbx,QWORD PTR [rsp+0x60]
   140005e48:	mov    rsi,QWORD PTR [rsp+0x70]
   140005e4d:	add    rsp,0x50
   140005e51:	pop    rdi
   140005e52:	ret    
   140005e53:	int3   
   140005e54:	int3   
   140005e55:	int3   
   140005e56:	int3   
   140005e57:	int3   
   140005e58:	int3   
   140005e59:	int3   
   140005e5a:	int3   
   140005e5b:	int3   
   140005e5c:	sub    rsp,0x48
   140005e60:	mov    rax,QWORD PTR [rsp+0x48]
   140005e65:	lea    r8,[rip+0x4cac]        # 0x14000ab18
   140005e6c:	mov    DWORD PTR [rsp+0x38],r9d
   140005e71:	mov    edx,0x94
   140005e76:	mov    DWORD PTR [rsp+0x30],0x2
   140005e7e:	mov    QWORD PTR [rsp+0x28],rax
   140005e83:	call   0x140004848
   140005e88:	add    rsp,0x48
   140005e8c:	ret    
   140005e8d:	int3   
   140005e8e:	int3   
   140005e8f:	int3   
   140005e90:	int3   
   140005e91:	int3   
   140005e92:	int3   
   140005e93:	int3   
   140005e94:	sub    rsp,0x48
   140005e98:	mov    rax,QWORD PTR [rsp+0x48]
   140005e9d:	mov    QWORD PTR [rsp+0x28],rax
   140005ea2:	call   0x140005da4
   140005ea7:	add    rsp,0x48
   140005eab:	ret    
   140005eac:	int3   
   140005ead:	int3   
   140005eae:	int3   
   140005eaf:	int3   
   140005eb0:	int3   
   140005eb1:	int3   
   140005eb2:	int3   
   140005eb3:	int3   
   140005eb4:	mov    rax,rsp
   140005eb7:	mov    QWORD PTR [rax+0x10],rbx
   140005ebb:	mov    QWORD PTR [rax+0x18],rsi
   140005ebf:	mov    QWORD PTR [rax+0x20],rdi
   140005ec3:	push   rbp
   140005ec4:	lea    rbp,[rax-0x198]
   140005ecb:	sub    rsp,0x290
   140005ed2:	mov    rax,QWORD PTR [rip+0x812f]        # 0x14000e008
   140005ed9:	xor    rax,rsp
   140005edc:	mov    QWORD PTR [rbp+0x180],rax
   140005ee3:	xor    eax,eax
   140005ee5:	lea    r9,[rsp+0x28]
   140005eea:	lea    rdx,[rip+0x4c4b]        # 0x14000ab3c
   140005ef1:	mov    QWORD PTR [rsp+0x28],rax
   140005ef6:	mov    rsi,rcx
   140005ef9:	lea    r8d,[rax+0x1]
   140005efd:	call   QWORD PTR [rip+0x420d]        # 0x14000a110
   140005f03:	mov    edi,eax
   140005f05:	test   eax,eax
   140005f07:	jns    0x140005f29
   140005f09:	mov    rcx,QWORD PTR [rbp+0x198]
   140005f10:	lea    r8,[rip+0x4c01]        # 0x14000ab18
   140005f17:	mov    r9d,eax
   140005f1a:	mov    edx,0x75
   140005f1f:	call   0x140002488
   140005f24:	jmp    0x140006098
   140005f29:	mov    rcx,QWORD PTR [rsp+0x28]
   140005f2e:	lea    rdx,[rsp+0x30]
   140005f33:	call   QWORD PTR [rip+0x4137]        # 0x14000a070
   140005f39:	mov    rbx,rax
   140005f3c:	inc    rax
   140005f3f:	test   rax,0xfffffffffffffffe
   140005f45:	jne    0x140005f5f
   140005f47:	mov    edx,0x79
   140005f4c:	mov    rcx,QWORD PTR [rbp+0x198]
   140005f53:	call   0x140005e94
   140005f58:	mov    edi,eax
   140005f5a:	jmp    0x140006085
   140005f5f:	xor    edi,edi
   140005f61:	mov    eax,DWORD PTR [rsp+0x30]
   140005f65:	shr    eax,0x4
   140005f68:	test   al,0x1
   140005f6a:	je     0x140005f8b
   140005f6c:	cmp    WORD PTR [rsp+0x5c],0x2e
   140005f72:	jne    0x140005f8b
   140005f74:	movzx  eax,WORD PTR [rsp+0x5e]
   140005f79:	test   ax,ax
   140005f7c:	je     0x140005fee
   140005f7e:	cmp    ax,0x2e
   140005f82:	jne    0x140005f8b
   140005f84:	cmp    WORD PTR [rsp+0x60],di
   140005f89:	je     0x140005fee
   140005f8b:	lea    r9,[rsp+0x20]
   140005f90:	mov    QWORD PTR [rsp+0x20],rdi
   140005f95:	mov    r8d,0x1
   140005f9b:	lea    rdx,[rsp+0x5c]
   140005fa0:	mov    rcx,rsi
   140005fa3:	call   QWORD PTR [rip+0x4167]        # 0x14000a110
   140005fa9:	mov    edi,eax
   140005fab:	test   eax,eax
   140005fad:	js     0x14000605a
   140005fb3:	mov    eax,DWORD PTR [rsp+0x30]
   140005fb7:	mov    rcx,QWORD PTR [rsp+0x20]
   140005fbc:	shr    eax,0x4
   140005fbf:	test   al,0x1
   140005fc1:	je     0x140005fd2
   140005fc3:	call   0x140005eb4
   140005fc8:	mov    edi,eax
   140005fca:	test   eax,eax
   140005fcc:	js     0x140006026
   140005fce:	xor    edi,edi
   140005fd0:	jmp    0x140005fde
   140005fd2:	call   QWORD PTR [rip+0x40c0]        # 0x14000a098
   140005fd8:	xor    edi,edi
   140005fda:	test   eax,eax
   140005fdc:	je     0x140006045
   140005fde:	mov    rcx,QWORD PTR [rsp+0x20]
   140005fe3:	test   rcx,rcx
   140005fe6:	je     0x140005fee
   140005fe8:	call   QWORD PTR [rip+0x40ba]        # 0x14000a0a8
   140005fee:	lea    rdx,[rsp+0x30]
   140005ff3:	mov    rcx,rbx
   140005ff6:	call   QWORD PTR [rip+0x406c]        # 0x14000a068
   140005ffc:	test   eax,eax
   140005ffe:	jne    0x140005f61
   140006004:	call   QWORD PTR [rip+0x404e]        # 0x14000a058
   14000600a:	cmp    eax,0x12
   14000600d:	jne    0x14000602d
   14000600f:	mov    rcx,rsi
   140006012:	call   QWORD PTR [rip+0x4078]        # 0x14000a090
   140006018:	test   eax,eax
   14000601a:	jne    0x140006085
   14000601c:	mov    edx,0x97
   140006021:	jmp    0x140005f4c
   140006026:	mov    edx,0x85
   14000602b:	jmp    0x14000605f
   14000602d:	test   eax,eax
   14000602f:	je     0x140006085
   140006031:	mov    rcx,QWORD PTR [rbp+0x198]
   140006038:	mov    r9d,eax
   14000603b:	call   0x140005e5c
   140006040:	jmp    0x140005f58
   140006045:	mov    rcx,QWORD PTR [rbp+0x198]
   14000604c:	mov    edx,0x89
   140006051:	call   0x140005e94
   140006056:	mov    edi,eax
   140006058:	jmp    0x140006075
   14000605a:	mov    edx,0x81
   14000605f:	mov    rcx,QWORD PTR [rbp+0x198]
   140006066:	lea    r8,[rip+0x4aab]        # 0x14000ab18
   14000606d:	mov    r9d,edi
   140006070:	call   0x140002488
   140006075:	mov    rcx,QWORD PTR [rsp+0x20]
   14000607a:	test   rcx,rcx
   14000607d:	je     0x140006085
   14000607f:	call   QWORD PTR [rip+0x4023]        # 0x14000a0a8
   140006085:	lea    rax,[rbx-0x1]
   140006089:	cmp    rax,0xfffffffffffffffd
   14000608d:	ja     0x140006098
   14000608f:	mov    rcx,rbx
   140006092:	call   QWORD PTR [rip+0x3fe0]        # 0x14000a078
   140006098:	mov    rcx,QWORD PTR [rsp+0x28]
   14000609d:	test   rcx,rcx
   1400060a0:	je     0x1400060a8
   1400060a2:	call   QWORD PTR [rip+0x4000]        # 0x14000a0a8
   1400060a8:	mov    eax,edi
   1400060aa:	mov    rcx,QWORD PTR [rbp+0x180]
   1400060b1:	xor    rcx,rsp
   1400060b4:	call   0x140007eb0
   1400060b9:	lea    r11,[rsp+0x290]
   1400060c1:	mov    rbx,QWORD PTR [r11+0x18]
   1400060c5:	mov    rsi,QWORD PTR [r11+0x20]
   1400060c9:	mov    rdi,QWORD PTR [r11+0x28]
   1400060cd:	mov    rsp,r11
   1400060d0:	pop    rbp
   1400060d1:	ret    
   1400060d2:	int3   
   1400060d3:	int3   
   1400060d4:	int3   
   1400060d5:	int3   
   1400060d6:	int3   
   1400060d7:	int3   
   1400060d8:	mov    r11,rsp
   1400060db:	push   rbp
   1400060dc:	push   rsi
   1400060dd:	push   rdi
   1400060de:	push   r14
   1400060e0:	push   r15
   1400060e2:	sub    rsp,0x80
   1400060e9:	mov    QWORD PTR [r11-0x68],0xfffffffffffffffe
   1400060f1:	mov    QWORD PTR [r11+0x20],rbx
   1400060f5:	mov    rax,QWORD PTR [rip+0x7f0c]        # 0x14000e008
   1400060fc:	xor    rax,rsp
   1400060ff:	mov    QWORD PTR [rsp+0x78],rax
   140006104:	mov    rdi,r8
   140006107:	mov    rsi,rdx
   14000610a:	mov    r14,rcx
   14000610d:	mov    QWORD PTR [r11-0x78],rcx
   140006111:	mov    QWORD PTR [r11-0x60],rdx
   140006115:	mov    QWORD PTR [r11-0x58],r8
   140006119:	lea    rax,[rip+0x4908]        # 0x14000aa28
   140006120:	mov    QWORD PTR [rcx],rax
   140006123:	mov    r15d,0x7
   140006129:	mov    QWORD PTR [rcx+0x20],r15
   14000612d:	xor    ebp,ebp
   14000612f:	mov    QWORD PTR [rcx+0x18],rbp
   140006133:	mov    WORD PTR [rcx+0x8],bp
   140006137:	mov    QWORD PTR [rcx+0x40],r15
   14000613b:	mov    QWORD PTR [rcx+0x38],rbp
   14000613f:	mov    WORD PTR [rcx+0x28],bp
   140006143:	mov    QWORD PTR [rcx+0x60],r15
   140006147:	mov    QWORD PTR [rcx+0x58],rbp
   14000614b:	mov    WORD PTR [rcx+0x48],bp
   14000614f:	mov    QWORD PTR [rcx+0x80],r15
   140006156:	mov    QWORD PTR [rcx+0x78],rbp
   14000615a:	mov    WORD PTR [rcx+0x68],bp
   14000615e:	add    rcx,0x88
   140006165:	mov    QWORD PTR [rcx+0x18],r15
   140006169:	mov    QWORD PTR [rcx+0x10],rbp
   14000616d:	mov    WORD PTR [rcx],bp
   140006170:	or     rbx,0xffffffffffffffff
   140006174:	mov    r9,rbx
   140006177:	xor    r8d,r8d
   14000617a:	mov    rdx,rdi
   14000617d:	call   0x140003f2c
   140006182:	nop
   140006183:	lea    rcx,[r14+0xa8]
   14000618a:	mov    QWORD PTR [rcx+0x18],r15
   14000618e:	mov    QWORD PTR [rcx+0x10],rbp
   140006192:	mov    WORD PTR [rcx],bp
   140006195:	mov    r9,rbx
   140006198:	xor    r8d,r8d
   14000619b:	mov    rdx,rsi
   14000619e:	call   0x140003f2c
   1400061a3:	nop
   1400061a4:	mov    QWORD PTR [r14+0xe0],r15
   1400061ab:	mov    QWORD PTR [r14+0xd8],rbp
   1400061b2:	mov    WORD PTR [r14+0xc8],bp
   1400061ba:	mov    QWORD PTR [r14+0xe8],rbp
   1400061c1:	lea    rbx,[r14+0xf0]
   1400061c8:	mov    QWORD PTR [rsp+0x38],rbx
   1400061cd:	mov    QWORD PTR [rbx],rbp
   1400061d0:	mov    QWORD PTR [rbx+0x8],rbp
   1400061d4:	call   0x1400079f0
   1400061d9:	mov    QWORD PTR [rbx],rax
   1400061dc:	cmp    DWORD PTR [rip+0x7e4d],0x5        # 0x14000e030
   1400061e3:	jbe    0x140006211
   1400061e5:	lea    rax,[rsp+0x58]
   1400061ea:	mov    QWORD PTR [rsp+0x28],rax
   1400061ef:	mov    DWORD PTR [rsp+0x20],0x2
   1400061f7:	xor    r9d,r9d
   1400061fa:	xor    r8d,r8d
   1400061fd:	lea    rdx,[rip+0x543e]        # 0x14000b642
   140006204:	lea    rcx,[rip+0x7e25]        # 0x14000e030
   14000620b:	call   0x140001008
   140006210:	nop
   140006211:	cmp    QWORD PTR [rsi+0x18],0x8
   140006216:	jb     0x140006221
   140006218:	mov    rcx,QWORD PTR [rsi]
   14000621b:	call   QWORD PTR [rip+0x40ef]        # 0x14000a310
   140006221:	mov    QWORD PTR [rsi+0x18],r15
   140006225:	mov    QWORD PTR [rsi+0x10],rbp
   140006229:	mov    WORD PTR [rsi],bp
   14000622c:	cmp    QWORD PTR [rdi+0x18],0x8
   140006231:	jb     0x14000623c
   140006233:	mov    rcx,QWORD PTR [rdi]
   140006236:	call   QWORD PTR [rip+0x40d4]        # 0x14000a310
   14000623c:	mov    QWORD PTR [rdi+0x18],r15
   140006240:	mov    QWORD PTR [rdi+0x10],rbp
   140006244:	mov    WORD PTR [rdi],bp
   140006247:	mov    rax,r14
   14000624a:	mov    rcx,QWORD PTR [rsp+0x78]
   14000624f:	xor    rcx,rsp
   140006252:	call   0x140007eb0
   140006257:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000625f:	add    rsp,0x80
   140006266:	pop    r15
   140006268:	pop    r14
   14000626a:	pop    rdi
   14000626b:	pop    rsi
   14000626c:	pop    rbp
   14000626d:	ret    
   14000626e:	int3   
   14000626f:	int3   
   140006270:	int3   
   140006271:	int3   
   140006272:	int3   
   140006273:	int3   
   140006274:	mov    r11,rsp
   140006277:	mov    QWORD PTR [r11+0x10],rbx
   14000627b:	mov    QWORD PTR [r11+0x18],rbp
   14000627f:	mov    QWORD PTR [r11+0x20],rsi
   140006283:	push   rdi
   140006284:	sub    rsp,0x60
   140006288:	mov    rax,QWORD PTR [rip+0x7d79]        # 0x14000e008
   14000628f:	xor    rax,rsp
   140006292:	mov    QWORD PTR [rsp+0x50],rax
   140006297:	lea    rax,[rip+0x478a]        # 0x14000aa28
   14000629e:	mov    rdi,rcx
   1400062a1:	mov    QWORD PTR [rcx],rax
   1400062a4:	cmp    DWORD PTR [rip+0x7d85],0x5        # 0x14000e030
   1400062ab:	jbe    0x1400062d6
   1400062ad:	lea    rax,[r11-0x38]
   1400062b1:	xor    r9d,r9d
   1400062b4:	mov    QWORD PTR [r11-0x40],rax
   1400062b8:	lea    rdx,[rip+0x5229]        # 0x14000b4e8
   1400062bf:	xor    r8d,r8d
   1400062c2:	mov    DWORD PTR [rsp+0x20],0x2
   1400062ca:	lea    rcx,[rip+0x7d5f]        # 0x14000e030
   1400062d1:	call   0x140001008
   1400062d6:	lea    rcx,[rdi+0xf0]
   1400062dd:	call   0x1400078ac
   1400062e2:	mov    rsi,QWORD PTR [rdi+0xe8]
   1400062e9:	xor    ebp,ebp
   1400062eb:	test   rsi,rsi
   1400062ee:	je     0x140006305
   1400062f0:	mov    rax,QWORD PTR [rsi]
   1400062f3:	mov    rbx,QWORD PTR [rax+0x78]
   1400062f7:	mov    rcx,rbx
   1400062fa:	call   QWORD PTR [rip+0x4080]        # 0x14000a380
   140006300:	mov    rcx,rsi
   140006303:	call   rbx
   140006305:	cmp    QWORD PTR [rdi+0xe0],0x8
   14000630d:	jb     0x14000631c
   14000630f:	mov    rcx,QWORD PTR [rdi+0xc8]
   140006316:	call   QWORD PTR [rip+0x3ff4]        # 0x14000a310
   14000631c:	mov    QWORD PTR [rdi+0xd8],rbp
   140006323:	mov    ebx,0x7
   140006328:	mov    QWORD PTR [rdi+0xe0],rbx
   14000632f:	mov    WORD PTR [rdi+0xc8],bp
   140006336:	cmp    QWORD PTR [rdi+0xc0],0x8
   14000633e:	jb     0x14000634d
   140006340:	mov    rcx,QWORD PTR [rdi+0xa8]
   140006347:	call   QWORD PTR [rip+0x3fc3]        # 0x14000a310
   14000634d:	mov    QWORD PTR [rdi+0xc0],rbx
   140006354:	mov    QWORD PTR [rdi+0xb8],rbp
   14000635b:	mov    WORD PTR [rdi+0xa8],bp
   140006362:	cmp    QWORD PTR [rdi+0xa0],0x8
   14000636a:	jb     0x140006379
   14000636c:	mov    rcx,QWORD PTR [rdi+0x88]
   140006373:	call   QWORD PTR [rip+0x3f97]        # 0x14000a310
   140006379:	mov    QWORD PTR [rdi+0xa0],rbx
   140006380:	mov    QWORD PTR [rdi+0x98],rbp
   140006387:	mov    WORD PTR [rdi+0x88],bp
   14000638e:	cmp    QWORD PTR [rdi+0x80],0x8
   140006396:	jb     0x1400063a2
   140006398:	mov    rcx,QWORD PTR [rdi+0x68]
   14000639c:	call   QWORD PTR [rip+0x3f6e]        # 0x14000a310
   1400063a2:	mov    QWORD PTR [rdi+0x80],rbx
   1400063a9:	mov    QWORD PTR [rdi+0x78],rbp
   1400063ad:	mov    WORD PTR [rdi+0x68],bp
   1400063b1:	cmp    QWORD PTR [rdi+0x60],0x8
   1400063b6:	jb     0x1400063c2
   1400063b8:	mov    rcx,QWORD PTR [rdi+0x48]
   1400063bc:	call   QWORD PTR [rip+0x3f4e]        # 0x14000a310
   1400063c2:	mov    QWORD PTR [rdi+0x60],rbx
   1400063c6:	mov    QWORD PTR [rdi+0x58],rbp
   1400063ca:	mov    WORD PTR [rdi+0x48],bp
   1400063ce:	cmp    QWORD PTR [rdi+0x40],0x8
   1400063d3:	jb     0x1400063df
   1400063d5:	mov    rcx,QWORD PTR [rdi+0x28]
   1400063d9:	call   QWORD PTR [rip+0x3f31]        # 0x14000a310
   1400063df:	mov    QWORD PTR [rdi+0x40],rbx
   1400063e3:	mov    QWORD PTR [rdi+0x38],rbp
   1400063e7:	mov    WORD PTR [rdi+0x28],bp
   1400063eb:	cmp    QWORD PTR [rdi+0x20],0x8
   1400063f0:	jb     0x1400063fc
   1400063f2:	mov    rcx,QWORD PTR [rdi+0x8]
   1400063f6:	call   QWORD PTR [rip+0x3f14]        # 0x14000a310
   1400063fc:	mov    QWORD PTR [rdi+0x20],rbx
   140006400:	mov    QWORD PTR [rdi+0x18],rbp
   140006404:	mov    WORD PTR [rdi+0x8],bp
   140006408:	mov    rcx,QWORD PTR [rsp+0x50]
   14000640d:	xor    rcx,rsp
   140006410:	call   0x140007eb0
   140006415:	lea    r11,[rsp+0x60]
   14000641a:	mov    rbx,QWORD PTR [r11+0x18]
   14000641e:	mov    rbp,QWORD PTR [r11+0x20]
   140006422:	mov    rsi,QWORD PTR [r11+0x28]
   140006426:	mov    rsp,r11
   140006429:	pop    rdi
   14000642a:	ret    
   14000642b:	int3   
   14000642c:	int3   
   14000642d:	int3   
   14000642e:	int3   
   14000642f:	int3   
   140006430:	int3   
   140006431:	int3   
   140006432:	int3   
   140006433:	int3   
   140006434:	int3   
   140006435:	int3   
   140006436:	int3   
   140006437:	int3   
   140006438:	int3   
   140006439:	int3   
   14000643a:	int3   
   14000643b:	int3   
   14000643c:	int3   
   14000643d:	int3   
   14000643e:	int3   
   14000643f:	int3   
   140006440:	mov    QWORD PTR [rsp+0x10],rbx
   140006445:	mov    QWORD PTR [rsp+0x18],rsi
   14000644a:	push   rbp
   14000644b:	push   rdi
   14000644c:	push   r13
   14000644e:	push   r14
   140006450:	push   r15
   140006452:	lea    rbp,[rsp-0x1a0]
   14000645a:	sub    rsp,0x2a0
   140006461:	mov    rax,QWORD PTR [rip+0x7ba0]        # 0x14000e008
   140006468:	xor    rax,rsp
   14000646b:	mov    QWORD PTR [rbp+0x190],rax
   140006472:	mov    eax,DWORD PTR [rip+0x7bb8]        # 0x14000e030
   140006478:	lea    rdi,[rip+0x40c1]        # 0x14000a540
   14000647f:	xor    r15d,r15d
   140006482:	lea    r13,[rip+0x7ba7]        # 0x14000e030
   140006489:	or     r14,0xffffffffffffffff
   14000648d:	mov    rsi,rcx
   140006490:	cmp    eax,0x5
   140006493:	jbe    0x140006503
   140006495:	lea    rax,[rcx+0x88]
   14000649c:	cmp    QWORD PTR [rax+0x18],0x8
   1400064a1:	jb     0x1400064a6
   1400064a3:	mov    rax,QWORD PTR [rax]
   1400064a6:	mov    rdx,rdi
   1400064a9:	mov    rcx,r15
   1400064ac:	test   rax,rax
   1400064af:	je     0x1400064c1
   1400064b1:	mov    rdx,rax
   1400064b4:	mov    rcx,r14
   1400064b7:	inc    rcx
   1400064ba:	cmp    WORD PTR [rax+rcx*2],r15w
   1400064bf:	jne    0x1400064b7
   1400064c1:	lea    eax,[rcx*2+0x2]
   1400064c8:	mov    QWORD PTR [rsp+0x60],rdx
   1400064cd:	mov    DWORD PTR [rsp+0x68],eax
   1400064d1:	mov    DWORD PTR [rsp+0x6c],r15d
   1400064d6:	lea    rax,[rsp+0x40]
   1400064db:	xor    r9d,r9d
   1400064de:	mov    QWORD PTR [rsp+0x28],rax
   1400064e3:	lea    rdx,[rip+0x4fd6]        # 0x14000b4c0
   1400064ea:	xor    r8d,r8d
   1400064ed:	mov    DWORD PTR [rsp+0x20],0x3
   1400064f5:	mov    rcx,r13
   1400064f8:	call   0x140001008
   1400064fd:	mov    eax,DWORD PTR [rip+0x7b2d]        # 0x14000e030
   140006503:	cmp    QWORD PTR [rsi+0x98],r15
   14000650a:	jne    0x14000653f
   14000650c:	cmp    eax,0x3
   14000650f:	jbe    0x140006538
   140006511:	lea    rax,[rsp+0x40]
   140006516:	xor    r9d,r9d
   140006519:	mov    QWORD PTR [rsp+0x28],rax
   14000651e:	lea    rdx,[rip+0x52d7]        # 0x14000b7fc
   140006525:	xor    r8d,r8d
   140006528:	mov    DWORD PTR [rsp+0x20],0x2
   140006530:	mov    rcx,r13
   140006533:	call   0x140001008
   140006538:	xor    al,al
   14000653a:	jmp    0x1400066bc
   14000653f:	lea    rbx,[rsi+0x88]
   140006546:	mov    QWORD PTR [rsp+0x38],r15
   14000654b:	cmp    QWORD PTR [rbx+0x18],0x8
   140006550:	jb     0x140006557
   140006552:	mov    rcx,QWORD PTR [rbx]
   140006555:	jmp    0x14000655a
   140006557:	mov    rcx,rbx
   14000655a:	lea    rdx,[rsp+0x38]
   14000655f:	call   QWORD PTR [rip+0x9a9b]        # 0x140010000
   140006565:	mov    DWORD PTR [rsp+0x30],eax
   140006569:	test   eax,eax
   14000656b:	jns    0x1400065a5
   14000656d:	cmp    DWORD PTR [rip+0x7abc],0x2        # 0x14000e030
   140006574:	jbe    0x14000673a
   14000657a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000657f:	jb     0x140006584
   140006581:	mov    rbx,QWORD PTR [rbx]
   140006584:	mov    rax,r15
   140006587:	test   rbx,rbx
   14000658a:	je     0x1400066e7
   140006590:	mov    rdi,rbx
   140006593:	mov    rax,r14
   140006596:	inc    rax
   140006599:	cmp    WORD PTR [rbx+rax*2],r15w
   14000659e:	jne    0x140006596
   1400065a0:	jmp    0x1400066e7
   1400065a5:	mov    rdi,QWORD PTR [rsp+0x38]
   1400065aa:	mov    rax,QWORD PTR [rdi]
   1400065ad:	mov    rbx,QWORD PTR [rax+0x8]
   1400065b1:	mov    rcx,rbx
   1400065b4:	call   QWORD PTR [rip+0x3dc6]        # 0x14000a380
   1400065ba:	mov    r8d,0x104
   1400065c0:	lea    rdx,[rbp-0x80]
   1400065c4:	mov    rcx,rdi
   1400065c7:	call   rbx
   1400065c9:	mov    DWORD PTR [rsp+0x30],eax
   1400065cd:	test   eax,eax
   1400065cf:	jns    0x1400065e3
   1400065d1:	cmp    DWORD PTR [rip+0x7a58],0x2        # 0x14000e030
   1400065d8:	jbe    0x14000679b
   1400065de:	jmp    0x14000675d
   1400065e3:	cmp    DWORD PTR [rip+0x7a46],0x5        # 0x14000e030
   1400065ea:	jbe    0x140006678
   1400065f0:	movabs rdx,0x200000000000
   1400065fa:	test   QWORD PTR [rip+0x7a3f],rdx        # 0x14000e040
   140006601:	je     0x140006678
   140006603:	mov    rax,QWORD PTR [rip+0x7a3e]        # 0x14000e048
   14000660a:	and    rax,rdx
   14000660d:	cmp    rax,QWORD PTR [rip+0x7a34]        # 0x14000e048
   140006614:	jne    0x140006678
   140006616:	lea    rax,[rbp-0x80]
   14000661a:	inc    r14
   14000661d:	cmp    WORD PTR [rax+r14*2],r15w
   140006622:	jne    0x14000661a
   140006624:	lea    rax,[rbp-0x80]
   140006628:	mov    DWORD PTR [rsp+0x6c],r15d
   14000662d:	mov    QWORD PTR [rsp+0x60],rax
   140006632:	lea    eax,[r14*2+0x2]
   14000663a:	mov    DWORD PTR [rsp+0x68],eax
   14000663e:	lea    rax,[rsp+0x30]
   140006643:	mov    QWORD PTR [rsp+0x70],rax
   140006648:	mov    QWORD PTR [rsp+0x78],0x4
   140006651:	lea    rax,[rsp+0x40]
   140006656:	xor    r9d,r9d
   140006659:	mov    QWORD PTR [rsp+0x28],rax
   14000665e:	lea    rdx,[rip+0x50f1]        # 0x14000b756
   140006665:	xor    r8d,r8d
   140006668:	mov    DWORD PTR [rsp+0x20],0x4
   140006670:	mov    rcx,r13
   140006673:	call   0x140001008
   140006678:	lea    rcx,[rsi+0xc8]
   14000667f:	lea    rdx,[rbp-0x80]
   140006683:	call   0x140003b20
   140006688:	mov    r14,QWORD PTR [rsp+0x38]
   14000668d:	mov    rdi,QWORD PTR [rsi+0xe8]
   140006694:	cmp    r14,rdi
   140006697:	je     0x1400066ba
   140006699:	test   rdi,rdi
   14000669c:	je     0x1400066b3
   14000669e:	mov    rax,QWORD PTR [rdi]
   1400066a1:	mov    rbx,QWORD PTR [rax+0x78]
   1400066a5:	mov    rcx,rbx
   1400066a8:	call   QWORD PTR [rip+0x3cd2]        # 0x14000a380
   1400066ae:	mov    rcx,rdi
   1400066b1:	call   rbx
   1400066b3:	mov    QWORD PTR [rsi+0xe8],r14
   1400066ba:	mov    al,0x1
   1400066bc:	mov    rcx,QWORD PTR [rbp+0x190]
   1400066c3:	xor    rcx,rsp
   1400066c6:	call   0x140007eb0
   1400066cb:	lea    r11,[rsp+0x2a0]
   1400066d3:	mov    rbx,QWORD PTR [r11+0x38]
   1400066d7:	mov    rsi,QWORD PTR [r11+0x40]
   1400066db:	mov    rsp,r11
   1400066de:	pop    r15
   1400066e0:	pop    r14
   1400066e2:	pop    r13
   1400066e4:	pop    rdi
   1400066e5:	pop    rbp
   1400066e6:	ret    
   1400066e7:	lea    eax,[rax*2+0x2]
   1400066ee:	mov    QWORD PTR [rsp+0x60],rdi
   1400066f3:	mov    DWORD PTR [rsp+0x68],eax
   1400066f7:	lea    rax,[rsp+0x30]
   1400066fc:	mov    QWORD PTR [rsp+0x70],rax
   140006701:	mov    DWORD PTR [rsp+0x6c],r15d
   140006706:	mov    QWORD PTR [rsp+0x78],0x4
   14000670f:	lea    rax,[rsp+0x40]
   140006714:	xor    r9d,r9d
   140006717:	mov    QWORD PTR [rsp+0x28],rax
   14000671c:	lea    rdx,[rip+0x4f4d]        # 0x14000b670
   140006723:	xor    r8d,r8d
   140006726:	mov    DWORD PTR [rsp+0x20],0x4
   14000672e:	mov    rcx,r13
   140006731:	call   0x140001008
   140006736:	mov    eax,DWORD PTR [rsp+0x30]
   14000673a:	mov    ecx,eax
   14000673c:	call   0x1400043f8
   140006741:	mov    rcx,QWORD PTR [rbp+0x1c8]
   140006748:	lea    r8,[rip+0x43f1]        # 0x14000ab40
   14000674f:	mov    r9d,eax
   140006752:	mov    edx,0x35
   140006757:	call   0x140002534
   14000675c:	int3   
   14000675d:	lea    rax,[rsp+0x30]
   140006762:	mov    QWORD PTR [rsp+0x68],0x4
   14000676b:	mov    QWORD PTR [rsp+0x60],rax
   140006770:	lea    rax,[rsp+0x40]
   140006775:	xor    r9d,r9d
   140006778:	mov    QWORD PTR [rsp+0x28],rax
   14000677d:	lea    rdx,[rip+0x4e88]        # 0x14000b60c
   140006784:	xor    r8d,r8d
   140006787:	mov    DWORD PTR [rsp+0x20],0x3
   14000678f:	mov    rcx,r13
   140006792:	call   0x140001008
   140006797:	mov    eax,DWORD PTR [rsp+0x30]
   14000679b:	mov    ecx,eax
   14000679d:	call   0x1400043f8
   1400067a2:	mov    rcx,QWORD PTR [rbp+0x1c8]
   1400067a9:	lea    r8,[rip+0x4390]        # 0x14000ab40
   1400067b0:	mov    r9d,eax
   1400067b3:	mov    edx,0x3e
   1400067b8:	call   0x140002534
   1400067bd:	int3   
   1400067be:	int3   
   1400067bf:	int3   
   1400067c0:	int3   
   1400067c1:	int3   
   1400067c2:	int3   
   1400067c3:	int3   
   1400067c4:	int3   
   1400067c5:	int3   
   1400067c6:	int3   
   1400067c7:	int3   
   1400067c8:	int3   
   1400067c9:	int3   
   1400067ca:	int3   
   1400067cb:	int3   
   1400067cc:	int3   
   1400067cd:	int3   
   1400067ce:	int3   
   1400067cf:	int3   
   1400067d0:	mov    rax,rsp
   1400067d3:	push   rbp
   1400067d4:	push   rsi
   1400067d5:	push   rdi
   1400067d6:	push   r12
   1400067d8:	push   r13
   1400067da:	push   r14
   1400067dc:	push   r15
   1400067de:	lea    rbp,[rax-0x5f]
   1400067e2:	sub    rsp,0xe0
   1400067e9:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   1400067f1:	mov    QWORD PTR [rax+0x18],rbx
   1400067f5:	mov    rax,QWORD PTR [rip+0x780c]        # 0x14000e008
   1400067fc:	xor    rax,rsp
   1400067ff:	mov    QWORD PTR [rbp+0x17],rax
   140006803:	mov    r15,rdx
   140006806:	mov    rsi,rcx
   140006809:	mov    QWORD PTR [rbp-0x61],rdx
   14000680d:	xor    ebx,ebx
   14000680f:	cmp    QWORD PTR [rcx+0xe8],rbx
   140006816:	jne    0x140006842
   140006818:	cmp    DWORD PTR [rip+0x7811],0x3        # 0x14000e030
   14000681f:	jbe    0x140006dfd
   140006825:	lea    rax,[rbp-0x9]
   140006829:	mov    QWORD PTR [rsp+0x28],rax
   14000682e:	mov    DWORD PTR [rsp+0x20],0x2
   140006836:	lea    rdx,[rip+0x4d18]        # 0x14000b555
   14000683d:	jmp    0x140006dea
   140006842:	cmp    QWORD PTR [rdx+0x18],0x8
   140006847:	jb     0x14000684e
   140006849:	mov    rcx,QWORD PTR [rdx]
   14000684c:	jmp    0x140006851
   14000684e:	mov    rcx,rdx
   140006851:	call   QWORD PTR [rip+0x3829]        # 0x14000a080
   140006857:	cmp    eax,0xffffffff
   14000685a:	je     0x140006d8a
   140006860:	test   al,0x10
   140006862:	je     0x140006d8a
   140006868:	mov    r8,r15
   14000686b:	lea    rdx,[rbp-0x9]
   14000686f:	mov    rcx,rsi
   140006872:	call   0x140007580
   140006877:	lea    r12,[rsi+0x28]
   14000687b:	mov    rdx,rax
   14000687e:	mov    rcx,r12
   140006881:	call   0x1400077d4
   140006886:	cmp    QWORD PTR [rbp+0xf],0x8
   14000688b:	jb     0x140006897
   14000688d:	mov    rcx,QWORD PTR [rbp-0x9]
   140006891:	call   QWORD PTR [rip+0x3a79]        # 0x14000a310
   140006897:	xorps  xmm0,xmm0
   14000689a:	movdqu XMMWORD PTR [rbp-0x9],xmm0
   14000689f:	mov    rdx,rbx
   1400068a2:	mov    QWORD PTR [rbp+0x7],rbx
   1400068a6:	mov    rax,QWORD PTR [rsi+0x38]
   1400068aa:	add    rax,0x10a
   1400068b0:	je     0x1400068d7
   1400068b2:	movabs rcx,0x7fffffffffffffff
   1400068bc:	cmp    rax,rcx
   1400068bf:	jbe    0x1400068c7
   1400068c1:	call   0x140003d88
   1400068c6:	int3   
   1400068c7:	mov    rdx,rax
   1400068ca:	lea    rcx,[rbp-0x9]
   1400068ce:	call   0x140003ccc
   1400068d3:	mov    rdx,QWORD PTR [rbp+0x7]
   1400068d7:	cmp    QWORD PTR [r12+0x18],0x8
   1400068dd:	jb     0x1400068e5
   1400068df:	mov    r8,QWORD PTR [r12]
   1400068e3:	jmp    0x1400068e8
   1400068e5:	mov    r8,r12
   1400068e8:	mov    r13,QWORD PTR [rbp-0x9]
   1400068ec:	sub    rdx,r13
   1400068ef:	sar    rdx,1
   1400068f2:	mov    DWORD PTR [rsp+0x20],0x1
   1400068fa:	lea    rdi,[rip+0x40f7]        # 0x14000a9f8
   140006901:	mov    r9,rdi
   140006904:	mov    rcx,r13
   140006907:	call   QWORD PTR [rip+0x37fb]        # 0x14000a108
   14000690d:	mov    DWORD PTR [rsp+0x30],eax
   140006911:	test   eax,eax
   140006913:	jns    0x1400069ce
   140006919:	cmp    DWORD PTR [rip+0x7710],0x2        # 0x14000e030
   140006920:	jbe    0x1400069ae
   140006926:	cmp    QWORD PTR [r12+0x18],0x8
   14000692c:	jb     0x140006932
   14000692e:	mov    r12,QWORD PTR [r12]
   140006932:	lea    rcx,[rip+0x3c07]        # 0x14000a540
   140006939:	mov    rax,rbx
   14000693c:	test   r12,r12
   14000693f:	je     0x140006952
   140006941:	mov    rcx,r12
   140006944:	or     rax,0xffffffffffffffff
   140006948:	inc    rax
   14000694b:	cmp    WORD PTR [r12+rax*2],bx
   140006950:	jne    0x140006948
   140006952:	mov    QWORD PTR [rbp-0x39],rcx
   140006956:	lea    eax,[rax*2+0x2]
   14000695d:	mov    DWORD PTR [rbp-0x31],eax
   140006960:	mov    DWORD PTR [rbp-0x2d],ebx
   140006963:	mov    QWORD PTR [rbp-0x29],rdi
   140006967:	mov    QWORD PTR [rbp-0x21],0x28
   14000696f:	lea    rax,[rsp+0x30]
   140006974:	mov    QWORD PTR [rbp-0x19],rax
   140006978:	mov    QWORD PTR [rbp-0x11],0x4
   140006980:	lea    rax,[rbp-0x59]
   140006984:	mov    QWORD PTR [rsp+0x28],rax
   140006989:	mov    DWORD PTR [rsp+0x20],0x5
   140006991:	xor    r9d,r9d
   140006994:	xor    r8d,r8d
   140006997:	lea    rdx,[rip+0x4d0e]        # 0x14000b6ac
   14000699e:	lea    rcx,[rip+0x768b]        # 0x14000e030
   1400069a5:	call   0x140001008
   1400069aa:	mov    eax,DWORD PTR [rsp+0x30]
   1400069ae:	mov    ecx,eax
   1400069b0:	call   0x1400043f8
   1400069b5:	mov    r9d,eax
   1400069b8:	mov    rcx,QWORD PTR [rbp+0x5f]
   1400069bc:	lea    r8,[rip+0x417d]        # 0x14000ab40
   1400069c3:	mov    edx,0x6d
   1400069c8:	call   0x140002534
   1400069cd:	int3   
   1400069ce:	lea    rcx,[rsi+0x8]
   1400069d2:	mov    rdx,r13
   1400069d5:	call   0x140003b20
   1400069da:	cmp    QWORD PTR [r12+0x18],0x8
   1400069e0:	jb     0x1400069e8
   1400069e2:	mov    rcx,QWORD PTR [r12]
   1400069e6:	jmp    0x1400069eb
   1400069e8:	mov    rcx,r12
   1400069eb:	xor    edx,edx
   1400069ed:	call   QWORD PTR [rip+0x3695]        # 0x14000a088
   1400069f3:	test   eax,eax
   1400069f5:	jne    0x140006b6a
   1400069fb:	call   QWORD PTR [rip+0x3657]        # 0x14000a058
   140006a01:	movzx  ecx,ax
   140006a04:	or     ecx,0x80070000
   140006a0a:	test   eax,eax
   140006a0c:	cmovle ecx,eax
   140006a0f:	mov    DWORD PTR [rsp+0x30],ecx
   140006a13:	cmp    ecx,0x800700b7
   140006a19:	jne    0x140006ac7
   140006a1f:	cmp    DWORD PTR [rip+0x760a],0x3        # 0x14000e030
   140006a26:	jbe    0x140006aa1
   140006a28:	cmp    QWORD PTR [r12+0x18],0x8
   140006a2e:	jb     0x140006a34
   140006a30:	mov    r12,QWORD PTR [r12]
   140006a34:	lea    rcx,[rip+0x3b05]        # 0x14000a540
   140006a3b:	mov    rax,rbx
   140006a3e:	test   r12,r12
   140006a41:	je     0x140006a54
   140006a43:	mov    rcx,r12
   140006a46:	or     rax,0xffffffffffffffff
   140006a4a:	inc    rax
   140006a4d:	cmp    WORD PTR [r12+rax*2],bx
   140006a52:	jne    0x140006a4a
   140006a54:	mov    QWORD PTR [rbp-0x39],rcx
   140006a58:	lea    eax,[rax*2+0x2]
   140006a5f:	mov    DWORD PTR [rbp-0x31],eax
   140006a62:	mov    DWORD PTR [rbp-0x2d],ebx
   140006a65:	lea    rax,[rsp+0x30]
   140006a6a:	mov    QWORD PTR [rbp-0x29],rax
   140006a6e:	mov    QWORD PTR [rbp-0x21],0x4
   140006a76:	lea    rax,[rbp-0x59]
   140006a7a:	mov    QWORD PTR [rsp+0x28],rax
   140006a7f:	mov    DWORD PTR [rsp+0x20],0x4
   140006a87:	xor    r9d,r9d
   140006a8a:	xor    r8d,r8d
   140006a8d:	lea    rdx,[rip+0x4d20]        # 0x14000b7b4
   140006a94:	lea    rcx,[rip+0x7595]        # 0x14000e030
   140006a9b:	call   0x140001008
   140006aa0:	nop
   140006aa1:	test   r13,r13
   140006aa4:	je     0x140006ab0
   140006aa6:	mov    rcx,r13
   140006aa9:	call   QWORD PTR [rip+0x3861]        # 0x14000a310
   140006aaf:	nop
   140006ab0:	cmp    QWORD PTR [r15+0x18],0x8
   140006ab5:	jb     0x140006ac0
   140006ab7:	mov    rcx,QWORD PTR [r15]
   140006aba:	call   QWORD PTR [rip+0x3850]        # 0x14000a310
   140006ac0:	mov    al,0x1
   140006ac2:	jmp    0x140006e0f
   140006ac7:	cmp    DWORD PTR [rip+0x7562],0x2        # 0x14000e030
   140006ace:	jbe    0x140006b4c
   140006ad0:	cmp    QWORD PTR [r12+0x18],0x8
   140006ad6:	jb     0x140006adc
   140006ad8:	mov    r12,QWORD PTR [r12]
   140006adc:	lea    rcx,[rip+0x3a5d]        # 0x14000a540
   140006ae3:	mov    rax,rbx
   140006ae6:	test   r12,r12
   140006ae9:	je     0x140006afc
   140006aeb:	mov    rcx,r12
   140006aee:	or     rax,0xffffffffffffffff
   140006af2:	inc    rax
   140006af5:	cmp    WORD PTR [r12+rax*2],bx
   140006afa:	jne    0x140006af2
   140006afc:	mov    QWORD PTR [rbp-0x39],rcx
   140006b00:	lea    eax,[rax*2+0x2]
   140006b07:	mov    DWORD PTR [rbp-0x31],eax
   140006b0a:	mov    DWORD PTR [rbp-0x2d],ebx
   140006b0d:	lea    rax,[rsp+0x30]
   140006b12:	mov    QWORD PTR [rbp-0x29],rax
   140006b16:	mov    QWORD PTR [rbp-0x21],0x4
   140006b1e:	lea    rax,[rbp-0x59]
   140006b22:	mov    QWORD PTR [rsp+0x28],rax
   140006b27:	mov    DWORD PTR [rsp+0x20],0x4
   140006b2f:	xor    r9d,r9d
   140006b32:	xor    r8d,r8d
   140006b35:	lea    rdx,[rip+0x49d1]        # 0x14000b50d
   140006b3c:	lea    rcx,[rip+0x74ed]        # 0x14000e030
   140006b43:	call   0x140001008
   140006b48:	mov    ecx,DWORD PTR [rsp+0x30]
   140006b4c:	call   0x1400043f8
   140006b51:	mov    r9d,eax
   140006b54:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006b58:	lea    r8,[rip+0x3fe1]        # 0x14000ab40
   140006b5f:	mov    edx,0x84
   140006b64:	call   0x140002534
   140006b69:	int3   
   140006b6a:	mov    QWORD PTR [rbp-0x71],rbx
   140006b6e:	mov    QWORD PTR [rsp+0x38],rbx
   140006b73:	mov    rsi,QWORD PTR [rsi+0xe8]
   140006b7a:	mov    rax,QWORD PTR [rsi]
   140006b7d:	mov    rdi,QWORD PTR [rax+0x60]
   140006b81:	mov    rcx,rdi
   140006b84:	call   QWORD PTR [rip+0x37f6]        # 0x14000a380
   140006b8a:	lea    r8,[rsp+0x38]
   140006b8f:	mov    edx,0x3
   140006b94:	mov    rcx,rsi
   140006b97:	call   rdi
   140006b99:	mov    DWORD PTR [rsp+0x30],eax
   140006b9d:	test   eax,eax
   140006b9f:	jns    0x140006c09
   140006ba1:	cmp    DWORD PTR [rip+0x7488],0x2        # 0x14000e030
   140006ba8:	jbe    0x140006be9
   140006baa:	lea    rax,[rsp+0x30]
   140006baf:	mov    QWORD PTR [rbp-0x39],rax
   140006bb3:	mov    QWORD PTR [rbp-0x31],0x4
   140006bbb:	lea    rax,[rbp-0x59]
   140006bbf:	mov    QWORD PTR [rsp+0x28],rax
   140006bc4:	mov    DWORD PTR [rsp+0x20],0x3
   140006bcc:	xor    r9d,r9d
   140006bcf:	xor    r8d,r8d
   140006bd2:	lea    rdx,[rip+0x4c45]        # 0x14000b81e
   140006bd9:	lea    rcx,[rip+0x7450]        # 0x14000e030
   140006be0:	call   0x140001008
   140006be5:	mov    eax,DWORD PTR [rsp+0x30]
   140006be9:	mov    ecx,eax
   140006beb:	call   0x1400043f8
   140006bf0:	mov    r9d,eax
   140006bf3:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006bf7:	lea    r8,[rip+0x3f42]        # 0x14000ab40
   140006bfe:	mov    edx,0x90
   140006c03:	call   0x140002534
   140006c08:	int3   
   140006c09:	mov    rsi,rbx
   140006c0c:	mov    rax,QWORD PTR [rsp+0x38]
   140006c11:	test   rax,rax
   140006c14:	cmovne rsi,rax
   140006c18:	mov    QWORD PTR [rbp-0x71],rsi
   140006c1c:	mov    QWORD PTR [rbp-0x79],rbx
   140006c20:	mov    QWORD PTR [rsp+0x38],rbx
   140006c25:	mov    rax,QWORD PTR [rsi]
   140006c28:	mov    rdi,QWORD PTR [rax]
   140006c2b:	mov    rcx,rdi
   140006c2e:	call   QWORD PTR [rip+0x374c]        # 0x14000a380
   140006c34:	lea    rdx,[rsp+0x38]
   140006c39:	mov    rcx,rsi
   140006c3c:	call   rdi
   140006c3e:	mov    DWORD PTR [rsp+0x30],eax
   140006c42:	test   eax,eax
   140006c44:	jns    0x140006cae
   140006c46:	cmp    DWORD PTR [rip+0x73e3],0x2        # 0x14000e030
   140006c4d:	jbe    0x140006c8e
   140006c4f:	lea    rax,[rsp+0x30]
   140006c54:	mov    QWORD PTR [rbp-0x39],rax
   140006c58:	mov    QWORD PTR [rbp-0x31],0x4
   140006c60:	lea    rax,[rbp-0x59]
   140006c64:	mov    QWORD PTR [rsp+0x28],rax
   140006c69:	mov    DWORD PTR [rsp+0x20],0x3
   140006c71:	xor    r9d,r9d
   140006c74:	xor    r8d,r8d
   140006c77:	lea    rdx,[rip+0x4927]        # 0x14000b5a5
   140006c7e:	lea    rcx,[rip+0x73ab]        # 0x14000e030
   140006c85:	call   0x140001008
   140006c8a:	mov    eax,DWORD PTR [rsp+0x30]
   140006c8e:	mov    ecx,eax
   140006c90:	call   0x1400043f8
   140006c95:	mov    r9d,eax
   140006c98:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006c9c:	lea    r8,[rip+0x3e9d]        # 0x14000ab40
   140006ca3:	mov    edx,0x9e
   140006ca8:	call   0x140002534
   140006cad:	int3   
   140006cae:	mov    rdi,rbx
   140006cb1:	mov    rax,QWORD PTR [rsp+0x38]
   140006cb6:	test   rax,rax
   140006cb9:	cmovne rdi,rax
   140006cbd:	mov    QWORD PTR [rbp-0x79],rdi
   140006cc1:	cmp    QWORD PTR [r12+0x18],0x8
   140006cc7:	jb     0x140006ccd
   140006cc9:	mov    r12,QWORD PTR [r12]
   140006ccd:	mov    rax,QWORD PTR [rdi]
   140006cd0:	mov    r14,QWORD PTR [rax+0x48]
   140006cd4:	mov    rcx,r14
   140006cd7:	call   QWORD PTR [rip+0x36a3]        # 0x14000a380
   140006cdd:	xor    r8d,r8d
   140006ce0:	mov    rdx,r12
   140006ce3:	mov    rcx,rdi
   140006ce6:	call   r14
   140006ce9:	mov    DWORD PTR [rsp+0x30],eax
   140006ced:	test   eax,eax
   140006cef:	jns    0x140006d59
   140006cf1:	cmp    DWORD PTR [rip+0x7338],0x2        # 0x14000e030
   140006cf8:	jbe    0x140006d39
   140006cfa:	lea    rax,[rsp+0x30]
   140006cff:	mov    QWORD PTR [rbp-0x39],rax
   140006d03:	mov    QWORD PTR [rbp-0x31],0x4
   140006d0b:	lea    rax,[rbp-0x59]
   140006d0f:	mov    QWORD PTR [rsp+0x28],rax
   140006d14:	mov    DWORD PTR [rsp+0x20],0x3
   140006d1c:	xor    r9d,r9d
   140006d1f:	xor    r8d,r8d
   140006d22:	lea    rdx,[rip+0x4850]        # 0x14000b579
   140006d29:	lea    rcx,[rip+0x7300]        # 0x14000e030
   140006d30:	call   0x140001008
   140006d35:	mov    eax,DWORD PTR [rsp+0x30]
   140006d39:	mov    ecx,eax
   140006d3b:	call   0x1400043f8
   140006d40:	mov    r9d,eax
   140006d43:	mov    rcx,QWORD PTR [rbp+0x5f]
   140006d47:	lea    r8,[rip+0x3df2]        # 0x14000ab40
   140006d4e:	mov    edx,0xa9
   140006d53:	call   0x140002534
   140006d58:	nop
   140006d59:	mov    rax,QWORD PTR [rdi]
   140006d5c:	mov    r14,QWORD PTR [rax+0x50]
   140006d60:	mov    rcx,r14
   140006d63:	call   QWORD PTR [rip+0x3617]        # 0x14000a380
   140006d69:	mov    rcx,rdi
   140006d6c:	call   r14
   140006d6f:	nop
   140006d70:	mov    rax,QWORD PTR [rsi]
   140006d73:	mov    rdi,QWORD PTR [rax+0x8]
   140006d77:	mov    rcx,rdi
   140006d7a:	call   QWORD PTR [rip+0x3600]        # 0x14000a380
   140006d80:	mov    rcx,rsi
   140006d83:	call   rdi
   140006d85:	jmp    0x140006aa1
   140006d8a:	cmp    DWORD PTR [rip+0x729f],0x3        # 0x14000e030
   140006d91:	jbe    0x140006dfd
   140006d93:	cmp    QWORD PTR [r15+0x18],0x8
   140006d98:	jb     0x140006d9f
   140006d9a:	mov    rdx,QWORD PTR [r15]
   140006d9d:	jmp    0x140006da2
   140006d9f:	mov    rdx,r15
   140006da2:	lea    rcx,[rip+0x3797]        # 0x14000a540
   140006da9:	mov    rax,rbx
   140006dac:	test   rdx,rdx
   140006daf:	je     0x140006dc1
   140006db1:	mov    rcx,rdx
   140006db4:	or     rax,0xffffffffffffffff
   140006db8:	inc    rax
   140006dbb:	cmp    WORD PTR [rdx+rax*2],bx
   140006dbf:	jne    0x140006db8
   140006dc1:	mov    QWORD PTR [rbp-0x39],rcx
   140006dc5:	lea    eax,[rax*2+0x2]
   140006dcc:	mov    DWORD PTR [rbp-0x31],eax
   140006dcf:	mov    DWORD PTR [rbp-0x2d],ebx
   140006dd2:	lea    rax,[rbp-0x59]
   140006dd6:	mov    QWORD PTR [rsp+0x28],rax
   140006ddb:	mov    DWORD PTR [rsp+0x20],0x3
   140006de3:	lea    rdx,[rip+0x47e9]        # 0x14000b5d3
   140006dea:	xor    r9d,r9d
   140006ded:	xor    r8d,r8d
   140006df0:	lea    rcx,[rip+0x7239]        # 0x14000e030
   140006df7:	call   0x140001008
   140006dfc:	nop
   140006dfd:	cmp    QWORD PTR [r15+0x18],0x8
   140006e02:	jb     0x140006e0d
   140006e04:	mov    rcx,QWORD PTR [r15]
   140006e07:	call   QWORD PTR [rip+0x3503]        # 0x14000a310
   140006e0d:	xor    al,al
   140006e0f:	mov    QWORD PTR [r15+0x18],0x7
   140006e17:	mov    QWORD PTR [r15+0x10],rbx
   140006e1b:	mov    WORD PTR [r15],bx
   140006e1f:	mov    rcx,QWORD PTR [rbp+0x17]
   140006e23:	xor    rcx,rsp
   140006e26:	call   0x140007eb0
   140006e2b:	mov    rbx,QWORD PTR [rsp+0x130]
   140006e33:	add    rsp,0xe0
   140006e3a:	pop    r15
   140006e3c:	pop    r14
   140006e3e:	pop    r13
   140006e40:	pop    r12
   140006e42:	pop    rdi
   140006e43:	pop    rsi
   140006e44:	pop    rbp
   140006e45:	ret    
   140006e46:	int3   
   140006e47:	int3   
   140006e48:	int3   
   140006e49:	int3   
   140006e4a:	int3   
   140006e4b:	int3   
   140006e4c:	int3   
   140006e4d:	int3   
   140006e4e:	int3   
   140006e4f:	int3   
   140006e50:	mov    r11,rsp
   140006e53:	push   rsi
   140006e54:	push   rdi
   140006e55:	push   r12
   140006e57:	push   r14
   140006e59:	push   r15
   140006e5b:	sub    rsp,0xa0
   140006e62:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140006e6b:	mov    QWORD PTR [r11+0x18],rbx
   140006e6f:	mov    rax,QWORD PTR [rip+0x7192]        # 0x14000e008
   140006e76:	xor    rax,rsp
   140006e79:	mov    QWORD PTR [rsp+0x90],rax
   140006e81:	mov    r14,rdx
   140006e84:	mov    rsi,rcx
   140006e87:	mov    QWORD PTR [rsp+0x38],rcx
   140006e8c:	mov    QWORD PTR [r11-0x80],rdx
   140006e90:	cmp    DWORD PTR [rip+0x7199],0x5        # 0x14000e030
   140006e97:	jbe    0x140006f0e
   140006e99:	lea    rax,[rcx+0x88]
   140006ea0:	cmp    QWORD PTR [rax+0x18],0x8
   140006ea5:	jb     0x140006eaa
   140006ea7:	mov    rax,QWORD PTR [rax]
   140006eaa:	lea    r12,[rip+0x368f]        # 0x14000a540
   140006eb1:	mov    rdx,r12
   140006eb4:	xor    edi,edi
   140006eb6:	mov    ecx,edi
   140006eb8:	test   rax,rax
   140006ebb:	je     0x140006ecd
   140006ebd:	mov    rdx,rax
   140006ec0:	or     rcx,0xffffffffffffffff
   140006ec4:	inc    rcx
   140006ec7:	cmp    WORD PTR [rax+rcx*2],di
   140006ecb:	jne    0x140006ec4
   140006ecd:	mov    QWORD PTR [rsp+0x70],rdx
   140006ed2:	lea    eax,[rcx*2+0x2]
   140006ed9:	mov    DWORD PTR [rsp+0x78],eax
   140006edd:	mov    DWORD PTR [rsp+0x7c],edi
   140006ee1:	lea    rax,[rsp+0x50]
   140006ee6:	mov    QWORD PTR [rsp+0x28],rax
   140006eeb:	mov    DWORD PTR [rsp+0x20],0x3
   140006ef3:	xor    r9d,r9d
   140006ef6:	xor    r8d,r8d
   140006ef9:	lea    rdx,[rip+0x488d]        # 0x14000b78d
   140006f00:	lea    rcx,[rip+0x7129]        # 0x14000e030
   140006f07:	call   0x140001008
   140006f0c:	jmp    0x140006f17
   140006f0e:	lea    r12,[rip+0x362b]        # 0x14000a540
   140006f15:	xor    edi,edi
   140006f17:	cmp    QWORD PTR [rsi+0xe8],rdi
   140006f1e:	jne    0x140006f53
   140006f20:	mov    rcx,rsi
   140006f23:	call   0x140006440
   140006f28:	test   al,al
   140006f2a:	jne    0x140006f53
   140006f2c:	mov    ecx,0x8000ffff
   140006f31:	call   0x1400043f8
   140006f36:	mov    r9d,eax
   140006f39:	mov    rcx,QWORD PTR [rsp+0xc8]
   140006f41:	lea    r8,[rip+0x3bf8]        # 0x14000ab40
   140006f48:	mov    edx,0xb8
   140006f4d:	call   0x140002534
   140006f52:	int3   
   140006f53:	cmp    QWORD PTR [rsi+0x38],rdi
   140006f57:	jne    0x140006f88
   140006f59:	mov    r8,r14
   140006f5c:	lea    rdx,[rsp+0x50]
   140006f61:	mov    rcx,rsi
   140006f64:	call   0x140007580
   140006f69:	lea    rcx,[rsi+0x28]
   140006f6d:	mov    rdx,rax
   140006f70:	call   0x1400077d4
   140006f75:	cmp    QWORD PTR [rsp+0x68],0x8
   140006f7b:	jb     0x140006f88
   140006f7d:	mov    rcx,QWORD PTR [rsp+0x50]
   140006f82:	call   QWORD PTR [rip+0x3388]        # 0x14000a310
   140006f88:	mov    r15,QWORD PTR [rsi+0xe8]
   140006f8f:	test   r15,r15
   140006f92:	je     0x140006fb0
   140006f94:	mov    rax,QWORD PTR [r15]
   140006f97:	mov    rbx,QWORD PTR [rax+0x78]
   140006f9b:	mov    rcx,rbx
   140006f9e:	call   QWORD PTR [rip+0x33dc]        # 0x14000a380
   140006fa4:	mov    rcx,r15
   140006fa7:	call   rbx
   140006fa9:	mov    QWORD PTR [rsi+0xe8],rdi
   140006fb0:	lea    rcx,[rsi+0x28]
   140006fb4:	cmp    QWORD PTR [rcx+0x18],0x8
   140006fb9:	jb     0x140006fbe
   140006fbb:	mov    rcx,QWORD PTR [rcx]
   140006fbe:	call   0x140005eb4
   140006fc3:	mov    rcx,QWORD PTR [rsp+0xc8]
   140006fcb:	test   eax,eax
   140006fcd:	jns    0x140006fe4
   140006fcf:	mov    r9d,eax
   140006fd2:	lea    r8,[rip+0x3b3f]        # 0x14000ab18
   140006fd9:	mov    edx,0x9e
   140006fde:	call   0x140002534
   140006fe3:	nop
   140006fe4:	jmp    0x140006ff9
   140006fe6:	lea    r12,[rip+0x3553]        # 0x14000a540
   140006fed:	xor    edi,edi
   140006fef:	mov    rsi,QWORD PTR [rsp+0x38]
   140006ff4:	mov    r14,QWORD PTR [rsp+0x48]
   140006ff9:	lea    rbx,[rsi+0x88]
   140007000:	cmp    QWORD PTR [rbx+0x18],0x8
   140007005:	jb     0x14000700c
   140007007:	mov    rcx,QWORD PTR [rbx]
   14000700a:	jmp    0x14000700f
   14000700c:	mov    rcx,rbx
   14000700f:	call   QWORD PTR [rip+0x3083]        # 0x14000a098
   140007015:	test   eax,eax
   140007017:	jne    0x1400070c5
   14000701d:	cmp    DWORD PTR [rip+0x700c],0x2        # 0x14000e030
   140007024:	jbe    0x1400070ab
   14000702a:	cmp    QWORD PTR [rbx+0x18],0x8
   14000702f:	jb     0x140007034
   140007031:	mov    rbx,QWORD PTR [rbx]
   140007034:	mov    rax,rdi
   140007037:	test   rbx,rbx
   14000703a:	je     0x14000704c
   14000703c:	mov    r12,rbx
   14000703f:	or     rax,0xffffffffffffffff
   140007043:	inc    rax
   140007046:	cmp    WORD PTR [rbx+rax*2],di
   14000704a:	jne    0x140007043
   14000704c:	mov    QWORD PTR [rsp+0x70],r12
   140007051:	lea    eax,[rax*2+0x2]
   140007058:	mov    DWORD PTR [rsp+0x78],eax
   14000705c:	mov    DWORD PTR [rsp+0x7c],edi
   140007060:	call   QWORD PTR [rip+0x2ff2]        # 0x14000a058
   140007066:	mov    DWORD PTR [rsp+0x30],eax
   14000706a:	lea    rax,[rsp+0x30]
   14000706f:	mov    QWORD PTR [rsp+0x80],rax
   140007077:	mov    ecx,0x4
   14000707c:	mov    QWORD PTR [rsp+0x88],rcx
   140007084:	lea    rax,[rsp+0x50]
   140007089:	mov    QWORD PTR [rsp+0x28],rax
   14000708e:	mov    DWORD PTR [rsp+0x20],ecx
   140007092:	xor    r9d,r9d
   140007095:	xor    r8d,r8d
   140007098:	lea    rdx,[rip+0x438a]        # 0x14000b429
   14000709f:	lea    rcx,[rip+0x6f8a]        # 0x14000e030
   1400070a6:	call   0x140001008
   1400070ab:	mov    rcx,QWORD PTR [rsp+0xc8]
   1400070b3:	lea    r8,[rip+0x3a86]        # 0x14000ab40
   1400070ba:	mov    edx,0xda
   1400070bf:	call   0x140004968
   1400070c4:	int3   
   1400070c5:	lea    rax,[rsi+0x8]
   1400070c9:	mov    QWORD PTR [rax+0x10],rdi
   1400070cd:	cmp    QWORD PTR [rax+0x18],0x8
   1400070d2:	jb     0x1400070d7
   1400070d4:	mov    rax,QWORD PTR [rax]
   1400070d7:	mov    WORD PTR [rax],di
   1400070da:	lea    rax,[rsi+0x28]
   1400070de:	mov    QWORD PTR [rax+0x10],rdi
   1400070e2:	cmp    QWORD PTR [rax+0x18],0x8
   1400070e7:	jb     0x1400070ec
   1400070e9:	mov    rax,QWORD PTR [rax]
   1400070ec:	mov    WORD PTR [rax],di
   1400070ef:	lea    rax,[rsi+0x48]
   1400070f3:	mov    QWORD PTR [rax+0x10],rdi
   1400070f7:	cmp    QWORD PTR [rax+0x18],0x8
   1400070fc:	jb     0x140007101
   1400070fe:	mov    rax,QWORD PTR [rax]
   140007101:	mov    WORD PTR [rax],di
   140007104:	add    rsi,0xc8
   14000710b:	mov    QWORD PTR [rsi+0x10],rdi
   14000710f:	cmp    QWORD PTR [rsi+0x18],0x8
   140007114:	jb     0x140007119
   140007116:	mov    rsi,QWORD PTR [rsi]
   140007119:	mov    WORD PTR [rsi],di
   14000711c:	cmp    QWORD PTR [r14+0x18],0x8
   140007121:	jb     0x14000712c
   140007123:	mov    rcx,QWORD PTR [r14]
   140007126:	call   QWORD PTR [rip+0x31e4]        # 0x14000a310
   14000712c:	mov    QWORD PTR [r14+0x18],0x7
   140007134:	mov    QWORD PTR [r14+0x10],rdi
   140007138:	mov    WORD PTR [r14],di
   14000713c:	mov    rcx,QWORD PTR [rsp+0x90]
   140007144:	xor    rcx,rsp
   140007147:	call   0x140007eb0
   14000714c:	mov    rbx,QWORD PTR [rsp+0xe0]
   140007154:	add    rsp,0xa0
   14000715b:	pop    r15
   14000715d:	pop    r14
   14000715f:	pop    r12
   140007161:	pop    rdi
   140007162:	pop    rsi
   140007163:	ret    
   140007164:	int3   
   140007165:	int3   
   140007166:	int3   
   140007167:	int3   
   140007168:	int3   
   140007169:	int3   
   14000716a:	int3   
   14000716b:	int3   
   14000716c:	int3   
   14000716d:	int3   
   14000716e:	int3   
   14000716f:	int3   
   140007170:	mov    rax,rsp
   140007173:	push   rdi
   140007174:	sub    rsp,0xa0
   14000717b:	mov    QWORD PTR [rax-0x78],0xfffffffffffffffe
   140007183:	mov    QWORD PTR [rax+0x10],rbx
   140007187:	mov    QWORD PTR [rax+0x18],rbp
   14000718b:	mov    QWORD PTR [rax+0x20],rsi
   14000718f:	mov    rax,QWORD PTR [rip+0x6e72]        # 0x14000e008
   140007196:	xor    rax,rsp
   140007199:	mov    QWORD PTR [rsp+0x90],rax
   1400071a1:	mov    rbp,rcx
   1400071a4:	cmp    QWORD PTR [rcx+0x78],0x0
   1400071a9:	je     0x1400071b4
   1400071ab:	lea    rax,[rcx+0x68]
   1400071af:	jmp    0x14000728f
   1400071b4:	xor    ebx,ebx
   1400071b6:	mov    QWORD PTR [rsp+0x28],rbx
   1400071bb:	and    QWORD PTR [rsp+0x20],rbx
   1400071c0:	mov    rsi,QWORD PTR [rcx+0xe8]
   1400071c7:	test   rsi,rsi
   1400071ca:	je     0x1400071d3
   1400071cc:	mov    QWORD PTR [rsp+0x20],rsi
   1400071d1:	jmp    0x140007221
   1400071d3:	add    rcx,0x88
   1400071da:	cmp    QWORD PTR [rcx+0x18],0x8
   1400071df:	jb     0x1400071e4
   1400071e1:	mov    rcx,QWORD PTR [rcx]
   1400071e4:	lea    rdx,[rsp+0x20]
   1400071e9:	call   QWORD PTR [rip+0x8e11]        # 0x140010000
   1400071ef:	mov    rcx,QWORD PTR [rsp+0xa8]
   1400071f7:	test   eax,eax
   1400071f9:	jns    0x140007210
   1400071fb:	mov    r9d,eax
   1400071fe:	lea    r8,[rip+0x393b]        # 0x14000ab40
   140007205:	mov    edx,0x146
   14000720a:	call   0x140002534
   14000720f:	int3   
   140007210:	mov    rsi,QWORD PTR [rsp+0x20]
   140007215:	test   rsi,rsi
   140007218:	cmovne rbx,rsi
   14000721c:	mov    QWORD PTR [rsp+0x28],rbx
   140007221:	mov    rax,QWORD PTR [rsi]
   140007224:	mov    rdi,QWORD PTR [rax+0x38]
   140007228:	mov    rcx,rdi
   14000722b:	call   QWORD PTR [rip+0x314f]        # 0x14000a380
   140007231:	mov    r8d,0x27
   140007237:	lea    rdx,[rsp+0x40]
   14000723c:	mov    rcx,rsi
   14000723f:	call   rdi
   140007241:	mov    rcx,QWORD PTR [rsp+0xa8]
   140007249:	test   eax,eax
   14000724b:	jns    0x140007262
   14000724d:	mov    r9d,eax
   140007250:	lea    r8,[rip+0x38e9]        # 0x14000ab40
   140007257:	mov    edx,0x14b
   14000725c:	call   0x140002534
   140007261:	int3   
   140007262:	lea    rdx,[rsp+0x40]
   140007267:	lea    rcx,[rbp+0x68]
   14000726b:	call   0x140003b20
   140007270:	nop
   140007271:	test   rbx,rbx
   140007274:	je     0x14000728b
   140007276:	mov    rcx,QWORD PTR [rbx]
   140007279:	mov    rdi,QWORD PTR [rcx+0x78]
   14000727d:	mov    rcx,rdi
   140007280:	call   QWORD PTR [rip+0x30fa]        # 0x14000a380
   140007286:	mov    rcx,rbx
   140007289:	call   rdi
   14000728b:	lea    rax,[rbp+0x68]
   14000728f:	mov    rcx,QWORD PTR [rsp+0x90]
   140007297:	xor    rcx,rsp
   14000729a:	call   0x140007eb0
   14000729f:	lea    r11,[rsp+0xa0]
   1400072a7:	mov    rbx,QWORD PTR [r11+0x18]
   1400072ab:	mov    rbp,QWORD PTR [r11+0x20]
   1400072af:	mov    rsi,QWORD PTR [r11+0x28]
   1400072b3:	mov    rsp,r11
   1400072b6:	pop    rdi
   1400072b7:	ret    
   1400072b8:	int3   
   1400072b9:	int3   
   1400072ba:	int3   
   1400072bb:	int3   
   1400072bc:	int3   
   1400072bd:	int3   
   1400072be:	int3   
   1400072bf:	int3   
   1400072c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400072c5:	push   rbp
   1400072c6:	push   rsi
   1400072c7:	push   rdi
   1400072c8:	sub    rsp,0x250
   1400072cf:	mov    rax,QWORD PTR [rip+0x6d32]        # 0x14000e008
   1400072d6:	xor    rax,rsp
   1400072d9:	mov    QWORD PTR [rsp+0x240],rax
   1400072e1:	mov    rsi,QWORD PTR [rcx+0xe8]
   1400072e8:	xor    ebp,ebp
   1400072ea:	mov    DWORD PTR [rsp+0x20],ebp
   1400072ee:	mov    rdi,rdx
   1400072f1:	test   rsi,rsi
   1400072f4:	je     0x14000736e
   1400072f6:	xor    edx,edx
   1400072f8:	lea    rcx,[rsp+0x30]
   1400072fd:	mov    r8d,0x208
   140007303:	call   0x140008722
   140007308:	mov    rax,QWORD PTR [rsi]
   14000730b:	mov    rbx,QWORD PTR [rax+0x20]
   14000730f:	mov    rcx,rbx
   140007312:	call   QWORD PTR [rip+0x3068]        # 0x14000a380
   140007318:	mov    r8d,0x104
   14000731e:	lea    rdx,[rsp+0x30]
   140007323:	mov    rcx,rsi
   140007326:	call   rbx
   140007328:	test   eax,eax
   14000732a:	js     0x14000738e
   14000732c:	mov    QWORD PTR [rdi+0x18],0x7
   140007334:	lea    rdx,[rsp+0x30]
   140007339:	mov    QWORD PTR [rdi+0x10],rbp
   14000733d:	mov    rcx,rdi
   140007340:	mov    WORD PTR [rdi],bp
   140007343:	call   0x140003b20
   140007348:	mov    rax,rdi
   14000734b:	mov    rcx,QWORD PTR [rsp+0x240]
   140007353:	xor    rcx,rsp
   140007356:	call   0x140007eb0
   14000735b:	mov    rbx,QWORD PTR [rsp+0x280]
   140007363:	add    rsp,0x250
   14000736a:	pop    rdi
   14000736b:	pop    rsi
   14000736c:	pop    rbp
   14000736d:	ret    
   14000736e:	mov    rcx,QWORD PTR [rsp+0x268]
   140007376:	lea    r8,[rip+0x37c3]        # 0x14000ab40
   14000737d:	mov    r9d,0x80070015
   140007383:	mov    edx,0x152
   140007388:	call   0x140002534
   14000738d:	int3   
   14000738e:	mov    rcx,QWORD PTR [rsp+0x268]
   140007396:	lea    r8,[rip+0x37a3]        # 0x14000ab40
   14000739d:	mov    r9d,eax
   1400073a0:	mov    edx,0x154
   1400073a5:	call   0x140002534
   1400073aa:	int3   
   1400073ab:	int3   
   1400073ac:	int3   
   1400073ad:	int3   
   1400073ae:	int3   
   1400073af:	int3   
   1400073b0:	int3   
   1400073b1:	int3   
   1400073b2:	int3   
   1400073b3:	int3   
   1400073b4:	int3   
   1400073b5:	int3   
   1400073b6:	int3   
   1400073b7:	int3   
   1400073b8:	int3   
   1400073b9:	int3   
   1400073ba:	int3   
   1400073bb:	int3   
   1400073bc:	int3   
   1400073bd:	int3   
   1400073be:	int3   
   1400073bf:	int3   
   1400073c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400073c5:	push   rbp
   1400073c6:	push   rsi
   1400073c7:	push   rdi
   1400073c8:	sub    rsp,0x250
   1400073cf:	mov    rax,QWORD PTR [rip+0x6c32]        # 0x14000e008
   1400073d6:	xor    rax,rsp
   1400073d9:	mov    QWORD PTR [rsp+0x240],rax
   1400073e1:	mov    rsi,QWORD PTR [rcx+0xe8]
   1400073e8:	xor    ebp,ebp
   1400073ea:	mov    DWORD PTR [rsp+0x20],ebp
   1400073ee:	mov    rdi,rdx
   1400073f1:	test   rsi,rsi
   1400073f4:	je     0x14000746e
   1400073f6:	xor    edx,edx
   1400073f8:	lea    rcx,[rsp+0x30]
   1400073fd:	mov    r8d,0x208
   140007403:	call   0x140008722
   140007408:	mov    rax,QWORD PTR [rsi]
   14000740b:	mov    rbx,QWORD PTR [rax+0x18]
   14000740f:	mov    rcx,rbx
   140007412:	call   QWORD PTR [rip+0x2f68]        # 0x14000a380
   140007418:	mov    r8d,0x104
   14000741e:	lea    rdx,[rsp+0x30]
   140007423:	mov    rcx,rsi
   140007426:	call   rbx
   140007428:	test   eax,eax
   14000742a:	js     0x14000748e
   14000742c:	mov    QWORD PTR [rdi+0x18],0x7
   140007434:	lea    rdx,[rsp+0x30]
   140007439:	mov    QWORD PTR [rdi+0x10],rbp
   14000743d:	mov    rcx,rdi
   140007440:	mov    WORD PTR [rdi],bp
   140007443:	call   0x140003b20
   140007448:	mov    rax,rdi
   14000744b:	mov    rcx,QWORD PTR [rsp+0x240]
   140007453:	xor    rcx,rsp
   140007456:	call   0x140007eb0
   14000745b:	mov    rbx,QWORD PTR [rsp+0x280]
   140007463:	add    rsp,0x250
   14000746a:	pop    rdi
   14000746b:	pop    rsi
   14000746c:	pop    rbp
   14000746d:	ret    
   14000746e:	mov    rcx,QWORD PTR [rsp+0x268]
   140007476:	lea    r8,[rip+0x36c3]        # 0x14000ab40
   14000747d:	mov    r9d,0x80070015
   140007483:	mov    edx,0x15a
   140007488:	call   0x140002534
   14000748d:	int3   
   14000748e:	mov    rcx,QWORD PTR [rsp+0x268]
   140007496:	lea    r8,[rip+0x36a3]        # 0x14000ab40
   14000749d:	mov    r9d,eax
   1400074a0:	mov    edx,0x15c
   1400074a5:	call   0x140002534
   1400074aa:	int3   
   1400074ab:	int3   
   1400074ac:	int3   
   1400074ad:	int3   
   1400074ae:	int3   
   1400074af:	int3   
   1400074b0:	int3   
   1400074b1:	int3   
   1400074b2:	int3   
   1400074b3:	int3   
   1400074b4:	rex push rbx
   1400074b6:	sub    rsp,0x30
   1400074ba:	xor    eax,eax
   1400074bc:	mov    QWORD PTR [rdx+0x18],0x7
   1400074c4:	mov    QWORD PTR [rdx+0x10],rax
   1400074c8:	mov    rbx,rdx
   1400074cb:	mov    WORD PTR [rdx],ax
   1400074ce:	or     r9,0xffffffffffffffff
   1400074d2:	lea    rdx,[rcx+0xc8]
   1400074d9:	mov    DWORD PTR [rsp+0x20],eax
   1400074dd:	mov    rcx,rbx
   1400074e0:	xor    r8d,r8d
   1400074e3:	call   0x140003f2c
   1400074e8:	mov    rax,rbx
   1400074eb:	add    rsp,0x30
   1400074ef:	pop    rbx
   1400074f0:	ret    
   1400074f1:	int3   
   1400074f2:	int3   
   1400074f3:	int3   
   1400074f4:	int3   
   1400074f5:	int3   
   1400074f6:	int3   
   1400074f7:	int3   
   1400074f8:	int3   
   1400074f9:	int3   
   1400074fa:	int3   
   1400074fb:	int3   
   1400074fc:	int3   
   1400074fd:	int3   
   1400074fe:	int3   
   1400074ff:	int3   
   140007500:	mov    QWORD PTR [rsp+0x10],rbx
   140007505:	push   rdi
   140007506:	sub    rsp,0x20
   14000750a:	mov    rdi,QWORD PTR [rcx+0xe8]
   140007511:	test   rdi,rdi
   140007514:	je     0x140007543
   140007516:	mov    rax,QWORD PTR [rdi]
   140007519:	mov    rbx,QWORD PTR [rax+0x28]
   14000751d:	mov    rcx,rbx
   140007520:	call   QWORD PTR [rip+0x2e5a]        # 0x14000a380
   140007526:	lea    rdx,[rsp+0x30]
   14000752b:	mov    rcx,rdi
   14000752e:	call   rbx
   140007530:	test   eax,eax
   140007532:	js     0x140007560
   140007534:	mov    eax,DWORD PTR [rsp+0x30]
   140007538:	mov    rbx,QWORD PTR [rsp+0x38]
   14000753d:	add    rsp,0x20
   140007541:	pop    rdi
   140007542:	ret    
   140007543:	mov    rcx,QWORD PTR [rsp+0x28]
   140007548:	lea    r8,[rip+0x35f1]        # 0x14000ab40
   14000754f:	mov    r9d,0x80070015
   140007555:	mov    edx,0x176
   14000755a:	call   0x140002534
   14000755f:	int3   
   140007560:	mov    rcx,QWORD PTR [rsp+0x28]
   140007565:	lea    r8,[rip+0x35d4]        # 0x14000ab40
   14000756c:	mov    r9d,eax
   14000756f:	mov    edx,0x179
   140007574:	call   0x140002534
   140007579:	int3   
   14000757a:	int3   
   14000757b:	int3   
   14000757c:	int3   
   14000757d:	int3   
   14000757e:	int3   
   14000757f:	int3   
   140007580:	mov    rax,rsp
   140007583:	push   rbp
   140007584:	push   rsi
   140007585:	push   rdi
   140007586:	push   r12
   140007588:	push   r13
   14000758a:	push   r14
   14000758c:	push   r15
   14000758e:	lea    rbp,[rax-0x5f]
   140007592:	sub    rsp,0xe0
   140007599:	mov    QWORD PTR [rbp-0x69],0xfffffffffffffffe
   1400075a1:	mov    QWORD PTR [rax+0x20],rbx
   1400075a5:	mov    rax,QWORD PTR [rip+0x6a5c]        # 0x14000e008
   1400075ac:	xor    rax,rsp
   1400075af:	mov    QWORD PTR [rbp+0x17],rax
   1400075b3:	mov    rbx,r8
   1400075b6:	mov    rdi,rdx
   1400075b9:	mov    rsi,rcx
   1400075bc:	xor    r15d,r15d
   1400075bf:	mov    DWORD PTR [rsp+0x34],r15d
   1400075c4:	xorps  xmm0,xmm0
   1400075c7:	movdqu XMMWORD PTR [rsp+0x38],xmm0
   1400075cd:	mov    r14d,r15d
   1400075d0:	mov    QWORD PTR [rbp-0x71],r15
   1400075d4:	mov    rdx,QWORD PTR [r8+0x10]
   1400075d8:	add    rdx,0x10a
   1400075df:	je     0x140007604
   1400075e1:	movabs rax,0x7fffffffffffffff
   1400075eb:	cmp    rdx,rax
   1400075ee:	jbe    0x1400075f6
   1400075f0:	call   0x140003d88
   1400075f5:	int3   
   1400075f6:	lea    rcx,[rsp+0x38]
   1400075fb:	call   0x140003ccc
   140007600:	mov    r14,QWORD PTR [rbp-0x71]
   140007604:	mov    rcx,rsi
   140007607:	call   0x140007170
   14000760c:	mov    r12d,0x7
   140007612:	mov    QWORD PTR [rbp-0x49],r12
   140007616:	mov    QWORD PTR [rbp-0x51],r15
   14000761a:	mov    WORD PTR [rbp-0x61],r15w
   14000761f:	or     r13,0xffffffffffffffff
   140007623:	mov    r9,r13
   140007626:	xor    r8d,r8d
   140007629:	mov    rdx,rax
   14000762c:	lea    rcx,[rbp-0x61]
   140007630:	call   0x140003f2c
   140007635:	nop
   140007636:	lea    r9,[rbp-0x61]
   14000763a:	cmp    QWORD PTR [rbp-0x49],0x8
   14000763f:	cmovae r9,QWORD PTR [rbp-0x61]
   140007644:	cmp    QWORD PTR [rbx+0x18],0x8
   140007649:	jb     0x140007650
   14000764b:	mov    r8,QWORD PTR [rbx]
   14000764e:	jmp    0x140007653
   140007650:	mov    r8,rbx
   140007653:	mov    rsi,QWORD PTR [rsp+0x38]
   140007658:	sub    r14,rsi
   14000765b:	sar    r14,1
   14000765e:	mov    DWORD PTR [rsp+0x20],0x1
   140007666:	mov    rdx,r14
   140007669:	mov    rcx,rsi
   14000766c:	call   QWORD PTR [rip+0x2a96]        # 0x14000a108
   140007672:	mov    DWORD PTR [rsp+0x30],eax
   140007676:	test   eax,eax
   140007678:	jns    0x140007760
   14000767e:	cmp    DWORD PTR [rip+0x69ab],0x2        # 0x14000e030
   140007685:	jbe    0x140007740
   14000768b:	cmp    QWORD PTR [rbx+0x18],0x8
   140007690:	jb     0x140007695
   140007692:	mov    rbx,QWORD PTR [rbx]
   140007695:	lea    rdx,[rip+0x2ea4]        # 0x14000a540
   14000769c:	mov    rcx,rdx
   14000769f:	mov    rax,r15
   1400076a2:	test   rbx,rbx
   1400076a5:	je     0x1400076b7
   1400076a7:	mov    rcx,rbx
   1400076aa:	mov    rax,r13
   1400076ad:	inc    rax
   1400076b0:	cmp    WORD PTR [rbx+rax*2],r15w
   1400076b5:	jne    0x1400076ad
   1400076b7:	mov    QWORD PTR [rbp-0x19],rcx
   1400076bb:	lea    eax,[rax*2+0x2]
   1400076c2:	mov    DWORD PTR [rbp-0x11],eax
   1400076c5:	mov    DWORD PTR [rbp-0xd],r15d
   1400076c9:	lea    rcx,[rbp-0x61]
   1400076cd:	cmp    QWORD PTR [rbp-0x49],0x8
   1400076d2:	cmovae rcx,QWORD PTR [rbp-0x61]
   1400076d7:	mov    rax,r15
   1400076da:	test   rcx,rcx
   1400076dd:	je     0x1400076ef
   1400076df:	mov    rdx,rcx
   1400076e2:	mov    rax,r13
   1400076e5:	inc    rax
   1400076e8:	cmp    WORD PTR [rcx+rax*2],r15w
   1400076ed:	jne    0x1400076e5
   1400076ef:	mov    QWORD PTR [rbp-0x9],rdx
   1400076f3:	lea    eax,[rax*2+0x2]
   1400076fa:	mov    DWORD PTR [rbp-0x1],eax
   1400076fd:	mov    DWORD PTR [rbp+0x3],r15d
   140007701:	lea    rax,[rsp+0x30]
   140007706:	mov    QWORD PTR [rbp+0x7],rax
   14000770a:	mov    QWORD PTR [rbp+0xf],0x4
   140007712:	lea    rax,[rbp-0x39]
   140007716:	mov    QWORD PTR [rsp+0x28],rax
   14000771b:	mov    DWORD PTR [rsp+0x20],0x5
   140007723:	xor    r9d,r9d
   140007726:	xor    r8d,r8d
   140007729:	lea    rdx,[rip+0x3d36]        # 0x14000b466
   140007730:	lea    rcx,[rip+0x68f9]        # 0x14000e030
   140007737:	call   0x140001008
   14000773c:	mov    eax,DWORD PTR [rsp+0x30]
   140007740:	mov    ecx,eax
   140007742:	call   0x1400043f8
   140007747:	mov    r9d,eax
   14000774a:	mov    rcx,QWORD PTR [rbp+0x5f]
   14000774e:	lea    r8,[rip+0x33eb]        # 0x14000ab40
   140007755:	mov    edx,0x191
   14000775a:	call   0x140002534
   14000775f:	int3   
   140007760:	mov    QWORD PTR [rdi+0x18],r12
   140007764:	mov    QWORD PTR [rdi+0x10],r15
   140007768:	mov    WORD PTR [rdi],r15w
   14000776c:	mov    rdx,rsi
   14000776f:	mov    rcx,rdi
   140007772:	call   0x140003b20
   140007777:	nop
   140007778:	cmp    QWORD PTR [rbp-0x49],0x8
   14000777d:	jb     0x140007789
   14000777f:	mov    rcx,QWORD PTR [rbp-0x61]
   140007783:	call   QWORD PTR [rip+0x2b87]        # 0x14000a310
   140007789:	mov    QWORD PTR [rbp-0x49],r12
   14000778d:	mov    QWORD PTR [rbp-0x51],r15
   140007791:	mov    WORD PTR [rbp-0x61],r15w
   140007796:	test   rsi,rsi
   140007799:	je     0x1400077a4
   14000779b:	mov    rcx,rsi
   14000779e:	call   QWORD PTR [rip+0x2b6c]        # 0x14000a310
   1400077a4:	mov    rax,rdi
   1400077a7:	mov    rcx,QWORD PTR [rbp+0x17]
   1400077ab:	xor    rcx,rsp
   1400077ae:	call   0x140007eb0
   1400077b3:	mov    rbx,QWORD PTR [rsp+0x138]
   1400077bb:	add    rsp,0xe0
   1400077c2:	pop    r15
   1400077c4:	pop    r14
   1400077c6:	pop    r13
   1400077c8:	pop    r12
   1400077ca:	pop    rdi
   1400077cb:	pop    rsi
   1400077cc:	pop    rbp
   1400077cd:	ret    
   1400077ce:	int3   
   1400077cf:	int3   
   1400077d0:	int3   
   1400077d1:	int3   
   1400077d2:	int3   
   1400077d3:	int3   
   1400077d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400077d9:	mov    QWORD PTR [rsp+0x10],rsi
   1400077de:	push   rdi
   1400077df:	sub    rsp,0x20
   1400077e3:	mov    rdi,rdx
   1400077e6:	mov    rbx,rcx
   1400077e9:	cmp    rcx,rdx
   1400077ec:	je     0x140007859
   1400077ee:	cmp    QWORD PTR [rcx+0x18],0x8
   1400077f3:	jb     0x1400077fe
   1400077f5:	mov    rcx,QWORD PTR [rcx]
   1400077f8:	call   QWORD PTR [rip+0x2b12]        # 0x14000a310
   1400077fe:	xor    esi,esi
   140007800:	mov    QWORD PTR [rbx+0x18],0x7
   140007808:	mov    QWORD PTR [rbx+0x10],rsi
   14000780c:	mov    WORD PTR [rbx],si
   14000780f:	cmp    QWORD PTR [rdi+0x18],0x8
   140007814:	jae    0x140007831
   140007816:	mov    r8,QWORD PTR [rdi+0x10]
   14000781a:	add    r8,0x1
   14000781e:	je     0x14000783a
   140007820:	add    r8,r8
   140007823:	mov    rdx,rdi
   140007826:	mov    rcx,rbx
   140007829:	call   QWORD PTR [rip+0x2b21]        # 0x14000a350
   14000782f:	jmp    0x14000783a
   140007831:	mov    rax,QWORD PTR [rdi]
   140007834:	mov    QWORD PTR [rbx],rax
   140007837:	mov    QWORD PTR [rdi],rsi
   14000783a:	mov    rax,QWORD PTR [rdi+0x10]
   14000783e:	mov    QWORD PTR [rbx+0x10],rax
   140007842:	mov    rax,QWORD PTR [rdi+0x18]
   140007846:	mov    QWORD PTR [rbx+0x18],rax
   14000784a:	mov    QWORD PTR [rdi+0x18],0x7
   140007852:	mov    QWORD PTR [rdi+0x10],rsi
   140007856:	mov    WORD PTR [rdi],si
   140007859:	mov    rsi,QWORD PTR [rsp+0x38]
   14000785e:	mov    rax,rbx
   140007861:	mov    rbx,QWORD PTR [rsp+0x30]
   140007866:	add    rsp,0x20
   14000786a:	pop    rdi
   14000786b:	ret    
   14000786c:	int3   
   14000786d:	int3   
   14000786e:	int3   
   14000786f:	int3   
   140007870:	int3   
   140007871:	int3   
   140007872:	int3   
   140007873:	int3   
   140007874:	mov    QWORD PTR [rsp+0x8],rbx
   140007879:	push   rdi
   14000787a:	sub    rsp,0x20
   14000787e:	mov    rdi,QWORD PTR [rcx]
   140007881:	test   rdi,rdi
   140007884:	je     0x14000789b
   140007886:	mov    rax,QWORD PTR [rdi]
   140007889:	mov    rbx,QWORD PTR [rax+0x78]
   14000788d:	mov    rcx,rbx
   140007890:	call   QWORD PTR [rip+0x2aea]        # 0x14000a380
   140007896:	mov    rcx,rdi
   140007899:	call   rbx
   14000789b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400078a0:	add    rsp,0x20
   1400078a4:	pop    rdi
   1400078a5:	ret    
   1400078a6:	int3   
   1400078a7:	int3   
   1400078a8:	int3   
   1400078a9:	int3   
   1400078aa:	int3   
   1400078ab:	int3   
   1400078ac:	mov    QWORD PTR [rsp+0x8],rbx
   1400078b1:	mov    QWORD PTR [rsp+0x10],rsi
   1400078b6:	push   rdi
   1400078b7:	sub    rsp,0x20
   1400078bb:	mov    rax,QWORD PTR [rcx]
   1400078be:	mov    rbx,rcx
   1400078c1:	mov    rsi,QWORD PTR [rax+0x8]
   1400078c5:	mov    rdi,rsi
   1400078c8:	cmp    BYTE PTR [rsi+0x19],0x0
   1400078cc:	jne    0x1400078ef
   1400078ce:	mov    rdx,QWORD PTR [rdi+0x10]
   1400078d2:	mov    rcx,rbx
   1400078d5:	call   0x140007998
   1400078da:	mov    rdi,QWORD PTR [rdi]
   1400078dd:	mov    rcx,rsi
   1400078e0:	call   QWORD PTR [rip+0x2a2a]        # 0x14000a310
   1400078e6:	cmp    BYTE PTR [rdi+0x19],0x0
   1400078ea:	mov    rsi,rdi
   1400078ed:	je     0x1400078ce
   1400078ef:	mov    rax,QWORD PTR [rbx]
   1400078f2:	mov    QWORD PTR [rax+0x8],rax
   1400078f6:	mov    rax,QWORD PTR [rbx]
   1400078f9:	mov    QWORD PTR [rax],rax
   1400078fc:	mov    rax,QWORD PTR [rbx]
   1400078ff:	mov    QWORD PTR [rax+0x10],rax
   140007903:	and    QWORD PTR [rbx+0x8],0x0
   140007908:	mov    rcx,QWORD PTR [rbx]
   14000790b:	mov    rbx,QWORD PTR [rsp+0x30]
   140007910:	mov    rsi,QWORD PTR [rsp+0x38]
   140007915:	add    rsp,0x20
   140007919:	pop    rdi
   14000791a:	rex.W jmp QWORD PTR [rip+0x29ef]        # 0x14000a310
   140007921:	int3   
   140007922:	int3   
   140007923:	int3   
   140007924:	int3   
   140007925:	int3   
   140007926:	int3   
   140007927:	int3   
   140007928:	mov    QWORD PTR [rsp+0x8],rbx
   14000792d:	push   rdi
   14000792e:	sub    rsp,0x20
   140007932:	mov    rdi,QWORD PTR [rcx]
   140007935:	test   rdi,rdi
   140007938:	je     0x14000794f
   14000793a:	mov    rax,QWORD PTR [rdi]
   14000793d:	mov    rbx,QWORD PTR [rax+0x8]
   140007941:	mov    rcx,rbx
   140007944:	call   QWORD PTR [rip+0x2a36]        # 0x14000a380
   14000794a:	mov    rcx,rdi
   14000794d:	call   rbx
   14000794f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007954:	add    rsp,0x20
   140007958:	pop    rdi
   140007959:	ret    
   14000795a:	int3   
   14000795b:	int3   
   14000795c:	int3   
   14000795d:	int3   
   14000795e:	int3   
   14000795f:	int3   
   140007960:	mov    QWORD PTR [rsp+0x8],rbx
   140007965:	push   rdi
   140007966:	sub    rsp,0x20
   14000796a:	mov    rdi,QWORD PTR [rcx]
   14000796d:	test   rdi,rdi
   140007970:	je     0x140007987
   140007972:	mov    rax,QWORD PTR [rdi]
   140007975:	mov    rbx,QWORD PTR [rax+0x50]
   140007979:	mov    rcx,rbx
   14000797c:	call   QWORD PTR [rip+0x29fe]        # 0x14000a380
   140007982:	mov    rcx,rdi
   140007985:	call   rbx
   140007987:	mov    rbx,QWORD PTR [rsp+0x30]
   14000798c:	add    rsp,0x20
   140007990:	pop    rdi
   140007991:	ret    
   140007992:	int3   
   140007993:	int3   
   140007994:	int3   
   140007995:	int3   
   140007996:	int3   
   140007997:	int3   
   140007998:	mov    QWORD PTR [rsp+0x8],rbx
   14000799d:	mov    QWORD PTR [rsp+0x10],rsi
   1400079a2:	push   rdi
   1400079a3:	sub    rsp,0x20
   1400079a7:	cmp    BYTE PTR [rdx+0x19],0x0
   1400079ab:	mov    rdi,rdx
   1400079ae:	mov    rsi,rcx
   1400079b1:	mov    rbx,rdx
   1400079b4:	jne    0x1400079d7
   1400079b6:	mov    rdx,QWORD PTR [rbx+0x10]
   1400079ba:	mov    rcx,rsi
   1400079bd:	call   0x140007998
   1400079c2:	mov    rbx,QWORD PTR [rbx]
   1400079c5:	mov    rcx,rdi
   1400079c8:	call   QWORD PTR [rip+0x2942]        # 0x14000a310
   1400079ce:	cmp    BYTE PTR [rbx+0x19],0x0
   1400079d2:	mov    rdi,rbx
   1400079d5:	je     0x1400079b6
   1400079d7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079dc:	mov    rsi,QWORD PTR [rsp+0x38]
   1400079e1:	add    rsp,0x20
   1400079e5:	pop    rdi
   1400079e6:	ret    
   1400079e7:	int3   
   1400079e8:	int3   
   1400079e9:	int3   
   1400079ea:	int3   
   1400079eb:	int3   
   1400079ec:	int3   
   1400079ed:	int3   
   1400079ee:	int3   
   1400079ef:	int3   
   1400079f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400079f5:	sub    rsp,0x38
   1400079f9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007a02:	mov    ecx,0x20
   140007a07:	call   0x140007a8c
   140007a0c:	mov    QWORD PTR [rsp+0x40],rax
   140007a11:	test   rax,rax
   140007a14:	jne    0x140007a1d
   140007a16:	call   QWORD PTR [rip+0x2834]        # 0x14000a250
   140007a1c:	nop
   140007a1d:	mov    QWORD PTR [rax],rax
   140007a20:	lea    rcx,[rax+0x8]
   140007a24:	test   rcx,rcx
   140007a27:	je     0x140007a2c
   140007a29:	mov    QWORD PTR [rcx],rax
   140007a2c:	lea    rcx,[rax+0x10]
   140007a30:	test   rcx,rcx
   140007a33:	je     0x140007a38
   140007a35:	mov    QWORD PTR [rcx],rax
   140007a38:	mov    WORD PTR [rax+0x18],0x101
   140007a3e:	add    rsp,0x38
   140007a42:	ret    
   140007a43:	int3   
   140007a44:	int3   
   140007a45:	int3   
   140007a46:	int3   
   140007a47:	int3   
   140007a48:	int3   
   140007a49:	int3   
   140007a4a:	int3   
   140007a4b:	int3   
   140007a4c:	int3   
   140007a4d:	int3   
   140007a4e:	int3   
   140007a4f:	int3   
   140007a50:	sub    rsp,0x38
   140007a54:	mov    eax,DWORD PTR [rip+0x310e]        # 0x14000ab68
   140007a5a:	mov    r9,QWORD PTR [rip+0x25d7]        # 0x14000a038
   140007a61:	mov    r8,QWORD PTR [rip+0x30f8]        # 0x14000ab60
   140007a68:	mov    DWORD PTR [rsp+0x28],eax
   140007a6c:	mov    QWORD PTR [rsp+0x20],rdx
   140007a71:	mov    rdx,rcx
   140007a74:	lea    rcx,[rip+0xffffffffffff8585]        # 0x140000000
   140007a7b:	call   QWORD PTR [rip+0x25af]        # 0x14000a030
   140007a81:	add    rsp,0x38
   140007a85:	ret    
   140007a86:	int3   
   140007a87:	int3   
   140007a88:	int3   
   140007a89:	int3   
   140007a8a:	int3   
   140007a8b:	int3   
   140007a8c:	rex push rbx
   140007a8e:	sub    rsp,0x20
   140007a92:	mov    rbx,rcx
   140007a95:	jmp    0x140007aa6
   140007a97:	mov    rcx,rbx
   140007a9a:	call   0x1400081c6
   140007a9f:	test   eax,eax
   140007aa1:	je     0x140007ab6
   140007aa3:	mov    rcx,rbx
   140007aa6:	call   0x140007ed4
   140007aab:	test   rax,rax
   140007aae:	je     0x140007a97
   140007ab0:	add    rsp,0x20
   140007ab4:	pop    rbx
   140007ab5:	ret    
   140007ab6:	call   QWORD PTR [rip+0x2794]        # 0x14000a250
   140007abc:	int3   
   140007abd:	int3   
   140007abe:	int3   
   140007abf:	int3   
   140007ac0:	int3   
   140007ac1:	int3   
   140007ac2:	int3   
   140007ac3:	int3   
   140007ac4:	int3   
   140007ac5:	int3   
   140007ac6:	int3   
   140007ac7:	int3   
   140007ac8:	int3   
   140007ac9:	int3   
   140007aca:	int3   
   140007acb:	int3   
   140007acc:	int3   
   140007acd:	int3   
   140007ace:	int3   
   140007acf:	int3   
   140007ad0:	sub    rsp,0x28
   140007ad4:	mov    eax,0x5a4d
   140007ad9:	cmp    WORD PTR [rip+0xffffffffffff8520],ax        # 0x140000000
   140007ae0:	je     0x140007ae6
   140007ae2:	xor    eax,eax
   140007ae4:	jmp    0x140007b35
   140007ae6:	movsxd rcx,DWORD PTR [rip+0xffffffffffff854f]        # 0x14000003c
   140007aed:	lea    rax,[rip+0xffffffffffff850c]        # 0x140000000
   140007af4:	add    rcx,rax
   140007af7:	cmp    DWORD PTR [rcx],0x4550
   140007afd:	jne    0x140007ae2
   140007aff:	movzx  eax,WORD PTR [rcx+0x18]
   140007b03:	cmp    eax,0x10b
   140007b08:	je     0x140007b24
   140007b0a:	cmp    eax,0x20b
   140007b0f:	jne    0x140007ae2
   140007b11:	xor    eax,eax
   140007b13:	cmp    DWORD PTR [rcx+0x84],0xe
   140007b1a:	jbe    0x140007b35
   140007b1c:	cmp    DWORD PTR [rcx+0xf8],eax
   140007b22:	jmp    0x140007b32
   140007b24:	xor    eax,eax
   140007b26:	cmp    DWORD PTR [rcx+0x74],0xe
   140007b2a:	jbe    0x140007b35
   140007b2c:	cmp    DWORD PTR [rcx+0xe8],eax
   140007b32:	setne  al
   140007b35:	mov    ecx,0x2
   140007b3a:	mov    DWORD PTR [rip+0x65d8],eax        # 0x14000e118
   140007b40:	call   0x1400082a8
   140007b45:	mov    ecx,eax
   140007b47:	call   QWORD PTR [rip+0x2793]        # 0x14000a2e0
   140007b4d:	mov    rcx,QWORD PTR [rip+0x274c]        # 0x14000a2a0
   140007b54:	or     rax,0xffffffffffffffff
   140007b58:	mov    QWORD PTR [rip+0x6d01],rax        # 0x14000e860
   140007b5f:	mov    QWORD PTR [rip+0x6d02],rax        # 0x14000e868
   140007b66:	mov    eax,DWORD PTR [rip+0x6b30]        # 0x14000e69c
   140007b6c:	mov    DWORD PTR [rcx],eax
   140007b6e:	mov    rcx,QWORD PTR [rip+0x2723]        # 0x14000a298
   140007b75:	mov    eax,DWORD PTR [rip+0x6b15]        # 0x14000e690
   140007b7b:	mov    DWORD PTR [rcx],eax
   140007b7d:	call   0x1400084c0
   140007b82:	cmp    DWORD PTR [rip+0x6477],0x0        # 0x14000e000
   140007b89:	jne    0x140007b98
   140007b8b:	lea    rcx,[rip+0x92e]        # 0x1400084c0
   140007b92:	call   QWORD PTR [rip+0x2728]        # 0x14000a2c0
   140007b98:	xor    eax,eax
   140007b9a:	add    rsp,0x28
   140007b9e:	ret    
   140007b9f:	int3   
   140007ba0:	int3   
   140007ba1:	int3   
   140007ba2:	int3   
   140007ba3:	int3   
   140007ba4:	int3   
   140007ba5:	int3   
   140007ba6:	int3   
   140007ba7:	int3   
   140007ba8:	int3   
   140007ba9:	int3   
   140007baa:	int3   
   140007bab:	int3   
   140007bac:	int3   
   140007bad:	int3   
   140007bae:	int3   
   140007baf:	int3   
   140007bb0:	sub    rsp,0x38
   140007bb4:	mov    eax,DWORD PTR [rip+0x6ade]        # 0x14000e698
   140007bba:	lea    r8,[rip+0x654f]        # 0x14000e110
   140007bc1:	mov    r9d,DWORD PTR [rip+0x6acc]        # 0x14000e694
   140007bc8:	lea    rdx,[rip+0x6539]        # 0x14000e108
   140007bcf:	mov    DWORD PTR [rip+0x6547],eax        # 0x14000e11c
   140007bd5:	lea    rcx,[rip+0x6524]        # 0x14000e100
   140007bdc:	lea    rax,[rip+0x6539]        # 0x14000e11c
   140007be3:	mov    QWORD PTR [rsp+0x20],rax
   140007be8:	call   QWORD PTR [rip+0x26fa]        # 0x14000a2e8
   140007bee:	mov    DWORD PTR [rip+0x6510],eax        # 0x14000e104
   140007bf4:	add    rsp,0x38
   140007bf8:	ret    
   140007bf9:	int3   
   140007bfa:	int3   
   140007bfb:	int3   
   140007bfc:	int3   
   140007bfd:	int3   
   140007bfe:	int3   
   140007bff:	int3   
   140007c00:	mov    QWORD PTR [rsp+0x8],rbx
   140007c05:	mov    QWORD PTR [rsp+0x10],rsi
   140007c0a:	mov    QWORD PTR [rsp+0x18],rdi
   140007c0f:	push   r12
   140007c11:	push   r14
   140007c13:	push   r15
   140007c15:	sub    rsp,0xb0
   140007c1c:	xor    r15d,r15d
   140007c1f:	mov    DWORD PTR [rsp+0x20],r15d
   140007c24:	lea    rcx,[rsp+0x40]
   140007c29:	call   QWORD PTR [rip+0x2509]        # 0x14000a138
   140007c2f:	nop
   140007c30:	mov    rax,QWORD PTR gs:0x30
   140007c39:	mov    rbx,QWORD PTR [rax+0x8]
   140007c3d:	mov    r14d,r15d
   140007c40:	xor    eax,eax
   140007c42:	lock cmpxchg QWORD PTR [rip+0x6c05],rbx        # 0x14000e850
   140007c4b:	je     0x140007c69
   140007c4d:	cmp    rax,rbx
   140007c50:	jne    0x140007c5c
   140007c52:	mov    edi,0x1
   140007c57:	mov    r14d,edi
   140007c5a:	jmp    0x140007c6e
   140007c5c:	mov    ecx,0x3e8
   140007c61:	call   QWORD PTR [rip+0x2559]        # 0x14000a1c0
   140007c67:	jmp    0x140007c40
   140007c69:	mov    edi,0x1
   140007c6e:	mov    eax,DWORD PTR [rip+0x6be4]        # 0x14000e858
   140007c74:	cmp    eax,edi
   140007c76:	jne    0x140007c86
   140007c78:	mov    esi,0x1f
   140007c7d:	mov    ecx,esi
   140007c7f:	call   0x1400082f4
   140007c84:	jmp    0x140007cf7
   140007c86:	mov    eax,DWORD PTR [rip+0x6bcc]        # 0x14000e858
   140007c8c:	test   eax,eax
   140007c8e:	jne    0x140007cec
   140007c90:	mov    DWORD PTR [rip+0x6bc2],edi        # 0x14000e858
   140007c96:	lea    r12,[rip+0x274b]        # 0x14000a3e8
   140007c9d:	lea    rbx,[rip+0x272c]        # 0x14000a3d0
   140007ca4:	mov    QWORD PTR [rsp+0x30],rbx
   140007ca9:	mov    eax,r15d
   140007cac:	mov    DWORD PTR [rsp+0x24],eax
   140007cb0:	cmp    rbx,r12
   140007cb3:	jae    0x140007cde
   140007cb5:	test   eax,eax
   140007cb7:	jne    0x140007ce2
   140007cb9:	mov    rsi,QWORD PTR [rbx]
   140007cbc:	test   rsi,rsi
   140007cbf:	je     0x140007cd3
   140007cc1:	mov    rcx,rsi
   140007cc4:	mov    rax,QWORD PTR [rip+0x26b5]        # 0x14000a380
   140007ccb:	call   rax
   140007ccd:	call   rsi
   140007ccf:	mov    DWORD PTR [rsp+0x24],eax
   140007cd3:	add    rbx,0x8
   140007cd7:	mov    QWORD PTR [rsp+0x30],rbx
   140007cdc:	jmp    0x140007cb0
   140007cde:	test   eax,eax
   140007ce0:	je     0x140007cf2
   140007ce2:	mov    eax,0xff
   140007ce7:	jmp    0x140007e53
   140007cec:	mov    DWORD PTR [rip+0x6406],edi        # 0x14000e0f8
   140007cf2:	mov    esi,0x1f
   140007cf7:	mov    eax,DWORD PTR [rip+0x6b5b]        # 0x14000e858
   140007cfd:	cmp    eax,edi
   140007cff:	jne    0x140007d1e
   140007d01:	lea    rdx,[rip+0x26c0]        # 0x14000a3c8
   140007d08:	lea    rcx,[rip+0x2681]        # 0x14000a390
   140007d0f:	call   0x1400084ca
   140007d14:	mov    DWORD PTR [rip+0x6b3a],0x2        # 0x14000e858
   140007d1e:	test   r14d,r14d
   140007d21:	jne    0x140007d2d
   140007d23:	mov    rax,r15
   140007d26:	xchg   QWORD PTR [rip+0x6b23],rax        # 0x14000e850
   140007d2d:	cmp    QWORD PTR [rip+0x6b3c],r15        # 0x14000e870
   140007d34:	je     0x140007d64
   140007d36:	lea    rcx,[rip+0x6b33]        # 0x14000e870
   140007d3d:	call   0x140008350
   140007d42:	test   eax,eax
   140007d44:	je     0x140007d64
   140007d46:	mov    rbx,QWORD PTR [rip+0x6b23]        # 0x14000e870
   140007d4d:	mov    rcx,rbx
   140007d50:	mov    rax,QWORD PTR [rip+0x2629]        # 0x14000a380
   140007d57:	call   rax
   140007d59:	xor    r8d,r8d
   140007d5c:	lea    edx,[r8+0x2]
   140007d60:	xor    ecx,ecx
   140007d62:	call   rbx
   140007d64:	mov    rax,QWORD PTR [rip+0x253d]        # 0x14000a2a8
   140007d6b:	mov    rdx,QWORD PTR [rax]
   140007d6e:	test   rdx,rdx
   140007d71:	jne    0x140007d7d
   140007d73:	mov    eax,0xff
   140007d78:	jmp    0x140007e53
   140007d7d:	mov    QWORD PTR [rsp+0x28],rdx
   140007d82:	mov    ecx,DWORD PTR [rsp+0x20]
   140007d86:	cmp    WORD PTR [rdx],0x20
   140007d8a:	ja     0x140007e04
   140007d8c:	cmp    WORD PTR [rdx],r15w
   140007d90:	je     0x140007d96
   140007d92:	test   ecx,ecx
   140007d94:	jne    0x140007e04
   140007d96:	movzx  eax,WORD PTR [rdx]
   140007d99:	sub    ax,di
   140007d9c:	cmp    ax,si
   140007d9f:	ja     0x140007dac
   140007da1:	add    rdx,0x2
   140007da5:	mov    QWORD PTR [rsp+0x28],rdx
   140007daa:	jmp    0x140007d96
   140007dac:	mov    ecx,DWORD PTR [rsp+0x7c]
   140007db0:	movzx  eax,WORD PTR [rsp+0x80]
   140007db8:	mov    r9d,0xa
   140007dbe:	and    cl,dil
   140007dc1:	cmovne r9d,eax
   140007dc5:	mov    r8,rdx
   140007dc8:	xor    edx,edx
   140007dca:	lea    rcx,[rip+0xffffffffffff822f]        # 0x140000000
   140007dd1:	call   0x14000477c
   140007dd6:	mov    DWORD PTR [rip+0x6318],eax        # 0x14000e0f4
   140007ddc:	cmp    DWORD PTR [rip+0x6335],r15d        # 0x14000e118
   140007de3:	jne    0x140007ded
   140007de5:	mov    ecx,eax
   140007de7:	call   QWORD PTR [rip+0x24eb]        # 0x14000a2d8
   140007ded:	cmp    DWORD PTR [rip+0x6304],r15d        # 0x14000e0f8
   140007df4:	jne    0x140007e02
   140007df6:	call   QWORD PTR [rip+0x24cc]        # 0x14000a2c8
   140007dfc:	mov    eax,DWORD PTR [rip+0x62f2]        # 0x14000e0f4
   140007e02:	jmp    0x140007e53
   140007e04:	cmp    WORD PTR [rdx],0x22
   140007e08:	jne    0x140007e18
   140007e0a:	mov    eax,r15d
   140007e0d:	test   ecx,ecx
   140007e0f:	sete   al
   140007e12:	mov    ecx,eax
   140007e14:	mov    DWORD PTR [rsp+0x20],eax
   140007e18:	add    rdx,0x2
   140007e1c:	mov    QWORD PTR [rsp+0x28],rdx
   140007e21:	jmp    0x140007d86
   140007e26:	mov    DWORD PTR [rip+0x62c8],eax        # 0x14000e0f4
   140007e2c:	cmp    DWORD PTR [rip+0x62e5],0x0        # 0x14000e118
   140007e33:	jne    0x140007e3e
   140007e35:	mov    ecx,eax
   140007e37:	call   QWORD PTR [rip+0x2493]        # 0x14000a2d0
   140007e3d:	int3   
   140007e3e:	cmp    DWORD PTR [rip+0x62b3],0x0        # 0x14000e0f8
   140007e45:	jne    0x140007e53
   140007e47:	call   QWORD PTR [rip+0x247b]        # 0x14000a2c8
   140007e4d:	mov    eax,DWORD PTR [rip+0x62a1]        # 0x14000e0f4
   140007e53:	lea    r11,[rsp+0xb0]
   140007e5b:	mov    rbx,QWORD PTR [r11+0x20]
   140007e5f:	mov    rsi,QWORD PTR [r11+0x28]
   140007e63:	mov    rdi,QWORD PTR [r11+0x30]
   140007e67:	mov    rsp,r11
   140007e6a:	pop    r15
   140007e6c:	pop    r14
   140007e6e:	pop    r12
   140007e70:	ret    
   140007e71:	int3   
   140007e72:	int3   
   140007e73:	int3   
   140007e74:	int3   
   140007e75:	int3   
   140007e76:	int3   
   140007e77:	int3   
   140007e78:	int3   
   140007e79:	int3   
   140007e7a:	int3   
   140007e7b:	int3   
   140007e7c:	int3   
   140007e7d:	int3   
   140007e7e:	int3   
   140007e7f:	int3   
   140007e80:	sub    rsp,0x28
   140007e84:	call   0x1400083e4
   140007e89:	add    rsp,0x28
   140007e8d:	jmp    0x140007c00
   140007e92:	int3   
   140007e93:	int3   
   140007e94:	int3   
   140007e95:	int3   
   140007e96:	int3   
   140007e97:	int3   
   140007e98:	int3   
   140007e99:	int3   
   140007e9a:	int3   
   140007e9b:	int3   
   140007e9c:	int3   
   140007e9d:	int3   
   140007e9e:	int3   
   140007e9f:	int3   
   140007ea0:	int3   
   140007ea1:	int3   
   140007ea2:	int3   
   140007ea3:	int3   
   140007ea4:	int3   
   140007ea5:	int3   
   140007ea6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140007eb0:	cmp    rcx,QWORD PTR [rip+0x6151]        # 0x14000e008
   140007eb7:	jne    0x140007ec9
   140007eb9:	rol    rcx,0x10
   140007ebd:	test   cx,0xffff
   140007ec2:	jne    0x140007ec5
   140007ec4:	ret    
   140007ec5:	ror    rcx,0x10
   140007ec9:	jmp    0x140008010
   140007ece:	int3   
   140007ecf:	int3   
   140007ed0:	int3   
   140007ed1:	int3   
   140007ed2:	int3   
   140007ed3:	int3   
   140007ed4:	jmp    QWORD PTR [rip+0x2466]        # 0x14000a340
   140007eda:	int3   
   140007edb:	int3   
   140007edc:	int3   
   140007edd:	int3   
   140007ede:	int3   
   140007edf:	int3   
   140007ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140007ee5:	push   rdi
   140007ee6:	sub    rsp,0x20
   140007eea:	mov    rdi,rcx
   140007eed:	mov    rax,QWORD PTR [rip+0x6974]        # 0x14000e868
   140007ef4:	mov    QWORD PTR [rsp+0x38],rax
   140007ef9:	cmp    rax,0xffffffffffffffff
   140007efd:	jne    0x140007f16
   140007eff:	mov    rbx,QWORD PTR [rip+0x236a]        # 0x14000a270
   140007f06:	mov    rcx,rbx
   140007f09:	call   QWORD PTR [rip+0x2471]        # 0x14000a380
   140007f0f:	mov    rcx,rdi
   140007f12:	call   rbx
   140007f14:	jmp    0x140007f73
   140007f16:	mov    ecx,0x8
   140007f1b:	call   0x1400084e2
   140007f20:	nop
   140007f21:	mov    rax,QWORD PTR [rip+0x6940]        # 0x14000e868
   140007f28:	mov    QWORD PTR [rsp+0x38],rax
   140007f2d:	mov    rax,QWORD PTR [rip+0x692c]        # 0x14000e860
   140007f34:	mov    QWORD PTR [rsp+0x40],rax
   140007f39:	lea    r8,[rsp+0x40]
   140007f3e:	lea    rdx,[rsp+0x38]
   140007f43:	mov    rcx,rdi
   140007f46:	call   0x1400084fa
   140007f4b:	mov    rbx,rax
   140007f4e:	mov    rdx,QWORD PTR [rsp+0x38]
   140007f53:	mov    QWORD PTR [rip+0x690e],rdx        # 0x14000e868
   140007f5a:	mov    rdx,QWORD PTR [rsp+0x40]
   140007f5f:	mov    QWORD PTR [rip+0x68fa],rdx        # 0x14000e860
   140007f66:	mov    ecx,0x8
   140007f6b:	call   0x1400084ee
   140007f70:	mov    rax,rbx
   140007f73:	mov    rbx,QWORD PTR [rsp+0x30]
   140007f78:	add    rsp,0x20
   140007f7c:	pop    rdi
   140007f7d:	ret    
   140007f7e:	int3   
   140007f7f:	int3   
   140007f80:	int3   
   140007f81:	int3   
   140007f82:	int3   
   140007f83:	int3   
   140007f84:	sub    rsp,0x28
   140007f88:	call   0x140007ee0
   140007f8d:	neg    rax
   140007f90:	sbb    eax,eax
   140007f92:	neg    eax
   140007f94:	dec    eax
   140007f96:	add    rsp,0x28
   140007f9a:	ret    
   140007f9b:	int3   
   140007f9c:	int3   
   140007f9d:	int3   
   140007f9e:	int3   
   140007f9f:	int3   
   140007fa0:	int3   
   140007fa1:	int3   
   140007fa2:	int3   
   140007fa3:	int3   
   140007fa4:	int3   
   140007fa5:	int3   
   140007fa6:	int3   
   140007fa7:	int3   
   140007fa8:	int3   
   140007fa9:	int3   
   140007faa:	int3   
   140007fab:	int3   
   140007fac:	int3   
   140007fad:	int3   
   140007fae:	int3   
   140007faf:	int3   
   140007fb0:	jmp    QWORD PTR [rip+0x2362]        # 0x14000a318
   140007fb6:	int3   
   140007fb7:	int3   
   140007fb8:	int3   
   140007fb9:	int3   
   140007fba:	int3   
   140007fbb:	int3   
   140007fbc:	jmp    QWORD PTR [rip+0x234e]        # 0x14000a310
   140007fc2:	int3   
   140007fc3:	int3   
   140007fc4:	int3   
   140007fc5:	int3   
   140007fc6:	int3   
   140007fc7:	int3   
   140007fc8:	rex push rbx
   140007fca:	sub    rsp,0x20
   140007fce:	mov    rbx,rcx
   140007fd1:	xor    ecx,ecx
   140007fd3:	call   QWORD PTR [rip+0x2077]        # 0x14000a050
   140007fd9:	mov    rcx,rbx
   140007fdc:	call   QWORD PTR [rip+0x2066]        # 0x14000a048
   140007fe2:	call   QWORD PTR [rip+0x2160]        # 0x14000a148
   140007fe8:	mov    rcx,rax
   140007feb:	mov    edx,0xc0000409
   140007ff0:	add    rsp,0x20
   140007ff4:	pop    rbx
   140007ff5:	rex.W jmp QWORD PTR [rip+0x2144]        # 0x14000a140
   140007ffc:	int3   
   140007ffd:	int3   
   140007ffe:	int3   
   140007fff:	int3   
   140008000:	int3   
   140008001:	int3   
   140008002:	int3   
   140008003:	int3   
   140008004:	int3   
   140008005:	int3   
   140008006:	int3   
   140008007:	int3   
   140008008:	int3   
   140008009:	int3   
   14000800a:	int3   
   14000800b:	int3   
   14000800c:	int3   
   14000800d:	int3   
   14000800e:	int3   
   14000800f:	int3   
   140008010:	mov    QWORD PTR [rsp+0x8],rcx
   140008015:	sub    rsp,0x88
   14000801c:	lea    rcx,[rip+0x619d]        # 0x14000e1c0
   140008023:	call   QWORD PTR [rip+0x2177]        # 0x14000a1a0
   140008029:	mov    rax,QWORD PTR [rip+0x6288]        # 0x14000e2b8
   140008030:	mov    QWORD PTR [rsp+0x48],rax
   140008035:	xor    r8d,r8d
   140008038:	lea    rdx,[rsp+0x50]
   14000803d:	mov    rcx,QWORD PTR [rsp+0x48]
   140008042:	call   QWORD PTR [rip+0x2150]        # 0x14000a198
   140008048:	mov    QWORD PTR [rsp+0x40],rax
   14000804d:	cmp    QWORD PTR [rsp+0x40],0x0
   140008053:	je     0x140008097
   140008055:	mov    QWORD PTR [rsp+0x38],0x0
   14000805e:	lea    rax,[rsp+0x58]
   140008063:	mov    QWORD PTR [rsp+0x30],rax
   140008068:	lea    rax,[rsp+0x60]
   14000806d:	mov    QWORD PTR [rsp+0x28],rax
   140008072:	lea    rax,[rip+0x6147]        # 0x14000e1c0
   140008079:	mov    QWORD PTR [rsp+0x20],rax
   14000807e:	mov    r9,QWORD PTR [rsp+0x40]
   140008083:	mov    r8,QWORD PTR [rsp+0x48]
   140008088:	mov    rdx,QWORD PTR [rsp+0x50]
   14000808d:	xor    ecx,ecx
   14000808f:	call   QWORD PTR [rip+0x20fb]        # 0x14000a190
   140008095:	jmp    0x1400080ba
   140008097:	mov    rax,QWORD PTR [rip+0x61ba]        # 0x14000e258
   14000809e:	mov    rax,QWORD PTR [rax]
   1400080a1:	mov    QWORD PTR [rip+0x6210],rax        # 0x14000e2b8
   1400080a8:	mov    rax,QWORD PTR [rip+0x61a9]        # 0x14000e258
   1400080af:	add    rax,0x8
   1400080b3:	mov    QWORD PTR [rip+0x619e],rax        # 0x14000e258
   1400080ba:	mov    rax,QWORD PTR [rip+0x61f7]        # 0x14000e2b8
   1400080c1:	mov    QWORD PTR [rip+0x6068],rax        # 0x14000e130
   1400080c8:	mov    rax,QWORD PTR [rsp+0x90]
   1400080d0:	mov    QWORD PTR [rip+0x6169],rax        # 0x14000e240
   1400080d7:	mov    DWORD PTR [rip+0x603f],0xc0000409        # 0x14000e120
   1400080e1:	mov    DWORD PTR [rip+0x6039],0x1        # 0x14000e124
   1400080eb:	mov    DWORD PTR [rip+0x6043],0x3        # 0x14000e138
   1400080f5:	mov    eax,0x8
   1400080fa:	imul   rax,rax,0x0
   1400080fe:	lea    rcx,[rip+0x603b]        # 0x14000e140
   140008105:	mov    QWORD PTR [rcx+rax*1],0x2
   14000810d:	mov    eax,0x8
   140008112:	imul   rax,rax,0x1
   140008116:	lea    rcx,[rip+0x6023]        # 0x14000e140
   14000811d:	mov    rdx,QWORD PTR [rip+0x5ee4]        # 0x14000e008
   140008124:	mov    QWORD PTR [rcx+rax*1],rdx
   140008128:	mov    eax,0x8
   14000812d:	imul   rax,rax,0x2
   140008131:	lea    rcx,[rip+0x6008]        # 0x14000e140
   140008138:	mov    rdx,QWORD PTR [rip+0x5ed1]        # 0x14000e010
   14000813f:	mov    QWORD PTR [rcx+rax*1],rdx
   140008143:	mov    eax,0x8
   140008148:	imul   rax,rax,0x0
   14000814c:	mov    rcx,QWORD PTR [rip+0x5eb5]        # 0x14000e008
   140008153:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140008158:	mov    eax,0x8
   14000815d:	imul   rax,rax,0x1
   140008161:	mov    rcx,QWORD PTR [rip+0x5ea8]        # 0x14000e010
   140008168:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000816d:	lea    rcx,[rip+0x234c]        # 0x14000a4c0
   140008174:	call   0x140007fc8
   140008179:	add    rsp,0x88
   140008180:	ret    
   140008181:	int3   
   140008182:	int3   
   140008183:	int3   
   140008184:	int3   
   140008185:	int3   
   140008186:	int3   
   140008187:	int3   
   140008188:	int3   
   140008189:	int3   
   14000818a:	int3   
   14000818b:	int3   
   14000818c:	int3   
   14000818d:	int3   
   14000818e:	int3   
   14000818f:	int3   
   140008190:	mov    QWORD PTR [rsp+0x8],rbx
   140008195:	push   rdi
   140008196:	sub    rsp,0x20
   14000819a:	mov    ebx,edx
   14000819c:	mov    rdi,rcx
   14000819f:	call   QWORD PTR [rip+0x20c3]        # 0x14000a268
   1400081a5:	test   bl,0x1
   1400081a8:	je     0x1400081b2
   1400081aa:	mov    rcx,rdi
   1400081ad:	call   0x140007fbc
   1400081b2:	mov    rax,rdi
   1400081b5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400081ba:	add    rsp,0x20
   1400081be:	pop    rdi
   1400081bf:	ret    
   1400081c0:	int3   
   1400081c1:	int3   
   1400081c2:	int3   
   1400081c3:	int3   
   1400081c4:	int3   
   1400081c5:	int3   
   1400081c6:	jmp    QWORD PTR [rip+0x2134]        # 0x14000a300
   1400081cc:	int3   
   1400081cd:	int3   
   1400081ce:	int3   
   1400081cf:	int3   
   1400081d0:	int3   
   1400081d1:	int3   
   1400081d2:	int3   
   1400081d3:	int3   
   1400081d4:	int3   
   1400081d5:	int3   
   1400081d6:	int3   
   1400081d7:	int3   
   1400081d8:	int3   
   1400081d9:	int3   
   1400081da:	int3   
   1400081db:	int3   
   1400081dc:	int3   
   1400081dd:	int3   
   1400081de:	int3   
   1400081df:	int3   
   1400081e0:	sub    rsp,0x28
   1400081e4:	mov    rax,QWORD PTR [rcx]
   1400081e7:	cmp    DWORD PTR [rax],0xe06d7363
   1400081ed:	jne    0x140008212
   1400081ef:	cmp    DWORD PTR [rax+0x18],0x4
   1400081f3:	jne    0x140008212
   1400081f5:	mov    ecx,DWORD PTR [rax+0x20]
   1400081f8:	lea    eax,[rcx-0x19930520]
   1400081fe:	cmp    eax,0x2
   140008201:	jbe    0x14000820b
   140008203:	cmp    ecx,0x1994000
   140008209:	jne    0x140008212
   14000820b:	call   QWORD PTR [rip+0x207f]        # 0x14000a290
   140008211:	int3   
   140008212:	xor    eax,eax
   140008214:	add    rsp,0x28
   140008218:	ret    
   140008219:	int3   
   14000821a:	int3   
   14000821b:	int3   
   14000821c:	int3   
   14000821d:	int3   
   14000821e:	int3   
   14000821f:	int3   
   140008220:	sub    rsp,0x28
   140008224:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x1400081e0
   14000822b:	call   QWORD PTR [rip+0x1e1f]        # 0x14000a050
   140008231:	xor    eax,eax
   140008233:	add    rsp,0x28
   140008237:	ret    
   140008238:	int3   
   140008239:	int3   
   14000823a:	int3   
   14000823b:	int3   
   14000823c:	int3   
   14000823d:	int3   
   14000823e:	jmp    QWORD PTR [rip+0x20b4]        # 0x14000a2f8
   140008244:	int3   
   140008245:	int3   
   140008246:	int3   
   140008247:	int3   
   140008248:	int3   
   140008249:	int3   
   14000824a:	int3   
   14000824b:	int3   
   14000824c:	sub    rsp,0x18
   140008250:	xor    edx,edx
   140008252:	lea    rax,[rcx-0x1]
   140008256:	cmp    rax,0xfffffffffffffffd
   14000825a:	ja     0x140008298
   14000825c:	mov    eax,0x5a4d
   140008261:	cmp    WORD PTR [rcx],ax
   140008264:	jne    0x140008290
   140008266:	cmp    DWORD PTR [rcx+0x3c],edx
   140008269:	jl     0x140008290
   14000826b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   140008272:	jae    0x140008290
   140008274:	movsxd rax,DWORD PTR [rcx+0x3c]
   140008278:	add    rax,rcx
   14000827b:	mov    QWORD PTR [rsp],rax
   14000827f:	cmp    DWORD PTR [rax],0x4550
   140008285:	cmovne rax,rdx
   140008289:	mov    rdx,rax
   14000828c:	mov    QWORD PTR [rsp],rax
   140008290:	jmp    0x140008298
   140008292:	xor    edx,edx
   140008294:	mov    QWORD PTR [rsp],rdx
   140008298:	mov    rax,rdx
   14000829b:	add    rsp,0x18
   14000829f:	ret    
   1400082a0:	int3   
   1400082a1:	int3   
   1400082a2:	int3   
   1400082a3:	int3   
   1400082a4:	int3   
   1400082a5:	int3   
   1400082a6:	int3   
   1400082a7:	int3   
   1400082a8:	rex push rbx
   1400082aa:	sub    rsp,0x20
   1400082ae:	mov    ebx,ecx
   1400082b0:	xor    ecx,ecx
   1400082b2:	call   QWORD PTR [rip+0x1e10]        # 0x14000a0c8
   1400082b8:	test   rax,rax
   1400082bb:	je     0x1400082e5
   1400082bd:	mov    rcx,rax
   1400082c0:	call   0x14000824c
   1400082c5:	test   rax,rax
   1400082c8:	je     0x1400082e5
   1400082ca:	mov    ecx,0x2
   1400082cf:	cmp    WORD PTR [rax+0x5c],cx
   1400082d3:	jne    0x1400082d9
   1400082d5:	mov    eax,ecx
   1400082d7:	jmp    0x1400082e7
   1400082d9:	cmp    WORD PTR [rax+0x5c],0x3
   1400082de:	mov    eax,0x1
   1400082e3:	je     0x1400082e7
   1400082e5:	mov    eax,ebx
   1400082e7:	add    rsp,0x20
   1400082eb:	pop    rbx
   1400082ec:	ret    
   1400082ed:	int3   
   1400082ee:	int3   
   1400082ef:	int3   
   1400082f0:	int3   
   1400082f1:	int3   
   1400082f2:	int3   
   1400082f3:	int3   
   1400082f4:	jmp    QWORD PTR [rip+0x1ff6]        # 0x14000a2f0
   1400082fa:	int3   
   1400082fb:	int3   
   1400082fc:	int3   
   1400082fd:	int3   
   1400082fe:	int3   
   1400082ff:	int3   
   140008300:	movsxd r8,DWORD PTR [rcx+0x3c]
   140008304:	xor    r9d,r9d
   140008307:	add    r8,rcx
   14000830a:	mov    r10,rdx
   14000830d:	movzx  eax,WORD PTR [r8+0x14]
   140008312:	movzx  r11d,WORD PTR [r8+0x6]
   140008317:	add    rax,0x18
   14000831b:	add    rax,r8
   14000831e:	test   r11d,r11d
   140008321:	je     0x140008341
   140008323:	mov    edx,DWORD PTR [rax+0xc]
   140008326:	cmp    r10,rdx
   140008329:	jb     0x140008335
   14000832b:	mov    ecx,DWORD PTR [rax+0x8]
   14000832e:	add    ecx,edx
   140008330:	cmp    r10,rcx
   140008333:	jb     0x140008343
   140008335:	inc    r9d
   140008338:	add    rax,0x28
   14000833c:	cmp    r9d,r11d
   14000833f:	jb     0x140008323
   140008341:	xor    eax,eax
   140008343:	ret    
   140008344:	int3   
   140008345:	int3   
   140008346:	int3   
   140008347:	int3   
   140008348:	int3   
   140008349:	int3   
   14000834a:	int3   
   14000834b:	int3   
   14000834c:	int3   
   14000834d:	int3   
   14000834e:	int3   
   14000834f:	int3   
   140008350:	mov    QWORD PTR [rsp+0x8],rbx
   140008355:	push   rdi
   140008356:	sub    rsp,0x20
   14000835a:	mov    rbx,rcx
   14000835d:	lea    rdi,[rip+0xffffffffffff7c9c]        # 0x140000000
   140008364:	mov    rcx,rdi
   140008367:	call   0x1400083b0
   14000836c:	test   eax,eax
   14000836e:	je     0x140008392
   140008370:	sub    rbx,rdi
   140008373:	mov    rdx,rbx
   140008376:	mov    rcx,rdi
   140008379:	call   0x140008300
   14000837e:	test   rax,rax
   140008381:	je     0x140008392
   140008383:	mov    eax,DWORD PTR [rax+0x24]
   140008386:	shr    eax,0x1f
   140008389:	not    eax
   14000838b:	and    eax,0x1
   14000838e:	jmp    0x140008392
   140008390:	xor    eax,eax
   140008392:	mov    rbx,QWORD PTR [rsp+0x30]
   140008397:	add    rsp,0x20
   14000839b:	pop    rdi
   14000839c:	ret    
   14000839d:	int3   
   14000839e:	int3   
   14000839f:	int3   
   1400083a0:	int3   
   1400083a1:	int3   
   1400083a2:	int3   
   1400083a3:	int3   
   1400083a4:	int3   
   1400083a5:	int3   
   1400083a6:	int3   
   1400083a7:	int3   
   1400083a8:	int3   
   1400083a9:	int3   
   1400083aa:	int3   
   1400083ab:	int3   
   1400083ac:	int3   
   1400083ad:	int3   
   1400083ae:	int3   
   1400083af:	int3   
   1400083b0:	mov    rax,rcx
   1400083b3:	mov    ecx,0x5a4d
   1400083b8:	cmp    WORD PTR [rax],cx
   1400083bb:	je     0x1400083c0
   1400083bd:	xor    eax,eax
   1400083bf:	ret    
   1400083c0:	movsxd rcx,DWORD PTR [rax+0x3c]
   1400083c4:	add    rcx,rax
   1400083c7:	xor    eax,eax
   1400083c9:	cmp    DWORD PTR [rcx],0x4550
   1400083cf:	jne    0x1400083dd
   1400083d1:	mov    edx,0x20b
   1400083d6:	cmp    WORD PTR [rcx+0x18],dx
   1400083da:	sete   al
   1400083dd:	ret    
   1400083de:	int3   
   1400083df:	int3   
   1400083e0:	int3   
   1400083e1:	int3   
   1400083e2:	int3   
   1400083e3:	int3   
   1400083e4:	mov    QWORD PTR [rsp+0x20],rbx
   1400083e9:	push   rbp
   1400083ea:	mov    rbp,rsp
   1400083ed:	sub    rsp,0x20
   1400083f1:	and    QWORD PTR [rbp+0x18],0x0
   1400083f6:	movabs rbx,0x2b992ddfa232
   140008400:	mov    rax,QWORD PTR [rip+0x5c01]        # 0x14000e008
   140008407:	cmp    rax,rbx
   14000840a:	jne    0x14000849f
   140008410:	lea    rcx,[rbp+0x18]
   140008414:	call   QWORD PTR [rip+0x1dbe]        # 0x14000a1d8
   14000841a:	mov    rax,QWORD PTR [rbp+0x18]
   14000841e:	mov    QWORD PTR [rbp+0x10],rax
   140008422:	call   QWORD PTR [rip+0x1d08]        # 0x14000a130
   140008428:	mov    eax,eax
   14000842a:	xor    QWORD PTR [rbp+0x10],rax
   14000842e:	call   QWORD PTR [rip+0x1d1c]        # 0x14000a150
   140008434:	mov    eax,eax
   140008436:	xor    QWORD PTR [rbp+0x10],rax
   14000843a:	call   QWORD PTR [rip+0x1d90]        # 0x14000a1d0
   140008440:	mov    eax,eax
   140008442:	shl    rax,0x18
   140008446:	xor    QWORD PTR [rbp+0x10],rax
   14000844a:	call   QWORD PTR [rip+0x1d80]        # 0x14000a1d0
   140008450:	mov    eax,eax
   140008452:	lea    rcx,[rbp+0x10]
   140008456:	xor    rax,QWORD PTR [rbp+0x10]
   14000845a:	xor    rax,rcx
   14000845d:	lea    rcx,[rbp+0x20]
   140008461:	mov    QWORD PTR [rbp+0x10],rax
   140008465:	call   QWORD PTR [rip+0x1cf5]        # 0x14000a160
   14000846b:	mov    eax,DWORD PTR [rbp+0x20]
   14000846e:	movabs rcx,0xffffffffffff
   140008478:	shl    rax,0x20
   14000847c:	xor    rax,QWORD PTR [rbp+0x20]
   140008480:	xor    rax,QWORD PTR [rbp+0x10]
   140008484:	and    rax,rcx
   140008487:	movabs rcx,0x2b992ddfa233
   140008491:	cmp    rax,rbx
   140008494:	cmove  rax,rcx
   140008498:	mov    QWORD PTR [rip+0x5b69],rax        # 0x14000e008
   14000849f:	mov    rbx,QWORD PTR [rsp+0x48]
   1400084a4:	not    rax
   1400084a7:	mov    QWORD PTR [rip+0x5b62],rax        # 0x14000e010
   1400084ae:	add    rsp,0x20
   1400084b2:	pop    rbp
   1400084b3:	ret    
   1400084b4:	int3   
   1400084b5:	int3   
   1400084b6:	int3   
   1400084b7:	int3   
   1400084b8:	int3   
   1400084b9:	int3   
   1400084ba:	int3   
   1400084bb:	int3   
   1400084bc:	int3   
   1400084bd:	int3   
   1400084be:	int3   
   1400084bf:	int3   
   1400084c0:	xor    eax,eax
   1400084c2:	ret    
   1400084c3:	int3   
   1400084c4:	int3   
   1400084c5:	int3   
   1400084c6:	int3   
   1400084c7:	int3   
   1400084c8:	int3   
   1400084c9:	int3   
   1400084ca:	jmp    QWORD PTR [rip+0x1de8]        # 0x14000a2b8
   1400084d0:	int3   
   1400084d1:	int3   
   1400084d2:	int3   
   1400084d3:	int3   
   1400084d4:	int3   
   1400084d5:	int3   
   1400084d6:	jmp    QWORD PTR [rip+0x1dd4]        # 0x14000a2b0
   1400084dc:	int3   
   1400084dd:	int3   
   1400084de:	int3   
   1400084df:	int3   
   1400084e0:	int3   
   1400084e1:	int3   
   1400084e2:	jmp    QWORD PTR [rip+0x1da0]        # 0x14000a288
   1400084e8:	int3   
   1400084e9:	int3   
   1400084ea:	int3   
   1400084eb:	int3   
   1400084ec:	int3   
   1400084ed:	int3   
   1400084ee:	jmp    QWORD PTR [rip+0x1d8c]        # 0x14000a280
   1400084f4:	int3   
   1400084f5:	int3   
   1400084f6:	int3   
   1400084f7:	int3   
   1400084f8:	int3   
   1400084f9:	int3   
   1400084fa:	jmp    QWORD PTR [rip+0x1d78]        # 0x14000a278
   140008500:	int3   
   140008501:	int3   
   140008502:	int3   
   140008503:	int3   
   140008504:	int3   
   140008505:	int3   
   140008506:	int3   
   140008507:	int3   
   140008508:	int3   
   140008509:	int3   
   14000850a:	int3   
   14000850b:	int3   
   14000850c:	int3   
   14000850d:	int3   
   14000850e:	int3   
   14000850f:	int3   
   140008510:	lea    rax,[rip+0x7ae9]        # 0x140010000
   140008517:	jmp    0x140008530
   14000851c:	int3   
   14000851d:	int3   
   14000851e:	int3   
   14000851f:	int3   
   140008520:	int3   
   140008521:	int3   
   140008522:	int3   
   140008523:	int3   
   140008524:	int3   
   140008525:	int3   
   140008526:	int3   
   140008527:	int3   
   140008528:	int3   
   140008529:	int3   
   14000852a:	int3   
   14000852b:	int3   
   14000852c:	int3   
   14000852d:	int3   
   14000852e:	int3   
   14000852f:	int3   
   140008530:	mov    QWORD PTR [rsp+0x8],rcx
   140008535:	mov    QWORD PTR [rsp+0x10],rdx
   14000853a:	mov    QWORD PTR [rsp+0x18],r8
   14000853f:	mov    QWORD PTR [rsp+0x20],r9
   140008544:	sub    rsp,0x68
   140008548:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000854e:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   140008554:	movdqa XMMWORD PTR [rsp+0x40],xmm2
   14000855a:	movdqa XMMWORD PTR [rsp+0x50],xmm3
   140008560:	mov    rdx,rax
   140008563:	lea    rcx,[rip+0x4906]        # 0x14000ce70
   14000856a:	call   0x140007a50
   14000856f:	movdqa xmm0,XMMWORD PTR [rsp+0x20]
   140008575:	movdqa xmm1,XMMWORD PTR [rsp+0x30]
   14000857b:	movdqa xmm2,XMMWORD PTR [rsp+0x40]
   140008581:	movdqa xmm3,XMMWORD PTR [rsp+0x50]
   140008587:	mov    rcx,QWORD PTR [rsp+0x70]
   14000858c:	mov    rdx,QWORD PTR [rsp+0x78]
   140008591:	mov    r8,QWORD PTR [rsp+0x80]
   140008599:	mov    r9,QWORD PTR [rsp+0x88]
   1400085a1:	add    rsp,0x68
   1400085a5:	jmp    0x1400085a7
   1400085a7:	jmp    rax
   1400085a9:	int3   
   1400085aa:	int3   
   1400085ab:	int3   
   1400085ac:	int3   
   1400085ad:	int3   
   1400085ae:	int3   
   1400085af:	int3   
   1400085b0:	jmp    0x140007a8c
   1400085b5:	int3   
   1400085b6:	int3   
   1400085b7:	int3   
   1400085b8:	int3   
   1400085b9:	int3   
   1400085ba:	int3   
   1400085bb:	int3   
   1400085bc:	int3   
   1400085bd:	int3   
   1400085be:	int3   
   1400085bf:	int3   
   1400085c0:	jmp    QWORD PTR [rip+0x1a72]        # 0x14000a038
   1400085c6:	int3   
   1400085c7:	int3   
   1400085c8:	int3   
   1400085c9:	int3   
   1400085ca:	int3   
   1400085cb:	int3   
   1400085cc:	jmp    QWORD PTR [rip+0x1d86]        # 0x14000a358
   1400085d2:	int3   
   1400085d3:	int3   
   1400085d4:	int3   
   1400085d5:	int3   
   1400085d6:	int3   
   1400085d7:	int3   
   1400085d8:	jmp    QWORD PTR [rip+0x1d82]        # 0x14000a360
   1400085de:	int3   
   1400085df:	int3   
   1400085e0:	int3   
   1400085e1:	int3   
   1400085e2:	int3   
   1400085e3:	int3   
   1400085e4:	sub    rsp,0x28
   1400085e8:	mov    r8,QWORD PTR [r9+0x38]
   1400085ec:	mov    rcx,rdx
   1400085ef:	mov    rdx,r9
   1400085f2:	call   0x140008608
   1400085f7:	mov    eax,0x1
   1400085fc:	add    rsp,0x28
   140008600:	ret    
   140008601:	int3   
   140008602:	int3   
   140008603:	int3   
   140008604:	int3   
   140008605:	int3   
   140008606:	int3   
   140008607:	int3   
   140008608:	rex push rbx
   14000860a:	sub    rsp,0x20
   14000860e:	mov    r11d,DWORD PTR [r8]
   140008611:	mov    rbx,rdx
   140008614:	and    r11d,0xfffffff8
   140008618:	mov    r9,rcx
   14000861b:	test   BYTE PTR [r8],0x4
   14000861f:	mov    r10,rcx
   140008622:	je     0x140008637
   140008624:	mov    eax,DWORD PTR [r8+0x8]
   140008628:	movsxd r10,DWORD PTR [r8+0x4]
   14000862c:	neg    eax
   14000862e:	add    r10,rcx
   140008631:	movsxd rcx,eax
   140008634:	and    r10,rcx
   140008637:	movsxd rax,r11d
   14000863a:	mov    rdx,QWORD PTR [rax+r10*1]
   14000863e:	mov    rax,QWORD PTR [rbx+0x10]
   140008642:	mov    ecx,DWORD PTR [rax+0x8]
   140008645:	add    rcx,QWORD PTR [rbx+0x8]
   140008649:	test   BYTE PTR [rcx+0x3],0xf
   14000864d:	je     0x14000865b
   14000864f:	movzx  eax,BYTE PTR [rcx+0x3]
   140008653:	and    eax,0xfffffff0
   140008656:	cdqe   
   140008658:	add    r9,rax
   14000865b:	xor    r9,rdx
   14000865e:	mov    rcx,r9
   140008661:	add    rsp,0x20
   140008665:	pop    rbx
   140008666:	jmp    0x140007eb0
   14000866b:	int3   
   14000866c:	int3   
   14000866d:	int3   
   14000866e:	int3   
   14000866f:	int3   
   140008670:	int3   
   140008671:	int3   
   140008672:	int3   
   140008673:	int3   
   140008674:	mov    rax,rsp
   140008677:	mov    QWORD PTR [rax+0x8],rbx
   14000867b:	mov    QWORD PTR [rax+0x10],rbp
   14000867f:	mov    QWORD PTR [rax+0x18],rsi
   140008683:	mov    QWORD PTR [rax+0x20],rdi
   140008687:	push   r14
   140008689:	sub    rsp,0x20
   14000868d:	mov    rbx,QWORD PTR [r9+0x38]
   140008691:	mov    rsi,rdx
   140008694:	mov    r14,r8
   140008697:	mov    rbp,rcx
   14000869a:	mov    rdx,r9
   14000869d:	mov    rcx,rsi
   1400086a0:	mov    rdi,r9
   1400086a3:	lea    r8,[rbx+0x4]
   1400086a7:	call   0x140008608
   1400086ac:	mov    r11d,DWORD PTR [rbx+0x4]
   1400086b0:	mov    r8d,0x1
   1400086b6:	mov    r10d,DWORD PTR [rbp+0x4]
   1400086ba:	mov    eax,r11d
   1400086bd:	and    eax,r8d
   1400086c0:	and    r11d,0x2
   1400086c4:	and    r10b,0x66
   1400086c8:	cmove  r11d,eax
   1400086cc:	test   r11d,r11d
   1400086cf:	je     0x1400086e5
   1400086d1:	mov    r9,rdi
   1400086d4:	mov    r8,r14
   1400086d7:	mov    rdx,rsi
   1400086da:	mov    rcx,rbp
   1400086dd:	call   0x1400085d8
   1400086e2:	mov    r8d,eax
   1400086e5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086ea:	mov    eax,r8d
   1400086ed:	mov    rbp,QWORD PTR [rsp+0x38]
   1400086f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400086f7:	mov    rdi,QWORD PTR [rsp+0x48]
   1400086fc:	add    rsp,0x20
   140008700:	pop    r14
   140008702:	ret    
   140008703:	int3   
   140008704:	int3   
   140008705:	int3   
   140008706:	int3   
   140008707:	int3   
   140008708:	int3   
   140008709:	int3   
   14000870a:	int3   
   14000870b:	int3   
   14000870c:	int3   
   14000870d:	int3   
   14000870e:	int3   
   14000870f:	int3   
   140008710:	int3   
   140008711:	int3   
   140008712:	int3   
   140008713:	int3   
   140008714:	int3   
   140008715:	int3   
   140008716:	jmp    QWORD PTR [rip+0x1c4c]        # 0x14000a368
   14000871c:	int3   
   14000871d:	int3   
   14000871e:	int3   
   14000871f:	int3   
   140008720:	int3   
   140008721:	int3   
   140008722:	jmp    QWORD PTR [rip+0x1c48]        # 0x14000a370
   140008728:	int3   
   140008729:	int3   
   14000872a:	int3   
   14000872b:	int3   
   14000872c:	int3   
   14000872d:	int3   
   14000872e:	int3   
   14000872f:	int3   
   140008730:	int3   
   140008731:	int3   
   140008732:	int3   
   140008733:	int3   
   140008734:	int3   
   140008735:	int3   
   140008736:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008740:	jmp    rax
   140008742:	int3   
   140008743:	int3   
   140008744:	int3   
   140008745:	int3   
   140008746:	int3   
   140008747:	int3   
   140008748:	int3   
   140008749:	int3   
   14000874a:	int3   
   14000874b:	int3   
   14000874c:	int3   
   14000874d:	int3   
   14000874e:	int3   
   14000874f:	int3   
   140008750:	int3   
   140008751:	int3   
   140008752:	int3   
   140008753:	int3   
   140008754:	int3   
   140008755:	int3   
   140008756:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008760:	sub    rsp,0x10
   140008764:	mov    QWORD PTR [rsp],r10
   140008768:	mov    QWORD PTR [rsp+0x8],r11
   14000876d:	xor    r11,r11
   140008770:	lea    r10,[rsp+0x18]
   140008775:	sub    r10,rax
   140008778:	cmovb  r10,r11
   14000877c:	mov    r11,QWORD PTR gs:0x10
   140008785:	cmp    r10,r11
   140008788:	jae    0x14000879f
   14000878a:	and    r10w,0xf000
   140008790:	lea    r11,[r11-0x1000]
   140008797:	test   BYTE PTR [r11],r11b
   14000879a:	cmp    r10,r11
   14000879d:	jne    0x140008790
   14000879f:	mov    r10,QWORD PTR [rsp]
   1400087a3:	mov    r11,QWORD PTR [rsp+0x8]
   1400087a8:	add    rsp,0x10
   1400087ac:	ret    
   1400087ad:	int3   
   1400087ae:	int3   
   1400087af:	int3   
   1400087b0:	int3   
   1400087b1:	int3   
   1400087b2:	int3   
   1400087b3:	int3   
   1400087b4:	int3   
   1400087b5:	int3   
   1400087b6:	mov    QWORD PTR [rsp+0x10],rdx
   1400087bb:	push   rbp
   1400087bc:	sub    rsp,0x20
   1400087c0:	mov    rbp,rdx
   1400087c3:	mov    rax,QWORD PTR [rbp+0x28]
   1400087c7:	mov    ecx,DWORD PTR [rax+0x4]
   1400087ca:	mov    DWORD PTR [rbp+0x40],ecx
   1400087cd:	lea    rax,[rip+0xffffffffffff96c2]        # 0x140001e96
   1400087d4:	add    rsp,0x20
   1400087d8:	pop    rbp
   1400087d9:	ret    
   1400087da:	int3   
   1400087db:	mov    QWORD PTR [rsp+0x10],rdx
   1400087e0:	push   rbp
   1400087e1:	sub    rsp,0x20
   1400087e5:	mov    rbp,rdx
   1400087e8:	lea    rax,[rip+0xffffffffffff96ad]        # 0x140001e9c
   1400087ef:	add    rsp,0x20
   1400087f3:	pop    rbp
   1400087f4:	ret    
   1400087f5:	int3   
   1400087f6:	mov    QWORD PTR [rsp+0x10],rdx
   1400087fb:	push   rbx
   1400087fc:	push   rbp
   1400087fd:	sub    rsp,0x28
   140008801:	mov    rbp,rdx
   140008804:	mov    rbx,QWORD PTR [rip+0x5f2d]        # 0x14000e738
   14000880b:	test   rbx,rbx
   14000880e:	je     0x140008824
   140008810:	mov    rcx,rbx
   140008813:	call   QWORD PTR [rip+0x1b67]        # 0x14000a380
   140008819:	call   rbx
   14000881b:	test   eax,eax
   14000881d:	jns    0x140008824
   14000881f:	mov    DWORD PTR [rbp+0x40],eax
   140008822:	jmp    0x140008844
   140008824:	mov    rcx,QWORD PTR [rbp+0x38]
   140008828:	cmp    BYTE PTR [rip+0x57f5],0x0        # 0x14000e024
   14000882f:	je     0x14000883d
   140008831:	mov    r9d,0x8007023e
   140008837:	call   0x1400024bc
   14000883c:	int3   
   14000883d:	mov    DWORD PTR [rbp+0x40],0x8007023e
   140008844:	lea    rax,[rip+0xffffffffffff9658]        # 0x140001ea3
   14000884b:	add    rsp,0x28
   14000884f:	pop    rbp
   140008850:	pop    rbx
   140008851:	ret    
   140008852:	int3   
   140008853:	int3   
   140008854:	int3   
   140008855:	int3   
   140008856:	int3   
   140008857:	int3   
   140008858:	int3   
   140008859:	rex push rbp
   14000885b:	sub    rsp,0x20
   14000885f:	mov    rbp,rdx
   140008862:	mov    rdx,QWORD PTR [rbp+0x48]
   140008866:	mov    rcx,QWORD PTR [rbp+0x50]
   14000886a:	call   0x140001220
   14000886f:	add    rsp,0x20
   140008873:	pop    rbp
   140008874:	ret    
   140008875:	mov    QWORD PTR [rsp+0x10],rdx
   14000887a:	push   rbp
   14000887b:	sub    rsp,0x20
   14000887f:	mov    rbp,rdx
   140008882:	call   0x140001e64
   140008887:	mov    DWORD PTR [rbp+0x48],eax
   14000888a:	mov    rcx,QWORD PTR [rbp+0x38]
   14000888e:	mov    r9d,eax
   140008891:	mov    edx,0x31
   140008896:	call   0x14000244c
   14000889b:	nop
   14000889c:	lea    rax,[rip+0xffffffffffff9d96]        # 0x140002639
   1400088a3:	add    rsp,0x20
   1400088a7:	pop    rbp
   1400088a8:	ret    
   1400088a9:	int3   
   1400088aa:	int3   
   1400088ab:	int3   
   1400088ac:	int3   
   1400088ad:	int3   
   1400088ae:	int3   
   1400088af:	int3   
   1400088b0:	mov    rcx,QWORD PTR [rdx+0x60]
   1400088b7:	jmp    0x140003960
   1400088bc:	mov    rcx,QWORD PTR [rdx+0x60]
   1400088c3:	add    rcx,0x18
   1400088c7:	jmp    0x140003960
   1400088cc:	int3   
   1400088cd:	int3   
   1400088ce:	int3   
   1400088cf:	int3   
   1400088d0:	int3   
   1400088d1:	int3   
   1400088d2:	lea    rcx,[rdx+0x70]
   1400088d9:	jmp    0x140002da0
   1400088de:	lea    rcx,[rdx+0x40]
   1400088e5:	jmp    0x140002da0
   1400088ea:	lea    rcx,[rdx+0xa8]
   1400088f1:	jmp    0x140002da0
   1400088f6:	lea    rcx,[rdx+0x40]
   1400088fd:	jmp    0x140003960
   140008902:	mov    QWORD PTR [rsp+0x10],rdx
   140008907:	push   rbp
   140008908:	sub    rsp,0x40
   14000890c:	mov    rbp,rdx
   14000890f:	call   0x140001e64
   140008914:	mov    DWORD PTR [rbp+0x118],eax
   14000891a:	mov    rcx,QWORD PTR [rbp+0x108]
   140008921:	mov    r9d,eax
   140008924:	mov    edx,0x88
   140008929:	call   0x14000244c
   14000892e:	nop
   14000892f:	lea    rax,[rip+0xffffffffffffa43c]        # 0x140002d72
   140008936:	add    rsp,0x40
   14000893a:	pop    rbp
   14000893b:	ret    
   14000893c:	int3   
   14000893d:	int3   
   14000893e:	int3   
   14000893f:	int3   
   140008940:	int3   
   140008941:	int3   
   140008942:	int3   
   140008943:	lea    rcx,[rdx+0x88]
   14000894a:	jmp    0x140003928
   14000894f:	lea    rcx,[rdx+0x40]
   140008956:	jmp    0x140004ae8
   14000895b:	lea    rcx,[rdx+0x28]
   140008962:	jmp    0x140003994
   140008967:	mov    QWORD PTR [rsp+0x10],rdx
   14000896c:	push   rbp
   14000896d:	sub    rsp,0x20
   140008971:	mov    rbp,rdx
   140008974:	call   0x140001e64
   140008979:	mov    DWORD PTR [rbp+0x20],eax
   14000897c:	mov    rcx,QWORD PTR [rbp+0xb8]
   140008983:	mov    r9d,eax
   140008986:	mov    edx,0xaa
   14000898b:	call   0x14000244c
   140008990:	nop
   140008991:	lea    rax,[rip+0xffffffffffffa61d]        # 0x140002fb5
   140008998:	add    rsp,0x20
   14000899c:	pop    rbp
   14000899d:	ret    
   14000899e:	int3   
   14000899f:	int3   
   1400089a0:	int3   
   1400089a1:	int3   
   1400089a2:	int3   
   1400089a3:	int3   
   1400089a4:	int3   
   1400089a5:	lea    rcx,[rdx+0xb8]
   1400089ac:	jmp    0x1400036d0
   1400089b1:	lea    rcx,[rdx+0x110]
   1400089b8:	jmp    0x140003a10
   1400089bd:	lea    rcx,[rdx+0x34]
   1400089c4:	jmp    0x140003a30
   1400089c9:	lea    rcx,[rdx+0x38]
   1400089d0:	jmp    0x140003a50
   1400089d5:	lea    rcx,[rdx+0x40]
   1400089dc:	jmp    0x140003708
   1400089e1:	lea    rcx,[rdx+0xa0]
   1400089e8:	jmp    0x140003a8c
   1400089ed:	int3   
   1400089ee:	int3   
   1400089ef:	int3   
   1400089f0:	int3   
   1400089f1:	int3   
   1400089f2:	int3   
   1400089f3:	mov    QWORD PTR [rsp+0x10],rdx
   1400089f8:	push   rbp
   1400089f9:	sub    rsp,0x20
   1400089fd:	mov    rbp,rdx
   140008a00:	mov    rdx,QWORD PTR [rbp+0x48]
   140008a04:	call   0x140003cbc
   140008a09:	xor    edx,edx
   140008a0b:	xor    ecx,ecx
   140008a0d:	call   0x1400085cc
   140008a12:	nop
   140008a13:	int3   
   140008a14:	int3   
   140008a15:	int3   
   140008a16:	int3   
   140008a17:	int3   
   140008a18:	int3   
   140008a19:	mov    QWORD PTR [rsp+0x10],rdx
   140008a1e:	push   rbp
   140008a1f:	sub    rsp,0x20
   140008a23:	mov    rbp,rdx
   140008a26:	mov    rdx,QWORD PTR [rbp+0x48]
   140008a2a:	call   0x140003cbc
   140008a2f:	xor    edx,edx
   140008a31:	xor    ecx,ecx
   140008a33:	call   0x1400085cc
   140008a38:	nop
   140008a39:	int3   
   140008a3a:	int3   
   140008a3b:	int3   
   140008a3c:	int3   
   140008a3d:	int3   
   140008a3e:	int3   
   140008a3f:	mov    QWORD PTR [rsp+0x10],rdx
   140008a44:	push   rbp
   140008a45:	sub    rsp,0x20
   140008a49:	mov    rbp,rdx
   140008a4c:	mov    rcx,QWORD PTR [rbp+0x68]
   140008a50:	mov    QWORD PTR [rbp+0x68],rcx
   140008a54:	xor    eax,eax
   140008a56:	add    rcx,0x1
   140008a5a:	je     0x140008a72
   140008a5c:	cmp    rcx,0xffffffffffffffff
   140008a60:	ja     0x140008a6c
   140008a62:	call   0x140007a8c
   140008a67:	test   rax,rax
   140008a6a:	jne    0x140008a72
   140008a6c:	call   QWORD PTR [rip+0x17de]        # 0x14000a250
   140008a72:	mov    QWORD PTR [rbp+0x78],rax
   140008a76:	lea    rax,[rip+0xffffffffffffb736]        # 0x1400041b3
   140008a7d:	add    rsp,0x20
   140008a81:	pop    rbp
   140008a82:	ret    
   140008a83:	int3   
   140008a84:	mov    QWORD PTR [rsp+0x10],rdx
   140008a89:	push   rbp
   140008a8a:	sub    rsp,0x20
   140008a8e:	mov    rbp,rdx
   140008a91:	xor    r8d,r8d
   140008a94:	mov    dl,0x1
   140008a96:	mov    rcx,QWORD PTR [rbp+0x60]
   140008a9a:	call   0x140003ac0
   140008a9f:	xor    edx,edx
   140008aa1:	xor    ecx,ecx
   140008aa3:	call   0x1400085cc
   140008aa8:	nop
   140008aa9:	int3   
   140008aaa:	int3   
   140008aab:	int3   
   140008aac:	int3   
   140008aad:	int3   
   140008aae:	int3   
   140008aaf:	mov    QWORD PTR [rsp+0x10],rdx
   140008ab4:	push   rbp
   140008ab5:	sub    rsp,0x20
   140008ab9:	mov    rbp,rdx
   140008abc:	mov    rcx,QWORD PTR [rbp+0x68]
   140008ac0:	mov    QWORD PTR [rbp+0x68],rcx
   140008ac4:	xor    eax,eax
   140008ac6:	add    rcx,0x1
   140008aca:	je     0x140008aee
   140008acc:	movabs rax,0x7fffffffffffffff
   140008ad6:	cmp    rcx,rax
   140008ad9:	ja     0x140008ae8
   140008adb:	add    rcx,rcx
   140008ade:	call   0x140007a8c
   140008ae3:	test   rax,rax
   140008ae6:	jne    0x140008aee
   140008ae8:	call   QWORD PTR [rip+0x1762]        # 0x14000a250
   140008aee:	mov    QWORD PTR [rbp+0x78],rax
   140008af2:	lea    rax,[rip+0xffffffffffffb889]        # 0x140004382
   140008af9:	add    rsp,0x20
   140008afd:	pop    rbp
   140008afe:	ret    
   140008aff:	int3   
   140008b00:	mov    QWORD PTR [rsp+0x10],rdx
   140008b05:	push   rbp
   140008b06:	sub    rsp,0x20
   140008b0a:	mov    rbp,rdx
   140008b0d:	xor    r8d,r8d
   140008b10:	mov    dl,0x1
   140008b12:	mov    rcx,QWORD PTR [rbp+0x60]
   140008b16:	call   0x140003c4c
   140008b1b:	xor    edx,edx
   140008b1d:	xor    ecx,ecx
   140008b1f:	call   0x1400085cc
   140008b24:	nop
   140008b25:	int3   
   140008b26:	int3   
   140008b27:	int3   
   140008b28:	int3   
   140008b29:	int3   
   140008b2a:	int3   
   140008b2b:	mov    QWORD PTR [rsp+0x10],rdx
   140008b30:	push   rbp
   140008b31:	sub    rsp,0x30
   140008b35:	mov    rbp,rdx
   140008b38:	mov    rdx,QWORD PTR [rbp+0x78]
   140008b3c:	call   0x140003cbc
   140008b41:	xor    edx,edx
   140008b43:	xor    ecx,ecx
   140008b45:	call   0x1400085cc
   140008b4a:	nop
   140008b4b:	int3   
   140008b4c:	int3   
   140008b4d:	int3   
   140008b4e:	int3   
   140008b4f:	int3   
   140008b50:	int3   
   140008b51:	mov    QWORD PTR [rsp+0x10],rdx
   140008b56:	push   rbx
   140008b57:	push   rbp
   140008b58:	sub    rsp,0x28
   140008b5c:	mov    rbp,rdx
   140008b5f:	mov    rbx,QWORD PTR [rbp+0x58]
   140008b63:	jmp    0x140008b8b
   140008b65:	cmp    QWORD PTR [rbx+0x18],0x8
   140008b6a:	jb     0x140008b75
   140008b6c:	mov    rcx,QWORD PTR [rbx]
   140008b6f:	call   QWORD PTR [rip+0x179b]        # 0x14000a310
   140008b75:	mov    QWORD PTR [rbx+0x18],0x7
   140008b7d:	and    QWORD PTR [rbx+0x10],0x0
   140008b82:	xor    eax,eax
   140008b84:	mov    WORD PTR [rbx],ax
   140008b87:	add    rbx,0x20
   140008b8b:	cmp    rbx,QWORD PTR [rbp+0x50]
   140008b8f:	jne    0x140008b65
   140008b91:	xor    edx,edx
   140008b93:	xor    ecx,ecx
   140008b95:	call   0x1400085cc
   140008b9a:	nop
   140008b9b:	int3   
   140008b9c:	int3   
   140008b9d:	int3   
   140008b9e:	int3   
   140008b9f:	int3   
   140008ba0:	int3   
   140008ba1:	lea    rcx,[rdx+0x38]
   140008ba8:	jmp    0x140003960
   140008bad:	lea    rcx,[rdx+0x60]
   140008bb4:	jmp    0x140003928
   140008bb9:	int3   
   140008bba:	int3   
   140008bbb:	int3   
   140008bbc:	int3   
   140008bbd:	int3   
   140008bbe:	int3   
   140008bbf:	lea    rcx,[rdx+0x48]
   140008bc6:	jmp    0x140005170
   140008bcb:	lea    rcx,[rdx+0x60]
   140008bd2:	jmp    0x140005b98
   140008bd7:	lea    rcx,[rdx+0x58]
   140008bde:	jmp    0x140005b98
   140008be3:	lea    rcx,[rdx+0x68]
   140008bea:	jmp    0x140003928
   140008bef:	int3   
   140008bf0:	int3   
   140008bf1:	int3   
   140008bf2:	int3   
   140008bf3:	int3   
   140008bf4:	int3   
   140008bf5:	rex push rbp
   140008bf7:	sub    rsp,0x20
   140008bfb:	mov    rbp,rdx
   140008bfe:	mov    eax,DWORD PTR [rbp+0x48]
   140008c01:	and    eax,0x1
   140008c04:	test   eax,eax
   140008c06:	je     0x140008c18
   140008c08:	and    DWORD PTR [rbp+0x48],0xfffffffe
   140008c0c:	mov    rcx,QWORD PTR [rbp+0xc8]
   140008c13:	call   0x140003994
   140008c18:	add    rsp,0x20
   140008c1c:	pop    rbp
   140008c1d:	ret    
   140008c1e:	mov    rcx,QWORD PTR [rdx+0xe0]
   140008c25:	rex.W jmp QWORD PTR [rip+0x16e4]        # 0x14000a310
   140008c2c:	mov    rcx,QWORD PTR [rdx+0x38]
   140008c33:	jmp    0x140003928
   140008c38:	lea    rcx,[rdx+0xe8]
   140008c3f:	jmp    0x140003928
   140008c44:	lea    rcx,[rdx+0x78]
   140008c4b:	jmp    0x140003960
   140008c50:	lea    rcx,[rdx+0xa0]
   140008c57:	jmp    0x140005b74
   140008c5c:	lea    rcx,[rdx+0x58]
   140008c63:	jmp    0x140003960
   140008c68:	mov    rcx,QWORD PTR [rdx+0x98]
   140008c6f:	rex.W jmp QWORD PTR [rip+0x169a]        # 0x14000a310
   140008c76:	mov    rcx,QWORD PTR [rdx+0x38]
   140008c7d:	jmp    0x140003928
   140008c82:	int3   
   140008c83:	int3   
   140008c84:	int3   
   140008c85:	int3   
   140008c86:	int3   
   140008c87:	int3   
   140008c88:	mov    QWORD PTR [rsp+0x10],rdx
   140008c8d:	push   rbp
   140008c8e:	sub    rsp,0x30
   140008c92:	mov    rbp,rdx
   140008c95:	mov    rdx,QWORD PTR [rbp+0x78]
   140008c99:	call   0x140003cbc
   140008c9e:	xor    edx,edx
   140008ca0:	xor    ecx,ecx
   140008ca2:	call   0x1400085cc
   140008ca7:	nop
   140008ca8:	int3   
   140008ca9:	int3   
   140008caa:	int3   
   140008cab:	int3   
   140008cac:	int3   
   140008cad:	int3   
   140008cae:	mov    QWORD PTR [rsp+0x10],rdx
   140008cb3:	push   rbx
   140008cb4:	push   rbp
   140008cb5:	push   rdi
   140008cb6:	sub    rsp,0x20
   140008cba:	mov    rbp,rdx
   140008cbd:	mov    rbx,QWORD PTR [rbp+0x58]
   140008cc1:	jmp    0x140008ce0
   140008cc3:	mov    rdi,QWORD PTR [rbx]
   140008cc6:	test   rdi,rdi
   140008cc9:	je     0x140008cdc
   140008ccb:	mov    rcx,rdi
   140008cce:	call   0x140006274
   140008cd3:	mov    rcx,rdi
   140008cd6:	call   QWORD PTR [rip+0x1634]        # 0x14000a310
   140008cdc:	add    rbx,0x8
   140008ce0:	cmp    rbx,QWORD PTR [rbp+0x50]
   140008ce4:	jne    0x140008cc3
   140008ce6:	xor    edx,edx
   140008ce8:	xor    ecx,ecx
   140008cea:	call   0x1400085cc
   140008cef:	nop
   140008cf0:	int3   
   140008cf1:	int3   
   140008cf2:	int3   
   140008cf3:	int3   
   140008cf4:	int3   
   140008cf5:	int3   
   140008cf6:	mov    rcx,QWORD PTR [rdx+0x50]
   140008cfd:	jmp    0x140003928
   140008d02:	mov    rcx,QWORD PTR [rdx+0x48]
   140008d09:	jmp    0x140003928
   140008d0e:	mov    rcx,QWORD PTR [rdx+0x30]
   140008d15:	add    rcx,0x8
   140008d19:	jmp    0x140003928
   140008d1e:	mov    rcx,QWORD PTR [rdx+0x30]
   140008d25:	add    rcx,0x28
   140008d29:	jmp    0x140003928
   140008d2e:	mov    rcx,QWORD PTR [rdx+0x30]
   140008d35:	add    rcx,0x48
   140008d39:	jmp    0x140003928
   140008d3e:	mov    rcx,QWORD PTR [rdx+0x30]
   140008d45:	add    rcx,0x68
   140008d49:	jmp    0x140003928
   140008d4e:	mov    rcx,QWORD PTR [rdx+0x30]
   140008d55:	add    rcx,0x88
   140008d5c:	jmp    0x140003928
   140008d61:	mov    rcx,QWORD PTR [rdx+0x30]
   140008d68:	add    rcx,0xa8
   140008d6f:	jmp    0x140003928
   140008d74:	mov    rcx,QWORD PTR [rdx+0x30]
   140008d7b:	add    rcx,0xc8
   140008d82:	jmp    0x140003928
   140008d87:	mov    rcx,QWORD PTR [rdx+0x30]
   140008d8e:	add    rcx,0xe8
   140008d95:	jmp    0x140007874
   140008d9a:	int3   
   140008d9b:	int3   
   140008d9c:	int3   
   140008d9d:	int3   
   140008d9e:	int3   
   140008d9f:	int3   
   140008da0:	mov    rcx,QWORD PTR [rdx+0x58]
   140008da7:	jmp    0x140003928
   140008dac:	lea    rcx,[rdx+0xb0]
   140008db3:	jmp    0x140003960
   140008db8:	lea    rcx,[rdx+0x48]
   140008dbf:	jmp    0x140007928
   140008dc4:	lea    rcx,[rdx+0x40]
   140008dcb:	jmp    0x140007960
   140008dd0:	int3   
   140008dd1:	int3   
   140008dd2:	int3   
   140008dd3:	int3   
   140008dd4:	int3   
   140008dd5:	int3   
   140008dd6:	mov    rcx,QWORD PTR [rdx+0x48]
   140008ddd:	jmp    0x140003928
   140008de2:	mov    QWORD PTR [rsp+0x10],rdx
   140008de7:	push   rbp
   140008de8:	sub    rsp,0x30
   140008dec:	mov    rbp,rdx
   140008def:	cmp    DWORD PTR [rip+0x523a],0x2        # 0x14000e030
   140008df6:	jbe    0x140008e8e
   140008dfc:	mov    rax,QWORD PTR [rbp+0x38]
   140008e00:	add    rax,0x28
   140008e04:	cmp    QWORD PTR [rax+0x18],0x8
   140008e09:	jb     0x140008e0e
   140008e0b:	mov    rax,QWORD PTR [rax]
   140008e0e:	lea    rdx,[rip+0x172b]        # 0x14000a540
   140008e15:	xor    ecx,ecx
   140008e17:	test   rax,rax
   140008e1a:	je     0x140008e2d
   140008e1c:	mov    rdx,rax
   140008e1f:	or     rcx,0xffffffffffffffff
   140008e23:	inc    rcx
   140008e26:	cmp    WORD PTR [rax+rcx*2],0x0
   140008e2b:	jne    0x140008e23
   140008e2d:	mov    QWORD PTR [rbp+0x70],rdx
   140008e31:	lea    eax,[rcx*2+0x2]
   140008e38:	mov    DWORD PTR [rbp+0x78],eax
   140008e3b:	and    DWORD PTR [rbp+0x7c],0x0
   140008e3f:	call   0x140001e64
   140008e44:	mov    DWORD PTR [rbp+0x30],eax
   140008e47:	lea    rax,[rbp+0x30]
   140008e4b:	mov    QWORD PTR [rbp+0x80],rax
   140008e52:	mov    DWORD PTR [rbp+0x88],0x4
   140008e5c:	and    DWORD PTR [rbp+0x8c],0x0
   140008e63:	lea    rax,[rbp+0x50]
   140008e67:	mov    QWORD PTR [rsp+0x28],rax
   140008e6c:	mov    DWORD PTR [rsp+0x20],0x4
   140008e74:	xor    r9d,r9d
   140008e77:	xor    r8d,r8d
   140008e7a:	lea    rdx,[rip+0x2886]        # 0x14000b707
   140008e81:	lea    rcx,[rip+0x51a8]        # 0x14000e030
   140008e88:	call   0x140001008
   140008e8d:	nop
   140008e8e:	lea    rax,[rip+0xffffffffffffe151]        # 0x140006fe6
   140008e95:	add    rsp,0x30
   140008e99:	pop    rbp
   140008e9a:	ret    
   140008e9b:	int3   
   140008e9c:	int3   
   140008e9d:	int3   
   140008e9e:	int3   
   140008e9f:	int3   
   140008ea0:	int3   
   140008ea1:	int3   
   140008ea2:	lea    rcx,[rdx+0x28]
   140008ea9:	jmp    0x140007874
   140008eae:	int3   
   140008eaf:	int3   
   140008eb0:	int3   
   140008eb1:	int3   
   140008eb2:	int3   
   140008eb3:	int3   
   140008eb4:	lea    rcx,[rdx+0x38]
   140008ebb:	jmp    0x140003960
   140008ec0:	lea    rcx,[rdx+0x58]
   140008ec7:	jmp    0x140003928
   140008ecc:	int3   
   140008ecd:	int3   
   140008ece:	int3   
   140008ecf:	int3   
   140008ed0:	int3   
   140008ed1:	int3   
   140008ed2:	mov    QWORD PTR [rsp+0x10],rdx
   140008ed7:	push   rbp
   140008ed8:	sub    rsp,0x20
   140008edc:	mov    rbp,rdx
   140008edf:	mov    rdx,QWORD PTR [rbp+0x40]
   140008ee3:	call   0x140003cbc
   140008ee8:	xor    edx,edx
   140008eea:	xor    ecx,ecx
   140008eec:	call   0x1400085cc
   140008ef1:	nop
   140008ef2:	int3   
   140008ef3:	int3   
   140008ef4:	int3   
   140008ef5:	int3   
   140008ef6:	int3   
   140008ef7:	int3   
   140008ef8:	rex push rbp
   140008efa:	sub    rsp,0x20
   140008efe:	mov    rbp,rdx
   140008f01:	mov    rax,QWORD PTR [rcx]
   140008f04:	mov    rdx,rcx
   140008f07:	mov    ecx,DWORD PTR [rax]
   140008f09:	call   0x14000823e
   140008f0e:	nop
   140008f0f:	add    rsp,0x20
   140008f13:	pop    rbp
   140008f14:	ret    
   140008f15:	int3   
   140008f16:	int3   
   140008f17:	int3   
   140008f18:	int3   
   140008f19:	int3   
   140008f1a:	int3   
   140008f1b:	int3   
   140008f1c:	rex push rbp
   140008f1e:	sub    rsp,0x20
   140008f22:	mov    rbp,rdx
   140008f25:	mov    ecx,0x8
   140008f2a:	call   0x1400084ee
   140008f2f:	nop
   140008f30:	add    rsp,0x20
   140008f34:	pop    rbp
   140008f35:	ret    
   140008f36:	int3   
   140008f37:	int3   
   140008f38:	int3   
   140008f39:	int3   
   140008f3a:	int3   
   140008f3b:	int3   
   140008f3c:	int3   
   140008f3d:	int3   
   140008f3e:	int3   
   140008f3f:	int3   
   140008f40:	rex push rbp
   140008f42:	sub    rsp,0x20
   140008f46:	mov    rbp,rdx
   140008f49:	mov    rax,QWORD PTR [rcx]
   140008f4c:	xor    ecx,ecx
   140008f4e:	cmp    DWORD PTR [rax],0xc0000005
   140008f54:	sete   cl
   140008f57:	mov    eax,ecx
   140008f59:	add    rsp,0x20
   140008f5d:	pop    rbp
   140008f5e:	ret    
   140008f5f:	int3   
   140008f60:	int3   
   140008f61:	int3   
   140008f62:	int3   
   140008f63:	int3   
   140008f64:	int3   
   140008f65:	int3   
   140008f66:	int3   
   140008f67:	int3   
   140008f68:	int3   
   140008f69:	int3   
   140008f6a:	int3   
   140008f6b:	int3   
   140008f6c:	int3   
   140008f6d:	int3   
   140008f6e:	int3   
   140008f6f:	int3   
   140008f70:	mov    QWORD PTR [rsp+0x8],rbx
   140008f75:	push   rdi
   140008f76:	sub    rsp,0x20
   140008f7a:	lea    rbx,[rip+0x582f]        # 0x14000e7b0
   140008f81:	mov    rdi,QWORD PTR [rbx]
   140008f84:	jmp    0x140008f93
   140008f86:	mov    rcx,rdi
   140008f89:	mov    rdi,QWORD PTR [rdi+0x10]
   140008f8d:	call   QWORD PTR [rip+0x13b5]        # 0x14000a348
   140008f93:	test   rdi,rdi
   140008f96:	jne    0x140008f86
   140008f98:	mov    QWORD PTR [rbx],rdi
   140008f9b:	lea    rax,[rip+0x58ae]        # 0x14000e850
   140008fa2:	add    rbx,0x8
   140008fa6:	cmp    rbx,rax
   140008fa9:	jne    0x140008f81
   140008fab:	mov    rbx,QWORD PTR [rsp+0x30]
   140008fb0:	add    rsp,0x20
   140008fb4:	pop    rdi
   140008fb5:	ret    
   140008fb6:	int3   
   140008fb7:	int3   
   140008fb8:	int3   
   140008fb9:	int3   
   140008fba:	int3   
   140008fbb:	int3   
   140008fbc:	int3   
   140008fbd:	int3   
   140008fbe:	int3   
   140008fbf:	int3   
   140008fc0:	lea    rax,[rip+0x1a01]        # 0x14000a9c8
   140008fc7:	mov    QWORD PTR [rip+0x50a2],rax        # 0x14000e070
   140008fce:	ret    
   140008fcf:	int3   
   140008fd0:	int3   
   140008fd1:	int3   
   140008fd2:	int3   
   140008fd3:	int3   
   140008fd4:	int3   
   140008fd5:	int3   
   140008fd6:	int3   
   140008fd7:	int3   
   140008fd8:	int3   
   140008fd9:	int3   
   140008fda:	int3   
   140008fdb:	int3   
   140008fdc:	int3   
   140008fdd:	int3   
   140008fde:	int3   
   140008fdf:	int3   
   140008fe0:	lea    rax,[rip+0x19e1]        # 0x14000a9c8
   140008fe7:	mov    QWORD PTR [rip+0x508a],rax        # 0x14000e078
   140008fee:	ret    
   140008fef:	int3   
   140008ff0:	int3   
   140008ff1:	int3   
   140008ff2:	int3   
   140008ff3:	int3   
   140008ff4:	int3   
   140008ff5:	int3   
   140008ff6:	int3   
   140008ff7:	int3   
   140008ff8:	int3   
   140008ff9:	int3   
   140008ffa:	int3   
   140008ffb:	int3   
   140008ffc:	int3   
   140008ffd:	int3   
   140008ffe:	int3   
   140008fff:	int3   
   140009000:	lea    rax,[rip+0x19c1]        # 0x14000a9c8
   140009007:	mov    QWORD PTR [rip+0x507a],rax        # 0x14000e088
   14000900e:	ret    

Disassembly of section .rdata:

000000014000a000 <.rdata>:
   14000a000:	xlat   BYTE PTR fs:[rbx]
   14000a002:	add    BYTE PTR [rax],al
   14000a004:	add    BYTE PTR [rax],al
   14000a006:	add    BYTE PTR [rax],al
   14000a008:	pushf  
   14000a009:	(bad)  
   14000a00a:	add    BYTE PTR [rax],al
   14000a00c:	add    BYTE PTR [rax],al
   14000a00e:	add    BYTE PTR [rax],al
   14000a010:	(bad)  
   14000a011:	(bad)  
	...
   14000a01e:	add    BYTE PTR [rax],al
   14000a020:	add    bh,dl
	...
   14000a02e:	add    BYTE PTR [rax],al
   14000a030:	(bad)  
   14000a031:	fadd   QWORD PTR [rax]
   14000a033:	add    BYTE PTR [rax],al
   14000a035:	add    BYTE PTR [rax],al
   14000a037:	add    ah,ch
   14000a039:	fadd   QWORD PTR [rax]
	...
   14000a047:	add    BYTE PTR [rdx],bh
   14000a049:	fadd   DWORD PTR [rax]
   14000a04b:	add    BYTE PTR [rax],al
   14000a04d:	add    BYTE PTR [rax],al
   14000a04f:	add    BYTE PTR [rsi-0x28],dl
   14000a052:	add    BYTE PTR [rax],al
   14000a054:	add    BYTE PTR [rax],al
   14000a056:	add    BYTE PTR [rax],al
   14000a058:	xor    bl,bl
	...
   14000a066:	add    BYTE PTR [rax],al
   14000a068:	outs   dx,BYTE PTR ds:[rsi]
   14000a069:	fild   DWORD PTR [rax]
   14000a06b:	add    BYTE PTR [rax],al
   14000a06d:	add    BYTE PTR [rax],al
   14000a06f:	add    dh,bl
   14000a071:	fiadd  DWORD PTR [rax]
   14000a073:	add    BYTE PTR [rax],al
   14000a075:	add    BYTE PTR [rax],al
   14000a077:	add    BYTE PTR [rdx-0x25],al
   14000a07a:	add    BYTE PTR [rax],al
   14000a07c:	add    BYTE PTR [rax],al
   14000a07e:	add    BYTE PTR [rax],al
   14000a080:	sbb    al,0xdb
   14000a082:	add    BYTE PTR [rax],al
   14000a084:	add    BYTE PTR [rax],al
   14000a086:	add    BYTE PTR [rax],al
   14000a088:	rcr    bl,0x0
   14000a08b:	add    BYTE PTR [rax],al
   14000a08d:	add    BYTE PTR [rax],al
   14000a08f:	add    al,ch
   14000a091:	fild   DWORD PTR [rax]
   14000a093:	add    BYTE PTR [rax],al
   14000a095:	add    BYTE PTR [rax],al
   14000a097:	add    ah,bh
   14000a099:	fild   DWORD PTR [rax]
	...
   14000a0a7:	add    BYTE PTR [rdx],cl
   14000a0a9:	fadd   QWORD PTR [rax]
	...
   14000a0b7:	add    BYTE PTR [rsi-0x29],cl
   14000a0ba:	add    BYTE PTR [rax],al
   14000a0bc:	add    BYTE PTR [rax],al
   14000a0be:	add    BYTE PTR [rax],al
   14000a0c0:	cmp    al,0xd7
   14000a0c2:	add    BYTE PTR [rax],al
   14000a0c4:	add    BYTE PTR [rax],al
   14000a0c6:	add    BYTE PTR [rax],al
   14000a0c8:	(bad)  
   14000a0c9:	xlat   BYTE PTR ds:[rbx]
   14000a0ca:	add    BYTE PTR [rax],al
   14000a0cc:	add    BYTE PTR [rax],al
   14000a0ce:	add    BYTE PTR [rax],al
   14000a0d0:	fcom   st(6)
   14000a0d2:	add    BYTE PTR [rax],al
   14000a0d4:	add    BYTE PTR [rax],al
   14000a0d6:	add    BYTE PTR [rax],al
   14000a0d8:	(bad)  
   14000a0d9:	(bad)  
	...
   14000a0e6:	add    BYTE PTR [rax],al
   14000a0e8:	sub    dl,bh
	...
   14000a0f6:	add    BYTE PTR [rax],al
   14000a0f8:	add    al,0xdb
   14000a0fa:	add    BYTE PTR [rax],al
   14000a0fc:	add    BYTE PTR [rax],al
   14000a0fe:	add    BYTE PTR [rax],al
   14000a100:	jle    0x14000a0dd
   14000a102:	add    BYTE PTR [rax],al
   14000a104:	add    BYTE PTR [rax],al
   14000a106:	add    BYTE PTR [rax],al
   14000a108:	lock fiadd DWORD PTR [rax]
   14000a10b:	add    BYTE PTR [rax],al
   14000a10d:	add    BYTE PTR [rax],al
   14000a10f:	add    ah,dl
   14000a111:	fild   DWORD PTR [rax]
	...
   14000a11f:	add    BYTE PTR [rbx+rbx*8+0x0],ah
	...
   14000a12e:	add    BYTE PTR [rax],al
   14000a130:	mov    dh,0xd8
   14000a132:	add    BYTE PTR [rax],al
   14000a134:	add    BYTE PTR [rax],al
   14000a136:	add    BYTE PTR [rax],al
   14000a138:	out    0xd7,al
   14000a13a:	add    BYTE PTR [rax],al
   14000a13c:	add    BYTE PTR [rax],al
   14000a13e:	add    BYTE PTR [rax],al
   14000a140:	mov    al,bl
   14000a142:	add    BYTE PTR [rax],al
   14000a144:	add    BYTE PTR [rax],al
   14000a146:	add    BYTE PTR [rax],al
   14000a148:	je     0x14000a122
   14000a14a:	add    BYTE PTR [rax],al
   14000a14c:	add    BYTE PTR [rax],al
   14000a14e:	add    BYTE PTR [rax],al
   14000a150:	jbe    0x14000a129
	...
   14000a15e:	add    BYTE PTR [rax],al
   14000a160:	pushf  
   14000a161:	fadd   DWORD PTR [rax]
	...
   14000a16f:	add    BYTE PTR [rsi+0xdb],dl
   14000a175:	add    BYTE PTR [rax],al
   14000a177:	add    BYTE PTR [rsi-0x25],cl
   14000a17a:	add    BYTE PTR [rax],al
   14000a17c:	add    BYTE PTR [rax],al
   14000a17e:	add    BYTE PTR [rax],al
   14000a180:	pop    rsi
   14000a181:	fild   DWORD PTR [rax]
	...
   14000a18f:	add    BYTE PTR [rsi],ah
   14000a191:	fadd   DWORD PTR [rax]
   14000a193:	add    BYTE PTR [rax],al
   14000a195:	add    BYTE PTR [rax],al
   14000a197:	add    BYTE PTR [rax+rbx*8],cl
   14000a19a:	add    BYTE PTR [rax],al
   14000a19c:	add    BYTE PTR [rax],al
   14000a19e:	add    BYTE PTR [rax],al
   14000a1a0:	clc    
   14000a1a1:	xlat   BYTE PTR ds:[rbx]
	...
   14000a1ae:	add    BYTE PTR [rax],al
   14000a1b0:	sub    bl,ch
	...
   14000a1be:	add    BYTE PTR [rax],al
   14000a1c0:	(bad)  
	...
   14000a1ce:	add    BYTE PTR [rax],al
   14000a1d0:	out    0xd8,al
   14000a1d2:	add    BYTE PTR [rax],al
   14000a1d4:	add    BYTE PTR [rax],al
   14000a1d6:	add    BYTE PTR [rax],al
   14000a1d8:	int3   
   14000a1d9:	fadd   DWORD PTR [rax]
	...
   14000a1e7:	add    BYTE PTR [rdi+rdx*8+0x0],cl
   14000a1ee:	add    BYTE PTR [rax],al
   14000a1f0:	mov    eax,0xd7
   14000a1f5:	add    BYTE PTR [rax],al
   14000a1f7:	add    dh,cl
   14000a1f9:	xlat   BYTE PTR ds:[rbx]
   14000a1fa:	add    BYTE PTR [rax],al
   14000a1fc:	add    BYTE PTR [rax],al
   14000a1fe:	add    BYTE PTR [rax],al
   14000a200:	mov    al,0xd6
   14000a202:	add    BYTE PTR [rax],al
   14000a204:	add    BYTE PTR [rax],al
   14000a206:	add    BYTE PTR [rax],al
   14000a208:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a209:	xlat   BYTE PTR ds:[rbx]
	...
   14000a216:	add    BYTE PTR [rax],al
   14000a218:	xchg   esi,eax
   14000a219:	fiadd  DWORD PTR [rax]
   14000a21b:	add    BYTE PTR [rax],al
   14000a21d:	add    BYTE PTR [rax],al
   14000a21f:	add    BYTE PTR [rax+0xda],dh
	...
   14000a22d:	add    BYTE PTR [rax],al
   14000a22f:	add    BYTE PTR [rax],dh
   14000a231:	(bad)  
   14000a232:	add    BYTE PTR [rax],al
   14000a234:	add    BYTE PTR [rax],al
   14000a236:	add    BYTE PTR [rax],al
   14000a238:	(bad)  
   14000a239:	(bad)  
   14000a23a:	add    BYTE PTR [rax],al
   14000a23c:	add    BYTE PTR [rax],al
   14000a23e:	add    BYTE PTR [rax],al
   14000a240:	lods   al,BYTE PTR ds:[rsi]
   14000a241:	(bad)  
   14000a242:	add    BYTE PTR [rax],al
   14000a244:	add    BYTE PTR [rax],al
   14000a246:	add    BYTE PTR [rax],al
   14000a248:	mov    dl,ah
   14000a24a:	add    BYTE PTR [rax],al
   14000a24c:	add    BYTE PTR [rax],al
   14000a24e:	add    BYTE PTR [rax],al
   14000a250:	jo     0x14000a226
   14000a252:	add    BYTE PTR [rax],al
   14000a254:	add    BYTE PTR [rax],al
   14000a256:	add    BYTE PTR [rax],al
   14000a258:	push   rax
   14000a259:	(bad)  
	...
   14000a266:	add    BYTE PTR [rax],al
   14000a268:	test   dh,dl
   14000a26a:	add    BYTE PTR [rax],al
   14000a26c:	add    BYTE PTR [rax],al
   14000a26e:	add    BYTE PTR [rax],al
   14000a270:	jp     0x14000a248
   14000a272:	add    BYTE PTR [rax],al
   14000a274:	add    BYTE PTR [rax],al
   14000a276:	add    BYTE PTR [rax],al
   14000a278:	ins    BYTE PTR es:[rdi],dx
   14000a279:	(bad)  
   14000a27a:	add    BYTE PTR [rax],al
   14000a27c:	add    BYTE PTR [rax],al
   14000a27e:	add    BYTE PTR [rax],al
   14000a280:	(bad)  
   14000a281:	(bad)  
   14000a282:	add    BYTE PTR [rax],al
   14000a284:	add    BYTE PTR [rax],al
   14000a286:	add    BYTE PTR [rax],al
   14000a288:	pop    rdx
   14000a289:	(bad)  
   14000a28a:	add    BYTE PTR [rax],al
   14000a28c:	add    BYTE PTR [rax],al
   14000a28e:	add    BYTE PTR [rax],al
   14000a290:	rex.RX (bad) 
   14000a292:	add    BYTE PTR [rax],al
   14000a294:	add    BYTE PTR [rax],al
   14000a296:	add    BYTE PTR [rax],al
   14000a298:	cs (bad) 
   14000a29a:	add    BYTE PTR [rax],al
   14000a29c:	add    BYTE PTR [rax],al
   14000a29e:	add    BYTE PTR [rax],al
   14000a2a0:	and    al,0xd6
   14000a2a2:	add    BYTE PTR [rax],al
   14000a2a4:	add    BYTE PTR [rax],al
   14000a2a6:	add    BYTE PTR [rax],al
   14000a2a8:	sbb    dl,dh
   14000a2aa:	add    BYTE PTR [rax],al
   14000a2ac:	add    BYTE PTR [rax],al
   14000a2ae:	add    BYTE PTR [rax],al
   14000a2b0:	add    dl,dh
   14000a2b2:	add    BYTE PTR [rax],al
   14000a2b4:	add    BYTE PTR [rax],al
   14000a2b6:	add    BYTE PTR [rax],al
   14000a2b8:	not    ch
   14000a2ba:	add    BYTE PTR [rax],al
   14000a2bc:	add    BYTE PTR [rax],al
   14000a2be:	add    BYTE PTR [rax],al
   14000a2c0:	loop   0x14000a297
   14000a2c2:	add    BYTE PTR [rax],al
   14000a2c4:	add    BYTE PTR [rax],al
   14000a2c6:	add    BYTE PTR [rax],al
   14000a2c8:	fcom   st(5)
   14000a2ca:	add    BYTE PTR [rax],al
   14000a2cc:	add    BYTE PTR [rax],al
   14000a2ce:	add    BYTE PTR [rax],al
   14000a2d0:	rcl    ch,1
   14000a2d2:	add    BYTE PTR [rax],al
   14000a2d4:	add    BYTE PTR [rax],al
   14000a2d6:	add    BYTE PTR [rax],al
   14000a2d8:	enter  0xd5,0x0
   14000a2dc:	add    BYTE PTR [rax],al
   14000a2de:	add    BYTE PTR [rax],al
   14000a2e0:	mov    dh,0xd5
   14000a2e2:	add    BYTE PTR [rax],al
   14000a2e4:	add    BYTE PTR [rax],al
   14000a2e6:	add    BYTE PTR [rax],al
   14000a2e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a2e9:	(bad)  
   14000a2ea:	add    BYTE PTR [rax],al
   14000a2ec:	add    BYTE PTR [rax],al
   14000a2ee:	add    BYTE PTR [rax],al
   14000a2f0:	xchg   esi,eax
   14000a2f1:	(bad)  
   14000a2f2:	add    BYTE PTR [rax],al
   14000a2f4:	add    BYTE PTR [rax],al
   14000a2f6:	add    BYTE PTR [rax],al
   14000a2f8:	mov    ch,dl
   14000a2fa:	add    BYTE PTR [rax],al
   14000a2fc:	add    BYTE PTR [rax],al
   14000a2fe:	add    BYTE PTR [rax],al
   14000a300:	jl     0x14000a2d7
   14000a302:	add    BYTE PTR [rax],al
   14000a304:	add    BYTE PTR [rax],al
   14000a306:	add    BYTE PTR [rax],al
   14000a308:	jo     0x14000a2df
   14000a30a:	add    BYTE PTR [rax],al
   14000a30c:	add    BYTE PTR [rax],al
   14000a30e:	add    BYTE PTR [rax],al
   14000a310:	(bad)  
   14000a311:	(bad)  
   14000a312:	add    BYTE PTR [rax],al
   14000a314:	add    BYTE PTR [rax],al
   14000a316:	add    BYTE PTR [rax],al
   14000a318:	push   rsp
   14000a319:	(bad)  
   14000a31a:	add    BYTE PTR [rax],al
   14000a31c:	add    BYTE PTR [rax],al
   14000a31e:	add    BYTE PTR [rax],al
   14000a320:	enter  0xdc,0x0
   14000a324:	add    BYTE PTR [rax],al
   14000a326:	add    BYTE PTR [rax],al
   14000a328:	rex.RX (bad) 
   14000a32a:	add    BYTE PTR [rax],al
   14000a32c:	add    BYTE PTR [rax],al
   14000a32e:	add    BYTE PTR [rax],al
   14000a330:	xor    al,0xd5
   14000a332:	add    BYTE PTR [rax],al
   14000a334:	add    BYTE PTR [rax],al
   14000a336:	add    BYTE PTR [rax],al
   14000a338:	sub    dl,ch
   14000a33a:	add    BYTE PTR [rax],al
   14000a33c:	add    BYTE PTR [rax],al
   14000a33e:	add    BYTE PTR [rax],al
   14000a340:	and    ch,dl
   14000a342:	add    BYTE PTR [rax],al
   14000a344:	add    BYTE PTR [rax],al
   14000a346:	add    BYTE PTR [rax],al
   14000a348:	sbb    ch,dl
   14000a34a:	add    BYTE PTR [rax],al
   14000a34c:	add    BYTE PTR [rax],al
   14000a34e:	add    BYTE PTR [rax],al
   14000a350:	(bad)  
   14000a351:	(bad)  
   14000a352:	add    BYTE PTR [rax],al
   14000a354:	add    BYTE PTR [rax],al
   14000a356:	add    BYTE PTR [rax],al
   14000a358:	push   0xdd
   14000a35d:	add    BYTE PTR [rax],al
   14000a35f:	add    BYTE PTR [rsi-0x23],bh
   14000a362:	add    BYTE PTR [rax],al
   14000a364:	add    BYTE PTR [rax],al
   14000a366:	add    BYTE PTR [rax],al
   14000a368:	xchg   esp,eax
   14000a369:	fld    QWORD PTR [rax]
   14000a36b:	add    BYTE PTR [rax],al
   14000a36d:	add    BYTE PTR [rax],al
   14000a36f:	add    BYTE PTR [rsi+0xdd],bl
	...
   14000a37d:	add    BYTE PTR [rax],al
   14000a37f:	add    BYTE PTR [rax],ah
   14000a381:	adc    al,BYTE PTR [rax]
   14000a383:	rex add DWORD PTR [rax],eax
   14000a386:	add    BYTE PTR [rax],al
   14000a388:	rex xchg DWORD PTR [rax],eax
   14000a38b:	rex add DWORD PTR [rax],eax
	...
   14000a396:	add    BYTE PTR [rax],al
   14000a398:	mov    al,0x7b
   14000a39a:	add    BYTE PTR [rax+0x1],al
   14000a39d:	add    BYTE PTR [rax],al
   14000a39f:	add    BYTE PTR [rax+0x1400011],al
   14000a3a5:	add    BYTE PTR [rax],al
   14000a3a7:	add    BYTE PTR [rax+0x1400011],dh
   14000a3ad:	add    BYTE PTR [rax],al
   14000a3af:	add    al,ah
   14000a3b1:	adc    DWORD PTR [rax],eax
   14000a3b3:	rex add DWORD PTR [rax],eax
   14000a3b6:	add    BYTE PTR [rax],al
   14000a3b8:	lock adc DWORD PTR [rax],eax
   14000a3bb:	rex add DWORD PTR [rax],eax
   14000a3be:	add    BYTE PTR [rax],al
   14000a3c0:	add    BYTE PTR [rdx],dl
   14000a3c2:	add    BYTE PTR [rax+0x1],al
	...
   14000a3d5:	add    BYTE PTR [rax],al
   14000a3d7:	add    al,dl
   14000a3d9:	jp     0x14000a3db
   14000a3db:	rex add DWORD PTR [rax],eax
   14000a3de:	add    BYTE PTR [rax],al
   14000a3e0:	and    BYTE PTR [rdx+0x14000],al
	...
   14000a3ee:	add    BYTE PTR [rax],al
   14000a3f0:	mov    al,0x10
   14000a3f2:	add    BYTE PTR [rax],al
   14000a3f4:	adc    BYTE PTR [rcx],0x0
   14000a3f7:	add    BYTE PTR [rax-0x1fffffef],dh
   14000a3fd:	adc    DWORD PTR [rax],eax
   14000a3ff:	add    al,dh
   14000a401:	adc    DWORD PTR [rax],eax
   14000a403:	add    BYTE PTR [rax],al
   14000a405:	adc    al,BYTE PTR [rax]
   14000a407:	add    BYTE PTR [rax],ah
   14000a409:	adc    al,BYTE PTR [rax]
   14000a40b:	add    BYTE PTR [rax],dh
   14000a40d:	adc    al,BYTE PTR [rax]
   14000a40f:	add    BYTE PTR [rax+0x12],ah
   14000a412:	add    BYTE PTR [rax],al
   14000a414:	adc    BYTE PTR [rdx],0x0
   14000a417:	add    al,dh
   14000a419:	adc    al,BYTE PTR [rax]
   14000a41b:	add    BYTE PTR [rax],dl
   14000a41d:	adc    eax,DWORD PTR [rax]
   14000a41f:	add    BYTE PTR [rax],ah
   14000a421:	adc    eax,DWORD PTR [rax]
   14000a423:	add    BYTE PTR [rax+0x13],ah
   14000a426:	add    BYTE PTR [rax],al
   14000a428:	jo     0x14000a43d
   14000a42a:	add    BYTE PTR [rax],al
   14000a42c:	mov    al,0x13
   14000a42e:	add    BYTE PTR [rax],al
   14000a430:	rcl    BYTE PTR [rbx],0x0
   14000a433:	add    BYTE PTR [rax],al
   14000a435:	adc    al,0x0
   14000a437:	add    BYTE PTR [rax+0x17],dh
   14000a43a:	add    BYTE PTR [rax],al
   14000a43c:	nop
   14000a43d:	(bad)  
   14000a43e:	add    BYTE PTR [rax],al
   14000a440:	movabs al,ds:0x70000018f0000018
   14000a449:	and    eax,0x47700000
   14000a44e:	add    BYTE PTR [rax],al
   14000a450:	mov    al,0x4a
   14000a452:	add    BYTE PTR [rax],al
   14000a454:	rex
   14000a455:	add    BYTE PTR fs:[rax],al
   14000a458:	shl    BYTE PTR [rdi+0x0],1
   14000a45b:	add    BYTE PTR [rax+0x6e],dl
   14000a45e:	add    BYTE PTR [rax],al
   14000a460:	jo     0x14000a4d3
   14000a462:	add    BYTE PTR [rax],al
   14000a464:	shl    BYTE PTR [rdx+0x0],0x0
   14000a468:	shl    BYTE PTR [rbx+0x0],0x0
   14000a46c:	add    BYTE PTR [rbp+0x0],dh
   14000a46f:	add    BYTE PTR [rax+0x7a],dl
   14000a472:	add    BYTE PTR [rax],al
   14000a474:	sar    BYTE PTR [rdx+0x0],1
   14000a477:	add    BYTE PTR [rax-0x7fffff85],dh
   14000a47d:	jle    0x14000a47f
   14000a47f:	add    BYTE PTR [rax+0x1000007f],dh
   14000a485:	add    BYTE PTR [rax],0x0
   14000a488:	nop
   14000a489:	add    DWORD PTR [rax],0x81e000
   14000a48f:	add    BYTE PTR [rax],ah
   14000a491:	(bad)  
   14000a492:	add    BYTE PTR [rax],al
   14000a494:	rol    BYTE PTR [rax+rax*1+0x851000],0x0
   14000a49c:	xor    BYTE PTR [rbp-0x7a400000],al
   14000a4a2:	add    BYTE PTR [rax],al
   14000a4a4:	jo     0x14000a435
   14000a4a6:	add    BYTE PTR [rax],al
   14000a4a8:	ror    BYTE PTR [rdi-0x70200000],0x0
   14000a4af:	add    BYTE PTR [rax],al
   14000a4b1:	nop
	...
   14000a4be:	add    BYTE PTR [rax],al
   14000a4c0:	and    cl,ah
   14000a4c2:	add    BYTE PTR [rax+0x1],al
   14000a4c5:	add    BYTE PTR [rax],al
   14000a4c7:	add    al,al
   14000a4c9:	loope  0x14000a4cb
   14000a4cb:	rex add DWORD PTR [rax],eax
   14000a4ce:	add    BYTE PTR [rax],al
   14000a4d0:	nop
   14000a4d1:	add    DWORD PTR [rax],0x140
	...
   14000a4df:	add    BYTE PTR [rax+0x72],dh
   14000a4e2:	outs   dx,DWORD PTR ds:[rsi]
   14000a4e3:	jbe    0x14000a555
   14000a4e5:	(bad)  
   14000a4e6:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000a4e9:	addr32 gs (bad) 
   14000a4ec:	jo     0x14000a557
   14000a4ee:	fs ins BYTE PTR es:[rdi],dx
   14000a4f0:	ins    BYTE PTR es:[rdi],dx
   14000a4f1:	cs fs ins BYTE PTR es:[rdi],dx
   14000a4f4:	ins    BYTE PTR es:[rdi],dx
   14000a4f5:	add    BYTE PTR [rax],al
   14000a4f7:	add    BYTE PTR [rdi+0x65],ah
   14000a4fa:	outs   dx,BYTE PTR ds:[rsi]
   14000a4fb:	gs jb  0x14000a567
   14000a4fe:	movsxd eax,DWORD PTR [rax]
   14000a500:	jne    0x14000a570
   14000a502:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000a506:	outs   dx,BYTE PTR ds:[rsi]
   14000a507:	and    BYTE PTR [rbp+0x72],ah
   14000a50a:	jb     0x14000a57b
   14000a50c:	jb     0x14000a50e
   14000a50e:	add    BYTE PTR [rax],al
   14000a510:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000a517:	ins    DWORD PTR es:[rdi],dx
	...
   14000a520:	imul   ebp,DWORD PTR [rdi+0x73],0x61657274
   14000a527:	ins    DWORD PTR es:[rdi],dx
   14000a528:	and    BYTE PTR [rbx+0x74],dh
   14000a52b:	jb     0x14000a592
   14000a52d:	(bad)  
   14000a52e:	ins    DWORD PTR es:[rdi],dx
   14000a52f:	and    BYTE PTR [rbp+0x72],ah
   14000a532:	jb     0x14000a5a3
   14000a534:	jb     0x14000a536
   14000a536:	add    BYTE PTR [rax],al
   14000a538:	jae    0x14000a5b3
   14000a53a:	jae    0x14000a5b0
   14000a53c:	gs ins DWORD PTR es:[rdi],dx
	...
   14000a546:	add    BYTE PTR [rax],al
   14000a548:	rex.RB js 0x14000a5ae
   14000a54b:	gs jo  0x14000a5c2
   14000a54e:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000a555:	add    BYTE PTR [rax],al
   14000a557:	add    BYTE PTR [rdx+0x65],dl
   14000a55a:	je     0x14000a5d1
   14000a55c:	jb     0x14000a5cc
   14000a55e:	rex.W jb 0x14000a561
   14000a561:	add    BYTE PTR [rax],al
   14000a563:	add    BYTE PTR [rax],al
   14000a565:	add    BYTE PTR [rax],al
   14000a567:	add    BYTE PTR [rdx+0x65],dl
   14000a56a:	je     0x14000a5e1
   14000a56c:	jb     0x14000a5dc
   14000a56e:	rex.W jb 0x14000a5cc
   14000a571:	push   rax
   14000a572:	jb     0x14000a5d9
   14000a574:	push   rdx
   14000a575:	gs ins BYTE PTR es:[rdi],dx
   14000a577:	gs (bad) 
   14000a579:	jae    0x14000a5e0
   14000a57b:	pop    rbp
   14000a57c:	add    BYTE PTR [rax],al
   14000a57e:	add    BYTE PTR [rax],al
   14000a580:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000a582:	addr32 rex.W jb 0x14000a586
   14000a586:	add    BYTE PTR [rax],al
   14000a588:	rex.RX (bad) 
   14000a58a:	imul   ebp,DWORD PTR [rsi+rax*2+0x61],0x7473
   14000a592:	add    BYTE PTR [rax],al
   14000a594:	add    BYTE PTR [rax],al
   14000a596:	add    BYTE PTR [rax],al
   14000a598:	and    eax,0x73006800
   14000a59d:	add    BYTE PTR [rax],ch
   14000a59f:	add    BYTE PTR [rip+0x29006400],ah        # 0x1690109a5
   14000a5a5:	add    BYTE PTR [rax+rax*1+0x25],bl
   14000a5a9:	add    BYTE PTR [rax+0x0],ch
   14000a5ac:	jae    0x14000a5ae
   14000a5ae:	and    DWORD PTR [rax],eax
   14000a5b0:	and    eax,0x3a007000
   14000a5b5:	add    BYTE PTR [rax],ah
	...
   14000a5bf:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3010dc5
   14000a5c5:	add    BYTE PTR [rcx],ah
   14000a5c7:	add    BYTE PTR [rip+0x3a007000],ah        # 0x17a0115cd
   14000a5cd:	add    BYTE PTR [rax],ah
	...
   14000a5d7:	add    BYTE PTR [rax],ch
   14000a5d9:	add    BYTE PTR [rbx+0x0],ah
   14000a5dc:	(bad)  
   14000a5dd:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a5e1:	add    BYTE PTR [rbp+0x0],ah
   14000a5e4:	jb     0x14000a5e6
   14000a5e6:	cmp    al,BYTE PTR [rax]
   14000a5e8:	and    BYTE PTR [rax],al
   14000a5ea:	and    eax,0x29007000
   14000a5ef:	add    BYTE PTR [rax],ah
   14000a5f1:	add    BYTE PTR [rax],al
   14000a5f3:	add    BYTE PTR [rax],al
   14000a5f5:	add    BYTE PTR [rax],al
   14000a5f7:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3010dfd
   14000a5fd:	add    BYTE PTR [rax],ch
   14000a5ff:	add    BYTE PTR [rip+0x29006400],ah        # 0x169010a05
   14000a605:	add    BYTE PTR [rax],ah
   14000a607:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a60b:	add    BYTE PTR [rax+rax*1+0x28],ah
   14000a60f:	add    BYTE PTR [rip+0x29007800],ah        # 0x169011e15
   14000a615:	add    BYTE PTR [rax],ah
   14000a617:	add    BYTE PTR [rip+0x38003000],ah        # 0x17800d61d
   14000a61d:	add    BYTE PTR [rax+0x0],bl
   14000a620:	and    BYTE PTR [rax],al
   14000a622:	and    eax,0x73007700
	...
   14000a62f:	add    BYTE PTR [rax],ah
   14000a631:	add    BYTE PTR [rax],ah
   14000a633:	add    BYTE PTR [rax],ah
   14000a635:	add    BYTE PTR [rax],ah
	...
   14000a63f:	add    BYTE PTR [rbp+0x0],cl
   14000a642:	jae    0x14000a644
   14000a644:	add    BYTE PTR [edx],bh
   14000a647:	add    BYTE PTR [rbx+0x0],bl
   14000a64a:	and    eax,0x73007700
   14000a64f:	add    BYTE PTR [rbp+0x0],bl
   14000a652:	and    BYTE PTR [rax],al
   14000a654:	add    BYTE PTR [rax],al
   14000a656:	add    BYTE PTR [rax],al
   14000a658:	rex.XB add BYTE PTR [r9+0x0],spl
   14000a65c:	ins    BYTE PTR es:[rdi],dx
   14000a65d:	add    BYTE PTR [rax+rax*1+0x43],ch
   14000a661:	add    BYTE PTR [rdi+0x0],ch
   14000a664:	outs   dx,BYTE PTR ds:[rsi]
   14000a665:	add    BYTE PTR [rax+rax*1+0x65],dh
   14000a669:	add    BYTE PTR [rax+0x0],bh
   14000a66c:	je     0x14000a66e
   14000a66e:	cmp    al,BYTE PTR [rax]
   14000a670:	pop    rbx
   14000a671:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3010e77
   14000a677:	add    BYTE PTR [rbp+0x0],bl
   14000a67a:	and    BYTE PTR [rax],al
   14000a67c:	add    BYTE PTR [rax],al
   14000a67e:	add    BYTE PTR [rax],al
   14000a680:	pop    rbx
   14000a681:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3010e87
   14000a687:	add    BYTE PTR [rax],ch
   14000a689:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3010e8f
   14000a68f:	add    BYTE PTR [rcx],ch
   14000a691:	add    BYTE PTR [rbp+0x0],bl
   14000a694:	or     al,BYTE PTR [rax]
   14000a696:	add    BYTE PTR [rax],al
   14000a698:	pop    rbx
   14000a699:	add    BYTE PTR [rip+0x73006800],ah        # 0x1b3010e9f
   14000a69f:	add    BYTE PTR [rbp+0x0],bl
   14000a6a2:	or     al,BYTE PTR [rax]
   14000a6a4:	add    BYTE PTR [rax],al
   14000a6a6:	add    BYTE PTR [rax],al
   14000a6a8:	or     al,BYTE PTR [rax]
   14000a6aa:	add    BYTE PTR [rax],al
   14000a6ac:	add    BYTE PTR [rax],al
   14000a6ae:	add    BYTE PTR [rax],al
   14000a6b0:	outs   dx,BYTE PTR ds:[rsi]
   14000a6b1:	add    BYTE PTR [rax+rax*1+0x64],dh
   14000a6b5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   14000a6b9:	add    BYTE PTR [rsi],ch
   14000a6bb:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14000a6bf:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000a6c3:	add    BYTE PTR [rax],al
   14000a6c5:	add    BYTE PTR [rax],al
   14000a6c7:	add    BYTE PTR [rsp+riz*2+0x72],cl
   14000a6cb:	rex.RX (bad) 
   14000a6cd:	jae    0x14000a743
   14000a6cf:	rex.RX (bad) 
   14000a6d1:	imul   ebp,DWORD PTR [rcx+rcx*2+0x6e],0x64616f4c
   14000a6d9:	gs jb  0x14000a71f
   14000a6dc:	(bad)  
   14000a6dd:	ins    BYTE PTR es:[rdi],dx
   14000a6de:	ins    BYTE PTR es:[rdi],dx
   14000a6df:	outs   dx,DWORD PTR ds:[rsi]
   14000a6e0:	jne    0x14000a756
   14000a6e2:	add    BYTE PTR [rax],al
   14000a6e4:	add    BYTE PTR [rax],al
   14000a6e6:	add    BYTE PTR [rax],al
   14000a6e8:	push   rdx
   14000a6e9:	je     0x14000a757
   14000a6eb:	rex.WRX je 0x14000a741
   14000a6ee:	je     0x14000a751
   14000a6f0:	je     0x14000a767
   14000a6f2:	jae    0x14000a748
   14000a6f4:	outs   dx,DWORD PTR ds:[rsi]
   14000a6f5:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000a6f7:	jae    0x14000a73e
   14000a6f9:	jb     0x14000a76d
   14000a6fb:	outs   dx,DWORD PTR ds:[rsi]
   14000a6fc:	jb     0x14000a74c
   14000a6fe:	outs   dx,DWORD PTR ds:[rsi]
   14000a6ff:	push   rsp
   14000a700:	gs (bad) 
   14000a702:	add    BYTE PTR [rax],al
   14000a704:	add    BYTE PTR [rax],al
   14000a706:	add    BYTE PTR [rax],al
   14000a708:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000a70f:	ins    BYTE PTR es:[rdi],dx
   14000a710:	pop    rsp
   14000a711:	jae    0x14000a777
   14000a713:	imul   ebx,DWORD PTR [rcx+rbp*2+0x6e],0x63
   14000a718:	pop    rsp
   14000a719:	ja     0x14000a784
   14000a71b:	ins    BYTE PTR es:[rdi],dx
   14000a71c:	pop    rsp
   14000a71d:	jb     0x14000a784
   14000a71f:	jae    0x14000a796
   14000a721:	ins    BYTE PTR es:[rdi],dx
   14000a722:	je     0x14000a752
   14000a724:	push   0x61000000
   14000a729:	add    BYTE PTR [rax+rax*1+0x64],ah
   14000a72d:	add    BYTE PTR [rax],al
   14000a72f:	add    BYTE PTR [rbx+0x0],ch
   14000a732:	add    BYTE PTR gs:[rcx+0x0],bh
   14000a736:	add    BYTE PTR [rax],al
   14000a738:	ins    BYTE PTR es:[rdi],dx
   14000a739:	add    BYTE PTR [rcx+0x0],ch
   14000a73c:	jae    0x14000a73e
   14000a73e:	je     0x14000a740
	...
   14000a748:	add    BYTE PTR fs:[rbp+0x0],ah
   14000a74c:	ins    BYTE PTR es:[rdi],dx
   14000a74d:	add    BYTE PTR [rbp+0x0],ah
   14000a750:	je     0x14000a752
   14000a752:	add    BYTE PTR gs:[rax],al
   14000a755:	add    BYTE PTR [rax],al
   14000a757:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000a75b:	add    BYTE PTR [rdx+0x0],dh
   14000a75e:	outs   dx,BYTE PTR ds:[rsi]
	...
   14000a767:	add    BYTE PTR [rcx+0x64],ah
   14000a76a:	ins    DWORD PTR es:[rdi],dx
   14000a76b:	imul   ebp,DWORD PTR [rsi+0x5c],0x766f7270
   14000a772:	pop    rsp
   14000a773:	jo     0x14000a7e7
   14000a775:	outs   dx,DWORD PTR ds:[rsi]
   14000a776:	jbe    0x14000a7ec
   14000a778:	outs   dx,DWORD PTR ds:[rsi]
   14000a779:	outs   dx,DWORD PTR ds:[rsi]
   14000a77a:	ins    BYTE PTR es:[rdi],dx
   14000a77b:	pop    rsp
   14000a77c:	jo     0x14000a7f0
   14000a77e:	outs   dx,DWORD PTR ds:[rsi]
   14000a77f:	jbe    0x14000a7f5
   14000a781:	outs   dx,DWORD PTR ds:[rsi]
   14000a782:	outs   dx,DWORD PTR ds:[rsi]
   14000a783:	ins    BYTE PTR es:[rdi],dx
   14000a784:	movsxd esi,DWORD PTR cs:[rax+0x70]
	...
   14000a790:	and    eax,0x3a007300
   14000a795:	add    BYTE PTR [rdx],cl
	...
   14000a79f:	add    BYTE PTR [rcx],cl
   14000a7a1:	add    BYTE PTR [rsi+0x0],cl
   14000a7a4:	(bad)  
   14000a7a5:	add    BYTE PTR [rbp+0x0],ch
   14000a7a8:	add    BYTE PTR gs:[rdx],bh
   14000a7ab:	add    BYTE PTR [rax],ah
   14000a7ad:	add    BYTE PTR [rip+0xa007300],ah        # 0x14a011ab3
   14000a7b3:	add    BYTE PTR [rax],al
   14000a7b5:	add    BYTE PTR [rax],al
   14000a7b7:	add    BYTE PTR [rcx],cl
   14000a7b9:	add    BYTE PTR [rsi+0x0],dl
   14000a7bc:	add    BYTE PTR gs:[rdx+0x0],dh
   14000a7c0:	jae    0x14000a7c2
   14000a7c2:	imul   eax,DWORD PTR [rax],0x6e006f
   14000a7c8:	cmp    al,BYTE PTR [rax]
   14000a7ca:	and    BYTE PTR [rax],al
   14000a7cc:	and    eax,0xa007300
   14000a7d1:	add    BYTE PTR [rax],al
   14000a7d3:	add    BYTE PTR [rax],al
   14000a7d5:	add    BYTE PTR [rax],al
   14000a7d7:	add    BYTE PTR [rcx],cl
   14000a7d9:	add    BYTE PTR [rcx+0x0],al
   14000a7dc:	ins    BYTE PTR es:[rdi],dx
   14000a7dd:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000a7e1:	add    BYTE PTR [rax+rax*1+0x75],dh
   14000a7e5:	add    BYTE PTR [rax+rax*1+0x65],ah
   14000a7e9:	add    BYTE PTR [rdx],bh
   14000a7eb:	add    BYTE PTR [rax],ah
   14000a7ed:	add    BYTE PTR [rip+0x75004900],ah        # 0x1b500f0f3
   14000a7f3:	add    BYTE PTR [rdx],cl
   14000a7f5:	add    BYTE PTR [rax],al
   14000a7f7:	add    BYTE PTR [rcx],cl
   14000a7f9:	add    BYTE PTR [rax+0x0],dl
   14000a7fc:	(bad)  
   14000a7fd:	add    BYTE PTR [rax+rax*1+0x68],dh
   14000a801:	add    BYTE PTR [rdx],bh
   14000a803:	add    BYTE PTR [rax],ah
   14000a805:	add    BYTE PTR [rip+0xa007300],ah        # 0x14a011b0b
   14000a80b:	add    BYTE PTR [rax],al
   14000a80d:	add    BYTE PTR [rax],al
   14000a80f:	add    BYTE PTR [rcx],cl
   14000a811:	add    BYTE PTR [rsi+0x0],al
   14000a814:	imul   eax,DWORD PTR [rax],0x65006c
   14000a81a:	outs   dx,BYTE PTR ds:[rsi]
   14000a81b:	add    BYTE PTR [rcx+0x0],ah
   14000a81e:	ins    DWORD PTR es:[rdi],dx
   14000a81f:	add    BYTE PTR [rbp+0x0],ah
   14000a822:	cmp    al,BYTE PTR [rax]
   14000a824:	and    BYTE PTR [rax],al
   14000a826:	and    eax,0xa007300
   14000a82b:	add    BYTE PTR [rax],al
   14000a82d:	add    BYTE PTR [rax],al
   14000a82f:	add    BYTE PTR [rax+0x0],dh
   14000a832:	(bad)  
   14000a833:	add    BYTE PTR [rbx+0x0],ah
   14000a836:	imul   eax,DWORD PTR [rax],0x61
   14000a839:	add    BYTE PTR [rdi+0x0],ah
   14000a83c:	add    BYTE PTR gs:[rax],ah
   14000a83f:	add    BYTE PTR [rbx+0x0],ah
   14000a842:	outs   dx,DWORD PTR ds:[rsi]
   14000a843:	add    BYTE PTR [rbp+0x0],dh
   14000a846:	outs   dx,BYTE PTR ds:[rsi]
   14000a847:	add    BYTE PTR [rax+rax*1+0x3a],dh
   14000a84b:	add    BYTE PTR [rip+0xa007500],ah        # 0x14a011d51
   14000a851:	add    BYTE PTR [rax],al
   14000a853:	add    BYTE PTR [rax],al
   14000a855:	add    BYTE PTR [rax],al
   14000a857:	add    BYTE PTR [rsi+0x65],dh
   14000a85a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000a85e:	cmp    al,0x54
   14000a860:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14000a865:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000a869:	add    BYTE PTR [eax],al
   14000a86c:	add    BYTE PTR [rax],al
   14000a86e:	add    BYTE PTR [rax],al
   14000a870:	jae    0x14000a8e6
   14000a872:	jb     0x14000a8dd
   14000a874:	outs   dx,BYTE PTR ds:[rsi]
   14000a875:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14000a87a:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000a87e:	add    BYTE PTR [ecx+0x6e],ch
   14000a882:	jbe    0x14000a8e5
   14000a884:	ins    BYTE PTR es:[rdi],dx
   14000a885:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x6e697274
   14000a88d:	and    BYTE PTR [eax+0x6f],dh
   14000a891:	jae    0x14000a8fc
   14000a893:	je     0x14000a8fe
   14000a895:	outs   dx,DWORD PTR ds:[rsi]
   14000a896:	outs   dx,BYTE PTR ds:[rsi]
   14000a897:	add    BYTE PTR [rax],dh
   14000a899:	adc    al,BYTE PTR [rax]
   14000a89b:	rex add DWORD PTR [rax],eax
   14000a89e:	add    BYTE PTR [rax],al
   14000a8a0:	adc    BYTE PTR [rbx],dl
   14000a8a2:	add    BYTE PTR [rax+0x1],al
   14000a8a5:	add    BYTE PTR [rax],al
   14000a8a7:	add    BYTE PTR [rax],ah
   14000a8a9:	adc    eax,DWORD PTR [rax]
   14000a8ab:	rex add DWORD PTR [rax],eax
   14000a8ae:	add    BYTE PTR [rax],al
   14000a8b0:	(bad)  
   14000a8b1:	adc    al,BYTE PTR [rax]
   14000a8b3:	rex add DWORD PTR [rax],eax
   14000a8b6:	add    BYTE PTR [rax],al
   14000a8b8:	lock adc al,BYTE PTR [rax]
   14000a8bb:	rex add DWORD PTR [rax],eax
   14000a8be:	add    BYTE PTR [rax],al
   14000a8c0:	adc    BYTE PTR [rdx],0x0
   14000a8c3:	rex add DWORD PTR [rax],eax
   14000a8c6:	add    BYTE PTR [rax],al
   14000a8c8:	cmp    eax,0xab905168
   14000a8cd:	xchg   edx,eax
   14000a8ce:	std    
   14000a8cf:	rex.WRXB movabs r11,0xc2e51aa1801f73
   14000a8d9:	add    BYTE PTR [rax],al
   14000a8db:	add    BYTE PTR [rax],al
   14000a8dd:	add    BYTE PTR [rax],al
   14000a8df:	add    BYTE PTR [rax],ch
   14000a8e1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a8e2:	add    BYTE PTR [rax+0x1],al
   14000a8e5:	add    BYTE PTR [rax],al
   14000a8e7:	add    BYTE PTR [rdx],al
	...
   14000a8f5:	add    BYTE PTR [rax],al
   14000a8f7:	add    BYTE PTR [rax],dh
   14000a8f9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a8fa:	add    BYTE PTR [rax+0x1],al
   14000a8fd:	add    BYTE PTR [rax],al
   14000a8ff:	add    BYTE PTR [rdx],al
   14000a901:	add    BYTE PTR [rax],al
   14000a903:	add    BYTE PTR [rax],al
   14000a905:	add    BYTE PTR [rax],al
   14000a907:	add    BYTE PTR [rax],dl
   14000a909:	add    BYTE PTR [rax],al
   14000a90b:	add    BYTE PTR [rax],al
   14000a90d:	add    BYTE PTR [rax],al
   14000a90f:	add    BYTE PTR [rax],bh
   14000a911:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a912:	add    BYTE PTR [rax+0x1],al
	...
   14000a91d:	add    BYTE PTR [rax],al
   14000a91f:	add    BYTE PTR [rax],ah
   14000a921:	add    BYTE PTR [rax],al
   14000a923:	add    BYTE PTR [rax],al
   14000a925:	add    BYTE PTR [rax],al
   14000a927:	add    BYTE PTR [rax-0x59],cl
   14000a92a:	add    BYTE PTR [rax+0x1],al
   14000a92d:	add    BYTE PTR [rax],al
   14000a92f:	add    BYTE PTR [rdx],al
   14000a931:	add    BYTE PTR [rax],al
   14000a933:	add    BYTE PTR [rax],al
   14000a935:	add    BYTE PTR [rax],al
   14000a937:	add    BYTE PTR [rax],ch
   14000a939:	add    BYTE PTR [rax],al
   14000a93b:	add    BYTE PTR [rax],al
   14000a93d:	add    BYTE PTR [rax],al
   14000a93f:	add    BYTE PTR [rax-0x59],bl
   14000a942:	add    BYTE PTR [rax+0x1],al
   14000a945:	add    BYTE PTR [rax],al
   14000a947:	add    BYTE PTR [rcx],al
   14000a949:	add    BYTE PTR [rax],al
   14000a94b:	add    BYTE PTR [rax],al
   14000a94d:	add    BYTE PTR [rax],al
   14000a94f:	add    BYTE PTR [rax],bh
   14000a951:	add    BYTE PTR [rax],al
   14000a953:	add    BYTE PTR [rax],al
   14000a955:	add    BYTE PTR [rax],al
   14000a957:	add    BYTE PTR [rax],dh
   14000a959:	adc    al,BYTE PTR [rax]
   14000a95b:	rex add DWORD PTR [rax],eax
   14000a95e:	add    BYTE PTR [rax],al
   14000a960:	mov    al,0x13
   14000a962:	add    BYTE PTR [rax+0x1],al
   14000a965:	add    BYTE PTR [rax],al
   14000a967:	add    al,al
   14000a969:	adc    eax,DWORD PTR [rax]
   14000a96b:	rex add DWORD PTR [rax],eax
   14000a96e:	add    BYTE PTR [rax],al
   14000a970:	add    BYTE PTR [rax+rax*1],dl
   14000a973:	rex add DWORD PTR [rax],eax
   14000a976:	add    BYTE PTR [rax],al
   14000a978:	lock adc al,BYTE PTR [rax]
   14000a97b:	rex add DWORD PTR [rax],eax
   14000a97e:	add    BYTE PTR [rax],al
   14000a980:	adc    BYTE PTR [rdx],0x0
   14000a983:	rex add DWORD PTR [rax],eax
   14000a986:	add    BYTE PTR [rax],al
   14000a988:	xor    BYTE PTR [rdx],dl
   14000a98a:	add    BYTE PTR [rax+0x1],al
   14000a98d:	add    BYTE PTR [rax],al
   14000a98f:	add    BYTE PTR [rax+0x13],ah
   14000a992:	add    BYTE PTR [rax+0x1],al
   14000a995:	add    BYTE PTR [rax],al
   14000a997:	add    BYTE PTR [rax+0x13],dh
   14000a99a:	add    BYTE PTR [rax+0x1],al
   14000a99d:	add    BYTE PTR [rax],al
   14000a99f:	add    BYTE PTR [rax+0x12],ah
   14000a9a2:	add    BYTE PTR [rax+0x1],al
   14000a9a5:	add    BYTE PTR [rax],al
   14000a9a7:	add    al,dh
   14000a9a9:	adc    al,BYTE PTR [rax]
   14000a9ab:	rex add DWORD PTR [rax],eax
   14000a9ae:	add    BYTE PTR [rax],al
   14000a9b0:	adc    BYTE PTR [rdx],0x0
   14000a9b3:	rex add DWORD PTR [rax],eax
   14000a9b6:	add    BYTE PTR [rax],al
   14000a9b8:	jmp    0x14000a998
   14000a9ba:	mov    DWORD PTR [rbx-0xf],ebx
   14000a9bd:	rex.WRB test BYTE PTR [r9+rbx*4+0x79],0xc7
   14000a9c3:	xchg   ecx,eax
   14000a9c4:	test   ebx,ecx
   14000a9c6:	xchg   ebp,eax
   14000a9c7:	movabs al,ds:0x140001230
   14000a9d0:	mov    al,0x7f
   14000a9d2:	add    BYTE PTR [rax+0x1],al
   14000a9d5:	add    BYTE PTR [rax],al
   14000a9d7:	add    BYTE PTR [rax+0x140007f],dh
   14000a9dd:	add    BYTE PTR [rax],al
   14000a9df:	add    BYTE PTR [rax+0x12],ah
   14000a9e2:	add    BYTE PTR [rax+0x1],al
   14000a9e5:	add    BYTE PTR [rax],al
   14000a9e7:	add    al,dh
   14000a9e9:	adc    al,BYTE PTR [rax]
   14000a9eb:	rex add DWORD PTR [rax],eax
   14000a9ee:	add    BYTE PTR [rax],al
   14000a9f0:	adc    BYTE PTR [rdx],0x0
   14000a9f3:	rex add DWORD PTR [rax],eax
   14000a9f6:	add    BYTE PTR [rax],al
   14000a9f8:	ins    DWORD PTR es:[rdi],dx
   14000a9f9:	add    BYTE PTR [rcx+0x0],ah
   14000a9fc:	jae    0x14000a9fe
   14000a9fe:	je     0x14000aa00
   14000aa00:	add    BYTE PTR gs:[rdx+0x0],dh
   14000aa04:	add    BYTE PTR fs:[rcx+0x0],ah
   14000aa08:	je     0x14000aa0a
   14000aa0a:	(bad)  
   14000aa0b:	add    BYTE PTR [rbx+0x0],dh
   14000aa0e:	je     0x14000aa10
   14000aa10:	outs   dx,DWORD PTR ds:[rsi]
   14000aa11:	add    BYTE PTR [rdx+0x0],dh
   14000aa14:	add    BYTE PTR gs:[rsi],ch
   14000aa17:	add    BYTE PTR [rax+0x0],bh
   14000aa1a:	ins    DWORD PTR es:[rdi],dx
   14000aa1b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000aa1f:	add    BYTE PTR [rax+0x140004a],dh
   14000aa25:	add    BYTE PTR [rax],al
   14000aa27:	add    BYTE PTR [rax+0x64],al
   14000aa2a:	add    BYTE PTR [rax+0x1],al
   14000aa2d:	add    BYTE PTR [rax],al
   14000aa2f:	add    al,dl
   14000aa31:	add    BYTE PTR [eax+0x1],al
   14000aa35:	add    BYTE PTR [rax],al
   14000aa37:	add    BYTE PTR [rax+0x6e],dl
   14000aa3a:	add    BYTE PTR [rax+0x1],al
   14000aa3d:	add    BYTE PTR [rax],al
   14000aa3f:	add    BYTE PTR [rax+0x71],dh
   14000aa42:	add    BYTE PTR [rax+0x1],al
   14000aa45:	add    BYTE PTR [rax],al
   14000aa47:	add    al,al
   14000aa49:	jb     0x14000aa4b
   14000aa4b:	rex add DWORD PTR [rax],eax
   14000aa4e:	add    BYTE PTR [rax],al
   14000aa50:	shl    BYTE PTR [rbx+0x0],0x40
   14000aa54:	add    DWORD PTR [rax],eax
   14000aa56:	add    BYTE PTR [rax],al
   14000aa58:	add    BYTE PTR [rbp+0x0],dh
   14000aa5b:	rex add DWORD PTR [rax],eax
   14000aa5e:	add    BYTE PTR [rax],al
   14000aa60:	(bad)  
   14000aa61:	fs ins DWORD PTR es:[rdi],dx
   14000aa63:	imul   ebp,DWORD PTR [rsi+0x5c],0x766f7270
   14000aa6a:	pop    rsp
   14000aa6b:	ins    BYTE PTR es:[rdi],dx
   14000aa6c:	imul   esp,DWORD PTR [rdx+0x5c],0x6b636170
   14000aa73:	(bad)  
   14000aa74:	movsxd ebp,DWORD PTR gs:[edi+0x6c]
   14000aa79:	ins    BYTE PTR es:[rdi],dx
   14000aa7a:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000aa7f:	movsxd esi,DWORD PTR cs:[rax+0x70]
   14000aa83:	add    BYTE PTR [rax],al
   14000aa85:	add    BYTE PTR [rax],al
   14000aa87:	add    BYTE PTR [rsi],ch
   14000aa89:	add    BYTE PTR [rax+0x0],dh
   14000aa8c:	jo     0x14000aa8e
   14000aa8e:	imul   eax,DWORD PTR [rax],0x67
   14000aa91:	add    BYTE PTR [rax],al
   14000aa93:	add    BYTE PTR [rax],al
   14000aa95:	add    BYTE PTR [rax],al
   14000aa97:	add    BYTE PTR [rdx],ch
   14000aa99:	add    BYTE PTR [rsi],ch
   14000aa9b:	add    BYTE PTR [rax+0x0],dh
   14000aa9e:	jo     0x14000aaa0
   14000aaa0:	imul   eax,DWORD PTR [rax],0x67
	...
   14000aaaf:	add    BYTE PTR [rbx+0x0],dl
   14000aab2:	rex.WRXB add BYTE PTR [r14+0x0],r8b
   14000aab6:	push   rsp
   14000aab7:	add    BYTE PTR [rdi+0x0],dl
   14000aaba:	add    BYTE PTR [r10+0x0],dl
   14000aabe:	add    BYTE PTR [r8+rax*1+0x4d],r11b
   14000aac3:	add    BYTE PTR [rcx+0x0],ch
   14000aac6:	movsxd eax,DWORD PTR [rax]
   14000aac8:	jb     0x14000aaca
   14000aaca:	outs   dx,DWORD PTR ds:[rsi]
   14000aacb:	add    BYTE PTR [rbx+0x0],dh
   14000aace:	outs   dx,DWORD PTR ds:[rsi]
   14000aacf:	add    BYTE PTR [rsi+0x0],ah
   14000aad2:	je     0x14000aad4
   14000aad4:	pop    rsp
   14000aad5:	add    BYTE PTR [rax+0x0],dl
   14000aad8:	jb     0x14000aada
   14000aada:	outs   dx,DWORD PTR ds:[rsi]
   14000aadb:	add    BYTE PTR [rsi+0x0],dh
   14000aade:	imul   eax,DWORD PTR [rax],0x690073
   14000aae4:	outs   dx,DWORD PTR ds:[rsi]
   14000aae5:	add    BYTE PTR [rsi+0x0],ch
   14000aae8:	imul   eax,DWORD PTR [rax],0x67006e
   14000aaee:	pop    rsp
   14000aaef:	add    BYTE PTR [rax+0x0],dl
   14000aaf2:	(bad)  
   14000aaf3:	add    BYTE PTR [rbx+0x0],ah
   14000aaf6:	imul   eax,DWORD PTR [rax],0x61
   14000aaf9:	add    BYTE PTR [rdi+0x0],ah
   14000aafc:	add    BYTE PTR gs:[rax+rax*1+0x6f],cl
   14000ab01:	add    BYTE PTR [rbx+0x0],ah
   14000ab04:	(bad)  
   14000ab05:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000ab09:	add    BYTE PTR [rdi+0x0],ch
   14000ab0c:	outs   dx,BYTE PTR ds:[rsi]
   14000ab0d:	add    BYTE PTR [rbx+0x0],dh
	...
   14000ab18:	imul   ebp,DWORD PTR [rsi+0x74],0x616e7265
   14000ab1f:	ins    BYTE PTR es:[rdi],dx
   14000ab20:	pop    rsp
   14000ab21:	jae    0x14000ab87
   14000ab23:	imul   ebx,DWORD PTR [rcx+rbp*2+0x6e],0x63
   14000ab28:	pop    rsp
   14000ab29:	ja     0x14000ab94
   14000ab2b:	ins    BYTE PTR es:[rdi],dx
   14000ab2c:	pop    rsp
   14000ab2d:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7379
   14000ab34:	je     0x14000ab9b
   14000ab36:	ins    DWORD PTR es:[rdi],dx
   14000ab37:	cs push 0x2a000000
   14000ab3d:	add    BYTE PTR [rax],al
   14000ab3f:	add    BYTE PTR [rcx+0x64],ah
   14000ab42:	ins    DWORD PTR es:[rdi],dx
   14000ab43:	imul   ebp,DWORD PTR [rsi+0x5c],0x766f7270
   14000ab4a:	pop    rsp
   14000ab4b:	ins    BYTE PTR es:[rdi],dx
   14000ab4c:	imul   esp,DWORD PTR [rdx+0x5c],0x766f7270
   14000ab53:	jo     0x14000abb6
   14000ab55:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000ab58:	gs movsxd esi,DWORD PTR cs:[eax+0x70]
	...
   14000ab6e:	add    BYTE PTR [rax],al
   14000ab70:	and    al,BYTE PTR [rip+0x21993]        # 0x14002c509
   14000ab76:	add    BYTE PTR [rax],al
   14000ab78:	int3   
   14000ab79:	mov    esp,0x10000
   14000ab7e:	add    BYTE PTR [rax],al
   14000ab80:	(bad)
   14000ab84:	add    eax,0x70000000
   14000ab89:	(bad)
   14000ab8c:	and    BYTE PTR [rax],al
   14000ab8e:	add    BYTE PTR [rax],al
   14000ab90:	add    BYTE PTR [rax],al
   14000ab92:	add    BYTE PTR [rax],al
   14000ab94:	add    DWORD PTR [rax],eax
   14000ab96:	add    BYTE PTR [rax],al
   14000ab98:	and    al,BYTE PTR [rip+0x21993]        # 0x14002c531
   14000ab9e:	add    BYTE PTR [rax],al
   14000aba0:	int3   
   14000aba1:	mov    esp,0x10000
   14000aba6:	add    BYTE PTR [rax],al
   14000aba8:	int3   
   14000aba9:	(bad)  
   14000abaa:	add    BYTE PTR [rax],al
   14000abac:	add    eax,0xf8000000
   14000abb1:	(bad)  
   14000abb2:	add    BYTE PTR [rax],al
   14000abb4:	xor    BYTE PTR [rax],al
   14000abb6:	add    BYTE PTR [rax],al
   14000abb8:	add    BYTE PTR [rax],al
   14000abba:	add    BYTE PTR [rax],al
   14000abbc:	add    DWORD PTR [rax],eax
   14000abbe:	add    BYTE PTR [rax],al
   14000abc0:	and    al,BYTE PTR [rip+0x41993]        # 0x14004c559
   14000abc6:	add    BYTE PTR [rax],al
   14000abc8:	call   0x14200ac8f
   14000abcd:	add    BYTE PTR [rax],al
   14000abcf:	add    al,cl
   14000abd1:	ret    
   14000abd2:	add    BYTE PTR [rax],al
   14000abd4:	or     BYTE PTR [rax],al
   14000abd6:	add    BYTE PTR [rax],al
   14000abd8:	and    ah,al
   14000abda:	add    BYTE PTR [rax],al
   14000abdc:	and    BYTE PTR [rax],al
   14000abde:	add    BYTE PTR [rax],al
   14000abe0:	add    BYTE PTR [rax],al
   14000abe2:	add    BYTE PTR [rax],al
   14000abe4:	add    DWORD PTR [rax],eax
   14000abe6:	add    BYTE PTR [rax],al
   14000abe8:	and    al,BYTE PTR [rip+0x41993]        # 0x14004c581
   14000abee:	add    BYTE PTR [rax],al
   14000abf0:	call   0x14200acb7
   14000abf5:	add    BYTE PTR [rax],al
   14000abf7:	add    BYTE PTR [rax],cl
   14000abf9:	ret    
   14000abfa:	add    BYTE PTR [rax],al
   14000abfc:	or     BYTE PTR [rax],al
   14000abfe:	add    BYTE PTR [rax],al
   14000ac00:	(bad)  
   14000ac01:	ret    
   14000ac02:	add    BYTE PTR [rax],al
   14000ac04:	and    BYTE PTR [rax],al
   14000ac06:	add    BYTE PTR [rax],al
   14000ac08:	add    BYTE PTR [rax],al
   14000ac0a:	add    BYTE PTR [rax],al
   14000ac0c:	add    DWORD PTR [rax],eax
   14000ac0e:	add    BYTE PTR [rax],al
   14000ac10:	and    al,BYTE PTR [rip+0x21993]        # 0x14002c5a9
   14000ac16:	add    BYTE PTR [rax],al
   14000ac18:	int3   
   14000ac19:	mov    esp,0x10000
   14000ac1e:	add    BYTE PTR [rax],al
   14000ac20:	jo     0x14000abe4
   14000ac22:	add    BYTE PTR [rax],al
   14000ac24:	add    eax,0x98000000
   14000ac29:	ret    0x0
   14000ac2c:	and    BYTE PTR [rax],al
   14000ac2e:	add    BYTE PTR [rax],al
   14000ac30:	add    BYTE PTR [rax],al
   14000ac32:	add    BYTE PTR [rax],al
   14000ac34:	add    DWORD PTR [rax],eax
   14000ac36:	add    BYTE PTR [rax],al
   14000ac38:	and    al,BYTE PTR [rip+0x21993]        # 0x14002c5d1
   14000ac3e:	add    BYTE PTR [rax],al
   14000ac40:	int3   
   14000ac41:	mov    esp,0x10000
   14000ac46:	add    BYTE PTR [rax],al
   14000ac48:	(bad)
   14000ac4c:	add    eax,0xf0000000
   14000ac51:	rol    DWORD PTR [rax],0x0
   14000ac54:	and    BYTE PTR [rax],al
   14000ac56:	add    BYTE PTR [rax],al
   14000ac58:	add    BYTE PTR [rax],al
   14000ac5a:	add    BYTE PTR [rax],al
   14000ac5c:	add    DWORD PTR [rax],eax
   14000ac5e:	add    BYTE PTR [rax],al
   14000ac60:	and    al,BYTE PTR [rip+0x61993]        # 0x14006c5f9
   14000ac66:	add    BYTE PTR [rax],al
   14000ac68:	clc    
   14000ac69:	rol    BYTE PTR [rax],0x0
	...
   14000ac74:	or     eax,0x30000000
   14000ac79:	rol    DWORD PTR [rax],0x0
   14000ac7c:	mov    al,0x0
   14000ac7e:	add    BYTE PTR [rax],al
   14000ac80:	add    BYTE PTR [rax],al
   14000ac82:	add    BYTE PTR [rax],al
   14000ac84:	add    DWORD PTR [rax],eax
   14000ac86:	add    BYTE PTR [rax],al
   14000ac88:	and    al,BYTE PTR [rip+0x51993]        # 0x14005c621
   14000ac8e:	add    BYTE PTR [rax],al
   14000ac90:	add    al,0xc0
   14000ac92:	add    BYTE PTR [rax],al
   14000ac94:	add    DWORD PTR [rax],eax
   14000ac96:	add    BYTE PTR [rax],al
   14000ac98:	sub    al,0xc0
   14000ac9a:	add    BYTE PTR [rax],al
   14000ac9c:	or     al,0x0
   14000ac9e:	add    BYTE PTR [rax],al
   14000aca0:	(bad)  
   14000aca1:	rol    BYTE PTR [rax],0x0
   14000aca4:	(bad)  
   14000aca5:	add    BYTE PTR [rax],al
   14000aca7:	add    BYTE PTR [rax],al
   14000aca9:	add    BYTE PTR [rax],al
   14000acab:	add    BYTE PTR [rcx],al
   14000acad:	add    BYTE PTR [rax],al
   14000acaf:	add    BYTE PTR [rdx],ah
   14000acb1:	add    eax,0x61993
   14000acb6:	add    BYTE PTR [rax],al
   14000acb8:	cld    
   14000acb9:	mov    esi,0x10000
   14000acbe:	add    BYTE PTR [rax],al
   14000acc0:	sub    al,0xbf
   14000acc2:	add    BYTE PTR [rax],al
   14000acc4:	(bad)  
   14000acc5:	add    BYTE PTR [rax],al
   14000acc7:	add    BYTE PTR [rax-0x41],ah
   14000acca:	add    BYTE PTR [rax],al
   14000accc:	movabs al,ds:0x100000000000000
   14000acd5:	add    BYTE PTR [rax],al
   14000acd7:	add    BYTE PTR [rdx],ah
   14000acd9:	add    eax,0x21993
   14000acde:	add    BYTE PTR [rax],al
   14000ace0:	test   al,0xbe
	...
   14000acea:	add    BYTE PTR [rax],al
   14000acec:	add    al,0x0
   14000acee:	add    BYTE PTR [rax],al
   14000acf0:	mov    eax,0x200000be
   14000acf5:	add    BYTE PTR [rax],al
   14000acf7:	add    BYTE PTR [rax],al
   14000acf9:	add    BYTE PTR [rax],al
   14000acfb:	add    BYTE PTR [rcx],al
   14000acfd:	add    BYTE PTR [rax],al
   14000acff:	add    BYTE PTR [rdx],ah
   14000ad01:	add    eax,0x31993
   14000ad06:	add    BYTE PTR [rax],al
   14000ad08:	lock mov ebp,0x10000
   14000ad0e:	add    BYTE PTR [rax],al
   14000ad10:	or     BYTE PTR [rsi+0x80000],bh
   14000ad16:	add    BYTE PTR [rax],al
   14000ad18:	xor    BYTE PTR [rsi+0x200000],bh
   14000ad1e:	add    BYTE PTR [rax],al
   14000ad20:	add    BYTE PTR [rax],al
   14000ad22:	add    BYTE PTR [rax],al
   14000ad24:	add    DWORD PTR [rax],eax
   14000ad26:	add    BYTE PTR [rax],al
   14000ad28:	and    al,BYTE PTR [rip+0x21993]        # 0x14002c6c1
   14000ad2e:	add    BYTE PTR [rax],al
   14000ad30:	int3   
   14000ad31:	mov    esp,0x10000
   14000ad36:	add    BYTE PTR [rax],al
   14000ad38:	fdivr  QWORD PTR [rax+rax*1+0x800]
   14000ad3f:	add    BYTE PTR [rax],dh
   14000ad41:	mov    ebp,0x200000
   14000ad46:	add    BYTE PTR [rax],al
   14000ad48:	add    BYTE PTR [rax],al
   14000ad4a:	add    BYTE PTR [rax],al
   14000ad4c:	add    DWORD PTR [rax],eax
   14000ad4e:	add    BYTE PTR [rax],al
   14000ad50:	and    al,BYTE PTR [rip+0x21993]        # 0x14002c6e9
   14000ad56:	add    BYTE PTR [rax],al
   14000ad58:	int3   
   14000ad59:	mov    esp,0x10000
   14000ad5e:	add    BYTE PTR [rax],al
   14000ad60:	or     cl,cl
   14000ad62:	add    BYTE PTR [rax],al
   14000ad64:	add    eax,0x30000000
   14000ad69:	leave  
   14000ad6a:	add    BYTE PTR [rax],al
   14000ad6c:	and    BYTE PTR [rax],al
   14000ad6e:	add    BYTE PTR [rax],al
   14000ad70:	add    BYTE PTR [rax],al
   14000ad72:	add    BYTE PTR [rax],al
   14000ad74:	add    DWORD PTR [rax],eax
   14000ad76:	add    BYTE PTR [rax],al
   14000ad78:	and    al,BYTE PTR [rip+0x21993]        # 0x14002c711
   14000ad7e:	add    BYTE PTR [rax],al
   14000ad80:	int3   
   14000ad81:	mov    esp,0x10000
   14000ad86:	add    BYTE PTR [rax],al
   14000ad88:	cwde   
   14000ad89:	enter  0x0,0x5
   14000ad8d:	add    BYTE PTR [rax],al
   14000ad8f:	add    al,al
   14000ad91:	enter  0x0,0x30
   14000ad95:	add    BYTE PTR [rax],al
   14000ad97:	add    BYTE PTR [rax],al
   14000ad99:	add    BYTE PTR [rax],al
   14000ad9b:	add    BYTE PTR [rcx],al
   14000ad9d:	add    BYTE PTR [rax],al
   14000ad9f:	add    BYTE PTR [rdx],ah
   14000ada1:	add    eax,0x21993
   14000ada6:	add    BYTE PTR [rax],al
   14000ada8:	rex.WR mov BYTE PTR [rax],0x0
	...
   14000adb4:	add    eax,0x60000000
   14000adb9:	mov    BYTE PTR [rax],0x0
   14000adbc:	push   rax
   14000adbd:	add    BYTE PTR [rax],al
   14000adbf:	add    BYTE PTR [rax],al
   14000adc1:	add    BYTE PTR [rax],al
   14000adc3:	add    BYTE PTR [rcx],al
   14000adc5:	add    BYTE PTR [rax],al
   14000adc7:	add    BYTE PTR [rdx],ah
   14000adc9:	add    eax,0x91993
   14000adce:	add    BYTE PTR [rax],al
   14000add0:	push   rsp
   14000add1:	mov    DWORD PTR [rax],0x0
   14000add7:	add    BYTE PTR [rax],al
   14000add9:	add    BYTE PTR [rax],al
   14000addb:	add    BYTE PTR [rbx],bl
   14000addd:	add    BYTE PTR [rax],al
   14000addf:	add    BYTE PTR [rax-0x2fffff39],ah
   14000ade5:	add    BYTE PTR [rax],al
   14000ade7:	add    BYTE PTR [rax],al
   14000ade9:	add    BYTE PTR [rax],al
   14000adeb:	add    BYTE PTR [rcx],al
   14000aded:	add    BYTE PTR [rax],al
   14000adef:	add    BYTE PTR [rdx],ah
   14000adf1:	add    eax,0x41993
   14000adf6:	add    BYTE PTR [rax],al
   14000adf8:	mov    al,0xc6
	...
   14000ae02:	add    BYTE PTR [rax],al
   14000ae04:	or     eax,DWORD PTR [rax]
   14000ae06:	add    BYTE PTR [rax],al
   14000ae08:	rol    dh,1
   14000ae0a:	add    BYTE PTR [rax],al
   14000ae0c:	push   rax
   14000ae0d:	add    BYTE PTR [rax],al
   14000ae0f:	add    BYTE PTR [rax],al
   14000ae11:	add    BYTE PTR [rax],al
   14000ae13:	add    BYTE PTR [rcx],al
   14000ae15:	add    BYTE PTR [rax],al
   14000ae17:	add    BYTE PTR [rdx],ah
   14000ae19:	add    eax,0x21993
   14000ae1e:	add    BYTE PTR [rax],al
   14000ae20:	int3   
   14000ae21:	mov    esp,0x10000
   14000ae26:	add    BYTE PTR [rax],al
   14000ae28:	loopne 0x14000adf6
   14000ae2a:	add    BYTE PTR [rax],al
   14000ae2c:	add    eax,0x8000000
   14000ae31:	int    0x0
   14000ae33:	add    BYTE PTR [rax],ah
   14000ae35:	add    BYTE PTR [rax],al
   14000ae37:	add    BYTE PTR [rax],al
   14000ae39:	add    BYTE PTR [rax],al
   14000ae3b:	add    BYTE PTR [rcx],al
   14000ae3d:	add    BYTE PTR [rax],al
   14000ae3f:	add    BYTE PTR [rdx],ah
   14000ae41:	add    eax,0x21993
   14000ae46:	add    BYTE PTR [rax],al
   14000ae48:	cwde   
   14000ae49:	int3   
	...
   14000ae52:	add    BYTE PTR [rax],al
   14000ae54:	add    eax,0xa8000000
   14000ae59:	int3   
   14000ae5a:	add    BYTE PTR [rax],al
   14000ae5c:	push   rax
   14000ae5d:	add    BYTE PTR [rax],al
   14000ae5f:	add    BYTE PTR [rax],al
   14000ae61:	add    BYTE PTR [rax],al
   14000ae63:	add    BYTE PTR [rcx],al
   14000ae65:	add    BYTE PTR [rax],al
   14000ae67:	add    BYTE PTR [rdx],ah
   14000ae69:	add    eax,0x11993
   14000ae6e:	add    BYTE PTR [rax],al
   14000ae70:	and    al,0xcc
	...
   14000ae7a:	add    BYTE PTR [rax],al
   14000ae7c:	add    eax,DWORD PTR [rax]
   14000ae7e:	add    BYTE PTR [rax],al
   14000ae80:	xor    ah,cl
   14000ae82:	add    BYTE PTR [rax],al
   14000ae84:	xor    BYTE PTR [rax],al
   14000ae86:	add    BYTE PTR [rax],al
   14000ae88:	add    BYTE PTR [rax],al
   14000ae8a:	add    BYTE PTR [rax],al
   14000ae8c:	add    DWORD PTR [rax],eax
   14000ae8e:	add    BYTE PTR [rax],al
   14000ae90:	and    al,BYTE PTR [rip+0x31993]        # 0x14003c829
   14000ae96:	add    BYTE PTR [rax],al
   14000ae98:	fs retf 
   14000ae9a:	add    BYTE PTR [rax],al
   14000ae9c:	add    DWORD PTR [rax],eax
   14000ae9e:	add    BYTE PTR [rax],al
   14000aea0:	jl     0x14000ae6d
   14000aea2:	add    BYTE PTR [rax],al
   14000aea4:	or     BYTE PTR [rax],al
   14000aea6:	add    BYTE PTR [rax],al
   14000aea8:	mov    al,0xcb
   14000aeaa:	add    BYTE PTR [rax],al
   14000aeac:	add    BYTE PTR [rax],al
   14000aeaf:	add    BYTE PTR [rax],al
   14000aeb1:	add    BYTE PTR [rax],al
   14000aeb3:	add    BYTE PTR [rcx],al
   14000aeb5:	add    BYTE PTR [rax],al
   14000aeb7:	add    BYTE PTR [rdx],ah
   14000aeb9:	add    eax,0x41993
   14000aebe:	add    BYTE PTR [rax],al
   14000aec0:	mov    esp,0xca
   14000aec5:	add    BYTE PTR [rax],al
   14000aec7:	add    BYTE PTR [rax],al
   14000aec9:	add    BYTE PTR [rax],al
   14000aecb:	add    BYTE PTR [rax+rax*1],cl
   14000aece:	add    BYTE PTR [rax],al
   14000aed0:	loopne 0x14000ae9c
   14000aed2:	add    BYTE PTR [rax],al
   14000aed4:	push   rax
   14000aed5:	add    BYTE PTR [rax],al
   14000aed7:	add    BYTE PTR [rax],al
   14000aed9:	add    BYTE PTR [rax],al
   14000aedb:	add    BYTE PTR [rcx],al
   14000aedd:	add    BYTE PTR [rax],al
   14000aedf:	add    BYTE PTR [rdx],ah
   14000aee1:	add    eax,0xa1993
   14000aee6:	add    BYTE PTR [rax],al
   14000aee8:	ror    cl,0x0
	...
   14000aef3:	add    BYTE PTR [rax+rax*1],cl
   14000aef6:	add    BYTE PTR [rax],al
   14000aef8:	adc    dl,cl
   14000aefa:	add    BYTE PTR [rax],al
   14000aefc:	add    BYTE PTR [rax],al
   14000aeff:	add    BYTE PTR [rax],al
   14000af01:	add    BYTE PTR [rax],al
   14000af03:	add    BYTE PTR [rcx],al
	...
   14000af11:	add    BYTE PTR [rax],al
   14000af13:	add    BYTE PTR [rdx-0x6c],bl
   14000af16:	iret   
   14000af17:	push   rdi
   14000af18:	add    BYTE PTR [rax],al
   14000af1a:	add    BYTE PTR [rax],al
   14000af1c:	add    al,BYTE PTR [rax]
   14000af1e:	add    BYTE PTR [rax],al
   14000af20:	and    eax,0x9c000000
   14000af25:	mov    eax,0x9e9c0000
   14000af2a:	add    BYTE PTR [rax],al
   14000af2c:	add    BYTE PTR [rax],al
   14000af2e:	add    BYTE PTR [rax],al
   14000af30:	pop    rdx
   14000af31:	xchg   esp,eax
   14000af32:	iret   
   14000af33:	push   rdi
   14000af34:	add    BYTE PTR [rax],al
   14000af36:	add    BYTE PTR [rax],al
   14000af38:	or     eax,0x28000000
   14000af3d:	add    eax,DWORD PTR [rax]
   14000af3f:	add    al,bl
   14000af41:	mov    eax,0x9ed80000
	...
   14000af6e:	add    BYTE PTR [rax],al
   14000af70:	movabs al,ds:0x0
	...
   14000afc5:	add    BYTE PTR [rax],al
   14000afc7:	add    BYTE PTR [rax],cl
   14000afc9:	loopne 0x14000afcb
   14000afcb:	rex add DWORD PTR [rax],eax
	...
   14000afde:	add    BYTE PTR [rax],al
   14000afe0:	and    BYTE PTR [rbx+0x14000],0x0
   14000afe7:	add    BYTE PTR [rax+0x14000a3],cl
   14000afed:	add    BYTE PTR [rax],al
   14000afef:	add    al,dh
   14000aff1:	movabs ds:0x31000000014000,eax
   14000affa:	add    BYTE PTR [rax],al
   14000affc:	add    BYTE PTR [rax],al
   14000affe:	add    BYTE PTR [rax],al
   14000b000:	add    BYTE PTR [rip+0x0],dh        # 0x14000b006
	...
   14000b00e:	add    BYTE PTR [rax],al
   14000b010:	rex.RB push r12
   14000b012:	push   rdi
   14000b013:	xor    BYTE PTR [rax],dl
   14000b015:	add    BYTE PTR [rax],al
   14000b017:	add    DWORD PTR [rsi+0x2b88040e],eax
   14000b01d:	add    eax,0xb03bb8a
   14000b022:	add    eax,0x2
   14000b027:	add    BYTE PTR [rax],al
   14000b029:	and    BYTE PTR [rax],al
   14000b02b:	add    BYTE PTR [rax],ah
   14000b02d:	add    BYTE PTR [rax],al
   14000b02f:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000b034:	imul   esi,DWORD PTR [rcx+rdi*2+0x53],0x70706f74
   14000b03c:	gs fs rex.B jne 0x14000b0b5
   14000b041:	outs   dx,DWORD PTR ds:[rsi]
   14000b042:	ins    DWORD PTR es:[rdi],dx
   14000b043:	(bad)  
   14000b044:	je     0x14000b0af
   14000b046:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000b049:	ins    BYTE PTR es:[rdi],dx
   14000b04a:	jns    0x14000b04c
   14000b04c:	add    ecx,DWORD PTR [rbx]
   14000b04e:	add    eax,0x1
   14000b053:	add    BYTE PTR [rax],al
   14000b055:	and    BYTE PTR [rax],al
   14000b057:	add    BYTE PTR [rip+0x72500000],bl        # 0x1b250b05d
   14000b05d:	outs   dx,DWORD PTR ds:[rsi]
   14000b05e:	jbe    0x14000b0b4
   14000b060:	outs   dx,DWORD PTR ds:[rsi]
   14000b061:	outs   dx,DWORD PTR ds:[rsi]
   14000b062:	ins    BYTE PTR es:[rdi],dx
   14000b063:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14000b068:	imul   esi,DWORD PTR [rcx+rbp*2+0x65],0x61745373
   14000b070:	jb     0x14000b0e6
   14000b072:	gs add BYTE PTR fs:[rbx],al
   14000b076:	or     eax,DWORD PTR [rax+rax*1]
   14000b079:	add    BYTE PTR [rax],al
   14000b07b:	add    BYTE PTR [rax],al
   14000b07d:	add    BYTE PTR [rax+0x0],al
   14000b080:	add    BYTE PTR [rax],ch
   14000b082:	add    BYTE PTR [rax],al
   14000b084:	push   rax
   14000b085:	jb     0x14000b0f6
   14000b087:	jbe    0x14000b0dd
   14000b089:	outs   dx,DWORD PTR ds:[rsi]
   14000b08a:	outs   dx,DWORD PTR ds:[rsi]
   14000b08b:	ins    BYTE PTR es:[rdi],dx
   14000b08c:	push   rbx
   14000b08d:	je     0x14000b0f0
   14000b08f:	jb     0x14000b105
   14000b091:	gs add BYTE PTR fs:[rax+0x72],dl
   14000b096:	outs   dx,DWORD PTR ds:[rsi]
   14000b097:	jbe    0x14000b0ed
   14000b099:	outs   dx,DWORD PTR ds:[rsi]
   14000b09a:	outs   dx,DWORD PTR ds:[rsi]
   14000b09b:	ins    BYTE PTR es:[rdi],dx
   14000b09c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000b09e:	ins    DWORD PTR es:[rdi],dx
   14000b09f:	ins    DWORD PTR es:[rdi],dx
   14000b0a0:	(bad)  
   14000b0a1:	outs   dx,BYTE PTR ds:[rsi]
   14000b0a2:	imul   r13,QWORD PTR fs:[rsi+0x65],0xb030100
   14000b0ab:	add    eax,0x0
   14000b0b0:	add    BYTE PTR [rax],al
   14000b0b2:	add    BYTE PTR [rax],al
   14000b0b5:	sbb    BYTE PTR [rax],al
   14000b0b7:	add    BYTE PTR [rdx+0x65],dl
   14000b0ba:	ins    DWORD PTR es:[rdi],dx
   14000b0bb:	outs   dx,DWORD PTR ds:[rsi]
   14000b0bc:	jbe    0x14000b123
   14000b0be:	push   rax
   14000b0bf:	(bad)  
   14000b0c0:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b0c3:	addr32 gs push rbx
   14000b0c6:	je     0x14000b129
   14000b0c8:	jb     0x14000b13e
   14000b0ca:	gs add BYTE PTR fs:[rbx],al
   14000b0ce:	or     eax,DWORD PTR [rip+0x0]        # 0x14000b0d4
   14000b0d4:	add    BYTE PTR [rax],al
   14000b0d6:	add    BYTE PTR [rax],al
   14000b0d9:	add    BYTE PTR es:[rax],al
   14000b0dc:	rex.B jo 0x14000b14f
   14000b0df:	ins    BYTE PTR es:[rdi],dx
   14000b0e0:	jns    0x14000b136
   14000b0e2:	jne    0x14000b156
   14000b0e4:	outs   dx,BYTE PTR ds:[rsi]
   14000b0e5:	push   rbx
   14000b0e6:	je     0x14000b149
   14000b0e8:	jb     0x14000b15e
   14000b0ea:	gs add BYTE PTR fs:[rax+0x72],dl
   14000b0ef:	outs   dx,DWORD PTR ds:[rsi]
   14000b0f0:	jbe    0x14000b15b
   14000b0f2:	jae    0x14000b15d
   14000b0f4:	outs   dx,DWORD PTR ds:[rsi]
   14000b0f5:	outs   dx,BYTE PTR ds:[rsi]
   14000b0f6:	imul   ebp,DWORD PTR [rsi+0x67],0x6e727554
   14000b0fd:	add    BYTE PTR [rax],cl
   14000b0ff:	add    ecx,DWORD PTR [rbx]
   14000b101:	add    al,0x0
   14000b103:	add    BYTE PTR [rax],al
   14000b105:	add    BYTE PTR [rax],al
   14000b107:	add    BYTE PTR [rax+0x0],al
   14000b10a:	add    BYTE PTR [rax+rax*1],bl
   14000b10d:	add    BYTE PTR [rcx+0x64],al
   14000b110:	fs push rax
   14000b112:	(bad)  
   14000b113:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b116:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000b11a:	fs gs add BYTE PTR fs:[rax+0x52],cl
   14000b120:	gs jae 0x14000b198
   14000b123:	ins    BYTE PTR es:[rdi],dx
   14000b124:	je     0x14000b126
   14000b126:	(bad)  
   14000b127:	add    ecx,DWORD PTR [rbx]
   14000b129:	add    al,0x0
   14000b12b:	add    BYTE PTR [rax],al
   14000b12d:	add    BYTE PTR [rax],al
   14000b12f:	add    BYTE PTR [rax+0x0],al
   14000b132:	add    BYTE PTR [rdx],bl
   14000b134:	add    BYTE PTR [rax],al
   14000b136:	push   rax
   14000b137:	jb     0x14000b1a8
   14000b139:	jbe    0x14000b18f
   14000b13b:	outs   dx,DWORD PTR ds:[rsi]
   14000b13c:	outs   dx,DWORD PTR ds:[rsi]
   14000b13d:	ins    BYTE PTR es:[rdi],dx
   14000b13e:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b140:	fs gs add BYTE PTR fs:[rax+0x52],cl
   14000b146:	gs jae 0x14000b1be
   14000b149:	ins    BYTE PTR es:[rdi],dx
   14000b14a:	je     0x14000b14c
   14000b14c:	(bad)  
   14000b14d:	add    ecx,DWORD PTR [rbx]
   14000b14f:	add    al,0x0
   14000b151:	add    BYTE PTR [rax],al
   14000b153:	add    BYTE PTR [rax],al
   14000b155:	add    BYTE PTR [rax+0x0],al
   14000b158:	add    BYTE PTR [rdi],bl
   14000b15a:	add    BYTE PTR [rax],al
   14000b15c:	push   rdx
   14000b15d:	gs ins DWORD PTR es:[rdi],dx
   14000b15f:	outs   dx,DWORD PTR ds:[rsi]
   14000b160:	jbe    0x14000b1c7
   14000b162:	push   rax
   14000b163:	(bad)  
   14000b164:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b167:	rex.RB outs dx,BYTE PTR gs:[esi]
   14000b16b:	fs gs add BYTE PTR fs:[rax+0x52],cl
   14000b171:	gs jae 0x14000b1e9
   14000b174:	ins    BYTE PTR es:[rdi],dx
   14000b175:	je     0x14000b177
   14000b177:	(bad)  
   14000b178:	add    ecx,DWORD PTR [rbx]
   14000b17a:	add    al,0x0
   14000b17c:	add    BYTE PTR [rax],al
   14000b17e:	add    BYTE PTR [rax],al
   14000b180:	add    BYTE PTR [rax+0x0],al
   14000b183:	add    BYTE PTR [rbx],bl
   14000b185:	add    BYTE PTR [rax],al
   14000b187:	rex.B jo 0x14000b1fa
   14000b18a:	ins    BYTE PTR es:[rdi],dx
   14000b18b:	jns    0x14000b1e1
   14000b18d:	jne    0x14000b201
   14000b18f:	outs   dx,BYTE PTR ds:[rsi]
   14000b190:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000b192:	fs gs add BYTE PTR fs:[rax+0x52],cl
   14000b198:	gs jae 0x14000b210
   14000b19b:	ins    BYTE PTR es:[rdi],dx
   14000b19c:	je     0x14000b19e
   14000b19e:	(bad)  
   14000b19f:	add    ecx,DWORD PTR [rbx]
   14000b1a1:	add    eax,0x0
   14000b1a6:	add    BYTE PTR [rax],al
   14000b1a8:	add    BYTE PTR [rax],al
   14000b1ab:	adc    eax,0x64410000
   14000b1b0:	fs push rax
   14000b1b2:	(bad)  
   14000b1b3:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b1b6:	addr32 gs push rbx
   14000b1b9:	je     0x14000b21c
   14000b1bb:	jb     0x14000b231
   14000b1bd:	gs add BYTE PTR fs:[rbx],al
   14000b1c1:	or     eax,DWORD PTR [rdx]
	...
   14000b1cb:	add    BYTE PTR [rax],dh
   14000b1cd:	add    BYTE PTR [rax],al
   14000b1cf:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b1d1:	jbe    0x14000b234
   14000b1d3:	ins    BYTE PTR es:[rdi],dx
   14000b1d4:	imul   esp,DWORD PTR [rax+rdx*2+0x61],0x67616b63
   14000b1dc:	gs rex.RB js 0x14000b254
   14000b1e0:	outs   dx,BYTE PTR gs:[rsi]
   14000b1e2:	jae    0x14000b24d
   14000b1e4:	outs   dx,DWORD PTR ds:[rsi]
   14000b1e5:	outs   dx,BYTE PTR ds:[rsi]
   14000b1e6:	add    BYTE PTR [rax+0x61],dl
   14000b1e9:	je     0x14000b253
   14000b1eb:	add    BYTE PTR [rcx],al
   14000b1ed:	rex.WRX (bad) 
   14000b1ef:	ins    DWORD PTR es:[rdi],dx
   14000b1f0:	add    BYTE PTR gs:[rcx],al
   14000b1f3:	rex.W push rdx
   14000b1f5:	gs jae 0x14000b26d
   14000b1f8:	ins    BYTE PTR es:[rdi],dx
   14000b1f9:	je     0x14000b1fb
   14000b1fb:	(bad)  
   14000b1fc:	add    ecx,DWORD PTR [rbx]
   14000b1fe:	add    eax,0x0
   14000b203:	add    BYTE PTR [rax],al
   14000b205:	add    BYTE PTR [rax],al
   14000b207:	add    BYTE PTR [rdx],bl
   14000b209:	add    BYTE PTR [rax],al
   14000b20b:	push   rax
   14000b20c:	(bad)  
   14000b20d:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b210:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b214:	ins    BYTE PTR es:[rdi],dx
   14000b215:	ins    BYTE PTR es:[rdi],dx
   14000b216:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b21b:	rex.R
   14000b21c:	imul   ebp,DWORD PTR gs:[rsi+0x69],0xb030074
   14000b224:	add    eax,DWORD PTR [rax]
	...
   14000b22e:	sub    al,BYTE PTR [rax]
   14000b230:	add    BYTE PTR [rax+0x61],dl
   14000b233:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b236:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b23a:	ins    BYTE PTR es:[rdi],dx
   14000b23b:	ins    BYTE PTR es:[rdi],dx
   14000b23c:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b241:	push   rax
   14000b242:	(bad)  
   14000b243:	je     0x14000b2ad
   14000b245:	rex.B
   14000b246:	fs add BYTE PTR fs:[rax+0x61],dl
   14000b24b:	je     0x14000b2b5
   14000b24d:	add    BYTE PTR [rcx],al
   14000b24f:	rex.W push rdx
   14000b251:	gs jae 0x14000b2c9
   14000b254:	ins    BYTE PTR es:[rdi],dx
   14000b255:	je     0x14000b257
   14000b257:	(bad)  
   14000b258:	add    ecx,DWORD PTR [rbx]
   14000b25a:	add    eax,0x0
   14000b25f:	add    BYTE PTR [rax],al
   14000b261:	add    BYTE PTR [rax],al
   14000b263:	add    BYTE PTR [rsi],bl
   14000b265:	add    BYTE PTR [rax],al
   14000b267:	push   rax
   14000b268:	(bad)  
   14000b269:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b26c:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b270:	ins    BYTE PTR es:[rdi],dx
   14000b271:	ins    BYTE PTR es:[rdi],dx
   14000b272:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b277:	push   rbx
   14000b278:	gs (bad) 
   14000b27a:	jb     0x14000b2df
   14000b27c:	push   0x656e6f44
   14000b281:	add    BYTE PTR [rbx],al
   14000b283:	or     eax,DWORD PTR [rip+0x0]        # 0x14000b289
   14000b289:	add    BYTE PTR [rax],al
   14000b28b:	add    BYTE PTR [rax],al
   14000b28d:	add    BYTE PTR [rax],dh
   14000b28f:	add    BYTE PTR [rax],al
   14000b291:	push   rax
   14000b292:	(bad)  
   14000b293:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b296:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b29a:	ins    BYTE PTR es:[rdi],dx
   14000b29b:	ins    BYTE PTR es:[rdi],dx
   14000b29c:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b2a1:	push   rax
   14000b2a2:	(bad)  
   14000b2a3:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b2a6:	rex.RX outs dx,DWORD PTR gs:[esi]
   14000b2aa:	jne    0x14000b31a
   14000b2ac:	add    BYTE PTR fs:[rax+0x61],dl
   14000b2b0:	je     0x14000b31a
   14000b2b2:	add    BYTE PTR [rcx],al
   14000b2b4:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
   14000b2bd:	add    DWORD PTR [rbx],eax
   14000b2bf:	or     eax,DWORD PTR [rip+0x0]        # 0x14000b2c5
   14000b2c5:	add    BYTE PTR [rax],al
   14000b2c7:	add    BYTE PTR [rax],al
   14000b2c9:	add    BYTE PTR [rax],bl
   14000b2cb:	add    BYTE PTR [rax],al
   14000b2cd:	push   rax
   14000b2ce:	(bad)  
   14000b2cf:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b2d2:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b2d6:	ins    BYTE PTR es:[rdi],dx
   14000b2d7:	ins    BYTE PTR es:[rdi],dx
   14000b2d8:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b2dd:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000b2df:	imul   esi,DWORD PTR [rax+rax*1+0x3],0x20b
   14000b2e7:	add    BYTE PTR [rax],al
   14000b2e9:	add    BYTE PTR [rax],al
   14000b2eb:	add    BYTE PTR [rax],al
   14000b2ed:	add    BYTE PTR [rip+0x6e490000],dl        # 0x1ae49b2f3
   14000b2f3:	jbe    0x14000b356
   14000b2f5:	ins    BYTE PTR es:[rdi],dx
   14000b2f6:	imul   esp,DWORD PTR [rax+rdx*2+0x61],0x50006874
   14000b2fe:	(bad)  
   14000b2ff:	je     0x14000b369
   14000b301:	add    BYTE PTR [rcx],al
   14000b303:	add    ecx,DWORD PTR [rbx]
   14000b305:	add    al,BYTE PTR [rax]
	...
   14000b30f:	rex.XB add BYTE PTR [r8],al
   14000b312:	push   rax
   14000b313:	(bad)  
   14000b314:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b317:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b31b:	ins    BYTE PTR es:[rdi],dx
   14000b31c:	ins    BYTE PTR es:[rdi],dx
   14000b31d:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b322:	push   rax
   14000b323:	(bad)  
   14000b324:	je     0x14000b38e
   14000b326:	rex.XB movsxd ebp,DWORD PTR [r8+0x43]
   14000b32a:	outs   dx,DWORD PTR ds:[rsi]
   14000b32b:	ins    DWORD PTR es:[rdi],dx
   14000b32c:	(bad)  
   14000b32d:	imul   ebp,DWORD PTR [rsi+0x65],0x6c6c7546
   14000b334:	rex.WRX (bad) 
   14000b336:	ins    DWORD PTR es:[rdi],dx
   14000b337:	add    BYTE PTR gs:[rax+0x61],dl
   14000b33b:	je     0x14000b3a5
   14000b33d:	add    BYTE PTR [rcx],al
   14000b33f:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
   14000b348:	add    DWORD PTR [rax+0x52],ecx
   14000b34b:	gs jae 0x14000b3c3
   14000b34e:	ins    BYTE PTR es:[rdi],dx
   14000b34f:	je     0x14000b351
   14000b351:	(bad)  
   14000b352:	add    ecx,DWORD PTR [rbx]
   14000b354:	add    eax,0x0
   14000b359:	add    BYTE PTR [rax],al
   14000b35b:	add    BYTE PTR [rax],al
   14000b35d:	add    BYTE PTR [rcx],ah
   14000b35f:	add    BYTE PTR [rax],al
   14000b361:	push   rax
   14000b362:	(bad)  
   14000b363:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b366:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b36a:	ins    BYTE PTR es:[rdi],dx
   14000b36b:	ins    BYTE PTR es:[rdi],dx
   14000b36c:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b371:	push   rax
   14000b372:	(bad)  
   14000b373:	je     0x14000b3dd
   14000b375:	rex.B
   14000b376:	fs add BYTE PTR fs:[rax+0x61],dl
   14000b37b:	je     0x14000b3e5
   14000b37d:	add    BYTE PTR [rcx],al
   14000b37f:	add    ecx,DWORD PTR [rbx]
   14000b381:	add    al,BYTE PTR [rax]
	...
   14000b38b:	xor    DWORD PTR [rax],eax
   14000b38d:	add    BYTE PTR [rax+0x61],dl
   14000b390:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b393:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b397:	ins    BYTE PTR es:[rdi],dx
   14000b398:	ins    BYTE PTR es:[rdi],dx
   14000b399:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b39e:	push   rax
   14000b39f:	(bad)  
   14000b3a0:	je     0x14000b40a
   14000b3a2:	rex.XB movsxd ebp,DWORD PTR [r8+0x43]
   14000b3a6:	outs   dx,DWORD PTR ds:[rsi]
   14000b3a7:	ins    DWORD PTR es:[rdi],dx
   14000b3a8:	(bad)  
   14000b3a9:	imul   ebp,DWORD PTR [rsi+0x65],0x74615000
   14000b3b0:	push   0x52480100
   14000b3b5:	gs jae 0x14000b42d
   14000b3b8:	ins    BYTE PTR es:[rdi],dx
   14000b3b9:	je     0x14000b3bb
   14000b3bb:	(bad)  
   14000b3bc:	add    ecx,DWORD PTR [rbx]
   14000b3be:	add    al,BYTE PTR [rax]
	...
   14000b3c8:	add    BYTE PTR cs:[rax],al
   14000b3cb:	push   rax
   14000b3cc:	(bad)  
   14000b3cd:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b3d0:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b3d4:	ins    BYTE PTR es:[rdi],dx
   14000b3d5:	ins    BYTE PTR es:[rdi],dx
   14000b3d6:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b3db:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x6f727245
   14000b3e3:	jb     0x14000b3e5
   14000b3e5:	push   rax
   14000b3e6:	(bad)  
   14000b3e7:	je     0x14000b451
   14000b3e9:	add    BYTE PTR [rcx],al
   14000b3eb:	rex.WR (bad) 
   14000b3ed:	jae    0x14000b463
   14000b3ef:	rex.RB jb 0x14000b464
   14000b3f2:	outs   dx,DWORD PTR ds:[rsi]
   14000b3f3:	jb     0x14000b3f5
   14000b3f5:	or     BYTE PTR [rbx],al
   14000b3f7:	or     eax,DWORD PTR [rax+rax*1]
	...
   14000b402:	add    BYTE PTR es:[rax],al
   14000b405:	push   rax
   14000b406:	(bad)  
   14000b407:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b40a:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b40e:	ins    BYTE PTR es:[rdi],dx
   14000b40f:	ins    BYTE PTR es:[rdi],dx
   14000b410:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14000b415:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x6f46746f
   14000b41e:	jne    0x14000b48e
   14000b420:	add    BYTE PTR fs:[rax+0x61],dl
   14000b424:	je     0x14000b48e
   14000b426:	add    BYTE PTR [rcx],al
   14000b428:	add    ecx,DWORD PTR [rbx]
   14000b42a:	add    al,BYTE PTR [rax]
	...
   14000b434:	xor    DWORD PTR [rax],eax
   14000b436:	add    BYTE PTR [rdx+0x65],dl
   14000b439:	ins    DWORD PTR es:[rdi],dx
   14000b43a:	outs   dx,DWORD PTR ds:[rsi]
   14000b43b:	jbe    0x14000b4a2
   14000b43d:	push   rax
   14000b43e:	jb     0x14000b4af
   14000b440:	jbe    0x14000b492
   14000b442:	(bad)  
   14000b443:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b446:	addr32 gs push rax
   14000b449:	(bad)  
   14000b44a:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b44d:	addr32 gs rex.RX (bad) 
   14000b451:	imul   ebp,DWORD PTR [rax+rax*1+0x50],0x687461
   14000b459:	add    DWORD PTR [rcx+riz*2+0x73],ecx
   14000b45d:	je     0x14000b4a4
   14000b45f:	jb     0x14000b4d3
   14000b461:	outs   dx,DWORD PTR ds:[rsi]
   14000b462:	jb     0x14000b464
   14000b464:	or     BYTE PTR [rbx],al
   14000b466:	or     eax,DWORD PTR [rdx]
	...
   14000b470:	add    BYTE PTR [rsi+0x0],cl
   14000b473:	add    BYTE PTR [rax+0x61],dl
   14000b476:	je     0x14000b4e0
   14000b478:	rex.XB movsxd ebp,DWORD PTR [r8+0x43]
   14000b47c:	outs   dx,DWORD PTR ds:[rsi]
   14000b47d:	ins    DWORD PTR es:[rdi],dx
   14000b47e:	(bad)  
   14000b47f:	imul   ebp,DWORD PTR [rsi+0x65],0x736e6f43
   14000b486:	je     0x14000b4fa
   14000b488:	jne    0x14000b4ed
   14000b48a:	je     0x14000b4d0
   14000b48c:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   14000b493:	jns    0x14000b4e5
   14000b495:	(bad)  
   14000b496:	je     0x14000b500
   14000b498:	add    BYTE PTR [rax+0x72],dl
   14000b49b:	outs   dx,DWORD PTR ds:[rsi]
   14000b49c:	jbe    0x14000b507
   14000b49e:	jae    0x14000b509
   14000b4a0:	outs   dx,DWORD PTR ds:[rsi]
   14000b4a1:	outs   dx,BYTE PTR ds:[rsi]
   14000b4a2:	imul   ebp,DWORD PTR [rsi+0x67],0x68746150
   14000b4a9:	add    BYTE PTR [rcx],al
   14000b4ab:	push   rax
   14000b4ac:	(bad)  
   14000b4ad:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b4b0:	addr32 gs rex.WB
   14000b4b3:	add    BYTE PTR fs:[rcx],al
   14000b4b6:	rex.W push rdx
   14000b4b8:	gs jae 0x14000b530
   14000b4bb:	ins    BYTE PTR es:[rdi],dx
   14000b4bc:	je     0x14000b4be
   14000b4be:	(bad)  
   14000b4bf:	add    ecx,DWORD PTR [rbx]
   14000b4c1:	add    eax,0x0
   14000b4c6:	add    BYTE PTR [rax],al
   14000b4c8:	add    BYTE PTR [rax],al
   14000b4ca:	add    BYTE PTR [rax+rax*1],bl
   14000b4cd:	add    BYTE PTR [rdi+0x70],cl
   14000b4d0:	outs   dx,BYTE PTR gs:[rsi]
   14000b4d2:	imul   ebp,DWORD PTR [rsi+0x67],0x766f7250
   14000b4d9:	push   rax
   14000b4da:	(bad)  
   14000b4db:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b4de:	add    BYTE PTR gs:[eax+0x61],dl
   14000b4e3:	je     0x14000b54d
   14000b4e5:	add    BYTE PTR [rcx],al
   14000b4e7:	add    ecx,DWORD PTR [rbx]
   14000b4e9:	add    eax,0x0
   14000b4ee:	add    BYTE PTR [rax],al
   14000b4f0:	add    BYTE PTR [rax],al
   14000b4f2:	add    BYTE PTR [rcx],bl
   14000b4f4:	add    BYTE PTR [rax],al
   14000b4f6:	push   rax
   14000b4f7:	jb     0x14000b568
   14000b4f9:	jbe    0x14000b54b
   14000b4fb:	(bad)  
   14000b4fc:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b4ff:	addr32 gs rex.R
   14000b502:	gs jae 0x14000b579
   14000b505:	jb     0x14000b57c
   14000b507:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000b50b:	add    BYTE PTR [rbx],al
   14000b50d:	or     eax,DWORD PTR [rdx]
	...
   14000b517:	add    BYTE PTR [rax+rax*1],bh
   14000b51a:	add    BYTE PTR [rsi+0x61],al
   14000b51d:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x72436f54
   14000b525:	gs (bad) 
   14000b527:	je     0x14000b58e
   14000b529:	rex.RB js 0x14000b59c
   14000b52c:	outs   dx,DWORD PTR ds:[rsi]
   14000b52d:	jb     0x14000b5a3
   14000b52f:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000b537:	jns    0x14000b539
   14000b539:	push   rax
   14000b53a:	jb     0x14000b5ab
   14000b53c:	jbe    0x14000b5a7
   14000b53e:	jae    0x14000b5a9
   14000b540:	outs   dx,DWORD PTR ds:[rsi]
   14000b541:	outs   dx,BYTE PTR ds:[rsi]
   14000b542:	imul   ebp,DWORD PTR [rsi+0x67],0x68746150
   14000b549:	add    BYTE PTR [rcx],al
   14000b54b:	rex.W push rdx
   14000b54d:	gs jae 0x14000b5c5
   14000b550:	ins    BYTE PTR es:[rdi],dx
   14000b551:	je     0x14000b553
   14000b553:	(bad)  
   14000b554:	add    ecx,DWORD PTR [rbx]
   14000b556:	add    eax,DWORD PTR [rax]
	...
   14000b560:	sbb    BYTE PTR [rax],al
   14000b562:	add    BYTE PTR [rax+0x72],dl
   14000b565:	outs   dx,DWORD PTR ds:[rsi]
   14000b566:	jbe    0x14000b5b8
   14000b568:	(bad)  
   14000b569:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b56c:	rex.WRX outs dx,DWORD PTR gs:[esi]
   14000b570:	je     0x14000b5c1
   14000b572:	jo     0x14000b5d9
   14000b574:	outs   dx,BYTE PTR ds:[rsi]
   14000b575:	gs add BYTE PTR fs:[rbx],al
   14000b579:	or     eax,DWORD PTR [rdx]
	...
   14000b583:	add    BYTE PTR [rax],ah
   14000b585:	add    BYTE PTR [rax],al
   14000b587:	rex.RB js 0x14000b5fa
   14000b58a:	outs   dx,DWORD PTR ds:[rsi]
   14000b58b:	jb     0x14000b601
   14000b58d:	push   rax
   14000b58e:	(bad)  
   14000b58f:	jns    0x14000b5fd
   14000b591:	outs   dx,DWORD PTR ds:[rsi]
   14000b592:	(bad)  
   14000b593:	fs rex.RX (bad) 
   14000b596:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65524800
   14000b59e:	jae    0x14000b615
   14000b5a0:	ins    BYTE PTR es:[rdi],dx
   14000b5a1:	je     0x14000b5a3
   14000b5a3:	(bad)  
   14000b5a4:	add    ecx,DWORD PTR [rbx]
   14000b5a6:	add    al,BYTE PTR [rax]
	...
   14000b5b0:	and    al,BYTE PTR [rax]
   14000b5b2:	add    BYTE PTR [rdi+0x65],al
   14000b5b5:	je     0x14000b605
   14000b5b7:	gs js  0x14000b62e
   14000b5ba:	rex.RB ins BYTE PTR es:[rdi],dx
   14000b5bc:	gs ins DWORD PTR es:[rdi],dx
   14000b5be:	outs   dx,BYTE PTR gs:[rsi]
   14000b5c0:	je     0x14000b635
   14000b5c2:	rex.RX (bad) 
   14000b5c4:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65524800
   14000b5cc:	jae    0x14000b643
   14000b5ce:	ins    BYTE PTR es:[rdi],dx
   14000b5cf:	je     0x14000b5d1
   14000b5d1:	(bad)  
   14000b5d2:	add    ecx,DWORD PTR [rbx]
   14000b5d4:	add    eax,DWORD PTR [rax]
	...
   14000b5de:	sub    eax,0x6e490000
   14000b5e3:	jbe    0x14000b646
   14000b5e5:	ins    BYTE PTR es:[rdi],dx
   14000b5e6:	imul   esp,DWORD PTR [rax+rdx*2+0x72],0x7369766f
   14000b5ee:	imul   ebp,DWORD PTR [rdi+0x6e],0x50676e69
   14000b5f5:	(bad)  
   14000b5f6:	je     0x14000b660
   14000b5f8:	add    BYTE PTR [rax+0x72],dl
   14000b5fb:	outs   dx,DWORD PTR ds:[rsi]
   14000b5fc:	jbe    0x14000b667
   14000b5fe:	jae    0x14000b669
   14000b600:	outs   dx,DWORD PTR ds:[rsi]
   14000b601:	outs   dx,BYTE PTR ds:[rsi]
   14000b602:	imul   ebp,DWORD PTR [rsi+0x67],0x68746150
   14000b609:	add    BYTE PTR [rcx],al
   14000b60b:	add    ecx,DWORD PTR [rbx]
   14000b60d:	add    al,BYTE PTR [rax]
	...
   14000b617:	sub    al,BYTE PTR [rax]
   14000b619:	add    BYTE PTR [rdi+0x65],al
   14000b61c:	je     0x14000b66e
   14000b61e:	jb     0x14000b68f
   14000b620:	jbe    0x14000b68b
   14000b622:	jae    0x14000b68d
   14000b624:	outs   dx,DWORD PTR ds:[rsi]
   14000b625:	outs   dx,BYTE PTR ds:[rsi]
   14000b626:	push   rax
   14000b627:	(bad)  
   14000b628:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b62b:	addr32 gs rex.WRX (bad) 
   14000b62f:	ins    DWORD PTR es:[rdi],dx
   14000b630:	gs rex.RX (bad) 
   14000b633:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65524800
   14000b63b:	jae    0x14000b6b2
   14000b63d:	ins    BYTE PTR es:[rdi],dx
   14000b63e:	je     0x14000b640
   14000b640:	(bad)  
   14000b641:	add    ecx,DWORD PTR [rbx]
   14000b643:	add    eax,0x0
   14000b648:	add    BYTE PTR [rax],al
   14000b64a:	add    BYTE PTR [rax],al
   14000b64c:	add    BYTE PTR [rdx],ah
   14000b64e:	add    BYTE PTR [rax],al
   14000b650:	push   rax
   14000b651:	jb     0x14000b6c2
   14000b653:	jbe    0x14000b6a5
   14000b655:	(bad)  
   14000b656:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b659:	rex.XB outs dx,DWORD PTR gs:[esi]
   14000b65d:	outs   dx,BYTE PTR ds:[rsi]
   14000b65e:	jae    0x14000b6d4
   14000b660:	jb     0x14000b6d7
   14000b662:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000b666:	push   rdi
   14000b667:	imul   esi,DWORD PTR [rax+rbp*2+0x50],0x687461
   14000b66f:	add    ecx,DWORD PTR [rbx]
   14000b671:	add    al,BYTE PTR [rax]
	...
   14000b67b:	xor    BYTE PTR [rax],al
   14000b67d:	add    BYTE PTR [rdi+0x70],cl
   14000b680:	outs   dx,BYTE PTR gs:[rsi]
   14000b682:	push   rax
   14000b683:	jb     0x14000b6f4
   14000b685:	jbe    0x14000b6f0
   14000b687:	jae    0x14000b6f2
   14000b689:	outs   dx,DWORD PTR ds:[rsi]
   14000b68a:	outs   dx,BYTE PTR ds:[rsi]
   14000b68b:	imul   ebp,DWORD PTR [rsi+0x67],0x6b636150
   14000b692:	(bad)  
   14000b693:	addr32 gs rex.RX (bad) 
   14000b697:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74615000
   14000b69f:	push   0x52480100
   14000b6a4:	gs jae 0x14000b71c
   14000b6a7:	ins    BYTE PTR es:[rdi],dx
   14000b6a8:	je     0x14000b6aa
   14000b6aa:	(bad)  
   14000b6ab:	add    ecx,DWORD PTR [rbx]
   14000b6ad:	add    al,BYTE PTR [rax]
	...
   14000b6b7:	rex.WRXB add BYTE PTR [r8],r8b
   14000b6ba:	push   rax
   14000b6bb:	(bad)  
   14000b6bc:	je     0x14000b726
   14000b6be:	rex.XB movsxd ebp,DWORD PTR [r8+0x43]
   14000b6c2:	outs   dx,DWORD PTR ds:[rsi]
   14000b6c3:	ins    DWORD PTR es:[rdi],dx
   14000b6c4:	(bad)  
   14000b6c5:	imul   ebp,DWORD PTR [rsi+0x65],0x7473614d
   14000b6cc:	gs jb  0x14000b713
   14000b6cf:	(bad)  
   14000b6d0:	je     0x14000b733
   14000b6d2:	push   rbx
   14000b6d3:	je     0x14000b744
   14000b6d5:	jb     0x14000b73c
   14000b6d7:	push   rax
   14000b6d8:	(bad)  
   14000b6d9:	je     0x14000b743
   14000b6db:	add    BYTE PTR [rax+0x72],dl
   14000b6de:	outs   dx,DWORD PTR ds:[rsi]
   14000b6df:	jbe    0x14000b74a
   14000b6e1:	jae    0x14000b74c
   14000b6e3:	outs   dx,DWORD PTR ds:[rsi]
   14000b6e4:	outs   dx,BYTE PTR ds:[rsi]
   14000b6e5:	imul   ebp,DWORD PTR [rsi+0x67],0x68746150
   14000b6ec:	add    BYTE PTR [rcx],al
   14000b6ee:	rex.R (bad) 
   14000b6f0:	je     0x14000b753
   14000b6f2:	jae    0x14000b768
   14000b6f4:	outs   dx,DWORD PTR ds:[rsi]
   14000b6f5:	jb     0x14000b75c
   14000b6f7:	rex.WRX (bad) 
   14000b6f9:	ins    DWORD PTR es:[rdi],dx
   14000b6fa:	add    BYTE PTR gs:[rcx],al
   14000b6fd:	rex.W push rdx
   14000b6ff:	gs jae 0x14000b777
   14000b702:	ins    BYTE PTR es:[rdi],dx
   14000b703:	je     0x14000b705
   14000b705:	(bad)  
   14000b706:	add    ecx,DWORD PTR [rbx]
   14000b708:	add    al,BYTE PTR [rax]
	...
   14000b712:	rex.XB add BYTE PTR [r8],al
   14000b715:	push   rdx
   14000b716:	gs ins DWORD PTR es:[rdi],dx
   14000b718:	outs   dx,DWORD PTR ds:[rsi]
   14000b719:	jbe    0x14000b780
   14000b71b:	push   rax
   14000b71c:	jb     0x14000b78d
   14000b71e:	jbe    0x14000b770
   14000b720:	(bad)  
   14000b721:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b724:	addr32 gs rex.RB js 0x14000b799
   14000b729:	outs   dx,DWORD PTR ds:[rsi]
   14000b72a:	jb     0x14000b7a0
   14000b72c:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000b734:	jns    0x14000b77c
   14000b736:	(bad)  
   14000b737:	imul   ebp,DWORD PTR [rax+rax*1+0x50],0x69766f72
   14000b73f:	jae    0x14000b7aa
   14000b741:	outs   dx,DWORD PTR ds:[rsi]
   14000b742:	outs   dx,BYTE PTR ds:[rsi]
   14000b743:	imul   ebp,DWORD PTR [rsi+0x67],0x68746150
   14000b74a:	add    BYTE PTR [rcx],al
   14000b74c:	rex.W push rdx
   14000b74e:	gs jae 0x14000b7c6
   14000b751:	ins    BYTE PTR es:[rdi],dx
   14000b752:	je     0x14000b754
   14000b754:	(bad)  
   14000b755:	add    ecx,DWORD PTR [rbx]
   14000b757:	add    eax,0x0
   14000b75c:	add    BYTE PTR [rax],al
   14000b75e:	and    BYTE PTR [rax],al
   14000b760:	add    BYTE PTR [rbx],ch
   14000b762:	add    BYTE PTR [rax],al
   14000b764:	push   rax
   14000b765:	jb     0x14000b7d6
   14000b767:	jbe    0x14000b7b9
   14000b769:	(bad)  
   14000b76a:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b76d:	addr32 gs rex.WRXB jo 0x14000b7d7
   14000b772:	outs   dx,BYTE PTR ds:[rsi]
   14000b773:	gs add BYTE PTR fs:[rax+0x61],dl
   14000b778:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b77b:	addr32 gs rex.WRX (bad) 
   14000b77f:	ins    DWORD PTR es:[rdi],dx
   14000b780:	add    BYTE PTR gs:[rcx],al
   14000b783:	rex.W push rdx
   14000b785:	gs jae 0x14000b7fd
   14000b788:	ins    BYTE PTR es:[rdi],dx
   14000b789:	je     0x14000b78b
   14000b78b:	(bad)  
   14000b78c:	add    ecx,DWORD PTR [rbx]
   14000b78e:	add    eax,0x0
   14000b793:	add    BYTE PTR [rax],al
   14000b795:	add    BYTE PTR [rax],al
   14000b797:	add    BYTE PTR [rbx],bl
   14000b799:	add    BYTE PTR [rax],al
   14000b79b:	push   rdx
   14000b79c:	gs ins DWORD PTR es:[rdi],dx
   14000b79e:	outs   dx,DWORD PTR ds:[rsi]
   14000b79f:	jbe    0x14000b806
   14000b7a1:	push   rax
   14000b7a2:	jb     0x14000b813
   14000b7a4:	jbe    0x14000b7f6
   14000b7a6:	(bad)  
   14000b7a7:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b7aa:	add    BYTE PTR gs:[eax+0x61],dl
   14000b7af:	je     0x14000b819
   14000b7b1:	add    BYTE PTR [rcx],al
   14000b7b3:	add    ecx,DWORD PTR [rbx]
   14000b7b5:	add    eax,DWORD PTR [rax]
	...
   14000b7bf:	cmp    al,0x0
   14000b7c1:	add    BYTE PTR [rax+0x61],dl
   14000b7c4:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b7c7:	addr32 gs rex.W (bad) 
   14000b7cb:	jae    0x14000b80e
   14000b7cd:	ins    BYTE PTR es:[rdi],dx
   14000b7ce:	jb     0x14000b835
   14000b7d0:	(bad)  
   14000b7d1:	fs jns 0x14000b816
   14000b7d4:	gs outs dx,BYTE PTR gs:[rsi]
   14000b7d7:	rex.RB js 0x14000b84a
   14000b7da:	outs   dx,DWORD PTR ds:[rsi]
   14000b7db:	jb     0x14000b851
   14000b7dd:	gs add BYTE PTR fs:[rax+0x72],dl
   14000b7e2:	outs   dx,DWORD PTR ds:[rsi]
   14000b7e3:	jbe    0x14000b84e
   14000b7e5:	jae    0x14000b850
   14000b7e7:	outs   dx,DWORD PTR ds:[rsi]
   14000b7e8:	outs   dx,BYTE PTR ds:[rsi]
   14000b7e9:	imul   ebp,DWORD PTR [rsi+0x67],0x68746150
   14000b7f0:	add    BYTE PTR [rcx],al
   14000b7f2:	rex.W push rdx
   14000b7f4:	gs jae 0x14000b86c
   14000b7f7:	ins    BYTE PTR es:[rdi],dx
   14000b7f8:	je     0x14000b7fa
   14000b7fa:	(bad)  
   14000b7fb:	add    ecx,DWORD PTR [rbx]
   14000b7fd:	add    eax,DWORD PTR [rax]
	...
   14000b807:	(bad)  
   14000b808:	add    BYTE PTR [rax],al
   14000b80a:	push   rax
   14000b80b:	jb     0x14000b87c
   14000b80d:	jbe    0x14000b85f
   14000b80f:	(bad)  
   14000b810:	movsxd ebp,DWORD PTR [rbx+0x61]
   14000b813:	addr32 gs rex.WB jae 0x14000b85d
   14000b818:	ins    DWORD PTR es:[rdi],dx
   14000b819:	jo     0x14000b88f
   14000b81b:	jns    0x14000b81d
   14000b81d:	add    ecx,DWORD PTR [rbx]
   14000b81f:	add    al,BYTE PTR [rax]
	...
   14000b829:	and    al,0x0
   14000b82b:	add    BYTE PTR [rbp+0x6e],al
   14000b82e:	jne    0x14000b89d
   14000b830:	gs jb  0x14000b894
   14000b833:	je     0x14000b89a
   14000b835:	rex.RB ins BYTE PTR es:[rdi],dx
   14000b837:	gs ins DWORD PTR es:[rdi],dx
   14000b839:	outs   dx,BYTE PTR gs:[rsi]
   14000b83b:	je     0x14000b8b0
   14000b83d:	rex.RX (bad) 
   14000b83f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x65524800
   14000b847:	jae    0x14000b8be
   14000b849:	ins    BYTE PTR es:[rdi],dx
   14000b84a:	je     0x14000b84c
   14000b84c:	(bad)  
   14000b84d:	add    al,0xba
   14000b84f:	mov    dh,0xf4
   14000b851:	sub    ebp,DWORD PTR [rsi+0x55]
   14000b854:	add    eax,0xca34854d
   14000b859:	(bad)  
   14000b85a:	fistp  WORD PTR [rcx]
   14000b85c:	(bad)  
   14000b85d:	fdivr  DWORD PTR [rip+0x63694d00]        # 0x1a36a0563
   14000b863:	jb     0x14000b8d4
   14000b865:	jae    0x14000b8d6
   14000b867:	data16 je 0x14000b898
   14000b86a:	push   rdi
   14000b86b:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   14000b872:	push   rax
   14000b873:	jb     0x14000b8e4
   14000b875:	jbe    0x14000b8e0
   14000b877:	jae    0x14000b8e2
   14000b879:	outs   dx,DWORD PTR ds:[rsi]
   14000b87a:	outs   dx,BYTE PTR ds:[rsi]
   14000b87b:	imul   ebp,DWORD PTR [rsi+0x67],0x6f72502e
   14000b882:	jbe    0x14000b8d8
   14000b884:	outs   dx,DWORD PTR ds:[rsi]
   14000b885:	outs   dx,DWORD PTR ds:[rsi]
   14000b886:	ins    BYTE PTR es:[rdi],dx
   14000b887:	add    BYTE PTR [rbx],dl
   14000b889:	add    BYTE PTR [rcx],al
   14000b88b:	sbb    dh,BYTE PTR [rbx+0x50]
   14000b88e:	rex.WRXB iretq 
   14000b890:	mov    DWORD PTR [rdx-0x231f4cb9],eax
   14000b896:	call   0xfa76bd64
   14000b89b:	add    DWORD PTR [rdx+0x53],edx
   14000b89e:	rex.R push rbx
   14000b8a0:	mov    bh,0x2f
   14000b8a2:	(bad)  
   14000b8a3:	sub    dh,dl
   14000b8a5:	movsxd ebx,DWORD PTR [rcx+0x44]
   14000b8a8:	mov    edi,esp
   14000b8aa:	test   al,0x9d
   14000b8ac:	add    dh,bh
   14000b8ae:	mov    esp,0x1d8
   14000b8b3:	add    BYTE PTR [rax+0x72],dh
   14000b8b6:	outs   dx,DWORD PTR ds:[rsi]
   14000b8b7:	jbe    0x14000b92d
   14000b8b9:	outs   dx,DWORD PTR ds:[rsi]
   14000b8ba:	outs   dx,DWORD PTR ds:[rsi]
   14000b8bb:	ins    BYTE PTR es:[rdi],dx
   14000b8bc:	cs jo  0x14000b923
   14000b8bf:	(bad)  
	...
   14000b8d8:	rex.RXB
   14000b8d9:	rex.XB push r12
   14000b8db:	rex.WR add BYTE PTR [rax],r10b
   14000b8de:	add    BYTE PTR [rax],al
   14000b8e0:	jae    0x14000b8e3
   14000b8e2:	add    BYTE PTR [rax],al
   14000b8e4:	cs je  0x14000b94c
   14000b8e7:	js     0x14000b95d
   14000b8e9:	add    BYTE PTR [rax],al
   14000b8eb:	add    BYTE PTR [rcx+rdx*1+0x0],dh
   14000b8ef:	add    BYTE PTR [rax+0x2e000000],bl
   14000b8f5:	je     0x14000b95c
   14000b8f7:	js     0x14000b96d
   14000b8f9:	and    al,0x64
   14000b8fb:	imul   eax,DWORD PTR [rax],0x10000000
   14000b901:	adc    al,BYTE PTR [rax]
   14000b903:	add    BYTE PTR [rax],bl
   14000b905:	jne    0x14000b907
   14000b907:	add    BYTE PTR [rsi],ch
   14000b909:	je     0x14000b970
   14000b90b:	js     0x14000b981
   14000b90d:	and    al,0x6d
   14000b90f:	outs   dx,BYTE PTR ds:[rsi]
   14000b910:	add    BYTE PTR [rax],al
   14000b912:	add    BYTE PTR [rax],al
   14000b914:	xor    BYTE PTR [rdi+0x7d0000],al
   14000b91a:	add    BYTE PTR [rax],al
   14000b91c:	cs je  0x14000b984
   14000b91f:	js     0x14000b995
   14000b921:	and    al,0x6d
   14000b923:	outs   dx,BYTE PTR ds:[rsi]
   14000b924:	and    al,0x30
   14000b926:	xor    BYTE PTR [rax],al
   14000b928:	mov    al,0x87
   14000b92a:	add    BYTE PTR [rax],al
   14000b92c:	mov    al,0x7
   14000b92e:	add    BYTE PTR [rax],al
   14000b930:	cs je  0x14000b998
   14000b933:	js     0x14000b9a9
   14000b935:	and    al,0x78
   14000b937:	add    BYTE PTR [rax-0x71],ah
   14000b93a:	add    BYTE PTR [rax],al
   14000b93c:	scas   eax,DWORD PTR es:[rdi]
   14000b93d:	add    BYTE PTR [rax],al
   14000b93f:	add    BYTE PTR [rsi],ch
   14000b941:	je     0x14000b9a8
   14000b943:	js     0x14000b9b9
   14000b945:	and    al,0x79
   14000b947:	add    BYTE PTR fs:[rax],al
   14000b94a:	add    BYTE PTR [rax],al
   14000b94c:	add    BYTE PTR [rax+0x3800000],ah
   14000b952:	add    BYTE PTR [rax],al
   14000b954:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   14000b95d:	add    BYTE PTR [rax],al
   14000b95f:	add    BYTE PTR [rax+0x100000a3],al
   14000b965:	add    BYTE PTR [rax],al
   14000b967:	add    BYTE PTR [rsi],ch
   14000b969:	xor    BYTE PTR [rax],dh
   14000b96b:	movsxd esp,DWORD PTR [rsi+0x67]
   14000b96e:	add    BYTE PTR [rax],al
   14000b970:	nop
   14000b971:	movabs ds:0x432e000000080000,eax
   14000b97a:	push   rdx
   14000b97b:	push   rsp
   14000b97c:	and    al,0x58
   14000b97e:	rex.XB
   14000b97f:	add    BYTE PTR [r8],al
   14000b982:	add    BYTE PTR [rax],al
   14000b984:	cwde   
   14000b985:	movabs ds:0x432e000000080000,eax
   14000b98e:	push   rdx
   14000b98f:	push   rsp
   14000b990:	and    al,0x58
   14000b992:	rex.XB
   14000b993:	rex.B
   14000b994:	add    BYTE PTR [r8],al
   14000b997:	add    BYTE PTR [rax+0x280000a3],ah
   14000b99d:	add    BYTE PTR [rax],al
   14000b99f:	add    BYTE PTR [rsi],ch
   14000b9a1:	rex.XB push r10
   14000b9a3:	push   rsp
   14000b9a4:	and    al,0x58
   14000b9a6:	rex.XB push r13
   14000b9a8:	add    BYTE PTR [rax],al
   14000b9aa:	add    BYTE PTR [rax],al
   14000b9ac:	enter  0xa3,0x0
   14000b9b0:	or     BYTE PTR [rax],al
   14000b9b2:	add    BYTE PTR [rax],al
   14000b9b4:	cs rex.XB push r10
   14000b9b7:	push   rsp
   14000b9b8:	and    al,0x58
   14000b9ba:	rex.XB pop r10
   14000b9bc:	add    BYTE PTR [rax],al
   14000b9be:	add    BYTE PTR [rax],al
   14000b9c0:	shl    BYTE PTR [rbx+0x80000],1
   14000b9c6:	add    BYTE PTR [rax],al
   14000b9c8:	cs rex.XB push r10
   14000b9cb:	push   rsp
   14000b9cc:	and    al,0x58
   14000b9ce:	rex.WB
   14000b9cf:	add    BYTE PTR [r8],al
   14000b9d2:	add    BYTE PTR [rax],al
   14000b9d4:	fsub   DWORD PTR [rbx+0x80000]
   14000b9da:	add    BYTE PTR [rax],al
   14000b9dc:	cs rex.XB push r10
   14000b9df:	push   rsp
   14000b9e0:	and    al,0x58
   14000b9e2:	rex.WB
   14000b9e3:	rex.B
   14000b9e4:	add    BYTE PTR [r8],al
   14000b9e7:	add    al,ah
   14000b9e9:	movabs ds:0x432e000000080000,eax
   14000b9f2:	push   rdx
   14000b9f3:	push   rsp
   14000b9f4:	and    al,0x58
   14000b9f6:	rex.WB pop r9
   14000b9f8:	add    BYTE PTR [rax],al
   14000b9fa:	add    BYTE PTR [rax],al
   14000b9fc:	call   0x14800baa4
   14000ba01:	add    BYTE PTR [rax],al
   14000ba03:	add    BYTE PTR [rsi],ch
   14000ba05:	rex.XB push r10
   14000ba07:	push   rsp
   14000ba08:	and    al,0x58
   14000ba0a:	rex.WB pop r10
   14000ba0c:	add    BYTE PTR [rax],al
   14000ba0e:	add    BYTE PTR [rax],al
   14000ba10:	lock movabs ds:0x672e000000c40000,eax
   14000ba1a:	imul   sp,WORD PTR [rbx+rsi*2+0x24],0x78
   14000ba21:	add    BYTE PTR [rax],al
   14000ba23:	add    al,al
   14000ba25:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba26:	add    BYTE PTR [rax],al
   14000ba28:	push   rax
   14000ba29:	or     eax,DWORD PTR [rax]
   14000ba2b:	add    BYTE PTR [rsi],ch
   14000ba2d:	jb     0x14000ba93
   14000ba2f:	(bad)  
   14000ba30:	je     0x14000ba93
   14000ba32:	add    BYTE PTR [rax],al
   14000ba34:	adc    BYTE PTR [rax+0x100000],dh
   14000ba3a:	add    BYTE PTR [rax],al
   14000ba3c:	cs jb  0x14000baa3
   14000ba3f:	(bad)  
   14000ba40:	je     0x14000baa3
   14000ba42:	and    al,0x7a
   14000ba44:	rex.RB push r12
   14000ba46:	push   rdi
   14000ba47:	xor    BYTE PTR [rax],al
   14000ba49:	add    BYTE PTR [rax],al
   14000ba4b:	add    BYTE PTR [rax],ah
   14000ba4d:	mov    al,0x0
   14000ba4f:	add    BYTE PTR [rip+0x2e000008],ch        # 0x16e00ba5d
   14000ba55:	jb     0x14000babb
   14000ba57:	(bad)  
   14000ba58:	je     0x14000babb
   14000ba5a:	and    al,0x7a
   14000ba5c:	rex.RB push r12
   14000ba5e:	push   rdi
   14000ba5f:	xor    DWORD PTR [rax],eax
   14000ba61:	add    BYTE PTR [rax],al
   14000ba63:	add    BYTE PTR [rbp-0x48],cl
   14000ba66:	add    BYTE PTR [rax],al
   14000ba68:	rex.WRX add BYTE PTR [rax],r8b
   14000ba6b:	add    BYTE PTR [rsi],ch
   14000ba6d:	jb     0x14000bad3
   14000ba6f:	(bad)  
   14000ba70:	je     0x14000bad3
   14000ba72:	and    al,0x7a
   14000ba74:	rex.RB push r12
   14000ba76:	push   rdi
   14000ba77:	xor    al,BYTE PTR [rax]
   14000ba79:	add    BYTE PTR [rax],al
   14000ba7b:	add    BYTE PTR [rbx+0x10000b8],bl
   14000ba81:	add    BYTE PTR [rax],al
   14000ba83:	add    BYTE PTR [rsi],ch
   14000ba85:	jb     0x14000baeb
   14000ba87:	(bad)  
   14000ba88:	je     0x14000baeb
   14000ba8a:	and    al,0x7a
   14000ba8c:	rex.RB push r12
   14000ba8e:	push   rdi
   14000ba8f:	cmp    DWORD PTR [rax],eax
   14000ba91:	add    BYTE PTR [rax],al
   14000ba93:	add    BYTE PTR [rax+rdi*4+0x3640000],bl
   14000ba9a:	add    BYTE PTR [rax],al
   14000ba9c:	cs jb  0x14000bb03
   14000ba9f:	(bad)  
   14000baa0:	je     0x14000bb03
   14000baa2:	and    al,0x7a
   14000baa4:	jp     0x14000bb20
   14000baa6:	fs (bad) 
   14000baa8:	add    BYTE PTR [eax],al
   14000baab:	add    BYTE PTR [rax],al
   14000baad:	mov    esp,0x12180000
   14000bab2:	add    BYTE PTR [rax],al
   14000bab4:	cs js  0x14000bb1b
   14000bab7:	(bad)  
   14000bab8:	je     0x14000bb1b
   14000baba:	add    BYTE PTR [rax],al
   14000babc:	sbb    dh,cl
   14000babe:	add    BYTE PTR [rax],al
   14000bac0:	push   rsp
   14000bac1:	add    BYTE PTR [rax],al
   14000bac3:	add    BYTE PTR [rsi],ch
   14000bac5:	js     0x14000bb2b
   14000bac7:	(bad)  
   14000bac8:	je     0x14000bb2b
   14000baca:	and    al,0x78
   14000bacc:	add    BYTE PTR [rax],al
   14000bace:	add    BYTE PTR [rax],al
   14000bad0:	jo     0x14000baa0
   14000bad2:	add    BYTE PTR [rax],al
   14000bad4:	and    BYTE PTR [rax],al
   14000bad6:	add    BYTE PTR [rax],al
   14000bad8:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3224
   14000bae2:	add    BYTE PTR [rax],al
   14000bae4:	nop
   14000bae5:	(bad)  
   14000bae6:	add    BYTE PTR [rax],al
   14000bae8:	and    BYTE PTR [rax],al
   14000baea:	add    BYTE PTR [rax],al
   14000baec:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3324
   14000baf6:	add    BYTE PTR [rax],al
   14000baf8:	mov    al,0xce
   14000bafa:	add    BYTE PTR [rax],al
   14000bafc:	adc    BYTE PTR [rax],al
   14000bafe:	add    BYTE PTR [rax],al
   14000bb00:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3424
   14000bb0a:	add    BYTE PTR [rax],al
   14000bb0c:	ror    dh,0x0
   14000bb0f:	add    BYTE PTR [rdx],ah
   14000bb11:	add    BYTE PTR [rax],al
   14000bb13:	add    BYTE PTR [rsi],ch
   14000bb15:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3624
   14000bb1e:	add    BYTE PTR [rax],al
   14000bb20:	call   0x15000bbf3
   14000bb25:	add    BYTE PTR [rax],al
   14000bb27:	add    BYTE PTR [rsi],ch
   14000bb29:	imul   esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3724
   14000bb32:	add    BYTE PTR [rax],al
   14000bb34:	clc    
   14000bb35:	(bad)  
   14000bb36:	add    BYTE PTR [rax],al
   14000bb38:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bb39:	add    DWORD PTR [rax],eax
   14000bb3b:	add    BYTE PTR [rsi],ch
   14000bb3d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000bb45:	add    BYTE PTR [rax],al
   14000bb47:	add    BYTE PTR [rax+rdx*8+0x140000],bl
   14000bb4e:	add    BYTE PTR [rax],al
   14000bb50:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000bb59:	add    BYTE PTR [rax],al
   14000bb5b:	add    BYTE PTR [rax-0x7fffff30],dh
   14000bb61:	add    eax,DWORD PTR [rax]
   14000bb63:	add    BYTE PTR [rsi],ch
   14000bb65:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000bb6d:	add    BYTE PTR [rax],al
   14000bb6f:	add    BYTE PTR [rax],dh
   14000bb71:	(bad)  
   14000bb72:	add    BYTE PTR [rax],al
   14000bb74:	js     0x14000bb7f
   14000bb76:	add    BYTE PTR [rax],al
   14000bb78:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000bb81:	add    BYTE PTR [rax],al
   14000bb83:	add    BYTE PTR [rax],al
   14000bb85:	loopne 0x14000bb87
   14000bb87:	add    BYTE PTR [rax+0x2e000000],dl
   14000bb8d:	fs (bad) 
   14000bb8f:	je     0x14000bbf2
   14000bb91:	add    BYTE PTR [rax],al
   14000bb93:	add    BYTE PTR [rax+0x540000e0],dl
   14000bb99:	add    BYTE PTR [rax],al
   14000bb9b:	add    BYTE PTR [rsi],ch
   14000bb9d:	fs (bad) 
   14000bb9f:	je     0x14000bc02
   14000bba1:	and    al,0x72
   14000bba3:	add    al,dh
   14000bba5:	loopne 0x14000bba7
   14000bba7:	add    BYTE PTR [rax+0x2e000007],cl
   14000bbad:	(bad)  
   14000bbaf:	jae    0x14000bbb1
   14000bbb1:	add    BYTE PTR [rax],al
   14000bbb3:	add    BYTE PTR [rax],al
   14000bbb5:	lock add BYTE PTR [rax],al
   14000bbb8:	adc    al,0x7
   14000bbba:	add    BYTE PTR [rax],al
   14000bbbc:	cs jo  0x14000bc23
   14000bbbf:	(bad)  
   14000bbc0:	je     0x14000bc23
   14000bbc2:	add    BYTE PTR [rax],al
   14000bbc4:	add    BYTE PTR [rax],al
   14000bbc6:	add    DWORD PTR [rax],eax
   14000bbc8:	adc    BYTE PTR [rax],al
   14000bbca:	add    BYTE PTR [rax],al
   14000bbcc:	cs imul esp,DWORD PTR fs:[rcx+riz*2+0x74],0x3524
   14000bbd6:	add    BYTE PTR [rax],al
   14000bbd8:	add    BYTE PTR [rax],dl
   14000bbda:	add    DWORD PTR [rax],eax
   14000bbdc:	lock add BYTE PTR [rax],al
   14000bbdf:	add    BYTE PTR [rsi],ch
   14000bbe1:	jb     0x14000bc56
   14000bbe3:	jb     0x14000bc48
   14000bbe5:	and    al,0x30
   14000bbe7:	xor    DWORD PTR [rax],eax
   14000bbe9:	add    BYTE PTR [rax],al
   14000bbeb:	add    al,dh
   14000bbed:	adc    BYTE PTR [rcx],al
   14000bbef:	add    BYTE PTR [rax+0x2e000008],bh
   14000bbf5:	jb     0x14000bc6a
   14000bbf7:	jb     0x14000bc5c
   14000bbf9:	and    al,0x30
   14000bbfb:	xor    al,BYTE PTR [rax]
   14000bbfd:	add    BYTE PTR [rax],al
   14000bbff:	add    BYTE PTR [rcx],al
   14000bc01:	(bad)  
   14000bc02:	add    al,BYTE PTR [rax]
   14000bc04:	(bad)  
   14000bc05:	xor    al,BYTE PTR [rdx]
   14000bc07:	xor    BYTE PTR [rcx],al
   14000bc09:	adc    eax,0x74150008
   14000bc0e:	or     al,BYTE PTR [rax]
   14000bc10:	adc    eax,0x15000964
   14000bc15:	xor    al,0x8
   14000bc17:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e0cd6f
   14000bc1d:	(bad)  
   14000bc1e:	add    al,BYTE PTR [rax]
   14000bc20:	(bad)  
   14000bc21:	push   rdx
   14000bc22:	add    dh,BYTE PTR [rax]
   14000bc24:	add    DWORD PTR [rdx],ecx
   14000bc26:	add    al,0x0
   14000bc28:	or     dh,BYTE PTR [rsi+rax*1]
   14000bc2b:	add    BYTE PTR [rdx],cl
   14000bc2d:	xor    al,BYTE PTR [rsi]
   14000bc2f:	jo     0x14000bc32
   14000bc31:	adc    DWORD PTR [rax+rax*1],eax
   14000bc34:	adc    DWORD PTR [rdx],esi
   14000bc36:	or     eax,0xb600c70
   14000bc3b:	xor    BYTE PTR [rcx],bl
   14000bc3d:	and    eax,0x34130009
   14000bc42:	push   rbx
   14000bc43:	add    BYTE PTR [rbx],dl
   14000bc45:	add    DWORD PTR [rdx+0x0],ecx
   14000bc48:	or     al,0xf0
   14000bc4a:	or     ah,al
   14000bc4c:	or     BYTE PTR [rax+0x7],dh
   14000bc4f:	(bad)  
   14000bc50:	(bad)  
   14000bc51:	push   rax
   14000bc52:	add    BYTE PTR [rax],al
   14000bc54:	in     al,0x85
   14000bc56:	add    BYTE PTR [rax],al
   14000bc58:	add    al,BYTE PTR [rax]
   14000bc5b:	add    BYTE PTR [rcx],bl
   14000bc5d:	(bad)  
   14000bc5e:	add    eax,0x2c340d00
   14000bc63:	add    BYTE PTR [rip+0x6002a01],cl        # 0x14600e66a
   14000bc69:	(bad)  
   14000bc6a:	add    BYTE PTR [rax],al
   14000bc6c:	in     al,0x85
   14000bc6e:	add    BYTE PTR [rax],al
   14000bc70:	rex add DWORD PTR [rax],eax
   14000bc73:	add    BYTE PTR [rcx],al
   14000bc75:	clts   
   14000bc77:	add    BYTE PTR [rdi],cl
   14000bc79:	fs (bad) 
   14000bc7b:	add    BYTE PTR [rdi],cl
   14000bc7d:	xor    al,0x6
   14000bc7f:	add    BYTE PTR [rdi],cl
   14000bc81:	xor    cl,BYTE PTR [rbx]
   14000bc83:	jo     0x14000bc86
   14000bc85:	add    al,0x1
   14000bc87:	add    BYTE PTR [rdx+rax*2],al
   14000bc8a:	add    BYTE PTR [rax],al
   14000bc8c:	add    DWORD PTR [rax+rcx*1],edx
   14000bc8f:	add    BYTE PTR [rsp+riz*2],dl
   14000bc92:	or     BYTE PTR [rax],al
   14000bc94:	adc    al,0x54
   14000bc96:	(bad)  
   14000bc97:	add    BYTE PTR [rsp+rsi*1],dl
   14000bc9a:	(bad)  
   14000bc9b:	add    BYTE PTR [rdx+rsi*1],dl
   14000bc9e:	adc    BYTE PTR [rax+0x1],dh
   14000bca1:	sbb    al,0xc
   14000bca3:	add    BYTE PTR [rsp+riz*2],bl
   14000bca6:	or     eax,0xc541c00
   14000bcab:	add    BYTE PTR [rsp+rsi*1],bl
   14000bcae:	or     eax,DWORD PTR [rax]
   14000bcb0:	sbb    al,0x32
   14000bcb2:	sbb    al,dh
   14000bcb4:	(bad)  
   14000bcb5:	loopne 0x14000bccb
   14000bcb7:	rcl    BYTE PTR [rdx],1
   14000bcb9:	rcl    BYTE PTR [rax],0x70
   14000bcbc:	sbb    DWORD PTR [rdi],ecx
   14000bcbe:	add    al,BYTE PTR [rax]
   14000bcc0:	(bad)  
   14000bcc1:	push   rdx
   14000bcc2:	add    dh,BYTE PTR [rax]
   14000bcc4:	fadd   DWORD PTR [rbp-0x52d80000]
   14000bcca:	add    BYTE PTR [rax],al
   14000bccc:	(bad)  
   14000bccd:	(bad)  
   14000bcce:	(bad)  
   14000bccf:	inc    DWORD PTR [rax]
   14000bcd1:	add    BYTE PTR [rax],al
   14000bcd3:	add    bh,bh
   14000bcd5:	(bad)  
   14000bcd6:	(bad)  
   14000bcd7:	inc    DWORD PTR [rax]
	...
   14000bce1:	add    BYTE PTR [rax],al
   14000bce3:	add    BYTE PTR [rcx],al
   14000bce5:	add    BYTE PTR [rax],al
   14000bce7:	add    BYTE PTR [rbx],al
   14000bce9:	add    BYTE PTR [rax],al
   14000bceb:	add    al,dh
   14000bced:	mov    esp,0x90000
   14000bcf2:	add    BYTE PTR [rax],al
   14000bcf4:	nop
   14000bcf5:	loopne 0x14000bcf7
   14000bcf7:	add    BYTE PTR [rax],ch
   14000bcf9:	add    BYTE PTR [rax],al
   14000bcfb:	add    BYTE PTR [rsi+0x38000087],dh
   14000bd01:	add    BYTE PTR [rax],al
   14000bd03:	add    BYTE PTR [rcx],cl
   14000bd05:	add    BYTE PTR [rax],al
   14000bd07:	add    al,al
   14000bd09:	loopne 0x14000bd0b
   14000bd0b:	add    BYTE PTR [rax],al
   14000bd0d:	add    BYTE PTR [rax],al
   14000bd0f:	add    bl,bl
   14000bd11:	xchg   DWORD PTR [rax],eax
   14000bd13:	add    BYTE PTR [rax],bh
   14000bd15:	add    BYTE PTR [rax],al
   14000bd17:	add    BYTE PTR [rax+0x0],al
	...
   14000bd22:	add    BYTE PTR [rax],al
   14000bd24:	test   BYTE PTR [rdi+0x480000],0x0
   14000bd2b:	add    BYTE PTR [rax],al
   14000bd2d:	add    BYTE PTR [rax],al
   14000bd2f:	add    BYTE PTR [rsi+rbx*1+0x0],ah
   14000bd33:	add    bh,bh
   14000bd35:	(bad)  
   14000bd36:	(bad)  
   14000bd37:	dec    DWORD PTR [rsi+rbx*1+0x0]
   14000bd3e:	add    BYTE PTR [rax],al
   14000bd40:	xchg   esi,eax
   14000bd41:	(bad)  
   14000bd42:	add    BYTE PTR [rax],al
   14000bd44:	(bad)  
   14000bd45:	(bad)  
   14000bd46:	(bad)  
   14000bd47:	push   QWORD PTR [rsi+0x87]
   14000bd4d:	add    BYTE PTR [rax],al
   14000bd4f:	add    bl,al
   14000bd51:	xchg   DWORD PTR [rax],eax
   14000bd53:	add    BYTE PTR [rcx],al
   14000bd55:	add    BYTE PTR [rax],al
   14000bd57:	add    ch,cl
   14000bd59:	xchg   DWORD PTR [rax],eax
   14000bd5b:	add    BYTE PTR [rax],al
   14000bd5d:	add    BYTE PTR [rax],al
   14000bd5f:	add    BYTE PTR [rax+rcx*4],al
   14000bd62:	add    BYTE PTR [rax],al
   14000bd64:	add    DWORD PTR [rax],eax
   14000bd66:	add    BYTE PTR [rax],al
   14000bd68:	mov    BYTE PTR [rax],r8b
   14000bd6b:	add    BYTE PTR [rax],al
   14000bd6d:	add    BYTE PTR [rax],al
   14000bd6f:	add    BYTE PTR [rcx],bl
   14000bd71:	or     al,BYTE PTR [rdx]
   14000bd73:	add    BYTE PTR [rdx],cl
   14000bd75:	xor    al,BYTE PTR [rsi]
   14000bd77:	push   rax
   14000bd78:	fadd   DWORD PTR [rbp-0x52d80000]
   14000bd7e:	add    BYTE PTR [rax],al
   14000bd80:	sbb    DWORD PTR [rbx],ecx
   14000bd82:	add    eax,DWORD PTR [rax]
   14000bd84:	or     eax,DWORD PTR [rdx+0x7]
   14000bd87:	push   rax
   14000bd88:	(bad)  
   14000bd89:	xor    BYTE PTR [rax],al
   14000bd8b:	add    al,bl
   14000bd8d:	test   DWORD PTR [rax],eax
   14000bd8f:	add    BYTE PTR [rax],ch
   14000bd91:	lods   eax,DWORD PTR ds:[rsi]
   14000bd92:	add    BYTE PTR [rax],al
   14000bd94:	add    DWORD PTR [rip+0x341d000a],ebx        # 0x1741dbda4
   14000bd9a:	adc    al,BYTE PTR [rax]
   14000bd9c:	sbb    eax,0x17f01972
   14000bda1:	loopne 0x14000bdb8
   14000bda3:	rcl    BYTE PTR [rbx],1
   14000bda5:	rcl    BYTE PTR [rcx],0x70
   14000bda8:	adc    BYTE PTR [rax+0xf],ah
   14000bdab:	push   rax
   14000bdac:	sbb    DWORD PTR [rdx],esp
   14000bdae:	add    al,0x0
   14000bdb0:	adc    BYTE PTR [rcx],al
   14000bdb2:	mov    ecx,0x2700302
   14000bdb7:	xor    ah,ah
   14000bdb9:	test   DWORD PTR [rax],eax
   14000bdbb:	add    BYTE PTR [rax+0x1000015],dh
   14000bdc1:	add    al,0x1
   14000bdc3:	add    BYTE PTR [rdx+riz*4],al
   14000bdc6:	add    BYTE PTR [rax],al
   14000bdc8:	add    DWORD PTR [rcx+rax*1],eax
   14000bdcb:	add    BYTE PTR [rdx+rax*4],al
   14000bdce:	add    BYTE PTR [rax],al
   14000bdd0:	add    DWORD PTR [rsi],eax
   14000bdd2:	add    al,BYTE PTR [rax]
   14000bdd4:	(bad)  
   14000bdd5:	jb     0x14000bdd9
   14000bdd7:	xor    BYTE PTR [rcx],bl
   14000bdd9:	sbb    DWORD PTR [rsi],eax
   14000bddb:	add    BYTE PTR [rcx],bl
   14000bddd:	or     eax,DWORD PTR fs:[rax]
   14000bde0:	adc    al,0x34
   14000bde2:	or     BYTE PTR [rax],al
   14000bde4:	(bad)  
   14000bde5:	push   rdx
   14000bde6:	add    dh,BYTE PTR [rax-0x28]
   14000bde9:	test   DWORD PTR [rax],eax
   14000bdeb:	add    BYTE PTR [rax],al
   14000bded:	lods   eax,DWORD PTR ds:[rsi]
   14000bdee:	add    BYTE PTR [rax],al
   14000bdf0:	(bad)  
   14000bdf1:	(bad)  
   14000bdf2:	(bad)  
   14000bdf3:	inc    DWORD PTR [rax]
   14000bdf5:	add    BYTE PTR [rax],al
   14000bdf7:	add    BYTE PTR [rax],al
   14000bdf9:	add    BYTE PTR [rax],al
   14000bdfb:	add    BYTE PTR [rcx-0x78],bl
   14000bdfe:	add    BYTE PTR [rax],al
   14000be00:	(bad)  
   14000be01:	(bad)  
   14000be02:	(bad)  
   14000be03:	inc    DWORD PTR [rax]
   14000be05:	add    BYTE PTR [rax],al
   14000be07:	add    BYTE PTR [rax],al
   14000be09:	add    BYTE PTR [rax],al
   14000be0b:	add    BYTE PTR [rcx],al
   14000be0d:	add    BYTE PTR [rax],al
   14000be0f:	add    BYTE PTR [rdx],al
   14000be11:	add    BYTE PTR [rax],al
   14000be13:	add    BYTE PTR [rcx],al
   14000be15:	add    BYTE PTR [rax],al
   14000be17:	add    BYTE PTR [rsi+rdi*4],bl
   14000be1a:	add    BYTE PTR [rax],al
   14000be1c:	add    BYTE PTR [rax],al
	...
   14000be27:	add    BYTE PTR [rbp-0x78],dh
   14000be2a:	add    BYTE PTR [rax],al
   14000be2c:	cmp    BYTE PTR [rax],al
   14000be2e:	add    BYTE PTR [rax],al
   14000be30:	jo     0x14000be57
   14000be32:	add    BYTE PTR [rax],al
   14000be34:	(bad)  
   14000be35:	(bad)  
   14000be36:	(bad)  
   14000be37:	dec    DWORD PTR [rbp+riz*1+0x0]
   14000be3e:	add    BYTE PTR [rax],al
   14000be40:	adc    esp,DWORD PTR [rsi]
   14000be42:	add    BYTE PTR [rax],al
   14000be44:	add    DWORD PTR [rax],eax
   14000be46:	add    BYTE PTR [rax],al
   14000be48:	xor    BYTE PTR [rsi],ah
   14000be4a:	add    BYTE PTR [rax],al
   14000be4c:	add    BYTE PTR [rax],al
   14000be4e:	add    BYTE PTR [rax],al
   14000be50:	cmp    DWORD PTR [rsi],esp
   14000be52:	add    BYTE PTR [rax],al
   14000be54:	(bad)  
   14000be55:	(bad)  
   14000be56:	(bad)  
   14000be57:	(bad)  
   14000be58:	cmp    eax,0x26
   14000be5d:	add    BYTE PTR [rax],al
   14000be5f:	add    BYTE PTR [rdx+0x2000088],al
   14000be65:	add    BYTE PTR [rax],al
   14000be67:	add    BYTE PTR [rax+rcx*4+0x0],bl
   14000be6e:	add    BYTE PTR [rax],al
   14000be70:	add    DWORD PTR [rsi],eax
   14000be72:	add    al,BYTE PTR [rax]
   14000be74:	(bad)  
   14000be75:	xor    al,BYTE PTR [rdx]
   14000be77:	push   rax
   14000be78:	sbb    DWORD PTR [rdx],ecx
   14000be7a:	add    al,BYTE PTR [rax]
   14000be7c:	or     dh,BYTE PTR [rdx]
   14000be7e:	(bad)  
   14000be7f:	push   rax
   14000be80:	fadd   DWORD PTR [rbp-0x53000000]
   14000be86:	add    BYTE PTR [rax],al
   14000be88:	adc    DWORD PTR [rbx],esp
   14000be8a:	or     al,BYTE PTR [rax]
   14000be8c:	and    edx,DWORD PTR [rdi+rcx*1+0x0]
   14000be90:	(bad)  
   14000be91:	xor    al,0xe
   14000be93:	add    BYTE PTR [rbx],dl
   14000be95:	push   rdx
   14000be96:	(bad)  
   14000be98:	or     eax,0x9c00be0
   14000be9d:	jo     0x14000bea7
   14000be9f:	(bad)  
   14000bea0:	fadd   DWORD PTR [rbp-0x53280000]
   14000bea6:	add    BYTE PTR [rax],al
   14000bea8:	(bad)  
   14000bea9:	(bad)  
   14000beaa:	(bad)  
   14000beab:	push   QWORD PTR [rax+0x88]
   14000beb1:	add    BYTE PTR [rax],al
   14000beb3:	add    BYTE PTR [rax+rcx*4+0x26540000],bh
   14000beba:	add    BYTE PTR [rax],al
   14000bebc:	(bad)  
   14000bebd:	(bad)  
   14000bebe:	(bad)  
   14000bebf:	dec    DWORD PTR [rsi+0x26]
   14000bec5:	add    BYTE PTR [rax],al
   14000bec7:	add    BYTE PTR [rbp+0x1000026],bl
   14000becd:	add    BYTE PTR [rax],al
   14000becf:	add    BYTE PTR [rcx-0xffffd8],ah
   14000bed5:	(bad)  
   14000bed6:	(bad)  
   14000bed7:	call   FWORD PTR [rcx]
   14000bed9:	(bad)  
   14000beda:	or     eax,DWORD PTR [rax]
   14000bedc:	(bad)  
   14000bedd:	fs and eax,0x24342300
   14000bee3:	add    BYTE PTR [rdi],dl
   14000bee5:	add    DWORD PTR [rax+rax*1],ebx
   14000bee8:	adc    al,dh
   14000beea:	(bad)  
   14000beeb:	loopne 0x14000bef9
   14000beed:	ror    BYTE PTR [rdx],1
   14000beef:	ror    BYTE PTR [rax],0x70
   14000bef2:	add    BYTE PTR [rax],al
   14000bef4:	fadd   DWORD PTR [rbp-0x53500000]
   14000befa:	add    BYTE PTR [rax],al
   14000befc:	(bad)  
   14000befd:	(bad)  
   14000befe:	(bad)  
   14000beff:	inc    DWORD PTR [rax]
   14000bf01:	add    BYTE PTR [rax],al
   14000bf03:	add    BYTE PTR [rax],al
   14000bf05:	add    BYTE PTR [rax],al
   14000bf07:	add    dl,dl
   14000bf09:	mov    BYTE PTR [rax],al
   14000bf0b:	add    BYTE PTR [rcx],al
   14000bf0d:	add    BYTE PTR [rax],al
   14000bf0f:	add    dh,bl
   14000bf11:	mov    BYTE PTR [rax],al
   14000bf13:	add    BYTE PTR [rdx],al
   14000bf15:	add    BYTE PTR [rax],al
   14000bf17:	add    dl,ch
   14000bf19:	mov    BYTE PTR [rax],al
   14000bf1b:	add    BYTE PTR [rax],al
   14000bf1d:	add    BYTE PTR [rax],al
   14000bf1f:	add    dh,dh
   14000bf21:	mov    BYTE PTR [rax],al
   14000bf23:	add    bh,bh
   14000bf25:	(bad)  
   14000bf26:	(bad)  
   14000bf27:	inc    DWORD PTR [rax]
   14000bf29:	add    BYTE PTR [rax],al
   14000bf2b:	add    BYTE PTR [rax],al
   14000bf2d:	add    BYTE PTR [rax],al
   14000bf2f:	add    BYTE PTR [rax+rax*1],al
   14000bf32:	add    BYTE PTR [rax],al
   14000bf34:	add    eax,0x1000000
   14000bf39:	add    BYTE PTR [rax],al
   14000bf3b:	add    BYTE PTR [rax-0x41],al
   14000bf3e:	add    BYTE PTR [rax],al
   14000bf40:	add    BYTE PTR [rax],al
	...
   14000bf4b:	add    BYTE PTR [rdx],al
   14000bf4d:	mov    DWORD PTR [rax],eax
   14000bf4f:	add    BYTE PTR [rax+0x0],bl
	...
   14000bf5e:	add    BYTE PTR [rax],al
   14000bf60:	(bad)  
   14000bf61:	sub    BYTE PTR [rax],al
   14000bf63:	add    bh,bh
   14000bf65:	(bad)  
   14000bf66:	(bad)  
   14000bf67:	push   rcx
   14000bf69:	sub    BYTE PTR [rax],al
   14000bf6b:	add    BYTE PTR [rax],al
   14000bf6d:	add    BYTE PTR [rax],al
   14000bf6f:	add    BYTE PTR [rdi],dl
   14000bf71:	sub    DWORD PTR [rax],eax
   14000bf73:	add    BYTE PTR [rcx],al
   14000bf75:	add    BYTE PTR [rax],al
   14000bf77:	add    BYTE PTR [rdi],ch
   14000bf79:	sub    DWORD PTR [rax],eax
   14000bf7b:	add    BYTE PTR [rdx],al
   14000bf7d:	add    BYTE PTR [rax],al
   14000bf7f:	add    BYTE PTR [rbp+0x29],dl
   14000bf82:	add    BYTE PTR [rax],al
   14000bf84:	add    eax,DWORD PTR [rax]
   14000bf86:	add    BYTE PTR [rax],al
   14000bf88:	(bad)
   14000bf8b:	add    BYTE PTR [rdx],al
   14000bf8d:	add    BYTE PTR [rax],al
   14000bf8f:	add    bh,cl
   14000bf91:	sub    al,BYTE PTR [rax]
   14000bf93:	add    BYTE PTR [rcx],al
   14000bf95:	add    BYTE PTR [rax],al
   14000bf97:	add    ah,ch
   14000bf99:	sub    al,BYTE PTR [rax]
   14000bf9b:	add    BYTE PTR [rax],al
   14000bf9d:	add    BYTE PTR [rax],al
   14000bf9f:	add    BYTE PTR [rdx+0x2b],cl
   14000bfa2:	add    BYTE PTR [rax],al
   14000bfa4:	add    al,0x0
   14000bfa6:	add    BYTE PTR [rax],al
   14000bfa8:	rex.WX sub rax,0x0
   14000bfae:	add    BYTE PTR [rax],al
   14000bfb0:	jb     0x14000bfdf
   14000bfb2:	add    BYTE PTR [rax],al
   14000bfb4:	(bad)  
   14000bfb5:	(bad)  
   14000bfb6:	(bad)  
   14000bfb7:	(bad)  
   14000bfb8:	jns    0x14000bfe7
   14000bfba:	add    BYTE PTR [rax],al
   14000bfbc:	add    BYTE PTR [rax],al
   14000bfbe:	add    BYTE PTR [rax],al
   14000bfc0:	jns    0x14005bfc6
   14000bfc6:	add    BYTE PTR [rax],al
   14000bfc8:	(bad)  
   14000bfc9:	mov    DWORD PTR [rax],eax
   14000bfcb:	add    BYTE PTR [rax],al
   14000bfcd:	add    BYTE PTR [rax],al
   14000bfcf:	add    BYTE PTR [rcx],bl
   14000bfd1:	or     al,BYTE PTR [rdx]
   14000bfd3:	add    BYTE PTR [rdx],cl
   14000bfd5:	jb     0x14000bfdd
   14000bfd7:	push   rax
   14000bfd8:	fadd   DWORD PTR [rbp-0x53500000]
   14000bfde:	add    BYTE PTR [rax],al
   14000bfe0:	sbb    DWORD PTR [rdx],esi
   14000bfe2:	or     DWORD PTR [rax],eax
   14000bfe4:	and    BYTE PTR [rdx+rbx*1+0x0],dh
   14000bfe8:	sbb    al,0x64
   14000bfea:	sbb    DWORD PTR [rax],eax
   14000bfec:	sbb    BYTE PTR [rax+rbx*1],dh
   14000bfef:	add    BYTE PTR [rcx+rax*1],cl
   14000bff2:	(bad)  
   14000bff3:	add    BYTE PTR [rip+0x740000e0],al        # 0x1b400c0d9
   14000bff9:	xchg   BYTE PTR [rax],al
   14000bffb:	add    BYTE PTR [rax-0x54ffff54],cl
   14000c001:	add    BYTE PTR [rax],al
   14000c003:	add    bh,bh
   14000c005:	(bad)  
   14000c006:	(bad)  
   14000c007:	inc    DWORD PTR [rax]
   14000c009:	add    BYTE PTR [rax],al
   14000c00b:	add    BYTE PTR [rax],al
   14000c00d:	add    BYTE PTR [rax],al
   14000c00f:	add    BYTE PTR [rbx-0x77],al
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	add    DWORD PTR [rax],eax
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	rex.WRXB mov QWORD PTR [r8],r8
   14000c01b:	add    BYTE PTR [rdx],al
   14000c01d:	add    BYTE PTR [rax],al
   14000c01f:	add    BYTE PTR [rbx-0x77],bl
   14000c022:	add    BYTE PTR [rax],al
   14000c024:	(bad)  
   14000c025:	(bad)  
   14000c026:	(bad)  
   14000c027:	inc    DWORD PTR [rax]
   14000c029:	add    BYTE PTR [rax],al
   14000c02b:	add    BYTE PTR [rax],al
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	add    BYTE PTR [rbx],al
   14000c031:	add    BYTE PTR [rax],al
   14000c033:	add    BYTE PTR [rax+rax*1],al
   14000c036:	add    BYTE PTR [rax],al
   14000c038:	add    DWORD PTR [rax],eax
   14000c03a:	add    BYTE PTR [rax],al
   14000c03c:	rex rol BYTE PTR [rax],0x0
   14000c040:	add    BYTE PTR [rax],al
	...
   14000c04b:	add    BYTE PTR [rdi-0x77],ah
   14000c04e:	add    BYTE PTR [rax],al
   14000c050:	cmp    BYTE PTR [rax],al
	...
   14000c05e:	add    BYTE PTR [rax],al
   14000c060:	lock sub eax,0xffff0000
   14000c066:	(bad)  
   14000c067:	jmp    QWORD PTR [rdx]
   14000c069:	add    BYTE PTR cs:[rax],al
   14000c06c:	add    BYTE PTR [rax],al
   14000c06e:	add    BYTE PTR [rax],al
   14000c070:	(bad)  
   14000c071:	add    BYTE PTR cs:[rax],al
   14000c074:	add    DWORD PTR [rax],eax
   14000c076:	add    BYTE PTR [rax],al
   14000c078:	rex.B
   14000c079:	add    BYTE PTR cs:[rax],al
   14000c07c:	add    al,BYTE PTR [rax]
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	pop    rbx
   14000c081:	add    BYTE PTR cs:[rax],al
   14000c084:	add    eax,DWORD PTR [rax]
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	ja     0x14000c0b9
   14000c08a:	add    BYTE PTR [rax],al
   14000c08c:	add    al,BYTE PTR [rax]
   14000c08e:	add    BYTE PTR [rax],al
   14000c090:	xchg   ecx,eax
   14000c091:	(bad)  
   14000c092:	add    BYTE PTR [rax],al
   14000c094:	add    DWORD PTR [rax],eax
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	pushf  
   14000c099:	(bad)  
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	add    BYTE PTR [rax],al
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	mov    cl,0x2f
   14000c0a2:	add    BYTE PTR [rax],al
   14000c0a4:	(bad)  
   14000c0a5:	(bad)  
   14000c0a6:	(bad)  
   14000c0a7:	jmp    QWORD PTR [rdi-0x77]
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	add    BYTE PTR [rax],al
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	je     0x14000c03b
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	add    al,0x0
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	xchg   ecx,eax
   14000c0b9:	mov    DWORD PTR [rax],eax
   14000c0bb:	add    BYTE PTR [rax],al
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    BYTE PTR [rcx],bl
   14000c0c1:	or     al,BYTE PTR [rdx]
   14000c0c3:	add    BYTE PTR [rdx],cl
   14000c0c5:	xor    al,BYTE PTR [rsi]
   14000c0c7:	push   rax
   14000c0c8:	fadd   DWORD PTR [rbp-0x53780000]
   14000c0ce:	add    BYTE PTR [rax],al
   14000c0d0:	sbb    DWORD PTR [rbx+rcx*1],esi
   14000c0d3:	add    BYTE PTR [rsi],ah
   14000c0d5:	xor    al,BYTE PTR fs:[rax]
   14000c0d8:	and    dh,BYTE PTR [rcx+rsi*1]
   14000c0db:	add    BYTE PTR [rsi],dl
   14000c0dd:	add    DWORD PTR [rdx],ebp
   14000c0df:	add    BYTE PTR [rbx],cl
   14000c0e1:	lock or eax,esp
   14000c0e4:	(bad)  
   14000c0e5:	rol    BYTE PTR [rip+0x500470],0x0        # 0x14050c55c
   14000c0ec:	je     0x14000c074
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	(bad)  
   14000c0f1:	lods   al,BYTE PTR ds:[rsi]
   14000c0f2:	add    BYTE PTR [rax],al
   14000c0f4:	rex.X add DWORD PTR [rax],eax
   14000c0f7:	add    bh,bh
   14000c0f9:	(bad)  
   14000c0fa:	(bad)  
   14000c0fb:	jmp    QWORD PTR [rbp+0x89]
   14000c101:	add    BYTE PTR [rax],al
   14000c103:	add    BYTE PTR [rcx+0x1000089],dh
   14000c109:	add    BYTE PTR [rax],al
   14000c10b:	add    BYTE PTR [rbp+0x2000089],bh
   14000c111:	add    BYTE PTR [rax],al
   14000c113:	add    cl,cl
   14000c115:	mov    DWORD PTR [rax],eax
   14000c117:	add    BYTE PTR [rbx],al
   14000c119:	add    BYTE PTR [rax],al
   14000c11b:	add    ch,dl
   14000c11d:	mov    DWORD PTR [rax],eax
   14000c11f:	add    BYTE PTR [rax+rax*1],al
   14000c122:	add    BYTE PTR [rax],al
   14000c124:	loope  0x14000c0af
	...
   14000c12e:	add    BYTE PTR [rax],al
   14000c130:	in     al,dx
   14000c131:	(bad)  
   14000c132:	add    BYTE PTR [rax],al
   14000c134:	(bad)  
   14000c135:	(bad)  
   14000c136:	(bad)  
   14000c137:	push   QWORD PTR [rcx]
   14000c139:	xor    BYTE PTR [rax],al
   14000c13b:	add    BYTE PTR [rax],al
   14000c13d:	add    BYTE PTR [rax],al
   14000c13f:	add    BYTE PTR [rbp+0x1000031],dh
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    cl,dh
   14000c149:	xor    DWORD PTR [rax],eax
   14000c14b:	add    BYTE PTR [rdx],al
   14000c14d:	add    BYTE PTR [rax],al
   14000c14f:	add    dh,dh
   14000c151:	xor    DWORD PTR [rax],eax
   14000c153:	add    BYTE PTR [rbx],al
   14000c155:	add    BYTE PTR [rax],al
   14000c157:	add    BYTE PTR [rbp+0x32],bl
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	add    al,0x0
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	leave  
   14000c161:	xor    al,BYTE PTR [rax]
   14000c163:	add    BYTE PTR [rip+0x27000000],al        # 0x16700c169
   14000c169:	xor    eax,0x40000
   14000c16e:	add    BYTE PTR [rax],al
   14000c170:	rex.WB xor rax,0x30000
   14000c176:	add    BYTE PTR [rax],al
   14000c178:	popf   
   14000c179:	xor    eax,0x20000
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	ret    0x35
   14000c183:	add    BYTE PTR [rcx],al
   14000c185:	add    BYTE PTR [rax],al
   14000c187:	add    al,dl
   14000c189:	xor    eax,0x0
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	in     al,0x35
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	(bad)  
   14000c195:	(bad)  
   14000c196:	(bad)  
   14000c197:	call   FWORD PTR [rcx]
   14000c199:	adc    eax,DWORD PTR [rcx]
   14000c19b:	add    BYTE PTR [rdx+riz*8],al
   14000c19e:	add    BYTE PTR [rax],al
   14000c1a0:	in     al,0x85
   14000c1a2:	add    BYTE PTR [rax],al
   14000c1a4:	(bad)  
   14000c1a5:	add    BYTE PTR [rax],al
   14000c1a7:	add    BYTE PTR [rcx],bl
   14000c1a9:	sbb    eax,0x741d0008
   14000c1ae:	or     eax,DWORD PTR [rax]
   14000c1b0:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   14000c1b4:	adc    eax,0x9000834
   14000c1b9:	push   rdx
   14000c1ba:	add    eax,0x85d8e0
   14000c1bf:	add    BYTE PTR [rax],bh
   14000c1c1:	lods   al,BYTE PTR ds:[rsi]
	...
   14000c1ca:	add    BYTE PTR [rax],al
   14000c1cc:	add    DWORD PTR [rax],eax
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	add    DWORD PTR [rax],eax
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	fadd   st,st(1)
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	add    BYTE PTR [rax],al
	...
   14000c1e3:	add    bl,dh
   14000c1e5:	mov    DWORD PTR [rax],eax
   14000c1e7:	add    BYTE PTR [rax],bh
   14000c1e9:	add    BYTE PTR [rax],al
   14000c1eb:	add    BYTE PTR [rax],al
   14000c1ed:	add    BYTE PTR [rax],al
   14000c1ef:	add    ah,cl
   14000c1f1:	cmp    al,0x0
   14000c1f3:	add    bh,bh
   14000c1f5:	(bad)  
   14000c1f6:	(bad)  
   14000c1f7:	jmp    QWORD PTR [rdi]
   14000c1f9:	cmp    eax,0x0
   14000c1fe:	add    BYTE PTR [rax],al
   14000c200:	rex.B cmp eax,0xffff0000
   14000c206:	(bad)  
   14000c207:	push   rbx
   14000c209:	mov    DWORD PTR [rax],eax
   14000c20b:	add    BYTE PTR [rax],al
   14000c20d:	add    BYTE PTR [rax],al
   14000c20f:	add    BYTE PTR [rax],al
   14000c211:	mov    al,BYTE PTR [rax]
   14000c213:	add    BYTE PTR [rcx],al
   14000c215:	add    BYTE PTR [rax],al
   14000c217:	add    BYTE PTR [rcx],bl
   14000c219:	or     al,BYTE PTR [rdx]
   14000c21b:	add    BYTE PTR [rdx],cl
   14000c21d:	xor    al,BYTE PTR [rsi]
   14000c21f:	push   rax
   14000c220:	fadd   DWORD PTR [rbp-0x53c80000]
   14000c226:	add    BYTE PTR [rax],al
   14000c228:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415c236
   14000c22e:	or     BYTE PTR [rax],al
   14000c230:	adc    eax,0x15000754
   14000c235:	xor    al,0x6
   14000c237:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e0d36f
   14000c23d:	sbb    DWORD PTR [rdx],ecx
   14000c23f:	add    BYTE PTR [rcx],bl
   14000c241:	je     0x14000c24c
   14000c243:	add    BYTE PTR [rcx],bl
   14000c245:	or     BYTE PTR fs:[rax],al
   14000c248:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000c24c:	sbb    DWORD PTR [rsi+rax*1],esi
   14000c24f:	add    BYTE PTR [rcx],bl
   14000c251:	xor    dl,BYTE PTR [rip+0x81d19e0]        # 0x1481ddc37
   14000c257:	add    BYTE PTR [rip+0x19000b74],bl        # 0x15900cdd1
   14000c25d:	or     al,BYTE PTR fs:[rax]
   14000c260:	adc    eax,0x9000834
   14000c265:	push   rdx
   14000c266:	add    eax,0x85d8e0
   14000c26b:	add    BYTE PTR [rax],dl
   14000c26d:	lods   al,BYTE PTR ds:[rsi]
	...
   14000c276:	add    BYTE PTR [rax],al
   14000c278:	add    DWORD PTR [rax],eax
   14000c27a:	add    BYTE PTR [rax],al
   14000c27c:	add    DWORD PTR [rax],eax
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	test   dl,al
   14000c282:	add    BYTE PTR [rax],al
   14000c284:	add    BYTE PTR [rax],al
	...
   14000c28f:	add    BYTE PTR [rcx],bl
   14000c291:	mov    al,BYTE PTR [rax]
   14000c293:	add    BYTE PTR [rax],bh
   14000c295:	add    BYTE PTR [rax],al
   14000c297:	add    BYTE PTR [rax+rax*2+0x0],bl
   14000c29b:	add    bh,bh
   14000c29d:	(bad)  
   14000c29e:	(bad)  
   14000c29f:	(bad)  
   14000c2a0:	mov    edx,0x40
   14000c2a5:	add    BYTE PTR [rax],al
   14000c2a7:	add    dl,dl
   14000c2a9:	add    BYTE PTR [rax],al
   14000c2ac:	(bad)  
   14000c2ad:	(bad)  
   14000c2ae:	(bad)  
   14000c2af:	call   FWORD PTR [rcx]
   14000c2b1:	mov    al,BYTE PTR [rax]
   14000c2b3:	add    BYTE PTR [rax],al
   14000c2b5:	add    BYTE PTR [rax],al
   14000c2b7:	add    BYTE PTR [rsi],ah
   14000c2b9:	mov    al,BYTE PTR [rax]
   14000c2bb:	add    BYTE PTR [rcx],al
   14000c2bd:	add    BYTE PTR [rax],al
   14000c2bf:	add    BYTE PTR [rcx],bl
   14000c2c1:	or     al,BYTE PTR [rdx]
   14000c2c3:	add    BYTE PTR [rdx],cl
   14000c2c5:	xor    al,BYTE PTR [rsi]
   14000c2c7:	push   rax
   14000c2c8:	fadd   DWORD PTR [rbp-0x53f00000]
   14000c2ce:	add    BYTE PTR [rax],al
   14000c2d0:	sbb    DWORD PTR [rax],esp
   14000c2d2:	add    eax,0x14621800
   14000c2d7:	loopne 0x14000c2eb
   14000c2d9:	jo     0x14000c2ec
   14000c2db:	(bad)  
   14000c2dc:	adc    BYTE PTR [rax],dh
   14000c2de:	add    BYTE PTR [rax],al
   14000c2e0:	fadd   DWORD PTR [rbp-0x54180000]
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	(bad)  
   14000c2e9:	(bad)  
   14000c2ea:	(bad)  
   14000c2eb:	inc    DWORD PTR [rax]
   14000c2ed:	add    BYTE PTR [rax],al
   14000c2ef:	add    bh,bh
   14000c2f1:	(bad)  
   14000c2f2:	(bad)  
   14000c2f3:	inc    DWORD PTR [rax]
   14000c2f5:	add    BYTE PTR [rax],al
   14000c2f7:	add    BYTE PTR [rcx],al
   14000c2f9:	add    BYTE PTR [rax],al
   14000c2fb:	add    BYTE PTR [rax],al
   14000c2fd:	add    BYTE PTR [rax],al
   14000c2ff:	add    BYTE PTR [rcx],al
	...
   14000c30d:	add    BYTE PTR [rax],al
   14000c30f:	add    BYTE PTR [rbx],al
   14000c311:	add    BYTE PTR [rax],al
   14000c313:	add    BYTE PTR [rcx],al
   14000c315:	add    BYTE PTR [rax],al
   14000c317:	add    BYTE PTR [rax],dh
   14000c319:	ret    
   14000c31a:	add    BYTE PTR [rax],al
   14000c31c:	add    al,BYTE PTR [rax]
   14000c31e:	add    BYTE PTR [rax],al
   14000c320:	add    al,BYTE PTR [rax]
   14000c322:	add    BYTE PTR [rax],al
   14000c324:	add    eax,DWORD PTR [rax]
   14000c326:	add    BYTE PTR [rax],al
   14000c328:	add    DWORD PTR [rax],eax
   14000c32a:	add    BYTE PTR [rax],al
   14000c32c:	rex.R ret 
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	add    BYTE PTR [rax],al
	...
   14000c33b:	add    BYTE PTR [rdi],bh
   14000c33d:	mov    al,BYTE PTR [rax]
   14000c33f:	add    BYTE PTR [rax],bh
   14000c341:	add    BYTE PTR [rax],al
   14000c343:	add    BYTE PTR [rax+0x0],al
	...
   14000c34e:	add    BYTE PTR [rax],al
   14000c350:	test   BYTE PTR [rdx+0x380000],cl
	...
   14000c35e:	add    BYTE PTR [rax],al
   14000c360:	sbb    al,0x41
   14000c362:	add    BYTE PTR [rax],al
   14000c364:	(bad)  
   14000c365:	(bad)  
   14000c366:	(bad)  
   14000c367:	dec    DWORD PTR [rbx+0x41]
   14000c36d:	add    BYTE PTR [rax],al
   14000c36f:	add    BYTE PTR [rcx-0xffffbf],dh
   14000c375:	(bad)  
   14000c376:	(bad)  
   14000c377:	(bad)  
   14000c378:	(bad)  
   14000c379:	mov    al,BYTE PTR [rax]
   14000c37b:	add    BYTE PTR [rax],al
   14000c37d:	add    BYTE PTR [rax],al
   14000c37f:	add    BYTE PTR [rdx+rcx*4+0x0],cl
   14000c383:	add    BYTE PTR [rcx],al
   14000c385:	add    BYTE PTR [rax],al
   14000c387:	add    BYTE PTR [rdx+rcx*4+0x0],dl
   14000c38b:	add    BYTE PTR [rdx],al
   14000c38d:	add    BYTE PTR [rax],al
   14000c38f:	add    BYTE PTR [rsi-0x76],dh
   14000c392:	add    BYTE PTR [rax],al
   14000c394:	add    BYTE PTR [rax],al
   14000c396:	add    BYTE PTR [rax],al
   14000c398:	xchg   ecx,eax
   14000c399:	mov    al,BYTE PTR [rax]
   14000c39b:	add    BYTE PTR [rbx],al
   14000c39d:	add    BYTE PTR [rax],al
   14000c39f:	add    BYTE PTR [rcx],bl
   14000c3a1:	or     al,BYTE PTR [rdx]
   14000c3a3:	add    BYTE PTR [rdx],cl
   14000c3a5:	xor    al,BYTE PTR [rsi]
   14000c3a7:	push   rax
   14000c3a8:	fadd   DWORD PTR [rbp-0x54180000]
   14000c3ae:	add    BYTE PTR [rax],al
   14000c3b0:	sbb    DWORD PTR [rdx],esp
   14000c3b2:	(bad)  
   14000c3b3:	add    BYTE PTR [rdx],bl
   14000c3b5:	push   rdx
   14000c3b6:	(bad)  
   14000c3b7:	lock adc al,0xe0
   14000c3ba:	adc    dh,BYTE PTR [rax+0x11]
   14000c3bd:	(bad)  
   14000c3be:	adc    BYTE PTR [rax],dh
   14000c3c0:	fadd   DWORD PTR [rbp-0x54400000]
	...
   14000c3ce:	add    BYTE PTR [rax],al
   14000c3d0:	add    eax,DWORD PTR [rax]
   14000c3d2:	add    BYTE PTR [rax],al
   14000c3d4:	add    DWORD PTR [rax],eax
   14000c3d6:	add    BYTE PTR [rax],al
   14000c3d8:	lock ret 
   14000c3da:	add    BYTE PTR [rax],al
   14000c3dc:	add    al,BYTE PTR [rax]
   14000c3de:	add    BYTE PTR [rax],al
   14000c3e0:	add    al,BYTE PTR [rax]
   14000c3e2:	add    BYTE PTR [rax],al
   14000c3e4:	add    eax,DWORD PTR [rax]
   14000c3e6:	add    BYTE PTR [rax],al
   14000c3e8:	add    DWORD PTR [rax],eax
   14000c3ea:	add    BYTE PTR [rax],al
   14000c3ec:	add    al,0xc4
   14000c3ee:	add    BYTE PTR [rax],al
   14000c3f0:	add    BYTE PTR [rax],al
	...
   14000c3fb:	add    BYTE PTR [rdi+0x3800008a],ch
   14000c401:	add    BYTE PTR [rax],al
   14000c403:	add    BYTE PTR [rax+0x0],al
	...
   14000c40e:	add    BYTE PTR [rax],al
   14000c410:	add    BYTE PTR [rbx+0x380000],cl
	...
   14000c41e:	add    BYTE PTR [rax],al
   14000c420:	fadd   DWORD PTR [rdx+0x0]
   14000c423:	add    bh,bh
   14000c425:	(bad)  
   14000c426:	(bad)  
   14000c427:	dec    DWORD PTR [rbx+rax*2+0x0]
   14000c42b:	add    BYTE PTR [rax],al
   14000c42d:	add    BYTE PTR [rax],al
   14000c42f:	add    BYTE PTR [rax-0xffffbd],al
   14000c435:	(bad)  
   14000c436:	(bad)  
   14000c437:	jmp    FWORD PTR [rdi+0x8a]
   14000c43d:	add    BYTE PTR [rax],al
   14000c43f:	add    BYTE PTR [rdx+rcx*4+0x10000],bh
   14000c446:	add    BYTE PTR [rax],al
   14000c448:	(bad)  
   14000c449:	mov    al,BYTE PTR [rax]
   14000c44b:	add    BYTE PTR [rdx],al
   14000c44d:	add    BYTE PTR [rax],al
   14000c44f:	add    dl,dh
   14000c451:	mov    al,BYTE PTR [rax]
   14000c453:	add    BYTE PTR [rax],al
   14000c455:	add    BYTE PTR [rax],al
   14000c457:	add    BYTE PTR [rip+0x300008b],cl        # 0x14300c4e8
   14000c45d:	add    BYTE PTR [rax],al
   14000c45f:	add    BYTE PTR [rcx],bl
   14000c461:	or     al,BYTE PTR [rdx]
   14000c463:	add    BYTE PTR [rdx],cl
   14000c465:	xor    al,BYTE PTR [rsi]
   14000c467:	push   rax
   14000c468:	fadd   DWORD PTR [rbp-0x54400000]
   14000c46e:	add    BYTE PTR [rax],al
   14000c470:	add    DWORD PTR [rax],ebx
   14000c472:	or     al,BYTE PTR [rax]
   14000c474:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   14000c478:	sbb    BYTE PTR [rdx+rcx*1+0x0],dl
   14000c47c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14000c47f:	add    BYTE PTR [rax],bl
   14000c481:	xor    dl,BYTE PTR [rax+rsi*8]
   14000c484:	adc    ah,al
   14000c486:	adc    BYTE PTR [rax+0x1],dh
   14000c489:	adc    eax,0x74150008
   14000c48e:	or     DWORD PTR [rax],eax
   14000c490:	adc    eax,0x15000864
   14000c495:	xor    al,0x7
   14000c497:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e0d5cf
   14000c49d:	adc    eax,DWORD PTR [rcx]
   14000c49f:	add    BYTE PTR [rdx+rax*8],al
   14000c4a2:	add    BYTE PTR [rax],al
   14000c4a4:	in     al,0x85
   14000c4a6:	add    BYTE PTR [rax],al
   14000c4a8:	push   rax
   14000c4a9:	add    BYTE PTR [rax],al
   14000c4ab:	add    BYTE PTR [rcx],bl
   14000c4ad:	and    BYTE PTR [rdx],cl
   14000c4af:	add    BYTE PTR [rax],ah
   14000c4b1:	adc    BYTE PTR fs:[rax],al
   14000c4b4:	sbb    al,0x34
   14000c4b6:	(bad)  
   14000c4b7:	add    BYTE PTR [rax],dl
   14000c4b9:	jb     0x14000c4c7
   14000c4bb:	lock or ah,al
   14000c4be:	or     al,dl
   14000c4c0:	(bad)  
   14000c4c1:	rol    BYTE PTR [rax+rsi*2],0xd8
   14000c4c5:	test   DWORD PTR [rax],eax
   14000c4c7:	add    BYTE PTR [rax+0xab],bl
   14000c4cd:	add    BYTE PTR [rax],al
   14000c4cf:	add    BYTE PTR [rax],al
   14000c4d1:	add    BYTE PTR [rax],al
   14000c4d3:	add    BYTE PTR [rcx],al
   14000c4d5:	add    BYTE PTR [rax],al
   14000c4d7:	add    BYTE PTR [rcx],al
   14000c4d9:	add    BYTE PTR [rax],al
   14000c4db:	add    al,ah
   14000c4dd:	(bad)  
   14000c4de:	add    BYTE PTR [rax],al
   14000c4e0:	add    BYTE PTR [rax],al
	...
   14000c4eb:	add    BYTE PTR [rbx],ch
   14000c4ed:	mov    eax,DWORD PTR [rax]
   14000c4ef:	add    BYTE PTR [rax+0x0],cl
   14000c4f2:	add    BYTE PTR [rax],al
   14000c4f4:	add    BYTE PTR [rax],al
   14000c4f6:	add    BYTE PTR [rax],al
   14000c4f8:	or     BYTE PTR [rsi+0x0],al
   14000c4fb:	add    bh,bh
   14000c4fd:	(bad)  
   14000c4fe:	(bad)  
   14000c4ff:	jmp    FWORD PTR [rbp+0x46]
   14000c502:	add    BYTE PTR [rax],al
   14000c504:	add    BYTE PTR [rax],al
   14000c506:	add    BYTE PTR [rax],al
   14000c508:	jge    0x14000c550
   14000c50a:	add    BYTE PTR [rax],al
   14000c50c:	(bad)  
   14000c50d:	(bad)  
   14000c50e:	(bad)  
   14000c50f:	jmp    FWORD PTR [rbx]
   14000c511:	mov    eax,DWORD PTR [rax]
   14000c513:	add    BYTE PTR [rax],al
   14000c515:	add    BYTE PTR [rax],al
   14000c517:	add    BYTE PTR [rax],bh
   14000c519:	mov    eax,DWORD PTR [rax]
   14000c51b:	add    BYTE PTR [rcx],al
   14000c51d:	add    BYTE PTR [rax],al
   14000c51f:	add    BYTE PTR [rcx],bl
   14000c521:	or     al,BYTE PTR [rdx]
   14000c523:	add    BYTE PTR [rdx],cl
   14000c525:	push   rdx
   14000c526:	(bad)  
   14000c527:	push   rax
   14000c528:	fadd   DWORD PTR [rbp-0x54680000]
   14000c52e:	add    BYTE PTR [rax],al
   14000c530:	sbb    DWORD PTR [rax],esp
   14000c532:	(bad)  
   14000c533:	add    BYTE PTR [rax],ah
   14000c535:	or     DWORD PTR fs:[rax],eax
   14000c538:	sbb    al,0x34
   14000c53a:	or     BYTE PTR [rax],al
   14000c53c:	adc    BYTE PTR [rdx+0xc],dl
   14000c53f:	jo     0x14000c519
   14000c541:	test   DWORD PTR [rax],eax
   14000c543:	add    BYTE PTR [rax-0x55],dh
	...
   14000c54e:	add    BYTE PTR [rax],al
   14000c550:	add    DWORD PTR [rax],eax
   14000c552:	add    BYTE PTR [rax],al
   14000c554:	add    DWORD PTR [rax],eax
   14000c556:	add    BYTE PTR [rax],al
   14000c558:	pop    rsp
   14000c559:	(bad)
   14000c55c:	add    BYTE PTR [rax],al
	...
   14000c567:	add    BYTE PTR [rcx-0x75],dl
   14000c56a:	add    BYTE PTR [rax],al
   14000c56c:	rex.W add BYTE PTR [rax],al
   14000c56f:	add    ah,bh
   14000c571:	rex.RX add BYTE PTR [rax],r8b
   14000c574:	(bad)  
   14000c575:	(bad)  
   14000c576:	(bad)  
   14000c577:	jmp    FWORD PTR [rdx]
   14000c579:	rex.RXB add BYTE PTR [r8],r8b
   14000c57c:	add    BYTE PTR [rax],al
   14000c57e:	add    BYTE PTR [rax],al
   14000c580:	push   rcx
   14000c581:	rex.RXB add BYTE PTR [r8],r8b
   14000c584:	(bad)  
   14000c585:	(bad)  
   14000c586:	(bad)  
   14000c587:	call   QWORD PTR [rcx-0x75]
   14000c58a:	add    BYTE PTR [rax],al
   14000c58c:	add    BYTE PTR [rax],al
   14000c58e:	add    BYTE PTR [rax],al
   14000c590:	pop    rdi
   14000c591:	mov    eax,DWORD PTR [rax]
   14000c593:	add    BYTE PTR [rcx],al
   14000c595:	add    BYTE PTR [rax],al
   14000c597:	add    BYTE PTR [rcx],bl
   14000c599:	or     eax,DWORD PTR [rbx]
   14000c59b:	add    BYTE PTR [rbx],cl
   14000c59d:	rex.X (bad) 
   14000c59f:	push   rax
   14000c5a0:	(bad)  
   14000c5a1:	xor    BYTE PTR [rax],al
   14000c5a3:	add    al,bl
   14000c5a5:	test   DWORD PTR [rax],eax
   14000c5a7:	add    BYTE PTR [rax-0x55],dh
   14000c5aa:	add    BYTE PTR [rax],al
   14000c5ac:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b41dc5be
   14000c5b2:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d00d41d
   14000c5b9:	push   rsp
   14000c5ba:	or     eax,0xc341d00
   14000c5bf:	add    BYTE PTR [rip+0x17f01972],bl        # 0x157f0df37
   14000c5c5:	loopne 0x14000c5dc
   14000c5c7:	rcr    BYTE PTR [rcx],0x15
   14000c5ca:	add    al,BYTE PTR [rax]
   14000c5cc:	(bad)  
   14000c5cd:	jb     0x14000c5d1
   14000c5cf:	xor    ah,ah
   14000c5d1:	test   DWORD PTR [rax],eax
   14000c5d3:	add    BYTE PTR [rax],bh
   14000c5d5:	add    BYTE PTR [rax],al
   14000c5d7:	add    BYTE PTR [rcx],al
   14000c5d9:	(bad)  
   14000c5da:	add    al,BYTE PTR [rax]
   14000c5dc:	(bad)  
   14000c5dd:	xchg   edx,eax
   14000c5de:	add    dh,BYTE PTR [rax]
   14000c5e0:	add    DWORD PTR [rcx],ebx
   14000c5e2:	or     al,BYTE PTR [rax]
   14000c5e4:	sbb    DWORD PTR [rdi+rcx*1+0x0],esi
   14000c5e8:	sbb    DWORD PTR [rsi+rcx*1+0x0],esp
   14000c5ec:	sbb    DWORD PTR [rbp+rcx*1+0x0],edx
   14000c5f0:	sbb    DWORD PTR [rsp+rcx*1],esi
   14000c5f3:	add    BYTE PTR [rcx],bl
   14000c5f5:	xchg   edx,eax
   14000c5f6:	adc    eax,0x21519e0
   14000c5fb:	add    BYTE PTR [rsi],al
   14000c5fd:	mov    dl,0x2
   14000c5ff:	xor    ah,ah
   14000c601:	test   DWORD PTR [rax],eax
   14000c603:	add    BYTE PTR [rax+0x0],dl
   14000c606:	add    BYTE PTR [rax],al
   14000c608:	sbb    DWORD PTR [rbx],esp
   14000c60a:	or     BYTE PTR [rax],al
   14000c60c:	adc    al,0x64
   14000c60e:	adc    DWORD PTR [rax],eax
   14000c610:	adc    al,0x54
   14000c612:	adc    BYTE PTR [rax],al
   14000c614:	adc    al,0x34
   14000c616:	lldt   WORD PTR [rdx+rsi*4]
   14000c61a:	adc    BYTE PTR [rax-0x1c],dh
   14000c61d:	test   DWORD PTR [rax],eax
   14000c61f:	add    BYTE PTR [rax+0x0],dl
   14000c622:	add    BYTE PTR [rax],al
   14000c624:	sbb    DWORD PTR [rbx+rcx*1],esi
   14000c627:	add    BYTE PTR [rsi],ah
   14000c629:	fs (bad) 
   14000c62b:	add    BYTE PTR [rdx],ah
   14000c62d:	xor    al,0x1e
   14000c62f:	add    BYTE PTR [rsi],dl
   14000c631:	add    DWORD PTR [rsi],edx
   14000c633:	add    BYTE PTR [rbx],cl
   14000c635:	lock or eax,esp
   14000c638:	(bad)  
   14000c639:	rol    BYTE PTR [rip+0x500470],0x0        # 0x14050cab0
   14000c640:	je     0x14000c5c8
   14000c642:	add    BYTE PTR [rax],al
   14000c644:	movabs al,ds:0xff000000a20000ad
   14000c64d:	(bad)  
   14000c64e:	(bad)  
   14000c64f:	jmp    QWORD PTR [rcx+0x8b]
   14000c655:	add    BYTE PTR [rax],al
   14000c657:	add    BYTE PTR [rbp+0x8b],ch
   14000c65d:	add    BYTE PTR [rax],al
   14000c65f:	add    ah,al
   14000c661:	rex.WXB add BYTE PTR [r8],al
   14000c664:	(bad)  
   14000c665:	(bad)  
   14000c666:	(bad)  
   14000c667:	call   QWORD PTR [rax]
   14000c669:	rex.WR add BYTE PTR [rax],r8b
   14000c66c:	add    BYTE PTR [rax],al
   14000c66e:	add    BYTE PTR [rax],al
   14000c670:	mov    ebp,0x100004c
   14000c675:	add    BYTE PTR [rax],al
   14000c677:	add    ah,ch
   14000c679:	rex.WRB add BYTE PTR [r8],r8b
   14000c67c:	add    BYTE PTR [rax],al
   14000c67e:	add    BYTE PTR [rax],al
   14000c680:	ror    BYTE PTR [rsi+0x0],1
   14000c683:	add    bh,bh
   14000c685:	(bad)  
   14000c686:	(bad)  
   14000c687:	call   FWORD PTR [rcx]
   14000c689:	xor    al,0xb
   14000c68b:	add    BYTE PTR [rsi],ah
   14000c68d:	fs sbb al,0x0
   14000c690:	and    dh,BYTE PTR [rbx+rbx*1]
   14000c693:	add    BYTE PTR [rsi],dl
   14000c695:	add    DWORD PTR [rax+rax*1],edx
   14000c698:	or     esi,eax
   14000c69a:	or     eax,esp
   14000c69c:	(bad)  
   14000c69d:	rol    BYTE PTR [rip+0x500470],0x0        # 0x14050cb14
   14000c6a4:	je     0x14000c62c
   14000c6a6:	add    BYTE PTR [rax],al
   14000c6a8:	lock lods eax,DWORD PTR ds:[rsi]
   14000c6aa:	add    BYTE PTR [rax],al
   14000c6ac:	(bad)  
   14000c6ad:	add    BYTE PTR [rax],al
   14000c6af:	add    bh,bh
   14000c6b1:	(bad)  
   14000c6b2:	(bad)  
   14000c6b3:	(bad)  
   14000c6b4:	mov    edi,0x8b
   14000c6b9:	add    BYTE PTR [rax],al
   14000c6bb:	add    bl,cl
   14000c6bd:	mov    eax,DWORD PTR [rax]
   14000c6bf:	add    BYTE PTR [rcx],al
   14000c6c1:	add    BYTE PTR [rax],al
   14000c6c3:	add    bh,dl
   14000c6c5:	mov    eax,DWORD PTR [rax]
   14000c6c7:	add    BYTE PTR [rdx],al
   14000c6c9:	add    BYTE PTR [rax],al
   14000c6cb:	add    bl,ah
   14000c6cd:	mov    eax,DWORD PTR [rax]
   14000c6cf:	add    BYTE PTR [rax],dl
   14000c6d1:	rex.WRXB add BYTE PTR [r8],r8b
   14000c6d4:	(bad)  
   14000c6d5:	(bad)  
   14000c6d6:	(bad)  
   14000c6d7:	inc    DWORD PTR [rdi+0x4f]
   14000c6da:	add    BYTE PTR [rax],al
   14000c6dc:	add    BYTE PTR [rax],al
   14000c6de:	add    BYTE PTR [rax],al
   14000c6e0:	ret    0x4f
   14000c6e3:	add    BYTE PTR [rcx],al
   14000c6e5:	add    BYTE PTR [rax],al
   14000c6e7:	add    BYTE PTR [rbp+0x50],cl
   14000c6ea:	add    BYTE PTR [rax],al
   14000c6ec:	add    al,BYTE PTR [rax]
   14000c6ee:	add    BYTE PTR [rax],al
   14000c6f0:	jp     0x14000c742
   14000c6f2:	add    BYTE PTR [rax],al
   14000c6f4:	add    eax,DWORD PTR [rax]
   14000c6f6:	add    BYTE PTR [rax],al
   14000c6f8:	xchg   DWORD PTR [rax+0x0],edx
   14000c6fb:	add    BYTE PTR [rdx],al
   14000c6fd:	add    BYTE PTR [rax],al
   14000c6ff:	add    BYTE PTR [rcx+0x1000050],bl
   14000c705:	add    BYTE PTR [rax],al
   14000c707:	add    BYTE PTR [rbx+0x50],ah
   14000c70d:	add    BYTE PTR [rax],al
   14000c70f:	add    dl,dh
   14000c711:	push   rax
   14000c712:	add    BYTE PTR [rax],al
   14000c714:	add    DWORD PTR [rax],eax
   14000c716:	add    BYTE PTR [rax],al
   14000c718:	or     al,0x51
   14000c71a:	add    BYTE PTR [rax],al
   14000c71c:	add    BYTE PTR [rax],al
   14000c71e:	add    BYTE PTR [rax],al
   14000c720:	xor    dl,BYTE PTR [rcx+0x0]
   14000c723:	add    bh,bh
   14000c725:	(bad)  
   14000c726:	(bad)  
   14000c727:	call   FWORD PTR [rcx]
   14000c729:	(bad)  
   14000c72a:	or     eax,0x81742e00
   14000c72f:	add    BYTE PTR [rdx],ch
   14000c731:	add    BYTE PTR fs:[rax],0x26
   14000c735:	xor    al,0x7e
   14000c737:	add    BYTE PTR [rdx],bl
   14000c739:	add    DWORD PTR [rax+0x0],edi
   14000c73c:	or     al,0xf0
   14000c73e:	or     ah,al
   14000c740:	or     al,dl
   14000c742:	(bad)  
   14000c743:	rol    BYTE PTR [rax+rdx*2],0x0
   14000c747:	add    BYTE PTR [rsi+rax*4+0x0],dh
   14000c74b:	add    al,cl
   14000c74d:	lods   eax,DWORD PTR ds:[rsi]
   14000c74e:	add    BYTE PTR [rax],al
   14000c750:	mov    dl,0x3
   14000c752:	add    BYTE PTR [rax],al
   14000c754:	(bad)  
   14000c755:	(bad)  
   14000c756:	(bad)  
   14000c757:	push   rbp
   14000c759:	mov    eax,DWORD PTR [rax]
   14000c75b:	add    BYTE PTR [rax],al
   14000c75d:	add    BYTE PTR [rax],al
   14000c75f:	add    BYTE PTR [rsi],bl
   14000c761:	mov    WORD PTR [rax],es
   14000c763:	add    BYTE PTR [rcx],al
   14000c765:	add    BYTE PTR [rax],al
   14000c767:	add    BYTE PTR [rsp+rcx*4],ch
   14000c76a:	add    BYTE PTR [rax],al
   14000c76c:	add    BYTE PTR [rax],al
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	cmp    BYTE PTR [rax+rax*1+0x300],cl
   14000c777:	add    BYTE PTR [rsp+rcx*4+0x0],al
   14000c77b:	add    BYTE PTR [rax+rax*1],al
   14000c77e:	add    BYTE PTR [rax],al
   14000c780:	push   rax
   14000c781:	mov    WORD PTR [rax],es
   14000c783:	add    BYTE PTR [rip+0x5c000000],al        # 0x19c00c789
   14000c789:	mov    WORD PTR [rax],es
   14000c78b:	add    BYTE PTR [rsi],al
   14000c78d:	add    BYTE PTR [rax],al
   14000c78f:	add    BYTE PTR [rax-0x74],ch
   14000c792:	add    BYTE PTR [rax],al
   14000c794:	(bad)  
   14000c795:	add    BYTE PTR [rax],al
   14000c797:	add    BYTE PTR [rsi-0x74],dh
   14000c79a:	add    BYTE PTR [rax],al
   14000c79c:	add    BYTE PTR [rax],al
   14000c79e:	add    BYTE PTR [rax],al
   14000c7a0:	nop
   14000c7a1:	push   rcx
   14000c7a2:	add    BYTE PTR [rax],al
   14000c7a4:	(bad)  
   14000c7a5:	(bad)  
   14000c7a6:	(bad)  
   14000c7a7:	call   rdi
   14000c7a9:	push   rcx
   14000c7aa:	add    BYTE PTR [rax],al
   14000c7ac:	add    BYTE PTR [rax],al
   14000c7ae:	add    BYTE PTR [rax],al
   14000c7b0:	enter  0x52,0x0
   14000c7b4:	add    DWORD PTR [rax],eax
   14000c7b6:	add    BYTE PTR [rax],al
   14000c7b8:	add    BYTE PTR [rbx+0x0],dl
   14000c7bb:	add    BYTE PTR [rdx],al
   14000c7bd:	add    BYTE PTR [rax],al
   14000c7bf:	add    BYTE PTR [rcx],ah
   14000c7c1:	push   rbx
   14000c7c2:	add    BYTE PTR [rax],al
   14000c7c4:	add    DWORD PTR [rax],eax
   14000c7c6:	add    BYTE PTR [rax],al
   14000c7c8:	cmp    BYTE PTR [rbx+0x0],dl
   14000c7cb:	add    BYTE PTR [rax],al
   14000c7cd:	add    BYTE PTR [rax],al
   14000c7cf:	add    BYTE PTR [rdx+0x53],dh
   14000c7d2:	add    BYTE PTR [rax],al
   14000c7d4:	add    eax,DWORD PTR [rax]
   14000c7d6:	add    BYTE PTR [rax],al
   14000c7d8:	(bad)  
   14000c7d9:	push   rbx
   14000c7da:	add    BYTE PTR [rax],al
   14000c7dc:	add    al,0x0
   14000c7de:	add    BYTE PTR [rax],al
   14000c7e0:	sbb    dl,BYTE PTR [rax+rax*1+0x0]
   14000c7e4:	add    eax,0xa3000000
   14000c7e9:	push   rsp
   14000c7ea:	add    BYTE PTR [rax],al
   14000c7ec:	add    eax,DWORD PTR [rax]
   14000c7ee:	add    BYTE PTR [rax],al
   14000c7f0:	mov    dl,0x54
   14000c7f2:	add    BYTE PTR [rax],al
   14000c7f4:	add    BYTE PTR [rax],al
   14000c7f6:	add    BYTE PTR [rax],al
   14000c7f8:	int3   
   14000c7f9:	push   rsp
   14000c7fa:	add    BYTE PTR [rax],al
   14000c7fc:	add    eax,0xcc000000
   14000c801:	push   rbp
   14000c802:	add    BYTE PTR [rax],al
   14000c804:	(bad)  
   14000c805:	add    BYTE PTR [rax],al
   14000c807:	add    BYTE PTR [rsi+0x56],al
   14000c80a:	add    BYTE PTR [rax],al
   14000c80c:	(bad)  
   14000c80d:	add    BYTE PTR [rax],al
   14000c80f:	add    BYTE PTR [rbx+0x56],dh
   14000c812:	add    BYTE PTR [rax],al
   14000c814:	or     BYTE PTR [rax],al
   14000c816:	add    BYTE PTR [rax],al
   14000c818:	lahf   
   14000c819:	push   rsi
   14000c81a:	add    BYTE PTR [rax],al
   14000c81c:	(bad)  
   14000c81d:	add    BYTE PTR [rax],al
   14000c81f:	add    BYTE PTR [rax+0x6000056],bh
   14000c825:	add    BYTE PTR [rax],al
   14000c827:	add    ch,cl
   14000c829:	push   rsi
   14000c82a:	add    BYTE PTR [rax],al
   14000c82c:	add    eax,0xf3000000
   14000c831:	push   rsi
   14000c832:	add    BYTE PTR [rax],al
   14000c834:	add    al,0x0
   14000c836:	add    BYTE PTR [rax],al
   14000c838:	add    dl,BYTE PTR [rdi+0x0]
   14000c83b:	add    BYTE PTR [rbx],al
   14000c83d:	add    BYTE PTR [rax],al
   14000c83f:	add    BYTE PTR [rbx],dl
   14000c841:	push   rdi
   14000c842:	add    BYTE PTR [rax],al
   14000c844:	add    BYTE PTR [rax],al
   14000c846:	add    BYTE PTR [rax],al
   14000c848:	rex.RXB pop r8
   14000c84a:	add    BYTE PTR [rax],al
   14000c84c:	add    al,0x0
   14000c84e:	add    BYTE PTR [rax],al
   14000c850:	rex.WRB pop r8
   14000c852:	add    BYTE PTR [rax],al
   14000c854:	add    eax,0xe3000000
   14000c859:	pop    rax
   14000c85a:	add    BYTE PTR [rax],al
   14000c85c:	(bad)  
   14000c85d:	add    BYTE PTR [rax],al
   14000c85f:	add    al,al
   14000c861:	pop    rcx
   14000c862:	add    BYTE PTR [rax],al
   14000c864:	add    eax,0xd5000000
   14000c869:	pop    rcx
   14000c86a:	add    BYTE PTR [rax],al
   14000c86c:	add    al,0x0
   14000c86e:	add    BYTE PTR [rax],al
   14000c870:	js     0x14000c8cc
   14000c872:	add    BYTE PTR [rax],al
   14000c874:	add    BYTE PTR [rax],al
   14000c876:	add    BYTE PTR [rax],al
   14000c878:	sbb    DWORD PTR [rax],esp
   14000c87a:	or     al,BYTE PTR [rax]
   14000c87c:	and    BYTE PTR [rax+rdx*1+0x0],ah
   14000c880:	sbb    al,0x34
   14000c882:	(bad)  
   14000c883:	add    BYTE PTR [rax],dl
   14000c885:	jb     0x14000c893
   14000c887:	lock or ah,al
   14000c88a:	or     al,dl
   14000c88c:	(bad)  
   14000c88d:	rol    BYTE PTR [rax+rsi*2],0xd8
   14000c891:	test   DWORD PTR [rax],eax
   14000c893:	add    BYTE PTR [rax-0x53],bh
	...
   14000c89e:	add    BYTE PTR [rax],al
   14000c8a0:	add    DWORD PTR [rax],eax
   14000c8a2:	add    BYTE PTR [rax],al
   14000c8a4:	add    DWORD PTR [rax],eax
   14000c8a6:	add    BYTE PTR [rax],al
   14000c8a8:	lods   al,BYTE PTR ds:[rsi]
   14000c8a9:	enter  0x0,0x40
	...
   14000c8b5:	add    BYTE PTR [rax],al
   14000c8b7:	add    BYTE PTR [rax+0x4800008c],cl
   14000c8bd:	add    BYTE PTR [rax],al
   14000c8bf:	add    BYTE PTR [rsp+rbx*2+0x0],cl
   14000c8c3:	add    bh,bh
   14000c8c5:	(bad)  
   14000c8c6:	(bad)  
   14000c8c7:	jmp    FWORD PTR [rbp+0x5c]
   14000c8cd:	add    BYTE PTR [rax],al
   14000c8cf:	add    BYTE PTR [rbp-0xffffa4],bh
   14000c8d5:	(bad)  
   14000c8d6:	(bad)  
   14000c8d7:	dec    DWORD PTR [rax+0x8c]
   14000c8dd:	add    BYTE PTR [rax],al
   14000c8df:	add    BYTE PTR [rbp+0x100008c],dl
   14000c8e5:	add    BYTE PTR [rax],al
   14000c8e7:	add    BYTE PTR [rcx],bl
   14000c8e9:	or     al,BYTE PTR [rdx]
   14000c8eb:	add    BYTE PTR [rdx],cl
   14000c8ed:	push   rdx
   14000c8ee:	(bad)  
   14000c8ef:	push   rax
   14000c8f0:	fadd   DWORD PTR [rbp-0x52880000]
   14000c8f6:	add    BYTE PTR [rax],al
   14000c8f8:	sbb    DWORD PTR [rdi],edx
   14000c8fa:	add    DWORD PTR [rax],eax
   14000c8fc:	(bad)  
   14000c8fd:	(bad)  
   14000c8fe:	add    BYTE PTR [rax],al
   14000c900:	fadd   DWORD PTR [rbp-0x52b00000]
	...
   14000c90e:	add    BYTE PTR [rax],al
   14000c910:	add    DWORD PTR [rax],eax
   14000c912:	add    BYTE PTR [rax],al
   14000c914:	add    DWORD PTR [rax],eax
   14000c916:	add    BYTE PTR [rax],al
   14000c918:	sbb    al,0xc9
   14000c91a:	add    BYTE PTR [rax],al
   14000c91c:	add    BYTE PTR [rax],al
	...
   14000c927:	add    BYTE PTR [rsi+0x4800008c],ch
   14000c92d:	add    BYTE PTR [rax],al
   14000c92f:	add    BYTE PTR [rbx*2-0x10000],dh
   14000c936:	(bad)  
   14000c937:	call   QWORD PTR [rax+0x5d]
   14000c93a:	add    BYTE PTR [rax],al
   14000c93c:	add    BYTE PTR [rax],al
   14000c93e:	add    BYTE PTR [rax],al
   14000c940:	xchg   esp,eax
   14000c941:	pop    rbp
   14000c942:	add    BYTE PTR [rax],al
   14000c944:	(bad)  
   14000c945:	(bad)  
   14000c946:	(bad)  
   14000c947:	jmp    FWORD PTR [rsi+0x8c]
   14000c94d:	add    BYTE PTR [rax],al
   14000c94f:	add    BYTE PTR [rbp+0x100008c],bh
   14000c955:	add    BYTE PTR [rax],al
   14000c957:	add    BYTE PTR [rcx],bl
   14000c959:	or     al,0x4
   14000c95b:	add    BYTE PTR [rdx+rsi*1],cl
   14000c95e:	or     BYTE PTR [rax+0x7],dh
   14000c961:	push   rax
   14000c962:	(bad)  
   14000c963:	xor    al,bl
   14000c965:	test   DWORD PTR [rax],eax
   14000c967:	add    BYTE PTR [rax-0x53],dl
   14000c96a:	add    BYTE PTR [rax],al
   14000c96c:	add    DWORD PTR [rax+rcx*1],edx
   14000c96f:	add    BYTE PTR [rsp+riz*2],dl
   14000c972:	(bad)  
   14000c973:	add    BYTE PTR [rsp+rdx*2],dl
   14000c976:	or     eax,0xc341400
   14000c97b:	add    BYTE PTR [rdx+rdx*4],dl
   14000c97e:	adc    BYTE PTR [rax+0x19],dh
   14000c981:	(bad)  
   14000c982:	or     DWORD PTR [rax],eax
   14000c984:	(bad)  
   14000c985:	je     0x14000c9de
   14000c987:	add    BYTE PTR [rsi],bl
   14000c989:	fs push rsi
   14000c98b:	add    BYTE PTR [rsi],bl
   14000c98d:	xor    al,0x55
   14000c98f:	add    BYTE PTR [rsi],bl
   14000c991:	add    DWORD PTR [rdx+0x0],edx
   14000c994:	adc    BYTE PTR [rax+0x0],dl
   14000c997:	add    ah,ah
   14000c999:	test   DWORD PTR [rax],eax
   14000c99b:	add    BYTE PTR [rax+0x19000002],al
   14000c9a1:	sub    al,0x8
   14000c9a3:	add    BYTE PTR [rip+0x11001934],bl        # 0x15100e2dd
   14000c9a9:	repnz or dh,al
   14000c9ac:	or     al,ah
   14000c9ae:	(bad)  
   14000c9af:	jo     0x14000c9b6
   14000c9b1:	(bad)  
   14000c9b2:	add    al,0x50
   14000c9b4:	je     0x14000c93c
   14000c9b6:	add    BYTE PTR [rax],al
   14000c9b8:	loopne 0x14000c968
   14000c9ba:	add    BYTE PTR [rax],al
   14000c9bc:	jp     0x14000c9be
   14000c9be:	add    BYTE PTR [rax],al
   14000c9c0:	(bad)  
   14000c9c1:	(bad)  
   14000c9c2:	(bad)  
   14000c9c3:	push   rsi
   14000c9c5:	mov    WORD PTR [rax],es
   14000c9c7:	add    BYTE PTR [rax],al
   14000c9c9:	add    BYTE PTR [rax],al
   14000c9cb:	add    BYTE PTR [rdx],al
   14000c9cd:	lea    eax,[rax]
   14000c9cf:	add    BYTE PTR [rcx],al
   14000c9d1:	add    BYTE PTR [rax],al
   14000c9d3:	add    BYTE PTR [rsi],cl
   14000c9d5:	lea    eax,[rax]
   14000c9d7:	add    BYTE PTR [rdx],al
   14000c9d9:	add    BYTE PTR [rax],al
   14000c9db:	add    BYTE PTR [rsi],bl
   14000c9dd:	lea    eax,[rax]
   14000c9df:	add    BYTE PTR [rbx],al
   14000c9e1:	add    BYTE PTR [rax],al
   14000c9e3:	add    BYTE PTR [rsi],ch
   14000c9e5:	lea    eax,[rax]
   14000c9e7:	add    BYTE PTR [rax+rax*1],al
   14000c9ea:	add    BYTE PTR [rax],al
   14000c9ec:	lea    eax,ds:[rax]
   14000c9ef:	add    BYTE PTR [rip+0x4e000000],al        # 0x18e00c9f5
   14000c9f5:	lea    eax,[rax]
   14000c9f7:	add    BYTE PTR [rsi],al
   14000c9f9:	add    BYTE PTR [rax],al
   14000c9fb:	add    BYTE PTR [rcx-0x73],ah
   14000c9fe:	add    BYTE PTR [rax],al
   14000ca00:	(bad)  
   14000ca01:	add    BYTE PTR [rax],al
   14000ca03:	add    BYTE PTR [rbp+rcx*4+0x0],dh
   14000ca07:	add    BYTE PTR [rax],cl
   14000ca09:	add    BYTE PTR [rax],al
   14000ca0b:	add    BYTE PTR [rdi-0x27ffff73],al
   14000ca11:	(bad)  
   14000ca12:	add    BYTE PTR [rax],al
   14000ca14:	(bad)  
   14000ca15:	(bad)  
   14000ca16:	(bad)  
   14000ca17:	call   FWORD PTR [rcx]
   14000ca19:	(bad)  
   14000ca1a:	add    BYTE PTR [rax],al
   14000ca1c:	add    DWORD PTR [rax],eax
   14000ca1e:	add    BYTE PTR [rax],al
   14000ca20:	(bad)  
   14000ca21:	(bad)  
   14000ca22:	add    BYTE PTR [rax],al
   14000ca24:	add    al,BYTE PTR [rax]
   14000ca26:	add    BYTE PTR [rax],al
   14000ca28:	rex.XB (bad) 
   14000ca2a:	add    BYTE PTR [rax],al
   14000ca2c:	add    eax,DWORD PTR [rax]
   14000ca2e:	add    BYTE PTR [rax],al
   14000ca30:	rex.WRXB (bad) 
   14000ca32:	add    BYTE PTR [rax],al
   14000ca34:	add    al,0x0
   14000ca36:	add    BYTE PTR [rax],al
   14000ca38:	pop    rsi
   14000ca39:	(bad)  
   14000ca3a:	add    BYTE PTR [rax],al
   14000ca3c:	add    eax,0x83000000
   14000ca41:	(bad)  
   14000ca42:	add    BYTE PTR [rax],al
   14000ca44:	(bad)  
   14000ca45:	add    BYTE PTR [rax],al
   14000ca47:	add    BYTE PTR [rcx+riz*2+0x70000],ah
   14000ca4e:	add    BYTE PTR [rax],al
   14000ca50:	mov    edx,0x8000061
   14000ca55:	add    BYTE PTR [rax],al
   14000ca57:	add    cl,al
   14000ca59:	(bad)  
   14000ca5a:	add    BYTE PTR [rax],al
   14000ca5c:	or     DWORD PTR [rax],eax
   14000ca5e:	add    BYTE PTR [rax],al
   14000ca60:	adc    DWORD PTR [rdx+0x0],esp
   14000ca63:	add    BYTE PTR [rax],al
   14000ca65:	add    BYTE PTR [rax],al
   14000ca67:	add    BYTE PTR [rdx+riz*2],ch
   14000ca6a:	add    BYTE PTR [rax],al
   14000ca6c:	(bad)  
   14000ca6d:	(bad)  
   14000ca6e:	(bad)  
   14000ca6f:	call   FWORD PTR [rcx]
   14000ca71:	xor    cl,BYTE PTR [rbx]
   14000ca73:	add    BYTE PTR [rcx],ah
   14000ca75:	fs pop rsp
   14000ca77:	add    BYTE PTR [rcx],ah
   14000ca79:	xor    al,0x5b
   14000ca7b:	add    BYTE PTR [rcx],ah
   14000ca7d:	add    DWORD PTR [rax+rax*1+0x12],edx
   14000ca81:	lock adc al,ah
   14000ca84:	(bad)  
   14000ca85:	ror    BYTE PTR [rax+rsi*2],1
   14000ca88:	or     edx,DWORD PTR [rax+0x0]
   14000ca8b:	add    ah,ah
   14000ca8d:	test   DWORD PTR [rax],eax
   14000ca8f:	add    BYTE PTR [rax+0x19000002],dl
   14000ca95:	xor    ecx,DWORD PTR [rbx]
   14000ca97:	add    BYTE PTR [rip+0x19002634],ah        # 0x15900f0d1
   14000ca9d:	add    DWORD PTR [rax+rax*1],ebx
   14000caa0:	(bad)  
   14000caa1:	lock or al,0xe0
   14000caa4:	or     dl,al
   14000caa6:	or     al,al
   14000caa8:	(bad)  
   14000caa9:	jo     0x14000cab0
   14000caab:	(bad)  
   14000caac:	add    al,0x50
   14000caae:	add    BYTE PTR [rax],al
   14000cab0:	je     0x14000ca38
   14000cab2:	add    BYTE PTR [rax],al
   14000cab4:	mov    eax,0xd20000ae
   14000cab9:	add    BYTE PTR [rax],al
   14000cabb:	add    bh,bh
   14000cabd:	(bad)  
   14000cabe:	(bad)  
   14000cabf:	jmp    QWORD PTR [rax+0x8d]
   14000cac5:	add    BYTE PTR [rax],al
   14000cac7:	add    BYTE PTR [rbp+rcx*4+0x10000],ch
   14000cace:	add    BYTE PTR [rax],al
   14000cad0:	mov    eax,0x200008d
   14000cad5:	add    BYTE PTR [rax],al
   14000cad7:	add    ah,al
   14000cad9:	lea    eax,[rax]
   14000cadb:	add    BYTE PTR [rax],al
   14000cadd:	add    BYTE PTR [rax],al
   14000cadf:	add    al,dl
   14000cae1:	add    BYTE PTR [eax],al
   14000cae4:	(bad)  
   14000cae5:	(bad)  
   14000cae6:	(bad)  
   14000cae7:	dec    DWORD PTR [rip+0x68]        # 0x14000cb55
   14000caed:	add    BYTE PTR [rax],al
   14000caef:	add    BYTE PTR [rsi+0x1000068],ah
   14000caf5:	add    BYTE PTR [rax],al
   14000caf7:	add    BYTE PTR [rcx+0x6a],ah
   14000cafd:	add    BYTE PTR [rax],al
   14000caff:	add    BYTE PTR [rax-0xffff96],dh
   14000cb05:	(bad)  
   14000cb06:	(bad)  
   14000cb07:	inc    edi
   14000cb09:	push   0x0
   14000cb0b:	add    BYTE PTR [rcx],al
   14000cb0d:	add    BYTE PTR [rax],al
   14000cb0f:	add    BYTE PTR [rsi+0x6b],ch
   14000cb12:	add    BYTE PTR [rax],al
   14000cb14:	add    al,BYTE PTR [rax]
   14000cb16:	add    BYTE PTR [rax],al
   14000cb18:	and    BYTE PTR [rax+rax*1+0x0],ch
   14000cb1c:	add    eax,DWORD PTR [rax]
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	pop    rcx
   14000cb21:	ins    DWORD PTR es:[rdi],dx
   14000cb22:	add    BYTE PTR [rax],al
   14000cb24:	add    al,BYTE PTR [rax]
   14000cb26:	add    BYTE PTR [rax],al
   14000cb28:	jo     0x14000cb97
   14000cb2a:	add    BYTE PTR [rax],al
   14000cb2c:	add    DWORD PTR [rax],eax
   14000cb2e:	add    BYTE PTR [rax],al
   14000cb30:	mov    ch,BYTE PTR [rbp+0x0]
   14000cb33:	add    BYTE PTR [rax],al
   14000cb35:	add    BYTE PTR [rax],al
   14000cb37:	add    ch,bh
   14000cb39:	ins    DWORD PTR es:[rdi],dx
   14000cb3a:	add    BYTE PTR [rax],al
   14000cb3c:	(bad)  
   14000cb3d:	(bad)  
   14000cb3e:	(bad)  
   14000cb3f:	call   FWORD PTR [rcx]
   14000cb41:	xor    DWORD PTR [rcx],ecx
   14000cb43:	add    BYTE PTR [rdi],bl
   14000cb45:	xor    al,0x1c
   14000cb47:	add    BYTE PTR [rdx],dl
   14000cb49:	add    DWORD PTR [rax+rax*1],edx
   14000cb4c:	or     esi,eax
   14000cb4e:	or     eax,esp
   14000cb50:	(bad)  
   14000cb51:	rol    BYTE PTR [rip+0x600470],0x0        # 0x14060cfc8
   14000cb58:	je     0x14000cae0
   14000cb5a:	add    BYTE PTR [rax],al
   14000cb5c:	nop
   14000cb5d:	scas   al,BYTE PTR es:[rdi]
   14000cb5e:	add    BYTE PTR [rax],al
   14000cb60:	xchg   ebx,eax
   14000cb61:	add    BYTE PTR [rax],al
   14000cb63:	add    bh,bh
   14000cb65:	(bad)  
   14000cb66:	(bad)  
   14000cb67:	call   rsi
   14000cb69:	lea    eax,[rax]
	...
   14000cb7b:	add    BYTE PTR [rcx],al
   14000cb7d:	add    BYTE PTR [rax],al
   14000cb7f:	add    BYTE PTR [rcx],al
   14000cb81:	add    BYTE PTR [rax],al
   14000cb83:	add    BYTE PTR [rdx],al
   14000cb85:	add    BYTE PTR [rax],al
   14000cb87:	add    BYTE PTR [rcx],al
   14000cb89:	add    BYTE PTR [rax],al
   14000cb8b:	add    BYTE PTR [rax+0x400000cb],dl
	...
   14000cb99:	add    BYTE PTR [rax],al
   14000cb9b:	add    dl,ah
   14000cb9d:	lea    eax,[rax]
   14000cb9f:	add    BYTE PTR [rax+0x0],cl
	...
   14000cbae:	add    BYTE PTR [rax],al
   14000cbb0:	push   rax
   14000cbb1:	outs   dx,BYTE PTR ds:[rsi]
   14000cbb2:	add    BYTE PTR [rax],al
   14000cbb4:	(bad)  
   14000cbb5:	(bad)  
   14000cbb6:	(bad)  
   14000cbb7:	call   QWORD PTR [rax+0x6e]
   14000cbbd:	add    BYTE PTR [rax],al
   14000cbbf:	add    BYTE PTR [rax+0x100006f],dh
   14000cbc5:	add    BYTE PTR [rax],al
   14000cbc7:	add    ah,ah
   14000cbc9:	outs   dx,DWORD PTR ds:[rsi]
   14000cbca:	add    BYTE PTR [rax],al
   14000cbcc:	add    BYTE PTR [rax],al
   14000cbce:	add    BYTE PTR [rax],al
   14000cbd0:	sbb    al,0x71
   14000cbd2:	add    BYTE PTR [rax],al
   14000cbd4:	(bad)  
   14000cbd5:	(bad)  
   14000cbd6:	(bad)  
   14000cbd7:	jmp    rdx
   14000cbd9:	lea    eax,[rax]
   14000cbdb:	add    BYTE PTR [rax],al
   14000cbdd:	add    BYTE PTR [rax],al
   14000cbdf:	add    bh,ch
   14000cbe1:	lea    eax,[rax]
   14000cbe3:	add    BYTE PTR [rdx],al
   14000cbe5:	add    BYTE PTR [rax],al
   14000cbe7:	add    BYTE PTR [rsi+0x8e],cl
   14000cbed:	add    BYTE PTR [rax],al
   14000cbef:	add    BYTE PTR [rcx],bl
   14000cbf1:	or     al,BYTE PTR [rdx]
   14000cbf3:	add    BYTE PTR [rdx],cl
   14000cbf5:	push   rdx
   14000cbf6:	(bad)  
   14000cbf7:	push   rax
   14000cbf8:	fadd   DWORD PTR [rbp-0x51700000]
   14000cbfe:	add    BYTE PTR [rax],al
   14000cc00:	sbb    DWORD PTR [rcx],esi
   14000cc02:	or     DWORD PTR [rax],eax
   14000cc04:	(bad)  
   14000cc05:	sbb    DWORD PTR fs:[rax],eax
   14000cc08:	sbb    edx,DWORD PTR [rax+rbx*1+0x0]
   14000cc0c:	(bad)  
   14000cc0d:	xor    al,0x17
   14000cc0f:	add    BYTE PTR [rbx],cl
   14000cc11:	add    DWORD PTR [rax+rax*1],edx
   14000cc14:	add    al,0x70
   14000cc16:	add    BYTE PTR [rax],al
   14000cc18:	je     0x14000cba0
   14000cc1a:	add    BYTE PTR [rax],al
   14000cc1c:	push   0xffffffff920000ae
   14000cc21:	add    BYTE PTR [rax],al
   14000cc23:	add    bh,bh
   14000cc25:	(bad)  
   14000cc26:	(bad)  
   14000cc27:	jmp    QWORD PTR [rdx+0x8e]
   14000cc2d:	add    BYTE PTR [rax],al
   14000cc2f:	add    BYTE PTR [rax+0x71],dh
   14000cc32:	add    BYTE PTR [rax],al
   14000cc34:	(bad)  
   14000cc35:	(bad)  
   14000cc36:	(bad)  
   14000cc37:	(bad)  
   14000cc38:	mov    ebx,0x71
   14000cc3d:	add    BYTE PTR [rax],al
   14000cc3f:	add    BYTE PTR [rcx+0x72],dh
   14000cc42:	add    BYTE PTR [rax],al
   14000cc44:	(bad)  
   14000cc45:	(bad)  
   14000cc46:	(bad)  
   14000cc47:	call   FWORD PTR [rcx]
   14000cc49:	and    DWORD PTR [rdi],eax
   14000cc4b:	add    BYTE PTR [rdi],cl
   14000cc4d:	xor    al,0x50
   14000cc4f:	add    BYTE PTR [rdi],cl
   14000cc51:	add    DWORD PTR [rdx+0x0],ecx
   14000cc54:	or     BYTE PTR [rax+0x7],dh
   14000cc57:	(bad)  
   14000cc58:	(bad)  
   14000cc59:	push   rax
   14000cc5a:	add    BYTE PTR [rax],al
   14000cc5c:	in     al,0x85
   14000cc5e:	add    BYTE PTR [rax],al
   14000cc60:	add    al,BYTE PTR [rax]
   14000cc63:	add    BYTE PTR [rcx],al
   14000cc65:	or     al,BYTE PTR [rax+rax*1]
   14000cc68:	or     dh,BYTE PTR [rdi+rax*1]
   14000cc6b:	add    BYTE PTR [rdx],cl
   14000cc6d:	xor    al,BYTE PTR [rsi]
   14000cc6f:	jo     0x14000cc8a
   14000cc71:	xor    ecx,DWORD PTR [rbx]
   14000cc73:	add    BYTE PTR [rip+0x19002734],ah        # 0x15900f3ad
   14000cc79:	add    DWORD PTR [rax+rax*1],ebx
   14000cc7c:	(bad)  
   14000cc7d:	lock or al,0xe0
   14000cc80:	or     dl,al
   14000cc82:	or     al,al
   14000cc84:	(bad)  
   14000cc85:	jo     0x14000cc8c
   14000cc87:	(bad)  
   14000cc88:	add    al,0x50
   14000cc8a:	add    BYTE PTR [rax],al
   14000cc8c:	je     0x14000cc14
   14000cc8e:	add    BYTE PTR [rax],al
   14000cc90:	scas   al,BYTE PTR es:[rdi]
   14000cc92:	add    BYTE PTR [rax],al
   14000cc94:	rol    BYTE PTR [rax],cl
   14000cc96:	add    BYTE PTR [rax],al
   14000cc98:	(bad)  
   14000cc99:	(bad)  
   14000cc9a:	(bad)  
   14000cc9b:	push   QWORD PTR [rsi+rcx*4+0x0]
   14000cca2:	add    BYTE PTR [rax],al
   14000cca4:	ror    BYTE PTR [rsi+0x75800000],0x0
   14000ccab:	add    bh,bh
   14000ccad:	(bad)  
   14000ccae:	(bad)  
   14000ccaf:	call   rsp
   14000ccb1:	jne    0x14000ccb3
   14000ccb3:	add    BYTE PTR [rax],al
   14000ccb5:	add    BYTE PTR [rax],al
   14000ccb7:	add    BYTE PTR [rsi],dh
   14000ccb9:	jbe    0x14000ccbb
   14000ccbb:	add    BYTE PTR [rcx],al
   14000ccbd:	add    BYTE PTR [rax],al
   14000ccbf:	add    BYTE PTR [rax+0x77],bh
   14000ccc2:	add    BYTE PTR [rax],al
   14000ccc4:	add    BYTE PTR [rax],al
   14000ccc6:	add    BYTE PTR [rax],al
   14000ccc8:	xchg   esi,eax
   14000ccc9:	ja     0x14000cccb
   14000cccb:	add    bh,bh
   14000cccd:	(bad)  
   14000ccce:	(bad)  
   14000cccf:	call   FWORD PTR [rcx]
   14000ccd1:	adc    al,BYTE PTR [rcx]
   14000ccd3:	add    BYTE PTR [rcx],cl
   14000ccd5:	(bad)  
   14000ccd6:	add    BYTE PTR [rax],al
   14000ccd8:	fadd   DWORD PTR [rbp-0x51e80000]
	...
   14000cce6:	add    BYTE PTR [rax],al
   14000cce8:	add    DWORD PTR [rax],eax
   14000ccea:	add    BYTE PTR [rax],al
   14000ccec:	add    DWORD PTR [rax],eax
   14000ccee:	add    BYTE PTR [rax],al
   14000ccf0:	hlt    
   14000ccf1:	int3   
   14000ccf2:	add    BYTE PTR [rax],al
   14000ccf4:	add    BYTE PTR [rax],al
	...
   14000ccff:	add    dl,dl
   14000cd01:	mov    es,WORD PTR [rax]
   14000cd03:	add    BYTE PTR [rax],bh
   14000cd05:	add    BYTE PTR [rax],al
   14000cd07:	add    al,dh
   14000cd09:	jns    0x14000cd0b
   14000cd0b:	add    bh,bh
   14000cd0d:	(bad)  
   14000cd0e:	(bad)  
   14000cd0f:	call   FWORD PTR [rip+0x7a]        # 0x14000cd8f
   14000cd15:	add    BYTE PTR [rax],al
   14000cd17:	add    BYTE PTR [rax],bh
   14000cd19:	jp     0x14000cd1b
   14000cd1b:	add    bh,bh
   14000cd1d:	(bad)  
   14000cd1e:	(bad)  
   14000cd1f:	call   rdx
   14000cd21:	mov    es,WORD PTR [rax]
   14000cd23:	add    BYTE PTR [rax],al
   14000cd25:	add    BYTE PTR [rax],al
   14000cd27:	add    bh,bl
   14000cd29:	mov    es,WORD PTR [rax]
   14000cd2b:	add    BYTE PTR [rcx],al
   14000cd2d:	add    BYTE PTR [rax],al
   14000cd2f:	add    BYTE PTR [rcx],bl
   14000cd31:	or     al,BYTE PTR [rdx]
   14000cd33:	add    BYTE PTR [rdx],cl
   14000cd35:	xor    al,BYTE PTR [rsi]
   14000cd37:	push   rax
   14000cd38:	fadd   DWORD PTR [rbp-0x51e80000]
   14000cd3e:	add    BYTE PTR [rax],al
   14000cd40:	add    DWORD PTR [rcx+rax*1],eax
   14000cd43:	add    BYTE PTR [rdx+riz*2],al
   14000cd46:	add    BYTE PTR [rax],al
   14000cd48:	or     DWORD PTR [rbx+rcx*1],ebx
   14000cd4b:	add    BYTE PTR [rsp+rsi*2],bl
   14000cd4e:	sbb    al,0x0
   14000cd50:	sbb    al,0x64
   14000cd52:	sbb    eax,DWORD PTR [rax]
   14000cd54:	sbb    al,0x34
   14000cd56:	sbb    al,BYTE PTR [rax]
   14000cd58:	sbb    al,0x1
   14000cd5a:	(bad)  
   14000cd5b:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e0e151
   14000cd61:	rol    BYTE PTR [rax],0x0
   14000cd64:	(bad)  
   14000cd65:	test   BYTE PTR [rax],al
   14000cd67:	add    BYTE PTR [rcx],al
   14000cd69:	add    BYTE PTR [rax],al
   14000cd6b:	add    BYTE PTR [rax],dh
   14000cd6d:	jl     0x14000cd6f
   14000cd6f:	add    BYTE PTR [rsi],ah
   14000cd71:	jle    0x14000cd73
   14000cd73:	add    al,bh
   14000cd75:	mov    es,WORD PTR [rax]
   14000cd77:	add    BYTE PTR [rsi],ah
   14000cd79:	jle    0x14000cd7b
   14000cd7b:	add    BYTE PTR [rax],al
   14000cd7d:	add    BYTE PTR [rax],al
   14000cd7f:	add    BYTE PTR [rcx],al
   14000cd81:	add    BYTE PTR [rax],al
   14000cd83:	add    BYTE PTR [rcx],dl
   14000cd85:	or     al,BYTE PTR [rax+rax*1]
   14000cd88:	or     dh,BYTE PTR [rsi+rax*1]
   14000cd8b:	add    BYTE PTR [rdx],cl
   14000cd8d:	xor    al,BYTE PTR [rsi]
   14000cd8f:	jo     0x14000cd67
   14000cd91:	test   BYTE PTR [rax],al
   14000cd93:	add    BYTE PTR [rcx],al
   14000cd95:	add    BYTE PTR [rax],al
   14000cd97:	add    BYTE PTR [rcx],ah
   14000cd99:	jg     0x14000cd9b
   14000cd9b:	add    BYTE PTR [rsi+0x7f],ah
   14000cd9e:	add    BYTE PTR [rax],al
   14000cda0:	sbb    al,0x8f
   14000cda2:	add    BYTE PTR [rax],al
   14000cda4:	add    BYTE PTR [rax],al
   14000cda6:	add    BYTE PTR [rax],al
   14000cda8:	add    DWORD PTR [rdx+rax*1],ecx
   14000cdab:	add    BYTE PTR [rcx+rax*1],cl
   14000cdae:	adc    DWORD PTR [rax],eax
   14000cdb0:	or     DWORD PTR [rcx+rax*1],eax
   14000cdb3:	add    BYTE PTR [rdx+riz*1],al
   14000cdb6:	add    BYTE PTR [rax],al
   14000cdb8:	(bad)  
   14000cdb9:	test   BYTE PTR [rax],al
   14000cdbb:	add    BYTE PTR [rcx],al
   14000cdbd:	add    BYTE PTR [rax],al
   14000cdbf:	add    BYTE PTR [rdx+rax*4+0x0],bl
   14000cdc3:	add    BYTE PTR [rdx+0x1000082],dl
   14000cdc9:	add    BYTE PTR [rax],al
   14000cdcb:	add    BYTE PTR [rdx+0x9000082],dl
   14000cdd1:	or     al,BYTE PTR [rax+rax*1]
   14000cdd4:	or     dh,BYTE PTR [rsi+rax*1]
   14000cdd7:	add    BYTE PTR [rdx],cl
   14000cdd9:	xor    al,BYTE PTR [rsi]
   14000cddb:	jo     0x14000cdb3
   14000cddd:	test   BYTE PTR [rax],al
   14000cddf:	add    BYTE PTR [rcx],al
   14000cde1:	add    BYTE PTR [rax],al
   14000cde3:	add    BYTE PTR [rbp-0x7d],bl
   14000cde6:	add    BYTE PTR [rax],al
   14000cde8:	nop
   14000cde9:	add    DWORD PTR [rax],0x0
   14000cdec:	rex pop QWORD PTR [rax]
   14000cdef:	add    BYTE PTR [rax+0x1000083],dl
   14000cdf5:	or     eax,0x340d0004
   14000cdfa:	or     DWORD PTR [rax],eax
   14000cdfc:	or     eax,0x1500632
   14000ce01:	add    BYTE PTR [rax],al
   14000ce03:	add    BYTE PTR [rcx],al
   14000ce05:	sbb    BYTE PTR [rcx],al
   14000ce07:	add    BYTE PTR [rax],bl
   14000ce09:	ret    0x0
   14000ce0c:	add    BYTE PTR [rax],al
   14000ce0e:	add    BYTE PTR [rax],al
   14000ce10:	add    DWORD PTR [rcx+rax*1],eax
   14000ce13:	add    BYTE PTR [rdx+rdx*1],al
   14000ce16:	add    BYTE PTR [rax],al
   14000ce18:	add    DWORD PTR [rax],eax
   14000ce1a:	add    BYTE PTR [rax],al
   14000ce1c:	sub    dh,cl
	...
   14000ce2a:	add    BYTE PTR [rax],al
   14000ce2c:	nop
   14000ce2d:	loopne 0x14000ce2f
   14000ce2f:	add    BYTE PTR [rax],al
   14000ce31:	add    BYTE PTR [rax],al
   14000ce33:	add    bh,bh
   14000ce35:	(bad)  
   14000ce36:	(bad)  
   14000ce37:	inc    DWORD PTR [rax]
   14000ce39:	add    BYTE PTR [rax],al
   14000ce3b:	add    BYTE PTR [rax+0x78000000],ah
   14000ce41:	and    eax,DWORD PTR [rax]
	...
   14000ce53:	add    BYTE PTR [rbx+riz*1],ch
   14000ce56:	add    BYTE PTR [rax],al
   14000ce58:	add    BYTE PTR [rax],al
   14000ce5a:	add    BYTE PTR [rax],al
   14000ce5c:	sbb    dh,cl
	...
   14000ce6e:	add    BYTE PTR [rax],al
   14000ce70:	add    DWORD PTR [rax],eax
   14000ce72:	add    BYTE PTR [rax],al
   14000ce74:	loopne 0x14000ce1a
   14000ce76:	add    BYTE PTR [rax],al
   14000ce78:	movabs al,ds:0xb0000100000000e6
   14000ce81:	(bad)  
   14000ce82:	add    BYTE PTR [rax],al
   14000ce84:	call   0x14000cf57
	...
   14000cead:	add    BYTE PTR [rax],al
   14000ceaf:	add    al,al
   14000ceb1:	(bad)  
	...
   14000cec2:	rex.WRXB jo 0x14000cf2a
   14000cec5:	outs   dx,BYTE PTR ds:[rsi]
   14000cec6:	push   rax
   14000cec7:	jb     0x14000cf38
   14000cec9:	jbe    0x14000cf34
   14000cecb:	jae    0x14000cf36
   14000cecd:	outs   dx,DWORD PTR ds:[rsi]
   14000cece:	outs   dx,BYTE PTR ds:[rsi]
   14000cecf:	imul   ebp,DWORD PTR [rsi+0x67],0x6b636150
   14000ced6:	(bad)  
   14000ced7:	rex.RX outs dx,DWORD PTR gs:[esi]
   14000cedb:	jb     0x14000cf2f
   14000cedd:	gs (bad) 
   14000cedf:	add    BYTE PTR fs:[rax],al
	...
   14000cef6:	add    BYTE PTR [rax],al
   14000cef8:	loopne 0x14000cecc
	...
   14000cf02:	add    BYTE PTR [rax],al
   14000cf04:	cld    
   14000cf05:	(bad)  
   14000cf06:	add    BYTE PTR [rax],al
   14000cf08:	xor    BYTE PTR [rdx-0x2ce80000],ah
	...
   14000cf16:	add    BYTE PTR [rax],al
   14000cf18:	cmp    dl,dh
   14000cf1a:	add    BYTE PTR [rax],al
   14000cf1c:	push   0xffffffffb00000a2
   14000cf21:	rol    BYTE PTR [rax],1
	...
   14000cf2b:	add    dh,dh
   14000cf2d:	fadd   DWORD PTR [rax]
   14000cf2f:	add    BYTE PTR [rax],al
   14000cf31:	movabs al,ds:0xd2980000
   14000cf3a:	add    BYTE PTR [rax],al
   14000cf3c:	add    BYTE PTR [rax],al
   14000cf3e:	add    BYTE PTR [rax],al
   14000cf40:	(bad)  
   14000cf41:	fld    DWORD PTR [rax]
   14000cf43:	add    al,ch
   14000cf45:	movabs eax,ds:0xd1680000
   14000cf4e:	add    BYTE PTR [rax],al
   14000cf50:	add    BYTE PTR [rax],al
   14000cf52:	add    BYTE PTR [rax],al
   14000cf54:	fld    DWORD PTR ds:[rax]
   14000cf57:	add    BYTE PTR [rax-0x2fffff60],bh
   14000cf5d:	rol    BYTE PTR [rax],1
	...
   14000cf67:	add    BYTE PTR [rax-0x27],ch
   14000cf6a:	add    BYTE PTR [rax],al
   14000cf6c:	and    BYTE PTR [rax-0x2e680000],ah
	...
   14000cf7a:	add    BYTE PTR [rax],al
   14000cf7c:	mov    bl,cl
   14000cf7e:	add    BYTE PTR [rax],al
   14000cf80:	call   0x12000d025
   14000cf85:	rol    DWORD PTR [rax],1
	...
   14000cf8f:	add    BYTE PTR [rdx+0x300000d9],dh
   14000cf95:	movabs eax,ds:0xd2700000
   14000cf9e:	add    BYTE PTR [rax],al
   14000cfa0:	add    BYTE PTR [rax],al
   14000cfa2:	add    BYTE PTR [rax],al
   14000cfa4:	(bad)  
   14000cfa6:	add    BYTE PTR [rax],al
   14000cfa8:	shl    BYTE PTR [rcx-0x2dc00000],0x0
	...
   14000cfb7:	add    dh,bh
   14000cfb9:	fld    DWORD PTR [rax]
   14000cfbb:	add    BYTE PTR [rax-0x7ffff5f],dl
   14000cfc1:	rol    BYTE PTR [rax],1
	...
   14000cfcb:	add    BYTE PTR [rdx+rbx*8],ah
   14000cfce:	add    BYTE PTR [rax],al
   14000cfd0:	rex.W movabs al,ds:0xd2100000
   14000cfda:	add    BYTE PTR [rax],al
   14000cfdc:	add    BYTE PTR [rax],al
   14000cfde:	add    BYTE PTR [rax],al
   14000cfe0:	rex.WRX fiadd DWORD PTR [rax]
   14000cfe3:	add    BYTE PTR [rax-0x5f],ah
   14000cfe6:	add    BYTE PTR [rax],al
   14000cfe8:	adc    dl,0x0
	...
   14000cff3:	add    BYTE PTR [rdx-0x26],dh
   14000cff6:	add    BYTE PTR [rax],al
   14000cff8:	shl    BYTE PTR [rcx-0x2d380000],1
	...
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	(bad)  
   14000d009:	fiadd  DWORD PTR [rax]
   14000d00b:	add    BYTE PTR [rax],bl
   14000d00d:	movabs ds:0xd1180000,al
   14000d016:	add    BYTE PTR [rax],al
   14000d018:	add    BYTE PTR [rax],al
   14000d01a:	add    BYTE PTR [rax],al
   14000d01c:	(bad)  
   14000d01d:	fadd   QWORD PTR [rax]
   14000d01f:	add    BYTE PTR [rax-0x60],ch
   14000d022:	add    BYTE PTR [rax],al
   14000d024:	test   al,0xd1
	...
   14000d02e:	add    BYTE PTR [rax],al
   14000d030:	fadd   QWORD PTR ss:[rax]
   14000d033:	add    al,bh
   14000d035:	movabs al,ds:0xd2200000
   14000d03e:	add    BYTE PTR [rax],al
   14000d040:	add    BYTE PTR [rax],al
   14000d042:	add    BYTE PTR [rax],al
   14000d044:	push   rsi
   14000d045:	fadd   QWORD PTR [rax]
   14000d047:	add    BYTE PTR [rax-0x5f],dh
   14000d04a:	add    BYTE PTR [rax],al
   14000d04c:	rcl    cl,1
	...
   14000d056:	add    BYTE PTR [rax],al
   14000d058:	jp     0x14000d036
   14000d05a:	add    BYTE PTR [rax],al
   14000d05c:	and    BYTE PTR [rcx-0x2ea80000],ah
	...
   14000d06a:	add    BYTE PTR [rax],al
   14000d06c:	test   al,0xdc
   14000d06e:	add    BYTE PTR [rax],al
   14000d070:	test   al,0xa0
   14000d072:	add    BYTE PTR [rax],al
   14000d074:	loopne 0x14000d046
	...
   14000d07e:	add    BYTE PTR [rax],al
   14000d080:	add    al,0xdd
   14000d082:	add    BYTE PTR [rax],al
   14000d084:	xor    BYTE PTR [rax-0x2da00000],ah
	...
   14000d092:	add    BYTE PTR [rax],al
   14000d094:	fld    QWORD PTR ds:[rax]
   14000d097:	add    BYTE PTR [rax+0xa1],dh
	...
   14000d0ad:	add    BYTE PTR [rax],al
   14000d0af:	add    BYTE PTR [rdi+rdx*8+0x0],ah
   14000d0b3:	add    BYTE PTR [rax],al
   14000d0b5:	add    BYTE PTR [rax],al
   14000d0b7:	add    BYTE PTR [rsi+rdx*8+0x0],bl
   14000d0be:	add    BYTE PTR [rax],al
   14000d0c0:	(bad)  
   14000d0c1:	(bad)  
	...
   14000d0ce:	add    BYTE PTR [rax],al
   14000d0d0:	add    bh,dl
	...
   14000d0de:	add    BYTE PTR [rax],al
   14000d0e0:	(bad)  
   14000d0e1:	fadd   QWORD PTR [rax]
   14000d0e3:	add    BYTE PTR [rax],al
   14000d0e5:	add    BYTE PTR [rax],al
   14000d0e7:	add    ah,ch
   14000d0e9:	fadd   QWORD PTR [rax]
	...
   14000d0f7:	add    BYTE PTR [rdx],bh
   14000d0f9:	fadd   DWORD PTR [rax]
   14000d0fb:	add    BYTE PTR [rax],al
   14000d0fd:	add    BYTE PTR [rax],al
   14000d0ff:	add    BYTE PTR [rsi-0x28],dl
   14000d102:	add    BYTE PTR [rax],al
   14000d104:	add    BYTE PTR [rax],al
   14000d106:	add    BYTE PTR [rax],al
   14000d108:	xor    bl,bl
	...
   14000d116:	add    BYTE PTR [rax],al
   14000d118:	outs   dx,BYTE PTR ds:[rsi]
   14000d119:	fild   DWORD PTR [rax]
   14000d11b:	add    BYTE PTR [rax],al
   14000d11d:	add    BYTE PTR [rax],al
   14000d11f:	add    dh,bl
   14000d121:	fiadd  DWORD PTR [rax]
   14000d123:	add    BYTE PTR [rax],al
   14000d125:	add    BYTE PTR [rax],al
   14000d127:	add    BYTE PTR [rdx-0x25],al
   14000d12a:	add    BYTE PTR [rax],al
   14000d12c:	add    BYTE PTR [rax],al
   14000d12e:	add    BYTE PTR [rax],al
   14000d130:	sbb    al,0xdb
   14000d132:	add    BYTE PTR [rax],al
   14000d134:	add    BYTE PTR [rax],al
   14000d136:	add    BYTE PTR [rax],al
   14000d138:	rcr    bl,0x0
   14000d13b:	add    BYTE PTR [rax],al
   14000d13d:	add    BYTE PTR [rax],al
   14000d13f:	add    al,ch
   14000d141:	fild   DWORD PTR [rax]
   14000d143:	add    BYTE PTR [rax],al
   14000d145:	add    BYTE PTR [rax],al
   14000d147:	add    ah,bh
   14000d149:	fild   DWORD PTR [rax]
	...
   14000d157:	add    BYTE PTR [rdx],cl
   14000d159:	fadd   QWORD PTR [rax]
	...
   14000d167:	add    BYTE PTR [rsi-0x29],cl
   14000d16a:	add    BYTE PTR [rax],al
   14000d16c:	add    BYTE PTR [rax],al
   14000d16e:	add    BYTE PTR [rax],al
   14000d170:	cmp    al,0xd7
   14000d172:	add    BYTE PTR [rax],al
   14000d174:	add    BYTE PTR [rax],al
   14000d176:	add    BYTE PTR [rax],al
   14000d178:	(bad)  
   14000d179:	xlat   BYTE PTR ds:[rbx]
   14000d17a:	add    BYTE PTR [rax],al
   14000d17c:	add    BYTE PTR [rax],al
   14000d17e:	add    BYTE PTR [rax],al
   14000d180:	fcom   st(6)
   14000d182:	add    BYTE PTR [rax],al
   14000d184:	add    BYTE PTR [rax],al
   14000d186:	add    BYTE PTR [rax],al
   14000d188:	(bad)  
   14000d189:	(bad)  
	...
   14000d196:	add    BYTE PTR [rax],al
   14000d198:	sub    dl,bh
	...
   14000d1a6:	add    BYTE PTR [rax],al
   14000d1a8:	add    al,0xdb
   14000d1aa:	add    BYTE PTR [rax],al
   14000d1ac:	add    BYTE PTR [rax],al
   14000d1ae:	add    BYTE PTR [rax],al
   14000d1b0:	jle    0x14000d18d
   14000d1b2:	add    BYTE PTR [rax],al
   14000d1b4:	add    BYTE PTR [rax],al
   14000d1b6:	add    BYTE PTR [rax],al
   14000d1b8:	lock fiadd DWORD PTR [rax]
   14000d1bb:	add    BYTE PTR [rax],al
   14000d1bd:	add    BYTE PTR [rax],al
   14000d1bf:	add    ah,dl
   14000d1c1:	fild   DWORD PTR [rax]
	...
   14000d1cf:	add    BYTE PTR [rbx+rbx*8+0x0],ah
	...
   14000d1de:	add    BYTE PTR [rax],al
   14000d1e0:	mov    dh,0xd8
   14000d1e2:	add    BYTE PTR [rax],al
   14000d1e4:	add    BYTE PTR [rax],al
   14000d1e6:	add    BYTE PTR [rax],al
   14000d1e8:	out    0xd7,al
   14000d1ea:	add    BYTE PTR [rax],al
   14000d1ec:	add    BYTE PTR [rax],al
   14000d1ee:	add    BYTE PTR [rax],al
   14000d1f0:	mov    al,bl
   14000d1f2:	add    BYTE PTR [rax],al
   14000d1f4:	add    BYTE PTR [rax],al
   14000d1f6:	add    BYTE PTR [rax],al
   14000d1f8:	je     0x14000d1d2
   14000d1fa:	add    BYTE PTR [rax],al
   14000d1fc:	add    BYTE PTR [rax],al
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	jbe    0x14000d1d9
	...
   14000d20e:	add    BYTE PTR [rax],al
   14000d210:	pushf  
   14000d211:	fadd   DWORD PTR [rax]
	...
   14000d21f:	add    BYTE PTR [rsi+0xdb],dl
   14000d225:	add    BYTE PTR [rax],al
   14000d227:	add    BYTE PTR [rsi-0x25],cl
   14000d22a:	add    BYTE PTR [rax],al
   14000d22c:	add    BYTE PTR [rax],al
   14000d22e:	add    BYTE PTR [rax],al
   14000d230:	pop    rsi
   14000d231:	fild   DWORD PTR [rax]
	...
   14000d23f:	add    BYTE PTR [rsi],ah
   14000d241:	fadd   DWORD PTR [rax]
   14000d243:	add    BYTE PTR [rax],al
   14000d245:	add    BYTE PTR [rax],al
   14000d247:	add    BYTE PTR [rax+rbx*8],cl
   14000d24a:	add    BYTE PTR [rax],al
   14000d24c:	add    BYTE PTR [rax],al
   14000d24e:	add    BYTE PTR [rax],al
   14000d250:	clc    
   14000d251:	xlat   BYTE PTR ds:[rbx]
	...
   14000d25e:	add    BYTE PTR [rax],al
   14000d260:	sub    bl,ch
	...
   14000d26e:	add    BYTE PTR [rax],al
   14000d270:	(bad)  
	...
   14000d27e:	add    BYTE PTR [rax],al
   14000d280:	out    0xd8,al
   14000d282:	add    BYTE PTR [rax],al
   14000d284:	add    BYTE PTR [rax],al
   14000d286:	add    BYTE PTR [rax],al
   14000d288:	int3   
   14000d289:	fadd   DWORD PTR [rax]
	...
   14000d297:	add    BYTE PTR [rdi+rdx*8+0x0],cl
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	mov    eax,0xd7
   14000d2a5:	add    BYTE PTR [rax],al
   14000d2a7:	add    dh,cl
   14000d2a9:	xlat   BYTE PTR ds:[rbx]
   14000d2aa:	add    BYTE PTR [rax],al
   14000d2ac:	add    BYTE PTR [rax],al
   14000d2ae:	add    BYTE PTR [rax],al
   14000d2b0:	mov    al,0xd6
   14000d2b2:	add    BYTE PTR [rax],al
   14000d2b4:	add    BYTE PTR [rax],al
   14000d2b6:	add    BYTE PTR [rax],al
   14000d2b8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d2b9:	xlat   BYTE PTR ds:[rbx]
	...
   14000d2c6:	add    BYTE PTR [rax],al
   14000d2c8:	xchg   esi,eax
   14000d2c9:	fiadd  DWORD PTR [rax]
   14000d2cb:	add    BYTE PTR [rax],al
   14000d2cd:	add    BYTE PTR [rax],al
   14000d2cf:	add    BYTE PTR [rax+0xda],dh
	...
   14000d2dd:	add    BYTE PTR [rax],al
   14000d2df:	add    BYTE PTR [rax],dh
   14000d2e1:	(bad)  
   14000d2e2:	add    BYTE PTR [rax],al
   14000d2e4:	add    BYTE PTR [rax],al
   14000d2e6:	add    BYTE PTR [rax],al
   14000d2e8:	(bad)  
   14000d2e9:	(bad)  
   14000d2ea:	add    BYTE PTR [rax],al
   14000d2ec:	add    BYTE PTR [rax],al
   14000d2ee:	add    BYTE PTR [rax],al
   14000d2f0:	lods   al,BYTE PTR ds:[rsi]
   14000d2f1:	(bad)  
   14000d2f2:	add    BYTE PTR [rax],al
   14000d2f4:	add    BYTE PTR [rax],al
   14000d2f6:	add    BYTE PTR [rax],al
   14000d2f8:	mov    dl,ah
   14000d2fa:	add    BYTE PTR [rax],al
   14000d2fc:	add    BYTE PTR [rax],al
   14000d2fe:	add    BYTE PTR [rax],al
   14000d300:	jo     0x14000d2d6
   14000d302:	add    BYTE PTR [rax],al
   14000d304:	add    BYTE PTR [rax],al
   14000d306:	add    BYTE PTR [rax],al
   14000d308:	push   rax
   14000d309:	(bad)  
	...
   14000d316:	add    BYTE PTR [rax],al
   14000d318:	test   dh,dl
   14000d31a:	add    BYTE PTR [rax],al
   14000d31c:	add    BYTE PTR [rax],al
   14000d31e:	add    BYTE PTR [rax],al
   14000d320:	jp     0x14000d2f8
   14000d322:	add    BYTE PTR [rax],al
   14000d324:	add    BYTE PTR [rax],al
   14000d326:	add    BYTE PTR [rax],al
   14000d328:	ins    BYTE PTR es:[rdi],dx
   14000d329:	(bad)  
   14000d32a:	add    BYTE PTR [rax],al
   14000d32c:	add    BYTE PTR [rax],al
   14000d32e:	add    BYTE PTR [rax],al
   14000d330:	(bad)  
   14000d331:	(bad)  
   14000d332:	add    BYTE PTR [rax],al
   14000d334:	add    BYTE PTR [rax],al
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	pop    rdx
   14000d339:	(bad)  
   14000d33a:	add    BYTE PTR [rax],al
   14000d33c:	add    BYTE PTR [rax],al
   14000d33e:	add    BYTE PTR [rax],al
   14000d340:	rex.RX (bad) 
   14000d342:	add    BYTE PTR [rax],al
   14000d344:	add    BYTE PTR [rax],al
   14000d346:	add    BYTE PTR [rax],al
   14000d348:	cs (bad) 
   14000d34a:	add    BYTE PTR [rax],al
   14000d34c:	add    BYTE PTR [rax],al
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	and    al,0xd6
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	add    BYTE PTR [rax],al
   14000d356:	add    BYTE PTR [rax],al
   14000d358:	sbb    dl,dh
   14000d35a:	add    BYTE PTR [rax],al
   14000d35c:	add    BYTE PTR [rax],al
   14000d35e:	add    BYTE PTR [rax],al
   14000d360:	add    dl,dh
   14000d362:	add    BYTE PTR [rax],al
   14000d364:	add    BYTE PTR [rax],al
   14000d366:	add    BYTE PTR [rax],al
   14000d368:	not    ch
   14000d36a:	add    BYTE PTR [rax],al
   14000d36c:	add    BYTE PTR [rax],al
   14000d36e:	add    BYTE PTR [rax],al
   14000d370:	loop   0x14000d347
   14000d372:	add    BYTE PTR [rax],al
   14000d374:	add    BYTE PTR [rax],al
   14000d376:	add    BYTE PTR [rax],al
   14000d378:	fcom   st(5)
   14000d37a:	add    BYTE PTR [rax],al
   14000d37c:	add    BYTE PTR [rax],al
   14000d37e:	add    BYTE PTR [rax],al
   14000d380:	rcl    ch,1
   14000d382:	add    BYTE PTR [rax],al
   14000d384:	add    BYTE PTR [rax],al
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	enter  0xd5,0x0
   14000d38c:	add    BYTE PTR [rax],al
   14000d38e:	add    BYTE PTR [rax],al
   14000d390:	mov    dh,0xd5
   14000d392:	add    BYTE PTR [rax],al
   14000d394:	add    BYTE PTR [rax],al
   14000d396:	add    BYTE PTR [rax],al
   14000d398:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d399:	(bad)  
   14000d39a:	add    BYTE PTR [rax],al
   14000d39c:	add    BYTE PTR [rax],al
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	xchg   esi,eax
   14000d3a1:	(bad)  
   14000d3a2:	add    BYTE PTR [rax],al
   14000d3a4:	add    BYTE PTR [rax],al
   14000d3a6:	add    BYTE PTR [rax],al
   14000d3a8:	mov    ch,dl
   14000d3aa:	add    BYTE PTR [rax],al
   14000d3ac:	add    BYTE PTR [rax],al
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	jl     0x14000d387
   14000d3b2:	add    BYTE PTR [rax],al
   14000d3b4:	add    BYTE PTR [rax],al
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	jo     0x14000d38f
   14000d3ba:	add    BYTE PTR [rax],al
   14000d3bc:	add    BYTE PTR [rax],al
   14000d3be:	add    BYTE PTR [rax],al
   14000d3c0:	(bad)  
   14000d3c1:	(bad)  
   14000d3c2:	add    BYTE PTR [rax],al
   14000d3c4:	add    BYTE PTR [rax],al
   14000d3c6:	add    BYTE PTR [rax],al
   14000d3c8:	push   rsp
   14000d3c9:	(bad)  
   14000d3ca:	add    BYTE PTR [rax],al
   14000d3cc:	add    BYTE PTR [rax],al
   14000d3ce:	add    BYTE PTR [rax],al
   14000d3d0:	enter  0xdc,0x0
   14000d3d4:	add    BYTE PTR [rax],al
   14000d3d6:	add    BYTE PTR [rax],al
   14000d3d8:	rex.RX (bad) 
   14000d3da:	add    BYTE PTR [rax],al
   14000d3dc:	add    BYTE PTR [rax],al
   14000d3de:	add    BYTE PTR [rax],al
   14000d3e0:	xor    al,0xd5
   14000d3e2:	add    BYTE PTR [rax],al
   14000d3e4:	add    BYTE PTR [rax],al
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	sub    dl,ch
   14000d3ea:	add    BYTE PTR [rax],al
   14000d3ec:	add    BYTE PTR [rax],al
   14000d3ee:	add    BYTE PTR [rax],al
   14000d3f0:	and    ch,dl
   14000d3f2:	add    BYTE PTR [rax],al
   14000d3f4:	add    BYTE PTR [rax],al
   14000d3f6:	add    BYTE PTR [rax],al
   14000d3f8:	sbb    ch,dl
   14000d3fa:	add    BYTE PTR [rax],al
   14000d3fc:	add    BYTE PTR [rax],al
   14000d3fe:	add    BYTE PTR [rax],al
   14000d400:	(bad)  
   14000d401:	(bad)  
   14000d402:	add    BYTE PTR [rax],al
   14000d404:	add    BYTE PTR [rax],al
   14000d406:	add    BYTE PTR [rax],al
   14000d408:	push   0xdd
   14000d40d:	add    BYTE PTR [rax],al
   14000d40f:	add    BYTE PTR [rsi-0x23],bh
   14000d412:	add    BYTE PTR [rax],al
   14000d414:	add    BYTE PTR [rax],al
   14000d416:	add    BYTE PTR [rax],al
   14000d418:	xchg   esp,eax
   14000d419:	fld    QWORD PTR [rax]
   14000d41b:	add    BYTE PTR [rax],al
   14000d41d:	add    BYTE PTR [rax],al
   14000d41f:	add    BYTE PTR [rsi+0xdd],bl
	...
   14000d42d:	add    BYTE PTR [rax],al
   14000d42f:	add    BYTE PTR [rdi+0x2],dh
   14000d432:	(bad)  
   14000d433:	pop    rdi
   14000d434:	push   rdi
   14000d435:	imul   ebp,DWORD PTR [rsi+0x65],0x726f7272
   14000d43c:	pop    rdi
   14000d43d:	ins    DWORD PTR es:[rdi],dx
   14000d43e:	(bad)  
   14000d43f:	jo     0x14000d481
   14000d441:	jae    0x14000d4b7
   14000d443:	fs rex
   14000d445:	rex pop rcx
   14000d447:	push   r8
   14000d449:	rex.RB
   14000d44a:	rex.X
   14000d44b:	rex.R
   14000d44c:	rex.W
   14000d44d:	rex pop rdx
   14000d44f:	add    BYTE PTR [rdi+0x2],ah
   14000d452:	(bad)  
   14000d453:	pop    rdi
   14000d454:	push   rbx
   14000d455:	jns    0x14000d4ca
   14000d457:	gs jb  0x14000d4cc
   14000d45a:	outs   dx,DWORD PTR ds:[rsi]
   14000d45b:	jb     0x14000d4bc
   14000d45d:	ins    DWORD PTR es:[rdi],dx
   14000d45e:	(bad)  
   14000d45f:	jo     0x14000d4a1
   14000d461:	jae    0x14000d4d7
   14000d463:	fs rex
   14000d465:	rex pop rcx
   14000d467:	push   r8
   14000d469:	rex.RB
   14000d46a:	rex.X
   14000d46b:	rex.R
   14000d46c:	rex.W
   14000d46d:	rex pop rdx
   14000d46f:	add    BYTE PTR [rbx+0x2],bh
   14000d472:	(bad)  
   14000d473:	pop    rdi
   14000d474:	pop    rax
   14000d475:	(bad)
   14000d47a:	ins    BYTE PTR es:[rdi],dx
   14000d47b:	ins    BYTE PTR es:[rdi],dx
   14000d47c:	outs   dx,DWORD PTR ds:[rsi]
   14000d47d:	movsxd eax,DWORD PTR [rax+0x73]
   14000d480:	je     0x14000d4e6
   14000d482:	rex
   14000d483:	rex pop rcx
   14000d485:	pop    r8
   14000d487:	pop    rax
   14000d488:	pop    rdx
   14000d489:	add    BYTE PTR [rdi+0x2],bh
   14000d48c:	(bad)  
   14000d48d:	pop    rdi
   14000d48e:	pop    rax
   14000d48f:	outs   dx,DWORD PTR ds:[rsi]
   14000d490:	jne    0x14000d506
   14000d492:	pop    rdi
   14000d493:	outs   dx,DWORD PTR ds:[rsi]
   14000d494:	pop    di
   14000d496:	jb     0x14000d4f9
   14000d498:	outs   dx,BYTE PTR ds:[rsi]
   14000d499:	addr32 gs rex jae 0x14000d512
   14000d49e:	fs rex
   14000d4a0:	rex pop rcx
   14000d4a2:	pop    r8
   14000d4a4:	push   rax
   14000d4a5:	rex.RB
   14000d4a6:	rex.X
   14000d4a7:	rex.R
   14000d4a8:	rex pop rdx
   14000d4aa:	add    BYTE PTR [rax],al
   14000d4ac:	jle    0x14000d4b0
   14000d4ae:	(bad)  
   14000d4af:	pop    rdi
   14000d4b0:	pop    rax
   14000d4b1:	ins    BYTE PTR es:[rdi],dx
   14000d4b2:	outs   dx,BYTE PTR gs:[rsi]
   14000d4b4:	addr32 je 0x14000d51f
   14000d4b7:	pop    rdi
   14000d4b8:	gs jb  0x14000d52d
   14000d4bb:	outs   dx,DWORD PTR ds:[rsi]
   14000d4bc:	jb     0x14000d4fe
   14000d4be:	jae    0x14000d534
   14000d4c0:	fs rex
   14000d4c2:	rex pop rcx
   14000d4c4:	pop    r8
   14000d4c6:	push   rax
   14000d4c7:	rex.RB
   14000d4c8:	rex.X
   14000d4c9:	rex.R
   14000d4ca:	rex pop rdx
   14000d4cc:	add    BYTE PTR [rax],al
   14000d4ce:	cmp    al,BYTE PTR [rdx]
   14000d4d0:	(bad)  
   14000d4d1:	pop    rdi
   14000d4d2:	rex.WRXB jb 0x14000d545
   14000d4d5:	push   0x615f6e61
   14000d4da:	ins    BYTE PTR es:[rdi],dx
   14000d4db:	ins    BYTE PTR es:[rdi],dx
   14000d4dc:	rex pop rdi
   14000d4de:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d4e0:	outs   dx,BYTE PTR ds:[rsi]
   14000d4e1:	je     0x14000d544
   14000d4e3:	imul   ebp,DWORD PTR [rsi+0x65],0x61625f72
   14000d4ea:	jae    0x14000d551
   14000d4ec:	xor    BYTE PTR [rax+0x73],al
   14000d4ef:	je     0x14000d555
   14000d4f1:	rex
   14000d4f2:	rex push rcx
   14000d4f4:	rex.RB
   14000d4f5:	rex.B
   14000d4f6:	pop    r8
   14000d4f8:	pop    rax
   14000d4f9:	pop    rdx
   14000d4fa:	add    BYTE PTR [rax],al
   14000d4fc:	ins    DWORD PTR es:[rdi],dx
   14000d4fd:	jae    0x14000d575
   14000d4ff:	movsxd esi,DWORD PTR [rax+0x31]
   14000d502:	xor    DWORD PTR [rax],esi
   14000d504:	pop    rdi
   14000d505:	ja     0x14000d570
   14000d507:	outs   dx,BYTE PTR ds:[rsi]
   14000d508:	cs fs ins BYTE PTR es:[rdi],dx
   14000d50b:	ins    BYTE PTR es:[rdi],dx
   14000d50c:	add    BYTE PTR [rax],al
   14000d50e:	xchg   esp,eax
   14000d50f:	add    al,0x6d
   14000d511:	gs ins DWORD PTR es:[rdi],dx
   14000d513:	ins    DWORD PTR es:[rdi],dx
   14000d514:	outs   dx,DWORD PTR ds:[rsi]
   14000d515:	jbe    0x14000d57c
   14000d517:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000d51b:	jb     0x14000d582
   14000d51d:	add    BYTE PTR gs:[rax],al
   14000d520:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000d527:	movsxd eax,DWORD PTR [rax]
   14000d529:	add    BYTE PTR [rax],ah
   14000d52b:	add    eax,0x69727077
   14000d530:	outs   dx,BYTE PTR ds:[rsi]
   14000d531:	je     0x14000d599
   14000d533:	add    BYTE PTR [rbx],ah
   14000d535:	add    BYTE PTR [rdi],bh
   14000d537:	(bad)  
   14000d538:	pop    rdi
   14000d539:	push   rsi
   14000d53a:	rex pop rcx
   14000d53c:	pop    r8
   14000d53e:	push   rax
   14000d53f:	rex.RB
   14000d540:	pop    r8
   14000d542:	rex pop rdx
   14000d544:	add    BYTE PTR [rax],al
   14000d546:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000d54c:	ja     0x14000d5be
   14000d54e:	jb     0x14000d5b9
   14000d550:	outs   dx,BYTE PTR ds:[rsi]
   14000d551:	je     0x14000d5b9
   14000d553:	add    BYTE PTR [rsi+0x75705f02],bl
   14000d559:	jb     0x14000d5c0
   14000d55b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000d55e:	ins    BYTE PTR es:[rdi],dx
   14000d55f:	add    BYTE PTR [rax+rax*1],dl
   14000d562:	(bad)  
   14000d563:	(bad)  
   14000d564:	xor    eax,DWORD PTR [rax+0x59]
   14000d567:	pop    r8
   14000d569:	push   rax
   14000d56a:	rex.RB
   14000d56b:	pop    r8
   14000d56d:	rex pop rdx
   14000d56f:	add    BYTE PTR [rdi],dl
   14000d571:	add    eax,0x74736377
   14000d576:	outs   dx,DWORD PTR ds:[rsi]
   14000d577:	imul   ebx,DWORD PTR [rdi+0x73],0x0
   14000d57b:	add    BYTE PTR [rdi+0x61635f00],bh
   14000d581:	ins    BYTE PTR es:[rdi],dx
   14000d582:	ins    BYTE PTR es:[rdi],dx
   14000d583:	outs   dx,BYTE PTR ds:[rsi]
   14000d584:	gs ja  0x14000d5ef
   14000d587:	add    BYTE PTR [rbp+0x0],dl
   14000d58a:	pop    rdi
   14000d58b:	pop    rax
   14000d58c:	movsxd esi,DWORD PTR [rax+0x74]
   14000d58f:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000d598:	pop    rdi
   14000d599:	(bad)  
   14000d59a:	ins    DWORD PTR es:[rdi],dx
   14000d59b:	jae    0x14000d604
   14000d59d:	pop    rdi
   14000d59e:	gs js  0x14000d60a
   14000d5a1:	je     0x14000d5a3
   14000d5a3:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000d5a9:	addr32 gs je 0x14000d61a
   14000d5ad:	(bad)  
   14000d5ae:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000d5b5:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000d5bb:	gs je  0x14000d61d
   14000d5be:	(bad)  
   14000d5bf:	jo     0x14000d631
   14000d5c1:	pop    rdi
   14000d5c2:	je     0x14000d63d
   14000d5c4:	jo     0x14000d62b
   14000d5c6:	add    BYTE PTR [rax],al
   14000d5c8:	xor    al,BYTE PTR [riz*2+0x746978]
   14000d5cf:	add    BYTE PTR [rsi],cl
   14000d5d1:	add    DWORD PTR [rdi+0x65],ebx
   14000d5d4:	js     0x14000d63f
   14000d5d6:	je     0x14000d5d8
   14000d5d8:	rol    DWORD PTR [rax],0x5f
   14000d5db:	movsxd esp,DWORD PTR [rbp+0x78]
   14000d5de:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000d5e6:	jae    0x14000d64d
   14000d5e8:	je     0x14000d65f
   14000d5ea:	jae    0x14000d651
   14000d5ec:	jb     0x14000d65b
   14000d5ee:	(bad)  
   14000d5ef:	je     0x14000d659
   14000d5f1:	gs jb  0x14000d666
   14000d5f4:	add    BYTE PTR [rax],al
   14000d5f6:	jge    0x14000d5f9
   14000d5f8:	pop    rdi
   14000d5f9:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000d600:	ins    DWORD PTR es:[rdi],dx
   14000d601:	add    BYTE PTR [rdi+0x0],dl
   14000d604:	pop    rdi
   14000d605:	pop    rdi
   14000d606:	rex.XB pop r15
   14000d608:	jae    0x14000d67a
   14000d60a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000d60e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000d615:	ins    BYTE PTR es:[rdi],dx
   14000d616:	gs jb  0x14000d619
   14000d619:	add    BYTE PTR [rdx+0x63775f03],al
   14000d61f:	ins    DWORD PTR es:[rdi],dx
   14000d620:	fs ins BYTE PTR es:[rdi],dx
   14000d622:	outs   dx,BYTE PTR ds:[rsi]
   14000d623:	add    BYTE PTR [rdi],ah
   14000d625:	add    DWORD PTR [rdi+0x66],ebx
   14000d628:	ins    DWORD PTR es:[rdi],dx
   14000d629:	outs   dx,DWORD PTR ds:[rsi]
   14000d62a:	fs add BYTE PTR gs:[rax],al
   14000d62e:	rol    BYTE PTR [rax],cl
   14000d630:	pop    rdi
   14000d631:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000d634:	ins    DWORD PTR es:[rdi],dx
   14000d635:	outs   dx,DWORD PTR ds:[rsi]
   14000d636:	fs add BYTE PTR gs:[rax],al
   14000d63a:	ins    DWORD PTR es:[rdi],dx
   14000d63b:	jae    0x14000d6b3
   14000d63d:	movsxd esi,DWORD PTR [rdx+0x74]
   14000d640:	cs fs ins BYTE PTR es:[rdi],dx
   14000d643:	ins    BYTE PTR es:[rdi],dx
   14000d644:	add    BYTE PTR [rax],al
   14000d646:	(bad)  
   14000d647:	add    BYTE PTR [rdi],bh
   14000d649:	je     0x14000d6b0
   14000d64b:	jb     0x14000d6ba
   14000d64d:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000d654:	pop    rcx
   14000d655:	pop    r8
   14000d657:	pop    rax
   14000d658:	pop    rdx
   14000d659:	add    dh,ah
   14000d65b:	add    DWORD PTR [rdi+0x6c],ebx
   14000d65e:	outs   dx,DWORD PTR ds:[rsi]
   14000d65f:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d662:	add    ebx,DWORD PTR [r15+0x75]
   14000d666:	outs   dx,BYTE PTR ds:[rsi]
   14000d667:	ins    BYTE PTR es:[rdi],dx
   14000d668:	outs   dx,DWORD PTR ds:[rsi]
   14000d669:	movsxd ebp,DWORD PTR [rbx+0x0]
   14000d66c:	jnp    0x14000d66e
   14000d66e:	pop    rdi
   14000d66f:	pop    rdi
   14000d670:	fs ins BYTE PTR es:[rdi],dx
   14000d672:	ins    BYTE PTR es:[rdi],dx
   14000d673:	outs   dx,DWORD PTR ds:[rsi]
   14000d674:	outs   dx,BYTE PTR ds:[rsi]
   14000d675:	gs js  0x14000d6e1
   14000d678:	je     0x14000d67a
   14000d67a:	nop
   14000d67b:	add    bl,BYTE PTR [rdi+0x6f]
   14000d67e:	outs   dx,BYTE PTR ds:[rsi]
   14000d67f:	gs js  0x14000d6eb
   14000d682:	je     0x14000d684
   14000d684:	adc    al,BYTE PTR [rax]
   14000d686:	(bad)  
   14000d687:	(bad)  
   14000d688:	xor    DWORD PTR [rcx+rdi*2+0x70],esi
   14000d68c:	gs pop rdi
   14000d68e:	imul   ebp,DWORD PTR [rsi+0x66],0x5540406f
   14000d695:	rex.RB
   14000d696:	rex.B
   14000d697:	rex.B
   14000d698:	rex pop rax
   14000d69a:	pop    rdx
   14000d69b:	add    BYTE PTR [rax],cl
   14000d69d:	add    BYTE PTR [rbx+0x6f],al
   14000d6a0:	rex.XB jb 0x14000d708
   14000d6a3:	(bad)  
   14000d6a4:	je     0x14000d70b
   14000d6a6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d6a8:	jae    0x14000d71e
   14000d6aa:	(bad)  
   14000d6ab:	outs   dx,BYTE PTR ds:[rsi]
   14000d6ac:	movsxd esp,DWORD PTR [rbp+0x0]
   14000d6af:	add    BYTE PTR [rcx],cl
   14000d6b1:	add    BYTE PTR [rbp+0x76],al
   14000d6b4:	outs   dx,BYTE PTR gs:[rsi]
   14000d6b6:	je     0x14000d70f
   14000d6b8:	jb     0x14000d723
   14000d6ba:	je     0x14000d721
   14000d6bc:	push   rsp
   14000d6bd:	jb     0x14000d720
   14000d6bf:	outs   dx,BYTE PTR ds:[rsi]
   14000d6c0:	jae    0x14000d728
   14000d6c2:	gs jb  0x14000d6c5
   14000d6c5:	add    BYTE PTR [rdx+0x0],al
   14000d6c8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000d6ca:	push   rbp
   14000d6cb:	outs   dx,BYTE PTR ds:[rsi]
   14000d6cc:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000d6d3:	imul   edi,DWORD PTR [rdx+0x65],0x170000
   14000d6da:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d6dc:	(bad)  
   14000d6dd:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14000d6e6:	js     0x14000d73f
   14000d6e8:	add    BYTE PTR [rax],al
   14000d6ea:	adc    al,BYTE PTR [rax]
   14000d6ec:	rex.RXB
   14000d6ed:	gs je  0x14000d73d
   14000d6f0:	outs   dx,DWORD PTR ds:[rsi]
   14000d6f1:	fs jne 0x14000d760
   14000d6f4:	gs rex.W (bad) 
   14000d6f7:	outs   dx,BYTE PTR ds:[rsi]
   14000d6f8:	fs ins BYTE PTR es:[rdi],dx
   14000d6fa:	gs rex.RB js 0x14000d755
   14000d6fe:	add    BYTE PTR [rax],al
   14000d700:	(bad)  
   14000d701:	add    BYTE PTR [rdi+0x75],cl
   14000d704:	je     0x14000d776
   14000d706:	jne    0x14000d77c
   14000d708:	rex.R
   14000d709:	gs (bad) 
   14000d70b:	jne    0x14000d774
   14000d70d:	push   rbx
   14000d70e:	je     0x14000d782
   14000d710:	imul   ebp,DWORD PTR [rsi+0x67],0x13000057
   14000d717:	add    BYTE PTR [rdi+0x65],al
   14000d71a:	je     0x14000d769
   14000d71c:	outs   dx,DWORD PTR ds:[rsi]
   14000d71d:	fs jne 0x14000d78c
   14000d720:	gs rex.W (bad) 
   14000d723:	outs   dx,BYTE PTR ds:[rsi]
   14000d724:	fs ins BYTE PTR es:[rdi],dx
   14000d726:	gs push rdi
   14000d728:	add    BYTE PTR [rax],al
   14000d72a:	or     BYTE PTR [rax],al
   14000d72c:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000d72e:	jb     0x14000d79d
   14000d730:	(bad)  
   14000d731:	je     0x14000d780
   14000d733:	gs jae 0x14000d7a9
   14000d736:	(bad)  
   14000d737:	addr32 gs push rdi
   14000d73a:	add    BYTE PTR [rax],al
   14000d73c:	adc    al,0x0
   14000d73e:	rex.RXB
   14000d73f:	gs je  0x14000d792
   14000d742:	jb     0x14000d7b3
   14000d744:	movsxd eax,DWORD PTR [rcx+0x64]
   14000d747:	fs jb  0x14000d7af
   14000d74a:	jae    0x14000d7bf
   14000d74c:	add    BYTE PTR [rax],al
   14000d74e:	(bad)  
   14000d74f:	add    BYTE PTR [rdi+0x65],al
   14000d752:	je     0x14000d7a1
   14000d754:	outs   dx,DWORD PTR ds:[rsi]
   14000d755:	fs jne 0x14000d7c4
   14000d758:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14000d762:	add    BYTE PTR [rax],al
   14000d764:	add    BYTE PTR es:[rbx+0x6f],al
   14000d768:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d76a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000d772:	rex.RB js 0x14000d775
   14000d775:	add    BYTE PTR [rcx],dl
   14000d777:	add    BYTE PTR [rdi+0x65],al
   14000d77a:	je     0x14000d7bf
   14000d77c:	jne    0x14000d7f0
   14000d77e:	jb     0x14000d7e5
   14000d780:	outs   dx,BYTE PTR ds:[rsi]
   14000d781:	je     0x14000d7d7
   14000d783:	push   0x64616572
   14000d788:	rex.WB
   14000d789:	add    BYTE PTR fs:[rax],al
   14000d78c:	add    BYTE PTR [rax],al
   14000d78e:	rex.RB jbe 0x14000d7f6
   14000d791:	outs   dx,BYTE PTR ds:[rsi]
   14000d792:	je     0x14000d7d5
   14000d794:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14000d798:	imul   esi,DWORD PTR [rcx+rdi*2+0x49],0x6e6f4364
   14000d7a0:	je     0x14000d814
   14000d7a2:	outs   dx,DWORD PTR ds:[rsi]
   14000d7a3:	ins    BYTE PTR es:[rdi],dx
   14000d7a4:	add    BYTE PTR [rax],al
   14000d7a6:	add    eax,0x65764500
   14000d7ab:	outs   dx,BYTE PTR ds:[rsi]
   14000d7ac:	je     0x14000d803
   14000d7ae:	outs   dx,BYTE PTR ds:[rsi]
   14000d7af:	jb     0x14000d816
   14000d7b1:	imul   esi,DWORD PTR [ebx+0x74],0x4007265
   14000d7b9:	add    BYTE PTR [rbp+0x76],al
   14000d7bc:	outs   dx,BYTE PTR gs:[rsi]
   14000d7be:	je     0x14000d813
   14000d7c0:	gs je  0x14000d80c
   14000d7c3:	outs   dx,BYTE PTR ds:[rsi]
   14000d7c4:	outs   dx,WORD PTR ds:[rsi]
   14000d7c6:	jb     0x14000d835
   14000d7c8:	(bad)  
   14000d7c9:	je     0x14000d834
   14000d7cb:	outs   dx,DWORD PTR ds:[rsi]
   14000d7cc:	outs   dx,BYTE PTR ds:[rsi]
   14000d7cd:	add    BYTE PTR [rbx],al
   14000d7cf:	add    BYTE PTR [rbp+0x76],al
   14000d7d2:	outs   dx,BYTE PTR gs:[rsi]
   14000d7d4:	je     0x14000d828
   14000d7d6:	imul   esi,DWORD PTR gs:[ebx+0x74],0x2d007265
   14000d7df:	add    BYTE PTR [rbx+0x6c],dl
   14000d7e2:	gs gs jo 0x14000d7e6
   14000d7e6:	and    BYTE PTR [rax],al
   14000d7e8:	rex.RXB
   14000d7e9:	gs je  0x14000d83f
   14000d7ec:	je     0x14000d84f
   14000d7ee:	jb     0x14000d864
   14000d7f0:	jne    0x14000d862
   14000d7f2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000d7f4:	outs   dx,WORD PTR ds:[rsi]
   14000d7f6:	push   rdi
   14000d7f7:	add    BYTE PTR [rdx],al
   14000d7f9:	add    BYTE PTR [rdx+0x74],dl
   14000d7fc:	ins    BYTE PTR es:[rdi],dx
   14000d7fd:	rex.XB (bad) 
   14000d7ff:	jo     0x14000d875
   14000d801:	jne    0x14000d875
   14000d803:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000d806:	outs   dx,BYTE PTR ds:[rsi]
   14000d807:	je     0x14000d86e
   14000d809:	js     0x14000d87f
   14000d80b:	add    BYTE PTR [rcx],cl
   14000d80d:	add    BYTE PTR [rdx+0x74],dl
   14000d810:	ins    BYTE PTR es:[rdi],dx
   14000d811:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d813:	outs   dx,DWORD PTR ds:[rsi]
   14000d814:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000d818:	jne    0x14000d888
   14000d81a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000d81e:	outs   dx,BYTE PTR ds:[rsi]
   14000d81f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000d821:	je     0x14000d895
   14000d823:	jns    0x14000d825
   14000d825:	add    BYTE PTR [rdi],cl
   14000d827:	add    BYTE PTR [rdx+0x74],dl
   14000d82a:	ins    BYTE PTR es:[rdi],dx
   14000d82b:	push   rsi
   14000d82c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000d833:	outs   dx,BYTE PTR ds:[rsi]
   14000d834:	ja     0x14000d89f
   14000d836:	outs   dx,BYTE PTR ds:[rsi]
   14000d837:	add    BYTE PTR fs:[rax],al
   14000d83a:	adc    DWORD PTR [rax],eax
   14000d83c:	push   rbp
   14000d83d:	outs   dx,BYTE PTR ds:[rsi]
   14000d83e:	push   0x6c646e61
   14000d843:	gs fs rex.RB js 0x14000d8ab
   14000d848:	gs jo  0x14000d8bf
   14000d84b:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000d852:	gs jb  0x14000d855
   14000d855:	add    BYTE PTR [rdi],cl
   14000d857:	add    BYTE PTR [rbx+0x65],dl
   14000d85a:	je     0x14000d8b1
   14000d85c:	outs   dx,BYTE PTR ds:[rsi]
   14000d85d:	push   0x6c646e61
   14000d862:	gs fs rex.RB js 0x14000d8ca
   14000d867:	gs jo  0x14000d8de
   14000d86a:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000d871:	gs jb  0x14000d874
   14000d874:	or     al,0x0
   14000d876:	rex.RXB
   14000d877:	gs je  0x14000d8bd
   14000d87a:	jne    0x14000d8ee
   14000d87c:	jb     0x14000d8e3
   14000d87e:	outs   dx,BYTE PTR ds:[rsi]
   14000d87f:	je     0x14000d8d1
   14000d881:	jb     0x14000d8f2
   14000d883:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d886:	jae    0x14000d888
   14000d888:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   14000d88d:	ins    DWORD PTR es:[rdi],dx
   14000d88e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000d895:	outs   dx,DWORD PTR ds:[rsi]
   14000d896:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d899:	jae    0x14000d89b
   14000d89b:	add    BYTE PTR [rax],al
   14000d89d:	add    BYTE PTR [rcx+0x75],dl
   14000d8a0:	gs jb  0x14000d91c
   14000d8a3:	push   rax
   14000d8a4:	gs jb  0x14000d90d
   14000d8a7:	outs   dx,DWORD PTR ds:[rsi]
   14000d8a8:	jb     0x14000d917
   14000d8aa:	(bad)  
   14000d8ab:	outs   dx,BYTE PTR ds:[rsi]
   14000d8ac:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d8af:	outs   dx,DWORD PTR ds:[rsi]
   14000d8b0:	jne    0x14000d920
   14000d8b2:	je     0x14000d919
   14000d8b4:	jb     0x14000d8b6
   14000d8b6:	or     eax,0x74654700
   14000d8bb:	rex.XB jne 0x14000d930
   14000d8be:	jb     0x14000d925
   14000d8c0:	outs   dx,BYTE PTR ds:[rsi]
   14000d8c1:	je     0x14000d913
   14000d8c3:	jb     0x14000d934
   14000d8c5:	movsxd esp,DWORD PTR [rbp+0x73]
   14000d8c8:	jae    0x14000d913
   14000d8ca:	add    BYTE PTR fs:[rax+rax*1],dl
   14000d8ce:	rex.RXB
   14000d8cf:	gs je  0x14000d925
   14000d8d2:	jns    0x14000d947
   14000d8d4:	je     0x14000d93b
   14000d8d6:	ins    DWORD PTR es:[rdi],dx
   14000d8d7:	push   rsp
   14000d8d8:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000d8df:	ins    BYTE PTR es:[rdi],dx
   14000d8e0:	gs push rsp
   14000d8e2:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   14000d8e9:	gs je  0x14000d940
   14000d8ec:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000d8f3:	je     0x14000d8f5
   14000d8f5:	add    BYTE PTR [rcx+0x70],ah
   14000d8f8:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4c6f
   14000d902:	outs   dx,DWORD PTR ds:[rsi]
   14000d903:	jb     0x14000d96a
   14000d905:	sub    eax,0x2d6d6f63
   14000d90a:	ins    BYTE PTR es:[rdi],dx
   14000d90b:	xor    DWORD PTR [rip+0x2e312d31],ebp        # 0x16e320642
   14000d911:	fs ins BYTE PTR es:[rdi],dx
   14000d913:	ins    BYTE PTR es:[rdi],dx
   14000d914:	add    BYTE PTR [rax],al
   14000d916:	(bad)  
   14000d917:	jo     0x14000d982
   14000d919:	sub    eax,0x772d736d
   14000d91e:	imul   ebp,DWORD PTR [rsi+0x2d],0x6e657665
   14000d925:	je     0x14000d990
   14000d927:	outs   dx,BYTE PTR ds:[rsi]
   14000d928:	addr32 sub eax,0x766f7270
   14000d92e:	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x2d316c2d
   14000d936:	xor    DWORD PTR [rip+0x6c642e30],ebp        # 0x1ac65076c
   14000d93c:	ins    BYTE PTR es:[rdi],dx
   14000d93d:	add    BYTE PTR [rcx+0x70],ah
   14000d940:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4cb7
   14000d94a:	outs   dx,DWORD PTR ds:[rsi]
   14000d94b:	jb     0x14000d9b2
   14000d94d:	sub    eax,0x7262696c
   14000d952:	(bad)  
   14000d953:	jb     0x14000d9ce
   14000d955:	ins    BYTE PTR es:[rdi],dx
   14000d956:	outs   dx,DWORD PTR ds:[rsi]
   14000d957:	(bad)  
   14000d958:	fs gs jb 0x14000d989
   14000d95c:	ins    BYTE PTR es:[rdi],dx
   14000d95d:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e310695
   14000d963:	fs ins BYTE PTR es:[rdi],dx
   14000d965:	ins    BYTE PTR es:[rdi],dx
   14000d966:	add    BYTE PTR [rax],al
   14000d968:	(bad)  
   14000d969:	jo     0x14000d9d4
   14000d96b:	sub    eax,0x772d736d
   14000d970:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d977:	sub    eax,0x75626564
   14000d97c:	addr32 sub eax,0x312d316c
   14000d982:	sub    eax,0x6c642e31
   14000d987:	ins    BYTE PTR es:[rdi],dx
   14000d988:	add    BYTE PTR [rax],al
   14000d98a:	(bad)  
   14000d98b:	jo     0x14000d9f6
   14000d98d:	sub    eax,0x772d736d
   14000d992:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000d999:	sub    eax,0x61636f6c
   14000d99e:	ins    BYTE PTR es:[rdi],dx
   14000d99f:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   14000d9a6:	sub    eax,0x322d316c
   14000d9ab:	sub    eax,0x6c642e31
   14000d9b0:	ins    BYTE PTR es:[rdi],dx
   14000d9b1:	add    BYTE PTR [rcx+0x70],ah
   14000d9b4:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4d2b
   14000d9be:	outs   dx,DWORD PTR ds:[rsi]
   14000d9bf:	jb     0x14000da26
   14000d9c1:	sub    eax,0x636f7270
   14000d9c6:	gs jae 0x14000da3c
   14000d9c9:	je     0x14000da33
   14000d9cb:	jb     0x14000da32
   14000d9cd:	(bad)  
   14000d9ce:	fs jae 0x14000d9fe
   14000d9d1:	ins    BYTE PTR es:[rdi],dx
   14000d9d2:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e330709
   14000d9d8:	fs ins BYTE PTR es:[rdi],dx
   14000d9da:	ins    BYTE PTR es:[rdi],dx
   14000d9db:	add    BYTE PTR [rcx+0x70],ah
   14000d9de:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4d55
   14000d9e8:	outs   dx,DWORD PTR ds:[rsi]
   14000d9e9:	jb     0x14000da50
   14000d9eb:	sub    eax,0x636e7973
   14000d9f0:	push   0x2d316c2d
   14000d9f5:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac65082b
   14000d9fb:	ins    BYTE PTR es:[rdi],dx
   14000d9fc:	add    BYTE PTR [rax],al
   14000d9fe:	(bad)  
   14000d9ff:	jo     0x14000da6a
   14000da01:	sub    eax,0x772d736d
   14000da06:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000da0d:	sub    eax,0x736c7472
   14000da12:	jne    0x14000da84
   14000da14:	jo     0x14000da85
   14000da16:	jb     0x14000da8c
   14000da18:	sub    eax,0x322d316c
   14000da1d:	sub    eax,0x6c642e30
   14000da22:	ins    BYTE PTR es:[rdi],dx
   14000da23:	add    BYTE PTR [rcx+0x70],ah
   14000da26:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4d9d
   14000da30:	outs   dx,DWORD PTR ds:[rsi]
   14000da31:	jb     0x14000da98
   14000da33:	sub    eax,0x6f727265
   14000da38:	jb     0x14000daa2
   14000da3a:	(bad)  
   14000da3b:	outs   dx,BYTE PTR ds:[rsi]
   14000da3c:	fs ins BYTE PTR es:[rdi],dx
   14000da3e:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   14000da45:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac65087c
   14000da4b:	ins    BYTE PTR es:[rdi],dx
   14000da4c:	add    BYTE PTR [rax],al
   14000da4e:	(bad)  
   14000da4f:	jo     0x14000daba
   14000da51:	sub    eax,0x772d736d
   14000da56:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000da5d:	sub    eax,0x666f7270
   14000da62:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   14000da6a:	sub    eax,0x6c642e30
   14000da6f:	ins    BYTE PTR es:[rdi],dx
   14000da70:	add    BYTE PTR [rax],al
   14000da72:	(bad)  
   14000da73:	jo     0x14000dade
   14000da75:	sub    eax,0x772d736d
   14000da7a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000da81:	sub    eax,0x69737973
   14000da86:	outs   dx,BYTE PTR ds:[rsi]
   14000da87:	outs   dx,WORD PTR ds:[rsi]
   14000da89:	sub    eax,0x322d316c
   14000da8e:	sub    eax,0x6c642e31
   14000da93:	ins    BYTE PTR es:[rdi],dx
   14000da94:	add    BYTE PTR [rax],al
   14000da96:	add    BYTE PTR [rax],al
   14000da98:	rex.RX jb 0x14000db00
   14000da9b:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000da9e:	ins    DWORD PTR es:[rdi],dx
   14000da9f:	ins    DWORD PTR es:[rdi],dx
   14000daa0:	(bad)  
   14000daa1:	outs   dx,BYTE PTR ds:[rsi]
   14000daa2:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6974704f
   14000daab:	outs   dx,DWORD PTR ds:[rsi]
   14000daac:	outs   dx,BYTE PTR ds:[rsi]
   14000daad:	jae    0x14000daaf
   14000daaf:	add    BYTE PTR [rcx],al
   14000dab1:	add    BYTE PTR [rax+0x72],dl
   14000dab4:	outs   dx,DWORD PTR ds:[rsi]
   14000dab5:	movsxd esp,DWORD PTR [rbp+0x73]
   14000dab8:	jae    0x14000dafd
   14000daba:	outs   dx,DWORD PTR ds:[rsi]
   14000dabb:	ins    DWORD PTR es:[rdi],dx
   14000dabc:	ins    DWORD PTR es:[rdi],dx
   14000dabd:	(bad)  
   14000dabe:	outs   dx,BYTE PTR ds:[rsi]
   14000dabf:	imul   r13,QWORD PTR fs:[rsi+0x65],0x6d640000
   14000dac8:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000dacb:	ins    DWORD PTR es:[rdi],dx
   14000dacc:	(bad)  
   14000dacd:	outs   dx,BYTE PTR ds:[rsi]
   14000dace:	fs ins BYTE PTR es:[rdi],dx
   14000dad0:	imul   ebp,DWORD PTR [rsi+0x65],0x6c697475
   14000dad7:	jae    0x14000db07
   14000dad9:	fs ins BYTE PTR es:[rdi],dx
   14000dadb:	ins    BYTE PTR es:[rdi],dx
   14000dadc:	add    BYTE PTR [rax],al
   14000dade:	adc    al,0x0
   14000dae0:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   14000dae8:	je     0x14000db30
   14000daea:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0xa0000
   14000daf2:	push   rax
   14000daf3:	(bad)  
   14000daf4:	je     0x14000db5e
   14000daf6:	rex.XB movsxd ebp,DWORD PTR [r8+0x43]
   14000dafa:	outs   dx,DWORD PTR ds:[rsi]
   14000dafb:	ins    DWORD PTR es:[rdi],dx
   14000dafc:	(bad)  
   14000dafd:	imul   ebp,DWORD PTR [rsi+0x65],0x7845
   14000db04:	or     BYTE PTR [rax],al
   14000db06:	push   rax
   14000db07:	(bad)  
   14000db08:	je     0x14000db72
   14000db0a:	rex.XB movsxd ebp,DWORD PTR [r8+0x43]
   14000db0e:	(bad)  
   14000db0f:	outs   dx,BYTE PTR ds:[rsi]
   14000db10:	outs   dx,DWORD PTR ds:[rsi]
   14000db11:	outs   dx,BYTE PTR ds:[rsi]
   14000db12:	imul   esp,DWORD PTR [rbx+0x61],0x657a696c
   14000db19:	rex.RB js 0x14000db1c
   14000db1c:	sub    al,BYTE PTR [rax]
   14000db1e:	rex.RXB
   14000db1f:	gs je  0x14000db68
   14000db22:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000db2a:	(bad)  
   14000db2b:	jne    0x14000dba1
   14000db2d:	gs jae 0x14000db87
   14000db30:	add    BYTE PTR [rax],al
   14000db32:	add    eax,0x74654700
   14000db37:	rex.WR (bad) 
   14000db39:	jae    0x14000dbaf
   14000db3b:	rex.RB jb 0x14000dbb0
   14000db3e:	outs   dx,DWORD PTR ds:[rsi]
   14000db3f:	jb     0x14000db41
   14000db41:	add    BYTE PTR [rax+rax*1],cl
   14000db44:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x736f6c43
   14000db4c:	add    BYTE PTR gs:[rax],dl
   14000db4f:	add    BYTE PTR [rdx+0x65],dl
   14000db52:	rex.RB outs dx,BYTE PTR ds:[esi]
   14000db55:	jne    0x14000dbc4
   14000db57:	push   rsi
   14000db58:	(bad)  
   14000db59:	ins    BYTE PTR es:[rdi],dx
   14000db5a:	jne    0x14000dbc1
   14000db5c:	push   rdi
   14000db5d:	add    BYTE PTR [rsi],bl
   14000db5f:	add    BYTE PTR [rdx+0x65],dl
   14000db62:	addr32 rex.WRXB jo 0x14000dbcb
   14000db66:	outs   dx,BYTE PTR ds:[rsi]
   14000db67:	rex.WXB
   14000db68:	gs jns 0x14000dbb0
   14000db6b:	js     0x14000dbc4
   14000db6d:	add    BYTE PTR [rdx],bl
   14000db6f:	add    BYTE PTR [rsi+0x69],al
   14000db72:	outs   dx,BYTE PTR ds:[rsi]
   14000db73:	fs rex.WRX
   14000db75:	gs js  0x14000dbec
   14000db78:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x50000b00
   14000db81:	(bad)  
   14000db82:	je     0x14000dbec
   14000db84:	rex.XB movsxd ebp,DWORD PTR [r8+0x46]
   14000db88:	imul   ebp,DWORD PTR [rsi+0x64],0x65747845
   14000db8f:	outs   dx,BYTE PTR ds:[rsi]
   14000db90:	jae    0x14000dbfb
   14000db92:	outs   dx,DWORD PTR ds:[rsi]
   14000db93:	outs   dx,BYTE PTR ds:[rsi]
   14000db94:	add    BYTE PTR [rax],al
   14000db96:	add    BYTE PTR [rax],al
   14000db98:	push   rdx
   14000db99:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000db9d:	outs   dx,DWORD PTR ds:[rsi]
   14000db9e:	jae    0x14000dc05
   14000dba0:	rex.WXB
   14000dba1:	gs jns 0x14000dba4
   14000dba4:	add    DWORD PTR [rax],eax
   14000dba6:	rex.RB js 0x14000dc19
   14000dba9:	(bad)  
   14000dbaa:	outs   dx,BYTE PTR ds:[rsi]
   14000dbab:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000dbae:	jbe    0x14000dc19
   14000dbb0:	jb     0x14000dc21
   14000dbb2:	outs   dx,BYTE PTR ds:[rsi]
   14000dbb3:	ins    DWORD PTR es:[rdi],dx
   14000dbb4:	outs   dx,BYTE PTR gs:[rsi]
   14000dbb6:	je     0x14000dc0b
   14000dbb8:	je     0x14000dc2c
   14000dbba:	imul   ebp,DWORD PTR [rsi+0x67],0x3005773
   14000dbc1:	add    BYTE PTR [rbx+0x72],al
   14000dbc4:	gs (bad) 
   14000dbc6:	je     0x14000dc2d
   14000dbc8:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000dbd0:	jns    0x14000dc29
   14000dbd2:	add    BYTE PTR [rax],al
   14000dbd4:	add    DWORD PTR [rax],eax
   14000dbd6:	push   rax
   14000dbd7:	(bad)  
   14000dbd8:	je     0x14000dc42
   14000dbda:	rex.B ins BYTE PTR es:[rdi],dx
   14000dbdc:	ins    BYTE PTR es:[rdi],dx
   14000dbdd:	outs   dx,DWORD PTR ds:[rsi]
   14000dbde:	movsxd eax,DWORD PTR [rbx+0x6f]
   14000dbe1:	ins    DWORD PTR es:[rdi],dx
   14000dbe2:	(bad)  
   14000dbe3:	imul   ebp,DWORD PTR [rsi+0x65],0x4b0000
   14000dbea:	push   rdx
   14000dbeb:	gs ins DWORD PTR es:[rdi],dx
   14000dbed:	outs   dx,DWORD PTR ds:[rsi]
   14000dbee:	jbe    0x14000dc55
   14000dbf0:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000dbf8:	jns    0x14000dc51
   14000dbfa:	add    BYTE PTR [rax],al
   14000dbfc:	or     DWORD PTR [rax],eax
   14000dbfe:	rex.R
   14000dbff:	gs ins BYTE PTR es:[rdi],dx
   14000dc01:	gs je  0x14000dc69
   14000dc04:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4c000300
   14000dc0d:	outs   dx,DWORD PTR ds:[rsi]
   14000dc0e:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000dc11:	rex.RX jb 0x14000dc79
   14000dc14:	add    BYTE PTR gs:[rcx+0x70],ah
   14000dc18:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4f8f
   14000dc22:	outs   dx,DWORD PTR ds:[rsi]
   14000dc23:	jb     0x14000dc8a
   14000dc25:	sub    eax,0x656c6966
   14000dc2a:	sub    eax,0x322d316c
   14000dc2f:	sub    eax,0x6c642e31
   14000dc34:	ins    BYTE PTR es:[rdi],dx
   14000dc35:	add    BYTE PTR [rcx+0x70],ah
   14000dc38:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4faf
   14000dc42:	outs   dx,DWORD PTR ds:[rsi]
   14000dc43:	jb     0x14000dcaa
   14000dc45:	sub    eax,0x68746170
   14000dc4a:	sub    eax,0x312d316c
   14000dc4f:	sub    eax,0x6c642e30
   14000dc54:	ins    BYTE PTR es:[rdi],dx
   14000dc55:	add    BYTE PTR [rcx+0x70],ah
   14000dc58:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4fcf
   14000dc62:	outs   dx,DWORD PTR ds:[rsi]
   14000dc63:	jb     0x14000dcca
   14000dc65:	sub    eax,0x69676572
   14000dc6a:	jae    0x14000dce0
   14000dc6c:	jb     0x14000dce7
   14000dc6e:	sub    eax,0x312d316c
   14000dc73:	sub    eax,0x6c642e30
   14000dc78:	ins    BYTE PTR es:[rdi],dx
   14000dc79:	add    BYTE PTR [rcx+0x70],ah
   14000dc7c:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e4ff3
   14000dc86:	outs   dx,DWORD PTR ds:[rsi]
   14000dc87:	jb     0x14000dcee
   14000dc89:	sub    eax,0x636f7270
   14000dc8e:	gs jae 0x14000dd04
   14000dc91:	outs   dx,BYTE PTR gs:[rsi]
   14000dc93:	jbe    0x14000dcfe
   14000dc95:	jb     0x14000dd06
   14000dc97:	outs   dx,BYTE PTR ds:[rsi]
   14000dc98:	ins    DWORD PTR es:[rdi],dx
   14000dc99:	outs   dx,BYTE PTR gs:[rsi]
   14000dc9b:	je     0x14000dcca
   14000dc9d:	ins    BYTE PTR es:[rdi],dx
   14000dc9e:	xor    DWORD PTR [rip+0x2e302d32],ebp        # 0x16e3109d6
   14000dca4:	fs ins BYTE PTR es:[rdi],dx
   14000dca6:	ins    BYTE PTR es:[rdi],dx
   14000dca7:	add    BYTE PTR [rcx+0x70],ah
   14000dcaa:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e5021
   14000dcb4:	outs   dx,DWORD PTR ds:[rsi]
   14000dcb5:	jb     0x14000dd1c
   14000dcb7:	sub    eax,0x70616568
   14000dcbc:	sub    eax,0x312d326c
   14000dcc1:	sub    eax,0x6c642e30
   14000dcc6:	ins    BYTE PTR es:[rdi],dx
   14000dcc7:	add    BYTE PTR [rdx+0x63775f03],cl
   14000dccd:	jae    0x14000dd38
   14000dccf:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000dcd2:	add    BYTE PTR [rax],al
   14000dcd4:	add    DWORD PTR [rax],eax
   14000dcd6:	push   rdx
   14000dcd7:	gs jae 0x14000dd49
   14000dcda:	ins    BYTE PTR es:[rdi],dx
   14000dcdb:	jbe    0x14000dd42
   14000dcdd:	rex.R
   14000dcde:	gs ins BYTE PTR es:[rdi],dx
   14000dce0:	(bad)  
   14000dce1:	jns    0x14000dd2f
   14000dce3:	outs   dx,DWORD PTR ds:[rsi]
   14000dce4:	(bad)  
   14000dce5:	fs gs fs push r8
   14000dcea:	rex.WB add BYTE PTR [r8],al
   14000dced:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14000dcf1:	(bad)  
   14000dcf2:	jns    0x14000dd40
   14000dcf4:	outs   dx,DWORD PTR ds:[rsi]
   14000dcf5:	(bad)  
   14000dcf6:	fs rex.RX (bad) 
   14000dcf9:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f6f4865
   14000dd01:	imul   eax,DWORD PTR [rax],0x0
   14000dd04:	(bad)  
   14000dd05:	jo     0x14000dd70
   14000dd07:	sub    eax,0x772d736d
   14000dd0c:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   14000dd13:	sub    eax,0x616c6564
   14000dd18:	jns    0x14000dd86
   14000dd1a:	outs   dx,DWORD PTR ds:[rsi]
   14000dd1b:	(bad)  
   14000dd1c:	fs sub eax,0x312d316c
   14000dd22:	sub    eax,0x6c642e31
   14000dd27:	ins    BYTE PTR es:[rdi],dx
   14000dd28:	add    BYTE PTR [rax],al
   14000dd2a:	sbb    BYTE PTR [rax],al
   14000dd2c:	push   rax
   14000dd2d:	(bad)  
   14000dd2e:	je     0x14000dd98
   14000dd30:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x656c6946
   14000dd38:	rex.WRX (bad) 
   14000dd3a:	ins    DWORD PTR es:[rdi],dx
   14000dd3b:	gs push rdi
   14000dd3d:	add    BYTE PTR [rcx+0x70],ah
   14000dd40:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72e50b7
   14000dd4a:	outs   dx,DWORD PTR ds:[rsi]
   14000dd4b:	jb     0x14000ddb2
   14000dd4d:	sub    eax,0x776c6873
   14000dd52:	(bad)  
   14000dd53:	jo     0x14000ddbe
   14000dd55:	sub    eax,0x6167656c
   14000dd5a:	movsxd edi,DWORD PTR [rcx+0x2d]
   14000dd5d:	ins    BYTE PTR es:[rdi],dx
   14000dd5e:	xor    DWORD PTR [rip+0x2e302d31],ebp        # 0x16e310a95
   14000dd64:	fs ins BYTE PTR es:[rdi],dx
   14000dd66:	ins    BYTE PTR es:[rdi],dx
   14000dd67:	add    BYTE PTR [rbx+0x0],cl
   14000dd6a:	pop    rdi
   14000dd6b:	rex.XB js 0x14000dde6
   14000dd6e:	push   rsp
   14000dd6f:	push   0x45776f72
   14000dd74:	js     0x14000ddd9
   14000dd76:	gs jo  0x14000dded
   14000dd79:	imul   ebp,DWORD PTR [rdi+0x6e],0x5b0000
   14000dd80:	pop    rdi
   14000dd81:	pop    rdi
   14000dd82:	rex.XB js 0x14000ddfd
   14000dd85:	rex.RX jb 0x14000dde9
   14000dd88:	ins    DWORD PTR es:[rdi],dx
   14000dd89:	gs rex.W (bad) 
   14000dd8c:	outs   dx,BYTE PTR ds:[rsi]
   14000dd8d:	fs ins BYTE PTR es:[rdi],dx
   14000dd8f:	gs jb  0x14000ddc5
   14000dd92:	add    BYTE PTR [rax],al
   14000dd94:	xchg   edx,eax
   14000dd95:	add    al,0x6d
   14000dd97:	gs ins DWORD PTR es:[rdi],dx
   14000dd99:	movsxd esi,DWORD PTR [rax+0x79]
   14000dd9c:	add    BYTE PTR [rax],al
   14000dd9e:	xchg   esi,eax
   14000dd9f:	add    al,0x6d
   14000dda1:	gs ins DWORD PTR es:[rdi],dx
   14000dda3:	jae    0x14000de0a
   14000dda5:	je     0x14000dda7
	...

Disassembly of section .data:

000000014000e000 <.data>:
   14000e000:	add    DWORD PTR [rax],eax
   14000e002:	add    BYTE PTR [rax],al
   14000e004:	add    BYTE PTR [rax],al
   14000e006:	add    BYTE PTR [rax],al
   14000e008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000e00e:	add    BYTE PTR [rax],al
   14000e010:	int    0x5d
   14000e012:	and    dl,dl
   14000e014:	data16 (bad) 
   14000e016:	(bad)  
   14000e017:	inc    DWORD PTR [rax]
   14000e019:	add    BYTE PTR [rax],al
   14000e01b:	add    BYTE PTR [rax],al
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	add    BYTE PTR [rcx],al
   14000e021:	add    BYTE PTR [rax],al
   14000e023:	add    BYTE PTR [rcx],al
	...
   14000e035:	add    BYTE PTR [rax],al
   14000e037:	add    BYTE PTR [rsi-0x48],bl
   14000e03a:	add    BYTE PTR [rax+0x1],al
	...
   14000e065:	add    BYTE PTR [rax],al
   14000e067:	add    BYTE PTR [rax+0x47],dh
   14000e06a:	add    BYTE PTR [rax+0x1],al
   14000e06d:	add    BYTE PTR [rax],al
   14000e06f:	add    BYTE PTR [rax-0x57],bl
   14000e072:	add    BYTE PTR [rax+0x1],al
   14000e075:	add    BYTE PTR [rax],al
   14000e077:	add    BYTE PTR [rax+0x14000a9],cl
   14000e07d:	add    BYTE PTR [rax],al
   14000e07f:	add    BYTE PTR [rcx],al
   14000e081:	add    BYTE PTR [rax],al
   14000e083:	add    BYTE PTR [rax],al
   14000e085:	add    BYTE PTR [rax],al
   14000e087:	add    BYTE PTR [rax+0x14000a8],bl
   14000e08d:	add    BYTE PTR [rax],al
   14000e08f:	add    al,dl
   14000e091:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e092:	add    BYTE PTR [rax+0x1],al
	...
   14000e09d:	add    BYTE PTR [rax],al
   14000e09f:	add    BYTE PTR [rsi],ch
   14000e0a1:	(bad)  
   14000e0a2:	push   r14
   14000e0a4:	push   rdx
   14000e0a5:	gs jae 0x14000e11d
   14000e0a8:	ins    BYTE PTR es:[rdi],dx
   14000e0a9:	je     0x14000e0f0
   14000e0ab:	js     0x14000e110
   14000e0ad:	gs jo  0x14000e124
   14000e0b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c697740
   14000e0b7:	rex
   14000e0b8:	add    BYTE PTR [rax],al
   14000e0bb:	add    BYTE PTR [rax],al
   14000e0bd:	add    BYTE PTR [rax],al
   14000e0bf:	add    al,dl
   14000e0c1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000e0c2:	add    BYTE PTR [rax+0x1],al
	...
   14000e0cd:	add    BYTE PTR [rax],al
   14000e0cf:	add    BYTE PTR [rsi],ch
   14000e0d1:	(bad)  
   14000e0d2:	push   r14
   14000e0d4:	(bad)
   14000e0d9:	ins    BYTE PTR es:[rdi],dx
   14000e0da:	ins    BYTE PTR es:[rdi],dx
   14000e0db:	outs   dx,DWORD PTR ds:[rsi]
   14000e0dc:	movsxd eax,DWORD PTR [rax+0x73]
   14000e0df:	je     0x14000e145
   14000e0e1:	rex
   14000e0e2:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

000000014000f000 <.pdata>:
   14000f000:	or     BYTE PTR [rax],dl
   14000f002:	add    BYTE PTR [rax],al
   14000f004:	test   al,0x10
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	sar    BYTE PTR [rbp+0x10b00000],1
   14000f00e:	add    BYTE PTR [rax],al
   14000f010:	jae    0x14000f023
   14000f012:	add    BYTE PTR [rax],al
   14000f014:	lods   al,BYTE PTR ds:[rsi]
   14000f015:	(bad)
   14000f018:	mov    al,0x11
   14000f01a:	add    BYTE PTR [rax],al
   14000f01c:	fcom   DWORD PTR [rcx]
   14000f01e:	add    BYTE PTR [rax],al
   14000f020:	test   BYTE PTR [rax+rax*1+0x123000],bh
   14000f027:	add    BYTE PTR [rdi+0x12],dl
   14000f02a:	add    BYTE PTR [rax],al
   14000f02c:	add    BYTE PTR [rax+rax*1+0x128000],bh
   14000f033:	add    dl,ch
   14000f035:	adc    al,BYTE PTR [rax]
   14000f037:	add    BYTE PTR [rax],cl
   14000f039:	mov    esp,0x13200000
   14000f03e:	add    BYTE PTR [rax],al
   14000f040:	push   rsi
   14000f041:	adc    eax,DWORD PTR [rax]
   14000f043:	add    BYTE PTR [rsp+rdi*4],bl
   14000f046:	add    BYTE PTR [rax],al
   14000f048:	jo     0x14000f05d
   14000f04a:	add    BYTE PTR [rax],al
   14000f04c:	movabs ds:0xc00000bc1c000013,eax
   14000f055:	adc    eax,DWORD PTR [rax]
   14000f057:	add    dh,dh
   14000f059:	adc    eax,DWORD PTR [rax]
   14000f05b:	add    BYTE PTR [rsp+rdi*4],bl
   14000f05e:	add    BYTE PTR [rax],al
   14000f060:	add    BYTE PTR [rax+rax*1],dl
   14000f063:	add    BYTE PTR [rax+0x14],al
   14000f066:	add    BYTE PTR [rax],al
   14000f068:	and    al,0xbc
   14000f06a:	add    BYTE PTR [rax],al
   14000f06c:	rex.W adc al,0x0
   14000f06f:	add    dh,al
   14000f071:	adc    al,0x0
   14000f073:	add    BYTE PTR [rax],dh
   14000f075:	mov    esp,0x14cc0000
   14000f07a:	add    BYTE PTR [rax],al
   14000f07c:	cli    
   14000f07d:	(bad)  
   14000f07e:	add    BYTE PTR [rax],al
   14000f080:	cmp    al,0xbc
   14000f082:	add    BYTE PTR [rax],al
   14000f084:	nop
   14000f085:	(bad)  
   14000f086:	add    BYTE PTR [rax],al
   14000f088:	cwde   
   14000f089:	sbb    BYTE PTR [rax],al
   14000f08b:	add    BYTE PTR [rsp+rdi*4+0x0],bl
   14000f08f:	add    BYTE PTR [rax-0x1effffe8],ah
   14000f095:	sbb    BYTE PTR [rax],al
   14000f097:	add    BYTE PTR [rax],al
   14000f099:	mov    esp,0x18f00000
   14000f09e:	add    BYTE PTR [rax],al
   14000f0a0:	ja     0x14000f0bb
   14000f0a2:	add    BYTE PTR [rax],al
   14000f0a4:	je     0x14000f062
   14000f0a6:	add    BYTE PTR [rax],al
   14000f0a8:	sbb    BYTE PTR [rcx],0x0
   14000f0ab:	add    BYTE PTR [rbx+0x1a],ch
   14000f0ae:	add    BYTE PTR [rax],al
   14000f0b0:	mov    WORD PTR [rax+rax*1+0x1a7400],?
   14000f0b7:	add    BYTE PTR [rbx],ch
   14000f0b9:	(bad)  
   14000f0ba:	add    BYTE PTR [rax],al
   14000f0bc:	movabs al,ds:0x5b00001e340000bc
   14000f0c5:	(bad)  
   14000f0c6:	add    BYTE PTR [rax],al
   14000f0c8:	add    BYTE PTR [rax+rax*1+0x1e6400],bh
   14000f0cf:	add    BYTE PTR [rbp-0x43ffffe2],ch
   14000f0d5:	mov    esp,0x1eb40000
   14000f0da:	add    BYTE PTR [rax],al
   14000f0dc:	or     BYTE PTR [rdx],ah
   14000f0de:	add    BYTE PTR [rax],al
   14000f0e0:	xchg   esp,eax
   14000f0e1:	mov    ebp,0x22100000
   14000f0e6:	add    BYTE PTR [rax],al
   14000f0e8:	and    al,0x23
   14000f0ea:	add    BYTE PTR [rax],al
   14000f0ec:	lods   al,BYTE PTR ds:[rsi]
   14000f0ed:	mov    ebp,0x232c0000
   14000f0f2:	add    BYTE PTR [rax],al
   14000f0f4:	jo     0x14000f119
   14000f0f6:	add    BYTE PTR [rax],al
   14000f0f8:	add    BYTE PTR [rax+rax*1+0x240800],bh
   14000f0ff:	add    BYTE PTR [rsi+0x24],al
   14000f102:	add    BYTE PTR [rax],al
   14000f104:	sar    BYTE PTR [rbp+0x244c0000],0x0
   14000f10b:	add    BYTE PTR [rcx-0x37ffffdc],al
   14000f111:	mov    ebp,0x24880000
   14000f116:	add    BYTE PTR [rax],al
   14000f118:	mov    dh,0x24
   14000f11a:	add    BYTE PTR [rax],al
   14000f11c:	enter  0xbd,0x0
   14000f120:	mov    esp,0xf6000024
   14000f125:	and    al,0x0
   14000f127:	add    al,cl
   14000f129:	mov    ebp,0x24fc0000
   14000f12e:	add    BYTE PTR [rax],al
   14000f130:	sub    eax,0xc8000025
   14000f135:	mov    ebp,0x25340000
   14000f13a:	add    BYTE PTR [rax],al
   14000f13c:	pop    rdi
   14000f13d:	and    eax,0xbdc80000
   14000f142:	add    BYTE PTR [rax],al
   14000f144:	jo     0x14000f16b
   14000f146:	add    BYTE PTR [rax],al
   14000f148:	rex.WRX
   14000f149:	add    BYTE PTR es:[rax],al
   14000f14c:	fdivr  DWORD PTR [rbp+0x26540000]
   14000f152:	add    BYTE PTR [rax],al
   14000f154:	mov    ebx,0x88000028
   14000f159:	mov    esi,0x28c40000
   14000f15e:	add    BYTE PTR [rax],al
   14000f160:	xchg   edi,eax
   14000f161:	sub    eax,0xbed80000
   14000f166:	add    BYTE PTR [rax],al
   14000f168:	movabs al,ds:0x2de900002d
   14000f171:	mov    esp,0x2df00000
   14000f176:	add    BYTE PTR [rax],al
   14000f178:	jrcxz  0x14000f1a9
   14000f17a:	add    BYTE PTR [rax],al
   14000f17c:	loopne 0x14000f13d
   14000f17e:	add    BYTE PTR [rax],al
   14000f180:	in     al,dx
   14000f181:	(bad)  
   14000f182:	add    BYTE PTR [rax],al
   14000f184:	(bad)  
   14000f185:	add    BYTE PTR ss:[rax],al
   14000f188:	rol    al,1
   14000f18a:	add    BYTE PTR [rax],al
   14000f18c:	xor    BYTE PTR [rsi],dh
   14000f18e:	add    BYTE PTR [rax],al
   14000f190:	leave  
   14000f191:	add    BYTE PTR ss:[rax],al
   14000f194:	cwde   
   14000f195:	rol    DWORD PTR [rax],0x0
   14000f198:	shl    BYTE PTR [rsi],1
   14000f19a:	add    BYTE PTR [rax],al
   14000f19c:	add    BYTE PTR [rdi],dh
   14000f19e:	add    BYTE PTR [rax],al
   14000f1a0:	add    BYTE PTR [rax+rax*1+0x370800],bh
   14000f1a7:	add    BYTE PTR [rbx-0x73ffffc9],al
   14000f1ad:	mov    esp,0x378c0000
   14000f1b2:	add    BYTE PTR [rax],al
   14000f1b4:	sahf   
   14000f1b5:	cmp    BYTE PTR [rax],al
   14000f1b7:	add    BYTE PTR [rsp+rdi*4+0x0],dh
   14000f1bb:	add    BYTE PTR [rax+rdi*1+0x39210000],ah
   14000f1c2:	add    BYTE PTR [rax],al
   14000f1c4:	je     0x14000f182
   14000f1c6:	add    BYTE PTR [rax],al
   14000f1c8:	sub    BYTE PTR [rcx],bh
   14000f1ca:	add    BYTE PTR [rax],al
   14000f1cc:	pop    rax
   14000f1cd:	cmp    DWORD PTR [rax],eax
   14000f1cf:	add    BYTE PTR [rax],al
   14000f1d1:	mov    esp,0x39600000
   14000f1d6:	add    BYTE PTR [rax],al
   14000f1d8:	mov    edi,DWORD PTR [rcx]
   14000f1da:	add    BYTE PTR [rax],al
   14000f1dc:	add    BYTE PTR [rax+rax*1+0x399400],bh
   14000f1e3:	add    BYTE PTR [rdi],al
   14000f1e5:	cmp    al,BYTE PTR [rax]
   14000f1e7:	add    BYTE PTR [rsp+rdi*4+0x3a100000],cl
   14000f1ee:	add    BYTE PTR [rax],al
   14000f1f0:	sub    BYTE PTR [rdx],bh
   14000f1f2:	add    BYTE PTR [rax],al
   14000f1f4:	test   BYTE PTR [rax+rax*1+0x3a3000],bh
   14000f1fb:	add    BYTE PTR [rcx+0x3a],cl
   14000f1fe:	add    BYTE PTR [rax],al
   14000f200:	test   BYTE PTR [rax+rax*1+0x3a5000],bh
   14000f207:	add    BYTE PTR [rsi+0x2400003a],al
   14000f20d:	mov    esp,0x3a8c0000
   14000f212:	add    BYTE PTR [rax],al
   14000f214:	mov    ecx,0x8400003a
   14000f219:	mov    esp,0x3ac00000
   14000f21e:	add    BYTE PTR [rax],al
   14000f220:	sbb    DWORD PTR [rbx],edi
   14000f222:	add    BYTE PTR [rax],al
   14000f224:	je     0x14000f1e2
   14000f226:	add    BYTE PTR [rax],al
   14000f228:	and    BYTE PTR [rbx],bh
   14000f22a:	add    BYTE PTR [rax],al
   14000f22c:	rex.RX cmp al,0x0
   14000f22f:	add    BYTE PTR [rsp+rdi*4+0x3c4c0000],cl
   14000f236:	add    BYTE PTR [rax],al
   14000f238:	mov    ah,0x3c
   14000f23a:	add    BYTE PTR [rax],al
   14000f23c:	mov    WORD PTR [rax+rax*1+0x3ccc00],?
   14000f243:	add    BYTE PTR [rdx-0x57ffffc3],al
   14000f249:	rol    DWORD PTR [rax],0x0
   14000f24c:	mov    BYTE PTR [rip+0x3d9a0000],bh        # 0x17d9af252
   14000f252:	add    BYTE PTR [rax],al
   14000f254:	test   BYTE PTR [rax+rax*1+0x3da000],bh
   14000f25b:	add    ch,dh
   14000f25d:	add    BYTE PTR ds:[rax],al
   14000f260:	sub    dl,al
   14000f262:	add    BYTE PTR [rax],al
   14000f264:	cld    
   14000f265:	add    BYTE PTR ds:[rax],al
   14000f268:	(bad)  
   14000f269:	(bad)  
   14000f26a:	add    BYTE PTR [rax],al
   14000f26c:	test   BYTE PTR [rax+rax*1+0x3f1400],bh
   14000f273:	add    BYTE PTR [rsi],ah
   14000f275:	(bad)  
   14000f276:	add    BYTE PTR [rax],al
   14000f278:	test   BYTE PTR [rax+rax*1+0x3f2c00],bh
   14000f27f:	add    BYTE PTR [rsi+0x40],dl
   14000f282:	add    BYTE PTR [rax],al
   14000f284:	cmp    al,0xc2
   14000f286:	add    BYTE PTR [rax],al
   14000f288:	pop    rsp
   14000f289:	add    BYTE PTR [rax],al
   14000f28c:	adc    al,0x41
   14000f28e:	add    BYTE PTR [rax],al
   14000f290:	push   rsp
   14000f291:	ret    0x0
   14000f294:	sbb    al,0x41
   14000f296:	add    BYTE PTR [rax],al
   14000f298:	and    BYTE PTR [rdx+0x0],al
   14000f29b:	add    al,dl
   14000f29d:	ret    0x0
   14000f2a0:	sub    BYTE PTR [rdx+0x0],al
   14000f2a3:	add    dl,dl
   14000f2a5:	rex.X add BYTE PTR [rax],al
   14000f2a8:	je     0x14000f266
   14000f2aa:	add    BYTE PTR [rax],al
   14000f2ac:	fadd   DWORD PTR [rdx+0x0]
   14000f2af:	add    dl,dh
   14000f2b1:	rex.XB add BYTE PTR [r8],al
   14000f2b4:	mov    al,0xc3
   14000f2b6:	add    BYTE PTR [rax],al
   14000f2b8:	add    al,0x44
   14000f2ba:	add    BYTE PTR [rax],al
   14000f2bc:	mov    bl,0x44
   14000f2be:	add    BYTE PTR [rax],al
   14000f2c0:	jo     0x14000f286
   14000f2c2:	add    BYTE PTR [rax],al
   14000f2c4:	mov    esp,0x51000044
   14000f2c9:	add    BYTE PTR [r8],r8b
   14000f2cc:	mov    ah,al
   14000f2ce:	add    BYTE PTR [rax],al
   14000f2d0:	xchg   esp,eax
   14000f2d1:	add    BYTE PTR [r8],r8b
   14000f2d4:	inc    DWORD PTR [rbp+0x0]
   14000f2d7:	add    BYTE PTR [rsp+rax*8+0x46080000],bl
   14000f2de:	add    BYTE PTR [rax],al
   14000f2e0:	test   BYTE PTR [rsi+0x0],0x0
   14000f2e4:	lods   al,BYTE PTR ds:[rsi]
   14000f2e5:	(bad)  
   14000f2e6:	add    BYTE PTR [rax],al
   14000f2e8:	cld    
   14000f2e9:	rex.RX add BYTE PTR [rax],r8b
   14000f2ec:	rex.RXB add BYTE PTR fs:[r8],r8b
   14000f2f0:	xor    ch,al
   14000f2f2:	add    BYTE PTR [rax],al
   14000f2f4:	jl     0x14000f33d
   14000f2f6:	add    BYTE PTR [rax],al
   14000f2f8:	rex
   14000f2f9:	rex.W add BYTE PTR [rax],al
   14000f2fc:	enter  0xc5,0x0
   14000f300:	rex.W
   14000f301:	rex.W add BYTE PTR [rax],al
   14000f304:	movabs ds:0xac0000c5d8000048,eax
   14000f30d:	rex.W add BYTE PTR [rax],al
   14000f310:	(bad)  
   14000f311:	rex.WB add BYTE PTR [r8],al
   14000f314:	loopne 0x14000f2db
   14000f316:	add    BYTE PTR [rax],al
   14000f318:	push   0xffffffff80000049
   14000f31d:	rex.WB add BYTE PTR [r8],al
   14000f320:	enter  0xbd,0x0
   14000f324:	mov    BYTE PTR [rcx+0x0],cl
   14000f327:	add    BYTE PTR [rcx+rcx*2-0x42380000],ch
   14000f32e:	add    BYTE PTR [rax],al
   14000f330:	mov    ah,0x49
   14000f332:	add    BYTE PTR [rax],al
   14000f334:	fisttp QWORD PTR [rcx+0x0]
   14000f337:	add    al,cl
   14000f339:	mov    ebp,0x49e40000
   14000f33e:	add    BYTE PTR [rax],al
   14000f340:	sbb    eax,0xc800004a
   14000f345:	mov    ebp,0x4a240000
   14000f34a:	add    BYTE PTR [rax],al
   14000f34c:	sahf   
   14000f34d:	rex.WX add BYTE PTR [rax],al
   14000f350:	clc    
   14000f351:	(bad)
   14000f354:	mov    al,0x4a
   14000f356:	add    BYTE PTR [rax],al
   14000f358:	loopne 0x14000f3a4
   14000f35a:	add    BYTE PTR [rax],al
   14000f35c:	and    al,0xbc
   14000f35e:	add    BYTE PTR [rax],al
   14000f360:	call   0xfc00f3af
   14000f365:	rex.WXB add BYTE PTR [r8],al
   14000f368:	or     dh,al
   14000f36a:	add    BYTE PTR [rax],al
   14000f36c:	(bad)  
   14000f36d:	rex.WXB add BYTE PTR [r8],al
   14000f370:	or     BYTE PTR [rdi+0x0],cl
   14000f373:	add    BYTE PTR [rsi+rax*8],ah
   14000f376:	add    BYTE PTR [rax],al
   14000f378:	adc    BYTE PTR [rdi+0x0],cl
   14000f37b:	add    BYTE PTR [rcx+0x51],ch
   14000f37e:	add    BYTE PTR [rax],al
   14000f380:	mov    dh,al
   14000f382:	add    BYTE PTR [rax],al
   14000f384:	jo     0x14000f3d7
   14000f386:	add    BYTE PTR [rax],al
   14000f388:	xchg   DWORD PTR [rcx+0x0],edx
   14000f38b:	add    BYTE PTR [rsp+rdi*4+0x51900000],al
   14000f392:	add    BYTE PTR [rax],al
   14000f394:	ins    BYTE PTR es:[rdi],dx
   14000f395:	pop    rbx
   14000f396:	add    BYTE PTR [rax],al
   14000f398:	sub    bh,al
   14000f39a:	add    BYTE PTR [rax],al
   14000f39c:	je     0x14000f3f9
   14000f39e:	add    BYTE PTR [rax],al
   14000f3a0:	nop
   14000f3a1:	pop    rbx
   14000f3a2:	add    BYTE PTR [rax],al
   14000f3a4:	test   BYTE PTR [rax+rax*1+0x5ba800],bh
   14000f3ab:	add    BYTE PTR [rbp+0x5c],al
   14000f3ae:	add    BYTE PTR [rax],al
   14000f3b0:	and    al,0xbc
   14000f3b2:	add    BYTE PTR [rax],al
   14000f3b4:	rex.WR pop rsp
   14000f3b6:	add    BYTE PTR [rax],al
   14000f3b8:	sub    eax,0x7800005d
   14000f3bd:	enter  0x0,0x34
   14000f3c1:	pop    rbp
   14000f3c2:	add    BYTE PTR [rax],al
   14000f3c4:	pushf  
   14000f3c5:	pop    rbp
   14000f3c6:	add    BYTE PTR [rax],al
   14000f3c8:	clc    
   14000f3c9:	enter  0x0,0xa4
   14000f3cd:	pop    rbp
   14000f3ce:	add    BYTE PTR [rax],al
   14000f3d0:	push   rbx
   14000f3d1:	pop    rsi
   14000f3d2:	add    BYTE PTR [rax],al
   14000f3d4:	ins    BYTE PTR es:[rdi],dx
   14000f3d5:	leave  
   14000f3d6:	add    BYTE PTR [rax],al
   14000f3d8:	pop    rsp
   14000f3d9:	pop    rsi
   14000f3da:	add    BYTE PTR [rax],al
   14000f3dc:	lea    ebx,[rsi+0x0]
   14000f3df:	add    al,cl
   14000f3e1:	mov    ebp,0x5e940000
   14000f3e6:	add    BYTE PTR [rax],al
   14000f3e8:	lods   al,BYTE PTR ds:[rsi]
   14000f3e9:	pop    rsi
   14000f3ea:	add    BYTE PTR [rax],al
   14000f3ec:	enter  0xbd,0x0
   14000f3f0:	mov    ah,0x5e
   14000f3f2:	add    BYTE PTR [rax],al
   14000f3f4:	shl    BYTE PTR [rax+0x0],cl
   14000f3f7:	add    BYTE PTR [rax-0x27ffff37],al
   14000f3fd:	(bad)  
   14000f3fe:	add    BYTE PTR [rax],al
   14000f400:	outs   dx,BYTE PTR ds:[rsi]
   14000f401:	(bad)  
   14000f402:	add    BYTE PTR [rax],al
   14000f404:	movabs al,ds:0x2b000062740000c9
   14000f40d:	add    BYTE PTR fs:[rax],al
   14000f410:	or     dh,al
   14000f412:	add    BYTE PTR [rax],al
   14000f414:	rex
   14000f415:	add    BYTE PTR fs:[rax],al
   14000f418:	mov    esi,0x70000067
   14000f41d:	retf   0x0
   14000f420:	shl    BYTE PTR [rdi+0x0],1
   14000f423:	add    BYTE PTR [rsi+0x6e],al
   14000f426:	add    BYTE PTR [rax],al
   14000f428:	xchg   esp,eax
   14000f429:	retf   0x0
   14000f42c:	push   rax
   14000f42d:	outs   dx,BYTE PTR ds:[rsi]
   14000f42e:	add    BYTE PTR [rax],al
   14000f430:	fs jno 0x14000f433
   14000f433:	add    BYTE PTR [rax-0x35],al
   14000f436:	add    BYTE PTR [rax],al
   14000f438:	jo     0x14000f4ab
   14000f43a:	add    BYTE PTR [rax],al
   14000f43c:	mov    eax,0x72
   14000f441:	int3   
   14000f442:	add    BYTE PTR [rax],al
   14000f444:	shl    BYTE PTR [rdx+0x0],0x0
   14000f448:	stos   DWORD PTR es:[rdi],eax
   14000f449:	jae    0x14000f44b
   14000f44b:	add    BYTE PTR [rax-0x34],cl
   14000f44e:	add    BYTE PTR [rax],al
   14000f450:	shl    BYTE PTR [rbx+0x0],0x0
   14000f454:	stos   DWORD PTR es:[rdi],eax
   14000f455:	je     0x14000f457
   14000f457:	add    BYTE PTR [rax-0x34],cl
   14000f45a:	add    BYTE PTR [rax],al
   14000f45c:	mov    ah,0x74
   14000f45e:	add    BYTE PTR [rax],al
   14000f460:	icebp  
   14000f461:	je     0x14000f463
   14000f463:	add    BYTE PTR [rsp+rdi*4],bl
   14000f466:	add    BYTE PTR [rax],al
   14000f468:	add    BYTE PTR [rbp+0x0],dh
   14000f46b:	add    BYTE PTR [rdx+0x75],bh
   14000f46e:	add    BYTE PTR [rax],al
   14000f470:	fs int3 
   14000f472:	add    BYTE PTR [rax],al
   14000f474:	xor    BYTE PTR [rbp+0x0],0x0
   14000f478:	(bad)  
   14000f479:	ja     0x14000f47b
   14000f47b:	add    BYTE PTR [rax-0x34],dh
   14000f47e:	add    BYTE PTR [rax],al
   14000f480:	(bad)  
   14000f481:	ja     0x14000f483
   14000f483:	add    BYTE PTR [rax+rdi*2+0x0],ch
   14000f487:	add    BYTE PTR [rsp+rdi*4+0x0],dh
   14000f48b:	add    BYTE PTR [rax+rdi*2+0x0],dh
   14000f48f:	add    BYTE PTR [rsi+0x24000078],ah
   14000f495:	mov    esp,0x78ac0000
   14000f49a:	add    BYTE PTR [rax],al
   14000f49c:	and    DWORD PTR [rcx+0x0],edi
   14000f49f:	add    BYTE PTR [rsp+rdi*4+0x0],dh
   14000f4a3:	add    BYTE PTR [rax],ch
   14000f4a5:	jns    0x14000f4a7
   14000f4a7:	add    BYTE PTR [rdx+0x79],bl
   14000f4aa:	add    BYTE PTR [rax],al
   14000f4ac:	and    al,0xbc
   14000f4ae:	add    BYTE PTR [rax],al
   14000f4b0:	(bad)  
   14000f4b1:	jns    0x14000f4b3
   14000f4b3:	add    BYTE PTR [rdx+0x24000079],dl
   14000f4b9:	mov    esp,0x79980000
   14000f4be:	add    BYTE PTR [rax],al
   14000f4c0:	out    0x79,eax
   14000f4c2:	add    BYTE PTR [rax],al
   14000f4c4:	je     0x14000f482
   14000f4c6:	add    BYTE PTR [rax],al
   14000f4c8:	lock jns 0x14000f4cb
   14000f4cb:	add    BYTE PTR [rbx+0x7a],al
   14000f4ce:	add    BYTE PTR [rax],al
   14000f4d0:	ror    ah,1
   14000f4d2:	add    BYTE PTR [rax],al
   14000f4d4:	push   rax
   14000f4d5:	jp     0x14000f4d7
   14000f4d7:	add    BYTE PTR [rsi+0x4000007a],al
   14000f4dd:	int    0x0
   14000f4df:	add    BYTE PTR [rdx+rdi*2+0x7abd0000],cl
   14000f4e6:	add    BYTE PTR [rax],al
   14000f4e8:	add    BYTE PTR [rax+rax*1+0x7ad000],bh
   14000f4ef:	add    BYTE PTR [rdi-0x7bffff85],bl
   14000f4f5:	mov    esp,0x7bb00000
   14000f4fa:	add    BYTE PTR [rax],al
   14000f4fc:	stc    
   14000f4fd:	jnp    0x14000f4ff
   14000f4ff:	add    BYTE PTR [rax-0x33],al
   14000f502:	add    BYTE PTR [rax],al
   14000f504:	add    BYTE PTR [rax+rax*1+0x0],bh
   14000f508:	jno    0x14000f588
   14000f50a:	add    BYTE PTR [rax],al
   14000f50c:	rex.W int 0x0
   14000f50f:	add    BYTE PTR [rax-0x6dffff82],al
   14000f515:	jle    0x14000f517
   14000f517:	add    BYTE PTR [rsp+rdi*4+0x7eb00000],al
   14000f51e:	add    BYTE PTR [rax],al
   14000f520:	(bad)  
   14000f521:	jle    0x14000f523
   14000f523:	add    BYTE PTR [rax-0x1fffff33],al
   14000f529:	jle    0x14000f52b
   14000f52b:	add    BYTE PTR [rsi+0x7f],bh
   14000f52e:	add    BYTE PTR [rax],al
   14000f530:	test   ch,cl
   14000f532:	add    BYTE PTR [rax],al
   14000f534:	test   BYTE PTR [rdi+0x0],bh
   14000f537:	add    BYTE PTR [rbx-0x7bffff81],bl
   14000f53d:	mov    esp,0x7fc80000
   14000f542:	add    BYTE PTR [rax],al
   14000f544:	cld    
   14000f545:	jg     0x14000f547
   14000f547:	add    BYTE PTR [rax],al
   14000f549:	mov    esp,0x80100000
   14000f54e:	add    BYTE PTR [rax],al
   14000f550:	add    DWORD PTR [rcx-0x32580000],0x81900000
   14000f55a:	add    BYTE PTR [rax],al
   14000f55c:	rol    BYTE PTR [rcx-0x43dc0000],0x0
   14000f563:	add    al,ah
   14000f565:	add    DWORD PTR [rax],0x821900
   14000f56b:	add    BYTE PTR [rsp+rdi*4-0x7de00000],al
   14000f572:	add    BYTE PTR [rax],al
   14000f574:	cmp    BYTE PTR [rdx-0x437c0000],al
   14000f57a:	add    BYTE PTR [rax],al
   14000f57c:	rex.WR (bad) 
   14000f57e:	add    BYTE PTR [rax],al
   14000f580:	movabs al,ds:0xa80000cdb0000082
   14000f589:	(bad)  
   14000f58a:	add    BYTE PTR [rax],al
   14000f58c:	in     eax,dx
   14000f58d:	(bad)  
   14000f58e:	add    BYTE PTR [rax],al
   14000f590:	add    BYTE PTR [rax+rax*1+0x835000],bh
   14000f597:	add    BYTE PTR [rbp-0x2fffff7d],bl
   14000f59d:	int    0x0
   14000f59f:	add    ah,ah
   14000f5a1:	add    DWORD PTR [rax],0x0
   14000f5a4:	mov    ah,0x84
   14000f5a6:	add    BYTE PTR [rax],al
   14000f5a8:	hlt    
   14000f5a9:	int    0x0
   14000f5ab:	add    BYTE PTR [rax],dh
   14000f5ad:	test   DWORD PTR [rax],eax
   14000f5af:	add    BYTE PTR [rdi+0x4000085],ah
   14000f5b5:	(bad)  
   14000f5b6:	add    BYTE PTR [rax],al
   14000f5b8:	in     al,0x85
   14000f5ba:	add    BYTE PTR [rax],al
   14000f5bc:	add    DWORD PTR [rsi-0x437c0000],eax
   14000f5c2:	add    BYTE PTR [rax],al
   14000f5c4:	or     BYTE PTR [rsi-0x79950000],al
   14000f5ca:	add    BYTE PTR [rax],al
   14000f5cc:	add    BYTE PTR [rax+rax*1+0x867400],bh
   14000f5d3:	add    BYTE PTR [rbx],al
   14000f5d5:	xchg   DWORD PTR [rax],eax
   14000f5d7:	add    BYTE PTR [rdx+rax*8],bh
   14000f5da:	add    BYTE PTR [rax],al
   14000f5dc:	rex xchg DWORD PTR [rax],eax
   14000f5df:	add    BYTE PTR [rdx-0x79],al
   14000f5e2:	add    BYTE PTR [rax],al
   14000f5e4:	add    dh,cl
   14000f5e6:	add    BYTE PTR [rax],al
   14000f5e8:	(bad)  
   14000f5e9:	xchg   DWORD PTR [rax],eax
   14000f5eb:	add    BYTE PTR [rbp+0x10000087],ch
   14000f5f1:	(bad)  
   14000f5f2:	add    BYTE PTR [rax],al
   14000f5f4:	mov    dh,0x87
   14000f5f6:	add    BYTE PTR [rax],al
   14000f5f8:	fild   DWORD PTR [rdi-0x42900000]
   14000f5fe:	add    BYTE PTR [rax],al
   14000f600:	fild   DWORD PTR [rdi-0x780a0000]
   14000f606:	add    BYTE PTR [rax],al
   14000f608:	jo     0x14000f5c7
   14000f60a:	add    BYTE PTR [rax],al
   14000f60c:	test   BYTE PTR [rdi-0x77ad0000],0x0
   14000f613:	add    BYTE PTR [rax+0x590000bd],al
   14000f619:	mov    BYTE PTR [rax],al
   14000f61b:	add    BYTE PTR [rbp-0x78],dh
   14000f61e:	add    BYTE PTR [rax],al
   14000f620:	jo     0x14000f5e0
   14000f622:	add    BYTE PTR [rax],al
   14000f624:	jne    0x14000f5ae
   14000f626:	add    BYTE PTR [rax],al
   14000f628:	stos   BYTE PTR es:[rdi],al
   14000f629:	mov    BYTE PTR [rax],al
   14000f62b:	add    BYTE PTR [rax-0x42],bh
   14000f62e:	add    BYTE PTR [rax],al
   14000f630:	add    cl,BYTE PTR [rcx-0x76c30000]
   14000f636:	add    BYTE PTR [rax],al
   14000f638:	sar    BYTE PTR [rdi-0x76990000],1
   14000f63e:	add    BYTE PTR [rax],al
   14000f640:	lahf   
   14000f641:	mov    DWORD PTR [rax],eax
   14000f643:	add    al,al
   14000f645:	rol    BYTE PTR [rax],0x0
   14000f648:	xrelease mov DWORD PTR [rax],eax
   14000f64b:	add    BYTE PTR [rbx],dl
   14000f64d:	mov    al,BYTE PTR [rax]
   14000f64f:	add    BYTE PTR [rax],bl
   14000f651:	ret    0x0
   14000f654:	sbb    DWORD PTR [rdx-0x75c70000],ecx
   14000f65a:	add    BYTE PTR [rax],al
   14000f65c:	rol    dl,0x0
   14000f65f:	add    BYTE PTR [rdi],bh
   14000f661:	mov    al,BYTE PTR [rax]
   14000f663:	add    BYTE PTR [rdx+rcx*4-0x3c600000],al
   14000f66a:	add    BYTE PTR [rax],al
   14000f66c:	test   BYTE PTR [rdx-0x75570000],cl
   14000f672:	add    BYTE PTR [rax],al
   14000f674:	movabs al,ds:0x8aaf0000c3
   14000f67d:	mov    eax,DWORD PTR [rax]
   14000f67f:	add    BYTE PTR [rax-0x3c],ah
   14000f682:	add    BYTE PTR [rax],al
   14000f684:	add    BYTE PTR [rbx-0x74db0000],cl
   14000f68a:	add    BYTE PTR [rax],al
   14000f68c:	(bad)  
   14000f68d:	(bad)  
   14000f68e:	add    BYTE PTR [rax],al
   14000f690:	sub    ecx,DWORD PTR [rbx-0x74b50000]
   14000f696:	add    BYTE PTR [rax],al
   14000f698:	and    ch,al
   14000f69a:	add    BYTE PTR [rax],al
   14000f69c:	push   rcx
   14000f69d:	mov    eax,DWORD PTR [rax]
   14000f69f:	add    BYTE PTR [rbx-0x67ffff75],bl
   14000f6a5:	(bad)
   14000f6a8:	cmc    
   14000f6a9:	mov    eax,DWORD PTR [rax]
   14000f6ab:	add    BYTE PTR [rsi],bl
   14000f6ad:	mov    WORD PTR [rax],es
   14000f6af:	add    BYTE PTR [rax-0x42],dh
   14000f6b2:	add    BYTE PTR [rax],al
   14000f6b4:	mov    BYTE PTR [rax+rax*1+0x8ca800],cl
   14000f6bb:	add    al,ch
   14000f6bd:	enter  0x0,0xae
   14000f6c1:	mov    WORD PTR [rax],es
   14000f6c3:	add    al,dh
   14000f6c5:	mov    WORD PTR [rax],es
   14000f6c7:	add    BYTE PTR [rax-0x37],bl
   14000f6ca:	add    BYTE PTR [rax],al
   14000f6cc:	loop   0x14000f65b
   14000f6ce:	add    BYTE PTR [rax],al
   14000f6d0:	pushf  
   14000f6d1:	mov    es,WORD PTR [rax]
   14000f6d3:	add    al,dh
   14000f6d5:	retf   
   14000f6d6:	add    BYTE PTR [rax],al
   14000f6d8:	ror    BYTE PTR [rsi-0x710e0000],cl
   14000f6de:	add    BYTE PTR [rax],al
   14000f6e0:	xor    ch,cl
   14000f6e2:	add    BYTE PTR [rax],al
   14000f6e4:	clc    
   14000f6e5:	mov    es,WORD PTR [rax]
   14000f6e7:	add    BYTE PTR [rsi],dl
   14000f6e9:	pop    QWORD PTR [rax]
   14000f6eb:	add    BYTE PTR [rax-0x42],dh
   14000f6ee:	add    BYTE PTR [rax],al
   14000f6f0:	sbb    al,0x8f
   14000f6f2:	add    BYTE PTR [rax],al
   14000f6f4:	(bad)  
   14000f6f5:	pop    QWORD PTR [rax]
   14000f6f7:	add    BYTE PTR [rax-0x42],dh
   14000f6fa:	add    BYTE PTR [rax],al
   14000f6fc:	rex pop QWORD PTR [rax]
   14000f6ff:	add    BYTE PTR [rax-0x71],ah
   14000f702:	add    BYTE PTR [rax],al
   14000f704:	jo     0x14000f6c4
   14000f706:	add    BYTE PTR [rax],al
   14000f708:	jo     0x14000f699
   14000f70a:	add    BYTE PTR [rax],al
   14000f70c:	mov    dh,0x8f
   14000f70e:	add    BYTE PTR [rax],al
   14000f710:	and    al,0xbc
	...

Disassembly of section .didat:

0000000140010000 <.didat>:
   140010000:	adc    BYTE PTR [rbp+0x14000],al
	...

Disassembly of section .rsrc:

0000000140011000 <.rsrc>:
	...
   14001100c:	add    DWORD PTR [rax],eax
   14001100e:	add    al,BYTE PTR [rax]
   140011010:	call   0x168811015
   140011015:	add    BYTE PTR [rax],al
   140011017:	adc    BYTE PTR [rax],0x0
   14001101a:	add    BYTE PTR [rax],al
   14001101c:	add    BYTE PTR [rax],al
   14001101f:	sbb    BYTE PTR [rax],0x0
   140011022:	add    BYTE PTR [rax],al
   140011024:	pop    rax
   140011025:	add    BYTE PTR [rax],al
   140011027:	add    BYTE PTR [rax],0x0
	...
   140011036:	add    DWORD PTR [rax],eax
   140011038:	add    DWORD PTR [rax],eax
   14001103a:	add    BYTE PTR [rax],al
   14001103c:	jo     0x14001103e
   14001103e:	add    BYTE PTR [rax+0x0],al
	...
   14001104c:	add    BYTE PTR [rax],al
   14001104e:	add    DWORD PTR [rax],eax
   140011050:	add    DWORD PTR [rax],eax
   140011052:	add    BYTE PTR [rax],al
   140011054:	mov    BYTE PTR [rax],al
   140011056:	add    BYTE PTR [rax+0x0],al
	...
   140011064:	add    BYTE PTR [rax],al
   140011066:	add    DWORD PTR [rax],eax
   140011068:	add    DWORD PTR [rax],eax
   14001106a:	add    BYTE PTR [rax],al
   14001106c:	movabs al,ds:0x800000
	...
   14001107d:	add    BYTE PTR [rcx],al
   14001107f:	add    BYTE PTR [rcx],cl
   140011081:	add    al,0x0
   140011083:	add    BYTE PTR [rax+0x0],bh
	...
   140011095:	add    BYTE PTR [rcx],al
   140011097:	add    BYTE PTR [rcx],cl
   140011099:	add    al,0x0
   14001109b:	add    al,cl
	...
   1400110ad:	add    BYTE PTR [rcx],al
   1400110af:	add    BYTE PTR [rcx],cl
   1400110b1:	add    al,0x0
   1400110b3:	add    al,bl
   1400110b5:	add    BYTE PTR [rax],al
   1400110b7:	add    al,ah
   1400110b9:	sbb    BYTE PTR [rcx],al
   1400110bb:	add    al,cl
	...
   1400110c5:	add    BYTE PTR [rax],al
   1400110c7:	add    BYTE PTR [rax],ch
   1400110c9:	adc    eax,0x3b80001
	...
   1400110d6:	add    BYTE PTR [rax],al
   1400110d8:	lock adc BYTE PTR [rcx],al
   1400110db:	add    BYTE PTR [rdx],dh
   1400110dd:	add    al,0x0
	...
   1400110e7:	add    BYTE PTR [rbx],al
   1400110e9:	add    BYTE PTR [rbp+0x0],cl
   1400110ec:	push   rbp
   1400110ed:	add    BYTE PTR [rcx+0x0],cl
   1400110f0:	cmp    al,0x3f
   1400110f2:	js     0x140011161
   1400110f4:	ins    BYTE PTR es:[rdi],dx
   1400110f5:	and    BYTE PTR [rsi+0x65],dh
   1400110f8:	jb     0x14001116d
   1400110fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140011101:	xor    BYTE PTR [rdx],ah
   140011103:	and    BYTE PTR [rbp+0x6e],ah
   140011106:	movsxd ebp,DWORD PTR [rdi+0x64]
   140011109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140011110:	rex.RX sub eax,0x73202238
   140011116:	je     0x140011179
   140011118:	outs   dx,BYTE PTR ds:[rsi]
   140011119:	fs (bad) 
   14001111b:	ins    BYTE PTR es:[rdi],dx
   14001111c:	outs   dx,DWORD PTR ds:[rsi]
   14001111d:	outs   dx,BYTE PTR ds:[rsi]
   14001111e:	gs cmp eax,0x73657922
   140011124:	and    bh,BYTE PTR [rdi]
   140011126:	ds or  eax,0x2d213c0a
   14001112c:	sub    eax,0x706f4320
   140011131:	jns    0x1400111a5
   140011133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001113a:	sub    DWORD PTR [rax],esp
   14001113c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140011144:	je     0x140011166
   140011146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140011148:	jb     0x1400111ba
   14001114a:	outs   dx,DWORD PTR ds:[rsi]
   14001114b:	jb     0x1400111ae
   14001114d:	je     0x1400111b8
   14001114f:	outs   dx,DWORD PTR ds:[rsi]
   140011150:	outs   dx,BYTE PTR ds:[rsi]
   140011151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e4f84
   140011157:	cmp    al,0x61
   140011159:	jae    0x1400111ce
   14001115b:	gs ins DWORD PTR es:[rdi],dx
   14001115d:	(bad)  
   14001115e:	ins    BYTE PTR es:[rdi],dx
   14001115f:	jns    0x140011181
   140011161:	js     0x1400111d0
   140011163:	ins    BYTE PTR es:[rdi],dx
   140011164:	outs   dx,BYTE PTR ds:[rsi]
   140011165:	jae    0x1400111a4
   140011167:	and    dh,BYTE PTR [rbp+0x72]
   14001116a:	outs   dx,BYTE PTR ds:[rsi]
   14001116b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001116e:	push   0x73616d65
   140011173:	sub    eax,0x7263696d
   140011178:	outs   dx,DWORD PTR ds:[rsi]
   140011179:	jae    0x1400111ea
   14001117b:	data16 je 0x1400111ab
   14001117e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011181:	cmp    ah,BYTE PTR [rcx+0x73]
   140011184:	ins    DWORD PTR es:[rdi],dx
   140011185:	cs jbe 0x1400111b9
   140011188:	and    cl,BYTE PTR [rip+0x616d200a]        # 0x1a16e3198
   14001118e:	outs   dx,BYTE PTR ds:[rsi]
   14001118f:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140011196:	jb     0x14001120b
   140011198:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001119f:	xor    BYTE PTR [rdx],ah
   1400111a1:	ds or  eax,0x200a0d0a
   1400111a7:	and    BYTE PTR [rax],ah
   1400111a9:	and    BYTE PTR [rcx+riz*2],bh
   1400111ac:	jae    0x140011221
   1400111ae:	gs ins DWORD PTR es:[rdi],dx
   1400111b0:	(bad)  
   1400111b1:	ins    BYTE PTR es:[rdi],dx
   1400111b2:	jns    0x1400111fd
   1400111b4:	fs outs dx,BYTE PTR gs:[rsi]
   1400111b7:	je     0x140011222
   1400111b9:	je     0x140011234
   1400111bb:	and    BYTE PTR [rsi+0x65],dh
   1400111be:	jb     0x140011233
   1400111c0:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400111c7:	xor    DWORD PTR [rsi],ebp
   1400111c9:	xor    BYTE PTR [rsi],ch
   1400111cb:	xor    BYTE PTR [rdx],ah
   1400111cd:	or     eax,0x2020200a
   1400111d2:	and    BYTE PTR [rax],ah
   1400111d4:	and    BYTE PTR [rax],ah
   1400111d6:	jo     0x14001124a
   1400111d8:	outs   dx,DWORD PTR ds:[rsi]
   1400111d9:	movsxd esp,DWORD PTR [rbp+0x73]
   1400111dc:	jae    0x14001124d
   1400111de:	jb     0x140011221
   1400111e0:	jb     0x140011245
   1400111e2:	push   0x63657469
   1400111e7:	je     0x14001125e
   1400111e9:	jb     0x140011250
   1400111eb:	cmp    eax,0x646d6122
   1400111f0:	ss xor al,0x22
   1400111f3:	or     eax,0x2020200a
   1400111f8:	and    BYTE PTR [rax],ah
   1400111fa:	and    BYTE PTR [rax],ah
   1400111fc:	outs   dx,BYTE PTR ds:[rsi]
   1400111fd:	(bad)  
   1400111fe:	ins    DWORD PTR es:[rdi],dx
   1400111ff:	gs cmp eax,0x6f727022
   140011205:	jbe    0x14001127b
   140011207:	outs   dx,DWORD PTR ds:[rsi]
   140011208:	outs   dx,DWORD PTR ds:[rsi]
   140011209:	ins    BYTE PTR es:[rdi],dx
   14001120a:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x16021321a
   140011210:	and    BYTE PTR [rax],ah
   140011212:	and    BYTE PTR [rax],ah
   140011214:	je     0x14001128f
   140011216:	jo     0x14001127d
   140011218:	cmp    eax,0x6e697722
   14001121d:	xor    esi,DWORD PTR [rdx]
   14001121f:	and    ch,BYTE PTR [rdi]
   140011221:	ds or  eax,0x200a0d0a
   140011227:	and    BYTE PTR [rax],ah
   140011229:	and    BYTE PTR [rsp+riz*2],bh
   14001122c:	gs jae 0x140011292
   14001122f:	jb     0x14001129a
   140011231:	jo     0x1400112a7
   140011233:	imul   ebp,DWORD PTR [rdi+0x6e],0x6361503e
   14001123a:	imul   esp,DWORD PTR [rcx+0x67],0x65
   14001123e:	sub    eax,0x65736162
   140011243:	and    BYTE PTR fs:[rax+0x72],dh
   140011247:	outs   dx,DWORD PTR ds:[rsi]
   140011248:	jbe    0x1400112b3
   14001124a:	jae    0x1400112b5
   14001124c:	outs   dx,DWORD PTR ds:[rsi]
   14001124d:	outs   dx,BYTE PTR ds:[rsi]
   14001124e:	imul   ebp,DWORD PTR [rsi+0x67],0x6f6f7420
   140011255:	ins    BYTE PTR es:[rdi],dx
   140011256:	cs cmp al,0x2f
   140011259:	fs gs jae 0x1400112c0
   14001125d:	jb     0x1400112c8
   14001125f:	jo     0x1400112d5
   140011261:	imul   ebp,DWORD PTR [rdi+0x6e],0xd0a0d3e
   140011268:	or     ah,BYTE PTR [rax]
   14001126a:	and    BYTE PTR [rax],ah
   14001126c:	and    BYTE PTR [rsp+rsi*2],bh
   14001126f:	jb     0x1400112e6
   140011271:	jae    0x1400112e7
   140011273:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140011275:	outs   dx,WORD PTR ds:[rsi]
   140011277:	and    BYTE PTR [rax+0x6d],bh
   14001127a:	ins    BYTE PTR es:[rdi],dx
   14001127b:	outs   dx,BYTE PTR ds:[rsi]
   14001127c:	jae    0x1400112bb
   14001127e:	and    dh,BYTE PTR [rbp+0x72]
   140011281:	outs   dx,BYTE PTR ds:[rsi]
   140011282:	cmp    dh,BYTE PTR [rbx+0x63]
   140011285:	push   0x73616d65
   14001128a:	sub    eax,0x7263696d
   14001128f:	outs   dx,DWORD PTR ds:[rsi]
   140011290:	jae    0x140011301
   140011292:	data16 je 0x1400112c2
   140011295:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011298:	cmp    ah,BYTE PTR [rcx+0x73]
   14001129b:	ins    DWORD PTR es:[rdi],dx
   14001129c:	cs jbe 0x1400112d2
   14001129f:	and    bh,BYTE PTR [rsi]
   1400112a1:	or     eax,0x2020200a
   1400112a6:	and    BYTE PTR [rax],ah
   1400112a8:	and    BYTE PTR [rax],ah
   1400112aa:	and    BYTE PTR [rbx+rsi*2],bh
   1400112ad:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400112b1:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400112b9:	and    BYTE PTR [rax],ah
   1400112bb:	and    BYTE PTR [rax],ah
   1400112bd:	and    BYTE PTR [rax],ah
   1400112bf:	and    BYTE PTR [rax],ah
   1400112c1:	and    BYTE PTR [rax],ah
   1400112c3:	cmp    al,0x72
   1400112c5:	gs jno 0x14001133d
   1400112c8:	gs jae 0x14001133f
   1400112cb:	gs fs push rax
   1400112ce:	jb     0x140011339
   1400112d0:	jbe    0x14001133b
   1400112d2:	ins    BYTE PTR es:[rdi],dx
   1400112d3:	gs addr32 gs jae 0x140011316
   1400112d8:	or     eax,0x2020200a
   1400112dd:	and    BYTE PTR [rax],ah
   1400112df:	and    BYTE PTR [rax],ah
   1400112e1:	and    BYTE PTR [rax],ah
   1400112e3:	and    BYTE PTR [rax],ah
   1400112e5:	and    BYTE PTR [rax],ah
   1400112e7:	and    BYTE PTR [rax],ah
   1400112e9:	and    BYTE PTR [rcx+riz*1],bh
   1400112ec:	sub    eax,0x6e45202d
   1400112f1:	jae    0x140011368
   1400112f3:	jb     0x14001135a
   1400112f5:	and    BYTE PTR [rax+0x72],dh
   1400112f8:	outs   dx,DWORD PTR ds:[rsi]
   1400112f9:	jbe    0x140011364
   1400112fb:	jae    0x140011366
   1400112fd:	outs   dx,DWORD PTR ds:[rsi]
   1400112fe:	outs   dx,BYTE PTR ds:[rsi]
   1400112ff:	imul   ebp,DWORD PTR [rsi+0x67],0x20736920
   140011306:	imul   ebp,DWORD PTR [rsi+0x69],0x74616974
   14001130d:	gs and BYTE PTR fs:[rdx+0x79],ah
   140011312:	and    BYTE PTR [rcx+0x64],ah
   140011315:	ins    DWORD PTR es:[rdi],dx
   140011316:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   14001131d:	je     0x14001138e
   14001131f:	jb     0x140011394
   140011321:	and    BYTE PTR cs:[rip+0xa0d3e2d],ch        # 0x14a0e5155
   140011328:	and    BYTE PTR [rax],ah
   14001132a:	and    BYTE PTR [rax],ah
   14001132c:	and    BYTE PTR [rax],ah
   14001132e:	and    BYTE PTR [rax],ah
   140011330:	and    BYTE PTR [rax],ah
   140011332:	and    BYTE PTR [rax],ah
   140011334:	and    BYTE PTR [rax],ah
   140011336:	and    BYTE PTR [rax],ah
   140011338:	cmp    al,0x72
   14001133a:	gs jno 0x1400113b2
   14001133d:	gs jae 0x1400113b4
   140011340:	gs fs rex.RB js 0x1400113aa
   140011345:	movsxd esi,DWORD PTR [rbp+0x74]
   140011348:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14001134f:	ins    BYTE PTR es:[rdi],dx
   140011350:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140011354:	gs ins BYTE PTR es:[rdi],dx
   140011356:	cmp    eax,0x71657222
   14001135b:	jne    0x1400113c6
   14001135d:	jb     0x1400113c4
   14001135f:	rex.B
   140011360:	fs ins DWORD PTR es:[rdi],dx
   140011362:	imul   ebp,DWORD PTR [rsi+0x69],0x61727473
   140011369:	je     0x1400113da
   14001136b:	jb     0x14001138f
   14001136d:	and    BYTE PTR [rbp+0x69],dh
   140011370:	movsxd esp,DWORD PTR [r11+0x65]
   140011374:	jae    0x1400113e9
   140011376:	cmp    eax,0x6c616622
   14001137b:	jae    0x1400113e2
   14001137d:	and    ch,BYTE PTR [rdi]
   14001137f:	ds or  eax,0x2020200a
   140011385:	and    BYTE PTR [rax],ah
   140011387:	and    BYTE PTR [rax],ah
   140011389:	and    BYTE PTR [rax],ah
   14001138b:	and    BYTE PTR [rax],ah
   14001138d:	and    BYTE PTR [rdi+rbp*1],bh
   140011390:	jb     0x1400113f7
   140011392:	jno    0x140011409
   140011394:	gs jae 0x14001140b
   140011397:	gs fs push rax
   14001139a:	jb     0x140011405
   14001139c:	jbe    0x140011407
   14001139e:	ins    BYTE PTR es:[rdi],dx
   14001139f:	gs addr32 gs jae 0x1400113e2
   1400113a4:	or     eax,0x2020200a
   1400113a9:	and    BYTE PTR [rax],ah
   1400113ab:	and    BYTE PTR [rax],ah
   1400113ad:	and    BYTE PTR [rdi+rbp*1],bh
   1400113b0:	jae    0x140011417
   1400113b2:	movsxd esi,DWORD PTR [rbp+0x72]
   1400113b5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400113bd:	and    BYTE PTR [rax],ah
   1400113bf:	cmp    al,0x2f
   1400113c1:	je     0x140011435
   1400113c3:	jne    0x140011438
   1400113c5:	je     0x140011410
   1400113c7:	outs   dx,BYTE PTR ds:[rsi]
   1400113c8:	outs   dx,WORD PTR ds:[rsi]
   1400113ca:	ds or  eax,0x2020200a
   1400113d0:	and    BYTE PTR [rbx+riz*2],bh
   1400113d3:	outs   dx,DWORD PTR ds:[rsi]
   1400113d4:	ins    DWORD PTR es:[rdi],dx
   1400113d5:	jo     0x140011438
   1400113d7:	je     0x140011442
   1400113d9:	(bad)  
   1400113da:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   1400113e2:	ins    BYTE PTR es:[rdi],dx
   1400113e3:	outs   dx,BYTE PTR ds:[rsi]
   1400113e4:	jae    0x140011423
   1400113e6:	and    dh,BYTE PTR [rbp+0x72]
   1400113e9:	outs   dx,BYTE PTR ds:[rsi]
   1400113ea:	cmp    dh,BYTE PTR [rbx+0x63]
   1400113ed:	push   0x73616d65
   1400113f2:	sub    eax,0x7263696d
   1400113f7:	outs   dx,DWORD PTR ds:[rsi]
   1400113f8:	jae    0x140011469
   1400113fa:	data16 je 0x14001142a
   1400113fd:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011400:	cmp    ah,BYTE PTR [rbx+0x6f]
   140011403:	ins    DWORD PTR es:[rdi],dx
   140011404:	jo     0x140011467
   140011406:	je     0x140011471
   140011408:	(bad)  
   140011409:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   140011411:	and    bh,BYTE PTR [rsi]
   140011413:	or     eax,0x2020200a
   140011418:	and    BYTE PTR [rax],ah
   14001141a:	and    BYTE PTR [rax],ah
   14001141c:	and    BYTE PTR [rcx+riz*2],bh
   14001141f:	jo     0x140011491
   140011421:	ins    BYTE PTR es:[rdi],dx
   140011422:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140011429:	and    BYTE PTR ds:[rip+0x2020200a],cl        # 0x16021343a
   140011430:	and    BYTE PTR [rax],ah
   140011432:	and    BYTE PTR [rax],ah
   140011434:	and    BYTE PTR [rax],ah
   140011436:	and    BYTE PTR [rax],ah
   140011438:	and    BYTE PTR [rcx+riz*1],bh
   14001143b:	sub    eax,0x6854202d
   140011440:	imul   esi,DWORD PTR [rbx+0x20],0x76206449
   140011447:	(bad)  
   140011448:	ins    BYTE PTR es:[rdi],dx
   140011449:	jne    0x1400114b0
   14001144b:	and    BYTE PTR [rcx+0x6e],ch
   14001144e:	imul   esp,DWORD PTR fs:[rbx+0x61],0x20736574
   140011456:	je     0x1400114c0
   140011458:	and    BYTE PTR gs:[rcx+0x70],ah
   14001145c:	jo     0x1400114ca
   14001145e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140011465:	and    BYTE PTR [rbx+0x75],dh
   140011468:	jo     0x1400114da
   14001146a:	outs   dx,DWORD PTR ds:[rsi]
   14001146b:	jb     0x1400114e1
   14001146d:	jae    0x14001148f
   14001146f:	push   rdi
   140011470:	imul   ebp,DWORD PTR [rsi+0x64],0x2073776f
   140011477:	push   rsp
   140011478:	push   0x68736572
   14001147d:	outs   dx,DWORD PTR ds:[rsi]
   14001147e:	ins    BYTE PTR es:[rdi],dx
   14001147f:	and    BYTE PTR fs:[rsi+0x75],ah
   140011483:	outs   dx,BYTE PTR ds:[rsi]
   140011484:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140011488:	outs   dx,BYTE PTR ds:[rsi]
   140011489:	(bad)  
   14001148a:	ins    BYTE PTR es:[rdi],dx
   14001148b:	imul   esi,DWORD PTR [rcx+rdi*2+0x2d],0x20203e2d
   140011493:	and    BYTE PTR [rax],ah
   140011495:	and    BYTE PTR [rax],ah
   140011497:	and    BYTE PTR [rax],ah
   140011499:	and    BYTE PTR [rax],ah
   14001149b:	and    BYTE PTR [rax],ah
   14001149d:	or     eax,0x2020200a
   1400114a2:	and    BYTE PTR [rax],ah
   1400114a4:	and    BYTE PTR [rax],ah
   1400114a6:	and    BYTE PTR [rax],ah
   1400114a8:	and    BYTE PTR [rax],ah
   1400114aa:	and    BYTE PTR [rbx+rsi*2],bh
   1400114ad:	jne    0x14001151f
   1400114af:	jo     0x140011520
   1400114b1:	jb     0x140011527
   1400114b3:	gs fs rex.WRXB push r11
   1400114b7:	and    BYTE PTR [rcx+0x64],cl
   1400114ba:	cmp    eax,0x65387b22
   1400114bf:	xor    BYTE PTR [rsi+0x37],ah
   1400114c2:	(bad)  
   1400114c3:	xor    DWORD PTR [rdx],esi
   1400114c5:	sub    eax,0x33626662
   1400114ca:	sub    eax,0x38656634
   1400114cf:	sub    eax,0x35613962
   1400114d4:	sub    eax,0x64663834
   1400114d9:	xor    eax,0x35316130
   1400114de:	(bad)  
   1400114df:	cmp    DWORD PTR [rcx+0x7d],esp
   1400114e2:	and    ch,BYTE PTR [rdi]
   1400114e4:	ds or  eax,0x2020200a
   1400114ea:	and    BYTE PTR [rax],ah
   1400114ec:	and    BYTE PTR [rax],ah
   1400114ee:	and    BYTE PTR [rdi+rbp*1],bh
   1400114f1:	(bad)  
   1400114f2:	jo     0x140011564
   1400114f4:	ins    BYTE PTR es:[rdi],dx
   1400114f5:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400114fc:	ds or  eax,0x2020200a
   140011502:	and    BYTE PTR [rdi+rbp*1],bh
   140011505:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011508:	jo     0x14001156b
   14001150a:	je     0x140011575
   14001150c:	(bad)  
   14001150d:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0xa0d3e79
   140011515:	cmp    al,0x2f
   140011517:	(bad)  
   140011518:	jae    0x14001158d
   14001151a:	gs ins DWORD PTR es:[rdi],dx
   14001151c:	(bad)  
   14001151d:	ins    BYTE PTR es:[rdi],dx
   14001151e:	jns    0x14001155e
   140011520:	or     eax,0xa
   140011525:	add    BYTE PTR [rax],al
   140011527:	add    BYTE PTR [rax+0x3403],bh
   14001152d:	add    BYTE PTR [rsi+0x0],dl
   140011530:	push   rbx
   140011531:	add    BYTE PTR [rdi+0x0],bl
   140011534:	push   rsi
   140011535:	add    BYTE PTR [rbp+0x0],al
   140011538:	push   rdx
   140011539:	add    BYTE PTR [rbx+0x0],dl
   14001153c:	rex.WB add BYTE PTR [r15+0x0],cl
   140011540:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140011544:	rex.WB add BYTE PTR [r14+0x0],cl
   140011548:	rex.RX add BYTE PTR [rdi+0x0],r9b
   14001154c:	add    BYTE PTR [rax],al
   14001154e:	add    BYTE PTR [rax],al
   140011550:	mov    ebp,0xfeef04
   140011555:	add    BYTE PTR [rcx],al
   140011557:	add    BYTE PTR [rax],al
   140011559:	add    BYTE PTR [rdx],cl
   14001155b:	add    cl,bl
   14001155d:	rex.X add BYTE PTR [rax],bpl
   140011560:	add    BYTE PTR [rax],al
   140011562:	or     al,BYTE PTR [rax]
   140011564:	fld    DWORD PTR [rdx+0x0]
   140011567:	sub    BYTE PTR [rdi],bh
   140011569:	add    BYTE PTR [rax],al
   14001156b:	add    BYTE PTR [rax],al
   14001156d:	add    BYTE PTR [rax],al
   14001156f:	add    BYTE PTR [rax+rax*1],al
   140011572:	add    al,0x0
   140011574:	add    DWORD PTR [rax],eax
	...
   140011582:	add    BYTE PTR [rax],al
   140011584:	(bad)  
   140011585:	add    eax,DWORD PTR [rax]
   140011587:	add    BYTE PTR [rcx],al
   140011589:	add    BYTE PTR [rbx+0x0],dl
   14001158c:	je     0x14001158e
   14001158e:	jb     0x140011590
   140011590:	imul   eax,DWORD PTR [rax],0x67006e
   140011596:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001159a:	ins    BYTE PTR es:[rdi],dx
   14001159b:	add    BYTE PTR [rbp+0x0],ah
   14001159e:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400115a2:	data16 add BYTE PTR [rdi+0x0],ch
   1400115a6:	add    BYTE PTR [rax],al
   1400115a8:	repnz add al,BYTE PTR [rax]
   1400115ab:	add    BYTE PTR [rcx],al
   1400115ad:	add    BYTE PTR [rax],dh
   1400115af:	add    BYTE PTR [rax+rax*1],dh
   1400115b2:	xor    BYTE PTR [rax],al
   1400115b4:	cmp    DWORD PTR [rax],eax
   1400115b6:	xor    BYTE PTR [rax],al
   1400115b8:	xor    al,0x0
   1400115ba:	rex.X add BYTE PTR [rax],sil
   1400115bd:	add    BYTE PTR [rax],al
   1400115bf:	add    BYTE PTR [rax+rax*1+0x16],cl
   1400115c3:	add    BYTE PTR [rcx],al
   1400115c5:	add    BYTE PTR [rbx+0x0],al
   1400115c8:	outs   dx,DWORD PTR ds:[rsi]
   1400115c9:	add    BYTE PTR [rbp+0x0],ch
   1400115cc:	jo     0x1400115ce
   1400115ce:	(bad)  
   1400115cf:	add    BYTE PTR [rsi+0x0],ch
   1400115d2:	jns    0x1400115d4
   1400115d4:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400115d8:	ins    DWORD PTR es:[rdi],dx
   1400115d9:	add    BYTE PTR [rbp+0x0],ah
   1400115dc:	add    BYTE PTR [rax],al
   1400115de:	add    BYTE PTR [rax],al
   1400115e0:	rex.WRB add BYTE PTR [r9+0x0],r13b
   1400115e4:	movsxd eax,DWORD PTR [rax]
   1400115e6:	jb     0x1400115e8
   1400115e8:	outs   dx,DWORD PTR ds:[rsi]
   1400115e9:	add    BYTE PTR [rbx+0x0],dh
   1400115ec:	outs   dx,DWORD PTR ds:[rsi]
   1400115ed:	add    BYTE PTR [rsi+0x0],ah
   1400115f0:	je     0x1400115f2
   1400115f2:	and    BYTE PTR [rax],al
   1400115f4:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400115f8:	jb     0x1400115fa
   1400115fa:	jo     0x1400115fc
   1400115fc:	outs   dx,DWORD PTR ds:[rsi]
   1400115fd:	add    BYTE PTR [rdx+0x0],dh
   140011600:	(bad)  
   140011601:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011605:	add    BYTE PTR [rdi+0x0],ch
   140011608:	outs   dx,BYTE PTR ds:[rsi]
   140011609:	add    BYTE PTR [rax],al
   14001160b:	add    BYTE PTR [rdx+0x1002d00],al
   140011611:	add    BYTE PTR [rsi+0x0],al
   140011614:	imul   eax,DWORD PTR [rax],0x65006c
   14001161a:	add    BYTE PTR [rbp+0x0],r12b
   14001161e:	jae    0x140011620
   140011620:	movsxd eax,DWORD PTR [rax]
   140011622:	jb     0x140011624
   140011624:	imul   eax,DWORD PTR [rax],0x740070
   14001162a:	imul   eax,DWORD PTR [rax],0x6e006f
   140011630:	add    BYTE PTR [rax],al
   140011632:	add    BYTE PTR [rax],al
   140011634:	push   rax
   140011635:	add    BYTE PTR [rdx+0x0],dh
   140011638:	outs   dx,DWORD PTR ds:[rsi]
   140011639:	add    BYTE PTR [rsi+0x0],dh
   14001163c:	imul   eax,DWORD PTR [rax],0x690073
   140011642:	outs   dx,DWORD PTR ds:[rsi]
   140011643:	add    BYTE PTR [rsi+0x0],ch
   140011646:	imul   eax,DWORD PTR [rax],0x67006e
   14001164c:	and    BYTE PTR [rax],al
   14001164e:	jo     0x140011650
   140011650:	(bad)  
   140011651:	add    BYTE PTR [rbx+0x0],ah
   140011654:	imul   eax,DWORD PTR [rax],0x61
   140011657:	add    BYTE PTR [rdi+0x0],ah
   14001165a:	add    BYTE PTR gs:[rax],ah
   14001165d:	add    BYTE PTR [rdx+0x0],dh
   140011660:	jne    0x140011662
   140011662:	outs   dx,BYTE PTR ds:[rsi]
   140011663:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011667:	add    BYTE PTR [rbp+0x0],ch
   14001166a:	add    BYTE PTR gs:[rax],ah
   14001166d:	add    BYTE PTR [rax+0x0],dh
   140011670:	jb     0x140011672
   140011672:	outs   dx,DWORD PTR ds:[rsi]
   140011673:	add    BYTE PTR [rbx+0x0],ah
   140011676:	add    BYTE PTR gs:[rbx+0x0],dh
   14001167a:	jae    0x14001167c
   14001167c:	imul   eax,DWORD PTR [rax],0x67006e
   140011682:	and    BYTE PTR [rax],al
   140011684:	je     0x140011686
   140011686:	outs   dx,DWORD PTR ds:[rsi]
   140011687:	add    BYTE PTR [rdi+0x0],ch
   14001168a:	ins    BYTE PTR es:[rdi],dx
   14001168b:	add    BYTE PTR [rax],al
   14001168d:	add    BYTE PTR [rax],al
   14001168f:	add    BYTE PTR [rsi+0x0],ah
   140011692:	and    eax,DWORD PTR [rax]
   140011694:	add    DWORD PTR [rax],eax
   140011696:	rex.RX add BYTE PTR [rcx+0x0],r13b
   14001169a:	ins    BYTE PTR es:[rdi],dx
   14001169b:	add    BYTE PTR [rbp+0x0],ah
   14001169e:	push   rsi
   14001169f:	add    BYTE PTR [rbp+0x0],ah
   1400116a2:	jb     0x1400116a4
   1400116a4:	jae    0x1400116a6
   1400116a6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400116ac:	add    BYTE PTR [rax],al
   1400116ae:	add    BYTE PTR [rax],al
   1400116b0:	xor    DWORD PTR [rax],eax
   1400116b2:	xor    BYTE PTR [rax],al
   1400116b4:	add    BYTE PTR cs:[rax],dh
   1400116b7:	add    BYTE PTR [rsi],ch
   1400116b9:	add    BYTE PTR [rcx],dh
   1400116bb:	add    BYTE PTR [rax],dh
   1400116bd:	add    BYTE PTR [rdx],dh
   1400116bf:	add    BYTE PTR [rax+rax*1],dh
   1400116c2:	xor    BYTE PTR [rax],al
   1400116c4:	add    BYTE PTR cs:[rcx],dh
   1400116c7:	add    BYTE PTR [rdi],dh
   1400116c9:	add    BYTE PTR [rcx],dh
   1400116cb:	add    BYTE PTR [rcx],dh
   1400116cd:	add    BYTE PTR [rbx],dh
   1400116cf:	add    BYTE PTR [rax],ah
   1400116d1:	add    BYTE PTR [rax],ch
   1400116d3:	add    BYTE PTR [rax+rax*1+0x68],dh
   1400116d7:	add    BYTE PTR [rcx],dh
   1400116d9:	add    BYTE PTR [rsi],ch
   1400116db:	add    BYTE PTR [rcx],dh
   1400116dd:	add    BYTE PTR [rsi],dh
   1400116df:	add    BYTE PTR [rax],dh
   1400116e1:	add    BYTE PTR [rcx],bh
   1400116e3:	add    BYTE PTR [rax],dh
   1400116e5:	add    BYTE PTR [rsi],dh
   1400116e7:	add    BYTE PTR [rip+0x37003100],ch        # 0x1770147ed
   1400116ed:	add    BYTE PTR [rip+0x29003500],dh        # 0x169014bf3
   1400116f3:	add    BYTE PTR [rax],al
   1400116f5:	add    BYTE PTR [rax],al
   1400116f7:	add    BYTE PTR [rdx],dh
   1400116f9:	add    BYTE PTR [rcx],cl
   1400116fb:	add    BYTE PTR [rcx],al
   1400116fd:	add    BYTE PTR [rcx+0x0],cl
   140011700:	outs   dx,BYTE PTR ds:[rsi]
   140011701:	add    BYTE PTR [rax+rax*1+0x65],dh
   140011705:	add    BYTE PTR [rdx+0x0],dh
   140011708:	outs   dx,BYTE PTR ds:[rsi]
   140011709:	add    BYTE PTR [rcx+0x0],ah
   14001170c:	ins    BYTE PTR es:[rdi],dx
   14001170d:	add    BYTE PTR [rsi+0x0],cl
   140011710:	(bad)  
   140011711:	add    BYTE PTR [rbp+0x0],ch
   140011714:	add    BYTE PTR gs:[rax],al
   140011717:	add    BYTE PTR [rax+0x0],dh
   14001171a:	jb     0x14001171c
   14001171c:	outs   dx,DWORD PTR ds:[rsi]
   14001171d:	add    BYTE PTR [rsi+0x0],dh
   140011720:	je     0x140011722
   140011722:	outs   dx,DWORD PTR ds:[rsi]
   140011723:	add    BYTE PTR [rdi+0x0],ch
   140011726:	ins    BYTE PTR es:[rdi],dx
   140011727:	add    BYTE PTR [rax],al
   140011729:	add    BYTE PTR [rax],al
   14001172b:	add    BYTE PTR [rax+0x1002e00],al
   140011731:	add    BYTE PTR [rax+rax*1+0x65],cl
   140011735:	add    BYTE PTR [rdi+0x0],ah
   140011738:	(bad)  
   140011739:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001173d:	add    BYTE PTR [rdi+0x0],ch
   140011740:	jo     0x140011742
   140011742:	jns    0x140011744
   140011744:	jb     0x140011746
   140011746:	imul   eax,DWORD PTR [rax],0x680067
   14001174c:	je     0x14001174e
   14001174e:	add    BYTE PTR [rax],al
   140011750:	test   eax,0x4d002000
   140011755:	add    BYTE PTR [rcx+0x0],ch
   140011758:	movsxd eax,DWORD PTR [rax]
   14001175a:	jb     0x14001175c
   14001175c:	outs   dx,DWORD PTR ds:[rsi]
   14001175d:	add    BYTE PTR [rbx+0x0],dh
   140011760:	outs   dx,DWORD PTR ds:[rsi]
   140011761:	add    BYTE PTR [rsi+0x0],ah
   140011764:	je     0x140011766
   140011766:	and    BYTE PTR [rax],al
   140011768:	rex.XB add BYTE PTR [r15+0x0],bpl
   14001176c:	jb     0x14001176e
   14001176e:	jo     0x140011770
   140011770:	outs   dx,DWORD PTR ds:[rsi]
   140011771:	add    BYTE PTR [rdx+0x0],dh
   140011774:	(bad)  
   140011775:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011779:	add    BYTE PTR [rdi+0x0],ch
   14001177c:	outs   dx,BYTE PTR ds:[rsi]
   14001177d:	add    BYTE PTR [rsi],ch
   14001177f:	add    BYTE PTR [rax],ah
   140011781:	add    BYTE PTR [rcx+0x0],al
   140011784:	ins    BYTE PTR es:[rdi],dx
   140011785:	add    BYTE PTR [rax+rax*1+0x20],ch
   140011789:	add    BYTE PTR [rdx+0x0],dh
   14001178c:	imul   eax,DWORD PTR [rax],0x680067
   140011792:	je     0x140011794
   140011794:	jae    0x140011796
   140011796:	and    BYTE PTR [rax],al
   140011798:	jb     0x14001179a
   14001179a:	add    BYTE PTR gs:[rbx+0x0],dh
   14001179e:	add    BYTE PTR gs:[rdx+0x0],dh
   1400117a2:	jbe    0x1400117a4
   1400117a4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400117a9:	add    BYTE PTR [rax],al
   1400117ab:	add    BYTE PTR [rdx],bh
   1400117ad:	add    BYTE PTR [rcx],cl
   1400117af:	add    BYTE PTR [rcx],al
   1400117b1:	add    BYTE PTR [rdi+0x0],cl
   1400117b4:	jb     0x1400117b6
   1400117b6:	imul   eax,DWORD PTR [rax],0x690067
   1400117bc:	outs   dx,BYTE PTR ds:[rsi]
   1400117bd:	add    BYTE PTR [rcx+0x0],ah
   1400117c0:	ins    BYTE PTR es:[rdi],dx
   1400117c1:	add    BYTE PTR [rsi+0x0],al
   1400117c4:	imul   eax,DWORD PTR [rax],0x65006c
   1400117ca:	outs   dx,BYTE PTR ds:[rsi]
   1400117cb:	add    BYTE PTR [rcx+0x0],ah
   1400117ce:	ins    DWORD PTR es:[rdi],dx
   1400117cf:	add    BYTE PTR [rbp+0x0],ah
   1400117d2:	add    BYTE PTR [rax],al
   1400117d4:	jo     0x1400117d6
   1400117d6:	jb     0x1400117d8
   1400117d8:	outs   dx,DWORD PTR ds:[rsi]
   1400117d9:	add    BYTE PTR [rsi+0x0],dh
   1400117dc:	je     0x1400117de
   1400117de:	outs   dx,DWORD PTR ds:[rsi]
   1400117df:	add    BYTE PTR [rdi+0x0],ch
   1400117e2:	ins    BYTE PTR es:[rdi],dx
   1400117e3:	add    BYTE PTR [rax],al
   1400117e5:	add    BYTE PTR [rax],al
   1400117e7:	add    BYTE PTR [rdx+0x0],ch
   1400117ea:	and    eax,0x50000100
   1400117ef:	add    BYTE PTR [rdx+0x0],dh
   1400117f2:	outs   dx,DWORD PTR ds:[rsi]
   1400117f3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400117f7:	add    BYTE PTR [rbx+0x0],ah
   1400117fa:	je     0x1400117fc
   1400117fc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011800:	ins    DWORD PTR es:[rdi],dx
   140011801:	add    BYTE PTR [rbp+0x0],ah
   140011804:	add    BYTE PTR [rax],al
   140011806:	add    BYTE PTR [rax],al
   140011808:	rex.WRB add BYTE PTR [r9+0x0],r13b
   14001180c:	movsxd eax,DWORD PTR [rax]
   14001180e:	jb     0x140011810
   140011810:	outs   dx,DWORD PTR ds:[rsi]
   140011811:	add    BYTE PTR [rbx+0x0],dh
   140011814:	outs   dx,DWORD PTR ds:[rsi]
   140011815:	add    BYTE PTR [rsi+0x0],ah
   140011818:	je     0x14001181a
   14001181a:	scas   al,BYTE PTR es:[rdi]
   14001181b:	add    BYTE PTR [rax],ah
   14001181d:	add    BYTE PTR [rdi+0x0],dl
   140011820:	imul   eax,DWORD PTR [rax],0x64006e
   140011826:	outs   dx,DWORD PTR ds:[rsi]
   140011827:	add    BYTE PTR [rdi+0x0],dh
   14001182a:	jae    0x14001182c
   14001182c:	scas   al,BYTE PTR es:[rdi]
   14001182d:	add    BYTE PTR [rax],ah
   14001182f:	add    BYTE PTR [rdi+0x0],cl
   140011832:	jo     0x140011834
   140011834:	add    BYTE PTR gs:[rdx+0x0],dh
   140011838:	(bad)  
   140011839:	add    BYTE PTR [rax+rax*1+0x69],dh
   14001183d:	add    BYTE PTR [rsi+0x0],ch
   140011840:	add    BYTE PTR [eax],ah
   140011843:	add    BYTE PTR [rbx+0x0],dl
   140011846:	jns    0x140011848
   140011848:	jae    0x14001184a
   14001184a:	je     0x14001184c
   14001184c:	add    BYTE PTR gs:[rbp+0x0],ch
   140011850:	add    BYTE PTR [rax],al
   140011852:	add    BYTE PTR [rax],al
   140011854:	rex.RX add BYTE PTR [rcx],r10b
   140011857:	add    BYTE PTR [rcx],al
   140011859:	add    BYTE PTR [rax+0x0],dl
   14001185c:	jb     0x14001185e
   14001185e:	outs   dx,DWORD PTR ds:[rsi]
   14001185f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140011863:	add    BYTE PTR [rbx+0x0],ah
   140011866:	je     0x140011868
   140011868:	push   rsi
   140011869:	add    BYTE PTR [rbp+0x0],ah
   14001186c:	jb     0x14001186e
   14001186e:	jae    0x140011870
   140011870:	imul   eax,DWORD PTR [rax],0x6e006f
   140011876:	add    BYTE PTR [rax],al
   140011878:	xor    DWORD PTR [rax],eax
   14001187a:	xor    BYTE PTR [rax],al
   14001187c:	add    BYTE PTR cs:[rax],dh
   14001187f:	add    BYTE PTR [rsi],ch
   140011881:	add    BYTE PTR [rcx],dh
   140011883:	add    BYTE PTR [rax],dh
   140011885:	add    BYTE PTR [rdx],dh
   140011887:	add    BYTE PTR [rax+rax*1],dh
   14001188a:	xor    BYTE PTR [rax],al
   14001188c:	add    BYTE PTR cs:[rcx],dh
   14001188f:	add    BYTE PTR [rdi],dh
   140011891:	add    BYTE PTR [rcx],dh
   140011893:	add    BYTE PTR [rcx],dh
   140011895:	add    BYTE PTR [rbx],dh
   140011897:	add    BYTE PTR [rax],al
   140011899:	add    BYTE PTR [rax],al
   14001189b:	add    BYTE PTR [rax+rax*1+0x0],al
   14001189f:	add    BYTE PTR [rcx],al
   1400118a1:	add    BYTE PTR [rsi+0x0],dl
   1400118a4:	(bad)  
   1400118a5:	add    BYTE PTR [rdx+0x0],dh
   1400118a8:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400118ac:	ins    BYTE PTR es:[rdi],dx
   1400118ad:	add    BYTE PTR [rbp+0x0],ah
   1400118b0:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400118b4:	data16 add BYTE PTR [rdi+0x0],ch
   1400118b8:	add    BYTE PTR [rax],al
   1400118ba:	add    BYTE PTR [rax],al
   1400118bc:	and    al,0x0
   1400118be:	add    al,0x0
   1400118c0:	add    BYTE PTR [rax],al
   1400118c2:	push   rsp
   1400118c3:	add    BYTE PTR [rdx+0x0],dh
   1400118c6:	(bad)  
   1400118c7:	add    BYTE PTR [rsi+0x0],ch
   1400118ca:	jae    0x1400118cc
   1400118cc:	ins    BYTE PTR es:[rdi],dx
   1400118cd:	add    BYTE PTR [rcx+0x0],ah
   1400118d0:	je     0x1400118d2
   1400118d2:	imul   eax,DWORD PTR [rax],0x6e006f
   1400118d8:	add    BYTE PTR [rax],al
   1400118da:	add    BYTE PTR [rax],al
   1400118dc:	or     DWORD PTR [rax+rsi*4],eax
   1400118df:	add    al,0xcd
   1400118e1:	dec    ch
   1400118e3:	dec    al
   1400118e5:	add    BYTE PTR [rax],al
   1400118e7:	add    BYTE PTR [rax],al
   1400118e9:	add    BYTE PTR [rcx],al
   1400118eb:	add    BYTE PTR [rax],al
   1400118ed:	add    BYTE PTR [rax],al
   1400118ef:	add    BYTE PTR [rcx],dl
   1400118f1:	add    BYTE PTR [rax],al
   1400118f3:	add    BYTE PTR [rax],al
   1400118f5:	add    BYTE PTR [rax],al
   1400118f7:	add    BYTE PTR [rdx],al
   1400118f9:	add    BYTE PTR [rax],al
   1400118fb:	add    ah,bl
   1400118fd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400118fe:	add    BYTE PTR [rdi+0xc6cadba],ch
   140011904:	add    edi,esp
   140011906:	ds loopne 0x1400118e2
   140011909:	push   rcx
   14001190a:	push   rsi
   14001190b:	mov    ch,0x53
   14001190d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14001190e:	rex.WRXB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140011910:	(bad)  
   140011911:	ss xchg bh,ch
   140011914:	pop    rbp
   140011915:	scas   al,BYTE PTR es:[rdi]
   140011916:	cmp    DWORD PTR [rbx+0x5efd3dda],ebp
	...
   140011934:	mov    BYTE PTR [rax],al
   140011936:	add    BYTE PTR [rax],al
   140011938:	(bad)  
   140011939:	add    BYTE PTR [rax],al
   14001193b:	add    BYTE PTR [rax+0x8000000],bl
   140011941:	add    BYTE PTR [rax],al
   140011943:	add    BYTE PTR [rax+0xe000000],ah
   140011949:	add    BYTE PTR [rax],al
   14001194b:	add    BYTE PTR [rax+0x8000000],dh
	...
   140011959:	add    BYTE PTR [rax],al
   14001195b:	add    BYTE PTR [rax+0xc000000],bh
   140011961:	add    BYTE PTR [rax],al
   140011963:	add    BYTE PTR [rax],al
   140011965:	add    BYTE PTR [rax],al
   140011967:	add    BYTE PTR [rbp+0x0],cl
   14001196a:	push   rbp
   14001196b:	add    BYTE PTR [rcx+0x0],cl
	...
   140011976:	add    BYTE PTR [rax],al
   140011978:	adc    BYTE PTR [rax],al
   14001197a:	add    BYTE PTR [rax],al
   14001197c:	sbb    BYTE PTR [rax],al
   14001197e:	add    BYTE PTR [rax],al
   140011980:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140011984:	rex.WB add BYTE PTR [r8],al
	...
   14001198f:	add    BYTE PTR [rsi],al
   140011991:	add    BYTE PTR [rax],al
   140011993:	add    BYTE PTR [rax],dl
   140011995:	add    BYTE PTR [rax],al
   140011997:	add    BYTE PTR [rbp+0x0],ah
   14001199a:	outs   dx,BYTE PTR ds:[rsi]
   14001199b:	add    BYTE PTR [rip+0x53005500],ch        # 0x193016ea1
   1400119a1:	add    BYTE PTR [rax],al
   1400119a3:	add    BYTE PTR [rax],al
   1400119a5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140012000 <.reloc>:
   140012000:	add    BYTE PTR [rax+0x740000],ah
   140012006:	add    BYTE PTR [rax],al
   140012008:	and    BYTE PTR [rbx-0x5c675c78],0xa0
   14001200f:	movabs ds:0xa3c0a3b8a3b0a3a8,eax
   140012018:	fsub   DWORD PTR [rbx-0x5b3f5c20]
   14001201e:	enter  0xd0a4,0xa4
   140012022:	cwde   
   140012023:	test   al,0xa0
   140012025:	test   al,0xa8
   140012027:	test   al,0xb0
   140012029:	test   al,0xb8
   14001202b:	test   al,0xc0
   14001202d:	test   al,0xe0
   14001202f:	test   al,0xf8
   140012031:	test   al,0x10
   140012033:	test   eax,0xa940a928
   140012038:	pop    rax
   140012039:	test   eax,0xa968a960
   14001203e:	jo     0x140011fe9
   140012040:	js     0x140011feb
   140012042:	sub    BYTE PTR [rcx-0x566f5678],0x98
   140012049:	test   eax,0xa9a8a9a0
   14001204e:	mov    al,0xa9
   140012050:	enter  0xd0a9,0xa9
   140012054:	fsubr  DWORD PTR [rcx-0x56175620]
   14001205a:	lock test eax,0xaa28aa20
   140012060:	xor    BYTE PTR [rdx-0x55bf55c8],ch
   140012066:	rex.W stos BYTE PTR es:[rdi],al
   140012068:	push   rax
   140012069:	stos   BYTE PTR es:[rdi],al
   14001206a:	pop    rax
   14001206b:	stos   BYTE PTR es:[rdi],al
   14001206c:	enter  0xe0af,0xaf
   140012070:	call   0x140b11124
   140012075:	loopne 0x140012077
   140012077:	add    BYTE PTR [rax],bl
   140012079:	add    BYTE PTR [rax],al
   14001207b:	add    BYTE PTR [rax],bh
   14001207d:	movabs al,ds:0xa088a078a070a068
   140012086:	nop
   140012087:	movabs al,ds:0x100000000a0c0
   140012090:	or     al,0x0
   140012092:	add    BYTE PTR [rax],al
   140012094:	.byte 0x0
   140012095:	.byte 0xa0
	...
