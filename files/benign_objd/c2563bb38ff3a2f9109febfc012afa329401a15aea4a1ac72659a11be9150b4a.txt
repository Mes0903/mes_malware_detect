
c2563bb38ff3a2f9109febfc012afa329401a15aea4a1ac72659a11be9150b4a.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	sub    rsp,0x38
   14000100c:	and    QWORD PTR [rsp+0x20],0x0
   140001012:	movzx  r9d,dx
   140001016:	mov    edx,0x2b
   14000101b:	call   QWORD PTR [rip+0xafdf]        # 0x14000c000
   140001021:	add    rsp,0x38
   140001025:	ret    
   140001026:	int3   
   140001027:	int3   
   140001028:	int3   
   140001029:	int3   
   14000102a:	int3   
   14000102b:	int3   
   14000102c:	mov    r11,rsp
   14000102f:	mov    DWORD PTR [r11+0x20],r9d
   140001033:	sub    rsp,0x48
   140001037:	and    QWORD PTR [r11-0x18],0x0
   14000103c:	lea    rax,[r11+0x20]
   140001040:	movzx  r9d,dx
   140001044:	mov    edx,0x2b
   140001049:	mov    QWORD PTR [r11-0x20],0x4
   140001051:	mov    QWORD PTR [r11-0x28],rax
   140001055:	call   QWORD PTR [rip+0xafa5]        # 0x14000c000
   14000105b:	add    rsp,0x48
   14000105f:	ret    
   140001060:	int3   
   140001061:	int3   
   140001062:	int3   
   140001063:	int3   
   140001064:	int3   
   140001065:	int3   
   140001066:	int3   
   140001067:	int3   
   140001068:	mov    r11,rsp
   14000106b:	mov    DWORD PTR [r11+0x20],r9d
   14000106f:	sub    rsp,0x58
   140001073:	and    QWORD PTR [r11-0x18],0x0
   140001078:	lea    rax,[r11+0x28]
   14000107c:	mov    r9d,0x4
   140001082:	mov    QWORD PTR [r11-0x20],r9
   140001086:	mov    QWORD PTR [r11-0x28],rax
   14000108a:	lea    rax,[r11+0x20]
   14000108e:	mov    QWORD PTR [r11-0x30],r9
   140001092:	movzx  r9d,dx
   140001096:	mov    edx,0x2b
   14000109b:	mov    QWORD PTR [r11-0x38],rax
   14000109f:	call   QWORD PTR [rip+0xaf5b]        # 0x14000c000
   1400010a5:	add    rsp,0x58
   1400010a9:	ret    
   1400010aa:	int3   
   1400010ab:	int3   
   1400010ac:	int3   
   1400010ad:	int3   
   1400010ae:	int3   
   1400010af:	int3   
   1400010b0:	mov    r11,rsp
   1400010b3:	mov    DWORD PTR [r11+0x20],r9d
   1400010b7:	sub    rsp,0x68
   1400010bb:	and    QWORD PTR [r11-0x18],0x0
   1400010c0:	lea    rax,[r11+0x30]
   1400010c4:	mov    r8d,0x14
   1400010ca:	movzx  r9d,r8w
   1400010ce:	lea    edx,[r8-0x10]
   1400010d2:	mov    QWORD PTR [r11-0x20],rdx
   1400010d6:	lea    r8,[rip+0xb713]        # 0x14000c7f0
   1400010dd:	mov    QWORD PTR [r11-0x28],rax
   1400010e1:	lea    rax,[r11+0x28]
   1400010e5:	mov    QWORD PTR [r11-0x30],rdx
   1400010e9:	mov    QWORD PTR [r11-0x38],rax
   1400010ed:	lea    rax,[r11+0x20]
   1400010f1:	mov    QWORD PTR [r11-0x40],rdx
   1400010f5:	mov    edx,0x2b
   1400010fa:	mov    QWORD PTR [r11-0x48],rax
   1400010fe:	call   QWORD PTR [rip+0xaefc]        # 0x14000c000
   140001104:	add    rsp,0x68
   140001108:	ret    
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	rex push rbp
   140001112:	push   rbx
   140001113:	push   rsi
   140001114:	push   rdi
   140001115:	push   r13
   140001117:	push   r14
   140001119:	push   r15
   14000111b:	mov    rbp,rsp
   14000111e:	sub    rsp,0x60
   140001122:	mov    rsi,r8
   140001125:	mov    r14,rdx
   140001128:	mov    rdi,rcx
   14000112b:	mov    rcx,QWORD PTR [rip+0xdeee]        # 0x14000f020
   140001132:	lea    rax,[rip+0xdee7]        # 0x14000f020
   140001139:	cmp    rcx,rax
   14000113c:	je     0x14000115c
   14000113e:	test   DWORD PTR [rcx+0x1c],0x20000000
   140001145:	je     0x14000115c
   140001147:	mov    rcx,QWORD PTR [rcx+0x10]
   14000114b:	lea    r8,[rip+0xb69e]        # 0x14000c7f0
   140001152:	mov    edx,0xa
   140001157:	call   0x140001008
   14000115c:	mov    r9d,0x1
   140001162:	lea    rdx,[rip+0xb5b7]        # 0x14000c720
   140001169:	lea    rcx,[rbp-0x40]
   14000116d:	lea    r8d,[r9+0x1c]
   140001171:	call   0x1400083e8
   140001176:	and    DWORD PTR [rbp+0x40],0x0
   14000117a:	xor    r13d,r13d
   14000117d:	and    DWORD PTR [rbp+0x48],r13d
   140001181:	xor    r15d,r15d
   140001184:	and    QWORD PTR [rbp+0x50],0x0
   140001189:	test   r14,r14
   14000118c:	je     0x140001191
   14000118e:	mov    DWORD PTR [r14],r13d
   140001191:	test   rsi,rsi
   140001194:	je     0x140001199
   140001196:	mov    DWORD PTR [rsi],r13d
   140001199:	mov    eax,0x2c
   14000119e:	test   rdi,rdi
   1400011a1:	jne    0x1400011b4
   1400011a3:	mov    ebx,0x80070057
   1400011a8:	mov    WORD PTR [rbp-0x3a],ax
   1400011ac:	mov    DWORD PTR [rbp-0x40],ebx
   1400011af:	jmp    0x14000139d
   1400011b4:	mov    WORD PTR [rbp-0x3c],ax
   1400011b8:	mov    eax,0x2d
   1400011bd:	test   r14,r14
   1400011c0:	je     0x1400011a3
   1400011c2:	and    DWORD PTR [rbp-0x40],r13d
   1400011c6:	lea    r8,[rbp+0x48]
   1400011ca:	mov    WORD PTR [rbp-0x3c],ax
   1400011ce:	call   0x1400051b4
   1400011d3:	mov    ebx,eax
   1400011d5:	mov    DWORD PTR [rbp-0x40],eax
   1400011d8:	test   eax,eax
   1400011da:	mov    eax,0x30
   1400011df:	jns    0x1400011ea
   1400011e1:	mov    WORD PTR [rbp-0x3a],ax
   1400011e5:	jmp    0x140001365
   1400011ea:	mov    WORD PTR [rbp-0x3c],ax
   1400011ee:	cmp    DWORD PTR [rbp+0x48],r13d
   1400011f2:	je     0x140001230
   1400011f4:	mov    rcx,QWORD PTR [rip+0xde25]        # 0x14000f020
   1400011fb:	lea    rax,[rip+0xde1e]        # 0x14000f020
   140001202:	cmp    rcx,rax
   140001205:	je     0x140001226
   140001207:	mov    ebx,0x8000000
   14000120c:	test   DWORD PTR [rcx+0x1c],ebx
   14000120f:	je     0x140001226
   140001211:	mov    rcx,QWORD PTR [rcx+0x10]
   140001215:	lea    r8,[rip+0xb5d4]        # 0x14000c7f0
   14000121c:	mov    edx,0xb
   140001221:	call   0x140001008
   140001226:	mov    eax,0x34
   14000122b:	jmp    0x140001359
   140001230:	mov    rax,QWORD PTR [rdi]
   140001233:	mov    rbx,QWORD PTR [rax+0x60]
   140001237:	mov    rcx,rbx
   14000123a:	call   QWORD PTR [rip+0xb150]        # 0x14000c390
   140001240:	lea    r9,[rbp+0x50]
   140001244:	xor    edx,edx
   140001246:	lea    r8,[rbp+0x40]
   14000124a:	mov    rcx,rdi
   14000124d:	call   rbx
   14000124f:	mov    ebx,eax
   140001251:	mov    DWORD PTR [rbp-0x40],eax
   140001254:	test   eax,eax
   140001256:	mov    eax,0x38
   14000125b:	js     0x1400011e1
   14000125d:	mov    WORD PTR [rbp-0x3c],ax
   140001261:	mov    rcx,QWORD PTR [rip+0xddb8]        # 0x14000f020
   140001268:	lea    r10,[rip+0xddb1]        # 0x14000f020
   14000126f:	mov    ebx,0x8000000
   140001274:	cmp    rcx,r10
   140001277:	je     0x1400012a3
   140001279:	test   DWORD PTR [rcx+0x1c],ebx
   14000127c:	je     0x1400012a3
   14000127e:	mov    r9d,DWORD PTR [rbp+0x40]
   140001282:	lea    edx,[rax-0x2c]
   140001285:	mov    rcx,QWORD PTR [rcx+0x10]
   140001289:	lea    r8,[rip+0xb560]        # 0x14000c7f0
   140001290:	call   0x14000102c
   140001295:	mov    rcx,QWORD PTR [rip+0xdd84]        # 0x14000f020
   14000129c:	lea    r10,[rip+0xdd7d]        # 0x14000f020
   1400012a3:	xor    edi,edi
   1400012a5:	cmp    DWORD PTR [rbp+0x40],edi
   1400012a8:	jbe    0x140001314
   1400012aa:	mov    r8,QWORD PTR [rip+0xb537]        # 0x14000c7e8
   1400012b1:	mov    r9,QWORD PTR [rip+0xb528]        # 0x14000c7e0
   1400012b8:	lea    rdx,[rdi+rdi*2]
   1400012bc:	shl    rdx,0x4
   1400012c0:	add    rdx,QWORD PTR [rbp+0x50]
   1400012c4:	cmp    QWORD PTR [rdx],r9
   1400012c7:	jne    0x1400012cf
   1400012c9:	cmp    QWORD PTR [rdx+0x8],r8
   1400012cd:	je     0x1400012d8
   1400012cf:	inc    edi
   1400012d1:	cmp    edi,DWORD PTR [rbp+0x40]
   1400012d4:	jae    0x140001314
   1400012d6:	jmp    0x1400012b8
   1400012d8:	cmp    rcx,r10
   1400012db:	je     0x1400012fe
   1400012dd:	test   DWORD PTR [rcx+0x1c],ebx
   1400012e0:	je     0x1400012fe
   1400012e2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400012e6:	lea    r8,[rip+0xb503]        # 0x14000c7f0
   1400012ed:	mov    edx,0xd
   1400012f2:	call   0x140001008
   1400012f7:	lea    r10,[rip+0xdd22]        # 0x14000f020
   1400012fe:	mov    rax,QWORD PTR [rbp+0x50]
   140001302:	lea    rcx,[rdi+rdi*2]
   140001306:	add    rcx,rcx
   140001309:	mov    r15d,0x1
   14000130f:	mov    r13d,DWORD PTR [rax+rcx*8+0x18]
   140001314:	mov    DWORD PTR [r14],r15d
   140001317:	test   rsi,rsi
   14000131a:	je     0x140001322
   14000131c:	lea    eax,[r13-0x1]
   140001320:	mov    DWORD PTR [rsi],eax
   140001322:	test   r15d,r15d
   140001325:	je     0x14000132e
   140001327:	xor    ebx,ebx
   140001329:	lea    eax,[rbx+0x53]
   14000132c:	jmp    0x14000135e
   14000132e:	mov    rcx,QWORD PTR [rip+0xdceb]        # 0x14000f020
   140001335:	cmp    rcx,r10
   140001338:	je     0x140001354
   14000133a:	test   DWORD PTR [rcx+0x1c],ebx
   14000133d:	je     0x140001354
   14000133f:	mov    rcx,QWORD PTR [rcx+0x10]
   140001343:	lea    r8,[rip+0xb4a6]        # 0x14000c7f0
   14000134a:	mov    edx,0xe
   14000134f:	call   0x140001008
   140001354:	mov    eax,0x57
   140001359:	mov    ebx,0x1
   14000135e:	mov    DWORD PTR [rbp-0x40],ebx
   140001361:	mov    WORD PTR [rbp-0x3c],ax
   140001365:	cmp    QWORD PTR [rbp+0x50],0x0
   14000136a:	je     0x14000139d
   14000136c:	xor    ebx,ebx
   14000136e:	cmp    DWORD PTR [rbp+0x40],ebx
   140001371:	jbe    0x14000138b
   140001373:	lea    rcx,[rbx+rbx*2]
   140001377:	shl    rcx,0x4
   14000137b:	add    rcx,QWORD PTR [rbp+0x50]
   14000137f:	call   0x1400053fc
   140001384:	inc    ebx
   140001386:	cmp    ebx,DWORD PTR [rbp+0x40]
   140001389:	jb     0x140001373
   14000138b:	mov    rcx,QWORD PTR [rbp+0x50]
   14000138f:	call   QWORD PTR [rip+0xafbb]        # 0x14000c350
   140001395:	and    QWORD PTR [rbp+0x50],0x0
   14000139a:	mov    ebx,DWORD PTR [rbp-0x40]
   14000139d:	lea    rcx,[rbp-0x40]
   1400013a1:	call   0x1400084f8
   1400013a6:	mov    eax,ebx
   1400013a8:	add    rsp,0x60
   1400013ac:	pop    r15
   1400013ae:	pop    r14
   1400013b0:	pop    r13
   1400013b2:	pop    rdi
   1400013b3:	pop    rsi
   1400013b4:	pop    rbx
   1400013b5:	pop    rbp
   1400013b6:	ret    
   1400013b7:	int3   
   1400013b8:	int3   
   1400013b9:	int3   
   1400013ba:	int3   
   1400013bb:	int3   
   1400013bc:	int3   
   1400013bd:	int3   
   1400013be:	int3   
   1400013bf:	int3   
   1400013c0:	mov    QWORD PTR [rsp+0x18],rbx
   1400013c5:	push   rbp
   1400013c6:	push   rsi
   1400013c7:	push   rdi
   1400013c8:	push   r12
   1400013ca:	push   r13
   1400013cc:	push   r14
   1400013ce:	push   r15
   1400013d0:	lea    rbp,[rsp-0x30]
   1400013d5:	sub    rsp,0x130
   1400013dc:	mov    rax,QWORD PTR [rip+0xdc25]        # 0x14000f008
   1400013e3:	xor    rax,rsp
   1400013e6:	mov    QWORD PTR [rbp+0x20],rax
   1400013ea:	mov    r12,rdx
   1400013ed:	mov    r13,rcx
   1400013f0:	mov    rcx,QWORD PTR [rip+0xdc29]        # 0x14000f020
   1400013f7:	lea    rax,[rip+0xdc22]        # 0x14000f020
   1400013fe:	cmp    rcx,rax
   140001401:	je     0x140001421
   140001403:	test   DWORD PTR [rcx+0x1c],0x20000000
   14000140a:	je     0x140001421
   14000140c:	mov    rcx,QWORD PTR [rcx+0x10]
   140001410:	lea    r8,[rip+0xb3d9]        # 0x14000c7f0
   140001417:	mov    edx,0xf
   14000141c:	call   0x140001008
   140001421:	mov    r9d,0x1
   140001427:	lea    rdx,[rip+0xb302]        # 0x14000c730
   14000142e:	lea    rcx,[rsp+0x48]
   140001433:	lea    r8d,[r9+0x6f]
   140001437:	call   0x1400083e8
   14000143c:	and    QWORD PTR [rsp+0x38],0x0
   140001442:	lea    rcx,[rbp-0x70]
   140001446:	and    QWORD PTR [rsp+0x40],0x0
   14000144c:	xor    r14d,r14d
   14000144f:	and    DWORD PTR [rsp+0x30],r14d
   140001454:	xor    edx,edx
   140001456:	mov    r8d,0x88
   14000145c:	xor    r15d,r15d
   14000145f:	call   0x14000b152
   140001464:	lea    eax,[r15+0x7a]
   140001468:	test   r13,r13
   14000146b:	jne    0x14000147b
   14000146d:	mov    esi,0x80070057
   140001472:	mov    DWORD PTR [rsp+0x48],esi
   140001476:	jmp    0x1400016dd
   14000147b:	mov    WORD PTR [rsp+0x4c],ax
   140001480:	mov    eax,0x7b
   140001485:	test   r12,r12
   140001488:	je     0x14000146d
   14000148a:	and    DWORD PTR [rsp+0x48],r14d
   14000148f:	lea    rcx,[rsp+0x38]
   140001494:	mov    WORD PTR [rsp+0x4c],ax
   140001499:	mov    DWORD PTR [r13+0x0],r14d
   14000149d:	mov    DWORD PTR [r12],r14d
   1400014a1:	call   QWORD PTR [rip+0xad71]        # 0x14000c218
   1400014a7:	mov    esi,eax
   1400014a9:	mov    DWORD PTR [rsp+0x48],eax
   1400014ad:	test   eax,eax
   1400014af:	mov    eax,0x7f
   1400014b4:	js     0x1400016dd
   1400014ba:	mov    rbx,QWORD PTR [rsp+0x38]
   1400014bf:	mov    WORD PTR [rsp+0x4c],ax
   1400014c4:	mov    rax,QWORD PTR [rbx]
   1400014c7:	mov    rdi,QWORD PTR [rax+0x28]
   1400014cb:	mov    rcx,rdi
   1400014ce:	call   QWORD PTR [rip+0xaebc]        # 0x14000c390
   1400014d4:	xor    edx,edx
   1400014d6:	mov    rcx,rbx
   1400014d9:	call   rdi
   1400014db:	mov    esi,eax
   1400014dd:	mov    DWORD PTR [rsp+0x48],eax
   1400014e1:	test   eax,eax
   1400014e3:	mov    eax,0x80
   1400014e8:	js     0x1400016dd
   1400014ee:	mov    rbx,QWORD PTR [rsp+0x38]
   1400014f3:	mov    WORD PTR [rsp+0x4c],ax
   1400014f8:	mov    rax,QWORD PTR [rbx]
   1400014fb:	mov    rdi,QWORD PTR [rax+0x118]
   140001502:	mov    rcx,rdi
   140001505:	call   QWORD PTR [rip+0xae85]        # 0x14000c390
   14000150b:	or     edx,0xffffffff
   14000150e:	mov    rcx,rbx
   140001511:	call   rdi
   140001513:	mov    esi,eax
   140001515:	mov    DWORD PTR [rsp+0x48],eax
   140001519:	test   eax,eax
   14000151b:	mov    eax,0x81
   140001520:	js     0x1400016dd
   140001526:	movups xmm0,XMMWORD PTR [rip+0xbc23]        # 0x14000d150
   14000152d:	mov    rbx,QWORD PTR [rsp+0x38]
   140001532:	mov    WORD PTR [rsp+0x4c],ax
   140001537:	movdqu XMMWORD PTR [rbp-0x80],xmm0
   14000153c:	mov    rax,QWORD PTR [rbx]
   14000153f:	mov    rdi,QWORD PTR [rax+0x158]
   140001546:	mov    rcx,rdi
   140001549:	call   QWORD PTR [rip+0xae41]        # 0x14000c390
   14000154f:	mov    r9d,0x3
   140001555:	lea    rax,[rsp+0x40]
   14000155a:	lea    rdx,[rbp-0x80]
   14000155e:	mov    QWORD PTR [rsp+0x20],rax
   140001563:	mov    rcx,rbx
   140001566:	lea    r8d,[r9-0x2]
   14000156a:	call   rdi
   14000156c:	mov    esi,eax
   14000156e:	test   eax,eax
   140001570:	js     0x140001643
   140001576:	lea    rcx,[rbp-0x68]
   14000157a:	call   QWORD PTR [rip+0xaca0]        # 0x14000c220
   140001580:	xor    edx,edx
   140001582:	lea    rcx,[rbp-0x70]
   140001586:	mov    r8d,0x88
   14000158c:	call   0x14000b152
   140001591:	mov    rbx,QWORD PTR [rsp+0x40]
   140001596:	mov    rax,QWORD PTR [rbx]
   140001599:	mov    rdi,QWORD PTR [rax+0x18]
   14000159d:	mov    rcx,rdi
   1400015a0:	call   QWORD PTR [rip+0xadea]        # 0x14000c390
   1400015a6:	mov    edx,0x1
   1400015ab:	jmp    0x140001618
   1400015ad:	mov    esi,0x1
   1400015b2:	mov    WORD PTR [rsp+0x4c],cx
   1400015b7:	cmp    eax,esi
   1400015b9:	je     0x140001681
   1400015bf:	cmp    DWORD PTR [rbp-0x70],0x3
   1400015c3:	jne    0x140001681
   1400015c9:	cmp    DWORD PTR [rsp+0x30],esi
   1400015cd:	jne    0x140001681
   1400015d3:	mov    rcx,QWORD PTR [rbp-0x38]
   1400015d7:	add    r15d,esi
   1400015da:	call   0x1400059bc
   1400015df:	test   eax,eax
   1400015e1:	jne    0x1400015e6
   1400015e3:	add    r14d,esi
   1400015e6:	lea    rcx,[rbp-0x68]
   1400015ea:	call   QWORD PTR [rip+0xac30]        # 0x14000c220
   1400015f0:	xor    edx,edx
   1400015f2:	lea    rcx,[rbp-0x70]
   1400015f6:	mov    r8d,0x88
   1400015fc:	call   0x14000b152
   140001601:	mov    rbx,QWORD PTR [rsp+0x40]
   140001606:	mov    rax,QWORD PTR [rbx]
   140001609:	mov    rdi,QWORD PTR [rax+0x18]
   14000160d:	mov    rcx,rdi
   140001610:	call   QWORD PTR [rip+0xad7a]        # 0x14000c390
   140001616:	mov    edx,esi
   140001618:	lea    r9,[rsp+0x30]
   14000161d:	mov    rcx,rbx
   140001620:	lea    r8,[rbp-0x70]
   140001624:	call   rdi
   140001626:	mov    DWORD PTR [rsp+0x48],eax
   14000162a:	mov    ecx,0x8b
   14000162f:	mov    esi,eax
   140001631:	test   eax,eax
   140001633:	jns    0x1400015ad
   140001639:	mov    WORD PTR [rsp+0x4e],cx
   14000163e:	jmp    0x1400016e2
   140001643:	cmp    eax,0x80042308
   140001648:	jne    0x1400016d4
   14000164e:	mov    rcx,QWORD PTR [rip+0xd9cb]        # 0x14000f020
   140001655:	lea    rbx,[rip+0xd9c4]        # 0x14000f020
   14000165c:	cmp    rcx,rbx
   14000165f:	je     0x140001688
   140001661:	test   DWORD PTR [rcx+0x1c],0x8000000
   140001668:	je     0x140001688
   14000166a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000166e:	lea    r8,[rip+0xb17b]        # 0x14000c7f0
   140001675:	mov    edx,0x10
   14000167a:	call   0x140001008
   14000167f:	jmp    0x140001688
   140001681:	lea    rbx,[rip+0xd998]        # 0x14000f020
   140001688:	mov    DWORD PTR [r13+0x0],r15d
   14000168c:	mov    DWORD PTR [r12],r14d
   140001690:	mov    rcx,QWORD PTR [rip+0xd989]        # 0x14000f020
   140001697:	cmp    rcx,rbx
   14000169a:	je     0x1400016c2
   14000169c:	test   DWORD PTR [rcx+0x1c],0x8000000
   1400016a3:	je     0x1400016c2
   1400016a5:	mov    rcx,QWORD PTR [rcx+0x10]
   1400016a9:	lea    r8,[rip+0xb140]        # 0x14000c7f0
   1400016b0:	mov    edx,0x11
   1400016b5:	mov    DWORD PTR [rsp+0x20],r14d
   1400016ba:	mov    r9d,r15d
   1400016bd:	call   0x140001068
   1400016c2:	xor    esi,esi
   1400016c4:	mov    eax,0xb6
   1400016c9:	mov    DWORD PTR [rsp+0x48],esi
   1400016cd:	mov    WORD PTR [rsp+0x4c],ax
   1400016d2:	jmp    0x1400016e2
   1400016d4:	mov    DWORD PTR [rsp+0x48],eax
   1400016d8:	mov    eax,0xaa
   1400016dd:	mov    WORD PTR [rsp+0x4e],ax
   1400016e2:	cmp    DWORD PTR [rbp-0x70],0x3
   1400016e6:	jne    0x140001707
   1400016e8:	lea    rcx,[rbp-0x68]
   1400016ec:	call   QWORD PTR [rip+0xab2e]        # 0x14000c220
   1400016f2:	xor    edx,edx
   1400016f4:	lea    rcx,[rbp-0x70]
   1400016f8:	mov    r8d,0x88
   1400016fe:	call   0x14000b152
   140001703:	mov    esi,DWORD PTR [rsp+0x48]
   140001707:	mov    rbx,QWORD PTR [rsp+0x40]
   14000170c:	test   rbx,rbx
   14000170f:	je     0x140001726
   140001711:	mov    rax,QWORD PTR [rbx]
   140001714:	mov    rdi,QWORD PTR [rax+0x10]
   140001718:	mov    rcx,rdi
   14000171b:	call   QWORD PTR [rip+0xac6f]        # 0x14000c390
   140001721:	mov    rcx,rbx
   140001724:	call   rdi
   140001726:	mov    rbx,QWORD PTR [rsp+0x38]
   14000172b:	test   rbx,rbx
   14000172e:	je     0x140001745
   140001730:	mov    rcx,QWORD PTR [rbx]
   140001733:	mov    rdi,QWORD PTR [rcx+0x10]
   140001737:	mov    rcx,rdi
   14000173a:	call   QWORD PTR [rip+0xac50]        # 0x14000c390
   140001740:	mov    rcx,rbx
   140001743:	call   rdi
   140001745:	lea    rcx,[rsp+0x48]
   14000174a:	call   0x1400084f8
   14000174f:	mov    eax,esi
   140001751:	mov    rcx,QWORD PTR [rbp+0x20]
   140001755:	xor    rcx,rsp
   140001758:	call   0x14000ab80
   14000175d:	mov    rbx,QWORD PTR [rsp+0x180]
   140001765:	add    rsp,0x130
   14000176c:	pop    r15
   14000176e:	pop    r14
   140001770:	pop    r13
   140001772:	pop    r12
   140001774:	pop    rdi
   140001775:	pop    rsi
   140001776:	pop    rbp
   140001777:	ret    
   140001778:	int3   
   140001779:	int3   
   14000177a:	int3   
   14000177b:	int3   
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	mov    QWORD PTR [rsp+0x10],rbx
   140001785:	mov    QWORD PTR [rsp+0x18],rdi
   14000178a:	push   rbp
   14000178b:	mov    rbp,rsp
   14000178e:	sub    rsp,0x60
   140001792:	mov    rdi,rcx
   140001795:	mov    rcx,QWORD PTR [rip+0xd884]        # 0x14000f020
   14000179c:	lea    rax,[rip+0xd87d]        # 0x14000f020
   1400017a3:	cmp    rcx,rax
   1400017a6:	je     0x1400017c6
   1400017a8:	test   DWORD PTR [rcx+0x1c],0x20000000
   1400017af:	je     0x1400017c6
   1400017b1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400017b5:	lea    r8,[rip+0xb034]        # 0x14000c7f0
   1400017bc:	mov    edx,0x12
   1400017c1:	call   0x140001008
   1400017c6:	mov    r9d,0x1
   1400017cc:	lea    rdx,[rip+0xaf75]        # 0x14000c748
   1400017d3:	mov    r8d,0xcf
   1400017d9:	lea    rcx,[rbp-0x40]
   1400017dd:	call   0x1400083e8
   1400017e2:	mov    eax,0xd1
   1400017e7:	test   rdi,rdi
   1400017ea:	jne    0x1400017f7
   1400017ec:	mov    ebx,0x80070057
   1400017f1:	mov    WORD PTR [rbp-0x3a],ax
   1400017f5:	jmp    0x140001834
   1400017f7:	and    DWORD PTR [rbp-0x40],0x0
   1400017fb:	xor    ebx,ebx
   1400017fd:	mov    WORD PTR [rbp-0x3c],ax
   140001801:	cmp    DWORD PTR [rdi+0x58],ebx
   140001804:	jbe    0x140001826
   140001806:	mov    rcx,QWORD PTR [rdi+0x60]
   14000180a:	lea    rdx,[rbx+rbx*2]
   14000180e:	add    rdx,rdx
   140001811:	mov    rcx,QWORD PTR [rcx+rdx*8+0x10]
   140001816:	call   0x1400059bc
   14000181b:	test   eax,eax
   14000181d:	je     0x140001854
   14000181f:	inc    ebx
   140001821:	cmp    ebx,DWORD PTR [rdi+0x58]
   140001824:	jb     0x140001806
   140001826:	mov    eax,0xe6
   14000182b:	mov    ebx,0x1
   140001830:	mov    WORD PTR [rbp-0x3c],ax
   140001834:	mov    DWORD PTR [rbp-0x40],ebx
   140001837:	lea    rcx,[rbp-0x40]
   14000183b:	call   0x1400084f8
   140001840:	lea    r11,[rsp+0x60]
   140001845:	mov    eax,ebx
   140001847:	mov    rbx,QWORD PTR [r11+0x18]
   14000184b:	mov    rdi,QWORD PTR [r11+0x20]
   14000184f:	mov    rsp,r11
   140001852:	pop    rbp
   140001853:	ret    
   140001854:	mov    rcx,QWORD PTR [rdi+0x60]
   140001858:	lea    r8,[rbx+rbx*2]
   14000185c:	add    r8,r8
   14000185f:	mov    BYTE PTR [rbp+0x10],0x0
   140001863:	lea    rdx,[rbp+0x10]
   140001867:	mov    rcx,QWORD PTR [rcx+r8*8+0x18]
   14000186c:	call   0x140005f08
   140001871:	mov    DWORD PTR [rbp-0x40],eax
   140001874:	mov    ebx,eax
   140001876:	test   eax,eax
   140001878:	jns    0x140001885
   14000187a:	mov    eax,0xd8
   14000187f:	mov    WORD PTR [rbp-0x3a],ax
   140001883:	jmp    0x140001837
   140001885:	cmp    BYTE PTR [rbp+0x10],0x0
   140001889:	je     0x140001894
   14000188b:	xor    ebx,ebx
   14000188d:	mov    eax,0xdd
   140001892:	jmp    0x140001830
   140001894:	mov    eax,0xe1
   140001899:	jmp    0x14000182b
   14000189b:	int3   
   14000189c:	int3   
   14000189d:	int3   
   14000189e:	int3   
   14000189f:	int3   
   1400018a0:	int3   
   1400018a1:	int3   
   1400018a2:	int3   
   1400018a3:	int3   
   1400018a4:	mov    QWORD PTR [rsp+0x10],rbx
   1400018a9:	push   rbp
   1400018aa:	push   rsi
   1400018ab:	push   rdi
   1400018ac:	push   r12
   1400018ae:	push   r13
   1400018b0:	push   r14
   1400018b2:	push   r15
   1400018b4:	mov    rbp,rsp
   1400018b7:	sub    rsp,0x70
   1400018bb:	mov    r15,r8
   1400018be:	mov    r12,rdx
   1400018c1:	mov    r13,rcx
   1400018c4:	mov    rcx,QWORD PTR [rip+0xd755]        # 0x14000f020
   1400018cb:	lea    rax,[rip+0xd74e]        # 0x14000f020
   1400018d2:	cmp    rcx,rax
   1400018d5:	je     0x1400018f5
   1400018d7:	test   DWORD PTR [rcx+0x1c],0x20000000
   1400018de:	je     0x1400018f5
   1400018e0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400018e4:	lea    r8,[rip+0xaf05]        # 0x14000c7f0
   1400018eb:	mov    edx,0x13
   1400018f0:	call   0x140001008
   1400018f5:	mov    edi,0x1
   1400018fa:	lea    rdx,[rip+0xae57]        # 0x14000c758
   140001901:	mov    r9d,edi
   140001904:	lea    rcx,[rbp-0x38]
   140001908:	mov    r8d,0xf7
   14000190e:	call   0x1400083e8
   140001913:	xor    ebx,ebx
   140001915:	mov    eax,0x101
   14000191a:	mov    QWORD PTR [rbp-0x40],rbx
   14000191e:	mov    esi,ebx
   140001920:	mov    DWORD PTR [rbp+0x40],ebx
   140001923:	mov    r14d,ebx
   140001926:	mov    QWORD PTR [rbp+0x58],rbx
   14000192a:	test   r13,r13
   14000192d:	jne    0x14000193f
   14000192f:	mov    DWORD PTR [rbp-0x38],0x80070057
   140001936:	mov    WORD PTR [rbp-0x32],ax
   14000193a:	jmp    0x140001a43
   14000193f:	mov    WORD PTR [rbp-0x34],ax
   140001943:	mov    eax,0x102
   140001948:	test   r12,r12
   14000194b:	je     0x14000192f
   14000194d:	mov    WORD PTR [rbp-0x34],ax
   140001951:	mov    eax,0x103
   140001956:	test   r15,r15
   140001959:	je     0x14000192f
   14000195b:	mov    WORD PTR [rbp-0x34],ax
   14000195f:	lea    r9,[rip+0xb242]        # 0x14000cba8
   140001966:	mov    DWORD PTR [rbp-0x38],ebx
   140001969:	lea    rax,[rbp-0x40]
   14000196d:	mov    DWORD PTR [r13+0x0],ebx
   140001971:	lea    rcx,[rip+0xb220]        # 0x14000cb98
   140001978:	mov    DWORD PTR [r12],ebx
   14000197c:	mov    r8d,edi
   14000197f:	xor    edx,edx
   140001981:	mov    DWORD PTR [r15],ebx
   140001984:	mov    QWORD PTR [rsp+0x20],rax
   140001989:	call   QWORD PTR [rip+0xa9c9]        # 0x14000c358
   14000198f:	mov    DWORD PTR [rbp-0x38],eax
   140001992:	test   eax,eax
   140001994:	mov    eax,0x108
   140001999:	js     0x140001936
   14000199b:	mov    rbx,QWORD PTR [rbp-0x40]
   14000199f:	mov    WORD PTR [rbp-0x34],ax
   1400019a3:	mov    rax,QWORD PTR [rbx]
   1400019a6:	mov    rdi,QWORD PTR [rax+0x20]
   1400019aa:	mov    rcx,rdi
   1400019ad:	call   QWORD PTR [rip+0xa9dd]        # 0x14000c390
   1400019b3:	lea    r8,[rbp+0x58]
   1400019b7:	mov    rcx,rbx
   1400019ba:	lea    rdx,[rbp+0x40]
   1400019be:	call   rdi
   1400019c0:	mov    DWORD PTR [rbp-0x38],eax
   1400019c3:	test   eax,eax
   1400019c5:	mov    eax,0x109
   1400019ca:	js     0x140001936
   1400019d0:	mov    edi,DWORD PTR [rbp+0x40]
   1400019d3:	xor    ebx,ebx
   1400019d5:	mov    WORD PTR [rbp-0x34],ax
   1400019d9:	test   edi,edi
   1400019db:	je     0x140001a07
   1400019dd:	mov    eax,ebx
   1400019df:	imul   rcx,rax,0x98
   1400019e6:	add    rcx,QWORD PTR [rbp+0x58]
   1400019ea:	cmp    DWORD PTR [rcx+0x20],0xf
   1400019ee:	jne    0x1400019f4
   1400019f0:	inc    esi
   1400019f2:	jmp    0x140001a00
   1400019f4:	call   0x140001780
   1400019f9:	test   eax,eax
   1400019fb:	je     0x140001a00
   1400019fd:	inc    r14d
   140001a00:	inc    ebx
   140001a02:	cmp    ebx,DWORD PTR [rbp+0x40]
   140001a05:	jb     0x1400019dd
   140001a07:	mov    rcx,QWORD PTR [rip+0xd612]        # 0x14000f020
   140001a0e:	lea    rax,[rip+0xd60b]        # 0x14000f020
   140001a15:	cmp    rcx,rax
   140001a18:	je     0x140001a38
   140001a1a:	test   DWORD PTR [rcx+0x1c],0x8000000
   140001a21:	je     0x140001a38
   140001a23:	mov    rcx,QWORD PTR [rcx+0x10]
   140001a27:	mov    r9d,edi
   140001a2a:	mov    DWORD PTR [rsp+0x28],r14d
   140001a2f:	mov    DWORD PTR [rsp+0x20],esi
   140001a33:	call   0x1400010b0
   140001a38:	mov    DWORD PTR [r13+0x0],edi
   140001a3c:	mov    DWORD PTR [r12],esi
   140001a40:	mov    DWORD PTR [r15],r14d
   140001a43:	mov    ecx,DWORD PTR [rbp+0x40]
   140001a46:	lea    rdx,[rbp+0x58]
   140001a4a:	call   QWORD PTR [rip+0xa7a8]        # 0x14000c1f8
   140001a50:	mov    rbx,QWORD PTR [rbp-0x40]
   140001a54:	mov    esi,DWORD PTR [rbp-0x38]
   140001a57:	test   rbx,rbx
   140001a5a:	je     0x140001a71
   140001a5c:	mov    rcx,QWORD PTR [rbx]
   140001a5f:	mov    rdi,QWORD PTR [rcx+0x10]
   140001a63:	mov    rcx,rdi
   140001a66:	call   QWORD PTR [rip+0xa924]        # 0x14000c390
   140001a6c:	mov    rcx,rbx
   140001a6f:	call   rdi
   140001a71:	lea    rcx,[rbp-0x38]
   140001a75:	call   0x1400084f8
   140001a7a:	mov    rbx,QWORD PTR [rsp+0xb8]
   140001a82:	mov    eax,esi
   140001a84:	add    rsp,0x70
   140001a88:	pop    r15
   140001a8a:	pop    r14
   140001a8c:	pop    r13
   140001a8e:	pop    r12
   140001a90:	pop    rdi
   140001a91:	pop    rsi
   140001a92:	pop    rbp
   140001a93:	ret    
   140001a94:	int3   
   140001a95:	int3   
   140001a96:	int3   
   140001a97:	int3   
   140001a98:	int3   
   140001a99:	int3   
   140001a9a:	int3   
   140001a9b:	int3   
   140001a9c:	rex push rbp
   140001a9e:	push   rbx
   140001a9f:	push   rsi
   140001aa0:	push   rdi
   140001aa1:	push   r12
   140001aa3:	push   r13
   140001aa5:	push   r14
   140001aa7:	push   r15
   140001aa9:	lea    rbp,[rsp-0x1a8]
   140001ab1:	sub    rsp,0x2a8
   140001ab8:	mov    rax,QWORD PTR [rip+0xd549]        # 0x14000f008
   140001abf:	xor    rax,rsp
   140001ac2:	mov    QWORD PTR [rbp+0x190],rax
   140001ac9:	mov    r14,r9
   140001acc:	mov    rsi,r8
   140001acf:	mov    rdi,rdx
   140001ad2:	mov    r12,rcx
   140001ad5:	mov    rcx,QWORD PTR [rip+0xd544]        # 0x14000f020
   140001adc:	lea    rax,[rip+0xd53d]        # 0x14000f020
   140001ae3:	cmp    rcx,rax
   140001ae6:	je     0x140001b06
   140001ae8:	test   DWORD PTR [rcx+0x1c],0x20000000
   140001aef:	je     0x140001b06
   140001af1:	mov    rcx,QWORD PTR [rcx+0x10]
   140001af5:	lea    r8,[rip+0xacf4]        # 0x14000c7f0
   140001afc:	mov    edx,0x15
   140001b01:	call   0x140001008
   140001b06:	mov    r9d,0x1
   140001b0c:	lea    rdx,[rip+0xac5d]        # 0x14000c770
   140001b13:	mov    r8d,0x132
   140001b19:	lea    rcx,[rsp+0x38]
   140001b1e:	call   0x1400083e8
   140001b23:	xor    r13d,r13d
   140001b26:	lea    rcx,[rbp-0x7e]
   140001b2a:	xor    edx,edx
   140001b2c:	mov    WORD PTR [rbp-0x80],r13w
   140001b31:	mov    r8d,0x208
   140001b37:	call   0x14000b152
   140001b3c:	mov    QWORD PTR [rsp+0x28],r13
   140001b41:	mov    eax,0x140
   140001b46:	mov    QWORD PTR [rsp+0x20],r13
   140001b4b:	mov    QWORD PTR [rsp+0x70],r13
   140001b50:	mov    QWORD PTR [rsp+0x30],r13
   140001b55:	mov    QWORD PTR [rsp+0x78],r13
   140001b5a:	test   r12,r12
   140001b5d:	jne    0x140001b71
   140001b5f:	mov    DWORD PTR [rsp+0x38],0x80070057
   140001b67:	mov    WORD PTR [rsp+0x3e],ax
   140001b6c:	jmp    0x140001d43
   140001b71:	mov    WORD PTR [rsp+0x3c],ax
   140001b76:	mov    eax,0x141
   140001b7b:	test   rdi,rdi
   140001b7e:	je     0x140001b5f
   140001b80:	mov    WORD PTR [rsp+0x3c],ax
   140001b85:	mov    eax,0x142
   140001b8a:	test   rsi,rsi
   140001b8d:	je     0x140001b5f
   140001b8f:	mov    WORD PTR [rsp+0x3c],ax
   140001b94:	mov    eax,0x143
   140001b99:	test   r14,r14
   140001b9c:	je     0x140001b5f
   140001b9e:	mov    DWORD PTR [rsp+0x38],r13d
   140001ba3:	lea    rcx,[rbp-0x80]
   140001ba7:	mov    WORD PTR [rsp+0x3c],ax
   140001bac:	mov    DWORD PTR [r12],r13d
   140001bb0:	mov    DWORD PTR [rdi],r13d
   140001bb3:	mov    DWORD PTR [rsi],r13d
   140001bb6:	mov    DWORD PTR [r14],r13d
   140001bb9:	call   0x140005bc0
   140001bbe:	mov    DWORD PTR [rsp+0x38],eax
   140001bc2:	test   eax,eax
   140001bc4:	mov    eax,0x149
   140001bc9:	js     0x140001b67
   140001bcb:	lea    r9,[rsp+0x20]
   140001bd0:	mov    WORD PTR [rsp+0x3c],ax
   140001bd5:	lea    r8,[rsp+0x28]
   140001bda:	xor    edx,edx
   140001bdc:	lea    rcx,[rbp-0x80]
   140001be0:	call   QWORD PTR [rip+0xa562]        # 0x14000c148
   140001be6:	test   eax,eax
   140001be8:	jne    0x140001bfd
   140001bea:	call   0x1400063e4
   140001bef:	mov    DWORD PTR [rsp+0x38],eax
   140001bf3:	mov    eax,0x14c
   140001bf8:	jmp    0x140001b67
   140001bfd:	mov    rbx,QWORD PTR [rsp+0x28]
   140001c02:	lea    r9,[rsp+0x78]
   140001c07:	mov    r15,rbx
   140001c0a:	mov    DWORD PTR [rsp+0x38],r13d
   140001c0f:	sub    rbx,QWORD PTR [rsp+0x20]
   140001c14:	lea    r8,[rsp+0x30]
   140001c19:	mov    eax,0x14c
   140001c1e:	shr    rbx,0x14
   140001c22:	lea    rdx,[rsp+0x70]
   140001c27:	mov    WORD PTR [rsp+0x3c],ax
   140001c2c:	lea    rcx,[rbp-0x80]
   140001c30:	shr    r15,0x14
   140001c34:	call   0x140005d2c
   140001c39:	mov    DWORD PTR [rsp+0x38],eax
   140001c3d:	test   eax,eax
   140001c3f:	mov    eax,0x153
   140001c44:	js     0x140001b67
   140001c4a:	mov    WORD PTR [rsp+0x3c],ax
   140001c4f:	mov    r8d,0xfffff
   140001c55:	mov    rax,QWORD PTR [rsp+0x78]
   140001c5a:	cqo    
   140001c5c:	mov    DWORD PTR [r12],r15d
   140001c60:	and    rdx,r8
   140001c63:	mov    DWORD PTR [rdi],ebx
   140001c65:	add    rax,rdx
   140001c68:	sar    rax,0x14
   140001c6c:	mov    rcx,rax
   140001c6f:	mov    QWORD PTR [rsp+0x30],rax
   140001c74:	mov    rax,QWORD PTR [rsp+0x70]
   140001c79:	cqo    
   140001c7b:	mov    DWORD PTR [rsi],ecx
   140001c7d:	and    rdx,r8
   140001c80:	add    rax,rdx
   140001c83:	sar    rax,0x14
   140001c87:	mov    r13,rax
   140001c8a:	mov    DWORD PTR [r14],eax
   140001c8d:	mov    rcx,QWORD PTR [rip+0xd38c]        # 0x14000f020
   140001c94:	lea    rsi,[rip+0xd385]        # 0x14000f020
   140001c9b:	cmp    rcx,rsi
   140001c9e:	je     0x140001d43
   140001ca4:	mov    edi,0x8000000
   140001ca9:	test   DWORD PTR [rcx+0x1c],edi
   140001cac:	je     0x140001ccd
   140001cae:	mov    rcx,QWORD PTR [rcx+0x10]
   140001cb2:	lea    r8,[rip+0xab37]        # 0x14000c7f0
   140001cb9:	mov    edx,0x16
   140001cbe:	mov    r9d,r15d
   140001cc1:	call   0x14000102c
   140001cc6:	mov    rcx,QWORD PTR [rip+0xd353]        # 0x14000f020
   140001ccd:	cmp    rcx,rsi
   140001cd0:	je     0x140001d43
   140001cd2:	test   DWORD PTR [rcx+0x1c],edi
   140001cd5:	je     0x140001cf6
   140001cd7:	mov    rcx,QWORD PTR [rcx+0x10]
   140001cdb:	lea    r8,[rip+0xab0e]        # 0x14000c7f0
   140001ce2:	mov    edx,0x17
   140001ce7:	mov    r9d,ebx
   140001cea:	call   0x14000102c
   140001cef:	mov    rcx,QWORD PTR [rip+0xd32a]        # 0x14000f020
   140001cf6:	cmp    rcx,rsi
   140001cf9:	je     0x140001d43
   140001cfb:	test   DWORD PTR [rcx+0x1c],edi
   140001cfe:	je     0x140001d21
   140001d00:	mov    r9d,DWORD PTR [rsp+0x30]
   140001d05:	lea    r8,[rip+0xaae4]        # 0x14000c7f0
   140001d0c:	mov    rcx,QWORD PTR [rcx+0x10]
   140001d10:	mov    edx,0x18
   140001d15:	call   0x14000102c
   140001d1a:	mov    rcx,QWORD PTR [rip+0xd2ff]        # 0x14000f020
   140001d21:	cmp    rcx,rsi
   140001d24:	je     0x140001d43
   140001d26:	test   DWORD PTR [rcx+0x1c],edi
   140001d29:	je     0x140001d43
   140001d2b:	mov    rcx,QWORD PTR [rcx+0x10]
   140001d2f:	lea    r8,[rip+0xaaba]        # 0x14000c7f0
   140001d36:	mov    edx,0x19
   140001d3b:	mov    r9d,r13d
   140001d3e:	call   0x14000102c
   140001d43:	mov    ebx,DWORD PTR [rsp+0x38]
   140001d47:	lea    rcx,[rsp+0x38]
   140001d4c:	call   0x1400084f8
   140001d51:	mov    eax,ebx
   140001d53:	mov    rcx,QWORD PTR [rbp+0x190]
   140001d5a:	xor    rcx,rsp
   140001d5d:	call   0x14000ab80
   140001d62:	add    rsp,0x2a8
   140001d69:	pop    r15
   140001d6b:	pop    r14
   140001d6d:	pop    r13
   140001d6f:	pop    r12
   140001d71:	pop    rdi
   140001d72:	pop    rsi
   140001d73:	pop    rbx
   140001d74:	pop    rbp
   140001d75:	ret    
   140001d76:	int3   
   140001d77:	int3   
   140001d78:	int3   
   140001d79:	int3   
   140001d7a:	int3   
   140001d7b:	int3   
   140001d7c:	rex push rbp
   140001d7e:	push   rbx
   140001d7f:	push   rsi
   140001d80:	push   rdi
   140001d81:	push   r15
   140001d83:	mov    rbp,rsp
   140001d86:	sub    rsp,0x70
   140001d8a:	mov    rdi,rcx
   140001d8d:	mov    rcx,QWORD PTR [rip+0xd28c]        # 0x14000f020
   140001d94:	lea    r15,[rip+0xd285]        # 0x14000f020
   140001d9b:	cmp    rcx,r15
   140001d9e:	je     0x140001dbe
   140001da0:	test   DWORD PTR [rcx+0x1c],0x20000000
   140001da7:	je     0x140001dbe
   140001da9:	mov    rcx,QWORD PTR [rcx+0x10]
   140001dad:	lea    r8,[rip+0xaa3c]        # 0x14000c7f0
   140001db4:	mov    edx,0x1a
   140001db9:	call   0x140001008
   140001dbe:	mov    r9d,0x1
   140001dc4:	lea    rdx,[rip+0xa9bd]        # 0x14000c788
   140001dcb:	mov    r8d,0x16f
   140001dd1:	lea    rcx,[rbp-0x40]
   140001dd5:	call   0x1400083e8
   140001dda:	and    QWORD PTR [rbp+0x30],0x0
   140001ddf:	xor    esi,esi
   140001de1:	and    DWORD PTR [rbp+0x40],esi
   140001de4:	mov    eax,0x177
   140001de9:	and    DWORD PTR [rbp+0x44],esi
   140001dec:	and    DWORD PTR [rbp+0x38],esi
   140001def:	and    DWORD PTR [rbp+0x3c],esi
   140001df2:	and    QWORD PTR [rbp+0x48],rsi
   140001df6:	test   rdi,rdi
   140001df9:	jne    0x140001e0c
   140001dfb:	mov    ebx,0x80070057
   140001e00:	mov    WORD PTR [rbp-0x3a],ax
   140001e04:	mov    DWORD PTR [rbp-0x40],ebx
   140001e07:	jmp    0x140001f46
   140001e0c:	and    DWORD PTR [rbp-0x40],esi
   140001e0f:	lea    rcx,[rbp+0x40]
   140001e13:	mov    WORD PTR [rbp-0x3c],ax
   140001e17:	mov    DWORD PTR [rdi],esi
   140001e19:	call   QWORD PTR [rip+0xa321]        # 0x14000c140
   140001e1f:	mov    eax,DWORD PTR [rbp+0x44]
   140001e22:	mov    rcx,QWORD PTR [rbp+0x30]
   140001e26:	mov    DWORD PTR [rbp+0x3c],eax
   140001e29:	mov    eax,DWORD PTR [rbp+0x40]
   140001e2c:	mov    DWORD PTR [rbp+0x38],eax
   140001e2f:	lea    rax,[rcx-0x1]
   140001e33:	cmp    rax,0xfffffffffffffffd
   140001e37:	ja     0x140001e43
   140001e39:	call   QWORD PTR [rip+0xa1d1]        # 0x14000c010
   140001e3f:	and    QWORD PTR [rbp+0x30],rsi
   140001e43:	lea    rax,[rbp+0x30]
   140001e47:	mov    r9d,0x2001f
   140001e4d:	xor    r8d,r8d
   140001e50:	mov    QWORD PTR [rsp+0x20],rax
   140001e55:	lea    rdx,[rip+0xa5d4]        # 0x14000c430
   140001e5c:	mov    rcx,0xffffffff80000002
   140001e63:	call   QWORD PTR [rip+0xa19f]        # 0x14000c008
   140001e69:	movzx  ebx,ax
   140001e6c:	or     ebx,0x80070000
   140001e72:	test   eax,eax
   140001e74:	cmovle ebx,eax
   140001e77:	mov    eax,0x17e
   140001e7c:	mov    DWORD PTR [rbp-0x40],ebx
   140001e7f:	test   ebx,ebx
   140001e81:	jns    0x140001e8c
   140001e83:	mov    WORD PTR [rbp-0x3a],ax
   140001e87:	jmp    0x140001f14
   140001e8c:	mov    rcx,QWORD PTR [rbp+0x30]
   140001e90:	lea    r8,[rbp+0x48]
   140001e94:	lea    rdx,[rip+0xa7a5]        # 0x14000c640
   140001e9b:	mov    WORD PTR [rbp-0x3c],ax
   140001e9f:	call   0x140004fc0
   140001ea4:	test   eax,eax
   140001ea6:	jne    0x140001eef
   140001ea8:	mov    rax,QWORD PTR [rbp+0x38]
   140001eac:	xor    edx,edx
   140001eae:	sub    rax,QWORD PTR [rbp+0x48]
   140001eb2:	movabs rcx,0xc92a69c000
   140001ebc:	div    rcx
   140001ebf:	mov    rsi,rax
   140001ec2:	mov    rcx,QWORD PTR [rip+0xd157]        # 0x14000f020
   140001ec9:	cmp    rcx,r15
   140001ecc:	je     0x140001eef
   140001ece:	test   DWORD PTR [rcx+0x1c],0x8000000
   140001ed5:	je     0x140001eef
   140001ed7:	mov    rcx,QWORD PTR [rcx+0x10]
   140001edb:	lea    r8,[rip+0xa90e]        # 0x14000c7f0
   140001ee2:	mov    edx,0x1b
   140001ee7:	mov    r9d,eax
   140001eea:	call   0x14000102c
   140001eef:	mov    r8,QWORD PTR [rbp+0x38]
   140001ef3:	mov    rcx,QWORD PTR [rbp+0x30]
   140001ef7:	call   0x1400050f8
   140001efc:	mov    ebx,eax
   140001efe:	mov    DWORD PTR [rbp-0x40],eax
   140001f01:	test   eax,eax
   140001f03:	mov    eax,0x189
   140001f08:	js     0x140001e83
   140001f0e:	mov    WORD PTR [rbp-0x3c],ax
   140001f12:	mov    DWORD PTR [rdi],esi
   140001f14:	mov    rcx,QWORD PTR [rbp+0x30]
   140001f18:	lea    rax,[rcx-0x1]
   140001f1c:	cmp    rax,0xfffffffffffffffd
   140001f20:	ja     0x140001f31
   140001f22:	call   QWORD PTR [rip+0xa0e8]        # 0x14000c010
   140001f28:	mov    ebx,DWORD PTR [rbp-0x40]
   140001f2b:	xor    ecx,ecx
   140001f2d:	mov    QWORD PTR [rbp+0x30],rcx
   140001f31:	lea    rdx,[rcx-0x1]
   140001f35:	cmp    rdx,0xfffffffffffffffd
   140001f39:	ja     0x140001f46
   140001f3b:	call   QWORD PTR [rip+0xa0cf]        # 0x14000c010
   140001f41:	and    QWORD PTR [rbp+0x30],0x0
   140001f46:	lea    rcx,[rbp-0x40]
   140001f4a:	call   0x1400084f8
   140001f4f:	mov    eax,ebx
   140001f51:	add    rsp,0x70
   140001f55:	pop    r15
   140001f57:	pop    rdi
   140001f58:	pop    rsi
   140001f59:	pop    rbx
   140001f5a:	pop    rbp
   140001f5b:	ret    
   140001f5c:	int3   
   140001f5d:	int3   
   140001f5e:	int3   
   140001f5f:	int3   
   140001f60:	int3   
   140001f61:	int3   
   140001f62:	int3   
   140001f63:	int3   
   140001f64:	mov    QWORD PTR [rsp+0x10],rbx
   140001f69:	mov    QWORD PTR [rsp+0x18],rsi
   140001f6e:	mov    QWORD PTR [rsp+0x20],rdi
   140001f73:	push   rbp
   140001f74:	push   r14
   140001f76:	push   r15
   140001f78:	mov    rbp,rsp
   140001f7b:	sub    rsp,0x80
   140001f82:	mov    rsi,r9
   140001f85:	mov    r14,r8
   140001f88:	mov    rdi,rdx
   140001f8b:	mov    r15,rcx
   140001f8e:	mov    rcx,QWORD PTR [rip+0xd08b]        # 0x14000f020
   140001f95:	lea    rax,[rip+0xd084]        # 0x14000f020
   140001f9c:	cmp    rcx,rax
   140001f9f:	je     0x140001fbf
   140001fa1:	test   DWORD PTR [rcx+0x1c],0x20000000
   140001fa8:	je     0x140001fbf
   140001faa:	mov    rcx,QWORD PTR [rcx+0x10]
   140001fae:	lea    r8,[rip+0xa83b]        # 0x14000c7f0
   140001fb5:	mov    edx,0x1c
   140001fba:	call   0x140001008
   140001fbf:	mov    r9d,0x1
   140001fc5:	lea    rdx,[rip+0xa7dc]        # 0x14000c7a8
   140001fcc:	mov    r8d,0x19f
   140001fd2:	lea    rcx,[rbp-0x40]
   140001fd6:	call   0x1400083e8
   140001fdb:	and    QWORD PTR [rbp-0x48],0x0
   140001fe0:	mov    eax,0x1a7
   140001fe5:	and    DWORD PTR [rbp+0x20],0x0
   140001fe9:	and    DWORD PTR [rbp-0x50],0x0
   140001fed:	test   r15,r15
   140001ff0:	jne    0x140002003
   140001ff2:	mov    ebx,0x80070057
   140001ff7:	mov    WORD PTR [rbp-0x3a],ax
   140001ffb:	mov    DWORD PTR [rbp-0x40],ebx
   140001ffe:	jmp    0x14000211a
   140002003:	mov    WORD PTR [rbp-0x3c],ax
   140002007:	mov    eax,0x1a8
   14000200c:	test   rdi,rdi
   14000200f:	je     0x140001ff2
   140002011:	mov    WORD PTR [rbp-0x3c],ax
   140002015:	mov    eax,0x1a9
   14000201a:	test   r14,r14
   14000201d:	je     0x140001ff2
   14000201f:	mov    WORD PTR [rbp-0x3c],ax
   140002023:	mov    eax,0x1aa
   140002028:	test   rsi,rsi
   14000202b:	je     0x140001ff2
   14000202d:	and    DWORD PTR [rbp-0x40],0x0
   140002031:	lea    rdx,[rip+0xa3f8]        # 0x14000c430
   140002038:	mov    WORD PTR [rbp-0x3c],ax
   14000203c:	mov    r9d,0x20019
   140002042:	mov    BYTE PTR [r15],0x0
   140002046:	lea    rax,[rbp-0x48]
   14000204a:	mov    DWORD PTR [rdi],0x0
   140002050:	xor    r8d,r8d
   140002053:	mov    BYTE PTR [r14],0x0
   140002057:	mov    rcx,0xffffffff80000002
   14000205e:	mov    DWORD PTR [rsi],0x0
   140002064:	mov    QWORD PTR [rsp+0x20],rax
   140002069:	call   QWORD PTR [rip+0x9f99]        # 0x14000c008
   14000206f:	movzx  ebx,ax
   140002072:	or     ebx,0x80070000
   140002078:	test   eax,eax
   14000207a:	cmovle ebx,eax
   14000207d:	mov    eax,0x1b0
   140002082:	mov    DWORD PTR [rbp-0x40],ebx
   140002085:	test   ebx,ebx
   140002087:	jns    0x14000208f
   140002089:	mov    WORD PTR [rbp-0x3a],ax
   14000208d:	jmp    0x1400020e8
   14000208f:	mov    rcx,QWORD PTR [rbp-0x48]
   140002093:	lea    r8,[rbp+0x20]
   140002097:	mov    r9d,0x1
   14000209d:	mov    WORD PTR [rbp-0x3c],ax
   1400020a1:	lea    rdx,[rip+0xa478]        # 0x14000c520
   1400020a8:	call   0x140004e70
   1400020ad:	mov    rcx,QWORD PTR [rbp-0x48]
   1400020b1:	lea    r8,[rbp-0x50]
   1400020b5:	test   eax,eax
   1400020b7:	lea    rdx,[rip+0xa4ca]        # 0x14000c588
   1400020be:	mov    r9d,0x1
   1400020c4:	sete   bl
   1400020c7:	call   0x140004e70
   1400020cc:	test   eax,eax
   1400020ce:	mov    BYTE PTR [r15],bl
   1400020d1:	sete   al
   1400020d4:	mov    BYTE PTR [r14],al
   1400020d7:	test   bl,bl
   1400020d9:	je     0x1400020e0
   1400020db:	mov    eax,DWORD PTR [rbp+0x20]
   1400020de:	mov    DWORD PTR [rdi],eax
   1400020e0:	mov    eax,DWORD PTR [rbp-0x50]
   1400020e3:	mov    ebx,DWORD PTR [rbp-0x40]
   1400020e6:	mov    DWORD PTR [rsi],eax
   1400020e8:	mov    rcx,QWORD PTR [rbp-0x48]
   1400020ec:	lea    rax,[rcx-0x1]
   1400020f0:	cmp    rax,0xfffffffffffffffd
   1400020f4:	ja     0x140002105
   1400020f6:	call   QWORD PTR [rip+0x9f14]        # 0x14000c010
   1400020fc:	mov    ebx,DWORD PTR [rbp-0x40]
   1400020ff:	xor    ecx,ecx
   140002101:	mov    QWORD PTR [rbp-0x48],rcx
   140002105:	lea    rdx,[rcx-0x1]
   140002109:	cmp    rdx,0xfffffffffffffffd
   14000210d:	ja     0x14000211a
   14000210f:	call   QWORD PTR [rip+0x9efb]        # 0x14000c010
   140002115:	and    QWORD PTR [rbp-0x48],0x0
   14000211a:	lea    rcx,[rbp-0x40]
   14000211e:	call   0x1400084f8
   140002123:	lea    r11,[rsp+0x80]
   14000212b:	mov    eax,ebx
   14000212d:	mov    rbx,QWORD PTR [r11+0x28]
   140002131:	mov    rsi,QWORD PTR [r11+0x30]
   140002135:	mov    rdi,QWORD PTR [r11+0x38]
   140002139:	mov    rsp,r11
   14000213c:	pop    r15
   14000213e:	pop    r14
   140002140:	pop    rbp
   140002141:	ret    
   140002142:	int3   
   140002143:	int3   
   140002144:	int3   
   140002145:	int3   
   140002146:	int3   
   140002147:	int3   
   140002148:	mov    rax,rsp
   14000214b:	mov    QWORD PTR [rax+0x10],rbx
   14000214f:	mov    QWORD PTR [rax+0x18],rsi
   140002153:	mov    QWORD PTR [rax+0x20],rdi
   140002157:	push   rbp
   140002158:	lea    rbp,[rax-0xc8]
   14000215f:	sub    rsp,0x1c0
   140002166:	mov    rax,QWORD PTR [rip+0xce9b]        # 0x14000f008
   14000216d:	xor    rax,rsp
   140002170:	mov    QWORD PTR [rbp+0xb0],rax
   140002177:	mov    rbx,rcx
   14000217a:	mov    rcx,QWORD PTR [rip+0xce9f]        # 0x14000f020
   140002181:	lea    rax,[rip+0xce98]        # 0x14000f020
   140002188:	cmp    rcx,rax
   14000218b:	je     0x1400021ab
   14000218d:	test   DWORD PTR [rcx+0x1c],0x20000000
   140002194:	je     0x1400021ab
   140002196:	mov    rcx,QWORD PTR [rcx+0x10]
   14000219a:	lea    r8,[rip+0xa64f]        # 0x14000c7f0
   1400021a1:	mov    edx,0x1d
   1400021a6:	call   0x140001008
   1400021ab:	mov    esi,0x1
   1400021b0:	lea    rdx,[rip+0xa609]        # 0x14000c7c0
   1400021b7:	mov    r9d,esi
   1400021ba:	lea    rcx,[rsp+0x70]
   1400021bf:	mov    r8d,0x1d2
   1400021c5:	call   0x1400083e8
   1400021ca:	xor    edi,edi
   1400021cc:	lea    rcx,[rbp-0x4c]
   1400021d0:	xor    edx,edx
   1400021d2:	mov    DWORD PTR [rsp+0x68],edi
   1400021d6:	mov    r8d,0xfc
   1400021dc:	mov    DWORD PTR [rsp+0x3c],edi
   1400021e0:	mov    DWORD PTR [rsp+0x64],edi
   1400021e4:	mov    DWORD PTR [rsp+0x44],edi
   1400021e8:	mov    DWORD PTR [rsp+0x5c],edi
   1400021ec:	mov    DWORD PTR [rsp+0x4c],edi
   1400021f0:	mov    DWORD PTR [rsp+0x34],edi
   1400021f4:	mov    DWORD PTR [rsp+0x54],edi
   1400021f8:	mov    DWORD PTR [rsp+0x38],edi
   1400021fc:	mov    DWORD PTR [rsp+0x40],edi
   140002200:	mov    DWORD PTR [rsp+0x48],edi
   140002204:	mov    DWORD PTR [rsp+0x50],edi
   140002208:	mov    BYTE PTR [rsp+0x30],dil
   14000220d:	mov    DWORD PTR [rsp+0x58],edi
   140002211:	mov    BYTE PTR [rsp+0x31],dil
   140002216:	mov    DWORD PTR [rsp+0x60],edi
   14000221a:	mov    DWORD PTR [rbp-0x50],edi
   14000221d:	call   0x14000b152
   140002222:	mov    eax,0x1e6
   140002227:	test   rbx,rbx
   14000222a:	jne    0x14000223f
   14000222c:	mov    ebx,0x80070057
   140002231:	mov    DWORD PTR [rsp+0x70],ebx
   140002235:	mov    WORD PTR [rsp+0x76],ax
   14000223a:	jmp    0x140002459
   14000223f:	lea    r8,[rsp+0x3c]
   140002244:	mov    DWORD PTR [rsp+0x70],edi
   140002248:	lea    rdx,[rsp+0x68]
   14000224d:	mov    WORD PTR [rsp+0x74],ax
   140002252:	mov    rcx,rbx
   140002255:	call   0x140001110
   14000225a:	mov    ebx,eax
   14000225c:	mov    DWORD PTR [rsp+0x70],eax
   140002260:	test   eax,eax
   140002262:	mov    eax,0x1eb
   140002267:	js     0x140002235
   140002269:	lea    rcx,[rsp+0x64]
   14000226e:	mov    WORD PTR [rsp+0x74],ax
   140002273:	call   0x140001d7c
   140002278:	mov    ebx,eax
   14000227a:	mov    DWORD PTR [rsp+0x70],eax
   14000227e:	test   eax,eax
   140002280:	mov    eax,0x1ed
   140002285:	js     0x140002235
   140002287:	lea    rdx,[rsp+0x5c]
   14000228c:	mov    WORD PTR [rsp+0x74],ax
   140002291:	lea    rcx,[rsp+0x44]
   140002296:	call   0x1400013c0
   14000229b:	mov    ebx,eax
   14000229d:	mov    DWORD PTR [rsp+0x70],eax
   1400022a1:	test   eax,eax
   1400022a3:	mov    eax,0x1ef
   1400022a8:	js     0x140002235
   1400022aa:	lea    r8,[rsp+0x54]
   1400022af:	mov    WORD PTR [rsp+0x74],ax
   1400022b4:	lea    rdx,[rsp+0x34]
   1400022b9:	lea    rcx,[rsp+0x4c]
   1400022be:	call   0x1400018a4
   1400022c3:	mov    ebx,eax
   1400022c5:	mov    DWORD PTR [rsp+0x70],eax
   1400022c9:	test   eax,eax
   1400022cb:	mov    eax,0x1f2
   1400022d0:	js     0x140002235
   1400022d6:	lea    r9,[rsp+0x50]
   1400022db:	mov    WORD PTR [rsp+0x74],ax
   1400022e0:	lea    r8,[rsp+0x48]
   1400022e5:	lea    rdx,[rsp+0x40]
   1400022ea:	lea    rcx,[rsp+0x38]
   1400022ef:	call   0x140001a9c
   1400022f4:	mov    ebx,eax
   1400022f6:	mov    DWORD PTR [rsp+0x70],eax
   1400022fa:	test   eax,eax
   1400022fc:	mov    eax,0x1f5
   140002301:	js     0x140002235
   140002307:	lea    r9,[rsp+0x60]
   14000230c:	mov    WORD PTR [rsp+0x74],ax
   140002311:	lea    r8,[rsp+0x31]
   140002316:	lea    rdx,[rsp+0x58]
   14000231b:	lea    rcx,[rsp+0x30]
   140002320:	call   0x140001f64
   140002325:	mov    ebx,eax
   140002327:	mov    DWORD PTR [rsp+0x70],eax
   14000232b:	test   eax,eax
   14000232d:	mov    eax,0x1f8
   140002332:	js     0x140002235
   140002338:	mov    WORD PTR [rsp+0x74],ax
   14000233d:	lea    r9,[rbp-0x50]
   140002341:	mov    eax,DWORD PTR [rsp+0x68]
   140002345:	mov    r8d,0x10
   14000234b:	mov    DWORD PTR [rbp-0x48],eax
   14000234e:	mov    edx,0x212e
   140002353:	mov    eax,DWORD PTR [rsp+0x3c]
   140002357:	xor    ecx,ecx
   140002359:	mov    DWORD PTR [rbp-0x38],eax
   14000235c:	mov    eax,DWORD PTR [rsp+0x64]
   140002360:	mov    DWORD PTR [rbp-0x28],eax
   140002363:	mov    eax,DWORD PTR [rsp+0x44]
   140002367:	mov    DWORD PTR [rbp-0x18],eax
   14000236a:	mov    eax,DWORD PTR [rsp+0x5c]
   14000236e:	mov    DWORD PTR [rbp-0x8],eax
   140002371:	mov    eax,DWORD PTR [rsp+0x4c]
   140002375:	mov    DWORD PTR [rbp+0x8],eax
   140002378:	mov    eax,DWORD PTR [rsp+0x34]
   14000237c:	mov    DWORD PTR [rbp+0x18],eax
   14000237f:	mov    eax,DWORD PTR [rsp+0x54]
   140002383:	mov    DWORD PTR [rbp+0x28],eax
   140002386:	mov    eax,DWORD PTR [rsp+0x38]
   14000238a:	mov    DWORD PTR [rbp+0x38],eax
   14000238d:	mov    eax,DWORD PTR [rsp+0x40]
   140002391:	mov    DWORD PTR [rbp+0x48],eax
   140002394:	mov    eax,DWORD PTR [rsp+0x48]
   140002398:	mov    DWORD PTR [rbp+0x58],eax
   14000239b:	mov    eax,DWORD PTR [rsp+0x50]
   14000239f:	mov    DWORD PTR [rbp+0x68],eax
   1400023a2:	movzx  eax,BYTE PTR [rsp+0x30]
   1400023a7:	mov    DWORD PTR [rbp+0x78],eax
   1400023aa:	mov    eax,DWORD PTR [rsp+0x58]
   1400023ae:	mov    DWORD PTR [rbp+0x88],eax
   1400023b4:	movzx  eax,BYTE PTR [rsp+0x31]
   1400023b9:	mov    DWORD PTR [rbp+0x98],eax
   1400023bf:	mov    eax,DWORD PTR [rsp+0x60]
   1400023c3:	mov    DWORD PTR [rbp+0xa8],eax
   1400023c9:	mov    DWORD PTR [rbp-0x50],r8d
   1400023cd:	mov    DWORD PTR [rbp-0x4c],esi
   1400023d0:	mov    DWORD PTR [rbp-0x40],r8d
   1400023d4:	mov    DWORD PTR [rbp-0x3c],esi
   1400023d7:	mov    DWORD PTR [rbp-0x30],r8d
   1400023db:	mov    DWORD PTR [rbp-0x2c],esi
   1400023de:	mov    DWORD PTR [rbp-0x20],r8d
   1400023e2:	mov    DWORD PTR [rbp-0x1c],esi
   1400023e5:	mov    DWORD PTR [rbp-0x10],r8d
   1400023e9:	mov    DWORD PTR [rbp-0xc],esi
   1400023ec:	mov    DWORD PTR [rbp+0x0],r8d
   1400023f0:	mov    DWORD PTR [rbp+0x4],esi
   1400023f3:	mov    DWORD PTR [rbp+0x10],r8d
   1400023f7:	mov    DWORD PTR [rbp+0x14],esi
   1400023fa:	mov    DWORD PTR [rbp+0x20],r8d
   1400023fe:	mov    DWORD PTR [rbp+0x24],esi
   140002401:	mov    DWORD PTR [rbp+0x30],r8d
   140002405:	mov    DWORD PTR [rbp+0x34],esi
   140002408:	mov    DWORD PTR [rbp+0x40],r8d
   14000240c:	mov    DWORD PTR [rbp+0x44],esi
   14000240f:	mov    DWORD PTR [rbp+0x50],r8d
   140002413:	mov    DWORD PTR [rbp+0x54],esi
   140002416:	mov    DWORD PTR [rbp+0x60],r8d
   14000241a:	mov    DWORD PTR [rbp+0x64],esi
   14000241d:	mov    DWORD PTR [rbp+0x70],r8d
   140002421:	mov    DWORD PTR [rbp+0x74],esi
   140002424:	mov    DWORD PTR [rbp+0x80],r8d
   14000242b:	mov    DWORD PTR [rbp+0x84],esi
   140002431:	mov    DWORD PTR [rbp+0x90],r8d
   140002438:	mov    DWORD PTR [rbp+0x94],esi
   14000243e:	mov    DWORD PTR [rbp+0xa0],r8d
   140002445:	mov    DWORD PTR [rbp+0xa4],esi
   14000244b:	mov    DWORD PTR [rsp+0x20],edi
   14000244f:	call   QWORD PTR [rip+0x9eeb]        # 0x14000c340
   140002455:	mov    ebx,DWORD PTR [rsp+0x70]
   140002459:	lea    rcx,[rsp+0x70]
   14000245e:	call   0x1400084f8
   140002463:	mov    eax,ebx
   140002465:	mov    rcx,QWORD PTR [rbp+0xb0]
   14000246c:	xor    rcx,rsp
   14000246f:	call   0x14000ab80
   140002474:	lea    r11,[rsp+0x1c0]
   14000247c:	mov    rbx,QWORD PTR [r11+0x18]
   140002480:	mov    rsi,QWORD PTR [r11+0x20]
   140002484:	mov    rdi,QWORD PTR [r11+0x28]
   140002488:	mov    rsp,r11
   14000248b:	pop    rbp
   14000248c:	ret    
   14000248d:	int3   
   14000248e:	int3   
   14000248f:	int3   
   140002490:	int3   
   140002491:	int3   
   140002492:	int3   
   140002493:	int3   
   140002494:	mov    r11,rsp
   140002497:	mov    DWORD PTR [r11+0x20],r9d
   14000249b:	sub    rsp,0x48
   14000249f:	and    QWORD PTR [r11-0x18],0x0
   1400024a4:	lea    rax,[r11+0x20]
   1400024a8:	movzx  r9d,dx
   1400024ac:	lea    r8,[rip+0xa6d5]        # 0x14000cb88
   1400024b3:	mov    QWORD PTR [r11-0x20],0x4
   1400024bb:	mov    edx,0x2b
   1400024c0:	mov    QWORD PTR [r11-0x28],rax
   1400024c4:	call   QWORD PTR [rip+0x9b36]        # 0x14000c000
   1400024ca:	add    rsp,0x48
   1400024ce:	ret    
   1400024cf:	int3   
   1400024d0:	int3   
   1400024d1:	int3   
   1400024d2:	int3   
   1400024d3:	int3   
   1400024d4:	int3   
   1400024d5:	int3   
   1400024d6:	int3   
   1400024d7:	int3   
   1400024d8:	mov    r11,rsp
   1400024db:	mov    DWORD PTR [r11+0x20],r9d
   1400024df:	sub    rsp,0x68
   1400024e3:	and    QWORD PTR [r11-0x18],0x0
   1400024e8:	lea    rax,[r11+0x30]
   1400024ec:	mov    QWORD PTR [r11-0x20],0x8
   1400024f4:	lea    r8,[rip+0xa68d]        # 0x14000cb88
   1400024fb:	mov    QWORD PTR [r11-0x28],rax
   1400024ff:	mov    edx,0x2c
   140002504:	mov    rax,QWORD PTR [rsp+0x90]
   14000250c:	mov    QWORD PTR [r11-0x30],0x10
   140002514:	mov    QWORD PTR [r11-0x38],rax
   140002518:	lea    rax,[r11+0x20]
   14000251c:	movzx  r9d,dx
   140002520:	mov    edx,0x2b
   140002525:	mov    QWORD PTR [r11-0x40],0x4
   14000252d:	mov    QWORD PTR [r11-0x48],rax
   140002531:	call   QWORD PTR [rip+0x9ac9]        # 0x14000c000
   140002537:	add    rsp,0x68
   14000253b:	ret    
   14000253c:	int3   
   14000253d:	int3   
   14000253e:	int3   
   14000253f:	int3   
   140002540:	int3   
   140002541:	int3   
   140002542:	int3   
   140002543:	int3   
   140002544:	sub    rsp,0x48
   140002548:	xor    r11d,r11d
   14000254b:	test   r9,r9
   14000254e:	je     0x140002574
   140002550:	cmp    WORD PTR [r9],r11w
   140002554:	jne    0x14000255c
   140002556:	lea    eax,[r11+0xe]
   14000255a:	jmp    0x140002579
   14000255c:	or     rax,0xffffffffffffffff
   140002560:	inc    rax
   140002563:	cmp    WORD PTR [r9+rax*2],r11w
   140002568:	jne    0x140002560
   14000256a:	lea    rax,[rax*2+0x2]
   140002572:	jmp    0x140002579
   140002574:	mov    eax,0xa
   140002579:	test   r9,r9
   14000257c:	je     0x14000258f
   14000257e:	cmp    WORD PTR [r9],r11w
   140002582:	lea    r10,[rip+0xa277]        # 0x14000c800
   140002589:	cmove  r9,r10
   14000258d:	jmp    0x140002596
   14000258f:	lea    r9,[rip+0xa27a]        # 0x14000c810
   140002596:	mov    QWORD PTR [rsp+0x30],r11
   14000259b:	mov    QWORD PTR [rsp+0x28],rax
   1400025a0:	mov    QWORD PTR [rsp+0x20],r9
   1400025a5:	movzx  r9d,dx
   1400025a9:	mov    edx,0x2b
   1400025ae:	call   QWORD PTR [rip+0x9a4c]        # 0x14000c000
   1400025b4:	add    rsp,0x48
   1400025b8:	ret    
   1400025b9:	int3   
   1400025ba:	int3   
   1400025bb:	int3   
   1400025bc:	int3   
   1400025bd:	int3   
   1400025be:	int3   
   1400025bf:	int3   
   1400025c0:	sub    rsp,0x58
   1400025c4:	xor    r11d,r11d
   1400025c7:	test   r9,r9
   1400025ca:	je     0x1400025f0
   1400025cc:	cmp    WORD PTR [r9],r11w
   1400025d0:	jne    0x1400025d8
   1400025d2:	lea    eax,[r11+0xe]
   1400025d6:	jmp    0x1400025f5
   1400025d8:	or     rax,0xffffffffffffffff
   1400025dc:	inc    rax
   1400025df:	cmp    WORD PTR [r9+rax*2],r11w
   1400025e4:	jne    0x1400025dc
   1400025e6:	lea    rax,[rax*2+0x2]
   1400025ee:	jmp    0x1400025f5
   1400025f0:	mov    eax,0xa
   1400025f5:	test   r9,r9
   1400025f8:	je     0x14000260b
   1400025fa:	cmp    WORD PTR [r9],r11w
   1400025fe:	lea    r10,[rip+0xa1fb]        # 0x14000c800
   140002605:	cmove  r9,r10
   140002609:	jmp    0x140002612
   14000260b:	lea    r9,[rip+0xa1fe]        # 0x14000c810
   140002612:	mov    QWORD PTR [rsp+0x40],r11
   140002617:	lea    r10,[rsp+0x80]
   14000261f:	mov    QWORD PTR [rsp+0x38],0x4
   140002628:	mov    QWORD PTR [rsp+0x30],r10
   14000262d:	mov    QWORD PTR [rsp+0x28],rax
   140002632:	mov    QWORD PTR [rsp+0x20],r9
   140002637:	movzx  r9d,dx
   14000263b:	mov    edx,0x2b
   140002640:	call   QWORD PTR [rip+0x99ba]        # 0x14000c000
   140002646:	add    rsp,0x58
   14000264a:	ret    
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	int3   
   140002651:	int3   
   140002652:	int3   
   140002653:	int3   
   140002654:	sub    rsp,0x48
   140002658:	and    QWORD PTR [rsp+0x30],0x0
   14000265e:	lea    r8,[rip+0xa523]        # 0x14000cb88
   140002665:	mov    QWORD PTR [rsp+0x28],0x10
   14000266e:	mov    QWORD PTR [rsp+0x20],r9
   140002673:	movzx  r9d,dx
   140002677:	mov    edx,0x2b
   14000267c:	call   QWORD PTR [rip+0x997e]        # 0x14000c000
   140002682:	add    rsp,0x48
   140002686:	ret    
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	mov    r11,rsp
   140002693:	sub    rsp,0x58
   140002697:	and    QWORD PTR [r11-0x18],0x0
   14000269c:	lea    rax,[r11+0x28]
   1400026a0:	mov    QWORD PTR [r11-0x20],0x8
   1400026a8:	lea    r8,[rip+0xa4d9]        # 0x14000cb88
   1400026af:	mov    QWORD PTR [r11-0x28],rax
   1400026b3:	mov    edx,0x18
   1400026b8:	mov    QWORD PTR [r11-0x30],0x10
   1400026c0:	mov    QWORD PTR [r11-0x38],r9
   1400026c4:	movzx  r9d,dx
   1400026c8:	mov    edx,0x2b
   1400026cd:	call   QWORD PTR [rip+0x992d]        # 0x14000c000
   1400026d3:	add    rsp,0x58
   1400026d7:	ret    
   1400026d8:	int3   
   1400026d9:	int3   
   1400026da:	int3   
   1400026db:	int3   
   1400026dc:	int3   
   1400026dd:	int3   
   1400026de:	int3   
   1400026df:	int3   
   1400026e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400026e5:	push   rdi
   1400026e6:	sub    rsp,0x60
   1400026ea:	mov    r10,QWORD PTR [rsp+0x90]
   1400026f2:	or     r11,0xffffffffffffffff
   1400026f6:	xor    edi,edi
   1400026f8:	test   r10,r10
   1400026fb:	je     0x14000271f
   1400026fd:	cmp    WORD PTR [r10],di
   140002701:	jne    0x140002708
   140002703:	lea    ebx,[rdi+0xe]
   140002706:	jmp    0x140002724
   140002708:	mov    rax,r11
   14000270b:	inc    rax
   14000270e:	cmp    WORD PTR [r10+rax*2],di
   140002713:	jne    0x14000270b
   140002715:	lea    rbx,[rax*2+0x2]
   14000271d:	jmp    0x140002724
   14000271f:	mov    ebx,0xa
   140002724:	test   r10,r10
   140002727:	je     0x14000273a
   140002729:	cmp    WORD PTR [r10],di
   14000272d:	lea    rax,[rip+0xa0cc]        # 0x14000c800
   140002734:	cmove  r10,rax
   140002738:	jmp    0x140002741
   14000273a:	lea    r10,[rip+0xa0cf]        # 0x14000c810
   140002741:	test   r9,r9
   140002744:	je     0x140002754
   140002746:	inc    r11
   140002749:	cmp    BYTE PTR [r9+r11*1],dil
   14000274d:	jne    0x140002746
   14000274f:	inc    r11
   140002752:	jmp    0x14000275a
   140002754:	mov    r11d,0x5
   14000275a:	mov    QWORD PTR [rsp+0x50],rdi
   14000275f:	lea    rax,[rip+0xa0b6]        # 0x14000c81c
   140002766:	mov    QWORD PTR [rsp+0x48],0x4
   14000276f:	test   r9,r9
   140002772:	cmovne rax,r9
   140002776:	lea    r9,[rsp+0x98]
   14000277e:	mov    QWORD PTR [rsp+0x40],r9
   140002783:	mov    QWORD PTR [rsp+0x38],rbx
   140002788:	mov    QWORD PTR [rsp+0x30],r10
   14000278d:	movzx  r9d,dx
   140002791:	mov    edx,0x2b
   140002796:	mov    QWORD PTR [rsp+0x28],r11
   14000279b:	mov    QWORD PTR [rsp+0x20],rax
   1400027a0:	call   QWORD PTR [rip+0x985a]        # 0x14000c000
   1400027a6:	mov    rbx,QWORD PTR [rsp+0x70]
   1400027ab:	add    rsp,0x60
   1400027af:	pop    rdi
   1400027b0:	ret    
   1400027b1:	int3   
   1400027b2:	int3   
   1400027b3:	int3   
   1400027b4:	int3   
   1400027b5:	int3   
   1400027b6:	int3   
   1400027b7:	int3   
   1400027b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400027bd:	push   rdi
   1400027be:	sub    rsp,0x20
   1400027c2:	or     ebx,0xffffffff
   1400027c5:	mov    rdi,rdx
   1400027c8:	cmp    ecx,0x2
   1400027cb:	jl     0x14000280f
   1400027cd:	mov    rcx,QWORD PTR [rdi+0x8]
   1400027d1:	lea    r8d,[rbx+0x19]
   1400027d5:	lea    rdx,[rip+0xa344]        # 0x14000cb20
   1400027dc:	call   QWORD PTR [rip+0x9ace]        # 0x14000c2b0
   1400027e2:	test   eax,eax
   1400027e4:	jne    0x1400027ed
   1400027e6:	call   0x1400045b8
   1400027eb:	mov    ebx,eax
   1400027ed:	mov    rcx,QWORD PTR [rdi+0x8]
   1400027f1:	lea    rdx,[rip+0xa2f0]        # 0x14000cae8
   1400027f8:	mov    r8d,0x1b
   1400027fe:	call   QWORD PTR [rip+0x9aac]        # 0x14000c2b0
   140002804:	test   eax,eax
   140002806:	jne    0x14000280f
   140002808:	call   0x140003ab0
   14000280d:	mov    ebx,eax
   14000280f:	mov    eax,ebx
   140002811:	mov    rbx,QWORD PTR [rsp+0x30]
   140002816:	add    rsp,0x20
   14000281a:	pop    rdi
   14000281b:	ret    
   14000281c:	int3   
   14000281d:	int3   
   14000281e:	int3   
   14000281f:	int3   
   140002820:	int3   
   140002821:	int3   
   140002822:	int3   
   140002823:	int3   
   140002824:	rex push rbp
   140002826:	push   rbx
   140002827:	push   rsi
   140002828:	push   rdi
   140002829:	push   r15
   14000282b:	mov    rbp,rsp
   14000282e:	sub    rsp,0x70
   140002832:	mov    rcx,QWORD PTR [rip+0xc7e7]        # 0x14000f020
   140002839:	lea    rsi,[rip+0xc7e0]        # 0x14000f020
   140002840:	lea    r15,[rip+0xa341]        # 0x14000cb88
   140002847:	cmp    rcx,rsi
   14000284a:	je     0x140002866
   14000284c:	test   DWORD PTR [rcx+0x1c],0x20000000
   140002853:	je     0x140002866
   140002855:	mov    rcx,QWORD PTR [rcx+0x10]
   140002859:	mov    edx,0xa
   14000285e:	mov    r8,r15
   140002861:	call   0x140001008
   140002866:	mov    r9d,0x1
   14000286c:	lea    rdx,[rip+0xa095]        # 0x14000c908
   140002873:	lea    rcx,[rbp-0x38]
   140002877:	lea    r8d,[r9+0x45]
   14000287b:	call   0x1400083e8
   140002880:	and    QWORD PTR [rbp-0x40],0x0
   140002885:	lea    rax,[rbp-0x40]
   140002889:	and    DWORD PTR [rbp+0x30],0x0
   14000288d:	lea    r9,[rip+0xa314]        # 0x14000cba8
   140002894:	and    QWORD PTR [rbp+0x48],0x0
   140002899:	lea    rcx,[rip+0xa2f8]        # 0x14000cb98
   1400028a0:	and    DWORD PTR [rbp+0x40],0x0
   1400028a4:	xor    edx,edx
   1400028a6:	and    DWORD PTR [rbp+0x44],0x0
   1400028aa:	and    DWORD PTR [rbp+0x38],0x0
   1400028ae:	and    DWORD PTR [rbp+0x3c],0x0
   1400028b2:	lea    r8d,[rdx+0x1]
   1400028b6:	mov    QWORD PTR [rsp+0x20],rax
   1400028bb:	call   QWORD PTR [rip+0x9a97]        # 0x14000c358
   1400028c1:	mov    DWORD PTR [rbp-0x38],eax
   1400028c4:	test   eax,eax
   1400028c6:	mov    eax,0x4f
   1400028cb:	jns    0x1400028d6
   1400028cd:	mov    WORD PTR [rbp-0x32],ax
   1400028d1:	jmp    0x1400029e4
   1400028d6:	mov    rbx,QWORD PTR [rbp-0x40]
   1400028da:	mov    WORD PTR [rbp-0x34],ax
   1400028de:	mov    rax,QWORD PTR [rbx]
   1400028e1:	mov    rdi,QWORD PTR [rax+0x18]
   1400028e5:	mov    rcx,rdi
   1400028e8:	call   QWORD PTR [rip+0x9aa2]        # 0x14000c390
   1400028ee:	lea    r8,[rbp+0x48]
   1400028f2:	mov    rcx,rbx
   1400028f5:	lea    rdx,[rbp+0x30]
   1400028f9:	call   rdi
   1400028fb:	mov    ebx,eax
   1400028fd:	test   eax,eax
   1400028ff:	jns    0x140002934
   140002901:	mov    rcx,QWORD PTR [rip+0xc718]        # 0x14000f020
   140002908:	cmp    rcx,rsi
   14000290b:	je     0x14000292a
   14000290d:	test   DWORD PTR [rcx+0x1c],0x2000000
   140002914:	je     0x14000292a
   140002916:	mov    rcx,QWORD PTR [rcx+0x10]
   14000291a:	mov    edx,0xb
   14000291f:	mov    r9d,eax
   140002922:	mov    r8,r15
   140002925:	call   0x14000102c
   14000292a:	mov    DWORD PTR [rbp-0x38],ebx
   14000292d:	mov    eax,0x56
   140002932:	jmp    0x1400028cd
   140002934:	lea    rcx,[rbp+0x40]
   140002938:	call   QWORD PTR [rip+0x9802]        # 0x14000c140
   14000293e:	mov    eax,DWORD PTR [rbp+0x44]
   140002941:	mov    DWORD PTR [rbp+0x3c],eax
   140002944:	mov    eax,DWORD PTR [rbp+0x40]
   140002947:	mov    DWORD PTR [rbp+0x38],eax
   14000294a:	mov    r10,QWORD PTR [rip+0xc6cf]        # 0x14000f020
   140002951:	mov    ebx,0x8000000
   140002956:	cmp    r10,rsi
   140002959:	je     0x14000297d
   14000295b:	test   DWORD PTR [r10+0x1c],ebx
   14000295f:	je     0x14000297d
   140002961:	mov    r9d,DWORD PTR [rbp+0x30]
   140002965:	mov    edx,0xc
   14000296a:	mov    rcx,QWORD PTR [r10+0x10]
   14000296e:	mov    r8,r15
   140002971:	call   0x14000102c
   140002976:	mov    r10,QWORD PTR [rip+0xc6a3]        # 0x14000f020
   14000297d:	mov    edx,DWORD PTR [rbp+0x30]
   140002980:	test   edx,edx
   140002982:	je     0x1400029b8
   140002984:	mov    r9,QWORD PTR [rbp+0x48]
   140002988:	dec    edx
   14000298a:	mov    eax,edx
   14000298c:	imul   rcx,rax,0x98
   140002993:	mov    rax,QWORD PTR [rbp+0x38]
   140002997:	mov    r8,QWORD PTR [rcx+r9*1+0x10]
   14000299c:	movabs rcx,0x58028e44000
   1400029a6:	sub    rax,r8
   1400029a9:	cmp    rax,rcx
   1400029ac:	jb     0x140002a28
   1400029ae:	cmp    QWORD PTR [rbp+0x38],r8
   1400029b2:	jb     0x140002a28
   1400029b4:	test   edx,edx
   1400029b6:	jne    0x140002988
   1400029b8:	cmp    r10,rsi
   1400029bb:	je     0x1400029d4
   1400029bd:	test   DWORD PTR [r10+0x1c],ebx
   1400029c1:	je     0x1400029d4
   1400029c3:	mov    rcx,QWORD PTR [r10+0x10]
   1400029c7:	mov    edx,0xe
   1400029cc:	mov    r8,r15
   1400029cf:	call   0x140001008
   1400029d4:	mov    DWORD PTR [rbp-0x38],0x1
   1400029db:	mov    eax,0x6f
   1400029e0:	mov    WORD PTR [rbp-0x34],ax
   1400029e4:	mov    ecx,DWORD PTR [rbp+0x30]
   1400029e7:	lea    rdx,[rbp+0x48]
   1400029eb:	call   QWORD PTR [rip+0x9807]        # 0x14000c1f8
   1400029f1:	mov    rbx,QWORD PTR [rbp-0x40]
   1400029f5:	mov    esi,DWORD PTR [rbp-0x38]
   1400029f8:	test   rbx,rbx
   1400029fb:	je     0x140002a12
   1400029fd:	mov    rcx,QWORD PTR [rbx]
   140002a00:	mov    rdi,QWORD PTR [rcx+0x10]
   140002a04:	mov    rcx,rdi
   140002a07:	call   QWORD PTR [rip+0x9983]        # 0x14000c390
   140002a0d:	mov    rcx,rbx
   140002a10:	call   rdi
   140002a12:	lea    rcx,[rbp-0x38]
   140002a16:	call   0x1400084f8
   140002a1b:	mov    eax,esi
   140002a1d:	add    rsp,0x70
   140002a21:	pop    r15
   140002a23:	pop    rdi
   140002a24:	pop    rsi
   140002a25:	pop    rbx
   140002a26:	pop    rbp
   140002a27:	ret    
   140002a28:	cmp    r10,rsi
   140002a2b:	je     0x140002a44
   140002a2d:	test   DWORD PTR [r10+0x1c],ebx
   140002a31:	je     0x140002a44
   140002a33:	mov    rcx,QWORD PTR [r10+0x10]
   140002a37:	mov    edx,0xd
   140002a3c:	mov    r8,r15
   140002a3f:	call   0x140001008
   140002a44:	and    DWORD PTR [rbp-0x38],0x0
   140002a48:	mov    eax,0x6a
   140002a4d:	jmp    0x1400029e0
   140002a4f:	int3   
   140002a50:	int3   
   140002a51:	int3   
   140002a52:	int3   
   140002a53:	int3   
   140002a54:	int3   
   140002a55:	int3   
   140002a56:	int3   
   140002a57:	int3   
   140002a58:	mov    QWORD PTR [rsp+0x10],rbx
   140002a5d:	mov    QWORD PTR [rsp+0x18],rsi
   140002a62:	push   rbp
   140002a63:	push   rdi
   140002a64:	push   r12
   140002a66:	push   r13
   140002a68:	push   r15
   140002a6a:	lea    rbp,[rsp-0x40]
   140002a6f:	sub    rsp,0x140
   140002a76:	mov    rax,QWORD PTR [rip+0xc58b]        # 0x14000f008
   140002a7d:	xor    rax,rsp
   140002a80:	mov    QWORD PTR [rbp+0x30],rax
   140002a84:	mov    rsi,rcx
   140002a87:	mov    rcx,QWORD PTR [rip+0xc592]        # 0x14000f020
   140002a8e:	lea    r15,[rip+0xc58b]        # 0x14000f020
   140002a95:	cmp    rcx,r15
   140002a98:	je     0x140002ab8
   140002a9a:	test   DWORD PTR [rcx+0x1c],0x20000000
   140002aa1:	je     0x140002ab8
   140002aa3:	mov    rcx,QWORD PTR [rcx+0x10]
   140002aa7:	lea    r8,[rip+0xa0da]        # 0x14000cb88
   140002aae:	mov    edx,0xf
   140002ab3:	call   0x140001008
   140002ab8:	mov    r9d,0x1
   140002abe:	lea    rdx,[rip+0x9e63]        # 0x14000c928
   140002ac5:	mov    r8d,0x81
   140002acb:	lea    rcx,[rsp+0x30]
   140002ad0:	call   0x1400083e8
   140002ad5:	and    DWORD PTR [rsp+0x20],0x0
   140002ada:	lea    rcx,[rbp-0x6c]
   140002ade:	and    QWORD PTR [rsp+0x28],0x0
   140002ae4:	xor    edx,edx
   140002ae6:	and    DWORD PTR [rbp-0x70],0x0
   140002aea:	mov    r8d,0x94
   140002af0:	call   0x14000b152
   140002af5:	mov    rax,QWORD PTR [rsi]
   140002af8:	movups xmm0,XMMWORD PTR [rip+0xa651]        # 0x14000d150
   140002aff:	mov    rbx,QWORD PTR [rax+0x68]
   140002b03:	mov    rcx,rbx
   140002b06:	movdqu XMMWORD PTR [rbp-0x80],xmm0
   140002b0b:	call   QWORD PTR [rip+0x987f]        # 0x14000c390
   140002b11:	lea    r8,[rbp-0x80]
   140002b15:	xor    edx,edx
   140002b17:	mov    rcx,rsi
   140002b1a:	call   rbx
   140002b1c:	mov    DWORD PTR [rsp+0x30],eax
   140002b20:	test   eax,eax
   140002b22:	mov    eax,0x8b
   140002b27:	js     0x140002c90
   140002b2d:	mov    WORD PTR [rsp+0x34],ax
   140002b32:	mov    rax,QWORD PTR [rsi]
   140002b35:	mov    rbx,QWORD PTR [rax+0x40]
   140002b39:	mov    rcx,rbx
   140002b3c:	call   QWORD PTR [rip+0x984e]        # 0x14000c390
   140002b42:	lea    r8,[rsp+0x28]
   140002b47:	mov    rcx,rsi
   140002b4a:	lea    rdx,[rsp+0x20]
   140002b4f:	call   rbx
   140002b51:	mov    DWORD PTR [rsp+0x30],eax
   140002b55:	test   eax,eax
   140002b57:	mov    eax,0x8c
   140002b5c:	js     0x140002c90
   140002b62:	xor    edi,edi
   140002b64:	mov    WORD PTR [rsp+0x34],ax
   140002b69:	cmp    DWORD PTR [rsp+0x20],edi
   140002b6d:	jbe    0x140002c95
   140002b73:	mov    rcx,QWORD PTR [rip+0xc4a6]        # 0x14000f020
   140002b7a:	lea    r13d,[rax+0x12]
   140002b7e:	lea    r12d,[rax+0x1b]
   140002b82:	mov    rax,QWORD PTR [rbp-0x80]
   140002b86:	lea    rbx,[rdi+rdi*8]
   140002b8a:	shl    rbx,0x4
   140002b8e:	add    rbx,QWORD PTR [rsp+0x28]
   140002b93:	cmp    rax,QWORD PTR [rbx+0x28]
   140002b97:	jne    0x140002c4d
   140002b9d:	mov    rax,QWORD PTR [rbp-0x78]
   140002ba1:	cmp    rax,QWORD PTR [rbx+0x30]
   140002ba5:	jne    0x140002c4d
   140002bab:	lea    rcx,[rbp-0x70]
   140002baf:	call   0x1400054b4
   140002bb4:	lea    r8,[rbp-0x70]
   140002bb8:	mov    rdx,rbx
   140002bbb:	call   0x140006470
   140002bc0:	mov    DWORD PTR [rsp+0x30],eax
   140002bc4:	test   eax,eax
   140002bc6:	mov    eax,0x9c
   140002bcb:	js     0x140002c90
   140002bd1:	lea    rcx,[rbp-0x70]
   140002bd5:	mov    WORD PTR [rsp+0x34],ax
   140002bda:	call   0x140006bc0
   140002bdf:	mov    DWORD PTR [rsp+0x30],eax
   140002be3:	test   eax,eax
   140002be5:	js     0x140002c88
   140002beb:	mov    WORD PTR [rsp+0x34],r13w
   140002bf1:	cmp    eax,0x1
   140002bf4:	jne    0x140002c6c
   140002bf6:	mov    rcx,QWORD PTR [rip+0xc423]        # 0x14000f020
   140002bfd:	cmp    rcx,r15
   140002c00:	je     0x140002c1a
   140002c02:	test   DWORD PTR [rcx+0x1c],0x8000000
   140002c09:	je     0x140002c1a
   140002c0b:	mov    rcx,QWORD PTR [rcx+0x10]
   140002c0f:	lea    edx,[rax+0x10]
   140002c12:	mov    r9,rbx
   140002c15:	call   0x140002654
   140002c1a:	movups xmm0,XMMWORD PTR [rbx]
   140002c1d:	mov    rax,QWORD PTR [rsi]
   140002c20:	movdqu XMMWORD PTR [rsp+0x70],xmm0
   140002c26:	mov    rbx,QWORD PTR [rax+0x38]
   140002c2a:	mov    rcx,rbx
   140002c2d:	call   QWORD PTR [rip+0x975d]        # 0x14000c390
   140002c33:	lea    rdx,[rsp+0x70]
   140002c38:	mov    rcx,rsi
   140002c3b:	call   rbx
   140002c3d:	mov    DWORD PTR [rsp+0x30],eax
   140002c41:	test   eax,eax
   140002c43:	js     0x140002c80
   140002c45:	mov    WORD PTR [rsp+0x34],r12w
   140002c4b:	jmp    0x140002c6c
   140002c4d:	cmp    rcx,r15
   140002c50:	je     0x140002c73
   140002c52:	test   DWORD PTR [rcx+0x1c],0x8000000
   140002c59:	je     0x140002c73
   140002c5b:	mov    rcx,QWORD PTR [rcx+0x10]
   140002c5f:	mov    edx,0x10
   140002c64:	mov    r9,rbx
   140002c67:	call   0x140002654
   140002c6c:	mov    rcx,QWORD PTR [rip+0xc3ad]        # 0x14000f020
   140002c73:	inc    edi
   140002c75:	cmp    edi,DWORD PTR [rsp+0x20]
   140002c79:	jae    0x140002c95
   140002c7b:	jmp    0x140002b82
   140002c80:	mov    WORD PTR [rsp+0x36],r12w
   140002c86:	jmp    0x140002c95
   140002c88:	mov    WORD PTR [rsp+0x36],r13w
   140002c8e:	jmp    0x140002c95
   140002c90:	mov    WORD PTR [rsp+0x36],ax
   140002c95:	lea    rcx,[rbp-0x70]
   140002c99:	call   0x1400054b4
   140002c9e:	mov    ecx,DWORD PTR [rsp+0x20]
   140002ca2:	lea    rdx,[rsp+0x28]
   140002ca7:	call   QWORD PTR [rip+0x9523]        # 0x14000c1d0
   140002cad:	mov    ebx,DWORD PTR [rsp+0x30]
   140002cb1:	lea    rcx,[rsp+0x30]
   140002cb6:	call   0x1400084f8
   140002cbb:	mov    eax,ebx
   140002cbd:	mov    rcx,QWORD PTR [rbp+0x30]
   140002cc1:	xor    rcx,rsp
   140002cc4:	call   0x14000ab80
   140002cc9:	lea    r11,[rsp+0x140]
   140002cd1:	mov    rbx,QWORD PTR [r11+0x38]
   140002cd5:	mov    rsi,QWORD PTR [r11+0x40]
   140002cd9:	mov    rsp,r11
   140002cdc:	pop    r15
   140002cde:	pop    r13
   140002ce0:	pop    r12
   140002ce2:	pop    rdi
   140002ce3:	pop    rbp
   140002ce4:	ret    
   140002ce5:	int3   
   140002ce6:	int3   
   140002ce7:	int3   
   140002ce8:	int3   
   140002ce9:	int3   
   140002cea:	int3   
   140002ceb:	int3   
   140002cec:	mov    QWORD PTR [rsp+0x8],rbx
   140002cf1:	push   rbp
   140002cf2:	push   rsi
   140002cf3:	push   rdi
   140002cf4:	push   r12
   140002cf6:	push   r13
   140002cf8:	push   r14
   140002cfa:	push   r15
   140002cfc:	lea    rbp,[rsp-0x27]
   140002d01:	sub    rsp,0xa0
   140002d08:	mov    r13,rcx
   140002d0b:	mov    rcx,QWORD PTR [rip+0xc30e]        # 0x14000f020
   140002d12:	lea    r14,[rip+0xc307]        # 0x14000f020
   140002d19:	cmp    rcx,r14
   140002d1c:	je     0x140002d3c
   140002d1e:	test   DWORD PTR [rcx+0x1c],0x20000000
   140002d25:	je     0x140002d3c
   140002d27:	mov    rcx,QWORD PTR [rcx+0x10]
   140002d2b:	lea    r8,[rip+0x9e56]        # 0x14000cb88
   140002d32:	mov    edx,0x12
   140002d37:	call   0x140001008
   140002d3c:	mov    ebx,0x1
   140002d41:	lea    rdx,[rip+0x9bf8]        # 0x14000c940
   140002d48:	mov    r9d,ebx
   140002d4b:	lea    rcx,[rbp-0x19]
   140002d4f:	mov    r8d,0xbc
   140002d55:	call   0x1400083e8
   140002d5a:	xor    edi,edi
   140002d5c:	lea    rax,[rbp+0x7f]
   140002d60:	mov    QWORD PTR [rbp+0x7f],rdi
   140002d64:	lea    rdx,[rip+0x96c5]        # 0x14000c430
   140002d6b:	mov    r9d,0x20019
   140002d71:	mov    QWORD PTR [rbp+0x7f],rdi
   140002d75:	xor    r8d,r8d
   140002d78:	mov    QWORD PTR [rsp+0x20],rax
   140002d7d:	mov    rcx,0xffffffff80000002
   140002d84:	mov    QWORD PTR [rbp-0x39],rdi
   140002d88:	mov    DWORD PTR [rbp+0x6f],edi
   140002d8b:	mov    esi,edi
   140002d8d:	mov    QWORD PTR [rbp-0x49],rdi
   140002d91:	mov    r15d,edi
   140002d94:	mov    DWORD PTR [rbp+0x77],edi
   140002d97:	mov    r12d,edi
   140002d9a:	mov    QWORD PTR [rbp-0x41],rdi
   140002d9e:	call   QWORD PTR [rip+0x9264]        # 0x14000c008
   140002da4:	test   eax,eax
   140002da6:	jne    0x140002e4b
   140002dac:	mov    rcx,QWORD PTR [rbp+0x7f]
   140002db0:	lea    r8,[rbp+0x77]
   140002db4:	mov    r9d,ebx
   140002db7:	lea    rdx,[rip+0x97ca]        # 0x14000c588
   140002dbe:	call   0x140004e70
   140002dc3:	test   eax,eax
   140002dc5:	jne    0x140002e4b
   140002dcb:	mov    rcx,QWORD PTR [rip+0xc24e]        # 0x14000f020
   140002dd2:	mov    ebx,DWORD PTR [rbp+0x77]
   140002dd5:	cmp    rcx,r14
   140002dd8:	je     0x140002e00
   140002dda:	test   DWORD PTR [rcx+0x1c],0x8000000
   140002de1:	je     0x140002e00
   140002de3:	mov    rcx,QWORD PTR [rcx+0x10]
   140002de7:	lea    edx,[rdi+0x13]
   140002dea:	mov    r9d,ebx
   140002ded:	lea    r8,[rip+0x9d94]        # 0x14000cb88
   140002df4:	call   0x14000102c
   140002df9:	mov    rcx,QWORD PTR [rip+0xc220]        # 0x14000f020
   140002e00:	test   ebx,ebx
   140002e02:	jne    0x140002e36
   140002e04:	cmp    rcx,r14
   140002e07:	je     0x140002e25
   140002e09:	test   DWORD PTR [rcx+0x1c],0x8000000
   140002e10:	je     0x140002e25
   140002e12:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e16:	lea    edx,[rbx+0x14]
   140002e19:	lea    r8,[rip+0x9d68]        # 0x14000cb88
   140002e20:	call   0x140001008
   140002e25:	mov    eax,0xd8
   140002e2a:	mov    DWORD PTR [rbp-0x19],edi
   140002e2d:	mov    WORD PTR [rbp-0x15],ax
   140002e31:	jmp    0x140003062
   140002e36:	cmp    rcx,r14
   140002e39:	je     0x140002e7d
   140002e3b:	test   DWORD PTR [rcx+0x1c],0x8000000
   140002e42:	je     0x140002e7d
   140002e44:	mov    edx,0x15
   140002e49:	jmp    0x140002e6a
   140002e4b:	mov    ebx,0x4ec0
   140002e50:	mov    rcx,QWORD PTR [rip+0xc1c9]        # 0x14000f020
   140002e57:	cmp    rcx,r14
   140002e5a:	je     0x140002e7d
   140002e5c:	test   DWORD PTR [rcx+0x1c],0x8000000
   140002e63:	je     0x140002e7d
   140002e65:	mov    edx,0x16
   140002e6a:	mov    rcx,QWORD PTR [rcx+0x10]
   140002e6e:	lea    r8,[rip+0x9d13]        # 0x14000cb88
   140002e75:	mov    r9d,ebx
   140002e78:	call   0x14000102c
   140002e7d:	xor    edx,edx
   140002e7f:	mov    eax,ebx
   140002e81:	imul   r14,rax,0x23c34600
   140002e88:	lea    rax,[rbp-0x39]
   140002e8c:	lea    r8d,[rdx+0x1]
   140002e90:	mov    QWORD PTR [rsp+0x20],rax
   140002e95:	lea    r9,[rip+0x9d0c]        # 0x14000cba8
   140002e9c:	lea    rcx,[rip+0x9cf5]        # 0x14000cb98
   140002ea3:	call   QWORD PTR [rip+0x94af]        # 0x14000c358
   140002ea9:	mov    DWORD PTR [rbp-0x19],eax
   140002eac:	test   eax,eax
   140002eae:	mov    eax,0xea
   140002eb3:	jns    0x140002ebe
   140002eb5:	mov    WORD PTR [rbp-0x13],ax
   140002eb9:	jmp    0x140003062
   140002ebe:	mov    rbx,QWORD PTR [rbp-0x39]
   140002ec2:	mov    WORD PTR [rbp-0x15],ax
   140002ec6:	mov    rax,QWORD PTR [rbx]
   140002ec9:	mov    rdi,QWORD PTR [rax+0x18]
   140002ecd:	mov    rcx,rdi
   140002ed0:	call   QWORD PTR [rip+0x94ba]        # 0x14000c390
   140002ed6:	lea    r8,[rbp-0x49]
   140002eda:	mov    rcx,rbx
   140002edd:	lea    rdx,[rbp+0x6f]
   140002ee1:	call   rdi
   140002ee3:	xor    edi,edi
   140002ee5:	mov    DWORD PTR [rbp-0x19],eax
   140002ee8:	test   eax,eax
   140002eea:	mov    eax,0xeb
   140002eef:	js     0x140002eb5
   140002ef1:	mov    WORD PTR [rbp-0x15],ax
   140002ef5:	mov    eax,DWORD PTR [rbp+0x6f]
   140002ef8:	cmp    eax,0x1
   140002efb:	ja     0x140002f39
   140002efd:	mov    rcx,QWORD PTR [rip+0xc11c]        # 0x14000f020
   140002f04:	lea    r14,[rip+0xc115]        # 0x14000f020
   140002f0b:	cmp    rcx,r14
   140002f0e:	je     0x140002f2f
   140002f10:	test   DWORD PTR [rcx+0x1c],0x8000000
   140002f17:	je     0x140002f2f
   140002f19:	mov    rcx,QWORD PTR [rcx+0x10]
   140002f1d:	lea    edx,[rdi+0x17]
   140002f20:	mov    r9d,eax
   140002f23:	lea    r8,[rip+0x9c5e]        # 0x14000cb88
   140002f2a:	call   0x14000102c
   140002f2f:	mov    eax,0xf1
   140002f34:	jmp    0x140002e2a
   140002f39:	mov    rcx,rax
   140002f3c:	shl    rcx,0x2
   140002f40:	call   QWORD PTR [rip+0x941a]        # 0x14000c360
   140002f46:	mov    rsi,rax
   140002f49:	mov    ecx,0xf5
   140002f4e:	test   rax,rax
   140002f51:	jne    0x140002f63
   140002f53:	mov    DWORD PTR [rbp-0x19],0x8007000e
   140002f5a:	mov    WORD PTR [rbp-0x13],cx
   140002f5e:	jmp    0x140003062
   140002f63:	mov    r8d,DWORD PTR [rbp+0x6f]
   140002f67:	xor    edx,edx
   140002f69:	mov    WORD PTR [rbp-0x15],cx
   140002f6d:	mov    rcx,rax
   140002f70:	shl    r8,0x2
   140002f74:	mov    DWORD PTR [rbp-0x19],edi
   140002f77:	call   0x14000b152
   140002f7c:	lea    rcx,[rbp-0x41]
   140002f80:	call   QWORD PTR [rip+0x91ba]        # 0x14000c140
   140002f86:	mov    edx,edi
   140002f88:	mov    rax,QWORD PTR [rbp-0x41]
   140002f8c:	cmp    DWORD PTR [rbp+0x6f],edi
   140002f8f:	jbe    0x140002fc7
   140002f91:	mov    r9d,edx
   140002f94:	mov    rcx,rax
   140002f97:	imul   r8,r9,0x98
   140002f9e:	add    r8,QWORD PTR [rbp-0x49]
   140002fa2:	sub    rcx,QWORD PTR [r8+0x10]
   140002fa6:	cmp    rcx,r14
   140002fa9:	jbe    0x140002fc0
   140002fab:	mov    DWORD PTR [rsi+r9*4],0x1
   140002fb3:	cmp    r12,QWORD PTR [r8+0x10]
   140002fb7:	jae    0x140002fc0
   140002fb9:	mov    r12,QWORD PTR [r8+0x10]
   140002fbd:	mov    r15d,edx
   140002fc0:	inc    edx
   140002fc2:	cmp    edx,DWORD PTR [rbp+0x6f]
   140002fc5:	jb     0x140002f91
   140002fc7:	mov    eax,r15d
   140002fca:	mov    DWORD PTR [rsi+rax*4],edi
   140002fcd:	mov    eax,DWORD PTR [rbp+0x6f]
   140002fd0:	test   eax,eax
   140002fd2:	je     0x140003062
   140002fd8:	mov    r15d,0x11a
   140002fde:	lea    r14,[rip+0xc03b]        # 0x14000f020
   140002fe5:	mov    ecx,edi
   140002fe7:	cmp    DWORD PTR [rsi+rcx*4],0x0
   140002feb:	je     0x140003053
   140002fed:	imul   rbx,rcx,0x98
   140002ff4:	add    rbx,QWORD PTR [rbp-0x49]
   140002ff8:	mov    rcx,QWORD PTR [rip+0xc021]        # 0x14000f020
   140002fff:	cmp    rcx,r14
   140003002:	je     0x140003022
   140003004:	test   DWORD PTR [rcx+0x1c],0x8000000
   14000300b:	je     0x140003022
   14000300d:	mov    rax,QWORD PTR [rbx+0x10]
   140003011:	mov    r9,rbx
   140003014:	mov    rcx,QWORD PTR [rcx+0x10]
   140003018:	mov    QWORD PTR [rsp+0x20],rax
   14000301d:	call   0x140002690
   140003022:	movups xmm0,XMMWORD PTR [rbx]
   140003025:	mov    rax,QWORD PTR [r13+0x0]
   140003029:	movdqu XMMWORD PTR [rbp-0x29],xmm0
   14000302e:	mov    rbx,QWORD PTR [rax+0x38]
   140003032:	mov    rcx,rbx
   140003035:	call   QWORD PTR [rip+0x9355]        # 0x14000c390
   14000303b:	lea    rdx,[rbp-0x29]
   14000303f:	mov    rcx,r13
   140003042:	call   rbx
   140003044:	mov    DWORD PTR [rbp-0x19],eax
   140003047:	test   eax,eax
   140003049:	js     0x14000305b
   14000304b:	mov    eax,DWORD PTR [rbp+0x6f]
   14000304e:	mov    WORD PTR [rbp-0x15],r15w
   140003053:	inc    edi
   140003055:	cmp    edi,eax
   140003057:	jae    0x140003060
   140003059:	jmp    0x140002fe5
   14000305b:	mov    WORD PTR [rbp-0x13],r15w
   140003060:	xor    edi,edi
   140003062:	mov    rcx,rsi
   140003065:	call   QWORD PTR [rip+0x92e5]        # 0x14000c350
   14000306b:	mov    ecx,DWORD PTR [rbp+0x6f]
   14000306e:	lea    rdx,[rbp-0x49]
   140003072:	call   QWORD PTR [rip+0x9180]        # 0x14000c1f8
   140003078:	mov    rcx,QWORD PTR [rbp+0x7f]
   14000307c:	lea    rax,[rcx-0x1]
   140003080:	cmp    rax,0xfffffffffffffffd
   140003084:	ja     0x140003093
   140003086:	call   QWORD PTR [rip+0x8f84]        # 0x14000c010
   14000308c:	mov    rcx,rdi
   14000308f:	mov    QWORD PTR [rbp+0x7f],rcx
   140003093:	mov    esi,DWORD PTR [rbp-0x19]
   140003096:	lea    rax,[rcx-0x1]
   14000309a:	cmp    rax,0xfffffffffffffffd
   14000309e:	ja     0x1400030aa
   1400030a0:	call   QWORD PTR [rip+0x8f6a]        # 0x14000c010
   1400030a6:	mov    QWORD PTR [rbp+0x7f],rdi
   1400030aa:	mov    rbx,QWORD PTR [rbp-0x39]
   1400030ae:	test   rbx,rbx
   1400030b1:	je     0x1400030c8
   1400030b3:	mov    rcx,QWORD PTR [rbx]
   1400030b6:	mov    rdi,QWORD PTR [rcx+0x10]
   1400030ba:	mov    rcx,rdi
   1400030bd:	call   QWORD PTR [rip+0x92cd]        # 0x14000c390
   1400030c3:	mov    rcx,rbx
   1400030c6:	call   rdi
   1400030c8:	lea    rcx,[rbp-0x19]
   1400030cc:	call   0x1400084f8
   1400030d1:	mov    rbx,QWORD PTR [rsp+0xe0]
   1400030d9:	mov    eax,esi
   1400030db:	add    rsp,0xa0
   1400030e2:	pop    r15
   1400030e4:	pop    r14
   1400030e6:	pop    r13
   1400030e8:	pop    r12
   1400030ea:	pop    rdi
   1400030eb:	pop    rsi
   1400030ec:	pop    rbp
   1400030ed:	ret    
   1400030ee:	int3   
   1400030ef:	int3   
   1400030f0:	int3   
   1400030f1:	int3   
   1400030f2:	int3   
   1400030f3:	int3   
   1400030f4:	mov    rax,rsp
   1400030f7:	mov    QWORD PTR [rax+0x8],rbx
   1400030fb:	mov    QWORD PTR [rax+0x10],rsi
   1400030ff:	mov    QWORD PTR [rax+0x18],rdi
   140003103:	push   rbp
   140003104:	push   r12
   140003106:	push   r13
   140003108:	push   r14
   14000310a:	push   r15
   14000310c:	lea    rbp,[rax-0x1f8]
   140003113:	sub    rsp,0x2d0
   14000311a:	mov    rax,QWORD PTR [rip+0xbee7]        # 0x14000f008
   140003121:	xor    rax,rsp
   140003124:	mov    QWORD PTR [rbp+0x1c0],rax
   14000312b:	mov    rcx,QWORD PTR [rip+0xbeee]        # 0x14000f020
   140003132:	lea    r12,[rip+0xbee7]        # 0x14000f020
   140003139:	lea    r13,[rip+0x9a48]        # 0x14000cb88
   140003140:	cmp    rcx,r12
   140003143:	je     0x14000315f
   140003145:	test   DWORD PTR [rcx+0x1c],0x20000000
   14000314c:	je     0x14000315f
   14000314e:	mov    rcx,QWORD PTR [rcx+0x10]
   140003152:	mov    edx,0x19
   140003157:	mov    r8,r13
   14000315a:	call   0x140001008
   14000315f:	mov    r9d,0x1
   140003165:	lea    rdx,[rip+0x97ec]        # 0x14000c958
   14000316c:	mov    r8d,0x132
   140003172:	lea    rcx,[rsp+0x48]
   140003177:	call   0x1400083e8
   14000317c:	xor    r15d,r15d
   14000317f:	lea    rax,[rip+0x9faa]        # 0x14000d130
   140003186:	xor    edx,edx
   140003188:	mov    QWORD PTR [rbp-0x78],rax
   14000318c:	mov    r8d,0x20c
   140003192:	mov    QWORD PTR [rsp+0x38],r15
   140003197:	lea    rcx,[rbp-0x4c]
   14000319b:	mov    QWORD PTR [rbp-0x70],r15
   14000319f:	mov    DWORD PTR [rbp-0x50],r15d
   1400031a3:	call   0x14000b152
   1400031a8:	xor    eax,eax
   1400031aa:	mov    DWORD PTR [rbp-0x68],r15d
   1400031ae:	xor    ecx,ecx
   1400031b0:	mov    QWORD PTR [rbp-0x64],rax
   1400031b4:	mov    DWORD PTR [rsp+0x40],r15d
   1400031b9:	mov    r14d,r15d
   1400031bc:	mov    BYTE PTR [rsp+0x30],0x1
   1400031c1:	mov    QWORD PTR [rbp-0x80],r15
   1400031c5:	mov    BYTE PTR [rsp+0x31],r15b
   1400031ca:	call   QWORD PTR [rip+0x8f68]        # 0x14000c138
   1400031d0:	mov    rsi,rax
   1400031d3:	test   rax,rax
   1400031d6:	jne    0x140003208
   1400031d8:	call   QWORD PTR [rip+0x8f52]        # 0x14000c130
   1400031de:	movzx  ecx,ax
   1400031e1:	or     ecx,0x80070000
   1400031e7:	test   eax,eax
   1400031e9:	cmovle ecx,eax
   1400031ec:	mov    eax,0x144
   1400031f1:	mov    DWORD PTR [rsp+0x48],ecx
   1400031f5:	test   ecx,ecx
   1400031f7:	jns    0x140003203
   1400031f9:	mov    WORD PTR [rsp+0x4e],ax
   1400031fe:	jmp    0x1400035cb
   140003203:	mov    WORD PTR [rsp+0x4c],ax
   140003208:	lea    rcx,[rsp+0x31]
   14000320d:	call   0x1400060d4
   140003212:	mov    DWORD PTR [rsp+0x48],eax
   140003216:	test   eax,eax
   140003218:	mov    eax,0x149
   14000321d:	js     0x1400031f9
   14000321f:	mov    WORD PTR [rsp+0x4c],ax
   140003224:	mov    rcx,QWORD PTR [rip+0xbdf5]        # 0x14000f020
   14000322b:	cmp    rcx,r12
   14000322e:	je     0x14000324a
   140003230:	test   DWORD PTR [rcx+0x1c],0x8000000
   140003237:	je     0x14000324a
   140003239:	mov    rcx,QWORD PTR [rcx+0x10]
   14000323d:	mov    edx,0x1a
   140003242:	mov    r8,r13
   140003245:	call   0x140001008
   14000324a:	xor    edx,edx
   14000324c:	lea    rax,[rsp+0x38]
   140003251:	lea    r9,[rip+0x9990]        # 0x14000cbe8
   140003258:	mov    QWORD PTR [rsp+0x20],rax
   14000325d:	lea    rcx,[rip+0x9974]        # 0x14000cbd8
   140003264:	lea    r8d,[rdx+0x1]
   140003268:	call   QWORD PTR [rip+0x90ea]        # 0x14000c358
   14000326e:	mov    ebx,eax
   140003270:	test   eax,eax
   140003272:	jns    0x1400032ab
   140003274:	mov    rcx,QWORD PTR [rip+0xbda5]        # 0x14000f020
   14000327b:	cmp    rcx,r12
   14000327e:	je     0x14000329d
   140003280:	test   DWORD PTR [rcx+0x1c],0x2000000
   140003287:	je     0x14000329d
   140003289:	mov    rcx,QWORD PTR [rcx+0x10]
   14000328d:	mov    edx,0x1b
   140003292:	mov    r9d,eax
   140003295:	mov    r8,r13
   140003298:	call   0x14000102c
   14000329d:	mov    DWORD PTR [rsp+0x48],ebx
   1400032a1:	mov    eax,0x151
   1400032a6:	jmp    0x1400031f9
   1400032ab:	mov    rbx,QWORD PTR [rsp+0x38]
   1400032b0:	mov    rax,QWORD PTR [rbx]
   1400032b3:	mov    rdi,QWORD PTR [rax+0xf0]
   1400032ba:	mov    rcx,rdi
   1400032bd:	call   QWORD PTR [rip+0x90cd]        # 0x14000c390
   1400032c3:	mov    rcx,rbx
   1400032c6:	call   rdi
   1400032c8:	test   eax,eax
   1400032ca:	jns    0x1400032f5
   1400032cc:	mov    rcx,QWORD PTR [rip+0xbd4d]        # 0x14000f020
   1400032d3:	cmp    rcx,r12
   1400032d6:	je     0x1400032f5
   1400032d8:	test   DWORD PTR [rcx+0x1c],0x2000000
   1400032df:	je     0x1400032f5
   1400032e1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400032e5:	mov    edx,0x1c
   1400032ea:	mov    r9d,eax
   1400032ed:	mov    r8,r13
   1400032f0:	call   0x14000102c
   1400032f5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400032fa:	mov    rax,QWORD PTR [rbx]
   1400032fd:	mov    rdi,QWORD PTR [rax+0x120]
   140003304:	mov    rcx,rdi
   140003307:	call   QWORD PTR [rip+0x9083]        # 0x14000c390
   14000330d:	mov    rcx,rbx
   140003310:	call   rdi
   140003312:	test   eax,eax
   140003314:	jns    0x14000333f
   140003316:	mov    rcx,QWORD PTR [rip+0xbd03]        # 0x14000f020
   14000331d:	cmp    rcx,r12
   140003320:	je     0x14000333f
   140003322:	test   DWORD PTR [rcx+0x1c],0x4000000
   140003329:	je     0x14000333f
   14000332b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000332f:	mov    edx,0x1d
   140003334:	mov    r9d,eax
   140003337:	mov    r8,r13
   14000333a:	call   0x14000102c
   14000333f:	mov    rcx,QWORD PTR [rsp+0x38]
   140003344:	call   0x140002a58
   140003349:	test   eax,eax
   14000334b:	jns    0x140003376
   14000334d:	mov    rcx,QWORD PTR [rip+0xbccc]        # 0x14000f020
   140003354:	cmp    rcx,r12
   140003357:	je     0x140003376
   140003359:	test   DWORD PTR [rcx+0x1c],0x4000000
   140003360:	je     0x140003376
   140003362:	mov    rcx,QWORD PTR [rcx+0x10]
   140003366:	mov    edx,0x1e
   14000336b:	mov    r9d,eax
   14000336e:	mov    r8,r13
   140003371:	call   0x14000102c
   140003376:	mov    rcx,QWORD PTR [rsp+0x38]
   14000337b:	call   0x140002cec
   140003380:	test   eax,eax
   140003382:	jns    0x1400033ad
   140003384:	mov    rcx,QWORD PTR [rip+0xbc95]        # 0x14000f020
   14000338b:	cmp    rcx,r12
   14000338e:	je     0x1400033ad
   140003390:	test   DWORD PTR [rcx+0x1c],0x4000000
   140003397:	je     0x1400033ad
   140003399:	mov    rcx,QWORD PTR [rcx+0x10]
   14000339d:	mov    edx,0x1f
   1400033a2:	mov    r9d,eax
   1400033a5:	mov    r8,r13
   1400033a8:	call   0x14000102c
   1400033ad:	mov    rbx,QWORD PTR [rsp+0x38]
   1400033b2:	mov    rax,QWORD PTR [rbx]
   1400033b5:	mov    rdi,QWORD PTR [rax+0x110]
   1400033bc:	mov    rcx,rdi
   1400033bf:	call   QWORD PTR [rip+0x8fcb]        # 0x14000c390
   1400033c5:	mov    rcx,rbx
   1400033c8:	call   rdi
   1400033ca:	test   eax,eax
   1400033cc:	jns    0x1400033f7
   1400033ce:	mov    rcx,QWORD PTR [rip+0xbc4b]        # 0x14000f020
   1400033d5:	cmp    rcx,r12
   1400033d8:	je     0x1400033f7
   1400033da:	test   DWORD PTR [rcx+0x1c],0x4000000
   1400033e1:	je     0x1400033f7
   1400033e3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400033e7:	mov    edx,0x20
   1400033ec:	mov    r9d,eax
   1400033ef:	mov    r8,r13
   1400033f2:	call   0x14000102c
   1400033f7:	call   0x140002824
   1400033fc:	mov    ecx,eax
   1400033fe:	mov    DWORD PTR [rsp+0x48],eax
   140003402:	test   eax,eax
   140003404:	mov    eax,0x17d
   140003409:	js     0x1400031f9
   14000340f:	mov    WORD PTR [rsp+0x4c],ax
   140003414:	test   ecx,ecx
   140003416:	jne    0x140003422
   140003418:	mov    eax,0x181
   14000341d:	jmp    0x1400035c1
   140003422:	mov    rcx,QWORD PTR [rsp+0x38]
   140003427:	lea    rdx,[rsp+0x40]
   14000342c:	xor    r8d,r8d
   14000342f:	call   0x140001110
   140003434:	mov    ecx,eax
   140003436:	mov    DWORD PTR [rsp+0x48],eax
   14000343a:	test   eax,eax
   14000343c:	mov    eax,0x185
   140003441:	js     0x1400031f9
   140003447:	mov    WORD PTR [rsp+0x4c],ax
   14000344c:	cmp    ecx,0x1
   14000344f:	jne    0x14000345b
   140003451:	mov    eax,0x189
   140003456:	jmp    0x1400035c1
   14000345b:	call   0x140002824
   140003460:	mov    ebx,eax
   140003462:	mov    DWORD PTR [rsp+0x48],eax
   140003466:	test   eax,eax
   140003468:	mov    eax,0x190
   14000346d:	js     0x1400031f9
   140003473:	mov    WORD PTR [rsp+0x4c],ax
   140003478:	test   ebx,ebx
   14000347a:	jne    0x140003486
   14000347c:	mov    eax,0x194
   140003481:	jmp    0x1400035c1
   140003486:	mov    rdx,rsi
   140003489:	lea    rcx,[rbp-0x78]
   14000348d:	call   0x14000a3dc
   140003492:	mov    DWORD PTR [rsp+0x48],eax
   140003496:	test   eax,eax
   140003498:	mov    eax,0x197
   14000349d:	js     0x1400031f9
   1400034a3:	mov    WORD PTR [rsp+0x4c],ax
   1400034a8:	cmp    DWORD PTR [rsp+0x40],r15d
   1400034ad:	je     0x140003552
   1400034b3:	mov    r8,QWORD PTR [rbp-0x78]
   1400034b7:	lea    r9,[rbp-0x40]
   1400034bb:	sub    r8,r9
   1400034be:	mov    DWORD PTR [rbp-0x50],0x64
   1400034c5:	mov    DWORD PTR [rbp-0x4c],0x7
   1400034cc:	lea    rax,[rbp-0x40]
   1400034d0:	mov    QWORD PTR [rbp-0x48],r15
   1400034d4:	mov    ecx,0x40
   1400034d9:	mov    edx,r15d
   1400034dc:	lea    r9,[rcx-0x1]
   1400034e0:	test   r9,r9
   1400034e3:	je     0x140003500
   1400034e5:	movzx  r10d,WORD PTR [rax+r8*1]
   1400034ea:	test   r10w,r10w
   1400034ee:	je     0x140003500
   1400034f0:	mov    WORD PTR [rax],r10w
   1400034f4:	mov    rcx,r9
   1400034f7:	add    rax,0x2
   1400034fb:	test   r9,r9
   1400034fe:	jne    0x1400034dc
   140003500:	test   rcx,rcx
   140003503:	jne    0x14000350e
   140003505:	sub    rax,0x2
   140003509:	mov    edx,0x8007007a
   14000350e:	mov    WORD PTR [rax],r15w
   140003512:	mov    eax,0x19f
   140003517:	mov    DWORD PTR [rsp+0x48],edx
   14000351b:	test   edx,edx
   14000351d:	js     0x1400031f9
   140003523:	lea    rdx,[rbp-0x68]
   140003527:	mov    WORD PTR [rsp+0x4c],ax
   14000352c:	lea    rcx,[rbp-0x50]
   140003530:	mov    ebx,r15d
   140003533:	call   QWORD PTR [rip+0x8caf]        # 0x14000c1e8
   140003539:	test   eax,eax
   14000353b:	jne    0x14000354e
   14000353d:	mov    eax,DWORD PTR [rbp-0x68]
   140003540:	movzx  ebx,ax
   140003543:	or     ebx,0x80070000
   140003549:	test   eax,eax
   14000354b:	cmovle ebx,eax
   14000354e:	mov    r14d,DWORD PTR [rbp-0x64]
   140003552:	test   ebx,ebx
   140003554:	jns    0x140003588
   140003556:	cmp    ebx,0x80070422
   14000355c:	je     0x140003588
   14000355e:	cmp    ebx,0x800704ec
   140003564:	je     0x140003588
   140003566:	lea    r9,[rip+0x940b]        # 0x14000c978
   14000356d:	mov    DWORD PTR [rsp+0x20],ebx
   140003571:	mov    r8d,0x2013
   140003577:	lea    rdx,[rip+0x914a]        # 0x14000c6c8
   14000357e:	lea    rcx,[rsp+0x48]
   140003583:	call   0x14000884c
   140003588:	mov    DWORD PTR [rsp+0x48],ebx
   14000358c:	mov    eax,0x1af
   140003591:	test   ebx,ebx
   140003593:	js     0x1400031f9
   140003599:	lea    r9,[rip+0x9544]        # 0x14000cae4
   1400035a0:	mov    WORD PTR [rsp+0x4c],ax
   1400035a5:	mov    r8d,0x2014
   1400035ab:	lea    rdx,[rip+0x9116]        # 0x14000c6c8
   1400035b2:	lea    rcx,[rsp+0x48]
   1400035b7:	call   0x14000887c
   1400035bc:	mov    eax,0x1b3
   1400035c1:	mov    WORD PTR [rsp+0x4c],ax
   1400035c6:	mov    DWORD PTR [rsp+0x48],r15d
   1400035cb:	xor    edx,edx
   1400035cd:	lea    rax,[rbp-0x80]
   1400035d1:	lea    r9,[rip+0x95f0]        # 0x14000cbc8
   1400035d8:	mov    QWORD PTR [rsp+0x20],rax
   1400035dd:	lea    rcx,[rip+0x95d4]        # 0x14000cbb8
   1400035e4:	lea    r8d,[rdx+0x1]
   1400035e8:	call   QWORD PTR [rip+0x8d6a]        # 0x14000c358
   1400035ee:	test   eax,eax
   1400035f0:	jns    0x14000360e
   1400035f2:	mov    rcx,QWORD PTR [rip+0xba27]        # 0x14000f020
   1400035f9:	cmp    rcx,r12
   1400035fc:	je     0x140003660
   1400035fe:	test   DWORD PTR [rcx+0x1c],0x8000000
   140003605:	je     0x140003660
   140003607:	mov    edx,0x21
   14000360c:	jmp    0x14000364a
   14000360e:	mov    rbx,QWORD PTR [rbp-0x80]
   140003612:	mov    rax,QWORD PTR [rbx]
   140003615:	mov    rdi,QWORD PTR [rax+0x30]
   140003619:	mov    rcx,rdi
   14000361c:	call   QWORD PTR [rip+0x8d6e]        # 0x14000c390
   140003622:	mov    edx,0xf
   140003627:	mov    rcx,rbx
   14000362a:	call   rdi
   14000362c:	test   eax,eax
   14000362e:	jns    0x140003659
   140003630:	mov    rcx,QWORD PTR [rip+0xb9e9]        # 0x14000f020
   140003637:	cmp    rcx,r12
   14000363a:	je     0x140003660
   14000363c:	test   DWORD PTR [rcx+0x1c],0x8000000
   140003643:	je     0x140003660
   140003645:	mov    edx,0x22
   14000364a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000364e:	mov    r9d,eax
   140003651:	mov    r8,r13
   140003654:	call   0x14000102c
   140003659:	mov    rcx,QWORD PTR [rip+0xb9c0]        # 0x14000f020
   140003660:	cmp    BYTE PTR [rsp+0x31],r15b
   140003665:	je     0x1400036e1
   140003667:	test   r14d,r14d
   14000366a:	je     0x1400036ad
   14000366c:	lea    rdx,[rsp+0x30]
   140003671:	mov    ecx,r14d
   140003674:	call   0x1400041e8
   140003679:	test   eax,eax
   14000367b:	jns    0x1400036a6
   14000367d:	mov    rcx,QWORD PTR [rip+0xb99c]        # 0x14000f020
   140003684:	cmp    rcx,r12
   140003687:	je     0x1400036a6
   140003689:	test   DWORD PTR [rcx+0x1c],0x4000000
   140003690:	je     0x1400036a6
   140003692:	mov    rcx,QWORD PTR [rcx+0x10]
   140003696:	mov    edx,0x23
   14000369b:	mov    r9d,eax
   14000369e:	mov    r8,r13
   1400036a1:	call   0x14000102c
   1400036a6:	cmp    BYTE PTR [rsp+0x30],r15b
   1400036ab:	je     0x140003700
   1400036ad:	call   0x140003cb0
   1400036b2:	test   eax,eax
   1400036b4:	jns    0x140003700
   1400036b6:	mov    rcx,QWORD PTR [rip+0xb963]        # 0x14000f020
   1400036bd:	cmp    rcx,r12
   1400036c0:	je     0x140003700
   1400036c2:	test   DWORD PTR [rcx+0x1c],0x4000000
   1400036c9:	je     0x140003700
   1400036cb:	mov    rcx,QWORD PTR [rcx+0x10]
   1400036cf:	mov    edx,0x24
   1400036d4:	mov    r9d,eax
   1400036d7:	mov    r8,r13
   1400036da:	call   0x14000102c
   1400036df:	jmp    0x140003700
   1400036e1:	cmp    rcx,r12
   1400036e4:	je     0x140003700
   1400036e6:	test   DWORD PTR [rcx+0x1c],0x8000000
   1400036ed:	je     0x140003700
   1400036ef:	mov    rcx,QWORD PTR [rcx+0x10]
   1400036f3:	mov    edx,0x25
   1400036f8:	mov    r8,r13
   1400036fb:	call   0x140001008
   140003700:	mov    rcx,QWORD PTR [rsp+0x38]
   140003705:	test   rcx,rcx
   140003708:	je     0x14000373c
   14000370a:	call   0x140002148
   14000370f:	test   eax,eax
   140003711:	jns    0x14000373c
   140003713:	mov    rcx,QWORD PTR [rip+0xb906]        # 0x14000f020
   14000371a:	cmp    rcx,r12
   14000371d:	je     0x14000373c
   14000371f:	test   DWORD PTR [rcx+0x1c],0x4000000
   140003726:	je     0x14000373c
   140003728:	mov    rcx,QWORD PTR [rcx+0x10]
   14000372c:	mov    edx,0x26
   140003731:	mov    r9d,eax
   140003734:	mov    r8,r13
   140003737:	call   0x14000102c
   14000373c:	mov    rbx,QWORD PTR [rbp-0x80]
   140003740:	mov    esi,DWORD PTR [rsp+0x48]
   140003744:	test   rbx,rbx
   140003747:	je     0x14000375e
   140003749:	mov    rax,QWORD PTR [rbx]
   14000374c:	mov    rdi,QWORD PTR [rax+0x10]
   140003750:	mov    rcx,rdi
   140003753:	call   QWORD PTR [rip+0x8c37]        # 0x14000c390
   140003759:	mov    rcx,rbx
   14000375c:	call   rdi
   14000375e:	lea    rcx,[rbp-0x78]
   140003762:	call   0x140009ce8
   140003767:	mov    rbx,QWORD PTR [rsp+0x38]
   14000376c:	test   rbx,rbx
   14000376f:	je     0x140003786
   140003771:	mov    rcx,QWORD PTR [rbx]
   140003774:	mov    rdi,QWORD PTR [rcx+0x10]
   140003778:	mov    rcx,rdi
   14000377b:	call   QWORD PTR [rip+0x8c0f]        # 0x14000c390
   140003781:	mov    rcx,rbx
   140003784:	call   rdi
   140003786:	lea    rcx,[rsp+0x48]
   14000378b:	call   0x1400084f8
   140003790:	mov    eax,esi
   140003792:	mov    rcx,QWORD PTR [rbp+0x1c0]
   140003799:	xor    rcx,rsp
   14000379c:	call   0x14000ab80
   1400037a1:	lea    r11,[rsp+0x2d0]
   1400037a9:	mov    rbx,QWORD PTR [r11+0x30]
   1400037ad:	mov    rsi,QWORD PTR [r11+0x38]
   1400037b1:	mov    rdi,QWORD PTR [r11+0x40]
   1400037b5:	mov    rsp,r11
   1400037b8:	pop    r15
   1400037ba:	pop    r14
   1400037bc:	pop    r13
   1400037be:	pop    r12
   1400037c0:	pop    rbp
   1400037c1:	ret    
   1400037c2:	int3   
   1400037c3:	int3   
   1400037c4:	int3   
   1400037c5:	int3   
   1400037c6:	int3   
   1400037c7:	int3   
   1400037c8:	mov    rax,rsp
   1400037cb:	mov    QWORD PTR [rax+0x18],rbx
   1400037cf:	mov    DWORD PTR [rax+0x10],edx
   1400037d2:	mov    BYTE PTR [rax+0x8],cl
   1400037d5:	push   rsi
   1400037d6:	sub    rsp,0x20
   1400037da:	and    DWORD PTR [rax+0x10],0x0
   1400037de:	mov    r9d,0x2
   1400037e4:	mov    ebx,r8d
   1400037e7:	mov    WORD PTR [rax+0x8],0x100
   1400037ed:	or     rsi,0xffffffffffffffff
   1400037f1:	lea    r8,[rax+0x8]
   1400037f5:	mov    rcx,rsi
   1400037f8:	lea    edx,[r9+0x10]
   1400037fc:	call   QWORD PTR [rip+0x8af6]        # 0x14000c2f8
   140003802:	test   eax,eax
   140003804:	js     0x14000383d
   140003806:	and    DWORD PTR [rsp+0x48],0x0
   14000380b:	lea    r9d,[rsi+0x5]
   14000380f:	lea    r8,[rsp+0x48]
   140003814:	mov    rcx,rsi
   140003817:	lea    edx,[rsi+0x22]
   14000381a:	call   QWORD PTR [rip+0x8ad8]        # 0x14000c2f8
   140003820:	test   eax,eax
   140003822:	js     0x14000383d
   140003824:	lea    r9d,[rsi+0x5]
   140003828:	mov    DWORD PTR [rsp+0x38],ebx
   14000382c:	lea    r8,[rsp+0x38]
   140003831:	mov    rcx,rsi
   140003834:	lea    edx,[rsi+0x28]
   140003837:	call   QWORD PTR [rip+0x8abb]        # 0x14000c2f8
   14000383d:	mov    rbx,QWORD PTR [rsp+0x40]
   140003842:	add    rsp,0x20
   140003846:	pop    rsi
   140003847:	ret    
   140003848:	int3   
   140003849:	int3   
   14000384a:	int3   
   14000384b:	int3   
   14000384c:	int3   
   14000384d:	int3   
   14000384e:	int3   
   14000384f:	int3   
   140003850:	rex push rbp
   140003852:	push   rbx
   140003853:	push   rsi
   140003854:	push   rdi
   140003855:	push   r14
   140003857:	push   r15
   140003859:	lea    rbp,[rsp-0x8]
   14000385e:	sub    rsp,0x108
   140003865:	mov    r15,rcx
   140003868:	lea    rdx,[rip+0x9119]        # 0x14000c988
   14000386f:	mov    ebx,0x1
   140003874:	lea    rcx,[rsp+0x30]
   140003879:	mov    r9d,ebx
   14000387c:	mov    r8d,0x22d
   140003882:	call   0x1400083e8
   140003887:	and    QWORD PTR [rbp+0x48],0x0
   14000388c:	xor    eax,eax
   14000388e:	and    DWORD PTR [rbp+0x40],eax
   140003891:	xor    edi,edi
   140003893:	and    QWORD PTR [rbp+0x58],rdi
   140003897:	mov    QWORD PTR [rbp+0x50],rdi
   14000389b:	mov    WORD PTR [rsp+0x68],bx
   1400038a0:	mov    QWORD PTR [rsp+0x6a],rax
   1400038a5:	mov    QWORD PTR [rsp+0x72],rax
   1400038aa:	mov    DWORD PTR [rsp+0x7a],eax
   1400038ae:	mov    WORD PTR [rsp+0x7e],ax
   1400038b3:	test   r15,r15
   1400038b6:	je     0x140003a77
   1400038bc:	and    DWORD PTR [rsp+0x30],eax
   1400038c0:	lea    r9,[rip+0x98a9]        # 0x14000d170
   1400038c7:	mov    DWORD PTR [r15],eax
   1400038ca:	lea    rcx,[rip+0x988f]        # 0x14000d160
   1400038d1:	mov    eax,0x235
   1400038d6:	mov    r8d,ebx
   1400038d9:	mov    WORD PTR [rsp+0x34],ax
   1400038de:	xor    edx,edx
   1400038e0:	lea    rax,[rbp+0x48]
   1400038e4:	mov    QWORD PTR [rsp+0x20],rax
   1400038e9:	call   QWORD PTR [rip+0x8a69]        # 0x14000c358
   1400038ef:	mov    r14d,eax
   1400038f2:	mov    DWORD PTR [rsp+0x30],eax
   1400038f6:	test   eax,eax
   1400038f8:	mov    eax,0x238
   1400038fd:	jns    0x140003909
   1400038ff:	mov    WORD PTR [rsp+0x36],ax
   140003904:	jmp    0x140003a1f
   140003909:	movups xmm1,XMMWORD PTR [rsp+0x68]
   14000390e:	mov    rbx,QWORD PTR [rbp+0x48]
   140003912:	movsd  xmm0,QWORD PTR [rsp+0x78]
   140003918:	mov    WORD PTR [rsp+0x34],ax
   14000391d:	movups XMMWORD PTR [rbp-0x20],xmm1
   140003921:	mov    rax,QWORD PTR [rbx]
   140003924:	movsd  QWORD PTR [rbp-0x10],xmm0
   140003929:	movups XMMWORD PTR [rbp-0x80],xmm1
   14000392d:	mov    rsi,QWORD PTR [rax+0x50]
   140003931:	mov    rcx,rsi
   140003934:	movsd  QWORD PTR [rbp-0x70],xmm0
   140003939:	movups XMMWORD PTR [rbp-0x40],xmm1
   14000393d:	movsd  QWORD PTR [rbp-0x30],xmm0
   140003942:	movups XMMWORD PTR [rbp-0x60],xmm1
   140003946:	movsd  QWORD PTR [rbp-0x50],xmm0
   14000394b:	call   QWORD PTR [rip+0x8a3f]        # 0x14000c390
   140003951:	lea    rax,[rbp-0x20]
   140003955:	mov    rcx,rbx
   140003958:	lea    r9,[rbp-0x80]
   14000395c:	mov    QWORD PTR [rsp+0x20],rax
   140003961:	lea    r8,[rbp-0x40]
   140003965:	lea    rdx,[rbp-0x60]
   140003969:	call   rsi
   14000396b:	mov    r14d,eax
   14000396e:	mov    DWORD PTR [rsp+0x30],eax
   140003972:	test   eax,eax
   140003974:	mov    eax,0x239
   140003979:	js     0x1400038ff
   14000397b:	mov    rcx,QWORD PTR [rbp+0x48]
   14000397f:	lea    r8,[rbp+0x50]
   140003983:	mov    WORD PTR [rsp+0x34],ax
   140003988:	call   0x140007428
   14000398d:	mov    rdi,QWORD PTR [rbp+0x50]
   140003991:	mov    r14d,eax
   140003994:	mov    DWORD PTR [rsp+0x30],eax
   140003998:	test   eax,eax
   14000399a:	mov    eax,0x23c
   14000399f:	js     0x1400038ff
   1400039a5:	mov    WORD PTR [rsp+0x34],ax
   1400039aa:	mov    rax,QWORD PTR [rdi]
   1400039ad:	mov    rbx,QWORD PTR [rax+0x70]
   1400039b1:	mov    rcx,rbx
   1400039b4:	call   QWORD PTR [rip+0x89d6]        # 0x14000c390
   1400039ba:	lea    r8,[rbp+0x58]
   1400039be:	xor    edx,edx
   1400039c0:	mov    rcx,rdi
   1400039c3:	call   rbx
   1400039c5:	mov    r14d,eax
   1400039c8:	mov    DWORD PTR [rsp+0x30],eax
   1400039cc:	test   eax,eax
   1400039ce:	mov    eax,0x23f
   1400039d3:	js     0x1400038ff
   1400039d9:	mov    rbx,QWORD PTR [rbp+0x58]
   1400039dd:	mov    WORD PTR [rsp+0x34],ax
   1400039e2:	mov    rax,QWORD PTR [rbx]
   1400039e5:	mov    rsi,QWORD PTR [rax+0x38]
   1400039e9:	mov    rcx,rsi
   1400039ec:	call   QWORD PTR [rip+0x899e]        # 0x14000c390
   1400039f2:	lea    rdx,[rbp+0x40]
   1400039f6:	mov    rcx,rbx
   1400039f9:	call   rsi
   1400039fb:	mov    r14d,eax
   1400039fe:	mov    DWORD PTR [rsp+0x30],eax
   140003a02:	test   eax,eax
   140003a04:	mov    eax,0x241
   140003a09:	js     0x1400038ff
   140003a0f:	mov    WORD PTR [rsp+0x34],ax
   140003a14:	xor    eax,eax
   140003a16:	cmp    DWORD PTR [rbp+0x40],eax
   140003a19:	setg   al
   140003a1c:	mov    DWORD PTR [r15],eax
   140003a1f:	mov    rbx,QWORD PTR [rbp+0x58]
   140003a23:	test   rbx,rbx
   140003a26:	je     0x140003a3d
   140003a28:	mov    rax,QWORD PTR [rbx]
   140003a2b:	mov    rsi,QWORD PTR [rax+0x10]
   140003a2f:	mov    rcx,rsi
   140003a32:	call   QWORD PTR [rip+0x8958]        # 0x14000c390
   140003a38:	mov    rcx,rbx
   140003a3b:	call   rsi
   140003a3d:	test   rdi,rdi
   140003a40:	je     0x140003a57
   140003a42:	mov    rax,QWORD PTR [rdi]
   140003a45:	mov    rbx,QWORD PTR [rax+0x10]
   140003a49:	mov    rcx,rbx
   140003a4c:	call   QWORD PTR [rip+0x893e]        # 0x14000c390
   140003a52:	mov    rcx,rdi
   140003a55:	call   rbx
   140003a57:	mov    rbx,QWORD PTR [rbp+0x48]
   140003a5b:	test   rbx,rbx
   140003a5e:	je     0x140003a8c
   140003a60:	mov    rax,QWORD PTR [rbx]
   140003a63:	mov    rdi,QWORD PTR [rax+0x10]
   140003a67:	mov    rcx,rdi
   140003a6a:	call   QWORD PTR [rip+0x8920]        # 0x14000c390
   140003a70:	mov    rcx,rbx
   140003a73:	call   rdi
   140003a75:	jmp    0x140003a8c
   140003a77:	mov    r14d,0x80070057
   140003a7d:	mov    eax,0x235
   140003a82:	mov    DWORD PTR [rsp+0x30],r14d
   140003a87:	mov    WORD PTR [rsp+0x36],ax
   140003a8c:	lea    rcx,[rsp+0x30]
   140003a91:	call   0x1400084f8
   140003a96:	mov    eax,r14d
   140003a99:	add    rsp,0x108
   140003aa0:	pop    r15
   140003aa2:	pop    r14
   140003aa4:	pop    rdi
   140003aa5:	pop    rsi
   140003aa6:	pop    rbx
   140003aa7:	pop    rbp
   140003aa8:	ret    
   140003aa9:	int3   
   140003aaa:	int3   
   140003aab:	int3   
   140003aac:	int3   
   140003aad:	int3   
   140003aae:	int3   
   140003aaf:	int3   
   140003ab0:	mov    QWORD PTR [rsp+0x18],rbx
   140003ab5:	push   rbp
   140003ab6:	push   rsi
   140003ab7:	push   rdi
   140003ab8:	push   r14
   140003aba:	push   r15
   140003abc:	mov    rbp,rsp
   140003abf:	sub    rsp,0x60
   140003ac3:	mov    rcx,QWORD PTR [rip+0xb556]        # 0x14000f020
   140003aca:	lea    r15,[rip+0xb54f]        # 0x14000f020
   140003ad1:	cmp    rcx,r15
   140003ad4:	je     0x140003af4
   140003ad6:	test   DWORD PTR [rcx+0x1c],0x20000000
   140003add:	je     0x140003af4
   140003adf:	mov    rcx,QWORD PTR [rcx+0x10]
   140003ae3:	lea    r8,[rip+0x909e]        # 0x14000cb88
   140003aea:	mov    edx,0x27
   140003aef:	call   0x140001008
   140003af4:	mov    ebx,0x1
   140003af9:	lea    rdx,[rip+0x8ea0]        # 0x14000c9a0
   140003b00:	mov    r9d,ebx
   140003b03:	lea    rcx,[rbp-0x40]
   140003b07:	mov    r8d,0x24e
   140003b0d:	call   0x1400083e8
   140003b12:	xor    r14d,r14d
   140003b15:	xor    esi,esi
   140003b17:	and    DWORD PTR [rbp+0x30],r14d
   140003b1b:	xor    r9d,r9d
   140003b1e:	xor    r8d,r8d
   140003b21:	mov    QWORD PTR [rbp+0x38],rsi
   140003b25:	mov    edx,ebx
   140003b27:	xor    ecx,ecx
   140003b29:	call   QWORD PTR [rip+0x85f9]        # 0x14000c128
   140003b2f:	xor    edx,edx
   140003b31:	xor    ecx,ecx
   140003b33:	call   QWORD PTR [rip+0x882f]        # 0x14000c368
   140003b39:	mov    edi,eax
   140003b3b:	test   eax,eax
   140003b3d:	jns    0x140003b84
   140003b3f:	cmp    eax,0x80010106
   140003b44:	je     0x140003b87
   140003b46:	mov    rcx,QWORD PTR [rip+0xb4d3]        # 0x14000f020
   140003b4d:	cmp    rcx,r15
   140003b50:	je     0x140003b71
   140003b52:	test   DWORD PTR [rcx+0x1c],0x2000000
   140003b59:	je     0x140003b71
   140003b5b:	mov    rcx,QWORD PTR [rcx+0x10]
   140003b5f:	lea    edx,[rbx+0x27]
   140003b62:	mov    r9d,eax
   140003b65:	lea    r8,[rip+0x901c]        # 0x14000cb88
   140003b6c:	call   0x14000102c
   140003b71:	mov    ebx,edi
   140003b73:	mov    eax,0x260
   140003b78:	mov    DWORD PTR [rbp-0x40],ebx
   140003b7b:	mov    WORD PTR [rbp-0x3a],ax
   140003b7f:	jmp    0x140003c8a
   140003b84:	mov    r14d,ebx
   140003b87:	call   0x140007614
   140003b8c:	mov    ebx,eax
   140003b8e:	mov    DWORD PTR [rbp-0x40],eax
   140003b91:	test   eax,eax
   140003b93:	mov    eax,0x267
   140003b98:	jns    0x140003ba3
   140003b9a:	mov    WORD PTR [rbp-0x3a],ax
   140003b9e:	jmp    0x140003c5e
   140003ba3:	lea    rcx,[rbp+0x30]
   140003ba7:	mov    WORD PTR [rbp-0x3c],ax
   140003bab:	call   0x140003850
   140003bb0:	mov    edi,eax
   140003bb2:	test   eax,eax
   140003bb4:	jns    0x140003bee
   140003bb6:	mov    rcx,QWORD PTR [rip+0xb463]        # 0x14000f020
   140003bbd:	cmp    rcx,r15
   140003bc0:	je     0x140003bea
   140003bc2:	test   DWORD PTR [rcx+0x1c],0x2000000
   140003bc9:	je     0x140003bea
   140003bcb:	mov    rcx,QWORD PTR [rcx+0x10]
   140003bcf:	lea    r8,[rip+0x8fb2]        # 0x14000cb88
   140003bd6:	mov    edx,0x29
   140003bdb:	mov    r9d,eax
   140003bde:	call   0x14000102c
   140003be3:	mov    rcx,QWORD PTR [rip+0xb436]        # 0x14000f020
   140003bea:	xor    edi,edi
   140003bec:	jmp    0x140003bf5
   140003bee:	mov    rcx,QWORD PTR [rip+0xb42b]        # 0x14000f020
   140003bf5:	cmp    DWORD PTR [rbp+0x30],esi
   140003bf8:	je     0x140003c29
   140003bfa:	cmp    rcx,r15
   140003bfd:	je     0x140003c1d
   140003bff:	test   DWORD PTR [rcx+0x1c],0x4000000
   140003c06:	je     0x140003c1d
   140003c08:	mov    rcx,QWORD PTR [rcx+0x10]
   140003c0c:	lea    r8,[rip+0x8f75]        # 0x14000cb88
   140003c13:	mov    edx,0x2a
   140003c18:	call   0x140001008
   140003c1d:	xor    ebx,ebx
   140003c1f:	mov    eax,0x274
   140003c24:	mov    DWORD PTR [rbp-0x40],ebx
   140003c27:	jmp    0x140003c5a
   140003c29:	xor    edx,edx
   140003c2b:	lea    rcx,[rbp+0x38]
   140003c2f:	call   0x1400049fc
   140003c34:	mov    r8d,0x3
   140003c3a:	call   0x1400037c8
   140003c3f:	call   0x1400030f4
   140003c44:	mov    rsi,QWORD PTR [rbp+0x38]
   140003c48:	mov    ebx,eax
   140003c4a:	mov    DWORD PTR [rbp-0x40],eax
   140003c4d:	test   eax,eax
   140003c4f:	mov    eax,0x283
   140003c54:	js     0x140003b9a
   140003c5a:	mov    WORD PTR [rbp-0x3c],ax
   140003c5e:	test   r14d,r14d
   140003c61:	je     0x140003c6c
   140003c63:	call   QWORD PTR [rip+0x8707]        # 0x14000c370
   140003c69:	mov    ebx,DWORD PTR [rbp-0x40]
   140003c6c:	test   rsi,rsi
   140003c6f:	je     0x140003c8a
   140003c71:	test   edi,edi
   140003c73:	mov    rcx,rsi
   140003c76:	sets   dl
   140003c79:	call   0x140004dc4
   140003c7e:	mov    rcx,rsi
   140003c81:	call   QWORD PTR [rip+0x86c9]        # 0x14000c350
   140003c87:	mov    ebx,DWORD PTR [rbp-0x40]
   140003c8a:	lea    rcx,[rbp-0x40]
   140003c8e:	call   0x1400084f8
   140003c93:	mov    eax,ebx
   140003c95:	mov    rbx,QWORD PTR [rsp+0xa0]
   140003c9d:	add    rsp,0x60
   140003ca1:	pop    r15
   140003ca3:	pop    r14
   140003ca5:	pop    rdi
   140003ca6:	pop    rsi
   140003ca7:	pop    rbp
   140003ca8:	ret    
   140003ca9:	int3   
   140003caa:	int3   
   140003cab:	int3   
   140003cac:	int3   
   140003cad:	int3   
   140003cae:	int3   
   140003caf:	int3   
   140003cb0:	rex push rbp
   140003cb2:	push   rbx
   140003cb3:	push   rsi
   140003cb4:	push   rdi
   140003cb5:	push   r12
   140003cb7:	push   r14
   140003cb9:	push   r15
   140003cbb:	mov    rbp,rsp
   140003cbe:	sub    rsp,0x80
   140003cc5:	mov    rcx,QWORD PTR [rip+0xb354]        # 0x14000f020
   140003ccc:	lea    rax,[rip+0xb34d]        # 0x14000f020
   140003cd3:	cmp    rcx,rax
   140003cd6:	je     0x140003cf6
   140003cd8:	test   DWORD PTR [rcx+0x1c],0x20000000
   140003cdf:	je     0x140003cf6
   140003ce1:	mov    rcx,QWORD PTR [rcx+0x10]
   140003ce5:	lea    r8,[rip+0x8e9c]        # 0x14000cb88
   140003cec:	mov    edx,0x2b
   140003cf1:	call   0x140001008
   140003cf6:	mov    r9d,0x1
   140003cfc:	lea    rdx,[rip+0x8cbd]        # 0x14000c9c0
   140003d03:	mov    r8d,0x29b
   140003d09:	lea    rcx,[rbp-0x38]
   140003d0d:	call   0x1400083e8
   140003d12:	xor    r12d,r12d
   140003d15:	lea    rax,[rbp-0x40]
   140003d19:	lea    r9,[rip+0x8ec8]        # 0x14000cbe8
   140003d20:	mov    DWORD PTR [rbp+0x58],r12d
   140003d24:	xor    edx,edx
   140003d26:	mov    BYTE PTR [rbp+0x40],r12b
   140003d2a:	lea    rcx,[rip+0x8ea7]        # 0x14000cbd8
   140003d31:	mov    QWORD PTR [rbp-0x50],r12
   140003d35:	lea    r8d,[r12+0x1]
   140003d3a:	mov    DWORD PTR [rbp+0x50],r12d
   140003d3e:	mov    QWORD PTR [rbp-0x48],r12
   140003d42:	mov    esi,r12d
   140003d45:	mov    r15d,r12d
   140003d48:	mov    QWORD PTR [rbp-0x40],r12
   140003d4c:	mov    r14d,r12d
   140003d4f:	mov    BYTE PTR [rbp+0x48],r12b
   140003d53:	mov    QWORD PTR [rsp+0x20],rax
   140003d58:	call   QWORD PTR [rip+0x85fa]        # 0x14000c358
   140003d5e:	mov    DWORD PTR [rbp-0x38],eax
   140003d61:	test   eax,eax
   140003d63:	mov    eax,0x2ab
   140003d68:	jns    0x140003d73
   140003d6a:	mov    WORD PTR [rbp-0x32],ax
   140003d6e:	jmp    0x140003f2c
   140003d73:	mov    rcx,QWORD PTR [rbp-0x40]
   140003d77:	lea    rdx,[rbp+0x58]
   140003d7b:	xor    r8d,r8d
   140003d7e:	mov    WORD PTR [rbp-0x34],ax
   140003d82:	call   0x140001110
   140003d87:	mov    ecx,eax
   140003d89:	mov    DWORD PTR [rbp-0x38],eax
   140003d8c:	test   eax,eax
   140003d8e:	mov    eax,0x2ae
   140003d93:	js     0x140003d6a
   140003d95:	mov    WORD PTR [rbp-0x34],ax
   140003d99:	cmp    ecx,0x1
   140003d9c:	jne    0x140003da8
   140003d9e:	mov    eax,0x2b2
   140003da3:	jmp    0x140003f24
   140003da8:	lea    rcx,[rbp+0x40]
   140003dac:	call   0x1400060d4
   140003db1:	mov    DWORD PTR [rbp-0x38],eax
   140003db4:	test   eax,eax
   140003db6:	mov    eax,0x2b5
   140003dbb:	js     0x140003d6a
   140003dbd:	mov    WORD PTR [rbp-0x34],ax
   140003dc1:	cmp    BYTE PTR [rbp+0x40],r12b
   140003dc5:	jne    0x140003dd1
   140003dc7:	mov    eax,0x2b9
   140003dcc:	jmp    0x140003f24
   140003dd1:	xor    edx,edx
   140003dd3:	lea    rax,[rbp-0x50]
   140003dd7:	lea    r9,[rip+0x8dca]        # 0x14000cba8
   140003dde:	mov    QWORD PTR [rsp+0x20],rax
   140003de3:	lea    rcx,[rip+0x8dae]        # 0x14000cb98
   140003dea:	lea    r8d,[rdx+0x1]
   140003dee:	call   QWORD PTR [rip+0x8564]        # 0x14000c358
   140003df4:	mov    DWORD PTR [rbp-0x38],eax
   140003df7:	test   eax,eax
   140003df9:	mov    eax,0x2bc
   140003dfe:	js     0x140003d6a
   140003e04:	mov    rbx,QWORD PTR [rbp-0x50]
   140003e08:	mov    WORD PTR [rbp-0x34],ax
   140003e0c:	mov    rax,QWORD PTR [rbx]
   140003e0f:	mov    rdi,QWORD PTR [rax+0x20]
   140003e13:	mov    rcx,rdi
   140003e16:	call   QWORD PTR [rip+0x8574]        # 0x14000c390
   140003e1c:	lea    r8,[rbp-0x48]
   140003e20:	mov    rcx,rbx
   140003e23:	lea    rdx,[rbp+0x50]
   140003e27:	call   rdi
   140003e29:	mov    DWORD PTR [rbp-0x38],eax
   140003e2c:	test   eax,eax
   140003e2e:	mov    eax,0x2be
   140003e33:	js     0x140003d6a
   140003e39:	mov    ecx,DWORD PTR [rbp+0x50]
   140003e3c:	mov    WORD PTR [rbp-0x34],ax
   140003e40:	test   ecx,ecx
   140003e42:	jne    0x140003e4e
   140003e44:	mov    eax,0x2c2
   140003e49:	jmp    0x140003f24
   140003e4e:	mov    rax,QWORD PTR [rbp-0x48]
   140003e52:	mov    rdx,rcx
   140003e55:	add    rax,0x10
   140003e59:	cmp    QWORD PTR [rax],r15
   140003e5c:	jbe    0x140003e65
   140003e5e:	mov    r15,QWORD PTR [rax]
   140003e61:	lea    rsi,[rax-0x10]
   140003e65:	add    rax,0x98
   140003e6b:	sub    rdx,0x1
   140003e6f:	jne    0x140003e59
   140003e71:	cmp    DWORD PTR [rsi+0x20],0xf
   140003e75:	jne    0x140003e81
   140003e77:	mov    eax,0x2d3
   140003e7c:	jmp    0x140003f24
   140003e81:	mov    rcx,QWORD PTR [rip+0xb198]        # 0x14000f020
   140003e88:	lea    rax,[rip+0xb191]        # 0x14000f020
   140003e8f:	cmp    rcx,rax
   140003e92:	je     0x140003eb8
   140003e94:	test   DWORD PTR [rcx+0x1c],0x8000000
   140003e9b:	je     0x140003eb8
   140003e9d:	mov    rax,QWORD PTR [rsi+0x10]
   140003ea1:	mov    r9d,DWORD PTR [rsi+0x18]
   140003ea5:	mov    rcx,QWORD PTR [rcx+0x10]
   140003ea9:	mov    QWORD PTR [rsp+0x28],rax
   140003eae:	mov    QWORD PTR [rsp+0x20],rsi
   140003eb3:	call   0x1400024d8
   140003eb8:	mov    ecx,DWORD PTR [rsi+0x58]
   140003ebb:	shl    rcx,0x2
   140003ebf:	call   QWORD PTR [rip+0x849b]        # 0x14000c360
   140003ec5:	mov    r14,rax
   140003ec8:	test   rax,rax
   140003ecb:	jne    0x140003ede
   140003ecd:	mov    DWORD PTR [rbp-0x38],0x8007000e
   140003ed4:	mov    eax,0x2df
   140003ed9:	jmp    0x140003d6a
   140003ede:	mov    r8d,DWORD PTR [rsi+0x58]
   140003ee2:	xor    edx,edx
   140003ee4:	shl    r8,0x2
   140003ee8:	mov    rcx,rax
   140003eeb:	call   0x14000b152
   140003ef0:	mov    ebx,r12d
   140003ef3:	cmp    DWORD PTR [rsi+0x58],r12d
   140003ef7:	jbe    0x140003f1f
   140003ef9:	mov    rcx,QWORD PTR [rsi+0x60]
   140003efd:	mov    eax,ebx
   140003eff:	lea    rdx,[rax+rax*2]
   140003f03:	add    rdx,rdx
   140003f06:	mov    rcx,QWORD PTR [rcx+rdx*8+0x10]
   140003f0b:	call   0x1400059bc
   140003f10:	test   eax,eax
   140003f12:	je     0x140003f9e
   140003f18:	inc    ebx
   140003f1a:	cmp    ebx,DWORD PTR [rsi+0x58]
   140003f1d:	jb     0x140003ef9
   140003f1f:	mov    eax,0x2ef
   140003f24:	mov    DWORD PTR [rbp-0x38],r12d
   140003f28:	mov    WORD PTR [rbp-0x34],ax
   140003f2c:	mov    rcx,r14
   140003f2f:	call   QWORD PTR [rip+0x841b]        # 0x14000c350
   140003f35:	mov    ecx,DWORD PTR [rbp+0x50]
   140003f38:	lea    rdx,[rbp-0x48]
   140003f3c:	call   QWORD PTR [rip+0x82b6]        # 0x14000c1f8
   140003f42:	mov    rbx,QWORD PTR [rbp-0x40]
   140003f46:	mov    esi,DWORD PTR [rbp-0x38]
   140003f49:	test   rbx,rbx
   140003f4c:	je     0x140003f63
   140003f4e:	mov    rax,QWORD PTR [rbx]
   140003f51:	mov    rdi,QWORD PTR [rax+0x10]
   140003f55:	mov    rcx,rdi
   140003f58:	call   QWORD PTR [rip+0x8432]        # 0x14000c390
   140003f5e:	mov    rcx,rbx
   140003f61:	call   rdi
   140003f63:	mov    rbx,QWORD PTR [rbp-0x50]
   140003f67:	test   rbx,rbx
   140003f6a:	je     0x140003f81
   140003f6c:	mov    rcx,QWORD PTR [rbx]
   140003f6f:	mov    rdi,QWORD PTR [rcx+0x10]
   140003f73:	mov    rcx,rdi
   140003f76:	call   QWORD PTR [rip+0x8414]        # 0x14000c390
   140003f7c:	mov    rcx,rbx
   140003f7f:	call   rdi
   140003f81:	lea    rcx,[rbp-0x38]
   140003f85:	call   0x1400084f8
   140003f8a:	mov    eax,esi
   140003f8c:	add    rsp,0x80
   140003f93:	pop    r15
   140003f95:	pop    r14
   140003f97:	pop    r12
   140003f99:	pop    rdi
   140003f9a:	pop    rsi
   140003f9b:	pop    rbx
   140003f9c:	pop    rbp
   140003f9d:	ret    
   140003f9e:	mov    eax,ebx
   140003fa0:	lea    rdx,[rbp+0x48]
   140003fa4:	mov    DWORD PTR [r14+rax*4],0x1
   140003fac:	lea    r8,[rax+rax*2]
   140003fb0:	mov    rcx,QWORD PTR [rsi+0x60]
   140003fb4:	add    r8,r8
   140003fb7:	mov    rcx,QWORD PTR [rcx+r8*8+0x18]
   140003fbc:	call   0x140005f08
   140003fc1:	mov    DWORD PTR [rbp-0x38],eax
   140003fc4:	test   eax,eax
   140003fc6:	mov    eax,0x2f3
   140003fcb:	js     0x140003d6a
   140003fd1:	mov    WORD PTR [rbp-0x34],ax
   140003fd5:	cmp    BYTE PTR [rbp+0x48],r12b
   140003fd9:	je     0x140003fe5
   140003fdb:	mov    eax,0x2f7
   140003fe0:	jmp    0x140003f24
   140003fe5:	mov    rbx,QWORD PTR [rbp-0x50]
   140003fe9:	mov    rax,QWORD PTR [rbx]
   140003fec:	mov    rdi,QWORD PTR [rax+0x48]
   140003ff0:	mov    rcx,rdi
   140003ff3:	call   QWORD PTR [rip+0x8397]        # 0x14000c390
   140003ff9:	mov    r8d,DWORD PTR [rsi+0x58]
   140003ffd:	mov    r9,r14
   140004000:	mov    rdx,rsi
   140004003:	mov    rcx,rbx
   140004006:	call   rdi
   140004008:	mov    DWORD PTR [rbp-0x38],eax
   14000400b:	test   eax,eax
   14000400d:	mov    eax,0x2ff
   140004012:	jns    0x140003f28
   140004018:	jmp    0x140003d6a
   14000401d:	int3   
   14000401e:	int3   
   14000401f:	int3   
   140004020:	int3   
   140004021:	int3   
   140004022:	int3   
   140004023:	int3   
   140004024:	mov    QWORD PTR [rsp+0x10],rbx
   140004029:	mov    QWORD PTR [rsp+0x18],rbp
   14000402e:	mov    QWORD PTR [rsp+0x20],rsi
   140004033:	push   rdi
   140004034:	push   r14
   140004036:	push   r15
   140004038:	sub    rsp,0x60
   14000403c:	mov    rcx,QWORD PTR [rip+0xafdd]        # 0x14000f020
   140004043:	lea    r15,[rip+0xafd6]        # 0x14000f020
   14000404a:	lea    rdi,[rip+0x8b37]        # 0x14000cb88
   140004051:	cmp    rcx,r15
   140004054:	je     0x140004070
   140004056:	test   DWORD PTR [rcx+0x1c],0x20000000
   14000405d:	je     0x140004070
   14000405f:	mov    rcx,QWORD PTR [rcx+0x10]
   140004063:	mov    edx,0x2d
   140004068:	mov    r8,rdi
   14000406b:	call   0x140001008
   140004070:	mov    r9d,0x1
   140004076:	lea    rdx,[rip+0x8963]        # 0x14000c9e0
   14000407d:	mov    r8d,0x314
   140004083:	lea    rcx,[rsp+0x20]
   140004088:	call   0x1400083e8
   14000408d:	xor    r14d,r14d
   140004090:	mov    ebp,r14d
   140004093:	mov    DWORD PTR [rsp+0x80],r14d
   14000409b:	call   QWORD PTR [rip+0x807f]        # 0x14000c120
   1400040a1:	mov    rbx,rax
   1400040a4:	mov    rcx,QWORD PTR [rip+0xaf75]        # 0x14000f020
   1400040ab:	cmp    rcx,r15
   1400040ae:	je     0x1400040cc
   1400040b0:	test   DWORD PTR [rcx+0x1c],0x8000000
   1400040b7:	je     0x1400040cc
   1400040b9:	mov    rcx,QWORD PTR [rcx+0x10]
   1400040bd:	lea    edx,[r14+0x2e]
   1400040c1:	mov    r9,rax
   1400040c4:	mov    r8,rdi
   1400040c7:	call   0x140002544
   1400040cc:	lea    rdx,[rsp+0x80]
   1400040d4:	mov    rcx,rbx
   1400040d7:	call   QWORD PTR [rip+0x80d3]        # 0x14000c1b0
   1400040dd:	mov    rbx,rax
   1400040e0:	mov    eax,DWORD PTR [rsp+0x80]
   1400040e7:	test   rbx,rbx
   1400040ea:	je     0x1400040f0
   1400040ec:	test   eax,eax
   1400040ee:	jne    0x14000411d
   1400040f0:	mov    rcx,QWORD PTR [rip+0xaf29]        # 0x14000f020
   1400040f7:	cmp    rcx,r15
   1400040fa:	je     0x14000411d
   1400040fc:	test   DWORD PTR [rcx+0x1c],0x8000000
   140004103:	je     0x14000411d
   140004105:	mov    rcx,QWORD PTR [rcx+0x10]
   140004109:	mov    edx,0x2f
   14000410e:	mov    r8,rdi
   140004111:	call   0x140001008
   140004116:	mov    eax,DWORD PTR [rsp+0x80]
   14000411d:	mov    edi,r14d
   140004120:	test   eax,eax
   140004122:	jle    0x1400041ae
   140004128:	mov    rsi,rbx
   14000412b:	mov    rcx,QWORD PTR [rsi]
   14000412e:	or     rdx,0xffffffffffffffff
   140004132:	inc    rdx
   140004135:	cmp    WORD PTR [rcx+rdx*2],r14w
   14000413a:	jne    0x140004132
   14000413c:	cmp    edx,0x16
   14000413f:	jb     0x14000415f
   140004141:	mov    r8d,0x15
   140004147:	lea    rdx,[rip+0x8a0a]        # 0x14000cb58
   14000414e:	call   QWORD PTR [rip+0x815c]        # 0x14000c2b0
   140004154:	test   eax,eax
   140004156:	je     0x14000416b
   140004158:	mov    eax,DWORD PTR [rsp+0x80]
   14000415f:	inc    edi
   140004161:	add    rsi,0x8
   140004165:	cmp    edi,eax
   140004167:	jge    0x1400041ae
   140004169:	jmp    0x14000412b
   14000416b:	movsxd rax,edi
   14000416e:	mov    rcx,QWORD PTR [rbx+rax*8]
   140004172:	add    rcx,0x2a
   140004176:	call   QWORD PTR [rip+0x812c]        # 0x14000c2a8
   14000417c:	mov    ecx,eax
   14000417e:	dec    eax
   140004180:	cmp    eax,0x7ffffffd
   140004185:	cmovbe ebp,ecx
   140004188:	mov    rcx,QWORD PTR [rip+0xae91]        # 0x14000f020
   14000418f:	cmp    rcx,r15
   140004192:	je     0x1400041ae
   140004194:	test   DWORD PTR [rcx+0x1c],0x8000000
   14000419b:	je     0x1400041ae
   14000419d:	mov    rcx,QWORD PTR [rcx+0x10]
   1400041a1:	mov    edx,0x30
   1400041a6:	mov    r9d,ebp
   1400041a9:	call   0x140002494
   1400041ae:	test   rbx,rbx
   1400041b1:	je     0x1400041bc
   1400041b3:	mov    rcx,rbx
   1400041b6:	call   QWORD PTR [rip+0x7f5c]        # 0x14000c118
   1400041bc:	lea    rcx,[rsp+0x20]
   1400041c1:	call   0x1400084f8
   1400041c6:	lea    r11,[rsp+0x60]
   1400041cb:	mov    eax,ebp
   1400041cd:	mov    rbx,QWORD PTR [r11+0x28]
   1400041d1:	mov    rbp,QWORD PTR [r11+0x30]
   1400041d5:	mov    rsi,QWORD PTR [r11+0x38]
   1400041d9:	mov    rsp,r11
   1400041dc:	pop    r15
   1400041de:	pop    r14
   1400041e0:	pop    rdi
   1400041e1:	ret    
   1400041e2:	int3   
   1400041e3:	int3   
   1400041e4:	int3   
   1400041e5:	int3   
   1400041e6:	int3   
   1400041e7:	int3   
   1400041e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400041ed:	push   rbp
   1400041ee:	push   rsi
   1400041ef:	push   rdi
   1400041f0:	push   r12
   1400041f2:	push   r13
   1400041f4:	push   r14
   1400041f6:	push   r15
   1400041f8:	lea    rbp,[rsp-0x27]
   1400041fd:	sub    rsp,0xc0
   140004204:	mov    r12,rdx
   140004207:	mov    r14d,ecx
   14000420a:	mov    rcx,QWORD PTR [rip+0xae0f]        # 0x14000f020
   140004211:	lea    rbx,[rip+0xae08]        # 0x14000f020
   140004218:	lea    r15,[rip+0x8969]        # 0x14000cb88
   14000421f:	mov    edi,0x20000000
   140004224:	cmp    rcx,rbx
   140004227:	je     0x14000423f
   140004229:	test   DWORD PTR [rcx+0x1c],edi
   14000422c:	je     0x14000423f
   14000422e:	mov    rcx,QWORD PTR [rcx+0x10]
   140004232:	mov    edx,0x34
   140004237:	mov    r8,r15
   14000423a:	call   0x140001008
   14000423f:	mov    esi,0x1
   140004244:	lea    rdx,[rip+0x87dd]        # 0x14000ca28
   14000424b:	mov    r9d,esi
   14000424e:	lea    rcx,[rbp-0x51]
   140004252:	mov    r8d,0x36a
   140004258:	call   0x1400083e8
   14000425d:	xor    r13d,r13d
   140004260:	xor    eax,eax
   140004262:	mov    QWORD PTR [rbp-0x61],r13
   140004266:	mov    BYTE PTR [r12],al
   14000426a:	mov    DWORD PTR [rbp+0x77],r13d
   14000426e:	mov    QWORD PTR [rbp-0x69],r13
   140004272:	mov    rcx,QWORD PTR [rip+0xada7]        # 0x14000f020
   140004279:	cmp    rcx,rbx
   14000427c:	je     0x140004292
   14000427e:	test   DWORD PTR [rcx+0x1c],edi
   140004281:	je     0x140004292
   140004283:	mov    rcx,QWORD PTR [rcx+0x10]
   140004287:	lea    edx,[rsi+0x30]
   14000428a:	mov    r8,r15
   14000428d:	call   0x140001008
   140004292:	mov    r9d,esi
   140004295:	lea    rdx,[rip+0x8764]        # 0x14000ca00
   14000429c:	mov    r8d,0x349
   1400042a2:	lea    rcx,[rbp-0x19]
   1400042a6:	call   0x1400083e8
   1400042ab:	lea    rax,[rbp+0x7f]
   1400042af:	mov    QWORD PTR [rbp+0x7f],r13
   1400042b3:	mov    esi,0x5
   1400042b8:	mov    QWORD PTR [rsp+0x20],rax
   1400042bd:	mov    r9d,0x20019
   1400042c3:	mov    QWORD PTR [rbp-0x59],rsi
   1400042c7:	xor    r8d,r8d
   1400042ca:	lea    rdx,[rip+0x815f]        # 0x14000c430
   1400042d1:	mov    rcx,0xffffffff80000002
   1400042d8:	call   QWORD PTR [rip+0x7d2a]        # 0x14000c008
   1400042de:	test   eax,eax
   1400042e0:	je     0x140004317
   1400042e2:	mov    rcx,QWORD PTR [rip+0xad37]        # 0x14000f020
   1400042e9:	cmp    rcx,rbx
   1400042ec:	je     0x14000438c
   1400042f2:	test   DWORD PTR [rcx+0x1c],0x4000000
   1400042f9:	je     0x14000438c
   1400042ff:	mov    rcx,QWORD PTR [rcx+0x10]
   140004303:	lea    edx,[rsi+0x2d]
   140004306:	lea    r9,[rip+0x8123]        # 0x14000c430
   14000430d:	mov    r8,r15
   140004310:	call   0x140002544
   140004315:	jmp    0x14000438c
   140004317:	mov    rcx,QWORD PTR [rbp+0x7f]
   14000431b:	lea    r8,[rbp-0x59]
   14000431f:	lea    rdx,[rip+0x821a]        # 0x14000c540
   140004326:	call   0x140004fc0
   14000432b:	test   eax,eax
   14000432d:	js     0x14000435b
   14000432f:	cmp    eax,0x1
   140004332:	je     0x14000435b
   140004334:	mov    rcx,QWORD PTR [rbp+0x7f]
   140004338:	lea    rax,[rcx-0x1]
   14000433c:	cmp    rax,0xfffffffffffffffd
   140004340:	ja     0x14000434c
   140004342:	call   QWORD PTR [rip+0x7cc8]        # 0x14000c010
   140004348:	mov    QWORD PTR [rbp+0x7f],r13
   14000434c:	lea    rcx,[rbp-0x19]
   140004350:	call   0x1400084f8
   140004355:	mov    rsi,QWORD PTR [rbp-0x59]
   140004359:	jmp    0x1400043ad
   14000435b:	mov    rcx,QWORD PTR [rip+0xacbe]        # 0x14000f020
   140004362:	cmp    rcx,rbx
   140004365:	je     0x14000438c
   140004367:	test   DWORD PTR [rcx+0x1c],0x4000000
   14000436e:	je     0x14000438c
   140004370:	mov    rcx,QWORD PTR [rcx+0x10]
   140004374:	lea    r9,[rip+0x81c5]        # 0x14000c540
   14000437b:	mov    edx,0x33
   140004380:	mov    DWORD PTR [rsp+0x20],eax
   140004384:	mov    r8,r15
   140004387:	call   0x1400025c0
   14000438c:	mov    rcx,QWORD PTR [rbp+0x7f]
   140004390:	lea    rax,[rcx-0x1]
   140004394:	cmp    rax,0xfffffffffffffffd
   140004398:	ja     0x1400043a4
   14000439a:	call   QWORD PTR [rip+0x7c70]        # 0x14000c010
   1400043a0:	mov    QWORD PTR [rbp+0x7f],r13
   1400043a4:	lea    rcx,[rbp-0x19]
   1400043a8:	call   0x1400084f8
   1400043ad:	xor    edx,edx
   1400043af:	lea    rax,[rbp-0x61]
   1400043b3:	lea    r9,[rip+0x87ee]        # 0x14000cba8
   1400043ba:	mov    QWORD PTR [rsp+0x20],rax
   1400043bf:	lea    rcx,[rip+0x87d2]        # 0x14000cb98
   1400043c6:	lea    r8d,[rdx+0x1]
   1400043ca:	call   QWORD PTR [rip+0x7f88]        # 0x14000c358
   1400043d0:	mov    DWORD PTR [rbp-0x51],eax
   1400043d3:	test   eax,eax
   1400043d5:	mov    eax,0x378
   1400043da:	jns    0x1400043e5
   1400043dc:	mov    WORD PTR [rbp-0x4b],ax
   1400043e0:	jmp    0x1400044e7
   1400043e5:	mov    WORD PTR [rbp-0x4d],ax
   1400043e9:	call   QWORD PTR [rip+0x7d21]        # 0x14000c110
   1400043ef:	mov    ecx,DWORD PTR [rbp+0x77]
   1400043f2:	lea    rdx,[rbp-0x69]
   1400043f6:	mov    r15,rax
   1400043f9:	call   QWORD PTR [rip+0x7df9]        # 0x14000c1f8
   1400043ff:	mov    rbx,QWORD PTR [rbp-0x61]
   140004403:	mov    DWORD PTR [rbp+0x77],r13d
   140004407:	mov    QWORD PTR [rbp-0x69],r13
   14000440b:	mov    rcx,QWORD PTR [rbx]
   14000440e:	mov    rdi,QWORD PTR [rcx+0x20]
   140004412:	jmp    0x1400044bd
   140004417:	mov    ebx,r13d
   14000441a:	mov    WORD PTR [rbp-0x4d],cx
   14000441e:	cmp    DWORD PTR [rbp+0x77],r13d
   140004422:	jbe    0x140004443
   140004424:	mov    rdx,QWORD PTR [rbp-0x69]
   140004428:	mov    eax,ebx
   14000442a:	imul   rcx,rax,0x98
   140004431:	cmp    DWORD PTR [rcx+rdx*1+0x18],r14d
   140004436:	je     0x14000453b
   14000443c:	inc    ebx
   14000443e:	cmp    ebx,DWORD PTR [rbp+0x77]
   140004441:	jb     0x140004428
   140004443:	lea    rdi,[rip+0xabd6]        # 0x14000f020
   14000444a:	mov    rcx,QWORD PTR [rip+0xabcf]        # 0x14000f020
   140004451:	cmp    ebx,DWORD PTR [rbp+0x77]
   140004454:	jne    0x1400044e7
   14000445a:	cmp    rcx,rdi
   14000445d:	je     0x140004479
   14000445f:	test   DWORD PTR [rcx+0x1c],0x8000000
   140004466:	je     0x140004479
   140004468:	mov    rcx,QWORD PTR [rcx+0x10]
   14000446c:	mov    edx,0x36
   140004471:	mov    r9d,r14d
   140004474:	call   0x140002494
   140004479:	call   QWORD PTR [rip+0x7c91]        # 0x14000c110
   14000447f:	imul   rcx,rsi,0xea60
   140004486:	sub    rax,r15
   140004489:	cmp    rax,rcx
   14000448c:	jae    0x14000457a
   140004492:	mov    ecx,0x2710
   140004497:	call   QWORD PTR [rip+0x7c6b]        # 0x14000c108
   14000449d:	mov    ecx,DWORD PTR [rbp+0x77]
   1400044a0:	lea    rdx,[rbp-0x69]
   1400044a4:	call   QWORD PTR [rip+0x7d4e]        # 0x14000c1f8
   1400044aa:	mov    rbx,QWORD PTR [rbp-0x61]
   1400044ae:	mov    DWORD PTR [rbp+0x77],r13d
   1400044b2:	mov    QWORD PTR [rbp-0x69],r13
   1400044b6:	mov    rax,QWORD PTR [rbx]
   1400044b9:	mov    rdi,QWORD PTR [rax+0x20]
   1400044bd:	mov    rcx,rdi
   1400044c0:	call   QWORD PTR [rip+0x7eca]        # 0x14000c390
   1400044c6:	lea    r8,[rbp-0x69]
   1400044ca:	mov    rcx,rbx
   1400044cd:	lea    rdx,[rbp+0x77]
   1400044d1:	call   rdi
   1400044d3:	mov    DWORD PTR [rbp-0x51],eax
   1400044d6:	mov    ecx,0x383
   1400044db:	test   eax,eax
   1400044dd:	jns    0x140004417
   1400044e3:	mov    WORD PTR [rbp-0x4b],cx
   1400044e7:	mov    ecx,DWORD PTR [rbp+0x77]
   1400044ea:	lea    rdx,[rbp-0x69]
   1400044ee:	call   QWORD PTR [rip+0x7d04]        # 0x14000c1f8
   1400044f4:	mov    rbx,QWORD PTR [rbp-0x61]
   1400044f8:	mov    esi,DWORD PTR [rbp-0x51]
   1400044fb:	test   rbx,rbx
   1400044fe:	je     0x140004515
   140004500:	mov    rcx,QWORD PTR [rbx]
   140004503:	mov    rdi,QWORD PTR [rcx+0x10]
   140004507:	mov    rcx,rdi
   14000450a:	call   QWORD PTR [rip+0x7e80]        # 0x14000c390
   140004510:	mov    rcx,rbx
   140004513:	call   rdi
   140004515:	lea    rcx,[rbp-0x51]
   140004519:	call   0x1400084f8
   14000451e:	mov    rbx,QWORD PTR [rsp+0x100]
   140004526:	mov    eax,esi
   140004528:	add    rsp,0xc0
   14000452f:	pop    r15
   140004531:	pop    r14
   140004533:	pop    r13
   140004535:	pop    r12
   140004537:	pop    rdi
   140004538:	pop    rsi
   140004539:	pop    rbp
   14000453a:	ret    
   14000453b:	mov    BYTE PTR [r12],0x1
   140004540:	mov    rcx,QWORD PTR [rip+0xaad9]        # 0x14000f020
   140004547:	lea    rdi,[rip+0xaad2]        # 0x14000f020
   14000454e:	cmp    rcx,rdi
   140004551:	je     0x140004451
   140004557:	test   DWORD PTR [rcx+0x1c],0x8000000
   14000455e:	je     0x140004451
   140004564:	mov    rcx,QWORD PTR [rcx+0x10]
   140004568:	mov    edx,0x35
   14000456d:	mov    r9d,r14d
   140004570:	call   0x140002494
   140004575:	jmp    0x14000444a
   14000457a:	mov    rcx,QWORD PTR [rip+0xaa9f]        # 0x14000f020
   140004581:	cmp    rcx,rdi
   140004584:	je     0x1400044e7
   14000458a:	test   DWORD PTR [rcx+0x1c],0x8000000
   140004591:	je     0x1400044e7
   140004597:	mov    rcx,QWORD PTR [rcx+0x10]
   14000459b:	lea    r8,[rip+0x85e6]        # 0x14000cb88
   1400045a2:	mov    edx,0x37
   1400045a7:	call   0x140001008
   1400045ac:	jmp    0x1400044e7
   1400045b1:	int3   
   1400045b2:	int3   
   1400045b3:	int3   
   1400045b4:	int3   
   1400045b5:	int3   
   1400045b6:	int3   
   1400045b7:	int3   
   1400045b8:	mov    QWORD PTR [rsp+0x18],rbx
   1400045bd:	push   rbp
   1400045be:	push   rsi
   1400045bf:	push   rdi
   1400045c0:	mov    rbp,rsp
   1400045c3:	sub    rsp,0x60
   1400045c7:	mov    rcx,QWORD PTR [rip+0xaa52]        # 0x14000f020
   1400045ce:	lea    rsi,[rip+0xaa4b]        # 0x14000f020
   1400045d5:	cmp    rcx,rsi
   1400045d8:	je     0x1400045f8
   1400045da:	test   DWORD PTR [rcx+0x1c],0x20000000
   1400045e1:	je     0x1400045f8
   1400045e3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400045e7:	lea    r8,[rip+0x859a]        # 0x14000cb88
   1400045ee:	mov    edx,0x38
   1400045f3:	call   0x140001008
   1400045f8:	mov    r9d,0x1
   1400045fe:	lea    rdx,[rip+0x8443]        # 0x14000ca48
   140004605:	mov    r8d,0x3ab
   14000460b:	lea    rcx,[rbp-0x40]
   14000460f:	call   0x1400083e8
   140004614:	xor    edi,edi
   140004616:	mov    BYTE PTR [rbp+0x20],0x1
   14000461a:	and    QWORD PTR [rbp+0x28],rdi
   14000461e:	xor    r9d,r9d
   140004621:	xor    r8d,r8d
   140004624:	xor    ecx,ecx
   140004626:	lea    edx,[rdi+0x1]
   140004629:	call   QWORD PTR [rip+0x7af9]        # 0x14000c128
   14000462f:	xor    edx,edx
   140004631:	xor    ecx,ecx
   140004633:	call   QWORD PTR [rip+0x7d2f]        # 0x14000c368
   140004639:	mov    ebx,eax
   14000463b:	test   eax,eax
   14000463d:	jns    0x140004682
   14000463f:	cmp    eax,0x80010106
   140004644:	je     0x140004687
   140004646:	mov    rcx,QWORD PTR [rip+0xa9d3]        # 0x14000f020
   14000464d:	cmp    rcx,rsi
   140004650:	je     0x140004671
   140004652:	test   DWORD PTR [rcx+0x1c],0x2000000
   140004659:	je     0x140004671
   14000465b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000465f:	lea    edx,[rdi+0x39]
   140004662:	mov    r9d,eax
   140004665:	lea    r8,[rip+0x851c]        # 0x14000cb88
   14000466c:	call   0x14000102c
   140004671:	mov    eax,0x3bf
   140004676:	mov    DWORD PTR [rbp-0x40],ebx
   140004679:	mov    WORD PTR [rbp-0x3a],ax
   14000467d:	jmp    0x140004784
   140004682:	mov    edi,0x1
   140004687:	call   0x140007614
   14000468c:	mov    ebx,eax
   14000468e:	mov    DWORD PTR [rbp-0x40],eax
   140004691:	test   eax,eax
   140004693:	mov    eax,0x3c6
   140004698:	jns    0x1400046a3
   14000469a:	mov    WORD PTR [rbp-0x3a],ax
   14000469e:	jmp    0x140004755
   1400046a3:	mov    edx,0x1
   1400046a8:	mov    WORD PTR [rbp-0x3c],ax
   1400046ac:	lea    rcx,[rbp+0x28]
   1400046b0:	call   0x1400049fc
   1400046b5:	mov    r8d,0x4
   1400046bb:	call   0x1400037c8
   1400046c0:	call   0x140004024
   1400046c5:	test   eax,eax
   1400046c7:	je     0x14000473a
   1400046c9:	lea    rdx,[rbp+0x20]
   1400046cd:	mov    ecx,eax
   1400046cf:	call   0x1400041e8
   1400046d4:	test   eax,eax
   1400046d6:	jns    0x140004705
   1400046d8:	mov    rcx,QWORD PTR [rip+0xa941]        # 0x14000f020
   1400046df:	cmp    rcx,rsi
   1400046e2:	je     0x14000470c
   1400046e4:	test   DWORD PTR [rcx+0x1c],0x4000000
   1400046eb:	je     0x14000470c
   1400046ed:	mov    rcx,QWORD PTR [rcx+0x10]
   1400046f1:	lea    r8,[rip+0x8490]        # 0x14000cb88
   1400046f8:	mov    edx,0x3a
   1400046fd:	mov    r9d,eax
   140004700:	call   0x14000102c
   140004705:	mov    rcx,QWORD PTR [rip+0xa914]        # 0x14000f020
   14000470c:	cmp    BYTE PTR [rbp+0x20],0x0
   140004710:	jne    0x14000473a
   140004712:	cmp    rcx,rsi
   140004715:	je     0x140004735
   140004717:	test   DWORD PTR [rcx+0x1c],0x8000000
   14000471e:	je     0x140004735
   140004720:	mov    rcx,QWORD PTR [rcx+0x10]
   140004724:	lea    r8,[rip+0x845d]        # 0x14000cb88
   14000472b:	mov    edx,0x3b
   140004730:	call   0x140001008
   140004735:	mov    ebx,DWORD PTR [rbp-0x40]
   140004738:	jmp    0x140004755
   14000473a:	call   0x140003cb0
   14000473f:	mov    ebx,eax
   140004741:	mov    DWORD PTR [rbp-0x40],eax
   140004744:	test   eax,eax
   140004746:	mov    eax,0x3db
   14000474b:	js     0x14000469a
   140004751:	mov    WORD PTR [rbp-0x3c],ax
   140004755:	test   edi,edi
   140004757:	je     0x140004762
   140004759:	call   QWORD PTR [rip+0x7c11]        # 0x14000c370
   14000475f:	mov    ebx,DWORD PTR [rbp-0x40]
   140004762:	mov    rdi,QWORD PTR [rbp+0x28]
   140004766:	test   rdi,rdi
   140004769:	je     0x140004784
   14000476b:	test   ebx,ebx
   14000476d:	mov    rcx,rdi
   140004770:	sets   dl
   140004773:	call   0x140004dc4
   140004778:	mov    rcx,rdi
   14000477b:	call   QWORD PTR [rip+0x7bcf]        # 0x14000c350
   140004781:	mov    ebx,DWORD PTR [rbp-0x40]
   140004784:	lea    rcx,[rbp-0x40]
   140004788:	call   0x1400084f8
   14000478d:	mov    eax,ebx
   14000478f:	mov    rbx,QWORD PTR [rsp+0x90]
   140004797:	add    rsp,0x60
   14000479b:	pop    rdi
   14000479c:	pop    rsi
   14000479d:	pop    rbp
   14000479e:	ret    
   14000479f:	int3   
   1400047a0:	int3   
   1400047a1:	int3   
   1400047a2:	int3   
   1400047a3:	int3   
   1400047a4:	int3   
   1400047a5:	int3   
   1400047a6:	int3   
   1400047a7:	int3   
   1400047a8:	mov    rax,rsp
   1400047ab:	mov    QWORD PTR [rax+0x10],rbx
   1400047af:	mov    QWORD PTR [rax+0x18],rsi
   1400047b3:	mov    QWORD PTR [rax+0x20],rdi
   1400047b7:	push   rbp
   1400047b8:	lea    rbp,[rax-0x5f]
   1400047bc:	sub    rsp,0x90
   1400047c3:	mov    rbx,rcx
   1400047c6:	lea    rdx,[rip+0x829b]        # 0x14000ca68
   1400047cd:	lea    rcx,[rbp+0x1f]
   1400047d1:	mov    r9d,0x1
   1400047d7:	mov    r8d,0x3f9
   1400047dd:	call   0x1400083e8
   1400047e2:	xor    esi,esi
   1400047e4:	lea    rax,[rip+0x8945]        # 0x14000d130
   1400047eb:	mov    QWORD PTR [rbp-0x9],rax
   1400047ef:	xor    eax,eax
   1400047f1:	mov    QWORD PTR [rbp-0x1],rsi
   1400047f5:	mov    QWORD PTR [rbp+0x67],rsi
   1400047f9:	mov    DWORD PTR [rbp+0x7],esi
   1400047fc:	mov    QWORD PTR [rbp+0xf],rax
   140004800:	mov    QWORD PTR [rbp+0x17],rax
   140004804:	test   rbx,rbx
   140004807:	je     0x1400049ac
   14000480d:	cmp    DWORD PTR [rbx+0x8],esi
   140004810:	je     0x14000481b
   140004812:	mov    rax,QWORD PTR [rbx]
   140004815:	mov    DWORD PTR [rbx+0x8],esi
   140004818:	mov    WORD PTR [rax],si
   14000481b:	mov    eax,0x402
   140004820:	mov    DWORD PTR [rbp+0x1f],esi
   140004823:	lea    rcx,[rbp-0x9]
   140004827:	mov    WORD PTR [rbp+0x23],ax
   14000482b:	call   0x14000a534
   140004830:	mov    DWORD PTR [rbp+0x1f],eax
   140004833:	test   eax,eax
   140004835:	mov    eax,0x405
   14000483a:	js     0x1400049b8
   140004840:	mov    rdi,QWORD PTR [rbp-0x9]
   140004844:	mov    rcx,rdi
   140004847:	mov    WORD PTR [rbp+0x23],ax
   14000484b:	call   QWORD PTR [rip+0x78af]        # 0x14000c100
   140004851:	cmp    eax,0xffffffff
   140004854:	je     0x1400048da
   14000485a:	test   al,0x10
   14000485c:	jne    0x14000499e
   140004862:	mov    rcx,rdi
   140004865:	call   QWORD PTR [rip+0x788d]        # 0x14000c0f8
   14000486b:	test   eax,eax
   14000486d:	jne    0x1400048ce
   14000486f:	call   0x1400063e4
   140004874:	mov    ecx,0x414
   140004879:	mov    DWORD PTR [rbp+0x1f],eax
   14000487c:	mov    WORD PTR [rbp+0x25],cx
   140004880:	mov    rcx,QWORD PTR [rip+0xa799]        # 0x14000f020
   140004887:	lea    rdx,[rip+0xa792]        # 0x14000f020
   14000488e:	cmp    rcx,rdx
   140004891:	je     0x1400049bc
   140004897:	test   DWORD PTR [rcx+0x1c],0x2000000
   14000489e:	je     0x1400049bc
   1400048a4:	mov    edx,0x3c
   1400048a9:	mov    DWORD PTR [rsp+0x28],eax
   1400048ad:	lea    r9,[rip+0x81d4]        # 0x14000ca88
   1400048b4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400048b8:	lea    r8,[rip+0x82c9]        # 0x14000cb88
   1400048bf:	mov    QWORD PTR [rsp+0x20],rdi
   1400048c4:	call   0x1400026e0
   1400048c9:	jmp    0x1400049bc
   1400048ce:	mov    ecx,0x414
   1400048d3:	mov    DWORD PTR [rbp+0x1f],esi
   1400048d6:	mov    WORD PTR [rbp+0x23],cx
   1400048da:	xor    r9d,r9d
   1400048dd:	lea    r8,[rbp+0x67]
   1400048e1:	lea    rcx,[rip+0x7f88]        # 0x14000c870
   1400048e8:	lea    edx,[r9+0x1]
   1400048ec:	call   QWORD PTR [rip+0x7726]        # 0x14000c018
   1400048f2:	test   eax,eax
   1400048f4:	jne    0x140004908
   1400048f6:	call   0x1400063e4
   1400048fb:	mov    DWORD PTR [rbp+0x1f],eax
   1400048fe:	mov    eax,0x41f
   140004903:	jmp    0x1400049b8
   140004908:	mov    eax,0x41f
   14000490d:	mov    DWORD PTR [rbp+0x1f],esi
   140004910:	mov    WORD PTR [rbp+0x23],ax
   140004914:	lea    rdx,[rbp+0x7]
   140004918:	mov    rax,QWORD PTR [rbp+0x67]
   14000491c:	mov    rcx,rdi
   14000491f:	mov    QWORD PTR [rbp+0xf],rax
   140004923:	mov    DWORD PTR [rbp+0x7],0x18
   14000492a:	mov    DWORD PTR [rbp+0x17],esi
   14000492d:	call   QWORD PTR [rip+0x77bd]        # 0x14000c0f0
   140004933:	test   eax,eax
   140004935:	jne    0x14000499e
   140004937:	call   QWORD PTR [rip+0x77f3]        # 0x14000c130
   14000493d:	cmp    eax,0xb7
   140004942:	cmove  eax,esi
   140004945:	movzx  r8d,ax
   140004949:	or     r8d,0x80070000
   140004950:	test   eax,eax
   140004952:	cmovle r8d,eax
   140004956:	mov    eax,0x42c
   14000495b:	mov    DWORD PTR [rbp+0x1f],r8d
   14000495f:	test   r8d,r8d
   140004962:	jns    0x14000499a
   140004964:	mov    WORD PTR [rbp+0x25],ax
   140004968:	mov    rcx,QWORD PTR [rip+0xa6b1]        # 0x14000f020
   14000496f:	lea    rdx,[rip+0xa6aa]        # 0x14000f020
   140004976:	cmp    rcx,rdx
   140004979:	je     0x1400049bc
   14000497b:	test   DWORD PTR [rcx+0x1c],0x2000000
   140004982:	je     0x1400049bc
   140004984:	mov    edx,0x3d
   140004989:	mov    DWORD PTR [rsp+0x28],r8d
   14000498e:	lea    r9,[rip+0x8117]        # 0x14000caac
   140004995:	jmp    0x1400048b4
   14000499a:	mov    WORD PTR [rbp+0x23],ax
   14000499e:	mov    rdx,rbx
   1400049a1:	lea    rcx,[rbp-0x9]
   1400049a5:	call   0x14000a388
   1400049aa:	jmp    0x1400049bc
   1400049ac:	mov    DWORD PTR [rbp+0x1f],0x80070057
   1400049b3:	mov    eax,0x402
   1400049b8:	mov    WORD PTR [rbp+0x25],ax
   1400049bc:	mov    rcx,QWORD PTR [rbp+0x67]
   1400049c0:	call   QWORD PTR [rip+0x7752]        # 0x14000c118
   1400049c6:	mov    ebx,DWORD PTR [rbp+0x1f]
   1400049c9:	lea    rcx,[rbp-0x9]
   1400049cd:	call   0x140009ce8
   1400049d2:	lea    rcx,[rbp+0x1f]
   1400049d6:	call   0x1400084f8
   1400049db:	lea    r11,[rsp+0x90]
   1400049e3:	mov    eax,ebx
   1400049e5:	mov    rbx,QWORD PTR [r11+0x18]
   1400049e9:	mov    rsi,QWORD PTR [r11+0x20]
   1400049ed:	mov    rdi,QWORD PTR [r11+0x28]
   1400049f1:	mov    rsp,r11
   1400049f4:	pop    rbp
   1400049f5:	ret    
   1400049f6:	int3   
   1400049f7:	int3   
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	mov    QWORD PTR [rsp+0x10],rbx
   140004a01:	push   rbp
   140004a02:	push   rsi
   140004a03:	push   rdi
   140004a04:	lea    rbp,[rsp-0x47]
   140004a09:	sub    rsp,0x100
   140004a10:	mov    edi,edx
   140004a12:	mov    rsi,rcx
   140004a15:	lea    rdx,[rip+0x809c]        # 0x14000cab8
   140004a1c:	mov    r9d,0x1
   140004a22:	lea    rcx,[rbp-0x59]
   140004a26:	mov    r8d,0x43e
   140004a2c:	call   0x1400083e8
   140004a31:	and    QWORD PTR [rbp-0x9],0x0
   140004a36:	lea    rax,[rip+0x86f3]        # 0x14000d130
   140004a3d:	and    QWORD PTR [rbp+0x7],0x0
   140004a42:	mov    ebx,0x1e0000ed
   140004a47:	or     QWORD PTR [rbp+0x77],0xffffffffffffffff
   140004a4c:	and    QWORD PTR [rbp+0x7f],0x0
   140004a51:	mov    QWORD PTR [rbp-0x1],rax
   140004a55:	mov    eax,0x448
   140004a5a:	mov    DWORD PTR [rbp+0x67],ebx
   140004a5d:	test   rsi,rsi
   140004a60:	je     0x140004d63
   140004a66:	and    QWORD PTR [rsi],0x0
   140004a6a:	lea    rdx,[rip+0x79bf]        # 0x14000c430
   140004a71:	and    DWORD PTR [rbp-0x59],0x0
   140004a75:	mov    r9d,0x20019
   140004a7b:	mov    WORD PTR [rbp-0x55],ax
   140004a7f:	xor    r8d,r8d
   140004a82:	lea    rax,[rbp-0x9]
   140004a86:	mov    rcx,0xffffffff80000002
   140004a8d:	mov    QWORD PTR [rsp+0x20],rax
   140004a92:	call   QWORD PTR [rip+0x7570]        # 0x14000c008
   140004a98:	movzx  ecx,ax
   140004a9b:	or     ecx,0x80070000
   140004aa1:	test   eax,eax
   140004aa3:	cmovle ecx,eax
   140004aa6:	mov    eax,0x44a
   140004aab:	mov    DWORD PTR [rbp-0x59],ecx
   140004aae:	test   ecx,ecx
   140004ab0:	js     0x140004d6a
   140004ab6:	mov    WORD PTR [rbp-0x55],ax
   140004aba:	call   0x140008f5c
   140004abf:	mov    ecx,eax
   140004ac1:	mov    DWORD PTR [rbp-0x59],eax
   140004ac4:	test   eax,eax
   140004ac6:	mov    eax,0x44f
   140004acb:	js     0x140004d6a
   140004ad1:	mov    WORD PTR [rbp-0x55],ax
   140004ad5:	cmp    ecx,0x1
   140004ad8:	jne    0x140004aeb
   140004ada:	mov    DWORD PTR [rbp-0x59],ecx
   140004add:	mov    eax,0x452
   140004ae2:	mov    WORD PTR [rbp-0x55],ax
   140004ae6:	jmp    0x140004d6e
   140004aeb:	mov    rcx,QWORD PTR [rbp-0x9]
   140004aef:	lea    r8,[rbp+0x67]
   140004af3:	xor    r9d,r9d
   140004af6:	lea    rdx,[rip+0x7beb]        # 0x14000c6e8
   140004afd:	call   0x140004e70
   140004b02:	test   eax,eax
   140004b04:	jne    0x140004b17
   140004b06:	mov    ebx,DWORD PTR [rbp+0x67]
   140004b09:	test   ebx,ebx
   140004b0b:	jne    0x140004b26
   140004b0d:	and    DWORD PTR [rbp-0x59],ebx
   140004b10:	mov    eax,0x45f
   140004b15:	jmp    0x140004ae2
   140004b17:	test   edi,edi
   140004b19:	je     0x140004b26
   140004b1b:	and    DWORD PTR [rbp-0x59],0x0
   140004b1f:	mov    eax,0x465
   140004b24:	jmp    0x140004ae2
   140004b26:	mov    r9d,0x1
   140004b2c:	lea    rdx,[rip+0x7f9d]        # 0x14000cad0
   140004b33:	mov    r8d,0x4b2
   140004b39:	lea    rcx,[rbp+0xf]
   140004b3d:	call   0x1400083e8
   140004b42:	call   0x140009b0c
   140004b47:	mov    DWORD PTR [rbp+0xf],eax
   140004b4a:	test   eax,eax
   140004b4c:	mov    eax,0x4b4
   140004b51:	jns    0x140004b59
   140004b53:	mov    WORD PTR [rbp+0x15],ax
   140004b57:	jmp    0x140004b5d
   140004b59:	mov    WORD PTR [rbp+0x13],ax
   140004b5d:	lea    rcx,[rbp+0xf]
   140004b61:	call   0x1400084f8
   140004b66:	lea    rcx,[rbp-0x1]
   140004b6a:	call   0x1400047a8
   140004b6f:	mov    DWORD PTR [rbp-0x59],eax
   140004b72:	test   eax,eax
   140004b74:	mov    eax,0x46e
   140004b79:	js     0x140004d6a
   140004b7f:	cmp    DWORD PTR [rbp+0x7],0x0
   140004b83:	mov    WORD PTR [rbp-0x55],ax
   140004b87:	jne    0x140004b92
   140004b89:	mov    DWORD PTR [rbp-0x59],0x800710dd
   140004b90:	jmp    0x140004bac
   140004b92:	xor    r8d,r8d
   140004b95:	lea    rdx,[rip+0x7d5c]        # 0x14000c8f8
   140004b9c:	lea    rcx,[rbp-0x1]
   140004ba0:	call   0x140009d24
   140004ba5:	mov    DWORD PTR [rbp-0x59],eax
   140004ba8:	test   eax,eax
   140004baa:	jns    0x140004bb6
   140004bac:	mov    eax,0x470
   140004bb1:	jmp    0x140004d6a
   140004bb6:	mov    rcx,QWORD PTR [rbp-0x1]
   140004bba:	mov    eax,0x470
   140004bbf:	mov    WORD PTR [rbp-0x55],ax
   140004bc3:	call   0x1400093f4
   140004bc8:	mov    DWORD PTR [rbp-0x59],eax
   140004bcb:	test   eax,eax
   140004bcd:	mov    eax,0x472
   140004bd2:	js     0x140004d6a
   140004bd8:	mov    rdx,QWORD PTR [rbp-0x1]
   140004bdc:	lea    r9,[rbp+0x77]
   140004be0:	mov    WORD PTR [rbp-0x55],ax
   140004be4:	lea    rax,[rbp+0x7f]
   140004be8:	mov    QWORD PTR [rsp+0x20],rax
   140004bed:	call   0x140009684
   140004bf2:	mov    DWORD PTR [rbp-0x59],eax
   140004bf5:	test   eax,eax
   140004bf7:	mov    eax,0x478
   140004bfc:	js     0x140004d6a
   140004c02:	movups xmm0,XMMWORD PTR [rip+0x7a77]        # 0x14000c680
   140004c09:	mov    rcx,QWORD PTR [rbp+0x77]
   140004c0d:	lea    rdx,[rbp-0x19]
   140004c11:	mov    r8d,ebx
   140004c14:	mov    WORD PTR [rbp-0x55],ax
   140004c18:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   140004c1d:	call   0x140009970
   140004c22:	mov    DWORD PTR [rbp-0x59],eax
   140004c25:	test   eax,eax
   140004c27:	mov    eax,0x47a
   140004c2c:	js     0x140004d6a
   140004c32:	movups xmm0,XMMWORD PTR [rip+0x793f]        # 0x14000c578
   140004c39:	mov    rcx,QWORD PTR [rbp+0x77]
   140004c3d:	lea    rdx,[rbp-0x19]
   140004c41:	mov    r8d,ebx
   140004c44:	mov    WORD PTR [rbp-0x55],ax
   140004c48:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   140004c4d:	call   0x140009970
   140004c52:	mov    DWORD PTR [rbp-0x59],eax
   140004c55:	test   eax,eax
   140004c57:	mov    eax,0x47b
   140004c5c:	js     0x140004d6a
   140004c62:	movups xmm0,XMMWORD PTR [rip+0x77af]        # 0x14000c418
   140004c69:	mov    rcx,QWORD PTR [rbp+0x77]
   140004c6d:	lea    rdx,[rbp-0x19]
   140004c71:	mov    r8d,ebx
   140004c74:	mov    WORD PTR [rbp-0x55],ax
   140004c78:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   140004c7d:	call   0x140009970
   140004c82:	mov    DWORD PTR [rbp-0x59],eax
   140004c85:	test   eax,eax
   140004c87:	mov    eax,0x47c
   140004c8c:	js     0x140004d6a
   140004c92:	movups xmm0,XMMWORD PTR [rip+0x777f]        # 0x14000c418
   140004c99:	mov    rcx,QWORD PTR [rbp+0x77]
   140004c9d:	lea    rdx,[rbp-0x19]
   140004ca1:	mov    r8d,ebx
   140004ca4:	mov    WORD PTR [rbp-0x55],ax
   140004ca8:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   140004cad:	call   0x140009970
   140004cb2:	mov    DWORD PTR [rbp-0x59],eax
   140004cb5:	test   eax,eax
   140004cb7:	mov    eax,0x47d
   140004cbc:	js     0x140004d6a
   140004cc2:	movups xmm0,XMMWORD PTR [rip+0x79c7]        # 0x14000c690
   140004cc9:	mov    rcx,QWORD PTR [rbp+0x77]
   140004ccd:	lea    rdx,[rbp-0x19]
   140004cd1:	mov    r8d,ebx
   140004cd4:	mov    WORD PTR [rbp-0x55],ax
   140004cd8:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   140004cdd:	call   0x140009970
   140004ce2:	mov    DWORD PTR [rbp-0x59],eax
   140004ce5:	test   eax,eax
   140004ce7:	mov    eax,0x47e
   140004cec:	js     0x140004d6a
   140004cee:	movups xmm0,XMMWORD PTR [rip+0x79ab]        # 0x14000c6a0
   140004cf5:	mov    rcx,QWORD PTR [rbp+0x77]
   140004cf9:	lea    rdx,[rbp-0x19]
   140004cfd:	mov    ebx,0xff
   140004d02:	mov    WORD PTR [rbp-0x55],ax
   140004d06:	mov    r9d,ebx
   140004d09:	mov    r8d,ebx
   140004d0c:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   140004d11:	call   0x140009a34
   140004d16:	mov    DWORD PTR [rbp-0x59],eax
   140004d19:	test   eax,eax
   140004d1b:	mov    eax,0x483
   140004d20:	js     0x140004d6a
   140004d22:	movups xmm0,XMMWORD PTR [rip+0x78e7]        # 0x14000c610
   140004d29:	mov    rcx,QWORD PTR [rbp+0x77]
   140004d2d:	lea    rdx,[rbp-0x19]
   140004d31:	mov    r9d,ebx
   140004d34:	mov    WORD PTR [rbp-0x55],ax
   140004d38:	mov    r8d,ebx
   140004d3b:	movdqu XMMWORD PTR [rbp-0x19],xmm0
   140004d40:	call   0x140009a34
   140004d45:	mov    DWORD PTR [rbp-0x59],eax
   140004d48:	test   eax,eax
   140004d4a:	mov    eax,0x488
   140004d4f:	js     0x140004d6a
   140004d51:	mov    WORD PTR [rbp-0x55],ax
   140004d55:	mov    rax,QWORD PTR [rbp+0x7f]
   140004d59:	and    QWORD PTR [rbp+0x7f],0x0
   140004d5e:	mov    QWORD PTR [rsi],rax
   140004d61:	jmp    0x140004d6e
   140004d63:	mov    DWORD PTR [rbp-0x59],0x80070057
   140004d6a:	mov    WORD PTR [rbp-0x53],ax
   140004d6e:	mov    rcx,QWORD PTR [rbp+0x7f]
   140004d72:	call   QWORD PTR [rip+0x75d8]        # 0x14000c350
   140004d78:	mov    ebx,DWORD PTR [rbp-0x59]
   140004d7b:	lea    rcx,[rbp-0x1]
   140004d7f:	call   0x140009ce8
   140004d84:	mov    rcx,QWORD PTR [rbp-0x9]
   140004d88:	lea    rdx,[rcx-0x1]
   140004d8c:	cmp    rdx,0xfffffffffffffffd
   140004d90:	ja     0x140004d9d
   140004d92:	call   QWORD PTR [rip+0x7278]        # 0x14000c010
   140004d98:	and    QWORD PTR [rbp-0x9],0x0
   140004d9d:	lea    rcx,[rbp-0x59]
   140004da1:	call   0x1400084f8
   140004da6:	mov    eax,ebx
   140004da8:	mov    rbx,QWORD PTR [rsp+0x128]
   140004db0:	add    rsp,0x100
   140004db7:	pop    rdi
   140004db8:	pop    rsi
   140004db9:	pop    rbp
   140004dba:	ret    
   140004dbb:	int3   
   140004dbc:	int3   
   140004dbd:	int3   
   140004dbe:	int3   
   140004dbf:	int3   
   140004dc0:	int3   
   140004dc1:	int3   
   140004dc2:	int3   
   140004dc3:	int3   
   140004dc4:	mov    QWORD PTR [rsp+0x8],rbx
   140004dc9:	mov    QWORD PTR [rsp+0x10],rsi
   140004dce:	push   rdi
   140004dcf:	sub    rsp,0x60
   140004dd3:	mov    sil,dl
   140004dd6:	mov    rdi,rcx
   140004dd9:	lea    rdx,[rip+0x7cf0]        # 0x14000cad0
   140004de0:	mov    r9d,0x1
   140004de6:	lea    rcx,[rsp+0x20]
   140004deb:	mov    r8d,0x49b
   140004df1:	call   0x1400083e8
   140004df6:	call   0x140009b0c
   140004dfb:	mov    ebx,eax
   140004dfd:	mov    DWORD PTR [rsp+0x20],eax
   140004e01:	test   eax,eax
   140004e03:	mov    eax,0x49d
   140004e08:	jns    0x140004e11
   140004e0a:	mov    WORD PTR [rsp+0x26],ax
   140004e0f:	jmp    0x140004e37
   140004e11:	mov    WORD PTR [rsp+0x24],ax
   140004e16:	mov    rcx,rdi
   140004e19:	test   sil,sil
   140004e1c:	je     0x140004e53
   140004e1e:	call   0x140008e0c
   140004e23:	mov    ebx,eax
   140004e25:	mov    DWORD PTR [rsp+0x20],eax
   140004e29:	test   eax,eax
   140004e2b:	mov    eax,0x4a1
   140004e30:	js     0x140004e0a
   140004e32:	mov    WORD PTR [rsp+0x24],ax
   140004e37:	lea    rcx,[rsp+0x20]
   140004e3c:	call   0x1400084f8
   140004e41:	mov    rsi,QWORD PTR [rsp+0x78]
   140004e46:	mov    eax,ebx
   140004e48:	mov    rbx,QWORD PTR [rsp+0x70]
   140004e4d:	add    rsp,0x60
   140004e51:	pop    rdi
   140004e52:	ret    
   140004e53:	call   0x140007be8
   140004e58:	mov    ebx,eax
   140004e5a:	mov    DWORD PTR [rsp+0x20],eax
   140004e5e:	test   eax,eax
   140004e60:	mov    eax,0x4a5
   140004e65:	jmp    0x140004e30
   140004e67:	int3   
   140004e68:	int3   
   140004e69:	int3   
   140004e6a:	int3   
   140004e6b:	int3   
   140004e6c:	int3   
   140004e6d:	int3   
   140004e6e:	int3   
   140004e6f:	int3   
   140004e70:	mov    QWORD PTR [rsp+0x8],rbx
   140004e75:	mov    QWORD PTR [rsp+0x20],rsi
   140004e7a:	push   rbp
   140004e7b:	push   rdi
   140004e7c:	push   r14
   140004e7e:	mov    rbp,rsp
   140004e81:	sub    rsp,0x70
   140004e85:	mov    esi,r9d
   140004e88:	mov    rdi,r8
   140004e8b:	mov    r9d,0x2
   140004e91:	mov    rbx,rdx
   140004e94:	mov    r14,rcx
   140004e97:	lea    rdx,[rip+0x7d5a]        # 0x14000cbf8
   140004e9e:	lea    rcx,[rbp-0x38]
   140004ea2:	lea    r8d,[r9+0x1f]
   140004ea6:	call   0x1400083e8
   140004eab:	and    DWORD PTR [rbp-0x40],0x0
   140004eaf:	and    DWORD PTR [rbp+0x30],0x0
   140004eb3:	and    DWORD PTR [rbp+0x28],0x0
   140004eb7:	test   rdi,rdi
   140004eba:	je     0x140004ec2
   140004ebc:	mov    DWORD PTR [rdi],0x0
   140004ec2:	mov    eax,0x2a
   140004ec7:	test   rbx,rbx
   140004eca:	jne    0x140004eda
   140004ecc:	mov    ebx,0x80070057
   140004ed1:	mov    WORD PTR [rbp-0x32],ax
   140004ed5:	jmp    0x140004f94
   140004eda:	mov    WORD PTR [rbp-0x34],ax
   140004ede:	mov    eax,0x2b
   140004ee3:	test   rdi,rdi
   140004ee6:	je     0x140004ecc
   140004ee8:	and    DWORD PTR [rbp-0x38],0x0
   140004eec:	lea    r9,[rbp+0x30]
   140004ef0:	mov    WORD PTR [rbp-0x34],ax
   140004ef4:	xor    r8d,r8d
   140004ef7:	lea    rax,[rbp+0x28]
   140004efb:	mov    DWORD PTR [rbp+0x28],0x4
   140004f02:	mov    QWORD PTR [rsp+0x28],rax
   140004f07:	mov    rdx,rbx
   140004f0a:	lea    rax,[rbp-0x40]
   140004f0e:	mov    rcx,r14
   140004f11:	mov    QWORD PTR [rsp+0x20],rax
   140004f16:	call   QWORD PTR [rip+0x7154]        # 0x14000c070
   140004f1c:	test   esi,esi
   140004f1e:	je     0x140004f2d
   140004f20:	cmp    eax,0x2
   140004f23:	jne    0x140004f2d
   140004f25:	lea    ebx,[rax-0x1]
   140004f28:	lea    eax,[rbx+0x30]
   140004f2b:	jmp    0x140004f90
   140004f2d:	movzx  ebx,ax
   140004f30:	or     ebx,0x80070000
   140004f36:	test   eax,eax
   140004f38:	cmovle ebx,eax
   140004f3b:	mov    eax,0x34
   140004f40:	mov    DWORD PTR [rbp-0x38],ebx
   140004f43:	test   ebx,ebx
   140004f45:	jns    0x140004f54
   140004f47:	mov    WORD PTR [rbp-0x32],ax
   140004f4b:	mov    DWORD PTR [rbp-0x30],0x1
   140004f52:	jmp    0x140004f97
   140004f54:	cmp    DWORD PTR [rbp+0x30],0x4
   140004f58:	mov    WORD PTR [rbp-0x34],ax
   140004f5c:	mov    eax,0x36
   140004f61:	je     0x140004f6d
   140004f63:	mov    ebx,0x8007065d
   140004f68:	jmp    0x140004ed1
   140004f6d:	cmp    DWORD PTR [rbp+0x28],0x4
   140004f71:	mov    WORD PTR [rbp-0x34],ax
   140004f75:	je     0x140004f86
   140004f77:	mov    ebx,0x80004005
   140004f7c:	mov    eax,0x37
   140004f81:	jmp    0x140004ed1
   140004f86:	mov    eax,DWORD PTR [rbp-0x40]
   140004f89:	xor    ebx,ebx
   140004f8b:	mov    DWORD PTR [rdi],eax
   140004f8d:	lea    eax,[rbx+0x3b]
   140004f90:	mov    WORD PTR [rbp-0x34],ax
   140004f94:	mov    DWORD PTR [rbp-0x38],ebx
   140004f97:	lea    rcx,[rbp-0x38]
   140004f9b:	call   0x1400084f8
   140004fa0:	lea    r11,[rsp+0x70]
   140004fa5:	mov    eax,ebx
   140004fa7:	mov    rbx,QWORD PTR [r11+0x20]
   140004fab:	mov    rsi,QWORD PTR [r11+0x38]
   140004faf:	mov    rsp,r11
   140004fb2:	pop    r14
   140004fb4:	pop    rdi
   140004fb5:	pop    rbp
   140004fb6:	ret    
   140004fb7:	int3   
   140004fb8:	int3   
   140004fb9:	int3   
   140004fba:	int3   
   140004fbb:	int3   
   140004fbc:	int3   
   140004fbd:	int3   
   140004fbe:	int3   
   140004fbf:	int3   
   140004fc0:	mov    QWORD PTR [rsp+0x10],rbx
   140004fc5:	mov    DWORD PTR [rsp+0x20],r9d
   140004fca:	push   rbp
   140004fcb:	push   rsi
   140004fcc:	push   rdi
   140004fcd:	mov    rbp,rsp
   140004fd0:	sub    rsp,0x70
   140004fd4:	mov    r9d,0x2
   140004fda:	mov    rdi,r8
   140004fdd:	mov    rsi,rdx
   140004fe0:	mov    rbx,rcx
   140004fe3:	lea    rdx,[rip+0x7c1e]        # 0x14000cc08
   140004fea:	lea    rcx,[rbp-0x40]
   140004fee:	lea    r8d,[r9+0x74]
   140004ff2:	call   0x1400083e8
   140004ff7:	and    QWORD PTR [rbp+0x30],0x0
   140004ffc:	mov    DWORD PTR [rbp+0x38],0xb
   140005003:	mov    DWORD PTR [rbp+0x20],0x8
   14000500a:	test   rdi,rdi
   14000500d:	je     0x140005016
   14000500f:	mov    QWORD PTR [rdi],0x0
   140005016:	mov    eax,0x7f
   14000501b:	test   rbx,rbx
   14000501e:	jne    0x14000502e
   140005020:	mov    ebx,0x80070057
   140005025:	mov    WORD PTR [rbp-0x3a],ax
   140005029:	jmp    0x1400050d4
   14000502e:	mov    WORD PTR [rbp-0x3c],ax
   140005032:	mov    eax,0x80
   140005037:	test   rdi,rdi
   14000503a:	je     0x140005020
   14000503c:	and    DWORD PTR [rbp-0x40],0x0
   140005040:	lea    r9,[rbp+0x38]
   140005044:	mov    WORD PTR [rbp-0x3c],ax
   140005048:	xor    r8d,r8d
   14000504b:	lea    rax,[rbp+0x20]
   14000504f:	mov    rdx,rsi
   140005052:	mov    QWORD PTR [rsp+0x28],rax
   140005057:	mov    rcx,rbx
   14000505a:	lea    rax,[rbp+0x30]
   14000505e:	mov    QWORD PTR [rsp+0x20],rax
   140005063:	call   QWORD PTR [rip+0x7007]        # 0x14000c070
   140005069:	cmp    eax,0x2
   14000506c:	jne    0x140005078
   14000506e:	lea    ebx,[rax-0x1]
   140005071:	mov    eax,0x85
   140005076:	jmp    0x1400050d0
   140005078:	movzx  ebx,ax
   14000507b:	or     ebx,0x80070000
   140005081:	test   eax,eax
   140005083:	cmovle ebx,eax
   140005086:	mov    eax,0x88
   14000508b:	mov    DWORD PTR [rbp-0x40],ebx
   14000508e:	test   ebx,ebx
   140005090:	jns    0x14000509f
   140005092:	mov    WORD PTR [rbp-0x3a],ax
   140005096:	mov    DWORD PTR [rbp-0x38],0x1
   14000509d:	jmp    0x1400050d7
   14000509f:	cmp    DWORD PTR [rbp+0x38],0xb
   1400050a3:	mov    WORD PTR [rbp-0x3c],ax
   1400050a7:	mov    eax,0x8a
   1400050ac:	je     0x1400050b8
   1400050ae:	mov    ebx,0x8000ffff
   1400050b3:	jmp    0x140005025
   1400050b8:	cmp    DWORD PTR [rbp+0x20],0x8
   1400050bc:	mov    WORD PTR [rbp-0x3c],ax
   1400050c0:	mov    eax,0x8b
   1400050c5:	jne    0x1400050ae
   1400050c7:	mov    rcx,QWORD PTR [rbp+0x30]
   1400050cb:	xor    ebx,ebx
   1400050cd:	mov    QWORD PTR [rdi],rcx
   1400050d0:	mov    WORD PTR [rbp-0x3c],ax
   1400050d4:	mov    DWORD PTR [rbp-0x40],ebx
   1400050d7:	lea    rcx,[rbp-0x40]
   1400050db:	call   0x1400084f8
   1400050e0:	mov    eax,ebx
   1400050e2:	mov    rbx,QWORD PTR [rsp+0x98]
   1400050ea:	add    rsp,0x70
   1400050ee:	pop    rdi
   1400050ef:	pop    rsi
   1400050f0:	pop    rbp
   1400050f1:	ret    
   1400050f2:	int3   
   1400050f3:	int3   
   1400050f4:	int3   
   1400050f5:	int3   
   1400050f6:	int3   
   1400050f7:	int3   
   1400050f8:	mov    QWORD PTR [rsp+0x18],r8
   1400050fd:	push   rbx
   1400050fe:	sub    rsp,0x70
   140005102:	mov    rbx,rcx
   140005105:	lea    rdx,[rip+0x7b14]        # 0x14000cc20
   14000510c:	lea    rcx,[rsp+0x30]
   140005111:	mov    r9d,0x2
   140005117:	mov    r8d,0x164
   14000511d:	call   0x1400083e8
   140005122:	test   rbx,rbx
   140005125:	jne    0x14000513c
   140005127:	mov    ebx,0x80070057
   14000512c:	mov    eax,0x166
   140005131:	mov    DWORD PTR [rsp+0x30],ebx
   140005135:	mov    WORD PTR [rsp+0x36],ax
   14000513a:	jmp    0x140005199
   14000513c:	and    DWORD PTR [rsp+0x30],0x0
   140005141:	lea    rdx,[rip+0x74f8]        # 0x14000c640
   140005148:	mov    eax,0x167
   14000514d:	mov    DWORD PTR [rsp+0x28],0x8
   140005155:	mov    WORD PTR [rsp+0x34],ax
   14000515a:	mov    r9d,0xb
   140005160:	lea    rax,[rsp+0x90]
   140005168:	xor    r8d,r8d
   14000516b:	mov    rcx,rbx
   14000516e:	mov    QWORD PTR [rsp+0x20],rax
   140005173:	call   QWORD PTR [rip+0x6eef]        # 0x14000c068
   140005179:	movzx  ebx,ax
   14000517c:	or     ebx,0x80070000
   140005182:	test   eax,eax
   140005184:	cmovle ebx,eax
   140005187:	mov    eax,0x169
   14000518c:	mov    DWORD PTR [rsp+0x30],ebx
   140005190:	test   ebx,ebx
   140005192:	js     0x140005135
   140005194:	mov    WORD PTR [rsp+0x34],ax
   140005199:	lea    rcx,[rsp+0x30]
   14000519e:	call   0x1400084f8
   1400051a3:	mov    eax,ebx
   1400051a5:	add    rsp,0x70
   1400051a9:	pop    rbx
   1400051aa:	ret    
   1400051ab:	int3   
   1400051ac:	int3   
   1400051ad:	int3   
   1400051ae:	int3   
   1400051af:	int3   
   1400051b0:	int3   
   1400051b1:	int3   
   1400051b2:	int3   
   1400051b3:	int3   
   1400051b4:	mov    rax,rsp
   1400051b7:	mov    QWORD PTR [rax+0x18],rbx
   1400051bb:	mov    QWORD PTR [rax+0x20],rdi
   1400051bf:	mov    QWORD PTR [rax+0x10],rdx
   1400051c3:	mov    QWORD PTR [rax+0x8],rcx
   1400051c7:	push   rbp
   1400051c8:	mov    rbp,rsp
   1400051cb:	sub    rsp,0x70
   1400051cf:	mov    rdi,r8
   1400051d2:	lea    rdx,[rip+0x7a5f]        # 0x14000cc38
   1400051d9:	mov    r8d,0x39a
   1400051df:	lea    rcx,[rbp-0x40]
   1400051e3:	mov    r9d,0x2
   1400051e9:	call   0x1400083e8
   1400051ee:	and    QWORD PTR [rbp+0x10],0x0
   1400051f3:	and    DWORD PTR [rbp+0x18],0x0
   1400051f7:	test   rdi,rdi
   1400051fa:	je     0x140005202
   1400051fc:	mov    DWORD PTR [rdi],0x0
   140005202:	mov    eax,0x3a3
   140005207:	mov    WORD PTR [rbp-0x3c],ax
   14000520b:	mov    eax,0x3a4
   140005210:	test   rdi,rdi
   140005213:	jne    0x140005226
   140005215:	mov    ebx,0x80070057
   14000521a:	mov    WORD PTR [rbp-0x3a],ax
   14000521e:	mov    DWORD PTR [rbp-0x40],ebx
   140005221:	jmp    0x14000536a
   140005226:	and    DWORD PTR [rbp-0x40],0x0
   14000522a:	lea    rdx,[rip+0x727f]        # 0x14000c4b0
   140005231:	mov    WORD PTR [rbp-0x3c],ax
   140005235:	mov    r9d,0x20019
   14000523b:	lea    rax,[rbp+0x10]
   14000523f:	xor    r8d,r8d
   140005242:	mov    rcx,0xffffffff80000002
   140005249:	mov    QWORD PTR [rsp+0x20],rax
   14000524e:	call   QWORD PTR [rip+0x6db4]        # 0x14000c008
   140005254:	test   eax,eax
   140005256:	jne    0x1400052a3
   140005258:	mov    rcx,QWORD PTR [rbp+0x10]
   14000525c:	lea    r9d,[rax+0x1]
   140005260:	lea    r8,[rbp+0x18]
   140005264:	lea    rdx,[rip+0x7445]        # 0x14000c6b0
   14000526b:	call   0x140004e70
   140005270:	mov    ebx,eax
   140005272:	mov    DWORD PTR [rbp-0x40],eax
   140005275:	test   eax,eax
   140005277:	mov    eax,0x3ac
   14000527c:	jns    0x140005287
   14000527e:	mov    WORD PTR [rbp-0x3a],ax
   140005282:	jmp    0x140005351
   140005287:	mov    WORD PTR [rbp-0x3c],ax
   14000528b:	test   ebx,ebx
   14000528d:	jne    0x1400052a3
   14000528f:	xor    eax,eax
   140005291:	cmp    DWORD PTR [rbp+0x18],eax
   140005294:	setne  al
   140005297:	mov    DWORD PTR [rdi],eax
   140005299:	mov    eax,0x3b0
   14000529e:	jmp    0x14000534a
   1400052a3:	mov    rcx,QWORD PTR [rbp+0x10]
   1400052a7:	test   rcx,rcx
   1400052aa:	je     0x1400052d3
   1400052ac:	cmp    rcx,0xffffffffffffffff
   1400052b0:	je     0x1400052be
   1400052b2:	call   QWORD PTR [rip+0x6d58]        # 0x14000c010
   1400052b8:	xor    ecx,ecx
   1400052ba:	mov    QWORD PTR [rbp+0x10],rcx
   1400052be:	lea    rax,[rcx-0x1]
   1400052c2:	cmp    rax,0xfffffffffffffffd
   1400052c6:	ja     0x1400052d3
   1400052c8:	call   QWORD PTR [rip+0x6d42]        # 0x14000c010
   1400052ce:	and    QWORD PTR [rbp+0x10],0x0
   1400052d3:	lea    rax,[rbp+0x10]
   1400052d7:	mov    r9d,0x20019
   1400052dd:	xor    r8d,r8d
   1400052e0:	mov    QWORD PTR [rsp+0x20],rax
   1400052e5:	lea    rdx,[rip+0x71c4]        # 0x14000c4b0
   1400052ec:	mov    rcx,0xffffffff80000001
   1400052f3:	call   QWORD PTR [rip+0x6d0f]        # 0x14000c008
   1400052f9:	test   eax,eax
   1400052fb:	jne    0x14000533d
   1400052fd:	mov    rcx,QWORD PTR [rbp+0x10]
   140005301:	lea    r9d,[rax+0x1]
   140005305:	lea    r8,[rbp+0x18]
   140005309:	lea    rdx,[rip+0x73a0]        # 0x14000c6b0
   140005310:	call   0x140004e70
   140005315:	mov    DWORD PTR [rbp-0x40],eax
   140005318:	mov    ebx,eax
   14000531a:	test   eax,eax
   14000531c:	jns    0x140005328
   14000531e:	mov    eax,0x3bb
   140005323:	jmp    0x14000527e
   140005328:	jne    0x14000533d
   14000532a:	xor    eax,eax
   14000532c:	cmp    DWORD PTR [rbp+0x18],eax
   14000532f:	setne  al
   140005332:	xor    ebx,ebx
   140005334:	mov    DWORD PTR [rdi],eax
   140005336:	mov    eax,0x3bf
   14000533b:	jmp    0x14000534a
   14000533d:	and    DWORD PTR [rdi],0x0
   140005340:	mov    ebx,0x1
   140005345:	mov    eax,0x3c7
   14000534a:	mov    DWORD PTR [rbp-0x40],ebx
   14000534d:	mov    WORD PTR [rbp-0x3c],ax
   140005351:	mov    rcx,QWORD PTR [rbp+0x10]
   140005355:	lea    rdx,[rcx-0x1]
   140005359:	cmp    rdx,0xfffffffffffffffd
   14000535d:	ja     0x14000536a
   14000535f:	call   QWORD PTR [rip+0x6cab]        # 0x14000c010
   140005365:	and    QWORD PTR [rbp+0x10],0x0
   14000536a:	lea    rcx,[rbp-0x40]
   14000536e:	call   0x1400084f8
   140005373:	lea    r11,[rsp+0x70]
   140005378:	mov    eax,ebx
   14000537a:	mov    rbx,QWORD PTR [r11+0x20]
   14000537e:	mov    rdi,QWORD PTR [r11+0x28]
   140005382:	mov    rsp,r11
   140005385:	pop    rbp
   140005386:	ret    
   140005387:	int3   
   140005388:	int3   
   140005389:	int3   
   14000538a:	int3   
   14000538b:	int3   
   14000538c:	int3   
   14000538d:	int3   
   14000538e:	int3   
   14000538f:	int3   
   140005390:	mov    QWORD PTR [rsp+0x8],rbx
   140005395:	mov    QWORD PTR [rsp+0x10],rbp
   14000539a:	mov    QWORD PTR [rsp+0x18],rsi
   14000539f:	push   rdi
   1400053a0:	sub    rsp,0x20
   1400053a4:	cmp    QWORD PTR [rdx],0x0
   1400053a8:	mov    rdi,rdx
   1400053ab:	mov    rsi,rcx
   1400053ae:	je     0x1400053de
   1400053b0:	xor    ebp,ebp
   1400053b2:	cmp    DWORD PTR [rcx],ebp
   1400053b4:	jbe    0x1400053d1
   1400053b6:	mov    rcx,QWORD PTR [rdi]
   1400053b9:	mov    rcx,QWORD PTR [rcx+rbp*8]
   1400053bd:	call   QWORD PTR [rip+0x6f8d]        # 0x14000c350
   1400053c3:	mov    rax,QWORD PTR [rdi]
   1400053c6:	and    QWORD PTR [rax+rbp*8],0x0
   1400053cb:	inc    ebp
   1400053cd:	cmp    ebp,DWORD PTR [rsi]
   1400053cf:	jb     0x1400053b6
   1400053d1:	mov    rcx,QWORD PTR [rdi]
   1400053d4:	call   QWORD PTR [rip+0x6f76]        # 0x14000c350
   1400053da:	and    QWORD PTR [rdi],0x0
   1400053de:	and    DWORD PTR [rsi],0x0
   1400053e1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400053e6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400053eb:	mov    rbp,QWORD PTR [rsp+0x38]
   1400053f0:	add    rsp,0x20
   1400053f4:	pop    rdi
   1400053f5:	ret    
   1400053f6:	int3   
   1400053f7:	int3   
   1400053f8:	int3   
   1400053f9:	int3   
   1400053fa:	int3   
   1400053fb:	int3   
   1400053fc:	test   rcx,rcx
   1400053ff:	je     0x14000542f
   140005401:	push   rbx
   140005402:	sub    rsp,0x20
   140005406:	mov    rbx,rcx
   140005409:	add    rcx,0x18
   14000540d:	mov    eax,DWORD PTR [rcx]
   14000540f:	lea    rdx,[rbx+0x20]
   140005413:	mov    DWORD PTR [rsp+0x30],eax
   140005417:	call   0x140005390
   14000541c:	lea    rdx,[rbx+0x28]
   140005420:	lea    rcx,[rsp+0x30]
   140005425:	call   0x140005390
   14000542a:	add    rsp,0x20
   14000542e:	pop    rbx
   14000542f:	ret    
   140005430:	int3   
   140005431:	int3   
   140005432:	int3   
   140005433:	int3   
   140005434:	int3   
   140005435:	int3   
   140005436:	int3   
   140005437:	int3   
   140005438:	test   rcx,rcx
   14000543b:	je     0x140005475
   14000543d:	push   rbx
   14000543e:	sub    rsp,0x20
   140005442:	mov    rbx,rcx
   140005445:	mov    rcx,QWORD PTR [rcx+0x10]
   140005449:	call   QWORD PTR [rip+0x6f01]        # 0x14000c350
   14000544f:	mov    rcx,QWORD PTR [rbx+0x18]
   140005453:	and    QWORD PTR [rbx+0x10],0x0
   140005458:	call   QWORD PTR [rip+0x6ef2]        # 0x14000c350
   14000545e:	and    QWORD PTR [rbx+0x18],0x0
   140005463:	lea    rdx,[rbx+0x28]
   140005467:	lea    rcx,[rbx+0x20]
   14000546b:	call   0x140005390
   140005470:	add    rsp,0x20
   140005474:	pop    rbx
   140005475:	ret    
   140005476:	int3   
   140005477:	int3   
   140005478:	int3   
   140005479:	int3   
   14000547a:	int3   
   14000547b:	int3   
   14000547c:	test   rcx,rcx
   14000547f:	je     0x1400054aa
   140005481:	push   rbx
   140005482:	sub    rsp,0x20
   140005486:	mov    rbx,rcx
   140005489:	mov    rcx,QWORD PTR [rcx]
   14000548c:	call   QWORD PTR [rip+0x6ebe]        # 0x14000c350
   140005492:	mov    rcx,QWORD PTR [rbx+0x8]
   140005496:	and    QWORD PTR [rbx],0x0
   14000549a:	call   QWORD PTR [rip+0x6eb0]        # 0x14000c350
   1400054a0:	and    QWORD PTR [rbx+0x8],0x0
   1400054a5:	add    rsp,0x20
   1400054a9:	pop    rbx
   1400054aa:	ret    
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	int3   
   1400054b1:	int3   
   1400054b2:	int3   
   1400054b3:	int3   
   1400054b4:	test   rcx,rcx
   1400054b7:	je     0x1400055b6
   1400054bd:	mov    QWORD PTR [rsp+0x8],rbx
   1400054c2:	mov    QWORD PTR [rsp+0x10],rsi
   1400054c7:	push   rdi
   1400054c8:	sub    rsp,0x20
   1400054cc:	mov    rbx,rcx
   1400054cf:	xor    esi,esi
   1400054d1:	mov    rcx,QWORD PTR [rcx+0x28]
   1400054d5:	call   QWORD PTR [rip+0x6e75]        # 0x14000c350
   1400054db:	mov    rcx,QWORD PTR [rbx+0x40]
   1400054df:	mov    QWORD PTR [rbx+0x28],rsi
   1400054e3:	call   QWORD PTR [rip+0x6e67]        # 0x14000c350
   1400054e9:	mov    rcx,QWORD PTR [rbx+0x48]
   1400054ed:	mov    QWORD PTR [rbx+0x40],rsi
   1400054f1:	call   QWORD PTR [rip+0x6e59]        # 0x14000c350
   1400054f7:	mov    rcx,QWORD PTR [rbx+0x50]
   1400054fb:	mov    QWORD PTR [rbx+0x48],rsi
   1400054ff:	call   QWORD PTR [rip+0x6e4b]        # 0x14000c350
   140005505:	mov    QWORD PTR [rbx+0x50],rsi
   140005509:	cmp    QWORD PTR [rbx+0x60],rsi
   14000550d:	je     0x14000553e
   14000550f:	mov    edi,esi
   140005511:	cmp    DWORD PTR [rbx+0x58],esi
   140005514:	jbe    0x140005530
   140005516:	mov    eax,edi
   140005518:	lea    rcx,[rax+rax*2]
   14000551c:	shl    rcx,0x4
   140005520:	add    rcx,QWORD PTR [rbx+0x60]
   140005524:	call   0x140005438
   140005529:	inc    edi
   14000552b:	cmp    edi,DWORD PTR [rbx+0x58]
   14000552e:	jb     0x140005516
   140005530:	mov    rcx,QWORD PTR [rbx+0x60]
   140005534:	call   QWORD PTR [rip+0x6e16]        # 0x14000c350
   14000553a:	mov    QWORD PTR [rbx+0x60],rsi
   14000553e:	mov    DWORD PTR [rbx+0x58],esi
   140005541:	cmp    QWORD PTR [rbx+0x90],rsi
   140005548:	je     0x140005584
   14000554a:	mov    edi,esi
   14000554c:	cmp    DWORD PTR [rbx+0x88],esi
   140005552:	jbe    0x140005570
   140005554:	mov    ecx,edi
   140005556:	shl    rcx,0x4
   14000555a:	add    rcx,QWORD PTR [rbx+0x90]
   140005561:	call   0x14000547c
   140005566:	inc    edi
   140005568:	cmp    edi,DWORD PTR [rbx+0x88]
   14000556e:	jb     0x140005554
   140005570:	mov    rcx,QWORD PTR [rbx+0x90]
   140005577:	call   QWORD PTR [rip+0x6dd3]        # 0x14000c350
   14000557d:	mov    QWORD PTR [rbx+0x90],rsi
   140005584:	lea    rdx,[rbx+0x70]
   140005588:	mov    DWORD PTR [rbx+0x88],esi
   14000558e:	lea    rcx,[rbx+0x68]
   140005592:	call   0x140005390
   140005597:	lea    rdx,[rbx+0x80]
   14000559e:	lea    rcx,[rbx+0x78]
   1400055a2:	call   0x140005390
   1400055a7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400055ac:	mov    rsi,QWORD PTR [rsp+0x38]
   1400055b1:	add    rsp,0x20
   1400055b5:	pop    rdi
   1400055b6:	ret    
   1400055b7:	int3   
   1400055b8:	int3   
   1400055b9:	int3   
   1400055ba:	int3   
   1400055bb:	int3   
   1400055bc:	int3   
   1400055bd:	int3   
   1400055be:	int3   
   1400055bf:	int3   
   1400055c0:	mov    r11,rsp
   1400055c3:	mov    QWORD PTR [r11+0x20],r9
   1400055c7:	sub    rsp,0x68
   1400055cb:	and    QWORD PTR [r11-0x28],0x0
   1400055d0:	lea    rax,[r11-0x18]
   1400055d4:	mov    QWORD PTR [r11-0x30],0x4
   1400055dc:	lea    r8,[rip+0x77b5]        # 0x14000cd98
   1400055e3:	mov    QWORD PTR [r11-0x38],rax
   1400055e7:	mov    edx,0x1a
   1400055ec:	lea    rax,[r11+0x20]
   1400055f0:	movzx  r9d,dx
   1400055f4:	mov    QWORD PTR [r11-0x40],0x8
   1400055fc:	mov    edx,0x2b
   140005601:	mov    QWORD PTR [r11-0x48],rax
   140005605:	mov    DWORD PTR [rsp+0x50],0x105
   14000560d:	call   QWORD PTR [rip+0x6d05]        # 0x14000c318
   140005613:	add    rsp,0x68
   140005617:	ret    
   140005618:	int3   
   140005619:	int3   
   14000561a:	int3   
   14000561b:	int3   
   14000561c:	int3   
   14000561d:	int3   
   14000561e:	int3   
   14000561f:	int3   
   140005620:	sub    rsp,0x58
   140005624:	test   r9,r9
   140005627:	je     0x14000563c
   140005629:	or     rdx,0xffffffffffffffff
   14000562d:	inc    rdx
   140005630:	cmp    BYTE PTR [r9+rdx*1],0x0
   140005635:	jne    0x14000562d
   140005637:	inc    rdx
   14000563a:	jmp    0x140005641
   14000563c:	mov    edx,0x5
   140005641:	test   r9,r9
   140005644:	lea    r8,[rsp+0x80]
   14000564c:	lea    rax,[rip+0x71c9]        # 0x14000c81c
   140005653:	cmovne rax,r9
   140005657:	and    QWORD PTR [rsp+0x40],0x0
   14000565d:	mov    QWORD PTR [rsp+0x38],0x4
   140005666:	mov    r9d,0x19
   14000566c:	mov    QWORD PTR [rsp+0x30],r8
   140005671:	lea    r8,[rip+0x78f0]        # 0x14000cf68
   140005678:	mov    QWORD PTR [rsp+0x28],rdx
   14000567d:	mov    QWORD PTR [rsp+0x20],rax
   140005682:	lea    edx,[r9+0x12]
   140005686:	call   QWORD PTR [rip+0x6c8c]        # 0x14000c318
   14000568c:	add    rsp,0x58
   140005690:	ret    
   140005691:	int3   
   140005692:	int3   
   140005693:	int3   
   140005694:	int3   
   140005695:	int3   
   140005696:	int3   
   140005697:	int3   
   140005698:	mov    QWORD PTR [rsp+0x18],rbx
   14000569d:	push   rbp
   14000569e:	push   rsi
   14000569f:	push   rdi
   1400056a0:	push   r14
   1400056a2:	push   r15
   1400056a4:	lea    rbp,[rsp-0x3b0]
   1400056ac:	sub    rsp,0x4b0
   1400056b3:	mov    rax,QWORD PTR [rip+0x994e]        # 0x14000f008
   1400056ba:	xor    rax,rsp
   1400056bd:	mov    QWORD PTR [rbp+0x3a0],rax
   1400056c4:	mov    rsi,rdx
   1400056c7:	mov    rbx,rcx
   1400056ca:	mov    rcx,QWORD PTR [rip+0x994f]        # 0x14000f020
   1400056d1:	lea    r15,[rip+0x9948]        # 0x14000f020
   1400056d8:	cmp    rcx,r15
   1400056db:	je     0x1400056fe
   1400056dd:	test   DWORD PTR [rcx+0x1c],0x20000000
   1400056e4:	je     0x1400056fe
   1400056e6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400056ea:	lea    r8,[rip+0x76a7]        # 0x14000cd98
   1400056f1:	mov    edx,0x12
   1400056f6:	mov    r9,rbx
   1400056f9:	call   0x140002544
   1400056fe:	mov    r9d,0x1
   140005704:	lea    rdx,[rip+0x7545]        # 0x14000cc50
   14000570b:	mov    r8d,0x202
   140005711:	lea    rcx,[rsp+0x30]
   140005716:	call   0x1400083e8
   14000571b:	lea    rax,[rip+0x7a0e]        # 0x14000d130
   140005722:	xor    r14d,r14d
   140005725:	mov    edi,0x208
   14000572a:	mov    QWORD PTR [rsp+0x68],rax
   14000572f:	mov    r8d,edi
   140005732:	mov    QWORD PTR [rsp+0x70],r14
   140005737:	xor    edx,edx
   140005739:	mov    WORD PTR [rbp-0x80],r14w
   14000573e:	lea    rcx,[rbp-0x7e]
   140005742:	call   0x14000b152
   140005747:	mov    r8d,edi
   14000574a:	mov    WORD PTR [rbp+0x190],r14w
   140005752:	xor    edx,edx
   140005754:	lea    rcx,[rbp+0x192]
   14000575b:	call   0x14000b152
   140005760:	test   rbx,rbx
   140005763:	jne    0x140005774
   140005765:	mov    ebx,0x80070057
   14000576a:	mov    WORD PTR [rsp+0x36],di
   14000576f:	jmp    0x140005973
   140005774:	mov    WORD PTR [rsp+0x34],di
   140005779:	test   rsi,rsi
   14000577c:	jne    0x140005792
   14000577e:	mov    eax,0x209
   140005783:	mov    ebx,0x80070057
   140005788:	mov    WORD PTR [rsp+0x36],ax
   14000578d:	jmp    0x140005973
   140005792:	mov    eax,0x20a
   140005797:	mov    DWORD PTR [rsp+0x30],r14d
   14000579c:	mov    WORD PTR [rsp+0x34],ax
   1400057a1:	mov    rdx,rbx
   1400057a4:	lea    rcx,[rsp+0x68]
   1400057a9:	call   0x14000a1c4
   1400057ae:	mov    ebx,eax
   1400057b0:	mov    DWORD PTR [rsp+0x30],eax
   1400057b4:	test   eax,eax
   1400057b6:	mov    eax,0x20c
   1400057bb:	jns    0x1400057c7
   1400057bd:	mov    WORD PTR [rsp+0x36],ax
   1400057c2:	jmp    0x140005977
   1400057c7:	mov    WORD PTR [rsp+0x34],ax
   1400057cc:	mov    eax,0x20d
   1400057d1:	cmp    DWORD PTR [rsp+0x70],r14d
   1400057d6:	je     0x140005783
   1400057d8:	lea    rcx,[rsp+0x68]
   1400057dd:	mov    DWORD PTR [rsp+0x30],r14d
   1400057e2:	mov    WORD PTR [rsp+0x34],ax
   1400057e7:	call   0x14000a460
   1400057ec:	mov    ebx,eax
   1400057ee:	mov    DWORD PTR [rsp+0x30],eax
   1400057f2:	test   eax,eax
   1400057f4:	mov    eax,0x20f
   1400057f9:	js     0x1400057bd
   1400057fb:	mov    rdi,QWORD PTR [rsp+0x68]
   140005800:	lea    rdx,[rbp-0x80]
   140005804:	mov    ebx,0x105
   140005809:	mov    WORD PTR [rsp+0x34],ax
   14000580e:	mov    r8d,ebx
   140005811:	mov    rcx,rdi
   140005814:	call   QWORD PTR [rip+0x68ae]        # 0x14000c0c8
   14000581a:	test   eax,eax
   14000581c:	jne    0x14000587e
   14000581e:	call   0x1400063e4
   140005823:	mov    ebx,eax
   140005825:	mov    DWORD PTR [rsp+0x30],eax
   140005829:	mov    eax,0x215
   14000582e:	mov    WORD PTR [rsp+0x36],ax
   140005833:	mov    rcx,QWORD PTR [rip+0x97e6]        # 0x14000f020
   14000583a:	cmp    rcx,r15
   14000583d:	je     0x140005977
   140005843:	test   DWORD PTR [rcx+0x1c],0x2000000
   14000584a:	je     0x140005977
   140005850:	mov    DWORD PTR [rsp+0x28],ebx
   140005854:	lea    r9,[rip+0x7415]        # 0x14000cc70
   14000585b:	mov    QWORD PTR [rsp+0x20],rdi
   140005860:	mov    edx,0x13
   140005865:	mov    rcx,QWORD PTR [rcx+0x10]
   140005869:	lea    r8,[rip+0x7528]        # 0x14000cd98
   140005870:	call   0x1400026e0
   140005875:	mov    ebx,DWORD PTR [rsp+0x30]
   140005879:	jmp    0x140005977
   14000587e:	mov    eax,0x215
   140005883:	mov    DWORD PTR [rsp+0x30],r14d
   140005888:	mov    r8d,ebx
   14000588b:	mov    WORD PTR [rsp+0x34],ax
   140005890:	lea    rdx,[rbp+0x190]
   140005897:	lea    rcx,[rbp-0x80]
   14000589b:	call   QWORD PTR [rip+0x681f]        # 0x14000c0c0
   1400058a1:	test   eax,eax
   1400058a3:	jne    0x1400058f5
   1400058a5:	call   0x1400063e4
   1400058aa:	mov    ebx,eax
   1400058ac:	mov    DWORD PTR [rsp+0x30],eax
   1400058b0:	mov    eax,0x21c
   1400058b5:	mov    WORD PTR [rsp+0x36],ax
   1400058ba:	mov    rcx,QWORD PTR [rip+0x975f]        # 0x14000f020
   1400058c1:	cmp    rcx,r15
   1400058c4:	je     0x140005977
   1400058ca:	test   DWORD PTR [rcx+0x1c],0x2000000
   1400058d1:	je     0x140005977
   1400058d7:	lea    rax,[rbp-0x80]
   1400058db:	mov    DWORD PTR [rsp+0x28],ebx
   1400058df:	mov    QWORD PTR [rsp+0x20],rax
   1400058e4:	lea    r9,[rip+0x73c5]        # 0x14000ccb0
   1400058eb:	mov    edx,0x14
   1400058f0:	jmp    0x140005865
   1400058f5:	mov    eax,0x21c
   1400058fa:	mov    DWORD PTR [rsp+0x30],r14d
   1400058ff:	mov    r8d,ebx
   140005902:	mov    WORD PTR [rsp+0x34],ax
   140005907:	mov    rdx,rsi
   14000590a:	lea    rcx,[rbp+0x190]
   140005911:	call   QWORD PTR [rip+0x67a9]        # 0x14000c0c0
   140005917:	test   eax,eax
   140005919:	jne    0x140005966
   14000591b:	call   0x1400063e4
   140005920:	mov    ebx,eax
   140005922:	mov    DWORD PTR [rsp+0x30],eax
   140005926:	mov    eax,0x222
   14000592b:	mov    WORD PTR [rsp+0x36],ax
   140005930:	mov    rcx,QWORD PTR [rip+0x96e9]        # 0x14000f020
   140005937:	cmp    rcx,r15
   14000593a:	je     0x140005977
   14000593c:	test   DWORD PTR [rcx+0x1c],0x2000000
   140005943:	je     0x140005977
   140005945:	lea    rax,[rbp+0x190]
   14000594c:	mov    DWORD PTR [rsp+0x28],ebx
   140005950:	mov    QWORD PTR [rsp+0x20],rax
   140005955:	lea    r9,[rip+0x73b4]        # 0x14000cd10
   14000595c:	mov    edx,0x15
   140005961:	jmp    0x140005865
   140005966:	mov    eax,0x222
   14000596b:	mov    ebx,r14d
   14000596e:	mov    WORD PTR [rsp+0x34],ax
   140005973:	mov    DWORD PTR [rsp+0x30],ebx
   140005977:	lea    rcx,[rsp+0x68]
   14000597c:	call   0x140009ce8
   140005981:	lea    rcx,[rsp+0x30]
   140005986:	call   0x1400084f8
   14000598b:	mov    eax,ebx
   14000598d:	mov    rcx,QWORD PTR [rbp+0x3a0]
   140005994:	xor    rcx,rsp
   140005997:	call   0x14000ab80
   14000599c:	mov    rbx,QWORD PTR [rsp+0x4f0]
   1400059a4:	add    rsp,0x4b0
   1400059ab:	pop    r15
   1400059ad:	pop    r14
   1400059af:	pop    rdi
   1400059b0:	pop    rsi
   1400059b1:	pop    rbp
   1400059b2:	ret    
   1400059b3:	int3   
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	mov    rax,rsp
   1400059bf:	mov    QWORD PTR [rax+0x10],rbx
   1400059c3:	mov    QWORD PTR [rax+0x18],rsi
   1400059c7:	mov    QWORD PTR [rax+0x20],rdi
   1400059cb:	push   rbp
   1400059cc:	lea    rbp,[rax-0x5a8]
   1400059d3:	sub    rsp,0x6a0
   1400059da:	mov    rax,QWORD PTR [rip+0x9627]        # 0x14000f008
   1400059e1:	xor    rax,rsp
   1400059e4:	mov    QWORD PTR [rbp+0x590],rax
   1400059eb:	mov    rbx,rcx
   1400059ee:	mov    rcx,QWORD PTR [rip+0x962b]        # 0x14000f020
   1400059f5:	lea    rax,[rip+0x9624]        # 0x14000f020
   1400059fc:	cmp    rcx,rax
   1400059ff:	je     0x140005a22
   140005a01:	test   DWORD PTR [rcx+0x1c],0x20000000
   140005a08:	je     0x140005a22
   140005a0a:	mov    rcx,QWORD PTR [rcx+0x10]
   140005a0e:	lea    r8,[rip+0x7383]        # 0x14000cd98
   140005a15:	mov    edx,0x18
   140005a1a:	mov    r9,rbx
   140005a1d:	call   0x140002544
   140005a22:	mov    r9d,0x1
   140005a28:	lea    rdx,[rip+0x7329]        # 0x14000cd58
   140005a2f:	mov    r8d,0x330
   140005a35:	lea    rcx,[rsp+0x20]
   140005a3a:	call   0x1400083e8
   140005a3f:	mov    edi,0x208
   140005a44:	lea    rcx,[rsp+0x62]
   140005a49:	xor    esi,esi
   140005a4b:	mov    r8d,edi
   140005a4e:	xor    edx,edx
   140005a50:	mov    WORD PTR [rsp+0x60],si
   140005a55:	call   0x14000b152
   140005a5a:	mov    r8d,edi
   140005a5d:	mov    WORD PTR [rbp+0x380],si
   140005a64:	xor    edx,edx
   140005a66:	lea    rcx,[rbp+0x382]
   140005a6d:	call   0x14000b152
   140005a72:	mov    r8d,edi
   140005a75:	mov    WORD PTR [rbp+0x170],si
   140005a7c:	xor    edx,edx
   140005a7e:	lea    rcx,[rbp+0x172]
   140005a85:	call   0x14000b152
   140005a8a:	mov    eax,0x337
   140005a8f:	test   rbx,rbx
   140005a92:	jne    0x140005aa7
   140005a94:	mov    ebx,0x80070057
   140005a99:	mov    DWORD PTR [rsp+0x20],ebx
   140005a9d:	mov    WORD PTR [rsp+0x26],ax
   140005aa2:	jmp    0x140005b85
   140005aa7:	lea    rdx,[rbp+0x170]
   140005aae:	mov    DWORD PTR [rsp+0x20],esi
   140005ab2:	mov    rcx,rbx
   140005ab5:	mov    WORD PTR [rsp+0x24],ax
   140005aba:	call   0x140005698
   140005abf:	mov    ebx,eax
   140005ac1:	mov    DWORD PTR [rsp+0x20],eax
   140005ac5:	test   eax,eax
   140005ac7:	mov    eax,0x33c
   140005acc:	js     0x140005a9d
   140005ace:	mov    ebx,0x105
   140005ad3:	mov    WORD PTR [rsp+0x24],ax
   140005ad8:	mov    r8d,ebx
   140005adb:	lea    rdx,[rsp+0x60]
   140005ae0:	lea    rcx,[rip+0x7281]        # 0x14000cd68
   140005ae7:	call   QWORD PTR [rip+0x65cb]        # 0x14000c0b8
   140005aed:	mov    ecx,eax
   140005aef:	test   eax,eax
   140005af1:	jne    0x140005b05
   140005af3:	call   0x1400063e4
   140005af8:	mov    ebx,eax
   140005afa:	mov    DWORD PTR [rsp+0x20],eax
   140005afe:	mov    eax,0x345
   140005b03:	jmp    0x140005a9d
   140005b05:	mov    eax,0x345
   140005b0a:	mov    WORD PTR [rsp+0x24],ax
   140005b0f:	mov    eax,0x346
   140005b14:	cmp    ecx,ebx
   140005b16:	jbe    0x140005b22
   140005b18:	mov    ebx,0x8007007a
   140005b1d:	jmp    0x140005a99
   140005b22:	lea    rdx,[rbp+0x380]
   140005b29:	mov    DWORD PTR [rsp+0x20],esi
   140005b2d:	lea    rcx,[rsp+0x60]
   140005b32:	mov    WORD PTR [rsp+0x24],ax
   140005b37:	call   0x140005698
   140005b3c:	mov    ebx,eax
   140005b3e:	mov    DWORD PTR [rsp+0x20],eax
   140005b42:	test   eax,eax
   140005b44:	mov    eax,0x348
   140005b49:	js     0x140005a9d
   140005b4f:	lea    rdx,[rbp+0x170]
   140005b56:	mov    WORD PTR [rsp+0x24],ax
   140005b5b:	lea    rcx,[rbp+0x380]
   140005b62:	call   QWORD PTR [rip+0x6778]        # 0x14000c2e0
   140005b68:	test   eax,eax
   140005b6a:	je     0x140005b81
   140005b6c:	mov    ebx,0x1
   140005b71:	mov    eax,0x34c
   140005b76:	mov    DWORD PTR [rsp+0x20],ebx
   140005b7a:	mov    WORD PTR [rsp+0x24],ax
   140005b7f:	jmp    0x140005b85
   140005b81:	mov    ebx,DWORD PTR [rsp+0x20]
   140005b85:	lea    rcx,[rsp+0x20]
   140005b8a:	call   0x1400084f8
   140005b8f:	mov    eax,ebx
   140005b91:	mov    rcx,QWORD PTR [rbp+0x590]
   140005b98:	xor    rcx,rsp
   140005b9b:	call   0x14000ab80
   140005ba0:	lea    r11,[rsp+0x6a0]
   140005ba8:	mov    rbx,QWORD PTR [r11+0x18]
   140005bac:	mov    rsi,QWORD PTR [r11+0x20]
   140005bb0:	mov    rdi,QWORD PTR [r11+0x28]
   140005bb4:	mov    rsp,r11
   140005bb7:	pop    rbp
   140005bb8:	ret    
   140005bb9:	int3   
   140005bba:	int3   
   140005bbb:	int3   
   140005bbc:	int3   
   140005bbd:	int3   
   140005bbe:	int3   
   140005bbf:	int3   
   140005bc0:	mov    QWORD PTR [rsp+0x10],rbx
   140005bc5:	mov    QWORD PTR [rsp+0x18],rdi
   140005bca:	push   rbp
   140005bcb:	lea    rbp,[rsp-0x190]
   140005bd3:	sub    rsp,0x290
   140005bda:	mov    rax,QWORD PTR [rip+0x9427]        # 0x14000f008
   140005be1:	xor    rax,rsp
   140005be4:	mov    QWORD PTR [rbp+0x180],rax
   140005beb:	mov    rbx,rcx
   140005bee:	mov    rcx,QWORD PTR [rip+0x942b]        # 0x14000f020
   140005bf5:	lea    rax,[rip+0x9424]        # 0x14000f020
   140005bfc:	cmp    rcx,rax
   140005bff:	je     0x140005c16
   140005c01:	test   DWORD PTR [rcx+0x1c],0x20000000
   140005c08:	je     0x140005c16
   140005c0a:	mov    rcx,QWORD PTR [rcx+0x10]
   140005c0e:	mov    r9,rbx
   140005c11:	call   0x1400055c0
   140005c16:	mov    r9d,0x1
   140005c1c:	lea    rdx,[rip+0x7165]        # 0x14000cd88
   140005c23:	mov    r8d,0x37a
   140005c29:	lea    rcx,[rsp+0x30]
   140005c2e:	call   0x1400083e8
   140005c33:	xor    edi,edi
   140005c35:	lea    rcx,[rsp+0x72]
   140005c3a:	xor    edx,edx
   140005c3c:	mov    WORD PTR [rsp+0x70],di
   140005c41:	mov    r8d,0x208
   140005c47:	call   0x14000b152
   140005c4c:	test   rbx,rbx
   140005c4f:	jne    0x140005c69
   140005c51:	mov    ebx,0x80070057
   140005c56:	mov    eax,0x37f
   140005c5b:	mov    DWORD PTR [rsp+0x30],ebx
   140005c5f:	mov    WORD PTR [rsp+0x36],ax
   140005c64:	jmp    0x140005cf6
   140005c69:	mov    eax,0x380
   140005c6e:	mov    DWORD PTR [rsp+0x30],edi
   140005c72:	mov    r8d,0x105
   140005c78:	mov    WORD PTR [rsp+0x34],ax
   140005c7d:	lea    rdx,[rsp+0x70]
   140005c82:	mov    WORD PTR [rbx],di
   140005c85:	lea    rcx,[rip+0x70dc]        # 0x14000cd68
   140005c8c:	call   QWORD PTR [rip+0x6426]        # 0x14000c0b8
   140005c92:	mov    ecx,eax
   140005c94:	test   eax,eax
   140005c96:	jne    0x140005caa
   140005c98:	call   0x1400063e4
   140005c9d:	mov    ebx,eax
   140005c9f:	mov    DWORD PTR [rsp+0x30],eax
   140005ca3:	mov    eax,0x38b
   140005ca8:	jmp    0x140005c5f
   140005caa:	mov    eax,0x38b
   140005caf:	mov    WORD PTR [rsp+0x34],ax
   140005cb4:	mov    eax,0x38c
   140005cb9:	cmp    ecx,0x105
   140005cbf:	jbe    0x140005cc8
   140005cc1:	mov    ebx,0x8007007a
   140005cc6:	jmp    0x140005c5b
   140005cc8:	mov    rdx,rbx
   140005ccb:	mov    DWORD PTR [rsp+0x30],edi
   140005ccf:	lea    rcx,[rsp+0x70]
   140005cd4:	mov    WORD PTR [rsp+0x34],ax
   140005cd9:	call   0x140005698
   140005cde:	mov    ebx,eax
   140005ce0:	mov    DWORD PTR [rsp+0x30],eax
   140005ce4:	test   eax,eax
   140005ce6:	mov    eax,0x38e
   140005ceb:	js     0x140005c5f
   140005cf1:	mov    WORD PTR [rsp+0x34],ax
   140005cf6:	lea    rcx,[rsp+0x30]
   140005cfb:	call   0x1400084f8
   140005d00:	mov    eax,ebx
   140005d02:	mov    rcx,QWORD PTR [rbp+0x180]
   140005d09:	xor    rcx,rsp
   140005d0c:	call   0x14000ab80
   140005d11:	lea    r11,[rsp+0x290]
   140005d19:	mov    rbx,QWORD PTR [r11+0x18]
   140005d1d:	mov    rdi,QWORD PTR [r11+0x20]
   140005d21:	mov    rsp,r11
   140005d24:	pop    rbp
   140005d25:	ret    
   140005d26:	int3   
   140005d27:	int3   
   140005d28:	int3   
   140005d29:	int3   
   140005d2a:	int3   
   140005d2b:	int3   
   140005d2c:	rex push rbp
   140005d2e:	push   rbx
   140005d2f:	push   rsi
   140005d30:	push   rdi
   140005d31:	push   r14
   140005d33:	push   r15
   140005d35:	lea    rbp,[rsp-0x2f]
   140005d3a:	sub    rsp,0xb8
   140005d41:	mov    rax,QWORD PTR [rip+0x92c0]        # 0x14000f008
   140005d48:	xor    rax,rsp
   140005d4b:	mov    QWORD PTR [rbp+0x1f],rax
   140005d4f:	mov    r15,r9
   140005d52:	mov    r14,r8
   140005d55:	mov    rsi,rdx
   140005d58:	mov    rdi,rcx
   140005d5b:	mov    rcx,QWORD PTR [rip+0x92be]        # 0x14000f020
   140005d62:	lea    rax,[rip+0x92b7]        # 0x14000f020
   140005d69:	cmp    rcx,rax
   140005d6c:	je     0x140005d8c
   140005d6e:	test   DWORD PTR [rcx+0x1c],0x20000000
   140005d75:	je     0x140005d8c
   140005d77:	mov    rcx,QWORD PTR [rcx+0x10]
   140005d7b:	lea    r8,[rip+0x706e]        # 0x14000cdf0
   140005d82:	mov    edx,0x11
   140005d87:	call   0x140001008
   140005d8c:	mov    r9d,0x1
   140005d92:	lea    rdx,[rip+0x700f]        # 0x14000cda8
   140005d99:	mov    r8d,0xd5
   140005d9f:	lea    rcx,[rbp-0x31]
   140005da3:	call   0x1400083e8
   140005da8:	and    DWORD PTR [rbp-0x49],0x0
   140005dac:	lea    rax,[rip+0x737d]        # 0x14000d130
   140005db3:	xor    ebx,ebx
   140005db5:	mov    QWORD PTR [rbp-0x41],rax
   140005db9:	and    QWORD PTR [rbp+0x17],rbx
   140005dbd:	xorps  xmm0,xmm0
   140005dc0:	and    QWORD PTR [rbp-0x39],rbx
   140005dc4:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140005dc9:	mov    rdx,rdi
   140005dcc:	lea    rcx,[rbp-0x41]
   140005dd0:	call   0x14000a1c4
   140005dd5:	mov    edi,eax
   140005dd7:	mov    DWORD PTR [rbp-0x31],eax
   140005dda:	test   eax,eax
   140005ddc:	mov    eax,0xdb
   140005de1:	jns    0x140005dec
   140005de3:	mov    WORD PTR [rbp-0x2b],ax
   140005de7:	jmp    0x140005ebf
   140005dec:	lea    rcx,[rbp-0x41]
   140005df0:	mov    WORD PTR [rbp-0x2d],ax
   140005df4:	call   0x14000a4a4
   140005df9:	or     QWORD PTR [rsp+0x30],0xffffffffffffffff
   140005dff:	mov    r8d,0x3
   140005e05:	mov    rcx,QWORD PTR [rbp-0x41]
   140005e09:	xor    r9d,r9d
   140005e0c:	mov    DWORD PTR [rsp+0x28],0x80
   140005e14:	mov    edx,0x80000000
   140005e19:	mov    DWORD PTR [rsp+0x20],r8d
   140005e1e:	call   QWORD PTR [rip+0x62b4]        # 0x14000c0d8
   140005e24:	mov    rbx,rax
   140005e27:	inc    rax
   140005e2a:	test   rax,0xfffffffffffffffe
   140005e30:	jne    0x140005e43
   140005e32:	call   0x1400063e4
   140005e37:	mov    edi,eax
   140005e39:	mov    DWORD PTR [rbp-0x31],eax
   140005e3c:	mov    eax,0xe2
   140005e41:	jmp    0x140005de3
   140005e43:	and    QWORD PTR [rsp+0x38],0x0
   140005e49:	mov    eax,0xe2
   140005e4e:	and    DWORD PTR [rbp-0x31],0x0
   140005e52:	xor    r9d,r9d
   140005e55:	mov    WORD PTR [rbp-0x2d],ax
   140005e59:	xor    r8d,r8d
   140005e5c:	lea    rax,[rbp-0x49]
   140005e60:	mov    edx,0x53002c
   140005e65:	mov    QWORD PTR [rsp+0x30],rax
   140005e6a:	mov    rcx,rbx
   140005e6d:	lea    rax,[rbp+0x7]
   140005e71:	mov    DWORD PTR [rsp+0x28],0x18
   140005e79:	mov    QWORD PTR [rsp+0x20],rax
   140005e7e:	call   QWORD PTR [rip+0x624c]        # 0x14000c0d0
   140005e84:	test   eax,eax
   140005e86:	jne    0x140005e9c
   140005e88:	call   0x1400063e4
   140005e8d:	mov    edi,eax
   140005e8f:	mov    DWORD PTR [rbp-0x31],eax
   140005e92:	mov    eax,0xeb
   140005e97:	jmp    0x140005de3
   140005e9c:	mov    eax,0xeb
   140005ea1:	xor    edi,edi
   140005ea3:	mov    WORD PTR [rbp-0x2d],ax
   140005ea7:	mov    rax,QWORD PTR [rbp+0x7]
   140005eab:	mov    QWORD PTR [rsi],rax
   140005eae:	mov    rax,QWORD PTR [rbp+0xf]
   140005eb2:	mov    QWORD PTR [r14],rax
   140005eb5:	mov    rax,QWORD PTR [rbp+0x17]
   140005eb9:	mov    QWORD PTR [r15],rax
   140005ebc:	mov    DWORD PTR [rbp-0x31],edi
   140005ebf:	lea    rcx,[rbp-0x41]
   140005ec3:	call   0x140009ce8
   140005ec8:	lea    rcx,[rbx-0x1]
   140005ecc:	cmp    rcx,0xfffffffffffffffd
   140005ed0:	ja     0x140005edb
   140005ed2:	mov    rcx,rbx
   140005ed5:	call   QWORD PTR [rip+0x61d5]        # 0x14000c0b0
   140005edb:	lea    rcx,[rbp-0x31]
   140005edf:	call   0x1400084f8
   140005ee4:	mov    eax,edi
   140005ee6:	mov    rcx,QWORD PTR [rbp+0x1f]
   140005eea:	xor    rcx,rsp
   140005eed:	call   0x14000ab80
   140005ef2:	add    rsp,0xb8
   140005ef9:	pop    r15
   140005efb:	pop    r14
   140005efd:	pop    rdi
   140005efe:	pop    rsi
   140005eff:	pop    rbx
   140005f00:	pop    rbp
   140005f01:	ret    
   140005f02:	int3   
   140005f03:	int3   
   140005f04:	int3   
   140005f05:	int3   
   140005f06:	int3   
   140005f07:	int3   
   140005f08:	mov    QWORD PTR [rsp+0x18],rbx
   140005f0d:	push   rbp
   140005f0e:	push   rsi
   140005f0f:	push   rdi
   140005f10:	lea    rbp,[rsp-0x47]
   140005f15:	sub    rsp,0xb0
   140005f1c:	mov    rax,QWORD PTR [rip+0x90e5]        # 0x14000f008
   140005f23:	xor    rax,rsp
   140005f26:	mov    QWORD PTR [rbp+0x37],rax
   140005f2a:	mov    rsi,rdx
   140005f2d:	mov    rdi,rcx
   140005f30:	mov    rcx,QWORD PTR [rip+0x90e9]        # 0x14000f020
   140005f37:	lea    rax,[rip+0x90e2]        # 0x14000f020
   140005f3e:	cmp    rcx,rax
   140005f41:	je     0x140005f61
   140005f43:	test   DWORD PTR [rcx+0x1c],0x20000000
   140005f4a:	je     0x140005f61
   140005f4c:	mov    rcx,QWORD PTR [rcx+0x10]
   140005f50:	lea    r8,[rip+0x6e99]        # 0x14000cdf0
   140005f57:	mov    edx,0x12
   140005f5c:	call   0x140001008
   140005f61:	mov    r9d,0x1
   140005f67:	lea    rdx,[rip+0x6e4a]        # 0x14000cdb8
   140005f6e:	mov    r8d,0x106
   140005f74:	lea    rcx,[rbp-0x11]
   140005f78:	call   0x1400083e8
   140005f7d:	xor    eax,eax
   140005f7f:	mov    BYTE PTR [rsi],0x0
   140005f82:	xor    ebx,ebx
   140005f84:	mov    QWORD PTR [rbp+0x2f],rax
   140005f88:	and    QWORD PTR [rbp+0x27],rbx
   140005f8c:	lea    rax,[rip+0x719d]        # 0x14000d130
   140005f93:	and    QWORD PTR [rbp-0x19],rbx
   140005f97:	and    DWORD PTR [rbp-0x29],ebx
   140005f9a:	mov    QWORD PTR [rbp-0x21],rax
   140005f9e:	mov    rdx,rdi
   140005fa1:	lea    rcx,[rbp-0x21]
   140005fa5:	call   0x14000a1c4
   140005faa:	mov    edi,eax
   140005fac:	mov    DWORD PTR [rbp-0x11],eax
   140005faf:	test   eax,eax
   140005fb1:	mov    eax,0x10f
   140005fb6:	jns    0x140005fc1
   140005fb8:	mov    WORD PTR [rbp-0xb],ax
   140005fbc:	jmp    0x140006086
   140005fc1:	lea    rcx,[rbp-0x21]
   140005fc5:	mov    WORD PTR [rbp-0xd],ax
   140005fc9:	call   0x14000a4a4
   140005fce:	or     QWORD PTR [rsp+0x30],0xffffffffffffffff
   140005fd4:	mov    r8d,0x3
   140005fda:	mov    rcx,QWORD PTR [rbp-0x21]
   140005fde:	xor    r9d,r9d
   140005fe1:	mov    DWORD PTR [rsp+0x28],0x80
   140005fe9:	mov    edx,0x80000000
   140005fee:	mov    DWORD PTR [rsp+0x20],r8d
   140005ff3:	call   QWORD PTR [rip+0x60df]        # 0x14000c0d8
   140005ff9:	mov    rbx,rax
   140005ffc:	inc    rax
   140005fff:	test   rax,0xfffffffffffffffe
   140006005:	jne    0x140006018
   140006007:	call   0x1400063e4
   14000600c:	mov    edi,eax
   14000600e:	mov    DWORD PTR [rbp-0x11],eax
   140006011:	mov    eax,0x116
   140006016:	jmp    0x140005fb8
   140006018:	and    QWORD PTR [rsp+0x38],0x0
   14000601e:	mov    eax,0x116
   140006023:	and    DWORD PTR [rbp-0x11],0x0
   140006027:	xor    r9d,r9d
   14000602a:	mov    WORD PTR [rbp-0xd],ax
   14000602e:	xor    r8d,r8d
   140006031:	lea    rax,[rbp-0x29]
   140006035:	mov    edx,0x5301e0
   14000603a:	mov    QWORD PTR [rsp+0x30],rax
   14000603f:	mov    rcx,rbx
   140006042:	lea    rax,[rbp+0x27]
   140006046:	mov    DWORD PTR [rsp+0x28],0x10
   14000604e:	mov    QWORD PTR [rsp+0x20],rax
   140006053:	call   QWORD PTR [rip+0x6077]        # 0x14000c0d0
   140006059:	test   eax,eax
   14000605b:	jne    0x140006071
   14000605d:	call   0x1400063e4
   140006062:	mov    edi,eax
   140006064:	mov    DWORD PTR [rbp-0x11],eax
   140006067:	mov    eax,0x11f
   14000606c:	jmp    0x140005fb8
   140006071:	mov    eax,0x11f
   140006076:	xor    edi,edi
   140006078:	mov    WORD PTR [rbp-0xd],ax
   14000607c:	mov    al,BYTE PTR [rbp+0x27]
   14000607f:	and    al,0x1
   140006081:	mov    DWORD PTR [rbp-0x11],edi
   140006084:	mov    BYTE PTR [rsi],al
   140006086:	lea    rcx,[rbp-0x21]
   14000608a:	call   0x140009ce8
   14000608f:	lea    rcx,[rbx-0x1]
   140006093:	cmp    rcx,0xfffffffffffffffd
   140006097:	ja     0x1400060a2
   140006099:	mov    rcx,rbx
   14000609c:	call   QWORD PTR [rip+0x600e]        # 0x14000c0b0
   1400060a2:	lea    rcx,[rbp-0x11]
   1400060a6:	call   0x1400084f8
   1400060ab:	mov    eax,edi
   1400060ad:	mov    rcx,QWORD PTR [rbp+0x37]
   1400060b1:	xor    rcx,rsp
   1400060b4:	call   0x14000ab80
   1400060b9:	mov    rbx,QWORD PTR [rsp+0xe0]
   1400060c1:	add    rsp,0xb0
   1400060c8:	pop    rdi
   1400060c9:	pop    rsi
   1400060ca:	pop    rbp
   1400060cb:	ret    
   1400060cc:	int3   
   1400060cd:	int3   
   1400060ce:	int3   
   1400060cf:	int3   
   1400060d0:	int3   
   1400060d1:	int3   
   1400060d2:	int3   
   1400060d3:	int3   
   1400060d4:	mov    QWORD PTR [rsp+0x18],rbx
   1400060d9:	push   rbp
   1400060da:	push   rdi
   1400060db:	push   r14
   1400060dd:	mov    rbp,rsp
   1400060e0:	sub    rsp,0x70
   1400060e4:	mov    rdi,rcx
   1400060e7:	mov    rcx,QWORD PTR [rip+0x8f32]        # 0x14000f020
   1400060ee:	lea    r14,[rip+0x8f2b]        # 0x14000f020
   1400060f5:	cmp    rcx,r14
   1400060f8:	je     0x140006118
   1400060fa:	test   DWORD PTR [rcx+0x1c],0x20000000
   140006101:	je     0x140006118
   140006103:	mov    rcx,QWORD PTR [rcx+0x10]
   140006107:	lea    r8,[rip+0x6ce2]        # 0x14000cdf0
   14000610e:	mov    edx,0x13
   140006113:	call   0x140001008
   140006118:	mov    ebx,0x1
   14000611d:	lea    rdx,[rip+0x6cac]        # 0x14000cdd0
   140006124:	mov    r9d,ebx
   140006127:	lea    rcx,[rbp-0x40]
   14000612b:	mov    r8d,0x136
   140006131:	call   0x1400083e8
   140006136:	and    QWORD PTR [rbp+0x28],0x0
   14000613b:	lea    rax,[rbp+0x28]
   14000613f:	and    DWORD PTR [rbp+0x20],0x0
   140006143:	lea    rdx,[rip+0x62e6]        # 0x14000c430
   14000614a:	mov    r9d,0x2001f
   140006150:	mov    QWORD PTR [rsp+0x20],rax
   140006155:	xor    r8d,r8d
   140006158:	mov    BYTE PTR [rdi],bl
   14000615a:	mov    rcx,0xffffffff80000002
   140006161:	call   QWORD PTR [rip+0x5ea1]        # 0x14000c008
   140006167:	test   eax,eax
   140006169:	jne    0x140006201
   14000616f:	mov    rcx,QWORD PTR [rbp+0x28]
   140006173:	lea    r8,[rbp+0x20]
   140006177:	mov    r9d,ebx
   14000617a:	lea    rdx,[rip+0x639f]        # 0x14000c520
   140006181:	call   0x140004e70
   140006186:	test   eax,eax
   140006188:	js     0x1400061c7
   14000618a:	cmp    eax,ebx
   14000618c:	je     0x1400061c7
   14000618e:	mov    rcx,QWORD PTR [rip+0x8e8b]        # 0x14000f020
   140006195:	mov    ebx,DWORD PTR [rbp+0x20]
   140006198:	cmp    rcx,r14
   14000619b:	je     0x1400061be
   14000619d:	test   DWORD PTR [rcx+0x1c],0x8000000
   1400061a4:	je     0x1400061be
   1400061a6:	mov    rcx,QWORD PTR [rcx+0x10]
   1400061aa:	lea    r8,[rip+0x6c3f]        # 0x14000cdf0
   1400061b1:	mov    edx,0x15
   1400061b6:	mov    r9d,ebx
   1400061b9:	call   0x14000102c
   1400061be:	test   ebx,ebx
   1400061c0:	setne  al
   1400061c3:	mov    BYTE PTR [rdi],al
   1400061c5:	jmp    0x140006201
   1400061c7:	mov    rcx,QWORD PTR [rip+0x8e52]        # 0x14000f020
   1400061ce:	cmp    rcx,r14
   1400061d1:	je     0x1400061f4
   1400061d3:	test   DWORD PTR [rcx+0x1c],0x8000000
   1400061da:	je     0x1400061f4
   1400061dc:	mov    rcx,QWORD PTR [rcx+0x10]
   1400061e0:	lea    r8,[rip+0x6c09]        # 0x14000cdf0
   1400061e7:	mov    edx,0x14
   1400061ec:	mov    r9d,eax
   1400061ef:	call   0x14000102c
   1400061f4:	and    DWORD PTR [rbp-0x40],0x0
   1400061f8:	mov    eax,0x146
   1400061fd:	mov    WORD PTR [rbp-0x3c],ax
   140006201:	mov    rcx,QWORD PTR [rbp+0x28]
   140006205:	lea    rax,[rcx-0x1]
   140006209:	cmp    rax,0xfffffffffffffffd
   14000620d:	ja     0x14000621b
   14000620f:	call   QWORD PTR [rip+0x5dfb]        # 0x14000c010
   140006215:	xor    ecx,ecx
   140006217:	mov    QWORD PTR [rbp+0x28],rcx
   14000621b:	mov    ebx,DWORD PTR [rbp-0x40]
   14000621e:	lea    rdx,[rcx-0x1]
   140006222:	cmp    rdx,0xfffffffffffffffd
   140006226:	ja     0x140006233
   140006228:	call   QWORD PTR [rip+0x5de2]        # 0x14000c010
   14000622e:	and    QWORD PTR [rbp+0x28],0x0
   140006233:	lea    rcx,[rbp-0x40]
   140006237:	call   0x1400084f8
   14000623c:	mov    eax,ebx
   14000623e:	mov    rbx,QWORD PTR [rsp+0xa0]
   140006246:	add    rsp,0x70
   14000624a:	pop    r14
   14000624c:	pop    rdi
   14000624d:	pop    rbp
   14000624e:	ret    
   14000624f:	int3   
   140006250:	int3   
   140006251:	int3   
   140006252:	int3   
   140006253:	int3   
   140006254:	int3   
   140006255:	int3   
   140006256:	int3   
   140006257:	int3   
   140006258:	mov    r11,rsp
   14000625b:	mov    DWORD PTR [r11+0x20],r9d
   14000625f:	sub    rsp,0x68
   140006263:	and    QWORD PTR [r11-0x18],0x0
   140006268:	lea    rax,[r11+0x30]
   14000626c:	mov    r8d,0x22
   140006272:	movzx  r9d,r8w
   140006276:	lea    edx,[r8-0x1e]
   14000627a:	mov    QWORD PTR [r11-0x20],rdx
   14000627e:	lea    r8,[rip+0x6b7b]        # 0x14000ce00
   140006285:	mov    QWORD PTR [r11-0x28],rax
   140006289:	lea    rax,[r11+0x28]
   14000628d:	mov    QWORD PTR [r11-0x30],rdx
   140006291:	mov    QWORD PTR [r11-0x38],rax
   140006295:	lea    rax,[r11+0x20]
   140006299:	mov    QWORD PTR [r11-0x40],rdx
   14000629d:	mov    edx,0x2b
   1400062a2:	mov    QWORD PTR [r11-0x48],rax
   1400062a6:	call   QWORD PTR [rip+0x606c]        # 0x14000c318
   1400062ac:	add    rsp,0x68
   1400062b0:	ret    
   1400062b1:	int3   
   1400062b2:	int3   
   1400062b3:	int3   
   1400062b4:	int3   
   1400062b5:	int3   
   1400062b6:	int3   
   1400062b7:	int3   
   1400062b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400062bd:	push   rdi
   1400062be:	sub    rsp,0x30
   1400062c2:	xor    ebx,ebx
   1400062c4:	mov    edi,ecx
   1400062c6:	test   ecx,ecx
   1400062c8:	jns    0x14000632e
   1400062ca:	call   QWORD PTR [rip+0x6050]        # 0x14000c320
   1400062d0:	mov    ecx,eax
   1400062d2:	mov    eax,0x13d
   1400062d7:	test   ecx,ecx
   1400062d9:	cmove  ecx,eax
   1400062dc:	cmp    ecx,eax
   1400062de:	je     0x1400062f0
   1400062e0:	movzx  ebx,cx
   1400062e3:	or     ebx,0x80070000
   1400062e9:	test   ecx,ecx
   1400062eb:	cmovle ebx,ecx
   1400062ee:	jmp    0x1400062f6
   1400062f0:	mov    ebx,edi
   1400062f2:	bts    ebx,0x1c
   1400062f6:	mov    rcx,QWORD PTR [rip+0x8d23]        # 0x14000f020
   1400062fd:	lea    rax,[rip+0x8d1c]        # 0x14000f020
   140006304:	cmp    rcx,rax
   140006307:	je     0x14000632e
   140006309:	test   DWORD PTR [rcx+0x1c],0x1000000
   140006310:	je     0x14000632e
   140006312:	mov    rcx,QWORD PTR [rcx+0x10]
   140006316:	lea    r8,[rip+0x6ae3]        # 0x14000ce00
   14000631d:	mov    edx,0xf
   140006322:	mov    DWORD PTR [rsp+0x20],ebx
   140006326:	mov    r9d,edi
   140006329:	call   0x140001068
   14000632e:	mov    eax,ebx
   140006330:	mov    rbx,QWORD PTR [rsp+0x40]
   140006335:	add    rsp,0x30
   140006339:	pop    rdi
   14000633a:	ret    
   14000633b:	int3   
   14000633c:	int3   
   14000633d:	int3   
   14000633e:	int3   
   14000633f:	int3   
   140006340:	int3   
   140006341:	int3   
   140006342:	int3   
   140006343:	int3   
   140006344:	mov    rax,rsp
   140006347:	mov    QWORD PTR [rax+0x8],rbx
   14000634b:	mov    QWORD PTR [rax+0x10],rbp
   14000634f:	mov    QWORD PTR [rax+0x18],rsi
   140006353:	mov    QWORD PTR [rax+0x20],rdi
   140006357:	push   r14
   140006359:	sub    rsp,0x20
   14000635d:	xor    ebx,ebx
   14000635f:	mov    rsi,rdx
   140006362:	mov    rbp,rcx
   140006365:	mov    edi,ebx
   140006367:	test   rdx,rdx
   14000636a:	je     0x1400063b4
   14000636c:	mov    QWORD PTR [rdx],rbx
   14000636f:	test   rcx,rcx
   140006372:	je     0x1400063af
   140006374:	or     rax,0xffffffffffffffff
   140006378:	inc    rax
   14000637b:	cmp    WORD PTR [rcx+rax*2],bx
   14000637f:	jne    0x140006378
   140006381:	lea    r14,[rax*2+0x2]
   140006389:	mov    rcx,r14
   14000638c:	call   QWORD PTR [rip+0x5fce]        # 0x14000c360
   140006392:	mov    rdi,rax
   140006395:	test   rax,rax
   140006398:	jne    0x1400063a1
   14000639a:	mov    ebx,0x8007000e
   14000639f:	jmp    0x1400063b9
   1400063a1:	mov    r8,r14
   1400063a4:	mov    rdx,rbp
   1400063a7:	mov    rcx,rax
   1400063aa:	call   0x14000b146
   1400063af:	mov    QWORD PTR [rsi],rdi
   1400063b2:	jmp    0x1400063b9
   1400063b4:	mov    ebx,0x80070057
   1400063b9:	xor    ecx,ecx
   1400063bb:	call   QWORD PTR [rip+0x5f8f]        # 0x14000c350
   1400063c1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400063c6:	mov    eax,ebx
   1400063c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400063cd:	mov    rsi,QWORD PTR [rsp+0x40]
   1400063d2:	mov    rdi,QWORD PTR [rsp+0x48]
   1400063d7:	add    rsp,0x20
   1400063db:	pop    r14
   1400063dd:	ret    
   1400063de:	int3   
   1400063df:	int3   
   1400063e0:	int3   
   1400063e1:	int3   
   1400063e2:	int3   
   1400063e3:	int3   
   1400063e4:	mov    QWORD PTR [rsp+0x8],rbx
   1400063e9:	mov    QWORD PTR [rsp+0x10],rsi
   1400063ee:	push   rdi
   1400063ef:	sub    rsp,0x30
   1400063f3:	call   QWORD PTR [rip+0x5d37]        # 0x14000c130
   1400063f9:	mov    edi,eax
   1400063fb:	call   QWORD PTR [rip+0x5f2f]        # 0x14000c330
   140006401:	movzx  ebx,di
   140006404:	mov    esi,eax
   140006406:	or     ebx,0x80070000
   14000640c:	test   edi,edi
   14000640e:	cmovle ebx,edi
   140006411:	test   ebx,ebx
   140006413:	js     0x140006428
   140006415:	mov    ecx,eax
   140006417:	call   0x1400062b8
   14000641c:	mov    ebx,eax
   14000641e:	mov    eax,0xc0003005
   140006423:	test   ebx,ebx
   140006425:	cmovns ebx,eax
   140006428:	mov    rcx,QWORD PTR [rip+0x8bf1]        # 0x14000f020
   14000642f:	lea    rax,[rip+0x8bea]        # 0x14000f020
   140006436:	cmp    rcx,rax
   140006439:	je     0x140006458
   14000643b:	test   DWORD PTR [rcx+0x1c],0x1000000
   140006442:	je     0x140006458
   140006444:	mov    rcx,QWORD PTR [rcx+0x10]
   140006448:	mov    r9d,edi
   14000644b:	mov    DWORD PTR [rsp+0x28],ebx
   14000644f:	mov    DWORD PTR [rsp+0x20],esi
   140006453:	call   0x140006258
   140006458:	mov    rsi,QWORD PTR [rsp+0x48]
   14000645d:	mov    eax,ebx
   14000645f:	mov    rbx,QWORD PTR [rsp+0x40]
   140006464:	add    rsp,0x30
   140006468:	pop    rdi
   140006469:	ret    
   14000646a:	int3   
   14000646b:	int3   
   14000646c:	int3   
   14000646d:	int3   
   14000646e:	int3   
   14000646f:	int3   
   140006470:	mov    QWORD PTR [rsp+0x8],rbx
   140006475:	push   rbp
   140006476:	push   rsi
   140006477:	push   rdi
   140006478:	push   r12
   14000647a:	push   r13
   14000647c:	push   r14
   14000647e:	push   r15
   140006480:	lea    rbp,[rsp-0x80]
   140006485:	sub    rsp,0x180
   14000648c:	mov    rax,QWORD PTR [rip+0x8b75]        # 0x14000f008
   140006493:	xor    rax,rsp
   140006496:	mov    QWORD PTR [rbp+0x70],rax
   14000649a:	mov    r15,r8
   14000649d:	mov    QWORD PTR [rbp-0x68],r8
   1400064a1:	mov    r14,rdx
   1400064a4:	mov    rcx,QWORD PTR [rip+0x8b75]        # 0x14000f020
   1400064ab:	lea    rax,[rip+0x8b6e]        # 0x14000f020
   1400064b2:	cmp    rcx,rax
   1400064b5:	je     0x1400064d5
   1400064b7:	test   DWORD PTR [rcx+0x1c],0x20000000
   1400064be:	je     0x1400064d5
   1400064c0:	mov    rcx,QWORD PTR [rcx+0x10]
   1400064c4:	lea    r8,[rip+0x699d]        # 0x14000ce68
   1400064cb:	mov    edx,0xa
   1400064d0:	call   0x140001008
   1400064d5:	mov    r9d,0x1
   1400064db:	lea    rdx,[rip+0x692e]        # 0x14000ce10
   1400064e2:	lea    rcx,[rsp+0x28]
   1400064e7:	lea    r8d,[r9+0x31]
   1400064eb:	call   0x1400083e8
   1400064f0:	xor    r13d,r13d
   1400064f3:	lea    rcx,[rbp-0x5c]
   1400064f7:	xor    edx,edx
   1400064f9:	mov    DWORD PTR [rbp-0x60],r13d
   1400064fd:	lea    r8d,[r13+0x2c]
   140006501:	call   0x14000b152
   140006506:	xor    edx,edx
   140006508:	mov    DWORD PTR [rbp-0x30],r13d
   14000650c:	mov    r8d,0x94
   140006512:	lea    rcx,[rbp-0x2c]
   140006516:	call   0x14000b152
   14000651b:	mov    QWORD PTR [rsp+0x78],r13
   140006520:	xorps  xmm0,xmm0
   140006523:	mov    QWORD PTR [rbp-0x80],r13
   140006527:	mov    ebx,r13d
   14000652a:	mov    QWORD PTR [rsp+0x68],rbx
   14000652f:	mov    esi,r13d
   140006532:	mov    QWORD PTR [rsp+0x60],r13
   140006537:	movdqu XMMWORD PTR [rbp-0x78],xmm0
   14000653c:	test   r15,r15
   14000653f:	je     0x14000654d
   140006541:	mov    rdi,r15
   140006544:	xor    eax,eax
   140006546:	mov    ecx,0x98
   14000654b:	rep stos BYTE PTR es:[rdi],al
   14000654d:	mov    eax,0x43
   140006552:	test   r14,r14
   140006555:	jne    0x140006569
   140006557:	mov    DWORD PTR [rsp+0x28],0x80070057
   14000655f:	mov    WORD PTR [rsp+0x2e],ax
   140006564:	jmp    0x140006a99
   140006569:	mov    WORD PTR [rsp+0x2c],ax
   14000656e:	mov    eax,0x44
   140006573:	test   r15,r15
   140006576:	je     0x140006557
   140006578:	mov    DWORD PTR [rsp+0x28],r13d
   14000657d:	mov    WORD PTR [rsp+0x2c],ax
   140006582:	lea    r12d,[rax-0x2c]
   140006586:	mov    QWORD PTR [rsp+0x78],r13
   14000658b:	mov    ecx,r12d
   14000658e:	call   0x14000a800
   140006593:	mov    rdi,rax
   140006596:	test   rax,rax
   140006599:	je     0x1400065ab
   14000659b:	mov    DWORD PTR [rax],0x1
   1400065a1:	mov    QWORD PTR [rax+0x8],r13
   1400065a5:	mov    QWORD PTR [rax+0x10],r13
   1400065a9:	jmp    0x1400065ae
   1400065ab:	mov    rdi,r13
   1400065ae:	mov    eax,0x46
   1400065b3:	test   rdi,rdi
   1400065b6:	jne    0x1400065c2
   1400065b8:	mov    DWORD PTR [rsp+0x28],0x8007000e
   1400065c0:	jmp    0x14000655f
   1400065c2:	mov    QWORD PTR [rsp+0x78],rdi
   1400065c7:	mov    DWORD PTR [rsp+0x28],r13d
   1400065cc:	mov    WORD PTR [rsp+0x2c],ax
   1400065d1:	mov    rcx,r12
   1400065d4:	mov    QWORD PTR [rsp+0x68],rbx
   1400065d9:	call   0x14000a800
   1400065de:	mov    r15,rax
   1400065e1:	test   rax,rax
   1400065e4:	je     0x1400065f6
   1400065e6:	mov    DWORD PTR [rax],0x1
   1400065ec:	mov    QWORD PTR [rax+0x8],r13
   1400065f0:	mov    QWORD PTR [rax+0x10],r13
   1400065f4:	jmp    0x1400065f9
   1400065f6:	mov    r15,r13
   1400065f9:	mov    eax,0x47
   1400065fe:	test   r15,r15
   140006601:	je     0x1400065b8
   140006603:	mov    rbx,r15
   140006606:	mov    QWORD PTR [rsp+0x68],rbx
   14000660b:	mov    DWORD PTR [rsp+0x28],r13d
   140006610:	mov    WORD PTR [rsp+0x2c],ax
   140006615:	mov    rcx,r12
   140006618:	mov    QWORD PTR [rbp-0x80],r13
   14000661c:	call   0x14000a800
   140006621:	mov    r12,rax
   140006624:	test   rax,rax
   140006627:	je     0x140006639
   140006629:	mov    DWORD PTR [rax],0x1
   14000662f:	mov    QWORD PTR [rax+0x8],r13
   140006633:	mov    QWORD PTR [rax+0x10],r13
   140006637:	jmp    0x14000663c
   140006639:	mov    r12,r13
   14000663c:	mov    eax,0x48
   140006641:	test   r12,r12
   140006644:	je     0x1400065b8
   14000664a:	mov    rsi,r12
   14000664d:	mov    QWORD PTR [rbp-0x80],r12
   140006651:	movups xmm0,XMMWORD PTR [r14]
   140006655:	mov    rcx,QWORD PTR [r14+0x20]
   140006659:	lea    rdx,[rbp-0x8]
   14000665d:	mov    WORD PTR [rsp+0x2c],ax
   140006662:	mov    rax,QWORD PTR [r14+0x10]
   140006666:	mov    QWORD PTR [rbp-0x20],rax
   14000666a:	mov    eax,DWORD PTR [r14+0x18]
   14000666e:	mov    DWORD PTR [rbp-0x18],eax
   140006671:	mov    eax,DWORD PTR [r14+0x1c]
   140006675:	mov    DWORD PTR [rbp-0x10],eax
   140006678:	mov    DWORD PTR [rsp+0x28],r13d
   14000667d:	movdqu XMMWORD PTR [rbp-0x30],xmm0
   140006682:	mov    DWORD PTR [rbp-0x14],0x1
   140006689:	call   0x140006344
   14000668e:	mov    DWORD PTR [rsp+0x28],eax
   140006692:	test   eax,eax
   140006694:	mov    eax,0x4f
   140006699:	js     0x14000655f
   14000669f:	movups xmm0,XMMWORD PTR [r14+0x28]
   1400066a4:	mov    rcx,QWORD PTR [r14+0x38]
   1400066a8:	lea    rdx,[rbp+0x10]
   1400066ac:	mov    WORD PTR [rsp+0x2c],ax
   1400066b1:	movdqu XMMWORD PTR [rbp+0x0],xmm0
   1400066b6:	call   0x140006344
   1400066bb:	mov    DWORD PTR [rsp+0x28],eax
   1400066bf:	test   eax,eax
   1400066c1:	mov    eax,0x51
   1400066c6:	js     0x14000655f
   1400066cc:	mov    rcx,QWORD PTR [r14+0x40]
   1400066d0:	lea    rdx,[rbp+0x18]
   1400066d4:	mov    WORD PTR [rsp+0x2c],ax
   1400066d9:	call   0x140006344
   1400066de:	mov    DWORD PTR [rsp+0x28],eax
   1400066e2:	test   eax,eax
   1400066e4:	mov    eax,0x52
   1400066e9:	js     0x14000655f
   1400066ef:	mov    rcx,QWORD PTR [r14+0x48]
   1400066f3:	lea    rdx,[rbp+0x20]
   1400066f7:	mov    WORD PTR [rsp+0x2c],ax
   1400066fc:	call   0x140006344
   140006701:	mov    DWORD PTR [rsp+0x28],eax
   140006705:	test   eax,eax
   140006707:	mov    eax,0x53
   14000670c:	js     0x14000655f
   140006712:	mov    WORD PTR [rsp+0x2c],ax
   140006717:	mov    eax,r13d
   14000671a:	mov    DWORD PTR [rsp+0x20],eax
   14000671e:	cmp    DWORD PTR [r14+0x50],r13d
   140006722:	jbe    0x140006835
   140006728:	imul   r13,rax,0x38
   14000672c:	lea    rdx,[rbp-0x50]
   140006730:	add    r13,QWORD PTR [r14+0x58]
   140006734:	movups xmm0,XMMWORD PTR [r13+0x0]
   140006739:	mov    rcx,QWORD PTR [r13+0x10]
   14000673d:	movdqu XMMWORD PTR [rbp-0x60],xmm0
   140006742:	call   0x140006344
   140006747:	mov    DWORD PTR [rsp+0x28],eax
   14000674b:	test   eax,eax
   14000674d:	mov    eax,0x5a
   140006752:	js     0x140006908
   140006758:	mov    WORD PTR [rsp+0x2c],ax
   14000675d:	lea    rdx,[rbp-0x48]
   140006761:	mov    rcx,QWORD PTR [r13+0x18]
   140006765:	call   0x140006344
   14000676a:	mov    DWORD PTR [rsp+0x28],eax
   14000676e:	test   eax,eax
   140006770:	mov    eax,0x5b
   140006775:	js     0x140006908
   14000677b:	mov    WORD PTR [rsp+0x2c],ax
   140006780:	xor    eax,eax
   140006782:	mov    DWORD PTR [rsp+0x70],eax
   140006786:	cmp    DWORD PTR [r13+0x20],eax
   14000678a:	jbe    0x1400067e7
   14000678c:	mov    rcx,QWORD PTR [r13+0x28]
   140006790:	lea    rdx,[rsp+0x60]
   140006795:	mov    rcx,QWORD PTR [rcx+rax*8]
   140006799:	call   0x140006344
   14000679e:	mov    DWORD PTR [rsp+0x28],eax
   1400067a2:	test   eax,eax
   1400067a4:	mov    eax,0x5f
   1400067a9:	js     0x140006908
   1400067af:	mov    WORD PTR [rsp+0x2c],ax
   1400067b4:	lea    rdx,[rsp+0x60]
   1400067b9:	mov    rcx,rdi
   1400067bc:	call   0x14000708c
   1400067c1:	mov    DWORD PTR [rsp+0x28],eax
   1400067c5:	test   eax,eax
   1400067c7:	mov    eax,0x60
   1400067cc:	js     0x140006908
   1400067d2:	mov    WORD PTR [rsp+0x2c],ax
   1400067d7:	mov    eax,DWORD PTR [rsp+0x70]
   1400067db:	inc    eax
   1400067dd:	mov    DWORD PTR [rsp+0x70],eax
   1400067e1:	cmp    eax,DWORD PTR [r13+0x20]
   1400067e5:	jb     0x14000678c
   1400067e7:	mov    rcx,QWORD PTR [rdi+0x8]
   1400067eb:	xor    r13d,r13d
   1400067ee:	mov    eax,DWORD PTR [rdi+0x10]
   1400067f1:	mov    QWORD PTR [rdi+0x8],r13
   1400067f5:	mov    QWORD PTR [rdi+0x10],r13
   1400067f9:	mov    QWORD PTR [rbp-0x38],rcx
   1400067fd:	mov    DWORD PTR [rbp-0x40],eax
   140006800:	lea    rdx,[rbp-0x60]
   140006804:	mov    rcx,r15
   140006807:	call   0x140007180
   14000680c:	mov    DWORD PTR [rsp+0x28],eax
   140006810:	test   eax,eax
   140006812:	lea    eax,[r13+0x64]
   140006816:	js     0x14000655f
   14000681c:	mov    WORD PTR [rsp+0x2c],ax
   140006821:	mov    eax,DWORD PTR [rsp+0x20]
   140006825:	inc    eax
   140006827:	mov    DWORD PTR [rsp+0x20],eax
   14000682b:	cmp    eax,DWORD PTR [r14+0x50]
   14000682f:	jb     0x140006728
   140006835:	mov    rcx,QWORD PTR [r15+0x8]
   140006839:	mov    eax,DWORD PTR [r15+0x10]
   14000683d:	mov    QWORD PTR [r15+0x8],r13
   140006841:	mov    QWORD PTR [r15+0x10],0x0
   140006849:	mov    r15d,r13d
   14000684c:	mov    QWORD PTR [rbp+0x30],rcx
   140006850:	mov    DWORD PTR [rbp+0x28],eax
   140006853:	cmp    DWORD PTR [r14+0x70],r13d
   140006857:	jbe    0x1400068b0
   140006859:	mov    rcx,QWORD PTR [r14+0x78]
   14000685d:	lea    rdx,[rsp+0x60]
   140006862:	mov    eax,r15d
   140006865:	mov    rcx,QWORD PTR [rcx+rax*8]
   140006869:	call   0x140006344
   14000686e:	mov    DWORD PTR [rsp+0x28],eax
   140006872:	test   eax,eax
   140006874:	mov    eax,0x6b
   140006879:	js     0x14000655f
   14000687f:	mov    WORD PTR [rsp+0x2c],ax
   140006884:	lea    rdx,[rsp+0x60]
   140006889:	mov    rcx,rdi
   14000688c:	call   0x14000708c
   140006891:	mov    DWORD PTR [rsp+0x28],eax
   140006895:	test   eax,eax
   140006897:	mov    eax,0x6c
   14000689c:	js     0x14000655f
   1400068a2:	inc    r15d
   1400068a5:	mov    WORD PTR [rsp+0x2c],ax
   1400068aa:	cmp    r15d,DWORD PTR [r14+0x70]
   1400068ae:	jb     0x140006859
   1400068b0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400068b4:	mov    eax,DWORD PTR [rdi+0x10]
   1400068b7:	mov    QWORD PTR [rdi+0x8],r13
   1400068bb:	mov    QWORD PTR [rdi+0x10],0x0
   1400068c3:	mov    QWORD PTR [rbp+0x40],rcx
   1400068c7:	mov    ecx,r13d
   1400068ca:	mov    DWORD PTR [rbp+0x38],eax
   1400068cd:	cmp    DWORD PTR [r14+0x60],r13d
   1400068d1:	jbe    0x140006984
   1400068d7:	mov    rdx,QWORD PTR [rip+0x65a2]        # 0x14000ce80
   1400068de:	mov    r8,QWORD PTR [rip+0x6593]        # 0x14000ce78
   1400068e5:	mov    eax,ecx
   1400068e7:	lea    r15,[rax+rax*2]
   1400068eb:	shl    r15,0x4
   1400068ef:	add    r15,QWORD PTR [r14+0x68]
   1400068f3:	cmp    QWORD PTR [r15],r8
   1400068f6:	jne    0x1400068fe
   1400068f8:	cmp    QWORD PTR [r15+0x8],rdx
   1400068fc:	je     0x140006915
   1400068fe:	inc    ecx
   140006900:	cmp    ecx,DWORD PTR [r14+0x60]
   140006904:	jae    0x140006984
   140006906:	jmp    0x1400068e5
   140006908:	mov    WORD PTR [rsp+0x2e],ax
   14000690d:	xor    r13d,r13d
   140006910:	jmp    0x140006a99
   140006915:	cmp    DWORD PTR [r15+0x18],0x0
   14000691a:	jbe    0x14000696b
   14000691c:	mov    rcx,QWORD PTR [r15+0x20]
   140006920:	lea    rdx,[rsp+0x60]
   140006925:	mov    eax,r13d
   140006928:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000692c:	call   0x140006344
   140006931:	mov    DWORD PTR [rsp+0x28],eax
   140006935:	test   eax,eax
   140006937:	mov    eax,0x7a
   14000693c:	js     0x140006908
   14000693e:	mov    WORD PTR [rsp+0x2c],ax
   140006943:	lea    rdx,[rsp+0x60]
   140006948:	mov    rcx,rdi
   14000694b:	call   0x14000708c
   140006950:	mov    DWORD PTR [rsp+0x28],eax
   140006954:	test   eax,eax
   140006956:	mov    eax,0x7b
   14000695b:	js     0x140006908
   14000695d:	inc    r13d
   140006960:	mov    WORD PTR [rsp+0x2c],ax
   140006965:	cmp    r13d,DWORD PTR [r15+0x18]
   140006969:	jb     0x14000691c
   14000696b:	mov    rax,QWORD PTR [rdi+0x8]
   14000696f:	xor    r13d,r13d
   140006972:	mov    ecx,DWORD PTR [rdi+0x10]
   140006975:	mov    QWORD PTR [rdi+0x8],r13
   140006979:	mov    QWORD PTR [rdi+0x10],r13
   14000697d:	mov    QWORD PTR [rbp+0x50],rax
   140006981:	mov    DWORD PTR [rbp+0x48],ecx
   140006984:	mov    edi,r13d
   140006987:	cmp    DWORD PTR [r14+0x80],r13d
   14000698e:	jbe    0x140006a0b
   140006990:	mov    rcx,QWORD PTR [r14+0x88]
   140006997:	lea    rdx,[rbp-0x78]
   14000699b:	mov    r15d,edi
   14000699e:	add    r15,r15
   1400069a1:	mov    rcx,QWORD PTR [rcx+r15*8]
   1400069a5:	call   0x140006344
   1400069aa:	mov    DWORD PTR [rsp+0x28],eax
   1400069ae:	test   eax,eax
   1400069b0:	mov    eax,0x85
   1400069b5:	js     0x14000655f
   1400069bb:	mov    rcx,QWORD PTR [r14+0x88]
   1400069c2:	lea    rdx,[rbp-0x70]
   1400069c6:	mov    WORD PTR [rsp+0x2c],ax
   1400069cb:	mov    rcx,QWORD PTR [rcx+r15*8+0x8]
   1400069d0:	call   0x140006344
   1400069d5:	mov    DWORD PTR [rsp+0x28],eax
   1400069d9:	test   eax,eax
   1400069db:	mov    eax,0x86
   1400069e0:	js     0x14000655f
   1400069e6:	lea    rdx,[rbp-0x78]
   1400069ea:	mov    WORD PTR [rsp+0x2c],ax
   1400069ef:	mov    rcx,r12
   1400069f2:	call   0x140007298
   1400069f7:	lea    rcx,[rbp-0x78]
   1400069fb:	call   0x14000547c
   140006a00:	inc    edi
   140006a02:	cmp    edi,DWORD PTR [r14+0x80]
   140006a09:	jb     0x140006990
   140006a0b:	mov    rcx,QWORD PTR [r12+0x8]
   140006a10:	mov    edx,0x80
   140006a15:	mov    eax,DWORD PTR [r12+0x10]
   140006a1a:	mov    r8d,0x98
   140006a20:	mov    QWORD PTR [rbp+0x60],rcx
   140006a24:	mov    rcx,QWORD PTR [rbp-0x68]
   140006a28:	mov    DWORD PTR [rbp+0x58],eax
   140006a2b:	lea    rax,[rbp-0x30]
   140006a2f:	movups xmm0,XMMWORD PTR [rax]
   140006a32:	mov    QWORD PTR [r12+0x8],r13
   140006a37:	movups xmm1,XMMWORD PTR [rax+0x10]
   140006a3b:	mov    QWORD PTR [r12+0x10],0x0
   140006a44:	movups XMMWORD PTR [rcx],xmm0
   140006a47:	movups xmm0,XMMWORD PTR [rax+0x20]
   140006a4b:	movups XMMWORD PTR [rcx+0x10],xmm1
   140006a4f:	movups xmm1,XMMWORD PTR [rax+0x30]
   140006a53:	movups XMMWORD PTR [rcx+0x20],xmm0
   140006a57:	movups xmm0,XMMWORD PTR [rax+0x40]
   140006a5b:	movups XMMWORD PTR [rcx+0x30],xmm1
   140006a5f:	movups xmm1,XMMWORD PTR [rax+0x50]
   140006a63:	movups XMMWORD PTR [rcx+0x40],xmm0
   140006a67:	movups xmm0,XMMWORD PTR [rax+0x60]
   140006a6b:	movups XMMWORD PTR [rcx+0x50],xmm1
   140006a6f:	movups xmm1,XMMWORD PTR [rax+rdx*1]
   140006a73:	movups XMMWORD PTR [rcx+0x60],xmm0
   140006a77:	movups xmm0,XMMWORD PTR [rax+0x70]
   140006a7b:	mov    rax,QWORD PTR [rax+rdx*1+0x10]
   140006a80:	movups XMMWORD PTR [rcx+rdx*1-0x10],xmm0
   140006a85:	movups XMMWORD PTR [rcx+rdx*1],xmm1
   140006a89:	mov    QWORD PTR [rcx+rdx*1+0x10],rax
   140006a8e:	xor    edx,edx
   140006a90:	lea    rcx,[rbp-0x30]
   140006a94:	call   0x14000b152
   140006a99:	lea    rcx,[rbp-0x30]
   140006a9d:	call   0x1400054b4
   140006aa2:	lea    rcx,[rbp-0x60]
   140006aa6:	call   0x140005438
   140006aab:	lea    rcx,[rbp-0x78]
   140006aaf:	call   0x14000547c
   140006ab4:	mov    rcx,QWORD PTR [rsp+0x60]
   140006ab9:	call   QWORD PTR [rip+0x5891]        # 0x14000c350
   140006abf:	mov    r14d,DWORD PTR [rsp+0x28]
   140006ac4:	or     r15d,0xffffffff
   140006ac8:	test   rsi,rsi
   140006acb:	je     0x140006b1f
   140006acd:	mov    eax,r15d
   140006ad0:	lock xadd DWORD PTR [rsi],eax
   140006ad4:	add    eax,r15d
   140006ad7:	jne    0x140006b1a
   140006ad9:	mov    rdi,QWORD PTR [rbp-0x80]
   140006add:	mov    ebx,r13d
   140006ae0:	cmp    DWORD PTR [rdi+0x10],r13d
   140006ae4:	jbe    0x140006afc
   140006ae6:	mov    ecx,ebx
   140006ae8:	shl    rcx,0x4
   140006aec:	add    rcx,QWORD PTR [rdi+0x8]
   140006af0:	call   0x14000547c
   140006af5:	inc    ebx
   140006af7:	cmp    ebx,DWORD PTR [rdi+0x10]
   140006afa:	jb     0x140006ae6
   140006afc:	mov    rcx,QWORD PTR [rdi+0x8]
   140006b00:	call   QWORD PTR [rip+0x584a]        # 0x14000c350
   140006b06:	mov    rcx,rdi
   140006b09:	mov    QWORD PTR [rdi+0x8],r13
   140006b0d:	mov    QWORD PTR [rdi+0x10],0x0
   140006b15:	call   0x14000a7f4
   140006b1a:	mov    rbx,QWORD PTR [rsp+0x68]
   140006b1f:	test   rbx,rbx
   140006b22:	je     0x140006b76
   140006b24:	mov    eax,r15d
   140006b27:	lock xadd DWORD PTR [rbx],eax
   140006b2b:	add    eax,r15d
   140006b2e:	jne    0x140006b76
   140006b30:	mov    rdi,QWORD PTR [rsp+0x68]
   140006b35:	mov    ebx,r13d
   140006b38:	cmp    DWORD PTR [rdi+0x10],r13d
   140006b3c:	jbe    0x140006b58
   140006b3e:	mov    eax,ebx
   140006b40:	lea    rcx,[rax+rax*2]
   140006b44:	shl    rcx,0x4
   140006b48:	add    rcx,QWORD PTR [rdi+0x8]
   140006b4c:	call   0x140005438
   140006b51:	inc    ebx
   140006b53:	cmp    ebx,DWORD PTR [rdi+0x10]
   140006b56:	jb     0x140006b3e
   140006b58:	mov    rcx,QWORD PTR [rdi+0x8]
   140006b5c:	call   QWORD PTR [rip+0x57ee]        # 0x14000c350
   140006b62:	mov    rcx,rdi
   140006b65:	mov    QWORD PTR [rdi+0x8],r13
   140006b69:	mov    QWORD PTR [rdi+0x10],0x0
   140006b71:	call   0x14000a7f4
   140006b76:	mov    rcx,QWORD PTR [rsp+0x78]
   140006b7b:	test   rcx,rcx
   140006b7e:	je     0x140006b85
   140006b80:	call   0x140007394
   140006b85:	lea    rcx,[rsp+0x28]
   140006b8a:	call   0x1400084f8
   140006b8f:	mov    eax,r14d
   140006b92:	mov    rcx,QWORD PTR [rbp+0x70]
   140006b96:	xor    rcx,rsp
   140006b99:	call   0x14000ab80
   140006b9e:	mov    rbx,QWORD PTR [rsp+0x1c0]
   140006ba6:	add    rsp,0x180
   140006bad:	pop    r15
   140006baf:	pop    r14
   140006bb1:	pop    r13
   140006bb3:	pop    r12
   140006bb5:	pop    rdi
   140006bb6:	pop    rsi
   140006bb7:	pop    rbp
   140006bb8:	ret    
   140006bb9:	int3   
   140006bba:	int3   
   140006bbb:	int3   
   140006bbc:	int3   
   140006bbd:	int3   
   140006bbe:	int3   
   140006bbf:	int3   
   140006bc0:	mov    QWORD PTR [rsp+0x10],rbx
   140006bc5:	mov    QWORD PTR [rsp+0x18],rsi
   140006bca:	push   rbp
   140006bcb:	push   rdi
   140006bcc:	push   r14
   140006bce:	lea    rbp,[rsp-0x47]
   140006bd3:	sub    rsp,0xe0
   140006bda:	mov    rax,QWORD PTR [rip+0x8427]        # 0x14000f008
   140006be1:	xor    rax,rsp
   140006be4:	mov    QWORD PTR [rbp+0x37],rax
   140006be8:	mov    r14,rcx
   140006beb:	mov    rcx,QWORD PTR [rip+0x842e]        # 0x14000f020
   140006bf2:	lea    rax,[rip+0x8427]        # 0x14000f020
   140006bf9:	cmp    rcx,rax
   140006bfc:	je     0x140006c1c
   140006bfe:	test   DWORD PTR [rcx+0x1c],0x20000000
   140006c05:	je     0x140006c1c
   140006c07:	mov    rcx,QWORD PTR [rcx+0x10]
   140006c0b:	lea    r8,[rip+0x6256]        # 0x14000ce68
   140006c12:	mov    edx,0xe
   140006c17:	call   0x140001008
   140006c1c:	mov    r9d,0x1
   140006c22:	lea    rdx,[rip+0x6207]        # 0x14000ce30
   140006c29:	mov    r8d,0xe5
   140006c2f:	lea    rcx,[rbp-0x51]
   140006c33:	call   0x1400083e8
   140006c38:	movups xmm0,XMMWORD PTR [rip+0x6511]        # 0x14000d150
   140006c3f:	and    QWORD PTR [rbp-0x59],0x0
   140006c44:	lea    rax,[rip+0x64e5]        # 0x14000d130
   140006c4b:	and    QWORD PTR [rbp-0x11],0x0
   140006c50:	and    QWORD PTR [rbp+0x1f],0x0
   140006c55:	and    QWORD PTR [rbp+0xf],0x0
   140006c5a:	and    QWORD PTR [rbp-0x1],0x0
   140006c5f:	mov    QWORD PTR [rbp-0x19],rax
   140006c63:	mov    QWORD PTR [rbp+0x17],rax
   140006c67:	mov    QWORD PTR [rbp+0x7],rax
   140006c6b:	mov    QWORD PTR [rbp-0x9],rax
   140006c6f:	mov    eax,0xef
   140006c74:	movdqu XMMWORD PTR [rbp+0x27],xmm0
   140006c79:	test   r14,r14
   140006c7c:	jne    0x140006c8c
   140006c7e:	mov    esi,0x80070057
   140006c83:	mov    WORD PTR [rbp-0x4b],ax
   140006c87:	jmp    0x140006d85
   140006c8c:	and    DWORD PTR [rbp-0x51],0x0
   140006c90:	lea    r9,[rip+0x61c1]        # 0x14000ce58
   140006c97:	xor    edx,edx
   140006c99:	mov    WORD PTR [rbp-0x4d],ax
   140006c9d:	lea    rax,[rbp-0x59]
   140006ca1:	lea    rcx,[rip+0x5f30]        # 0x14000cbd8
   140006ca8:	mov    QWORD PTR [rsp+0x20],rax
   140006cad:	lea    r8d,[rdx+0x17]
   140006cb1:	call   QWORD PTR [rip+0x56a1]        # 0x14000c358
   140006cb7:	mov    esi,eax
   140006cb9:	mov    DWORD PTR [rbp-0x51],eax
   140006cbc:	test   eax,eax
   140006cbe:	mov    eax,0xf1
   140006cc3:	jns    0x140006cce
   140006cc5:	mov    WORD PTR [rbp-0x4b],ax
   140006cc9:	jmp    0x140006d88
   140006cce:	mov    rdx,QWORD PTR [r14+0x40]
   140006cd2:	lea    r9,[rbp+0x7]
   140006cd6:	mov    WORD PTR [rbp-0x4d],ax
   140006cda:	mov    rcx,r14
   140006cdd:	lea    rax,[rbp+0x17]
   140006ce1:	mov    QWORD PTR [rsp+0x28],rax
   140006ce6:	lea    rax,[rbp-0x19]
   140006cea:	mov    QWORD PTR [rsp+0x20],rax
   140006cef:	call   0x140006e00
   140006cf4:	mov    esi,eax
   140006cf6:	mov    DWORD PTR [rbp-0x51],eax
   140006cf9:	test   eax,eax
   140006cfb:	mov    eax,0xff
   140006d00:	js     0x140006cc5
   140006d02:	mov    WORD PTR [rbp-0x4d],ax
   140006d06:	cmp    esi,0x1
   140006d09:	jne    0x140006d12
   140006d0b:	mov    eax,0x10e
   140006d10:	jmp    0x140006d7c
   140006d12:	mov    r8,QWORD PTR [rbp+0x7]
   140006d16:	lea    rcx,[rbp-0x9]
   140006d1a:	mov    rdx,QWORD PTR [rbp-0x19]
   140006d1e:	call   0x14000a218
   140006d23:	mov    esi,eax
   140006d25:	mov    DWORD PTR [rbp-0x51],eax
   140006d28:	test   eax,eax
   140006d2a:	mov    eax,0x115
   140006d2f:	js     0x140006cc5
   140006d31:	mov    rbx,QWORD PTR [rbp-0x59]
   140006d35:	mov    WORD PTR [rbp-0x4d],ax
   140006d39:	mov    rax,QWORD PTR [rbx]
   140006d3c:	mov    rdi,QWORD PTR [rax+0x68]
   140006d40:	mov    rcx,rdi
   140006d43:	call   QWORD PTR [rip+0x5647]        # 0x14000c390
   140006d49:	mov    rdx,QWORD PTR [rbp-0x9]
   140006d4d:	lea    r8,[rbp+0x27]
   140006d51:	mov    rcx,rbx
   140006d54:	call   rdi
   140006d56:	test   eax,eax
   140006d58:	jne    0x140006d77
   140006d5a:	mov    rax,QWORD PTR [rbp+0x27]
   140006d5e:	cmp    rax,QWORD PTR [r14+0x30]
   140006d62:	jne    0x140006d77
   140006d64:	mov    rax,QWORD PTR [rbp+0x2f]
   140006d68:	cmp    rax,QWORD PTR [r14+0x38]
   140006d6c:	jne    0x140006d77
   140006d6e:	xor    esi,esi
   140006d70:	mov    eax,0x11c
   140006d75:	jmp    0x140006d81
   140006d77:	mov    eax,0x119
   140006d7c:	mov    esi,0x1
   140006d81:	mov    WORD PTR [rbp-0x4d],ax
   140006d85:	mov    DWORD PTR [rbp-0x51],esi
   140006d88:	lea    rcx,[rbp-0x9]
   140006d8c:	call   0x140009ce8
   140006d91:	lea    rcx,[rbp+0x7]
   140006d95:	call   0x140009ce8
   140006d9a:	lea    rcx,[rbp+0x17]
   140006d9e:	call   0x140009ce8
   140006da3:	lea    rcx,[rbp-0x19]
   140006da7:	call   0x140009ce8
   140006dac:	mov    rbx,QWORD PTR [rbp-0x59]
   140006db0:	test   rbx,rbx
   140006db3:	je     0x140006dca
   140006db5:	mov    rcx,QWORD PTR [rbx]
   140006db8:	mov    rdi,QWORD PTR [rcx+0x10]
   140006dbc:	mov    rcx,rdi
   140006dbf:	call   QWORD PTR [rip+0x55cb]        # 0x14000c390
   140006dc5:	mov    rcx,rbx
   140006dc8:	call   rdi
   140006dca:	lea    rcx,[rbp-0x51]
   140006dce:	call   0x1400084f8
   140006dd3:	mov    eax,esi
   140006dd5:	mov    rcx,QWORD PTR [rbp+0x37]
   140006dd9:	xor    rcx,rsp
   140006ddc:	call   0x14000ab80
   140006de1:	lea    r11,[rsp+0xe0]
   140006de9:	mov    rbx,QWORD PTR [r11+0x28]
   140006ded:	mov    rsi,QWORD PTR [r11+0x30]
   140006df1:	mov    rsp,r11
   140006df4:	pop    r14
   140006df6:	pop    rdi
   140006df7:	pop    rbp
   140006df8:	ret    
   140006df9:	int3   
   140006dfa:	int3   
   140006dfb:	int3   
   140006dfc:	int3   
   140006dfd:	int3   
   140006dfe:	int3   
   140006dff:	int3   
   140006e00:	mov    rax,rsp
   140006e03:	mov    QWORD PTR [rax+0x20],rbx
   140006e07:	mov    QWORD PTR [rax+0x18],r8
   140006e0b:	mov    QWORD PTR [rax+0x10],rdx
   140006e0f:	mov    QWORD PTR [rax+0x8],rcx
   140006e13:	push   rbp
   140006e14:	push   rsi
   140006e15:	push   rdi
   140006e16:	push   r12
   140006e18:	push   r13
   140006e1a:	push   r14
   140006e1c:	push   r15
   140006e1e:	mov    rbp,rsp
   140006e21:	sub    rsp,0x60
   140006e25:	mov    rbx,r9
   140006e28:	mov    r14,rdx
   140006e2b:	mov    r12,rcx
   140006e2e:	mov    rcx,QWORD PTR [rip+0x81eb]        # 0x14000f020
   140006e35:	lea    rax,[rip+0x81e4]        # 0x14000f020
   140006e3c:	cmp    rcx,rax
   140006e3f:	je     0x140006e5f
   140006e41:	test   DWORD PTR [rcx+0x1c],0x20000000
   140006e48:	je     0x140006e5f
   140006e4a:	mov    rcx,QWORD PTR [rcx+0x10]
   140006e4e:	lea    r8,[rip+0x6013]        # 0x14000ce68
   140006e55:	mov    edx,0x10
   140006e5a:	call   0x140001008
   140006e5f:	mov    r9d,0x1
   140006e65:	lea    rdx,[rip+0x5fdc]        # 0x14000ce48
   140006e6c:	mov    r8d,0x177
   140006e72:	lea    rcx,[rbp-0x40]
   140006e76:	call   0x1400083e8
   140006e7b:	xor    r8d,r8d
   140006e7e:	test   rbx,rbx
   140006e81:	je     0x140006e94
   140006e83:	cmp    DWORD PTR [rbx+0x8],r8d
   140006e87:	je     0x140006e94
   140006e89:	mov    rax,QWORD PTR [rbx]
   140006e8c:	mov    DWORD PTR [rbx+0x8],r8d
   140006e90:	mov    WORD PTR [rax],r8w
   140006e94:	mov    rsi,QWORD PTR [rbp+0x60]
   140006e98:	test   rsi,rsi
   140006e9b:	je     0x140006eae
   140006e9d:	cmp    DWORD PTR [rsi+0x8],r8d
   140006ea1:	je     0x140006eae
   140006ea3:	mov    rax,QWORD PTR [rsi]
   140006ea6:	mov    DWORD PTR [rsi+0x8],r8d
   140006eaa:	mov    WORD PTR [rax],r8w
   140006eae:	mov    rdi,QWORD PTR [rbp+0x68]
   140006eb2:	test   rdi,rdi
   140006eb5:	je     0x140006ec8
   140006eb7:	cmp    DWORD PTR [rdi+0x8],r8d
   140006ebb:	je     0x140006ec8
   140006ebd:	mov    rax,QWORD PTR [rdi]
   140006ec0:	mov    DWORD PTR [rdi+0x8],r8d
   140006ec4:	mov    WORD PTR [rax],r8w
   140006ec8:	mov    eax,0x186
   140006ecd:	test   r12,r12
   140006ed0:	jne    0x140006ee0
   140006ed2:	mov    ebx,0x80070057
   140006ed7:	mov    WORD PTR [rbp-0x3a],ax
   140006edb:	jmp    0x140006f85
   140006ee0:	mov    WORD PTR [rbp-0x3c],ax
   140006ee4:	mov    eax,0x187
   140006ee9:	test   r14,r14
   140006eec:	je     0x140006ed2
   140006eee:	mov    DWORD PTR [rbp-0x40],r8d
   140006ef2:	or     r13,0xffffffffffffffff
   140006ef6:	mov    WORD PTR [rbp-0x3c],ax
   140006efa:	inc    r13
   140006efd:	cmp    WORD PTR [r14+r13*2],r8w
   140006f02:	jne    0x140006efa
   140006f04:	mov    r15d,r8d
   140006f07:	cmp    DWORD PTR [r12+0x58],r8d
   140006f0c:	jbe    0x140006f77
   140006f0e:	mov    eax,r15d
   140006f11:	lea    r14,[rax+rax*2]
   140006f15:	mov    eax,r8d
   140006f18:	shl    r14,0x4
   140006f1c:	add    r14,QWORD PTR [r12+0x60]
   140006f21:	mov    DWORD PTR [rbp+0x50],eax
   140006f24:	cmp    DWORD PTR [r14+0x20],r8d
   140006f28:	jbe    0x140006f6d
   140006f2a:	mov    ecx,eax
   140006f2c:	or     r12,0xffffffffffffffff
   140006f30:	mov    rax,QWORD PTR [r14+0x28]
   140006f34:	mov    rdx,QWORD PTR [rax+rcx*8]
   140006f38:	inc    r12
   140006f3b:	cmp    WORD PTR [rdx+r12*2],r8w
   140006f40:	jne    0x140006f38
   140006f42:	cmp    r13,r12
   140006f45:	jb     0x140006f5b
   140006f47:	mov    rcx,QWORD PTR [rbp+0x48]
   140006f4b:	mov    r8,r12
   140006f4e:	call   QWORD PTR [rip+0x535c]        # 0x14000c2b0
   140006f54:	xor    r8d,r8d
   140006f57:	test   eax,eax
   140006f59:	je     0x140006fab
   140006f5b:	mov    eax,DWORD PTR [rbp+0x50]
   140006f5e:	inc    eax
   140006f60:	mov    DWORD PTR [rbp+0x50],eax
   140006f63:	cmp    eax,DWORD PTR [r14+0x20]
   140006f67:	jb     0x140006f2a
   140006f69:	mov    r12,QWORD PTR [rbp+0x40]
   140006f6d:	inc    r15d
   140006f70:	cmp    r15d,DWORD PTR [r12+0x58]
   140006f75:	jb     0x140006f0e
   140006f77:	mov    eax,0x1d0
   140006f7c:	mov    ebx,0x1
   140006f81:	mov    WORD PTR [rbp-0x3c],ax
   140006f85:	mov    DWORD PTR [rbp-0x40],ebx
   140006f88:	lea    rcx,[rbp-0x40]
   140006f8c:	call   0x1400084f8
   140006f91:	mov    eax,ebx
   140006f93:	mov    rbx,QWORD PTR [rsp+0xb8]
   140006f9b:	add    rsp,0x60
   140006f9f:	pop    r15
   140006fa1:	pop    r14
   140006fa3:	pop    r13
   140006fa5:	pop    r12
   140006fa7:	pop    rdi
   140006fa8:	pop    rsi
   140006fa9:	pop    rbp
   140006faa:	ret    
   140006fab:	test   rbx,rbx
   140006fae:	je     0x140006fec
   140006fb0:	cmp    DWORD PTR [rbx+0x8],r8d
   140006fb4:	je     0x140006fc1
   140006fb6:	mov    rax,QWORD PTR [rbx]
   140006fb9:	mov    DWORD PTR [rbx+0x8],r8d
   140006fbd:	mov    WORD PTR [rax],r8w
   140006fc1:	mov    rax,QWORD PTR [rbp+0x48]
   140006fc5:	mov    rcx,rbx
   140006fc8:	lea    rdx,[rax+r12*2]
   140006fcc:	call   0x14000a1c4
   140006fd1:	xor    r8d,r8d
   140006fd4:	mov    DWORD PTR [rbp-0x40],eax
   140006fd7:	test   eax,eax
   140006fd9:	mov    ebx,eax
   140006fdb:	mov    eax,0x1af
   140006fe0:	jns    0x140006fe8
   140006fe2:	mov    WORD PTR [rbp-0x3a],ax
   140006fe6:	jmp    0x140006f88
   140006fe8:	mov    WORD PTR [rbp-0x3c],ax
   140006fec:	test   rsi,rsi
   140006fef:	je     0x140007032
   140006ff1:	mov    rdx,QWORD PTR [r14+0x10]
   140006ff5:	test   rdx,rdx
   140006ff8:	jne    0x140007004
   140006ffa:	mov    eax,0x1b6
   140006fff:	jmp    0x140006f7c
   140007004:	cmp    DWORD PTR [rsi+0x8],r8d
   140007008:	je     0x140007015
   14000700a:	mov    rax,QWORD PTR [rsi]
   14000700d:	mov    DWORD PTR [rsi+0x8],r8d
   140007011:	mov    WORD PTR [rax],r8w
   140007015:	mov    rcx,rsi
   140007018:	call   0x14000a1c4
   14000701d:	xor    r8d,r8d
   140007020:	mov    DWORD PTR [rbp-0x40],eax
   140007023:	test   eax,eax
   140007025:	mov    ebx,eax
   140007027:	mov    eax,0x1b8
   14000702c:	js     0x140006fe2
   14000702e:	mov    WORD PTR [rbp-0x3c],ax
   140007032:	test   rdi,rdi
   140007035:	je     0x140007079
   140007037:	mov    rdx,QWORD PTR [r14+0x18]
   14000703b:	test   rdx,rdx
   14000703e:	jne    0x14000704a
   140007040:	mov    eax,0x1bf
   140007045:	jmp    0x140006f7c
   14000704a:	cmp    DWORD PTR [rdi+0x8],r8d
   14000704e:	je     0x14000705b
   140007050:	mov    rax,QWORD PTR [rdi]
   140007053:	mov    DWORD PTR [rdi+0x8],r8d
   140007057:	mov    WORD PTR [rax],r8w
   14000705b:	mov    rcx,rdi
   14000705e:	call   0x14000a1c4
   140007063:	xor    r8d,r8d
   140007066:	mov    DWORD PTR [rbp-0x40],eax
   140007069:	mov    ebx,eax
   14000706b:	test   eax,eax
   14000706d:	jns    0x140007079
   14000706f:	mov    eax,0x1c1
   140007074:	jmp    0x140006fe2
   140007079:	mov    ebx,r8d
   14000707c:	mov    eax,0x1c9
   140007081:	jmp    0x140006f81
   140007086:	int3   
   140007087:	int3   
   140007088:	int3   
   140007089:	int3   
   14000708a:	int3   
   14000708b:	int3   
   14000708c:	mov    rax,rsp
   14000708f:	mov    QWORD PTR [rax+0x8],rbx
   140007093:	mov    QWORD PTR [rax+0x10],rbp
   140007097:	mov    QWORD PTR [rax+0x18],rsi
   14000709b:	mov    QWORD PTR [rax+0x20],rdi
   14000709f:	push   r14
   1400070a1:	sub    rsp,0x20
   1400070a5:	mov    eax,DWORD PTR [rcx+0x10]
   1400070a8:	mov    r14,rdx
   1400070ab:	mov    rbp,rcx
   1400070ae:	lea    esi,[rax+0x1]
   1400070b1:	cmp    esi,eax
   1400070b3:	jb     0x140007156
   1400070b9:	xor    edi,edi
   1400070bb:	cmp    esi,DWORD PTR [rcx+0x14]
   1400070be:	jbe    0x140007132
   1400070c0:	lea    ebx,[rdi+0x40]
   1400070c3:	cmp    esi,ebx
   1400070c5:	jbe    0x1400070fc
   1400070c7:	mov    ebx,0x100
   1400070cc:	cmp    esi,ebx
   1400070ce:	jbe    0x1400070fc
   1400070d0:	mov    ebx,0x400
   1400070d5:	cmp    esi,ebx
   1400070d7:	jbe    0x1400070fc
   1400070d9:	mov    ebx,0x1000
   1400070de:	cmp    esi,ebx
   1400070e0:	jbe    0x1400070fc
   1400070e2:	mov    ebx,0x4000
   1400070e7:	cmp    esi,ebx
   1400070e9:	jbe    0x1400070fc
   1400070eb:	lea    ebx,[rsi+0xffff]
   1400070f1:	and    ebx,0xffff0000
   1400070f7:	cmp    ebx,esi
   1400070f9:	cmovb  ebx,esi
   1400070fc:	mov    ecx,ebx
   1400070fe:	mov    eax,0x8
   140007103:	mul    rcx
   140007106:	test   rdx,rdx
   140007109:	jne    0x14000712d
   14000710b:	mov    rcx,QWORD PTR [rbp+0x8]
   14000710f:	mov    rdx,rax
   140007112:	call   QWORD PTR [rip+0x5260]        # 0x14000c378
   140007118:	test   rax,rax
   14000711b:	jne    0x140007124
   14000711d:	mov    edi,0x8007000e
   140007122:	jmp    0x140007132
   140007124:	mov    QWORD PTR [rbp+0x8],rax
   140007128:	mov    DWORD PTR [rbp+0x14],ebx
   14000712b:	jmp    0x140007132
   14000712d:	mov    edi,0x80070216
   140007132:	xor    ecx,ecx
   140007134:	call   QWORD PTR [rip+0x5216]        # 0x14000c350
   14000713a:	test   edi,edi
   14000713c:	js     0x14000715b
   14000713e:	mov    rax,QWORD PTR [r14]
   140007141:	mov    edx,DWORD PTR [rbp+0x10]
   140007144:	mov    rcx,QWORD PTR [rbp+0x8]
   140007148:	mov    QWORD PTR [rcx+rdx*8],rax
   14000714c:	xor    eax,eax
   14000714e:	mov    QWORD PTR [r14],rax
   140007151:	mov    DWORD PTR [rbp+0x10],esi
   140007154:	jmp    0x14000715b
   140007156:	mov    edi,0x80070216
   14000715b:	mov    rbx,QWORD PTR [rsp+0x30]
   140007160:	mov    eax,edi
   140007162:	mov    rdi,QWORD PTR [rsp+0x48]
   140007167:	mov    rbp,QWORD PTR [rsp+0x38]
   14000716c:	mov    rsi,QWORD PTR [rsp+0x40]
   140007171:	add    rsp,0x20
   140007175:	pop    r14
   140007177:	ret    
   140007178:	int3   
   140007179:	int3   
   14000717a:	int3   
   14000717b:	int3   
   14000717c:	int3   
   14000717d:	int3   
   14000717e:	int3   
   14000717f:	int3   
   140007180:	mov    rax,rsp
   140007183:	mov    QWORD PTR [rax+0x8],rbx
   140007187:	mov    QWORD PTR [rax+0x10],rbp
   14000718b:	mov    QWORD PTR [rax+0x18],rsi
   14000718f:	mov    QWORD PTR [rax+0x20],rdi
   140007193:	push   r14
   140007195:	sub    rsp,0x20
   140007199:	mov    eax,DWORD PTR [rcx+0x10]
   14000719c:	mov    r14,rdx
   14000719f:	mov    rbp,rcx
   1400071a2:	lea    esi,[rax+0x1]
   1400071a5:	cmp    esi,eax
   1400071a7:	jb     0x14000726f
   1400071ad:	xor    edi,edi
   1400071af:	cmp    esi,DWORD PTR [rcx+0x14]
   1400071b2:	jbe    0x140007226
   1400071b4:	lea    ebx,[rdi+0x40]
   1400071b7:	cmp    esi,ebx
   1400071b9:	jbe    0x1400071f0
   1400071bb:	mov    ebx,0x100
   1400071c0:	cmp    esi,ebx
   1400071c2:	jbe    0x1400071f0
   1400071c4:	mov    ebx,0x400
   1400071c9:	cmp    esi,ebx
   1400071cb:	jbe    0x1400071f0
   1400071cd:	mov    ebx,0x1000
   1400071d2:	cmp    esi,ebx
   1400071d4:	jbe    0x1400071f0
   1400071d6:	mov    ebx,0x4000
   1400071db:	cmp    esi,ebx
   1400071dd:	jbe    0x1400071f0
   1400071df:	lea    ebx,[rsi+0xffff]
   1400071e5:	and    ebx,0xffff0000
   1400071eb:	cmp    ebx,esi
   1400071ed:	cmovb  ebx,esi
   1400071f0:	mov    ecx,ebx
   1400071f2:	mov    eax,0x30
   1400071f7:	mul    rcx
   1400071fa:	test   rdx,rdx
   1400071fd:	jne    0x140007221
   1400071ff:	mov    rcx,QWORD PTR [rbp+0x8]
   140007203:	mov    rdx,rax
   140007206:	call   QWORD PTR [rip+0x516c]        # 0x14000c378
   14000720c:	test   rax,rax
   14000720f:	jne    0x140007218
   140007211:	mov    edi,0x8007000e
   140007216:	jmp    0x140007226
   140007218:	mov    QWORD PTR [rbp+0x8],rax
   14000721c:	mov    DWORD PTR [rbp+0x14],ebx
   14000721f:	jmp    0x140007226
   140007221:	mov    edi,0x80070216
   140007226:	xor    ecx,ecx
   140007228:	call   QWORD PTR [rip+0x5122]        # 0x14000c350
   14000722e:	test   edi,edi
   140007230:	js     0x140007274
   140007232:	mov    eax,DWORD PTR [rbp+0x10]
   140007235:	xor    edx,edx
   140007237:	movups xmm0,XMMWORD PTR [r14]
   14000723b:	lea    rcx,[rax+rax*2]
   14000723f:	mov    rax,QWORD PTR [rbp+0x8]
   140007243:	add    rcx,rcx
   140007246:	lea    r8d,[rdx+0x30]
   14000724a:	movups XMMWORD PTR [rax+rcx*8],xmm0
   14000724e:	movups xmm1,XMMWORD PTR [r14+0x10]
   140007253:	movups XMMWORD PTR [rax+rcx*8+0x10],xmm1
   140007258:	movups xmm0,XMMWORD PTR [r14+0x20]
   14000725d:	movups XMMWORD PTR [rax+rcx*8+0x20],xmm0
   140007262:	mov    rcx,r14
   140007265:	call   0x14000b152
   14000726a:	mov    DWORD PTR [rbp+0x10],esi
   14000726d:	jmp    0x140007274
   14000726f:	mov    edi,0x80070216
   140007274:	mov    rbx,QWORD PTR [rsp+0x30]
   140007279:	mov    eax,edi
   14000727b:	mov    rdi,QWORD PTR [rsp+0x48]
   140007280:	mov    rbp,QWORD PTR [rsp+0x38]
   140007285:	mov    rsi,QWORD PTR [rsp+0x40]
   14000728a:	add    rsp,0x20
   14000728e:	pop    r14
   140007290:	ret    
   140007291:	int3   
   140007292:	int3   
   140007293:	int3   
   140007294:	int3   
   140007295:	int3   
   140007296:	int3   
   140007297:	int3   
   140007298:	mov    rax,rsp
   14000729b:	mov    QWORD PTR [rax+0x8],rbx
   14000729f:	mov    QWORD PTR [rax+0x10],rbp
   1400072a3:	mov    QWORD PTR [rax+0x18],rsi
   1400072a7:	mov    QWORD PTR [rax+0x20],rdi
   1400072ab:	push   r14
   1400072ad:	sub    rsp,0x20
   1400072b1:	mov    eax,DWORD PTR [rcx+0x10]
   1400072b4:	mov    r14,rdx
   1400072b7:	mov    rbp,rcx
   1400072ba:	lea    esi,[rax+0x1]
   1400072bd:	cmp    esi,eax
   1400072bf:	jb     0x14000736b
   1400072c5:	xor    edi,edi
   1400072c7:	cmp    esi,DWORD PTR [rcx+0x14]
   1400072ca:	jbe    0x14000733e
   1400072cc:	lea    ebx,[rdi+0x40]
   1400072cf:	cmp    esi,ebx
   1400072d1:	jbe    0x140007308
   1400072d3:	mov    ebx,0x100
   1400072d8:	cmp    esi,ebx
   1400072da:	jbe    0x140007308
   1400072dc:	mov    ebx,0x400
   1400072e1:	cmp    esi,ebx
   1400072e3:	jbe    0x140007308
   1400072e5:	mov    ebx,0x1000
   1400072ea:	cmp    esi,ebx
   1400072ec:	jbe    0x140007308
   1400072ee:	mov    ebx,0x4000
   1400072f3:	cmp    esi,ebx
   1400072f5:	jbe    0x140007308
   1400072f7:	lea    ebx,[rsi+0xffff]
   1400072fd:	and    ebx,0xffff0000
   140007303:	cmp    ebx,esi
   140007305:	cmovb  ebx,esi
   140007308:	mov    ecx,ebx
   14000730a:	mov    eax,0x10
   14000730f:	mul    rcx
   140007312:	test   rdx,rdx
   140007315:	jne    0x140007339
   140007317:	mov    rcx,QWORD PTR [rbp+0x8]
   14000731b:	mov    rdx,rax
   14000731e:	call   QWORD PTR [rip+0x5054]        # 0x14000c378
   140007324:	test   rax,rax
   140007327:	jne    0x140007330
   140007329:	mov    edi,0x8007000e
   14000732e:	jmp    0x14000733e
   140007330:	mov    QWORD PTR [rbp+0x8],rax
   140007334:	mov    DWORD PTR [rbp+0x14],ebx
   140007337:	jmp    0x14000733e
   140007339:	mov    edi,0x80070216
   14000733e:	xor    ecx,ecx
   140007340:	call   QWORD PTR [rip+0x500a]        # 0x14000c350
   140007346:	test   edi,edi
   140007348:	js     0x140007370
   14000734a:	mov    ecx,DWORD PTR [rbp+0x10]
   14000734d:	mov    rax,QWORD PTR [rbp+0x8]
   140007351:	add    rcx,rcx
   140007354:	movups xmm0,XMMWORD PTR [r14]
   140007358:	movdqu XMMWORD PTR [rax+rcx*8],xmm0
   14000735d:	xor    eax,eax
   14000735f:	mov    QWORD PTR [r14],rax
   140007362:	mov    QWORD PTR [r14+0x8],rax
   140007366:	mov    DWORD PTR [rbp+0x10],esi
   140007369:	jmp    0x140007370
   14000736b:	mov    edi,0x80070216
   140007370:	mov    rbx,QWORD PTR [rsp+0x30]
   140007375:	mov    eax,edi
   140007377:	mov    rdi,QWORD PTR [rsp+0x48]
   14000737c:	mov    rbp,QWORD PTR [rsp+0x38]
   140007381:	mov    rsi,QWORD PTR [rsp+0x40]
   140007386:	add    rsp,0x20
   14000738a:	pop    r14
   14000738c:	ret    
   14000738d:	int3   
   14000738e:	int3   
   14000738f:	int3   
   140007390:	int3   
   140007391:	int3   
   140007392:	int3   
   140007393:	int3   
   140007394:	mov    rax,rsp
   140007397:	mov    QWORD PTR [rax+0x8],rbx
   14000739b:	mov    QWORD PTR [rax+0x10],rbp
   14000739f:	mov    QWORD PTR [rax+0x18],rsi
   1400073a3:	mov    QWORD PTR [rax+0x20],rdi
   1400073a7:	push   r14
   1400073a9:	sub    rsp,0x20
   1400073ad:	mov    rsi,rcx
   1400073b0:	or     ebp,0xffffffff
   1400073b3:	lock xadd DWORD PTR [rcx],ebp
   1400073b7:	sub    ebp,0x1
   1400073ba:	jne    0x140007405
   1400073bc:	test   rcx,rcx
   1400073bf:	je     0x140007405
   1400073c1:	xor    r14d,r14d
   1400073c4:	cmp    DWORD PTR [rcx+0x10],r14d
   1400073c8:	jbe    0x1400073e6
   1400073ca:	mov    rbx,QWORD PTR [rsi+0x8]
   1400073ce:	mov    rcx,QWORD PTR [rbx+r14*8]
   1400073d2:	call   QWORD PTR [rip+0x4f78]        # 0x14000c350
   1400073d8:	and    QWORD PTR [rbx+r14*8],0x0
   1400073dd:	inc    r14d
   1400073e0:	cmp    r14d,DWORD PTR [rsi+0x10]
   1400073e4:	jb     0x1400073ca
   1400073e6:	mov    rcx,QWORD PTR [rsi+0x8]
   1400073ea:	call   QWORD PTR [rip+0x4f60]        # 0x14000c350
   1400073f0:	and    QWORD PTR [rsi+0x8],0x0
   1400073f5:	mov    rcx,rsi
   1400073f8:	and    DWORD PTR [rsi+0x14],0x0
   1400073fc:	and    DWORD PTR [rsi+0x10],0x0
   140007400:	call   0x14000a7f4
   140007405:	mov    rbx,QWORD PTR [rsp+0x30]
   14000740a:	mov    eax,ebp
   14000740c:	mov    rbp,QWORD PTR [rsp+0x38]
   140007411:	mov    rsi,QWORD PTR [rsp+0x40]
   140007416:	mov    rdi,QWORD PTR [rsp+0x48]
   14000741b:	add    rsp,0x20
   14000741f:	pop    r14
   140007421:	ret    
   140007422:	int3   
   140007423:	int3   
   140007424:	int3   
   140007425:	int3   
   140007426:	int3   
   140007427:	int3   
   140007428:	mov    QWORD PTR [rsp+0x10],rdx
   14000742d:	push   rbp
   14000742e:	push   rbx
   14000742f:	push   rsi
   140007430:	push   rdi
   140007431:	push   r14
   140007433:	mov    rbp,rsp
   140007436:	sub    rsp,0x70
   14000743a:	mov    r9d,0x1
   140007440:	lea    rdx,[rip+0x5a41]        # 0x14000ce88
   140007447:	mov    rsi,r8
   14000744a:	mov    rdi,rcx
   14000744d:	lea    rcx,[rbp-0x40]
   140007451:	lea    r8d,[r9+0x39]
   140007455:	call   0x1400083e8
   14000745a:	and    QWORD PTR [rbp+0x38],0x0
   14000745f:	lea    rax,[rip+0x5cca]        # 0x14000d130
   140007466:	and    QWORD PTR [rbp+0x40],0x0
   14000746b:	xor    r14d,r14d
   14000746e:	and    QWORD PTR [rbp-0x48],0x0
   140007473:	and    QWORD PTR [rbp+0x30],0x0
   140007478:	mov    QWORD PTR [rbp-0x50],rax
   14000747c:	test   rsi,rsi
   14000747f:	je     0x140007484
   140007481:	and    QWORD PTR [rsi],r14
   140007484:	test   rdi,rdi
   140007487:	jne    0x14000749c
   140007489:	lea    eax,[rdi+0x43]
   14000748c:	mov    DWORD PTR [rbp-0x40],0x80070057
   140007493:	mov    WORD PTR [rbp-0x3a],ax
   140007497:	jmp    0x14000759c
   14000749c:	mov    eax,0x44
   1400074a1:	mov    WORD PTR [rbp-0x3c],ax
   1400074a5:	mov    eax,0x45
   1400074aa:	test   rsi,rsi
   1400074ad:	je     0x14000748c
   1400074af:	and    DWORD PTR [rbp-0x40],r14d
   1400074b3:	lea    rdx,[rip+0x5116]        # 0x14000c5d0
   1400074ba:	lea    rcx,[rbp-0x50]
   1400074be:	mov    WORD PTR [rbp-0x3c],ax
   1400074c2:	call   0x14000a288
   1400074c7:	mov    DWORD PTR [rbp-0x40],eax
   1400074ca:	test   eax,eax
   1400074cc:	mov    eax,0x48
   1400074d1:	js     0x140007493
   1400074d3:	lea    rdx,[rbp+0x30]
   1400074d7:	mov    WORD PTR [rbp-0x3c],ax
   1400074db:	lea    rcx,[rbp-0x50]
   1400074df:	call   0x14000a4d0
   1400074e4:	mov    DWORD PTR [rbp-0x40],eax
   1400074e7:	test   eax,eax
   1400074e9:	mov    eax,0x49
   1400074ee:	js     0x140007493
   1400074f0:	lea    rcx,[rip+0x4f19]        # 0x14000c410
   1400074f7:	mov    WORD PTR [rbp-0x3c],ax
   1400074fb:	call   QWORD PTR [rip+0x4c8f]        # 0x14000c190
   140007501:	mov    rcx,rax
   140007504:	mov    r14,rax
   140007507:	call   QWORD PTR [rip+0x4c8b]        # 0x14000c198
   14000750d:	mov    ecx,0x4d
   140007512:	test   eax,eax
   140007514:	jne    0x140007523
   140007516:	mov    DWORD PTR [rbp-0x40],0x8007000e
   14000751d:	mov    WORD PTR [rbp-0x3a],cx
   140007521:	jmp    0x14000759c
   140007523:	mov    rax,QWORD PTR [rdi]
   140007526:	and    DWORD PTR [rbp-0x40],0x0
   14000752a:	mov    WORD PTR [rbp-0x3c],cx
   14000752e:	mov    rbx,QWORD PTR [rax+0x38]
   140007532:	mov    rcx,rbx
   140007535:	call   QWORD PTR [rip+0x4e55]        # 0x14000c390
   14000753b:	lea    r8,[rbp+0x40]
   14000753f:	mov    rdx,r14
   140007542:	mov    rcx,rdi
   140007545:	call   rbx
   140007547:	mov    DWORD PTR [rbp-0x40],eax
   14000754a:	test   eax,eax
   14000754c:	mov    eax,0x4e
   140007551:	js     0x140007493
   140007557:	mov    rbx,QWORD PTR [rbp+0x40]
   14000755b:	mov    WORD PTR [rbp-0x3c],ax
   14000755f:	mov    rax,QWORD PTR [rbx]
   140007562:	mov    rdi,QWORD PTR [rax+0x68]
   140007566:	mov    rcx,rdi
   140007569:	call   QWORD PTR [rip+0x4e21]        # 0x14000c390
   14000756f:	mov    rdx,QWORD PTR [rbp+0x30]
   140007573:	lea    r8,[rbp+0x38]
   140007577:	mov    rcx,rbx
   14000757a:	call   rdi
   14000757c:	mov    DWORD PTR [rbp-0x40],eax
   14000757f:	test   eax,eax
   140007581:	mov    eax,0x50
   140007586:	js     0x140007493
   14000758c:	mov    WORD PTR [rbp-0x3c],ax
   140007590:	mov    rax,QWORD PTR [rbp+0x38]
   140007594:	and    QWORD PTR [rbp+0x38],0x0
   140007599:	mov    QWORD PTR [rsi],rax
   14000759c:	mov    rcx,QWORD PTR [rbp+0x30]
   1400075a0:	call   QWORD PTR [rip+0x4bfa]        # 0x14000c1a0
   1400075a6:	mov    rcx,r14
   1400075a9:	call   QWORD PTR [rip+0x4bf1]        # 0x14000c1a0
   1400075af:	mov    esi,DWORD PTR [rbp-0x40]
   1400075b2:	lea    rcx,[rbp-0x50]
   1400075b6:	call   0x140009ce8
   1400075bb:	mov    rbx,QWORD PTR [rbp+0x40]
   1400075bf:	test   rbx,rbx
   1400075c2:	je     0x1400075d9
   1400075c4:	mov    rax,QWORD PTR [rbx]
   1400075c7:	mov    rdi,QWORD PTR [rax+0x10]
   1400075cb:	mov    rcx,rdi
   1400075ce:	call   QWORD PTR [rip+0x4dbc]        # 0x14000c390
   1400075d4:	mov    rcx,rbx
   1400075d7:	call   rdi
   1400075d9:	mov    rbx,QWORD PTR [rbp+0x38]
   1400075dd:	test   rbx,rbx
   1400075e0:	je     0x1400075f7
   1400075e2:	mov    rcx,QWORD PTR [rbx]
   1400075e5:	mov    rdi,QWORD PTR [rcx+0x10]
   1400075e9:	mov    rcx,rdi
   1400075ec:	call   QWORD PTR [rip+0x4d9e]        # 0x14000c390
   1400075f2:	mov    rcx,rbx
   1400075f5:	call   rdi
   1400075f7:	lea    rcx,[rbp-0x40]
   1400075fb:	call   0x1400084f8
   140007600:	mov    eax,esi
   140007602:	add    rsp,0x70
   140007606:	pop    r14
   140007608:	pop    rdi
   140007609:	pop    rsi
   14000760a:	pop    rbx
   14000760b:	pop    rbp
   14000760c:	ret    
   14000760d:	int3   
   14000760e:	int3   
   14000760f:	int3   
   140007610:	int3   
   140007611:	int3   
   140007612:	int3   
   140007613:	int3   
   140007614:	mov    QWORD PTR [rsp+0x8],rbx
   140007619:	mov    QWORD PTR [rsp+0x10],rdi
   14000761e:	push   rbp
   14000761f:	lea    rbp,[rsp-0x250]
   140007627:	sub    rsp,0x350
   14000762e:	mov    rax,QWORD PTR [rip+0x79d3]        # 0x14000f008
   140007635:	xor    rax,rsp
   140007638:	mov    QWORD PTR [rbp+0x240],rax
   14000763f:	mov    rcx,QWORD PTR [rip+0x79da]        # 0x14000f020
   140007646:	lea    rax,[rip+0x79d3]        # 0x14000f020
   14000764d:	cmp    rcx,rax
   140007650:	je     0x140007670
   140007652:	test   DWORD PTR [rcx+0x1c],0x20000000
   140007659:	je     0x140007670
   14000765b:	mov    rcx,QWORD PTR [rcx+0x10]
   14000765f:	lea    r8,[rip+0x585a]        # 0x14000cec0
   140007666:	mov    edx,0xa
   14000766b:	call   0x140001008
   140007670:	mov    r9d,0x1
   140007676:	lea    rdx,[rip+0x5823]        # 0x14000cea0
   14000767d:	lea    rcx,[rsp+0x58]
   140007682:	lea    r8d,[r9+0x21]
   140007686:	call   0x1400083e8
   14000768b:	xor    edi,edi
   14000768d:	lea    rcx,[rbp-0x67]
   140007691:	xor    edx,edx
   140007693:	mov    BYTE PTR [rbp-0x68],dil
   140007697:	lea    r8d,[rdi+0x27]
   14000769b:	call   0x14000b152
   1400076a0:	xor    edx,edx
   1400076a2:	mov    DWORD PTR [rbp-0x40],edi
   1400076a5:	mov    r8d,0xec
   1400076ab:	lea    rcx,[rbp-0x3c]
   1400076af:	call   0x14000b152
   1400076b4:	lea    ebx,[rdi+0x40]
   1400076b7:	mov    QWORD PTR [rbp-0x70],rdi
   1400076bb:	mov    r8d,ebx
   1400076be:	mov    QWORD PTR [rbp+0xb0],rdi
   1400076c5:	xor    edx,edx
   1400076c7:	lea    rcx,[rbp+0xb8]
   1400076ce:	call   0x14000b152
   1400076d3:	mov    r8d,ebx
   1400076d6:	mov    QWORD PTR [rbp+0x1f0],rdi
   1400076dd:	xor    edx,edx
   1400076df:	lea    rcx,[rbp+0x1f8]
   1400076e6:	call   0x14000b152
   1400076eb:	mov    r8d,ebx
   1400076ee:	mov    QWORD PTR [rbp+0x1a0],rdi
   1400076f5:	xor    edx,edx
   1400076f7:	lea    rcx,[rbp+0x1a8]
   1400076fe:	call   0x14000b152
   140007703:	mov    r8d,ebx
   140007706:	mov    QWORD PTR [rbp+0x100],rdi
   14000770d:	xor    edx,edx
   14000770f:	lea    rcx,[rbp+0x108]
   140007716:	call   0x14000b152
   14000771b:	mov    r8d,ebx
   14000771e:	mov    QWORD PTR [rbp+0x150],rdi
   140007725:	xor    edx,edx
   140007727:	lea    rcx,[rbp+0x158]
   14000772e:	call   0x14000b152
   140007733:	lea    edx,[rdi+0x1]
   140007736:	mov    DWORD PTR [rsp+0x50],edi
   14000773a:	lea    rcx,[rbp-0x68]
   14000773e:	call   QWORD PTR [rip+0x4914]        # 0x14000c058
   140007744:	test   eax,eax
   140007746:	jne    0x14000775e
   140007748:	call   0x1400063e4
   14000774d:	mov    DWORD PTR [rsp+0x58],eax
   140007751:	lea    eax,[rdi+0x39]
   140007754:	mov    WORD PTR [rsp+0x5e],ax
   140007759:	jmp    0x140007a9b
   14000775e:	mov    eax,0x39
   140007763:	mov    DWORD PTR [rsp+0x58],edi
   140007767:	lea    r9,[rsp+0x50]
   14000776c:	mov    WORD PTR [rsp+0x5c],ax
   140007771:	lea    r8,[rbp+0xb0]
   140007778:	xor    edx,edx
   14000777a:	lea    ebx,[rax+0xf]
   14000777d:	lea    ecx,[rax-0x1f]
   140007780:	mov    DWORD PTR [rsp+0x50],ebx
   140007784:	call   QWORD PTR [rip+0x48d6]        # 0x14000c060
   14000778a:	test   eax,eax
   14000778c:	jne    0x14000779c
   14000778e:	call   0x1400063e4
   140007793:	mov    DWORD PTR [rsp+0x58],eax
   140007797:	lea    eax,[rbx-0xb]
   14000779a:	jmp    0x140007754
   14000779c:	mov    eax,0x3d
   1400077a1:	mov    DWORD PTR [rsp+0x58],edi
   1400077a5:	lea    r9,[rsp+0x50]
   1400077aa:	mov    WORD PTR [rsp+0x5c],ax
   1400077af:	lea    r8,[rbp+0x1f0]
   1400077b6:	mov    DWORD PTR [rsp+0x50],ebx
   1400077ba:	xor    edx,edx
   1400077bc:	lea    ecx,[rax-0x26]
   1400077bf:	call   QWORD PTR [rip+0x489b]        # 0x14000c060
   1400077c5:	test   eax,eax
   1400077c7:	jne    0x1400077dc
   1400077c9:	call   0x1400063e4
   1400077ce:	mov    DWORD PTR [rsp+0x58],eax
   1400077d2:	mov    eax,0x41
   1400077d7:	jmp    0x140007754
   1400077dc:	mov    eax,0x41
   1400077e1:	mov    DWORD PTR [rsp+0x58],edi
   1400077e5:	lea    r9,[rsp+0x50]
   1400077ea:	mov    WORD PTR [rsp+0x5c],ax
   1400077ef:	lea    r8,[rbp+0x1a0]
   1400077f6:	mov    DWORD PTR [rsp+0x50],ebx
   1400077fa:	xor    edx,edx
   1400077fc:	lea    ecx,[rax-0x29]
   1400077ff:	call   QWORD PTR [rip+0x485b]        # 0x14000c060
   140007805:	test   eax,eax
   140007807:	jne    0x14000781c
   140007809:	call   0x1400063e4
   14000780e:	mov    DWORD PTR [rsp+0x58],eax
   140007812:	mov    eax,0x45
   140007817:	jmp    0x140007754
   14000781c:	mov    eax,0x45
   140007821:	mov    DWORD PTR [rsp+0x58],edi
   140007825:	lea    r9,[rsp+0x50]
   14000782a:	mov    WORD PTR [rsp+0x5c],ax
   14000782f:	lea    r8,[rbp+0x100]
   140007836:	mov    DWORD PTR [rsp+0x50],ebx
   14000783a:	xor    edx,edx
   14000783c:	lea    ecx,[rax-0x35]
   14000783f:	call   QWORD PTR [rip+0x481b]        # 0x14000c060
   140007845:	test   eax,eax
   140007847:	jne    0x14000785c
   140007849:	call   0x1400063e4
   14000784e:	mov    DWORD PTR [rsp+0x58],eax
   140007852:	mov    eax,0x49
   140007857:	jmp    0x140007754
   14000785c:	mov    eax,0x49
   140007861:	mov    DWORD PTR [rsp+0x58],edi
   140007865:	lea    r9,[rsp+0x50]
   14000786a:	mov    WORD PTR [rsp+0x5c],ax
   14000786f:	lea    r8,[rbp+0x150]
   140007876:	mov    DWORD PTR [rsp+0x50],ebx
   14000787a:	xor    edx,edx
   14000787c:	lea    ecx,[rax-0x33]
   14000787f:	call   QWORD PTR [rip+0x47db]        # 0x14000c060
   140007885:	test   eax,eax
   140007887:	jne    0x14000789c
   140007889:	call   0x1400063e4
   14000788e:	mov    DWORD PTR [rsp+0x58],eax
   140007892:	mov    eax,0x4d
   140007897:	jmp    0x140007754
   14000789c:	mov    eax,0x4d
   1400078a1:	mov    DWORD PTR [rsp+0x58],edi
   1400078a5:	mov    WORD PTR [rsp+0x5c],ax
   1400078aa:	lea    r9,[rbp-0x70]
   1400078ae:	xor    r8d,r8d
   1400078b1:	mov    QWORD PTR [rbp-0x30],rdi
   1400078b5:	lea    rdx,[rbp-0x40]
   1400078b9:	mov    QWORD PTR [rbp-0x28],rdi
   1400078bd:	lea    ebx,[rax-0x4b]
   1400078c0:	mov    QWORD PTR [rbp+0x0],rdi
   1400078c4:	lea    ecx,[rax-0x4a]
   1400078c7:	mov    QWORD PTR [rbp-0x3c],rbx
   1400078cb:	lea    rax,[rbp+0xb0]
   1400078d2:	mov    DWORD PTR [rbp-0x40],ecx
   1400078d5:	mov    QWORD PTR [rbp-0x18],rax
   1400078d9:	lea    rax,[rbp+0x1f0]
   1400078e0:	mov    QWORD PTR [rbp+0x18],rax
   1400078e4:	lea    rax,[rbp+0x1a0]
   1400078eb:	mov    QWORD PTR [rbp+0x48],rax
   1400078ef:	lea    rax,[rbp+0x100]
   1400078f6:	mov    QWORD PTR [rbp+0x78],rax
   1400078fa:	lea    rax,[rbp+0x150]
   140007901:	mov    DWORD PTR [rbp-0x10],ecx
   140007904:	mov    DWORD PTR [rbp+0x20],ecx
   140007907:	mov    DWORD PTR [rbp+0x50],ecx
   14000790a:	mov    DWORD PTR [rbp+0x80],ecx
   140007910:	lea    ecx,[rbx+0x3]
   140007913:	mov    QWORD PTR [rbp+0xa8],rax
   14000791a:	mov    DWORD PTR [rbp-0x20],ebx
   14000791d:	mov    QWORD PTR [rbp-0xc],rbx
   140007921:	mov    QWORD PTR [rbp+0x8],rdi
   140007925:	mov    DWORD PTR [rbp+0x10],ebx
   140007928:	mov    QWORD PTR [rbp+0x24],rbx
   14000792c:	mov    QWORD PTR [rbp+0x30],rdi
   140007930:	mov    QWORD PTR [rbp+0x38],rdi
   140007934:	mov    DWORD PTR [rbp+0x40],ebx
   140007937:	mov    QWORD PTR [rbp+0x54],rbx
   14000793b:	mov    QWORD PTR [rbp+0x60],rdi
   14000793f:	mov    QWORD PTR [rbp+0x68],rdi
   140007943:	mov    DWORD PTR [rbp+0x70],ebx
   140007946:	mov    QWORD PTR [rbp+0x84],rbx
   14000794d:	mov    QWORD PTR [rbp+0x90],rdi
   140007954:	mov    QWORD PTR [rbp+0x98],rdi
   14000795b:	mov    DWORD PTR [rbp+0xa0],ebx
   140007961:	call   QWORD PTR [rip+0x46e9]        # 0x14000c050
   140007967:	movzx  ecx,ax
   14000796a:	or     ecx,0x80070000
   140007970:	test   eax,eax
   140007972:	cmovle ecx,eax
   140007975:	lea    eax,[rbx+0x7b]
   140007978:	mov    DWORD PTR [rsp+0x58],ecx
   14000797c:	test   ecx,ecx
   14000797e:	js     0x140007754
   140007984:	mov    WORD PTR [rsp+0x5c],ax
   140007989:	lea    eax,[rbx+0x7c]
   14000798c:	cmp    QWORD PTR [rbp-0x70],rdi
   140007990:	jne    0x14000799f
   140007992:	mov    DWORD PTR [rsp+0x58],0x8007000e
   14000799a:	jmp    0x140007754
   14000799f:	xor    r8d,r8d
   1400079a2:	mov    DWORD PTR [rsp+0x58],edi
   1400079a6:	lea    rdx,[rbp+0xb0]
   1400079ad:	mov    WORD PTR [rsp+0x5c],ax
   1400079b2:	lea    rcx,[rbp-0x68]
   1400079b6:	call   QWORD PTR [rip+0x468c]        # 0x14000c048
   1400079bc:	test   eax,eax
   1400079be:	jne    0x1400079d3
   1400079c0:	call   0x1400063e4
   1400079c5:	mov    DWORD PTR [rsp+0x58],eax
   1400079c9:	mov    eax,0x81
   1400079ce:	jmp    0x140007754
   1400079d3:	mov    eax,0x81
   1400079d8:	mov    DWORD PTR [rsp+0x58],edi
   1400079dc:	xor    r8d,r8d
   1400079df:	mov    WORD PTR [rsp+0x5c],ax
   1400079e4:	lea    rdx,[rbp+0xb0]
   1400079eb:	lea    rcx,[rbp-0x68]
   1400079ef:	call   QWORD PTR [rip+0x464b]        # 0x14000c040
   1400079f5:	test   eax,eax
   1400079f7:	jne    0x140007a0c
   1400079f9:	call   0x1400063e4
   1400079fe:	mov    DWORD PTR [rsp+0x58],eax
   140007a02:	mov    eax,0x84
   140007a07:	jmp    0x140007754
   140007a0c:	mov    r8,QWORD PTR [rbp-0x70]
   140007a10:	lea    rcx,[rbp-0x68]
   140007a14:	xor    r9d,r9d
   140007a17:	mov    DWORD PTR [rsp+0x58],edi
   140007a1b:	mov    eax,0x84
   140007a20:	mov    WORD PTR [rsp+0x5c],ax
   140007a25:	lea    edx,[r9+0x1]
   140007a29:	call   QWORD PTR [rip+0x4609]        # 0x14000c038
   140007a2f:	test   eax,eax
   140007a31:	jne    0x140007a46
   140007a33:	call   0x1400063e4
   140007a38:	mov    DWORD PTR [rsp+0x58],eax
   140007a3c:	mov    eax,0x87
   140007a41:	jmp    0x140007754
   140007a46:	mov    QWORD PTR [rsp+0x40],rdi
   140007a4b:	lea    rcx,[rbp-0x68]
   140007a4f:	mov    DWORD PTR [rsp+0x38],0x3000
   140007a57:	mov    eax,0x87
   140007a5c:	mov    QWORD PTR [rsp+0x30],rdi
   140007a61:	xor    r9d,r9d
   140007a64:	mov    DWORD PTR [rsp+0x28],ebx
   140007a68:	xor    r8d,r8d
   140007a6b:	or     edx,0xffffffff
   140007a6e:	mov    DWORD PTR [rsp+0x20],0x6
   140007a76:	mov    DWORD PTR [rsp+0x58],edi
   140007a7a:	mov    WORD PTR [rsp+0x5c],ax
   140007a7f:	call   QWORD PTR [rip+0x48fb]        # 0x14000c380
   140007a85:	mov    DWORD PTR [rsp+0x58],eax
   140007a89:	test   eax,eax
   140007a8b:	mov    eax,0x91
   140007a90:	js     0x140007754
   140007a96:	mov    WORD PTR [rsp+0x5c],ax
   140007a9b:	mov    rcx,QWORD PTR [rbp-0x70]
   140007a9f:	call   QWORD PTR [rip+0x4673]        # 0x14000c118
   140007aa5:	mov    ebx,DWORD PTR [rsp+0x58]
   140007aa9:	lea    rcx,[rsp+0x58]
   140007aae:	call   0x1400084f8
   140007ab3:	mov    eax,ebx
   140007ab5:	mov    rcx,QWORD PTR [rbp+0x240]
   140007abc:	xor    rcx,rsp
   140007abf:	call   0x14000ab80
   140007ac4:	lea    r11,[rsp+0x350]
   140007acc:	mov    rbx,QWORD PTR [r11+0x10]
   140007ad0:	mov    rdi,QWORD PTR [r11+0x18]
   140007ad4:	mov    rsp,r11
   140007ad7:	pop    rbp
   140007ad8:	ret    
   140007ad9:	int3   
   140007ada:	int3   
   140007adb:	int3   
   140007adc:	int3   
   140007add:	int3   
   140007ade:	int3   
   140007adf:	int3   
   140007ae0:	mov    QWORD PTR [rsp+0x10],rbx
   140007ae5:	mov    QWORD PTR [rsp+0x18],rsi
   140007aea:	mov    QWORD PTR [rsp+0x20],rdi
   140007aef:	push   rbp
   140007af0:	mov    rbp,rsp
   140007af3:	sub    rsp,0x60
   140007af7:	mov    rsi,rdx
   140007afa:	mov    rbx,rcx
   140007afd:	mov    rcx,QWORD PTR [rip+0x751c]        # 0x14000f020
   140007b04:	lea    rax,[rip+0x7515]        # 0x14000f020
   140007b0b:	cmp    rcx,rax
   140007b0e:	je     0x140007b2e
   140007b10:	test   DWORD PTR [rcx+0x1c],0x20000000
   140007b17:	je     0x140007b2e
   140007b19:	mov    rcx,QWORD PTR [rcx+0x10]
   140007b1d:	lea    r8,[rip+0x541c]        # 0x14000cf40
   140007b24:	mov    edx,0x28
   140007b29:	call   0x140001008
   140007b2e:	mov    r9d,0x1
   140007b34:	lea    rdx,[rip+0x5395]        # 0x14000ced0
   140007b3b:	mov    r8d,0x4fc
   140007b41:	lea    rcx,[rbp-0x40]
   140007b45:	call   0x1400083e8
   140007b4a:	or     ecx,0xffffffff
   140007b4d:	mov    eax,0x500
   140007b52:	mov    DWORD PTR [rbp+0x10],ecx
   140007b55:	test   rbx,rbx
   140007b58:	jne    0x140007b68
   140007b5a:	mov    ebx,0x80070057
   140007b5f:	mov    DWORD PTR [rbp-0x40],ebx
   140007b62:	mov    WORD PTR [rbp-0x3a],ax
   140007b66:	jmp    0x140007bbf
   140007b68:	mov    WORD PTR [rbp-0x3c],ax
   140007b6c:	mov    eax,0x501
   140007b71:	test   rsi,rsi
   140007b74:	je     0x140007b5a
   140007b76:	and    DWORD PTR [rbp-0x40],0x0
   140007b7a:	lea    rdx,[rbp+0x10]
   140007b7e:	mov    DWORD PTR [rsi],ecx
   140007b80:	mov    rcx,rbx
   140007b83:	mov    WORD PTR [rbp-0x3c],ax
   140007b87:	call   0x140007d34
   140007b8c:	mov    edi,DWORD PTR [rbp+0x10]
   140007b8f:	test   eax,eax
   140007b91:	jne    0x140007bba
   140007b93:	test   dil,0x7
   140007b97:	je     0x140007bba
   140007b99:	mov    edx,edi
   140007b9b:	mov    rcx,rbx
   140007b9e:	and    edx,0xfffffff8
   140007ba1:	call   0x140007ed0
   140007ba6:	mov    ebx,eax
   140007ba8:	mov    DWORD PTR [rbp-0x40],eax
   140007bab:	test   eax,eax
   140007bad:	mov    eax,0x50c
   140007bb2:	js     0x140007b62
   140007bb4:	mov    WORD PTR [rbp-0x3c],ax
   140007bb8:	jmp    0x140007bbd
   140007bba:	mov    ebx,DWORD PTR [rbp-0x40]
   140007bbd:	mov    DWORD PTR [rsi],edi
   140007bbf:	lea    rcx,[rbp-0x40]
   140007bc3:	call   0x1400084f8
   140007bc8:	lea    r11,[rsp+0x60]
   140007bcd:	mov    eax,ebx
   140007bcf:	mov    rbx,QWORD PTR [r11+0x18]
   140007bd3:	mov    rsi,QWORD PTR [r11+0x20]
   140007bd7:	mov    rdi,QWORD PTR [r11+0x28]
   140007bdb:	mov    rsp,r11
   140007bde:	pop    rbp
   140007bdf:	ret    
   140007be0:	int3   
   140007be1:	int3   
   140007be2:	int3   
   140007be3:	int3   
   140007be4:	int3   
   140007be5:	int3   
   140007be6:	int3   
   140007be7:	int3   
   140007be8:	mov    QWORD PTR [rsp+0x8],rbx
   140007bed:	mov    QWORD PTR [rsp+0x18],rdi
   140007bf2:	push   rbp
   140007bf3:	mov    rbp,rsp
   140007bf6:	sub    rsp,0x60
   140007bfa:	mov    rdi,rcx
   140007bfd:	mov    rcx,QWORD PTR [rip+0x741c]        # 0x14000f020
   140007c04:	lea    rbx,[rip+0x7415]        # 0x14000f020
   140007c0b:	cmp    rcx,rbx
   140007c0e:	je     0x140007c2e
   140007c10:	test   DWORD PTR [rcx+0x1c],0x20000000
   140007c17:	je     0x140007c2e
   140007c19:	mov    rcx,QWORD PTR [rcx+0x10]
   140007c1d:	lea    r8,[rip+0x531c]        # 0x14000cf40
   140007c24:	mov    edx,0x29
   140007c29:	call   0x140001008
   140007c2e:	mov    r9d,0x1
   140007c34:	lea    rdx,[rip+0x52b5]        # 0x14000cef0
   140007c3b:	mov    r8d,0x51f
   140007c41:	lea    rcx,[rbp-0x40]
   140007c45:	call   0x1400083e8
   140007c4a:	or     DWORD PTR [rbp+0x18],0xffffffff
   140007c4e:	mov    rcx,QWORD PTR [rip+0x73cb]        # 0x14000f020
   140007c55:	cmp    rcx,rbx
   140007c58:	je     0x140007c7b
   140007c5a:	test   DWORD PTR [rcx+0x1c],0x10000000
   140007c61:	je     0x140007c7b
   140007c63:	mov    rcx,QWORD PTR [rcx+0x10]
   140007c67:	lea    r8,[rip+0x52d2]        # 0x14000cf40
   140007c6e:	mov    edx,0x2a
   140007c73:	mov    r9,rdi
   140007c76:	call   0x140002544
   140007c7b:	mov    rcx,rdi
   140007c7e:	call   QWORD PTR [rip+0x4474]        # 0x14000c0f8
   140007c84:	test   eax,eax
   140007c86:	je     0x140007c98
   140007c88:	mov    eax,0x527
   140007c8d:	xor    ebx,ebx
   140007c8f:	mov    WORD PTR [rbp-0x3c],ax
   140007c93:	mov    DWORD PTR [rbp-0x40],ebx
   140007c96:	jmp    0x140007d10
   140007c98:	call   QWORD PTR [rip+0x4492]        # 0x14000c130
   140007c9e:	cmp    eax,0x2
   140007ca1:	jne    0x140007caa
   140007ca3:	mov    eax,0x52b
   140007ca8:	jmp    0x140007c8d
   140007caa:	lea    rdx,[rbp+0x18]
   140007cae:	mov    rcx,rdi
   140007cb1:	call   0x140007ae0
   140007cb6:	mov    ebx,eax
   140007cb8:	mov    DWORD PTR [rbp-0x40],eax
   140007cbb:	test   eax,eax
   140007cbd:	mov    eax,0x531
   140007cc2:	jns    0x140007ccd
   140007cc4:	mov    edx,DWORD PTR [rbp+0x18]
   140007cc7:	mov    WORD PTR [rbp-0x3a],ax
   140007ccb:	jmp    0x140007d00
   140007ccd:	mov    rcx,rdi
   140007cd0:	mov    WORD PTR [rbp-0x3c],ax
   140007cd4:	call   QWORD PTR [rip+0x441e]        # 0x14000c0f8
   140007cda:	test   eax,eax
   140007cdc:	jne    0x140007cef
   140007cde:	call   0x1400063e4
   140007ce3:	mov    ebx,eax
   140007ce5:	mov    DWORD PTR [rbp-0x40],eax
   140007ce8:	mov    eax,0x536
   140007ced:	jmp    0x140007cc4
   140007cef:	xor    ebx,ebx
   140007cf1:	mov    eax,0x536
   140007cf6:	mov    DWORD PTR [rbp-0x40],ebx
   140007cf9:	or     edx,0xffffffff
   140007cfc:	mov    WORD PTR [rbp-0x3c],ax
   140007d00:	cmp    edx,0xffffffff
   140007d03:	je     0x140007d10
   140007d05:	mov    rcx,rdi
   140007d08:	call   0x140007ed0
   140007d0d:	mov    ebx,DWORD PTR [rbp-0x40]
   140007d10:	lea    rcx,[rbp-0x40]
   140007d14:	call   0x1400084f8
   140007d19:	lea    r11,[rsp+0x60]
   140007d1e:	mov    eax,ebx
   140007d20:	mov    rbx,QWORD PTR [r11+0x10]
   140007d24:	mov    rdi,QWORD PTR [r11+0x20]
   140007d28:	mov    rsp,r11
   140007d2b:	pop    rbp
   140007d2c:	ret    
   140007d2d:	int3   
   140007d2e:	int3   
   140007d2f:	int3   
   140007d30:	int3   
   140007d31:	int3   
   140007d32:	int3   
   140007d33:	int3   
   140007d34:	mov    rax,rsp
   140007d37:	mov    QWORD PTR [rax+0x8],rbx
   140007d3b:	mov    QWORD PTR [rax+0x10],rsi
   140007d3f:	mov    QWORD PTR [rax+0x20],rdi
   140007d43:	mov    QWORD PTR [rax+0x18],r8
   140007d47:	push   rbp
   140007d48:	lea    rbp,[rax-0x5f]
   140007d4c:	sub    rsp,0x90
   140007d53:	mov    rsi,rdx
   140007d56:	mov    rdi,rcx
   140007d59:	mov    rcx,QWORD PTR [rip+0x72c0]        # 0x14000f020
   140007d60:	lea    rax,[rip+0x72b9]        # 0x14000f020
   140007d67:	cmp    rcx,rax
   140007d6a:	je     0x140007d8a
   140007d6c:	test   DWORD PTR [rcx+0x1c],0x20000000
   140007d73:	je     0x140007d8a
   140007d75:	mov    rcx,QWORD PTR [rcx+0x10]
   140007d79:	lea    r8,[rip+0x51c0]        # 0x14000cf40
   140007d80:	mov    edx,0x30
   140007d85:	call   0x140001008
   140007d8a:	mov    ebx,0x1
   140007d8f:	lea    rdx,[rip+0x516a]        # 0x14000cf00
   140007d96:	mov    r9d,ebx
   140007d99:	lea    rcx,[rbp+0x17]
   140007d9d:	mov    r8d,0x61f
   140007da3:	call   0x1400083e8
   140007da8:	and    DWORD PTR [rbp+0x77],0x0
   140007dac:	xor    eax,eax
   140007dae:	and    DWORD PTR [rbp+0x7b],0x0
   140007db2:	and    DWORD PTR [rbp+0x7],0x0
   140007db6:	mov    DWORD PTR [rbp+0xb],eax
   140007db9:	mov    QWORD PTR [rbp+0xf],rax
   140007dbd:	test   rdi,rdi
   140007dc0:	je     0x140007e95
   140007dc6:	test   rsi,rsi
   140007dc9:	je     0x140007e95
   140007dcf:	and    DWORD PTR [rbp+0x17],eax
   140007dd2:	lea    edx,[rbx+0x7f]
   140007dd5:	and    QWORD PTR [rsp+0x30],0x0
   140007ddb:	lea    r8d,[rbx+0x6]
   140007ddf:	or     DWORD PTR [rsi],0xffffffff
   140007de2:	mov    eax,0x627
   140007de7:	mov    DWORD PTR [rsp+0x28],0x2200000
   140007def:	xor    r9d,r9d
   140007df2:	mov    rcx,rdi
   140007df5:	mov    WORD PTR [rbp+0x1b],ax
   140007df9:	mov    DWORD PTR [rsp+0x20],0x3
   140007e01:	call   QWORD PTR [rip+0x42d1]        # 0x14000c0d8
   140007e07:	mov    rdi,rax
   140007e0a:	lea    rcx,[rax+0x1]
   140007e0e:	test   rcx,0xfffffffffffffffe
   140007e15:	jne    0x140007e1e
   140007e17:	mov    eax,0x639
   140007e1c:	jmp    0x140007e79
   140007e1e:	and    DWORD PTR [rbp+0x17],0x0
   140007e22:	lea    r8,[rbp+0x77]
   140007e26:	and    DWORD PTR [rbp+0x77],0x0
   140007e2a:	lea    rdx,[rbp+0x7]
   140007e2e:	and    DWORD PTR [rbp+0x7b],0x0
   140007e32:	mov    eax,0x63c
   140007e37:	mov    r9d,0x8
   140007e3d:	mov    WORD PTR [rbp+0x1b],ax
   140007e41:	mov    rcx,rdi
   140007e44:	mov    DWORD PTR [rsp+0x20],0x23
   140007e4c:	call   QWORD PTR [rip+0x44e6]        # 0x14000c338
   140007e52:	mov    ecx,eax
   140007e54:	call   0x1400062b8
   140007e59:	mov    DWORD PTR [rbp+0x17],eax
   140007e5c:	mov    ebx,eax
   140007e5e:	test   eax,eax
   140007e60:	jns    0x140007e6d
   140007e62:	mov    eax,0x640
   140007e67:	mov    WORD PTR [rbp+0x1d],ax
   140007e6b:	jmp    0x140007e80
   140007e6d:	mov    eax,DWORD PTR [rbp+0x77]
   140007e70:	xor    ebx,ebx
   140007e72:	mov    DWORD PTR [rsi],eax
   140007e74:	mov    eax,0x648
   140007e79:	mov    WORD PTR [rbp+0x1b],ax
   140007e7d:	mov    DWORD PTR [rbp+0x17],ebx
   140007e80:	lea    rax,[rdi-0x1]
   140007e84:	cmp    rax,0xfffffffffffffffd
   140007e88:	ja     0x140007ea6
   140007e8a:	mov    rcx,rdi
   140007e8d:	call   QWORD PTR [rip+0x421d]        # 0x14000c0b0
   140007e93:	jmp    0x140007ea6
   140007e95:	mov    ebx,0x80070057
   140007e9a:	mov    eax,0x627
   140007e9f:	mov    DWORD PTR [rbp+0x17],ebx
   140007ea2:	mov    WORD PTR [rbp+0x1d],ax
   140007ea6:	lea    rcx,[rbp+0x17]
   140007eaa:	call   0x1400084f8
   140007eaf:	lea    r11,[rsp+0x90]
   140007eb7:	mov    eax,ebx
   140007eb9:	mov    rbx,QWORD PTR [r11+0x10]
   140007ebd:	mov    rsi,QWORD PTR [r11+0x18]
   140007ec1:	mov    rdi,QWORD PTR [r11+0x28]
   140007ec5:	mov    rsp,r11
   140007ec8:	pop    rbp
   140007ec9:	ret    
   140007eca:	int3   
   140007ecb:	int3   
   140007ecc:	int3   
   140007ecd:	int3   
   140007ece:	int3   
   140007ecf:	int3   
   140007ed0:	mov    QWORD PTR [rsp+0x18],rbx
   140007ed5:	push   rbp
   140007ed6:	push   rsi
   140007ed7:	push   rdi
   140007ed8:	push   r12
   140007eda:	push   r14
   140007edc:	lea    rbp,[rsp-0x37]
   140007ee1:	sub    rsp,0xc0
   140007ee8:	mov    rax,QWORD PTR [rip+0x7119]        # 0x14000f008
   140007eef:	xor    rax,rsp
   140007ef2:	mov    QWORD PTR [rbp+0x27],rax
   140007ef6:	mov    r14d,edx
   140007ef9:	mov    rsi,rcx
   140007efc:	mov    rcx,QWORD PTR [rip+0x711d]        # 0x14000f020
   140007f03:	lea    r12,[rip+0x7116]        # 0x14000f020
   140007f0a:	cmp    rcx,r12
   140007f0d:	je     0x140007f2d
   140007f0f:	test   DWORD PTR [rcx+0x1c],0x20000000
   140007f16:	je     0x140007f2d
   140007f18:	mov    rcx,QWORD PTR [rcx+0x10]
   140007f1c:	lea    r8,[rip+0x501d]        # 0x14000cf40
   140007f23:	mov    edx,0x43
   140007f28:	call   0x140001008
   140007f2d:	mov    r9d,0x1
   140007f33:	lea    rdx,[rip+0x4fee]        # 0x14000cf28
   140007f3a:	mov    r8d,0x943
   140007f40:	lea    rcx,[rbp-0x39]
   140007f44:	call   0x1400083e8
   140007f49:	and    DWORD PTR [rbp-0x1],0x0
   140007f4d:	lea    rcx,[rbp+0x3]
   140007f51:	xor    edx,edx
   140007f53:	lea    r8d,[rdx+0x24]
   140007f57:	call   0x14000b152
   140007f5c:	and    DWORD PTR [rbp-0x49],0x0
   140007f60:	xor    eax,eax
   140007f62:	mov    DWORD PTR [rbp-0x45],eax
   140007f65:	mov    QWORD PTR [rbp-0x41],rax
   140007f69:	test   rsi,rsi
   140007f6c:	jne    0x140007f84
   140007f6e:	mov    ebx,0x80070057
   140007f73:	mov    eax,0x949
   140007f78:	mov    DWORD PTR [rbp-0x39],ebx
   140007f7b:	mov    WORD PTR [rbp-0x33],ax
   140007f7f:	jmp    0x1400080d0
   140007f84:	and    DWORD PTR [rbp-0x39],eax
   140007f87:	xor    r9d,r9d
   140007f8a:	and    QWORD PTR [rsp+0x30],0x0
   140007f90:	mov    eax,0x949
   140007f95:	mov    DWORD PTR [rsp+0x28],0x2200000
   140007f9d:	mov    edx,0x180
   140007fa2:	mov    rcx,rsi
   140007fa5:	mov    WORD PTR [rbp-0x35],ax
   140007fa9:	lea    r8d,[r9+0x7]
   140007fad:	mov    DWORD PTR [rsp+0x20],0x3
   140007fb5:	call   QWORD PTR [rip+0x411d]        # 0x14000c0d8
   140007fbb:	mov    rdi,rax
   140007fbe:	inc    rax
   140007fc1:	test   rax,0xfffffffffffffffe
   140007fc7:	jne    0x140008026
   140007fc9:	call   0x1400063e4
   140007fce:	mov    ebx,eax
   140007fd0:	mov    DWORD PTR [rbp-0x39],eax
   140007fd3:	mov    eax,0x952
   140007fd8:	mov    WORD PTR [rbp-0x33],ax
   140007fdc:	mov    rcx,QWORD PTR [rip+0x703d]        # 0x14000f020
   140007fe3:	cmp    rcx,r12
   140007fe6:	je     0x1400080bd
   140007fec:	test   DWORD PTR [rcx+0x1c],0x2000000
   140007ff3:	je     0x1400080bd
   140007ff9:	mov    rcx,QWORD PTR [rcx+0x10]
   140007ffd:	lea    r9,[rip+0x4f14]        # 0x14000cf18
   140008004:	mov    edx,0x44
   140008009:	mov    DWORD PTR [rsp+0x28],ebx
   14000800d:	lea    r8,[rip+0x4f2c]        # 0x14000cf40
   140008014:	mov    QWORD PTR [rsp+0x20],rsi
   140008019:	call   0x1400026e0
   14000801e:	mov    ebx,DWORD PTR [rbp-0x39]
   140008021:	jmp    0x1400080bd
   140008026:	and    DWORD PTR [rbp-0x39],0x0
   14000802a:	lea    rcx,[rbp-0x1]
   14000802e:	mov    eax,0x952
   140008033:	mov    esi,0x28
   140008038:	mov    r8d,esi
   14000803b:	mov    WORD PTR [rbp-0x35],ax
   14000803f:	xor    edx,edx
   140008041:	call   0x14000b152
   140008046:	lea    r12d,[rsi-0x24]
   14000804a:	mov    r9d,esi
   14000804d:	lea    r8,[rbp-0x1]
   140008051:	mov    DWORD PTR [rsp+0x20],r12d
   140008056:	lea    rdx,[rbp-0x49]
   14000805a:	mov    rcx,rdi
   14000805d:	call   QWORD PTR [rip+0x42d5]        # 0x14000c338
   140008063:	mov    ecx,eax
   140008065:	call   0x1400062b8
   14000806a:	mov    ebx,eax
   14000806c:	mov    DWORD PTR [rbp-0x39],eax
   14000806f:	test   eax,eax
   140008071:	mov    eax,0x956
   140008076:	jns    0x14000807e
   140008078:	mov    WORD PTR [rbp-0x33],ax
   14000807c:	jmp    0x1400080bd
   14000807e:	bts    r14d,0x7
   140008083:	mov    WORD PTR [rbp-0x35],ax
   140008087:	mov    r9d,esi
   14000808a:	mov    DWORD PTR [rbp+0x1f],r14d
   14000808e:	lea    r8,[rbp-0x1]
   140008092:	mov    DWORD PTR [rsp+0x20],r12d
   140008097:	lea    rdx,[rbp-0x49]
   14000809b:	mov    rcx,rdi
   14000809e:	call   QWORD PTR [rip+0x4284]        # 0x14000c328
   1400080a4:	mov    ecx,eax
   1400080a6:	call   0x1400062b8
   1400080ab:	mov    ebx,eax
   1400080ad:	mov    DWORD PTR [rbp-0x39],eax
   1400080b0:	test   eax,eax
   1400080b2:	mov    eax,0x95c
   1400080b7:	js     0x140008078
   1400080b9:	mov    WORD PTR [rbp-0x35],ax
   1400080bd:	lea    rcx,[rdi-0x1]
   1400080c1:	cmp    rcx,0xfffffffffffffffd
   1400080c5:	ja     0x1400080d0
   1400080c7:	mov    rcx,rdi
   1400080ca:	call   QWORD PTR [rip+0x3fe0]        # 0x14000c0b0
   1400080d0:	lea    rcx,[rbp-0x39]
   1400080d4:	call   0x1400084f8
   1400080d9:	mov    eax,ebx
   1400080db:	mov    rcx,QWORD PTR [rbp+0x27]
   1400080df:	xor    rcx,rsp
   1400080e2:	call   0x14000ab80
   1400080e7:	mov    rbx,QWORD PTR [rsp+0x100]
   1400080ef:	add    rsp,0xc0
   1400080f6:	pop    r14
   1400080f8:	pop    r12
   1400080fa:	pop    rdi
   1400080fb:	pop    rsi
   1400080fc:	pop    rbp
   1400080fd:	ret    
   1400080fe:	int3   
   1400080ff:	int3   
   140008100:	int3   
   140008101:	int3   
   140008102:	int3   
   140008103:	int3   
   140008104:	rex push rbx
   140008106:	sub    rsp,0x80
   14000810d:	mov    r10,QWORD PTR [rsp+0xb0]
   140008115:	or     rax,0xffffffffffffffff
   140008119:	xor    ebx,ebx
   14000811b:	mov    r11,rcx
   14000811e:	test   r10,r10
   140008121:	je     0x140008134
   140008123:	mov    r8,rax
   140008126:	inc    r8
   140008129:	cmp    BYTE PTR [r10+r8*1],bl
   14000812d:	jne    0x140008126
   14000812f:	inc    r8
   140008132:	jmp    0x14000813a
   140008134:	mov    r8d,0x5
   14000813a:	test   r9,r9
   14000813d:	je     0x140008160
   14000813f:	cmp    WORD PTR [r9],bx
   140008143:	jne    0x14000814c
   140008145:	mov    ecx,0xe
   14000814a:	jmp    0x140008165
   14000814c:	inc    rax
   14000814f:	cmp    WORD PTR [r9+rax*2],bx
   140008154:	jne    0x14000814c
   140008156:	lea    rcx,[rax*2+0x2]
   14000815e:	jmp    0x140008165
   140008160:	mov    ecx,0xa
   140008165:	test   r9,r9
   140008168:	je     0x14000817b
   14000816a:	cmp    WORD PTR [r9],bx
   14000816e:	lea    rax,[rip+0x468b]        # 0x14000c800
   140008175:	cmove  r9,rax
   140008179:	jmp    0x140008182
   14000817b:	lea    r9,[rip+0x468e]        # 0x14000c810
   140008182:	mov    QWORD PTR [rsp+0x70],rbx
   140008187:	lea    rax,[rip+0x468e]        # 0x14000c81c
   14000818e:	test   r10,r10
   140008191:	mov    ebx,0x4
   140008196:	mov    QWORD PTR [rsp+0x68],rbx
   14000819b:	cmovne rax,r10
   14000819f:	lea    r10,[rsp+0xc8]
   1400081a7:	mov    QWORD PTR [rsp+0x60],r10
   1400081ac:	lea    r10,[rsp+0xc0]
   1400081b4:	mov    QWORD PTR [rsp+0x58],rbx
   1400081b9:	mov    QWORD PTR [rsp+0x50],r10
   1400081be:	lea    r10,[rsp+0xb8]
   1400081c6:	mov    QWORD PTR [rsp+0x48],rbx
   1400081cb:	mov    QWORD PTR [rsp+0x40],r10
   1400081d0:	mov    QWORD PTR [rsp+0x38],r8
   1400081d5:	lea    r8,[rip+0x4d8c]        # 0x14000cf68
   1400081dc:	mov    QWORD PTR [rsp+0x30],rax
   1400081e1:	mov    QWORD PTR [rsp+0x28],rcx
   1400081e6:	mov    rcx,r11
   1400081e9:	mov    QWORD PTR [rsp+0x20],r9
   1400081ee:	movzx  r9d,dx
   1400081f2:	lea    edx,[rbx+0x27]
   1400081f5:	call   QWORD PTR [rip+0x411d]        # 0x14000c318
   1400081fb:	add    rsp,0x80
   140008202:	pop    rbx
   140008203:	ret    
   140008204:	int3   
   140008205:	int3   
   140008206:	int3   
   140008207:	int3   
   140008208:	int3   
   140008209:	int3   
   14000820a:	int3   
   14000820b:	int3   
   14000820c:	sub    rsp,0x48
   140008210:	test   r9,r9
   140008213:	je     0x140008228
   140008215:	or     r8,0xffffffffffffffff
   140008219:	inc    r8
   14000821c:	cmp    BYTE PTR [r9+r8*1],0x0
   140008221:	jne    0x140008219
   140008223:	inc    r8
   140008226:	jmp    0x14000822e
   140008228:	mov    r8d,0x5
   14000822e:	test   r9,r9
   140008231:	lea    rax,[rip+0x45e4]        # 0x14000c81c
   140008238:	cmovne rax,r9
   14000823c:	and    QWORD PTR [rsp+0x30],0x0
   140008242:	mov    QWORD PTR [rsp+0x28],r8
   140008247:	lea    r8,[rip+0x4d1a]        # 0x14000cf68
   14000824e:	movzx  r9d,dx
   140008252:	mov    edx,0x2b
   140008257:	mov    QWORD PTR [rsp+0x20],rax
   14000825c:	call   QWORD PTR [rip+0x40b6]        # 0x14000c318
   140008262:	add    rsp,0x48
   140008266:	ret    
   140008267:	int3   
   140008268:	int3   
   140008269:	int3   
   14000826a:	int3   
   14000826b:	int3   
   14000826c:	int3   
   14000826d:	int3   
   14000826e:	int3   
   14000826f:	int3   
   140008270:	sub    rsp,0x68
   140008274:	test   r9,r9
   140008277:	je     0x14000828c
   140008279:	or     rdx,0xffffffffffffffff
   14000827d:	inc    rdx
   140008280:	cmp    BYTE PTR [r9+rdx*1],0x0
   140008285:	jne    0x14000827d
   140008287:	inc    rdx
   14000828a:	jmp    0x140008291
   14000828c:	mov    edx,0x5
   140008291:	mov    r10d,0x17
   140008297:	lea    r8,[rsp+0x98]
   14000829f:	test   r9,r9
   1400082a2:	lea    rax,[rip+0x4573]        # 0x14000c81c
   1400082a9:	cmovne rax,r9
   1400082ad:	and    QWORD PTR [rsp+0x50],0x0
   1400082b3:	lea    r9d,[r10-0x13]
   1400082b7:	mov    QWORD PTR [rsp+0x48],r9
   1400082bc:	mov    QWORD PTR [rsp+0x40],r8
   1400082c1:	lea    r8,[rsp+0x90]
   1400082c9:	mov    QWORD PTR [rsp+0x38],r9
   1400082ce:	mov    QWORD PTR [rsp+0x30],r8
   1400082d3:	lea    r8,[rip+0x4c8e]        # 0x14000cf68
   1400082da:	mov    QWORD PTR [rsp+0x28],rdx
   1400082df:	lea    edx,[r10+0x14]
   1400082e3:	movzx  r9d,r10w
   1400082e7:	mov    QWORD PTR [rsp+0x20],rax
   1400082ec:	call   QWORD PTR [rip+0x4026]        # 0x14000c318
   1400082f2:	add    rsp,0x68
   1400082f6:	ret    
   1400082f7:	int3   
   1400082f8:	int3   
   1400082f9:	int3   
   1400082fa:	int3   
   1400082fb:	int3   
   1400082fc:	int3   
   1400082fd:	int3   
   1400082fe:	int3   
   1400082ff:	int3   
   140008300:	rex push rbx
   140008302:	sub    rsp,0x80
   140008309:	mov    r10,QWORD PTR [rsp+0xb8]
   140008311:	or     rdx,0xffffffffffffffff
   140008315:	mov    r11,rcx
   140008318:	mov    eax,0x5
   14000831d:	test   r10,r10
   140008320:	je     0x140008334
   140008322:	mov    r8,rdx
   140008325:	inc    r8
   140008328:	cmp    BYTE PTR [r10+r8*1],0x0
   14000832d:	jne    0x140008325
   14000832f:	inc    r8
   140008332:	jmp    0x140008337
   140008334:	mov    r8,rax
   140008337:	test   r9,r9
   14000833a:	je     0x14000834b
   14000833c:	inc    rdx
   14000833f:	cmp    BYTE PTR [r9+rdx*1],0x0
   140008344:	jne    0x14000833c
   140008346:	inc    rdx
   140008349:	jmp    0x14000834e
   14000834b:	mov    rdx,rax
   14000834e:	test   r10,r10
   140008351:	lea    rcx,[rip+0x44c4]        # 0x14000c81c
   140008358:	mov    rax,rcx
   14000835b:	mov    ebx,0xf
   140008360:	cmovne rax,r10
   140008364:	test   r9,r9
   140008367:	cmovne rcx,r9
   14000836b:	and    QWORD PTR [rsp+0x70],0x0
   140008371:	lea    r10d,[rbx-0xb]
   140008375:	mov    QWORD PTR [rsp+0x68],r10
   14000837a:	lea    r9,[rsp+0xc8]
   140008382:	mov    QWORD PTR [rsp+0x60],r9
   140008387:	lea    r9,[rsp+0xc0]
   14000838f:	mov    QWORD PTR [rsp+0x58],r10
   140008394:	mov    QWORD PTR [rsp+0x50],r9
   140008399:	mov    QWORD PTR [rsp+0x48],r8
   14000839e:	lea    r8,[rip+0x4bc3]        # 0x14000cf68
   1400083a5:	mov    QWORD PTR [rsp+0x40],rax
   1400083aa:	lea    rax,[rsp+0xb0]
   1400083b2:	mov    QWORD PTR [rsp+0x38],r10
   1400083b7:	mov    QWORD PTR [rsp+0x30],rax
   1400083bc:	mov    QWORD PTR [rsp+0x28],rdx
   1400083c1:	lea    edx,[rbx+0x1c]
   1400083c4:	mov    QWORD PTR [rsp+0x20],rcx
   1400083c9:	mov    rcx,r11
   1400083cc:	movzx  r9d,bx
   1400083d0:	call   QWORD PTR [rip+0x3f42]        # 0x14000c318
   1400083d6:	add    rsp,0x80
   1400083dd:	pop    rbx
   1400083de:	ret    
   1400083df:	int3   
   1400083e0:	int3   
   1400083e1:	int3   
   1400083e2:	int3   
   1400083e3:	int3   
   1400083e4:	int3   
   1400083e5:	int3   
   1400083e6:	int3   
   1400083e7:	int3   
   1400083e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400083ed:	mov    QWORD PTR [rsp+0x10],rbp
   1400083f2:	mov    QWORD PTR [rsp+0x18],rsi
   1400083f7:	push   rdi
   1400083f8:	sub    rsp,0x20
   1400083fc:	xor    ebp,ebp
   1400083fe:	lea    rdi,[rcx+0x20]
   140008402:	mov    DWORD PTR [rcx],ebp
   140008404:	mov    rbx,rcx
   140008407:	mov    WORD PTR [rcx+0x4],r8w
   14000840c:	mov    WORD PTR [rcx+0x6],bp
   140008410:	mov    DWORD PTR [rcx+0x8],ebp
   140008413:	mov    WORD PTR [rcx+0xc],r9w
   140008418:	mov    QWORD PTR [rcx+0x10],rdx
   14000841c:	mov    QWORD PTR [rcx+0x18],rbp
   140008420:	mov    QWORD PTR [rcx+0x28],rbp
   140008424:	mov    DWORD PTR [rcx+0x30],ebp
   140008427:	mov    rcx,rdi
   14000842a:	mov    QWORD PTR [rdi],rbp
   14000842d:	call   QWORD PTR [rip+0x3d95]        # 0x14000c1c8
   140008433:	lea    rsi,[rip+0x6be6]        # 0x14000f020
   14000843a:	test   eax,eax
   14000843c:	js     0x14000844f
   14000843e:	mov    rcx,QWORD PTR [rdi]
   140008441:	mov    rax,QWORD PTR [rcx+0x20]
   140008445:	mov    QWORD PTR [rbx+0x18],rax
   140008449:	mov    QWORD PTR [rcx+0x20],rbx
   14000844d:	jmp    0x140008479
   14000844f:	mov    rcx,QWORD PTR [rip+0x6bca]        # 0x14000f020
   140008456:	cmp    rcx,rsi
   140008459:	je     0x140008480
   14000845b:	test   BYTE PTR [rcx+0x1c],0x1
   14000845f:	je     0x140008480
   140008461:	mov    rcx,QWORD PTR [rcx+0x10]
   140008465:	lea    r8,[rip+0x4afc]        # 0x14000cf68
   14000846c:	mov    edx,0xa
   140008471:	mov    r9d,eax
   140008474:	call   0x14000102c
   140008479:	mov    rcx,QWORD PTR [rip+0x6ba0]        # 0x14000f020
   140008480:	cmp    WORD PTR [rbx+0xc],bp
   140008484:	jne    0x14000849b
   140008486:	cmp    rcx,rsi
   140008489:	je     0x1400084d7
   14000848b:	test   DWORD PTR [rcx+0x1c],0x8000000
   140008492:	je     0x1400084d7
   140008494:	mov    edx,0xb
   140008499:	jmp    0x1400084ca
   14000849b:	cmp    WORD PTR [rbx+0xc],0x1
   1400084a0:	jne    0x1400084b7
   1400084a2:	cmp    rcx,rsi
   1400084a5:	je     0x1400084d7
   1400084a7:	test   DWORD PTR [rcx+0x1c],0x20000000
   1400084ae:	je     0x1400084d7
   1400084b0:	mov    edx,0xc
   1400084b5:	jmp    0x1400084ca
   1400084b7:	cmp    rcx,rsi
   1400084ba:	je     0x1400084d7
   1400084bc:	test   DWORD PTR [rcx+0x1c],0x20000
   1400084c3:	je     0x1400084d7
   1400084c5:	mov    edx,0xd
   1400084ca:	mov    r9,QWORD PTR [rbx+0x10]
   1400084ce:	mov    rcx,QWORD PTR [rcx+0x10]
   1400084d2:	call   0x14000820c
   1400084d7:	mov    rbp,QWORD PTR [rsp+0x38]
   1400084dc:	mov    rax,rbx
   1400084df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400084e4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400084e9:	add    rsp,0x20
   1400084ed:	pop    rdi
   1400084ee:	ret    
   1400084ef:	int3   
   1400084f0:	int3   
   1400084f1:	int3   
   1400084f2:	int3   
   1400084f3:	int3   
   1400084f4:	int3   
   1400084f5:	int3   
   1400084f6:	int3   
   1400084f7:	int3   
   1400084f8:	mov    rax,rsp
   1400084fb:	mov    QWORD PTR [rax+0x8],rbx
   1400084ff:	mov    QWORD PTR [rax+0x10],rbp
   140008503:	mov    QWORD PTR [rax+0x18],rsi
   140008507:	mov    QWORD PTR [rax+0x20],rdi
   14000850b:	push   r14
   14000850d:	sub    rsp,0x40
   140008511:	mov    rbx,rcx
   140008514:	xor    r14d,r14d
   140008517:	mov    ecx,DWORD PTR [rcx]
   140008519:	test   ecx,ecx
   14000851b:	jns    0x14000866e
   140008521:	call   QWORD PTR [rip+0x3c99]        # 0x14000c1c0
   140008527:	lea    rdi,[rip+0x6af2]        # 0x14000f020
   14000852e:	mov    ebp,eax
   140008530:	cmp    DWORD PTR [rbx+0x8],r14d
   140008534:	jne    0x14000858a
   140008536:	mov    r10,QWORD PTR [rip+0x6ae3]        # 0x14000f020
   14000853d:	cmp    r10,rdi
   140008540:	je     0x140008591
   140008542:	test   DWORD PTR [r10+0x1c],0x2000000
   14000854a:	je     0x140008591
   14000854c:	movzx  r9d,WORD PTR [rbx+0x6]
   140008551:	lea    rax,[rip+0x49f8]        # 0x14000cf50
   140008558:	movzx  edx,WORD PTR [rbx+0x4]
   14000855c:	lea    r8,[rip+0x49fd]        # 0x14000cf60
   140008563:	mov    rcx,QWORD PTR [r10+0x10]
   140008567:	test   ebp,ebp
   140008569:	cmovne r8,rax
   14000856d:	mov    eax,DWORD PTR [rbx]
   14000856f:	mov    DWORD PTR [rsp+0x38],eax
   140008573:	mov    DWORD PTR [rsp+0x30],r9d
   140008578:	mov    r9,QWORD PTR [rbx+0x10]
   14000857c:	mov    QWORD PTR [rsp+0x28],r8
   140008581:	mov    DWORD PTR [rsp+0x20],edx
   140008585:	call   0x140008300
   14000858a:	mov    r10,QWORD PTR [rip+0x6a8f]        # 0x14000f020
   140008591:	cmp    QWORD PTR [rbx+0x28],r14
   140008595:	je     0x1400085e3
   140008597:	mov    rcx,QWORD PTR [rbx+0x20]
   14000859b:	mov    eax,DWORD PTR [rcx+0x18]
   14000859e:	cmp    DWORD PTR [rbx],eax
   1400085a0:	je     0x1400085e3
   1400085a2:	mov    rcx,QWORD PTR [rcx+0x10]
   1400085a6:	test   rcx,rcx
   1400085a9:	je     0x1400085b9
   1400085ab:	call   QWORD PTR [rip+0x3b67]        # 0x14000c118
   1400085b1:	mov    rax,QWORD PTR [rbx+0x20]
   1400085b5:	mov    QWORD PTR [rax+0x10],r14
   1400085b9:	mov    rcx,QWORD PTR [rbx+0x20]
   1400085bd:	mov    eax,DWORD PTR [rbx+0x30]
   1400085c0:	mov    DWORD PTR [rcx+0x4],eax
   1400085c3:	mov    rax,QWORD PTR [rbx+0x28]
   1400085c7:	mov    rcx,QWORD PTR [rbx+0x20]
   1400085cb:	mov    QWORD PTR [rcx+0x10],rax
   1400085cf:	mov    rcx,QWORD PTR [rbx+0x20]
   1400085d3:	mov    eax,DWORD PTR [rbx]
   1400085d5:	mov    QWORD PTR [rbx+0x28],r14
   1400085d9:	mov    DWORD PTR [rcx+0x18],eax
   1400085dc:	mov    r10,QWORD PTR [rip+0x6a3d]        # 0x14000f020
   1400085e3:	mov    rax,QWORD PTR [rbx+0x20]
   1400085e7:	test   rax,rax
   1400085ea:	je     0x1400085f7
   1400085ec:	mov    eax,DWORD PTR [rax+0x8]
   1400085ef:	cmp    DWORD PTR [rbx],eax
   1400085f1:	je     0x1400086f0
   1400085f7:	cmp    DWORD PTR [rbx+0x8],r14d
   1400085fb:	jne    0x14000865b
   1400085fd:	mov    rsi,QWORD PTR [rbx+0x18]
   140008601:	jmp    0x140008635
   140008603:	cmp    r10,rdi
   140008606:	je     0x140008631
   140008608:	test   BYTE PTR [r10+0x1c],0x1
   14000860d:	je     0x140008631
   14000860f:	movzx  ecx,WORD PTR [rsi+0x4]
   140008613:	mov    eax,DWORD PTR [rsi]
   140008615:	mov    r9,QWORD PTR [rsi+0x10]
   140008619:	mov    DWORD PTR [rsp+0x28],eax
   14000861d:	mov    DWORD PTR [rsp+0x20],ecx
   140008621:	mov    rcx,QWORD PTR [r10+0x10]
   140008625:	call   0x140008270
   14000862a:	mov    r10,QWORD PTR [rip+0x69ef]        # 0x14000f020
   140008631:	mov    rsi,QWORD PTR [rsi+0x18]
   140008635:	test   rsi,rsi
   140008638:	jne    0x140008603
   14000863a:	cmp    r10,rdi
   14000863d:	je     0x14000865b
   14000863f:	test   BYTE PTR [r10+0x1c],0x1
   140008644:	je     0x14000865b
   140008646:	movzx  eax,WORD PTR [rbx+0x6]
   14000864a:	mov    r9,QWORD PTR [rbx+0x10]
   14000864e:	mov    rcx,QWORD PTR [r10+0x10]
   140008652:	mov    DWORD PTR [rsp+0x20],eax
   140008656:	call   0x140005620
   14000865b:	test   ebp,ebp
   14000865d:	je     0x1400086f0
   140008663:	call   QWORD PTR [rip+0x3b6f]        # 0x14000c1d8
   140008669:	jmp    0x1400086f0
   14000866e:	cmp    WORD PTR [rbx+0xc],r14w
   140008673:	jne    0x140008698
   140008675:	mov    rcx,QWORD PTR [rip+0x69a4]        # 0x14000f020
   14000867c:	lea    rdi,[rip+0x699d]        # 0x14000f020
   140008683:	cmp    rcx,rdi
   140008686:	je     0x1400086f0
   140008688:	test   DWORD PTR [rcx+0x1c],0x8000000
   14000868f:	je     0x1400086f0
   140008691:	mov    edx,0x10
   140008696:	jmp    0x1400086e3
   140008698:	cmp    WORD PTR [rbx+0xc],0x1
   14000869d:	jne    0x1400086c2
   14000869f:	mov    rcx,QWORD PTR [rip+0x697a]        # 0x14000f020
   1400086a6:	lea    rdi,[rip+0x6973]        # 0x14000f020
   1400086ad:	cmp    rcx,rdi
   1400086b0:	je     0x1400086f0
   1400086b2:	test   DWORD PTR [rcx+0x1c],0x20000000
   1400086b9:	je     0x1400086f0
   1400086bb:	mov    edx,0x11
   1400086c0:	jmp    0x1400086e3
   1400086c2:	mov    rcx,QWORD PTR [rip+0x6957]        # 0x14000f020
   1400086c9:	lea    rdi,[rip+0x6950]        # 0x14000f020
   1400086d0:	cmp    rcx,rdi
   1400086d3:	je     0x1400086f0
   1400086d5:	test   DWORD PTR [rcx+0x1c],0x20000
   1400086dc:	je     0x1400086f0
   1400086de:	mov    edx,0x12
   1400086e3:	mov    r9,QWORD PTR [rbx+0x10]
   1400086e7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400086eb:	call   0x14000820c
   1400086f0:	mov    rcx,QWORD PTR [rbx+0x20]
   1400086f4:	test   rcx,rcx
   1400086f7:	je     0x140008738
   1400086f9:	mov    rax,QWORD PTR [rbx+0x18]
   1400086fd:	mov    QWORD PTR [rcx+0x20],rax
   140008701:	cmp    QWORD PTR [rbx+0x18],r14
   140008705:	jne    0x14000872f
   140008707:	mov    rax,QWORD PTR [rbx+0x20]
   14000870b:	mov    DWORD PTR [rax+0x8],r14d
   14000870f:	mov    rcx,QWORD PTR [rbx+0x20]
   140008713:	mov    rcx,QWORD PTR [rcx+0x10]
   140008717:	call   QWORD PTR [rip+0x39fb]        # 0x14000c118
   14000871d:	mov    rax,QWORD PTR [rbx+0x20]
   140008721:	mov    QWORD PTR [rax+0x10],r14
   140008725:	mov    rax,QWORD PTR [rbx+0x20]
   140008729:	mov    DWORD PTR [rax+0x18],r14d
   14000872d:	jmp    0x140008738
   14000872f:	mov    rcx,QWORD PTR [rbx+0x20]
   140008733:	mov    eax,DWORD PTR [rbx]
   140008735:	mov    DWORD PTR [rcx+0x8],eax
   140008738:	mov    rcx,QWORD PTR [rbx+0x28]
   14000873c:	test   rcx,rcx
   14000873f:	je     0x14000874b
   140008741:	call   QWORD PTR [rip+0x39d1]        # 0x14000c118
   140008747:	mov    QWORD PTR [rbx+0x28],r14
   14000874b:	mov    rbp,QWORD PTR [rsp+0x58]
   140008750:	mov    rsi,QWORD PTR [rsp+0x60]
   140008755:	mov    rdi,QWORD PTR [rsp+0x68]
   14000875a:	mov    QWORD PTR [rbx+0x18],r14
   14000875e:	mov    rbx,QWORD PTR [rsp+0x50]
   140008763:	add    rsp,0x40
   140008767:	pop    r14
   140008769:	ret    
   14000876a:	int3   
   14000876b:	int3   
   14000876c:	int3   
   14000876d:	int3   
   14000876e:	int3   
   14000876f:	int3   
   140008770:	rex push rbx
   140008772:	push   rbp
   140008773:	push   rsi
   140008774:	push   rdi
   140008775:	push   r14
   140008777:	push   r15
   140008779:	sub    rsp,0x68
   14000877d:	mov    rax,QWORD PTR [rip+0x6884]        # 0x14000f008
   140008784:	xor    rax,rsp
   140008787:	mov    QWORD PTR [rsp+0x58],rax
   14000878c:	mov    rbx,QWORD PTR [rsp+0xd0]
   140008794:	mov    rbp,rdx
   140008797:	and    DWORD PTR [rsp+0x30],0x0
   14000879c:	xor    edx,edx
   14000879e:	mov    r14d,r8d
   1400087a1:	mov    rdi,rcx
   1400087a4:	lea    rcx,[rsp+0x34]
   1400087a9:	movzx  r15d,r9w
   1400087ad:	lea    r8d,[rdx+0x20]
   1400087b1:	call   0x14000b152
   1400087b6:	test   rbp,rbp
   1400087b9:	je     0x140008827
   1400087bb:	test   rbx,rbx
   1400087be:	je     0x140008827
   1400087c0:	mov    r9,QWORD PTR [rdi+0x10]
   1400087c4:	xor    eax,eax
   1400087c6:	mov    r10d,DWORD PTR [rdi]
   1400087c9:	movzx  r11d,WORD PTR [rdi+0x6]
   1400087ce:	movzx  esi,WORD PTR [rdi+0x4]
   1400087d2:	lea    rdi,[rsp+0x30]
   1400087d7:	lea    ecx,[rax+0x24]
   1400087da:	rep stos BYTE PTR es:[rdi],al
   1400087dc:	test   r9,r9
   1400087df:	je     0x140008807
   1400087e1:	mov    eax,DWORD PTR [rsp+0xc0]
   1400087e8:	lea    r8,[rsp+0x40]
   1400087ed:	mov    rcx,r9
   1400087f0:	mov    DWORD PTR [rsp+0x34],eax
   1400087f4:	mov    DWORD PTR [rsp+0x30],r10d
   1400087f9:	mov    DWORD PTR [rsp+0x38],esi
   1400087fd:	mov    DWORD PTR [rsp+0x3c],r11d
   140008802:	call   0x14000a5e8
   140008807:	lea    rax,[rsp+0x30]
   14000880c:	movzx  r8d,r15w
   140008810:	mov    QWORD PTR [rsp+0x28],rax
   140008815:	mov    edx,r14d
   140008818:	mov    rcx,rbp
   14000881b:	mov    QWORD PTR [rsp+0x20],rbx
   140008820:	call   0x14000a724
   140008825:	jmp    0x14000882c
   140008827:	mov    eax,0x80070057
   14000882c:	mov    rcx,QWORD PTR [rsp+0x58]
   140008831:	xor    rcx,rsp
   140008834:	call   0x14000ab80
   140008839:	add    rsp,0x68
   14000883d:	pop    r15
   14000883f:	pop    r14
   140008841:	pop    rdi
   140008842:	pop    rsi
   140008843:	pop    rbp
   140008844:	pop    rbx
   140008845:	ret    
   140008846:	int3   
   140008847:	int3   
   140008848:	int3   
   140008849:	int3   
   14000884a:	int3   
   14000884b:	int3   
   14000884c:	mov    r11,rsp
   14000884f:	mov    QWORD PTR [r11+0x20],r9
   140008853:	sub    rsp,0x38
   140008857:	mov    rax,r9
   14000885a:	lea    r10,[r11+0x28]
   14000885e:	mov    QWORD PTR [r11-0x10],r10
   140008862:	mov    r9d,0x1
   140008868:	mov    QWORD PTR [r11-0x18],rax
   14000886c:	call   0x1400088ac
   140008871:	add    rsp,0x38
   140008875:	ret    
   140008876:	int3   
   140008877:	int3   
   140008878:	int3   
   140008879:	int3   
   14000887a:	int3   
   14000887b:	int3   
   14000887c:	mov    r11,rsp
   14000887f:	mov    QWORD PTR [r11+0x20],r9
   140008883:	sub    rsp,0x38
   140008887:	mov    rax,r9
   14000888a:	lea    r10,[r11+0x28]
   14000888e:	mov    QWORD PTR [r11-0x10],r10
   140008892:	mov    r9d,0x4
   140008898:	mov    QWORD PTR [r11-0x18],rax
   14000889c:	call   0x1400088ac
   1400088a1:	add    rsp,0x38
   1400088a5:	ret    
   1400088a6:	int3   
   1400088a7:	int3   
   1400088a8:	int3   
   1400088a9:	int3   
   1400088aa:	int3   
   1400088ab:	int3   
   1400088ac:	rex push rbp
   1400088ae:	push   rbx
   1400088af:	push   rsi
   1400088b0:	push   rdi
   1400088b1:	push   r12
   1400088b3:	push   r14
   1400088b5:	push   r15
   1400088b7:	lea    rbp,[rsp-0x760]
   1400088bf:	sub    rsp,0x860
   1400088c6:	mov    rax,QWORD PTR [rip+0x673b]        # 0x14000f008
   1400088cd:	xor    rax,rsp
   1400088d0:	mov    QWORD PTR [rbp+0x750],rax
   1400088d7:	xor    r15d,r15d
   1400088da:	mov    r14d,r8d
   1400088dd:	mov    r8,QWORD PTR [rbp+0x7c0]
   1400088e4:	movzx  edi,r9w
   1400088e8:	mov    r9,QWORD PTR [rbp+0x7c8]
   1400088ef:	mov    rsi,rdx
   1400088f2:	mov    QWORD PTR [rsp+0x40],r15
   1400088f7:	mov    rbx,rcx
   1400088fa:	mov    WORD PTR [rsp+0x50],r15w
   140008900:	test   r8,r8
   140008903:	je     0x14000892e
   140008905:	mov    r12d,0x3ff
   14000890b:	lea    rcx,[rsp+0x50]
   140008910:	mov    edx,r12d
   140008913:	call   QWORD PTR [rip+0x39a7]        # 0x14000c2c0
   140008919:	test   eax,eax
   14000891b:	js     0x140008926
   14000891d:	cdqe   
   14000891f:	cmp    rax,r12
   140008922:	ja     0x140008926
   140008924:	jne    0x14000892e
   140008926:	mov    WORD PTR [rbp+0x74e],r15w
   14000892e:	movzx  ecx,di
   140008931:	sub    ecx,0x1
   140008934:	je     0x140008987
   140008936:	cmp    ecx,0x1
   140008939:	je     0x140008963
   14000893b:	mov    r10,QWORD PTR [rip+0x66de]        # 0x14000f020
   140008942:	lea    rax,[rip+0x66d7]        # 0x14000f020
   140008949:	cmp    r10,rax
   14000894c:	je     0x1400089d8
   140008952:	test   DWORD PTR [r10+0x1c],0x8000000
   14000895a:	je     0x1400089d8
   14000895c:	mov    edx,0x15
   140008961:	jmp    0x1400089a9
   140008963:	mov    r10,QWORD PTR [rip+0x66b6]        # 0x14000f020
   14000896a:	lea    rax,[rip+0x66af]        # 0x14000f020
   140008971:	cmp    r10,rax
   140008974:	je     0x1400089d8
   140008976:	test   DWORD PTR [r10+0x1c],0x4000000
   14000897e:	je     0x1400089d8
   140008980:	mov    edx,0x14
   140008985:	jmp    0x1400089a9
   140008987:	mov    r10,QWORD PTR [rip+0x6692]        # 0x14000f020
   14000898e:	lea    rax,[rip+0x668b]        # 0x14000f020
   140008995:	cmp    r10,rax
   140008998:	je     0x1400089d8
   14000899a:	test   DWORD PTR [r10+0x1c],0x2000000
   1400089a2:	je     0x1400089d8
   1400089a4:	mov    edx,0x13
   1400089a9:	mov    eax,DWORD PTR [rbx]
   1400089ab:	lea    r9,[rsp+0x50]
   1400089b0:	movzx  ecx,WORD PTR [rbx+0x6]
   1400089b4:	movzx  r8d,WORD PTR [rbx+0x4]
   1400089b9:	mov    DWORD PTR [rsp+0x38],eax
   1400089bd:	mov    rax,QWORD PTR [rbx+0x10]
   1400089c1:	mov    DWORD PTR [rsp+0x30],ecx
   1400089c5:	mov    rcx,QWORD PTR [r10+0x10]
   1400089c9:	mov    DWORD PTR [rsp+0x28],r8d
   1400089ce:	mov    QWORD PTR [rsp+0x20],rax
   1400089d3:	call   0x140008104
   1400089d8:	lea    rax,[rsp+0x50]
   1400089dd:	movzx  r9d,di
   1400089e1:	lea    rcx,[rsp+0x40]
   1400089e6:	mov    QWORD PTR [rsp+0x40],rax
   1400089eb:	movzx  eax,WORD PTR [rbx+0x6]
   1400089ef:	mov    r8d,r14d
   1400089f2:	mov    QWORD PTR [rsp+0x30],rcx
   1400089f7:	mov    rdx,rsi
   1400089fa:	mov    rcx,rbx
   1400089fd:	mov    DWORD PTR [rsp+0x20],eax
   140008a01:	call   0x140008770
   140008a06:	mov    rcx,QWORD PTR [rbp+0x750]
   140008a0d:	xor    rcx,rsp
   140008a10:	call   0x14000ab80
   140008a15:	add    rsp,0x860
   140008a1c:	pop    r15
   140008a1e:	pop    r14
   140008a20:	pop    r12
   140008a22:	pop    rdi
   140008a23:	pop    rsi
   140008a24:	pop    rbx
   140008a25:	pop    rbp
   140008a26:	ret    
   140008a27:	int3   
   140008a28:	int3   
   140008a29:	int3   
   140008a2a:	int3   
   140008a2b:	int3   
   140008a2c:	int3   
   140008a2d:	int3   
   140008a2e:	int3   
   140008a2f:	int3   
   140008a30:	mov    QWORD PTR [rsp+0x8],rbx
   140008a35:	push   rdi
   140008a36:	sub    rsp,0x60
   140008a3a:	mov    rdi,rcx
   140008a3d:	mov    rcx,QWORD PTR [rip+0x65dc]        # 0x14000f020
   140008a44:	lea    rax,[rip+0x65d5]        # 0x14000f020
   140008a4b:	cmp    rcx,rax
   140008a4e:	je     0x140008a6e
   140008a50:	test   DWORD PTR [rcx+0x1c],0x20000000
   140008a57:	je     0x140008a6e
   140008a59:	mov    rcx,QWORD PTR [rcx+0x10]
   140008a5d:	lea    r8,[rip+0x4694]        # 0x14000d0f8
   140008a64:	mov    edx,0xa
   140008a69:	call   0x140001008
   140008a6e:	mov    r9d,0x1
   140008a74:	lea    rdx,[rip+0x44fd]        # 0x14000cf78
   140008a7b:	lea    rcx,[rsp+0x20]
   140008a80:	lea    r8d,[r9+0x22]
   140008a84:	call   0x1400083e8
   140008a89:	mov    eax,0x2a
   140008a8e:	test   rdi,rdi
   140008a91:	je     0x140008afd
   140008a93:	and    QWORD PTR [rdi],0x0
   140008a97:	mov    ecx,0x488
   140008a9c:	and    DWORD PTR [rsp+0x20],0x0
   140008aa1:	mov    WORD PTR [rsp+0x24],ax
   140008aa6:	call   QWORD PTR [rip+0x38b4]        # 0x14000c360
   140008aac:	mov    rbx,rax
   140008aaf:	test   rax,rax
   140008ab2:	mov    eax,0x2e
   140008ab7:	jne    0x140008ac3
   140008ab9:	mov    DWORD PTR [rsp+0x20],0x8007000e
   140008ac1:	jmp    0x140008b05
   140008ac3:	and    DWORD PTR [rsp+0x20],0x0
   140008ac8:	xor    edx,edx
   140008aca:	mov    r8d,0x488
   140008ad0:	mov    WORD PTR [rsp+0x24],ax
   140008ad5:	mov    rcx,rbx
   140008ad8:	call   0x14000b152
   140008add:	mov    DWORD PTR [rbx],0x488
   140008ae3:	mov    DWORD PTR [rbx+0x2c],0x20000
   140008aea:	mov    DWORD PTR [rbx+0x74],0x78
   140008af1:	mov    DWORD PTR [rbx+0x70],0x280
   140008af8:	mov    QWORD PTR [rdi],rbx
   140008afb:	jmp    0x140008b0a
   140008afd:	mov    DWORD PTR [rsp+0x20],0x80070057
   140008b05:	mov    WORD PTR [rsp+0x26],ax
   140008b0a:	xor    ecx,ecx
   140008b0c:	call   QWORD PTR [rip+0x383e]        # 0x14000c350
   140008b12:	mov    ebx,DWORD PTR [rsp+0x20]
   140008b16:	lea    rcx,[rsp+0x20]
   140008b1b:	call   0x1400084f8
   140008b20:	mov    eax,ebx
   140008b22:	mov    rbx,QWORD PTR [rsp+0x70]
   140008b27:	add    rsp,0x60
   140008b2b:	pop    rdi
   140008b2c:	ret    
   140008b2d:	int3   
   140008b2e:	int3   
   140008b2f:	int3   
   140008b30:	int3   
   140008b31:	int3   
   140008b32:	int3   
   140008b33:	int3   
   140008b34:	rex push rbp
   140008b36:	push   rbx
   140008b37:	push   rsi
   140008b38:	push   rdi
   140008b39:	push   r12
   140008b3b:	push   r13
   140008b3d:	push   r14
   140008b3f:	push   r15
   140008b41:	lea    rbp,[rsp-0x448]
   140008b49:	sub    rsp,0x548
   140008b50:	mov    rax,QWORD PTR [rip+0x64b1]        # 0x14000f008
   140008b57:	xor    rax,rsp
   140008b5a:	mov    QWORD PTR [rbp+0x430],rax
   140008b61:	mov    QWORD PTR [rbp-0x80],r9
   140008b65:	mov    r13,rdx
   140008b68:	mov    QWORD PTR [rsp+0x78],r8
   140008b6d:	mov    r12,rcx
   140008b70:	mov    rcx,QWORD PTR [rip+0x64a9]        # 0x14000f020
   140008b77:	lea    rax,[rip+0x64a2]        # 0x14000f020
   140008b7e:	cmp    rcx,rax
   140008b81:	je     0x140008ba1
   140008b83:	test   DWORD PTR [rcx+0x1c],0x20000000
   140008b8a:	je     0x140008ba1
   140008b8c:	mov    rcx,QWORD PTR [rcx+0x10]
   140008b90:	lea    r8,[rip+0x4561]        # 0x14000d0f8
   140008b97:	mov    edx,0xd
   140008b9c:	call   0x140001008
   140008ba1:	mov    r9d,0x1
   140008ba7:	lea    rdx,[rip+0x4402]        # 0x14000cfb0
   140008bae:	mov    r8d,0x8b
   140008bb4:	lea    rcx,[rsp+0x28]
   140008bb9:	call   0x1400083e8
   140008bbe:	xor    r8d,r8d
   140008bc1:	lea    rax,[rip+0x4568]        # 0x14000d130
   140008bc8:	or     rbx,0xffffffffffffffff
   140008bcc:	mov    QWORD PTR [rsp+0x60],rax
   140008bd1:	mov    QWORD PTR [rsp+0x70],rbx
   140008bd6:	mov    eax,0x9b
   140008bdb:	mov    DWORD PTR [rsp+0x20],r8d
   140008be0:	mov    esi,r8d
   140008be3:	mov    QWORD PTR [rsp+0x68],r8
   140008be8:	mov    r15,rbx
   140008beb:	mov    r14d,r8d
   140008bee:	mov    edi,r8d
   140008bf1:	test   r12,r12
   140008bf4:	jne    0x140008c08
   140008bf6:	mov    DWORD PTR [rsp+0x28],0x80070057
   140008bfe:	mov    WORD PTR [rsp+0x2e],ax
   140008c03:	jmp    0x140008db4
   140008c08:	mov    WORD PTR [rsp+0x2c],ax
   140008c0d:	mov    eax,0x9c
   140008c12:	test   r13,r13
   140008c15:	je     0x140008bf6
   140008c17:	mov    rcx,QWORD PTR [rsp+0x78]
   140008c1c:	mov    WORD PTR [rsp+0x2c],ax
   140008c21:	mov    eax,0x9d
   140008c26:	test   rcx,rcx
   140008c29:	je     0x140008bf6
   140008c2b:	mov    rdx,QWORD PTR [rbp-0x80]
   140008c2f:	mov    WORD PTR [rsp+0x2c],ax
   140008c34:	mov    eax,0x9e
   140008c39:	test   rdx,rdx
   140008c3c:	je     0x140008bf6
   140008c3e:	mov    DWORD PTR [r13+0x0],r8d
   140008c42:	mov    DWORD PTR [rcx],r8d
   140008c45:	lea    rcx,[rbp-0x70]
   140008c49:	mov    DWORD PTR [rdx],r8d
   140008c4c:	xor    edx,edx
   140008c4e:	mov    DWORD PTR [rsp+0x28],r8d
   140008c53:	mov    r8d,0x250
   140008c59:	mov    WORD PTR [rsp+0x2c],ax
   140008c5e:	call   0x14000b152
   140008c63:	xor    edx,edx
   140008c65:	lea    rcx,[rbp+0x1e0]
   140008c6c:	mov    r8d,0x250
   140008c72:	call   0x14000b152
   140008c77:	lea    r9,[rip+0x4472]        # 0x14000d0f0
   140008c7e:	mov    r8,r12
   140008c81:	lea    rdx,[rip+0x4340]        # 0x14000cfc8
   140008c88:	lea    rcx,[rsp+0x60]
   140008c8d:	call   0x14000a120
   140008c92:	mov    DWORD PTR [rsp+0x28],eax
   140008c96:	test   eax,eax
   140008c98:	mov    eax,0xaa
   140008c9d:	js     0x140008bfe
   140008ca3:	mov    rcx,QWORD PTR [rsp+0x60]
   140008ca8:	lea    rdx,[rbp+0x1e0]
   140008caf:	mov    WORD PTR [rsp+0x2c],ax
   140008cb4:	call   QWORD PTR [rip+0x33ee]        # 0x14000c0a8
   140008cba:	mov    QWORD PTR [rsp+0x70],rax
   140008cbf:	cmp    rax,rbx
   140008cc2:	je     0x140008ccc
   140008cc4:	mov    DWORD PTR [rsp+0x20],0x1
   140008ccc:	lea    r9,[rip+0x441d]        # 0x14000d0f0
   140008cd3:	mov    r8,r12
   140008cd6:	lea    rdx,[rip+0x42fb]        # 0x14000cfd8
   140008cdd:	lea    rcx,[rsp+0x60]
   140008ce2:	call   0x14000a120
   140008ce7:	xor    r12d,r12d
   140008cea:	mov    DWORD PTR [rsp+0x28],eax
   140008cee:	test   eax,eax
   140008cf0:	mov    eax,0xb5
   140008cf5:	js     0x140008bfe
   140008cfb:	mov    rcx,QWORD PTR [rsp+0x60]
   140008d00:	lea    rdx,[rbp-0x70]
   140008d04:	mov    WORD PTR [rsp+0x2c],ax
   140008d09:	call   QWORD PTR [rip+0x3399]        # 0x14000c0a8
   140008d0f:	mov    r15,rax
   140008d12:	cmp    rax,rbx
   140008d15:	je     0x140008d9e
   140008d1b:	lea    rax,[rbp-0x44]
   140008d1f:	inc    rbx
   140008d22:	cmp    WORD PTR [rax+rbx*2],r12w
   140008d27:	jne    0x140008d1f
   140008d29:	add    ebx,0xfffffffb
   140008d2c:	movzx  eax,WORD PTR [rbp+rbx*2-0x44]
   140008d31:	sub    eax,0x30
   140008d34:	cmp    eax,edi
   140008d36:	cmova  edi,eax
   140008d39:	inc    r14d
   140008d3c:	cmp    edi,0x7
   140008d3f:	ja     0x140008d96
   140008d41:	cmp    r14d,0x7
   140008d45:	ja     0x140008d96
   140008d47:	lea    rdx,[rbp-0x70]
   140008d4b:	mov    rcx,r15
   140008d4e:	call   QWORD PTR [rip+0x334c]        # 0x14000c0a0
   140008d54:	test   eax,eax
   140008d56:	jne    0x140008d74
   140008d58:	call   QWORD PTR [rip+0x33d2]        # 0x14000c130
   140008d5e:	mov    esi,eax
   140008d60:	cmp    eax,0x12
   140008d63:	jne    0x140008d7b
   140008d65:	mov    eax,0xd8
   140008d6a:	mov    DWORD PTR [rsp+0x28],r12d
   140008d6f:	mov    WORD PTR [rsp+0x2c],ax
   140008d74:	cmp    esi,0x12
   140008d77:	je     0x140008d9e
   140008d79:	jmp    0x140008d2c
   140008d7b:	movzx  eax,ax
   140008d7e:	or     eax,0x80070000
   140008d83:	test   esi,esi
   140008d85:	cmovle eax,esi
   140008d88:	mov    DWORD PTR [rsp+0x28],eax
   140008d8c:	mov    eax,0xd8
   140008d91:	jmp    0x140008bfe
   140008d96:	mov    edi,0x7
   140008d9b:	mov    r14d,edi
   140008d9e:	mov    eax,DWORD PTR [rsp+0x20]
   140008da2:	mov    DWORD PTR [r13+0x0],eax
   140008da6:	mov    rax,QWORD PTR [rsp+0x78]
   140008dab:	mov    DWORD PTR [rax],r14d
   140008dae:	mov    rax,QWORD PTR [rbp-0x80]
   140008db2:	mov    DWORD PTR [rax],edi
   140008db4:	mov    rcx,QWORD PTR [rsp+0x70]
   140008db9:	call   QWORD PTR [rip+0x32d9]        # 0x14000c098
   140008dbf:	mov    rcx,r15
   140008dc2:	call   QWORD PTR [rip+0x32d0]        # 0x14000c098
   140008dc8:	mov    ebx,DWORD PTR [rsp+0x28]
   140008dcc:	lea    rcx,[rsp+0x60]
   140008dd1:	call   0x140009ce8
   140008dd6:	lea    rcx,[rsp+0x28]
   140008ddb:	call   0x1400084f8
   140008de0:	mov    eax,ebx
   140008de2:	mov    rcx,QWORD PTR [rbp+0x430]
   140008de9:	xor    rcx,rsp
   140008dec:	call   0x14000ab80
   140008df1:	add    rsp,0x548
   140008df8:	pop    r15
   140008dfa:	pop    r14
   140008dfc:	pop    r13
   140008dfe:	pop    r12
   140008e00:	pop    rdi
   140008e01:	pop    rsi
   140008e02:	pop    rbx
   140008e03:	pop    rbp
   140008e04:	ret    
   140008e05:	int3   
   140008e06:	int3   
   140008e07:	int3   
   140008e08:	int3   
   140008e09:	int3   
   140008e0a:	int3   
   140008e0b:	int3   
   140008e0c:	mov    QWORD PTR [rsp+0x8],rbx
   140008e11:	mov    QWORD PTR [rsp+0x20],rdi
   140008e16:	push   rbp
   140008e17:	mov    rbp,rsp
   140008e1a:	sub    rsp,0x80
   140008e21:	mov    rdi,rcx
   140008e24:	mov    rcx,QWORD PTR [rip+0x61f5]        # 0x14000f020
   140008e2b:	lea    rax,[rip+0x61ee]        # 0x14000f020
   140008e32:	cmp    rcx,rax
   140008e35:	je     0x140008e55
   140008e37:	test   DWORD PTR [rcx+0x1c],0x20000000
   140008e3e:	je     0x140008e55
   140008e40:	mov    rcx,QWORD PTR [rcx+0x10]
   140008e44:	lea    r8,[rip+0x42ad]        # 0x14000d0f8
   140008e4b:	mov    edx,0xe
   140008e50:	call   0x140001008
   140008e55:	mov    ebx,0x1
   140008e5a:	lea    rdx,[rip+0x418f]        # 0x14000cff0
   140008e61:	mov    r9d,ebx
   140008e64:	lea    rcx,[rbp-0x40]
   140008e68:	mov    r8d,0xf8
   140008e6e:	call   0x1400083e8
   140008e73:	mov    WORD PTR [rbp+0x18],bx
   140008e77:	xor    r9d,r9d
   140008e7a:	xor    ebx,ebx
   140008e7c:	mov    edx,0xc0000000
   140008e81:	mov    QWORD PTR [rsp+0x30],rbx
   140008e86:	mov    rcx,rdi
   140008e89:	mov    DWORD PTR [rsp+0x28],0x80
   140008e91:	mov    DWORD PTR [rbp+0x20],ebx
   140008e94:	lea    r8d,[rbx+0x3]
   140008e98:	mov    DWORD PTR [rsp+0x20],r8d
   140008e9d:	call   QWORD PTR [rip+0x3235]        # 0x14000c0d8
   140008ea3:	mov    rdi,rax
   140008ea6:	inc    rax
   140008ea9:	test   rax,0xfffffffffffffffe
   140008eaf:	jne    0x140008ec6
   140008eb1:	call   0x1400063e4
   140008eb6:	mov    ebx,eax
   140008eb8:	mov    DWORD PTR [rbp-0x40],eax
   140008ebb:	mov    eax,0x106
   140008ec0:	mov    WORD PTR [rbp-0x3a],ax
   140008ec4:	jmp    0x140008f22
   140008ec6:	mov    QWORD PTR [rsp+0x38],rbx
   140008ecb:	lea    r8,[rbp+0x18]
   140008ecf:	mov    eax,0x106
   140008ed4:	mov    DWORD PTR [rbp-0x40],ebx
   140008ed7:	mov    WORD PTR [rbp-0x3c],ax
   140008edb:	mov    r9d,0x2
   140008ee1:	lea    rax,[rbp+0x20]
   140008ee5:	mov    edx,0x9c040
   140008eea:	mov    QWORD PTR [rsp+0x30],rax
   140008eef:	mov    rcx,rdi
   140008ef2:	mov    DWORD PTR [rsp+0x28],ebx
   140008ef6:	mov    QWORD PTR [rsp+0x20],rbx
   140008efb:	call   QWORD PTR [rip+0x31cf]        # 0x14000c0d0
   140008f01:	test   eax,eax
   140008f03:	jne    0x140008f16
   140008f05:	call   0x1400063e4
   140008f0a:	mov    ebx,eax
   140008f0c:	mov    DWORD PTR [rbp-0x40],eax
   140008f0f:	mov    eax,0x10f
   140008f14:	jmp    0x140008ec0
   140008f16:	mov    eax,0x10f
   140008f1b:	mov    DWORD PTR [rbp-0x40],ebx
   140008f1e:	mov    WORD PTR [rbp-0x3c],ax
   140008f22:	lea    rax,[rdi-0x1]
   140008f26:	cmp    rax,0xfffffffffffffffd
   140008f2a:	ja     0x140008f35
   140008f2c:	mov    rcx,rdi
   140008f2f:	call   QWORD PTR [rip+0x317b]        # 0x14000c0b0
   140008f35:	lea    rcx,[rbp-0x40]
   140008f39:	call   0x1400084f8
   140008f3e:	lea    r11,[rsp+0x80]
   140008f46:	mov    eax,ebx
   140008f48:	mov    rbx,QWORD PTR [r11+0x10]
   140008f4c:	mov    rdi,QWORD PTR [r11+0x28]
   140008f50:	mov    rsp,r11
   140008f53:	pop    rbp
   140008f54:	ret    
   140008f55:	int3   
   140008f56:	int3   
   140008f57:	int3   
   140008f58:	int3   
   140008f59:	int3   
   140008f5a:	int3   
   140008f5b:	int3   
   140008f5c:	mov    rax,rsp
   140008f5f:	mov    QWORD PTR [rax+0x10],rbx
   140008f63:	mov    QWORD PTR [rax+0x18],rsi
   140008f67:	mov    QWORD PTR [rax+0x20],rdi
   140008f6b:	push   rbp
   140008f6c:	lea    rbp,[rax-0x5f]
   140008f70:	sub    rsp,0xa0
   140008f77:	mov    rcx,QWORD PTR [rip+0x60a2]        # 0x14000f020
   140008f7e:	lea    rdi,[rip+0x609b]        # 0x14000f020
   140008f85:	lea    rsi,[rip+0x416c]        # 0x14000d0f8
   140008f8c:	mov    ebx,0x20000000
   140008f91:	cmp    rcx,rdi
   140008f94:	je     0x140008fac
   140008f96:	test   DWORD PTR [rcx+0x1c],ebx
   140008f99:	je     0x140008fac
   140008f9b:	mov    rcx,QWORD PTR [rcx+0x10]
   140008f9f:	mov    edx,0xf
   140008fa4:	mov    r8,rsi
   140008fa7:	call   0x140001008
   140008fac:	mov    r9d,0x1
   140008fb2:	lea    rdx,[rip+0x404f]        # 0x14000d008
   140008fb9:	mov    r8d,0x126
   140008fbf:	lea    rcx,[rbp+0x1f]
   140008fc3:	call   0x1400083e8
   140008fc8:	mov    rcx,QWORD PTR [rip+0x6051]        # 0x14000f020
   140008fcf:	cmp    rcx,rdi
   140008fd2:	je     0x140008fea
   140008fd4:	test   DWORD PTR [rcx+0x1c],ebx
   140008fd7:	je     0x140008fea
   140008fd9:	mov    rcx,QWORD PTR [rcx+0x10]
   140008fdd:	mov    edx,0xc
   140008fe2:	mov    r8,rsi
   140008fe5:	call   0x140001008
   140008fea:	mov    r9d,0x1
   140008ff0:	lea    rdx,[rip+0x3fa1]        # 0x14000cf98
   140008ff7:	lea    rcx,[rbp-0x19]
   140008ffb:	lea    r8d,[r9+0x5d]
   140008fff:	call   0x1400083e8
   140009004:	and    QWORD PTR [rbp+0x67],0x0
   140009009:	lea    rcx,[rbp+0x67]
   14000900d:	and    DWORD PTR [rbp-0x19],0x0
   140009011:	mov    eax,0x62
   140009016:	mov    WORD PTR [rbp-0x15],ax
   14000901a:	call   0x140008a30
   14000901f:	mov    DWORD PTR [rbp-0x19],eax
   140009022:	test   eax,eax
   140009024:	mov    eax,0x64
   140009029:	jns    0x140009031
   14000902b:	mov    WORD PTR [rbp-0x13],ax
   14000902f:	jmp    0x140009069
   140009031:	mov    r8,QWORD PTR [rbp+0x67]
   140009035:	lea    rdx,[rip+0x40a4]        # 0x14000d0e0
   14000903c:	xor    r9d,r9d
   14000903f:	mov    WORD PTR [rbp-0x15],ax
   140009043:	xor    ecx,ecx
   140009045:	call   QWORD PTR [rip+0x2fe5]        # 0x14000c030
   14000904b:	movzx  ecx,ax
   14000904e:	or     ecx,0x80070000
   140009054:	test   eax,eax
   140009056:	cmovle ecx,eax
   140009059:	mov    eax,0x66
   14000905e:	mov    DWORD PTR [rbp-0x19],ecx
   140009061:	test   ecx,ecx
   140009063:	js     0x14000902b
   140009065:	mov    WORD PTR [rbp-0x15],ax
   140009069:	mov    rcx,QWORD PTR [rbp+0x67]
   14000906d:	call   QWORD PTR [rip+0x32dd]        # 0x14000c350
   140009073:	mov    ebx,DWORD PTR [rbp-0x19]
   140009076:	lea    rcx,[rbp-0x19]
   14000907a:	call   0x1400084f8
   14000907f:	test   ebx,ebx
   140009081:	jns    0x1400090f5
   140009083:	cmp    ebx,0x80071069
   140009089:	jne    0x1400090c2
   14000908b:	mov    rcx,QWORD PTR [rip+0x5f8e]        # 0x14000f020
   140009092:	cmp    rcx,rdi
   140009095:	je     0x140009132
   14000909b:	test   DWORD PTR [rcx+0x1c],0x8000000
   1400090a2:	je     0x140009132
   1400090a8:	mov    rcx,QWORD PTR [rcx+0x10]
   1400090ac:	lea    r9,[rip+0x402d]        # 0x14000d0e0
   1400090b3:	mov    edx,0x10
   1400090b8:	mov    r8,rsi
   1400090bb:	call   0x140002544
   1400090c0:	jmp    0x140009132
   1400090c2:	mov    rcx,QWORD PTR [rip+0x5f57]        # 0x14000f020
   1400090c9:	cmp    rcx,rdi
   1400090cc:	je     0x140009132
   1400090ce:	test   DWORD PTR [rcx+0x1c],0x4000000
   1400090d5:	je     0x140009132
   1400090d7:	mov    rcx,QWORD PTR [rcx+0x10]
   1400090db:	lea    r9,[rip+0x3ffe]        # 0x14000d0e0
   1400090e2:	mov    edx,0x11
   1400090e7:	mov    DWORD PTR [rsp+0x20],ebx
   1400090eb:	mov    r8,rsi
   1400090ee:	call   0x1400025c0
   1400090f3:	jmp    0x140009132
   1400090f5:	mov    rcx,QWORD PTR [rip+0x5f24]        # 0x14000f020
   1400090fc:	cmp    rcx,rdi
   1400090ff:	je     0x140009122
   140009101:	test   DWORD PTR [rcx+0x1c],0x8000000
   140009108:	je     0x140009122
   14000910a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000910e:	lea    r9,[rip+0x3fcb]        # 0x14000d0e0
   140009115:	mov    edx,0x12
   14000911a:	mov    r8,rsi
   14000911d:	call   0x140002544
   140009122:	mov    eax,0x13a
   140009127:	mov    DWORD PTR [rbp+0x1f],0x1
   14000912e:	mov    WORD PTR [rbp+0x23],ax
   140009132:	mov    ebx,DWORD PTR [rbp+0x1f]
   140009135:	lea    rcx,[rbp+0x1f]
   140009139:	call   0x1400084f8
   14000913e:	lea    r11,[rsp+0xa0]
   140009146:	mov    eax,ebx
   140009148:	mov    rbx,QWORD PTR [r11+0x18]
   14000914c:	mov    rsi,QWORD PTR [r11+0x20]
   140009150:	mov    rdi,QWORD PTR [r11+0x28]
   140009154:	mov    rsp,r11
   140009157:	pop    rbp
   140009158:	ret    
   140009159:	int3   
   14000915a:	int3   
   14000915b:	int3   
   14000915c:	int3   
   14000915d:	int3   
   14000915e:	int3   
   14000915f:	int3   
   140009160:	mov    DWORD PTR [rsp+0x10],edx
   140009164:	push   rbp
   140009165:	push   rbx
   140009166:	push   rsi
   140009167:	push   rdi
   140009168:	push   r12
   14000916a:	push   r14
   14000916c:	push   r15
   14000916e:	lea    rbp,[rsp-0x27]
   140009173:	sub    rsp,0x90
   14000917a:	mov    r14,rcx
   14000917d:	mov    rcx,QWORD PTR [rip+0x5e9c]        # 0x14000f020
   140009184:	lea    rax,[rip+0x5e95]        # 0x14000f020
   14000918b:	cmp    rcx,rax
   14000918e:	je     0x1400091ae
   140009190:	test   DWORD PTR [rcx+0x1c],0x20000000
   140009197:	je     0x1400091ae
   140009199:	mov    rcx,QWORD PTR [rcx+0x10]
   14000919d:	lea    r8,[rip+0x3f54]        # 0x14000d0f8
   1400091a4:	mov    edx,0x13
   1400091a9:	call   0x140001008
   1400091ae:	mov    r9d,0x1
   1400091b4:	lea    rdx,[rip+0x3e65]        # 0x14000d020
   1400091bb:	mov    r8d,0x15a
   1400091c1:	lea    rcx,[rbp-0x19]
   1400091c5:	call   0x1400083e8
   1400091ca:	and    DWORD PTR [rbp+0x77],0x0
   1400091ce:	lea    rax,[rip+0x3f5b]        # 0x14000d130
   1400091d5:	and    DWORD PTR [rbp+0x6f],0x0
   1400091d9:	and    DWORD PTR [rbp+0x67],0x0
   1400091dd:	and    QWORD PTR [rbp-0x31],0x0
   1400091e2:	and    QWORD PTR [rbp-0x21],0x0
   1400091e7:	mov    QWORD PTR [rbp-0x39],rax
   1400091eb:	mov    QWORD PTR [rbp-0x29],rax
   1400091ef:	test   r14,r14
   1400091f2:	jne    0x140009203
   1400091f4:	mov    ebx,0x80070057
   1400091f9:	mov    eax,0x165
   1400091fe:	jmp    0x1400093b6
   140009203:	and    DWORD PTR [rbp-0x19],0x0
   140009207:	lea    r9,[rbp+0x67]
   14000920b:	mov    eax,0x166
   140009210:	lea    r8,[rbp+0x6f]
   140009214:	lea    rdx,[rbp+0x77]
   140009218:	mov    WORD PTR [rbp-0x15],ax
   14000921c:	mov    rcx,r14
   14000921f:	call   0x140008b34
   140009224:	mov    ebx,eax
   140009226:	mov    DWORD PTR [rbp-0x19],eax
   140009229:	test   eax,eax
   14000922b:	mov    eax,0x16d
   140009230:	js     0x1400093b9
   140009236:	mov    WORD PTR [rbp-0x15],ax
   14000923a:	mov    eax,DWORD PTR [rbp+0x6f]
   14000923d:	test   eax,eax
   14000923f:	jne    0x140009254
   140009241:	xor    ebx,ebx
   140009243:	mov    eax,0x172
   140009248:	mov    DWORD PTR [rbp-0x19],ebx
   14000924b:	mov    WORD PTR [rbp-0x15],ax
   14000924f:	jmp    0x1400093bd
   140009254:	mov    esi,DWORD PTR [rbp+0x67]
   140009257:	mov    ecx,0x2
   14000925c:	neg    esi
   14000925e:	mov    r15d,ecx
   140009261:	mov    edi,ecx
   140009263:	cmp    esi,ecx
   140009265:	jg     0x1400093bd
   14000926b:	lea    r12d,[rcx+0x1]
   14000926f:	sub    r12d,eax
   140009272:	lea    r8,[rip+0x3e77]        # 0x14000d0f0
   140009279:	mov    QWORD PTR [rsp+0x20],r8
   14000927e:	mov    r8,r14
   140009281:	lea    rcx,[rip+0x3db0]        # 0x14000d038
   140009288:	cmp    edi,r12d
   14000928b:	jl     0x1400092e6
   14000928d:	mov    rdx,rcx
   140009290:	mov    r9d,edi
   140009293:	lea    rcx,[rbp-0x39]
   140009297:	call   0x14000a120
   14000929c:	mov    ebx,eax
   14000929e:	mov    DWORD PTR [rbp-0x19],eax
   1400092a1:	test   eax,eax
   1400092a3:	mov    eax,0x181
   1400092a8:	js     0x1400093b9
   1400092ae:	mov    rcx,QWORD PTR [rbp-0x39]
   1400092b2:	mov    WORD PTR [rbp-0x15],ax
   1400092b6:	call   QWORD PTR [rip+0x2e3c]        # 0x14000c0f8
   1400092bc:	test   eax,eax
   1400092be:	jne    0x140009380
   1400092c4:	call   QWORD PTR [rip+0x2e66]        # 0x14000c130
   1400092ca:	cmp    eax,0x2
   1400092cd:	jne    0x14000938e
   1400092d3:	mov    eax,0x185
   1400092d8:	xor    ebx,ebx
   1400092da:	mov    WORD PTR [rbp-0x15],ax
   1400092de:	mov    DWORD PTR [rbp-0x19],ebx
   1400092e1:	jmp    0x140009383
   1400092e6:	mov    eax,edi
   1400092e8:	cdq    
   1400092e9:	xor    eax,edx
   1400092eb:	sub    eax,edx
   1400092ed:	lea    rdx,[rip+0x3d5c]        # 0x14000d050
   1400092f4:	test   edi,edi
   1400092f6:	mov    r9d,eax
   1400092f9:	cmovns rdx,rcx
   1400092fd:	lea    rcx,[rbp-0x39]
   140009301:	call   0x14000a120
   140009306:	mov    ebx,eax
   140009308:	mov    DWORD PTR [rbp-0x19],eax
   14000930b:	test   eax,eax
   14000930d:	mov    eax,0x191
   140009312:	js     0x1400093b9
   140009318:	mov    WORD PTR [rbp-0x15],ax
   14000931c:	lea    rdx,[rip+0x3d15]        # 0x14000d038
   140009323:	lea    rax,[rip+0x3dc6]        # 0x14000d0f0
   14000932a:	mov    r9d,r15d
   14000932d:	mov    r8,r14
   140009330:	mov    QWORD PTR [rsp+0x20],rax
   140009335:	lea    rcx,[rbp-0x29]
   140009339:	call   0x14000a120
   14000933e:	mov    ebx,eax
   140009340:	mov    DWORD PTR [rbp-0x19],eax
   140009343:	test   eax,eax
   140009345:	mov    eax,0x196
   14000934a:	js     0x1400093b9
   14000934c:	mov    rdx,QWORD PTR [rbp-0x29]
   140009350:	mov    r8d,0x1
   140009356:	mov    rcx,QWORD PTR [rbp-0x39]
   14000935a:	mov    WORD PTR [rbp-0x15],ax
   14000935e:	call   QWORD PTR [rip+0x2e1c]        # 0x14000c180
   140009364:	test   eax,eax
   140009366:	jne    0x14000937d
   140009368:	call   QWORD PTR [rip+0x2dc2]        # 0x14000c130
   14000936e:	cmp    eax,0x2
   140009371:	jne    0x1400093a3
   140009373:	mov    eax,0x19b
   140009378:	jmp    0x1400092d8
   14000937d:	dec    r15d
   140009380:	mov    ebx,DWORD PTR [rbp-0x19]
   140009383:	dec    edi
   140009385:	cmp    edi,esi
   140009387:	jl     0x1400093bd
   140009389:	jmp    0x140009272
   14000938e:	movzx  ebx,ax
   140009391:	or     ebx,0x80070000
   140009397:	test   eax,eax
   140009399:	cmovle ebx,eax
   14000939c:	mov    eax,0x185
   1400093a1:	jmp    0x1400093b6
   1400093a3:	movzx  ebx,ax
   1400093a6:	or     ebx,0x80070000
   1400093ac:	test   eax,eax
   1400093ae:	cmovle ebx,eax
   1400093b1:	mov    eax,0x19b
   1400093b6:	mov    DWORD PTR [rbp-0x19],ebx
   1400093b9:	mov    WORD PTR [rbp-0x13],ax
   1400093bd:	lea    rcx,[rbp-0x29]
   1400093c1:	call   0x140009ce8
   1400093c6:	lea    rcx,[rbp-0x39]
   1400093ca:	call   0x140009ce8
   1400093cf:	lea    rcx,[rbp-0x19]
   1400093d3:	call   0x1400084f8
   1400093d8:	mov    eax,ebx
   1400093da:	add    rsp,0x90
   1400093e1:	pop    r15
   1400093e3:	pop    r14
   1400093e5:	pop    r12
   1400093e7:	pop    rdi
   1400093e8:	pop    rsi
   1400093e9:	pop    rbx
   1400093ea:	pop    rbp
   1400093eb:	ret    
   1400093ec:	int3   
   1400093ed:	int3   
   1400093ee:	int3   
   1400093ef:	int3   
   1400093f0:	int3   
   1400093f1:	int3   
   1400093f2:	int3   
   1400093f3:	int3   
   1400093f4:	mov    rax,rsp
   1400093f7:	mov    QWORD PTR [rax+0x8],rbx
   1400093fb:	mov    QWORD PTR [rax+0x10],rsi
   1400093ff:	mov    QWORD PTR [rax+0x18],rdi
   140009403:	mov    QWORD PTR [rax+0x20],r13
   140009407:	push   rbp
   140009408:	push   r14
   14000940a:	push   r15
   14000940c:	lea    rbp,[rax-0x5f]
   140009410:	sub    rsp,0x90
   140009417:	mov    rsi,rcx
   14000941a:	mov    rcx,QWORD PTR [rip+0x5bff]        # 0x14000f020
   140009421:	lea    rax,[rip+0x5bf8]        # 0x14000f020
   140009428:	cmp    rcx,rax
   14000942b:	je     0x14000944b
   14000942d:	test   DWORD PTR [rcx+0x1c],0x20000000
   140009434:	je     0x14000944b
   140009436:	mov    rcx,QWORD PTR [rcx+0x10]
   14000943a:	lea    r8,[rip+0x3cb7]        # 0x14000d0f8
   140009441:	mov    edx,0x14
   140009446:	call   0x140001008
   14000944b:	mov    r9d,0x1
   140009451:	lea    rdx,[rip+0x3c10]        # 0x14000d068
   140009458:	mov    r8d,0x1bb
   14000945e:	lea    rcx,[rbp+0x7]
   140009462:	call   0x1400083e8
   140009467:	xor    r15d,r15d
   14000946a:	lea    rax,[rip+0x3cbf]        # 0x14000d130
   140009471:	mov    QWORD PTR [rbp-0x9],rax
   140009475:	mov    QWORD PTR [rbp-0x19],rax
   140009479:	mov    QWORD PTR [rbp-0x1],r15
   14000947d:	mov    QWORD PTR [rbp-0x11],r15
   140009481:	test   rsi,rsi
   140009484:	jne    0x1400094d5
   140009486:	mov    ebx,0x80070057
   14000948b:	mov    eax,0x1c3
   140009490:	mov    DWORD PTR [rbp+0x7],ebx
   140009493:	mov    WORD PTR [rbp+0xd],ax
   140009497:	lea    rcx,[rbp-0x19]
   14000949b:	call   0x140009ce8
   1400094a0:	lea    rcx,[rbp-0x9]
   1400094a4:	call   0x140009ce8
   1400094a9:	lea    rcx,[rbp+0x7]
   1400094ad:	call   0x1400084f8
   1400094b2:	lea    r11,[rsp+0x90]
   1400094ba:	mov    eax,ebx
   1400094bc:	mov    rbx,QWORD PTR [r11+0x20]
   1400094c0:	mov    rsi,QWORD PTR [r11+0x28]
   1400094c4:	mov    rdi,QWORD PTR [r11+0x30]
   1400094c8:	mov    r13,QWORD PTR [r11+0x38]
   1400094cc:	mov    rsp,r11
   1400094cf:	pop    r15
   1400094d1:	pop    r14
   1400094d3:	pop    rbp
   1400094d4:	ret    
   1400094d5:	mov    eax,0x1c4
   1400094da:	mov    DWORD PTR [rbp+0x7],r15d
   1400094de:	mov    rcx,rsi
   1400094e1:	mov    WORD PTR [rbp+0xb],ax
   1400094e5:	call   0x140009160
   1400094ea:	lea    rdi,[rip+0x3bff]        # 0x14000d0f0
   1400094f1:	xor    r9d,r9d
   1400094f4:	mov    r8,rsi
   1400094f7:	mov    QWORD PTR [rsp+0x20],rdi
   1400094fc:	lea    rdx,[rip+0x3b35]        # 0x14000d038
   140009503:	lea    rcx,[rbp-0x19]
   140009507:	call   0x14000a120
   14000950c:	mov    ebx,eax
   14000950e:	mov    DWORD PTR [rbp+0x7],eax
   140009511:	test   eax,eax
   140009513:	mov    eax,0x1cb
   140009518:	js     0x140009493
   14000951e:	mov    rcx,QWORD PTR [rbp-0x19]
   140009522:	mov    WORD PTR [rbp+0xb],ax
   140009526:	call   QWORD PTR [rip+0x2bd4]        # 0x14000c100
   14000952c:	cmp    eax,0xffffffff
   14000952f:	jne    0x140009553
   140009531:	call   QWORD PTR [rip+0x2bf9]        # 0x14000c130
   140009537:	add    eax,0xfffffffe
   14000953a:	cmp    eax,0x1
   14000953d:	ja     0x140009553
   14000953f:	mov    ebx,r15d
   140009542:	mov    eax,0x1d3
   140009547:	mov    DWORD PTR [rbp+0x7],ebx
   14000954a:	mov    WORD PTR [rbp+0xb],ax
   14000954e:	jmp    0x140009497
   140009553:	mov    r14d,0x2
   140009559:	mov    QWORD PTR [rsp+0x20],rdi
   14000955e:	mov    r9d,r14d
   140009561:	lea    rdx,[rip+0x3ad0]        # 0x14000d038
   140009568:	mov    r8,rsi
   14000956b:	lea    rcx,[rbp-0x19]
   14000956f:	call   0x14000a120
   140009574:	mov    ebx,eax
   140009576:	mov    DWORD PTR [rbp+0x7],eax
   140009579:	test   eax,eax
   14000957b:	mov    eax,0x1d8
   140009580:	js     0x140009493
   140009586:	mov    rdi,QWORD PTR [rbp-0x19]
   14000958a:	mov    rcx,rdi
   14000958d:	mov    WORD PTR [rbp+0xb],ax
   140009591:	call   QWORD PTR [rip+0x2b61]        # 0x14000c0f8
   140009597:	mov    r13d,0x1f3
   14000959d:	lea    rax,[rip+0x3b4c]        # 0x14000d0f0
   1400095a4:	mov    r8,rsi
   1400095a7:	lea    r9d,[r14-0x1]
   1400095ab:	mov    QWORD PTR [rsp+0x20],rax
   1400095b0:	lea    rdx,[rip+0x3a81]        # 0x14000d038
   1400095b7:	lea    rcx,[rbp-0x9]
   1400095bb:	call   0x14000a120
   1400095c0:	mov    ebx,eax
   1400095c2:	mov    DWORD PTR [rbp+0x7],eax
   1400095c5:	test   eax,eax
   1400095c7:	mov    eax,0x1df
   1400095cc:	js     0x140009493
   1400095d2:	mov    rcx,QWORD PTR [rbp-0x9]
   1400095d6:	mov    r8d,0x1
   1400095dc:	mov    rdx,rdi
   1400095df:	mov    WORD PTR [rbp+0xb],ax
   1400095e3:	call   QWORD PTR [rip+0x2b97]        # 0x14000c180
   1400095e9:	test   eax,eax
   1400095eb:	jne    0x140009615
   1400095ed:	call   QWORD PTR [rip+0x2b3d]        # 0x14000c130
   1400095f3:	cmp    eax,0x20
   1400095f6:	ja     0x140009659
   1400095f8:	movabs rdx,0x100000024
   140009602:	bt     rdx,rax
   140009606:	jae    0x140009659
   140009608:	mov    eax,0x1ec
   14000960d:	mov    DWORD PTR [rbp+0x7],r15d
   140009611:	mov    WORD PTR [rbp+0xb],ax
   140009615:	mov    rcx,rdi
   140009618:	call   0x140008e0c
   14000961d:	cmp    DWORD PTR [rbp-0x11],r15d
   140009621:	je     0x14000962b
   140009623:	mov    DWORD PTR [rbp-0x11],r15d
   140009627:	mov    WORD PTR [rdi],r15w
   14000962b:	mov    rdx,QWORD PTR [rbp-0x9]
   14000962f:	lea    rcx,[rbp-0x19]
   140009633:	call   0x14000a1c4
   140009638:	mov    DWORD PTR [rbp+0x7],eax
   14000963b:	mov    ebx,eax
   14000963d:	test   eax,eax
   14000963f:	js     0x140009674
   140009641:	mov    WORD PTR [rbp+0xb],r13w
   140009646:	add    r14d,0xffffffff
   14000964a:	je     0x140009497
   140009650:	mov    rdi,QWORD PTR [rbp-0x19]
   140009654:	jmp    0x14000959d
   140009659:	movzx  ebx,ax
   14000965c:	or     ebx,0x80070000
   140009662:	test   eax,eax
   140009664:	cmovle ebx,eax
   140009667:	mov    eax,0x1ec
   14000966c:	mov    DWORD PTR [rbp+0x7],ebx
   14000966f:	jmp    0x140009493
   140009674:	mov    WORD PTR [rbp+0xd],r13w
   140009679:	jmp    0x140009497
   14000967e:	int3   
   14000967f:	int3   
   140009680:	int3   
   140009681:	int3   
   140009682:	int3   
   140009683:	int3   
   140009684:	mov    DWORD PTR [rsp+0x18],r8d
   140009689:	mov    QWORD PTR [rsp+0x8],rcx
   14000968e:	push   rbp
   14000968f:	push   rbx
   140009690:	push   rsi
   140009691:	push   rdi
   140009692:	push   r12
   140009694:	push   r14
   140009696:	push   r15
   140009698:	mov    rbp,rsp
   14000969b:	sub    rsp,0x80
   1400096a2:	mov    r14,r9
   1400096a5:	mov    rdi,rdx
   1400096a8:	mov    rcx,QWORD PTR [rip+0x5971]        # 0x14000f020
   1400096af:	lea    rax,[rip+0x596a]        # 0x14000f020
   1400096b6:	cmp    rcx,rax
   1400096b9:	je     0x1400096d9
   1400096bb:	test   DWORD PTR [rcx+0x1c],0x20000000
   1400096c2:	je     0x1400096d9
   1400096c4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400096c8:	lea    r8,[rip+0x3a29]        # 0x14000d0f8
   1400096cf:	mov    edx,0x15
   1400096d4:	call   0x140001008
   1400096d9:	mov    r9d,0x1
   1400096df:	lea    rdx,[rip+0x3992]        # 0x14000d078
   1400096e6:	mov    r8d,0x215
   1400096ec:	lea    rcx,[rbp-0x38]
   1400096f0:	call   0x1400083e8
   1400096f5:	xor    r15d,r15d
   1400096f8:	lea    r12,[rip+0x3a31]        # 0x14000d130
   1400096ff:	mov    DWORD PTR [rbp+0x40],r15d
   140009703:	mov    ebx,r15d
   140009706:	mov    QWORD PTR [rbp-0x50],rbx
   14000970a:	mov    DWORD PTR [rbp+0x50],r15d
   14000970e:	mov    DWORD PTR [rbp+0x58],r15d
   140009712:	mov    QWORD PTR [rbp-0x48],r12
   140009716:	mov    QWORD PTR [rbp-0x40],r15
   14000971a:	test   r14,r14
   14000971d:	je     0x140009723
   14000971f:	or     QWORD PTR [r14],0xffffffffffffffff
   140009723:	mov    rsi,QWORD PTR [rbp+0x60]
   140009727:	test   rsi,rsi
   14000972a:	je     0x14000972f
   14000972c:	mov    QWORD PTR [rsi],r15
   14000972f:	mov    eax,0x225
   140009734:	mov    WORD PTR [rbp-0x34],ax
   140009738:	mov    eax,0x226
   14000973d:	test   r14,r14
   140009740:	jne    0x140009752
   140009742:	mov    DWORD PTR [rbp-0x38],0x80070057
   140009749:	mov    WORD PTR [rbp-0x32],ax
   14000974d:	jmp    0x1400098d0
   140009752:	mov    WORD PTR [rbp-0x34],ax
   140009756:	mov    eax,0x227
   14000975b:	test   rdi,rdi
   14000975e:	je     0x140009742
   140009760:	lea    r9,[rbp+0x58]
   140009764:	mov    DWORD PTR [rbp-0x38],r15d
   140009768:	lea    r8,[rbp+0x50]
   14000976c:	mov    WORD PTR [rbp-0x34],ax
   140009770:	lea    rdx,[rbp+0x40]
   140009774:	mov    rcx,rdi
   140009777:	call   0x140008b34
   14000977c:	mov    DWORD PTR [rbp-0x38],eax
   14000977f:	test   eax,eax
   140009781:	mov    eax,0x230
   140009786:	js     0x140009749
   140009788:	mov    WORD PTR [rbp-0x34],ax
   14000978c:	mov    eax,DWORD PTR [rbp+0x50]
   14000978f:	cmp    DWORD PTR [rbp+0x40],r15d
   140009793:	jne    0x140009902
   140009799:	test   eax,eax
   14000979b:	jne    0x140009906
   1400097a1:	lea    r9,[rip+0x3948]        # 0x14000d0f0
   1400097a8:	mov    r8,rdi
   1400097ab:	lea    rdx,[rip+0x3816]        # 0x14000cfc8
   1400097b2:	lea    rcx,[rbp-0x48]
   1400097b6:	call   0x14000a120
   1400097bb:	mov    DWORD PTR [rbp-0x38],eax
   1400097be:	test   eax,eax
   1400097c0:	mov    eax,0x234
   1400097c5:	js     0x140009749
   1400097c7:	lea    rcx,[rbp-0x50]
   1400097cb:	mov    WORD PTR [rbp-0x34],ax
   1400097cf:	call   0x140008a30
   1400097d4:	mov    rbx,QWORD PTR [rbp-0x50]
   1400097d8:	test   eax,eax
   1400097da:	mov    DWORD PTR [rbp-0x38],eax
   1400097dd:	mov    eax,0x245
   1400097e2:	js     0x140009749
   1400097e8:	mov    rdi,QWORD PTR [rbp-0x48]
   1400097ec:	mov    edx,0x104
   1400097f1:	mov    WORD PTR [rbp-0x34],ax
   1400097f5:	mov    r9,rdi
   1400097f8:	mov    DWORD PTR [rbx+0x40],0x2
   1400097ff:	mov    r8d,r15d
   140009802:	mov    DWORD PTR [rbx+0x30],0x40
   140009809:	mov    DWORD PTR [rbx+0x34],0x3
   140009810:	mov    DWORD PTR [rbx+0x38],0x6
   140009817:	mov    DWORD PTR [rbx+0x3c],0xa
   14000981e:	mov    DWORD PTR [rbx+0x44],0xf
   140009825:	mov    ecx,DWORD PTR [rbx+0x70]
   140009828:	add    rcx,rbx
   14000982b:	sub    r9,rcx
   14000982e:	lea    rax,[rdx+0x7ffffefa]
   140009835:	test   rax,rax
   140009838:	je     0x140009851
   14000983a:	movzx  eax,WORD PTR [r9+rcx*1]
   14000983f:	test   ax,ax
   140009842:	je     0x140009851
   140009844:	mov    WORD PTR [rcx],ax
   140009847:	add    rcx,0x2
   14000984b:	sub    rdx,0x1
   14000984f:	jne    0x14000982e
   140009851:	test   rdx,rdx
   140009854:	jne    0x140009860
   140009856:	sub    rcx,0x2
   14000985a:	mov    r8d,0x8007007a
   140009860:	mov    WORD PTR [rcx],r15w
   140009864:	mov    eax,0x24d
   140009869:	mov    DWORD PTR [rbp-0x38],r8d
   14000986d:	test   r8d,r8d
   140009870:	js     0x140009749
   140009876:	mov    r8,rbx
   140009879:	mov    WORD PTR [rbp-0x34],ax
   14000987d:	lea    rdx,[rip+0x3044]        # 0x14000c8c8
   140009884:	mov    rcx,r14
   140009887:	call   QWORD PTR [rip+0x279b]        # 0x14000c028
   14000988d:	cmp    eax,0xb7
   140009892:	je     0x1400098b6
   140009894:	movzx  ecx,ax
   140009897:	or     ecx,0x80070000
   14000989d:	test   eax,eax
   14000989f:	cmovle ecx,eax
   1400098a2:	mov    eax,0x253
   1400098a7:	mov    DWORD PTR [rbp-0x38],ecx
   1400098aa:	test   ecx,ecx
   1400098ac:	js     0x140009749
   1400098b2:	mov    WORD PTR [rbp-0x34],ax
   1400098b6:	test   rsi,rsi
   1400098b9:	je     0x1400098d0
   1400098bb:	cmp    rdi,r12
   1400098be:	mov    QWORD PTR [rbp-0x48],r12
   1400098c2:	mov    rax,r15
   1400098c5:	mov    QWORD PTR [rbp-0x40],r15
   1400098c9:	cmovne rax,rdi
   1400098cd:	mov    QWORD PTR [rsi],rax
   1400098d0:	mov    rcx,rbx
   1400098d3:	call   QWORD PTR [rip+0x2a77]        # 0x14000c350
   1400098d9:	mov    ebx,DWORD PTR [rbp-0x38]
   1400098dc:	lea    rcx,[rbp-0x48]
   1400098e0:	call   0x140009ce8
   1400098e5:	lea    rcx,[rbp-0x38]
   1400098e9:	call   0x1400084f8
   1400098ee:	mov    eax,ebx
   1400098f0:	add    rsp,0x80
   1400098f7:	pop    r15
   1400098f9:	pop    r14
   1400098fb:	pop    r12
   1400098fd:	pop    rdi
   1400098fe:	pop    rsi
   1400098ff:	pop    rbx
   140009900:	pop    rbp
   140009901:	ret    
   140009902:	test   eax,eax
   140009904:	je     0x140009941
   140009906:	mov    r9d,DWORD PTR [rbp+0x58]
   14000990a:	cmp    r9d,0x7
   14000990e:	jae    0x140009913
   140009910:	inc    r9d
   140009913:	lea    rax,[rip+0x37d6]        # 0x14000d0f0
   14000991a:	mov    r8,rdi
   14000991d:	lea    rdx,[rip+0x372c]        # 0x14000d050
   140009924:	mov    QWORD PTR [rsp+0x20],rax
   140009929:	lea    rcx,[rbp-0x48]
   14000992d:	call   0x14000a120
   140009932:	mov    DWORD PTR [rbp-0x38],eax
   140009935:	test   eax,eax
   140009937:	mov    eax,0x23d
   14000993c:	jmp    0x1400097c5
   140009941:	lea    r9,[rip+0x37a8]        # 0x14000d0f0
   140009948:	mov    r8,rdi
   14000994b:	lea    rdx,[rip+0x3736]        # 0x14000d088
   140009952:	lea    rcx,[rbp-0x48]
   140009956:	call   0x14000a120
   14000995b:	mov    DWORD PTR [rbp-0x38],eax
   14000995e:	test   eax,eax
   140009960:	mov    eax,0x242
   140009965:	jmp    0x1400097c5
   14000996a:	int3   
   14000996b:	int3   
   14000996c:	int3   
   14000996d:	int3   
   14000996e:	int3   
   14000996f:	int3   
   140009970:	mov    QWORD PTR [rsp+0x8],rbx
   140009975:	mov    QWORD PTR [rsp+0x10],rsi
   14000997a:	push   rdi
   14000997b:	sub    rsp,0x70
   14000997f:	mov    ebx,r8d
   140009982:	mov    rdi,rdx
   140009985:	mov    rsi,rcx
   140009988:	mov    rcx,QWORD PTR [rip+0x5691]        # 0x14000f020
   14000998f:	lea    rax,[rip+0x568a]        # 0x14000f020
   140009996:	cmp    rcx,rax
   140009999:	je     0x1400099b9
   14000999b:	test   DWORD PTR [rcx+0x1c],0x20000000
   1400099a2:	je     0x1400099b9
   1400099a4:	mov    rcx,QWORD PTR [rcx+0x10]
   1400099a8:	lea    r8,[rip+0x3749]        # 0x14000d0f8
   1400099af:	mov    edx,0x17
   1400099b4:	call   0x140001008
   1400099b9:	mov    r9d,0x1
   1400099bf:	lea    rdx,[rip+0x36ea]        # 0x14000d0b0
   1400099c6:	mov    r8d,0x287
   1400099cc:	lea    rcx,[rsp+0x30]
   1400099d1:	call   0x1400083e8
   1400099d6:	movaps xmm0,XMMWORD PTR [rdi]
   1400099d9:	lea    rdx,[rsp+0x20]
   1400099de:	xor    r9d,r9d
   1400099e1:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   1400099e7:	mov    r8d,ebx
   1400099ea:	mov    rcx,rsi
   1400099ed:	call   0x140009a34
   1400099f2:	mov    ebx,eax
   1400099f4:	mov    DWORD PTR [rsp+0x30],eax
   1400099f8:	test   eax,eax
   1400099fa:	mov    eax,0x289
   1400099ff:	jns    0x140009a08
   140009a01:	mov    WORD PTR [rsp+0x36],ax
   140009a06:	jmp    0x140009a0d
   140009a08:	mov    WORD PTR [rsp+0x34],ax
   140009a0d:	lea    rcx,[rsp+0x30]
   140009a12:	call   0x1400084f8
   140009a17:	lea    r11,[rsp+0x70]
   140009a1c:	mov    eax,ebx
   140009a1e:	mov    rbx,QWORD PTR [r11+0x10]
   140009a22:	mov    rsi,QWORD PTR [r11+0x18]
   140009a26:	mov    rsp,r11
   140009a29:	pop    rdi
   140009a2a:	ret    
   140009a2b:	int3   
   140009a2c:	int3   
   140009a2d:	int3   
   140009a2e:	int3   
   140009a2f:	int3   
   140009a30:	int3   
   140009a31:	int3   
   140009a32:	int3   
   140009a33:	int3   
   140009a34:	rex push rbx
   140009a36:	push   rbp
   140009a37:	push   rsi
   140009a38:	push   rdi
   140009a39:	sub    rsp,0x88
   140009a40:	mov    ebp,r9d
   140009a43:	mov    esi,r8d
   140009a46:	mov    rdi,rdx
   140009a49:	mov    rbx,rcx
   140009a4c:	mov    rcx,QWORD PTR [rip+0x55cd]        # 0x14000f020
   140009a53:	lea    rax,[rip+0x55c6]        # 0x14000f020
   140009a5a:	cmp    rcx,rax
   140009a5d:	je     0x140009a7d
   140009a5f:	test   DWORD PTR [rcx+0x1c],0x20000000
   140009a66:	je     0x140009a7d
   140009a68:	mov    rcx,QWORD PTR [rcx+0x10]
   140009a6c:	lea    r8,[rip+0x3685]        # 0x14000d0f8
   140009a73:	mov    edx,0x18
   140009a78:	call   0x140001008
   140009a7d:	mov    r9d,0x1
   140009a83:	lea    rdx,[rip+0x363e]        # 0x14000d0c8
   140009a8a:	mov    r8d,0x299
   140009a90:	lea    rcx,[rsp+0x40]
   140009a95:	call   0x1400083e8
   140009a9a:	mov    rax,rsi
   140009a9d:	mov    r9b,bpl
   140009aa0:	xor    esi,esi
   140009aa2:	mov    rdx,rdi
   140009aa5:	mov    QWORD PTR [rsp+0x38],rsi
   140009aaa:	mov    rcx,rbx
   140009aad:	mov    DWORD PTR [rsp+0x30],esi
   140009ab1:	mov    QWORD PTR [rsp+0x28],rsi
   140009ab6:	lea    r8d,[rsi+0x1]
   140009aba:	mov    QWORD PTR [rsp+0x20],rax
   140009abf:	call   QWORD PTR [rip+0x255b]        # 0x14000c020
   140009ac5:	movzx  ebx,ax
   140009ac8:	or     ebx,0x80070000
   140009ace:	test   eax,eax
   140009ad0:	cmovle ebx,eax
   140009ad3:	mov    eax,0x2a0
   140009ad8:	mov    DWORD PTR [rsp+0x40],ebx
   140009adc:	test   ebx,ebx
   140009ade:	jns    0x140009ae7
   140009ae0:	mov    WORD PTR [rsp+0x46],ax
   140009ae5:	jmp    0x140009aec
   140009ae7:	mov    WORD PTR [rsp+0x44],ax
   140009aec:	lea    rcx,[rsp+0x40]
   140009af1:	call   0x1400084f8
   140009af6:	mov    eax,ebx
   140009af8:	add    rsp,0x88
   140009aff:	pop    rdi
   140009b00:	pop    rsi
   140009b01:	pop    rbp
   140009b02:	pop    rbx
   140009b03:	ret    
   140009b04:	int3   
   140009b05:	int3   
   140009b06:	int3   
   140009b07:	int3   
   140009b08:	int3   
   140009b09:	int3   
   140009b0a:	int3   
   140009b0b:	int3   
   140009b0c:	mov    QWORD PTR [rsp+0x10],rbx
   140009b11:	mov    QWORD PTR [rsp+0x8],rcx
   140009b16:	push   rbp
   140009b17:	mov    rbp,rsp
   140009b1a:	sub    rsp,0x60
   140009b1e:	mov    rcx,QWORD PTR [rip+0x54fb]        # 0x14000f020
   140009b25:	lea    rax,[rip+0x54f4]        # 0x14000f020
   140009b2c:	cmp    rcx,rax
   140009b2f:	je     0x140009b4f
   140009b31:	test   DWORD PTR [rcx+0x1c],0x20000000
   140009b38:	je     0x140009b4f
   140009b3a:	mov    rcx,QWORD PTR [rcx+0x10]
   140009b3e:	lea    r8,[rip+0x35b3]        # 0x14000d0f8
   140009b45:	mov    edx,0x19
   140009b4a:	call   0x140001008
   140009b4f:	mov    r9d,0x1
   140009b55:	lea    rdx,[rip+0x3544]        # 0x14000d0a0
   140009b5c:	mov    r8d,0x2ae
   140009b62:	lea    rcx,[rbp-0x40]
   140009b66:	call   0x1400083e8
   140009b6b:	and    QWORD PTR [rbp+0x10],0x0
   140009b70:	lea    rcx,[rbp+0x10]
   140009b74:	and    DWORD PTR [rbp-0x40],0x0
   140009b78:	mov    eax,0x2b2
   140009b7d:	mov    WORD PTR [rbp-0x3c],ax
   140009b81:	call   0x140008a30
   140009b86:	mov    rbx,QWORD PTR [rbp+0x10]
   140009b8a:	test   eax,eax
   140009b8c:	mov    DWORD PTR [rbp-0x40],eax
   140009b8f:	mov    eax,0x2b4
   140009b94:	jns    0x140009b9c
   140009b96:	mov    WORD PTR [rbp-0x3a],ax
   140009b9a:	jmp    0x140009bee
   140009b9c:	mov    r9d,0x3
   140009ba2:	mov    WORD PTR [rbp-0x3c],ax
   140009ba6:	mov    r8,rbx
   140009ba9:	lea    rdx,[rip+0x2d18]        # 0x14000c8c8
   140009bb0:	xor    ecx,ecx
   140009bb2:	call   QWORD PTR [rip+0x2478]        # 0x14000c030
   140009bb8:	mov    r9d,0x1
   140009bbe:	lea    rdx,[rip+0x2d03]        # 0x14000c8c8
   140009bc5:	mov    r8,rbx
   140009bc8:	xor    ecx,ecx
   140009bca:	call   QWORD PTR [rip+0x2460]        # 0x14000c030
   140009bd0:	movzx  ecx,ax
   140009bd3:	or     ecx,0x80070000
   140009bd9:	test   eax,eax
   140009bdb:	cmovle ecx,eax
   140009bde:	mov    eax,0x2b8
   140009be3:	mov    DWORD PTR [rbp-0x40],ecx
   140009be6:	test   ecx,ecx
   140009be8:	js     0x140009b96
   140009bea:	mov    WORD PTR [rbp-0x3c],ax
   140009bee:	mov    rcx,rbx
   140009bf1:	call   QWORD PTR [rip+0x2759]        # 0x14000c350
   140009bf7:	mov    ebx,DWORD PTR [rbp-0x40]
   140009bfa:	lea    rcx,[rbp-0x40]
   140009bfe:	call   0x1400084f8
   140009c03:	mov    eax,ebx
   140009c05:	mov    rbx,QWORD PTR [rsp+0x78]
   140009c0a:	add    rsp,0x60
   140009c0e:	pop    rbp
   140009c0f:	ret    
   140009c10:	int3   
   140009c11:	int3   
   140009c12:	int3   
   140009c13:	int3   
   140009c14:	int3   
   140009c15:	int3   
   140009c16:	int3   
   140009c17:	int3   
   140009c18:	add    ecx,0x2
   140009c1b:	cmp    ecx,0x100
   140009c21:	ja     0x140009c2a
   140009c23:	lea    eax,[rcx+0x3f]
   140009c26:	and    eax,0xffffffc0
   140009c29:	ret    
   140009c2a:	cmp    ecx,0x400
   140009c30:	ja     0x140009c3e
   140009c32:	lea    eax,[rcx+0xff]
   140009c38:	and    eax,0xffffff00
   140009c3d:	ret    
   140009c3e:	cmp    ecx,0x1000
   140009c44:	ja     0x140009c52
   140009c46:	lea    eax,[rcx+0x3ff]
   140009c4c:	and    eax,0xfffffc00
   140009c51:	ret    
   140009c52:	lea    eax,[rcx+0xfff]
   140009c58:	and    eax,0xfffff000
   140009c5d:	ret    
   140009c5e:	int3   
   140009c5f:	int3   
   140009c60:	int3   
   140009c61:	int3   
   140009c62:	int3   
   140009c63:	int3   
   140009c64:	mov    QWORD PTR [rsp+0x8],rbx
   140009c69:	mov    QWORD PTR [rsp+0x10],rsi
   140009c6e:	mov    QWORD PTR [rsp+0x18],rdi
   140009c73:	push   r14
   140009c75:	sub    rsp,0x20
   140009c79:	xor    ebx,ebx
   140009c7b:	mov    r14,r8
   140009c7e:	mov    rdi,rdx
   140009c81:	test   rdx,rdx
   140009c84:	je     0x140009cc4
   140009c86:	test   r8,r8
   140009c89:	je     0x140009cc4
   140009c8b:	mov    QWORD PTR [rdx],rbx
   140009c8e:	call   0x140009c18
   140009c93:	mov    esi,eax
   140009c95:	lea    eax,[rsi-0x1]
   140009c98:	cmp    eax,0xffffffe
   140009c9d:	ja     0x140009cc4
   140009c9f:	mov    ecx,esi
   140009ca1:	add    rcx,rcx
   140009ca4:	call   QWORD PTR [rip+0x26b6]        # 0x14000c360
   140009caa:	test   rax,rax
   140009cad:	jne    0x140009cb6
   140009caf:	mov    ebx,0x8007000e
   140009cb4:	jmp    0x140009cc9
   140009cb6:	mov    WORD PTR [rax],bx
   140009cb9:	mov    QWORD PTR [rdi],rax
   140009cbc:	lea    eax,[rsi-0x1]
   140009cbf:	mov    DWORD PTR [r14],eax
   140009cc2:	jmp    0x140009cc9
   140009cc4:	mov    ebx,0x80070057
   140009cc9:	mov    rsi,QWORD PTR [rsp+0x38]
   140009cce:	mov    eax,ebx
   140009cd0:	mov    rbx,QWORD PTR [rsp+0x30]
   140009cd5:	mov    rdi,QWORD PTR [rsp+0x40]
   140009cda:	add    rsp,0x20
   140009cde:	pop    r14
   140009ce0:	ret    
   140009ce1:	int3   
   140009ce2:	int3   
   140009ce3:	int3   
   140009ce4:	int3   
   140009ce5:	int3   
   140009ce6:	int3   
   140009ce7:	int3   
   140009ce8:	mov    QWORD PTR [rsp+0x8],rbx
   140009ced:	push   rdi
   140009cee:	sub    rsp,0x20
   140009cf2:	lea    rdi,[rip+0x3437]        # 0x14000d130
   140009cf9:	mov    rbx,rcx
   140009cfc:	cmp    QWORD PTR [rcx],rdi
   140009cff:	je     0x140009d0a
   140009d01:	mov    rcx,QWORD PTR [rcx]
   140009d04:	call   QWORD PTR [rip+0x2646]        # 0x14000c350
   140009d0a:	and    QWORD PTR [rbx+0x8],0x0
   140009d0f:	mov    QWORD PTR [rbx],rdi
   140009d12:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d17:	add    rsp,0x20
   140009d1b:	pop    rdi
   140009d1c:	ret    
   140009d1d:	int3   
   140009d1e:	int3   
   140009d1f:	int3   
   140009d20:	int3   
   140009d21:	int3   
   140009d22:	int3   
   140009d23:	int3   
   140009d24:	mov    QWORD PTR [rsp+0x10],rbx
   140009d29:	mov    QWORD PTR [rsp+0x18],rsi
   140009d2e:	push   rbp
   140009d2f:	push   rdi
   140009d30:	push   r14
   140009d32:	lea    rbp,[rsp-0xb0]
   140009d3a:	sub    rsp,0x1b0
   140009d41:	mov    rax,QWORD PTR [rip+0x52c0]        # 0x14000f008
   140009d48:	xor    rax,rsp
   140009d4b:	mov    QWORD PTR [rbp+0xa0],rax
   140009d52:	xorps  xmm0,xmm0
   140009d55:	mov    QWORD PTR [rsp+0x60],rdx
   140009d5a:	xorps  xmm1,xmm1
   140009d5d:	mov    QWORD PTR [rsp+0x68],r8
   140009d62:	xor    edi,edi
   140009d64:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140009d6a:	mov    rbx,rdx
   140009d6d:	movdqa XMMWORD PTR [rbp-0x80],xmm1
   140009d72:	mov    rsi,rcx
   140009d75:	movdqa XMMWORD PTR [rbp-0x70],xmm0
   140009d7a:	xor    edx,edx
   140009d7c:	movdqa XMMWORD PTR [rbp-0x60],xmm1
   140009d81:	lea    r8d,[rdi+0x24]
   140009d85:	mov    DWORD PTR [rsp+0x38],edi
   140009d89:	lea    rcx,[rsp+0x3c]
   140009d8e:	call   0x14000b152
   140009d93:	xor    edx,edx
   140009d95:	mov    QWORD PTR [rbp+0x0],rdi
   140009d99:	mov    r8d,0x98
   140009d9f:	lea    rcx,[rbp+0x8]
   140009da3:	call   0x14000b152
   140009da8:	xor    edx,edx
   140009daa:	mov    DWORD PTR [rbp-0x50],edi
   140009dad:	lea    r8d,[rdi+0x4c]
   140009db1:	lea    rcx,[rbp-0x4c]
   140009db5:	call   0x14000b152
   140009dba:	lea    r14d,[rdi+0x5c]
   140009dbe:	mov    r10d,edi
   140009dc1:	mov    DWORD PTR [rsp+0x30],r14d
   140009dc6:	test   rbx,rbx
   140009dc9:	jne    0x140009dd5
   140009dcb:	mov    eax,0x80070057
   140009dd0:	jmp    0x140009edc
   140009dd5:	lea    rdx,[rsp+0x38]
   140009dda:	mov    r9d,0xa
   140009de0:	lea    rcx,[rsp+0x60]
   140009de5:	mov    r8,QWORD PTR [rcx]
   140009de8:	test   r8,r8
   140009deb:	jne    0x140009df1
   140009ded:	mov    eax,edi
   140009def:	jmp    0x140009dff
   140009df1:	or     rax,0xffffffffffffffff
   140009df5:	inc    rax
   140009df8:	cmp    WORD PTR [r8+rax*2],di
   140009dfd:	jne    0x140009df5
   140009dff:	mov    DWORD PTR [rdx],eax
   140009e01:	add    rcx,0x8
   140009e05:	add    rdx,0x4
   140009e09:	sub    r9,0x1
   140009e0d:	jne    0x140009de5
   140009e0f:	mov    r8d,DWORD PTR [rsi+0x8]
   140009e13:	mov    edx,edi
   140009e15:	mov    r9d,edi
   140009e18:	test   r8d,r8d
   140009e1b:	je     0x140009e2d
   140009e1d:	mov    rax,QWORD PTR [rsi]
   140009e20:	lea    ecx,[r8-0x1]
   140009e24:	cmp    WORD PTR [rax+rcx*2],r14w
   140009e29:	sete   r10b
   140009e2d:	test   r8d,r8d
   140009e30:	mov    r11d,edi
   140009e33:	sete   r11b
   140009e37:	mov    ecx,r9d
   140009e3a:	mov    r8,QWORD PTR [rsp+rcx*8+0x60]
   140009e3f:	test   r10d,r10d
   140009e42:	je     0x140009e54
   140009e44:	cmp    WORD PTR [r8],r14w
   140009e48:	jne    0x140009e54
   140009e4a:	add    r8,0x2
   140009e4e:	dec    DWORD PTR [rsp+rcx*4+0x38]
   140009e52:	jmp    0x140009e7a
   140009e54:	test   r11d,r11d
   140009e57:	jne    0x140009e7a
   140009e59:	test   r10d,r10d
   140009e5c:	jne    0x140009e7a
   140009e5e:	cmp    WORD PTR [r8],r14w
   140009e62:	je     0x140009e7a
   140009e64:	mov    eax,edx
   140009e66:	lea    r10,[rsp+0x30]
   140009e6b:	inc    edx
   140009e6d:	mov    QWORD PTR [rbp+rax*8+0x0],r10
   140009e72:	mov    DWORD PTR [rbp+rax*4-0x50],0x1
   140009e7a:	mov    ecx,DWORD PTR [rsp+rcx*4+0x38]
   140009e7e:	mov    r10d,edi
   140009e81:	mov    eax,edx
   140009e83:	mov    r11d,edi
   140009e86:	inc    edx
   140009e88:	mov    QWORD PTR [rbp+rax*8+0x0],r8
   140009e8d:	mov    DWORD PTR [rbp+rax*4-0x50],ecx
   140009e91:	lea    eax,[rcx-0x1]
   140009e94:	cmp    WORD PTR [r8+rax*2],r14w
   140009e99:	sete   r10b
   140009e9d:	inc    r9d
   140009ea0:	cmp    r9d,0xa
   140009ea4:	jae    0x140009ead
   140009ea6:	cmp    DWORD PTR [rsp+r9*4+0x38],edi
   140009eab:	ja     0x140009e37
   140009ead:	test   edx,edx
   140009eaf:	je     0x140009ec4
   140009eb1:	lea    rax,[rbp-0x50]
   140009eb5:	mov    r8d,edx
   140009eb8:	add    edi,DWORD PTR [rax]
   140009eba:	lea    rax,[rax+0x4]
   140009ebe:	sub    r8,0x1
   140009ec2:	jne    0x140009eb8
   140009ec4:	lea    rax,[rbp+0x0]
   140009ec8:	mov    r8d,edi
   140009ecb:	lea    r9,[rbp-0x50]
   140009ecf:	mov    QWORD PTR [rsp+0x20],rax
   140009ed4:	mov    rcx,rsi
   140009ed7:	call   0x14000a2c4
   140009edc:	mov    rcx,QWORD PTR [rbp+0xa0]
   140009ee3:	xor    rcx,rsp
   140009ee6:	call   0x14000ab80
   140009eeb:	lea    r11,[rsp+0x1b0]
   140009ef3:	mov    rbx,QWORD PTR [r11+0x28]
   140009ef7:	mov    rsi,QWORD PTR [r11+0x30]
   140009efb:	mov    rsp,r11
   140009efe:	pop    r14
   140009f00:	pop    rdi
   140009f01:	pop    rbp
   140009f02:	ret    
   140009f03:	int3   
   140009f04:	int3   
   140009f05:	int3   
   140009f06:	int3   
   140009f07:	int3   
   140009f08:	int3   
   140009f09:	int3   
   140009f0a:	int3   
   140009f0b:	int3   
   140009f0c:	mov    r11,rsp
   140009f0f:	mov    QWORD PTR [r11+0x18],rbx
   140009f13:	push   rbp
   140009f14:	push   rsi
   140009f15:	push   rdi
   140009f16:	push   r14
   140009f18:	push   r15
   140009f1a:	sub    rsp,0x20
   140009f1e:	xor    r14d,r14d
   140009f21:	mov    eax,edx
   140009f23:	mov    rsi,rcx
   140009f26:	mov    edi,r14d
   140009f29:	mov    QWORD PTR [r11+0x8],r14
   140009f2d:	mov    DWORD PTR [r11+0x10],r14d
   140009f31:	cmp    DWORD PTR [rcx+0xc],edx
   140009f34:	jae    0x140009fa7
   140009f36:	lea    r8,[r11+0x10]
   140009f3a:	mov    ecx,eax
   140009f3c:	lea    rdx,[r11+0x8]
   140009f40:	call   0x140009c64
   140009f45:	mov    rbx,QWORD PTR [rsp+0x50]
   140009f4a:	mov    edi,eax
   140009f4c:	lea    r15,[rip+0x31dd]        # 0x14000d130
   140009f53:	test   eax,eax
   140009f55:	js     0x140009f94
   140009f57:	mov    rbp,QWORD PTR [rsi]
   140009f5a:	mov    rcx,rbx
   140009f5d:	mov    r8d,DWORD PTR [rsi+0x8]
   140009f61:	mov    rdx,rbp
   140009f64:	add    r8,r8
   140009f67:	call   0x14000b146
   140009f6c:	mov    edx,DWORD PTR [rsi+0x8]
   140009f6f:	mov    eax,DWORD PTR [rsp+0x58]
   140009f73:	mov    WORD PTR [rbx+rdx*2],r14w
   140009f78:	mov    QWORD PTR [rsi],rbx
   140009f7b:	mov    ebx,r14d
   140009f7e:	mov    DWORD PTR [rsi+0xc],eax
   140009f81:	test   rbp,rbp
   140009f84:	je     0x140009fa7
   140009f86:	cmp    rbp,r15
   140009f89:	je     0x140009fa7
   140009f8b:	mov    rcx,rbp
   140009f8e:	call   QWORD PTR [rip+0x23bc]        # 0x14000c350
   140009f94:	test   rbx,rbx
   140009f97:	je     0x140009fa7
   140009f99:	cmp    rbx,r15
   140009f9c:	je     0x140009fa7
   140009f9e:	mov    rcx,rbx
   140009fa1:	call   QWORD PTR [rip+0x23a9]        # 0x14000c350
   140009fa7:	mov    eax,edi
   140009fa9:	mov    rbx,QWORD PTR [rsp+0x60]
   140009fae:	add    rsp,0x20
   140009fb2:	pop    r15
   140009fb4:	pop    r14
   140009fb6:	pop    rdi
   140009fb7:	pop    rsi
   140009fb8:	pop    rbp
   140009fb9:	ret    
   140009fba:	int3   
   140009fbb:	int3   
   140009fbc:	int3   
   140009fbd:	int3   
   140009fbe:	int3   
   140009fbf:	int3   
   140009fc0:	mov    r8,QWORD PTR [rcx]
   140009fc3:	lea    rax,[rip+0x3166]        # 0x14000d130
   140009fca:	cmp    r8,rax
   140009fcd:	je     0x140009ff2
   140009fcf:	cmp    DWORD PTR [rcx+0xc],edx
   140009fd2:	cmovb  edx,DWORD PTR [rcx+0xc]
   140009fd6:	xor    r9d,r9d
   140009fd9:	or     rax,0xffffffffffffffff
   140009fdd:	mov    WORD PTR [r8+rdx*2],r9w
   140009fe2:	mov    rdx,QWORD PTR [rcx]
   140009fe5:	inc    rax
   140009fe8:	cmp    WORD PTR [rdx+rax*2],r9w
   140009fed:	jne    0x140009fe5
   140009fef:	mov    DWORD PTR [rcx+0x8],eax
   140009ff2:	ret    
   140009ff3:	int3   
   140009ff4:	int3   
   140009ff5:	int3   
   140009ff6:	int3   
   140009ff7:	int3   
   140009ff8:	int3   
   140009ff9:	int3   
   140009ffa:	int3   
   140009ffb:	int3   
   140009ffc:	mov    rax,rsp
   140009fff:	mov    QWORD PTR [rax+0x8],rbx
   14000a003:	mov    QWORD PTR [rax+0x10],rbp
   14000a007:	mov    QWORD PTR [rax+0x18],rsi
   14000a00b:	mov    QWORD PTR [rax+0x20],rdi
   14000a00f:	push   r12
   14000a011:	push   r14
   14000a013:	push   r15
   14000a015:	sub    rsp,0x20
   14000a019:	xor    r12d,r12d
   14000a01c:	mov    rbp,r8
   14000a01f:	mov    r15,rdx
   14000a022:	mov    rdi,rcx
   14000a025:	mov    ebx,r12d
   14000a028:	test   rdx,rdx
   14000a02b:	je     0x14000a0e7
   14000a031:	test   r8,r8
   14000a034:	je     0x14000a0e7
   14000a03a:	cmp    DWORD PTR [rcx+0x8],r12d
   14000a03e:	je     0x14000a04b
   14000a040:	mov    rax,QWORD PTR [rcx]
   14000a043:	mov    DWORD PTR [rcx+0x8],r12d
   14000a047:	mov    WORD PTR [rax],r12w
   14000a04b:	mov    rdx,r8
   14000a04e:	mov    rcx,r15
   14000a051:	call   QWORD PTR [rip+0x2261]        # 0x14000c2b8
   14000a057:	test   eax,eax
   14000a059:	js     0x14000a0e7
   14000a05f:	je     0x14000a0ec
   14000a065:	lea    esi,[rax+0x1]
   14000a068:	cmp    esi,eax
   14000a06a:	jge    0x14000a073
   14000a06c:	mov    ebx,0x8000ffff
   14000a071:	jmp    0x14000a0ec
   14000a073:	mov    edx,esi
   14000a075:	mov    rcx,rdi
   14000a078:	call   0x140009f0c
   14000a07d:	mov    ebx,eax
   14000a07f:	test   eax,eax
   14000a081:	js     0x14000a0ec
   14000a083:	mov    r14,QWORD PTR [rdi]
   14000a086:	mov    ebx,0x80070057
   14000a08b:	movsxd rdx,esi
   14000a08e:	mov    ecx,r12d
   14000a091:	lea    rax,[rdx-0x1]
   14000a095:	cmp    rax,0x7ffffffe
   14000a09b:	cmova  ecx,ebx
   14000a09e:	mov    ebx,ecx
   14000a0a0:	test   ecx,ecx
   14000a0a2:	js     0x14000a0dd
   14000a0a4:	lea    rsi,[rdx-0x1]
   14000a0a8:	mov    r9,rbp
   14000a0ab:	mov    rdx,rsi
   14000a0ae:	mov    r8,r15
   14000a0b1:	mov    rcx,r14
   14000a0b4:	mov    ebx,r12d
   14000a0b7:	call   QWORD PTR [rip+0x2203]        # 0x14000c2c0
   14000a0bd:	test   eax,eax
   14000a0bf:	js     0x14000a0d1
   14000a0c1:	cdqe   
   14000a0c3:	cmp    rax,rsi
   14000a0c6:	ja     0x14000a0d1
   14000a0c8:	jne    0x14000a0ec
   14000a0ca:	mov    WORD PTR [r14+rsi*2],r12w
   14000a0cf:	jmp    0x14000a0ec
   14000a0d1:	mov    WORD PTR [r14+rsi*2],r12w
   14000a0d6:	mov    ebx,0x8007007a
   14000a0db:	jmp    0x14000a0ec
   14000a0dd:	test   esi,esi
   14000a0df:	je     0x14000a0ec
   14000a0e1:	mov    WORD PTR [r14],r12w
   14000a0e5:	jmp    0x14000a0ec
   14000a0e7:	mov    ebx,0x80070057
   14000a0ec:	mov    edx,DWORD PTR [rdi+0xc]
   14000a0ef:	mov    rcx,rdi
   14000a0f2:	call   0x140009fc0
   14000a0f7:	mov    rbp,QWORD PTR [rsp+0x48]
   14000a0fc:	mov    eax,ebx
   14000a0fe:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a103:	mov    rsi,QWORD PTR [rsp+0x50]
   14000a108:	mov    rdi,QWORD PTR [rsp+0x58]
   14000a10d:	add    rsp,0x20
   14000a111:	pop    r15
   14000a113:	pop    r14
   14000a115:	pop    r12
   14000a117:	ret    
   14000a118:	int3   
   14000a119:	int3   
   14000a11a:	int3   
   14000a11b:	int3   
   14000a11c:	int3   
   14000a11d:	int3   
   14000a11e:	int3   
   14000a11f:	int3   
   14000a120:	mov    QWORD PTR [rsp+0x10],rdx
   14000a125:	mov    QWORD PTR [rsp+0x18],r8
   14000a12a:	mov    QWORD PTR [rsp+0x20],r9
   14000a12f:	sub    rsp,0x28
   14000a133:	test   rdx,rdx
   14000a136:	jne    0x14000a13f
   14000a138:	mov    eax,0x80070057
   14000a13d:	jmp    0x14000a149
   14000a13f:	lea    r8,[rsp+0x40]
   14000a144:	call   0x140009ffc
   14000a149:	add    rsp,0x28
   14000a14d:	ret    
   14000a14e:	int3   
   14000a14f:	int3   
   14000a150:	int3   
   14000a151:	int3   
   14000a152:	int3   
   14000a153:	int3   
   14000a154:	sub    rsp,0x38
   14000a158:	xor    r11d,r11d
   14000a15b:	mov    r10,rcx
   14000a15e:	test   rdx,rdx
   14000a161:	je     0x14000a18c
   14000a163:	mov    eax,r8d
   14000a166:	mov    rcx,rdx
   14000a169:	lea    r9,[rdx+rax*2]
   14000a16d:	cmp    rdx,r9
   14000a170:	jae    0x14000a181
   14000a172:	cmp    WORD PTR [rcx],r11w
   14000a176:	je     0x14000a181
   14000a178:	add    rcx,0x2
   14000a17c:	cmp    rcx,r9
   14000a17f:	jb     0x14000a172
   14000a181:	sub    rcx,rdx
   14000a184:	sar    rcx,1
   14000a187:	cmp    r8d,ecx
   14000a18a:	je     0x14000a193
   14000a18c:	mov    eax,0x80070057
   14000a191:	jmp    0x14000a1b9
   14000a193:	mov    QWORD PTR [rsp+0x58],rdx
   14000a198:	lea    rax,[rsp+0x58]
   14000a19d:	mov    edx,0x1
   14000a1a2:	mov    QWORD PTR [rsp+0x20],rax
   14000a1a7:	lea    r9,[rsp+0x48]
   14000a1ac:	mov    DWORD PTR [rsp+0x48],r8d
   14000a1b1:	mov    rcx,r10
   14000a1b4:	call   0x14000a2c4
   14000a1b9:	add    rsp,0x38
   14000a1bd:	ret    
   14000a1be:	int3   
   14000a1bf:	int3   
   14000a1c0:	int3   
   14000a1c1:	int3   
   14000a1c2:	int3   
   14000a1c3:	int3   
   14000a1c4:	sub    rsp,0x38
   14000a1c8:	xor    r8d,r8d
   14000a1cb:	test   rdx,rdx
   14000a1ce:	jne    0x14000a1d7
   14000a1d0:	mov    eax,0x80070057
   14000a1d5:	jmp    0x14000a20a
   14000a1d7:	or     rax,0xffffffffffffffff
   14000a1db:	inc    rax
   14000a1de:	cmp    WORD PTR [rdx+rax*2],r8w
   14000a1e3:	jne    0x14000a1db
   14000a1e5:	mov    QWORD PTR [rsp+0x50],rdx
   14000a1ea:	lea    r9,[rsp+0x48]
   14000a1ef:	lea    rdx,[rsp+0x50]
   14000a1f4:	mov    DWORD PTR [rsp+0x48],eax
   14000a1f8:	mov    QWORD PTR [rsp+0x20],rdx
   14000a1fd:	mov    r8d,eax
   14000a200:	mov    edx,0x1
   14000a205:	call   0x14000a2c4
   14000a20a:	add    rsp,0x38
   14000a20e:	ret    
   14000a20f:	int3   
   14000a210:	int3   
   14000a211:	int3   
   14000a212:	int3   
   14000a213:	int3   
   14000a214:	int3   
   14000a215:	int3   
   14000a216:	int3   
   14000a217:	int3   
   14000a218:	sub    rsp,0x48
   14000a21c:	xor    r10d,r10d
   14000a21f:	test   rdx,rdx
   14000a222:	je     0x14000a276
   14000a224:	test   r8,r8
   14000a227:	je     0x14000a276
   14000a229:	or     rax,0xffffffffffffffff
   14000a22d:	mov    r9,rax
   14000a230:	inc    r9
   14000a233:	cmp    WORD PTR [rdx+r9*2],r10w
   14000a238:	jne    0x14000a230
   14000a23a:	mov    DWORD PTR [rsp+0x58],r9d
   14000a23f:	mov    QWORD PTR [rsp+0x30],rdx
   14000a244:	inc    rax
   14000a247:	cmp    WORD PTR [r8+rax*2],r10w
   14000a24c:	jne    0x14000a244
   14000a24e:	mov    QWORD PTR [rsp+0x38],r8
   14000a253:	mov    edx,0x2
   14000a258:	lea    r8d,[rax+r9*1]
   14000a25c:	mov    DWORD PTR [rsp+0x5c],eax
   14000a260:	lea    rax,[rsp+0x30]
   14000a265:	lea    r9,[rsp+0x58]
   14000a26a:	mov    QWORD PTR [rsp+0x20],rax
   14000a26f:	call   0x14000a2c4
   14000a274:	jmp    0x14000a27b
   14000a276:	mov    eax,0x80070057
   14000a27b:	add    rsp,0x48
   14000a27f:	ret    
   14000a280:	int3   
   14000a281:	int3   
   14000a282:	int3   
   14000a283:	int3   
   14000a284:	int3   
   14000a285:	int3   
   14000a286:	int3   
   14000a287:	int3   
   14000a288:	sub    rsp,0x68
   14000a28c:	xor    r8d,r8d
   14000a28f:	cmp    WORD PTR [rdx],r8w
   14000a293:	jne    0x14000a29c
   14000a295:	mov    eax,0x80070057
   14000a29a:	jmp    0x14000a2b9
   14000a29c:	cmp    DWORD PTR [rcx+0x8],r8d
   14000a2a0:	je     0x14000a2ad
   14000a2a2:	mov    rax,QWORD PTR [rcx]
   14000a2a5:	mov    DWORD PTR [rcx+0x8],r8d
   14000a2a9:	mov    WORD PTR [rax],r8w
   14000a2ad:	lea    r8,[rip+0x236c]        # 0x14000c620
   14000a2b4:	call   0x140009d24
   14000a2b9:	add    rsp,0x68
   14000a2bd:	ret    
   14000a2be:	int3   
   14000a2bf:	int3   
   14000a2c0:	int3   
   14000a2c1:	int3   
   14000a2c2:	int3   
   14000a2c3:	int3   
   14000a2c4:	mov    QWORD PTR [rsp+0x8],rbx
   14000a2c9:	mov    QWORD PTR [rsp+0x10],rbp
   14000a2ce:	mov    QWORD PTR [rsp+0x18],rsi
   14000a2d3:	push   rdi
   14000a2d4:	push   r12
   14000a2d6:	push   r13
   14000a2d8:	push   r14
   14000a2da:	push   r15
   14000a2dc:	sub    rsp,0x20
   14000a2e0:	xor    r13d,r13d
   14000a2e3:	mov    ebx,edx
   14000a2e5:	mov    r12,r9
   14000a2e8:	mov    ebp,r8d
   14000a2eb:	mov    rdi,rcx
   14000a2ee:	mov    esi,r13d
   14000a2f1:	test   edx,edx
   14000a2f3:	je     0x14000a35c
   14000a2f5:	test   r9,r9
   14000a2f8:	je     0x14000a35c
   14000a2fa:	mov    r15,QWORD PTR [rsp+0x70]
   14000a2ff:	test   r15,r15
   14000a302:	je     0x14000a35c
   14000a304:	test   r8d,r8d
   14000a307:	je     0x14000a361
   14000a309:	lea    edx,[r8+0x1]
   14000a30d:	add    edx,DWORD PTR [rcx+0x8]
   14000a310:	call   0x140009f0c
   14000a315:	mov    esi,eax
   14000a317:	test   eax,eax
   14000a319:	js     0x14000a361
   14000a31b:	mov    edx,DWORD PTR [rdi+0x8]
   14000a31e:	mov    rcx,QWORD PTR [rdi]
   14000a321:	lea    r14,[rcx+rdx*2]
   14000a325:	test   ebx,ebx
   14000a327:	je     0x14000a353
   14000a329:	mov    r13d,ebx
   14000a32c:	mov    ebx,DWORD PTR [r12]
   14000a330:	mov    rcx,r14
   14000a333:	mov    rdx,QWORD PTR [r15]
   14000a336:	add    rbx,rbx
   14000a339:	mov    r8,rbx
   14000a33c:	call   0x14000b146
   14000a341:	add    r14,rbx
   14000a344:	lea    r12,[r12+0x4]
   14000a349:	lea    r15,[r15+0x8]
   14000a34d:	sub    r13,0x1
   14000a351:	jne    0x14000a32c
   14000a353:	mov    WORD PTR [r14],r13w
   14000a357:	add    DWORD PTR [rdi+0x8],ebp
   14000a35a:	jmp    0x14000a361
   14000a35c:	mov    esi,0x80070057
   14000a361:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a366:	mov    eax,esi
   14000a368:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a36d:	mov    rbp,QWORD PTR [rsp+0x58]
   14000a372:	add    rsp,0x20
   14000a376:	pop    r15
   14000a378:	pop    r14
   14000a37a:	pop    r13
   14000a37c:	pop    r12
   14000a37e:	pop    rdi
   14000a37f:	ret    
   14000a380:	int3   
   14000a381:	int3   
   14000a382:	int3   
   14000a383:	int3   
   14000a384:	int3   
   14000a385:	int3   
   14000a386:	int3   
   14000a387:	int3   
   14000a388:	test   rdx,rdx
   14000a38b:	je     0x14000a3d5
   14000a38d:	mov    QWORD PTR [rsp+0x8],rbx
   14000a392:	push   rdi
   14000a393:	sub    rsp,0x20
   14000a397:	mov    rbx,rdx
   14000a39a:	mov    rdi,rcx
   14000a39d:	cmp    rdx,rcx
   14000a3a0:	je     0x14000a3cb
   14000a3a2:	mov    rcx,rdx
   14000a3a5:	call   0x140009ce8
   14000a3aa:	mov    rax,QWORD PTR [rdi]
   14000a3ad:	mov    QWORD PTR [rbx],rax
   14000a3b0:	mov    eax,DWORD PTR [rdi+0x8]
   14000a3b3:	mov    DWORD PTR [rbx+0x8],eax
   14000a3b6:	mov    eax,DWORD PTR [rdi+0xc]
   14000a3b9:	mov    DWORD PTR [rbx+0xc],eax
   14000a3bc:	lea    rax,[rip+0x2d6d]        # 0x14000d130
   14000a3c3:	and    QWORD PTR [rdi+0x8],0x0
   14000a3c8:	mov    QWORD PTR [rdi],rax
   14000a3cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a3d0:	add    rsp,0x20
   14000a3d4:	pop    rdi
   14000a3d5:	ret    
   14000a3d6:	int3   
   14000a3d7:	int3   
   14000a3d8:	int3   
   14000a3d9:	int3   
   14000a3da:	int3   
   14000a3db:	int3   
   14000a3dc:	mov    QWORD PTR [rsp+0x8],rbx
   14000a3e1:	push   rdi
   14000a3e2:	sub    rsp,0x20
   14000a3e6:	mov    rax,rdx
   14000a3e9:	lea    r8,[rsp+0x48]
   14000a3ee:	xor    edi,edi
   14000a3f0:	mov    rbx,rcx
   14000a3f3:	xor    r9d,r9d
   14000a3f6:	mov    QWORD PTR [rsp+0x48],rdi
   14000a3fb:	mov    rcx,rax
   14000a3fe:	lea    edx,[rdi+0x64]
   14000a401:	call   QWORD PTR [rip+0x1e01]        # 0x14000c208
   14000a407:	mov    r8d,eax
   14000a40a:	test   eax,eax
   14000a40c:	jne    0x14000a424
   14000a40e:	call   QWORD PTR [rip+0x1d1c]        # 0x14000c130
   14000a414:	movzx  ecx,ax
   14000a417:	or     ecx,0x80070000
   14000a41d:	test   eax,eax
   14000a41f:	cmovle ecx,eax
   14000a422:	jmp    0x14000a44d
   14000a424:	mov    rdx,QWORD PTR [rsp+0x48]
   14000a429:	test   rdx,rdx
   14000a42c:	jne    0x14000a435
   14000a42e:	mov    ecx,0x80004005
   14000a433:	jmp    0x14000a44d
   14000a435:	cmp    DWORD PTR [rbx+0x8],edi
   14000a438:	je     0x14000a443
   14000a43a:	mov    rax,QWORD PTR [rbx]
   14000a43d:	mov    DWORD PTR [rbx+0x8],edi
   14000a440:	mov    WORD PTR [rax],di
   14000a443:	mov    rcx,rbx
   14000a446:	call   0x14000a154
   14000a44b:	mov    ecx,eax
   14000a44d:	mov    eax,ecx
   14000a44f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a454:	add    rsp,0x20
   14000a458:	pop    rdi
   14000a459:	ret    
   14000a45a:	int3   
   14000a45b:	int3   
   14000a45c:	int3   
   14000a45d:	int3   
   14000a45e:	int3   
   14000a45f:	int3   
   14000a460:	mov    WORD PTR [rsp+0x10],dx
   14000a465:	sub    rsp,0x28
   14000a469:	mov    eax,DWORD PTR [rcx+0x8]
   14000a46c:	xor    r8d,r8d
   14000a46f:	lea    r9d,[r8+0x5c]
   14000a473:	test   eax,eax
   14000a475:	je     0x14000a484
   14000a477:	lea    edx,[rax-0x1]
   14000a47a:	mov    rax,QWORD PTR [rcx]
   14000a47d:	cmp    WORD PTR [rax+rdx*2],r9w
   14000a482:	je     0x14000a496
   14000a484:	lea    rdx,[rsp+0x38]
   14000a489:	mov    DWORD PTR [rsp+0x38],r9d
   14000a48e:	call   0x14000a1c4
   14000a493:	mov    r8d,eax
   14000a496:	mov    eax,r8d
   14000a499:	add    rsp,0x28
   14000a49d:	ret    
   14000a49e:	int3   
   14000a49f:	int3   
   14000a4a0:	int3   
   14000a4a1:	int3   
   14000a4a2:	int3   
   14000a4a3:	int3   
   14000a4a4:	mov    edx,DWORD PTR [rcx+0x8]
   14000a4a7:	xor    r9d,r9d
   14000a4aa:	test   edx,edx
   14000a4ac:	je     0x14000a4c8
   14000a4ae:	mov    r8,QWORD PTR [rcx]
   14000a4b1:	dec    edx
   14000a4b3:	cmp    WORD PTR [r8+rdx*2],0x5c
   14000a4b9:	jne    0x14000a4c8
   14000a4bb:	cmp    edx,DWORD PTR [rcx+0xc]
   14000a4be:	ja     0x14000a4c8
   14000a4c0:	mov    DWORD PTR [rcx+0x8],edx
   14000a4c3:	mov    WORD PTR [r8+rdx*2],r9w
   14000a4c8:	ret    
   14000a4c9:	int3   
   14000a4ca:	int3   
   14000a4cb:	int3   
   14000a4cc:	int3   
   14000a4cd:	int3   
   14000a4ce:	int3   
   14000a4cf:	int3   
   14000a4d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a4d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000a4da:	push   rdi
   14000a4db:	sub    rsp,0x20
   14000a4df:	xor    ebx,ebx
   14000a4e1:	mov    rdi,rdx
   14000a4e4:	mov    rsi,rcx
   14000a4e7:	test   rdx,rdx
   14000a4ea:	jne    0x14000a4f3
   14000a4ec:	mov    ebx,0x80070057
   14000a4f1:	jmp    0x14000a51a
   14000a4f3:	mov    rcx,QWORD PTR [rcx]
   14000a4f6:	mov    QWORD PTR [rdx],rbx
   14000a4f9:	call   QWORD PTR [rip+0x1c91]        # 0x14000c190
   14000a4ff:	mov    QWORD PTR [rdi],rax
   14000a502:	cmp    DWORD PTR [rsi+0x8],ebx
   14000a505:	je     0x14000a51a
   14000a507:	mov    rcx,rax
   14000a50a:	call   QWORD PTR [rip+0x1c88]        # 0x14000c198
   14000a510:	test   eax,eax
   14000a512:	mov    ecx,0x8007000e
   14000a517:	cmove  ebx,ecx
   14000a51a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a51f:	mov    eax,ebx
   14000a521:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a526:	add    rsp,0x20
   14000a52a:	pop    rdi
   14000a52b:	ret    
   14000a52c:	int3   
   14000a52d:	int3   
   14000a52e:	int3   
   14000a52f:	int3   
   14000a530:	int3   
   14000a531:	int3   
   14000a532:	int3   
   14000a533:	int3   
   14000a534:	mov    QWORD PTR [rsp+0x8],rbx
   14000a539:	push   rdi
   14000a53a:	sub    rsp,0x20
   14000a53e:	xor    edi,edi
   14000a540:	mov    rbx,rcx
   14000a543:	cmp    DWORD PTR [rcx+0x8],edi
   14000a546:	je     0x14000a551
   14000a548:	mov    rax,QWORD PTR [rcx]
   14000a54b:	mov    DWORD PTR [rcx+0x8],edi
   14000a54e:	mov    WORD PTR [rax],di
   14000a551:	mov    r8d,DWORD PTR [rcx+0xc]
   14000a555:	mov    rdx,QWORD PTR [rcx]
   14000a558:	jmp    0x14000a584
   14000a55a:	cmp    eax,DWORD PTR [rbx+0xc]
   14000a55d:	jbe    0x14000a5c4
   14000a55f:	cmp    DWORD PTR [rbx+0x8],edi
   14000a562:	je     0x14000a56d
   14000a564:	mov    rcx,QWORD PTR [rbx]
   14000a567:	mov    DWORD PTR [rbx+0x8],edi
   14000a56a:	mov    WORD PTR [rcx],di
   14000a56d:	mov    edx,eax
   14000a56f:	mov    rcx,rbx
   14000a572:	call   0x140009f0c
   14000a577:	mov    edx,eax
   14000a579:	test   eax,eax
   14000a57b:	js     0x14000a5b7
   14000a57d:	mov    r8d,DWORD PTR [rbx+0xc]
   14000a581:	mov    rdx,QWORD PTR [rbx]
   14000a584:	lea    rcx,[rip+0x22a5]        # 0x14000c830
   14000a58b:	call   QWORD PTR [rip+0x1b27]        # 0x14000c0b8
   14000a591:	test   eax,eax
   14000a593:	jne    0x14000a55a
   14000a595:	call   QWORD PTR [rip+0x1b95]        # 0x14000c130
   14000a59b:	movzx  edx,ax
   14000a59e:	or     edx,0x80070000
   14000a5a4:	test   eax,eax
   14000a5a6:	cmovle edx,eax
   14000a5a9:	cmp    DWORD PTR [rbx+0x8],edi
   14000a5ac:	je     0x14000a5b7
   14000a5ae:	mov    rax,QWORD PTR [rbx]
   14000a5b1:	mov    DWORD PTR [rbx+0x8],edi
   14000a5b4:	mov    WORD PTR [rax],di
   14000a5b7:	mov    eax,edx
   14000a5b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a5be:	add    rsp,0x20
   14000a5c2:	pop    rdi
   14000a5c3:	ret    
   14000a5c4:	dec    eax
   14000a5c6:	mov    edx,edi
   14000a5c8:	cmp    eax,DWORD PTR [rbx+0xc]
   14000a5cb:	jbe    0x14000a5d4
   14000a5cd:	mov    edx,0x80070057
   14000a5d2:	jmp    0x14000a5b7
   14000a5d4:	mov    DWORD PTR [rbx+0x8],eax
   14000a5d7:	mov    ecx,eax
   14000a5d9:	mov    rax,QWORD PTR [rbx]
   14000a5dc:	mov    WORD PTR [rax+rcx*2],di
   14000a5e0:	jmp    0x14000a5b7
   14000a5e2:	int3   
   14000a5e3:	int3   
   14000a5e4:	int3   
   14000a5e5:	int3   
   14000a5e6:	int3   
   14000a5e7:	int3   
   14000a5e8:	mov    QWORD PTR [rsp+0x8],rbx
   14000a5ed:	mov    QWORD PTR [rsp+0x10],rbp
   14000a5f2:	mov    QWORD PTR [rsp+0x18],rsi
   14000a5f7:	push   rdi
   14000a5f8:	push   r12
   14000a5fa:	push   r13
   14000a5fc:	push   r14
   14000a5fe:	push   r15
   14000a600:	sub    rsp,0x20
   14000a604:	xor    ebx,ebx
   14000a606:	mov    r14,r8
   14000a609:	mov    r13,rcx
   14000a60c:	test   r8,r8
   14000a60f:	je     0x14000a61b
   14000a611:	mov    rdi,r8
   14000a614:	lea    ecx,[rbx+0x14]
   14000a617:	xor    eax,eax
   14000a619:	rep stos BYTE PTR es:[rdi],al
   14000a61b:	test   r13,r13
   14000a61e:	je     0x14000a6f9
   14000a624:	test   r8,r8
   14000a627:	je     0x14000a6f9
   14000a62d:	mov    ebp,ebx
   14000a62f:	mov    r15d,ebx
   14000a632:	mov    r12d,ebx
   14000a635:	mov    eax,r15d
   14000a638:	mov    sil,BYTE PTR [rax+r13*1]
   14000a63c:	test   sil,sil
   14000a63f:	jne    0x14000a646
   14000a641:	mov    r8b,0x1c
   14000a644:	jmp    0x14000a6a8
   14000a646:	lea    eax,[rsi-0x41]
   14000a649:	cmp    al,0x19
   14000a64b:	ja     0x14000a66d
   14000a64d:	movsx  edx,sil
   14000a651:	lea    rcx,[rip+0x2b38]        # 0x14000d190
   14000a658:	call   QWORD PTR [rip+0x1c8a]        # 0x14000c2e8
   14000a65e:	test   rax,rax
   14000a661:	jne    0x14000a6ec
   14000a667:	lea    r8d,[rsi-0x41]
   14000a66b:	jmp    0x14000a6a8
   14000a66d:	lea    eax,[rsi-0x61]
   14000a670:	cmp    al,0x19
   14000a672:	ja     0x14000a690
   14000a674:	movsx  edx,sil
   14000a678:	lea    rcx,[rip+0x2b11]        # 0x14000d190
   14000a67f:	call   QWORD PTR [rip+0x1c63]        # 0x14000c2e8
   14000a685:	test   rax,rax
   14000a688:	jne    0x14000a6ec
   14000a68a:	lea    r8d,[rsi-0x61]
   14000a68e:	jmp    0x14000a6a8
   14000a690:	lea    eax,[rsi-0x30]
   14000a693:	cmp    al,0x9
   14000a695:	ja     0x14000a69c
   14000a697:	mov    r8b,0x1a
   14000a69a:	jmp    0x14000a6a8
   14000a69c:	cmp    sil,0x3a
   14000a6a0:	jne    0x14000a6ec
   14000a6a2:	mov    r8b,0x1b
   14000a6a5:	inc    r15d
   14000a6a8:	mov    edi,r12d
   14000a6ab:	lea    r9,[rip+0x2ace]        # 0x14000d180
   14000a6b2:	mov    edx,ebp
   14000a6b4:	mov    al,r8b
   14000a6b7:	mov    cl,BYTE PTR [r9+rdi*2]
   14000a6bb:	shl    al,cl
   14000a6bd:	or     BYTE PTR [rdx+r14*1],al
   14000a6c1:	mov    cl,BYTE PTR [r9+rdi*2+0x1]
   14000a6c6:	test   cl,cl
   14000a6c8:	je     0x14000a6d9
   14000a6ca:	inc    ebp
   14000a6cc:	cmp    ebp,0x14
   14000a6cf:	jae    0x14000a6f9
   14000a6d1:	shr    r8b,cl
   14000a6d4:	or     BYTE PTR [rbp+r14*1+0x0],r8b
   14000a6d9:	test   sil,sil
   14000a6dc:	je     0x14000a6fe
   14000a6de:	inc    r12d
   14000a6e1:	cmp    r12d,0x8
   14000a6e5:	jne    0x14000a6ec
   14000a6e7:	mov    r12d,ebx
   14000a6ea:	inc    ebp
   14000a6ec:	inc    r15d
   14000a6ef:	cmp    ebp,0x14
   14000a6f2:	jae    0x14000a6fe
   14000a6f4:	jmp    0x14000a635
   14000a6f9:	mov    ebx,0x80070057
   14000a6fe:	mov    rbp,QWORD PTR [rsp+0x58]
   14000a703:	mov    eax,ebx
   14000a705:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a70a:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a70f:	add    rsp,0x20
   14000a713:	pop    r15
   14000a715:	pop    r14
   14000a717:	pop    r13
   14000a719:	pop    r12
   14000a71b:	pop    rdi
   14000a71c:	ret    
   14000a71d:	int3   
   14000a71e:	int3   
   14000a71f:	int3   
   14000a720:	int3   
   14000a721:	int3   
   14000a722:	int3   
   14000a723:	int3   
   14000a724:	mov    QWORD PTR [rsp+0x8],rbx
   14000a729:	mov    QWORD PTR [rsp+0x10],rbp
   14000a72e:	mov    QWORD PTR [rsp+0x18],rsi
   14000a733:	push   rdi
   14000a734:	push   r14
   14000a736:	push   r15
   14000a738:	sub    rsp,0x50
   14000a73c:	xor    edi,edi
   14000a73e:	xor    ebx,ebx
   14000a740:	movzx  r14d,r8w
   14000a744:	mov    r15d,edx
   14000a747:	test   rcx,rcx
   14000a74a:	je     0x14000a7b6
   14000a74c:	mov    rsi,QWORD PTR [rsp+0x90]
   14000a754:	test   rsi,rsi
   14000a757:	je     0x14000a7b6
   14000a759:	mov    rbp,QWORD PTR [rsp+0x98]
   14000a761:	test   rbp,rbp
   14000a764:	je     0x14000a7b6
   14000a766:	mov    rdx,rcx
   14000a769:	xor    ecx,ecx
   14000a76b:	call   QWORD PTR [rip+0x1907]        # 0x14000c078
   14000a771:	mov    rbx,rax
   14000a774:	test   rax,rax
   14000a777:	je     0x14000a7cd
   14000a779:	mov    QWORD PTR [rsp+0x40],rbp
   14000a77e:	lea    eax,[rdi+0x1]
   14000a781:	mov    QWORD PTR [rsp+0x38],rsi
   14000a786:	xor    r8d,r8d
   14000a789:	mov    DWORD PTR [rsp+0x30],0x24
   14000a791:	mov    r9d,r15d
   14000a794:	mov    WORD PTR [rsp+0x28],ax
   14000a799:	movzx  edx,r14w
   14000a79d:	and    QWORD PTR [rsp+0x20],rdi
   14000a7a2:	mov    rcx,rbx
   14000a7a5:	call   QWORD PTR [rip+0x18d5]        # 0x14000c080
   14000a7ab:	test   eax,eax
   14000a7ad:	jne    0x14000a7bb
   14000a7af:	call   0x1400063e4
   14000a7b4:	jmp    0x14000a7bb
   14000a7b6:	mov    edi,0x80070057
   14000a7bb:	test   rbx,rbx
   14000a7be:	je     0x14000a7d2
   14000a7c0:	mov    rcx,rbx
   14000a7c3:	call   QWORD PTR [rip+0x18bf]        # 0x14000c088
   14000a7c9:	test   eax,eax
   14000a7cb:	jne    0x14000a7d2
   14000a7cd:	call   0x1400063e4
   14000a7d2:	lea    r11,[rsp+0x50]
   14000a7d7:	mov    eax,edi
   14000a7d9:	mov    rbx,QWORD PTR [r11+0x20]
   14000a7dd:	mov    rbp,QWORD PTR [r11+0x28]
   14000a7e1:	mov    rsi,QWORD PTR [r11+0x30]
   14000a7e5:	mov    rsp,r11
   14000a7e8:	pop    r15
   14000a7ea:	pop    r14
   14000a7ec:	pop    rdi
   14000a7ed:	ret    
   14000a7ee:	int3   
   14000a7ef:	int3   
   14000a7f0:	int3   
   14000a7f1:	int3   
   14000a7f2:	int3   
   14000a7f3:	int3   
   14000a7f4:	jmp    0x14000aba4
   14000a7f9:	int3   
   14000a7fa:	int3   
   14000a7fb:	int3   
   14000a7fc:	int3   
   14000a7fd:	int3   
   14000a7fe:	int3   
   14000a7ff:	int3   
   14000a800:	mov    QWORD PTR [rsp+0x8],rbx
   14000a805:	push   rdi
   14000a806:	sub    rsp,0x20
   14000a80a:	mov    rdi,rcx
   14000a80d:	jmp    0x14000a81e
   14000a80f:	mov    rcx,rdi
   14000a812:	call   0x14000abbc
   14000a817:	test   eax,eax
   14000a819:	je     0x14000a82b
   14000a81b:	mov    rcx,rdi
   14000a81e:	call   0x14000abb0
   14000a823:	mov    rbx,rax
   14000a826:	test   rax,rax
   14000a829:	je     0x14000a80f
   14000a82b:	mov    rax,rbx
   14000a82e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a833:	add    rsp,0x20
   14000a837:	pop    rdi
   14000a838:	ret    
   14000a839:	int3   
   14000a83a:	int3   
   14000a83b:	int3   
   14000a83c:	int3   
   14000a83d:	int3   
   14000a83e:	int3   
   14000a83f:	int3   
   14000a840:	sub    rsp,0x28
   14000a844:	mov    eax,0x5a4d
   14000a849:	cmp    WORD PTR [rip+0xffffffffffff57b0],ax        # 0x140000000
   14000a850:	je     0x14000a856
   14000a852:	xor    eax,eax
   14000a854:	jmp    0x14000a8a5
   14000a856:	movsxd rcx,DWORD PTR [rip+0xffffffffffff57df]        # 0x14000003c
   14000a85d:	lea    rax,[rip+0xffffffffffff579c]        # 0x140000000
   14000a864:	add    rcx,rax
   14000a867:	cmp    DWORD PTR [rcx],0x4550
   14000a86d:	jne    0x14000a852
   14000a86f:	movzx  eax,WORD PTR [rcx+0x18]
   14000a873:	cmp    eax,0x10b
   14000a878:	je     0x14000a894
   14000a87a:	cmp    eax,0x20b
   14000a87f:	jne    0x14000a852
   14000a881:	xor    eax,eax
   14000a883:	cmp    DWORD PTR [rcx+0x84],0xe
   14000a88a:	jbe    0x14000a8a5
   14000a88c:	cmp    DWORD PTR [rcx+0xf8],eax
   14000a892:	jmp    0x14000a8a2
   14000a894:	xor    eax,eax
   14000a896:	cmp    DWORD PTR [rcx+0x74],0xe
   14000a89a:	jbe    0x14000a8a5
   14000a89c:	cmp    DWORD PTR [rcx+0xe8],eax
   14000a8a2:	setne  al
   14000a8a5:	mov    ecx,0x1
   14000a8aa:	mov    DWORD PTR [rip+0x47a0],eax        # 0x14000f050
   14000a8b0:	call   0x14000ac98
   14000a8b5:	mov    ecx,eax
   14000a8b7:	call   QWORD PTR [rip+0x199b]        # 0x14000c258
   14000a8bd:	mov    rcx,QWORD PTR [rip+0x19cc]        # 0x14000c290
   14000a8c4:	or     rax,0xffffffffffffffff
   14000a8c8:	mov    QWORD PTR [rip+0x4d21],rax        # 0x14000f5f0
   14000a8cf:	mov    QWORD PTR [rip+0x4d22],rax        # 0x14000f5f8
   14000a8d6:	mov    eax,DWORD PTR [rip+0x4788]        # 0x14000f064
   14000a8dc:	mov    DWORD PTR [rcx],eax
   14000a8de:	mov    rcx,QWORD PTR [rip+0x19b3]        # 0x14000c298
   14000a8e5:	mov    eax,DWORD PTR [rip+0x476d]        # 0x14000f058
   14000a8eb:	mov    DWORD PTR [rcx],eax
   14000a8ed:	call   0x14000aeb0
   14000a8f2:	cmp    DWORD PTR [rip+0x4707],0x0        # 0x14000f000
   14000a8f9:	jne    0x14000a908
   14000a8fb:	lea    rcx,[rip+0x5ae]        # 0x14000aeb0
   14000a902:	call   QWORD PTR [rip+0x1970]        # 0x14000c278
   14000a908:	xor    eax,eax
   14000a90a:	add    rsp,0x28
   14000a90e:	ret    
   14000a90f:	int3   
   14000a910:	int3   
   14000a911:	int3   
   14000a912:	int3   
   14000a913:	int3   
   14000a914:	int3   
   14000a915:	int3   
   14000a916:	int3   
   14000a917:	int3   
   14000a918:	int3   
   14000a919:	int3   
   14000a91a:	int3   
   14000a91b:	int3   
   14000a91c:	int3   
   14000a91d:	int3   
   14000a91e:	int3   
   14000a91f:	int3   
   14000a920:	sub    rsp,0x38
   14000a924:	mov    eax,DWORD PTR [rip+0x4736]        # 0x14000f060
   14000a92a:	lea    r8,[rip+0x4717]        # 0x14000f048
   14000a931:	mov    r9d,DWORD PTR [rip+0x4724]        # 0x14000f05c
   14000a938:	lea    rdx,[rip+0x4701]        # 0x14000f040
   14000a93f:	mov    DWORD PTR [rip+0x470f],eax        # 0x14000f054
   14000a945:	lea    rcx,[rip+0x46ec]        # 0x14000f038
   14000a94c:	lea    rax,[rip+0x4701]        # 0x14000f054
   14000a953:	mov    QWORD PTR [rsp+0x20],rax
   14000a958:	call   QWORD PTR [rip+0x18f2]        # 0x14000c250
   14000a95e:	mov    DWORD PTR [rip+0x46d8],eax        # 0x14000f03c
   14000a964:	add    rsp,0x38
   14000a968:	ret    
   14000a969:	int3   
   14000a96a:	int3   
   14000a96b:	int3   
   14000a96c:	int3   
   14000a96d:	int3   
   14000a96e:	int3   
   14000a96f:	int3   
   14000a970:	mov    rax,rsp
   14000a973:	mov    QWORD PTR [rax+0x8],rbx
   14000a977:	mov    QWORD PTR [rax+0x10],rsi
   14000a97b:	mov    QWORD PTR [rax+0x18],rdi
   14000a97f:	mov    QWORD PTR [rax+0x20],r12
   14000a983:	push   r14
   14000a985:	sub    rsp,0x30
   14000a989:	mov    rax,QWORD PTR gs:0x30
   14000a992:	mov    rbx,QWORD PTR [rax+0x8]
   14000a996:	xor    r14d,r14d
   14000a999:	xor    eax,eax
   14000a99b:	lock cmpxchg QWORD PTR [rip+0x4c5c],rbx        # 0x14000f600
   14000a9a4:	je     0x14000a9c2
   14000a9a6:	cmp    rax,rbx
   14000a9a9:	jne    0x14000a9b5
   14000a9ab:	mov    ebx,0x1
   14000a9b0:	mov    r14d,ebx
   14000a9b3:	jmp    0x14000a9c7
   14000a9b5:	mov    ecx,0x3e8
   14000a9ba:	call   QWORD PTR [rip+0x1748]        # 0x14000c108
   14000a9c0:	jmp    0x14000a999
   14000a9c2:	mov    ebx,0x1
   14000a9c7:	mov    eax,DWORD PTR [rip+0x4c3b]        # 0x14000f608
   14000a9cd:	cmp    eax,ebx
   14000a9cf:	jne    0x14000a9dd
   14000a9d1:	mov    ecx,0x1f
   14000a9d6:	call   0x14000ace4
   14000a9db:	jmp    0x14000aa46
   14000a9dd:	mov    eax,DWORD PTR [rip+0x4c25]        # 0x14000f608
   14000a9e3:	test   eax,eax
   14000a9e5:	jne    0x14000aa40
   14000a9e7:	mov    DWORD PTR [rip+0x4c1b],ebx        # 0x14000f608
   14000a9ed:	lea    r12,[rip+0x19dc]        # 0x14000c3d0
   14000a9f4:	lea    rdi,[rip+0x19bd]        # 0x14000c3b8
   14000a9fb:	mov    QWORD PTR [rsp+0x28],rdi
   14000aa00:	mov    DWORD PTR [rsp+0x20],eax
   14000aa04:	cmp    rdi,r12
   14000aa07:	jae    0x14000aa32
   14000aa09:	test   eax,eax
   14000aa0b:	jne    0x14000aa36
   14000aa0d:	mov    rsi,QWORD PTR [rdi]
   14000aa10:	test   rsi,rsi
   14000aa13:	je     0x14000aa27
   14000aa15:	mov    rcx,rsi
   14000aa18:	mov    rax,QWORD PTR [rip+0x1971]        # 0x14000c390
   14000aa1f:	call   rax
   14000aa21:	call   rsi
   14000aa23:	mov    DWORD PTR [rsp+0x20],eax
   14000aa27:	add    rdi,0x8
   14000aa2b:	mov    QWORD PTR [rsp+0x28],rdi
   14000aa30:	jmp    0x14000aa04
   14000aa32:	test   eax,eax
   14000aa34:	je     0x14000aa46
   14000aa36:	mov    eax,0xff
   14000aa3b:	jmp    0x14000ab27
   14000aa40:	mov    DWORD PTR [rip+0x45ee],ebx        # 0x14000f034
   14000aa46:	mov    eax,DWORD PTR [rip+0x4bbc]        # 0x14000f608
   14000aa4c:	cmp    eax,ebx
   14000aa4e:	jne    0x14000aa6d
   14000aa50:	lea    rdx,[rip+0x1959]        # 0x14000c3b0
   14000aa57:	lea    rcx,[rip+0x1942]        # 0x14000c3a0
   14000aa5e:	call   0x14000aeba
   14000aa63:	mov    DWORD PTR [rip+0x4b9b],0x2        # 0x14000f608
   14000aa6d:	test   r14d,r14d
   14000aa70:	jne    0x14000aa7b
   14000aa72:	xor    eax,eax
   14000aa74:	xchg   QWORD PTR [rip+0x4b85],rax        # 0x14000f600
   14000aa7b:	cmp    QWORD PTR [rip+0x4b8d],0x0        # 0x14000f610
   14000aa83:	je     0x14000aab3
   14000aa85:	lea    rcx,[rip+0x4b84]        # 0x14000f610
   14000aa8c:	call   0x14000ad40
   14000aa91:	test   eax,eax
   14000aa93:	je     0x14000aab3
   14000aa95:	mov    rbx,QWORD PTR [rip+0x4b74]        # 0x14000f610
   14000aa9c:	mov    rcx,rbx
   14000aa9f:	mov    rax,QWORD PTR [rip+0x18ea]        # 0x14000c390
   14000aaa6:	call   rax
   14000aaa8:	xor    r8d,r8d
   14000aaab:	lea    edx,[r8+0x2]
   14000aaaf:	xor    ecx,ecx
   14000aab1:	call   rbx
   14000aab3:	mov    r8,QWORD PTR [rip+0x458e]        # 0x14000f048
   14000aaba:	mov    rdx,QWORD PTR [rip+0x457f]        # 0x14000f040
   14000aac1:	mov    ecx,DWORD PTR [rip+0x4571]        # 0x14000f038
   14000aac7:	call   0x1400027b8
   14000aacc:	mov    DWORD PTR [rip+0x455e],eax        # 0x14000f030
   14000aad2:	cmp    DWORD PTR [rip+0x4577],0x0        # 0x14000f050
   14000aad9:	jne    0x14000aae3
   14000aadb:	mov    ecx,eax
   14000aadd:	call   QWORD PTR [rip+0x177d]        # 0x14000c260
   14000aae3:	cmp    DWORD PTR [rip+0x454a],0x0        # 0x14000f034
   14000aaea:	jne    0x14000aaf8
   14000aaec:	call   QWORD PTR [rip+0x177e]        # 0x14000c270
   14000aaf2:	mov    eax,DWORD PTR [rip+0x4538]        # 0x14000f030
   14000aaf8:	jmp    0x14000ab27
   14000aafa:	mov    DWORD PTR [rip+0x4530],eax        # 0x14000f030
   14000ab00:	cmp    DWORD PTR [rip+0x4549],0x0        # 0x14000f050
   14000ab07:	jne    0x14000ab12
   14000ab09:	mov    ecx,eax
   14000ab0b:	call   QWORD PTR [rip+0x1757]        # 0x14000c268
   14000ab11:	int3   
   14000ab12:	cmp    DWORD PTR [rip+0x451b],0x0        # 0x14000f034
   14000ab19:	jne    0x14000ab27
   14000ab1b:	call   QWORD PTR [rip+0x174f]        # 0x14000c270
   14000ab21:	mov    eax,DWORD PTR [rip+0x4509]        # 0x14000f030
   14000ab27:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ab2c:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ab31:	mov    rdi,QWORD PTR [rsp+0x50]
   14000ab36:	mov    r12,QWORD PTR [rsp+0x58]
   14000ab3b:	add    rsp,0x30
   14000ab3f:	pop    r14
   14000ab41:	ret    
   14000ab42:	int3   
   14000ab43:	int3   
   14000ab44:	int3   
   14000ab45:	int3   
   14000ab46:	int3   
   14000ab47:	int3   
   14000ab48:	int3   
   14000ab49:	int3   
   14000ab4a:	int3   
   14000ab4b:	int3   
   14000ab4c:	int3   
   14000ab4d:	int3   
   14000ab4e:	int3   
   14000ab4f:	int3   
   14000ab50:	sub    rsp,0x28
   14000ab54:	call   0x14000add4
   14000ab59:	add    rsp,0x28
   14000ab5d:	jmp    0x14000a970
   14000ab62:	int3   
   14000ab63:	int3   
   14000ab64:	int3   
   14000ab65:	int3   
   14000ab66:	int3   
   14000ab67:	int3   
   14000ab68:	int3   
   14000ab69:	int3   
   14000ab6a:	int3   
   14000ab6b:	int3   
   14000ab6c:	int3   
   14000ab6d:	int3   
   14000ab6e:	int3   
   14000ab6f:	int3   
   14000ab70:	int3   
   14000ab71:	int3   
   14000ab72:	int3   
   14000ab73:	int3   
   14000ab74:	int3   
   14000ab75:	int3   
   14000ab76:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ab80:	cmp    rcx,QWORD PTR [rip+0x4481]        # 0x14000f008
   14000ab87:	jne    0x14000ab99
   14000ab89:	rol    rcx,0x10
   14000ab8d:	test   cx,0xffff
   14000ab92:	jne    0x14000ab95
   14000ab94:	ret    
   14000ab95:	ror    rcx,0x10
   14000ab99:	jmp    0x14000af30
   14000ab9e:	int3   
   14000ab9f:	int3   
   14000aba0:	int3   
   14000aba1:	int3   
   14000aba2:	int3   
   14000aba3:	int3   
   14000aba4:	jmp    QWORD PTR [rip+0x1696]        # 0x14000c240
   14000abaa:	int3   
   14000abab:	int3   
   14000abac:	int3   
   14000abad:	int3   
   14000abae:	int3   
   14000abaf:	int3   
   14000abb0:	jmp    QWORD PTR [rip+0x167a]        # 0x14000c230
   14000abb6:	int3   
   14000abb7:	int3   
   14000abb8:	int3   
   14000abb9:	int3   
   14000abba:	int3   
   14000abbb:	int3   
   14000abbc:	jmp    QWORD PTR [rip+0x1676]        # 0x14000c238
   14000abc2:	int3   
   14000abc3:	int3   
   14000abc4:	int3   
   14000abc5:	int3   
   14000abc6:	int3   
   14000abc7:	int3   
   14000abc8:	int3   
   14000abc9:	int3   
   14000abca:	int3   
   14000abcb:	int3   
   14000abcc:	int3   
   14000abcd:	int3   
   14000abce:	int3   
   14000abcf:	int3   
   14000abd0:	sub    rsp,0x28
   14000abd4:	mov    rax,QWORD PTR [rcx]
   14000abd7:	cmp    DWORD PTR [rax],0xe06d7363
   14000abdd:	jne    0x14000ac02
   14000abdf:	cmp    DWORD PTR [rax+0x18],0x4
   14000abe3:	jne    0x14000ac02
   14000abe5:	mov    ecx,DWORD PTR [rax+0x20]
   14000abe8:	lea    eax,[rcx-0x19930520]
   14000abee:	cmp    eax,0x2
   14000abf1:	jbe    0x14000abfb
   14000abf3:	cmp    ecx,0x1994000
   14000abf9:	jne    0x14000ac02
   14000abfb:	call   QWORD PTR [rip+0x169f]        # 0x14000c2a0
   14000ac01:	int3   
   14000ac02:	xor    eax,eax
   14000ac04:	add    rsp,0x28
   14000ac08:	ret    
   14000ac09:	int3   
   14000ac0a:	int3   
   14000ac0b:	int3   
   14000ac0c:	int3   
   14000ac0d:	int3   
   14000ac0e:	int3   
   14000ac0f:	int3   
   14000ac10:	sub    rsp,0x28
   14000ac14:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x14000abd0
   14000ac1b:	call   QWORD PTR [rip+0x1557]        # 0x14000c178
   14000ac21:	xor    eax,eax
   14000ac23:	add    rsp,0x28
   14000ac27:	ret    
   14000ac28:	int3   
   14000ac29:	int3   
   14000ac2a:	int3   
   14000ac2b:	int3   
   14000ac2c:	int3   
   14000ac2d:	int3   
   14000ac2e:	jmp    QWORD PTR [rip+0x1694]        # 0x14000c2c8
   14000ac34:	int3   
   14000ac35:	int3   
   14000ac36:	int3   
   14000ac37:	int3   
   14000ac38:	int3   
   14000ac39:	int3   
   14000ac3a:	int3   
   14000ac3b:	int3   
   14000ac3c:	sub    rsp,0x18
   14000ac40:	xor    edx,edx
   14000ac42:	lea    rax,[rcx-0x1]
   14000ac46:	cmp    rax,0xfffffffffffffffd
   14000ac4a:	ja     0x14000ac88
   14000ac4c:	mov    eax,0x5a4d
   14000ac51:	cmp    WORD PTR [rcx],ax
   14000ac54:	jne    0x14000ac80
   14000ac56:	cmp    DWORD PTR [rcx+0x3c],edx
   14000ac59:	jl     0x14000ac80
   14000ac5b:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   14000ac62:	jae    0x14000ac80
   14000ac64:	movsxd rax,DWORD PTR [rcx+0x3c]
   14000ac68:	add    rax,rcx
   14000ac6b:	mov    QWORD PTR [rsp],rax
   14000ac6f:	cmp    DWORD PTR [rax],0x4550
   14000ac75:	cmovne rax,rdx
   14000ac79:	mov    rdx,rax
   14000ac7c:	mov    QWORD PTR [rsp],rax
   14000ac80:	jmp    0x14000ac88
   14000ac82:	xor    edx,edx
   14000ac84:	mov    QWORD PTR [rsp],rdx
   14000ac88:	mov    rax,rdx
   14000ac8b:	add    rsp,0x18
   14000ac8f:	ret    
   14000ac90:	int3   
   14000ac91:	int3   
   14000ac92:	int3   
   14000ac93:	int3   
   14000ac94:	int3   
   14000ac95:	int3   
   14000ac96:	int3   
   14000ac97:	int3   
   14000ac98:	rex push rbx
   14000ac9a:	sub    rsp,0x20
   14000ac9e:	mov    ebx,ecx
   14000aca0:	xor    ecx,ecx
   14000aca2:	call   QWORD PTR [rip+0x1490]        # 0x14000c138
   14000aca8:	test   rax,rax
   14000acab:	je     0x14000acd5
   14000acad:	mov    rcx,rax
   14000acb0:	call   0x14000ac3c
   14000acb5:	test   rax,rax
   14000acb8:	je     0x14000acd5
   14000acba:	mov    ecx,0x2
   14000acbf:	cmp    WORD PTR [rax+0x5c],cx
   14000acc3:	jne    0x14000acc9
   14000acc5:	mov    eax,ecx
   14000acc7:	jmp    0x14000acd7
   14000acc9:	cmp    WORD PTR [rax+0x5c],0x3
   14000acce:	mov    eax,0x1
   14000acd3:	je     0x14000acd7
   14000acd5:	mov    eax,ebx
   14000acd7:	add    rsp,0x20
   14000acdb:	pop    rbx
   14000acdc:	ret    
   14000acdd:	int3   
   14000acde:	int3   
   14000acdf:	int3   
   14000ace0:	int3   
   14000ace1:	int3   
   14000ace2:	int3   
   14000ace3:	int3   
   14000ace4:	jmp    QWORD PTR [rip+0x155e]        # 0x14000c248
   14000acea:	int3   
   14000aceb:	int3   
   14000acec:	int3   
   14000aced:	int3   
   14000acee:	int3   
   14000acef:	int3   
   14000acf0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000acf4:	xor    r9d,r9d
   14000acf7:	add    r8,rcx
   14000acfa:	mov    r10,rdx
   14000acfd:	movzx  eax,WORD PTR [r8+0x14]
   14000ad02:	movzx  r11d,WORD PTR [r8+0x6]
   14000ad07:	add    rax,0x18
   14000ad0b:	add    rax,r8
   14000ad0e:	test   r11d,r11d
   14000ad11:	je     0x14000ad31
   14000ad13:	mov    edx,DWORD PTR [rax+0xc]
   14000ad16:	cmp    r10,rdx
   14000ad19:	jb     0x14000ad25
   14000ad1b:	mov    ecx,DWORD PTR [rax+0x8]
   14000ad1e:	add    ecx,edx
   14000ad20:	cmp    r10,rcx
   14000ad23:	jb     0x14000ad33
   14000ad25:	inc    r9d
   14000ad28:	add    rax,0x28
   14000ad2c:	cmp    r9d,r11d
   14000ad2f:	jb     0x14000ad13
   14000ad31:	xor    eax,eax
   14000ad33:	ret    
   14000ad34:	int3   
   14000ad35:	int3   
   14000ad36:	int3   
   14000ad37:	int3   
   14000ad38:	int3   
   14000ad39:	int3   
   14000ad3a:	int3   
   14000ad3b:	int3   
   14000ad3c:	int3   
   14000ad3d:	int3   
   14000ad3e:	int3   
   14000ad3f:	int3   
   14000ad40:	mov    QWORD PTR [rsp+0x8],rbx
   14000ad45:	push   rdi
   14000ad46:	sub    rsp,0x20
   14000ad4a:	mov    rbx,rcx
   14000ad4d:	lea    rdi,[rip+0xffffffffffff52ac]        # 0x140000000
   14000ad54:	mov    rcx,rdi
   14000ad57:	call   0x14000ada0
   14000ad5c:	test   eax,eax
   14000ad5e:	je     0x14000ad82
   14000ad60:	sub    rbx,rdi
   14000ad63:	mov    rdx,rbx
   14000ad66:	mov    rcx,rdi
   14000ad69:	call   0x14000acf0
   14000ad6e:	test   rax,rax
   14000ad71:	je     0x14000ad82
   14000ad73:	mov    eax,DWORD PTR [rax+0x24]
   14000ad76:	shr    eax,0x1f
   14000ad79:	not    eax
   14000ad7b:	and    eax,0x1
   14000ad7e:	jmp    0x14000ad82
   14000ad80:	xor    eax,eax
   14000ad82:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ad87:	add    rsp,0x20
   14000ad8b:	pop    rdi
   14000ad8c:	ret    
   14000ad8d:	int3   
   14000ad8e:	int3   
   14000ad8f:	int3   
   14000ad90:	int3   
   14000ad91:	int3   
   14000ad92:	int3   
   14000ad93:	int3   
   14000ad94:	int3   
   14000ad95:	int3   
   14000ad96:	int3   
   14000ad97:	int3   
   14000ad98:	int3   
   14000ad99:	int3   
   14000ad9a:	int3   
   14000ad9b:	int3   
   14000ad9c:	int3   
   14000ad9d:	int3   
   14000ad9e:	int3   
   14000ad9f:	int3   
   14000ada0:	mov    rax,rcx
   14000ada3:	mov    ecx,0x5a4d
   14000ada8:	cmp    WORD PTR [rax],cx
   14000adab:	je     0x14000adb0
   14000adad:	xor    eax,eax
   14000adaf:	ret    
   14000adb0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000adb4:	add    rcx,rax
   14000adb7:	xor    eax,eax
   14000adb9:	cmp    DWORD PTR [rcx],0x4550
   14000adbf:	jne    0x14000adcd
   14000adc1:	mov    edx,0x20b
   14000adc6:	cmp    WORD PTR [rcx+0x18],dx
   14000adca:	sete   al
   14000adcd:	ret    
   14000adce:	int3   
   14000adcf:	int3   
   14000add0:	int3   
   14000add1:	int3   
   14000add2:	int3   
   14000add3:	int3   
   14000add4:	mov    QWORD PTR [rsp+0x20],rbx
   14000add9:	push   rbp
   14000adda:	mov    rbp,rsp
   14000addd:	sub    rsp,0x20
   14000ade1:	and    QWORD PTR [rbp+0x18],0x0
   14000ade6:	movabs rbx,0x2b992ddfa232
   14000adf0:	mov    rax,QWORD PTR [rip+0x4211]        # 0x14000f008
   14000adf7:	cmp    rax,rbx
   14000adfa:	jne    0x14000ae8f
   14000ae00:	lea    rcx,[rbp+0x18]
   14000ae04:	call   QWORD PTR [rip+0x1336]        # 0x14000c140
   14000ae0a:	mov    rax,QWORD PTR [rbp+0x18]
   14000ae0e:	mov    QWORD PTR [rbp+0x10],rax
   14000ae12:	call   QWORD PTR [rip+0x1350]        # 0x14000c168
   14000ae18:	mov    eax,eax
   14000ae1a:	xor    QWORD PTR [rbp+0x10],rax
   14000ae1e:	call   QWORD PTR [rip+0x133c]        # 0x14000c160
   14000ae24:	mov    eax,eax
   14000ae26:	xor    QWORD PTR [rbp+0x10],rax
   14000ae2a:	call   QWORD PTR [rip+0x1328]        # 0x14000c158
   14000ae30:	mov    eax,eax
   14000ae32:	shl    rax,0x18
   14000ae36:	xor    QWORD PTR [rbp+0x10],rax
   14000ae3a:	call   QWORD PTR [rip+0x1318]        # 0x14000c158
   14000ae40:	mov    eax,eax
   14000ae42:	lea    rcx,[rbp+0x10]
   14000ae46:	xor    rax,QWORD PTR [rbp+0x10]
   14000ae4a:	xor    rax,rcx
   14000ae4d:	lea    rcx,[rbp+0x20]
   14000ae51:	mov    QWORD PTR [rbp+0x10],rax
   14000ae55:	call   QWORD PTR [rip+0x1315]        # 0x14000c170
   14000ae5b:	mov    eax,DWORD PTR [rbp+0x20]
   14000ae5e:	movabs rcx,0xffffffffffff
   14000ae68:	shl    rax,0x20
   14000ae6c:	xor    rax,QWORD PTR [rbp+0x20]
   14000ae70:	xor    rax,QWORD PTR [rbp+0x10]
   14000ae74:	and    rax,rcx
   14000ae77:	movabs rcx,0x2b992ddfa233
   14000ae81:	cmp    rax,rbx
   14000ae84:	cmove  rax,rcx
   14000ae88:	mov    QWORD PTR [rip+0x4179],rax        # 0x14000f008
   14000ae8f:	mov    rbx,QWORD PTR [rsp+0x48]
   14000ae94:	not    rax
   14000ae97:	mov    QWORD PTR [rip+0x4172],rax        # 0x14000f010
   14000ae9e:	add    rsp,0x20
   14000aea2:	pop    rbp
   14000aea3:	ret    
   14000aea4:	int3   
   14000aea5:	int3   
   14000aea6:	int3   
   14000aea7:	int3   
   14000aea8:	int3   
   14000aea9:	int3   
   14000aeaa:	int3   
   14000aeab:	int3   
   14000aeac:	int3   
   14000aead:	int3   
   14000aeae:	int3   
   14000aeaf:	int3   
   14000aeb0:	xor    eax,eax
   14000aeb2:	ret    
   14000aeb3:	int3   
   14000aeb4:	int3   
   14000aeb5:	int3   
   14000aeb6:	int3   
   14000aeb7:	int3   
   14000aeb8:	int3   
   14000aeb9:	int3   
   14000aeba:	jmp    QWORD PTR [rip+0x13c0]        # 0x14000c280
   14000aec0:	int3   
   14000aec1:	int3   
   14000aec2:	int3   
   14000aec3:	int3   
   14000aec4:	int3   
   14000aec5:	int3   
   14000aec6:	jmp    QWORD PTR [rip+0x13bc]        # 0x14000c288
   14000aecc:	int3   
   14000aecd:	int3   
   14000aece:	int3   
   14000aecf:	int3   
   14000aed0:	int3   
   14000aed1:	int3   
   14000aed2:	int3   
   14000aed3:	int3   
   14000aed4:	int3   
   14000aed5:	int3   
   14000aed6:	int3   
   14000aed7:	int3   
   14000aed8:	int3   
   14000aed9:	int3   
   14000aeda:	int3   
   14000aedb:	int3   
   14000aedc:	int3   
   14000aedd:	int3   
   14000aede:	int3   
   14000aedf:	int3   
   14000aee0:	ret    0x0
   14000aee3:	int3   
   14000aee4:	int3   
   14000aee5:	int3   
   14000aee6:	int3   
   14000aee7:	int3   
   14000aee8:	int3   
   14000aee9:	int3   
   14000aeea:	int3   
   14000aeeb:	int3   
   14000aeec:	rex push rbx
   14000aeee:	sub    rsp,0x20
   14000aef2:	mov    rbx,rcx
   14000aef5:	xor    ecx,ecx
   14000aef7:	call   QWORD PTR [rip+0x127b]        # 0x14000c178
   14000aefd:	mov    rcx,rbx
   14000af00:	call   QWORD PTR [rip+0x124a]        # 0x14000c150
   14000af06:	call   QWORD PTR [rip+0x11dc]        # 0x14000c0e8
   14000af0c:	mov    rcx,rax
   14000af0f:	mov    edx,0xc0000409
   14000af14:	add    rsp,0x20
   14000af18:	pop    rbx
   14000af19:	rex.W jmp QWORD PTR [rip+0x11c0]        # 0x14000c0e0
   14000af20:	int3   
   14000af21:	int3   
   14000af22:	int3   
   14000af23:	int3   
   14000af24:	int3   
   14000af25:	int3   
   14000af26:	int3   
   14000af27:	int3   
   14000af28:	int3   
   14000af29:	int3   
   14000af2a:	int3   
   14000af2b:	int3   
   14000af2c:	int3   
   14000af2d:	int3   
   14000af2e:	int3   
   14000af2f:	int3   
   14000af30:	mov    QWORD PTR [rsp+0x8],rcx
   14000af35:	sub    rsp,0x88
   14000af3c:	lea    rcx,[rip+0x41cd]        # 0x14000f110
   14000af43:	call   QWORD PTR [rip+0x13b7]        # 0x14000c300
   14000af49:	mov    rax,QWORD PTR [rip+0x42b8]        # 0x14000f208
   14000af50:	mov    QWORD PTR [rsp+0x48],rax
   14000af55:	xor    r8d,r8d
   14000af58:	lea    rdx,[rsp+0x50]
   14000af5d:	mov    rcx,QWORD PTR [rsp+0x48]
   14000af62:	call   QWORD PTR [rip+0x13a0]        # 0x14000c308
   14000af68:	mov    QWORD PTR [rsp+0x40],rax
   14000af6d:	cmp    QWORD PTR [rsp+0x40],0x0
   14000af73:	je     0x14000afb7
   14000af75:	mov    QWORD PTR [rsp+0x38],0x0
   14000af7e:	lea    rax,[rsp+0x58]
   14000af83:	mov    QWORD PTR [rsp+0x30],rax
   14000af88:	lea    rax,[rsp+0x60]
   14000af8d:	mov    QWORD PTR [rsp+0x28],rax
   14000af92:	lea    rax,[rip+0x4177]        # 0x14000f110
   14000af99:	mov    QWORD PTR [rsp+0x20],rax
   14000af9e:	mov    r9,QWORD PTR [rsp+0x40]
   14000afa3:	mov    r8,QWORD PTR [rsp+0x48]
   14000afa8:	mov    rdx,QWORD PTR [rsp+0x50]
   14000afad:	xor    ecx,ecx
   14000afaf:	call   QWORD PTR [rip+0x135b]        # 0x14000c310
   14000afb5:	jmp    0x14000afda
   14000afb7:	mov    rax,QWORD PTR [rip+0x41ea]        # 0x14000f1a8
   14000afbe:	mov    rax,QWORD PTR [rax]
   14000afc1:	mov    QWORD PTR [rip+0x4240],rax        # 0x14000f208
   14000afc8:	mov    rax,QWORD PTR [rip+0x41d9]        # 0x14000f1a8
   14000afcf:	add    rax,0x8
   14000afd3:	mov    QWORD PTR [rip+0x41ce],rax        # 0x14000f1a8
   14000afda:	mov    rax,QWORD PTR [rip+0x4227]        # 0x14000f208
   14000afe1:	mov    QWORD PTR [rip+0x4098],rax        # 0x14000f080
   14000afe8:	mov    rax,QWORD PTR [rsp+0x90]
   14000aff0:	mov    QWORD PTR [rip+0x4199],rax        # 0x14000f190
   14000aff7:	mov    DWORD PTR [rip+0x406f],0xc0000409        # 0x14000f070
   14000b001:	mov    DWORD PTR [rip+0x4069],0x1        # 0x14000f074
   14000b00b:	mov    DWORD PTR [rip+0x4073],0x3        # 0x14000f088
   14000b015:	mov    eax,0x8
   14000b01a:	imul   rax,rax,0x0
   14000b01e:	lea    rcx,[rip+0x406b]        # 0x14000f090
   14000b025:	mov    QWORD PTR [rcx+rax*1],0x2
   14000b02d:	mov    eax,0x8
   14000b032:	imul   rax,rax,0x1
   14000b036:	lea    rcx,[rip+0x4053]        # 0x14000f090
   14000b03d:	mov    rdx,QWORD PTR [rip+0x3fc4]        # 0x14000f008
   14000b044:	mov    QWORD PTR [rcx+rax*1],rdx
   14000b048:	mov    eax,0x8
   14000b04d:	imul   rax,rax,0x2
   14000b051:	lea    rcx,[rip+0x4038]        # 0x14000f090
   14000b058:	mov    rdx,QWORD PTR [rip+0x3fb1]        # 0x14000f010
   14000b05f:	mov    QWORD PTR [rcx+rax*1],rdx
   14000b063:	mov    eax,0x8
   14000b068:	imul   rax,rax,0x0
   14000b06c:	mov    rcx,QWORD PTR [rip+0x3f95]        # 0x14000f008
   14000b073:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000b078:	mov    eax,0x8
   14000b07d:	imul   rax,rax,0x1
   14000b081:	mov    rcx,QWORD PTR [rip+0x3f88]        # 0x14000f010
   14000b088:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   14000b08d:	lea    rcx,[rip+0x136c]        # 0x14000c400
   14000b094:	call   0x14000aeec
   14000b099:	add    rsp,0x88
   14000b0a0:	ret    
   14000b0a1:	int3   
   14000b0a2:	int3   
   14000b0a3:	int3   
   14000b0a4:	int3   
   14000b0a5:	int3   
   14000b0a6:	int3   
   14000b0a7:	int3   
   14000b0a8:	int3   
   14000b0a9:	int3   
   14000b0aa:	int3   
   14000b0ab:	int3   
   14000b0ac:	int3   
   14000b0ad:	int3   
   14000b0ae:	int3   
   14000b0af:	int3   
   14000b0b0:	int3   
   14000b0b1:	int3   
   14000b0b2:	int3   
   14000b0b3:	int3   
   14000b0b4:	int3   
   14000b0b5:	int3   
   14000b0b6:	int3   
   14000b0b7:	int3   
   14000b0b8:	sub    rsp,0x28
   14000b0bc:	mov    r8,QWORD PTR [r9+0x38]
   14000b0c0:	mov    rcx,rdx
   14000b0c3:	mov    rdx,r9
   14000b0c6:	call   0x14000b0dc
   14000b0cb:	mov    eax,0x1
   14000b0d0:	add    rsp,0x28
   14000b0d4:	ret    
   14000b0d5:	int3   
   14000b0d6:	int3   
   14000b0d7:	int3   
   14000b0d8:	int3   
   14000b0d9:	int3   
   14000b0da:	int3   
   14000b0db:	int3   
   14000b0dc:	rex push rbx
   14000b0de:	sub    rsp,0x20
   14000b0e2:	mov    r11d,DWORD PTR [r8]
   14000b0e5:	mov    rbx,rdx
   14000b0e8:	and    r11d,0xfffffff8
   14000b0ec:	mov    r9,rcx
   14000b0ef:	test   BYTE PTR [r8],0x4
   14000b0f3:	mov    r10,rcx
   14000b0f6:	je     0x14000b10b
   14000b0f8:	mov    eax,DWORD PTR [r8+0x8]
   14000b0fc:	movsxd r10,DWORD PTR [r8+0x4]
   14000b100:	neg    eax
   14000b102:	add    r10,rcx
   14000b105:	movsxd rcx,eax
   14000b108:	and    r10,rcx
   14000b10b:	movsxd rax,r11d
   14000b10e:	mov    rdx,QWORD PTR [rax+r10*1]
   14000b112:	mov    rax,QWORD PTR [rbx+0x10]
   14000b116:	mov    ecx,DWORD PTR [rax+0x8]
   14000b119:	add    rcx,QWORD PTR [rbx+0x8]
   14000b11d:	test   BYTE PTR [rcx+0x3],0xf
   14000b121:	je     0x14000b12f
   14000b123:	movzx  eax,BYTE PTR [rcx+0x3]
   14000b127:	and    eax,0xfffffff0
   14000b12a:	cdqe   
   14000b12c:	add    r9,rax
   14000b12f:	xor    r9,rdx
   14000b132:	mov    rcx,r9
   14000b135:	add    rsp,0x20
   14000b139:	pop    rbx
   14000b13a:	jmp    0x14000ab80
   14000b13f:	int3   
   14000b140:	int3   
   14000b141:	int3   
   14000b142:	int3   
   14000b143:	int3   
   14000b144:	int3   
   14000b145:	int3   
   14000b146:	jmp    QWORD PTR [rip+0x118c]        # 0x14000c2d8
   14000b14c:	int3   
   14000b14d:	int3   
   14000b14e:	int3   
   14000b14f:	int3   
   14000b150:	int3   
   14000b151:	int3   
   14000b152:	jmp    QWORD PTR [rip+0x1178]        # 0x14000c2d0
   14000b158:	int3   
   14000b159:	int3   
   14000b15a:	int3   
   14000b15b:	int3   
   14000b15c:	int3   
   14000b15d:	int3   
   14000b15e:	int3   
   14000b15f:	int3   
   14000b160:	int3   
   14000b161:	int3   
   14000b162:	int3   
   14000b163:	int3   
   14000b164:	int3   
   14000b165:	int3   
   14000b166:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b170:	jmp    rax
   14000b172:	int3   
   14000b173:	int3   
   14000b174:	int3   
   14000b175:	int3   
   14000b176:	int3   
   14000b177:	int3   
   14000b178:	int3   
   14000b179:	int3   
   14000b17a:	int3   
   14000b17b:	int3   
   14000b17c:	int3   
   14000b17d:	int3   
   14000b17e:	int3   
   14000b17f:	int3   
   14000b180:	int3   
   14000b181:	int3   
   14000b182:	int3   
   14000b183:	int3   
   14000b184:	int3   
   14000b185:	int3   
   14000b186:	rex push rbp
   14000b188:	sub    rsp,0x20
   14000b18c:	mov    rbp,rdx
   14000b18f:	mov    rax,QWORD PTR [rcx]
   14000b192:	mov    rdx,rcx
   14000b195:	mov    ecx,DWORD PTR [rax]
   14000b197:	call   0x14000ac2e
   14000b19c:	nop
   14000b19d:	add    rsp,0x20
   14000b1a1:	pop    rbp
   14000b1a2:	ret    
   14000b1a3:	int3   
   14000b1a4:	int3   
   14000b1a5:	int3   
   14000b1a6:	int3   
   14000b1a7:	int3   
   14000b1a8:	int3   
   14000b1a9:	int3   
   14000b1aa:	int3   
   14000b1ab:	int3   
   14000b1ac:	int3   
   14000b1ad:	int3   
   14000b1ae:	int3   
   14000b1af:	int3   
   14000b1b0:	rex push rbp
   14000b1b2:	sub    rsp,0x20
   14000b1b6:	mov    rbp,rdx
   14000b1b9:	mov    rax,QWORD PTR [rcx]
   14000b1bc:	xor    ecx,ecx
   14000b1be:	cmp    DWORD PTR [rax],0xc0000005
   14000b1c4:	sete   cl
   14000b1c7:	mov    eax,ecx
   14000b1c9:	add    rsp,0x20
   14000b1cd:	pop    rbp
   14000b1ce:	ret    
   14000b1cf:	int3   

Disassembly of section .rdata:

000000014000c000 <.rdata>:
   14000c000:	pop    rax
   14000c001:	loopne 0x14000c003
   14000c003:	add    BYTE PTR [rax],al
   14000c005:	add    BYTE PTR [rax],al
   14000c007:	add    BYTE PTR [rax-0x20],ch
   14000c00a:	add    BYTE PTR [rax],al
   14000c00c:	add    BYTE PTR [rax],al
   14000c00e:	add    BYTE PTR [rax],al
   14000c010:	js     0x14000bff2
   14000c012:	add    BYTE PTR [rax],al
   14000c014:	add    BYTE PTR [rax],al
   14000c016:	add    BYTE PTR [rax],al
   14000c018:	xchg   al,ah
   14000c01a:	add    BYTE PTR [rax],al
   14000c01c:	add    BYTE PTR [rax],al
   14000c01e:	add    BYTE PTR [rax],al
   14000c020:	int3   
   14000c021:	in     al,0x0
   14000c023:	add    BYTE PTR [rax],al
   14000c025:	add    BYTE PTR [rax],al
   14000c027:	add    BYTE PTR [rsi+0xe4],bh
   14000c02d:	add    BYTE PTR [rax],al
   14000c02f:	add    BYTE PTR [rsi+0xe4],ch
   14000c035:	add    BYTE PTR [rax],al
   14000c037:	add    BYTE PTR [rdx+0xe4],dl
   14000c03d:	add    BYTE PTR [rax],al
   14000c03f:	add    BYTE PTR [rsp+riz*8+0x0],dh
   14000c043:	add    BYTE PTR [rax],al
   14000c045:	add    BYTE PTR [rax],al
   14000c047:	add    BYTE PTR [rsi-0x1c],dl
   14000c04a:	add    BYTE PTR [rax],al
   14000c04c:	add    BYTE PTR [rax],al
   14000c04e:	add    BYTE PTR [rax],al
   14000c050:	rex.X in al,0x0
   14000c053:	add    BYTE PTR [rax],al
   14000c055:	add    BYTE PTR [rax],al
   14000c057:	add    BYTE PTR [rdx],ah
   14000c059:	in     al,0x0
   14000c05b:	add    BYTE PTR [rax],al
   14000c05d:	add    BYTE PTR [rax],al
   14000c05f:	add    BYTE PTR [rsp+riz*8],cl
   14000c062:	add    BYTE PTR [rax],al
   14000c064:	add    BYTE PTR [rax],al
   14000c066:	add    BYTE PTR [rax],al
   14000c068:	cli    
   14000c069:	jrcxz  0x14000c06b
   14000c06b:	add    BYTE PTR [rax],al
   14000c06d:	add    BYTE PTR [rax],al
   14000c06f:	add    dh,ah
   14000c071:	jrcxz  0x14000c073
   14000c073:	add    BYTE PTR [rax],al
   14000c075:	add    BYTE PTR [rax],al
   14000c077:	add    BYTE PTR [rsi],bl
   14000c079:	call   0x14000c07e
   14000c07e:	add    BYTE PTR [rax],al
   14000c080:	ss call 0x14000c086
   14000c086:	add    BYTE PTR [rax],al
   14000c088:	rex.RX call 0x14000c08e
	...
   14000c096:	add    BYTE PTR [rax],al
   14000c098:	js     0x14000c081
   14000c09a:	add    BYTE PTR [rax],al
   14000c09c:	add    BYTE PTR [rax],al
   14000c09e:	add    BYTE PTR [rax],al
   14000c0a0:	pop    rdx
   14000c0a1:	out    0x0,eax
   14000c0a3:	add    BYTE PTR [rax],al
   14000c0a5:	add    BYTE PTR [rax],al
   14000c0a7:	add    BYTE PTR [rax-0x19],cl
   14000c0aa:	add    BYTE PTR [rax],al
   14000c0ac:	add    BYTE PTR [rax],al
   14000c0ae:	add    BYTE PTR [rax],al
   14000c0b0:	cmp    ah,bh
   14000c0b2:	add    BYTE PTR [rax],al
   14000c0b4:	add    BYTE PTR [rax],al
   14000c0b6:	add    BYTE PTR [rax],al
   14000c0b8:	(bad)  
   14000c0b9:	out    0x0,eax
   14000c0bb:	add    BYTE PTR [rax],al
   14000c0bd:	add    BYTE PTR [rax],al
   14000c0bf:	add    dl,bh
   14000c0c1:	out    0x0,al
   14000c0c3:	add    BYTE PTR [rax],al
   14000c0c5:	add    BYTE PTR [rax],al
   14000c0c7:	add    ah,ah
   14000c0c9:	out    0x0,al
   14000c0cb:	add    BYTE PTR [rax],al
   14000c0cd:	add    BYTE PTR [rax],al
   14000c0cf:	add    dl,dl
   14000c0d1:	out    0x0,al
   14000c0d3:	add    BYTE PTR [rax],al
   14000c0d5:	add    BYTE PTR [rax],al
   14000c0d7:	add    ah,al
   14000c0d9:	out    0x0,al
   14000c0db:	add    BYTE PTR [rax],al
   14000c0dd:	add    BYTE PTR [rax],al
   14000c0df:	add    BYTE PTR [rax+0xe6],dh
   14000c0e5:	add    BYTE PTR [rax],al
   14000c0e7:	add    BYTE PTR [rsi+riz*8+0x0],bl
   14000c0ee:	add    BYTE PTR [rax],al
   14000c0f0:	xchg   edx,eax
   14000c0f1:	loope  0x14000c0f3
   14000c0f3:	add    BYTE PTR [rax],al
   14000c0f5:	add    BYTE PTR [rax],al
   14000c0f7:	add    BYTE PTR [rcx+riz*8+0x0],al
   14000c0fe:	add    BYTE PTR [rax],al
   14000c100:	outs   dx,BYTE PTR ds:[rsi]
   14000c101:	loope  0x14000c103
   14000c103:	add    BYTE PTR [rax],al
   14000c105:	add    BYTE PTR [rax],al
   14000c107:	add    BYTE PTR [rsi-0x1f],ah
   14000c10a:	add    BYTE PTR [rax],al
   14000c10c:	add    BYTE PTR [rax],al
   14000c10e:	add    BYTE PTR [rax],al
   14000c110:	push   rsp
   14000c111:	loope  0x14000c113
   14000c113:	add    BYTE PTR [rax],al
   14000c115:	add    BYTE PTR [rax],al
   14000c117:	add    BYTE PTR [rax-0x1f],cl
   14000c11a:	add    BYTE PTR [rax],al
   14000c11c:	add    BYTE PTR [rax],al
   14000c11e:	add    BYTE PTR [rax],al
   14000c120:	ss loope 0x14000c123
   14000c123:	add    BYTE PTR [rax],al
   14000c125:	add    BYTE PTR [rax],al
   14000c127:	add    BYTE PTR [rax],ah
   14000c129:	loope  0x14000c12b
   14000c12b:	add    BYTE PTR [rax],al
   14000c12d:	add    BYTE PTR [rax],al
   14000c12f:	add    BYTE PTR [rax],dl
   14000c131:	loope  0x14000c133
   14000c133:	add    BYTE PTR [rax],al
   14000c135:	add    BYTE PTR [rax],al
   14000c137:	add    ah,bh
   14000c139:	loopne 0x14000c13b
   14000c13b:	add    BYTE PTR [rax],al
   14000c13d:	add    BYTE PTR [rax],al
   14000c13f:	add    dl,ah
   14000c141:	loopne 0x14000c143
   14000c143:	add    BYTE PTR [rax],al
   14000c145:	add    BYTE PTR [rax],al
   14000c147:	add    ah,cl
   14000c149:	loopne 0x14000c14b
   14000c14b:	add    BYTE PTR [rax],al
   14000c14d:	add    BYTE PTR [rax],al
   14000c14f:	add    BYTE PTR [rax+0xe6],al
   14000c155:	add    BYTE PTR [rax],al
   14000c157:	add    BYTE PTR [rax-0x1a],dh
   14000c15a:	add    BYTE PTR [rax],al
   14000c15c:	add    BYTE PTR [rax],al
   14000c15e:	add    BYTE PTR [rax],al
   14000c160:	pop    rdx
   14000c161:	out    0x0,al
   14000c163:	add    BYTE PTR [rax],al
   14000c165:	add    BYTE PTR [rax],al
   14000c167:	add    BYTE PTR [rsi+riz*8+0x0],al
   14000c16b:	add    BYTE PTR [rax],al
   14000c16d:	add    BYTE PTR [rax],al
   14000c16f:	add    BYTE PTR [rdx],ch
   14000c171:	out    0x0,al
   14000c173:	add    BYTE PTR [rax],al
   14000c175:	add    BYTE PTR [rax],al
   14000c177:	add    BYTE PTR [rsi+riz*8],cl
   14000c17a:	add    BYTE PTR [rax],al
   14000c17c:	add    BYTE PTR [rax],al
   14000c17e:	add    BYTE PTR [rax],al
   14000c180:	push   0xffffffffffffffe7
	...
   14000c18e:	add    BYTE PTR [rax],al
   14000c190:	add    al,BYTE PTR [rax]
   14000c192:	add    BYTE PTR [rax],al
   14000c194:	add    BYTE PTR [rax],al
   14000c196:	add    BYTE PTR [rax+0x7],al
   14000c19c:	add    BYTE PTR [rax],al
   14000c19e:	add    BYTE PTR [rax+0x6],al
   14000c1a4:	add    BYTE PTR [rax],al
   14000c1a6:	add    BYTE PTR [rax+0x0],al
   14000c1ac:	add    BYTE PTR [rax],al
   14000c1ae:	add    BYTE PTR [rax],al
   14000c1b0:	mov    ch,ah
	...
   14000c1be:	add    BYTE PTR [rax],al
   14000c1c0:	fs jrcxz 0x14000c1c3
   14000c1c3:	add    BYTE PTR [rax],al
   14000c1c5:	add    BYTE PTR [rax],al
   14000c1c7:	add    BYTE PTR [rdx-0x1d],al
   14000c1ca:	add    BYTE PTR [rax],al
   14000c1cc:	add    BYTE PTR [rax],al
   14000c1ce:	add    BYTE PTR [rax],al
   14000c1d0:	sub    ah,bl
   14000c1d2:	add    BYTE PTR [rax],al
   14000c1d4:	add    BYTE PTR [rax],al
   14000c1d6:	add    BYTE PTR [rax],al
   14000c1d8:	(bad)  
   14000c1d9:	jrcxz  0x14000c1db
	...
   14000c1e7:	add    BYTE PTR [rdx+0xe3],ah
	...
   14000c1f5:	add    BYTE PTR [rax],al
   14000c1f7:	add    dh,al
   14000c1f9:	jrcxz  0x14000c1fb
	...
   14000c207:	add    dh,bl
   14000c209:	in     al,0x0
	...
   14000c217:	add    BYTE PTR [rax+0xe5],bh
   14000c21d:	add    BYTE PTR [rax],al
   14000c21f:	add    ah,bl
   14000c221:	in     eax,0x0
	...
   14000c22f:	add    al,dl
   14000c231:	loope  0x14000c233
   14000c233:	add    BYTE PTR [rax],al
   14000c235:	add    BYTE PTR [rax],al
   14000c237:	add    dl,bl
   14000c239:	loope  0x14000c23b
   14000c23b:	add    BYTE PTR [rax],al
   14000c23d:	add    BYTE PTR [rax],al
   14000c23f:	add    al,cl
   14000c241:	loope  0x14000c243
   14000c243:	add    BYTE PTR [rax],al
   14000c245:	add    BYTE PTR [rax],al
   14000c247:	add    ah,dh
   14000c249:	loope  0x14000c24b
   14000c24b:	add    BYTE PTR [rax],al
   14000c24d:	add    BYTE PTR [rax],al
   14000c24f:	add    BYTE PTR [rdx],al
   14000c251:	loop   0x14000c253
   14000c253:	add    BYTE PTR [rax],al
   14000c255:	add    BYTE PTR [rax],al
   14000c257:	add    BYTE PTR [rdx+riz*8],dl
   14000c25a:	add    BYTE PTR [rax],al
   14000c25c:	add    BYTE PTR [rax],al
   14000c25e:	add    BYTE PTR [rax],al
   14000c260:	es loop 0x14000c263
   14000c263:	add    BYTE PTR [rax],al
   14000c265:	add    BYTE PTR [rax],al
   14000c267:	add    BYTE PTR [rsi],ch
   14000c269:	loop   0x14000c26b
   14000c26b:	add    BYTE PTR [rax],al
   14000c26d:	add    BYTE PTR [rax],al
   14000c26f:	add    BYTE PTR [rsi],dh
   14000c271:	loop   0x14000c273
   14000c273:	add    BYTE PTR [rax],al
   14000c275:	add    BYTE PTR [rax],al
   14000c277:	add    BYTE PTR [rax-0x1e],al
   14000c27a:	add    BYTE PTR [rax],al
   14000c27c:	add    BYTE PTR [rax],al
   14000c27e:	add    BYTE PTR [rax],al
   14000c280:	push   rsp
   14000c281:	loop   0x14000c283
   14000c283:	add    BYTE PTR [rax],al
   14000c285:	add    BYTE PTR [rax],al
   14000c287:	add    BYTE PTR [rax-0x1e],ah
   14000c28a:	add    BYTE PTR [rax],al
   14000c28c:	add    BYTE PTR [rax],al
   14000c28e:	add    BYTE PTR [rax],al
   14000c290:	js     0x14000c274
   14000c292:	add    BYTE PTR [rax],al
   14000c294:	add    BYTE PTR [rax],al
   14000c296:	add    BYTE PTR [rax],al
   14000c298:	(bad)  
   14000c299:	loop   0x14000c29b
   14000c29b:	add    BYTE PTR [rax],al
   14000c29d:	add    BYTE PTR [rax],al
   14000c29f:	add    BYTE PTR [rdx+0xe2],bl
   14000c2a5:	add    BYTE PTR [rax],al
   14000c2a7:	add    al,al
   14000c2a9:	loope  0x14000c2ab
   14000c2ab:	add    BYTE PTR [rax],al
   14000c2ad:	add    BYTE PTR [rax],al
   14000c2af:	add    BYTE PTR [rcx+riz*8+0x0],dh
   14000c2b6:	add    BYTE PTR [rax],al
   14000c2b8:	sahf   
   14000c2b9:	out    0x0,eax
   14000c2bb:	add    BYTE PTR [rax],al
   14000c2bd:	add    BYTE PTR [rax],al
   14000c2bf:	add    BYTE PTR [rax+0xe7],dl
   14000c2c5:	add    BYTE PTR [rax],al
   14000c2c7:	add    dh,ah
   14000c2c9:	loope  0x14000c2cb
   14000c2cb:	add    BYTE PTR [rax],al
   14000c2cd:	add    BYTE PTR [rax],al
   14000c2cf:	add    BYTE PTR [rdx-0x18],dh
   14000c2d2:	add    BYTE PTR [rax],al
   14000c2d4:	add    BYTE PTR [rax],al
   14000c2d6:	add    BYTE PTR [rax],al
   14000c2d8:	push   0xe8
   14000c2dd:	add    BYTE PTR [rax],al
   14000c2df:	add    BYTE PTR [rdi+riz*8+0x0],al
   14000c2e6:	add    BYTE PTR [rax],al
   14000c2e8:	pop    rsi
   14000c2e9:	call   0x14000c2ee
	...
   14000c2f6:	add    BYTE PTR [rax],al
   14000c2f8:	(bad)
   14000c2fc:	add    BYTE PTR [rax],al
   14000c2fe:	add    BYTE PTR [rax],al
   14000c300:	fsubrp st(2),st
   14000c302:	add    BYTE PTR [rax],al
   14000c304:	add    BYTE PTR [rax],al
   14000c306:	add    BYTE PTR [rax],al
   14000c308:	repnz loop 0x14000c30b
   14000c30b:	add    BYTE PTR [rax],al
   14000c30d:	add    BYTE PTR [rax],al
   14000c30f:	add    BYTE PTR [rbx+riz*8],cl
   14000c312:	add    BYTE PTR [rax],al
   14000c314:	add    BYTE PTR [rax],al
   14000c316:	add    BYTE PTR [rax],al
   14000c318:	lods   al,BYTE PTR ds:[rsi]
   14000c319:	out    0x0,eax
   14000c31b:	add    BYTE PTR [rax],al
   14000c31d:	add    BYTE PTR [rax],al
   14000c31f:	add    BYTE PTR [rsi+0xe7],bh
   14000c325:	add    BYTE PTR [rax],al
   14000c327:	add    BYTE PTR [rsi],al
   14000c329:	call   0x14000c32e
   14000c32e:	add    BYTE PTR [rax],al
   14000c330:	(bad)  
   14000c331:	out    0x0,eax
   14000c333:	add    BYTE PTR [rax],al
   14000c335:	add    BYTE PTR [rax],al
   14000c337:	add    ah,ch
   14000c339:	out    0x0,eax
   14000c33b:	add    BYTE PTR [rax],al
   14000c33d:	add    BYTE PTR [rax],al
   14000c33f:	add    BYTE PTR [rsi+0xe2],ch
	...
   14000c34d:	add    BYTE PTR [rax],al
   14000c34f:	add    al,bh
   14000c351:	in     al,0x0
   14000c353:	add    BYTE PTR [rax],al
   14000c355:	add    BYTE PTR [rax],al
   14000c357:	add    BYTE PTR [rax],cl
   14000c359:	in     eax,0x0
   14000c35b:	add    BYTE PTR [rax],al
   14000c35d:	add    BYTE PTR [rax],al
   14000c35f:	add    BYTE PTR [riz*8+0x0],bl
   14000c366:	add    BYTE PTR [rax],al
   14000c368:	cs in  eax,0x0
   14000c36b:	add    BYTE PTR [rax],al
   14000c36d:	add    BYTE PTR [rax],al
   14000c36f:	add    BYTE PTR [rax-0x1b],al
   14000c372:	add    BYTE PTR [rax],al
   14000c374:	add    BYTE PTR [rax],al
   14000c376:	add    BYTE PTR [rax],al
   14000c378:	push   rdx
   14000c379:	in     eax,0x0
   14000c37b:	add    BYTE PTR [rax],al
   14000c37d:	add    BYTE PTR [rax],al
   14000c37f:	add    BYTE PTR [rsi-0x1b],ah
	...
   14000c38e:	add    BYTE PTR [rax],al
   14000c390:	loopne 0x14000c340
   14000c392:	add    BYTE PTR [rax+0x1],al
   14000c395:	add    BYTE PTR [rax],al
   14000c397:	add    BYTE PTR [rax-0x4f],dh
   14000c39a:	add    BYTE PTR [rax+0x1],al
	...
   14000c3a5:	add    BYTE PTR [rax],al
   14000c3a7:	add    BYTE PTR [rax],ah
   14000c3a9:	test   eax,0x14000
	...
   14000c3be:	add    BYTE PTR [rax],al
   14000c3c0:	test   al,0x0
   14000c3c3:	rex add DWORD PTR [rax],eax
   14000c3c6:	add    BYTE PTR [rax],al
   14000c3c8:	adc    BYTE PTR [rax+rax*1+0x140],ch
	...
   14000c3d7:	add    BYTE PTR [rax-0x58],al
   14000c3da:	add    BYTE PTR [rax],al
   14000c3dc:	and    BYTE PTR [rcx-0x54b00000],ch
   14000c3e2:	add    BYTE PTR [rax],al
   14000c3e4:	shr    BYTE PTR [rbx-0x53f00000],1
   14000c3ea:	add    BYTE PTR [rax],al
   14000c3ec:	mov    al,0xae
   14000c3ee:	add    BYTE PTR [rax],al
   14000c3f0:	loopne 0x14000c3a0
   14000c3f2:	add    BYTE PTR [rax],al
   14000c3f4:	xor    BYTE PTR [rdi+0x0],ch
   14000c3fa:	add    BYTE PTR [rax],al
   14000c3fc:	add    BYTE PTR [rax],al
   14000c3fe:	add    BYTE PTR [rax],al
   14000c400:	jo     0x14000c3f2
   14000c402:	add    BYTE PTR [rax+0x1],al
   14000c405:	add    BYTE PTR [rax],al
   14000c407:	add    BYTE PTR [rax],dl
   14000c409:	icebp  
   14000c40a:	add    BYTE PTR [rax+0x1],al
   14000c40d:	add    BYTE PTR [rax],al
   14000c40f:	add    BYTE PTR [rax+rax*1+0x0],bl
   14000c413:	add    BYTE PTR [rax],al
   14000c415:	add    BYTE PTR [rax],al
   14000c417:	add    bl,bh
   14000c419:	cdq    
   14000c41a:	stos   DWORD PTR es:[rdi],eax
   14000c41b:	xchg   esi,eax
   14000c41c:	mov    edi,0xaf40d3a7
   14000c421:	sahf   
   14000c422:	jmp    0x14000c3e1
   14000c424:	adc    DWORD PTR [rax+0x35c5],esp
   14000c42a:	add    BYTE PTR [rax],al
   14000c42c:	add    BYTE PTR [rax],al
   14000c42e:	add    BYTE PTR [rax],al
   14000c430:	push   rbx
   14000c431:	add    BYTE PTR [rdi+0x0],ch
   14000c434:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   14000c439:	add    BYTE PTR [rcx+0x0],ah
   14000c43c:	jb     0x14000c43e
   14000c43e:	add    BYTE PTR gs:[rax+rax*1+0x4d],bl
   14000c443:	add    BYTE PTR [rcx+0x0],ch
   14000c446:	movsxd eax,DWORD PTR [rax]
   14000c448:	jb     0x14000c44a
   14000c44a:	outs   dx,DWORD PTR ds:[rsi]
   14000c44b:	add    BYTE PTR [rbx+0x0],dh
   14000c44e:	outs   dx,DWORD PTR ds:[rsi]
   14000c44f:	add    BYTE PTR [rsi+0x0],ah
   14000c452:	je     0x14000c454
   14000c454:	pop    rsp
   14000c455:	add    BYTE PTR [rdi+0x0],dl
   14000c458:	imul   eax,DWORD PTR [rax],0x64006e
   14000c45e:	outs   dx,DWORD PTR ds:[rsi]
   14000c45f:	add    BYTE PTR [rdi+0x0],dh
   14000c462:	jae    0x14000c464
   14000c464:	and    BYTE PTR [rax],al
   14000c466:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   14000c46b:	add    BYTE PTR [rbx+0x0],al
   14000c46e:	jne    0x14000c470
   14000c470:	jb     0x14000c472
   14000c472:	jb     0x14000c474
   14000c474:	add    BYTE PTR gs:[rsi+0x0],ch
   14000c478:	je     0x14000c47a
   14000c47a:	push   rsi
   14000c47b:	add    BYTE PTR [rbp+0x0],ah
   14000c47e:	jb     0x14000c480
   14000c480:	jae    0x14000c482
   14000c482:	imul   eax,DWORD PTR [rax],0x6e006f
   14000c488:	pop    rsp
   14000c489:	add    BYTE PTR [rbx+0x0],dl
   14000c48c:	jns    0x14000c48e
   14000c48e:	jae    0x14000c490
   14000c490:	je     0x14000c492
   14000c492:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c496:	push   rdx
   14000c497:	add    BYTE PTR [rbp+0x0],ah
   14000c49a:	jae    0x14000c49c
   14000c49c:	je     0x14000c49e
   14000c49e:	outs   dx,DWORD PTR ds:[rsi]
   14000c49f:	add    BYTE PTR [rdx+0x0],dh
   14000c4a2:	add    BYTE PTR gs:[rax],al
	...
   14000c4ad:	add    BYTE PTR [rax],al
   14000c4af:	add    BYTE PTR [rbx+0x0],dl
   14000c4b2:	outs   dx,DWORD PTR ds:[rsi]
   14000c4b3:	add    BYTE PTR [rsi+0x0],ah
   14000c4b6:	je     0x14000c4b8
   14000c4b8:	ja     0x14000c4ba
   14000c4ba:	(bad)  
   14000c4bb:	add    BYTE PTR [rdx+0x0],dh
   14000c4be:	add    BYTE PTR gs:[rax+rax*1+0x50],bl
   14000c4c3:	add    BYTE PTR [rdi+0x0],ch
   14000c4c6:	ins    BYTE PTR es:[rdi],dx
   14000c4c7:	add    BYTE PTR [rcx+0x0],ch
   14000c4ca:	movsxd eax,DWORD PTR [rax]
   14000c4cc:	imul   eax,DWORD PTR [rax],0x730065
   14000c4d2:	pop    rsp
   14000c4d3:	add    BYTE PTR [rbp+0x0],cl
   14000c4d6:	imul   eax,DWORD PTR [rax],0x720063
   14000c4dc:	outs   dx,DWORD PTR ds:[rsi]
   14000c4dd:	add    BYTE PTR [rbx+0x0],dh
   14000c4e0:	outs   dx,DWORD PTR ds:[rsi]
   14000c4e1:	add    BYTE PTR [rsi+0x0],ah
   14000c4e4:	je     0x14000c4e6
   14000c4e6:	pop    rsp
   14000c4e7:	add    BYTE PTR [rdi+0x0],dl
   14000c4ea:	imul   eax,DWORD PTR [rax],0x64006e
   14000c4f0:	outs   dx,DWORD PTR ds:[rsi]
   14000c4f1:	add    BYTE PTR [rdi+0x0],dh
   14000c4f4:	jae    0x14000c4f6
   14000c4f6:	and    BYTE PTR [rax],al
   14000c4f8:	rex.WRX add BYTE PTR [rax+r8*1+0x5c],r10b
   14000c4fd:	add    BYTE PTR [rbx+0x0],dl
   14000c500:	jns    0x14000c502
   14000c502:	jae    0x14000c504
   14000c504:	je     0x14000c506
   14000c506:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c50a:	push   rdx
   14000c50b:	add    BYTE PTR [rbp+0x0],ah
   14000c50e:	jae    0x14000c510
   14000c510:	je     0x14000c512
   14000c512:	outs   dx,DWORD PTR ds:[rsi]
   14000c513:	add    BYTE PTR [rdx+0x0],dh
   14000c516:	add    BYTE PTR gs:[rax],al
   14000c519:	add    BYTE PTR [rax],al
   14000c51b:	add    BYTE PTR [rax],al
   14000c51d:	add    BYTE PTR [rax],al
   14000c51f:	add    BYTE PTR [rbx+0x0],dl
   14000c522:	movsxd eax,DWORD PTR [rax]
   14000c524:	outs   dx,DWORD PTR ds:[rsi]
   14000c525:	add    BYTE PTR [rax+0x0],dh
   14000c528:	add    BYTE PTR gs:[rbx+0x0],dl
   14000c52c:	outs   dx,BYTE PTR ds:[rsi]
   14000c52d:	add    BYTE PTR [rcx+0x0],ah
   14000c530:	jo     0x14000c532
   14000c532:	jae    0x14000c534
   14000c534:	push   0x74006f00
   14000c539:	add    BYTE PTR [rbx+0x0],dh
   14000c53c:	add    BYTE PTR [rax],al
   14000c53e:	add    BYTE PTR [rax],al
   14000c540:	push   rdi
   14000c541:	add    BYTE PTR [rcx+0x0],ah
   14000c544:	imul   eax,DWORD PTR [rax],0x460074
   14000c54a:	outs   dx,DWORD PTR ds:[rsi]
   14000c54b:	add    BYTE PTR [rdx+0x0],dh
   14000c54e:	push   rdx
   14000c54f:	add    BYTE PTR [rbp+0x0],ah
   14000c552:	jae    0x14000c554
   14000c554:	je     0x14000c556
   14000c556:	outs   dx,DWORD PTR ds:[rsi]
   14000c557:	add    BYTE PTR [rdx+0x0],dh
   14000c55a:	add    BYTE PTR gs:[rax+0x0],dl
   14000c55e:	outs   dx,DWORD PTR ds:[rsi]
   14000c55f:	add    BYTE PTR [rcx+0x0],ch
   14000c562:	outs   dx,BYTE PTR ds:[rsi]
   14000c563:	add    BYTE PTR [rax+rax*1+0x54],dh
   14000c567:	add    BYTE PTR [rdi+0x0],ch
   14000c56a:	add    BYTE PTR [r8+0x0],sil
   14000c56e:	jo     0x14000c570
   14000c570:	add    BYTE PTR gs:[rcx+0x0],ah
   14000c574:	jb     0x14000c576
   14000c576:	add    BYTE PTR [rax],al
   14000c578:	ss fs xchg esi,eax
   14000c57b:	rex.WXB and QWORD PTR [r15+0x6],0xffffffff9a358049
   14000c583:	stc    
   14000c584:	rex.WXB xor al,r11b
   14000c587:	not    DWORD PTR [rbx+0x0]
   14000c58a:	jns    0x14000c58c
   14000c58c:	jae    0x14000c58e
   14000c58e:	je     0x14000c590
   14000c590:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c594:	push   rdx
   14000c595:	add    BYTE PTR [rbp+0x0],ah
   14000c598:	jae    0x14000c59a
   14000c59a:	je     0x14000c59c
   14000c59c:	outs   dx,DWORD PTR ds:[rsi]
   14000c59d:	add    BYTE PTR [rdx+0x0],dh
   14000c5a0:	add    BYTE PTR gs:[rax+0x0],dl
   14000c5a4:	outs   dx,DWORD PTR ds:[rsi]
   14000c5a5:	add    BYTE PTR [rcx+0x0],ch
   14000c5a8:	outs   dx,BYTE PTR ds:[rsi]
   14000c5a9:	add    BYTE PTR [rax+rax*1+0x54],dh
   14000c5ad:	add    BYTE PTR [rcx+0x0],ch
   14000c5b0:	ins    DWORD PTR es:[rdi],dx
   14000c5b1:	add    BYTE PTR [rbp+0x0],ah
   14000c5b4:	push   rsp
   14000c5b5:	add    BYTE PTR [rdi+0x0],ch
   14000c5b8:	rex.WR add BYTE PTR [rcx+0x0],r13b
   14000c5bc:	jbe    0x14000c5be
   14000c5be:	add    BYTE PTR gs:[rax],al
	...
   14000c5cd:	add    BYTE PTR [rax],al
   14000c5cf:	add    BYTE PTR [rbp+0x0],cl
   14000c5d2:	imul   eax,DWORD PTR [rax],0x720063
   14000c5d8:	outs   dx,DWORD PTR ds:[rsi]
   14000c5d9:	add    BYTE PTR [rbx+0x0],dh
   14000c5dc:	outs   dx,DWORD PTR ds:[rsi]
   14000c5dd:	add    BYTE PTR [rsi+0x0],ah
   14000c5e0:	je     0x14000c5e2
   14000c5e2:	pop    rsp
   14000c5e3:	add    BYTE PTR [rdi+0x0],dl
   14000c5e6:	imul   eax,DWORD PTR [rax],0x64006e
   14000c5ec:	outs   dx,DWORD PTR ds:[rsi]
   14000c5ed:	add    BYTE PTR [rdi+0x0],dh
   14000c5f0:	jae    0x14000c5f2
   14000c5f2:	pop    rsp
   14000c5f3:	add    BYTE PTR [rdi+0x0],dl
   14000c5f6:	imul   eax,DWORD PTR [rax],0x64006e
   14000c5fc:	outs   dx,DWORD PTR ds:[rsi]
   14000c5fd:	add    BYTE PTR [rdi+0x0],dh
   14000c600:	jae    0x14000c602
   14000c602:	rex.X add BYTE PTR [rcx+0x0],spl
   14000c606:	movsxd eax,DWORD PTR [rax]
   14000c608:	imul   eax,DWORD PTR [rax],0x75
   14000c60b:	add    BYTE PTR [rax+0x0],dh
   14000c60e:	add    BYTE PTR [rax],al
   14000c610:	str    WORD PTR [rdx-0x6c]
   14000c614:	(bad)  
   14000c615:	pop    rdi
   14000c616:	pop    rdx
   14000c617:	rex.WRX xchg bpl,r15b
   14000c61a:	(bad)  
   14000c61b:	pop    rbx
   14000c61c:	test   BYTE PTR [rbp+0x41e943],dh
   14000c622:	jne    0x14000c624
   14000c624:	je     0x14000c626
   14000c626:	outs   dx,DWORD PTR ds:[rsi]
   14000c627:	add    BYTE PTR [rbp+0x0],ch
   14000c62a:	(bad)  
   14000c62b:	add    BYTE PTR [rax+rax*1+0x69],dh
   14000c62f:	add    BYTE PTR [rbx+0x0],ah
   14000c632:	rex.X add BYTE PTR [rcx+0x0],spl
   14000c636:	movsxd eax,DWORD PTR [rax]
   14000c638:	imul   eax,DWORD PTR [rax],0x75
   14000c63b:	add    BYTE PTR [rax+0x0],dh
   14000c63e:	add    BYTE PTR [rax],al
   14000c640:	rex.WR add BYTE PTR [rcx+0x0],r12b
   14000c644:	jae    0x14000c646
   14000c646:	je     0x14000c648
   14000c648:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000c64c:	imul   eax,DWORD PTR [rax],0x65006e
   14000c652:	outs   dx,BYTE PTR ds:[rsi]
   14000c653:	add    BYTE PTR [rcx+0x0],ah
   14000c656:	outs   dx,BYTE PTR ds:[rsi]
   14000c657:	add    BYTE PTR [rbx+0x0],ah
   14000c65a:	add    BYTE PTR gs:[rax+rax*1+0x61],dl
   14000c65f:	add    BYTE PTR [rbx+0x0],dh
   14000c662:	imul   eax,DWORD PTR [rax],0x52
   14000c665:	add    BYTE PTR [rbp+0x0],dh
   14000c668:	outs   dx,BYTE PTR ds:[rsi]
   14000c669:	add    BYTE PTR [rax+rax*1+0x69],dl
   14000c66d:	add    BYTE PTR [rbp+0x0],ch
   14000c670:	add    BYTE PTR gs:[rbx+0x0],dl
   14000c674:	je     0x14000c676
   14000c676:	(bad)  
   14000c677:	add    BYTE PTR [rbp+0x0],ch
   14000c67a:	jo     0x14000c67c
   14000c67c:	add    BYTE PTR [rax],al
   14000c67e:	add    BYTE PTR [rax],al
   14000c680:	(bad)  
   14000c681:	sbb    eax,0xbf9f4bfa
   14000c686:	(bad)  
   14000c687:	rex.WX scas al,BYTE PTR es:[rdi]
   14000c689:	cdq    
   14000c68a:	adc    esp,esi
   14000c68c:	and    ecx,0x8941ffd2
   14000c692:	sub    DWORD PTR [rdi+rbp*1],ebp
   14000c695:	cld    
   14000c696:	or     eax,DWORD PTR [rdi-0x71]
   14000c699:	(bad)  
   14000c69a:	xchg   esi,edi
   14000c69c:	add    BYTE PTR [rax+0x345b4882],0x7
   14000c6a3:	fs repnz xchg esp,eax
   14000c6a6:	enter  0xb344,0xdb
   14000c6aa:	rex.WRX (bad) 
   14000c6ac:	imul   esp,esp,0x68
   14000c6af:	(bad)  
   14000c6b0:	add    BYTE PTR [rcx+0x0],r13b
   14000c6b4:	jae    0x14000c6b6
   14000c6b6:	(bad)  
   14000c6b7:	add    BYTE PTR [rdx+0x0],ah
   14000c6ba:	ins    BYTE PTR es:[rdi],dx
   14000c6bb:	add    BYTE PTR [rbp+0x0],ah
   14000c6be:	push   rbx
   14000c6bf:	add    BYTE PTR [rdx+0x0],dl
   14000c6c2:	add    BYTE PTR [rax],al
   14000c6c4:	add    BYTE PTR [rax],al
   14000c6c6:	add    BYTE PTR [rax],al
   14000c6c8:	push   rbx
   14000c6c9:	add    BYTE PTR [rcx+0x0],bh
   14000c6cc:	jae    0x14000c6ce
   14000c6ce:	je     0x14000c6d0
   14000c6d0:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c6d4:	and    BYTE PTR [rax],al
   14000c6d6:	push   rdx
   14000c6d7:	add    BYTE PTR [rbp+0x0],ah
   14000c6da:	jae    0x14000c6dc
   14000c6dc:	je     0x14000c6de
   14000c6de:	outs   dx,DWORD PTR ds:[rsi]
   14000c6df:	add    BYTE PTR [rdx+0x0],dh
   14000c6e2:	add    BYTE PTR gs:[rax],al
   14000c6e5:	add    BYTE PTR [rax],al
   14000c6e7:	add    BYTE PTR [rbx+0x0],dl
   14000c6ea:	jns    0x14000c6ec
   14000c6ec:	jae    0x14000c6ee
   14000c6ee:	je     0x14000c6f0
   14000c6f0:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c6f4:	push   rdx
   14000c6f5:	add    BYTE PTR [rbp+0x0],ah
   14000c6f8:	jae    0x14000c6fa
   14000c6fa:	je     0x14000c6fc
   14000c6fc:	outs   dx,DWORD PTR ds:[rsi]
   14000c6fd:	add    BYTE PTR [rdx+0x0],dh
   14000c700:	add    BYTE PTR gs:[rax+rax*1+0x72],dl
   14000c705:	add    BYTE PTR [rcx+0x0],ah
   14000c708:	movsxd eax,DWORD PTR [rax]
   14000c70a:	imul   eax,DWORD PTR [rax],0x67006e
   14000c710:	add    BYTE PTR [rax+r8*1+0x61],r13b
   14000c715:	add    BYTE PTR [rdi+0x0],ah
   14000c718:	jae    0x14000c71a
   14000c71a:	add    BYTE PTR [rax],al
   14000c71c:	add    BYTE PTR [rax],al
   14000c71e:	add    BYTE PTR [rax],al
   14000c720:	rex.XB push 0x536b6365
   14000c726:	push   rdx
   14000c727:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000c729:	(bad)  
   14000c72a:	(bad)  
   14000c72b:	ins    BYTE PTR es:[rdi],dx
   14000c72c:	gs add BYTE PTR fs:[rax],al
   14000c730:	rex.RXB
   14000c731:	gs je  0x14000c787
   14000c734:	outs   dx,BYTE PTR ds:[rsi]
   14000c735:	(bad)  
   14000c736:	jo     0x14000c7ab
   14000c738:	push   0x4373746f
   14000c73d:	outs   dx,DWORD PTR ds:[rsi]
   14000c73e:	jne    0x14000c7ae
   14000c740:	je     0x14000c742
   14000c742:	add    BYTE PTR [rax],al
   14000c744:	add    BYTE PTR [rax],al
   14000c746:	add    BYTE PTR [rax],al
   14000c748:	rex.WB jae 0x14000c79d
   14000c74b:	jo     0x14000c7a0
   14000c74d:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000c750:	gs add BYTE PTR fs:[rax],al
   14000c754:	add    BYTE PTR [rax],al
   14000c756:	add    BYTE PTR [rax],al
   14000c758:	rex.RXB
   14000c759:	gs je  0x14000c7ae
   14000c75c:	gs jae 0x14000c7d3
   14000c75f:	outs   dx,DWORD PTR ds:[rsi]
   14000c760:	jb     0x14000c7c7
   14000c762:	push   rax
   14000c763:	outs   dx,DWORD PTR ds:[rsi]
   14000c764:	imul   ebp,DWORD PTR [rsi+0x74],0x756f4373
   14000c76b:	outs   dx,BYTE PTR ds:[rsi]
   14000c76c:	je     0x14000c76e
   14000c76e:	add    BYTE PTR [rax],al
   14000c770:	rex.RXB
   14000c771:	gs je  0x14000c7b6
   14000c774:	outs   dx,DWORD PTR ds:[rsi]
   14000c775:	outs   dx,DWORD PTR ds:[rsi]
   14000c776:	je     0x14000c7ce
   14000c778:	outs   dx,DWORD PTR ds:[rsi]
   14000c779:	ins    BYTE PTR es:[rdi],dx
   14000c77a:	jne    0x14000c7e9
   14000c77c:	gs push rbx
   14000c77e:	imul   edi,DWORD PTR [rdx+0x65],0x74617453
   14000c785:	jae    0x14000c787
   14000c787:	add    BYTE PTR [rdi+0x65],al
   14000c78a:	je     0x14000c7d9
   14000c78c:	(bad)  
   14000c78d:	imul   ebp,DWORD PTR [rsi+0x65],0x636e616e
   14000c794:	gs push rsp
   14000c796:	(bad)  
   14000c797:	jae    0x14000c804
   14000c799:	rex.RX jb 0x14000c801
   14000c79c:	jno    0x14000c813
   14000c79e:	outs   dx,BYTE PTR gs:[rsi]
   14000c7a0:	movsxd edi,DWORD PTR [rcx+0x0]
   14000c7a3:	add    BYTE PTR [rax],al
   14000c7a5:	add    BYTE PTR [rax],al
   14000c7a7:	add    BYTE PTR [rdi+0x65],al
   14000c7aa:	je     0x14000c7fe
   14000c7ac:	imul   esi,DWORD PTR gs:[ebx+0x74],0x654b7972
   14000c7b5:	jns    0x14000c80a
   14000c7b7:	gs je  0x14000c82e
   14000c7ba:	imul   ebp,DWORD PTR [rsi+0x67],0x50000073
   14000c7c1:	jne    0x14000c825
   14000c7c3:	ins    BYTE PTR es:[rdi],dx
   14000c7c4:	imul   esi,DWORD PTR [rbx+0x68],0x6e69614d
   14000c7cb:	je     0x14000c832
   14000c7cd:	outs   dx,BYTE PTR ds:[rsi]
   14000c7ce:	(bad)  
   14000c7cf:	outs   dx,BYTE PTR ds:[rsi]
   14000c7d0:	movsxd esp,DWORD PTR [rbp+0x54]
   14000c7d3:	(bad)  
   14000c7d4:	jae    0x14000c841
   14000c7d6:	jae    0x14000c82b
   14000c7d8:	push   rcx
   14000c7d9:	rex.WRB add BYTE PTR [r8],r8b
   14000c7dc:	add    BYTE PTR [rax],al
   14000c7de:	add    BYTE PTR [rax],al
   14000c7e0:	(bad)
   14000c7e3:	or     DWORD PTR [rsi+0x29],ecx
   14000c7e6:	add    BYTE PTR [rcx-0x51],0x6a
   14000c7ea:	sti    
   14000c7eb:	(bad)  
   14000c7ec:	push   0xe
   14000c7ee:	xchg   ebp,eax
   14000c7ef:	adc    edx,DWORD PTR [rdi]
   14000c7f1:	mov    bh,0x55
   14000c7f3:	sahf   
   14000c7f4:	rcl    dl,cl
   14000c7f6:	jns    0x14000c808
   14000c7f8:	jno    0x14000c800
   14000c7fa:	in     al,0xd3
   14000c7fc:	call   QWORD PTR [rsi+0x34]
   14000c7ff:	or     bh,BYTE PTR [rax+rax*1]
   14000c802:	rex.WRX add BYTE PTR [rbp+0x0],r10b
   14000c806:	rex.WR add BYTE PTR [rax+rax*1+0x3e],r9b
   14000c80b:	add    BYTE PTR [rax],al
   14000c80d:	add    BYTE PTR [rax],al
   14000c80f:	add    BYTE PTR [rsi+0x0],cl
   14000c812:	push   rbp
   14000c813:	add    BYTE PTR [rax+rax*1+0x4c],cl
   14000c817:	add    BYTE PTR [rax],al
   14000c819:	add    BYTE PTR [rax],al
   14000c81b:	add    BYTE PTR [rsi+0x55],cl
   14000c81e:	rex.WR
   14000c81f:	rex.WR add BYTE PTR [rax],r8b
	...
   14000c82e:	add    BYTE PTR [rax],al
   14000c830:	and    eax,0x79005300
   14000c835:	add    BYTE PTR [rbx+0x0],dh
   14000c838:	je     0x14000c83a
   14000c83a:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c83e:	push   rdx
   14000c83f:	add    BYTE PTR [rdi+0x0],ch
   14000c842:	outs   dx,DWORD PTR ds:[rsi]
   14000c843:	add    BYTE PTR [rax+rax*1+0x25],dh
   14000c847:	add    BYTE PTR [rax+rax*1+0x4c],bl
   14000c84b:	add    BYTE PTR [rdi+0x0],ch
   14000c84e:	add    BYTE PTR [ebx+0x0],dh
   14000c852:	pop    rsp
   14000c853:	add    BYTE PTR [rbx+0x0],dl
   14000c856:	jns    0x14000c858
   14000c858:	jae    0x14000c85a
   14000c85a:	je     0x14000c85c
   14000c85c:	add    BYTE PTR gs:[rbp+0x0],ch
   14000c860:	push   rdx
   14000c861:	add    BYTE PTR [rbp+0x0],ah
   14000c864:	jae    0x14000c866
   14000c866:	je     0x14000c868
   14000c868:	outs   dx,DWORD PTR ds:[rsi]
   14000c869:	add    BYTE PTR [rdx+0x0],dh
   14000c86c:	add    BYTE PTR gs:[rax],al
   14000c86f:	add    BYTE PTR [rdi+0x0],cl
   14000c872:	cmp    al,BYTE PTR [rax]
   14000c874:	rex.X add BYTE PTR [rcx+0x0],al
   14000c878:	rex.RXB add BYTE PTR [r10],r15b
   14000c87b:	add    BYTE PTR [rdx+0x0],al
   14000c87e:	add    BYTE PTR [r8+rax*1+0x3a],al
   14000c883:	add    BYTE PTR [rax+0x0],dl
   14000c886:	sub    BYTE PTR [rax],al
   14000c888:	add    BYTE PTR [r11],dil
   14000c88b:	add    BYTE PTR [rdi+0x0],cl
   14000c88e:	rex.WB add BYTE PTR [r11+0x0],al
   14000c892:	rex.WB add BYTE PTR [r11],dil
   14000c895:	add    BYTE PTR [rdi+0x0],al
   14000c898:	add    BYTE PTR [r11],dil
   14000c89b:	add    BYTE PTR [rbx],bh
   14000c89d:	add    BYTE PTR [rbx],bh
   14000c89f:	add    BYTE PTR [rdx+0x0],al
   14000c8a2:	add    BYTE PTR [r9],bpl
   14000c8a5:	add    BYTE PTR [rax],ch
   14000c8a7:	add    BYTE PTR [rcx+0x0],al
   14000c8aa:	cmp    eax,DWORD PTR [rax]
   14000c8ac:	rex.WRXB add BYTE PTR [r9+0x0],r9b
   14000c8b0:	rex.XB add BYTE PTR [r9+0x0],cl
   14000c8b4:	cmp    eax,DWORD PTR [rax]
   14000c8b6:	rex.RXB add BYTE PTR [r9+0x0],r8b
   14000c8ba:	cmp    eax,DWORD PTR [rax]
   14000c8bc:	cmp    eax,DWORD PTR [rax]
   14000c8be:	cmp    eax,DWORD PTR [rax]
   14000c8c0:	push   rbx
   14000c8c1:	add    BYTE PTR [rcx+0x0],bl
   14000c8c4:	sub    DWORD PTR [rax],eax
   14000c8c6:	add    BYTE PTR [rax],al
   14000c8c8:	rex.X add BYTE PTR [rbp+0x0],sil
   14000c8cc:	imul   eax,DWORD PTR [rax],0x74006c
   14000c8d2:	rex.WB add BYTE PTR [r14+0x0],bpl
   14000c8d6:	push   rbx
   14000c8d7:	add    BYTE PTR [rdx+0x0],dh
   14000c8da:	push   rsp
   14000c8db:	add    BYTE PTR [rcx+0x0],ah
   14000c8de:	jae    0x14000c8e0
   14000c8e0:	imul   eax,DWORD PTR [rax],0x73
   14000c8e3:	add    BYTE PTR [rax+rax*1+0x72],dl
   14000c8e7:	add    BYTE PTR [rcx+0x0],ah
   14000c8ea:	movsxd eax,DWORD PTR [rax]
   14000c8ec:	imul   eax,DWORD PTR [rax],0x67006e
   14000c8f2:	add    BYTE PTR [rax],al
   14000c8f4:	add    BYTE PTR [rax],al
   14000c8f6:	add    BYTE PTR [rax],al
   14000c8f8:	push   rbx
   14000c8f9:	add    BYTE PTR [rdx+0x0],dh
   14000c8fc:	push   rsp
   14000c8fd:	add    BYTE PTR [rcx+0x0],ah
   14000c900:	jae    0x14000c902
   14000c902:	imul   eax,DWORD PTR [rax],0x73
   14000c905:	add    BYTE PTR [rax],al
   14000c907:	add    BYTE PTR [rdi+0x43],bl
   14000c90a:	push   0x526b6365
   14000c90f:	movsxd esp,DWORD PTR gs:[rbp+0x6e]
   14000c913:	je     0x14000c968
   14000c915:	push   rax
   14000c916:	push   rax
   14000c917:	rex.XB push 0x706b6365
   14000c91d:	outs   dx,DWORD PTR ds:[rsi]
   14000c91e:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   14000c925:	add    BYTE PTR [rax],al
   14000c927:	add    BYTE PTR [rdi+0x44],bl
   14000c92a:	gs ins BYTE PTR es:[rdi],dx
   14000c92c:	gs je  0x14000c994
   14000c92f:	push   rax
   14000c930:	(bad)  
   14000c931:	jb     0x14000c9a7
   14000c933:	imul   esp,DWORD PTR [rcx+0x6c],0x47505053
   14000c93a:	jb     0x14000c9ab
   14000c93c:	jne    0x14000c9ae
   14000c93e:	jae    0x14000c940
   14000c940:	pop    rdi
   14000c941:	rex.R
   14000c942:	gs ins BYTE PTR es:[rdi],dx
   14000c944:	gs je  0x14000c9ac
   14000c947:	rex.WRXB ins BYTE PTR es:[rdi],dx
   14000c949:	fs push rbx
   14000c94b:	push   rax
   14000c94c:	push   rax
   14000c94d:	rex.RXB jb 0x14000c9bf
   14000c950:	jne    0x14000c9c2
   14000c952:	jae    0x14000c954
   14000c954:	add    BYTE PTR [rax],al
   14000c956:	add    BYTE PTR [rax],al
   14000c958:	pop    rdi
   14000c959:	rex.RB js 0x14000c9c1
   14000c95c:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c95f:	gs push rbx
   14000c961:	movsxd ebp,DWORD PTR [rax+0x65]
   14000c964:	fs jne 0x14000c9d3
   14000c967:	gs fs push rbx
   14000c96a:	push   rax
   14000c96b:	push   rax
   14000c96c:	rex.XB jb 0x14000c9d4
   14000c96f:	(bad)  
   14000c970:	je     0x14000c9db
   14000c972:	outs   dx,DWORD PTR ds:[rsi]
   14000c973:	outs   dx,BYTE PTR ds:[rsi]
   14000c974:	add    BYTE PTR [rax],al
   14000c976:	add    BYTE PTR [rax],al
   14000c978:	xor    BYTE PTR [rax],al
   14000c97a:	js     0x14000c97c
   14000c97c:	and    eax,0x38003000
   14000c981:	add    BYTE PTR [rax+0x0],bh
   14000c984:	add    BYTE PTR [rax],al
   14000c986:	add    BYTE PTR [rax],al
   14000c988:	rex.WB jae 0x14000c9de
   14000c98b:	(bad)  
   14000c98c:	rex.R outs dx,WORD PTR gs:[rsi]
   14000c990:	movsxd esi,DWORD PTR [rbx+0x54]
   14000c993:	(bad)  
   14000c994:	jae    0x14000ca01
   14000c996:	push   rdx
   14000c997:	jne    0x14000ca07
   14000c999:	outs   dx,BYTE PTR ds:[rsi]
   14000c99a:	imul   ebp,DWORD PTR [rsi+0x67],0x45000000
   14000c9a1:	js     0x14000ca08
   14000c9a3:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c9a6:	gs push rbx
   14000c9a8:	movsxd ebp,DWORD PTR [rax+0x65]
   14000c9ab:	fs jne 0x14000ca1a
   14000c9ae:	gs fs push rbx
   14000c9b1:	push   rax
   14000c9b2:	push   rax
   14000c9b3:	rex.XB jb 0x14000ca1b
   14000c9b6:	(bad)  
   14000c9b7:	je     0x14000ca22
   14000c9b9:	outs   dx,DWORD PTR ds:[rsi]
   14000c9ba:	outs   dx,BYTE PTR ds:[rsi]
   14000c9bb:	add    BYTE PTR [rax],al
   14000c9bd:	add    BYTE PTR [rax],al
   14000c9bf:	add    BYTE PTR [rdi+0x45],bl
   14000c9c2:	js     0x14000ca29
   14000c9c4:	movsxd esi,DWORD PTR [rbp+0x74]
   14000c9c7:	gs push rbx
   14000c9c9:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000c9cc:	gs push rdx
   14000c9ce:	gs jae 0x14000ca45
   14000c9d1:	outs   dx,DWORD PTR ds:[rsi]
   14000c9d2:	jb     0x14000ca39
   14000c9d4:	push   rax
   14000c9d5:	outs   dx,DWORD PTR ds:[rsi]
   14000c9d6:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   14000c9dd:	add    BYTE PTR [rax],al
   14000c9df:	add    BYTE PTR [rdi+0x65],al
   14000c9e2:	je     0x14000ca36
   14000c9e4:	gs jae 0x14000ca5b
   14000c9e7:	outs   dx,DWORD PTR ds:[rsi]
   14000c9e8:	jb     0x14000ca4f
   14000c9ea:	push   rax
   14000c9eb:	outs   dx,DWORD PTR ds:[rsi]
   14000c9ec:	imul   ebp,DWORD PTR [rsi+0x74],0x65646e49
   14000c9f3:	js     0x14000ca49
   14000c9f5:	outs   dx,DWORD PTR ds:[rsi]
   14000c9f6:	push   rdi
   14000c9f7:	(bad)  
   14000c9f8:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x72
   14000ca00:	rex.RXB
   14000ca01:	gs je  0x14000ca58
   14000ca04:	imul   ebp,DWORD PTR [rbp+0x65],0x61576f54
   14000ca0b:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x73655272
   14000ca13:	je     0x14000ca84
   14000ca15:	jb     0x14000ca7c
   14000ca17:	push   rax
   14000ca18:	outs   dx,DWORD PTR ds:[rsi]
   14000ca19:	imul   ebp,DWORD PTR [rsi+0x74],0x70416f54
   14000ca20:	jo     0x14000ca87
   14000ca22:	(bad)  
   14000ca23:	jb     0x14000ca25
   14000ca25:	add    BYTE PTR [rax],al
   14000ca27:	add    BYTE PTR [rdi+0x61],dl
   14000ca2a:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x73655272
   14000ca32:	je     0x14000caa3
   14000ca34:	jb     0x14000ca9b
   14000ca36:	push   rax
   14000ca37:	outs   dx,DWORD PTR ds:[rsi]
   14000ca38:	imul   ebp,DWORD PTR [rsi+0x74],0x70416f54
   14000ca3f:	jo     0x14000caa6
   14000ca41:	(bad)  
   14000ca42:	jb     0x14000ca44
   14000ca44:	add    BYTE PTR [rax],al
   14000ca46:	add    BYTE PTR [rax],al
   14000ca48:	rex.RB js 0x14000cab0
   14000ca4b:	movsxd esi,DWORD PTR [rbp+0x74]
   14000ca4e:	gs push rbx
   14000ca50:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000ca53:	gs push rdx
   14000ca55:	gs jae 0x14000cacc
   14000ca58:	outs   dx,DWORD PTR ds:[rsi]
   14000ca59:	jb     0x14000cac0
   14000ca5b:	push   rax
   14000ca5c:	outs   dx,DWORD PTR ds:[rsi]
   14000ca5d:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   14000ca64:	add    BYTE PTR [rax],al
   14000ca66:	add    BYTE PTR [rax],al
   14000ca68:	rex.RXB
   14000ca69:	gs je  0x14000caad
   14000ca6c:	outs   dx,BYTE PTR ds:[rsi]
   14000ca6d:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000ca70:	jae    0x14000cae7
   14000ca72:	jb     0x14000cad9
   14000ca74:	push   rsp
   14000ca75:	jb     0x14000cad8
   14000ca77:	movsxd ebp,DWORD PTR [rcx+0x6e]
   14000ca7a:	imul   r14d,DWORD PTR [edx+0x65],0x726f7463
   14000ca83:	jns    0x14000ca85
   14000ca85:	add    BYTE PTR [rax],al
   14000ca87:	add    BYTE PTR [rdx],bh
   14000ca89:	cmp    al,BYTE PTR [rbp+riz*2+0x6c]
   14000ca8d:	gs je  0x14000caf5
   14000ca90:	imul   r13d,DWORD PTR [rbp+r12*2+0x28],0x72747320
   14000ca99:	push   rsp
   14000ca9a:	jb     0x14000cafd
   14000ca9c:	movsxd ebp,DWORD PTR [rcx+0x6e]
   14000ca9f:	imul   r14d,DWORD PTR [edx+0x65],0x726f7463
   14000caa8:	jns    0x14000caca
   14000caaa:	sub    DWORD PTR [rax],eax
   14000caac:	fs ja  0x14000caf4
   14000caaf:	jb     0x14000cb23
   14000cab1:	add    BYTE PTR [rax],al
   14000cab3:	add    BYTE PTR [rax],al
   14000cab5:	add    BYTE PTR [rax],al
   14000cab7:	add    BYTE PTR [rbx+0x72],dl
   14000caba:	push   rax
   14000cabb:	jb     0x14000cb2c
   14000cabd:	jo     0x14000cb12
   14000cabf:	je     0x14000cb22
   14000cac1:	jb     0x14000cb37
   14000cac3:	push   rsp
   14000cac4:	jb     0x14000cb27
   14000cac6:	movsxd ebp,DWORD PTR [rcx+0x6e]
   14000cac9:	add    BYTE PTR [eax],al
   14000cacc:	add    BYTE PTR [rax],al
   14000cace:	add    BYTE PTR [rax],al
   14000cad0:	push   rbx
   14000cad1:	jb     0x14000cb23
   14000cad3:	jb     0x14000cb44
   14000cad5:	jo     0x14000cb2a
   14000cad7:	je     0x14000cb48
   14000cad9:	jo     0x14000cb2f
   14000cadb:	jb     0x14000cb3e
   14000cadd:	movsxd ebp,DWORD PTR [rcx+0x6e]
   14000cae0:	add    BYTE PTR [eax],al
   14000cae3:	add    BYTE PTR [rax],al
   14000cae5:	add    BYTE PTR [rax],al
   14000cae7:	add    BYTE PTR [rbp+0x0],al
   14000caea:	js     0x14000caec
   14000caec:	add    BYTE PTR gs:[rbx+0x0],ah
   14000caf0:	jne    0x14000caf2
   14000caf2:	je     0x14000caf4
   14000caf4:	add    BYTE PTR gs:[rbx+0x0],dl
   14000caf8:	movsxd eax,DWORD PTR [rax]
   14000cafa:	push   0x64006500
   14000caff:	add    BYTE PTR [rbp+0x0],dh
   14000cb02:	ins    BYTE PTR es:[rdi],dx
   14000cb03:	add    BYTE PTR [rbp+0x0],ah
   14000cb06:	add    BYTE PTR fs:[rbx+0x0],dl
   14000cb0a:	push   rax
   14000cb0b:	add    BYTE PTR [rax+0x0],dl
   14000cb0e:	rex.XB add BYTE PTR [r10+0x0],sil
   14000cb12:	add    BYTE PTR gs:[rcx+0x0],ah
   14000cb16:	je     0x14000cb18
   14000cb18:	imul   eax,DWORD PTR [rax],0x6e006f
   14000cb1e:	add    BYTE PTR [rax],al
   14000cb20:	add    BYTE PTR [r8+0x0],r15b
   14000cb24:	add    BYTE PTR gs:[rbx+0x0],ah
   14000cb28:	jne    0x14000cb2a
   14000cb2a:	je     0x14000cb2c
   14000cb2c:	add    BYTE PTR gs:[rbx+0x0],dl
   14000cb30:	movsxd eax,DWORD PTR [rax]
   14000cb32:	outs   dx,DWORD PTR ds:[rsi]
   14000cb33:	add    BYTE PTR [rax+0x0],dh
   14000cb36:	add    BYTE PTR gs:[rdx+0x0],dl
   14000cb3a:	add    BYTE PTR gs:[rbx+0x0],dh
   14000cb3e:	je     0x14000cb40
   14000cb40:	outs   dx,DWORD PTR ds:[rsi]
   14000cb41:	add    BYTE PTR [rdx+0x0],dh
   14000cb44:	add    BYTE PTR gs:[rax+0x0],dl
   14000cb48:	outs   dx,DWORD PTR ds:[rsi]
   14000cb49:	add    BYTE PTR [rcx+0x0],ch
   14000cb4c:	outs   dx,BYTE PTR ds:[rsi]
   14000cb4d:	add    BYTE PTR [rax+rax*1+0x0],dh
   14000cb51:	add    BYTE PTR [rax],al
   14000cb53:	add    BYTE PTR [rax],al
   14000cb55:	add    BYTE PTR [rax],al
   14000cb57:	add    BYTE PTR [rdi],ch
   14000cb59:	add    BYTE PTR [rdi+0x0],dl
   14000cb5c:	(bad)  
   14000cb5d:	add    BYTE PTR [rcx+0x0],ch
   14000cb60:	je     0x14000cb62
   14000cb62:	rex.RX add BYTE PTR [rdi+0x0],r13b
   14000cb66:	jb     0x14000cb68
   14000cb68:	push   rdx
   14000cb69:	add    BYTE PTR [rbp+0x0],ah
   14000cb6c:	jae    0x14000cb6e
   14000cb6e:	je     0x14000cb70
   14000cb70:	outs   dx,DWORD PTR ds:[rsi]
   14000cb71:	add    BYTE PTR [rdx+0x0],dh
   14000cb74:	add    BYTE PTR gs:[rax+0x0],dl
   14000cb78:	outs   dx,DWORD PTR ds:[rsi]
   14000cb79:	add    BYTE PTR [rcx+0x0],ch
   14000cb7c:	outs   dx,BYTE PTR ds:[rsi]
   14000cb7d:	add    BYTE PTR [rax+rax*1+0x3a],dh
   14000cb81:	add    BYTE PTR [rax],al
   14000cb83:	add    BYTE PTR [rax],al
   14000cb85:	add    BYTE PTR [rax],al
   14000cb87:	add    BYTE PTR [rdi-0x31],dl
   14000cb8a:	cmp    rdi,QWORD PTR [rsi+r14*2+0x622c3567]
   14000cb92:	xchg   edx,eax
   14000cb93:	scas   al,BYTE PTR es:[rdi]
   14000cb94:	pop    rbp
   14000cb95:	pop    rax
   14000cb96:	jge    0x14000cbdf
   14000cb98:	cld    
   14000cb99:	icebp  
   14000cb9a:	(bad)  
   14000cb9b:	mov    cl,ah
   14000cb9d:	or     ebp,esp
   14000cb9f:	rex.W mov ss,WORD PTR [rdx+riz*8+0x46]
   14000cba4:	(bad)  
   14000cba5:	retf   
   14000cba6:	or     al,0xfd
   14000cba8:	loopne 0x14000cb9b
   14000cbaa:	push   rbx
   14000cbab:	mov    dh,0xd7
   14000cbad:	(bad)  
   14000cbae:	(bad)  
   14000cbaf:	rex.WX
   14000cbb0:	fwait
   14000cbb1:	sbb    al,bh
   14000cbb3:	rex.WXB (bad) 
   14000cbb5:	fcmovnb st,st(1)
   14000cbb7:	movabs ds:0x4b0d17ea0d41eba2,al
   14000cbc0:	xchg   ecx,eax
   14000cbc1:	jb     0x14000cb9e
   14000cbc3:	shr    BYTE PTR [rsi-0x5a8536f4],cl
   14000cbc9:	out    0x22,eax
   14000cbcb:	jo     0x14000cc00
   14000cbcd:	out    dx,eax
   14000cbce:	rex.B
   14000cbcf:	rex.WB popf 
   14000cbd1:	cmp    eax,0x55426616
   14000cbd6:	xlat   BYTE PTR ds:[rbx]
   14000cbd7:	ret    0x6436
   14000cbda:	xchg   esi,eax
   14000cbdb:	rex.WXB and QWORD PTR [r15+0x6],0xffffffff9a358049
   14000cbe3:	stc    
   14000cbe4:	rex.WXB xor al,r11b
   14000cbe7:	test   DWORD PTR [rcx+0x3f],0x521fadcf
   14000cbee:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000cbef:	movabs rdx,0x5361e8d3d5208ebc
   14000cbf9:	js     0x14000cc4d
   14000cbfb:	gs addr32 push rdx
   14000cbfe:	gs (bad) 
   14000cc00:	fs rex.R push rdi
   14000cc03:	rex.WRXB push r10
   14000cc05:	add    BYTE PTR [rax],r8b
   14000cc08:	push   rbx
   14000cc09:	js     0x14000cc5d
   14000cc0b:	gs addr32 push rdx
   14000cc0e:	gs (bad) 
   14000cc10:	fs push rbp
   14000cc12:	rex.WR
   14000cc13:	rex.WRXB
   14000cc14:	rex.WRX
   14000cc15:	rex.RXB
   14000cc16:	rex.WR
   14000cc17:	rex.WRXB
   14000cc18:	rex.WRX
   14000cc19:	rex.RXB add BYTE PTR [r8],r8b
   14000cc1c:	add    BYTE PTR [rax],al
   14000cc1e:	add    BYTE PTR [rax],al
   14000cc20:	push   rbx
   14000cc21:	js     0x14000cc75
   14000cc23:	gs addr32 push rdi
   14000cc26:	jb     0x14000cc91
   14000cc28:	je     0x14000cc8f
   14000cc2a:	push   rbp
   14000cc2b:	rex.WR
   14000cc2c:	rex.WRXB
   14000cc2d:	rex.WRX
   14000cc2e:	rex.RXB
   14000cc2f:	rex.WR
   14000cc30:	rex.WRXB
   14000cc31:	rex.WRX
   14000cc32:	rex.RXB add BYTE PTR [r8],r8b
   14000cc35:	add    BYTE PTR [rax],al
   14000cc37:	add    BYTE PTR [rbx+0x78],dl
   14000cc3a:	push   rcx
   14000cc3b:	jne    0x14000cca2
   14000cc3d:	jb     0x14000ccb8
   14000cc3f:	rex.RXB jb 0x14000ccb1
   14000cc42:	jne    0x14000ccb4
   14000cc44:	push   rax
   14000cc45:	outs   dx,DWORD PTR ds:[rsi]
   14000cc46:	ins    BYTE PTR es:[rdi],dx
   14000cc47:	imul   esp,DWORD PTR [rbx+0x79],0x0
   14000cc4e:	add    BYTE PTR [rax],al
   14000cc50:	push   rbx
   14000cc51:	js     0x14000cc9a
   14000cc53:	gs je  0x14000ccab
   14000cc56:	outs   dx,BYTE PTR ds:[rsi]
   14000cc57:	imul   esi,DWORD PTR [rcx+0x75],0x6c6f5665
   14000cc5e:	jne    0x14000cccd
   14000cc60:	rex.RX outs dx,DWORD PTR gs:[rsi]
   14000cc63:	jb     0x14000ccb5
   14000cc65:	(bad)  
   14000cc66:	je     0x14000ccd0
	...
   14000cc70:	cmp    bh,BYTE PTR [rdx]
   14000cc72:	rex.RXB
   14000cc73:	gs je  0x14000cccc
   14000cc76:	outs   dx,DWORD PTR ds:[rsi]
   14000cc77:	ins    BYTE PTR es:[rdi],dx
   14000cc78:	jne    0x14000cce7
   14000cc7a:	gs push rax
   14000cc7c:	(bad)  
   14000cc7d:	je     0x14000cce7
   14000cc7f:	rex.WRX (bad) 
   14000cc81:	ins    DWORD PTR es:[rdi],dx
   14000cc82:	sub    BYTE PTR gs:[rax],ah
   14000cc85:	jae    0x14000ccfb
   14000cc87:	jb     0x14000ccd9
   14000cc89:	(bad)  
   14000cc8a:	je     0x14000ccf4
   14000cc8c:	sub    al,0x20
   14000cc8e:	push   rbx
   14000cc8f:	push   rsp
   14000cc90:	push   rdx
   14000cc91:	rex.WB
   14000cc92:	rex.WRX
   14000cc93:	rex.RXB pop r15
   14000cc95:	rex.XB
   14000cc96:	rex.XB
   14000cc97:	rex.W pop rdi
   14000cc99:	push   rax
   14000cc9a:	push   r10
   14000cc9c:	rex.B
   14000cc9d:	rex.WRB sub BYTE PTR [r8],r12b
   14000cca0:	ja     0x14000cd15
   14000cca2:	jp     0x14000ccf6
   14000cca4:	outs   dx,DWORD PTR ds:[rsi]
   14000cca5:	outs   dx,DWORD PTR ds:[rsi]
   14000cca6:	je     0x14000ccf8
   14000cca8:	(bad)  
   14000cca9:	je     0x14000cd13
   14000ccab:	and    BYTE PTR [rcx],ch
   14000ccad:	and    BYTE PTR [rcx],ch
   14000ccaf:	add    BYTE PTR [rdx],bh
   14000ccb1:	cmp    al,BYTE PTR [rdi+0x65]
   14000ccb4:	je     0x14000cd0c
   14000ccb6:	outs   dx,DWORD PTR ds:[rsi]
   14000ccb7:	ins    BYTE PTR es:[rdi],dx
   14000ccb8:	jne    0x14000cd27
   14000ccba:	gs rex.WRX (bad) 
   14000ccbd:	ins    DWORD PTR es:[rdi],dx
   14000ccbe:	rex.RX outs dx,DWORD PTR gs:[rsi]
   14000ccc1:	jb     0x14000cd19
   14000ccc3:	outs   dx,DWORD PTR ds:[rsi]
   14000ccc4:	ins    BYTE PTR es:[rdi],dx
   14000ccc5:	jne    0x14000cd34
   14000ccc7:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000ccca:	jne    0x14000cd3a
   14000cccc:	je     0x14000cd1e
   14000ccce:	outs   dx,DWORD PTR ds:[rsi]
   14000cccf:	imul   ebp,DWORD PTR [rsi+0x74],0x73772028
   14000ccd6:	jp     0x14000cd2a
   14000ccd8:	outs   dx,DWORD PTR ds:[rsi]
   14000ccd9:	outs   dx,DWORD PTR ds:[rsi]
   14000ccda:	je     0x14000cd2c
   14000ccdc:	(bad)  
   14000ccdd:	je     0x14000cd47
   14000ccdf:	sub    al,0x20
   14000cce1:	push   rbx
   14000cce2:	push   rsp
   14000cce3:	push   rdx
   14000cce4:	rex.WB
   14000cce5:	rex.WRX
   14000cce6:	rex.RXB pop r15
   14000cce8:	rex.XB
   14000cce9:	rex.XB
   14000ccea:	rex.W pop rdi
   14000ccec:	push   rax
   14000cced:	push   r10
   14000ccef:	rex.B
   14000ccf0:	rex.WRB sub BYTE PTR [r8],r12b
   14000ccf3:	ja     0x14000cd68
   14000ccf5:	jp     0x14000cd4d
   14000ccf7:	outs   dx,DWORD PTR ds:[rsi]
   14000ccf8:	ins    BYTE PTR es:[rdi],dx
   14000ccf9:	jne    0x14000cd68
   14000ccfb:	and    BYTE PTR gs:[rcx],ch
   14000ccfe:	and    BYTE PTR [rcx],ch
	...
   14000cd10:	cmp    bh,BYTE PTR [rdx]
   14000cd12:	rex.RXB
   14000cd13:	gs je  0x14000cd6c
   14000cd16:	outs   dx,DWORD PTR ds:[rsi]
   14000cd17:	ins    BYTE PTR es:[rdi],dx
   14000cd18:	jne    0x14000cd87
   14000cd1a:	gs rex.WRX (bad) 
   14000cd1d:	ins    DWORD PTR es:[rdi],dx
   14000cd1e:	rex.RX outs dx,DWORD PTR gs:[rsi]
   14000cd21:	jb     0x14000cd79
   14000cd23:	outs   dx,DWORD PTR ds:[rsi]
   14000cd24:	ins    BYTE PTR es:[rdi],dx
   14000cd25:	jne    0x14000cd94
   14000cd27:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000cd2a:	jne    0x14000cd9a
   14000cd2c:	je     0x14000cd7e
   14000cd2e:	outs   dx,DWORD PTR ds:[rsi]
   14000cd2f:	imul   ebp,DWORD PTR [rsi+0x74],0x73772028
   14000cd36:	jp     0x14000cd8e
   14000cd38:	outs   dx,DWORD PTR ds:[rsi]
   14000cd39:	ins    BYTE PTR es:[rdi],dx
   14000cd3a:	jne    0x14000cda9
   14000cd3c:	gs sub al,0x20
   14000cd3f:	jo     0x14000cdb8
   14000cd41:	jae    0x14000cdbd
   14000cd43:	push   rbp
   14000cd44:	outs   dx,BYTE PTR ds:[rsi]
   14000cd45:	imul   esi,DWORD PTR [rcx+0x75],0x63202c65
   14000cd4c:	movsxd ebp,DWORD PTR [rax+0x55]
   14000cd4f:	outs   dx,BYTE PTR ds:[rsi]
   14000cd50:	imul   esi,DWORD PTR [rcx+0x75],0x292065
   14000cd57:	add    BYTE PTR [rbx+0x78],dl
   14000cd5a:	rex.WB jae 0x14000cd9f
   14000cd5d:	outs   dx,DWORD PTR ds:[rsi]
   14000cd5e:	outs   dx,DWORD PTR ds:[rsi]
   14000cd5f:	je     0x14000cdb7
   14000cd61:	outs   dx,DWORD PTR ds:[rsi]
   14000cd62:	ins    BYTE PTR es:[rdi],dx
   14000cd63:	jne    0x14000cdd2
   14000cd65:	add    BYTE PTR gs:[rax],al
   14000cd68:	and    eax,0x79005300
   14000cd6d:	add    BYTE PTR [rbx+0x0],dh
   14000cd70:	je     0x14000cd72
   14000cd72:	add    BYTE PTR gs:[rbp+0x0],ch
   14000cd76:	add    BYTE PTR [rdx+0x0],r14b
   14000cd7a:	imul   eax,DWORD PTR [rax],0x650076
   14000cd80:	and    eax,0x5c00
   14000cd85:	add    BYTE PTR [rax],al
   14000cd87:	add    BYTE PTR [rbx+0x78],dl
   14000cd8a:	rex.RXB
   14000cd8b:	gs je  0x14000cdd0
   14000cd8e:	outs   dx,DWORD PTR ds:[rsi]
   14000cd8f:	outs   dx,DWORD PTR ds:[rsi]
   14000cd90:	je     0x14000cde8
   14000cd92:	outs   dx,DWORD PTR ds:[rsi]
   14000cd93:	ins    BYTE PTR es:[rdi],dx
   14000cd94:	jne    0x14000ce03
   14000cd96:	gs add bl,ch
   14000cd99:	js     0x14000cd38
   14000cd9b:	sub    DWORD PTR [rcx+rbx*8+0x77cf8345],ebx
   14000cda2:	(bad)  
   14000cda3:	fist   DWORD PTR [rbx]
   14000cda5:	xchg   edi,eax
   14000cda6:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000cda7:	mov    ah,0x47
   14000cda9:	gs je  0x14000cdf0
   14000cdac:	imul   esp,DWORD PTR [rsi+0x66],0x61657241
   14000cdb3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000cdb5:	outs   dx,WORD PTR ds:[rsi]
   14000cdb7:	add    BYTE PTR [rbx+0x78],dl
   14000cdba:	rex.WB jae 0x14000ce10
   14000cdbd:	push   0x776f6461
   14000cdc2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000cdc4:	jo     0x14000ce3f
   14000cdc6:	push   rbx
   14000cdc7:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000cdca:	gs add BYTE PTR fs:[rax],al
   14000cdce:	add    BYTE PTR [rax],al
   14000cdd0:	push   rbx
   14000cdd1:	js     0x14000ce26
   14000cdd3:	push   0x646c756f
   14000cdd8:	rex.XB jb 0x14000ce40
   14000cddb:	(bad)  
   14000cddc:	je     0x14000ce43
   14000cdde:	push   rbx
   14000cddf:	movsxd ebp,DWORD PTR [rdi+0x70]
   14000cde2:	gs fs push rbx
   14000cde5:	outs   dx,BYTE PTR ds:[rsi]
   14000cde6:	(bad)  
   14000cde7:	jo     0x14000ce5c
   14000cde9:	push   0x73746f
   14000cdee:	add    BYTE PTR [rax],al
   14000cdf0:	sub    bl,ah
   14000cdf2:	nop
   14000cdf3:	in     al,0xea
   14000cdf5:	cmc    
   14000cdf6:	xchg   ebx,eax
   14000cdf7:	xor    esi,ecx
   14000cdf9:	fdiv   QWORD PTR [rax+0x62]
   14000cdfc:	or     bh,BYTE PTR [rdi+0x20]
   14000cdff:	jl     0x14000cdea
   14000ce01:	mov    ch,0xf
   14000ce03:	(bad)  
   14000ce05:	in     al,0x51
   14000ce07:	out    dx,eax
   14000ce08:	xor    al,0x9a
   14000ce0a:	(bad)  
   14000ce0b:	in     al,0x1e
   14000ce0d:	std    
   14000ce0e:	(bad)  
   14000ce0f:	pushf  
   14000ce10:	push   rbx
   14000ce11:	jb     0x14000ce56
   14000ce13:	outs   dx,DWORD PTR ds:[rsi]
   14000ce14:	outs   dx,BYTE PTR ds:[rsi]
   14000ce15:	jbe    0x14000ce7c
   14000ce17:	jb     0x14000ce8d
   14000ce19:	push   rbx
   14000ce1a:	jo     0x14000ce8c
   14000ce1c:	rex.RXB jb 0x14000ce8e
   14000ce1f:	jne    0x14000ce91
   14000ce21:	push   rsp
   14000ce22:	outs   dx,DWORD PTR ds:[rsi]
   14000ce23:	push   rbx
   14000ce24:	jb     0x14000ce78
   14000ce26:	jo     0x14000ce78
   14000ce28:	jb     0x14000ce99
   14000ce2a:	jo     0x14000ce2c
   14000ce2c:	add    BYTE PTR [rax],al
   14000ce2e:	add    BYTE PTR [rax],al
   14000ce30:	push   rbx
   14000ce31:	jb     0x14000ce89
   14000ce33:	(bad)  
   14000ce34:	ins    BYTE PTR es:[rdi],dx
   14000ce35:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x73655265
   14000ce3d:	je     0x14000ceae
   14000ce3f:	jb     0x14000cea6
   14000ce41:	push   rax
   14000ce42:	outs   dx,DWORD PTR ds:[rsi]
   14000ce43:	imul   ebp,DWORD PTR [rsi+0x74],0x72530000
   14000ce4a:	push   rsp
   14000ce4b:	jb     0x14000ceae
   14000ce4d:	outs   dx,BYTE PTR ds:[rsi]
   14000ce4e:	jae    0x14000cebc
   14000ce50:	(bad)  
   14000ce51:	je     0x14000ceb8
   14000ce53:	push   rax
   14000ce54:	(bad)  
   14000ce55:	je     0x14000cebf
   14000ce57:	add    BYTE PTR [rcx+0x3f],cl
   14000ce5a:	iret   
   14000ce5b:	lods   eax,DWORD PTR ds:[rsi]
   14000ce5c:	(bad)  
   14000ce5d:	push   rdx
   14000ce5e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ce5f:	movabs rdx,0x9a61e8d3d5208ebc
   14000ce69:	test   BYTE PTR [rdx-0x73],ah
   14000ce6c:	ins    DWORD PTR es:[rdi],dx
   14000ce6d:	xchg   esi,eax
   14000ce6e:	jbe    0x14000ce1a
   14000ce70:	xchg   ecx,eax
   14000ce71:	sti    
   14000ce72:	mul    DWORD PTR [rsi-0x1a]
   14000ce75:	(bad)  
   14000ce76:	mov    ebx,0xf7edc5c2
   14000ce7b:	or     DWORD PTR [rsi+0x29],ecx
   14000ce7e:	add    BYTE PTR [rcx-0x51],0x6a
   14000ce82:	sti    
   14000ce83:	(bad)  
   14000ce84:	push   0xe
   14000ce86:	xchg   ebp,eax
   14000ce87:	adc    eax,DWORD PTR [rdi+0x65]
   14000ce8a:	je     0x14000cee3
   14000ce8c:	rex.WRB
   14000ce8d:	rex.WB
   14000ce8e:	rex.X (bad) 
   14000ce90:	movsxd ebp,DWORD PTR [rbx+0x75]
   14000ce93:	jo     0x14000cee9
   14000ce95:	(bad)  
   14000ce96:	jae    0x14000cf03
	...
   14000cea0:	push   rbx
   14000cea1:	js     0x14000ceec
   14000cea3:	outs   dx,BYTE PTR ds:[rsi]
   14000cea4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000ceac:	rex.XB
   14000cead:	rex.WRXB
   14000ceae:	rex.WRB push r11
   14000ceb0:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000ceb4:	imul   esi,DWORD PTR [rcx+rdi*2+0x46],0x5053726f
   14000cebc:	push   rax
   14000cebd:	add    BYTE PTR [rax],al
   14000cebf:	add    BYTE PTR [rdi-0x24],al
   14000cec2:	cmc    
   14000cec3:	xor    al,0x11
   14000cec5:	out    dx,al
   14000cec6:	ror    bh,1
   14000cec8:	cmp    DWORD PTR [rcx],ebx
   14000ceca:	or     BYTE PTR [rdx-0x1d],dl
   14000cecd:	rex.X jmp 0x183792224
   14000ced3:	ins    BYTE PTR es:[rdi],dx
   14000ced4:	gs (bad) 
   14000ced6:	jb     0x14000cf1c
   14000ced8:	imul   esp,DWORD PTR [rsi+0x66],0x6c756369
   14000cedf:	je     0x14000cf22
   14000cee1:	je     0x14000cf57
   14000cee3:	jb     0x14000cf4e
   14000cee5:	(bad)  
   14000cee6:	jne    0x14000cf5c
   14000cee8:	gs jae 0x14000ceeb
   14000ceeb:	add    BYTE PTR [rax],al
   14000ceed:	add    BYTE PTR [rax],al
   14000ceef:	add    BYTE PTR [rbx+0x78],dl
   14000cef2:	rex.R
   14000cef3:	gs ins BYTE PTR es:[rdi],dx
   14000cef5:	gs je  0x14000cf5d
   14000cef8:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x5f000000
   14000cf01:	rex.RXB
   14000cf02:	gs je  0x14000cf4b
   14000cf05:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000cf0d:	(bad)  
   14000cf0e:	jne    0x14000cf84
   14000cf10:	gs jae 0x14000cf67
   14000cf13:	(bad)  
   14000cf14:	add    BYTE PTR [eax],al
   14000cf17:	add    BYTE PTR [rbx+0x68],dh
   14000cf1a:	cs rex.WB jae 0x14000cf74
   14000cf1e:	(bad)  
   14000cf1f:	ins    BYTE PTR es:[rdi],dx
   14000cf20:	imul   esp,DWORD PTR [rax+rbp*1+0x29],0x0
   14000cf28:	push   rbx
   14000cf29:	js     0x14000cf7e
   14000cf2b:	gs je  0x14000cf74
   14000cf2e:	imul   ebp,DWORD PTR [rbp+riz*2+0x41],0x69727474
   14000cf36:	(bad)  
   14000cf37:	jne    0x14000cfad
   14000cf39:	gs jae 0x14000cf3c
   14000cf3c:	add    BYTE PTR [rax],al
   14000cf3e:	add    BYTE PTR [rax],al
   14000cf40:	neg    ah
   14000cf42:	push   rbp
   14000cf43:	retf   0xf965
   14000cf46:	pop    rdx
   14000cf47:	pop    rsi
   14000cf48:	mov    ebp,DWORD PTR [rip+0xffffffff8f65c317]        # 0xcf669265
   14000cf4e:	std    
   14000cf4f:	rex.RXB
   14000cf50:	rex.RX
   14000cf51:	rex.B
   14000cf52:	rex.WB
   14000cf53:	rex.WR
   14000cf54:	rex.RB
   14000cf55:	rex.R pop rbx
   14000cf57:	push   rsp
   14000cf58:	push   rdx
   14000cf59:	rex.B
   14000cf5a:	rex.XB
   14000cf5b:	rex.WXB pop r13
   14000cf5d:	add    BYTE PTR [rax],al
   14000cf5f:	add    BYTE PTR [rsi+0x41],al
   14000cf62:	rex.WB
   14000cf63:	rex.WR
   14000cf64:	rex.RB
   14000cf65:	add    BYTE PTR [rax],r8b
   14000cf68:	adc    DWORD PTR [rcx],esp
   14000cf6a:	jnp    0x14000cf15
   14000cf6c:	add    al,0x1e
   14000cf6e:	jbe    0x14000cf77
   14000cf70:	mov    cl,0xab
   14000cf72:	and    di,WORD PTR [rdi+rax*2+0x6f]
   14000cf77:	lea    edx,[rbx+0x78]
   14000cf7a:	rex.B ins BYTE PTR es:[rdi],dx
   14000cf7c:	ins    BYTE PTR es:[rdi],dx
   14000cf7d:	outs   dx,DWORD PTR ds:[rsi]
   14000cf7e:	movsxd esp,DWORD PTR [rcx+0x74]
   14000cf81:	gs rex.RB jbe 0x14000cfea
   14000cf85:	outs   dx,BYTE PTR ds:[rsi]
   14000cf86:	je     0x14000cfdc
   14000cf88:	jb     0x14000cfeb
   14000cf8a:	movsxd esp,DWORD PTR [rbp+0x50]
   14000cf8d:	jb     0x14000cffe
   14000cf8f:	jo     0x14000cf91
   14000cf91:	add    BYTE PTR [rax],al
   14000cf93:	add    BYTE PTR [rax],al
   14000cf95:	add    BYTE PTR [rax],al
   14000cf97:	add    BYTE PTR [rbx+0x78],dl
   14000cf9a:	push   rcx
   14000cf9b:	jne    0x14000d002
   14000cf9d:	jb     0x14000d018
   14000cf9f:	push   rsp
   14000cfa0:	jb     0x14000d003
   14000cfa2:	movsxd esp,DWORD PTR [rbp+0x53]
   14000cfa5:	gs jae 0x14000d01b
   14000cfa8:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000cfaf:	add    BYTE PTR [rbx+0x78],dl
   14000cfb2:	rex.RXB
   14000cfb3:	gs je  0x14000cfe6
   14000cfb6:	pop    rax
   14000cfb7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000cfb9:	imul   r13d,DWORD PTR [ebp+r12d*2+0x43],0x746e756f
   14000cfc3:	add    BYTE PTR [rax],al
   14000cfc5:	add    BYTE PTR [rax],al
   14000cfc7:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e0142cd
   14000cfcd:	add    BYTE PTR [rax],dh
   14000cfcf:	add    BYTE PTR [rsi],ch
   14000cfd1:	add    BYTE PTR [rip+0x7300],ah        # 0x1400142d7
   14000cfd7:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e0142dd
   14000cfdd:	add    BYTE PTR [rax],dh
   14000cfdf:	add    BYTE PTR [rsi],ch
   14000cfe1:	add    BYTE PTR [rdi],bh
   14000cfe3:	add    BYTE PTR [rsi],ch
   14000cfe5:	add    BYTE PTR [rip+0x7300],ah        # 0x1400142eb
   14000cfeb:	add    BYTE PTR [rax],al
   14000cfed:	add    BYTE PTR [rax],al
   14000cfef:	add    BYTE PTR [rbx+0x78],dl
   14000cff2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000cff4:	ins    DWORD PTR es:[rdi],dx
   14000cff5:	jo     0x14000d069
   14000cff7:	gs jae 0x14000d06d
   14000cffa:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000cffc:	imul   r13d,DWORD PTR [ebp+r12d*2+0x0],0x0
   14000d006:	add    BYTE PTR [rax],al
   14000d008:	push   rbx
   14000d009:	js     0x14000d04e
   14000d00b:	push   0x576b6365
   14000d010:	rex.X
   14000d011:	imul   r12d,DWORD PTR [rcx+0x67],0x73736553
   14000d019:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14000d020:	push   rbx
   14000d021:	js     0x14000d070
   14000d023:	gs jb  0x14000d08d
   14000d026:	gs rex.RB js 0x14000d09e
   14000d02a:	jb     0x14000d08d
   14000d02c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d02e:	addr32 jae 0x14000d031
   14000d031:	add    BYTE PTR [rax],al
   14000d033:	add    BYTE PTR [rax],al
   14000d035:	add    BYTE PTR [rax],al
   14000d037:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e01433d
   14000d03d:	add    BYTE PTR [rip+0x2e006400],ah        # 0x16e013443
   14000d043:	add    BYTE PTR [rip+0x7300],ah        # 0x140014349
   14000d049:	add    BYTE PTR [rax],al
   14000d04b:	add    BYTE PTR [rax],al
   14000d04d:	add    BYTE PTR [rax],al
   14000d04f:	add    BYTE PTR [rip+0x2e007300],ah        # 0x16e014355
   14000d055:	add    BYTE PTR [rax],dh
   14000d057:	add    BYTE PTR [rsi],ch
   14000d059:	add    BYTE PTR [rip+0x2e006400],ah        # 0x16e01345f
   14000d05f:	add    BYTE PTR [rip+0x7300],ah        # 0x140014365
   14000d065:	add    BYTE PTR [rax],al
   14000d067:	add    BYTE PTR [rbx+0x78],dl
   14000d06a:	push   rdx
   14000d06b:	outs   dx,DWORD PTR ds:[rsi]
   14000d06c:	je     0x14000d0cf
   14000d06e:	je     0x14000d0d5
   14000d070:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000d072:	addr32 jae 0x14000d075
   14000d075:	add    BYTE PTR [rax],al
   14000d077:	add    BYTE PTR [rbx+0x78],dl
   14000d07a:	push   rbx
   14000d07b:	je     0x14000d0de
   14000d07d:	jb     0x14000d0f3
   14000d07f:	push   rsp
   14000d080:	jb     0x14000d0e3
   14000d082:	movsxd ebp,DWORD PTR [rcx+0x6e]
   14000d085:	add    BYTE PTR [eax],al
   14000d088:	and    eax,0x2e007300
   14000d08d:	add    BYTE PTR [rax],dh
   14000d08f:	add    BYTE PTR [rsi],ch
   14000d091:	add    BYTE PTR [rcx],dh
   14000d093:	add    BYTE PTR [rsi],ch
   14000d095:	add    BYTE PTR [rip+0x7300],ah        # 0x14001439b
   14000d09b:	add    BYTE PTR [rax],al
   14000d09d:	add    BYTE PTR [rax],al
   14000d09f:	add    BYTE PTR [rbx+0x78],dl
   14000d0a2:	push   rbx
   14000d0a3:	je     0x14000d114
   14000d0a5:	jo     0x14000d0fb
   14000d0a7:	jb     0x14000d10a
   14000d0a9:	movsxd ebp,DWORD PTR [rcx+0x6e]
   14000d0ac:	add    BYTE PTR [eax],al
   14000d0af:	add    BYTE PTR [rbx+0x78],dl
   14000d0b2:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000d0b4:	(bad)  
   14000d0b5:	(bad)  
   14000d0b6:	ins    BYTE PTR es:[rdi],dx
   14000d0b7:	gs push rsp
   14000d0b9:	jb     0x14000d11c
   14000d0bb:	movsxd esp,DWORD PTR [rbp+0x44]
   14000d0be:	gs data16 (bad) 
   14000d0c1:	jne    0x14000d12f
   14000d0c3:	je     0x14000d0c5
   14000d0c5:	add    BYTE PTR [rax],al
   14000d0c7:	add    BYTE PTR [rbx+0x78],dl
   14000d0ca:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000d0cc:	(bad)  
   14000d0cd:	(bad)  
   14000d0ce:	ins    BYTE PTR es:[rdi],dx
   14000d0cf:	gs push rsp
   14000d0d1:	jb     0x14000d134
   14000d0d3:	movsxd esp,DWORD PTR [rbp+0x43]
   14000d0d6:	jne    0x14000d14b
   14000d0d8:	je     0x14000d149
   14000d0da:	ins    DWORD PTR es:[rdi],dx
   14000d0db:	add    BYTE PTR [rax],al
   14000d0dd:	add    BYTE PTR [rax],al
   14000d0df:	add    BYTE PTR [rdx+0x0],ah
   14000d0e2:	ins    BYTE PTR es:[rdi],dx
   14000d0e3:	add    BYTE PTR [rdx+0x0],ah
   14000d0e6:	ins    BYTE PTR es:[rdi],dx
   14000d0e7:	add    BYTE PTR [rdi+0x0],ch
   14000d0ea:	add    BYTE PTR [eax],al
   14000d0ed:	add    BYTE PTR [rax],al
   14000d0ef:	add    BYTE PTR [rbp+0x0],ah
   14000d0f2:	je     0x14000d0f4
   14000d0f4:	ins    BYTE PTR es:[rdi],dx
   14000d0f5:	add    BYTE PTR [rax],al
   14000d0f7:	add    dl,bl
   14000d0f9:	adc    bl,ah
   14000d0fb:	(bad)  
   14000d0fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d0fd:	(bad)  
   14000d0fe:	pushf  
   14000d0ff:	pop    rdi
   14000d100:	test   BYTE PTR [rdi],dl
   14000d102:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d103:	jns    0x14000d11b
   14000d105:	loopne 0x14000d126
   14000d107:	mov    cl,0x0
	...
   14000d15d:	add    BYTE PTR [rax],al
   14000d15f:	add    BYTE PTR [rdi-0x1af078ca],bl
   14000d165:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d166:	cld    
   14000d167:	rex.WR movabs rbp,0xc7dd724515e6733e
   14000d171:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000d172:	stos   DWORD PTR es:[rdi],eax
   14000d173:	(bad)  
   14000d174:	test   eax,0x9640134d
   14000d179:	xchg   edi,eax
   14000d17a:	and    ah,cl
   14000d17c:	(bad)  
   14000d17d:	(bad)  
   14000d17e:	jne    0x14305d184
   14000d184:	add    al,BYTE PTR [rax]
   14000d186:	(bad)  
   14000d187:	add    DWORD PTR [rsp+rax*1],eax
   14000d18a:	add    DWORD PTR [rax],eax
   14000d18c:	(bad)  
   14000d18d:	add    al,BYTE PTR [rbx]
   14000d18f:	add    BYTE PTR [rcx+0x65],ah
   14000d192:	imul   ebp,DWORD PTR [rdi+0x75],0x49454179
   14000d199:	rex.WRXB push r13
   14000d19b:	pop    rcx
	...
   14000d1a4:	(bad)  
   14000d1a5:	cmp    BYTE PTR [rdi+0x55],bl
   14000d1ab:	add    BYTE PTR [rdx],al
   14000d1ad:	add    BYTE PTR [rax],al
   14000d1af:	add    BYTE PTR [rax+rax*1],ah
   14000d1b2:	add    BYTE PTR [rax],al
   14000d1b4:	movabs al,ds:0xb8a00000d2
   14000d1bd:	add    BYTE PTR [rax],al
   14000d1bf:	add    ch,dl
   14000d1c1:	cmp    BYTE PTR [rdi+0x55],bl
   14000d1c7:	add    BYTE PTR [rip+0xffffffffe0000000],cl        # 0x12000d1cd
   14000d1cd:	add    DWORD PTR [rax],eax
   14000d1cf:	add    al,bl
   14000d1d1:	rol    BYTE PTR [rax],cl
   14000d1d3:	add    al,bl
   14000d1d5:	mov    eax,0x0
	...
   14000d1fe:	add    BYTE PTR [rax],al
   14000d200:	movabs al,ds:0x0
	...
   14000d255:	add    BYTE PTR [rax],al
   14000d257:	add    BYTE PTR [rax],cl
   14000d259:	lock add BYTE PTR [rax+0x1],al
	...
   14000d26d:	add    BYTE PTR [rax],al
   14000d26f:	add    BYTE PTR [rax+0x14000c3],dl
   14000d275:	add    BYTE PTR [rax],al
   14000d277:	add    BYTE PTR [rax+0x14000c3],bl
   14000d27d:	add    BYTE PTR [rax],al
   14000d27f:	add    al,bl
   14000d281:	ret    
   14000d282:	add    BYTE PTR [rax+0x1],al
   14000d285:	add    BYTE PTR [rax],al
   14000d287:	add    BYTE PTR [rax],cl
	...
   14000d291:	xor    eax,0x0
	...
   14000d29e:	add    BYTE PTR [rax],al
   14000d2a0:	push   rdx
   14000d2a1:	push   rbx
   14000d2a2:	rex.R push rbx
   14000d2a4:	movabs r9,0xbbaf4370f45e990d
   14000d2ae:	ret    0xc47f
   14000d2b1:	fcom   DWORD PTR [rsi]
   14000d2b3:	and    eax,0x1
   14000d2b8:	jae    0x14000d32c
   14000d2ba:	je     0x14000d31d
   14000d2bc:	jae    0x14000d329
   14000d2be:	jae    0x14000d2ee
   14000d2c0:	jo     0x14000d326
   14000d2c2:	(bad)  
	...
   14000d2d7:	add    BYTE PTR [rdi+0x43],al
   14000d2da:	push   rsp
   14000d2db:	rex.WR add BYTE PTR [rax],r10b
   14000d2de:	add    BYTE PTR [rax],al
   14000d2e0:	pop    rax
   14000d2e1:	movabs eax,ds:0x24747865742e0000
   14000d2ea:	ins    DWORD PTR es:[rdi],dx
   14000d2eb:	outs   dx,BYTE PTR ds:[rsi]
   14000d2ec:	add    BYTE PTR [rax],al
   14000d2ee:	add    BYTE PTR [rax],al
   14000d2f0:	(bad)  
   14000d2f1:	mov    cl,0x0
   14000d2f3:	add    BYTE PTR [rdx],dl
   14000d2f5:	add    BYTE PTR [rax],al
   14000d2f7:	add    BYTE PTR [rsi],ch
   14000d2f9:	je     0x14000d360
   14000d2fb:	js     0x14000d371
   14000d2fd:	and    al,0x6d
   14000d2ff:	outs   dx,BYTE PTR ds:[rsi]
   14000d300:	and    al,0x30
   14000d302:	xor    BYTE PTR [rax],al
   14000d304:	xor    BYTE PTR [rcx+0x500000],0x0
   14000d30b:	add    BYTE PTR [rsi],ch
   14000d30d:	je     0x14000d374
   14000d30f:	js     0x14000d385
   14000d311:	and    al,0x78
   14000d313:	add    BYTE PTR [rax],al
   14000d315:	rol    BYTE PTR [rax],0x0
   14000d318:	nop
   14000d319:	add    eax,DWORD PTR [rax]
   14000d31b:	add    BYTE PTR [rsi],ch
   14000d31d:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x352461
   14000d325:	add    BYTE PTR [rax],al
   14000d327:	add    BYTE PTR [rax+0x100000c3],dl
   14000d32d:	add    BYTE PTR [rax],al
   14000d32f:	add    BYTE PTR [rsi],ch
   14000d331:	xor    BYTE PTR [rax],dh
   14000d333:	movsxd esp,DWORD PTR [rsi+0x67]
   14000d336:	add    BYTE PTR [rax],al
   14000d338:	movabs al,ds:0x2e000000080000c3
   14000d341:	rex.XB push r10
   14000d343:	push   rsp
   14000d344:	and    al,0x58
   14000d346:	rex.XB
   14000d347:	add    BYTE PTR [r8],al
   14000d34a:	add    BYTE PTR [rax],al
   14000d34c:	test   al,0xc3
   14000d34e:	add    BYTE PTR [rax],al
   14000d350:	or     BYTE PTR [rax],al
   14000d352:	add    BYTE PTR [rax],al
   14000d354:	cs rex.XB push r10
   14000d357:	push   rsp
   14000d358:	and    al,0x58
   14000d35a:	rex.XB
   14000d35b:	rex.B
   14000d35c:	add    BYTE PTR [r8],al
   14000d35f:	add    BYTE PTR [rax+0x80000c3],dh
   14000d365:	add    BYTE PTR [rax],al
   14000d367:	add    BYTE PTR [rsi],ch
   14000d369:	rex.XB push r10
   14000d36b:	push   rsp
   14000d36c:	and    al,0x58
   14000d36e:	rex.XB pop r10
   14000d370:	add    BYTE PTR [rax],al
   14000d372:	add    BYTE PTR [rax],al
   14000d374:	mov    eax,0x80000c3
   14000d379:	add    BYTE PTR [rax],al
   14000d37b:	add    BYTE PTR [rsi],ch
   14000d37d:	rex.XB push r10
   14000d37f:	push   rsp
   14000d380:	and    al,0x58
   14000d382:	rex.WB
   14000d383:	add    BYTE PTR [r8],al
   14000d386:	add    BYTE PTR [rax],al
   14000d388:	rol    bl,0x0
   14000d38b:	add    BYTE PTR [rax],cl
   14000d38d:	add    BYTE PTR [rax],al
   14000d38f:	add    BYTE PTR [rsi],ch
   14000d391:	rex.XB push r10
   14000d393:	push   rsp
   14000d394:	and    al,0x58
   14000d396:	rex.WB
   14000d397:	rex.B
   14000d398:	add    BYTE PTR [r8],al
   14000d39b:	add    al,cl
   14000d39d:	ret    
   14000d39e:	add    BYTE PTR [rax],al
   14000d3a0:	or     BYTE PTR [rax],al
   14000d3a2:	add    BYTE PTR [rax],al
   14000d3a4:	cs rex.XB push r10
   14000d3a7:	push   rsp
   14000d3a8:	and    al,0x58
   14000d3aa:	rex.WB pop r9
   14000d3ac:	add    BYTE PTR [rax],al
   14000d3ae:	add    BYTE PTR [rax],al
   14000d3b0:	rol    bl,1
   14000d3b2:	add    BYTE PTR [rax],al
   14000d3b4:	or     BYTE PTR [rax],al
   14000d3b6:	add    BYTE PTR [rax],al
   14000d3b8:	cs rex.XB push r10
   14000d3bb:	push   rsp
   14000d3bc:	and    al,0x58
   14000d3be:	rex.WB pop r10
   14000d3c0:	add    BYTE PTR [rax],al
   14000d3c2:	add    BYTE PTR [rax],al
   14000d3c4:	fadd   st,st(3)
   14000d3c6:	add    BYTE PTR [rax],al
   14000d3c8:	and    BYTE PTR [rax],al
   14000d3ca:	add    BYTE PTR [rax],al
   14000d3cc:	imul   sp,WORD PTR cs:[ebx+esi*2+0x24],0x78
   14000d3d5:	add    BYTE PTR [rax],al
   14000d3d7:	add    BYTE PTR [rax],al
   14000d3d9:	(bad)  
   14000d3da:	add    BYTE PTR [rax],al
   14000d3dc:	movabs al,ds:0x746164722e00000e
   14000d3e5:	(bad)  
   14000d3e6:	add    BYTE PTR [rax],al
   14000d3e8:	movabs al,ds:0x2e000002180000d2
   14000d3f1:	jb     0x14000d457
   14000d3f3:	(bad)  
   14000d3f4:	je     0x14000d457
   14000d3f6:	and    al,0x7a
   14000d3f8:	jp     0x14000d474
   14000d3fa:	fs (bad) 
   14000d3fc:	add    BYTE PTR [eax],al
   14000d3ff:	add    BYTE PTR [rax+0xc0000d4],bh
   14000d405:	(bad)  
   14000d406:	add    BYTE PTR [rax],al
   14000d408:	cs js  0x14000d46f
   14000d40b:	(bad)  
   14000d40c:	je     0x14000d46f
   14000d40e:	add    BYTE PTR [rax],al
   14000d410:	(bad)  
   14000d411:	fild   DWORD PTR [rax]
   14000d413:	add    al,dh
   14000d415:	add    BYTE PTR [rax],al
   14000d417:	add    BYTE PTR [rsi],ch
   14000d419:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x322461
   14000d421:	add    BYTE PTR [rax],al
   14000d423:	add    BYTE PTR [rsp+rbx*8+0x140000],dh
   14000d42a:	add    BYTE PTR [rax],al
   14000d42c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   14000d435:	add    BYTE PTR [rax],al
   14000d437:	add    al,cl
   14000d439:	fadd   QWORD PTR [rax]
   14000d43b:	add    BYTE PTR [rax+0x2e000003],dl
   14000d441:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x342461
   14000d449:	add    BYTE PTR [rax],al
   14000d44b:	add    BYTE PTR [rax-0x20],bl
   14000d44e:	add    BYTE PTR [rax],al
   14000d450:	and    al,0x8
   14000d452:	add    BYTE PTR [rax],al
   14000d454:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   14000d45d:	add    BYTE PTR [rax],al
   14000d45f:	add    BYTE PTR [rax],al
   14000d461:	lock add BYTE PTR [rax],al
   14000d464:	sub    BYTE PTR [rax],al
   14000d466:	add    BYTE PTR [rax],al
   14000d468:	cs fs (bad) 
   14000d46b:	je     0x14000d4ce
   14000d46d:	add    BYTE PTR [rax],al
   14000d46f:	add    BYTE PTR [rax],dh
   14000d471:	lock add BYTE PTR [rax],al
   14000d474:	call   0x16e00d47e
   14000d479:	(bad)  
   14000d47b:	jae    0x14000d47d
   14000d47d:	add    BYTE PTR [rax],al
   14000d47f:	add    BYTE PTR [rax],al
   14000d481:	add    BYTE PTR [rcx],al
   14000d483:	add    ah,bl
   14000d485:	add    eax,0x702e0000
   14000d48a:	fs (bad) 
   14000d48c:	je     0x14000d4ef
   14000d48e:	add    BYTE PTR [rax],al
   14000d490:	add    BYTE PTR [rax],dl
   14000d492:	add    DWORD PTR [rax],eax
   14000d494:	lock add BYTE PTR [rax],al
   14000d497:	add    BYTE PTR [rsi],ch
   14000d499:	jb     0x14000d50e
   14000d49b:	jb     0x14000d500
   14000d49d:	and    al,0x30
   14000d49f:	xor    DWORD PTR [rax],eax
   14000d4a1:	add    BYTE PTR [rax],al
   14000d4a3:	add    al,dh
   14000d4a5:	adc    BYTE PTR [rcx],al
   14000d4a7:	add    BYTE PTR [rax],ah
   14000d4a9:	(bad)  
   14000d4aa:	add    BYTE PTR [rax],al
   14000d4ac:	cs jb  0x14000d522
   14000d4af:	jb     0x14000d514
   14000d4b1:	and    al,0x30
   14000d4b3:	xor    al,BYTE PTR [rax]
   14000d4b5:	add    BYTE PTR [rax],al
   14000d4b7:	add    BYTE PTR [rcx],al
   14000d4b9:	add    al,0x1
   14000d4bb:	add    BYTE PTR [rdx+riz*2],al
   14000d4be:	add    BYTE PTR [rax],al
   14000d4c0:	add    DWORD PTR [rbx],ecx
   14000d4c2:	add    DWORD PTR [rax],eax
   14000d4c4:	or     eax,DWORD PTR [rdx+0xb010000]
   14000d4ca:	add    DWORD PTR [rax],eax
   14000d4cc:	or     esp,DWORD PTR [rdx+0xb010000]
   14000d4d2:	add    DWORD PTR [rax],eax
   14000d4d4:	or     eax,edx
   14000d4d6:	add    BYTE PTR [rax],al
   14000d4d8:	add    DWORD PTR [rdx],edx
   14000d4da:	or     BYTE PTR [rax],al
   14000d4dc:	adc    dh,BYTE PTR [rdx-0x1ff60ff5]
   14000d4e2:	(bad)  
   14000d4e3:	rol    BYTE PTR [rip+0x3600470],1        # 0x14360d959
   14000d4e9:	xor    BYTE PTR [rdx],al
   14000d4eb:	push   rax
   14000d4ec:	sbb    DWORD PTR [rdx],ebp
   14000d4ee:	or     eax,DWORD PTR [rax]
   14000d4f0:	sbb    al,0x34
   14000d4f2:	xor    BYTE PTR [rax],al
   14000d4f4:	sbb    al,0x1
   14000d4f6:	add    BYTE PTR es:[rax],dl
   14000d4f9:	lock (bad) 
   14000d4fb:	loopne 0x14000d509
   14000d4fd:	ror    BYTE PTR [rdx],1
   14000d4ff:	ror    BYTE PTR [rax],0x70
   14000d502:	(bad)  
   14000d503:	(bad)  
   14000d504:	(bad)  
   14000d505:	push   rax
   14000d506:	add    BYTE PTR [rax],al
   14000d508:	mov    eax,0x200000b0
   14000d50d:	add    DWORD PTR [rax],eax
   14000d50f:	add    BYTE PTR [rcx],al
   14000d511:	adc    al,BYTE PTR [rsi]
   14000d513:	add    BYTE PTR [rdx],dl
   14000d515:	je     0x14000d527
   14000d517:	add    BYTE PTR [rdx],dl
   14000d519:	xor    al,0xf
   14000d51b:	add    BYTE PTR [rdx],dl
   14000d51d:	mov    dl,0xb
   14000d51f:	push   rax
   14000d520:	add    DWORD PTR [rdi],edx
   14000d522:	or     al,BYTE PTR [rax]
   14000d524:	(bad)  
   14000d525:	xor    al,0x17
   14000d527:	add    BYTE PTR [rdi],dl
   14000d529:	rcl    BYTE PTR [rax],cl
   14000d52b:	lock (bad) 
   14000d52d:	loopne 0x14000d53b
   14000d52f:	ror    BYTE PTR [rdx],1
   14000d531:	ror    BYTE PTR [rax],0x70
   14000d534:	(bad)  
   14000d535:	(bad)  
   14000d536:	(bad)  
   14000d537:	push   rax
   14000d538:	sbb    DWORD PTR [rip+0x11c000a],ebp        # 0x1411cd548
   14000d53e:	push   rbp
   14000d53f:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e0e135
   14000d545:	rol    BYTE PTR [rdi],1
   14000d547:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360d9be
   14000d54e:	add    dl,BYTE PTR [rax-0x48]
   14000d551:	mov    al,0x0
   14000d553:	add    BYTE PTR [rax+0x1000002],dl
   14000d559:	(bad)  
   14000d55a:	(bad)  
   14000d55b:	add    BYTE PTR [rsi],cl
   14000d55d:	rol    BYTE PTR [rdi],cl
   14000d55f:	lock add eax,0x3600470
   14000d565:	xor    BYTE PTR [rdx],al
   14000d567:	push   rax
   14000d568:	add    DWORD PTR [rsi],ebx
   14000d56a:	or     al,BYTE PTR [rax]
   14000d56c:	(bad)  
   14000d56d:	je     0x14000d586
   14000d56f:	add    BYTE PTR [rsi],bl
   14000d571:	fs (bad) 
   14000d573:	add    BYTE PTR [rsi],bl
   14000d575:	xor    al,0x15
   14000d577:	add    BYTE PTR [rsi],bl
   14000d579:	repnz adc al,0xf0
   14000d57c:	adc    ah,al
   14000d57e:	adc    BYTE PTR [rax+0x19],dl
   14000d581:	(bad)  
   14000d582:	or     DWORD PTR [rax],eax
   14000d584:	(bad)  
   14000d585:	je     0x14000d5c4
   14000d587:	add    BYTE PTR [rsi],bl
   14000d589:	fs cmp al,0x0
   14000d58c:	(bad)  
   14000d58d:	xor    al,0x3b
   14000d58f:	add    BYTE PTR [rsi],bl
   14000d591:	add    DWORD PTR [rax],edi
   14000d593:	add    BYTE PTR [rax],dl
   14000d595:	push   rax
   14000d596:	add    BYTE PTR [rax],al
   14000d598:	mov    eax,0xb00000b0
   14000d59d:	add    DWORD PTR [rax],eax
   14000d59f:	add    BYTE PTR [rcx],al
   14000d5a1:	add    al,0x1
   14000d5a3:	add    BYTE PTR [rdx+rax*4],al
   14000d5a6:	add    BYTE PTR [rax],al
   14000d5a8:	add    DWORD PTR [rcx+rax*1],eax
   14000d5ab:	add    BYTE PTR [rdx+riz*4],al
   14000d5ae:	add    BYTE PTR [rax],al
   14000d5b0:	add    DWORD PTR [rdi],eax
   14000d5b2:	add    DWORD PTR [rax],eax
   14000d5b4:	(bad)  
   14000d5b5:	movabs ds:0x340a00040a010000,al
   14000d5be:	(bad)  
   14000d5bf:	add    BYTE PTR [rdx],cl
   14000d5c1:	mov    dl,0x6
   14000d5c3:	jo     0x14000d5c6
   14000d5c5:	or     al,BYTE PTR [rax+rax*1]
   14000d5c8:	or     dh,BYTE PTR [rsi+rax*1]
   14000d5cb:	add    BYTE PTR [rdx],cl
   14000d5cd:	xor    al,BYTE PTR [rsi]
   14000d5cf:	jo     0x14000d5ea
   14000d5d1:	sub    al,0xb
   14000d5d3:	add    BYTE PTR [rsi],bl
   14000d5d5:	xor    BYTE PTR fs:[rax],al
   14000d5d8:	(bad)  
   14000d5d9:	xor    al,0x2f
   14000d5db:	add    BYTE PTR [rsi],bl
   14000d5dd:	add    DWORD PTR [rax],ebp
   14000d5df:	add    BYTE PTR [rdx],dl
   14000d5e1:	lock adc al,dl
   14000d5e4:	(bad)  
   14000d5e5:	ror    BYTE PTR [rax+rsi*2],0xb
   14000d5e9:	push   rax
   14000d5ea:	add    BYTE PTR [rax],al
   14000d5ec:	mov    eax,0x300000b0
   14000d5f1:	add    DWORD PTR [rax],eax
   14000d5f3:	add    BYTE PTR [rcx],al
   14000d5f5:	sbb    al,0xb
   14000d5f7:	add    BYTE PTR [rsp+rsi*1],bl
   14000d5fa:	sbb    al,0x0
   14000d5fc:	sbb    al,0x1
   14000d5fe:	adc    al,0x0
   14000d600:	adc    al,dh
   14000d602:	(bad)  
   14000d603:	loopne 0x14000d611
   14000d605:	ror    BYTE PTR [rdx],1
   14000d607:	ror    BYTE PTR [rax],0x70
   14000d60a:	(bad)  
   14000d60b:	(bad)  
   14000d60c:	(bad)  
   14000d60d:	push   rax
   14000d60e:	add    BYTE PTR [rax],al
   14000d610:	sbb    DWORD PTR [rdi],esi
   14000d612:	or     eax,0x62742600
   14000d617:	add    BYTE PTR [rsi],ah
   14000d619:	fs (bad) 
   14000d61b:	add    BYTE PTR [rsi],ah
   14000d61d:	xor    al,0x60
   14000d61f:	add    BYTE PTR [rsi],ah
   14000d621:	add    DWORD PTR [rdx+0x0],ebx
   14000d624:	sbb    al,dh
   14000d626:	(bad)  
   14000d627:	loopne 0x14000d63d
   14000d629:	rcl    BYTE PTR [rdx],1
   14000d62b:	rcl    BYTE PTR [rax],0x50
   14000d62e:	add    BYTE PTR [rax],al
   14000d630:	mov    eax,0xc00000b0
   14000d635:	add    al,BYTE PTR [rax]
   14000d637:	add    BYTE PTR [rcx],al
   14000d639:	adc    al,BYTE PTR [rax+rax*1]
   14000d63c:	adc    dh,BYTE PTR [rax+rcx*1]
   14000d63f:	add    BYTE PTR [rdx],dl
   14000d641:	xor    cl,BYTE PTR [rsi]
   14000d643:	(bad)  
   14000d644:	add    DWORD PTR [rip+0x1150008],edx        # 0x14115d652
   14000d64a:	and    DWORD PTR [rax],eax
   14000d64c:	or     eax,esi
   14000d64e:	(bad)  
   14000d64f:	loopne 0x14000d656
   14000d651:	jo     0x14000d657
   14000d653:	(bad)  
   14000d654:	add    esi,DWORD PTR [rax]
   14000d656:	add    dl,BYTE PTR [rax+0x1]
   14000d659:	adc    ecx,DWORD PTR [rax]
   14000d65b:	add    BYTE PTR [rbx],dl
   14000d65d:	xor    al,0x14
   14000d65f:	add    BYTE PTR [rbx],dl
   14000d661:	mov    dl,0xc
   14000d663:	lock or ah,al
   14000d666:	or     BYTE PTR [rax+0x7],dh
   14000d669:	(bad)  
   14000d66a:	(bad)  
   14000d66b:	push   rax
   14000d66c:	add    DWORD PTR [rip+0xfffffffff2150008],edx        # 0x13215d67a
   14000d672:	or     esi,eax
   14000d674:	or     eax,esp
   14000d676:	(bad)  
   14000d677:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360daee
   14000d67e:	add    dl,BYTE PTR [rax+0x1]
   14000d681:	sbb    BYTE PTR [rdx],cl
   14000d683:	add    BYTE PTR [rax],bl
   14000d685:	adc    eax,DWORD PTR fs:[rax]
   14000d688:	sbb    BYTE PTR [rdx+rdx*1+0x0],dl
   14000d68c:	sbb    BYTE PTR [rcx+rdx*1],dh
   14000d68f:	add    BYTE PTR [rax],bl
   14000d691:	mov    dl,0x14
   14000d693:	lock adc ah,al
   14000d696:	adc    BYTE PTR [rax+0x1],dh
   14000d699:	sbb    al,0xb
   14000d69b:	add    BYTE PTR [rsp+rsi*1],bl
   14000d69e:	and    BYTE PTR [rax],al
   14000d6a0:	sbb    al,0x1
   14000d6a2:	sbb    BYTE PTR [rax],al
   14000d6a4:	adc    al,dh
   14000d6a6:	(bad)  
   14000d6a7:	loopne 0x14000d6b5
   14000d6a9:	ror    BYTE PTR [rdx],1
   14000d6ab:	ror    BYTE PTR [rax],0x70
   14000d6ae:	(bad)  
   14000d6af:	(bad)  
   14000d6b0:	(bad)  
   14000d6b1:	push   rax
   14000d6b2:	add    BYTE PTR [rax],al
   14000d6b4:	add    DWORD PTR [rdi],ecx
   14000d6b6:	(bad)  
   14000d6b7:	add    BYTE PTR [rdi],cl
   14000d6b9:	xor    al,0x12
   14000d6bb:	add    BYTE PTR [rdi],cl
   14000d6bd:	mov    dl,0x8
   14000d6bf:	jo     0x14000d6c8
   14000d6c1:	(bad)  
   14000d6c2:	(bad)  
   14000d6c3:	push   rax
   14000d6c4:	add    DWORD PTR [rbx],ebx
   14000d6c6:	or     DWORD PTR [rax],eax
   14000d6c8:	sbb    esi,DWORD PTR [rdi+rdx*1+0x0]
   14000d6cc:	sbb    esp,DWORD PTR [rsi+rdx*1+0x0]
   14000d6d0:	sbb    esi,DWORD PTR [rdx*1+0x12011b00]
   14000d6d7:	add    BYTE PTR [rax],dl
   14000d6d9:	push   rax
   14000d6da:	add    BYTE PTR [rax],al
   14000d6dc:	add    DWORD PTR [rdi+rax*1],edx
   14000d6df:	add    BYTE PTR [rsp+rsi*1],dl
   14000d6e2:	and    eax,0x20011400
   14000d6e7:	add    BYTE PTR [rax],cl
   14000d6e9:	jo     0x14000d6f2
   14000d6eb:	(bad)  
   14000d6ec:	(bad)  
   14000d6ed:	push   rax
   14000d6ee:	add    BYTE PTR [rax],al
   14000d6f0:	add    DWORD PTR [rdi],ecx
   14000d6f2:	(bad)  
   14000d6f3:	add    BYTE PTR [rdi],cl
   14000d6f5:	str    WORD PTR fs:[rdi]
   14000d6f9:	xor    al,0xe
   14000d6fb:	add    BYTE PTR [rdi],cl
   14000d6fd:	mov    dl,0xb
   14000d6ff:	jo     0x14000d702
   14000d701:	adc    eax,0x64150008
   14000d706:	adc    eax,0x12341500
   14000d70b:	add    BYTE PTR [rip+0xce00ed2],dl        # 0x14ce0e5e3
   14000d711:	jo     0x14000d71e
   14000d713:	push   rax
   14000d714:	add    DWORD PTR [rsi+rax*1],edx
   14000d717:	add    BYTE PTR [rsp+rsi*1],dl
   14000d71a:	adc    eax,DWORD PTR [rax]
   14000d71c:	adc    al,0xd2
   14000d71e:	or     eax,0xb600c70
   14000d723:	push   rax
   14000d724:	add    DWORD PTR [rdx],ecx
   14000d726:	add    al,BYTE PTR [rax]
   14000d728:	or     dl,dl
   14000d72a:	(bad)  
   14000d72b:	xor    BYTE PTR [rcx],al
   14000d72d:	sbb    eax,DWORD PTR [rsi]
   14000d72f:	add    BYTE PTR [rbx],bl
   14000d731:	je     0x14000d746
   14000d733:	add    BYTE PTR [rbx],bl
   14000d735:	xor    al,0x12
   14000d737:	add    BYTE PTR [rbx],bl
   14000d739:	rcl    BYTE PTR [rax+rdx*2],cl
   14000d73c:	add    DWORD PTR [rax+rcx*1],edx
   14000d73f:	add    BYTE PTR [rsp+riz*2],dl
   14000d742:	or     BYTE PTR [rax],al
   14000d744:	adc    al,0x54
   14000d746:	(bad)  
   14000d747:	add    BYTE PTR [rsp+rsi*1],dl
   14000d74a:	(bad)  
   14000d74b:	add    BYTE PTR [rdx+rsi*1],dl
   14000d74e:	adc    BYTE PTR [rax+0x1],dh
   14000d751:	or     al,BYTE PTR [rdx]
   14000d753:	add    BYTE PTR [rdx],cl
   14000d755:	xor    al,BYTE PTR [rsi]
   14000d757:	xor    BYTE PTR [rcx],al
   14000d759:	sbb    BYTE PTR [rsi],al
   14000d75b:	add    BYTE PTR [rax],bl
   14000d75d:	fs (bad) 
   14000d75f:	add    BYTE PTR [rax],bl
   14000d761:	xor    al,0x6
   14000d763:	add    BYTE PTR [rax],bl
   14000d765:	xor    dl,BYTE PTR [rax+rsi*2]
   14000d768:	sbb    DWORD PTR [rcx+rcx*1],ebp
   14000d76b:	add    BYTE PTR [rbx],bl
   14000d76d:	xor    al,0x9e
   14000d76f:	add    BYTE PTR [rbx],bl
   14000d771:	add    DWORD PTR [rsi+0xaf00c00],edx
   14000d777:	loopne 0x14000d781
   14000d779:	jo     0x14000d782
   14000d77b:	(bad)  
   14000d77c:	(bad)  
   14000d77d:	push   rax
   14000d77e:	add    BYTE PTR [rax],al
   14000d780:	mov    eax,0xa00000b0
   14000d785:	add    al,0x0
   14000d787:	add    BYTE PTR [rcx],bl
   14000d789:	(bad)  
   14000d78a:	or     DWORD PTR [rax],eax
   14000d78c:	(bad)  
   14000d78d:	je     0x14000d768
   14000d78f:	add    BYTE PTR [rsi],bl
   14000d791:	fadd   DWORD PTR fs:[rax]
   14000d794:	(bad)  
   14000d795:	xor    al,0xd7
   14000d797:	add    BYTE PTR [rsi],bl
   14000d799:	add    esp,edx
   14000d79b:	add    BYTE PTR [rax],dl
   14000d79d:	push   rax
   14000d79e:	add    BYTE PTR [rax],al
   14000d7a0:	mov    eax,0x900000b0
   14000d7a5:	(bad)  
   14000d7a6:	add    BYTE PTR [rax],al
   14000d7a8:	sbb    DWORD PTR [rbx],ebp
   14000d7aa:	(bad)  
   14000d7ab:	add    BYTE PTR [rdx],bl
   14000d7ad:	je     0x14000d805
   14000d7af:	add    BYTE PTR [rdx],bl
   14000d7b1:	xor    al,0x55
   14000d7b3:	add    BYTE PTR [rdx],bl
   14000d7b5:	add    DWORD PTR [rdx+0x0],edx
   14000d7b8:	or     edx,DWORD PTR [rax+0x0]
   14000d7bb:	add    BYTE PTR [rax-0x7fffff50],bh
   14000d7c1:	add    al,BYTE PTR [rax]
   14000d7c3:	add    BYTE PTR [rcx],bl
   14000d7c5:	and    ecx,DWORD PTR [rax]
   14000d7c7:	add    BYTE PTR [rip+0x9001701],dl        # 0x14900eece
   14000d7cd:	lock (bad) 
   14000d7cf:	loopne 0x14000d7d6
   14000d7d1:	jo     0x14000d7d7
   14000d7d3:	(bad)  
   14000d7d4:	add    esi,DWORD PTR [rax]
   14000d7d6:	add    dl,BYTE PTR [rax-0x48]
   14000d7d9:	mov    al,0x0
   14000d7db:	add    BYTE PTR [rax+0x19000000],ch
   14000d7e1:	and    al,BYTE PTR [rdi]
   14000d7e3:	add    BYTE PTR [rsp+rsi*1],dl
   14000d7e6:	sbb    al,0x0
   14000d7e8:	adc    al,0x1
   14000d7ea:	(bad)  
   14000d7eb:	add    BYTE PTR [rax],cl
   14000d7ed:	jo     0x14000d7f6
   14000d7ef:	(bad)  
   14000d7f0:	(bad)  
   14000d7f1:	push   rax
   14000d7f2:	add    BYTE PTR [rax],al
   14000d7f4:	mov    eax,0xa00000b0
   14000d7f9:	add    BYTE PTR [rax],al
   14000d7fb:	add    BYTE PTR [rcx],al
   14000d7fd:	adc    BYTE PTR [rsi],al
   14000d7ff:	add    BYTE PTR [rax],dl
   14000d801:	xor    al,0x14
   14000d803:	add    BYTE PTR [rax],dl
   14000d805:	ror    BYTE PTR [rcx],cl
   14000d807:	loopne 0x14000d810
   14000d809:	jo     0x14000d811
   14000d80b:	push   rax
   14000d80c:	add    DWORD PTR [rdx],ecx
   14000d80e:	add    al,0x0
   14000d810:	or     dh,BYTE PTR [rax+rcx*1]
   14000d813:	add    BYTE PTR [rdx],cl
   14000d815:	push   rdx
   14000d816:	(bad)  
   14000d817:	jo     0x14000d81a
   14000d819:	sbb    DWORD PTR [rdx],ecx
   14000d81b:	add    BYTE PTR [rcx],bl
   14000d81d:	je     0x14000d828
   14000d81f:	add    BYTE PTR [rcx],bl
   14000d821:	or     BYTE PTR fs:[rax],al
   14000d824:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   14000d828:	sbb    DWORD PTR [rsi+rax*1],esi
   14000d82b:	add    BYTE PTR [rcx],bl
   14000d82d:	xor    dl,BYTE PTR [rip+0x60f01e0]        # 0x1460fda13
   14000d833:	add    BYTE PTR [rdi],cl
   14000d835:	or     DWORD PTR fs:[rax],eax
   14000d838:	sysenter 
   14000d83a:	or     BYTE PTR [rax],al
   14000d83c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14000d83f:	jo     0x14000d85a
   14000d841:	sub    cl,BYTE PTR [rbx]
   14000d843:	add    BYTE PTR [rsp+rsi*1],bl
   14000d846:	cmp    BYTE PTR [rax],al
   14000d848:	sbb    al,0x1
   14000d84a:	xor    BYTE PTR [rax],al
   14000d84c:	adc    al,dh
   14000d84e:	(bad)  
   14000d84f:	loopne 0x14000d85d
   14000d851:	ror    BYTE PTR [rdx],1
   14000d853:	ror    BYTE PTR [rax],0x70
   14000d856:	(bad)  
   14000d857:	(bad)  
   14000d858:	(bad)  
   14000d859:	push   rax
   14000d85a:	add    BYTE PTR [rax],al
   14000d85c:	mov    eax,0x700000b0
   14000d861:	add    DWORD PTR [rax],eax
   14000d863:	add    BYTE PTR [rcx],bl
   14000d865:	sub    BYTE PTR [rcx],cl
   14000d867:	add    BYTE PTR [rdx],bl
   14000d869:	and    al,BYTE PTR fs:[rax]
   14000d86c:	sbb    dh,BYTE PTR [rcx+riz*1]
   14000d86f:	add    BYTE PTR [rdx],bl
   14000d871:	add    DWORD PTR [rax+rax*1],ebx
   14000d874:	(bad)  
   14000d875:	loopne 0x14000d883
   14000d877:	jo     0x14000d884
   14000d879:	push   rax
   14000d87a:	add    BYTE PTR [rax],al
   14000d87c:	mov    eax,0xd00000b0
   14000d881:	add    BYTE PTR [rax],al
   14000d883:	add    BYTE PTR [rcx],al
   14000d885:	and    eax,0x3425000a
   14000d88a:	(bad)  
   14000d88b:	add    BYTE PTR [rip+0x1cf01eb2],ah        # 0x15cf0f743
   14000d891:	loopne 0x14000d8ad
   14000d893:	rcr    BYTE PTR [rax],1
   14000d895:	rcl    BYTE PTR [rsi],0x70
   14000d898:	adc    eax,0x1501460
   14000d89d:	adc    al,BYTE PTR [rsi]
   14000d89f:	add    BYTE PTR [rdx],dl
   14000d8a1:	ror    BYTE PTR [rbx],cl
   14000d8a3:	loopne 0x14000d8ae
   14000d8a5:	jo     0x14000d8af
   14000d8a7:	(bad)  
   14000d8a8:	(bad)  
   14000d8a9:	xor    BYTE PTR [rsi],al
   14000d8ab:	push   rax
   14000d8ac:	sbb    DWORD PTR [rbx],ebp
   14000d8ae:	(bad)  
   14000d8af:	add    BYTE PTR [rdx],bl
   14000d8b1:	je     0x14000d920
   14000d8b3:	add    BYTE PTR [rdx],bl
   14000d8b5:	xor    al,0x6c
   14000d8b7:	add    BYTE PTR [rdx],bl
   14000d8b9:	add    DWORD PTR [rdx+0x0],ebp
   14000d8bc:	or     edx,DWORD PTR [rax+0x0]
   14000d8bf:	add    BYTE PTR [rax+0x400000b0],bh
   14000d8c5:	add    eax,DWORD PTR [rax]
   14000d8c7:	add    BYTE PTR [rcx],al
   14000d8c9:	(bad)  
   14000d8ca:	or     BYTE PTR [rax],al
   14000d8cc:	(bad)  
   14000d8cd:	je     0x14000d8e0
   14000d8cf:	add    BYTE PTR [rdi],dl
   14000d8d1:	adc    BYTE PTR fs:[rax],al
   14000d8d4:	(bad)  
   14000d8d5:	xor    al,0xf
   14000d8d7:	add    BYTE PTR [rdi],dl
   14000d8d9:	mov    dl,0x10
   14000d8db:	push   rax
   14000d8dc:	add    DWORD PTR [rdx],edx
   14000d8de:	(bad)  
   14000d8df:	add    BYTE PTR [rdx],dl
   14000d8e1:	je     0x14000d8f3
   14000d8e3:	add    BYTE PTR [rdx],dl
   14000d8e5:	xor    al,0xe
   14000d8e7:	add    BYTE PTR [rdx],dl
   14000d8e9:	mov    dl,0xb
   14000d8eb:	push   rax
   14000d8ec:	add    DWORD PTR [rdi],ebx
   14000d8ee:	or     DWORD PTR [rax],eax
   14000d8f0:	(bad)  
   14000d8f1:	je     0x14000d90a
   14000d8f3:	add    BYTE PTR [rdi],bl
   14000d8f5:	fs adc eax,0x14341f00
   14000d8fb:	add    BYTE PTR [rdi],bl
   14000d8fd:	add    DWORD PTR [rdx],edx
   14000d8ff:	add    BYTE PTR [rax+rdx*2],dl
   14000d902:	add    BYTE PTR [rax],al
   14000d904:	sbb    DWORD PTR [rsi],esp
   14000d906:	or     DWORD PTR [rax],eax
   14000d908:	sbb    BYTE PTR [rax+riz*1],dh
   14000d90b:	add    BYTE PTR [rax],bl
   14000d90d:	add    DWORD PTR [rax],ebx
   14000d90f:	add    BYTE PTR [rax+riz*8],cl
   14000d912:	or     al,al
   14000d914:	or     BYTE PTR [rax+0x7],dh
   14000d917:	(bad)  
   14000d918:	(bad)  
   14000d919:	push   rax
   14000d91a:	add    BYTE PTR [rax],al
   14000d91c:	mov    eax,0xb00000b0
   14000d921:	add    BYTE PTR [rax],al
   14000d923:	add    BYTE PTR [rcx],al
   14000d925:	or     DWORD PTR [rdx],eax
   14000d927:	add    BYTE PTR [rcx],cl
   14000d929:	repnz add dh,BYTE PTR [rax]
   14000d92c:	add    DWORD PTR [rcx+rax*1],eax
   14000d92f:	add    BYTE PTR [rdx+rax*8],al
   14000d932:	add    BYTE PTR [rax],al
   14000d934:	add    DWORD PTR [rcx],ebx
   14000d936:	or     al,BYTE PTR [rax]
   14000d938:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   14000d93c:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   14000d940:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   14000d944:	sbb    DWORD PTR [rdx+rcx*1],esi
   14000d947:	add    BYTE PTR [rcx],bl
   14000d949:	jb     0x14000d960
   14000d94b:	loopne 0x14000d966
   14000d94d:	sbb    al,0x7
   14000d94f:	add    BYTE PTR [rip+0x7f009c2],cl        # 0x147f0e317
   14000d955:	loopne 0x14000d95c
   14000d957:	jo     0x14000d95d
   14000d959:	(bad)  
   14000d95a:	add    edx,DWORD PTR [rax+0x2]
   14000d95d:	xor    BYTE PTR [rax],al
   14000d95f:	add    BYTE PTR [rax+0x580000b0],bh
   14000d965:	add    BYTE PTR [rax],al
   14000d967:	add    BYTE PTR [rcx],al
   14000d969:	or     eax,DWORD PTR [rcx]
   14000d96b:	add    BYTE PTR [rbx],cl
   14000d96d:	(bad)  
   14000d96e:	add    BYTE PTR [rax],al
   14000d970:	sbb    DWORD PTR [rbx],ebp
   14000d972:	or     DWORD PTR [rax],eax
   14000d974:	sbb    al,BYTE PTR [rcx]
   14000d976:	or     al,0x1
   14000d978:	or     esi,eax
   14000d97a:	or     eax,esp
   14000d97c:	(bad)  
   14000d97d:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360ddf4
   14000d984:	add    dl,BYTE PTR [rax+0x0]
   14000d987:	add    BYTE PTR [rax+0x500000b0],bh
   14000d98d:	or     BYTE PTR [rax],al
   14000d98f:	add    BYTE PTR [rcx],bl
   14000d991:	sub    eax,0x11c000a
   14000d996:	test   eax,0xbf00d00
   14000d99b:	loopne 0x14000d9a6
   14000d99d:	rol    BYTE PTR [rdi],1
   14000d99f:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14360de16
   14000d9a6:	add    dl,BYTE PTR [rax-0x48]
   14000d9a9:	mov    al,0x0
   14000d9ab:	add    BYTE PTR [rax],dh
   14000d9ad:	add    eax,0x15010000
   14000d9b2:	(bad)  
   14000d9b3:	add    BYTE PTR [rip+0x15001574],dl        # 0x15500ef2d
   14000d9b9:	xor    al,0x12
   14000d9bb:	add    BYTE PTR [rip+0x1500bf2],dl        # 0x14150e5b3
   14000d9c1:	sbb    ecx,DWORD PTR [rcx]
   14000d9c3:	add    BYTE PTR [rbx],bl
   14000d9c5:	je     0x14000d9e0
   14000d9c7:	add    BYTE PTR [rbx],bl
   14000d9c9:	sbb    BYTE PTR fs:[rax],al
   14000d9cc:	sbb    esi,DWORD PTR [rdi+rdx*1]
   14000d9cf:	add    BYTE PTR [rbx],bl
   14000d9d1:	add    DWORD PTR [rax+rax*1],edx
   14000d9d4:	adc    BYTE PTR [rax+0x0],dl
   14000d9d7:	add    BYTE PTR [rcx],al
   14000d9d9:	sbb    cl,BYTE PTR [rcx]
   14000d9db:	add    BYTE PTR [rdx],bl
   14000d9dd:	add    DWORD PTR [rdx],edx
   14000d9df:	add    BYTE PTR [rsi],cl
   14000d9e1:	lock or al,0xe0
   14000d9e4:	or     al,al
   14000d9e6:	or     BYTE PTR [rax+0x7],dh
   14000d9e9:	(bad)  
   14000d9ea:	(bad)  
   14000d9eb:	xor    BYTE PTR [rip+0x1000050],al        # 0x14100da41
   14000d9f1:	and    ecx,DWORD PTR [rip+0x19d42300]        # 0x159d4fcf7
   14000d9f7:	add    BYTE PTR [rbx],ah
   14000d9f9:	je     0x14000da13
   14000d9fb:	add    BYTE PTR [rbx],ah
   14000d9fd:	fs (bad) 
   14000d9ff:	add    BYTE PTR [rbx],ah
   14000da01:	xor    al,0x16
   14000da03:	add    BYTE PTR [rbx],ah
   14000da05:	add    DWORD PTR [rdx],edx
   14000da07:	add    BYTE PTR [rax],bl
   14000da09:	lock (bad) 
   14000da0b:	loopne 0x14000da21
   14000da0d:	push   rax
   14000da0e:	add    BYTE PTR [rax],al
   14000da10:	add    DWORD PTR [rsi],ebx
   14000da12:	or     BYTE PTR [rax],al
   14000da14:	(bad)  
   14000da15:	repnz adc al,0xf0
   14000da18:	adc    ah,al
   14000da1a:	adc    al,al
   14000da1c:	(bad)  
   14000da1d:	jo     0x14000da2c
   14000da1f:	(bad)  
   14000da20:	or     al,0x30
   14000da22:	or     edx,DWORD PTR [rax+0x1]
   14000da25:	clts   
   14000da27:	add    BYTE PTR [rdi],cl
   14000da29:	adc    DWORD PTR fs:[rax],eax
   14000da2c:	sysenter 
   14000da2e:	adc    BYTE PTR [rax],al
   14000da30:	psrld  mm1,QWORD PTR [rbx]
   14000da33:	jo     0x14000da36
   14000da35:	or     al,0x6
   14000da37:	add    BYTE PTR [rcx+rax*1],cl
   14000da3a:	adc    DWORD PTR [rax],eax
   14000da3c:	add    eax,0x3600470
   14000da41:	push   rax
   14000da42:	add    dh,BYTE PTR [rax]
   14000da44:	add    DWORD PTR [rdx],edx
   14000da46:	add    al,0x0
   14000da48:	adc    dh,BYTE PTR [rdi+rcx*1]
   14000da4b:	add    BYTE PTR [rdx],dl
   14000da4d:	mov    dl,0xb
   14000da4f:	push   rax
   14000da50:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b415da5e
   14000da56:	or     BYTE PTR [rax],al
   14000da58:	adc    eax,0x15000764
   14000da5d:	xor    al,0x6
   14000da5f:	add    BYTE PTR [rip+0x19e01132],dl        # 0x159e0eb97
   14000da65:	or     DWORD PTR cs:[rax],eax
   14000da68:	sbb    eax,0x1d003c64
   14000da6d:	xor    al,0x3b
   14000da6f:	add    BYTE PTR [rip+0xe003601],bl        # 0x14e011076
   14000da75:	loopne 0x14000da83
   14000da77:	jo     0x14000da84
   14000da79:	push   rax
   14000da7a:	add    BYTE PTR [rax],al
   14000da7c:	mov    eax,0xa00000b0
   14000da81:	add    DWORD PTR [rax],eax
   14000da83:	add    BYTE PTR [rcx],al
   14000da85:	adc    cl,BYTE PTR [rax]
   14000da87:	add    BYTE PTR [rdx],dl
   14000da89:	xor    al,0xc
   14000da8b:	add    BYTE PTR [rdx],dl
   14000da8d:	xor    cl,BYTE PTR [rsi]
   14000da8f:	lock or al,0xe0
   14000da92:	or     dh,BYTE PTR [rax+0x9]
   14000da95:	(bad)  
   14000da96:	or     BYTE PTR [rax+0x1],dl
   14000da99:	sbb    eax,0x741d000c
   14000da9e:	or     eax,DWORD PTR [rax]
   14000daa0:	sbb    eax,0x1d000a64
   14000daa5:	push   rsp
   14000daa6:	or     DWORD PTR [rax],eax
   14000daa8:	sbb    eax,0x1d000834
   14000daad:	xor    bl,BYTE PTR [rcx]
   14000daaf:	lock (bad) 
   14000dab1:	loopne 0x14000dac8
   14000dab3:	rol    BYTE PTR [rcx],0x13
   14000dab6:	add    DWORD PTR [rax],eax
   14000dab8:	adc    eax,DWORD PTR [rdx+0x0]
   14000dabb:	add    BYTE PTR [rcx],al
   14000dabd:	sbb    al,0xc
   14000dabf:	add    BYTE PTR [rsp+riz*2],bl
   14000dac2:	or     al,0x0
   14000dac4:	sbb    al,0x54
   14000dac6:	or     eax,DWORD PTR [rax]
   14000dac8:	sbb    al,0x34
   14000daca:	or     al,BYTE PTR [rax]
   14000dacc:	sbb    al,0x32
   14000dace:	sbb    al,dh
   14000dad0:	(bad)  
   14000dad1:	loopne 0x14000dae7
   14000dad3:	rcl    BYTE PTR [rdx],1
   14000dad5:	rcl    BYTE PTR [rax],0x70
   14000dad8:	add    DWORD PTR [rdi],ecx
   14000dada:	add    al,0x0
   14000dadc:	sysenter 
   14000dade:	(bad)  
   14000dadf:	add    BYTE PTR [rdi],cl
   14000dae1:	xor    cl,BYTE PTR [rbx]
   14000dae3:	jo     0x14000dae6
   14000dae5:	or     DWORD PTR [rcx],eax
   14000dae7:	add    BYTE PTR [rcx],cl
   14000dae9:	rex.X add BYTE PTR [rax],al
   14000daec:	add    DWORD PTR [rdi],ecx
   14000daee:	(bad)  
   14000daef:	add    BYTE PTR [rdi],cl
   14000daf1:	fs (bad) 
   14000daf3:	add    BYTE PTR [rdi],cl
   14000daf5:	xor    al,0x6
   14000daf7:	add    BYTE PTR [rdi],cl
   14000daf9:	xor    cl,BYTE PTR [rbx]
   14000dafb:	jo     0x14000dafe
   14000dafd:	sbb    BYTE PTR [rdx],cl
   14000daff:	add    BYTE PTR [rax],bl
   14000db01:	adc    BYTE PTR fs:[rax],al
   14000db04:	sbb    BYTE PTR [rdi+rcx*1+0x0],dl
   14000db08:	sbb    BYTE PTR [rsi+rcx*1],dh
   14000db0b:	add    BYTE PTR [rax],bl
   14000db0d:	xchg   edx,eax
   14000db0e:	adc    al,0xf0
   14000db10:	adc    ah,al
   14000db12:	adc    BYTE PTR [rax+0x9],dh
   14000db15:	sbb    DWORD PTR [rdx],ecx
   14000db17:	add    BYTE PTR [rcx],bl
   14000db19:	(bad)  
   14000db1a:	or     eax,DWORD PTR [rax]
   14000db1c:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   14000db20:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   14000db24:	sbb    DWORD PTR [rax+rcx*1],esi
   14000db27:	add    BYTE PTR [rcx],bl
   14000db29:	push   rdx
   14000db2a:	adc    eax,0xaec6e0
   14000db2f:	add    BYTE PTR [rcx],al
   14000db31:	add    BYTE PTR [rax],al
   14000db33:	add    BYTE PTR [rcx-0x5ffff57],cl
   14000db39:	stos   BYTE PTR es:[rdi],al
   14000db3a:	add    BYTE PTR [rax],al
   14000db3c:	xchg   BYTE PTR [rcx-0x55060000],dh
   14000db42:	add    BYTE PTR [rax],al
   14000db44:	add    DWORD PTR [rsi],eax
   14000db46:	add    al,BYTE PTR [rax]
   14000db48:	(bad)  
   14000db49:	xor    al,BYTE PTR [rdx]
   14000db4b:	push   rax
   14000db4c:	add    BYTE PTR [rax],al
   14000db4e:	add    BYTE PTR [rax],al
   14000db50:	add    DWORD PTR [rax],eax
   14000db52:	add    BYTE PTR [rax],al
   14000db54:	add    DWORD PTR [rcx+rax*1],eax
   14000db57:	add    BYTE PTR [rdx+rax*2],al
   14000db5a:	add    BYTE PTR [rax],al
   14000db5c:	or     DWORD PTR [rcx+rax*1],eax
   14000db5f:	add    BYTE PTR [rdx+riz*1],al
   14000db62:	add    BYTE PTR [rax],al
   14000db64:	(bad)  
   14000db65:	scas   al,BYTE PTR es:[rdi]
   14000db66:	add    BYTE PTR [rax],al
   14000db68:	add    DWORD PTR [rax],eax
   14000db6a:	add    BYTE PTR [rax],al
   14000db6c:	rex.WR lods al,BYTE PTR ds:[rsi]
   14000db6e:	add    BYTE PTR [rax],al
   14000db70:	(bad)  
   14000db71:	lods   al,BYTE PTR ds:[rsi]
   14000db72:	add    BYTE PTR [rax],al
   14000db74:	add    DWORD PTR [rax],eax
   14000db76:	add    BYTE PTR [rax],al
   14000db78:	(bad)  
   14000db79:	lods   al,BYTE PTR ds:[rsi]
   14000db7a:	add    BYTE PTR [rax],al
   14000db7c:	or     DWORD PTR [rdx],ecx
   14000db7e:	add    al,0x0
   14000db80:	or     dh,BYTE PTR [rsi+rax*1]
   14000db83:	add    BYTE PTR [rdx],cl
   14000db85:	xor    al,BYTE PTR [rsi]
   14000db87:	jo     0x14000db4f
   14000db89:	scas   al,BYTE PTR es:[rdi]
   14000db8a:	add    BYTE PTR [rax],al
   14000db8c:	add    DWORD PTR [rax],eax
   14000db8e:	add    BYTE PTR [rax],al
   14000db90:	rex.WRB lods rax,QWORD PTR ds:[rsi]
   14000db92:	add    BYTE PTR [rax],al
   14000db94:	sub    BYTE PTR [rbp-0x4e500000],0x0
   14000db9b:	add    BYTE PTR [rax+0x10000ad],al
   14000dba1:	or     eax,0x340d0004
   14000dba6:	or     DWORD PTR [rax],eax
   14000dba8:	or     eax,0x1500632
   14000dbad:	(bad)  
   14000dbae:	add    al,BYTE PTR [rax]
   14000dbb0:	(bad)  
   14000dbb1:	xor    al,BYTE PTR [rdx]
   14000dbb3:	xor    BYTE PTR [rcx],al
   14000dbb5:	or     al,0x2
   14000dbb7:	add    BYTE PTR [rcx+rax*1],cl
   14000dbba:	adc    DWORD PTR [rax],eax
   14000dbbc:	add    BYTE PTR [rax],al
   14000dbbe:	add    BYTE PTR [rax],al
   14000dbc0:	add    DWORD PTR [rax],eax
   14000dbc2:	add    BYTE PTR [rax],al
   14000dbc4:	enter  0xdc,0x0
	...
   14000dbd0:	mov    esi,0xe0
   14000dbd5:	rol    BYTE PTR [rax],0x0
   14000dbd8:	(bad)  
   14000dbd9:	fld    QWORD PTR [rax]
	...
   14000dbe3:	add    BYTE PTR [rsi-0x67ffff1f],ah
   14000dbe9:	rol    BYTE PTR [rax],0x0
   14000dbec:	clc    
   14000dbed:	fiadd  WORD PTR [rax]
	...
   14000dbf7:	add    BYTE PTR [rsi+0x300000e2],cl
   14000dbfd:	ret    0x0
   14000dc00:	rcr    bh,0x0
	...
   14000dc0b:	add    BYTE PTR [rax],ah
   14000dc0d:	jrcxz  0x14000dc0f
   14000dc0f:	add    al,bh
   14000dc11:	ret    0x0
   14000dc14:	mov    dh,bl
	...
   14000dc1e:	add    BYTE PTR [rax],al
   14000dc20:	(bad)  
   14000dc21:	jrcxz  0x14000dc23
   14000dc23:	add    al,al
   14000dc25:	rol    DWORD PTR [rax],0x0
   14000dc28:	mov    al,0xde
	...
   14000dc32:	add    BYTE PTR [rax],al
   14000dc34:	mov    eax,0xe80000e3
   14000dc39:	rol    DWORD PTR [rax],0x0
   14000dc3c:	rcr    dh,0x0
	...
   14000dc47:	add    dl,bl
   14000dc49:	jrcxz  0x14000dc4b
   14000dc4b:	add    al,bh
   14000dc4d:	rol    DWORD PTR [rax],0x0
   14000dc50:	rcr    dh,1
	...
   14000dc5a:	add    BYTE PTR [rax],al
   14000dc5c:	in     al,dx
   14000dc5d:	in     al,0x0
   14000dc5f:	add    BYTE PTR [rax],cl
   14000dc61:	ret    0x0
   14000dc64:	sbb    al,ah
	...
   14000dc6e:	add    BYTE PTR [rax],al
   14000dc70:	jle    0x14000dc57
   14000dc72:	add    BYTE PTR [rax],al
   14000dc74:	push   rax
   14000dc75:	ret    
   14000dc76:	add    BYTE PTR [rax],al
   14000dc78:	js     0x14000dc58
	...
   14000dc82:	add    BYTE PTR [rax],al
   14000dc84:	sahf   
   14000dc85:	in     eax,0x0
   14000dc87:	add    BYTE PTR [rax+0x580000c1],dh
   14000dc8d:	fiadd  WORD PTR [rax]
	...
   14000dc97:	add    BYTE PTR [rdx-0x6fffff1b],ch
   14000dc9d:	rol    DWORD PTR [rax],0x0
   14000dca0:	loopne 0x14000dc80
	...
   14000dcaa:	add    BYTE PTR [rax],al
   14000dcac:	add    dh,ah
   14000dcae:	add    BYTE PTR [rax],al
   14000dcb0:	sbb    dl,al
	...
   14000dcc6:	add    BYTE PTR [rax],al
   14000dcc8:	pop    rax
   14000dcc9:	loopne 0x14000dccb
   14000dccb:	add    BYTE PTR [rax],al
   14000dccd:	add    BYTE PTR [rax],al
   14000dccf:	add    BYTE PTR [rax-0x20],ch
   14000dcd2:	add    BYTE PTR [rax],al
   14000dcd4:	add    BYTE PTR [rax],al
   14000dcd6:	add    BYTE PTR [rax],al
   14000dcd8:	js     0x14000dcba
   14000dcda:	add    BYTE PTR [rax],al
   14000dcdc:	add    BYTE PTR [rax],al
   14000dcde:	add    BYTE PTR [rax],al
   14000dce0:	xchg   al,ah
   14000dce2:	add    BYTE PTR [rax],al
   14000dce4:	add    BYTE PTR [rax],al
   14000dce6:	add    BYTE PTR [rax],al
   14000dce8:	int3   
   14000dce9:	in     al,0x0
   14000dceb:	add    BYTE PTR [rax],al
   14000dced:	add    BYTE PTR [rax],al
   14000dcef:	add    BYTE PTR [rsi+0xe4],bh
   14000dcf5:	add    BYTE PTR [rax],al
   14000dcf7:	add    BYTE PTR [rsi+0xe4],ch
   14000dcfd:	add    BYTE PTR [rax],al
   14000dcff:	add    BYTE PTR [rdx+0xe4],dl
   14000dd05:	add    BYTE PTR [rax],al
   14000dd07:	add    BYTE PTR [rsp+riz*8+0x0],dh
   14000dd0b:	add    BYTE PTR [rax],al
   14000dd0d:	add    BYTE PTR [rax],al
   14000dd0f:	add    BYTE PTR [rsi-0x1c],dl
   14000dd12:	add    BYTE PTR [rax],al
   14000dd14:	add    BYTE PTR [rax],al
   14000dd16:	add    BYTE PTR [rax],al
   14000dd18:	rex.X in al,0x0
   14000dd1b:	add    BYTE PTR [rax],al
   14000dd1d:	add    BYTE PTR [rax],al
   14000dd1f:	add    BYTE PTR [rdx],ah
   14000dd21:	in     al,0x0
   14000dd23:	add    BYTE PTR [rax],al
   14000dd25:	add    BYTE PTR [rax],al
   14000dd27:	add    BYTE PTR [rsp+riz*8],cl
   14000dd2a:	add    BYTE PTR [rax],al
   14000dd2c:	add    BYTE PTR [rax],al
   14000dd2e:	add    BYTE PTR [rax],al
   14000dd30:	cli    
   14000dd31:	jrcxz  0x14000dd33
   14000dd33:	add    BYTE PTR [rax],al
   14000dd35:	add    BYTE PTR [rax],al
   14000dd37:	add    dh,ah
   14000dd39:	jrcxz  0x14000dd3b
   14000dd3b:	add    BYTE PTR [rax],al
   14000dd3d:	add    BYTE PTR [rax],al
   14000dd3f:	add    BYTE PTR [rsi],bl
   14000dd41:	call   0x14000dd46
   14000dd46:	add    BYTE PTR [rax],al
   14000dd48:	ss call 0x14000dd4e
   14000dd4e:	add    BYTE PTR [rax],al
   14000dd50:	rex.RX call 0x14000dd56
	...
   14000dd5e:	add    BYTE PTR [rax],al
   14000dd60:	js     0x14000dd49
   14000dd62:	add    BYTE PTR [rax],al
   14000dd64:	add    BYTE PTR [rax],al
   14000dd66:	add    BYTE PTR [rax],al
   14000dd68:	pop    rdx
   14000dd69:	out    0x0,eax
   14000dd6b:	add    BYTE PTR [rax],al
   14000dd6d:	add    BYTE PTR [rax],al
   14000dd6f:	add    BYTE PTR [rax-0x19],cl
   14000dd72:	add    BYTE PTR [rax],al
   14000dd74:	add    BYTE PTR [rax],al
   14000dd76:	add    BYTE PTR [rax],al
   14000dd78:	cmp    ah,bh
   14000dd7a:	add    BYTE PTR [rax],al
   14000dd7c:	add    BYTE PTR [rax],al
   14000dd7e:	add    BYTE PTR [rax],al
   14000dd80:	(bad)  
   14000dd81:	out    0x0,eax
   14000dd83:	add    BYTE PTR [rax],al
   14000dd85:	add    BYTE PTR [rax],al
   14000dd87:	add    dl,bh
   14000dd89:	out    0x0,al
   14000dd8b:	add    BYTE PTR [rax],al
   14000dd8d:	add    BYTE PTR [rax],al
   14000dd8f:	add    ah,ah
   14000dd91:	out    0x0,al
   14000dd93:	add    BYTE PTR [rax],al
   14000dd95:	add    BYTE PTR [rax],al
   14000dd97:	add    dl,dl
   14000dd99:	out    0x0,al
   14000dd9b:	add    BYTE PTR [rax],al
   14000dd9d:	add    BYTE PTR [rax],al
   14000dd9f:	add    ah,al
   14000dda1:	out    0x0,al
   14000dda3:	add    BYTE PTR [rax],al
   14000dda5:	add    BYTE PTR [rax],al
   14000dda7:	add    BYTE PTR [rax+0xe6],dh
   14000ddad:	add    BYTE PTR [rax],al
   14000ddaf:	add    BYTE PTR [rsi+riz*8+0x0],bl
   14000ddb6:	add    BYTE PTR [rax],al
   14000ddb8:	xchg   edx,eax
   14000ddb9:	loope  0x14000ddbb
   14000ddbb:	add    BYTE PTR [rax],al
   14000ddbd:	add    BYTE PTR [rax],al
   14000ddbf:	add    BYTE PTR [rcx+riz*8+0x0],al
   14000ddc6:	add    BYTE PTR [rax],al
   14000ddc8:	outs   dx,BYTE PTR ds:[rsi]
   14000ddc9:	loope  0x14000ddcb
   14000ddcb:	add    BYTE PTR [rax],al
   14000ddcd:	add    BYTE PTR [rax],al
   14000ddcf:	add    BYTE PTR [rsi-0x1f],ah
   14000ddd2:	add    BYTE PTR [rax],al
   14000ddd4:	add    BYTE PTR [rax],al
   14000ddd6:	add    BYTE PTR [rax],al
   14000ddd8:	push   rsp
   14000ddd9:	loope  0x14000dddb
   14000dddb:	add    BYTE PTR [rax],al
   14000dddd:	add    BYTE PTR [rax],al
   14000dddf:	add    BYTE PTR [rax-0x1f],cl
   14000dde2:	add    BYTE PTR [rax],al
   14000dde4:	add    BYTE PTR [rax],al
   14000dde6:	add    BYTE PTR [rax],al
   14000dde8:	ss loope 0x14000ddeb
   14000ddeb:	add    BYTE PTR [rax],al
   14000dded:	add    BYTE PTR [rax],al
   14000ddef:	add    BYTE PTR [rax],ah
   14000ddf1:	loope  0x14000ddf3
   14000ddf3:	add    BYTE PTR [rax],al
   14000ddf5:	add    BYTE PTR [rax],al
   14000ddf7:	add    BYTE PTR [rax],dl
   14000ddf9:	loope  0x14000ddfb
   14000ddfb:	add    BYTE PTR [rax],al
   14000ddfd:	add    BYTE PTR [rax],al
   14000ddff:	add    ah,bh
   14000de01:	loopne 0x14000de03
   14000de03:	add    BYTE PTR [rax],al
   14000de05:	add    BYTE PTR [rax],al
   14000de07:	add    dl,ah
   14000de09:	loopne 0x14000de0b
   14000de0b:	add    BYTE PTR [rax],al
   14000de0d:	add    BYTE PTR [rax],al
   14000de0f:	add    ah,cl
   14000de11:	loopne 0x14000de13
   14000de13:	add    BYTE PTR [rax],al
   14000de15:	add    BYTE PTR [rax],al
   14000de17:	add    BYTE PTR [rax+0xe6],al
   14000de1d:	add    BYTE PTR [rax],al
   14000de1f:	add    BYTE PTR [rax-0x1a],dh
   14000de22:	add    BYTE PTR [rax],al
   14000de24:	add    BYTE PTR [rax],al
   14000de26:	add    BYTE PTR [rax],al
   14000de28:	pop    rdx
   14000de29:	out    0x0,al
   14000de2b:	add    BYTE PTR [rax],al
   14000de2d:	add    BYTE PTR [rax],al
   14000de2f:	add    BYTE PTR [rsi+riz*8+0x0],al
   14000de33:	add    BYTE PTR [rax],al
   14000de35:	add    BYTE PTR [rax],al
   14000de37:	add    BYTE PTR [rdx],ch
   14000de39:	out    0x0,al
   14000de3b:	add    BYTE PTR [rax],al
   14000de3d:	add    BYTE PTR [rax],al
   14000de3f:	add    BYTE PTR [rsi+riz*8],cl
   14000de42:	add    BYTE PTR [rax],al
   14000de44:	add    BYTE PTR [rax],al
   14000de46:	add    BYTE PTR [rax],al
   14000de48:	push   0xffffffffffffffe7
	...
   14000de56:	add    BYTE PTR [rax],al
   14000de58:	add    al,BYTE PTR [rax]
   14000de5a:	add    BYTE PTR [rax],al
   14000de5c:	add    BYTE PTR [rax],al
   14000de5e:	add    BYTE PTR [rax+0x7],al
   14000de64:	add    BYTE PTR [rax],al
   14000de66:	add    BYTE PTR [rax+0x6],al
   14000de6c:	add    BYTE PTR [rax],al
   14000de6e:	add    BYTE PTR [rax+0x0],al
   14000de74:	add    BYTE PTR [rax],al
   14000de76:	add    BYTE PTR [rax],al
   14000de78:	mov    ch,ah
	...
   14000de86:	add    BYTE PTR [rax],al
   14000de88:	fs jrcxz 0x14000de8b
   14000de8b:	add    BYTE PTR [rax],al
   14000de8d:	add    BYTE PTR [rax],al
   14000de8f:	add    BYTE PTR [rdx-0x1d],al
   14000de92:	add    BYTE PTR [rax],al
   14000de94:	add    BYTE PTR [rax],al
   14000de96:	add    BYTE PTR [rax],al
   14000de98:	sub    ah,bl
   14000de9a:	add    BYTE PTR [rax],al
   14000de9c:	add    BYTE PTR [rax],al
   14000de9e:	add    BYTE PTR [rax],al
   14000dea0:	(bad)  
   14000dea1:	jrcxz  0x14000dea3
	...
   14000deaf:	add    BYTE PTR [rdx+0xe3],ah
	...
   14000debd:	add    BYTE PTR [rax],al
   14000debf:	add    dh,al
   14000dec1:	jrcxz  0x14000dec3
	...
   14000decf:	add    dh,bl
   14000ded1:	in     al,0x0
	...
   14000dedf:	add    BYTE PTR [rax+0xe5],bh
   14000dee5:	add    BYTE PTR [rax],al
   14000dee7:	add    ah,bl
   14000dee9:	in     eax,0x0
	...
   14000def7:	add    al,dl
   14000def9:	loope  0x14000defb
   14000defb:	add    BYTE PTR [rax],al
   14000defd:	add    BYTE PTR [rax],al
   14000deff:	add    dl,bl
   14000df01:	loope  0x14000df03
   14000df03:	add    BYTE PTR [rax],al
   14000df05:	add    BYTE PTR [rax],al
   14000df07:	add    al,cl
   14000df09:	loope  0x14000df0b
   14000df0b:	add    BYTE PTR [rax],al
   14000df0d:	add    BYTE PTR [rax],al
   14000df0f:	add    ah,dh
   14000df11:	loope  0x14000df13
   14000df13:	add    BYTE PTR [rax],al
   14000df15:	add    BYTE PTR [rax],al
   14000df17:	add    BYTE PTR [rdx],al
   14000df19:	loop   0x14000df1b
   14000df1b:	add    BYTE PTR [rax],al
   14000df1d:	add    BYTE PTR [rax],al
   14000df1f:	add    BYTE PTR [rdx+riz*8],dl
   14000df22:	add    BYTE PTR [rax],al
   14000df24:	add    BYTE PTR [rax],al
   14000df26:	add    BYTE PTR [rax],al
   14000df28:	es loop 0x14000df2b
   14000df2b:	add    BYTE PTR [rax],al
   14000df2d:	add    BYTE PTR [rax],al
   14000df2f:	add    BYTE PTR [rsi],ch
   14000df31:	loop   0x14000df33
   14000df33:	add    BYTE PTR [rax],al
   14000df35:	add    BYTE PTR [rax],al
   14000df37:	add    BYTE PTR [rsi],dh
   14000df39:	loop   0x14000df3b
   14000df3b:	add    BYTE PTR [rax],al
   14000df3d:	add    BYTE PTR [rax],al
   14000df3f:	add    BYTE PTR [rax-0x1e],al
   14000df42:	add    BYTE PTR [rax],al
   14000df44:	add    BYTE PTR [rax],al
   14000df46:	add    BYTE PTR [rax],al
   14000df48:	push   rsp
   14000df49:	loop   0x14000df4b
   14000df4b:	add    BYTE PTR [rax],al
   14000df4d:	add    BYTE PTR [rax],al
   14000df4f:	add    BYTE PTR [rax-0x1e],ah
   14000df52:	add    BYTE PTR [rax],al
   14000df54:	add    BYTE PTR [rax],al
   14000df56:	add    BYTE PTR [rax],al
   14000df58:	js     0x14000df3c
   14000df5a:	add    BYTE PTR [rax],al
   14000df5c:	add    BYTE PTR [rax],al
   14000df5e:	add    BYTE PTR [rax],al
   14000df60:	(bad)  
   14000df61:	loop   0x14000df63
   14000df63:	add    BYTE PTR [rax],al
   14000df65:	add    BYTE PTR [rax],al
   14000df67:	add    BYTE PTR [rdx+0xe2],bl
   14000df6d:	add    BYTE PTR [rax],al
   14000df6f:	add    al,al
   14000df71:	loope  0x14000df73
   14000df73:	add    BYTE PTR [rax],al
   14000df75:	add    BYTE PTR [rax],al
   14000df77:	add    BYTE PTR [rcx+riz*8+0x0],dh
   14000df7e:	add    BYTE PTR [rax],al
   14000df80:	sahf   
   14000df81:	out    0x0,eax
   14000df83:	add    BYTE PTR [rax],al
   14000df85:	add    BYTE PTR [rax],al
   14000df87:	add    BYTE PTR [rax+0xe7],dl
   14000df8d:	add    BYTE PTR [rax],al
   14000df8f:	add    dh,ah
   14000df91:	loope  0x14000df93
   14000df93:	add    BYTE PTR [rax],al
   14000df95:	add    BYTE PTR [rax],al
   14000df97:	add    BYTE PTR [rdx-0x18],dh
   14000df9a:	add    BYTE PTR [rax],al
   14000df9c:	add    BYTE PTR [rax],al
   14000df9e:	add    BYTE PTR [rax],al
   14000dfa0:	push   0xe8
   14000dfa5:	add    BYTE PTR [rax],al
   14000dfa7:	add    BYTE PTR [rdi+riz*8+0x0],al
   14000dfae:	add    BYTE PTR [rax],al
   14000dfb0:	pop    rsi
   14000dfb1:	call   0x14000dfb6
	...
   14000dfbe:	add    BYTE PTR [rax],al
   14000dfc0:	(bad)
   14000dfc4:	add    BYTE PTR [rax],al
   14000dfc6:	add    BYTE PTR [rax],al
   14000dfc8:	fsubrp st(2),st
   14000dfca:	add    BYTE PTR [rax],al
   14000dfcc:	add    BYTE PTR [rax],al
   14000dfce:	add    BYTE PTR [rax],al
   14000dfd0:	repnz loop 0x14000dfd3
   14000dfd3:	add    BYTE PTR [rax],al
   14000dfd5:	add    BYTE PTR [rax],al
   14000dfd7:	add    BYTE PTR [rbx+riz*8],cl
   14000dfda:	add    BYTE PTR [rax],al
   14000dfdc:	add    BYTE PTR [rax],al
   14000dfde:	add    BYTE PTR [rax],al
   14000dfe0:	lods   al,BYTE PTR ds:[rsi]
   14000dfe1:	out    0x0,eax
   14000dfe3:	add    BYTE PTR [rax],al
   14000dfe5:	add    BYTE PTR [rax],al
   14000dfe7:	add    BYTE PTR [rsi+0xe7],bh
   14000dfed:	add    BYTE PTR [rax],al
   14000dfef:	add    BYTE PTR [rsi],al
   14000dff1:	call   0x14000dff6
   14000dff6:	add    BYTE PTR [rax],al
   14000dff8:	(bad)  
   14000dff9:	out    0x0,eax
   14000dffb:	add    BYTE PTR [rax],al
   14000dffd:	add    BYTE PTR [rax],al
   14000dfff:	add    ah,ch
   14000e001:	out    0x0,eax
   14000e003:	add    BYTE PTR [rax],al
   14000e005:	add    BYTE PTR [rax],al
   14000e007:	add    BYTE PTR [rsi+0xe2],ch
	...
   14000e015:	add    BYTE PTR [rax],al
   14000e017:	add    al,bh
   14000e019:	in     al,0x0
   14000e01b:	add    BYTE PTR [rax],al
   14000e01d:	add    BYTE PTR [rax],al
   14000e01f:	add    BYTE PTR [rax],cl
   14000e021:	in     eax,0x0
   14000e023:	add    BYTE PTR [rax],al
   14000e025:	add    BYTE PTR [rax],al
   14000e027:	add    BYTE PTR [riz*8+0x0],bl
   14000e02e:	add    BYTE PTR [rax],al
   14000e030:	cs in  eax,0x0
   14000e033:	add    BYTE PTR [rax],al
   14000e035:	add    BYTE PTR [rax],al
   14000e037:	add    BYTE PTR [rax-0x1b],al
   14000e03a:	add    BYTE PTR [rax],al
   14000e03c:	add    BYTE PTR [rax],al
   14000e03e:	add    BYTE PTR [rax],al
   14000e040:	push   rdx
   14000e041:	in     eax,0x0
   14000e043:	add    BYTE PTR [rax],al
   14000e045:	add    BYTE PTR [rax],al
   14000e047:	add    BYTE PTR [rsi-0x1b],ah
	...
   14000e056:	add    BYTE PTR [rax],al
   14000e058:	and    BYTE PTR [rbx],al
   14000e05a:	push   rsp
   14000e05b:	jb     0x14000e0be
   14000e05d:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000e060:	gs jae 0x14000e0d6
   14000e063:	(bad)  
   14000e064:	add    BYTE PTR gs:[eax],al
   14000e068:	xchg   BYTE PTR [rdx],al
   14000e06a:	push   rdx
   14000e06b:	gs addr32 rex.WRXB jo 0x14000e0d5
   14000e070:	outs   dx,BYTE PTR ds:[rsi]
   14000e071:	rex.WXB
   14000e072:	gs jns 0x14000e0ba
   14000e075:	js     0x14000e0ce
   14000e077:	add    BYTE PTR [rbp+0x2],dl
   14000e07a:	push   rdx
   14000e07b:	gs rex.XB ins BYTE PTR es:[edi],dx
   14000e07f:	outs   dx,DWORD PTR ds:[rsi]
   14000e080:	jae    0x14000e0e7
   14000e082:	rex.WXB
   14000e083:	gs jns 0x14000e086
   14000e086:	add    DWORD PTR [rax],0x766e6f43
   14000e08c:	gs jb  0x14000e103
   14000e08f:	push   rbx
   14000e090:	je     0x14000e104
   14000e092:	imul   ebp,DWORD PTR [rsi+0x67],0x75636553
   14000e099:	jb     0x14000e104
   14000e09b:	je     0x14000e116
   14000e09d:	rex.R
   14000e09e:	gs jae 0x14000e104
   14000e0a1:	jb     0x14000e10c
   14000e0a3:	jo     0x14000e119
   14000e0a5:	outs   dx,DWORD PTR ds:[rsi]
   14000e0a6:	jb     0x14000e0fc
   14000e0a8:	outs   dx,DWORD PTR ds:[rsi]
   14000e0a9:	push   rbx
   14000e0aa:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e0ae:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000e0b6:	imul   esi,DWORD PTR [rax+0x74],0x57726f
   14000e0bd:	add    BYTE PTR [rcx+0x44],al
   14000e0c0:	push   rsi
   14000e0c1:	push   r8
   14000e0c3:	xor    rsi,QWORD PTR [r10]
   14000e0c6:	cs fs ins BYTE PTR es:[rdi],dx
   14000e0c9:	ins    BYTE PTR es:[rdi],dx
   14000e0ca:	add    BYTE PTR [rax],al
   14000e0cc:	and    al,BYTE PTR [rdx]
   14000e0ce:	rex.RXB
   14000e0cf:	gs je  0x14000e116
   14000e0d2:	imul   esi,DWORD PTR [rbx+0x6b],0x65657246
   14000e0d9:	push   rbx
   14000e0da:	jo     0x14000e13d
   14000e0dc:	movsxd esp,DWORD PTR [rbp+0x45]
   14000e0df:	js     0x14000e138
   14000e0e1:	add    al,ah
   14000e0e3:	add    al,BYTE PTR [rdi+0x65]
   14000e0e6:	je     0x14000e13b
   14000e0e8:	jns    0x14000e15d
   14000e0ea:	je     0x14000e151
   14000e0ec:	ins    DWORD PTR es:[rdi],dx
   14000e0ed:	push   rsp
   14000e0ee:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14000e0f5:	ins    BYTE PTR es:[rdi],dx
   14000e0f6:	gs push rsp
   14000e0f8:	imul   ebp,DWORD PTR [rbp+0x65],0x47026e00
   14000e0ff:	gs je  0x14000e14f
   14000e102:	outs   dx,DWORD PTR ds:[rsi]
   14000e103:	fs jne 0x14000e172
   14000e106:	gs rex.W (bad) 
   14000e109:	outs   dx,BYTE PTR ds:[rsi]
   14000e10a:	fs ins BYTE PTR es:[rdi],dx
   14000e10c:	gs push rdi
   14000e10e:	add    BYTE PTR [rax],al
   14000e110:	push   rdi
   14000e111:	add    al,BYTE PTR [rdi+0x65]
   14000e114:	je     0x14000e162
   14000e116:	(bad)  
   14000e117:	jae    0x14000e18d
   14000e119:	rex.RB jb 0x14000e18e
   14000e11c:	outs   dx,DWORD PTR ds:[rsi]
   14000e11d:	jb     0x14000e11f
   14000e11f:	add    BYTE PTR [rbx+rax*1+0x48],al
   14000e123:	gs (bad) 
   14000e125:	jo     0x14000e17a
   14000e127:	gs je  0x14000e173
   14000e12a:	outs   dx,BYTE PTR ds:[rsi]
   14000e12b:	outs   dx,WORD PTR ds:[rsi]
   14000e12d:	jb     0x14000e19c
   14000e12f:	(bad)  
   14000e130:	je     0x14000e19b
   14000e132:	outs   dx,DWORD PTR ds:[rsi]
   14000e133:	outs   dx,BYTE PTR ds:[rsi]
   14000e134:	add    BYTE PTR [rax],al
   14000e136:	rol    BYTE PTR [rcx],1
   14000e138:	rex.RXB
   14000e139:	gs je  0x14000e17f
   14000e13c:	outs   dx,DWORD PTR ds:[rsi]
   14000e13d:	ins    DWORD PTR es:[rdi],dx
   14000e13e:	ins    DWORD PTR es:[rdi],dx
   14000e13f:	(bad)  
   14000e140:	outs   dx,BYTE PTR ds:[rsi]
   14000e141:	imul   r13,QWORD PTR fs:[rsi+0x65],0x3b90057
   14000e14a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000e14c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000e14f:	rex.RX jb 0x14000e1b7
   14000e152:	gs add dh,bh
   14000e155:	add    al,BYTE PTR [rdi+0x65]
   14000e158:	je     0x14000e1ae
   14000e15a:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000e161:	je     0x14000e199
   14000e163:	xor    al,0x0
   14000e165:	add    BYTE PTR [rbp+0x5],ch
   14000e168:	push   rbx
   14000e169:	ins    BYTE PTR es:[rdi],dx
   14000e16a:	gs gs jo 0x14000e16e
   14000e16e:	cmp    eax,0x74654702
   14000e173:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x69727474
   14000e17c:	(bad)  
   14000e17d:	jne    0x14000e1f3
   14000e17f:	gs jae 0x14000e1d9
   14000e182:	add    BYTE PTR [rax],al
   14000e184:	or     al,BYTE PTR [rcx]
   14000e186:	rex.R
   14000e187:	gs ins BYTE PTR es:[rdi],dx
   14000e189:	gs je  0x14000e1f1
   14000e18c:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4300b000
   14000e195:	jb     0x14000e1fc
   14000e197:	(bad)  
   14000e198:	je     0x14000e1ff
   14000e19a:	imul   r14d,DWORD PTR [rdx+0x65],0x726f7463
   14000e1a2:	jns    0x14000e1fb
   14000e1a4:	add    BYTE PTR [rax],al
   14000e1a6:	rex.WXB
   14000e1a7:	rex.RB push r10
   14000e1a9:	rex.WRX
   14000e1aa:	rex.RB
   14000e1ab:	xor    r14,QWORD PTR [rdx]
   14000e1ae:	cs fs ins BYTE PTR es:[rdi],dx
   14000e1b1:	ins    BYTE PTR es:[rdi],dx
   14000e1b2:	add    BYTE PTR [rax],al
   14000e1b4:	xchg   esp,eax
   14000e1b5:	add    ebx,DWORD PTR [rdi+0x77]
   14000e1b8:	movsxd esi,DWORD PTR [rbx+0x6e]
   14000e1bb:	imul   esp,DWORD PTR [rbx+0x6d],0x4090070
   14000e1c2:	pop    rdi
   14000e1c3:	ja     0x14000e239
   14000e1c5:	outs   dx,DWORD PTR ds:[rsi]
   14000e1c6:	ins    BYTE PTR es:[rdi],dx
   14000e1c7:	add    BYTE PTR [rsp+rax*1+0x66],cl
   14000e1cb:	jb     0x14000e232
   14000e1cd:	add    BYTE PTR gs:[rax],al
   14000e1d0:	xchg   BYTE PTR [rbp*2+0x6f6c6c61],al
   14000e1d7:	movsxd eax,DWORD PTR [rax]
   14000e1d9:	add    BYTE PTR [rdi+0x61635f00],bh
   14000e1df:	ins    BYTE PTR es:[rdi],dx
   14000e1e0:	ins    BYTE PTR es:[rdi],dx
   14000e1e1:	outs   dx,BYTE PTR ds:[rsi]
   14000e1e2:	gs ja  0x14000e24d
   14000e1e5:	add    BYTE PTR [rbp+0x0],dl
   14000e1e8:	pop    rdi
   14000e1e9:	pop    rax
   14000e1ea:	movsxd esi,DWORD PTR [rax+0x74]
   14000e1ed:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   14000e1f6:	pop    rdi
   14000e1f7:	(bad)  
   14000e1f8:	ins    DWORD PTR es:[rdi],dx
   14000e1f9:	jae    0x14000e262
   14000e1fb:	pop    rdi
   14000e1fc:	gs js  0x14000e268
   14000e1ff:	je     0x14000e201
   14000e201:	add    BYTE PTR [rbp+0x775f5f00],bl
   14000e207:	addr32 gs je 0x14000e278
   14000e20b:	(bad)  
   14000e20c:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   14000e213:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000e219:	gs je  0x14000e27b
   14000e21c:	(bad)  
   14000e21d:	jo     0x14000e28f
   14000e21f:	pop    rdi
   14000e220:	je     0x14000e29b
   14000e222:	jo     0x14000e289
   14000e224:	add    BYTE PTR [rax],al
   14000e226:	xor    al,BYTE PTR [riz*2+0x746978]
   14000e22d:	add    BYTE PTR [rsi],cl
   14000e22f:	add    DWORD PTR [rdi+0x65],ebx
   14000e232:	js     0x14000e29d
   14000e234:	je     0x14000e236
   14000e236:	rol    DWORD PTR [rax],0x5f
   14000e239:	movsxd esp,DWORD PTR [rbp+0x78]
   14000e23c:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   14000e244:	jae    0x14000e2ab
   14000e246:	je     0x14000e2bd
   14000e248:	jae    0x14000e2af
   14000e24a:	jb     0x14000e2b9
   14000e24c:	(bad)  
   14000e24d:	je     0x14000e2b7
   14000e24f:	gs jb  0x14000e2c4
   14000e252:	add    BYTE PTR [rax],al
   14000e254:	jge    0x14000e257
   14000e256:	pop    rdi
   14000e257:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   14000e25e:	ins    DWORD PTR es:[rdi],dx
   14000e25f:	add    BYTE PTR [rdi+0x0],dl
   14000e262:	pop    rdi
   14000e263:	pop    rdi
   14000e264:	rex.XB pop r15
   14000e266:	jae    0x14000e2d8
   14000e268:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000e26c:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   14000e273:	ins    BYTE PTR es:[rdi],dx
   14000e274:	gs jb  0x14000e277
   14000e277:	add    BYTE PTR [rdi],ah
   14000e279:	add    DWORD PTR [rdi+0x66],ebx
   14000e27c:	ins    DWORD PTR es:[rdi],dx
   14000e27d:	outs   dx,DWORD PTR ds:[rsi]
   14000e27e:	fs add BYTE PTR gs:[rax],al
   14000e282:	rol    BYTE PTR [rax],cl
   14000e284:	pop    rdi
   14000e285:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000e288:	ins    DWORD PTR es:[rdi],dx
   14000e289:	outs   dx,DWORD PTR ds:[rsi]
   14000e28a:	fs add BYTE PTR gs:[rax],al
   14000e28e:	ins    DWORD PTR es:[rdi],dx
   14000e28f:	jae    0x14000e307
   14000e291:	movsxd esi,DWORD PTR [rdx+0x74]
   14000e294:	cs fs ins BYTE PTR es:[rdi],dx
   14000e297:	ins    BYTE PTR es:[rdi],dx
   14000e298:	add    BYTE PTR [rax],al
   14000e29a:	(bad)  
   14000e29b:	add    BYTE PTR [rdi],bh
   14000e29d:	je     0x14000e304
   14000e29f:	jb     0x14000e30e
   14000e2a1:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   14000e2a8:	pop    rcx
   14000e2a9:	pop    r8
   14000e2ab:	pop    rax
   14000e2ac:	pop    rdx
   14000e2ad:	add    BYTE PTR [rcx],ah
   14000e2af:	(bad)  
   14000e2b0:	push   rdi
   14000e2b1:	imul   ebp,DWORD PTR [rsi+0x53],0x64416d71
   14000e2b8:	fs push rsp
   14000e2ba:	outs   dx,DWORD PTR ds:[rsi]
   14000e2bb:	push   rbx
   14000e2bc:	je     0x14000e330
   14000e2be:	gs (bad) 
   14000e2c0:	ins    DWORD PTR es:[rdi],dx
   14000e2c1:	rex.RB js 0x14000e2c4
   14000e2c4:	and    DWORD PTR [rdx],eax
   14000e2c6:	rex.WRX je 0x14000e31c
   14000e2c9:	gs je  0x14000e315
   14000e2cc:	outs   dx,BYTE PTR ds:[rsi]
   14000e2cd:	outs   dx,WORD PTR ds:[rsi]
   14000e2cf:	jb     0x14000e33e
   14000e2d1:	(bad)  
   14000e2d2:	je     0x14000e33d
   14000e2d4:	outs   dx,DWORD PTR ds:[rsi]
   14000e2d5:	outs   dx,BYTE PTR ds:[rsi]
   14000e2d6:	push   rax
   14000e2d7:	jb     0x14000e348
   14000e2d9:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e2dc:	jae    0x14000e2de
   14000e2de:	mov    BYTE PTR [rdx],0x52
   14000e2e1:	je     0x14000e34f
   14000e2e3:	rex.XB (bad) 
   14000e2e5:	jo     0x14000e35b
   14000e2e7:	jne    0x14000e35b
   14000e2e9:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14000e2ec:	outs   dx,BYTE PTR ds:[rsi]
   14000e2ed:	je     0x14000e354
   14000e2ef:	js     0x14000e365
   14000e2f1:	add    BYTE PTR [rdi+0x4],dh
   14000e2f4:	push   rdx
   14000e2f5:	je     0x14000e363
   14000e2f7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000e2f9:	outs   dx,DWORD PTR ds:[rsi]
   14000e2fa:	imul   esi,DWORD PTR [rbp+0x70],0x46
   14000e2fe:	jne    0x14000e36e
   14000e300:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000e304:	outs   dx,BYTE PTR ds:[rsi]
   14000e305:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14000e307:	je     0x14000e37b
   14000e309:	jns    0x14000e30b
   14000e30b:	add    BYTE PTR [rbx+0x6c745205],cl
   14000e311:	push   rsi
   14000e312:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   14000e319:	outs   dx,BYTE PTR ds:[rsi]
   14000e31a:	ja     0x14000e385
   14000e31c:	outs   dx,BYTE PTR ds:[rsi]
   14000e31d:	add    BYTE PTR fs:[rax],al
   14000e320:	outs   dx,BYTE PTR ds:[rsi]
   14000e321:	je     0x14000e387
   14000e323:	ins    BYTE PTR es:[rdi],dx
   14000e324:	ins    BYTE PTR es:[rdi],dx
   14000e325:	cs fs ins BYTE PTR es:[rdi],dx
   14000e328:	ins    BYTE PTR es:[rdi],dx
   14000e329:	add    BYTE PTR [rdi],al
   14000e32b:	add    BYTE PTR [rbx+0x70],dl
   14000e32e:	jo     0x14000e376
   14000e330:	jb     0x14000e397
   14000e332:	gs rex.RXB jb 0x14000e3a5
   14000e336:	jne    0x14000e3a8
   14000e338:	push   rax
   14000e339:	jb     0x14000e3aa
   14000e33b:	jo     0x14000e37e
   14000e33d:	jb     0x14000e3b1
   14000e33f:	(bad)  
   14000e340:	jns    0x14000e342
   14000e342:	or     eax,DWORD PTR [rax]
   14000e344:	push   rbx
   14000e345:	js     0x14000e39b
   14000e347:	jb     0x14000e3aa
   14000e349:	movsxd esp,DWORD PTR [rbp+0x72]
   14000e34c:	rex.RXB
   14000e34d:	gs je  0x14000e3a4
   14000e350:	push   0x64616572
   14000e355:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e357:	outs   dx,BYTE PTR ds:[rsi]
   14000e358:	je     0x14000e3bf
   14000e35a:	js     0x14000e3d0
   14000e35c:	push   rdx
   14000e35d:	gs je  0x14000e3c1
   14000e360:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x7853000c
   14000e368:	push   rsp
   14000e369:	jb     0x14000e3cc
   14000e36b:	movsxd esp,DWORD PTR [rbp+0x72]
   14000e36e:	push   rbx
   14000e36f:	push   0x646c756f
   14000e374:	push   rsp
   14000e375:	jb     0x14000e3d8
   14000e377:	movsxd ebp,DWORD PTR [rbx+0x46]
   14000e37a:	(bad)  
   14000e37b:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x9000065
   14000e383:	add    BYTE PTR [rbx+0x78],dl
   14000e386:	push   rsp
   14000e387:	jb     0x14000e3ea
   14000e389:	movsxd esp,DWORD PTR [rbp+0x72]
   14000e38c:	rex.R
   14000e38d:	gs (bad) 
   14000e38f:	jne    0x14000e3f8
   14000e391:	addr32 gs jb 0x14000e3d7
   14000e395:	jb     0x14000e3fc
   14000e397:	(bad)  
   14000e398:	imul   eax,DWORD PTR [rax],0x53
   14000e39b:	push   rax
   14000e39c:	push   rax
   14000e39d:	cs fs ins BYTE PTR es:[rdi],dx
   14000e3a0:	ins    BYTE PTR es:[rdi],dx
   14000e3a1:	add    BYTE PTR [rcx],cl
   14000e3a3:	add    BYTE PTR [rbx+0x52],dl
   14000e3a6:	push   rbx
   14000e3a7:	gs je  0x14000e3fc
   14000e3aa:	gs jae 0x14000e421
   14000e3ad:	outs   dx,DWORD PTR ds:[rsi]
   14000e3ae:	jb     0x14000e415
   14000e3b0:	push   rax
   14000e3b1:	outs   dx,DWORD PTR ds:[rsi]
   14000e3b2:	imul   ebp,DWORD PTR [rsi+0x74],0x53000057
   14000e3b9:	push   rdx
   14000e3ba:	rex.XB
   14000e3bb:	rex.WR
   14000e3bc:	rex.WB
   14000e3bd:	rex.RB
   14000e3be:	rex.WRX push rsp
   14000e3c0:	cs fs ins BYTE PTR es:[rdi],dx
   14000e3c3:	ins    BYTE PTR es:[rdi],dx
   14000e3c4:	add    BYTE PTR [rax],al
   14000e3c6:	(bad)  
   14000e3c7:	add    BYTE PTR [rbx+0x72],dl
   14000e3ca:	rex.RX jb 0x14000e432
   14000e3cd:	gs push rdx
   14000e3cf:	jo     0x14000e421
   14000e3d1:	jb     0x14000e442
   14000e3d3:	jo     0x14000e416
   14000e3d5:	jb     0x14000e449
   14000e3d7:	(bad)  
   14000e3d8:	jns    0x14000e3da
   14000e3da:	push   rbx
   14000e3db:	push   rdx
   14000e3dc:	rex.XB
   14000e3dd:	rex.WRXB push r10
   14000e3df:	rex.RB
   14000e3e0:	cs fs ins BYTE PTR es:[rdi],dx
   14000e3e3:	ins    BYTE PTR es:[rdi],dx
   14000e3e4:	add    BYTE PTR [rax],al
   14000e3e6:	xchg   ebx,eax
   14000e3e7:	add    dl,BYTE PTR [rdx+0x65]
   14000e3ea:	addr32 push rcx
   14000e3ec:	jne    0x14000e453
   14000e3ee:	jb     0x14000e469
   14000e3f0:	push   rsi
   14000e3f1:	(bad)  
   14000e3f2:	ins    BYTE PTR es:[rdi],dx
   14000e3f3:	jne    0x14000e45a
   14000e3f5:	rex.RB js 0x14000e44f
   14000e3f8:	add    BYTE PTR [rax],al
   14000e3fa:	movabs ds:0x5674655367655202,eax
   14000e403:	(bad)  
   14000e404:	ins    BYTE PTR es:[rdi],dx
   14000e405:	jne    0x14000e46c
   14000e407:	rex.RB js 0x14000e461
   14000e40a:	add    BYTE PTR [rax],al
   14000e40c:	xchg   edx,eax
   14000e40d:	add    BYTE PTR [rbx+0x72],al
   14000e410:	gs (bad) 
   14000e412:	je     0x14000e479
   14000e414:	push   rdi
   14000e415:	gs ins BYTE PTR es:[rdi],dx
   14000e417:	ins    BYTE PTR es:[rdi],dx
   14000e418:	rex.WXB outs dx,BYTE PTR ds:[rsi]
   14000e41a:	outs   dx,DWORD PTR ds:[rsi]
   14000e41b:	ja     0x14000e48b
   14000e41d:	push   rbx
   14000e41e:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x6e49018d
   14000e426:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000e42e:	push   rbx
   14000e42f:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e433:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000e43b:	imul   esi,DWORD PTR [rax+0x74],0x726f
   14000e442:	rol    BYTE PTR [rdx],1
   14000e444:	push   rbx
   14000e445:	gs je  0x14000e48d
   14000e448:	outs   dx,BYTE PTR ds:[rsi]
   14000e449:	je     0x14000e4bd
   14000e44b:	imul   esp,DWORD PTR [rbp+0x73],0x63416e49
   14000e452:	ins    BYTE PTR es:[rdi],dx
   14000e453:	push   rdi
   14000e454:	add    BYTE PTR [rax],al
   14000e456:	loop   0x14000e45a
   14000e458:	push   rbx
   14000e459:	gs je  0x14000e4af
   14000e45c:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e460:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000e468:	imul   esi,DWORD PTR [rax+0x74],0x774f726f
   14000e46f:	outs   dx,BYTE PTR ds:[rsi]
   14000e470:	gs jb  0x14000e473
   14000e473:	add    cl,ah
   14000e475:	add    dl,BYTE PTR [rbx+0x65]
   14000e478:	je     0x14000e4cd
   14000e47a:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e47e:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000e486:	imul   esi,DWORD PTR [rax+0x74],0x7247726f
   14000e48d:	outs   dx,DWORD PTR ds:[rsi]
   14000e48e:	jne    0x14000e500
   14000e490:	add    BYTE PTR [rax],al
   14000e492:	loopne 0x14000e496
   14000e494:	push   rbx
   14000e495:	gs je  0x14000e4eb
   14000e498:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e49c:	imul   esi,DWORD PTR [rcx+rdi*2+0x44],0x72637365
   14000e4a4:	imul   esi,DWORD PTR [rax+0x74],0x6144726f
   14000e4ab:	movsxd ebp,DWORD PTR [rax+rax*1+0x6e]
   14000e4af:	add    BYTE PTR [rbx+0x6f],al
   14000e4b2:	outs   dx,BYTE PTR ds:[rsi]
   14000e4b3:	je     0x14000e527
   14000e4b5:	outs   dx,DWORD PTR ds:[rsi]
   14000e4b6:	ins    BYTE PTR es:[rdi],dx
   14000e4b7:	push   rsp
   14000e4b8:	jb     0x14000e51b
   14000e4ba:	movsxd esp,DWORD PTR [rbp+0x57]
   14000e4bd:	add    ch,dh
   14000e4bf:	add    dl,BYTE PTR [rbx+0x74]
   14000e4c2:	(bad)  
   14000e4c3:	jb     0x14000e539
   14000e4c5:	push   rsp
   14000e4c6:	jb     0x14000e529
   14000e4c8:	movsxd esp,DWORD PTR [rbp+0x57]
   14000e4cb:	add    BYTE PTR [rdi],al
   14000e4cd:	add    DWORD PTR [rbp+0x6e],eax
   14000e4d0:	(bad)  
   14000e4d1:	(bad)  
   14000e4d2:	ins    BYTE PTR es:[rdi],dx
   14000e4d3:	gs push rsp
   14000e4d5:	jb     0x14000e538
   14000e4d7:	movsxd esp,DWORD PTR [rbp+0x45]
   14000e4da:	js     0x14000e50e
   14000e4dc:	add    BYTE PTR [rax],al
   14000e4de:	add    cl,BYTE PTR [r15+r13*2+0x61]
   14000e4e3:	fs push rbx
   14000e4e5:	je     0x14000e559
   14000e4e7:	imul   ebp,DWORD PTR [rsi+0x67],0x53550057
   14000e4ee:	rex.RB push r10
   14000e4f0:	xor    esi,DWORD PTR [rdx]
   14000e4f2:	cs fs ins BYTE PTR es:[rdi],dx
   14000e4f5:	ins    BYTE PTR es:[rdi],dx
   14000e4f6:	add    BYTE PTR [rax],al
   14000e4f8:	mov    WORD PTR [rax],es
   14000e4fa:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e4fc:	push   rsp
   14000e4fd:	(bad)  
   14000e4fe:	jae    0x14000e56b
   14000e500:	rex.WRB
   14000e501:	gs ins DWORD PTR es:[rdi],dx
   14000e503:	rex.RX jb 0x14000e56b
   14000e506:	add    BYTE PTR gs:[rbx],ch
   14000e509:	add    BYTE PTR [rbx+0x6f],al
   14000e50c:	rex.XB jb 0x14000e574
   14000e50f:	(bad)  
   14000e510:	je     0x14000e577
   14000e512:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e514:	jae    0x14000e58a
   14000e516:	(bad)  
   14000e517:	outs   dx,BYTE PTR ds:[rsi]
   14000e518:	movsxd esp,DWORD PTR [rbp+0x0]
   14000e51b:	add    BYTE PTR [rbx+0x546f4300],cl
   14000e521:	(bad)  
   14000e522:	jae    0x14000e58f
   14000e524:	rex.WRB
   14000e525:	gs ins DWORD PTR es:[rdi],dx
   14000e527:	rex.B ins BYTE PTR es:[rdi],dx
   14000e529:	ins    BYTE PTR es:[rdi],dx
   14000e52a:	outs   dx,DWORD PTR ds:[rsi]
   14000e52b:	movsxd eax,DWORD PTR [rax]
   14000e52d:	add    BYTE PTR [rcx+0x0],ah
   14000e530:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e532:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e534:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000e53c:	rex.RB js 0x14000e53f
   14000e53f:	add    BYTE PTR [rax+0x556f4300],dl
   14000e545:	outs   dx,BYTE PTR ds:[rsi]
   14000e546:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000e54d:	imul   edi,DWORD PTR [rdx+0x65],0x8d0000
   14000e554:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e556:	push   rsp
   14000e557:	(bad)  
   14000e558:	jae    0x14000e5c5
   14000e55a:	rex.WRB
   14000e55b:	gs ins DWORD PTR es:[rdi],dx
   14000e55d:	push   rdx
   14000e55e:	gs (bad) 
   14000e560:	ins    BYTE PTR es:[rdi],dx
   14000e561:	ins    BYTE PTR es:[rdi],dx
   14000e562:	outs   dx,DWORD PTR ds:[rsi]
   14000e563:	movsxd eax,DWORD PTR [rax]
   14000e565:	add    BYTE PTR [rdx+0x0],ah
   14000e568:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e56a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e56c:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000e574:	push   rbx
   14000e575:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14000e579:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x656c6f00
   14000e581:	xor    esi,DWORD PTR [rdx]
   14000e583:	cs fs ins BYTE PTR es:[rdi],dx
   14000e586:	ins    BYTE PTR es:[rdi],dx
   14000e587:	add    BYTE PTR [rdi],al
   14000e589:	add    BYTE PTR [rbx+0x6f],al
   14000e58c:	ins    DWORD PTR es:[rdi],dx
   14000e58d:	ins    DWORD PTR es:[rdi],dx
   14000e58e:	(bad)  
   14000e58f:	outs   dx,BYTE PTR ds:[rsi]
   14000e590:	imul   r13,QWORD PTR fs:[rsi+0x65],0x72416f54
   14000e599:	addr32 jbe 0x14000e5f3
   14000e59c:	add    BYTE PTR [rax],al
   14000e59e:	push   rbx
   14000e59f:	rex.W
   14000e5a0:	rex.RB
   14000e5a1:	rex.WR
   14000e5a2:	xor    r14,QWORD PTR [rdx]
   14000e5a5:	cs fs ins BYTE PTR es:[rdi],dx
   14000e5a8:	ins    BYTE PTR es:[rdi],dx
   14000e5a9:	add    BYTE PTR [rdi+0x4c],cl
   14000e5ac:	rex.RB
   14000e5ad:	push   r13
   14000e5af:	push   rsp
   14000e5b0:	xor    esi,DWORD PTR [rdx]
   14000e5b2:	cs fs ins BYTE PTR es:[rdi],dx
   14000e5b5:	ins    BYTE PTR es:[rdi],dx
   14000e5b6:	add    BYTE PTR [rax],al
   14000e5b8:	add    BYTE PTR [r11+0x72],r8b
   14000e5bc:	gs (bad) 
   14000e5be:	je     0x14000e625
   14000e5c0:	push   rsi
   14000e5c1:	jae    0x14000e636
   14000e5c3:	rex.X (bad) 
   14000e5c5:	movsxd ebp,DWORD PTR [rbx+0x75]
   14000e5c8:	jo     0x14000e60d
   14000e5ca:	outs   dx,DWORD PTR ds:[rsi]
   14000e5cb:	ins    DWORD PTR es:[rdi],dx
   14000e5cc:	jo     0x14000e63d
   14000e5ce:	outs   dx,BYTE PTR ds:[rsi]
   14000e5cf:	outs   dx,BYTE PTR gs:[rsi]
   14000e5d1:	je     0x14000e646
   14000e5d3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e5d5:	je     0x14000e63c
   14000e5d7:	jb     0x14000e647
   14000e5d9:	(bad)  
   14000e5da:	ins    BYTE PTR es:[rdi],dx
   14000e5db:	add    BYTE PTR [rbx+0x0],dl
   14000e5de:	push   rsi
   14000e5df:	jae    0x14000e654
   14000e5e1:	rex.RX jb 0x14000e649
   14000e5e4:	gs push rbx
   14000e5e6:	outs   dx,BYTE PTR ds:[rsi]
   14000e5e7:	(bad)  
   14000e5e8:	jo     0x14000e65d
   14000e5ea:	push   0x7250746f
   14000e5ef:	outs   dx,DWORD PTR ds:[rsi]
   14000e5f0:	jo     0x14000e657
   14000e5f2:	jb     0x14000e668
   14000e5f4:	imul   esp,DWORD PTR [rbp+0x73],0x65746e49
   14000e5fb:	jb     0x14000e66b
   14000e5fd:	(bad)  
   14000e5fe:	ins    BYTE PTR es:[rdi],dx
   14000e5ff:	add    BYTE PTR [rsi+0x53],dl
   14000e602:	push   rbx
   14000e603:	push   r8
   14000e605:	rex.WB
   14000e606:	cs rex.R
   14000e608:	rex.WR
   14000e609:	rex.WR add BYTE PTR [rax],r8b
   14000e60c:	pop    rsi
   14000e60d:	add    eax,0x55746553
   14000e612:	outs   dx,BYTE PTR ds:[rsi]
   14000e613:	push   0x6c646e61
   14000e618:	gs fs rex.RB js 0x14000e680
   14000e61d:	gs jo  0x14000e694
   14000e620:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000e627:	gs jb  0x14000e62a
   14000e62a:	ss add al,0x51
   14000e62d:	jne    0x14000e694
   14000e62f:	jb     0x14000e6aa
   14000e631:	push   rax
   14000e632:	gs jb  0x14000e69b
   14000e635:	outs   dx,DWORD PTR ds:[rsi]
   14000e636:	jb     0x14000e6a5
   14000e638:	(bad)  
   14000e639:	outs   dx,BYTE PTR ds:[rsi]
   14000e63a:	movsxd esp,DWORD PTR [rbp+0x43]
   14000e63d:	outs   dx,DWORD PTR ds:[rsi]
   14000e63e:	jne    0x14000e6ae
   14000e640:	je     0x14000e6a7
   14000e642:	jb     0x14000e644
   14000e644:	adc    DWORD PTR [rdx],eax
   14000e646:	rex.RXB
   14000e647:	gs je  0x14000e68d
   14000e64a:	jne    0x14000e6be
   14000e64c:	jb     0x14000e6b3
   14000e64e:	outs   dx,BYTE PTR ds:[rsi]
   14000e64f:	je     0x14000e6a1
   14000e651:	jb     0x14000e6c2
   14000e653:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e656:	jae    0x14000e6a1
   14000e658:	add    BYTE PTR fs:[rip+0x74654702],dl        # 0x1b4662d61
   14000e65f:	rex.XB jne 0x14000e6d4
   14000e662:	jb     0x14000e6c9
   14000e664:	outs   dx,BYTE PTR ds:[rsi]
   14000e665:	je     0x14000e6bb
   14000e667:	push   0x64616572
   14000e66c:	rex.WB
   14000e66d:	add    BYTE PTR fs:[rax],al
   14000e670:	std    
   14000e671:	add    al,BYTE PTR [rdi+0x65]
   14000e674:	je     0x14000e6ca
   14000e676:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14000e67d:	je     0x14000e67f
   14000e67f:	add    BYTE PTR [rsi+0x686e5505],bl
   14000e685:	(bad)  
   14000e686:	outs   dx,BYTE PTR ds:[rsi]
   14000e687:	fs ins BYTE PTR es:[rdi],dx
   14000e689:	gs fs rex.RB js 0x14000e6f1
   14000e68e:	gs jo  0x14000e705
   14000e691:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   14000e698:	gs jb  0x14000e69b
   14000e69b:	add    BYTE PTR [rax],dl
   14000e69d:	add    al,BYTE PTR [rdi+0x65]
   14000e6a0:	je     0x14000e6e5
   14000e6a2:	jne    0x14000e716
   14000e6a4:	jb     0x14000e70b
   14000e6a6:	outs   dx,BYTE PTR ds:[rsi]
   14000e6a7:	je     0x14000e6f9
   14000e6a9:	jb     0x14000e71a
   14000e6ab:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e6ae:	jae    0x14000e6b0
   14000e6b0:	jl     0x14000e6b7
   14000e6b2:	push   rsp
   14000e6b3:	gs jb  0x14000e723
   14000e6b6:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14000e6bd:	outs   dx,DWORD PTR ds:[rsi]
   14000e6be:	movsxd esp,DWORD PTR [rbp+0x73]
   14000e6c1:	jae    0x14000e6c3
   14000e6c3:	add    al,al
   14000e6c5:	add    BYTE PTR [rbx+0x72],al
   14000e6c8:	gs (bad) 
   14000e6ca:	je     0x14000e731
   14000e6cc:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x44011500
   14000e6d5:	gs jbe 0x14000e741
   14000e6d8:	movsxd esp,DWORD PTR [rbp+0x49]
   14000e6db:	outs   dx,DWORD PTR ds:[rsi]
   14000e6dc:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14000e6de:	outs   dx,BYTE PTR ds:[rsi]
   14000e6df:	je     0x14000e753
   14000e6e1:	outs   dx,DWORD PTR ds:[rsi]
   14000e6e2:	ins    BYTE PTR es:[rdi],dx
   14000e6e3:	add    BYTE PTR [rcx],bl
   14000e6e5:	add    eax,DWORD PTR [rdi+0x65]
   14000e6e8:	je     0x14000e740
   14000e6ea:	outs   dx,DWORD PTR ds:[rsi]
   14000e6eb:	ins    BYTE PTR es:[rdi],dx
   14000e6ec:	jne    0x14000e75b
   14000e6ee:	gs push rax
   14000e6f0:	(bad)  
   14000e6f1:	je     0x14000e75b
   14000e6f3:	rex.WRX (bad) 
   14000e6f5:	ins    DWORD PTR es:[rdi],dx
   14000e6f6:	gs push rdi
   14000e6f8:	add    BYTE PTR [rax],al
   14000e6fa:	(bad)  
   14000e6fb:	add    eax,DWORD PTR [rdi+0x65]
   14000e6fe:	je     0x14000e756
   14000e700:	outs   dx,DWORD PTR ds:[rsi]
   14000e701:	ins    BYTE PTR es:[rdi],dx
   14000e702:	jne    0x14000e771
   14000e704:	gs rex.WRX (bad) 
   14000e707:	ins    DWORD PTR es:[rdi],dx
   14000e708:	rex.RX outs dx,DWORD PTR gs:[rsi]
   14000e70b:	jb     0x14000e763
   14000e70d:	outs   dx,DWORD PTR ds:[rsi]
   14000e70e:	ins    BYTE PTR es:[rdi],dx
   14000e70f:	jne    0x14000e77e
   14000e711:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   14000e714:	jne    0x14000e784
   14000e716:	je     0x14000e768
   14000e718:	outs   dx,DWORD PTR ds:[rsi]
   14000e719:	imul   ebp,DWORD PTR [rsi+0x74],0x15b0057
   14000e720:	rex.RB js 0x14000e793
   14000e723:	(bad)  
   14000e724:	outs   dx,BYTE PTR ds:[rsi]
   14000e725:	rex.RB outs dx,BYTE PTR fs:[rsi]
   14000e728:	jbe    0x14000e793
   14000e72a:	jb     0x14000e79b
   14000e72c:	outs   dx,BYTE PTR ds:[rsi]
   14000e72d:	ins    DWORD PTR es:[rdi],dx
   14000e72e:	outs   dx,BYTE PTR gs:[rsi]
   14000e730:	je     0x14000e785
   14000e732:	je     0x14000e7a6
   14000e734:	imul   ebp,DWORD PTR [rsi+0x67],0x7d005773
   14000e73b:	add    BYTE PTR [rbx+0x6c],al
   14000e73e:	outs   dx,DWORD PTR ds:[rsi]
   14000e73f:	jae    0x14000e7a6
   14000e741:	rex.W (bad) 
   14000e743:	outs   dx,BYTE PTR ds:[rsi]
   14000e744:	fs ins BYTE PTR es:[rdi],dx
   14000e746:	add    BYTE PTR gs:[rcx+0x1],bh
   14000e74a:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   14000e752:	je     0x14000e79a
   14000e754:	imul   ebp,DWORD PTR [rbp+riz*2+0x57],0x1850000
   14000e75c:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x7478654e
   14000e764:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x4d03d100
   14000e76d:	outs   dx,DWORD PTR ds:[rsi]
   14000e76e:	jbe    0x14000e7d5
   14000e770:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x6e005778
   14000e779:	add    DWORD PTR [rsi+0x69],eax
   14000e77c:	outs   dx,BYTE PTR ds:[rsi]
   14000e77d:	fs rex.XB ins BYTE PTR es:[rdi],dx
   14000e780:	outs   dx,DWORD PTR ds:[rsi]
   14000e781:	jae    0x14000e7e8
   14000e783:	add    BYTE PTR [rdx+0x63775f03],cl
   14000e789:	jae    0x14000e7f4
   14000e78b:	movsxd ebp,DWORD PTR [rbp+0x70]
   14000e78e:	add    BYTE PTR [rax],al
   14000e790:	imul   eax,DWORD PTR [rbx],0x6e73765f
   14000e796:	ja     0x14000e808
   14000e798:	jb     0x14000e803
   14000e79a:	outs   dx,BYTE PTR ds:[rsi]
   14000e79b:	je     0x14000e803
   14000e79d:	add    BYTE PTR [rax+0x3],ah
   14000e7a0:	pop    rdi
   14000e7a1:	jbe    0x14000e816
   14000e7a3:	movsxd esi,DWORD PTR [rdi+0x70]
   14000e7a6:	jb     0x14000e811
   14000e7a8:	outs   dx,BYTE PTR ds:[rsi]
   14000e7a9:	je     0x14000e811
   14000e7ab:	add    BYTE PTR [rdx+0x0],dl
   14000e7ae:	rex.RB je 0x14000e828
   14000e7b1:	push   rsp
   14000e7b2:	jb     0x14000e815
   14000e7b4:	movsxd esp,DWORD PTR [rbp+0x4d]
   14000e7b7:	gs jae 0x14000e82d
   14000e7ba:	(bad)  
   14000e7bb:	add    BYTE PTR gs:[edx+0x6c745204],cl
   14000e7c3:	rex.WRX je 0x14000e819
   14000e7c6:	je     0x14000e829
   14000e7c8:	je     0x14000e83f
   14000e7ca:	jae    0x14000e820
   14000e7cc:	outs   dx,DWORD PTR ds:[rsi]
   14000e7cd:	rex.R outs dx,DWORD PTR ds:[rsi]
   14000e7cf:	jae    0x14000e816
   14000e7d1:	jb     0x14000e845
   14000e7d3:	outs   dx,DWORD PTR ds:[rsi]
   14000e7d4:	jb     0x14000e7d6
   14000e7d6:	(bad)  
   14000e7d7:	add    edx,DWORD PTR [rdx+0x74]
   14000e7da:	ins    BYTE PTR es:[rdi],dx
   14000e7db:	rex.RXB
   14000e7dc:	gs je  0x14000e82b
   14000e7df:	(bad)  
   14000e7e0:	jae    0x14000e856
   14000e7e2:	rex.WRX je 0x14000e838
   14000e7e5:	je     0x14000e848
   14000e7e7:	je     0x14000e85e
   14000e7e9:	jae    0x14000e7eb
   14000e7eb:	add    BYTE PTR [rsi+0x51744e01],dh
   14000e7f1:	jne    0x14000e858
   14000e7f3:	jb     0x14000e86e
   14000e7f5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000e7f7:	outs   dx,WORD PTR ds:[rsi]
   14000e7f9:	jb     0x14000e868
   14000e7fb:	(bad)  
   14000e7fc:	je     0x14000e867
   14000e7fe:	outs   dx,DWORD PTR ds:[rsi]
   14000e7ff:	outs   dx,BYTE PTR ds:[rsi]
   14000e800:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x4e021d00
   14000e809:	je     0x14000e85e
   14000e80b:	gs je  0x14000e857
   14000e80e:	outs   dx,BYTE PTR ds:[rsi]
   14000e80f:	outs   dx,WORD PTR ds:[rsi]
   14000e811:	jb     0x14000e880
   14000e813:	(bad)  
   14000e814:	je     0x14000e87f
   14000e816:	outs   dx,DWORD PTR ds:[rsi]
   14000e817:	outs   dx,BYTE PTR ds:[rsi]
   14000e818:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x5202a800
   14000e821:	imul   esi,DWORD PTR gs:[ebx+0x74],0x76457265
   14000e82a:	outs   dx,BYTE PTR gs:[rsi]
   14000e82c:	je     0x14000e881
   14000e82e:	outs   dx,DWORD PTR ds:[rsi]
   14000e82f:	jne    0x14000e8a3
   14000e831:	movsxd esp,DWORD PTR [rbp+0x57]
   14000e834:	add    BYTE PTR [rax],al
   14000e836:	mov    eax,0x70655202
   14000e83b:	outs   dx,DWORD PTR ds:[rsi]
   14000e83c:	jb     0x14000e8b2
   14000e83e:	rex.RB jbe 0x14000e8a6
   14000e841:	outs   dx,BYTE PTR ds:[rsi]
   14000e842:	je     0x14000e89b
   14000e844:	add    BYTE PTR [rax],al
   14000e846:	jmp    0x14000e848
   14000e848:	rex.R
   14000e849:	gs jb  0x14000e8b1
   14000e84c:	imul   esi,DWORD PTR [ebx+0x74],0x76457265
   14000e854:	outs   dx,BYTE PTR gs:[rsi]
   14000e856:	je     0x14000e8ab
   14000e858:	outs   dx,DWORD PTR ds:[rsi]
   14000e859:	jne    0x14000e8cd
   14000e85b:	movsxd esp,DWORD PTR [rbp+0x0]
   14000e85e:	rol    DWORD PTR [rbx+rsi*2],0x74
   14000e862:	jb     0x14000e8c7
   14000e864:	push   0xffffffff92000072
   14000e869:	add    al,0x6d
   14000e86b:	gs ins DWORD PTR es:[rdi],dx
   14000e86d:	movsxd esi,DWORD PTR [rax+0x79]
   14000e870:	add    BYTE PTR [rax],al
   14000e872:	xchg   esi,eax
   14000e873:	add    al,0x6d
   14000e875:	gs ins DWORD PTR es:[rdi],dx
   14000e877:	jae    0x14000e8de
   14000e879:	je     0x14000e87b
	...

Disassembly of section .data:

000000014000f000 <.data>:
   14000f000:	add    DWORD PTR [rax],eax
   14000f002:	add    BYTE PTR [rax],al
   14000f004:	add    BYTE PTR [rax],al
   14000f006:	add    BYTE PTR [rax],al
   14000f008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000f00e:	add    BYTE PTR [rax],al
   14000f010:	int    0x5d
   14000f012:	and    dl,dl
   14000f014:	data16 (bad) 
   14000f016:	(bad)  
   14000f017:	inc    DWORD PTR [rax]
   14000f019:	add    BYTE PTR [rax],al
   14000f01b:	add    BYTE PTR [rax],al
   14000f01d:	add    BYTE PTR [rax],al
   14000f01f:	add    BYTE PTR [rax],ah
   14000f021:	lock add BYTE PTR [rax+0x1],al
	...

Disassembly of section .pdata:

0000000140010000 <.pdata>:
   140010000:	or     BYTE PTR [rax],dl
   140010002:	add    BYTE PTR [rax],al
   140010004:	adc    BYTE PTR es:[rax],al
   140010007:	add    BYTE PTR [rax+0x2c0000d4],bh
   14001000d:	adc    BYTE PTR [rax],al
   14001000f:	add    BYTE PTR [rax+0x10],ah
   140010012:	add    BYTE PTR [rax],al
   140010014:	rcl    ah,0x0
   140010017:	add    BYTE PTR [rax+0x10],ch
   14001001a:	add    BYTE PTR [rax],al
   14001001c:	stos   BYTE PTR es:[rdi],al
   14001001d:	adc    BYTE PTR [rax],al
   14001001f:	add    al,cl
   140010021:	(bad)  
   140010022:	add    BYTE PTR [rax],al
   140010024:	mov    al,0x10
   140010026:	add    BYTE PTR [rax],al
   140010028:	or     DWORD PTR [rcx],edx
   14001002a:	add    BYTE PTR [rax],al
   14001002c:	rcl    ah,1
   14001002e:	add    BYTE PTR [rax],al
   140010030:	adc    BYTE PTR [rcx],dl
   140010032:	add    BYTE PTR [rax],al
   140010034:	mov    bh,0x13
   140010036:	add    BYTE PTR [rax],al
   140010038:	fcom   st(4)
   14001003a:	add    BYTE PTR [rax],al
   14001003c:	rcl    BYTE PTR [rbx],0x0
   14001003f:	add    BYTE PTR [rax+0x17],bh
   140010042:	add    BYTE PTR [rax],al
   140010044:	in     al,dx
   140010045:	(bad)  
   140010046:	add    BYTE PTR [rax],al
   140010048:	adc    BYTE PTR [rdi],0x0
   14001004b:	add    BYTE PTR [rbx+0x10000018],bl
   140010051:	(bad)  
   140010052:	add    BYTE PTR [rax],al
   140010054:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010055:	sbb    BYTE PTR [rax],al
   140010057:	add    BYTE PTR [rdx+rbx*1-0x2ae00000],dl
   14001005e:	add    BYTE PTR [rax],al
   140010060:	pushf  
   140010061:	sbb    al,BYTE PTR [rax]
   140010063:	add    BYTE PTR [rsi+0x1d],dh
   140010066:	add    BYTE PTR [rax],al
   140010068:	cmp    ch,dl
   14001006a:	add    BYTE PTR [rax],al
   14001006c:	jl     0x14001008b
   14001006e:	add    BYTE PTR [rax],al
   140010070:	pop    rsp
   140010071:	(bad)  
   140010072:	add    BYTE PTR [rax],al
   140010074:	pop    rax
   140010075:	(bad)  
   140010076:	add    BYTE PTR [rax],al
   140010078:	fs (bad) 
   14001007a:	add    BYTE PTR [rax],al
   14001007c:	rex.X and DWORD PTR [rax],eax
   14001007f:	add    BYTE PTR [rax-0x2b],ch
   140010082:	add    BYTE PTR [rax],al
   140010084:	and    QWORD PTR [rax],rax
   140010087:	add    BYTE PTR [rbp-0x7fffffdc],cl
   14001008d:	(bad)  
   14001008e:	add    BYTE PTR [rax],al
   140010090:	xchg   esp,eax
   140010091:	and    al,0x0
   140010093:	add    bh,cl
   140010095:	and    al,0x0
   140010097:	add    al,al
   140010099:	(bad)  
   14001009a:	add    BYTE PTR [rax],al
   14001009c:	fsub   DWORD PTR [rax+rax*1]
   14001009f:	add    BYTE PTR ds:0xffffffffd4d00000,bh
   1400100a6:	add    BYTE PTR [rax],al
   1400100a8:	rex.R and eax,0x25b90000
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	movabs al,ds:0x4b000025c00000d5
   1400100b9:	add    BYTE PTR es:[rax],al
   1400100bc:	test   al,0xd5
   1400100be:	add    BYTE PTR [rax],al
   1400100c0:	push   rsp
   1400100c1:	add    BYTE PTR es:[rax],al
   1400100c4:	xchg   DWORD PTR [rsi],esp
   1400100c6:	add    BYTE PTR [rax],al
   1400100c8:	movabs al,ds:0xd8000026900000d5
   1400100d1:	add    BYTE PTR es:[rax],al
   1400100d4:	mov    al,0xd5
   1400100d6:	add    BYTE PTR [rax],al
   1400100d8:	loopne 0x140010100
   1400100da:	add    BYTE PTR [rax],al
   1400100dc:	mov    cl,0x27
   1400100de:	add    BYTE PTR [rax],al
   1400100e0:	mov    eax,0xb80000d5
   1400100e5:	(bad)  
   1400100e6:	add    BYTE PTR [rax],al
   1400100e8:	sbb    al,0x28
   1400100ea:	add    BYTE PTR [rax],al
   1400100ec:	(bad)  
   1400100ed:	(bad)  
   1400100ee:	add    BYTE PTR [rax],al
   1400100f0:	and    al,0x28
   1400100f2:	add    BYTE PTR [rax],al
   1400100f4:	rex.WRXB sub r8b,BYTE PTR [r8]
   1400100f7:	add    BYTE PTR [rax-0x2b],bl
   1400100fa:	add    BYTE PTR [rax],al
   1400100fc:	pop    rax
   1400100fd:	sub    al,BYTE PTR [rax]
   1400100ff:	add    ch,ah
   140010101:	sub    al,0x0
   140010103:	add    al,dl
   140010105:	(bad)  
   140010106:	add    BYTE PTR [rax],al
   140010108:	in     al,dx
   140010109:	sub    al,0x0
   14001010b:	add    dh,ch
   14001010d:	xor    BYTE PTR [rax],al
   14001010f:	add    ah,dh
   140010111:	(bad)  
   140010112:	add    BYTE PTR [rax],al
   140010114:	hlt    
   140010115:	xor    BYTE PTR [rax],al
   140010117:	add    dl,al
   140010119:	(bad)  
   14001011a:	add    BYTE PTR [rax],al
   14001011c:	adc    dh,dl
   14001011e:	add    BYTE PTR [rax],al
   140010120:	enter  0x37,0x0
   140010124:	rex.W cmp BYTE PTR [rax],al
   140010127:	add    BYTE PTR [rax],bh
   140010129:	(bad)  
   14001012a:	add    BYTE PTR [rax],al
   14001012c:	push   rax
   14001012d:	cmp    BYTE PTR [rax],al
   14001012f:	add    BYTE PTR [rcx+0x4400003a],ch
   140010135:	(bad)  
   140010136:	add    BYTE PTR [rax],al
   140010138:	mov    al,0x3a
   14001013a:	add    BYTE PTR [rax],al
   14001013c:	test   eax,0x5800003c
   140010141:	(bad)  
   140010142:	add    BYTE PTR [rax],al
   140010144:	mov    al,0x3c
   140010146:	add    BYTE PTR [rax],al
   140010148:	sbb    eax,0x6c000040
   14001014d:	(bad)  
   14001014e:	add    BYTE PTR [rax],al
   140010150:	and    al,0x40
   140010152:	add    BYTE PTR [rax],al
   140010154:	loop   0x140010197
   140010156:	add    BYTE PTR [rax],al
   140010158:	adc    dh,0x0
   14001015b:	add    al,ch
   14001015d:	add    BYTE PTR [r8],al
   140010160:	mov    cl,0x45
   140010162:	add    BYTE PTR [rax],al
   140010164:	cwde   
   140010165:	(bad)  
   140010166:	add    BYTE PTR [rax],al
   140010168:	mov    eax,0x9f000045
   14001016d:	rex.RXB add BYTE PTR [r8],r8b
   140010170:	mov    ah,0xd6
   140010172:	add    BYTE PTR [rax],al
   140010174:	test   al,0x47
   140010176:	add    BYTE PTR [rax],al
   140010178:	test   BYTE PTR [rcx+0x0],0x0
   14001017c:	(bad)  
   14001017d:	(bad)  
   14001017e:	add    BYTE PTR [rax],al
   140010180:	cld    
   140010181:	rex.WB add BYTE PTR [r8],al
   140010184:	mov    ebx,0xdc00004d
   140010189:	(bad)  
   14001018a:	add    BYTE PTR [rax],al
   14001018c:	(bad)  
   14001018d:	rex.WRB add BYTE PTR [r8],r8b
   140010190:	rex.WRX add BYTE PTR [eax],r8b
   140010194:	lock (bad) 
   140010196:	add    BYTE PTR [rax],al
   140010198:	jo     0x1400101e8
   14001019a:	add    BYTE PTR [rax],al
   14001019c:	mov    bh,0x4f
   14001019e:	add    BYTE PTR [rax],al
   1400101a0:	add    bh,dl
   1400101a2:	add    BYTE PTR [rax],al
   1400101a4:	ror    BYTE PTR [rdi+0x0],0x0
   1400101a8:	repnz push rax
   1400101aa:	add    BYTE PTR [rax],al
   1400101ac:	adc    al,0xd7
   1400101ae:	add    BYTE PTR [rax],al
   1400101b0:	clc    
   1400101b1:	push   rax
   1400101b2:	add    BYTE PTR [rax],al
   1400101b4:	stos   DWORD PTR es:[rdi],eax
   1400101b5:	push   rcx
   1400101b6:	add    BYTE PTR [rax],al
   1400101b8:	and    al,0xd7
   1400101ba:	add    BYTE PTR [rax],al
   1400101bc:	mov    ah,0x51
   1400101be:	add    BYTE PTR [rax],al
   1400101c0:	xchg   DWORD PTR [rbx+0x0],edx
   1400101c3:	add    BYTE PTR [rdi+rdx*8],ch
   1400101c6:	add    BYTE PTR [rax],al
   1400101c8:	nop
   1400101c9:	push   rbx
   1400101ca:	add    BYTE PTR [rax],al
   1400101cc:	not    BYTE PTR [rbx+0x0]
   1400101cf:	add    BYTE PTR [rdi+rdx*8],bh
   1400101d2:	add    BYTE PTR [rax],al
   1400101d4:	cld    
   1400101d5:	push   rbx
   1400101d6:	add    BYTE PTR [rax],al
   1400101d8:	xor    BYTE PTR [rax+rax*1+0x0],dl
   1400101dc:	push   rax
   1400101dd:	xlat   BYTE PTR ds:[rbx]
   1400101de:	add    BYTE PTR [rax],al
   1400101e0:	cmp    BYTE PTR [rax+rax*1+0x0],dl
   1400101e4:	jbe    0x14001023a
   1400101e6:	add    BYTE PTR [rax],al
   1400101e8:	push   rax
   1400101e9:	xlat   BYTE PTR ds:[rbx]
   1400101ea:	add    BYTE PTR [rax],al
   1400101ec:	jl     0x140010242
   1400101ee:	add    BYTE PTR [rax],al
   1400101f0:	stos   DWORD PTR es:[rdi],eax
   1400101f1:	push   rsp
   1400101f2:	add    BYTE PTR [rax],al
   1400101f4:	push   rax
   1400101f5:	xlat   BYTE PTR ds:[rbx]
   1400101f6:	add    BYTE PTR [rax],al
   1400101f8:	mov    ah,0x54
   1400101fa:	add    BYTE PTR [rax],al
   1400101fc:	mov    bh,0x55
   1400101fe:	add    BYTE PTR [rax],al
   140010200:	pop    rax
   140010201:	xlat   BYTE PTR ds:[rbx]
   140010202:	add    BYTE PTR [rax],al
   140010204:	rcl    BYTE PTR [rbp+0x0],0x0
   140010208:	sbb    BYTE PTR [rsi+0x0],dl
   14001020b:	add    al,dl
   14001020d:	(bad)  
   14001020e:	add    BYTE PTR [rax],al
   140010210:	and    BYTE PTR [rsi+0x0],dl
   140010213:	add    BYTE PTR [rcx-0x57ffffaa],dl
   140010219:	(bad)  
   14001021a:	add    BYTE PTR [rax],al
   14001021c:	cwde   
   14001021d:	push   rsi
   14001021e:	add    BYTE PTR [rax],al
   140010220:	mov    bl,0x59
   140010222:	add    BYTE PTR [rax],al
   140010224:	push   0xffffffffbc0000d7
   140010229:	pop    rcx
   14001022a:	add    BYTE PTR [rax],al
   14001022c:	mov    ecx,0x8800005b
   140010231:	xlat   BYTE PTR ds:[rbx]
   140010232:	add    BYTE PTR [rax],al
   140010234:	rcr    BYTE PTR [rbx+0x0],0x0
   140010238:	es pop rbp
   14001023a:	add    BYTE PTR [rax],al
   14001023c:	test   al,0xd7
   14001023e:	add    BYTE PTR [rax],al
   140010240:	sub    al,0x5d
   140010242:	add    BYTE PTR [rax],al
   140010244:	add    bl,BYTE PTR [rdi+0x0]
   140010247:	add    ah,al
   140010249:	xlat   BYTE PTR ds:[rbx]
   14001024a:	add    BYTE PTR [rax],al
   14001024c:	or     BYTE PTR [rdi+0x0],bl
   14001024f:	add    ah,cl
   140010251:	(bad)  
   140010252:	add    BYTE PTR [rax],al
   140010254:	loopne 0x14001022d
   140010256:	add    BYTE PTR [rax],al
   140010258:	(bad)  
   140010259:	(bad)  
   14001025a:	add    BYTE PTR [rax],al
   14001025c:	rex.WRXB (bad) 
   14001025e:	add    BYTE PTR [rax],al
   140010260:	cld    
   140010261:	xlat   BYTE PTR ds:[rbx]
   140010262:	add    BYTE PTR [rax],al
   140010264:	pop    rax
   140010265:	(bad)  
   140010266:	add    BYTE PTR [rax],al
   140010268:	mov    cl,0x62
   14001026a:	add    BYTE PTR [rax],al
   14001026c:	rcl    ah,1
   14001026e:	add    BYTE PTR [rax],al
   140010270:	mov    eax,0x3b000062
   140010275:	movsxd eax,DWORD PTR [rax]
   140010277:	add    BYTE PTR [rax+rbx*8],cl
   14001027a:	add    BYTE PTR [rax],al
   14001027c:	movsxd r8d,DWORD PTR [rax]
   14001027f:	add    dh,bl
   140010281:	movsxd eax,DWORD PTR [rax]
   140010283:	add    BYTE PTR [rax],bl
   140010285:	fadd   DWORD PTR [rax]
   140010287:	add    ah,ah
   140010289:	movsxd eax,DWORD PTR [rax]
   14001028b:	add    BYTE PTR [rdx+0x64],ch
   14001028e:	add    BYTE PTR [rax],al
   140010290:	xor    al,bl
   140010292:	add    BYTE PTR [rax],al
   140010294:	jo     0x1400102fa
   140010296:	add    BYTE PTR [rax],al
   140010298:	mov    ecx,0x4000006b
   14001029d:	fadd   DWORD PTR [rax]
   14001029f:	add    al,al
   1400102a1:	imul   eax,DWORD PTR [rax],0x0
   1400102a4:	stc    
   1400102a5:	ins    DWORD PTR es:[rdi],dx
   1400102a6:	add    BYTE PTR [rax],al
   1400102a8:	fadd   DWORD PTR fs:[rax]
   1400102ab:	add    BYTE PTR [rax],al
   1400102ad:	outs   dx,BYTE PTR ds:[rsi]
   1400102ae:	add    BYTE PTR [rax],al
   1400102b0:	xchg   BYTE PTR [rax+0x0],dh
   1400102b3:	add    BYTE PTR [rax+rbx*8+0x708c0000],al
   1400102ba:	add    BYTE PTR [rax],al
   1400102bc:	js     0x14001032f
   1400102be:	add    BYTE PTR [rax],al
   1400102c0:	sbb    al,bl
   1400102c2:	add    BYTE PTR [rax],al
   1400102c4:	xor    BYTE PTR [rcx+0x0],0x0
   1400102c8:	xchg   ecx,eax
   1400102c9:	jb     0x1400102cb
   1400102cb:	add    BYTE PTR [rax],bl
   1400102cd:	fadd   DWORD PTR [rax]
   1400102cf:	add    BYTE PTR [rax-0x72ffff8e],bl
   1400102d5:	jae    0x1400102d7
   1400102d7:	add    BYTE PTR [rax],bl
   1400102d9:	fadd   DWORD PTR [rax]
   1400102db:	add    BYTE PTR [rbx+rsi*2+0x74220000],dl
   1400102e2:	add    BYTE PTR [rax],al
   1400102e4:	sbb    al,bl
   1400102e6:	add    BYTE PTR [rax],al
   1400102e8:	sub    BYTE PTR [rax+rax*1+0x0],dh
   1400102ec:	or     eax,0x9c000076
   1400102f1:	fadd   DWORD PTR [rax]
   1400102f3:	add    BYTE PTR [rsi+rsi*2],dl
   1400102f6:	add    BYTE PTR [rax],al
   1400102f8:	fnstcw WORD PTR [rdx+0x0]
   1400102fb:	add    BYTE PTR [rax+rbx*8+0x7ae00000],ch
   140010302:	add    BYTE PTR [rax],al
   140010304:	loopne 0x140010381
   140010306:	add    BYTE PTR [rax],al
   140010308:	enter  0xd8,0x0
   14001030c:	call   0x16d01038c
   140010311:	jge    0x140010313
   140010313:	add    ah,bl
   140010315:	fadd   DWORD PTR [rax]
   140010317:	add    BYTE PTR [rdi*2+0x7eca0000],dh
   14001031e:	add    BYTE PTR [rax],al
   140010320:	in     al,dx
   140010321:	fadd   DWORD PTR [rax]
   140010323:	add    al,dl
   140010325:	jle    0x140010327
   140010327:	add    dh,bh
   140010329:	add    BYTE PTR [rax],0x0
   14001032c:	add    al,0xd9
   14001032e:	add    BYTE PTR [rax],al
   140010330:	add    al,0x81
   140010332:	add    BYTE PTR [rax],al
   140010334:	add    al,0x82
   140010336:	add    BYTE PTR [rax],al
   140010338:	and    al,0xd9
   14001033a:	add    BYTE PTR [rax],al
   14001033c:	or     al,0x82
   14001033e:	add    BYTE PTR [rax],al
   140010340:	addr32 (bad) 
   140010342:	add    BYTE PTR [rax],al
   140010344:	movabs al,ds:0xf7000082700000d5
   14001034d:	(bad)  
   14001034e:	add    BYTE PTR [rax],al
   140010350:	sub    al,0xd9
   140010352:	add    BYTE PTR [rax],al
   140010354:	add    BYTE PTR [rbx-0x7c210000],al
   14001035a:	add    BYTE PTR [rax],al
   14001035c:	and    al,0xd9
   14001035e:	add    BYTE PTR [rax],al
   140010360:	call   0x12f0103e8
   140010365:	test   BYTE PTR [rax],al
   140010367:	add    BYTE PTR [rdi+rdx*8],bh
   14001036a:	add    BYTE PTR [rax],al
   14001036c:	clc    
   14001036d:	test   BYTE PTR [rax],al
   14001036f:	add    BYTE PTR [rdx-0x79],ch
   140010372:	add    BYTE PTR [rax],al
   140010374:	xor    al,0xd9
   140010376:	add    BYTE PTR [rax],al
   140010378:	jo     0x140010301
   14001037a:	add    BYTE PTR [rax],al
   14001037c:	rex.RX mov BYTE PTR [rax],r8b
   14001037f:	add    BYTE PTR [rcx+rbx*8+0x0],cl
   140010383:	add    BYTE PTR [rax+rcx*4+0x0],cl
   140010387:	add    BYTE PTR [rsi-0x78],dh
   14001038a:	add    BYTE PTR [rax],al
   14001038c:	push   0x7c0000d9
   140010391:	mov    BYTE PTR [rax],al
   140010393:	add    BYTE PTR [rsi+0x68000088],ah
   140010399:	fld    DWORD PTR [rax]
   14001039b:	add    BYTE PTR [rax+rcx*4-0x75d90000],ch
   1400103a2:	add    BYTE PTR [rax],al
   1400103a4:	jo     0x14001037f
   1400103a6:	add    BYTE PTR [rax],al
   1400103a8:	xor    BYTE PTR [rdx-0x74d30000],cl
   1400103ae:	add    BYTE PTR [rax],al
   1400103b0:	mov    eax,0x340000d5
   1400103b5:	mov    eax,DWORD PTR [rax]
   1400103b7:	add    BYTE PTR [rip+0xffffffff9000008e],al        # 0xd001044b
   1400103bd:	fld    DWORD PTR [rax]
   1400103bf:	add    BYTE PTR [rsi+rcx*4],cl
   1400103c2:	add    BYTE PTR [rax],al
   1400103c4:	push   rbp
   1400103c5:	pop    QWORD PTR [rax]
   1400103c7:	add    BYTE PTR [rax+0x5c0000d9],dh
   1400103cd:	pop    QWORD PTR [rax]
   1400103cf:	add    BYTE PTR [rcx-0x6f],bl
   1400103d2:	add    BYTE PTR [rax],al
   1400103d4:	rcr    cl,0x0
   1400103d7:	add    BYTE PTR [rax-0x6f],ah
   1400103da:	add    BYTE PTR [rax],al
   1400103dc:	in     al,dx
   1400103dd:	xchg   ebx,eax
   1400103de:	add    BYTE PTR [rax],al
   1400103e0:	fcomp  st(1)
   1400103e2:	add    BYTE PTR [rax],al
   1400103e4:	hlt    
   1400103e5:	xchg   ebx,eax
   1400103e6:	add    BYTE PTR [rax],al
   1400103e8:	jle    0x140010380
   1400103ea:	add    BYTE PTR [rax],al
   1400103ec:	lock fld DWORD PTR [rax]
   1400103ef:	add    BYTE PTR [rsi+rdx*4-0x66960000],al
   1400103f6:	add    BYTE PTR [rax],al
   1400103f8:	adc    dl,bl
   1400103fa:	add    BYTE PTR [rax],al
   1400103fc:	jo     0x140010397
   1400103fe:	add    BYTE PTR [rax],al
   140010400:	sub    ebx,DWORD PTR [rdx-0x25dc0000]
   140010406:	add    BYTE PTR [rax],al
   140010408:	xor    al,0x9a
   14001040a:	add    BYTE PTR [rax],al
   14001040c:	add    al,0x9b
   14001040e:	add    BYTE PTR [rax],al
   140010410:	xor    al,0xda
   140010412:	add    BYTE PTR [rax],al
   140010414:	or     al,0x9b
   140010416:	add    BYTE PTR [rax],al
   140010418:	adc    BYTE PTR [rax+rax*1+0xda4400],bl
   14001041f:	add    BYTE PTR [rsp+rbx*4+0x0],ah
   140010423:	add    cl,ah
   140010425:	pushf  
   140010426:	add    BYTE PTR [rax],al
   140010428:	push   rax
   140010429:	fiadd  DWORD PTR [rax]
   14001042b:	add    al,ch
   14001042d:	pushf  
   14001042e:	add    BYTE PTR [rax],al
   140010430:	sbb    eax,0xc400009d
   140010435:	(bad)  
   140010436:	add    BYTE PTR [rax],al
   140010438:	and    al,0x9d
   14001043a:	add    BYTE PTR [rax],al
   14001043c:	add    ebx,DWORD PTR [rdi-0x259c0000]
   140010442:	add    BYTE PTR [rax],al
   140010444:	or     al,0x9f
   140010446:	add    BYTE PTR [rax],al
   140010448:	mov    edx,0x8400009f
   14001044d:	fiadd  DWORD PTR [rax]
   14001044f:	add    ah,bh
   140010451:	lahf   
   140010452:	add    BYTE PTR [rax],al
   140010454:	sbb    BYTE PTR [rcx-0x25680000],ah
   14001045a:	add    BYTE PTR [rax],al
   14001045c:	and    BYTE PTR [rcx-0x5eb20000],ah
   140010462:	add    BYTE PTR [rax],al
   140010464:	mov    ah,0xda
   140010466:	add    BYTE PTR [rax],al
   140010468:	push   rsp
   140010469:	movabs eax,ds:0xd4b80000a1be0000
   140010472:	add    BYTE PTR [rax],al
   140010474:	(bad)
   140010478:	cpuid  
   14001047a:	add    BYTE PTR [rax],al
   14001047c:	mov    eax,0x180000d4
   140010481:	movabs ds:0xd5a00000a2800000,al
   14001048a:	add    BYTE PTR [rax],al
   14001048c:	mov    BYTE PTR [rdx-0x5d420000],ah
   140010492:	add    BYTE PTR [rax],al
   140010494:	sub    al,0xd9
   140010496:	add    BYTE PTR [rax],al
   140010498:	(bad)
   14001049c:	and    BYTE PTR [rbx-0x25440000],0x0
   1400104a3:	add    BYTE PTR [rax-0x29ffff5d],cl
   1400104a9:	movabs ds:0xa3dc0000dad80000,eax
   1400104b2:	add    BYTE PTR [rax],al
   1400104b4:	pop    rdx
   1400104b5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400104b6:	add    BYTE PTR [rax],al
   1400104b8:	(bad)  
   1400104b9:	(bad)  
   1400104ba:	add    BYTE PTR [rax],al
   1400104bc:	(bad)  
   1400104bd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400104be:	add    BYTE PTR [rax],al
   1400104c0:	sahf   
   1400104c1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400104c2:	add    BYTE PTR [rax],al
   1400104c4:	in     al,0xda
   1400104c6:	add    BYTE PTR [rax],al
   1400104c8:	shl    BYTE PTR [rax+rax*1+0xa52c00],1
   1400104cf:	add    ah,ch
   1400104d1:	fiadd  DWORD PTR [rax]
   1400104d3:	add    BYTE PTR [riz*4-0x5a1e0000],dh
   1400104da:	add    BYTE PTR [rax],al
   1400104dc:	(bad)  
   1400104dd:	(bad)  
   1400104de:	add    BYTE PTR [rax],al
   1400104e0:	call   0x15d01058a
   1400104e5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400104e6:	add    BYTE PTR [rax],al
   1400104e8:	mov    esp,0x240000da
   1400104ed:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400104ee:	add    BYTE PTR [rax],al
   1400104f0:	out    dx,al
   1400104f1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400104f2:	add    BYTE PTR [rax],al
   1400104f4:	cld    
   1400104f5:	fiadd  DWORD PTR [rax]
   1400104f7:	add    BYTE PTR [rax],al
   1400104f9:	test   al,0x0
   1400104fb:	add    BYTE PTR [rcx],bh
   1400104fd:	test   al,0x0
   1400104ff:	add    ah,al
   140010501:	(bad)  
   140010502:	add    BYTE PTR [rax],al
   140010504:	test   al,0x0
   140010507:	add    BYTE PTR [rdi],cl
   140010509:	test   eax,0xdb540000
   14001050e:	add    BYTE PTR [rax],al
   140010510:	and    BYTE PTR [rcx-0x56970000],ch
   140010516:	add    BYTE PTR [rax],al
   140010518:	mov    eax,0x700000d4
   14001051d:	test   eax,0xab420000
   140010522:	add    BYTE PTR [rax],al
   140010524:	adc    al,0xdb
   140010526:	add    BYTE PTR [rax],al
   140010528:	push   rax
   140010529:	stos   DWORD PTR es:[rdi],eax
   14001052a:	add    BYTE PTR [rax],al
   14001052c:	(bad)  
   14001052d:	stos   DWORD PTR es:[rdi],eax
   14001052e:	add    BYTE PTR [rax],al
   140010530:	push   rsp
   140010531:	fild   DWORD PTR [rax]
   140010533:	add    BYTE PTR [rax-0x61ffff55],al
   140010539:	stos   DWORD PTR es:[rdi],eax
   14001053a:	add    BYTE PTR [rax],al
   14001053c:	push   rax
   14001053d:	fild   DWORD PTR [rax]
   14001053f:	add    al,dl
   140010541:	stos   DWORD PTR es:[rdi],eax
   140010542:	add    BYTE PTR [rax],al
   140010544:	or     DWORD PTR [rax+rax*1+0xdb5400],ebp
   14001054b:	add    BYTE PTR [rax],dl
   14001054d:	lods   al,BYTE PTR ds:[rsi]
   14001054e:	add    BYTE PTR [rax],al
   140010550:	sub    BYTE PTR [rax+rax*1+0xdb5400],ch
   140010557:	add    BYTE PTR [rsp+rbp*4],bh
   14001055a:	add    BYTE PTR [rax],al
   14001055c:	nop
   14001055d:	lods   al,BYTE PTR ds:[rsi]
   14001055e:	add    BYTE PTR [rax],al
   140010560:	pop    rsp
   140010561:	fild   DWORD PTR [rax]
   140010563:	add    BYTE PTR [rax-0x22ffff54],bl
   140010569:	lods   al,BYTE PTR ds:[rsi]
   14001056a:	add    BYTE PTR [rax],al
   14001056c:	lods   al,BYTE PTR ds:[rsi]
   14001056d:	fild   DWORD PTR [rax]
   14001056f:	add    BYTE PTR [rax-0x53],al
   140010572:	add    BYTE PTR [rax],al
   140010574:	lea    ebp,[rbp-0x24840000]
   14001057a:	add    BYTE PTR [rax],al
   14001057c:	(bad)  
   14001057d:	lods   eax,DWORD PTR ds:[rsi]
   14001057e:	add    BYTE PTR [rax],al
   140010580:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140010581:	scas   al,BYTE PTR es:[rdi]
   140010582:	add    BYTE PTR [rax],al
   140010584:	movabs al,ds:0x200000aeec0000db
   14001058d:	scas   eax,DWORD PTR es:[rdi]
   14001058e:	add    BYTE PTR [rax],al
   140010590:	lods   al,BYTE PTR ds:[rsi]
   140010591:	fild   DWORD PTR [rax]
   140010593:	add    BYTE PTR [rax],dh
   140010595:	scas   eax,DWORD PTR es:[rdi]
   140010596:	add    BYTE PTR [rax],al
   140010598:	movabs eax,ds:0xb80000dbb40000b0
   1400105a1:	mov    al,0x0
   1400105a3:	add    ch,dl
   1400105a5:	mov    al,0x0
   1400105a7:	add    BYTE PTR [rbx+rbx*8+0x0],dl
   1400105ab:	add    ah,bl
   1400105ad:	mov    al,0x0
   1400105af:	add    BYTE PTR [rdi],bh
   1400105b1:	mov    cl,0x0
   1400105b3:	add    BYTE PTR [rbx+rbx*8-0x4e900000],ch
   1400105ba:	add    BYTE PTR [rax],al
   1400105bc:	jb     0x14001056f
   1400105be:	add    BYTE PTR [rax],al
   1400105c0:	rcr    bl,0x0
   1400105c3:	add    BYTE PTR [rsi-0x5bffff4f],al
   1400105c9:	mov    cl,0x0
   1400105cb:	add    BYTE PTR [rbx+rbx*8+0x0],al
   1400105cf:	add    BYTE PTR [rax-0x2fffff4f],dh
   1400105d5:	mov    cl,0x0
   1400105d7:	add    BYTE PTR [rbx+rbx*8+0x0],al
	...

Disassembly of section .rsrc:

0000000140011000 <.rsrc>:
	...
   14001100c:	add    DWORD PTR [rax],eax
   14001100e:	add    al,BYTE PTR [rax]
   140011010:	call   0x168811015
   140011015:	add    BYTE PTR [rax],al
   140011017:	adc    BYTE PTR [rax],0x0
   14001101a:	add    BYTE PTR [rax],al
   14001101c:	add    BYTE PTR [rax],al
   14001101f:	sbb    BYTE PTR [rax],0x0
   140011022:	add    BYTE PTR [rax],al
   140011024:	pop    rax
   140011025:	add    BYTE PTR [rax],al
   140011027:	add    BYTE PTR [rax],0x0
	...
   140011036:	add    DWORD PTR [rax],eax
   140011038:	add    DWORD PTR [rax],eax
   14001103a:	add    BYTE PTR [rax],al
   14001103c:	jo     0x14001103e
   14001103e:	add    BYTE PTR [rax+0x0],al
	...
   14001104c:	add    BYTE PTR [rax],al
   14001104e:	add    DWORD PTR [rax],eax
   140011050:	add    DWORD PTR [rax],eax
   140011052:	add    BYTE PTR [rax],al
   140011054:	mov    BYTE PTR [rax],al
   140011056:	add    BYTE PTR [rax+0x0],al
	...
   140011064:	add    BYTE PTR [rax],al
   140011066:	add    DWORD PTR [rax],eax
   140011068:	add    DWORD PTR [rax],eax
   14001106a:	add    BYTE PTR [rax],al
   14001106c:	movabs al,ds:0x800000
	...
   14001107d:	add    BYTE PTR [rcx],al
   14001107f:	add    BYTE PTR [rcx],cl
   140011081:	add    al,0x0
   140011083:	add    BYTE PTR [rax+0x0],bh
	...
   140011095:	add    BYTE PTR [rcx],al
   140011097:	add    BYTE PTR [rcx],cl
   140011099:	add    al,0x0
   14001109b:	add    al,cl
	...
   1400110ad:	add    BYTE PTR [rcx],al
   1400110af:	add    BYTE PTR [rcx],cl
   1400110b1:	add    al,0x0
   1400110b3:	add    al,bl
   1400110b5:	add    BYTE PTR [rax],al
   1400110b7:	add    BYTE PTR [rax+0x17],cl
   1400110ba:	add    DWORD PTR [rax],eax
   1400110bc:	enter  0x0,0x0
	...
   1400110c8:	js     0x1400110dd
   1400110ca:	add    DWORD PTR [rax],eax
   1400110cc:	int3   
   1400110cd:	add    eax,DWORD PTR [rax]
	...
   1400110d7:	add    al,dh
   1400110d9:	adc    BYTE PTR [rcx],al
   1400110db:	add    BYTE PTR [rcx+0x2],al
   1400110e1:	add    BYTE PTR [rax],al
   1400110e3:	add    BYTE PTR [rax],al
   1400110e5:	add    BYTE PTR [rax],al
   1400110e7:	add    BYTE PTR [rbx],al
   1400110e9:	add    BYTE PTR [rbp+0x0],cl
   1400110ec:	push   rbp
   1400110ed:	add    BYTE PTR [rcx+0x0],cl
   1400110f0:	cmp    al,0x3f
   1400110f2:	js     0x140011161
   1400110f4:	ins    BYTE PTR es:[rdi],dx
   1400110f5:	and    BYTE PTR [rsi+0x65],dh
   1400110f8:	jb     0x14001116d
   1400110fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140011101:	xor    BYTE PTR [rdx],ah
   140011103:	and    BYTE PTR [rbp+0x6e],ah
   140011106:	movsxd ebp,DWORD PTR [rdi+0x64]
   140011109:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   140011110:	rex.RX sub eax,0x73202238
   140011116:	je     0x140011179
   140011118:	outs   dx,BYTE PTR ds:[rsi]
   140011119:	fs (bad) 
   14001111b:	ins    BYTE PTR es:[rdi],dx
   14001111c:	outs   dx,DWORD PTR ds:[rsi]
   14001111d:	outs   dx,BYTE PTR ds:[rsi]
   14001111e:	gs cmp eax,0x73657922
   140011124:	and    bh,BYTE PTR [rdi]
   140011126:	ds or  eax,0x2d213c0a
   14001112c:	sub    eax,0x706f4320
   140011131:	jns    0x1400111a5
   140011133:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14001113a:	sub    DWORD PTR [rax],esp
   14001113c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140011144:	je     0x140011166
   140011146:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140011148:	jb     0x1400111ba
   14001114a:	outs   dx,DWORD PTR ds:[rsi]
   14001114b:	jb     0x1400111ae
   14001114d:	je     0x1400111b8
   14001114f:	outs   dx,DWORD PTR ds:[rsi]
   140011150:	outs   dx,BYTE PTR ds:[rsi]
   140011151:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0e4f84
   140011157:	cmp    al,0x61
   140011159:	jae    0x1400111ce
   14001115b:	gs ins DWORD PTR es:[rdi],dx
   14001115d:	(bad)  
   14001115e:	ins    BYTE PTR es:[rdi],dx
   14001115f:	jns    0x140011181
   140011161:	js     0x1400111d0
   140011163:	ins    BYTE PTR es:[rdi],dx
   140011164:	outs   dx,BYTE PTR ds:[rsi]
   140011165:	jae    0x1400111a4
   140011167:	and    dh,BYTE PTR [rbp+0x72]
   14001116a:	outs   dx,BYTE PTR ds:[rsi]
   14001116b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001116e:	push   0x73616d65
   140011173:	sub    eax,0x7263696d
   140011178:	outs   dx,DWORD PTR ds:[rsi]
   140011179:	jae    0x1400111ea
   14001117b:	data16 je 0x1400111ab
   14001117e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140011181:	cmp    ah,BYTE PTR [rcx+0x73]
   140011184:	ins    DWORD PTR es:[rdi],dx
   140011185:	cs jbe 0x1400111b9
   140011188:	and    ah,BYTE PTR [rax]
   14001118a:	and    BYTE PTR [rax+0x6d],bh
   14001118d:	ins    BYTE PTR es:[rdi],dx
   14001118e:	outs   dx,BYTE PTR ds:[rsi]
   14001118f:	jae    0x1400111cb
   140011191:	(bad)  
   140011192:	jae    0x140011201
   140011194:	jbe    0x1400111c9
   140011196:	cmp    eax,0x6e727522
   14001119b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001119e:	push   0x73616d65
   1400111a3:	sub    eax,0x7263696d
   1400111a8:	outs   dx,DWORD PTR ds:[rsi]
   1400111a9:	jae    0x14001121a
   1400111ab:	data16 je 0x1400111db
   1400111ae:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400111b1:	cmp    ah,BYTE PTR [rcx+0x73]
   1400111b4:	ins    DWORD PTR es:[rdi],dx
   1400111b5:	cs jbe 0x1400111eb
   1400111b8:	and    ah,BYTE PTR [rax]
   1400111ba:	ins    DWORD PTR es:[rdi],dx
   1400111bb:	(bad)  
   1400111bc:	outs   dx,BYTE PTR ds:[rsi]
   1400111bd:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   1400111c4:	jb     0x140011239
   1400111c6:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400111cd:	xor    BYTE PTR [rdx],ah
   1400111cf:	ds or  eax,0x73613c0a
   1400111d5:	jae    0x14001123c
   1400111d7:	ins    DWORD PTR es:[rdi],dx
   1400111d8:	(bad)  
   1400111d9:	ins    BYTE PTR es:[rdi],dx
   1400111da:	jns    0x140011225
   1400111dc:	fs outs dx,BYTE PTR gs:[rsi]
   1400111df:	je     0x14001124a
   1400111e1:	je     0x14001125c
   1400111e3:	or     eax,0x2020200a
   1400111e8:	and    BYTE PTR [rsi+0x61],ch
   1400111eb:	ins    DWORD PTR es:[rdi],dx
   1400111ec:	gs cmp eax,0x54725322
   1400111f2:	(bad)  
   1400111f3:	jae    0x140011260
   1400111f5:	jae    0x140011243
   1400111f7:	push   rbp
   1400111f8:	rex.B
   1400111f9:	rex.WRB (bad) 
   1400111fb:	outs   dx,BYTE PTR ds:[rsi]
   1400111fc:	imul   esp,DWORD PTR [rsi+0x65],0xd227473
   140011203:	or     ah,BYTE PTR [rax]
   140011205:	and    BYTE PTR [rax],ah
   140011207:	and    BYTE PTR [rax+0x72],dh
   14001120a:	outs   dx,DWORD PTR ds:[rsi]
   14001120b:	movsxd esp,DWORD PTR [rbp+0x73]
   14001120e:	jae    0x14001127f
   140011210:	jb     0x140011253
   140011212:	jb     0x140011277
   140011214:	push   0x63657469
   140011219:	je     0x140011290
   14001121b:	jb     0x140011282
   14001121d:	cmp    eax,0x646d6122
   140011222:	ss xor al,0x22
   140011225:	or     eax,0x2020200a
   14001122a:	and    BYTE PTR [rsi+0x65],dh
   14001122d:	jb     0x1400112a2
   14001122f:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140011236:	xor    BYTE PTR [rsi],ch
   140011238:	xor    BYTE PTR [rsi],ch
   14001123a:	xor    BYTE PTR [rdx],ah
   14001123c:	or     eax,0x2020200a
   140011241:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140011245:	gs cmp eax,0x3e2f2222
   14001124b:	or     eax,0x65643c0a
   140011250:	jae    0x1400112b5
   140011252:	jb     0x1400112bd
   140011254:	jo     0x1400112ca
   140011256:	imul   ebp,DWORD PTR [rdi+0x6e],0x5472533e
   14001125d:	(bad)  
   14001125e:	jae    0x1400112cb
   140011260:	jae    0x140011290
   140011262:	gs js  0x1400112ca
   140011265:	cmp    al,0x2f
   140011267:	fs gs jae 0x1400112ce
   14001126b:	jb     0x1400112d6
   14001126d:	jo     0x1400112e3
   14001126f:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   140011276:	je     0x1400112ea
   140011278:	jne    0x1400112ed
   14001127a:	je     0x1400112c5
   14001127c:	outs   dx,BYTE PTR ds:[rsi]
   14001127d:	outs   dx,WORD PTR ds:[rsi]
   14001127f:	and    BYTE PTR [rax+0x6d],bh
   140011282:	ins    BYTE PTR es:[rdi],dx
   140011283:	outs   dx,BYTE PTR ds:[rsi]
   140011284:	jae    0x1400112c3
   140011286:	and    dh,BYTE PTR [rbp+0x72]
   140011289:	outs   dx,BYTE PTR ds:[rsi]
   14001128a:	cmp    dh,BYTE PTR [rbx+0x63]
   14001128d:	push   0x73616d65
   140011292:	sub    eax,0x7263696d
   140011297:	outs   dx,DWORD PTR ds:[rsi]
   140011298:	jae    0x140011309
   14001129a:	data16 je 0x1400112ca
   14001129d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400112a0:	cmp    ah,BYTE PTR [rcx+0x73]
   1400112a3:	ins    DWORD PTR es:[rdi],dx
   1400112a4:	cs jbe 0x1400112da
   1400112a7:	and    bh,BYTE PTR [rsi]
   1400112a9:	or     eax,0x2020200a
   1400112ae:	and    BYTE PTR [rbx+rsi*2],bh
   1400112b1:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400112b5:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400112bd:	and    BYTE PTR [rax],ah
   1400112bf:	and    BYTE PTR [rax],ah
   1400112c1:	and    BYTE PTR [rax],ah
   1400112c3:	cmp    al,0x72
   1400112c5:	gs jno 0x14001133d
   1400112c8:	gs jae 0x14001133f
   1400112cb:	gs fs push rax
   1400112ce:	jb     0x140011339
   1400112d0:	jbe    0x14001133b
   1400112d2:	ins    BYTE PTR es:[rdi],dx
   1400112d3:	gs addr32 gs jae 0x140011316
   1400112d8:	or     eax,0x2020200a
   1400112dd:	and    BYTE PTR [rax],ah
   1400112df:	and    BYTE PTR [rax],ah
   1400112e1:	and    BYTE PTR [rax],ah
   1400112e3:	and    BYTE PTR [rax],ah
   1400112e5:	and    BYTE PTR [rdx+rsi*2],bh
   1400112e8:	gs jno 0x140011360
   1400112eb:	gs jae 0x140011362
   1400112ee:	gs fs rex.RB js 0x140011358
   1400112f3:	movsxd esi,DWORD PTR [rbp+0x74]
   1400112f6:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400112fd:	ins    BYTE PTR es:[rdi],dx
   1400112fe:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140011302:	gs ins BYTE PTR es:[rdi],dx
   140011304:	cmp    eax,0x49736122
   140011309:	outs   dx,BYTE PTR ds:[rsi]
   14001130a:	jbe    0x14001137b
   14001130c:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140011310:	and    BYTE PTR [rbp+0x69],dh
   140011313:	movsxd esp,DWORD PTR [r11+0x65]
   140011317:	jae    0x14001138c
   140011319:	cmp    eax,0x6c616622
   14001131e:	jae    0x140011385
   140011320:	and    ch,BYTE PTR [rdi]
   140011322:	ds or  eax,0x2020200a
   140011328:	and    BYTE PTR [rax],ah
   14001132a:	and    BYTE PTR [rax],ah
   14001132c:	and    BYTE PTR [rdi+rbp*1],bh
   14001132f:	jb     0x140011396
   140011331:	jno    0x1400113a8
   140011333:	gs jae 0x1400113aa
   140011336:	gs fs push rax
   140011339:	jb     0x1400113a4
   14001133b:	jbe    0x1400113a6
   14001133d:	ins    BYTE PTR es:[rdi],dx
   14001133e:	gs addr32 gs jae 0x140011381
   140011343:	or     eax,0x2020200a
   140011348:	and    BYTE PTR [rdi+rbp*1],bh
   14001134b:	jae    0x1400113b2
   14001134d:	movsxd esi,DWORD PTR [rbp+0x72]
   140011350:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140011358:	je     0x1400113cc
   14001135a:	jne    0x1400113cf
   14001135c:	je     0x1400113a7
   14001135e:	outs   dx,BYTE PTR ds:[rsi]
   14001135f:	outs   dx,WORD PTR ds:[rsi]
   140011361:	ds or  eax,0x612f3c0a
   140011367:	jae    0x1400113dc
   140011369:	gs ins DWORD PTR es:[rdi],dx
   14001136b:	(bad)  
   14001136c:	ins    BYTE PTR es:[rdi],dx
   14001136d:	jns    0x1400113ad
   14001136f:	or     eax,0xa
   140011374:	add    BYTE PTR [rax],al
   140011376:	add    BYTE PTR [rax],al
   140011378:	int3   
   140011379:	add    esi,DWORD PTR [rax+rax*1]
   14001137c:	add    BYTE PTR [rax],al
   14001137e:	push   rsi
   14001137f:	add    BYTE PTR [rbx+0x0],dl
   140011382:	pop    rdi
   140011383:	add    BYTE PTR [rsi+0x0],dl
   140011386:	add    BYTE PTR [r10+0x0],r10b
   14001138a:	push   rbx
   14001138b:	add    BYTE PTR [rcx+0x0],cl
   14001138e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140011392:	pop    rdi
   140011393:	add    BYTE PTR [rcx+0x0],cl
   140011396:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14001139a:	rex.WRXB add BYTE PTR [r8],r8b
   14001139d:	add    BYTE PTR [rax],al
   14001139f:	add    BYTE PTR [rbp+0xfeef04],bh
   1400113a5:	add    BYTE PTR [rcx],al
   1400113a7:	add    BYTE PTR [rax],al
   1400113a9:	add    BYTE PTR [rdx],cl
   1400113ab:	add    BYTE PTR [rax],al
   1400113ad:	add    BYTE PTR [rax],bpl
   1400113b0:	add    BYTE PTR [rax],al
   1400113b2:	or     al,BYTE PTR [rax]
   1400113b4:	add    BYTE PTR [rax+0x0],al
   1400113b7:	sub    BYTE PTR [rdi],bh
   1400113b9:	add    BYTE PTR [rax],al
   1400113bb:	add    BYTE PTR [rax],al
   1400113bd:	add    BYTE PTR [rax],al
   1400113bf:	add    BYTE PTR [rax+rax*1],al
   1400113c2:	add    al,0x0
   1400113c4:	add    DWORD PTR [rax],eax
	...
   1400113d2:	add    BYTE PTR [rax],al
   1400113d4:	sub    al,BYTE PTR [rbx]
   1400113d6:	add    BYTE PTR [rax],al
   1400113d8:	add    DWORD PTR [rax],eax
   1400113da:	push   rbx
   1400113db:	add    BYTE PTR [rax+rax*1+0x72],dh
   1400113df:	add    BYTE PTR [rcx+0x0],ch
   1400113e2:	outs   dx,BYTE PTR ds:[rsi]
   1400113e3:	add    BYTE PTR [rdi+0x0],ah
   1400113e6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400113ea:	ins    BYTE PTR es:[rdi],dx
   1400113eb:	add    BYTE PTR [rbp+0x0],ah
   1400113ee:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400113f2:	data16 add BYTE PTR [rdi+0x0],ch
   1400113f6:	add    BYTE PTR [rax],al
   1400113f8:	(bad)  
   1400113f9:	add    eax,DWORD PTR [rax]
   1400113fb:	add    BYTE PTR [rcx],al
   1400113fd:	add    BYTE PTR [rax],dh
   1400113ff:	add    BYTE PTR [rax+rax*1],dh
   140011402:	xor    BYTE PTR [rax],al
   140011404:	cmp    DWORD PTR [rax],eax
   140011406:	xor    BYTE PTR [rax],al
   140011408:	xor    al,0x0
   14001140a:	rex.X add BYTE PTR [rax],sil
   14001140d:	add    BYTE PTR [rax],al
   14001140f:	add    BYTE PTR [rax+rax*1+0x16],cl
   140011413:	add    BYTE PTR [rcx],al
   140011415:	add    BYTE PTR [rbx+0x0],al
   140011418:	outs   dx,DWORD PTR ds:[rsi]
   140011419:	add    BYTE PTR [rbp+0x0],ch
   14001141c:	jo     0x14001141e
   14001141e:	(bad)  
   14001141f:	add    BYTE PTR [rsi+0x0],ch
   140011422:	jns    0x140011424
   140011424:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011428:	ins    DWORD PTR es:[rdi],dx
   140011429:	add    BYTE PTR [rbp+0x0],ah
   14001142c:	add    BYTE PTR [rax],al
   14001142e:	add    BYTE PTR [rax],al
   140011430:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011434:	movsxd eax,DWORD PTR [rax]
   140011436:	jb     0x140011438
   140011438:	outs   dx,DWORD PTR ds:[rsi]
   140011439:	add    BYTE PTR [rbx+0x0],dh
   14001143c:	outs   dx,DWORD PTR ds:[rsi]
   14001143d:	add    BYTE PTR [rsi+0x0],ah
   140011440:	je     0x140011442
   140011442:	and    BYTE PTR [rax],al
   140011444:	rex.XB add BYTE PTR [r15+0x0],bpl
   140011448:	jb     0x14001144a
   14001144a:	jo     0x14001144c
   14001144c:	outs   dx,DWORD PTR ds:[rsi]
   14001144d:	add    BYTE PTR [rdx+0x0],dh
   140011450:	(bad)  
   140011451:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011455:	add    BYTE PTR [rdi+0x0],ch
   140011458:	outs   dx,BYTE PTR ds:[rsi]
   140011459:	add    BYTE PTR [rax],al
   14001145b:	add    BYTE PTR [rsi+0x1003700],dl
   140011461:	add    BYTE PTR [rsi+0x0],al
   140011464:	imul   eax,DWORD PTR [rax],0x65006c
   14001146a:	add    BYTE PTR [rbp+0x0],r12b
   14001146e:	jae    0x140011470
   140011470:	movsxd eax,DWORD PTR [rax]
   140011472:	jb     0x140011474
   140011474:	imul   eax,DWORD PTR [rax],0x740070
   14001147a:	imul   eax,DWORD PTR [rax],0x6e006f
   140011480:	add    BYTE PTR [rax],al
   140011482:	add    BYTE PTR [rax],al
   140011484:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011488:	movsxd eax,DWORD PTR [rax]
   14001148a:	jb     0x14001148c
   14001148c:	outs   dx,DWORD PTR ds:[rsi]
   14001148d:	add    BYTE PTR [rbx+0x0],dh
   140011490:	outs   dx,DWORD PTR ds:[rsi]
   140011491:	add    BYTE PTR [rsi+0x0],ah
   140011494:	je     0x140011496
   140011496:	scas   al,BYTE PTR es:[rdi]
   140011497:	add    BYTE PTR [rax],ah
   140011499:	add    BYTE PTR [rdi+0x0],dl
   14001149c:	imul   eax,DWORD PTR [rax],0x64006e
   1400114a2:	outs   dx,DWORD PTR ds:[rsi]
   1400114a3:	add    BYTE PTR [rdi+0x0],dh
   1400114a6:	jae    0x1400114a8
   1400114a8:	and    BYTE PTR [rax],al
   1400114aa:	push   rbx
   1400114ab:	add    BYTE PTR [rcx+0x0],bh
   1400114ae:	jae    0x1400114b0
   1400114b0:	je     0x1400114b2
   1400114b2:	add    BYTE PTR gs:[rbp+0x0],ch
   1400114b6:	and    BYTE PTR [rax],al
   1400114b8:	push   rax
   1400114b9:	add    BYTE PTR [rdx+0x0],dh
   1400114bc:	outs   dx,DWORD PTR ds:[rsi]
   1400114bd:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400114c1:	add    BYTE PTR [rbx+0x0],ah
   1400114c4:	je     0x1400114c6
   1400114c6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400114cc:	and    BYTE PTR [rax],al
   1400114ce:	(bad)  
   1400114cf:	add    BYTE PTR [rcx+0x0],ah
   1400114d2:	movsxd eax,DWORD PTR [rax]
   1400114d4:	imul   eax,DWORD PTR [rax],0x67
   1400114d7:	add    BYTE PTR [rdx+0x0],dh
   1400114da:	outs   dx,DWORD PTR ds:[rsi]
   1400114db:	add    BYTE PTR [rbp+0x0],dh
   1400114de:	outs   dx,BYTE PTR ds:[rsi]
   1400114df:	add    BYTE PTR [rax+rax*1+0x20],ah
   1400114e3:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400114e7:	add    BYTE PTR [rbx+0x0],dh
   1400114ea:	imul   eax,DWORD PTR [rax],0x73
   1400114ed:	add    BYTE PTR [rsi],ch
   1400114ef:	add    BYTE PTR [rax],al
   1400114f1:	add    BYTE PTR [rax],al
   1400114f3:	add    BYTE PTR [rsi+0x0],ah
   1400114f6:	and    eax,DWORD PTR [rax]
   1400114f8:	add    DWORD PTR [rax],eax
   1400114fa:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400114fe:	ins    BYTE PTR es:[rdi],dx
   1400114ff:	add    BYTE PTR [rbp+0x0],ah
   140011502:	push   rsi
   140011503:	add    BYTE PTR [rbp+0x0],ah
   140011506:	jb     0x140011508
   140011508:	jae    0x14001150a
   14001150a:	imul   eax,DWORD PTR [rax],0x6e006f
   140011510:	add    BYTE PTR [rax],al
   140011512:	add    BYTE PTR [rax],al
   140011514:	xor    DWORD PTR [rax],eax
   140011516:	xor    BYTE PTR [rax],al
   140011518:	add    BYTE PTR cs:[rax],dh
   14001151b:	add    BYTE PTR [rsi],ch
   14001151d:	add    BYTE PTR [rcx],dh
   14001151f:	add    BYTE PTR [rax],dh
   140011521:	add    BYTE PTR [rdx],dh
   140011523:	add    BYTE PTR [rax+rax*1],dh
   140011526:	xor    BYTE PTR [rax],al
   140011528:	add    BYTE PTR cs:[rcx],dh
   14001152b:	add    BYTE PTR [rsi],dh
   14001152d:	add    BYTE PTR [rbx],dh
   14001152f:	add    BYTE PTR [rax],bh
   140011531:	add    BYTE PTR [rax+rax*1],dh
   140011534:	and    BYTE PTR [rax],al
   140011536:	sub    BYTE PTR [rax],al
   140011538:	je     0x14001153a
   14001153a:	push   0x2e003100
   14001153f:	add    BYTE PTR [rcx],dh
   140011541:	add    BYTE PTR [rip+0x37003000],dh        # 0x177014547
   140011547:	add    BYTE PTR [rax],dh
   140011549:	add    BYTE PTR [rcx],bh
   14001154b:	add    BYTE PTR [rip+0x37003100],ch        # 0x177014651
   140011551:	add    BYTE PTR [rax],dh
   140011553:	add    BYTE PTR [rax],dh
   140011555:	add    BYTE PTR [rcx],ch
   140011557:	add    BYTE PTR [rax],al
   140011559:	add    BYTE PTR [rax],al
   14001155b:	add    BYTE PTR [rax],dh
   14001155d:	add    BYTE PTR [rax],cl
   14001155f:	add    BYTE PTR [rcx],al
   140011561:	add    BYTE PTR [rcx+0x0],cl
   140011564:	outs   dx,BYTE PTR ds:[rsi]
   140011565:	add    BYTE PTR [rax+rax*1+0x65],dh
   140011569:	add    BYTE PTR [rdx+0x0],dh
   14001156c:	outs   dx,BYTE PTR ds:[rsi]
   14001156d:	add    BYTE PTR [rcx+0x0],ah
   140011570:	ins    BYTE PTR es:[rdi],dx
   140011571:	add    BYTE PTR [rsi+0x0],cl
   140011574:	(bad)  
   140011575:	add    BYTE PTR [rbp+0x0],ch
   140011578:	add    BYTE PTR gs:[rax],al
   14001157b:	add    BYTE PTR [rbx+0x0],dh
   14001157e:	jb     0x140011580
   140011580:	je     0x140011582
   140011582:	(bad)  
   140011583:	add    BYTE PTR [rbx+0x0],dh
   140011586:	imul   eax,DWORD PTR [rax],0x73
   140011589:	add    BYTE PTR [rax],al
   14001158b:	add    BYTE PTR [rax+0x1002e00],al
   140011591:	add    BYTE PTR [rax+rax*1+0x65],cl
   140011595:	add    BYTE PTR [rdi+0x0],ah
   140011598:	(bad)  
   140011599:	add    BYTE PTR [rax+rax*1+0x43],ch
   14001159d:	add    BYTE PTR [rdi+0x0],ch
   1400115a0:	jo     0x1400115a2
   1400115a2:	jns    0x1400115a4
   1400115a4:	jb     0x1400115a6
   1400115a6:	imul   eax,DWORD PTR [rax],0x680067
   1400115ac:	je     0x1400115ae
   1400115ae:	add    BYTE PTR [rax],al
   1400115b0:	test   eax,0x4d002000
   1400115b5:	add    BYTE PTR [rcx+0x0],ch
   1400115b8:	movsxd eax,DWORD PTR [rax]
   1400115ba:	jb     0x1400115bc
   1400115bc:	outs   dx,DWORD PTR ds:[rsi]
   1400115bd:	add    BYTE PTR [rbx+0x0],dh
   1400115c0:	outs   dx,DWORD PTR ds:[rsi]
   1400115c1:	add    BYTE PTR [rsi+0x0],ah
   1400115c4:	je     0x1400115c6
   1400115c6:	and    BYTE PTR [rax],al
   1400115c8:	rex.XB add BYTE PTR [r15+0x0],bpl
   1400115cc:	jb     0x1400115ce
   1400115ce:	jo     0x1400115d0
   1400115d0:	outs   dx,DWORD PTR ds:[rsi]
   1400115d1:	add    BYTE PTR [rdx+0x0],dh
   1400115d4:	(bad)  
   1400115d5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400115d9:	add    BYTE PTR [rdi+0x0],ch
   1400115dc:	outs   dx,BYTE PTR ds:[rsi]
   1400115dd:	add    BYTE PTR [rsi],ch
   1400115df:	add    BYTE PTR [rax],ah
   1400115e1:	add    BYTE PTR [rcx+0x0],al
   1400115e4:	ins    BYTE PTR es:[rdi],dx
   1400115e5:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400115e9:	add    BYTE PTR [rdx+0x0],dh
   1400115ec:	imul   eax,DWORD PTR [rax],0x680067
   1400115f2:	je     0x1400115f4
   1400115f4:	jae    0x1400115f6
   1400115f6:	and    BYTE PTR [rax],al
   1400115f8:	jb     0x1400115fa
   1400115fa:	add    BYTE PTR gs:[rbx+0x0],dh
   1400115fe:	add    BYTE PTR gs:[rdx+0x0],dh
   140011602:	jbe    0x140011604
   140011604:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140011609:	add    BYTE PTR [rax],al
   14001160b:	add    BYTE PTR [rax+0x0],al
   14001160e:	or     al,0x0
   140011610:	add    DWORD PTR [rax],eax
   140011612:	rex.WRXB add BYTE PTR [r10+0x0],r14b
   140011616:	imul   eax,DWORD PTR [rax],0x690067
   14001161c:	outs   dx,BYTE PTR ds:[rsi]
   14001161d:	add    BYTE PTR [rcx+0x0],ah
   140011620:	ins    BYTE PTR es:[rdi],dx
   140011621:	add    BYTE PTR [rsi+0x0],al
   140011624:	imul   eax,DWORD PTR [rax],0x65006c
   14001162a:	outs   dx,BYTE PTR ds:[rsi]
   14001162b:	add    BYTE PTR [rcx+0x0],ah
   14001162e:	ins    DWORD PTR es:[rdi],dx
   14001162f:	add    BYTE PTR [rbp+0x0],ah
   140011632:	add    BYTE PTR [rax],al
   140011634:	jae    0x140011636
   140011636:	jb     0x140011638
   140011638:	je     0x14001163a
   14001163a:	(bad)  
   14001163b:	add    BYTE PTR [rbx+0x0],dh
   14001163e:	imul   eax,DWORD PTR [rax],0x73
   140011641:	add    BYTE PTR [rsi],ch
   140011643:	add    BYTE PTR [rbp+0x0],ah
   140011646:	js     0x140011648
   140011648:	add    BYTE PTR gs:[rax],al
   14001164b:	add    BYTE PTR [rdx+0x0],ch
   14001164e:	and    eax,0x50000100
   140011653:	add    BYTE PTR [rdx+0x0],dh
   140011656:	outs   dx,DWORD PTR ds:[rsi]
   140011657:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001165b:	add    BYTE PTR [rbx+0x0],ah
   14001165e:	je     0x140011660
   140011660:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011664:	ins    DWORD PTR es:[rdi],dx
   140011665:	add    BYTE PTR [rbp+0x0],ah
   140011668:	add    BYTE PTR [rax],al
   14001166a:	add    BYTE PTR [rax],al
   14001166c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011670:	movsxd eax,DWORD PTR [rax]
   140011672:	jb     0x140011674
   140011674:	outs   dx,DWORD PTR ds:[rsi]
   140011675:	add    BYTE PTR [rbx+0x0],dh
   140011678:	outs   dx,DWORD PTR ds:[rsi]
   140011679:	add    BYTE PTR [rsi+0x0],ah
   14001167c:	je     0x14001167e
   14001167e:	scas   al,BYTE PTR es:[rdi]
   14001167f:	add    BYTE PTR [rax],ah
   140011681:	add    BYTE PTR [rdi+0x0],dl
   140011684:	imul   eax,DWORD PTR [rax],0x64006e
   14001168a:	outs   dx,DWORD PTR ds:[rsi]
   14001168b:	add    BYTE PTR [rdi+0x0],dh
   14001168e:	jae    0x140011690
   140011690:	scas   al,BYTE PTR es:[rdi]
   140011691:	add    BYTE PTR [rax],ah
   140011693:	add    BYTE PTR [rdi+0x0],cl
   140011696:	jo     0x140011698
   140011698:	add    BYTE PTR gs:[rdx+0x0],dh
   14001169c:	(bad)  
   14001169d:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400116a1:	add    BYTE PTR [rsi+0x0],ch
   1400116a4:	add    BYTE PTR [eax],ah
   1400116a7:	add    BYTE PTR [rbx+0x0],dl
   1400116aa:	jns    0x1400116ac
   1400116ac:	jae    0x1400116ae
   1400116ae:	je     0x1400116b0
   1400116b0:	add    BYTE PTR gs:[rbp+0x0],ch
   1400116b4:	add    BYTE PTR [rax],al
   1400116b6:	add    BYTE PTR [rax],al
   1400116b8:	rex.RX add BYTE PTR [rcx],r10b
   1400116bb:	add    BYTE PTR [rcx],al
   1400116bd:	add    BYTE PTR [rax+0x0],dl
   1400116c0:	jb     0x1400116c2
   1400116c2:	outs   dx,DWORD PTR ds:[rsi]
   1400116c3:	add    BYTE PTR [rax+rax*1+0x75],ah
   1400116c7:	add    BYTE PTR [rbx+0x0],ah
   1400116ca:	je     0x1400116cc
   1400116cc:	push   rsi
   1400116cd:	add    BYTE PTR [rbp+0x0],ah
   1400116d0:	jb     0x1400116d2
   1400116d2:	jae    0x1400116d4
   1400116d4:	imul   eax,DWORD PTR [rax],0x6e006f
   1400116da:	add    BYTE PTR [rax],al
   1400116dc:	xor    DWORD PTR [rax],eax
   1400116de:	xor    BYTE PTR [rax],al
   1400116e0:	add    BYTE PTR cs:[rax],dh
   1400116e3:	add    BYTE PTR [rsi],ch
   1400116e5:	add    BYTE PTR [rcx],dh
   1400116e7:	add    BYTE PTR [rax],dh
   1400116e9:	add    BYTE PTR [rdx],dh
   1400116eb:	add    BYTE PTR [rax+rax*1],dh
   1400116ee:	xor    BYTE PTR [rax],al
   1400116f0:	add    BYTE PTR cs:[rcx],dh
   1400116f3:	add    BYTE PTR [rsi],dh
   1400116f5:	add    BYTE PTR [rbx],dh
   1400116f7:	add    BYTE PTR [rax],bh
   1400116f9:	add    BYTE PTR [rax+rax*1],dh
   1400116fc:	add    BYTE PTR [rax],al
   1400116fe:	add    BYTE PTR [rax],al
   140011700:	add    BYTE PTR [rax],r8b
   140011703:	add    BYTE PTR [rcx],al
   140011705:	add    BYTE PTR [rsi+0x0],dl
   140011708:	(bad)  
   140011709:	add    BYTE PTR [rdx+0x0],dh
   14001170c:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140011710:	ins    BYTE PTR es:[rdi],dx
   140011711:	add    BYTE PTR [rbp+0x0],ah
   140011714:	rex.WB add BYTE PTR [r14+0x0],bpl
   140011718:	data16 add BYTE PTR [rdi+0x0],ch
   14001171c:	add    BYTE PTR [rax],al
   14001171e:	add    BYTE PTR [rax],al
   140011720:	and    al,0x0
   140011722:	add    al,0x0
   140011724:	add    BYTE PTR [rax],al
   140011726:	push   rsp
   140011727:	add    BYTE PTR [rdx+0x0],dh
   14001172a:	(bad)  
   14001172b:	add    BYTE PTR [rsi+0x0],ch
   14001172e:	jae    0x140011730
   140011730:	ins    BYTE PTR es:[rdi],dx
   140011731:	add    BYTE PTR [rcx+0x0],ah
   140011734:	je     0x140011736
   140011736:	imul   eax,DWORD PTR [rax],0x6e006f
   14001173c:	add    BYTE PTR [rax],al
   14001173e:	add    BYTE PTR [rax],al
   140011740:	or     DWORD PTR [rax+rsi*4],eax
   140011743:	add    al,0x0
   140011745:	add    BYTE PTR [rax],al
   140011747:	add    ch,cl
   140011749:	dec    ch
   14001174b:	dec    al
   14001174d:	add    BYTE PTR [rax],al
   14001174f:	add    BYTE PTR [rax],al
   140011751:	add    BYTE PTR [rcx],al
   140011753:	add    BYTE PTR [rax],al
   140011755:	add    BYTE PTR [rax],al
   140011757:	add    BYTE PTR [rcx],dl
   140011759:	add    BYTE PTR [rax],al
   14001175b:	add    BYTE PTR [rax],al
   14001175d:	add    BYTE PTR [rax],al
   14001175f:	add    BYTE PTR [rdx],al
   140011761:	add    BYTE PTR [rax],al
   140011763:	add    dh,dh
   140011765:	xchg   sp,ax
   140011767:	jae    0x1400117bf
   140011769:	(bad)  
   14001176a:	push   rdi
   14001176b:	(bad)  
   14001176c:	retf   
   14001176d:	mov    ch,0x38
   14001176f:	sbb    BYTE PTR [rip+0xfffffffffa931889],cl        # 0x13a942ffe
   140011775:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011776:	adc    eax,0xde5bc517
   14001177b:	xor    ebp,ebp
   14001177d:	retf   
   14001177e:	(bad)  
   14001177f:	out    0x1a,al
   140011781:	xchg   ecx,eax
   140011782:	jmp    0x1400117d5
	...
   14001179c:	mov    BYTE PTR [rax],al
   14001179e:	add    BYTE PTR [rax],al
   1400117a0:	(bad)  
   1400117a1:	add    BYTE PTR [rax],al
   1400117a3:	add    BYTE PTR [rax+0x8000000],bl
   1400117a9:	add    BYTE PTR [rax],al
   1400117ab:	add    BYTE PTR [rax+0xe000000],ah
   1400117b1:	add    BYTE PTR [rax],al
   1400117b3:	add    BYTE PTR [rax+0x8000000],dh
	...
   1400117c1:	add    BYTE PTR [rax],al
   1400117c3:	add    BYTE PTR [rax+0xc000000],bh
   1400117c9:	add    BYTE PTR [rax],al
   1400117cb:	add    BYTE PTR [rax],al
   1400117cd:	add    BYTE PTR [rax],al
   1400117cf:	add    BYTE PTR [rbp+0x0],cl
   1400117d2:	push   rbp
   1400117d3:	add    BYTE PTR [rcx+0x0],cl
	...
   1400117de:	add    BYTE PTR [rax],al
   1400117e0:	adc    BYTE PTR [rax],al
   1400117e2:	add    BYTE PTR [rax],al
   1400117e4:	sbb    BYTE PTR [rax],al
   1400117e6:	add    BYTE PTR [rax],al
   1400117e8:	rex.WRB add BYTE PTR [r13+0x0],r10b
   1400117ec:	rex.WB add BYTE PTR [r8],al
	...
   1400117f7:	add    BYTE PTR [rsi],al
   1400117f9:	add    BYTE PTR [rax],al
   1400117fb:	add    BYTE PTR [rax],dl
   1400117fd:	add    BYTE PTR [rax],al
   1400117ff:	add    BYTE PTR [rbp+0x0],ah
   140011802:	outs   dx,BYTE PTR ds:[rsi]
   140011803:	add    BYTE PTR [rip+0x53005500],ch        # 0x193016d09
   140011809:	add    BYTE PTR [rax],al
   14001180b:	add    BYTE PTR [rax],al
   14001180d:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140012000 <.reloc>:
   140012000:	add    al,al
   140012002:	add    BYTE PTR [rax],al
   140012004:	sbb    BYTE PTR [rax],al
   140012006:	add    BYTE PTR [rax],al
   140012008:	nop
   140012009:	movabs ds:0xa3c8a3c0a3a8a398,eax
   140012012:	add    BYTE PTR [rax+rcx*1+0xa4],ah
   140012019:	rol    BYTE PTR [rax],1
   14001201b:	add    BYTE PTR [rax],dl
   14001201d:	add    BYTE PTR [rax],al
   14001201f:	add    BYTE PTR [rax-0x5e],bl
   140012022:	jo     0x140011fc6
   140012024:	js     0x140011fc8
   140012026:	and    BYTE PTR [rdx+0xf000],0xc
   14001202d:	add    BYTE PTR [rax],al
   14001202f:	add    BYTE PTR [rax],ah
   140012031:	.byte 0xa0
	...
