
04ffb8d60a17d6405a9408e73e9cabcdaf5e396f7c4784874dc49c353e97315b.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001018:	int3   
   140001019:	mov    WORD PTR [rax],es
   14000101b:	rex add DWORD PTR [rax],eax
   14000101e:	add    BYTE PTR [rax],al
   140001020:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140001022:	add    BYTE PTR [rax+0x1],al
   140001025:	add    BYTE PTR [rax],al
   140001027:	add    BYTE PTR [rdx+rsi*2+0x14000],al
	...
   14000103e:	add    BYTE PTR [rax],al
   140001040:	enter  0xf6,0x40
   140001044:	add    DWORD PTR [rax],eax
   140001046:	add    BYTE PTR [rax],al
   140001048:	sub    BYTE PTR [rax+0x14000],ch
	...
   140001072:	add    BYTE PTR [rax],al
   140001074:	rex.WXB cqo 
   140001076:	adc    BYTE PTR [rax+0x0],dl
   140001079:	add    BYTE PTR [rax],al
   14000107b:	add    BYTE PTR [rdx],al
   14000107d:	add    BYTE PTR [rax],al
   14000107f:	add    BYTE PTR [rip+0x30000000],ah        # 0x170001085
   140001085:	add    BYTE PTR ds:[rax],al
   140001088:	xor    BYTE PTR [rdx],dh
   14000108a:	add    BYTE PTR [rax],al
   14000108c:	add    BYTE PTR [rax],al
   14000108e:	add    BYTE PTR [rax],al
   140001090:	add    eax,0xbc00000
	...
   14000109d:	add    BYTE PTR [rax],al
   14000109f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c010a5
	...
   1400010ad:	add    BYTE PTR [rax],al
   1400010af:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   1400010bd:	add    BYTE PTR [rax],al
   1400010bf:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   1400010cd:	add    BYTE PTR [rax],al
   1400010cf:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   1400010dd:	add    BYTE PTR [rax],al
   1400010df:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   1400010ed:	add    BYTE PTR [rax],al
   1400010ef:	add    BYTE PTR [rax+0x8c00000],dl
	...
   1400010fd:	add    BYTE PTR [rax],al
   1400010ff:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   14000110d:	add    BYTE PTR [rax],al
   14000110f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   14000111d:	add    BYTE PTR [rax],al
   14000111f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   14000112d:	add    BYTE PTR [rax],al
   14000112f:	add    BYTE PTR [rbp+0x0],ch
   140001132:	jae    0x140001134
   140001134:	movsxd eax,DWORD PTR [rax]
   140001136:	outs   dx,DWORD PTR ds:[rsi]
   140001137:	add    BYTE PTR [rdx+0x0],dh
   14000113a:	add    BYTE PTR gs:[rbp+0x0],ah
   14000113e:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140001143:	add    BYTE PTR [rax+rax*1+0x0],ch
   140001147:	add    BYTE PTR [rbx+0x6f],al
   14000114a:	jb     0x140001191
   14000114c:	js     0x1400011b7
   14000114e:	je     0x1400011a0
   140001150:	jb     0x1400011c1
   140001152:	movsxd esp,DWORD PTR [rbp+0x73]
   140001155:	jae    0x140001157
	...
   14000115f:	add    BYTE PTR [rdx],al
   140001161:	add    BYTE PTR [rax],al
   140001163:	add    BYTE PTR [rax],al
   140001165:	add    BYTE PTR [rax],al
   140001167:	add    al,dl
   140001169:	adc    al,BYTE PTR [rax]
   14000116b:	rex add DWORD PTR [rax],eax
   14000116e:	add    BYTE PTR [rax],al
   140001170:	or     BYTE PTR [rax],al
   140001172:	add    BYTE PTR [rax],al
   140001174:	add    BYTE PTR [rax],al
   140001176:	add    BYTE PTR [rax],al
   140001178:	add    BYTE PTR [rbx],dl
   14000117a:	add    BYTE PTR [rax+0x1],al
   14000117d:	add    BYTE PTR [rax],al
   14000117f:	add    BYTE PTR [rcx],cl
   140001181:	add    BYTE PTR [rax],al
   140001183:	add    BYTE PTR [rax],al
   140001185:	add    BYTE PTR [rax],al
   140001187:	add    BYTE PTR [rax],dh
   140001189:	adc    eax,DWORD PTR [rax]
   14000118b:	rex add DWORD PTR [rax],eax
   14000118e:	add    BYTE PTR [rax],al
   140001190:	or     al,BYTE PTR [rax]
   140001192:	add    BYTE PTR [rax],al
   140001194:	add    BYTE PTR [rax],al
   140001196:	add    BYTE PTR [rax],al
   140001198:	(bad)  
   140001199:	adc    eax,DWORD PTR [rax]
   14000119b:	rex add DWORD PTR [rax],eax
   14000119e:	add    BYTE PTR [rax],al
   1400011a0:	adc    BYTE PTR [rax],al
   1400011a2:	add    BYTE PTR [rax],al
   1400011a4:	add    BYTE PTR [rax],al
   1400011a6:	add    BYTE PTR [rax],al
   1400011a8:	clc    
   1400011a9:	adc    eax,DWORD PTR [rax]
   1400011ab:	rex add DWORD PTR [rax],eax
   1400011ae:	add    BYTE PTR [rax],al
   1400011b0:	adc    DWORD PTR [rax],eax
   1400011b2:	add    BYTE PTR [rax],al
   1400011b4:	add    BYTE PTR [rax],al
   1400011b6:	add    BYTE PTR [rax],al
   1400011b8:	sub    BYTE PTR [rax+rax*1],dl
   1400011bb:	rex add DWORD PTR [rax],eax
   1400011be:	add    BYTE PTR [rax],al
   1400011c0:	adc    al,BYTE PTR [rax]
   1400011c2:	add    BYTE PTR [rax],al
   1400011c4:	add    BYTE PTR [rax],al
   1400011c6:	add    BYTE PTR [rax],al
   1400011c8:	pop    rax
   1400011c9:	adc    al,0x0
   1400011cb:	rex add DWORD PTR [rax],eax
   1400011ce:	add    BYTE PTR [rax],al
   1400011d0:	adc    eax,DWORD PTR [rax]
   1400011d2:	add    BYTE PTR [rax],al
   1400011d4:	add    BYTE PTR [rax],al
   1400011d6:	add    BYTE PTR [rax],al
   1400011d8:	adc    BYTE PTR [rax+rax*1],0x40
   1400011dc:	add    DWORD PTR [rax],eax
   1400011de:	add    BYTE PTR [rax],al
   1400011e0:	sbb    BYTE PTR [rax],al
   1400011e2:	add    BYTE PTR [rax],al
   1400011e4:	add    BYTE PTR [rax],al
   1400011e6:	add    BYTE PTR [rax],al
   1400011e8:	mov    al,0x14
   1400011ea:	add    BYTE PTR [rax+0x1],al
   1400011ed:	add    BYTE PTR [rax],al
   1400011ef:	add    BYTE PTR [rcx],bl
   1400011f1:	add    BYTE PTR [rax],al
   1400011f3:	add    BYTE PTR [rax],al
   1400011f5:	add    BYTE PTR [rax],al
   1400011f7:	add    al,ch
   1400011f9:	adc    al,0x0
   1400011fb:	rex add DWORD PTR [rax],eax
   1400011fe:	add    BYTE PTR [rax],al
   140001200:	sbb    al,BYTE PTR [rax]
   140001202:	add    BYTE PTR [rax],al
   140001204:	add    BYTE PTR [rax],al
   140001206:	add    BYTE PTR [rax],al
   140001208:	adc    BYTE PTR [rip+0x14000],dl        # 0x14001520e
   14000120e:	add    BYTE PTR [rax],al
   140001210:	sbb    eax,DWORD PTR [rax]
   140001212:	add    BYTE PTR [rax],al
   140001214:	add    BYTE PTR [rax],al
   140001216:	add    BYTE PTR [rax],al
   140001218:	adc    rax,0x14000
   14000121e:	add    BYTE PTR [rax],al
   140001220:	sbb    al,0x0
   140001222:	add    BYTE PTR [rax],al
   140001224:	add    BYTE PTR [rax],al
   140001226:	add    BYTE PTR [rax],al
   140001228:	adc    BYTE PTR [rip+0x14000],0x0        # 0x14001522f
   14000122f:	add    BYTE PTR [rsi],bl
   140001231:	add    BYTE PTR [rax],al
   140001233:	add    BYTE PTR [rax],al
   140001235:	add    BYTE PTR [rax],al
   140001237:	add    BYTE PTR [rax+0x1400015],ch
   14000123d:	add    BYTE PTR [rax],al
   14000123f:	add    BYTE PTR [rdi],bl
   140001241:	add    BYTE PTR [rax],al
   140001243:	add    BYTE PTR [rax],al
   140001245:	add    BYTE PTR [rax],al
   140001247:	add    al,dl
   140001249:	adc    eax,0x14000
   14000124e:	add    BYTE PTR [rax],al
   140001250:	and    BYTE PTR [rax],al
   140001252:	add    BYTE PTR [rax],al
   140001254:	add    BYTE PTR [rax],al
   140001256:	add    BYTE PTR [rax],al
   140001258:	cmp    BYTE PTR [rsi],dl
   14000125a:	add    BYTE PTR [rax+0x1],al
   14000125d:	add    BYTE PTR [rax],al
   14000125f:	add    BYTE PTR [rcx],ah
   140001261:	add    BYTE PTR [rax],al
   140001263:	add    BYTE PTR [rax],al
   140001265:	add    BYTE PTR [rax],al
   140001267:	add    BYTE PTR [rax+0x16],dh
   14000126a:	add    BYTE PTR [rax+0x1],al
   14000126d:	add    BYTE PTR [rax],al
   14000126f:	add    BYTE PTR [rdx],ah
   140001271:	add    BYTE PTR [rax],al
   140001273:	add    BYTE PTR [rax],al
   140001275:	add    BYTE PTR [rax],al
   140001277:	add    BYTE PTR [rax+0x17],dh
   14000127a:	add    BYTE PTR [rax+0x1],al
   14000127d:	add    BYTE PTR [rax],al
   14000127f:	add    BYTE PTR [rax+0x0],bh
   140001282:	add    BYTE PTR [rax],al
   140001284:	add    BYTE PTR [rax],al
   140001286:	add    BYTE PTR [rax],al
   140001288:	adc    BYTE PTR [rax],bl
   14000128a:	add    BYTE PTR [rax+0x1],al
   14000128d:	add    BYTE PTR [rax],al
   14000128f:	add    BYTE PTR [rcx+0x0],bh
   140001292:	add    BYTE PTR [rax],al
   140001294:	add    BYTE PTR [rax],al
   140001296:	add    BYTE PTR [rax],al
   140001298:	and    BYTE PTR [rax],bl
   14000129a:	add    BYTE PTR [rax+0x1],al
   14000129d:	add    BYTE PTR [rax],al
   14000129f:	add    BYTE PTR [rdx+0x0],bh
   1400012a2:	add    BYTE PTR [rax],al
   1400012a4:	add    BYTE PTR [rax],al
   1400012a6:	add    BYTE PTR [rax],al
   1400012a8:	xor    BYTE PTR [rax],bl
   1400012aa:	add    BYTE PTR [rax+0x1],al
   1400012ad:	add    BYTE PTR [rax],al
   1400012af:	add    ah,bh
   1400012b1:	add    BYTE PTR [rax],al
   1400012b3:	add    BYTE PTR [rax],al
   1400012b5:	add    BYTE PTR [rax],al
   1400012b7:	add    BYTE PTR [rax+0x18],al
   1400012ba:	add    BYTE PTR [rax+0x1],al
   1400012bd:	add    BYTE PTR [rax],al
   1400012bf:	add    bh,bh
   1400012c1:	add    BYTE PTR [rax],al
   1400012c3:	add    BYTE PTR [rax],al
   1400012c5:	add    BYTE PTR [rax],al
   1400012c7:	add    BYTE PTR [rax+0x18],cl
   1400012ca:	add    BYTE PTR [rax+0x1],al
   1400012cd:	add    BYTE PTR [rax],al
   1400012cf:	add    BYTE PTR [rdx+0x36],dl
   1400012d2:	xor    BYTE PTR [rax],dh
   1400012d4:	xor    cl,BYTE PTR [rip+0x66202d0a]        # 0x1a6203fe4
   1400012da:	ins    BYTE PTR es:[rdi],dx
   1400012db:	outs   dx,DWORD PTR ds:[rsi]
   1400012dc:	(bad)  
   1400012dd:	je     0x140001348
   1400012df:	outs   dx,BYTE PTR ds:[rsi]
   1400012e0:	and    BYTE PTR [eax+0x6f],dh
   1400012e4:	imul   ebp,DWORD PTR [rsi+0x74],0x70757320
   1400012eb:	jo     0x14000135c
   1400012ed:	jb     0x140001363
   1400012ef:	and    BYTE PTR [rsi+0x6f],ch
   1400012f2:	je     0x140001314
   1400012f4:	ins    BYTE PTR es:[rdi],dx
   1400012f5:	outs   dx,DWORD PTR ds:[rsi]
   1400012f6:	(bad)  
   1400012f7:	fs gs fs or eax,0xa
   1400012ff:	add    BYTE PTR [rdx+0x36],dl
   140001302:	xor    BYTE PTR [rax],dh
   140001304:	cmp    BYTE PTR [rip+0x6e202d0a],cl        # 0x1ae204014
   14000130a:	outs   dx,DWORD PTR ds:[rsi]
   14000130b:	je     0x14000132d
   14000130d:	outs   dx,BYTE PTR gs:[rsi]
   14000130f:	outs   dx,DWORD PTR ds:[rsi]
   140001310:	jne    0x140001379
   140001312:	push   0x61707320
   140001317:	movsxd esp,DWORD PTR [rbp+0x20]
   14000131a:	outs   dx,WORD PTR ds:[rsi]
   14000131c:	jb     0x14000133e
   14000131e:	(bad)  
   14000131f:	jb     0x140001388
   140001321:	jne    0x140001390
   140001323:	outs   dx,BYTE PTR gs:[rsi]
   140001325:	je     0x14000139a
   140001327:	or     eax,0xa
   14000132c:	add    BYTE PTR [rax],al
   14000132e:	add    BYTE PTR [rax],al
   140001330:	push   rdx
   140001331:	xor    BYTE PTR ss:[rax],dh
   140001334:	cmp    DWORD PTR [rip+0x6e202d0a],ecx        # 0x1ae204044
   14000133a:	outs   dx,DWORD PTR ds:[rsi]
   14000133b:	je     0x14000135d
   14000133d:	outs   dx,BYTE PTR gs:[rsi]
   14000133f:	outs   dx,DWORD PTR ds:[rsi]
   140001340:	jne    0x1400013a9
   140001342:	push   0x61707320
   140001347:	movsxd esp,DWORD PTR [rbp+0x20]
   14000134a:	outs   dx,WORD PTR ds:[rsi]
   14000134c:	jb     0x14000136e
   14000134e:	outs   dx,BYTE PTR gs:[rsi]
   140001350:	jbe    0x1400013bb
   140001352:	jb     0x1400013c3
   140001354:	outs   dx,BYTE PTR ds:[rsi]
   140001355:	ins    DWORD PTR es:[rdi],dx
   140001356:	outs   dx,BYTE PTR gs:[rsi]
   140001358:	je     0x140001367
   14000135a:	or     al,BYTE PTR [rax]
   14000135c:	add    BYTE PTR [rax],al
   14000135e:	add    BYTE PTR [rax],al
   140001360:	or     eax,0x6968540a
   140001365:	jae    0x140001387
   140001367:	(bad)  
   140001368:	jo     0x1400013da
   14000136a:	ins    BYTE PTR es:[rdi],dx
   14000136b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140001372:	and    BYTE PTR [rax+0x61],ch
   140001375:	jae    0x140001397
   140001377:	jb     0x1400013de
   140001379:	jno    0x1400013f0
   14000137b:	gs jae 0x1400013f2
   14000137e:	gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
   140001384:	and    BYTE PTR [rdx+0x75],dl
   140001387:	outs   dx,BYTE PTR ds:[rsi]
   140001388:	je     0x1400013f3
   14000138a:	ins    DWORD PTR es:[rdi],dx
   14000138b:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140001390:	je     0x1400013f7
   140001392:	jb     0x140001401
   140001394:	imul   ebp,DWORD PTR [rsi+0x61],0x69206574
   14000139b:	je     0x1400013bd
   14000139d:	imul   ebp,DWORD PTR [rsi+0x20],0x75206e61
   1400013a4:	outs   dx,BYTE PTR ds:[rsi]
   1400013a5:	jne    0x14000141a
   1400013a7:	jne    0x14000140a
   1400013a9:	ins    BYTE PTR es:[rdi],dx
   1400013aa:	and    BYTE PTR [rdi+0x61],dh
   1400013ad:	jns    0x1400013dd
   1400013af:	or     dl,BYTE PTR [rax+0x6c]
   1400013b2:	gs (bad) 
   1400013b4:	jae    0x14000141b
   1400013b6:	and    BYTE PTR [rbx+0x6f],ah
   1400013b9:	outs   dx,BYTE PTR ds:[rsi]
   1400013ba:	je     0x14000141d
   1400013bc:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
   1400013c0:	push   0x70612065
   1400013c5:	jo     0x140001433
   1400013c7:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400013ce:	(bad)  
   1400013cf:	jae    0x1400013f1
   1400013d1:	jae    0x140001448
   1400013d3:	jo     0x140001445
   1400013d5:	outs   dx,DWORD PTR ds:[rsi]
   1400013d6:	jb     0x14000144c
   1400013d8:	and    BYTE PTR [rbp+riz*2+0x61],dh
   1400013dc:	ins    DWORD PTR es:[rdi],dx
   1400013dd:	and    BYTE PTR [rsi+0x6f],ah
   1400013e0:	jb     0x140001402
   1400013e2:	ins    DWORD PTR es:[rdi],dx
   1400013e3:	outs   dx,DWORD PTR ds:[rsi]
   1400013e4:	jb     0x14000144b
   1400013e6:	and    BYTE PTR [rcx+0x6e],ch
   1400013e9:	outs   dx,WORD PTR ds:[rsi]
   1400013eb:	jb     0x14000145a
   1400013ed:	(bad)  
   1400013ee:	je     0x140001459
   1400013f0:	outs   dx,DWORD PTR ds:[rsi]
   1400013f1:	outs   dx,BYTE PTR ds:[rsi]
   1400013f2:	cs or  eax,0xa
   1400013f8:	push   rdx
   1400013f9:	xor    BYTE PTR ss:[rcx],dh
   1400013fc:	ss or  eax,0x6e202d0a
   140001402:	outs   dx,DWORD PTR ds:[rsi]
   140001403:	je     0x140001425
   140001405:	outs   dx,BYTE PTR gs:[rsi]
   140001407:	outs   dx,DWORD PTR ds:[rsi]
   140001408:	jne    0x140001471
   14000140a:	push   0x61707320
   14000140f:	movsxd esp,DWORD PTR [rbp+0x20]
   140001412:	outs   dx,WORD PTR ds:[rsi]
   140001414:	jb     0x140001436
   140001416:	je     0x140001480
   140001418:	jb     0x14000147f
   14000141a:	(bad)  
   14000141b:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
   140001420:	(bad)  
   140001421:	or     eax,0xa
   140001426:	add    BYTE PTR [rax],al
   140001428:	push   rdx
   140001429:	xor    BYTE PTR ss:[rcx],dh
   14000142c:	(bad)  
   14000142d:	or     eax,0x75202d0a
   140001432:	outs   dx,BYTE PTR ds:[rsi]
   140001433:	gs js  0x1400014a6
   140001436:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000143b:	and    BYTE PTR [rbp+0x75],ch
   14000143e:	ins    BYTE PTR es:[rdi],dx
   14000143f:	je     0x1400014aa
   140001441:	je     0x1400014ab
   140001443:	jb     0x1400014aa
   140001445:	(bad)  
   140001446:	and    BYTE PTR fs:[rdi+rbp*2+0x63],ch
   14000144b:	imul   esp,DWORD PTR [rax],0x65
   14000144e:	jb     0x1400014c2
   140001450:	outs   dx,DWORD PTR ds:[rsi]
   140001451:	jb     0x140001460
   140001453:	or     al,BYTE PTR [rax]
   140001455:	add    BYTE PTR [rax],al
   140001457:	add    BYTE PTR [rdx+0x36],dl
   14000145a:	xor    BYTE PTR [rcx],dh
   14000145c:	cmp    BYTE PTR [rip+0x75202d0a],cl        # 0x1b520416c
   140001462:	outs   dx,BYTE PTR ds:[rsi]
   140001463:	gs js  0x1400014d6
   140001466:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14000146b:	and    BYTE PTR [rax+0x65],ch
   14000146e:	(bad)  
   14000146f:	jo     0x140001491
   140001471:	gs jb  0x1400014e6
   140001474:	outs   dx,DWORD PTR ds:[rsi]
   140001475:	jb     0x140001484
   140001477:	or     al,BYTE PTR [rax]
   140001479:	add    BYTE PTR [rax],al
   14000147b:	add    BYTE PTR [rax],al
   14000147d:	add    BYTE PTR [rax],al
   14000147f:	add    BYTE PTR [rdx+0x36],dl
   140001482:	xor    BYTE PTR [rcx],dh
   140001484:	cmp    DWORD PTR [rip+0x75202d0a],ecx        # 0x1b5204194
   14000148a:	outs   dx,BYTE PTR ds:[rsi]
   14000148b:	(bad)  
   14000148c:	(bad)  
   14000148d:	ins    BYTE PTR es:[rdi],dx
   14000148e:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140001493:	outs   dx,DWORD PTR ds:[rsi]
   140001494:	jo     0x1400014fb
   140001496:	outs   dx,BYTE PTR ds:[rsi]
   140001497:	and    BYTE PTR [rbx+0x6f],ah
   14000149a:	outs   dx,BYTE PTR ds:[rsi]
   14000149b:	jae    0x14000150c
   14000149d:	ins    BYTE PTR es:[rdi],dx
   14000149e:	and    BYTE PTR gs:[rbp+riz*2+0x76],ah
   1400014a3:	imul   esp,DWORD PTR [rbx+0x65],0xa0d
   1400014aa:	add    BYTE PTR [rax],al
   1400014ac:	add    BYTE PTR [rax],al
   1400014ae:	add    BYTE PTR [rax],al
   1400014b0:	push   rdx
   1400014b1:	xor    BYTE PTR ss:[rdx],dh
   1400014b4:	xor    al,0xd
   1400014b6:	or     ch,BYTE PTR [rip+0x746f6e20]        # 0x1b46f82dc
   1400014bc:	and    BYTE PTR [rbp+0x6e],ah
   1400014bf:	outs   dx,DWORD PTR ds:[rsi]
   1400014c0:	jne    0x140001529
   1400014c2:	push   0x61707320
   1400014c7:	movsxd esp,DWORD PTR [rbp+0x20]
   1400014ca:	outs   dx,WORD PTR ds:[rsi]
   1400014cc:	jb     0x1400014ee
   1400014ce:	pop    rdi
   1400014cf:	outs   dx,DWORD PTR ds:[rsi]
   1400014d0:	outs   dx,BYTE PTR ds:[rsi]
   1400014d1:	gs js  0x14000153d
   1400014d4:	je     0x140001505
   1400014d6:	(bad)  
   1400014d7:	je     0x14000153e
   1400014d9:	js     0x140001544
   1400014db:	je     0x1400014fd
   1400014dd:	je     0x140001540
   1400014df:	(bad)  
   1400014e0:	ins    BYTE PTR es:[rdi],dx
   1400014e1:	gs or  eax,0xa
   1400014e7:	add    BYTE PTR [rdx+0x36],dl
   1400014ea:	xor    BYTE PTR [rdx],dh
   1400014ec:	xor    eax,0x202d0a0d
   1400014f1:	jo     0x140001568
   1400014f3:	jb     0x14000155a
   1400014f5:	and    BYTE PTR [rsi+0x69],dh
   1400014f8:	jb     0x14000156e
   1400014fa:	jne    0x14000155d
   1400014fc:	ins    BYTE PTR es:[rdi],dx
   1400014fd:	and    BYTE PTR [rsi+0x75],ah
   140001500:	outs   dx,BYTE PTR ds:[rsi]
   140001501:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140001505:	outs   dx,BYTE PTR ds:[rsi]
   140001506:	and    BYTE PTR [rbx+0x61],ah
   140001509:	ins    BYTE PTR es:[rdi],dx
   14000150a:	ins    BYTE PTR es:[rdi],dx
   14000150b:	or     eax,0xa
   140001510:	push   rdx
   140001511:	xor    BYTE PTR ss:[rdx],dh
   140001514:	ss or  eax,0x6e202d0a
   14000151a:	outs   dx,DWORD PTR ds:[rsi]
   14000151b:	je     0x14000153d
   14000151d:	outs   dx,BYTE PTR gs:[rsi]
   14000151f:	outs   dx,DWORD PTR ds:[rsi]
   140001520:	jne    0x140001589
   140001522:	push   0x61707320
   140001527:	movsxd esp,DWORD PTR [rbp+0x20]
   14000152a:	outs   dx,WORD PTR ds:[rsi]
   14000152c:	jb     0x14000154e
   14000152e:	jae    0x1400015a4
   140001530:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x74696e69
   140001538:	imul   esp,DWORD PTR [rcx+0x6c],0x74617a69
   14000153f:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d
   140001546:	add    BYTE PTR [rax],al
   140001548:	push   rdx
   140001549:	xor    BYTE PTR ss:[rdx],dh
   14000154c:	(bad)  
   14000154d:	or     eax,0x6e202d0a
   140001552:	outs   dx,DWORD PTR ds:[rsi]
   140001553:	je     0x140001575
   140001555:	outs   dx,BYTE PTR gs:[rsi]
   140001557:	outs   dx,DWORD PTR ds:[rsi]
   140001558:	jne    0x1400015c1
   14000155a:	push   0x61707320
   14000155f:	movsxd esp,DWORD PTR [rbp+0x20]
   140001562:	outs   dx,WORD PTR ds:[rsi]
   140001564:	jb     0x140001586
   140001566:	ins    BYTE PTR es:[rdi],dx
   140001567:	outs   dx,DWORD PTR ds:[rsi]
   140001568:	ja     0x1400015d3
   14000156a:	outs   dx,DWORD PTR ds:[rsi]
   14000156b:	and    BYTE PTR [rcx+0x6e],ch
   14000156e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   140001576:	je     0x1400015e1
   140001578:	outs   dx,DWORD PTR ds:[rsi]
   140001579:	outs   dx,BYTE PTR ds:[rsi]
   14000157a:	or     eax,0xa
   14000157f:	add    BYTE PTR [rdx+0x36],dl
   140001582:	xor    BYTE PTR [rdx],dh
   140001584:	cmp    BYTE PTR [rip+0x75202d0a],cl        # 0x1b5204294
   14000158a:	outs   dx,BYTE PTR ds:[rsi]
   14000158b:	(bad)  
   14000158c:	(bad)  
   14000158d:	ins    BYTE PTR es:[rdi],dx
   14000158e:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140001593:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000159a:	imul   edi,DWORD PTR [rdx+0x65],0x61656820
   1400015a1:	jo     0x1400015b0
   1400015a3:	or     al,BYTE PTR [rax]
   1400015a5:	add    BYTE PTR [rax],al
   1400015a7:	add    BYTE PTR [rdx+0x36],dl
   1400015aa:	xor    BYTE PTR [rbx],dh
   1400015ac:	xor    BYTE PTR [rip+0x43202d0a],cl        # 0x1832042bc
   1400015b2:	push   rdx
   1400015b3:	push   rsp
   1400015b4:	and    BYTE PTR [rsi+0x6f],ch
   1400015b7:	je     0x1400015d9
   1400015b9:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400015c0:	imul   edi,DWORD PTR [rdx+0x65],0xa0d64
	...
   1400015cf:	add    BYTE PTR [rdx+0x36],dl
   1400015d2:	xor    BYTE PTR [rbx],dh
   1400015d4:	xor    DWORD PTR [rip+0x41202d0a],ecx        # 0x1812042e4
   1400015da:	je     0x140001650
   1400015dc:	gs ins DWORD PTR es:[rdi],dx
   1400015de:	jo     0x140001654
   1400015e0:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400015e4:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400015eb:	imul   edi,DWORD PTR [rdx+0x65],0x65687420
   1400015f2:	and    BYTE PTR [rbx+0x52],al
   1400015f5:	push   rsp
   1400015f6:	and    BYTE PTR [rbp+0x6f],ch
   1400015f9:	jb     0x140001660
   1400015fb:	and    BYTE PTR [rax+rbp*2+0x61],dh
   1400015ff:	outs   dx,BYTE PTR ds:[rsi]
   140001600:	and    BYTE PTR [rdi+0x6e],ch
   140001603:	movsxd esp,DWORD PTR [rbp+0x2e]
   140001606:	or     dl,BYTE PTR [rax+rbp*2+0x69]
   14000160a:	jae    0x14000162c
   14000160c:	imul   ebp,DWORD PTR [rsi+0x64],0x74616369
   140001613:	gs jae 0x140001636
   140001616:	(bad)  
   140001617:	and    BYTE PTR [rdx+0x75],ah
   14000161a:	and    BYTE PTR [ecx+0x6e],ch
   14000161e:	and    BYTE PTR [rcx+0x6f],bh
   140001621:	jne    0x140001695
   140001623:	and    BYTE PTR [rcx+0x70],ah
   140001626:	jo     0x140001694
   140001628:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14000162f:	cs or  eax,0xa
   140001635:	add    BYTE PTR [rax],al
   140001637:	add    BYTE PTR [rdx+0x36],dl
   14000163a:	xor    BYTE PTR [rbx],dh
   14000163c:	xor    cl,BYTE PTR [rip+0x6e202d0a]        # 0x1ae20434c
   140001642:	outs   dx,DWORD PTR ds:[rsi]
   140001643:	je     0x140001665
   140001645:	outs   dx,BYTE PTR gs:[rsi]
   140001647:	outs   dx,DWORD PTR ds:[rsi]
   140001648:	jne    0x1400016b1
   14000164a:	push   0x61707320
   14000164f:	movsxd esp,DWORD PTR [rbp+0x20]
   140001652:	outs   dx,WORD PTR ds:[rsi]
   140001654:	jb     0x140001676
   140001656:	ins    BYTE PTR es:[rdi],dx
   140001657:	outs   dx,DWORD PTR ds:[rsi]
   140001658:	movsxd esp,DWORD PTR [rcx+0x6c]
   14000165b:	and    BYTE PTR gs:[rcx+0x6e],ch
   14000165f:	outs   dx,WORD PTR ds:[rsi]
   140001661:	jb     0x1400016d0
   140001663:	(bad)  
   140001664:	je     0x1400016cf
   140001666:	outs   dx,DWORD PTR ds:[rsi]
   140001667:	outs   dx,BYTE PTR ds:[rsi]
   140001668:	or     eax,0xa
   14000166d:	add    BYTE PTR [rax],al
   14000166f:	add    BYTE PTR [rdx+0x36],dl
   140001672:	xor    BYTE PTR [rbx],dh
   140001674:	xor    ecx,DWORD PTR [rip+0x41202d0a]        # 0x181204384
   14000167a:	je     0x1400016f0
   14000167c:	gs ins DWORD PTR es:[rdi],dx
   14000167e:	jo     0x1400016f4
   140001680:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140001684:	jne    0x1400016f9
   140001686:	and    BYTE PTR gs:[rbp+0x53],cl
   14000168a:	rex.WB
   14000168b:	rex.WR and BYTE PTR [rbx+0x6f],r12b
   14000168f:	fs and BYTE PTR gs:[rsi+0x72],ah
   140001694:	outs   dx,DWORD PTR ds:[rsi]
   140001695:	ins    DWORD PTR es:[rdi],dx
   140001696:	and    BYTE PTR [rax+rbp*2+0x69],dh
   14000169a:	jae    0x1400016bc
   14000169c:	(bad)  
   14000169d:	jae    0x140001712
   14000169f:	gs ins DWORD PTR es:[rdi],dx
   1400016a1:	(bad)  
   1400016a2:	ins    BYTE PTR es:[rdi],dx
   1400016a3:	jns    0x1400016c5
   1400016a5:	fs jne 0x14000171a
   1400016a8:	imul   ebp,DWORD PTR [rsi+0x67],0x74616e20
   1400016af:	imul   esi,DWORD PTR [rsi+0x65],0x646f6320
   1400016b6:	and    BYTE PTR gs:[rcx+0x6e],ch
   1400016ba:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   1400016c2:	je     0x14000172d
   1400016c4:	outs   dx,DWORD PTR ds:[rsi]
   1400016c5:	outs   dx,BYTE PTR ds:[rsi]
   1400016c6:	or     dl,BYTE PTR [rax+rbp*2+0x69]
   1400016ca:	jae    0x1400016ec
   1400016cc:	imul   ebp,DWORD PTR [rsi+0x64],0x74616369
   1400016d3:	gs jae 0x1400016f6
   1400016d6:	(bad)  
   1400016d7:	and    BYTE PTR [rdx+0x75],ah
   1400016da:	and    BYTE PTR [ecx+0x6e],ch
   1400016de:	and    BYTE PTR [rcx+0x6f],bh
   1400016e1:	jne    0x140001755
   1400016e3:	and    BYTE PTR [rcx+0x70],ah
   1400016e6:	jo     0x140001754
   1400016e8:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400016ef:	and    BYTE PTR cs:[rcx+0x74],cl
   1400016f3:	and    BYTE PTR [rcx+0x73],ch
   1400016f6:	and    BYTE PTR [rbp+0x6f],ch
   1400016f9:	jae    0x14000176f
   1400016fb:	and    BYTE PTR [rcx+rbp*2+0x6b],ch
   1400016ff:	gs ins BYTE PTR es:[rdi],dx
   140001701:	jns    0x140001723
   140001703:	je     0x14000176d
   140001705:	and    BYTE PTR gs:[rdx+0x65],dh
   140001709:	jae    0x140001780
   14000170b:	ins    BYTE PTR es:[rdi],dx
   14000170c:	je     0x14000172e
   14000170e:	outs   dx,DWORD PTR ds:[rsi]
   14000170f:	data16 and BYTE PTR [rbx+0x61],ah
   140001713:	ins    BYTE PTR es:[rdi],dx
   140001714:	ins    BYTE PTR es:[rdi],dx
   140001715:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6120
   14000171c:	rex.WRB push r11
   14000171e:	rex.WB
   14000171f:	rex.WR sub rax,0x706d6f63
   140001725:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x632f2820
   14000172d:	ins    BYTE PTR es:[rdi],dx
   14000172e:	jb     0x140001759
   140001730:	and    BYTE PTR [rsi+0x75],ah
   140001733:	outs   dx,BYTE PTR ds:[rsi]
   140001734:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140001738:	outs   dx,BYTE PTR ds:[rsi]
   140001739:	and    BYTE PTR [rsi+0x72],ah
   14000173c:	outs   dx,DWORD PTR ds:[rsi]
   14000173d:	ins    DWORD PTR es:[rdi],dx
   14000173e:	and    BYTE PTR [rcx+0x20],ah
   140001741:	outs   dx,BYTE PTR ds:[rsi]
   140001742:	(bad)  
   140001743:	je     0x1400017ae
   140001745:	jbe    0x1400017ac
   140001747:	and    BYTE PTR [rbx+0x6f],ah
   14000174a:	outs   dx,BYTE PTR ds:[rsi]
   14000174b:	jae    0x1400017c1
   14000174d:	jb     0x1400017c4
   14000174f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140001753:	and    BYTE PTR [rdi+0x72],ch
   140001756:	and    BYTE PTR [rsi+0x72],ah
   140001759:	outs   dx,DWORD PTR ds:[rsi]
   14000175a:	ins    DWORD PTR es:[rdi],dx
   14000175b:	and    BYTE PTR [rsp+rbp*2+0x6c],al
   14000175f:	rex.WRB (bad) 
   140001761:	imul   ebp,DWORD PTR [rsi+0x2e],0xa0d
	...
   140001770:	push   rdx
   140001771:	xor    BYTE PTR ss:[rbx],dh
   140001774:	xor    al,0xd
   140001776:	or     al,BYTE PTR [rcx+0x6e]
   140001779:	and    BYTE PTR [rcx+0x70],ah
   14000177c:	jo     0x1400017ea
   14000177e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140001785:	and    BYTE PTR [rax+0x61],ch
   140001788:	jae    0x1400017aa
   14000178a:	ins    DWORD PTR es:[rdi],dx
   14000178b:	(bad)  
   14000178c:	fs and BYTE PTR gs:[rcx+0x6e],ah
   140001791:	and    BYTE PTR [rcx+0x74],ah
   140001794:	je     0x1400017fb
   140001796:	ins    DWORD PTR es:[rdi],dx
   140001797:	jo     0x14000180d
   140001799:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000179d:	ins    BYTE PTR es:[rdi],dx
   14000179e:	outs   dx,DWORD PTR ds:[rsi]
   14000179f:	(bad)  
   1400017a0:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
   1400017a5:	and    BYTE PTR [rbx+0x20],al
   1400017a8:	jb     0x14000181f
   1400017aa:	outs   dx,BYTE PTR ds:[rsi]
   1400017ab:	je     0x140001816
   1400017ad:	ins    DWORD PTR es:[rdi],dx
   1400017ae:	and    BYTE PTR gs:[rcx+rbp*2+0x62],ch
   1400017b3:	jb     0x140001816
   1400017b5:	jb     0x140001830
   1400017b7:	and    BYTE PTR [rcx+0x6e],ch
   1400017ba:	movsxd ebp,DWORD PTR [rdi+0x72]
   1400017bd:	jb     0x140001824
   1400017bf:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
   1400017c3:	or     dl,BYTE PTR cs:[rax+0x6c]
   1400017c7:	gs (bad) 
   1400017c9:	jae    0x140001830
   1400017cb:	and    BYTE PTR [rbx+0x6f],ah
   1400017ce:	outs   dx,BYTE PTR ds:[rsi]
   1400017cf:	je     0x140001832
   1400017d1:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
   1400017d5:	push   0x70612065
   1400017da:	jo     0x140001848
   1400017dc:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400017e3:	(bad)  
   1400017e4:	jae    0x140001806
   1400017e6:	jae    0x14000185d
   1400017e8:	jo     0x14000185a
   1400017ea:	outs   dx,DWORD PTR ds:[rsi]
   1400017eb:	jb     0x140001861
   1400017ed:	and    BYTE PTR [rbp+riz*2+0x61],dh
   1400017f1:	ins    DWORD PTR es:[rdi],dx
   1400017f2:	and    BYTE PTR [rsi+0x6f],ah
   1400017f5:	jb     0x140001817
   1400017f7:	ins    DWORD PTR es:[rdi],dx
   1400017f8:	outs   dx,DWORD PTR ds:[rsi]
   1400017f9:	jb     0x140001860
   1400017fb:	and    BYTE PTR [rcx+0x6e],ch
   1400017fe:	outs   dx,WORD PTR ds:[rsi]
   140001800:	jb     0x14000186f
   140001802:	(bad)  
   140001803:	je     0x14000186e
   140001805:	outs   dx,DWORD PTR ds:[rsi]
   140001806:	outs   dx,BYTE PTR ds:[rsi]
   140001807:	cs or  eax,0xa
   14000180d:	add    BYTE PTR [rax],al
   14000180f:	add    BYTE PTR [rdi+rcx*2+0x4d],al
   140001813:	rex.B
   140001814:	rex.WB
   140001815:	rex.WRX and BYTE PTR [rbp+0x72],r12b
   140001819:	jb     0x14000188a
   14000181b:	jb     0x14000182a
   14000181d:	or     al,BYTE PTR [rax]
   14000181f:	add    BYTE PTR [rbx+0x49],dl
   140001822:	rex.WRX
   140001823:	rex.RXB and BYTE PTR [r13+0x72],r12b
   140001827:	jb     0x140001898
   140001829:	jb     0x140001838
   14000182b:	or     al,BYTE PTR [rax]
   14000182d:	add    BYTE PTR [rax],al
   14000182f:	add    BYTE PTR [rsp+rcx*2+0x4f],dl
   140001833:	push   rbx
   140001834:	push   rbx
   140001835:	and    BYTE PTR [rbp+0x72],ah
   140001838:	jb     0x1400018a9
   14000183a:	jb     0x140001849
   14000183c:	or     al,BYTE PTR [rax]
   14000183e:	add    BYTE PTR [rax],al
   140001840:	or     eax,0xa
   140001845:	add    BYTE PTR [rax],al
   140001847:	add    BYTE PTR [rdx+0x75],dh
   14000184a:	outs   dx,BYTE PTR ds:[rsi]
   14000184b:	je     0x1400018b6
   14000184d:	ins    DWORD PTR es:[rdi],dx
   14000184e:	and    BYTE PTR gs:[rbp+0x72],ah
   140001852:	jb     0x1400018c3
   140001854:	jb     0x140001876
   140001856:	add    BYTE PTR [rax],al
   140001858:	push   rdx
   140001859:	jne    0x1400018c9
   14000185b:	je     0x1400018c6
   14000185d:	ins    DWORD PTR es:[rdi],dx
   14000185e:	and    BYTE PTR gs:[rbp+0x72],al
   140001862:	jb     0x1400018d3
   140001864:	jb     0x140001887
   140001866:	or     cl,BYTE PTR [rdx]
   140001868:	push   rax
   140001869:	jb     0x1400018da
   14000186b:	addr32 jb 0x1400018cf
   14000186e:	ins    DWORD PTR es:[rdi],dx
   14000186f:	cmp    ah,BYTE PTR [rax]
   140001871:	add    BYTE PTR [rax],al
   140001873:	add    BYTE PTR [rax],al
   140001875:	add    BYTE PTR [rax],al
   140001877:	add    BYTE PTR [rax+rsi*2],bh
   14000187a:	jb     0x1400018eb
   14000187c:	addr32 jb 0x1400018e0
   14000187f:	ins    DWORD PTR es:[rdi],dx
   140001880:	and    BYTE PTR [rsi+0x61],ch
   140001883:	ins    DWORD PTR es:[rdi],dx
   140001884:	and    BYTE PTR gs:[rbp+0x6e],dh
   140001888:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000188c:	outs   dx,BYTE PTR ds:[rsi]
   14000188d:	add    BYTE PTR ds:[rax],al
   140001890:	or     cl,BYTE PTR [rdx]
   140001892:	add    BYTE PTR [rax],al
   140001894:	add    BYTE PTR [rax],al
   140001896:	add    BYTE PTR [rax],al
   140001898:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400018a0:	je     0x1400018c2
   1400018a2:	push   rsi
   1400018a3:	imul   esi,DWORD PTR [rbx+0x75],0x43206c61
   1400018aa:	sub    ebp,DWORD PTR [rbx]
   1400018ac:	and    BYTE PTR [rdx+0x75],dl
   1400018af:	outs   dx,BYTE PTR ds:[rsi]
   1400018b0:	je     0x14000191b
   1400018b2:	ins    DWORD PTR es:[rdi],dx
   1400018b3:	and    BYTE PTR gs:[rcx+rbp*2+0x62],cl
   1400018b8:	jb     0x14000191b
   1400018ba:	jb     0x140001935
   1400018bc:	add    BYTE PTR [rax],al
   1400018be:	add    BYTE PTR [rax],al
   1400018c0:	jo     0x1400018ec
   1400018c2:	add    DWORD PTR [rax+0x1],eax
   1400018c5:	add    BYTE PTR [rax],al
   1400018c7:	add    BYTE PTR [rax],dl
   1400018c9:	sub    eax,DWORD PTR [rcx]
   1400018cb:	rex add DWORD PTR [rax],eax
   1400018ce:	add    BYTE PTR [rax],al
   1400018d0:	add    DWORD PTR [rdx],eax
   1400018d2:	add    eax,DWORD PTR [rax*1+0x9080706]
   1400018d9:	or     cl,BYTE PTR [rbx]
   1400018db:	or     al,0xd
   1400018dd:	(bad)  
   1400018de:	movups xmm2,XMMWORD PTR [rcx]
   1400018e1:	adc    dl,BYTE PTR [rbx]
   1400018e3:	adc    al,0x15
   1400018e5:	(bad)  
   1400018e6:	(bad)  
   1400018e7:	sbb    BYTE PTR [rcx],bl
   1400018e9:	sbb    bl,BYTE PTR [rbx]
   1400018eb:	sbb    al,0x1d
   1400018ed:	(bad)  
   1400018ee:	(bad)  
   1400018ef:	and    BYTE PTR [rcx],ah
   1400018f1:	and    ah,BYTE PTR [rbx]
   1400018f3:	and    al,0x25
   1400018f5:	es (bad) 
   1400018f7:	sub    BYTE PTR [rcx],ch
   1400018f9:	sub    ch,BYTE PTR [rbx]
   1400018fb:	sub    al,0x2d
   1400018fd:	cs (bad) 
   1400018ff:	xor    BYTE PTR [rcx],dh
   140001901:	xor    dh,BYTE PTR [rbx]
   140001903:	xor    al,0x35
   140001905:	ss (bad) 
   140001907:	cmp    BYTE PTR [rcx],bh
   140001909:	cmp    bh,BYTE PTR [rbx]
   14000190b:	cmp    al,0x3d
   14000190d:	ds (bad) 
   14000190f:	rex
   140001910:	rex.B
   140001911:	rex.X
   140001912:	rex.XB
   140001913:	rex.R
   140001914:	rex.RB
   140001915:	rex.RX
   140001916:	rex.RXB
   140001917:	rex.W
   140001918:	rex.WB
   140001919:	rex.WX
   14000191a:	rex.WXB
   14000191b:	rex.WR
   14000191c:	rex.WRB
   14000191d:	rex.WRX
   14000191e:	rex.WRXB push r8
   140001920:	push   rcx
   140001921:	push   rdx
   140001922:	push   rbx
   140001923:	push   rsp
   140001924:	push   rbp
   140001925:	push   rsi
   140001926:	push   rdi
   140001927:	pop    rax
   140001928:	pop    rcx
   140001929:	pop    rdx
   14000192a:	pop    rbx
   14000192b:	pop    rsp
   14000192c:	pop    rbp
   14000192d:	pop    rsi
   14000192e:	pop    rdi
   14000192f:	(bad)  
   140001930:	(bad)  
   140001931:	(bad)
   140001936:	addr32 push 0x6c6b6a69
   14000193c:	ins    DWORD PTR es:[rdi],dx
   14000193d:	outs   dx,BYTE PTR ds:[rsi]
   14000193e:	outs   dx,DWORD PTR ds:[rsi]
   14000193f:	jo     0x1400019b2
   140001941:	jb     0x1400019b6
   140001943:	je     0x1400019ba
   140001945:	jbe    0x1400019be
   140001947:	js     0x1400019c2
   140001949:	jp     0x1400019c6
   14000194b:	jl     0x1400019ca
   14000194d:	jle    0x1400019ce
   14000194f:	add    BYTE PTR [rcx+0x6e],cl
   140001952:	jbe    0x1400019b5
   140001954:	ins    BYTE PTR es:[rdi],dx
   140001955:	imul   esp,DWORD PTR [rax+riz*1+0x70],0x6d617261
   14000195d:	gs je  0x1400019c5
   140001960:	jb     0x140001982
   140001962:	jo     0x1400019c5
   140001964:	jae    0x1400019d9
   140001966:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14000196c:	rex.XB and BYTE PTR [r10+0x75],sil
   140001970:	outs   dx,BYTE PTR ds:[rsi]
   140001971:	je     0x1400019dc
   140001973:	ins    DWORD PTR es:[rdi],dx
   140001974:	and    BYTE PTR gs:[rsi+0x75],ah
   140001978:	outs   dx,BYTE PTR ds:[rsi]
   140001979:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14000197d:	outs   dx,BYTE PTR ds:[rsi]
   14000197e:	or     al,BYTE PTR cs:[rax]
   140001981:	add    BYTE PTR [rax],al
   140001983:	add    BYTE PTR [rax],ch
   140001985:	outs   dx,BYTE PTR ds:[rsi]
   140001986:	jne    0x1400019f4
   140001988:	ins    BYTE PTR es:[rdi],dx
   140001989:	sub    DWORD PTR [rax],eax
   14000198b:	add    BYTE PTR [rax],al
   14000198d:	add    BYTE PTR [rax],al
   14000198f:	add    BYTE PTR [rax],ch
   140001991:	add    BYTE PTR [rsi+0x0],ch
   140001994:	jne    0x140001996
   140001996:	ins    BYTE PTR es:[rdi],dx
   140001997:	add    BYTE PTR [rax+rax*1+0x29],ch
   14000199b:	add    BYTE PTR [rax],al
   14000199d:	add    BYTE PTR [rax],al
   14000199f:	add    BYTE PTR [rbp+0x0],dl
   1400019a2:	push   rbx
   1400019a3:	add    BYTE PTR [rbp+0x0],al
   1400019a6:	push   rdx
   1400019a7:	add    BYTE PTR [rbx],dh
   1400019a9:	add    BYTE PTR [rdx],dh
   1400019ab:	add    BYTE PTR [rsi],ch
   1400019ad:	add    BYTE PTR [rax+rax*1+0x4c],al
   1400019b1:	add    BYTE PTR [rax+rax*1+0x0],cl
   1400019b5:	add    BYTE PTR [rax],al
   1400019b7:	add    BYTE PTR [rbp+0x65],cl
   1400019ba:	jae    0x140001a2f
   1400019bc:	(bad)  
   1400019bd:	rex.X outs dx,DWORD PTR gs:[esi]
   1400019c1:	js     0x140001a04
   1400019c3:	add    BYTE PTR [rax],al
   1400019c5:	add    BYTE PTR [rax],al
   1400019c7:	add    BYTE PTR [rdi+0x65],al
   1400019ca:	je     0x140001a0d
   1400019cc:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   1400019d0:	gs push rdi
   1400019d2:	imul   ebp,DWORD PTR [rsi+0x64],0x4700776f
   1400019d9:	gs je  0x140001a28
   1400019dc:	(bad)  
   1400019dd:	jae    0x140001a53
   1400019df:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   1400019e4:	gs push rax
   1400019e6:	outs   dx,DWORD PTR ds:[rsi]
   1400019e7:	jo     0x140001a5e
   1400019e9:	jo     0x1400019eb
   1400019eb:	add    BYTE PTR [rax],al
   1400019ed:	add    BYTE PTR [rax],al
   1400019ef:	add    BYTE PTR [rdi+0x65],al
   1400019f2:	je     0x140001a49
   1400019f4:	jae    0x140001a5b
   1400019f6:	jb     0x140001a47
   1400019f8:	(bad)  
   1400019f9:	push   0x65
   1400019fb:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   1400019ff:	outs   dx,WORD PTR ds:[rsi]
   140001a01:	jb     0x140001a70
   140001a03:	(bad)  
   140001a04:	je     0x140001a6f
   140001a06:	outs   dx,DWORD PTR ds:[rsi]
   140001a07:	outs   dx,BYTE PTR ds:[rsi]
   140001a08:	add    BYTE PTR [r8],al
   140001a0b:	add    BYTE PTR [rax],al
   140001a0d:	add    BYTE PTR [rax],al
   140001a0f:	add    BYTE PTR [rdi+0x65],al
   140001a12:	je     0x140001a64
   140001a14:	jb     0x140001a85
   140001a16:	movsxd esp,DWORD PTR [rbp+0x73]
   140001a19:	jae    0x140001a72
   140001a1b:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   140001a22:	(bad)  
   140001a23:	je     0x140001a8e
   140001a25:	outs   dx,DWORD PTR ds:[rsi]
   140001a26:	outs   dx,BYTE PTR ds:[rsi]
	...
   140001b2f:	add    BYTE PTR [rax],ah
   140001b31:	add    BYTE PTR [rax],ah
   140001b33:	add    BYTE PTR [rax],ah
   140001b35:	add    BYTE PTR [rax],ah
   140001b37:	add    BYTE PTR [rax],ah
   140001b39:	add    BYTE PTR [rax],ah
   140001b3b:	add    BYTE PTR [rax],ah
   140001b3d:	add    BYTE PTR [rax],ah
   140001b3f:	add    BYTE PTR [rax],ah
   140001b41:	add    BYTE PTR [rax],ch
   140001b43:	add    BYTE PTR [rax],ch
   140001b45:	add    BYTE PTR [rax],ch
   140001b47:	add    BYTE PTR [rax],ch
   140001b49:	add    BYTE PTR [rax],ch
   140001b4b:	add    BYTE PTR [rax],ah
   140001b4d:	add    BYTE PTR [rax],ah
   140001b4f:	add    BYTE PTR [rax],ah
   140001b51:	add    BYTE PTR [rax],ah
   140001b53:	add    BYTE PTR [rax],ah
   140001b55:	add    BYTE PTR [rax],ah
   140001b57:	add    BYTE PTR [rax],ah
   140001b59:	add    BYTE PTR [rax],ah
   140001b5b:	add    BYTE PTR [rax],ah
   140001b5d:	add    BYTE PTR [rax],ah
   140001b5f:	add    BYTE PTR [rax],ah
   140001b61:	add    BYTE PTR [rax],ah
   140001b63:	add    BYTE PTR [rax],ah
   140001b65:	add    BYTE PTR [rax],ah
   140001b67:	add    BYTE PTR [rax],ah
   140001b69:	add    BYTE PTR [rax],ah
   140001b6b:	add    BYTE PTR [rax],ah
   140001b6d:	add    BYTE PTR [rax],ah
   140001b6f:	add    BYTE PTR [rax+0x0],cl
   140001b72:	adc    BYTE PTR [rax],al
   140001b74:	adc    BYTE PTR [rax],al
   140001b76:	adc    BYTE PTR [rax],al
   140001b78:	adc    BYTE PTR [rax],al
   140001b7a:	adc    BYTE PTR [rax],al
   140001b7c:	adc    BYTE PTR [rax],al
   140001b7e:	adc    BYTE PTR [rax],al
   140001b80:	adc    BYTE PTR [rax],al
   140001b82:	adc    BYTE PTR [rax],al
   140001b84:	adc    BYTE PTR [rax],al
   140001b86:	adc    BYTE PTR [rax],al
   140001b88:	adc    BYTE PTR [rax],al
   140001b8a:	adc    BYTE PTR [rax],al
   140001b8c:	adc    BYTE PTR [rax],al
   140001b8e:	adc    BYTE PTR [rax],al
   140001b90:	test   BYTE PTR [rax],al
   140001b92:	test   BYTE PTR [rax],al
   140001b94:	test   BYTE PTR [rax],al
   140001b96:	test   BYTE PTR [rax],al
   140001b98:	test   BYTE PTR [rax],al
   140001b9a:	test   BYTE PTR [rax],al
   140001b9c:	test   BYTE PTR [rax],al
   140001b9e:	test   BYTE PTR [rax],al
   140001ba0:	test   BYTE PTR [rax],al
   140001ba2:	test   BYTE PTR [rax],al
   140001ba4:	adc    BYTE PTR [rax],al
   140001ba6:	adc    BYTE PTR [rax],al
   140001ba8:	adc    BYTE PTR [rax],al
   140001baa:	adc    BYTE PTR [rax],al
   140001bac:	adc    BYTE PTR [rax],al
   140001bae:	adc    BYTE PTR [rax],al
   140001bb0:	adc    BYTE PTR [rax],al
   140001bb2:	add    DWORD PTR [rax],0x810081
   140001bb8:	add    DWORD PTR [rax],0x810081
   140001bbe:	add    DWORD PTR [rax],eax
   140001bc0:	add    DWORD PTR [rax],eax
   140001bc2:	add    DWORD PTR [rax],eax
   140001bc4:	add    DWORD PTR [rax],eax
   140001bc6:	add    DWORD PTR [rax],eax
   140001bc8:	add    DWORD PTR [rax],eax
   140001bca:	add    DWORD PTR [rax],eax
   140001bcc:	add    DWORD PTR [rax],eax
   140001bce:	add    DWORD PTR [rax],eax
   140001bd0:	add    DWORD PTR [rax],eax
   140001bd2:	add    DWORD PTR [rax],eax
   140001bd4:	add    DWORD PTR [rax],eax
   140001bd6:	add    DWORD PTR [rax],eax
   140001bd8:	add    DWORD PTR [rax],eax
   140001bda:	add    DWORD PTR [rax],eax
   140001bdc:	add    DWORD PTR [rax],eax
   140001bde:	add    DWORD PTR [rax],eax
   140001be0:	add    DWORD PTR [rax],eax
   140001be2:	add    DWORD PTR [rax],eax
   140001be4:	add    DWORD PTR [rax],eax
   140001be6:	adc    BYTE PTR [rax],al
   140001be8:	adc    BYTE PTR [rax],al
   140001bea:	adc    BYTE PTR [rax],al
   140001bec:	adc    BYTE PTR [rax],al
   140001bee:	adc    BYTE PTR [rax],al
   140001bf0:	adc    BYTE PTR [rax],al
   140001bf2:	(bad)  
   140001bf3:	add    BYTE PTR [rdx-0x7dff7e00],al
   140001bf9:	add    BYTE PTR [rdx+0x2008200],al
   140001bff:	add    BYTE PTR [rdx],al
   140001c01:	add    BYTE PTR [rdx],al
   140001c03:	add    BYTE PTR [rdx],al
   140001c05:	add    BYTE PTR [rdx],al
   140001c07:	add    BYTE PTR [rdx],al
   140001c09:	add    BYTE PTR [rdx],al
   140001c0b:	add    BYTE PTR [rdx],al
   140001c0d:	add    BYTE PTR [rdx],al
   140001c0f:	add    BYTE PTR [rdx],al
   140001c11:	add    BYTE PTR [rdx],al
   140001c13:	add    BYTE PTR [rdx],al
   140001c15:	add    BYTE PTR [rdx],al
   140001c17:	add    BYTE PTR [rdx],al
   140001c19:	add    BYTE PTR [rdx],al
   140001c1b:	add    BYTE PTR [rdx],al
   140001c1d:	add    BYTE PTR [rdx],al
   140001c1f:	add    BYTE PTR [rdx],al
   140001c21:	add    BYTE PTR [rdx],al
   140001c23:	add    BYTE PTR [rdx],al
   140001c25:	add    BYTE PTR [rax],dl
   140001c27:	add    BYTE PTR [rax],dl
   140001c29:	add    BYTE PTR [rax],dl
   140001c2b:	add    BYTE PTR [rax],dl
   140001c2d:	add    BYTE PTR [rax],ah
	...
   140001d2f:	add    BYTE PTR [rax],al
   140001d31:	add    BYTE PTR [rax],ah
   140001d33:	add    BYTE PTR [rax],ah
   140001d35:	add    BYTE PTR [rax],ah
   140001d37:	add    BYTE PTR [rax],ah
   140001d39:	add    BYTE PTR [rax],ah
   140001d3b:	add    BYTE PTR [rax],ah
   140001d3d:	add    BYTE PTR [rax],ah
   140001d3f:	add    BYTE PTR [rax],ah
   140001d41:	add    BYTE PTR [rax],ah
   140001d43:	add    BYTE PTR [rax+0x0],ch
   140001d46:	sub    BYTE PTR [rax],al
   140001d48:	sub    BYTE PTR [rax],al
   140001d4a:	sub    BYTE PTR [rax],al
   140001d4c:	sub    BYTE PTR [rax],al
   140001d4e:	and    BYTE PTR [rax],al
   140001d50:	and    BYTE PTR [rax],al
   140001d52:	and    BYTE PTR [rax],al
   140001d54:	and    BYTE PTR [rax],al
   140001d56:	and    BYTE PTR [rax],al
   140001d58:	and    BYTE PTR [rax],al
   140001d5a:	and    BYTE PTR [rax],al
   140001d5c:	and    BYTE PTR [rax],al
   140001d5e:	and    BYTE PTR [rax],al
   140001d60:	and    BYTE PTR [rax],al
   140001d62:	and    BYTE PTR [rax],al
   140001d64:	and    BYTE PTR [rax],al
   140001d66:	and    BYTE PTR [rax],al
   140001d68:	and    BYTE PTR [rax],al
   140001d6a:	and    BYTE PTR [rax],al
   140001d6c:	and    BYTE PTR [rax],al
   140001d6e:	and    BYTE PTR [rax],al
   140001d70:	and    BYTE PTR [rax],al
   140001d72:	rex.W add BYTE PTR [rax],dl
   140001d75:	add    BYTE PTR [rax],dl
   140001d77:	add    BYTE PTR [rax],dl
   140001d79:	add    BYTE PTR [rax],dl
   140001d7b:	add    BYTE PTR [rax],dl
   140001d7d:	add    BYTE PTR [rax],dl
   140001d7f:	add    BYTE PTR [rax],dl
   140001d81:	add    BYTE PTR [rax],dl
   140001d83:	add    BYTE PTR [rax],dl
   140001d85:	add    BYTE PTR [rax],dl
   140001d87:	add    BYTE PTR [rax],dl
   140001d89:	add    BYTE PTR [rax],dl
   140001d8b:	add    BYTE PTR [rax],dl
   140001d8d:	add    BYTE PTR [rax],dl
   140001d8f:	add    BYTE PTR [rax],dl
   140001d91:	add    BYTE PTR [rax+rax*1+0x840084],al
   140001d98:	test   BYTE PTR [rax],al
   140001d9a:	test   BYTE PTR [rax],al
   140001d9c:	test   BYTE PTR [rax],al
   140001d9e:	test   BYTE PTR [rax],al
   140001da0:	test   BYTE PTR [rax],al
   140001da2:	test   BYTE PTR [rax],al
   140001da4:	test   BYTE PTR [rax],al
   140001da6:	adc    BYTE PTR [rax],al
   140001da8:	adc    BYTE PTR [rax],al
   140001daa:	adc    BYTE PTR [rax],al
   140001dac:	adc    BYTE PTR [rax],al
   140001dae:	adc    BYTE PTR [rax],al
   140001db0:	adc    BYTE PTR [rax],al
   140001db2:	adc    BYTE PTR [rax],al
   140001db4:	add    DWORD PTR [rcx],0x1810181
   140001dba:	add    DWORD PTR [rcx],0x1810181
   140001dc0:	add    DWORD PTR [rcx],eax
   140001dc2:	add    DWORD PTR [rcx],eax
   140001dc4:	add    DWORD PTR [rcx],eax
   140001dc6:	add    DWORD PTR [rcx],eax
   140001dc8:	add    DWORD PTR [rcx],eax
   140001dca:	add    DWORD PTR [rcx],eax
   140001dcc:	add    DWORD PTR [rcx],eax
   140001dce:	add    DWORD PTR [rcx],eax
   140001dd0:	add    DWORD PTR [rcx],eax
   140001dd2:	add    DWORD PTR [rcx],eax
   140001dd4:	add    DWORD PTR [rcx],eax
   140001dd6:	add    DWORD PTR [rcx],eax
   140001dd8:	add    DWORD PTR [rcx],eax
   140001dda:	add    DWORD PTR [rcx],eax
   140001ddc:	add    DWORD PTR [rcx],eax
   140001dde:	add    DWORD PTR [rcx],eax
   140001de0:	add    DWORD PTR [rcx],eax
   140001de2:	add    DWORD PTR [rcx],eax
   140001de4:	add    DWORD PTR [rcx],eax
   140001de6:	add    DWORD PTR [rcx],eax
   140001de8:	adc    BYTE PTR [rax],al
   140001dea:	adc    BYTE PTR [rax],al
   140001dec:	adc    BYTE PTR [rax],al
   140001dee:	adc    BYTE PTR [rax],al
   140001df0:	adc    BYTE PTR [rax],al
   140001df2:	adc    BYTE PTR [rax],al
   140001df4:	(bad)  
   140001df5:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   140001dfb:	add    DWORD PTR [rdx+0x2018201],eax
   140001e01:	add    DWORD PTR [rdx],eax
   140001e03:	add    DWORD PTR [rdx],eax
   140001e05:	add    DWORD PTR [rdx],eax
   140001e07:	add    DWORD PTR [rdx],eax
   140001e09:	add    DWORD PTR [rdx],eax
   140001e0b:	add    DWORD PTR [rdx],eax
   140001e0d:	add    DWORD PTR [rdx],eax
   140001e0f:	add    DWORD PTR [rdx],eax
   140001e11:	add    DWORD PTR [rdx],eax
   140001e13:	add    DWORD PTR [rdx],eax
   140001e15:	add    DWORD PTR [rdx],eax
   140001e17:	add    DWORD PTR [rdx],eax
   140001e19:	add    DWORD PTR [rdx],eax
   140001e1b:	add    DWORD PTR [rdx],eax
   140001e1d:	add    DWORD PTR [rdx],eax
   140001e1f:	add    DWORD PTR [rdx],eax
   140001e21:	add    DWORD PTR [rdx],eax
   140001e23:	add    DWORD PTR [rdx],eax
   140001e25:	add    DWORD PTR [rdx],eax
   140001e27:	add    DWORD PTR [rax],edx
   140001e29:	add    BYTE PTR [rax],dl
   140001e2b:	add    BYTE PTR [rax],dl
   140001e2d:	add    BYTE PTR [rax],dl
   140001e2f:	add    BYTE PTR [rax],ah
   140001e31:	add    BYTE PTR [rax],ah
   140001e33:	add    BYTE PTR [rax],ah
   140001e35:	add    BYTE PTR [rax],ah
   140001e37:	add    BYTE PTR [rax],ah
   140001e39:	add    BYTE PTR [rax],ah
   140001e3b:	add    BYTE PTR [rax],ah
   140001e3d:	add    BYTE PTR [rax],ah
   140001e3f:	add    BYTE PTR [rax],ah
   140001e41:	add    BYTE PTR [rax],ah
   140001e43:	add    BYTE PTR [rax],ah
   140001e45:	add    BYTE PTR [rax],ah
   140001e47:	add    BYTE PTR [rax],ah
   140001e49:	add    BYTE PTR [rax],ah
   140001e4b:	add    BYTE PTR [rax],ah
   140001e4d:	add    BYTE PTR [rax],ah
   140001e4f:	add    BYTE PTR [rax],ah
   140001e51:	add    BYTE PTR [rax],ah
   140001e53:	add    BYTE PTR [rax],ah
   140001e55:	add    BYTE PTR [rax],ah
   140001e57:	add    BYTE PTR [rax],ah
   140001e59:	add    BYTE PTR [rax],ah
   140001e5b:	add    BYTE PTR [rax],ah
   140001e5d:	add    BYTE PTR [rax],ah
   140001e5f:	add    BYTE PTR [rax],ah
   140001e61:	add    BYTE PTR [rax],ah
   140001e63:	add    BYTE PTR [rax],ah
   140001e65:	add    BYTE PTR [rax],ah
   140001e67:	add    BYTE PTR [rax],ah
   140001e69:	add    BYTE PTR [rax],ah
   140001e6b:	add    BYTE PTR [rax],ah
   140001e6d:	add    BYTE PTR [rax],ah
   140001e6f:	add    BYTE PTR [rax],ah
   140001e71:	add    BYTE PTR [rax+0x0],cl
   140001e74:	adc    BYTE PTR [rax],al
   140001e76:	adc    BYTE PTR [rax],al
   140001e78:	adc    BYTE PTR [rax],al
   140001e7a:	adc    BYTE PTR [rax],al
   140001e7c:	adc    BYTE PTR [rax],al
   140001e7e:	adc    BYTE PTR [rax],al
   140001e80:	adc    BYTE PTR [rax],al
   140001e82:	adc    BYTE PTR [rax],al
   140001e84:	adc    BYTE PTR [rax],al
   140001e86:	adc    BYTE PTR [rax],al
   140001e88:	adc    BYTE PTR [rax],al
   140001e8a:	adc    BYTE PTR [rax],al
   140001e8c:	adc    BYTE PTR [rax],al
   140001e8e:	adc    BYTE PTR [rax],al
   140001e90:	adc    BYTE PTR [rax],al
   140001e92:	adc    BYTE PTR [rax],al
   140001e94:	adc    BYTE PTR [rax],al
   140001e96:	adc    al,0x0
   140001e98:	adc    al,0x0
   140001e9a:	adc    BYTE PTR [rax],al
   140001e9c:	adc    BYTE PTR [rax],al
   140001e9e:	adc    BYTE PTR [rax],al
   140001ea0:	adc    BYTE PTR [rax],al
   140001ea2:	adc    BYTE PTR [rax],al
   140001ea4:	adc    al,0x0
   140001ea6:	adc    BYTE PTR [rax],al
   140001ea8:	adc    BYTE PTR [rax],al
   140001eaa:	adc    BYTE PTR [rax],al
   140001eac:	adc    BYTE PTR [rax],al
   140001eae:	adc    BYTE PTR [rax],al
   140001eb0:	adc    BYTE PTR [rax],al
   140001eb2:	add    DWORD PTR [rcx],eax
   140001eb4:	add    DWORD PTR [rcx],eax
   140001eb6:	add    DWORD PTR [rcx],eax
   140001eb8:	add    DWORD PTR [rcx],eax
   140001eba:	add    DWORD PTR [rcx],eax
   140001ebc:	add    DWORD PTR [rcx],eax
   140001ebe:	add    DWORD PTR [rcx],eax
   140001ec0:	add    DWORD PTR [rcx],eax
   140001ec2:	add    DWORD PTR [rcx],eax
   140001ec4:	add    DWORD PTR [rcx],eax
   140001ec6:	add    DWORD PTR [rcx],eax
   140001ec8:	add    DWORD PTR [rcx],eax
   140001eca:	add    DWORD PTR [rcx],eax
   140001ecc:	add    DWORD PTR [rcx],eax
   140001ece:	add    DWORD PTR [rcx],eax
   140001ed0:	add    DWORD PTR [rcx],eax
   140001ed2:	add    DWORD PTR [rcx],eax
   140001ed4:	add    DWORD PTR [rcx],eax
   140001ed6:	add    DWORD PTR [rcx],eax
   140001ed8:	add    DWORD PTR [rcx],eax
   140001eda:	add    DWORD PTR [rcx],eax
   140001edc:	add    DWORD PTR [rcx],eax
   140001ede:	add    DWORD PTR [rcx],eax
   140001ee0:	adc    BYTE PTR [rax],al
   140001ee2:	add    DWORD PTR [rcx],eax
   140001ee4:	add    DWORD PTR [rcx],eax
   140001ee6:	add    DWORD PTR [rcx],eax
   140001ee8:	add    DWORD PTR [rcx],eax
   140001eea:	add    DWORD PTR [rcx],eax
   140001eec:	add    DWORD PTR [rcx],eax
   140001eee:	add    DWORD PTR [rcx],eax
   140001ef0:	add    al,BYTE PTR [rcx]
   140001ef2:	add    al,BYTE PTR [rcx]
   140001ef4:	add    al,BYTE PTR [rcx]
   140001ef6:	add    al,BYTE PTR [rcx]
   140001ef8:	add    al,BYTE PTR [rcx]
   140001efa:	add    al,BYTE PTR [rcx]
   140001efc:	add    al,BYTE PTR [rcx]
   140001efe:	add    al,BYTE PTR [rcx]
   140001f00:	add    al,BYTE PTR [rcx]
   140001f02:	add    al,BYTE PTR [rcx]
   140001f04:	add    al,BYTE PTR [rcx]
   140001f06:	add    al,BYTE PTR [rcx]
   140001f08:	add    al,BYTE PTR [rcx]
   140001f0a:	add    al,BYTE PTR [rcx]
   140001f0c:	add    al,BYTE PTR [rcx]
   140001f0e:	add    al,BYTE PTR [rcx]
   140001f10:	add    al,BYTE PTR [rcx]
   140001f12:	add    al,BYTE PTR [rcx]
   140001f14:	add    al,BYTE PTR [rcx]
   140001f16:	add    al,BYTE PTR [rcx]
   140001f18:	add    al,BYTE PTR [rcx]
   140001f1a:	add    al,BYTE PTR [rcx]
   140001f1c:	add    al,BYTE PTR [rcx]
   140001f1e:	add    al,BYTE PTR [rcx]
   140001f20:	adc    BYTE PTR [rax],al
   140001f22:	add    al,BYTE PTR [rcx]
   140001f24:	add    al,BYTE PTR [rcx]
   140001f26:	add    al,BYTE PTR [rcx]
   140001f28:	add    al,BYTE PTR [rcx]
   140001f2a:	add    al,BYTE PTR [rcx]
   140001f2c:	add    al,BYTE PTR [rcx]
   140001f2e:	add    al,BYTE PTR [rcx]
   140001f30:	add    al,BYTE PTR [rcx]
   140001f32:	add    DWORD PTR [rcx],eax
	...
   140001f40:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140001f47:	xchg   DWORD PTR [rax-0x73747577],ecx
   140001f4d:	lea    ecx,[rsi-0x6d6e6f71]
   140001f53:	xchg   ebx,eax
   140001f54:	xchg   esp,eax
   140001f55:	xchg   ebp,eax
   140001f56:	xchg   esi,eax
   140001f57:	xchg   edi,eax
   140001f58:	cwde   
   140001f59:	cdq    
   140001f5a:	(bad)  
   140001f5b:	fwait
   140001f5c:	pushf  
   140001f5d:	popf   
   140001f5e:	sahf   
   140001f5f:	lahf   
   140001f60:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140001f69:	test   eax,0xadacabaa
   140001f6e:	scas   al,BYTE PTR es:[rdi]
   140001f6f:	scas   eax,DWORD PTR es:[rdi]
   140001f70:	mov    al,0xb1
   140001f72:	mov    dl,0xb3
   140001f74:	mov    ah,0xb5
   140001f76:	mov    dh,0xb7
   140001f78:	mov    eax,0xbcbbbab9
   140001f7d:	mov    ebp,0xc1c0bfbe
   140001f82:	ret    0xc4c3
   140001f85:	(bad)
   140001f88:	enter  0xcac9,0xcb
   140001f8c:	int3   
   140001f8d:	int    0xce
   140001f8f:	iret   
   140001f90:	rcl    cl,1
   140001f92:	rcl    bl,cl
   140001f94:	(bad)  
   140001f95:	(bad)  
   140001f96:	(bad)  
   140001f97:	xlat   BYTE PTR ds:[rbx]
   140001f98:	fcomp  st(1)
   140001f9a:	fcmovu st,st(3)
   140001f9c:	(bad)  
   140001f9e:	(bad)  
   140001fa0:	loopne 0x140001f83
   140001fa2:	loop   0x140001f87
   140001fa4:	in     al,0xe5
   140001fa6:	out    0xe7,al
   140001fa8:	call   0x12cec0a96
   140001fad:	in     eax,dx
   140001fae:	out    dx,al
   140001faf:	out    dx,eax
   140001fb0:	lock icebp 
   140001fb2:	repnz repz hlt 
   140001fb5:	cmc    
   140001fb6:	div    bh
   140001fb8:	clc    
   140001fb9:	stc    
   140001fba:	cli    
   140001fbb:	sti    
   140001fbc:	cld    
   140001fbd:	std    
   140001fbe:	(bad)  
   140001fbf:	inc    DWORD PTR [rax]
   140001fc1:	add    DWORD PTR [rdx],eax
   140001fc3:	add    eax,DWORD PTR [rax*1+0x9080706]
   140001fca:	or     cl,BYTE PTR [rbx]
   140001fcc:	or     al,0xd
   140001fce:	(bad)  
   140001fcf:	movups xmm2,XMMWORD PTR [rcx]
   140001fd2:	adc    dl,BYTE PTR [rbx]
   140001fd4:	adc    al,0x15
   140001fd6:	(bad)  
   140001fd7:	(bad)  
   140001fd8:	sbb    BYTE PTR [rcx],bl
   140001fda:	sbb    bl,BYTE PTR [rbx]
   140001fdc:	sbb    al,0x1d
   140001fde:	(bad)  
   140001fdf:	(bad)  
   140001fe0:	and    BYTE PTR [rcx],ah
   140001fe2:	and    ah,BYTE PTR [rbx]
   140001fe4:	and    al,0x25
   140001fe6:	es (bad) 
   140001fe8:	sub    BYTE PTR [rcx],ch
   140001fea:	sub    ch,BYTE PTR [rbx]
   140001fec:	sub    al,0x2d
   140001fee:	cs (bad) 
   140001ff0:	xor    BYTE PTR [rcx],dh
   140001ff2:	xor    dh,BYTE PTR [rbx]
   140001ff4:	xor    al,0x35
   140001ff6:	ss (bad) 
   140001ff8:	cmp    BYTE PTR [rcx],bh
   140001ffa:	cmp    bh,BYTE PTR [rbx]
   140001ffc:	cmp    al,0x3d
   140001ffe:	ds (bad) 
   140002000:	rex (bad) 
   140002002:	(bad)
   140002007:	addr32 push 0x6c6b6a69
   14000200d:	ins    DWORD PTR es:[rdi],dx
   14000200e:	outs   dx,BYTE PTR ds:[rsi]
   14000200f:	outs   dx,DWORD PTR ds:[rsi]
   140002010:	jo     0x140002083
   140002012:	jb     0x140002087
   140002014:	je     0x14000208b
   140002016:	jbe    0x14000208f
   140002018:	js     0x140002093
   14000201a:	jp     0x140002077
   14000201c:	pop    rsp
   14000201d:	pop    rbp
   14000201e:	pop    rsi
   14000201f:	pop    rdi
   140002020:	(bad)  
   140002021:	(bad)  
   140002022:	(bad)
   140002027:	addr32 push 0x6c6b6a69
   14000202d:	ins    DWORD PTR es:[rdi],dx
   14000202e:	outs   dx,BYTE PTR ds:[rsi]
   14000202f:	outs   dx,DWORD PTR ds:[rsi]
   140002030:	jo     0x1400020a3
   140002032:	jb     0x1400020a7
   140002034:	je     0x1400020ab
   140002036:	jbe    0x1400020af
   140002038:	js     0x1400020b3
   14000203a:	jp     0x1400020b7
   14000203c:	jl     0x1400020bb
   14000203e:	jle    0x1400020bf
   140002040:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   140002047:	xchg   DWORD PTR [rax-0x73747577],ecx
   14000204d:	lea    ecx,[rsi-0x6d6e6f71]
   140002053:	xchg   ebx,eax
   140002054:	xchg   esp,eax
   140002055:	xchg   ebp,eax
   140002056:	xchg   esi,eax
   140002057:	xchg   edi,eax
   140002058:	cwde   
   140002059:	cdq    
   14000205a:	(bad)  
   14000205b:	fwait
   14000205c:	pushf  
   14000205d:	popf   
   14000205e:	sahf   
   14000205f:	lahf   
   140002060:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   140002069:	test   eax,0xadacabaa
   14000206e:	scas   al,BYTE PTR es:[rdi]
   14000206f:	scas   eax,DWORD PTR es:[rdi]
   140002070:	mov    al,0xb1
   140002072:	mov    dl,0xb3
   140002074:	mov    ah,0xb5
   140002076:	mov    dh,0xb7
   140002078:	mov    eax,0xbcbbbab9
   14000207d:	mov    ebp,0xc1c0bfbe
   140002082:	ret    0xc4c3
   140002085:	(bad)
   140002088:	enter  0xcac9,0xcb
   14000208c:	int3   
   14000208d:	int    0xce
   14000208f:	iret   
   140002090:	rcl    cl,1
   140002092:	rcl    bl,cl
   140002094:	(bad)  
   140002095:	(bad)  
   140002096:	(bad)  
   140002097:	xlat   BYTE PTR ds:[rbx]
   140002098:	fcomp  st(1)
   14000209a:	fcmovu st,st(3)
   14000209c:	(bad)  
   14000209e:	(bad)  
   1400020a0:	loopne 0x140002083
   1400020a2:	loop   0x140002087
   1400020a4:	in     al,0xe5
   1400020a6:	out    0xe7,al
   1400020a8:	call   0x12cec0b96
   1400020ad:	in     eax,dx
   1400020ae:	out    dx,al
   1400020af:	out    dx,eax
   1400020b0:	lock icebp 
   1400020b2:	repnz repz hlt 
   1400020b5:	cmc    
   1400020b6:	div    bh
   1400020b8:	clc    
   1400020b9:	stc    
   1400020ba:	cli    
   1400020bb:	sti    
   1400020bc:	cld    
   1400020bd:	std    
   1400020be:	(bad)  
   1400020bf:	inc    DWORD PTR [rax-0x7b7c7d7f]
   1400020c5:	test   DWORD PTR [rsi-0x75767779],eax
   1400020cb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   1400020d2:	xchg   edx,eax
   1400020d3:	xchg   ebx,eax
   1400020d4:	xchg   esp,eax
   1400020d5:	xchg   ebp,eax
   1400020d6:	xchg   esi,eax
   1400020d7:	xchg   edi,eax
   1400020d8:	cwde   
   1400020d9:	cdq    
   1400020da:	(bad)  
   1400020db:	fwait
   1400020dc:	pushf  
   1400020dd:	popf   
   1400020de:	sahf   
   1400020df:	lahf   
   1400020e0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400020e9:	test   eax,0xadacabaa
   1400020ee:	scas   al,BYTE PTR es:[rdi]
   1400020ef:	scas   eax,DWORD PTR es:[rdi]
   1400020f0:	mov    al,0xb1
   1400020f2:	mov    dl,0xb3
   1400020f4:	mov    ah,0xb5
   1400020f6:	mov    dh,0xb7
   1400020f8:	mov    eax,0xbcbbbab9
   1400020fd:	mov    ebp,0xc1c0bfbe
   140002102:	ret    0xc4c3
   140002105:	(bad)
   140002108:	enter  0xcac9,0xcb
   14000210c:	int3   
   14000210d:	int    0xce
   14000210f:	iret   
   140002110:	rcl    cl,1
   140002112:	rcl    bl,cl
   140002114:	(bad)  
   140002115:	(bad)  
   140002116:	(bad)  
   140002117:	xlat   BYTE PTR ds:[rbx]
   140002118:	fcomp  st(1)
   14000211a:	fcmovu st,st(3)
   14000211c:	(bad)  
   14000211e:	(bad)  
   140002120:	loopne 0x140002103
   140002122:	loop   0x140002107
   140002124:	in     al,0xe5
   140002126:	out    0xe7,al
   140002128:	call   0x12cec0c16
   14000212d:	in     eax,dx
   14000212e:	out    dx,al
   14000212f:	out    dx,eax
   140002130:	lock icebp 
   140002132:	repnz repz hlt 
   140002135:	cmc    
   140002136:	div    bh
   140002138:	clc    
   140002139:	stc    
   14000213a:	cli    
   14000213b:	sti    
   14000213c:	cld    
   14000213d:	std    
   14000213e:	(bad)  
   14000213f:	inc    DWORD PTR [rax]
   140002141:	add    DWORD PTR [rdx],eax
   140002143:	add    eax,DWORD PTR [rax*1+0x9080706]
   14000214a:	or     cl,BYTE PTR [rbx]
   14000214c:	or     al,0xd
   14000214e:	(bad)  
   14000214f:	movups xmm2,XMMWORD PTR [rcx]
   140002152:	adc    dl,BYTE PTR [rbx]
   140002154:	adc    al,0x15
   140002156:	(bad)  
   140002157:	(bad)  
   140002158:	sbb    BYTE PTR [rcx],bl
   14000215a:	sbb    bl,BYTE PTR [rbx]
   14000215c:	sbb    al,0x1d
   14000215e:	(bad)  
   14000215f:	(bad)  
   140002160:	and    BYTE PTR [rcx],ah
   140002162:	and    ah,BYTE PTR [rbx]
   140002164:	and    al,0x25
   140002166:	es (bad) 
   140002168:	sub    BYTE PTR [rcx],ch
   14000216a:	sub    ch,BYTE PTR [rbx]
   14000216c:	sub    al,0x2d
   14000216e:	cs (bad) 
   140002170:	xor    BYTE PTR [rcx],dh
   140002172:	xor    dh,BYTE PTR [rbx]
   140002174:	xor    al,0x35
   140002176:	ss (bad) 
   140002178:	cmp    BYTE PTR [rcx],bh
   14000217a:	cmp    bh,BYTE PTR [rbx]
   14000217c:	cmp    al,0x3d
   14000217e:	ds (bad) 
   140002180:	rex
   140002181:	rex.B
   140002182:	rex.X
   140002183:	rex.XB
   140002184:	rex.R
   140002185:	rex.RB
   140002186:	rex.RX
   140002187:	rex.RXB
   140002188:	rex.W
   140002189:	rex.WB
   14000218a:	rex.WX
   14000218b:	rex.WXB
   14000218c:	rex.WR
   14000218d:	rex.WRB
   14000218e:	rex.WRX
   14000218f:	rex.WRXB push r8
   140002191:	push   rcx
   140002192:	push   rdx
   140002193:	push   rbx
   140002194:	push   rsp
   140002195:	push   rbp
   140002196:	push   rsi
   140002197:	push   rdi
   140002198:	pop    rax
   140002199:	pop    rcx
   14000219a:	pop    rdx
   14000219b:	pop    rbx
   14000219c:	pop    rsp
   14000219d:	pop    rbp
   14000219e:	pop    rsi
   14000219f:	pop    rdi
   1400021a0:	(bad)  
   1400021a1:	rex.B
   1400021a2:	rex.X
   1400021a3:	rex.XB
   1400021a4:	rex.R
   1400021a5:	rex.RB
   1400021a6:	rex.RX
   1400021a7:	rex.RXB
   1400021a8:	rex.W
   1400021a9:	rex.WB
   1400021aa:	rex.WX
   1400021ab:	rex.WXB
   1400021ac:	rex.WR
   1400021ad:	rex.WRB
   1400021ae:	rex.WRX
   1400021af:	rex.WRXB push r8
   1400021b1:	push   rcx
   1400021b2:	push   rdx
   1400021b3:	push   rbx
   1400021b4:	push   rsp
   1400021b5:	push   rbp
   1400021b6:	push   rsi
   1400021b7:	push   rdi
   1400021b8:	pop    rax
   1400021b9:	pop    rcx
   1400021ba:	pop    rdx
   1400021bb:	jnp    0x140002239
   1400021bd:	jge    0x14000223d
   1400021bf:	jg     0x140002141
   1400021c1:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   1400021cb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   1400021d2:	xchg   edx,eax
   1400021d3:	xchg   ebx,eax
   1400021d4:	xchg   esp,eax
   1400021d5:	xchg   ebp,eax
   1400021d6:	xchg   esi,eax
   1400021d7:	xchg   edi,eax
   1400021d8:	cwde   
   1400021d9:	cdq    
   1400021da:	(bad)  
   1400021db:	fwait
   1400021dc:	pushf  
   1400021dd:	popf   
   1400021de:	sahf   
   1400021df:	lahf   
   1400021e0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   1400021e9:	test   eax,0xadacabaa
   1400021ee:	scas   al,BYTE PTR es:[rdi]
   1400021ef:	scas   eax,DWORD PTR es:[rdi]
   1400021f0:	mov    al,0xb1
   1400021f2:	mov    dl,0xb3
   1400021f4:	mov    ah,0xb5
   1400021f6:	mov    dh,0xb7
   1400021f8:	mov    eax,0xbcbbbab9
   1400021fd:	mov    ebp,0xc1c0bfbe
   140002202:	ret    0xc4c3
   140002205:	(bad)
   140002208:	enter  0xcac9,0xcb
   14000220c:	int3   
   14000220d:	int    0xce
   14000220f:	iret   
   140002210:	rcl    cl,1
   140002212:	rcl    bl,cl
   140002214:	(bad)  
   140002215:	(bad)  
   140002216:	(bad)  
   140002217:	xlat   BYTE PTR ds:[rbx]
   140002218:	fcomp  st(1)
   14000221a:	fcmovu st,st(3)
   14000221c:	(bad)  
   14000221e:	(bad)  
   140002220:	loopne 0x140002203
   140002222:	loop   0x140002207
   140002224:	in     al,0xe5
   140002226:	out    0xe7,al
   140002228:	call   0x12cec0d16
   14000222d:	in     eax,dx
   14000222e:	out    dx,al
   14000222f:	out    dx,eax
   140002230:	lock icebp 
   140002232:	repnz repz hlt 
   140002235:	cmc    
   140002236:	div    bh
   140002238:	clc    
   140002239:	stc    
   14000223a:	cli    
   14000223b:	sti    
   14000223c:	cld    
   14000223d:	std    
   14000223e:	(bad)  
   14000223f:	call   QWORD PTR [rbx+0x75]
   140002242:	outs   dx,BYTE PTR ds:[rsi]
   140002243:	add    BYTE PTR [rbp+0x6f],cl
   140002246:	outs   dx,BYTE PTR ds:[rsi]
   140002247:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   14000224b:	add    BYTE PTR [rdi+0x65],dl
   14000224e:	add    BYTE PTR fs:[rax+rbp*2+0x75],dl
   140002253:	add    BYTE PTR [rsi+0x72],al
   140002256:	imul   eax,DWORD PTR [rax],0x746153
   14000225c:	push   rbx
   14000225d:	jne    0x1400022cd
   14000225f:	fs (bad) 
   140002261:	jns    0x140002263
   140002263:	add    BYTE PTR [rbp+0x6f],cl
   140002266:	outs   dx,BYTE PTR ds:[rsi]
   140002267:	fs (bad) 
   140002269:	jns    0x14000226b
   14000226b:	add    BYTE PTR [rax],al
   14000226d:	add    BYTE PTR [rax],al
   14000226f:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   140002273:	jae    0x1400022d9
   140002275:	(bad)  
   140002276:	jns    0x140002278
   140002278:	push   rdi
   140002279:	gs outs dx,BYTE PTR fs:[rsi]
   14000227c:	gs jae 0x1400022e3
   14000227f:	(bad)  
   140002280:	jns    0x140002282
   140002282:	add    BYTE PTR [rax],al
   140002284:	add    BYTE PTR [rax],al
   140002286:	add    BYTE PTR [rax],al
   140002288:	push   rsp
   140002289:	push   0x64737275
   14000228e:	(bad)  
   14000228f:	jns    0x140002291
   140002291:	add    BYTE PTR [rax],al
   140002293:	add    BYTE PTR [rsi+0x72],al
   140002296:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   14000229e:	add    BYTE PTR [rax],al
   1400022a0:	push   rbx
   1400022a1:	(bad)  
   1400022a2:	je     0x140002319
   1400022a4:	jb     0x14000230a
   1400022a6:	(bad)  
   1400022a7:	jns    0x1400022a9
   1400022a9:	add    BYTE PTR [rax],al
   1400022ab:	add    BYTE PTR [rdx+0x61],cl
   1400022ae:	outs   dx,BYTE PTR ds:[rsi]
   1400022af:	add    BYTE PTR [rsi+0x65],al
   1400022b2:	(bad)  
   1400022b3:	add    BYTE PTR [rbp+0x61],cl
   1400022b6:	jb     0x1400022b8
   1400022b8:	rex.B jo 0x14000232d
   1400022bb:	add    BYTE PTR [rbp+0x61],cl
   1400022be:	jns    0x1400022c0
   1400022c0:	rex.WX jne 0x140002331
   1400022c3:	add    BYTE PTR [rdx+0x75],cl
   1400022c6:	ins    BYTE PTR es:[rdi],dx
   1400022c7:	add    BYTE PTR [rcx+0x75],al
   1400022ca:	add    BYTE PTR [ebx+0x65],dl
   1400022ce:	jo     0x1400022d0
   1400022d0:	movsxd r14,DWORD PTR [r8+r8*1+0x4e]
   1400022d5:	outs   dx,DWORD PTR ds:[rsi]
   1400022d6:	jbe    0x1400022d8
   1400022d8:	rex.R
   1400022d9:	movsxd eax,DWORD PTR gs:[rax]
   1400022dc:	add    BYTE PTR [rax],al
   1400022de:	add    BYTE PTR [rax],al
   1400022e0:	rex.WX (bad) 
   1400022e2:	outs   dx,BYTE PTR ds:[rsi]
   1400022e3:	jne    0x140002346
   1400022e5:	jb     0x140002360
   1400022e7:	add    BYTE PTR [rsi+0x65],al
   1400022ea:	(bad)
   1400022ef:	jns    0x1400022f1
   1400022f1:	add    BYTE PTR [rax],al
   1400022f3:	add    BYTE PTR [rbp+0x61],cl
   1400022f6:	jb     0x14000235b
   1400022f8:	push   0x41000000
   1400022fd:	jo     0x140002371
   1400022ff:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6e754a00
   140002307:	add    BYTE PTR gs:[rax],al
   14000230a:	add    BYTE PTR [rax],al
   14000230c:	rex.WX jne 0x14000237b
   14000230f:	jns    0x140002311
   140002311:	add    BYTE PTR [rax],al
   140002313:	add    BYTE PTR [rcx+0x75],al
   140002316:	addr32 jne 0x14000238c
   140002319:	je     0x14000231b
   14000231b:	add    BYTE PTR [rax],al
   14000231d:	add    BYTE PTR [rax],al
   14000231f:	add    BYTE PTR [rbx+0x65],dl
   140002322:	jo     0x140002398
   140002324:	gs ins DWORD PTR es:[rdi],dx
   140002326:	(bad)  
   140002327:	gs jb  0x14000232a
   14000232a:	add    BYTE PTR [rax],al
   14000232c:	add    BYTE PTR [rax],al
   14000232e:	add    BYTE PTR [rax],al
   140002330:	movsxd r14,DWORD PTR [r15+r13*2+0x62]
   140002335:	gs jb  0x140002338
   140002338:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14000233a:	jbe    0x1400023a1
   14000233c:	ins    DWORD PTR es:[rdi],dx
   14000233d:	(bad)  
   14000233e:	gs jb  0x140002341
   140002341:	add    BYTE PTR [rax],al
   140002343:	add    BYTE PTR [rax],al
   140002345:	add    BYTE PTR [rax],al
   140002347:	add    BYTE PTR [rbp+riz*2+0x63],al
   14000234b:	gs ins DWORD PTR es:[rdi],dx
   14000234d:	(bad)  
   14000234e:	gs jb  0x140002351
   140002351:	add    BYTE PTR [rax],al
   140002353:	add    BYTE PTR [rcx+0x4d],al
   140002356:	add    BYTE PTR [rax],al
   140002358:	push   rax
   140002359:	rex.WRB add BYTE PTR [r8],r8b
   14000235c:	add    BYTE PTR [rax],al
   14000235e:	add    BYTE PTR [rax],al
   140002360:	rex.WRB
   140002361:	rex.WRB (bad) 
   140002363:	fs fs (bad) 
   140002366:	jns    0x1400023e1
	...
   140002370:	fs fs fs fs sub al,0x20
   140002376:	rex.WRB
   140002377:	rex.WRB
   140002378:	rex.WRB
   140002379:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   14000237e:	and    BYTE PTR [rcx+0x79],bh
   140002381:	jns    0x1400023fc
   140002383:	add    BYTE PTR [rax],al
   140002385:	add    BYTE PTR [rax],al
   140002387:	add    BYTE PTR [rax+0x48],cl
   14000238a:	cmp    ch,BYTE PTR [rbp+0x6d]
   14000238d:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   140002398:	push   rbx
   140002399:	add    BYTE PTR [rbp+0x0],dh
   14000239c:	outs   dx,BYTE PTR ds:[rsi]
   14000239d:	add    BYTE PTR [rax],al
   14000239f:	add    BYTE PTR [rbp+0x0],cl
   1400023a2:	outs   dx,DWORD PTR ds:[rsi]
   1400023a3:	add    BYTE PTR [rsi+0x0],ch
   1400023a6:	add    BYTE PTR [rax],al
   1400023a8:	push   rsp
   1400023a9:	add    BYTE PTR [rbp+0x0],dh
   1400023ac:	add    BYTE PTR gs:[rax],al
   1400023af:	add    BYTE PTR [rdi+0x0],dl
   1400023b2:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   1400023b7:	add    BYTE PTR [rax+rax*1+0x68],dl
   1400023bb:	add    BYTE PTR [rbp+0x0],dh
   1400023be:	add    BYTE PTR [rax],al
   1400023c0:	rex.RX add BYTE PTR [rdx+0x0],r14b
   1400023c4:	imul   eax,DWORD PTR [rax],0x530000
   1400023ca:	(bad)  
   1400023cb:	add    BYTE PTR [rax+rax*1+0x0],dh
   1400023cf:	add    BYTE PTR [rbx+0x0],dl
   1400023d2:	jne    0x1400023d4
   1400023d4:	outs   dx,BYTE PTR ds:[rsi]
   1400023d5:	add    BYTE PTR [rax+rax*1+0x61],ah
   1400023d9:	add    BYTE PTR [rcx+0x0],bh
   1400023dc:	add    BYTE PTR [rax],al
   1400023de:	add    BYTE PTR [rax],al
   1400023e0:	rex.WRB add BYTE PTR [r15+0x0],r13b
   1400023e4:	outs   dx,BYTE PTR ds:[rsi]
   1400023e5:	add    BYTE PTR [rax+rax*1+0x61],ah
   1400023e9:	add    BYTE PTR [rcx+0x0],bh
   1400023ec:	add    BYTE PTR [rax],al
   1400023ee:	add    BYTE PTR [rax],al
   1400023f0:	push   rsp
   1400023f1:	add    BYTE PTR [rbp+0x0],dh
   1400023f4:	add    BYTE PTR gs:[rbx+0x0],dh
   1400023f8:	add    BYTE PTR fs:[rcx+0x0],ah
   1400023fc:	jns    0x1400023fe
   1400023fe:	add    BYTE PTR [rax],al
   140002400:	push   rdi
   140002401:	add    BYTE PTR [rbp+0x0],ah
   140002404:	add    BYTE PTR fs:[rsi+0x0],ch
   140002408:	add    BYTE PTR gs:[rbx+0x0],dh
   14000240c:	add    BYTE PTR fs:[rcx+0x0],ah
   140002410:	jns    0x140002412
   140002412:	add    BYTE PTR [rax],al
   140002414:	add    BYTE PTR [rax],al
   140002416:	add    BYTE PTR [rax],al
   140002418:	push   rsp
   140002419:	add    BYTE PTR [rax+0x0],ch
   14000241c:	jne    0x14000241e
   14000241e:	jb     0x140002420
   140002420:	jae    0x140002422
   140002422:	add    BYTE PTR fs:[rcx+0x0],ah
   140002426:	jns    0x140002428
	...
   140002430:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140002434:	imul   eax,DWORD PTR [rax],0x610064
   14000243a:	jns    0x14000243c
   14000243c:	add    BYTE PTR [rax],al
   14000243e:	add    BYTE PTR [rax],al
   140002440:	push   rbx
   140002441:	add    BYTE PTR [rcx+0x0],ah
   140002444:	je     0x140002446
   140002446:	jne    0x140002448
   140002448:	jb     0x14000244a
   14000244a:	add    BYTE PTR fs:[rcx+0x0],ah
   14000244e:	jns    0x140002450
	...
   140002458:	rex.WX add BYTE PTR [rcx+0x0],spl
   14000245c:	outs   dx,BYTE PTR ds:[rsi]
   14000245d:	add    BYTE PTR [rax],al
   14000245f:	add    BYTE PTR [rsi+0x0],al
   140002462:	add    BYTE PTR gs:[rdx+0x0],ah
   140002466:	add    BYTE PTR [rax],al
   140002468:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000246c:	jb     0x14000246e
   14000246e:	add    BYTE PTR [rax],al
   140002470:	add    BYTE PTR [r8+0x0],sil
   140002474:	jb     0x140002476
   140002476:	add    BYTE PTR [rax],al
   140002478:	rex.WRB add BYTE PTR [r9+0x0],r12b
   14000247c:	jns    0x14000247e
   14000247e:	add    BYTE PTR [rax],al
   140002480:	rex.WX add BYTE PTR [rbp+0x0],sil
   140002484:	outs   dx,BYTE PTR ds:[rsi]
   140002485:	add    BYTE PTR [rax],al
   140002487:	add    BYTE PTR [rdx+0x0],cl
   14000248a:	jne    0x14000248c
   14000248c:	ins    BYTE PTR es:[rdi],dx
   14000248d:	add    BYTE PTR [rax],al
   14000248f:	add    BYTE PTR [rcx+0x0],al
   140002492:	jne    0x140002494
   140002494:	add    BYTE PTR [eax],al
   140002497:	add    BYTE PTR [rbx+0x0],dl
   14000249a:	add    BYTE PTR gs:[rax+0x0],dh
   14000249e:	add    BYTE PTR [rax],al
   1400024a0:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   1400024a4:	je     0x1400024a6
   1400024a6:	add    BYTE PTR [rax],al
   1400024a8:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   1400024ac:	jbe    0x1400024ae
   1400024ae:	add    BYTE PTR [rax],al
   1400024b0:	add    BYTE PTR [rbp+0x0],r12b
   1400024b4:	movsxd eax,DWORD PTR [rax]
   1400024b6:	add    BYTE PTR [rax],al
   1400024b8:	rex.WX add BYTE PTR [rcx+0x0],spl
   1400024bc:	outs   dx,BYTE PTR ds:[rsi]
   1400024bd:	add    BYTE PTR [rbp+0x0],dh
   1400024c0:	(bad)  
   1400024c1:	add    BYTE PTR [rdx+0x0],dh
   1400024c4:	jns    0x1400024c6
   1400024c6:	add    BYTE PTR [rax],al
   1400024c8:	rex.RX add BYTE PTR [rbp+0x0],r12b
   1400024cc:	(bad)  
   1400024cd:	add    BYTE PTR [rdx+0x0],dh
   1400024d0:	jne    0x1400024d2
   1400024d2:	(bad)  
   1400024d3:	add    BYTE PTR [rdx+0x0],dh
   1400024d6:	jns    0x1400024d8
	...
   1400024e0:	rex.WRB add BYTE PTR [r9+0x0],r12b
   1400024e4:	jb     0x1400024e6
   1400024e6:	movsxd eax,DWORD PTR [rax]
   1400024e8:	push   0x0
   1400024ed:	add    BYTE PTR [rax],al
   1400024ef:	add    BYTE PTR [rcx+0x0],al
   1400024f2:	jo     0x1400024f4
   1400024f4:	jb     0x1400024f6
   1400024f6:	imul   eax,DWORD PTR [rax],0x6c
   1400024fc:	add    BYTE PTR [rax],al
   1400024fe:	add    BYTE PTR [rax],al
   140002500:	rex.WX add BYTE PTR [rbp+0x0],sil
   140002504:	outs   dx,BYTE PTR ds:[rsi]
   140002505:	add    BYTE PTR [rbp+0x0],ah
	...
   140002510:	rex.WX add BYTE PTR [rbp+0x0],sil
   140002514:	ins    BYTE PTR es:[rdi],dx
   140002515:	add    BYTE PTR [rcx+0x0],bh
	...
   140002520:	add    BYTE PTR [r13+0x0],sil
   140002524:	add    BYTE PTR [ebp+0x0],dh
   140002528:	jae    0x14000252a
   14000252a:	je     0x14000252c
   14000252c:	add    BYTE PTR [rax],al
   14000252e:	add    BYTE PTR [rax],al
   140002530:	push   rbx
   140002531:	add    BYTE PTR [rbp+0x0],ah
   140002534:	jo     0x140002536
   140002536:	je     0x140002538
   140002538:	add    BYTE PTR gs:[rbp+0x0],ch
   14000253c:	(bad)  
   14000253d:	add    BYTE PTR [rbp+0x0],ah
   140002540:	jb     0x140002542
   140002542:	add    BYTE PTR [rax],al
   140002544:	add    BYTE PTR [rax],al
   140002546:	add    BYTE PTR [rax],al
   140002548:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   14000254c:	je     0x14000254e
   14000254e:	outs   dx,DWORD PTR ds:[rsi]
   14000254f:	add    BYTE PTR [rdx+0x0],ah
   140002552:	add    BYTE PTR gs:[rdx+0x0],dh
   140002556:	add    BYTE PTR [rax],al
   140002558:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   14000255c:	jbe    0x14000255e
   14000255e:	add    BYTE PTR gs:[rbp+0x0],ch
   140002562:	(bad)  
   140002563:	add    BYTE PTR [rbp+0x0],ah
   140002566:	jb     0x140002568
	...
   140002570:	add    BYTE PTR [rbp+0x0],r12b
   140002574:	movsxd eax,DWORD PTR [rax]
   140002576:	add    BYTE PTR gs:[rbp+0x0],ch
   14000257a:	(bad)  
   14000257b:	add    BYTE PTR [rbp+0x0],ah
   14000257e:	jb     0x140002580
   140002580:	add    BYTE PTR [rax],al
   140002582:	add    BYTE PTR [rax],al
   140002584:	add    BYTE PTR [r13+0x0],cl
   140002588:	add    BYTE PTR [rax],al
   14000258a:	add    BYTE PTR [rax],al
   14000258c:	push   rax
   14000258d:	add    BYTE PTR [rbp+0x0],cl
	...
   140002598:	rex.WRB add BYTE PTR [r13+0x0],r9b
   14000259c:	(bad)  
   14000259d:	add    BYTE PTR [rax+rax*1+0x64],ah
   1400025a1:	add    BYTE PTR [rdi],ch
   1400025a3:	add    BYTE PTR [rcx+0x0],bh
   1400025a6:	jns    0x1400025a8
	...
   1400025b0:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   1400025b5:	add    BYTE PTR [rax+rax*1+0x2c],ah
   1400025b9:	add    BYTE PTR [rax],ah
   1400025bb:	add    BYTE PTR [rbp+0x0],cl
   1400025be:	rex.WRB add BYTE PTR [r13+0x0],r9b
   1400025c2:	rex.WRB add BYTE PTR [r8],r12b
   1400025c5:	add    BYTE PTR [rax+rax*1+0x64],ah
   1400025c9:	add    BYTE PTR [rax+rax*1],ch
   1400025cc:	and    BYTE PTR [rax],al
   1400025ce:	jns    0x1400025d0
   1400025d0:	jns    0x1400025d2
   1400025d2:	jns    0x1400025d4
   1400025d4:	jns    0x1400025d6
   1400025d6:	add    BYTE PTR [rax],al
   1400025d8:	rex.W add BYTE PTR [rax+0x0],cl
   1400025dc:	cmp    al,BYTE PTR [rax]
   1400025de:	ins    DWORD PTR es:[rdi],dx
   1400025df:	add    BYTE PTR [rbp+0x0],ch
   1400025e2:	cmp    al,BYTE PTR [rax]
   1400025e4:	jae    0x1400025e6
   1400025e6:	jae    0x1400025e8
	...
   1400025f0:	(bad)  
   1400025f1:	add    BYTE PTR [rax],al
   1400025f3:	(bad)  
   1400025f4:	add    BYTE PTR [rcx],al
   1400025f6:	add    BYTE PTR [rax],al
   1400025f8:	adc    BYTE PTR [rax],al
   1400025fa:	add    eax,DWORD PTR [rsi]
   1400025fc:	add    BYTE PTR [rsi],al
   1400025fe:	add    dl,BYTE PTR [rax]
   140002600:	add    al,0x45
   140002602:	rex.RB
   140002603:	rex.RB add eax,0x5050505
   140002609:	xor    eax,0x500030
   14000260e:	add    BYTE PTR [rax],al
   140002610:	add    BYTE PTR [rax],ch
   140002612:	and    BYTE PTR [rax],bh
   140002614:	push   rax
   140002615:	pop    rax
   140002616:	(bad)  
   140002617:	or     BYTE PTR [rax],al
   140002619:	(bad)  
   14000261a:	xor    BYTE PTR [rax],dh
   14000261c:	push   rdi
   14000261d:	push   rax
   14000261e:	(bad)  
   14000261f:	add    BYTE PTR [rax],al
   140002621:	and    BYTE PTR [rax],ah
   140002623:	or     BYTE PTR [rax],al
   140002625:	add    BYTE PTR [rax],al
   140002627:	add    BYTE PTR [rax],cl
   140002629:	(bad)  
   14000262a:	push   0x60606060
   14000262f:	add    BYTE PTR [rax],al
   140002631:	js     0x1400026a3
   140002633:	js     0x1400026ad
   140002635:	js     0x1400026af
   140002637:	or     BYTE PTR [rdi],al
   140002639:	or     BYTE PTR [rax],al
   14000263b:	add    BYTE PTR [rdi],al
   14000263d:	add    BYTE PTR [rax],cl
   14000263f:	or     BYTE PTR [rax],cl
   140002641:	add    BYTE PTR [rax],al
   140002643:	or     BYTE PTR [rax],al
   140002645:	or     BYTE PTR [rax],al
   140002647:	(bad)  
   140002648:	or     BYTE PTR [rax],al
   14000264a:	add    BYTE PTR [rax],al
   14000264c:	add    BYTE PTR [rax],al
   14000264e:	add    BYTE PTR [rax],al
   140002650:	push   rbx
   140002651:	jne    0x1400026c1
   140002653:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140002655:	outs   dx,BYTE PTR ds:[rsi]
   140002656:	push   rsp
   140002657:	jne    0x1400026be
   140002659:	push   rdi
   14000265a:	gs fs push rsp
   14000265d:	push   0x69724675
   140002662:	push   rbx
   140002663:	(bad)  
   140002664:	je     0x140002666
   140002666:	add    BYTE PTR [rax],al
   140002668:	rex.WX (bad) 
   14000266a:	outs   dx,BYTE PTR ds:[rsi]
   14000266b:	rex.RX
   14000266c:	gs (bad) 
   14000266e:	rex.WRB (bad) 
   140002670:	jb     0x1400026b3
   140002672:	jo     0x1400026e6
   140002674:	rex.WRB (bad) 
   140002676:	jns    0x1400026c2
   140002678:	jne    0x1400026e8
   14000267a:	rex.WX jne 0x1400026e9
   14000267d:	rex.B jne 0x1400026e7
   140002680:	push   rbx
   140002681:	gs jo  0x1400026d3
   140002684:	movsxd esi,DWORD PTR [rsi+rcx*2+0x6f]
   140002688:	jbe    0x1400026ce
   14000268a:	movsxd eax,DWORD PTR gs:[rax]
   14000268d:	add    BYTE PTR [rax],al
   14000268f:	add    BYTE PTR [rsi],al
   140002691:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   140002698:	add    BYTE PTR [rax],dl
   14000269a:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   1400026a0:	adc    al,0x5
   1400026a2:	add    eax,0x85454545
   1400026a7:	test   DWORD PTR [rbp+0x30000005],eax
   1400026ad:	xor    BYTE PTR [rax+0x888050],al
   1400026b3:	or     BYTE PTR [rax],al
   1400026b5:	sub    BYTE PTR [rdi],ah
   1400026b7:	cmp    BYTE PTR [rax+0x57],dl
   1400026ba:	add    BYTE PTR [rax],0x7
   1400026bd:	add    BYTE PTR [rdi],dh
   1400026bf:	xor    BYTE PTR [rax],dh
   1400026c1:	push   rax
   1400026c2:	push   rax
   1400026c3:	mov    BYTE PTR [rax],al
   1400026c5:	add    BYTE PTR [rax],al
   1400026c7:	and    BYTE PTR [rax],ch
   1400026c9:	or     BYTE PTR [rax+0x8080],0x0
   1400026d0:	(bad)  
   1400026d1:	push   0x68686860
   1400026d6:	or     BYTE PTR [rax],cl
   1400026d8:	(bad)  
   1400026d9:	js     0x14000274b
   1400026db:	jo     0x140002754
   1400026dd:	jo     0x14000274f
   1400026df:	or     BYTE PTR [rax],cl
   1400026e1:	add    BYTE PTR [rax],al
   1400026e3:	or     BYTE PTR [rax],al
   1400026e5:	or     BYTE PTR [rax],al
   1400026e7:	(bad)  
   1400026e8:	or     BYTE PTR [rax],al
   1400026ea:	add    BYTE PTR [rax],al
   1400026ec:	add    BYTE PTR [rax],al
   1400026ee:	add    BYTE PTR [rax],al
   1400026f0:	(bad)  
   1400026f1:	(bad)  
   1400026f2:	(bad)  
   1400026f3:	call   FWORD PTR [rsi]
   1400026f5:	add    BYTE PTR [rax],al
   1400026f7:	add    BYTE PTR [rdx],bh
   1400026f9:	add    BYTE PTR [rax],al
   1400026fb:	add    BYTE PTR [rcx+0x0],bl
   1400026fe:	add    BYTE PTR [rax],al
   140002700:	ja     0x140002702
   140002702:	add    BYTE PTR [rax],al
   140002704:	xchg   esi,eax
   140002705:	add    BYTE PTR [rax],al
   140002707:	add    BYTE PTR [rax+rax*1+0xd30000],dh
   14000270e:	add    BYTE PTR [rax],al
   140002710:	repnz add BYTE PTR [rax],al
   140002713:	add    BYTE PTR [rax],dl
   140002715:	add    DWORD PTR [rax],eax
   140002717:	add    BYTE PTR [rdi],ch
   140002719:	add    DWORD PTR [rax],eax
   14000271b:	add    BYTE PTR [rbp+0x1],cl
   14000271e:	add    BYTE PTR [rax],al
   140002720:	ins    BYTE PTR es:[rdi],dx
   140002721:	add    DWORD PTR [rax],eax
   140002723:	add    BYTE PTR [rax],al
   140002725:	add    BYTE PTR [rax],al
   140002727:	add    bh,bh
   140002729:	(bad)  
   14000272a:	(bad)  
   14000272b:	call   FWORD PTR [rsi]
   14000272d:	add    BYTE PTR [rax],al
   14000272f:	add    BYTE PTR [rbx],bh
   140002731:	add    BYTE PTR [rax],al
   140002733:	add    BYTE PTR [rdx+0x0],bl
   140002736:	add    BYTE PTR [rax],al
   140002738:	js     0x14000273a
   14000273a:	add    BYTE PTR [rax],al
   14000273c:	xchg   edi,eax
   14000273d:	add    BYTE PTR [rax],al
   14000273f:	add    BYTE PTR [rbp-0x2c000000],dh
   140002745:	add    BYTE PTR [rax],al
   140002747:	add    bl,dh
   140002749:	add    BYTE PTR [rax],al
   14000274b:	add    BYTE PTR [rcx],dl
   14000274d:	add    DWORD PTR [rax],eax
   14000274f:	add    BYTE PTR [rax],dh
   140002751:	add    DWORD PTR [rax],eax
   140002753:	add    BYTE PTR [rsi+0x1],cl
   140002756:	add    BYTE PTR [rax],al
   140002758:	ins    DWORD PTR es:[rdi],dx
   140002759:	add    DWORD PTR [rax],eax
   14000275b:	add    BYTE PTR [rax],al
   14000275d:	add    BYTE PTR [rax],al
   14000275f:	add    BYTE PTR [rbx+0x0],al
   140002762:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140002766:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14000276a:	push   rsp
   14000276b:	add    BYTE PTR [rax+rax*1],ah
   14000276e:	add    BYTE PTR [rax],al
   140002770:	loopne 0x1400027a8
   140002772:	xchg   DWORD PTR [rcx+0x3d],esp
   140002775:	cmp    al,0xcf
   140002777:	adc    DWORD PTR [rcx+0xaa000c],eax
   14000277d:	cmp    BYTE PTR [rbx+0x6f4c4371],bl
   140002783:	outs   dx,DWORD PTR ds:[esi]
   140002785:	outs   dx,BYTE PTR ds:[rsi]
   140002786:	push   rbp
   140002787:	rex.WB
   140002788:	rex.W
   140002789:	gs ins BYTE PTR es:[rdi],dx
   14000278b:	jo     0x1400027f2
   14000278d:	jb     0x1400027c9
   14000278f:	cmp    al,BYTE PTR [rcx+0x64]
   140002792:	fs push rsp
   140002794:	outs   dx,DWORD PTR ds:[rsi]
   140002795:	rex.R
   140002796:	gs ins BYTE PTR es:[rdi],dx
   140002798:	(bad)  
   140002799:	jns    0x1400027e1
   14000279b:	jb     0x140002802
   14000279d:	imul   r14,QWORD PTR gs:[rbx+0x74],0x0
   1400027a6:	add    BYTE PTR [rax],al
   1400027a8:	pop    rbx
   1400027a9:	and    eax,0x205d7368
   1400027ae:	sub    eax,0x64255b20
   1400027b3:	pop    rbp
   1400027b4:	and    BYTE PTR [rsi+0x61],al
   1400027b7:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400027bf:	(bad)  
   1400027c0:	ins    BYTE PTR es:[rdi],dx
   1400027c1:	ins    BYTE PTR es:[rdi],dx
   1400027c2:	outs   dx,DWORD PTR ds:[rsi]
   1400027c3:	movsxd esp,DWORD PTR [rcx+0x74]
   1400027c6:	and    BYTE PTR gs:[rcx+0x74],ch
   1400027ca:	gs ins DWORD PTR es:[rdi],dx
   1400027cc:	add    BYTE PTR [rax],al
   1400027ce:	add    BYTE PTR [rax],al
   1400027d0:	rex.XB
   1400027d1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400027d3:	outs   dx,DWORD PTR ds:[esi]
   1400027d5:	outs   dx,BYTE PTR ds:[rsi]
   1400027d6:	push   rbp
   1400027d7:	rex.WB
   1400027d8:	rex.W
   1400027d9:	gs ins BYTE PTR es:[rdi],dx
   1400027db:	jo     0x140002842
   1400027dd:	jb     0x140002819
   1400027df:	cmp    al,BYTE PTR [rsi+0x69]
   1400027e2:	outs   dx,BYTE PTR ds:[rsi]
   1400027e3:	fs rex.XB push 0x57646c69
   1400027ea:	imul   ebp,DWORD PTR [rsi+0x64],0x5b00776f
   1400027f1:	and    eax,0x205d7368
   1400027f6:	sub    eax,0x78305b20
   1400027fb:	and    eax,0x5d583830
   140002800:	and    BYTE PTR [rsi+0x61],al
   140002803:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000280b:	addr32 gs je 0x14000282f
   14000280f:	movsxd ebp,DWORD PTR [rax+0x69]
   140002812:	ins    BYTE PTR es:[rdi],dx
   140002813:	and    BYTE PTR fs:[rbx+0x6f],ah
   140002817:	jne    0x140002887
   140002819:	je     0x14000281b
   14000281b:	add    BYTE PTR [rax],al
   14000281d:	add    BYTE PTR [rax],al
   14000281f:	add    BYTE PTR [rbx+0x25],bl
   140002822:	push   0x2d205d73
   140002827:	and    BYTE PTR [rsi+0x6f],cl
   14000282a:	and    BYTE PTR [rbx+0x68],ah
   14000282d:	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x66206e65
   140002835:	outs   dx,DWORD PTR ds:[rsi]
   140002836:	jb     0x140002858
   140002838:	jo     0x14000289b
   14000283a:	jb     0x1400028a1
   14000283c:	outs   dx,BYTE PTR ds:[rsi]
   14000283d:	je     0x14000283f
   14000283f:	add    BYTE PTR [rbx+0x25],bl
   140002842:	push   0x2d205d73
   140002847:	and    BYTE PTR [rbx+0x30],bl
   14000284a:	js     0x140002871
   14000284c:	xor    BYTE PTR [rax],bh
   14000284e:	pop    rax
   14000284f:	pop    rbp
   140002850:	and    BYTE PTR [rsi+0x61],al
   140002853:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000285b:	(bad)  
   14000285c:	ins    BYTE PTR es:[rdi],dx
   14000285d:	ins    BYTE PTR es:[rdi],dx
   14000285e:	outs   dx,DWORD PTR ds:[rsi]
   14000285f:	movsxd esp,DWORD PTR [rcx+0x74]
   140002862:	and    BYTE PTR gs:[rbp+0x65],ch
   140002866:	ins    DWORD PTR es:[rdi],dx
   140002867:	outs   dx,DWORD PTR ds:[rsi]
   140002868:	jb     0x1400028e3
   14000286a:	add    BYTE PTR [rax],al
   14000286c:	add    BYTE PTR [rax],al
   14000286e:	add    BYTE PTR [rax],al
   140002870:	pop    rbx
   140002871:	and    eax,0x205d7368
   140002876:	sub    eax,0x78305b20
   14000287b:	and    eax,0x5d583830
   140002880:	and    BYTE PTR [rsi+0x61],al
   140002883:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000288b:	addr32 gs je 0x1400028af
   14000288f:	movsxd ebp,DWORD PTR [rax+0x69]
   140002892:	ins    BYTE PTR es:[rdi],dx
   140002893:	fs jb  0x1400028fb
   140002896:	outs   dx,BYTE PTR ds:[rsi]
   140002897:	add    BYTE PTR [rbx+0x25],bl
   14000289a:	push   0x2d205d73
   14000289f:	and    BYTE PTR [rbx+0x30],bl
   1400028a2:	js     0x1400028c9
   1400028a4:	xor    BYTE PTR [rax],bh
   1400028a6:	pop    rax
   1400028a7:	pop    rbp
   1400028a8:	and    BYTE PTR [rbx+0x6f],al
   1400028ab:	jne    0x14000291b
   1400028ad:	je     0x140002922
   1400028af:	and    BYTE PTR [rdi+rbp*2+0x20],ah
   1400028b3:	outs   dx,BYTE PTR ds:[rsi]
   1400028b4:	outs   dx,DWORD PTR ds:[rsi]
   1400028b5:	je     0x1400028d7
   1400028b7:	ins    DWORD PTR es:[rdi],dx
   1400028b8:	(bad)  
   1400028b9:	je     0x14000291e
   1400028bb:	push   0x0
   1400028c0:	pop    rbx
   1400028c1:	and    eax,0x205d7368
   1400028c6:	sub    eax,0x78305b20
   1400028cb:	and    eax,0x5d583830
   1400028d0:	and    BYTE PTR [rsi+0x61],al
   1400028d3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400028db:	push   rcx
   1400028dc:	rex.WB add BYTE PTR [r8],al
   1400028df:	add    BYTE PTR [rbx+0x25],bl
   1400028e2:	push   0x2d205d73
   1400028e7:	and    BYTE PTR [rbx+0x30],bl
   1400028ea:	js     0x140002911
   1400028ec:	xor    BYTE PTR [rax],bh
   1400028ee:	pop    rax
   1400028ef:	pop    rbp
   1400028f0:	and    BYTE PTR [rbp+0x6e],dl
   1400028f3:	(bad)  
   1400028f4:	(bad)  
   1400028f5:	ins    BYTE PTR es:[rdi],dx
   1400028f6:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   1400028fb:	addr32 gs je 0x14000291f
   1400028ff:	jb     0x140002970
   140002901:	ins    BYTE PTR es:[rdi],dx
   140002902:	add    BYTE PTR gs:[rax],al
   140002905:	add    BYTE PTR [rax],al
   140002907:	add    BYTE PTR [rbx+0x25],bl
   14000290a:	push   0x2d205d73
   14000290f:	and    BYTE PTR [rbx+0x30],bl
   140002912:	js     0x140002939
   140002914:	xor    BYTE PTR [rax],bh
   140002916:	pop    rax
   140002917:	pop    rbp
   140002918:	and    BYTE PTR [rsi+0x61],al
   14000291b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002923:	addr32 gs je 0x140002947
   140002927:	jae    0x14000299d
   140002929:	(bad)  
   14000292a:	je     0x140002991
   14000292c:	add    BYTE PTR [rax],al
   14000292e:	add    BYTE PTR [rax],al
   140002930:	pop    rbx
   140002931:	and    eax,0x205d7368
   140002936:	sub    eax,0x78305b20
   14000293b:	and    eax,0x5d583830
   140002940:	and    BYTE PTR [rsi+0x61],al
   140002943:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000294b:	imul   bp,WORD PTR [rsi+0x64],0x6320
   140002951:	push   0x646c69
   140002956:	add    BYTE PTR [rax],al
   140002958:	pop    rbx
   140002959:	and    eax,0x205d7368
   14000295e:	sub    eax,0x78305b20
   140002963:	and    eax,0x5d583830
   140002968:	and    BYTE PTR [rbp+0x6e],dl
   14000296b:	(bad)  
   14000296c:	(bad)  
   14000296d:	ins    BYTE PTR es:[rdi],dx
   14000296e:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140002973:	addr32 gs je 0x140002997
   140002977:	outs   dx,BYTE PTR ds:[rsi]
   140002978:	(bad)  
   140002979:	ins    DWORD PTR es:[rdi],dx
   14000297a:	add    BYTE PTR gs:[rax],al
   14000297d:	add    BYTE PTR [rax],al
   14000297f:	add    BYTE PTR [rbx+0x25],bl
   140002982:	push   0x2d205d73
   140002987:	and    BYTE PTR [rbx+0x30],bl
   14000298a:	js     0x1400029b1
   14000298c:	xor    BYTE PTR [rax],bh
   14000298e:	pop    rax
   14000298f:	pop    rbp
   140002990:	and    BYTE PTR [rbx+0x65],dl
   140002993:	(bad)  
   140002994:	jb     0x1400029f9
   140002996:	push   0x69616620
   14000299b:	ins    BYTE PTR es:[rdi],dx
   14000299c:	gs add BYTE PTR fs:[rax],al
   1400029a0:	rex.XB
   1400029a1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400029a3:	outs   dx,DWORD PTR ds:[esi]
   1400029a5:	outs   dx,BYTE PTR ds:[rsi]
   1400029a6:	push   rbp
   1400029a7:	rex.WB
   1400029a8:	rex.W
   1400029a9:	gs ins BYTE PTR es:[rdi],dx
   1400029ab:	jo     0x140002a12
   1400029ad:	jb     0x1400029e9
   1400029af:	cmp    cl,BYTE PTR [rcx+0x73]
   1400029b2:	push   rbx
   1400029b3:	(bad)  
   1400029b4:	ins    DWORD PTR es:[rdi],dx
   1400029b5:	gs rex.WRX (bad) 
   1400029b8:	ins    DWORD PTR es:[rdi],dx
   1400029b9:	rex.B outs dx,BYTE PTR gs:[rsi]
   1400029bc:	fs push rdx
   1400029be:	outs   dx,DWORD PTR ds:[rsi]
   1400029bf:	ins    BYTE PTR es:[rdi],dx
   1400029c0:	add    BYTE PTR gs:[rax],al
   1400029c3:	add    BYTE PTR [rax],al
   1400029c5:	add    BYTE PTR [rax],al
   1400029c7:	add    BYTE PTR [rbx+0x25],bl
   1400029ca:	push   0x2d205d73
   1400029cf:	and    BYTE PTR [rbx+0x30],bl
   1400029d2:	js     0x1400029f9
   1400029d4:	xor    BYTE PTR [rax],bh
   1400029d6:	pop    rax
   1400029d7:	pop    rbp
   1400029d8:	and    BYTE PTR [rsi+0x61],al
   1400029db:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400029e3:	addr32 gs je 0x140002a07
   1400029e7:	jb     0x140002a58
   1400029e9:	ins    BYTE PTR es:[rdi],dx
   1400029ea:	add    BYTE PTR gs:[rax],al
   1400029ed:	add    BYTE PTR [rax],al
   1400029ef:	add    BYTE PTR [rbx+0x25],bl
   1400029f2:	push   0x2d205d73
   1400029f7:	and    BYTE PTR [rsi+0x6f],cl
   1400029fa:	je     0x140002a1c
   1400029fc:	jae    0x140002a5f
   1400029fe:	ins    DWORD PTR es:[rdi],dx
   1400029ff:	and    BYTE PTR gs:[rdx+0x6f],dh
   140002a03:	ins    BYTE PTR es:[rdi],dx
   140002a04:	add    BYTE PTR gs:[rax],al
   140002a07:	add    BYTE PTR [rbx+0x25],bl
   140002a0a:	push   0x2d205d73
   140002a0f:	and    BYTE PTR [rbx+0x30],bl
   140002a12:	js     0x140002a39
   140002a14:	xor    BYTE PTR [rax],bh
   140002a16:	pop    rax
   140002a17:	pop    rbp
   140002a18:	and    BYTE PTR [rsi+0x61],al
   140002a1b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002a23:	addr32 gs je 0x140002a47
   140002a27:	jbe    0x140002a8a
   140002a29:	ins    BYTE PTR es:[rdi],dx
   140002a2a:	jne    0x140002a91
   140002a2c:	add    BYTE PTR [rax],al
   140002a2e:	add    BYTE PTR [rax],al
   140002a30:	rex.XB
   140002a31:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140002a33:	outs   dx,DWORD PTR ds:[esi]
   140002a35:	outs   dx,BYTE PTR ds:[rsi]
   140002a36:	push   rbp
   140002a37:	rex.WB
   140002a38:	rex.W
   140002a39:	gs ins BYTE PTR es:[rdi],dx
   140002a3b:	jo     0x140002aa2
   140002a3d:	jb     0x140002a79
   140002a3f:	cmp    al,BYTE PTR [rsi+0x69]
   140002a42:	outs   dx,BYTE PTR ds:[rsi]
   140002a43:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140002a46:	outs   dx,DWORD PTR ds:[esi]
   140002a48:	outs   dx,BYTE PTR ds:[rsi]
   140002a49:	push   rbp
   140002a4a:	rex.WB push r10
   140002a4c:	gs jae 0x140002abe
   140002a4f:	jne    0x140002ac3
   140002a51:	movsxd esp,DWORD PTR [rbp+0x53]
   140002a54:	je     0x140002ac8
   140002a56:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   140002a5d:	add    BYTE PTR [rax],al
   140002a5f:	add    BYTE PTR [rbx+0x25],bl
   140002a62:	push   0x2d205d73
   140002a67:	and    BYTE PTR [rcx+0x74],al
   140002a6a:	je     0x140002ad1
   140002a6c:	ins    DWORD PTR es:[rdi],dx
   140002a6d:	jo     0x140002ae3
   140002a6f:	imul   ebp,DWORD PTR [rsi+0x67],0x616f6c20
   140002a76:	and    BYTE PTR fs:[rdi+0x66],ch
   140002a7a:	and    BYTE PTR [rbx+0x74],dh
   140002a7d:	jb     0x140002ae8
   140002a7f:	outs   dx,BYTE PTR ds:[rsi]
   140002a80:	and    BYTE PTR [edi],ah
   140002a83:	and    eax,0x2764
   140002a88:	pop    rbx
   140002a89:	and    eax,0x205d7368
   140002a8e:	sub    eax,0x64255b20
   140002a93:	pop    rbp
   140002a94:	and    BYTE PTR [rsi+0x61],al
   140002a97:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002a9f:	ins    BYTE PTR es:[rdi],dx
   140002aa0:	outs   dx,DWORD PTR ds:[rsi]
   140002aa1:	(bad)  
   140002aa2:	and    BYTE PTR fs:[rbx+0x74],dh
   140002aa6:	jb     0x140002b11
   140002aa8:	outs   dx,BYTE PTR ds:[rsi]
   140002aa9:	add    BYTE PTR [eax],al
   140002aac:	add    BYTE PTR [rax],al
   140002aae:	add    BYTE PTR [rax],al
   140002ab0:	pop    rbx
   140002ab1:	and    eax,0x205d7368
   140002ab6:	sub    eax,0x66754220
   140002abb:	data16 gs jb 0x140002adf
   140002abf:	jae    0x140002b2a
   140002ac1:	jp     0x140002b28
   140002ac3:	and    BYTE PTR fs:[rdi],ah
   140002ac6:	and    eax,0x63202764
   140002acb:	(bad)  
   140002acc:	outs   dx,BYTE PTR ds:[rsi]
   140002acd:	outs   dx,BYTE PTR ds:[rsi]
   140002ace:	outs   dx,DWORD PTR ds:[rsi]
   140002acf:	je     0x140002af1
   140002ad1:	push   0x20646c6f
   140002ad6:	(bad)  
   140002ad7:	and    eax,0x63202764
   140002adc:	push   0x63617261
   140002ae1:	je     0x140002b48
   140002ae3:	jb     0x140002b58
   140002ae5:	add    BYTE PTR [rax],al
   140002ae7:	add    BYTE PTR [rbx+0x25],bl
   140002aea:	push   0x2d205d73
   140002aef:	and    BYTE PTR [rbx+0x30],bl
   140002af2:	js     0x140002b19
   140002af4:	xor    BYTE PTR [rax],bh
   140002af6:	pop    rax
   140002af7:	pop    rbp
   140002af8:	and    BYTE PTR [rsi+0x61],al
   140002afb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002b03:	jae    0x140002b79
   140002b05:	outs   dx,DWORD PTR ds:[rsi]
   140002b06:	jb     0x140002b6d
   140002b08:	and    BYTE PTR [rbx+0x74],dh
   140002b0b:	jb     0x140002b76
   140002b0d:	outs   dx,BYTE PTR ds:[rsi]
   140002b0e:	add    BYTE PTR [ebx+0x25],bl
   140002b12:	push   0x2d205d73
   140002b17:	and    BYTE PTR [rcx+0x74],al
   140002b1a:	je     0x140002b81
   140002b1c:	ins    DWORD PTR es:[rdi],dx
   140002b1d:	jo     0x140002b93
   140002b1f:	imul   ebp,DWORD PTR [rsi+0x67],0x616f6c20
   140002b26:	and    BYTE PTR fs:[rdi+0x66],ch
   140002b2a:	and    BYTE PTR [rdi],ah
   140002b2c:	and    eax,0x66202764
   140002b31:	jb     0x140002ba2
   140002b33:	ins    DWORD PTR es:[rdi],dx
   140002b34:	and    BYTE PTR [rdi],ah
   140002b36:	and    eax,0x27736c
   140002b3b:	add    BYTE PTR [rax],al
   140002b3d:	add    BYTE PTR [rax],al
   140002b3f:	add    BYTE PTR [rbx+0x25],bl
   140002b42:	push   0x2d205d73
   140002b47:	and    BYTE PTR [rbx+0x25],bl
   140002b4a:	fs pop rbp
   140002b4c:	and    BYTE PTR [rsi+0x61],al
   140002b4f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002b57:	ins    BYTE PTR es:[rdi],dx
   140002b58:	outs   dx,DWORD PTR ds:[rsi]
   140002b59:	(bad)  
   140002b5a:	and    BYTE PTR fs:[rbp+0x6f],ch
   140002b5e:	fs jne 0x140002bcd
   140002b61:	add    BYTE PTR gs:[rax],al
   140002b64:	add    BYTE PTR [rax],al
   140002b66:	add    BYTE PTR [rax],al
   140002b68:	pop    rbx
   140002b69:	and    eax,0x205d7368
   140002b6e:	sub    eax,0x78305b20
   140002b73:	and    eax,0x5d583830
   140002b78:	and    BYTE PTR [rsi+0x61],al
   140002b7b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002b83:	ins    BYTE PTR es:[rdi],dx
   140002b84:	outs   dx,DWORD PTR ds:[rsi]
   140002b85:	(bad)  
   140002b86:	and    BYTE PTR fs:[rbx+0x74],dh
   140002b8a:	jb     0x140002bf5
   140002b8c:	outs   dx,BYTE PTR ds:[rsi]
   140002b8d:	add    BYTE PTR [eax],al
   140002b90:	add    BYTE PTR [r13+0x0],dl
   140002b94:	push   rsp
   140002b95:	add    BYTE PTR [rax+0x0],cl
   140002b98:	push   rbp
   140002b99:	add    BYTE PTR [rcx+0x0],cl
   140002b9c:	add    BYTE PTR cs:[rax+rax*1+0x4c],al
   140002ba1:	add    BYTE PTR [rax+rax*1+0x3a],cl
   140002ba5:	add    BYTE PTR [rax],ah
   140002ba7:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140002bab:	add    BYTE PTR [rdi+0x0],ah
   140002bae:	outs   dx,DWORD PTR ds:[rsi]
   140002baf:	add    BYTE PTR [rsi+0x0],ch
   140002bb2:	push   rbp
   140002bb3:	add    BYTE PTR [rcx+0x0],cl
   140002bb6:	and    BYTE PTR [rax],al
   140002bb8:	rex.WR add BYTE PTR [rdi+0x0],r13b
   140002bbc:	add    BYTE PTR [edi+0x0],ch
   140002bc0:	outs   dx,BYTE PTR ds:[rsi]
   140002bc1:	add    BYTE PTR [rax],ah
   140002bc3:	add    BYTE PTR [rdi+0x0],dl
   140002bc6:	imul   eax,DWORD PTR [rax],0x64006e
   140002bcc:	outs   dx,DWORD PTR ds:[rsi]
   140002bcd:	add    BYTE PTR [rdi+0x0],dh
	...
   140002bd8:	rex.XB
   140002bd9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140002bdb:	outs   dx,DWORD PTR ds:[esi]
   140002bdd:	outs   dx,BYTE PTR ds:[rsi]
   140002bde:	push   rbp
   140002bdf:	rex.WB
   140002be0:	rex.W
   140002be1:	gs ins BYTE PTR es:[rdi],dx
   140002be3:	jo     0x140002c4a
   140002be5:	jb     0x140002c21
   140002be7:	cmp    al,BYTE PTR [rsi+0x69]
   140002bea:	outs   dx,BYTE PTR ds:[rsi]
   140002beb:	fs push rdi
   140002bed:	imul   ebp,DWORD PTR [rsi+0x6c],0x6e6f676f
   140002bf4:	push   rdi
   140002bf5:	imul   ebp,DWORD PTR [rsi+0x64],0x73776f
   140002bfc:	add    BYTE PTR [rax],al
   140002bfe:	add    BYTE PTR [rax],al
   140002c00:	pop    rbx
   140002c01:	and    eax,0x205d7368
   140002c06:	sub    eax,0x6e614820
   140002c0b:	fs ins BYTE PTR es:[rdi],dx
   140002c0d:	and    BYTE PTR gs:[rdx+0x75],ah
   140002c11:	data16 data16 gs jb 0x140002c36
   140002c16:	imul   ebp,DWORD PTR [rsi+0x73],0x69666675
   140002c1d:	movsxd ebp,DWORD PTR [rcx+0x65]
   140002c20:	outs   dx,BYTE PTR ds:[rsi]
   140002c21:	je     0x140002c23
   140002c23:	add    BYTE PTR [rax],al
   140002c25:	add    BYTE PTR [rax],al
   140002c27:	add    BYTE PTR [rbx+0x4c],al
   140002c2a:	outs   dx,DWORD PTR ds:[rsi]
   140002c2b:	outs   dx,DWORD PTR ds:[esi]
   140002c2d:	outs   dx,BYTE PTR ds:[rsi]
   140002c2e:	push   rbp
   140002c2f:	rex.WB
   140002c30:	rex.W
   140002c31:	gs ins BYTE PTR es:[rdi],dx
   140002c33:	jo     0x140002c9a
   140002c35:	jb     0x140002c71
   140002c37:	cmp    al,BYTE PTR [rsi+0x69]
   140002c3a:	outs   dx,BYTE PTR ds:[rsi]
   140002c3b:	fs push rbp
   140002c3d:	rex.WB
   140002c3e:	rex.RB ins BYTE PTR es:[rdi],dx
   140002c40:	gs ins DWORD PTR es:[rdi],dx
   140002c42:	outs   dx,BYTE PTR gs:[rsi]
   140002c44:	je     0x140002c46
   140002c46:	add    BYTE PTR [rax],al
   140002c48:	pop    rbx
   140002c49:	and    eax,0x205d7368
   140002c4e:	sub    eax,0x78305b20
   140002c53:	and    eax,0x5d583830
   140002c58:	and    BYTE PTR [rsi+0x61],al
   140002c5b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002c63:	(bad)  
   140002c64:	fs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   140002c6a:	fs gs ins BYTE PTR es:[rdi],dx
   140002c6d:	(bad)  
   140002c6e:	jns    0x140002c90
   140002c70:	data16 jb 0x140002cd8
   140002c73:	and    BYTE PTR gs:[rcx+rbp*2+0x73],ch
   140002c78:	je     0x140002c7a
   140002c7a:	add    BYTE PTR [rax],al
   140002c7c:	add    BYTE PTR [rax],al
   140002c7e:	add    BYTE PTR [rax],al
   140002c80:	pop    rbx
   140002c81:	and    eax,0x205d7368
   140002c86:	sub    eax,0x78305b20
   140002c8b:	and    eax,0x5d583830
   140002c90:	and    BYTE PTR [rsi+0x61],al
   140002c93:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002c9b:	push   rcx
   140002c9c:	rex.WB and BYTE PTR [r14+0x6f],spl
   140002ca0:	jb     0x140002cc2
   140002ca2:	movsxd ebp,DWORD PTR [rax+0x69]
   140002ca5:	ins    BYTE PTR es:[rdi],dx
   140002ca6:	add    BYTE PTR fs:[rax],al
   140002ca9:	add    BYTE PTR [rax],al
   140002cab:	add    BYTE PTR [rax],al
   140002cad:	add    BYTE PTR [rax],al
   140002caf:	add    BYTE PTR [rbx+0x25],bl
   140002cb2:	push   0x2d205d73
   140002cb7:	and    BYTE PTR [rbx+0x30],bl
   140002cba:	js     0x140002ce1
   140002cbc:	xor    BYTE PTR [rax],bh
   140002cbe:	pop    rax
   140002cbf:	pop    rbp
   140002cc0:	and    BYTE PTR [rsi+0x61],al
   140002cc3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002ccb:	addr32 gs je 0x140002cef
   140002ccf:	(bad)  
   140002cd0:	movsxd esp,DWORD PTR [rbx+0x65]
   140002cd3:	jae    0x140002d48
   140002cd5:	imul   esp,DWORD PTR [rdx+0x69],0x7974696c
   140002cdc:	and    BYTE PTR [rdi+0x62],ch
   140002cdf:	push   0x65
   140002ce1:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   140002ce5:	jb     0x140002d56
   140002ce7:	ins    DWORD PTR es:[rdi],dx
   140002ce8:	and    BYTE PTR [rdi+0x69],dh
   140002ceb:	outs   dx,BYTE PTR ds:[rsi]
   140002cec:	outs   dx,DWORD PTR fs:[rsi]
   140002cee:	ja     0x140002cf0
   140002cf0:	pop    rbx
   140002cf1:	and    eax,0x205d7368
   140002cf6:	rex.RX (bad) 
   140002cf8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002d00:	imul   bp,WORD PTR [rsi+0x64],0x6d20
   140002d06:	(bad)  
   140002d07:	imul   ebp,DWORD PTR [rsi+0x20],0x646e6977
   140002d0e:	outs   dx,DWORD PTR ds:[rsi]
   140002d0f:	ja     0x140002d11
   140002d11:	add    BYTE PTR [rax],al
   140002d13:	add    BYTE PTR [rax],al
   140002d15:	add    BYTE PTR [rax],al
   140002d17:	add    BYTE PTR [rbx+0x25],bl
   140002d1a:	push   0x2d205d73
   140002d1f:	and    BYTE PTR [rbx+0x30],bl
   140002d22:	js     0x140002d49
   140002d24:	xor    BYTE PTR [rax],bh
   140002d26:	pop    rax
   140002d27:	pop    rbp
   140002d28:	and    BYTE PTR [rsi+0x61],al
   140002d2b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002d33:	imul   bp,WORD PTR [rsi+0x64],0x6520
   140002d39:	ins    BYTE PTR es:[rdi],dx
   140002d3a:	gs ins DWORD PTR es:[rdi],dx
   140002d3c:	outs   dx,BYTE PTR gs:[rsi]
   140002d3e:	je     0x140002d60
   140002d40:	(bad)  
   140002d41:	and    eax,0x27736c
   140002d46:	add    BYTE PTR [rax],al
   140002d48:	rex.XB
   140002d49:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140002d4b:	outs   dx,DWORD PTR ds:[esi]
   140002d4d:	outs   dx,BYTE PTR ds:[rsi]
   140002d4e:	push   rbp
   140002d4f:	rex.WB
   140002d50:	rex.W
   140002d51:	gs ins BYTE PTR es:[rdi],dx
   140002d53:	jo     0x140002dba
   140002d55:	jb     0x140002d91
   140002d57:	cmp    dl,BYTE PTR [rbx+0x65]
   140002d5a:	outs   dx,BYTE PTR ds:[rsi]
   140002d5b:	rex.WRB outs dx,DWORD PTR fs:[rsi]
   140002d5e:	jne    0x140002dd3
   140002d60:	gs rex.RB jbe 0x140002dc9
   140002d64:	outs   dx,BYTE PTR ds:[rsi]
   140002d65:	je     0x140002d67
   140002d67:	add    BYTE PTR [rbx+0x25],bl
   140002d6a:	push   0x2d205d73
   140002d6f:	and    BYTE PTR [rbx+0x25],bl
   140002d72:	fs pop rbp
   140002d74:	and    BYTE PTR [rsi+0x61],al
   140002d77:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002d7f:	addr32 gs je 0x140002da3
   140002d83:	ins    DWORD PTR es:[rdi],dx
   140002d84:	outs   dx,DWORD PTR ds:[rsi]
   140002d85:	jne    0x140002dfa
   140002d87:	and    BYTE PTR gs:[rcx+0x6e],ch
   140002d8b:	outs   dx,WORD PTR ds:[rsi]
   140002d8d:	add    BYTE PTR [rax],al
   140002d8f:	add    BYTE PTR [rbx+0x25],bl
   140002d92:	push   0x2d205d73
   140002d97:	and    BYTE PTR [rbx+0x25],bl
   140002d9a:	fs pop rbp
   140002d9c:	and    BYTE PTR [rsi+0x61],al
   140002d9f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002da7:	addr32 gs je 0x140002dcb
   140002dab:	movsxd esi,DWORD PTR [rbp+0x72]
   140002dae:	jae    0x140002e1f
   140002db0:	jb     0x140002dd2
   140002db2:	jo     0x140002e23
   140002db4:	jae    0x140002e1f
   140002db6:	je     0x140002e21
   140002db8:	outs   dx,DWORD PTR ds:[rsi]
   140002db9:	outs   dx,BYTE PTR ds:[rsi]
   140002dba:	add    BYTE PTR [rax],al
   140002dbc:	add    BYTE PTR [rax],al
   140002dbe:	add    BYTE PTR [rax],al
   140002dc0:	pop    rbx
   140002dc1:	and    eax,0x205d7368
   140002dc6:	sub    eax,0x64255b20
   140002dcb:	pop    rbp
   140002dcc:	and    BYTE PTR [rsi+0x61],al
   140002dcf:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002dd7:	jae    0x140002e3e
   140002dd9:	outs   dx,BYTE PTR ds:[rsi]
   140002dda:	and    BYTE PTR fs:[rbp+0x6f],ch
   140002dde:	jne    0x140002e53
   140002de0:	and    BYTE PTR gs:[rcx+0x6e],ch
   140002de4:	jo     0x140002e5b
   140002de6:	je     0x140002de8
   140002de8:	rex.XB
   140002de9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140002deb:	outs   dx,DWORD PTR ds:[esi]
   140002ded:	outs   dx,BYTE PTR ds:[rsi]
   140002dee:	push   rbp
   140002def:	rex.WB
   140002df0:	rex.W
   140002df1:	gs ins BYTE PTR es:[rdi],dx
   140002df3:	jo     0x140002e5a
   140002df5:	jb     0x140002e31
   140002df7:	cmp    dl,BYTE PTR [rbx+0x77]
   140002dfa:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x63416f54
   140002e02:	je     0x140002e6d
   140002e04:	jbe    0x140002e6b
   140002e06:	rex.R
   140002e07:	gs jae 0x140002e75
   140002e0a:	je     0x140002e7b
   140002e0c:	jo     0x140002e0e
   140002e0e:	add    BYTE PTR [rax],al
   140002e10:	pop    rbx
   140002e11:	and    eax,0x205d7368
   140002e16:	sub    eax,0x74744120
   140002e1b:	gs ins DWORD PTR es:[rdi],dx
   140002e1d:	jo     0x140002e93
   140002e1f:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   140002e26:	jae    0x140002e8d
   140002e28:	je     0x140002e4a
   140002e2a:	je     0x140002e94
   140002e2c:	jb     0x140002e93
   140002e2e:	(bad)  
   140002e2f:	and    BYTE PTR fs:[rbp+riz*2+0x73],ah
   140002e34:	imul   esi,DWORD PTR [rdi+rbp*2+0x70],0x20
   140002e39:	outs   dx,WORD PTR ds:[rsi]
   140002e3b:	jb     0x140002e5d
   140002e3d:	jae    0x140002ea4
   140002e3f:	jae    0x140002eb4
   140002e41:	imul   ebp,DWORD PTR [rdi+0x6e],0x64252720
   140002e48:	(bad)  
   140002e49:	add    BYTE PTR [rax],al
   140002e4b:	add    BYTE PTR [rax],al
   140002e4d:	add    BYTE PTR [rax],al
   140002e4f:	add    BYTE PTR [rbx+0x25],bl
   140002e52:	push   0x2d205d73
   140002e57:	and    BYTE PTR [rbx+0x25],bl
   140002e5a:	fs pop rbp
   140002e5c:	and    BYTE PTR [rsi+0x61],al
   140002e5f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002e67:	outs   dx,DWORD PTR ds:[rsi]
   140002e68:	jo     0x140002ecf
   140002e6a:	outs   dx,BYTE PTR ds:[rsi]
   140002e6b:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140002e6f:	imul   esi,DWORD PTR [rdi+rbp*2+0x70],0x0
   140002e74:	add    BYTE PTR [rax],al
   140002e76:	add    BYTE PTR [rax],al
   140002e78:	pop    rbx
   140002e79:	and    eax,0x205d7368
   140002e7e:	sub    eax,0x64255b20
   140002e83:	pop    rbp
   140002e84:	and    BYTE PTR [rsi+0x61],al
   140002e87:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002e8f:	jae    0x140002ef6
   140002e91:	je     0x140002eb3
   140002e93:	fs gs jae 0x140002f02
   140002e97:	je     0x140002f08
   140002e99:	jo     0x140002e9b
   140002e9b:	add    BYTE PTR [rax],al
   140002e9d:	add    BYTE PTR [rax],al
   140002e9f:	add    BYTE PTR [rbx+0x4c],al
   140002ea2:	outs   dx,DWORD PTR ds:[rsi]
   140002ea3:	outs   dx,DWORD PTR ds:[esi]
   140002ea5:	outs   dx,BYTE PTR ds:[rsi]
   140002ea6:	push   rbp
   140002ea7:	rex.WB
   140002ea8:	rex.W
   140002ea9:	gs ins BYTE PTR es:[rdi],dx
   140002eab:	jo     0x140002f12
   140002ead:	jb     0x140002ee9
   140002eaf:	cmp    dl,BYTE PTR [rbx+0x65]
   140002eb2:	ins    BYTE PTR es:[rdi],dx
   140002eb3:	movsxd esi,DWORD PTR gs:[rsp+rdx*2+0x69]
   140002eb8:	ins    BYTE PTR es:[rdi],dx
   140002eb9:	add    BYTE PTR gs:[rax],al
   140002ebc:	add    BYTE PTR [rax],al
   140002ebe:	add    BYTE PTR [rax],al
   140002ec0:	pop    rbx
   140002ec1:	and    eax,0x205d7368
   140002ec6:	sub    eax,0x64255b20
   140002ecb:	pop    rbp
   140002ecc:	and    BYTE PTR [rsi+0x61],al
   140002ecf:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002ed7:	imul   bp,WORD PTR [rsi+0x64],0x7020
   140002edd:	(bad)  
   140002ede:	jb     0x140002f45
   140002ee0:	outs   dx,BYTE PTR ds:[rsi]
   140002ee1:	je     0x140002f03
   140002ee3:	ja     0x140002f4e
   140002ee5:	outs   dx,BYTE PTR ds:[rsi]
   140002ee6:	outs   dx,DWORD PTR fs:[rsi]
   140002ee8:	ja     0x140002f0a
   140002eea:	(bad)  
   140002eeb:	and    eax,0x27736c
   140002ef0:	add    BYTE PTR [rcx+0x0],r13b
   140002ef4:	jb     0x140002ef6
   140002ef6:	add    BYTE PTR gs:[rbx+0x0],ah
   140002efa:	je     0x140002efc
   140002efc:	push   rbp
   140002efd:	add    BYTE PTR [rcx+0x0],cl
   140002f00:	rex.W add BYTE PTR [rdi+0x0],dl
   140002f04:	rex.WRX add BYTE PTR [rax+r8*1+0x0],r8b
   140002f09:	add    BYTE PTR [rax],al
   140002f0b:	add    BYTE PTR [rax],al
   140002f0d:	add    BYTE PTR [rax],al
   140002f0f:	add    BYTE PTR [rbx+0x25],bl
   140002f12:	push   0x2d205d73
   140002f17:	and    BYTE PTR [rbx+0x25],bl
   140002f1a:	fs pop rbp
   140002f1c:	and    BYTE PTR [rsi+0x61],al
   140002f1f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002f27:	imul   bp,WORD PTR [rsi+0x64],0x6320
   140002f2d:	push   0x20646c69
   140002f32:	ja     0x140002f9d
   140002f34:	outs   dx,BYTE PTR ds:[rsi]
   140002f35:	outs   dx,DWORD PTR fs:[rsi]
   140002f37:	ja     0x140002f59
   140002f39:	(bad)  
   140002f3a:	and    eax,0x27736c
   140002f3f:	add    BYTE PTR [rbx+0x25],bl
   140002f42:	push   0x2d205d73
   140002f47:	and    BYTE PTR [rbx+0x30],bl
   140002f4a:	js     0x140002f71
   140002f4c:	xor    BYTE PTR [rax],bh
   140002f4e:	pop    rax
   140002f4f:	pop    rbp
   140002f50:	and    BYTE PTR [rsi+0x61],al
   140002f53:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002f5b:	imul   bp,WORD PTR [rsi+0x64],0x7420
   140002f61:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x736c2527
   140002f69:	(bad)  
   140002f6a:	cmp    esp,DWORD PTR [rax]
   140002f6c:	jb     0x140002fdd
   140002f6e:	ins    BYTE PTR es:[rdi],dx
   140002f6f:	and    BYTE PTR gs:[rdi],ah
   140002f72:	and    eax,0x2764
   140002f77:	add    BYTE PTR [rbx+0x25],bl
   140002f7a:	push   0x2d205d73
   140002f7f:	and    BYTE PTR [rbx+0x30],bl
   140002f82:	js     0x140002fa9
   140002f84:	xor    BYTE PTR [rax],bh
   140002f86:	pop    rax
   140002f87:	pop    rbp
   140002f88:	and    BYTE PTR [rbx+0x32],bl
   140002f8b:	pop    rbp
   140002f8c:	and    BYTE PTR [rsi+0x61],al
   140002f8f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002f97:	imul   bp,WORD PTR [rsi+0x64],0x7420
   140002f9d:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x736c2527
   140002fa5:	(bad)  
   140002fa6:	cmp    esp,DWORD PTR [rax]
   140002fa8:	jb     0x140003019
   140002faa:	ins    BYTE PTR es:[rdi],dx
   140002fab:	and    BYTE PTR gs:[rdi],ah
   140002fae:	and    eax,0x2764
   140002fb3:	add    BYTE PTR [rax],al
   140002fb5:	add    BYTE PTR [rax],al
   140002fb7:	add    BYTE PTR [rbx+0x25],bl
   140002fba:	push   0x2d205d73
   140002fbf:	and    BYTE PTR [rbx+0x30],bl
   140002fc2:	js     0x140002fe9
   140002fc4:	xor    BYTE PTR [rax],bh
   140002fc6:	pop    rax
   140002fc7:	pop    rbp
   140002fc8:	and    BYTE PTR [rsi+0x61],al
   140002fcb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140002fd3:	addr32 gs je 0x140002ff7
   140002fd7:	ins    BYTE PTR es:[rdi],dx
   140002fd8:	outs   dx,DWORD PTR ds:[rsi]
   140002fd9:	movsxd esp,DWORD PTR [rcx+0x74]
   140002fdc:	imul   ebp,DWORD PTR [rdi+0x6e],0x20666f20
   140002fe3:	outs   dx,DWORD PTR ds:[rsi]
   140002fe4:	(bad)  
   140002fe5:	push   0x65
   140002fe7:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140002feb:	add    BYTE PTR [rax],al
   140002fed:	add    BYTE PTR [rax],al
   140002fef:	add    BYTE PTR [rbx+0x25],bl
   140002ff2:	push   0x2d205d73
   140002ff7:	and    BYTE PTR [rbx+0x30],bl
   140002ffa:	js     0x140003021
   140002ffc:	xor    BYTE PTR [rax],bh
   140002ffe:	pop    rax
   140002fff:	pop    rbp
   140003000:	and    BYTE PTR [rsi+0x61],al
   140003003:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000300b:	addr32 gs je 0x14000302f
   14000300f:	jae    0x140003076
   140003011:	outs   dx,BYTE PTR ds:[rsi]
   140003012:	and    BYTE PTR fs:[rbp+0x6f],ch
   140003016:	jne    0x14000308b
   140003018:	and    BYTE PTR gs:[rdx+0x75],ah
   14000301c:	je     0x140003092
   14000301e:	outs   dx,DWORD PTR ds:[rsi]
   14000301f:	outs   dx,BYTE PTR ds:[rsi]
   140003020:	and    BYTE PTR [rbp+riz*2+0x66],ch
   140003024:	je     0x140003046
   140003026:	movsxd ebp,DWORD PTR [rcx+rbp*2+0x63]
   14000302a:	imul   eax,DWORD PTR [rax],0x0
   14000302d:	add    BYTE PTR [rax],al
   14000302f:	add    BYTE PTR [rbx+0x4c],al
   140003032:	outs   dx,DWORD PTR ds:[rsi]
   140003033:	outs   dx,DWORD PTR ds:[esi]
   140003035:	outs   dx,BYTE PTR ds:[rsi]
   140003036:	push   rbp
   140003037:	rex.WB
   140003038:	rex.W
   140003039:	gs ins BYTE PTR es:[rdi],dx
   14000303b:	jo     0x1400030a2
   14000303d:	jb     0x140003079
   14000303f:	cmp    al,BYTE PTR [rsi+0x69]
   140003042:	outs   dx,BYTE PTR ds:[rsi]
   140003043:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140003046:	outs   dx,DWORD PTR ds:[esi]
   140003048:	outs   dx,BYTE PTR ds:[rsi]
   140003049:	push   rsp
   14000304a:	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x255b0000
   140003052:	push   0x2d205d73
   140003057:	and    BYTE PTR [rbx+0x30],bl
   14000305a:	js     0x140003081
   14000305c:	xor    BYTE PTR [rax],bh
   14000305e:	pop    rax
   14000305f:	pop    rbp
   140003060:	and    BYTE PTR [rsi+0x61],al
   140003063:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000306b:	movsxd esi,DWORD PTR [rdx+0x65]
   14000306e:	(bad)  
   14000306f:	je     0x1400030d6
   140003071:	and    BYTE PTR [rcx+0x46],cl
   140003074:	(bad)  
   140003075:	jae    0x1400030eb
   140003077:	push   rbp
   140003078:	jae    0x1400030df
   14000307a:	jb     0x1400030cf
   14000307c:	ja     0x1400030e7
   14000307e:	je     0x1400030e3
   140003080:	push   0x55676e69
   140003085:	je     0x1400030f0
   140003087:	ins    BYTE PTR es:[rdi],dx
   140003088:	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x0
   140003090:	pop    rbx
   140003091:	and    eax,0x205d7368
   140003096:	sub    eax,0x72655020
   14000309b:	outs   dx,WORD PTR ds:[rsi]
   14000309d:	jb     0x14000310c
   14000309f:	imul   ebp,DWORD PTR [rsi+0x67],0x63657320
   1400030a6:	jne    0x14000311a
   1400030a8:	and    BYTE PTR gs:[rcx+0x74],ah
   1400030ac:	je     0x140003113
   1400030ae:	outs   dx,BYTE PTR ds:[rsi]
   1400030af:	je     0x14000311a
   1400030b1:	outs   dx,DWORD PTR ds:[rsi]
   1400030b2:	outs   dx,BYTE PTR ds:[rsi]
   1400030b3:	and    BYTE PTR [rbx+0x65],dh
   1400030b6:	jno    0x14000312d
   1400030b8:	outs   dx,BYTE PTR gs:[rsi]
   1400030ba:	movsxd esp,DWORD PTR [rbp+0x0]
   1400030bd:	add    BYTE PTR [rax],al
   1400030bf:	add    BYTE PTR [rbx+0x25],bl
   1400030c2:	push   0x2d205d73
   1400030c7:	and    BYTE PTR [rbx+0x30],bl
   1400030ca:	js     0x1400030f1
   1400030cc:	xor    BYTE PTR [rax],bh
   1400030ce:	pop    rax
   1400030cf:	pop    rbp
   1400030d0:	and    BYTE PTR [rsi+0x61],al
   1400030d3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400030db:	jo     0x140003142
   1400030dd:	jb     0x140003145
   1400030df:	outs   dx,DWORD PTR ds:[rsi]
   1400030e0:	jb     0x14000314f
   1400030e2:	and    BYTE PTR [rbx+0x65],dh
   1400030e5:	movsxd esi,DWORD PTR [rbp+0x72]
   1400030e8:	and    BYTE PTR gs:[rcx+0x74],ah
   1400030ec:	je     0x140003153
   1400030ee:	outs   dx,BYTE PTR ds:[rsi]
   1400030ef:	je     0x14000315a
   1400030f1:	outs   dx,DWORD PTR ds:[rsi]
   1400030f2:	outs   dx,BYTE PTR ds:[rsi]
   1400030f3:	and    BYTE PTR [rbx+0x65],dh
   1400030f6:	jno    0x14000316d
   1400030f8:	outs   dx,BYTE PTR gs:[rsi]
   1400030fa:	movsxd esp,DWORD PTR [rbp+0x0]
   1400030fd:	add    BYTE PTR [rax],al
   1400030ff:	add    BYTE PTR [rbx+0x25],bl
   140003102:	push   0x2d205d73
   140003107:	and    BYTE PTR [rbx+0x30],bl
   14000310a:	js     0x140003131
   14000310c:	xor    BYTE PTR [rax],bh
   14000310e:	pop    rax
   14000310f:	pop    rbp
   140003110:	and    BYTE PTR [rsi+0x61],al
   140003113:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000311b:	jae    0x140003182
   14000311d:	ins    BYTE PTR es:[rdi],dx
   14000311e:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
   140003123:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x736c2527
   14000312b:	(bad)  
   14000312c:	add    BYTE PTR [rax],al
   14000312e:	add    BYTE PTR [rax],al
   140003130:	pop    rbx
   140003131:	and    eax,0x205d7368
   140003136:	sub    eax,0x78305b20
   14000313b:	and    eax,0x5d583830
   140003140:	and    BYTE PTR [rbp+0x6e],dl
   140003143:	(bad)  
   140003144:	(bad)  
   140003145:	ins    BYTE PTR es:[rdi],dx
   140003146:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14000314b:	jae    0x1400031b2
   14000314d:	ins    BYTE PTR es:[rdi],dx
   14000314e:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x74]
   140003153:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x736c2527
   14000315b:	(bad)  
   14000315c:	cmp    esp,DWORD PTR [rax]
   14000315e:	jb     0x1400031c5
   140003160:	je     0x1400031d4
   140003162:	jns    0x1400031cd
   140003164:	outs   dx,BYTE PTR ds:[rsi]
   140003165:	add    BYTE PTR [eax],al
   140003168:	rex.XB
   140003169:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000316b:	outs   dx,DWORD PTR ds:[esi]
   14000316d:	outs   dx,BYTE PTR ds:[rsi]
   14000316e:	push   rbp
   14000316f:	rex.WB
   140003170:	rex.W
   140003171:	gs ins BYTE PTR es:[rdi],dx
   140003173:	jo     0x1400031da
   140003175:	jb     0x1400031b1
   140003177:	cmp    dl,BYTE PTR [rbx+0x65]
   14000317a:	je     0x1400031c1
   14000317c:	imul   esi,DWORD PTR fs:[rsi+rax*2+0x69],0x54646c65
   140003185:	gs js  0x1400031fc
	...
   140003190:	pop    rbx
   140003191:	and    eax,0x205d7368
   140003196:	sub    eax,0x78305b20
   14000319b:	and    eax,0x5d583830
   1400031a0:	and    BYTE PTR [rsi+0x61],al
   1400031a3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400031ab:	imul   bp,WORD PTR [rsi+0x64],0x6520
   1400031b1:	imul   esi,DWORD PTR fs:[rax+riz*1+0x66],0x646c6569
   1400031ba:	and    BYTE PTR [rdi],ah
   1400031bc:	and    eax,0x27736c
   1400031c1:	add    BYTE PTR [rax],al
   1400031c3:	add    BYTE PTR [rax],al
   1400031c5:	add    BYTE PTR [rax],al
   1400031c7:	add    BYTE PTR [rbx+0x25],bl
   1400031ca:	push   0x2d205d73
   1400031cf:	and    BYTE PTR [rbx+0x30],bl
   1400031d2:	js     0x1400031f9
   1400031d4:	xor    BYTE PTR [rax],bh
   1400031d6:	pop    rax
   1400031d7:	pop    rbp
   1400031d8:	and    BYTE PTR [rsi+0x61],al
   1400031db:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400031e3:	(bad)  
   1400031e4:	ins    BYTE PTR es:[rdi],dx
   1400031e5:	ins    BYTE PTR es:[rdi],dx
   1400031e6:	outs   dx,DWORD PTR ds:[rsi]
   1400031e7:	movsxd esp,DWORD PTR [rcx+0x74]
   1400031ea:	and    BYTE PTR gs:[rsi+0x6f],ah
   1400031ee:	jb     0x140003210
   1400031f0:	(bad)  
   1400031f1:	and    eax,0x27736c
   1400031f6:	add    BYTE PTR [rax],al
   1400031f8:	pop    rbx
   1400031f9:	and    eax,0x205d7368
   1400031fe:	sub    eax,0x78305b20
   140003203:	and    eax,0x5d583830
   140003208:	and    BYTE PTR [rsi+0x61],al
   14000320b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140003213:	jae    0x14000327a
   140003215:	je     0x140003237
   140003217:	gs imul esi,DWORD PTR fs:[rax+riz*1+0x66],0x646c6569
   140003221:	add    BYTE PTR [rax],al
   140003223:	add    BYTE PTR [rax],al
   140003225:	add    BYTE PTR [rax],al
   140003227:	add    BYTE PTR [rbx+0x4c],al
   14000322a:	outs   dx,DWORD PTR ds:[rsi]
   14000322b:	outs   dx,DWORD PTR ds:[esi]
   14000322d:	outs   dx,BYTE PTR ds:[rsi]
   14000322e:	push   rbp
   14000322f:	rex.WB
   140003230:	rex.W
   140003231:	gs ins BYTE PTR es:[rdi],dx
   140003233:	jo     0x14000329a
   140003235:	jb     0x140003271
   140003237:	cmp    al,BYTE PTR [rsi+0x69]
   14000323a:	ins    BYTE PTR es:[rdi],dx
   14000323b:	ins    BYTE PTR es:[rdi],dx
   14000323c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000323e:	rex.WRXB outs dx,BYTE PTR ds:[esi]
   140003241:	rex.B jae 0x140003299
   140003244:	jae    0x1400032ab
   140003246:	jb     0x140003248
   140003248:	(bad)  
   140003249:	add    BYTE PTR [rbp+0x0],dh
   14000324c:	je     0x14000324e
   14000324e:	push   0x69007500
   140003253:	add    BYTE PTR [rsi],ch
   140003255:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140003259:	add    BYTE PTR [rax+rax*1+0x0],ch
   14000325d:	add    BYTE PTR [rax],al
   14000325f:	add    BYTE PTR [rbx+0x25],bl
   140003262:	push   0x2d205d73
   140003267:	and    BYTE PTR [rbx+0x30],bl
   14000326a:	js     0x140003291
   14000326c:	xor    BYTE PTR [rax],bh
   14000326e:	pop    rax
   14000326f:	pop    rbp
   140003270:	and    BYTE PTR [rsi+0x61],al
   140003273:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000327b:	ins    BYTE PTR es:[rdi],dx
   14000327c:	outs   dx,DWORD PTR ds:[rsi]
   14000327d:	(bad)  
   14000327e:	and    BYTE PTR fs:[rbx+0x74],dh
   140003282:	jb     0x1400032ed
   140003284:	outs   dx,BYTE PTR ds:[rsi]
   140003285:	and    BYTE PTR [edi],ah
   140003288:	and    eax,0x2764
   14000328d:	add    BYTE PTR [rax],al
   14000328f:	add    BYTE PTR [rbx+0x25],bl
   140003292:	push   0x2d205d73
   140003297:	and    BYTE PTR [rbx+0x30],bl
   14000329a:	js     0x1400032c1
   14000329c:	xor    BYTE PTR [rax],bh
   14000329e:	pop    rax
   14000329f:	pop    rbp
   1400032a0:	and    BYTE PTR [rsi+0x61],al
   1400032a3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400032ab:	jae    0x140003312
   1400032ad:	je     0x1400032cf
   1400032af:	(bad)  
   1400032b0:	and    eax,0x2027736c
   1400032b5:	imul   ebp,DWORD PTR [rsi+0x20],0x736c2527
   1400032bc:	(bad)  
   1400032bd:	add    BYTE PTR [rax],al
   1400032bf:	add    BYTE PTR [rbx+0x4c],al
   1400032c2:	outs   dx,DWORD PTR ds:[rsi]
   1400032c3:	outs   dx,DWORD PTR ds:[esi]
   1400032c5:	outs   dx,BYTE PTR ds:[rsi]
   1400032c6:	push   rbp
   1400032c7:	rex.WB
   1400032c8:	rex.W
   1400032c9:	gs ins BYTE PTR es:[rdi],dx
   1400032cb:	jo     0x140003332
   1400032cd:	jb     0x140003309
   1400032cf:	cmp    al,BYTE PTR [rsi+0x69]
   1400032d2:	outs   dx,BYTE PTR ds:[rsi]
   1400032d3:	rex.R outs dx,DWORD PTR fs:[rsi]
   1400032d6:	ins    DWORD PTR es:[rdi],dx
   1400032d7:	(bad)  
   1400032d8:	imul   ebp,DWORD PTR [rsi+0x55],0x49726573
   1400032df:	outs   dx,BYTE PTR ds:[rsi]
   1400032e0:	imul   r14,QWORD PTR [rbx+0x74],0x0
   1400032e8:	pop    rbx
   1400032e9:	and    eax,0x205d7368
   1400032ee:	sub    eax,0x74654720
   1400032f3:	je     0x14000335e
   1400032f5:	outs   dx,BYTE PTR ds:[rsi]
   1400032f6:	and    BYTE PTR [edi],ah
   1400032f9:	rex.WRXB je 0x140003364
   1400032fc:	gs jb  0x14000331f
   1400032ff:	push   rbp
   140003300:	jae    0x140003367
   140003302:	jb     0x14000332b
   140003304:	and    BYTE PTR [rbx+0x74],dh
   140003307:	jb     0x140003372
   140003309:	outs   dx,BYTE PTR ds:[rsi]
   14000330a:	add    BYTE PTR [eax],al
   14000330d:	add    BYTE PTR [rax],al
   14000330f:	add    BYTE PTR [rbx+0x25],bl
   140003312:	push   0x2d205d73
   140003317:	and    BYTE PTR [rbx+0x25],bl
   14000331a:	fs pop rbp
   14000331c:	and    BYTE PTR [rsi+0x61],al
   14000331f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140003327:	ins    BYTE PTR es:[rdi],dx
   140003328:	outs   dx,DWORD PTR ds:[rsi]
   140003329:	(bad)  
   14000332a:	and    BYTE PTR fs:[rip+0x72662064],ah        # 0x1b2665395
   140003331:	outs   dx,DWORD PTR ds:[rsi]
   140003332:	ins    DWORD PTR es:[rdi],dx
   140003333:	and    BYTE PTR [rcx+0x55],al
   140003336:	push   rsp
   140003337:	rex.W push rbp
   140003339:	rex.WB
   14000333a:	cs rex.R
   14000333c:	rex.WR
   14000333d:	rex.WR add BYTE PTR [rax],r8b
   140003340:	pop    rbx
   140003341:	and    eax,0x205d7368
   140003346:	sub    eax,0x78305b20
   14000334b:	and    eax,0x5d583830
   140003350:	and    BYTE PTR [rsi+0x61],al
   140003353:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000335b:	imul   bp,WORD PTR [rsi+0x64],0x7420
   140003361:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x20726f66
   140003369:	(bad)  
   14000336a:	and    eax,0x27736c
   14000336f:	add    BYTE PTR [rbx+0x4c],al
   140003372:	outs   dx,DWORD PTR ds:[rsi]
   140003373:	outs   dx,DWORD PTR ds:[esi]
   140003375:	outs   dx,BYTE PTR ds:[rsi]
   140003376:	push   rbp
   140003377:	rex.WB
   140003378:	rex.W
   140003379:	gs ins BYTE PTR es:[rdi],dx
   14000337b:	jo     0x1400033e2
   14000337d:	jb     0x1400033b9
   14000337f:	cmp    al,BYTE PTR [rsi+0x69]
   140003382:	outs   dx,BYTE PTR ds:[rsi]
   140003383:	fs push rdi
   140003385:	outs   dx,DWORD PTR ds:[rsi]
   140003386:	jb     0x1400033f3
   140003388:	addr32 jb 0x1400033fa
   14000338b:	jne    0x1400033fd
   14000338d:	push   rbp
   14000338e:	jae    0x1400033f5
   140003390:	jb     0x1400033db
   140003392:	outs   dx,BYTE PTR ds:[rsi]
   140003393:	imul   r14,QWORD PTR [rbx+0x74],0x6f4c4300
   14000339b:	outs   dx,DWORD PTR ds:[esi]
   14000339d:	outs   dx,BYTE PTR ds:[rsi]
   14000339e:	push   rbp
   14000339f:	rex.WB
   1400033a0:	rex.W
   1400033a1:	gs ins BYTE PTR es:[rdi],dx
   1400033a3:	jo     0x14000340a
   1400033a5:	jb     0x1400033e1
   1400033a7:	cmp    al,BYTE PTR [rsi+0x6f]
   1400033aa:	jb     0x140003419
   1400033ac:	(bad)  
   1400033ad:	je     0x140003404
   1400033af:	jae    0x140003416
   1400033b1:	jb     0x1400033ff
   1400033b3:	outs   dx,DWORD PTR ds:[rsi]
   1400033b4:	outs   dx,DWORD PTR ds:[esi]
   1400033b6:	outs   dx,BYTE PTR ds:[rsi]
   1400033b7:	rex.WRX (bad) 
   1400033b9:	ins    DWORD PTR es:[rdi],dx
   1400033ba:	add    BYTE PTR gs:[rax],al
   1400033bd:	add    BYTE PTR [rax],al
   1400033bf:	add    BYTE PTR [rbx+0x25],bl
   1400033c2:	push   0x2d205d73
   1400033c7:	and    BYTE PTR [rbx+0x25],bl
   1400033ca:	fs pop rbp
   1400033cc:	and    BYTE PTR [rsi+0x61],al
   1400033cf:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400033d7:	addr32 gs je 0x1400033fb
   1400033db:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400033de:	jo     0x140003455
   1400033e0:	je     0x140003447
   1400033e2:	jb     0x140003404
   1400033e4:	outs   dx,BYTE PTR ds:[rsi]
   1400033e5:	(bad)  
   1400033e6:	ins    DWORD PTR es:[rdi],dx
   1400033e7:	add    BYTE PTR gs:[rax],al
   1400033ea:	add    BYTE PTR [rax],al
   1400033ec:	add    BYTE PTR [rax],al
   1400033ee:	add    BYTE PTR [rax],al
   1400033f0:	and    eax,0x73006c00
   1400033f5:	add    BYTE PTR [rax+rax*1+0x25],bl
   1400033f9:	add    BYTE PTR [rax+rax*1+0x73],ch
   1400033fd:	add    BYTE PTR [rax],al
   1400033ff:	add    BYTE PTR [rbx+0x25],bl
   140003402:	push   0x2d205d73
   140003407:	and    BYTE PTR [rbx+0x30],bl
   14000340a:	js     0x140003431
   14000340c:	xor    BYTE PTR [rax],bh
   14000340e:	pop    rax
   14000340f:	pop    rbp
   140003410:	and    BYTE PTR [rsi+0x61],al
   140003413:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000341b:	outs   dx,WORD PTR ds:[rsi]
   14000341d:	jb     0x14000348c
   14000341f:	(bad)  
   140003420:	je     0x140003442
   140003422:	ins    BYTE PTR es:[rdi],dx
   140003423:	outs   dx,DWORD PTR ds:[rsi]
   140003424:	outs   dx,DWORD PTR ds:[esi]
   140003426:	outs   dx,BYTE PTR ds:[rsi]
   140003427:	and    BYTE PTR [rsi+0x61],ch
   14000342a:	ins    DWORD PTR es:[rdi],dx
   14000342b:	gs rex.XB
   14000342d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14000342f:	outs   dx,DWORD PTR ds:[esi]
   140003431:	outs   dx,BYTE PTR ds:[rsi]
   140003432:	push   rbp
   140003433:	rex.WB
   140003434:	rex.W
   140003435:	gs ins BYTE PTR es:[rdi],dx
   140003437:	jo     0x14000349e
   140003439:	jb     0x140003475
   14000343b:	cmp    al,BYTE PTR [rsi+0x6f]
   14000343e:	jb     0x1400034ad
   140003440:	(bad)  
   140003441:	je     0x140003498
   140003443:	jae    0x1400034aa
   140003445:	jb     0x140003493
   140003447:	outs   dx,DWORD PTR ds:[rsi]
   140003448:	outs   dx,DWORD PTR ds:[esi]
   14000344a:	outs   dx,BYTE PTR ds:[rsi]
   14000344b:	rex.WRX (bad) 
   14000344d:	ins    DWORD PTR es:[rdi],dx
   14000344e:	add    BYTE PTR gs:[rbx+0x4c],al
   140003452:	outs   dx,DWORD PTR ds:[rsi]
   140003453:	outs   dx,DWORD PTR ds:[esi]
   140003455:	outs   dx,BYTE PTR ds:[rsi]
   140003456:	push   rbp
   140003457:	rex.WB
   140003458:	rex.W
   140003459:	gs ins BYTE PTR es:[rdi],dx
   14000345b:	jo     0x1400034c2
   14000345d:	jb     0x140003499
   14000345f:	cmp    dl,BYTE PTR [rax+0x72]
   140003462:	gs jae 0x1400034d8
   140003465:	rex.WRXB
   140003466:	rex.WXB
   140003467:	rex.X jne 0x1400034de
   14000346a:	je     0x1400034db
   14000346c:	outs   dx,BYTE PTR ds:[rsi]
   14000346d:	add    BYTE PTR [rax],al
   14000346f:	add    BYTE PTR [rbx+0x25],bl
   140003472:	push   0x2d205d73
   140003477:	and    BYTE PTR [rbx+0x25],bl
   14000347a:	fs pop rbp
   14000347c:	and    BYTE PTR [rsi+0x61],al
   14000347f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140003487:	addr32 gs je 0x1400034ab
   14000348b:	(bad)  
   14000348c:	rex.WRXB
   14000348d:	rex.WXB (bad) 
   14000348f:	and    BYTE PTR [rbx+0x74],dh
   140003492:	jb     0x1400034fd
   140003494:	outs   dx,BYTE PTR ds:[rsi]
   140003495:	add    BYTE PTR [eax],al
   140003498:	pop    rbx
   140003499:	and    eax,0x205d7368
   14000349e:	sub    eax,0x78305b20
   1400034a3:	and    eax,0x5d583830
   1400034a8:	and    BYTE PTR [rsi+0x61],al
   1400034ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400034b3:	imul   bp,WORD PTR [rsi+0x64],0x2720
   1400034b9:	push   rbx
   1400034ba:	jne    0x14000351e
   1400034bc:	ins    DWORD PTR es:[rdi],dx
   1400034bd:	imul   esi,DWORD PTR [rax+riz*1+0x43],0x65646572
   1400034c5:	outs   dx,BYTE PTR ds:[rsi]
   1400034c6:	je     0x140003531
   1400034c8:	(bad)  
   1400034c9:	ins    BYTE PTR es:[rdi],dx
   1400034ca:	(bad)  
   1400034cb:	and    BYTE PTR [rcx+0x74],ch
   1400034ce:	gs ins DWORD PTR es:[rdi],dx
	...
   1400034d8:	pop    rbx
   1400034d9:	and    eax,0x205d7368
   1400034de:	sub    eax,0x78305b20
   1400034e3:	and    eax,0x5d583830
   1400034e8:	and    BYTE PTR [rsi+0x61],al
   1400034eb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400034f3:	jo     0x14000355a
   1400034f5:	jb     0x14000355d
   1400034f7:	outs   dx,DWORD PTR ds:[rsi]
   1400034f8:	jb     0x140003567
   1400034fa:	and    BYTE PTR [rbp+riz*2+0x66],ah
   1400034fe:	(bad)  
   1400034ff:	jne    0x14000356d
   140003501:	je     0x140003523
   140003503:	(bad)  
   140003504:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140003508:	outs   dx,BYTE PTR ds:[rsi]
   140003509:	add    BYTE PTR [rax],al
   14000350b:	add    BYTE PTR [rax],al
   14000350d:	add    BYTE PTR [rax],al
   14000350f:	add    BYTE PTR [rbx+0x4c],al
   140003512:	outs   dx,DWORD PTR ds:[rsi]
   140003513:	outs   dx,DWORD PTR ds:[esi]
   140003515:	outs   dx,BYTE PTR ds:[rsi]
   140003516:	push   rbp
   140003517:	rex.WB
   140003518:	rex.W
   140003519:	gs ins BYTE PTR es:[rdi],dx
   14000351b:	jo     0x140003582
   14000351d:	jb     0x140003559
   14000351f:	cmp    al,BYTE PTR [rsi+0x69]
   140003522:	outs   dx,BYTE PTR ds:[rsi]
   140003523:	rex.B outs dx,BYTE PTR fs:[rsi]
   140003526:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140003529:	outs   dx,DWORD PTR ds:[esi]
   14000352b:	outs   dx,BYTE PTR ds:[rsi]
   14000352c:	push   rbp
   14000352d:	jae    0x140003594
   14000352f:	jb     0x140003531
   140003531:	add    BYTE PTR [rax],al
   140003533:	add    BYTE PTR [rax],al
   140003535:	add    BYTE PTR [rax],al
   140003537:	add    BYTE PTR [rbx+0x25],bl
   14000353a:	push   0x2d205d73
   14000353f:	and    BYTE PTR [rbx+0x25],bl
   140003542:	fs pop rbp
   140003544:	and    BYTE PTR [rsi+0x61],al
   140003547:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000354f:	ins    BYTE PTR es:[rdi],dx
   140003550:	outs   dx,DWORD PTR ds:[rsi]
   140003551:	(bad)  
   140003552:	and    BYTE PTR fs:[rdi+rbp*2+0x67],ch
   140003557:	outs   dx,DWORD PTR ds:[rsi]
   140003558:	outs   dx,BYTE PTR ds:[rsi]
   140003559:	and    BYTE PTR [rbp+0x49],dl
   14000355c:	and    BYTE PTR [rbp+0x6f],ch
   14000355f:	fs jne 0x1400035ce
   140003562:	add    BYTE PTR gs:[rax],al
   140003565:	add    BYTE PTR [rax],al
   140003567:	add    BYTE PTR [rbx+0x25],bl
   14000356a:	push   0x2d205d73
   14000356f:	and    BYTE PTR [rbx+0x65],dl
   140003572:	(bad)  
   140003573:	jb     0x1400035d8
   140003575:	push   0x20676e69
   14000357a:	outs   dx,WORD PTR ds:[rsi]
   14000357c:	jb     0x14000359e
   14000357e:	ins    BYTE PTR es:[rdi],dx
   14000357f:	outs   dx,DWORD PTR ds:[rsi]
   140003580:	outs   dx,DWORD PTR ds:[esi]
   140003582:	outs   dx,BYTE PTR ds:[rsi]
   140003583:	and    BYTE PTR [rcx+rbp*2+0x6c],dh
   140003587:	add    BYTE PTR gs:[rax],al
   14000358a:	add    BYTE PTR [rax],al
   14000358c:	add    BYTE PTR [rax],al
   14000358e:	add    BYTE PTR [rax],al
   140003590:	pop    rbx
   140003591:	and    eax,0x205d7368
   140003596:	sub    eax,0x78305b20
   14000359b:	and    eax,0x5d583830
   1400035a0:	and    BYTE PTR [rsi+0x61],al
   1400035a3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400035ab:	imul   bp,WORD PTR [rsi+0x64],0x6c20
   1400035b1:	outs   dx,DWORD PTR ds:[rsi]
   1400035b2:	outs   dx,DWORD PTR ds:[esi]
   1400035b4:	outs   dx,BYTE PTR ds:[rsi]
   1400035b5:	and    BYTE PTR [rcx+rbp*2+0x6c],dh
   1400035b9:	add    BYTE PTR gs:[rax],al
   1400035bc:	add    BYTE PTR [rax],al
   1400035be:	add    BYTE PTR [rax],al
   1400035c0:	pop    rbx
   1400035c1:	and    eax,0x205d7368
   1400035c6:	sub    eax,0x78305b20
   1400035cb:	and    eax,0x5d583830
   1400035d0:	and    BYTE PTR [rsi+0x61],al
   1400035d3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400035db:	outs   dx,WORD PTR ds:[rsi]
   1400035dd:	jb     0x14000364c
   1400035df:	and    BYTE PTR [rdi+rbp*2+0x67],ch
   1400035e3:	outs   dx,DWORD PTR ds:[rsi]
   1400035e4:	outs   dx,BYTE PTR ds:[rsi]
   1400035e5:	and    BYTE PTR [rsi+0x61],ch
   1400035e8:	ins    DWORD PTR es:[rdi],dx
   1400035e9:	add    BYTE PTR gs:[rax],al
   1400035ec:	add    BYTE PTR [rax],al
   1400035ee:	add    BYTE PTR [rax],al
   1400035f0:	pop    rbx
   1400035f1:	and    eax,0x205d7368
   1400035f6:	sub    eax,0x69735520
   1400035fb:	outs   dx,BYTE PTR ds:[rsi]
   1400035fc:	and    BYTE PTR [ebp+0x73],dh
   140003600:	gs jb  0x140003623
   140003603:	outs   dx,BYTE PTR ds:[rsi]
   140003604:	(bad)  
   140003605:	ins    DWORD PTR es:[rdi],dx
   140003606:	and    BYTE PTR gs:[rip+0x6c252720],bh        # 0x1ac255d2d
   14000360d:	jae    0x140003636
   14000360f:	add    BYTE PTR [rbx+0x25],bl
   140003612:	push   0x2d205d73
   140003617:	and    BYTE PTR [rbp+0x73],dl
   14000361a:	imul   ebp,DWORD PTR [rsi+0x67],0x73617020
   140003621:	jae    0x14000369a
   140003623:	outs   dx,DWORD PTR ds:[rsi]
   140003624:	jb     0x14000368a
   140003626:	and    BYTE PTR [rax],ah
   140003628:	cmp    eax,0x6c252720
   14000362d:	jae    0x140003656
   14000362f:	add    BYTE PTR [rbx+0x25],bl
   140003632:	push   0x2d205d73
   140003637:	and    BYTE PTR [rbx+0x30],bl
   14000363a:	js     0x140003661
   14000363c:	xor    BYTE PTR [rax],bh
   14000363e:	pop    rax
   14000363f:	pop    rbp
   140003640:	and    BYTE PTR [rsi+0x61],al
   140003643:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000364b:	jo     0x1400036b2
   14000364d:	jb     0x1400036b5
   14000364f:	outs   dx,DWORD PTR ds:[rsi]
   140003650:	jb     0x1400036bf
   140003652:	and    BYTE PTR [rdi+rbp*2+0x67],ch
   140003656:	outs   dx,DWORD PTR ds:[rsi]
   140003657:	outs   dx,BYTE PTR ds:[rsi]
	...
   140003660:	pop    rbx
   140003661:	and    eax,0x205d7368
   140003666:	sub    eax,0x74654720
   14000366b:	je     0x1400036d6
   14000366d:	outs   dx,BYTE PTR ds:[rsi]
   14000366e:	and    BYTE PTR [edi],ah
   140003671:	rex.WRXB
   140003672:	rex.WXB (bad) 
   140003674:	and    BYTE PTR [rbx+0x74],dh
   140003677:	jb     0x1400036e2
   140003679:	outs   dx,BYTE PTR ds:[rsi]
   14000367a:	add    BYTE PTR [eax],al
   14000367d:	add    BYTE PTR [rax],al
   14000367f:	add    BYTE PTR [rbx+0x25],bl
   140003682:	push   0x2d205d73
   140003687:	and    BYTE PTR [rbx+0x30],bl
   14000368a:	js     0x1400036b1
   14000368c:	xor    BYTE PTR [rax],bh
   14000368e:	pop    rax
   14000368f:	pop    rbp
   140003690:	and    BYTE PTR [rsi+0x61],al
   140003693:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14000369b:	jo     0x14000370f
   14000369d:	gs jae 0x140003713
   1400036a0:	and    BYTE PTR [rdi+0x4b],cl
   1400036a3:	and    BYTE PTR [rdx+0x75],ah
   1400036a6:	je     0x14000371c
   1400036a8:	outs   dx,DWORD PTR ds:[rsi]
   1400036a9:	outs   dx,BYTE PTR ds:[rsi]
   1400036aa:	add    BYTE PTR [rax],al
   1400036ac:	add    BYTE PTR [rax],al
   1400036ae:	add    BYTE PTR [rax],al
   1400036b0:	(bad)  
   1400036b1:	mov    dh,0xe1
   1400036b3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400036b4:	(bad)  
   1400036b5:	(bad)  
   1400036b6:	xor    al,BYTE PTR [rbx-0x6e]
   1400036b9:	test   BYTE PTR ds:[rdx+0x38],0x3e
   1400036be:	pop    rsp
   1400036bf:	sbb    BYTE PTR [rdx+rbp*4+0x37dd7d97],ch
   1400036c6:	or     BYTE PTR [rbp-0x54],0x17
   1400036ca:	push   rax
   1400036cb:	outs   dx,DWORD PTR ds:[rsi]
   1400036cc:	rex.RX jno 0x1400036c5
   1400036cf:	jle    0x1400036db
   1400036d1:	add    BYTE PTR [rbp+0x0],cl
   1400036d4:	imul   eax,DWORD PTR [rax],0x720063
   1400036da:	outs   dx,DWORD PTR ds:[rsi]
   1400036db:	add    BYTE PTR [rbx+0x0],dh
   1400036de:	outs   dx,DWORD PTR ds:[rsi]
   1400036df:	add    BYTE PTR [rsi+0x0],ah
   1400036e2:	je     0x1400036e4
   1400036e4:	sub    BYTE PTR [rax],al
   1400036e6:	push   rdx
   1400036e7:	add    BYTE PTR [rcx],ch
   1400036e9:	add    BYTE PTR [rax],ah
   1400036eb:	add    BYTE PTR [rdi+0x0],dl
   1400036ee:	imul   eax,DWORD PTR [rax],0x64006e
   1400036f4:	outs   dx,DWORD PTR ds:[rsi]
   1400036f5:	add    BYTE PTR [rdi+0x0],dh
   1400036f8:	jae    0x1400036fa
   1400036fa:	and    BYTE PTR [rax],al
   1400036fc:	push   rbx
   1400036fd:	add    BYTE PTR [rdi+0x0],ch
   140003700:	data16 add BYTE PTR [rax+rax*1+0x77],dh
   140003705:	add    BYTE PTR [rcx+0x0],ah
   140003708:	jb     0x14000370a
   14000370a:	add    BYTE PTR gs:[rax],ah
   14000370d:	add    BYTE PTR [rax+rax*1+0x6f],cl
   140003711:	add    BYTE PTR [rdi+0x0],ah
   140003714:	outs   dx,DWORD PTR ds:[rsi]
   140003715:	add    BYTE PTR [rax],ah
   140003717:	add    BYTE PTR [rsi+0x0],al
   14000371a:	(bad)  
   14000371b:	add    BYTE PTR [rbx+0x0],dh
   14000371e:	je     0x140003720
   140003720:	and    BYTE PTR [rax],al
   140003722:	push   rbp
   140003723:	add    BYTE PTR [rbx+0x0],dh
   140003726:	add    BYTE PTR gs:[rdx+0x0],dh
   14000372a:	and    BYTE PTR [rax],al
   14000372c:	push   rbx
   14000372d:	add    BYTE PTR [rdi+0x0],dh
   140003730:	imul   eax,DWORD PTR [rax],0x630074
   140003736:	push   0x6e006900
   14000373b:	add    BYTE PTR [rdi+0x0],ah
   14000373e:	and    BYTE PTR [rax],al
   140003740:	sub    BYTE PTR [rax],al
   140003742:	rex.RX add BYTE PTR [rbp+0x0],r10b
   140003746:	push   rbx
   140003747:	add    BYTE PTR [rcx],ch
   140003749:	add    BYTE PTR [rax],ah
   14000374b:	add    BYTE PTR [rax+0x0],cl
   14000374e:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   140003753:	add    BYTE PTR [rbp+0x0],ah
   140003756:	jb     0x140003758
   140003758:	or     al,BYTE PTR [rax]
   14000375a:	add    BYTE PTR [rax],al
   14000375c:	add    BYTE PTR [rax],al
   14000375e:	add    BYTE PTR [rax],al
   140003760:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003764:	jo     0x140003766
   140003766:	jns    0x140003768
   140003768:	jb     0x14000376a
   14000376a:	imul   eax,DWORD PTR [rax],0x680067
   140003770:	je     0x140003772
   140003772:	and    BYTE PTR [rax],al
   140003774:	sub    BYTE PTR [rax],al
   140003776:	rex.XB add BYTE PTR [r9],bpl
   140003779:	add    BYTE PTR [rax],ah
   14000377b:	add    BYTE PTR [rbp+0x0],cl
   14000377e:	imul   eax,DWORD PTR [rax],0x720063
   140003784:	outs   dx,DWORD PTR ds:[rsi]
   140003785:	add    BYTE PTR [rbx+0x0],dh
   140003788:	outs   dx,DWORD PTR ds:[rsi]
   140003789:	add    BYTE PTR [rsi+0x0],ah
   14000378c:	je     0x14000378e
   14000378e:	and    BYTE PTR [rax],al
   140003790:	rex.XB add BYTE PTR [r15+0x0],bpl
   140003794:	jb     0x140003796
   140003796:	jo     0x140003798
   140003798:	outs   dx,DWORD PTR ds:[rsi]
   140003799:	add    BYTE PTR [rdx+0x0],dh
   14000379c:	(bad)  
   14000379d:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400037a1:	add    BYTE PTR [rdi+0x0],ch
   1400037a4:	outs   dx,BYTE PTR ds:[rsi]
   1400037a5:	add    BYTE PTR [rsi],ch
   1400037a7:	add    BYTE PTR [rax],ah
   1400037a9:	add    BYTE PTR [rcx+0x0],al
   1400037ac:	ins    BYTE PTR es:[rdi],dx
   1400037ad:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400037b1:	add    BYTE PTR [rdx+0x0],dh
   1400037b4:	imul   eax,DWORD PTR [rax],0x680067
   1400037ba:	je     0x1400037bc
   1400037bc:	jae    0x1400037be
   1400037be:	and    BYTE PTR [rax],al
   1400037c0:	jb     0x1400037c2
   1400037c2:	add    BYTE PTR gs:[rbx+0x0],dh
   1400037c6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400037ca:	jbe    0x1400037cc
   1400037cc:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400037d1:	add    BYTE PTR [rdx],cl
   1400037d3:	add    BYTE PTR [rdx],cl
   1400037d5:	add    BYTE PTR [rax],al
   1400037d7:	add    BYTE PTR [rdx+0x0],dh
   1400037da:	add    BYTE PTR gs:[rbx+0x0],dh
   1400037de:	je     0x1400037e0
   1400037e0:	outs   dx,DWORD PTR ds:[rsi]
   1400037e1:	add    BYTE PTR [rdx+0x0],dh
   1400037e4:	add    BYTE PTR gs:[rax],al
   1400037e7:	add    BYTE PTR [rbx+0x0],dh
   1400037ea:	ja     0x1400037ec
   1400037ec:	imul   eax,DWORD PTR [rax],0x630074
   1400037f2:	push   0x0
   1400037f7:	add    BYTE PTR [rsi+0x61],dl
   1400037fa:	ins    BYTE PTR es:[rdi],dx
   1400037fb:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x74704f65
   140003803:	imul   ebp,DWORD PTR [rdi+0x6e],0x255b0073
   14000380a:	push   0x2d205d73
   14000380f:	and    BYTE PTR [rsi+0x65],dl
   140003812:	jb     0x140003876
   140003814:	and    BYTE PTR [rsi+0x6f],ch
   140003817:	je     0x140003839
   140003819:	jo     0x14000388d
   14000381b:	outs   dx,DWORD PTR ds:[rsi]
   14000381c:	jbe    0x140003887
   14000381e:	fs gs or al,BYTE PTR fs:[rax]
   140003823:	add    BYTE PTR [rax],al
   140003825:	add    BYTE PTR [rax],al
   140003827:	add    BYTE PTR [rbx+0x25],bl
   14000382a:	push   0x2d205d73
   14000382f:	and    BYTE PTR [rbp+0x73],dl
   140003832:	gs jb  0x140003855
   140003835:	outs   dx,BYTE PTR ds:[rsi]
   140003836:	(bad)  
   140003837:	ins    DWORD PTR es:[rdi],dx
   140003838:	and    BYTE PTR gs:[rsi+0x6f],ch
   14000383c:	je     0x14000385e
   14000383e:	jo     0x1400038b2
   140003840:	outs   dx,DWORD PTR ds:[rsi]
   140003841:	jbe    0x1400038ac
   140003843:	fs gs or al,BYTE PTR fs:[rax]
   140003848:	pop    rbx
   140003849:	and    eax,0x205d7368
   14000384e:	sub    eax,0x73655320
   140003853:	jae    0x1400038be
   140003855:	outs   dx,DWORD PTR ds:[rsi]
   140003856:	outs   dx,BYTE PTR ds:[rsi]
   140003857:	and    BYTE PTR [rcx+0x44],cl
   14000385a:	and    BYTE PTR [rsi+0x6f],ch
   14000385d:	je     0x14000387f
   14000385f:	jo     0x1400038d3
   140003861:	outs   dx,DWORD PTR ds:[rsi]
   140003862:	jbe    0x1400038cd
   140003864:	fs gs or al,BYTE PTR fs:[rax]
   140003869:	add    BYTE PTR [rax],al
   14000386b:	add    BYTE PTR [rax],al
   14000386d:	add    BYTE PTR [rax],al
   14000386f:	add    BYTE PTR [rdi+rbp*2+0x4c],al
   140003873:	outs   dx,DWORD PTR ds:[rsi]
   140003874:	outs   dx,DWORD PTR ds:[esi]
   140003876:	outs   dx,BYTE PTR ds:[rsi]
   140003877:	push   rbp
   140003878:	jae    0x1400038df
   14000387a:	jb     0x14000387c
   14000387c:	add    BYTE PTR [rax],al
   14000387e:	add    BYTE PTR [rax],al
   140003880:	pop    rbx
   140003881:	and    eax,0x205d7368
   140003886:	sub    eax,0x74744120
   14000388b:	gs ins DWORD PTR es:[rdi],dx
   14000388d:	jo     0x140003903
   14000388f:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   140003896:	jae    0x14000390f
   140003898:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x73656420
   1400038a0:	imul   esi,DWORD PTR [rdi+rbp*2+0x70],0xa
   1400038a5:	add    BYTE PTR [rax],al
   1400038a7:	add    BYTE PTR [rbx+0x25],bl
   1400038aa:	push   0x2d205d73
   1400038af:	and    BYTE PTR [rbx+0x30],bl
   1400038b2:	js     0x1400038d9
   1400038b4:	xor    BYTE PTR [rax],bh
   1400038b6:	pop    rax
   1400038b7:	pop    rbp
   1400038b8:	and    BYTE PTR [rsi+0x61],al
   1400038bb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400038c3:	jae    0x14000393c
   1400038c5:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x73656420
   1400038cd:	imul   esi,DWORD PTR [rdi+rbp*2+0x70],0xa
   1400038d2:	add    BYTE PTR [rax],al
   1400038d4:	add    BYTE PTR [rax],al
   1400038d6:	add    BYTE PTR [rax],al
   1400038d8:	pop    rbx
   1400038d9:	and    eax,0x205d7368
   1400038de:	sub    eax,0x74744120
   1400038e3:	gs ins DWORD PTR es:[rdi],dx
   1400038e5:	jo     0x14000395b
   1400038e7:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   1400038ee:	movsxd ebp,DWORD PTR [rax+0x65]
   1400038f1:	movsxd ebp,DWORD PTR [rbx+0x20]
   1400038f4:	movsxd esi,DWORD PTR [rbp+0x72]
   1400038f7:	jb     0x14000395e
   1400038f9:	outs   dx,BYTE PTR ds:[rsi]
   1400038fa:	je     0x14000391c
   1400038fc:	fs gs jae 0x14000396b
   140003900:	je     0x140003971
   140003902:	jo     0x14000390e
   140003904:	add    BYTE PTR [rax],al
   140003906:	add    BYTE PTR [rax],al
   140003908:	pop    rbx
   140003909:	and    eax,0x205d7368
   14000390e:	sub    eax,0x65735520
   140003913:	jb     0x140003935
   140003915:	outs   dx,BYTE PTR ds:[rsi]
   140003916:	(bad)  
   140003917:	ins    DWORD PTR es:[rdi],dx
   140003918:	cmp    ah,BYTE PTR gs:[rax]
   14000391b:	and    eax,0xa736c
   140003920:	pop    rbx
   140003921:	and    eax,0x205d7368
   140003926:	sub    eax,0x73615020
   14000392b:	jae    0x1400039a4
   14000392d:	outs   dx,DWORD PTR ds:[rsi]
   14000392e:	jb     0x140003994
   140003930:	cmp    ah,BYTE PTR [rax]
   140003932:	and    BYTE PTR [rip+0xa736c],ah        # 0x1400aaca4
   140003938:	pop    rbx
   140003939:	and    eax,0x205d7368
   14000393e:	sub    eax,0x78305b20
   140003943:	and    eax,0x5d583830
   140003948:	and    BYTE PTR [rsi+0x61],al
   14000394b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140003953:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000395a:	imul   edi,DWORD PTR [rdx+0x65],0x4d4f4320
   140003961:	and    BYTE PTR [rcx+rbp*2+0x62],ch
   140003965:	jb     0x1400039c8
   140003967:	jb     0x1400039d2
   140003969:	gs jae 0x140003976
   14000396c:	add    BYTE PTR [rax],al
   14000396e:	add    BYTE PTR [rax],al
   140003970:	pop    rbx
   140003971:	and    eax,0x205d7368
   140003976:	sub    eax,0x61655320
   14000397b:	jb     0x1400039e0
   14000397d:	push   0x20676e69
   140003982:	outs   dx,WORD PTR ds:[rsi]
   140003984:	jb     0x1400039a6
   140003986:	push   rdi
   140003987:	imul   ebp,DWORD PTR [rsi+0x6c],0x6e6f676f
   14000398e:	and    BYTE PTR [rdi+0x69],dh
   140003991:	outs   dx,BYTE PTR ds:[rsi]
   140003992:	outs   dx,DWORD PTR fs:[rsi]
   140003994:	ja     0x140003a09
   140003996:	or     al,BYTE PTR [rax]
   140003998:	pop    rbx
   140003999:	and    eax,0x205d7368
   14000399e:	sub    eax,0x78305b20
   1400039a3:	and    eax,0x5d583830
   1400039a8:	and    BYTE PTR [rsi+0x61],al
   1400039ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400039b3:	imul   bp,WORD PTR [rsi+0x64],0x5720
   1400039b9:	imul   ebp,DWORD PTR [rsi+0x6c],0x6e6f676f
   1400039c0:	and    BYTE PTR [rdi+0x69],dh
   1400039c3:	outs   dx,BYTE PTR ds:[rsi]
   1400039c4:	outs   dx,DWORD PTR fs:[rsi]
   1400039c6:	ja     0x140003a3b
   1400039c8:	or     al,BYTE PTR [rax]
   1400039ca:	add    BYTE PTR [rax],al
   1400039cc:	add    BYTE PTR [rax],al
   1400039ce:	add    BYTE PTR [rax],al
   1400039d0:	pop    rbx
   1400039d1:	and    eax,0x205d7368
   1400039d6:	sub    eax,0x756f4620
   1400039db:	outs   dx,BYTE PTR ds:[rsi]
   1400039dc:	and    BYTE PTR fs:[rdi],ah
   1400039df:	and    eax,0x57202764
   1400039e4:	imul   ebp,DWORD PTR [rsi+0x6c],0x6e6f676f
   1400039eb:	and    BYTE PTR [rdi+0x69],dh
   1400039ee:	outs   dx,BYTE PTR ds:[rsi]
   1400039ef:	outs   dx,DWORD PTR fs:[rsi]
   1400039f1:	ja     0x140003a66
   1400039f3:	or     al,BYTE PTR [rax]
   1400039f5:	add    BYTE PTR [rax],al
   1400039f7:	add    BYTE PTR [rbx+0x25],bl
   1400039fa:	push   0x2d205d73
   1400039ff:	and    BYTE PTR [rdi+0x69],dl
   140003a02:	outs   dx,BYTE PTR ds:[rsi]
   140003a03:	ins    BYTE PTR es:[rdi],dx
   140003a04:	outs   dx,DWORD PTR ds:[rsi]
   140003a05:	outs   dx,DWORD PTR ds:[esi]
   140003a07:	outs   dx,BYTE PTR ds:[rsi]
   140003a08:	and    BYTE PTR [rdi+0x69],dh
   140003a0b:	outs   dx,BYTE PTR ds:[rsi]
   140003a0c:	outs   dx,DWORD PTR fs:[rsi]
   140003a0e:	ja     0x140003a30
   140003a10:	(bad)  
   140003a11:	and    eax,0x203b2764
   140003a16:	push   0x6c646e61
   140003a1b:	and    BYTE PTR gs:[rdi],ah
   140003a1e:	and    eax,0xa70
   140003a23:	add    BYTE PTR [rax],al
   140003a25:	add    BYTE PTR [rax],al
   140003a27:	add    BYTE PTR [rbx+0x25],bl
   140003a2a:	push   0x2d205d73
   140003a2f:	and    BYTE PTR [rbx+0x75],dl
   140003a32:	movsxd esp,DWORD PTR [rbx+0x65]
   140003a35:	jae    0x140003aaa
   140003a37:	data16 jne 0x140003aa6
   140003a3a:	ins    BYTE PTR es:[rdi],dx
   140003a3b:	jns    0x140003a5d
   140003a3d:	ins    BYTE PTR es:[rdi],dx
   140003a3e:	outs   dx,DWORD PTR ds:[rsi]
   140003a3f:	addr32 gs and BYTE PTR fs:[edi+0x6e],ch
   140003a46:	and    BYTE PTR [rbp+0x73],dh
   140003a49:	gs jb  0x140003a56
   140003a4c:	add    BYTE PTR [rax],al
   140003a4e:	add    BYTE PTR [rax],al
   140003a50:	rex.W (bad) 
   140003a52:	outs   dx,BYTE PTR ds:[rsi]
   140003a53:	fs ins BYTE PTR es:[rdi],dx
   140003a55:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140003a58:	fs gs push rbx
   140003a5b:	ja     0x140003ac6
   140003a5d:	je     0x140003ac2
   140003a5f:	push   0x0
   140003a64:	add    BYTE PTR [rax],al
   140003a66:	add    BYTE PTR [rax],al
   140003a68:	pop    rbx
   140003a69:	and    eax,0x205d7368
   140003a6e:	sub    eax,0x74744120
   140003a73:	gs ins DWORD PTR es:[rdi],dx
   140003a75:	jo     0x140003aeb
   140003a77:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   140003a7e:	ins    BYTE PTR es:[rdi],dx
   140003a7f:	outs   dx,DWORD PTR ds:[rsi]
   140003a80:	outs   dx,DWORD PTR ds:[esi]
   140003a82:	outs   dx,BYTE PTR ds:[rsi]
   140003a83:	and    BYTE PTR [rbp+0x73],dh
   140003a86:	gs jb  0x140003a93
   140003a89:	add    BYTE PTR [rax],al
   140003a8b:	add    BYTE PTR [rax],al
   140003a8d:	add    BYTE PTR [rax],al
   140003a8f:	add    BYTE PTR [rbx+0x25],bl
   140003a92:	push   0x2d205d73
   140003a97:	and    BYTE PTR [rbx+0x30],bl
   140003a9a:	js     0x140003ac1
   140003a9c:	xor    BYTE PTR [rax],bh
   140003a9e:	pop    rax
   140003a9f:	pop    rbp
   140003aa0:	and    BYTE PTR [rsi+0x61],al
   140003aa3:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140003aab:	ins    BYTE PTR es:[rdi],dx
   140003aac:	outs   dx,DWORD PTR ds:[rsi]
   140003aad:	outs   dx,DWORD PTR ds:[esi]
   140003aaf:	outs   dx,BYTE PTR ds:[rsi]
   140003ab0:	and    BYTE PTR [rbp+0x73],dh
   140003ab3:	gs jb  0x140003ac0
   140003ab6:	add    BYTE PTR [rax],al
   140003ab8:	pop    rbx
   140003ab9:	and    eax,0x205d7368
   140003abe:	sub    eax,0x78305b20
   140003ac3:	and    eax,0x5d583830
   140003ac8:	and    BYTE PTR [rsi+0x61],al
   140003acb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140003ad3:	jo     0x140003b3a
   140003ad5:	jb     0x140003b3d
   140003ad7:	outs   dx,DWORD PTR ds:[rsi]
   140003ad8:	jb     0x140003b47
   140003ada:	and    BYTE PTR [rdi],ah
   140003adc:	jae    0x140003b55
   140003ade:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x706f2027
   140003ae6:	gs jb  0x140003b4a
   140003ae9:	je     0x140003b54
   140003aeb:	outs   dx,DWORD PTR ds:[rsi]
   140003aec:	outs   dx,BYTE PTR ds:[rsi]
   140003aed:	or     al,BYTE PTR [rax]
   140003aef:	add    BYTE PTR [rax+0x61],cl
   140003af2:	outs   dx,BYTE PTR ds:[rsi]
   140003af3:	fs ins BYTE PTR es:[rdi],dx
   140003af5:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140003af8:	fs gs push rdx
   140003afb:	gs jae 0x140003b72
   140003afe:	outs   dx,DWORD PTR ds:[rsi]
   140003aff:	jb     0x140003b66
   140003b01:	add    BYTE PTR [rax],al
   140003b03:	add    BYTE PTR [rax],al
   140003b05:	add    BYTE PTR [rax],al
   140003b07:	add    BYTE PTR [rbx+0x25],bl
   140003b0a:	push   0x2d205d73
   140003b0f:	sub    eax,0x7441202d
   140003b14:	je     0x140003b7b
   140003b16:	ins    DWORD PTR es:[rdi],dx
   140003b17:	jo     0x140003b8d
   140003b19:	imul   ebp,DWORD PTR [rsi+0x67],0x73657220
   140003b20:	je     0x140003b91
   140003b22:	jb     0x140003b89
   140003b24:	and    BYTE PTR [rip+0xa2d2d],ch        # 0x1400a6857
   140003b2a:	add    BYTE PTR [rax],al
   140003b2c:	add    BYTE PTR [rax],al
   140003b2e:	add    BYTE PTR [rax],al
   140003b30:	rex.XB jne 0x140003ba5
   140003b33:	jb     0x140003b9a
   140003b35:	outs   dx,BYTE PTR ds:[rsi]
   140003b36:	je     0x140003b58
   140003b38:	jae    0x140003b9f
   140003b3a:	jae    0x140003baf
   140003b3c:	imul   ebp,DWORD PTR [rdi+0x6e],0x2020203a
   140003b43:	and    BYTE PTR [rax],ah
   140003b45:	(bad)  
   140003b46:	and    eax,0x2764
   140003b4b:	add    BYTE PTR [rax],al
   140003b4d:	add    BYTE PTR [rax],al
   140003b4f:	add    BYTE PTR [rbp+riz*2+0x73],al
   140003b53:	je     0x140003bbe
   140003b55:	outs   dx,BYTE PTR ds:[rsi]
   140003b56:	(bad)  
   140003b57:	je     0x140003bc2
   140003b59:	outs   dx,DWORD PTR ds:[rsi]
   140003b5a:	outs   dx,BYTE PTR ds:[rsi]
   140003b5b:	and    BYTE PTR [rbx+0x65],dh
   140003b5e:	jae    0x140003bd3
   140003b60:	imul   ebp,DWORD PTR [rdi+0x6e],0x2527203a
   140003b67:	fs (bad) 
   140003b69:	add    BYTE PTR [rax],al
   140003b6b:	add    BYTE PTR [rax],al
   140003b6d:	add    BYTE PTR [rax],al
   140003b6f:	add    BYTE PTR [rbx+0x25],bl
   140003b72:	push   0x2d205d73
   140003b77:	and    BYTE PTR [rbx+0x25],bl
   140003b7a:	fs pop rbp
   140003b7c:	and    BYTE PTR [rsi+0x61],al
   140003b7f:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140003b87:	jb     0x140003bee
   140003b89:	jae    0x140003bff
   140003b8b:	outs   dx,DWORD PTR ds:[rsi]
   140003b8c:	jb     0x140003bf3
   140003b8e:	and    BYTE PTR [rbp+0x73],dh
   140003b91:	gs jb  0x140003b9e
   140003b94:	add    BYTE PTR [rax],al
   140003b96:	add    BYTE PTR [rax],al
   140003b98:	pop    rbx
   140003b99:	and    eax,0x205d7368
   140003b9e:	sub    eax,0x69614620
   140003ba3:	ins    BYTE PTR es:[rdi],dx
   140003ba4:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   140003baa:	jo     0x140003c11
   140003bac:	jb     0x140003c14
   140003bae:	outs   dx,DWORD PTR ds:[rsi]
   140003baf:	jb     0x140003c1e
   140003bb1:	and    BYTE PTR [rdi],ah
   140003bb3:	jb     0x140003c1a
   140003bb5:	jae    0x140003c2b
   140003bb7:	outs   dx,DWORD PTR ds:[rsi]
   140003bb8:	jb     0x140003c1f
   140003bba:	(bad)  
   140003bbb:	and    BYTE PTR [rdi+0x70],ch
   140003bbe:	gs jb  0x140003c22
   140003bc1:	je     0x140003c2c
   140003bc3:	outs   dx,DWORD PTR ds:[rsi]
   140003bc4:	outs   dx,BYTE PTR ds:[rsi]
   140003bc5:	or     al,BYTE PTR [rax]
   140003bc7:	add    BYTE PTR [rbx+0x25],bl
   140003bca:	push   0x2d205d73
   140003bcf:	and    BYTE PTR [rbx+0x75],dl
   140003bd2:	movsxd esp,DWORD PTR [rbx+0x65]
   140003bd5:	jae    0x140003c4a
   140003bd7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140003bdb:	jo     0x140003c42
   140003bdd:	jb     0x140003c45
   140003bdf:	outs   dx,DWORD PTR ds:[rsi]
   140003be0:	jb     0x140003c4f
   140003be2:	and    BYTE PTR [rdi],ah
   140003be4:	jb     0x140003c4b
   140003be6:	jae    0x140003c5c
   140003be8:	outs   dx,DWORD PTR ds:[rsi]
   140003be9:	jb     0x140003c50
   140003beb:	(bad)  
   140003bec:	and    BYTE PTR [rdi+0x70],ch
   140003bef:	gs jb  0x140003c53
   140003bf2:	je     0x140003c5d
   140003bf4:	outs   dx,DWORD PTR ds:[rsi]
   140003bf5:	outs   dx,BYTE PTR ds:[rsi]
   140003bf6:	or     al,BYTE PTR [rax]
   140003bf8:	ja     0x140003c67
   140003bfa:	(bad)  
   140003bfb:	imul   ebp,DWORD PTR [rsi+0x0],0x255b0000
   140003c02:	push   0x2d205d73
   140003c07:	and    BYTE PTR [rsi+0x55],al
   140003c0a:	push   rbx
   140003c0b:	and    BYTE PTR [rdx+0x72],ah
   140003c0e:	outs   dx,DWORD PTR ds:[rsi]
   140003c0f:	imul   esp,DWORD PTR [rbp+0x72],0x20
   140003c13:	jb     0x140003c8a
   140003c15:	outs   dx,BYTE PTR ds:[rsi]
   140003c16:	outs   dx,BYTE PTR ds:[rsi]
   140003c17:	imul   ebp,DWORD PTR [rsi+0x67],0xa
   140003c1e:	add    BYTE PTR [rax],al
   140003c20:	pop    rbx
   140003c21:	and    eax,0x205d7368
   140003c26:	sub    eax,0x6d6f4320
   140003c2b:	ins    DWORD PTR es:[rdi],dx
   140003c2c:	(bad)  
   140003c2d:	outs   dx,BYTE PTR ds:[rsi]
   140003c2e:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   140003c33:	and    BYTE PTR gs:[rcx+0x73],ch
   140003c37:	and    BYTE PTR [rsi+0x6f],ch
   140003c3a:	je     0x140003c5c
   140003c3c:	jbe    0x140003c9f
   140003c3e:	ins    BYTE PTR es:[rdi],dx
   140003c3f:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x0
   140003c47:	add    BYTE PTR [rbx+0x25],bl
   140003c4a:	push   0x2d205d73
   140003c4f:	and    BYTE PTR [rbx+0x6f],al
   140003c52:	ins    DWORD PTR es:[rdi],dx
   140003c53:	ins    DWORD PTR es:[rdi],dx
   140003c54:	(bad)  
   140003c55:	outs   dx,BYTE PTR ds:[rsi]
   140003c56:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   140003c5b:	and    BYTE PTR gs:[rdi+0x70],ch
   140003c5f:	je     0x140003cca
   140003c61:	outs   dx,DWORD PTR ds:[rsi]
   140003c62:	outs   dx,BYTE PTR ds:[rsi]
   140003c63:	jae    0x140003c85
   140003c65:	(bad)  
   140003c66:	jb     0x140003ccd
   140003c68:	and    BYTE PTR [rsi+0x6f],ch
   140003c6b:	je     0x140003c8d
   140003c6d:	jbe    0x140003cd0
   140003c6f:	ins    BYTE PTR es:[rdi],dx
   140003c70:	imul   esp,DWORD PTR [rdx+rcx*1+0x0],0x0
   140003c78:	pop    rbx
   140003c79:	and    eax,0x205d7368
   140003c7e:	sub    eax,0x65704f20
   140003c83:	jb     0x140003ce6
   140003c85:	je     0x140003cf0
   140003c87:	outs   dx,DWORD PTR ds:[rsi]
   140003c88:	outs   dx,BYTE PTR ds:[rsi]
   140003c89:	and    BYTE PTR [rbp+0x6f],ch
   140003c8c:	fs cmp ah,BYTE PTR gs:[rax]
   140003c90:	jae    0x140003d09
   140003c92:	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x255b000a
   140003c9a:	push   0x2d205d73
   140003c9f:	and    BYTE PTR [rdi+0x70],cl
   140003ca2:	gs jb  0x140003d06
   140003ca5:	je     0x140003d10
   140003ca7:	outs   dx,DWORD PTR ds:[rsi]
   140003ca8:	outs   dx,BYTE PTR ds:[rsi]
   140003ca9:	and    BYTE PTR [rbp+0x6f],ch
   140003cac:	fs cmp ah,BYTE PTR gs:[rax]
   140003cb0:	jb     0x140003d17
   140003cb2:	jae    0x140003d28
   140003cb4:	outs   dx,DWORD PTR ds:[rsi]
   140003cb5:	jb     0x140003d1c
   140003cb7:	or     al,BYTE PTR [rax]
   140003cb9:	add    BYTE PTR [rax],al
   140003cbb:	add    BYTE PTR [rax],al
   140003cbd:	add    BYTE PTR [rax],al
   140003cbf:	add    BYTE PTR [rbx+0x25],bl
   140003cc2:	push   0x2d205d73
   140003cc7:	and    BYTE PTR [rdi+0x70],cl
   140003cca:	gs jb  0x140003d2e
   140003ccd:	je     0x140003d38
   140003ccf:	outs   dx,DWORD PTR ds:[rsi]
   140003cd0:	outs   dx,BYTE PTR ds:[rsi]
   140003cd1:	and    BYTE PTR [rbp+0x6f],ch
   140003cd4:	fs cmp ah,BYTE PTR gs:[rax]
   140003cd8:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140003cdf:	or     al,BYTE PTR [rax]
   140003ce1:	add    BYTE PTR [rax],al
   140003ce3:	add    BYTE PTR [rax],al
   140003ce5:	add    BYTE PTR [rax],al
   140003ce7:	add    BYTE PTR [rip+0x79005300],ah        # 0x1b9008fed
   140003ced:	add    BYTE PTR [rbx+0x0],dh
   140003cf0:	je     0x140003cf2
   140003cf2:	add    BYTE PTR gs:[rbp+0x0],ch
   140003cf6:	push   rdx
   140003cf7:	add    BYTE PTR [rdi+0x0],ch
   140003cfa:	outs   dx,DWORD PTR ds:[rsi]
   140003cfb:	add    BYTE PTR [rax+rax*1+0x25],dh
   140003cff:	add    BYTE PTR [rax+rax*1+0x54],bl
   140003d03:	add    BYTE PTR [rbp+0x0],al
   140003d06:	rex.WRB add BYTE PTR [r8+0x0],r10b
   140003d0a:	add    BYTE PTR [rax],al
   140003d0c:	add    BYTE PTR [rax],al
   140003d0e:	add    BYTE PTR [rax],al
   140003d10:	and    eax,0x73006c00
   140003d15:	add    BYTE PTR [rdi+0x0],bl
   140003d18:	and    eax,0x32003000
   140003d1d:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140003d21:	add    BYTE PTR [rip+0x32003000],ah        # 0x172006d27
   140003d27:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140003d2b:	add    BYTE PTR [rip+0x34003000],ah        # 0x174006d31
   140003d31:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140003d35:	add    BYTE PTR [rip+0x30002500],ch        # 0x17000623b
   140003d3b:	add    BYTE PTR [rdx],dh
   140003d3d:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140003d41:	add    BYTE PTR [rip+0x32003000],ah        # 0x172006d47
   140003d47:	add    BYTE PTR [rax+rax*1+0x2d],ah
   140003d4b:	add    BYTE PTR [rip+0x32003000],ah        # 0x172006d51
   140003d51:	add    BYTE PTR [rax+rax*1+0x2e],ah
   140003d55:	add    BYTE PTR [rax+rax*1+0x6f],ch
   140003d59:	add    BYTE PTR [rdi+0x0],ah
   140003d5c:	add    BYTE PTR [rax],al
   140003d5e:	add    BYTE PTR [rax],al
   140003d60:	and    BYTE PTR [rbx+0x45],bl
   140003d63:	push   rdx
   140003d64:	push   rdx
   140003d65:	rex.WRXB push r10
   140003d67:	pop    rbp
   140003d68:	and    BYTE PTR [rax],al
   140003d6a:	add    BYTE PTR [rax],al
   140003d6c:	add    BYTE PTR [rax],al
   140003d6e:	add    BYTE PTR [rax],al
   140003d70:	and    BYTE PTR [rbx+0x57],bl
   140003d73:	push   r10
   140003d75:	rex.WRX
   140003d76:	rex.WB
   140003d77:	rex.WRX
   140003d78:	rex.RXB pop r13
   140003d7a:	and    BYTE PTR [rax],al
   140003d7c:	add    BYTE PTR [rax],al
   140003d7e:	add    BYTE PTR [rax],al
   140003d80:	and    BYTE PTR [rbx+0x49],bl
   140003d83:	rex.WRX
   140003d84:	rex.RX
   140003d85:	rex.WRXB pop r13
   140003d87:	and    BYTE PTR [rax],al
   140003d89:	add    BYTE PTR [rax],al
   140003d8b:	add    BYTE PTR [rax],al
   140003d8d:	add    BYTE PTR [rax],al
   140003d8f:	add    BYTE PTR [rax],ah
   140003d91:	pop    rbx
   140003d92:	pop    rax
   140003d93:	pop    rax
   140003d94:	pop    rax
   140003d95:	pop    rax
   140003d96:	pop    rbp
   140003d97:	and    BYTE PTR [rax],al
   140003d99:	add    BYTE PTR [rax],al
   140003d9b:	add    BYTE PTR [rax],al
   140003d9d:	add    BYTE PTR [rax],al
   140003d9f:	add    BYTE PTR [rbx+0x25],bl
   140003da2:	xor    BYTE PTR [rdx],dh
   140003da4:	fs (bad) 
   140003da6:	and    eax,0x2f643230
   140003dab:	and    eax,0x20643430
   140003db0:	and    eax,0x3a643230
   140003db5:	and    eax,0x3a643230
   140003dba:	and    eax,0x5d643230
   140003dbf:	add    BYTE PTR [rax+0x0],dh
	...
   140003e16:	add    BYTE PTR [rax],al
   140003e18:	jo     0x140003e2b
   140003e1a:	add    DWORD PTR [rax+0x1],eax
	...
   140003e2d:	add    BYTE PTR [rax],al
   140003e2f:	add    BYTE PTR [rdx+0x53],dl
   140003e32:	rex.R push rbx
   140003e34:	(bad)  
   140003e35:	clc    
   140003e36:	int    0xa7
   140003e38:	movsxd ebx,eax
   140003e3a:	leave  
   140003e3b:	rex.X test eax,0xe4aa9df8
   140003e41:	mov    ecx,DWORD PTR [rax+0x15]
   140003e44:	add    DWORD PTR [rax],eax
   140003e46:	add    BYTE PTR [rax],al
   140003e48:	data16 jne 0x140003ebe
   140003e4b:	(bad)  
   140003e4c:	outs   dx,BYTE PTR gs:[esi]
   140003e4f:	je     0x140003e7f
   140003e51:	jo     0x140003eb7
   140003e53:	(bad)  
	...
   140003e68:	mov    QWORD PTR [rsp+0x8],rbx
   140003e6d:	mov    QWORD PTR [rsp+0x10],rsi
   140003e72:	push   rdi
   140003e73:	sub    rsp,0x20
   140003e77:	mov    rsi,rdx
   140003e7a:	mov    rbx,rcx
   140003e7d:	xor    edi,edi
   140003e7f:	call   QWORD PTR [rip+0x125c3]        # 0x140016448
   140003e85:	lea    edx,[rdi+0x8]
   140003e88:	lea    r8d,[rdi+0x18]
   140003e8c:	mov    rcx,rax
   140003e8f:	call   QWORD PTR [rip+0x125bb]        # 0x140016450
   140003e95:	test   rax,rax
   140003e98:	jne    0x140003eba
   140003e9a:	call   QWORD PTR [rip+0x125b8]        # 0x140016458
   140003ea0:	lea    r8,[rip+0xffffffffffffe8d9]        # 0x140002780
   140003ea7:	lea    rdx,[rip+0xffffffffffffe8fa]        # 0x1400027a8
   140003eae:	mov    r9d,eax
   140003eb1:	xor    ecx,ecx
   140003eb3:	call   0x1400067e0
   140003eb8:	jmp    0x140003edf
   140003eba:	mov    QWORD PTR [rax+0x10],rsi
   140003ebe:	mov    rcx,QWORD PTR [rbx+0x8]
   140003ec2:	mov    QWORD PTR [rax],rbx
   140003ec5:	mov    QWORD PTR [rax+0x8],rcx
   140003ec9:	cmp    QWORD PTR [rcx],rbx
   140003ecc:	je     0x140003ed5
   140003ece:	mov    ecx,0x3
   140003ed3:	int    0x29
   140003ed5:	mov    QWORD PTR [rcx],rax
   140003ed8:	mov    dil,0x1
   140003edb:	mov    QWORD PTR [rbx+0x8],rax
   140003edf:	mov    rbx,QWORD PTR [rsp+0x30]
   140003ee4:	mov    rsi,QWORD PTR [rsp+0x38]
   140003ee9:	mov    al,dil
   140003eec:	add    rsp,0x20
   140003ef0:	pop    rdi
   140003ef1:	ret    
   140003ef2:	int3   
   140003ef3:	int3   
   140003ef4:	int3   
   140003ef5:	int3   
   140003ef6:	int3   
   140003ef7:	int3   
   140003ef8:	mov    rax,rsp
   140003efb:	push   rbx
   140003efc:	sub    rsp,0x20
   140003f00:	and    QWORD PTR [rax+0x10],0x0
   140003f05:	and    DWORD PTR [rax+0x8],0x0
   140003f09:	lea    r8,[rax+0x8]
   140003f0d:	lea    rdx,[rax+0x10]
   140003f11:	xor    ecx,ecx
   140003f13:	xor    bl,bl
   140003f15:	call   QWORD PTR [rip+0x12765]        # 0x140016680
   140003f1b:	test   eax,eax
   140003f1d:	jne    0x140003f2f
   140003f1f:	cmp    DWORD PTR [rsp+0x30],0x3
   140003f24:	movzx  ebx,bl
   140003f27:	mov    eax,0x1
   140003f2c:	cmove  ebx,eax
   140003f2f:	mov    rcx,QWORD PTR [rsp+0x38]
   140003f34:	test   rcx,rcx
   140003f37:	je     0x140003f3f
   140003f39:	call   QWORD PTR [rip+0x12739]        # 0x140016678
   140003f3f:	mov    al,bl
   140003f41:	add    rsp,0x20
   140003f45:	pop    rbx
   140003f46:	ret    
   140003f47:	int3   
   140003f48:	int3   
   140003f49:	int3   
   140003f4a:	int3   
   140003f4b:	int3   
   140003f4c:	int3   
   140003f4d:	int3   
   140003f4e:	int3   
   140003f4f:	int3   
   140003f50:	mov    rax,rsp
   140003f53:	mov    QWORD PTR [rax+0x20],r9
   140003f57:	mov    DWORD PTR [rax+0x18],r8d
   140003f5b:	mov    QWORD PTR [rax+0x10],rdx
   140003f5f:	mov    QWORD PTR [rax+0x8],rcx
   140003f63:	push   rbp
   140003f64:	push   rbx
   140003f65:	push   rsi
   140003f66:	push   rdi
   140003f67:	lea    rbp,[rsp-0x68]
   140003f6c:	sub    rsp,0x168
   140003f73:	mov    rdi,QWORD PTR [rbp+0xb0]
   140003f7a:	xor    eax,eax
   140003f7c:	lea    rcx,[rbp-0x80]
   140003f80:	mov    rbx,rdx
   140003f83:	mov    QWORD PTR [rsp+0x68],rax
   140003f88:	mov    DWORD PTR [rsp+0x70],eax
   140003f8c:	mov    BYTE PTR [rdi],al
   140003f8e:	mov    DWORD PTR [rsp+0x40],eax
   140003f92:	mov    esi,eax
   140003f94:	mov    QWORD PTR [rsp+0x48],rax
   140003f99:	call   QWORD PTR [rip+0x12709]        # 0x1400166a8
   140003f9f:	lea    rcx,[rbp+0x40]
   140003fa3:	call   QWORD PTR [rip+0x126ff]        # 0x1400166a8
   140003fa9:	mov    r11,QWORD PTR [rbx]
   140003fac:	lea    rdx,[rsp+0x40]
   140003fb1:	mov    rcx,rbx
   140003fb4:	call   QWORD PTR [r11+0x40]
   140003fb8:	mov    ebx,eax
   140003fba:	test   eax,eax
   140003fbc:	jns    0x140003fca
   140003fbe:	lea    rdx,[rip+0xffffffffffffe82b]        # 0x1400027f0
   140003fc5:	jmp    0x1400043ac
   140003fca:	movsxd rax,DWORD PTR [rsp+0x40]
   140003fcf:	test   eax,eax
   140003fd1:	jne    0x140003ff0
   140003fd3:	lea    r8,[rip+0xffffffffffffe7f6]        # 0x1400027d0
   140003fda:	lea    rdx,[rip+0xffffffffffffe83f]        # 0x140002820
   140003fe1:	lea    ecx,[rax+0x2]
   140003fe4:	xor    ebx,ebx
   140003fe6:	call   0x1400067e0
   140003feb:	jmp    0x1400043fa
   140003ff0:	lea    rcx,[rax+rax*2]
   140003ff4:	shl    rcx,0x3
   140003ff8:	call   QWORD PTR [rip+0x12792]        # 0x140016790
   140003ffe:	mov    rsi,rax
   140004001:	test   rax,rax
   140004004:	jne    0x14000401a
   140004006:	mov    ebx,0x8007000e
   14000400b:	lea    rdx,[rip+0xffffffffffffe82e]        # 0x140002840
   140004012:	mov    r9d,ebx
   140004015:	jmp    0x1400043af
   14000401a:	lea    rcx,[rsp+0x50]
   14000401f:	call   QWORD PTR [rip+0x12683]        # 0x1400166a8
   140004025:	mov    r8d,DWORD PTR [rsp+0x40]
   14000402a:	xor    ebx,ebx
   14000402c:	test   r8d,r8d
   14000402f:	jle    0x14000404e
   140004031:	movsxd rax,ebx
   140004034:	lea    rcx,[rax+rax*2]
   140004038:	lea    rcx,[rsi+rcx*8]
   14000403c:	call   QWORD PTR [rip+0x12666]        # 0x1400166a8
   140004042:	mov    r8d,DWORD PTR [rsp+0x40]
   140004047:	inc    ebx
   140004049:	cmp    ebx,r8d
   14000404c:	jl     0x140004031
   14000404e:	mov    rcx,QWORD PTR [rbp+0x98]
   140004055:	lea    rax,[rsp+0x70]
   14000405a:	mov    r9,rsi
   14000405d:	xor    edx,edx
   14000405f:	mov    QWORD PTR [rsp+0x20],rax
   140004064:	call   QWORD PTR [rip+0x12626]        # 0x140016690
   14000406a:	mov    ebx,eax
   14000406c:	test   eax,eax
   14000406e:	jns    0x14000407c
   140004070:	lea    rdx,[rip+0xffffffffffffe7f9]        # 0x140002870
   140004077:	jmp    0x1400043ac
   14000407c:	mov    eax,DWORD PTR [rsp+0x40]
   140004080:	cmp    DWORD PTR [rsp+0x70],eax
   140004084:	je     0x14000409a
   140004086:	mov    ebx,0x8000ffff
   14000408b:	lea    rdx,[rip+0xffffffffffffe806]        # 0x140002898
   140004092:	mov    r9d,ebx
   140004095:	jmp    0x1400043af
   14000409a:	and    DWORD PTR [rbp+0xb0],0x0
   1400040a1:	test   eax,eax
   1400040a3:	jle    0x1400043fa
   1400040a9:	lea    rbx,[rsi+0x8]
   1400040ad:	mov    QWORD PTR [rsp+0x78],rbx
   1400040b2:	mov    rcx,QWORD PTR [rsp+0x48]
   1400040b7:	mov    BYTE PTR [rdi],0x0
   1400040ba:	test   rcx,rcx
   1400040bd:	je     0x1400040cb
   1400040bf:	mov    rax,QWORD PTR [rcx]
   1400040c2:	call   QWORD PTR [rax+0x10]
   1400040c5:	and    QWORD PTR [rsp+0x48],0x0
   1400040cb:	mov    eax,0x9
   1400040d0:	cmp    ax,WORD PTR [rbx-0x8]
   1400040d4:	jne    0x140004213
   1400040da:	mov    rcx,QWORD PTR [rbx]
   1400040dd:	lea    r8,[rsp+0x48]
   1400040e2:	lea    rdx,[rip+0xffffffffffffe687]        # 0x140002770
   1400040e9:	mov    rax,QWORD PTR [rcx]
   1400040ec:	call   QWORD PTR [rax]
   1400040ee:	mov    ebx,eax
   1400040f0:	test   eax,eax
   1400040f2:	js     0x14000439c
   1400040f8:	and    DWORD PTR [rsp+0x58],0x0
   1400040fd:	mov    rcx,QWORD PTR [rsp+0x48]
   140004102:	movsd  xmm1,QWORD PTR [rsp+0x58]
   140004108:	mov    eax,0x3
   14000410d:	lea    r8,[rbp-0x80]
   140004111:	lea    rdx,[rbp+0x20]
   140004115:	movsd  QWORD PTR [rbp+0x28],xmm1
   14000411a:	mov    WORD PTR [rsp+0x50],ax
   14000411f:	mov    rax,QWORD PTR [rcx]
   140004122:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140004128:	movsd  QWORD PTR [rbp+0x20],xmm0
   14000412d:	movsd  xmm0,QWORD PTR [rsp+0x60]
   140004133:	movsd  QWORD PTR [rbp+0x30],xmm0
   140004138:	call   QWORD PTR [rax+0x68]
   14000413b:	mov    ebx,eax
   14000413d:	test   eax,eax
   14000413f:	jns    0x140004161
   140004141:	lea    r8,[rip+0xffffffffffffe688]        # 0x1400027d0
   140004148:	lea    rdx,[rip+0xffffffffffffe791]        # 0x1400028e0
   14000414f:	mov    r9d,eax
   140004152:	mov    ecx,0x1
   140004157:	call   0x1400067e0
   14000415c:	jmp    0x140004366
   140004161:	mov    eax,DWORD PTR [rbp-0x78]
   140004164:	cmp    eax,0x3
   140004167:	jl     0x14000417b
   140004169:	cmp    eax,0x4
   14000416c:	jle    0x140004366
   140004172:	cmp    eax,0x15
   140004175:	je     0x140004366
   14000417b:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140004181:	mov    rcx,QWORD PTR [rsp+0x48]
   140004186:	movsd  xmm1,QWORD PTR [rsp+0x58]
   14000418c:	lea    r8,[rbp+0x40]
   140004190:	lea    rdx,[rbp-0x20]
   140004194:	mov    rax,QWORD PTR [rcx]
   140004197:	movsd  QWORD PTR [rbp-0x20],xmm0
   14000419c:	movsd  xmm0,QWORD PTR [rsp+0x60]
   1400041a2:	movsd  QWORD PTR [rbp-0x18],xmm1
   1400041a7:	movsd  QWORD PTR [rbp-0x10],xmm0
   1400041ac:	call   QWORD PTR [rax+0x70]
   1400041af:	mov    ebx,eax
   1400041b1:	test   eax,eax
   1400041b3:	js     0x140004393
   1400041b9:	cmp    DWORD PTR [rbp+0x48],0x10000
   1400041c0:	je     0x140004236
   1400041c2:	mov    rax,QWORD PTR [rbp+0xc0]
   1400041c9:	mov    r9,QWORD PTR [rbp+0xa8]
   1400041d0:	mov    r8d,DWORD PTR [rbp+0xa0]
   1400041d7:	mov    rdx,QWORD PTR [rsp+0x48]
   1400041dc:	mov    rcx,QWORD PTR [rbp+0x90]
   1400041e3:	mov    QWORD PTR [rsp+0x30],rax
   1400041e8:	mov    rax,QWORD PTR [rbp+0xb8]
   1400041ef:	mov    QWORD PTR [rsp+0x28],rax
   1400041f4:	mov    QWORD PTR [rsp+0x20],rdi
   1400041f9:	call   0x140003f50
   1400041fe:	mov    ebx,eax
   140004200:	test   eax,eax
   140004202:	js     0x14000438a
   140004208:	cmp    BYTE PTR [rdi],0x0
   14000420b:	jne    0x1400043f8
   140004211:	jmp    0x140004236
   140004213:	mov    rcx,QWORD PTR [rbp+0x98]
   14000421a:	mov    QWORD PTR [rsp+0x48],rcx
   14000421f:	mov    rax,QWORD PTR [rcx]
   140004222:	call   QWORD PTR [rax+0x8]
   140004225:	movzx  r11d,WORD PTR [rbx-0x8]
   14000422a:	mov    WORD PTR [rsp+0x50],r11w
   140004230:	mov    eax,DWORD PTR [rbx]
   140004232:	mov    DWORD PTR [rsp+0x58],eax
   140004236:	movsd  xmm0,QWORD PTR [rsp+0x50]
   14000423c:	mov    rcx,QWORD PTR [rsp+0x48]
   140004241:	movsd  xmm1,QWORD PTR [rsp+0x58]
   140004247:	lea    r8,[rbp-0x80]
   14000424b:	lea    rdx,[rbp-0x60]
   14000424f:	mov    rax,QWORD PTR [rcx]
   140004252:	movsd  QWORD PTR [rbp-0x60],xmm0
   140004257:	movsd  xmm0,QWORD PTR [rsp+0x60]
   14000425d:	movsd  QWORD PTR [rbp-0x58],xmm1
   140004262:	movsd  QWORD PTR [rbp-0x50],xmm0
   140004267:	call   QWORD PTR [rax+0x68]
   14000426a:	mov    ebx,eax
   14000426c:	test   eax,eax
   14000426e:	js     0x140004141
   140004274:	mov    eax,DWORD PTR [rbp+0xa0]
   14000427a:	cmp    DWORD PTR [rbp-0x78],eax
   14000427d:	jne    0x140004366
   140004283:	mov    rbx,QWORD PTR [rbp+0xa8]
   14000428a:	test   rbx,rbx
   14000428d:	je     0x1400043bf
   140004293:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140004299:	mov    rcx,QWORD PTR [rsp+0x48]
   14000429e:	movsd  xmm1,QWORD PTR [rsp+0x58]
   1400042a4:	lea    r8,[rsp+0x68]
   1400042a9:	lea    rdx,[rbp-0x40]
   1400042ad:	mov    rax,QWORD PTR [rcx]
   1400042b0:	movsd  QWORD PTR [rbp-0x40],xmm0
   1400042b5:	movsd  xmm0,QWORD PTR [rsp+0x60]
   1400042bb:	movsd  QWORD PTR [rbp-0x38],xmm1
   1400042c0:	movsd  QWORD PTR [rbp-0x30],xmm0
   1400042c5:	call   QWORD PTR [rax+0x50]
   1400042c8:	test   eax,eax
   1400042ca:	jns    0x1400042e7
   1400042cc:	lea    r8,[rip+0xffffffffffffe4fd]        # 0x1400027d0
   1400042d3:	lea    rdx,[rip+0xffffffffffffe67e]        # 0x140002958
   1400042da:	mov    r9d,eax
   1400042dd:	mov    ecx,0x1
   1400042e2:	call   0x1400067e0
   1400042e7:	mov    rcx,QWORD PTR [rsp+0x68]
   1400042ec:	test   rcx,rcx
   1400042ef:	je     0x140004300
   1400042f1:	mov    rdx,rbx
   1400042f4:	call   0x140006d68
   1400042f9:	test   eax,eax
   1400042fb:	jne    0x140004300
   1400042fd:	mov    BYTE PTR [rdi],0x1
   140004300:	cmp    BYTE PTR [rdi],0x0
   140004303:	jne    0x1400043c2
   140004309:	movsd  xmm0,QWORD PTR [rsp+0x50]
   14000430f:	mov    rcx,QWORD PTR [rsp+0x48]
   140004314:	movsd  xmm1,QWORD PTR [rsp+0x58]
   14000431a:	lea    r8,[rsp+0x68]
   14000431f:	lea    rdx,[rbp+0x0]
   140004323:	mov    rax,QWORD PTR [rcx]
   140004326:	movsd  QWORD PTR [rbp+0x0],xmm0
   14000432b:	movsd  xmm0,QWORD PTR [rsp+0x60]
   140004331:	movsd  QWORD PTR [rbp+0x8],xmm1
   140004336:	movsd  QWORD PTR [rbp+0x10],xmm0
   14000433b:	call   QWORD PTR [rax+0x58]
   14000433e:	mov    ebx,eax
   140004340:	test   eax,eax
   140004342:	js     0x1400043a5
   140004344:	mov    rcx,QWORD PTR [rsp+0x68]
   140004349:	test   rcx,rcx
   14000434c:	je     0x140004361
   14000434e:	mov    rdx,QWORD PTR [rbp+0xa8]
   140004355:	call   0x140006d68
   14000435a:	test   eax,eax
   14000435c:	jne    0x140004361
   14000435e:	mov    BYTE PTR [rdi],0x1
   140004361:	cmp    BYTE PTR [rdi],0x0
   140004364:	jne    0x1400043c2
   140004366:	mov    edx,DWORD PTR [rbp+0xb0]
   14000436c:	add    QWORD PTR [rsp+0x78],0x18
   140004372:	inc    edx
   140004374:	mov    DWORD PTR [rbp+0xb0],edx
   14000437a:	cmp    edx,DWORD PTR [rsp+0x40]
   14000437e:	jge    0x1400043fa
   140004380:	mov    rbx,QWORD PTR [rsp+0x78]
   140004385:	jmp    0x1400040b2
   14000438a:	lea    rdx,[rip+0xffffffffffffe59f]        # 0x140002930
   140004391:	jmp    0x1400043ac
   140004393:	lea    rdx,[rip+0xffffffffffffe56e]        # 0x140002908
   14000439a:	jmp    0x1400043ac
   14000439c:	lea    rdx,[rip+0xffffffffffffe51d]        # 0x1400028c0
   1400043a3:	jmp    0x1400043ac
   1400043a5:	lea    rdx,[rip+0xffffffffffffe5d4]        # 0x140002980
   1400043ac:	mov    r9d,eax
   1400043af:	lea    r8,[rip+0xffffffffffffe41a]        # 0x1400027d0
   1400043b6:	xor    ecx,ecx
   1400043b8:	call   0x1400067e0
   1400043bd:	jmp    0x1400043fa
   1400043bf:	mov    BYTE PTR [rdi],0x1
   1400043c2:	mov    rcx,QWORD PTR [rbp+0xb8]
   1400043c9:	mov    rax,QWORD PTR [rsp+0x50]
   1400043ce:	mov    QWORD PTR [rcx],rax
   1400043d1:	mov    rax,QWORD PTR [rsp+0x58]
   1400043d6:	mov    QWORD PTR [rcx+0x8],rax
   1400043da:	mov    rax,QWORD PTR [rsp+0x60]
   1400043df:	mov    QWORD PTR [rcx+0x10],rax
   1400043e3:	mov    rcx,QWORD PTR [rsp+0x48]
   1400043e8:	mov    rax,QWORD PTR [rbp+0xc0]
   1400043ef:	mov    QWORD PTR [rax],rcx
   1400043f2:	mov    rax,QWORD PTR [rcx]
   1400043f5:	call   QWORD PTR [rax+0x8]
   1400043f8:	xor    ebx,ebx
   1400043fa:	mov    rcx,QWORD PTR [rsp+0x68]
   1400043ff:	test   rcx,rcx
   140004402:	je     0x14000440a
   140004404:	call   QWORD PTR [rip+0x122b6]        # 0x1400166c0
   14000440a:	test   rsi,rsi
   14000440d:	je     0x140004418
   14000440f:	mov    rcx,rsi
   140004412:	call   QWORD PTR [rip+0x12370]        # 0x140016788
   140004418:	mov    rcx,QWORD PTR [rsp+0x48]
   14000441d:	test   rcx,rcx
   140004420:	je     0x140004428
   140004422:	mov    rax,QWORD PTR [rcx]
   140004425:	call   QWORD PTR [rax+0x10]
   140004428:	mov    eax,ebx
   14000442a:	add    rsp,0x168
   140004431:	pop    rdi
   140004432:	pop    rsi
   140004433:	pop    rbx
   140004434:	pop    rbp
   140004435:	ret    
   140004436:	int3   
   140004437:	int3   
   140004438:	int3   
   140004439:	int3   
   14000443a:	int3   
   14000443b:	int3   
   14000443c:	mov    QWORD PTR [rsp+0x10],rbx
   140004441:	mov    QWORD PTR [rsp+0x18],rsi
   140004446:	mov    QWORD PTR [rsp+0x20],rdi
   14000444b:	push   rbp
   14000444c:	push   r12
   14000444e:	push   r13
   140004450:	push   r14
   140004452:	push   r15
   140004454:	mov    rbp,rsp
   140004457:	sub    rsp,0x70
   14000445b:	and    QWORD PTR [rbp-0x50],0x0
   140004460:	and    QWORD PTR [rbp+0x30],0x0
   140004465:	mov    r14,rcx
   140004468:	lea    rcx,[rbp-0x20]
   14000446c:	mov    r13b,r9b
   14000446f:	mov    r12d,r8d
   140004472:	mov    rdi,rdx
   140004475:	xor    sil,sil
   140004478:	call   QWORD PTR [rip+0x1222a]        # 0x1400166a8
   14000447e:	mov    r15,QWORD PTR [rbp+0x50]
   140004482:	mov    rax,QWORD PTR [r14]
   140004485:	lea    r8,[rbp-0x20]
   140004489:	lea    rdx,[rbp-0x40]
   14000448d:	mov    rcx,r14
   140004490:	movups xmm0,XMMWORD PTR [r15]
   140004494:	movsd  xmm1,QWORD PTR [r15+0x10]
   14000449a:	movaps XMMWORD PTR [rbp-0x40],xmm0
   14000449e:	movsd  QWORD PTR [rbp-0x30],xmm1
   1400044a3:	call   QWORD PTR [rax+0x68]
   1400044a6:	mov    ebx,eax
   1400044a8:	test   eax,eax
   1400044aa:	jns    0x1400044b8
   1400044ac:	lea    rdx,[rip+0xffffffffffffe515]        # 0x1400029c8
   1400044b3:	jmp    0x140004581
   1400044b8:	cmp    DWORD PTR [rbp-0x18],r12d
   1400044bc:	sete   al
   1400044bf:	test   al,al
   1400044c1:	jne    0x1400044e2
   1400044c3:	lea    r8,[rip+0xffffffffffffe4d6]        # 0x1400029a0
   1400044ca:	lea    rdx,[rip+0xffffffffffffe51f]        # 0x1400029f0
   1400044d1:	mov    ecx,0x2
   1400044d6:	call   0x1400067e0
   1400044db:	xor    ebx,ebx
   1400044dd:	jmp    0x1400045c7
   1400044e2:	test   rdi,rdi
   1400044e5:	je     0x1400045c4
   1400044eb:	movups xmm0,XMMWORD PTR [r15]
   1400044ef:	movsd  xmm1,QWORD PTR [r15+0x10]
   1400044f5:	mov    rax,QWORD PTR [r14]
   1400044f8:	lea    r8,[rbp-0x50]
   1400044fc:	lea    rdx,[rbp-0x40]
   140004500:	mov    rcx,r14
   140004503:	movaps XMMWORD PTR [rbp-0x40],xmm0
   140004507:	movsd  QWORD PTR [rbp-0x30],xmm1
   14000450c:	call   QWORD PTR [rax+0x50]
   14000450f:	mov    ebx,eax
   140004511:	test   eax,eax
   140004513:	jns    0x140004532
   140004515:	lea    r8,[rip+0xffffffffffffe484]        # 0x1400029a0
   14000451c:	lea    rdx,[rip+0xffffffffffffe435]        # 0x140002958
   140004523:	mov    r9d,eax
   140004526:	mov    ecx,0x1
   14000452b:	call   0x1400067e0
   140004530:	xor    ebx,ebx
   140004532:	mov    rcx,QWORD PTR [rbp-0x50]
   140004536:	test   rcx,rcx
   140004539:	je     0x14000454a
   14000453b:	mov    rdx,rdi
   14000453e:	call   0x140006d68
   140004543:	test   eax,eax
   140004545:	sete   al
   140004548:	jmp    0x14000454c
   14000454a:	xor    al,al
   14000454c:	test   al,al
   14000454e:	jne    0x1400045c4
   140004550:	movups xmm0,XMMWORD PTR [r15]
   140004554:	movsd  xmm1,QWORD PTR [r15+0x10]
   14000455a:	mov    rax,QWORD PTR [r14]
   14000455d:	lea    r8,[rbp+0x30]
   140004561:	lea    rdx,[rbp-0x40]
   140004565:	mov    rcx,r14
   140004568:	movaps XMMWORD PTR [rbp-0x40],xmm0
   14000456c:	movsd  QWORD PTR [rbp-0x30],xmm1
   140004571:	call   QWORD PTR [rax+0x58]
   140004574:	mov    ebx,eax
   140004576:	test   eax,eax
   140004578:	jns    0x140004594
   14000457a:	lea    rdx,[rip+0xffffffffffffe487]        # 0x140002a08
   140004581:	lea    r8,[rip+0xffffffffffffe418]        # 0x1400029a0
   140004588:	mov    r9d,eax
   14000458b:	xor    ecx,ecx
   14000458d:	call   0x1400067e0
   140004592:	jmp    0x1400045c7
   140004594:	mov    rcx,QWORD PTR [rbp+0x30]
   140004598:	test   rcx,rcx
   14000459b:	je     0x1400045c7
   14000459d:	mov    rdx,rdi
   1400045a0:	call   0x140006d68
   1400045a5:	test   eax,eax
   1400045a7:	sete   al
   1400045aa:	test   al,al
   1400045ac:	jne    0x1400045c4
   1400045ae:	test   r13b,r13b
   1400045b1:	je     0x1400045c7
   1400045b3:	mov    rcx,QWORD PTR [rbp+0x30]
   1400045b7:	mov    rdx,rdi
   1400045ba:	call   0x140007000
   1400045bf:	test   rax,rax
   1400045c2:	je     0x1400045c7
   1400045c4:	mov    sil,0x1
   1400045c7:	mov    rcx,QWORD PTR [rbp-0x50]
   1400045cb:	test   rcx,rcx
   1400045ce:	je     0x1400045d6
   1400045d0:	call   QWORD PTR [rip+0x120ea]        # 0x1400166c0
   1400045d6:	mov    rcx,QWORD PTR [rbp+0x30]
   1400045da:	test   rcx,rcx
   1400045dd:	je     0x1400045e5
   1400045df:	call   QWORD PTR [rip+0x120db]        # 0x1400166c0
   1400045e5:	mov    rax,QWORD PTR [rbp+0x58]
   1400045e9:	lea    r11,[rsp+0x70]
   1400045ee:	mov    rdi,QWORD PTR [r11+0x48]
   1400045f2:	mov    BYTE PTR [rax],sil
   1400045f5:	mov    rsi,QWORD PTR [r11+0x40]
   1400045f9:	mov    eax,ebx
   1400045fb:	mov    rbx,QWORD PTR [r11+0x38]
   1400045ff:	mov    rsp,r11
   140004602:	pop    r15
   140004604:	pop    r14
   140004606:	pop    r13
   140004608:	pop    r12
   14000460a:	pop    rbp
   14000460b:	ret    
   14000460c:	int3   
   14000460d:	int3   
   14000460e:	int3   
   14000460f:	int3   
   140004610:	int3   
   140004611:	int3   
   140004612:	int3   
   140004613:	int3   
   140004614:	rex push rbx
   140004616:	push   rbp
   140004617:	push   rsi
   140004618:	push   rdi
   140004619:	push   r14
   14000461b:	sub    rsp,0x840
   140004622:	mov    rax,QWORD PTR [rip+0xcb47]        # 0x140011170
   140004629:	xor    rax,rsp
   14000462c:	mov    QWORD PTR [rsp+0x830],rax
   140004634:	xor    r14d,r14d
   140004637:	mov    rsi,r8
   14000463a:	mov    edi,edx
   14000463c:	mov    rbx,rcx
   14000463f:	mov    r9d,edx
   140004642:	mov    WORD PTR [r8],r14w
   140004646:	lea    r8,[rip+0xffffffffffffe3e3]        # 0x140002a30
   14000464d:	lea    ecx,[r14+0x2]
   140004651:	lea    rdx,[rip+0xffffffffffffe408]        # 0x140002a60
   140004658:	mov    WORD PTR [rsp+0x30],r14w
   14000465e:	call   0x1400067e0
   140004663:	mov    ebp,0x400
   140004668:	lea    r8,[rsp+0x30]
   14000466d:	mov    r9d,ebp
   140004670:	mov    edx,edi
   140004672:	mov    rcx,rbx
   140004675:	call   QWORD PTR [rip+0x12075]        # 0x1400166f0
   14000467b:	test   eax,eax
   14000467d:	jne    0x14000469f
   14000467f:	call   QWORD PTR [rip+0x11dd3]        # 0x140016458
   140004685:	lea    rdx,[rip+0xffffffffffffe3fc]        # 0x140002a88
   14000468c:	movzx  ebx,ax
   14000468f:	mov    r9d,eax
   140004692:	or     ebx,0x80070000
   140004698:	test   eax,eax
   14000469a:	cmovle ebx,eax
   14000469d:	jmp    0x140004712
   14000469f:	cmp    eax,ebp
   1400046a1:	jle    0x1400046c6
   1400046a3:	lea    r8,[rip+0xffffffffffffe386]        # 0x140002a30
   1400046aa:	lea    rdx,[rip+0xffffffffffffe3ff]        # 0x140002ab0
   1400046b1:	mov    r9d,ebp
   1400046b4:	xor    ecx,ecx
   1400046b6:	mov    ebx,0x8007007a
   1400046bb:	mov    DWORD PTR [rsp+0x20],eax
   1400046bf:	call   0x1400067e0
   1400046c4:	jmp    0x140004725
   1400046c6:	lea    rcx,[rsp+0x30]
   1400046cb:	mov    ebx,r14d
   1400046ce:	sub    rcx,rsi
   1400046d1:	lea    rax,[rbp+0x7ffffbfe]
   1400046d8:	test   rax,rax
   1400046db:	je     0x1400046f2
   1400046dd:	movzx  eax,WORD PTR [rcx+rsi*1]
   1400046e1:	test   ax,ax
   1400046e4:	je     0x1400046f2
   1400046e6:	mov    WORD PTR [rsi],ax
   1400046e9:	add    rsi,0x2
   1400046ed:	dec    rbp
   1400046f0:	jne    0x1400046d1
   1400046f2:	test   rbp,rbp
   1400046f5:	jne    0x140004700
   1400046f7:	sub    rsi,0x2
   1400046fb:	mov    ebx,0x8007007a
   140004700:	mov    WORD PTR [rsi],r14w
   140004704:	test   ebx,ebx
   140004706:	jns    0x140004722
   140004708:	mov    r9d,ebx
   14000470b:	lea    rdx,[rip+0xffffffffffffe3d6]        # 0x140002ae8
   140004712:	lea    r8,[rip+0xffffffffffffe317]        # 0x140002a30
   140004719:	xor    ecx,ecx
   14000471b:	call   0x1400067e0
   140004720:	jmp    0x140004725
   140004722:	mov    ebx,r14d
   140004725:	mov    eax,ebx
   140004727:	mov    rcx,QWORD PTR [rsp+0x830]
   14000472f:	xor    rcx,rsp
   140004732:	call   0x140006d40
   140004737:	add    rsp,0x840
   14000473e:	pop    r14
   140004740:	pop    rdi
   140004741:	pop    rsi
   140004742:	pop    rbp
   140004743:	pop    rbx
   140004744:	ret    
   140004745:	int3   
   140004746:	int3   
   140004747:	int3   
   140004748:	int3   
   140004749:	int3   
   14000474a:	int3   
   14000474b:	int3   
   14000474c:	mov    rax,rsp
   14000474f:	mov    QWORD PTR [rax+0x8],rbx
   140004753:	mov    QWORD PTR [rax+0x10],rbp
   140004757:	mov    QWORD PTR [rax+0x18],rsi
   14000475b:	mov    QWORD PTR [rax+0x20],rdi
   14000475f:	push   r14
   140004761:	sub    rsp,0x30
   140004765:	xor    r14d,r14d
   140004768:	mov    rbx,rdx
   14000476b:	mov    esi,ecx
   14000476d:	mov    WORD PTR [rdx],r14w
   140004771:	mov    r9d,ecx
   140004774:	lea    edi,[r14+0x2]
   140004778:	lea    rbp,[rip+0xffffffffffffeac9]        # 0x140003248
   14000477f:	lea    r8,[rip+0xffffffffffffe2aa]        # 0x140002a30
   140004786:	lea    rdx,[rip+0xffffffffffffe383]        # 0x140002b10
   14000478d:	mov    ecx,edi
   14000478f:	mov    QWORD PTR [rax-0x18],rbp
   140004793:	call   0x1400067e0
   140004798:	mov    r8d,edi
   14000479b:	xor    edx,edx
   14000479d:	mov    rcx,rbp
   1400047a0:	call   QWORD PTR [rip+0x11cba]        # 0x140016460
   1400047a6:	mov    rdi,rax
   1400047a9:	test   rax,rax
   1400047ac:	jne    0x1400047dc
   1400047ae:	call   QWORD PTR [rip+0x11ca4]        # 0x140016458
   1400047b4:	lea    r8,[rip+0xffffffffffffe275]        # 0x140002a30
   1400047bb:	lea    rdx,[rip+0xffffffffffffe37e]        # 0x140002b40
   1400047c2:	movzx  ebx,ax
   1400047c5:	mov    r9d,eax
   1400047c8:	or     ebx,0x80070000
   1400047ce:	test   eax,eax
   1400047d0:	cmovle ebx,eax
   1400047d3:	xor    ecx,ecx
   1400047d5:	call   0x1400067e0
   1400047da:	jmp    0x140004815
   1400047dc:	mov    r8,rbx
   1400047df:	mov    edx,esi
   1400047e1:	mov    rcx,rax
   1400047e4:	call   0x140004614
   1400047e9:	mov    ebx,eax
   1400047eb:	test   eax,eax
   1400047ed:	jns    0x140004809
   1400047ef:	lea    r8,[rip+0xffffffffffffe23a]        # 0x140002a30
   1400047f6:	lea    rdx,[rip+0xffffffffffffe36b]        # 0x140002b68
   1400047fd:	mov    r9d,eax
   140004800:	xor    ecx,ecx
   140004802:	call   0x1400067e0
   140004807:	jmp    0x14000480c
   140004809:	mov    ebx,r14d
   14000480c:	mov    rcx,rdi
   14000480f:	call   QWORD PTR [rip+0x11c53]        # 0x140016468
   140004815:	mov    rbp,QWORD PTR [rsp+0x48]
   14000481a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000481f:	mov    rdi,QWORD PTR [rsp+0x58]
   140004824:	mov    eax,ebx
   140004826:	mov    rbx,QWORD PTR [rsp+0x40]
   14000482b:	add    rsp,0x30
   14000482f:	pop    r14
   140004831:	ret    
   140004832:	int3   
   140004833:	int3   
   140004834:	int3   
   140004835:	int3   
   140004836:	int3   
   140004837:	int3   
   140004838:	mov    rax,rsp
   14000483b:	mov    DWORD PTR [rax+0x20],r9d
   14000483f:	mov    QWORD PTR [rax+0x18],r8
   140004843:	mov    QWORD PTR [rax+0x10],rdx
   140004847:	mov    QWORD PTR [rax+0x8],rcx
   14000484b:	push   rbp
   14000484c:	push   rbx
   14000484d:	push   rsi
   14000484e:	push   rdi
   14000484f:	lea    rbp,[rax-0x47]
   140004853:	sub    rsp,0xf8
   14000485a:	mov    rsi,QWORD PTR [rbp+0x6f]
   14000485e:	xor    eax,eax
   140004860:	lea    rcx,[rbp-0x21]
   140004864:	mov    rbx,rdx
   140004867:	mov    QWORD PTR [rbp-0x51],rax
   14000486b:	mov    DWORD PTR [rsp+0x44],eax
   14000486f:	mov    QWORD PTR [rsi],rax
   140004872:	mov    DWORD PTR [rsp+0x48],eax
   140004876:	mov    BYTE PTR [rsp+0x40],al
   14000487a:	call   QWORD PTR [rip+0x11e28]        # 0x1400166a8
   140004880:	and    DWORD PTR [rbp-0x19],0x0
   140004884:	mov    eax,0x3
   140004889:	movsd  xmm1,QWORD PTR [rbp-0x11]
   14000488e:	movsd  QWORD PTR [rbp-0x31],xmm1
   140004893:	mov    WORD PTR [rbp-0x21],ax
   140004897:	mov    rax,QWORD PTR [rbx]
   14000489a:	lea    r8,[rbp-0x51]
   14000489e:	movups xmm0,XMMWORD PTR [rbp-0x21]
   1400048a2:	lea    rdx,[rbp-0x41]
   1400048a6:	mov    rcx,rbx
   1400048a9:	movaps XMMWORD PTR [rbp-0x41],xmm0
   1400048ad:	call   QWORD PTR [rax+0x50]
   1400048b0:	lea    rdi,[rip+0xffffffffffffe371]        # 0x140002c28
   1400048b7:	test   eax,eax
   1400048b9:	jns    0x1400048d2
   1400048bb:	lea    rdx,[rip+0xffffffffffffe096]        # 0x140002958
   1400048c2:	mov    r9d,eax
   1400048c5:	mov    r8,rdi
   1400048c8:	mov    ecx,0x1
   1400048cd:	call   0x1400067e0
   1400048d2:	mov    rax,QWORD PTR [rbx]
   1400048d5:	lea    rdx,[rsp+0x44]
   1400048da:	mov    rcx,rbx
   1400048dd:	call   QWORD PTR [rax+0x40]
   1400048e0:	mov    ebx,eax
   1400048e2:	test   eax,eax
   1400048e4:	jns    0x1400048fc
   1400048e6:	lea    rdx,[rip+0xffffffffffffdf03]        # 0x1400027f0
   1400048ed:	mov    r9d,eax
   1400048f0:	mov    r8,rdi
   1400048f3:	xor    ecx,ecx
   1400048f5:	call   0x1400067e0
   1400048fa:	jmp    0x14000494f
   1400048fc:	movsxd rax,DWORD PTR [rsp+0x44]
   140004901:	test   eax,eax
   140004903:	jne    0x14000491b
   140004905:	lea    rdx,[rip+0xffffffffffffdf14]        # 0x140002820
   14000490c:	lea    ecx,[rax+0x2]
   14000490f:	mov    r8,rdi
   140004912:	xor    ebx,ebx
   140004914:	call   0x1400067e0
   140004919:	jmp    0x14000494f
   14000491b:	lea    rcx,[rax+rax*2]
   14000491f:	shl    rcx,0x3
   140004923:	call   QWORD PTR [rip+0x11e67]        # 0x140016790
   140004929:	mov    rsi,rax
   14000492c:	test   rax,rax
   14000492f:	jne    0x14000497c
   140004931:	mov    r8,rdi
   140004934:	mov    r9d,0x8007000e
   14000493a:	lea    rdx,[rip+0xffffffffffffdeff]        # 0x140002840
   140004941:	mov    ebx,r9d
   140004944:	xor    ecx,ecx
   140004946:	call   0x1400067e0
   14000494b:	mov    rsi,QWORD PTR [rbp+0x6f]
   14000494f:	mov    rcx,QWORD PTR [rbp-0x51]
   140004953:	test   rcx,rcx
   140004956:	je     0x14000495e
   140004958:	call   QWORD PTR [rip+0x11d62]        # 0x1400166c0
   14000495e:	cmp    QWORD PTR [rsi],0x0
   140004962:	jne    0x14000496e
   140004964:	mov    eax,0x80070490
   140004969:	test   ebx,ebx
   14000496b:	cmove  ebx,eax
   14000496e:	mov    eax,ebx
   140004970:	add    rsp,0xf8
   140004977:	pop    rdi
   140004978:	pop    rsi
   140004979:	pop    rbx
   14000497a:	pop    rbp
   14000497b:	ret    
   14000497c:	movsxd rcx,DWORD PTR [rsp+0x44]
   140004981:	shl    rcx,0x3
   140004985:	call   QWORD PTR [rip+0x11e05]        # 0x140016790
   14000498b:	mov    rdi,rax
   14000498e:	mov    QWORD PTR [rsp+0x50],rax
   140004993:	test   rax,rax
   140004996:	jne    0x1400049a1
   140004998:	lea    r8,[rip+0xffffffffffffe289]        # 0x140002c28
   14000499f:	jmp    0x140004934
   1400049a1:	mov    rbx,QWORD PTR [rbp+0x4f]
   1400049a5:	mov    rdx,rsi
   1400049a8:	mov    rcx,rbx
   1400049ab:	call   0x140003e68
   1400049b0:	test   al,al
   1400049b2:	jne    0x1400049cd
   1400049b4:	mov    r9d,0x8000ffff
   1400049ba:	lea    r8,[rip+0xffffffffffffe267]        # 0x140002c28
   1400049c1:	lea    rdx,[rip+0xffffffffffffe280]        # 0x140002c48
   1400049c8:	jmp    0x140004941
   1400049cd:	mov    rdx,rdi
   1400049d0:	mov    rcx,rbx
   1400049d3:	call   0x140003e68
   1400049d8:	test   al,al
   1400049da:	je     0x1400049b4
   1400049dc:	mov    r8d,DWORD PTR [rsp+0x44]
   1400049e1:	xor    ebx,ebx
   1400049e3:	test   r8d,r8d
   1400049e6:	jle    0x140004a12
   1400049e8:	movsxd rax,ebx
   1400049eb:	lea    rcx,[rax+rax*2]
   1400049ef:	lea    rcx,[rsi+rcx*8]
   1400049f3:	call   QWORD PTR [rip+0x11caf]        # 0x1400166a8
   1400049f9:	and    QWORD PTR [rdi],0x0
   1400049fd:	mov    r8d,DWORD PTR [rsp+0x44]
   140004a02:	inc    ebx
   140004a04:	add    rdi,0x8
   140004a08:	cmp    ebx,r8d
   140004a0b:	jl     0x1400049e8
   140004a0d:	mov    rdi,QWORD PTR [rsp+0x50]
   140004a12:	mov    rcx,QWORD PTR [rbp+0x57]
   140004a16:	lea    rax,[rsp+0x48]
   140004a1b:	mov    r9,rsi
   140004a1e:	xor    edx,edx
   140004a20:	mov    QWORD PTR [rsp+0x20],rax
   140004a25:	call   QWORD PTR [rip+0x11c65]        # 0x140016690
   140004a2b:	mov    ebx,eax
   140004a2d:	test   eax,eax
   140004a2f:	jns    0x140004a47
   140004a31:	mov    r9d,eax
   140004a34:	lea    r8,[rip+0xffffffffffffe1ed]        # 0x140002c28
   140004a3b:	lea    rdx,[rip+0xffffffffffffde2e]        # 0x140002870
   140004a42:	jmp    0x140004944
   140004a47:	mov    eax,DWORD PTR [rsp+0x48]
   140004a4b:	cmp    eax,DWORD PTR [rsp+0x44]
   140004a4f:	je     0x140004a6a
   140004a51:	mov    r9d,0x8000ffff
   140004a57:	lea    r8,[rip+0xffffffffffffe1ca]        # 0x140002c28
   140004a5e:	lea    rdx,[rip+0xffffffffffffde33]        # 0x140002898
   140004a65:	jmp    0x140004941
   140004a6a:	and    DWORD PTR [rsp+0x4c],0x0
   140004a6f:	test   eax,eax
   140004a71:	jle    0x140004be6
   140004a77:	mov    QWORD PTR [rbp-0x59],rdi
   140004a7b:	and    QWORD PTR [rbp-0x79],0x0
   140004a80:	lea    rcx,[rbp-0x71]
   140004a84:	call   QWORD PTR [rip+0x11c1e]        # 0x1400166a8
   140004a8a:	xor    ecx,ecx
   140004a8c:	lea    eax,[rcx+0x3]
   140004a8f:	mov    QWORD PTR [rsp+0x50],rcx
   140004a94:	cmp    WORD PTR [rsi],ax
   140004a97:	jne    0x140004b0e
   140004a99:	mov    rcx,QWORD PTR [rbp+0x57]
   140004a9d:	mov    QWORD PTR [rsp+0x50],rcx
   140004aa2:	mov    rax,QWORD PTR [rcx]
   140004aa5:	call   QWORD PTR [rax+0x8]
   140004aa8:	mov    eax,DWORD PTR [rsi+0x8]
   140004aab:	movzx  r11d,WORD PTR [rsi]
   140004aaf:	mov    r9b,BYTE PTR [rbp+0x7f]
   140004ab3:	mov    r8d,DWORD PTR [rbp+0x67]
   140004ab7:	mov    rdx,QWORD PTR [rbp+0x5f]
   140004abb:	mov    rcx,QWORD PTR [rbp+0x57]
   140004abf:	mov    DWORD PTR [rbp-0x69],eax
   140004ac2:	mov    WORD PTR [rbp-0x71],r11w
   140004ac7:	movsd  xmm0,QWORD PTR [rbp-0x71]
   140004acc:	movsd  xmm1,QWORD PTR [rbp-0x69]
   140004ad1:	lea    rax,[rsp+0x40]
   140004ad6:	movsd  QWORD PTR [rbp-0x1],xmm0
   140004adb:	movsd  xmm0,QWORD PTR [rbp-0x61]
   140004ae0:	mov    QWORD PTR [rsp+0x28],rax
   140004ae5:	lea    rax,[rbp-0x1]
   140004ae9:	movsd  QWORD PTR [rbp+0xf],xmm0
   140004aee:	movsd  QWORD PTR [rbp+0x7],xmm1
   140004af3:	mov    QWORD PTR [rsp+0x20],rax
   140004af8:	call   0x14000443c
   140004afd:	test   eax,eax
   140004aff:	jns    0x140004b98
   140004b05:	mov    rcx,QWORD PTR [rbp+0x57]
   140004b09:	jmp    0x140004bc1
   140004b0e:	cmp    WORD PTR [rsi],0x9
   140004b12:	jne    0x140004ba2
   140004b18:	mov    rcx,QWORD PTR [rsi+0x8]
   140004b1c:	movsxd rax,DWORD PTR [rsp+0x4c]
   140004b21:	lea    rdx,[rip+0xffffffffffffdc48]        # 0x140002770
   140004b28:	mov    r9,QWORD PTR [rcx]
   140004b2b:	lea    r8,[rdi+rax*8]
   140004b2f:	mov    QWORD PTR [rbp-0x79],rcx
   140004b33:	call   QWORD PTR [r9]
   140004b36:	test   eax,eax
   140004b38:	js     0x140004c60
   140004b3e:	and    DWORD PTR [rbp-0x69],0x0
   140004b42:	movsd  xmm1,QWORD PTR [rbp-0x69]
   140004b47:	mov    rcx,QWORD PTR [rbp-0x59]
   140004b4b:	mov    r9b,BYTE PTR [rbp+0x7f]
   140004b4f:	mov    r8d,DWORD PTR [rbp+0x67]
   140004b53:	mov    rdx,QWORD PTR [rbp+0x5f]
   140004b57:	movsd  QWORD PTR [rbp-0x39],xmm1
   140004b5c:	mov    rcx,QWORD PTR [rcx]
   140004b5f:	mov    eax,0x3
   140004b64:	mov    WORD PTR [rbp-0x71],ax
   140004b68:	lea    rax,[rsp+0x40]
   140004b6d:	mov    QWORD PTR [rsp+0x28],rax
   140004b72:	lea    rax,[rbp-0x41]
   140004b76:	movsd  xmm0,QWORD PTR [rbp-0x71]
   140004b7b:	movsd  QWORD PTR [rbp-0x41],xmm0
   140004b80:	movsd  xmm0,QWORD PTR [rbp-0x61]
   140004b85:	movsd  QWORD PTR [rbp-0x31],xmm0
   140004b8a:	mov    QWORD PTR [rsp+0x20],rax
   140004b8f:	call   0x14000443c
   140004b94:	test   eax,eax
   140004b96:	js     0x140004bc7
   140004b98:	mov    rcx,QWORD PTR [rsp+0x50]
   140004b9d:	mov    eax,0x3
   140004ba2:	cmp    BYTE PTR [rsp+0x40],0x0
   140004ba7:	jne    0x140004c78
   140004bad:	test   rcx,rcx
   140004bb0:	je     0x140004bb8
   140004bb2:	mov    rax,QWORD PTR [rcx]
   140004bb5:	call   QWORD PTR [rax+0x10]
   140004bb8:	mov    rcx,QWORD PTR [rbp-0x79]
   140004bbc:	test   rcx,rcx
   140004bbf:	je     0x140004bc7
   140004bc1:	mov    rax,QWORD PTR [rcx]
   140004bc4:	call   QWORD PTR [rax+0x10]
   140004bc7:	mov    ecx,DWORD PTR [rsp+0x4c]
   140004bcb:	mov    eax,DWORD PTR [rsp+0x48]
   140004bcf:	add    QWORD PTR [rbp-0x59],0x8
   140004bd4:	inc    ecx
   140004bd6:	add    rsi,0x18
   140004bda:	mov    DWORD PTR [rsp+0x4c],ecx
   140004bde:	cmp    ecx,eax
   140004be0:	jl     0x140004a7b
   140004be6:	xor    edx,edx
   140004be8:	mov    DWORD PTR [rbp+0x57],edx
   140004beb:	test   eax,eax
   140004bed:	jle    0x14000494b
   140004bf3:	cmp    QWORD PTR [rdi],0x0
   140004bf7:	mov    rsi,QWORD PTR [rbp+0x6f]
   140004bfb:	je     0x140004c4e
   140004bfd:	cmp    QWORD PTR [rsi],0x0
   140004c01:	jne    0x140004c35
   140004c03:	mov    al,BYTE PTR [rbp+0x7f]
   140004c06:	mov    r9d,DWORD PTR [rbp+0x67]
   140004c0a:	mov    r8,QWORD PTR [rbp+0x5f]
   140004c0e:	mov    rdx,QWORD PTR [rdi]
   140004c11:	mov    rcx,QWORD PTR [rbp+0x4f]
   140004c15:	mov    BYTE PTR [rsp+0x30],al
   140004c19:	mov    rax,QWORD PTR [rbp+0x77]
   140004c1d:	mov    QWORD PTR [rsp+0x28],rax
   140004c22:	mov    QWORD PTR [rsp+0x20],rsi
   140004c27:	call   0x140004838
   140004c2c:	mov    edx,DWORD PTR [rbp+0x57]
   140004c2f:	mov    ebx,eax
   140004c31:	mov    eax,DWORD PTR [rsp+0x48]
   140004c35:	mov    rcx,QWORD PTR [rdi]
   140004c38:	test   rcx,rcx
   140004c3b:	je     0x140004c4e
   140004c3d:	mov    rax,QWORD PTR [rcx]
   140004c40:	call   QWORD PTR [rax+0x10]
   140004c43:	and    QWORD PTR [rdi],0x0
   140004c47:	mov    eax,DWORD PTR [rsp+0x48]
   140004c4b:	mov    edx,DWORD PTR [rbp+0x57]
   140004c4e:	inc    edx
   140004c50:	add    rdi,0x8
   140004c54:	mov    DWORD PTR [rbp+0x57],edx
   140004c57:	cmp    edx,eax
   140004c59:	jl     0x140004bf3
   140004c5b:	jmp    0x14000494f
   140004c60:	mov    ebx,eax
   140004c62:	mov    r9d,eax
   140004c65:	lea    r8,[rip+0xffffffffffffdfbc]        # 0x140002c28
   140004c6c:	lea    rdx,[rip+0xffffffffffffe00d]        # 0x140002c80
   140004c73:	jmp    0x140004944
   140004c78:	cmp    WORD PTR [rsi],ax
   140004c7b:	mov    rsi,QWORD PTR [rbp+0x6f]
   140004c7f:	je     0x140004c8a
   140004c81:	movsxd rax,DWORD PTR [rsp+0x4c]
   140004c86:	mov    rcx,QWORD PTR [rdi+rax*8]
   140004c8a:	mov    rax,QWORD PTR [rbp-0x71]
   140004c8e:	mov    QWORD PTR [rsi],rcx
   140004c91:	mov    rcx,QWORD PTR [rbp+0x77]
   140004c95:	mov    QWORD PTR [rcx],rax
   140004c98:	mov    rax,QWORD PTR [rbp-0x69]
   140004c9c:	mov    QWORD PTR [rcx+0x8],rax
   140004ca0:	mov    rax,QWORD PTR [rbp-0x61]
   140004ca4:	mov    QWORD PTR [rcx+0x10],rax
   140004ca8:	mov    rcx,QWORD PTR [rsi]
   140004cab:	mov    rax,QWORD PTR [rcx]
   140004cae:	call   QWORD PTR [rax+0x8]
   140004cb1:	xor    ebx,ebx
   140004cb3:	jmp    0x14000494f
   140004cb8:	int3   
   140004cb9:	int3   
   140004cba:	int3   
   140004cbb:	int3   
   140004cbc:	int3   
   140004cbd:	int3   
   140004cbe:	int3   
   140004cbf:	int3   
   140004cc0:	mov    r11,rsp
   140004cc3:	mov    QWORD PTR [r11+0x8],rbx
   140004cc7:	mov    QWORD PTR [r11+0x18],rbp
   140004ccb:	mov    QWORD PTR [r11+0x20],rsi
   140004ccf:	push   rdi
   140004cd0:	sub    rsp,0x40
   140004cd4:	and    QWORD PTR [r11+0x10],0x0
   140004cd9:	and    QWORD PTR [r9],0x0
   140004cdd:	mov    rsi,r9
   140004ce0:	mov    rdi,r8
   140004ce3:	mov    rax,rdx
   140004ce6:	mov    rbp,rcx
   140004ce9:	test   rdx,rdx
   140004cec:	jne    0x140004cf4
   140004cee:	call   QWORD PTR [rip+0x119ec]        # 0x1400166e0
   140004cf4:	lea    r9,[rsp+0x58]
   140004cf9:	lea    r8,[rip+0xffffffffffffda70]        # 0x140002770
   140004d00:	xor    edx,edx
   140004d02:	mov    rcx,rax
   140004d05:	call   QWORD PTR [rip+0x1198d]        # 0x140016698
   140004d0b:	mov    ebx,eax
   140004d0d:	test   eax,eax
   140004d0f:	jns    0x140004d2b
   140004d11:	lea    r8,[rip+0xffffffffffffdf10]        # 0x140002c28
   140004d18:	lea    rdx,[rip+0xffffffffffffdf91]        # 0x140002cb0
   140004d1f:	mov    r9d,eax
   140004d22:	xor    ecx,ecx
   140004d24:	call   0x1400067e0
   140004d29:	jmp    0x140004d98
   140004d2b:	mov    rdx,QWORD PTR [rsp+0x58]
   140004d30:	test   rdx,rdx
   140004d33:	jne    0x140004d4c
   140004d35:	lea    r8,[rip+0xffffffffffffdeec]        # 0x140002c28
   140004d3c:	lea    rdx,[rip+0xffffffffffffdfad]        # 0x140002cf0
   140004d43:	xor    ecx,ecx
   140004d45:	call   0x1400067e0
   140004d4a:	jmp    0x140004d98
   140004d4c:	mov    rax,QWORD PTR [rsp+0x70]
   140004d51:	mov    BYTE PTR [rsp+0x30],0x0
   140004d56:	mov    r9d,0x29
   140004d5c:	mov    QWORD PTR [rsp+0x28],rax
   140004d61:	mov    r8,rdi
   140004d64:	mov    rcx,rbp
   140004d67:	mov    QWORD PTR [rsp+0x20],rsi
   140004d6c:	call   0x140004838
   140004d71:	mov    ebx,eax
   140004d73:	test   eax,eax
   140004d75:	jns    0x140004d96
   140004d77:	lea    r8,[rip+0xffffffffffffdeaa]        # 0x140002c28
   140004d7e:	lea    rdx,[rip+0xffffffffffffdf93]        # 0x140002d18
   140004d85:	mov    r9d,eax
   140004d88:	xor    ecx,ecx
   140004d8a:	mov    QWORD PTR [rsp+0x20],rdi
   140004d8f:	call   0x1400067e0
   140004d94:	jmp    0x140004d98
   140004d96:	xor    ebx,ebx
   140004d98:	mov    rcx,QWORD PTR [rsp+0x58]
   140004d9d:	test   rcx,rcx
   140004da0:	je     0x140004da8
   140004da2:	mov    rax,QWORD PTR [rcx]
   140004da5:	call   QWORD PTR [rax+0x10]
   140004da8:	mov    rbp,QWORD PTR [rsp+0x60]
   140004dad:	mov    rsi,QWORD PTR [rsp+0x68]
   140004db2:	mov    eax,ebx
   140004db4:	mov    rbx,QWORD PTR [rsp+0x50]
   140004db9:	add    rsp,0x40
   140004dbd:	pop    rdi
   140004dbe:	ret    
   140004dbf:	int3   
   140004dc0:	int3   
   140004dc1:	int3   
   140004dc2:	int3   
   140004dc3:	int3   
   140004dc4:	int3   
   140004dc5:	int3   
   140004dc6:	int3   
   140004dc7:	int3   
   140004dc8:	mov    QWORD PTR [rsp+0x8],rbx
   140004dcd:	mov    QWORD PTR [rsp+0x10],rsi
   140004dd2:	mov    QWORD PTR [rsp+0x18],rdi
   140004dd7:	push   rbp
   140004dd8:	push   r14
   140004dda:	push   r15
   140004ddc:	lea    rbp,[rsp-0x70]
   140004de1:	sub    rsp,0x170
   140004de8:	mov    rax,QWORD PTR [rip+0xc381]        # 0x140011170
   140004def:	xor    rax,rsp
   140004df2:	mov    QWORD PTR [rbp+0x60],rax
   140004df6:	and    DWORD PTR [rsp+0x48],0x0
   140004dfb:	xor    eax,eax
   140004dfd:	mov    rbx,rcx
   140004e00:	and    DWORD PTR [rsp+0x58],eax
   140004e04:	and    DWORD PTR [rsp+0x20],eax
   140004e08:	and    DWORD PTR [rsp+0x28],eax
   140004e0c:	lea    r8d,[rax+0x1c]
   140004e10:	lea    rcx,[rsp+0x2c]
   140004e15:	xor    edx,edx
   140004e17:	mov    QWORD PTR [rsp+0x4c],rax
   140004e1c:	mov    QWORD PTR [rsp+0x5c],rax
   140004e21:	mov    DWORD PTR [rsp+0x24],eax
   140004e25:	call   0x14000c460
   140004e2a:	and    DWORD PTR [rsp+0x70],0x0
   140004e2f:	lea    rcx,[rsp+0x78]
   140004e34:	lea    rdx,[rsp+0x28]
   140004e39:	mov    r8d,0x20
   140004e3f:	call   0x14000fac0
   140004e44:	lea    rcx,[rbp-0x68]
   140004e48:	xor    edx,edx
   140004e4a:	mov    r8d,0xc8
   140004e50:	call   0x14000c460
   140004e55:	xor    edx,edx
   140004e57:	lea    r8,[rsp+0x48]
   140004e5c:	lea    ecx,[rdx+0x3]
   140004e5f:	xor    r9d,r9d
   140004e62:	call   QWORD PTR [rip+0x11890]        # 0x1400166f8
   140004e68:	test   eax,eax
   140004e6a:	jne    0x140004e9d
   140004e6c:	call   QWORD PTR [rip+0x115e6]        # 0x140016458
   140004e72:	lea    r8,[rip+0xffffffffffffdecf]        # 0x140002d48
   140004e79:	lea    rdx,[rip+0xffffffffffffdee8]        # 0x140002d68
   140004e80:	movzx  ebx,ax
   140004e83:	mov    r9d,eax
   140004e86:	or     ebx,0x80070000
   140004e8c:	test   eax,eax
   140004e8e:	cmovle ebx,eax
   140004e91:	xor    ecx,ecx
   140004e93:	call   0x1400067e0
   140004e98:	jmp    0x14000503e
   140004e9d:	cmp    DWORD PTR [rsp+0x50],0x0
   140004ea2:	je     0x140004ebb
   140004ea4:	xor    edx,edx
   140004ea6:	lea    r8,[rsp+0x58]
   140004eab:	xor    r9d,r9d
   140004eae:	lea    ecx,[rdx+0x4]
   140004eb1:	call   QWORD PTR [rip+0x11841]        # 0x1400166f8
   140004eb7:	test   eax,eax
   140004eb9:	je     0x140004e6c
   140004ebb:	mov    ecx,0x17
   140004ec0:	call   QWORD PTR [rip+0x1183a]        # 0x140016700
   140004ec6:	mov    ecx,eax
   140004ec8:	neg    ecx
   140004eca:	lea    rcx,[rsp+0x20]
   140004ecf:	sbb    esi,esi
   140004ed1:	and    esi,0x6
   140004ed4:	add    esi,0x2
   140004ed7:	neg    eax
   140004ed9:	mov    eax,DWORD PTR [rbx+0x8]
   140004edc:	sbb    r14d,r14d
   140004edf:	cdq    
   140004ee0:	sub    eax,edx
   140004ee2:	and    r14d,0xc
   140004ee6:	sar    eax,1
   140004ee8:	add    r14d,0x4
   140004eec:	mov    edi,eax
   140004eee:	mov    eax,DWORD PTR [rbx+0xc]
   140004ef1:	add    edi,DWORD PTR [rbx]
   140004ef3:	cdq    
   140004ef4:	sub    eax,edx
   140004ef6:	sar    eax,1
   140004ef8:	mov    r15d,eax
   140004efb:	add    r15d,DWORD PTR [rbx+0x4]
   140004eff:	call   QWORD PTR [rip+0x11803]        # 0x140016708
   140004f05:	test   eax,eax
   140004f07:	jne    0x140004f3a
   140004f09:	call   QWORD PTR [rip+0x11549]        # 0x140016458
   140004f0f:	lea    rdx,[rip+0xffffffffffffde7a]        # 0x140002d90
   140004f16:	movzx  ebx,ax
   140004f19:	lea    r8,[rip+0xffffffffffffde28]        # 0x140002d48
   140004f20:	mov    r9d,eax
   140004f23:	or     ebx,0x80070000
   140004f29:	test   eax,eax
   140004f2b:	cmovle ebx,eax
   140004f2e:	xor    ecx,ecx
   140004f30:	call   0x1400067e0
   140004f35:	jmp    0x140005024
   140004f3a:	sub    edi,DWORD PTR [rsp+0x20]
   140004f3e:	sub    r15d,DWORD PTR [rsp+0x24]
   140004f43:	mov    DWORD PTR [rsp+0x20],edi
   140004f47:	mov    DWORD PTR [rsp+0x24],r15d
   140004f4c:	mov    DWORD PTR [rsp+0x28],edi
   140004f50:	mov    DWORD PTR [rsp+0x2c],r15d
   140004f55:	call   QWORD PTR [rip+0x11515]        # 0x140016470
   140004f5b:	mov    r15d,0x1
   140004f61:	lea    ecx,[r15+0x2a]
   140004f65:	mov    DWORD PTR [rsp+0x38],eax
   140004f69:	mov    DWORD PTR [rsp+0x34],r15d
   140004f6e:	call   QWORD PTR [rip+0x1178c]        # 0x140016700
   140004f74:	lea    rcx,[rsp+0x78]
   140004f79:	lea    rdx,[rsp+0x28]
   140004f7e:	lea    r8d,[r15+0x1f]
   140004f82:	mov    DWORD PTR [rsp+0x30],eax
   140004f86:	call   0x14000fac0
   140004f8b:	mov    DWORD PTR [rsp+0x34],esi
   140004f8f:	lea    esi,[r15+0x1f]
   140004f93:	lea    rbx,[rbp-0x60]
   140004f97:	lea    rdx,[rsp+0x28]
   140004f9c:	mov    r8d,esi
   140004f9f:	mov    rcx,rbx
   140004fa2:	call   0x14000fac0
   140004fa7:	lea    rcx,[rbx+0x28]
   140004fab:	lea    rdx,[rsp+0x28]
   140004fb0:	mov    r8d,esi
   140004fb3:	lea    edi,[r15+r15*1]
   140004fb7:	mov    DWORD PTR [rsp+0x34],r14d
   140004fbc:	call   0x14000fac0
   140004fc1:	mov    eax,DWORD PTR [rsp+0x20]
   140004fc5:	add    edi,r15d
   140004fc8:	neg    eax
   140004fca:	lea    rdx,[rsp+0x28]
   140004fcf:	mov    r8d,esi
   140004fd2:	mov    DWORD PTR [rsp+0x28],eax
   140004fd6:	mov    eax,DWORD PTR [rsp+0x24]
   140004fda:	mov    DWORD PTR [rsp+0x34],r15d
   140004fdf:	neg    eax
   140004fe1:	mov    DWORD PTR [rsp+0x2c],eax
   140004fe5:	movsxd rax,edi
   140004fe8:	lea    rcx,[rax+rax*4]
   140004fec:	lea    rax,[rsp+0x78]
   140004ff1:	lea    rcx,[rax+rcx*8]
   140004ff5:	call   0x14000fac0
   140004ffa:	lea    ecx,[rdi+0x1]
   140004ffd:	lea    r8d,[r15+0x27]
   140005001:	lea    rdx,[rsp+0x70]
   140005006:	call   QWORD PTR [rip+0x11704]        # 0x140016710
   14000500c:	test   eax,eax
   14000500e:	jne    0x140005022
   140005010:	call   QWORD PTR [rip+0x11442]        # 0x140016458
   140005016:	lea    rdx,[rip+0xffffffffffffdda3]        # 0x140002dc0
   14000501d:	jmp    0x140004f16
   140005022:	xor    ebx,ebx
   140005024:	cmp    DWORD PTR [rsp+0x50],0x0
   140005029:	je     0x14000503e
   14000502b:	xor    edx,edx
   14000502d:	lea    r8,[rsp+0x48]
   140005032:	xor    r9d,r9d
   140005035:	lea    ecx,[rdx+0x4]
   140005038:	call   QWORD PTR [rip+0x116ba]        # 0x1400166f8
   14000503e:	mov    eax,ebx
   140005040:	mov    rcx,QWORD PTR [rbp+0x60]
   140005044:	xor    rcx,rsp
   140005047:	call   0x140006d40
   14000504c:	lea    r11,[rsp+0x170]
   140005054:	mov    rbx,QWORD PTR [r11+0x20]
   140005058:	mov    rsi,QWORD PTR [r11+0x28]
   14000505c:	mov    rdi,QWORD PTR [r11+0x30]
   140005060:	mov    rsp,r11
   140005063:	pop    r15
   140005065:	pop    r14
   140005067:	pop    rbp
   140005068:	ret    
   140005069:	int3   
   14000506a:	int3   
   14000506b:	int3   
   14000506c:	int3   
   14000506d:	int3   
   14000506e:	int3   
   14000506f:	int3   
   140005070:	rex push rbp
   140005072:	push   rbx
   140005073:	push   rsi
   140005074:	push   rdi
   140005075:	push   r12
   140005077:	push   r14
   140005079:	lea    rbp,[rsp-0x2f]
   14000507e:	sub    rsp,0xe8
   140005085:	mov    rax,QWORD PTR [rip+0xc0e4]        # 0x140011170
   14000508c:	xor    rax,rsp
   14000508f:	mov    QWORD PTR [rbp+0x1f],rax
   140005093:	and    DWORD PTR [rbp+0xf],0x0
   140005097:	xor    eax,eax
   140005099:	mov    r14,rcx
   14000509c:	and    QWORD PTR [rbp-0x71],rax
   1400050a0:	and    QWORD PTR [rbp-0x69],rax
   1400050a4:	lea    rcx,[rbp-0x9]
   1400050a8:	mov    rsi,r9
   1400050ab:	mov    rdi,r8
   1400050ae:	mov    rbx,rdx
   1400050b1:	mov    QWORD PTR [rbp+0x13],rax
   1400050b5:	mov    DWORD PTR [rbp+0x1b],eax
   1400050b8:	mov    BYTE PTR [rbp-0x79],al
   1400050bb:	call   QWORD PTR [rip+0x115e7]        # 0x1400166a8
   1400050c1:	lea    rcx,[rbp-0x61]
   1400050c5:	call   QWORD PTR [rip+0x115dd]        # 0x1400166a8
   1400050cb:	mov    rdx,rsi
   1400050ce:	xor    ecx,ecx
   1400050d0:	call   QWORD PTR [rip+0x1165a]        # 0x140016730
   1400050d6:	test   rax,rax
   1400050d9:	jne    0x1400050ef
   1400050db:	call   QWORD PTR [rip+0x11377]        # 0x140016458
   1400050e1:	mov    QWORD PTR [rsp+0x20],rsi
   1400050e6:	lea    rdx,[rip+0xffffffffffffddd3]        # 0x140002ec0
   1400050ed:	jmp    0x140005125
   1400050ef:	lea    r12,[rip+0xffffffffffffddfa]        # 0x140002ef0
   1400050f6:	lea    r9,[rip+0xffffffffffffe5af]        # 0x1400036ac
   1400050fd:	xor    edx,edx
   1400050ff:	mov    r8,r12
   140005102:	mov    rcx,rax
   140005105:	call   QWORD PTR [rip+0x115dd]        # 0x1400166e8
   14000510b:	mov    rsi,rax
   14000510e:	test   rax,rax
   140005111:	jne    0x140005149
   140005113:	call   QWORD PTR [rip+0x1133f]        # 0x140016458
   140005119:	mov    QWORD PTR [rsp+0x20],r12
   14000511e:	lea    rdx,[rip+0xffffffffffffddeb]        # 0x140002f10
   140005125:	movzx  ebx,ax
   140005128:	lea    r8,[rip+0xffffffffffffdd71]        # 0x140002ea0
   14000512f:	mov    r9d,eax
   140005132:	or     ebx,0x80070000
   140005138:	test   eax,eax
   14000513a:	cmovle ebx,eax
   14000513d:	xor    ecx,ecx
   14000513f:	call   0x1400067e0
   140005144:	jmp    0x1400052b2
   140005149:	mov    rcx,rax
   14000514c:	test   rbx,rbx
   14000514f:	lea    r9,[rbp-0x69]
   140005153:	cmovne rcx,rbx
   140005157:	lea    r8,[rip+0xffffffffffffd612]        # 0x140002770
   14000515e:	xor    edx,edx
   140005160:	call   QWORD PTR [rip+0x11532]        # 0x140016698
   140005166:	mov    ebx,eax
   140005168:	test   eax,eax
   14000516a:	jns    0x140005178
   14000516c:	lea    rdx,[rip+0xffffffffffffdb3d]        # 0x140002cb0
   140005173:	jmp    0x14000529d
   140005178:	mov    rdx,QWORD PTR [rbp-0x69]
   14000517c:	and    DWORD PTR [rbp-0x41],0x0
   140005180:	mov    eax,0x3
   140005185:	mov    WORD PTR [rbp-0x49],ax
   140005189:	lea    rax,[rbp-0x71]
   14000518d:	mov    r12d,0x29
   140005193:	mov    QWORD PTR [rsp+0x30],rax
   140005198:	lea    rax,[rbp-0x61]
   14000519c:	mov    r9,rdi
   14000519f:	mov    QWORD PTR [rsp+0x28],rax
   1400051a4:	lea    rax,[rbp-0x79]
   1400051a8:	mov    r8d,r12d
   1400051ab:	mov    rcx,r14
   1400051ae:	mov    QWORD PTR [rsp+0x20],rax
   1400051b3:	call   0x140003f50
   1400051b8:	test   eax,eax
   1400051ba:	jns    0x1400051e1
   1400051bc:	lea    r8,[rip+0xffffffffffffdcdd]        # 0x140002ea0
   1400051c3:	lea    rdx,[rip+0xffffffffffffdd76]        # 0x140002f40
   1400051ca:	lea    ecx,[r12-0x28]
   1400051cf:	mov    r9d,eax
   1400051d2:	mov    DWORD PTR [rsp+0x28],r12d
   1400051d7:	mov    QWORD PTR [rsp+0x20],rdi
   1400051dc:	call   0x1400067e0
   1400051e1:	cmp    BYTE PTR [rbp-0x79],0x0
   1400051e5:	jne    0x14000523b
   1400051e7:	lea    rax,[rbp-0x61]
   1400051eb:	lea    r9,[rbp-0x71]
   1400051ef:	mov    r8,rdi
   1400051f2:	mov    rdx,rsi
   1400051f5:	mov    rcx,r14
   1400051f8:	mov    QWORD PTR [rsp+0x20],rax
   1400051fd:	call   0x140004cc0
   140005202:	mov    rcx,QWORD PTR [rbp-0x71]
   140005206:	mov    ebx,eax
   140005208:	test   rcx,rcx
   14000520b:	je     0x140005217
   14000520d:	test   eax,eax
   14000520f:	js     0x140005217
   140005211:	mov    BYTE PTR [rbp-0x79],0x1
   140005215:	jmp    0x14000523f
   140005217:	lea    r8,[rip+0xffffffffffffdc82]        # 0x140002ea0
   14000521e:	lea    rdx,[rip+0xffffffffffffdd53]        # 0x140002f78
   140005225:	mov    r9d,eax
   140005228:	xor    ecx,ecx
   14000522a:	mov    DWORD PTR [rsp+0x28],r12d
   14000522f:	mov    QWORD PTR [rsp+0x20],rdi
   140005234:	call   0x1400067e0
   140005239:	jmp    0x1400052b2
   14000523b:	mov    rcx,QWORD PTR [rbp-0x71]
   14000523f:	movups xmm0,XMMWORD PTR [rbp-0x49]
   140005243:	movsd  xmm1,QWORD PTR [rbp-0x39]
   140005248:	mov    rax,QWORD PTR [rcx]
   14000524b:	lea    rdx,[rbp-0x29]
   14000524f:	lea    r9,[rbp+0x17]
   140005253:	lea    r8,[rbp+0x13]
   140005257:	mov    QWORD PTR [rsp+0x28],rdx
   14000525c:	lea    rdx,[rbp+0x1b]
   140005260:	movaps XMMWORD PTR [rbp-0x29],xmm0
   140005264:	movsd  QWORD PTR [rbp-0x19],xmm1
   140005269:	mov    QWORD PTR [rsp+0x20],rdx
   14000526e:	lea    rdx,[rbp+0xf]
   140005272:	call   QWORD PTR [rax+0xb0]
   140005278:	mov    ebx,eax
   14000527a:	test   eax,eax
   14000527c:	jns    0x140005287
   14000527e:	lea    rdx,[rip+0xffffffffffffdd33]        # 0x140002fb8
   140005285:	jmp    0x14000529d
   140005287:	lea    rcx,[rbp+0xf]
   14000528b:	call   0x140004dc8
   140005290:	mov    ebx,eax
   140005292:	test   eax,eax
   140005294:	jns    0x1400052b0
   140005296:	lea    rdx,[rip+0xffffffffffffdd53]        # 0x140002ff0
   14000529d:	lea    r8,[rip+0xffffffffffffdbfc]        # 0x140002ea0
   1400052a4:	mov    r9d,eax
   1400052a7:	xor    ecx,ecx
   1400052a9:	call   0x1400067e0
   1400052ae:	jmp    0x1400052b2
   1400052b0:	xor    ebx,ebx
   1400052b2:	lea    rcx,[rbp-0x61]
   1400052b6:	call   QWORD PTR [rip+0x113fc]        # 0x1400166b8
   1400052bc:	lea    rcx,[rbp-0x9]
   1400052c0:	call   QWORD PTR [rip+0x113f2]        # 0x1400166b8
   1400052c6:	mov    rcx,QWORD PTR [rbp-0x71]
   1400052ca:	test   rcx,rcx
   1400052cd:	je     0x1400052da
   1400052cf:	mov    rax,QWORD PTR [rcx]
   1400052d2:	call   QWORD PTR [rax+0x10]
   1400052d5:	and    QWORD PTR [rbp-0x71],0x0
   1400052da:	mov    rcx,QWORD PTR [rbp-0x69]
   1400052de:	test   rcx,rcx
   1400052e1:	je     0x1400052e9
   1400052e3:	mov    rax,QWORD PTR [rcx]
   1400052e6:	call   QWORD PTR [rax+0x10]
   1400052e9:	mov    eax,ebx
   1400052eb:	mov    rcx,QWORD PTR [rbp+0x1f]
   1400052ef:	xor    rcx,rsp
   1400052f2:	call   0x140006d40
   1400052f7:	add    rsp,0xe8
   1400052fe:	pop    r14
   140005300:	pop    r12
   140005302:	pop    rdi
   140005303:	pop    rsi
   140005304:	pop    rbx
   140005305:	pop    rbp
   140005306:	ret    
   140005307:	int3   
   140005308:	int3   
   140005309:	int3   
   14000530a:	int3   
   14000530b:	int3   
   14000530c:	int3   
   14000530d:	int3   
   14000530e:	int3   
   14000530f:	int3   
   140005310:	mov    rax,rsp
   140005313:	mov    QWORD PTR [rax+0x8],rbx
   140005317:	mov    QWORD PTR [rax+0x10],rbp
   14000531b:	mov    QWORD PTR [rax+0x18],rsi
   14000531f:	push   rdi
   140005320:	push   r14
   140005322:	push   r15
   140005324:	sub    rsp,0x60
   140005328:	mov    r15,rcx
   14000532b:	xor    esi,esi
   14000532d:	lea    rcx,[rax-0x38]
   140005331:	and    QWORD PTR [rax-0x48],rsi
   140005335:	and    QWORD PTR [rax-0x40],rsi
   140005339:	mov    r14,r9
   14000533c:	mov    rbp,r8
   14000533f:	mov    rbx,rdx
   140005342:	call   QWORD PTR [rip+0x11360]        # 0x1400166a8
   140005348:	lea    r9,[rsp+0x30]
   14000534d:	lea    r8,[rip+0xffffffffffffd41c]        # 0x140002770
   140005354:	xor    edx,edx
   140005356:	mov    rcx,rbx
   140005359:	call   QWORD PTR [rip+0x11339]        # 0x140016698
   14000535f:	mov    ebx,eax
   140005361:	test   eax,eax
   140005363:	jns    0x14000536e
   140005365:	lea    rdx,[rip+0xffffffffffffd944]        # 0x140002cb0
   14000536c:	jmp    0x1400053eb
   14000536e:	call   QWORD PTR [rip+0x113cc]        # 0x140016740
   140005374:	mov    rdi,rax
   140005377:	test   rax,rax
   14000537a:	jne    0x140005385
   14000537c:	call   QWORD PTR [rip+0x1135e]        # 0x1400166e0
   140005382:	mov    rdi,rax
   140005385:	xor    edx,edx
   140005387:	lea    rax,[rsp+0x38]
   14000538c:	lea    r9,[rip+0xffffffffffffe32d]        # 0x1400036c0
   140005393:	lea    r8d,[rdx+0x4]
   140005397:	lea    rcx,[rip+0xffffffffffffe312]        # 0x1400036b0
   14000539e:	mov    QWORD PTR [rsp+0x20],rax
   1400053a3:	call   QWORD PTR [rip+0x113ef]        # 0x140016798
   1400053a9:	lea    r8,[rip+0xffffffffffffdc80]        # 0x140003030
   1400053b0:	mov    ebx,eax
   1400053b2:	test   eax,eax
   1400053b4:	jns    0x1400053bf
   1400053b6:	lea    rdx,[rip+0xffffffffffffdc93]        # 0x140003050
   1400053bd:	jmp    0x1400053f2
   1400053bf:	lea    rdx,[rip+0xffffffffffffdcca]        # 0x140003090
   1400053c6:	mov    ecx,0x2
   1400053cb:	call   0x1400067e0
   1400053d0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400053d5:	mov    rax,QWORD PTR [rcx]
   1400053d8:	call   QWORD PTR [rax+0x80]
   1400053de:	mov    ebx,eax
   1400053e0:	test   eax,eax
   1400053e2:	jns    0x140005401
   1400053e4:	lea    rdx,[rip+0xffffffffffffdcd5]        # 0x1400030c0
   1400053eb:	lea    r8,[rip+0xffffffffffffdc3e]        # 0x140003030
   1400053f2:	mov    r9d,eax
   1400053f5:	xor    ecx,ecx
   1400053f7:	call   0x1400067e0
   1400053fc:	jmp    0x14000548d
   140005401:	xor    r9d,r9d
   140005404:	xor    edx,edx
   140005406:	mov    cl,0x11
   140005408:	lea    r8d,[r9+0x1]
   14000540c:	call   QWORD PTR [rip+0x11326]        # 0x140016738
   140005412:	xor    r9d,r9d
   140005415:	xor    edx,edx
   140005417:	lea    r8d,[r9+0x3]
   14000541b:	mov    cl,0x11
   14000541d:	call   QWORD PTR [rip+0x11315]        # 0x140016738
   140005423:	mov    ecx,0x7d0
   140005428:	call   QWORD PTR [rip+0x11052]        # 0x140016480
   14000542e:	mov    r9,r14
   140005431:	mov    r8,rbp
   140005434:	mov    rdx,rdi
   140005437:	mov    rcx,r15
   14000543a:	call   0x140005070
   14000543f:	mov    ebx,eax
   140005441:	test   eax,eax
   140005443:	jns    0x14000548b
   140005445:	mov    eax,esi
   140005447:	inc    esi
   140005449:	mov    QWORD PTR [rsp+0x20],rbp
   14000544e:	mov    r9d,ebx
   140005451:	lea    r8,[rip+0xffffffffffffdbd8]        # 0x140003030
   140005458:	cmp    eax,0xa
   14000545b:	ja     0x14000547b
   14000545d:	lea    rdx,[rip+0xffffffffffffdccc]        # 0x140003130
   140005464:	mov    ecx,0x1
   140005469:	call   0x1400067e0
   14000546e:	mov    ecx,0x1f4
   140005473:	call   QWORD PTR [rip+0x11007]        # 0x140016480
   140005479:	jmp    0x140005401
   14000547b:	lea    rdx,[rip+0xffffffffffffdc7e]        # 0x140003100
   140005482:	xor    ecx,ecx
   140005484:	call   0x1400067e0
   140005489:	jmp    0x14000548d
   14000548b:	xor    ebx,ebx
   14000548d:	lea    rcx,[rsp+0x40]
   140005492:	call   QWORD PTR [rip+0x11220]        # 0x1400166b8
   140005498:	mov    rcx,QWORD PTR [rsp+0x30]
   14000549d:	test   rcx,rcx
   1400054a0:	je     0x1400054ae
   1400054a2:	mov    rax,QWORD PTR [rcx]
   1400054a5:	call   QWORD PTR [rax+0x10]
   1400054a8:	and    QWORD PTR [rsp+0x30],0x0
   1400054ae:	mov    rcx,QWORD PTR [rsp+0x38]
   1400054b3:	test   rcx,rcx
   1400054b6:	je     0x1400054be
   1400054b8:	mov    rax,QWORD PTR [rcx]
   1400054bb:	call   QWORD PTR [rax+0x10]
   1400054be:	lea    r11,[rsp+0x60]
   1400054c3:	mov    eax,ebx
   1400054c5:	mov    rbx,QWORD PTR [r11+0x20]
   1400054c9:	mov    rbp,QWORD PTR [r11+0x28]
   1400054cd:	mov    rsi,QWORD PTR [r11+0x30]
   1400054d1:	mov    rsp,r11
   1400054d4:	pop    r15
   1400054d6:	pop    r14
   1400054d8:	pop    rdi
   1400054d9:	ret    
   1400054da:	int3   
   1400054db:	int3   
   1400054dc:	int3   
   1400054dd:	int3   
   1400054de:	int3   
   1400054df:	int3   
   1400054e0:	mov    rax,rsp
   1400054e3:	mov    QWORD PTR [rax+0x8],rbx
   1400054e7:	mov    QWORD PTR [rax+0x10],rsi
   1400054eb:	mov    QWORD PTR [rax+0x18],rdi
   1400054ef:	mov    QWORD PTR [rax+0x20],r14
   1400054f3:	push   rbp
   1400054f4:	lea    rbp,[rax-0x5f]
   1400054f8:	sub    rsp,0x90
   1400054ff:	and    QWORD PTR [rbp+0xf],0x0
   140005504:	mov    rdi,rcx
   140005507:	mov    ecx,0x7d0
   14000550c:	mov    rsi,r9
   14000550f:	mov    r14,r8
   140005512:	mov    rbx,rdx
   140005515:	mov    BYTE PTR [rbp+0x7],0x0
   140005519:	call   QWORD PTR [rip+0x10f61]        # 0x140016480
   14000551f:	lea    r11,[rbp+0xf]
   140005523:	mov    QWORD PTR [rsp+0x30],r11
   140005528:	lea    rax,[rbp+0x17]
   14000552c:	mov    r9,r14
   14000552f:	mov    QWORD PTR [rsp+0x28],rax
   140005534:	lea    rax,[rbp+0x7]
   140005538:	mov    r8d,0x2a
   14000553e:	mov    rdx,rbx
   140005541:	mov    rcx,rdi
   140005544:	mov    QWORD PTR [rsp+0x20],rax
   140005549:	call   0x140003f50
   14000554e:	mov    ebx,eax
   140005550:	test   eax,eax
   140005552:	jns    0x140005576
   140005554:	mov    r9d,eax
   140005557:	mov    QWORD PTR [rsp+0x20],r14
   14000555c:	lea    rdx,[rip+0xffffffffffffdc2d]        # 0x140003190
   140005563:	lea    r8,[rip+0xffffffffffffdbfe]        # 0x140003168
   14000556a:	xor    ecx,ecx
   14000556c:	call   0x1400067e0
   140005571:	jmp    0x1400055ff
   140005576:	cmp    QWORD PTR [rbp+0xf],0x0
   14000557b:	jne    0x140005587
   14000557d:	mov    ebx,0x80070490
   140005582:	mov    r9d,ebx
   140005585:	jmp    0x140005557
   140005587:	mov    rcx,rsi
   14000558a:	call   QWORD PTR [rip+0x11120]        # 0x1400166b0
   140005590:	mov    rdi,rax
   140005593:	test   rax,rax
   140005596:	jne    0x1400055ae
   140005598:	mov    ebx,0x8007000e
   14000559d:	mov    QWORD PTR [rsp+0x20],rsi
   1400055a2:	lea    rdx,[rip+0xffffffffffffdc1f]        # 0x1400031c8
   1400055a9:	mov    r9d,ebx
   1400055ac:	jmp    0x140005563
   1400055ae:	mov    rcx,QWORD PTR [rbp+0xf]
   1400055b2:	movups xmm0,XMMWORD PTR [rbp+0x17]
   1400055b6:	movsd  xmm1,QWORD PTR [rbp+0x27]
   1400055bb:	lea    rdx,[rbp+0x37]
   1400055bf:	mov    r8,rdi
   1400055c2:	mov    rax,QWORD PTR [rcx]
   1400055c5:	movaps XMMWORD PTR [rbp+0x37],xmm0
   1400055c9:	movsd  QWORD PTR [rbp+0x47],xmm1
   1400055ce:	call   QWORD PTR [rax+0xd8]
   1400055d4:	mov    ebx,eax
   1400055d6:	test   eax,eax
   1400055d8:	jns    0x1400055f4
   1400055da:	lea    r8,[rip+0xffffffffffffdb87]        # 0x140003168
   1400055e1:	lea    rdx,[rip+0xffffffffffffdc10]        # 0x1400031f8
   1400055e8:	mov    r9d,eax
   1400055eb:	xor    ecx,ecx
   1400055ed:	call   0x1400067e0
   1400055f2:	jmp    0x1400055f6
   1400055f4:	xor    ebx,ebx
   1400055f6:	mov    rcx,rdi
   1400055f9:	call   QWORD PTR [rip+0x110c1]        # 0x1400166c0
   1400055ff:	mov    rcx,QWORD PTR [rbp+0xf]
   140005603:	test   rcx,rcx
   140005606:	je     0x14000560e
   140005608:	mov    rax,QWORD PTR [rcx]
   14000560b:	call   QWORD PTR [rax+0x10]
   14000560e:	lea    r11,[rsp+0x90]
   140005616:	mov    eax,ebx
   140005618:	mov    rbx,QWORD PTR [r11+0x10]
   14000561c:	mov    rsi,QWORD PTR [r11+0x18]
   140005620:	mov    rdi,QWORD PTR [r11+0x20]
   140005624:	mov    r14,QWORD PTR [r11+0x28]
   140005628:	mov    rsp,r11
   14000562b:	pop    rbp
   14000562c:	ret    
   14000562d:	int3   
   14000562e:	int3   
   14000562f:	int3   
   140005630:	int3   
   140005631:	int3   
   140005632:	int3   
   140005633:	int3   
   140005634:	mov    QWORD PTR [rsp+0x20],rbx
   140005639:	push   rbp
   14000563a:	push   rsi
   14000563b:	push   rdi
   14000563c:	sub    rsp,0x850
   140005643:	mov    rax,QWORD PTR [rip+0xbb26]        # 0x140011170
   14000564a:	xor    rax,rsp
   14000564d:	mov    QWORD PTR [rsp+0x840],rax
   140005655:	and    QWORD PTR [rsp+0x30],0x0
   14000565b:	mov    rbp,r8
   14000565e:	mov    rsi,rdx
   140005661:	mov    rdi,rcx
   140005664:	call   QWORD PTR [rip+0x110d6]        # 0x140016740
   14000566a:	test   rax,rax
   14000566d:	jne    0x140005675
   14000566f:	call   QWORD PTR [rip+0x1106b]        # 0x1400166e0
   140005675:	lea    r9,[rsp+0x30]
   14000567a:	lea    r8,[rip+0xffffffffffffd0ef]        # 0x140002770
   140005681:	xor    edx,edx
   140005683:	mov    rcx,rax
   140005686:	call   QWORD PTR [rip+0x1100c]        # 0x140016698
   14000568c:	mov    ebx,eax
   14000568e:	test   eax,eax
   140005690:	jns    0x1400056af
   140005692:	lea    r8,[rip+0xffffffffffffdb8f]        # 0x140003228
   140005699:	lea    rdx,[rip+0xffffffffffffd610]        # 0x140002cb0
   1400056a0:	mov    r9d,eax
   1400056a3:	xor    ecx,ecx
   1400056a5:	call   0x1400067e0
   1400056aa:	jmp    0x14000577e
   1400056af:	lea    rdx,[rsp+0x40]
   1400056b4:	mov    ecx,0x32c8
   1400056b9:	call   0x14000474c
   1400056be:	mov    ebx,eax
   1400056c0:	test   eax,eax
   1400056c2:	jns    0x1400056ce
   1400056c4:	mov    DWORD PTR [rsp+0x20],0x32c8
   1400056cc:	jmp    0x14000571e
   1400056ce:	call   0x140003ef8
   1400056d3:	test   al,al
   1400056d5:	je     0x140005703
   1400056d7:	mov    rdx,QWORD PTR [rsp+0x30]
   1400056dc:	lea    r8,[rsp+0x40]
   1400056e1:	mov    r9,rsi
   1400056e4:	mov    rcx,rdi
   1400056e7:	call   0x1400054e0
   1400056ec:	mov    ebx,eax
   1400056ee:	test   eax,eax
   1400056f0:	jns    0x140005703
   1400056f2:	lea    rax,[rsp+0x40]
   1400056f7:	mov    QWORD PTR [rsp+0x28],rax
   1400056fc:	mov    QWORD PTR [rsp+0x20],rsi
   140005701:	jmp    0x140005762
   140005703:	mov    esi,0x32c9
   140005708:	lea    rdx,[rsp+0x40]
   14000570d:	mov    ecx,esi
   14000570f:	call   0x14000474c
   140005714:	mov    ebx,eax
   140005716:	test   eax,eax
   140005718:	jns    0x140005738
   14000571a:	mov    DWORD PTR [rsp+0x20],esi
   14000571e:	lea    r8,[rip+0xffffffffffffdb03]        # 0x140003228
   140005725:	lea    rdx,[rip+0xffffffffffffdb34]        # 0x140003260
   14000572c:	mov    r9d,eax
   14000572f:	xor    ecx,ecx
   140005731:	call   0x1400067e0
   140005736:	jmp    0x14000577e
   140005738:	mov    rdx,QWORD PTR [rsp+0x30]
   14000573d:	lea    r8,[rsp+0x40]
   140005742:	mov    r9,rbp
   140005745:	mov    rcx,rdi
   140005748:	call   0x1400054e0
   14000574d:	mov    ebx,eax
   14000574f:	test   eax,eax
   140005751:	jns    0x14000577c
   140005753:	lea    rax,[rsp+0x40]
   140005758:	mov    QWORD PTR [rsp+0x28],rax
   14000575d:	mov    QWORD PTR [rsp+0x20],rbp
   140005762:	lea    r8,[rip+0xffffffffffffdabf]        # 0x140003228
   140005769:	lea    rdx,[rip+0xffffffffffffdb20]        # 0x140003290
   140005770:	mov    r9d,ebx
   140005773:	xor    ecx,ecx
   140005775:	call   0x1400067e0
   14000577a:	jmp    0x14000577e
   14000577c:	xor    ebx,ebx
   14000577e:	mov    rcx,QWORD PTR [rsp+0x30]
   140005783:	test   rcx,rcx
   140005786:	je     0x14000578e
   140005788:	mov    rax,QWORD PTR [rcx]
   14000578b:	call   QWORD PTR [rax+0x10]
   14000578e:	mov    eax,ebx
   140005790:	mov    rcx,QWORD PTR [rsp+0x840]
   140005798:	xor    rcx,rsp
   14000579b:	call   0x140006d40
   1400057a0:	mov    rbx,QWORD PTR [rsp+0x888]
   1400057a8:	add    rsp,0x850
   1400057af:	pop    rdi
   1400057b0:	pop    rsi
   1400057b1:	pop    rbp
   1400057b2:	ret    
   1400057b3:	int3   
   1400057b4:	int3   
   1400057b5:	int3   
   1400057b6:	int3   
   1400057b7:	int3   
   1400057b8:	int3   
   1400057b9:	int3   
   1400057ba:	int3   
   1400057bb:	int3   
   1400057bc:	rex push rbx
   1400057be:	push   rsi
   1400057bf:	push   rdi
   1400057c0:	sub    rsp,0xa70
   1400057c7:	mov    rax,QWORD PTR [rip+0xb9a2]        # 0x140011170
   1400057ce:	xor    rax,rsp
   1400057d1:	mov    QWORD PTR [rsp+0xa60],rax
   1400057d9:	mov    rbx,r8
   1400057dc:	mov    rsi,rdx
   1400057df:	mov    rdi,rcx
   1400057e2:	lea    r8,[rip+0xffffffffffffdad7]        # 0x1400032c0
   1400057e9:	lea    rdx,[rip+0xffffffffffffdaf8]        # 0x1400032e8
   1400057f0:	mov    ecx,0x2
   1400057f5:	call   0x1400067e0
   1400057fa:	lea    r8,[rsp+0x30]
   1400057ff:	mov    r9d,0x111
   140005805:	mov    edx,0x32d1
   14000580a:	mov    rcx,rbx
   14000580d:	call   QWORD PTR [rip+0x10edd]        # 0x1400166f0
   140005813:	test   eax,eax
   140005815:	jne    0x14000583f
   140005817:	call   QWORD PTR [rip+0x10c3b]        # 0x140016458
   14000581d:	mov    DWORD PTR [rsp+0x20],0x32d1
   140005825:	movzx  ebx,ax
   140005828:	mov    r9d,eax
   14000582b:	lea    rdx,[rip+0xffffffffffffdade]        # 0x140003310
   140005832:	or     ebx,0x80070000
   140005838:	test   eax,eax
   14000583a:	cmovle ebx,eax
   14000583d:	jmp    0x1400058a1
   14000583f:	lea    r8,[rsp+0x260]
   140005847:	mov    r9d,0x400
   14000584d:	mov    edx,0x2f05
   140005852:	mov    rcx,rbx
   140005855:	call   QWORD PTR [rip+0x10e95]        # 0x1400166f0
   14000585b:	test   eax,eax
   14000585d:	jne    0x14000586f
   14000585f:	call   QWORD PTR [rip+0x10bf3]        # 0x140016458
   140005865:	mov    DWORD PTR [rsp+0x20],0x2f05
   14000586d:	jmp    0x140005825
   14000586f:	lea    r9,[rsp+0x260]
   140005877:	lea    r8,[rsp+0x30]
   14000587c:	mov    rdx,rsi
   14000587f:	mov    rcx,rdi
   140005882:	call   0x140005310
   140005887:	mov    ebx,eax
   140005889:	test   eax,eax
   14000588b:	jns    0x1400058b1
   14000588d:	lea    rax,[rsp+0x30]
   140005892:	mov    r9d,ebx
   140005895:	lea    rdx,[rip+0xffffffffffffdaa4]        # 0x140003340
   14000589c:	mov    QWORD PTR [rsp+0x20],rax
   1400058a1:	lea    r8,[rip+0xffffffffffffda18]        # 0x1400032c0
   1400058a8:	xor    ecx,ecx
   1400058aa:	call   0x1400067e0
   1400058af:	jmp    0x1400058b3
   1400058b1:	xor    ebx,ebx
   1400058b3:	mov    eax,ebx
   1400058b5:	mov    rcx,QWORD PTR [rsp+0xa60]
   1400058bd:	xor    rcx,rsp
   1400058c0:	call   0x140006d40
   1400058c5:	add    rsp,0xa70
   1400058cc:	pop    rdi
   1400058cd:	pop    rsi
   1400058ce:	pop    rbx
   1400058cf:	ret    
   1400058d0:	int3   
   1400058d1:	int3   
   1400058d2:	int3   
   1400058d3:	int3   
   1400058d4:	int3   
   1400058d5:	int3   
   1400058d6:	int3   
   1400058d7:	int3   
   1400058d8:	rex push rbx
   1400058da:	push   rsi
   1400058db:	push   rdi
   1400058dc:	sub    rsp,0x840
   1400058e3:	mov    rax,QWORD PTR [rip+0xb886]        # 0x140011170
   1400058ea:	xor    rax,rsp
   1400058ed:	mov    QWORD PTR [rsp+0x830],rax
   1400058f5:	mov    rax,r9
   1400058f8:	mov    rdi,r8
   1400058fb:	mov    rsi,rdx
   1400058fe:	mov    rbx,rcx
   140005901:	lea    r8,[rsp+0x30]
   140005906:	mov    r9d,0x400
   14000590c:	mov    rcx,rax
   14000590f:	mov    edx,0x2f05
   140005914:	call   QWORD PTR [rip+0x10dd6]        # 0x1400166f0
   14000591a:	test   eax,eax
   14000591c:	jne    0x140005943
   14000591e:	call   QWORD PTR [rip+0x10b34]        # 0x140016458
   140005924:	mov    DWORD PTR [rsp+0x20],0x2f05
   14000592c:	lea    rdx,[rip+0xffffffffffffd9dd]        # 0x140003310
   140005933:	movzx  ebx,ax
   140005936:	or     ebx,0x80070000
   14000593c:	test   eax,eax
   14000593e:	cmovle ebx,eax
   140005941:	jmp    0x140005968
   140005943:	lea    r9,[rsp+0x30]
   140005948:	mov    r8,rdi
   14000594b:	mov    rdx,rsi
   14000594e:	mov    rcx,rbx
   140005951:	call   0x140005310
   140005956:	mov    ebx,eax
   140005958:	test   eax,eax
   14000595a:	jns    0x14000597b
   14000595c:	mov    QWORD PTR [rsp+0x20],rdi
   140005961:	lea    rdx,[rip+0xffffffffffffd9d8]        # 0x140003340
   140005968:	lea    r8,[rip+0xffffffffffffda01]        # 0x140003370
   14000596f:	mov    r9d,eax
   140005972:	xor    ecx,ecx
   140005974:	call   0x1400067e0
   140005979:	jmp    0x14000597d
   14000597b:	xor    ebx,ebx
   14000597d:	mov    eax,ebx
   14000597f:	mov    rcx,QWORD PTR [rsp+0x830]
   140005987:	xor    rcx,rsp
   14000598a:	call   0x140006d40
   14000598f:	add    rsp,0x840
   140005996:	pop    rdi
   140005997:	pop    rsi
   140005998:	pop    rbx
   140005999:	ret    
   14000599a:	int3   
   14000599b:	int3   
   14000599c:	int3   
   14000599d:	int3   
   14000599e:	int3   
   14000599f:	int3   
   1400059a0:	mov    r11,rsp
   1400059a3:	mov    QWORD PTR [r11+0x18],rbx
   1400059a7:	mov    QWORD PTR [r11+0x20],rsi
   1400059ab:	push   rdi
   1400059ac:	sub    rsp,0x60
   1400059b0:	mov    rax,QWORD PTR [rip+0xb7b9]        # 0x140011170
   1400059b7:	xor    rax,rsp
   1400059ba:	mov    QWORD PTR [rsp+0x58],rax
   1400059bf:	mov    rbx,rdx
   1400059c2:	mov    rdi,rcx
   1400059c5:	xor    esi,esi
   1400059c7:	mov    WORD PTR [rdx],si
   1400059ca:	lea    rcx,[r11-0x30]
   1400059ce:	lea    rdx,[r11-0x38]
   1400059d2:	mov    DWORD PTR [rsp+0x30],0x10
   1400059da:	call   QWORD PTR [rip+0x10aa8]        # 0x140016488
   1400059e0:	test   eax,eax
   1400059e2:	jne    0x140005a12
   1400059e4:	call   QWORD PTR [rip+0x10a6e]        # 0x140016458
   1400059ea:	lea    r8,[rip+0xffffffffffffd9a7]        # 0x140003398
   1400059f1:	lea    rdx,[rip+0xffffffffffffd9c8]        # 0x1400033c0
   1400059f8:	movzx  ebx,ax
   1400059fb:	mov    r9d,eax
   1400059fe:	or     ebx,0x80070000
   140005a04:	test   eax,eax
   140005a06:	cmovle ebx,eax
   140005a09:	xor    ecx,ecx
   140005a0b:	call   0x1400067e0
   140005a10:	jmp    0x140005a4b
   140005a12:	lea    r9,[rsp+0x38]
   140005a17:	lea    r8,[rip+0xffffffffffffd9d2]        # 0x1400033f0
   140005a1e:	mov    edx,0x111
   140005a23:	mov    rcx,rbx
   140005a26:	mov    QWORD PTR [rsp+0x20],rdi
   140005a2b:	call   0x140005de8
   140005a30:	mov    ebx,eax
   140005a32:	test   eax,eax
   140005a34:	jns    0x140005a49
   140005a36:	lea    rdx,[rip+0xffffffffffffd9c3]        # 0x140003400
   140005a3d:	mov    r8d,eax
   140005a40:	xor    ecx,ecx
   140005a42:	call   0x1400067e0
   140005a47:	jmp    0x140005a4b
   140005a49:	mov    ebx,esi
   140005a4b:	mov    eax,ebx
   140005a4d:	mov    rcx,QWORD PTR [rsp+0x58]
   140005a52:	xor    rcx,rsp
   140005a55:	call   0x140006d40
   140005a5a:	lea    r11,[rsp+0x60]
   140005a5f:	mov    rbx,QWORD PTR [r11+0x20]
   140005a63:	mov    rsi,QWORD PTR [r11+0x28]
   140005a67:	mov    rsp,r11
   140005a6a:	pop    rdi
   140005a6b:	ret    
   140005a6c:	int3   
   140005a6d:	int3   
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	int3   
   140005a71:	int3   
   140005a72:	int3   
   140005a73:	int3   
   140005a74:	mov    QWORD PTR [rsp+0x20],rbx
   140005a79:	push   rbp
   140005a7a:	push   rsi
   140005a7b:	push   rdi
   140005a7c:	lea    rbp,[rsp-0x7a0]
   140005a84:	sub    rsp,0x8a0
   140005a8b:	mov    rax,QWORD PTR [rip+0xb6de]        # 0x140011170
   140005a92:	xor    rax,rsp
   140005a95:	mov    QWORD PTR [rbp+0x790],rax
   140005a9c:	and    QWORD PTR [rsp+0x48],0x0
   140005aa2:	mov    rdi,rcx
   140005aa5:	lea    rcx,[rsp+0x50]
   140005aaa:	mov    rbx,r8
   140005aad:	mov    rsi,rdx
   140005ab0:	mov    BYTE PTR [rsp+0x40],0x0
   140005ab5:	call   QWORD PTR [rip+0x10bed]        # 0x1400166a8
   140005abb:	lea    r8,[rbp-0x70]
   140005abf:	mov    r9d,0x400
   140005ac5:	mov    edx,0x32d6
   140005aca:	mov    rcx,rbx
   140005acd:	call   QWORD PTR [rip+0x10c1d]        # 0x1400166f0
   140005ad3:	test   eax,eax
   140005ad5:	jne    0x140005af7
   140005ad7:	call   QWORD PTR [rip+0x1097b]        # 0x140016458
   140005add:	lea    rdx,[rip+0xffffffffffffd98c]        # 0x140003470
   140005ae4:	movzx  ebx,ax
   140005ae7:	or     ebx,0x80070000
   140005aed:	test   eax,eax
   140005aef:	cmovle ebx,eax
   140005af2:	jmp    0x140005b79
   140005af7:	lea    rax,[rsp+0x48]
   140005afc:	lea    r9,[rbp-0x70]
   140005b00:	mov    r8d,0x2b
   140005b06:	mov    QWORD PTR [rsp+0x30],rax
   140005b0b:	lea    rax,[rsp+0x50]
   140005b10:	mov    rdx,rsi
   140005b13:	mov    QWORD PTR [rsp+0x28],rax
   140005b18:	lea    rax,[rsp+0x40]
   140005b1d:	mov    rcx,rdi
   140005b20:	mov    QWORD PTR [rsp+0x20],rax
   140005b25:	call   0x140003f50
   140005b2a:	mov    ebx,eax
   140005b2c:	test   eax,eax
   140005b2e:	js     0x140005b72
   140005b30:	cmp    BYTE PTR [rsp+0x40],0x0
   140005b35:	je     0x140005b72
   140005b37:	mov    rcx,QWORD PTR [rsp+0x48]
   140005b3c:	movups xmm0,XMMWORD PTR [rsp+0x50]
   140005b41:	movsd  xmm1,QWORD PTR [rsp+0x60]
   140005b47:	lea    rdx,[rsp+0x70]
   140005b4c:	mov    rax,QWORD PTR [rcx]
   140005b4f:	movaps XMMWORD PTR [rsp+0x70],xmm0
   140005b54:	movsd  QWORD PTR [rbp-0x80],xmm1
   140005b59:	call   QWORD PTR [rax+0xc8]
   140005b5f:	mov    ebx,eax
   140005b61:	test   eax,eax
   140005b63:	jns    0x140005b6e
   140005b65:	lea    rdx,[rip+0xffffffffffffd96c]        # 0x1400034d8
   140005b6c:	jmp    0x140005b79
   140005b6e:	xor    ebx,ebx
   140005b70:	jmp    0x140005b8a
   140005b72:	lea    rdx,[rip+0xffffffffffffd91f]        # 0x140003498
   140005b79:	lea    r8,[rip+0xffffffffffffd8d0]        # 0x140003450
   140005b80:	mov    r9d,eax
   140005b83:	xor    ecx,ecx
   140005b85:	call   0x1400067e0
   140005b8a:	mov    rcx,QWORD PTR [rsp+0x48]
   140005b8f:	test   rcx,rcx
   140005b92:	je     0x140005ba0
   140005b94:	mov    rax,QWORD PTR [rcx]
   140005b97:	call   QWORD PTR [rax+0x10]
   140005b9a:	and    QWORD PTR [rsp+0x48],0x0
   140005ba0:	lea    rcx,[rsp+0x50]
   140005ba5:	call   QWORD PTR [rip+0x10b0d]        # 0x1400166b8
   140005bab:	mov    eax,ebx
   140005bad:	mov    rcx,QWORD PTR [rbp+0x790]
   140005bb4:	xor    rcx,rsp
   140005bb7:	call   0x140006d40
   140005bbc:	mov    rbx,QWORD PTR [rsp+0x8d8]
   140005bc4:	add    rsp,0x8a0
   140005bcb:	pop    rdi
   140005bcc:	pop    rsi
   140005bcd:	pop    rbp
   140005bce:	ret    
   140005bcf:	int3   
   140005bd0:	int3   
   140005bd1:	int3   
   140005bd2:	int3   
   140005bd3:	int3   
   140005bd4:	int3   
   140005bd5:	int3   
   140005bd6:	int3   
   140005bd7:	int3   
   140005bd8:	rex push rbx
   140005bda:	push   rbp
   140005bdb:	push   rsi
   140005bdc:	push   rdi
   140005bdd:	push   r12
   140005bdf:	push   r13
   140005be1:	push   r14
   140005be3:	push   r15
   140005be5:	sub    rsp,0x278
   140005bec:	mov    rax,QWORD PTR [rip+0xb57d]        # 0x140011170
   140005bf3:	xor    rax,rsp
   140005bf6:	mov    QWORD PTR [rsp+0x260],rax
   140005bfe:	mov    r12,rdx
   140005c01:	mov    r13,r9
   140005c04:	mov    rbp,r8
   140005c07:	mov    r15,rcx
   140005c0a:	lea    r9,[rsp+0x20]
   140005c0f:	lea    r8,[rip+0xffffffffffffcb5a]        # 0x140002770
   140005c16:	xor    esi,esi
   140005c18:	mov    rcx,r12
   140005c1b:	xor    edx,edx
   140005c1d:	and    QWORD PTR [rsp+0x20],rsi
   140005c22:	call   QWORD PTR [rip+0x10a70]        # 0x140016698
   140005c28:	mov    ebx,eax
   140005c2a:	test   eax,eax
   140005c2c:	jns    0x140005c41
   140005c2e:	lea    r8,[rip+0xffffffffffffd8db]        # 0x140003510
   140005c35:	lea    rdx,[rip+0xffffffffffffd074]        # 0x140002cb0
   140005c3c:	jmp    0x140005d87
   140005c41:	mov    ebx,0x2
   140005c46:	lea    rcx,[rip+0xffffffffffffd5fb]        # 0x140003248
   140005c4d:	xor    edx,edx
   140005c4f:	mov    r8d,ebx
   140005c52:	call   QWORD PTR [rip+0x10808]        # 0x140016460
   140005c58:	mov    rsi,rax
   140005c5b:	test   rax,rax
   140005c5e:	jne    0x140005c87
   140005c60:	call   QWORD PTR [rip+0x107f2]        # 0x140016458
   140005c66:	lea    r8,[rip+0xffffffffffffd8a3]        # 0x140003510
   140005c6d:	lea    rdx,[rip+0xffffffffffffd8c4]        # 0x140003538
   140005c74:	movzx  ebx,ax
   140005c77:	or     ebx,0x80070000
   140005c7d:	test   eax,eax
   140005c7f:	cmovle ebx,eax
   140005c82:	jmp    0x140005d87
   140005c87:	call   0x140003ef8
   140005c8c:	lea    rdi,[rip+0xffffffffffffd87d]        # 0x140003510
   140005c93:	lea    rdx,[rip+0xffffffffffffd8ce]        # 0x140003568
   140005c9a:	mov    r8,rdi
   140005c9d:	mov    ecx,ebx
   140005c9f:	mov    r14b,al
   140005ca2:	call   0x1400067e0
   140005ca7:	mov    rdx,r12
   140005caa:	mov    rcx,r15
   140005cad:	test   r14b,r14b
   140005cb0:	je     0x140005cbc
   140005cb2:	mov    r8,rsi
   140005cb5:	call   0x1400057bc
   140005cba:	jmp    0x140005cc7
   140005cbc:	mov    r9,rsi
   140005cbf:	mov    r8,rbp
   140005cc2:	call   0x1400058d8
   140005cc7:	mov    ebx,eax
   140005cc9:	test   eax,eax
   140005ccb:	jns    0x140005cdf
   140005ccd:	mov    r9d,eax
   140005cd0:	mov    r8,rdi
   140005cd3:	lea    rdx,[rip+0xffffffffffffd8b6]        # 0x140003590
   140005cda:	jmp    0x140005d8a
   140005cdf:	test   r14b,r14b
   140005ce2:	je     0x140005d08
   140005ce4:	lea    rdx,[rsp+0x30]
   140005ce9:	mov    rcx,rbp
   140005cec:	call   0x1400059a0
   140005cf1:	mov    ebx,eax
   140005cf3:	test   eax,eax
   140005cf5:	jns    0x140005d03
   140005cf7:	lea    rdx,[rip+0xffffffffffffd8c2]        # 0x1400035c0
   140005cfe:	jmp    0x140005d84
   140005d03:	lea    rbp,[rsp+0x30]
   140005d08:	mov    r14d,0x2
   140005d0e:	lea    rdx,[rip+0xffffffffffffd8db]        # 0x1400035f0
   140005d15:	mov    r9,rbp
   140005d18:	mov    ecx,r14d
   140005d1b:	mov    r8,rdi
   140005d1e:	call   0x1400067e0
   140005d23:	lea    rdx,[rip+0xffffffffffffd8e6]        # 0x140003610
   140005d2a:	mov    r9,r13
   140005d2d:	mov    r8,rdi
   140005d30:	mov    ecx,r14d
   140005d33:	call   0x1400067e0
   140005d38:	mov    r8,r13
   140005d3b:	mov    rdx,rbp
   140005d3e:	mov    rcx,r15
   140005d41:	call   0x140005634
   140005d46:	mov    r8,rdi
   140005d49:	mov    ebx,eax
   140005d4b:	test   eax,eax
   140005d4d:	jns    0x140005d58
   140005d4f:	lea    rdx,[rip+0xffffffffffffd8da]        # 0x140003630
   140005d56:	jmp    0x140005d87
   140005d58:	lea    rdx,[rip+0xffffffffffffd901]        # 0x140003660
   140005d5f:	mov    ecx,r14d
   140005d62:	call   0x1400067e0
   140005d67:	mov    rdx,QWORD PTR [rsp+0x20]
   140005d6c:	mov    r8,rsi
   140005d6f:	mov    rcx,r15
   140005d72:	call   0x140005a74
   140005d77:	mov    ebx,eax
   140005d79:	test   eax,eax
   140005d7b:	jns    0x140005d93
   140005d7d:	lea    rdx,[rip+0xffffffffffffd8fc]        # 0x140003680
   140005d84:	mov    r8,rdi
   140005d87:	mov    r9d,eax
   140005d8a:	xor    ecx,ecx
   140005d8c:	call   0x1400067e0
   140005d91:	jmp    0x140005d95
   140005d93:	xor    ebx,ebx
   140005d95:	mov    rcx,QWORD PTR [rsp+0x20]
   140005d9a:	test   rcx,rcx
   140005d9d:	je     0x140005dab
   140005d9f:	mov    rax,QWORD PTR [rcx]
   140005da2:	call   QWORD PTR [rax+0x10]
   140005da5:	and    QWORD PTR [rsp+0x20],0x0
   140005dab:	test   rsi,rsi
   140005dae:	je     0x140005db9
   140005db0:	mov    rcx,rsi
   140005db3:	call   QWORD PTR [rip+0x106af]        # 0x140016468
   140005db9:	mov    eax,ebx
   140005dbb:	mov    rcx,QWORD PTR [rsp+0x260]
   140005dc3:	xor    rcx,rsp
   140005dc6:	call   0x140006d40
   140005dcb:	add    rsp,0x278
   140005dd2:	pop    r15
   140005dd4:	pop    r14
   140005dd6:	pop    r13
   140005dd8:	pop    r12
   140005dda:	pop    rdi
   140005ddb:	pop    rsi
   140005ddc:	pop    rbp
   140005ddd:	pop    rbx
   140005dde:	ret    
   140005ddf:	int3   
   140005de0:	int3   
   140005de1:	int3   
   140005de2:	int3   
   140005de3:	int3   
   140005de4:	int3   
   140005de5:	int3   
   140005de6:	int3   
   140005de7:	int3   
   140005de8:	mov    QWORD PTR [rsp+0x18],r8
   140005ded:	mov    QWORD PTR [rsp+0x20],r9
   140005df2:	push   rbx
   140005df3:	push   rbp
   140005df4:	push   rsi
   140005df5:	push   rdi
   140005df6:	sub    rsp,0x28
   140005dfa:	xor    ebp,ebp
   140005dfc:	mov    rsi,rcx
   140005dff:	mov    ebx,ebp
   140005e01:	test   rdx,rdx
   140005e04:	je     0x140005e0f
   140005e06:	cmp    rdx,0x7fffffff
   140005e0d:	jbe    0x140005e14
   140005e0f:	mov    ebx,0x80070057
   140005e14:	test   ebx,ebx
   140005e16:	js     0x140005e49
   140005e18:	lea    rdi,[rdx-0x1]
   140005e1c:	lea    r9,[rsp+0x68]
   140005e21:	mov    ebx,ebp
   140005e23:	mov    rdx,rdi
   140005e26:	call   0x14000706c
   140005e2b:	test   eax,eax
   140005e2d:	js     0x140005e3e
   140005e2f:	cdqe   
   140005e31:	cmp    rax,rdi
   140005e34:	ja     0x140005e3e
   140005e36:	jne    0x140005e51
   140005e38:	mov    WORD PTR [rsi+rdi*2],bp
   140005e3c:	jmp    0x140005e51
   140005e3e:	mov    WORD PTR [rsi+rdi*2],bp
   140005e42:	mov    ebx,0x8007007a
   140005e47:	jmp    0x140005e51
   140005e49:	test   rdx,rdx
   140005e4c:	je     0x140005e51
   140005e4e:	mov    WORD PTR [rcx],bp
   140005e51:	mov    eax,ebx
   140005e53:	add    rsp,0x28
   140005e57:	pop    rdi
   140005e58:	pop    rsi
   140005e59:	pop    rbp
   140005e5a:	pop    rbx
   140005e5b:	ret    
   140005e5c:	int3   
   140005e5d:	int3   
   140005e5e:	int3   
   140005e5f:	int3   
   140005e60:	int3   
   140005e61:	int3   
   140005e62:	int3   
   140005e63:	int3   
   140005e64:	mov    r11,rsp
   140005e67:	mov    QWORD PTR [r11+0x8],rbx
   140005e6b:	mov    QWORD PTR [r11+0x10],rbp
   140005e6f:	mov    QWORD PTR [r11+0x18],rsi
   140005e73:	mov    QWORD PTR [r11+0x20],rdi
   140005e77:	push   r12
   140005e79:	push   r14
   140005e7b:	push   r15
   140005e7d:	sub    rsp,0x80
   140005e84:	lea    rax,[r11-0x68]
   140005e88:	lea    r15,[rip+0xffffffffffffd9e1]        # 0x140003870
   140005e8f:	mov    r12d,0x2
   140005e95:	mov    QWORD PTR [r11-0x60],rax
   140005e99:	lea    rax,[r11-0x68]
   140005e9d:	lea    rdx,[rip+0xffffffffffffd9dc]        # 0x140003880
   140005ea4:	mov    r8,r15
   140005ea7:	mov    ecx,r12d
   140005eaa:	mov    QWORD PTR [r11-0x68],rax
   140005eae:	call   0x1400067e0
   140005eb3:	call   QWORD PTR [rip+0x105bf]        # 0x140016478
   140005eb9:	lea    rsi,[rip+0xffffffffffffcf28]        # 0x140002de8
   140005ec0:	lea    rdx,[rip+0xffffffffffffcf49]        # 0x140002e10
   140005ec7:	mov    r9d,eax
   140005eca:	mov    r8,rsi
   140005ecd:	mov    ecx,r12d
   140005ed0:	call   0x1400067e0
   140005ed5:	xor    edx,edx
   140005ed7:	xor    ecx,ecx
   140005ed9:	mov    r8d,0x10000000
   140005edf:	call   QWORD PTR [rip+0x10833]        # 0x140016718
   140005ee5:	mov    rdi,rax
   140005ee8:	test   rax,rax
   140005eeb:	jne    0x140005f17
   140005eed:	call   QWORD PTR [rip+0x10565]        # 0x140016458
   140005ef3:	lea    rdx,[rip+0xffffffffffffcf56]        # 0x140002e50
   140005efa:	mov    r8,rsi
   140005efd:	movzx  ebx,ax
   140005f00:	mov    r9d,eax
   140005f03:	or     ebx,0x80070000
   140005f09:	test   eax,eax
   140005f0b:	cmovle ebx,eax
   140005f0e:	xor    ecx,ecx
   140005f10:	call   0x1400067e0
   140005f15:	jmp    0x140005f59
   140005f17:	mov    rcx,rax
   140005f1a:	call   QWORD PTR [rip+0x10800]        # 0x140016720
   140005f20:	test   eax,eax
   140005f22:	jne    0x140005f4e
   140005f24:	call   QWORD PTR [rip+0x1052e]        # 0x140016458
   140005f2a:	lea    rdx,[rip+0xffffffffffffcf47]        # 0x140002e78
   140005f31:	mov    r8,rsi
   140005f34:	movzx  ebx,ax
   140005f37:	mov    r9d,eax
   140005f3a:	or     ebx,0x80070000
   140005f40:	test   eax,eax
   140005f42:	cmovle ebx,eax
   140005f45:	xor    ecx,ecx
   140005f47:	call   0x1400067e0
   140005f4c:	jmp    0x140005f50
   140005f4e:	xor    ebx,ebx
   140005f50:	mov    rcx,rdi
   140005f53:	call   QWORD PTR [rip+0x107cf]        # 0x140016728
   140005f59:	mov    r8,r15
   140005f5c:	test   ebx,ebx
   140005f5e:	jns    0x140005f76
   140005f60:	lea    rdx,[rip+0xffffffffffffd941]        # 0x1400038a8
   140005f67:	mov    r9d,ebx
   140005f6a:	xor    ecx,ecx
   140005f6c:	call   0x1400067e0
   140005f71:	jmp    0x1400060df
   140005f76:	lea    rdx,[rip+0xffffffffffffd95b]        # 0x1400038d8
   140005f7d:	mov    ecx,r12d
   140005f80:	call   0x1400067e0
   140005f85:	lea    r9,[rip+0xd448]        # 0x1400133d4
   140005f8c:	lea    rdx,[rip+0xffffffffffffd975]        # 0x140003908
   140005f93:	mov    r8,r15
   140005f96:	mov    ecx,r12d
   140005f99:	call   0x1400067e0
   140005f9e:	lea    r9,[rip+0xd631]        # 0x1400135d6
   140005fa5:	lea    rdx,[rip+0xffffffffffffd974]        # 0x140003920
   140005fac:	mov    r8,r15
   140005faf:	mov    ecx,r12d
   140005fb2:	call   0x1400067e0
   140005fb7:	xor    edx,edx
   140005fb9:	xor    ecx,ecx
   140005fbb:	call   QWORD PTR [rip+0x107e7]        # 0x1400167a8
   140005fc1:	mov    r8,r15
   140005fc4:	mov    r14d,eax
   140005fc7:	test   eax,eax
   140005fc9:	jns    0x140005fe1
   140005fcb:	mov    r9d,eax
   140005fce:	lea    rdx,[rip+0xffffffffffffd963]        # 0x140003938
   140005fd5:	xor    ecx,ecx
   140005fd7:	call   0x1400067e0
   140005fdc:	jmp    0x1400060d4
   140005fe1:	lea    rdx,[rip+0xffffffffffffd988]        # 0x140003970
   140005fe8:	mov    ecx,r12d
   140005feb:	call   0x1400067e0
   140005ff0:	xor    eax,eax
   140005ff2:	xor    edi,edi
   140005ff4:	xor    ebx,ebx
   140005ff6:	mov    ebp,0x8
   140005ffb:	lea    rsi,[rsp+0x40]
   140006000:	lea    r8,[rip+0xffffffffffffcb89]        # 0x140002b90
   140006007:	xor    r9d,r9d
   14000600a:	mov    rdx,rax
   14000600d:	xor    ecx,ecx
   14000600f:	call   QWORD PTR [rip+0x106d3]        # 0x1400166e8
   140006015:	test   rax,rax
   140006018:	je     0x140006044
   14000601a:	cmp    edi,ebp
   14000601c:	jae    0x140006028
   14000601e:	mov    QWORD PTR [rsi],rax
   140006021:	inc    edi
   140006023:	add    rsi,rbp
   140006026:	jmp    0x140006000
   140006028:	lea    r8,[rip+0xffffffffffffcba9]        # 0x140002bd8
   14000602f:	lea    rdx,[rip+0xffffffffffffcbca]        # 0x140002c00
   140006036:	xor    ecx,ecx
   140006038:	mov    ebx,0x8007007a
   14000603d:	call   0x1400067e0
   140006042:	jmp    0x140006046
   140006044:	mov    ebp,edi
   140006046:	mov    r8,r15
   140006049:	test   ebx,ebx
   14000604b:	jns    0x14000605c
   14000604d:	mov    r9d,ebx
   140006050:	lea    rdx,[rip+0xffffffffffffd941]        # 0x140003998
   140006057:	jmp    0x140005fd5
   14000605c:	lea    rdx,[rip+0xffffffffffffd96d]        # 0x1400039d0
   140006063:	mov    r9d,ebp
   140006066:	mov    ecx,r12d
   140006069:	call   0x1400067e0
   14000606e:	xor    edi,edi
   140006070:	test   ebp,ebp
   140006072:	je     0x1400060d4
   140006074:	lea    rsi,[rsp+0x40]
   140006079:	mov    rbx,QWORD PTR [rsi]
   14000607c:	lea    rdx,[rip+0xffffffffffffd975]        # 0x1400039f8
   140006083:	mov    r9d,edi
   140006086:	mov    r8,r15
   140006089:	mov    ecx,r12d
   14000608c:	mov    QWORD PTR [rsp+0x20],rbx
   140006091:	call   0x1400067e0
   140006096:	lea    r9,[rip+0xd539]        # 0x1400135d6
   14000609d:	lea    r8,[rip+0xd330]        # 0x1400133d4
   1400060a4:	lea    rcx,[rsp+0x30]
   1400060a9:	mov    rdx,rbx
   1400060ac:	call   0x140005bd8
   1400060b1:	mov    ebx,eax
   1400060b3:	test   eax,eax
   1400060b5:	jns    0x1400060c3
   1400060b7:	inc    edi
   1400060b9:	add    rsi,0x8
   1400060bd:	cmp    edi,ebp
   1400060bf:	jb     0x140006079
   1400060c1:	jmp    0x1400060d4
   1400060c3:	lea    rdx,[rip+0xffffffffffffd95e]        # 0x140003a28
   1400060ca:	mov    r8,r15
   1400060cd:	xor    ecx,ecx
   1400060cf:	call   0x1400067e0
   1400060d4:	test   r14d,r14d
   1400060d7:	js     0x1400060df
   1400060d9:	call   QWORD PTR [rip+0x106c1]        # 0x1400167a0
   1400060df:	mov    rsi,QWORD PTR [rsp+0x30]
   1400060e4:	lea    rax,[rsp+0x30]
   1400060e9:	cmp    rsi,rax
   1400060ec:	je     0x14000613f
   1400060ee:	mov    rdi,rsi
   1400060f1:	mov    rsi,QWORD PTR [rsi]
   1400060f4:	mov    rcx,QWORD PTR [rdi]
   1400060f7:	mov    rax,QWORD PTR [rdi+0x8]
   1400060fb:	cmp    QWORD PTR [rcx+0x8],rdi
   1400060ff:	jne    0x140006163
   140006101:	cmp    QWORD PTR [rax],rdi
   140006104:	jne    0x140006163
   140006106:	mov    QWORD PTR [rax],rcx
   140006109:	mov    QWORD PTR [rcx+0x8],rax
   14000610d:	mov    rcx,QWORD PTR [rdi+0x10]
   140006111:	test   rcx,rcx
   140006114:	je     0x14000611c
   140006116:	call   QWORD PTR [rip+0x1066c]        # 0x140016788
   14000611c:	and    QWORD PTR [rdi+0x10],0x0
   140006121:	call   QWORD PTR [rip+0x10321]        # 0x140016448
   140006127:	mov    r8,rdi
   14000612a:	mov    rcx,rax
   14000612d:	xor    edx,edx
   14000612f:	call   QWORD PTR [rip+0x1030b]        # 0x140016440
   140006135:	lea    r11,[rsp+0x30]
   14000613a:	cmp    rsi,r11
   14000613d:	jne    0x1400060ee
   14000613f:	lea    r11,[rsp+0x80]
   140006147:	mov    eax,ebx
   140006149:	mov    rbx,QWORD PTR [r11+0x20]
   14000614d:	mov    rbp,QWORD PTR [r11+0x28]
   140006151:	mov    rsi,QWORD PTR [r11+0x30]
   140006155:	mov    rdi,QWORD PTR [r11+0x38]
   140006159:	mov    rsp,r11
   14000615c:	pop    r15
   14000615e:	pop    r14
   140006160:	pop    r12
   140006162:	ret    
   140006163:	mov    ecx,0x3
   140006168:	int    0x29
   14000616a:	int3   
   14000616b:	int3   
   14000616c:	int3   
   14000616d:	int3   
   14000616e:	int3   
   14000616f:	int3   
   140006170:	mov    QWORD PTR [rsp+0x8],rbx
   140006175:	push   rdi
   140006176:	sub    rsp,0x20
   14000617a:	or     edi,0xffffffff
   14000617d:	call   QWORD PTR [rip+0x102f5]        # 0x140016478
   140006183:	lea    r8,[rip+0xffffffffffffd966]        # 0x140003af0
   14000618a:	lea    rdx,[rip+0xffffffffffffd977]        # 0x140003b08
   140006191:	lea    ecx,[rdi+0x3]
   140006194:	mov    ebx,eax
   140006196:	call   0x1400067e0
   14000619b:	lea    rdx,[rip+0xffffffffffffd98e]        # 0x140003b30
   1400061a2:	lea    ecx,[rdi+0x3]
   1400061a5:	mov    r8d,ebx
   1400061a8:	call   0x1400067e0
   1400061ad:	mov    r8d,DWORD PTR [rip+0xd21c]        # 0x1400133d0
   1400061b4:	lea    rdx,[rip+0xffffffffffffd995]        # 0x140003b50
   1400061bb:	lea    ecx,[rdi+0x3]
   1400061be:	call   0x1400067e0
   1400061c3:	mov    ecx,DWORD PTR [rip+0xd207]        # 0x1400133d0
   1400061c9:	lea    r9d,[rdi+0x2]
   1400061cd:	lea    r8,[rip+0xffffffffffffd4d8]        # 0x1400036ac
   1400061d4:	mov    edx,ebx
   1400061d6:	call   QWORD PTR [rip+0x10574]        # 0x140016750
   1400061dc:	test   eax,eax
   1400061de:	jne    0x140006215
   1400061e0:	call   QWORD PTR [rip+0x10272]        # 0x140016458
   1400061e6:	lea    r8,[rip+0xffffffffffffd903]        # 0x140003af0
   1400061ed:	lea    rdx,[rip+0xffffffffffffd97c]        # 0x140003b70
   1400061f4:	mov    r9d,eax
   1400061f7:	xor    ecx,ecx
   1400061f9:	call   0x1400067e0
   1400061fe:	lea    r8,[rip+0xffffffffffffd8eb]        # 0x140003af0
   140006205:	lea    rdx,[rip+0xffffffffffffd98c]        # 0x140003b98
   14000620c:	xor    ecx,ecx
   14000620e:	call   0x1400067e0
   140006213:	jmp    0x14000622d
   140006215:	xor    edi,edi
   140006217:	lea    r8,[rip+0xffffffffffffd8d2]        # 0x140003af0
   14000621e:	lea    rdx,[rip+0xffffffffffffd9a3]        # 0x140003bc8
   140006225:	lea    ecx,[rdi+0x2]
   140006228:	call   0x1400067e0
   14000622d:	mov    eax,edi
   14000622f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006234:	add    rsp,0x20
   140006238:	pop    rdi
   140006239:	ret    
   14000623a:	int3   
   14000623b:	int3   
   14000623c:	int3   
   14000623d:	int3   
   14000623e:	int3   
   14000623f:	int3   
   140006240:	mov    QWORD PTR [rsp+0x8],rbx
   140006245:	mov    QWORD PTR [rsp+0x10],rbp
   14000624a:	mov    QWORD PTR [rsp+0x18],rsi
   14000624f:	push   rdi
   140006250:	push   r12
   140006252:	push   r13
   140006254:	push   r14
   140006256:	push   r15
   140006258:	sub    rsp,0x40
   14000625c:	mov    rdi,rdx
   14000625f:	mov    esi,ecx
   140006261:	or     ebp,0xffffffff
   140006264:	lea    r12d,[rbp+0x2]
   140006268:	xor    r9d,r9d
   14000626b:	xor    r8d,r8d
   14000626e:	mov    edx,r12d
   140006271:	xor    ecx,ecx
   140006273:	call   QWORD PTR [rip+0x10217]        # 0x140016490
   140006279:	lea    rcx,[rip+0xffffffffffffd450]        # 0x1400036d0
   140006280:	call   0x140007170
   140006285:	lea    rcx,[rip+0xffffffffffffd4d4]        # 0x140003760
   14000628c:	call   0x140007170
   140006291:	or     DWORD PTR [rip+0xd138],0xffffffff        # 0x1400133d0
   140006298:	xor    r14d,r14d
   14000629b:	mov    WORD PTR [rip+0xd131],r14w        # 0x1400133d4
   1400062a3:	mov    WORD PTR [rip+0xd32b],r14w        # 0x1400135d6
   1400062ab:	call   0x1400065e4
   1400062b0:	mov    rbx,rax
   1400062b3:	test   rax,rax
   1400062b6:	je     0x1400062f9
   1400062b8:	mov    QWORD PTR [rsp+0x30],r14
   1400062bd:	xor    r9d,r9d
   1400062c0:	mov    r8d,r12d
   1400062c3:	mov    edx,0x40000000
   1400062c8:	mov    rcx,rax
   1400062cb:	mov    DWORD PTR [rsp+0x28],0x80
   1400062d3:	mov    DWORD PTR [rsp+0x20],r12d
   1400062d8:	call   QWORD PTR [rip+0x101da]        # 0x1400164b8
   1400062de:	mov    QWORD PTR [rip+0xc1cb],rax        # 0x1400124b0
   1400062e5:	call   QWORD PTR [rip+0x1015d]        # 0x140016448
   1400062eb:	mov    r8,rbx
   1400062ee:	mov    rcx,rax
   1400062f1:	xor    edx,edx
   1400062f3:	call   QWORD PTR [rip+0x10147]        # 0x140016440
   1400062f9:	lea    r13,[rip+0xffffffffffffd8f8]        # 0x140003bf8
   140006300:	mov    r15d,0x2
   140006306:	lea    rdx,[rip+0xffffffffffffd8f3]        # 0x140003c00
   14000630d:	mov    r8,r13
   140006310:	mov    ecx,r15d
   140006313:	call   0x1400067e0
   140006318:	cmp    esi,r12d
   14000631b:	je     0x140006590
   140006321:	mov    ecx,DWORD PTR [rip+0xd4b1]        # 0x1400137d8
   140006327:	mov    ebx,r14d
   14000632a:	test   esi,esi
   14000632c:	jle    0x14000649a
   140006332:	lea    r9,[rip+0xd09b]        # 0x1400133d4
   140006339:	lea    r10,[rip+0xd296]        # 0x1400135d6
   140006340:	test   ebx,ebx
   140006342:	jne    0x140006394
   140006344:	mov    rcx,QWORD PTR [rdi]
   140006347:	lea    rdx,[rip+0xffffffffffffd48a]        # 0x1400037d8
   14000634e:	call   0x140006d68
   140006353:	test   eax,eax
   140006355:	jne    0x140006365
   140006357:	mov    ecx,r14d
   14000635a:	mov    DWORD PTR [rip+0xd478],ecx        # 0x1400137d8
   140006360:	jmp    0x14000647d
   140006365:	mov    rcx,QWORD PTR [rdi]
   140006368:	lea    rdx,[rip+0xffffffffffffd479]        # 0x1400037e8
   14000636f:	call   0x140006d68
   140006374:	test   eax,eax
   140006376:	jne    0x14000637d
   140006378:	mov    ecx,r12d
   14000637b:	jmp    0x14000635a
   14000637d:	mov    ecx,r15d
   140006380:	lea    r9,[rip+0xd04d]        # 0x1400133d4
   140006387:	lea    r10,[rip+0xd248]        # 0x1400135d6
   14000638e:	mov    DWORD PTR [rip+0xd444],ecx        # 0x1400137d8
   140006394:	mov    rax,QWORD PTR [rdi]
   140006397:	cmp    WORD PTR [rax],0x2d
   14000639b:	je     0x1400063a7
   14000639d:	cmp    WORD PTR [rax],0x2f
   1400063a1:	jne    0x14000647d
   1400063a7:	movzx  eax,WORD PTR [rax+0x2]
   1400063ab:	cmp    eax,0x3f
   1400063ae:	je     0x140006590
   1400063b4:	cmp    eax,0x50
   1400063b7:	je     0x140006431
   1400063b9:	cmp    eax,0x53
   1400063bc:	je     0x140006416
   1400063be:	cmp    eax,0x55
   1400063c1:	je     0x1400063d6
   1400063c3:	cmp    eax,0x70
   1400063c6:	je     0x140006431
   1400063c8:	cmp    eax,0x73
   1400063cb:	je     0x140006416
   1400063cd:	cmp    eax,0x75
   1400063d0:	jne    0x14000647d
   1400063d6:	add    ebx,r12d
   1400063d9:	add    rdi,0x8
   1400063dd:	cmp    ebx,esi
   1400063df:	jge    0x14000649a
   1400063e5:	mov    r8,QWORD PTR [rdi]
   1400063e8:	mov    edx,0x101
   1400063ed:	mov    rcx,r9
   1400063f0:	sub    r8,r9
   1400063f3:	lea    rax,[rdx+0x7ffffefd]
   1400063fa:	test   rax,rax
   1400063fd:	je     0x14000646b
   1400063ff:	movzx  eax,WORD PTR [r8+rcx*1]
   140006404:	test   ax,ax
   140006407:	je     0x14000646b
   140006409:	mov    WORD PTR [rcx],ax
   14000640c:	add    rcx,r15
   14000640f:	sub    rdx,r12
   140006412:	jne    0x1400063f3
   140006414:	jmp    0x14000646b
   140006416:	add    ebx,r12d
   140006419:	add    rdi,0x8
   14000641d:	cmp    ebx,esi
   14000641f:	jge    0x14000649a
   140006421:	mov    rcx,QWORD PTR [rdi]
   140006424:	call   0x14000721c
   140006429:	mov    DWORD PTR [rip+0xcfa1],eax        # 0x1400133d0
   14000642f:	jmp    0x140006477
   140006431:	add    ebx,r12d
   140006434:	add    rdi,0x8
   140006438:	cmp    ebx,esi
   14000643a:	jge    0x14000649a
   14000643c:	mov    r8,QWORD PTR [rdi]
   14000643f:	mov    edx,0x101
   140006444:	mov    rcx,r10
   140006447:	sub    r8,r10
   14000644a:	lea    rax,[rdx+0x7ffffefd]
   140006451:	test   rax,rax
   140006454:	je     0x14000646b
   140006456:	movzx  eax,WORD PTR [r8+rcx*1]
   14000645b:	test   ax,ax
   14000645e:	je     0x14000646b
   140006460:	mov    WORD PTR [rcx],ax
   140006463:	add    rcx,r15
   140006466:	sub    rdx,r12
   140006469:	jne    0x14000644a
   14000646b:	test   rdx,rdx
   14000646e:	jne    0x140006473
   140006470:	sub    rcx,r15
   140006473:	mov    WORD PTR [rcx],r14w
   140006477:	mov    ecx,DWORD PTR [rip+0xd35b]        # 0x1400137d8
   14000647d:	add    ebx,r12d
   140006480:	add    rdi,0x8
   140006484:	lea    r9,[rip+0xcf49]        # 0x1400133d4
   14000648b:	lea    r10,[rip+0xd144]        # 0x1400135d6
   140006492:	cmp    ebx,esi
   140006494:	jl     0x140006340
   14000649a:	cmp    ecx,r15d
   14000649d:	jne    0x1400064a8
   14000649f:	lea    rdx,[rip+0xffffffffffffd362]        # 0x140003808
   1400064a6:	jmp    0x1400064d4
   1400064a8:	cmp    ecx,r12d
   1400064ab:	jne    0x1400064c0
   1400064ad:	cmp    WORD PTR [rip+0xcf1f],r14w        # 0x1400133d4
   1400064b5:	jne    0x1400064f8
   1400064b7:	lea    rdx,[rip+0xffffffffffffd36a]        # 0x140003828
   1400064be:	jmp    0x1400064d4
   1400064c0:	test   ecx,ecx
   1400064c2:	jne    0x1400064fc
   1400064c4:	cmp    DWORD PTR [rip+0xcf05],0xffffffff        # 0x1400133d0
   1400064cb:	jne    0x1400064f8
   1400064cd:	lea    rdx,[rip+0xffffffffffffd374]        # 0x140003848
   1400064d4:	lea    r8,[rip+0xffffffffffffd31d]        # 0x1400037f8
   1400064db:	xor    ecx,ecx
   1400064dd:	call   0x1400067e0
   1400064e2:	mov    r8,r13
   1400064e5:	lea    rdx,[rip+0xffffffffffffd75c]        # 0x140003c48
   1400064ec:	xor    ecx,ecx
   1400064ee:	call   0x1400067e0
   1400064f3:	jmp    0x1400065a2
   1400064f8:	test   ecx,ecx
   1400064fa:	je     0x140006575
   1400064fc:	mov    r8,r13
   1400064ff:	dec    ecx
   140006501:	je     0x14000650c
   140006503:	lea    rdx,[rip+0xffffffffffffd7b6]        # 0x140003cc0
   14000650a:	jmp    0x1400064ec
   14000650c:	lea    rdx,[rip+0xffffffffffffd765]        # 0x140003c78
   140006513:	mov    ecx,r15d
   140006516:	call   0x1400067e0
   14000651b:	lea    rdi,[rip+0xffffffffffffd52e]        # 0x140003a50
   140006522:	lea    rdx,[rip+0xffffffffffffd53f]        # 0x140003a68
   140006529:	mov    r8,rdi
   14000652c:	mov    ecx,r15d
   14000652f:	or     ebp,0xffffffff
   140006532:	call   0x1400067e0
   140006537:	call   0x140005e64
   14000653c:	mov    ebx,eax
   14000653e:	test   eax,eax
   140006540:	jns    0x140006558
   140006542:	lea    rdx,[rip+0xffffffffffffd547]        # 0x140003a90
   140006549:	mov    r9d,eax
   14000654c:	mov    r8,rdi
   14000654f:	xor    ecx,ecx
   140006551:	call   0x1400067e0
   140006556:	jmp    0x14000655b
   140006558:	mov    ebp,r14d
   14000655b:	test   ebx,ebx
   14000655d:	jns    0x1400065a2
   14000655f:	lea    rdx,[rip+0xffffffffffffd552]        # 0x140003ab8
   140006566:	mov    r9d,ebx
   140006569:	mov    r8,rdi
   14000656c:	xor    ecx,ecx
   14000656e:	call   0x1400067e0
   140006573:	jmp    0x1400065a2
   140006575:	lea    rdx,[rip+0xffffffffffffd71c]        # 0x140003c98
   14000657c:	mov    r8,r13
   14000657f:	mov    ecx,r15d
   140006582:	call   0x1400067e0
   140006587:	call   0x140006170
   14000658c:	mov    ebp,eax
   14000658e:	jmp    0x1400065a2
   140006590:	lea    rdx,[rip+0xffffffffffffd689]        # 0x140003c20
   140006597:	mov    r8,r13
   14000659a:	mov    ecx,r15d
   14000659d:	call   0x1400067e0
   1400065a2:	mov    rcx,QWORD PTR [rip+0xbf07]        # 0x1400124b0
   1400065a9:	cmp    rcx,0xffffffffffffffff
   1400065ad:	je     0x1400065bd
   1400065af:	call   QWORD PTR [rip+0xfefb]        # 0x1400164b0
   1400065b5:	or     QWORD PTR [rip+0xbef3],0xffffffffffffffff        # 0x1400124b0
   1400065bd:	lea    r11,[rsp+0x40]
   1400065c2:	mov    eax,ebp
   1400065c4:	mov    rbx,QWORD PTR [r11+0x30]
   1400065c8:	mov    rbp,QWORD PTR [r11+0x38]
   1400065cc:	mov    rsi,QWORD PTR [r11+0x40]
   1400065d0:	mov    rsp,r11
   1400065d3:	pop    r15
   1400065d5:	pop    r14
   1400065d7:	pop    r13
   1400065d9:	pop    r12
   1400065db:	pop    rdi
   1400065dc:	ret    
   1400065dd:	int3   
   1400065de:	int3   
   1400065df:	int3   
   1400065e0:	int3   
   1400065e1:	int3   
   1400065e2:	int3   
   1400065e3:	int3   
   1400065e4:	mov    rax,rsp
   1400065e7:	mov    QWORD PTR [rax+0x8],rbx
   1400065eb:	mov    QWORD PTR [rax+0x10],rsi
   1400065ef:	mov    QWORD PTR [rax+0x18],rdi
   1400065f3:	push   rbp
   1400065f4:	lea    rbp,[rax-0x5b8]
   1400065fb:	sub    rsp,0x6b0
   140006602:	mov    rax,QWORD PTR [rip+0xab67]        # 0x140011170
   140006609:	xor    rax,rsp
   14000660c:	mov    QWORD PTR [rbp+0x5a0],rax
   140006613:	xor    eax,eax
   140006615:	xor    esi,esi
   140006617:	lea    rdx,[rsp+0x70]
   14000661c:	mov    r8d,0x104
   140006622:	xor    ecx,ecx
   140006624:	mov    ebx,esi
   140006626:	mov    WORD PTR [rsp+0x50],si
   14000662b:	mov    QWORD PTR [rsp+0x52],rax
   140006630:	mov    DWORD PTR [rsp+0x5a],eax
   140006634:	mov    WORD PTR [rsp+0x5e],ax
   140006639:	mov    WORD PTR [rsp+0x60],si
   14000663e:	mov    QWORD PTR [rsp+0x62],rax
   140006643:	mov    DWORD PTR [rsp+0x6a],eax
   140006647:	mov    WORD PTR [rsp+0x6e],ax
   14000664c:	mov    WORD PTR [rbp+0x176],si
   140006653:	call   QWORD PTR [rip+0xff97]        # 0x1400165f0
   140006659:	cmp    WORD PTR [rbp+0x176],si
   140006660:	jne    0x1400067ad
   140006666:	test   eax,eax
   140006668:	je     0x1400067ad
   14000666e:	lea    rcx,[rsp+0x70]
   140006673:	call   QWORD PTR [rip+0x10057]        # 0x1400166d0
   140006679:	lea    rdx,[rbp+0x390]
   140006680:	lea    rcx,[rip+0xffffffffffffd661]        # 0x140003ce8
   140006687:	mov    r8d,0x104
   14000668d:	mov    rdi,rax
   140006690:	call   QWORD PTR [rip+0xfe12]        # 0x1400164a8
   140006696:	test   eax,eax
   140006698:	je     0x1400067ad
   14000669e:	lea    rcx,[rsp+0x60]
   1400066a3:	call   QWORD PTR [rip+0xfdf7]        # 0x1400164a0
   1400066a9:	lea    r8,[rsp+0x50]
   1400066ae:	lea    rdx,[rsp+0x60]
   1400066b3:	xor    ecx,ecx
   1400066b5:	call   QWORD PTR [rip+0xfddd]        # 0x140016498
   1400066bb:	movzx  ecx,WORD PTR [rsp+0x58]
   1400066c0:	movzx  r8d,WORD PTR [rsp+0x50]
   1400066c6:	movzx  r9d,WORD PTR [rsp+0x56]
   1400066cc:	movzx  r11d,WORD PTR [rsp+0x5c]
   1400066d2:	movzx  eax,WORD PTR [rsp+0x5a]
   1400066d7:	movzx  r10d,WORD PTR [rsp+0x52]
   1400066dd:	mov    DWORD PTR [rsp+0x48],r11d
   1400066e2:	mov    DWORD PTR [rsp+0x40],eax
   1400066e6:	mov    DWORD PTR [rsp+0x38],ecx
   1400066ea:	mov    DWORD PTR [rsp+0x30],r8d
   1400066ef:	mov    DWORD PTR [rsp+0x28],r9d
   1400066f4:	lea    r8,[rip+0xffffffffffffd615]        # 0x140003d10
   1400066fb:	lea    rcx,[rbp+0x180]
   140006702:	mov    r9,rdi
   140006705:	mov    edx,0x104
   14000670a:	mov    DWORD PTR [rsp+0x20],r10d
   14000670f:	call   0x140005de8
   140006714:	test   eax,eax
   140006716:	js     0x1400067ad
   14000671c:	or     rcx,0xffffffffffffffff
   140006720:	lea    rdx,[rbp+0x180]
   140006727:	mov    rax,rcx
   14000672a:	inc    rax
   14000672d:	cmp    WORD PTR [rdx+rax*2],si
   140006731:	jne    0x14000672a
   140006733:	lea    rdx,[rbp+0x390]
   14000673a:	inc    rcx
   14000673d:	cmp    WORD PTR [rdx+rcx*2],si
   140006741:	jne    0x14000673a
   140006743:	add    rax,rcx
   140006746:	lea    rdi,[rax*2+0x4]
   14000674e:	call   QWORD PTR [rip+0xfcf4]        # 0x140016448
   140006754:	mov    r8,rdi
   140006757:	mov    rcx,rax
   14000675a:	mov    edx,0x8
   14000675f:	call   QWORD PTR [rip+0xfceb]        # 0x140016450
   140006765:	mov    rbx,rax
   140006768:	test   rax,rax
   14000676b:	je     0x1400067ad
   14000676d:	lea    rax,[rbp+0x180]
   140006774:	lea    r9,[rbp+0x390]
   14000677b:	lea    r8,[rip+0xffffffffffffcc6e]        # 0x1400033f0
   140006782:	mov    rdx,rdi
   140006785:	mov    rcx,rbx
   140006788:	mov    QWORD PTR [rsp+0x20],rax
   14000678d:	call   0x140006a7c
   140006792:	test   eax,eax
   140006794:	jns    0x1400067ad
   140006796:	call   QWORD PTR [rip+0xfcac]        # 0x140016448
   14000679c:	mov    r8,rbx
   14000679f:	xor    edx,edx
   1400067a1:	mov    rcx,rax
   1400067a4:	call   QWORD PTR [rip+0xfc96]        # 0x140016440
   1400067aa:	mov    rbx,rsi
   1400067ad:	mov    rax,rbx
   1400067b0:	mov    rcx,QWORD PTR [rbp+0x5a0]
   1400067b7:	xor    rcx,rsp
   1400067ba:	call   0x140006d40
   1400067bf:	lea    r11,[rsp+0x6b0]
   1400067c7:	mov    rbx,QWORD PTR [r11+0x10]
   1400067cb:	mov    rsi,QWORD PTR [r11+0x18]
   1400067cf:	mov    rdi,QWORD PTR [r11+0x20]
   1400067d3:	mov    rsp,r11
   1400067d6:	pop    rbp
   1400067d7:	ret    
   1400067d8:	int3   
   1400067d9:	int3   
   1400067da:	int3   
   1400067db:	int3   
   1400067dc:	int3   
   1400067dd:	int3   
   1400067de:	int3   
   1400067df:	int3   
   1400067e0:	mov    rax,rsp
   1400067e3:	mov    QWORD PTR [rax+0x10],rdx
   1400067e7:	mov    QWORD PTR [rax+0x18],r8
   1400067eb:	mov    QWORD PTR [rax+0x20],r9
   1400067ef:	push   rbp
   1400067f0:	push   rbx
   1400067f1:	push   rsi
   1400067f2:	push   rdi
   1400067f3:	push   r14
   1400067f5:	lea    rbp,[rax-0x7f8]
   1400067fc:	sub    rsp,0x8d0
   140006803:	mov    rax,QWORD PTR [rip+0xa966]        # 0x140011170
   14000680a:	xor    rax,rsp
   14000680d:	mov    QWORD PTR [rbp+0x7c0],rax
   140006814:	xor    eax,eax
   140006816:	xor    esi,esi
   140006818:	or     rdi,0xffffffffffffffff
   14000681c:	cmp    QWORD PTR [rip+0xbc8d],rdi        # 0x1400124b0
   140006823:	mov    ebx,ecx
   140006825:	mov    WORD PTR [rsp+0x58],si
   14000682a:	mov    QWORD PTR [rsp+0x5a],rax
   14000682f:	mov    DWORD PTR [rsp+0x62],eax
   140006833:	mov    WORD PTR [rsp+0x66],ax
   140006838:	mov    WORD PTR [rsp+0x68],si
   14000683d:	mov    QWORD PTR [rsp+0x6a],rax
   140006842:	mov    DWORD PTR [rsp+0x72],eax
   140006846:	mov    WORD PTR [rsp+0x76],ax
   14000684b:	je     0x1400069e5
   140006851:	mov    r8,rdx
   140006854:	mov    r14d,0x7fc
   14000685a:	lea    r9,[rbp+0x810]
   140006861:	lea    rcx,[rbp-0x40]
   140006865:	mov    edx,r14d
   140006868:	call   0x14000f950
   14000686d:	test   eax,eax
   14000686f:	js     0x1400069e5
   140006875:	movsxd rcx,eax
   140006878:	cmp    rcx,r14
   14000687b:	ja     0x1400069e5
   140006881:	movzx  eax,BYTE PTR [rbp+0x7bc]
   140006888:	mov    rcx,rdi
   14000688b:	cmove  eax,esi
   14000688e:	mov    BYTE PTR [rbp+0x7bc],al
   140006894:	lea    rax,[rbp-0x40]
   140006898:	inc    rcx
   14000689b:	cmp    BYTE PTR [rax+rcx*1],sil
   14000689f:	jne    0x140006898
   1400068a1:	lea    rax,[rcx-0x2]
   1400068a5:	cmp    rax,0x7fa
   1400068ab:	ja     0x1400068c6
   1400068ad:	mov    WORD PTR [rbp+rcx*1-0x40],0xa0d
   1400068b4:	add    rcx,0x2
   1400068b8:	cmp    rcx,0x800
   1400068bf:	jae    0x1400068db
   1400068c1:	mov    BYTE PTR [rbp+rcx*1-0x40],sil
   1400068c6:	test   ebx,ebx
   1400068c8:	je     0x1400068f5
   1400068ca:	dec    ebx
   1400068cc:	je     0x1400068ec
   1400068ce:	dec    ebx
   1400068d0:	je     0x1400068e3
   1400068d2:	lea    rbx,[rip+0xffffffffffffd4b7]        # 0x140003d90
   1400068d9:	jmp    0x1400068fc
   1400068db:	xor    ecx,ecx
   1400068dd:	call   0x1400087a8
   1400068e2:	int3   
   1400068e3:	lea    rbx,[rip+0xffffffffffffd496]        # 0x140003d80
   1400068ea:	jmp    0x1400068fc
   1400068ec:	lea    rbx,[rip+0xffffffffffffd47d]        # 0x140003d70
   1400068f3:	jmp    0x1400068fc
   1400068f5:	lea    rbx,[rip+0xffffffffffffd464]        # 0x140003d60
   1400068fc:	lea    rcx,[rsp+0x68]
   140006901:	call   QWORD PTR [rip+0xfb99]        # 0x1400164a0
   140006907:	lea    r8,[rsp+0x58]
   14000690c:	lea    rdx,[rsp+0x68]
   140006911:	xor    ecx,ecx
   140006913:	call   QWORD PTR [rip+0xfb7f]        # 0x140016498
   140006919:	movzx  ecx,WORD PTR [rsp+0x60]
   14000691e:	movzx  edx,WORD PTR [rsp+0x58]
   140006923:	movzx  r8d,WORD PTR [rsp+0x5e]
   140006929:	movzx  r11d,WORD PTR [rsp+0x64]
   14000692f:	movzx  eax,WORD PTR [rsp+0x62]
   140006934:	movzx  r9d,WORD PTR [rsp+0x5a]
   14000693a:	mov    DWORD PTR [rsp+0x40],r11d
   14000693f:	mov    DWORD PTR [rsp+0x38],eax
   140006943:	mov    DWORD PTR [rsp+0x30],ecx
   140006947:	mov    DWORD PTR [rsp+0x28],edx
   14000694b:	mov    DWORD PTR [rsp+0x20],r8d
   140006950:	lea    r8,[rip+0xffffffffffffd449]        # 0x140003da0
   140006957:	lea    rcx,[rbp-0x80]
   14000695b:	mov    edx,0x40
   140006960:	call   0x140006a08
   140006965:	test   eax,eax
   140006967:	js     0x1400069e5
   140006969:	lea    rax,[rbp-0x80]
   14000696d:	mov    r8,rdi
   140006970:	inc    r8
   140006973:	cmp    BYTE PTR [rax+r8*1],sil
   140006977:	jne    0x140006970
   140006979:	mov    rcx,QWORD PTR [rip+0xbb30]        # 0x1400124b0
   140006980:	lea    r9,[rsp+0x50]
   140006985:	lea    rdx,[rbp-0x80]
   140006989:	mov    QWORD PTR [rsp+0x20],rsi
   14000698e:	call   QWORD PTR [rip+0xfc24]        # 0x1400165b8
   140006994:	mov    r8,rdi
   140006997:	inc    r8
   14000699a:	cmp    BYTE PTR [rbx+r8*1],sil
   14000699e:	jne    0x140006997
   1400069a0:	mov    rcx,QWORD PTR [rip+0xbb09]        # 0x1400124b0
   1400069a7:	lea    r9,[rsp+0x50]
   1400069ac:	mov    rdx,rbx
   1400069af:	mov    QWORD PTR [rsp+0x20],rsi
   1400069b4:	call   QWORD PTR [rip+0xfbfe]        # 0x1400165b8
   1400069ba:	lea    r11,[rbp-0x40]
   1400069be:	inc    rdi
   1400069c1:	cmp    BYTE PTR [r11+rdi*1],sil
   1400069c5:	jne    0x1400069be
   1400069c7:	mov    rcx,QWORD PTR [rip+0xbae2]        # 0x1400124b0
   1400069ce:	lea    r9,[rsp+0x50]
   1400069d3:	lea    rdx,[rbp-0x40]
   1400069d7:	mov    r8,rdi
   1400069da:	mov    QWORD PTR [rsp+0x20],rsi
   1400069df:	call   QWORD PTR [rip+0xfbd3]        # 0x1400165b8
   1400069e5:	mov    rcx,QWORD PTR [rbp+0x7c0]
   1400069ec:	xor    rcx,rsp
   1400069ef:	call   0x140006d40
   1400069f4:	add    rsp,0x8d0
   1400069fb:	pop    r14
   1400069fd:	pop    rdi
   1400069fe:	pop    rsi
   1400069ff:	pop    rbx
   140006a00:	pop    rbp
   140006a01:	ret    
   140006a02:	int3   
   140006a03:	int3   
   140006a04:	int3   
   140006a05:	int3   
   140006a06:	int3   
   140006a07:	int3   
   140006a08:	mov    QWORD PTR [rsp+0x18],r8
   140006a0d:	mov    QWORD PTR [rsp+0x20],r9
   140006a12:	push   rbx
   140006a13:	push   rsi
   140006a14:	push   rdi
   140006a15:	sub    rsp,0x20
   140006a19:	xor    ebx,ebx
   140006a1b:	mov    rsi,rcx
   140006a1e:	test   rdx,rdx
   140006a21:	je     0x140006a2c
   140006a23:	cmp    rdx,0x7fffffff
   140006a2a:	jbe    0x140006a31
   140006a2c:	mov    ebx,0x80070057
   140006a31:	test   ebx,ebx
   140006a33:	js     0x140006a64
   140006a35:	lea    rdi,[rdx-0x1]
   140006a39:	lea    r9,[rsp+0x58]
   140006a3e:	xor    ebx,ebx
   140006a40:	mov    rdx,rdi
   140006a43:	call   0x14000f950
   140006a48:	test   eax,eax
   140006a4a:	js     0x140006a5a
   140006a4c:	cdqe   
   140006a4e:	cmp    rax,rdi
   140006a51:	ja     0x140006a5a
   140006a53:	jne    0x140006a6c
   140006a55:	mov    BYTE PTR [rdi+rsi*1],bl
   140006a58:	jmp    0x140006a6c
   140006a5a:	mov    BYTE PTR [rdi+rsi*1],bl
   140006a5d:	mov    ebx,0x8007007a
   140006a62:	jmp    0x140006a6c
   140006a64:	test   rdx,rdx
   140006a67:	je     0x140006a6c
   140006a69:	mov    BYTE PTR [rcx],0x0
   140006a6c:	mov    eax,ebx
   140006a6e:	add    rsp,0x20
   140006a72:	pop    rdi
   140006a73:	pop    rsi
   140006a74:	pop    rbx
   140006a75:	ret    
   140006a76:	int3   
   140006a77:	int3   
   140006a78:	int3   
   140006a79:	int3   
   140006a7a:	int3   
   140006a7b:	int3   
   140006a7c:	mov    QWORD PTR [rsp+0x18],r8
   140006a81:	mov    QWORD PTR [rsp+0x20],r9
   140006a86:	push   rbx
   140006a87:	push   rbp
   140006a88:	push   rsi
   140006a89:	push   rdi
   140006a8a:	sub    rsp,0x28
   140006a8e:	shr    rdx,1
   140006a91:	mov    ebp,0x0
   140006a96:	mov    rsi,rcx
   140006a99:	mov    ebx,ebp
   140006a9b:	je     0x140006aa6
   140006a9d:	cmp    rdx,0x7fffffff
   140006aa4:	jbe    0x140006aab
   140006aa6:	mov    ebx,0x80070057
   140006aab:	test   ebx,ebx
   140006aad:	js     0x140006ae0
   140006aaf:	lea    rdi,[rdx-0x1]
   140006ab3:	lea    r9,[rsp+0x68]
   140006ab8:	mov    ebx,ebp
   140006aba:	mov    rdx,rdi
   140006abd:	call   0x14000706c
   140006ac2:	test   eax,eax
   140006ac4:	js     0x140006ad5
   140006ac6:	cdqe   
   140006ac8:	cmp    rax,rdi
   140006acb:	ja     0x140006ad5
   140006acd:	jne    0x140006ae8
   140006acf:	mov    WORD PTR [rsi+rdi*2],bp
   140006ad3:	jmp    0x140006ae8
   140006ad5:	mov    WORD PTR [rsi+rdi*2],bp
   140006ad9:	mov    ebx,0x8007007a
   140006ade:	jmp    0x140006ae8
   140006ae0:	test   rdx,rdx
   140006ae3:	je     0x140006ae8
   140006ae5:	mov    WORD PTR [rcx],bp
   140006ae8:	mov    eax,ebx
   140006aea:	add    rsp,0x28
   140006aee:	pop    rdi
   140006aef:	pop    rsi
   140006af0:	pop    rbp
   140006af1:	pop    rbx
   140006af2:	ret    
   140006af3:	int3   
   140006af4:	int3   
   140006af5:	int3   
   140006af6:	int3   
   140006af7:	int3   
   140006af8:	int3   
   140006af9:	int3   
   140006afa:	int3   
   140006afb:	int3   
   140006afc:	mov    QWORD PTR [rsp+0x8],rbx
   140006b01:	push   rdi
   140006b02:	sub    rsp,0x160
   140006b09:	mov    rax,QWORD PTR [rip+0xa660]        # 0x140011170
   140006b10:	xor    rax,rsp
   140006b13:	mov    QWORD PTR [rsp+0x150],rax
   140006b1b:	mov    DWORD PTR [rsp+0x30],0x114
   140006b23:	lea    rcx,[rsp+0x30]
   140006b28:	call   QWORD PTR [rip+0xfa1a]        # 0x140016548
   140006b2e:	test   eax,eax
   140006b30:	jne    0x140006b3c
   140006b32:	mov    eax,0xff
   140006b37:	jmp    0x140006ce7
   140006b3c:	mov    r8d,DWORD PTR [rsp+0x3c]
   140006b41:	and    r8d,0x7fff
   140006b48:	mov    r9d,DWORD PTR [rsp+0x40]
   140006b4d:	cmp    r9d,0x2
   140006b51:	je     0x140006b58
   140006b53:	bts    r8d,0xf
   140006b58:	mov    edx,DWORD PTR [rsp+0x34]
   140006b5c:	mov    ecx,edx
   140006b5e:	shl    ecx,0x8
   140006b61:	mov    eax,DWORD PTR [rsp+0x38]
   140006b65:	add    ecx,eax
   140006b67:	mov    DWORD PTR [rip+0xb9a2],r9d        # 0x140012510
   140006b6e:	mov    DWORD PTR [rip+0xb9a4],ecx        # 0x140012518
   140006b74:	mov    DWORD PTR [rip+0xb9a2],edx        # 0x14001251c
   140006b7a:	mov    DWORD PTR [rip+0xb9a0],eax        # 0x140012520
   140006b80:	mov    DWORD PTR [rip+0xb98d],r8d        # 0x140012514
   140006b87:	mov    eax,0x5a4d
   140006b8c:	cmp    WORD PTR [rip+0xffffffffffff946d],ax        # 0x140000000
   140006b93:	jne    0x140006bcf
   140006b95:	movsxd rax,DWORD PTR [rip+0xffffffffffff94a0]        # 0x14000003c
   140006b9c:	lea    rcx,[rip+0xffffffffffff945d]        # 0x140000000
   140006ba3:	add    rax,rcx
   140006ba6:	cmp    DWORD PTR [rax],0x4550
   140006bac:	jne    0x140006bcf
   140006bae:	mov    ecx,0x20b
   140006bb3:	cmp    WORD PTR [rax+0x18],cx
   140006bb7:	jne    0x140006bcf
   140006bb9:	xor    ebx,ebx
   140006bbb:	cmp    DWORD PTR [rax+0x84],0xe
   140006bc2:	jbe    0x140006bd1
   140006bc4:	cmp    DWORD PTR [rax+0xf8],ebx
   140006bca:	setne  bl
   140006bcd:	jmp    0x140006bd1
   140006bcf:	xor    ebx,ebx
   140006bd1:	mov    DWORD PTR [rsp+0x20],ebx
   140006bd5:	mov    edi,0x1
   140006bda:	mov    ecx,edi
   140006bdc:	call   0x140007e4c
   140006be1:	test   eax,eax
   140006be3:	jne    0x140006c07
   140006be5:	cmp    DWORD PTR [rip+0xb8e4],0x2        # 0x1400124d0
   140006bec:	je     0x140006bf3
   140006bee:	call   0x140007c34
   140006bf3:	mov    ecx,0x1c
   140006bf8:	call   0x140007c80
   140006bfd:	mov    ecx,0xff
   140006c02:	call   0x140007880
   140006c07:	call   0x140007478
   140006c0c:	test   eax,eax
   140006c0e:	jne    0x140006c33
   140006c10:	cmp    DWORD PTR [rip+0xb8b9],0x2        # 0x1400124d0
   140006c17:	je     0x140006c1e
   140006c19:	call   0x140007c34
   140006c1e:	mov    ecx,0x10
   140006c23:	call   0x140007c80
   140006c28:	mov    ecx,0xff
   140006c2d:	call   0x140007880
   140006c32:	nop
   140006c33:	call   0x140007ec0
   140006c38:	test   eax,eax
   140006c3a:	jns    0x140006c46
   140006c3c:	mov    ecx,0x1b
   140006c41:	call   0x14000784c
   140006c46:	call   0x1400086fc
   140006c4b:	mov    QWORD PTR [rip+0xddfe],rax        # 0x140014a50
   140006c52:	call   0x140008670
   140006c57:	mov    QWORD PTR [rip+0xb86a],rax        # 0x1400124c8
   140006c5e:	call   0x140008168
   140006c63:	test   eax,eax
   140006c65:	jns    0x140006c71
   140006c67:	mov    ecx,0x8
   140006c6c:	call   0x14000784c
   140006c71:	call   0x140008448
   140006c76:	test   eax,eax
   140006c78:	jns    0x140006c84
   140006c7a:	mov    ecx,0x9
   140006c7f:	call   0x14000784c
   140006c84:	mov    ecx,edi
   140006c86:	call   0x1400078f4
   140006c8b:	test   eax,eax
   140006c8d:	je     0x140006c96
   140006c8f:	mov    ecx,eax
   140006c91:	call   0x14000784c
   140006c96:	mov    r8,QWORD PTR [rip+0xb85b]        # 0x1400124f8
   140006c9d:	mov    QWORD PTR [rip+0xb88c],r8        # 0x140012530
   140006ca4:	mov    rdx,QWORD PTR [rip+0xb83d]        # 0x1400124e8
   140006cab:	mov    ecx,DWORD PTR [rip+0xb82b]        # 0x1400124dc
   140006cb1:	call   0x140006240
   140006cb6:	mov    edi,eax
   140006cb8:	mov    DWORD PTR [rsp+0x24],eax
   140006cbc:	test   ebx,ebx
   140006cbe:	jne    0x140006cc7
   140006cc0:	mov    ecx,eax
   140006cc2:	call   0x140007a2c
   140006cc7:	call   0x140007a3c
   140006ccc:	jmp    0x140006ce5
   140006cce:	mov    edi,eax
   140006cd0:	cmp    DWORD PTR [rsp+0x20],0x0
   140006cd5:	jne    0x140006cdf
   140006cd7:	mov    ecx,eax
   140006cd9:	call   0x140007838
   140006cde:	int3   
   140006cdf:	call   0x140007a50
   140006ce4:	nop
   140006ce5:	mov    eax,edi
   140006ce7:	mov    rcx,QWORD PTR [rsp+0x150]
   140006cef:	xor    rcx,rsp
   140006cf2:	call   0x140006d40
   140006cf7:	mov    rbx,QWORD PTR [rsp+0x170]
   140006cff:	add    rsp,0x160
   140006d06:	pop    rdi
   140006d07:	ret    
   140006d08:	int3   
   140006d09:	int3   
   140006d0a:	int3   
   140006d0b:	int3   
   140006d0c:	int3   
   140006d0d:	int3   
   140006d0e:	int3   
   140006d0f:	int3   
   140006d10:	sub    rsp,0x28
   140006d14:	call   0x140008594
   140006d19:	add    rsp,0x28
   140006d1d:	jmp    0x140006afc
   140006d22:	int3   
   140006d23:	int3   
   140006d24:	int3   
   140006d25:	int3   
   140006d26:	int3   
   140006d27:	int3   
   140006d28:	int3   
   140006d29:	int3   
   140006d2a:	int3   
   140006d2b:	int3   
   140006d2c:	int3   
   140006d2d:	int3   
   140006d2e:	int3   
   140006d2f:	int3   
   140006d30:	int3   
   140006d31:	int3   
   140006d32:	int3   
   140006d33:	int3   
   140006d34:	int3   
   140006d35:	int3   
   140006d36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140006d40:	cmp    rcx,QWORD PTR [rip+0xa429]        # 0x140011170
   140006d47:	jne    0x140006d5b
   140006d49:	rol    rcx,0x10
   140006d4d:	test   cx,0xffff
   140006d52:	jne    0x140006d57
   140006d54:	ret    0x0
   140006d57:	ror    rcx,0x10
   140006d5b:	jmp    0x1400087a8
   140006d60:	int3   
   140006d61:	int3   
   140006d62:	int3   
   140006d63:	int3   
   140006d64:	int3   
   140006d65:	int3   
   140006d66:	int3   
   140006d67:	int3   
   140006d68:	rex push rbx
   140006d6a:	sub    rsp,0x30
   140006d6e:	xor    ebx,ebx
   140006d70:	mov    r9,rcx
   140006d73:	cmp    DWORD PTR [rip+0xc267],ebx        # 0x140012fe0
   140006d79:	jne    0x140006df6
   140006d7b:	test   rcx,rcx
   140006d7e:	jne    0x140006daa
   140006d80:	call   0x140009658
   140006d85:	xor    r9d,r9d
   140006d88:	xor    r8d,r8d
   140006d8b:	xor    edx,edx
   140006d8d:	xor    ecx,ecx
   140006d8f:	mov    QWORD PTR [rsp+0x20],rbx
   140006d94:	mov    DWORD PTR [rax],0x16
   140006d9a:	call   0x14000974c
   140006d9f:	mov    eax,0x7fffffff
   140006da4:	add    rsp,0x30
   140006da8:	pop    rbx
   140006da9:	ret    
   140006daa:	test   rdx,rdx
   140006dad:	je     0x140006d80
   140006daf:	sub    r9,rdx
   140006db2:	movzx  eax,WORD PTR [r9+rdx*1]
   140006db7:	cmp    ax,0x41
   140006dbb:	jb     0x140006dc7
   140006dbd:	cmp    ax,0x5a
   140006dc1:	ja     0x140006dc7
   140006dc3:	add    ax,0x20
   140006dc7:	movzx  ecx,WORD PTR [rdx]
   140006dca:	cmp    cx,0x41
   140006dce:	jb     0x140006dda
   140006dd0:	cmp    cx,0x5a
   140006dd4:	ja     0x140006dda
   140006dd6:	add    cx,0x20
   140006dda:	add    rdx,0x2
   140006dde:	test   ax,ax
   140006de1:	je     0x140006de8
   140006de3:	cmp    ax,cx
   140006de6:	je     0x140006db2
   140006de8:	movzx  ecx,cx
   140006deb:	movzx  eax,ax
   140006dee:	sub    eax,ecx
   140006df0:	add    rsp,0x30
   140006df4:	pop    rbx
   140006df5:	ret    
   140006df6:	xor    r8d,r8d
   140006df9:	add    rsp,0x30
   140006dfd:	pop    rbx
   140006dfe:	jmp    0x140006e0c
   140006e03:	int3   
   140006e04:	int3   
   140006e05:	int3   
   140006e06:	int3   
   140006e07:	int3   
   140006e08:	int3   
   140006e09:	int3   
   140006e0a:	int3   
   140006e0b:	int3   
   140006e0c:	mov    rax,rsp
   140006e0f:	mov    QWORD PTR [rax+0x8],rbx
   140006e13:	mov    QWORD PTR [rax+0x10],rbp
   140006e17:	mov    QWORD PTR [rax+0x18],rsi
   140006e1b:	push   rdi
   140006e1c:	sub    rsp,0x50
   140006e20:	mov    rsi,rcx
   140006e23:	mov    rdi,rdx
   140006e26:	lea    rcx,[rax-0x28]
   140006e2a:	mov    rdx,r8
   140006e2d:	call   0x140006f24
   140006e32:	xor    ebp,ebp
   140006e34:	test   rsi,rsi
   140006e37:	jne    0x140006e75
   140006e39:	call   0x140009658
   140006e3e:	xor    r9d,r9d
   140006e41:	xor    r8d,r8d
   140006e44:	xor    edx,edx
   140006e46:	xor    ecx,ecx
   140006e48:	mov    QWORD PTR [rsp+0x20],rbp
   140006e4d:	mov    DWORD PTR [rax],0x16
   140006e53:	call   0x14000974c
   140006e58:	cmp    BYTE PTR [rsp+0x48],bpl
   140006e5d:	je     0x140006e6b
   140006e5f:	mov    rax,QWORD PTR [rsp+0x40]
   140006e64:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140006e6b:	mov    eax,0x7fffffff
   140006e70:	jmp    0x140006f08
   140006e75:	test   rdi,rdi
   140006e78:	je     0x140006e39
   140006e7a:	mov    rax,QWORD PTR [rsp+0x30]
   140006e7f:	cmp    DWORD PTR [rax+0x14],ebp
   140006e82:	jne    0x140006ebe
   140006e84:	sub    rsi,rdi
   140006e87:	movzx  ebx,WORD PTR [rsi+rdi*1]
   140006e8b:	cmp    bx,0x41
   140006e8f:	jb     0x140006e9b
   140006e91:	cmp    bx,0x5a
   140006e95:	ja     0x140006e9b
   140006e97:	add    bx,0x20
   140006e9b:	movzx  eax,WORD PTR [rdi]
   140006e9e:	cmp    ax,0x41
   140006ea2:	jb     0x140006eae
   140006ea4:	cmp    ax,0x5a
   140006ea8:	ja     0x140006eae
   140006eaa:	add    ax,0x20
   140006eae:	add    rdi,0x2
   140006eb2:	test   bx,bx
   140006eb5:	je     0x140006eed
   140006eb7:	cmp    bx,ax
   140006eba:	je     0x140006e87
   140006ebc:	jmp    0x140006eed
   140006ebe:	movzx  ecx,WORD PTR [rsi]
   140006ec1:	lea    rdx,[rsp+0x30]
   140006ec6:	call   0x140009568
   140006ecb:	movzx  ecx,WORD PTR [rdi]
   140006ece:	lea    rdx,[rsp+0x30]
   140006ed3:	movzx  ebx,ax
   140006ed6:	add    rsi,0x2
   140006eda:	call   0x140009568
   140006edf:	add    rdi,0x2
   140006ee3:	test   bx,bx
   140006ee6:	je     0x140006eed
   140006ee8:	cmp    bx,ax
   140006eeb:	je     0x140006ebe
   140006eed:	movzx  ecx,ax
   140006ef0:	movzx  eax,bx
   140006ef3:	sub    eax,ecx
   140006ef5:	cmp    BYTE PTR [rsp+0x48],bpl
   140006efa:	je     0x140006f08
   140006efc:	mov    rcx,QWORD PTR [rsp+0x40]
   140006f01:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140006f08:	mov    rbx,QWORD PTR [rsp+0x60]
   140006f0d:	mov    rbp,QWORD PTR [rsp+0x68]
   140006f12:	mov    rsi,QWORD PTR [rsp+0x70]
   140006f17:	add    rsp,0x50
   140006f1b:	pop    rdi
   140006f1c:	ret    
   140006f1d:	int3   
   140006f1e:	int3   
   140006f1f:	int3   
   140006f20:	int3   
   140006f21:	int3   
   140006f22:	int3   
   140006f23:	int3   
   140006f24:	rex push rbx
   140006f26:	sub    rsp,0x20
   140006f2a:	and    QWORD PTR [rcx+0x10],0x0
   140006f2f:	mov    rbx,rcx
   140006f32:	mov    BYTE PTR [rcx+0x18],0x0
   140006f36:	test   rdx,rdx
   140006f39:	jne    0x140006fe9
   140006f3f:	call   0x140007588
   140006f44:	mov    QWORD PTR [rbx+0x10],rax
   140006f48:	test   rax,rax
   140006f4b:	je     0x140006fd2
   140006f51:	mov    rcx,QWORD PTR [rax+0xc0]
   140006f58:	mov    QWORD PTR [rbx],rcx
   140006f5b:	mov    rcx,QWORD PTR [rax+0xb8]
   140006f62:	mov    QWORD PTR [rbx+0x8],rcx
   140006f66:	mov    rcx,QWORD PTR [rip+0xa8db]        # 0x140011848
   140006f6d:	cmp    QWORD PTR [rbx],rcx
   140006f70:	je     0x140006f8c
   140006f72:	test   BYTE PTR [rax+0xc8],0x2
   140006f79:	jne    0x140006f8c
   140006f7b:	test   BYTE PTR [rip+0xaa3e],0x1        # 0x1400119c0
   140006f82:	je     0x140006f8c
   140006f84:	call   0x140008924
   140006f89:	mov    QWORD PTR [rbx],rax
   140006f8c:	mov    rax,QWORD PTR [rip+0xa405]        # 0x140011398
   140006f93:	cmp    QWORD PTR [rbx+0x8],rax
   140006f97:	je     0x140006fb8
   140006f99:	mov    rax,QWORD PTR [rbx+0x10]
   140006f9d:	test   BYTE PTR [rax+0xc8],0x2
   140006fa4:	jne    0x140006fb8
   140006fa6:	test   BYTE PTR [rip+0xaa13],0x1        # 0x1400119c0
   140006fad:	je     0x140006fb8
   140006faf:	call   0x140008cfc
   140006fb4:	mov    QWORD PTR [rbx+0x8],rax
   140006fb8:	mov    rax,QWORD PTR [rbx+0x10]
   140006fbc:	test   BYTE PTR [rax+0xc8],0x2
   140006fc3:	jne    0x140006ff0
   140006fc5:	or     DWORD PTR [rax+0xc8],0x2
   140006fcc:	mov    BYTE PTR [rbx+0x18],0x1
   140006fd0:	jmp    0x140006ff0
   140006fd2:	mov    rax,QWORD PTR [rip+0xa86f]        # 0x140011848
   140006fd9:	mov    QWORD PTR [rbx],rax
   140006fdc:	mov    rax,QWORD PTR [rip+0xa3b5]        # 0x140011398
   140006fe3:	mov    QWORD PTR [rbx+0x8],rax
   140006fe7:	jmp    0x140006ff0
   140006fe9:	movups xmm0,XMMWORD PTR [rdx]
   140006fec:	movdqu XMMWORD PTR [rcx],xmm0
   140006ff0:	mov    rax,rbx
   140006ff3:	add    rsp,0x20
   140006ff7:	pop    rbx
   140006ff8:	ret    
   140006ff9:	int3   
   140006ffa:	int3   
   140006ffb:	int3   
   140006ffc:	int3   
   140006ffd:	int3   
   140006ffe:	int3   
   140006fff:	int3   
   140007000:	xor    r11d,r11d
   140007003:	mov    r10,rdx
   140007006:	mov    r8,rcx
   140007009:	cmp    WORD PTR [rdx],r11w
   14000700d:	jne    0x140007013
   14000700f:	mov    rax,rcx
   140007012:	ret    
   140007013:	movzx  eax,WORD PTR [rcx]
   140007016:	test   ax,ax
   140007019:	je     0x14000705d
   14000701b:	mov    r9,rcx
   14000701e:	sub    r9,rdx
   140007021:	mov    rdx,r10
   140007024:	test   ax,ax
   140007027:	je     0x140007046
   140007029:	cmp    WORD PTR [rdx],r11w
   14000702d:	je     0x140007060
   14000702f:	movzx  ecx,WORD PTR [r9+rdx*1]
   140007034:	movzx  eax,WORD PTR [rdx]
   140007037:	cmp    ecx,eax
   140007039:	jne    0x140007046
   14000703b:	add    rdx,0x2
   14000703f:	cmp    WORD PTR [r9+rdx*1],r11w
   140007044:	jne    0x140007029
   140007046:	cmp    WORD PTR [rdx],r11w
   14000704a:	je     0x140007060
   14000704c:	add    r8,0x2
   140007050:	add    r9,0x2
   140007054:	movzx  eax,WORD PTR [r8]
   140007058:	test   ax,ax
   14000705b:	jne    0x140007021
   14000705d:	xor    eax,eax
   14000705f:	ret    
   140007060:	mov    rax,r8
   140007063:	ret    
   140007064:	int3   
   140007065:	int3   
   140007066:	int3   
   140007067:	int3   
   140007068:	int3   
   140007069:	int3   
   14000706a:	int3   
   14000706b:	int3   
   14000706c:	sub    rsp,0x38
   140007070:	mov    QWORD PTR [rsp+0x20],r9
   140007075:	xor    r9d,r9d
   140007078:	call   0x140007088
   14000707d:	add    rsp,0x38
   140007081:	ret    
   140007082:	int3   
   140007083:	int3   
   140007084:	int3   
   140007085:	int3   
   140007086:	int3   
   140007087:	int3   
   140007088:	mov    QWORD PTR [rsp+0x8],rbx
   14000708d:	mov    QWORD PTR [rsp+0x10],rdi
   140007092:	push   rbp
   140007093:	mov    rbp,rsp
   140007096:	sub    rsp,0x60
   14000709a:	mov    r11,r9
   14000709d:	mov    r10,r8
   1400070a0:	mov    rbx,rcx
   1400070a3:	test   r8,r8
   1400070a6:	jne    0x1400070d0
   1400070a8:	call   0x140009658
   1400070ad:	and    QWORD PTR [rsp+0x20],0x0
   1400070b3:	xor    r9d,r9d
   1400070b6:	xor    r8d,r8d
   1400070b9:	xor    edx,edx
   1400070bb:	xor    ecx,ecx
   1400070bd:	mov    DWORD PTR [rax],0x16
   1400070c3:	call   0x14000974c
   1400070c8:	or     eax,0xffffffff
   1400070cb:	jmp    0x14000715a
   1400070d0:	test   rdx,rdx
   1400070d3:	je     0x1400070da
   1400070d5:	test   rcx,rcx
   1400070d8:	je     0x1400070a8
   1400070da:	mov    DWORD PTR [rbp-0x18],0x42
   1400070e1:	mov    QWORD PTR [rbp-0x20],rcx
   1400070e5:	mov    QWORD PTR [rbp-0x30],rcx
   1400070e9:	cmp    rdx,0x3fffffff
   1400070f0:	jbe    0x1400070fb
   1400070f2:	mov    DWORD PTR [rbp-0x28],0x7fffffff
   1400070f9:	jmp    0x140007101
   1400070fb:	lea    eax,[rdx+rdx*1]
   1400070fe:	mov    DWORD PTR [rbp-0x28],eax
   140007101:	mov    r9,QWORD PTR [rbp+0x30]
   140007105:	lea    rcx,[rbp-0x30]
   140007109:	mov    r8,r11
   14000710c:	mov    rdx,r10
   14000710f:	call   0x1400099c8
   140007114:	mov    edi,eax
   140007116:	test   rbx,rbx
   140007119:	je     0x14000715a
   14000711b:	dec    DWORD PTR [rbp-0x28]
   14000711e:	js     0x140007134
   140007120:	mov    rax,QWORD PTR [rbp-0x30]
   140007124:	mov    BYTE PTR [rax],0x0
   140007127:	mov    rax,QWORD PTR [rbp-0x30]
   14000712b:	inc    rax
   14000712e:	mov    QWORD PTR [rbp-0x30],rax
   140007132:	jmp    0x140007143
   140007134:	lea    rdx,[rbp-0x30]
   140007138:	xor    ecx,ecx
   14000713a:	call   0x140009838
   14000713f:	mov    rax,QWORD PTR [rbp-0x30]
   140007143:	dec    DWORD PTR [rbp-0x28]
   140007146:	js     0x14000714d
   140007148:	mov    BYTE PTR [rax],0x0
   14000714b:	jmp    0x140007158
   14000714d:	lea    rdx,[rbp-0x30]
   140007151:	xor    ecx,ecx
   140007153:	call   0x140009838
   140007158:	mov    eax,edi
   14000715a:	mov    rbx,QWORD PTR [rsp+0x70]
   14000715f:	mov    rdi,QWORD PTR [rsp+0x78]
   140007164:	add    rsp,0x60
   140007168:	pop    rbp
   140007169:	ret    
   14000716a:	int3   
   14000716b:	int3   
   14000716c:	int3   
   14000716d:	int3   
   14000716e:	int3   
   14000716f:	int3   
   140007170:	mov    rax,rsp
   140007173:	mov    QWORD PTR [rax+0x8],rcx
   140007177:	mov    QWORD PTR [rax+0x10],rdx
   14000717b:	mov    QWORD PTR [rax+0x18],r8
   14000717f:	mov    QWORD PTR [rax+0x20],r9
   140007183:	push   rbx
   140007184:	push   rsi
   140007185:	push   rdi
   140007186:	sub    rsp,0x30
   14000718a:	xor    eax,eax
   14000718c:	test   rcx,rcx
   14000718f:	setne  al
   140007192:	test   eax,eax
   140007194:	jne    0x1400071bb
   140007196:	call   0x140009658
   14000719b:	mov    DWORD PTR [rax],0x16
   1400071a1:	and    QWORD PTR [rsp+0x20],0x0
   1400071a7:	xor    r9d,r9d
   1400071aa:	xor    r8d,r8d
   1400071ad:	xor    edx,edx
   1400071af:	xor    ecx,ecx
   1400071b1:	call   0x14000974c
   1400071b6:	or     eax,0xffffffff
   1400071b9:	jmp    0x14000720e
   1400071bb:	lea    rdi,[rsp+0x58]
   1400071c0:	lea    rsi,[rip+0xa849]        # 0x140011a10
   1400071c7:	mov    rdx,rsi
   1400071ca:	mov    ecx,0x1
   1400071cf:	call   0x14000a918
   1400071d4:	nop
   1400071d5:	mov    rcx,rsi
   1400071d8:	call   0x14000a62c
   1400071dd:	mov    ebx,eax
   1400071df:	mov    r9,rdi
   1400071e2:	xor    r8d,r8d
   1400071e5:	mov    rdx,QWORD PTR [rsp+0x50]
   1400071ea:	mov    rcx,rsi
   1400071ed:	call   0x1400099c8
   1400071f2:	mov    edi,eax
   1400071f4:	mov    rdx,rsi
   1400071f7:	mov    ecx,ebx
   1400071f9:	call   0x14000a700
   1400071fe:	nop
   1400071ff:	mov    rdx,rsi
   140007202:	mov    ecx,0x1
   140007207:	call   0x14000a950
   14000720c:	mov    eax,edi
   14000720e:	add    rsp,0x30
   140007212:	pop    rdi
   140007213:	pop    rsi
   140007214:	pop    rbx
   140007215:	ret    
   140007216:	int3   
   140007217:	int3   
   140007218:	int3   
   140007219:	int3   
   14000721a:	int3   
   14000721b:	int3   
   14000721c:	test   rcx,rcx
   14000721f:	jne    0x140007224
   140007221:	xor    eax,eax
   140007223:	ret    
   140007224:	xor    edx,edx
   140007226:	lea    r9d,[rdx+0x1]
   14000722a:	lea    r8d,[rdx+0xa]
   14000722e:	jmp    0x14000add4
   140007233:	int3   
   140007234:	int3   
   140007235:	int3   
   140007236:	int3   
   140007237:	int3   
   140007238:	int3   
   140007239:	int3   
   14000723a:	int3   
   14000723b:	int3   
   14000723c:	sub    rsp,0x28
   140007240:	mov    rax,QWORD PTR [rcx]
   140007243:	cmp    DWORD PTR [rax],0xe06d7363
   140007249:	jne    0x140007276
   14000724b:	cmp    DWORD PTR [rax+0x18],0x4
   14000724f:	jne    0x140007276
   140007251:	mov    eax,DWORD PTR [rax+0x20]
   140007254:	cmp    eax,0x19930520
   140007259:	je     0x140007270
   14000725b:	cmp    eax,0x19930521
   140007260:	je     0x140007270
   140007262:	cmp    eax,0x19930522
   140007267:	je     0x140007270
   140007269:	cmp    eax,0x1994000
   14000726e:	jne    0x140007276
   140007270:	call   0x14000ae10
   140007275:	int3   
   140007276:	xor    eax,eax
   140007278:	add    rsp,0x28
   14000727c:	ret    
   14000727d:	int3   
   14000727e:	int3   
   14000727f:	int3   
   140007280:	int3   
   140007281:	int3   
   140007282:	int3   
   140007283:	int3   
   140007284:	sub    rsp,0x28
   140007288:	lea    rcx,[rip+0xffffffffffffffad]        # 0x14000723c
   14000728f:	call   QWORD PTR [rip+0xf2bb]        # 0x140016550
   140007295:	xor    eax,eax
   140007297:	add    rsp,0x28
   14000729b:	ret    
   14000729c:	int3   
   14000729d:	int3   
   14000729e:	int3   
   14000729f:	int3   
   1400072a0:	int3   
   1400072a1:	int3   
   1400072a2:	int3   
   1400072a3:	int3   
   1400072a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400072a9:	mov    QWORD PTR [rsp+0x10],rbp
   1400072ae:	mov    QWORD PTR [rsp+0x18],rsi
   1400072b3:	push   rdi
   1400072b4:	sub    rsp,0x20
   1400072b8:	mov    rsi,rdx
   1400072bb:	mov    edi,ecx
   1400072bd:	call   0x140007588
   1400072c2:	xor    r11d,r11d
   1400072c5:	mov    rbx,rax
   1400072c8:	test   rax,rax
   1400072cb:	je     0x140007459
   1400072d1:	mov    rcx,QWORD PTR [rax+0xa0]
   1400072d8:	movsxd r8,DWORD PTR [rip+0x9e31]        # 0x140011110
   1400072df:	mov    rdx,rcx
   1400072e2:	cmp    DWORD PTR [rdx],edi
   1400072e4:	je     0x1400072f9
   1400072e6:	mov    rax,r8
   1400072e9:	add    rdx,0x10
   1400072ed:	shl    rax,0x4
   1400072f1:	add    rax,rcx
   1400072f4:	cmp    rdx,rax
   1400072f7:	jb     0x1400072e2
   1400072f9:	mov    rax,r8
   1400072fc:	shl    rax,0x4
   140007300:	add    rax,rcx
   140007303:	cmp    rdx,rax
   140007306:	jae    0x14000730c
   140007308:	cmp    DWORD PTR [rdx],edi
   14000730a:	je     0x14000730f
   14000730c:	mov    rdx,r11
   14000730f:	test   rdx,rdx
   140007312:	je     0x140007459
   140007318:	mov    r8,QWORD PTR [rdx+0x8]
   14000731c:	test   r8,r8
   14000731f:	je     0x140007459
   140007325:	cmp    r8,0x5
   140007329:	jne    0x140007338
   14000732b:	mov    QWORD PTR [rdx+0x8],r11
   14000732f:	lea    eax,[r8-0x4]
   140007333:	jmp    0x14000745b
   140007338:	cmp    r8,0x1
   14000733c:	jne    0x140007346
   14000733e:	or     eax,0xffffffff
   140007341:	jmp    0x14000745b
   140007346:	mov    rbp,QWORD PTR [rbx+0xa8]
   14000734d:	mov    QWORD PTR [rbx+0xa8],rsi
   140007354:	mov    ecx,DWORD PTR [rdx+0x4]
   140007357:	cmp    ecx,0x8
   14000735a:	jne    0x140007446
   140007360:	movsxd r9,DWORD PTR [rip+0x9db1]        # 0x140011118
   140007367:	mov    ecx,DWORD PTR [rip+0x9daf]        # 0x14001111c
   14000736d:	add    ecx,r9d
   140007370:	mov    r10,r9
   140007373:	cmp    r9d,ecx
   140007376:	jge    0x1400073a0
   140007378:	shl    r10,0x4
   14000737c:	mov    rax,QWORD PTR [rbx+0xa0]
   140007383:	inc    r9d
   140007386:	add    r10,0x10
   14000738a:	mov    QWORD PTR [r10+rax*1-0x8],r11
   14000738f:	mov    ecx,DWORD PTR [rip+0x9d83]        # 0x140011118
   140007395:	add    ecx,DWORD PTR [rip+0x9d81]        # 0x14001111c
   14000739b:	cmp    r9d,ecx
   14000739e:	jl     0x14000737c
   1400073a0:	cmp    DWORD PTR [rdx],0xc000008e
   1400073a6:	mov    edi,DWORD PTR [rbx+0xb0]
   1400073ac:	jne    0x1400073ba
   1400073ae:	mov    DWORD PTR [rbx+0xb0],0x83
   1400073b8:	jmp    0x140007430
   1400073ba:	cmp    DWORD PTR [rdx],0xc0000090
   1400073c0:	jne    0x1400073ce
   1400073c2:	mov    DWORD PTR [rbx+0xb0],0x81
   1400073cc:	jmp    0x140007430
   1400073ce:	cmp    DWORD PTR [rdx],0xc0000091
   1400073d4:	jne    0x1400073e2
   1400073d6:	mov    DWORD PTR [rbx+0xb0],0x84
   1400073e0:	jmp    0x140007430
   1400073e2:	cmp    DWORD PTR [rdx],0xc0000093
   1400073e8:	jne    0x1400073f6
   1400073ea:	mov    DWORD PTR [rbx+0xb0],0x85
   1400073f4:	jmp    0x140007430
   1400073f6:	cmp    DWORD PTR [rdx],0xc000008d
   1400073fc:	jne    0x14000740a
   1400073fe:	mov    DWORD PTR [rbx+0xb0],0x82
   140007408:	jmp    0x140007430
   14000740a:	cmp    DWORD PTR [rdx],0xc000008f
   140007410:	jne    0x14000741e
   140007412:	mov    DWORD PTR [rbx+0xb0],0x86
   14000741c:	jmp    0x140007430
   14000741e:	cmp    DWORD PTR [rdx],0xc0000092
   140007424:	jne    0x140007430
   140007426:	mov    DWORD PTR [rbx+0xb0],0x8a
   140007430:	mov    edx,DWORD PTR [rbx+0xb0]
   140007436:	mov    ecx,0x8
   14000743b:	call   r8
   14000743e:	mov    DWORD PTR [rbx+0xb0],edi
   140007444:	jmp    0x14000744d
   140007446:	mov    QWORD PTR [rdx+0x8],r11
   14000744a:	call   r8
   14000744d:	mov    QWORD PTR [rbx+0xa8],rbp
   140007454:	jmp    0x14000733e
   140007459:	xor    eax,eax
   14000745b:	mov    rbx,QWORD PTR [rsp+0x30]
   140007460:	mov    rbp,QWORD PTR [rsp+0x38]
   140007465:	mov    rsi,QWORD PTR [rsp+0x40]
   14000746a:	add    rsp,0x20
   14000746e:	pop    rdi
   14000746f:	ret    
   140007470:	int3   
   140007471:	int3   
   140007472:	int3   
   140007473:	int3   
   140007474:	int3   
   140007475:	int3   
   140007476:	int3   
   140007477:	int3   
   140007478:	rex push rbx
   14000747a:	sub    rsp,0x20
   14000747e:	call   0x1400079cc
   140007483:	call   0x14000ae5c
   140007488:	test   eax,eax
   14000748a:	jne    0x140007495
   14000748c:	call   0x140007500
   140007491:	xor    eax,eax
   140007493:	jmp    0x1400074f2
   140007495:	lea    rcx,[rip+0x170]        # 0x14000760c
   14000749c:	call   QWORD PTR [rip+0xf0ce]        # 0x140016570
   1400074a2:	mov    DWORD PTR [rip+0x9c78],eax        # 0x140011120
   1400074a8:	cmp    eax,0xffffffff
   1400074ab:	je     0x14000748c
   1400074ad:	mov    edx,0x2d8
   1400074b2:	mov    ecx,0x1
   1400074b7:	call   0x14000b114
   1400074bc:	mov    rbx,rax
   1400074bf:	test   rax,rax
   1400074c2:	je     0x14000748c
   1400074c4:	mov    ecx,DWORD PTR [rip+0x9c56]        # 0x140011120
   1400074ca:	mov    rdx,rax
   1400074cd:	call   QWORD PTR [rip+0xf0ad]        # 0x140016580
   1400074d3:	mov    rcx,rbx
   1400074d6:	test   eax,eax
   1400074d8:	jne    0x1400074e1
   1400074da:	call   0x14000b0d0
   1400074df:	jmp    0x14000748c
   1400074e1:	xor    edx,edx
   1400074e3:	call   0x140007764
   1400074e8:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400074ed:	mov    eax,0x1
   1400074f2:	add    rsp,0x20
   1400074f6:	pop    rbx
   1400074f7:	ret    
   1400074f8:	int3   
   1400074f9:	int3   
   1400074fa:	int3   
   1400074fb:	int3   
   1400074fc:	int3   
   1400074fd:	int3   
   1400074fe:	int3   
   1400074ff:	int3   
   140007500:	sub    rsp,0x28
   140007504:	mov    ecx,DWORD PTR [rip+0x9c16]        # 0x140011120
   14000750a:	cmp    ecx,0xffffffff
   14000750d:	je     0x14000751c
   14000750f:	call   QWORD PTR [rip+0xf073]        # 0x140016588
   140007515:	or     DWORD PTR [rip+0x9c04],0xffffffff        # 0x140011120
   14000751c:	add    rsp,0x28
   140007520:	jmp    0x14000aeec
   140007525:	int3   
   140007526:	int3   
   140007527:	int3   
   140007528:	int3   
   140007529:	int3   
   14000752a:	int3   
   14000752b:	int3   
   14000752c:	rex.W jmp QWORD PTR [rip+0xf025]        # 0x140016558
   140007533:	int3   
   140007534:	int3   
   140007535:	int3   
   140007536:	int3   
   140007537:	int3   
   140007538:	int3   
   140007539:	int3   
   14000753a:	int3   
   14000753b:	int3   
   14000753c:	xor    ecx,ecx
   14000753e:	rex.W jmp QWORD PTR [rip+0xf013]        # 0x140016558
   140007545:	int3   
   140007546:	int3   
   140007547:	int3   
   140007548:	int3   
   140007549:	int3   
   14000754a:	int3   
   14000754b:	int3   
   14000754c:	rex.W jmp QWORD PTR [rip+0xf00d]        # 0x140016560
   140007553:	int3   
   140007554:	int3   
   140007555:	int3   
   140007556:	int3   
   140007557:	int3   
   140007558:	int3   
   140007559:	int3   
   14000755a:	int3   
   14000755b:	int3   
   14000755c:	rex push rbx
   14000755e:	sub    rsp,0x20
   140007562:	call   0x140007588
   140007567:	mov    rbx,rax
   14000756a:	test   rax,rax
   14000756d:	jne    0x140007577
   14000756f:	lea    ecx,[rax+0x10]
   140007572:	call   0x14000784c
   140007577:	mov    rax,rbx
   14000757a:	add    rsp,0x20
   14000757e:	pop    rbx
   14000757f:	ret    
   140007580:	int3   
   140007581:	int3   
   140007582:	int3   
   140007583:	int3   
   140007584:	int3   
   140007585:	int3   
   140007586:	int3   
   140007587:	int3   
   140007588:	mov    QWORD PTR [rsp+0x8],rbx
   14000758d:	push   rdi
   14000758e:	sub    rsp,0x20
   140007592:	call   QWORD PTR [rip+0xeec0]        # 0x140016458
   140007598:	mov    ecx,DWORD PTR [rip+0x9b82]        # 0x140011120
   14000759e:	mov    edi,eax
   1400075a0:	call   QWORD PTR [rip+0xefd2]        # 0x140016578
   1400075a6:	mov    rbx,rax
   1400075a9:	test   rax,rax
   1400075ac:	jne    0x1400075ee
   1400075ae:	lea    ecx,[rax+0x1]
   1400075b1:	mov    edx,0x2d8
   1400075b6:	call   0x14000b114
   1400075bb:	mov    rbx,rax
   1400075be:	test   rax,rax
   1400075c1:	je     0x1400075ee
   1400075c3:	mov    ecx,DWORD PTR [rip+0x9b57]        # 0x140011120
   1400075c9:	mov    rdx,rax
   1400075cc:	call   QWORD PTR [rip+0xefae]        # 0x140016580
   1400075d2:	mov    rcx,rbx
   1400075d5:	test   eax,eax
   1400075d7:	je     0x1400075e7
   1400075d9:	xor    edx,edx
   1400075db:	call   0x140007764
   1400075e0:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400075e5:	jmp    0x1400075ee
   1400075e7:	call   0x14000b0d0
   1400075ec:	xor    ebx,ebx
   1400075ee:	mov    ecx,edi
   1400075f0:	call   QWORD PTR [rip+0xef72]        # 0x140016568
   1400075f6:	mov    rax,rbx
   1400075f9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075fe:	add    rsp,0x20
   140007602:	pop    rdi
   140007603:	ret    
   140007604:	int3   
   140007605:	int3   
   140007606:	int3   
   140007607:	int3   
   140007608:	int3   
   140007609:	int3   
   14000760a:	int3   
   14000760b:	int3   
   14000760c:	test   rcx,rcx
   14000760f:	je     0x14000775a
   140007615:	mov    QWORD PTR [rsp+0x10],rbx
   14000761a:	push   rdi
   14000761b:	sub    rsp,0x20
   14000761f:	mov    rbx,rcx
   140007622:	mov    rcx,QWORD PTR [rcx+0x38]
   140007626:	test   rcx,rcx
   140007629:	je     0x140007630
   14000762b:	call   0x14000b0d0
   140007630:	mov    rcx,QWORD PTR [rbx+0x40]
   140007634:	test   rcx,rcx
   140007637:	je     0x14000763e
   140007639:	call   0x14000b0d0
   14000763e:	mov    rcx,QWORD PTR [rbx+0x48]
   140007642:	test   rcx,rcx
   140007645:	je     0x14000764c
   140007647:	call   0x14000b0d0
   14000764c:	mov    rcx,QWORD PTR [rbx+0x50]
   140007650:	test   rcx,rcx
   140007653:	je     0x14000765a
   140007655:	call   0x14000b0d0
   14000765a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000765e:	test   rcx,rcx
   140007661:	je     0x140007668
   140007663:	call   0x14000b0d0
   140007668:	mov    rcx,QWORD PTR [rbx+0x68]
   14000766c:	test   rcx,rcx
   14000766f:	je     0x140007676
   140007671:	call   0x14000b0d0
   140007676:	mov    rcx,QWORD PTR [rbx+0x70]
   14000767a:	test   rcx,rcx
   14000767d:	je     0x140007684
   14000767f:	call   0x14000b0d0
   140007684:	mov    rcx,QWORD PTR [rbx+0x78]
   140007688:	test   rcx,rcx
   14000768b:	je     0x140007692
   14000768d:	call   0x14000b0d0
   140007692:	mov    rcx,QWORD PTR [rbx+0x80]
   140007699:	test   rcx,rcx
   14000769c:	je     0x1400076a3
   14000769e:	call   0x14000b0d0
   1400076a3:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400076aa:	lea    rax,[rip+0xffffffffffff99df]        # 0x140001090
   1400076b1:	cmp    rcx,rax
   1400076b4:	je     0x1400076bb
   1400076b6:	call   0x14000b0d0
   1400076bb:	mov    edi,0xd
   1400076c0:	mov    ecx,edi
   1400076c2:	call   0x14000b064
   1400076c7:	nop
   1400076c8:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400076cf:	mov    QWORD PTR [rsp+0x30],rcx
   1400076d4:	test   rcx,rcx
   1400076d7:	je     0x1400076f5
   1400076d9:	lock dec DWORD PTR [rcx]
   1400076dc:	jne    0x1400076f5
   1400076de:	lea    rax,[rip+0x9dbb]        # 0x1400114a0
   1400076e5:	mov    rcx,QWORD PTR [rsp+0x30]
   1400076ea:	cmp    rcx,rax
   1400076ed:	je     0x1400076f5
   1400076ef:	call   0x14000b0d0
   1400076f4:	nop
   1400076f5:	mov    ecx,edi
   1400076f7:	call   0x14000b0b0
   1400076fc:	mov    ecx,0xc
   140007701:	call   0x14000b064
   140007706:	nop
   140007707:	mov    rdi,QWORD PTR [rbx+0xc0]
   14000770e:	test   rdi,rdi
   140007711:	je     0x14000773e
   140007713:	mov    rcx,rdi
   140007716:	call   0x140008bb8
   14000771b:	cmp    rdi,QWORD PTR [rip+0xa126]        # 0x140011848
   140007722:	je     0x14000773e
   140007724:	lea    rax,[rip+0xa125]        # 0x140011850
   14000772b:	cmp    rdi,rax
   14000772e:	je     0x14000773e
   140007730:	cmp    DWORD PTR [rdi],0x0
   140007733:	jne    0x14000773e
   140007735:	mov    rcx,rdi
   140007738:	call   0x1400089a4
   14000773d:	nop
   14000773e:	mov    ecx,0xc
   140007743:	call   0x14000b0b0
   140007748:	mov    rcx,rbx
   14000774b:	call   0x14000b0d0
   140007750:	mov    rbx,QWORD PTR [rsp+0x38]
   140007755:	add    rsp,0x20
   140007759:	pop    rdi
   14000775a:	ret    
   14000775b:	int3   
   14000775c:	int3   
   14000775d:	int3   
   14000775e:	int3   
   14000775f:	int3   
   140007760:	int3   
   140007761:	int3   
   140007762:	int3   
   140007763:	int3   
   140007764:	mov    QWORD PTR [rsp+0x8],rbx
   140007769:	push   rdi
   14000776a:	sub    rsp,0x20
   14000776e:	mov    rdi,rdx
   140007771:	mov    rbx,rcx
   140007774:	lea    rax,[rip+0xffffffffffff9915]        # 0x140001090
   14000777b:	mov    QWORD PTR [rcx+0xa0],rax
   140007782:	mov    DWORD PTR [rcx+0x1c],0x1
   140007789:	mov    rax,QWORD PTR [rip+0xedc8]        # 0x140016558
   140007790:	mov    QWORD PTR [rcx+0x2a8],rax
   140007797:	mov    rax,QWORD PTR [rip+0xedc2]        # 0x140016560
   14000779e:	mov    QWORD PTR [rcx+0x2b0],rax
   1400077a5:	mov    DWORD PTR [rcx+0xc8],0x1
   1400077af:	mov    BYTE PTR [rcx+0x174],0x43
   1400077b6:	mov    BYTE PTR [rcx+0x1f7],0x43
   1400077bd:	lea    rax,[rip+0x9cdc]        # 0x1400114a0
   1400077c4:	mov    QWORD PTR [rcx+0xb8],rax
   1400077cb:	mov    ecx,0xd
   1400077d0:	call   0x14000b064
   1400077d5:	nop
   1400077d6:	mov    rax,QWORD PTR [rbx+0xb8]
   1400077dd:	lock inc DWORD PTR [rax]
   1400077e0:	mov    ecx,0xd
   1400077e5:	call   0x14000b0b0
   1400077ea:	mov    ecx,0xc
   1400077ef:	call   0x14000b064
   1400077f4:	nop
   1400077f5:	mov    QWORD PTR [rbx+0xc0],rdi
   1400077fc:	test   rdi,rdi
   1400077ff:	jne    0x14000780f
   140007801:	mov    rax,QWORD PTR [rip+0xa040]        # 0x140011848
   140007808:	mov    QWORD PTR [rbx+0xc0],rax
   14000780f:	mov    rcx,QWORD PTR [rbx+0xc0]
   140007816:	call   0x140008b24
   14000781b:	nop
   14000781c:	mov    ecx,0xc
   140007821:	call   0x14000b0b0
   140007826:	mov    rbx,QWORD PTR [rsp+0x30]
   14000782b:	add    rsp,0x20
   14000782f:	pop    rdi
   140007830:	ret    
   140007831:	int3   
   140007832:	int3   
   140007833:	int3   
   140007834:	int3   
   140007835:	int3   
   140007836:	int3   
   140007837:	int3   
   140007838:	xor    r8d,r8d
   14000783b:	lea    edx,[r8+0x1]
   14000783f:	jmp    0x140007aa4
   140007844:	int3   
   140007845:	int3   
   140007846:	int3   
   140007847:	int3   
   140007848:	int3   
   140007849:	int3   
   14000784a:	int3   
   14000784b:	int3   
   14000784c:	rex push rbx
   14000784e:	sub    rsp,0x20
   140007852:	mov    ebx,ecx
   140007854:	call   0x140007c34
   140007859:	mov    ecx,ebx
   14000785b:	call   0x140007c80
   140007860:	mov    rcx,QWORD PTR [rip+0x98c1]        # 0x140011128
   140007867:	call   0x14000754c
   14000786c:	mov    ecx,0xff
   140007871:	add    rsp,0x20
   140007875:	pop    rbx
   140007876:	rex.W jmp rax
   140007879:	int3   
   14000787a:	int3   
   14000787b:	int3   
   14000787c:	int3   
   14000787d:	int3   
   14000787e:	int3   
   14000787f:	int3   
   140007880:	rex push rbx
   140007882:	sub    rsp,0x20
   140007886:	mov    ebx,ecx
   140007888:	call   0x14000789c
   14000788d:	mov    ecx,ebx
   14000788f:	call   QWORD PTR [rip+0xed03]        # 0x140016598
   140007895:	int3   
   140007896:	int3   
   140007897:	int3   
   140007898:	int3   
   140007899:	int3   
   14000789a:	int3   
   14000789b:	int3   
   14000789c:	rex push rbx
   14000789e:	sub    rsp,0x20
   1400078a2:	and    QWORD PTR [rsp+0x38],0x0
   1400078a8:	mov    ebx,ecx
   1400078aa:	lea    r8,[rsp+0x38]
   1400078af:	lea    rdx,[rip+0xffffffffffff987a]        # 0x140001130
   1400078b6:	xor    ecx,ecx
   1400078b8:	call   QWORD PTR [rip+0xece2]        # 0x1400165a0
   1400078be:	neg    eax
   1400078c0:	sbb    rcx,rcx
   1400078c3:	and    rcx,QWORD PTR [rsp+0x38]
   1400078c8:	mov    QWORD PTR [rsp+0x38],rcx
   1400078cd:	je     0x1400078e5
   1400078cf:	lea    rdx,[rip+0xffffffffffff9872]        # 0x140001148
   1400078d6:	call   QWORD PTR [rip+0xeccc]        # 0x1400165a8
   1400078dc:	test   rax,rax
   1400078df:	je     0x1400078e5
   1400078e1:	mov    ecx,ebx
   1400078e3:	call   rax
   1400078e5:	add    rsp,0x20
   1400078e9:	pop    rbx
   1400078ea:	ret    
   1400078eb:	int3   
   1400078ec:	int3   
   1400078ed:	int3   
   1400078ee:	int3   
   1400078ef:	int3   
   1400078f0:	int3   
   1400078f1:	int3   
   1400078f2:	int3   
   1400078f3:	int3   
   1400078f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400078f9:	push   rdi
   1400078fa:	sub    rsp,0x20
   1400078fe:	cmp    QWORD PTR [rip+0xd13a],0x0        # 0x140014a40
   140007906:	mov    ebx,ecx
   140007908:	je     0x140007922
   14000790a:	lea    rcx,[rip+0xd12f]        # 0x140014a40
   140007911:	call   0x14000b230
   140007916:	test   eax,eax
   140007918:	je     0x140007922
   14000791a:	mov    ecx,ebx
   14000791c:	call   QWORD PTR [rip+0xd11e]        # 0x140014a40
   140007922:	call   0x14000b284
   140007927:	call   0x14000753c
   14000792c:	lea    rbx,[rip+0xffffffffffff96dd]        # 0x140001010
   140007933:	lea    rdi,[rip+0xffffffffffff96f6]        # 0x140001030
   14000793a:	mov    QWORD PTR [rip+0xd0ef],rax        # 0x140014a30
   140007941:	mov    QWORD PTR [rip+0xd0f0],rax        # 0x140014a38
   140007948:	xor    eax,eax
   14000794a:	cmp    rbx,rdi
   14000794d:	jae    0x14000796a
   14000794f:	test   eax,eax
   140007951:	jne    0x1400079b8
   140007953:	mov    rcx,QWORD PTR [rbx]
   140007956:	test   rcx,rcx
   140007959:	je     0x14000795d
   14000795b:	call   rcx
   14000795d:	add    rbx,0x8
   140007961:	cmp    rbx,rdi
   140007964:	jb     0x14000794f
   140007966:	test   eax,eax
   140007968:	jne    0x1400079b8
   14000796a:	lea    rbx,[rip+0xffffffffffff968f]        # 0x140001000
   140007971:	lea    rdi,[rip+0xffffffffffff9690]        # 0x140001008
   140007978:	jmp    0x140007988
   14000797a:	mov    rax,QWORD PTR [rbx]
   14000797d:	test   rax,rax
   140007980:	je     0x140007984
   140007982:	call   rax
   140007984:	add    rbx,0x8
   140007988:	cmp    rbx,rdi
   14000798b:	jb     0x14000797a
   14000798d:	cmp    QWORD PTR [rip+0xd093],0x0        # 0x140014a28
   140007995:	je     0x1400079b6
   140007997:	lea    rcx,[rip+0xd08a]        # 0x140014a28
   14000799e:	call   0x14000b230
   1400079a3:	test   eax,eax
   1400079a5:	je     0x1400079b6
   1400079a7:	xor    r8d,r8d
   1400079aa:	xor    ecx,ecx
   1400079ac:	lea    edx,[r8+0x2]
   1400079b0:	call   QWORD PTR [rip+0xd072]        # 0x140014a28
   1400079b6:	xor    eax,eax
   1400079b8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400079bd:	add    rsp,0x20
   1400079c1:	pop    rdi
   1400079c2:	ret    
   1400079c3:	int3   
   1400079c4:	int3   
   1400079c5:	int3   
   1400079c6:	int3   
   1400079c7:	int3   
   1400079c8:	int3   
   1400079c9:	int3   
   1400079ca:	int3   
   1400079cb:	int3   
   1400079cc:	rex push rbx
   1400079ce:	sub    rsp,0x20
   1400079d2:	call   0x14000753c
   1400079d7:	mov    rcx,rax
   1400079da:	mov    rbx,rax
   1400079dd:	call   0x14000b2f8
   1400079e2:	mov    rcx,rbx
   1400079e5:	call   0x14000b318
   1400079ea:	mov    rcx,rbx
   1400079ed:	call   0x14000b324
   1400079f2:	mov    rcx,rbx
   1400079f5:	call   0x14000b580
   1400079fa:	mov    rcx,rbx
   1400079fd:	call   0x14000b318
   140007a02:	mov    rcx,rbx
   140007a05:	call   0x14000ae38
   140007a0a:	lea    rcx,[rip+0xfffffffffffffe27]        # 0x140007838
   140007a11:	call   0x14000752c
   140007a16:	mov    QWORD PTR [rip+0x970b],rax        # 0x140011128
   140007a1d:	add    rsp,0x20
   140007a21:	pop    rbx
   140007a22:	ret    
   140007a23:	int3   
   140007a24:	int3   
   140007a25:	int3   
   140007a26:	int3   
   140007a27:	int3   
   140007a28:	int3   
   140007a29:	int3   
   140007a2a:	int3   
   140007a2b:	int3   
   140007a2c:	xor    r8d,r8d
   140007a2f:	xor    edx,edx
   140007a31:	jmp    0x140007aa4
   140007a36:	int3   
   140007a37:	int3   
   140007a38:	int3   
   140007a39:	int3   
   140007a3a:	int3   
   140007a3b:	int3   
   140007a3c:	xor    edx,edx
   140007a3e:	xor    ecx,ecx
   140007a40:	lea    r8d,[rdx+0x1]
   140007a44:	jmp    0x140007aa4
   140007a49:	int3   
   140007a4a:	int3   
   140007a4b:	int3   
   140007a4c:	int3   
   140007a4d:	int3   
   140007a4e:	int3   
   140007a4f:	int3   
   140007a50:	mov    edx,0x1
   140007a55:	xor    ecx,ecx
   140007a57:	mov    r8d,edx
   140007a5a:	jmp    0x140007aa4
   140007a5f:	int3   
   140007a60:	int3   
   140007a61:	int3   
   140007a62:	int3   
   140007a63:	int3   
   140007a64:	int3   
   140007a65:	int3   
   140007a66:	int3   
   140007a67:	int3   
   140007a68:	cmp    rcx,rdx
   140007a6b:	jae    0x140007a9a
   140007a6d:	mov    QWORD PTR [rsp+0x8],rbx
   140007a72:	push   rdi
   140007a73:	sub    rsp,0x20
   140007a77:	mov    rdi,rdx
   140007a7a:	mov    rbx,rcx
   140007a7d:	mov    rax,QWORD PTR [rbx]
   140007a80:	test   rax,rax
   140007a83:	je     0x140007a87
   140007a85:	call   rax
   140007a87:	add    rbx,0x8
   140007a8b:	cmp    rbx,rdi
   140007a8e:	jb     0x140007a7d
   140007a90:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a95:	add    rsp,0x20
   140007a99:	pop    rdi
   140007a9a:	ret    
   140007a9b:	int3   
   140007a9c:	int3   
   140007a9d:	int3   
   140007a9e:	int3   
   140007a9f:	int3   
   140007aa0:	int3   
   140007aa1:	int3   
   140007aa2:	int3   
   140007aa3:	int3   
   140007aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140007aa9:	mov    QWORD PTR [rsp+0x10],rsi
   140007aae:	mov    DWORD PTR [rsp+0x18],r8d
   140007ab3:	push   rdi
   140007ab4:	push   r12
   140007ab6:	push   r13
   140007ab8:	push   r14
   140007aba:	push   r15
   140007abc:	sub    rsp,0x40
   140007ac0:	mov    r14d,r8d
   140007ac3:	mov    ebx,edx
   140007ac5:	mov    r13d,ecx
   140007ac8:	mov    ecx,0x8
   140007acd:	call   0x14000b064
   140007ad2:	nop
   140007ad3:	cmp    DWORD PTR [rip+0xa9fe],0x1        # 0x1400124d8
   140007ada:	je     0x140007bdc
   140007ae0:	mov    DWORD PTR [rip+0xaa42],0x1        # 0x14001252c
   140007aea:	mov    BYTE PTR [rip+0xaa37],r14b        # 0x140012528
   140007af1:	test   ebx,ebx
   140007af3:	jne    0x140007bc8
   140007af9:	mov    rcx,QWORD PTR [rip+0xcf38]        # 0x140014a38
   140007b00:	call   0x14000754c
   140007b05:	mov    rsi,rax
   140007b08:	mov    QWORD PTR [rsp+0x30],rax
   140007b0d:	test   rax,rax
   140007b10:	je     0x140007bb5
   140007b16:	mov    rcx,QWORD PTR [rip+0xcf13]        # 0x140014a30
   140007b1d:	call   0x14000754c
   140007b22:	mov    rdi,rax
   140007b25:	mov    QWORD PTR [rsp+0x20],rax
   140007b2a:	mov    r12,rsi
   140007b2d:	mov    QWORD PTR [rsp+0x28],rsi
   140007b32:	mov    r15,rax
   140007b35:	mov    QWORD PTR [rsp+0x38],rax
   140007b3a:	sub    rdi,0x8
   140007b3e:	mov    QWORD PTR [rsp+0x20],rdi
   140007b43:	cmp    rdi,rsi
   140007b46:	jb     0x140007bb5
   140007b48:	call   0x14000753c
   140007b4d:	cmp    QWORD PTR [rdi],rax
   140007b50:	jne    0x140007b54
   140007b52:	jmp    0x140007b3a
   140007b54:	cmp    rdi,rsi
   140007b57:	jb     0x140007bb5
   140007b59:	mov    rcx,QWORD PTR [rdi]
   140007b5c:	call   0x14000754c
   140007b61:	mov    rbx,rax
   140007b64:	call   0x14000753c
   140007b69:	mov    QWORD PTR [rdi],rax
   140007b6c:	call   rbx
   140007b6e:	mov    rcx,QWORD PTR [rip+0xcec3]        # 0x140014a38
   140007b75:	call   0x14000754c
   140007b7a:	mov    rbx,rax
   140007b7d:	mov    rcx,QWORD PTR [rip+0xceac]        # 0x140014a30
   140007b84:	call   0x14000754c
   140007b89:	cmp    r12,rbx
   140007b8c:	jne    0x140007b93
   140007b8e:	cmp    r15,rax
   140007b91:	je     0x140007b52
   140007b93:	mov    r12,rbx
   140007b96:	mov    QWORD PTR [rsp+0x28],rbx
   140007b9b:	mov    rsi,rbx
   140007b9e:	mov    QWORD PTR [rsp+0x30],rbx
   140007ba3:	mov    r15,rax
   140007ba6:	mov    QWORD PTR [rsp+0x38],rax
   140007bab:	mov    rdi,rax
   140007bae:	mov    QWORD PTR [rsp+0x20],rax
   140007bb3:	jmp    0x140007b52
   140007bb5:	lea    rdx,[rip+0xffffffffffff9494]        # 0x140001050
   140007bbc:	lea    rcx,[rip+0xffffffffffff9475]        # 0x140001038
   140007bc3:	call   0x140007a68
   140007bc8:	lea    rdx,[rip+0xffffffffffff9491]        # 0x140001060
   140007bcf:	lea    rcx,[rip+0xffffffffffff9482]        # 0x140001058
   140007bd6:	call   0x140007a68
   140007bdb:	nop
   140007bdc:	test   r14d,r14d
   140007bdf:	je     0x140007bf0
   140007be1:	mov    ecx,0x8
   140007be6:	call   0x14000b0b0
   140007beb:	test   r14d,r14d
   140007bee:	jne    0x140007c16
   140007bf0:	mov    DWORD PTR [rip+0xa8de],0x1        # 0x1400124d8
   140007bfa:	mov    ecx,0x8
   140007bff:	call   0x14000b0b0
   140007c04:	mov    ecx,r13d
   140007c07:	call   0x14000789c
   140007c0c:	mov    ecx,r13d
   140007c0f:	call   QWORD PTR [rip+0xe983]        # 0x140016598
   140007c15:	int3   
   140007c16:	mov    rbx,QWORD PTR [rsp+0x70]
   140007c1b:	mov    rsi,QWORD PTR [rsp+0x78]
   140007c20:	add    rsp,0x40
   140007c24:	pop    r15
   140007c26:	pop    r14
   140007c28:	pop    r13
   140007c2a:	pop    r12
   140007c2c:	pop    rdi
   140007c2d:	ret    
   140007c2e:	int3   
   140007c2f:	int3   
   140007c30:	int3   
   140007c31:	int3   
   140007c32:	int3   
   140007c33:	int3   
   140007c34:	sub    rsp,0x28
   140007c38:	mov    ecx,0x3
   140007c3d:	call   0x14000b6ac
   140007c42:	cmp    eax,0x1
   140007c45:	je     0x140007c5e
   140007c47:	mov    ecx,0x3
   140007c4c:	call   0x14000b6ac
   140007c51:	test   eax,eax
   140007c53:	jne    0x140007c72
   140007c55:	cmp    DWORD PTR [rip+0x94a4],0x1        # 0x140011100
   140007c5c:	jne    0x140007c72
   140007c5e:	mov    ecx,0xfc
   140007c63:	call   0x140007c80
   140007c68:	mov    ecx,0xff
   140007c6d:	call   0x140007c80
   140007c72:	add    rsp,0x28
   140007c76:	ret    
   140007c77:	int3   
   140007c78:	int3   
   140007c79:	int3   
   140007c7a:	int3   
   140007c7b:	int3   
   140007c7c:	int3   
   140007c7d:	int3   
   140007c7e:	int3   
   140007c7f:	int3   
   140007c80:	mov    QWORD PTR [rsp+0x8],rbx
   140007c85:	mov    QWORD PTR [rsp+0x18],rbp
   140007c8a:	mov    QWORD PTR [rsp+0x20],rdi
   140007c8f:	push   r14
   140007c91:	sub    rsp,0x30
   140007c95:	lea    r14,[rip+0xffffffffffff94c4]        # 0x140001160
   140007c9c:	mov    edi,ecx
   140007c9e:	xor    ebx,ebx
   140007ca0:	mov    rax,r14
   140007ca3:	cmp    ecx,DWORD PTR [rax]
   140007ca5:	je     0x140007cb2
   140007ca7:	inc    ebx
   140007ca9:	add    rax,0x10
   140007cad:	cmp    ebx,0x17
   140007cb0:	jb     0x140007ca3
   140007cb2:	cmp    ebx,0x17
   140007cb5:	jae    0x140007e2e
   140007cbb:	mov    ebp,0x3
   140007cc0:	mov    ecx,ebp
   140007cc2:	call   0x14000b6ac
   140007cc7:	cmp    eax,0x1
   140007cca:	je     0x140007dec
   140007cd0:	mov    ecx,ebp
   140007cd2:	call   0x14000b6ac
   140007cd7:	test   eax,eax
   140007cd9:	jne    0x140007ce8
   140007cdb:	cmp    DWORD PTR [rip+0x941e],0x1        # 0x140011100
   140007ce2:	je     0x140007dec
   140007ce8:	cmp    edi,0xfc
   140007cee:	je     0x140007e2e
   140007cf4:	lea    rdi,[rip+0xa845]        # 0x140012540
   140007cfb:	mov    ebp,0x314
   140007d00:	lea    r8,[rip+0xffffffffffff9b51]        # 0x140001858
   140007d07:	mov    rcx,rdi
   140007d0a:	mov    edx,ebp
   140007d0c:	call   0x14000b5a4
   140007d11:	test   eax,eax
   140007d13:	je     0x140007d2a
   140007d15:	and    QWORD PTR [rsp+0x20],0x0
   140007d1b:	xor    r9d,r9d
   140007d1e:	xor    r8d,r8d
   140007d21:	xor    edx,edx
   140007d23:	xor    ecx,ecx
   140007d25:	call   0x14000976c
   140007d2a:	lea    rdx,[rip+0xa828]        # 0x140012559
   140007d31:	mov    r8d,0x104
   140007d37:	xor    ecx,ecx
   140007d39:	mov    BYTE PTR [rip+0xa91d],0x0        # 0x14001265d
   140007d40:	call   QWORD PTR [rip+0xe87a]        # 0x1400165c0
   140007d46:	test   eax,eax
   140007d48:	jne    0x140007d7b
   140007d4a:	lea    r8,[rip+0xffffffffffff9b27]        # 0x140001878
   140007d51:	lea    rcx,[rip+0xa801]        # 0x140012559
   140007d58:	mov    edx,0x2fb
   140007d5d:	call   0x14000b5a4
   140007d62:	test   eax,eax
   140007d64:	je     0x140007d7b
   140007d66:	and    QWORD PTR [rsp+0x20],0x0
   140007d6c:	xor    r9d,r9d
   140007d6f:	xor    r8d,r8d
   140007d72:	xor    edx,edx
   140007d74:	xor    ecx,ecx
   140007d76:	call   0x14000976c
   140007d7b:	lea    r8,[rip+0xffffffffffff9b0e]        # 0x140001890
   140007d82:	mov    rdx,rbp
   140007d85:	mov    rcx,rdi
   140007d88:	call   0x14000b61c
   140007d8d:	test   eax,eax
   140007d8f:	je     0x140007da6
   140007d91:	and    QWORD PTR [rsp+0x20],0x0
   140007d97:	xor    r9d,r9d
   140007d9a:	xor    r8d,r8d
   140007d9d:	xor    edx,edx
   140007d9f:	xor    ecx,ecx
   140007da1:	call   0x14000976c
   140007da6:	movsxd r8,ebx
   140007da9:	mov    rdx,rbp
   140007dac:	mov    rcx,rdi
   140007daf:	add    r8,r8
   140007db2:	mov    r8,QWORD PTR [r14+r8*8+0x8]
   140007db7:	call   0x14000b61c
   140007dbc:	test   eax,eax
   140007dbe:	je     0x140007dd5
   140007dc0:	and    QWORD PTR [rsp+0x20],0x0
   140007dc6:	xor    r9d,r9d
   140007dc9:	xor    r8d,r8d
   140007dcc:	xor    edx,edx
   140007dce:	xor    ecx,ecx
   140007dd0:	call   0x14000976c
   140007dd5:	lea    rdx,[rip+0xffffffffffff9abc]        # 0x140001898
   140007ddc:	mov    r8d,0x12010
   140007de2:	mov    rcx,rdi
   140007de5:	call   0x14000b704
   140007dea:	jmp    0x140007e2e
   140007dec:	mov    ecx,0xfffffff4
   140007df1:	call   QWORD PTR [rip+0xe7b9]        # 0x1400165b0
   140007df7:	test   rax,rax
   140007dfa:	je     0x140007e2e
   140007dfc:	or     r8,0xffffffffffffffff
   140007e00:	cmp    rax,r8
   140007e03:	je     0x140007e2e
   140007e05:	movsxd rcx,ebx
   140007e08:	add    rcx,rcx
   140007e0b:	mov    rdx,QWORD PTR [r14+rcx*8+0x8]
   140007e10:	inc    r8
   140007e13:	cmp    BYTE PTR [rdx+r8*1],0x0
   140007e18:	jne    0x140007e10
   140007e1a:	and    QWORD PTR [rsp+0x20],0x0
   140007e20:	lea    r9,[rsp+0x48]
   140007e25:	mov    rcx,rax
   140007e28:	call   QWORD PTR [rip+0xe78a]        # 0x1400165b8
   140007e2e:	mov    rbx,QWORD PTR [rsp+0x40]
   140007e33:	mov    rbp,QWORD PTR [rsp+0x50]
   140007e38:	mov    rdi,QWORD PTR [rsp+0x58]
   140007e3d:	add    rsp,0x30
   140007e41:	pop    r14
   140007e43:	ret    
   140007e44:	int3   
   140007e45:	int3   
   140007e46:	int3   
   140007e47:	int3   
   140007e48:	int3   
   140007e49:	int3   
   140007e4a:	int3   
   140007e4b:	int3   
   140007e4c:	mov    DWORD PTR [rsp+0x8],ecx
   140007e50:	sub    rsp,0x28
   140007e54:	xor    r8d,r8d
   140007e57:	mov    edx,0x1000
   140007e5c:	xor    ecx,ecx
   140007e5e:	call   QWORD PTR [rip+0xe764]        # 0x1400165c8
   140007e64:	mov    QWORD PTR [rip+0xa9ed],rax        # 0x140012858
   140007e6b:	test   rax,rax
   140007e6e:	je     0x140007eb5
   140007e70:	lea    r8,[rsp+0x30]
   140007e75:	mov    r9d,0x4
   140007e7b:	xor    edx,edx
   140007e7d:	mov    rcx,rax
   140007e80:	mov    DWORD PTR [rsp+0x30],0x2
   140007e88:	call   QWORD PTR [rip+0xe602]        # 0x140016490
   140007e8e:	mov    rcx,QWORD PTR [rip+0xa9c3]        # 0x140012858
   140007e95:	lea    r8,[rsp+0x30]
   140007e9a:	mov    r9d,0x4
   140007ea0:	xor    edx,edx
   140007ea2:	mov    DWORD PTR [rsp+0x30],0x2
   140007eaa:	call   QWORD PTR [rip+0xe5e0]        # 0x140016490
   140007eb0:	mov    eax,0x1
   140007eb5:	add    rsp,0x28
   140007eb9:	ret    
   140007eba:	int3   
   140007ebb:	int3   
   140007ebc:	int3   
   140007ebd:	int3   
   140007ebe:	int3   
   140007ebf:	int3   
   140007ec0:	mov    rax,rsp
   140007ec3:	mov    QWORD PTR [rax+0x8],rbx
   140007ec7:	mov    QWORD PTR [rax+0x10],rbp
   140007ecb:	mov    QWORD PTR [rax+0x18],rdi
   140007ecf:	mov    QWORD PTR [rax+0x20],r12
   140007ed3:	push   r13
   140007ed5:	push   r14
   140007ed7:	push   r15
   140007ed9:	sub    rsp,0x90
   140007ee0:	lea    rcx,[rsp+0x20]
   140007ee5:	call   QWORD PTR [rip+0xe6f5]        # 0x1400165e0
   140007eeb:	mov    edx,0x38
   140007ef0:	lea    ebp,[rdx-0x18]
   140007ef3:	mov    ecx,ebp
   140007ef5:	call   0x14000b910
   140007efa:	xor    r13d,r13d
   140007efd:	mov    rdx,rax
   140007f00:	test   rax,rax
   140007f03:	jne    0x140007f0d
   140007f05:	or     eax,0xffffffff
   140007f08:	jmp    0x14000813f
   140007f0d:	mov    QWORD PTR [rip+0xc90c],rax        # 0x140014820
   140007f14:	add    rax,0x700
   140007f1a:	mov    ebx,ebp
   140007f1c:	mov    DWORD PTR [rip+0xc8de],ebx        # 0x140014800
   140007f22:	cmp    rdx,rax
   140007f25:	jae    0x140007f58
   140007f27:	add    rdx,0x9
   140007f2b:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140007f30:	mov    QWORD PTR [rdx-0x1],0xa0a0a00
   140007f38:	mov    rax,QWORD PTR [rip+0xc8e1]        # 0x140014820
   140007f3f:	add    rdx,0x38
   140007f43:	add    rax,0x700
   140007f49:	lea    rcx,[rdx-0x9]
   140007f4d:	cmp    rcx,rax
   140007f50:	jb     0x140007f2b
   140007f52:	mov    ebx,DWORD PTR [rip+0xc8a8]        # 0x140014800
   140007f58:	cmp    WORD PTR [rsp+0x62],r13w
   140007f5e:	je     0x140008072
   140007f64:	mov    rax,QWORD PTR [rsp+0x68]
   140007f69:	test   rax,rax
   140007f6c:	je     0x140008072
   140007f72:	movsxd r15,DWORD PTR [rax]
   140007f75:	mov    edi,0x800
   140007f7a:	lea    r12,[rax+0x4]
   140007f7e:	add    r15,r12
   140007f81:	cmp    DWORD PTR [rax],edi
   140007f83:	cmovl  edi,DWORD PTR [rax]
   140007f86:	cmp    ebx,edi
   140007f88:	jge    0x140007ff4
   140007f8a:	lea    r14,[rip+0xc897]        # 0x140014828
   140007f91:	mov    edx,0x38
   140007f96:	mov    rcx,rbp
   140007f99:	call   0x14000b910
   140007f9e:	test   rax,rax
   140007fa1:	je     0x140007ff2
   140007fa3:	add    ebx,ebp
   140007fa5:	lea    rcx,[rax+0x700]
   140007fac:	mov    QWORD PTR [r14],rax
   140007faf:	mov    DWORD PTR [rip+0xc84b],ebx        # 0x140014800
   140007fb5:	cmp    rax,rcx
   140007fb8:	jae    0x140007fe8
   140007fba:	lea    rdx,[rax+0x9]
   140007fbe:	or     QWORD PTR [rdx-0x9],0xffffffffffffffff
   140007fc3:	mov    QWORD PTR [rdx-0x1],0xa0a0a00
   140007fcb:	mov    rcx,QWORD PTR [r14]
   140007fce:	add    rdx,0x38
   140007fd2:	add    rcx,0x700
   140007fd9:	lea    rax,[rdx-0x9]
   140007fdd:	cmp    rax,rcx
   140007fe0:	jb     0x140007fbe
   140007fe2:	mov    ebx,DWORD PTR [rip+0xc818]        # 0x140014800
   140007fe8:	add    r14,0x8
   140007fec:	cmp    ebx,edi
   140007fee:	jl     0x140007f91
   140007ff0:	jmp    0x140007ff4
   140007ff2:	mov    edi,ebx
   140007ff4:	mov    ebp,r13d
   140007ff7:	test   edi,edi
   140007ff9:	jle    0x140008072
   140007ffb:	cmp    QWORD PTR [r15],0xffffffffffffffff
   140007fff:	je     0x140008065
   140008001:	cmp    QWORD PTR [r15],0xfffffffffffffffe
   140008005:	je     0x140008065
   140008007:	test   BYTE PTR [r12],0x1
   14000800c:	je     0x140008065
   14000800e:	test   BYTE PTR [r12],0x8
   140008013:	jne    0x140008022
   140008015:	mov    rcx,QWORD PTR [r15]
   140008018:	call   QWORD PTR [rip+0xe5b2]        # 0x1400165d0
   14000801e:	test   eax,eax
   140008020:	je     0x140008065
   140008022:	movsxd rbx,ebp
   140008025:	lea    rcx,[rip+0xc7f4]        # 0x140014820
   14000802c:	mov    edx,0xfa0
   140008031:	mov    rax,rbx
   140008034:	and    ebx,0x1f
   140008037:	sar    rax,0x5
   14000803b:	imul   rbx,rbx,0x38
   14000803f:	add    rbx,QWORD PTR [rcx+rax*8]
   140008043:	mov    rax,QWORD PTR [r15]
   140008046:	mov    QWORD PTR [rbx],rax
   140008049:	mov    al,BYTE PTR [r12]
   14000804d:	lea    rcx,[rbx+0x10]
   140008051:	mov    BYTE PTR [rbx+0x8],al
   140008054:	call   0x14000b308
   140008059:	test   eax,eax
   14000805b:	je     0x140007f05
   140008061:	or     DWORD PTR [rbx+0xc],0x4
   140008065:	inc    ebp
   140008067:	inc    r12
   14000806a:	add    r15,0x8
   14000806e:	cmp    ebp,edi
   140008070:	jl     0x140007ffb
   140008072:	mov    r14d,r13d
   140008075:	mov    rbx,r13
   140008078:	mov    rdi,QWORD PTR [rip+0xc7a1]        # 0x140014820
   14000807f:	cmp    QWORD PTR [rbx+rdi*1],0xffffffffffffffff
   140008084:	je     0x140008097
   140008086:	cmp    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000808b:	je     0x140008097
   14000808d:	or     BYTE PTR [rbx+rdi*1+0x8],0x80
   140008092:	jmp    0x14000811d
   140008097:	lea    eax,[r14-0x1]
   14000809b:	mov    BYTE PTR [rbx+rdi*1+0x8],0x81
   1400080a0:	neg    eax
   1400080a2:	mov    eax,0xfffffff6
   1400080a7:	sbb    ecx,ecx
   1400080a9:	add    ecx,0xfffffff5
   1400080ac:	test   r14d,r14d
   1400080af:	cmove  ecx,eax
   1400080b2:	call   QWORD PTR [rip+0xe4f8]        # 0x1400165b0
   1400080b8:	mov    rbp,rax
   1400080bb:	cmp    rax,0xffffffffffffffff
   1400080bf:	je     0x140008110
   1400080c1:	test   rax,rax
   1400080c4:	je     0x140008110
   1400080c6:	mov    rcx,rax
   1400080c9:	call   QWORD PTR [rip+0xe501]        # 0x1400165d0
   1400080cf:	test   eax,eax
   1400080d1:	je     0x140008110
   1400080d3:	movzx  eax,al
   1400080d6:	mov    QWORD PTR [rbx+rdi*1],rbp
   1400080da:	cmp    eax,0x2
   1400080dd:	jne    0x1400080e6
   1400080df:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   1400080e4:	jmp    0x1400080f0
   1400080e6:	cmp    eax,0x3
   1400080e9:	jne    0x1400080f0
   1400080eb:	or     BYTE PTR [rbx+rdi*1+0x8],0x8
   1400080f0:	lea    rcx,[rdi+0x10]
   1400080f4:	mov    edx,0xfa0
   1400080f9:	add    rcx,rbx
   1400080fc:	call   0x14000b308
   140008101:	test   eax,eax
   140008103:	je     0x140007f05
   140008109:	or     DWORD PTR [rbx+rdi*1+0xc],0x4
   14000810e:	jmp    0x14000811d
   140008110:	or     BYTE PTR [rbx+rdi*1+0x8],0x40
   140008115:	mov    QWORD PTR [rbx+rdi*1],0xfffffffffffffffe
   14000811d:	add    rbx,0x38
   140008121:	inc    r14d
   140008124:	cmp    rbx,0xa8
   14000812b:	jl     0x140008078
   140008131:	mov    ecx,DWORD PTR [rip+0xc6c9]        # 0x140014800
   140008137:	call   QWORD PTR [rip+0xe4ab]        # 0x1400165e8
   14000813d:	xor    eax,eax
   14000813f:	lea    r11,[rsp+0x90]
   140008147:	mov    rbx,QWORD PTR [r11+0x20]
   14000814b:	mov    rbp,QWORD PTR [r11+0x28]
   14000814f:	mov    rdi,QWORD PTR [r11+0x30]
   140008153:	mov    r12,QWORD PTR [r11+0x38]
   140008157:	mov    rsp,r11
   14000815a:	pop    r15
   14000815c:	pop    r14
   14000815e:	pop    r13
   140008160:	ret    
   140008161:	int3   
   140008162:	int3   
   140008163:	int3   
   140008164:	int3   
   140008165:	int3   
   140008166:	int3   
   140008167:	int3   
   140008168:	mov    rax,rsp
   14000816b:	mov    QWORD PTR [rax+0x18],rbx
   14000816f:	mov    QWORD PTR [rax+0x20],rsi
   140008173:	push   rdi
   140008174:	sub    rsp,0x30
   140008178:	xor    esi,esi
   14000817a:	lea    rdi,[rip+0xa6df]        # 0x140012860
   140008181:	mov    r8d,0x104
   140008187:	mov    rdx,rdi
   14000818a:	xor    ecx,ecx
   14000818c:	mov    DWORD PTR [rax+0x8],esi
   14000818f:	mov    DWORD PTR [rax+0x10],esi
   140008192:	mov    WORD PTR [rip+0xa8cf],si        # 0x140012a68
   140008199:	call   QWORD PTR [rip+0xe451]        # 0x1400165f0
   14000819f:	mov    rbx,QWORD PTR [rip+0xc8aa]        # 0x140014a50
   1400081a6:	mov    QWORD PTR [rip+0xa35b],rdi        # 0x140012508
   1400081ad:	test   rbx,rbx
   1400081b0:	je     0x1400081b7
   1400081b2:	cmp    WORD PTR [rbx],si
   1400081b5:	jne    0x1400081ba
   1400081b7:	mov    rbx,rdi
   1400081ba:	lea    rax,[rsp+0x48]
   1400081bf:	lea    r9,[rsp+0x40]
   1400081c4:	xor    r8d,r8d
   1400081c7:	xor    edx,edx
   1400081c9:	mov    rcx,rbx
   1400081cc:	mov    QWORD PTR [rsp+0x20],rax
   1400081d1:	call   0x140008260
   1400081d6:	mov    ecx,DWORD PTR [rsp+0x40]
   1400081da:	mov    edx,0xffffffff
   1400081df:	shl    rcx,0x3
   1400081e3:	cmp    rcx,rdx
   1400081e6:	ja     0x140008247
   1400081e8:	mov    eax,DWORD PTR [rsp+0x48]
   1400081ec:	add    rax,rax
   1400081ef:	cmp    rax,rdx
   1400081f2:	ja     0x140008247
   1400081f4:	lea    edx,[rax+rcx*1]
   1400081f7:	cmp    edx,ecx
   1400081f9:	jb     0x140008247
   1400081fb:	mov    ecx,edx
   1400081fd:	call   0x14000b958
   140008202:	mov    rdi,rax
   140008205:	test   rax,rax
   140008208:	je     0x140008247
   14000820a:	movsxd rax,DWORD PTR [rsp+0x40]
   14000820f:	lea    r9,[rsp+0x40]
   140008214:	mov    rdx,rdi
   140008217:	lea    r8,[rdi+rax*8]
   14000821b:	lea    rax,[rsp+0x48]
   140008220:	mov    rcx,rbx
   140008223:	mov    QWORD PTR [rsp+0x20],rax
   140008228:	call   0x140008260
   14000822d:	mov    r11d,DWORD PTR [rsp+0x40]
   140008232:	dec    r11d
   140008235:	mov    QWORD PTR [rip+0xa2ac],rdi        # 0x1400124e8
   14000823c:	xor    eax,eax
   14000823e:	mov    DWORD PTR [rip+0xa297],r11d        # 0x1400124dc
   140008245:	jmp    0x14000824a
   140008247:	or     eax,0xffffffff
   14000824a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000824f:	mov    rsi,QWORD PTR [rsp+0x58]
   140008254:	add    rsp,0x30
   140008258:	pop    rdi
   140008259:	ret    
   14000825a:	int3   
   14000825b:	int3   
   14000825c:	int3   
   14000825d:	int3   
   14000825e:	int3   
   14000825f:	int3   
   140008260:	mov    rax,rsp
   140008263:	mov    QWORD PTR [rax+0x8],rbx
   140008267:	mov    QWORD PTR [rax+0x10],rbp
   14000826b:	mov    QWORD PTR [rax+0x18],rsi
   14000826f:	mov    QWORD PTR [rax+0x20],rdi
   140008273:	push   r13
   140008275:	push   r14
   140008277:	push   r15
   140008279:	mov    r11,QWORD PTR [rsp+0x40]
   14000827e:	mov    esi,DWORD PTR [r9]
   140008281:	xor    r14d,r14d
   140008284:	mov    ebp,DWORD PTR [r11]
   140008287:	lea    r15d,[r14+0x1]
   14000828b:	mov    DWORD PTR [r11],r14d
   14000828e:	mov    DWORD PTR [r9],r15d
   140008291:	mov    rbx,r9
   140008294:	mov    r10,rdx
   140008297:	mov    DWORD PTR [rsp+0x40],esi
   14000829b:	test   rdx,rdx
   14000829e:	je     0x1400082ac
   1400082a0:	cmp    esi,r15d
   1400082a3:	jl     0x1400082ac
   1400082a5:	mov    QWORD PTR [rdx],r8
   1400082a8:	add    r10,0x8
   1400082ac:	mov    edx,r14d
   1400082af:	mov    r9d,0x22
   1400082b5:	cmp    WORD PTR [rcx],r9w
   1400082b9:	jne    0x1400082cf
   1400082bb:	test   edx,edx
   1400082bd:	mov    eax,r14d
   1400082c0:	sete   al
   1400082c3:	add    rcx,0x2
   1400082c7:	mov    edx,eax
   1400082c9:	movzx  eax,r9w
   1400082cd:	jmp    0x1400082f3
   1400082cf:	add    DWORD PTR [r11],r15d
   1400082d2:	test   r8,r8
   1400082d5:	je     0x1400082e7
   1400082d7:	cmp    DWORD PTR [r11],ebp
   1400082da:	jg     0x1400082e7
   1400082dc:	movzx  eax,WORD PTR [rcx]
   1400082df:	mov    WORD PTR [r8],ax
   1400082e3:	add    r8,0x2
   1400082e7:	movzx  eax,WORD PTR [rcx]
   1400082ea:	add    rcx,0x2
   1400082ee:	test   ax,ax
   1400082f1:	je     0x14000830f
   1400082f3:	test   edx,edx
   1400082f5:	jne    0x1400082b5
   1400082f7:	cmp    ax,0x20
   1400082fb:	je     0x140008303
   1400082fd:	cmp    ax,0x9
   140008301:	jne    0x1400082b5
   140008303:	test   r8,r8
   140008306:	je     0x140008313
   140008308:	mov    WORD PTR [r8-0x2],r14w
   14000830d:	jmp    0x140008313
   14000830f:	sub    rcx,0x2
   140008313:	mov    edi,r14d
   140008316:	mov    r13d,0x5c
   14000831c:	cmp    WORD PTR [rcx],r14w
   140008320:	je     0x140008417
   140008326:	cmp    WORD PTR [rcx],0x20
   14000832a:	je     0x140008332
   14000832c:	cmp    WORD PTR [rcx],0x9
   140008330:	jne    0x140008338
   140008332:	add    rcx,0x2
   140008336:	jmp    0x140008326
   140008338:	cmp    WORD PTR [rcx],r14w
   14000833c:	je     0x140008417
   140008342:	add    DWORD PTR [rbx],r15d
   140008345:	test   r10,r10
   140008348:	je     0x140008355
   14000834a:	cmp    DWORD PTR [rbx],esi
   14000834c:	jg     0x140008355
   14000834e:	mov    QWORD PTR [r10],r8
   140008351:	add    r10,0x8
   140008355:	mov    esi,0x22
   14000835a:	mov    r9d,r15d
   14000835d:	mov    edx,r14d
   140008360:	jmp    0x140008369
   140008362:	add    rcx,0x2
   140008366:	add    edx,r15d
   140008369:	cmp    WORD PTR [rcx],r13w
   14000836d:	je     0x140008362
   14000836f:	cmp    WORD PTR [rcx],si
   140008372:	jne    0x1400083b1
   140008374:	test   r15b,dl
   140008377:	jne    0x140008396
   140008379:	test   edi,edi
   14000837b:	je     0x140008389
   14000837d:	cmp    WORD PTR [rcx+0x2],si
   140008381:	jne    0x140008389
   140008383:	add    rcx,0x2
   140008387:	jmp    0x14000838c
   140008389:	mov    r9d,r14d
   14000838c:	test   edi,edi
   14000838e:	mov    eax,r14d
   140008391:	sete   al
   140008394:	mov    edi,eax
   140008396:	shr    edx,1
   140008398:	jmp    0x1400083b1
   14000839a:	add    DWORD PTR [r11],r15d
   14000839d:	dec    edx
   14000839f:	test   r8,r8
   1400083a2:	je     0x1400083b1
   1400083a4:	cmp    DWORD PTR [r11],ebp
   1400083a7:	jg     0x1400083b1
   1400083a9:	mov    WORD PTR [r8],r13w
   1400083ad:	add    r8,0x2
   1400083b1:	test   edx,edx
   1400083b3:	jne    0x14000839a
   1400083b5:	cmp    WORD PTR [rcx],r14w
   1400083b9:	je     0x1400083f1
   1400083bb:	test   edi,edi
   1400083bd:	jne    0x1400083cb
   1400083bf:	cmp    WORD PTR [rcx],0x20
   1400083c3:	je     0x1400083f1
   1400083c5:	cmp    WORD PTR [rcx],0x9
   1400083c9:	je     0x1400083f1
   1400083cb:	test   r9d,r9d
   1400083ce:	je     0x1400083e8
   1400083d0:	add    DWORD PTR [r11],r15d
   1400083d3:	test   r8,r8
   1400083d6:	je     0x1400083e8
   1400083d8:	cmp    DWORD PTR [r11],ebp
   1400083db:	jg     0x1400083e8
   1400083dd:	movzx  eax,WORD PTR [rcx]
   1400083e0:	mov    WORD PTR [r8],ax
   1400083e4:	add    r8,0x2
   1400083e8:	add    rcx,0x2
   1400083ec:	jmp    0x14000835a
   1400083f1:	add    DWORD PTR [r11],r15d
   1400083f4:	mov    esi,DWORD PTR [rsp+0x40]
   1400083f8:	test   r8,r8
   1400083fb:	je     0x14000831c
   140008401:	cmp    DWORD PTR [r11],ebp
   140008404:	jg     0x14000831c
   14000840a:	mov    WORD PTR [r8],r14w
   14000840e:	add    r8,0x2
   140008412:	jmp    0x14000831c
   140008417:	add    DWORD PTR [rbx],r15d
   14000841a:	test   r10,r10
   14000841d:	je     0x140008426
   14000841f:	cmp    DWORD PTR [rbx],esi
   140008421:	jg     0x140008426
   140008423:	mov    QWORD PTR [r10],r14
   140008426:	mov    rbx,QWORD PTR [rsp+0x20]
   14000842b:	mov    rbp,QWORD PTR [rsp+0x28]
   140008430:	mov    rsi,QWORD PTR [rsp+0x30]
   140008435:	mov    rdi,QWORD PTR [rsp+0x38]
   14000843a:	pop    r15
   14000843c:	pop    r14
   14000843e:	pop    r13
   140008440:	ret    
   140008441:	int3   
   140008442:	int3   
   140008443:	int3   
   140008444:	int3   
   140008445:	int3   
   140008446:	int3   
   140008447:	int3   
   140008448:	mov    rax,rsp
   14000844b:	mov    QWORD PTR [rax+0x8],rbx
   14000844f:	mov    QWORD PTR [rax+0x10],rsi
   140008453:	mov    QWORD PTR [rax+0x18],rdi
   140008457:	mov    QWORD PTR [rax+0x20],r14
   14000845b:	push   r15
   14000845d:	sub    rsp,0x30
   140008461:	mov    rbx,QWORD PTR [rip+0xa060]        # 0x1400124c8
   140008468:	xor    r15d,r15d
   14000846b:	mov    rax,rbx
   14000846e:	test   rbx,rbx
   140008471:	jne    0x14000847b
   140008473:	or     eax,0xffffffff
   140008476:	jmp    0x140008570
   14000847b:	movzx  edx,WORD PTR [rbx]
   14000847e:	mov    rsi,r15
   140008481:	mov    r8,r15
   140008484:	jmp    0x1400084aa
   140008486:	or     rcx,0xffffffffffffffff
   14000848a:	inc    rcx
   14000848d:	cmp    WORD PTR [rax+rcx*2],r15w
   140008492:	jne    0x14000848a
   140008494:	inc    rcx
   140008497:	cmp    dx,0x3d
   14000849b:	je     0x1400084a3
   14000849d:	inc    rsi
   1400084a0:	add    r8,rcx
   1400084a3:	lea    rax,[rax+rcx*2]
   1400084a7:	movzx  edx,WORD PTR [rax]
   1400084aa:	test   dx,dx
   1400084ad:	jne    0x140008486
   1400084af:	lea    r14,[rsi+0x1]
   1400084b3:	mov    edx,0x1
   1400084b8:	lea    r14,[r8+r14*4]
   1400084bc:	add    r14,r14
   1400084bf:	mov    rcx,r14
   1400084c2:	call   0x14000b910
   1400084c7:	mov    rdi,rax
   1400084ca:	test   rax,rax
   1400084cd:	je     0x140008473
   1400084cf:	mov    QWORD PTR [rip+0xa05a],rax        # 0x140012530
   1400084d6:	add    rax,r14
   1400084d9:	mov    QWORD PTR [rip+0xa018],rdi        # 0x1400124f8
   1400084e0:	mov    QWORD PTR [rip+0xc539],rax        # 0x140014a20
   1400084e7:	movzx  eax,WORD PTR [rbx]
   1400084ea:	lea    r14,[rsi+0x1]
   1400084ee:	lea    r14,[rdi+r14*8]
   1400084f2:	test   ax,ax
   1400084f5:	je     0x140008552
   1400084f7:	or     rsi,0xffffffffffffffff
   1400084fb:	inc    rsi
   1400084fe:	cmp    WORD PTR [rbx+rsi*2],r15w
   140008503:	jne    0x1400084fb
   140008505:	inc    rsi
   140008508:	cmp    ax,0x3d
   14000850c:	je     0x14000853f
   14000850e:	mov    r8,rbx
   140008511:	mov    rdx,rsi
   140008514:	mov    rcx,r14
   140008517:	mov    QWORD PTR [rdi],r14
   14000851a:	call   0x14000ba14
   14000851f:	test   eax,eax
   140008521:	je     0x140008537
   140008523:	xor    r9d,r9d
   140008526:	xor    r8d,r8d
   140008529:	xor    edx,edx
   14000852b:	xor    ecx,ecx
   14000852d:	mov    QWORD PTR [rsp+0x20],r15
   140008532:	call   0x14000976c
   140008537:	lea    r14,[r14+rsi*2]
   14000853b:	add    rdi,0x8
   14000853f:	lea    rbx,[rbx+rsi*2]
   140008543:	movzx  eax,WORD PTR [rbx]
   140008546:	test   ax,ax
   140008549:	jne    0x1400084f7
   14000854b:	mov    rbx,QWORD PTR [rip+0x9f76]        # 0x1400124c8
   140008552:	mov    rcx,rbx
   140008555:	call   0x14000b0d0
   14000855a:	mov    QWORD PTR [rip+0x9f67],r15        # 0x1400124c8
   140008561:	mov    QWORD PTR [rdi],r15
   140008564:	mov    DWORD PTR [rip+0xc4de],0x1        # 0x140014a4c
   14000856e:	xor    eax,eax
   140008570:	mov    rbx,QWORD PTR [rsp+0x40]
   140008575:	mov    rsi,QWORD PTR [rsp+0x48]
   14000857a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000857f:	mov    r14,QWORD PTR [rsp+0x58]
   140008584:	add    rsp,0x30
   140008588:	pop    r15
   14000858a:	ret    
   14000858b:	int3   
   14000858c:	int3   
   14000858d:	int3   
   14000858e:	int3   
   14000858f:	int3   
   140008590:	int3   
   140008591:	int3   
   140008592:	int3   
   140008593:	int3   
   140008594:	mov    QWORD PTR [rsp+0x20],rbx
   140008599:	push   rbp
   14000859a:	mov    rbp,rsp
   14000859d:	sub    rsp,0x20
   1400085a1:	mov    rax,QWORD PTR [rip+0x8bc8]        # 0x140011170
   1400085a8:	and    QWORD PTR [rbp+0x18],0x0
   1400085ad:	movabs rbx,0x2b992ddfa232
   1400085b7:	cmp    rax,rbx
   1400085ba:	jne    0x140008653
   1400085c0:	lea    rcx,[rbp+0x18]
   1400085c4:	call   QWORD PTR [rip+0xe03e]        # 0x140016608
   1400085ca:	mov    r11,QWORD PTR [rbp+0x18]
   1400085ce:	mov    QWORD PTR [rbp+0x10],r11
   1400085d2:	call   QWORD PTR [rip+0xe028]        # 0x140016600
   1400085d8:	mov    r11d,eax
   1400085db:	xor    QWORD PTR [rbp+0x10],r11
   1400085df:	call   QWORD PTR [rip+0xdfab]        # 0x140016590
   1400085e5:	mov    r11d,eax
   1400085e8:	xor    QWORD PTR [rbp+0x10],r11
   1400085ec:	call   QWORD PTR [rip+0xde7e]        # 0x140016470
   1400085f2:	mov    r11d,eax
   1400085f5:	shl    r11,0x18
   1400085f9:	xor    QWORD PTR [rbp+0x10],r11
   1400085fd:	call   QWORD PTR [rip+0xde6d]        # 0x140016470
   140008603:	lea    rcx,[rbp+0x20]
   140008607:	mov    r11d,eax
   14000860a:	lea    rax,[rbp+0x10]
   14000860e:	xor    r11,QWORD PTR [rbp+0x10]
   140008612:	xor    r11,rax
   140008615:	mov    QWORD PTR [rbp+0x10],r11
   140008619:	call   QWORD PTR [rip+0xdfd9]        # 0x1400165f8
   14000861f:	mov    eax,DWORD PTR [rbp+0x20]
   140008622:	shl    rax,0x20
   140008626:	movabs rcx,0xffffffffffff
   140008630:	xor    rax,QWORD PTR [rbp+0x20]
   140008634:	xor    rax,QWORD PTR [rbp+0x10]
   140008638:	and    rax,rcx
   14000863b:	movabs rcx,0x2b992ddfa233
   140008645:	cmp    rax,rbx
   140008648:	cmove  rax,rcx
   14000864c:	mov    QWORD PTR [rip+0x8b1d],rax        # 0x140011170
   140008653:	mov    rbx,QWORD PTR [rsp+0x48]
   140008658:	not    rax
   14000865b:	mov    QWORD PTR [rip+0x8b16],rax        # 0x140011178
   140008662:	add    rsp,0x20
   140008666:	pop    rbp
   140008667:	ret    
   140008668:	int3   
   140008669:	int3   
   14000866a:	int3   
   14000866b:	int3   
   14000866c:	int3   
   14000866d:	int3   
   14000866e:	int3   
   14000866f:	int3   
   140008670:	mov    QWORD PTR [rsp+0x8],rbx
   140008675:	mov    QWORD PTR [rsp+0x10],rbp
   14000867a:	mov    QWORD PTR [rsp+0x18],rsi
   14000867f:	push   rdi
   140008680:	sub    rsp,0x20
   140008684:	call   QWORD PTR [rip+0xdf86]        # 0x140016610
   14000868a:	xor    ebx,ebx
   14000868c:	mov    rdi,rax
   14000868f:	test   rax,rax
   140008692:	je     0x1400086e0
   140008694:	cmp    WORD PTR [rdi],bx
   140008697:	je     0x1400086ab
   140008699:	add    rax,0x2
   14000869d:	cmp    WORD PTR [rax],bx
   1400086a0:	jne    0x140008699
   1400086a2:	add    rax,0x2
   1400086a6:	cmp    WORD PTR [rax],bx
   1400086a9:	jne    0x140008699
   1400086ab:	sub    eax,edi
   1400086ad:	add    eax,0x2
   1400086b0:	movsxd rbp,eax
   1400086b3:	mov    rcx,rbp
   1400086b6:	call   0x14000b958
   1400086bb:	mov    rsi,rax
   1400086be:	test   rax,rax
   1400086c1:	je     0x1400086d4
   1400086c3:	mov    r8,rbp
   1400086c6:	mov    rdx,rdi
   1400086c9:	mov    rcx,rax
   1400086cc:	call   0x14000fac0
   1400086d1:	mov    rbx,rsi
   1400086d4:	mov    rcx,rdi
   1400086d7:	call   QWORD PTR [rip+0xdf3b]        # 0x140016618
   1400086dd:	mov    rax,rbx
   1400086e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400086e5:	mov    rbp,QWORD PTR [rsp+0x38]
   1400086ea:	mov    rsi,QWORD PTR [rsp+0x40]
   1400086ef:	add    rsp,0x20
   1400086f3:	pop    rdi
   1400086f4:	ret    
   1400086f5:	int3   
   1400086f6:	int3   
   1400086f7:	int3   
   1400086f8:	int3   
   1400086f9:	int3   
   1400086fa:	int3   
   1400086fb:	int3   
   1400086fc:	rex.W jmp QWORD PTR [rip+0xdf1d]        # 0x140016620
   140008703:	int3   
   140008704:	int3   
   140008705:	int3   
   140008706:	int3   
   140008707:	int3   
   140008708:	int3   
   140008709:	int3   
   14000870a:	int3   
   14000870b:	int3   
   14000870c:	mov    rax,rsp
   14000870f:	mov    QWORD PTR [rax+0x8],rbx
   140008713:	mov    QWORD PTR [rax+0x10],rbp
   140008717:	mov    QWORD PTR [rax+0x18],rsi
   14000871b:	mov    QWORD PTR [rax+0x20],rdi
   14000871f:	push   r14
   140008721:	sub    rsp,0x20
   140008725:	mov    r10,QWORD PTR [r9+0x38]
   140008729:	mov    rsi,rdx
   14000872c:	mov    r14,r8
   14000872f:	mov    ebx,DWORD PTR [r10]
   140008732:	mov    rbp,rcx
   140008735:	mov    rdx,r9
   140008738:	shl    rbx,0x4
   14000873c:	mov    rcx,rsi
   14000873f:	mov    rdi,r9
   140008742:	add    rbx,r10
   140008745:	lea    r8,[rbx+0x4]
   140008749:	call   0x14000baa8
   14000874e:	mov    r11d,DWORD PTR [rbx+0x4]
   140008752:	mov    r10d,DWORD PTR [rbp+0x4]
   140008756:	mov    eax,r11d
   140008759:	and    r11d,0x2
   14000875d:	mov    edx,0x1
   140008762:	and    eax,edx
   140008764:	and    r10b,0x66
   140008768:	cmove  r11d,eax
   14000876c:	test   r11d,r11d
   14000876f:	je     0x140008784
   140008771:	mov    r9,rdi
   140008774:	mov    r8,r14
   140008777:	mov    rdx,rsi
   14000877a:	mov    rcx,rbp
   14000877d:	call   0x14000a974
   140008782:	mov    edx,eax
   140008784:	mov    rbx,QWORD PTR [rsp+0x30]
   140008789:	mov    rbp,QWORD PTR [rsp+0x38]
   14000878e:	mov    rsi,QWORD PTR [rsp+0x40]
   140008793:	mov    rdi,QWORD PTR [rsp+0x48]
   140008798:	mov    eax,edx
   14000879a:	add    rsp,0x20
   14000879e:	pop    r14
   1400087a0:	ret    
   1400087a1:	int3   
   1400087a2:	int3   
   1400087a3:	int3   
   1400087a4:	int3   
   1400087a5:	int3   
   1400087a6:	int3   
   1400087a7:	int3   
   1400087a8:	mov    QWORD PTR [rsp+0x8],rcx
   1400087ad:	push   rbp
   1400087ae:	mov    rbp,rsp
   1400087b1:	sub    rsp,0x80
   1400087b8:	lea    rcx,[rip+0xa351]        # 0x140012b10
   1400087bf:	call   QWORD PTR [rip+0xdfb3]        # 0x140016778
   1400087c5:	mov    rax,QWORD PTR [rip+0xa43c]        # 0x140012c08
   1400087cc:	mov    QWORD PTR [rsp+0x48],rax
   1400087d1:	xor    r8d,r8d
   1400087d4:	lea    rdx,[rsp+0x50]
   1400087d9:	mov    rcx,QWORD PTR [rsp+0x48]
   1400087de:	call   QWORD PTR [rip+0xdf8c]        # 0x140016770
   1400087e4:	mov    QWORD PTR [rsp+0x40],rax
   1400087e9:	cmp    QWORD PTR [rsp+0x40],0x0
   1400087ef:	je     0x140008833
   1400087f1:	mov    QWORD PTR [rsp+0x38],0x0
   1400087fa:	lea    rax,[rsp+0x58]
   1400087ff:	mov    QWORD PTR [rsp+0x30],rax
   140008804:	lea    rax,[rsp+0x60]
   140008809:	mov    QWORD PTR [rsp+0x28],rax
   14000880e:	lea    rax,[rip+0xa2fb]        # 0x140012b10
   140008815:	mov    QWORD PTR [rsp+0x20],rax
   14000881a:	mov    r9,QWORD PTR [rsp+0x40]
   14000881f:	mov    r8,QWORD PTR [rsp+0x48]
   140008824:	mov    rdx,QWORD PTR [rsp+0x50]
   140008829:	xor    ecx,ecx
   14000882b:	call   QWORD PTR [rip+0xdf37]        # 0x140016768
   140008831:	jmp    0x140008856
   140008833:	mov    rax,QWORD PTR [rip+0xa36e]        # 0x140012ba8
   14000883a:	mov    rax,QWORD PTR [rax]
   14000883d:	mov    QWORD PTR [rip+0xa3c4],rax        # 0x140012c08
   140008844:	mov    rax,QWORD PTR [rip+0xa35d]        # 0x140012ba8
   14000884b:	add    rax,0x8
   14000884f:	mov    QWORD PTR [rip+0xa352],rax        # 0x140012ba8
   140008856:	mov    rax,QWORD PTR [rip+0xa3ab]        # 0x140012c08
   14000885d:	mov    QWORD PTR [rip+0xa21c],rax        # 0x140012a80
   140008864:	mov    rax,QWORD PTR [rbp+0x10]
   140008868:	mov    QWORD PTR [rip+0xa321],rax        # 0x140012b90
   14000886f:	mov    DWORD PTR [rip+0xa1f7],0xc0000409        # 0x140012a70
   140008879:	mov    DWORD PTR [rip+0xa1f1],0x1        # 0x140012a74
   140008883:	mov    DWORD PTR [rip+0xa1fb],0x3        # 0x140012a88
   14000888d:	mov    QWORD PTR [rip+0xa1f8],0x2        # 0x140012a90
   140008898:	mov    rax,QWORD PTR [rip+0x88d1]        # 0x140011170
   14000889f:	mov    QWORD PTR [rip+0xa1f2],rax        # 0x140012a98
   1400088a6:	mov    rax,QWORD PTR [rip+0x88cb]        # 0x140011178
   1400088ad:	mov    QWORD PTR [rip+0xa1ec],rax        # 0x140012aa0
   1400088b4:	mov    rax,QWORD PTR [rip+0x88b5]        # 0x140011170
   1400088bb:	mov    QWORD PTR [rsp+0x68],rax
   1400088c0:	mov    rax,QWORD PTR [rip+0x88b1]        # 0x140011178
   1400088c7:	mov    QWORD PTR [rsp+0x70],rax
   1400088cc:	lea    rcx,[rip+0xffffffffffff8fed]        # 0x1400018c0
   1400088d3:	call   0x1400088e8
   1400088d8:	add    rsp,0x80
   1400088df:	pop    rbp
   1400088e0:	ret    
   1400088e1:	int3   
   1400088e2:	int3   
   1400088e3:	int3   
   1400088e4:	int3   
   1400088e5:	int3   
   1400088e6:	int3   
   1400088e7:	int3   
   1400088e8:	rex push rbx
   1400088ea:	sub    rsp,0x20
   1400088ee:	mov    rbx,rcx
   1400088f1:	xor    ecx,ecx
   1400088f3:	call   QWORD PTR [rip+0xdc57]        # 0x140016550
   1400088f9:	mov    rcx,rbx
   1400088fc:	call   QWORD PTR [rip+0xdd26]        # 0x140016628
   140008902:	call   QWORD PTR [rip+0xdd28]        # 0x140016630
   140008908:	mov    edx,0xc0000409
   14000890d:	mov    rcx,rax
   140008910:	add    rsp,0x20
   140008914:	pop    rbx
   140008915:	rex.W jmp QWORD PTR [rip+0xdd1c]        # 0x140016638
   14000891c:	int3   
   14000891d:	int3   
   14000891e:	int3   
   14000891f:	int3   
   140008920:	int3   
   140008921:	int3   
   140008922:	int3   
   140008923:	int3   
   140008924:	rex push rbx
   140008926:	sub    rsp,0x20
   14000892a:	call   0x14000755c
   14000892f:	mov    rbx,rax
   140008932:	test   BYTE PTR [rax+0xc8],0x2
   140008939:	jne    0x140008944
   14000893b:	test   BYTE PTR [rip+0x907e],0x1        # 0x1400119c0
   140008942:	jne    0x14000894e
   140008944:	cmp    QWORD PTR [rax+0xc0],0x0
   14000894c:	jne    0x14000897b
   14000894e:	mov    ecx,0xc
   140008953:	call   0x14000b064
   140008958:	nop
   140008959:	lea    rcx,[rbx+0xc0]
   140008960:	mov    rdx,QWORD PTR [rip+0x8ee1]        # 0x140011848
   140008967:	call   0x140008c64
   14000896c:	mov    rbx,rax
   14000896f:	mov    ecx,0xc
   140008974:	call   0x14000b0b0
   140008979:	jmp    0x140008987
   14000897b:	call   0x14000755c
   140008980:	mov    rbx,QWORD PTR [rax+0xc0]
   140008987:	test   rbx,rbx
   14000898a:	jne    0x140008994
   14000898c:	lea    ecx,[rbx+0x20]
   14000898f:	call   0x14000784c
   140008994:	mov    rax,rbx
   140008997:	add    rsp,0x20
   14000899b:	pop    rbx
   14000899c:	ret    
   14000899d:	int3   
   14000899e:	int3   
   14000899f:	int3   
   1400089a0:	int3   
   1400089a1:	int3   
   1400089a2:	int3   
   1400089a3:	int3   
   1400089a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400089a9:	mov    QWORD PTR [rsp+0x10],rsi
   1400089ae:	push   rdi
   1400089af:	sub    rsp,0x20
   1400089b3:	mov    rax,QWORD PTR [rcx+0x128]
   1400089ba:	mov    rbx,rcx
   1400089bd:	test   rax,rax
   1400089c0:	je     0x140008a3b
   1400089c2:	lea    rcx,[rip+0x9697]        # 0x140012060
   1400089c9:	cmp    rax,rcx
   1400089cc:	je     0x140008a3b
   1400089ce:	mov    rax,QWORD PTR [rbx+0x110]
   1400089d5:	test   rax,rax
   1400089d8:	je     0x140008a3b
   1400089da:	cmp    DWORD PTR [rax],0x0
   1400089dd:	jne    0x140008a3b
   1400089df:	mov    rcx,QWORD PTR [rbx+0x120]
   1400089e6:	test   rcx,rcx
   1400089e9:	je     0x140008a01
   1400089eb:	cmp    DWORD PTR [rcx],0x0
   1400089ee:	jne    0x140008a01
   1400089f0:	call   0x14000b0d0
   1400089f5:	mov    rcx,QWORD PTR [rbx+0x128]
   1400089fc:	call   0x14000bb38
   140008a01:	mov    rcx,QWORD PTR [rbx+0x118]
   140008a08:	test   rcx,rcx
   140008a0b:	je     0x140008a23
   140008a0d:	cmp    DWORD PTR [rcx],0x0
   140008a10:	jne    0x140008a23
   140008a12:	call   0x14000b0d0
   140008a17:	mov    rcx,QWORD PTR [rbx+0x128]
   140008a1e:	call   0x14000bc48
   140008a23:	mov    rcx,QWORD PTR [rbx+0x110]
   140008a2a:	call   0x14000b0d0
   140008a2f:	mov    rcx,QWORD PTR [rbx+0x128]
   140008a36:	call   0x14000b0d0
   140008a3b:	mov    rax,QWORD PTR [rbx+0x130]
   140008a42:	test   rax,rax
   140008a45:	je     0x140008a8e
   140008a47:	cmp    DWORD PTR [rax],0x0
   140008a4a:	jne    0x140008a8e
   140008a4c:	mov    rcx,QWORD PTR [rbx+0x138]
   140008a53:	sub    rcx,0xfe
   140008a5a:	call   0x14000b0d0
   140008a5f:	mov    rcx,QWORD PTR [rbx+0x148]
   140008a66:	mov    edi,0x80
   140008a6b:	sub    rcx,rdi
   140008a6e:	call   0x14000b0d0
   140008a73:	mov    rcx,QWORD PTR [rbx+0x150]
   140008a7a:	sub    rcx,rdi
   140008a7d:	call   0x14000b0d0
   140008a82:	mov    rcx,QWORD PTR [rbx+0x130]
   140008a89:	call   0x14000b0d0
   140008a8e:	mov    rcx,QWORD PTR [rbx+0x158]
   140008a95:	lea    rax,[rip+0x9664]        # 0x140012100
   140008a9c:	cmp    rcx,rax
   140008a9f:	je     0x140008abb
   140008aa1:	cmp    DWORD PTR [rcx+0x160],0x0
   140008aa8:	jne    0x140008abb
   140008aaa:	call   0x14000bcbc
   140008aaf:	mov    rcx,QWORD PTR [rbx+0x158]
   140008ab6:	call   0x14000b0d0
   140008abb:	lea    rdi,[rbx+0x58]
   140008abf:	mov    esi,0x6
   140008ac4:	lea    rax,[rip+0x8d79]        # 0x140011844
   140008acb:	cmp    QWORD PTR [rdi-0x10],rax
   140008acf:	je     0x140008ae3
   140008ad1:	mov    rcx,QWORD PTR [rdi]
   140008ad4:	test   rcx,rcx
   140008ad7:	je     0x140008ae3
   140008ad9:	cmp    DWORD PTR [rcx],0x0
   140008adc:	jne    0x140008ae3
   140008ade:	call   0x14000b0d0
   140008ae3:	cmp    QWORD PTR [rdi-0x8],0x0
   140008ae8:	je     0x140008afd
   140008aea:	mov    rcx,QWORD PTR [rdi+0x8]
   140008aee:	test   rcx,rcx
   140008af1:	je     0x140008afd
   140008af3:	cmp    DWORD PTR [rcx],0x0
   140008af6:	jne    0x140008afd
   140008af8:	call   0x14000b0d0
   140008afd:	add    rdi,0x20
   140008b01:	dec    rsi
   140008b04:	jne    0x140008ac4
   140008b06:	mov    rcx,rbx
   140008b09:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b0e:	mov    rsi,QWORD PTR [rsp+0x38]
   140008b13:	add    rsp,0x20
   140008b17:	pop    rdi
   140008b18:	jmp    0x14000b0d0
   140008b1d:	int3   
   140008b1e:	int3   
   140008b1f:	int3   
   140008b20:	int3   
   140008b21:	int3   
   140008b22:	int3   
   140008b23:	int3   
   140008b24:	lock inc DWORD PTR [rcx]
   140008b27:	mov    rax,QWORD PTR [rcx+0x110]
   140008b2e:	test   rax,rax
   140008b31:	je     0x140008b36
   140008b33:	lock inc DWORD PTR [rax]
   140008b36:	mov    rax,QWORD PTR [rcx+0x120]
   140008b3d:	test   rax,rax
   140008b40:	je     0x140008b45
   140008b42:	lock inc DWORD PTR [rax]
   140008b45:	mov    rax,QWORD PTR [rcx+0x118]
   140008b4c:	test   rax,rax
   140008b4f:	je     0x140008b54
   140008b51:	lock inc DWORD PTR [rax]
   140008b54:	mov    rax,QWORD PTR [rcx+0x130]
   140008b5b:	test   rax,rax
   140008b5e:	je     0x140008b63
   140008b60:	lock inc DWORD PTR [rax]
   140008b63:	lea    rax,[rcx+0x58]
   140008b67:	mov    r8d,0x6
   140008b6d:	lea    rdx,[rip+0x8cd0]        # 0x140011844
   140008b74:	cmp    QWORD PTR [rax-0x10],rdx
   140008b78:	je     0x140008b85
   140008b7a:	mov    rdx,QWORD PTR [rax]
   140008b7d:	test   rdx,rdx
   140008b80:	je     0x140008b85
   140008b82:	lock inc DWORD PTR [rdx]
   140008b85:	cmp    QWORD PTR [rax-0x8],0x0
   140008b8a:	je     0x140008b98
   140008b8c:	mov    rdx,QWORD PTR [rax+0x8]
   140008b90:	test   rdx,rdx
   140008b93:	je     0x140008b98
   140008b95:	lock inc DWORD PTR [rdx]
   140008b98:	add    rax,0x20
   140008b9c:	dec    r8
   140008b9f:	jne    0x140008b6d
   140008ba1:	mov    rax,QWORD PTR [rcx+0x158]
   140008ba8:	lock inc DWORD PTR [rax+0x160]
   140008baf:	ret    
   140008bb0:	int3   
   140008bb1:	int3   
   140008bb2:	int3   
   140008bb3:	int3   
   140008bb4:	int3   
   140008bb5:	int3   
   140008bb6:	int3   
   140008bb7:	int3   
   140008bb8:	test   rcx,rcx
   140008bbb:	je     0x140008c58
   140008bc1:	or     r9d,0xffffffff
   140008bc5:	lock add DWORD PTR [rcx],r9d
   140008bc9:	mov    rax,QWORD PTR [rcx+0x110]
   140008bd0:	test   rax,rax
   140008bd3:	je     0x140008bd9
   140008bd5:	lock add DWORD PTR [rax],r9d
   140008bd9:	mov    rax,QWORD PTR [rcx+0x120]
   140008be0:	test   rax,rax
   140008be3:	je     0x140008be9
   140008be5:	lock add DWORD PTR [rax],r9d
   140008be9:	mov    rax,QWORD PTR [rcx+0x118]
   140008bf0:	test   rax,rax
   140008bf3:	je     0x140008bf9
   140008bf5:	lock add DWORD PTR [rax],r9d
   140008bf9:	mov    rax,QWORD PTR [rcx+0x130]
   140008c00:	test   rax,rax
   140008c03:	je     0x140008c09
   140008c05:	lock add DWORD PTR [rax],r9d
   140008c09:	lea    rax,[rcx+0x58]
   140008c0d:	mov    r8d,0x6
   140008c13:	lea    rdx,[rip+0x8c2a]        # 0x140011844
   140008c1a:	cmp    QWORD PTR [rax-0x10],rdx
   140008c1e:	je     0x140008c2c
   140008c20:	mov    rdx,QWORD PTR [rax]
   140008c23:	test   rdx,rdx
   140008c26:	je     0x140008c2c
   140008c28:	lock add DWORD PTR [rdx],r9d
   140008c2c:	cmp    QWORD PTR [rax-0x8],0x0
   140008c31:	je     0x140008c40
   140008c33:	mov    rdx,QWORD PTR [rax+0x8]
   140008c37:	test   rdx,rdx
   140008c3a:	je     0x140008c40
   140008c3c:	lock add DWORD PTR [rdx],r9d
   140008c40:	add    rax,0x20
   140008c44:	dec    r8
   140008c47:	jne    0x140008c13
   140008c49:	mov    rax,QWORD PTR [rcx+0x158]
   140008c50:	lock add DWORD PTR [rax+0x160],r9d
   140008c58:	mov    rax,rcx
   140008c5b:	ret    
   140008c5c:	int3   
   140008c5d:	int3   
   140008c5e:	int3   
   140008c5f:	int3   
   140008c60:	int3   
   140008c61:	int3   
   140008c62:	int3   
   140008c63:	int3   
   140008c64:	mov    QWORD PTR [rsp+0x8],rbx
   140008c69:	push   rdi
   140008c6a:	sub    rsp,0x20
   140008c6e:	mov    rdi,rdx
   140008c71:	test   rdx,rdx
   140008c74:	je     0x140008cb9
   140008c76:	test   rcx,rcx
   140008c79:	je     0x140008cb9
   140008c7b:	mov    rbx,QWORD PTR [rcx]
   140008c7e:	cmp    rbx,rdx
   140008c81:	je     0x140008cb4
   140008c83:	mov    QWORD PTR [rcx],rdx
   140008c86:	mov    rcx,rdx
   140008c89:	call   0x140008b24
   140008c8e:	test   rbx,rbx
   140008c91:	je     0x140008cb4
   140008c93:	mov    rcx,rbx
   140008c96:	call   0x140008bb8
   140008c9b:	cmp    DWORD PTR [rbx],0x0
   140008c9e:	jne    0x140008cb4
   140008ca0:	lea    rax,[rip+0x8ba9]        # 0x140011850
   140008ca7:	cmp    rbx,rax
   140008caa:	je     0x140008cb4
   140008cac:	mov    rcx,rbx
   140008caf:	call   0x1400089a4
   140008cb4:	mov    rax,rdi
   140008cb7:	jmp    0x140008cbb
   140008cb9:	xor    eax,eax
   140008cbb:	mov    rbx,QWORD PTR [rsp+0x30]
   140008cc0:	add    rsp,0x20
   140008cc4:	pop    rdi
   140008cc5:	ret    
   140008cc6:	int3   
   140008cc7:	int3   
   140008cc8:	int3   
   140008cc9:	int3   
   140008cca:	int3   
   140008ccb:	int3   
   140008ccc:	sub    rsp,0x28
   140008cd0:	cmp    DWORD PTR [rip+0xbd71],0x0        # 0x140014a48
   140008cd7:	jne    0x140008ced
   140008cd9:	mov    ecx,0xfffffffd
   140008cde:	call   0x140008dc0
   140008ce3:	mov    DWORD PTR [rip+0xbd5b],0x1        # 0x140014a48
   140008ced:	xor    eax,eax
   140008cef:	add    rsp,0x28
   140008cf3:	ret    
   140008cf4:	int3   
   140008cf5:	int3   
   140008cf6:	int3   
   140008cf7:	int3   
   140008cf8:	int3   
   140008cf9:	int3   
   140008cfa:	int3   
   140008cfb:	int3   
   140008cfc:	mov    QWORD PTR [rsp+0x10],rbx
   140008d01:	push   rdi
   140008d02:	sub    rsp,0x20
   140008d06:	call   0x14000755c
   140008d0b:	mov    rdi,rax
   140008d0e:	test   BYTE PTR [rax+0xc8],0x2
   140008d15:	jne    0x140008d20
   140008d17:	test   BYTE PTR [rip+0x8ca2],0x1        # 0x1400119c0
   140008d1e:	jne    0x140008d2a
   140008d20:	cmp    QWORD PTR [rax+0xc0],0x0
   140008d28:	jne    0x140008d98
   140008d2a:	mov    ecx,0xd
   140008d2f:	call   0x14000b064
   140008d34:	nop
   140008d35:	mov    rbx,QWORD PTR [rdi+0xb8]
   140008d3c:	mov    QWORD PTR [rsp+0x30],rbx
   140008d41:	cmp    rbx,QWORD PTR [rip+0x8650]        # 0x140011398
   140008d48:	je     0x140008d8c
   140008d4a:	test   rbx,rbx
   140008d4d:	je     0x140008d6a
   140008d4f:	lock dec DWORD PTR [rbx]
   140008d52:	jne    0x140008d6a
   140008d54:	lea    rax,[rip+0x8745]        # 0x1400114a0
   140008d5b:	mov    rcx,QWORD PTR [rsp+0x30]
   140008d60:	cmp    rcx,rax
   140008d63:	je     0x140008d6a
   140008d65:	call   0x14000b0d0
   140008d6a:	mov    rax,QWORD PTR [rip+0x8627]        # 0x140011398
   140008d71:	mov    QWORD PTR [rdi+0xb8],rax
   140008d78:	mov    rax,QWORD PTR [rip+0x8619]        # 0x140011398
   140008d7f:	mov    QWORD PTR [rsp+0x30],rax
   140008d84:	lock inc DWORD PTR [rax]
   140008d87:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d8c:	mov    ecx,0xd
   140008d91:	call   0x14000b0b0
   140008d96:	jmp    0x140008d9f
   140008d98:	mov    rbx,QWORD PTR [rax+0xb8]
   140008d9f:	test   rbx,rbx
   140008da2:	jne    0x140008dac
   140008da4:	lea    ecx,[rbx+0x20]
   140008da7:	call   0x14000784c
   140008dac:	mov    rax,rbx
   140008daf:	mov    rbx,QWORD PTR [rsp+0x38]
   140008db4:	add    rsp,0x20
   140008db8:	pop    rdi
   140008db9:	ret    
   140008dba:	int3   
   140008dbb:	int3   
   140008dbc:	int3   
   140008dbd:	int3   
   140008dbe:	int3   
   140008dbf:	int3   
   140008dc0:	mov    rax,rsp
   140008dc3:	mov    QWORD PTR [rax+0x8],rbx
   140008dc7:	mov    QWORD PTR [rax+0x10],rsi
   140008dcb:	mov    QWORD PTR [rax+0x18],rdi
   140008dcf:	mov    QWORD PTR [rax+0x20],r14
   140008dd3:	push   r15
   140008dd5:	sub    rsp,0x30
   140008dd9:	mov    edi,ecx
   140008ddb:	or     r15d,0xffffffff
   140008ddf:	call   0x14000755c
   140008de4:	mov    rsi,rax
   140008de7:	call   0x140008cfc
   140008dec:	mov    rbx,QWORD PTR [rsi+0xb8]
   140008df3:	mov    ecx,edi
   140008df5:	call   0x140009240
   140008dfa:	mov    r14d,eax
   140008dfd:	cmp    eax,DWORD PTR [rbx+0x4]
   140008e00:	je     0x140008f81
   140008e06:	mov    ecx,0x220
   140008e0b:	call   0x14000b958
   140008e10:	mov    rbx,rax
   140008e13:	xor    edi,edi
   140008e15:	test   rax,rax
   140008e18:	je     0x140008f86
   140008e1e:	mov    rdx,QWORD PTR [rsi+0xb8]
   140008e25:	mov    rcx,rax
   140008e28:	mov    r8d,0x220
   140008e2e:	call   0x14000fac0
   140008e33:	mov    DWORD PTR [rbx],edi
   140008e35:	mov    rdx,rbx
   140008e38:	mov    ecx,r14d
   140008e3b:	call   0x140008fac
   140008e40:	mov    r15d,eax
   140008e43:	test   eax,eax
   140008e45:	jne    0x140008f5b
   140008e4b:	mov    rcx,QWORD PTR [rsi+0xb8]
   140008e52:	lea    r14,[rip+0x8647]        # 0x1400114a0
   140008e59:	lock dec DWORD PTR [rcx]
   140008e5c:	jne    0x140008e6f
   140008e5e:	mov    rcx,QWORD PTR [rsi+0xb8]
   140008e65:	cmp    rcx,r14
   140008e68:	je     0x140008e6f
   140008e6a:	call   0x14000b0d0
   140008e6f:	mov    QWORD PTR [rsi+0xb8],rbx
   140008e76:	lock inc DWORD PTR [rbx]
   140008e79:	test   BYTE PTR [rsi+0xc8],0x2
   140008e80:	jne    0x140008f86
   140008e86:	test   BYTE PTR [rip+0x8b33],0x1        # 0x1400119c0
   140008e8d:	je     0x140008f86
   140008e93:	mov    esi,0xd
   140008e98:	mov    ecx,esi
   140008e9a:	call   0x14000b064
   140008e9f:	nop
   140008ea0:	mov    eax,DWORD PTR [rbx+0x4]
   140008ea3:	mov    DWORD PTR [rip+0xa13f],eax        # 0x140012fe8
   140008ea9:	mov    eax,DWORD PTR [rbx+0x8]
   140008eac:	mov    DWORD PTR [rip+0xa13a],eax        # 0x140012fec
   140008eb2:	mov    eax,DWORD PTR [rbx+0xc]
   140008eb5:	mov    DWORD PTR [rip+0xa135],eax        # 0x140012ff0
   140008ebb:	mov    edx,edi
   140008ebd:	lea    r8,[rip+0xffffffffffff713c]        # 0x140000000
   140008ec4:	mov    DWORD PTR [rsp+0x20],edx
   140008ec8:	cmp    edx,0x5
   140008ecb:	jge    0x140008ee2
   140008ecd:	movsxd rcx,edx
   140008ed0:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   140008ed5:	mov    WORD PTR [r8+rcx*2+0x12ff8],ax
   140008ede:	inc    edx
   140008ee0:	jmp    0x140008ec4
   140008ee2:	mov    edx,edi
   140008ee4:	mov    DWORD PTR [rsp+0x20],edx
   140008ee8:	cmp    edx,0x101
   140008eee:	jge    0x140008f03
   140008ef0:	movsxd rcx,edx
   140008ef3:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   140008ef7:	mov    BYTE PTR [rcx+r8*1+0x11290],al
   140008eff:	inc    edx
   140008f01:	jmp    0x140008ee4
   140008f03:	mov    DWORD PTR [rsp+0x20],edi
   140008f07:	cmp    edi,0x100
   140008f0d:	jge    0x140008f25
   140008f0f:	movsxd rcx,edi
   140008f12:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   140008f19:	mov    BYTE PTR [rcx+r8*1+0x113a0],al
   140008f21:	inc    edi
   140008f23:	jmp    0x140008f03
   140008f25:	mov    rcx,QWORD PTR [rip+0x846c]        # 0x140011398
   140008f2c:	or     eax,0xffffffff
   140008f2f:	lock xadd DWORD PTR [rcx],eax
   140008f33:	dec    eax
   140008f35:	jne    0x140008f48
   140008f37:	mov    rcx,QWORD PTR [rip+0x845a]        # 0x140011398
   140008f3e:	cmp    rcx,r14
   140008f41:	je     0x140008f48
   140008f43:	call   0x14000b0d0
   140008f48:	mov    QWORD PTR [rip+0x8449],rbx        # 0x140011398
   140008f4f:	lock inc DWORD PTR [rbx]
   140008f52:	mov    ecx,esi
   140008f54:	call   0x14000b0b0
   140008f59:	jmp    0x140008f86
   140008f5b:	cmp    eax,0xffffffff
   140008f5e:	jne    0x140008f86
   140008f60:	lea    r14,[rip+0x8539]        # 0x1400114a0
   140008f67:	cmp    rbx,r14
   140008f6a:	je     0x140008f74
   140008f6c:	mov    rcx,rbx
   140008f6f:	call   0x14000b0d0
   140008f74:	call   0x140009658
   140008f79:	mov    DWORD PTR [rax],0x16
   140008f7f:	jmp    0x140008f86
   140008f81:	xor    edi,edi
   140008f83:	mov    r15d,edi
   140008f86:	mov    eax,r15d
   140008f89:	mov    rbx,QWORD PTR [rsp+0x40]
   140008f8e:	mov    rsi,QWORD PTR [rsp+0x48]
   140008f93:	mov    rdi,QWORD PTR [rsp+0x50]
   140008f98:	mov    r14,QWORD PTR [rsp+0x58]
   140008f9d:	add    rsp,0x30
   140008fa1:	pop    r15
   140008fa3:	ret    
   140008fa4:	int3   
   140008fa5:	int3   
   140008fa6:	int3   
   140008fa7:	int3   
   140008fa8:	int3   
   140008fa9:	int3   
   140008faa:	int3   
   140008fab:	int3   
   140008fac:	mov    QWORD PTR [rsp+0x18],rbx
   140008fb1:	mov    QWORD PTR [rsp+0x20],rbp
   140008fb6:	push   rsi
   140008fb7:	push   rdi
   140008fb8:	push   r12
   140008fba:	push   r14
   140008fbc:	push   r15
   140008fbe:	sub    rsp,0x40
   140008fc2:	mov    rax,QWORD PTR [rip+0x81a7]        # 0x140011170
   140008fc9:	xor    rax,rsp
   140008fcc:	mov    QWORD PTR [rsp+0x38],rax
   140008fd1:	mov    rsi,rdx
   140008fd4:	call   0x140009240
   140008fd9:	xor    ebx,ebx
   140008fdb:	mov    edi,eax
   140008fdd:	test   eax,eax
   140008fdf:	jne    0x140008fee
   140008fe1:	mov    rcx,rsi
   140008fe4:	call   0x1400092d8
   140008fe9:	jmp    0x14000920f
   140008fee:	lea    r12,[rip+0x81ab]        # 0x1400111a0
   140008ff5:	mov    ecx,ebx
   140008ff7:	mov    r14,rbx
   140008ffa:	mov    rax,r12
   140008ffd:	mov    r15d,0x1
   140009003:	cmp    DWORD PTR [rax],edi
   140009005:	je     0x140009135
   14000900b:	add    ecx,r15d
   14000900e:	add    r14,r15
   140009011:	add    rax,0x30
   140009015:	cmp    ecx,0x5
   140009018:	jb     0x140009003
   14000901a:	cmp    edi,0xfde8
   140009020:	je     0x14000912d
   140009026:	cmp    edi,0xfde9
   14000902c:	je     0x14000912d
   140009032:	movzx  ecx,di
   140009035:	call   QWORD PTR [rip+0xd605]        # 0x140016640
   14000903b:	test   eax,eax
   14000903d:	je     0x14000912d
   140009043:	lea    rdx,[rsp+0x20]
   140009048:	mov    ecx,edi
   14000904a:	call   QWORD PTR [rip+0xd608]        # 0x140016658
   140009050:	test   eax,eax
   140009052:	je     0x140009121
   140009058:	lea    rcx,[rsi+0x1c]
   14000905c:	xor    edx,edx
   14000905e:	mov    r8d,0x101
   140009064:	call   0x14000c460
   140009069:	mov    DWORD PTR [rsi+0x4],edi
   14000906c:	mov    DWORD PTR [rsi+0xc],ebx
   14000906f:	cmp    DWORD PTR [rsp+0x20],r15d
   140009074:	jbe    0x14000910a
   14000907a:	lea    rax,[rsp+0x26]
   14000907f:	cmp    BYTE PTR [rsp+0x26],bl
   140009083:	je     0x1400090b6
   140009085:	cmp    BYTE PTR [rax+0x1],bl
   140009088:	je     0x1400090b6
   14000908a:	movzx  edi,BYTE PTR [rax]
   14000908d:	movzx  ecx,BYTE PTR [rax+0x1]
   140009091:	mov    edx,edi
   140009093:	cmp    edi,ecx
   140009095:	ja     0x1400090ae
   140009097:	add    rdx,0x1d
   14000909b:	sub    ecx,edi
   14000909d:	add    rdx,rsi
   1400090a0:	add    ecx,r15d
   1400090a3:	or     BYTE PTR [rdx],0x4
   1400090a6:	add    rdx,r15
   1400090a9:	sub    rcx,r15
   1400090ac:	jne    0x1400090a3
   1400090ae:	add    rax,0x2
   1400090b2:	cmp    BYTE PTR [rax],bl
   1400090b4:	jne    0x140009085
   1400090b6:	lea    rax,[rsi+0x1e]
   1400090ba:	mov    ecx,0xfe
   1400090bf:	or     BYTE PTR [rax],0x8
   1400090c2:	add    rax,r15
   1400090c5:	sub    rcx,r15
   1400090c8:	jne    0x1400090bf
   1400090ca:	mov    ecx,DWORD PTR [rsi+0x4]
   1400090cd:	sub    ecx,0x3a4
   1400090d3:	je     0x1400090fc
   1400090d5:	sub    ecx,0x4
   1400090d8:	je     0x1400090f5
   1400090da:	sub    ecx,0xd
   1400090dd:	je     0x1400090ee
   1400090df:	dec    ecx
   1400090e1:	je     0x1400090e7
   1400090e3:	mov    eax,ebx
   1400090e5:	jmp    0x140009101
   1400090e7:	mov    eax,0x404
   1400090ec:	jmp    0x140009101
   1400090ee:	mov    eax,0x412
   1400090f3:	jmp    0x140009101
   1400090f5:	mov    eax,0x804
   1400090fa:	jmp    0x140009101
   1400090fc:	mov    eax,0x411
   140009101:	mov    DWORD PTR [rsi+0xc],eax
   140009104:	mov    DWORD PTR [rsi+0x8],r15d
   140009108:	jmp    0x14000910d
   14000910a:	mov    DWORD PTR [rsi+0x8],ebx
   14000910d:	lea    rdi,[rsi+0x10]
   140009111:	movzx  eax,bx
   140009114:	mov    ecx,0x6
   140009119:	rep stos WORD PTR es:[rdi],ax
   14000911c:	jmp    0x140009207
   140009121:	cmp    DWORD PTR [rip+0x9edd],ebx        # 0x140013004
   140009127:	jne    0x140008fe1
   14000912d:	or     eax,0xffffffff
   140009130:	jmp    0x140009211
   140009135:	lea    rcx,[rsi+0x1c]
   140009139:	xor    edx,edx
   14000913b:	mov    r8d,0x101
   140009141:	call   0x14000c460
   140009146:	lea    r10,[r14+r14*2]
   14000914a:	lea    r8,[r12+0x10]
   14000914f:	shl    r10,0x4
   140009153:	lea    r11,[rip+0x8036]        # 0x140011190
   14000915a:	mov    ebp,0x4
   14000915f:	add    r8,r10
   140009162:	mov    rcx,r8
   140009165:	cmp    BYTE PTR [r8],bl
   140009168:	je     0x1400091a0
   14000916a:	cmp    BYTE PTR [rcx+0x1],bl
   14000916d:	je     0x1400091a0
   14000916f:	movzx  edx,BYTE PTR [rcx]
   140009172:	movzx  eax,BYTE PTR [rcx+0x1]
   140009176:	mov    r9d,edx
   140009179:	cmp    edx,eax
   14000917b:	ja     0x140009198
   14000917d:	add    r9,0x1d
   140009181:	add    r9,rsi
   140009184:	mov    al,BYTE PTR [r11]
   140009187:	add    edx,r15d
   14000918a:	or     BYTE PTR [r9],al
   14000918d:	movzx  eax,BYTE PTR [rcx+0x1]
   140009191:	add    r9,r15
   140009194:	cmp    edx,eax
   140009196:	jbe    0x140009184
   140009198:	add    rcx,0x2
   14000919c:	cmp    BYTE PTR [rcx],bl
   14000919e:	jne    0x14000916a
   1400091a0:	add    r8,0x8
   1400091a4:	add    r11,r15
   1400091a7:	sub    rbp,r15
   1400091aa:	jne    0x140009162
   1400091ac:	mov    DWORD PTR [rsi+0x4],edi
   1400091af:	mov    DWORD PTR [rsi+0x8],r15d
   1400091b3:	sub    edi,0x3a4
   1400091b9:	je     0x1400091de
   1400091bb:	sub    edi,0x4
   1400091be:	je     0x1400091d7
   1400091c0:	sub    edi,0xd
   1400091c3:	je     0x1400091d0
   1400091c5:	dec    edi
   1400091c7:	jne    0x1400091e3
   1400091c9:	mov    ebx,0x404
   1400091ce:	jmp    0x1400091e3
   1400091d0:	mov    ebx,0x412
   1400091d5:	jmp    0x1400091e3
   1400091d7:	mov    ebx,0x804
   1400091dc:	jmp    0x1400091e3
   1400091de:	mov    ebx,0x411
   1400091e3:	sub    r10,rsi
   1400091e6:	mov    DWORD PTR [rsi+0xc],ebx
   1400091e9:	lea    rcx,[rsi+0x10]
   1400091ed:	lea    rdi,[r10+r12*1]
   1400091f1:	mov    edx,0x6
   1400091f6:	movzx  eax,WORD PTR [rdi+rcx*1-0xc]
   1400091fb:	mov    WORD PTR [rcx],ax
   1400091fe:	add    rcx,0x2
   140009202:	sub    rdx,r15
   140009205:	jne    0x1400091f6
   140009207:	mov    rcx,rsi
   14000920a:	call   0x14000936c
   14000920f:	xor    eax,eax
   140009211:	mov    rcx,QWORD PTR [rsp+0x38]
   140009216:	xor    rcx,rsp
   140009219:	call   0x140006d40
   14000921e:	lea    r11,[rsp+0x40]
   140009223:	mov    rbx,QWORD PTR [r11+0x40]
   140009227:	mov    rbp,QWORD PTR [r11+0x48]
   14000922b:	mov    rsp,r11
   14000922e:	pop    r15
   140009230:	pop    r14
   140009232:	pop    r12
   140009234:	pop    rdi
   140009235:	pop    rsi
   140009236:	ret    
   140009237:	int3   
   140009238:	int3   
   140009239:	int3   
   14000923a:	int3   
   14000923b:	int3   
   14000923c:	int3   
   14000923d:	int3   
   14000923e:	int3   
   14000923f:	int3   
   140009240:	rex push rbx
   140009242:	sub    rsp,0x40
   140009246:	mov    ebx,ecx
   140009248:	lea    rcx,[rsp+0x20]
   14000924d:	xor    edx,edx
   14000924f:	call   0x140006f24
   140009254:	and    DWORD PTR [rip+0x9da9],0x0        # 0x140013004
   14000925b:	cmp    ebx,0xfffffffe
   14000925e:	jne    0x140009285
   140009260:	mov    DWORD PTR [rip+0x9d9a],0x1        # 0x140013004
   14000926a:	call   QWORD PTR [rip+0xd3e0]        # 0x140016650
   140009270:	cmp    BYTE PTR [rsp+0x38],0x0
   140009275:	je     0x1400092ca
   140009277:	mov    rcx,QWORD PTR [rsp+0x30]
   14000927c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140009283:	jmp    0x1400092ca
   140009285:	cmp    ebx,0xfffffffd
   140009288:	jne    0x14000929c
   14000928a:	mov    DWORD PTR [rip+0x9d70],0x1        # 0x140013004
   140009294:	call   QWORD PTR [rip+0xd3ae]        # 0x140016648
   14000929a:	jmp    0x140009270
   14000929c:	cmp    ebx,0xfffffffc
   14000929f:	jne    0x1400092b5
   1400092a1:	mov    rax,QWORD PTR [rsp+0x20]
   1400092a6:	mov    DWORD PTR [rip+0x9d54],0x1        # 0x140013004
   1400092b0:	mov    eax,DWORD PTR [rax+0x4]
   1400092b3:	jmp    0x140009270
   1400092b5:	cmp    BYTE PTR [rsp+0x38],0x0
   1400092ba:	je     0x1400092c8
   1400092bc:	mov    rax,QWORD PTR [rsp+0x30]
   1400092c1:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400092c8:	mov    eax,ebx
   1400092ca:	add    rsp,0x40
   1400092ce:	pop    rbx
   1400092cf:	ret    
   1400092d0:	int3   
   1400092d1:	int3   
   1400092d2:	int3   
   1400092d3:	int3   
   1400092d4:	int3   
   1400092d5:	int3   
   1400092d6:	int3   
   1400092d7:	int3   
   1400092d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400092dd:	mov    QWORD PTR [rsp+0x10],rbp
   1400092e2:	mov    QWORD PTR [rsp+0x18],rsi
   1400092e7:	push   rdi
   1400092e8:	sub    rsp,0x20
   1400092ec:	lea    rbx,[rcx+0x1c]
   1400092f0:	mov    rsi,rcx
   1400092f3:	mov    ebp,0x101
   1400092f8:	mov    rcx,rbx
   1400092fb:	mov    r8d,ebp
   1400092fe:	xor    edx,edx
   140009300:	call   0x14000c460
   140009305:	xor    r11d,r11d
   140009308:	lea    rdi,[rsi+0x10]
   14000930c:	lea    ecx,[r11+0x6]
   140009310:	movzx  eax,r11w
   140009314:	mov    DWORD PTR [rsi+0xc],r11d
   140009318:	mov    QWORD PTR [rsi+0x4],r11
   14000931c:	rep stos WORD PTR es:[rdi],ax
   14000931f:	lea    rdi,[rip+0x817a]        # 0x1400114a0
   140009326:	sub    rdi,rsi
   140009329:	mov    al,BYTE PTR [rdi+rbx*1]
   14000932c:	mov    BYTE PTR [rbx],al
   14000932e:	inc    rbx
   140009331:	dec    rbp
   140009334:	jne    0x140009329
   140009336:	lea    rcx,[rsi+0x11d]
   14000933d:	mov    edx,0x100
   140009342:	mov    al,BYTE PTR [rcx+rdi*1]
   140009345:	mov    BYTE PTR [rcx],al
   140009347:	inc    rcx
   14000934a:	dec    rdx
   14000934d:	jne    0x140009342
   14000934f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009354:	mov    rbp,QWORD PTR [rsp+0x38]
   140009359:	mov    rsi,QWORD PTR [rsp+0x40]
   14000935e:	add    rsp,0x20
   140009362:	pop    rdi
   140009363:	ret    
   140009364:	int3   
   140009365:	int3   
   140009366:	int3   
   140009367:	int3   
   140009368:	int3   
   140009369:	int3   
   14000936a:	int3   
   14000936b:	int3   
   14000936c:	mov    rax,rsp
   14000936f:	mov    QWORD PTR [rax+0x10],rbx
   140009373:	mov    QWORD PTR [rax+0x18],rsi
   140009377:	mov    QWORD PTR [rax+0x20],rdi
   14000937b:	push   rbp
   14000937c:	lea    rbp,[rax-0x488]
   140009383:	sub    rsp,0x580
   14000938a:	mov    rax,QWORD PTR [rip+0x7ddf]        # 0x140011170
   140009391:	xor    rax,rsp
   140009394:	mov    QWORD PTR [rbp+0x470],rax
   14000939b:	mov    rsi,rcx
   14000939e:	mov    ecx,DWORD PTR [rcx+0x4]
   1400093a1:	lea    rdx,[rsp+0x50]
   1400093a6:	call   QWORD PTR [rip+0xd2ac]        # 0x140016658
   1400093ac:	mov    ebx,0x100
   1400093b1:	test   eax,eax
   1400093b3:	je     0x1400094f8
   1400093b9:	xor    eax,eax
   1400093bb:	lea    rcx,[rsp+0x70]
   1400093c0:	mov    BYTE PTR [rcx],al
   1400093c2:	inc    eax
   1400093c4:	inc    rcx
   1400093c7:	cmp    eax,ebx
   1400093c9:	jb     0x1400093c0
   1400093cb:	mov    al,BYTE PTR [rsp+0x56]
   1400093cf:	mov    BYTE PTR [rsp+0x70],0x20
   1400093d4:	lea    rdi,[rsp+0x56]
   1400093d9:	jmp    0x140009407
   1400093db:	movzx  edx,BYTE PTR [rdi+0x1]
   1400093df:	movzx  r8d,al
   1400093e3:	cmp    r8d,edx
   1400093e6:	ja     0x140009401
   1400093e8:	sub    edx,r8d
   1400093eb:	mov    eax,r8d
   1400093ee:	lea    rcx,[rsp+0x70]
   1400093f3:	add    rcx,r8
   1400093f6:	lea    r8d,[rdx+0x1]
   1400093fa:	mov    dl,0x20
   1400093fc:	call   0x14000c460
   140009401:	add    rdi,0x2
   140009405:	mov    al,BYTE PTR [rdi]
   140009407:	test   al,al
   140009409:	jne    0x1400093db
   14000940b:	mov    eax,DWORD PTR [rsi+0xc]
   14000940e:	and    DWORD PTR [rsp+0x38],0x0
   140009413:	lea    r8,[rsp+0x70]
   140009418:	mov    DWORD PTR [rsp+0x30],eax
   14000941c:	mov    eax,DWORD PTR [rsi+0x4]
   14000941f:	mov    r9d,ebx
   140009422:	mov    DWORD PTR [rsp+0x28],eax
   140009426:	lea    rax,[rbp+0x270]
   14000942d:	mov    edx,0x1
   140009432:	xor    ecx,ecx
   140009434:	mov    QWORD PTR [rsp+0x20],rax
   140009439:	call   0x14000c17c
   14000943e:	and    DWORD PTR [rsp+0x40],0x0
   140009443:	mov    eax,DWORD PTR [rsi+0x4]
   140009446:	mov    edx,DWORD PTR [rsi+0xc]
   140009449:	mov    DWORD PTR [rsp+0x38],eax
   14000944d:	lea    rax,[rbp+0x70]
   140009451:	mov    DWORD PTR [rsp+0x30],ebx
   140009455:	mov    QWORD PTR [rsp+0x28],rax
   14000945a:	lea    r9,[rsp+0x70]
   14000945f:	mov    r8d,ebx
   140009462:	xor    ecx,ecx
   140009464:	mov    DWORD PTR [rsp+0x20],ebx
   140009468:	call   0x14000c550
   14000946d:	and    DWORD PTR [rsp+0x40],0x0
   140009472:	mov    eax,DWORD PTR [rsi+0x4]
   140009475:	mov    edx,DWORD PTR [rsi+0xc]
   140009478:	mov    DWORD PTR [rsp+0x38],eax
   14000947c:	lea    rax,[rbp+0x170]
   140009483:	mov    DWORD PTR [rsp+0x30],ebx
   140009487:	mov    QWORD PTR [rsp+0x28],rax
   14000948c:	lea    r9,[rsp+0x70]
   140009491:	mov    r8d,0x200
   140009497:	xor    ecx,ecx
   140009499:	mov    DWORD PTR [rsp+0x20],ebx
   14000949d:	call   0x14000c550
   1400094a2:	lea    rdx,[rbp+0x70]
   1400094a6:	lea    r8,[rbp+0x170]
   1400094ad:	sub    rdx,rsi
   1400094b0:	lea    r11,[rbp+0x270]
   1400094b7:	lea    rcx,[rsi+0x1d]
   1400094bb:	sub    r8,rsi
   1400094be:	test   BYTE PTR [r11],0x1
   1400094c2:	je     0x1400094cd
   1400094c4:	or     BYTE PTR [rcx],0x10
   1400094c7:	mov    al,BYTE PTR [rdx+rcx*1-0x1d]
   1400094cb:	jmp    0x1400094db
   1400094cd:	test   BYTE PTR [r11],0x2
   1400094d1:	je     0x1400094e3
   1400094d3:	or     BYTE PTR [rcx],0x20
   1400094d6:	mov    al,BYTE PTR [r8+rcx*1-0x1d]
   1400094db:	mov    BYTE PTR [rcx+0x100],al
   1400094e1:	jmp    0x1400094ea
   1400094e3:	mov    BYTE PTR [rcx+0x100],0x0
   1400094ea:	inc    rcx
   1400094ed:	add    r11,0x2
   1400094f1:	dec    rbx
   1400094f4:	jne    0x1400094be
   1400094f6:	jmp    0x140009537
   1400094f8:	xor    edx,edx
   1400094fa:	lea    rcx,[rsi+0x1d]
   1400094fe:	lea    r8d,[rdx-0x61]
   140009502:	lea    eax,[r8+0x20]
   140009506:	cmp    eax,0x19
   140009509:	ja     0x140009513
   14000950b:	or     BYTE PTR [rcx],0x10
   14000950e:	lea    eax,[rdx+0x20]
   140009511:	jmp    0x14000951f
   140009513:	cmp    r8d,0x19
   140009517:	ja     0x140009527
   140009519:	or     BYTE PTR [rcx],0x20
   14000951c:	lea    eax,[rdx-0x20]
   14000951f:	mov    BYTE PTR [rcx+0x100],al
   140009525:	jmp    0x14000952e
   140009527:	mov    BYTE PTR [rcx+0x100],0x0
   14000952e:	inc    edx
   140009530:	inc    rcx
   140009533:	cmp    edx,ebx
   140009535:	jb     0x1400094fe
   140009537:	mov    rcx,QWORD PTR [rbp+0x470]
   14000953e:	xor    rcx,rsp
   140009541:	call   0x140006d40
   140009546:	lea    r11,[rsp+0x580]
   14000954e:	mov    rbx,QWORD PTR [r11+0x18]
   140009552:	mov    rsi,QWORD PTR [r11+0x20]
   140009556:	mov    rdi,QWORD PTR [r11+0x28]
   14000955a:	mov    rsp,r11
   14000955d:	pop    rbp
   14000955e:	ret    
   14000955f:	int3   
   140009560:	int3   
   140009561:	int3   
   140009562:	int3   
   140009563:	int3   
   140009564:	int3   
   140009565:	int3   
   140009566:	int3   
   140009567:	int3   
   140009568:	mov    WORD PTR [rsp+0x8],cx
   14000956d:	push   rbp
   14000956e:	mov    rbp,rsp
   140009571:	sub    rsp,0x60
   140009575:	mov    eax,0xffff
   14000957a:	cmp    cx,ax
   14000957d:	je     0x14000964a
   140009583:	lea    rcx,[rbp-0x20]
   140009587:	call   0x140006f24
   14000958c:	mov    r11,QWORD PTR [rbp-0x20]
   140009590:	mov    edx,DWORD PTR [r11+0x14]
   140009594:	test   edx,edx
   140009596:	jne    0x1400095c2
   140009598:	movzx  edx,WORD PTR [rbp+0x10]
   14000959c:	lea    eax,[rdx-0x41]
   14000959f:	cmp    ax,0x19
   1400095a3:	ja     0x1400095a9
   1400095a5:	add    dx,0x20
   1400095a9:	cmp    BYTE PTR [rbp-0x8],0x0
   1400095ad:	je     0x1400095ba
   1400095af:	mov    rcx,QWORD PTR [rbp-0x10]
   1400095b3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400095ba:	movzx  eax,dx
   1400095bd:	jmp    0x14000964a
   1400095c2:	movzx  ecx,WORD PTR [rbp+0x10]
   1400095c6:	mov    r8d,0x100
   1400095cc:	cmp    cx,r8w
   1400095d0:	jae    0x1400095ff
   1400095d2:	lea    r8,[rbp-0x20]
   1400095d6:	mov    edx,0x1
   1400095db:	call   0x14000c9f0
   1400095e0:	test   eax,eax
   1400095e2:	jne    0x1400095ea
   1400095e4:	movzx  eax,WORD PTR [rbp+0x10]
   1400095e8:	jmp    0x140009639
   1400095ea:	mov    rax,QWORD PTR [rbp-0x20]
   1400095ee:	movzx  edx,WORD PTR [rbp+0x10]
   1400095f2:	mov    rcx,QWORD PTR [rax+0x148]
   1400095f9:	movzx  eax,BYTE PTR [rcx+rdx*1]
   1400095fd:	jmp    0x140009639
   1400095ff:	mov    eax,DWORD PTR [r11+0x4]
   140009603:	lea    r9,[rbp+0x10]
   140009607:	lea    rcx,[rbp-0x20]
   14000960b:	mov    DWORD PTR [rsp+0x38],eax
   14000960f:	lea    rax,[rbp+0x20]
   140009613:	mov    DWORD PTR [rsp+0x30],0x1
   14000961b:	mov    QWORD PTR [rsp+0x28],rax
   140009620:	mov    DWORD PTR [rsp+0x20],0x1
   140009628:	call   0x14000cab0
   14000962d:	test   eax,eax
   14000962f:	movzx  eax,WORD PTR [rbp+0x10]
   140009633:	je     0x140009639
   140009635:	movzx  eax,WORD PTR [rbp+0x20]
   140009639:	cmp    BYTE PTR [rbp-0x8],0x0
   14000963d:	je     0x14000964a
   14000963f:	mov    rcx,QWORD PTR [rbp-0x10]
   140009643:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000964a:	add    rsp,0x60
   14000964e:	pop    rbp
   14000964f:	ret    
   140009650:	int3   
   140009651:	int3   
   140009652:	int3   
   140009653:	int3   
   140009654:	int3   
   140009655:	int3   
   140009656:	int3   
   140009657:	int3   
   140009658:	sub    rsp,0x28
   14000965c:	call   0x140007588
   140009661:	test   rax,rax
   140009664:	jne    0x14000966f
   140009666:	lea    rax,[rip+0x8057]        # 0x1400116c4
   14000966d:	jmp    0x140009673
   14000966f:	add    rax,0x10
   140009673:	add    rsp,0x28
   140009677:	ret    
   140009678:	int3   
   140009679:	int3   
   14000967a:	int3   
   14000967b:	int3   
   14000967c:	int3   
   14000967d:	int3   
   14000967e:	int3   
   14000967f:	int3   
   140009680:	sub    rsp,0x28
   140009684:	call   0x140007588
   140009689:	test   rax,rax
   14000968c:	jne    0x140009697
   14000968e:	lea    rax,[rip+0x802b]        # 0x1400116c0
   140009695:	jmp    0x14000969b
   140009697:	add    rax,0x14
   14000969b:	add    rsp,0x28
   14000969f:	ret    
   1400096a0:	int3   
   1400096a1:	int3   
   1400096a2:	int3   
   1400096a3:	int3   
   1400096a4:	int3   
   1400096a5:	int3   
   1400096a6:	int3   
   1400096a7:	int3   
   1400096a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400096ad:	push   rdi
   1400096ae:	sub    rsp,0x20
   1400096b2:	mov    edi,ecx
   1400096b4:	call   0x140007588
   1400096b9:	test   rax,rax
   1400096bc:	jne    0x1400096c7
   1400096be:	lea    rax,[rip+0x7ffb]        # 0x1400116c0
   1400096c5:	jmp    0x1400096cb
   1400096c7:	add    rax,0x14
   1400096cb:	mov    DWORD PTR [rax],edi
   1400096cd:	call   0x140007588
   1400096d2:	lea    rbx,[rip+0x7feb]        # 0x1400116c4
   1400096d9:	test   rax,rax
   1400096dc:	je     0x1400096e2
   1400096de:	lea    rbx,[rax+0x10]
   1400096e2:	mov    ecx,edi
   1400096e4:	call   0x1400096fc
   1400096e9:	mov    DWORD PTR [rbx],eax
   1400096eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096f0:	add    rsp,0x20
   1400096f4:	pop    rdi
   1400096f5:	ret    
   1400096f6:	int3   
   1400096f7:	int3   
   1400096f8:	int3   
   1400096f9:	int3   
   1400096fa:	int3   
   1400096fb:	int3   
   1400096fc:	lea    r9,[rip+0x7fcd]        # 0x1400116d0
   140009703:	xor    eax,eax
   140009705:	mov    rdx,r9
   140009708:	lea    r8d,[rax+0x8]
   14000970c:	cmp    ecx,DWORD PTR [rdx]
   14000970e:	je     0x14000973b
   140009710:	inc    eax
   140009712:	add    rdx,r8
   140009715:	cmp    eax,0x2d
   140009718:	jb     0x14000970c
   14000971a:	lea    eax,[rcx-0x13]
   14000971d:	cmp    eax,0x11
   140009720:	ja     0x140009728
   140009722:	mov    eax,0xd
   140009727:	ret    
   140009728:	add    ecx,0xffffff44
   14000972e:	mov    eax,0x16
   140009733:	cmp    ecx,0xe
   140009736:	cmovbe eax,r8d
   14000973a:	ret    
   14000973b:	cdqe   
   14000973d:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140009742:	ret    
   140009743:	int3   
   140009744:	int3   
   140009745:	int3   
   140009746:	int3   
   140009747:	int3   
   140009748:	int3   
   140009749:	int3   
   14000974a:	int3   
   14000974b:	int3   
   14000974c:	sub    rsp,0x38
   140009750:	mov    rax,QWORD PTR [rsp+0x60]
   140009755:	mov    QWORD PTR [rsp+0x20],rax
   14000975a:	call   0x14000976c
   14000975f:	add    rsp,0x38
   140009763:	ret    
   140009764:	int3   
   140009765:	int3   
   140009766:	int3   
   140009767:	int3   
   140009768:	int3   
   140009769:	int3   
   14000976a:	int3   
   14000976b:	int3   
   14000976c:	rex push rbx
   14000976e:	sub    rsp,0x540
   140009775:	mov    rax,QWORD PTR [rip+0x79f4]        # 0x140011170
   14000977c:	xor    rax,rsp
   14000977f:	mov    QWORD PTR [rsp+0x530],rax
   140009787:	lea    rcx,[rsp+0x60]
   14000978c:	call   QWORD PTR [rip+0xcfe6]        # 0x140016778
   140009792:	mov    rbx,QWORD PTR [rsp+0x158]
   14000979a:	lea    rdx,[rsp+0x40]
   14000979f:	mov    rcx,rbx
   1400097a2:	xor    r8d,r8d
   1400097a5:	call   QWORD PTR [rip+0xcfc5]        # 0x140016770
   1400097ab:	test   rax,rax
   1400097ae:	je     0x1400097e9
   1400097b0:	and    QWORD PTR [rsp+0x38],0x0
   1400097b6:	mov    rdx,QWORD PTR [rsp+0x40]
   1400097bb:	lea    rcx,[rsp+0x48]
   1400097c0:	mov    QWORD PTR [rsp+0x30],rcx
   1400097c5:	lea    rcx,[rsp+0x50]
   1400097ca:	mov    r9,rax
   1400097cd:	mov    QWORD PTR [rsp+0x28],rcx
   1400097d2:	lea    rcx,[rsp+0x60]
   1400097d7:	mov    r8,rbx
   1400097da:	mov    QWORD PTR [rsp+0x20],rcx
   1400097df:	xor    ecx,ecx
   1400097e1:	call   QWORD PTR [rip+0xcf81]        # 0x140016768
   1400097e7:	jmp    0x140009809
   1400097e9:	mov    rax,QWORD PTR [rsp+0x548]
   1400097f1:	mov    QWORD PTR [rsp+0x158],rax
   1400097f9:	lea    rax,[rsp+0x548]
   140009801:	mov    QWORD PTR [rsp+0xf8],rax
   140009809:	lea    rcx,[rip+0xffffffffffff8140]        # 0x140001950
   140009810:	call   QWORD PTR [rip+0xce4a]        # 0x140016660
   140009816:	mov    rcx,QWORD PTR [rsp+0x530]
   14000981e:	xor    rcx,rsp
   140009821:	call   0x140006d40
   140009826:	add    rsp,0x540
   14000982d:	pop    rbx
   14000982e:	ret    
   14000982f:	int3   
   140009830:	int3   
   140009831:	int3   
   140009832:	int3   
   140009833:	int3   
   140009834:	int3   
   140009835:	int3   
   140009836:	int3   
   140009837:	int3   
   140009838:	mov    rax,rsp
   14000983b:	mov    QWORD PTR [rax+0x10],rbx
   14000983f:	mov    QWORD PTR [rax+0x18],rbp
   140009843:	mov    QWORD PTR [rax+0x20],rsi
   140009847:	mov    DWORD PTR [rax+0x8],ecx
   14000984a:	push   rdi
   14000984b:	sub    rsp,0x20
   14000984f:	mov    rcx,rdx
   140009852:	mov    rbx,rdx
   140009855:	call   0x14000cb3c
   14000985a:	mov    ecx,DWORD PTR [rbx+0x18]
   14000985d:	movsxd rsi,eax
   140009860:	test   cl,0x82
   140009863:	jne    0x14000987c
   140009865:	call   0x140009658
   14000986a:	mov    DWORD PTR [rax],0x9
   140009870:	or     DWORD PTR [rbx+0x18],0x20
   140009874:	or     eax,0xffffffff
   140009877:	jmp    0x1400099ac
   14000987c:	test   cl,0x40
   14000987f:	je     0x14000988e
   140009881:	call   0x140009658
   140009886:	mov    DWORD PTR [rax],0x22
   14000988c:	jmp    0x140009870
   14000988e:	xor    edi,edi
   140009890:	test   cl,0x1
   140009893:	je     0x1400098ae
   140009895:	mov    DWORD PTR [rbx+0x8],edi
   140009898:	test   cl,0x10
   14000989b:	je     0x140009926
   1400098a1:	mov    rax,QWORD PTR [rbx+0x10]
   1400098a5:	and    ecx,0xfffffffe
   1400098a8:	mov    QWORD PTR [rbx],rax
   1400098ab:	mov    DWORD PTR [rbx+0x18],ecx
   1400098ae:	mov    eax,DWORD PTR [rbx+0x18]
   1400098b1:	mov    DWORD PTR [rbx+0x8],edi
   1400098b4:	and    eax,0xffffffef
   1400098b7:	or     eax,0x2
   1400098ba:	mov    DWORD PTR [rbx+0x18],eax
   1400098bd:	test   eax,0x10c
   1400098c2:	jne    0x1400098ef
   1400098c4:	lea    rax,[rip+0x8145]        # 0x140011a10
   1400098cb:	cmp    rbx,rax
   1400098ce:	je     0x1400098dc
   1400098d0:	lea    rax,[rip+0x8169]        # 0x140011a40
   1400098d7:	cmp    rbx,rax
   1400098da:	jne    0x1400098e7
   1400098dc:	mov    ecx,esi
   1400098de:	call   0x14000cb78
   1400098e3:	test   eax,eax
   1400098e5:	jne    0x1400098ef
   1400098e7:	mov    rcx,rbx
   1400098ea:	call   0x14000d5d8
   1400098ef:	test   DWORD PTR [rbx+0x18],0x108
   1400098f6:	je     0x140009989
   1400098fc:	mov    ebp,DWORD PTR [rbx]
   1400098fe:	mov    rdx,QWORD PTR [rbx+0x10]
   140009902:	sub    ebp,DWORD PTR [rbx+0x10]
   140009905:	lea    rax,[rdx+0x1]
   140009909:	mov    QWORD PTR [rbx],rax
   14000990c:	mov    eax,DWORD PTR [rbx+0x24]
   14000990f:	dec    eax
   140009911:	mov    DWORD PTR [rbx+0x8],eax
   140009914:	test   ebp,ebp
   140009916:	jle    0x140009931
   140009918:	mov    r8d,ebp
   14000991b:	mov    ecx,esi
   14000991d:	call   0x14000cbf0
   140009922:	mov    edi,eax
   140009924:	jmp    0x14000997d
   140009926:	or     ecx,0x20
   140009929:	mov    DWORD PTR [rbx+0x18],ecx
   14000992c:	jmp    0x140009874
   140009931:	cmp    esi,0xffffffff
   140009934:	je     0x140009959
   140009936:	cmp    esi,0xfffffffe
   140009939:	je     0x140009959
   14000993b:	mov    rcx,rsi
   14000993e:	mov    rax,rsi
   140009941:	lea    rdx,[rip+0xaed8]        # 0x140014820
   140009948:	and    ecx,0x1f
   14000994b:	sar    rax,0x5
   14000994f:	imul   rcx,rcx,0x38
   140009953:	add    rcx,QWORD PTR [rdx+rax*8]
   140009957:	jmp    0x140009960
   140009959:	lea    rcx,[rip+0x77d8]        # 0x140011138
   140009960:	test   BYTE PTR [rcx+0x8],0x20
   140009964:	je     0x14000997d
   140009966:	xor    edx,edx
   140009968:	mov    ecx,esi
   14000996a:	lea    r8d,[rdx+0x2]
   14000996e:	call   0x14000d434
   140009973:	cmp    rax,0xffffffffffffffff
   140009977:	je     0x140009870
   14000997d:	mov    rcx,QWORD PTR [rbx+0x10]
   140009981:	mov    al,BYTE PTR [rsp+0x30]
   140009985:	mov    BYTE PTR [rcx],al
   140009987:	jmp    0x14000999f
   140009989:	mov    ebp,0x1
   14000998e:	lea    rdx,[rsp+0x30]
   140009993:	mov    ecx,esi
   140009995:	mov    r8d,ebp
   140009998:	call   0x14000cbf0
   14000999d:	mov    edi,eax
   14000999f:	cmp    edi,ebp
   1400099a1:	jne    0x140009870
   1400099a7:	movzx  eax,BYTE PTR [rsp+0x30]
   1400099ac:	mov    rbx,QWORD PTR [rsp+0x38]
   1400099b1:	mov    rbp,QWORD PTR [rsp+0x40]
   1400099b6:	mov    rsi,QWORD PTR [rsp+0x48]
   1400099bb:	add    rsp,0x20
   1400099bf:	pop    rdi
   1400099c0:	ret    
   1400099c1:	int3   
   1400099c2:	int3   
   1400099c3:	int3   
   1400099c4:	int3   
   1400099c5:	int3   
   1400099c6:	int3   
   1400099c7:	int3   
   1400099c8:	mov    QWORD PTR [rsp+0x18],rbx
   1400099cd:	push   rbp
   1400099ce:	push   rsi
   1400099cf:	push   rdi
   1400099d0:	push   r12
   1400099d2:	push   r13
   1400099d4:	push   r14
   1400099d6:	push   r15
   1400099d8:	lea    rbp,[rsp-0x3d0]
   1400099e0:	sub    rsp,0x4d0
   1400099e7:	mov    rax,QWORD PTR [rip+0x7782]        # 0x140011170
   1400099ee:	xor    rax,rsp
   1400099f1:	mov    QWORD PTR [rbp+0x3c0],rax
   1400099f8:	xor    eax,eax
   1400099fa:	mov    rbx,rcx
   1400099fd:	mov    QWORD PTR [rsp+0x70],rcx
   140009a02:	mov    QWORD PTR [rbp-0x80],rdx
   140009a06:	lea    rcx,[rbp-0x78]
   140009a0a:	mov    rdx,r8
   140009a0d:	mov    r12,r9
   140009a10:	mov    QWORD PTR [rsp+0x50],r9
   140009a15:	mov    DWORD PTR [rsp+0x7c],eax
   140009a19:	mov    r14d,eax
   140009a1c:	mov    DWORD PTR [rsp+0x58],eax
   140009a20:	mov    edi,eax
   140009a22:	mov    DWORD PTR [rsp+0x48],eax
   140009a26:	mov    DWORD PTR [rsp+0x4c],eax
   140009a2a:	mov    DWORD PTR [rsp+0x78],eax
   140009a2e:	mov    DWORD PTR [rsp+0x6c],eax
   140009a32:	mov    DWORD PTR [rsp+0x40],eax
   140009a36:	call   0x140006f24
   140009a3b:	xor    r10d,r10d
   140009a3e:	test   rbx,rbx
   140009a41:	jne    0x140009a7e
   140009a43:	call   0x140009658
   140009a48:	xor    r13d,r13d
   140009a4b:	xor    r9d,r9d
   140009a4e:	xor    r8d,r8d
   140009a51:	xor    edx,edx
   140009a53:	xor    ecx,ecx
   140009a55:	mov    DWORD PTR [rax],0x16
   140009a5b:	mov    QWORD PTR [rsp+0x20],r13
   140009a60:	call   0x14000974c
   140009a65:	cmp    BYTE PTR [rbp-0x60],r13b
   140009a69:	je     0x140009a76
   140009a6b:	mov    rax,QWORD PTR [rbp-0x68]
   140009a6f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140009a76:	or     eax,0xffffffff
   140009a79:	jmp    0x14000a4be
   140009a7e:	mov    r8,QWORD PTR [rbp-0x80]
   140009a82:	test   r8,r8
   140009a85:	je     0x140009a43
   140009a87:	movzx  r15d,WORD PTR [r8]
   140009a8b:	mov    esi,r10d
   140009a8e:	mov    DWORD PTR [rsp+0x44],r10d
   140009a93:	mov    r13d,r10d
   140009a96:	mov    edx,r10d
   140009a99:	mov    QWORD PTR [rbp-0x58],r10
   140009a9d:	test   r15w,r15w
   140009aa1:	je     0x14000a4ab
   140009aa7:	mov    rbx,QWORD PTR [rbp-0x50]
   140009aab:	mov    ecx,0x58
   140009ab0:	mov    r9d,0x200
   140009ab6:	lea    r11d,[rcx-0x38]
   140009aba:	add    r8,0x2
   140009abe:	mov    QWORD PTR [rbp-0x80],r8
   140009ac2:	test   esi,esi
   140009ac4:	js     0x14000a4ab
   140009aca:	movzx  eax,r15w
   140009ace:	sub    ax,r11w
   140009ad2:	cmp    ax,cx
   140009ad5:	ja     0x140009aec
   140009ad7:	lea    rcx,[rip+0xffffffffffff8b12]        # 0x1400025f0
   140009ade:	movzx  eax,r15w
   140009ae2:	movsx  ecx,BYTE PTR [rax+rcx*1-0x20]
   140009ae7:	and    ecx,0xf
   140009aea:	jmp    0x140009aef
   140009aec:	mov    ecx,r10d
   140009aef:	movsxd rax,edx
   140009af2:	movsxd rcx,ecx
   140009af5:	lea    rdx,[rax+rcx*8]
   140009af9:	lea    rax,[rip+0xffffffffffff8af0]        # 0x1400025f0
   140009b00:	movsx  edx,BYTE PTR [rdx+rax*1]
   140009b04:	sar    edx,0x4
   140009b07:	mov    DWORD PTR [rsp+0x68],edx
   140009b0b:	mov    ecx,edx
   140009b0d:	test   edx,edx
   140009b0f:	je     0x14000a357
   140009b15:	dec    ecx
   140009b17:	je     0x14000a461
   140009b1d:	dec    ecx
   140009b1f:	je     0x14000a414
   140009b25:	dec    ecx
   140009b27:	je     0x14000a3d2
   140009b2d:	dec    ecx
   140009b2f:	je     0x14000a3c5
   140009b35:	dec    ecx
   140009b37:	je     0x14000a37e
   140009b3d:	dec    ecx
   140009b3f:	je     0x14000a264
   140009b45:	dec    ecx
   140009b47:	jne    0x14000a498
   140009b4d:	movzx  eax,r15w
   140009b51:	mov    ecx,0x64
   140009b56:	cmp    eax,ecx
   140009b58:	jg     0x140009d83
   140009b5e:	je     0x140009ea6
   140009b64:	cmp    eax,0x41
   140009b67:	je     0x140009d4f
   140009b6d:	cmp    eax,0x43
   140009b70:	je     0x140009cdf
   140009b76:	cmp    eax,0x45
   140009b79:	je     0x140009d4f
   140009b7f:	cmp    eax,0x47
   140009b82:	je     0x140009d4f
   140009b88:	cmp    eax,0x53
   140009b8b:	je     0x140009c35
   140009b91:	cmp    eax,0x58
   140009b94:	je     0x140009e25
   140009b9a:	cmp    eax,0x5a
   140009b9d:	je     0x140009bb6
   140009b9f:	cmp    eax,0x61
   140009ba2:	je     0x140009d5b
   140009ba8:	cmp    eax,0x63
   140009bab:	je     0x140009ceb
   140009bb1:	jmp    0x140009ca3
   140009bb6:	mov    rcx,QWORD PTR [r12]
   140009bba:	add    r12,0x8
   140009bbe:	mov    QWORD PTR [rsp+0x50],r12
   140009bc3:	test   rcx,rcx
   140009bc6:	je     0x140009c1f
   140009bc8:	mov    rbx,QWORD PTR [rcx+0x8]
   140009bcc:	test   rbx,rbx
   140009bcf:	je     0x140009c1f
   140009bd1:	movzx  eax,WORD PTR [rcx]
   140009bd4:	cmp    WORD PTR [rcx+0x2],ax
   140009bd8:	jb     0x140009a43
   140009bde:	movzx  r13d,ax
   140009be2:	bt     r14d,0xb
   140009be7:	jae    0x140009c12
   140009be9:	mov    eax,r13d
   140009bec:	not    eax
   140009bee:	test   al,0x1
   140009bf0:	je     0x140009a43
   140009bf6:	mov    eax,ebx
   140009bf8:	not    eax
   140009bfa:	test   al,0x1
   140009bfc:	je     0x140009a43
   140009c02:	shr    r13d,1
   140009c05:	mov    DWORD PTR [rsp+0x40],0x1
   140009c0d:	jmp    0x140009ca3
   140009c12:	mov    DWORD PTR [rsp+0x40],r10d
   140009c17:	mov    edi,r10d
   140009c1a:	jmp    0x140009ca7
   140009c1f:	mov    rbx,QWORD PTR [rip+0x7da2]        # 0x1400119c8
   140009c26:	or     r13,0xffffffffffffffff
   140009c2a:	inc    r13
   140009c2d:	cmp    BYTE PTR [rbx+r13*1],r10b
   140009c31:	jne    0x140009c2a
   140009c33:	jmp    0x140009ca3
   140009c35:	test   r14d,0x830
   140009c3c:	jne    0x140009c41
   140009c3e:	or     r14d,r11d
   140009c41:	cmp    DWORD PTR [rsp+0x48],0xffffffff
   140009c46:	mov    rbx,QWORD PTR [r12]
   140009c4a:	mov    eax,0x7fffffff
   140009c4f:	cmove  edi,eax
   140009c52:	add    r12,0x8
   140009c56:	mov    QWORD PTR [rsp+0x50],r12
   140009c5b:	test   r11b,r14b
   140009c5e:	je     0x140009de5
   140009c64:	test   rbx,rbx
   140009c67:	mov    r13d,r10d
   140009c6a:	cmove  rbx,QWORD PTR [rip+0x7d56]        # 0x1400119c8
   140009c72:	mov    rsi,rbx
   140009c75:	test   edi,edi
   140009c77:	jle    0x140009c9f
   140009c79:	cmp    BYTE PTR [rsi],r10b
   140009c7c:	je     0x140009c9f
   140009c7e:	movzx  ecx,BYTE PTR [rsi]
   140009c81:	lea    rdx,[rbp-0x78]
   140009c85:	call   0x14000d68c
   140009c8a:	xor    r10d,r10d
   140009c8d:	test   eax,eax
   140009c8f:	je     0x140009c94
   140009c91:	inc    rsi
   140009c94:	inc    r13d
   140009c97:	inc    rsi
   140009c9a:	cmp    r13d,edi
   140009c9d:	jl     0x140009c79
   140009c9f:	mov    esi,DWORD PTR [rsp+0x44]
   140009ca3:	mov    edi,DWORD PTR [rsp+0x40]
   140009ca7:	mov    ecx,0x2d
   140009cac:	cmp    DWORD PTR [rsp+0x6c],r10d
   140009cb1:	jne    0x14000a233
   140009cb7:	test   r14b,0x40
   140009cbb:	je     0x14000a113
   140009cc1:	bt     r14d,0x8
   140009cc6:	jae    0x14000a0e5
   140009ccc:	mov    WORD PTR [rsp+0x5c],cx
   140009cd1:	mov    esi,0x1
   140009cd6:	mov    DWORD PTR [rsp+0x4c],esi
   140009cda:	jmp    0x14000a117
   140009cdf:	test   r14d,0x830
   140009ce6:	jne    0x140009ceb
   140009ce8:	or     r14d,r11d
   140009ceb:	movzx  eax,WORD PTR [r12]
   140009cf0:	add    r12,0x8
   140009cf4:	mov    edi,0x1
   140009cf9:	mov    WORD PTR [rsp+0x60],ax
   140009cfe:	mov    DWORD PTR [rsp+0x40],edi
   140009d02:	mov    QWORD PTR [rsp+0x50],r12
   140009d07:	test   r11b,r14b
   140009d0a:	je     0x140009d3f
   140009d0c:	mov    BYTE PTR [rsp+0x64],al
   140009d10:	mov    rax,QWORD PTR [rbp-0x78]
   140009d14:	mov    BYTE PTR [rsp+0x65],r10b
   140009d19:	movsxd r8,DWORD PTR [rax+0x10c]
   140009d20:	lea    r9,[rbp-0x78]
   140009d24:	lea    rdx,[rsp+0x64]
   140009d29:	lea    rcx,[rbp-0x40]
   140009d2d:	call   0x14000d950
   140009d32:	xor    r10d,r10d
   140009d35:	test   eax,eax
   140009d37:	jns    0x140009d43
   140009d39:	mov    DWORD PTR [rsp+0x6c],edi
   140009d3d:	jmp    0x140009d43
   140009d3f:	mov    WORD PTR [rbp-0x40],ax
   140009d43:	lea    rbx,[rbp-0x40]
   140009d47:	mov    r13d,edi
   140009d4a:	jmp    0x140009ca7
   140009d4f:	mov    DWORD PTR [rsp+0x78],0x1
   140009d57:	add    r15w,r11w
   140009d5b:	mov    ecx,0x67
   140009d60:	or     r14d,0x40
   140009d64:	lea    rbx,[rbp-0x40]
   140009d68:	mov    esi,r9d
   140009d6b:	test   edi,edi
   140009d6d:	jns    0x140009fcb
   140009d73:	mov    r13d,0x6
   140009d79:	mov    DWORD PTR [rsp+0x48],r13d
   140009d7e:	jmp    0x14000a022
   140009d83:	cmp    eax,0x65
   140009d86:	jl     0x140009ca3
   140009d8c:	mov    ecx,0x67
   140009d91:	cmp    eax,ecx
   140009d93:	jle    0x140009d60
   140009d95:	mov    ecx,0x69
   140009d9a:	cmp    eax,ecx
   140009d9c:	je     0x140009ea6
   140009da2:	cmp    eax,0x6e
   140009da5:	je     0x140009e6c
   140009dab:	mov    ecx,0x6f
   140009db0:	cmp    eax,ecx
   140009db2:	je     0x140009e56
   140009db8:	cmp    eax,0x70
   140009dbb:	je     0x140009e1b
   140009dbd:	cmp    eax,0x73
   140009dc0:	je     0x140009c41
   140009dc6:	mov    ecx,0x75
   140009dcb:	cmp    eax,ecx
   140009dcd:	je     0x140009eaa
   140009dd3:	mov    ecx,0x78
   140009dd8:	cmp    eax,ecx
   140009dda:	jne    0x140009ca3
   140009de0:	lea    eax,[rcx-0x51]
   140009de3:	jmp    0x140009e2a
   140009de5:	test   rbx,rbx
   140009de8:	mov    DWORD PTR [rsp+0x40],0x1
   140009df0:	cmove  rbx,QWORD PTR [rip+0x7bd8]        # 0x1400119d0
   140009df8:	mov    rax,rbx
   140009dfb:	jmp    0x140009e09
   140009dfd:	dec    edi
   140009dff:	cmp    WORD PTR [rax],r10w
   140009e03:	je     0x140009e0d
   140009e05:	add    rax,0x2
   140009e09:	test   edi,edi
   140009e0b:	jne    0x140009dfd
   140009e0d:	sub    rax,rbx
   140009e10:	sar    rax,1
   140009e13:	mov    r13d,eax
   140009e16:	jmp    0x140009ca3
   140009e1b:	mov    edi,0x10
   140009e20:	bts    r14d,0xf
   140009e25:	mov    eax,0x7
   140009e2a:	mov    DWORD PTR [rsp+0x7c],eax
   140009e2e:	mov    r9d,0x10
   140009e34:	mov    r15d,0x200
   140009e3a:	test   r14b,r14b
   140009e3d:	jns    0x140009eb6
   140009e3f:	lea    ecx,[r9+0x20]
   140009e43:	add    ax,0x51
   140009e47:	lea    edx,[rcx-0x2e]
   140009e4a:	mov    WORD PTR [rsp+0x5c],cx
   140009e4f:	mov    WORD PTR [rsp+0x5e],ax
   140009e54:	jmp    0x140009eba
   140009e56:	mov    r9d,0x8
   140009e5c:	test   r14b,r14b
   140009e5f:	jns    0x140009eb0
   140009e61:	mov    r15d,0x200
   140009e67:	or     r14d,r15d
   140009e6a:	jmp    0x140009eb6
   140009e6c:	mov    rdi,QWORD PTR [r12]
   140009e70:	add    r12,0x8
   140009e74:	mov    QWORD PTR [rsp+0x50],r12
   140009e79:	call   0x14000d718
   140009e7e:	xor    r10d,r10d
   140009e81:	test   eax,eax
   140009e83:	je     0x140009a43
   140009e89:	lea    r11d,[r10+0x20]
   140009e8d:	test   r11b,r14b
   140009e90:	je     0x140009e97
   140009e92:	mov    WORD PTR [rdi],si
   140009e95:	jmp    0x140009e99
   140009e97:	mov    DWORD PTR [rdi],esi
   140009e99:	mov    DWORD PTR [rsp+0x6c],0x1
   140009ea1:	jmp    0x14000a239
   140009ea6:	or     r14d,0x40
   140009eaa:	mov    r9d,0xa
   140009eb0:	mov    r15d,0x200
   140009eb6:	mov    edx,DWORD PTR [rsp+0x4c]
   140009eba:	mov    eax,0x8000
   140009ebf:	test   eax,r14d
   140009ec2:	je     0x140009ece
   140009ec4:	mov    r8,QWORD PTR [r12]
   140009ec8:	add    r12,0x8
   140009ecc:	jmp    0x140009f0b
   140009ece:	bt     r14d,0xc
   140009ed3:	jb     0x140009ec4
   140009ed5:	add    r12,0x8
   140009ed9:	test   r11b,r14b
   140009edc:	je     0x140009ef9
   140009ede:	mov    QWORD PTR [rsp+0x50],r12
   140009ee3:	test   r14b,0x40
   140009ee7:	je     0x140009ef1
   140009ee9:	movsx  r8,WORD PTR [r12-0x8]
   140009eef:	jmp    0x140009f10
   140009ef1:	movzx  r8d,WORD PTR [r12-0x8]
   140009ef7:	jmp    0x140009f10
   140009ef9:	test   r14b,0x40
   140009efd:	je     0x140009f06
   140009eff:	movsxd r8,DWORD PTR [r12-0x8]
   140009f04:	jmp    0x140009f0b
   140009f06:	mov    r8d,DWORD PTR [r12-0x8]
   140009f0b:	mov    QWORD PTR [rsp+0x50],r12
   140009f10:	test   r14b,0x40
   140009f14:	je     0x140009f23
   140009f16:	test   r8,r8
   140009f19:	jns    0x140009f23
   140009f1b:	neg    r8
   140009f1e:	bts    r14d,0x8
   140009f23:	test   eax,r14d
   140009f26:	jne    0x140009f32
   140009f28:	bt     r14d,0xc
   140009f2d:	jb     0x140009f32
   140009f2f:	mov    r8d,r8d
   140009f32:	test   edi,edi
   140009f34:	jns    0x140009f3d
   140009f36:	mov    edi,0x1
   140009f3b:	jmp    0x140009f48
   140009f3d:	and    r14d,0xfffffff7
   140009f41:	cmp    edi,r15d
   140009f44:	cmovg  edi,r15d
   140009f48:	mov    esi,DWORD PTR [rsp+0x7c]
   140009f4c:	mov    rax,r8
   140009f4f:	lea    rbx,[rbp+0x1bf]
   140009f56:	neg    rax
   140009f59:	sbb    ecx,ecx
   140009f5b:	and    ecx,edx
   140009f5d:	mov    DWORD PTR [rsp+0x4c],ecx
   140009f61:	mov    ecx,edi
   140009f63:	dec    edi
   140009f65:	test   ecx,ecx
   140009f67:	jg     0x140009f6e
   140009f69:	test   r8,r8
   140009f6c:	je     0x140009f8d
   140009f6e:	xor    edx,edx
   140009f70:	mov    rax,r8
   140009f73:	movsxd rcx,r9d
   140009f76:	div    rcx
   140009f79:	mov    r8,rax
   140009f7c:	lea    eax,[rdx+0x30]
   140009f7f:	cmp    eax,0x39
   140009f82:	jle    0x140009f86
   140009f84:	add    eax,esi
   140009f86:	mov    BYTE PTR [rbx],al
   140009f88:	dec    rbx
   140009f8b:	jmp    0x140009f61
   140009f8d:	mov    esi,DWORD PTR [rsp+0x44]
   140009f91:	lea    rax,[rbp+0x1bf]
   140009f98:	mov    DWORD PTR [rsp+0x48],edi
   140009f9c:	sub    eax,ebx
   140009f9e:	inc    rbx
   140009fa1:	mov    r13d,eax
   140009fa4:	test   r15d,r14d
   140009fa7:	je     0x140009ca3
   140009fad:	test   eax,eax
   140009faf:	mov    eax,0x30
   140009fb4:	je     0x140009fbe
   140009fb6:	cmp    BYTE PTR [rbx],al
   140009fb8:	je     0x140009ca3
   140009fbe:	dec    rbx
   140009fc1:	inc    r13d
   140009fc4:	mov    BYTE PTR [rbx],al
   140009fc6:	jmp    0x140009ca3
   140009fcb:	jne    0x140009fde
   140009fcd:	cmp    r15w,cx
   140009fd1:	jne    0x14000a00d
   140009fd3:	mov    r13d,0x1
   140009fd9:	jmp    0x140009d79
   140009fde:	cmp    edi,r9d
   140009fe1:	cmovg  edi,r9d
   140009fe5:	mov    DWORD PTR [rsp+0x48],edi
   140009fe9:	cmp    edi,0xa3
   140009fef:	jle    0x14000a01f
   140009ff1:	add    edi,0x15d
   140009ff7:	movsxd rcx,edi
   140009ffa:	call   0x14000b958
   140009fff:	mov    QWORD PTR [rbp-0x58],rax
   14000a003:	test   rax,rax
   14000a006:	je     0x14000a014
   14000a008:	mov    rbx,rax
   14000a00b:	mov    esi,edi
   14000a00d:	mov    r13d,DWORD PTR [rsp+0x48]
   14000a012:	jmp    0x14000a022
   14000a014:	mov    r13d,0xa3
   14000a01a:	jmp    0x140009d79
   14000a01f:	mov    r13d,edi
   14000a022:	mov    rax,QWORD PTR [r12]
   14000a026:	mov    rcx,QWORD PTR [rip+0x7fe3]        # 0x140012010
   14000a02d:	add    r12,0x8
   14000a031:	mov    QWORD PTR [rsp+0x50],r12
   14000a036:	movsx  edi,r15b
   14000a03a:	movsxd rsi,esi
   14000a03d:	mov    QWORD PTR [rbp-0x50],rax
   14000a041:	call   0x14000754c
   14000a046:	lea    rcx,[rbp-0x78]
   14000a04a:	mov    QWORD PTR [rsp+0x30],rcx
   14000a04f:	mov    ecx,DWORD PTR [rsp+0x78]
   14000a053:	mov    r9d,edi
   14000a056:	mov    DWORD PTR [rsp+0x28],ecx
   14000a05a:	lea    rcx,[rbp-0x50]
   14000a05e:	mov    r8,rsi
   14000a061:	mov    rdx,rbx
   14000a064:	mov    DWORD PTR [rsp+0x20],r13d
   14000a069:	call   rax
   14000a06b:	mov    edi,r14d
   14000a06e:	and    edi,0x80
   14000a074:	je     0x14000a090
   14000a076:	test   r13d,r13d
   14000a079:	jne    0x14000a090
   14000a07b:	mov    rcx,QWORD PTR [rip+0x7fa6]        # 0x140012028
   14000a082:	call   0x14000754c
   14000a087:	lea    rdx,[rbp-0x78]
   14000a08b:	mov    rcx,rbx
   14000a08e:	call   rax
   14000a090:	mov    ecx,0x67
   14000a095:	cmp    r15w,cx
   14000a099:	jne    0x14000a0b4
   14000a09b:	test   edi,edi
   14000a09d:	jne    0x14000a0b4
   14000a09f:	mov    rcx,QWORD PTR [rip+0x7f7a]        # 0x140012020
   14000a0a6:	call   0x14000754c
   14000a0ab:	lea    rdx,[rbp-0x78]
   14000a0af:	mov    rcx,rbx
   14000a0b2:	call   rax
   14000a0b4:	mov    ecx,0x2d
   14000a0b9:	cmp    BYTE PTR [rbx],cl
   14000a0bb:	jne    0x14000a0c5
   14000a0bd:	bts    r14d,0x8
   14000a0c2:	inc    rbx
   14000a0c5:	or     rax,0xffffffffffffffff
   14000a0c9:	xor    r10d,r10d
   14000a0cc:	inc    rax
   14000a0cf:	cmp    BYTE PTR [rbx+rax*1],r10b
   14000a0d3:	jne    0x14000a0cc
   14000a0d5:	mov    esi,DWORD PTR [rsp+0x44]
   14000a0d9:	mov    edi,DWORD PTR [rsp+0x40]
   14000a0dd:	mov    r13d,eax
   14000a0e0:	jmp    0x140009cac
   14000a0e5:	test   r14b,0x1
   14000a0e9:	je     0x14000a0fa
   14000a0eb:	mov    eax,0x2b
   14000a0f0:	mov    WORD PTR [rsp+0x5c],ax
   14000a0f5:	jmp    0x140009cd1
   14000a0fa:	test   r14b,0x2
   14000a0fe:	je     0x14000a113
   14000a100:	mov    eax,0x20
   14000a105:	mov    WORD PTR [rsp+0x5c],ax
   14000a10a:	lea    esi,[rax-0x1f]
   14000a10d:	mov    DWORD PTR [rsp+0x4c],esi
   14000a111:	jmp    0x14000a11c
   14000a113:	mov    esi,DWORD PTR [rsp+0x4c]
   14000a117:	mov    eax,0x20
   14000a11c:	mov    r15d,DWORD PTR [rsp+0x58]
   14000a121:	sub    r15d,r13d
   14000a124:	sub    r15d,esi
   14000a127:	test   r14b,0xc
   14000a12b:	jne    0x14000a141
   14000a12d:	mov    r8,QWORD PTR [rsp+0x70]
   14000a132:	lea    r9,[rsp+0x44]
   14000a137:	mov    ecx,eax
   14000a139:	mov    edx,r15d
   14000a13c:	call   0x14000a548
   14000a141:	mov    r8,QWORD PTR [rsp+0x70]
   14000a146:	lea    r9,[rsp+0x44]
   14000a14b:	lea    rcx,[rsp+0x5c]
   14000a150:	mov    edx,esi
   14000a152:	call   0x14000a5a0
   14000a157:	test   r14b,0x8
   14000a15b:	je     0x14000a17a
   14000a15d:	test   r14b,0x4
   14000a161:	jne    0x14000a17a
   14000a163:	mov    r8,QWORD PTR [rsp+0x70]
   14000a168:	lea    r9,[rsp+0x44]
   14000a16d:	mov    ecx,0x30
   14000a172:	mov    edx,r15d
   14000a175:	call   0x14000a548
   14000a17a:	test   edi,edi
   14000a17c:	jne    0x14000a1ee
   14000a17e:	test   r13d,r13d
   14000a181:	jle    0x14000a1ee
   14000a183:	mov    rdi,rbx
   14000a186:	mov    esi,r13d
   14000a189:	mov    rax,QWORD PTR [rbp-0x78]
   14000a18d:	lea    r9,[rbp-0x78]
   14000a191:	lea    rcx,[rsp+0x60]
   14000a196:	movsxd r8,DWORD PTR [rax+0x10c]
   14000a19d:	mov    rdx,rdi
   14000a1a0:	dec    esi
   14000a1a2:	call   0x14000d950
   14000a1a7:	xor    r10d,r10d
   14000a1aa:	movsxd r12,eax
   14000a1ad:	test   eax,eax
   14000a1af:	jle    0x14000a1db
   14000a1b1:	mov    rdx,QWORD PTR [rsp+0x70]
   14000a1b6:	movzx  ecx,WORD PTR [rsp+0x60]
   14000a1bb:	lea    r8,[rsp+0x44]
   14000a1c0:	call   0x14000a4f0
   14000a1c5:	add    rdi,r12
   14000a1c8:	xor    r10d,r10d
   14000a1cb:	test   esi,esi
   14000a1cd:	jg     0x14000a189
   14000a1cf:	mov    r12,QWORD PTR [rsp+0x50]
   14000a1d4:	mov    rdi,QWORD PTR [rsp+0x70]
   14000a1d9:	jmp    0x14000a209
   14000a1db:	mov    r12,QWORD PTR [rsp+0x50]
   14000a1e0:	mov    rdi,QWORD PTR [rsp+0x70]
   14000a1e5:	or     esi,0xffffffff
   14000a1e8:	mov    DWORD PTR [rsp+0x44],esi
   14000a1ec:	jmp    0x14000a20d
   14000a1ee:	mov    rdi,QWORD PTR [rsp+0x70]
   14000a1f3:	lea    r9,[rsp+0x44]
   14000a1f8:	mov    edx,r13d
   14000a1fb:	mov    r8,rdi
   14000a1fe:	mov    rcx,rbx
   14000a201:	call   0x14000a5a0
   14000a206:	xor    r10d,r10d
   14000a209:	mov    esi,DWORD PTR [rsp+0x44]
   14000a20d:	test   esi,esi
   14000a20f:	js     0x14000a233
   14000a211:	test   r14b,0x4
   14000a215:	je     0x14000a233
   14000a217:	lea    r9,[rsp+0x44]
   14000a21c:	mov    ecx,0x20
   14000a221:	mov    r8,rdi
   14000a224:	mov    edx,r15d
   14000a227:	call   0x14000a548
   14000a22c:	mov    esi,DWORD PTR [rsp+0x44]
   14000a230:	xor    r10d,r10d
   14000a233:	mov    r11d,0x20
   14000a239:	mov    rax,QWORD PTR [rbp-0x58]
   14000a23d:	test   rax,rax
   14000a240:	je     0x14000a486
   14000a246:	mov    rcx,rax
   14000a249:	call   0x14000b0d0
   14000a24e:	mov    edi,DWORD PTR [rsp+0x48]
   14000a252:	xor    r10d,r10d
   14000a255:	mov    QWORD PTR [rbp-0x58],r10
   14000a259:	mov    r11d,0x20
   14000a25f:	jmp    0x14000a48a
   14000a264:	movzx  eax,r15w
   14000a268:	cmp    eax,0x49
   14000a26b:	je     0x14000a2bd
   14000a26d:	cmp    eax,0x68
   14000a270:	je     0x14000a2b5
   14000a272:	mov    ecx,0x6c
   14000a277:	cmp    eax,ecx
   14000a279:	je     0x14000a293
   14000a27b:	mov    ecx,0x58
   14000a280:	cmp    eax,0x77
   14000a283:	jne    0x14000a49d
   14000a289:	bts    r14d,0xb
   14000a28e:	jmp    0x14000a49d
   14000a293:	cmp    WORD PTR [r8],cx
   14000a297:	mov    ecx,0x58
   14000a29c:	jne    0x14000a2ac
   14000a29e:	add    r8,0x2
   14000a2a2:	bts    r14d,0xc
   14000a2a7:	jmp    0x14000a49d
   14000a2ac:	or     r14d,0x10
   14000a2b0:	jmp    0x14000a49d
   14000a2b5:	or     r14d,r11d
   14000a2b8:	jmp    0x14000a498
   14000a2bd:	bts    r14d,0xf
   14000a2c2:	cmp    WORD PTR [r8],0x36
   14000a2c7:	jne    0x14000a2df
   14000a2c9:	cmp    WORD PTR [r8+0x2],0x34
   14000a2cf:	jne    0x14000a2df
   14000a2d1:	add    r8,0x4
   14000a2d5:	bts    r14d,0xf
   14000a2da:	jmp    0x14000a498
   14000a2df:	cmp    WORD PTR [r8],0x33
   14000a2e4:	jne    0x14000a2fc
   14000a2e6:	cmp    WORD PTR [r8+0x2],0x32
   14000a2ec:	jne    0x14000a2fc
   14000a2ee:	add    r8,0x4
   14000a2f2:	btr    r14d,0xf
   14000a2f7:	jmp    0x14000a498
   14000a2fc:	mov    eax,0x64
   14000a301:	cmp    WORD PTR [r8],ax
   14000a305:	je     0x14000a498
   14000a30b:	mov    eax,0x69
   14000a310:	cmp    WORD PTR [r8],ax
   14000a314:	je     0x14000a498
   14000a31a:	mov    eax,0x6f
   14000a31f:	cmp    WORD PTR [r8],ax
   14000a323:	je     0x14000a498
   14000a329:	mov    eax,0x75
   14000a32e:	lea    ecx,[rax-0x1d]
   14000a331:	cmp    WORD PTR [r8],ax
   14000a335:	je     0x14000a49d
   14000a33b:	lea    eax,[rcx+0x20]
   14000a33e:	cmp    WORD PTR [r8],ax
   14000a342:	je     0x14000a49d
   14000a348:	cmp    WORD PTR [r8],cx
   14000a34c:	je     0x14000a49d
   14000a352:	mov    DWORD PTR [rsp+0x68],r10d
   14000a357:	mov    rdx,QWORD PTR [rsp+0x70]
   14000a35c:	lea    r8,[rsp+0x44]
   14000a361:	movzx  ecx,r15w
   14000a365:	mov    DWORD PTR [rsp+0x40],0x1
   14000a36d:	call   0x14000a4f0
   14000a372:	mov    esi,DWORD PTR [rsp+0x44]
   14000a376:	xor    r10d,r10d
   14000a379:	jmp    0x14000a259
   14000a37e:	cmp    r15w,0x2a
   14000a383:	jne    0x14000a3af
   14000a385:	mov    edi,DWORD PTR [r12]
   14000a389:	add    r12,0x8
   14000a38d:	mov    ecx,0x58
   14000a392:	mov    QWORD PTR [rsp+0x50],r12
   14000a397:	mov    DWORD PTR [rsp+0x48],edi
   14000a39b:	test   edi,edi
   14000a39d:	jns    0x14000a49d
   14000a3a3:	or     edi,0xffffffff
   14000a3a6:	mov    DWORD PTR [rsp+0x48],edi
   14000a3aa:	jmp    0x14000a49d
   14000a3af:	lea    ecx,[rdi-0x6]
   14000a3b2:	movzx  eax,r15w
   14000a3b6:	lea    ecx,[rdi+rcx*4]
   14000a3b9:	lea    edi,[rax+rcx*2]
   14000a3bc:	mov    DWORD PTR [rsp+0x48],edi
   14000a3c0:	jmp    0x14000a498
   14000a3c5:	mov    edi,r10d
   14000a3c8:	mov    DWORD PTR [rsp+0x48],r10d
   14000a3cd:	jmp    0x14000a498
   14000a3d2:	cmp    r15w,0x2a
   14000a3d7:	jne    0x14000a401
   14000a3d9:	mov    ecx,DWORD PTR [r12]
   14000a3dd:	add    r12,0x8
   14000a3e1:	mov    QWORD PTR [rsp+0x50],r12
   14000a3e6:	mov    DWORD PTR [rsp+0x58],ecx
   14000a3ea:	test   ecx,ecx
   14000a3ec:	jns    0x14000a498
   14000a3f2:	or     r14d,0x4
   14000a3f6:	neg    ecx
   14000a3f8:	mov    DWORD PTR [rsp+0x58],ecx
   14000a3fc:	jmp    0x14000a498
   14000a401:	mov    eax,DWORD PTR [rsp+0x58]
   14000a405:	lea    ecx,[rax+rax*4]
   14000a408:	movzx  eax,r15w
   14000a40c:	add    ecx,0xffffffe8
   14000a40f:	lea    ecx,[rax+rcx*2]
   14000a412:	jmp    0x14000a3f8
   14000a414:	movzx  eax,r15w
   14000a418:	cmp    eax,r11d
   14000a41b:	je     0x14000a45b
   14000a41d:	cmp    eax,0x23
   14000a420:	je     0x14000a454
   14000a422:	mov    ecx,0x2b
   14000a427:	cmp    eax,ecx
   14000a429:	je     0x14000a44e
   14000a42b:	mov    ecx,0x2d
   14000a430:	cmp    eax,ecx
   14000a432:	je     0x14000a448
   14000a434:	mov    ecx,0x30
   14000a439:	cmp    eax,ecx
   14000a43b:	mov    ecx,0x58
   14000a440:	jne    0x14000a49d
   14000a442:	or     r14d,0x8
   14000a446:	jmp    0x14000a49d
   14000a448:	or     r14d,0x4
   14000a44c:	jmp    0x14000a498
   14000a44e:	or     r14d,0x1
   14000a452:	jmp    0x14000a498
   14000a454:	bts    r14d,0x7
   14000a459:	jmp    0x14000a498
   14000a45b:	or     r14d,0x2
   14000a45f:	jmp    0x14000a498
   14000a461:	or     edi,0xffffffff
   14000a464:	mov    DWORD PTR [rsp+0x78],r10d
   14000a469:	mov    DWORD PTR [rsp+0x6c],r10d
   14000a46e:	mov    DWORD PTR [rsp+0x58],r10d
   14000a473:	mov    DWORD PTR [rsp+0x4c],r10d
   14000a478:	mov    r14d,r10d
   14000a47b:	mov    DWORD PTR [rsp+0x48],edi
   14000a47f:	mov    DWORD PTR [rsp+0x40],r10d
   14000a484:	jmp    0x14000a498
   14000a486:	mov    edi,DWORD PTR [rsp+0x48]
   14000a48a:	mov    edx,DWORD PTR [rsp+0x68]
   14000a48e:	mov    r8,QWORD PTR [rbp-0x80]
   14000a492:	mov    r9d,0x200
   14000a498:	mov    ecx,0x58
   14000a49d:	movzx  r15d,WORD PTR [r8]
   14000a4a1:	test   r15w,r15w
   14000a4a5:	jne    0x140009aba
   14000a4ab:	cmp    BYTE PTR [rbp-0x60],r10b
   14000a4af:	je     0x14000a4bc
   14000a4b1:	mov    rcx,QWORD PTR [rbp-0x68]
   14000a4b5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000a4bc:	mov    eax,esi
   14000a4be:	mov    rcx,QWORD PTR [rbp+0x3c0]
   14000a4c5:	xor    rcx,rsp
   14000a4c8:	call   0x140006d40
   14000a4cd:	mov    rbx,QWORD PTR [rsp+0x520]
   14000a4d5:	add    rsp,0x4d0
   14000a4dc:	pop    r15
   14000a4de:	pop    r14
   14000a4e0:	pop    r13
   14000a4e2:	pop    r12
   14000a4e4:	pop    rdi
   14000a4e5:	pop    rsi
   14000a4e6:	pop    rbp
   14000a4e7:	ret    
   14000a4e8:	int3   
   14000a4e9:	int3   
   14000a4ea:	int3   
   14000a4eb:	int3   
   14000a4ec:	int3   
   14000a4ed:	int3   
   14000a4ee:	int3   
   14000a4ef:	int3   
   14000a4f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a4f5:	push   rdi
   14000a4f6:	sub    rsp,0x20
   14000a4fa:	test   BYTE PTR [rdx+0x18],0x40
   14000a4fe:	mov    rbx,r8
   14000a501:	mov    rdi,rdx
   14000a504:	je     0x14000a512
   14000a506:	cmp    QWORD PTR [rdx+0x10],0x0
   14000a50b:	jne    0x14000a512
   14000a50d:	inc    DWORD PTR [r8]
   14000a510:	jmp    0x14000a534
   14000a512:	call   0x14000d738
   14000a517:	mov    ecx,0xffff
   14000a51c:	cmp    ax,cx
   14000a51f:	jne    0x14000a532
   14000a521:	mov    rcx,rdi
   14000a524:	call   0x14000d6d8
   14000a529:	test   eax,eax
   14000a52b:	je     0x14000a532
   14000a52d:	or     DWORD PTR [rbx],0xffffffff
   14000a530:	jmp    0x14000a534
   14000a532:	inc    DWORD PTR [rbx]
   14000a534:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a539:	add    rsp,0x20
   14000a53d:	pop    rdi
   14000a53e:	ret    
   14000a53f:	int3   
   14000a540:	int3   
   14000a541:	int3   
   14000a542:	int3   
   14000a543:	int3   
   14000a544:	int3   
   14000a545:	int3   
   14000a546:	int3   
   14000a547:	int3   
   14000a548:	test   edx,edx
   14000a54a:	jle    0x14000a598
   14000a54c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a551:	mov    QWORD PTR [rsp+0x10],rbp
   14000a556:	mov    QWORD PTR [rsp+0x18],rsi
   14000a55b:	push   rdi
   14000a55c:	sub    rsp,0x20
   14000a560:	mov    rdi,r9
   14000a563:	mov    rsi,r8
   14000a566:	mov    ebx,edx
   14000a568:	movzx  ebp,cx
   14000a56b:	mov    r8,rdi
   14000a56e:	mov    rdx,rsi
   14000a571:	movzx  ecx,bp
   14000a574:	dec    ebx
   14000a576:	call   0x14000a4f0
   14000a57b:	cmp    DWORD PTR [rdi],0xffffffff
   14000a57e:	je     0x14000a584
   14000a580:	test   ebx,ebx
   14000a582:	jg     0x14000a56b
   14000a584:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a589:	mov    rbp,QWORD PTR [rsp+0x38]
   14000a58e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000a593:	add    rsp,0x20
   14000a597:	pop    rdi
   14000a598:	ret    
   14000a599:	int3   
   14000a59a:	int3   
   14000a59b:	int3   
   14000a59c:	int3   
   14000a59d:	int3   
   14000a59e:	int3   
   14000a59f:	int3   
   14000a5a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000a5a5:	mov    QWORD PTR [rsp+0x10],rsi
   14000a5aa:	mov    QWORD PTR [rsp+0x18],rdi
   14000a5af:	push   r14
   14000a5b1:	sub    rsp,0x20
   14000a5b5:	test   BYTE PTR [r8+0x18],0x40
   14000a5ba:	mov    rdi,r9
   14000a5bd:	mov    rsi,r8
   14000a5c0:	mov    ebx,edx
   14000a5c2:	mov    r14,rcx
   14000a5c5:	je     0x14000a5d3
   14000a5c7:	cmp    QWORD PTR [r8+0x10],0x0
   14000a5cc:	jne    0x14000a5d3
   14000a5ce:	add    DWORD PTR [r9],edx
   14000a5d1:	jmp    0x14000a60f
   14000a5d3:	test   edx,edx
   14000a5d5:	jle    0x14000a60f
   14000a5d7:	movzx  ecx,WORD PTR [r14]
   14000a5db:	mov    r8,rdi
   14000a5de:	mov    rdx,rsi
   14000a5e1:	dec    ebx
   14000a5e3:	call   0x14000a4f0
   14000a5e8:	add    r14,0x2
   14000a5ec:	cmp    DWORD PTR [rdi],0xffffffff
   14000a5ef:	jne    0x14000a60b
   14000a5f1:	call   0x140009658
   14000a5f6:	cmp    DWORD PTR [rax],0x2a
   14000a5f9:	jne    0x14000a60f
   14000a5fb:	mov    ecx,0x3f
   14000a600:	mov    r8,rdi
   14000a603:	mov    rdx,rsi
   14000a606:	call   0x14000a4f0
   14000a60b:	test   ebx,ebx
   14000a60d:	jg     0x14000a5d7
   14000a60f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a614:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a619:	mov    rdi,QWORD PTR [rsp+0x40]
   14000a61e:	add    rsp,0x20
   14000a622:	pop    r14
   14000a624:	ret    
   14000a625:	int3   
   14000a626:	int3   
   14000a627:	int3   
   14000a628:	int3   
   14000a629:	int3   
   14000a62a:	int3   
   14000a62b:	int3   
   14000a62c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a631:	mov    QWORD PTR [rsp+0x10],rdi
   14000a636:	push   r14
   14000a638:	sub    rsp,0x20
   14000a63c:	mov    rbx,rcx
   14000a63f:	call   0x14000cb3c
   14000a644:	mov    ecx,eax
   14000a646:	call   0x14000cb78
   14000a64b:	test   eax,eax
   14000a64d:	je     0x14000a6e6
   14000a653:	lea    rax,[rip+0x73b6]        # 0x140011a10
   14000a65a:	cmp    rbx,rax
   14000a65d:	jne    0x14000a663
   14000a65f:	xor    eax,eax
   14000a661:	jmp    0x14000a674
   14000a663:	lea    rax,[rip+0x73d6]        # 0x140011a40
   14000a66a:	cmp    rbx,rax
   14000a66d:	jne    0x14000a6e6
   14000a66f:	mov    eax,0x1
   14000a674:	inc    DWORD PTR [rip+0x89be]        # 0x140013038
   14000a67a:	test   DWORD PTR [rbx+0x18],0x10c
   14000a681:	jne    0x14000a6e6
   14000a683:	lea    r14,[rip+0x899e]        # 0x140013028
   14000a68a:	movsxd rdi,eax
   14000a68d:	cmp    QWORD PTR [r14+rdi*8],0x0
   14000a692:	jne    0x14000a6bf
   14000a694:	mov    ecx,0x1000
   14000a699:	call   0x14000b958
   14000a69e:	mov    QWORD PTR [r14+rdi*8],rax
   14000a6a2:	test   rax,rax
   14000a6a5:	jne    0x14000a6bf
   14000a6a7:	lea    rax,[rbx+0x20]
   14000a6ab:	mov    QWORD PTR [rbx+0x10],rax
   14000a6af:	mov    QWORD PTR [rbx],rax
   14000a6b2:	mov    eax,0x2
   14000a6b7:	mov    DWORD PTR [rbx+0x24],eax
   14000a6ba:	mov    DWORD PTR [rbx+0x8],eax
   14000a6bd:	jmp    0x14000a6d8
   14000a6bf:	mov    rcx,QWORD PTR [r14+rdi*8]
   14000a6c3:	mov    DWORD PTR [rbx+0x24],0x1000
   14000a6ca:	mov    DWORD PTR [rbx+0x8],0x1000
   14000a6d1:	mov    QWORD PTR [rbx+0x10],rcx
   14000a6d5:	mov    QWORD PTR [rbx],rcx
   14000a6d8:	or     DWORD PTR [rbx+0x18],0x1102
   14000a6df:	mov    eax,0x1
   14000a6e4:	jmp    0x14000a6e8
   14000a6e6:	xor    eax,eax
   14000a6e8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a6ed:	mov    rdi,QWORD PTR [rsp+0x38]
   14000a6f2:	add    rsp,0x20
   14000a6f6:	pop    r14
   14000a6f8:	ret    
   14000a6f9:	int3   
   14000a6fa:	int3   
   14000a6fb:	int3   
   14000a6fc:	int3   
   14000a6fd:	int3   
   14000a6fe:	int3   
   14000a6ff:	int3   
   14000a700:	test   ecx,ecx
   14000a702:	je     0x14000a736
   14000a704:	push   rbx
   14000a705:	sub    rsp,0x20
   14000a709:	test   DWORD PTR [rdx+0x18],0x1000
   14000a710:	mov    rbx,rdx
   14000a713:	je     0x14000a731
   14000a715:	mov    rcx,rdx
   14000a718:	call   0x14000e750
   14000a71d:	and    DWORD PTR [rbx+0x18],0xffffeeff
   14000a724:	and    DWORD PTR [rbx+0x24],0x0
   14000a728:	and    QWORD PTR [rbx],0x0
   14000a72c:	and    QWORD PTR [rbx+0x10],0x0
   14000a731:	add    rsp,0x20
   14000a735:	pop    rbx
   14000a736:	ret    
   14000a737:	int3   
   14000a738:	int3   
   14000a739:	int3   
   14000a73a:	int3   
   14000a73b:	int3   
   14000a73c:	int3   
   14000a73d:	int3   
   14000a73e:	int3   
   14000a73f:	int3   
   14000a740:	rex push rbx
   14000a742:	sub    rsp,0x20
   14000a746:	mov    eax,DWORD PTR [rip+0x90a4]        # 0x1400137f0
   14000a74c:	mov    ebx,0x14
   14000a751:	test   eax,eax
   14000a753:	jne    0x14000a75c
   14000a755:	mov    eax,0x200
   14000a75a:	jmp    0x14000a761
   14000a75c:	cmp    eax,ebx
   14000a75e:	cmovl  eax,ebx
   14000a761:	movsxd rcx,eax
   14000a764:	mov    edx,0x8
   14000a769:	mov    DWORD PTR [rip+0x9081],eax        # 0x1400137f0
   14000a76f:	call   0x14000b910
   14000a774:	mov    QWORD PTR [rip+0x906d],rax        # 0x1400137e8
   14000a77b:	test   rax,rax
   14000a77e:	jne    0x14000a7a4
   14000a780:	lea    edx,[rax+0x8]
   14000a783:	mov    rcx,rbx
   14000a786:	mov    DWORD PTR [rip+0x9064],ebx        # 0x1400137f0
   14000a78c:	call   0x14000b910
   14000a791:	mov    QWORD PTR [rip+0x9050],rax        # 0x1400137e8
   14000a798:	test   rax,rax
   14000a79b:	jne    0x14000a7a4
   14000a79d:	mov    eax,0x1a
   14000a7a2:	jmp    0x14000a81a
   14000a7a4:	xor    ecx,ecx
   14000a7a6:	lea    rdx,[rip+0x7233]        # 0x1400119e0
   14000a7ad:	mov    QWORD PTR [rcx+rax*1],rdx
   14000a7b1:	add    rdx,0x30
   14000a7b5:	add    rcx,0x8
   14000a7b9:	dec    rbx
   14000a7bc:	je     0x14000a7c7
   14000a7be:	mov    rax,QWORD PTR [rip+0x9023]        # 0x1400137e8
   14000a7c5:	jmp    0x14000a7ad
   14000a7c7:	xor    r8d,r8d
   14000a7ca:	lea    rdx,[rip+0x722b]        # 0x1400119fc
   14000a7d1:	lea    r10d,[r8+0x3]
   14000a7d5:	mov    rcx,r8
   14000a7d8:	lea    r9,[rip+0xa041]        # 0x140014820
   14000a7df:	mov    rax,r8
   14000a7e2:	sar    rax,0x5
   14000a7e6:	and    ecx,0x1f
   14000a7e9:	mov    rax,QWORD PTR [r9+rax*8]
   14000a7ed:	imul   rcx,rcx,0x38
   14000a7f1:	mov    r9,QWORD PTR [rcx+rax*1]
   14000a7f5:	cmp    r9,0xffffffffffffffff
   14000a7f9:	je     0x14000a806
   14000a7fb:	cmp    r9,0xfffffffffffffffe
   14000a7ff:	je     0x14000a806
   14000a801:	test   r9,r9
   14000a804:	jne    0x14000a80c
   14000a806:	mov    DWORD PTR [rdx],0xfffffffe
   14000a80c:	inc    r8
   14000a80f:	add    rdx,0x30
   14000a813:	dec    r10
   14000a816:	jne    0x14000a7d5
   14000a818:	xor    eax,eax
   14000a81a:	add    rsp,0x20
   14000a81e:	pop    rbx
   14000a81f:	ret    
   14000a820:	int3   
   14000a821:	int3   
   14000a822:	int3   
   14000a823:	int3   
   14000a824:	int3   
   14000a825:	int3   
   14000a826:	int3   
   14000a827:	int3   
   14000a828:	sub    rsp,0x28
   14000a82c:	call   0x14000e6ec
   14000a831:	cmp    BYTE PTR [rip+0x7cf0],0x0        # 0x140012528
   14000a838:	je     0x14000a83f
   14000a83a:	call   0x14000e8c4
   14000a83f:	mov    rcx,QWORD PTR [rip+0x8fa2]        # 0x1400137e8
   14000a846:	add    rsp,0x28
   14000a84a:	jmp    0x14000b0d0
   14000a84f:	int3   
   14000a850:	int3   
   14000a851:	int3   
   14000a852:	int3   
   14000a853:	int3   
   14000a854:	int3   
   14000a855:	int3   
   14000a856:	int3   
   14000a857:	int3   
   14000a858:	rex push rbx
   14000a85a:	sub    rsp,0x20
   14000a85e:	mov    rbx,rcx
   14000a861:	lea    rcx,[rip+0x7178]        # 0x1400119e0
   14000a868:	cmp    rbx,rcx
   14000a86b:	jb     0x14000a8ac
   14000a86d:	lea    rax,[rip+0x74fc]        # 0x140011d70
   14000a874:	cmp    rbx,rax
   14000a877:	ja     0x14000a8ac
   14000a879:	mov    rdx,rbx
   14000a87c:	movabs rax,0x2aaaaaaaaaaaaaab
   14000a886:	sub    rdx,rcx
   14000a889:	imul   rdx
   14000a88c:	sar    rdx,0x3
   14000a890:	mov    rcx,rdx
   14000a893:	shr    rcx,0x3f
   14000a897:	add    ecx,0x10
   14000a89a:	add    ecx,edx
   14000a89c:	call   0x14000b064
   14000a8a1:	bts    DWORD PTR [rbx+0x18],0xf
   14000a8a6:	add    rsp,0x20
   14000a8aa:	pop    rbx
   14000a8ab:	ret    
   14000a8ac:	lea    rcx,[rbx+0x30]
   14000a8b0:	add    rsp,0x20
   14000a8b4:	pop    rbx
   14000a8b5:	rex.W jmp QWORD PTR [rip+0xbdac]        # 0x140016668
   14000a8bc:	int3   
   14000a8bd:	int3   
   14000a8be:	int3   
   14000a8bf:	int3   
   14000a8c0:	int3   
   14000a8c1:	int3   
   14000a8c2:	int3   
   14000a8c3:	int3   
   14000a8c4:	lea    rdx,[rip+0x7115]        # 0x1400119e0
   14000a8cb:	cmp    rcx,rdx
   14000a8ce:	jb     0x14000a906
   14000a8d0:	lea    rax,[rip+0x7499]        # 0x140011d70
   14000a8d7:	cmp    rcx,rax
   14000a8da:	ja     0x14000a906
   14000a8dc:	btr    DWORD PTR [rcx+0x18],0xf
   14000a8e1:	sub    rcx,rdx
   14000a8e4:	movabs rax,0x2aaaaaaaaaaaaaab
   14000a8ee:	imul   rcx
   14000a8f1:	sar    rdx,0x3
   14000a8f5:	mov    rcx,rdx
   14000a8f8:	shr    rcx,0x3f
   14000a8fc:	add    ecx,0x10
   14000a8ff:	add    ecx,edx
   14000a901:	jmp    0x14000b0b0
   14000a906:	add    rcx,0x30
   14000a90a:	rex.W jmp QWORD PTR [rip+0xbc2f]        # 0x140016540
   14000a911:	int3   
   14000a912:	int3   
   14000a913:	int3   
   14000a914:	int3   
   14000a915:	int3   
   14000a916:	int3   
   14000a917:	int3   
   14000a918:	rex push rbx
   14000a91a:	sub    rsp,0x20
   14000a91e:	mov    rbx,rdx
   14000a921:	cmp    ecx,0x14
   14000a924:	jge    0x14000a939
   14000a926:	add    ecx,0x10
   14000a929:	call   0x14000b064
   14000a92e:	bts    DWORD PTR [rbx+0x18],0xf
   14000a933:	add    rsp,0x20
   14000a937:	pop    rbx
   14000a938:	ret    
   14000a939:	lea    rcx,[rdx+0x30]
   14000a93d:	add    rsp,0x20
   14000a941:	pop    rbx
   14000a942:	rex.W jmp QWORD PTR [rip+0xbd1f]        # 0x140016668
   14000a949:	int3   
   14000a94a:	int3   
   14000a94b:	int3   
   14000a94c:	int3   
   14000a94d:	int3   
   14000a94e:	int3   
   14000a94f:	int3   
   14000a950:	cmp    ecx,0x14
   14000a953:	jge    0x14000a962
   14000a955:	btr    DWORD PTR [rdx+0x18],0xf
   14000a95a:	add    ecx,0x10
   14000a95d:	jmp    0x14000b0b0
   14000a962:	lea    rcx,[rdx+0x30]
   14000a966:	rex.W jmp QWORD PTR [rip+0xbbd3]        # 0x140016540
   14000a96d:	int3   
   14000a96e:	int3   
   14000a96f:	int3   
   14000a970:	int3   
   14000a971:	int3   
   14000a972:	int3   
   14000a973:	int3   
   14000a974:	mov    rax,rsp
   14000a977:	mov    QWORD PTR [rax+0x8],rbx
   14000a97b:	mov    QWORD PTR [rax+0x18],rbp
   14000a97f:	mov    QWORD PTR [rax+0x20],rsi
   14000a983:	mov    QWORD PTR [rax+0x10],rdx
   14000a987:	push   rdi
   14000a988:	push   r12
   14000a98a:	push   r13
   14000a98c:	push   r14
   14000a98e:	push   r15
   14000a990:	sub    rsp,0x40
   14000a994:	mov    r13,QWORD PTR [r9+0x8]
   14000a998:	mov    r12,QWORD PTR [r9]
   14000a99b:	mov    rsi,QWORD PTR [r9+0x38]
   14000a99f:	movsxd rdi,DWORD PTR [r9+0x48]
   14000a9a3:	sub    r12,r13
   14000a9a6:	test   BYTE PTR [rcx+0x4],0x66
   14000a9aa:	mov    r14,r9
   14000a9ad:	mov    rbp,rdx
   14000a9b0:	mov    r15,rcx
   14000a9b3:	jne    0x14000aaa2
   14000a9b9:	mov    QWORD PTR [rax-0x38],rcx
   14000a9bd:	mov    QWORD PTR [rax-0x30],r8
   14000a9c1:	mov    rax,rdi
   14000a9c4:	cmp    edi,DWORD PTR [rsi]
   14000a9c6:	jae    0x14000ab47
   14000a9cc:	lea    rbx,[rsi+0xc]
   14000a9d0:	shl    rax,0x4
   14000a9d4:	add    rbx,rax
   14000a9d7:	mov    eax,DWORD PTR [rbx-0x8]
   14000a9da:	cmp    r12,rax
   14000a9dd:	jb     0x14000aa88
   14000a9e3:	mov    eax,DWORD PTR [rbx-0x4]
   14000a9e6:	cmp    r12,rax
   14000a9e9:	jae    0x14000aa88
   14000a9ef:	cmp    DWORD PTR [rbx+0x4],0x0
   14000a9f3:	je     0x14000aa88
   14000a9f9:	cmp    DWORD PTR [rbx],0x1
   14000a9fc:	je     0x14000aa17
   14000a9fe:	mov    eax,DWORD PTR [rbx]
   14000aa00:	lea    rcx,[rsp+0x30]
   14000aa05:	mov    rdx,rbp
   14000aa08:	add    rax,r13
   14000aa0b:	call   rax
   14000aa0d:	test   eax,eax
   14000aa0f:	js     0x14000aa9b
   14000aa15:	jle    0x14000aa88
   14000aa17:	cmp    DWORD PTR [r15],0xe06d7363
   14000aa1e:	jne    0x14000aa48
   14000aa20:	cmp    QWORD PTR [rip+0x8db8],0x0        # 0x1400137e0
   14000aa28:	je     0x14000aa48
   14000aa2a:	lea    rcx,[rip+0x8daf]        # 0x1400137e0
   14000aa31:	call   0x14000b230
   14000aa36:	test   eax,eax
   14000aa38:	je     0x14000aa48
   14000aa3a:	mov    edx,0x1
   14000aa3f:	mov    rcx,r15
   14000aa42:	call   QWORD PTR [rip+0x8d98]        # 0x1400137e0
   14000aa48:	mov    ecx,DWORD PTR [rbx+0x4]
   14000aa4b:	mov    r8d,0x1
   14000aa51:	mov    rdx,rbp
   14000aa54:	add    rcx,r13
   14000aa57:	call   0x14000e980
   14000aa5c:	mov    rax,QWORD PTR [r14+0x40]
   14000aa60:	mov    edx,DWORD PTR [rbx+0x4]
   14000aa63:	movsxd r9,DWORD PTR [r15]
   14000aa66:	mov    QWORD PTR [rsp+0x28],rax
   14000aa6b:	mov    rax,QWORD PTR [r14+0x28]
   14000aa6f:	add    rdx,r13
   14000aa72:	mov    r8,r15
   14000aa75:	mov    rcx,rbp
   14000aa78:	mov    QWORD PTR [rsp+0x20],rax
   14000aa7d:	call   QWORD PTR [rip+0xbcdd]        # 0x140016760
   14000aa83:	call   0x14000e9b0
   14000aa88:	inc    edi
   14000aa8a:	add    rbx,0x10
   14000aa8e:	cmp    edi,DWORD PTR [rsi]
   14000aa90:	jae    0x14000ab47
   14000aa96:	jmp    0x14000a9d7
   14000aa9b:	xor    eax,eax
   14000aa9d:	jmp    0x14000ab4c
   14000aaa2:	mov    rbp,QWORD PTR [r9+0x20]
   14000aaa6:	mov    edx,DWORD PTR [rsi]
   14000aaa8:	mov    rbx,rdi
   14000aaab:	sub    rbp,r13
   14000aaae:	cmp    edi,edx
   14000aab0:	jae    0x14000ab47
   14000aab6:	inc    rbx
   14000aab9:	shl    rbx,0x4
   14000aabd:	add    rbx,rsi
   14000aac0:	mov    eax,DWORD PTR [rbx-0xc]
   14000aac3:	cmp    r12,rax
   14000aac6:	jb     0x14000ab37
   14000aac8:	mov    eax,DWORD PTR [rbx-0x8]
   14000aacb:	cmp    r12,rax
   14000aace:	jae    0x14000ab37
   14000aad0:	test   BYTE PTR [r15+0x4],0x20
   14000aad5:	je     0x14000ab11
   14000aad7:	xor    r8d,r8d
   14000aada:	test   edx,edx
   14000aadc:	je     0x14000ab0c
   14000aade:	lea    rcx,[rsi+0x8]
   14000aae2:	mov    eax,DWORD PTR [rcx-0x4]
   14000aae5:	cmp    rbp,rax
   14000aae8:	jb     0x14000ab00
   14000aaea:	mov    eax,DWORD PTR [rcx]
   14000aaec:	cmp    rbp,rax
   14000aaef:	jae    0x14000ab00
   14000aaf1:	mov    eax,DWORD PTR [rbx]
   14000aaf3:	cmp    DWORD PTR [rcx+0x8],eax
   14000aaf6:	jne    0x14000ab00
   14000aaf8:	mov    eax,DWORD PTR [rbx-0x4]
   14000aafb:	cmp    DWORD PTR [rcx+0x4],eax
   14000aafe:	je     0x14000ab0c
   14000ab00:	inc    r8d
   14000ab03:	add    rcx,0x10
   14000ab07:	cmp    r8d,edx
   14000ab0a:	jb     0x14000aae2
   14000ab0c:	cmp    r8d,edx
   14000ab0f:	jne    0x14000ab47
   14000ab11:	cmp    DWORD PTR [rbx],0x0
   14000ab14:	je     0x14000ab1f
   14000ab16:	mov    eax,DWORD PTR [rbx]
   14000ab18:	cmp    rbp,rax
   14000ab1b:	je     0x14000ab47
   14000ab1d:	jmp    0x14000ab37
   14000ab1f:	mov    rdx,QWORD PTR [rsp+0x78]
   14000ab24:	lea    eax,[rdi+0x1]
   14000ab27:	mov    cl,0x1
   14000ab29:	mov    DWORD PTR [r14+0x48],eax
   14000ab2d:	mov    r8d,DWORD PTR [rbx-0x4]
   14000ab31:	add    r8,r13
   14000ab34:	call   r8
   14000ab37:	mov    edx,DWORD PTR [rsi]
   14000ab39:	inc    edi
   14000ab3b:	add    rbx,0x10
   14000ab3f:	cmp    edi,edx
   14000ab41:	jb     0x14000aac0
   14000ab47:	mov    eax,0x1
   14000ab4c:	lea    r11,[rsp+0x40]
   14000ab51:	mov    rbx,QWORD PTR [r11+0x30]
   14000ab55:	mov    rbp,QWORD PTR [r11+0x40]
   14000ab59:	mov    rsi,QWORD PTR [r11+0x48]
   14000ab5d:	mov    rsp,r11
   14000ab60:	pop    r15
   14000ab62:	pop    r14
   14000ab64:	pop    r13
   14000ab66:	pop    r12
   14000ab68:	pop    rdi
   14000ab69:	ret    
   14000ab6a:	int3   
   14000ab6b:	int3   
   14000ab6c:	int3   
   14000ab6d:	int3   
   14000ab6e:	int3   
   14000ab6f:	int3   
   14000ab70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab75:	mov    QWORD PTR [rsp+0x10],rdx
   14000ab7a:	push   rbp
   14000ab7b:	push   rsi
   14000ab7c:	push   rdi
   14000ab7d:	push   r12
   14000ab7f:	push   r13
   14000ab81:	push   r14
   14000ab83:	push   r15
   14000ab85:	sub    rsp,0x50
   14000ab89:	mov    r12,rdx
   14000ab8c:	mov    rdx,rcx
   14000ab8f:	lea    rcx,[rsp+0x30]
   14000ab94:	mov    r14d,r9d
   14000ab97:	mov    r15,r8
   14000ab9a:	call   0x140006f24
   14000ab9f:	xor    r13d,r13d
   14000aba2:	test   r15,r15
   14000aba5:	je     0x14000abaa
   14000aba7:	mov    QWORD PTR [r15],r12
   14000abaa:	test   r12,r12
   14000abad:	jne    0x14000abe8
   14000abaf:	call   0x140009658
   14000abb4:	xor    r9d,r9d
   14000abb7:	xor    r8d,r8d
   14000abba:	xor    edx,edx
   14000abbc:	xor    ecx,ecx
   14000abbe:	mov    QWORD PTR [rsp+0x20],r13
   14000abc3:	mov    DWORD PTR [rax],0x16
   14000abc9:	call   0x14000974c
   14000abce:	cmp    BYTE PTR [rsp+0x48],r13b
   14000abd3:	je     0x14000abe1
   14000abd5:	mov    rax,QWORD PTR [rsp+0x40]
   14000abda:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000abe1:	xor    eax,eax
   14000abe3:	jmp    0x14000adb4
   14000abe8:	test   r14d,r14d
   14000abeb:	je     0x14000abf9
   14000abed:	cmp    r14d,0x2
   14000abf1:	jl     0x14000abaf
   14000abf3:	cmp    r14d,0x24
   14000abf7:	jg     0x14000abaf
   14000abf9:	movzx  esi,WORD PTR [r12]
   14000abfe:	mov    edi,r13d
   14000ac01:	lea    rbx,[r12+0x2]
   14000ac06:	mov    ebp,0x8
   14000ac0b:	jmp    0x14000ac14
   14000ac0d:	movzx  esi,WORD PTR [rbx]
   14000ac10:	add    rbx,0x2
   14000ac14:	lea    r8,[rsp+0x30]
   14000ac19:	mov    edx,ebp
   14000ac1b:	movzx  ecx,si
   14000ac1e:	call   0x14000c9f0
   14000ac23:	test   eax,eax
   14000ac25:	jne    0x14000ac0d
   14000ac27:	mov    ebp,DWORD PTR [rsp+0xb0]
   14000ac2e:	cmp    si,0x2d
   14000ac32:	jne    0x14000ac39
   14000ac34:	or     ebp,0x2
   14000ac37:	jmp    0x14000ac3f
   14000ac39:	cmp    si,0x2b
   14000ac3d:	jne    0x14000ac46
   14000ac3f:	movzx  esi,WORD PTR [rbx]
   14000ac42:	add    rbx,0x2
   14000ac46:	test   r14d,r14d
   14000ac49:	jne    0x14000ac79
   14000ac4b:	movzx  ecx,si
   14000ac4e:	call   0x14000e9b8
   14000ac53:	test   eax,eax
   14000ac55:	je     0x14000ac5f
   14000ac57:	mov    r14d,0xa
   14000ac5d:	jmp    0x14000ac9f
   14000ac5f:	cmp    WORD PTR [rbx],0x78
   14000ac63:	je     0x14000ac73
   14000ac65:	cmp    WORD PTR [rbx],0x58
   14000ac69:	je     0x14000ac73
   14000ac6b:	mov    r14d,0x8
   14000ac71:	jmp    0x14000ac9f
   14000ac73:	mov    r14d,0x10
   14000ac79:	cmp    r14d,0x10
   14000ac7d:	jne    0x14000ac9f
   14000ac7f:	movzx  ecx,si
   14000ac82:	call   0x14000e9b8
   14000ac87:	test   eax,eax
   14000ac89:	jne    0x14000ac9f
   14000ac8b:	cmp    WORD PTR [rbx],0x78
   14000ac8f:	je     0x14000ac97
   14000ac91:	cmp    WORD PTR [rbx],0x58
   14000ac95:	jne    0x14000ac9f
   14000ac97:	movzx  esi,WORD PTR [rbx+0x2]
   14000ac9b:	add    rbx,0x4
   14000ac9f:	xor    edx,edx
   14000aca1:	or     eax,0xffffffff
   14000aca4:	div    r14d
   14000aca7:	mov    r13d,eax
   14000acaa:	mov    r12d,edx
   14000acad:	movzx  ecx,si
   14000acb0:	call   0x14000e9b8
   14000acb5:	cmp    eax,0xffffffff
   14000acb8:	jne    0x14000ace5
   14000acba:	mov    eax,0x41
   14000acbf:	cmp    ax,si
   14000acc2:	ja     0x14000acca
   14000acc4:	cmp    si,0x5a
   14000acc8:	jbe    0x14000acd3
   14000acca:	lea    eax,[rsi-0x61]
   14000accd:	cmp    ax,0x19
   14000acd1:	ja     0x14000ad0b
   14000acd3:	lea    eax,[rsi-0x61]
   14000acd6:	cmp    ax,0x19
   14000acda:	movzx  eax,si
   14000acdd:	ja     0x14000ace2
   14000acdf:	sub    eax,0x20
   14000ace2:	add    eax,0xffffffc9
   14000ace5:	cmp    eax,r14d
   14000ace8:	jae    0x14000ad0b
   14000acea:	or     ebp,0x8
   14000aced:	cmp    DWORD PTR [rsp+0xb8],0x0
   14000acf5:	jne    0x14000ad28
   14000acf7:	cmp    edi,r13d
   14000acfa:	jb     0x14000ad28
   14000acfc:	jne    0x14000ad03
   14000acfe:	cmp    eax,r12d
   14000ad01:	jbe    0x14000ad28
   14000ad03:	or     ebp,0x4
   14000ad06:	test   r15,r15
   14000ad09:	jne    0x14000ad2e
   14000ad0b:	mov    r12,QWORD PTR [rsp+0x98]
   14000ad13:	sub    rbx,0x2
   14000ad17:	test   bpl,0x8
   14000ad1b:	jne    0x14000ad3a
   14000ad1d:	test   r15,r15
   14000ad20:	cmovne rbx,r12
   14000ad24:	xor    edi,edi
   14000ad26:	jmp    0x14000ad8f
   14000ad28:	imul   edi,r14d
   14000ad2c:	add    edi,eax
   14000ad2e:	movzx  esi,WORD PTR [rbx]
   14000ad31:	add    rbx,0x2
   14000ad35:	jmp    0x14000acad
   14000ad3a:	mov    esi,0x7fffffff
   14000ad3f:	test   bpl,0x4
   14000ad43:	jne    0x14000ad62
   14000ad45:	test   bpl,0x1
   14000ad49:	jne    0x14000ad8f
   14000ad4b:	mov    eax,ebp
   14000ad4d:	and    eax,0x2
   14000ad50:	je     0x14000ad5a
   14000ad52:	cmp    edi,0x80000000
   14000ad58:	ja     0x14000ad62
   14000ad5a:	test   eax,eax
   14000ad5c:	jne    0x14000ad8f
   14000ad5e:	cmp    edi,esi
   14000ad60:	jbe    0x14000ad8f
   14000ad62:	cmp    DWORD PTR [rsp+0xb8],0x0
   14000ad6a:	jne    0x14000ad8f
   14000ad6c:	call   0x140009658
   14000ad71:	mov    DWORD PTR [rax],0x22
   14000ad77:	test   bpl,0x1
   14000ad7b:	je     0x14000ad82
   14000ad7d:	or     edi,0xffffffff
   14000ad80:	jmp    0x14000ad8f
   14000ad82:	mov    al,bpl
   14000ad85:	and    al,0x2
   14000ad87:	neg    al
   14000ad89:	sbb    edi,edi
   14000ad8b:	neg    edi
   14000ad8d:	add    edi,esi
   14000ad8f:	test   r15,r15
   14000ad92:	je     0x14000ad97
   14000ad94:	mov    QWORD PTR [r15],rbx
   14000ad97:	test   bpl,0x2
   14000ad9b:	je     0x14000ad9f
   14000ad9d:	neg    edi
   14000ad9f:	cmp    BYTE PTR [rsp+0x48],0x0
   14000ada4:	je     0x14000adb2
   14000ada6:	mov    rcx,QWORD PTR [rsp+0x40]
   14000adab:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000adb2:	mov    eax,edi
   14000adb4:	mov    rbx,QWORD PTR [rsp+0x90]
   14000adbc:	add    rsp,0x50
   14000adc0:	pop    r15
   14000adc2:	pop    r14
   14000adc4:	pop    r13
   14000adc6:	pop    r12
   14000adc8:	pop    rdi
   14000adc9:	pop    rsi
   14000adca:	pop    rbp
   14000adcb:	ret    
   14000adcc:	int3   
   14000adcd:	int3   
   14000adce:	int3   
   14000adcf:	int3   
   14000add0:	int3   
   14000add1:	int3   
   14000add2:	int3   
   14000add3:	int3   
   14000add4:	sub    rsp,0x38
   14000add8:	xor    eax,eax
   14000adda:	mov    DWORD PTR [rsp+0x28],r9d
   14000addf:	mov    r9d,r8d
   14000ade2:	cmp    DWORD PTR [rip+0x81f8],eax        # 0x140012fe0
   14000ade8:	mov    r8,rdx
   14000adeb:	mov    rdx,rcx
   14000adee:	mov    DWORD PTR [rsp+0x20],eax
   14000adf2:	jne    0x14000adfd
   14000adf4:	lea    rcx,[rip+0x6bb5]        # 0x1400119b0
   14000adfb:	jmp    0x14000adff
   14000adfd:	xor    ecx,ecx
   14000adff:	call   0x14000ab70
   14000ae04:	add    rsp,0x38
   14000ae08:	ret    
   14000ae09:	int3   
   14000ae0a:	int3   
   14000ae0b:	int3   
   14000ae0c:	int3   
   14000ae0d:	int3   
   14000ae0e:	int3   
   14000ae0f:	int3   
   14000ae10:	sub    rsp,0x28
   14000ae14:	call   0x14000755c
   14000ae19:	mov    rcx,QWORD PTR [rax+0xd0]
   14000ae20:	test   rcx,rcx
   14000ae23:	je     0x14000ae29
   14000ae25:	call   rcx
   14000ae27:	jmp    0x14000ae29
   14000ae29:	call   0x14000eb54
   14000ae2e:	nop
   14000ae2f:	int3   
   14000ae30:	int3   
   14000ae31:	int3   
   14000ae32:	int3   
   14000ae33:	int3   
   14000ae34:	int3   
   14000ae35:	int3   
   14000ae36:	int3   
   14000ae37:	int3   
   14000ae38:	sub    rsp,0x28
   14000ae3c:	lea    rcx,[rip+0xffffffffffffffcd]        # 0x14000ae10
   14000ae43:	call   0x14000752c
   14000ae48:	mov    QWORD PTR [rip+0x81f1],rax        # 0x140013040
   14000ae4f:	add    rsp,0x28
   14000ae53:	ret    
   14000ae54:	int3   
   14000ae55:	int3   
   14000ae56:	int3   
   14000ae57:	int3   
   14000ae58:	int3   
   14000ae59:	int3   
   14000ae5a:	int3   
   14000ae5b:	int3   
   14000ae5c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ae61:	mov    QWORD PTR [rsp+0x10],rsi
   14000ae66:	mov    QWORD PTR [rsp+0x18],rdi
   14000ae6b:	push   r14
   14000ae6d:	sub    rsp,0x20
   14000ae71:	lea    r14,[rip+0x6f28]        # 0x140011da0
   14000ae78:	xor    esi,esi
   14000ae7a:	xor    ebx,ebx
   14000ae7c:	mov    rdi,r14
   14000ae7f:	cmp    DWORD PTR [rdi+0x8],0x1
   14000ae83:	jne    0x14000aeb0
   14000ae85:	movsxd rax,esi
   14000ae88:	mov    edx,0xfa0
   14000ae8d:	mov    r8d,0x4000000
   14000ae93:	lea    rcx,[rax+rax*4]
   14000ae97:	lea    rax,[rip+0x81b2]        # 0x140013050
   14000ae9e:	inc    esi
   14000aea0:	lea    rcx,[rax+rcx*8]
   14000aea4:	mov    QWORD PTR [rdi],rcx
   14000aea7:	call   0x14000b308
   14000aeac:	test   eax,eax
   14000aeae:	je     0x14000aed6
   14000aeb0:	inc    ebx
   14000aeb2:	add    rdi,0x10
   14000aeb6:	cmp    ebx,0x24
   14000aeb9:	jl     0x14000ae7f
   14000aebb:	mov    eax,0x1
   14000aec0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aec5:	mov    rsi,QWORD PTR [rsp+0x38]
   14000aeca:	mov    rdi,QWORD PTR [rsp+0x40]
   14000aecf:	add    rsp,0x20
   14000aed3:	pop    r14
   14000aed5:	ret    
   14000aed6:	movsxd rax,ebx
   14000aed9:	add    rax,rax
   14000aedc:	and    QWORD PTR [r14+rax*8],0x0
   14000aee1:	xor    eax,eax
   14000aee3:	jmp    0x14000aec0
   14000aee5:	int3   
   14000aee6:	int3   
   14000aee7:	int3   
   14000aee8:	int3   
   14000aee9:	int3   
   14000aeea:	int3   
   14000aeeb:	int3   
   14000aeec:	mov    QWORD PTR [rsp+0x8],rbx
   14000aef1:	mov    QWORD PTR [rsp+0x10],rbp
   14000aef6:	mov    QWORD PTR [rsp+0x18],rsi
   14000aefb:	push   rdi
   14000aefc:	sub    rsp,0x20
   14000af00:	mov    edi,0x24
   14000af05:	lea    rbx,[rip+0x6e94]        # 0x140011da0
   14000af0c:	mov    ebp,edi
   14000af0e:	mov    rsi,QWORD PTR [rbx]
   14000af11:	test   rsi,rsi
   14000af14:	je     0x14000af31
   14000af16:	cmp    DWORD PTR [rbx+0x8],0x1
   14000af1a:	je     0x14000af31
   14000af1c:	mov    rcx,rsi
   14000af1f:	call   QWORD PTR [rip+0xb6b3]        # 0x1400165d8
   14000af25:	mov    rcx,rsi
   14000af28:	call   0x14000b0d0
   14000af2d:	and    QWORD PTR [rbx],0x0
   14000af31:	add    rbx,0x10
   14000af35:	dec    rbp
   14000af38:	jne    0x14000af0e
   14000af3a:	lea    rbx,[rip+0x6e67]        # 0x140011da8
   14000af41:	mov    rcx,QWORD PTR [rbx-0x8]
   14000af45:	test   rcx,rcx
   14000af48:	je     0x14000af55
   14000af4a:	cmp    DWORD PTR [rbx],0x1
   14000af4d:	jne    0x14000af55
   14000af4f:	call   QWORD PTR [rip+0xb683]        # 0x1400165d8
   14000af55:	add    rbx,0x10
   14000af59:	dec    rdi
   14000af5c:	jne    0x14000af41
   14000af5e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000af63:	mov    rbp,QWORD PTR [rsp+0x38]
   14000af68:	mov    rsi,QWORD PTR [rsp+0x40]
   14000af6d:	add    rsp,0x20
   14000af71:	pop    rdi
   14000af72:	ret    
   14000af73:	int3   
   14000af74:	int3   
   14000af75:	int3   
   14000af76:	int3   
   14000af77:	int3   
   14000af78:	int3   
   14000af79:	int3   
   14000af7a:	int3   
   14000af7b:	int3   
   14000af7c:	mov    QWORD PTR [rsp+0x8],rbx
   14000af81:	mov    QWORD PTR [rsp+0x10],rsi
   14000af86:	mov    QWORD PTR [rsp+0x18],rdi
   14000af8b:	push   r15
   14000af8d:	sub    rsp,0x20
   14000af91:	movsxd rbx,ecx
   14000af94:	mov    esi,0x1
   14000af99:	cmp    QWORD PTR [rip+0x78b7],0x0        # 0x140012858
   14000afa1:	jne    0x14000afba
   14000afa3:	call   0x140007c34
   14000afa8:	lea    ecx,[rsi+0x1d]
   14000afab:	call   0x140007c80
   14000afb0:	mov    ecx,0xff
   14000afb5:	call   0x140007880
   14000afba:	mov    rdi,rbx
   14000afbd:	add    rdi,rdi
   14000afc0:	lea    r15,[rip+0x6dd9]        # 0x140011da0
   14000afc7:	cmp    QWORD PTR [r15+rdi*8],0x0
   14000afcc:	je     0x14000afd2
   14000afce:	mov    eax,esi
   14000afd0:	jmp    0x14000b048
   14000afd2:	mov    ecx,0x28
   14000afd7:	call   0x14000b958
   14000afdc:	mov    rbx,rax
   14000afdf:	test   rax,rax
   14000afe2:	jne    0x14000aff3
   14000afe4:	call   0x140009658
   14000afe9:	mov    DWORD PTR [rax],0xc
   14000afef:	xor    eax,eax
   14000aff1:	jmp    0x14000b048
   14000aff3:	mov    ecx,0xa
   14000aff8:	call   0x14000b064
   14000affd:	nop
   14000affe:	mov    rcx,rbx
   14000b001:	cmp    QWORD PTR [r15+rdi*8],0x0
   14000b006:	jne    0x14000b033
   14000b008:	mov    edx,0xfa0
   14000b00d:	call   0x14000b308
   14000b012:	test   eax,eax
   14000b014:	jne    0x14000b02d
   14000b016:	mov    rcx,rbx
   14000b019:	call   0x14000b0d0
   14000b01e:	call   0x140009658
   14000b023:	mov    DWORD PTR [rax],0xc
   14000b029:	xor    esi,esi
   14000b02b:	jmp    0x14000b039
   14000b02d:	mov    QWORD PTR [r15+rdi*8],rbx
   14000b031:	jmp    0x14000b039
   14000b033:	call   0x14000b0d0
   14000b038:	nop
   14000b039:	mov    rcx,QWORD PTR [rip+0x6e00]        # 0x140011e40
   14000b040:	call   QWORD PTR [rip+0xb4fa]        # 0x140016540
   14000b046:	jmp    0x14000afce
   14000b048:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b04d:	mov    rsi,QWORD PTR [rsp+0x38]
   14000b052:	mov    rdi,QWORD PTR [rsp+0x40]
   14000b057:	add    rsp,0x20
   14000b05b:	pop    r15
   14000b05d:	ret    
   14000b05e:	int3   
   14000b05f:	int3   
   14000b060:	int3   
   14000b061:	int3   
   14000b062:	int3   
   14000b063:	int3   
   14000b064:	mov    QWORD PTR [rsp+0x8],rbx
   14000b069:	push   rdi
   14000b06a:	sub    rsp,0x20
   14000b06e:	movsxd rbx,ecx
   14000b071:	lea    rdi,[rip+0x6d28]        # 0x140011da0
   14000b078:	add    rbx,rbx
   14000b07b:	cmp    QWORD PTR [rdi+rbx*8],0x0
   14000b080:	jne    0x14000b093
   14000b082:	call   0x14000af7c
   14000b087:	test   eax,eax
   14000b089:	jne    0x14000b093
   14000b08b:	lea    ecx,[rax+0x11]
   14000b08e:	call   0x14000784c
   14000b093:	mov    rcx,QWORD PTR [rdi+rbx*8]
   14000b097:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b09c:	add    rsp,0x20
   14000b0a0:	pop    rdi
   14000b0a1:	rex.W jmp QWORD PTR [rip+0xb5c0]        # 0x140016668
   14000b0a8:	int3   
   14000b0a9:	int3   
   14000b0aa:	int3   
   14000b0ab:	int3   
   14000b0ac:	int3   
   14000b0ad:	int3   
   14000b0ae:	int3   
   14000b0af:	int3   
   14000b0b0:	movsxd rcx,ecx
   14000b0b3:	lea    rax,[rip+0x6ce6]        # 0x140011da0
   14000b0ba:	add    rcx,rcx
   14000b0bd:	mov    rcx,QWORD PTR [rax+rcx*8]
   14000b0c1:	rex.W jmp QWORD PTR [rip+0xb478]        # 0x140016540
   14000b0c8:	int3   
   14000b0c9:	int3   
   14000b0ca:	int3   
   14000b0cb:	int3   
   14000b0cc:	int3   
   14000b0cd:	int3   
   14000b0ce:	int3   
   14000b0cf:	int3   
   14000b0d0:	test   rcx,rcx
   14000b0d3:	je     0x14000b10c
   14000b0d5:	push   rbx
   14000b0d6:	sub    rsp,0x20
   14000b0da:	mov    r8,rcx
   14000b0dd:	mov    rcx,QWORD PTR [rip+0x7774]        # 0x140012858
   14000b0e4:	xor    edx,edx
   14000b0e6:	call   QWORD PTR [rip+0xb354]        # 0x140016440
   14000b0ec:	test   eax,eax
   14000b0ee:	jne    0x14000b107
   14000b0f0:	call   0x140009658
   14000b0f5:	mov    rbx,rax
   14000b0f8:	call   QWORD PTR [rip+0xb35a]        # 0x140016458
   14000b0fe:	mov    ecx,eax
   14000b100:	call   0x1400096fc
   14000b105:	mov    DWORD PTR [rbx],eax
   14000b107:	add    rsp,0x20
   14000b10b:	pop    rbx
   14000b10c:	ret    
   14000b10d:	int3   
   14000b10e:	int3   
   14000b10f:	int3   
   14000b110:	int3   
   14000b111:	int3   
   14000b112:	int3   
   14000b113:	int3   
   14000b114:	mov    rax,rsp
   14000b117:	mov    QWORD PTR [rax+0x8],rbx
   14000b11b:	mov    QWORD PTR [rax+0x10],rbp
   14000b11f:	mov    QWORD PTR [rax+0x18],rsi
   14000b123:	mov    QWORD PTR [rax+0x20],rdi
   14000b127:	push   r14
   14000b129:	sub    rsp,0x20
   14000b12d:	xor    ebx,ebx
   14000b12f:	mov    rsi,rdx
   14000b132:	mov    rbp,rcx
   14000b135:	or     r14d,0xffffffff
   14000b139:	xor    r8d,r8d
   14000b13c:	mov    rdx,rsi
   14000b13f:	mov    rcx,rbp
   14000b142:	call   0x14000ebfc
   14000b147:	mov    rdi,rax
   14000b14a:	test   rax,rax
   14000b14d:	jne    0x14000b179
   14000b14f:	cmp    DWORD PTR [rip+0x812b],eax        # 0x140013280
   14000b155:	jbe    0x14000b179
   14000b157:	mov    ecx,ebx
   14000b159:	call   QWORD PTR [rip+0xb321]        # 0x140016480
   14000b15f:	lea    r11d,[rbx+0x3e8]
   14000b166:	cmp    r11d,DWORD PTR [rip+0x8113]        # 0x140013280
   14000b16d:	mov    ebx,r11d
   14000b170:	cmova  ebx,r14d
   14000b174:	cmp    ebx,r14d
   14000b177:	jne    0x14000b139
   14000b179:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b17e:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b183:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b188:	mov    rax,rdi
   14000b18b:	mov    rdi,QWORD PTR [rsp+0x48]
   14000b190:	add    rsp,0x20
   14000b194:	pop    r14
   14000b196:	ret    
   14000b197:	int3   
   14000b198:	int3   
   14000b199:	int3   
   14000b19a:	int3   
   14000b19b:	int3   
   14000b19c:	int3   
   14000b19d:	int3   
   14000b19e:	int3   
   14000b19f:	int3   
   14000b1a0:	mov    rax,rcx
   14000b1a3:	mov    ecx,0x5a4d
   14000b1a8:	cmp    WORD PTR [rax],cx
   14000b1ab:	je     0x14000b1b0
   14000b1ad:	xor    eax,eax
   14000b1af:	ret    
   14000b1b0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14000b1b4:	add    rcx,rax
   14000b1b7:	xor    eax,eax
   14000b1b9:	cmp    DWORD PTR [rcx],0x4550
   14000b1bf:	jne    0x14000b1cd
   14000b1c1:	mov    edx,0x20b
   14000b1c6:	cmp    WORD PTR [rcx+0x18],dx
   14000b1ca:	sete   al
   14000b1cd:	repz ret 
   14000b1cf:	int3   
   14000b1d0:	int3   
   14000b1d1:	int3   
   14000b1d2:	int3   
   14000b1d3:	int3   
   14000b1d4:	int3   
   14000b1d5:	int3   
   14000b1d6:	int3   
   14000b1d7:	int3   
   14000b1d8:	int3   
   14000b1d9:	int3   
   14000b1da:	int3   
   14000b1db:	int3   
   14000b1dc:	int3   
   14000b1dd:	int3   
   14000b1de:	int3   
   14000b1df:	int3   
   14000b1e0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14000b1e4:	xor    r9d,r9d
   14000b1e7:	mov    r10,rdx
   14000b1ea:	add    r8,rcx
   14000b1ed:	movzx  eax,WORD PTR [r8+0x14]
   14000b1f2:	movzx  r11d,WORD PTR [r8+0x6]
   14000b1f7:	add    rax,0x18
   14000b1fb:	add    rax,r8
   14000b1fe:	test   r11d,r11d
   14000b201:	je     0x14000b221
   14000b203:	mov    edx,DWORD PTR [rax+0xc]
   14000b206:	cmp    r10,rdx
   14000b209:	jb     0x14000b215
   14000b20b:	mov    ecx,DWORD PTR [rax+0x8]
   14000b20e:	add    ecx,edx
   14000b210:	cmp    r10,rcx
   14000b213:	jb     0x14000b223
   14000b215:	inc    r9d
   14000b218:	add    rax,0x28
   14000b21c:	cmp    r9d,r11d
   14000b21f:	jb     0x14000b203
   14000b221:	xor    eax,eax
   14000b223:	repz ret 
   14000b225:	int3   
   14000b226:	int3   
   14000b227:	int3   
   14000b228:	int3   
   14000b229:	int3   
   14000b22a:	int3   
   14000b22b:	int3   
   14000b22c:	int3   
   14000b22d:	int3   
   14000b22e:	int3   
   14000b22f:	int3   
   14000b230:	mov    QWORD PTR [rsp+0x8],rbx
   14000b235:	push   rdi
   14000b236:	sub    rsp,0x20
   14000b23a:	mov    rbx,rcx
   14000b23d:	lea    rdi,[rip+0xffffffffffff4dbc]        # 0x140000000
   14000b244:	mov    rcx,rdi
   14000b247:	call   0x14000b1a0
   14000b24c:	test   eax,eax
   14000b24e:	je     0x14000b272
   14000b250:	sub    rbx,rdi
   14000b253:	mov    rdx,rbx
   14000b256:	mov    rcx,rdi
   14000b259:	call   0x14000b1e0
   14000b25e:	test   rax,rax
   14000b261:	je     0x14000b272
   14000b263:	mov    eax,DWORD PTR [rax+0x24]
   14000b266:	shr    eax,0x1f
   14000b269:	not    eax
   14000b26b:	and    eax,0x1
   14000b26e:	jmp    0x14000b272
   14000b270:	xor    eax,eax
   14000b272:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b277:	add    rsp,0x20
   14000b27b:	pop    rdi
   14000b27c:	ret    
   14000b27d:	int3   
   14000b27e:	int3   
   14000b27f:	int3   
   14000b280:	int3   
   14000b281:	int3   
   14000b282:	int3   
   14000b283:	int3   
   14000b284:	mov    QWORD PTR [rsp+0x8],rbx
   14000b289:	push   rdi
   14000b28a:	sub    rsp,0x20
   14000b28e:	lea    rbx,[rip+0x6d4b]        # 0x140011fe0
   14000b295:	mov    edi,0xa
   14000b29a:	mov    rcx,QWORD PTR [rbx]
   14000b29d:	call   0x14000752c
   14000b2a2:	mov    QWORD PTR [rbx],rax
   14000b2a5:	add    rbx,0x8
   14000b2a9:	dec    rdi
   14000b2ac:	jne    0x14000b29a
   14000b2ae:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b2b3:	add    rsp,0x20
   14000b2b7:	pop    rdi
   14000b2b8:	ret    
   14000b2b9:	int3   
   14000b2ba:	int3   
   14000b2bb:	int3   
   14000b2bc:	int3   
   14000b2bd:	int3   
   14000b2be:	int3   
   14000b2bf:	int3   
   14000b2c0:	rex push rbx
   14000b2c2:	sub    rsp,0x20
   14000b2c6:	mov    rbx,rcx
   14000b2c9:	mov    rcx,QWORD PTR [rip+0x7fb8]        # 0x140013288
   14000b2d0:	call   0x14000754c
   14000b2d5:	test   rax,rax
   14000b2d8:	je     0x14000b2ea
   14000b2da:	mov    rcx,rbx
   14000b2dd:	call   rax
   14000b2df:	test   eax,eax
   14000b2e1:	je     0x14000b2ea
   14000b2e3:	mov    eax,0x1
   14000b2e8:	jmp    0x14000b2ec
   14000b2ea:	xor    eax,eax
   14000b2ec:	add    rsp,0x20
   14000b2f0:	pop    rbx
   14000b2f1:	ret    
   14000b2f2:	int3   
   14000b2f3:	int3   
   14000b2f4:	int3   
   14000b2f5:	int3   
   14000b2f6:	int3   
   14000b2f7:	int3   
   14000b2f8:	mov    QWORD PTR [rip+0x7f89],rcx        # 0x140013288
   14000b2ff:	ret    
   14000b300:	int3   
   14000b301:	int3   
   14000b302:	int3   
   14000b303:	int3   
   14000b304:	int3   
   14000b305:	int3   
   14000b306:	int3   
   14000b307:	int3   
   14000b308:	rex.W jmp QWORD PTR [rip+0xb229]        # 0x140016538
   14000b30f:	int3   
   14000b310:	int3   
   14000b311:	int3   
   14000b312:	int3   
   14000b313:	int3   
   14000b314:	int3   
   14000b315:	int3   
   14000b316:	int3   
   14000b317:	int3   
   14000b318:	ret    0x0
   14000b31b:	int3   
   14000b31c:	int3   
   14000b31d:	int3   
   14000b31e:	int3   
   14000b31f:	int3   
   14000b320:	int3   
   14000b321:	int3   
   14000b322:	int3   
   14000b323:	int3   
   14000b324:	mov    QWORD PTR [rip+0x7f65],rcx        # 0x140013290
   14000b32b:	ret    
   14000b32c:	int3   
   14000b32d:	int3   
   14000b32e:	int3   
   14000b32f:	int3   
   14000b330:	int3   
   14000b331:	int3   
   14000b332:	int3   
   14000b333:	int3   
   14000b334:	mov    QWORD PTR [rsp+0x18],rbx
   14000b339:	push   rsi
   14000b33a:	push   rdi
   14000b33b:	push   r12
   14000b33d:	push   r14
   14000b33f:	push   r15
   14000b341:	sub    rsp,0x40
   14000b345:	mov    ebx,ecx
   14000b347:	xor    r12d,r12d
   14000b34a:	xor    esi,esi
   14000b34c:	mov    DWORD PTR [rsp+0x70],esi
   14000b350:	xor    edi,edi
   14000b352:	mov    edx,ecx
   14000b354:	sub    edx,0x2
   14000b357:	je     0x14000b430
   14000b35d:	sub    edx,0x2
   14000b360:	je     0x14000b3d3
   14000b362:	sub    edx,0x2
   14000b365:	je     0x14000b3c3
   14000b367:	sub    edx,0x2
   14000b36a:	je     0x14000b3d3
   14000b36c:	sub    edx,0x3
   14000b36f:	je     0x14000b3d3
   14000b371:	sub    edx,0x4
   14000b374:	je     0x14000b3b3
   14000b376:	sub    edx,0x6
   14000b379:	je     0x14000b3a0
   14000b37b:	dec    edx
   14000b37d:	je     0x14000b3c3
   14000b37f:	call   0x140009658
   14000b384:	mov    DWORD PTR [rax],0x16
   14000b38a:	and    QWORD PTR [rsp+0x20],rsi
   14000b38f:	xor    r9d,r9d
   14000b392:	xor    r8d,r8d
   14000b395:	xor    edx,edx
   14000b397:	xor    ecx,ecx
   14000b399:	call   0x14000974c
   14000b39e:	jmp    0x14000b3e0
   14000b3a0:	lea    r14,[rip+0x7ef9]        # 0x1400132a0
   14000b3a7:	mov    rcx,QWORD PTR [rip+0x7ef2]        # 0x1400132a0
   14000b3ae:	jmp    0x14000b43e
   14000b3b3:	lea    r14,[rip+0x7ef6]        # 0x1400132b0
   14000b3ba:	mov    rcx,QWORD PTR [rip+0x7eef]        # 0x1400132b0
   14000b3c1:	jmp    0x14000b43e
   14000b3c3:	lea    r14,[rip+0x7ede]        # 0x1400132a8
   14000b3ca:	mov    rcx,QWORD PTR [rip+0x7ed7]        # 0x1400132a8
   14000b3d1:	jmp    0x14000b43e
   14000b3d3:	call   0x140007588
   14000b3d8:	mov    rdi,rax
   14000b3db:	test   rax,rax
   14000b3de:	jne    0x14000b3e8
   14000b3e0:	or     eax,0xffffffff
   14000b3e3:	jmp    0x14000b54f
   14000b3e8:	mov    rdx,QWORD PTR [rax+0xa0]
   14000b3ef:	mov    rcx,rdx
   14000b3f2:	movsxd r8,DWORD PTR [rip+0x5d17]        # 0x140011110
   14000b3f9:	cmp    DWORD PTR [rcx+0x4],ebx
   14000b3fc:	je     0x14000b411
   14000b3fe:	add    rcx,0x10
   14000b402:	mov    rax,r8
   14000b405:	shl    rax,0x4
   14000b409:	add    rax,rdx
   14000b40c:	cmp    rcx,rax
   14000b40f:	jb     0x14000b3f9
   14000b411:	mov    rax,r8
   14000b414:	shl    rax,0x4
   14000b418:	add    rax,rdx
   14000b41b:	cmp    rcx,rax
   14000b41e:	jae    0x14000b425
   14000b420:	cmp    DWORD PTR [rcx+0x4],ebx
   14000b423:	je     0x14000b427
   14000b425:	xor    ecx,ecx
   14000b427:	lea    r14,[rcx+0x8]
   14000b42b:	mov    r15,QWORD PTR [r14]
   14000b42e:	jmp    0x14000b44f
   14000b430:	lea    r14,[rip+0x7e61]        # 0x140013298
   14000b437:	mov    rcx,QWORD PTR [rip+0x7e5a]        # 0x140013298
   14000b43e:	mov    esi,0x1
   14000b443:	mov    DWORD PTR [rsp+0x70],esi
   14000b447:	call   0x14000754c
   14000b44c:	mov    r15,rax
   14000b44f:	cmp    r15,0x1
   14000b453:	jne    0x14000b45c
   14000b455:	xor    eax,eax
   14000b457:	jmp    0x14000b54f
   14000b45c:	test   r15,r15
   14000b45f:	jne    0x14000b46b
   14000b461:	lea    ecx,[r15+0x3]
   14000b465:	call   0x140007838
   14000b46a:	int3   
   14000b46b:	test   esi,esi
   14000b46d:	je     0x14000b477
   14000b46f:	xor    ecx,ecx
   14000b471:	call   0x14000b064
   14000b476:	nop
   14000b477:	cmp    ebx,0x8
   14000b47a:	je     0x14000b486
   14000b47c:	cmp    ebx,0xb
   14000b47f:	je     0x14000b486
   14000b481:	cmp    ebx,0x4
   14000b484:	jne    0x14000b4b3
   14000b486:	mov    r12,QWORD PTR [rdi+0xa8]
   14000b48d:	mov    QWORD PTR [rsp+0x38],r12
   14000b492:	and    QWORD PTR [rdi+0xa8],0x0
   14000b49a:	cmp    ebx,0x8
   14000b49d:	jne    0x14000b4f1
   14000b49f:	mov    eax,DWORD PTR [rdi+0xb0]
   14000b4a5:	mov    DWORD PTR [rsp+0x78],eax
   14000b4a9:	mov    DWORD PTR [rdi+0xb0],0x8c
   14000b4b3:	cmp    ebx,0x8
   14000b4b6:	jne    0x14000b4f1
   14000b4b8:	mov    ecx,DWORD PTR [rip+0x5c5a]        # 0x140011118
   14000b4be:	mov    edx,ecx
   14000b4c0:	mov    DWORD PTR [rsp+0x30],ecx
   14000b4c4:	mov    eax,DWORD PTR [rip+0x5c52]        # 0x14001111c
   14000b4ca:	add    ecx,eax
   14000b4cc:	cmp    edx,ecx
   14000b4ce:	jge    0x14000b4f9
   14000b4d0:	movsxd rcx,edx
   14000b4d3:	add    rcx,rcx
   14000b4d6:	mov    rax,QWORD PTR [rdi+0xa0]
   14000b4dd:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   14000b4e3:	inc    edx
   14000b4e5:	mov    DWORD PTR [rsp+0x30],edx
   14000b4e9:	mov    ecx,DWORD PTR [rip+0x5c29]        # 0x140011118
   14000b4ef:	jmp    0x14000b4c4
   14000b4f1:	call   0x14000753c
   14000b4f6:	mov    QWORD PTR [r14],rax
   14000b4f9:	test   esi,esi
   14000b4fb:	je     0x14000b504
   14000b4fd:	xor    ecx,ecx
   14000b4ff:	call   0x14000b0b0
   14000b504:	mov    esi,0x8
   14000b509:	cmp    ebx,esi
   14000b50b:	jne    0x14000b51a
   14000b50d:	mov    edx,DWORD PTR [rdi+0xb0]
   14000b513:	mov    ecx,esi
   14000b515:	call   r15
   14000b518:	jmp    0x14000b51f
   14000b51a:	mov    ecx,ebx
   14000b51c:	call   r15
   14000b51f:	cmp    ebx,esi
   14000b521:	je     0x14000b531
   14000b523:	cmp    ebx,0xb
   14000b526:	je     0x14000b531
   14000b528:	cmp    ebx,0x4
   14000b52b:	jne    0x14000b455
   14000b531:	mov    QWORD PTR [rdi+0xa8],r12
   14000b538:	cmp    ebx,esi
   14000b53a:	jne    0x14000b455
   14000b540:	mov    eax,DWORD PTR [rsp+0x78]
   14000b544:	mov    DWORD PTR [rdi+0xb0],eax
   14000b54a:	jmp    0x14000b455
   14000b54f:	mov    rbx,QWORD PTR [rsp+0x80]
   14000b557:	add    rsp,0x40
   14000b55b:	pop    r15
   14000b55d:	pop    r14
   14000b55f:	pop    r12
   14000b561:	pop    rdi
   14000b562:	pop    rsi
   14000b563:	ret    
   14000b564:	int3   
   14000b565:	int3   
   14000b566:	int3   
   14000b567:	int3   
   14000b568:	int3   
   14000b569:	int3   
   14000b56a:	int3   
   14000b56b:	int3   
   14000b56c:	mov    rcx,QWORD PTR [rip+0x7d35]        # 0x1400132a8
   14000b573:	jmp    0x14000754c
   14000b578:	int3   
   14000b579:	int3   
   14000b57a:	int3   
   14000b57b:	int3   
   14000b57c:	int3   
   14000b57d:	int3   
   14000b57e:	int3   
   14000b57f:	int3   
   14000b580:	mov    QWORD PTR [rip+0x7d11],rcx        # 0x140013298
   14000b587:	mov    QWORD PTR [rip+0x7d12],rcx        # 0x1400132a0
   14000b58e:	mov    QWORD PTR [rip+0x7d13],rcx        # 0x1400132a8
   14000b595:	mov    QWORD PTR [rip+0x7d14],rcx        # 0x1400132b0
   14000b59c:	ret    
   14000b59d:	int3   
   14000b59e:	int3   
   14000b59f:	int3   
   14000b5a0:	int3   
   14000b5a1:	int3   
   14000b5a2:	int3   
   14000b5a3:	int3   
   14000b5a4:	rex push rbx
   14000b5a6:	sub    rsp,0x30
   14000b5aa:	test   rcx,rcx
   14000b5ad:	je     0x14000b5bc
   14000b5af:	test   rdx,rdx
   14000b5b2:	je     0x14000b5bc
   14000b5b4:	test   r8,r8
   14000b5b7:	jne    0x14000b5e5
   14000b5b9:	mov    BYTE PTR [rcx],r8b
   14000b5bc:	call   0x140009658
   14000b5c1:	mov    ebx,0x16
   14000b5c6:	and    QWORD PTR [rsp+0x20],0x0
   14000b5cc:	xor    r9d,r9d
   14000b5cf:	xor    r8d,r8d
   14000b5d2:	xor    edx,edx
   14000b5d4:	xor    ecx,ecx
   14000b5d6:	mov    DWORD PTR [rax],ebx
   14000b5d8:	call   0x14000974c
   14000b5dd:	mov    eax,ebx
   14000b5df:	add    rsp,0x30
   14000b5e3:	pop    rbx
   14000b5e4:	ret    
   14000b5e5:	mov    r9,rcx
   14000b5e8:	sub    r9,r8
   14000b5eb:	mov    al,BYTE PTR [r8]
   14000b5ee:	mov    BYTE PTR [r9+r8*1],al
   14000b5f2:	inc    r8
   14000b5f5:	test   al,al
   14000b5f7:	je     0x14000b5fe
   14000b5f9:	dec    rdx
   14000b5fc:	jne    0x14000b5eb
   14000b5fe:	test   rdx,rdx
   14000b601:	jne    0x14000b611
   14000b603:	mov    BYTE PTR [rcx],dl
   14000b605:	call   0x140009658
   14000b60a:	mov    ebx,0x22
   14000b60f:	jmp    0x14000b5c6
   14000b611:	xor    eax,eax
   14000b613:	jmp    0x14000b5df
   14000b615:	int3   
   14000b616:	int3   
   14000b617:	int3   
   14000b618:	int3   
   14000b619:	int3   
   14000b61a:	int3   
   14000b61b:	int3   
   14000b61c:	rex push rbx
   14000b61e:	sub    rsp,0x30
   14000b622:	mov    r9,rcx
   14000b625:	test   rcx,rcx
   14000b628:	je     0x14000b637
   14000b62a:	test   rdx,rdx
   14000b62d:	je     0x14000b637
   14000b62f:	test   r8,r8
   14000b632:	jne    0x14000b660
   14000b634:	mov    BYTE PTR [rcx],r8b
   14000b637:	call   0x140009658
   14000b63c:	mov    ebx,0x16
   14000b641:	and    QWORD PTR [rsp+0x20],0x0
   14000b647:	xor    r9d,r9d
   14000b64a:	xor    r8d,r8d
   14000b64d:	xor    edx,edx
   14000b64f:	xor    ecx,ecx
   14000b651:	mov    DWORD PTR [rax],ebx
   14000b653:	call   0x14000974c
   14000b658:	mov    eax,ebx
   14000b65a:	add    rsp,0x30
   14000b65e:	pop    rbx
   14000b65f:	ret    
   14000b660:	cmp    BYTE PTR [rcx],0x0
   14000b663:	je     0x14000b66d
   14000b665:	inc    rcx
   14000b668:	dec    rdx
   14000b66b:	jne    0x14000b660
   14000b66d:	test   rdx,rdx
   14000b670:	jne    0x14000b677
   14000b672:	mov    BYTE PTR [r9],dl
   14000b675:	jmp    0x14000b637
   14000b677:	sub    rcx,r8
   14000b67a:	mov    al,BYTE PTR [r8]
   14000b67d:	mov    BYTE PTR [rcx+r8*1],al
   14000b681:	inc    r8
   14000b684:	test   al,al
   14000b686:	je     0x14000b68d
   14000b688:	dec    rdx
   14000b68b:	jne    0x14000b67a
   14000b68d:	test   rdx,rdx
   14000b690:	jne    0x14000b6a1
   14000b692:	mov    BYTE PTR [r9],dl
   14000b695:	call   0x140009658
   14000b69a:	mov    ebx,0x22
   14000b69f:	jmp    0x14000b641
   14000b6a1:	xor    eax,eax
   14000b6a3:	jmp    0x14000b65a
   14000b6a5:	int3   
   14000b6a6:	int3   
   14000b6a7:	int3   
   14000b6a8:	int3   
   14000b6a9:	int3   
   14000b6aa:	int3   
   14000b6ab:	int3   
   14000b6ac:	sub    rsp,0x38
   14000b6b0:	test   ecx,ecx
   14000b6b2:	js     0x14000b6d4
   14000b6b4:	cmp    ecx,0x2
   14000b6b7:	jle    0x14000b6c6
   14000b6b9:	cmp    ecx,0x3
   14000b6bc:	jne    0x14000b6d4
   14000b6be:	mov    eax,DWORD PTR [rip+0x6e0c]        # 0x1400124d0
   14000b6c4:	jmp    0x14000b6f7
   14000b6c6:	mov    eax,DWORD PTR [rip+0x6e04]        # 0x1400124d0
   14000b6cc:	mov    DWORD PTR [rip+0x6dfe],ecx        # 0x1400124d0
   14000b6d2:	jmp    0x14000b6f7
   14000b6d4:	call   0x140009658
   14000b6d9:	and    QWORD PTR [rsp+0x20],0x0
   14000b6df:	xor    r9d,r9d
   14000b6e2:	xor    r8d,r8d
   14000b6e5:	xor    edx,edx
   14000b6e7:	xor    ecx,ecx
   14000b6e9:	mov    DWORD PTR [rax],0x16
   14000b6ef:	call   0x14000974c
   14000b6f4:	or     eax,0xffffffff
   14000b6f7:	add    rsp,0x38
   14000b6fb:	ret    
   14000b6fc:	int3   
   14000b6fd:	int3   
   14000b6fe:	int3   
   14000b6ff:	int3   
   14000b700:	int3   
   14000b701:	int3   
   14000b702:	int3   
   14000b703:	int3   
   14000b704:	rex push rbx
   14000b706:	push   rbp
   14000b707:	push   rsi
   14000b708:	push   rdi
   14000b709:	push   r12
   14000b70b:	push   r14
   14000b70d:	push   r15
   14000b70f:	sub    rsp,0x50
   14000b713:	mov    rax,QWORD PTR [rip+0x5a56]        # 0x140011170
   14000b71a:	xor    rax,rsp
   14000b71d:	mov    QWORD PTR [rsp+0x48],rax
   14000b722:	mov    ebp,r8d
   14000b725:	mov    r12,rdx
   14000b728:	mov    r15,rcx
   14000b72b:	call   0x14000753c
   14000b730:	xor    ebx,ebx
   14000b732:	cmp    QWORD PTR [rip+0x7b87],rbx        # 0x1400132c0
   14000b739:	mov    rdi,rax
   14000b73c:	jne    0x14000b817
   14000b742:	lea    rcx,[rip+0xffffffffffff6257]        # 0x1400019a0
   14000b749:	xor    r8d,r8d
   14000b74c:	xor    edx,edx
   14000b74e:	call   QWORD PTR [rip+0xad0c]        # 0x140016460
   14000b754:	mov    rsi,rax
   14000b757:	test   rax,rax
   14000b75a:	je     0x14000b8e9
   14000b760:	lea    rdx,[rip+0xffffffffffff6251]        # 0x1400019b8
   14000b767:	mov    rcx,rax
   14000b76a:	call   QWORD PTR [rip+0xae38]        # 0x1400165a8
   14000b770:	test   rax,rax
   14000b773:	je     0x14000b8e9
   14000b779:	mov    rcx,rax
   14000b77c:	call   0x14000752c
   14000b781:	lea    rdx,[rip+0xffffffffffff6240]        # 0x1400019c8
   14000b788:	mov    rcx,rsi
   14000b78b:	mov    QWORD PTR [rip+0x7b2e],rax        # 0x1400132c0
   14000b792:	call   QWORD PTR [rip+0xae10]        # 0x1400165a8
   14000b798:	mov    rcx,rax
   14000b79b:	call   0x14000752c
   14000b7a0:	lea    rdx,[rip+0xffffffffffff6231]        # 0x1400019d8
   14000b7a7:	mov    rcx,rsi
   14000b7aa:	mov    QWORD PTR [rip+0x7b17],rax        # 0x1400132c8
   14000b7b1:	call   QWORD PTR [rip+0xadf1]        # 0x1400165a8
   14000b7b7:	mov    rcx,rax
   14000b7ba:	call   0x14000752c
   14000b7bf:	lea    rdx,[rip+0xffffffffffff622a]        # 0x1400019f0
   14000b7c6:	mov    rcx,rsi
   14000b7c9:	mov    QWORD PTR [rip+0x7b00],rax        # 0x1400132d0
   14000b7d0:	call   QWORD PTR [rip+0xadd2]        # 0x1400165a8
   14000b7d6:	mov    rcx,rax
   14000b7d9:	call   0x14000752c
   14000b7de:	mov    r11,rax
   14000b7e1:	mov    QWORD PTR [rip+0x7af8],rax        # 0x1400132e0
   14000b7e8:	test   rax,rax
   14000b7eb:	je     0x14000b80e
   14000b7ed:	lea    rdx,[rip+0xffffffffffff621c]        # 0x140001a10
   14000b7f4:	mov    rcx,rsi
   14000b7f7:	call   QWORD PTR [rip+0xadab]        # 0x1400165a8
   14000b7fd:	mov    rcx,rax
   14000b800:	call   0x14000752c
   14000b805:	mov    QWORD PTR [rip+0x7acc],rax        # 0x1400132d8
   14000b80c:	jmp    0x14000b81e
   14000b80e:	mov    rax,QWORD PTR [rip+0x7ac3]        # 0x1400132d8
   14000b815:	jmp    0x14000b825
   14000b817:	mov    rax,QWORD PTR [rip+0x7aba]        # 0x1400132d8
   14000b81e:	mov    r11,QWORD PTR [rip+0x7abb]        # 0x1400132e0
   14000b825:	cmp    rax,rdi
   14000b828:	je     0x14000b88a
   14000b82a:	cmp    r11,rdi
   14000b82d:	je     0x14000b88a
   14000b82f:	mov    rcx,rax
   14000b832:	call   0x14000754c
   14000b837:	mov    rcx,QWORD PTR [rip+0x7aa2]        # 0x1400132e0
   14000b83e:	mov    rsi,rax
   14000b841:	call   0x14000754c
   14000b846:	mov    r14,rax
   14000b849:	test   rsi,rsi
   14000b84c:	je     0x14000b88a
   14000b84e:	test   rax,rax
   14000b851:	je     0x14000b88a
   14000b853:	call   rsi
   14000b855:	test   rax,rax
   14000b858:	je     0x14000b884
   14000b85a:	lea    rcx,[rsp+0x30]
   14000b85f:	mov    r9d,0xc
   14000b865:	lea    r8,[rsp+0x38]
   14000b86a:	mov    QWORD PTR [rsp+0x20],rcx
   14000b86f:	lea    edx,[r9-0xb]
   14000b873:	mov    rcx,rax
   14000b876:	call   r14
   14000b879:	test   eax,eax
   14000b87b:	je     0x14000b884
   14000b87d:	test   BYTE PTR [rsp+0x40],0x1
   14000b882:	jne    0x14000b88a
   14000b884:	bts    ebp,0x15
   14000b888:	jmp    0x14000b8c8
   14000b88a:	mov    rcx,QWORD PTR [rip+0x7a37]        # 0x1400132c8
   14000b891:	cmp    rcx,rdi
   14000b894:	je     0x14000b8c8
   14000b896:	call   0x14000754c
   14000b89b:	test   rax,rax
   14000b89e:	je     0x14000b8c8
   14000b8a0:	call   rax
   14000b8a2:	mov    rbx,rax
   14000b8a5:	test   rax,rax
   14000b8a8:	je     0x14000b8c8
   14000b8aa:	mov    rcx,QWORD PTR [rip+0x7a1f]        # 0x1400132d0
   14000b8b1:	cmp    rcx,rdi
   14000b8b4:	je     0x14000b8c8
   14000b8b6:	call   0x14000754c
   14000b8bb:	test   rax,rax
   14000b8be:	je     0x14000b8c8
   14000b8c0:	mov    rcx,rbx
   14000b8c3:	call   rax
   14000b8c5:	mov    rbx,rax
   14000b8c8:	mov    rcx,QWORD PTR [rip+0x79f1]        # 0x1400132c0
   14000b8cf:	call   0x14000754c
   14000b8d4:	test   rax,rax
   14000b8d7:	je     0x14000b8e9
   14000b8d9:	mov    r9d,ebp
   14000b8dc:	mov    r8,r12
   14000b8df:	mov    rdx,r15
   14000b8e2:	mov    rcx,rbx
   14000b8e5:	call   rax
   14000b8e7:	jmp    0x14000b8eb
   14000b8e9:	xor    eax,eax
   14000b8eb:	mov    rcx,QWORD PTR [rsp+0x48]
   14000b8f0:	xor    rcx,rsp
   14000b8f3:	call   0x140006d40
   14000b8f8:	add    rsp,0x50
   14000b8fc:	pop    r15
   14000b8fe:	pop    r14
   14000b900:	pop    r12
   14000b902:	pop    rdi
   14000b903:	pop    rsi
   14000b904:	pop    rbp
   14000b905:	pop    rbx
   14000b906:	ret    
   14000b907:	int3   
   14000b908:	int3   
   14000b909:	int3   
   14000b90a:	int3   
   14000b90b:	int3   
   14000b90c:	int3   
   14000b90d:	int3   
   14000b90e:	int3   
   14000b90f:	int3   
   14000b910:	rex push rbx
   14000b912:	sub    rsp,0x20
   14000b916:	and    DWORD PTR [rsp+0x40],0x0
   14000b91b:	lea    r8,[rsp+0x40]
   14000b920:	call   0x14000ebfc
   14000b925:	mov    rbx,rax
   14000b928:	test   rax,rax
   14000b92b:	jne    0x14000b948
   14000b92d:	cmp    DWORD PTR [rsp+0x40],eax
   14000b931:	je     0x14000b948
   14000b933:	call   0x140009658
   14000b938:	test   rax,rax
   14000b93b:	je     0x14000b948
   14000b93d:	call   0x140009658
   14000b942:	mov    ecx,DWORD PTR [rsp+0x40]
   14000b946:	mov    DWORD PTR [rax],ecx
   14000b948:	mov    rax,rbx
   14000b94b:	add    rsp,0x20
   14000b94f:	pop    rbx
   14000b950:	ret    
   14000b951:	int3   
   14000b952:	int3   
   14000b953:	int3   
   14000b954:	int3   
   14000b955:	int3   
   14000b956:	int3   
   14000b957:	int3   
   14000b958:	mov    QWORD PTR [rsp+0x8],rbx
   14000b95d:	mov    QWORD PTR [rsp+0x10],rsi
   14000b962:	push   rdi
   14000b963:	sub    rsp,0x20
   14000b967:	mov    rbx,rcx
   14000b96a:	cmp    rcx,0xffffffffffffffe0
   14000b96e:	ja     0x14000b9ec
   14000b970:	mov    edi,0x1
   14000b975:	test   rcx,rcx
   14000b978:	cmovne rdi,rcx
   14000b97c:	mov    rcx,QWORD PTR [rip+0x6ed5]        # 0x140012858
   14000b983:	test   rcx,rcx
   14000b986:	jne    0x14000b9a8
   14000b988:	call   0x140007c34
   14000b98d:	mov    ecx,0x1e
   14000b992:	call   0x140007c80
   14000b997:	mov    ecx,0xff
   14000b99c:	call   0x140007880
   14000b9a1:	mov    rcx,QWORD PTR [rip+0x6eb0]        # 0x140012858
   14000b9a8:	mov    r8,rdi
   14000b9ab:	xor    edx,edx
   14000b9ad:	call   QWORD PTR [rip+0xaa9d]        # 0x140016450
   14000b9b3:	mov    rsi,rax
   14000b9b6:	test   rax,rax
   14000b9b9:	jne    0x14000b9e7
   14000b9bb:	cmp    DWORD PTR [rip+0x7937],eax        # 0x1400132f8
   14000b9c1:	je     0x14000b9d1
   14000b9c3:	mov    rcx,rbx
   14000b9c6:	call   0x14000b2c0
   14000b9cb:	test   eax,eax
   14000b9cd:	je     0x14000b9dc
   14000b9cf:	jmp    0x14000b97c
   14000b9d1:	call   0x140009658
   14000b9d6:	mov    DWORD PTR [rax],0xc
   14000b9dc:	call   0x140009658
   14000b9e1:	mov    DWORD PTR [rax],0xc
   14000b9e7:	mov    rax,rsi
   14000b9ea:	jmp    0x14000b9fe
   14000b9ec:	call   0x14000b2c0
   14000b9f1:	call   0x140009658
   14000b9f6:	mov    DWORD PTR [rax],0xc
   14000b9fc:	xor    eax,eax
   14000b9fe:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ba03:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ba08:	add    rsp,0x20
   14000ba0c:	pop    rdi
   14000ba0d:	ret    
   14000ba0e:	int3   
   14000ba0f:	int3   
   14000ba10:	int3   
   14000ba11:	int3   
   14000ba12:	int3   
   14000ba13:	int3   
   14000ba14:	mov    QWORD PTR [rsp+0x8],rbx
   14000ba19:	push   rdi
   14000ba1a:	sub    rsp,0x30
   14000ba1e:	xor    edi,edi
   14000ba20:	test   rcx,rcx
   14000ba23:	je     0x14000ba32
   14000ba25:	test   rdx,rdx
   14000ba28:	je     0x14000ba32
   14000ba2a:	test   r8,r8
   14000ba2d:	jne    0x14000ba5f
   14000ba2f:	mov    WORD PTR [rcx],di
   14000ba32:	call   0x140009658
   14000ba37:	mov    ebx,0x16
   14000ba3c:	xor    r9d,r9d
   14000ba3f:	xor    r8d,r8d
   14000ba42:	xor    edx,edx
   14000ba44:	xor    ecx,ecx
   14000ba46:	mov    QWORD PTR [rsp+0x20],rdi
   14000ba4b:	mov    DWORD PTR [rax],ebx
   14000ba4d:	call   0x14000974c
   14000ba52:	mov    eax,ebx
   14000ba54:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ba59:	add    rsp,0x30
   14000ba5d:	pop    rdi
   14000ba5e:	ret    
   14000ba5f:	mov    r9,rcx
   14000ba62:	sub    r9,r8
   14000ba65:	movzx  eax,WORD PTR [r8]
   14000ba69:	mov    WORD PTR [r9+r8*1],ax
   14000ba6e:	add    r8,0x2
   14000ba72:	test   ax,ax
   14000ba75:	je     0x14000ba7c
   14000ba77:	dec    rdx
   14000ba7a:	jne    0x14000ba65
   14000ba7c:	test   rdx,rdx
   14000ba7f:	jne    0x14000ba90
   14000ba81:	mov    WORD PTR [rcx],di
   14000ba84:	call   0x140009658
   14000ba89:	mov    ebx,0x22
   14000ba8e:	jmp    0x14000ba3c
   14000ba90:	xor    eax,eax
   14000ba92:	jmp    0x14000ba54
   14000ba94:	int3   
   14000ba95:	int3   
   14000ba96:	int3   
   14000ba97:	int3   
   14000ba98:	int3   
   14000ba99:	int3   
   14000ba9a:	int3   
   14000ba9b:	int3   
   14000ba9c:	int3   
   14000ba9d:	int3   
   14000ba9e:	int3   
   14000ba9f:	int3   
   14000baa0:	int3   
   14000baa1:	int3   
   14000baa2:	int3   
   14000baa3:	int3   
   14000baa4:	int3   
   14000baa5:	int3   
   14000baa6:	int3   
   14000baa7:	int3   
   14000baa8:	rex push rbx
   14000baaa:	sub    rsp,0x20
   14000baae:	mov    r11d,DWORD PTR [r8]
   14000bab1:	mov    rbx,rdx
   14000bab4:	mov    r9,rcx
   14000bab7:	and    r11d,0xfffffff8
   14000babb:	test   BYTE PTR [r8],0x4
   14000babf:	mov    r10,rcx
   14000bac2:	je     0x14000bad7
   14000bac4:	mov    eax,DWORD PTR [r8+0x8]
   14000bac8:	movsxd r10,DWORD PTR [r8+0x4]
   14000bacc:	neg    eax
   14000bace:	add    r10,rcx
   14000bad1:	movsxd rcx,eax
   14000bad4:	and    r10,rcx
   14000bad7:	movsxd rax,r11d
   14000bada:	mov    rdx,QWORD PTR [rax+r10*1]
   14000bade:	mov    rax,QWORD PTR [rbx+0x10]
   14000bae2:	mov    ecx,DWORD PTR [rax+0x8]
   14000bae5:	add    rcx,QWORD PTR [rbx+0x8]
   14000bae9:	test   BYTE PTR [rcx+0x3],0xf
   14000baed:	je     0x14000bafb
   14000baef:	movzx  eax,BYTE PTR [rcx+0x3]
   14000baf3:	and    eax,0xfffffff0
   14000baf6:	cdqe   
   14000baf8:	add    r9,rax
   14000bafb:	xor    r9,rdx
   14000bafe:	mov    rcx,r9
   14000bb01:	add    rsp,0x20
   14000bb05:	pop    rbx
   14000bb06:	jmp    0x140006d40
   14000bb0b:	int3   
   14000bb0c:	int3   
   14000bb0d:	int3   
   14000bb0e:	int3   
   14000bb0f:	int3   
   14000bb10:	int3   
   14000bb11:	int3   
   14000bb12:	int3   
   14000bb13:	int3   
   14000bb14:	sub    rsp,0x28
   14000bb18:	mov    r8,QWORD PTR [r9+0x38]
   14000bb1c:	mov    rcx,rdx
   14000bb1f:	mov    rdx,r9
   14000bb22:	call   0x14000baa8
   14000bb27:	mov    eax,0x1
   14000bb2c:	add    rsp,0x28
   14000bb30:	ret    
   14000bb31:	int3   
   14000bb32:	int3   
   14000bb33:	int3   
   14000bb34:	int3   
   14000bb35:	int3   
   14000bb36:	int3   
   14000bb37:	int3   
   14000bb38:	test   rcx,rcx
   14000bb3b:	je     0x14000bc41
   14000bb41:	push   rbx
   14000bb42:	sub    rsp,0x20
   14000bb46:	mov    rbx,rcx
   14000bb49:	mov    rcx,QWORD PTR [rcx+0x18]
   14000bb4d:	cmp    rcx,QWORD PTR [rip+0x6524]        # 0x140012078
   14000bb54:	je     0x14000bb5b
   14000bb56:	call   0x14000b0d0
   14000bb5b:	mov    rcx,QWORD PTR [rbx+0x20]
   14000bb5f:	cmp    rcx,QWORD PTR [rip+0x651a]        # 0x140012080
   14000bb66:	je     0x14000bb6d
   14000bb68:	call   0x14000b0d0
   14000bb6d:	mov    rcx,QWORD PTR [rbx+0x28]
   14000bb71:	cmp    rcx,QWORD PTR [rip+0x6510]        # 0x140012088
   14000bb78:	je     0x14000bb7f
   14000bb7a:	call   0x14000b0d0
   14000bb7f:	mov    rcx,QWORD PTR [rbx+0x30]
   14000bb83:	cmp    rcx,QWORD PTR [rip+0x6506]        # 0x140012090
   14000bb8a:	je     0x14000bb91
   14000bb8c:	call   0x14000b0d0
   14000bb91:	mov    rcx,QWORD PTR [rbx+0x38]
   14000bb95:	cmp    rcx,QWORD PTR [rip+0x64fc]        # 0x140012098
   14000bb9c:	je     0x14000bba3
   14000bb9e:	call   0x14000b0d0
   14000bba3:	mov    rcx,QWORD PTR [rbx+0x40]
   14000bba7:	cmp    rcx,QWORD PTR [rip+0x64f2]        # 0x1400120a0
   14000bbae:	je     0x14000bbb5
   14000bbb0:	call   0x14000b0d0
   14000bbb5:	mov    rcx,QWORD PTR [rbx+0x48]
   14000bbb9:	cmp    rcx,QWORD PTR [rip+0x64e8]        # 0x1400120a8
   14000bbc0:	je     0x14000bbc7
   14000bbc2:	call   0x14000b0d0
   14000bbc7:	mov    rcx,QWORD PTR [rbx+0x68]
   14000bbcb:	cmp    rcx,QWORD PTR [rip+0x64f6]        # 0x1400120c8
   14000bbd2:	je     0x14000bbd9
   14000bbd4:	call   0x14000b0d0
   14000bbd9:	mov    rcx,QWORD PTR [rbx+0x70]
   14000bbdd:	cmp    rcx,QWORD PTR [rip+0x64ec]        # 0x1400120d0
   14000bbe4:	je     0x14000bbeb
   14000bbe6:	call   0x14000b0d0
   14000bbeb:	mov    rcx,QWORD PTR [rbx+0x78]
   14000bbef:	cmp    rcx,QWORD PTR [rip+0x64e2]        # 0x1400120d8
   14000bbf6:	je     0x14000bbfd
   14000bbf8:	call   0x14000b0d0
   14000bbfd:	mov    rcx,QWORD PTR [rbx+0x80]
   14000bc04:	cmp    rcx,QWORD PTR [rip+0x64d5]        # 0x1400120e0
   14000bc0b:	je     0x14000bc12
   14000bc0d:	call   0x14000b0d0
   14000bc12:	mov    rcx,QWORD PTR [rbx+0x88]
   14000bc19:	cmp    rcx,QWORD PTR [rip+0x64c8]        # 0x1400120e8
   14000bc20:	je     0x14000bc27
   14000bc22:	call   0x14000b0d0
   14000bc27:	mov    rcx,QWORD PTR [rbx+0x90]
   14000bc2e:	cmp    rcx,QWORD PTR [rip+0x64bb]        # 0x1400120f0
   14000bc35:	je     0x14000bc3c
   14000bc37:	call   0x14000b0d0
   14000bc3c:	add    rsp,0x20
   14000bc40:	pop    rbx
   14000bc41:	ret    
   14000bc42:	int3   
   14000bc43:	int3   
   14000bc44:	int3   
   14000bc45:	int3   
   14000bc46:	int3   
   14000bc47:	int3   
   14000bc48:	test   rcx,rcx
   14000bc4b:	je     0x14000bcb3
   14000bc4d:	push   rbx
   14000bc4e:	sub    rsp,0x20
   14000bc52:	mov    rbx,rcx
   14000bc55:	mov    rcx,QWORD PTR [rcx]
   14000bc58:	cmp    rcx,QWORD PTR [rip+0x6401]        # 0x140012060
   14000bc5f:	je     0x14000bc66
   14000bc61:	call   0x14000b0d0
   14000bc66:	mov    rcx,QWORD PTR [rbx+0x8]
   14000bc6a:	cmp    rcx,QWORD PTR [rip+0x63f7]        # 0x140012068
   14000bc71:	je     0x14000bc78
   14000bc73:	call   0x14000b0d0
   14000bc78:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bc7c:	cmp    rcx,QWORD PTR [rip+0x63ed]        # 0x140012070
   14000bc83:	je     0x14000bc8a
   14000bc85:	call   0x14000b0d0
   14000bc8a:	mov    rcx,QWORD PTR [rbx+0x58]
   14000bc8e:	cmp    rcx,QWORD PTR [rip+0x6423]        # 0x1400120b8
   14000bc95:	je     0x14000bc9c
   14000bc97:	call   0x14000b0d0
   14000bc9c:	mov    rcx,QWORD PTR [rbx+0x60]
   14000bca0:	cmp    rcx,QWORD PTR [rip+0x6419]        # 0x1400120c0
   14000bca7:	je     0x14000bcae
   14000bca9:	call   0x14000b0d0
   14000bcae:	add    rsp,0x20
   14000bcb2:	pop    rbx
   14000bcb3:	ret    
   14000bcb4:	int3   
   14000bcb5:	int3   
   14000bcb6:	int3   
   14000bcb7:	int3   
   14000bcb8:	int3   
   14000bcb9:	int3   
   14000bcba:	int3   
   14000bcbb:	int3   
   14000bcbc:	test   rcx,rcx
   14000bcbf:	je     0x14000c0a9
   14000bcc5:	push   rbx
   14000bcc6:	sub    rsp,0x20
   14000bcca:	mov    rbx,rcx
   14000bccd:	mov    rcx,QWORD PTR [rcx+0x8]
   14000bcd1:	call   0x14000b0d0
   14000bcd6:	mov    rcx,QWORD PTR [rbx+0x10]
   14000bcda:	call   0x14000b0d0
   14000bcdf:	mov    rcx,QWORD PTR [rbx+0x18]
   14000bce3:	call   0x14000b0d0
   14000bce8:	mov    rcx,QWORD PTR [rbx+0x20]
   14000bcec:	call   0x14000b0d0
   14000bcf1:	mov    rcx,QWORD PTR [rbx+0x28]
   14000bcf5:	call   0x14000b0d0
   14000bcfa:	mov    rcx,QWORD PTR [rbx+0x30]
   14000bcfe:	call   0x14000b0d0
   14000bd03:	mov    rcx,QWORD PTR [rbx]
   14000bd06:	call   0x14000b0d0
   14000bd0b:	mov    rcx,QWORD PTR [rbx+0x40]
   14000bd0f:	call   0x14000b0d0
   14000bd14:	mov    rcx,QWORD PTR [rbx+0x48]
   14000bd18:	call   0x14000b0d0
   14000bd1d:	mov    rcx,QWORD PTR [rbx+0x50]
   14000bd21:	call   0x14000b0d0
   14000bd26:	mov    rcx,QWORD PTR [rbx+0x58]
   14000bd2a:	call   0x14000b0d0
   14000bd2f:	mov    rcx,QWORD PTR [rbx+0x60]
   14000bd33:	call   0x14000b0d0
   14000bd38:	mov    rcx,QWORD PTR [rbx+0x68]
   14000bd3c:	call   0x14000b0d0
   14000bd41:	mov    rcx,QWORD PTR [rbx+0x38]
   14000bd45:	call   0x14000b0d0
   14000bd4a:	mov    rcx,QWORD PTR [rbx+0x70]
   14000bd4e:	call   0x14000b0d0
   14000bd53:	mov    rcx,QWORD PTR [rbx+0x78]
   14000bd57:	call   0x14000b0d0
   14000bd5c:	mov    rcx,QWORD PTR [rbx+0x80]
   14000bd63:	call   0x14000b0d0
   14000bd68:	mov    rcx,QWORD PTR [rbx+0x88]
   14000bd6f:	call   0x14000b0d0
   14000bd74:	mov    rcx,QWORD PTR [rbx+0x90]
   14000bd7b:	call   0x14000b0d0
   14000bd80:	mov    rcx,QWORD PTR [rbx+0x98]
   14000bd87:	call   0x14000b0d0
   14000bd8c:	mov    rcx,QWORD PTR [rbx+0xa0]
   14000bd93:	call   0x14000b0d0
   14000bd98:	mov    rcx,QWORD PTR [rbx+0xa8]
   14000bd9f:	call   0x14000b0d0
   14000bda4:	mov    rcx,QWORD PTR [rbx+0xb0]
   14000bdab:	call   0x14000b0d0
   14000bdb0:	mov    rcx,QWORD PTR [rbx+0xb8]
   14000bdb7:	call   0x14000b0d0
   14000bdbc:	mov    rcx,QWORD PTR [rbx+0xc0]
   14000bdc3:	call   0x14000b0d0
   14000bdc8:	mov    rcx,QWORD PTR [rbx+0xc8]
   14000bdcf:	call   0x14000b0d0
   14000bdd4:	mov    rcx,QWORD PTR [rbx+0xd0]
   14000bddb:	call   0x14000b0d0
   14000bde0:	mov    rcx,QWORD PTR [rbx+0xd8]
   14000bde7:	call   0x14000b0d0
   14000bdec:	mov    rcx,QWORD PTR [rbx+0xe0]
   14000bdf3:	call   0x14000b0d0
   14000bdf8:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000bdff:	call   0x14000b0d0
   14000be04:	mov    rcx,QWORD PTR [rbx+0xf0]
   14000be0b:	call   0x14000b0d0
   14000be10:	mov    rcx,QWORD PTR [rbx+0xf8]
   14000be17:	call   0x14000b0d0
   14000be1c:	mov    rcx,QWORD PTR [rbx+0x100]
   14000be23:	call   0x14000b0d0
   14000be28:	mov    rcx,QWORD PTR [rbx+0x108]
   14000be2f:	call   0x14000b0d0
   14000be34:	mov    rcx,QWORD PTR [rbx+0x110]
   14000be3b:	call   0x14000b0d0
   14000be40:	mov    rcx,QWORD PTR [rbx+0x118]
   14000be47:	call   0x14000b0d0
   14000be4c:	mov    rcx,QWORD PTR [rbx+0x120]
   14000be53:	call   0x14000b0d0
   14000be58:	mov    rcx,QWORD PTR [rbx+0x128]
   14000be5f:	call   0x14000b0d0
   14000be64:	mov    rcx,QWORD PTR [rbx+0x130]
   14000be6b:	call   0x14000b0d0
   14000be70:	mov    rcx,QWORD PTR [rbx+0x138]
   14000be77:	call   0x14000b0d0
   14000be7c:	mov    rcx,QWORD PTR [rbx+0x140]
   14000be83:	call   0x14000b0d0
   14000be88:	mov    rcx,QWORD PTR [rbx+0x148]
   14000be8f:	call   0x14000b0d0
   14000be94:	mov    rcx,QWORD PTR [rbx+0x150]
   14000be9b:	call   0x14000b0d0
   14000bea0:	mov    rcx,QWORD PTR [rbx+0x170]
   14000bea7:	call   0x14000b0d0
   14000beac:	mov    rcx,QWORD PTR [rbx+0x178]
   14000beb3:	call   0x14000b0d0
   14000beb8:	mov    rcx,QWORD PTR [rbx+0x180]
   14000bebf:	call   0x14000b0d0
   14000bec4:	mov    rcx,QWORD PTR [rbx+0x188]
   14000becb:	call   0x14000b0d0
   14000bed0:	mov    rcx,QWORD PTR [rbx+0x190]
   14000bed7:	call   0x14000b0d0
   14000bedc:	mov    rcx,QWORD PTR [rbx+0x198]
   14000bee3:	call   0x14000b0d0
   14000bee8:	mov    rcx,QWORD PTR [rbx+0x168]
   14000beef:	call   0x14000b0d0
   14000bef4:	mov    rcx,QWORD PTR [rbx+0x1a8]
   14000befb:	call   0x14000b0d0
   14000bf00:	mov    rcx,QWORD PTR [rbx+0x1b0]
   14000bf07:	call   0x14000b0d0
   14000bf0c:	mov    rcx,QWORD PTR [rbx+0x1b8]
   14000bf13:	call   0x14000b0d0
   14000bf18:	mov    rcx,QWORD PTR [rbx+0x1c0]
   14000bf1f:	call   0x14000b0d0
   14000bf24:	mov    rcx,QWORD PTR [rbx+0x1c8]
   14000bf2b:	call   0x14000b0d0
   14000bf30:	mov    rcx,QWORD PTR [rbx+0x1d0]
   14000bf37:	call   0x14000b0d0
   14000bf3c:	mov    rcx,QWORD PTR [rbx+0x1a0]
   14000bf43:	call   0x14000b0d0
   14000bf48:	mov    rcx,QWORD PTR [rbx+0x1d8]
   14000bf4f:	call   0x14000b0d0
   14000bf54:	mov    rcx,QWORD PTR [rbx+0x1e0]
   14000bf5b:	call   0x14000b0d0
   14000bf60:	mov    rcx,QWORD PTR [rbx+0x1e8]
   14000bf67:	call   0x14000b0d0
   14000bf6c:	mov    rcx,QWORD PTR [rbx+0x1f0]
   14000bf73:	call   0x14000b0d0
   14000bf78:	mov    rcx,QWORD PTR [rbx+0x1f8]
   14000bf7f:	call   0x14000b0d0
   14000bf84:	mov    rcx,QWORD PTR [rbx+0x200]
   14000bf8b:	call   0x14000b0d0
   14000bf90:	mov    rcx,QWORD PTR [rbx+0x208]
   14000bf97:	call   0x14000b0d0
   14000bf9c:	mov    rcx,QWORD PTR [rbx+0x210]
   14000bfa3:	call   0x14000b0d0
   14000bfa8:	mov    rcx,QWORD PTR [rbx+0x218]
   14000bfaf:	call   0x14000b0d0
   14000bfb4:	mov    rcx,QWORD PTR [rbx+0x220]
   14000bfbb:	call   0x14000b0d0
   14000bfc0:	mov    rcx,QWORD PTR [rbx+0x228]
   14000bfc7:	call   0x14000b0d0
   14000bfcc:	mov    rcx,QWORD PTR [rbx+0x230]
   14000bfd3:	call   0x14000b0d0
   14000bfd8:	mov    rcx,QWORD PTR [rbx+0x238]
   14000bfdf:	call   0x14000b0d0
   14000bfe4:	mov    rcx,QWORD PTR [rbx+0x240]
   14000bfeb:	call   0x14000b0d0
   14000bff0:	mov    rcx,QWORD PTR [rbx+0x248]
   14000bff7:	call   0x14000b0d0
   14000bffc:	mov    rcx,QWORD PTR [rbx+0x250]
   14000c003:	call   0x14000b0d0
   14000c008:	mov    rcx,QWORD PTR [rbx+0x258]
   14000c00f:	call   0x14000b0d0
   14000c014:	mov    rcx,QWORD PTR [rbx+0x260]
   14000c01b:	call   0x14000b0d0
   14000c020:	mov    rcx,QWORD PTR [rbx+0x268]
   14000c027:	call   0x14000b0d0
   14000c02c:	mov    rcx,QWORD PTR [rbx+0x270]
   14000c033:	call   0x14000b0d0
   14000c038:	mov    rcx,QWORD PTR [rbx+0x278]
   14000c03f:	call   0x14000b0d0
   14000c044:	mov    rcx,QWORD PTR [rbx+0x280]
   14000c04b:	call   0x14000b0d0
   14000c050:	mov    rcx,QWORD PTR [rbx+0x288]
   14000c057:	call   0x14000b0d0
   14000c05c:	mov    rcx,QWORD PTR [rbx+0x290]
   14000c063:	call   0x14000b0d0
   14000c068:	mov    rcx,QWORD PTR [rbx+0x298]
   14000c06f:	call   0x14000b0d0
   14000c074:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14000c07b:	call   0x14000b0d0
   14000c080:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14000c087:	call   0x14000b0d0
   14000c08c:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14000c093:	call   0x14000b0d0
   14000c098:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14000c09f:	call   0x14000b0d0
   14000c0a4:	add    rsp,0x20
   14000c0a8:	pop    rbx
   14000c0a9:	ret    
   14000c0aa:	int3   
   14000c0ab:	int3   
   14000c0ac:	int3   
   14000c0ad:	int3   
   14000c0ae:	int3   
   14000c0af:	int3   
   14000c0b0:	int3   
   14000c0b1:	int3   
   14000c0b2:	int3   
   14000c0b3:	int3   
   14000c0b4:	int3   
   14000c0b5:	int3   
   14000c0b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c0c0:	test   r8,r8
   14000c0c3:	je     0x14000c13a
   14000c0c5:	sub    rdx,rcx
   14000c0c8:	mov    r9,rdx
   14000c0cb:	movabs r11,0x8101010101010100
   14000c0d5:	test   cl,0x7
   14000c0d8:	je     0x14000c0f9
   14000c0da:	mov    al,BYTE PTR [rcx]
   14000c0dc:	mov    dl,BYTE PTR [rcx+r9*1]
   14000c0e0:	inc    rcx
   14000c0e3:	cmp    al,dl
   14000c0e5:	jne    0x14000c13e
   14000c0e7:	dec    r8
   14000c0ea:	je     0x14000c13a
   14000c0ec:	test   al,al
   14000c0ee:	je     0x14000c13a
   14000c0f0:	test   rcx,0x7
   14000c0f7:	jne    0x14000c0da
   14000c0f9:	lea    rdx,[rcx+r9*1]
   14000c0fd:	and    dx,0xfff
   14000c102:	cmp    dx,0xff8
   14000c107:	ja     0x14000c0da
   14000c109:	mov    rax,QWORD PTR [rcx]
   14000c10c:	mov    rdx,QWORD PTR [rcx+r9*1]
   14000c110:	cmp    rax,rdx
   14000c113:	jne    0x14000c0da
   14000c115:	add    rcx,0x8
   14000c119:	sub    r8,0x8
   14000c11d:	movabs r10,0x7efefefefefefeff
   14000c127:	jbe    0x14000c13a
   14000c129:	xor    rax,0xffffffffffffffff
   14000c12d:	add    r10,rdx
   14000c130:	xor    rax,r10
   14000c133:	test   r11,rax
   14000c136:	je     0x14000c0f9
   14000c138:	jmp    0x14000c146
   14000c13a:	xor    rax,rax
   14000c13d:	ret    
   14000c13e:	sbb    rax,rax
   14000c141:	sbb    rax,0xffffffffffffffff
   14000c145:	ret    
   14000c146:	test   dl,dl
   14000c148:	je     0x14000c171
   14000c14a:	test   dh,dh
   14000c14c:	je     0x14000c171
   14000c14e:	shr    rdx,0x10
   14000c152:	test   dl,dl
   14000c154:	je     0x14000c171
   14000c156:	test   dh,dh
   14000c158:	je     0x14000c171
   14000c15a:	shr    rdx,0x10
   14000c15e:	test   dl,dl
   14000c160:	je     0x14000c171
   14000c162:	test   dh,dh
   14000c164:	je     0x14000c171
   14000c166:	shr    edx,0x10
   14000c169:	test   dl,dl
   14000c16b:	je     0x14000c171
   14000c16d:	test   dh,dh
   14000c16f:	jne    0x14000c0f9
   14000c171:	xor    rax,rax
   14000c174:	ret    
   14000c175:	int3   
   14000c176:	int3   
   14000c177:	int3   
   14000c178:	int3   
   14000c179:	int3   
   14000c17a:	int3   
   14000c17b:	int3   
   14000c17c:	mov    QWORD PTR [rsp+0x8],rbx
   14000c181:	mov    QWORD PTR [rsp+0x10],rsi
   14000c186:	push   rdi
   14000c187:	sub    rsp,0x60
   14000c18b:	mov    esi,edx
   14000c18d:	mov    rdx,rcx
   14000c190:	lea    rcx,[rsp+0x40]
   14000c195:	mov    ebx,r9d
   14000c198:	mov    rdi,r8
   14000c19b:	call   0x140006f24
   14000c1a0:	mov    r11d,DWORD PTR [rsp+0xa8]
   14000c1a8:	mov    eax,DWORD PTR [rsp+0x98]
   14000c1af:	lea    rcx,[rsp+0x40]
   14000c1b4:	mov    DWORD PTR [rsp+0x30],r11d
   14000c1b9:	mov    DWORD PTR [rsp+0x28],eax
   14000c1bd:	mov    rax,QWORD PTR [rsp+0x90]
   14000c1c5:	mov    r9d,ebx
   14000c1c8:	mov    r8,rdi
   14000c1cb:	mov    edx,esi
   14000c1cd:	mov    QWORD PTR [rsp+0x20],rax
   14000c1d2:	call   0x14000c200
   14000c1d7:	cmp    BYTE PTR [rsp+0x58],0x0
   14000c1dc:	je     0x14000c1ea
   14000c1de:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c1e3:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c1ea:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c1ef:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c1f4:	add    rsp,0x60
   14000c1f8:	pop    rdi
   14000c1f9:	ret    
   14000c1fa:	int3   
   14000c1fb:	int3   
   14000c1fc:	int3   
   14000c1fd:	int3   
   14000c1fe:	int3   
   14000c1ff:	int3   
   14000c200:	rex push rbp
   14000c202:	push   r12
   14000c204:	push   r13
   14000c206:	push   r14
   14000c208:	push   r15
   14000c20a:	sub    rsp,0x40
   14000c20e:	lea    rbp,[rsp+0x30]
   14000c213:	mov    QWORD PTR [rbp+0x40],rbx
   14000c217:	mov    QWORD PTR [rbp+0x48],rsi
   14000c21b:	mov    QWORD PTR [rbp+0x50],rdi
   14000c21f:	mov    rax,QWORD PTR [rip+0x4f4a]        # 0x140011170
   14000c226:	xor    rax,rbp
   14000c229:	mov    QWORD PTR [rbp+0x0],rax
   14000c22d:	mov    r14d,DWORD PTR [rbp+0x68]
   14000c231:	xor    edi,edi
   14000c233:	mov    r15d,r9d
   14000c236:	mov    r12,r8
   14000c239:	mov    r13d,edx
   14000c23c:	test   r14d,r14d
   14000c23f:	jne    0x14000c248
   14000c241:	mov    rax,QWORD PTR [rcx]
   14000c244:	mov    r14d,DWORD PTR [rax+0x4]
   14000c248:	neg    DWORD PTR [rbp+0x70]
   14000c24b:	mov    ecx,r14d
   14000c24e:	mov    DWORD PTR [rsp+0x28],edi
   14000c252:	sbb    edx,edx
   14000c254:	mov    QWORD PTR [rsp+0x20],rdi
   14000c259:	and    edx,0x8
   14000c25c:	inc    edx
   14000c25e:	call   QWORD PTR [rip+0xa2c4]        # 0x140016528
   14000c264:	movsxd rsi,eax
   14000c267:	test   eax,eax
   14000c269:	jne    0x14000c272
   14000c26b:	xor    eax,eax
   14000c26d:	jmp    0x14000c33f
   14000c272:	jle    0x14000c2de
   14000c274:	movabs rax,0x7ffffffffffffff0
   14000c27e:	cmp    rsi,rax
   14000c281:	ja     0x14000c2de
   14000c283:	lea    rcx,[rsi*2+0x10]
   14000c28b:	cmp    rcx,0x400
   14000c292:	ja     0x14000c2c5
   14000c294:	lea    rax,[rcx+0xf]
   14000c298:	cmp    rax,rcx
   14000c29b:	ja     0x14000c2a7
   14000c29d:	movabs rax,0xffffffffffffff0
   14000c2a7:	and    rax,0xfffffffffffffff0
   14000c2ab:	call   0x14000fa30
   14000c2b0:	sub    rsp,rax
   14000c2b3:	lea    rbx,[rsp+0x30]
   14000c2b8:	test   rbx,rbx
   14000c2bb:	je     0x14000c26b
   14000c2bd:	mov    DWORD PTR [rbx],0xcccc
   14000c2c3:	jmp    0x14000c2d8
   14000c2c5:	call   0x14000b958
   14000c2ca:	mov    rbx,rax
   14000c2cd:	test   rax,rax
   14000c2d0:	je     0x14000c2e1
   14000c2d2:	mov    DWORD PTR [rax],0xdddd
   14000c2d8:	add    rbx,0x10
   14000c2dc:	jmp    0x14000c2e1
   14000c2de:	mov    rbx,rdi
   14000c2e1:	test   rbx,rbx
   14000c2e4:	je     0x14000c26b
   14000c2e6:	mov    r8,rsi
   14000c2e9:	xor    edx,edx
   14000c2eb:	mov    rcx,rbx
   14000c2ee:	add    r8,r8
   14000c2f1:	call   0x14000c460
   14000c2f6:	mov    r9d,r15d
   14000c2f9:	mov    r8,r12
   14000c2fc:	mov    edx,0x1
   14000c301:	mov    ecx,r14d
   14000c304:	mov    DWORD PTR [rsp+0x28],esi
   14000c308:	mov    QWORD PTR [rsp+0x20],rbx
   14000c30d:	call   QWORD PTR [rip+0xa215]        # 0x140016528
   14000c313:	test   eax,eax
   14000c315:	je     0x14000c32c
   14000c317:	mov    r9,QWORD PTR [rbp+0x60]
   14000c31b:	mov    r8d,eax
   14000c31e:	mov    rdx,rbx
   14000c321:	mov    ecx,r13d
   14000c324:	call   QWORD PTR [rip+0xa206]        # 0x140016530
   14000c32a:	mov    edi,eax
   14000c32c:	lea    rcx,[rbx-0x10]
   14000c330:	cmp    DWORD PTR [rcx],0xdddd
   14000c336:	jne    0x14000c33d
   14000c338:	call   0x14000b0d0
   14000c33d:	mov    eax,edi
   14000c33f:	mov    rcx,QWORD PTR [rbp+0x0]
   14000c343:	xor    rcx,rbp
   14000c346:	call   0x140006d40
   14000c34b:	mov    rbx,QWORD PTR [rbp+0x40]
   14000c34f:	mov    rsi,QWORD PTR [rbp+0x48]
   14000c353:	mov    rdi,QWORD PTR [rbp+0x50]
   14000c357:	lea    rsp,[rbp+0x10]
   14000c35b:	pop    r15
   14000c35d:	pop    r14
   14000c35f:	pop    r13
   14000c361:	pop    r12
   14000c363:	pop    rbp
   14000c364:	ret    
   14000c365:	int3   
   14000c366:	int3   
   14000c367:	int3   
   14000c368:	int3   
   14000c369:	int3   
   14000c36a:	int3   
   14000c36b:	int3   
   14000c36c:	int3   
   14000c36d:	int3   
   14000c36e:	int3   
   14000c36f:	int3   
   14000c370:	int3   
   14000c371:	int3   
   14000c372:	int3   
   14000c373:	int3   
   14000c374:	int3   
   14000c375:	int3   
   14000c376:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c380:	sub    rdx,rcx
   14000c383:	cmp    r8,0x8
   14000c387:	jb     0x14000c3ab
   14000c389:	test   cl,0x7
   14000c38c:	je     0x14000c3a2
   14000c38e:	xchg   ax,ax
   14000c390:	mov    al,BYTE PTR [rcx]
   14000c392:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c395:	jne    0x14000c3c3
   14000c397:	inc    rcx
   14000c39a:	dec    r8
   14000c39d:	test   cl,0x7
   14000c3a0:	jne    0x14000c390
   14000c3a2:	mov    r9,r8
   14000c3a5:	shr    r9,0x3
   14000c3a9:	jne    0x14000c3ca
   14000c3ab:	test   r8,r8
   14000c3ae:	je     0x14000c3bf
   14000c3b0:	mov    al,BYTE PTR [rcx]
   14000c3b2:	cmp    al,BYTE PTR [rdx+rcx*1]
   14000c3b5:	jne    0x14000c3c3
   14000c3b7:	inc    rcx
   14000c3ba:	dec    r8
   14000c3bd:	jne    0x14000c3b0
   14000c3bf:	xor    rax,rax
   14000c3c2:	ret    
   14000c3c3:	sbb    eax,eax
   14000c3c5:	sbb    eax,0xffffffff
   14000c3c8:	ret    
   14000c3c9:	nop
   14000c3ca:	shr    r9,0x2
   14000c3ce:	je     0x14000c407
   14000c3d0:	mov    rax,QWORD PTR [rcx]
   14000c3d3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c3d7:	jne    0x14000c434
   14000c3d9:	mov    rax,QWORD PTR [rcx+0x8]
   14000c3dd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   14000c3e2:	jne    0x14000c430
   14000c3e4:	mov    rax,QWORD PTR [rcx+0x10]
   14000c3e8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14000c3ed:	jne    0x14000c42c
   14000c3ef:	mov    rax,QWORD PTR [rcx+0x18]
   14000c3f3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   14000c3f8:	jne    0x14000c428
   14000c3fa:	add    rcx,0x20
   14000c3fe:	dec    r9
   14000c401:	jne    0x14000c3d0
   14000c403:	and    r8,0x1f
   14000c407:	mov    r9,r8
   14000c40a:	shr    r9,0x3
   14000c40e:	je     0x14000c3ab
   14000c410:	mov    rax,QWORD PTR [rcx]
   14000c413:	cmp    rax,QWORD PTR [rdx+rcx*1]
   14000c417:	jne    0x14000c434
   14000c419:	add    rcx,0x8
   14000c41d:	dec    r9
   14000c420:	jne    0x14000c410
   14000c422:	and    r8,0x7
   14000c426:	jmp    0x14000c3ab
   14000c428:	add    rcx,0x8
   14000c42c:	add    rcx,0x8
   14000c430:	add    rcx,0x8
   14000c434:	mov    rcx,QWORD PTR [rcx+rdx*1]
   14000c438:	bswap  rax
   14000c43b:	bswap  rcx
   14000c43e:	cmp    rax,rcx
   14000c441:	sbb    eax,eax
   14000c443:	sbb    eax,0xffffffff
   14000c446:	ret    
   14000c447:	int3   
   14000c448:	int3   
   14000c449:	int3   
   14000c44a:	int3   
   14000c44b:	int3   
   14000c44c:	int3   
   14000c44d:	int3   
   14000c44e:	int3   
   14000c44f:	int3   
   14000c450:	int3   
   14000c451:	int3   
   14000c452:	int3   
   14000c453:	int3   
   14000c454:	int3   
   14000c455:	int3   
   14000c456:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000c460:	mov    rax,rcx
   14000c463:	cmp    r8,0x8
   14000c467:	jb     0x14000c4bc
   14000c469:	movzx  edx,dl
   14000c46c:	movabs r9,0x101010101010101
   14000c476:	imul   rdx,r9
   14000c47a:	cmp    r8,0x40
   14000c47e:	jb     0x14000c49e
   14000c480:	neg    rcx
   14000c483:	and    ecx,0x7
   14000c486:	je     0x14000c48e
   14000c488:	sub    r8,rcx
   14000c48b:	mov    QWORD PTR [rax],rdx
   14000c48e:	add    rcx,rax
   14000c491:	mov    r9,r8
   14000c494:	and    r8,0x3f
   14000c498:	shr    r9,0x6
   14000c49c:	jne    0x14000c4d7
   14000c49e:	mov    r9,r8
   14000c4a1:	and    r8,0x7
   14000c4a5:	shr    r9,0x3
   14000c4a9:	je     0x14000c4bc
   14000c4ab:	data16 data16 xchg ax,ax
   14000c4af:	nop
   14000c4b0:	mov    QWORD PTR [rcx],rdx
   14000c4b3:	add    rcx,0x8
   14000c4b7:	dec    r9
   14000c4ba:	jne    0x14000c4b0
   14000c4bc:	test   r8,r8
   14000c4bf:	je     0x14000c4cb
   14000c4c1:	mov    BYTE PTR [rcx],dl
   14000c4c3:	inc    rcx
   14000c4c6:	dec    r8
   14000c4c9:	jne    0x14000c4c1
   14000c4cb:	ret    0x0
   14000c4ce:	xchg   ax,ax
   14000c4d0:	data16 data16 xchg ax,ax
   14000c4d4:	data16 xchg ax,ax
   14000c4d7:	cmp    r9,0x1c00
   14000c4de:	jae    0x14000c510
   14000c4e0:	mov    QWORD PTR [rcx],rdx
   14000c4e3:	mov    QWORD PTR [rcx+0x8],rdx
   14000c4e7:	mov    QWORD PTR [rcx+0x10],rdx
   14000c4eb:	add    rcx,0x40
   14000c4ef:	mov    QWORD PTR [rcx-0x28],rdx
   14000c4f3:	mov    QWORD PTR [rcx-0x20],rdx
   14000c4f7:	dec    r9
   14000c4fa:	mov    QWORD PTR [rcx-0x18],rdx
   14000c4fe:	mov    QWORD PTR [rcx-0x10],rdx
   14000c502:	mov    QWORD PTR [rcx-0x8],rdx
   14000c506:	jne    0x14000c4e0
   14000c508:	jmp    0x14000c49e
   14000c50a:	nop    WORD PTR [rax+rax*1+0x0]
   14000c510:	movnti QWORD PTR [rcx],rdx
   14000c514:	movnti QWORD PTR [rcx+0x8],rdx
   14000c519:	movnti QWORD PTR [rcx+0x10],rdx
   14000c51e:	add    rcx,0x40
   14000c522:	movnti QWORD PTR [rcx-0x28],rdx
   14000c527:	movnti QWORD PTR [rcx-0x20],rdx
   14000c52c:	dec    r9
   14000c52f:	movnti QWORD PTR [rcx-0x18],rdx
   14000c534:	movnti QWORD PTR [rcx-0x10],rdx
   14000c539:	movnti QWORD PTR [rcx-0x8],rdx
   14000c53e:	jne    0x14000c510
   14000c540:	lock or BYTE PTR [rsp],0x0
   14000c545:	jmp    0x14000c49e
   14000c54a:	int3   
   14000c54b:	int3   
   14000c54c:	int3   
   14000c54d:	int3   
   14000c54e:	int3   
   14000c54f:	int3   
   14000c550:	mov    QWORD PTR [rsp+0x8],rbx
   14000c555:	mov    QWORD PTR [rsp+0x10],rsi
   14000c55a:	push   rdi
   14000c55b:	sub    rsp,0x70
   14000c55f:	mov    esi,edx
   14000c561:	mov    rdx,rcx
   14000c564:	lea    rcx,[rsp+0x50]
   14000c569:	mov    rbx,r9
   14000c56c:	mov    edi,r8d
   14000c56f:	call   0x140006f24
   14000c574:	mov    eax,DWORD PTR [rsp+0xb8]
   14000c57b:	mov    r11d,DWORD PTR [rsp+0xc0]
   14000c583:	lea    rcx,[rsp+0x50]
   14000c588:	mov    DWORD PTR [rsp+0x40],r11d
   14000c58d:	mov    DWORD PTR [rsp+0x38],eax
   14000c591:	mov    eax,DWORD PTR [rsp+0xb0]
   14000c598:	mov    DWORD PTR [rsp+0x30],eax
   14000c59c:	mov    rax,QWORD PTR [rsp+0xa8]
   14000c5a4:	mov    r9,rbx
   14000c5a7:	mov    QWORD PTR [rsp+0x28],rax
   14000c5ac:	mov    eax,DWORD PTR [rsp+0xa0]
   14000c5b3:	mov    r8d,edi
   14000c5b6:	mov    edx,esi
   14000c5b8:	mov    DWORD PTR [rsp+0x20],eax
   14000c5bc:	call   0x14000c5ec
   14000c5c1:	cmp    BYTE PTR [rsp+0x68],0x0
   14000c5c6:	je     0x14000c5d4
   14000c5c8:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c5cd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000c5d4:	lea    r11,[rsp+0x70]
   14000c5d9:	mov    rbx,QWORD PTR [r11+0x10]
   14000c5dd:	mov    rsi,QWORD PTR [r11+0x18]
   14000c5e1:	mov    rsp,r11
   14000c5e4:	pop    rdi
   14000c5e5:	ret    
   14000c5e6:	int3   
   14000c5e7:	int3   
   14000c5e8:	int3   
   14000c5e9:	int3   
   14000c5ea:	int3   
   14000c5eb:	int3   
   14000c5ec:	mov    QWORD PTR [rsp+0x20],r9
   14000c5f1:	mov    DWORD PTR [rsp+0x18],r8d
   14000c5f6:	mov    DWORD PTR [rsp+0x10],edx
   14000c5fa:	push   rbp
   14000c5fb:	push   rsi
   14000c5fc:	push   rdi
   14000c5fd:	push   r12
   14000c5ff:	push   r13
   14000c601:	push   r14
   14000c603:	push   r15
   14000c605:	sub    rsp,0x90
   14000c60c:	lea    rbp,[rsp+0x40]
   14000c611:	mov    rax,QWORD PTR [rip+0x4b58]        # 0x140011170
   14000c618:	xor    rax,rbp
   14000c61b:	mov    QWORD PTR [rbp+0x48],rax
   14000c61f:	mov    r11,r9
   14000c622:	mov    r14d,DWORD PTR [rbp+0xb0]
   14000c629:	test   r14d,r14d
   14000c62c:	jle    0x14000c66b
   14000c62e:	mov    r10d,r14d
   14000c631:	mov    rax,r9
   14000c634:	dec    r10d
   14000c637:	cmp    BYTE PTR [rax],0x0
   14000c63a:	je     0x14000c648
   14000c63c:	inc    rax
   14000c63f:	test   r10d,r10d
   14000c642:	jne    0x14000c634
   14000c644:	or     r10d,0xffffffff
   14000c648:	mov    eax,r14d
   14000c64b:	sub    eax,r10d
   14000c64e:	dec    eax
   14000c650:	cmp    eax,r14d
   14000c653:	jge    0x14000c662
   14000c655:	lea    r14d,[rax+0x1]
   14000c659:	mov    DWORD PTR [rbp+0xb0],r14d
   14000c660:	jmp    0x14000c66b
   14000c662:	mov    r14d,eax
   14000c665:	mov    DWORD PTR [rbp+0xb0],eax
   14000c66b:	xor    r15d,r15d
   14000c66e:	xor    edi,edi
   14000c670:	mov    QWORD PTR [rbp+0x18],rdi
   14000c674:	and    DWORD PTR [rbp+0x10],edi
   14000c677:	xor    eax,eax
   14000c679:	mov    DWORD PTR [rbp+0x0],eax
   14000c67c:	mov    r13d,DWORD PTR [rbp+0xc8]
   14000c683:	test   r13d,r13d
   14000c686:	jne    0x14000c696
   14000c688:	mov    rax,QWORD PTR [rcx]
   14000c68b:	mov    r13d,DWORD PTR [rax+0x4]
   14000c68f:	mov    DWORD PTR [rbp+0xc8],r13d
   14000c696:	neg    DWORD PTR [rbp+0xd0]
   14000c69c:	sbb    edx,edx
   14000c69e:	and    edx,0x8
   14000c6a1:	inc    edx
   14000c6a3:	and    DWORD PTR [rsp+0x28],edi
   14000c6a7:	and    QWORD PTR [rsp+0x20],rdi
   14000c6ac:	mov    r9d,r14d
   14000c6af:	mov    r8,r11
   14000c6b2:	mov    ecx,r13d
   14000c6b5:	call   QWORD PTR [rip+0x9e6d]        # 0x140016528
   14000c6bb:	movsxd r12,eax
   14000c6be:	mov    DWORD PTR [rbp+0xc],r12d
   14000c6c2:	test   eax,eax
   14000c6c4:	jne    0x14000c6cd
   14000c6c6:	xor    eax,eax
   14000c6c8:	jmp    0x14000c9ce
   14000c6cd:	test   eax,eax
   14000c6cf:	jle    0x14000c74f
   14000c6d1:	xor    edx,edx
   14000c6d3:	lea    rax,[rdx-0x20]
   14000c6d7:	div    r12
   14000c6da:	cmp    rax,0x2
   14000c6de:	jb     0x14000c74f
   14000c6e0:	lea    rcx,[r12*2+0x10]
   14000c6e8:	cmp    rcx,0x400
   14000c6ef:	ja     0x14000c72e
   14000c6f1:	lea    rax,[rcx+0xf]
   14000c6f5:	cmp    rax,rcx
   14000c6f8:	ja     0x14000c704
   14000c6fa:	movabs rax,0xffffffffffffff0
   14000c704:	and    rax,0xfffffffffffffff0
   14000c708:	call   0x14000fa30
   14000c70d:	sub    rsp,rax
   14000c710:	lea    rsi,[rsp+0x40]
   14000c715:	mov    QWORD PTR [rbp+0x38],rsi
   14000c719:	test   rsi,rsi
   14000c71c:	je     0x14000c751
   14000c71e:	mov    DWORD PTR [rsi],0xcccc
   14000c724:	add    rsi,0x10
   14000c728:	mov    QWORD PTR [rbp+0x38],rsi
   14000c72c:	jmp    0x14000c751
   14000c72e:	call   0x14000b958
   14000c733:	mov    rsi,rax
   14000c736:	mov    QWORD PTR [rbp+0x28],rax
   14000c73a:	test   rax,rax
   14000c73d:	je     0x14000c751
   14000c73f:	mov    DWORD PTR [rax],0xdddd
   14000c745:	add    rsi,0x10
   14000c749:	mov    QWORD PTR [rbp+0x28],rsi
   14000c74d:	jmp    0x14000c751
   14000c74f:	xor    esi,esi
   14000c751:	mov    QWORD PTR [rbp+0x20],rsi
   14000c755:	jmp    0x14000c780
   14000c757:	call   0x14000ecc8
   14000c75c:	xor    esi,esi
   14000c75e:	mov    QWORD PTR [rbp+0x20],rsi
   14000c762:	mov    r13d,DWORD PTR [rbp+0xc8]
   14000c769:	mov    r14d,DWORD PTR [rbp+0xb0]
   14000c770:	mov    r15d,esi
   14000c773:	mov    rdi,QWORD PTR [rbp+0x18]
   14000c777:	mov    eax,esi
   14000c779:	mov    DWORD PTR [rbp+0x0],eax
   14000c77c:	mov    r12d,DWORD PTR [rbp+0xc]
   14000c780:	test   rsi,rsi
   14000c783:	jne    0x14000c7a7
   14000c785:	movsxd rcx,r12d
   14000c788:	add    rcx,rcx
   14000c78b:	call   0x14000b958
   14000c790:	mov    rsi,rax
   14000c793:	mov    QWORD PTR [rbp+0x20],rax
   14000c797:	test   rax,rax
   14000c79a:	je     0x14000c6c6
   14000c7a0:	mov    DWORD PTR [rbp+0x10],0x1
   14000c7a7:	mov    DWORD PTR [rsp+0x28],r12d
   14000c7ac:	mov    QWORD PTR [rsp+0x20],rsi
   14000c7b1:	mov    r9d,r14d
   14000c7b4:	mov    r8,QWORD PTR [rbp+0xa8]
   14000c7bb:	mov    edx,0x1
   14000c7c0:	mov    ecx,r13d
   14000c7c3:	call   QWORD PTR [rip+0x9d5f]        # 0x140016528
   14000c7c9:	test   eax,eax
   14000c7cb:	je     0x14000c989
   14000c7d1:	and    DWORD PTR [rsp+0x28],0x0
   14000c7d6:	and    QWORD PTR [rsp+0x20],0x0
   14000c7dc:	mov    r9d,r12d
   14000c7df:	mov    r8,rsi
   14000c7e2:	mov    r14d,DWORD PTR [rbp+0xa0]
   14000c7e9:	mov    edx,r14d
   14000c7ec:	mov    ecx,DWORD PTR [rbp+0x98]
   14000c7f2:	call   QWORD PTR [rip+0x9d20]        # 0x140016518
   14000c7f8:	movsxd r15,eax
   14000c7fb:	mov    DWORD PTR [rbp+0x4],r15d
   14000c7ff:	test   eax,eax
   14000c801:	je     0x14000c989
   14000c807:	bt     r14d,0xa
   14000c80c:	jae    0x14000c84f
   14000c80e:	mov    ecx,DWORD PTR [rbp+0xc0]
   14000c814:	test   ecx,ecx
   14000c816:	je     0x14000c989
   14000c81c:	cmp    r15d,ecx
   14000c81f:	jg     0x14000c989
   14000c825:	mov    DWORD PTR [rsp+0x28],ecx
   14000c829:	mov    rax,QWORD PTR [rbp+0xb8]
   14000c830:	mov    QWORD PTR [rsp+0x20],rax
   14000c835:	mov    r9d,r12d
   14000c838:	mov    r8,rsi
   14000c83b:	mov    edx,r14d
   14000c83e:	mov    ecx,DWORD PTR [rbp+0x98]
   14000c844:	call   QWORD PTR [rip+0x9cce]        # 0x140016518
   14000c84a:	jmp    0x14000c989
   14000c84f:	test   eax,eax
   14000c851:	jle    0x14000c8d1
   14000c853:	xor    edx,edx
   14000c855:	lea    rax,[rdx-0x20]
   14000c859:	div    r15
   14000c85c:	cmp    rax,0x2
   14000c860:	jb     0x14000c8d1
   14000c862:	lea    rcx,[r15*2+0x10]
   14000c86a:	cmp    rcx,0x400
   14000c871:	ja     0x14000c8b0
   14000c873:	lea    rax,[rcx+0xf]
   14000c877:	cmp    rax,rcx
   14000c87a:	ja     0x14000c886
   14000c87c:	movabs rax,0xffffffffffffff0
   14000c886:	and    rax,0xfffffffffffffff0
   14000c88a:	call   0x14000fa30
   14000c88f:	sub    rsp,rax
   14000c892:	lea    rdi,[rsp+0x40]
   14000c897:	mov    QWORD PTR [rbp+0x30],rdi
   14000c89b:	test   rdi,rdi
   14000c89e:	je     0x14000c8d3
   14000c8a0:	mov    DWORD PTR [rdi],0xcccc
   14000c8a6:	add    rdi,0x10
   14000c8aa:	mov    QWORD PTR [rbp+0x30],rdi
   14000c8ae:	jmp    0x14000c8d3
   14000c8b0:	call   0x14000b958
   14000c8b5:	mov    rdi,rax
   14000c8b8:	mov    QWORD PTR [rbp+0x40],rax
   14000c8bc:	test   rax,rax
   14000c8bf:	je     0x14000c8d3
   14000c8c1:	mov    DWORD PTR [rax],0xdddd
   14000c8c7:	add    rdi,0x10
   14000c8cb:	mov    QWORD PTR [rbp+0x40],rdi
   14000c8cf:	jmp    0x14000c8d3
   14000c8d1:	xor    edi,edi
   14000c8d3:	mov    QWORD PTR [rbp+0x18],rdi
   14000c8d7:	jmp    0x14000c903
   14000c8d9:	call   0x14000ecc8
   14000c8de:	xor    edi,edi
   14000c8e0:	mov    QWORD PTR [rbp+0x18],rdi
   14000c8e4:	mov    r13d,DWORD PTR [rbp+0xc8]
   14000c8eb:	mov    r15d,DWORD PTR [rbp+0x4]
   14000c8ef:	mov    rsi,QWORD PTR [rbp+0x20]
   14000c8f3:	mov    eax,edi
   14000c8f5:	mov    DWORD PTR [rbp+0x0],eax
   14000c8f8:	mov    r12d,DWORD PTR [rbp+0xc]
   14000c8fc:	mov    r14d,DWORD PTR [rbp+0xa0]
   14000c903:	test   rdi,rdi
   14000c906:	jne    0x14000c922
   14000c908:	movsxd rcx,r15d
   14000c90b:	add    rcx,rcx
   14000c90e:	call   0x14000b958
   14000c913:	mov    rdi,rax
   14000c916:	test   rax,rax
   14000c919:	je     0x14000c989
   14000c91b:	mov    DWORD PTR [rbp+0x0],0x1
   14000c922:	mov    DWORD PTR [rsp+0x28],r15d
   14000c927:	mov    QWORD PTR [rsp+0x20],rdi
   14000c92c:	mov    r9d,r12d
   14000c92f:	mov    r8,rsi
   14000c932:	mov    edx,r14d
   14000c935:	mov    ecx,DWORD PTR [rbp+0x98]
   14000c93b:	call   QWORD PTR [rip+0x9bd7]        # 0x140016518
   14000c941:	test   eax,eax
   14000c943:	je     0x14000c989
   14000c945:	mov    eax,DWORD PTR [rbp+0xc0]
   14000c94b:	and    QWORD PTR [rsp+0x38],0x0
   14000c951:	mov    r9d,r15d
   14000c954:	mov    r8,rdi
   14000c957:	xor    edx,edx
   14000c959:	mov    ecx,r13d
   14000c95c:	and    QWORD PTR [rsp+0x30],rdx
   14000c961:	test   eax,eax
   14000c963:	jne    0x14000c970
   14000c965:	and    DWORD PTR [rsp+0x28],edx
   14000c969:	and    QWORD PTR [rsp+0x20],rdx
   14000c96e:	jmp    0x14000c980
   14000c970:	mov    DWORD PTR [rsp+0x28],eax
   14000c974:	mov    rax,QWORD PTR [rbp+0xb8]
   14000c97b:	mov    QWORD PTR [rsp+0x20],rax
   14000c980:	call   QWORD PTR [rip+0x9b9a]        # 0x140016520
   14000c986:	mov    r15d,eax
   14000c989:	cmp    DWORD PTR [rbp+0x0],0x0
   14000c98d:	je     0x14000c994
   14000c98f:	mov    rcx,rdi
   14000c992:	jmp    0x14000c9a5
   14000c994:	test   rdi,rdi
   14000c997:	je     0x14000c9aa
   14000c999:	lea    rcx,[rdi-0x10]
   14000c99d:	cmp    DWORD PTR [rcx],0xdddd
   14000c9a3:	jne    0x14000c9aa
   14000c9a5:	call   0x14000b0d0
   14000c9aa:	cmp    DWORD PTR [rbp+0x10],0x0
   14000c9ae:	je     0x14000c9b5
   14000c9b0:	mov    rcx,rsi
   14000c9b3:	jmp    0x14000c9c6
   14000c9b5:	test   rsi,rsi
   14000c9b8:	je     0x14000c9cb
   14000c9ba:	lea    rcx,[rsi-0x10]
   14000c9be:	cmp    DWORD PTR [rcx],0xdddd
   14000c9c4:	jne    0x14000c9cb
   14000c9c6:	call   0x14000b0d0
   14000c9cb:	mov    eax,r15d
   14000c9ce:	mov    rcx,QWORD PTR [rbp+0x48]
   14000c9d2:	xor    rcx,rbp
   14000c9d5:	call   0x140006d40
   14000c9da:	lea    rsp,[rbp+0x50]
   14000c9de:	pop    r15
   14000c9e0:	pop    r14
   14000c9e2:	pop    r13
   14000c9e4:	pop    r12
   14000c9e6:	pop    rdi
   14000c9e7:	pop    rsi
   14000c9e8:	pop    rbp
   14000c9e9:	ret    
   14000c9ea:	int3   
   14000c9eb:	int3   
   14000c9ec:	int3   
   14000c9ed:	int3   
   14000c9ee:	int3   
   14000c9ef:	int3   
   14000c9f0:	mov    WORD PTR [rsp+0x8],cx
   14000c9f5:	push   rbx
   14000c9f6:	sub    rsp,0x60
   14000c9fa:	mov    eax,0xffff
   14000c9ff:	movzx  ebx,dx
   14000ca02:	cmp    cx,ax
   14000ca05:	jne    0x14000ca11
   14000ca07:	xor    ecx,ecx
   14000ca09:	movzx  eax,cx
   14000ca0c:	jmp    0x14000ca9c
   14000ca11:	mov    eax,0x100
   14000ca16:	cmp    cx,ax
   14000ca19:	jae    0x14000ca2e
   14000ca1b:	mov    rax,QWORD PTR [rip+0x5616]        # 0x140012038
   14000ca22:	movzx  ecx,cx
   14000ca25:	movzx  eax,WORD PTR [rax+rcx*2]
   14000ca29:	and    ax,bx
   14000ca2c:	jmp    0x14000ca9c
   14000ca2e:	lea    rcx,[rsp+0x40]
   14000ca33:	mov    rdx,r8
   14000ca36:	call   0x140006f24
   14000ca3b:	mov    r11,QWORD PTR [rsp+0x40]
   14000ca40:	mov    edx,0x1
   14000ca45:	mov    eax,DWORD PTR [r11+0x14]
   14000ca49:	lea    r8,[rsp+0x70]
   14000ca4e:	lea    rcx,[rsp+0x40]
   14000ca53:	mov    DWORD PTR [rsp+0x30],eax
   14000ca57:	mov    eax,DWORD PTR [r11+0x4]
   14000ca5b:	mov    r9d,edx
   14000ca5e:	mov    DWORD PTR [rsp+0x28],eax
   14000ca62:	lea    rax,[rsp+0x78]
   14000ca67:	mov    QWORD PTR [rsp+0x20],rax
   14000ca6c:	call   0x14000ee00
   14000ca71:	xor    ecx,ecx
   14000ca73:	test   eax,eax
   14000ca75:	jne    0x14000ca80
   14000ca77:	mov    eax,ecx
   14000ca79:	mov    WORD PTR [rsp+0x78],cx
   14000ca7e:	jmp    0x14000ca85
   14000ca80:	movzx  eax,WORD PTR [rsp+0x78]
   14000ca85:	cmp    BYTE PTR [rsp+0x58],cl
   14000ca89:	je     0x14000ca9c
   14000ca8b:	mov    rax,QWORD PTR [rsp+0x50]
   14000ca90:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000ca97:	movzx  eax,WORD PTR [rsp+0x78]
   14000ca9c:	movzx  eax,ax
   14000ca9f:	movzx  ecx,bx
   14000caa2:	and    eax,ecx
   14000caa4:	add    rsp,0x60
   14000caa8:	pop    rbx
   14000caa9:	ret    
   14000caaa:	int3   
   14000caab:	int3   
   14000caac:	int3   
   14000caad:	int3   
   14000caae:	int3   
   14000caaf:	int3   
   14000cab0:	mov    QWORD PTR [rsp+0x8],rbx
   14000cab5:	mov    QWORD PTR [rsp+0x10],rsi
   14000caba:	push   rdi
   14000cabb:	sub    rsp,0x50
   14000cabf:	mov    esi,edx
   14000cac1:	mov    rdx,rcx
   14000cac4:	lea    rcx,[rsp+0x30]
   14000cac9:	mov    rbx,r9
   14000cacc:	mov    edi,r8d
   14000cacf:	call   0x140006f24
   14000cad4:	movsxd rax,DWORD PTR [rsp+0x80]
   14000cadc:	test   eax,eax
   14000cade:	jle    0x14000caeb
   14000cae0:	mov    rdx,rax
   14000cae3:	mov    rcx,rbx
   14000cae6:	call   0x14000ee6c
   14000caeb:	mov    ecx,DWORD PTR [rsp+0x90]
   14000caf2:	mov    r9d,eax
   14000caf5:	mov    r8,rbx
   14000caf8:	mov    DWORD PTR [rsp+0x28],ecx
   14000cafc:	mov    rcx,QWORD PTR [rsp+0x88]
   14000cb04:	mov    edx,edi
   14000cb06:	mov    QWORD PTR [rsp+0x20],rcx
   14000cb0b:	mov    ecx,esi
   14000cb0d:	call   QWORD PTR [rip+0x9a05]        # 0x140016518
   14000cb13:	cmp    BYTE PTR [rsp+0x48],0x0
   14000cb18:	je     0x14000cb26
   14000cb1a:	mov    rcx,QWORD PTR [rsp+0x40]
   14000cb1f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000cb26:	mov    rbx,QWORD PTR [rsp+0x60]
   14000cb2b:	mov    rsi,QWORD PTR [rsp+0x68]
   14000cb30:	add    rsp,0x50
   14000cb34:	pop    rdi
   14000cb35:	ret    
   14000cb36:	int3   
   14000cb37:	int3   
   14000cb38:	int3   
   14000cb39:	int3   
   14000cb3a:	int3   
   14000cb3b:	int3   
   14000cb3c:	sub    rsp,0x38
   14000cb40:	test   rcx,rcx
   14000cb43:	jne    0x14000cb6a
   14000cb45:	call   0x140009658
   14000cb4a:	and    QWORD PTR [rsp+0x20],0x0
   14000cb50:	xor    r9d,r9d
   14000cb53:	xor    r8d,r8d
   14000cb56:	xor    edx,edx
   14000cb58:	xor    ecx,ecx
   14000cb5a:	mov    DWORD PTR [rax],0x16
   14000cb60:	call   0x14000974c
   14000cb65:	or     eax,0xffffffff
   14000cb68:	jmp    0x14000cb6d
   14000cb6a:	mov    eax,DWORD PTR [rcx+0x1c]
   14000cb6d:	add    rsp,0x38
   14000cb71:	ret    
   14000cb72:	int3   
   14000cb73:	int3   
   14000cb74:	int3   
   14000cb75:	int3   
   14000cb76:	int3   
   14000cb77:	int3   
   14000cb78:	sub    rsp,0x38
   14000cb7c:	cmp    ecx,0xfffffffe
   14000cb7f:	jne    0x14000cb8e
   14000cb81:	call   0x140009658
   14000cb86:	mov    DWORD PTR [rax],0x9
   14000cb8c:	jmp    0x14000cbe0
   14000cb8e:	test   ecx,ecx
   14000cb90:	js     0x14000cbc0
   14000cb92:	cmp    ecx,DWORD PTR [rip+0x7c68]        # 0x140014800
   14000cb98:	jae    0x14000cbc0
   14000cb9a:	movsxd rcx,ecx
   14000cb9d:	lea    rdx,[rip+0x7c7c]        # 0x140014820
   14000cba4:	mov    rax,rcx
   14000cba7:	and    ecx,0x1f
   14000cbaa:	sar    rax,0x5
   14000cbae:	imul   rcx,rcx,0x38
   14000cbb2:	mov    rax,QWORD PTR [rdx+rax*8]
   14000cbb6:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   14000cbbb:	and    eax,0x40
   14000cbbe:	jmp    0x14000cbe2
   14000cbc0:	call   0x140009658
   14000cbc5:	and    QWORD PTR [rsp+0x20],0x0
   14000cbcb:	xor    r9d,r9d
   14000cbce:	xor    r8d,r8d
   14000cbd1:	xor    edx,edx
   14000cbd3:	xor    ecx,ecx
   14000cbd5:	mov    DWORD PTR [rax],0x9
   14000cbdb:	call   0x14000974c
   14000cbe0:	xor    eax,eax
   14000cbe2:	add    rsp,0x38
   14000cbe6:	ret    
   14000cbe7:	int3   
   14000cbe8:	int3   
   14000cbe9:	int3   
   14000cbea:	int3   
   14000cbeb:	int3   
   14000cbec:	int3   
   14000cbed:	int3   
   14000cbee:	int3   
   14000cbef:	int3   
   14000cbf0:	mov    QWORD PTR [rsp+0x10],rbx
   14000cbf5:	mov    QWORD PTR [rsp+0x18],rsi
   14000cbfa:	mov    DWORD PTR [rsp+0x8],ecx
   14000cbfe:	push   rdi
   14000cbff:	push   r12
   14000cc01:	push   r13
   14000cc03:	push   r14
   14000cc05:	push   r15
   14000cc07:	sub    rsp,0x30
   14000cc0b:	mov    r15d,r8d
   14000cc0e:	mov    r12,rdx
   14000cc11:	movsxd rbx,ecx
   14000cc14:	cmp    ebx,0xfffffffe
   14000cc17:	jne    0x14000cc32
   14000cc19:	call   0x140009680
   14000cc1e:	xor    edi,edi
   14000cc20:	mov    DWORD PTR [rax],edi
   14000cc22:	call   0x140009658
   14000cc27:	mov    DWORD PTR [rax],0x9
   14000cc2d:	jmp    0x14000ccd2
   14000cc32:	xor    edi,edi
   14000cc34:	test   ecx,ecx
   14000cc36:	js     0x14000ccac
   14000cc38:	cmp    ebx,DWORD PTR [rip+0x7bc2]        # 0x140014800
   14000cc3e:	jae    0x14000ccac
   14000cc40:	mov    rsi,rbx
   14000cc43:	mov    r14,rbx
   14000cc46:	sar    r14,0x5
   14000cc4a:	lea    r13,[rip+0x7bcf]        # 0x140014820
   14000cc51:	and    esi,0x1f
   14000cc54:	imul   rsi,rsi,0x38
   14000cc58:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14000cc5d:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14000cc62:	and    ecx,0x1
   14000cc65:	je     0x14000ccac
   14000cc67:	mov    ecx,ebx
   14000cc69:	call   0x14000ef44
   14000cc6e:	nop
   14000cc6f:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14000cc74:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14000cc79:	je     0x14000cc8c
   14000cc7b:	mov    r8d,r15d
   14000cc7e:	mov    rdx,r12
   14000cc81:	mov    ecx,ebx
   14000cc83:	call   0x14000ccf4
   14000cc88:	mov    edi,eax
   14000cc8a:	jmp    0x14000cca1
   14000cc8c:	call   0x140009658
   14000cc91:	mov    DWORD PTR [rax],0x9
   14000cc97:	call   0x140009680
   14000cc9c:	mov    DWORD PTR [rax],edi
   14000cc9e:	or     edi,0xffffffff
   14000cca1:	mov    ecx,ebx
   14000cca3:	call   0x14000eff4
   14000cca8:	mov    eax,edi
   14000ccaa:	jmp    0x14000ccd5
   14000ccac:	call   0x140009680
   14000ccb1:	mov    DWORD PTR [rax],edi
   14000ccb3:	call   0x140009658
   14000ccb8:	mov    QWORD PTR [rsp+0x20],rdi
   14000ccbd:	mov    DWORD PTR [rax],0x9
   14000ccc3:	xor    r9d,r9d
   14000ccc6:	xor    r8d,r8d
   14000ccc9:	xor    edx,edx
   14000cccb:	xor    ecx,ecx
   14000cccd:	call   0x14000974c
   14000ccd2:	or     eax,0xffffffff
   14000ccd5:	mov    rbx,QWORD PTR [rsp+0x68]
   14000ccda:	mov    rsi,QWORD PTR [rsp+0x70]
   14000ccdf:	add    rsp,0x30
   14000cce3:	pop    r15
   14000cce5:	pop    r14
   14000cce7:	pop    r13
   14000cce9:	pop    r12
   14000cceb:	pop    rdi
   14000ccec:	ret    
   14000cced:	int3   
   14000ccee:	int3   
   14000ccef:	int3   
   14000ccf0:	int3   
   14000ccf1:	int3   
   14000ccf2:	int3   
   14000ccf3:	int3   
   14000ccf4:	mov    QWORD PTR [rsp+0x20],rbx
   14000ccf9:	push   rbp
   14000ccfa:	push   rsi
   14000ccfb:	push   rdi
   14000ccfc:	push   r12
   14000ccfe:	push   r13
   14000cd00:	push   r14
   14000cd02:	push   r15
   14000cd04:	lea    rbp,[rsp-0x1a30]
   14000cd0c:	mov    eax,0x1b30
   14000cd11:	call   0x14000fa30
   14000cd16:	sub    rsp,rax
   14000cd19:	mov    rax,QWORD PTR [rip+0x4450]        # 0x140011170
   14000cd20:	xor    rax,rsp
   14000cd23:	mov    QWORD PTR [rbp+0x1a20],rax
   14000cd2a:	xor    esi,esi
   14000cd2c:	mov    r15d,r8d
   14000cd2f:	mov    r12,rdx
   14000cd32:	movsxd rbx,ecx
   14000cd35:	mov    edi,esi
   14000cd37:	mov    DWORD PTR [rsp+0x44],esi
   14000cd3b:	test   r8d,r8d
   14000cd3e:	jne    0x14000cd47
   14000cd40:	xor    eax,eax
   14000cd42:	jmp    0x14000d402
   14000cd47:	test   rdx,rdx
   14000cd4a:	jne    0x14000cd7a
   14000cd4c:	call   0x140009680
   14000cd51:	mov    DWORD PTR [rax],esi
   14000cd53:	call   0x140009658
   14000cd58:	mov    QWORD PTR [rsp+0x20],rsi
   14000cd5d:	xor    r9d,r9d
   14000cd60:	xor    r8d,r8d
   14000cd63:	xor    edx,edx
   14000cd65:	xor    ecx,ecx
   14000cd67:	mov    DWORD PTR [rax],0x16
   14000cd6d:	call   0x14000974c
   14000cd72:	or     eax,0xffffffff
   14000cd75:	jmp    0x14000d402
   14000cd7a:	mov    r13,rbx
   14000cd7d:	mov    r14,rbx
   14000cd80:	lea    rax,[rip+0x7a99]        # 0x140014820
   14000cd87:	sar    r14,0x5
   14000cd8b:	and    r13d,0x1f
   14000cd8f:	mov    rcx,QWORD PTR [rax+r14*8]
   14000cd93:	mov    QWORD PTR [rsp+0x60],r14
   14000cd98:	imul   r13,r13,0x38
   14000cd9c:	mov    esi,DWORD PTR [r13+rcx*1+0xc]
   14000cda1:	mov    QWORD PTR [rsp+0x50],r13
   14000cda6:	and    esi,0x3
   14000cda9:	cmp    esi,0x2
   14000cdac:	je     0x14000cdb3
   14000cdae:	cmp    esi,0x1
   14000cdb1:	jne    0x14000cdcf
   14000cdb3:	mov    eax,r15d
   14000cdb6:	not    eax
   14000cdb8:	test   al,0x1
   14000cdba:	jne    0x14000cdcf
   14000cdbc:	call   0x140009680
   14000cdc1:	and    DWORD PTR [rax],edi
   14000cdc3:	call   0x140009658
   14000cdc8:	and    QWORD PTR [rsp+0x20],rdi
   14000cdcd:	jmp    0x14000cd5d
   14000cdcf:	test   BYTE PTR [r13+rcx*1+0x8],0x20
   14000cdd5:	je     0x14000cde4
   14000cdd7:	xor    edx,edx
   14000cdd9:	mov    ecx,ebx
   14000cddb:	lea    r8d,[rdx+0x2]
   14000cddf:	call   0x14000d53c
   14000cde4:	mov    ecx,ebx
   14000cde6:	call   0x14000cb78
   14000cdeb:	test   eax,eax
   14000cded:	je     0x14000d07f
   14000cdf3:	lea    rax,[rip+0x7a26]        # 0x140014820
   14000cdfa:	mov    rax,QWORD PTR [rax+r14*8]
   14000cdfe:	test   BYTE PTR [r13+rax*1+0x8],0x80
   14000ce04:	je     0x14000d07f
   14000ce0a:	call   0x14000755c
   14000ce0f:	xor    ebx,ebx
   14000ce11:	lea    rdx,[rsp+0x58]
   14000ce16:	mov    rcx,QWORD PTR [rax+0xc0]
   14000ce1d:	lea    rax,[rip+0x79fc]        # 0x140014820
   14000ce24:	cmp    DWORD PTR [rcx+0x14],ebx
   14000ce27:	mov    rcx,QWORD PTR [rax+r14*8]
   14000ce2b:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14000ce30:	sete   bl
   14000ce33:	call   QWORD PTR [rip+0x96cf]        # 0x140016508
   14000ce39:	test   eax,eax
   14000ce3b:	je     0x14000d07f
   14000ce41:	test   ebx,ebx
   14000ce43:	je     0x14000ce4d
   14000ce45:	test   esi,esi
   14000ce47:	je     0x14000d07f
   14000ce4d:	call   QWORD PTR [rip+0x96bd]        # 0x140016510
   14000ce53:	and    DWORD PTR [rsp+0x4c],edi
   14000ce57:	mov    rbx,r12
   14000ce5a:	mov    DWORD PTR [rsp+0x58],eax
   14000ce5e:	test   r15d,r15d
   14000ce61:	je     0x14000d076
   14000ce67:	mov    r13d,DWORD PTR [rsp+0x58]
   14000ce6c:	mov    r14d,0xd
   14000ce72:	test   esi,esi
   14000ce74:	jne    0x14000cff7
   14000ce7a:	movsx  ecx,BYTE PTR [rbx]
   14000ce7d:	xor    r13d,r13d
   14000ce80:	cmp    BYTE PTR [rbx],0xa
   14000ce83:	sete   r13b
   14000ce87:	call   0x14000d63c
   14000ce8c:	test   eax,eax
   14000ce8e:	jne    0x14000cedf
   14000ce90:	lea    r8d,[rsi+0x1]
   14000ce94:	lea    rcx,[rsp+0x40]
   14000ce99:	mov    rdx,rbx
   14000ce9c:	call   0x14000d940
   14000cea1:	cmp    eax,0xffffffff
   14000cea4:	jne    0x14000cf09
   14000cea6:	mov    ebx,DWORD PTR [rsp+0x4c]
   14000ceaa:	mov    r13,QWORD PTR [rsp+0x50]
   14000ceaf:	test   edi,edi
   14000ceb1:	jne    0x14000d3fc
   14000ceb7:	test   ebx,ebx
   14000ceb9:	je     0x14000d3c1
   14000cebf:	cmp    ebx,0x5
   14000cec2:	jne    0x14000d3b5
   14000cec8:	call   0x140009658
   14000cecd:	mov    DWORD PTR [rax],0x9
   14000ced3:	call   0x140009680
   14000ced8:	mov    DWORD PTR [rax],ebx
   14000ceda:	jmp    0x14000cd72
   14000cedf:	mov    rax,r15
   14000cee2:	sub    rax,rbx
   14000cee5:	add    rax,r12
   14000cee8:	cmp    rax,0x1
   14000ceec:	jle    0x14000cea6
   14000ceee:	lea    rcx,[rsp+0x40]
   14000cef3:	mov    r8d,0x2
   14000cef9:	mov    rdx,rbx
   14000cefc:	call   0x14000d940
   14000cf01:	cmp    eax,0xffffffff
   14000cf04:	je     0x14000cea6
   14000cf06:	inc    rbx
   14000cf09:	and    QWORD PTR [rsp+0x38],0x0
   14000cf0f:	and    QWORD PTR [rsp+0x30],0x0
   14000cf15:	mov    ecx,DWORD PTR [rsp+0x58]
   14000cf19:	lea    rax,[rsp+0x68]
   14000cf1e:	lea    r8,[rsp+0x40]
   14000cf23:	mov    r9d,0x1
   14000cf29:	xor    edx,edx
   14000cf2b:	mov    DWORD PTR [rsp+0x28],0x5
   14000cf33:	inc    rbx
   14000cf36:	mov    QWORD PTR [rsp+0x20],rax
   14000cf3b:	call   QWORD PTR [rip+0x95df]        # 0x140016520
   14000cf41:	mov    r14d,eax
   14000cf44:	test   eax,eax
   14000cf46:	je     0x14000cea6
   14000cf4c:	mov    rax,QWORD PTR [rsp+0x60]
   14000cf51:	and    QWORD PTR [rsp+0x20],0x0
   14000cf57:	lea    rcx,[rip+0x78c2]        # 0x140014820
   14000cf5e:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000cf62:	mov    rax,QWORD PTR [rsp+0x50]
   14000cf67:	lea    r9,[rsp+0x4c]
   14000cf6c:	mov    rcx,QWORD PTR [rax+rcx*1]
   14000cf70:	lea    rdx,[rsp+0x68]
   14000cf75:	mov    r8d,r14d
   14000cf78:	call   QWORD PTR [rip+0x963a]        # 0x1400165b8
   14000cf7e:	test   eax,eax
   14000cf80:	je     0x14000d069
   14000cf86:	add    edi,DWORD PTR [rsp+0x4c]
   14000cf8a:	cmp    DWORD PTR [rsp+0x4c],r14d
   14000cf8f:	jl     0x14000cea6
   14000cf95:	mov    r14d,0xd
   14000cf9b:	test   r13d,r13d
   14000cf9e:	je     0x14000d056
   14000cfa4:	mov    rax,QWORD PTR [rsp+0x60]
   14000cfa9:	and    QWORD PTR [rsp+0x20],0x0
   14000cfaf:	mov    BYTE PTR [rsp+0x68],r14b
   14000cfb4:	lea    rcx,[rip+0x7865]        # 0x140014820
   14000cfbb:	lea    r9,[rsp+0x4c]
   14000cfc0:	lea    r8d,[r14-0xc]
   14000cfc4:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000cfc8:	mov    rax,QWORD PTR [rsp+0x50]
   14000cfcd:	lea    rdx,[rsp+0x68]
   14000cfd2:	mov    rcx,QWORD PTR [rax+rcx*1]
   14000cfd6:	call   QWORD PTR [rip+0x95dc]        # 0x1400165b8
   14000cfdc:	test   eax,eax
   14000cfde:	je     0x14000d069
   14000cfe4:	cmp    DWORD PTR [rsp+0x4c],0x1
   14000cfe9:	jl     0x14000cea6
   14000cfef:	inc    DWORD PTR [rsp+0x44]
   14000cff3:	inc    edi
   14000cff5:	jmp    0x14000d056
   14000cff7:	cmp    esi,0x1
   14000cffa:	je     0x14000d001
   14000cffc:	cmp    esi,0x2
   14000cfff:	jne    0x14000d018
   14000d001:	movzx  eax,WORD PTR [rbx]
   14000d004:	xor    r13d,r13d
   14000d007:	cmp    ax,0xa
   14000d00b:	mov    WORD PTR [rsp+0x40],ax
   14000d010:	sete   r13b
   14000d014:	add    rbx,0x2
   14000d018:	cmp    esi,0x1
   14000d01b:	je     0x14000d022
   14000d01d:	cmp    esi,0x2
   14000d020:	jne    0x14000d056
   14000d022:	movzx  ecx,WORD PTR [rsp+0x40]
   14000d027:	call   0x14000f0b8
   14000d02c:	cmp    ax,WORD PTR [rsp+0x40]
   14000d031:	jne    0x14000d069
   14000d033:	add    edi,0x2
   14000d036:	test   r13d,r13d
   14000d039:	je     0x14000d056
   14000d03b:	mov    ecx,r14d
   14000d03e:	mov    WORD PTR [rsp+0x40],r14w
   14000d044:	call   0x14000f0b8
   14000d049:	cmp    ax,WORD PTR [rsp+0x40]
   14000d04e:	jne    0x14000d069
   14000d050:	inc    edi
   14000d052:	inc    DWORD PTR [rsp+0x44]
   14000d056:	mov    eax,ebx
   14000d058:	sub    eax,r12d
   14000d05b:	cmp    eax,r15d
   14000d05e:	jae    0x14000cea6
   14000d064:	jmp    0x14000ce72
   14000d069:	call   QWORD PTR [rip+0x93e9]        # 0x140016458
   14000d06f:	mov    ebx,eax
   14000d071:	jmp    0x14000ceaa
   14000d076:	mov    ebx,DWORD PTR [rsp+0x4c]
   14000d07a:	jmp    0x14000ceb7
   14000d07f:	lea    rax,[rip+0x779a]        # 0x140014820
   14000d086:	mov    rcx,QWORD PTR [rax+r14*8]
   14000d08a:	test   BYTE PTR [r13+rcx*1+0x8],0x80
   14000d090:	je     0x14000d387
   14000d096:	xor    ebx,ebx
   14000d098:	test   esi,esi
   14000d09a:	jne    0x14000d16e
   14000d0a0:	mov    r14,r12
   14000d0a3:	test   r15d,r15d
   14000d0a6:	je     0x14000d3c1
   14000d0ac:	lea    edx,[rbx+0xd]
   14000d0af:	mov    r13d,DWORD PTR [rsp+0x44]
   14000d0b4:	lea    rsi,[rbp+0x620]
   14000d0bb:	xor    ecx,ecx
   14000d0bd:	mov    eax,r14d
   14000d0c0:	sub    eax,r12d
   14000d0c3:	cmp    eax,r15d
   14000d0c6:	jae    0x14000d0ee
   14000d0c8:	mov    al,BYTE PTR [r14]
   14000d0cb:	inc    r14
   14000d0ce:	cmp    al,0xa
   14000d0d0:	jne    0x14000d0dd
   14000d0d2:	mov    BYTE PTR [rsi],dl
   14000d0d4:	inc    r13d
   14000d0d7:	inc    rsi
   14000d0da:	inc    rcx
   14000d0dd:	inc    rcx
   14000d0e0:	mov    BYTE PTR [rsi],al
   14000d0e2:	inc    rsi
   14000d0e5:	cmp    rcx,0x13ff
   14000d0ec:	jb     0x14000d0bd
   14000d0ee:	and    QWORD PTR [rsp+0x20],rbx
   14000d0f3:	lea    rax,[rbp+0x620]
   14000d0fa:	mov    r8d,esi
   14000d0fd:	sub    r8d,eax
   14000d100:	mov    rax,QWORD PTR [rsp+0x60]
   14000d105:	lea    rcx,[rip+0x7714]        # 0x140014820
   14000d10c:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000d110:	mov    DWORD PTR [rsp+0x44],r13d
   14000d115:	mov    r13,QWORD PTR [rsp+0x50]
   14000d11a:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14000d11f:	lea    r9,[rsp+0x48]
   14000d124:	lea    rdx,[rbp+0x620]
   14000d12b:	call   QWORD PTR [rip+0x9487]        # 0x1400165b8
   14000d131:	test   eax,eax
   14000d133:	je     0x14000d253
   14000d139:	add    edi,DWORD PTR [rsp+0x48]
   14000d13d:	lea    rax,[rbp+0x620]
   14000d144:	sub    rsi,rax
   14000d147:	movsxd rax,DWORD PTR [rsp+0x48]
   14000d14c:	cmp    rax,rsi
   14000d14f:	jl     0x14000ceaf
   14000d155:	mov    eax,r14d
   14000d158:	mov    edx,0xd
   14000d15d:	sub    eax,r12d
   14000d160:	cmp    eax,r15d
   14000d163:	jb     0x14000d0af
   14000d169:	jmp    0x14000ceaf
   14000d16e:	cmp    esi,0x2
   14000d171:	jne    0x14000d260
   14000d177:	mov    r14,r12
   14000d17a:	test   r15d,r15d
   14000d17d:	je     0x14000d3c1
   14000d183:	lea    edx,[rsi+0xb]
   14000d186:	lea    rsi,[rbp+0x620]
   14000d18d:	xor    ecx,ecx
   14000d18f:	mov    eax,r14d
   14000d192:	sub    eax,r12d
   14000d195:	cmp    eax,r15d
   14000d198:	jae    0x14000d1db
   14000d19a:	movzx  eax,WORD PTR [r14]
   14000d19e:	add    r14,0x2
   14000d1a2:	cmp    ax,0xa
   14000d1a6:	jne    0x14000d1c1
   14000d1a8:	cmp    rcx,0x13fc
   14000d1af:	ja     0x14000d1d7
   14000d1b1:	add    DWORD PTR [rsp+0x44],0x2
   14000d1b6:	mov    WORD PTR [rsi],dx
   14000d1b9:	add    rsi,0x2
   14000d1bd:	add    rcx,0x2
   14000d1c1:	add    rcx,0x2
   14000d1c5:	mov    WORD PTR [rsi],ax
   14000d1c8:	add    rsi,0x2
   14000d1cc:	cmp    rcx,0x13fe
   14000d1d3:	jae    0x14000d1db
   14000d1d5:	jmp    0x14000d18f
   14000d1d7:	sub    r14,0x2
   14000d1db:	and    QWORD PTR [rsp+0x20],rbx
   14000d1e0:	lea    rax,[rbp+0x620]
   14000d1e7:	mov    r8d,esi
   14000d1ea:	sub    r8d,eax
   14000d1ed:	mov    rax,QWORD PTR [rsp+0x60]
   14000d1f2:	lea    rcx,[rip+0x7627]        # 0x140014820
   14000d1f9:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000d1fd:	lea    r9,[rsp+0x48]
   14000d202:	lea    rdx,[rbp+0x620]
   14000d209:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14000d20e:	call   QWORD PTR [rip+0x93a4]        # 0x1400165b8
   14000d214:	test   eax,eax
   14000d216:	je     0x14000d253
   14000d218:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000d21d:	lea    rax,[rbp+0x620]
   14000d224:	sub    rsi,rax
   14000d227:	add    edi,ecx
   14000d229:	cmp    rcx,rsi
   14000d22c:	jl     0x14000ceaf
   14000d232:	test   ecx,ecx
   14000d234:	je     0x14000ceaf
   14000d23a:	mov    eax,r14d
   14000d23d:	mov    edx,0xd
   14000d242:	sub    eax,r12d
   14000d245:	cmp    eax,r15d
   14000d248:	jb     0x14000d186
   14000d24e:	jmp    0x14000ceaf
   14000d253:	call   QWORD PTR [rip+0x91ff]        # 0x140016458
   14000d259:	mov    ebx,eax
   14000d25b:	jmp    0x14000ceaf
   14000d260:	mov    rsi,r12
   14000d263:	test   r15d,r15d
   14000d266:	je     0x14000d3c1
   14000d26c:	mov    r8d,0xd
   14000d272:	lea    rcx,[rsp+0x70]
   14000d277:	xor    edx,edx
   14000d279:	mov    eax,esi
   14000d27b:	sub    eax,r12d
   14000d27e:	cmp    eax,r15d
   14000d281:	jae    0x14000d2bf
   14000d283:	movzx  eax,WORD PTR [rsi]
   14000d286:	add    rsi,0x2
   14000d28a:	cmp    ax,0xa
   14000d28e:	jne    0x14000d2a5
   14000d290:	cmp    rdx,0x6a6
   14000d297:	ja     0x14000d2bb
   14000d299:	mov    WORD PTR [rcx],r8w
   14000d29d:	add    rcx,0x2
   14000d2a1:	add    rdx,0x2
   14000d2a5:	add    rdx,0x2
   14000d2a9:	mov    WORD PTR [rcx],ax
   14000d2ac:	add    rcx,0x2
   14000d2b0:	cmp    rdx,0x6a8
   14000d2b7:	jae    0x14000d2bf
   14000d2b9:	jmp    0x14000d279
   14000d2bb:	sub    rsi,0x2
   14000d2bf:	and    QWORD PTR [rsp+0x38],0x0
   14000d2c5:	and    QWORD PTR [rsp+0x30],0x0
   14000d2cb:	lea    rax,[rsp+0x70]
   14000d2d0:	sub    ecx,eax
   14000d2d2:	lea    r8,[rsp+0x70]
   14000d2d7:	mov    DWORD PTR [rsp+0x28],0xd55
   14000d2df:	mov    eax,ecx
   14000d2e1:	mov    ecx,0xfde9
   14000d2e6:	cdq    
   14000d2e7:	sub    eax,edx
   14000d2e9:	xor    edx,edx
   14000d2eb:	sar    eax,1
   14000d2ed:	mov    r9d,eax
   14000d2f0:	lea    rax,[rbp+0x620]
   14000d2f7:	mov    QWORD PTR [rsp+0x20],rax
   14000d2fc:	call   QWORD PTR [rip+0x921e]        # 0x140016520
   14000d302:	mov    r13d,eax
   14000d305:	test   eax,eax
   14000d307:	je     0x14000d069
   14000d30d:	xor    r14d,r14d
   14000d310:	mov    rax,QWORD PTR [rsp+0x60]
   14000d315:	and    QWORD PTR [rsp+0x20],0x0
   14000d31b:	movsxd rcx,r14d
   14000d31e:	mov    r8d,r13d
   14000d321:	lea    rdx,[rbp+0x620]
   14000d328:	lea    r9,[rsp+0x48]
   14000d32d:	add    rdx,rcx
   14000d330:	lea    rcx,[rip+0x74e9]        # 0x140014820
   14000d337:	sub    r8d,r14d
   14000d33a:	mov    rcx,QWORD PTR [rcx+rax*8]
   14000d33e:	mov    rax,QWORD PTR [rsp+0x50]
   14000d343:	mov    rcx,QWORD PTR [rax+rcx*1]
   14000d347:	call   QWORD PTR [rip+0x926b]        # 0x1400165b8
   14000d34d:	test   eax,eax
   14000d34f:	je     0x14000d35d
   14000d351:	add    r14d,DWORD PTR [rsp+0x48]
   14000d356:	cmp    r13d,r14d
   14000d359:	jg     0x14000d310
   14000d35b:	jmp    0x14000d365
   14000d35d:	call   QWORD PTR [rip+0x90f5]        # 0x140016458
   14000d363:	mov    ebx,eax
   14000d365:	cmp    r13d,r14d
   14000d368:	jg     0x14000ceaa
   14000d36e:	mov    edi,esi
   14000d370:	mov    r8d,0xd
   14000d376:	sub    edi,r12d
   14000d379:	cmp    edi,r15d
   14000d37c:	jb     0x14000d272
   14000d382:	jmp    0x14000ceaa
   14000d387:	mov    rcx,QWORD PTR [r13+rcx*1+0x0]
   14000d38c:	and    QWORD PTR [rsp+0x20],rdi
   14000d391:	lea    r9,[rsp+0x48]
   14000d396:	mov    r8d,r15d
   14000d399:	mov    rdx,r12
   14000d39c:	call   QWORD PTR [rip+0x9216]        # 0x1400165b8
   14000d3a2:	test   eax,eax
   14000d3a4:	je     0x14000d253
   14000d3aa:	mov    edi,DWORD PTR [rsp+0x48]
   14000d3ae:	xor    ebx,ebx
   14000d3b0:	jmp    0x14000ceaf
   14000d3b5:	mov    ecx,ebx
   14000d3b7:	call   0x1400096a8
   14000d3bc:	jmp    0x14000cd72
   14000d3c1:	mov    rax,QWORD PTR [rsp+0x60]
   14000d3c6:	lea    rcx,[rip+0x7453]        # 0x140014820
   14000d3cd:	mov    rax,QWORD PTR [rcx+rax*8]
   14000d3d1:	test   BYTE PTR [r13+rax*1+0x8],0x40
   14000d3d7:	je     0x14000d3e4
   14000d3d9:	cmp    BYTE PTR [r12],0x1a
   14000d3de:	je     0x14000cd40
   14000d3e4:	call   0x140009658
   14000d3e9:	mov    DWORD PTR [rax],0x1c
   14000d3ef:	call   0x140009680
   14000d3f4:	and    DWORD PTR [rax],0x0
   14000d3f7:	jmp    0x14000cd72
   14000d3fc:	sub    edi,DWORD PTR [rsp+0x44]
   14000d400:	mov    eax,edi
   14000d402:	mov    rcx,QWORD PTR [rbp+0x1a20]
   14000d409:	xor    rcx,rsp
   14000d40c:	call   0x140006d40
   14000d411:	mov    rbx,QWORD PTR [rsp+0x1b88]
   14000d419:	add    rsp,0x1b30
   14000d420:	pop    r15
   14000d422:	pop    r14
   14000d424:	pop    r13
   14000d426:	pop    r12
   14000d428:	pop    rdi
   14000d429:	pop    rsi
   14000d42a:	pop    rbp
   14000d42b:	ret    
   14000d42c:	int3   
   14000d42d:	int3   
   14000d42e:	int3   
   14000d42f:	int3   
   14000d430:	int3   
   14000d431:	int3   
   14000d432:	int3   
   14000d433:	int3   
   14000d434:	mov    QWORD PTR [rsp+0x10],rbx
   14000d439:	mov    QWORD PTR [rsp+0x18],rsi
   14000d43e:	mov    DWORD PTR [rsp+0x8],ecx
   14000d442:	push   rdi
   14000d443:	push   r12
   14000d445:	push   r13
   14000d447:	push   r14
   14000d449:	push   r15
   14000d44b:	sub    rsp,0x30
   14000d44f:	mov    r15d,r8d
   14000d452:	mov    r12,rdx
   14000d455:	movsxd rbx,ecx
   14000d458:	cmp    ebx,0xfffffffe
   14000d45b:	jne    0x14000d476
   14000d45d:	call   0x140009680
   14000d462:	xor    edi,edi
   14000d464:	mov    DWORD PTR [rax],edi
   14000d466:	call   0x140009658
   14000d46b:	mov    DWORD PTR [rax],0x9
   14000d471:	jmp    0x14000d519
   14000d476:	xor    edi,edi
   14000d478:	test   ecx,ecx
   14000d47a:	js     0x14000d4f3
   14000d47c:	cmp    ebx,DWORD PTR [rip+0x737e]        # 0x140014800
   14000d482:	jae    0x14000d4f3
   14000d484:	mov    rsi,rbx
   14000d487:	mov    r14,rbx
   14000d48a:	sar    r14,0x5
   14000d48e:	lea    r13,[rip+0x738b]        # 0x140014820
   14000d495:	and    esi,0x1f
   14000d498:	imul   rsi,rsi,0x38
   14000d49c:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14000d4a1:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14000d4a6:	and    ecx,0x1
   14000d4a9:	je     0x14000d4f3
   14000d4ab:	mov    ecx,ebx
   14000d4ad:	call   0x14000ef44
   14000d4b2:	nop
   14000d4b3:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14000d4b8:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14000d4bd:	je     0x14000d4d1
   14000d4bf:	mov    r8d,r15d
   14000d4c2:	mov    rdx,r12
   14000d4c5:	mov    ecx,ebx
   14000d4c7:	call   0x14000d53c
   14000d4cc:	mov    rdi,rax
   14000d4cf:	jmp    0x14000d4e7
   14000d4d1:	call   0x140009658
   14000d4d6:	mov    DWORD PTR [rax],0x9
   14000d4dc:	call   0x140009680
   14000d4e1:	mov    DWORD PTR [rax],edi
   14000d4e3:	or     rdi,0xffffffffffffffff
   14000d4e7:	mov    ecx,ebx
   14000d4e9:	call   0x14000eff4
   14000d4ee:	mov    rax,rdi
   14000d4f1:	jmp    0x14000d51d
   14000d4f3:	call   0x140009680
   14000d4f8:	mov    DWORD PTR [rax],edi
   14000d4fa:	call   0x140009658
   14000d4ff:	mov    QWORD PTR [rsp+0x20],rdi
   14000d504:	mov    DWORD PTR [rax],0x9
   14000d50a:	xor    r9d,r9d
   14000d50d:	xor    r8d,r8d
   14000d510:	xor    edx,edx
   14000d512:	xor    ecx,ecx
   14000d514:	call   0x14000974c
   14000d519:	or     rax,0xffffffffffffffff
   14000d51d:	mov    rbx,QWORD PTR [rsp+0x68]
   14000d522:	mov    rsi,QWORD PTR [rsp+0x70]
   14000d527:	add    rsp,0x30
   14000d52b:	pop    r15
   14000d52d:	pop    r14
   14000d52f:	pop    r13
   14000d531:	pop    r12
   14000d533:	pop    rdi
   14000d534:	ret    
   14000d535:	int3   
   14000d536:	int3   
   14000d537:	int3   
   14000d538:	int3   
   14000d539:	int3   
   14000d53a:	int3   
   14000d53b:	int3   
   14000d53c:	mov    QWORD PTR [rsp+0x8],rbx
   14000d541:	push   rdi
   14000d542:	sub    rsp,0x20
   14000d546:	movsxd rbx,ecx
   14000d549:	mov    edi,r8d
   14000d54c:	mov    QWORD PTR [rsp+0x38],rdx
   14000d551:	mov    ecx,ebx
   14000d553:	call   0x14000f024
   14000d558:	cmp    rax,0xffffffffffffffff
   14000d55c:	jne    0x14000d56f
   14000d55e:	call   0x140009658
   14000d563:	mov    DWORD PTR [rax],0x9
   14000d569:	or     rax,0xffffffffffffffff
   14000d56d:	jmp    0x14000d5c6
   14000d56f:	mov    edx,DWORD PTR [rsp+0x38]
   14000d573:	lea    r8,[rsp+0x3c]
   14000d578:	mov    r9d,edi
   14000d57b:	mov    rcx,rax
   14000d57e:	call   QWORD PTR [rip+0x8f7c]        # 0x140016500
   14000d584:	mov    DWORD PTR [rsp+0x38],eax
   14000d588:	cmp    eax,0xffffffff
   14000d58b:	jne    0x14000d5a0
   14000d58d:	call   QWORD PTR [rip+0x8ec5]        # 0x140016458
   14000d593:	test   eax,eax
   14000d595:	je     0x14000d5a0
   14000d597:	mov    ecx,eax
   14000d599:	call   0x1400096a8
   14000d59e:	jmp    0x14000d569
   14000d5a0:	mov    rcx,rbx
   14000d5a3:	mov    rax,rbx
   14000d5a6:	lea    rdx,[rip+0x7273]        # 0x140014820
   14000d5ad:	sar    rax,0x5
   14000d5b1:	and    ecx,0x1f
   14000d5b4:	mov    rax,QWORD PTR [rdx+rax*8]
   14000d5b8:	imul   rcx,rcx,0x38
   14000d5bc:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   14000d5c1:	mov    rax,QWORD PTR [rsp+0x38]
   14000d5c6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5cb:	add    rsp,0x20
   14000d5cf:	pop    rdi
   14000d5d0:	ret    
   14000d5d1:	int3   
   14000d5d2:	int3   
   14000d5d3:	int3   
   14000d5d4:	int3   
   14000d5d5:	int3   
   14000d5d6:	int3   
   14000d5d7:	int3   
   14000d5d8:	rex push rbx
   14000d5da:	sub    rsp,0x20
   14000d5de:	mov    rbx,rcx
   14000d5e1:	mov    ecx,0x1
   14000d5e6:	mov    edx,0x1000
   14000d5eb:	add    DWORD PTR [rip+0x5a47],ecx        # 0x140013038
   14000d5f1:	call   0x14000b910
   14000d5f6:	mov    QWORD PTR [rbx+0x10],rax
   14000d5fa:	test   rax,rax
   14000d5fd:	je     0x14000d60c
   14000d5ff:	or     DWORD PTR [rbx+0x18],0x8
   14000d603:	mov    DWORD PTR [rbx+0x24],0x1000
   14000d60a:	jmp    0x14000d622
   14000d60c:	or     DWORD PTR [rbx+0x18],0x4
   14000d610:	lea    rax,[rbx+0x20]
   14000d614:	mov    DWORD PTR [rbx+0x24],0x2
   14000d61b:	and    DWORD PTR [rax],0x0
   14000d61e:	mov    QWORD PTR [rbx+0x10],rax
   14000d622:	mov    rax,QWORD PTR [rbx+0x10]
   14000d626:	and    DWORD PTR [rbx+0x8],0x0
   14000d62a:	mov    QWORD PTR [rbx],rax
   14000d62d:	add    rsp,0x20
   14000d631:	pop    rbx
   14000d632:	ret    
   14000d633:	int3   
   14000d634:	int3   
   14000d635:	int3   
   14000d636:	int3   
   14000d637:	int3   
   14000d638:	int3   
   14000d639:	int3   
   14000d63a:	int3   
   14000d63b:	int3   
   14000d63c:	rex push rbx
   14000d63e:	sub    rsp,0x40
   14000d642:	mov    ebx,ecx
   14000d644:	lea    rcx,[rsp+0x20]
   14000d649:	xor    edx,edx
   14000d64b:	call   0x140006f24
   14000d650:	mov    rax,QWORD PTR [rsp+0x20]
   14000d655:	movzx  r11d,bl
   14000d659:	mov    rcx,QWORD PTR [rax+0x140]
   14000d660:	movzx  eax,WORD PTR [rcx+r11*2]
   14000d665:	and    eax,0x8000
   14000d66a:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d66f:	je     0x14000d67d
   14000d671:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d676:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d67d:	add    rsp,0x40
   14000d681:	pop    rbx
   14000d682:	ret    
   14000d683:	int3   
   14000d684:	int3   
   14000d685:	int3   
   14000d686:	int3   
   14000d687:	int3   
   14000d688:	int3   
   14000d689:	int3   
   14000d68a:	int3   
   14000d68b:	int3   
   14000d68c:	rex push rbx
   14000d68e:	sub    rsp,0x40
   14000d692:	mov    ebx,ecx
   14000d694:	lea    rcx,[rsp+0x20]
   14000d699:	call   0x140006f24
   14000d69e:	mov    rax,QWORD PTR [rsp+0x20]
   14000d6a3:	movzx  r11d,bl
   14000d6a7:	mov    rcx,QWORD PTR [rax+0x140]
   14000d6ae:	movzx  eax,WORD PTR [rcx+r11*2]
   14000d6b3:	and    eax,0x8000
   14000d6b8:	cmp    BYTE PTR [rsp+0x38],0x0
   14000d6bd:	je     0x14000d6cb
   14000d6bf:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d6c4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000d6cb:	add    rsp,0x40
   14000d6cf:	pop    rbx
   14000d6d0:	ret    
   14000d6d1:	int3   
   14000d6d2:	int3   
   14000d6d3:	int3   
   14000d6d4:	int3   
   14000d6d5:	int3   
   14000d6d6:	int3   
   14000d6d7:	int3   
   14000d6d8:	sub    rsp,0x38
   14000d6dc:	test   rcx,rcx
   14000d6df:	jne    0x14000d705
   14000d6e1:	call   0x140009658
   14000d6e6:	and    QWORD PTR [rsp+0x20],0x0
   14000d6ec:	xor    r9d,r9d
   14000d6ef:	xor    r8d,r8d
   14000d6f2:	xor    edx,edx
   14000d6f4:	xor    ecx,ecx
   14000d6f6:	mov    DWORD PTR [rax],0x16
   14000d6fc:	call   0x14000974c
   14000d701:	xor    eax,eax
   14000d703:	jmp    0x14000d70b
   14000d705:	mov    eax,DWORD PTR [rcx+0x18]
   14000d708:	and    eax,0x20
   14000d70b:	add    rsp,0x38
   14000d70f:	ret    
   14000d710:	int3   
   14000d711:	int3   
   14000d712:	int3   
   14000d713:	int3   
   14000d714:	int3   
   14000d715:	int3   
   14000d716:	int3   
   14000d717:	int3   
   14000d718:	mov    rcx,QWORD PTR [rip+0x3a51]        # 0x140011170
   14000d71f:	xor    eax,eax
   14000d721:	or     rcx,0x1
   14000d725:	cmp    QWORD PTR [rip+0x5bc4],rcx        # 0x1400132f0
   14000d72c:	sete   al
   14000d72f:	ret    
   14000d730:	int3   
   14000d731:	int3   
   14000d732:	int3   
   14000d733:	int3   
   14000d734:	int3   
   14000d735:	int3   
   14000d736:	int3   
   14000d737:	int3   
   14000d738:	mov    QWORD PTR [rsp+0x18],rbx
   14000d73d:	mov    QWORD PTR [rsp+0x20],rbp
   14000d742:	push   rsi
   14000d743:	push   rdi
   14000d744:	push   r14
   14000d746:	sub    rsp,0x40
   14000d74a:	mov    rax,QWORD PTR [rip+0x3a1f]        # 0x140011170
   14000d751:	xor    rax,rsp
   14000d754:	mov    QWORD PTR [rsp+0x30],rax
   14000d759:	test   BYTE PTR [rdx+0x18],0x40
   14000d75d:	mov    rdi,rdx
   14000d760:	movzx  esi,cx
   14000d763:	jne    0x14000d8ee
   14000d769:	mov    rcx,rdx
   14000d76c:	call   0x14000cb3c
   14000d771:	lea    rbp,[rip+0x39c0]        # 0x140011138
   14000d778:	lea    r14,[rip+0x70a1]        # 0x140014820
   14000d77f:	cmp    eax,0xffffffff
   14000d782:	je     0x14000d7b9
   14000d784:	mov    rcx,rdi
   14000d787:	call   0x14000cb3c
   14000d78c:	cmp    eax,0xfffffffe
   14000d78f:	je     0x14000d7b9
   14000d791:	mov    rcx,rdi
   14000d794:	call   0x14000cb3c
   14000d799:	mov    rcx,rdi
   14000d79c:	movsxd rbx,eax
   14000d79f:	sar    rbx,0x5
   14000d7a3:	call   0x14000cb3c
   14000d7a8:	mov    r11d,eax
   14000d7ab:	and    r11d,0x1f
   14000d7af:	imul   r11,r11,0x38
   14000d7b3:	add    r11,QWORD PTR [r14+rbx*8]
   14000d7b7:	jmp    0x14000d7bc
   14000d7b9:	mov    r11,rbp
   14000d7bc:	mov    eax,DWORD PTR [r11+0xc]
   14000d7c0:	and    al,0x3
   14000d7c2:	cmp    al,0x2
   14000d7c4:	je     0x14000d8d7
   14000d7ca:	mov    rcx,rdi
   14000d7cd:	call   0x14000cb3c
   14000d7d2:	cmp    eax,0xffffffff
   14000d7d5:	je     0x14000d80c
   14000d7d7:	mov    rcx,rdi
   14000d7da:	call   0x14000cb3c
   14000d7df:	cmp    eax,0xfffffffe
   14000d7e2:	je     0x14000d80c
   14000d7e4:	mov    rcx,rdi
   14000d7e7:	call   0x14000cb3c
   14000d7ec:	mov    rcx,rdi
   14000d7ef:	movsxd rbx,eax
   14000d7f2:	sar    rbx,0x5
   14000d7f6:	call   0x14000cb3c
   14000d7fb:	mov    r11d,eax
   14000d7fe:	and    r11d,0x1f
   14000d802:	imul   r11,r11,0x38
   14000d806:	add    r11,QWORD PTR [r14+rbx*8]
   14000d80a:	jmp    0x14000d80f
   14000d80c:	mov    r11,rbp
   14000d80f:	mov    eax,DWORD PTR [r11+0xc]
   14000d813:	and    al,0x3
   14000d815:	cmp    al,0x1
   14000d817:	je     0x14000d8d7
   14000d81d:	mov    rcx,rdi
   14000d820:	call   0x14000cb3c
   14000d825:	cmp    eax,0xffffffff
   14000d828:	je     0x14000d85b
   14000d82a:	mov    rcx,rdi
   14000d82d:	call   0x14000cb3c
   14000d832:	cmp    eax,0xfffffffe
   14000d835:	je     0x14000d85b
   14000d837:	mov    rcx,rdi
   14000d83a:	call   0x14000cb3c
   14000d83f:	mov    rcx,rdi
   14000d842:	movsxd rbx,eax
   14000d845:	sar    rbx,0x5
   14000d849:	call   0x14000cb3c
   14000d84e:	mov    ebp,eax
   14000d850:	and    ebp,0x1f
   14000d853:	imul   rbp,rbp,0x38
   14000d857:	add    rbp,QWORD PTR [r14+rbx*8]
   14000d85b:	test   BYTE PTR [rbp+0x8],0x80
   14000d85f:	je     0x14000d8ee
   14000d865:	lea    rdx,[rsp+0x24]
   14000d86a:	lea    rcx,[rsp+0x20]
   14000d86f:	movzx  r9d,si
   14000d873:	mov    r8d,0x5
   14000d879:	call   0x14000f118
   14000d87e:	xor    ebx,ebx
   14000d880:	test   eax,eax
   14000d882:	je     0x14000d88e
   14000d884:	mov    eax,0xffff
   14000d889:	jmp    0x14000d917
   14000d88e:	cmp    DWORD PTR [rsp+0x20],ebx
   14000d892:	jle    0x14000d8d2
   14000d894:	lea    r14,[rsp+0x24]
   14000d899:	dec    DWORD PTR [rdi+0x8]
   14000d89c:	js     0x14000d8b4
   14000d89e:	mov    rcx,QWORD PTR [rdi]
   14000d8a1:	mov    al,BYTE PTR [r14]
   14000d8a4:	mov    BYTE PTR [rcx],al
   14000d8a6:	mov    rax,QWORD PTR [rdi]
   14000d8a9:	movzx  ecx,BYTE PTR [rax]
   14000d8ac:	inc    rax
   14000d8af:	mov    QWORD PTR [rdi],rax
   14000d8b2:	jmp    0x14000d8c2
   14000d8b4:	movsx  ecx,BYTE PTR [r14]
   14000d8b8:	mov    rdx,rdi
   14000d8bb:	call   0x140009838
   14000d8c0:	mov    ecx,eax
   14000d8c2:	cmp    ecx,0xffffffff
   14000d8c5:	je     0x14000d884
   14000d8c7:	inc    ebx
   14000d8c9:	inc    r14
   14000d8cc:	cmp    ebx,DWORD PTR [rsp+0x20]
   14000d8d0:	jl     0x14000d899
   14000d8d2:	movzx  eax,si
   14000d8d5:	jmp    0x14000d917
   14000d8d7:	movsxd rcx,DWORD PTR [rdi+0x8]
   14000d8db:	add    rcx,0xfffffffffffffffe
   14000d8df:	mov    DWORD PTR [rdi+0x8],ecx
   14000d8e2:	test   ecx,ecx
   14000d8e4:	js     0x14000d90c
   14000d8e6:	mov    rcx,QWORD PTR [rdi]
   14000d8e9:	mov    WORD PTR [rcx],si
   14000d8ec:	jmp    0x14000d903
   14000d8ee:	movsxd rax,DWORD PTR [rdi+0x8]
   14000d8f2:	add    rax,0xfffffffffffffffe
   14000d8f6:	mov    DWORD PTR [rdi+0x8],eax
   14000d8f9:	test   eax,eax
   14000d8fb:	js     0x14000d90c
   14000d8fd:	mov    rax,QWORD PTR [rdi]
   14000d900:	mov    WORD PTR [rax],si
   14000d903:	add    QWORD PTR [rdi],0x2
   14000d907:	movzx  eax,si
   14000d90a:	jmp    0x14000d917
   14000d90c:	mov    rdx,rdi
   14000d90f:	movzx  ecx,si
   14000d912:	call   0x14000f338
   14000d917:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d91c:	xor    rcx,rsp
   14000d91f:	call   0x140006d40
   14000d924:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d929:	mov    rbp,QWORD PTR [rsp+0x78]
   14000d92e:	add    rsp,0x40
   14000d932:	pop    r14
   14000d934:	pop    rdi
   14000d935:	pop    rsi
   14000d936:	ret    
   14000d937:	int3   
   14000d938:	int3   
   14000d939:	int3   
   14000d93a:	int3   
   14000d93b:	int3   
   14000d93c:	int3   
   14000d93d:	int3   
   14000d93e:	int3   
   14000d93f:	int3   
   14000d940:	xor    r9d,r9d
   14000d943:	jmp    0x14000d950
   14000d948:	int3   
   14000d949:	int3   
   14000d94a:	int3   
   14000d94b:	int3   
   14000d94c:	int3   
   14000d94d:	int3   
   14000d94e:	int3   
   14000d94f:	int3   
   14000d950:	mov    rax,rsp
   14000d953:	mov    QWORD PTR [rax+0x8],rbx
   14000d957:	mov    QWORD PTR [rax+0x10],rsi
   14000d95b:	mov    QWORD PTR [rax+0x18],rdi
   14000d95f:	mov    QWORD PTR [rax+0x20],r14
   14000d963:	push   rbp
   14000d964:	mov    rbp,rsp
   14000d967:	sub    rsp,0x50
   14000d96b:	xor    r14d,r14d
   14000d96e:	mov    rsi,r8
   14000d971:	mov    rdi,rdx
   14000d974:	mov    rbx,rcx
   14000d977:	test   rdx,rdx
   14000d97a:	je     0x14000d98f
   14000d97c:	test   r8,r8
   14000d97f:	je     0x14000d98f
   14000d981:	cmp    BYTE PTR [rdx],r14b
   14000d984:	jne    0x14000d9ab
   14000d986:	test   rcx,rcx
   14000d989:	je     0x14000d98f
   14000d98b:	mov    WORD PTR [rcx],r14w
   14000d98f:	xor    eax,eax
   14000d991:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d996:	mov    rsi,QWORD PTR [rsp+0x68]
   14000d99b:	mov    rdi,QWORD PTR [rsp+0x70]
   14000d9a0:	mov    r14,QWORD PTR [rsp+0x78]
   14000d9a5:	add    rsp,0x50
   14000d9a9:	pop    rbp
   14000d9aa:	ret    
   14000d9ab:	lea    rcx,[rbp-0x20]
   14000d9af:	mov    rdx,r9
   14000d9b2:	call   0x140006f24
   14000d9b7:	mov    r11,QWORD PTR [rbp-0x20]
   14000d9bb:	cmp    DWORD PTR [r11+0x14],r14d
   14000d9bf:	jne    0x14000d9e4
   14000d9c1:	test   rbx,rbx
   14000d9c4:	je     0x14000d9cc
   14000d9c6:	movzx  eax,BYTE PTR [rdi]
   14000d9c9:	mov    WORD PTR [rbx],ax
   14000d9cc:	cmp    BYTE PTR [rbp-0x8],r14b
   14000d9d0:	je     0x14000d9dd
   14000d9d2:	mov    rax,QWORD PTR [rbp-0x10]
   14000d9d6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000d9dd:	mov    eax,0x1
   14000d9e2:	jmp    0x14000d991
   14000d9e4:	movzx  ecx,BYTE PTR [rdi]
   14000d9e7:	lea    rdx,[rbp-0x20]
   14000d9eb:	call   0x14000d68c
   14000d9f0:	test   eax,eax
   14000d9f2:	je     0x14000da8f
   14000d9f8:	mov    rcx,QWORD PTR [rbp-0x20]
   14000d9fc:	mov    r9d,DWORD PTR [rcx+0x10c]
   14000da03:	cmp    r9d,0x1
   14000da07:	jle    0x14000da39
   14000da09:	cmp    esi,r9d
   14000da0c:	jl     0x14000da39
   14000da0e:	mov    ecx,DWORD PTR [rcx+0x4]
   14000da11:	mov    eax,r14d
   14000da14:	test   rbx,rbx
   14000da17:	setne  al
   14000da1a:	mov    r8,rdi
   14000da1d:	mov    edx,0x9
   14000da22:	mov    DWORD PTR [rsp+0x28],eax
   14000da26:	mov    QWORD PTR [rsp+0x20],rbx
   14000da2b:	call   QWORD PTR [rip+0x8af7]        # 0x140016528
   14000da31:	mov    rcx,QWORD PTR [rbp-0x20]
   14000da35:	test   eax,eax
   14000da37:	jne    0x14000da4b
   14000da39:	movsxd rax,DWORD PTR [rcx+0x10c]
   14000da40:	cmp    rsi,rax
   14000da43:	jb     0x14000da6b
   14000da45:	cmp    BYTE PTR [rdi+0x1],r14b
   14000da49:	je     0x14000da6b
   14000da4b:	mov    eax,DWORD PTR [rcx+0x10c]
   14000da51:	cmp    BYTE PTR [rbp-0x8],r14b
   14000da55:	je     0x14000d991
   14000da5b:	mov    rcx,QWORD PTR [rbp-0x10]
   14000da5f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000da66:	jmp    0x14000d991
   14000da6b:	call   0x140009658
   14000da70:	mov    DWORD PTR [rax],0x2a
   14000da76:	cmp    BYTE PTR [rbp-0x8],r14b
   14000da7a:	je     0x14000da87
   14000da7c:	mov    rax,QWORD PTR [rbp-0x10]
   14000da80:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000da87:	or     eax,0xffffffff
   14000da8a:	jmp    0x14000d991
   14000da8f:	mov    eax,r14d
   14000da92:	mov    r9d,0x1
   14000da98:	test   rbx,rbx
   14000da9b:	setne  al
   14000da9e:	lea    edx,[r9+0x8]
   14000daa2:	mov    r8,rdi
   14000daa5:	mov    DWORD PTR [rsp+0x28],eax
   14000daa9:	mov    rax,QWORD PTR [rbp-0x20]
   14000daad:	mov    QWORD PTR [rsp+0x20],rbx
   14000dab2:	mov    ecx,DWORD PTR [rax+0x4]
   14000dab5:	call   QWORD PTR [rip+0x8a6d]        # 0x140016528
   14000dabb:	test   eax,eax
   14000dabd:	jne    0x14000d9cc
   14000dac3:	jmp    0x14000da6b
   14000dac5:	int3   
   14000dac6:	int3   
   14000dac7:	int3   
   14000dac8:	int3   
   14000dac9:	int3   
   14000daca:	int3   
   14000dacb:	int3   
   14000dacc:	mov    QWORD PTR [rsp+0x18],rbx
   14000dad1:	push   rbp
   14000dad2:	push   rsi
   14000dad3:	push   rdi
   14000dad4:	push   r12
   14000dad6:	push   r13
   14000dad8:	push   r14
   14000dada:	push   r15
   14000dadc:	lea    rbp,[rsp-0x1d0]
   14000dae4:	sub    rsp,0x2d0
   14000daeb:	mov    rax,QWORD PTR [rip+0x367e]        # 0x140011170
   14000daf2:	xor    rax,rsp
   14000daf5:	mov    QWORD PTR [rbp+0x1c8],rax
   14000dafc:	xor    eax,eax
   14000dafe:	mov    rbx,rcx
   14000db01:	mov    QWORD PTR [rsp+0x78],rcx
   14000db06:	mov    QWORD PTR [rsp+0x68],rdx
   14000db0b:	lea    rcx,[rbp-0x80]
   14000db0f:	mov    rdx,r8
   14000db12:	mov    r13,r9
   14000db15:	mov    DWORD PTR [rsp+0x64],eax
   14000db19:	mov    r15d,eax
   14000db1c:	mov    DWORD PTR [rsp+0x58],eax
   14000db20:	mov    edi,eax
   14000db22:	mov    DWORD PTR [rsp+0x40],eax
   14000db26:	mov    DWORD PTR [rsp+0x4c],eax
   14000db2a:	mov    DWORD PTR [rsp+0x70],eax
   14000db2e:	mov    DWORD PTR [rsp+0x5c],eax
   14000db32:	mov    DWORD PTR [rsp+0x54],eax
   14000db36:	call   0x140006f24
   14000db3b:	xor    r10d,r10d
   14000db3e:	test   rbx,rbx
   14000db41:	jne    0x14000db7a
   14000db43:	call   0x140009658
   14000db48:	xor    r9d,r9d
   14000db4b:	xor    r8d,r8d
   14000db4e:	xor    edx,edx
   14000db50:	xor    ecx,ecx
   14000db52:	mov    QWORD PTR [rsp+0x20],rbx
   14000db57:	mov    DWORD PTR [rax],0x16
   14000db5d:	call   0x14000974c
   14000db62:	cmp    BYTE PTR [rbp-0x68],bl
   14000db65:	je     0x14000db72
   14000db67:	mov    rax,QWORD PTR [rbp-0x70]
   14000db6b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000db72:	or     eax,0xffffffff
   14000db75:	jmp    0x14000e35e
   14000db7a:	or     r12,0xffffffffffffffff
   14000db7e:	test   BYTE PTR [rbx+0x18],0x40
   14000db82:	lea    r9,[rip+0xffffffffffff2477]        # 0x140000000
   14000db89:	jne    0x14000dc41
   14000db8f:	mov    rcx,rbx
   14000db92:	call   0x14000cb3c
   14000db97:	lea    rdx,[rip+0x359a]        # 0x140011138
   14000db9e:	cmp    eax,r12d
   14000dba1:	je     0x14000dbcb
   14000dba3:	cmp    eax,0xfffffffe
   14000dba6:	je     0x14000dbcb
   14000dba8:	movsxd r8,eax
   14000dbab:	lea    r9,[rip+0xffffffffffff244e]        # 0x140000000
   14000dbb2:	mov    rcx,r8
   14000dbb5:	and    r8d,0x1f
   14000dbb9:	sar    rcx,0x5
   14000dbbd:	imul   r8,r8,0x38
   14000dbc1:	add    r8,QWORD PTR [r9+rcx*8+0x14820]
   14000dbc9:	jmp    0x14000dbd5
   14000dbcb:	mov    r8,rdx
   14000dbce:	lea    r9,[rip+0xffffffffffff242b]        # 0x140000000
   14000dbd5:	test   BYTE PTR [r8+0xc],0x3
   14000dbda:	jne    0x14000dc05
   14000dbdc:	cmp    eax,r12d
   14000dbdf:	je     0x14000dbff
   14000dbe1:	cmp    eax,0xfffffffe
   14000dbe4:	je     0x14000dbff
   14000dbe6:	movsxd rdx,eax
   14000dbe9:	mov    rax,rdx
   14000dbec:	and    edx,0x1f
   14000dbef:	sar    rax,0x5
   14000dbf3:	imul   rdx,rdx,0x38
   14000dbf7:	add    rdx,QWORD PTR [r9+rax*8+0x14820]
   14000dbff:	test   BYTE PTR [rdx+0xc],0x8
   14000dc03:	je     0x14000dc3e
   14000dc05:	call   0x140009658
   14000dc0a:	xor    ebx,ebx
   14000dc0c:	xor    r9d,r9d
   14000dc0f:	xor    r8d,r8d
   14000dc12:	xor    edx,edx
   14000dc14:	xor    ecx,ecx
   14000dc16:	mov    DWORD PTR [rax],0x16
   14000dc1c:	mov    QWORD PTR [rsp+0x20],rbx
   14000dc21:	call   0x14000974c
   14000dc26:	cmp    BYTE PTR [rbp-0x68],bl
   14000dc29:	je     0x14000dc36
   14000dc2b:	mov    rax,QWORD PTR [rbp-0x70]
   14000dc2f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000dc36:	mov    eax,r12d
   14000dc39:	jmp    0x14000e35e
   14000dc3e:	xor    r10d,r10d
   14000dc41:	mov    r8,QWORD PTR [rsp+0x68]
   14000dc46:	test   r8,r8
   14000dc49:	je     0x14000dc05
   14000dc4b:	mov    r14b,BYTE PTR [r8]
   14000dc4e:	mov    esi,r10d
   14000dc51:	mov    DWORD PTR [rsp+0x44],r10d
   14000dc56:	mov    DWORD PTR [rsp+0x48],r10d
   14000dc5b:	mov    edx,r10d
   14000dc5e:	mov    QWORD PTR [rbp-0x60],r10
   14000dc62:	test   r14b,r14b
   14000dc65:	je     0x14000e34b
   14000dc6b:	mov    rbx,QWORD PTR [rbp-0x50]
   14000dc6f:	mov    r11d,0x200
   14000dc75:	inc    r8
   14000dc78:	mov    QWORD PTR [rsp+0x68],r8
   14000dc7d:	test   esi,esi
   14000dc7f:	js     0x14000e34b
   14000dc85:	lea    eax,[r14-0x20]
   14000dc89:	cmp    al,0x58
   14000dc8b:	ja     0x14000dc9f
   14000dc8d:	movsx  rax,r14b
   14000dc91:	movsx  ecx,BYTE PTR [rax+r9*1+0x25d0]
   14000dc9a:	and    ecx,0xf
   14000dc9d:	jmp    0x14000dca2
   14000dc9f:	mov    ecx,r10d
   14000dca2:	movsxd rax,edx
   14000dca5:	movsxd rcx,ecx
   14000dca8:	lea    rdx,[rax+rcx*8]
   14000dcac:	movsx  edx,BYTE PTR [rdx+r9*1+0x25f0]
   14000dcb5:	sar    edx,0x4
   14000dcb8:	mov    DWORD PTR [rsp+0x60],edx
   14000dcbc:	mov    ecx,edx
   14000dcbe:	test   edx,edx
   14000dcc0:	je     0x14000e435
   14000dcc6:	dec    ecx
   14000dcc8:	je     0x14000e568
   14000dcce:	dec    ecx
   14000dcd0:	je     0x14000e518
   14000dcd6:	dec    ecx
   14000dcd8:	je     0x14000e4dc
   14000dcde:	dec    ecx
   14000dce0:	je     0x14000e4cf
   14000dce6:	dec    ecx
   14000dce8:	je     0x14000e492
   14000dcee:	dec    ecx
   14000dcf0:	je     0x14000e388
   14000dcf6:	dec    ecx
   14000dcf8:	jne    0x14000e33f
   14000dcfe:	movsx  eax,r14b
   14000dd02:	cmp    eax,0x64
   14000dd05:	jg     0x14000deb1
   14000dd0b:	je     0x14000dfb3
   14000dd11:	cmp    eax,0x41
   14000dd14:	je     0x14000de85
   14000dd1a:	cmp    eax,0x43
   14000dd1d:	je     0x14000de2b
   14000dd23:	cmp    eax,0x45
   14000dd26:	je     0x14000de85
   14000dd2c:	cmp    eax,0x47
   14000dd2f:	je     0x14000de85
   14000dd35:	cmp    eax,0x53
   14000dd38:	je     0x14000dde0
   14000dd3e:	cmp    eax,0x58
   14000dd41:	je     0x14000df4c
   14000dd47:	cmp    eax,0x5a
   14000dd4a:	je     0x14000dd63
   14000dd4c:	cmp    eax,0x61
   14000dd4f:	je     0x14000de91
   14000dd55:	cmp    eax,0x63
   14000dd58:	je     0x14000de39
   14000dd5e:	jmp    0x14000e1c2
   14000dd63:	mov    rcx,QWORD PTR [r13+0x0]
   14000dd67:	add    r13,0x8
   14000dd6b:	test   rcx,rcx
   14000dd6e:	je     0x14000ddc8
   14000dd70:	mov    rbx,QWORD PTR [rcx+0x8]
   14000dd74:	test   rbx,rbx
   14000dd77:	je     0x14000ddc8
   14000dd79:	movzx  eax,WORD PTR [rcx]
   14000dd7c:	cmp    WORD PTR [rcx+0x2],ax
   14000dd80:	jb     0x14000dc05
   14000dd86:	bt     r15d,0xb
   14000dd8b:	jae    0x14000ddbb
   14000dd8d:	movzx  edx,ax
   14000dd90:	mov    eax,edx
   14000dd92:	not    eax
   14000dd94:	test   al,0x1
   14000dd96:	je     0x14000dc05
   14000dd9c:	mov    eax,ebx
   14000dd9e:	not    eax
   14000dda0:	test   al,0x1
   14000dda2:	je     0x14000dc05
   14000dda8:	shr    edx,1
   14000ddaa:	mov    DWORD PTR [rsp+0x54],0x1
   14000ddb2:	mov    DWORD PTR [rsp+0x48],edx
   14000ddb6:	jmp    0x14000e1c2
   14000ddbb:	mov    DWORD PTR [rsp+0x54],r10d
   14000ddc0:	movzx  eax,ax
   14000ddc3:	jmp    0x14000e1be
   14000ddc8:	mov    rbx,QWORD PTR [rip+0x3bf9]        # 0x1400119c8
   14000ddcf:	mov    rax,r12
   14000ddd2:	inc    rax
   14000ddd5:	cmp    BYTE PTR [rbx+rax*1],r10b
   14000ddd9:	jne    0x14000ddd2
   14000dddb:	jmp    0x14000e1be
   14000dde0:	test   r15d,0x830
   14000dde7:	jne    0x14000ddee
   14000dde9:	bts    r15d,0xb
   14000ddee:	mov    rbx,QWORD PTR [r13+0x0]
   14000ddf2:	cmp    edi,r12d
   14000ddf5:	mov    eax,edi
   14000ddf7:	mov    ecx,0x7fffffff
   14000ddfc:	cmove  eax,ecx
   14000ddff:	add    r13,0x8
   14000de03:	test   r15d,0x810
   14000de0a:	je     0x14000df19
   14000de10:	test   rbx,rbx
   14000de13:	mov    DWORD PTR [rsp+0x54],0x1
   14000de1b:	cmove  rbx,QWORD PTR [rip+0x3bad]        # 0x1400119d0
   14000de23:	mov    rcx,rbx
   14000de26:	jmp    0x14000df0d
   14000de2b:	test   r15d,0x830
   14000de32:	jne    0x14000de39
   14000de34:	bts    r15d,0xb
   14000de39:	add    r13,0x8
   14000de3d:	test   r15d,0x810
   14000de44:	je     0x14000de6d
   14000de46:	movzx  r9d,WORD PTR [r13-0x8]
   14000de4b:	lea    rdx,[rbp-0x40]
   14000de4f:	lea    rcx,[rsp+0x48]
   14000de54:	mov    r8,r11
   14000de57:	call   0x14000f118
   14000de5c:	xor    r10d,r10d
   14000de5f:	test   eax,eax
   14000de61:	je     0x14000de7c
   14000de63:	mov    DWORD PTR [rsp+0x5c],0x1
   14000de6b:	jmp    0x14000de7c
   14000de6d:	mov    al,BYTE PTR [r13-0x8]
   14000de71:	mov    DWORD PTR [rsp+0x48],0x1
   14000de79:	mov    BYTE PTR [rbp-0x40],al
   14000de7c:	lea    rbx,[rbp-0x40]
   14000de80:	jmp    0x14000e1c2
   14000de85:	mov    DWORD PTR [rsp+0x70],0x1
   14000de8d:	add    r14b,0x20
   14000de91:	or     r15d,0x40
   14000de95:	lea    rbx,[rbp-0x40]
   14000de99:	mov    esi,r11d
   14000de9c:	test   edi,edi
   14000de9e:	jns    0x14000e0c9
   14000dea4:	mov    DWORD PTR [rsp+0x40],0x6
   14000deac:	jmp    0x14000e114
   14000deb1:	cmp    eax,0x65
   14000deb4:	jl     0x14000e1c2
   14000deba:	cmp    eax,0x67
   14000debd:	jle    0x14000de91
   14000debf:	cmp    eax,0x69
   14000dec2:	je     0x14000dfb3
   14000dec8:	cmp    eax,0x6e
   14000decb:	je     0x14000df81
   14000ded1:	cmp    eax,0x6f
   14000ded4:	je     0x14000df71
   14000deda:	cmp    eax,0x70
   14000dedd:	je     0x14000df42
   14000dedf:	cmp    eax,0x73
   14000dee2:	je     0x14000ddee
   14000dee8:	cmp    eax,0x75
   14000deeb:	je     0x14000dfb7
   14000def1:	cmp    eax,0x78
   14000def4:	jne    0x14000e1c2
   14000defa:	mov    eax,0x27
   14000deff:	jmp    0x14000df51
   14000df01:	dec    eax
   14000df03:	cmp    WORD PTR [rcx],r10w
   14000df07:	je     0x14000df11
   14000df09:	add    rcx,0x2
   14000df0d:	test   eax,eax
   14000df0f:	jne    0x14000df01
   14000df11:	sub    rcx,rbx
   14000df14:	sar    rcx,1
   14000df17:	jmp    0x14000df39
   14000df19:	test   rbx,rbx
   14000df1c:	cmove  rbx,QWORD PTR [rip+0x3aa4]        # 0x1400119c8
   14000df24:	mov    rcx,rbx
   14000df27:	jmp    0x14000df33
   14000df29:	dec    eax
   14000df2b:	cmp    BYTE PTR [rcx],r10b
   14000df2e:	je     0x14000df37
   14000df30:	inc    rcx
   14000df33:	test   eax,eax
   14000df35:	jne    0x14000df29
   14000df37:	sub    ecx,ebx
   14000df39:	mov    DWORD PTR [rsp+0x48],ecx
   14000df3d:	jmp    0x14000e1c2
   14000df42:	mov    edi,0x10
   14000df47:	bts    r15d,0xf
   14000df4c:	mov    eax,0x7
   14000df51:	mov    DWORD PTR [rsp+0x64],eax
   14000df55:	mov    r9d,0x10
   14000df5b:	test   r15b,r15b
   14000df5e:	jns    0x14000dfbd
   14000df60:	add    al,0x51
   14000df62:	mov    BYTE PTR [rsp+0x50],0x30
   14000df67:	lea    edx,[r9-0xe]
   14000df6b:	mov    BYTE PTR [rsp+0x51],al
   14000df6f:	jmp    0x14000dfc1
   14000df71:	mov    r9d,0x8
   14000df77:	test   r15b,r15b
   14000df7a:	jns    0x14000dfbd
   14000df7c:	or     r15d,r11d
   14000df7f:	jmp    0x14000dfbd
   14000df81:	mov    rdi,QWORD PTR [r13+0x0]
   14000df85:	add    r13,0x8
   14000df89:	call   0x14000d718
   14000df8e:	xor    r10d,r10d
   14000df91:	test   eax,eax
   14000df93:	je     0x14000dc05
   14000df99:	test   r15b,0x20
   14000df9d:	je     0x14000dfa4
   14000df9f:	mov    WORD PTR [rdi],si
   14000dfa2:	jmp    0x14000dfa6
   14000dfa4:	mov    DWORD PTR [rdi],esi
   14000dfa6:	mov    DWORD PTR [rsp+0x5c],0x1
   14000dfae:	jmp    0x14000e309
   14000dfb3:	or     r15d,0x40
   14000dfb7:	mov    r9d,0xa
   14000dfbd:	mov    edx,DWORD PTR [rsp+0x4c]
   14000dfc1:	mov    eax,0x8000
   14000dfc6:	test   eax,r15d
   14000dfc9:	jne    0x14000dfd2
   14000dfcb:	bt     r15d,0xc
   14000dfd0:	jae    0x14000dfdc
   14000dfd2:	mov    r8,QWORD PTR [r13+0x0]
   14000dfd6:	add    r13,0x8
   14000dfda:	jmp    0x14000e00a
   14000dfdc:	add    r13,0x8
   14000dfe0:	test   r15b,0x20
   14000dfe4:	je     0x14000dffa
   14000dfe6:	test   r15b,0x40
   14000dfea:	je     0x14000dff3
   14000dfec:	movsx  r8,WORD PTR [r13-0x8]
   14000dff1:	jmp    0x14000e00a
   14000dff3:	movzx  r8d,WORD PTR [r13-0x8]
   14000dff8:	jmp    0x14000e00a
   14000dffa:	test   r15b,0x40
   14000dffe:	je     0x14000e006
   14000e000:	movsxd r8,DWORD PTR [r13-0x8]
   14000e004:	jmp    0x14000e00a
   14000e006:	mov    r8d,DWORD PTR [r13-0x8]
   14000e00a:	test   r15b,0x40
   14000e00e:	je     0x14000e01d
   14000e010:	test   r8,r8
   14000e013:	jns    0x14000e01d
   14000e015:	neg    r8
   14000e018:	bts    r15d,0x8
   14000e01d:	test   eax,r15d
   14000e020:	jne    0x14000e02c
   14000e022:	bt     r15d,0xc
   14000e027:	jb     0x14000e02c
   14000e029:	mov    r8d,r8d
   14000e02c:	test   edi,edi
   14000e02e:	jns    0x14000e037
   14000e030:	mov    edi,0x1
   14000e035:	jmp    0x14000e042
   14000e037:	and    r15d,0xfffffff7
   14000e03b:	cmp    edi,r11d
   14000e03e:	cmovg  edi,r11d
   14000e042:	mov    r12d,DWORD PTR [rsp+0x64]
   14000e047:	mov    rax,r8
   14000e04a:	lea    rbx,[rbp+0x1bf]
   14000e051:	neg    rax
   14000e054:	sbb    ecx,ecx
   14000e056:	and    ecx,edx
   14000e058:	mov    DWORD PTR [rsp+0x4c],ecx
   14000e05c:	mov    ecx,edi
   14000e05e:	dec    edi
   14000e060:	test   ecx,ecx
   14000e062:	jg     0x14000e069
   14000e064:	test   r8,r8
   14000e067:	je     0x14000e089
   14000e069:	xor    edx,edx
   14000e06b:	mov    rax,r8
   14000e06e:	movsxd rcx,r9d
   14000e071:	div    rcx
   14000e074:	mov    r8,rax
   14000e077:	lea    eax,[rdx+0x30]
   14000e07a:	cmp    eax,0x39
   14000e07d:	jle    0x14000e082
   14000e07f:	add    eax,r12d
   14000e082:	mov    BYTE PTR [rbx],al
   14000e084:	dec    rbx
   14000e087:	jmp    0x14000e05c
   14000e089:	lea    rax,[rbp+0x1bf]
   14000e090:	mov    DWORD PTR [rsp+0x40],edi
   14000e094:	mov    r12,0xffffffffffffffff
   14000e09b:	sub    eax,ebx
   14000e09d:	inc    rbx
   14000e0a0:	mov    DWORD PTR [rsp+0x48],eax
   14000e0a4:	test   r11d,r15d
   14000e0a7:	je     0x14000e1c2
   14000e0ad:	test   eax,eax
   14000e0af:	je     0x14000e0ba
   14000e0b1:	cmp    BYTE PTR [rbx],0x30
   14000e0b4:	je     0x14000e1c2
   14000e0ba:	dec    rbx
   14000e0bd:	inc    DWORD PTR [rsp+0x48]
   14000e0c1:	mov    BYTE PTR [rbx],0x30
   14000e0c4:	jmp    0x14000e1c2
   14000e0c9:	jne    0x14000e0db
   14000e0cb:	cmp    r14b,0x67
   14000e0cf:	jne    0x14000e114
   14000e0d1:	mov    DWORD PTR [rsp+0x40],0x1
   14000e0d9:	jmp    0x14000e114
   14000e0db:	cmp    edi,r11d
   14000e0de:	cmovg  edi,r11d
   14000e0e2:	mov    DWORD PTR [rsp+0x40],edi
   14000e0e6:	cmp    edi,0xa3
   14000e0ec:	jle    0x14000e114
   14000e0ee:	add    edi,0x15d
   14000e0f4:	movsxd rcx,edi
   14000e0f7:	call   0x14000b958
   14000e0fc:	mov    QWORD PTR [rbp-0x60],rax
   14000e100:	test   rax,rax
   14000e103:	je     0x14000e10c
   14000e105:	mov    rbx,rax
   14000e108:	mov    esi,edi
   14000e10a:	jmp    0x14000e114
   14000e10c:	mov    DWORD PTR [rsp+0x40],0xa3
   14000e114:	mov    rax,QWORD PTR [r13+0x0]
   14000e118:	mov    rcx,QWORD PTR [rip+0x3ef1]        # 0x140012010
   14000e11f:	add    r13,0x8
   14000e123:	movsx  edi,r14b
   14000e127:	movsxd rsi,esi
   14000e12a:	mov    QWORD PTR [rbp-0x50],rax
   14000e12e:	call   0x14000754c
   14000e133:	lea    rcx,[rbp-0x80]
   14000e137:	mov    r9d,edi
   14000e13a:	mov    QWORD PTR [rsp+0x30],rcx
   14000e13f:	mov    ecx,DWORD PTR [rsp+0x70]
   14000e143:	mov    r8,rsi
   14000e146:	mov    DWORD PTR [rsp+0x28],ecx
   14000e14a:	mov    ecx,DWORD PTR [rsp+0x40]
   14000e14e:	mov    rdx,rbx
   14000e151:	mov    DWORD PTR [rsp+0x20],ecx
   14000e155:	lea    rcx,[rbp-0x50]
   14000e159:	call   rax
   14000e15b:	mov    edi,r15d
   14000e15e:	and    edi,0x80
   14000e164:	je     0x14000e183
   14000e166:	xor    eax,eax
   14000e168:	cmp    DWORD PTR [rsp+0x40],eax
   14000e16c:	jne    0x14000e183
   14000e16e:	mov    rcx,QWORD PTR [rip+0x3eb3]        # 0x140012028
   14000e175:	call   0x14000754c
   14000e17a:	lea    rdx,[rbp-0x80]
   14000e17e:	mov    rcx,rbx
   14000e181:	call   rax
   14000e183:	cmp    r14b,0x67
   14000e187:	jne    0x14000e1a2
   14000e189:	test   edi,edi
   14000e18b:	jne    0x14000e1a2
   14000e18d:	mov    rcx,QWORD PTR [rip+0x3e8c]        # 0x140012020
   14000e194:	call   0x14000754c
   14000e199:	lea    rdx,[rbp-0x80]
   14000e19d:	mov    rcx,rbx
   14000e1a0:	call   rax
   14000e1a2:	cmp    BYTE PTR [rbx],0x2d
   14000e1a5:	jne    0x14000e1af
   14000e1a7:	bts    r15d,0x8
   14000e1ac:	inc    rbx
   14000e1af:	mov    rax,r12
   14000e1b2:	xor    r10d,r10d
   14000e1b5:	inc    rax
   14000e1b8:	cmp    BYTE PTR [rbx+rax*1],r10b
   14000e1bc:	jne    0x14000e1b5
   14000e1be:	mov    DWORD PTR [rsp+0x48],eax
   14000e1c2:	cmp    DWORD PTR [rsp+0x5c],r10d
   14000e1c7:	jne    0x14000e309
   14000e1cd:	test   r15b,0x40
   14000e1d1:	je     0x14000e204
   14000e1d3:	bt     r15d,0x8
   14000e1d8:	jae    0x14000e1e1
   14000e1da:	mov    BYTE PTR [rsp+0x50],0x2d
   14000e1df:	jmp    0x14000e1ec
   14000e1e1:	test   r15b,0x1
   14000e1e5:	je     0x14000e1f7
   14000e1e7:	mov    BYTE PTR [rsp+0x50],0x2b
   14000e1ec:	mov    edi,0x1
   14000e1f1:	mov    DWORD PTR [rsp+0x4c],edi
   14000e1f5:	jmp    0x14000e208
   14000e1f7:	test   r15b,0x2
   14000e1fb:	je     0x14000e204
   14000e1fd:	mov    BYTE PTR [rsp+0x50],0x20
   14000e202:	jmp    0x14000e1ec
   14000e204:	mov    edi,DWORD PTR [rsp+0x4c]
   14000e208:	mov    esi,DWORD PTR [rsp+0x58]
   14000e20c:	mov    r14,QWORD PTR [rsp+0x78]
   14000e211:	sub    esi,DWORD PTR [rsp+0x48]
   14000e215:	sub    esi,edi
   14000e217:	test   r15b,0xc
   14000e21b:	jne    0x14000e22e
   14000e21d:	lea    r9,[rsp+0x44]
   14000e222:	mov    r8,r14
   14000e225:	mov    edx,esi
   14000e227:	mov    cl,0x20
   14000e229:	call   0x14000e60c
   14000e22e:	lea    r9,[rsp+0x44]
   14000e233:	lea    rcx,[rsp+0x50]
   14000e238:	mov    r8,r14
   14000e23b:	mov    edx,edi
   14000e23d:	call   0x14000e664
   14000e242:	test   r15b,0x8
   14000e246:	je     0x14000e25f
   14000e248:	test   r15b,0x4
   14000e24c:	jne    0x14000e25f
   14000e24e:	lea    r9,[rsp+0x44]
   14000e253:	mov    r8,r14
   14000e256:	mov    edx,esi
   14000e258:	mov    cl,0x30
   14000e25a:	call   0x14000e60c
   14000e25f:	mov    edi,DWORD PTR [rsp+0x48]
   14000e263:	xor    eax,eax
   14000e265:	cmp    DWORD PTR [rsp+0x54],eax
   14000e269:	je     0x14000e2d2
   14000e26b:	test   edi,edi
   14000e26d:	jle    0x14000e2d2
   14000e26f:	mov    r14,rbx
   14000e272:	movzx  r9d,WORD PTR [r14]
   14000e276:	lea    rdx,[rbp+0x1c0]
   14000e27d:	lea    rcx,[rbp-0x58]
   14000e281:	mov    r8d,0x6
   14000e287:	dec    edi
   14000e289:	add    r14,0x2
   14000e28d:	call   0x14000f118
   14000e292:	xor    r10d,r10d
   14000e295:	test   eax,eax
   14000e297:	jne    0x14000e2c4
   14000e299:	mov    edx,DWORD PTR [rbp-0x58]
   14000e29c:	test   edx,edx
   14000e29e:	je     0x14000e2c4
   14000e2a0:	mov    r8,QWORD PTR [rsp+0x78]
   14000e2a5:	lea    r9,[rsp+0x44]
   14000e2aa:	lea    rcx,[rbp+0x1c0]
   14000e2b1:	call   0x14000e664
   14000e2b6:	xor    r10d,r10d
   14000e2b9:	test   edi,edi
   14000e2bb:	jne    0x14000e272
   14000e2bd:	mov    r14,QWORD PTR [rsp+0x78]
   14000e2c2:	jmp    0x14000e2e7
   14000e2c4:	mov    r14,QWORD PTR [rsp+0x78]
   14000e2c9:	mov    eax,r12d
   14000e2cc:	mov    DWORD PTR [rsp+0x44],eax
   14000e2d0:	jmp    0x14000e2eb
   14000e2d2:	lea    r9,[rsp+0x44]
   14000e2d7:	mov    r8,r14
   14000e2da:	mov    edx,edi
   14000e2dc:	mov    rcx,rbx
   14000e2df:	call   0x14000e664
   14000e2e4:	xor    r10d,r10d
   14000e2e7:	mov    eax,DWORD PTR [rsp+0x44]
   14000e2eb:	test   eax,eax
   14000e2ed:	js     0x14000e309
   14000e2ef:	test   r15b,0x4
   14000e2f3:	je     0x14000e309
   14000e2f5:	lea    r9,[rsp+0x44]
   14000e2fa:	mov    r8,r14
   14000e2fd:	mov    edx,esi
   14000e2ff:	mov    cl,0x20
   14000e301:	call   0x14000e60c
   14000e306:	xor    r10d,r10d
   14000e309:	mov    rax,QWORD PTR [rbp-0x60]
   14000e30d:	test   rax,rax
   14000e310:	je     0x14000e321
   14000e312:	mov    rcx,rax
   14000e315:	call   0x14000b0d0
   14000e31a:	xor    r10d,r10d
   14000e31d:	mov    QWORD PTR [rbp-0x60],r10
   14000e321:	mov    edi,DWORD PTR [rsp+0x40]
   14000e325:	mov    esi,DWORD PTR [rsp+0x44]
   14000e329:	mov    r8,QWORD PTR [rsp+0x68]
   14000e32e:	mov    edx,DWORD PTR [rsp+0x60]
   14000e332:	mov    r11d,0x200
   14000e338:	lea    r9,[rip+0xffffffffffff1cc1]        # 0x140000000
   14000e33f:	mov    r14b,BYTE PTR [r8]
   14000e342:	test   r14b,r14b
   14000e345:	jne    0x14000dc75
   14000e34b:	cmp    BYTE PTR [rbp-0x68],r10b
   14000e34f:	je     0x14000e35c
   14000e351:	mov    rcx,QWORD PTR [rbp-0x70]
   14000e355:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000e35c:	mov    eax,esi
   14000e35e:	mov    rcx,QWORD PTR [rbp+0x1c8]
   14000e365:	xor    rcx,rsp
   14000e368:	call   0x140006d40
   14000e36d:	mov    rbx,QWORD PTR [rsp+0x320]
   14000e375:	add    rsp,0x2d0
   14000e37c:	pop    r15
   14000e37e:	pop    r14
   14000e380:	pop    r13
   14000e382:	pop    r12
   14000e384:	pop    rdi
   14000e385:	pop    rsi
   14000e386:	pop    rbp
   14000e387:	ret    
   14000e388:	cmp    r14b,0x49
   14000e38c:	je     0x14000e3c6
   14000e38e:	cmp    r14b,0x68
   14000e392:	je     0x14000e3bd
   14000e394:	cmp    r14b,0x6c
   14000e398:	je     0x14000e3a7
   14000e39a:	cmp    r14b,0x77
   14000e39e:	jne    0x14000e33f
   14000e3a0:	bts    r15d,0xb
   14000e3a5:	jmp    0x14000e33f
   14000e3a7:	cmp    BYTE PTR [r8],0x6c
   14000e3ab:	jne    0x14000e3b7
   14000e3ad:	inc    r8
   14000e3b0:	bts    r15d,0xc
   14000e3b5:	jmp    0x14000e33f
   14000e3b7:	or     r15d,0x10
   14000e3bb:	jmp    0x14000e33f
   14000e3bd:	or     r15d,0x20
   14000e3c1:	jmp    0x14000e33f
   14000e3c6:	mov    al,BYTE PTR [r8]
   14000e3c9:	bts    r15d,0xf
   14000e3ce:	cmp    al,0x36
   14000e3d0:	jne    0x14000e3e7
   14000e3d2:	cmp    BYTE PTR [r8+0x1],0x34
   14000e3d7:	jne    0x14000e3e7
   14000e3d9:	add    r8,0x2
   14000e3dd:	bts    r15d,0xf
   14000e3e2:	jmp    0x14000e33f
   14000e3e7:	cmp    al,0x33
   14000e3e9:	jne    0x14000e400
   14000e3eb:	cmp    BYTE PTR [r8+0x1],0x32
   14000e3f0:	jne    0x14000e400
   14000e3f2:	add    r8,0x2
   14000e3f6:	btr    r15d,0xf
   14000e3fb:	jmp    0x14000e33f
   14000e400:	cmp    al,0x64
   14000e402:	je     0x14000e33f
   14000e408:	cmp    al,0x69
   14000e40a:	je     0x14000e33f
   14000e410:	cmp    al,0x6f
   14000e412:	je     0x14000e33f
   14000e418:	cmp    al,0x75
   14000e41a:	je     0x14000e33f
   14000e420:	cmp    al,0x78
   14000e422:	je     0x14000e33f
   14000e428:	cmp    al,0x58
   14000e42a:	je     0x14000e33f
   14000e430:	mov    DWORD PTR [rsp+0x60],r10d
   14000e435:	lea    rdx,[rbp-0x80]
   14000e439:	movzx  ecx,r14b
   14000e43d:	mov    DWORD PTR [rsp+0x54],r10d
   14000e442:	call   0x14000d68c
   14000e447:	xor    esi,esi
   14000e449:	test   eax,eax
   14000e44b:	je     0x14000e478
   14000e44d:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e452:	lea    r8,[rsp+0x44]
   14000e457:	mov    cl,r14b
   14000e45a:	call   0x14000e5c0
   14000e45f:	mov    rdx,QWORD PTR [rsp+0x68]
   14000e464:	mov    r14b,BYTE PTR [rdx]
   14000e467:	inc    rdx
   14000e46a:	mov    QWORD PTR [rsp+0x68],rdx
   14000e46f:	test   r14b,r14b
   14000e472:	je     0x14000e591
   14000e478:	mov    rdx,QWORD PTR [rsp+0x78]
   14000e47d:	lea    r8,[rsp+0x44]
   14000e482:	mov    cl,r14b
   14000e485:	call   0x14000e5c0
   14000e48a:	xor    r10d,r10d
   14000e48d:	jmp    0x14000e325
   14000e492:	cmp    r14b,0x2a
   14000e496:	jne    0x14000e4b9
   14000e498:	mov    edi,DWORD PTR [r13+0x0]
   14000e49c:	add    r13,0x8
   14000e4a0:	mov    DWORD PTR [rsp+0x40],edi
   14000e4a4:	test   edi,edi
   14000e4a6:	jns    0x14000e33f
   14000e4ac:	mov    edi,r12d
   14000e4af:	mov    DWORD PTR [rsp+0x40],r12d
   14000e4b4:	jmp    0x14000e33f
   14000e4b9:	lea    edi,[rdi+rdi*4]
   14000e4bc:	movsx  eax,r14b
   14000e4c0:	add    edi,0xffffffe8
   14000e4c3:	lea    edi,[rax+rdi*2]
   14000e4c6:	mov    DWORD PTR [rsp+0x40],edi
   14000e4ca:	jmp    0x14000e33f
   14000e4cf:	mov    edi,r10d
   14000e4d2:	mov    DWORD PTR [rsp+0x40],r10d
   14000e4d7:	jmp    0x14000e33f
   14000e4dc:	cmp    r14b,0x2a
   14000e4e0:	jne    0x14000e4fe
   14000e4e2:	mov    eax,DWORD PTR [r13+0x0]
   14000e4e6:	add    r13,0x8
   14000e4ea:	mov    DWORD PTR [rsp+0x58],eax
   14000e4ee:	test   eax,eax
   14000e4f0:	jns    0x14000e33f
   14000e4f6:	or     r15d,0x4
   14000e4fa:	neg    eax
   14000e4fc:	jmp    0x14000e50f
   14000e4fe:	mov    eax,DWORD PTR [rsp+0x58]
   14000e502:	lea    ecx,[rax+rax*4]
   14000e505:	movsx  eax,r14b
   14000e509:	lea    eax,[rax+rcx*2]
   14000e50c:	add    eax,0xffffffd0
   14000e50f:	mov    DWORD PTR [rsp+0x58],eax
   14000e513:	jmp    0x14000e33f
   14000e518:	cmp    r14b,0x20
   14000e51c:	je     0x14000e55f
   14000e51e:	cmp    r14b,0x23
   14000e522:	je     0x14000e555
   14000e524:	cmp    r14b,0x2b
   14000e528:	je     0x14000e54c
   14000e52a:	cmp    r14b,0x2d
   14000e52e:	je     0x14000e543
   14000e530:	cmp    r14b,0x30
   14000e534:	jne    0x14000e33f
   14000e53a:	or     r15d,0x8
   14000e53e:	jmp    0x14000e33f
   14000e543:	or     r15d,0x4
   14000e547:	jmp    0x14000e33f
   14000e54c:	or     r15d,0x1
   14000e550:	jmp    0x14000e33f
   14000e555:	bts    r15d,0x7
   14000e55a:	jmp    0x14000e33f
   14000e55f:	or     r15d,0x2
   14000e563:	jmp    0x14000e33f
   14000e568:	mov    DWORD PTR [rsp+0x70],r10d
   14000e56d:	mov    DWORD PTR [rsp+0x5c],r10d
   14000e572:	mov    DWORD PTR [rsp+0x58],r10d
   14000e577:	mov    DWORD PTR [rsp+0x4c],r10d
   14000e57c:	mov    r15d,r10d
   14000e57f:	mov    edi,r12d
   14000e582:	mov    DWORD PTR [rsp+0x40],r12d
   14000e587:	mov    DWORD PTR [rsp+0x54],r10d
   14000e58c:	jmp    0x14000e33f
   14000e591:	call   0x140009658
   14000e596:	xor    r9d,r9d
   14000e599:	xor    r8d,r8d
   14000e59c:	xor    edx,edx
   14000e59e:	xor    ecx,ecx
   14000e5a0:	mov    QWORD PTR [rsp+0x20],rsi
   14000e5a5:	mov    DWORD PTR [rax],0x16
   14000e5ab:	call   0x14000974c
   14000e5b0:	cmp    BYTE PTR [rbp-0x68],sil
   14000e5b4:	jmp    0x14000dc29
   14000e5b9:	int3   
   14000e5ba:	int3   
   14000e5bb:	int3   
   14000e5bc:	int3   
   14000e5bd:	int3   
   14000e5be:	int3   
   14000e5bf:	int3   
   14000e5c0:	rex push rbx
   14000e5c2:	sub    rsp,0x20
   14000e5c6:	test   BYTE PTR [rdx+0x18],0x40
   14000e5ca:	mov    rbx,r8
   14000e5cd:	je     0x14000e5db
   14000e5cf:	cmp    QWORD PTR [rdx+0x10],0x0
   14000e5d4:	jne    0x14000e5db
   14000e5d6:	inc    DWORD PTR [r8]
   14000e5d9:	jmp    0x14000e600
   14000e5db:	dec    DWORD PTR [rdx+0x8]
   14000e5de:	js     0x14000e5ed
   14000e5e0:	mov    rax,QWORD PTR [rdx]
   14000e5e3:	mov    BYTE PTR [rax],cl
   14000e5e5:	inc    QWORD PTR [rdx]
   14000e5e8:	movzx  eax,cl
   14000e5eb:	jmp    0x14000e5f5
   14000e5ed:	movsx  ecx,cl
   14000e5f0:	call   0x140009838
   14000e5f5:	cmp    eax,0xffffffff
   14000e5f8:	jne    0x14000e5fe
   14000e5fa:	or     DWORD PTR [rbx],eax
   14000e5fc:	jmp    0x14000e600
   14000e5fe:	inc    DWORD PTR [rbx]
   14000e600:	add    rsp,0x20
   14000e604:	pop    rbx
   14000e605:	ret    
   14000e606:	int3   
   14000e607:	int3   
   14000e608:	int3   
   14000e609:	int3   
   14000e60a:	int3   
   14000e60b:	int3   
   14000e60c:	test   edx,edx
   14000e60e:	jle    0x14000e65c
   14000e610:	mov    QWORD PTR [rsp+0x8],rbx
   14000e615:	mov    QWORD PTR [rsp+0x10],rbp
   14000e61a:	mov    QWORD PTR [rsp+0x18],rsi
   14000e61f:	push   rdi
   14000e620:	sub    rsp,0x20
   14000e624:	mov    rdi,r9
   14000e627:	mov    rsi,r8
   14000e62a:	mov    ebx,edx
   14000e62c:	mov    bpl,cl
   14000e62f:	mov    r8,rdi
   14000e632:	mov    rdx,rsi
   14000e635:	mov    cl,bpl
   14000e638:	dec    ebx
   14000e63a:	call   0x14000e5c0
   14000e63f:	cmp    DWORD PTR [rdi],0xffffffff
   14000e642:	je     0x14000e648
   14000e644:	test   ebx,ebx
   14000e646:	jg     0x14000e62f
   14000e648:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e64d:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e652:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e657:	add    rsp,0x20
   14000e65b:	pop    rdi
   14000e65c:	ret    
   14000e65d:	int3   
   14000e65e:	int3   
   14000e65f:	int3   
   14000e660:	int3   
   14000e661:	int3   
   14000e662:	int3   
   14000e663:	int3   
   14000e664:	mov    QWORD PTR [rsp+0x8],rbx
   14000e669:	mov    QWORD PTR [rsp+0x10],rsi
   14000e66e:	mov    QWORD PTR [rsp+0x18],rdi
   14000e673:	push   r14
   14000e675:	sub    rsp,0x20
   14000e679:	test   BYTE PTR [r8+0x18],0x40
   14000e67e:	mov    rdi,r9
   14000e681:	mov    rsi,r8
   14000e684:	mov    ebx,edx
   14000e686:	mov    r14,rcx
   14000e689:	je     0x14000e697
   14000e68b:	cmp    QWORD PTR [r8+0x10],0x0
   14000e690:	jne    0x14000e697
   14000e692:	add    DWORD PTR [r9],edx
   14000e695:	jmp    0x14000e6ce
   14000e697:	test   edx,edx
   14000e699:	jle    0x14000e6ce
   14000e69b:	mov    cl,BYTE PTR [r14]
   14000e69e:	mov    r8,rdi
   14000e6a1:	mov    rdx,rsi
   14000e6a4:	dec    ebx
   14000e6a6:	call   0x14000e5c0
   14000e6ab:	inc    r14
   14000e6ae:	cmp    DWORD PTR [rdi],0xffffffff
   14000e6b1:	jne    0x14000e6ca
   14000e6b3:	call   0x140009658
   14000e6b8:	cmp    DWORD PTR [rax],0x2a
   14000e6bb:	jne    0x14000e6ce
   14000e6bd:	mov    r8,rdi
   14000e6c0:	mov    rdx,rsi
   14000e6c3:	mov    cl,0x3f
   14000e6c5:	call   0x14000e5c0
   14000e6ca:	test   ebx,ebx
   14000e6cc:	jg     0x14000e69b
   14000e6ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e6d3:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e6d8:	mov    rdi,QWORD PTR [rsp+0x40]
   14000e6dd:	add    rsp,0x20
   14000e6e1:	pop    r14
   14000e6e3:	ret    
   14000e6e4:	int3   
   14000e6e5:	int3   
   14000e6e6:	int3   
   14000e6e7:	int3   
   14000e6e8:	int3   
   14000e6e9:	int3   
   14000e6ea:	int3   
   14000e6eb:	int3   
   14000e6ec:	mov    ecx,0x1
   14000e6f1:	jmp    0x14000e7d0
   14000e6f6:	int3   
   14000e6f7:	int3   
   14000e6f8:	int3   
   14000e6f9:	int3   
   14000e6fa:	int3   
   14000e6fb:	int3   
   14000e6fc:	rex push rbx
   14000e6fe:	sub    rsp,0x20
   14000e702:	mov    rbx,rcx
   14000e705:	test   rcx,rcx
   14000e708:	jne    0x14000e714
   14000e70a:	add    rsp,0x20
   14000e70e:	pop    rbx
   14000e70f:	jmp    0x14000e7d0
   14000e714:	call   0x14000e750
   14000e719:	test   eax,eax
   14000e71b:	je     0x14000e722
   14000e71d:	or     eax,0xffffffff
   14000e720:	jmp    0x14000e742
   14000e722:	test   DWORD PTR [rbx+0x18],0x4000
   14000e729:	je     0x14000e740
   14000e72b:	mov    rcx,rbx
   14000e72e:	call   0x14000cb3c
   14000e733:	mov    ecx,eax
   14000e735:	call   0x14000f4cc
   14000e73a:	neg    eax
   14000e73c:	sbb    eax,eax
   14000e73e:	jmp    0x14000e742
   14000e740:	xor    eax,eax
   14000e742:	add    rsp,0x20
   14000e746:	pop    rbx
   14000e747:	ret    
   14000e748:	int3   
   14000e749:	int3   
   14000e74a:	int3   
   14000e74b:	int3   
   14000e74c:	int3   
   14000e74d:	int3   
   14000e74e:	int3   
   14000e74f:	int3   
   14000e750:	mov    QWORD PTR [rsp+0x8],rbx
   14000e755:	mov    QWORD PTR [rsp+0x10],rsi
   14000e75a:	push   rdi
   14000e75b:	sub    rsp,0x20
   14000e75f:	mov    eax,DWORD PTR [rcx+0x18]
   14000e762:	xor    esi,esi
   14000e764:	mov    rbx,rcx
   14000e767:	and    al,0x3
   14000e769:	cmp    al,0x2
   14000e76b:	jne    0x14000e7ac
   14000e76d:	test   DWORD PTR [rcx+0x18],0x108
   14000e774:	je     0x14000e7ac
   14000e776:	mov    edi,DWORD PTR [rcx]
   14000e778:	sub    edi,DWORD PTR [rcx+0x10]
   14000e77b:	test   edi,edi
   14000e77d:	jle    0x14000e7ac
   14000e77f:	call   0x14000cb3c
   14000e784:	mov    rdx,QWORD PTR [rbx+0x10]
   14000e788:	mov    r8d,edi
   14000e78b:	mov    ecx,eax
   14000e78d:	call   0x14000cbf0
   14000e792:	cmp    eax,edi
   14000e794:	jne    0x14000e7a5
   14000e796:	mov    eax,DWORD PTR [rbx+0x18]
   14000e799:	test   al,al
   14000e79b:	jns    0x14000e7ac
   14000e79d:	and    eax,0xfffffffd
   14000e7a0:	mov    DWORD PTR [rbx+0x18],eax
   14000e7a3:	jmp    0x14000e7ac
   14000e7a5:	or     DWORD PTR [rbx+0x18],0x20
   14000e7a9:	or     esi,0xffffffff
   14000e7ac:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e7b0:	and    DWORD PTR [rbx+0x8],0x0
   14000e7b4:	mov    eax,esi
   14000e7b6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e7bb:	mov    QWORD PTR [rbx],rcx
   14000e7be:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e7c3:	add    rsp,0x20
   14000e7c7:	pop    rdi
   14000e7c8:	ret    
   14000e7c9:	int3   
   14000e7ca:	int3   
   14000e7cb:	int3   
   14000e7cc:	int3   
   14000e7cd:	int3   
   14000e7ce:	int3   
   14000e7cf:	int3   
   14000e7d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e7d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000e7da:	mov    QWORD PTR [rsp+0x18],rdi
   14000e7df:	push   r13
   14000e7e1:	push   r14
   14000e7e3:	push   r15
   14000e7e5:	sub    rsp,0x30
   14000e7e9:	mov    r15d,ecx
   14000e7ec:	xor    esi,esi
   14000e7ee:	xor    edi,edi
   14000e7f0:	lea    ecx,[rsi+0x1]
   14000e7f3:	call   0x14000b064
   14000e7f8:	nop
   14000e7f9:	xor    ebx,ebx
   14000e7fb:	or     r13d,0xffffffff
   14000e7ff:	mov    DWORD PTR [rsp+0x20],ebx
   14000e803:	cmp    ebx,DWORD PTR [rip+0x4fe7]        # 0x1400137f0
   14000e809:	jge    0x14000e88f
   14000e80f:	movsxd r14,ebx
   14000e812:	mov    rax,QWORD PTR [rip+0x4fcf]        # 0x1400137e8
   14000e819:	cmp    QWORD PTR [rax+r14*8],0x0
   14000e81e:	je     0x14000e888
   14000e820:	mov    rdx,QWORD PTR [rax+r14*8]
   14000e824:	test   BYTE PTR [rdx+0x18],0x83
   14000e828:	je     0x14000e888
   14000e82a:	mov    ecx,ebx
   14000e82c:	call   0x14000a918
   14000e831:	nop
   14000e832:	mov    rax,QWORD PTR [rip+0x4faf]        # 0x1400137e8
   14000e839:	mov    rcx,QWORD PTR [rax+r14*8]
   14000e83d:	test   BYTE PTR [rcx+0x18],0x83
   14000e841:	je     0x14000e876
   14000e843:	cmp    r15d,0x1
   14000e847:	jne    0x14000e85b
   14000e849:	call   0x14000e6fc
   14000e84e:	cmp    eax,r13d
   14000e851:	je     0x14000e876
   14000e853:	inc    esi
   14000e855:	mov    DWORD PTR [rsp+0x24],esi
   14000e859:	jmp    0x14000e876
   14000e85b:	test   r15d,r15d
   14000e85e:	jne    0x14000e876
   14000e860:	test   BYTE PTR [rcx+0x18],0x2
   14000e864:	je     0x14000e876
   14000e866:	call   0x14000e6fc
   14000e86b:	cmp    eax,r13d
   14000e86e:	cmove  edi,r13d
   14000e872:	mov    DWORD PTR [rsp+0x28],edi
   14000e876:	mov    rdx,QWORD PTR [rip+0x4f6b]        # 0x1400137e8
   14000e87d:	mov    rdx,QWORD PTR [rdx+r14*8]
   14000e881:	mov    ecx,ebx
   14000e883:	call   0x14000a950
   14000e888:	inc    ebx
   14000e88a:	jmp    0x14000e7ff
   14000e88f:	mov    ecx,0x1
   14000e894:	call   0x14000b0b0
   14000e899:	cmp    r15d,0x1
   14000e89d:	cmove  edi,esi
   14000e8a0:	mov    eax,edi
   14000e8a2:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e8a7:	mov    rsi,QWORD PTR [rsp+0x58]
   14000e8ac:	mov    rdi,QWORD PTR [rsp+0x60]
   14000e8b1:	add    rsp,0x30
   14000e8b5:	pop    r15
   14000e8b7:	pop    r14
   14000e8b9:	pop    r13
   14000e8bb:	ret    
   14000e8bc:	int3   
   14000e8bd:	int3   
   14000e8be:	int3   
   14000e8bf:	int3   
   14000e8c0:	int3   
   14000e8c1:	int3   
   14000e8c2:	int3   
   14000e8c3:	int3   
   14000e8c4:	mov    QWORD PTR [rsp+0x8],rbx
   14000e8c9:	mov    QWORD PTR [rsp+0x10],rsi
   14000e8ce:	push   rdi
   14000e8cf:	sub    rsp,0x30
   14000e8d3:	xor    edi,edi
   14000e8d5:	lea    ecx,[rdi+0x1]
   14000e8d8:	call   0x14000b064
   14000e8dd:	nop
   14000e8de:	lea    ebx,[rdi+0x3]
   14000e8e1:	mov    DWORD PTR [rsp+0x20],ebx
   14000e8e5:	cmp    ebx,DWORD PTR [rip+0x4f05]        # 0x1400137f0
   14000e8eb:	jge    0x14000e952
   14000e8ed:	movsxd rsi,ebx
   14000e8f0:	mov    rax,QWORD PTR [rip+0x4ef1]        # 0x1400137e8
   14000e8f7:	cmp    QWORD PTR [rax+rsi*8],0x0
   14000e8fc:	je     0x14000e94e
   14000e8fe:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000e902:	test   BYTE PTR [rcx+0x18],0x83
   14000e906:	je     0x14000e918
   14000e908:	call   0x14000f5bc
   14000e90d:	cmp    eax,0xffffffff
   14000e910:	je     0x14000e918
   14000e912:	inc    edi
   14000e914:	mov    DWORD PTR [rsp+0x24],edi
   14000e918:	cmp    ebx,0x14
   14000e91b:	jl     0x14000e94e
   14000e91d:	mov    rax,QWORD PTR [rip+0x4ec4]        # 0x1400137e8
   14000e924:	mov    rcx,QWORD PTR [rax+rsi*8]
   14000e928:	add    rcx,0x30
   14000e92c:	call   QWORD PTR [rip+0x7ca6]        # 0x1400165d8
   14000e932:	mov    rcx,QWORD PTR [rip+0x4eaf]        # 0x1400137e8
   14000e939:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14000e93d:	call   0x14000b0d0
   14000e942:	mov    r11,QWORD PTR [rip+0x4e9f]        # 0x1400137e8
   14000e949:	and    QWORD PTR [r11+rsi*8],0x0
   14000e94e:	inc    ebx
   14000e950:	jmp    0x14000e8e1
   14000e952:	mov    ecx,0x1
   14000e957:	call   0x14000b0b0
   14000e95c:	mov    eax,edi
   14000e95e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e963:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e968:	add    rsp,0x30
   14000e96c:	pop    rdi
   14000e96d:	ret    
   14000e96e:	int3   
   14000e96f:	int3   
   14000e970:	int3   
   14000e971:	int3   
   14000e972:	int3   
   14000e973:	int3   
   14000e974:	int3   
   14000e975:	int3   
   14000e976:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e980:	mov    QWORD PTR [rsp+0x8],rcx
   14000e985:	mov    QWORD PTR [rsp+0x18],rdx
   14000e98a:	mov    DWORD PTR [rsp+0x10],r8d
   14000e98f:	mov    r9,0x19930520
   14000e996:	jmp    0x14000e9a0
   14000e998:	int3   
   14000e999:	int3   
   14000e99a:	int3   
   14000e99b:	int3   
   14000e99c:	int3   
   14000e99d:	int3   
   14000e99e:	xchg   ax,ax
   14000e9a0:	ret    
   14000e9a1:	int3   
   14000e9a2:	int3   
   14000e9a3:	int3   
   14000e9a4:	int3   
   14000e9a5:	int3   
   14000e9a6:	int3   
   14000e9a7:	nop    WORD PTR [rax+rax*1+0x0]
   14000e9b0:	ret    
   14000e9b1:	int3   
   14000e9b2:	int3   
   14000e9b3:	int3   
   14000e9b4:	int3   
   14000e9b5:	int3   
   14000e9b6:	int3   
   14000e9b7:	int3   
   14000e9b8:	mov    edx,0x30
   14000e9bd:	cmp    cx,dx
   14000e9c0:	jb     0x14000eb49
   14000e9c6:	cmp    cx,0x3a
   14000e9ca:	jae    0x14000e9d2
   14000e9cc:	movzx  eax,cx
   14000e9cf:	sub    eax,edx
   14000e9d1:	ret    
   14000e9d2:	mov    edx,0xff10
   14000e9d7:	cmp    cx,dx
   14000e9da:	jae    0x14000eb3b
   14000e9e0:	mov    edx,0x660
   14000e9e5:	cmp    cx,dx
   14000e9e8:	jb     0x14000eb49
   14000e9ee:	lea    eax,[rdx+0xa]
   14000e9f1:	cmp    cx,ax
   14000e9f4:	jb     0x14000e9cc
   14000e9f6:	mov    edx,0x6f0
   14000e9fb:	cmp    cx,dx
   14000e9fe:	jb     0x14000eb49
   14000ea04:	lea    eax,[rdx+0xa]
   14000ea07:	cmp    cx,ax
   14000ea0a:	jb     0x14000e9cc
   14000ea0c:	mov    edx,0x966
   14000ea11:	cmp    cx,dx
   14000ea14:	jb     0x14000eb49
   14000ea1a:	lea    eax,[rdx+0xa]
   14000ea1d:	cmp    cx,ax
   14000ea20:	jb     0x14000e9cc
   14000ea22:	lea    edx,[rax+0x76]
   14000ea25:	cmp    cx,dx
   14000ea28:	jb     0x14000eb49
   14000ea2e:	lea    eax,[rdx+0xa]
   14000ea31:	cmp    cx,ax
   14000ea34:	jb     0x14000e9cc
   14000ea36:	lea    edx,[rax+0x76]
   14000ea39:	cmp    cx,dx
   14000ea3c:	jb     0x14000eb49
   14000ea42:	lea    eax,[rdx+0xa]
   14000ea45:	cmp    cx,ax
   14000ea48:	jb     0x14000e9cc
   14000ea4a:	lea    edx,[rax+0x76]
   14000ea4d:	cmp    cx,dx
   14000ea50:	jb     0x14000eb49
   14000ea56:	lea    eax,[rdx+0xa]
   14000ea59:	cmp    cx,ax
   14000ea5c:	jb     0x14000e9cc
   14000ea62:	lea    edx,[rax+0x76]
   14000ea65:	cmp    cx,dx
   14000ea68:	jb     0x14000eb49
   14000ea6e:	lea    eax,[rdx+0xa]
   14000ea71:	cmp    cx,ax
   14000ea74:	jb     0x14000e9cc
   14000ea7a:	mov    edx,0xc66
   14000ea7f:	cmp    cx,dx
   14000ea82:	jb     0x14000eb49
   14000ea88:	lea    eax,[rdx+0xa]
   14000ea8b:	cmp    cx,ax
   14000ea8e:	jb     0x14000e9cc
   14000ea94:	lea    edx,[rax+0x76]
   14000ea97:	cmp    cx,dx
   14000ea9a:	jb     0x14000eb49
   14000eaa0:	lea    eax,[rdx+0xa]
   14000eaa3:	cmp    cx,ax
   14000eaa6:	jb     0x14000e9cc
   14000eaac:	lea    edx,[rax+0x76]
   14000eaaf:	cmp    cx,dx
   14000eab2:	jb     0x14000eb49
   14000eab8:	lea    eax,[rdx+0xa]
   14000eabb:	cmp    cx,ax
   14000eabe:	jb     0x14000e9cc
   14000eac4:	mov    edx,0xe50
   14000eac9:	cmp    cx,dx
   14000eacc:	jb     0x14000eb49
   14000eace:	lea    eax,[rdx+0xa]
   14000ead1:	cmp    cx,ax
   14000ead4:	jb     0x14000e9cc
   14000eada:	lea    edx,[rax+0x76]
   14000eadd:	cmp    cx,dx
   14000eae0:	jb     0x14000eb49
   14000eae2:	lea    eax,[rdx+0xa]
   14000eae5:	cmp    cx,ax
   14000eae8:	jb     0x14000e9cc
   14000eaee:	lea    edx,[rax+0x46]
   14000eaf1:	cmp    cx,dx
   14000eaf4:	jb     0x14000eb49
   14000eaf6:	lea    eax,[rdx+0xa]
   14000eaf9:	cmp    cx,ax
   14000eafc:	jb     0x14000e9cc
   14000eb02:	mov    edx,0x1040
   14000eb07:	cmp    cx,dx
   14000eb0a:	jb     0x14000eb49
   14000eb0c:	lea    eax,[rdx+0xa]
   14000eb0f:	cmp    cx,ax
   14000eb12:	jb     0x14000e9cc
   14000eb18:	mov    edx,0x17e0
   14000eb1d:	cmp    cx,dx
   14000eb20:	jb     0x14000eb49
   14000eb22:	lea    eax,[rdx+0xa]
   14000eb25:	cmp    cx,ax
   14000eb28:	jb     0x14000e9cc
   14000eb2e:	lea    edx,[rax+0x26]
   14000eb31:	cmp    cx,dx
   14000eb34:	jb     0x14000eb49
   14000eb36:	lea    eax,[rdx+0xa]
   14000eb39:	jmp    0x14000eb40
   14000eb3b:	mov    eax,0xff1a
   14000eb40:	cmp    cx,ax
   14000eb43:	jb     0x14000e9cc
   14000eb49:	or     eax,0xffffffff
   14000eb4c:	ret    
   14000eb4d:	int3   
   14000eb4e:	int3   
   14000eb4f:	int3   
   14000eb50:	int3   
   14000eb51:	int3   
   14000eb52:	int3   
   14000eb53:	int3   
   14000eb54:	sub    rsp,0x5a8
   14000eb5b:	test   BYTE PTR [rip+0x386e],0x1        # 0x1400123d0
   14000eb62:	je     0x14000eb6e
   14000eb64:	mov    ecx,0xa
   14000eb69:	call   0x140007c80
   14000eb6e:	call   0x14000b56c
   14000eb73:	test   rax,rax
   14000eb76:	je     0x14000eb82
   14000eb78:	mov    ecx,0x16
   14000eb7d:	call   0x14000b334
   14000eb82:	test   BYTE PTR [rip+0x3847],0x2        # 0x1400123d0
   14000eb89:	je     0x14000ebea
   14000eb8b:	lea    rcx,[rsp+0xd0]
   14000eb93:	call   QWORD PTR [rip+0x7bdf]        # 0x140016778
   14000eb99:	lea    rcx,[rsp+0x30]
   14000eb9e:	xor    edx,edx
   14000eba0:	mov    r8d,0x98
   14000eba6:	call   0x14000c460
   14000ebab:	mov    rax,QWORD PTR [rsp+0x5a8]
   14000ebb3:	xor    ecx,ecx
   14000ebb5:	mov    QWORD PTR [rsp+0x40],rax
   14000ebba:	lea    rax,[rsp+0x30]
   14000ebbf:	mov    DWORD PTR [rsp+0x30],0x40000015
   14000ebc7:	mov    QWORD PTR [rsp+0x20],rax
   14000ebcc:	lea    rax,[rsp+0xd0]
   14000ebd4:	mov    QWORD PTR [rsp+0x28],rax
   14000ebd9:	call   QWORD PTR [rip+0x7971]        # 0x140016550
   14000ebdf:	lea    rcx,[rsp+0x20]
   14000ebe4:	call   QWORD PTR [rip+0x7a3e]        # 0x140016628
   14000ebea:	mov    ecx,0x3
   14000ebef:	call   0x140007838
   14000ebf4:	int3   
   14000ebf5:	int3   
   14000ebf6:	int3   
   14000ebf7:	int3   
   14000ebf8:	int3   
   14000ebf9:	int3   
   14000ebfa:	int3   
   14000ebfb:	int3   
   14000ebfc:	mov    QWORD PTR [rsp+0x8],rbx
   14000ec01:	push   rdi
   14000ec02:	sub    rsp,0x30
   14000ec06:	mov    rdi,r8
   14000ec09:	mov    rbx,rdx
   14000ec0c:	test   rcx,rcx
   14000ec0f:	je     0x14000ec43
   14000ec11:	xor    edx,edx
   14000ec13:	lea    rax,[rdx-0x20]
   14000ec17:	div    rcx
   14000ec1a:	cmp    rax,rbx
   14000ec1d:	jae    0x14000ec43
   14000ec1f:	call   0x140009658
   14000ec24:	and    QWORD PTR [rsp+0x20],0x0
   14000ec2a:	xor    r9d,r9d
   14000ec2d:	xor    r8d,r8d
   14000ec30:	xor    edx,edx
   14000ec32:	xor    ecx,ecx
   14000ec34:	mov    DWORD PTR [rax],0xc
   14000ec3a:	call   0x14000974c
   14000ec3f:	xor    eax,eax
   14000ec41:	jmp    0x14000eca0
   14000ec43:	imul   rbx,rcx
   14000ec47:	mov    eax,0x1
   14000ec4c:	test   rbx,rbx
   14000ec4f:	cmove  rbx,rax
   14000ec53:	xor    eax,eax
   14000ec55:	cmp    rbx,0xffffffffffffffe0
   14000ec59:	ja     0x14000ec73
   14000ec5b:	mov    rcx,QWORD PTR [rip+0x3bf6]        # 0x140012858
   14000ec62:	lea    edx,[rax+0x8]
   14000ec65:	mov    r8,rbx
   14000ec68:	call   QWORD PTR [rip+0x77e2]        # 0x140016450
   14000ec6e:	test   rax,rax
   14000ec71:	jne    0x14000eca0
   14000ec73:	cmp    DWORD PTR [rip+0x467e],0x0        # 0x1400132f8
   14000ec7a:	je     0x14000ec95
   14000ec7c:	mov    rcx,rbx
   14000ec7f:	call   0x14000b2c0
   14000ec84:	test   eax,eax
   14000ec86:	jne    0x14000ec53
   14000ec88:	test   rdi,rdi
   14000ec8b:	je     0x14000ec3f
   14000ec8d:	mov    DWORD PTR [rdi],0xc
   14000ec93:	jmp    0x14000ec3f
   14000ec95:	test   rdi,rdi
   14000ec98:	je     0x14000eca0
   14000ec9a:	mov    DWORD PTR [rdi],0xc
   14000eca0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000eca5:	add    rsp,0x30
   14000eca9:	pop    rdi
   14000ecaa:	ret    
   14000ecab:	int3   
   14000ecac:	int3   
   14000ecad:	int3   
   14000ecae:	int3   
   14000ecaf:	int3   
   14000ecb0:	int3   
   14000ecb1:	int3   
   14000ecb2:	int3   
   14000ecb3:	int3   
   14000ecb4:	mov    ecx,0x2
   14000ecb9:	jmp    0x14000784c
   14000ecbe:	int3   
   14000ecbf:	int3   
   14000ecc0:	int3   
   14000ecc1:	int3   
   14000ecc2:	int3   
   14000ecc3:	int3   
   14000ecc4:	int3   
   14000ecc5:	int3   
   14000ecc6:	int3   
   14000ecc7:	int3   
   14000ecc8:	rex push rbp
   14000ecca:	push   r14
   14000eccc:	push   r15
   14000ecce:	sub    rsp,0x90
   14000ecd5:	lea    rbp,[rsp+0x20]
   14000ecda:	mov    QWORD PTR [rbp+0x90],rbx
   14000ece1:	mov    QWORD PTR [rbp+0x98],rsi
   14000ece8:	mov    QWORD PTR [rbp+0xa0],rdi
   14000ecef:	mov    rax,QWORD PTR [rip+0x247a]        # 0x140011170
   14000ecf6:	xor    rax,rbp
   14000ecf9:	mov    QWORD PTR [rbp+0x68],rax
   14000ecfd:	and    DWORD PTR [rbp+0x0],0x0
   14000ed01:	mov    eax,DWORD PTR [rsp]
   14000ed04:	sub    rsp,0x10
   14000ed08:	lea    r14,[rsp+0x20]
   14000ed0d:	mov    eax,DWORD PTR [r14]
   14000ed10:	lea    rdx,[rbp+0x8]
   14000ed14:	mov    r8d,0x30
   14000ed1a:	mov    rcx,r14
   14000ed1d:	call   QWORD PTR [rip+0x77b5]        # 0x1400164d8
   14000ed23:	test   rax,rax
   14000ed26:	je     0x14000edcb
   14000ed2c:	mov    r15,QWORD PTR [rbp+0x10]
   14000ed30:	lea    rcx,[rbp+0x38]
   14000ed34:	call   QWORD PTR [rip+0x77b6]        # 0x1400164f0
   14000ed3a:	mov    edi,DWORD PTR [rbp+0x3c]
   14000ed3d:	lea    rcx,[rbp+0x0]
   14000ed41:	xor    ebx,ebx
   14000ed43:	call   QWORD PTR [rip+0x77af]        # 0x1400164f8
   14000ed49:	cmp    eax,0x1
   14000ed4c:	jne    0x14000ed56
   14000ed4e:	mov    eax,DWORD PTR [rbp+0x0]
   14000ed51:	test   eax,eax
   14000ed53:	cmovne ebx,eax
   14000ed56:	lea    edx,[rdi-0x1]
   14000ed59:	lea    ecx,[rdx+rbx*1]
   14000ed5c:	cmp    ecx,ebx
   14000ed5e:	jb     0x14000edcb
   14000ed60:	mov    eax,edx
   14000ed62:	not    eax
   14000ed64:	and    ecx,eax
   14000ed66:	je     0x14000ed71
   14000ed68:	lea    eax,[rcx+rdi*1]
   14000ed6b:	cmp    eax,ecx
   14000ed6d:	jb     0x14000edcb
   14000ed6f:	mov    ecx,eax
   14000ed71:	lea    eax,[rdi+rdi*2]
   14000ed74:	mov    ebx,edx
   14000ed76:	cmp    ecx,eax
   14000ed78:	not    rbx
   14000ed7b:	cmovb  ecx,eax
   14000ed7e:	and    rbx,r14
   14000ed81:	lea    rax,[r15+rdi*1]
   14000ed85:	mov    esi,ecx
   14000ed87:	sub    rbx,rsi
   14000ed8a:	cmp    rbx,rax
   14000ed8d:	jb     0x14000edcb
   14000ed8f:	mov    r9d,0x4
   14000ed95:	mov    r8d,0x1000
   14000ed9b:	mov    edx,esi
   14000ed9d:	mov    rcx,rbx
   14000eda0:	call   QWORD PTR [rip+0x7742]        # 0x1400164e8
   14000eda6:	test   rax,rax
   14000eda9:	je     0x14000edcb
   14000edab:	lea    r9,[rbp+0x4]
   14000edaf:	mov    r8d,0x104
   14000edb5:	mov    edx,esi
   14000edb7:	mov    rcx,rbx
   14000edba:	call   QWORD PTR [rip+0x7720]        # 0x1400164e0
   14000edc0:	test   eax,eax
   14000edc2:	je     0x14000edcb
   14000edc4:	mov    eax,0x1
   14000edc9:	jmp    0x14000edcd
   14000edcb:	xor    eax,eax
   14000edcd:	mov    rcx,QWORD PTR [rbp+0x68]
   14000edd1:	xor    rcx,rbp
   14000edd4:	call   0x140006d40
   14000edd9:	mov    rbx,QWORD PTR [rbp+0x90]
   14000ede0:	mov    rsi,QWORD PTR [rbp+0x98]
   14000ede7:	mov    rdi,QWORD PTR [rbp+0xa0]
   14000edee:	lea    rsp,[rbp+0x70]
   14000edf2:	pop    r15
   14000edf4:	pop    r14
   14000edf6:	pop    rbp
   14000edf7:	ret    
   14000edf8:	int3   
   14000edf9:	int3   
   14000edfa:	int3   
   14000edfb:	int3   
   14000edfc:	int3   
   14000edfd:	int3   
   14000edfe:	int3   
   14000edff:	int3   
   14000ee00:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee05:	mov    QWORD PTR [rsp+0x10],rsi
   14000ee0a:	push   rdi
   14000ee0b:	sub    rsp,0x40
   14000ee0f:	mov    esi,edx
   14000ee11:	mov    rdx,rcx
   14000ee14:	lea    rcx,[rsp+0x20]
   14000ee19:	mov    ebx,r9d
   14000ee1c:	mov    rdi,r8
   14000ee1f:	call   0x140006f24
   14000ee24:	cmp    ebx,0xffffffff
   14000ee27:	jge    0x14000ee2d
   14000ee29:	xor    eax,eax
   14000ee2b:	jmp    0x14000ee40
   14000ee2d:	mov    r9,QWORD PTR [rsp+0x70]
   14000ee32:	mov    r8d,ebx
   14000ee35:	mov    rdx,rdi
   14000ee38:	mov    ecx,esi
   14000ee3a:	call   QWORD PTR [rip+0x76f0]        # 0x140016530
   14000ee40:	cmp    BYTE PTR [rsp+0x38],0x0
   14000ee45:	je     0x14000ee53
   14000ee47:	mov    rcx,QWORD PTR [rsp+0x30]
   14000ee4c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000ee53:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ee58:	mov    rsi,QWORD PTR [rsp+0x58]
   14000ee5d:	add    rsp,0x40
   14000ee61:	pop    rdi
   14000ee62:	ret    
   14000ee63:	int3   
   14000ee64:	int3   
   14000ee65:	int3   
   14000ee66:	int3   
   14000ee67:	int3   
   14000ee68:	int3   
   14000ee69:	int3   
   14000ee6a:	int3   
   14000ee6b:	int3   
   14000ee6c:	xor    r8d,r8d
   14000ee6f:	mov    eax,r8d
   14000ee72:	test   rdx,rdx
   14000ee75:	je     0x14000ee89
   14000ee77:	cmp    WORD PTR [rcx],r8w
   14000ee7b:	je     0x14000ee89
   14000ee7d:	inc    rax
   14000ee80:	add    rcx,0x2
   14000ee84:	cmp    rax,rdx
   14000ee87:	jb     0x14000ee77
   14000ee89:	repz ret 
   14000ee8b:	int3   
   14000ee8c:	int3   
   14000ee8d:	int3   
   14000ee8e:	int3   
   14000ee8f:	int3   
   14000ee90:	int3   
   14000ee91:	int3   
   14000ee92:	int3   
   14000ee93:	int3   
   14000ee94:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee99:	mov    QWORD PTR [rsp+0x10],rdi
   14000ee9e:	push   r14
   14000eea0:	sub    rsp,0x20
   14000eea4:	test   ecx,ecx
   14000eea6:	js     0x14000ef17
   14000eea8:	cmp    ecx,DWORD PTR [rip+0x5952]        # 0x140014800
   14000eeae:	jae    0x14000ef17
   14000eeb0:	movsxd rbx,ecx
   14000eeb3:	lea    r14,[rip+0x5966]        # 0x140014820
   14000eeba:	mov    rdi,rbx
   14000eebd:	and    ebx,0x1f
   14000eec0:	sar    rdi,0x5
   14000eec4:	imul   rbx,rbx,0x38
   14000eec8:	mov    rax,QWORD PTR [r14+rdi*8]
   14000eecc:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000eed1:	je     0x14000ef17
   14000eed3:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   14000eed8:	je     0x14000ef17
   14000eeda:	cmp    DWORD PTR [rip+0x221f],0x1        # 0x140011100
   14000eee1:	jne    0x14000ef0a
   14000eee3:	test   ecx,ecx
   14000eee5:	je     0x14000eefd
   14000eee7:	dec    ecx
   14000eee9:	je     0x14000eef6
   14000eeeb:	dec    ecx
   14000eeed:	jne    0x14000ef0a
   14000eeef:	mov    ecx,0xfffffff4
   14000eef4:	jmp    0x14000ef02
   14000eef6:	mov    ecx,0xfffffff5
   14000eefb:	jmp    0x14000ef02
   14000eefd:	mov    ecx,0xfffffff6
   14000ef02:	xor    edx,edx
   14000ef04:	call   QWORD PTR [rip+0x75c6]        # 0x1400164d0
   14000ef0a:	mov    rax,QWORD PTR [r14+rdi*8]
   14000ef0e:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   14000ef13:	xor    eax,eax
   14000ef15:	jmp    0x14000ef2d
   14000ef17:	call   0x140009658
   14000ef1c:	mov    DWORD PTR [rax],0x9
   14000ef22:	call   0x140009680
   14000ef27:	and    DWORD PTR [rax],0x0
   14000ef2a:	or     eax,0xffffffff
   14000ef2d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ef32:	mov    rdi,QWORD PTR [rsp+0x38]
   14000ef37:	add    rsp,0x20
   14000ef3b:	pop    r14
   14000ef3d:	ret    
   14000ef3e:	int3   
   14000ef3f:	int3   
   14000ef40:	int3   
   14000ef41:	int3   
   14000ef42:	int3   
   14000ef43:	int3   
   14000ef44:	mov    rax,rsp
   14000ef47:	mov    QWORD PTR [rax+0x8],rbx
   14000ef4b:	mov    QWORD PTR [rax+0x10],rsi
   14000ef4f:	mov    QWORD PTR [rax+0x18],rdi
   14000ef53:	mov    QWORD PTR [rax+0x20],r12
   14000ef57:	push   r14
   14000ef59:	sub    rsp,0x20
   14000ef5d:	movsxd rbx,ecx
   14000ef60:	mov    r14,rbx
   14000ef63:	sar    r14,0x5
   14000ef67:	lea    r12,[rip+0x58b2]        # 0x140014820
   14000ef6e:	and    ebx,0x1f
   14000ef71:	imul   rbx,rbx,0x38
   14000ef75:	mov    rsi,QWORD PTR [r12+r14*8]
   14000ef79:	mov    edi,0x1
   14000ef7e:	test   BYTE PTR [rbx+rsi*1+0xc],0x4
   14000ef83:	jne    0x14000efbb
   14000ef85:	lea    ecx,[rdi+0x9]
   14000ef88:	call   0x14000b064
   14000ef8d:	nop
   14000ef8e:	test   BYTE PTR [rbx+rsi*1+0xc],0x4
   14000ef93:	jne    0x14000efb1
   14000ef95:	lea    rcx,[rbx+0x10]
   14000ef99:	add    rcx,rsi
   14000ef9c:	mov    edx,0xfa0
   14000efa1:	call   0x14000b308
   14000efa6:	neg    eax
   14000efa8:	sbb    edx,edx
   14000efaa:	and    edi,edx
   14000efac:	or     DWORD PTR [rbx+rsi*1+0xc],0x4
   14000efb1:	mov    ecx,0xa
   14000efb6:	call   0x14000b0b0
   14000efbb:	test   edi,edi
   14000efbd:	je     0x14000efd0
   14000efbf:	mov    rcx,QWORD PTR [r12+r14*8]
   14000efc3:	add    rcx,0x10
   14000efc7:	add    rcx,rbx
   14000efca:	call   QWORD PTR [rip+0x7698]        # 0x140016668
   14000efd0:	mov    eax,edi
   14000efd2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000efd7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000efdc:	mov    rdi,QWORD PTR [rsp+0x40]
   14000efe1:	mov    r12,QWORD PTR [rsp+0x48]
   14000efe6:	add    rsp,0x20
   14000efea:	pop    r14
   14000efec:	ret    
   14000efed:	int3   
   14000efee:	int3   
   14000efef:	int3   
   14000eff0:	int3   
   14000eff1:	int3   
   14000eff2:	int3   
   14000eff3:	int3   
   14000eff4:	movsxd rdx,ecx
   14000eff7:	lea    rcx,[rip+0x5822]        # 0x140014820
   14000effe:	mov    rax,rdx
   14000f001:	and    edx,0x1f
   14000f004:	sar    rax,0x5
   14000f008:	imul   rdx,rdx,0x38
   14000f00c:	mov    rax,QWORD PTR [rcx+rax*8]
   14000f010:	lea    rcx,[rdx+0x10]
   14000f014:	add    rcx,rax
   14000f017:	rex.W jmp QWORD PTR [rip+0x7522]        # 0x140016540
   14000f01e:	int3   
   14000f01f:	int3   
   14000f020:	int3   
   14000f021:	int3   
   14000f022:	int3   
   14000f023:	int3   
   14000f024:	rex push rbx
   14000f026:	sub    rsp,0x30
   14000f02a:	or     rbx,0xffffffffffffffff
   14000f02e:	cmp    ecx,ebx
   14000f030:	je     0x14000f09e
   14000f032:	cmp    ecx,0xfffffffe
   14000f035:	je     0x14000f096
   14000f037:	test   ecx,ecx
   14000f039:	js     0x14000f096
   14000f03b:	cmp    ecx,DWORD PTR [rip+0x57bf]        # 0x140014800
   14000f041:	jae    0x14000f096
   14000f043:	movsxd rdx,ecx
   14000f046:	lea    rcx,[rip+0x57d3]        # 0x140014820
   14000f04d:	mov    rax,rdx
   14000f050:	and    edx,0x1f
   14000f053:	sar    rax,0x5
   14000f057:	imul   rdx,rdx,0x38
   14000f05b:	mov    rax,QWORD PTR [rcx+rax*8]
   14000f05f:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   14000f064:	jne    0x14000f090
   14000f066:	call   0x140009680
   14000f06b:	and    DWORD PTR [rax],0x0
   14000f06e:	call   0x140009658
   14000f073:	and    QWORD PTR [rsp+0x20],0x0
   14000f079:	xor    r9d,r9d
   14000f07c:	xor    r8d,r8d
   14000f07f:	xor    edx,edx
   14000f081:	xor    ecx,ecx
   14000f083:	mov    DWORD PTR [rax],0x9
   14000f089:	call   0x14000974c
   14000f08e:	jmp    0x14000f0a9
   14000f090:	mov    rax,QWORD PTR [rax+rdx*1]
   14000f094:	jmp    0x14000f0ac
   14000f096:	call   0x140009680
   14000f09b:	and    DWORD PTR [rax],0x0
   14000f09e:	call   0x140009658
   14000f0a3:	mov    DWORD PTR [rax],0x9
   14000f0a9:	mov    rax,rbx
   14000f0ac:	add    rsp,0x30
   14000f0b0:	pop    rbx
   14000f0b1:	ret    
   14000f0b2:	int3   
   14000f0b3:	int3   
   14000f0b4:	int3   
   14000f0b5:	int3   
   14000f0b6:	int3   
   14000f0b7:	int3   
   14000f0b8:	mov    WORD PTR [rsp+0x8],cx
   14000f0bd:	sub    rsp,0x38
   14000f0c1:	mov    rcx,QWORD PTR [rip+0x33e0]        # 0x1400124a8
   14000f0c8:	cmp    rcx,0xfffffffffffffffe
   14000f0cc:	jne    0x14000f0da
   14000f0ce:	call   0x14000f70c
   14000f0d3:	mov    rcx,QWORD PTR [rip+0x33ce]        # 0x1400124a8
   14000f0da:	cmp    rcx,0xffffffffffffffff
   14000f0de:	jne    0x14000f0e7
   14000f0e0:	mov    eax,0xffff
   14000f0e5:	jmp    0x14000f10c
   14000f0e7:	and    QWORD PTR [rsp+0x20],0x0
   14000f0ed:	lea    r9,[rsp+0x48]
   14000f0f2:	lea    rdx,[rsp+0x40]
   14000f0f7:	mov    r8d,0x1
   14000f0fd:	call   QWORD PTR [rip+0x73c5]        # 0x1400164c8
   14000f103:	test   eax,eax
   14000f105:	je     0x14000f0e0
   14000f107:	movzx  eax,WORD PTR [rsp+0x40]
   14000f10c:	add    rsp,0x38
   14000f110:	ret    
   14000f111:	int3   
   14000f112:	int3   
   14000f113:	int3   
   14000f114:	int3   
   14000f115:	int3   
   14000f116:	int3   
   14000f117:	int3   
   14000f118:	sub    rsp,0x38
   14000f11c:	and    QWORD PTR [rsp+0x20],0x0
   14000f122:	call   0x14000f134
   14000f127:	add    rsp,0x38
   14000f12b:	ret    
   14000f12c:	int3   
   14000f12d:	int3   
   14000f12e:	int3   
   14000f12f:	int3   
   14000f130:	int3   
   14000f131:	int3   
   14000f132:	int3   
   14000f133:	int3   
   14000f134:	mov    QWORD PTR [rsp+0x8],rbx
   14000f139:	mov    QWORD PTR [rsp+0x18],rsi
   14000f13e:	mov    WORD PTR [rsp+0x20],r9w
   14000f144:	push   rbp
   14000f145:	push   rdi
   14000f146:	push   r14
   14000f148:	mov    rbp,rsp
   14000f14b:	sub    rsp,0x60
   14000f14f:	xor    r14d,r14d
   14000f152:	mov    rdi,r8
   14000f155:	mov    rsi,rdx
   14000f158:	mov    rbx,rcx
   14000f15b:	test   rdx,rdx
   14000f15e:	jne    0x14000f174
   14000f160:	test   r8,r8
   14000f163:	je     0x14000f174
   14000f165:	test   rcx,rcx
   14000f168:	je     0x14000f16d
   14000f16a:	mov    DWORD PTR [rcx],r14d
   14000f16d:	xor    eax,eax
   14000f16f:	jmp    0x14000f20c
   14000f174:	test   rcx,rcx
   14000f177:	je     0x14000f17c
   14000f179:	or     DWORD PTR [rcx],0xffffffff
   14000f17c:	cmp    r8,0x7fffffff
   14000f183:	jbe    0x14000f1a9
   14000f185:	call   0x140009658
   14000f18a:	mov    ebx,0x16
   14000f18f:	xor    r9d,r9d
   14000f192:	xor    r8d,r8d
   14000f195:	xor    edx,edx
   14000f197:	xor    ecx,ecx
   14000f199:	mov    DWORD PTR [rax],ebx
   14000f19b:	mov    QWORD PTR [rsp+0x20],r14
   14000f1a0:	call   0x14000974c
   14000f1a5:	mov    eax,ebx
   14000f1a7:	jmp    0x14000f20c
   14000f1a9:	mov    rdx,QWORD PTR [rbp+0x40]
   14000f1ad:	lea    rcx,[rbp-0x20]
   14000f1b1:	call   0x140006f24
   14000f1b6:	mov    r11,QWORD PTR [rbp-0x20]
   14000f1ba:	cmp    DWORD PTR [r11+0x14],r14d
   14000f1be:	jne    0x14000f28a
   14000f1c4:	movzx  eax,WORD PTR [rbp+0x38]
   14000f1c8:	mov    ecx,0xff
   14000f1cd:	cmp    ax,cx
   14000f1d0:	jbe    0x14000f221
   14000f1d2:	test   rsi,rsi
   14000f1d5:	je     0x14000f1e9
   14000f1d7:	test   rdi,rdi
   14000f1da:	je     0x14000f1e9
   14000f1dc:	mov    r8,rdi
   14000f1df:	xor    edx,edx
   14000f1e1:	mov    rcx,rsi
   14000f1e4:	call   0x14000c460
   14000f1e9:	call   0x140009658
   14000f1ee:	mov    DWORD PTR [rax],0x2a
   14000f1f4:	call   0x140009658
   14000f1f9:	mov    eax,DWORD PTR [rax]
   14000f1fb:	cmp    BYTE PTR [rbp-0x8],r14b
   14000f1ff:	je     0x14000f20c
   14000f201:	mov    rcx,QWORD PTR [rbp-0x10]
   14000f205:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000f20c:	lea    r11,[rsp+0x60]
   14000f211:	mov    rbx,QWORD PTR [r11+0x20]
   14000f215:	mov    rsi,QWORD PTR [r11+0x30]
   14000f219:	mov    rsp,r11
   14000f21c:	pop    r14
   14000f21e:	pop    rdi
   14000f21f:	pop    rbp
   14000f220:	ret    
   14000f221:	test   rsi,rsi
   14000f224:	je     0x14000f265
   14000f226:	test   rdi,rdi
   14000f229:	jne    0x14000f263
   14000f22b:	call   0x140009658
   14000f230:	lea    ebx,[rdi+0x22]
   14000f233:	xor    r9d,r9d
   14000f236:	xor    r8d,r8d
   14000f239:	xor    edx,edx
   14000f23b:	xor    ecx,ecx
   14000f23d:	mov    DWORD PTR [rax],ebx
   14000f23f:	mov    QWORD PTR [rsp+0x20],r14
   14000f244:	call   0x14000974c
   14000f249:	cmp    BYTE PTR [rbp-0x8],r14b
   14000f24d:	je     0x14000f1a5
   14000f253:	mov    rcx,QWORD PTR [rbp-0x10]
   14000f257:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14000f25e:	jmp    0x14000f1a5
   14000f263:	mov    BYTE PTR [rsi],al
   14000f265:	test   rbx,rbx
   14000f268:	je     0x14000f270
   14000f26a:	mov    DWORD PTR [rbx],0x1
   14000f270:	cmp    BYTE PTR [rbp-0x8],r14b
   14000f274:	je     0x14000f16d
   14000f27a:	mov    rax,QWORD PTR [rbp-0x10]
   14000f27e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000f285:	jmp    0x14000f16d
   14000f28a:	lea    rax,[rbp+0x28]
   14000f28e:	mov    DWORD PTR [rbp+0x28],r14d
   14000f292:	mov    ecx,DWORD PTR [r11+0x4]
   14000f296:	mov    QWORD PTR [rsp+0x38],rax
   14000f29b:	mov    QWORD PTR [rsp+0x30],r14
   14000f2a0:	lea    r8,[rbp+0x38]
   14000f2a4:	mov    r9d,0x1
   14000f2aa:	xor    edx,edx
   14000f2ac:	mov    DWORD PTR [rsp+0x28],edi
   14000f2b0:	mov    QWORD PTR [rsp+0x20],rsi
   14000f2b5:	call   QWORD PTR [rip+0x7265]        # 0x140016520
   14000f2bb:	test   eax,eax
   14000f2bd:	je     0x14000f2d2
   14000f2bf:	cmp    DWORD PTR [rbp+0x28],r14d
   14000f2c3:	jne    0x14000f1e9
   14000f2c9:	test   rbx,rbx
   14000f2cc:	je     0x14000f270
   14000f2ce:	mov    DWORD PTR [rbx],eax
   14000f2d0:	jmp    0x14000f270
   14000f2d2:	call   QWORD PTR [rip+0x7180]        # 0x140016458
   14000f2d8:	cmp    eax,0x7a
   14000f2db:	jne    0x14000f1e9
   14000f2e1:	test   rsi,rsi
   14000f2e4:	je     0x14000f2f8
   14000f2e6:	test   rdi,rdi
   14000f2e9:	je     0x14000f2f8
   14000f2eb:	mov    r8,rdi
   14000f2ee:	xor    edx,edx
   14000f2f0:	mov    rcx,rsi
   14000f2f3:	call   0x14000c460
   14000f2f8:	call   0x140009658
   14000f2fd:	mov    ebx,0x22
   14000f302:	xor    r9d,r9d
   14000f305:	xor    r8d,r8d
   14000f308:	xor    edx,edx
   14000f30a:	xor    ecx,ecx
   14000f30c:	mov    DWORD PTR [rax],ebx
   14000f30e:	mov    QWORD PTR [rsp+0x20],r14
   14000f313:	call   0x14000974c
   14000f318:	cmp    BYTE PTR [rbp-0x8],r14b
   14000f31c:	je     0x14000f1a5
   14000f322:	mov    rax,QWORD PTR [rbp-0x10]
   14000f326:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14000f32d:	jmp    0x14000f1a5
   14000f332:	int3   
   14000f333:	int3   
   14000f334:	int3   
   14000f335:	int3   
   14000f336:	int3   
   14000f337:	int3   
   14000f338:	mov    QWORD PTR [rsp+0x8],rbx
   14000f33d:	mov    QWORD PTR [rsp+0x18],rbp
   14000f342:	push   rsi
   14000f343:	push   rdi
   14000f344:	push   r14
   14000f346:	sub    rsp,0x20
   14000f34a:	mov    r14d,ecx
   14000f34d:	mov    rcx,rdx
   14000f350:	mov    rbx,rdx
   14000f353:	call   0x14000cb3c
   14000f358:	mov    edx,DWORD PTR [rbx+0x18]
   14000f35b:	movsxd rsi,eax
   14000f35e:	test   dl,0x82
   14000f361:	jne    0x14000f37c
   14000f363:	call   0x140009658
   14000f368:	mov    DWORD PTR [rax],0x9
   14000f36e:	or     DWORD PTR [rbx+0x18],0x20
   14000f372:	mov    eax,0xffff
   14000f377:	jmp    0x14000f4b0
   14000f37c:	test   dl,0x40
   14000f37f:	je     0x14000f38e
   14000f381:	call   0x140009658
   14000f386:	mov    DWORD PTR [rax],0x22
   14000f38c:	jmp    0x14000f36e
   14000f38e:	xor    edi,edi
   14000f390:	test   dl,0x1
   14000f393:	je     0x14000f3ae
   14000f395:	mov    DWORD PTR [rbx+0x8],edi
   14000f398:	test   dl,0x10
   14000f39b:	je     0x14000f427
   14000f3a1:	mov    rax,QWORD PTR [rbx+0x10]
   14000f3a5:	and    edx,0xfffffffe
   14000f3a8:	mov    QWORD PTR [rbx],rax
   14000f3ab:	mov    DWORD PTR [rbx+0x18],edx
   14000f3ae:	mov    eax,DWORD PTR [rbx+0x18]
   14000f3b1:	mov    DWORD PTR [rbx+0x8],edi
   14000f3b4:	and    eax,0xffffffef
   14000f3b7:	or     eax,0x2
   14000f3ba:	mov    DWORD PTR [rbx+0x18],eax
   14000f3bd:	test   eax,0x10c
   14000f3c2:	jne    0x14000f3ef
   14000f3c4:	lea    rax,[rip+0x2645]        # 0x140011a10
   14000f3cb:	cmp    rbx,rax
   14000f3ce:	je     0x14000f3dc
   14000f3d0:	lea    rax,[rip+0x2669]        # 0x140011a40
   14000f3d7:	cmp    rbx,rax
   14000f3da:	jne    0x14000f3e7
   14000f3dc:	mov    ecx,esi
   14000f3de:	call   0x14000cb78
   14000f3e3:	test   eax,eax
   14000f3e5:	jne    0x14000f3ef
   14000f3e7:	mov    rcx,rbx
   14000f3ea:	call   0x14000d5d8
   14000f3ef:	test   DWORD PTR [rbx+0x18],0x108
   14000f3f6:	je     0x14000f488
   14000f3fc:	mov    ebp,DWORD PTR [rbx]
   14000f3fe:	mov    rdx,QWORD PTR [rbx+0x10]
   14000f402:	sub    ebp,DWORD PTR [rbx+0x10]
   14000f405:	lea    rax,[rdx+0x2]
   14000f409:	mov    QWORD PTR [rbx],rax
   14000f40c:	mov    eax,DWORD PTR [rbx+0x24]
   14000f40f:	sub    eax,0x2
   14000f412:	mov    DWORD PTR [rbx+0x8],eax
   14000f415:	test   ebp,ebp
   14000f417:	jle    0x14000f432
   14000f419:	mov    r8d,ebp
   14000f41c:	mov    ecx,esi
   14000f41e:	call   0x14000cbf0
   14000f423:	mov    edi,eax
   14000f425:	jmp    0x14000f47e
   14000f427:	or     edx,0x20
   14000f42a:	mov    DWORD PTR [rbx+0x18],edx
   14000f42d:	jmp    0x14000f372
   14000f432:	cmp    esi,0xffffffff
   14000f435:	je     0x14000f45a
   14000f437:	cmp    esi,0xfffffffe
   14000f43a:	je     0x14000f45a
   14000f43c:	mov    rcx,rsi
   14000f43f:	mov    rax,rsi
   14000f442:	lea    rdx,[rip+0x53d7]        # 0x140014820
   14000f449:	and    ecx,0x1f
   14000f44c:	sar    rax,0x5
   14000f450:	imul   rcx,rcx,0x38
   14000f454:	add    rcx,QWORD PTR [rdx+rax*8]
   14000f458:	jmp    0x14000f461
   14000f45a:	lea    rcx,[rip+0x1cd7]        # 0x140011138
   14000f461:	test   BYTE PTR [rcx+0x8],0x20
   14000f465:	je     0x14000f47e
   14000f467:	xor    edx,edx
   14000f469:	mov    ecx,esi
   14000f46b:	lea    r8d,[rdx+0x2]
   14000f46f:	call   0x14000d434
   14000f474:	cmp    rax,0xffffffffffffffff
   14000f478:	je     0x14000f36e
   14000f47e:	mov    rax,QWORD PTR [rbx+0x10]
   14000f482:	mov    WORD PTR [rax],r14w
   14000f486:	jmp    0x14000f4a4
   14000f488:	mov    ebp,0x2
   14000f48d:	lea    rdx,[rsp+0x48]
   14000f492:	mov    ecx,esi
   14000f494:	mov    r8d,ebp
   14000f497:	mov    WORD PTR [rsp+0x48],r14w
   14000f49d:	call   0x14000cbf0
   14000f4a2:	mov    edi,eax
   14000f4a4:	cmp    edi,ebp
   14000f4a6:	jne    0x14000f36e
   14000f4ac:	movzx  eax,r14w
   14000f4b0:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f4b5:	mov    rbp,QWORD PTR [rsp+0x50]
   14000f4ba:	add    rsp,0x20
   14000f4be:	pop    r14
   14000f4c0:	pop    rdi
   14000f4c1:	pop    rsi
   14000f4c2:	ret    
   14000f4c3:	int3   
   14000f4c4:	int3   
   14000f4c5:	int3   
   14000f4c6:	int3   
   14000f4c7:	int3   
   14000f4c8:	int3   
   14000f4c9:	int3   
   14000f4ca:	int3   
   14000f4cb:	int3   
   14000f4cc:	mov    QWORD PTR [rsp+0x18],rbx
   14000f4d1:	mov    DWORD PTR [rsp+0x8],ecx
   14000f4d5:	push   rsi
   14000f4d6:	push   rdi
   14000f4d7:	push   r14
   14000f4d9:	sub    rsp,0x30
   14000f4dd:	movsxd rdi,ecx
   14000f4e0:	cmp    edi,0xfffffffe
   14000f4e3:	jne    0x14000f4f5
   14000f4e5:	call   0x140009658
   14000f4ea:	mov    DWORD PTR [rax],0x9
   14000f4f0:	jmp    0x14000f5a2
   14000f4f5:	test   ecx,ecx
   14000f4f7:	js     0x14000f582
   14000f4fd:	cmp    edi,DWORD PTR [rip+0x52fd]        # 0x140014800
   14000f503:	jae    0x14000f582
   14000f505:	mov    rbx,rdi
   14000f508:	mov    rsi,rdi
   14000f50b:	sar    rsi,0x5
   14000f50f:	lea    r14,[rip+0x530a]        # 0x140014820
   14000f516:	and    ebx,0x1f
   14000f519:	imul   rbx,rbx,0x38
   14000f51d:	mov    rax,QWORD PTR [r14+rsi*8]
   14000f521:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   14000f526:	and    ecx,0x1
   14000f529:	je     0x14000f582
   14000f52b:	mov    ecx,edi
   14000f52d:	call   0x14000ef44
   14000f532:	nop
   14000f533:	mov    rax,QWORD PTR [r14+rsi*8]
   14000f537:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   14000f53c:	je     0x14000f569
   14000f53e:	mov    ecx,edi
   14000f540:	call   0x14000f024
   14000f545:	mov    rcx,rax
   14000f548:	call   QWORD PTR [rip+0x6f72]        # 0x1400164c0
   14000f54e:	test   eax,eax
   14000f550:	jne    0x14000f55c
   14000f552:	call   QWORD PTR [rip+0x6f00]        # 0x140016458
   14000f558:	mov    ebx,eax
   14000f55a:	jmp    0x14000f55e
   14000f55c:	xor    ebx,ebx
   14000f55e:	test   ebx,ebx
   14000f560:	je     0x14000f577
   14000f562:	call   0x140009680
   14000f567:	mov    DWORD PTR [rax],ebx
   14000f569:	call   0x140009658
   14000f56e:	mov    DWORD PTR [rax],0x9
   14000f574:	or     ebx,0xffffffff
   14000f577:	mov    ecx,edi
   14000f579:	call   0x14000eff4
   14000f57e:	mov    eax,ebx
   14000f580:	jmp    0x14000f5a5
   14000f582:	call   0x140009658
   14000f587:	and    QWORD PTR [rsp+0x20],0x0
   14000f58d:	mov    DWORD PTR [rax],0x9
   14000f593:	xor    r9d,r9d
   14000f596:	xor    r8d,r8d
   14000f599:	xor    edx,edx
   14000f59b:	xor    ecx,ecx
   14000f59d:	call   0x14000974c
   14000f5a2:	or     eax,0xffffffff
   14000f5a5:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f5aa:	add    rsp,0x30
   14000f5ae:	pop    r14
   14000f5b0:	pop    rdi
   14000f5b1:	pop    rsi
   14000f5b2:	ret    
   14000f5b3:	int3   
   14000f5b4:	int3   
   14000f5b5:	int3   
   14000f5b6:	int3   
   14000f5b7:	int3   
   14000f5b8:	int3   
   14000f5b9:	int3   
   14000f5ba:	int3   
   14000f5bb:	int3   
   14000f5bc:	mov    QWORD PTR [rsp+0x10],rbx
   14000f5c1:	mov    QWORD PTR [rsp+0x8],rcx
   14000f5c6:	push   rdi
   14000f5c7:	sub    rsp,0x30
   14000f5cb:	mov    rbx,rcx
   14000f5ce:	or     edi,0xffffffff
   14000f5d1:	xor    eax,eax
   14000f5d3:	test   rcx,rcx
   14000f5d6:	setne  al
   14000f5d9:	test   eax,eax
   14000f5db:	jne    0x14000f601
   14000f5dd:	call   0x140009658
   14000f5e2:	mov    DWORD PTR [rax],0x16
   14000f5e8:	and    QWORD PTR [rsp+0x20],0x0
   14000f5ee:	xor    r9d,r9d
   14000f5f1:	xor    r8d,r8d
   14000f5f4:	xor    edx,edx
   14000f5f6:	xor    ecx,ecx
   14000f5f8:	call   0x14000974c
   14000f5fd:	mov    eax,edi
   14000f5ff:	jmp    0x14000f627
   14000f601:	test   BYTE PTR [rcx+0x18],0x40
   14000f605:	je     0x14000f60d
   14000f607:	and    DWORD PTR [rcx+0x18],0x0
   14000f60b:	jmp    0x14000f5fd
   14000f60d:	call   0x14000a858
   14000f612:	nop
   14000f613:	mov    rcx,rbx
   14000f616:	call   0x14000f638
   14000f61b:	mov    edi,eax
   14000f61d:	mov    rcx,rbx
   14000f620:	call   0x14000a8c4
   14000f625:	jmp    0x14000f5fd
   14000f627:	mov    rbx,QWORD PTR [rsp+0x48]
   14000f62c:	add    rsp,0x30
   14000f630:	pop    rdi
   14000f631:	ret    
   14000f632:	int3   
   14000f633:	int3   
   14000f634:	int3   
   14000f635:	int3   
   14000f636:	int3   
   14000f637:	int3   
   14000f638:	mov    QWORD PTR [rsp+0x8],rbx
   14000f63d:	push   rdi
   14000f63e:	sub    rsp,0x30
   14000f642:	or     edi,0xffffffff
   14000f645:	mov    rbx,rcx
   14000f648:	test   rcx,rcx
   14000f64b:	jne    0x14000f670
   14000f64d:	call   0x140009658
   14000f652:	and    QWORD PTR [rsp+0x20],rbx
   14000f657:	xor    r9d,r9d
   14000f65a:	xor    r8d,r8d
   14000f65d:	xor    edx,edx
   14000f65f:	xor    ecx,ecx
   14000f661:	mov    DWORD PTR [rax],0x16
   14000f667:	call   0x14000974c
   14000f66c:	or     eax,edi
   14000f66e:	jmp    0x14000f6b6
   14000f670:	test   BYTE PTR [rcx+0x18],0x83
   14000f674:	je     0x14000f6b0
   14000f676:	call   0x14000e750
   14000f67b:	mov    rcx,rbx
   14000f67e:	mov    edi,eax
   14000f680:	call   0x14000f910
   14000f685:	mov    rcx,rbx
   14000f688:	call   0x14000cb3c
   14000f68d:	mov    ecx,eax
   14000f68f:	call   0x14000f750
   14000f694:	test   eax,eax
   14000f696:	jns    0x14000f69d
   14000f698:	or     edi,0xffffffff
   14000f69b:	jmp    0x14000f6b0
   14000f69d:	mov    rcx,QWORD PTR [rbx+0x28]
   14000f6a1:	test   rcx,rcx
   14000f6a4:	je     0x14000f6b0
   14000f6a6:	call   0x14000b0d0
   14000f6ab:	and    QWORD PTR [rbx+0x28],0x0
   14000f6b0:	and    DWORD PTR [rbx+0x18],0x0
   14000f6b4:	mov    eax,edi
   14000f6b6:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f6bb:	add    rsp,0x30
   14000f6bf:	pop    rdi
   14000f6c0:	ret    
   14000f6c1:	int3   
   14000f6c2:	int3   
   14000f6c3:	int3   
   14000f6c4:	int3   
   14000f6c5:	int3   
   14000f6c6:	int3   
   14000f6c7:	int3   
   14000f6c8:	sub    rsp,0x28
   14000f6cc:	mov    rcx,QWORD PTR [rip+0x2dd5]        # 0x1400124a8
   14000f6d3:	cmp    rcx,0xffffffffffffffff
   14000f6d7:	je     0x14000f6e5
   14000f6d9:	cmp    rcx,0xfffffffffffffffe
   14000f6dd:	je     0x14000f6e5
   14000f6df:	call   QWORD PTR [rip+0x6dcb]        # 0x1400164b0
   14000f6e5:	mov    rcx,QWORD PTR [rip+0x2db4]        # 0x1400124a0
   14000f6ec:	cmp    rcx,0xffffffffffffffff
   14000f6f0:	je     0x14000f6fe
   14000f6f2:	cmp    rcx,0xfffffffffffffffe
   14000f6f6:	je     0x14000f6fe
   14000f6f8:	call   QWORD PTR [rip+0x6db2]        # 0x1400164b0
   14000f6fe:	add    rsp,0x28
   14000f702:	ret    
   14000f703:	int3   
   14000f704:	int3   
   14000f705:	int3   
   14000f706:	int3   
   14000f707:	int3   
   14000f708:	int3   
   14000f709:	int3   
   14000f70a:	int3   
   14000f70b:	int3   
   14000f70c:	sub    rsp,0x48
   14000f710:	and    QWORD PTR [rsp+0x30],0x0
   14000f716:	and    DWORD PTR [rsp+0x28],0x0
   14000f71b:	mov    r8d,0x3
   14000f721:	lea    rcx,[rip+0xffffffffffff3038]        # 0x140002760
   14000f728:	xor    r9d,r9d
   14000f72b:	mov    edx,0x40000000
   14000f730:	mov    DWORD PTR [rsp+0x20],r8d
   14000f735:	call   QWORD PTR [rip+0x6d7d]        # 0x1400164b8
   14000f73b:	mov    QWORD PTR [rip+0x2d66],rax        # 0x1400124a8
   14000f742:	add    rsp,0x48
   14000f746:	ret    
   14000f747:	int3   
   14000f748:	int3   
   14000f749:	int3   
   14000f74a:	int3   
   14000f74b:	int3   
   14000f74c:	int3   
   14000f74d:	int3   
   14000f74e:	int3   
   14000f74f:	int3   
   14000f750:	mov    QWORD PTR [rsp+0x18],rbx
   14000f755:	mov    QWORD PTR [rsp+0x20],rsi
   14000f75a:	mov    DWORD PTR [rsp+0x8],ecx
   14000f75e:	push   rdi
   14000f75f:	push   r14
   14000f761:	push   r15
   14000f763:	sub    rsp,0x30
   14000f767:	movsxd rbx,ecx
   14000f76a:	or     edi,0xffffffff
   14000f76d:	cmp    ebx,edi
   14000f76f:	jne    0x14000f789
   14000f771:	call   0x140009658
   14000f776:	mov    DWORD PTR [rax],0x9
   14000f77c:	call   0x140009680
   14000f781:	and    DWORD PTR [rax],0x0
   14000f784:	jmp    0x14000f832
   14000f789:	cmp    ebx,0xfffffffe
   14000f78c:	jne    0x14000f7a6
   14000f78e:	call   0x140009680
   14000f793:	and    DWORD PTR [rax],0x0
   14000f796:	call   0x140009658
   14000f79b:	mov    DWORD PTR [rax],0x9
   14000f7a1:	jmp    0x14000f832
   14000f7a6:	test   ecx,ecx
   14000f7a8:	js     0x14000f80a
   14000f7aa:	cmp    ebx,DWORD PTR [rip+0x5050]        # 0x140014800
   14000f7b0:	jae    0x14000f80a
   14000f7b2:	mov    rsi,rbx
   14000f7b5:	mov    r14,rbx
   14000f7b8:	sar    r14,0x5
   14000f7bc:	lea    r15,[rip+0x505d]        # 0x140014820
   14000f7c3:	and    esi,0x1f
   14000f7c6:	imul   rsi,rsi,0x38
   14000f7ca:	mov    rax,QWORD PTR [r15+r14*8]
   14000f7ce:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   14000f7d3:	and    ecx,0x1
   14000f7d6:	je     0x14000f80a
   14000f7d8:	mov    ecx,ebx
   14000f7da:	call   0x14000ef44
   14000f7df:	nop
   14000f7e0:	mov    rax,QWORD PTR [r15+r14*8]
   14000f7e4:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   14000f7e9:	je     0x14000f7f6
   14000f7eb:	mov    ecx,ebx
   14000f7ed:	call   0x14000f850
   14000f7f2:	mov    edi,eax
   14000f7f4:	jmp    0x14000f801
   14000f7f6:	call   0x140009658
   14000f7fb:	mov    DWORD PTR [rax],0x9
   14000f801:	mov    ecx,ebx
   14000f803:	call   0x14000eff4
   14000f808:	jmp    0x14000f832
   14000f80a:	call   0x140009680
   14000f80f:	and    DWORD PTR [rax],0x0
   14000f812:	call   0x140009658
   14000f817:	and    QWORD PTR [rsp+0x20],0x0
   14000f81d:	mov    DWORD PTR [rax],0x9
   14000f823:	xor    r9d,r9d
   14000f826:	xor    r8d,r8d
   14000f829:	xor    edx,edx
   14000f82b:	xor    ecx,ecx
   14000f82d:	call   0x14000974c
   14000f832:	mov    eax,edi
   14000f834:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f839:	mov    rsi,QWORD PTR [rsp+0x68]
   14000f83e:	add    rsp,0x30
   14000f842:	pop    r15
   14000f844:	pop    r14
   14000f846:	pop    rdi
   14000f847:	ret    
   14000f848:	int3   
   14000f849:	int3   
   14000f84a:	int3   
   14000f84b:	int3   
   14000f84c:	int3   
   14000f84d:	int3   
   14000f84e:	int3   
   14000f84f:	int3   
   14000f850:	mov    QWORD PTR [rsp+0x8],rbx
   14000f855:	push   rdi
   14000f856:	sub    rsp,0x20
   14000f85a:	movsxd rdi,ecx
   14000f85d:	mov    ecx,edi
   14000f85f:	call   0x14000f024
   14000f864:	cmp    rax,0xffffffffffffffff
   14000f868:	je     0x14000f8c0
   14000f86a:	mov    rax,QWORD PTR [rip+0x4faf]        # 0x140014820
   14000f871:	mov    ecx,0x2
   14000f876:	cmp    edi,0x1
   14000f879:	jne    0x14000f881
   14000f87b:	test   BYTE PTR [rax+0x78],dil
   14000f87f:	jne    0x14000f88b
   14000f881:	cmp    edi,ecx
   14000f883:	jne    0x14000f8a2
   14000f885:	test   BYTE PTR [rax+0x40],0x1
   14000f889:	je     0x14000f8a2
   14000f88b:	call   0x14000f024
   14000f890:	mov    ecx,0x1
   14000f895:	mov    rbx,rax
   14000f898:	call   0x14000f024
   14000f89d:	cmp    rax,rbx
   14000f8a0:	je     0x14000f8c0
   14000f8a2:	mov    ecx,edi
   14000f8a4:	call   0x14000f024
   14000f8a9:	mov    rcx,rax
   14000f8ac:	call   QWORD PTR [rip+0x6bfe]        # 0x1400164b0
   14000f8b2:	test   eax,eax
   14000f8b4:	jne    0x14000f8c0
   14000f8b6:	call   QWORD PTR [rip+0x6b9c]        # 0x140016458
   14000f8bc:	mov    ebx,eax
   14000f8be:	jmp    0x14000f8c2
   14000f8c0:	xor    ebx,ebx
   14000f8c2:	mov    ecx,edi
   14000f8c4:	call   0x14000ee94
   14000f8c9:	mov    r11,rdi
   14000f8cc:	mov    rcx,rdi
   14000f8cf:	sar    rcx,0x5
   14000f8d3:	and    r11d,0x1f
   14000f8d7:	lea    rdx,[rip+0x4f42]        # 0x140014820
   14000f8de:	mov    rcx,QWORD PTR [rdx+rcx*8]
   14000f8e2:	imul   r11,r11,0x38
   14000f8e6:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   14000f8ec:	test   ebx,ebx
   14000f8ee:	je     0x14000f8fc
   14000f8f0:	mov    ecx,ebx
   14000f8f2:	call   0x1400096a8
   14000f8f7:	or     eax,0xffffffff
   14000f8fa:	jmp    0x14000f8fe
   14000f8fc:	xor    eax,eax
   14000f8fe:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f903:	add    rsp,0x20
   14000f907:	pop    rdi
   14000f908:	ret    
   14000f909:	int3   
   14000f90a:	int3   
   14000f90b:	int3   
   14000f90c:	int3   
   14000f90d:	int3   
   14000f90e:	int3   
   14000f90f:	int3   
   14000f910:	rex push rbx
   14000f912:	sub    rsp,0x20
   14000f916:	test   BYTE PTR [rcx+0x18],0x83
   14000f91a:	mov    rbx,rcx
   14000f91d:	je     0x14000f941
   14000f91f:	test   BYTE PTR [rcx+0x18],0x8
   14000f923:	je     0x14000f941
   14000f925:	mov    rcx,QWORD PTR [rcx+0x10]
   14000f929:	call   0x14000b0d0
   14000f92e:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   14000f935:	xor    eax,eax
   14000f937:	mov    QWORD PTR [rbx],rax
   14000f93a:	mov    QWORD PTR [rbx+0x10],rax
   14000f93e:	mov    DWORD PTR [rbx+0x8],eax
   14000f941:	add    rsp,0x20
   14000f945:	pop    rbx
   14000f946:	ret    
   14000f947:	int3   
   14000f948:	int3   
   14000f949:	int3   
   14000f94a:	int3   
   14000f94b:	int3   
   14000f94c:	int3   
   14000f94d:	int3   
   14000f94e:	int3   
   14000f94f:	int3   
   14000f950:	sub    rsp,0x38
   14000f954:	mov    QWORD PTR [rsp+0x20],r9
   14000f959:	xor    r9d,r9d
   14000f95c:	call   0x14000f96c
   14000f961:	add    rsp,0x38
   14000f965:	ret    
   14000f966:	int3   
   14000f967:	int3   
   14000f968:	int3   
   14000f969:	int3   
   14000f96a:	int3   
   14000f96b:	int3   
   14000f96c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f971:	push   rdi
   14000f972:	sub    rsp,0x60
   14000f976:	mov    r10,r9
   14000f979:	mov    rax,r8
   14000f97c:	mov    rdi,rcx
   14000f97f:	test   r8,r8
   14000f982:	jne    0x14000f9a9
   14000f984:	call   0x140009658
   14000f989:	and    QWORD PTR [rsp+0x20],0x0
   14000f98f:	xor    r9d,r9d
   14000f992:	xor    r8d,r8d
   14000f995:	xor    edx,edx
   14000f997:	xor    ecx,ecx
   14000f999:	mov    DWORD PTR [rax],0x16
   14000f99f:	call   0x14000974c
   14000f9a4:	or     eax,0xffffffff
   14000f9a7:	jmp    0x14000fa11
   14000f9a9:	test   rdx,rdx
   14000f9ac:	je     0x14000f9b3
   14000f9ae:	test   rcx,rcx
   14000f9b1:	je     0x14000f984
   14000f9b3:	mov    r9,QWORD PTR [rsp+0x90]
   14000f9bb:	mov    ecx,0x7fffffff
   14000f9c0:	mov    r8,r10
   14000f9c3:	cmp    rdx,rcx
   14000f9c6:	mov    DWORD PTR [rsp+0x48],0x42
   14000f9ce:	mov    QWORD PTR [rsp+0x40],rdi
   14000f9d3:	cmova  edx,ecx
   14000f9d6:	lea    rcx,[rsp+0x30]
   14000f9db:	mov    QWORD PTR [rsp+0x30],rdi
   14000f9e0:	mov    DWORD PTR [rsp+0x38],edx
   14000f9e4:	mov    rdx,rax
   14000f9e7:	call   0x14000dacc
   14000f9ec:	mov    ebx,eax
   14000f9ee:	test   rdi,rdi
   14000f9f1:	je     0x14000fa11
   14000f9f3:	dec    DWORD PTR [rsp+0x38]
   14000f9f7:	js     0x14000fa03
   14000f9f9:	mov    rax,QWORD PTR [rsp+0x30]
   14000f9fe:	mov    BYTE PTR [rax],0x0
   14000fa01:	jmp    0x14000fa0f
   14000fa03:	lea    rdx,[rsp+0x30]
   14000fa08:	xor    ecx,ecx
   14000fa0a:	call   0x140009838
   14000fa0f:	mov    eax,ebx
   14000fa11:	mov    rbx,QWORD PTR [rsp+0x70]
   14000fa16:	add    rsp,0x60
   14000fa1a:	pop    rdi
   14000fa1b:	ret    
   14000fa1c:	int3   
   14000fa1d:	int3   
   14000fa1e:	int3   
   14000fa1f:	int3   
   14000fa20:	int3   
   14000fa21:	int3   
   14000fa22:	int3   
   14000fa23:	int3   
   14000fa24:	int3   
   14000fa25:	int3   
   14000fa26:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000fa30:	sub    rsp,0x10
   14000fa34:	mov    QWORD PTR [rsp],r10
   14000fa38:	mov    QWORD PTR [rsp+0x8],r11
   14000fa3d:	xor    r11,r11
   14000fa40:	lea    r10,[rsp+0x18]
   14000fa45:	sub    r10,rax
   14000fa48:	cmovb  r10,r11
   14000fa4c:	mov    r11,QWORD PTR gs:0x10
   14000fa55:	cmp    r10,r11
   14000fa58:	jae    0x14000fa6f
   14000fa5a:	and    r10w,0xf000
   14000fa60:	lea    r11,[r11-0x1000]
   14000fa67:	test   BYTE PTR [r11],r11b
   14000fa6a:	cmp    r10,r11
   14000fa6d:	jne    0x14000fa60
   14000fa6f:	mov    r10,QWORD PTR [rsp]
   14000fa73:	mov    r11,QWORD PTR [rsp+0x8]
   14000fa78:	add    rsp,0x10
   14000fa7c:	ret    
   14000fa7d:	int3   
   14000fa7e:	int3   
   14000fa7f:	int3   
   14000fa80:	int3   
   14000fa81:	int3   
   14000fa82:	int3   
   14000fa83:	int3   
   14000fa84:	int3   
   14000fa85:	int3   
   14000fa86:	int3   
   14000fa87:	int3   
   14000fa88:	int3   
   14000fa89:	int3   
   14000fa8a:	int3   
   14000fa8b:	int3   
   14000fa8c:	int3   
   14000fa8d:	int3   
   14000fa8e:	int3   
   14000fa8f:	int3   
   14000fa90:	int3   
   14000fa91:	int3   
   14000fa92:	int3   
   14000fa93:	int3   
   14000fa94:	int3   
   14000fa95:	int3   
   14000fa96:	int3   
   14000fa97:	int3   
   14000fa98:	int3   
   14000fa99:	int3   
   14000fa9a:	int3   
   14000fa9b:	int3   
   14000fa9c:	int3   
   14000fa9d:	int3   
   14000fa9e:	int3   
   14000fa9f:	int3   
   14000faa0:	int3   
   14000faa1:	int3   
   14000faa2:	int3   
   14000faa3:	int3   
   14000faa4:	int3   
   14000faa5:	int3   
   14000faa6:	int3   
   14000faa7:	int3   
   14000faa8:	int3   
   14000faa9:	int3   
   14000faaa:	int3   
   14000faab:	int3   
   14000faac:	int3   
   14000faad:	int3   
   14000faae:	int3   
   14000faaf:	int3   
   14000fab0:	int3   
   14000fab1:	int3   
   14000fab2:	int3   
   14000fab3:	int3   
   14000fab4:	int3   
   14000fab5:	int3   
   14000fab6:	int3   
   14000fab7:	int3   
   14000fab8:	int3   
   14000fab9:	int3   
   14000faba:	int3   
   14000fabb:	int3   
   14000fabc:	int3   
   14000fabd:	int3   
   14000fabe:	int3   
   14000fabf:	int3   
   14000fac0:	mov    r11,rcx
   14000fac3:	sub    rdx,rcx
   14000fac6:	jb     0x14000fc6e
   14000facc:	cmp    r8,0x4f
   14000fad0:	jae    0x14000fb2a
   14000fad2:	mov    r9,r8
   14000fad5:	shr    r9,0x3
   14000fad9:	je     0x14000faf1
   14000fadb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000fae0:	mov    rax,QWORD PTR [rdx+rcx*1]
   14000fae4:	add    rcx,0x8
   14000fae8:	dec    r9
   14000faeb:	mov    QWORD PTR [rcx-0x8],rax
   14000faef:	jne    0x14000fae0
   14000faf1:	and    r8,0x7
   14000faf5:	je     0x14000fb0e
   14000faf7:	nop    WORD PTR [rax+rax*1+0x0]
   14000fb00:	mov    al,BYTE PTR [rdx+rcx*1]
   14000fb03:	inc    rcx
   14000fb06:	dec    r8
   14000fb09:	mov    BYTE PTR [rcx-0x1],al
   14000fb0c:	jne    0x14000fb00
   14000fb0e:	mov    rax,r11
   14000fb11:	ret    
   14000fb12:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fb20:	nop
   14000fb21:	nop
   14000fb22:	nop
   14000fb23:	nop
   14000fb24:	nop
   14000fb25:	nop
   14000fb26:	nop
   14000fb27:	nop
   14000fb28:	nop
   14000fb29:	nop
   14000fb2a:	cmp    rdx,0x10
   14000fb2e:	jb     0x14000fba0
   14000fb30:	neg    ecx
   14000fb32:	and    ecx,0xf
   14000fb35:	je     0x14000fb45
   14000fb37:	sub    r8,rcx
   14000fb3a:	movdqu xmm0,XMMWORD PTR [rdx+r11*1]
   14000fb40:	movdqu XMMWORD PTR [r11],xmm0
   14000fb45:	add    rcx,r11
   14000fb48:	mov    r9,r8
   14000fb4b:	shr    r9,0x5
   14000fb4f:	cmp    r9,0x2000
   14000fb56:	ja     0x14000fbd2
   14000fb5c:	and    r8,0x1f
   14000fb60:	movdqu xmm0,XMMWORD PTR [rdx+rcx*1]
   14000fb65:	movdqu xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   14000fb6b:	add    rcx,0x20
   14000fb6f:	movdqa XMMWORD PTR [rcx-0x20],xmm0
   14000fb74:	movdqa XMMWORD PTR [rcx-0x10],xmm1
   14000fb79:	dec    r9
   14000fb7c:	jne    0x14000fb60
   14000fb7e:	jmp    0x14000fad2
   14000fb83:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fb92:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fba0:	test   cl,0xf
   14000fba3:	je     0x14000fb48
   14000fba5:	mov    al,BYTE PTR [rdx+rcx*1]
   14000fba8:	dec    r8
   14000fbab:	mov    BYTE PTR [rcx],al
   14000fbad:	inc    rcx
   14000fbb0:	test   cl,0xf
   14000fbb3:	jne    0x14000fba5
   14000fbb5:	jmp    0x14000fb48
   14000fbb7:	nop    WORD PTR [rax+rax*1+0x0]
   14000fbc0:	nop
   14000fbc1:	nop
   14000fbc2:	nop
   14000fbc3:	nop
   14000fbc4:	nop
   14000fbc5:	nop
   14000fbc6:	nop
   14000fbc7:	nop
   14000fbc8:	nop
   14000fbc9:	nop
   14000fbca:	nop
   14000fbcb:	nop
   14000fbcc:	nop
   14000fbcd:	nop
   14000fbce:	nop
   14000fbcf:	nop
   14000fbd0:	nop
   14000fbd1:	nop
   14000fbd2:	cmp    rdx,0x200
   14000fbd9:	jb     0x14000fb5c
   14000fbdb:	mov    eax,0x4
   14000fbe0:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000fbe4:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000fbe9:	add    rcx,0x80
   14000fbf0:	dec    eax
   14000fbf2:	jne    0x14000fbe0
   14000fbf4:	sub    rcx,0x200
   14000fbfb:	mov    eax,0x8
   14000fc00:	movdqu xmm0,XMMWORD PTR [rdx+rcx*1]
   14000fc05:	movdqu xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   14000fc0b:	movntdq XMMWORD PTR [rcx],xmm0
   14000fc0f:	movntdq XMMWORD PTR [rcx+0x10],xmm1
   14000fc14:	add    rcx,0x40
   14000fc18:	movdqu xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   14000fc1e:	movdqu xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   14000fc24:	movntdq XMMWORD PTR [rcx-0x20],xmm0
   14000fc29:	movntdq XMMWORD PTR [rcx-0x10],xmm1
   14000fc2e:	dec    eax
   14000fc30:	jne    0x14000fc00
   14000fc32:	sub    r8,0x200
   14000fc39:	cmp    r8,0x200
   14000fc40:	jae    0x14000fbdb
   14000fc42:	lock or BYTE PTR [rsp],0x0
   14000fc47:	mov    r9,r8
   14000fc4a:	shr    r9,0x5
   14000fc4e:	jne    0x14000fb5c
   14000fc54:	jmp    0x14000fad2
   14000fc59:	nop    DWORD PTR [rax+0x0]
   14000fc60:	nop
   14000fc61:	nop
   14000fc62:	nop
   14000fc63:	nop
   14000fc64:	nop
   14000fc65:	nop
   14000fc66:	nop
   14000fc67:	nop
   14000fc68:	nop
   14000fc69:	nop
   14000fc6a:	nop
   14000fc6b:	nop
   14000fc6c:	nop
   14000fc6d:	nop
   14000fc6e:	add    rcx,r8
   14000fc71:	cmp    r8,0x4f
   14000fc75:	jae    0x14000fcc6
   14000fc77:	mov    r9,r8
   14000fc7a:	shr    r9,0x3
   14000fc7e:	je     0x14000fc91
   14000fc80:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   14000fc85:	sub    rcx,0x8
   14000fc89:	dec    r9
   14000fc8c:	mov    QWORD PTR [rcx],rax
   14000fc8f:	jne    0x14000fc80
   14000fc91:	and    r8,0x7
   14000fc95:	je     0x14000fcae
   14000fc97:	nop    WORD PTR [rax+rax*1+0x0]
   14000fca0:	mov    al,BYTE PTR [rdx+rcx*1-0x1]
   14000fca4:	dec    rcx
   14000fca7:	dec    r8
   14000fcaa:	mov    BYTE PTR [rcx],al
   14000fcac:	jne    0x14000fca0
   14000fcae:	mov    rax,r11
   14000fcb1:	ret    
   14000fcb2:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fcc0:	nop
   14000fcc1:	nop
   14000fcc2:	nop
   14000fcc3:	nop
   14000fcc4:	nop
   14000fcc5:	nop
   14000fcc6:	cmp    rdx,0xfffffffffffffff0
   14000fcca:	ja     0x14000fd40
   14000fccc:	mov    rax,rcx
   14000fccf:	and    ecx,0xf
   14000fcd2:	je     0x14000fce5
   14000fcd4:	sub    r8,rcx
   14000fcd7:	neg    rcx
   14000fcda:	movdqu xmm0,XMMWORD PTR [rdx+rax*1-0x10]
   14000fce0:	movdqu XMMWORD PTR [rax-0x10],xmm0
   14000fce5:	add    rcx,rax
   14000fce8:	mov    r9,r8
   14000fceb:	shr    r9,0x5
   14000fcef:	cmp    r9,0x2000
   14000fcf6:	ja     0x14000fd72
   14000fcfc:	and    r8,0x1f
   14000fd00:	movdqu xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   14000fd06:	movdqu xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   14000fd0c:	sub    rcx,0x20
   14000fd10:	movdqa XMMWORD PTR [rcx+0x10],xmm0
   14000fd15:	movdqa XMMWORD PTR [rcx],xmm1
   14000fd19:	dec    r9
   14000fd1c:	jne    0x14000fd00
   14000fd1e:	jmp    0x14000fc77
   14000fd23:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fd32:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fd40:	test   cl,0xf
   14000fd43:	je     0x14000fce8
   14000fd45:	dec    rcx
   14000fd48:	mov    al,BYTE PTR [rdx+rcx*1]
   14000fd4b:	dec    r8
   14000fd4e:	mov    BYTE PTR [rcx],al
   14000fd50:	test   cl,0xf
   14000fd53:	jne    0x14000fd45
   14000fd55:	jmp    0x14000fce8
   14000fd57:	nop    WORD PTR [rax+rax*1+0x0]
   14000fd60:	nop
   14000fd61:	nop
   14000fd62:	nop
   14000fd63:	nop
   14000fd64:	nop
   14000fd65:	nop
   14000fd66:	nop
   14000fd67:	nop
   14000fd68:	nop
   14000fd69:	nop
   14000fd6a:	nop
   14000fd6b:	nop
   14000fd6c:	nop
   14000fd6d:	nop
   14000fd6e:	nop
   14000fd6f:	nop
   14000fd70:	nop
   14000fd71:	nop
   14000fd72:	cmp    rdx,0xfffffffffffffe00
   14000fd79:	ja     0x14000fcfc
   14000fd7b:	mov    eax,0x4
   14000fd80:	sub    rcx,0x80
   14000fd87:	prefetchnta BYTE PTR [rdx+rcx*1]
   14000fd8b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   14000fd90:	dec    eax
   14000fd92:	jne    0x14000fd80
   14000fd94:	add    rcx,0x200
   14000fd9b:	mov    eax,0x8
   14000fda0:	movdqu xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   14000fda6:	movdqu xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   14000fdac:	movntdq XMMWORD PTR [rcx-0x10],xmm0
   14000fdb1:	movntdq XMMWORD PTR [rcx-0x20],xmm1
   14000fdb6:	sub    rcx,0x40
   14000fdba:	movdqu xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   14000fdc0:	movdqu xmm1,XMMWORD PTR [rdx+rcx*1]
   14000fdc5:	movntdq XMMWORD PTR [rcx+0x10],xmm0
   14000fdca:	movntdq XMMWORD PTR [rcx],xmm1
   14000fdce:	dec    eax
   14000fdd0:	jne    0x14000fda0
   14000fdd2:	sub    r8,0x200
   14000fdd9:	cmp    r8,0x200
   14000fde0:	jae    0x14000fd7b
   14000fde2:	lock or BYTE PTR [rsp],0x0
   14000fde7:	mov    r9,r8
   14000fdea:	shr    r9,0x5
   14000fdee:	jne    0x14000fcfc
   14000fdf4:	jmp    0x14000fc77
   14000fdf9:	int3   
   14000fdfa:	int3   
   14000fdfb:	int3   
   14000fdfc:	int3   
   14000fdfd:	int3   
   14000fdfe:	int3   
   14000fdff:	int3   
   14000fe00:	int3   
   14000fe01:	int3   
   14000fe02:	int3   
   14000fe03:	int3   
   14000fe04:	int3   
   14000fe05:	int3   
   14000fe06:	rex push rbp
   14000fe08:	sub    rsp,0x20
   14000fe0c:	mov    rbp,rdx
   14000fe0f:	mov    rax,QWORD PTR [rcx]
   14000fe12:	mov    rdx,rcx
   14000fe15:	mov    ecx,DWORD PTR [rax]
   14000fe17:	call   0x1400072a4
   14000fe1c:	nop
   14000fe1d:	add    rsp,0x20
   14000fe21:	pop    rbp
   14000fe22:	ret    
   14000fe23:	int3   
   14000fe24:	int3   
   14000fe25:	int3   
   14000fe26:	int3   
   14000fe27:	int3   
   14000fe28:	int3   
   14000fe29:	int3   
   14000fe2a:	rex push rbp
   14000fe2c:	sub    rsp,0x30
   14000fe30:	mov    rbp,rdx
   14000fe33:	lea    rdx,[rip+0x1bd6]        # 0x140011a10
   14000fe3a:	mov    ecx,0x1
   14000fe3f:	call   0x14000a950
   14000fe44:	nop
   14000fe45:	add    rsp,0x30
   14000fe49:	pop    rbp
   14000fe4a:	ret    
   14000fe4b:	int3   
   14000fe4c:	int3   
   14000fe4d:	int3   
   14000fe4e:	int3   
   14000fe4f:	int3   
   14000fe50:	int3   
   14000fe51:	int3   
   14000fe52:	rex push rbp
   14000fe54:	sub    rsp,0x20
   14000fe58:	mov    rbp,rdx
   14000fe5b:	mov    ecx,0xd
   14000fe60:	call   0x14000b0b0
   14000fe65:	nop
   14000fe66:	add    rsp,0x20
   14000fe6a:	pop    rbp
   14000fe6b:	ret    
   14000fe6c:	int3   
   14000fe6d:	rex push rbp
   14000fe6f:	sub    rsp,0x20
   14000fe73:	mov    rbp,rdx
   14000fe76:	mov    ecx,0xc
   14000fe7b:	call   0x14000b0b0
   14000fe80:	nop
   14000fe81:	add    rsp,0x20
   14000fe85:	pop    rbp
   14000fe86:	ret    
   14000fe87:	int3   
   14000fe88:	int3   
   14000fe89:	int3   
   14000fe8a:	int3   
   14000fe8b:	int3   
   14000fe8c:	int3   
   14000fe8d:	int3   
   14000fe8e:	rex push rbp
   14000fe90:	sub    rsp,0x20
   14000fe94:	mov    rbp,rdx
   14000fe97:	cmp    DWORD PTR [rbp+0x80],0x0
   14000fe9e:	je     0x14000feab
   14000fea0:	mov    ecx,0x8
   14000fea5:	call   0x14000b0b0
   14000feaa:	nop
   14000feab:	add    rsp,0x20
   14000feaf:	pop    rbp
   14000feb0:	ret    
   14000feb1:	int3   
   14000feb2:	int3   
   14000feb3:	int3   
   14000feb4:	int3   
   14000feb5:	int3   
   14000feb6:	int3   
   14000feb7:	int3   
   14000feb8:	rex push rbp
   14000feba:	sub    rsp,0x20
   14000febe:	mov    rbp,rdx
   14000fec1:	mov    ecx,0xc
   14000fec6:	call   0x14000b0b0
   14000fecb:	nop
   14000fecc:	add    rsp,0x20
   14000fed0:	pop    rbp
   14000fed1:	ret    
   14000fed2:	int3   
   14000fed3:	int3   
   14000fed4:	int3   
   14000fed5:	int3   
   14000fed6:	int3   
   14000fed7:	int3   
   14000fed8:	int3   
   14000fed9:	rex push rbp
   14000fedb:	sub    rsp,0x20
   14000fedf:	mov    rbp,rdx
   14000fee2:	mov    ecx,0xd
   14000fee7:	call   0x14000b0b0
   14000feec:	nop
   14000feed:	add    rsp,0x20
   14000fef1:	pop    rbp
   14000fef2:	ret    
   14000fef3:	int3   
   14000fef4:	int3   
   14000fef5:	int3   
   14000fef6:	int3   
   14000fef7:	int3   
   14000fef8:	int3   
   14000fef9:	int3   
   14000fefa:	rex push rbp
   14000fefc:	sub    rsp,0x20
   14000ff00:	mov    rbp,rdx
   14000ff03:	mov    rcx,QWORD PTR [rip+0x1f36]        # 0x140011e40
   14000ff0a:	call   QWORD PTR [rip+0x6630]        # 0x140016540
   14000ff10:	nop
   14000ff11:	add    rsp,0x20
   14000ff15:	pop    rbp
   14000ff16:	ret    
   14000ff17:	int3   
   14000ff18:	int3   
   14000ff19:	int3   
   14000ff1a:	int3   
   14000ff1b:	int3   
   14000ff1c:	int3   
   14000ff1d:	int3   
   14000ff1e:	int3   
   14000ff1f:	int3   
   14000ff20:	rex push rbp
   14000ff22:	sub    rsp,0x20
   14000ff26:	mov    rbp,rdx
   14000ff29:	mov    rax,QWORD PTR [rcx]
   14000ff2c:	xor    ecx,ecx
   14000ff2e:	cmp    DWORD PTR [rax],0xc0000005
   14000ff34:	sete   cl
   14000ff37:	mov    eax,ecx
   14000ff39:	mov    eax,ecx
   14000ff3b:	add    rsp,0x20
   14000ff3f:	pop    rbp
   14000ff40:	ret    
   14000ff41:	int3   
   14000ff42:	int3   
   14000ff43:	int3   
   14000ff44:	int3   
   14000ff45:	int3   
   14000ff46:	int3   
   14000ff47:	int3   
   14000ff48:	rex push rbp
   14000ff4a:	sub    rsp,0x30
   14000ff4e:	mov    rbp,rdx
   14000ff51:	cmp    DWORD PTR [rbp+0x70],0x0
   14000ff55:	je     0x14000ff5f
   14000ff57:	xor    ecx,ecx
   14000ff59:	call   0x14000b0b0
   14000ff5e:	nop
   14000ff5f:	add    rsp,0x30
   14000ff63:	pop    rbp
   14000ff64:	ret    
   14000ff65:	int3   
   14000ff66:	int3   
   14000ff67:	int3   
   14000ff68:	int3   
   14000ff69:	int3   
   14000ff6a:	int3   
   14000ff6b:	int3   
   14000ff6c:	rex push rbp
   14000ff6e:	sub    rsp,0x30
   14000ff72:	mov    rbp,rdx
   14000ff75:	mov    ecx,DWORD PTR [rbp+0x60]
   14000ff78:	call   0x14000eff4
   14000ff7d:	nop
   14000ff7e:	add    rsp,0x30
   14000ff82:	pop    rbp
   14000ff83:	ret    
   14000ff84:	int3   
   14000ff85:	int3   
   14000ff86:	int3   
   14000ff87:	int3   
   14000ff88:	int3   
   14000ff89:	int3   
   14000ff8a:	int3   
   14000ff8b:	rex push rbp
   14000ff8d:	sub    rsp,0x20
   14000ff91:	mov    rbp,rdx
   14000ff94:	movsxd rcx,DWORD PTR [rbp+0x20]
   14000ff98:	mov    rax,rcx
   14000ff9b:	mov    rdx,QWORD PTR [rip+0x3846]        # 0x1400137e8
   14000ffa2:	mov    rdx,QWORD PTR [rdx+rcx*8]
   14000ffa6:	call   0x14000a950
   14000ffab:	nop
   14000ffac:	add    rsp,0x20
   14000ffb0:	pop    rbp
   14000ffb1:	ret    
   14000ffb2:	int3   
   14000ffb3:	rex push rbp
   14000ffb5:	sub    rsp,0x20
   14000ffb9:	mov    rbp,rdx
   14000ffbc:	mov    ecx,0x1
   14000ffc1:	call   0x14000b0b0
   14000ffc6:	nop
   14000ffc7:	add    rsp,0x20
   14000ffcb:	pop    rbp
   14000ffcc:	ret    
   14000ffcd:	int3   
   14000ffce:	int3   
   14000ffcf:	int3   
   14000ffd0:	int3   
   14000ffd1:	int3   
   14000ffd2:	int3   
   14000ffd3:	int3   
   14000ffd4:	rex push rbp
   14000ffd6:	sub    rsp,0x20
   14000ffda:	mov    rbp,rdx
   14000ffdd:	mov    ecx,0x1
   14000ffe2:	call   0x14000b0b0
   14000ffe7:	nop
   14000ffe8:	add    rsp,0x20
   14000ffec:	pop    rbp
   14000ffed:	ret    
   14000ffee:	int3   
   14000ffef:	int3   
   14000fff0:	int3   
   14000fff1:	int3   
   14000fff2:	int3   
   14000fff3:	int3   
   14000fff4:	int3   
   14000fff5:	rex push rbp
   14000fff7:	sub    rsp,0x20
   14000fffb:	mov    rbp,rdx
   14000fffe:	mov    ecx,0xa
   140010003:	call   0x14000b0b0
   140010008:	nop
   140010009:	add    rsp,0x20
   14001000d:	pop    rbp
   14001000e:	ret    
   14001000f:	int3   
   140010010:	int3   
   140010011:	int3   
   140010012:	int3   
   140010013:	int3   
   140010014:	int3   
   140010015:	int3   
   140010016:	rex push rbp
   140010018:	sub    rsp,0x30
   14001001c:	mov    rbp,rdx
   14001001f:	mov    rcx,QWORD PTR [rbp+0x40]
   140010023:	call   0x14000a8c4
   140010028:	nop
   140010029:	add    rsp,0x30
   14001002d:	pop    rbp
   14001002e:	ret    
   14001002f:	int3   
   140010030:	int3   
   140010031:	int3   
   140010032:	int3   
   140010033:	int3   
   140010034:	int3   
   140010035:	int3   
   140010036:	rex push rbp
   140010038:	sub    rsp,0x30
   14001003c:	mov    rbp,rdx
   14001003f:	mov    ecx,DWORD PTR [rbp+0x50]
   140010042:	call   0x14000eff4
   140010047:	nop
   140010048:	add    rsp,0x30
   14001004c:	pop    rbp
   14001004d:	ret    
   14001004e:	int3   
   14001004f:	int3   
   140010050:	sbb    DWORD PTR [rdi],ebx
   140010052:	add    eax,0x2e340d00
   140010057:	add    BYTE PTR [rip+0x6002c01],cl        # 0x146012c5e
   14001005d:	jo     0x14001005f
   14001005f:	add    BYTE PTR [rdi+rax*4],cl
   140010062:	add    BYTE PTR [rax],al
   140010064:	add    DWORD PTR [rax],eax
   140010066:	add    BYTE PTR [rax],al
   140010068:	xor    ebp,DWORD PTR [rax+rax*1+0x0]
   14001006c:	(bad)  
   14001006d:	ins    BYTE PTR es:[rdi],dx
   14001006e:	add    BYTE PTR [rax],al
   140010070:	(bad)  
   140010071:	inc    BYTE PTR [rax]
   140010073:	add    dh,cl
   140010075:	ins    BYTE PTR es:[rdi],dx
   140010076:	add    BYTE PTR [rax],al
   140010078:	push   rcx
   140010079:	add    DWORD PTR [rax],eax
   14001007b:	add    BYTE PTR [rcx],al
   14001007d:	adc    al,0x8
   14001007f:	add    BYTE PTR [rsp+riz*2],dl
   140010082:	(bad)  
   140010083:	add    BYTE PTR [rsp+rdx*2],dl
   140010086:	or     eax,0xc341400
   14001008b:	add    BYTE PTR [rdx+rdx*4],dl
   14001008e:	adc    BYTE PTR [rax+0x1],dh
   140010091:	adc    al,BYTE PTR [rsi]
   140010093:	add    BYTE PTR [rdx],dl
   140010095:	je     0x1400100a6
   140010097:	add    BYTE PTR [rdx],dl
   140010099:	xor    al,0xe
   14001009b:	add    BYTE PTR [rdx],dl
   14001009d:	mov    dl,0xb
   14001009f:	push   rax
   1400100a0:	adc    DWORD PTR [rdx],ebx
   1400100a2:	add    al,0x0
   1400100a4:	sbb    dl,BYTE PTR [rdx+0x16]
   1400100a7:	jo     0x1400100be
   1400100a9:	(bad)  
   1400100aa:	adc    al,0x30
   1400100ac:	je     0x140010057
   1400100ae:	add    BYTE PTR [rax],al
   1400100b0:	add    DWORD PTR [rax],eax
   1400100b2:	add    BYTE PTR [rax],al
   1400100b4:	(bad)  
   1400100b5:	jno    0x1400100b7
   1400100b7:	add    bh,bh
   1400100b9:	jno    0x1400100bb
   1400100bb:	add    BYTE PTR [rdx],ch
   1400100bd:	inc    BYTE PTR [rax]
   1400100bf:	add    BYTE PTR [rax],al
   1400100c1:	add    BYTE PTR [rax],al
   1400100c3:	add    BYTE PTR [rcx],dl
   1400100c5:	adc    eax,DWORD PTR [rax+rax*1]
   1400100c8:	adc    esi,DWORD PTR [rdi+rax*1]
   1400100cb:	add    BYTE PTR [rbx],dl
   1400100cd:	xor    cl,BYTE PTR [rdi]
   1400100cf:	jo     0x140010145
   1400100d1:	test   eax,0x20000
   1400100d6:	add    BYTE PTR [rax],al
   1400100d8:	enter  0x76,0x0
   1400100dc:	cmc    
   1400100dd:	jbe    0x1400100df
   1400100df:	add    BYTE PTR [rdx-0x2],dl
   1400100e2:	add    BYTE PTR [rax],al
   1400100e4:	add    BYTE PTR [rax],al
   1400100e6:	add    BYTE PTR [rax],al
   1400100e8:	(bad)  
   1400100e9:	ja     0x1400100eb
   1400100eb:	add    BYTE PTR [rsi],bh
   1400100ed:	ja     0x1400100ef
   1400100ef:	add    BYTE PTR [rbp-0x2],ch
   1400100f2:	add    BYTE PTR [rax],al
   1400100f4:	add    BYTE PTR [rax],al
   1400100f6:	add    BYTE PTR [rax],al
   1400100f8:	adc    DWORD PTR [rdx],ecx
   1400100fa:	add    al,0x0
   1400100fc:	or     dh,BYTE PTR [rsi+rax*1]
   1400100ff:	add    BYTE PTR [rdx],cl
   140010101:	xor    al,BYTE PTR [rsi]
   140010103:	jo     0x140010179
   140010105:	test   eax,0x20000
   14001010a:	add    BYTE PTR [rax],al
   14001010c:	(bad)  
   14001010d:	ja     0x14001010f
   14001010f:	add    al,ah
   140010111:	ja     0x140010113
   140010113:	add    BYTE PTR [rdx-0x2],dl
   140010116:	add    BYTE PTR [rax],al
   140010118:	add    BYTE PTR [rax],al
   14001011a:	add    BYTE PTR [rax],al
   14001011c:	cmc    
   14001011d:	ja     0x14001011f
   14001011f:	add    BYTE PTR [rax+rdi*2],bl
   140010122:	add    BYTE PTR [rax],al
   140010124:	ins    DWORD PTR es:[rdi],dx
   140010125:	inc    BYTE PTR [rax]
   140010127:	add    BYTE PTR [rax],al
   140010129:	add    BYTE PTR [rax],al
   14001012b:	add    BYTE PTR [rcx],al
   14001012d:	(bad)  
   14001012f:	add    BYTE PTR [rdi],cl
   140010131:	xor    al,0x6
   140010133:	add    BYTE PTR [rdi],cl
   140010135:	xor    cl,BYTE PTR [rbx]
   140010137:	jo     0x14001014a
   140010139:	sbb    al,0xa
   14001013b:	add    BYTE PTR [rsp+riz*2],bl
   14001013e:	ltr    WORD PTR [rsp+rsi*1]
   140010142:	(bad)  
   140010143:	add    BYTE PTR [rdx+rsi*2],bl
   140010146:	sbb    al,dh
   140010148:	(bad)  
   140010149:	loopne 0x14001015f
   14001014b:	rcl    BYTE PTR [rdx],1
   14001014d:	rcl    BYTE PTR [rax],0x70
   140010150:	je     0x1400100fb
   140010152:	add    BYTE PTR [rax],al
   140010154:	add    DWORD PTR [rax],eax
   140010156:	add    BYTE PTR [rax],al
   140010158:	sar    DWORD PTR [rdx+0x0],cl
   14001015b:	add    ah,bl
   14001015d:	jnp    0x14001015f
   14001015f:	add    BYTE PTR [rsi+0xfe],cl
   140010165:	add    BYTE PTR [rax],al
   140010167:	add    BYTE PTR [rcx],al
   140010169:	adc    eax,0x74150008
   14001016e:	or     eax,DWORD PTR [rax]
   140010170:	adc    eax,0x15000a54
   140010175:	xor    al,0x8
   140010177:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e112cf
   14001017d:	or     BYTE PTR [rcx],al
   14001017f:	add    BYTE PTR [rax],cl
   140010181:	rex.X add BYTE PTR [rax],al
   140010184:	add    DWORD PTR [rax],esp
   140010186:	or     eax,0x19c42000
   14001018b:	add    BYTE PTR [rax],ah
   14001018d:	je     0x1400101a7
   14001018f:	add    BYTE PTR [rax],ah
   140010191:	push   rsp
   140010192:	(bad)  
   140010193:	add    BYTE PTR [rax],ah
   140010195:	xor    al,0x16
   140010197:	add    BYTE PTR [rax],ah
   140010199:	add    DWORD PTR [rdx],edx
   14001019b:	add    BYTE PTR [rcx],bl
   14001019d:	lock (bad) 
   14001019f:	loopne 0x1400101b6
   1400101a1:	rol    BYTE PTR [rax],1
   1400101a3:	add    BYTE PTR [rcx],al
   1400101a5:	adc    BYTE PTR [rsi],al
   1400101a7:	add    BYTE PTR [rax],dl
   1400101a9:	or     eax,DWORD PTR fs:[rax]
   1400101ac:	adc    BYTE PTR [rdx+rcx*1],dh
   1400101af:	add    BYTE PTR [rax],dl
   1400101b1:	push   rdx
   1400101b2:	or     al,0x70
   1400101b4:	add    DWORD PTR [rcx],ebx
   1400101b6:	or     eax,DWORD PTR [rax]
   1400101b8:	sbb    DWORD PTR [rdi+rax*1+0x0],esi
   1400101bc:	sbb    DWORD PTR [rsi+rax*1+0x0],esp
   1400101c0:	sbb    DWORD PTR [rbp+rax*1+0x0],edx
   1400101c4:	sbb    DWORD PTR [rsp+rax*1],esi
   1400101c7:	add    BYTE PTR [rcx],bl
   1400101c9:	lock (bad) 
   1400101cb:	loopne 0x1400101e2
   1400101cd:	rol    BYTE PTR [rax],1
   1400101cf:	add    BYTE PTR [rcx],al
   1400101d1:	sbb    DWORD PTR [rdx],ecx
   1400101d3:	add    BYTE PTR [rcx],bl
   1400101d5:	in     al,0xb
   1400101d7:	add    BYTE PTR [rcx],bl
   1400101d9:	je     0x1400101e5
   1400101db:	add    BYTE PTR [rcx],bl
   1400101dd:	or     DWORD PTR fs:[rax],eax
   1400101e0:	sbb    DWORD PTR [rax+rcx*1],esi
   1400101e3:	add    BYTE PTR [rcx],bl
   1400101e5:	push   rdx
   1400101e6:	adc    eax,0x40d01f0
   1400101eb:	add    BYTE PTR [rip+0xd000934],cl        # 0x14d010b25
   1400101f1:	xor    al,BYTE PTR [rsi]
   1400101f3:	push   rax
   1400101f4:	add    DWORD PTR [rax],edx
   1400101f6:	add    al,BYTE PTR [rax]
   1400101f8:	adc    dl,dh
   1400101fa:	(bad)  
   1400101fb:	push   rax
   1400101fc:	adc    DWORD PTR [rsi],eax
   1400101fe:	add    al,BYTE PTR [rax]
   140010200:	(bad)  
   140010201:	xor    al,BYTE PTR [rdx]
   140010203:	xor    BYTE PTR [rcx+rbp*4+0x0],dh
   140010207:	add    BYTE PTR [rcx],al
   140010209:	add    BYTE PTR [rax],al
   14001020b:	add    BYTE PTR [rcx-0x77],bl
   14001020e:	add    BYTE PTR [rax],al
   140010210:	outs   dx,DWORD PTR ds:[rsi]
   140010211:	mov    DWORD PTR [rax],eax
   140010213:	add    BYTE PTR [rax+0xfe],bh
   140010219:	add    BYTE PTR [rax],al
   14001021b:	add    BYTE PTR [rcx],dl
   14001021d:	or     al,BYTE PTR [rax+rax*1]
   140010220:	or     dh,BYTE PTR [rdi+rax*1]
   140010223:	add    BYTE PTR [rdx],cl
   140010225:	xor    al,BYTE PTR [rsi]
   140010227:	jo     0x14001029d
   140010229:	test   eax,0x10000
   14001022e:	add    BYTE PTR [rax],al
   140010230:	xor    eax,0x8c00008d
   140010235:	lea    eax,[rax]
   140010237:	add    cl,bl
   140010239:	inc    BYTE PTR [rax]
   14001023b:	add    BYTE PTR [rax],al
   14001023d:	add    BYTE PTR [rax],al
   14001023f:	add    BYTE PTR [rcx],al
   140010241:	(bad)  
   140010242:	add    al,BYTE PTR [rax]
   140010244:	(bad)  
   140010245:	xor    al,BYTE PTR [rdx]
   140010247:	push   rax
   140010248:	adc    DWORD PTR [rcx],ebx
   14001024a:	or     al,BYTE PTR [rax]
   14001024c:	sbb    esp,esp
   14001024e:	or     eax,DWORD PTR [rax]
   140010250:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140010254:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140010258:	sbb    DWORD PTR [rax+rcx*1],esi
   14001025b:	add    BYTE PTR [rcx],bl
   14001025d:	push   rdx
   14001025e:	adc    eax,0xa974f0
   140010263:	add    BYTE PTR [rcx],al
   140010265:	add    BYTE PTR [rax],al
   140010267:	add    BYTE PTR [rax+0x5200008e],ah
   14001026d:	pop    QWORD PTR [rax]
   14001026f:	add    cl,bl
   140010271:	inc    BYTE PTR [rax]
   140010273:	add    BYTE PTR [rax],al
   140010275:	add    BYTE PTR [rax],al
   140010277:	add    BYTE PTR [rcx],al
   140010279:	add    al,0x1
   14001027b:	add    BYTE PTR [rdx+rax*2],al
   14001027e:	add    BYTE PTR [rax],al
   140010280:	sbb    DWORD PTR [rip+0x5416000a],esp        # 0x194170290
   140010286:	adc    DWORD PTR [rax],eax
   140010288:	(bad)  
   140010289:	xor    al,0x10
   14001028b:	add    BYTE PTR [rsi],dl
   14001028d:	jb     0x1400102a1
   14001028f:	lock adc al,ah
   140010292:	(bad)  
   140010293:	ror    BYTE PTR [rax+rsi*2],0xb
   140010297:	(bad)  
   140010298:	adc    al,0xbb
   14001029a:	add    BYTE PTR [rax],al
   14001029c:	cmp    BYTE PTR [rax],al
   14001029e:	add    BYTE PTR [rax],al
   1400102a0:	sbb    DWORD PTR [rdi],ebp
   1400102a2:	or     DWORD PTR [rax],eax
   1400102a4:	(bad)  
   1400102a5:	je     0x14001025c
   1400102a7:	add    BYTE PTR [rsi],bl
   1400102a9:	fs mov ah,0x0
   1400102ac:	(bad)  
   1400102ad:	xor    al,0xb3
   1400102af:	add    BYTE PTR [rsi],bl
   1400102b1:	add    DWORD PTR [rax+0x501000],esi
   1400102b7:	add    BYTE PTR [rbx+rdi*4],dl
   1400102ba:	add    BYTE PTR [rax],al
   1400102bc:	jo     0x1400102c3
   1400102be:	add    BYTE PTR [rax],al
   1400102c0:	add    DWORD PTR [rip+0xffffffffb20d0002],ecx        # 0xf20e02c8
   1400102c6:	(bad)  
   1400102c7:	push   rax
   1400102c8:	sbb    DWORD PTR [rbx],ebx
   1400102ca:	add    eax,DWORD PTR [rax]
   1400102cc:	or     DWORD PTR [rcx],eax
   1400102ce:	test   al,0x0
   1400102d0:	add    dh,BYTE PTR [rax]
   1400102d2:	add    BYTE PTR [rax],al
   1400102d4:	adc    al,0xbb
   1400102d6:	add    BYTE PTR [rax],al
   1400102d8:	xor    BYTE PTR [rip+0x17010000],al        # 0x1570202de
   1400102de:	or     BYTE PTR [rax],al
   1400102e0:	(bad)  
   1400102e1:	or     DWORD PTR fs:[rax],eax
   1400102e4:	(bad)  
   1400102e5:	push   rsp
   1400102e6:	or     BYTE PTR [rax],al
   1400102e8:	(bad)  
   1400102e9:	xor    al,0x7
   1400102eb:	add    BYTE PTR [rdi],dl
   1400102ed:	xor    dl,BYTE PTR [rbx]
   1400102ef:	jo     0x14001030a
   1400102f1:	xor    BYTE PTR [rbx],cl
   1400102f3:	add    BYTE PTR [rdi],bl
   1400102f5:	xor    al,0xa4
   1400102f7:	add    BYTE PTR [rdi],bl
   1400102f9:	add    DWORD PTR [rdx+0xef01000],ebx
   1400102ff:	loopne 0x14001030d
   140010301:	ror    BYTE PTR [rdx],1
   140010303:	ror    BYTE PTR [rax],0x70
   140010306:	(bad)  
   140010307:	(bad)  
   140010308:	(bad)  
   140010309:	push   rax
   14001030a:	add    BYTE PTR [rax],al
   14001030c:	adc    al,0xbb
   14001030e:	add    BYTE PTR [rax],al
   140010310:	rol    BYTE PTR [rax+rax*1],0x0
   140010314:	add    DWORD PTR [rax],ebx
   140010316:	or     BYTE PTR [rax],al
   140010318:	sbb    BYTE PTR [rax+rcx*1+0x0],ah
   14001031c:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140010320:	sbb    BYTE PTR [rsi+rax*1],dh
   140010323:	add    BYTE PTR [rax],bl
   140010325:	xor    dl,BYTE PTR [rax+rsi*2]
   140010328:	add    DWORD PTR [rcx],ecx
   14001032a:	add    al,BYTE PTR [rax]
   14001032c:	or     DWORD PTR [rdx],esi
   14001032e:	add    eax,0x2060130
   140010333:	add    BYTE PTR [rsi],al
   140010335:	xor    al,BYTE PTR [rdx]
   140010337:	xor    BYTE PTR [rcx],al
   140010339:	and    BYTE PTR [rax+rax*1],cl
   14001033c:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   140010340:	and    BYTE PTR [rax+rdx*1+0x0],dl
   140010344:	and    BYTE PTR [rsi+rcx*1],dh
   140010347:	add    BYTE PTR [rax],ah
   140010349:	jb     0x140010367
   14001034b:	lock sbb ah,al
   14001034e:	sbb    al,dl
   140010350:	(bad)  
   140010351:	rcl    BYTE PTR [rax+rsi*2],0x1
   140010355:	sbb    DWORD PTR [rdx],ecx
   140010357:	add    BYTE PTR [rcx],bl
   140010359:	xor    al,0x12
   14001035b:	add    BYTE PTR [rcx],bl
   14001035d:	xchg   edx,eax
   14001035e:	adc    eax,0x11e013f0
   140010363:	ror    BYTE PTR [rdi],1
   140010365:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b610fdc
   14001036c:	or     DWORD PTR [rcx+rax*1],eax
   14001036f:	add    BYTE PTR [rdx+rax*2],al
   140010372:	add    BYTE PTR [rax],al
   140010374:	je     0x14001031f
   140010376:	add    BYTE PTR [rax],al
   140010378:	add    DWORD PTR [rax],eax
   14001037a:	add    BYTE PTR [rax],al
   14001037c:	and    eax,0x290000ae
   140010381:	scas   al,BYTE PTR es:[rdi]
   140010382:	add    BYTE PTR [rax],al
   140010384:	add    DWORD PTR [rax],eax
   140010386:	add    BYTE PTR [rax],al
   140010388:	sub    DWORD PTR [rsi+0x14010000],ebp
   14001038e:	or     BYTE PTR [rax],al
   140010390:	adc    al,0x64
   140010392:	or     BYTE PTR [rax],al
   140010394:	adc    al,0x54
   140010396:	(bad)  
   140010397:	add    BYTE PTR [rsp+rsi*1],dl
   14001039a:	(bad)  
   14001039b:	add    BYTE PTR [rdx+rsi*1],dl
   14001039e:	adc    BYTE PTR [rax+0x11],dh
   1400103a1:	adc    eax,0x74150008
   1400103a6:	or     BYTE PTR [rax],al
   1400103a8:	adc    eax,0x15000764
   1400103ad:	xor    al,0x6
   1400103af:	add    BYTE PTR [rip+0x74f01132],dl        # 0x1b4f114e7
   1400103b5:	test   eax,0x10000
   1400103ba:	add    BYTE PTR [rax],al
   1400103bc:	(bad)  
   1400103bd:	scas   eax,DWORD PTR es:[rdi]
   1400103be:	add    BYTE PTR [rax],al
   1400103c0:	cmp    DWORD PTR [rax-0x1060000],esi
   1400103c6:	add    BYTE PTR [rax],al
   1400103c8:	add    BYTE PTR [rax],al
   1400103ca:	add    BYTE PTR [rax],al
   1400103cc:	add    DWORD PTR [rdx],ecx
   1400103ce:	add    al,BYTE PTR [rax]
   1400103d0:	or     dh,BYTE PTR [rdx]
   1400103d2:	(bad)  
   1400103d3:	xor    BYTE PTR [rcx],al
   1400103d5:	sbb    DWORD PTR [rdx],ecx
   1400103d7:	add    BYTE PTR [rcx],bl
   1400103d9:	je     0x1400103e4
   1400103db:	add    BYTE PTR [rcx],bl
   1400103dd:	or     BYTE PTR fs:[rax],al
   1400103e0:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400103e4:	sbb    DWORD PTR [rsi+rax*1],esi
   1400103e7:	add    BYTE PTR [rcx],bl
   1400103e9:	xor    dl,BYTE PTR [rip+0x40a09e0]        # 0x1440b0dcf
   1400103ef:	add    BYTE PTR [rdx],cl
   1400103f1:	xor    al,0x6
   1400103f3:	add    BYTE PTR [rdx],cl
   1400103f5:	xor    al,BYTE PTR [rsi]
   1400103f7:	jo     0x14001046d
   1400103f9:	test   eax,0x10000
   1400103fe:	add    BYTE PTR [rax],al
   140010400:	cmp    eax,0x700000b2
   140010405:	mov    dl,0x0
   140010407:	add    BYTE PTR [rax],ah
   140010409:	inc    DWORD PTR [rax]
   14001040b:	add    BYTE PTR [rax-0x4e],dh
   14001040e:	add    BYTE PTR [rax],al
   140010410:	adc    DWORD PTR [rcx],edx
   140010412:	or     BYTE PTR [rax],al
   140010414:	adc    DWORD PTR [rax+rdx*1],esi
   140010417:	add    BYTE PTR [rcx],dl
   140010419:	jb     0x140010428
   14001041b:	lock or esp,eax
   14001041e:	or     eax,eax
   140010420:	(bad)  
   140010421:	jo     0x140010429
   140010423:	(bad)  
   140010424:	je     0x1400103cf
   140010426:	add    BYTE PTR [rax],al
   140010428:	add    DWORD PTR [rax],eax
   14001042a:	add    BYTE PTR [rax],al
   14001042c:	ja     0x1400103e2
   14001042e:	add    BYTE PTR [rax],al
   140010430:	stc    
   140010431:	mov    ah,0x0
   140010433:	add    BYTE PTR [rax-0x1],cl
   140010436:	add    BYTE PTR [rax],al
   140010438:	add    BYTE PTR [rax],al
   14001043a:	add    BYTE PTR [rax],al
   14001043c:	add    DWORD PTR [rcx+rax*1],eax
   14001043f:	add    BYTE PTR [rdx+riz*2],al
   140010442:	add    BYTE PTR [rax],al
   140010444:	sbb    DWORD PTR [rsi],ebx
   140010446:	or     BYTE PTR [rax],al
   140010448:	setb   BYTE PTR [rbx]
   14001044b:	lock or eax,esp
   14001044e:	(bad)  
   14001044f:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436108c6
   140010456:	add    dh,BYTE PTR [rax]
   140010458:	adc    al,0xbb
   14001045a:	add    BYTE PTR [rax],al
   14001045c:	rex.W add BYTE PTR [rax],al
   14001045f:	add    BYTE PTR [rcx],al
   140010461:	clts   
   140010463:	add    BYTE PTR [rdi],cl
   140010465:	fs (bad) 
   140010467:	add    BYTE PTR [rdi],cl
   140010469:	xor    al,0x6
   14001046b:	add    BYTE PTR [rdi],cl
   14001046d:	xor    cl,BYTE PTR [rbx]
   14001046f:	jo     0x140010472
   140010471:	add    BYTE PTR [rax],al
   140010473:	add    BYTE PTR [rcx],al
   140010475:	(bad)  
   140010476:	add    al,BYTE PTR [rax]
   140010478:	(bad)  
   140010479:	xor    cl,BYTE PTR [rdx]
   14001047b:	xor    BYTE PTR [rax],al
   14001047d:	add    BYTE PTR [rax],al
   14001047f:	add    BYTE PTR [rcx],al
   140010481:	add    BYTE PTR [rax],al
   140010483:	add    BYTE PTR [rcx],al
   140010485:	clts   
   140010487:	add    BYTE PTR [rdi],cl
   140010489:	str    WORD PTR fs:[rdi]
   14001048d:	xor    al,0xe
   14001048f:	add    BYTE PTR [rdi],cl
   140010491:	mov    dl,0xb
   140010493:	jo     0x1400104ae
   140010495:	sub    eax,0x741f350d
   14001049a:	adc    BYTE PTR [rax],al
   14001049c:	sbb    esp,DWORD PTR [rdi+rcx*1+0x0]
   1400104a0:	(bad)  
   1400104a1:	xor    al,0xe
   1400104a3:	add    BYTE PTR [rbx],dl
   1400104a5:	xor    ecx,DWORD PTR [rsi]
   1400104a7:	jb     0x1400104b3
   1400104a9:	lock or al,ah
   1400104ac:	(bad)  
   1400104ad:	rol    BYTE PTR [rax+rax*8],1
   1400104b0:	add    dl,BYTE PTR [rax+0x0]
   1400104b3:	add    BYTE PTR [rbx+rdi*4],dl
   1400104b6:	add    BYTE PTR [rax],al
   1400104b8:	xor    BYTE PTR [rax],al
   1400104ba:	add    BYTE PTR [rax],al
   1400104bc:	add    BYTE PTR [rax],al
   1400104be:	add    BYTE PTR [rax],al
   1400104c0:	add    DWORD PTR [rax],eax
   1400104c2:	add    BYTE PTR [rax],al
   1400104c4:	add    BYTE PTR [rax],al
   1400104c6:	add    BYTE PTR [rax],al
   1400104c8:	add    DWORD PTR [rax],eax
   1400104ca:	add    BYTE PTR [rax],al
   1400104cc:	add    DWORD PTR [rdi],ecx
   1400104ce:	(bad)  
   1400104cf:	add    BYTE PTR [rdi],cl
   1400104d1:	adc    DWORD PTR fs:[rax],eax
   1400104d4:	sysenter 
   1400104d6:	adc    BYTE PTR [rax],al
   1400104d8:	psrld  mm1,QWORD PTR [rbx]
   1400104db:	jo     0x1400104f6
   1400104dd:	xor    ecx,DWORD PTR [rdx]
   1400104df:	rex.RB and eax,0x12012043
   1400104e5:	add    BYTE PTR [rcx],bl
   1400104e7:	lock (bad) 
   1400104e9:	loopne 0x140010500
   1400104eb:	rcl    BYTE PTR [rbx],1
   1400104ed:	rcl    BYTE PTR [rcx],0x70
   1400104f0:	adc    BYTE PTR [rax+0xf],ah
   1400104f3:	push   rax
   1400104f4:	or     al,0x87
   1400104f6:	add    BYTE PTR [rax],al
   1400104f8:	add    al,BYTE PTR [rax]
   1400104fa:	add    BYTE PTR [rax],al
   1400104fc:	int    0xc6
   1400104fe:	add    BYTE PTR [rax],al
   140010500:	push   rdi
   140010501:	mov    DWORD PTR [rax],0x100
   140010507:	add    BYTE PTR [rdi-0x39],dl
   14001050a:	add    BYTE PTR [rax],al
   14001050c:	rex.WRXB enter 0x0,0xd9
   140010511:	enter  0x0,0x1
   140010515:	add    BYTE PTR [rax],al
   140010517:	add    cl,bl
   140010519:	enter  0x0,0x89
   14001051d:	add    BYTE PTR [rax],al
   14001051f:	add    BYTE PTR [rcx],al
   140010521:	or     al,BYTE PTR [rdx]
   140010523:	add    BYTE PTR [rdx],cl
   140010525:	mov    dl,0x6
   140010527:	xor    BYTE PTR [rcx],al
   140010529:	clts   
   14001052b:	add    BYTE PTR [rdi],cl
   14001052d:	fs or  eax,0xc340f00
   140010533:	add    BYTE PTR [rdi],cl
   140010535:	xchg   edx,eax
   140010536:	or     esi,DWORD PTR [rax+0x11]
   140010539:	sbb    ecx,DWORD PTR [rdx]
   14001053b:	add    BYTE PTR [rbx],bl
   14001053d:	fs (bad) 
   14001053f:	add    BYTE PTR [rbx],bl
   140010541:	xor    al,0xd
   140010543:	add    BYTE PTR [rbx],bl
   140010545:	push   rdx
   140010546:	(bad)  
   140010547:	lock adc eax,0x11d013e0
   14001054d:	ror    BYTE PTR [rdi],0x70
   140010550:	je     0x1400104fb
   140010552:	add    BYTE PTR [rax],al
   140010554:	add    DWORD PTR [rax],eax
   140010556:	add    BYTE PTR [rax],al
   140010558:	outs   dx,DWORD PTR ds:[rsi]
   140010559:	int3   
   14001055a:	add    BYTE PTR [rax],al
   14001055c:	movabs eax,ds:0xff6c0000cc
   140010565:	add    BYTE PTR [rax],al
   140010567:	add    BYTE PTR [rcx],al
   140010569:	(bad)  
   14001056a:	add    al,BYTE PTR [rax]
   14001056c:	(bad)  
   14001056d:	push   rdx
   14001056e:	add    dl,BYTE PTR [rax+0x19]
   140010571:	or     eax,DWORD PTR ss:[rax]
   140010574:	and    eax,0x25037134
   140010579:	add    DWORD PTR [rsi+0x3],esp
   14001057c:	adc    al,dh
   14001057e:	(bad)  
   14001057f:	loopne 0x14001058d
   140010581:	ror    BYTE PTR [rdx],1
   140010583:	ror    BYTE PTR [rax],0x70
   140010586:	(bad)  
   140010587:	(bad)  
   140010588:	(bad)  
   140010589:	push   rax
   14001058a:	add    BYTE PTR [rax],al
   14001058c:	adc    al,0xbb
   14001058e:	add    BYTE PTR [rax],al
   140010590:	and    BYTE PTR [rbx],bl
   140010592:	add    BYTE PTR [rax],al
   140010594:	adc    DWORD PTR [rbx],ebx
   140010596:	or     al,BYTE PTR [rax]
   140010598:	sbb    esp,DWORD PTR [rsi+rcx*1+0x0]
   14001059c:	sbb    esi,DWORD PTR [rcx*1+0x17521b00]
   1400105a3:	lock adc eax,0x11d013e0
   1400105a9:	ror    BYTE PTR [rdi],0x70
   1400105ac:	je     0x140010557
   1400105ae:	add    BYTE PTR [rax],al
   1400105b0:	add    DWORD PTR [rax],eax
   1400105b2:	add    BYTE PTR [rax],al
   1400105b4:	mov    bl,0xd4
   1400105b6:	add    BYTE PTR [rax],al
   1400105b8:	out    0xd4,eax
   1400105ba:	add    BYTE PTR [rax],al
   1400105bc:	ins    BYTE PTR es:[rdi],dx
   1400105bd:	inc    DWORD PTR [rax]
   1400105bf:	add    BYTE PTR [rax],al
   1400105c1:	add    BYTE PTR [rax],al
   1400105c3:	add    BYTE PTR [rcx],al
   1400105c5:	(bad)  
   1400105c6:	add    al,BYTE PTR [rax]
   1400105c8:	(bad)  
   1400105c9:	jb     0x1400105cd
   1400105cb:	xor    BYTE PTR [rcx],bl
   1400105cd:	and    DWORD PTR [rax],ecx
   1400105cf:	add    BYTE PTR [rdx],dl
   1400105d1:	push   rsp
   1400105d2:	lldt   WORD PTR [rdx]
   1400105d5:	xor    al,0xe
   1400105d7:	add    BYTE PTR [rdx],dl
   1400105d9:	jb     0x1400105e9
   1400105db:	loopne 0x1400105e9
   1400105dd:	jo     0x1400105ea
   1400105df:	(bad)  
   1400105e0:	adc    al,0xbb
   1400105e2:	add    BYTE PTR [rax],al
   1400105e4:	xor    BYTE PTR [rax],al
   1400105e6:	add    BYTE PTR [rax],al
   1400105e8:	add    DWORD PTR [rbx],ebx
   1400105ea:	or     al,BYTE PTR [rax]
   1400105ec:	sbb    esp,esp
   1400105ee:	ltr    WORD PTR [rbx]
   1400105f1:	je     0x140010601
   1400105f3:	add    BYTE PTR [rbx],bl
   1400105f5:	fs or  eax,0xc341b00
   1400105fb:	add    BYTE PTR [rbx],bl
   1400105fd:	xchg   edx,eax
   1400105fe:	adc    al,0x50
   140010600:	sbb    DWORD PTR [rax],esi
   140010602:	or     eax,DWORD PTR [rax]
   140010604:	(bad)  
   140010605:	xor    al,0x64
   140010607:	add    BYTE PTR [rdi],bl
   140010609:	add    DWORD PTR [rdx+0x0],ebx
   14001060c:	adc    al,dh
   14001060e:	(bad)  
   14001060f:	loopne 0x14001061d
   140010611:	ror    BYTE PTR [rdx],1
   140010613:	ror    BYTE PTR [rax],0x70
   140010616:	(bad)  
   140010617:	(bad)  
   140010618:	(bad)  
   140010619:	push   rax
   14001061a:	add    BYTE PTR [rax],al
   14001061c:	adc    al,0xbb
   14001061e:	add    BYTE PTR [rax],al
   140010620:	enter  0x2,0x0
   140010624:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4160632
   14001062a:	or     BYTE PTR [rax],al
   14001062c:	adc    eax,0x15000764
   140010631:	xor    al,0x6
   140010633:	add    BYTE PTR [rip+0x11e01132],dl        # 0x151e1176b
   140010639:	sbb    DWORD PTR [rdx],ecx
   14001063b:	add    BYTE PTR [rcx],bl
   14001063d:	je     0x14001064b
   14001063f:	add    BYTE PTR [rcx],bl
   140010641:	or     eax,DWORD PTR fs:[rax]
   140010644:	sbb    DWORD PTR [rdx+rcx*1],esi
   140010647:	add    BYTE PTR [rcx],bl
   140010649:	push   rdx
   14001064a:	adc    eax,0x11e013f0
   14001064f:	shl    BYTE PTR [rcx+rbp*4+0x0],1
   140010653:	add    BYTE PTR [rdx],al
   140010655:	add    BYTE PTR [rax],al
   140010657:	add    BYTE PTR [rdx],dh
   140010659:	call   0x12877065e
   14001065e:	add    BYTE PTR [rax],al
   140010660:	mov    edi,edi
   140010662:	add    BYTE PTR [rax],al
   140010664:	add    BYTE PTR [rax],al
   140010666:	add    BYTE PTR [rax],al
   140010668:	stc    
   140010669:	out    0x0,eax
   14001066b:	add    BYTE PTR [rdi-0x4cffff18],cl
   140010671:	inc    DWORD PTR [rax]
   140010673:	add    BYTE PTR [rax],al
   140010675:	add    BYTE PTR [rax],al
   140010677:	add    BYTE PTR [rcx],dl
   140010679:	clts   
   14001067b:	add    BYTE PTR [rdi],cl
   14001067d:	or     DWORD PTR fs:[rax],eax
   140010680:	sysenter 
   140010682:	or     BYTE PTR [rax],al
   140010684:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140010687:	jo     0x1400106fd
   140010689:	test   eax,0x10000
   14001068e:	add    BYTE PTR [rax],al
   140010690:	fsubp  st(0),st
   140010692:	add    BYTE PTR [rax],al
   140010694:	push   rdx
   140010695:	jmp    0x13fd5069a
   14001069a:	add    BYTE PTR [rax],al
   14001069c:	add    BYTE PTR [rax],al
   14001069e:	add    BYTE PTR [rax],al
   1400106a0:	add    DWORD PTR [rax],eax
   1400106a2:	add    BYTE PTR [rax],al
   1400106a4:	add    DWORD PTR [rax],eax
   1400106a6:	add    BYTE PTR [rax],al
   1400106a8:	add    DWORD PTR [rax],eax
   1400106aa:	add    BYTE PTR [rax],al
   1400106ac:	add    DWORD PTR [rdi],eax
   1400106ae:	add    al,BYTE PTR [rax]
   1400106b0:	(bad)  
   1400106b1:	add    DWORD PTR [rbp+0x40a0100],esi
   1400106b7:	add    BYTE PTR [rdx],cl
   1400106b9:	xor    al,0x8
   1400106bb:	add    BYTE PTR [rdx],cl
   1400106bd:	push   rdx
   1400106be:	(bad)  
   1400106bf:	jo     0x1400106c2
   1400106c1:	add    al,0x1
   1400106c3:	add    BYTE PTR [rdx+rdx*1],al
   1400106c6:	add    BYTE PTR [rax],al
   1400106c8:	sbb    DWORD PTR [rip+0x7427250c],esi        # 0x1b4282bda
   1400106ce:	sbb    BYTE PTR [rax],al
   1400106d0:	and    BYTE PTR [rdi+rdx*1+0x0],ah
   1400106d4:	sbb    DWORD PTR [rsi+rdx*1],esi
   1400106d7:	add    BYTE PTR [rdx],dl
   1400106d9:	and    ecx,DWORD PTR [rip+0x6001201]        # 0x1460118e0
   1400106df:	lock add al,0xe0
   1400106e2:	add    dl,BYTE PTR [rax+0x14]
   1400106e5:	mov    ebx,0x880000
   1400106ea:	add    BYTE PTR [rax],al
   1400106ec:	add    DWORD PTR [rdi],ecx
   1400106ee:	(bad)  
   1400106ef:	add    BYTE PTR [rdi],cl
   1400106f1:	or     eax,DWORD PTR fs:[rax]
   1400106f4:	sysenter 
   1400106f6:	or     al,BYTE PTR [rax]
   1400106f8:	(bad)  
   1400106fa:	or     esi,DWORD PTR [rax+0x1]
   1400106fd:	adc    BYTE PTR [rsi],al
   1400106ff:	add    BYTE PTR [rax],dl
   140010701:	je     0x14001070a
   140010703:	add    BYTE PTR [rax],dl
   140010705:	xor    al,0x6
   140010707:	add    BYTE PTR [rax],dl
   140010709:	xor    cl,BYTE PTR [rax+riz*8]
   14001070c:	adc    DWORD PTR [rcx],ebx
   14001070e:	or     al,BYTE PTR [rax]
   140010710:	sbb    esp,eax
   140010712:	or     DWORD PTR [rax],eax
   140010714:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140010718:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   14001071c:	sbb    DWORD PTR [rsi+rax*1],esi
   14001071f:	add    BYTE PTR [rcx],bl
   140010721:	xor    dl,BYTE PTR [rip+0xa974e0]        # 0x140aa7c07
   140010727:	add    BYTE PTR [rcx],al
   140010729:	add    BYTE PTR [rax],al
   14001072b:	add    BYTE PTR [rsi-0x4effff11],cl
   140010731:	out    dx,eax
   140010732:	add    BYTE PTR [rax],al
   140010734:	cmc    
   140010735:	inc    DWORD PTR [rax]
   140010737:	add    BYTE PTR [rax],al
   140010739:	add    BYTE PTR [rax],al
   14001073b:	add    BYTE PTR [rcx],al
   14001073d:	(bad)  
   14001073e:	add    al,BYTE PTR [rax]
   140010740:	(bad)  
   140010741:	push   rdx
   140010742:	add    dh,BYTE PTR [rax]
   140010744:	add    DWORD PTR [rcx],ecx
   140010746:	add    DWORD PTR [rax],eax
   140010748:	or     DWORD PTR [rdx+0x0],esp
   14001074b:	add    BYTE PTR [rcx],al
   14001074d:	sbb    ecx,DWORD PTR [rax]
   14001074f:	add    BYTE PTR [rbx],bl
   140010751:	adc    al,BYTE PTR fs:[rax]
   140010754:	sbb    esi,DWORD PTR [rax+rdx*1]
   140010757:	add    BYTE PTR [rbx],bl
   140010759:	mov    dl,0x14
   14001075b:	loopne 0x14001076f
   14001075d:	jo     0x140010770
   14001075f:	push   rax
   140010760:	add    DWORD PTR [rdx],edx
   140010762:	or     BYTE PTR [rax],al
   140010764:	adc    dl,BYTE PTR [rdx+rcx*1+0x0]
   140010768:	adc    dh,BYTE PTR [rax+rcx*1]
   14001076b:	add    BYTE PTR [rdx],dl
   14001076d:	xor    cl,BYTE PTR [rsi]
   14001076f:	loopne 0x14001077d
   140010771:	jo     0x14001077e
   140010773:	(bad)  
   140010774:	adc    DWORD PTR [rcx],edx
   140010776:	(bad)  
   140010777:	add    BYTE PTR [rcx],dl
   140010779:	xor    al,0xc
   14001077b:	add    BYTE PTR [rcx],dl
   14001077d:	push   rdx
   14001077e:	or     eax,0xa700be0
   140010783:	(bad)  
   140010784:	je     0x14001072f
   140010786:	add    BYTE PTR [rax],al
   140010788:	add    DWORD PTR [rax],eax
   14001078a:	add    BYTE PTR [rax],al
   14001078c:	xor    esi,ebp
   14001078e:	add    BYTE PTR [rax],al
   140010790:	ja     0x140010787
   140010792:	add    BYTE PTR [rax],al
   140010794:	add    BYTE PTR ss:[rcx],al
   140010797:	add    BYTE PTR [rax],al
   140010799:	add    BYTE PTR [rax],al
   14001079b:	add    BYTE PTR [rcx],dl
   14001079d:	(bad)  
   14001079f:	add    BYTE PTR [rdi],cl
   1400107a1:	xor    al,0x9
   1400107a3:	add    BYTE PTR [rdi],cl
   1400107a5:	push   rdx
   1400107a6:	or     esi,DWORD PTR [rax+0x74]
   1400107a9:	test   eax,0x10000
   1400107ae:	add    BYTE PTR [rax],al
   1400107b0:	adc    esi,esi
   1400107b2:	add    BYTE PTR [rax],al
   1400107b4:	sbb    eax,0x160000f6
   1400107b9:	add    BYTE PTR [rcx],al
   1400107bb:	add    BYTE PTR [rax],al
   1400107bd:	add    BYTE PTR [rax],al
   1400107bf:	add    BYTE PTR [rcx],al
   1400107c1:	add    al,0x1
   1400107c3:	add    BYTE PTR [rdx+rax*4],al
   1400107c6:	add    BYTE PTR [rax],al
   1400107c8:	adc    DWORD PTR [rdi],edx
   1400107ca:	or     BYTE PTR [rax],al
   1400107cc:	(bad)  
   1400107cd:	fs or  eax,0xc341700
   1400107d3:	add    BYTE PTR [rdi],dl
   1400107d5:	push   rdx
   1400107d6:	adc    esi,eax
   1400107d8:	adc    eax,esp
   1400107da:	pshufw mm6,QWORD PTR [rcx+rbp*4+0x0],0x0
   1400107e0:	add    DWORD PTR [rax],eax
   1400107e2:	add    BYTE PTR [rax],al
   1400107e4:	loopne 0x1400107dd
   1400107e6:	add    BYTE PTR [rax],al
   1400107e8:	add    eax,edi
   1400107ea:	add    BYTE PTR [rax],al
   1400107ec:	add    BYTE PTR ss:[rcx],al
   1400107ef:	add    BYTE PTR [rax],al
   1400107f1:	add    BYTE PTR [rax],al
   1400107f3:	add    BYTE PTR [rcx],al
   1400107f5:	or     al,BYTE PTR [rax+rax*1]
   1400107f8:	or     dh,BYTE PTR [rsi+rax*1]
   1400107fb:	add    BYTE PTR [rdx],cl
   1400107fd:	xor    al,BYTE PTR [rsi]
   1400107ff:	jo     0x140010802
   140010801:	or     al,BYTE PTR [rax+rax*1]
   140010804:	or     dh,BYTE PTR [rsi+rcx*1]
   140010807:	add    BYTE PTR [rdx],cl
   140010809:	mov    dl,0x6
   14001080b:	jo     0x14001080e
   14001080d:	adc    al,BYTE PTR [rip+0xe421200]        # 0x14e431a13
   140010813:	jo     0x140010822
   140010815:	(bad)  
   140010816:	or     al,0x50
   140010818:	or     esi,DWORD PTR [rax]
   14001081a:	add    BYTE PTR [rax],al
   14001081c:	sbb    DWORD PTR [rsi],esp
   14001081e:	or     al,BYTE PTR [rax]
   140010820:	adc    al,0x1
   140010822:	rex.WRXB add BYTE PTR [rip+0x9e00bf0],r9b        # 0x149e11419
   140010829:	rol    BYTE PTR [rdi],1
   14001082b:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143610ca2
   140010832:	add    dh,BYTE PTR [rax]
   140010834:	adc    al,0xbb
   140010836:	add    BYTE PTR [rax],al
   140010838:	(bad)  
   140010839:	add    al,BYTE PTR [rax]
   14001083b:	add    BYTE PTR [rcx],bl
   14001083d:	sub    BYTE PTR [rdi],al
   14001083f:	add    BYTE PTR [rdi],dl
   140010841:	xor    al,0x1b
   140010843:	add    DWORD PTR [rdi],edx
   140010845:	add    DWORD PTR [rcx+rax*1],edx
   140010848:	or     BYTE PTR [rax+0x7],dh
   14001084b:	(bad)  
   14001084c:	(bad)  
   14001084d:	push   rax
   14001084e:	add    BYTE PTR [rax],al
   140010850:	adc    al,0xbb
   140010852:	add    BYTE PTR [rax],al
   140010854:	nop
   140010855:	or     BYTE PTR [rax],al
   140010857:	add    BYTE PTR [rcx],bl
   140010859:	(bad)  
   14001085a:	(bad)  
   14001085b:	add    BYTE PTR [rax],dl
   14001085d:	adc    DWORD PTR fs:[rax],eax
   140010860:	adc    BYTE PTR [rax+rdx*1],dh
   140010863:	add    BYTE PTR [rax],dl
   140010865:	mov    dl,0xc
   140010867:	jo     0x14001087d
   140010869:	mov    ebx,0x580000
   14001086e:	add    BYTE PTR [rax],al
   140010870:	sbb    DWORD PTR [rip+0x10b0005],ebx        # 0x1410c087b
   140010876:	or     BYTE PTR [rcx],al
   140010878:	add    al,0x70
   14001087a:	add    esp,DWORD PTR [rax+0x2]
   14001087d:	xor    BYTE PTR [rax],al
   14001087f:	add    BYTE PTR [rbx+rdi*4],dl
   140010882:	add    BYTE PTR [rax],al
   140010884:	xor    BYTE PTR [rax],cl
   140010886:	add    BYTE PTR [rax],al
   140010888:	sbb    DWORD PTR [rip+0x10b0005],ebx        # 0x1410c0893
   14001088e:	add    QWORD PTR [rax+r14*2],r8
   140010892:	add    esp,DWORD PTR [rax+0x2]
   140010895:	xor    BYTE PTR [rax],al
   140010897:	add    BYTE PTR [rbx+rdi*4],dl
   14001089a:	add    BYTE PTR [rax],al
   14001089c:	(bad)  
   14001089d:	or     al,BYTE PTR [rax]
   14001089f:	add    BYTE PTR [rcx],bl
   1400108a1:	and    DWORD PTR [rdi],eax
   1400108a3:	add    BYTE PTR [rdi],cl
   1400108a5:	xor    al,0x11
   1400108a7:	add    DWORD PTR [rdi],ecx
   1400108a9:	add    DWORD PTR [rdx],ecx
   1400108ab:	add    DWORD PTR [rax],ecx
   1400108ad:	jo     0x1400108b6
   1400108af:	(bad)  
   1400108b0:	(bad)  
   1400108b1:	push   rax
   1400108b2:	add    BYTE PTR [rax],al
   1400108b4:	adc    al,0xbb
   1400108b6:	add    BYTE PTR [rax],al
   1400108b8:	or     BYTE PTR [rax],al
   1400108bb:	add    BYTE PTR [rcx],al
   1400108bd:	(bad)  
   1400108be:	or     eax,DWORD PTR [rax]
   1400108c0:	(bad)  
   1400108c1:	in     al,0x17
   1400108c3:	add    BYTE PTR [rdi],bl
   1400108c5:	je     0x1400108dd
   1400108c7:	add    BYTE PTR [rdi],bl
   1400108c9:	fs adc eax,0x14341f00
   1400108cf:	add    BYTE PTR [rdi],bl
   1400108d1:	add    DWORD PTR [rdx],edx
   1400108d3:	add    BYTE PTR [rax+rdx*2],dl
   1400108d6:	add    BYTE PTR [rax],al
   1400108d8:	add    DWORD PTR [rax],ebx
   1400108da:	or     al,BYTE PTR [rax]
   1400108dc:	sbb    BYTE PTR [rdx+rdx*1+0x0],ah
   1400108e0:	sbb    BYTE PTR [rcx+rdx*1+0x0],dl
   1400108e4:	sbb    BYTE PTR [rax+rdx*1],dh
   1400108e7:	add    BYTE PTR [rax],bl
   1400108e9:	mov    dl,0x14
   1400108eb:	lock adc ah,al
   1400108ee:	adc    BYTE PTR [rax+0x19],dh
   1400108f1:	and    ecx,DWORD PTR [rax]
   1400108f3:	add    BYTE PTR [rip+0x9001d01],dl        # 0x1490125fa
   1400108f9:	loopne 0x140010902
   1400108fb:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143610d72
   140010902:	add    dl,BYTE PTR [rax+0x14]
   140010905:	mov    ebx,0xd80000
   14001090a:	add    BYTE PTR [rax],al
   14001090c:	sbb    DWORD PTR [rsi],ebp
   14001090e:	or     eax,DWORD PTR [rax]
   140010910:	and    BYTE PTR [rsp+rsi*1+0x0],dh
   140010914:	and    BYTE PTR [rbx+rsi*1+0x0],ah
   140010918:	and    BYTE PTR [rdx+rsi*1],dh
   14001091b:	add    BYTE PTR [rax],ah
   14001091d:	add    DWORD PTR [rsi],ebp
   14001091f:	add    BYTE PTR [rax+rsi*8],dl
   140010922:	adc    ah,al
   140010924:	adc    BYTE PTR [rax+0x0],dl
   140010927:	add    BYTE PTR [rbx+rdi*4],dl
   14001092a:	add    BYTE PTR [rax],al
   14001092c:	(bad)  
   14001092d:	add    DWORD PTR [rax],eax
   14001092f:	add    BYTE PTR [rcx],al
   140010931:	adc    al,0x8
   140010933:	add    BYTE PTR [rsp+riz*2],dl
   140010936:	or     eax,0xc541400
   14001093b:	add    BYTE PTR [rsp+rsi*1],dl
   14001093e:	or     al,BYTE PTR [rax]
   140010940:	adc    al,0x72
   140010942:	adc    BYTE PTR [rax+0x1],dh
   140010945:	and    al,BYTE PTR [rsi]
   140010947:	add    BYTE PTR [rdx],ah
   140010949:	add    DWORD PTR [rdi],ebx
   14001094b:	add    BYTE PTR [rdi],dl
   14001094d:	jo     0x140010965
   14001094f:	(bad)  
   140010950:	adc    eax,0x1501430
   140010955:	sbb    DWORD PTR [rdx],ecx
   140010957:	add    BYTE PTR [rcx],bl
   140010959:	je     0x140010966
   14001095b:	add    BYTE PTR [rcx],bl
   14001095d:	or     al,BYTE PTR fs:[rax]
   140010960:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140010964:	sbb    DWORD PTR [rax+rcx*1],esi
   140010967:	add    BYTE PTR [rcx],bl
   140010969:	push   rdx
   14001096a:	adc    eax,0x72019e0
   14001096f:	add    BYTE PTR [rsi],cl
   140010971:	add    DWORD PTR [rax],ecx
   140010973:	add    DWORD PTR [rdi],eax
   140010975:	loopne 0x14001097c
   140010977:	jo     0x14001097d
   140010979:	(bad)  
   14001097a:	add    edx,DWORD PTR [rax+0x2]
   14001097d:	xor    BYTE PTR [rax],al
   14001097f:	add    BYTE PTR [rbx+rdi*4],dl
   140010982:	add    BYTE PTR [rax],al
   140010984:	xor    BYTE PTR [rax],cl
   140010986:	add    BYTE PTR [rax],al
   140010988:	add    DWORD PTR [rdi],ebx
   14001098a:	or     al,0x0
   14001098c:	(bad)  
   14001098d:	je     0x1400109a6
   14001098f:	add    BYTE PTR [rdi],bl
   140010991:	fs (bad) 
   140010993:	add    BYTE PTR [rdi],bl
   140010995:	xor    al,0x15
   140010997:	add    BYTE PTR [rdi],bl
   140010999:	rcr    BYTE PTR [rax],cl
   14001099b:	lock (bad) 
   14001099d:	loopne 0x1400109b3
   14001099f:	rcl    BYTE PTR [rdx],1
   1400109a1:	rcl    BYTE PTR [rax],0x50
   1400109a4:	add    DWORD PTR [rbx],esp
   1400109a6:	(bad)  
   1400109a7:	add    BYTE PTR [rbx],ah
   1400109a9:	add    DWORD PTR [rip+0x16701700],ebp        # 0x1567120af
   1400109af:	(bad)  
   1400109b0:	adc    eax,0x1501430
   1400109b5:	or     BYTE PTR [rdx],al
   1400109b7:	add    BYTE PTR [rax],cl
   1400109b9:	xor    al,BYTE PTR [rax+rsi*1]
   1400109bc:	add    DWORD PTR [rsp+rcx*1],ebx
   1400109bf:	add    BYTE PTR [rsp+riz*2],bl
   1400109c2:	adc    BYTE PTR [rax],al
   1400109c4:	sbb    al,0x54
   1400109c6:	ltr    WORD PTR [rsp+rsi*1]
   1400109ca:	(bad)  
   1400109cb:	add    BYTE PTR [rdx+rsi*2],bl
   1400109ce:	sbb    al,dh
   1400109d0:	(bad)  
   1400109d1:	loopne 0x1400109e7
   1400109d3:	rcl    BYTE PTR [rdx],1
   1400109d5:	rcl    BYTE PTR [rax],0x70
   1400109d8:	add    DWORD PTR [rax],esp
   1400109da:	or     al,0x0
   1400109dc:	and    BYTE PTR [rdi+rdx*1+0x0],dh
   1400109e0:	and    BYTE PTR [rsi+rdx*1+0x0],ah
   1400109e4:	and    BYTE PTR [rbp+rdx*1+0x0],dl
   1400109e8:	and    BYTE PTR [rsp+rdx*1],dh
   1400109eb:	add    BYTE PTR [rax],ah
   1400109ed:	repnz sbb eax,esi
   1400109f0:	(bad)  
   1400109f1:	loopne 0x140010a08
   1400109f3:	rol    BYTE PTR [rcx],0x11
   1400109f6:	add    al,0x0
   1400109f8:	adc    DWORD PTR [rdx],esi
   1400109fa:	or     eax,0xb600c70
   1400109ff:	xor    BYTE PTR [rcx],bl
   140010a01:	(bad)  
   140010a02:	or     DWORD PTR [rax],eax
   140010a04:	(bad)  
   140010a05:	je     0x1400109e1
   140010a07:	add    BYTE PTR [rsi],bl
   140010a09:	fld    DWORD PTR fs:[rax]
   140010a0c:	(bad)  
   140010a0d:	xor    al,0xd8
   140010a0f:	add    BYTE PTR [rsi],bl
   140010a11:	add    esi,edx
   140010a13:	add    BYTE PTR [rax],dl
   140010a15:	push   rax
   140010a16:	add    BYTE PTR [rax],al
   140010a18:	adc    al,0xbb
   140010a1a:	add    BYTE PTR [rax],al
   140010a1c:	movabs al,ds:0x2300073419000006
   140010a25:	add    DWORD PTR [rdx],ebx
   140010a27:	add    DWORD PTR [rip+0x127013e0],edx        # 0x152711e0d
   140010a2d:	(bad)  
   140010a2e:	adc    DWORD PTR [rax],esi
   140010a30:	adc    BYTE PTR [rax+0x0],dl
   140010a33:	add    BYTE PTR [rbx+rdi*4],dl
   140010a36:	add    BYTE PTR [rax],al
   140010a38:	ror    BYTE PTR [rax],0x0
	...

Disassembly of section .data:

0000000140011000 <.data>:
   140011000:	add    BYTE PTR [rax],al
   140011002:	add    BYTE PTR [rax],al
   140011004:	add    BYTE PTR [rcx],al
	...
   1400110fe:	add    BYTE PTR [rax],al
   140011100:	add    DWORD PTR [rax],eax
	...
   14001110e:	add    BYTE PTR [rax],al
   140011110:	or     al,BYTE PTR [rax]
   140011112:	add    BYTE PTR [rax],al
   140011114:	movabs al,ds:0x700000003000000
   14001111d:	add    BYTE PTR [rax],al
   14001111f:	add    bh,bh
   140011121:	(bad)  
   140011122:	(bad)  
   140011123:	inc    DWORD PTR [rax]
   140011125:	add    BYTE PTR [rax],al
   140011127:	add    BYTE PTR [rax],bh
   140011129:	js     0x14001112b
   14001112b:	rex add DWORD PTR [rax],eax
   14001112e:	add    BYTE PTR [rax],al
   140011130:	adc    BYTE PTR [rax],al
   140011132:	add    BYTE PTR [rax],al
   140011134:	add    BYTE PTR [rax],al
   140011136:	add    BYTE PTR [rax],al
   140011138:	(bad)  
   140011139:	(bad)  
   14001113a:	(bad)  
   14001113b:	(bad)  
   14001113c:	(bad)  
   14001113d:	(bad)  
   14001113e:	(bad)  
   14001113f:	inc    DWORD PTR [rax+0xa]
	...
   14001116d:	add    BYTE PTR [rax],al
   14001116f:	add    BYTE PTR [rdx],dh
   140011171:	movabs ds:0x5dcd00002b992ddf,al
   14001117a:	and    dl,dl
   14001117c:	data16 (bad) 
   14001117e:	(bad)  
   14001117f:	push   QWORD PTR [rbx*1+0x14000]
	...
   14001118e:	add    BYTE PTR [rax],al
   140011190:	add    DWORD PTR [rdx],eax
   140011192:	add    al,0x8
	...
   1400111a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400111a1:	add    eax,DWORD PTR [rax]
   1400111a3:	add    BYTE PTR [rax-0x7e],ah
   1400111a6:	jns    0x14001112a
   1400111a8:	and    DWORD PTR [rax],eax
   1400111aa:	add    BYTE PTR [rax],al
   1400111ac:	add    BYTE PTR [rax],al
   1400111ae:	add    BYTE PTR [rax],al
   1400111b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400111b1:	fild   WORD PTR [rax]
   1400111b3:	add    BYTE PTR [rax],al
   1400111b5:	add    BYTE PTR [rax],al
   1400111b7:	add    BYTE PTR [rcx+0xa5],ah
   1400111bd:	add    BYTE PTR [rax],al
   1400111bf:	add    BYTE PTR [rcx+0xfce09f],al
   1400111c5:	add    BYTE PTR [rax],al
   1400111c7:	add    BYTE PTR [rax+0x7e],al
   1400111ca:	cmp    ah,0x0
   1400111cd:	add    BYTE PTR [rax],al
   1400111cf:	add    BYTE PTR [rax-0x3efffffd],ch
   1400111d5:	movabs ds:0x20a3da,eax
	...
   1400111ee:	add    BYTE PTR [rax],al
   1400111f0:	cmp    esi,0x0
   1400111f6:	add    BYTE PTR [rax],al
   1400111f8:	rex inc BYTE PTR [rax]
   1400111fb:	add    BYTE PTR [rax],al
   1400111fd:	add    BYTE PTR [rax],al
   1400111ff:	add    BYTE PTR [rbp-0x3efffffd],dh
   140011205:	movabs ds:0x20a3da,eax
	...
   14001121e:	add    BYTE PTR [rax],al
   140011220:	cmp    esi,0x0
   140011226:	add    BYTE PTR [rax],al
   140011228:	inc    BYTE PTR [r8]
   14001122b:	add    BYTE PTR [rax],al
   14001122d:	add    BYTE PTR [rax],al
   14001122f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140011235:	movabs ds:0xa2e8a2e5001aa2e4,al
   14001123e:	pop    rbx
	...
   14001124f:	add    BYTE PTR [rcx+0xfe],al
   140011255:	add    BYTE PTR [rax],al
   140011257:	add    BYTE PTR [rax+0x7e],al
   14001125a:	movabs eax,ds:0x55100000000fe
   140011263:	add    BYTE PTR [rcx-0x26],dl
   140011266:	pop    rsi
   140011267:	fisub  DWORD PTR [rax]
   140011269:	add    BYTE PTR [rdi-0x26],bl
   14001126c:	push   0xffffffffffffffda
   14001126e:	xor    al,BYTE PTR [rax]
	...
   140011280:	adc    ebx,0xf9e0ded8
   140011286:	add    BYTE PTR [rax],al
   140011288:	xor    DWORD PTR [rsi-0x7f],edi
   14001128b:	inc    BYTE PTR [rax]
	...
   1400112d1:	add    BYTE PTR [rax],dl
   1400112d3:	adc    BYTE PTR [rax],dl
   1400112d5:	adc    BYTE PTR [rax],dl
   1400112d7:	adc    BYTE PTR [rax],dl
   1400112d9:	adc    BYTE PTR [rax],dl
   1400112db:	adc    BYTE PTR [rax],dl
   1400112dd:	adc    BYTE PTR [rax],dl
   1400112df:	adc    BYTE PTR [rax],dl
   1400112e1:	adc    BYTE PTR [rax],dl
   1400112e3:	adc    BYTE PTR [rax],dl
   1400112e5:	adc    BYTE PTR [rax],dl
   1400112e7:	adc    BYTE PTR [rax],dl
   1400112e9:	adc    BYTE PTR [rax],dl
   1400112eb:	adc    BYTE PTR [rax],al
   1400112ed:	add    BYTE PTR [rax],al
   1400112ef:	add    BYTE PTR [rax],al
   1400112f1:	add    BYTE PTR [rax],ah
   1400112f3:	and    BYTE PTR [rax],ah
   1400112f5:	and    BYTE PTR [rax],ah
   1400112f7:	and    BYTE PTR [rax],ah
   1400112f9:	and    BYTE PTR [rax],ah
   1400112fb:	and    BYTE PTR [rax],ah
   1400112fd:	and    BYTE PTR [rax],ah
   1400112ff:	and    BYTE PTR [rax],ah
   140011301:	and    BYTE PTR [rax],ah
   140011303:	and    BYTE PTR [rax],ah
   140011305:	and    BYTE PTR [rax],ah
   140011307:	and    BYTE PTR [rax],ah
   140011309:	and    BYTE PTR [rax],ah
   14001130b:	and    BYTE PTR [rax],al
	...
   140011395:	add    BYTE PTR [rax],al
   140011397:	add    BYTE PTR [rax+0x1400114],ah
	...
   1400113e1:	(bad)  
   1400113e2:	(bad)
   1400113e7:	addr32 push 0x6c6b6a69
   1400113ed:	ins    DWORD PTR es:[rdi],dx
   1400113ee:	outs   dx,BYTE PTR ds:[rsi]
   1400113ef:	outs   dx,DWORD PTR ds:[rsi]
   1400113f0:	jo     0x140011463
   1400113f2:	jb     0x140011467
   1400113f4:	je     0x14001146b
   1400113f6:	jbe    0x14001146f
   1400113f8:	js     0x140011473
   1400113fa:	jp     0x1400113fc
   1400113fc:	add    BYTE PTR [rax],al
   1400113fe:	add    BYTE PTR [rax],al
   140011400:	add    BYTE PTR [rcx+0x42],al
   140011403:	rex.XB
   140011404:	rex.R
   140011405:	rex.RB
   140011406:	rex.RX
   140011407:	rex.RXB
   140011408:	rex.W
   140011409:	rex.WB
   14001140a:	rex.WX
   14001140b:	rex.WXB
   14001140c:	rex.WR
   14001140d:	rex.WRB
   14001140e:	rex.WRX
   14001140f:	rex.WRXB push r8
   140011411:	push   rcx
   140011412:	push   rdx
   140011413:	push   rbx
   140011414:	push   rsp
   140011415:	push   rbp
   140011416:	push   rsi
   140011417:	push   rdi
   140011418:	pop    rax
   140011419:	pop    rcx
   14001141a:	pop    rdx
	...
   1400114fb:	add    BYTE PTR [rax],al
   1400114fd:	add    BYTE PTR [rax],dl
   1400114ff:	adc    BYTE PTR [rax],dl
   140011501:	adc    BYTE PTR [rax],dl
   140011503:	adc    BYTE PTR [rax],dl
   140011505:	adc    BYTE PTR [rax],dl
   140011507:	adc    BYTE PTR [rax],dl
   140011509:	adc    BYTE PTR [rax],dl
   14001150b:	adc    BYTE PTR [rax],dl
   14001150d:	adc    BYTE PTR [rax],dl
   14001150f:	adc    BYTE PTR [rax],dl
   140011511:	adc    BYTE PTR [rax],dl
   140011513:	adc    BYTE PTR [rax],dl
   140011515:	adc    BYTE PTR [rax],dl
   140011517:	adc    BYTE PTR [rax],al
   140011519:	add    BYTE PTR [rax],al
   14001151b:	add    BYTE PTR [rax],al
   14001151d:	add    BYTE PTR [rax],ah
   14001151f:	and    BYTE PTR [rax],ah
   140011521:	and    BYTE PTR [rax],ah
   140011523:	and    BYTE PTR [rax],ah
   140011525:	and    BYTE PTR [rax],ah
   140011527:	and    BYTE PTR [rax],ah
   140011529:	and    BYTE PTR [rax],ah
   14001152b:	and    BYTE PTR [rax],ah
   14001152d:	and    BYTE PTR [rax],ah
   14001152f:	and    BYTE PTR [rax],ah
   140011531:	and    BYTE PTR [rax],ah
   140011533:	and    BYTE PTR [rax],ah
   140011535:	and    BYTE PTR [rax],ah
   140011537:	and    BYTE PTR [rax],al
	...
   1400115fd:	add    BYTE PTR [rcx+0x62],ah
   140011600:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   140011604:	addr32 push 0x6c6b6a69
   14001160a:	ins    DWORD PTR es:[rdi],dx
   14001160b:	outs   dx,BYTE PTR ds:[rsi]
   14001160c:	outs   dx,DWORD PTR ds:[rsi]
   14001160d:	jo     0x140011680
   14001160f:	jb     0x140011684
   140011611:	je     0x140011688
   140011613:	jbe    0x14001168c
   140011615:	js     0x140011690
   140011617:	jp     0x140011619
   140011619:	add    BYTE PTR [rax],al
   14001161b:	add    BYTE PTR [rax],al
   14001161d:	add    BYTE PTR [rcx+0x42],al
   140011620:	rex.XB
   140011621:	rex.R
   140011622:	rex.RB
   140011623:	rex.RX
   140011624:	rex.RXB
   140011625:	rex.W
   140011626:	rex.WB
   140011627:	rex.WX
   140011628:	rex.WXB
   140011629:	rex.WR
   14001162a:	rex.WRB
   14001162b:	rex.WRX
   14001162c:	rex.WRXB push r8
   14001162e:	push   rcx
   14001162f:	push   rdx
   140011630:	push   rbx
   140011631:	push   rsp
   140011632:	push   rbp
   140011633:	push   rsi
   140011634:	push   rdi
   140011635:	pop    rax
   140011636:	pop    rcx
   140011637:	pop    rdx
	...
   1400116c0:	or     BYTE PTR [rax],al
   1400116c2:	add    BYTE PTR [rax],al
   1400116c4:	or     al,0x0
	...
   1400116ce:	add    BYTE PTR [rax],al
   1400116d0:	add    DWORD PTR [rax],eax
   1400116d2:	add    BYTE PTR [rax],al
   1400116d4:	(bad)  
   1400116d5:	add    BYTE PTR [rax],al
   1400116d7:	add    BYTE PTR [rdx],al
   1400116d9:	add    BYTE PTR [rax],al
   1400116db:	add    BYTE PTR [rdx],al
   1400116dd:	add    BYTE PTR [rax],al
   1400116df:	add    BYTE PTR [rbx],al
   1400116e1:	add    BYTE PTR [rax],al
   1400116e3:	add    BYTE PTR [rdx],al
   1400116e5:	add    BYTE PTR [rax],al
   1400116e7:	add    BYTE PTR [rax+rax*1],al
   1400116ea:	add    BYTE PTR [rax],al
   1400116ec:	sbb    BYTE PTR [rax],al
   1400116ee:	add    BYTE PTR [rax],al
   1400116f0:	add    eax,0xd000000
   1400116f5:	add    BYTE PTR [rax],al
   1400116f7:	add    BYTE PTR [rsi],al
   1400116f9:	add    BYTE PTR [rax],al
   1400116fb:	add    BYTE PTR [rcx],cl
   1400116fd:	add    BYTE PTR [rax],al
   1400116ff:	add    BYTE PTR [rdi],al
   140011701:	add    BYTE PTR [rax],al
   140011703:	add    BYTE PTR [rax+rax*1],cl
   140011706:	add    BYTE PTR [rax],al
   140011708:	or     BYTE PTR [rax],al
   14001170a:	add    BYTE PTR [rax],al
   14001170c:	or     al,0x0
   14001170e:	add    BYTE PTR [rax],al
   140011710:	or     DWORD PTR [rax],eax
   140011712:	add    BYTE PTR [rax],al
   140011714:	or     al,0x0
   140011716:	add    BYTE PTR [rax],al
   140011718:	or     al,BYTE PTR [rax]
   14001171a:	add    BYTE PTR [rax],al
   14001171c:	(bad)  
   14001171d:	add    BYTE PTR [rax],al
   14001171f:	add    BYTE PTR [rbx],cl
   140011721:	add    BYTE PTR [rax],al
   140011723:	add    BYTE PTR [rax],cl
   140011725:	add    BYTE PTR [rax],al
   140011727:	add    BYTE PTR [rax+rax*1],cl
   14001172a:	add    BYTE PTR [rax],al
   14001172c:	(bad)  
   14001172d:	add    BYTE PTR [rax],al
   14001172f:	add    BYTE PTR [rip+0x16000000],cl        # 0x156011735
   140011735:	add    BYTE PTR [rax],al
   140011737:	add    BYTE PTR [rdi],cl
   140011739:	add    BYTE PTR [rax],al
   14001173b:	add    BYTE PTR [rdx],al
   14001173d:	add    BYTE PTR [rax],al
   14001173f:	add    BYTE PTR [rax],dl
   140011741:	add    BYTE PTR [rax],al
   140011743:	add    BYTE PTR [rip+0x11000000],cl        # 0x151011749
   140011749:	add    BYTE PTR [rax],al
   14001174b:	add    BYTE PTR [rdx],dl
   14001174d:	add    BYTE PTR [rax],al
   14001174f:	add    BYTE PTR [rdx],dl
   140011751:	add    BYTE PTR [rax],al
   140011753:	add    BYTE PTR [rdx],al
   140011755:	add    BYTE PTR [rax],al
   140011757:	add    BYTE PTR [rcx],ah
   140011759:	add    BYTE PTR [rax],al
   14001175b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175011761
   140011761:	add    BYTE PTR [rax],al
   140011763:	add    BYTE PTR [rdx],al
   140011765:	add    BYTE PTR [rax],al
   140011767:	add    BYTE PTR [rcx+0x0],al
   14001176a:	add    BYTE PTR [rax],al
   14001176c:	or     eax,0x43000000
   140011771:	add    BYTE PTR [rax],al
   140011773:	add    BYTE PTR [rdx],al
   140011775:	add    BYTE PTR [rax],al
   140011777:	add    BYTE PTR [rax+0x0],dl
   14001177a:	add    BYTE PTR [rax],al
   14001177c:	adc    DWORD PTR [rax],eax
   14001177e:	add    BYTE PTR [rax],al
   140011780:	push   rdx
   140011781:	add    BYTE PTR [rax],al
   140011783:	add    BYTE PTR [rip+0x53000000],cl        # 0x193011789
   140011789:	add    BYTE PTR [rax],al
   14001178b:	add    BYTE PTR [rip+0x57000000],cl        # 0x197011791
   140011791:	add    BYTE PTR [rax],al
   140011793:	add    BYTE PTR [rsi],dl
   140011795:	add    BYTE PTR [rax],al
   140011797:	add    BYTE PTR [rcx+0x0],bl
   14001179a:	add    BYTE PTR [rax],al
   14001179c:	or     eax,DWORD PTR [rax]
   14001179e:	add    BYTE PTR [rax],al
   1400117a0:	ins    BYTE PTR es:[rdi],dx
   1400117a1:	add    BYTE PTR [rax],al
   1400117a3:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad0117a9
   1400117a9:	add    BYTE PTR [rax],al
   1400117ab:	add    BYTE PTR [rax],ah
   1400117ad:	add    BYTE PTR [rax],al
   1400117af:	add    BYTE PTR [rax+0x0],dh
   1400117b2:	add    BYTE PTR [rax],al
   1400117b4:	sbb    al,0x0
   1400117b6:	add    BYTE PTR [rax],al
   1400117b8:	jb     0x1400117ba
   1400117ba:	add    BYTE PTR [rax],al
   1400117bc:	or     DWORD PTR [rax],eax
   1400117be:	add    BYTE PTR [rax],al
   1400117c0:	(bad)  
   1400117c1:	add    BYTE PTR [rax],al
   1400117c3:	add    BYTE PTR [rsi],dl
   1400117c5:	add    BYTE PTR [rax],al
   1400117c7:	add    BYTE PTR [rax+0xa000000],al
   1400117cd:	add    BYTE PTR [rax],al
   1400117cf:	add    BYTE PTR [rcx+0xa000000],al
   1400117d5:	add    BYTE PTR [rax],al
   1400117d7:	add    BYTE PTR [rdx+0x9000000],al
   1400117dd:	add    BYTE PTR [rax],al
   1400117df:	add    BYTE PTR [rbx+0x16000000],al
   1400117e5:	add    BYTE PTR [rax],al
   1400117e7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   1400117ee:	add    BYTE PTR [rax],al
   1400117f0:	xchg   ecx,eax
   1400117f1:	add    BYTE PTR [rax],al
   1400117f3:	add    BYTE PTR [rcx],ch
   1400117f5:	add    BYTE PTR [rax],al
   1400117f7:	add    BYTE PTR [rsi+0xd000000],bl
   1400117fd:	add    BYTE PTR [rax],al
   1400117ff:	add    BYTE PTR [rcx+0x2000000],ah
   140011805:	add    BYTE PTR [rax],al
   140011807:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   14001180e:	add    BYTE PTR [rax],al
   140011810:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140011811:	add    BYTE PTR [rax],al
   140011813:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf7011819
   140011819:	add    BYTE PTR [rax],al
   14001181b:	add    BYTE PTR [rcx],dl
   14001181d:	add    BYTE PTR [rax],al
   14001181f:	add    dh,cl
   140011821:	add    BYTE PTR [rax],al
   140011823:	add    BYTE PTR [rdx],al
   140011825:	add    BYTE PTR [rax],al
   140011827:	add    bh,dl
   140011829:	add    BYTE PTR [rax],al
   14001182b:	add    BYTE PTR [rbx],cl
   14001182d:	add    BYTE PTR [rax],al
   14001182f:	add    BYTE PTR [rax],bl
   140011831:	(bad)  
   140011832:	add    BYTE PTR [rax],al
   140011834:	or     al,0x0
	...
   14001183e:	add    BYTE PTR [rax],al
   140011840:	add    DWORD PTR [rax],eax
   140011842:	add    BYTE PTR [rax],al
   140011844:	rex.XB add BYTE PTR [r8],al
   140011847:	add    BYTE PTR [rax+0x18],dl
   14001184a:	add    DWORD PTR [rax+0x1],eax
   14001184d:	add    BYTE PTR [rax],al
   14001184f:	add    BYTE PTR [rcx],al
	...
   1400118b5:	add    BYTE PTR [rax],al
   1400118b7:	add    BYTE PTR [rax+rbx*1+0x1],al
   1400118bb:	rex add DWORD PTR [rax],eax
	...
   1400118d6:	add    BYTE PTR [rax],al
   1400118d8:	sbb    BYTE PTR [rcx],r8b
   1400118db:	rex add DWORD PTR [rax],eax
	...
   1400118f6:	add    BYTE PTR [rax],al
   1400118f8:	sbb    BYTE PTR [rcx],r8b
   1400118fb:	rex add DWORD PTR [rax],eax
	...
   140011916:	add    BYTE PTR [rax],al
   140011918:	sbb    BYTE PTR [rcx],r8b
   14001191b:	rex add DWORD PTR [rax],eax
	...
   140011936:	add    BYTE PTR [rax],al
   140011938:	sbb    BYTE PTR [rcx],r8b
   14001193b:	rex add DWORD PTR [rax],eax
	...
   140011956:	add    BYTE PTR [rax],al
   140011958:	add    DWORD PTR [rax],eax
   14001195a:	add    BYTE PTR [rax],al
   14001195c:	add    DWORD PTR [rax],eax
	...
   140011976:	add    BYTE PTR [rax],al
   140011978:	(bad)  
   140011979:	and    BYTE PTR [rcx],al
   14001197b:	rex add DWORD PTR [rax],eax
	...
   14001198e:	add    BYTE PTR [rax],al
   140011990:	xor    BYTE PTR [rbx],bl
   140011992:	add    BYTE PTR [rax+0x1],al
   140011995:	add    BYTE PTR [rax],al
   140011997:	add    al,al
   140011999:	(bad)  
   14001199a:	add    BYTE PTR [rax+0x1],al
   14001199d:	add    BYTE PTR [rax],al
   14001199f:	add    BYTE PTR [rax+0x21],al
   1400119a2:	add    BYTE PTR [rax+0x1],al
   1400119a5:	add    BYTE PTR [rax],al
   1400119a7:	add    BYTE PTR [rax],al
   1400119a9:	and    DWORD PTR [rcx],eax
   1400119ab:	rex add DWORD PTR [rax],eax
   1400119ae:	add    BYTE PTR [rax],al
   1400119b0:	push   rax
   1400119b1:	sbb    BYTE PTR [rcx],al
   1400119b3:	rex add DWORD PTR [rax],eax
   1400119b6:	add    BYTE PTR [rax],al
   1400119b8:	movabs al,ds:0xfe00000001400114
   1400119c1:	(bad)  
   1400119c2:	(bad)  
   1400119c3:	inc    DWORD PTR [rax]
   1400119c5:	add    BYTE PTR [rax],al
   1400119c7:	add    BYTE PTR [rcx+rbx*1+0x14000],al
   1400119ce:	add    BYTE PTR [rax],al
   1400119d0:	nop
   1400119d1:	sbb    DWORD PTR [rax],eax
   1400119d3:	rex add DWORD PTR [rax],eax
	...
   1400119de:	add    BYTE PTR [rax],al
   1400119e0:	add    BYTE PTR [rax],bh
   1400119e2:	add    DWORD PTR [rax+0x1],eax
	...
   1400119f1:	cmp    BYTE PTR [rcx],al
   1400119f3:	rex add DWORD PTR [rax],eax
   1400119f6:	add    BYTE PTR [rax],al
   1400119f8:	add    DWORD PTR [rcx],eax
	...
   140011a02:	add    BYTE PTR [rax],al
   140011a04:	add    BYTE PTR [rax],dl
	...
   140011a26:	add    BYTE PTR [rax],al
   140011a28:	add    al,BYTE PTR [rax]
   140011a2a:	add    BYTE PTR [rax],al
   140011a2c:	add    DWORD PTR [rax],eax
	...
   140011a56:	add    BYTE PTR [rax],al
   140011a58:	add    al,BYTE PTR [rax]
   140011a5a:	add    BYTE PTR [rax],al
   140011a5c:	add    al,BYTE PTR [rax]
	...
   140011da6:	add    BYTE PTR [rax],al
   140011da8:	add    DWORD PTR [rax],eax
	...
   140011db6:	add    BYTE PTR [rax],al
   140011db8:	add    DWORD PTR [rax],eax
	...
   140011dd6:	add    BYTE PTR [rax],al
   140011dd8:	add    DWORD PTR [rax],eax
	...
   140011de6:	add    BYTE PTR [rax],al
   140011de8:	add    DWORD PTR [rax],eax
	...
   140011e06:	add    BYTE PTR [rax],al
   140011e08:	add    DWORD PTR [rax],eax
	...
   140011e16:	add    BYTE PTR [rax],al
   140011e18:	add    DWORD PTR [rax],eax
	...
   140011e26:	add    BYTE PTR [rax],al
   140011e28:	add    DWORD PTR [rax],eax
	...
   140011e46:	add    BYTE PTR [rax],al
   140011e48:	add    DWORD PTR [rax],eax
	...
   140011e66:	add    BYTE PTR [rax],al
   140011e68:	add    DWORD PTR [rax],eax
	...
   140011e76:	add    BYTE PTR [rax],al
   140011e78:	add    DWORD PTR [rax],eax
	...
   140011e86:	add    BYTE PTR [rax],al
   140011e88:	add    DWORD PTR [rax],eax
	...
   140011ea6:	add    BYTE PTR [rax],al
   140011ea8:	add    DWORD PTR [rax],eax
	...
   140011eb6:	add    BYTE PTR [rax],al
   140011eb8:	add    DWORD PTR [rax],eax
	...
   140011ec6:	add    BYTE PTR [rax],al
   140011ec8:	add    DWORD PTR [rax],eax
	...
   140011fde:	add    BYTE PTR [rax],al
   140011fe0:	mov    ah,0xec
   140011fe2:	add    BYTE PTR [rax+0x1],al
   140011fe5:	add    BYTE PTR [rax],al
   140011fe7:	add    BYTE PTR [rsp+rbp*8+0x14000],dh
   140011fee:	add    BYTE PTR [rax],al
   140011ff0:	mov    ah,0xec
   140011ff2:	add    BYTE PTR [rax+0x1],al
   140011ff5:	add    BYTE PTR [rax],al
   140011ff7:	add    BYTE PTR [rsp+rbp*8+0x14000],dh
   140011ffe:	add    BYTE PTR [rax],al
   140012000:	mov    ah,0xec
   140012002:	add    BYTE PTR [rax+0x1],al
   140012005:	add    BYTE PTR [rax],al
   140012007:	add    BYTE PTR [rsp+rbp*8+0x14000],dh
   14001200e:	add    BYTE PTR [rax],al
   140012010:	mov    ah,0xec
   140012012:	add    BYTE PTR [rax+0x1],al
   140012015:	add    BYTE PTR [rax],al
   140012017:	add    BYTE PTR [rsp+rbp*8+0x14000],dh
   14001201e:	add    BYTE PTR [rax],al
   140012020:	mov    ah,0xec
   140012022:	add    BYTE PTR [rax+0x1],al
   140012025:	add    BYTE PTR [rax],al
   140012027:	add    BYTE PTR [rsp+rbp*8+0x14000],dh
   14001202e:	add    BYTE PTR [rax],al
   140012030:	xor    BYTE PTR [rbx],bl
   140012032:	add    BYTE PTR [rax+0x1],al
   140012035:	add    BYTE PTR [rax],al
   140012037:	add    BYTE PTR [rdx],dh
   140012039:	sbb    eax,0x14000
   14001203e:	add    BYTE PTR [rax],al
   140012040:	add    DWORD PTR [rax],eax
   140012042:	add    BYTE PTR [rax],al
   140012044:	add    BYTE PTR cs:[rax],al
   140012047:	add    BYTE PTR [rcx],al
   140012049:	add    BYTE PTR [rax],al
   14001204b:	add    BYTE PTR [rax],al
   14001204d:	add    BYTE PTR [rax],al
   14001204f:	add    BYTE PTR [rax+0x20],ah
   140012052:	add    DWORD PTR [rax+0x1],eax
   140012055:	add    BYTE PTR [rax],al
   140012057:	add    BYTE PTR [rsi],ch
   140012059:	add    BYTE PTR [rax],al
   14001205b:	add    BYTE PTR [rax],al
   14001205d:	add    BYTE PTR [rax],al
   14001205f:	add    BYTE PTR [rax+0x20],bl
   140012062:	add    DWORD PTR [rax+0x1],eax
   140012065:	add    BYTE PTR [rax],al
   140012067:	add    al,ch
   140012069:	xor    al,BYTE PTR [rcx]
   14001206b:	rex add DWORD PTR [rax],eax
   14001206e:	add    BYTE PTR [rax],al
   140012070:	call   0x1414121a7
   140012075:	add    BYTE PTR [rax],al
   140012077:	add    al,ch
   140012079:	xor    al,BYTE PTR [rcx]
   14001207b:	rex add DWORD PTR [rax],eax
   14001207e:	add    BYTE PTR [rax],al
   140012080:	call   0x1414121b7
   140012085:	add    BYTE PTR [rax],al
   140012087:	add    al,ch
   140012089:	xor    al,BYTE PTR [rcx]
   14001208b:	rex add DWORD PTR [rax],eax
   14001208e:	add    BYTE PTR [rax],al
   140012090:	call   0x1414121c7
   140012095:	add    BYTE PTR [rax],al
   140012097:	add    al,ch
   140012099:	xor    al,BYTE PTR [rcx]
   14001209b:	rex add DWORD PTR [rax],eax
   14001209e:	add    BYTE PTR [rax],al
   1400120a0:	call   0x1414121d7
   1400120a5:	add    BYTE PTR [rax],al
   1400120a7:	add    al,ch
   1400120a9:	xor    al,BYTE PTR [rcx]
   1400120ab:	rex add DWORD PTR [rax],eax
   1400120ae:	add    BYTE PTR [rax],al
   1400120b0:	jg     0x140012131
   1400120b2:	jg     0x140012133
   1400120b4:	jg     0x140012135
   1400120b6:	jg     0x140012137
   1400120b8:	clc    
   1400120b9:	and    BYTE PTR [rcx],al
   1400120bb:	rex add DWORD PTR [rax],eax
   1400120be:	add    BYTE PTR [rax],al
   1400120c0:	in     al,dx
   1400120c1:	xor    al,BYTE PTR [rcx]
   1400120c3:	rex add DWORD PTR [rax],eax
   1400120c6:	add    BYTE PTR [rax],al
   1400120c8:	in     al,dx
   1400120c9:	xor    al,BYTE PTR [rcx]
   1400120cb:	rex add DWORD PTR [rax],eax
   1400120ce:	add    BYTE PTR [rax],al
   1400120d0:	in     al,dx
   1400120d1:	xor    al,BYTE PTR [rcx]
   1400120d3:	rex add DWORD PTR [rax],eax
   1400120d6:	add    BYTE PTR [rax],al
   1400120d8:	in     al,dx
   1400120d9:	xor    al,BYTE PTR [rcx]
   1400120db:	rex add DWORD PTR [rax],eax
   1400120de:	add    BYTE PTR [rax],al
   1400120e0:	in     al,dx
   1400120e1:	xor    al,BYTE PTR [rcx]
   1400120e3:	rex add DWORD PTR [rax],eax
   1400120e6:	add    BYTE PTR [rax],al
   1400120e8:	in     al,dx
   1400120e9:	xor    al,BYTE PTR [rcx]
   1400120eb:	rex add DWORD PTR [rax],eax
   1400120ee:	add    BYTE PTR [rax],al
   1400120f0:	in     al,dx
   1400120f1:	xor    al,BYTE PTR [rcx]
   1400120f3:	rex add DWORD PTR [rax],eax
   1400120f6:	add    BYTE PTR [rax],al
   1400120f8:	add    BYTE PTR cs:[rax],al
   1400120fb:	add    BYTE PTR [rax],al
   1400120fd:	add    BYTE PTR [rax],al
   1400120ff:	add    BYTE PTR [rax+0x22],al
   140012102:	add    BYTE PTR [rax+0x1],al
   140012105:	add    BYTE PTR [rax],al
   140012107:	add    BYTE PTR [rdx+riz*1+0x0],al
   14001210b:	rex add DWORD PTR [rax],eax
   14001210e:	add    BYTE PTR [rax],al
   140012110:	rex.W and al,BYTE PTR [rax]
   140012113:	rex add DWORD PTR [rax],eax
   140012116:	add    BYTE PTR [rax],al
   140012118:	rex.WR and r8b,BYTE PTR [rax]
   14001211b:	rex add DWORD PTR [rax],eax
   14001211e:	add    BYTE PTR [rax],al
   140012120:	push   rax
   140012121:	and    al,BYTE PTR [rax]
   140012123:	rex add DWORD PTR [rax],eax
   140012126:	add    BYTE PTR [rax],al
   140012128:	push   rsp
   140012129:	and    al,BYTE PTR [rax]
   14001212b:	rex add DWORD PTR [rax],eax
   14001212e:	add    BYTE PTR [rax],al
   140012130:	pop    rax
   140012131:	and    al,BYTE PTR [rax]
   140012133:	rex add DWORD PTR [rax],eax
   140012136:	add    BYTE PTR [rax],al
   140012138:	pop    rsp
   140012139:	and    al,BYTE PTR [rax]
   14001213b:	rex add DWORD PTR [rax],eax
   14001213e:	add    BYTE PTR [rax],al
   140012140:	and    al,BYTE PTR fs:[rax]
   140012143:	rex add DWORD PTR [rax],eax
   140012146:	add    BYTE PTR [rax],al
   140012148:	jo     0x14001216c
   14001214a:	add    BYTE PTR [rax+0x1],al
   14001214d:	add    BYTE PTR [rax],al
   14001214f:	add    BYTE PTR [rax+0x22],bh
   140012152:	add    BYTE PTR [rax+0x1],al
   140012155:	add    BYTE PTR [rax],al
   140012157:	add    BYTE PTR [rax+0x1400022],cl
   14001215d:	add    BYTE PTR [rax],al
   14001215f:	add    BYTE PTR [rdx+riz*1+0x14000],dl
   140012166:	add    BYTE PTR [rax],al
   140012168:	movabs al,ds:0xac00000001400022
   140012171:	and    al,BYTE PTR [rax]
   140012173:	rex add DWORD PTR [rax],eax
   140012176:	add    BYTE PTR [rax],al
   140012178:	mov    al,0x22
   14001217a:	add    BYTE PTR [rax+0x1],al
   14001217d:	add    BYTE PTR [rax],al
   14001217f:	add    BYTE PTR [rdx+riz*1+0x14000],dh
   140012186:	add    BYTE PTR [rax],al
   140012188:	mov    eax,0x1400022
   14001218d:	add    BYTE PTR [rax],al
   14001218f:	add    BYTE PTR [rdx+riz*1+0x14000],bh
   140012196:	add    BYTE PTR [rax],al
   140012198:	shl    BYTE PTR [rdx],0x0
   14001219b:	rex add DWORD PTR [rax],eax
   14001219e:	add    BYTE PTR [rax],al
   1400121a0:	(bad)
   1400121a4:	add    DWORD PTR [rax],eax
   1400121a6:	add    BYTE PTR [rax],al
   1400121a8:	enter  0x22,0x40
   1400121ac:	add    DWORD PTR [rax],eax
   1400121ae:	add    BYTE PTR [rax],al
   1400121b0:	int3   
   1400121b1:	and    al,BYTE PTR [rax]
   1400121b3:	rex add DWORD PTR [rax],eax
   1400121b6:	add    BYTE PTR [rax],al
   1400121b8:	shl    BYTE PTR [rdx],1
   1400121ba:	add    BYTE PTR [rax+0x1],al
   1400121bd:	add    BYTE PTR [rax],al
   1400121bf:	add    ah,dl
   1400121c1:	and    al,BYTE PTR [rax]
   1400121c3:	rex add DWORD PTR [rax],eax
   1400121c6:	add    BYTE PTR [rax],al
   1400121c8:	fsub   DWORD PTR [rdx]
   1400121ca:	add    BYTE PTR [rax+0x1],al
   1400121cd:	add    BYTE PTR [rax],al
   1400121cf:	add    al,ah
   1400121d1:	and    al,BYTE PTR [rax]
   1400121d3:	rex add DWORD PTR [rax],eax
   1400121d6:	add    BYTE PTR [rax],al
   1400121d8:	call   0x1414121ff
   1400121dd:	add    BYTE PTR [rax],al
   1400121df:	add    ah,dh
   1400121e1:	and    al,BYTE PTR [rax]
   1400121e3:	rex add DWORD PTR [rax],eax
   1400121e6:	add    BYTE PTR [rax],al
   1400121e8:	cld    
   1400121e9:	and    al,BYTE PTR [rax]
   1400121eb:	rex add DWORD PTR [rax],eax
   1400121ee:	add    BYTE PTR [rax],al
   1400121f0:	mov    esp,0x1400022
   1400121f5:	add    BYTE PTR [rax],al
   1400121f7:	add    BYTE PTR [rbx+riz*1],al
   1400121fa:	add    BYTE PTR [rax+0x1],al
   1400121fd:	add    BYTE PTR [rax],al
   1400121ff:	add    BYTE PTR [rbx+riz*1],cl
   140012202:	add    BYTE PTR [rax+0x1],al
   140012205:	add    BYTE PTR [rax],al
   140012207:	add    BYTE PTR [rbx+riz*1],dl
   14001220a:	add    BYTE PTR [rax+0x1],al
   14001220d:	add    BYTE PTR [rax],al
   14001220f:	add    BYTE PTR [rax],ah
   140012211:	and    eax,DWORD PTR [rax]
   140012213:	rex add DWORD PTR [rax],eax
   140012216:	add    BYTE PTR [rax],al
   140012218:	xor    BYTE PTR [rbx],ah
   14001221a:	add    BYTE PTR [rax+0x1],al
   14001221d:	add    BYTE PTR [rax],al
   14001221f:	add    BYTE PTR [rax],bh
   140012221:	and    eax,DWORD PTR [rax]
   140012223:	rex add DWORD PTR [rax],eax
   140012226:	add    BYTE PTR [rax],al
   140012228:	and    rax,QWORD PTR [rax]
   14001222b:	rex add DWORD PTR [rax],eax
   14001222e:	add    BYTE PTR [rax],al
   140012230:	push   rsp
   140012231:	and    eax,DWORD PTR [rax]
   140012233:	rex add DWORD PTR [rax],eax
   140012236:	add    BYTE PTR [rax],al
   140012238:	pop    rax
   140012239:	and    eax,DWORD PTR [rax]
   14001223b:	rex add DWORD PTR [rax],eax
   14001223e:	add    BYTE PTR [rax],al
   140012240:	(bad)  
   140012241:	and    eax,DWORD PTR [rax]
   140012243:	rex add DWORD PTR [rax],eax
   140012246:	add    BYTE PTR [rax],al
   140012248:	jo     0x14001226d
   14001224a:	add    BYTE PTR [rax+0x1],al
   14001224d:	add    BYTE PTR [rax],al
   14001224f:	add    BYTE PTR [rax+0x1400023],cl
   140012255:	add    BYTE PTR [rax],al
   140012257:	add    BYTE PTR [rcx],cl
   140012259:	add    al,0x0
   14001225b:	add    BYTE PTR [rcx],al
	...
   140012265:	add    BYTE PTR [rax],al
   140012267:	add    BYTE PTR [rax+0x1400023],bl
   14001226d:	add    BYTE PTR [rax],al
   14001226f:	add    BYTE PTR [rax+0x1400023],ah
   140012275:	add    BYTE PTR [rax],al
   140012277:	add    BYTE PTR [rax+0x1400023],ch
   14001227d:	add    BYTE PTR [rax],al
   14001227f:	add    BYTE PTR [rax+0x1400023],dh
   140012285:	add    BYTE PTR [rax],al
   140012287:	add    BYTE PTR [rax+0x1400023],bh
   14001228d:	add    BYTE PTR [rax],al
   14001228f:	add    al,al
   140012291:	and    eax,DWORD PTR [rax]
   140012293:	rex add DWORD PTR [rax],eax
   140012296:	add    BYTE PTR [rax],al
   140012298:	enter  0x23,0x40
   14001229c:	add    DWORD PTR [rax],eax
   14001229e:	add    BYTE PTR [rax],al
   1400122a0:	shl    BYTE PTR [rbx],1
   1400122a2:	add    BYTE PTR [rax+0x1],al
   1400122a5:	add    BYTE PTR [rax],al
   1400122a7:	add    al,ah
   1400122a9:	and    eax,DWORD PTR [rax]
   1400122ab:	rex add DWORD PTR [rax],eax
   1400122ae:	add    BYTE PTR [rax],al
   1400122b0:	lock and eax,DWORD PTR [rax]
   1400122b3:	rex add DWORD PTR [rax],eax
   1400122b6:	add    BYTE PTR [rax],al
   1400122b8:	add    BYTE PTR [rax+rax*1],ah
   1400122bb:	rex add DWORD PTR [rax],eax
   1400122be:	add    BYTE PTR [rax],al
   1400122c0:	sbb    BYTE PTR [rax+rax*1],ah
   1400122c3:	rex add DWORD PTR [rax],eax
   1400122c6:	add    BYTE PTR [rax],al
   1400122c8:	xor    BYTE PTR [rax+rax*1],ah
   1400122cb:	rex add DWORD PTR [rax],eax
   1400122ce:	add    BYTE PTR [rax],al
   1400122d0:	and    al,0x0
   1400122d3:	rex add DWORD PTR [rax],eax
   1400122d6:	add    BYTE PTR [rax],al
   1400122d8:	pop    rax
   1400122d9:	and    al,0x0
   1400122db:	rex add DWORD PTR [rax],eax
   1400122de:	add    BYTE PTR [rax],al
   1400122e0:	(bad)  
   1400122e1:	and    al,0x0
   1400122e3:	rex add DWORD PTR [rax],eax
   1400122e6:	add    BYTE PTR [rax],al
   1400122e8:	push   0x1400024
   1400122ed:	add    BYTE PTR [rax],al
   1400122ef:	add    BYTE PTR [rax+0x24],dh
   1400122f2:	add    BYTE PTR [rax+0x1],al
   1400122f5:	add    BYTE PTR [rax],al
   1400122f7:	add    BYTE PTR [rax+0x24],bh
   1400122fa:	add    BYTE PTR [rax+0x1],al
   1400122fd:	add    BYTE PTR [rax],al
   1400122ff:	add    BYTE PTR [rax+0x1400024],al
   140012305:	add    BYTE PTR [rax],al
   140012307:	add    BYTE PTR [rax+0x1400024],cl
   14001230d:	add    BYTE PTR [rax],al
   14001230f:	add    BYTE PTR [rax+0x1400024],dl
   140012315:	add    BYTE PTR [rax],al
   140012317:	add    BYTE PTR [rax+0x1400024],bl
   14001231d:	add    BYTE PTR [rax],al
   14001231f:	add    BYTE PTR [rax+0x1400024],ah
   140012325:	add    BYTE PTR [rax],al
   140012327:	add    BYTE PTR [rax+0x1400024],ch
   14001232d:	add    BYTE PTR [rax],al
   14001232f:	add    BYTE PTR [rax+0x1400024],dh
   140012335:	add    BYTE PTR [rax],al
   140012337:	add    BYTE PTR [rax+0x1400024],bh
   14001233d:	add    BYTE PTR [rax],al
   14001233f:	add    al,cl
   140012341:	and    al,0x0
   140012343:	rex add DWORD PTR [rax],eax
   140012346:	add    BYTE PTR [rax],al
   140012348:	loopne 0x14001236e
   14001234a:	add    BYTE PTR [rax+0x1],al
   14001234d:	add    BYTE PTR [rax],al
   14001234f:	add    al,dh
   140012351:	and    al,0x0
   140012353:	rex add DWORD PTR [rax],eax
   140012356:	add    BYTE PTR [rax],al
   140012358:	js     0x14001237e
   14001235a:	add    BYTE PTR [rax+0x1],al
   14001235d:	add    BYTE PTR [rax],al
   14001235f:	add    BYTE PTR [rax],al
   140012361:	and    eax,0x14000
   140012366:	add    BYTE PTR [rax],al
   140012368:	adc    BYTE PTR [rip+0x14000],ah        # 0x14002636e
   14001236e:	add    BYTE PTR [rax],al
   140012370:	and    BYTE PTR [rip+0x14000],ah        # 0x140026376
   140012376:	add    BYTE PTR [rax],al
   140012378:	xor    BYTE PTR [rip+0x14000],ah        # 0x14002637e
   14001237e:	add    BYTE PTR [rax],al
   140012380:	and    rax,0x14000
   140012386:	add    BYTE PTR [rax],al
   140012388:	pop    rax
   140012389:	and    eax,0x14000
   14001238e:	add    BYTE PTR [rax],al
   140012390:	jo     0x1400123b7
   140012392:	add    BYTE PTR [rax+0x1],al
   140012395:	add    BYTE PTR [rax],al
   140012397:	add    BYTE PTR [rbp+riz*1+0x14000],al
   14001239e:	add    BYTE PTR [rax],al
   1400123a0:	mov    WORD PTR [rip+0x14000],fs        # 0x1400263a6
   1400123a6:	add    BYTE PTR [rax],al
   1400123a8:	cwde   
   1400123a9:	and    eax,0x14000
   1400123ae:	add    BYTE PTR [rax],al
   1400123b0:	mov    al,0x25
   1400123b2:	add    BYTE PTR [rax+0x1],al
   1400123b5:	add    BYTE PTR [rax],al
   1400123b7:	add    al,bl
   1400123b9:	and    eax,0x14000
   1400123be:	add    BYTE PTR [rax],al
   1400123c0:	add    BYTE PTR [rcx],ah
   1400123c2:	add    DWORD PTR [rax+0x1],eax
	...
   1400123cd:	add    BYTE PTR [rax],al
   1400123cf:	add    BYTE PTR [rbx],al
	...
   1400123dd:	add    BYTE PTR [rax],al
   1400123df:	add    bh,bh
   1400123e1:	(bad)  
   1400123e2:	(bad)  
   1400123e3:	inc    DWORD PTR [rax]
	...
   1400123ed:	add    BYTE PTR [rax],al
   1400123ef:	add    bh,bh
   1400123f1:	(bad)  
   1400123f2:	(bad)  
   1400123f3:	inc    DWORD PTR [rax]
	...
   1400123fd:	add    BYTE PTR [rax],al
   1400123ff:	add    BYTE PTR [rax+0x53],dl
   140012402:	push   rsp
	...
   14001243f:	add    BYTE PTR [rax+0x44],dl
   140012442:	push   rsp
	...
   14001247f:	add    BYTE PTR [rcx],al
   140012481:	add    BYTE PTR [rax],al
   140012483:	add    al,dh
   140012485:	icebp  
   140012486:	(bad)  
   140012487:	inc    DWORD PTR [rax+0x70]
   14001248d:	add    BYTE PTR [rax],al
   14001248f:	add    BYTE PTR [rax],al
   140012491:	and    al,0x1
   140012493:	rex add DWORD PTR [rax],eax
   140012496:	add    BYTE PTR [rax],al
   140012498:	and    al,0x1
   14001249b:	rex add DWORD PTR [rax],eax
   14001249e:	add    BYTE PTR [rax],al
   1400124a0:	(bad)  
   1400124a1:	(bad)  
   1400124a2:	(bad)  
   1400124a3:	(bad)  
   1400124a4:	(bad)  
   1400124a5:	(bad)  
   1400124a6:	(bad)  
   1400124a7:	(bad)  
   1400124a8:	(bad)  
   1400124a9:	(bad)  
   1400124aa:	(bad)  
   1400124ab:	(bad)  
   1400124ac:	(bad)  
   1400124ad:	(bad)  
   1400124ae:	(bad)  
   1400124af:	(bad)  
   1400124b0:	(bad)  
   1400124b1:	(bad)  
   1400124b2:	(bad)  
   1400124b3:	(bad)  
   1400124b4:	(bad)  
   1400124b5:	(bad)  
   1400124b6:	(bad)  
   1400124b7:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140015000 <.pdata>:
   140015000:	push   0xfffffffff200003e
   140015005:	add    BYTE PTR ds:[rax],al
   140015008:	(bad)  
   140015009:	add    al,0x1
   14001500b:	add    al,bh
   14001500d:	add    BYTE PTR ds:[rax],al
   140015010:	rex.RXB (bad) 
   140015012:	add    BYTE PTR [rax],al
   140015014:	mov    ah,0x9
   140015016:	add    DWORD PTR [rax],eax
   140015018:	push   rax
   140015019:	(bad)  
   14001501a:	add    BYTE PTR [rax],al
   14001501c:	add    BYTE PTR ss:[rax],r8b
   140015020:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015021:	or     DWORD PTR [rcx],eax
   140015023:	add    BYTE PTR [rsp+rax*2],bh
   140015026:	add    BYTE PTR [rax],al
   140015028:	or     al,0x46
   14001502a:	add    BYTE PTR [rax],al
   14001502c:	mov    BYTE PTR [rcx],cl
   14001502e:	add    DWORD PTR [rax],eax
   140015030:	adc    al,0x46
   140015032:	add    BYTE PTR [rax],al
   140015034:	rex.RB
   140015035:	rex.RXB add BYTE PTR [r8],r8b
   140015038:	ins    BYTE PTR es:[rdi],dx
   140015039:	or     DWORD PTR [rcx],eax
   14001503b:	add    BYTE PTR [rdi+rax*2+0x0],cl
   14001503f:	add    BYTE PTR [rdx],dh
   140015041:	rex.W add BYTE PTR [rax],al
   140015044:	push   rsp
   140015045:	or     DWORD PTR [rcx],eax
   140015047:	add    BYTE PTR [rax],bh
   140015049:	rex.W add BYTE PTR [rax],al
   14001504c:	mov    eax,0x4400004c
   140015051:	or     DWORD PTR [rcx],eax
   140015053:	add    al,al
   140015055:	rex.WR add BYTE PTR [rax],r8b
   140015058:	mov    edi,0x3000004d
   14001505d:	or     DWORD PTR [rcx],eax
   14001505f:	add    al,cl
   140015061:	rex.WRB add BYTE PTR [r8],r8b
   140015064:	imul   edx,DWORD PTR [rax+0x0],0x1090c00
   14001506b:	add    BYTE PTR [rax+0x50],dh
   14001506e:	add    BYTE PTR [rax],al
   140015070:	(bad)  
   140015071:	push   rbx
   140015072:	add    BYTE PTR [rax],al
   140015074:	lock or BYTE PTR [rcx],al
   140015077:	add    BYTE PTR [rax],dl
   140015079:	push   rbx
   14001507a:	add    BYTE PTR [rax],al
   14001507c:	ficom  DWORD PTR [rax+rax*1+0x0]
   140015080:	fmul   DWORD PTR [rax]
   140015082:	add    DWORD PTR [rax],eax
   140015084:	loopne 0x1400150da
   140015086:	add    BYTE PTR [rax],al
   140015088:	sub    eax,0xbc000056
   14001508d:	or     BYTE PTR [rcx],al
   14001508f:	add    BYTE PTR [rsi+rdx*2],dh
   140015092:	add    BYTE PTR [rax],al
   140015094:	mov    bl,0x57
   140015096:	add    BYTE PTR [rax],al
   140015098:	movabs al,ds:0xd0000057bc000108
   1400150a1:	pop    rax
   1400150a2:	add    BYTE PTR [rax],al
   1400150a4:	mov    BYTE PTR [rax],cl
   1400150a6:	add    DWORD PTR [rax],eax
   1400150a8:	fcomp  DWORD PTR [rax+0x0]
   1400150ab:	add    BYTE PTR [rdx+0x70000059],bl
   1400150b1:	or     BYTE PTR [rcx],al
   1400150b3:	add    BYTE PTR [rax+0x6c000059],ah
   1400150b9:	pop    rdx
   1400150ba:	add    BYTE PTR [rax],al
   1400150bc:	pop    rax
   1400150bd:	or     BYTE PTR [rcx],al
   1400150bf:	add    BYTE PTR [rdx+rbx*2+0x0],dh
   1400150c3:	add    bh,cl
   1400150c5:	pop    rbx
   1400150c6:	add    BYTE PTR [rax],al
   1400150c8:	cmp    al,0x8
   1400150ca:	add    DWORD PTR [rax],eax
   1400150cc:	fcomp  DWORD PTR [rbx+0x0]
   1400150cf:	add    bh,bl
   1400150d1:	pop    rbp
   1400150d2:	add    BYTE PTR [rax],al
   1400150d4:	sbb    al,0x8
   1400150d6:	add    DWORD PTR [rax],eax
   1400150d8:	call   0x19c01513a
   1400150dd:	pop    rsi
   1400150de:	add    BYTE PTR [rax],al
   1400150e0:	or     al,0x8
   1400150e2:	add    DWORD PTR [rax],eax
   1400150e4:	fs pop rsi
   1400150e6:	add    BYTE PTR [rax],al
   1400150e8:	push   0x61
   1400150ea:	add    BYTE PTR [rax],al
   1400150ec:	fmul   DWORD PTR [rcx]
   1400150ee:	add    DWORD PTR [rax],eax
   1400150f0:	jo     0x140015153
   1400150f2:	add    BYTE PTR [rax],al
   1400150f4:	cmp    ah,BYTE PTR [rdx+0x0]
   1400150f7:	add    ah,dh
   1400150f9:	(bad)  
   1400150fa:	add    DWORD PTR [rax],eax
   1400150fc:	rex (bad) 
   1400150fe:	add    BYTE PTR [rax],al
   140015100:	frstor [rbp+0x0]
   140015103:	add    BYTE PTR [rcx+rcx*1+0x65e40001],bh
   14001510a:	add    BYTE PTR [rax],al
   14001510c:	fsub   DWORD PTR [rdi+0x0]
   14001510f:	add    BYTE PTR [rax],al
   140015111:	or     al,BYTE PTR [rcx]
   140015113:	add    al,ah
   140015115:	add    BYTE PTR [eax],al
   140015118:	add    ch,BYTE PTR [rdx+0x0]
   14001511b:	add    BYTE PTR [rax],ah
   14001511d:	or     al,BYTE PTR [rcx]
   14001511f:	add    BYTE PTR [rax],cl
   140015121:	push   0x0
   140015123:	add    BYTE PTR [rsi+0x6a],dh
   140015126:	add    BYTE PTR [rax],al
   140015128:	hlt    
   140015129:	or     DWORD PTR [rcx],eax
   14001512b:	add    BYTE PTR [rdx+rbp*2+0x0],bh
   14001512f:	add    bl,dh
   140015131:	push   0x0
   140015133:	add    BYTE PTR [rax+rcx*1],cl
   140015136:	add    DWORD PTR [rax],eax
   140015138:	cld    
   140015139:	push   0x0
   14001513b:	add    BYTE PTR [rax],cl
   14001513d:	ins    DWORD PTR es:[rdi],dx
   14001513e:	add    BYTE PTR [rax],al
   140015140:	push   rax
   140015141:	add    BYTE PTR [rcx],al
   140015143:	add    BYTE PTR [rax],dl
   140015145:	ins    DWORD PTR es:[rdi],dx
   140015146:	add    BYTE PTR [rax],al
   140015148:	and    ch,BYTE PTR [rbp+0x0]
   14001514b:	add    BYTE PTR [rax+0x2],bh
   14001514e:	add    DWORD PTR [rax],eax
   140015150:	push   0x300006d
   140015155:	outs   dx,BYTE PTR ds:[rsi]
   140015156:	add    BYTE PTR [rax],al
   140015158:	cmp    al,0x7
   14001515a:	add    DWORD PTR [rax],eax
   14001515c:	or     al,0x6e
   14001515e:	add    BYTE PTR [rax],al
   140015160:	sbb    eax,0x7c00006f
   140015165:	add    BYTE PTR [rcx],al
   140015167:	add    BYTE PTR [rdi+rbp*2],ah
   14001516a:	add    BYTE PTR [rax],al
   14001516c:	stc    
   14001516d:	outs   dx,DWORD PTR ds:[rsi]
   14001516e:	add    BYTE PTR [rax],al
   140015170:	xor    BYTE PTR [rbx],al
   140015172:	add    DWORD PTR [rax],eax
   140015174:	ins    BYTE PTR es:[rdi],dx
   140015175:	jo     0x140015177
   140015177:	add    BYTE PTR [rdx+0x3c000070],al
   14001517d:	add    al,0x1
   14001517f:	add    BYTE PTR [rax+0x6a000070],cl
   140015185:	jno    0x140015187
   140015187:	add    BYTE PTR [rax+0x70000100],dl
   14001518d:	jno    0x14001518f
   14001518f:	add    BYTE PTR [rsi],dl
   140015191:	jb     0x140015193
   140015193:	add    BYTE PTR [rax+0x3c000100],ah
   140015199:	jb     0x14001519b
   14001519b:	add    BYTE PTR [rbp+0x72],bh
   14001519e:	add    BYTE PTR [rax],al
   1400151a0:	js     0x1400151a4
   1400151a2:	add    DWORD PTR [rax],eax
   1400151a4:	test   BYTE PTR [rdx+0x0],dh
   1400151a7:	add    BYTE PTR [rdx+rsi*2+0x2780000],bl
   1400151ae:	add    DWORD PTR [rax],eax
   1400151b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400151b1:	jb     0x1400151b3
   1400151b3:	add    BYTE PTR [rax+0x74],dh
   1400151b6:	add    BYTE PTR [rax],al
   1400151b8:	mov    WORD PTR [rbx],es
   1400151ba:	add    DWORD PTR [rax],eax
   1400151bc:	js     0x140015232
   1400151be:	add    BYTE PTR [rax],al
   1400151c0:	clc    
   1400151c1:	je     0x1400151c3
   1400151c3:	add    BYTE PTR [rax],dh
   1400151c5:	add    eax,DWORD PTR [rcx]
   1400151c7:	add    BYTE PTR [rax],al
   1400151c9:	jne    0x1400151cb
   1400151cb:	add    BYTE PTR [rip+0x78000075],ah        # 0x1b8015246
   1400151d1:	add    al,BYTE PTR [rcx]
   1400151d3:	add    BYTE PTR [rbp+rsi*2+0x0],bl
   1400151d7:	add    BYTE PTR [rax+0x30000075],al
   1400151dd:	add    eax,DWORD PTR [rcx]
   1400151df:	add    BYTE PTR [rax+0x4000075],cl
   1400151e5:	jbe    0x1400151e7
   1400151e7:	add    ah,dh
   1400151e9:	(bad)  
   1400151ea:	add    DWORD PTR [rax],eax
   1400151ec:	or     al,0x76
   1400151ee:	add    BYTE PTR [rax],al
   1400151f0:	pop    rbx
   1400151f1:	ja     0x1400151f3
   1400151f3:	add    ah,al
   1400151f5:	add    BYTE PTR [rcx],al
   1400151f7:	add    BYTE PTR [rdi+rsi*2+0x0],ah
   1400151fb:	add    BYTE PTR [rcx],dh
   1400151fd:	js     0x1400151ff
   1400151ff:	add    al,bh
   140015201:	add    BYTE PTR [rcx],al
   140015203:	add    BYTE PTR [rax+rdi*2+0x0],cl
   140015207:	add    BYTE PTR [rcx+0x78],bh
   14001520a:	add    BYTE PTR [rax],al
   14001520c:	xor    BYTE PTR [rbx],al
   14001520e:	add    DWORD PTR [rax],eax
   140015210:	cmp    BYTE PTR [rax+0x0],0x0
   140015214:	xchg   esi,eax
   140015215:	js     0x140015217
   140015217:	add    BYTE PTR [rax],dh
   140015219:	add    eax,DWORD PTR [rcx]
   14001521b:	add    BYTE PTR [rax+rdi*2+0x78eb0000],bl
   140015222:	add    BYTE PTR [rax],al
   140015224:	xor    BYTE PTR [rbx],al
   140015226:	add    DWORD PTR [rax],eax
   140015228:	hlt    
   140015229:	js     0x14001522b
   14001522b:	add    bl,al
   14001522d:	jns    0x14001522f
   14001522f:	add    ah,dh
   140015231:	(bad)  
   140015232:	add    DWORD PTR [rax],eax
   140015234:	int3   
   140015235:	jns    0x140015237
   140015237:	add    BYTE PTR [rbx],ah
   140015239:	jp     0x14001523b
   14001523b:	add    BYTE PTR [rax],dh
   14001523d:	add    eax,DWORD PTR [rcx]
   14001523f:	add    BYTE PTR [rax+0x7a],ch
   140015242:	add    BYTE PTR [rax],al
   140015244:	fwait
   140015245:	jp     0x140015247
   140015247:	add    BYTE PTR [rcx+rax*1],ch
   14001524a:	add    DWORD PTR [rax],eax
   14001524c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14001524d:	jp     0x14001524f
   14001524f:	add    BYTE PTR [rsi],ch
   140015251:	jl     0x140015253
   140015253:	add    BYTE PTR [rax],bh
   140015255:	add    DWORD PTR [rcx],eax
   140015257:	add    BYTE PTR [rsp+rdi*2],dh
   14001525a:	add    BYTE PTR [rax],al
   14001525c:	ja     0x1400152da
   14001525e:	add    BYTE PTR [rax],al
   140015260:	js     0x140015264
   140015262:	add    DWORD PTR [rax],eax
   140015264:	cmp    BYTE PTR [rax+rax*1+0x0],0x44
   140015269:	jle    0x14001526b
   14001526b:	add    BYTE PTR [rax+0x1],ch
   14001526e:	add    DWORD PTR [rax],eax
   140015270:	rex.WR jle 0x140015273
   140015273:	add    BYTE PTR [rdx+0x7c00007e],bh
   140015279:	add    DWORD PTR [rcx],eax
   14001527b:	add    al,al
   14001527d:	jle    0x14001527f
   14001527f:	add    BYTE PTR [rcx-0x7f],ah
   140015282:	add    BYTE PTR [rax],al
   140015284:	test   BYTE PTR [rcx],al
   140015286:	add    DWORD PTR [rax],eax
   140015288:	push   0x5a000081
   14001528d:	(bad)  
   14001528e:	add    BYTE PTR [rax],al
   140015290:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140015291:	add    DWORD PTR [rcx],eax
   140015293:	add    BYTE PTR [rax-0x7e],ah
   140015296:	add    BYTE PTR [rax],al
   140015298:	test   BYTE PTR [r8],al
   14001529b:	add    BYTE PTR [rcx+rax*1-0x7bb7ffff],dh
   1400152a2:	add    BYTE PTR [rax],al
   1400152a4:	mov    eax,DWORD PTR [rbp+0x1d00000]
   1400152aa:	add    DWORD PTR [rax],eax
   1400152ac:	xchg   esp,eax
   1400152ad:	test   DWORD PTR [rax],eax
   1400152af:	add    BYTE PTR [rax-0x7a],ch
   1400152b2:	add    BYTE PTR [rax],al
   1400152b4:	call   0x1b00153ba
   1400152b9:	xchg   BYTE PTR [rax],al
   1400152bb:	add    ch,dh
   1400152bd:	xchg   BYTE PTR [rax],al
   1400152bf:	add    BYTE PTR [rbx+rax*1-0x78f3ffff],cl
   1400152c6:	add    BYTE PTR [rax],al
   1400152c8:	movabs eax,ds:0xa8000103d4000087
   1400152d1:	xchg   DWORD PTR [rax],eax
   1400152d3:	add    cl,ah
   1400152d5:	mov    BYTE PTR [rax],al
   1400152d7:	add    ah,dh
   1400152d9:	add    DWORD PTR [rcx],eax
   1400152db:	add    al,ch
   1400152dd:	mov    BYTE PTR [rax],al
   1400152df:	add    BYTE PTR [rcx+rcx*4],bl
   1400152e2:	add    BYTE PTR [rax],al
   1400152e4:	xor    BYTE PTR [rbx],al
   1400152e6:	add    DWORD PTR [rax],eax
   1400152e8:	and    al,0x89
   1400152ea:	add    BYTE PTR [rax],al
   1400152ec:	popf   
   1400152ed:	mov    DWORD PTR [rax],eax
   1400152ef:	add    ah,bh
   1400152f1:	add    DWORD PTR [rcx],eax
   1400152f3:	add    BYTE PTR [rcx+rcx*4-0x74e30000],ah
   1400152fa:	add    BYTE PTR [rax],al
   1400152fc:	(bad)  
   1400152fd:	add    al,0x1
   1400152ff:	add    BYTE PTR [rsp+rcx*4+0x0],ah
   140015303:	add    dh,al
   140015305:	mov    WORD PTR [rax],es
   140015307:	add    ah,dh
   140015309:	(bad)  
   14001530a:	add    DWORD PTR [rax],eax
   14001530c:	int3   
   14001530d:	mov    WORD PTR [rax],es
   14001530f:	add    ah,dh
   140015311:	mov    WORD PTR [rax],es
   140015313:	add    BYTE PTR [rax+0x2],bh
   140015316:	add    DWORD PTR [rax],eax
   140015318:	cld    
   140015319:	mov    WORD PTR [rax],es
   14001531b:	add    BYTE PTR [rdx+0x1c00008d],bh
   140015321:	add    al,BYTE PTR [rcx]
   140015323:	add    al,al
   140015325:	lea    eax,[rax]
   140015327:	add    BYTE PTR [rdi+rcx*4+0x2480000],ah
   14001532e:	add    DWORD PTR [rax],eax
   140015330:	lods   al,BYTE PTR ds:[rsi]
   140015331:	pop    QWORD PTR [rax]
   140015333:	add    BYTE PTR [rdi],dh
   140015335:	xchg   edx,eax
   140015336:	add    BYTE PTR [rax],al
   140015338:	add    BYTE PTR [rdx],0x1
   14001533b:	add    BYTE PTR [rax-0x6e],al
   14001533e:	add    BYTE PTR [rax],al
   140015340:	rcl    BYTE PTR [rdx+0x5c40000],1
   140015346:	add    DWORD PTR [rax],eax
   140015348:	fcom   DWORD PTR [rdx-0x6c9c0000]
   14001534e:	add    BYTE PTR [rax],al
   140015350:	mov    WORD PTR [rbx],es
   140015352:	add    DWORD PTR [rax],eax
   140015354:	ins    BYTE PTR es:[rdi],dx
   140015355:	xchg   ebx,eax
   140015356:	add    BYTE PTR [rax],al
   140015358:	pop    rdi
   140015359:	xchg   ebp,eax
   14001535a:	add    BYTE PTR [rax],al
   14001535c:	movabs al,ds:0x5000009568000102
   140015365:	xchg   esi,eax
   140015366:	add    BYTE PTR [rax],al
   140015368:	rol    BYTE PTR [rdx],0x1
   14001536b:	add    BYTE PTR [rax-0x6a],bl
   14001536e:	add    BYTE PTR [rax],al
   140015370:	js     0x140015308
   140015372:	add    BYTE PTR [rax],al
   140015374:	js     0x140015378
   140015376:	add    DWORD PTR [rax],eax
   140015378:	adc    BYTE PTR [rsi-0x69600000],0x0
   14001537f:	add    BYTE PTR [rax+0x2],bh
   140015382:	add    DWORD PTR [rax],eax
   140015384:	test   al,0x96
   140015386:	add    BYTE PTR [rax],al
   140015388:	not    BYTE PTR [rsi+0x7f40000]
   14001538e:	add    DWORD PTR [rax],eax
   140015390:	rex.WR xchg rdi,rax
   140015392:	add    BYTE PTR [rax],al
   140015394:	fs xchg edi,eax
   140015396:	add    BYTE PTR [rax],al
   140015398:	cmp    al,0x4
   14001539a:	add    DWORD PTR [rax],eax
   14001539c:	ins    BYTE PTR es:[rdi],dx
   14001539d:	xchg   edi,eax
   14001539e:	add    BYTE PTR [rax],al
   1400153a0:	(bad)  
   1400153a1:	cwde   
   1400153a2:	add    BYTE PTR [rax],al
   1400153a4:	enter  0x102,0x0
   1400153a8:	cmp    BYTE PTR [rax-0x663f0000],bl
   1400153ae:	add    BYTE PTR [rax],al
   1400153b0:	fadd   QWORD PTR [rdx]
   1400153b2:	add    DWORD PTR [rax],eax
   1400153b4:	enter  0x99,0x0
   1400153b8:	call   0x130015461
   1400153bd:	add    al,BYTE PTR [rcx]
   1400153bf:	add    al,dh
   1400153c1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400153c2:	add    BYTE PTR [rax],al
   1400153c4:	(bad)  
   1400153c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400153c6:	add    BYTE PTR [rax],al
   1400153c8:	hlt    
   1400153c9:	(bad)  
   1400153ca:	add    DWORD PTR [rax],eax
   1400153cc:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400153ce:	add    BYTE PTR [rax],al
   1400153d0:	cdq    
   1400153d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400153d2:	add    BYTE PTR [rax],al
   1400153d4:	adc    al,0x3
   1400153d6:	add    DWORD PTR [rax],eax
   1400153d8:	movabs al,ds:0x240000a6250000a5
   1400153e1:	(bad)  
   1400153e2:	add    DWORD PTR [rax],eax
   1400153e4:	sub    al,0xa6
   1400153e6:	add    BYTE PTR [rax],al
   1400153e8:	stc    
   1400153e9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400153ea:	add    BYTE PTR [rax],al
   1400153ec:	cld    
   1400153ed:	(bad)  
   1400153ee:	add    DWORD PTR [rax],eax
   1400153f0:	add    BYTE PTR [rdi-0x58c90000],ah
   1400153f6:	add    BYTE PTR [rax],al
   1400153f8:	sub    BYTE PTR [rbx],al
   1400153fa:	add    DWORD PTR [rax],eax
   1400153fc:	rex cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400153fe:	add    BYTE PTR [rax],al
   140015400:	and    BYTE PTR [rax+0x3300000],ch
   140015406:	add    DWORD PTR [rax],eax
   140015408:	sub    BYTE PTR [rax-0x57b10000],ch
   14001540e:	add    BYTE PTR [rax],al
   140015410:	js     0x140015414
   140015412:	add    DWORD PTR [rax],eax
   140015414:	pop    rax
   140015415:	test   al,0x0
   140015417:	add    BYTE PTR [rax+rbp*4+0x3300000],bh
   14001541e:	add    DWORD PTR [rax],eax
   140015420:	sbb    BYTE PTR [rcx-0x56b70000],ch
   140015426:	add    BYTE PTR [rax],al
   140015428:	xor    BYTE PTR [rbx],al
   14001542a:	add    DWORD PTR [rax],eax
   14001542c:	je     0x1400153d7
   14001542e:	add    BYTE PTR [rax],al
   140015430:	push   0xffffffffffffffab
   140015432:	add    BYTE PTR [rax],al
   140015434:	cmp    BYTE PTR [rbx],al
   140015436:	add    DWORD PTR [rax],eax
   140015438:	jo     0x1400153e5
   14001543a:	add    BYTE PTR [rax],al
   14001543c:	int3   
   14001543d:	lods   eax,DWORD PTR ds:[rsi]
   14001543e:	add    BYTE PTR [rax],al
   140015440:	push   rsp
   140015441:	add    eax,DWORD PTR [rcx]
   140015443:	add    ah,dl
   140015445:	lods   eax,DWORD PTR ds:[rsi]
   140015446:	add    BYTE PTR [rax],al
   140015448:	or     DWORD PTR [rsi+0x43c0000],ebp
   14001544e:	add    DWORD PTR [rax],eax
   140015450:	adc    BYTE PTR [rsi-0x51d10000],ch
   140015456:	add    BYTE PTR [rax],al
   140015458:	ins    BYTE PTR es:[rdi],dx
   140015459:	add    eax,DWORD PTR [rcx]
   14001545b:	add    BYTE PTR [rax],bh
   14001545d:	scas   al,BYTE PTR es:[rdi]
   14001545e:	add    BYTE PTR [rax],al
   140015460:	push   rsp
   140015461:	scas   al,BYTE PTR es:[rdi]
   140015462:	add    BYTE PTR [rax],al
   140015464:	js     0x140015468
   140015466:	add    DWORD PTR [rax],eax
   140015468:	pop    rsp
   140015469:	scas   al,BYTE PTR es:[rdi]
   14001546a:	add    BYTE PTR [rax],al
   14001546c:	in     eax,0xae
   14001546e:	add    BYTE PTR [rax],al
   140015470:	and    al,0x6
   140015472:	add    DWORD PTR [rax],eax
   140015474:	in     al,dx
   140015475:	scas   al,BYTE PTR es:[rdi]
   140015476:	add    BYTE PTR [rax],al
   140015478:	jae    0x140015429
   14001547a:	add    BYTE PTR [rax],al
   14001547c:	mov    WORD PTR [rbx],es
   14001547e:	add    DWORD PTR [rax],eax
   140015480:	jl     0x140015431
   140015482:	add    BYTE PTR [rax],al
   140015484:	pop    rsi
   140015485:	mov    al,0x0
   140015487:	add    BYTE PTR [rax+0x64000103],ah
   14001548d:	mov    al,0x0
   14001548f:	add    BYTE PTR [rax-0xbffff50],ch
   140015495:	(bad)  
   140015496:	add    DWORD PTR [rax],eax
   140015498:	shl    BYTE PTR [rax-0x4ef30000],1
   14001549e:	add    BYTE PTR [rax],al
   1400154a0:	int3   
   1400154a1:	add    eax,DWORD PTR [rcx]
   1400154a3:	add    BYTE PTR [rcx+rsi*4],dl
   1400154a6:	add    BYTE PTR [rax],al
   1400154a8:	xchg   edi,eax
   1400154a9:	mov    cl,0x0
   1400154ab:	add    ah,dl
   1400154ad:	add    eax,DWORD PTR [rcx]
   1400154af:	add    BYTE PTR [rax],dh
   1400154b1:	mov    dl,0x0
   1400154b3:	add    BYTE PTR [rbp-0x4e],bh
   1400154b6:	add    BYTE PTR [rax],al
   1400154b8:	in     al,dx
   1400154b9:	add    eax,DWORD PTR [rcx]
   1400154bb:	add    BYTE PTR [rdx+rsi*4-0x4d470000],al
   1400154c2:	add    BYTE PTR [rax],al
   1400154c4:	hlt    
   1400154c5:	(bad)  
   1400154c6:	add    DWORD PTR [rax],eax
   1400154c8:	shl    BYTE PTR [rdx-0x4d0e0000],0x0
   1400154cf:	add    BYTE PTR [rax],dh
   1400154d1:	add    eax,DWORD PTR [rcx]
   1400154d3:	add    BYTE PTR [rbx+rsi*4],dh
   1400154d6:	add    BYTE PTR [rax],al
   1400154d8:	fs mov ch,0x0
   1400154db:	add    BYTE PTR [rax],dl
   1400154dd:	add    al,0x1
   1400154df:	add    BYTE PTR [rbp+rsi*4-0x49eb0000],ah
   1400154e6:	add    BYTE PTR [rax],al
   1400154e8:	cmp    al,0x7
   1400154ea:	add    DWORD PTR [rax],eax
   1400154ec:	sbb    al,0xb6
   1400154ee:	add    BYTE PTR [rax],al
   1400154f0:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400154f1:	mov    dh,0x0
   1400154f3:	add    BYTE PTR [rdi+rax*1],bh
   1400154f6:	add    DWORD PTR [rax],eax
   1400154f8:	lods   al,BYTE PTR ds:[rsi]
   1400154f9:	mov    dh,0x0
   1400154fb:	add    ah,bh
   1400154fd:	mov    dh,0x0
   1400154ff:	add    BYTE PTR [rsp+rax*1],bh
   140015502:	add    DWORD PTR [rax],eax
   140015504:	add    al,0xb7
   140015506:	add    BYTE PTR [rax],al
   140015508:	(bad)  
   140015509:	mov    ecx,0x4440000
   14001550e:	add    DWORD PTR [rax],eax
   140015510:	adc    BYTE PTR [rcx-0x46af0000],bh
   140015516:	add    BYTE PTR [rax],al
   140015518:	xor    BYTE PTR [rbx],al
   14001551a:	add    DWORD PTR [rax],eax
   14001551c:	pop    rax
   14001551d:	mov    ecx,0xba0e0000
   140015522:	add    BYTE PTR [rax],al
   140015524:	(bad)  
   140015525:	add    al,0x1
   140015527:	add    BYTE PTR [rdx+rdi*4],dl
   14001552a:	add    BYTE PTR [rax],al
   14001552c:	xchg   esp,eax
   14001552d:	mov    edx,0x6b40000
   140015532:	add    DWORD PTR [rax],eax
   140015534:	test   al,0xba
   140015536:	add    BYTE PTR [rax],al
   140015538:	or     edi,DWORD PTR [rbx+0x3300000]
   14001553e:	add    DWORD PTR [rax],eax
   140015540:	adc    al,0xbb
   140015542:	add    BYTE PTR [rax],al
   140015544:	xor    DWORD PTR [rbx+0x2780000],edi
   14001554a:	add    DWORD PTR [rax],eax
   14001554c:	cmp    BYTE PTR [rbx-0x43be0000],bh
   140015552:	add    BYTE PTR [rax],al
   140015554:	je     0x14001555a
   140015556:	add    DWORD PTR [rax],eax
   140015558:	movabs rsp,0x3cc0000bcb40000
   140015562:	add    DWORD PTR [rax],eax
   140015564:	mov    esp,0xaa0000bc
   140015569:	rol    BYTE PTR [rax],0x0
   14001556c:	je     0x140015572
   14001556e:	add    DWORD PTR [rax],eax
   140015570:	rol    al,0x0
   140015573:	add    BYTE PTR [rbp-0x3f],dh
   140015576:	add    BYTE PTR [rax],al
   140015578:	add    BYTE PTR [rcx+rax*1],0x0
   14001557c:	jl     0x14001553f
   14001557e:	add    BYTE PTR [rax],al
   140015580:	cli    
   140015581:	rol    DWORD PTR [rax],0x0
   140015584:	test   BYTE PTR [rcx+rax*1],al
   140015587:	add    BYTE PTR [rax],al
   140015589:	ret    0x0
   14001558c:	gs ret 
   14001558e:	add    BYTE PTR [rax],al
   140015590:	xchg   esp,eax
   140015591:	add    al,0x1
   140015593:	add    BYTE PTR [rax+0x470000c3],al
   140015599:	(bad)  
   14001559a:	add    BYTE PTR [rax],al
   14001559c:	rol    BYTE PTR [rcx+rax*1],0x0
   1400155a0:	(bad)  
   1400155a1:	(bad)  
   1400155a2:	add    BYTE PTR [rax],al
   1400155a4:	(bad)
   1400155a8:	enter  0x104,0x0
   1400155ac:	push   rax
   1400155ad:	(bad)
   1400155b0:	out    0xc5,al
   1400155b2:	add    BYTE PTR [rax],al
   1400155b4:	int3   
   1400155b5:	add    al,0x1
   1400155b7:	add    ah,ch
   1400155b9:	(bad)
   1400155bc:	(bad)  
   1400155bd:	leave  
   1400155be:	add    BYTE PTR [rax],al
   1400155c0:	fadd   QWORD PTR [rcx+rax*1]
   1400155c3:	add    al,dh
   1400155c5:	leave  
   1400155c6:	add    BYTE PTR [rax],al
   1400155c8:	stos   BYTE PTR es:[rdi],al
   1400155c9:	retf   0x0
   1400155cc:	and    BYTE PTR [rip+0xffffffffcab00001],al        # 0x10ab155d3
   1400155d2:	add    BYTE PTR [rax],al
   1400155d4:	ss retf 
   1400155d6:	add    BYTE PTR [rax],al
   1400155d8:	sub    BYTE PTR [rip+0xffffffffcb3c0001],al        # 0x10b3d55df
   1400155de:	add    BYTE PTR [rax],al
   1400155e0:	jb     0x1400155ad
   1400155e2:	add    BYTE PTR [rax],al
   1400155e4:	cmp    al,0x4
   1400155e6:	add    DWORD PTR [rax],eax
   1400155e8:	js     0x1400155b5
   1400155ea:	add    BYTE PTR [rax],al
   1400155ec:	out    0xcb,eax
   1400155ee:	add    BYTE PTR [rax],al
   1400155f0:	cmp    al,0x4
   1400155f2:	add    DWORD PTR [rax],eax
   1400155f4:	lock retf 
   1400155f6:	add    BYTE PTR [rax],al
   1400155f8:	in     eax,dx
   1400155f9:	int3   
   1400155fa:	add    BYTE PTR [rax],al
   1400155fc:	cmp    BYTE PTR [rip+0xffffffffccf40001],al        # 0x10cf55603
   140015602:	add    BYTE PTR [rax],al
   140015604:	sub    al,0xd4
   140015606:	add    BYTE PTR [rax],al
   140015608:	jo     0x14001560f
   14001560a:	add    DWORD PTR [rax],eax
   14001560c:	xor    al,0xd4
   14001560e:	add    BYTE PTR [rax],al
   140015610:	xor    eax,0x940000d5
   140015615:	add    eax,0xd53c0001
   14001561a:	add    BYTE PTR [rax],al
   14001561c:	rcl    ebp,1
   14001561e:	add    BYTE PTR [rax],al
   140015620:	hlt    
   140015621:	(bad)  
   140015622:	add    DWORD PTR [rax],eax
   140015624:	fcom   st(5)
   140015626:	add    BYTE PTR [rax],al
   140015628:	xor    edx,esi
   14001562a:	add    BYTE PTR [rax],al
   14001562c:	xor    BYTE PTR [rbx],al
   14001562e:	add    DWORD PTR [rax],eax
   140015630:	cmp    al,0xd6
   140015632:	add    BYTE PTR [rax],al
   140015634:	adc    esi,0x0
   140015637:	add    ah,al
   140015639:	add    eax,0xd68c0001
   14001563e:	add    BYTE PTR [rax],al
   140015640:	rcl    esi,1
   140015642:	add    BYTE PTR [rax],al
   140015644:	(bad)  
   140015645:	add    eax,0xd6d80001
   14001564a:	add    BYTE PTR [rax],al
   14001564c:	adc    bh,dl
   14001564e:	add    BYTE PTR [rax],al
   140015650:	cmp    al,0x4
   140015652:	add    DWORD PTR [rax],eax
   140015654:	cmp    bh,dl
   140015656:	add    BYTE PTR [rax],al
   140015658:	(bad)  
   140015659:	fld    DWORD PTR [rax]
   14001565b:	add    ah,cl
   14001565d:	add    eax,0xd9500001
   140015662:	add    BYTE PTR [rax],al
   140015664:	(bad)
   140015667:	add    al,ch
   140015669:	add    eax,0xdacc0001
   14001566e:	add    BYTE PTR [rax],al
   140015670:	mov    ecx,0xe5
   140015675:	(bad)  
   140015676:	add    DWORD PTR [rax],eax
   140015678:	shl    ch,0x0
   14001567b:	add    BYTE PTR [rsi],al
   14001567d:	out    0x0,al
   14001567f:	add    BYTE PTR [rax],dh
   140015681:	add    eax,DWORD PTR [rcx]
   140015683:	add    BYTE PTR [rsi+riz*8],cl
   140015686:	add    BYTE PTR [rax],al
   140015688:	pop    rbp
   140015689:	out    0x0,al
   14001568b:	add    BYTE PTR [rbx+rax*1],dl
   14001568e:	add    DWORD PTR [rax],eax
   140015690:	fs out 0x0,al
   140015693:	add    ah,ah
   140015695:	out    0x0,al
   140015697:	add    BYTE PTR [rsi+rax*1],ah
   14001569a:	add    DWORD PTR [rax],eax
   14001569c:	cld    
   14001569d:	out    0x0,al
   14001569f:	add    BYTE PTR [rax-0x19],cl
   1400156a2:	add    BYTE PTR [rax],al
   1400156a4:	xor    BYTE PTR [rbx],al
   1400156a6:	add    DWORD PTR [rax],eax
   1400156a8:	push   rax
   1400156a9:	out    0x0,eax
   1400156ab:	add    cl,cl
   1400156ad:	out    0x0,eax
   1400156af:	add    BYTE PTR [rax+0x4],ah
   1400156b2:	add    DWORD PTR [rax],eax
   1400156b4:	shl    bh,1
   1400156b6:	add    BYTE PTR [rax],al
   1400156b8:	mov    esp,0x380000e8
   1400156bd:	(bad)  
   1400156be:	add    DWORD PTR [rax],eax
   1400156c0:	(bad)  
   1400156c1:	call   0x1296f56c6
   1400156c6:	add    BYTE PTR [rax],al
   1400156c8:	js     0x1400156d0
   1400156ca:	add    DWORD PTR [rax],eax
   1400156cc:	sub    cl,0x0
   1400156cf:	add    BYTE PTR [rax-0x5fffff17],bl
   1400156d5:	(bad)  
   1400156d6:	add    DWORD PTR [rax],eax
   1400156d8:	movabs al,ds:0xa40000e9a10000e9
   1400156e1:	(bad)  
   1400156e2:	add    DWORD PTR [rax],eax
   1400156e4:	mov    al,0xe9
   1400156e6:	add    BYTE PTR [rax],al
   1400156e8:	mov    cl,0xe9
   1400156ea:	add    BYTE PTR [rax],al
   1400156ec:	test   al,0x6
   1400156ee:	add    DWORD PTR [rax],eax
   1400156f0:	push   rsp
   1400156f1:	jmp    0x1400156f3
   1400156f3:	add    ch,dh
   1400156f5:	jmp    0x1400156f7
   1400156f7:	add    BYTE PTR [rsi+rax*1-0x1403ffff],ch
   1400156fe:	add    BYTE PTR [rax],al
   140015700:	stos   DWORD PTR es:[rdi],eax
   140015701:	in     al,dx
   140015702:	add    BYTE PTR [rax],al
   140015704:	mov    ah,0x6
   140015706:	add    DWORD PTR [rax],eax
   140015708:	enter  0xec,0x0
   14001570c:	clc    
   14001570d:	in     eax,dx
   14001570e:	add    BYTE PTR [rax],al
   140015710:	enter  0x106,0x0
   140015714:	add    dh,ch
   140015716:	add    BYTE PTR [rax],al
   140015718:	movsxd ebp,esi
   14001571a:	add    BYTE PTR [rax],al
   14001571c:	in     al,dx
   14001571d:	(bad)  
   14001571e:	add    DWORD PTR [rax],eax
   140015720:	xchg   esp,eax
   140015721:	out    dx,al
   140015722:	add    BYTE PTR [rax],al
   140015724:	ds out dx,eax
   140015726:	add    BYTE PTR [rax],al
   140015728:	cld    
   140015729:	(bad)  
   14001572a:	add    DWORD PTR [rax],eax
   14001572c:	rex.R out dx,eax
   14001572e:	add    BYTE PTR [rax],al
   140015730:	in     eax,dx
   140015731:	out    dx,eax
   140015732:	add    BYTE PTR [rax],al
   140015734:	or     al,0x7
   140015736:	add    DWORD PTR [rax],eax
   140015738:	and    al,0xf0
   14001573a:	add    BYTE PTR [rax],al
   14001573c:	mov    dl,0xf0
   14001573e:	add    BYTE PTR [rax],al
   140015740:	cmp    al,0x7
   140015742:	add    DWORD PTR [rax],eax
   140015744:	mov    eax,0x110000f0
   140015749:	icebp  
   14001574a:	add    BYTE PTR [rax],al
   14001574c:	rex.R (bad) 
   14001574e:	add    DWORD PTR [rax],eax
   140015750:	sbb    cl,dh
   140015752:	add    BYTE PTR [rax],al
   140015754:	sub    al,0xf1
   140015756:	add    BYTE PTR [rax],al
   140015758:	cmp    al,0x4
   14001575a:	add    DWORD PTR [rax],eax
   14001575c:	xor    al,0xf1
   14001575e:	add    BYTE PTR [rax],al
   140015760:	xor    dh,bl
   140015762:	add    BYTE PTR [rax],al
   140015764:	rex.WR (bad) 
   140015766:	add    DWORD PTR [rax],eax
   140015768:	cmp    bl,dh
   14001576a:	add    BYTE PTR [rax],al
   14001576c:	ret    
   14001576d:	hlt    
   14001576e:	add    BYTE PTR [rax],al
   140015770:	(bad)  
   140015771:	(bad)  
   140015772:	add    DWORD PTR [rax],eax
   140015774:	int3   
   140015775:	hlt    
   140015776:	add    BYTE PTR [rax],al
   140015778:	mov    bl,0xf5
   14001577a:	add    BYTE PTR [rax],al
   14001577c:	je     0x140015785
   14001577e:	add    DWORD PTR [rax],eax
   140015780:	mov    esp,0x320000f5
   140015785:	test   BYTE PTR [rax],0x0
   140015788:	pushf  
   140015789:	(bad)  
   14001578a:	add    DWORD PTR [rax],eax
   14001578c:	cmp    dh,dh
   14001578e:	add    BYTE PTR [rax],al
   140015790:	shl    esi,0x0
   140015793:	add    BYTE PTR [rsi+rax*1-0x937ffff],dh
   14001579a:	add    BYTE PTR [rax],al
   14001579c:	add    esi,edi
   14001579e:	add    BYTE PTR [rax],al
   1400157a0:	js     0x1400157a4
   1400157a2:	add    DWORD PTR [rax],eax
   1400157a4:	or     al,0xf7
   1400157a6:	add    BYTE PTR [rax],al
   1400157a8:	rex.RXB test DWORD PTR [r8],0x107c000
   1400157af:	add    BYTE PTR [rax-0x9],dl
   1400157b2:	add    BYTE PTR [rax],al
   1400157b4:	rex.W clc 
   1400157b6:	add    BYTE PTR [rax],al
   1400157b8:	enter  0x107,0x0
   1400157bc:	push   rax
   1400157bd:	clc    
   1400157be:	add    BYTE PTR [rax],al
   1400157c0:	or     ecx,edi
   1400157c2:	add    BYTE PTR [rax],al
   1400157c4:	hlt    
   1400157c5:	(bad)  
   1400157c6:	add    DWORD PTR [rax],eax
   1400157c8:	adc    cl,bh
   1400157ca:	add    BYTE PTR [rax],al
   1400157cc:	rex.RXB stc 
   1400157ce:	add    BYTE PTR [rax],al
   1400157d0:	xor    BYTE PTR [rbx],al
   1400157d2:	add    DWORD PTR [rax],eax
   1400157d4:	push   rax
   1400157d5:	stc    
   1400157d6:	add    BYTE PTR [rax],al
   1400157d8:	data16 stc 
   1400157da:	add    BYTE PTR [rax],al
   1400157dc:	cmp    al,0x4
   1400157de:	add    DWORD PTR [rax],eax
   1400157e0:	ins    BYTE PTR es:[rdi],dx
   1400157e1:	stc    
   1400157e2:	add    BYTE PTR [rax],al
   1400157e4:	sbb    al,0xfa
   1400157e6:	add    BYTE PTR [rax],al
   1400157e8:	add    BYTE PTR [rax],cl
   1400157ea:	add    DWORD PTR [rax],eax
   1400157ec:	xor    dl,bh
   1400157ee:	add    BYTE PTR [rax],al
   1400157f0:	jge    0x1400157ec
   1400157f2:	add    BYTE PTR [rax],al
   1400157f4:	rol    BYTE PTR [rsi],0x1
   1400157f7:	add    al,al
   1400157f9:	cli    
   1400157fa:	add    BYTE PTR [rax],al
   1400157fc:	stc    
   1400157fd:	std    
   1400157fe:	add    BYTE PTR [rax],al
   140015800:	jo     0x140015806
   140015802:	add    DWORD PTR [rax],eax
   140015804:	(bad)  
   140015805:	inc    BYTE PTR [rax]
   140015807:	add    BYTE PTR [rsi+rdi*8],ah
   14001580a:	add    BYTE PTR [rax],al
   14001580c:	add    al,BYTE PTR [rcx]
   14001580f:	add    BYTE PTR [rdx],ch
   140015811:	inc    BYTE PTR [rax]
   140015813:	add    BYTE PTR [rsi+rdi*8+0x0],cl
   140015817:	add    BYTE PTR [rax+0x5],ch
   14001581a:	add    DWORD PTR [rax],eax
   14001581c:	push   rdx
   14001581d:	inc    BYTE PTR [rax]
   14001581f:	add    BYTE PTR [rbp-0x2],ch
   140015822:	add    BYTE PTR [rax],al
   140015824:	add    al,BYTE PTR [rcx]
   140015827:	add    BYTE PTR [rbp-0x2],ch
   14001582a:	add    BYTE PTR [rax],al
   14001582c:	mov    dh,bh
   14001582e:	add    BYTE PTR [rax],al
   140015830:	add    al,BYTE PTR [rcx]
   140015833:	add    BYTE PTR [rsi-0x4dffff02],cl
   140015839:	inc    BYTE PTR [rax]
   14001583b:	add    BYTE PTR [rax+0x2],al
   14001583e:	add    DWORD PTR [rax],eax
   140015840:	mov    eax,0xd30000fe
   140015845:	inc    BYTE PTR [rax]
   140015847:	add    BYTE PTR [rax+0x2],al
   14001584a:	add    DWORD PTR [rax],eax
   14001584c:	fsin   
   14001584e:	add    BYTE PTR [rax],al
   140015850:	hlt    
   140015851:	inc    BYTE PTR [rax]
   140015853:	add    BYTE PTR [rax+0x2],al
   140015856:	add    DWORD PTR [rax],eax
   140015858:	cli    
   140015859:	inc    BYTE PTR [rax]
   14001585b:	add    BYTE PTR [rax],bl
   14001585d:	inc    DWORD PTR [rax]
   14001585f:	add    BYTE PTR [rax+0x2],al
   140015862:	add    DWORD PTR [rax],eax
   140015864:	and    bh,bh
   140015866:	add    BYTE PTR [rax],al
   140015868:	rex.X inc DWORD PTR [rax]
   14001586b:	add    BYTE PTR [rax+0x2],al
   14001586e:	add    DWORD PTR [rax],eax
   140015870:	inc    QWORD PTR [rax]
   140015873:	add    BYTE PTR [rsi-0x1],ah
   140015876:	add    BYTE PTR [rax],al
   140015878:	push   0x6c000105
   14001587d:	inc    DWORD PTR [rax]
   14001587f:	add    BYTE PTR [rbp+0x680000ff],al
   140015885:	add    eax,0xff8b0001
   14001588a:	add    BYTE PTR [rax],al
   14001588c:	mov    bl,0xff
   14001588e:	add    BYTE PTR [rax],al
   140015890:	add    al,BYTE PTR [rcx]
   140015893:	add    BYTE PTR [rbx-0x31ffff01],dh
   140015899:	inc    DWORD PTR [rax]
   14001589b:	add    BYTE PTR [rax+0x2],al
   14001589e:	add    DWORD PTR [rax],eax
   1400158a0:	(bad)  
   1400158a1:	inc    DWORD PTR [rax]
   1400158a3:	add    bh,ch
   1400158a5:	inc    DWORD PTR [rax]
   1400158a7:	add    BYTE PTR [rax+0x2],al
   1400158aa:	add    DWORD PTR [rax],eax
   1400158ac:	cmc    
   1400158ad:	inc    DWORD PTR [rax]
   1400158af:	add    BYTE PTR [rax],dl
   1400158b1:	add    BYTE PTR [rcx],al
   1400158b3:	add    BYTE PTR [rax+0x2],al
   1400158b6:	add    DWORD PTR [rax],eax
   1400158b8:	(bad)  
   1400158b9:	add    BYTE PTR [rcx],al
   1400158bb:	add    BYTE PTR [rax],dh
   1400158bd:	add    BYTE PTR [rcx],al
   1400158bf:	add    BYTE PTR [rax+0x5],ch
   1400158c2:	add    DWORD PTR [rax],eax
   1400158c4:	add    BYTE PTR ss:[rcx],al
   1400158c7:	add    BYTE PTR [rdi+0x0],cl
   1400158ca:	add    DWORD PTR [rax],eax
   1400158cc:	.byte 0x68
   1400158cd:	.byte 0x5
   1400158ce:	add    DWORD PTR [rax],eax

Disassembly of section .idata:

0000000140016000 <.idata>:
   140016000:	enter  0x160,0x0
	...
   14001600c:	je     0x140016076
   14001600e:	add    DWORD PTR [rax],eax
   140016010:	rex
   140016011:	add    DWORD PTR fs:[rax],eax
   140016014:	add    BYTE PTR [rbx+0x1],ah
	...
   14001601f:	add    BYTE PTR [rsi+0x78000168],ch
   140016025:	add    WORD PTR [rax],ax
   140016028:	call   0x140016190
   14001602d:	add    BYTE PTR [rax],al
   14001602f:	add    BYTE PTR [rax],al
   140016031:	add    BYTE PTR [rax],al
   140016033:	add    BYTE PTR [rcx+rbp*2],cl
   140016036:	add    DWORD PTR [rax],eax
   140016038:	(bad)  
   140016039:	add    DWORD PTR [eax],eax
   14001603c:	adc    BYTE PTR [rcx+rax*1+0x0],ah
	...
   140016048:	jo     0x1400160b3
   14001604a:	add    DWORD PTR [rax],eax
   14001604c:	mov    BYTE PTR [rdi+0x1],ah
   14001604f:	add    BYTE PTR [rax],bl
   140016051:	movsxd eax,DWORD PTR [rcx]
	...
   14001605b:	add    BYTE PTR [rsi-0x6ffffe97],ch
   140016061:	add    WORD PTR [rax],ax
   140016064:	xor    BYTE PTR [rbx+0x1],ah
	...
   14001606f:	add    BYTE PTR [rdx-0x57fffe97],bh
   140016075:	add    WORD PTR [rax],ax
   140016078:	push   0x163
   14001607d:	add    BYTE PTR [rax],al
   14001607f:	add    BYTE PTR [rax],al
   140016081:	add    BYTE PTR [rax],al
   140016083:	add    BYTE PTR [rdx+rbp*2+0x66e00001],ch
   14001608a:	add    DWORD PTR [rax],eax
   14001608c:	fsub   DWORD PTR [rbx+0x1]
	...
   140016097:	add    dh,cl
   140016099:	push   0x1
   14001609b:	add    BYTE PTR [rax+0x67],dl
   14001609e:	add    DWORD PTR [rax],eax
   1400160a0:	pop    rax
   1400160a1:	movsxd eax,DWORD PTR [rcx]
	...
   1400160ab:	add    BYTE PTR [rsi+0x6f],bl
   1400160ae:	add    DWORD PTR [rax],eax
   1400160b0:	shl    BYTE PTR [rsi+0x1],1
	...
   1400160c7:	add    BYTE PTR [rax+0x167],bh
   1400160cd:	add    BYTE PTR [rax],al
   1400160cf:	add    ah,al
   1400160d1:	add    DWORD PTR [eax],eax
   1400160d4:	add    BYTE PTR [rax],al
   1400160d6:	add    BYTE PTR [rax],al
   1400160d8:	(bad)  
   1400160d9:	add    DWORD PTR [eax],eax
   1400160dc:	add    BYTE PTR [rax],al
   1400160de:	add    BYTE PTR [rax],al
   1400160e0:	loop   0x140016149
   1400160e2:	add    DWORD PTR [rax],eax
   1400160e4:	add    BYTE PTR [rax],al
   1400160e6:	add    BYTE PTR [rax],al
   1400160e8:	repnz add DWORD PTR [eax],eax
   1400160ec:	add    BYTE PTR [rax],al
   1400160ee:	add    BYTE PTR [rax],al
   1400160f0:	add    al,0x68
   1400160f2:	add    DWORD PTR [rax],eax
   1400160f4:	add    BYTE PTR [rax],al
   1400160f6:	add    BYTE PTR [rax],al
   1400160f8:	adc    ch,BYTE PTR [rax+0x1]
   1400160fb:	add    BYTE PTR [rax],al
   1400160fd:	add    BYTE PTR [rax],al
   1400160ff:	add    BYTE PTR [rdx],ah
   140016101:	push   0x1
   140016106:	add    BYTE PTR [rax],al
   140016108:	rex.X push 0x1
   14001610e:	add    BYTE PTR [rax],al
   140016110:	rex.WX push 0x1
   140016116:	add    BYTE PTR [rax],al
   140016118:	pop    rsi
   140016119:	push   0x1
   14001611e:	add    BYTE PTR [rax],al
   140016120:	sub    BYTE PTR [rdi+0x1],ch
   140016123:	add    BYTE PTR [rax],al
   140016125:	add    BYTE PTR [rax],al
   140016127:	add    BYTE PTR [rax],bl
   140016129:	outs   dx,DWORD PTR ds:[rsi]
   14001612a:	add    DWORD PTR [rax],eax
   14001612c:	add    BYTE PTR [rax],al
   14001612e:	add    BYTE PTR [rax],al
   140016130:	cld    
   140016131:	outs   dx,BYTE PTR ds:[rsi]
   140016132:	add    DWORD PTR [rax],eax
   140016134:	add    BYTE PTR [rax],al
   140016136:	add    BYTE PTR [rax],al
   140016138:	out    dx,al
   140016139:	outs   dx,BYTE PTR ds:[rsi]
   14001613a:	add    DWORD PTR [rax],eax
   14001613c:	add    BYTE PTR [rax],al
   14001613e:	add    BYTE PTR [rax],al
   140016140:	loopne 0x1400161b0
   140016142:	add    DWORD PTR [rax],eax
   140016144:	add    BYTE PTR [rax],al
   140016146:	add    BYTE PTR [rax],al
   140016148:	int3   
   140016149:	outs   dx,BYTE PTR ds:[rsi]
   14001614a:	add    DWORD PTR [rax],eax
   14001614c:	add    BYTE PTR [rax],al
   14001614e:	add    BYTE PTR [rax],al
   140016150:	mov    esp,0x16e
   140016155:	add    BYTE PTR [rax],al
   140016157:	add    BYTE PTR [rsi+rbp*2+0x1],ch
   14001615e:	add    BYTE PTR [rax],al
   140016160:	pushf  
   140016161:	outs   dx,BYTE PTR ds:[rsi]
   140016162:	add    DWORD PTR [rax],eax
   140016164:	add    BYTE PTR [rax],al
   140016166:	add    BYTE PTR [rax],al
   140016168:	mov    ch,BYTE PTR [rsi+0x1]
   14001616b:	add    BYTE PTR [rax],al
   14001616d:	add    BYTE PTR [rax],al
   14001616f:	add    BYTE PTR [rdx+0x6e],bh
   140016172:	add    DWORD PTR [rax],eax
   140016174:	add    BYTE PTR [rax],al
   140016176:	add    BYTE PTR [rax],al
   140016178:	push   0x6e
   14001617a:	add    DWORD PTR [rax],eax
   14001617c:	add    BYTE PTR [rax],al
   14001617e:	add    BYTE PTR [rax],al
   140016180:	push   rax
   140016181:	outs   dx,BYTE PTR ds:[rsi]
   140016182:	add    DWORD PTR [rax],eax
   140016184:	add    BYTE PTR [rax],al
   140016186:	add    BYTE PTR [rax],al
   140016188:	outs   dx,BYTE PTR ds:[rsi]
   14001618a:	add    DWORD PTR [rax],eax
   14001618c:	add    BYTE PTR [rax],al
   14001618e:	add    BYTE PTR [rax],al
   140016190:	sub    al,0x6e
   140016192:	add    DWORD PTR [rax],eax
   140016194:	add    BYTE PTR [rax],al
   140016196:	add    BYTE PTR [rax],al
   140016198:	sbb    al,0x6e
   14001619a:	add    DWORD PTR [rax],eax
   14001619c:	add    BYTE PTR [rax],al
   14001619e:	add    BYTE PTR [rax],al
   1400161a0:	or     al,0x6e
   1400161a2:	add    DWORD PTR [rax],eax
   1400161a4:	add    BYTE PTR [rax],al
   1400161a6:	add    BYTE PTR [rax],al
   1400161a8:	imul   BYTE PTR [rbp+0x1]
   1400161ab:	add    BYTE PTR [rax],al
   1400161ad:	add    BYTE PTR [rax],al
   1400161af:	add    al,ah
   1400161b1:	ins    DWORD PTR es:[rdi],dx
   1400161b2:	add    DWORD PTR [rax],eax
   1400161b4:	add    BYTE PTR [rax],al
   1400161b6:	add    BYTE PTR [rax],al
   1400161b8:	(bad)  
   1400161b9:	ins    DWORD PTR es:[rdi],dx
   1400161ba:	add    DWORD PTR [rax],eax
   1400161bc:	add    BYTE PTR [rax],al
   1400161be:	add    BYTE PTR [rax],al
   1400161c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400161c1:	ins    DWORD PTR es:[rdi],dx
   1400161c2:	add    DWORD PTR [rax],eax
   1400161c4:	add    BYTE PTR [rax],al
   1400161c6:	add    BYTE PTR [rax],al
   1400161c8:	mov    gs,WORD PTR [rbp+0x1]
   1400161cb:	add    BYTE PTR [rax],al
   1400161cd:	add    BYTE PTR [rax],al
   1400161cf:	add    ah,bl
   1400161d1:	push   0x1
   1400161d3:	add    BYTE PTR [rax],al
   1400161d5:	add    BYTE PTR [rax],al
   1400161d7:	add    ah,ch
   1400161d9:	push   0x1
   1400161db:	add    BYTE PTR [rax],al
   1400161dd:	add    BYTE PTR [rax],al
   1400161df:	add    BYTE PTR [rdx],cl
   1400161e1:	imul   eax,DWORD PTR [rcx],0x0
   1400161e4:	add    BYTE PTR [rax],al
   1400161e6:	add    BYTE PTR [rax],al
   1400161e8:	sbb    ch,BYTE PTR [rbx+0x1]
   1400161eb:	add    BYTE PTR [rax],al
   1400161ed:	add    BYTE PTR [rax],al
   1400161ef:	add    BYTE PTR [rdx],ch
   1400161f1:	imul   eax,DWORD PTR [rcx],0x0
   1400161f4:	add    BYTE PTR [rax],al
   1400161f6:	add    BYTE PTR [rax],al
   1400161f8:	cmp    ch,BYTE PTR [rbx+0x1]
   1400161fb:	add    BYTE PTR [rax],al
   1400161fd:	add    BYTE PTR [rax],al
   1400161ff:	add    BYTE PTR [rsi+0x6b],al
   140016202:	add    DWORD PTR [rax],eax
   140016204:	add    BYTE PTR [rax],al
   140016206:	add    BYTE PTR [rax],al
   140016208:	push   rsp
   140016209:	imul   eax,DWORD PTR [rcx],0x0
   14001620c:	add    BYTE PTR [rax],al
   14001620e:	add    BYTE PTR [rax],al
   140016210:	(bad)  
   140016211:	imul   eax,DWORD PTR [rcx],0x0
   140016214:	add    BYTE PTR [rax],al
   140016216:	add    BYTE PTR [rax],al
   140016218:	ins    BYTE PTR es:[rdi],dx
   140016219:	imul   eax,DWORD PTR [rcx],0x0
   14001621c:	add    BYTE PTR [rax],al
   14001621e:	add    BYTE PTR [rax],al
   140016220:	(bad)  
   140016221:	imul   eax,DWORD PTR [rcx],0x0
   140016224:	add    BYTE PTR [rax],al
   140016226:	add    BYTE PTR [rax],al
   140016228:	nop
   140016229:	imul   eax,DWORD PTR [rcx],0x0
   14001622c:	add    BYTE PTR [rax],al
   14001622e:	add    BYTE PTR [rax],al
   140016230:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016231:	imul   eax,DWORD PTR [rcx],0x0
   140016234:	add    BYTE PTR [rax],al
   140016236:	add    BYTE PTR [rax],al
   140016238:	mov    eax,0x16b
   14001623d:	add    BYTE PTR [rax],al
   14001623f:	add    al,cl
   140016241:	imul   eax,DWORD PTR [rcx],0x0
   140016244:	add    BYTE PTR [rax],al
   140016246:	add    BYTE PTR [rax],al
   140016248:	(bad)  
   140016249:	imul   eax,DWORD PTR [rcx],0x0
   14001624c:	add    BYTE PTR [rax],al
   14001624e:	add    BYTE PTR [rax],al
   140016250:	(bad)  
   140016251:	imul   eax,DWORD PTR [rcx],0x0
   140016254:	add    BYTE PTR [rax],al
   140016256:	add    BYTE PTR [rax],al
   140016258:	clc    
   140016259:	imul   eax,DWORD PTR [rcx],0x0
   14001625c:	add    BYTE PTR [rax],al
   14001625e:	add    BYTE PTR [rax],al
   140016260:	(bad)  
   140016261:	ins    BYTE PTR es:[rdi],dx
   140016262:	add    DWORD PTR [rax],eax
   140016264:	add    BYTE PTR [rax],al
   140016266:	add    BYTE PTR [rax],al
   140016268:	(bad)  
   140016269:	ins    BYTE PTR es:[rdi],dx
   14001626a:	add    DWORD PTR [rax],eax
   14001626c:	add    BYTE PTR [rax],al
   14001626e:	add    BYTE PTR [rax],al
   140016270:	xor    BYTE PTR [rcx+rax*1+0x0],ch
   140016274:	add    BYTE PTR [rax],al
   140016276:	add    BYTE PTR [rax],al
   140016278:	rex.X ins BYTE PTR es:[rdi],dx
   14001627a:	add    DWORD PTR [rax],eax
   14001627c:	add    BYTE PTR [rax],al
   14001627e:	add    BYTE PTR [rax],al
   140016280:	pop    rax
   140016281:	ins    BYTE PTR es:[rdi],dx
   140016282:	add    DWORD PTR [rax],eax
   140016284:	add    BYTE PTR [rax],al
   140016286:	add    BYTE PTR [rax],al
   140016288:	jb     0x1400162f6
   14001628a:	add    DWORD PTR [rax],eax
   14001628c:	add    BYTE PTR [rax],al
   14001628e:	add    BYTE PTR [rax],al
   140016290:	mov    BYTE PTR [rcx+rax*1+0x0],ch
   140016294:	add    BYTE PTR [rax],al
   140016296:	add    BYTE PTR [rax],al
   140016298:	movabs ds:0xbc0000000000016c,al
   1400162a1:	ins    BYTE PTR es:[rdi],dx
   1400162a2:	add    DWORD PTR [rax],eax
   1400162a4:	add    BYTE PTR [rax],al
   1400162a6:	add    BYTE PTR [rax],al
   1400162a8:	(bad)  
   1400162a9:	ins    BYTE PTR es:[rdi],dx
   1400162aa:	add    DWORD PTR [rax],eax
   1400162ac:	add    BYTE PTR [rax],al
   1400162ae:	add    BYTE PTR [rax],al
   1400162b0:	call   0x140016421
   1400162b5:	add    BYTE PTR [rax],al
   1400162b7:	add    BYTE PTR [rbp*2+0x1],al
   1400162be:	add    BYTE PTR [rax],al
   1400162c0:	sbb    BYTE PTR [rbp+0x1],ch
   1400162c3:	add    BYTE PTR [rax],al
   1400162c5:	add    BYTE PTR [rax],al
   1400162c7:	add    BYTE PTR [rbp*2+0x1],ch
   1400162ce:	add    BYTE PTR [rax],al
   1400162d0:	ds ins DWORD PTR es:[rdi],dx
   1400162d2:	add    DWORD PTR [rax],eax
   1400162d4:	add    BYTE PTR [rax],al
   1400162d6:	add    BYTE PTR [rax],al
   1400162d8:	rex.W ins DWORD PTR es:[rdi],dx
   1400162da:	add    DWORD PTR [rax],eax
   1400162dc:	add    BYTE PTR [rax],al
   1400162de:	add    BYTE PTR [rax],al
   1400162e0:	push   rsp
   1400162e1:	ins    DWORD PTR es:[rdi],dx
   1400162e2:	add    DWORD PTR [rax],eax
   1400162e4:	add    BYTE PTR [rax],al
   1400162e6:	add    BYTE PTR [rax],al
   1400162e8:	(bad)  
   1400162e9:	ins    DWORD PTR es:[rdi],dx
   1400162ea:	add    DWORD PTR [rax],eax
   1400162ec:	add    BYTE PTR [rax],al
   1400162ee:	add    BYTE PTR [rax],al
   1400162f0:	jbe    0x14001635f
   1400162f2:	add    DWORD PTR [rax],eax
	...
   140016300:	(bad)  
   140016301:	push   0x1
   140016306:	add    BYTE PTR [rax],al
   140016308:	(bad)  
   140016309:	push   0x1
	...
   140016316:	add    BYTE PTR [rax],al
   140016318:	jp     0x140016383
   14001631a:	add    DWORD PTR [rax],eax
   14001631c:	add    BYTE PTR [rax],al
   14001631e:	add    BYTE PTR [rax],al
   140016320:	nop
   140016321:	imul   eax,DWORD PTR [rcx],0x0
	...
   14001632f:	add    BYTE PTR [rax],cl
   140016331:	add    BYTE PTR [rax],al
   140016333:	add    BYTE PTR [rax],al
   140016335:	add    BYTE PTR [rax],al
   140016337:	add    BYTE PTR [rdx],0x0
   14001633a:	add    BYTE PTR [rax],al
   14001633c:	add    BYTE PTR [rax],al
   14001633e:	add    BYTE PTR [rax+0x9],al
   140016344:	add    BYTE PTR [rax],al
   140016346:	add    BYTE PTR [rax+0x6],al
   14001634c:	add    BYTE PTR [rax],al
   14001634e:	add    BYTE PTR [rax+0x0],al
   140016354:	add    BYTE PTR [rax],al
   140016356:	add    BYTE PTR [rax],al
   140016358:	rex.WX outs dx,DWORD PTR ds:[rsi]
   14001635a:	add    DWORD PTR [rax],eax
	...
   140016368:	out    0x69,al
   14001636a:	add    DWORD PTR [rax],eax
   14001636c:	add    BYTE PTR [rax],al
   14001636e:	add    BYTE PTR [rax],al
   140016370:	(bad)  
   140016371:	imul   eax,DWORD PTR [rcx],0x0
   140016377:	add    al,cl
   140016379:	imul   eax,DWORD PTR [rcx],0x0
   14001637f:	add    dl,bh
   140016381:	imul   eax,DWORD PTR [rcx],0x0
   140016387:	add    BYTE PTR [rdx],dl
   140016389:	push   0x1
   14001638b:	add    BYTE PTR [rax],al
   14001638d:	add    BYTE PTR [rax],al
   14001638f:	add    BYTE PTR [rsi],ah
   140016391:	push   0x1
   140016393:	add    BYTE PTR [rax],al
   140016395:	add    BYTE PTR [rax],al
   140016397:	add    BYTE PTR [rsi],dh
   140016399:	push   0x1
   14001639b:	add    BYTE PTR [rax],al
   14001639d:	add    BYTE PTR [rax],al
   14001639f:	add    BYTE PTR [rdx+0x6a],al
   1400163a2:	add    DWORD PTR [rax],eax
   1400163a4:	add    BYTE PTR [rax],al
   1400163a6:	add    BYTE PTR [rax],al
   1400163a8:	push   rsi
   1400163a9:	push   0x1
   1400163ab:	add    BYTE PTR [rax],al
   1400163ad:	add    BYTE PTR [rax],al
   1400163af:	add    BYTE PTR [rdx+0x6a],ch
   1400163b2:	add    DWORD PTR [rax],eax
   1400163b4:	add    BYTE PTR [rax],al
   1400163b6:	add    BYTE PTR [rax],al
   1400163b8:	jp     0x140016424
   1400163ba:	add    DWORD PTR [rax],eax
   1400163bc:	add    BYTE PTR [rax],al
   1400163be:	add    BYTE PTR [rax],al
   1400163c0:	sahf   
   1400163c1:	push   0x1
   1400163c3:	add    BYTE PTR [rax],al
   1400163c5:	add    BYTE PTR [rax],al
   1400163c7:	add    BYTE PTR [rax+0x16a],cl
	...
   1400163d5:	add    BYTE PTR [rax],al
   1400163d7:	add    BYTE PTR [rax+0x16a],bh
	...
   1400163e5:	add    BYTE PTR [rax],al
   1400163e7:	add    dh,bh
   1400163e9:	push   0x1
   1400163ee:	add    BYTE PTR [rax],al
   1400163f0:	(bad)  
   1400163f1:	push   0x1
   1400163f6:	add    BYTE PTR [rax],al
   1400163f8:	shr    BYTE PTR [rax+0x1],1
   1400163fb:	add    BYTE PTR [rax],al
   1400163fd:	add    BYTE PTR [rax],al
   1400163ff:	add    BYTE PTR [rax+rbp*2+0x1],bh
	...
   14001640e:	add    BYTE PTR [rax],al
   140016410:	(bad)  
   140016411:	imul   eax,DWORD PTR [rcx],0x0
   140016417:	add    BYTE PTR [rsi],ah
   140016419:	imul   eax,DWORD PTR [rcx],0x0
   14001641f:	add    BYTE PTR [rax],bh
   140016421:	imul   eax,DWORD PTR [rcx],0x0
   140016427:	add    BYTE PTR [rsi+0x69],bl
   14001642a:	add    DWORD PTR [rax],eax
   14001642c:	add    BYTE PTR [rax],al
   14001642e:	add    BYTE PTR [rax],al
   140016430:	imul   r8,QWORD PTR [rcx],0x0
	...
   14001643f:	add    BYTE PTR [rax+0x167],bh
   140016445:	add    BYTE PTR [rax],al
   140016447:	add    ah,al
   140016449:	add    DWORD PTR [eax],eax
   14001644c:	add    BYTE PTR [rax],al
   14001644e:	add    BYTE PTR [rax],al
   140016450:	(bad)  
   140016451:	add    DWORD PTR [eax],eax
   140016454:	add    BYTE PTR [rax],al
   140016456:	add    BYTE PTR [rax],al
   140016458:	loop   0x1400164c1
   14001645a:	add    DWORD PTR [rax],eax
   14001645c:	add    BYTE PTR [rax],al
   14001645e:	add    BYTE PTR [rax],al
   140016460:	repnz add DWORD PTR [eax],eax
   140016464:	add    BYTE PTR [rax],al
   140016466:	add    BYTE PTR [rax],al
   140016468:	add    al,0x68
   14001646a:	add    DWORD PTR [rax],eax
   14001646c:	add    BYTE PTR [rax],al
   14001646e:	add    BYTE PTR [rax],al
   140016470:	adc    ch,BYTE PTR [rax+0x1]
   140016473:	add    BYTE PTR [rax],al
   140016475:	add    BYTE PTR [rax],al
   140016477:	add    BYTE PTR [rdx],ah
   140016479:	push   0x1
   14001647e:	add    BYTE PTR [rax],al
   140016480:	rex.X push 0x1
   140016486:	add    BYTE PTR [rax],al
   140016488:	rex.WX push 0x1
   14001648e:	add    BYTE PTR [rax],al
   140016490:	pop    rsi
   140016491:	push   0x1
   140016496:	add    BYTE PTR [rax],al
   140016498:	sub    BYTE PTR [rdi+0x1],ch
   14001649b:	add    BYTE PTR [rax],al
   14001649d:	add    BYTE PTR [rax],al
   14001649f:	add    BYTE PTR [rax],bl
   1400164a1:	outs   dx,DWORD PTR ds:[rsi]
   1400164a2:	add    DWORD PTR [rax],eax
   1400164a4:	add    BYTE PTR [rax],al
   1400164a6:	add    BYTE PTR [rax],al
   1400164a8:	cld    
   1400164a9:	outs   dx,BYTE PTR ds:[rsi]
   1400164aa:	add    DWORD PTR [rax],eax
   1400164ac:	add    BYTE PTR [rax],al
   1400164ae:	add    BYTE PTR [rax],al
   1400164b0:	out    dx,al
   1400164b1:	outs   dx,BYTE PTR ds:[rsi]
   1400164b2:	add    DWORD PTR [rax],eax
   1400164b4:	add    BYTE PTR [rax],al
   1400164b6:	add    BYTE PTR [rax],al
   1400164b8:	loopne 0x140016528
   1400164ba:	add    DWORD PTR [rax],eax
   1400164bc:	add    BYTE PTR [rax],al
   1400164be:	add    BYTE PTR [rax],al
   1400164c0:	int3   
   1400164c1:	outs   dx,BYTE PTR ds:[rsi]
   1400164c2:	add    DWORD PTR [rax],eax
   1400164c4:	add    BYTE PTR [rax],al
   1400164c6:	add    BYTE PTR [rax],al
   1400164c8:	mov    esp,0x16e
   1400164cd:	add    BYTE PTR [rax],al
   1400164cf:	add    BYTE PTR [rsi+rbp*2+0x1],ch
   1400164d6:	add    BYTE PTR [rax],al
   1400164d8:	pushf  
   1400164d9:	outs   dx,BYTE PTR ds:[rsi]
   1400164da:	add    DWORD PTR [rax],eax
   1400164dc:	add    BYTE PTR [rax],al
   1400164de:	add    BYTE PTR [rax],al
   1400164e0:	mov    ch,BYTE PTR [rsi+0x1]
   1400164e3:	add    BYTE PTR [rax],al
   1400164e5:	add    BYTE PTR [rax],al
   1400164e7:	add    BYTE PTR [rdx+0x6e],bh
   1400164ea:	add    DWORD PTR [rax],eax
   1400164ec:	add    BYTE PTR [rax],al
   1400164ee:	add    BYTE PTR [rax],al
   1400164f0:	push   0x6e
   1400164f2:	add    DWORD PTR [rax],eax
   1400164f4:	add    BYTE PTR [rax],al
   1400164f6:	add    BYTE PTR [rax],al
   1400164f8:	push   rax
   1400164f9:	outs   dx,BYTE PTR ds:[rsi]
   1400164fa:	add    DWORD PTR [rax],eax
   1400164fc:	add    BYTE PTR [rax],al
   1400164fe:	add    BYTE PTR [rax],al
   140016500:	outs   dx,BYTE PTR ds:[rsi]
   140016502:	add    DWORD PTR [rax],eax
   140016504:	add    BYTE PTR [rax],al
   140016506:	add    BYTE PTR [rax],al
   140016508:	sub    al,0x6e
   14001650a:	add    DWORD PTR [rax],eax
   14001650c:	add    BYTE PTR [rax],al
   14001650e:	add    BYTE PTR [rax],al
   140016510:	sbb    al,0x6e
   140016512:	add    DWORD PTR [rax],eax
   140016514:	add    BYTE PTR [rax],al
   140016516:	add    BYTE PTR [rax],al
   140016518:	or     al,0x6e
   14001651a:	add    DWORD PTR [rax],eax
   14001651c:	add    BYTE PTR [rax],al
   14001651e:	add    BYTE PTR [rax],al
   140016520:	imul   BYTE PTR [rbp+0x1]
   140016523:	add    BYTE PTR [rax],al
   140016525:	add    BYTE PTR [rax],al
   140016527:	add    al,ah
   140016529:	ins    DWORD PTR es:[rdi],dx
   14001652a:	add    DWORD PTR [rax],eax
   14001652c:	add    BYTE PTR [rax],al
   14001652e:	add    BYTE PTR [rax],al
   140016530:	(bad)  
   140016531:	ins    DWORD PTR es:[rdi],dx
   140016532:	add    DWORD PTR [rax],eax
   140016534:	add    BYTE PTR [rax],al
   140016536:	add    BYTE PTR [rax],al
   140016538:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140016539:	ins    DWORD PTR es:[rdi],dx
   14001653a:	add    DWORD PTR [rax],eax
   14001653c:	add    BYTE PTR [rax],al
   14001653e:	add    BYTE PTR [rax],al
   140016540:	mov    gs,WORD PTR [rbp+0x1]
   140016543:	add    BYTE PTR [rax],al
   140016545:	add    BYTE PTR [rax],al
   140016547:	add    ah,bl
   140016549:	push   0x1
   14001654b:	add    BYTE PTR [rax],al
   14001654d:	add    BYTE PTR [rax],al
   14001654f:	add    ah,ch
   140016551:	push   0x1
   140016553:	add    BYTE PTR [rax],al
   140016555:	add    BYTE PTR [rax],al
   140016557:	add    BYTE PTR [rdx],cl
   140016559:	imul   eax,DWORD PTR [rcx],0x0
   14001655c:	add    BYTE PTR [rax],al
   14001655e:	add    BYTE PTR [rax],al
   140016560:	sbb    ch,BYTE PTR [rbx+0x1]
   140016563:	add    BYTE PTR [rax],al
   140016565:	add    BYTE PTR [rax],al
   140016567:	add    BYTE PTR [rdx],ch
   140016569:	imul   eax,DWORD PTR [rcx],0x0
   14001656c:	add    BYTE PTR [rax],al
   14001656e:	add    BYTE PTR [rax],al
   140016570:	cmp    ch,BYTE PTR [rbx+0x1]
   140016573:	add    BYTE PTR [rax],al
   140016575:	add    BYTE PTR [rax],al
   140016577:	add    BYTE PTR [rsi+0x6b],al
   14001657a:	add    DWORD PTR [rax],eax
   14001657c:	add    BYTE PTR [rax],al
   14001657e:	add    BYTE PTR [rax],al
   140016580:	push   rsp
   140016581:	imul   eax,DWORD PTR [rcx],0x0
   140016584:	add    BYTE PTR [rax],al
   140016586:	add    BYTE PTR [rax],al
   140016588:	(bad)  
   140016589:	imul   eax,DWORD PTR [rcx],0x0
   14001658c:	add    BYTE PTR [rax],al
   14001658e:	add    BYTE PTR [rax],al
   140016590:	ins    BYTE PTR es:[rdi],dx
   140016591:	imul   eax,DWORD PTR [rcx],0x0
   140016594:	add    BYTE PTR [rax],al
   140016596:	add    BYTE PTR [rax],al
   140016598:	(bad)  
   140016599:	imul   eax,DWORD PTR [rcx],0x0
   14001659c:	add    BYTE PTR [rax],al
   14001659e:	add    BYTE PTR [rax],al
   1400165a0:	nop
   1400165a1:	imul   eax,DWORD PTR [rcx],0x0
   1400165a4:	add    BYTE PTR [rax],al
   1400165a6:	add    BYTE PTR [rax],al
   1400165a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400165a9:	imul   eax,DWORD PTR [rcx],0x0
   1400165ac:	add    BYTE PTR [rax],al
   1400165ae:	add    BYTE PTR [rax],al
   1400165b0:	mov    eax,0x16b
   1400165b5:	add    BYTE PTR [rax],al
   1400165b7:	add    al,cl
   1400165b9:	imul   eax,DWORD PTR [rcx],0x0
   1400165bc:	add    BYTE PTR [rax],al
   1400165be:	add    BYTE PTR [rax],al
   1400165c0:	(bad)  
   1400165c1:	imul   eax,DWORD PTR [rcx],0x0
   1400165c4:	add    BYTE PTR [rax],al
   1400165c6:	add    BYTE PTR [rax],al
   1400165c8:	(bad)  
   1400165c9:	imul   eax,DWORD PTR [rcx],0x0
   1400165cc:	add    BYTE PTR [rax],al
   1400165ce:	add    BYTE PTR [rax],al
   1400165d0:	clc    
   1400165d1:	imul   eax,DWORD PTR [rcx],0x0
   1400165d4:	add    BYTE PTR [rax],al
   1400165d6:	add    BYTE PTR [rax],al
   1400165d8:	(bad)  
   1400165d9:	ins    BYTE PTR es:[rdi],dx
   1400165da:	add    DWORD PTR [rax],eax
   1400165dc:	add    BYTE PTR [rax],al
   1400165de:	add    BYTE PTR [rax],al
   1400165e0:	(bad)  
   1400165e1:	ins    BYTE PTR es:[rdi],dx
   1400165e2:	add    DWORD PTR [rax],eax
   1400165e4:	add    BYTE PTR [rax],al
   1400165e6:	add    BYTE PTR [rax],al
   1400165e8:	xor    BYTE PTR [rcx+rax*1+0x0],ch
   1400165ec:	add    BYTE PTR [rax],al
   1400165ee:	add    BYTE PTR [rax],al
   1400165f0:	rex.X ins BYTE PTR es:[rdi],dx
   1400165f2:	add    DWORD PTR [rax],eax
   1400165f4:	add    BYTE PTR [rax],al
   1400165f6:	add    BYTE PTR [rax],al
   1400165f8:	pop    rax
   1400165f9:	ins    BYTE PTR es:[rdi],dx
   1400165fa:	add    DWORD PTR [rax],eax
   1400165fc:	add    BYTE PTR [rax],al
   1400165fe:	add    BYTE PTR [rax],al
   140016600:	jb     0x14001666e
   140016602:	add    DWORD PTR [rax],eax
   140016604:	add    BYTE PTR [rax],al
   140016606:	add    BYTE PTR [rax],al
   140016608:	mov    BYTE PTR [rcx+rax*1+0x0],ch
   14001660c:	add    BYTE PTR [rax],al
   14001660e:	add    BYTE PTR [rax],al
   140016610:	movabs ds:0xbc0000000000016c,al
   140016619:	ins    BYTE PTR es:[rdi],dx
   14001661a:	add    DWORD PTR [rax],eax
   14001661c:	add    BYTE PTR [rax],al
   14001661e:	add    BYTE PTR [rax],al
   140016620:	(bad)  
   140016621:	ins    BYTE PTR es:[rdi],dx
   140016622:	add    DWORD PTR [rax],eax
   140016624:	add    BYTE PTR [rax],al
   140016626:	add    BYTE PTR [rax],al
   140016628:	call   0x140016799
   14001662d:	add    BYTE PTR [rax],al
   14001662f:	add    BYTE PTR [rbp*2+0x1],al
   140016636:	add    BYTE PTR [rax],al
   140016638:	sbb    BYTE PTR [rbp+0x1],ch
   14001663b:	add    BYTE PTR [rax],al
   14001663d:	add    BYTE PTR [rax],al
   14001663f:	add    BYTE PTR [rbp*2+0x1],ch
   140016646:	add    BYTE PTR [rax],al
   140016648:	ds ins DWORD PTR es:[rdi],dx
   14001664a:	add    DWORD PTR [rax],eax
   14001664c:	add    BYTE PTR [rax],al
   14001664e:	add    BYTE PTR [rax],al
   140016650:	rex.W ins DWORD PTR es:[rdi],dx
   140016652:	add    DWORD PTR [rax],eax
   140016654:	add    BYTE PTR [rax],al
   140016656:	add    BYTE PTR [rax],al
   140016658:	push   rsp
   140016659:	ins    DWORD PTR es:[rdi],dx
   14001665a:	add    DWORD PTR [rax],eax
   14001665c:	add    BYTE PTR [rax],al
   14001665e:	add    BYTE PTR [rax],al
   140016660:	(bad)  
   140016661:	ins    DWORD PTR es:[rdi],dx
   140016662:	add    DWORD PTR [rax],eax
   140016664:	add    BYTE PTR [rax],al
   140016666:	add    BYTE PTR [rax],al
   140016668:	jbe    0x1400166d7
   14001666a:	add    DWORD PTR [rax],eax
	...
   140016678:	(bad)  
   140016679:	push   0x1
   14001667e:	add    BYTE PTR [rax],al
   140016680:	(bad)  
   140016681:	push   0x1
	...
   14001668e:	add    BYTE PTR [rax],al
   140016690:	jp     0x1400166fb
   140016692:	add    DWORD PTR [rax],eax
   140016694:	add    BYTE PTR [rax],al
   140016696:	add    BYTE PTR [rax],al
   140016698:	nop
   140016699:	imul   eax,DWORD PTR [rcx],0x0
	...
   1400166a7:	add    BYTE PTR [rax],cl
   1400166a9:	add    BYTE PTR [rax],al
   1400166ab:	add    BYTE PTR [rax],al
   1400166ad:	add    BYTE PTR [rax],al
   1400166af:	add    BYTE PTR [rdx],0x0
   1400166b2:	add    BYTE PTR [rax],al
   1400166b4:	add    BYTE PTR [rax],al
   1400166b6:	add    BYTE PTR [rax+0x9],al
   1400166bc:	add    BYTE PTR [rax],al
   1400166be:	add    BYTE PTR [rax+0x6],al
   1400166c4:	add    BYTE PTR [rax],al
   1400166c6:	add    BYTE PTR [rax+0x0],al
   1400166cc:	add    BYTE PTR [rax],al
   1400166ce:	add    BYTE PTR [rax],al
   1400166d0:	rex.WX outs dx,DWORD PTR ds:[rsi]
   1400166d2:	add    DWORD PTR [rax],eax
	...
   1400166e0:	out    0x69,al
   1400166e2:	add    DWORD PTR [rax],eax
   1400166e4:	add    BYTE PTR [rax],al
   1400166e6:	add    BYTE PTR [rax],al
   1400166e8:	(bad)  
   1400166e9:	imul   eax,DWORD PTR [rcx],0x0
   1400166ef:	add    al,cl
   1400166f1:	imul   eax,DWORD PTR [rcx],0x0
   1400166f7:	add    dl,bh
   1400166f9:	imul   eax,DWORD PTR [rcx],0x0
   1400166ff:	add    BYTE PTR [rdx],dl
   140016701:	push   0x1
   140016703:	add    BYTE PTR [rax],al
   140016705:	add    BYTE PTR [rax],al
   140016707:	add    BYTE PTR [rsi],ah
   140016709:	push   0x1
   14001670b:	add    BYTE PTR [rax],al
   14001670d:	add    BYTE PTR [rax],al
   14001670f:	add    BYTE PTR [rsi],dh
   140016711:	push   0x1
   140016713:	add    BYTE PTR [rax],al
   140016715:	add    BYTE PTR [rax],al
   140016717:	add    BYTE PTR [rdx+0x6a],al
   14001671a:	add    DWORD PTR [rax],eax
   14001671c:	add    BYTE PTR [rax],al
   14001671e:	add    BYTE PTR [rax],al
   140016720:	push   rsi
   140016721:	push   0x1
   140016723:	add    BYTE PTR [rax],al
   140016725:	add    BYTE PTR [rax],al
   140016727:	add    BYTE PTR [rdx+0x6a],ch
   14001672a:	add    DWORD PTR [rax],eax
   14001672c:	add    BYTE PTR [rax],al
   14001672e:	add    BYTE PTR [rax],al
   140016730:	jp     0x14001679c
   140016732:	add    DWORD PTR [rax],eax
   140016734:	add    BYTE PTR [rax],al
   140016736:	add    BYTE PTR [rax],al
   140016738:	sahf   
   140016739:	push   0x1
   14001673b:	add    BYTE PTR [rax],al
   14001673d:	add    BYTE PTR [rax],al
   14001673f:	add    BYTE PTR [rax+0x16a],cl
	...
   14001674d:	add    BYTE PTR [rax],al
   14001674f:	add    BYTE PTR [rax+0x16a],bh
	...
   14001675d:	add    BYTE PTR [rax],al
   14001675f:	add    dh,bh
   140016761:	push   0x1
   140016766:	add    BYTE PTR [rax],al
   140016768:	(bad)  
   140016769:	push   0x1
   14001676e:	add    BYTE PTR [rax],al
   140016770:	shr    BYTE PTR [rax+0x1],1
   140016773:	add    BYTE PTR [rax],al
   140016775:	add    BYTE PTR [rax],al
   140016777:	add    BYTE PTR [rax+rbp*2+0x1],bh
	...
   140016786:	add    BYTE PTR [rax],al
   140016788:	(bad)  
   140016789:	imul   eax,DWORD PTR [rcx],0x0
   14001678f:	add    BYTE PTR [rsi],ah
   140016791:	imul   eax,DWORD PTR [rcx],0x0
   140016797:	add    BYTE PTR [rax],bh
   140016799:	imul   eax,DWORD PTR [rcx],0x0
   14001679f:	add    BYTE PTR [rsi+0x69],bl
   1400167a2:	add    DWORD PTR [rax],eax
   1400167a4:	add    BYTE PTR [rax],al
   1400167a6:	add    BYTE PTR [rax],al
   1400167a8:	imul   r8,QWORD PTR [rcx],0x0
	...
   1400167b7:	add    BYTE PTR [rdx+0x3],bl
   1400167ba:	rex.W
   1400167bb:	gs (bad) 
   1400167bd:	jo     0x140016805
   1400167bf:	jb     0x140016826
   1400167c1:	add    BYTE PTR gs:[rax],al
   1400167c4:	rol    DWORD PTR [rdx],0x47
   1400167c7:	gs je  0x14001681a
   1400167ca:	jb     0x14001683b
   1400167cc:	movsxd esp,DWORD PTR [rbp+0x73]
   1400167cf:	jae    0x140016819
   1400167d1:	gs (bad) 
   1400167d3:	jo     0x1400167d5
   1400167d5:	add    BYTE PTR [rsi+0x3],dl
   1400167d8:	rex.W
   1400167d9:	gs (bad) 
   1400167db:	jo     0x14001681e
   1400167dd:	ins    BYTE PTR es:[rdi],dx
   1400167de:	ins    BYTE PTR es:[rdi],dx
   1400167df:	outs   dx,DWORD PTR ds:[rsi]
   1400167e0:	movsxd eax,DWORD PTR [rax]
   1400167e2:	jo     0x1400167e6
   1400167e4:	rex.RXB
   1400167e5:	gs je  0x140016834
   1400167e8:	(bad)  
   1400167e9:	jae    0x14001685f
   1400167eb:	rex.RB jb 0x140016860
   1400167ee:	outs   dx,DWORD PTR ds:[rsi]
   1400167ef:	jb     0x1400167f1
   1400167f1:	add    ch,al
   1400167f3:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   1400167f7:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   140016800:	js     0x140016859
   140016802:	add    BYTE PTR [rax],al
   140016804:	mov    esi,0x65724601
   140016809:	imul   r12,QWORD PTR gs:[rdx+0x72],0x797261
   140016812:	(bad)  
   140016813:	add    eax,DWORD PTR [rdi+0x65]
   140016816:	je     0x14001686c
   140016818:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14001681f:	je     0x140016821
   140016821:	add    dh,al
   140016823:	add    eax,0x47535457
   140016828:	gs je  0x14001686c
   14001682b:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14001682f:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140016832:	outs   dx,BYTE PTR ds:[rsi]
   140016833:	jae    0x1400168a4
   140016835:	ins    BYTE PTR es:[rdi],dx
   140016836:	gs push rbx
   140016838:	gs jae 0x1400168ae
   14001683b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6449
   140016842:	outs   dx,BYTE PTR ds:[rsi]
   140016843:	add    eax,0x65656c53
   140016848:	jo     0x14001684a
   14001684a:	icebp  
   14001684b:	add    DWORD PTR [rdi+0x65],eax
   14001684e:	je     0x140016893
   140016850:	outs   dx,DWORD PTR ds:[rsi]
   140016851:	ins    DWORD PTR es:[rdi],dx
   140016852:	jo     0x1400168c9
   140016854:	je     0x1400168bb
   140016856:	jb     0x1400168a6
   140016858:	(bad)  
   140016859:	ins    DWORD PTR es:[rdi],dx
   14001685a:	gs push rdi
   14001685c:	add    BYTE PTR [rax],al
   14001685e:	pop    rsi
   14001685f:	add    ecx,DWORD PTR [rax+0x65]
   140016862:	(bad)  
   140016863:	jo     0x1400168b8
   140016865:	gs je  0x1400168b1
   140016868:	outs   dx,BYTE PTR ds:[rsi]
   140016869:	outs   dx,WORD PTR ds:[rsi]
   14001686b:	jb     0x1400168da
   14001686d:	(bad)  
   14001686e:	je     0x1400168d9
   140016870:	outs   dx,DWORD PTR ds:[rsi]
   140016871:	outs   dx,BYTE PTR ds:[rsi]
   140016872:	add    BYTE PTR [rax],al
   140016874:	rex.WXB
   140016875:	rex.RB push r10
   140016877:	rex.WRX
   140016878:	rex.RB
   140016879:	xor    r14,QWORD PTR [rdx]
   14001687c:	cs fs ins BYTE PTR es:[rdi],dx
   14001687f:	ins    BYTE PTR es:[rdi],dx
   140016880:	add    BYTE PTR [rax],al
   140016882:	lea    eax,[rax]
   140016884:	rex.WRX
   140016885:	gs je  0x1400168cf
   140016888:	gs je  0x1400168d5
   14001688b:	outs   dx,DWORD PTR ds:[rsi]
   14001688c:	imul   ebp,DWORD PTR [rsi+0x49],0x726f666e
   140016893:	ins    DWORD PTR es:[rdi],dx
   140016894:	(bad)  
   140016895:	je     0x140016900
   140016897:	outs   dx,DWORD PTR ds:[rsi]
   140016898:	outs   dx,BYTE PTR ds:[rsi]
   140016899:	add    BYTE PTR [rcx+0x0],bl
   14001689c:	rex.WRX
   14001689d:	gs je  0x1400168e1
   1400168a0:	jo     0x14001690b
   1400168a2:	rex.X jne 0x14001690b
   1400168a5:	data16 gs jb 0x1400168ef
   1400168a9:	jb     0x140016910
   1400168ab:	add    BYTE PTR gs:[rax],al
   1400168ae:	rex.WRX
   1400168af:	rex.RB push r12
   1400168b1:	push   r8
   1400168b3:	xor    rsi,QWORD PTR [r10]
   1400168b6:	cs fs ins BYTE PTR es:[rdi],dx
   1400168b9:	ins    BYTE PTR es:[rdi],dx
   1400168ba:	add    BYTE PTR [rax],al
   1400168bc:	mov    al,0x2
   1400168be:	push   rdx
   1400168bf:	je     0x14001692d
   1400168c1:	rex.XB (bad) 
   1400168c3:	jo     0x140016939
   1400168c5:	jne    0x140016939
   1400168c7:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400168ca:	outs   dx,BYTE PTR ds:[rsi]
   1400168cb:	je     0x140016932
   1400168cd:	js     0x140016943
   1400168cf:	add    BYTE PTR [rdi+0x4],cl
   1400168d2:	push   rdx
   1400168d3:	je     0x140016941
   1400168d5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400168d7:	outs   dx,DWORD PTR ds:[rsi]
   1400168d8:	imul   esi,DWORD PTR [rbp+0x70],0x46
   1400168dc:	jne    0x14001694c
   1400168de:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400168e2:	outs   dx,BYTE PTR ds:[rsi]
   1400168e3:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400168e5:	je     0x140016959
   1400168e7:	jns    0x1400168e9
   1400168e9:	add    BYTE PTR [rsi+0x5],dl
   1400168ec:	push   rdx
   1400168ed:	je     0x14001695b
   1400168ef:	push   rsi
   1400168f0:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   1400168f7:	outs   dx,BYTE PTR ds:[rsi]
   1400168f8:	ja     0x140016963
   1400168fa:	outs   dx,BYTE PTR ds:[rsi]
   1400168fb:	add    BYTE PTR fs:[rax],al
   1400168fe:	(bad)  
   1400168ff:	add    eax,0x556c7452
   140016904:	outs   dx,BYTE PTR ds:[rsi]
   140016905:	ja     0x140016970
   140016907:	outs   dx,BYTE PTR ds:[rsi]
   140016908:	fs rex.RB js 0x14001690c
   14001690c:	outs   dx,BYTE PTR ds:[rsi]
   14001690d:	je     0x140016973
   14001690f:	ins    BYTE PTR es:[rdi],dx
   140016910:	ins    BYTE PTR es:[rdi],dx
   140016911:	cs fs ins BYTE PTR es:[rdi],dx
   140016914:	ins    BYTE PTR es:[rdi],dx
   140016915:	add    BYTE PTR [rbp+0x0],bh
   140016918:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14001691a:	push   rsp
   14001691b:	(bad)  
   14001691c:	jae    0x140016989
   14001691e:	rex.WRB
   14001691f:	gs ins DWORD PTR es:[rdi],dx
   140016921:	rex.RX jb 0x140016989
   140016924:	add    BYTE PTR gs:[rax+rax*1+0x43],bh
   140016929:	outs   dx,DWORD PTR ds:[rsi]
   14001692a:	push   rsp
   14001692b:	(bad)  
   14001692c:	jae    0x140016999
   14001692e:	rex.WRB
   14001692f:	gs ins DWORD PTR es:[rdi],dx
   140016931:	rex.B ins BYTE PTR es:[rdi],dx
   140016933:	ins    BYTE PTR es:[rdi],dx
   140016934:	outs   dx,DWORD PTR ds:[rsi]
   140016935:	movsxd eax,DWORD PTR [rax]
   140016937:	add    BYTE PTR [rip+0x436f4300],bl        # 0x18370ac3d
   14001693d:	jb     0x1400169a4
   14001693f:	(bad)  
   140016940:	je     0x1400169a7
   140016942:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016944:	jae    0x1400169ba
   140016946:	(bad)  
   140016947:	outs   dx,BYTE PTR ds:[rsi]
   140016948:	movsxd esp,DWORD PTR [rbp+0x0]
   14001694b:	add    BYTE PTR [rbx+0x0],dl
   14001694e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016950:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016952:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14001695a:	rex.RB js 0x14001695d
   14001695d:	add    BYTE PTR [rcx+0x556f4300],al
   140016963:	outs   dx,BYTE PTR ds:[rsi]
   140016964:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14001696b:	imul   edi,DWORD PTR [rdx+0x65],0x6c6f0000
   140016972:	xor    esi,DWORD PTR gs:[rdx]
   140016975:	cs fs ins BYTE PTR es:[rdi],dx
   140016978:	ins    BYTE PTR es:[rdi],dx
   140016979:	add    BYTE PTR [rbx],al
   14001697b:	add    BYTE PTR [rcx+0x63],al
   14001697e:	movsxd esp,DWORD PTR [rbp+0x73]
   140016981:	jae    0x1400169ec
   140016983:	(bad)  
   140016984:	ins    BYTE PTR es:[rdi],dx
   140016985:	gs rex.XB push 0x72646c69
   14001698c:	outs   dx,BYTE PTR gs:[rsi]
   14001698e:	add    BYTE PTR [rax],al
   140016990:	(bad)  
   140016991:	add    BYTE PTR [rcx+0x63],al
   140016994:	movsxd esp,DWORD PTR [rbp+0x73]
   140016997:	jae    0x140016a02
   140016999:	(bad)  
   14001699a:	ins    BYTE PTR es:[rdi],dx
   14001699b:	gs rex.WRXB (bad) 
   14001699e:	push   0x65
   1400169a0:	movsxd esi,DWORD PTR [rsi+rax*2+0x72]
   1400169a4:	outs   dx,DWORD PTR ds:[rsi]
   1400169a5:	ins    DWORD PTR es:[rdi],dx
   1400169a6:	push   rdi
   1400169a7:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   1400169ae:	rex.WRXB
   1400169af:	rex.WR
   1400169b0:	rex.RB
   1400169b1:	rex.B
   1400169b2:	rex.XB
   1400169b3:	rex.XB
   1400169b4:	cs fs ins BYTE PTR es:[rdi],dx
   1400169b7:	ins    BYTE PTR es:[rdi],dx
   1400169b8:	add    BYTE PTR [rax],al
   1400169ba:	rex.WRXB
   1400169bb:	rex.WR
   1400169bc:	rex.RB
   1400169bd:	push   r13
   1400169bf:	push   rsp
   1400169c0:	xor    esi,DWORD PTR [rdx]
   1400169c2:	cs fs ins BYTE PTR es:[rdi],dx
   1400169c5:	ins    BYTE PTR es:[rdi],dx
   1400169c6:	add    BYTE PTR [rax],al
   1400169c8:	xor    eax,DWORD PTR [rdx]
   1400169ca:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400169cc:	(bad)  
   1400169cd:	fs push rbx
   1400169cf:	je     0x140016a43
   1400169d1:	imul   ebp,DWORD PTR [rsi+0x67],0x1090057
   1400169d8:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x646e6957
   1400169e0:	outs   dx,DWORD PTR ds:[rsi]
   1400169e1:	ja     0x140016a28
   1400169e3:	js     0x140016a3c
   1400169e5:	add    BYTE PTR [rdx],bh
   1400169e7:	add    DWORD PTR [rdi+0x65],eax
   1400169ea:	je     0x140016a30
   1400169ec:	gs jae 0x140016a5a
   1400169ef:	je     0x140016a60
   1400169f1:	jo     0x140016a4a
   1400169f3:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   1400169fa:	xor    eax,DWORD PTR [rbx]
   1400169fc:	push   rbx
   1400169fd:	jns    0x140016a72
   1400169ff:	je     0x140016a66
   140016a01:	ins    DWORD PTR es:[rdi],dx
   140016a02:	push   rax
   140016a03:	(bad)  
   140016a04:	jb     0x140016a67
   140016a06:	ins    DWORD PTR es:[rdi],dx
   140016a07:	gs je  0x140016a6f
   140016a0a:	jb     0x140016a7f
   140016a0c:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016a0e:	outs   dx,WORD PTR ds:[rsi]
   140016a10:	push   rdi
   140016a11:	add    BYTE PTR [rbx+0x74654701],ch
   140016a17:	push   rbx
   140016a18:	jns    0x140016a8d
   140016a1a:	je     0x140016a81
   140016a1c:	ins    DWORD PTR es:[rdi],dx
   140016a1d:	rex.WRB
   140016a1e:	gs je  0x140016a93
   140016a21:	imul   esp,DWORD PTR [rbx+0x73],0x1360000
   140016a28:	rex.RXB
   140016a29:	gs je  0x140016a6f
   140016a2c:	jne    0x140016aa0
   140016a2e:	jae    0x140016a9f
   140016a30:	jb     0x140016a82
   140016a32:	outs   dx,DWORD PTR ds:[rsi]
   140016a33:	jae    0x140016a35
   140016a35:	add    BYTE PTR [rdi+0x6e655302],dh
   140016a3b:	rex.WB outs dx,BYTE PTR fs:[rsi]
   140016a3e:	jo     0x140016ab5
   140016a40:	je     0x140016a42
   140016a42:	add    cl,BYTE PTR fs:[rdi+0x70]
   140016a46:	outs   dx,BYTE PTR gs:[rsi]
   140016a48:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016a4a:	jo     0x140016ac1
   140016a4c:	je     0x140016a92
   140016a4e:	gs jae 0x140016abc
   140016a51:	je     0x140016ac2
   140016a53:	jo     0x140016a55
   140016a55:	add    BYTE PTR [rcx],al
   140016a57:	add    edx,DWORD PTR [rbx+0x65]
   140016a5a:	je     0x140016ab0
   140016a5c:	push   0x64616572
   140016a61:	rex.R
   140016a62:	gs jae 0x140016ad0
   140016a65:	je     0x140016ad6
   140016a67:	jo     0x140016a69
   140016a69:	add    BYTE PTR [rax+rax*1+0x43],cl
   140016a6d:	ins    BYTE PTR es:[rdi],dx
   140016a6e:	outs   dx,DWORD PTR ds:[rsi]
   140016a6f:	jae    0x140016ad6
   140016a71:	rex.R
   140016a72:	gs jae 0x140016ae0
   140016a75:	je     0x140016ae6
   140016a77:	jo     0x140016a79
   140016a79:	add    BYTE PTR [rdx],cl
   140016a7b:	add    DWORD PTR [rsi+0x69],eax
   140016a7e:	outs   dx,BYTE PTR ds:[rsi]
   140016a7f:	fs push rdi
   140016a81:	imul   ebp,DWORD PTR [rsi+0x64],0x57776f
   140016a88:	add    DWORD PTR [r15+0x65],r8d
   140016a8c:	je     0x140016ad4
   140016a8e:	outs   dx,DWORD PTR ds:[rsi]
   140016a8f:	jb     0x140016af6
   140016a91:	addr32 jb 0x140016b03
   140016a94:	jne    0x140016b04
   140016a96:	fs push rdi
   140016a98:	imul   ebp,DWORD PTR [rsi+0x64],0x7b00776f
   140016a9f:	add    ebp,DWORD PTR [rbx+0x65]
   140016aa2:	jns    0x140016b06
   140016aa4:	fs pop rdi
   140016aa6:	gs jbe 0x140016b0e
   140016aa9:	outs   dx,BYTE PTR ds:[rsi]
   140016aaa:	je     0x140016aac
   140016aac:	push   rbp
   140016aad:	push   rbx
   140016aae:	rex.RB push r10
   140016ab0:	xor    esi,DWORD PTR [rdx]
   140016ab2:	cs fs ins BYTE PTR es:[rdi],dx
   140016ab5:	ins    BYTE PTR es:[rdi],dx
   140016ab6:	add    BYTE PTR [rax],al
   140016ab8:	add    al,BYTE PTR [rax]
   140016aba:	push   rdi
   140016abb:	push   rsp
   140016abc:	push   rbx
   140016abd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016abf:	outs   dx,BYTE PTR ds:[rsi]
   140016ac0:	outs   dx,BYTE PTR ds:[rsi]
   140016ac1:	movsxd esi,DWORD PTR gs:[rbx+rdx*2+0x65]
   140016ac6:	jae    0x140016b3b
   140016ac8:	imul   ebp,DWORD PTR [rdi+0x6e],0x57000057
   140016acf:	push   rsp
   140016ad0:	push   rbx
   140016ad1:	push   r8
   140016ad3:	xor    rsi,QWORD PTR [r10]
   140016ad6:	cs fs ins BYTE PTR es:[rdi],dx
   140016ad9:	ins    BYTE PTR es:[rdi],dx
   140016ada:	add    BYTE PTR [rax],al
   140016adc:	sub    al,0x3
   140016ade:	rex.RXB
   140016adf:	gs je  0x140016b38
   140016ae2:	gs jb  0x140016b58
   140016ae5:	imul   ebp,DWORD PTR [rdi+0x6e],0x577845
   140016aec:	pop    rdi
   140016aed:	add    eax,0x55746553
   140016af2:	outs   dx,BYTE PTR ds:[rsi]
   140016af3:	push   0x6c646e61
   140016af8:	gs fs rex.RB js 0x140016b60
   140016afd:	gs jo  0x140016b74
   140016b00:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140016b07:	gs jb  0x140016b0a
   140016b0a:	rex add DWORD PTR [rbp+0x6e],eax
   140016b0e:	movsxd ebp,DWORD PTR [rdi+0x64]
   140016b11:	gs push rax
   140016b13:	outs   dx,DWORD PTR ds:[rsi]
   140016b14:	imul   ebp,DWORD PTR [rsi+0x74],0x18007265
   140016b1b:	add    DWORD PTR [rbp+riz*2+0x63],eax
   140016b1f:	outs   dx,DWORD PTR ds:[rsi]
   140016b20:	fs gs push rax
   140016b23:	outs   dx,DWORD PTR ds:[rsi]
   140016b24:	imul   ebp,DWORD PTR [rsi+0x74],0x25007265
   140016b2b:	add    eax,0x4c746553
   140016b30:	(bad)  
   140016b31:	jae    0x140016ba7
   140016b33:	rex.RB jb 0x140016ba8
   140016b36:	outs   dx,DWORD PTR ds:[rsi]
   140016b37:	jb     0x140016b39
   140016b39:	add    BYTE PTR [rsi+0x736c4601],ch
   140016b3f:	rex.B ins BYTE PTR es:[rdi],dx
   140016b41:	ins    BYTE PTR es:[rdi],dx
   140016b42:	outs   dx,DWORD PTR ds:[rsi]
   140016b43:	movsxd eax,DWORD PTR [rax]
   140016b45:	add    BYTE PTR [rax+0x736c4601],dh
   140016b4b:	rex.RXB
   140016b4c:	gs je  0x140016ba5
   140016b4f:	(bad)  
   140016b50:	ins    BYTE PTR es:[rdi],dx
   140016b51:	jne    0x140016bb8
   140016b53:	add    BYTE PTR [rcx+0x736c4601],dh
   140016b59:	push   rbx
   140016b5a:	gs je  0x140016bb3
   140016b5d:	(bad)  
   140016b5e:	ins    BYTE PTR es:[rdi],dx
   140016b5f:	jne    0x140016bc6
   140016b61:	add    BYTE PTR [rdi+0x736c4601],ch
   140016b67:	rex.RX jb 0x140016bcf
   140016b6a:	add    BYTE PTR gs:[rsi],ch
   140016b6d:	add    al,BYTE PTR [rdi+0x65]
   140016b70:	je     0x140016bb5
   140016b72:	jne    0x140016be6
   140016b74:	jb     0x140016bdb
   140016b76:	outs   dx,BYTE PTR ds:[rsi]
   140016b77:	je     0x140016bcd
   140016b79:	push   0x64616572
   140016b7e:	rex.WB
   140016b7f:	add    BYTE PTR fs:[rax],al
   140016b82:	jae    0x140016b85
   140016b84:	rex.RB js 0x140016bf0
   140016b87:	je     0x140016bd9
   140016b89:	jb     0x140016bfa
   140016b8b:	movsxd esp,DWORD PTR [rbp+0x73]
   140016b8e:	jae    0x140016b90
   140016b90:	xchg   BYTE PTR [rdx],al
   140016b92:	rex.RXB
   140016b93:	gs je  0x140016be3
   140016b96:	outs   dx,DWORD PTR ds:[rsi]
   140016b97:	fs jne 0x140016c06
   140016b9a:	gs rex.W (bad) 
   140016b9d:	outs   dx,BYTE PTR ds:[rsi]
   140016b9e:	fs ins BYTE PTR es:[rdi],dx
   140016ba0:	gs rex.RB js 0x140016bfb
   140016ba4:	add    BYTE PTR [rax],al
   140016ba6:	mov    esp,0x74654702
   140016bab:	push   rax
   140016bac:	jb     0x140016c1d
   140016bae:	movsxd eax,DWORD PTR [rcx+0x64]
   140016bb1:	fs jb  0x140016c19
   140016bb4:	jae    0x140016c29
   140016bb6:	add    BYTE PTR [rax],al
   140016bb8:	in     al,0x2
   140016bba:	rex.RXB
   140016bbb:	gs je  0x140016c11
   140016bbe:	je     0x140016c24
   140016bc0:	rex.W (bad) 
   140016bc2:	outs   dx,BYTE PTR ds:[rsi]
   140016bc3:	fs ins BYTE PTR es:[rdi],dx
   140016bc5:	add    BYTE PTR gs:[rax],al
   140016bc8:	add    DWORD PTR [rsi],eax
   140016bca:	push   rdi
   140016bcb:	jb     0x140016c36
   140016bcd:	je     0x140016c34
   140016bcf:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x65470282
   140016bd8:	je     0x140016c27
   140016bda:	outs   dx,DWORD PTR ds:[rsi]
   140016bdb:	fs jne 0x140016c4a
   140016bde:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   140016be8:	add    BYTE PTR [rax],al
   140016bea:	pop    rax
   140016beb:	add    ecx,DWORD PTR [rax+0x65]
   140016bee:	(bad)  
   140016bef:	jo     0x140016c34
   140016bf1:	jb     0x140016c58
   140016bf3:	(bad)  
   140016bf4:	je     0x140016c5b
   140016bf6:	add    BYTE PTR [rax],al
   140016bf8:	pop    rsi
   140016bf9:	add    al,BYTE PTR [rdi+0x65]
   140016bfc:	je     0x140016c44
   140016bfe:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140016c06:	(bad)  
   140016c07:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   140016c0b:	gs je  0x140016c73
   140016c0e:	rex.XB jb 0x140016c7a
   140016c11:	je     0x140016c7c
   140016c13:	movsxd esp,DWORD PTR [rcx+0x6c]
   140016c16:	push   rbx
   140016c17:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140016c1c:	outs   dx,BYTE PTR ds:[rsi]
   140016c1d:	add    dh,bl
   140016c1f:	add    al,BYTE PTR [rdi+0x65]
   140016c22:	je     0x140016c77
   140016c24:	je     0x140016c87
   140016c26:	jb     0x140016c9c
   140016c28:	jne    0x140016c9a
   140016c2a:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016c2c:	outs   dx,WORD PTR ds:[rsi]
   140016c2e:	push   rdi
   140016c2f:	add    BYTE PTR [rcx],ah
   140016c31:	add    eax,0x48746553
   140016c36:	(bad)  
   140016c37:	outs   dx,BYTE PTR ds:[rsi]
   140016c38:	fs ins BYTE PTR es:[rdi],dx
   140016c3a:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140016c3d:	jne    0x140016cad
   140016c3f:	je     0x140016c41
   140016c41:	add    BYTE PTR [rbx+0x74654702],al
   140016c47:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140016c49:	fs jne 0x140016cb8
   140016c4c:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
   140016c56:	add    BYTE PTR [rax],al
   140016c58:	(bad)  
   140016c59:	add    al,0x51
   140016c5b:	jne    0x140016cc2
   140016c5d:	jb     0x140016cd8
   140016c5f:	push   rax
   140016c60:	gs jb  0x140016cc9
   140016c63:	outs   dx,DWORD PTR ds:[rsi]
   140016c64:	jb     0x140016cd3
   140016c66:	(bad)  
   140016c67:	outs   dx,BYTE PTR ds:[rsi]
   140016c68:	movsxd esp,DWORD PTR [rbp+0x43]
   140016c6b:	outs   dx,DWORD PTR ds:[rsi]
   140016c6c:	jne    0x140016cdc
   140016c6e:	je     0x140016cd5
   140016c70:	jb     0x140016c72
   140016c72:	sub    al,BYTE PTR [rdx]
   140016c74:	rex.RXB
   140016c75:	gs je  0x140016cbb
   140016c78:	jne    0x140016cec
   140016c7a:	jb     0x140016ce1
   140016c7c:	outs   dx,BYTE PTR ds:[rsi]
   140016c7d:	je     0x140016ccf
   140016c7f:	jb     0x140016cf0
   140016c81:	movsxd esp,DWORD PTR [rbp+0x73]
   140016c84:	jae    0x140016ccf
   140016c86:	fs add bl,bh
   140016c89:	add    al,BYTE PTR [rdi+0x65]
   140016c8c:	je     0x140016ce1
   140016c8e:	jns    0x140016d03
   140016c90:	je     0x140016cf7
   140016c92:	ins    DWORD PTR es:[rdi],dx
   140016c93:	push   rsp
   140016c94:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140016c9b:	ins    BYTE PTR es:[rdi],dx
   140016c9c:	gs push rsp
   140016c9e:	imul   ebp,DWORD PTR [rbp+0x65],0x47024700
   140016ca5:	gs je  0x140016ced
   140016ca8:	outs   dx,BYTE PTR ds:[rsi]
   140016ca9:	jbe    0x140016d14
   140016cab:	jb     0x140016d1c
   140016cad:	outs   dx,BYTE PTR ds:[rsi]
   140016cae:	ins    DWORD PTR es:[rdi],dx
   140016caf:	outs   dx,BYTE PTR gs:[rsi]
   140016cb1:	je     0x140016d06
   140016cb3:	je     0x140016d27
   140016cb5:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   140016cbc:	mov    ebp,0x65724601
   140016cc1:	rex.RB outs dx,BYTE PTR gs:[rsi]
   140016cc4:	jbe    0x140016d2f
   140016cc6:	jb     0x140016d37
   140016cc8:	outs   dx,BYTE PTR ds:[rsi]
   140016cc9:	ins    DWORD PTR es:[rdi],dx
   140016cca:	outs   dx,BYTE PTR gs:[rsi]
   140016ccc:	je     0x140016d21
   140016cce:	je     0x140016d42
   140016cd0:	imul   ebp,DWORD PTR [rsi+0x67],0xe9005773
   140016cd7:	add    DWORD PTR [rdi+0x65],eax
   140016cda:	je     0x140016d1f
   140016cdc:	outs   dx,DWORD PTR ds:[rsi]
   140016cdd:	ins    DWORD PTR es:[rdi],dx
   140016cde:	ins    DWORD PTR es:[rdi],dx
   140016cdf:	(bad)  
   140016ce0:	outs   dx,BYTE PTR ds:[rsi]
   140016ce1:	imul   r13,QWORD PTR fs:[rsi+0x65],0x5a00057
   140016cea:	push   rbp
   140016ceb:	outs   dx,BYTE PTR ds:[rsi]
   140016cec:	push   0x6c646e61
   140016cf1:	gs fs rex.RB js 0x140016d59
   140016cf6:	gs jo  0x140016d6d
   140016cf9:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140016d00:	gs jb  0x140016d03
   140016d03:	add    BYTE PTR [rcx],ch
   140016d05:	add    al,BYTE PTR [rdi+0x65]
   140016d08:	je     0x140016d4d
   140016d0a:	jne    0x140016d7e
   140016d0c:	jb     0x140016d73
   140016d0e:	outs   dx,BYTE PTR ds:[rsi]
   140016d0f:	je     0x140016d61
   140016d11:	jb     0x140016d82
   140016d13:	movsxd esp,DWORD PTR [rbp+0x73]
   140016d16:	jae    0x140016d18
   140016d18:	jle    0x140016d1f
   140016d1a:	push   rsp
   140016d1b:	gs jb  0x140016d8b
   140016d1e:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140016d25:	outs   dx,DWORD PTR ds:[rsi]
   140016d26:	movsxd esp,DWORD PTR [rbp+0x73]
   140016d29:	jae    0x140016d2b
   140016d2b:	add    BYTE PTR [rax+0x56734903],dl
   140016d31:	(bad)  
   140016d32:	ins    BYTE PTR es:[rdi],dx
   140016d33:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   140016d3b:	addr32 gs add ah,al
   140016d3f:	add    DWORD PTR [rdi+0x65],eax
   140016d42:	je     0x140016d85
   140016d44:	rex.XB push r8
   140016d46:	add    BYTE PTR [rax],al
   140016d48:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140016d49:	add    al,BYTE PTR [rdi+0x65]
   140016d4c:	je     0x140016d9d
   140016d4e:	rex.RB
   140016d4f:	rex.WRB
   140016d50:	rex.XB push r8
   140016d52:	add    BYTE PTR [rax],al
   140016d54:	rol    DWORD PTR [rcx],cl
   140016d56:	rex.RXB
   140016d57:	gs je  0x140016d9d
   140016d5a:	push   rax
   140016d5b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016d5d:	outs   dx,WORD PTR ds:[rsi]
   140016d5f:	add    BYTE PTR [rdi],dl
   140016d61:	add    al,0x4f
   140016d63:	jne    0x140016dd9
   140016d65:	jo     0x140016ddc
   140016d67:	je     0x140016dad
   140016d69:	gs (bad) 
   140016d6b:	jne    0x140016dd4
   140016d6d:	push   rbx
   140016d6e:	je     0x140016de2
   140016d70:	imul   ebp,DWORD PTR [rsi+0x67],0x44000041
   140016d77:	add    DWORD PTR [rbp+0x6e],eax
   140016d7a:	je     0x140016de1
   140016d7c:	jb     0x140016dc1
   140016d7e:	jb     0x140016de9
   140016d80:	je     0x140016deb
   140016d82:	movsxd esp,DWORD PTR [rcx+0x6c]
   140016d85:	push   rbx
   140016d86:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140016d8b:	outs   dx,BYTE PTR ds:[rsi]
   140016d8c:	add    BYTE PTR [rax],al
   140016d8e:	rol    BYTE PTR [rbx],0x4c
   140016d91:	gs (bad) 
   140016d93:	jbe    0x140016dfa
   140016d95:	rex.XB jb 0x140016e01
   140016d98:	je     0x140016e03
   140016d9a:	movsxd esp,DWORD PTR [rcx+0x6c]
   140016d9d:	push   rbx
   140016d9e:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140016da3:	outs   dx,BYTE PTR ds:[rsi]
   140016da4:	add    BYTE PTR [rax],al
   140016da6:	outs   dx,DWORD PTR ds:[rsi]
   140016da7:	add    ecx,DWORD PTR [rcx+0x6e]
   140016daa:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140016db2:	rex.XB jb 0x140016e1e
   140016db5:	je     0x140016e20
   140016db7:	movsxd esp,DWORD PTR [rcx+0x6c]
   140016dba:	push   rbx
   140016dbb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140016dc0:	outs   dx,BYTE PTR ds:[rsi]
   140016dc1:	rex.B outs dx,BYTE PTR ds:[rsi]
   140016dc3:	fs push rbx
   140016dc5:	jo     0x140016e30
   140016dc7:	outs   dx,BYTE PTR ds:[rsi]
   140016dc8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016dca:	jne    0x140016e3a
   140016dcc:	je     0x140016dce
   140016dce:	jmp    0x1b466b4d5
   140016dd3:	push   rbx
   140016dd4:	je     0x140016e48
   140016dd6:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   140016ddd:	push   rdi
   140016dde:	add    BYTE PTR [rax],al
   140016de0:	out    dx,eax
   140016de1:	add    ecx,DWORD PTR [rbp+0x75]
   140016de4:	ins    BYTE PTR es:[rdi],dx
   140016de5:	je     0x140016e50
   140016de7:	rex.X jns 0x140016e5e
   140016dea:	gs push rsp
   140016dec:	outs   dx,DWORD PTR ds:[rsi]
   140016ded:	push   rdi
   140016dee:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140016df6:	in     eax,dx
   140016df7:	add    eax,0x65646957
   140016dfc:	rex.XB push 0x6f547261
   140016e02:	rex.WRB jne 0x140016e71
   140016e05:	je     0x140016e70
   140016e07:	rex.X jns 0x140016e7e
   140016e0a:	add    BYTE PTR gs:[rbx+rax*1+0x614d434c],dh
   140016e12:	jo     0x140016e67
   140016e14:	je     0x140016e88
   140016e16:	imul   ebp,DWORD PTR [rsi+0x67],0xfc000057
   140016e1d:	add    DWORD PTR [rdi+0x65],eax
   140016e20:	je     0x140016e65
   140016e22:	outs   dx,DWORD PTR ds:[rsi]
   140016e23:	outs   dx,BYTE PTR ds:[rsi]
   140016e24:	jae    0x140016e95
   140016e26:	ins    BYTE PTR es:[rdi],dx
   140016e27:	gs rex.XB push r8
   140016e2a:	add    BYTE PTR [rax],al
   140016e2c:	(bad)  
   140016e2d:	add    al,BYTE PTR [rdi+0x65]
   140016e30:	je     0x140016e75
   140016e32:	outs   dx,DWORD PTR ds:[rsi]
   140016e33:	outs   dx,BYTE PTR ds:[rsi]
   140016e34:	jae    0x140016ea5
   140016e36:	ins    BYTE PTR es:[rdi],dx
   140016e37:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140016e3a:	fs add BYTE PTR gs:[rax],al
   140016e3e:	(bad)  
   140016e3f:	add    eax,0x46746553
   140016e44:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140016e4c:	gs jb  0x140016e4f
   140016e4f:	add    BYTE PTR [rdx+0x5],dl
   140016e52:	push   rbx
   140016e53:	gs je  0x140016eaa
   140016e56:	push   0x64616572
   140016e5b:	push   rbx
   140016e5c:	je     0x140016ebf
   140016e5e:	movsxd ebp,DWORD PTR [rbx+0x47]
   140016e61:	jne    0x140016ec4
   140016e63:	jb     0x140016ec6
   140016e65:	outs   dx,BYTE PTR ds:[rsi]
   140016e66:	je     0x140016ecd
   140016e68:	gs add ch,dh
   140016e6b:	add    al,BYTE PTR [rdi+0x65]
   140016e6e:	je     0x140016ec3
   140016e70:	jns    0x140016ee5
   140016e72:	je     0x140016ed9
   140016e74:	ins    DWORD PTR es:[rdi],dx
   140016e75:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140016e77:	outs   dx,WORD PTR ds:[rsi]
   140016e79:	add    BYTE PTR [rbx+0x72695605],bh
   140016e7f:	je     0x140016ef6
   140016e81:	(bad)  
   140016e82:	ins    BYTE PTR es:[rdi],dx
   140016e83:	rex.B ins BYTE PTR es:[rdi],dx
   140016e85:	ins    BYTE PTR es:[rdi],dx
   140016e86:	outs   dx,DWORD PTR ds:[rsi]
   140016e87:	movsxd eax,DWORD PTR [rax]
   140016e89:	add    cl,al
   140016e8b:	add    eax,0x74726956
   140016e90:	jne    0x140016ef3
   140016e92:	ins    BYTE PTR es:[rdi],dx
   140016e93:	push   rax
   140016e94:	jb     0x140016f05
   140016e96:	je     0x140016efd
   140016e98:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140016e9c:	ret    
   140016e9d:	add    eax,0x74726956
   140016ea2:	jne    0x140016f05
   140016ea4:	ins    BYTE PTR es:[rdi],dx
   140016ea5:	push   rcx
   140016ea6:	jne    0x140016f0d
   140016ea8:	jb     0x140016f23
   140016eaa:	add    BYTE PTR [rax],al
   140016eac:	cmp    eax,0x74655305
   140016eb1:	push   rbx
   140016eb2:	je     0x140016f18
   140016eb4:	rex.W (bad) 
   140016eb6:	outs   dx,BYTE PTR ds:[rsi]
   140016eb7:	fs ins BYTE PTR es:[rdi],dx
   140016eb9:	add    BYTE PTR gs:[rax],al
   140016ebc:	add    BYTE PTR [rsi],al
   140016ebe:	push   rdi
   140016ebf:	jb     0x140016f2a
   140016ec1:	je     0x140016f28
   140016ec3:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140016ec5:	outs   dx,BYTE PTR ds:[rsi]
   140016ec6:	jae    0x140016f37
   140016ec8:	ins    BYTE PTR es:[rdi],dx
   140016ec9:	gs push rdi
   140016ecb:	add    BYTE PTR [rbx+0x756c4601],dh
   140016ed1:	jae    0x140016f3b
   140016ed3:	imul   r13d,DWORD PTR [rbp+r12*2+0x42],0x65666675
   140016edc:	jb     0x140016f51
   140016ede:	add    BYTE PTR [rax],al
   140016ee0:	(bad)  
   140016ee1:	add    BYTE PTR [rbx+0x72],al
   140016ee4:	gs (bad) 
   140016ee6:	je     0x140016f4d
   140016ee8:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x43008e00
   140016ef1:	ins    BYTE PTR es:[rdi],dx
   140016ef2:	outs   dx,DWORD PTR ds:[rsi]
   140016ef3:	jae    0x140016f5a
   140016ef5:	rex.W (bad) 
   140016ef7:	outs   dx,BYTE PTR ds:[rsi]
   140016ef8:	fs ins BYTE PTR es:[rdi],dx
   140016efa:	add    BYTE PTR gs:[rdi+0x1],dh
   140016efe:	rex.RB js 0x140016f71
   140016f01:	(bad)  
   140016f02:	outs   dx,BYTE PTR ds:[rsi]
   140016f03:	rex.RB outs dx,BYTE PTR fs:[rsi]
   140016f06:	jbe    0x140016f71
   140016f08:	jb     0x140016f79
   140016f0a:	outs   dx,BYTE PTR ds:[rsi]
   140016f0b:	ins    DWORD PTR es:[rdi],dx
   140016f0c:	outs   dx,BYTE PTR gs:[rsi]
   140016f0e:	je     0x140016f63
   140016f10:	je     0x140016f84
   140016f12:	imul   ebp,DWORD PTR [rsi+0x67],0xf9005773
   140016f19:	add    al,BYTE PTR [rdi+0x65]
   140016f1c:	je     0x140016f71
   140016f1e:	jns    0x140016f93
   140016f20:	je     0x140016f87
   140016f22:	ins    DWORD PTR es:[rdi],dx
   140016f23:	push   rsp
   140016f24:	imul   ebp,DWORD PTR [rbp+0x65],0x53057b00
   140016f2b:	jns    0x140016fa0
   140016f2d:	je     0x140016f94
   140016f2f:	ins    DWORD PTR es:[rdi],dx
   140016f30:	push   rsp
   140016f31:	imul   ebp,DWORD PTR [rbp+0x65],0x7a546f54
   140016f38:	push   rbx
   140016f39:	jo     0x140016fa0
   140016f3b:	movsxd ebp,DWORD PTR [rcx+0x66]
   140016f3e:	imul   esp,DWORD PTR [rbx+0x4c],0x6c61636f
   140016f45:	push   rsp
   140016f46:	imul   ebp,DWORD PTR [rbp+0x65],0x50004e00
   140016f4d:	(bad)  
   140016f4e:	je     0x140016fb8
   140016f50:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x656c6946
   140016f58:	rex.WRX (bad) 
   140016f5a:	ins    DWORD PTR es:[rdi],dx
   140016f5b:	gs push rdi
   140016f5d:	add    BYTE PTR [rbx+0x48],dl
   140016f60:	rex.WR push rdi
   140016f62:	push   r8
   140016f64:	rex.WB
   140016f65:	cs fs ins BYTE PTR es:[rdi],dx
   140016f68:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .rsrc:

0000000140017000 <.rsrc>:
	...
   14001700c:	add    BYTE PTR [rax],al
   14001700e:	add    al,BYTE PTR [rax]
   140017010:	adc    BYTE PTR [rax],al
   140017012:	add    BYTE PTR [rax],al
   140017014:	and    BYTE PTR [rax],al
   140017016:	add    BYTE PTR [rax+0x18],al
   14001701c:	cmp    BYTE PTR [rax],al
   14001701e:	add    BYTE PTR [rax+0x0],al
	...
   14001702c:	add    BYTE PTR [rax],al
   14001702e:	add    DWORD PTR [rax],eax
   140017030:	add    DWORD PTR [rax],eax
   140017032:	add    BYTE PTR [rax],al
   140017034:	push   rax
   140017035:	add    BYTE PTR [rax],al
   140017037:	add    BYTE PTR [rax],0x0
	...
   140017046:	add    DWORD PTR [rax],eax
   140017048:	add    DWORD PTR [rax],eax
   14001704a:	add    BYTE PTR [rax],al
   14001704c:	push   0x800000
	...
   14001705d:	add    BYTE PTR [rcx],al
   14001705f:	add    BYTE PTR [rcx],cl
   140017061:	add    al,0x0
   140017063:	add    BYTE PTR [rax+0x0],al
	...
   140017075:	add    BYTE PTR [rcx],al
   140017077:	add    BYTE PTR [rcx],cl
   140017079:	add    al,0x0
   14001707b:	add    BYTE PTR [rax+0x68000000],dl
   140017081:	jae    0x140017084
   140017083:	add    BYTE PTR [rax+0x3],dl
   140017089:	add    BYTE PTR [rax],al
   14001708b:	add    BYTE PTR [rax],al
   14001708d:	add    BYTE PTR [rax],al
   14001708f:	add    BYTE PTR [rax-0x3cfffe90],ah
   140017095:	add    al,BYTE PTR [rax]
	...
   14001709f:	add    BYTE PTR [rdi+rdi*1],bh
   1400170a2:	js     0x140017111
   1400170a4:	ins    BYTE PTR es:[rdi],dx
   1400170a5:	and    BYTE PTR [rsi+0x65],dh
   1400170a8:	jb     0x14001711d
   1400170aa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400170b1:	xor    BYTE PTR [rdx],ah
   1400170b3:	and    BYTE PTR [rbp+0x6e],ah
   1400170b6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400170b9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400170c0:	rex.RX sub eax,0x73202238
   1400170c6:	je     0x140017129
   1400170c8:	outs   dx,BYTE PTR ds:[rsi]
   1400170c9:	fs (bad) 
   1400170cb:	ins    BYTE PTR es:[rdi],dx
   1400170cc:	outs   dx,DWORD PTR ds:[rsi]
   1400170cd:	outs   dx,BYTE PTR ds:[rsi]
   1400170ce:	gs cmp eax,0x73657922
   1400170d4:	and    bh,BYTE PTR [rdi]
   1400170d6:	ds or  eax,0x2d213c0a
   1400170dc:	sub    eax,0x706f4320
   1400170e1:	jns    0x140017155
   1400170e3:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   1400170ea:	sub    DWORD PTR [rax],esp
   1400170ec:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   1400170f4:	je     0x140017116
   1400170f6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400170f8:	jb     0x14001716a
   1400170fa:	outs   dx,DWORD PTR ds:[rsi]
   1400170fb:	jb     0x14001715e
   1400170fd:	je     0x140017168
   1400170ff:	outs   dx,DWORD PTR ds:[rsi]
   140017100:	outs   dx,BYTE PTR ds:[rsi]
   140017101:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0eaf34
   140017107:	cmp    al,0x61
   140017109:	jae    0x14001717e
   14001710b:	gs ins DWORD PTR es:[rdi],dx
   14001710d:	(bad)  
   14001710e:	ins    BYTE PTR es:[rdi],dx
   14001710f:	jns    0x140017131
   140017111:	js     0x140017180
   140017113:	ins    BYTE PTR es:[rdi],dx
   140017114:	outs   dx,BYTE PTR ds:[rsi]
   140017115:	jae    0x140017154
   140017117:	and    dh,BYTE PTR [rbp+0x72]
   14001711a:	outs   dx,BYTE PTR ds:[rsi]
   14001711b:	cmp    dh,BYTE PTR [rbx+0x63]
   14001711e:	push   0x73616d65
   140017123:	sub    eax,0x7263696d
   140017128:	outs   dx,DWORD PTR ds:[rsi]
   140017129:	jae    0x14001719a
   14001712b:	data16 je 0x14001715b
   14001712e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140017131:	cmp    ah,BYTE PTR [rcx+0x73]
   140017134:	ins    DWORD PTR es:[rdi],dx
   140017135:	cs jbe 0x140017169
   140017138:	and    ah,BYTE PTR [rax]
   14001713a:	ins    DWORD PTR es:[rdi],dx
   14001713b:	(bad)  
   14001713c:	outs   dx,BYTE PTR ds:[rsi]
   14001713d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140017144:	jb     0x1400171b9
   140017146:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14001714d:	xor    BYTE PTR [rdx],ah
   14001714f:	ds or  eax,0x73613c0a
   140017155:	jae    0x1400171bc
   140017157:	ins    DWORD PTR es:[rdi],dx
   140017158:	(bad)  
   140017159:	ins    BYTE PTR es:[rdi],dx
   14001715a:	jns    0x1400171a5
   14001715c:	fs outs dx,BYTE PTR gs:[rsi]
   14001715f:	je     0x1400171ca
   140017161:	je     0x1400171dc
   140017163:	or     eax,0x2020200a
   140017168:	and    BYTE PTR [rsi+0x65],dh
   14001716b:	jb     0x1400171e0
   14001716d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   140017174:	xor    DWORD PTR [rsi],ebp
   140017176:	xor    BYTE PTR [rsi],ch
   140017178:	xor    BYTE PTR [rdx],ah
   14001717a:	or     eax,0x2020200a
   14001717f:	and    BYTE PTR [rax+0x72],dh
   140017182:	outs   dx,DWORD PTR ds:[rsi]
   140017183:	movsxd esp,DWORD PTR [rbp+0x73]
   140017186:	jae    0x1400171f7
   140017188:	jb     0x1400171cb
   14001718a:	jb     0x1400171ef
   14001718c:	push   0x63657469
   140017191:	je     0x140017208
   140017193:	jb     0x1400171fa
   140017195:	cmp    eax,0x646d6122
   14001719a:	ss xor al,0x22
   14001719d:	or     eax,0x2020200a
   1400171a2:	and    BYTE PTR [rsi+0x61],ch
   1400171a5:	ins    DWORD PTR es:[rdi],dx
   1400171a6:	gs cmp eax,0x63694d22
   1400171ac:	jb     0x14001721d
   1400171ae:	jae    0x14001721f
   1400171b0:	data16 je 0x1400171e1
   1400171b3:	push   rdi
   1400171b4:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400171bb:	push   rbx
   1400171bc:	outs   dx,DWORD PTR ds:[rsi]
   1400171bd:	data16 je 0x140017237
   1400171c0:	(bad)  
   1400171c1:	jb     0x140017228
   1400171c3:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400171c5:	outs   dx,DWORD PTR ds:[esi]
   1400171c7:	cs rex.RX (bad) 
   1400171ca:	jae    0x140017240
   1400171cc:	push   rbp
   1400171cd:	jae    0x140017234
   1400171cf:	jb     0x140017224
   1400171d1:	ja     0x14001723c
   1400171d3:	je     0x140017238
   1400171d5:	push   0x2e676e69
   1400171da:	rex.B
   1400171db:	outs   dx,BYTE PTR gs:[esi]
   1400171de:	je     0x140017202
   1400171e0:	or     eax,0x2020200a
   1400171e5:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400171e9:	gs cmp eax,0x6e697722
   1400171ef:	xor    esi,DWORD PTR [rdx]
   1400171f1:	and    cl,BYTE PTR [rip+0xd3e2f0a]        # 0x14d3fa101
   1400171f7:	or     bh,BYTE PTR [rsp+riz*2]
   1400171fa:	gs jae 0x140017260
   1400171fd:	jb     0x140017268
   1400171ff:	jo     0x140017275
   140017201:	imul   ebp,DWORD PTR [rdi+0x6e],0x7361463e
   140017208:	je     0x14001722a
   14001720a:	push   rbp
   14001720b:	jae    0x140017272
   14001720d:	jb     0x14001722f
   14001720f:	push   rbx
   140017210:	ja     0x14001727b
   140017212:	je     0x140017277
   140017214:	push   0x20676e69
   140017219:	push   rbp
   14001721a:	je     0x140017285
   14001721c:	ins    BYTE PTR es:[rdi],dx
   14001721d:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x6b6f7242
   140017225:	gs jb  0x140017264
   140017228:	(bad)  
   140017229:	fs gs jae 0x140017290
   14001722d:	jb     0x140017298
   14001722f:	jo     0x1400172a5
   140017231:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   140017238:	je     0x1400172ac
   14001723a:	jne    0x1400172af
   14001723c:	je     0x140017287
   14001723e:	outs   dx,BYTE PTR ds:[rsi]
   14001723f:	outs   dx,WORD PTR ds:[rsi]
   140017241:	and    BYTE PTR [rax+0x6d],bh
   140017244:	ins    BYTE PTR es:[rdi],dx
   140017245:	outs   dx,BYTE PTR ds:[rsi]
   140017246:	jae    0x140017285
   140017248:	and    dh,BYTE PTR [rbp+0x72]
   14001724b:	outs   dx,BYTE PTR ds:[rsi]
   14001724c:	cmp    dh,BYTE PTR [rbx+0x63]
   14001724f:	push   0x73616d65
   140017254:	sub    eax,0x7263696d
   140017259:	outs   dx,DWORD PTR ds:[rsi]
   14001725a:	jae    0x1400172cb
   14001725c:	data16 je 0x14001728c
   14001725f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140017262:	cmp    ah,BYTE PTR [rcx+0x73]
   140017265:	ins    DWORD PTR es:[rdi],dx
   140017266:	cs jbe 0x14001729c
   140017269:	and    bh,BYTE PTR [rsi]
   14001726b:	or     eax,0x2020200a
   140017270:	and    BYTE PTR [rbx+rsi*2],bh
   140017273:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140017277:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   14001727f:	and    BYTE PTR [rax],ah
   140017281:	and    BYTE PTR [rax],ah
   140017283:	and    BYTE PTR [rax],ah
   140017285:	cmp    al,0x72
   140017287:	gs jno 0x1400172ff
   14001728a:	gs jae 0x140017301
   14001728d:	gs fs push rax
   140017290:	jb     0x1400172fb
   140017292:	jbe    0x1400172fd
   140017294:	ins    BYTE PTR es:[rdi],dx
   140017295:	gs addr32 gs jae 0x1400172d8
   14001729a:	or     eax,0x2020200a
   14001729f:	and    BYTE PTR [rax],ah
   1400172a1:	and    BYTE PTR [rax],ah
   1400172a3:	and    BYTE PTR [rax],ah
   1400172a5:	and    BYTE PTR [rax],ah
   1400172a7:	and    BYTE PTR [rdx+rsi*2],bh
   1400172aa:	gs jno 0x140017322
   1400172ad:	gs jae 0x140017324
   1400172b0:	gs fs rex.RB js 0x14001731a
   1400172b5:	movsxd esi,DWORD PTR [rbp+0x74]
   1400172b8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   1400172bf:	ins    BYTE PTR es:[rdi],dx
   1400172c0:	or     eax,0x2020200a
   1400172c5:	and    BYTE PTR [rax],ah
   1400172c7:	and    BYTE PTR [rax],ah
   1400172c9:	and    BYTE PTR [rax],ah
   1400172cb:	and    BYTE PTR [rax],ah
   1400172cd:	and    BYTE PTR [rax],ah
   1400172cf:	and    BYTE PTR [rax],ah
   1400172d1:	and    BYTE PTR [rbp+riz*2+0x76],ch
   1400172d5:	gs ins BYTE PTR es:[rdi],dx
   1400172d7:	cmp    eax,0x49736122
   1400172dc:	outs   dx,BYTE PTR ds:[rsi]
   1400172dd:	jbe    0x14001734e
   1400172df:	imul   esp,DWORD PTR [rbp+0x72],0x22
   1400172e3:	or     eax,0x2020200a
   1400172e8:	and    BYTE PTR [rax],ah
   1400172ea:	and    BYTE PTR [rax],ah
   1400172ec:	and    BYTE PTR [rax],ah
   1400172ee:	and    BYTE PTR [rax],ah
   1400172f0:	and    BYTE PTR [rax],ah
   1400172f2:	and    BYTE PTR [rax],ah
   1400172f4:	and    BYTE PTR [rbp+0x69],dh
   1400172f7:	movsxd esp,DWORD PTR [r11+0x65]
   1400172fb:	jae    0x140017370
   1400172fd:	cmp    eax,0x6c616622
   140017302:	jae    0x140017369
   140017304:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160219314
   14001730a:	and    BYTE PTR [rax],ah
   14001730c:	and    BYTE PTR [rax],ah
   14001730e:	and    BYTE PTR [rax],ah
   140017310:	and    BYTE PTR [rax],ah
   140017312:	and    BYTE PTR [rdi],ch
   140017314:	ds or  eax,0x2020200a
   14001731a:	and    BYTE PTR [rax],ah
   14001731c:	and    BYTE PTR [rax],ah
   14001731e:	and    BYTE PTR [rdi+rbp*1],bh
   140017321:	jb     0x140017388
   140017323:	jno    0x14001739a
   140017325:	gs jae 0x14001739c
   140017328:	gs fs push rax
   14001732b:	jb     0x140017396
   14001732d:	jbe    0x140017398
   14001732f:	ins    BYTE PTR es:[rdi],dx
   140017330:	gs addr32 gs jae 0x140017373
   140017335:	or     eax,0x2020200a
   14001733a:	and    BYTE PTR [rdi+rbp*1],bh
   14001733d:	jae    0x1400173a4
   14001733f:	movsxd esi,DWORD PTR [rbp+0x72]
   140017342:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   14001734a:	je     0x1400173be
   14001734c:	jne    0x1400173c1
   14001734e:	je     0x140017399
   140017350:	outs   dx,BYTE PTR ds:[rsi]
   140017351:	outs   dx,WORD PTR ds:[rsi]
   140017353:	ds or  eax,0x612f3c0a
   140017359:	jae    0x1400173ce
   14001735b:	gs ins DWORD PTR es:[rdi],dx
   14001735d:	(bad)  
   14001735e:	ins    BYTE PTR es:[rdi],dx
   14001735f:	jns    0x14001739f
   140017361:	or     eax,0xa
   140017366:	add    BYTE PTR [rax],al
   140017368:	nop
   140017369:	add    esi,DWORD PTR [rax+rax*1]
   14001736c:	add    BYTE PTR [rax],al
   14001736e:	push   rsi
   14001736f:	add    BYTE PTR [rbx+0x0],dl
   140017372:	pop    rdi
   140017373:	add    BYTE PTR [rsi+0x0],dl
   140017376:	add    BYTE PTR [r10+0x0],r10b
   14001737a:	push   rbx
   14001737b:	add    BYTE PTR [rcx+0x0],cl
   14001737e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140017382:	pop    rdi
   140017383:	add    BYTE PTR [rcx+0x0],cl
   140017386:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   14001738a:	rex.WRXB add BYTE PTR [r8],r8b
   14001738d:	add    BYTE PTR [rax],al
   14001738f:	add    BYTE PTR [rbp+0xfeef04],bh
   140017395:	add    BYTE PTR [rcx],al
   140017397:	add    BYTE PTR [rax],al
   140017399:	add    BYTE PTR [rdx],al
   14001739b:	add    BYTE PTR [rax],al
   14001739d:	rex
   14001739e:	lock and eax,DWORD PTR [rax]
   1400173a1:	add    BYTE PTR [rdx],al
   1400173a3:	add    BYTE PTR [rax],al
   1400173a5:	rex
   1400173a6:	lock and edi,DWORD PTR [rdi]
   1400173a9:	add    BYTE PTR [rax],al
   1400173ab:	add    BYTE PTR [rax],al
   1400173ad:	add    BYTE PTR [rax],al
   1400173af:	add    BYTE PTR [rax+rax*1],al
   1400173b2:	add    al,0x0
   1400173b4:	add    DWORD PTR [rax],eax
	...
   1400173c2:	add    BYTE PTR [rax],al
   1400173c4:	out    dx,al
   1400173c5:	add    al,BYTE PTR [rax]
   1400173c7:	add    BYTE PTR [rcx],al
   1400173c9:	add    BYTE PTR [rbx+0x0],dl
   1400173cc:	je     0x1400173ce
   1400173ce:	jb     0x1400173d0
   1400173d0:	imul   eax,DWORD PTR [rax],0x67006e
   1400173d6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400173da:	ins    BYTE PTR es:[rdi],dx
   1400173db:	add    BYTE PTR [rbp+0x0],ah
   1400173de:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400173e2:	data16 add BYTE PTR [rdi+0x0],ch
   1400173e6:	add    BYTE PTR [rax],al
   1400173e8:	retf   0x2
   1400173eb:	add    BYTE PTR [rcx],al
   1400173ed:	add    BYTE PTR [rax],dh
   1400173ef:	add    BYTE PTR [rax+rax*1],dh
   1400173f2:	xor    BYTE PTR [rax],al
   1400173f4:	cmp    DWORD PTR [rax],eax
   1400173f6:	xor    BYTE PTR [rax],al
   1400173f8:	xor    al,0x0
   1400173fa:	rex.X add BYTE PTR [rax],sil
   1400173fd:	add    BYTE PTR [rax],al
   1400173ff:	add    BYTE PTR [rax+rax*1+0x16],cl
   140017403:	add    BYTE PTR [rcx],al
   140017405:	add    BYTE PTR [rbx+0x0],al
   140017408:	outs   dx,DWORD PTR ds:[rsi]
   140017409:	add    BYTE PTR [rbp+0x0],ch
   14001740c:	jo     0x14001740e
   14001740e:	(bad)  
   14001740f:	add    BYTE PTR [rsi+0x0],ch
   140017412:	jns    0x140017414
   140017414:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140017418:	ins    DWORD PTR es:[rdi],dx
   140017419:	add    BYTE PTR [rbp+0x0],ah
   14001741c:	add    BYTE PTR [rax],al
   14001741e:	add    BYTE PTR [rax],al
   140017420:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140017424:	movsxd eax,DWORD PTR [rax]
   140017426:	jb     0x140017428
   140017428:	outs   dx,DWORD PTR ds:[rsi]
   140017429:	add    BYTE PTR [rbx+0x0],dh
   14001742c:	outs   dx,DWORD PTR ds:[rsi]
   14001742d:	add    BYTE PTR [rsi+0x0],ah
   140017430:	je     0x140017432
   140017432:	and    BYTE PTR [rax],al
   140017434:	rex.XB add BYTE PTR [r15+0x0],bpl
   140017438:	jb     0x14001743a
   14001743a:	jo     0x14001743c
   14001743c:	outs   dx,DWORD PTR ds:[rsi]
   14001743d:	add    BYTE PTR [rdx+0x0],dh
   140017440:	(bad)  
   140017441:	add    BYTE PTR [rax+rax*1+0x69],dh
   140017445:	add    BYTE PTR [rdi+0x0],ch
   140017448:	outs   dx,BYTE PTR ds:[rsi]
   140017449:	add    BYTE PTR [rax],al
   14001744b:	add    BYTE PTR [rdx+0x0],ch
   14001744e:	and    DWORD PTR [rax],eax
   140017450:	add    DWORD PTR [rax],eax
   140017452:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140017456:	ins    BYTE PTR es:[rdi],dx
   140017457:	add    BYTE PTR [rbp+0x0],ah
   14001745a:	add    BYTE PTR [rbp+0x0],r12b
   14001745e:	jae    0x140017460
   140017460:	movsxd eax,DWORD PTR [rax]
   140017462:	jb     0x140017464
   140017464:	imul   eax,DWORD PTR [rax],0x740070
   14001746a:	imul   eax,DWORD PTR [rax],0x6e006f
   140017470:	add    BYTE PTR [rax],al
   140017472:	add    BYTE PTR [rax],al
   140017474:	rex.RX add BYTE PTR [rcx+0x0],r12b
   140017478:	jae    0x14001747a
   14001747a:	je     0x14001747c
   14001747c:	and    BYTE PTR [rax],al
   14001747e:	push   rbp
   14001747f:	add    BYTE PTR [rbx+0x0],dh
   140017482:	add    BYTE PTR gs:[rdx+0x0],dh
   140017486:	and    BYTE PTR [rax],al
   140017488:	push   rbx
   140017489:	add    BYTE PTR [rdi+0x0],dh
   14001748c:	imul   eax,DWORD PTR [rax],0x630074
   140017492:	push   0x6e006900
   140017497:	add    BYTE PTR [rdi+0x0],ah
   14001749a:	and    BYTE PTR [rax],al
   14001749c:	sub    BYTE PTR [rax],al
   14001749e:	rex.RX add BYTE PTR [rbp+0x0],r10b
   1400174a2:	push   rbx
   1400174a3:	add    BYTE PTR [rcx],ch
   1400174a5:	add    BYTE PTR [rax],ah
   1400174a7:	add    BYTE PTR [rax+0x0],cl
   1400174aa:	add    BYTE PTR gs:[rax+rax*1+0x70],ch
   1400174af:	add    BYTE PTR [rbp+0x0],ah
   1400174b2:	jb     0x1400174b4
   1400174b4:	add    BYTE PTR [rax],al
   1400174b6:	add    BYTE PTR [rax],al
   1400174b8:	ins    BYTE PTR es:[rdi],dx
   1400174b9:	add    BYTE PTR [rsi],ah
   1400174bb:	add    BYTE PTR [rcx],al
   1400174bd:	add    BYTE PTR [rsi+0x0],al
   1400174c0:	imul   eax,DWORD PTR [rax],0x65006c
   1400174c6:	push   rsi
   1400174c7:	add    BYTE PTR [rbp+0x0],ah
   1400174ca:	jb     0x1400174cc
   1400174cc:	jae    0x1400174ce
   1400174ce:	imul   eax,DWORD PTR [rax],0x6e006f
   1400174d4:	add    BYTE PTR [rax],al
   1400174d6:	add    BYTE PTR [rax],al
   1400174d8:	xor    al,BYTE PTR [rax]
   1400174da:	add    BYTE PTR cs:[rax],dh
   1400174dd:	add    BYTE PTR [rsi],ch
   1400174df:	add    BYTE PTR [rcx],bh
   1400174e1:	add    BYTE PTR [rdx],dh
   1400174e3:	add    BYTE PTR [rax],dh
   1400174e5:	add    BYTE PTR [rax],dh
   1400174e7:	add    BYTE PTR [rsi],ch
   1400174e9:	add    BYTE PTR [rcx],dh
   1400174eb:	add    BYTE PTR [rsi],dh
   1400174ed:	add    BYTE PTR [rbx],dh
   1400174ef:	add    BYTE PTR [rax],bh
   1400174f1:	add    BYTE PTR [rax+rax*1],dh
   1400174f4:	and    BYTE PTR [rax],al
   1400174f6:	sub    BYTE PTR [rax],al
   1400174f8:	ja     0x1400174fa
   1400174fa:	imul   eax,DWORD PTR [rax],0x38006e
   140017500:	pop    rdi
   140017501:	add    BYTE PTR [rdx+0x0],dh
   140017504:	je     0x140017506
   140017506:	ins    DWORD PTR es:[rdi],dx
   140017507:	add    BYTE PTR [rsi],ch
   140017509:	add    BYTE PTR [rcx],dh
   14001750b:	add    BYTE PTR [rdx],dh
   14001750d:	add    BYTE PTR [rax],dh
   14001750f:	add    BYTE PTR [rdi],dh
   140017511:	add    BYTE PTR [rdx],dh
   140017513:	add    BYTE PTR [rip+0x31002d00],dh        # 0x17101a219
   140017519:	add    BYTE PTR [rdx],dh
   14001751b:	add    BYTE PTR [rax+rax*1],dh
   14001751e:	(bad)  
   14001751f:	add    BYTE PTR [rcx],ch
   140017521:	add    BYTE PTR [rax],al
   140017523:	add    BYTE PTR [rdx],dh
   140017525:	add    BYTE PTR [rcx],cl
   140017527:	add    BYTE PTR [rcx],al
   140017529:	add    BYTE PTR [rcx+0x0],cl
   14001752c:	outs   dx,BYTE PTR ds:[rsi]
   14001752d:	add    BYTE PTR [rax+rax*1+0x65],dh
   140017531:	add    BYTE PTR [rdx+0x0],dh
   140017534:	outs   dx,BYTE PTR ds:[rsi]
   140017535:	add    BYTE PTR [rcx+0x0],ah
   140017538:	ins    BYTE PTR es:[rdi],dx
   140017539:	add    BYTE PTR [rsi+0x0],cl
   14001753c:	(bad)  
   14001753d:	add    BYTE PTR [rbp+0x0],ch
   140017540:	add    BYTE PTR gs:[rax],al
   140017543:	add    BYTE PTR [rsi+0x0],ah
   140017546:	jne    0x140017548
   140017548:	jae    0x14001754a
   14001754a:	(bad)  
   14001754b:	add    BYTE PTR [rdi+0x0],ah
   14001754e:	add    BYTE PTR gs:[rsi+0x0],ch
   140017552:	je     0x140017554
   140017554:	add    BYTE PTR [rax],al
   140017556:	add    BYTE PTR [rax],al
   140017558:	add    BYTE PTR [rax],0x2e
   14001755b:	add    BYTE PTR [rcx],al
   14001755d:	add    BYTE PTR [rax+rax*1+0x65],cl
   140017561:	add    BYTE PTR [rdi+0x0],ah
   140017564:	(bad)  
   140017565:	add    BYTE PTR [rax+rax*1+0x43],ch
   140017569:	add    BYTE PTR [rdi+0x0],ch
   14001756c:	jo     0x14001756e
   14001756e:	jns    0x140017570
   140017570:	jb     0x140017572
   140017572:	imul   eax,DWORD PTR [rax],0x680067
   140017578:	je     0x14001757a
   14001757a:	add    BYTE PTR [rax],al
   14001757c:	test   eax,0x4d002000
   140017581:	add    BYTE PTR [rcx+0x0],ch
   140017584:	movsxd eax,DWORD PTR [rax]
   140017586:	jb     0x140017588
   140017588:	outs   dx,DWORD PTR ds:[rsi]
   140017589:	add    BYTE PTR [rbx+0x0],dh
   14001758c:	outs   dx,DWORD PTR ds:[rsi]
   14001758d:	add    BYTE PTR [rsi+0x0],ah
   140017590:	je     0x140017592
   140017592:	and    BYTE PTR [rax],al
   140017594:	rex.XB add BYTE PTR [r15+0x0],bpl
   140017598:	jb     0x14001759a
   14001759a:	jo     0x14001759c
   14001759c:	outs   dx,DWORD PTR ds:[rsi]
   14001759d:	add    BYTE PTR [rdx+0x0],dh
   1400175a0:	(bad)  
   1400175a1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400175a5:	add    BYTE PTR [rdi+0x0],ch
   1400175a8:	outs   dx,BYTE PTR ds:[rsi]
   1400175a9:	add    BYTE PTR [rsi],ch
   1400175ab:	add    BYTE PTR [rax],ah
   1400175ad:	add    BYTE PTR [rcx+0x0],al
   1400175b0:	ins    BYTE PTR es:[rdi],dx
   1400175b1:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400175b5:	add    BYTE PTR [rdx+0x0],dh
   1400175b8:	imul   eax,DWORD PTR [rax],0x680067
   1400175be:	je     0x1400175c0
   1400175c0:	jae    0x1400175c2
   1400175c2:	and    BYTE PTR [rax],al
   1400175c4:	jb     0x1400175c6
   1400175c6:	add    BYTE PTR gs:[rbx+0x0],dh
   1400175ca:	add    BYTE PTR gs:[rdx+0x0],dh
   1400175ce:	jbe    0x1400175d0
   1400175d0:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400175d5:	add    BYTE PTR [rax],al
   1400175d7:	add    BYTE PTR [rdx],bh
   1400175d9:	add    BYTE PTR [rcx],cl
   1400175db:	add    BYTE PTR [rcx],al
   1400175dd:	add    BYTE PTR [rdi+0x0],cl
   1400175e0:	jb     0x1400175e2
   1400175e2:	imul   eax,DWORD PTR [rax],0x690067
   1400175e8:	outs   dx,BYTE PTR ds:[rsi]
   1400175e9:	add    BYTE PTR [rcx+0x0],ah
   1400175ec:	ins    BYTE PTR es:[rdi],dx
   1400175ed:	add    BYTE PTR [rsi+0x0],al
   1400175f0:	imul   eax,DWORD PTR [rax],0x65006c
   1400175f6:	outs   dx,BYTE PTR ds:[rsi]
   1400175f7:	add    BYTE PTR [rcx+0x0],ah
   1400175fa:	ins    DWORD PTR es:[rdi],dx
   1400175fb:	add    BYTE PTR [rbp+0x0],ah
   1400175fe:	add    BYTE PTR [rax],al
   140017600:	data16 add BYTE PTR [rbp+0x0],dh
   140017604:	jae    0x140017606
   140017606:	(bad)  
   140017607:	add    BYTE PTR [rdi+0x0],ah
   14001760a:	add    BYTE PTR gs:[rsi+0x0],ch
   14001760e:	je     0x140017610
   140017610:	add    BYTE PTR [rax],al
   140017612:	add    BYTE PTR [rax],al
   140017614:	pop    rsp
   140017615:	add    BYTE PTR [rsi],bl
   140017617:	add    BYTE PTR [rcx],al
   140017619:	add    BYTE PTR [rax+0x0],dl
   14001761c:	jb     0x14001761e
   14001761e:	outs   dx,DWORD PTR ds:[rsi]
   14001761f:	add    BYTE PTR [rax+rax*1+0x75],ah
   140017623:	add    BYTE PTR [rbx+0x0],ah
   140017626:	je     0x140017628
   140017628:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14001762c:	ins    DWORD PTR es:[rdi],dx
   14001762d:	add    BYTE PTR [rbp+0x0],ah
   140017630:	add    BYTE PTR [rax],al
   140017632:	add    BYTE PTR [rax],al
   140017634:	push   rdi
   140017635:	add    BYTE PTR [rcx+0x0],ch
   140017638:	outs   dx,BYTE PTR ds:[rsi]
   140017639:	add    BYTE PTR [rax+rax*1+0x6f],ah
   14001763d:	add    BYTE PTR [rdi+0x0],dh
   140017640:	jae    0x140017642
   140017642:	and    BYTE PTR [rax],al
   140017644:	add    BYTE PTR [r8+0x0],sil
   140017648:	jo     0x14001764a
   14001764a:	and    BYTE PTR [rax],al
   14001764c:	rex.XB add BYTE PTR [r13+0x0],spl
   140017650:	jb     0x140017652
   140017652:	je     0x140017654
   140017654:	imul   eax,DWORD PTR [rax],0x690066
   14001765a:	movsxd eax,DWORD PTR [rax]
   14001765c:	(bad)  
   14001765d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140017661:	add    BYTE PTR [rdi+0x0],ch
   140017664:	outs   dx,BYTE PTR ds:[rsi]
   140017665:	add    BYTE PTR [rax],ah
   140017667:	add    BYTE PTR [rbx+0x0],cl
   14001766a:	imul   eax,DWORD PTR [rax],0x74
   140017670:	rex.X add BYTE PTR [rdi],cl
   140017673:	add    BYTE PTR [rcx],al
   140017675:	add    BYTE PTR [rax+0x0],dl
   140017678:	jb     0x14001767a
   14001767a:	outs   dx,DWORD PTR ds:[rsi]
   14001767b:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001767f:	add    BYTE PTR [rbx+0x0],ah
   140017682:	je     0x140017684
   140017684:	push   rsi
   140017685:	add    BYTE PTR [rbp+0x0],ah
   140017688:	jb     0x14001768a
   14001768a:	jae    0x14001768c
   14001768c:	imul   eax,DWORD PTR [rax],0x6e006f
   140017692:	add    BYTE PTR [rax],al
   140017694:	xor    al,BYTE PTR [rax]
   140017696:	add    BYTE PTR cs:[rax],dh
   140017699:	add    BYTE PTR [rsi],ch
   14001769b:	add    BYTE PTR [rcx],bh
   14001769d:	add    BYTE PTR [rdx],dh
   14001769f:	add    BYTE PTR [rax],dh
   1400176a1:	add    BYTE PTR [rax],dh
   1400176a3:	add    BYTE PTR [rsi],ch
   1400176a5:	add    BYTE PTR [rcx],dh
   1400176a7:	add    BYTE PTR [rsi],dh
   1400176a9:	add    BYTE PTR [rbx],dh
   1400176ab:	add    BYTE PTR [rax],bh
   1400176ad:	add    BYTE PTR [rax+rax*1],dh
   1400176b0:	add    BYTE PTR [rax],al
   1400176b2:	add    BYTE PTR [rax],al
   1400176b4:	add    BYTE PTR [rax],r8b
   1400176b7:	add    BYTE PTR [rcx],al
   1400176b9:	add    BYTE PTR [rsi+0x0],dl
   1400176bc:	(bad)  
   1400176bd:	add    BYTE PTR [rdx+0x0],dh
   1400176c0:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400176c4:	ins    BYTE PTR es:[rdi],dx
   1400176c5:	add    BYTE PTR [rbp+0x0],ah
   1400176c8:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400176cc:	data16 add BYTE PTR [rdi+0x0],ch
   1400176d0:	add    BYTE PTR [rax],al
   1400176d2:	add    BYTE PTR [rax],al
   1400176d4:	and    al,0x0
   1400176d6:	add    al,0x0
   1400176d8:	add    BYTE PTR [rax],al
   1400176da:	push   rsp
   1400176db:	add    BYTE PTR [rdx+0x0],dh
   1400176de:	(bad)  
   1400176df:	add    BYTE PTR [rsi+0x0],ch
   1400176e2:	jae    0x1400176e4
   1400176e4:	ins    BYTE PTR es:[rdi],dx
   1400176e5:	add    BYTE PTR [rcx+0x0],ah
   1400176e8:	je     0x1400176ea
   1400176ea:	imul   eax,DWORD PTR [rax],0x6e006f
   1400176f0:	add    BYTE PTR [rax],al
   1400176f2:	add    BYTE PTR [rax],al
   1400176f4:	or     DWORD PTR [rax+rsi*4],eax
   1400176f7:	.byte 0x4

Disassembly of section .reloc:

0000000140018000 <.reloc>:
   140018000:	add    BYTE PTR [rax],dl
   140018002:	add    BYTE PTR [rax],al
   140018004:	add    BYTE PTR [rax],r8b
   140018007:	add    BYTE PTR [rax],bl
   140018009:	movabs al,ds:0xa048a040a028a020
   140018012:	push   0xffffffff88a178a1
   140018017:	movabs eax,ds:0xa1c8a1b8a1a8a198
   140018020:	fsub   DWORD PTR [rcx-0x5e075e18]
   140018026:	or     BYTE PTR [rdx-0x5dd75de8],ah
   14001802c:	cmp    BYTE PTR [rdx-0x5da75db8],ah
   140018032:	push   0xffffffff88a278a2
   140018037:	movabs ds:0xa2c8a2b8a2a8a298,al
   140018040:	shr    BYTE PTR [rax+0x3000a8c8],0x0
   140018047:	add    BYTE PTR [rax+rax*1],cl
   14001804a:	add    BYTE PTR [rax],al
   14001804c:	sbb    BYTE PTR [rsi+0x10000000],ch
   140018052:	add    DWORD PTR [rax],eax
   140018054:	cmp    BYTE PTR [rax],al
   140018056:	add    BYTE PTR [rax],al
   140018058:	sub    BYTE PTR [rcx-0x5c675e80],ah
   14001805e:	rex.W test al,0xb8
   140018061:	test   al,0xd8
   140018063:	test   al,0xf8
   140018065:	test   al,0x18
   140018067:	test   eax,0xa978a938
   14001806c:	nop
   14001806d:	test   eax,0xa9a0a998
   140018072:	test   al,0xa9
   140018074:	mov    al,0xa9
   140018076:	mov    eax,0xd0a9c8a9
   14001807b:	test   eax,0xa9f0a9e0
   140018080:	loopne 0x140018031
   140018082:	call   0x138b17136
   140018087:	scas   eax,DWORD PTR es:[rdi]
   140018088:	add    BYTE PTR [rax],ah
   14001808a:	add    DWORD PTR [rax],eax
   14001808c:	lock add BYTE PTR [rax],al
   14001808f:	add    BYTE PTR [rax],al
   140018091:	movabs al,ds:0xa020a018a010a008
   14001809a:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   1400180a0:	push   rax
   1400180a1:	movabs al,ds:0xa078a070a068a060
   1400180aa:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   1400180b1:	movabs al,ds:0xa0c0a0b8a0a8a0a0
   1400180ba:	enter  0xd0a0,0xa0
   1400180be:	fsub   DWORD PTR [rax-0x5f175f20]
   1400180c4:	lock movabs al,ds:0xa118a110a108a100
   1400180ce:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   1400180d4:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   1400180da:	push   rax
   1400180db:	movabs eax,ds:0xa170a168a160a158
   1400180e4:	js     0x140018087
   1400180e6:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   1400180ed:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   1400180f6:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   1400180fd:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   140018106:	add    BYTE PTR [rdx-0x5def5df8],ah
   14001810c:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140018112:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   140018118:	rex.W movabs ds:0xa278a270a268a250,al
   140018122:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   140018129:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   140018132:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   140018139:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   140018142:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   140018148:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   14001814e:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   140018154:	movabs ds:0xa368a360a358a350,rax
   14001815e:	jo     0x140018103
   140018160:	js     0x140018105
   140018162:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   140018169:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   140018172:	shl    BYTE PTR [rbx-0x5b675b70],0x0
	...
