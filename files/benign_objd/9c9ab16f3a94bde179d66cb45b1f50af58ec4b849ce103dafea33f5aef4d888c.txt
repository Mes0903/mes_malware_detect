
9c9ab16f3a94bde179d66cb45b1f50af58ec4b849ce103dafea33f5aef4d888c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x49d5]        # 0x4059f0
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x49d6]        # 0x405a00
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x49d9]        # 0x405a10
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x499c]        # 0x4059e0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x484f]        # 0x4058a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4971]        # 0x4059d0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x403368
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x402320
  401081:	mov    rdx,QWORD PTR [rip+0x48a8]        # 0x405930
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x488e]        # 0x405920
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x48f4]        # 0x405990
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x482b]        # 0x4058d0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401f00
  4010af:	mov    rax,QWORD PTR [rip+0x479a]        # 0x405850
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x403368
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x10d9]        # 0x402200
  401127:	call   0x4021f0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4855]        # 0x4059c0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x47e5]        # 0x405980
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x403380
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x480a]        # 0x4059d0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x470b]        # 0x405900
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x8296]        # 0x409498
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x46e7]        # 0x405910
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x462c]        # 0x405890
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x402510
  40127d:	lea    rcx,[rip+0x182c]        # 0x402ab0
  401284:	call   QWORD PTR [rip+0x8206]        # 0x409490
  40128a:	mov    rdx,QWORD PTR [rip+0x465f]        # 0x4058f0
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4029c0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4033b0
  4012a5:	call   0x402300
  4012aa:	mov    rax,QWORD PTR [rip+0x45ef]        # 0x4058a0
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4601]        # 0x4058c0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4032f8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x4032d8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4032f8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4032f0
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x401ed0
  4013bb:	mov    rax,QWORD PTR [rip+0x44ee]        # 0x4058b0
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x403480
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x403350
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x44d9]        # 0x405910
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x403358
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x44ed]        # 0x405950
  401463:	mov    rcx,QWORD PTR [rip+0x44d6]        # 0x405940
  40146a:	call   0x403348
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7fa7]        # 0x409440
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x44c9]        # 0x405970
  4014a7:	mov    rcx,QWORD PTR [rip+0x44b2]        # 0x405960
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x403348
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x403318
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x44f5]        # 0x4059d0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401f10
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x44c5]        # 0x4059d0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401f10
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x38
  401536:	xor    r9d,r9d
  401539:	xor    ebx,ebx
  40153b:	lea    rdx,[rsp+0x20]
  401540:	lea    r8,[rsp+0x28]
  401545:	call   0x401d00
  40154a:	test   eax,eax
  40154c:	je     0x401575
  40154e:	mov    rdx,QWORD PTR [rsp+0x28]
  401553:	mov    rcx,QWORD PTR [rsp+0x20]
  401558:	call   0x401d18
  40155d:	xor    edx,edx
  40155f:	mov    rsi,rax
  401562:	mov    rcx,rax
  401565:	call   0x401c88
  40156a:	mov    rcx,rsi
  40156d:	mov    rbx,rax
  401570:	call   0x401d10
  401575:	mov    rax,rbx
  401578:	add    rsp,0x38
  40157c:	pop    rbx
  40157d:	pop    rsi
  40157e:	ret    
  40157f:	nop
  401580:	push   r14
  401582:	push   r13
  401584:	push   r12
  401586:	push   rbp
  401587:	push   rdi
  401588:	push   rsi
  401589:	push   rbx
  40158a:	sub    rsp,0x40
  40158e:	mov    rbp,rdx
  401591:	mov    r14d,ecx
  401594:	xor    ecx,ecx
  401596:	call   0x401cb0
  40159b:	test   rbp,rbp
  40159e:	mov    rbx,rax
  4015a1:	je     0x4017c3
  4015a7:	lea    rdi,[rip+0x3a53]        # 0x405001
  4015ae:	mov    ecx,0x5
  4015b3:	mov    rsi,rbp
  4015b6:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4015b8:	je     0x40181d
  4015be:	lea    rdx,[rip+0x3a56]        # 0x40501b
  4015c5:	mov    rcx,rbp
  4015c8:	call   0x4032e0
  4015cd:	test   eax,eax
  4015cf:	je     0x4018b6
  4015d5:	lea    rdx,[rip+0x3a83]        # 0x40505f
  4015dc:	mov    rcx,rbp
  4015df:	call   0x4032e0
  4015e4:	test   eax,eax
  4015e6:	je     0x401915
  4015ec:	lea    rdx,[rip+0x3b0f]        # 0x405102
  4015f3:	mov    rcx,rbp
  4015f6:	call   0x4032e0
  4015fb:	test   eax,eax
  4015fd:	je     0x401930
  401603:	lea    rdx,[rip+0x3bbc]        # 0x4051c6
  40160a:	mov    rcx,rbp
  40160d:	call   0x4032e0
  401612:	test   eax,eax
  401614:	jne    0x4017a6
  40161a:	lea    rcx,[rip+0x3baf]        # 0x4051d0
  401621:	call   0x401d40
  401626:	lea    rcx,[rip+0x3bc5]        # 0x4051f2
  40162d:	mov    rdi,rax
  401630:	call   0x401d40
  401635:	lea    rcx,[rip+0x3aaf]        # 0x4050eb
  40163c:	mov    r12,rax
  40163f:	lea    rsi,[rip+0x39ba]        # 0x405000
  401646:	call   0x401d40
  40164b:	lea    rcx,[rip+0x3aa1]        # 0x4050f3
  401652:	mov    rdx,rax
  401655:	call   0x401cd8
  40165a:	cmp    BYTE PTR [r12],0x0
  40165f:	mov    r13,rax
  401662:	cmovne rsi,r12
  401666:	test   rax,rax
  401669:	je     0x40184b
  40166f:	lea    rcx,[rip+0x3e52]        # 0x4054c8
  401676:	call   0x401d40
  40167b:	lea    r9,[rip+0x3e69]        # 0x4054eb
  401682:	mov    r8,r13
  401685:	mov    rdx,rax
  401688:	mov    rcx,rbx
  40168b:	mov    QWORD PTR [rsp+0x30],rdi
  401690:	mov    QWORD PTR [rsp+0x28],rsi
  401695:	mov    QWORD PTR [rsp+0x20],rbp
  40169a:	call   0x401cc0
  40169f:	lea    rcx,[rip+0x3e47]        # 0x4054ed
  4016a6:	call   0x401d40
  4016ab:	mov    rcx,rbx
  4016ae:	mov    rdx,rax
  4016b1:	call   0x401cc8
  4016b6:	lea    rcx,[rip+0x3e43]        # 0x405500
  4016bd:	call   0x401d40
  4016c2:	mov    rcx,rbx
  4016c5:	mov    rdx,rax
  4016c8:	call   0x401cc8
  4016cd:	lea    rcx,[rip+0x393d]        # 0x405011
  4016d4:	call   0x401d40
  4016d9:	mov    rcx,r12
  4016dc:	mov    rdx,rax
  4016df:	call   0x4032c8
  4016e4:	test   rax,rax
  4016e7:	je     0x401700
  4016e9:	lea    rcx,[rip+0x3b28]        # 0x405218
  4016f0:	call   0x401d40
  4016f5:	mov    rcx,rbx
  4016f8:	mov    rdx,rax
  4016fb:	call   0x401cc8
  401700:	lea    rcx,[rip+0x3953]        # 0x40505a
  401707:	call   0x401d40
  40170c:	mov    rcx,r12
  40170f:	mov    rdx,rax
  401712:	call   0x4032c8
  401717:	test   rax,rax
  40171a:	je     0x40174a
  40171c:	lea    rdi,[rip+0x38f8]        # 0x40501b
  401723:	mov    ecx,0x9
  401728:	mov    rsi,rbp
  40172b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40172d:	jne    0x40189a
  401733:	lea    rcx,[rip+0x3b0e]        # 0x405248
  40173a:	call   0x401d40
  40173f:	mov    rcx,rbx
  401742:	mov    rdx,rax
  401745:	call   0x401cc8
  40174a:	lea    rcx,[rip+0x3b8f]        # 0x4052e0
  401751:	call   0x401d40
  401756:	mov    rcx,r12
  401759:	mov    rdx,rax
  40175c:	call   0x4032c8
  401761:	test   rax,rax
  401764:	je     0x4018d9
  40176a:	lea    rcx,[rip+0x3b77]        # 0x4052e8
  401771:	call   0x401d40
  401776:	mov    rcx,rbx
  401779:	mov    rdx,rax
  40177c:	call   0x401cc8
  401781:	lea    rdx,[rip+0x3bbc]        # 0x405344
  401788:	mov    rcx,rbx
  40178b:	call   0x401cc8
  401790:	test   r14d,r14d
  401793:	mov    rdx,QWORD PTR [rbx]
  401796:	je     0x4017e5
  401798:	lea    rcx,[rip+0x3ba7]        # 0x405346
  40179f:	call   0x401cf0
  4017a4:	jmp    0x4017f1
  4017a6:	lea    rcx,[rip+0x3a4f]        # 0x4051fc
  4017ad:	xor    r14d,r14d
  4017b0:	call   0x401d40
  4017b5:	mov    r8,rbp
  4017b8:	mov    rdx,rax
  4017bb:	mov    rcx,rbx
  4017be:	call   0x401ca8
  4017c3:	lea    rcx,[rip+0x3b86]        # 0x405350
  4017ca:	xor    r13d,r13d
  4017cd:	call   0x401d40
  4017d2:	mov    rcx,rbx
  4017d5:	mov    rdx,rax
  4017d8:	call   0x401cc8
  4017dd:	test   r14d,r14d
  4017e0:	mov    rdx,QWORD PTR [rbx]
  4017e3:	jne    0x401798
  4017e5:	lea    rcx,[rip+0x3b5d]        # 0x405349
  4017ec:	call   0x401ce8
  4017f1:	mov    rcx,r13
  4017f4:	call   0x401cf8
  4017f9:	mov    edx,0x1
  4017fe:	mov    rcx,rbx
  401801:	call   0x401cb8
  401806:	xor    eax,eax
  401808:	test   r14d,r14d
  40180b:	sete   al
  40180e:	add    rsp,0x40
  401812:	pop    rbx
  401813:	pop    rsi
  401814:	pop    rdi
  401815:	pop    rbp
  401816:	pop    r12
  401818:	pop    r13
  40181a:	pop    r14
  40181c:	ret    
  40181d:	lea    rcx,[rip+0x37e2]        # 0x405006
  401824:	call   0x401d40
  401829:	lea    rcx,[rip+0x37e1]        # 0x405011
  401830:	mov    rdi,rax
  401833:	call   0x401d40
  401838:	mov    r12,rax
  40183b:	cmp    BYTE PTR [r12],0x0
  401840:	lea    rsi,[rip+0x37b9]        # 0x405000
  401847:	cmovne rsi,r12
  40184b:	lea    rcx,[rip+0x3c76]        # 0x4054c8
  401852:	xor    r13d,r13d
  401855:	call   0x401d40
  40185a:	lea    r9,[rip+0x379f]        # 0x405000
  401861:	mov    rdx,rax
  401864:	mov    rcx,rbx
  401867:	mov    QWORD PTR [rsp+0x30],rdi
  40186c:	mov    QWORD PTR [rsp+0x28],rsi
  401871:	mov    r8,r9
  401874:	mov    QWORD PTR [rsp+0x20],rbp
  401879:	call   0x401cc0
  40187e:	lea    rcx,[rip+0x3c68]        # 0x4054ed
  401885:	call   0x401d40
  40188a:	mov    rcx,rbx
  40188d:	mov    rdx,rax
  401890:	call   0x401cc8
  401895:	jmp    0x4016cd
  40189a:	lea    rcx,[rip+0x39df]        # 0x405280
  4018a1:	call   0x401d40
  4018a6:	mov    rcx,rbx
  4018a9:	mov    rdx,rax
  4018ac:	call   0x401cc8
  4018b1:	jmp    0x40174a
  4018b6:	lea    rcx,[rip+0x376b]        # 0x405028
  4018bd:	call   0x401d40
  4018c2:	lea    rcx,[rip+0x3791]        # 0x40505a
  4018c9:	mov    rdi,rax
  4018cc:	call   0x401d40
  4018d1:	mov    r12,rax
  4018d4:	jmp    0x40183b
  4018d9:	lea    rcx,[rip+0x3a42]        # 0x405322
  4018e0:	call   0x401d40
  4018e5:	mov    rcx,r12
  4018e8:	mov    rdx,rax
  4018eb:	call   0x4032c8
  4018f0:	test   rax,rax
  4018f3:	je     0x401781
  4018f9:	lea    rcx,[rip+0x3a27]        # 0x405327
  401900:	call   0x401d40
  401905:	mov    rcx,rbx
  401908:	mov    rdx,rax
  40190b:	call   0x401cc8
  401910:	jmp    0x401781
  401915:	lea    rcx,[rip+0x374c]        # 0x405068
  40191c:	call   0x401d40
  401921:	lea    rcx,[rip+0x37b7]        # 0x4050df
  401928:	mov    rdi,rax
  40192b:	jmp    0x401630
  401930:	lea    rcx,[rip+0x37d9]        # 0x405110
  401937:	call   0x401d40
  40193c:	lea    rcx,[rip+0x379c]        # 0x4050df
  401943:	mov    rdi,rax
  401946:	jmp    0x401630
  40194b:	nop    DWORD PTR [rax+rax*1+0x0]
  401950:	push   rbx
  401951:	sub    rsp,0x20
  401955:	mov    rbx,rcx
  401958:	call   0x401530
  40195d:	test   rax,rax
  401960:	je     0x401970
  401962:	mov    rcx,rax
  401965:	add    rsp,0x20
  401969:	pop    rbx
  40196a:	jmp    0x401c80
  40196f:	nop
  401970:	lea    rcx,[rip+0x3bb5]        # 0x40552c
  401977:	mov    rdx,rbx
  40197a:	call   0x401ce8
  40197f:	lea    rcx,[rip+0x3bca]        # 0x405550
  401986:	add    rsp,0x20
  40198a:	pop    rbx
  40198b:	jmp    0x401ce8
  401990:	push   rdi
  401991:	push   rsi
  401992:	push   rbx
  401993:	sub    rsp,0x30
  401997:	mov    rsi,rcx
  40199a:	mov    rdi,r8
  40199d:	call   0x401530
  4019a2:	test   rax,rax
  4019a5:	mov    rbx,rax
  4019a8:	je     0x401a10
  4019aa:	xor    r9d,r9d
  4019ad:	xor    r8d,r8d
  4019b0:	mov    rdx,rdi
  4019b3:	mov    rcx,rax
  4019b6:	call   0x401c90
  4019bb:	test   rax,rax
  4019be:	mov    rsi,rax
  4019c1:	je     0x4019fe
  4019c3:	lea    rdx,[rsp+0x28]
  4019c8:	mov    rcx,rax
  4019cb:	call   0x401d20
  4019d0:	mov    rdi,rax
  4019d3:	call   QWORD PTR [rip+0x7b17]        # 0x4094f0
  4019d9:	mov    r8,QWORD PTR [rsp+0x28]
  4019de:	lea    r9,[rax+0x30]
  4019e2:	mov    edx,0x1
  4019e7:	mov    rcx,rdi
  4019ea:	call   0x403300
  4019ef:	cmp    rax,QWORD PTR [rsp+0x28]
  4019f4:	jb     0x401a34
  4019f6:	mov    rcx,rsi
  4019f9:	call   0x401d10
  4019fe:	mov    rcx,rbx
  401a01:	call   0x401c80
  401a06:	nop
  401a07:	add    rsp,0x30
  401a0b:	pop    rbx
  401a0c:	pop    rsi
  401a0d:	pop    rdi
  401a0e:	ret    
  401a0f:	nop
  401a10:	lea    rcx,[rip+0x3b15]        # 0x40552c
  401a17:	mov    rdx,rsi
  401a1a:	call   0x401ce8
  401a1f:	lea    rcx,[rip+0x3b2a]        # 0x405550
  401a26:	call   0x401ce8
  401a2b:	nop
  401a2c:	add    rsp,0x30
  401a30:	pop    rbx
  401a31:	pop    rsi
  401a32:	pop    rdi
  401a33:	ret    
  401a34:	lea    rcx,[rip+0x3b3d]        # 0x405578
  401a3b:	call   0x401ce8
  401a40:	jmp    0x4019f6
  401a42:	nop    DWORD PTR [rax+0x0]
  401a46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a50:	push   r15
  401a52:	push   r14
  401a54:	push   r13
  401a56:	push   r12
  401a58:	push   rbp
  401a59:	push   rdi
  401a5a:	push   rsi
  401a5b:	push   rbx
  401a5c:	sub    rsp,0x68
  401a60:	mov    r13d,r9d
  401a63:	lea    r9,[rsp+0x58]
  401a68:	mov    rdi,r8
  401a6b:	xor    r8d,r8d
  401a6e:	mov    r12,rcx
  401a71:	mov    rbp,rdx
  401a74:	mov    QWORD PTR [rsp+0x58],0x0
  401a7d:	call   0x401ca0
  401a82:	mov    QWORD PTR [rsp+0x38],rax
  401a87:	mov    rax,QWORD PTR [rsp+0x58]
  401a8c:	test   rax,rax
  401a8f:	je     0x401ac0
  401a91:	mov    rdx,QWORD PTR [rax+0x8]
  401a95:	lea    rcx,[rip+0x38ad]        # 0x405349
  401a9c:	call   0x401ce8
  401aa1:	mov    rcx,QWORD PTR [rsp+0x58]
  401aa6:	call   0x401d08
  401aab:	nop
  401aac:	add    rsp,0x68
  401ab0:	pop    rbx
  401ab1:	pop    rsi
  401ab2:	pop    rdi
  401ab3:	pop    rbp
  401ab4:	pop    r12
  401ab6:	pop    r13
  401ab8:	pop    r14
  401aba:	pop    r15
  401abc:	ret    
  401abd:	nop    DWORD PTR [rax]
  401ac0:	mov    rax,QWORD PTR [rsp+0x38]
  401ac5:	mov    rdx,QWORD PTR [rax]
  401ac8:	lea    rsi,[rax+0x8]
  401acc:	test   rdx,rdx
  401acf:	je     0x401be4
  401ad5:	lea    rax,[rsp+0x50]
  401ada:	lea    r14,[rsp+0x4c]
  401adf:	mov    QWORD PTR [rsp+0x30],rax
  401ae4:	jmp    0x401b4e
  401ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401af0:	test   r13d,r13d
  401af3:	je     0x401bd0
  401af9:	test   BYTE PTR [rsp+0x4c],0x1
  401afe:	lea    rcx,[rip+0x3a83]        # 0x405588
  401b05:	lea    rax,[rip+0x3a7e]        # 0x40558a
  401b0c:	lea    r8,[rip+0x34ed]        # 0x405000
  401b13:	mov    r9,QWORD PTR [rsp+0x50]
  401b18:	mov    QWORD PTR [rsp+0x28],rbx
  401b1d:	mov    rdx,r8
  401b20:	cmovne rax,rcx
  401b24:	lea    rcx,[rip+0x3a61]        # 0x40558c
  401b2b:	mov    QWORD PTR [rsp+0x20],rax
  401b30:	call   0x401cf0
  401b35:	add    rsi,0x8
  401b39:	mov    rcx,rbx
  401b3c:	call   0x401cf8
  401b41:	mov    rdx,QWORD PTR [rsi-0x8]
  401b45:	test   rdx,rdx
  401b48:	je     0x401be4
  401b4e:	xor    r8d,r8d
  401b51:	mov    rcx,rbp
  401b54:	call   0x401ce0
  401b59:	mov    rcx,rax
  401b5c:	mov    rbx,rax
  401b5f:	call   0x4032d8
  401b64:	mov    rcx,rdi
  401b67:	mov    r15,rax
  401b6a:	call   0x4032d8
  401b6f:	mov    r8d,r15d
  401b72:	cmp    r15,rax
  401b75:	mov    rdx,rdi
  401b78:	cmovae r8d,eax
  401b7c:	mov    rcx,rbx
  401b7f:	movsxd r8,r8d
  401b82:	call   0x4032d0
  401b87:	test   eax,eax
  401b89:	jne    0x401b35
  401b8b:	mov    r9,QWORD PTR [rsp+0x30]
  401b90:	xor    r8d,r8d
  401b93:	mov    QWORD PTR [rsp+0x28],0x0
  401b9c:	mov    QWORD PTR [rsp+0x20],r14
  401ba1:	mov    rdx,rbx
  401ba4:	mov    rcx,r12
  401ba7:	call   0x401c98
  401bac:	test   eax,eax
  401bae:	jne    0x401af0
  401bb4:	mov    r9d,r13d
  401bb7:	mov    r8,rdi
  401bba:	mov    rdx,rbx
  401bbd:	mov    rcx,r12
  401bc0:	call   0x401a50
  401bc5:	jmp    0x401b35
  401bca:	nop    WORD PTR [rax+rax*1+0x0]
  401bd0:	lea    rcx,[rip+0x3772]        # 0x405349
  401bd7:	mov    rdx,rbx
  401bda:	call   0x401cf0
  401bdf:	jmp    0x401b35
  401be4:	mov    rcx,QWORD PTR [rsp+0x38]
  401be9:	call   0x401cd0
  401bee:	jmp    0x401aac
  401bf3:	nop    DWORD PTR [rax]
  401bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c00:	push   rbp
  401c01:	push   rdi
  401c02:	push   rsi
  401c03:	push   rbx
  401c04:	sub    rsp,0x28
  401c08:	mov    rdi,rcx
  401c0b:	mov    rsi,r8
  401c0e:	mov    ebp,r9d
  401c11:	call   0x401530
  401c16:	test   rax,rax
  401c19:	mov    rbx,rax
  401c1c:	je     0x401c50
  401c1e:	lea    r8,[rip+0x33db]        # 0x405000
  401c25:	test   rsi,rsi
  401c28:	lea    rdx,[rip+0x396f]        # 0x40559e
  401c2f:	mov    rcx,rax
  401c32:	mov    r9d,ebp
  401c35:	cmovne r8,rsi
  401c39:	call   0x401a50
  401c3e:	mov    rcx,rbx
  401c41:	add    rsp,0x28
  401c45:	pop    rbx
  401c46:	pop    rsi
  401c47:	pop    rdi
  401c48:	pop    rbp
  401c49:	jmp    0x401c80
  401c4e:	xchg   ax,ax
  401c50:	lea    rcx,[rip+0x38d5]        # 0x40552c
  401c57:	mov    rdx,rdi
  401c5a:	call   0x401ce8
  401c5f:	lea    rcx,[rip+0x38ea]        # 0x405550
  401c66:	add    rsp,0x28
  401c6a:	pop    rbx
  401c6b:	pop    rsi
  401c6c:	pop    rdi
  401c6d:	pop    rbp
  401c6e:	jmp    0x401ce8
  401c73:	nop
  401c74:	nop
  401c75:	nop
  401c76:	nop
  401c77:	nop
  401c78:	nop
  401c79:	nop
  401c7a:	nop
  401c7b:	nop
  401c7c:	nop
  401c7d:	nop
  401c7e:	nop
  401c7f:	nop
  401c80:	jmp    QWORD PTR [rip+0x76ba]        # 0x409340
  401c86:	nop
  401c87:	nop
  401c88:	jmp    QWORD PTR [rip+0x76aa]        # 0x409338
  401c8e:	nop
  401c8f:	nop
  401c90:	jmp    QWORD PTR [rip+0x769a]        # 0x409330
  401c96:	nop
  401c97:	nop
  401c98:	jmp    QWORD PTR [rip+0x768a]        # 0x409328
  401c9e:	nop
  401c9f:	nop
  401ca0:	jmp    QWORD PTR [rip+0x767a]        # 0x409320
  401ca6:	nop
  401ca7:	nop
  401ca8:	jmp    QWORD PTR [rip+0x7722]        # 0x4093d0
  401cae:	nop
  401caf:	nop
  401cb0:	jmp    QWORD PTR [rip+0x7712]        # 0x4093c8
  401cb6:	nop
  401cb7:	nop
  401cb8:	jmp    QWORD PTR [rip+0x7702]        # 0x4093c0
  401cbe:	nop
  401cbf:	nop
  401cc0:	jmp    QWORD PTR [rip+0x76f2]        # 0x4093b8
  401cc6:	nop
  401cc7:	nop
  401cc8:	jmp    QWORD PTR [rip+0x76e2]        # 0x4093b0
  401cce:	nop
  401ccf:	nop
  401cd0:	jmp    QWORD PTR [rip+0x76d2]        # 0x4093a8
  401cd6:	nop
  401cd7:	nop
  401cd8:	jmp    QWORD PTR [rip+0x76c2]        # 0x4093a0
  401cde:	nop
  401cdf:	nop
  401ce0:	jmp    QWORD PTR [rip+0x76b2]        # 0x409398
  401ce6:	nop
  401ce7:	nop
  401ce8:	jmp    QWORD PTR [rip+0x76a2]        # 0x409390
  401cee:	nop
  401cef:	nop
  401cf0:	jmp    QWORD PTR [rip+0x7692]        # 0x409388
  401cf6:	nop
  401cf7:	nop
  401cf8:	jmp    QWORD PTR [rip+0x7682]        # 0x409380
  401cfe:	nop
  401cff:	nop
  401d00:	jmp    QWORD PTR [rip+0x7672]        # 0x409378
  401d06:	nop
  401d07:	nop
  401d08:	jmp    QWORD PTR [rip+0x7662]        # 0x409370
  401d0e:	nop
  401d0f:	nop
  401d10:	jmp    QWORD PTR [rip+0x7652]        # 0x409368
  401d16:	nop
  401d17:	nop
  401d18:	jmp    QWORD PTR [rip+0x7642]        # 0x409360
  401d1e:	nop
  401d1f:	nop
  401d20:	jmp    QWORD PTR [rip+0x7632]        # 0x409358
  401d26:	nop
  401d27:	nop
  401d28:	jmp    QWORD PTR [rip+0x7622]        # 0x409350
  401d2e:	nop
  401d2f:	nop
  401d30:	jmp    QWORD PTR [rip+0x76ca]        # 0x409400
  401d36:	nop
  401d37:	nop
  401d38:	jmp    QWORD PTR [rip+0x76ba]        # 0x4093f8
  401d3e:	nop
  401d3f:	nop
  401d40:	jmp    QWORD PTR [rip+0x76aa]        # 0x4093f0
  401d46:	nop
  401d47:	nop
  401d48:	jmp    QWORD PTR [rip+0x769a]        # 0x4093e8
  401d4e:	nop
  401d4f:	nop
  401d50:	jmp    QWORD PTR [rip+0x768a]        # 0x4093e0
  401d56:	nop
  401d57:	nop
  401d58:	nop    DWORD PTR [rax+rax*1+0x0]
  401d60:	push   rbx
  401d61:	sub    rsp,0x30
  401d65:	mov    rbx,rcx
  401d68:	mov    rcx,QWORD PTR [rip+0x6ca1]        # 0x408a10
  401d6f:	call   0x402310
  401d74:	cmp    rax,0xffffffffffffffff
  401d78:	mov    QWORD PTR [rsp+0x20],rax
  401d7d:	je     0x401df5
  401d7f:	mov    ecx,0x8
  401d84:	call   0x403340
  401d89:	mov    rcx,QWORD PTR [rip+0x6c80]        # 0x408a10
  401d90:	call   0x402310
  401d95:	mov    rcx,QWORD PTR [rip+0x6c7c]        # 0x408a18
  401d9c:	mov    QWORD PTR [rsp+0x20],rax
  401da1:	call   0x402310
  401da6:	lea    rdx,[rsp+0x20]
  401dab:	lea    r8,[rsp+0x28]
  401db0:	mov    rcx,rbx
  401db3:	mov    QWORD PTR [rsp+0x28],rax
  401db8:	call   0x403388
  401dbd:	mov    rcx,QWORD PTR [rsp+0x20]
  401dc2:	mov    rbx,rax
  401dc5:	call   0x402320
  401dca:	mov    rcx,QWORD PTR [rsp+0x28]
  401dcf:	mov    QWORD PTR [rip+0x6c3a],rax        # 0x408a10
  401dd6:	call   0x402320
  401ddb:	mov    ecx,0x8
  401de0:	mov    QWORD PTR [rip+0x6c31],rax        # 0x408a18
  401de7:	call   0x403330
  401dec:	mov    rax,rbx
  401def:	add    rsp,0x30
  401df3:	pop    rbx
  401df4:	ret    
  401df5:	mov    rax,QWORD PTR [rip+0x3ae4]        # 0x4058e0
  401dfc:	mov    rcx,rbx
  401dff:	call   QWORD PTR [rax]
  401e01:	add    rsp,0x30
  401e05:	pop    rbx
  401e06:	ret    
  401e07:	nop    WORD PTR [rax+rax*1+0x0]
  401e10:	sub    rsp,0x28
  401e14:	call   0x401d60
  401e19:	test   rax,rax
  401e1c:	sete   al
  401e1f:	movzx  eax,al
  401e22:	neg    eax
  401e24:	add    rsp,0x28
  401e28:	ret    
  401e29:	nop
  401e2a:	nop
  401e2b:	nop
  401e2c:	nop
  401e2d:	nop
  401e2e:	nop
  401e2f:	nop
  401e30:	sub    rsp,0x28
  401e34:	mov    rax,QWORD PTR [rip+0x21d5]        # 0x404010
  401e3b:	mov    rax,QWORD PTR [rax]
  401e3e:	test   rax,rax
  401e41:	je     0x401e60
  401e43:	call   rax
  401e45:	mov    rax,QWORD PTR [rip+0x21c4]        # 0x404010
  401e4c:	lea    rdx,[rax+0x8]
  401e50:	mov    rax,QWORD PTR [rax+0x8]
  401e54:	mov    QWORD PTR [rip+0x21b5],rdx        # 0x404010
  401e5b:	test   rax,rax
  401e5e:	jne    0x401e43
  401e60:	add    rsp,0x28
  401e64:	ret    
  401e65:	nop
  401e66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e70:	push   rsi
  401e71:	push   rbx
  401e72:	sub    rsp,0x28
  401e76:	mov    rsi,QWORD PTR [rip+0x39e3]        # 0x405860
  401e7d:	mov    rax,QWORD PTR [rsi]
  401e80:	cmp    eax,0xffffffff
  401e83:	mov    ebx,eax
  401e85:	je     0x401eb0
  401e87:	test   ebx,ebx
  401e89:	je     0x401e9a
  401e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  401e90:	mov    eax,ebx
  401e92:	call   QWORD PTR [rsi+rax*8]
  401e95:	sub    ebx,0x1
  401e98:	jne    0x401e90
  401e9a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401e30
  401ea1:	add    rsp,0x28
  401ea5:	pop    rbx
  401ea6:	pop    rsi
  401ea7:	jmp    0x401e10
  401eac:	nop    DWORD PTR [rax+0x0]
  401eb0:	xor    ebx,ebx
  401eb2:	jmp    0x401eb6
  401eb4:	mov    ebx,eax
  401eb6:	lea    edx,[rbx+0x1]
  401eb9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  401ebe:	mov    rax,rdx
  401ec1:	jne    0x401eb4
  401ec3:	jmp    0x401e87
  401ec5:	nop
  401ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ed0:	mov    eax,DWORD PTR [rip+0x615a]        # 0x408030
  401ed6:	test   eax,eax
  401ed8:	je     0x401ee0
  401eda:	repz ret 
  401edc:	nop    DWORD PTR [rax+0x0]
  401ee0:	mov    DWORD PTR [rip+0x6146],0x1        # 0x408030
  401eea:	jmp    0x401e70
  401eec:	nop
  401eed:	nop
  401eee:	nop
  401eef:	nop
  401ef0:	mov    rax,QWORD PTR [rip+0x7601]        # 0x4094f8
  401ef7:	rex.W jmp rax
  401efa:	nop
  401efb:	nop
  401efc:	nop
  401efd:	nop
  401efe:	nop
  401eff:	nop
  401f00:	xor    eax,eax
  401f02:	ret    
  401f03:	nop
  401f04:	nop
  401f05:	nop
  401f06:	nop
  401f07:	nop
  401f08:	nop
  401f09:	nop
  401f0a:	nop
  401f0b:	nop
  401f0c:	nop
  401f0d:	nop
  401f0e:	nop
  401f0f:	nop
  401f10:	push   r12
  401f12:	push   rbp
  401f13:	push   rdi
  401f14:	push   rsi
  401f15:	push   rbx
  401f16:	sub    rsp,0x40
  401f1a:	mov    rbx,QWORD PTR [rip+0x214f]        # 0x404070
  401f21:	movabs rax,0x2b992ddfa232
  401f2b:	mov    QWORD PTR [rsp+0x20],0x0
  401f34:	cmp    rbx,rax
  401f37:	je     0x401f50
  401f39:	not    rbx
  401f3c:	mov    QWORD PTR [rip+0x213d],rbx        # 0x404080
  401f43:	add    rsp,0x40
  401f47:	pop    rbx
  401f48:	pop    rsi
  401f49:	pop    rdi
  401f4a:	pop    rbp
  401f4b:	pop    r12
  401f4d:	ret    
  401f4e:	xchg   ax,ax
  401f50:	lea    rcx,[rsp+0x20]
  401f55:	call   QWORD PTR [rip+0x74ed]        # 0x409448
  401f5b:	mov    r12,QWORD PTR [rsp+0x20]
  401f60:	call   QWORD PTR [rip+0x74c2]        # 0x409428
  401f66:	mov    ebp,eax
  401f68:	call   QWORD PTR [rip+0x74c2]        # 0x409430
  401f6e:	mov    edi,eax
  401f70:	call   QWORD PTR [rip+0x74da]        # 0x409450
  401f76:	lea    rcx,[rsp+0x30]
  401f7b:	mov    esi,eax
  401f7d:	call   QWORD PTR [rip+0x74e5]        # 0x409468
  401f83:	xor    r12,QWORD PTR [rsp+0x30]
  401f88:	mov    edx,edi
  401f8a:	movabs rax,0xffffffffffff
  401f94:	xor    rbp,r12
  401f97:	mov    rdi,rbp
  401f9a:	xor    rdi,rdx
  401f9d:	mov    edx,esi
  401f9f:	xor    rdi,rdx
  401fa2:	mov    rsi,rdi
  401fa5:	and    rsi,rax
  401fa8:	cmp    rsi,rbx
  401fab:	je     0x401fd0
  401fad:	mov    rax,rsi
  401fb0:	not    rax
  401fb3:	mov    QWORD PTR [rip+0x20b6],rsi        # 0x404070
  401fba:	mov    QWORD PTR [rip+0x20bf],rax        # 0x404080
  401fc1:	add    rsp,0x40
  401fc5:	pop    rbx
  401fc6:	pop    rsi
  401fc7:	pop    rdi
  401fc8:	pop    rbp
  401fc9:	pop    r12
  401fcb:	ret    
  401fcc:	nop    DWORD PTR [rax+0x0]
  401fd0:	movabs rax,0xffffd466d2205dcc
  401fda:	movabs rsi,0x2b992ddfa233
  401fe4:	jmp    0x401fb3
  401fe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ff0:	push   rbp
  401ff1:	push   rsi
  401ff2:	push   rbx
  401ff3:	mov    rbp,rsp
  401ff6:	sub    rsp,0x70
  401ffa:	mov    rsi,rcx
  401ffd:	lea    rcx,[rip+0x607c]        # 0x408080
  402004:	call   QWORD PTR [rip+0x746e]        # 0x409478
  40200a:	mov    rbx,QWORD PTR [rip+0x6167]        # 0x408178
  402011:	xor    r8d,r8d
  402014:	lea    rdx,[rbp-0x28]
  402018:	mov    rcx,rbx
  40201b:	call   QWORD PTR [rip+0x745f]        # 0x409480
  402021:	test   rax,rax
  402024:	mov    r9,rax
  402027:	je     0x4020d0
  40202d:	lea    rax,[rbp-0x20]
  402031:	mov    QWORD PTR [rsp+0x38],0x0
  40203a:	mov    r8,rbx
  40203d:	mov    rdx,QWORD PTR [rbp-0x28]
  402041:	xor    ecx,ecx
  402043:	mov    QWORD PTR [rsp+0x30],rax
  402048:	lea    rax,[rbp-0x18]
  40204c:	mov    QWORD PTR [rsp+0x28],rax
  402051:	lea    rax,[rip+0x6028]        # 0x408080
  402058:	mov    QWORD PTR [rsp+0x20],rax
  40205d:	call   QWORD PTR [rip+0x7425]        # 0x409488
  402063:	mov    rax,QWORD PTR [rip+0x610e]        # 0x408178
  40206a:	xor    ecx,ecx
  40206c:	mov    QWORD PTR [rip+0x608d],rsi        # 0x408100
  402073:	mov    DWORD PTR [rip+0x6503],0xc0000409        # 0x408580
  40207d:	mov    DWORD PTR [rip+0x64fd],0x1        # 0x408584
  402087:	mov    QWORD PTR [rip+0x6502],rax        # 0x408590
  40208e:	mov    rax,QWORD PTR [rip+0x1fdb]        # 0x404070
  402095:	mov    QWORD PTR [rbp-0x10],rax
  402099:	mov    rax,QWORD PTR [rip+0x1fe0]        # 0x404080
  4020a0:	mov    QWORD PTR [rbp-0x8],rax
  4020a4:	call   QWORD PTR [rip+0x73e6]        # 0x409490
  4020aa:	lea    rcx,[rip+0x350f]        # 0x4055c0
  4020b1:	call   QWORD PTR [rip+0x73f9]        # 0x4094b0
  4020b7:	call   QWORD PTR [rip+0x7363]        # 0x409420
  4020bd:	mov    edx,0xc0000409
  4020c2:	mov    rcx,rax
  4020c5:	call   QWORD PTR [rip+0x73d5]        # 0x4094a0
  4020cb:	call   0x403328
  4020d0:	mov    rax,QWORD PTR [rbp+0x18]
  4020d4:	mov    QWORD PTR [rip+0x609d],rax        # 0x408178
  4020db:	lea    rax,[rbp+0x8]
  4020df:	mov    QWORD PTR [rip+0x6032],rax        # 0x408118
  4020e6:	jmp    0x402063
  4020eb:	nop
  4020ec:	nop
  4020ed:	nop
  4020ee:	nop
  4020ef:	nop
  4020f0:	sub    rsp,0x28
  4020f4:	test   edx,edx
  4020f6:	je     0x402110
  4020f8:	cmp    edx,0x3
  4020fb:	je     0x402110
  4020fd:	mov    eax,0x1
  402102:	add    rsp,0x28
  402106:	ret    
  402107:	nop    WORD PTR [rax+rax*1+0x0]
  402110:	call   0x402e00
  402115:	mov    eax,0x1
  40211a:	add    rsp,0x28
  40211e:	ret    
  40211f:	nop
  402120:	push   rsi
  402121:	push   rbx
  402122:	sub    rsp,0x28
  402126:	mov    rax,QWORD PTR [rip+0x3713]        # 0x405840
  40212d:	cmp    DWORD PTR [rax],0x2
  402130:	je     0x402138
  402132:	mov    DWORD PTR [rax],0x2
  402138:	cmp    edx,0x2
  40213b:	je     0x402150
  40213d:	cmp    edx,0x1
  402140:	je     0x402182
  402142:	mov    eax,0x1
  402147:	add    rsp,0x28
  40214b:	pop    rbx
  40214c:	pop    rsi
  40214d:	ret    
  40214e:	xchg   ax,ax
  402150:	lea    rbx,[rip+0x7f09]        # 0x40a060
  402157:	lea    rsi,[rip+0x7f02]        # 0x40a060
  40215e:	cmp    rbx,rsi
  402161:	je     0x402142
  402163:	mov    rax,QWORD PTR [rbx]
  402166:	test   rax,rax
  402169:	je     0x40216d
  40216b:	call   rax
  40216d:	add    rbx,0x8
  402171:	cmp    rbx,rsi
  402174:	jne    0x402163
  402176:	mov    eax,0x1
  40217b:	add    rsp,0x28
  40217f:	pop    rbx
  402180:	pop    rsi
  402181:	ret    
  402182:	call   0x402e00
  402187:	jmp    0x402142
  402189:	nop    DWORD PTR [rax+0x0]
  402190:	xor    eax,eax
  402192:	ret    
  402193:	nop
  402194:	nop
  402195:	nop
  402196:	nop
  402197:	nop
  402198:	nop
  402199:	nop
  40219a:	nop
  40219b:	nop
  40219c:	nop
  40219d:	nop
  40219e:	nop
  40219f:	nop
  4021a0:	sub    rsp,0x58
  4021a4:	mov    rax,QWORD PTR [rip+0x64b5]        # 0x408660
  4021ab:	test   rax,rax
  4021ae:	je     0x4021dc
  4021b0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  4021b9:	mov    DWORD PTR [rsp+0x20],ecx
  4021bd:	lea    rcx,[rsp+0x20]
  4021c2:	mov    QWORD PTR [rsp+0x28],rdx
  4021c7:	movsd  QWORD PTR [rsp+0x30],xmm2
  4021cd:	movsd  QWORD PTR [rsp+0x38],xmm3
  4021d3:	movsd  QWORD PTR [rsp+0x40],xmm0
  4021d9:	call   rax
  4021db:	nop
  4021dc:	add    rsp,0x58
  4021e0:	ret    
  4021e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4021e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4021f0:	mov    QWORD PTR [rip+0x6469],rcx        # 0x408660
  4021f7:	jmp    0x403360
  4021fc:	nop    DWORD PTR [rax+0x0]
  402200:	push   rsi
  402201:	push   rbx
  402202:	sub    rsp,0x78
  402206:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40220b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  402210:	movaps XMMWORD PTR [rsp+0x60],xmm8
  402216:	cmp    DWORD PTR [rcx],0x6
  402219:	ja     0x4022f0
  40221f:	mov    edx,DWORD PTR [rcx]
  402221:	lea    rax,[rip+0x34dc]        # 0x405704
  402228:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40222c:	add    rax,rdx
  40222f:	jmp    rax
  402231:	lea    rbx,[rip+0x33a8]        # 0x4055e0
  402238:	nop    DWORD PTR [rax+rax*1+0x0]
  402240:	movsd  xmm8,QWORD PTR [rcx+0x20]
  402246:	mov    rsi,QWORD PTR [rcx+0x8]
  40224a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40224f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  402254:	call   0x403378
  402259:	movsd  QWORD PTR [rsp+0x30],xmm8
  402260:	lea    rcx,[rax+0x60]
  402264:	lea    rdx,[rip+0x346d]        # 0x4056d8
  40226b:	movsd  QWORD PTR [rsp+0x28],xmm7
  402271:	mov    r9,rsi
  402274:	mov    r8,rbx
  402277:	movsd  QWORD PTR [rsp+0x20],xmm6
  40227d:	call   0x403310
  402282:	nop
  402283:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  402288:	xor    eax,eax
  40228a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40228f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  402295:	add    rsp,0x78
  402299:	pop    rbx
  40229a:	pop    rsi
  40229b:	ret    
  40229c:	nop    DWORD PTR [rax+0x0]
  4022a0:	lea    rbx,[rip+0x3358]        # 0x4055ff
  4022a7:	jmp    0x402240
  4022a9:	nop    DWORD PTR [rax+0x0]
  4022b0:	lea    rbx,[rip+0x3369]        # 0x405620
  4022b7:	jmp    0x402240
  4022b9:	nop    DWORD PTR [rax+0x0]
  4022c0:	lea    rbx,[rip+0x33c9]        # 0x405690
  4022c7:	jmp    0x402240
  4022cc:	nop    DWORD PTR [rax+0x0]
  4022d0:	lea    rbx,[rip+0x3391]        # 0x405668
  4022d7:	jmp    0x402240
  4022dc:	nop    DWORD PTR [rax+0x0]
  4022e0:	lea    rbx,[rip+0x3359]        # 0x405640
  4022e7:	jmp    0x402240
  4022ec:	nop    DWORD PTR [rax+0x0]
  4022f0:	lea    rbx,[rip+0x33cf]        # 0x4056c6
  4022f7:	jmp    0x402240
  4022fc:	nop
  4022fd:	nop
  4022fe:	nop
  4022ff:	nop
  402300:	fninit 
  402302:	ret    
  402303:	nop
  402304:	nop
  402305:	nop
  402306:	nop
  402307:	nop
  402308:	nop
  402309:	nop
  40230a:	nop
  40230b:	nop
  40230c:	nop
  40230d:	nop
  40230e:	nop
  40230f:	nop
  402310:	mov    rax,rcx
  402313:	ret    
  402314:	xchg   ax,ax
  402316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402320:	mov    rax,rcx
  402323:	ret    
  402324:	nop
  402325:	nop
  402326:	nop
  402327:	nop
  402328:	nop
  402329:	nop
  40232a:	nop
  40232b:	nop
  40232c:	nop
  40232d:	nop
  40232e:	nop
  40232f:	nop
  402330:	push   rsi
  402331:	push   rbx
  402332:	sub    rsp,0x38
  402336:	lea    rax,[rsp+0x58]
  40233b:	mov    rbx,rcx
  40233e:	mov    QWORD PTR [rsp+0x58],rdx
  402343:	mov    QWORD PTR [rsp+0x60],r8
  402348:	mov    QWORD PTR [rsp+0x68],r9
  40234d:	mov    QWORD PTR [rsp+0x28],rax
  402352:	call   0x403378
  402357:	lea    rcx,[rip+0x33c2]        # 0x405720
  40235e:	lea    r9,[rax+0x60]
  402362:	mov    r8d,0x1b
  402368:	mov    edx,0x1
  40236d:	call   0x403300
  402372:	mov    rsi,QWORD PTR [rsp+0x28]
  402377:	call   0x403378
  40237c:	lea    rcx,[rax+0x60]
  402380:	mov    rdx,rbx
  402383:	mov    r8,rsi
  402386:	call   0x4032c0
  40238b:	call   0x403328
  402390:	nop
  402391:	nop    DWORD PTR [rax+rax*1+0x0]
  402396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023a0:	push   r13
  4023a2:	push   r12
  4023a4:	push   rbp
  4023a5:	push   rdi
  4023a6:	push   rsi
  4023a7:	push   rbx
  4023a8:	sub    rsp,0x58
  4023ac:	movsxd rbp,DWORD PTR [rip+0x62d1]        # 0x408684
  4023b3:	mov    rbx,rcx
  4023b6:	mov    rsi,rdx
  4023b9:	mov    rdi,r8
  4023bc:	test   ebp,ebp
  4023be:	jle    0x4024ba
  4023c4:	mov    rax,QWORD PTR [rip+0x62bd]        # 0x408688
  4023cb:	xor    r9d,r9d
  4023ce:	add    rax,0x8
  4023d2:	mov    r10,QWORD PTR [rax]
  4023d5:	cmp    rbx,r10
  4023d8:	jb     0x4023ee
  4023da:	mov    rdx,QWORD PTR [rax+0x8]
  4023de:	mov    r11d,DWORD PTR [rdx+0x8]
  4023e2:	add    r10,r11
  4023e5:	cmp    rbx,r10
  4023e8:	jb     0x4024a0
  4023ee:	add    r9d,0x1
  4023f2:	add    rax,0x18
  4023f6:	cmp    r9d,ebp
  4023f9:	jne    0x4023d2
  4023fb:	mov    rcx,rbx
  4023fe:	call   0x403010
  402403:	test   rax,rax
  402406:	mov    r12,rax
  402409:	je     0x4024f2
  40240f:	lea    rbp,[rbp+rbp*2+0x0]
  402414:	shl    rbp,0x3
  402418:	mov    r13,rbp
  40241b:	add    r13,QWORD PTR [rip+0x6266]        # 0x408688
  402422:	mov    QWORD PTR [r13+0x10],rax
  402426:	mov    DWORD PTR [r13+0x0],0x0
  40242e:	call   0x403130
  402433:	mov    edx,DWORD PTR [r12+0xc]
  402438:	mov    r8d,0x30
  40243e:	add    rax,rdx
  402441:	lea    rdx,[rsp+0x20]
  402446:	mov    QWORD PTR [r13+0x8],rax
  40244a:	mov    rax,QWORD PTR [rip+0x6237]        # 0x408688
  402451:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  402456:	call   QWORD PTR [rip+0x7064]        # 0x4094c0
  40245c:	test   rax,rax
  40245f:	je     0x4024d5
  402461:	mov    eax,DWORD PTR [rsp+0x44]
  402465:	lea    edx,[rax-0x4]
  402468:	and    edx,0xfffffffb
  40246b:	je     0x402499
  40246d:	sub    eax,0x40
  402470:	and    eax,0xffffffbf
  402473:	je     0x402499
  402475:	mov    r9,rbp
  402478:	add    r9,QWORD PTR [rip+0x6209]        # 0x408688
  40247f:	mov    r8d,0x40
  402485:	mov    rdx,QWORD PTR [rsp+0x38]
  40248a:	mov    rcx,QWORD PTR [rsp+0x20]
  40248f:	call   QWORD PTR [rip+0x7023]        # 0x4094b8
  402495:	test   eax,eax
  402497:	je     0x4024c1
  402499:	add    DWORD PTR [rip+0x61e4],0x1        # 0x408684
  4024a0:	mov    r8,rdi
  4024a3:	mov    rdx,rsi
  4024a6:	mov    rcx,rbx
  4024a9:	add    rsp,0x58
  4024ad:	pop    rbx
  4024ae:	pop    rsi
  4024af:	pop    rdi
  4024b0:	pop    rbp
  4024b1:	pop    r12
  4024b3:	pop    r13
  4024b5:	jmp    0x4032f0
  4024ba:	xor    ebp,ebp
  4024bc:	jmp    0x4023fb
  4024c1:	call   QWORD PTR [rip+0x6f71]        # 0x409438
  4024c7:	lea    rcx,[rip+0x32ca]        # 0x405798
  4024ce:	mov    edx,eax
  4024d0:	call   0x402330
  4024d5:	mov    rax,QWORD PTR [rip+0x61ac]        # 0x408688
  4024dc:	mov    edx,DWORD PTR [r12+0x8]
  4024e1:	lea    rcx,[rip+0x3278]        # 0x405760
  4024e8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  4024ed:	call   0x402330
  4024f2:	lea    rcx,[rip+0x3247]        # 0x405740
  4024f9:	mov    rdx,rbx
  4024fc:	call   0x402330
  402501:	nop
  402502:	nop    DWORD PTR [rax+0x0]
  402506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402510:	push   rbp
  402511:	push   r14
  402513:	push   r13
  402515:	push   r12
  402517:	push   rdi
  402518:	push   rsi
  402519:	push   rbx
  40251a:	mov    rbp,rsp
  40251d:	sub    rsp,0x60
  402521:	mov    ebx,DWORD PTR [rip+0x6159]        # 0x408680
  402527:	test   ebx,ebx
  402529:	je     0x402540
  40252b:	mov    rsp,rbp
  40252e:	pop    rbx
  40252f:	pop    rsi
  402530:	pop    rdi
  402531:	pop    r12
  402533:	pop    r13
  402535:	pop    r14
  402537:	pop    rbp
  402538:	ret    
  402539:	nop    DWORD PTR [rax+0x0]
  402540:	mov    DWORD PTR [rip+0x6136],0x1        # 0x408680
  40254a:	call   0x403060
  40254f:	cdqe   
  402551:	lea    rax,[rax+rax*2]
  402555:	lea    rax,[rax*8+0x1e]
  40255d:	and    rax,0xfffffffffffffff0
  402561:	call   0x403280
  402566:	mov    rsi,QWORD PTR [rip+0x3303]        # 0x405870
  40256d:	mov    rbx,QWORD PTR [rip+0x330c]        # 0x405880
  402574:	sub    rsp,rax
  402577:	mov    DWORD PTR [rip+0x6103],0x0        # 0x408684
  402581:	lea    rax,[rsp+0x20]
  402586:	mov    QWORD PTR [rip+0x60fb],rax        # 0x408688
  40258d:	mov    rax,rsi
  402590:	sub    rax,rbx
  402593:	cmp    rax,0x7
  402597:	jle    0x40252b
  402599:	cmp    rax,0xb
  40259d:	jle    0x4025c5
  40259f:	mov    r11d,DWORD PTR [rbx]
  4025a2:	test   r11d,r11d
  4025a5:	jne    0x4026f0
  4025ab:	mov    r10d,DWORD PTR [rbx+0x4]
  4025af:	test   r10d,r10d
  4025b2:	jne    0x4026f0
  4025b8:	mov    r9d,DWORD PTR [rbx+0x8]
  4025bc:	test   r9d,r9d
  4025bf:	jne    0x4025dc
  4025c1:	add    rbx,0xc
  4025c5:	mov    r8d,DWORD PTR [rbx]
  4025c8:	test   r8d,r8d
  4025cb:	jne    0x4026f0
  4025d1:	mov    ecx,DWORD PTR [rbx+0x4]
  4025d4:	test   ecx,ecx
  4025d6:	jne    0x4026f0
  4025dc:	mov    edx,DWORD PTR [rbx+0x8]
  4025df:	cmp    edx,0x1
  4025e2:	jne    0x4027fc
  4025e8:	add    rbx,0xc
  4025ec:	cmp    rbx,rsi
  4025ef:	jae    0x40252b
  4025f5:	mov    r12,QWORD PTR [rip+0x32a4]        # 0x4058a0
  4025fc:	lea    r13,[rbp-0x30]
  402600:	movabs r14,0xffffffff00000000
  40260a:	mov    ecx,DWORD PTR [rbx+0x4]
  40260d:	mov    eax,DWORD PTR [rbx]
  40260f:	movzx  edx,BYTE PTR [rbx+0x8]
  402613:	add    rax,r12
  402616:	add    rcx,r12
  402619:	cmp    edx,0x10
  40261c:	mov    r8,QWORD PTR [rax]
  40261f:	je     0x402766
  402625:	jbe    0x40272d
  40262b:	cmp    edx,0x20
  40262e:	je     0x4027af
  402634:	cmp    edx,0x40
  402637:	jne    0x40279b
  40263d:	sub    r8,rax
  402640:	mov    rdx,r13
  402643:	mov    rdi,r13
  402646:	mov    rax,r8
  402649:	add    rax,QWORD PTR [rcx]
  40264c:	mov    r8d,0x8
  402652:	mov    QWORD PTR [rbp-0x30],rax
  402656:	call   0x4023a0
  40265b:	add    rbx,0xc
  40265f:	cmp    rbx,rsi
  402662:	jb     0x40260a
  402664:	mov    eax,DWORD PTR [rip+0x601a]        # 0x408684
  40266a:	xor    ebx,ebx
  40266c:	xor    esi,esi
  40266e:	test   eax,eax
  402670:	jle    0x40252b
  402676:	mov    r14,QWORD PTR [rip+0x6e43]        # 0x4094c0
  40267d:	lea    r13,[rbp-0x34]
  402681:	mov    r12,QWORD PTR [rip+0x6e30]        # 0x4094b8
  402688:	jmp    0x4026a3
  40268a:	nop    WORD PTR [rax+rax*1+0x0]
  402690:	add    esi,0x1
  402693:	add    rbx,0x18
  402697:	cmp    esi,DWORD PTR [rip+0x5fe7]        # 0x408684
  40269d:	jge    0x40252b
  4026a3:	mov    rax,rbx
  4026a6:	add    rax,QWORD PTR [rip+0x5fdb]        # 0x408688
  4026ad:	mov    edx,DWORD PTR [rax]
  4026af:	test   edx,edx
  4026b1:	je     0x402690
  4026b3:	mov    rcx,QWORD PTR [rax+0x8]
  4026b7:	mov    r8d,0x30
  4026bd:	mov    rdx,rdi
  4026c0:	call   r14
  4026c3:	test   rax,rax
  4026c6:	je     0x4027de
  4026cc:	mov    rax,QWORD PTR [rip+0x5fb5]        # 0x408688
  4026d3:	mov    r9,r13
  4026d6:	mov    rdx,QWORD PTR [rbp-0x18]
  4026da:	mov    rcx,QWORD PTR [rbp-0x30]
  4026de:	mov    r8d,DWORD PTR [rax+rbx*1]
  4026e2:	call   r12
  4026e5:	jmp    0x402690
  4026e7:	nop    WORD PTR [rax+rax*1+0x0]
  4026f0:	cmp    rbx,rsi
  4026f3:	jae    0x40252b
  4026f9:	mov    r12,QWORD PTR [rip+0x31a0]        # 0x4058a0
  402700:	lea    rdi,[rbp-0x30]
  402704:	mov    ecx,DWORD PTR [rbx+0x4]
  402707:	mov    eax,DWORD PTR [rbx]
  402709:	mov    r8d,0x4
  40270f:	mov    rdx,rdi
  402712:	add    rbx,0x8
  402716:	add    rcx,r12
  402719:	add    eax,DWORD PTR [rcx]
  40271b:	mov    DWORD PTR [rbp-0x30],eax
  40271e:	call   0x4023a0
  402723:	cmp    rbx,rsi
  402726:	jb     0x402704
  402728:	jmp    0x402664
  40272d:	cmp    edx,0x8
  402730:	jne    0x40279b
  402732:	movzx  edx,BYTE PTR [rcx]
  402735:	mov    rdi,r13
  402738:	mov    r10,rdx
  40273b:	or     r10,0xffffffffffffff00
  402742:	test   dl,dl
  402744:	cmovs  rdx,r10
  402748:	sub    rdx,rax
  40274b:	lea    rax,[r8+rdx*1]
  40274f:	mov    r8d,0x1
  402755:	mov    rdx,r13
  402758:	mov    QWORD PTR [rbp-0x30],rax
  40275c:	call   0x4023a0
  402761:	jmp    0x40265b
  402766:	movzx  edx,WORD PTR [rcx]
  402769:	mov    rdi,r13
  40276c:	mov    r10,rdx
  40276f:	or     r10,0xffffffffffff0000
  402776:	test   dx,dx
  402779:	cmovs  rdx,r10
  40277d:	sub    rdx,rax
  402780:	lea    rax,[r8+rdx*1]
  402784:	mov    r8d,0x2
  40278a:	mov    rdx,r13
  40278d:	mov    QWORD PTR [rbp-0x30],rax
  402791:	call   0x4023a0
  402796:	jmp    0x40265b
  40279b:	lea    rcx,[rip+0x3056]        # 0x4057f8
  4027a2:	mov    QWORD PTR [rbp-0x30],0x0
  4027aa:	call   0x402330
  4027af:	mov    edx,DWORD PTR [rcx]
  4027b1:	mov    rdi,r13
  4027b4:	mov    r10,rdx
  4027b7:	or     r10,r14
  4027ba:	test   edx,edx
  4027bc:	cmovs  rdx,r10
  4027c0:	sub    rdx,rax
  4027c3:	lea    rax,[r8+rdx*1]
  4027c7:	mov    r8d,0x4
  4027cd:	mov    rdx,r13
  4027d0:	mov    QWORD PTR [rbp-0x30],rax
  4027d4:	call   0x4023a0
  4027d9:	jmp    0x40265b
  4027de:	add    rbx,QWORD PTR [rip+0x5ea3]        # 0x408688
  4027e5:	lea    rcx,[rip+0x2f74]        # 0x405760
  4027ec:	mov    rax,QWORD PTR [rbx+0x10]
  4027f0:	mov    r8,QWORD PTR [rbx+0x8]
  4027f4:	mov    edx,DWORD PTR [rax+0x8]
  4027f7:	call   0x402330
  4027fc:	lea    rcx,[rip+0x2fbd]        # 0x4057c0
  402803:	call   0x402330
  402808:	nop
  402809:	nop
  40280a:	nop
  40280b:	nop
  40280c:	nop
  40280d:	nop
  40280e:	nop
  40280f:	nop
  402810:	sub    rsp,0x28
  402814:	mov    eax,DWORD PTR [rcx]
  402816:	cmp    eax,0xc0000091
  40281b:	ja     0x402880
  40281d:	cmp    eax,0xc000008d
  402822:	jae    0x40289f
  402824:	cmp    eax,0xc0000008
  402829:	je     0x402940
  40282f:	ja     0x402910
  402835:	cmp    eax,0x80000002
  40283a:	je     0x402940
  402840:	cmp    eax,0xc0000005
  402845:	jne    0x40291e
  40284b:	xor    edx,edx
  40284d:	mov    ecx,0xb
  402852:	call   0x4032e8
  402857:	cmp    rax,0x1
  40285b:	je     0x4029a0
  402861:	test   rax,rax
  402864:	je     0x402980
  40286a:	mov    ecx,0xb
  40286f:	call   rax
  402871:	xor    eax,eax
  402873:	add    rsp,0x28
  402877:	ret    
  402878:	nop    DWORD PTR [rax+rax*1+0x0]
  402880:	cmp    eax,0xc0000094
  402885:	je     0x402950
  40288b:	ja     0x4028d0
  40288d:	cmp    eax,0xc0000092
  402892:	je     0x402940
  402898:	cmp    eax,0xc0000093
  40289d:	jne    0x40291e
  40289f:	xor    edx,edx
  4028a1:	mov    ecx,0x8
  4028a6:	call   0x4032e8
  4028ab:	cmp    rax,0x1
  4028af:	mov    rdx,rax
  4028b2:	je     0x402928
  4028b4:	test   rdx,rdx
  4028b7:	mov    eax,0x1
  4028bc:	je     0x402873
  4028be:	mov    ecx,0x8
  4028c3:	call   rdx
  4028c5:	xor    eax,eax
  4028c7:	add    rsp,0x28
  4028cb:	ret    
  4028cc:	nop    DWORD PTR [rax+0x0]
  4028d0:	cmp    eax,0xc0000095
  4028d5:	je     0x402940
  4028d7:	cmp    eax,0xc0000096
  4028dc:	jne    0x40291e
  4028de:	xor    edx,edx
  4028e0:	mov    ecx,0x4
  4028e5:	call   0x4032e8
  4028ea:	cmp    rax,0x1
  4028ee:	je     0x40298a
  4028f4:	test   rax,rax
  4028f7:	je     0x402980
  4028fd:	mov    ecx,0x4
  402902:	call   rax
  402904:	xor    eax,eax
  402906:	jmp    0x402873
  40290b:	nop    DWORD PTR [rax+rax*1+0x0]
  402910:	cmp    eax,0xc000001d
  402915:	je     0x4028de
  402917:	cmp    eax,0xc000008c
  40291c:	je     0x402940
  40291e:	mov    eax,0x1
  402923:	add    rsp,0x28
  402927:	ret    
  402928:	mov    edx,0x1
  40292d:	mov    ecx,0x8
  402932:	call   0x4032e8
  402937:	call   0x402300
  40293c:	nop    DWORD PTR [rax+0x0]
  402940:	xor    eax,eax
  402942:	add    rsp,0x28
  402946:	ret    
  402947:	nop    WORD PTR [rax+rax*1+0x0]
  402950:	xor    edx,edx
  402952:	mov    ecx,0x8
  402957:	call   0x4032e8
  40295c:	cmp    rax,0x1
  402960:	mov    rdx,rax
  402963:	jne    0x4028b4
  402969:	mov    edx,0x1
  40296e:	mov    ecx,0x8
  402973:	call   0x4032e8
  402978:	xor    eax,eax
  40297a:	jmp    0x402873
  40297f:	nop
  402980:	mov    eax,0x4
  402985:	add    rsp,0x28
  402989:	ret    
  40298a:	mov    edx,0x1
  40298f:	mov    ecx,0x4
  402994:	call   0x4032e8
  402999:	xor    eax,eax
  40299b:	jmp    0x402873
  4029a0:	mov    edx,0x1
  4029a5:	mov    ecx,0xb
  4029aa:	call   0x4032e8
  4029af:	xor    eax,eax
  4029b1:	jmp    0x402873
  4029b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029c0:	push   r12
  4029c2:	push   rbp
  4029c3:	push   rdi
  4029c4:	push   rsi
  4029c5:	push   rbx
  4029c6:	sub    rsp,0x20
  4029ca:	call   0x403130
  4029cf:	mov    rbp,rax
  4029d2:	mov    eax,DWORD PTR [rip+0x5cf0]        # 0x4086c8
  4029d8:	test   eax,eax
  4029da:	jne    0x402a01
  4029dc:	test   rbp,rbp
  4029df:	je     0x402a01
  4029e1:	lea    rcx,[rip+0x2e48]        # 0x405830
  4029e8:	mov    DWORD PTR [rip+0x5cd6],0x1        # 0x4086c8
  4029f2:	call   0x402f70
  4029f7:	test   rax,rax
  4029fa:	je     0x402a10
  4029fc:	mov    eax,0x1
  402a01:	add    rsp,0x20
  402a05:	pop    rbx
  402a06:	pop    rsi
  402a07:	pop    rdi
  402a08:	pop    rbp
  402a09:	pop    r12
  402a0b:	ret    
  402a0c:	nop    DWORD PTR [rax+0x0]
  402a10:	lea    rbx,[rip+0x5de9]        # 0x408800
  402a17:	mov    ecx,0x30
  402a1c:	lea    rdx,[rip+0x5cdd]        # 0x408700
  402a23:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402810
  402a2a:	xor    esi,esi
  402a2c:	mov    rdi,rbx
  402a2f:	rep stos QWORD PTR es:[rdi],rax
  402a32:	mov    rdi,rdx
  402a35:	sub    r12,rbp
  402a38:	mov    cl,0x20
  402a3a:	rep stos QWORD PTR es:[rdi],rax
  402a3d:	mov    rdi,rdx
  402a40:	jmp    0x402a70
  402a42:	mov    BYTE PTR [rdi],0x9
  402a45:	mov    DWORD PTR [rdi+0x4],r12d
  402a49:	add    rsi,0x1
  402a4d:	mov    edx,DWORD PTR [rax+0xc]
  402a50:	add    rbx,0xc
  402a54:	mov    DWORD PTR [rbx-0xc],edx
  402a57:	add    edx,DWORD PTR [rax+0x8]
  402a5a:	mov    rax,rdi
  402a5d:	sub    rax,rbp
  402a60:	add    rdi,0x8
  402a64:	mov    DWORD PTR [rbx-0x4],eax
  402a67:	mov    DWORD PTR [rbx-0x8],edx
  402a6a:	cmp    rsi,0x20
  402a6e:	je     0x402aa5
  402a70:	mov    rcx,rsi
  402a73:	call   0x4030a0
  402a78:	test   rax,rax
  402a7b:	jne    0x402a42
  402a7d:	test   rsi,rsi
  402a80:	je     0x4029fc
  402a86:	mov    edx,esi
  402a88:	nop    DWORD PTR [rax+rax*1+0x0]
  402a90:	mov    r8,rbp
  402a93:	lea    rcx,[rip+0x5d66]        # 0x408800
  402a9a:	call   QWORD PTR [rip+0x69d0]        # 0x409470
  402aa0:	jmp    0x4029fc
  402aa5:	mov    edx,0x20
  402aaa:	jmp    0x402a90
  402aac:	nop    DWORD PTR [rax+0x0]
  402ab0:	push   rbx
  402ab1:	sub    rsp,0x20
  402ab5:	mov    rdx,QWORD PTR [rcx]
  402ab8:	mov    eax,DWORD PTR [rdx]
  402aba:	mov    r8d,eax
  402abd:	and    r8d,0x20ffffff
  402ac4:	cmp    r8d,0x20474343
  402acb:	je     0x402bd0
  402ad1:	cmp    eax,0xc0000091
  402ad6:	mov    rbx,rcx
  402ad9:	ja     0x402b60
  402adf:	cmp    eax,0xc000008d
  402ae4:	jae    0x402b77
  402aea:	cmp    eax,0xc0000008
  402aef:	je     0x402b23
  402af1:	ja     0x402b30
  402af3:	cmp    eax,0x80000002
  402af8:	je     0x402b23
  402afa:	cmp    eax,0xc0000005
  402aff:	jne    0x402b42
  402b01:	xor    edx,edx
  402b03:	mov    ecx,0xb
  402b08:	call   0x4032e8
  402b0d:	cmp    rax,0x1
  402b11:	je     0x402c40
  402b17:	test   rax,rax
  402b1a:	je     0x402b42
  402b1c:	mov    ecx,0xb
  402b21:	call   rax
  402b23:	mov    eax,0xffffffff
  402b28:	add    rsp,0x20
  402b2c:	pop    rbx
  402b2d:	ret    
  402b2e:	xchg   ax,ax
  402b30:	cmp    eax,0xc000001d
  402b35:	je     0x402bf6
  402b3b:	cmp    eax,0xc000008c
  402b40:	je     0x402b23
  402b42:	mov    rax,QWORD PTR [rip+0x5b77]        # 0x4086c0
  402b49:	test   rax,rax
  402b4c:	je     0x402b28
  402b4e:	mov    rcx,rbx
  402b51:	add    rsp,0x20
  402b55:	pop    rbx
  402b56:	rex.W jmp rax
  402b59:	nop    DWORD PTR [rax+0x0]
  402b60:	cmp    eax,0xc0000094
  402b65:	je     0x402ba2
  402b67:	ja     0x402be0
  402b69:	cmp    eax,0xc0000092
  402b6e:	je     0x402b23
  402b70:	cmp    eax,0xc0000093
  402b75:	jne    0x402b42
  402b77:	xor    edx,edx
  402b79:	mov    ecx,0x8
  402b7e:	call   0x4032e8
  402b83:	cmp    rax,0x1
  402b87:	jne    0x402bb4
  402b89:	mov    edx,0x1
  402b8e:	mov    ecx,0x8
  402b93:	call   0x4032e8
  402b98:	call   0x402300
  402b9d:	jmp    0x402b23
  402ba2:	xor    edx,edx
  402ba4:	mov    ecx,0x8
  402ba9:	call   0x4032e8
  402bae:	cmp    rax,0x1
  402bb2:	je     0x402c22
  402bb4:	test   rax,rax
  402bb7:	je     0x402b42
  402bb9:	mov    ecx,0x8
  402bbe:	call   rax
  402bc0:	mov    eax,0xffffffff
  402bc5:	jmp    0x402b28
  402bca:	nop    WORD PTR [rax+rax*1+0x0]
  402bd0:	test   BYTE PTR [rdx+0x4],0x1
  402bd4:	jne    0x402ad1
  402bda:	jmp    0x402b23
  402bdf:	nop
  402be0:	cmp    eax,0xc0000095
  402be5:	je     0x402b23
  402beb:	cmp    eax,0xc0000096
  402bf0:	jne    0x402b42
  402bf6:	xor    edx,edx
  402bf8:	mov    ecx,0x4
  402bfd:	call   0x4032e8
  402c02:	cmp    rax,0x1
  402c06:	je     0x402c54
  402c08:	test   rax,rax
  402c0b:	je     0x402b42
  402c11:	mov    ecx,0x4
  402c16:	call   rax
  402c18:	mov    eax,0xffffffff
  402c1d:	jmp    0x402b28
  402c22:	mov    edx,0x1
  402c27:	mov    ecx,0x8
  402c2c:	call   0x4032e8
  402c31:	jmp    0x402b23
  402c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c40:	mov    edx,0x1
  402c45:	mov    ecx,0xb
  402c4a:	call   0x4032e8
  402c4f:	jmp    0x402b23
  402c54:	mov    edx,0x1
  402c59:	mov    ecx,0x4
  402c5e:	call   0x4032e8
  402c63:	jmp    0x402b23
  402c68:	nop
  402c69:	nop
  402c6a:	nop
  402c6b:	nop
  402c6c:	nop
  402c6d:	nop
  402c6e:	nop
  402c6f:	nop
  402c70:	push   rbp
  402c71:	push   rdi
  402c72:	push   rsi
  402c73:	push   rbx
  402c74:	sub    rsp,0x28
  402c78:	lea    rcx,[rip+0x5d21]        # 0x4089a0
  402c7f:	call   QWORD PTR [rip+0x6793]        # 0x409418
  402c85:	mov    rbx,QWORD PTR [rip+0x5cf4]        # 0x408980
  402c8c:	test   rbx,rbx
  402c8f:	je     0x402cc4
  402c91:	mov    rbp,QWORD PTR [rip+0x6810]        # 0x4094a8
  402c98:	mov    rdi,QWORD PTR [rip+0x6799]        # 0x409438
  402c9f:	nop
  402ca0:	mov    ecx,DWORD PTR [rbx]
  402ca2:	call   rbp
  402ca4:	mov    rsi,rax
  402ca7:	call   rdi
  402ca9:	test   eax,eax
  402cab:	jne    0x402cbb
  402cad:	test   rsi,rsi
  402cb0:	je     0x402cbb
  402cb2:	mov    rax,QWORD PTR [rbx+0x8]
  402cb6:	mov    rcx,rsi
  402cb9:	call   rax
  402cbb:	mov    rbx,QWORD PTR [rbx+0x10]
  402cbf:	test   rbx,rbx
  402cc2:	jne    0x402ca0
  402cc4:	mov    rax,QWORD PTR [rip+0x6795]        # 0x409460
  402ccb:	lea    rcx,[rip+0x5cce]        # 0x4089a0
  402cd2:	add    rsp,0x28
  402cd6:	pop    rbx
  402cd7:	pop    rsi
  402cd8:	pop    rdi
  402cd9:	pop    rbp
  402cda:	rex.W jmp rax
  402cdd:	nop    DWORD PTR [rax]
  402ce0:	push   rdi
  402ce1:	push   rsi
  402ce2:	push   rbx
  402ce3:	sub    rsp,0x20
  402ce7:	mov    eax,DWORD PTR [rip+0x5c9b]        # 0x408988
  402ced:	test   eax,eax
  402cef:	jne    0x402d00
  402cf1:	add    rsp,0x20
  402cf5:	pop    rbx
  402cf6:	pop    rsi
  402cf7:	pop    rdi
  402cf8:	ret    
  402cf9:	nop    DWORD PTR [rax+0x0]
  402d00:	mov    rsi,rdx
  402d03:	mov    edi,ecx
  402d05:	mov    edx,0x18
  402d0a:	mov    ecx,0x1
  402d0f:	call   0x403320
  402d14:	test   rax,rax
  402d17:	mov    rbx,rax
  402d1a:	je     0x402d58
  402d1c:	mov    DWORD PTR [rax],edi
  402d1e:	mov    QWORD PTR [rax+0x8],rsi
  402d22:	lea    rcx,[rip+0x5c77]        # 0x4089a0
  402d29:	call   QWORD PTR [rip+0x66e9]        # 0x409418
  402d2f:	mov    rax,QWORD PTR [rip+0x5c4a]        # 0x408980
  402d36:	lea    rcx,[rip+0x5c63]        # 0x4089a0
  402d3d:	mov    QWORD PTR [rip+0x5c3c],rbx        # 0x408980
  402d44:	mov    QWORD PTR [rbx+0x10],rax
  402d48:	call   QWORD PTR [rip+0x6712]        # 0x409460
  402d4e:	xor    eax,eax
  402d50:	add    rsp,0x20
  402d54:	pop    rbx
  402d55:	pop    rsi
  402d56:	pop    rdi
  402d57:	ret    
  402d58:	mov    eax,0xffffffff
  402d5d:	jmp    0x402cf1
  402d5f:	nop
  402d60:	push   rbx
  402d61:	sub    rsp,0x20
  402d65:	mov    eax,DWORD PTR [rip+0x5c1d]        # 0x408988
  402d6b:	test   eax,eax
  402d6d:	jne    0x402d80
  402d6f:	xor    eax,eax
  402d71:	add    rsp,0x20
  402d75:	pop    rbx
  402d76:	ret    
  402d77:	nop    WORD PTR [rax+rax*1+0x0]
  402d80:	mov    ebx,ecx
  402d82:	lea    rcx,[rip+0x5c17]        # 0x4089a0
  402d89:	call   QWORD PTR [rip+0x6689]        # 0x409418
  402d8f:	mov    rdx,QWORD PTR [rip+0x5bea]        # 0x408980
  402d96:	test   rdx,rdx
  402d99:	je     0x402db7
  402d9b:	mov    eax,DWORD PTR [rdx]
  402d9d:	cmp    eax,ebx
  402d9f:	jne    0x402dae
  402da1:	jmp    0x402def
  402da3:	mov    r8d,DWORD PTR [rax]
  402da6:	cmp    r8d,ebx
  402da9:	je     0x402dd0
  402dab:	mov    rdx,rax
  402dae:	mov    rax,QWORD PTR [rdx+0x10]
  402db2:	test   rax,rax
  402db5:	jne    0x402da3
  402db7:	lea    rcx,[rip+0x5be2]        # 0x4089a0
  402dbe:	call   QWORD PTR [rip+0x669c]        # 0x409460
  402dc4:	xor    eax,eax
  402dc6:	add    rsp,0x20
  402dca:	pop    rbx
  402dcb:	ret    
  402dcc:	nop    DWORD PTR [rax+0x0]
  402dd0:	mov    rcx,rax
  402dd3:	mov    rax,QWORD PTR [rax+0x10]
  402dd7:	mov    QWORD PTR [rdx+0x10],rax
  402ddb:	call   0x403308
  402de0:	lea    rcx,[rip+0x5bb9]        # 0x4089a0
  402de7:	call   QWORD PTR [rip+0x6673]        # 0x409460
  402ded:	jmp    0x402dc4
  402def:	mov    rax,QWORD PTR [rdx+0x10]
  402df3:	mov    rcx,rdx
  402df6:	mov    QWORD PTR [rip+0x5b83],rax        # 0x408980
  402dfd:	jmp    0x402ddb
  402dff:	nop
  402e00:	push   rbx
  402e01:	sub    rsp,0x20
  402e05:	cmp    edx,0x1
  402e08:	je     0x402ea0
  402e0e:	jb     0x402e40
  402e10:	cmp    edx,0x2
  402e13:	je     0x402e30
  402e15:	cmp    edx,0x3
  402e18:	jne    0x402e35
  402e1a:	mov    eax,DWORD PTR [rip+0x5b68]        # 0x408988
  402e20:	test   eax,eax
  402e22:	je     0x402e35
  402e24:	call   0x402c70
  402e29:	jmp    0x402e35
  402e2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e30:	call   0x402300
  402e35:	mov    eax,0x1
  402e3a:	add    rsp,0x20
  402e3e:	pop    rbx
  402e3f:	ret    
  402e40:	mov    eax,DWORD PTR [rip+0x5b42]        # 0x408988
  402e46:	test   eax,eax
  402e48:	jne    0x402ed0
  402e4e:	mov    eax,DWORD PTR [rip+0x5b34]        # 0x408988
  402e54:	cmp    eax,0x1
  402e57:	jne    0x402e35
  402e59:	mov    rcx,QWORD PTR [rip+0x5b20]        # 0x408980
  402e60:	test   rcx,rcx
  402e63:	je     0x402e76
  402e65:	mov    rbx,QWORD PTR [rcx+0x10]
  402e69:	call   0x403308
  402e6e:	test   rbx,rbx
  402e71:	mov    rcx,rbx
  402e74:	jne    0x402e65
  402e76:	lea    rcx,[rip+0x5b23]        # 0x4089a0
  402e7d:	mov    QWORD PTR [rip+0x5af8],0x0        # 0x408980
  402e88:	mov    DWORD PTR [rip+0x5af6],0x0        # 0x408988
  402e92:	call   QWORD PTR [rip+0x6578]        # 0x409410
  402e98:	jmp    0x402e35
  402e9a:	nop    WORD PTR [rax+rax*1+0x0]
  402ea0:	mov    eax,DWORD PTR [rip+0x5ae2]        # 0x408988
  402ea6:	test   eax,eax
  402ea8:	je     0x402ec0
  402eaa:	mov    eax,0x1
  402eaf:	mov    DWORD PTR [rip+0x5acf],0x1        # 0x408988
  402eb9:	add    rsp,0x20
  402ebd:	pop    rbx
  402ebe:	ret    
  402ebf:	nop
  402ec0:	lea    rcx,[rip+0x5ad9]        # 0x4089a0
  402ec7:	call   QWORD PTR [rip+0x658b]        # 0x409458
  402ecd:	jmp    0x402eaa
  402ecf:	nop
  402ed0:	call   0x402c70
  402ed5:	jmp    0x402e4e
  402eda:	nop
  402edb:	nop
  402edc:	nop
  402edd:	nop
  402ede:	nop
  402edf:	nop
  402ee0:	movsxd rax,DWORD PTR [rcx+0x3c]
  402ee4:	add    rcx,rax
  402ee7:	xor    eax,eax
  402ee9:	cmp    DWORD PTR [rcx],0x4550
  402eef:	je     0x402ef3
  402ef1:	repz ret 
  402ef3:	xor    eax,eax
  402ef5:	cmp    WORD PTR [rcx+0x18],0x20b
  402efb:	sete   al
  402efe:	ret    
  402eff:	nop
  402f00:	cmp    WORD PTR [rcx],0x5a4d
  402f05:	je     0x402f10
  402f07:	xor    eax,eax
  402f09:	ret    
  402f0a:	nop    WORD PTR [rax+rax*1+0x0]
  402f10:	jmp    0x402ee0
  402f12:	nop    DWORD PTR [rax+0x0]
  402f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f20:	movsxd rax,DWORD PTR [rcx+0x3c]
  402f24:	add    rcx,rax
  402f27:	movzx  eax,WORD PTR [rcx+0x14]
  402f2b:	lea    rax,[rcx+rax*1+0x18]
  402f30:	movzx  ecx,WORD PTR [rcx+0x6]
  402f34:	test   ecx,ecx
  402f36:	je     0x402f61
  402f38:	sub    ecx,0x1
  402f3b:	lea    rcx,[rcx+rcx*4]
  402f3f:	lea    r9,[rax+rcx*8+0x28]
  402f44:	mov    r8d,DWORD PTR [rax+0xc]
  402f48:	cmp    r8,rdx
  402f4b:	mov    rcx,r8
  402f4e:	ja     0x402f58
  402f50:	add    ecx,DWORD PTR [rax+0x8]
  402f53:	cmp    rdx,rcx
  402f56:	jb     0x402f63
  402f58:	add    rax,0x28
  402f5c:	cmp    rax,r9
  402f5f:	jne    0x402f44
  402f61:	xor    eax,eax
  402f63:	repz ret 
  402f65:	nop
  402f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f70:	push   rdi
  402f71:	push   rsi
  402f72:	push   rbx
  402f73:	sub    rsp,0x20
  402f77:	mov    rsi,rcx
  402f7a:	call   0x4032d8
  402f7f:	cmp    rax,0x8
  402f83:	ja     0x402fa0
  402f85:	mov    rbx,QWORD PTR [rip+0x2914]        # 0x4058a0
  402f8c:	xor    edi,edi
  402f8e:	cmp    WORD PTR [rbx],0x5a4d
  402f93:	je     0x402fb0
  402f95:	mov    rax,rdi
  402f98:	add    rsp,0x20
  402f9c:	pop    rbx
  402f9d:	pop    rsi
  402f9e:	pop    rdi
  402f9f:	ret    
  402fa0:	xor    edi,edi
  402fa2:	mov    rax,rdi
  402fa5:	add    rsp,0x20
  402fa9:	pop    rbx
  402faa:	pop    rsi
  402fab:	pop    rdi
  402fac:	ret    
  402fad:	nop    DWORD PTR [rax]
  402fb0:	mov    rcx,rbx
  402fb3:	call   0x402ee0
  402fb8:	test   eax,eax
  402fba:	je     0x402f95
  402fbc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402fc0:	add    rdx,rbx
  402fc3:	movzx  eax,WORD PTR [rdx+0x14]
  402fc7:	lea    rbx,[rdx+rax*1+0x18]
  402fcc:	movzx  eax,WORD PTR [rdx+0x6]
  402fd0:	test   eax,eax
  402fd2:	je     0x402f95
  402fd4:	sub    eax,0x1
  402fd7:	lea    rax,[rax+rax*4]
  402fdb:	lea    rdi,[rbx+rax*8+0x28]
  402fe0:	jmp    0x402feb
  402fe2:	add    rbx,0x28
  402fe6:	cmp    rbx,rdi
  402fe9:	je     0x402fa0
  402feb:	mov    r8d,0x8
  402ff1:	mov    rdx,rsi
  402ff4:	mov    rcx,rbx
  402ff7:	call   0x4032d0
  402ffc:	test   eax,eax
  402ffe:	jne    0x402fe2
  403000:	mov    rdi,rbx
  403003:	mov    rax,rdi
  403006:	add    rsp,0x20
  40300a:	pop    rbx
  40300b:	pop    rsi
  40300c:	pop    rdi
  40300d:	ret    
  40300e:	xchg   ax,ax
  403010:	push   rsi
  403011:	push   rbx
  403012:	sub    rsp,0x28
  403016:	mov    rbx,QWORD PTR [rip+0x2883]        # 0x4058a0
  40301d:	cmp    WORD PTR [rbx],0x5a4d
  403022:	je     0x403030
  403024:	xor    eax,eax
  403026:	add    rsp,0x28
  40302a:	pop    rbx
  40302b:	pop    rsi
  40302c:	ret    
  40302d:	nop    DWORD PTR [rax]
  403030:	mov    rsi,rcx
  403033:	mov    rcx,rbx
  403036:	call   0x402ee0
  40303b:	test   eax,eax
  40303d:	je     0x403024
  40303f:	sub    rsi,rbx
  403042:	mov    rcx,rbx
  403045:	mov    rdx,rsi
  403048:	add    rsp,0x28
  40304c:	pop    rbx
  40304d:	pop    rsi
  40304e:	jmp    0x402f20
  403053:	nop    DWORD PTR [rax]
  403056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403060:	push   rbx
  403061:	sub    rsp,0x20
  403065:	mov    rbx,QWORD PTR [rip+0x2834]        # 0x4058a0
  40306c:	xor    eax,eax
  40306e:	cmp    WORD PTR [rbx],0x5a4d
  403073:	je     0x403080
  403075:	add    rsp,0x20
  403079:	pop    rbx
  40307a:	ret    
  40307b:	nop    DWORD PTR [rax+rax*1+0x0]
  403080:	mov    rcx,rbx
  403083:	call   0x402ee0
  403088:	test   eax,eax
  40308a:	je     0x403075
  40308c:	movsxd rax,DWORD PTR [rbx+0x3c]
  403090:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  403095:	add    rsp,0x20
  403099:	pop    rbx
  40309a:	ret    
  40309b:	nop    DWORD PTR [rax+rax*1+0x0]
  4030a0:	push   rdi
  4030a1:	push   rsi
  4030a2:	push   rbx
  4030a3:	sub    rsp,0x20
  4030a7:	mov    rsi,QWORD PTR [rip+0x27f2]        # 0x4058a0
  4030ae:	xor    edi,edi
  4030b0:	mov    rbx,rcx
  4030b3:	cmp    WORD PTR [rsi],0x5a4d
  4030b8:	je     0x4030c5
  4030ba:	mov    rax,rdi
  4030bd:	add    rsp,0x20
  4030c1:	pop    rbx
  4030c2:	pop    rsi
  4030c3:	pop    rdi
  4030c4:	ret    
  4030c5:	mov    rcx,rsi
  4030c8:	call   0x402ee0
  4030cd:	test   eax,eax
  4030cf:	je     0x4030ba
  4030d1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4030d5:	add    rsi,rax
  4030d8:	movzx  eax,WORD PTR [rsi+0x14]
  4030dc:	lea    rdx,[rsi+rax*1+0x18]
  4030e1:	movzx  eax,WORD PTR [rsi+0x6]
  4030e5:	test   eax,eax
  4030e7:	je     0x4030ba
  4030e9:	sub    eax,0x1
  4030ec:	lea    rax,[rax+rax*4]
  4030f0:	lea    rax,[rdx+rax*8+0x28]
  4030f5:	test   BYTE PTR [rdx+0x27],0x20
  4030f9:	je     0x403104
  4030fb:	test   rbx,rbx
  4030fe:	je     0x403120
  403100:	sub    rbx,0x1
  403104:	add    rdx,0x28
  403108:	cmp    rdx,rax
  40310b:	jne    0x4030f5
  40310d:	xor    edi,edi
  40310f:	mov    rax,rdi
  403112:	add    rsp,0x20
  403116:	pop    rbx
  403117:	pop    rsi
  403118:	pop    rdi
  403119:	ret    
  40311a:	nop    WORD PTR [rax+rax*1+0x0]
  403120:	mov    rdi,rdx
  403123:	mov    rax,rdi
  403126:	add    rsp,0x20
  40312a:	pop    rbx
  40312b:	pop    rsi
  40312c:	pop    rdi
  40312d:	ret    
  40312e:	xchg   ax,ax
  403130:	push   rsi
  403131:	push   rbx
  403132:	sub    rsp,0x28
  403136:	mov    rsi,QWORD PTR [rip+0x2763]        # 0x4058a0
  40313d:	xor    ebx,ebx
  40313f:	cmp    WORD PTR [rsi],0x5a4d
  403144:	je     0x403150
  403146:	mov    rax,rbx
  403149:	add    rsp,0x28
  40314d:	pop    rbx
  40314e:	pop    rsi
  40314f:	ret    
  403150:	mov    rcx,rsi
  403153:	call   0x402ee0
  403158:	test   eax,eax
  40315a:	cmovne rbx,rsi
  40315e:	mov    rax,rbx
  403161:	add    rsp,0x28
  403165:	pop    rbx
  403166:	pop    rsi
  403167:	ret    
  403168:	nop    DWORD PTR [rax+rax*1+0x0]
  403170:	push   rsi
  403171:	push   rbx
  403172:	sub    rsp,0x28
  403176:	mov    rbx,QWORD PTR [rip+0x2723]        # 0x4058a0
  40317d:	xor    eax,eax
  40317f:	cmp    WORD PTR [rbx],0x5a4d
  403184:	je     0x403190
  403186:	add    rsp,0x28
  40318a:	pop    rbx
  40318b:	pop    rsi
  40318c:	ret    
  40318d:	nop    DWORD PTR [rax]
  403190:	mov    rsi,rcx
  403193:	mov    rcx,rbx
  403196:	call   0x402ee0
  40319b:	test   eax,eax
  40319d:	je     0x403186
  40319f:	sub    rsi,rbx
  4031a2:	mov    rcx,rbx
  4031a5:	mov    rdx,rsi
  4031a8:	call   0x402f20
  4031ad:	test   rax,rax
  4031b0:	je     0x4031c1
  4031b2:	mov    eax,DWORD PTR [rax+0x24]
  4031b5:	not    eax
  4031b7:	shr    eax,0x1f
  4031ba:	add    rsp,0x28
  4031be:	pop    rbx
  4031bf:	pop    rsi
  4031c0:	ret    
  4031c1:	xor    eax,eax
  4031c3:	jmp    0x403186
  4031c5:	nop
  4031c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031d0:	push   rbp
  4031d1:	push   rdi
  4031d2:	push   rsi
  4031d3:	push   rbx
  4031d4:	sub    rsp,0x28
  4031d8:	mov    rdi,QWORD PTR [rip+0x26c1]        # 0x4058a0
  4031df:	xor    ebp,ebp
  4031e1:	mov    esi,ecx
  4031e3:	cmp    WORD PTR [rdi],0x5a4d
  4031e8:	je     0x403200
  4031ea:	mov    rax,rbp
  4031ed:	add    rsp,0x28
  4031f1:	pop    rbx
  4031f2:	pop    rsi
  4031f3:	pop    rdi
  4031f4:	pop    rbp
  4031f5:	ret    
  4031f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403200:	mov    rcx,rdi
  403203:	call   0x402ee0
  403208:	test   eax,eax
  40320a:	je     0x4031ea
  40320c:	movsxd rax,DWORD PTR [rdi+0x3c]
  403210:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  403217:	test   edx,edx
  403219:	je     0x4031ea
  40321b:	mov    ebx,edx
  40321d:	mov    rcx,rdi
  403220:	mov    rdx,rbx
  403223:	call   0x402f20
  403228:	test   rax,rax
  40322b:	je     0x4031ea
  40322d:	add    rbx,rdi
  403230:	mov    rdx,rbx
  403233:	jne    0x403247
  403235:	jmp    0x4031ea
  403237:	nop    WORD PTR [rax+rax*1+0x0]
  403240:	sub    esi,0x1
  403243:	add    rdx,0x14
  403247:	mov    ecx,DWORD PTR [rdx+0x4]
  40324a:	test   ecx,ecx
  40324c:	jne    0x403255
  40324e:	mov    eax,DWORD PTR [rdx+0xc]
  403251:	test   eax,eax
  403253:	je     0x403270
  403255:	test   esi,esi
  403257:	jg     0x403240
  403259:	mov    ebp,DWORD PTR [rdx+0xc]
  40325c:	add    rbp,rdi
  40325f:	mov    rax,rbp
  403262:	add    rsp,0x28
  403266:	pop    rbx
  403267:	pop    rsi
  403268:	pop    rdi
  403269:	pop    rbp
  40326a:	ret    
  40326b:	nop    DWORD PTR [rax+rax*1+0x0]
  403270:	xor    ebp,ebp
  403272:	mov    rax,rbp
  403275:	add    rsp,0x28
  403279:	pop    rbx
  40327a:	pop    rsi
  40327b:	pop    rdi
  40327c:	pop    rbp
  40327d:	ret    
  40327e:	nop
  40327f:	nop
  403280:	push   rcx
  403281:	push   rax
  403282:	cmp    rax,0x1000
  403288:	lea    rcx,[rsp+0x18]
  40328d:	jb     0x4032a8
  40328f:	sub    rcx,0x1000
  403296:	or     QWORD PTR [rcx],0x0
  40329a:	sub    rax,0x1000
  4032a0:	cmp    rax,0x1000
  4032a6:	ja     0x40328f
  4032a8:	sub    rcx,rax
  4032ab:	or     QWORD PTR [rcx],0x0
  4032af:	pop    rax
  4032b0:	pop    rcx
  4032b1:	ret    
  4032b2:	nop
  4032b3:	nop
  4032b4:	nop
  4032b5:	nop
  4032b6:	nop
  4032b7:	nop
  4032b8:	nop
  4032b9:	nop
  4032ba:	nop
  4032bb:	nop
  4032bc:	nop
  4032bd:	nop
  4032be:	nop
  4032bf:	nop
  4032c0:	jmp    QWORD PTR [rip+0x62f2]        # 0x4095b8
  4032c6:	nop
  4032c7:	nop
  4032c8:	jmp    QWORD PTR [rip+0x62e2]        # 0x4095b0
  4032ce:	nop
  4032cf:	nop
  4032d0:	jmp    QWORD PTR [rip+0x62d2]        # 0x4095a8
  4032d6:	nop
  4032d7:	nop
  4032d8:	jmp    QWORD PTR [rip+0x62c2]        # 0x4095a0
  4032de:	nop
  4032df:	nop
  4032e0:	jmp    QWORD PTR [rip+0x62b2]        # 0x409598
  4032e6:	nop
  4032e7:	nop
  4032e8:	jmp    QWORD PTR [rip+0x62a2]        # 0x409590
  4032ee:	nop
  4032ef:	nop
  4032f0:	jmp    QWORD PTR [rip+0x6292]        # 0x409588
  4032f6:	nop
  4032f7:	nop
  4032f8:	jmp    QWORD PTR [rip+0x6282]        # 0x409580
  4032fe:	nop
  4032ff:	nop
  403300:	jmp    QWORD PTR [rip+0x6272]        # 0x409578
  403306:	nop
  403307:	nop
  403308:	jmp    QWORD PTR [rip+0x6262]        # 0x409570
  40330e:	nop
  40330f:	nop
  403310:	jmp    QWORD PTR [rip+0x6252]        # 0x409568
  403316:	nop
  403317:	nop
  403318:	jmp    QWORD PTR [rip+0x6242]        # 0x409560
  40331e:	nop
  40331f:	nop
  403320:	jmp    QWORD PTR [rip+0x6232]        # 0x409558
  403326:	nop
  403327:	nop
  403328:	jmp    QWORD PTR [rip+0x6222]        # 0x409550
  40332e:	nop
  40332f:	nop
  403330:	jmp    QWORD PTR [rip+0x6212]        # 0x409548
  403336:	nop
  403337:	nop
  403338:	jmp    QWORD PTR [rip+0x6202]        # 0x409540
  40333e:	nop
  40333f:	nop
  403340:	jmp    QWORD PTR [rip+0x61f2]        # 0x409538
  403346:	nop
  403347:	nop
  403348:	jmp    QWORD PTR [rip+0x61e2]        # 0x409530
  40334e:	nop
  40334f:	nop
  403350:	jmp    QWORD PTR [rip+0x61ca]        # 0x409520
  403356:	nop
  403357:	nop
  403358:	jmp    QWORD PTR [rip+0x61ba]        # 0x409518
  40335e:	nop
  40335f:	nop
  403360:	jmp    QWORD PTR [rip+0x61a2]        # 0x409508
  403366:	nop
  403367:	nop
  403368:	jmp    QWORD PTR [rip+0x6192]        # 0x409500
  40336e:	nop
  40336f:	nop
  403370:	jmp    QWORD PTR [rip+0x6182]        # 0x4094f8
  403376:	nop
  403377:	nop
  403378:	jmp    QWORD PTR [rip+0x6172]        # 0x4094f0
  40337e:	nop
  40337f:	nop
  403380:	jmp    QWORD PTR [rip+0x615a]        # 0x4094e0
  403386:	nop
  403387:	nop
  403388:	jmp    QWORD PTR [rip+0x614a]        # 0x4094d8
  40338e:	nop
  40338f:	nop
  403390:	jmp    QWORD PTR [rip+0x613a]        # 0x4094d0
  403396:	nop
  403397:	nop
  403398:	nop    DWORD PTR [rax+rax*1+0x0]
  4033a0:	mov    rax,QWORD PTR [rip+0x5649]        # 0x4089f0
  4033a7:	ret    
  4033a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4033b0:	mov    rax,rcx
  4033b3:	xchg   QWORD PTR [rip+0x5636],rax        # 0x4089f0
  4033ba:	ret    
  4033bb:	nop
  4033bc:	nop
  4033bd:	nop
  4033be:	nop
  4033bf:	nop
  4033c0:	jmp    QWORD PTR [rip+0x60fa]        # 0x4094c0
  4033c6:	nop
  4033c7:	nop
  4033c8:	jmp    QWORD PTR [rip+0x60ea]        # 0x4094b8
  4033ce:	nop
  4033cf:	nop
  4033d0:	jmp    QWORD PTR [rip+0x60da]        # 0x4094b0
  4033d6:	nop
  4033d7:	nop
  4033d8:	jmp    QWORD PTR [rip+0x60ca]        # 0x4094a8
  4033de:	nop
  4033df:	nop
  4033e0:	jmp    QWORD PTR [rip+0x60ba]        # 0x4094a0
  4033e6:	nop
  4033e7:	nop
  4033e8:	jmp    QWORD PTR [rip+0x60aa]        # 0x409498
  4033ee:	nop
  4033ef:	nop
  4033f0:	jmp    QWORD PTR [rip+0x609a]        # 0x409490
  4033f6:	nop
  4033f7:	nop
  4033f8:	jmp    QWORD PTR [rip+0x608a]        # 0x409488
  4033fe:	nop
  4033ff:	nop
  403400:	jmp    QWORD PTR [rip+0x607a]        # 0x409480
  403406:	nop
  403407:	nop
  403408:	jmp    QWORD PTR [rip+0x606a]        # 0x409478
  40340e:	nop
  40340f:	nop
  403410:	jmp    QWORD PTR [rip+0x605a]        # 0x409470
  403416:	nop
  403417:	nop
  403418:	jmp    QWORD PTR [rip+0x604a]        # 0x409468
  40341e:	nop
  40341f:	nop
  403420:	jmp    QWORD PTR [rip+0x603a]        # 0x409460
  403426:	nop
  403427:	nop
  403428:	jmp    QWORD PTR [rip+0x602a]        # 0x409458
  40342e:	nop
  40342f:	nop
  403430:	jmp    QWORD PTR [rip+0x601a]        # 0x409450
  403436:	nop
  403437:	nop
  403438:	jmp    QWORD PTR [rip+0x600a]        # 0x409448
  40343e:	nop
  40343f:	nop
  403440:	jmp    QWORD PTR [rip+0x5ffa]        # 0x409440
  403446:	nop
  403447:	nop
  403448:	jmp    QWORD PTR [rip+0x5fea]        # 0x409438
  40344e:	nop
  40344f:	nop
  403450:	jmp    QWORD PTR [rip+0x5fda]        # 0x409430
  403456:	nop
  403457:	nop
  403458:	jmp    QWORD PTR [rip+0x5fca]        # 0x409428
  40345e:	nop
  40345f:	nop
  403460:	jmp    QWORD PTR [rip+0x5fba]        # 0x409420
  403466:	nop
  403467:	nop
  403468:	jmp    QWORD PTR [rip+0x5faa]        # 0x409418
  40346e:	nop
  40346f:	nop
  403470:	jmp    QWORD PTR [rip+0x5f9a]        # 0x409410
  403476:	nop
  403477:	nop
  403478:	nop    DWORD PTR [rax+rax*1+0x0]
  403480:	push   r13
  403482:	push   r12
  403484:	push   rbp
  403485:	push   rdi
  403486:	push   rsi
  403487:	push   rbx
  403488:	sub    rsp,0x28
  40348c:	mov    ebx,ecx
  40348e:	mov    rbp,rdx
  403491:	call   0x401ed0
  403496:	lea    rdx,[rip+0x1b63]        # 0x405000
  40349d:	xor    ecx,ecx
  40349f:	call   0x401d38
  4034a4:	lea    rcx,[rip+0x20f5]        # 0x4055a0
  4034ab:	call   0x401d30
  4034b0:	call   0x401d28
  4034b5:	lea    rcx,[rip+0x20e4]        # 0x4055a0
  4034bc:	mov    rdx,rax
  4034bf:	mov    r12,rax
  4034c2:	call   0x401d48
  4034c7:	mov    rcx,r12
  4034ca:	call   0x401cf8
  4034cf:	lea    rdx,[rip+0x20d1]        # 0x4055a7
  4034d6:	lea    rcx,[rip+0x20c3]        # 0x4055a0
  4034dd:	call   0x401d50
  4034e2:	xor    edx,edx
  4034e4:	cmp    ebx,0x1
  4034e7:	jle    0x4035b2
  4034ed:	cmp    ebx,0x3
  4034f0:	jle    0x403588
  4034f6:	mov    rcx,QWORD PTR [rbp+0x8]
  4034fa:	lea    rdx,[rip+0x20ac]        # 0x4055ad
  403501:	xor    r13d,r13d
  403504:	call   0x4032e0
  403509:	test   eax,eax
  40350b:	jne    0x403518
  40350d:	mov    r13,QWORD PTR [rbp+0x10]
  403511:	sub    ebx,0x2
  403514:	add    rbp,0x10
  403518:	mov    r12,QWORD PTR [rbp+0x8]
  40351c:	lea    rdi,[rip+0x1ade]        # 0x405001
  403523:	mov    ecx,0x5
  403528:	mov    rsi,r12
  40352b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40352d:	je     0x4035f4
  403533:	cmp    ebx,0x4
  403536:	jne    0x4035a2
  403538:	lea    rdx,[rip+0x1c87]        # 0x4051c6
  40353f:	mov    rcx,r12
  403542:	call   0x4032e0
  403547:	test   eax,eax
  403549:	je     0x4035c5
  40354b:	lea    rdx,[rip+0x1b0d]        # 0x40505f
  403552:	mov    rcx,r12
  403555:	call   0x4032e0
  40355a:	test   eax,eax
  40355c:	jne    0x4035d5
  40355e:	xor    r9d,r9d
  403561:	xor    r8d,r8d
  403564:	cmp    ebx,0x4
  403567:	lea    rax,[rip+0xffffffffffffe692]        # 0x401c00
  40356e:	je     0x4035cf
  403570:	mov    rcx,QWORD PTR [rbp+0x10]
  403574:	mov    rdx,r13
  403577:	call   rax
  403579:	xor    eax,eax
  40357b:	add    rsp,0x28
  40357f:	pop    rbx
  403580:	pop    rsi
  403581:	pop    rdi
  403582:	pop    rbp
  403583:	pop    r12
  403585:	pop    r13
  403587:	ret    
  403588:	mov    r12,QWORD PTR [rbp+0x8]
  40358c:	lea    rdx,[rip+0x1a6e]        # 0x405001
  403593:	mov    rcx,r12
  403596:	call   0x4032e0
  40359b:	test   eax,eax
  40359d:	je     0x4035f4
  40359f:	xor    r13d,r13d
  4035a2:	cmp    ebx,0x3
  4035a5:	je     0x4035ff
  4035a7:	lea    eax,[rbx-0x3]
  4035aa:	cmp    eax,0x1
  4035ad:	jbe    0x40354b
  4035af:	mov    rdx,r12
  4035b2:	xor    ecx,ecx
  4035b4:	add    rsp,0x28
  4035b8:	pop    rbx
  4035b9:	pop    rsi
  4035ba:	pop    rdi
  4035bb:	pop    rbp
  4035bc:	pop    r12
  4035be:	pop    r13
  4035c0:	jmp    0x401580
  4035c5:	lea    rax,[rip+0xffffffffffffe3c4]        # 0x401990
  4035cc:	xor    r9d,r9d
  4035cf:	mov    r8,QWORD PTR [rbp+0x18]
  4035d3:	jmp    0x403570
  4035d5:	lea    rdx,[rip+0x1b26]        # 0x405102
  4035dc:	mov    rcx,r12
  4035df:	call   0x4032e0
  4035e4:	test   eax,eax
  4035e6:	mov    r9d,0x1
  4035ec:	je     0x403561
  4035f2:	jmp    0x4035af
  4035f4:	mov    rdx,QWORD PTR [rbp+0x10]
  4035f8:	mov    ecx,0x1
  4035fd:	jmp    0x4035b4
  4035ff:	lea    rdx,[rip+0x1a15]        # 0x40501b
  403606:	mov    rcx,r12
  403609:	call   0x4032e0
  40360e:	test   eax,eax
  403610:	jne    0x40354b
  403616:	lea    rax,[rip+0xffffffffffffe333]        # 0x401950
  40361d:	xor    r9d,r9d
  403620:	xor    r8d,r8d
  403623:	jmp    0x403570
  403628:	nop
  403629:	nop
  40362a:	nop
  40362b:	nop
  40362c:	nop
  40362d:	nop
  40362e:	nop
  40362f:	nop
  403630:	(bad)  
  403631:	(bad)  
  403632:	(bad)  
  403633:	(bad)  
  403634:	(bad)  
  403635:	(bad)  
  403636:	(bad)  
  403637:	inc    DWORD PTR [rax]
  403639:	add    BYTE PTR [rax],al
  40363b:	add    BYTE PTR [rax],al
  40363d:	add    BYTE PTR [rax],al
  40363f:	add    bh,bh
  403641:	(bad)  
  403642:	(bad)  
  403643:	(bad)  
  403644:	(bad)  
  403645:	(bad)  
  403646:	(bad)  
  403647:	inc    DWORD PTR [rax]
  403649:	add    BYTE PTR [rax],al
  40364b:	add    BYTE PTR [rax],al
  40364d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	rex.W
  404011:	add    BYTE PTR ss:[rax],al
	...
  40401d:	add    BYTE PTR [rax],al
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	inc    DWORD PTR [rax]
	...
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rax+0x4033],ah
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rax+0x4033],dh
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rdx],dh
  404071:	movabs ds:0x2b992ddf,al
  40407a:	add    BYTE PTR [rax],al
  40407c:	add    BYTE PTR [rax],al
  40407e:	add    BYTE PTR [rax],al
  404080:	int    0x5d
  404082:	and    dl,dl
  404084:	data16 (bad) 
  404086:	(bad)  
  404087:	inc    DWORD PTR [rax]
  404089:	add    BYTE PTR [rax],al
  40408b:	add    BYTE PTR [rax],al
  40408d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	add    BYTE PTR [rax+0x65],ch
  405003:	ins    BYTE PTR es:[rdi],dx
  405004:	jo     0x405006
  405006:	push   rax
  405007:	jb     0x405072
  405009:	outs   dx,BYTE PTR ds:[rsi]
  40500a:	je     0x40502c
  40500c:	push   0x706c65
  405011:	pop    rbx
  405012:	rex.XB
  405013:	rex.WRXB
  405014:	rex.WRB
  405015:	rex.WRB
  405016:	rex.B
  405017:	rex.WRX
  405018:	rex.R pop rbp
  40501a:	add    BYTE PTR [rbx+0x65],dh
  40501d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  405021:	outs   dx,BYTE PTR ds:[rsi]
  405022:	jae    0x405024
  405024:	add    BYTE PTR [rax],al
  405026:	add    BYTE PTR [rax],al
  405028:	imul   r14,QWORD PTR [rbx+0x74],0x63657320
  405030:	je     0x40509b
  405032:	outs   dx,DWORD PTR ds:[rsi]
  405033:	outs   dx,BYTE PTR ds:[rsi]
  405034:	jae    0x405056
  405036:	movsxd ebp,DWORD PTR [rdi+0x6e]
  405039:	je     0x40509c
  40503b:	imul   ebp,DWORD PTR [rsi+0x69],0x7220676e
  405042:	gs jae 0x4050b4
  405045:	jne    0x4050b9
  405047:	movsxd esp,DWORD PTR [rbp+0x73]
  40504a:	and    BYTE PTR [rcx+0x6e],ch
  40504d:	and    BYTE PTR [rcx+0x6e],ah
  405050:	and    BYTE PTR [rbp+0x6c],ah
  405053:	data16 and BYTE PTR [rsi+0x49],al
  405057:	rex.WR
  405058:	add    BYTE PTR [r14+0x49],r8b
  40505c:	rex.WR
  40505d:	add    BYTE PTR [r9+rbp*2+0x73],r13b
  405062:	je     0x405064
  405064:	add    BYTE PTR [rax],al
  405066:	add    BYTE PTR [rax],al
  405068:	imul   r14,QWORD PTR [rbx+0x74],0x73657220
  405070:	outs   dx,DWORD PTR ds:[rsi]
  405071:	jne    0x4050e5
  405073:	movsxd esp,DWORD PTR [rbp+0x73]
  405076:	or     cl,BYTE PTR [rcx+0x66]
  405079:	and    BYTE PTR [rbx+0x45],dl
  40507c:	rex.XB push r12
  40507e:	rex.WB
  40507f:	rex.WRXB
  405080:	rex.WRX and BYTE PTR [rcx+0x73],r13b
  405084:	and    BYTE PTR [rdi+0x69],ah
  405087:	jbe    0x4050ee
  405089:	outs   dx,BYTE PTR ds:[rsi]
  40508a:	sub    al,0x20
  40508c:	outs   dx,DWORD PTR ds:[rsi]
  40508d:	outs   dx,BYTE PTR ds:[rsi]
  40508e:	ins    BYTE PTR es:[rdi],dx
  40508f:	jns    0x4050b1
  405091:	ins    BYTE PTR es:[rdi],dx
  405092:	imul   esi,DWORD PTR [rbx+0x74],0x73657220
  405099:	outs   dx,DWORD PTR ds:[rsi]
  40509a:	jne    0x40510e
  40509c:	movsxd esp,DWORD PTR [rbp+0x73]
  40509f:	and    BYTE PTR [rcx+0x6e],ch
  4050a2:	and    BYTE PTR [rax+rbp*2+0x69],dh
  4050a6:	jae    0x4050c8
  4050a8:	jae    0x40510f
  4050aa:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4050ae:	outs   dx,BYTE PTR ds:[rsi]
  4050af:	or     cl,BYTE PTR [rcx+0x66]
  4050b2:	and    BYTE PTR [rax+0x41],dl
  4050b5:	push   rsp
  4050b6:	rex.W and BYTE PTR [rcx+0x73],bpl
  4050ba:	and    BYTE PTR [rdi+0x69],ah
  4050bd:	jbe    0x405124
  4050bf:	outs   dx,BYTE PTR ds:[rsi]
  4050c0:	sub    al,0x20
  4050c2:	outs   dx,DWORD PTR ds:[rsi]
  4050c3:	outs   dx,BYTE PTR ds:[rsi]
  4050c4:	ins    BYTE PTR es:[rdi],dx
  4050c5:	jns    0x4050e7
  4050c7:	ins    BYTE PTR es:[rdi],dx
  4050c8:	imul   esi,DWORD PTR [rbx+0x74],0x74616d20
  4050cf:	movsxd ebp,DWORD PTR [rax+0x69]
  4050d2:	outs   dx,BYTE PTR ds:[rsi]
  4050d3:	and    BYTE PTR [edx+0x65],dh
  4050d7:	jae    0x405148
  4050d9:	jne    0x40514d
  4050db:	movsxd esp,DWORD PTR [rbp+0x73]
  4050de:	add    BYTE PTR [rsi+0x49],al
  4050e1:	rex.WR
  4050e2:	and    BYTE PTR [r11+0x50],r11b
  4050e6:	push   r12
  4050e8:	rex.W pop rbp
  4050ea:	add    BYTE PTR [rbx+0x45],dl
  4050ed:	rex.XB push r12
  4050ef:	rex.WB
  4050f0:	rex.WRXB
  4050f1:	rex.WRX add BYTE PTR [rbx+0x2d],r11b
  4050f5:	sub    eax,0x74636573
  4050fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x5d732520
  405101:	add    BYTE PTR [rbp+riz*2+0x74],ah
  405105:	(bad)  
  405106:	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x0
  40510e:	add    BYTE PTR [rax],al
  405110:	imul   r14,QWORD PTR [rbx+0x74],0x73657220
  405118:	outs   dx,DWORD PTR ds:[rsi]
  405119:	jne    0x40518d
  40511b:	movsxd esp,DWORD PTR [rbp+0x73]
  40511e:	and    BYTE PTR [rdi+0x69],dh
  405121:	je     0x40518b
  405123:	and    BYTE PTR [rbp+riz*2+0x74],ah
  405127:	(bad)  
  405128:	imul   ebp,DWORD PTR [rbx+rsi*2+0xa],0x53206649
  405130:	rex.RB
  405131:	rex.XB push r12
  405133:	rex.WB
  405134:	rex.WRXB
  405135:	rex.WRX and BYTE PTR [rcx+0x73],r13b
  405139:	and    BYTE PTR [rdi+0x69],ah
  40513c:	jbe    0x4051a3
  40513e:	outs   dx,BYTE PTR ds:[rsi]
  40513f:	sub    al,0x20
  405141:	outs   dx,DWORD PTR ds:[rsi]
  405142:	outs   dx,BYTE PTR ds:[rsi]
  405143:	ins    BYTE PTR es:[rdi],dx
  405144:	jns    0x405166
  405146:	ins    BYTE PTR es:[rdi],dx
  405147:	imul   esi,DWORD PTR [rbx+0x74],0x73657220
  40514e:	outs   dx,DWORD PTR ds:[rsi]
  40514f:	jne    0x4051c3
  405151:	movsxd esp,DWORD PTR [rbp+0x73]
  405154:	and    BYTE PTR [rcx+0x6e],ch
  405157:	and    BYTE PTR [rax+rbp*2+0x69],dh
  40515b:	jae    0x40517d
  40515d:	jae    0x4051c4
  40515f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  405163:	outs   dx,BYTE PTR ds:[rsi]
  405164:	or     cl,BYTE PTR [rcx+0x66]
  405167:	and    BYTE PTR [rax+0x41],dl
  40516a:	push   rsp
  40516b:	rex.W and BYTE PTR [rcx+0x73],bpl
  40516f:	and    BYTE PTR [rdi+0x69],ah
  405172:	jbe    0x4051d9
  405174:	outs   dx,BYTE PTR ds:[rsi]
  405175:	sub    al,0x20
  405177:	outs   dx,DWORD PTR ds:[rsi]
  405178:	outs   dx,BYTE PTR ds:[rsi]
  405179:	ins    BYTE PTR es:[rdi],dx
  40517a:	jns    0x40519c
  40517c:	ins    BYTE PTR es:[rdi],dx
  40517d:	imul   esi,DWORD PTR [rbx+0x74],0x74616d20
  405184:	movsxd ebp,DWORD PTR [rax+0x69]
  405187:	outs   dx,BYTE PTR ds:[rsi]
  405188:	and    BYTE PTR [edx+0x65],dh
  40518c:	jae    0x4051fd
  40518e:	jne    0x405202
  405190:	movsxd esp,DWORD PTR [rbp+0x73]
  405193:	or     al,BYTE PTR [rbp+riz*2+0x74]
  405197:	(bad)  
  405198:	imul   ebp,DWORD PTR [rbx+rsi*2+0x20],0x6c636e69
  4051a0:	jne    0x405206
  4051a2:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  4051a7:	and    BYTE PTR [rbx+0x65],dh
  4051aa:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4051ae:	outs   dx,BYTE PTR ds:[rsi]
  4051af:	sub    al,0x20
  4051b1:	jae    0x40521c
  4051b3:	jp     0x40521a
  4051b5:	and    BYTE PTR [rcx+0x6e],ah
  4051b8:	and    BYTE PTR fs:[rbx+0x6f],ah
  4051bc:	ins    DWORD PTR es:[rdi],dx
  4051bd:	jo     0x405231
  4051bf:	gs jae 0x405235
  4051c2:	imul   ebp,DWORD PTR [rdi+0x6e],0x74786500
  4051c9:	jb     0x40522c
  4051cb:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4051cf:	add    BYTE PTR [rbp+0x78],al
  4051d2:	je     0x405246
  4051d4:	(bad)  
  4051d5:	movsxd esi,DWORD PTR [rax+riz*1+0x61]
  4051d9:	and    BYTE PTR [rdx+0x65],dh
  4051dc:	jae    0x40524d
  4051de:	jne    0x405252
  4051e0:	movsxd esp,DWORD PTR [rbp+0x20]
  4051e3:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6f74
  4051ea:	and    BYTE PTR [rbx+0x74],dh
  4051ed:	outs   dx,DWORD PTR fs:[rsi]
  4051ef:	jne    0x405265
  4051f1:	add    BYTE PTR [rsi+0x49],al
  4051f4:	rex.WR
  4051f5:	and    BYTE PTR [r8+0x41],r10b
  4051f9:	push   rsp
  4051fa:	rex.W add BYTE PTR [rbp+0x6e],dl
  4051fe:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405202:	outs   dx,BYTE PTR ds:[rsi]
  405203:	and    BYTE PTR [rbx+0x6f],ah
  405206:	ins    DWORD PTR es:[rdi],dx
  405207:	ins    DWORD PTR es:[rdi],dx
  405208:	(bad)  
  405209:	outs   dx,BYTE PTR ds:[rsi]
  40520a:	and    BYTE PTR fs:[rip+0xa0a73],ah        # 0x4a5c84
  405211:	add    BYTE PTR [rax],al
  405213:	add    BYTE PTR [rax],al
  405215:	add    BYTE PTR [rax],al
  405217:	add    BYTE PTR [rax],ah
  405219:	and    BYTE PTR [rbx+0x4f],al
  40521c:	rex.WRB
  40521d:	rex.WRB
  40521e:	rex.B
  40521f:	rex.WRX
  405220:	and    BYTE PTR [rax],r12b
  405223:	and    BYTE PTR [rax+rbp*2+0x65],dl
  405227:	and    BYTE PTR [rax],ch
  405229:	outs   dx,DWORD PTR ds:[rsi]
  40522a:	jo     0x4052a0
  40522c:	imul   ebp,DWORD PTR [rdi+0x6e],0x20296c61
  405233:	movsxd ebp,DWORD PTR [rdi+0x6d]
  405236:	ins    DWORD PTR es:[rdi],dx
  405237:	(bad)  
  405238:	outs   dx,BYTE PTR ds:[rsi]
  405239:	and    BYTE PTR fs:[rdi+rbp*2+0x20],dh
  40523e:	gs js  0x4052b1
  405241:	ins    BYTE PTR es:[rdi],dx
  405242:	(bad)  
  405243:	imul   ebp,DWORD PTR [rsi+0xa],0x20200000
  40524a:	rex.RX
  40524b:	rex.WB
  40524c:	rex.WR
  40524d:	and    BYTE PTR [r8],r12b
  405250:	and    BYTE PTR [rax],ah
  405252:	and    BYTE PTR [rax],ah
  405254:	rex.B outs dx,BYTE PTR ds:[rsi]
  405256:	and    BYTE PTR [rbp+0x6c],ah
  405259:	data16 and BYTE PTR [rsi+0x69],ah
  40525d:	ins    BYTE PTR es:[rdi],dx
  40525e:	and    BYTE PTR gs:[rax],ch
  405261:	(bad)  
  405262:	and    BYTE PTR [rdx+0x69],ah
  405265:	outs   dx,BYTE PTR ds:[rsi]
  405266:	(bad)  
  405267:	jb     0x4052e2
  405269:	and    BYTE PTR [rdi+0x72],ch
  40526c:	and    BYTE PTR [rcx+0x20],ah
  40526f:	jae    0x4052d9
  405271:	(bad)  
  405272:	jb     0x4052d9
  405274:	and    BYTE PTR fs:[rcx+rbp*2+0x62],ch
  405279:	jb     0x4052dc
  40527b:	jb     0x4052f6
  40527d:	sub    DWORD PTR [rdx],ecx
  40527f:	add    BYTE PTR [rax],ah
  405281:	and    BYTE PTR [rsi+0x49],al
  405284:	rex.WR
  405285:	and    BYTE PTR [r8],r12b
  405288:	and    BYTE PTR [rax],ah
  40528a:	and    BYTE PTR [rax],ah
  40528c:	rex.B outs dx,BYTE PTR ds:[rsi]
  40528e:	and    BYTE PTR [rbp+0x6c],ah
  405291:	data16 and BYTE PTR [rsi+0x69],ah
  405295:	ins    BYTE PTR es:[rdi],dx
  405296:	and    BYTE PTR gs:[rax],ch
  405299:	(bad)  
  40529a:	and    BYTE PTR [rdx+0x69],ah
  40529d:	outs   dx,BYTE PTR ds:[rsi]
  40529e:	(bad)  
  40529f:	jb     0x40531a
  4052a1:	and    BYTE PTR [rdi+0x72],ch
  4052a4:	and    BYTE PTR [rcx+0x20],ah
  4052a7:	jae    0x405311
  4052a9:	(bad)  
  4052aa:	jb     0x405311
  4052ac:	and    BYTE PTR fs:[rcx+rbp*2+0x62],ch
  4052b1:	jb     0x405314
  4052b3:	jb     0x40532e
  4052b5:	sub    DWORD PTR [rdx],ecx
  4052b7:	and    BYTE PTR [rax],ah
  4052b9:	and    BYTE PTR [rax],ah
  4052bb:	and    BYTE PTR [rax],ah
  4052bd:	and    BYTE PTR [rax],ah
  4052bf:	and    BYTE PTR [rax],ah
  4052c1:	and    BYTE PTR [rax],ah
  4052c3:	outs   dx,DWORD PTR ds:[rsi]
  4052c4:	jb     0x4052e6
  4052c6:	(bad)  
  4052c7:	and    BYTE PTR [rbx+0x6f],ah
  4052ca:	ins    DWORD PTR es:[rdi],dx
  4052cb:	jo     0x405336
  4052cd:	ins    BYTE PTR es:[rdi],dx
  4052ce:	gs and BYTE PTR fs:[rdx+0x65],dh
  4052d3:	jae    0x405344
  4052d5:	jne    0x405349
  4052d7:	movsxd esp,DWORD PTR [rbp+0x20]
  4052da:	imul   bp,WORD PTR [rbp+riz*2+0xa],0x5b00
  4052e1:	push   rax
  4052e2:	push   r12
  4052e4:	rex.W pop rbp
  4052e6:	add    BYTE PTR [rax],al
  4052e8:	and    BYTE PTR [rax],ah
  4052ea:	push   rax
  4052eb:	push   r12
  4052ed:	rex.W and BYTE PTR [rax],spl
  4052f0:	and    BYTE PTR [rax],ah
  4052f2:	and    BYTE PTR [rax],ah
  4052f4:	rex.B outs dx,BYTE PTR ds:[rsi]
  4052f6:	and    BYTE PTR [rax],ch
  4052f8:	outs   dx,DWORD PTR ds:[rsi]
  4052f9:	jo     0x40536f
  4052fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x20296c61
  405302:	jb     0x405369
  405304:	jae    0x405375
  405306:	jne    0x40537a
  405308:	movsxd esp,DWORD PTR [rbp+0x20]
  40530b:	jo     0x40536e
  40530d:	je     0x405377
  40530f:	and    BYTE PTR [rax],ch
  405311:	ins    DWORD PTR es:[rdi],dx
  405312:	(bad)  
  405313:	jns    0x405335
  405315:	(bad)  
  405316:	and    BYTE PTR gs:[rax+0x61],dh
  40531a:	jb     0x405390
  40531c:	imul   esp,DWORD PTR [rcx+0x6c],0x50000a29
  405323:	push   r12
  405325:	rex.W add BYTE PTR [rax],spl
  405328:	and    BYTE PTR [rax+0x41],dl
  40532b:	push   rsp
  40532c:	rex.W and BYTE PTR [rax],spl
  40532f:	and    BYTE PTR [rax],ah
  405331:	and    BYTE PTR [rax],ah
  405333:	and    BYTE PTR [r10+0x65],sil
  405337:	jae    0x4053a8
  405339:	jne    0x4053ad
  40533b:	movsxd esp,DWORD PTR [rbp+0x20]
  40533e:	jo     0x4053a1
  405340:	je     0x4053aa
  405342:	or     al,BYTE PTR [rax]
  405344:	or     al,BYTE PTR [rax]
  405346:	and    eax,0x73250073
  40534b:	or     al,BYTE PTR [rax]
  40534d:	add    BYTE PTR [rax],al
  40534f:	add    BYTE PTR [rbp+0x73],dl
  405352:	(bad)  
  405353:	cmp    cl,BYTE PTR gs:[edx]
  405357:	and    BYTE PTR [rax],ah
  405359:	addr32 jb 0x4053c1
  40535c:	jae    0x4053cd
  40535e:	jne    0x4053d2
  405360:	movsxd esp,DWORD PTR [rbp+0x20]
  405363:	pop    rbx
  405364:	sub    eax,0x6365732d
  405369:	je     0x4053d4
  40536b:	outs   dx,DWORD PTR ds:[rsi]
  40536c:	outs   dx,BYTE PTR ds:[rsi]
  40536d:	and    BYTE PTR [rbx+0x45],dl
  405370:	rex.XB push r12
  405372:	rex.WB
  405373:	rex.WRXB
  405374:	rex.WRX pop rbp
  405376:	and    BYTE PTR [rbx+0x4f],al
  405379:	rex.WRB
  40537a:	rex.WRB
  40537b:	rex.B
  40537c:	rex.WRX
  40537d:	and    BYTE PTR [rbx+0x41],r11b
  405381:	push   rdx
  405382:	rex.RXB push r11
  405384:	cs cs cs pop rbp
  405388:	or     cl,BYTE PTR [rdx]
  40538a:	rex.XB outs dx,DWORD PTR ds:[rsi]
  40538c:	ins    DWORD PTR es:[rdi],dx
  40538d:	ins    DWORD PTR es:[rdi],dx
  40538e:	(bad)  
  40538f:	outs   dx,BYTE PTR ds:[rsi]
  405390:	fs jae 0x4053cd
  405393:	or     ah,BYTE PTR [rax]
  405395:	and    BYTE PTR [rax+0x65],ch
  405398:	ins    BYTE PTR es:[rdi],dx
  405399:	jo     0x4053bb
  40539b:	and    BYTE PTR [rax],ah
  40539d:	and    BYTE PTR [rax],ah
  40539f:	and    BYTE PTR [rax],ah
  4053a1:	and    BYTE PTR [rax],ah
  4053a3:	and    BYTE PTR [rax],ah
  4053a5:	and    BYTE PTR [rax],ah
  4053a7:	and    BYTE PTR [rax],ah
  4053a9:	and    BYTE PTR [rax],ah
  4053ab:	and    BYTE PTR [rax],ah
  4053ad:	and    BYTE PTR [rax],ah
  4053af:	and    BYTE PTR [rbx+0x68],dl
  4053b2:	outs   dx,DWORD PTR ds:[rsi]
  4053b3:	ja     0x4053d5
  4053b5:	je     0x40541f
  4053b7:	imul   esi,DWORD PTR [rbx+0x20],0x6f666e69
  4053be:	jb     0x40542d
  4053c0:	(bad)  
  4053c1:	je     0x40542c
  4053c3:	outs   dx,DWORD PTR ds:[rsi]
  4053c4:	outs   dx,BYTE PTR ds:[rsi]
  4053c5:	or     ah,BYTE PTR [rax]
  4053c7:	and    BYTE PTR [rbx+0x65],dh
  4053ca:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4053ce:	outs   dx,BYTE PTR ds:[rsi]
  4053cf:	jae    0x4053f1
  4053d1:	and    BYTE PTR [rax],ah
  4053d3:	and    BYTE PTR [rax],ah
  4053d5:	and    BYTE PTR [rax],ah
  4053d7:	and    BYTE PTR [rax],ah
  4053d9:	and    BYTE PTR [rax],ah
  4053db:	and    BYTE PTR [rax],ah
  4053dd:	and    BYTE PTR [rax],ah
  4053df:	and    BYTE PTR [rax],ah
  4053e1:	and    BYTE PTR [rcx+rbp*2+0x73],cl
  4053e5:	je     0x405407
  4053e7:	jb     0x40544e
  4053e9:	jae    0x40545a
  4053eb:	jne    0x40545f
  4053ed:	movsxd esp,DWORD PTR [rbp+0x20]
  4053f0:	jae    0x405457
  4053f2:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4053f6:	outs   dx,BYTE PTR ds:[rsi]
  4053f7:	jae    0x405403
  4053f9:	and    BYTE PTR [rax],ah
  4053fb:	ins    BYTE PTR es:[rdi],dx
  4053fc:	imul   esi,DWORD PTR [rbx+0x74],0x20202020
  405403:	and    BYTE PTR [rax],ah
  405405:	and    BYTE PTR [rax],ah
  405407:	and    BYTE PTR [rax],ah
  405409:	and    BYTE PTR [rax],ah
  40540b:	and    BYTE PTR [rax],ah
  40540d:	and    BYTE PTR [rax],ah
  40540f:	and    BYTE PTR [rax],ah
  405411:	and    BYTE PTR [rax],ah
  405413:	and    BYTE PTR [rax],ah
  405415:	imul   r14,QWORD PTR [rbx+0x74],0x73657220
  40541d:	outs   dx,DWORD PTR ds:[rsi]
  40541e:	jne    0x405492
  405420:	movsxd esp,DWORD PTR [rbp+0x73]
  405423:	or     ah,BYTE PTR [rax]
  405425:	and    BYTE PTR [rbp+riz*2+0x74],ah
  405429:	(bad)  
  40542a:	imul   ebp,DWORD PTR [rbx+rsi*2+0x20],0x20202020
  405432:	and    BYTE PTR [rax],ah
  405434:	and    BYTE PTR [rax],ah
  405436:	and    BYTE PTR [rax],ah
  405438:	and    BYTE PTR [rax],ah
  40543a:	and    BYTE PTR [rax],ah
  40543c:	and    BYTE PTR [rax],ah
  40543e:	and    BYTE PTR [rax],ah
  405440:	imul   r14,QWORD PTR [rbx+0x74],0x73657220
  405448:	outs   dx,DWORD PTR ds:[rsi]
  405449:	jne    0x4054bd
  40544b:	movsxd esp,DWORD PTR [rbp+0x73]
  40544e:	and    BYTE PTR [rdi+0x69],dh
  405451:	je     0x4054bb
  405453:	and    BYTE PTR [rbp+riz*2+0x74],ah
  405457:	(bad)  
  405458:	imul   ebp,DWORD PTR [rbx+rsi*2+0xa],0x78652020
  405460:	je     0x4054d4
  405462:	(bad)  
  405463:	movsxd esi,DWORD PTR [rax+riz*1+0x20]
  405467:	and    BYTE PTR [rax],ah
  405469:	and    BYTE PTR [rax],ah
  40546b:	and    BYTE PTR [rax],ah
  40546d:	and    BYTE PTR [rax],ah
  40546f:	and    BYTE PTR [rax],ah
  405471:	and    BYTE PTR [rax],ah
  405473:	and    BYTE PTR [rax],ah
  405475:	and    BYTE PTR [rax],ah
  405477:	and    BYTE PTR [rbp+0x78],al
  40547a:	je     0x4054ee
  40547c:	(bad)  
  40547d:	movsxd esi,DWORD PTR [rax+riz*1+0x61]
  405481:	and    BYTE PTR [rdx+0x65],dh
  405484:	jae    0x4054f5
  405486:	jne    0x4054fa
  405488:	movsxd esp,DWORD PTR [rbp+0xa]
  40548b:	or     dl,BYTE PTR [rbp+0x73]
  40548e:	and    BYTE PTR gs:[rdi],ah
  405491:	addr32 jb 0x4054f9
  405494:	jae    0x405505
  405496:	jne    0x40550a
  405498:	movsxd esp,DWORD PTR [rbp+0x20]
  40549b:	push   0x20706c65
  4054a0:	rex.XB
  4054a1:	rex.WRXB
  4054a2:	rex.WRB
  4054a3:	rex.WRB
  4054a4:	rex.B
  4054a5:	rex.WRX
  4054a6:	rex.R (bad) 
  4054a8:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4054ac:	addr32 gs je 0x4054d0
  4054b0:	fs gs je 0x405515
  4054b4:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x6c656820
  4054bc:	jo     0x4054ec
  4054be:	or     cl,BYTE PTR [rdx]
	...
  4054c8:	push   rbp
  4054c9:	jae    0x40552c
  4054cb:	cmp    cl,BYTE PTR gs:[edx]
  4054cf:	and    BYTE PTR [rax],ah
  4054d1:	addr32 jb 0x405539
  4054d4:	jae    0x405545
  4054d6:	jne    0x40554a
  4054d8:	movsxd esp,DWORD PTR [rbp+0x20]
  4054db:	and    eax,0x25732573
  4054e0:	jae    0x405502
  4054e2:	and    eax,0x250a0a73
  4054e7:	jae    0x4054f3
  4054e9:	or     al,BYTE PTR [rax]
  4054eb:	and    BYTE PTR [rax],al
  4054ed:	rex.B jb 0x405557
  4054f0:	jne    0x40555f
  4054f2:	outs   dx,BYTE PTR gs:[rsi]
  4054f4:	je     0x405569
  4054f6:	cmp    cl,BYTE PTR [rdx]
	...
  405500:	and    BYTE PTR [rax],ah
  405502:	push   rbx
  405503:	rex.RB
  405504:	rex.XB push r12
  405506:	rex.WB
  405507:	rex.WRXB
  405508:	rex.WRX and BYTE PTR [rax],r12b
  40550b:	and    BYTE PTR [rcx+0x6e],al
  40550e:	and    BYTE PTR [rax],ch
  405510:	outs   dx,DWORD PTR ds:[rsi]
  405511:	jo     0x405587
  405513:	imul   ebp,DWORD PTR [rdi+0x6e],0x20296c61
  40551a:	gs ins BYTE PTR es:[rdi],dx
  40551c:	data16 and BYTE PTR [rbx+0x65],dh
  405520:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  405524:	outs   dx,BYTE PTR ds:[rsi]
  405525:	and    BYTE PTR [rsi+0x61],ch
  405528:	ins    DWORD PTR es:[rdi],dx
  405529:	or     al,BYTE PTR gs:[rax]
  40552c:	rex.R outs dx,DWORD PTR ds:[rsi]
  40552e:	outs   dx,BYTE PTR ds:[rsi]
  40552f:	(bad)  
  405530:	je     0x405552
  405532:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405536:	and    BYTE PTR [rax+0x6f],ch
  405539:	ja     0x40555b
  40553b:	je     0x4055ac
  40553d:	and    BYTE PTR [rax+0x61],ch
  405540:	outs   dx,BYTE PTR ds:[rsi]
  405541:	fs ins BYTE PTR es:[rdi],dx
  405543:	and    BYTE PTR gs:[rip+0xa73],ah        # 0x405fbd
  40554a:	add    BYTE PTR [rax],al
  40554c:	add    BYTE PTR [rax],al
  40554e:	add    BYTE PTR [rax],al
  405550:	addr32 jb 0x4055b8
  405553:	jae    0x4055c4
  405555:	jne    0x4055c9
  405557:	movsxd esp,DWORD PTR [rbp+0x20]
  40555a:	imul   esi,DWORD PTR [rbx+0x20],0x6c697562
  405561:	je     0x405583
  405563:	ja     0x4055ce
  405565:	je     0x4055cf
  405567:	outs   dx,DWORD PTR ds:[rsi]
  405568:	jne    0x4055de
  40556a:	and    BYTE PTR [rbp+0x6c],ah
  40556d:	data16 and BYTE PTR [rbx+0x75],dh
  405571:	jo     0x4055e3
  405573:	outs   dx,DWORD PTR ds:[rsi]
  405574:	jb     0x4055ea
  405576:	or     al,BYTE PTR [rax]
  405578:	rex.R (bad) 
  40557a:	je     0x4055dd
  40557c:	and    BYTE PTR [rdx+rsi*2+0x75],dh
  405580:	outs   dx,BYTE PTR ds:[rsi]
  405581:	movsxd esp,DWORD PTR [rcx+0x74]
  405584:	gs or  al,BYTE PTR fs:[rax]
  405588:	movsxd eax,DWORD PTR [rax]
  40558a:	jne    0x40558c
  40558c:	and    eax,0x25732573
  405591:	ss rex.WB
  405593:	ss xor al,0x75
  405596:	and    BYTE PTR [rip+0x73252073],ah        # 0x7365760f
  40559c:	or     al,BYTE PTR [rax]
  40559e:	(bad)  
  40559f:	add    BYTE PTR [rdi+0x6c],ah
  4055a2:	imul   esp,DWORD PTR [rdx+0x32],0x54550030
  4055a9:	rex.RX sub eax,0x2d2d0038
  4055af:	jae    0x405616
  4055b1:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  4055b5:	outs   dx,BYTE PTR ds:[rsi]
	...
  4055be:	add    BYTE PTR [rax],al
  4055c0:	add    BYTE PTR [rbp+0x40],0x0
  4055c7:	add    BYTE PTR [rax+0x4080],al
  4055cd:	add    BYTE PTR [rax],al
  4055cf:	add    BYTE PTR [rax],ah
  4055d1:	and    DWORD PTR [rax+0x0],eax
	...
  4055e0:	rex.B jb 0x40564a
  4055e3:	jne    0x405652
  4055e5:	outs   dx,BYTE PTR gs:[rsi]
  4055e7:	je     0x405609
  4055e9:	outs   dx,DWORD PTR fs:[rsi]
  4055eb:	ins    DWORD PTR es:[rdi],dx
  4055ec:	(bad)  
  4055ed:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4055f4:	jb     0x405616
  4055f6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4055fa:	rex.B
  4055fb:	rex.WB
  4055fc:	rex.WRX sub QWORD PTR [rax],r8
  4055ff:	rex.B jb 0x405669
  405602:	jne    0x405671
  405604:	outs   dx,BYTE PTR gs:[rsi]
  405606:	je     0x405628
  405608:	jae    0x405673
  40560a:	outs   dx,BYTE PTR ds:[rsi]
  40560b:	addr32 jne 0x40567a
  40560e:	(bad)  
  40560f:	jb     0x40567a
  405611:	je     0x40568c
  405613:	and    BYTE PTR [rax],ch
  405615:	push   rbx
  405616:	rex.WB
  405617:	rex.RXB
  405618:	rex.WRX sub QWORD PTR [rax],r8
  40561b:	add    BYTE PTR [rax],al
  40561d:	add    BYTE PTR [rax],al
  40561f:	add    BYTE PTR [rdi+0x76],cl
  405622:	gs jb  0x40568b
  405625:	ins    BYTE PTR es:[rdi],dx
  405626:	outs   dx,DWORD PTR ds:[rsi]
  405627:	ja     0x405649
  405629:	jb     0x40568c
  40562b:	outs   dx,BYTE PTR ds:[rsi]
  40562c:	and    BYTE PTR gs:[ebp+0x72],ah
  405631:	jb     0x4056a2
  405633:	jb     0x405655
  405635:	sub    BYTE PTR [rdi+0x56],cl
  405638:	rex.RB push r10
  40563a:	rex.RX
  40563b:	rex.WR
  40563c:	rex.WRXB push r15
  40563e:	sub    DWORD PTR [rax],eax
  405640:	push   rax
  405641:	(bad)  
  405642:	jb     0x4056b8
  405644:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40564b:	jae    0x40566d
  40564d:	outs   dx,DWORD PTR ds:[rsi]
  40564e:	data16 and BYTE PTR [rbx+0x69],dh
  405652:	outs   dx,BYTE PTR ds:[esi]
  405654:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40565b:	and    BYTE PTR gs:[rax],ch
  40565e:	push   rax
  40565f:	rex.WR
  405660:	rex.WRXB push r11
  405662:	push   rbx
  405663:	sub    DWORD PTR [rax],eax
  405665:	add    BYTE PTR [rax],al
  405667:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40566b:	(bad)  
  40566c:	ins    BYTE PTR es:[rdi],dx
  40566d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405671:	jae    0x405693
  405673:	outs   dx,DWORD PTR ds:[rsi]
  405674:	data16 and BYTE PTR [rbx+0x69],dh
  405678:	outs   dx,BYTE PTR ds:[esi]
  40567a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405681:	and    BYTE PTR gs:[rax],ch
  405684:	push   rsp
  405685:	rex.WR
  405686:	rex.WRXB push r11
  405688:	push   rbx
  405689:	sub    DWORD PTR [rax],eax
  40568b:	add    BYTE PTR [rax],al
  40568d:	add    BYTE PTR [rax],al
  40568f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405693:	and    BYTE PTR [rdx+0x65],dh
  405696:	jae    0x40570d
  405698:	ins    BYTE PTR es:[rdi],dx
  405699:	je     0x4056bb
  40569b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  4056a2:	jae    0x405711
  4056a4:	(bad)  
  4056a5:	ins    BYTE PTR es:[rdi],dx
  4056a6:	ins    BYTE PTR es:[rdi],dx
  4056a7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4056ab:	(bad)  
  4056ac:	and    BYTE PTR gs:[rdx+0x65],dh
  4056b0:	jo     0x405724
  4056b2:	gs jae 0x40571a
  4056b5:	outs   dx,BYTE PTR ds:[rsi]
  4056b6:	je     0x40571d
  4056b8:	and    BYTE PTR fs:[rax],ch
  4056bb:	push   rbp
  4056bc:	rex.WRX
  4056bd:	rex.R
  4056be:	rex.RB push r10
  4056c0:	rex.RX
  4056c1:	rex.WR
  4056c2:	rex.WRXB push r15
  4056c4:	sub    DWORD PTR [rax],eax
  4056c6:	push   rbp
  4056c7:	outs   dx,BYTE PTR ds:[rsi]
  4056c8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4056cc:	outs   dx,BYTE PTR ds:[rsi]
  4056cd:	and    BYTE PTR [rbp+0x72],ah
  4056d0:	jb     0x405741
  4056d2:	jb     0x4056d4
  4056d4:	add    BYTE PTR [rax],al
  4056d6:	add    BYTE PTR [rax],al
  4056d8:	pop    rdi
  4056d9:	ins    DWORD PTR es:[rdi],dx
  4056da:	(bad)  
  4056db:	je     0x405745
  4056dd:	gs jb  0x405752
  4056e0:	sub    BYTE PTR [rcx],ch
  4056e2:	cmp    ah,BYTE PTR [rax]
  4056e4:	and    eax,0x6e692073
  4056e9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657f62
  4056ef:	sub    al,0x20
  4056f1:	and    eax,0x20202967
  4056f6:	sub    BYTE PTR [rdx+0x65],dh
  4056f9:	je     0x405771
  4056fb:	(bad)  
  4056fc:	ins    BYTE PTR es:[rdi],dx
  4056fd:	cmp    eax,0xa296725
  405702:	add    BYTE PTR [rax],al
  405704:	in     al,dx
  405705:	retf   
  405706:	(bad)  
  405707:	jmp    FWORD PTR [rip+0xffffffff9cffffcb]        # 0xffffffff9d4056d8
  40570d:	retf   
  40570e:	(bad)  
  40570f:	jmp    FWORD PTR [rbx+rcx*8-0x34430001]
  405716:	(bad)  
  405717:	dec    esp
  405719:	retf   
  40571a:	(bad)  
  40571b:	(bad)  
  40571c:	fmul   st(3),st
  40571e:	(bad)  
  40571f:	dec    DWORD PTR [rbp+0x69]
  405722:	outs   dx,BYTE PTR ds:[rsi]
  405723:	addr32 ja 0x405753
  405726:	ja     0x40575e
  405728:	xor    al,0x20
  40572a:	jb     0x4057a1
  40572c:	outs   dx,BYTE PTR ds:[rsi]
  40572d:	je     0x405798
  40572f:	ins    DWORD PTR es:[rdi],dx
  405730:	and    BYTE PTR gs:[rsi+0x61],ah
  405734:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40573c:	add    BYTE PTR [rax],al
  40573e:	add    BYTE PTR [rax],al
  405740:	rex.B
  405741:	fs fs jb 0x4057aa
  405745:	jae    0x4057ba
  405747:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a877bd
  40574d:	jae    0x40576f
  40574f:	outs   dx,BYTE PTR ds:[rsi]
  405750:	outs   dx,DWORD PTR ds:[rsi]
  405751:	and    BYTE PTR [rcx+0x6d],ch
  405754:	(bad)  
  405755:	addr32 gs sub eax,0x74636573
  40575c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405763:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40576a:	jne    0x4057d1
  40576c:	jb     0x4057e7
  40576e:	and    BYTE PTR [rsi+0x61],ah
  405771:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405779:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a277e3
  40577f:	je     0x4057e6
  405781:	jae    0x4057a3
  405783:	(bad)  
  405784:	je     0x4057a6
  405786:	(bad)  
  405787:	fs fs jb 0x4057f0
  40578b:	jae    0x405800
  40578d:	and    BYTE PTR [rip+0x70],ah        # 0x405803
  405793:	add    BYTE PTR [rax],al
  405795:	add    BYTE PTR [rax],al
  405797:	add    BYTE PTR [rax],ah
  405799:	and    BYTE PTR [rsi+0x69],dl
  40579c:	jb     0x405812
  40579e:	jne    0x405801
  4057a0:	ins    BYTE PTR es:[rdi],dx
  4057a1:	push   rax
  4057a2:	jb     0x405813
  4057a4:	je     0x40580b
  4057a6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  4057aa:	(bad)  
  4057ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  4057b3:	push   0x646f6320
  4057b8:	and    BYTE PTR gs:[rax],dh
  4057bb:	js     0x4057e2
  4057bd:	js     0x4057bf
  4057bf:	add    BYTE PTR [rax],ah
  4057c1:	and    BYTE PTR [rbp+0x6e],dl
  4057c4:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4057c8:	outs   dx,BYTE PTR ds:[rsi]
  4057c9:	and    BYTE PTR [rax+0x73],dh
  4057cc:	gs jne 0x405833
  4057cf:	outs   dx,DWORD PTR ds:[rsi]
  4057d0:	and    BYTE PTR [rdx+0x65],dh
  4057d3:	ins    BYTE PTR es:[rdi],dx
  4057d4:	outs   dx,DWORD PTR ds:[rsi]
  4057d5:	movsxd esp,DWORD PTR [rcx+0x74]
  4057d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  4057df:	je     0x405850
  4057e1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4057e4:	and    BYTE PTR [rsi+0x65],dh
  4057e7:	jb     0x40585c
  4057e9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4057f0:	or     al,BYTE PTR [rax]
  4057f2:	add    BYTE PTR [rax],al
  4057f4:	add    BYTE PTR [rax],al
  4057f6:	add    BYTE PTR [rax],al
  4057f8:	and    BYTE PTR [rax],ah
  4057fa:	push   rbp
  4057fb:	outs   dx,BYTE PTR ds:[rsi]
  4057fc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405800:	outs   dx,BYTE PTR ds:[rsi]
  405801:	and    BYTE PTR [rax+0x73],dh
  405804:	gs jne 0x40586b
  405807:	outs   dx,DWORD PTR ds:[rsi]
  405808:	and    BYTE PTR [rdx+0x65],dh
  40580b:	ins    BYTE PTR es:[rdi],dx
  40580c:	outs   dx,DWORD PTR ds:[rsi]
  40580d:	movsxd esp,DWORD PTR [rcx+0x74]
  405810:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  405817:	and    BYTE PTR [rbx+0x69],dh
  40581a:	jp     0x405881
  40581c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8686
	...
  40582e:	add    BYTE PTR [rax],al
  405830:	cs jo  0x405897
  405833:	(bad)  
  405834:	je     0x405897
	...
  40583e:	add    BYTE PTR [rax],al
  405840:	rex
  405841:	rex
  405842:	add    BYTE PTR [rax],al
	...
  40584d:	add    BYTE PTR [rax],al
  40584f:	add    BYTE PTR [rax+0x40],dl
  405852:	add    BYTE PTR [rax],al
	...
  40585d:	add    BYTE PTR [rax],al
  40585f:	add    BYTE PTR [rax],dh
  405861:	add    BYTE PTR ss:[rax],al
	...
  40586d:	add    BYTE PTR [rax],al
  40586f:	add    BYTE PTR [rax+0x405d],al
	...
  40587d:	add    BYTE PTR [rax],al
  40587f:	add    BYTE PTR [rax+0x405d],al
	...
  40588d:	add    BYTE PTR [rax],al
  40588f:	add    al,dl
  405891:	push   rbp
  405892:	add    BYTE PTR [rax],al
	...
  4058a1:	add    BYTE PTR [rax+0x0],al
	...
  4058b0:	call   0x409949
	...
  4058bd:	add    BYTE PTR [rax],al
  4058bf:	add    BYTE PTR [rax],dl
  4058c1:	xchg   ebp,eax
  4058c2:	add    BYTE PTR [rax],al
	...
  4058cd:	add    BYTE PTR [rax],al
  4058cf:	add    BYTE PTR [rax],ch
  4058d1:	xchg   ebp,eax
  4058d2:	add    BYTE PTR [rax],al
	...
  4058dd:	add    BYTE PTR [rax],al
  4058df:	add    BYTE PTR [rax-0x6b],al
  4058e2:	add    BYTE PTR [rax],al
	...
  4058ed:	add    BYTE PTR [rax],al
  4058ef:	add    al,al
  4058f1:	xchg   BYTE PTR [rax+0x0],al
	...
  405900:	sub    BYTE PTR [rdx+0x40],cl
	...
  40590e:	add    BYTE PTR [rax],al
  405910:	and    BYTE PTR [rdx+0x40],cl
	...
  40591e:	add    BYTE PTR [rax],al
  405920:	adc    BYTE PTR [rdx+0x40],cl
	...
  40592e:	add    BYTE PTR [rax],al
  405930:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40593e:	add    BYTE PTR [rax],al
  405940:	add    BYTE PTR [rax+0x40],ah
	...
  40594e:	add    BYTE PTR [rax],al
  405950:	adc    BYTE PTR [rax+0x40],ah
	...
  40595e:	add    BYTE PTR [rax],al
  405960:	sbb    BYTE PTR [rax+0x40],ah
	...
  40596e:	add    BYTE PTR [rax],al
  405970:	xor    BYTE PTR [rax+0x40],ah
	...
  40597e:	add    BYTE PTR [rax],al
  405980:	rex add BYTE PTR [rax+0x0],0x0
	...
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    BYTE PTR [rax+0x4086],dl
	...
  40599d:	add    BYTE PTR [rax],al
  40599f:	add    BYTE PTR [rax+0x402a],dh
	...
  4059b1:	and    al,BYTE PTR [rax+0x0]
	...
  4059c0:	xchg   BYTE PTR [rax+0x0],al
	...
  4059d0:	jo     0x405958
  4059d2:	add    BYTE PTR [rax],al
	...
  4059dd:	add    BYTE PTR [rax],al
  4059df:	add    BYTE PTR [rax-0x80],dl
  4059e2:	add    BYTE PTR [rax],al
	...
  4059ed:	add    BYTE PTR [rax],al
  4059ef:	add    BYTE PTR [rax-0x7a],bl
  4059f2:	add    BYTE PTR [rax],al
	...
  4059fd:	add    BYTE PTR [rax],al
  4059ff:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  405a0f:	add    BYTE PTR [rax-0x7a],dl
  405a12:	add    BYTE PTR [rax],al
	...
  405a1d:	add    BYTE PTR [rax],al
  405a1f:	add    BYTE PTR [rdi+0x43],al
  405a22:	rex.XB cmp spl,BYTE PTR [r8]
  405a25:	sub    BYTE PTR [rdi+0x4e],al
  405a28:	push   rbp
  405a29:	sub    DWORD PTR [rax],esp
  405a2b:	xor    al,0x2e
  405a2d:	cmp    DWORD PTR [rsi],ebp
  405a2f:	xor    al,0x0
	...
  405a3d:	add    BYTE PTR [rax],al
  405a3f:	add    BYTE PTR [rdi+0x43],al
  405a42:	rex.XB cmp spl,BYTE PTR [r8]
  405a45:	sub    BYTE PTR [rdi+0x4e],al
  405a48:	push   rbp
  405a49:	sub    DWORD PTR [rax],esp
  405a4b:	xor    al,0x2e
  405a4d:	cmp    DWORD PTR [rsi],ebp
  405a4f:	xor    al,0x0
	...
  405a5d:	add    BYTE PTR [rax],al
  405a5f:	add    BYTE PTR [rdi+0x43],al
  405a62:	rex.XB cmp spl,BYTE PTR [r8]
  405a65:	sub    BYTE PTR [rdi+0x4e],al
  405a68:	push   rbp
  405a69:	sub    DWORD PTR [rax],esp
  405a6b:	xor    al,0x2e
  405a6d:	cmp    DWORD PTR [rsi],ebp
  405a6f:	xor    al,0x0
	...
  405a7d:	add    BYTE PTR [rax],al
  405a7f:	add    BYTE PTR [rdi+0x43],al
  405a82:	rex.XB cmp spl,BYTE PTR [r8]
  405a85:	sub    BYTE PTR [rdi+0x4e],al
  405a88:	push   rbp
  405a89:	sub    DWORD PTR [rax],esp
  405a8b:	xor    al,0x2e
  405a8d:	cmp    DWORD PTR [rsi],ebp
  405a8f:	xor    al,0x0
	...
  405a9d:	add    BYTE PTR [rax],al
  405a9f:	add    BYTE PTR [rdi+0x43],al
  405aa2:	rex.XB cmp spl,BYTE PTR [r8]
  405aa5:	sub    BYTE PTR [rdi+0x4e],al
  405aa8:	push   rbp
  405aa9:	sub    DWORD PTR [rax],esp
  405aab:	xor    al,0x2e
  405aad:	cmp    DWORD PTR [rsi],ebp
  405aaf:	xor    al,0x0
	...
  405abd:	add    BYTE PTR [rax],al
  405abf:	add    BYTE PTR [rdi+0x43],al
  405ac2:	rex.XB cmp spl,BYTE PTR [r8]
  405ac5:	sub    BYTE PTR [rdi+0x4e],al
  405ac8:	push   rbp
  405ac9:	sub    DWORD PTR [rax],esp
  405acb:	xor    al,0x2e
  405acd:	cmp    DWORD PTR [rsi],ebp
  405acf:	xor    al,0x0
	...
  405add:	add    BYTE PTR [rax],al
  405adf:	add    BYTE PTR [rdi+0x43],al
  405ae2:	rex.XB cmp spl,BYTE PTR [r8]
  405ae5:	sub    BYTE PTR [rdi+0x4e],al
  405ae8:	push   rbp
  405ae9:	sub    DWORD PTR [rax],esp
  405aeb:	xor    al,0x2e
  405aed:	cmp    DWORD PTR [rsi],ebp
  405aef:	xor    al,0x0
	...
  405afd:	add    BYTE PTR [rax],al
  405aff:	add    BYTE PTR [rdi+0x43],al
  405b02:	rex.XB cmp spl,BYTE PTR [r8]
  405b05:	sub    BYTE PTR [rdi+0x4e],al
  405b08:	push   rbp
  405b09:	sub    DWORD PTR [rax],esp
  405b0b:	xor    al,0x2e
  405b0d:	cmp    DWORD PTR [rsi],ebp
  405b0f:	xor    al,0x0
	...
  405b1d:	add    BYTE PTR [rax],al
  405b1f:	add    BYTE PTR [rdi+0x43],al
  405b22:	rex.XB cmp spl,BYTE PTR [r8]
  405b25:	sub    BYTE PTR [rdi+0x4e],al
  405b28:	push   rbp
  405b29:	sub    DWORD PTR [rax],esp
  405b2b:	xor    al,0x2e
  405b2d:	cmp    DWORD PTR [rsi],ebp
  405b2f:	xor    al,0x0
	...
  405b3d:	add    BYTE PTR [rax],al
  405b3f:	add    BYTE PTR [rdi+0x43],al
  405b42:	rex.XB cmp spl,BYTE PTR [r8]
  405b45:	sub    BYTE PTR [rdi+0x4e],al
  405b48:	push   rbp
  405b49:	sub    DWORD PTR [rax],esp
  405b4b:	xor    al,0x2e
  405b4d:	cmp    DWORD PTR [rsi],ebp
  405b4f:	xor    al,0x0
	...
  405b5d:	add    BYTE PTR [rax],al
  405b5f:	add    BYTE PTR [rdi+0x43],al
  405b62:	rex.XB cmp spl,BYTE PTR [r8]
  405b65:	sub    BYTE PTR [rdi+0x4e],al
  405b68:	push   rbp
  405b69:	sub    DWORD PTR [rax],esp
  405b6b:	xor    al,0x2e
  405b6d:	cmp    DWORD PTR [rsi],ebp
  405b6f:	xor    al,0x0
	...
  405b7d:	add    BYTE PTR [rax],al
  405b7f:	add    BYTE PTR [rdi+0x43],al
  405b82:	rex.XB cmp spl,BYTE PTR [r8]
  405b85:	sub    BYTE PTR [rdi+0x4e],al
  405b88:	push   rbp
  405b89:	sub    DWORD PTR [rax],esp
  405b8b:	xor    al,0x2e
  405b8d:	cmp    DWORD PTR [rsi],ebp
  405b8f:	xor    al,0x0
	...
  405b9d:	add    BYTE PTR [rax],al
  405b9f:	add    BYTE PTR [rdi+0x43],al
  405ba2:	rex.XB cmp spl,BYTE PTR [r8]
  405ba5:	sub    BYTE PTR [rdi+0x4e],al
  405ba8:	push   rbp
  405ba9:	sub    DWORD PTR [rax],esp
  405bab:	xor    al,0x2e
  405bad:	cmp    DWORD PTR [rsi],ebp
  405baf:	xor    al,0x0
	...
  405bbd:	add    BYTE PTR [rax],al
  405bbf:	add    BYTE PTR [rdi+0x43],al
  405bc2:	rex.XB cmp spl,BYTE PTR [r8]
  405bc5:	sub    BYTE PTR [rdi+0x4e],al
  405bc8:	push   rbp
  405bc9:	sub    DWORD PTR [rax],esp
  405bcb:	xor    al,0x2e
  405bcd:	cmp    DWORD PTR [rsi],ebp
  405bcf:	xor    al,0x0
	...
  405bdd:	add    BYTE PTR [rax],al
  405bdf:	add    BYTE PTR [rdi+0x43],al
  405be2:	rex.XB cmp spl,BYTE PTR [r8]
  405be5:	sub    BYTE PTR [rdi+0x4e],al
  405be8:	push   rbp
  405be9:	sub    DWORD PTR [rax],esp
  405beb:	xor    al,0x2e
  405bed:	cmp    DWORD PTR [rsi],ebp
  405bef:	xor    al,0x0
	...
  405bfd:	add    BYTE PTR [rax],al
  405bff:	add    BYTE PTR [rdi+0x43],al
  405c02:	rex.XB cmp spl,BYTE PTR [r8]
  405c05:	sub    BYTE PTR [rdi+0x4e],al
  405c08:	push   rbp
  405c09:	sub    DWORD PTR [rax],esp
  405c0b:	xor    al,0x2e
  405c0d:	cmp    DWORD PTR [rsi],ebp
  405c0f:	xor    al,0x0
	...
  405c1d:	add    BYTE PTR [rax],al
  405c1f:	add    BYTE PTR [rdi+0x43],al
  405c22:	rex.XB cmp spl,BYTE PTR [r8]
  405c25:	sub    BYTE PTR [rdi+0x4e],al
  405c28:	push   rbp
  405c29:	sub    DWORD PTR [rax],esp
  405c2b:	xor    al,0x2e
  405c2d:	cmp    DWORD PTR [rsi],ebp
  405c2f:	xor    al,0x0
	...
  405c3d:	add    BYTE PTR [rax],al
  405c3f:	add    BYTE PTR [rdi+0x43],al
  405c42:	rex.XB cmp spl,BYTE PTR [r8]
  405c45:	sub    BYTE PTR [rdi+0x4e],al
  405c48:	push   rbp
  405c49:	sub    DWORD PTR [rax],esp
  405c4b:	xor    al,0x2e
  405c4d:	cmp    DWORD PTR [rsi],ebp
  405c4f:	xor    al,0x0
	...
  405c5d:	add    BYTE PTR [rax],al
  405c5f:	add    BYTE PTR [rdi+0x43],al
  405c62:	rex.XB cmp spl,BYTE PTR [r8]
  405c65:	sub    BYTE PTR [rdi+0x4e],al
  405c68:	push   rbp
  405c69:	sub    DWORD PTR [rax],esp
  405c6b:	xor    al,0x2e
  405c6d:	cmp    DWORD PTR [rsi],ebp
  405c6f:	xor    al,0x0
	...
  405c7d:	add    BYTE PTR [rax],al
  405c7f:	add    BYTE PTR [rdi+0x43],al
  405c82:	rex.XB cmp spl,BYTE PTR [r8]
  405c85:	sub    BYTE PTR [rdi+0x4e],al
  405c88:	push   rbp
  405c89:	sub    DWORD PTR [rax],esp
  405c8b:	xor    al,0x2e
  405c8d:	cmp    DWORD PTR [rsi],ebp
  405c8f:	xor    al,0x0
	...
  405c9d:	add    BYTE PTR [rax],al
  405c9f:	add    BYTE PTR [rdi+0x43],al
  405ca2:	rex.XB cmp spl,BYTE PTR [r8]
  405ca5:	sub    BYTE PTR [rdi+0x4e],al
  405ca8:	push   rbp
  405ca9:	sub    DWORD PTR [rax],esp
  405cab:	xor    al,0x2e
  405cad:	cmp    DWORD PTR [rsi],ebp
  405caf:	xor    al,0x0
	...
  405cbd:	add    BYTE PTR [rax],al
  405cbf:	add    BYTE PTR [rdi+0x43],al
  405cc2:	rex.XB cmp spl,BYTE PTR [r8]
  405cc5:	sub    BYTE PTR [rdi+0x4e],al
  405cc8:	push   rbp
  405cc9:	sub    DWORD PTR [rax],esp
  405ccb:	xor    al,0x2e
  405ccd:	cmp    DWORD PTR [rsi],ebp
  405ccf:	xor    al,0x0
	...
  405cdd:	add    BYTE PTR [rax],al
  405cdf:	add    BYTE PTR [rdi+0x43],al
  405ce2:	rex.XB cmp spl,BYTE PTR [r8]
  405ce5:	sub    BYTE PTR [rdi+0x4e],al
  405ce8:	push   rbp
  405ce9:	sub    DWORD PTR [rax],esp
  405ceb:	xor    al,0x2e
  405ced:	cmp    DWORD PTR [rsi],ebp
  405cef:	xor    al,0x0
	...
  405cfd:	add    BYTE PTR [rax],al
  405cff:	add    BYTE PTR [rdi+0x43],al
  405d02:	rex.XB cmp spl,BYTE PTR [r8]
  405d05:	sub    BYTE PTR [rdi+0x4e],al
  405d08:	push   rbp
  405d09:	sub    DWORD PTR [rax],esp
  405d0b:	xor    al,0x2e
  405d0d:	cmp    DWORD PTR [rsi],ebp
  405d0f:	xor    al,0x0
	...
  405d1d:	add    BYTE PTR [rax],al
  405d1f:	add    BYTE PTR [rdi+0x43],al
  405d22:	rex.XB cmp spl,BYTE PTR [r8]
  405d25:	sub    BYTE PTR [rdi+0x4e],al
  405d28:	push   rbp
  405d29:	sub    DWORD PTR [rax],esp
  405d2b:	xor    al,0x2e
  405d2d:	cmp    DWORD PTR [rsi],ebp
  405d2f:	xor    al,0x0
	...
  405d3d:	add    BYTE PTR [rax],al
  405d3f:	add    BYTE PTR [rdi+0x43],al
  405d42:	rex.XB cmp spl,BYTE PTR [r8]
  405d45:	sub    BYTE PTR [rdi+0x4e],al
  405d48:	push   rbp
  405d49:	sub    DWORD PTR [rax],esp
  405d4b:	xor    al,0x2e
  405d4d:	cmp    DWORD PTR [rsi],ebp
  405d4f:	xor    al,0x0
	...
  405d5d:	add    BYTE PTR [rax],al
  405d5f:	add    BYTE PTR [rdi+0x43],al
  405d62:	rex.XB cmp spl,BYTE PTR [r8]
  405d65:	sub    BYTE PTR [rdi+0x4e],al
  405d68:	push   rbp
  405d69:	sub    DWORD PTR [rax],esp
  405d6b:	xor    al,0x2e
  405d6d:	cmp    DWORD PTR [rsi],ebp
  405d6f:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x157f0000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0xffffffff80000070
  406055:	adc    eax,0x194b0000
  40605a:	add    BYTE PTR [rax],al
  40605c:	je     0x4060ce
  40605e:	add    BYTE PTR [rax],al
  406060:	push   rax
  406061:	sbb    DWORD PTR [rax],eax
  406063:	add    BYTE PTR [rax-0x77ffffe7],dl
  406069:	jo     0x40606b
  40606b:	add    BYTE PTR [rax+0x42000019],dl
  406071:	sbb    al,BYTE PTR [rax]
  406073:	add    BYTE PTR [rax+0x50000070],dl
  406079:	sbb    al,BYTE PTR [rax]
  40607b:	add    bl,dh
  40607d:	sbb    eax,DWORD PTR [rax]
  40607f:	add    BYTE PTR [rax+rsi*2+0x1c000000],bl
  406086:	add    BYTE PTR [rax],al
  406088:	jae    0x4060a6
  40608a:	add    BYTE PTR [rax],al
  40608c:	mov    ah,0x70
  40608e:	add    BYTE PTR [rax],al
  406090:	(bad)  
  406091:	sbb    eax,0x1e070000
  406096:	add    BYTE PTR [rax],al
  406098:	fdiv   DWORD PTR [rax+0x0]
  40609b:	add    BYTE PTR [rax],dl
  40609d:	(bad)  
  40609e:	add    BYTE PTR [rax],al
  4060a0:	sub    DWORD PTR [rsi],ebx
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	loopne 0x406116
  4060a6:	add    BYTE PTR [rax],al
  4060a8:	xor    BYTE PTR [rsi],bl
  4060aa:	add    BYTE PTR [rax],al
  4060ac:	gs (bad) 
  4060ae:	add    BYTE PTR [rax],al
  4060b0:	call   0x70406125
  4060b5:	(bad)  
  4060b6:	add    BYTE PTR [rax],al
  4060b8:	(bad)
  4060bb:	add    al,dh
  4060bd:	jo     0x4060bf
  4060bf:	add    al,dl
  4060c1:	(bad)  
  4060c2:	add    BYTE PTR [rax],al
  4060c4:	in     al,dx
  4060c5:	(bad)  
  4060c6:	add    BYTE PTR [rax],al
  4060c8:	cld    
  4060c9:	jo     0x4060cb
  4060cb:	add    al,dh
  4060cd:	(bad)  
  4060ce:	add    BYTE PTR [rax],al
  4060d0:	cli    
  4060d1:	(bad)  
  4060d2:	add    BYTE PTR [rax],al
  4060d4:	add    BYTE PTR [rcx+0x0],dh
  4060d7:	add    BYTE PTR [rax],al
  4060d9:	(bad)  
  4060da:	add    BYTE PTR [rax],al
  4060dc:	add    ebx,DWORD PTR [rdi]
  4060de:	add    BYTE PTR [rax],al
  4060e0:	add    al,0x71
  4060e2:	add    BYTE PTR [rax],al
  4060e4:	adc    BYTE PTR [rdi],bl
  4060e6:	add    BYTE PTR [rax],al
  4060e8:	out    0x1f,al
  4060ea:	add    BYTE PTR [rax],al
  4060ec:	or     BYTE PTR [rcx+0x0],dh
  4060ef:	add    al,dh
  4060f1:	(bad)  
  4060f2:	add    BYTE PTR [rax],al
  4060f4:	jmp    0x406116
  4060f6:	add    BYTE PTR [rax],al
  4060f8:	sbb    BYTE PTR [rcx+0x0],dh
  4060fb:	add    al,dh
  4060fd:	and    BYTE PTR [rax],al
  4060ff:	add    BYTE PTR [rdi],bl
  406101:	and    DWORD PTR [rax],eax
  406103:	add    BYTE PTR [rax],ch
  406105:	jno    0x406107
  406107:	add    BYTE PTR [rax],ah
  406109:	and    DWORD PTR [rax],eax
  40610b:	add    BYTE PTR [rcx+0x30000021],cl
  406111:	jno    0x406113
  406113:	add    BYTE PTR [rax-0x6cffffdf],dl
  406119:	and    DWORD PTR [rax],eax
  40611b:	add    BYTE PTR [rcx+rsi*2],bh
  40611e:	add    BYTE PTR [rax],al
  406120:	movabs al,ds:0x40000021e1000021
  406129:	jno    0x40612b
  40612b:	add    al,dh
  40612d:	and    DWORD PTR [rax],eax
  40612f:	add    ah,bh
  406131:	and    DWORD PTR [rax],eax
  406133:	add    BYTE PTR [rax+0x71],cl
  406136:	add    BYTE PTR [rax],al
  406138:	add    BYTE PTR [rdx],ah
  40613a:	add    BYTE PTR [rax],al
  40613c:	cld    
  40613d:	and    al,BYTE PTR [rax]
  40613f:	add    BYTE PTR [rcx+rsi*2+0x0],cl
  406143:	add    BYTE PTR [rax],al
  406145:	and    eax,DWORD PTR [rax]
  406147:	add    BYTE PTR [rbx],al
  406149:	and    eax,DWORD PTR [rax]
  40614b:	add    BYTE PTR [rcx+rsi*2+0x0],ah
  40614f:	add    BYTE PTR [rax],dl
  406151:	and    eax,DWORD PTR [rax]
  406153:	add    BYTE PTR [rbx+riz*1],dl
  406156:	add    BYTE PTR [rax],al
  406158:	push   0x20000071
  40615d:	and    eax,DWORD PTR [rax]
  40615f:	add    BYTE PTR [rbx+riz*1],ah
  406162:	add    BYTE PTR [rax],al
  406164:	ins    BYTE PTR es:[rdi],dx
  406165:	jno    0x406167
  406167:	add    BYTE PTR [rax],dh
  406169:	and    eax,DWORD PTR [rax]
  40616b:	add    BYTE PTR [rcx+0x70000023],dl
  406171:	jno    0x406173
  406173:	add    BYTE PTR [rax+0x2000023],ah
  406179:	and    eax,0x717c0000
  40617e:	add    BYTE PTR [rax],al
  406180:	adc    BYTE PTR [rip+0x28090000],ah        # 0x28496186
  406186:	add    BYTE PTR [rax],al
  406188:	nop
  406189:	jno    0x40618b
  40618b:	add    BYTE PTR [rax],dl
  40618d:	sub    BYTE PTR [rax],al
  40618f:	add    BYTE PTR [rsi-0x57ffffd7],dh
  406195:	jno    0x406197
  406197:	add    al,al
  406199:	sub    DWORD PTR [rax],eax
  40619b:	add    BYTE PTR [rdx+rbp*1+0x71b00000],ch
  4061a2:	add    BYTE PTR [rax],al
  4061a4:	mov    al,0x2a
  4061a6:	add    BYTE PTR [rax],al
  4061a8:	push   0xffffffffc000002c
  4061ad:	jno    0x4061af
  4061af:	add    BYTE PTR [rax+0x2c],dh
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	(bad)  [rax+rax*1]
  4061b7:	add    al,cl
  4061b9:	jno    0x4061bb
  4061bb:	add    al,ah
  4061bd:	sub    al,0x0
  4061bf:	add    BYTE PTR [rdi+0x2d],bl
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	fdiv   DWORD PTR [rcx+0x0]
  4061c7:	add    BYTE PTR [rax+0x2d],ah
  4061ca:	add    BYTE PTR [rax],al
  4061cc:	jmp    FWORD PTR [rip+0x71e40000]        # 0x722461d2
  4061d2:	add    BYTE PTR [rax],al
  4061d4:	add    BYTE PTR [rsi],ch
  4061d6:	add    BYTE PTR [rax],al
  4061d8:	fisubr DWORD PTR [rsi]
  4061da:	add    BYTE PTR [rax],al
  4061dc:	in     al,dx
  4061dd:	jno    0x4061df
  4061df:	add    al,ah
  4061e1:	add    BYTE PTR cs:[rax],al
  4061e4:	jmp    FWORD PTR [rsi]
  4061e6:	add    BYTE PTR [rax],al
  4061e8:	hlt    
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax],al
  4061ed:	(bad)  
  4061ee:	add    BYTE PTR [rax],al
  4061f0:	adc    ch,BYTE PTR [rdi]
  4061f2:	add    BYTE PTR [rax],al
  4061f4:	clc    
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax],ah
  4061f9:	(bad)  
  4061fa:	add    BYTE PTR [rax],al
  4061fc:	gs (bad) 
  4061fe:	add    BYTE PTR [rax],al
  406200:	cld    
  406201:	jno    0x406203
  406203:	add    BYTE PTR [rax+0x2f],dh
  406206:	add    BYTE PTR [rax],al
  406208:	(bad)  
  406209:	xor    BYTE PTR [rax],al
  40620b:	add    BYTE PTR [rax],al
  40620d:	jb     0x40620f
  40620f:	add    BYTE PTR [rax],dl
  406211:	xor    BYTE PTR [rax],al
  406213:	add    BYTE PTR [rbx+0x30],dl
  406216:	add    BYTE PTR [rax],al
  406218:	or     al,0x72
  40621a:	add    BYTE PTR [rax],al
  40621c:	(bad)  
  40621d:	xor    BYTE PTR [rax],al
  40621f:	add    BYTE PTR [rbx+0x18000030],bl
  406225:	jb     0x406227
  406227:	add    BYTE PTR [rax+0x2e000030],ah
  40622d:	xor    DWORD PTR [rax],eax
  40622f:	add    BYTE PTR [rax],ah
  406231:	jb     0x406233
  406233:	add    BYTE PTR [rax],dh
  406235:	xor    DWORD PTR [rax],eax
  406237:	add    BYTE PTR [rax+0x31],ch
  40623a:	add    BYTE PTR [rax],al
  40623c:	sub    al,0x72
  40623e:	add    BYTE PTR [rax],al
  406240:	jo     0x406273
  406242:	add    BYTE PTR [rax],al
  406244:	(bad)
  406247:	add    BYTE PTR [rax],bh
  406249:	jb     0x40624b
  40624b:	add    al,dl
  40624d:	xor    DWORD PTR [rax],eax
  40624f:	add    BYTE PTR [rsi+0x32],bh
  406252:	add    BYTE PTR [rax],al
  406254:	rex.R jb 0x406257
  406257:	add    BYTE PTR [rax-0x57ffffcd],ah
  40625d:	xor    eax,DWORD PTR [rax]
  40625f:	add    BYTE PTR [rdx+rsi*2+0x0],dl
  406263:	add    BYTE PTR [rax-0x44ffffcd],dh
  406269:	xor    eax,DWORD PTR [rax]
  40626b:	add    BYTE PTR [rax+0x72],bl
  40626e:	add    BYTE PTR [rax],al
  406270:	xor    BYTE PTR [rax+rax*1],0x0
  406274:	sub    BYTE PTR [rsi],dh
  406276:	add    BYTE PTR [rax],al
  406278:	(bad)  
  406279:	jo     0x40627b
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	nop
  407031:	xor    eax,DWORD PTR [rax]
  407033:	add    BYTE PTR [rcx],al
  407035:	add    BYTE PTR [rax],al
  407037:	add    ah,dl
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax-0x13ffffd6],dh
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	nop
  407051:	xor    eax,DWORD PTR [rax]
  407053:	add    BYTE PTR [rcx],al
  407055:	add    BYTE PTR [rax],al
  407057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40705e:	add    BYTE PTR [rax],al
  407060:	mov    al,0x2a
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rsi],eax
  40706a:	add    eax,DWORD PTR [rax]
  40706c:	(bad)  
  40706d:	(bad)  
  40706f:	xor    BYTE PTR [rcx],al
  407071:	(bad)  
  407072:	add    BYTE PTR [rax],al
  407074:	add    DWORD PTR [rsi],ecx
  407076:	or     BYTE PTR [rax],al
  407078:	(bad)  
  407079:	jb     0x407085
  40707b:	xor    BYTE PTR [rcx],cl
  40707d:	(bad)  
  40707e:	or     BYTE PTR [rax+0x7],dh
  407081:	push   rax
  407082:	(bad)  
  407083:	rol    BYTE PTR [rax+rdx*8],0x2
  407087:	loopne 0x40708a
  407089:	add    eax,0x32050002
  40708e:	add    DWORD PTR [rax],esi
  407090:	add    DWORD PTR [rdi],eax
  407092:	add    al,0x0
  407094:	(bad)  
  407095:	push   rdx
  407096:	add    esi,DWORD PTR [rax]
  407098:	add    ah,BYTE PTR [rax+0x1]
  40709b:	jo     0x40709e
  40709d:	adc    BYTE PTR [rcx],cl
  40709f:	add    BYTE PTR [rax],dl
  4070a1:	ret    0x300c
  4070a4:	or     esp,DWORD PTR [rax+0xa]
  4070a7:	jo     0x4070b2
  4070a9:	push   rax
  4070aa:	or     al,al
  4070ac:	(bad)  
  4070ad:	rol    BYTE PTR [rax+riz*8],1
  4070b0:	add    dh,al
  4070b2:	add    BYTE PTR [rax],al
  4070b4:	add    DWORD PTR [rax],ecx
  4070b6:	add    eax,0x4420800
  4070bb:	xor    BYTE PTR [rbx],al
  4070bd:	(bad)  
  4070be:	add    dh,BYTE PTR [rax+0x1]
  4070c1:	push   rax
  4070c2:	add    BYTE PTR [rax],al
  4070c4:	add    DWORD PTR [rdi+rax*1],ecx
  4070c7:	add    BYTE PTR [rdx+rax*2],cl
  4070ca:	or     BYTE PTR [rax],dh
  4070cc:	(bad)  
  4070cd:	(bad)  
  4070ce:	(bad)  
  4070cf:	jo     0x4070d6
  4070d1:	push   rax
  4070d2:	add    al,0xc0
  4070d4:	add    dl,al
  4070d6:	add    BYTE PTR [rax],al
  4070d8:	add    DWORD PTR [rip+0x52050002],eax        # 0x524570e0
  4070de:	add    DWORD PTR [rax],esi
  4070e0:	add    DWORD PTR [rcx+rax*1],eax
  4070e3:	add    BYTE PTR [rdx+rax*2],al
  4070e6:	add    BYTE PTR [rax],al
  4070e8:	add    DWORD PTR [rcx+rax*1],eax
  4070eb:	add    BYTE PTR [rdx+rax*2],al
  4070ee:	add    BYTE PTR [rax],al
  4070f0:	add    DWORD PTR [rsi],eax
  4070f2:	add    eax,DWORD PTR [rax]
  4070f4:	(bad)  
  4070f5:	rex.X add sil,BYTE PTR [rax]
  4070f8:	add    DWORD PTR [rax+0x0],esp
  4070fb:	add    BYTE PTR [rcx],al
  4070fd:	add    BYTE PTR [rax],al
  4070ff:	add    BYTE PTR [rcx],al
  407101:	add    BYTE PTR [rax],al
  407103:	add    BYTE PTR [rcx],al
  407105:	add    BYTE PTR [rax],al
  407107:	add    BYTE PTR [rcx],al
  407109:	or     al,BYTE PTR [rsi]
  40710b:	add    BYTE PTR [rdx],cl
  40710d:	jb     0x407115
  40710f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07575
  407115:	push   rax
  407116:	add    al,al
  407118:	add    DWORD PTR [rdx],ecx
  40711a:	add    eax,0x6d20a05
  40711f:	add    eax,DWORD PTR [rbx]
  407121:	xor    BYTE PTR [rdx],al
  407123:	(bad)  
  407124:	add    DWORD PTR [rax+0x0],edx
  407127:	add    BYTE PTR [rcx],al
  407129:	add    al,0x1
  40712b:	add    BYTE PTR [rdx+rax*2],al
  40712e:	add    BYTE PTR [rax],al
  407130:	add    DWORD PTR [rsi],eax
  407132:	add    eax,DWORD PTR [rax]
  407134:	(bad)  
  407135:	rex.X add sil,BYTE PTR [rax]
  407138:	add    DWORD PTR [rax+0x0],esp
  40713b:	add    BYTE PTR [rcx],al
  40713d:	add    BYTE PTR [rax],al
  40713f:	add    BYTE PTR [rcx],al
  407141:	add    al,0x1
  407143:	add    BYTE PTR [rdx+riz*4],al
  407146:	add    BYTE PTR [rax],al
  407148:	add    DWORD PTR [rax],eax
  40714a:	add    BYTE PTR [rax],al
  40714c:	add    DWORD PTR [rsi],edx
  40714e:	or     DWORD PTR [rax],eax
  407150:	(bad)  
  407151:	mov    BYTE PTR [rsi],al
  407153:	add    BYTE PTR [rax],dl
  407155:	js     0x40715c
  407157:	add    BYTE PTR [rbx],cl
  407159:	push   0xffffffffe2060004
  40715e:	add    dh,BYTE PTR [rax]
  407160:	add    DWORD PTR [rax+0x0],esp
  407163:	add    BYTE PTR [rcx],al
  407165:	add    BYTE PTR [rax],al
  407167:	add    BYTE PTR [rcx],al
  407169:	add    BYTE PTR [rax],al
  40716b:	add    BYTE PTR [rcx],al
  40716d:	add    BYTE PTR [rax],al
  40716f:	add    BYTE PTR [rcx],al
  407171:	(bad)  
  407172:	add    eax,DWORD PTR [rax]
  407174:	(bad)  
  407175:	(bad)  
  407177:	xor    BYTE PTR [rcx],al
  407179:	(bad)  
  40717a:	add    BYTE PTR [rax],al
  40717c:	add    DWORD PTR [rdi+rax*1],ecx
  40717f:	add    BYTE PTR [rdx+riz*4],cl
  407182:	or     BYTE PTR [rax],dh
  407184:	(bad)  
  407185:	(bad)  
  407186:	(bad)  
  407187:	jo     0x40718e
  407189:	push   rax
  40718a:	add    al,0xc0
  40718c:	add    dl,al
  40718e:	add    BYTE PTR [rax],al
  407190:	add    DWORD PTR [rcx],edx
  407192:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e23a9
  407198:	or     dh,BYTE PTR [rax]
  40719a:	or     DWORD PTR [rax+0x8],esp
  40719d:	jo     0x4071a6
  40719f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x2207576
  4071a6:	add    BYTE PTR [rax],al
  4071a8:	add    DWORD PTR [rcx+rax*1],eax
  4071ab:	add    BYTE PTR [rdx+rax*2],al
  4071ae:	add    BYTE PTR [rax],al
  4071b0:	add    DWORD PTR [rdx],ecx
  4071b2:	(bad)  
  4071b3:	add    BYTE PTR [rdx],cl
  4071b5:	xor    al,BYTE PTR [rsi]
  4071b7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b0761d
  4071bd:	push   rax
  4071be:	add    al,al
  4071c0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571c8
  4071c6:	add    DWORD PTR [rax],esi
  4071c8:	add    DWORD PTR [rax],ecx
  4071ca:	add    eax,0x4420800
  4071cf:	xor    BYTE PTR [rbx],al
  4071d1:	(bad)  
  4071d2:	add    dh,BYTE PTR [rax+0x1]
  4071d5:	push   rax
  4071d6:	add    BYTE PTR [rax],al
  4071d8:	add    DWORD PTR [rdi],eax
  4071da:	add    al,0x0
  4071dc:	(bad)  
  4071dd:	xor    al,BYTE PTR [rbx]
  4071df:	xor    BYTE PTR [rdx],al
  4071e1:	(bad)  
  4071e2:	add    DWORD PTR [rax+0x1],esi
  4071e5:	add    eax,0x32050002
  4071ea:	add    DWORD PTR [rax],esi
  4071ec:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571f4
  4071f2:	add    DWORD PTR [rax],esi
  4071f4:	add    DWORD PTR [rax],eax
  4071f6:	add    BYTE PTR [rax],al
  4071f8:	add    DWORD PTR [rax],eax
  4071fa:	add    BYTE PTR [rax],al
  4071fc:	add    DWORD PTR [rax],eax
  4071fe:	add    BYTE PTR [rax],al
  407200:	add    DWORD PTR [rdi],eax
  407202:	add    al,0x0
  407204:	(bad)  
  407205:	xor    al,BYTE PTR [rbx]
  407207:	xor    BYTE PTR [rdx],al
  407209:	(bad)  
  40720a:	add    DWORD PTR [rax+0x1],esi
  40720d:	(bad)  
  40720e:	add    eax,DWORD PTR [rax]
  407210:	(bad)  
  407211:	rex.X add sil,BYTE PTR [rax]
  407214:	add    DWORD PTR [rax+0x0],esp
  407217:	add    BYTE PTR [rcx],al
  407219:	add    eax,0x32050002
  40721e:	add    DWORD PTR [rax],esi
  407220:	add    DWORD PTR [rdi],eax
  407222:	add    al,0x0
  407224:	(bad)  
  407225:	xor    al,BYTE PTR [rbx]
  407227:	xor    BYTE PTR [rdx],al
  407229:	(bad)  
  40722a:	add    DWORD PTR [rax+0x1],esi
  40722d:	(bad)  
  40722e:	add    eax,DWORD PTR [rax]
  407230:	(bad)  
  407231:	rex.X add sil,BYTE PTR [rax]
  407234:	add    DWORD PTR [rax+0x0],esp
  407237:	add    BYTE PTR [rcx],al
  407239:	(bad)  
  40723a:	add    eax,DWORD PTR [rax]
  40723c:	(bad)  
  40723d:	rex.X add sil,BYTE PTR [rax]
  407240:	add    DWORD PTR [rax+0x0],esp
  407243:	add    BYTE PTR [rcx],al
  407245:	or     BYTE PTR [rip+0x4420800],al        # 0x4827a4b
  40724b:	xor    BYTE PTR [rbx],al
  40724d:	(bad)  
  40724e:	add    dh,BYTE PTR [rax+0x1]
  407251:	push   rax
  407252:	add    BYTE PTR [rax],al
  407254:	add    DWORD PTR [rax],eax
  407256:	add    BYTE PTR [rax],al
  407258:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	js     0x408f92
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	push   0x2000009b
  409011:	xchg   ebx,eax
  409012:	add    BYTE PTR [rax],al
  409014:	test   al,0x90
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	rcr    BYTE PTR [rbx-0x6cb00000],0x0
  409027:	add    BYTE PTR [rax],bh
  409029:	xchg   ecx,eax
	...
  409032:	add    BYTE PTR [rax],al
  409034:	call   0xffffffffe04090d4
  409039:	xchg   ebx,eax
  40903a:	add    BYTE PTR [rax],al
  40903c:	push   0x91
  409041:	add    BYTE PTR [rax],al
  409043:	add    BYTE PTR [rax],al
  409045:	add    BYTE PTR [rax],al
  409047:	add    BYTE PTR [rsp+rbx*4+0x0],dl
  40904b:	add    BYTE PTR [rax],dl
  40904d:	xchg   esp,eax
  40904e:	add    BYTE PTR [rax],al
  409050:	sub    BYTE PTR [rdx+0x0],dl
  409056:	add    BYTE PTR [rax],al
  409058:	add    BYTE PTR [rax],al
  40905a:	add    BYTE PTR [rax],al
  40905c:	fcomp  QWORD PTR [rax+rax*1+0x94d000]
	...
  409077:	add    al,cl
  409079:	xchg   ebp,eax
  40907a:	add    BYTE PTR [rax],al
  40907c:	add    BYTE PTR [rax],al
  40907e:	add    BYTE PTR [rax],al
  409080:	call   0x40911a
  409085:	add    BYTE PTR [rax],al
  409087:	add    BYTE PTR [rax],al
  409089:	xchg   esi,eax
  40908a:	add    BYTE PTR [rax],al
  40908c:	add    BYTE PTR [rax],al
  40908e:	add    BYTE PTR [rax],al
  409090:	sbb    al,0x96
  409092:	add    BYTE PTR [rax],al
  409094:	add    BYTE PTR [rax],al
  409096:	add    BYTE PTR [rax],al
  409098:	cmp    BYTE PTR [rsi+0x0],dl
	...
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	rex.WR xchg rsi,rax
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    BYTE PTR [rax],al
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	fs xchg esi,eax
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	js     0x409050
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	mov    WORD PTR [rsi+0x0],ss
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	pushf  
  4090c9:	xchg   esi,eax
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	lods   al,BYTE PTR ds:[rsi]
  4090d1:	xchg   esi,eax
  4090d2:	add    BYTE PTR [rax],al
  4090d4:	add    BYTE PTR [rax],al
  4090d6:	add    BYTE PTR [rax],al
  4090d8:	enter  0x96,0x0
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	(bad)  
  4090e1:	xchg   esi,eax
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	loopne 0x409080
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rax],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	lock xchg esi,eax
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	add    BYTE PTR [rdi+0x0],dl
  4090fe:	add    BYTE PTR [rax],al
  409100:	adc    al,0x97
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	and    al,0x97
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	cmp    BYTE PTR [rdi+0x0],dl
  409116:	add    BYTE PTR [rax],al
  409118:	push   rsp
  409119:	xchg   edi,eax
  40911a:	add    BYTE PTR [rax],al
  40911c:	add    BYTE PTR [rax],al
  40911e:	add    BYTE PTR [rax],al
  409120:	fs xchg edi,eax
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	je     0x4090c1
	...
  409136:	add    BYTE PTR [rax],al
  409138:	mov    BYTE PTR [rdi+0x0],dl
  40913e:	add    BYTE PTR [rax],al
  409140:	lods   al,BYTE PTR ds:[rsi]
  409141:	xchg   edi,eax
  409142:	add    BYTE PTR [rax],al
  409144:	add    BYTE PTR [rax],al
  409146:	add    BYTE PTR [rax],al
  409148:	enter  0x97,0x0
  40914c:	add    BYTE PTR [rax],al
  40914e:	add    BYTE PTR [rax],al
  409150:	fcom   QWORD PTR [rdi+0x0]
  409156:	add    BYTE PTR [rax],al
  409158:	lock xchg edi,eax
	...
  409166:	add    BYTE PTR [rax],al
  409168:	or     BYTE PTR [rax+0x0],bl
  40916e:	add    BYTE PTR [rax],al
  409170:	and    BYTE PTR [rax+0x0],bl
  409176:	add    BYTE PTR [rax],al
  409178:	cmp    BYTE PTR [rax+0x0],bl
  40917e:	add    BYTE PTR [rax],al
  409180:	rex.WR cdqe 
  409182:	add    BYTE PTR [rax],al
  409184:	add    BYTE PTR [rax],al
  409186:	add    BYTE PTR [rax],al
  409188:	(bad)  
  409189:	cwde   
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	js     0x40912a
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax],al
  409196:	add    BYTE PTR [rax],al
  409198:	mov    BYTE PTR [rax+0x0],bl
  40919e:	add    BYTE PTR [rax],al
  4091a0:	(bad)  
  4091a1:	cwde   
  4091a2:	add    BYTE PTR [rax],al
  4091a4:	add    BYTE PTR [rax],al
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	mov    ah,0x98
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	(bad)  
  4091b1:	cwde   
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	add    BYTE PTR [rax],al
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	loopne 0x409152
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    BYTE PTR [rax],al
  4091be:	add    BYTE PTR [rax],al
  4091c0:	clc    
  4091c1:	cwde   
  4091c2:	add    BYTE PTR [rax],al
  4091c4:	add    BYTE PTR [rax],al
  4091c6:	add    BYTE PTR [rax],al
  4091c8:	adc    bl,BYTE PTR [rcx+0x0]
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	sub    BYTE PTR [rcx+0x0],bl
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	cmp    al,0x99
  4091da:	add    BYTE PTR [rax],al
  4091dc:	add    BYTE PTR [rax],al
  4091de:	add    BYTE PTR [rax],al
  4091e0:	push   rsi
  4091e1:	cdq    
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	add    BYTE PTR [rax],al
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	push   0xffffffffffffff99
  4091ea:	add    BYTE PTR [rax],al
  4091ec:	add    BYTE PTR [rax],al
  4091ee:	add    BYTE PTR [rax],al
  4091f0:	mov    BYTE PTR [rcx+0x0],bl
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	nop
  4091f9:	cdq    
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	add    BYTE PTR [rax],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409201:	cdq    
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	mov    dl,0x99
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	(bad)  
  409211:	cdq    
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	loopne 0x4091b3
	...
  409226:	add    BYTE PTR [rax],al
  409228:	lock cdq 
  40922a:	add    BYTE PTR [rax],al
  40922c:	add    BYTE PTR [rax],al
  40922e:	add    BYTE PTR [rax],al
  409230:	or     BYTE PTR [rdx+0x0],bl
  409236:	add    BYTE PTR [rax],al
  409238:	(bad)  
  409239:	(bad)  
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	es (bad) 
  409242:	add    BYTE PTR [rax],al
  409244:	add    BYTE PTR [rax],al
  409246:	add    BYTE PTR [rax],al
  409248:	xor    bl,BYTE PTR [rdx+0x0]
  40924e:	add    BYTE PTR [rax],al
  409250:	rex (bad) 
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	push   rax
  409259:	(bad)  
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	(bad)  
  409261:	(bad)  
  409262:	add    BYTE PTR [rax],al
  409264:	add    BYTE PTR [rax],al
  409266:	add    BYTE PTR [rax],al
  409268:	jbe    0x409204
  40926a:	add    BYTE PTR [rax],al
  40926c:	add    BYTE PTR [rax],al
  40926e:	add    BYTE PTR [rax],al
  409270:	sbb    BYTE PTR [rdx+0x0],0x0
  409277:	add    BYTE PTR [rsi+0x9a],cl
  40927d:	add    BYTE PTR [rax],al
  40927f:	add    BYTE PTR [rax+0x9a],bl
  409285:	add    BYTE PTR [rax],al
  409287:	add    BYTE PTR [rdx+0x9a],ah
  40928d:	add    BYTE PTR [rax],al
  40928f:	add    BYTE PTR [rsi+0x9a],ch
  409295:	add    BYTE PTR [rax],al
  409297:	add    BYTE PTR [rsi+0x9a],dh
  40929d:	add    BYTE PTR [rax],al
  40929f:	add    al,al
  4092a1:	(bad)  
  4092a2:	add    BYTE PTR [rax],al
  4092a4:	add    BYTE PTR [rax],al
  4092a6:	add    BYTE PTR [rax],al
  4092a8:	retf   0x9a
  4092ab:	add    BYTE PTR [rax],al
  4092ad:	add    BYTE PTR [rax],al
  4092af:	add    dl,dl
  4092b1:	(bad)  
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	fcomp  QWORD PTR [rdx+0x0]
  4092be:	add    BYTE PTR [rax],al
  4092c0:	in     al,0x9a
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	out    dx,al
  4092c9:	(bad)  
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    BYTE PTR [rax],al
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	neg    BYTE PTR [rdx+0x0]
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	add    BYTE PTR [rbx+0x0],bl
  4092de:	add    BYTE PTR [rax],al
  4092e0:	or     bl,BYTE PTR [rbx+0x0]
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	adc    al,0x9b
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	add    BYTE PTR [rax],al
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	(bad)  
  4092f1:	fwait
  4092f2:	add    BYTE PTR [rax],al
  4092f4:	add    BYTE PTR [rax],al
  4092f6:	add    BYTE PTR [rax],al
  4092f8:	sub    BYTE PTR [rbx+0x0],bl
  4092fe:	add    BYTE PTR [rax],al
  409300:	xor    bl,BYTE PTR [rbx+0x0]
  409306:	add    BYTE PTR [rax],al
  409308:	cmp    al,0x9b
  40930a:	add    BYTE PTR [rax],al
  40930c:	add    BYTE PTR [rax],al
  40930e:	add    BYTE PTR [rax],al
  409310:	rex.RX
  409311:	fwait
	...
  40931e:	add    BYTE PTR [rax],al
  409320:	enter  0x95,0x0
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	call   0x4093c2
  40932d:	add    BYTE PTR [rax],al
  40932f:	add    BYTE PTR [rax],al
  409331:	xchg   esi,eax
  409332:	add    BYTE PTR [rax],al
  409334:	add    BYTE PTR [rax],al
  409336:	add    BYTE PTR [rax],al
  409338:	sbb    al,0x96
  40933a:	add    BYTE PTR [rax],al
  40933c:	add    BYTE PTR [rax],al
  40933e:	add    BYTE PTR [rax],al
  409340:	cmp    BYTE PTR [rsi+0x0],dl
	...
  40934e:	add    BYTE PTR [rax],al
  409350:	rex.WR xchg rsi,rax
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	fs xchg esi,eax
  40935a:	add    BYTE PTR [rax],al
  40935c:	add    BYTE PTR [rax],al
  40935e:	add    BYTE PTR [rax],al
  409360:	js     0x4092f8
  409362:	add    BYTE PTR [rax],al
  409364:	add    BYTE PTR [rax],al
  409366:	add    BYTE PTR [rax],al
  409368:	mov    WORD PTR [rsi+0x0],ss
  40936e:	add    BYTE PTR [rax],al
  409370:	pushf  
  409371:	xchg   esi,eax
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	lods   al,BYTE PTR ds:[rsi]
  409379:	xchg   esi,eax
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	enter  0x96,0x0
  409384:	add    BYTE PTR [rax],al
  409386:	add    BYTE PTR [rax],al
  409388:	(bad)  
  409389:	xchg   esi,eax
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	loopne 0x409328
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	lock xchg esi,eax
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
  40939e:	add    BYTE PTR [rax],al
  4093a0:	add    BYTE PTR [rdi+0x0],dl
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	adc    al,0x97
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	add    BYTE PTR [rax],al
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	and    al,0x97
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	add    BYTE PTR [rax],al
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	cmp    BYTE PTR [rdi+0x0],dl
  4093be:	add    BYTE PTR [rax],al
  4093c0:	push   rsp
  4093c1:	xchg   edi,eax
  4093c2:	add    BYTE PTR [rax],al
  4093c4:	add    BYTE PTR [rax],al
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	fs xchg edi,eax
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	add    BYTE PTR [rax],al
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	je     0x409369
	...
  4093de:	add    BYTE PTR [rax],al
  4093e0:	mov    BYTE PTR [rdi+0x0],dl
  4093e6:	add    BYTE PTR [rax],al
  4093e8:	lods   al,BYTE PTR ds:[rsi]
  4093e9:	xchg   edi,eax
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	enter  0x97,0x0
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	fcom   QWORD PTR [rdi+0x0]
  4093fe:	add    BYTE PTR [rax],al
  409400:	lock xchg edi,eax
	...
  40940e:	add    BYTE PTR [rax],al
  409410:	or     BYTE PTR [rax+0x0],bl
  409416:	add    BYTE PTR [rax],al
  409418:	and    BYTE PTR [rax+0x0],bl
  40941e:	add    BYTE PTR [rax],al
  409420:	cmp    BYTE PTR [rax+0x0],bl
  409426:	add    BYTE PTR [rax],al
  409428:	rex.WR cdqe 
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	(bad)  
  409431:	cwde   
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	js     0x4093d2
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	mov    BYTE PTR [rax+0x0],bl
  409446:	add    BYTE PTR [rax],al
  409448:	(bad)  
  409449:	cwde   
  40944a:	add    BYTE PTR [rax],al
  40944c:	add    BYTE PTR [rax],al
  40944e:	add    BYTE PTR [rax],al
  409450:	mov    ah,0x98
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	(bad)  
  409459:	cwde   
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
  40945e:	add    BYTE PTR [rax],al
  409460:	loopne 0x4093fa
  409462:	add    BYTE PTR [rax],al
  409464:	add    BYTE PTR [rax],al
  409466:	add    BYTE PTR [rax],al
  409468:	clc    
  409469:	cwde   
  40946a:	add    BYTE PTR [rax],al
  40946c:	add    BYTE PTR [rax],al
  40946e:	add    BYTE PTR [rax],al
  409470:	adc    bl,BYTE PTR [rcx+0x0]
  409476:	add    BYTE PTR [rax],al
  409478:	sub    BYTE PTR [rcx+0x0],bl
  40947e:	add    BYTE PTR [rax],al
  409480:	cmp    al,0x99
  409482:	add    BYTE PTR [rax],al
  409484:	add    BYTE PTR [rax],al
  409486:	add    BYTE PTR [rax],al
  409488:	push   rsi
  409489:	cdq    
  40948a:	add    BYTE PTR [rax],al
  40948c:	add    BYTE PTR [rax],al
  40948e:	add    BYTE PTR [rax],al
  409490:	push   0xffffffffffffff99
  409492:	add    BYTE PTR [rax],al
  409494:	add    BYTE PTR [rax],al
  409496:	add    BYTE PTR [rax],al
  409498:	mov    BYTE PTR [rcx+0x0],bl
  40949e:	add    BYTE PTR [rax],al
  4094a0:	nop
  4094a1:	cdq    
  4094a2:	add    BYTE PTR [rax],al
  4094a4:	add    BYTE PTR [rax],al
  4094a6:	add    BYTE PTR [rax],al
  4094a8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4094a9:	cdq    
  4094aa:	add    BYTE PTR [rax],al
  4094ac:	add    BYTE PTR [rax],al
  4094ae:	add    BYTE PTR [rax],al
  4094b0:	mov    dl,0x99
  4094b2:	add    BYTE PTR [rax],al
  4094b4:	add    BYTE PTR [rax],al
  4094b6:	add    BYTE PTR [rax],al
  4094b8:	(bad)  
  4094b9:	cdq    
  4094ba:	add    BYTE PTR [rax],al
  4094bc:	add    BYTE PTR [rax],al
  4094be:	add    BYTE PTR [rax],al
  4094c0:	loopne 0x40945b
	...
  4094ce:	add    BYTE PTR [rax],al
  4094d0:	lock cdq 
  4094d2:	add    BYTE PTR [rax],al
  4094d4:	add    BYTE PTR [rax],al
  4094d6:	add    BYTE PTR [rax],al
  4094d8:	or     BYTE PTR [rdx+0x0],bl
  4094de:	add    BYTE PTR [rax],al
  4094e0:	(bad)  
  4094e1:	(bad)  
  4094e2:	add    BYTE PTR [rax],al
  4094e4:	add    BYTE PTR [rax],al
  4094e6:	add    BYTE PTR [rax],al
  4094e8:	es (bad) 
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	add    BYTE PTR [rax],al
  4094ee:	add    BYTE PTR [rax],al
  4094f0:	xor    bl,BYTE PTR [rdx+0x0]
  4094f6:	add    BYTE PTR [rax],al
  4094f8:	rex (bad) 
  4094fa:	add    BYTE PTR [rax],al
  4094fc:	add    BYTE PTR [rax],al
  4094fe:	add    BYTE PTR [rax],al
  409500:	push   rax
  409501:	(bad)  
  409502:	add    BYTE PTR [rax],al
  409504:	add    BYTE PTR [rax],al
  409506:	add    BYTE PTR [rax],al
  409508:	(bad)  
  409509:	(bad)  
  40950a:	add    BYTE PTR [rax],al
  40950c:	add    BYTE PTR [rax],al
  40950e:	add    BYTE PTR [rax],al
  409510:	jbe    0x4094ac
  409512:	add    BYTE PTR [rax],al
  409514:	add    BYTE PTR [rax],al
  409516:	add    BYTE PTR [rax],al
  409518:	sbb    BYTE PTR [rdx+0x0],0x0
  40951f:	add    BYTE PTR [rsi+0x9a],cl
  409525:	add    BYTE PTR [rax],al
  409527:	add    BYTE PTR [rax+0x9a],bl
  40952d:	add    BYTE PTR [rax],al
  40952f:	add    BYTE PTR [rdx+0x9a],ah
  409535:	add    BYTE PTR [rax],al
  409537:	add    BYTE PTR [rsi+0x9a],ch
  40953d:	add    BYTE PTR [rax],al
  40953f:	add    BYTE PTR [rsi+0x9a],dh
  409545:	add    BYTE PTR [rax],al
  409547:	add    al,al
  409549:	(bad)  
  40954a:	add    BYTE PTR [rax],al
  40954c:	add    BYTE PTR [rax],al
  40954e:	add    BYTE PTR [rax],al
  409550:	retf   0x9a
  409553:	add    BYTE PTR [rax],al
  409555:	add    BYTE PTR [rax],al
  409557:	add    dl,dl
  409559:	(bad)  
  40955a:	add    BYTE PTR [rax],al
  40955c:	add    BYTE PTR [rax],al
  40955e:	add    BYTE PTR [rax],al
  409560:	fcomp  QWORD PTR [rdx+0x0]
  409566:	add    BYTE PTR [rax],al
  409568:	in     al,0x9a
  40956a:	add    BYTE PTR [rax],al
  40956c:	add    BYTE PTR [rax],al
  40956e:	add    BYTE PTR [rax],al
  409570:	out    dx,al
  409571:	(bad)  
  409572:	add    BYTE PTR [rax],al
  409574:	add    BYTE PTR [rax],al
  409576:	add    BYTE PTR [rax],al
  409578:	neg    BYTE PTR [rdx+0x0]
  40957e:	add    BYTE PTR [rax],al
  409580:	add    BYTE PTR [rbx+0x0],bl
  409586:	add    BYTE PTR [rax],al
  409588:	or     bl,BYTE PTR [rbx+0x0]
  40958e:	add    BYTE PTR [rax],al
  409590:	adc    al,0x9b
  409592:	add    BYTE PTR [rax],al
  409594:	add    BYTE PTR [rax],al
  409596:	add    BYTE PTR [rax],al
  409598:	(bad)  
  409599:	fwait
  40959a:	add    BYTE PTR [rax],al
  40959c:	add    BYTE PTR [rax],al
  40959e:	add    BYTE PTR [rax],al
  4095a0:	sub    BYTE PTR [rbx+0x0],bl
  4095a6:	add    BYTE PTR [rax],al
  4095a8:	xor    bl,BYTE PTR [rbx+0x0]
  4095ae:	add    BYTE PTR [rax],al
  4095b0:	cmp    al,0x9b
  4095b2:	add    BYTE PTR [rax],al
  4095b4:	add    BYTE PTR [rax],al
  4095b6:	add    BYTE PTR [rax],al
  4095b8:	rex.RX
  4095b9:	fwait
	...
  4095c6:	add    BYTE PTR [rax],al
  4095c8:	add    al,0x5
  4095ca:	addr32 pop rdi
  4095cc:	jb     0x409633
  4095ce:	jae    0x40963f
  4095d0:	jne    0x409644
  4095d2:	movsxd esp,DWORD PTR [rbp+0x5f]
  4095d5:	outs   dx,BYTE PTR gs:[rsi]
  4095d7:	jne    0x409646
  4095d9:	gs jb  0x40963d
  4095dc:	je     0x409643
  4095de:	pop    rdi
  4095df:	movsxd ebp,DWORD PTR [rax+0x69]
  4095e2:	ins    BYTE PTR es:[rdi],dx
  4095e3:	fs jb  0x40964b
  4095e6:	outs   dx,BYTE PTR ds:[rsi]
  4095e7:	add    BYTE PTR [rax],cl
  4095e9:	add    eax,0x65725f67
  4095ee:	jae    0x40965f
  4095f0:	jne    0x409664
  4095f2:	movsxd esp,DWORD PTR [rbp+0x5f]
  4095f5:	addr32 gs je 0x409658
  4095f9:	imul   ebp,DWORD PTR [rsi+0x66],0x6f
  409600:	or     eax,DWORD PTR [rip+0x65725f67]        # 0x65b2f56d
  409606:	jae    0x409677
  409608:	jne    0x40967c
  40960a:	movsxd esp,DWORD PTR [rbp+0x5f]
  40960d:	ins    BYTE PTR es:[rdi],dx
  40960e:	outs   dx,DWORD PTR ds:[rsi]
  40960f:	outs   dx,DWORD PTR ds:[rsi]
  409610:	imul   esi,DWORD PTR [rbp+0x70],0x5f
  409614:	fs (bad) 
  409616:	je     0x409679
  409618:	add    BYTE PTR [rax],al
  40961a:	add    BYTE PTR [rax],al
  40961c:	or     eax,0x725f6705
  409621:	gs jae 0x409693
  409624:	jne    0x409698
  409626:	movsxd esp,DWORD PTR [rbp+0x5f]
  409629:	outs   dx,BYTE PTR ds:[rsi]
  40962a:	gs ja  0x40968c
  40962d:	data16 jb 0x40969f
  409630:	ins    DWORD PTR es:[rdi],dx
  409631:	pop    rdi
  409632:	fs (bad) 
  409634:	je     0x409697
  409636:	add    BYTE PTR [rax],al
  409638:	adc    BYTE PTR [rip+0x65725f67],al        # 0x65b2f5a5
  40963e:	jae    0x4096af
  409640:	jne    0x4096b4
  409642:	movsxd esp,DWORD PTR [rbp+0x5f]
  409645:	jne    0x4096b5
  409647:	jb     0x4096ae
  409649:	data16 add BYTE PTR [rax],al
  40964c:	add    DWORD PTR [rax],eax
  40964e:	pop    rdi
  40964f:	ins    BYTE PTR es:[edi],dx
  409651:	imul   esp,DWORD PTR [rdx+0x5f],0x5f746567
  409658:	ins    BYTE PTR es:[rdi],dx
  409659:	outs   dx,DWORD PTR ds:[rsi]
  40965a:	movsxd esp,DWORD PTR [rcx+0x6c]
  40965d:	gs pop rdi
  40965f:	imul   esi,DWORD PTR fs:[rdx+0x0],0x6700a200
  409667:	pop    rdi
  409668:	(bad)  
  409669:	jns    0x4096df
  40966b:	gs jae 0x4096cd
  40966e:	addr32 gs je 0x4096d1
  409672:	fs (bad) 
  409674:	je     0x4096d7
  409676:	add    BYTE PTR [rax],al
  409678:	test   al,0x0
  40967a:	addr32 pop rdi
  40967c:	(bad)  
  40967d:	jns    0x4096f3
  40967f:	gs jae 0x4096e1
  409682:	outs   dx,BYTE PTR ds:[rsi]
  409683:	gs ja  0x4096e5
  409686:	je     0x4096e9
  409688:	imul   esp,DWORD PTR [rbp+0x0],0x0
  40968c:	stos   DWORD PTR es:[rdi],eax
  40968d:	add    BYTE PTR [rdi+0x5f],ah
  409690:	(bad)  
  409691:	jns    0x409707
  409693:	gs jae 0x4096f5
  409696:	jne    0x409706
  409698:	jb     0x4096ff
  40969a:	data16 add BYTE PTR [rdx+0x1],ah
  40969e:	addr32 pop rdi
  4096a0:	gs jb  0x409715
  4096a3:	outs   dx,DWORD PTR ds:[rsi]
  4096a4:	jb     0x409705
  4096a6:	data16 jb 0x40970e
  4096a9:	add    BYTE PTR gs:[rax],al
  4096ac:	imul   eax,DWORD PTR [rcx],0x69665f67
  4096b2:	ins    BYTE PTR es:[rdi],dx
  4096b3:	gs pop rdi
  4096b5:	addr32 gs je 0x409718
  4096b9:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4096bc:	je     0x409723
  4096be:	outs   dx,BYTE PTR ds:[rsi]
  4096bf:	je     0x409734
  4096c1:	pop    rdi
  4096c2:	jne    0x409738
  4096c4:	data16 cmp BYTE PTR [rax],al
  4096c7:	add    BYTE PTR [rdx+0x1],bh
  4096ca:	addr32 pop rdi
  4096cc:	data16 jb 0x409734
  4096cf:	add    BYTE PTR gs:[rax],al
  4096d2:	add    BYTE PTR [rax],al
  4096d4:	(bad)  
  4096d5:	add    esp,DWORD PTR [rdi+0x5f]
  4096d8:	jo     0x40974c
  4096da:	imul   ebp,DWORD PTR [rsi+0x74],0x30000000
  4096e1:	add    esp,DWORD PTR [rdi+0x5f]
  4096e4:	jo     0x409758
  4096e6:	imul   ebp,DWORD PTR [rsi+0x74],0x727265
  4096ed:	add    BYTE PTR [rax],al
  4096ef:	add    BYTE PTR [rsp+rax*1+0x67],bh
  4096f3:	pop    rdi
  4096f4:	jae    0x40976a
  4096f6:	jb     0x40975b
  4096f8:	outs   dx,DWORD PTR ds:[rsi]
  4096f9:	outs   dx,BYTE PTR ds:[rsi]
  4096fa:	movsxd esp,DWORD PTR [rcx+0x74]
  4096fd:	add    BYTE PTR [rax],al
  4096ff:	add    BYTE PTR [rax+0x735f6704],al
  409705:	je     0x409779
  409707:	fs jne 0x40977a
  40970a:	pop    rdi
  40970b:	jo     0x40977f
  40970d:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  409714:	test   DWORD PTR [rdi+riz*2],eax
  409717:	pop    rdi
  409718:	jae    0x40978e
  40971a:	jb     0x409782
  40971c:	jb     0x409783
  40971e:	gs jbe 0x409721
  409721:	add    BYTE PTR [rax],al
  409723:	add    BYTE PTR [rsi+0x735f6704],al
  409729:	je     0x40979d
  40972b:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  409732:	outs   dx,BYTE PTR gs:[rsi]
  409734:	add    BYTE PTR fs:[rax],al
  409737:	add    BYTE PTR [rcx+0x735f6704],cl
  40973d:	je     0x4097b1
  40973f:	imul   ebp,DWORD PTR [rsi+0x67],0x7070615f
  409746:	outs   dx,BYTE PTR gs:[rsi]
  409748:	fs pop rdi
  40974a:	jo     0x4097be
  40974c:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  409753:	add    BYTE PTR [rcx+0x735f6704],bl
  409759:	je     0x4097cd
  40975b:	imul   ebp,DWORD PTR [rsi+0x67],0x6572665f
  409762:	add    BYTE PTR gs:[rax+0x735f6704],ah
  409769:	je     0x4097dd
  40976b:	imul   ebp,DWORD PTR [rsi+0x67],0x77656e5f
  409772:	add    BYTE PTR [rax],al
  409774:	test   al,0x4
  409776:	addr32 pop rdi
  409778:	jae    0x4097ee
  40977a:	jb     0x4097e5
  40977c:	outs   dx,BYTE PTR ds:[rsi]
  40977d:	addr32 pop rdi
  40977f:	jo     0x4097f3
  409781:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  409788:	sbb    eax,0x62696c00
  40978d:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  409794:	outs   dx,BYTE PTR ds:[rsi]
  409795:	fs pop rdi
  409797:	je     0x4097fe
  409799:	js     0x40980f
  40979b:	outs   dx,DWORD PTR fs:[rsi]
  40979d:	ins    DWORD PTR es:[rdi],dx
  40979e:	(bad)  
  40979f:	imul   ebp,DWORD PTR [rsi+0x5f],0x65646f63
  4097a6:	jae    0x40980d
  4097a8:	je     0x4097aa
  4097aa:	add    BYTE PTR [rax],al
  4097ac:	(bad)  
  4097ad:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4097b1:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  4097b8:	outs   dx,BYTE PTR ds:[rsi]
  4097b9:	fs je  0x409821
  4097bc:	js     0x409832
  4097be:	outs   dx,DWORD PTR fs:[rsi]
  4097c0:	ins    DWORD PTR es:[rdi],dx
  4097c1:	(bad)  
  4097c2:	imul   ebp,DWORD PTR [rsi+0x0],0x26000000
  4097c9:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4097cd:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  4097d4:	je     0x40984a
  4097d6:	gs js  0x40984d
  4097d9:	add    BYTE PTR [rax],al
  4097db:	add    BYTE PTR [rcx+0x0],al
  4097de:	ins    BYTE PTR es:[rdi],dx
  4097df:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  4097e6:	jae    0x40984d
  4097e8:	je     0x409856
  4097ea:	outs   dx,DWORD PTR ds:[rsi]
  4097eb:	movsxd esp,DWORD PTR [rcx+0x6c]
  4097ee:	add    BYTE PTR gs:[rbp+0x0],al
  4097f2:	ins    BYTE PTR es:[rdi],dx
  4097f3:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  4097fa:	je     0x409861
  4097fc:	js     0x409872
  4097fe:	outs   dx,DWORD PTR fs:[rsi]
  409800:	ins    DWORD PTR es:[rdi],dx
  409801:	(bad)  
  409802:	imul   ebp,DWORD PTR [rsi+0x0],0xd8000000
  409809:	add    BYTE PTR [rbp+riz*2+0x6c],al
  40980d:	gs je  0x409875
  409810:	rex.XB jb 0x40987c
  409813:	je     0x40987e
  409815:	movsxd esp,DWORD PTR [rcx+0x6c]
  409818:	push   rbx
  409819:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40981e:	outs   dx,BYTE PTR ds:[rsi]
  40981f:	add    al,bh
  409821:	add    BYTE PTR [rbp+0x6e],al
  409824:	je     0x40988b
  409826:	jb     0x40986b
  409828:	jb     0x409893
  40982a:	je     0x409895
  40982c:	movsxd esp,DWORD PTR [rcx+0x6c]
  40982f:	push   rbx
  409830:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409835:	outs   dx,BYTE PTR ds:[rsi]
  409836:	add    BYTE PTR [rax],al
  409838:	int    0x1
  40983a:	rex.RXB
  40983b:	gs je  0x409881
  40983e:	jne    0x4098b2
  409840:	jb     0x4098a7
  409842:	outs   dx,BYTE PTR ds:[rsi]
  409843:	je     0x409895
  409845:	jb     0x4098b6
  409847:	movsxd esp,DWORD PTR [rbp+0x73]
  40984a:	jae    0x40984c
  40984c:	(bad)  
  40984d:	add    DWORD PTR [rdi+0x65],eax
  409850:	je     0x409895
  409852:	jne    0x4098c6
  409854:	jb     0x4098bb
  409856:	outs   dx,BYTE PTR ds:[rsi]
  409857:	je     0x4098a9
  409859:	jb     0x4098ca
  40985b:	movsxd esp,DWORD PTR [rbp+0x73]
  40985e:	jae    0x4098a9
  409860:	fs add dl,dl
  409863:	add    DWORD PTR [rdi+0x65],eax
  409866:	je     0x4098ab
  409868:	jne    0x4098dc
  40986a:	jb     0x4098d1
  40986c:	outs   dx,BYTE PTR ds:[rsi]
  40986d:	je     0x4098c3
  40986f:	push   0x64616572
  409874:	rex.WB
  409875:	add    BYTE PTR fs:[rax],al
  409878:	adc    BYTE PTR [rdx],al
  40987a:	rex.RXB
  40987b:	gs je  0x4098ca
  40987e:	(bad)  
  40987f:	jae    0x4098f5
  409881:	rex.RB jb 0x4098f6
  409884:	outs   dx,DWORD PTR ds:[rsi]
  409885:	jb     0x409887
  409887:	add    BYTE PTR [rbx+0x2],dh
  40988a:	rex.RXB
  40988b:	gs je  0x4098e1
  40988e:	je     0x4098f1
  409890:	jb     0x409906
  409892:	jne    0x409904
  409894:	rex.WB outs dx,BYTE PTR ds:[rsi]
  409896:	outs   dx,WORD PTR ds:[rsi]
  409898:	add    BYTE PTR [r10+0x74654702],cl
  40989f:	push   rbx
  4098a0:	jns    0x409915
  4098a2:	je     0x409909
  4098a4:	ins    DWORD PTR es:[rdi],dx
  4098a5:	push   rsp
  4098a6:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4098ad:	ins    BYTE PTR es:[rdi],dx
  4098ae:	gs push rsp
  4098b0:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4098b7:	gs je  0x40990e
  4098ba:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4098c1:	je     0x4098c3
  4098c3:	add    cl,bh
  4098c5:	add    cl,BYTE PTR [rcx+0x6e]
  4098c8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4098d0:	rex.XB jb 0x40993c
  4098d3:	je     0x40993e
  4098d5:	movsxd esp,DWORD PTR [rcx+0x6c]
  4098d8:	push   rbx
  4098d9:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4098de:	outs   dx,BYTE PTR ds:[rsi]
  4098df:	add    BYTE PTR [rbx+0x3],cl
  4098e2:	rex.WR
  4098e3:	gs (bad) 
  4098e5:	jbe    0x40994c
  4098e7:	rex.XB jb 0x409953
  4098ea:	je     0x409955
  4098ec:	movsxd esp,DWORD PTR [rcx+0x6c]
  4098ef:	push   rbx
  4098f0:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4098f5:	outs   dx,BYTE PTR ds:[rsi]
  4098f6:	add    BYTE PTR [rax],al
  4098f8:	mov    ebx,0x65755103
  4098fd:	jb     0x409978
  4098ff:	push   rax
  409900:	gs jb  0x409969
  409903:	outs   dx,DWORD PTR ds:[rsi]
  409904:	jb     0x409973
  409906:	(bad)  
  409907:	outs   dx,BYTE PTR ds:[rsi]
  409908:	movsxd esp,DWORD PTR [rbp+0x43]
  40990b:	outs   dx,DWORD PTR ds:[rsi]
  40990c:	jne    0x40997c
  40990e:	je     0x409975
  409910:	jb     0x409912
  409912:	add    DWORD PTR [rdx+rdx*2],eax
  409915:	je     0x409983
  409917:	rex.B
  409918:	fs fs rex.RX jne 0x40998b
  40991d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409921:	outs   dx,BYTE PTR ds:[rsi]
  409922:	push   rsp
  409923:	(bad)  
  409924:	(bad)  
  409925:	ins    BYTE PTR es:[rdi],dx
  409926:	add    BYTE PTR gs:[rdx],al
  409929:	add    al,0x52
  40992b:	je     0x409999
  40992d:	rex.XB (bad) 
  40992f:	jo     0x4099a5
  409931:	jne    0x4099a5
  409933:	rex.XB outs dx,DWORD PTR gs:[rsi]
  409936:	outs   dx,BYTE PTR ds:[rsi]
  409937:	je     0x40999e
  409939:	js     0x4099af
  40993b:	add    BYTE PTR [rcx],cl
  40993d:	add    al,0x52
  40993f:	je     0x4099ad
  409941:	rex.WR outs dx,DWORD PTR ds:[rsi]
  409943:	outs   dx,DWORD PTR ds:[rsi]
  409944:	imul   esi,DWORD PTR [rbp+0x70],0x46
  409948:	jne    0x4099b8
  40994a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  40994e:	outs   dx,BYTE PTR ds:[rsi]
  40994f:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409951:	je     0x4099c5
  409953:	jns    0x409955
  409955:	add    BYTE PTR [rax],dl
  409957:	add    al,0x52
  409959:	je     0x4099c7
  40995b:	push   rsi
  40995c:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  409963:	outs   dx,BYTE PTR ds:[rsi]
  409964:	ja     0x4099cf
  409966:	outs   dx,BYTE PTR ds:[rsi]
  409967:	add    BYTE PTR fs:[rax],al
  40996a:	lahf   
  40996b:	add    al,0x53
  40996d:	gs je  0x4099c5
  409970:	outs   dx,BYTE PTR ds:[rsi]
  409971:	push   0x6c646e61
  409976:	gs fs rex.RB js 0x4099de
  40997b:	gs jo  0x4099f2
  40997e:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409985:	gs jb  0x409988
  409988:	lods   al,BYTE PTR ds:[rsi]
  409989:	add    al,0x53
  40998b:	ins    BYTE PTR es:[rdi],dx
  40998c:	gs gs jo 0x409990
  409990:	mov    edx,0x72655404
  409995:	ins    DWORD PTR es:[rdi],dx
  409996:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  40999d:	outs   dx,DWORD PTR ds:[rsi]
  40999e:	movsxd esp,DWORD PTR [rbp+0x73]
  4099a1:	jae    0x4099a3
  4099a3:	add    cl,al
  4099a5:	add    al,0x54
  4099a7:	ins    BYTE PTR es:[rdi],dx
  4099a8:	jae    0x4099f1
  4099aa:	gs je  0x409a03
  4099ad:	(bad)  
  4099ae:	ins    BYTE PTR es:[rdi],dx
  4099af:	jne    0x409a16
  4099b1:	add    dh,cl
  4099b3:	add    al,0x55
  4099b5:	outs   dx,BYTE PTR ds:[rsi]
  4099b6:	push   0x6c646e61
  4099bb:	gs fs rex.RB js 0x409a23
  4099c0:	gs jo  0x409a37
  4099c3:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4099ca:	gs jb  0x4099cd
  4099cd:	add    ah,ch
  4099cf:	add    al,0x56
  4099d1:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4099d8:	jb     0x409a49
  4099da:	je     0x409a41
  4099dc:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4099e0:	out    dx,al
  4099e1:	add    al,0x56
  4099e3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4099ea:	jne    0x409a51
  4099ec:	jb     0x409a67
  4099ee:	add    BYTE PTR [rax],al
  4099f0:	(bad)  
  4099f1:	add    BYTE PTR [rdi+0x5f],bl
  4099f4:	rex.XB pop r15
  4099f6:	jae    0x409a68
  4099f8:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  4099fc:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409a03:	ins    BYTE PTR es:[rdi],dx
  409a04:	gs jb  0x409a07
  409a07:	add    BYTE PTR [rsi+0x0],cl
  409a0a:	pop    rdi
  409a0b:	pop    rdi
  409a0c:	fs ins BYTE PTR es:[rdi],dx
  409a0e:	ins    BYTE PTR es:[rdi],dx
  409a0f:	outs   dx,DWORD PTR ds:[rsi]
  409a10:	outs   dx,BYTE PTR ds:[rsi]
  409a11:	gs js  0x409a7d
  409a14:	je     0x409a16
  409a16:	push   rcx
  409a17:	add    BYTE PTR [rdi+0x5f],bl
  409a1a:	addr32 gs je 0x409a8b
  409a1e:	(bad)  
  409a1f:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  409a26:	push   rdx
  409a27:	add    BYTE PTR [rdi+0x5f],bl
  409a2a:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  409a31:	add    BYTE PTR [rbx+0x0],dl
  409a34:	pop    rdi
  409a35:	pop    rdi
  409a36:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  409a3d:	movsxd eax,DWORD PTR [rax]
  409a3f:	add    BYTE PTR [rdx+0x0],bl
  409a42:	pop    rdi
  409a43:	pop    rdi
  409a44:	ins    BYTE PTR es:[rdi],dx
  409a45:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409a48:	jbe    0x409aa9
  409a4a:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  409a51:	add    BYTE PTR [rdi+0x5f],bl
  409a54:	jae    0x409abb
  409a56:	je     0x409ab7
  409a58:	(bad)  
  409a59:	jo     0x409acb
  409a5b:	pop    rdi
  409a5c:	je     0x409ad7
  409a5e:	jo     0x409ac5
  409a60:	add    BYTE PTR [rax],al
  409a62:	(bad)  
  409a63:	add    BYTE PTR [rdi+0x5f],bl
  409a66:	jae    0x409acd
  409a68:	je     0x409adf
  409a6a:	jae    0x409ad1
  409a6c:	jb     0x409adb
  409a6e:	(bad)  
  409a6f:	je     0x409ad9
  409a71:	gs jb  0x409ae6
  409a74:	add    BYTE PTR [rax],al
  409a76:	jno    0x409a78
  409a78:	pop    rdi
  409a79:	(bad)  
  409a7a:	movsxd ebp,DWORD PTR [rbp+0x64]
  409a7d:	ins    BYTE PTR es:[rdi],dx
  409a7e:	outs   dx,BYTE PTR ds:[rsi]
  409a7f:	add    BYTE PTR [rax+0x0],bh
  409a82:	pop    rdi
  409a83:	(bad)  
  409a84:	ins    DWORD PTR es:[rdi],dx
  409a85:	jae    0x409aee
  409a87:	pop    rdi
  409a88:	gs js  0x409af4
  409a8b:	je     0x409a8d
  409a8d:	add    BYTE PTR [rdx+0x65635f00],cl
  409a93:	js     0x409afe
  409a95:	je     0x409a97
  409a97:	add    dl,bl
  409a99:	add    BYTE PTR [rdi+0x66],bl
  409a9c:	ins    DWORD PTR es:[rdi],dx
  409a9d:	outs   dx,DWORD PTR ds:[rsi]
  409a9e:	fs add BYTE PTR gs:[rax],al
  409aa2:	sbb    al,BYTE PTR [rcx]
  409aa4:	pop    rdi
  409aa5:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  409aac:	ins    DWORD PTR es:[rdi],dx
  409aad:	add    BYTE PTR [rax+0x6f6c5f01],al
  409ab3:	movsxd ebp,DWORD PTR [rbx+0x0]
  409ab6:	and    eax,0x6e6f5f02
  409abb:	gs js  0x409b27
  409abe:	je     0x409ac0
  409ac0:	(bad)
  409ac4:	outs   dx,BYTE PTR ds:[rsi]
  409ac5:	ins    BYTE PTR es:[rdi],dx
  409ac6:	outs   dx,DWORD PTR ds:[rsi]
  409ac7:	movsxd ebp,DWORD PTR [rbx+0x0]
  409aca:	jg     0x409acf
  409acc:	(bad)  
  409acd:	(bad)  
  409ace:	outs   dx,DWORD PTR ds:[rsi]
  409acf:	jb     0x409b45
  409ad1:	add    BYTE PTR [rax+0x6c616303],dl
  409ad7:	ins    BYTE PTR es:[rdi],dx
  409ad8:	outs   dx,DWORD PTR ds:[rsi]
  409ad9:	movsxd eax,DWORD PTR [rax]
  409adb:	add    BYTE PTR [rbp+0x69786503],bl
  409ae1:	je     0x409ae3
  409ae3:	add    BYTE PTR [rax+0x72706603],dh
  409ae9:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  409af0:	data16 jb 0x409b58
  409af3:	add    BYTE PTR gs:[rax],al
  409af6:	ret    0x6603
  409af9:	ja     0x409b6d
  409afb:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  409b03:	(bad)  
  409b04:	ins    BYTE PTR es:[rdi],dx
  409b05:	ins    BYTE PTR es:[rdi],dx
  409b06:	outs   dx,DWORD PTR ds:[rsi]
  409b07:	movsxd eax,DWORD PTR [rax]
  409b09:	add    al,bh
  409b0b:	add    ebp,DWORD PTR [rbp+0x65]
  409b0e:	ins    DWORD PTR es:[rdi],dx
  409b0f:	movsxd esi,DWORD PTR [rax+0x79]
  409b12:	add    BYTE PTR [rax],al
  409b14:	(bad)  
  409b15:	add    al,0x73
  409b17:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409b1e:	and    al,0x4
  409b20:	jae    0x409b96
  409b22:	jb     0x409b87
  409b24:	ins    DWORD PTR es:[rdi],dx
  409b25:	jo     0x409b27
  409b27:	add    BYTE PTR [rbx],ch
  409b29:	add    al,0x73
  409b2b:	je     0x409b9f
  409b2d:	ins    BYTE PTR es:[rdi],dx
  409b2e:	outs   dx,BYTE PTR gs:[rsi]
  409b30:	add    BYTE PTR [rax],al
  409b32:	cs add al,0x73
  409b35:	je     0x409ba9
  409b37:	outs   dx,BYTE PTR ds:[rsi]
  409b38:	movsxd ebp,DWORD PTR [rbp+0x70]
  409b3b:	add    BYTE PTR [rsp+rax*1],dh
  409b3e:	jae    0x409bb4
  409b40:	jb     0x409bb5
  409b42:	je     0x409bb6
  409b44:	add    BYTE PTR [rax],al
  409b46:	rex.WRX add al,0x76
  409b49:	data16 jo 0x409bbe
  409b4c:	imul   ebp,DWORD PTR [rsi+0x74],0x66
  409b53:	add    BYTE PTR [rax],al
  409b55:	nop
  409b56:	add    BYTE PTR [rax],al
  409b58:	add    BYTE PTR [rax-0x70000000],dl
  409b5e:	add    BYTE PTR [rax],al
  409b60:	add    BYTE PTR [rax-0x70000000],dl
  409b66:	add    BYTE PTR [rax],al
  409b68:	ins    BYTE PTR es:[rdi],dx
  409b69:	imul   esp,DWORD PTR [rdx+0x67],0x322d6f69
  409b70:	xor    BYTE PTR cs:[rip+0x6c642e30],ch        # 0x6ca4c9a7
  409b77:	ins    BYTE PTR es:[rdi],dx
  409b78:	add    BYTE PTR [rax],al
  409b7a:	add    BYTE PTR [rax],al
  409b7c:	adc    al,0x90
  409b7e:	add    BYTE PTR [rax],al
  409b80:	adc    al,0x90
  409b82:	add    BYTE PTR [rax],al
  409b84:	adc    al,0x90
  409b86:	add    BYTE PTR [rax],al
  409b88:	adc    al,0x90
  409b8a:	add    BYTE PTR [rax],al
  409b8c:	adc    al,0x90
  409b8e:	add    BYTE PTR [rax],al
  409b90:	adc    al,0x90
  409b92:	add    BYTE PTR [rax],al
  409b94:	adc    al,0x90
  409b96:	add    BYTE PTR [rax],al
  409b98:	adc    al,0x90
  409b9a:	add    BYTE PTR [rax],al
  409b9c:	adc    al,0x90
  409b9e:	add    BYTE PTR [rax],al
  409ba0:	adc    al,0x90
  409ba2:	add    BYTE PTR [rax],al
  409ba4:	adc    al,0x90
  409ba6:	add    BYTE PTR [rax],al
  409ba8:	adc    al,0x90
  409baa:	add    BYTE PTR [rax],al
  409bac:	adc    al,0x90
  409bae:	add    BYTE PTR [rax],al
  409bb0:	adc    al,0x90
  409bb2:	add    BYTE PTR [rax],al
  409bb4:	adc    al,0x90
  409bb6:	add    BYTE PTR [rax],al
  409bb8:	adc    al,0x90
  409bba:	add    BYTE PTR [rax],al
  409bbc:	adc    al,0x90
  409bbe:	add    BYTE PTR [rax],al
  409bc0:	ins    BYTE PTR es:[rdi],dx
  409bc1:	imul   esp,DWORD PTR [rdx+0x67],0x2d62696c
  409bc8:	xor    ch,BYTE PTR [rsi]
  409bca:	xor    BYTE PTR [rip+0x6c642e30],ch        # 0x6ca4ca00
  409bd0:	ins    BYTE PTR es:[rdi],dx
  409bd1:	add    BYTE PTR [rax],al
  409bd3:	add    BYTE PTR [rax],ch
  409bd5:	nop
  409bd6:	add    BYTE PTR [rax],al
  409bd8:	sub    BYTE PTR [rax-0x6fd80000],dl
  409bde:	add    BYTE PTR [rax],al
  409be0:	sub    BYTE PTR [rax-0x6fd80000],dl
  409be6:	add    BYTE PTR [rax],al
  409be8:	ins    BYTE PTR es:[rdi],dx
  409be9:	imul   esp,DWORD PTR [rdx+0x69],0x2d6c746e
  409bf0:	cmp    BYTE PTR [rsi],ch
  409bf2:	fs ins BYTE PTR es:[rdi],dx
  409bf4:	ins    BYTE PTR es:[rdi],dx
  409bf5:	add    BYTE PTR [rax],al
  409bf7:	add    BYTE PTR [rax+rdx*4],bh
  409bfa:	add    BYTE PTR [rax],al
  409bfc:	cmp    al,0x90
  409bfe:	add    BYTE PTR [rax],al
  409c00:	cmp    al,0x90
  409c02:	add    BYTE PTR [rax],al
  409c04:	cmp    al,0x90
  409c06:	add    BYTE PTR [rax],al
  409c08:	cmp    al,0x90
  409c0a:	add    BYTE PTR [rax],al
  409c0c:	cmp    al,0x90
  409c0e:	add    BYTE PTR [rax],al
  409c10:	cmp    al,0x90
  409c12:	add    BYTE PTR [rax],al
  409c14:	cmp    al,0x90
  409c16:	add    BYTE PTR [rax],al
  409c18:	cmp    al,0x90
  409c1a:	add    BYTE PTR [rax],al
  409c1c:	cmp    al,0x90
  409c1e:	add    BYTE PTR [rax],al
  409c20:	cmp    al,0x90
  409c22:	add    BYTE PTR [rax],al
  409c24:	cmp    al,0x90
  409c26:	add    BYTE PTR [rax],al
  409c28:	cmp    al,0x90
  409c2a:	add    BYTE PTR [rax],al
  409c2c:	cmp    al,0x90
  409c2e:	add    BYTE PTR [rax],al
  409c30:	cmp    al,0x90
  409c32:	add    BYTE PTR [rax],al
  409c34:	cmp    al,0x90
  409c36:	add    BYTE PTR [rax],al
  409c38:	cmp    al,0x90
  409c3a:	add    BYTE PTR [rax],al
  409c3c:	cmp    al,0x90
  409c3e:	add    BYTE PTR [rax],al
  409c40:	cmp    al,0x90
  409c42:	add    BYTE PTR [rax],al
  409c44:	cmp    al,0x90
  409c46:	add    BYTE PTR [rax],al
  409c48:	cmp    al,0x90
  409c4a:	add    BYTE PTR [rax],al
  409c4c:	cmp    al,0x90
  409c4e:	add    BYTE PTR [rax],al
  409c50:	cmp    al,0x90
  409c52:	add    BYTE PTR [rax],al
  409c54:	rex.WXB
  409c55:	rex.RB push r10
  409c57:	rex.WRX
  409c58:	rex.RB
  409c59:	xor    r14,QWORD PTR [rdx]
  409c5c:	cs fs ins BYTE PTR es:[rdi],dx
  409c5f:	ins    BYTE PTR es:[rdi],dx
  409c60:	add    BYTE PTR [rax],al
  409c62:	add    BYTE PTR [rax],al
  409c64:	push   rax
  409c65:	nop
  409c66:	add    BYTE PTR [rax],al
  409c68:	push   rax
  409c69:	nop
  409c6a:	add    BYTE PTR [rax],al
  409c6c:	push   rax
  409c6d:	nop
  409c6e:	add    BYTE PTR [rax],al
  409c70:	push   rax
  409c71:	nop
  409c72:	add    BYTE PTR [rax],al
  409c74:	push   rax
  409c75:	nop
  409c76:	add    BYTE PTR [rax],al
  409c78:	push   rax
  409c79:	nop
  409c7a:	add    BYTE PTR [rax],al
  409c7c:	push   rax
  409c7d:	nop
  409c7e:	add    BYTE PTR [rax],al
  409c80:	push   rax
  409c81:	nop
  409c82:	add    BYTE PTR [rax],al
  409c84:	push   rax
  409c85:	nop
  409c86:	add    BYTE PTR [rax],al
  409c88:	push   rax
  409c89:	nop
  409c8a:	add    BYTE PTR [rax],al
  409c8c:	push   rax
  409c8d:	nop
  409c8e:	add    BYTE PTR [rax],al
  409c90:	push   rax
  409c91:	nop
  409c92:	add    BYTE PTR [rax],al
  409c94:	push   rax
  409c95:	nop
  409c96:	add    BYTE PTR [rax],al
  409c98:	push   rax
  409c99:	nop
  409c9a:	add    BYTE PTR [rax],al
  409c9c:	push   rax
  409c9d:	nop
  409c9e:	add    BYTE PTR [rax],al
  409ca0:	push   rax
  409ca1:	nop
  409ca2:	add    BYTE PTR [rax],al
  409ca4:	push   rax
  409ca5:	nop
  409ca6:	add    BYTE PTR [rax],al
  409ca8:	push   rax
  409ca9:	nop
  409caa:	add    BYTE PTR [rax],al
  409cac:	push   rax
  409cad:	nop
  409cae:	add    BYTE PTR [rax],al
  409cb0:	push   rax
  409cb1:	nop
  409cb2:	add    BYTE PTR [rax],al
  409cb4:	push   rax
  409cb5:	nop
  409cb6:	add    BYTE PTR [rax],al
  409cb8:	push   rax
  409cb9:	nop
  409cba:	add    BYTE PTR [rax],al
  409cbc:	push   rax
  409cbd:	nop
  409cbe:	add    BYTE PTR [rax],al
  409cc0:	push   rax
  409cc1:	nop
  409cc2:	add    BYTE PTR [rax],al
  409cc4:	push   rax
  409cc5:	nop
  409cc6:	add    BYTE PTR [rax],al
  409cc8:	push   rax
  409cc9:	nop
  409cca:	add    BYTE PTR [rax],al
  409ccc:	push   rax
  409ccd:	nop
  409cce:	add    BYTE PTR [rax],al
  409cd0:	push   rax
  409cd1:	nop
  409cd2:	add    BYTE PTR [rax],al
  409cd4:	push   rax
  409cd5:	nop
  409cd6:	add    BYTE PTR [rax],al
  409cd8:	push   rax
  409cd9:	nop
  409cda:	add    BYTE PTR [rax],al
  409cdc:	ins    DWORD PTR es:[rdi],dx
  409cdd:	jae    0x409d55
  409cdf:	movsxd esi,DWORD PTR [rdx+0x74]
  409ce2:	cs fs ins BYTE PTR es:[rdi],dx
  409ce5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    al,dh
  40a029:	(bad)  
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax],ah
  40a041:	and    DWORD PTR [rax+0x0],eax
  40a044:	add    BYTE PTR [rax],al
  40a046:	add    BYTE PTR [rax],al
  40a048:	lock and BYTE PTR [rax+0x0],al
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
