
fb7aaec5041bbe82059d9ade519db9168ca7ec55f1d6bd12e526300a5a8fa06d.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	lea    rcx,[rip+0x17489]        # 0x140018490
   140001007:	jmp    0x140017274
   14000100c:	int3   
   14000100d:	int3   
   14000100e:	int3   
   14000100f:	int3   
   140001010:	lea    rcx,[rip+0x17489]        # 0x1400184a0
   140001017:	jmp    0x140017274
   14000101c:	int3   
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	lea    rcx,[rip+0x17489]        # 0x1400184b0
   140001027:	jmp    0x140017274
   14000102c:	lea    rcx,[rip+0x1748d]        # 0x1400184c0
   140001033:	jmp    0x140017274
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	rex push rbx
   140001042:	sub    rsp,0x70
   140001046:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000104f:	mov    rbx,rcx
   140001052:	mov    rax,QWORD PTR [rcx+0x20]
   140001056:	test   rax,rax
   140001059:	je     0x14000106a
   14000105b:	cmp    BYTE PTR [rax],0x0
   14000105e:	je     0x14000106a
   140001060:	mov    eax,0x1
   140001065:	jmp    0x14000115a
   14000106a:	test   dl,dl
   14000106c:	je     0x140001155
   140001072:	mov    QWORD PTR [rsp+0x60],0xf
   14000107b:	mov    QWORD PTR [rsp+0x58],0x0
   140001084:	mov    BYTE PTR [rsp+0x48],0x0
   140001089:	mov    r8d,0x20
   14000108f:	lea    rdx,[rip+0x1994a]        # 0x14001a9e0
   140001096:	lea    rcx,[rsp+0x48]
   14000109b:	call   0x140006790
   1400010a0:	nop
   1400010a1:	mov    QWORD PTR [rsp+0x40],0xf
   1400010aa:	mov    QWORD PTR [rsp+0x38],0x0
   1400010b3:	mov    BYTE PTR [rsp+0x28],0x0
   1400010b8:	mov    r8d,0x8
   1400010be:	lea    rdx,[rip+0x19943]        # 0x14001aa08
   1400010c5:	lea    rcx,[rsp+0x28]
   1400010ca:	call   0x140006790
   1400010cf:	nop
   1400010d0:	lea    rdx,[rip+0x19901]        # 0x14001a9d8
   1400010d7:	mov    rcx,QWORD PTR [rip+0x180da]        # 0x1400191b8
   1400010de:	call   0x1400014f0
   1400010e3:	mov    rcx,rax
   1400010e6:	lea    rdx,[rsp+0x28]
   1400010eb:	call   0x140001320
   1400010f0:	mov    rcx,rax
   1400010f3:	mov    rdx,QWORD PTR [rbx+0x18]
   1400010f7:	call   0x1400014f0
   1400010fc:	mov    rcx,rax
   1400010ff:	lea    rdx,[rsp+0x48]
   140001104:	call   0x140001320
   140001109:	mov    rcx,rax
   14000110c:	lea    rdx,[rip+0x1a3d]        # 0x140002b50
   140001113:	call   QWORD PTR [rip+0x18007]        # 0x140019120
   140001119:	nop
   14000111a:	cmp    QWORD PTR [rsp+0x40],0x10
   140001120:	jb     0x14000112c
   140001122:	mov    rcx,QWORD PTR [rsp+0x28]
   140001127:	call   0x14001716e
   14000112c:	mov    QWORD PTR [rsp+0x40],0xf
   140001135:	mov    QWORD PTR [rsp+0x38],0x0
   14000113e:	mov    BYTE PTR [rsp+0x28],0x0
   140001143:	cmp    QWORD PTR [rsp+0x60],0x10
   140001149:	jb     0x140001155
   14000114b:	mov    rcx,QWORD PTR [rsp+0x48]
   140001150:	call   0x14001716e
   140001155:	mov    eax,0x3
   14000115a:	add    rsp,0x70
   14000115e:	pop    rbx
   14000115f:	ret    
   140001160:	mov    rax,rsp
   140001163:	push   rdi
   140001164:	sub    rsp,0x70
   140001168:	mov    QWORD PTR [rax-0x58],0xfffffffffffffffe
   140001170:	mov    QWORD PTR [rax+0x10],rbx
   140001174:	mov    QWORD PTR [rax+0x18],rsi
   140001178:	movzx  edi,dl
   14000117b:	mov    rbx,rcx
   14000117e:	xor    esi,esi
   140001180:	mov    QWORD PTR [rax+0x8],rsi
   140001184:	mov    rcx,QWORD PTR [rcx+0x20]
   140001188:	test   rcx,rcx
   14000118b:	je     0x1400011cd
   14000118d:	lea    r8d,[rsi+0xa]
   140001191:	lea    rdx,[rax+0x8]
   140001195:	call   QWORD PTR [rip+0x180a5]        # 0x140019240
   14000119b:	test   eax,eax
   14000119d:	je     0x1400011cd
   14000119f:	cmp    QWORD PTR [rsp+0x80],rsi
   1400011a7:	jne    0x1400011c3
   1400011a9:	mov    r8d,0x151
   1400011af:	lea    rdx,[rip+0x1945a]        # 0x14001a610
   1400011b6:	lea    rcx,[rip+0x1985b]        # 0x14001aa18
   1400011bd:	call   QWORD PTR [rip+0x18055]        # 0x140019218
   1400011c3:	mov    eax,0x1
   1400011c8:	jmp    0x1400012b2
   1400011cd:	test   dil,dil
   1400011d0:	je     0x1400012ad
   1400011d6:	mov    QWORD PTR [rsp+0x60],0xf
   1400011df:	mov    QWORD PTR [rsp+0x58],rsi
   1400011e4:	mov    BYTE PTR [rsp+0x48],sil
   1400011e9:	mov    r8d,0x1e
   1400011ef:	lea    rdx,[rip+0x1984a]        # 0x14001aa40
   1400011f6:	lea    rcx,[rsp+0x48]
   1400011fb:	call   0x140006790
   140001200:	nop
   140001201:	mov    QWORD PTR [rsp+0x40],0xf
   14000120a:	mov    QWORD PTR [rsp+0x38],rsi
   14000120f:	mov    BYTE PTR [rsp+0x28],0x0
   140001214:	mov    r8d,0x8
   14000121a:	lea    rdx,[rip+0x197e7]        # 0x14001aa08
   140001221:	lea    rcx,[rsp+0x28]
   140001226:	call   0x140006790
   14000122b:	nop
   14000122c:	lea    rdx,[rip+0x197a5]        # 0x14001a9d8
   140001233:	mov    rcx,QWORD PTR [rip+0x17f7e]        # 0x1400191b8
   14000123a:	call   0x1400014f0
   14000123f:	mov    rcx,rax
   140001242:	lea    rdx,[rsp+0x28]
   140001247:	call   0x140001320
   14000124c:	mov    rcx,rax
   14000124f:	mov    rdx,QWORD PTR [rbx+0x18]
   140001253:	call   0x1400014f0
   140001258:	mov    rcx,rax
   14000125b:	lea    rdx,[rsp+0x48]
   140001260:	call   0x140001320
   140001265:	mov    rcx,rax
   140001268:	lea    rdx,[rip+0x18e1]        # 0x140002b50
   14000126f:	call   QWORD PTR [rip+0x17eab]        # 0x140019120
   140001275:	nop
   140001276:	cmp    QWORD PTR [rsp+0x40],0x10
   14000127c:	jb     0x140001288
   14000127e:	mov    rcx,QWORD PTR [rsp+0x28]
   140001283:	call   0x14001716e
   140001288:	mov    QWORD PTR [rsp+0x40],0xf
   140001291:	mov    QWORD PTR [rsp+0x38],rsi
   140001296:	mov    BYTE PTR [rsp+0x28],0x0
   14000129b:	cmp    QWORD PTR [rsp+0x60],0x10
   1400012a1:	jb     0x1400012ad
   1400012a3:	mov    rcx,QWORD PTR [rsp+0x48]
   1400012a8:	call   0x14001716e
   1400012ad:	mov    eax,0x3
   1400012b2:	lea    r11,[rsp+0x70]
   1400012b7:	mov    rbx,QWORD PTR [r11+0x18]
   1400012bb:	mov    rsi,QWORD PTR [r11+0x20]
   1400012bf:	mov    rsp,r11
   1400012c2:	pop    rdi
   1400012c3:	ret    
   1400012c4:	int3   
   1400012c5:	int3   
   1400012c6:	int3   
   1400012c7:	int3   
   1400012c8:	int3   
   1400012c9:	int3   
   1400012ca:	int3   
   1400012cb:	int3   
   1400012cc:	int3   
   1400012cd:	int3   
   1400012ce:	int3   
   1400012cf:	int3   
   1400012d0:	xor    eax,eax
   1400012d2:	ret    
   1400012d3:	int3   
   1400012d4:	int3   
   1400012d5:	int3   
   1400012d6:	int3   
   1400012d7:	int3   
   1400012d8:	int3   
   1400012d9:	int3   
   1400012da:	int3   
   1400012db:	int3   
   1400012dc:	int3   
   1400012dd:	int3   
   1400012de:	int3   
   1400012df:	int3   
   1400012e0:	mov    rax,QWORD PTR [rdx]
   1400012e3:	mov    QWORD PTR [rcx],rax
   1400012e6:	movzx  eax,BYTE PTR [r8]
   1400012ea:	mov    BYTE PTR [rcx+0x8],al
   1400012ed:	mov    rax,rcx
   1400012f0:	ret    
   1400012f1:	int3   
   1400012f2:	int3   
   1400012f3:	int3   
   1400012f4:	int3   
   1400012f5:	int3   
   1400012f6:	int3   
   1400012f7:	int3   
   1400012f8:	int3   
   1400012f9:	int3   
   1400012fa:	int3   
   1400012fb:	int3   
   1400012fc:	int3   
   1400012fd:	int3   
   1400012fe:	int3   
   1400012ff:	int3   
   140001300:	mov    rax,QWORD PTR [rdx]
   140001303:	mov    QWORD PTR [rcx],rax
   140001306:	movzx  eax,BYTE PTR [r8]
   14000130a:	mov    BYTE PTR [rcx+0x8],al
   14000130d:	mov    rax,rcx
   140001310:	ret    
   140001311:	int3   
   140001312:	int3   
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	mov    QWORD PTR [rsp+0x8],rcx
   140001325:	push   rsi
   140001326:	push   rdi
   140001327:	push   r12
   140001329:	push   r14
   14000132b:	push   r15
   14000132d:	sub    rsp,0x40
   140001331:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000133a:	mov    QWORD PTR [rsp+0x80],rbx
   140001342:	mov    r15,rdx
   140001345:	mov    rsi,rcx
   140001348:	xor    ebx,ebx
   14000134a:	mov    DWORD PTR [rsp+0x78],ebx
   14000134e:	mov    r12,QWORD PTR [rdx+0x10]
   140001352:	mov    rax,QWORD PTR [rcx]
   140001355:	movsxd r8,DWORD PTR [rax+0x4]
   140001359:	mov    rdi,QWORD PTR [r8+rcx*1+0x28]
   14000135e:	test   rdi,rdi
   140001361:	jle    0x14000136d
   140001363:	cmp    rdi,r12
   140001366:	jbe    0x14000136d
   140001368:	sub    rdi,r12
   14000136b:	jmp    0x14000136f
   14000136d:	xor    edi,edi
   14000136f:	mov    r14,rcx
   140001372:	mov    QWORD PTR [rsp+0x28],rcx
   140001377:	mov    rcx,QWORD PTR [r8+rcx*1+0x48]
   14000137c:	test   rcx,rcx
   14000137f:	je     0x140001388
   140001381:	mov    rax,QWORD PTR [rcx]
   140001384:	call   QWORD PTR [rax+0x8]
   140001387:	nop
   140001388:	mov    rax,QWORD PTR [rsi]
   14000138b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000138f:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   140001394:	jne    0x1400013ab
   140001396:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   14000139b:	test   rcx,rcx
   14000139e:	je     0x1400013ab
   1400013a0:	cmp    rcx,rsi
   1400013a3:	je     0x1400013ab
   1400013a5:	call   QWORD PTR [rip+0x17da5]        # 0x140019150
   1400013ab:	mov    rax,QWORD PTR [rsi]
   1400013ae:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013b2:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   1400013b7:	sete   al
   1400013ba:	mov    BYTE PTR [rsp+0x30],al
   1400013be:	test   al,al
   1400013c0:	jne    0x1400013cc
   1400013c2:	mov    ebx,0x4
   1400013c7:	jmp    0x140001490
   1400013cc:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400013d0:	and    eax,0x1c0
   1400013d5:	cmp    eax,0x40
   1400013d8:	je     0x140001413
   1400013da:	nop    WORD PTR [rax+rax*1+0x0]
   1400013e0:	test   rdi,rdi
   1400013e3:	je     0x14000140f
   1400013e5:	mov    rax,QWORD PTR [rsi]
   1400013e8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400013ec:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400013f1:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400013f6:	call   QWORD PTR [rip+0x17cc4]        # 0x1400190c0
   1400013fc:	cmp    eax,0xffffffff
   1400013ff:	jne    0x14000140a
   140001401:	or     ebx,0x4
   140001404:	mov    DWORD PTR [rsp+0x78],ebx
   140001408:	jmp    0x14000140f
   14000140a:	dec    rdi
   14000140d:	jmp    0x1400013e0
   14000140f:	test   ebx,ebx
   140001411:	jne    0x140001441
   140001413:	cmp    QWORD PTR [r15+0x18],0x10
   140001418:	jb     0x14000141d
   14000141a:	mov    r15,QWORD PTR [r15]
   14000141d:	mov    rax,QWORD PTR [rsi]
   140001420:	movsxd rcx,DWORD PTR [rax+0x4]
   140001424:	mov    r8,r12
   140001427:	mov    rdx,r15
   14000142a:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000142f:	call   QWORD PTR [rip+0x17c93]        # 0x1400190c8
   140001435:	cmp    rax,r12
   140001438:	je     0x140001441
   14000143a:	mov    ebx,0x4
   14000143f:	jmp    0x14000146c
   140001441:	test   rdi,rdi
   140001444:	je     0x140001470
   140001446:	mov    rax,QWORD PTR [rsi]
   140001449:	movsxd rcx,DWORD PTR [rax+0x4]
   14000144d:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001452:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001457:	call   QWORD PTR [rip+0x17c63]        # 0x1400190c0
   14000145d:	cmp    eax,0xffffffff
   140001460:	jne    0x140001467
   140001462:	or     ebx,0x4
   140001465:	jmp    0x14000146c
   140001467:	dec    rdi
   14000146a:	jmp    0x140001441
   14000146c:	mov    DWORD PTR [rsp+0x78],ebx
   140001470:	mov    rax,QWORD PTR [rsi]
   140001473:	movsxd rcx,DWORD PTR [rax+0x4]
   140001477:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001480:	jmp    0x140001490
   140001482:	mov    rsi,QWORD PTR [rsp+0x70]
   140001487:	mov    ebx,DWORD PTR [rsp+0x78]
   14000148b:	mov    r14,QWORD PTR [rsp+0x28]
   140001490:	mov    rax,QWORD PTR [rsi]
   140001493:	movsxd rcx,DWORD PTR [rax+0x4]
   140001497:	add    rcx,rsi
   14000149a:	xor    r8d,r8d
   14000149d:	mov    edx,ebx
   14000149f:	call   QWORD PTR [rip+0x17c4b]        # 0x1400190f0
   1400014a5:	nop
   1400014a6:	call   QWORD PTR [rip+0x17d24]        # 0x1400191d0
   1400014ac:	test   al,al
   1400014ae:	jne    0x1400014b9
   1400014b0:	mov    rcx,r14
   1400014b3:	call   QWORD PTR [rip+0x17c5f]        # 0x140019118
   1400014b9:	mov    rax,QWORD PTR [r14]
   1400014bc:	movsxd rcx,DWORD PTR [rax+0x4]
   1400014c0:	mov    rcx,QWORD PTR [rcx+r14*1+0x48]
   1400014c5:	test   rcx,rcx
   1400014c8:	je     0x1400014d0
   1400014ca:	mov    rax,QWORD PTR [rcx]
   1400014cd:	call   QWORD PTR [rax+0x10]
   1400014d0:	mov    rax,rsi
   1400014d3:	mov    rbx,QWORD PTR [rsp+0x80]
   1400014db:	add    rsp,0x40
   1400014df:	pop    r15
   1400014e1:	pop    r14
   1400014e3:	pop    r12
   1400014e5:	pop    rdi
   1400014e6:	pop    rsi
   1400014e7:	ret    
   1400014e8:	int3   
   1400014e9:	int3   
   1400014ea:	int3   
   1400014eb:	int3   
   1400014ec:	int3   
   1400014ed:	int3   
   1400014ee:	int3   
   1400014ef:	int3   
   1400014f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400014f5:	push   rsi
   1400014f6:	push   rdi
   1400014f7:	push   r12
   1400014f9:	push   r14
   1400014fb:	push   r15
   1400014fd:	sub    rsp,0x40
   140001501:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000150a:	mov    QWORD PTR [rsp+0x80],rbx
   140001512:	mov    r15,rdx
   140001515:	mov    rsi,rcx
   140001518:	xor    ebx,ebx
   14000151a:	mov    DWORD PTR [rsp+0x78],ebx
   14000151e:	cmp    BYTE PTR [rdx],bl
   140001520:	jne    0x140001527
   140001522:	xor    r14d,r14d
   140001525:	jmp    0x140001539
   140001527:	or     r14,0xffffffffffffffff
   14000152b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001530:	inc    r14
   140001533:	cmp    BYTE PTR [rdx+r14*1],bl
   140001537:	jne    0x140001530
   140001539:	mov    rax,QWORD PTR [rcx]
   14000153c:	movsxd rcx,DWORD PTR [rax+0x4]
   140001540:	mov    rdi,QWORD PTR [rcx+rsi*1+0x28]
   140001545:	test   rdi,rdi
   140001548:	jle    0x140001554
   14000154a:	cmp    rdi,r14
   14000154d:	jle    0x140001554
   14000154f:	sub    rdi,r14
   140001552:	jmp    0x140001556
   140001554:	xor    edi,edi
   140001556:	mov    r12,rsi
   140001559:	mov    QWORD PTR [rsp+0x28],rsi
   14000155e:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001563:	test   rcx,rcx
   140001566:	je     0x14000156f
   140001568:	mov    rax,QWORD PTR [rcx]
   14000156b:	call   QWORD PTR [rax+0x8]
   14000156e:	nop
   14000156f:	mov    rax,QWORD PTR [rsi]
   140001572:	movsxd rcx,DWORD PTR [rax+0x4]
   140001576:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   14000157b:	jne    0x140001592
   14000157d:	mov    rcx,QWORD PTR [rcx+rsi*1+0x50]
   140001582:	test   rcx,rcx
   140001585:	je     0x140001592
   140001587:	cmp    rcx,rsi
   14000158a:	je     0x140001592
   14000158c:	call   QWORD PTR [rip+0x17bbe]        # 0x140019150
   140001592:	mov    rax,QWORD PTR [rsi]
   140001595:	movsxd rcx,DWORD PTR [rax+0x4]
   140001599:	cmp    DWORD PTR [rcx+rsi*1+0x10],0x0
   14000159e:	sete   al
   1400015a1:	mov    BYTE PTR [rsp+0x30],al
   1400015a5:	test   al,al
   1400015a7:	jne    0x1400015b3
   1400015a9:	mov    ebx,0x4
   1400015ae:	jmp    0x140001667
   1400015b3:	mov    eax,DWORD PTR [rcx+rsi*1+0x18]
   1400015b7:	and    eax,0x1c0
   1400015bc:	cmp    eax,0x40
   1400015bf:	je     0x1400015f4
   1400015c1:	test   rdi,rdi
   1400015c4:	jle    0x1400015f0
   1400015c6:	mov    rax,QWORD PTR [rsi]
   1400015c9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015cd:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   1400015d2:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   1400015d7:	call   QWORD PTR [rip+0x17ae3]        # 0x1400190c0
   1400015dd:	cmp    eax,0xffffffff
   1400015e0:	jne    0x1400015eb
   1400015e2:	or     ebx,0x4
   1400015e5:	mov    DWORD PTR [rsp+0x78],ebx
   1400015e9:	jmp    0x1400015f0
   1400015eb:	dec    rdi
   1400015ee:	jmp    0x1400015c1
   1400015f0:	test   ebx,ebx
   1400015f2:	jne    0x140001647
   1400015f4:	mov    rax,QWORD PTR [rsi]
   1400015f7:	movsxd rcx,DWORD PTR [rax+0x4]
   1400015fb:	mov    r8,r14
   1400015fe:	mov    rdx,r15
   140001601:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   140001606:	call   QWORD PTR [rip+0x17abc]        # 0x1400190c8
   14000160c:	cmp    rax,r14
   14000160f:	je     0x140001618
   140001611:	mov    ebx,0x4
   140001616:	jmp    0x140001643
   140001618:	test   rdi,rdi
   14000161b:	jle    0x140001647
   14000161d:	mov    rax,QWORD PTR [rsi]
   140001620:	movsxd rcx,DWORD PTR [rax+0x4]
   140001624:	movzx  edx,BYTE PTR [rcx+rsi*1+0x58]
   140001629:	mov    rcx,QWORD PTR [rcx+rsi*1+0x48]
   14000162e:	call   QWORD PTR [rip+0x17a8c]        # 0x1400190c0
   140001634:	cmp    eax,0xffffffff
   140001637:	jne    0x14000163e
   140001639:	or     ebx,0x4
   14000163c:	jmp    0x140001643
   14000163e:	dec    rdi
   140001641:	jmp    0x140001618
   140001643:	mov    DWORD PTR [rsp+0x78],ebx
   140001647:	mov    rax,QWORD PTR [rsi]
   14000164a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000164e:	mov    QWORD PTR [rcx+rsi*1+0x28],0x0
   140001657:	jmp    0x140001667
   140001659:	mov    rsi,QWORD PTR [rsp+0x70]
   14000165e:	mov    ebx,DWORD PTR [rsp+0x78]
   140001662:	mov    r12,QWORD PTR [rsp+0x28]
   140001667:	mov    rax,QWORD PTR [rsi]
   14000166a:	movsxd rcx,DWORD PTR [rax+0x4]
   14000166e:	add    rcx,rsi
   140001671:	xor    r8d,r8d
   140001674:	mov    edx,ebx
   140001676:	call   QWORD PTR [rip+0x17a74]        # 0x1400190f0
   14000167c:	nop
   14000167d:	call   QWORD PTR [rip+0x17b4d]        # 0x1400191d0
   140001683:	test   al,al
   140001685:	jne    0x140001690
   140001687:	mov    rcx,r12
   14000168a:	call   QWORD PTR [rip+0x17a88]        # 0x140019118
   140001690:	mov    rax,QWORD PTR [r12]
   140001694:	movsxd rcx,DWORD PTR [rax+0x4]
   140001698:	mov    rcx,QWORD PTR [rcx+r12*1+0x48]
   14000169d:	test   rcx,rcx
   1400016a0:	je     0x1400016a8
   1400016a2:	mov    rax,QWORD PTR [rcx]
   1400016a5:	call   QWORD PTR [rax+0x10]
   1400016a8:	mov    rax,rsi
   1400016ab:	mov    rbx,QWORD PTR [rsp+0x80]
   1400016b3:	add    rsp,0x40
   1400016b7:	pop    r15
   1400016b9:	pop    r14
   1400016bb:	pop    r12
   1400016bd:	pop    rdi
   1400016be:	pop    rsi
   1400016bf:	ret    
   1400016c0:	mov    al,0x1
   1400016c2:	ret    
   1400016c3:	int3   
   1400016c4:	int3   
   1400016c5:	int3   
   1400016c6:	int3   
   1400016c7:	int3   
   1400016c8:	int3   
   1400016c9:	int3   
   1400016ca:	int3   
   1400016cb:	int3   
   1400016cc:	int3   
   1400016cd:	int3   
   1400016ce:	int3   
   1400016cf:	int3   
   1400016d0:	mov    al,0x1
   1400016d2:	ret    
   1400016d3:	int3   
   1400016d4:	int3   
   1400016d5:	int3   
   1400016d6:	int3   
   1400016d7:	int3   
   1400016d8:	int3   
   1400016d9:	int3   
   1400016da:	int3   
   1400016db:	int3   
   1400016dc:	int3   
   1400016dd:	int3   
   1400016de:	int3   
   1400016df:	int3   
   1400016e0:	xor    al,al
   1400016e2:	ret    
   1400016e3:	int3   
   1400016e4:	int3   
   1400016e5:	int3   
   1400016e6:	int3   
   1400016e7:	int3   
   1400016e8:	int3   
   1400016e9:	int3   
   1400016ea:	int3   
   1400016eb:	int3   
   1400016ec:	int3   
   1400016ed:	int3   
   1400016ee:	int3   
   1400016ef:	int3   
   1400016f0:	rex push rbx
   1400016f2:	sub    rsp,0x30
   1400016f6:	mov    rax,r8
   1400016f9:	mov    r10,rdx
   1400016fc:	mov    rbx,rcx
   1400016ff:	or     r9,0xffffffffffffffff
   140001703:	xor    r8d,r8d
   140001706:	mov    rdx,rax
   140001709:	mov    rcx,r10
   14000170c:	mov    DWORD PTR [rsp+0x20],0x0
   140001714:	call   0x140006230
   140001719:	mov    rcx,rbx
   14000171c:	mov    rdx,rax
   14000171f:	call   0x140003280
   140001724:	mov    rax,rbx
   140001727:	add    rsp,0x30
   14000172b:	pop    rbx
   14000172c:	ret    
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	rex push rbx
   140001732:	sub    rsp,0x30
   140001736:	mov    rax,r8
   140001739:	xor    r8d,r8d
   14000173c:	mov    r9,rdx
   14000173f:	mov    rbx,rcx
   140001742:	mov    DWORD PTR [rsp+0x20],r8d
   140001747:	cmp    BYTE PTR [rax],r8b
   14000174a:	je     0x14000175a
   14000174c:	or     r8,0xffffffffffffffff
   140001750:	inc    r8
   140001753:	cmp    BYTE PTR [rax+r8*1],0x0
   140001758:	jne    0x140001750
   14000175a:	mov    rdx,rax
   14000175d:	mov    rcx,r9
   140001760:	call   0x140006370
   140001765:	mov    rcx,rbx
   140001768:	mov    rdx,rax
   14000176b:	call   0x140003280
   140001770:	mov    rax,rbx
   140001773:	add    rsp,0x30
   140001777:	pop    rbx
   140001778:	ret    
   140001779:	int3   
   14000177a:	int3   
   14000177b:	int3   
   14000177c:	int3   
   14000177d:	int3   
   14000177e:	int3   
   14000177f:	int3   
   140001780:	mov    QWORD PTR [rsp+0x8],rcx
   140001785:	push   rsi
   140001786:	push   rdi
   140001787:	push   r14
   140001789:	sub    rsp,0x30
   14000178d:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140001796:	mov    QWORD PTR [rsp+0x58],rbx
   14000179b:	mov    QWORD PTR [rsp+0x60],rbp
   1400017a0:	mov    rsi,r8
   1400017a3:	mov    r14,rdx
   1400017a6:	mov    rdi,rcx
   1400017a9:	xor    ebx,ebx
   1400017ab:	mov    DWORD PTR [rsp+0x20],ebx
   1400017af:	mov    QWORD PTR [rcx+0x18],0xf
   1400017b7:	mov    QWORD PTR [rcx+0x10],rbx
   1400017bb:	mov    BYTE PTR [rcx],bl
   1400017bd:	mov    DWORD PTR [rsp+0x20],0x1
   1400017c5:	mov    rcx,QWORD PTR [rdx+0x10]
   1400017c9:	cmp    BYTE PTR [r8],bl
   1400017cc:	jne    0x1400017d2
   1400017ce:	mov    eax,ebx
   1400017d0:	jmp    0x1400017e0
   1400017d2:	or     rax,0xffffffffffffffff
   1400017d6:	inc    rax
   1400017d9:	cmp    BYTE PTR [r8+rax*1],0x0
   1400017de:	jne    0x1400017d6
   1400017e0:	lea    rdx,[rax+rcx*1]
   1400017e4:	cmp    rbx,rdx
   1400017e7:	ja     0x140001815
   1400017e9:	cmp    QWORD PTR [rdi+0x18],rdx
   1400017ed:	je     0x140001815
   1400017ef:	mov    r8b,0x1
   1400017f2:	mov    rcx,rdi
   1400017f5:	call   0x140005b20
   1400017fa:	test   al,al
   1400017fc:	je     0x140001815
   1400017fe:	mov    QWORD PTR [rdi+0x10],rbx
   140001802:	cmp    QWORD PTR [rdi+0x18],0x10
   140001807:	jb     0x14000180e
   140001809:	mov    rax,QWORD PTR [rdi]
   14000180c:	jmp    0x140001811
   14000180e:	mov    rax,rdi
   140001811:	mov    BYTE PTR [rax+rbx*1],0x0
   140001815:	or     r9,0xffffffffffffffff
   140001819:	xor    r8d,r8d
   14000181c:	mov    rdx,r14
   14000181f:	mov    rcx,rdi
   140001822:	call   0x140006230
   140001827:	cmp    BYTE PTR [rsi],0x0
   14000182a:	je     0x140001839
   14000182c:	or     rbx,0xffffffffffffffff
   140001830:	inc    rbx
   140001833:	cmp    BYTE PTR [rsi+rbx*1],0x0
   140001837:	jne    0x140001830
   140001839:	mov    r8,rbx
   14000183c:	mov    rdx,rsi
   14000183f:	mov    rcx,rdi
   140001842:	call   0x140006370
   140001847:	mov    rax,rdi
   14000184a:	mov    rbx,QWORD PTR [rsp+0x58]
   14000184f:	mov    rbp,QWORD PTR [rsp+0x60]
   140001854:	add    rsp,0x30
   140001858:	pop    r14
   14000185a:	pop    rdi
   14000185b:	pop    rsi
   14000185c:	ret    
   14000185d:	int3   
   14000185e:	int3   
   14000185f:	int3   
   140001860:	rex push rbx
   140001862:	sub    rsp,0x30
   140001866:	xor    r9d,r9d
   140001869:	mov    rax,r8
   14000186c:	mov    rbx,rcx
   14000186f:	mov    DWORD PTR [rsp+0x20],r9d
   140001874:	cmp    BYTE PTR [rdx],r9b
   140001877:	je     0x14000188a
   140001879:	or     r9,0xffffffffffffffff
   14000187d:	nop    DWORD PTR [rax]
   140001880:	inc    r9
   140001883:	cmp    BYTE PTR [rdx+r9*1],0x0
   140001888:	jne    0x140001880
   14000188a:	mov    r8,rdx
   14000188d:	mov    rcx,rax
   140001890:	xor    edx,edx
   140001892:	call   0x140007d30
   140001897:	mov    rcx,rbx
   14000189a:	mov    rdx,rax
   14000189d:	call   0x140003280
   1400018a2:	mov    rax,rbx
   1400018a5:	add    rsp,0x30
   1400018a9:	pop    rbx
   1400018aa:	ret    
   1400018ab:	int3   
   1400018ac:	int3   
   1400018ad:	int3   
   1400018ae:	int3   
   1400018af:	int3   
   1400018b0:	mov    QWORD PTR [rsp+0x8],rcx
   1400018b5:	push   rsi
   1400018b6:	push   rdi
   1400018b7:	push   r14
   1400018b9:	sub    rsp,0x30
   1400018bd:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400018c6:	mov    QWORD PTR [rsp+0x58],rbx
   1400018cb:	mov    QWORD PTR [rsp+0x60],rbp
   1400018d0:	mov    r14,r8
   1400018d3:	mov    rsi,rdx
   1400018d6:	mov    rdi,rcx
   1400018d9:	xor    ebx,ebx
   1400018db:	mov    DWORD PTR [rsp+0x20],ebx
   1400018df:	mov    QWORD PTR [rcx+0x18],0xf
   1400018e7:	mov    QWORD PTR [rcx+0x10],rbx
   1400018eb:	mov    BYTE PTR [rcx],bl
   1400018ed:	mov    DWORD PTR [rsp+0x20],0x1
   1400018f5:	cmp    BYTE PTR [rdx],bl
   1400018f7:	jne    0x1400018fd
   1400018f9:	mov    ecx,ebx
   1400018fb:	jmp    0x14000190a
   1400018fd:	or     rcx,0xffffffffffffffff
   140001901:	inc    rcx
   140001904:	cmp    BYTE PTR [rdx+rcx*1],0x0
   140001908:	jne    0x140001901
   14000190a:	mov    rdx,QWORD PTR [r8+0x10]
   14000190e:	add    rdx,rcx
   140001911:	cmp    rbx,rdx
   140001914:	ja     0x140001942
   140001916:	cmp    QWORD PTR [rdi+0x18],rdx
   14000191a:	je     0x140001942
   14000191c:	mov    r8b,0x1
   14000191f:	mov    rcx,rdi
   140001922:	call   0x140005b20
   140001927:	test   al,al
   140001929:	je     0x140001942
   14000192b:	mov    QWORD PTR [rdi+0x10],rbx
   14000192f:	cmp    QWORD PTR [rdi+0x18],0x10
   140001934:	jb     0x14000193b
   140001936:	mov    rax,QWORD PTR [rdi]
   140001939:	jmp    0x14000193e
   14000193b:	mov    rax,rdi
   14000193e:	mov    BYTE PTR [rax+rbx*1],0x0
   140001942:	cmp    BYTE PTR [rsi],0x0
   140001945:	je     0x140001959
   140001947:	or     rbx,0xffffffffffffffff
   14000194b:	nop    DWORD PTR [rax+rax*1+0x0]
   140001950:	inc    rbx
   140001953:	cmp    BYTE PTR [rsi+rbx*1],0x0
   140001957:	jne    0x140001950
   140001959:	mov    r8,rbx
   14000195c:	mov    rdx,rsi
   14000195f:	mov    rcx,rdi
   140001962:	call   0x140006370
   140001967:	or     r9,0xffffffffffffffff
   14000196b:	xor    r8d,r8d
   14000196e:	mov    rdx,r14
   140001971:	mov    rcx,rdi
   140001974:	call   0x140006230
   140001979:	mov    rax,rdi
   14000197c:	mov    rbx,QWORD PTR [rsp+0x58]
   140001981:	mov    rbp,QWORD PTR [rsp+0x60]
   140001986:	add    rsp,0x30
   14000198a:	pop    r14
   14000198c:	pop    rdi
   14000198d:	pop    rsi
   14000198e:	ret    
   14000198f:	int3   
   140001990:	sub    rsp,0x28
   140001994:	call   0x140006c10
   140001999:	test   eax,eax
   14000199b:	sets   al
   14000199e:	add    rsp,0x28
   1400019a2:	ret    
   1400019a3:	int3   
   1400019a4:	int3   
   1400019a5:	int3   
   1400019a6:	int3   
   1400019a7:	int3   
   1400019a8:	int3   
   1400019a9:	int3   
   1400019aa:	int3   
   1400019ab:	int3   
   1400019ac:	int3   
   1400019ad:	int3   
   1400019ae:	int3   
   1400019af:	int3   
   1400019b0:	sub    rsp,0x28
   1400019b4:	xor    eax,eax
   1400019b6:	test   rcx,rcx
   1400019b9:	je     0x1400019d2
   1400019bb:	cmp    rcx,0xffffffffffffffff
   1400019bf:	ja     0x1400019cb
   1400019c1:	call   0x140017168
   1400019c6:	test   rax,rax
   1400019c9:	jne    0x1400019d2
   1400019cb:	call   QWORD PTR [rip+0x17807]        # 0x1400191d8
   1400019d1:	int3   
   1400019d2:	add    rsp,0x28
   1400019d6:	ret    
   1400019d7:	int3   
   1400019d8:	int3   
   1400019d9:	int3   
   1400019da:	int3   
   1400019db:	int3   
   1400019dc:	int3   
   1400019dd:	int3   
   1400019de:	int3   
   1400019df:	int3   
   1400019e0:	sub    rsp,0x28
   1400019e4:	xor    eax,eax
   1400019e6:	test   rcx,rcx
   1400019e9:	je     0x140001a0f
   1400019eb:	movabs rax,0x3ffffffffffffff
   1400019f5:	cmp    rcx,rax
   1400019f8:	ja     0x140001a08
   1400019fa:	shl    rcx,0x6
   1400019fe:	call   0x140017168
   140001a03:	test   rax,rax
   140001a06:	jne    0x140001a0f
   140001a08:	call   QWORD PTR [rip+0x177ca]        # 0x1400191d8
   140001a0e:	int3   
   140001a0f:	add    rsp,0x28
   140001a13:	ret    
   140001a14:	int3   
   140001a15:	int3   
   140001a16:	int3   
   140001a17:	int3   
   140001a18:	int3   
   140001a19:	int3   
   140001a1a:	int3   
   140001a1b:	int3   
   140001a1c:	int3   
   140001a1d:	int3   
   140001a1e:	int3   
   140001a1f:	int3   
   140001a20:	rex push rdi
   140001a22:	sub    rsp,0x30
   140001a26:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001a2f:	mov    QWORD PTR [rsp+0x40],rbx
   140001a34:	mov    rdi,rdx
   140001a37:	call   0x1400055b0
   140001a3c:	mov    rbx,rax
   140001a3f:	mov    QWORD PTR [rsp+0x50],rax
   140001a44:	mov    WORD PTR [rax+0x18],0x0
   140001a4a:	lea    rcx,[rax+0x20]
   140001a4e:	mov    QWORD PTR [rsp+0x58],rcx
   140001a53:	mov    QWORD PTR [rsp+0x28],rcx
   140001a58:	test   rcx,rcx
   140001a5b:	je     0x140001a80
   140001a5d:	mov    QWORD PTR [rcx+0x18],0xf
   140001a65:	mov    QWORD PTR [rcx+0x10],0x0
   140001a6d:	mov    BYTE PTR [rcx],0x0
   140001a70:	or     r9,0xffffffffffffffff
   140001a74:	xor    r8d,r8d
   140001a77:	mov    rdx,rdi
   140001a7a:	call   0x140006640
   140001a7f:	nop
   140001a80:	mov    rax,rbx
   140001a83:	mov    rbx,QWORD PTR [rsp+0x40]
   140001a88:	add    rsp,0x30
   140001a8c:	pop    rdi
   140001a8d:	ret    
   140001a8e:	int3   
   140001a8f:	int3   
   140001a90:	rex push rdi
   140001a92:	sub    rsp,0x30
   140001a96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001a9f:	mov    QWORD PTR [rsp+0x40],rbx
   140001aa4:	mov    QWORD PTR [rsp+0x48],rsi
   140001aa9:	mov    rdi,rdx
   140001aac:	call   0x1400055b0
   140001ab1:	mov    rsi,rax
   140001ab4:	mov    QWORD PTR [rsp+0x50],rax
   140001ab9:	mov    WORD PTR [rax+0x18],0x0
   140001abf:	lea    rbx,[rax+0x20]
   140001ac3:	mov    QWORD PTR [rsp+0x58],rbx
   140001ac8:	mov    QWORD PTR [rsp+0x28],rbx
   140001acd:	test   rbx,rbx
   140001ad0:	je     0x140001b33
   140001ad2:	mov    QWORD PTR [rbx+0x18],0xf
   140001ada:	mov    QWORD PTR [rbx+0x10],0x0
   140001ae2:	mov    BYTE PTR [rbx],0x0
   140001ae5:	cmp    QWORD PTR [rdi+0x18],0x10
   140001aea:	jae    0x140001b03
   140001aec:	mov    r8,QWORD PTR [rdi+0x10]
   140001af0:	inc    r8
   140001af3:	je     0x140001b10
   140001af5:	mov    rdx,rdi
   140001af8:	mov    rcx,rbx
   140001afb:	call   QWORD PTR [rip+0x17777]        # 0x140019278
   140001b01:	jmp    0x140001b10
   140001b03:	mov    rax,QWORD PTR [rdi]
   140001b06:	mov    QWORD PTR [rbx],rax
   140001b09:	mov    QWORD PTR [rdi],0x0
   140001b10:	mov    rax,QWORD PTR [rdi+0x10]
   140001b14:	mov    QWORD PTR [rbx+0x10],rax
   140001b18:	mov    rax,QWORD PTR [rdi+0x18]
   140001b1c:	mov    QWORD PTR [rbx+0x18],rax
   140001b20:	mov    QWORD PTR [rdi+0x18],0xf
   140001b28:	mov    QWORD PTR [rdi+0x10],0x0
   140001b30:	mov    BYTE PTR [rdi],0x0
   140001b33:	mov    rax,rsi
   140001b36:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b3b:	mov    rsi,QWORD PTR [rsp+0x48]
   140001b40:	add    rsp,0x30
   140001b44:	pop    rdi
   140001b45:	ret    
   140001b46:	int3   
   140001b47:	int3   
   140001b48:	int3   
   140001b49:	int3   
   140001b4a:	int3   
   140001b4b:	int3   
   140001b4c:	int3   
   140001b4d:	int3   
   140001b4e:	int3   
   140001b4f:	int3   
   140001b50:	sub    rsp,0x28
   140001b54:	mov    rdx,r8
   140001b57:	call   0x140001a20
   140001b5c:	add    rsp,0x28
   140001b60:	ret    
   140001b61:	int3   
   140001b62:	int3   
   140001b63:	int3   
   140001b64:	int3   
   140001b65:	int3   
   140001b66:	int3   
   140001b67:	int3   
   140001b68:	int3   
   140001b69:	int3   
   140001b6a:	int3   
   140001b6b:	int3   
   140001b6c:	int3   
   140001b6d:	int3   
   140001b6e:	int3   
   140001b6f:	int3   
   140001b70:	sub    rsp,0x28
   140001b74:	mov    rdx,r8
   140001b77:	call   0x140001a90
   140001b7c:	add    rsp,0x28
   140001b80:	ret    
   140001b81:	int3   
   140001b82:	int3   
   140001b83:	int3   
   140001b84:	int3   
   140001b85:	int3   
   140001b86:	int3   
   140001b87:	int3   
   140001b88:	int3   
   140001b89:	int3   
   140001b8a:	int3   
   140001b8b:	int3   
   140001b8c:	int3   
   140001b8d:	int3   
   140001b8e:	int3   
   140001b8f:	int3   
   140001b90:	rex push rbx
   140001b92:	sub    rsp,0x20
   140001b96:	mov    rbx,rcx
   140001b99:	mov    rcx,rdx
   140001b9c:	call   QWORD PTR [rip+0x1766e]        # 0x140019210
   140001ba2:	cmp    eax,0xffffffff
   140001ba5:	jne    0x140001baf
   140001ba7:	xor    al,al
   140001ba9:	add    rsp,0x20
   140001bad:	pop    rbx
   140001bae:	ret    
   140001baf:	mov    BYTE PTR [rbx],al
   140001bb1:	mov    al,0x1
   140001bb3:	add    rsp,0x20
   140001bb7:	pop    rbx
   140001bb8:	ret    
   140001bb9:	int3   
   140001bba:	int3   
   140001bbb:	int3   
   140001bbc:	int3   
   140001bbd:	int3   
   140001bbe:	int3   
   140001bbf:	int3   
   140001bc0:	sub    rsp,0x28
   140001bc4:	movsx  ecx,cl
   140001bc7:	call   QWORD PTR [rip+0x17653]        # 0x140019220
   140001bcd:	cmp    eax,0xffffffff
   140001bd0:	setne  al
   140001bd3:	add    rsp,0x28
   140001bd7:	ret    
   140001bd8:	int3   
   140001bd9:	int3   
   140001bda:	int3   
   140001bdb:	int3   
   140001bdc:	int3   
   140001bdd:	int3   
   140001bde:	int3   
   140001bdf:	int3   
   140001be0:	mov    QWORD PTR [rsp+0x8],rbx
   140001be5:	mov    QWORD PTR [rsp+0x10],rsi
   140001bea:	mov    QWORD PTR [rsp+0x18],rdi
   140001bef:	push   r14
   140001bf1:	sub    rsp,0x20
   140001bf5:	movabs rax,0x3fffffffffffffe
   140001bff:	mov    rdi,r9
   140001c02:	movzx  esi,r8b
   140001c06:	mov    r14,rdx
   140001c09:	mov    rbx,rcx
   140001c0c:	cmp    QWORD PTR [rcx+0x8],rax
   140001c10:	jb     0x140001c20
   140001c12:	lea    rcx,[rip+0x190cf]        # 0x14001ace8
   140001c19:	call   QWORD PTR [rip+0x175c1]        # 0x1400191e0
   140001c1f:	int3   
   140001c20:	mov    rdx,QWORD PTR [rsp+0x50]
   140001c25:	call   0x140001a20
   140001c2a:	inc    QWORD PTR [rbx+0x8]
   140001c2e:	mov    QWORD PTR [rax+0x8],rdi
   140001c32:	mov    rcx,QWORD PTR [rbx]
   140001c35:	mov    r9,rax
   140001c38:	cmp    rdi,rcx
   140001c3b:	jne    0x140001c50
   140001c3d:	mov    QWORD PTR [rcx+0x8],rax
   140001c41:	mov    rcx,QWORD PTR [rbx]
   140001c44:	mov    QWORD PTR [rcx],rax
   140001c47:	mov    rcx,QWORD PTR [rbx]
   140001c4a:	mov    QWORD PTR [rcx+0x10],rax
   140001c4e:	jmp    0x140001c76
   140001c50:	test   sil,sil
   140001c53:	je     0x140001c65
   140001c55:	mov    QWORD PTR [rdi],rax
   140001c58:	mov    rax,QWORD PTR [rbx]
   140001c5b:	cmp    rdi,QWORD PTR [rax]
   140001c5e:	jne    0x140001c76
   140001c60:	mov    QWORD PTR [rax],r9
   140001c63:	jmp    0x140001c76
   140001c65:	mov    QWORD PTR [rdi+0x10],rax
   140001c69:	mov    rax,QWORD PTR [rbx]
   140001c6c:	cmp    rdi,QWORD PTR [rax+0x10]
   140001c70:	jne    0x140001c76
   140001c72:	mov    QWORD PTR [rax+0x10],r9
   140001c76:	mov    rcx,QWORD PTR [r9+0x8]
   140001c7a:	mov    rax,r9
   140001c7d:	cmp    BYTE PTR [rcx+0x18],0x0
   140001c81:	jne    0x140001e80
   140001c87:	nop    WORD PTR [rax+rax*1+0x0]
   140001c90:	mov    rcx,QWORD PTR [rax+0x8]
   140001c94:	mov    r8,QWORD PTR [rcx+0x8]
   140001c98:	mov    rdx,QWORD PTR [r8]
   140001c9b:	cmp    rcx,rdx
   140001c9e:	jne    0x140001d95
   140001ca4:	mov    rdx,QWORD PTR [r8+0x10]
   140001ca8:	cmp    BYTE PTR [rdx+0x18],0x0
   140001cac:	jne    0x140001ccf
   140001cae:	mov    BYTE PTR [rcx+0x18],0x1
   140001cb2:	mov    BYTE PTR [rdx+0x18],0x1
   140001cb6:	mov    rcx,QWORD PTR [rax+0x8]
   140001cba:	mov    rdx,QWORD PTR [rcx+0x8]
   140001cbe:	mov    BYTE PTR [rdx+0x18],0x0
   140001cc2:	mov    rcx,QWORD PTR [rax+0x8]
   140001cc6:	mov    rax,QWORD PTR [rcx+0x8]
   140001cca:	jmp    0x140001e72
   140001ccf:	cmp    rax,QWORD PTR [rcx+0x10]
   140001cd3:	jne    0x140001d20
   140001cd5:	mov    rdx,QWORD PTR [rcx+0x10]
   140001cd9:	mov    rax,rcx
   140001cdc:	mov    rcx,QWORD PTR [rdx]
   140001cdf:	mov    QWORD PTR [rax+0x10],rcx
   140001ce3:	mov    rcx,QWORD PTR [rdx]
   140001ce6:	cmp    BYTE PTR [rcx+0x19],0x0
   140001cea:	jne    0x140001cf0
   140001cec:	mov    QWORD PTR [rcx+0x8],rax
   140001cf0:	mov    rcx,QWORD PTR [rax+0x8]
   140001cf4:	mov    QWORD PTR [rdx+0x8],rcx
   140001cf8:	mov    rcx,QWORD PTR [rbx]
   140001cfb:	cmp    rax,QWORD PTR [rcx+0x8]
   140001cff:	jne    0x140001d07
   140001d01:	mov    QWORD PTR [rcx+0x8],rdx
   140001d05:	jmp    0x140001d19
   140001d07:	mov    rcx,QWORD PTR [rax+0x8]
   140001d0b:	cmp    rax,QWORD PTR [rcx]
   140001d0e:	jne    0x140001d15
   140001d10:	mov    QWORD PTR [rcx],rdx
   140001d13:	jmp    0x140001d19
   140001d15:	mov    QWORD PTR [rcx+0x10],rdx
   140001d19:	mov    QWORD PTR [rdx],rax
   140001d1c:	mov    QWORD PTR [rax+0x8],rdx
   140001d20:	mov    rcx,QWORD PTR [rax+0x8]
   140001d24:	mov    BYTE PTR [rcx+0x18],0x1
   140001d28:	mov    rcx,QWORD PTR [rax+0x8]
   140001d2c:	mov    rdx,QWORD PTR [rcx+0x8]
   140001d30:	mov    BYTE PTR [rdx+0x18],0x0
   140001d34:	mov    rcx,QWORD PTR [rax+0x8]
   140001d38:	mov    rdx,QWORD PTR [rcx+0x8]
   140001d3c:	mov    r8,QWORD PTR [rdx]
   140001d3f:	mov    rcx,QWORD PTR [r8+0x10]
   140001d43:	mov    QWORD PTR [rdx],rcx
   140001d46:	mov    rcx,QWORD PTR [r8+0x10]
   140001d4a:	cmp    BYTE PTR [rcx+0x19],0x0
   140001d4e:	jne    0x140001d54
   140001d50:	mov    QWORD PTR [rcx+0x8],rdx
   140001d54:	mov    rcx,QWORD PTR [rdx+0x8]
   140001d58:	mov    QWORD PTR [r8+0x8],rcx
   140001d5c:	mov    rcx,QWORD PTR [rbx]
   140001d5f:	cmp    rdx,QWORD PTR [rcx+0x8]
   140001d63:	jne    0x140001d72
   140001d65:	mov    QWORD PTR [rcx+0x8],r8
   140001d69:	mov    QWORD PTR [r8+0x10],rdx
   140001d6d:	jmp    0x140001e6e
   140001d72:	mov    rcx,QWORD PTR [rdx+0x8]
   140001d76:	cmp    rdx,QWORD PTR [rcx+0x10]
   140001d7a:	jne    0x140001d89
   140001d7c:	mov    QWORD PTR [rcx+0x10],r8
   140001d80:	mov    QWORD PTR [r8+0x10],rdx
   140001d84:	jmp    0x140001e6e
   140001d89:	mov    QWORD PTR [rcx],r8
   140001d8c:	mov    QWORD PTR [r8+0x10],rdx
   140001d90:	jmp    0x140001e6e
   140001d95:	cmp    BYTE PTR [rdx+0x18],0x0
   140001d99:	jne    0x140001dbc
   140001d9b:	mov    BYTE PTR [rcx+0x18],0x1
   140001d9f:	mov    BYTE PTR [rdx+0x18],0x1
   140001da3:	mov    rcx,QWORD PTR [rax+0x8]
   140001da7:	mov    rdx,QWORD PTR [rcx+0x8]
   140001dab:	mov    BYTE PTR [rdx+0x18],0x0
   140001daf:	mov    rcx,QWORD PTR [rax+0x8]
   140001db3:	mov    rax,QWORD PTR [rcx+0x8]
   140001db7:	jmp    0x140001e72
   140001dbc:	cmp    rax,QWORD PTR [rcx]
   140001dbf:	jne    0x140001e0e
   140001dc1:	mov    rdx,QWORD PTR [rcx]
   140001dc4:	mov    rax,rcx
   140001dc7:	mov    rcx,QWORD PTR [rdx+0x10]
   140001dcb:	mov    QWORD PTR [rax],rcx
   140001dce:	mov    rcx,QWORD PTR [rdx+0x10]
   140001dd2:	cmp    BYTE PTR [rcx+0x19],0x0
   140001dd6:	jne    0x140001ddc
   140001dd8:	mov    QWORD PTR [rcx+0x8],rax
   140001ddc:	mov    rcx,QWORD PTR [rax+0x8]
   140001de0:	mov    QWORD PTR [rdx+0x8],rcx
   140001de4:	mov    rcx,QWORD PTR [rbx]
   140001de7:	cmp    rax,QWORD PTR [rcx+0x8]
   140001deb:	jne    0x140001df3
   140001ded:	mov    QWORD PTR [rcx+0x8],rdx
   140001df1:	jmp    0x140001e06
   140001df3:	mov    rcx,QWORD PTR [rax+0x8]
   140001df7:	cmp    rax,QWORD PTR [rcx+0x10]
   140001dfb:	jne    0x140001e03
   140001dfd:	mov    QWORD PTR [rcx+0x10],rdx
   140001e01:	jmp    0x140001e06
   140001e03:	mov    QWORD PTR [rcx],rdx
   140001e06:	mov    QWORD PTR [rdx+0x10],rax
   140001e0a:	mov    QWORD PTR [rax+0x8],rdx
   140001e0e:	mov    rcx,QWORD PTR [rax+0x8]
   140001e12:	mov    BYTE PTR [rcx+0x18],0x1
   140001e16:	mov    rcx,QWORD PTR [rax+0x8]
   140001e1a:	mov    rdx,QWORD PTR [rcx+0x8]
   140001e1e:	mov    BYTE PTR [rdx+0x18],0x0
   140001e22:	mov    rcx,QWORD PTR [rax+0x8]
   140001e26:	mov    rdx,QWORD PTR [rcx+0x8]
   140001e2a:	mov    r8,QWORD PTR [rdx+0x10]
   140001e2e:	mov    rcx,QWORD PTR [r8]
   140001e31:	mov    QWORD PTR [rdx+0x10],rcx
   140001e35:	mov    rcx,QWORD PTR [r8]
   140001e38:	cmp    BYTE PTR [rcx+0x19],0x0
   140001e3c:	jne    0x140001e42
   140001e3e:	mov    QWORD PTR [rcx+0x8],rdx
   140001e42:	mov    rcx,QWORD PTR [rdx+0x8]
   140001e46:	mov    QWORD PTR [r8+0x8],rcx
   140001e4a:	mov    rcx,QWORD PTR [rbx]
   140001e4d:	cmp    rdx,QWORD PTR [rcx+0x8]
   140001e51:	jne    0x140001e59
   140001e53:	mov    QWORD PTR [rcx+0x8],r8
   140001e57:	jmp    0x140001e6b
   140001e59:	mov    rcx,QWORD PTR [rdx+0x8]
   140001e5d:	cmp    rdx,QWORD PTR [rcx]
   140001e60:	jne    0x140001e67
   140001e62:	mov    QWORD PTR [rcx],r8
   140001e65:	jmp    0x140001e6b
   140001e67:	mov    QWORD PTR [rcx+0x10],r8
   140001e6b:	mov    QWORD PTR [r8],rdx
   140001e6e:	mov    QWORD PTR [rdx+0x8],r8
   140001e72:	mov    rcx,QWORD PTR [rax+0x8]
   140001e76:	cmp    BYTE PTR [rcx+0x18],0x0
   140001e7a:	je     0x140001c90
   140001e80:	mov    rax,QWORD PTR [rbx]
   140001e83:	mov    rsi,QWORD PTR [rsp+0x38]
   140001e88:	mov    rdi,QWORD PTR [rsp+0x40]
   140001e8d:	mov    rcx,QWORD PTR [rax+0x8]
   140001e91:	mov    rbx,QWORD PTR [rsp+0x30]
   140001e96:	mov    QWORD PTR [r14],r9
   140001e99:	mov    BYTE PTR [rcx+0x18],0x1
   140001e9d:	mov    rax,r14
   140001ea0:	add    rsp,0x20
   140001ea4:	pop    r14
   140001ea6:	ret    
   140001ea7:	int3   
   140001ea8:	int3   
   140001ea9:	int3   
   140001eaa:	int3   
   140001eab:	int3   
   140001eac:	int3   
   140001ead:	int3   
   140001eae:	int3   
   140001eaf:	int3   
   140001eb0:	mov    QWORD PTR [rsp+0x8],rbx
   140001eb5:	mov    QWORD PTR [rsp+0x10],rsi
   140001eba:	mov    QWORD PTR [rsp+0x18],rdi
   140001ebf:	push   r14
   140001ec1:	sub    rsp,0x20
   140001ec5:	movabs rax,0x3fffffffffffffe
   140001ecf:	mov    rdi,r9
   140001ed2:	movzx  esi,r8b
   140001ed6:	mov    r14,rdx
   140001ed9:	mov    rbx,rcx
   140001edc:	cmp    QWORD PTR [rcx+0x8],rax
   140001ee0:	jb     0x140001ef0
   140001ee2:	lea    rcx,[rip+0x18dff]        # 0x14001ace8
   140001ee9:	call   QWORD PTR [rip+0x172f1]        # 0x1400191e0
   140001eef:	int3   
   140001ef0:	mov    rdx,QWORD PTR [rsp+0x50]
   140001ef5:	call   0x140001a90
   140001efa:	inc    QWORD PTR [rbx+0x8]
   140001efe:	mov    QWORD PTR [rax+0x8],rdi
   140001f02:	mov    rcx,QWORD PTR [rbx]
   140001f05:	mov    r9,rax
   140001f08:	cmp    rdi,rcx
   140001f0b:	jne    0x140001f20
   140001f0d:	mov    QWORD PTR [rcx+0x8],rax
   140001f11:	mov    rcx,QWORD PTR [rbx]
   140001f14:	mov    QWORD PTR [rcx],rax
   140001f17:	mov    rcx,QWORD PTR [rbx]
   140001f1a:	mov    QWORD PTR [rcx+0x10],rax
   140001f1e:	jmp    0x140001f46
   140001f20:	test   sil,sil
   140001f23:	je     0x140001f35
   140001f25:	mov    QWORD PTR [rdi],rax
   140001f28:	mov    rax,QWORD PTR [rbx]
   140001f2b:	cmp    rdi,QWORD PTR [rax]
   140001f2e:	jne    0x140001f46
   140001f30:	mov    QWORD PTR [rax],r9
   140001f33:	jmp    0x140001f46
   140001f35:	mov    QWORD PTR [rdi+0x10],rax
   140001f39:	mov    rax,QWORD PTR [rbx]
   140001f3c:	cmp    rdi,QWORD PTR [rax+0x10]
   140001f40:	jne    0x140001f46
   140001f42:	mov    QWORD PTR [rax+0x10],r9
   140001f46:	mov    rcx,QWORD PTR [r9+0x8]
   140001f4a:	mov    rax,r9
   140001f4d:	cmp    BYTE PTR [rcx+0x18],0x0
   140001f51:	jne    0x140002150
   140001f57:	nop    WORD PTR [rax+rax*1+0x0]
   140001f60:	mov    rcx,QWORD PTR [rax+0x8]
   140001f64:	mov    r8,QWORD PTR [rcx+0x8]
   140001f68:	mov    rdx,QWORD PTR [r8]
   140001f6b:	cmp    rcx,rdx
   140001f6e:	jne    0x140002065
   140001f74:	mov    rdx,QWORD PTR [r8+0x10]
   140001f78:	cmp    BYTE PTR [rdx+0x18],0x0
   140001f7c:	jne    0x140001f9f
   140001f7e:	mov    BYTE PTR [rcx+0x18],0x1
   140001f82:	mov    BYTE PTR [rdx+0x18],0x1
   140001f86:	mov    rcx,QWORD PTR [rax+0x8]
   140001f8a:	mov    rdx,QWORD PTR [rcx+0x8]
   140001f8e:	mov    BYTE PTR [rdx+0x18],0x0
   140001f92:	mov    rcx,QWORD PTR [rax+0x8]
   140001f96:	mov    rax,QWORD PTR [rcx+0x8]
   140001f9a:	jmp    0x140002142
   140001f9f:	cmp    rax,QWORD PTR [rcx+0x10]
   140001fa3:	jne    0x140001ff0
   140001fa5:	mov    rdx,QWORD PTR [rcx+0x10]
   140001fa9:	mov    rax,rcx
   140001fac:	mov    rcx,QWORD PTR [rdx]
   140001faf:	mov    QWORD PTR [rax+0x10],rcx
   140001fb3:	mov    rcx,QWORD PTR [rdx]
   140001fb6:	cmp    BYTE PTR [rcx+0x19],0x0
   140001fba:	jne    0x140001fc0
   140001fbc:	mov    QWORD PTR [rcx+0x8],rax
   140001fc0:	mov    rcx,QWORD PTR [rax+0x8]
   140001fc4:	mov    QWORD PTR [rdx+0x8],rcx
   140001fc8:	mov    rcx,QWORD PTR [rbx]
   140001fcb:	cmp    rax,QWORD PTR [rcx+0x8]
   140001fcf:	jne    0x140001fd7
   140001fd1:	mov    QWORD PTR [rcx+0x8],rdx
   140001fd5:	jmp    0x140001fe9
   140001fd7:	mov    rcx,QWORD PTR [rax+0x8]
   140001fdb:	cmp    rax,QWORD PTR [rcx]
   140001fde:	jne    0x140001fe5
   140001fe0:	mov    QWORD PTR [rcx],rdx
   140001fe3:	jmp    0x140001fe9
   140001fe5:	mov    QWORD PTR [rcx+0x10],rdx
   140001fe9:	mov    QWORD PTR [rdx],rax
   140001fec:	mov    QWORD PTR [rax+0x8],rdx
   140001ff0:	mov    rcx,QWORD PTR [rax+0x8]
   140001ff4:	mov    BYTE PTR [rcx+0x18],0x1
   140001ff8:	mov    rcx,QWORD PTR [rax+0x8]
   140001ffc:	mov    rdx,QWORD PTR [rcx+0x8]
   140002000:	mov    BYTE PTR [rdx+0x18],0x0
   140002004:	mov    rcx,QWORD PTR [rax+0x8]
   140002008:	mov    rdx,QWORD PTR [rcx+0x8]
   14000200c:	mov    r8,QWORD PTR [rdx]
   14000200f:	mov    rcx,QWORD PTR [r8+0x10]
   140002013:	mov    QWORD PTR [rdx],rcx
   140002016:	mov    rcx,QWORD PTR [r8+0x10]
   14000201a:	cmp    BYTE PTR [rcx+0x19],0x0
   14000201e:	jne    0x140002024
   140002020:	mov    QWORD PTR [rcx+0x8],rdx
   140002024:	mov    rcx,QWORD PTR [rdx+0x8]
   140002028:	mov    QWORD PTR [r8+0x8],rcx
   14000202c:	mov    rcx,QWORD PTR [rbx]
   14000202f:	cmp    rdx,QWORD PTR [rcx+0x8]
   140002033:	jne    0x140002042
   140002035:	mov    QWORD PTR [rcx+0x8],r8
   140002039:	mov    QWORD PTR [r8+0x10],rdx
   14000203d:	jmp    0x14000213e
   140002042:	mov    rcx,QWORD PTR [rdx+0x8]
   140002046:	cmp    rdx,QWORD PTR [rcx+0x10]
   14000204a:	jne    0x140002059
   14000204c:	mov    QWORD PTR [rcx+0x10],r8
   140002050:	mov    QWORD PTR [r8+0x10],rdx
   140002054:	jmp    0x14000213e
   140002059:	mov    QWORD PTR [rcx],r8
   14000205c:	mov    QWORD PTR [r8+0x10],rdx
   140002060:	jmp    0x14000213e
   140002065:	cmp    BYTE PTR [rdx+0x18],0x0
   140002069:	jne    0x14000208c
   14000206b:	mov    BYTE PTR [rcx+0x18],0x1
   14000206f:	mov    BYTE PTR [rdx+0x18],0x1
   140002073:	mov    rcx,QWORD PTR [rax+0x8]
   140002077:	mov    rdx,QWORD PTR [rcx+0x8]
   14000207b:	mov    BYTE PTR [rdx+0x18],0x0
   14000207f:	mov    rcx,QWORD PTR [rax+0x8]
   140002083:	mov    rax,QWORD PTR [rcx+0x8]
   140002087:	jmp    0x140002142
   14000208c:	cmp    rax,QWORD PTR [rcx]
   14000208f:	jne    0x1400020de
   140002091:	mov    rdx,QWORD PTR [rcx]
   140002094:	mov    rax,rcx
   140002097:	mov    rcx,QWORD PTR [rdx+0x10]
   14000209b:	mov    QWORD PTR [rax],rcx
   14000209e:	mov    rcx,QWORD PTR [rdx+0x10]
   1400020a2:	cmp    BYTE PTR [rcx+0x19],0x0
   1400020a6:	jne    0x1400020ac
   1400020a8:	mov    QWORD PTR [rcx+0x8],rax
   1400020ac:	mov    rcx,QWORD PTR [rax+0x8]
   1400020b0:	mov    QWORD PTR [rdx+0x8],rcx
   1400020b4:	mov    rcx,QWORD PTR [rbx]
   1400020b7:	cmp    rax,QWORD PTR [rcx+0x8]
   1400020bb:	jne    0x1400020c3
   1400020bd:	mov    QWORD PTR [rcx+0x8],rdx
   1400020c1:	jmp    0x1400020d6
   1400020c3:	mov    rcx,QWORD PTR [rax+0x8]
   1400020c7:	cmp    rax,QWORD PTR [rcx+0x10]
   1400020cb:	jne    0x1400020d3
   1400020cd:	mov    QWORD PTR [rcx+0x10],rdx
   1400020d1:	jmp    0x1400020d6
   1400020d3:	mov    QWORD PTR [rcx],rdx
   1400020d6:	mov    QWORD PTR [rdx+0x10],rax
   1400020da:	mov    QWORD PTR [rax+0x8],rdx
   1400020de:	mov    rcx,QWORD PTR [rax+0x8]
   1400020e2:	mov    BYTE PTR [rcx+0x18],0x1
   1400020e6:	mov    rcx,QWORD PTR [rax+0x8]
   1400020ea:	mov    rdx,QWORD PTR [rcx+0x8]
   1400020ee:	mov    BYTE PTR [rdx+0x18],0x0
   1400020f2:	mov    rcx,QWORD PTR [rax+0x8]
   1400020f6:	mov    rdx,QWORD PTR [rcx+0x8]
   1400020fa:	mov    r8,QWORD PTR [rdx+0x10]
   1400020fe:	mov    rcx,QWORD PTR [r8]
   140002101:	mov    QWORD PTR [rdx+0x10],rcx
   140002105:	mov    rcx,QWORD PTR [r8]
   140002108:	cmp    BYTE PTR [rcx+0x19],0x0
   14000210c:	jne    0x140002112
   14000210e:	mov    QWORD PTR [rcx+0x8],rdx
   140002112:	mov    rcx,QWORD PTR [rdx+0x8]
   140002116:	mov    QWORD PTR [r8+0x8],rcx
   14000211a:	mov    rcx,QWORD PTR [rbx]
   14000211d:	cmp    rdx,QWORD PTR [rcx+0x8]
   140002121:	jne    0x140002129
   140002123:	mov    QWORD PTR [rcx+0x8],r8
   140002127:	jmp    0x14000213b
   140002129:	mov    rcx,QWORD PTR [rdx+0x8]
   14000212d:	cmp    rdx,QWORD PTR [rcx]
   140002130:	jne    0x140002137
   140002132:	mov    QWORD PTR [rcx],r8
   140002135:	jmp    0x14000213b
   140002137:	mov    QWORD PTR [rcx+0x10],r8
   14000213b:	mov    QWORD PTR [r8],rdx
   14000213e:	mov    QWORD PTR [rdx+0x8],r8
   140002142:	mov    rcx,QWORD PTR [rax+0x8]
   140002146:	cmp    BYTE PTR [rcx+0x18],0x0
   14000214a:	je     0x140001f60
   140002150:	mov    rax,QWORD PTR [rbx]
   140002153:	mov    rsi,QWORD PTR [rsp+0x38]
   140002158:	mov    rdi,QWORD PTR [rsp+0x40]
   14000215d:	mov    rcx,QWORD PTR [rax+0x8]
   140002161:	mov    rbx,QWORD PTR [rsp+0x30]
   140002166:	mov    QWORD PTR [r14],r9
   140002169:	mov    BYTE PTR [rcx+0x18],0x1
   14000216d:	mov    rax,r14
   140002170:	add    rsp,0x20
   140002174:	pop    r14
   140002176:	ret    
   140002177:	int3   
   140002178:	int3   
   140002179:	int3   
   14000217a:	int3   
   14000217b:	int3   
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	mov    rax,rsp
   140002183:	mov    BYTE PTR [rax+0x18],r8b
   140002187:	mov    QWORD PTR [rax+0x8],rcx
   14000218b:	push   rdi
   14000218c:	push   r12
   14000218e:	push   r13
   140002190:	push   r14
   140002192:	push   r15
   140002194:	sub    rsp,0x40
   140002198:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   1400021a0:	mov    QWORD PTR [rax+0x10],rbx
   1400021a4:	mov    QWORD PTR [rax+0x20],rsi
   1400021a8:	mov    r14,r9
   1400021ab:	movzx  eax,r8b
   1400021af:	mov    r12,rdx
   1400021b2:	mov    rsi,rcx
   1400021b5:	mov    rcx,QWORD PTR [rcx]
   1400021b8:	mov    QWORD PTR [rsp+0x30],rcx
   1400021bd:	mov    rbx,QWORD PTR [rcx+0x8]
   1400021c1:	mov    r15,rcx
   1400021c4:	mov    dil,0x1
   1400021c7:	cmp    BYTE PTR [rbx+0x19],0x0
   1400021cb:	jne    0x1400022c1
   1400021d1:	mov    rsi,QWORD PTR [r9+0x10]
   1400021d5:	mov    r13,QWORD PTR [r9+0x18]
   1400021d9:	nop    DWORD PTR [rax+0x0]
   1400021e0:	mov    r15,rbx
   1400021e3:	test   al,al
   1400021e5:	je     0x140002240
   1400021e7:	lea    rcx,[rbx+0x20]
   1400021eb:	cmp    r13,0x10
   1400021ef:	jb     0x1400021f6
   1400021f1:	mov    rdx,QWORD PTR [r14]
   1400021f4:	jmp    0x1400021f9
   1400021f6:	mov    rdx,r14
   1400021f9:	mov    rdi,QWORD PTR [rcx+0x10]
   1400021fd:	cmp    QWORD PTR [rcx+0x18],0x10
   140002202:	jb     0x140002207
   140002204:	mov    rcx,QWORD PTR [rcx]
   140002207:	mov    r8,rsi
   14000220a:	cmp    rdi,rsi
   14000220d:	cmovb  r8,rdi
   140002211:	test   r8,r8
   140002214:	jne    0x14000221a
   140002216:	xor    eax,eax
   140002218:	jmp    0x14000221f
   14000221a:	call   0x140017340
   14000221f:	cdqe   
   140002221:	test   rax,rax
   140002224:	jne    0x140002238
   140002226:	cmp    rdi,rsi
   140002229:	jae    0x140002230
   14000222b:	or     eax,0xffffffff
   14000222e:	jmp    0x140002238
   140002230:	xor    eax,eax
   140002232:	cmp    rdi,rsi
   140002235:	setne  al
   140002238:	test   eax,eax
   14000223a:	setns  dil
   14000223e:	jmp    0x140002297
   140002240:	lea    rdx,[rbx+0x20]
   140002244:	mov    rdi,QWORD PTR [rdx+0x10]
   140002248:	cmp    QWORD PTR [rdx+0x18],0x10
   14000224d:	jb     0x140002252
   14000224f:	mov    rdx,QWORD PTR [rdx]
   140002252:	cmp    r13,0x10
   140002256:	jb     0x14000225d
   140002258:	mov    rcx,QWORD PTR [r14]
   14000225b:	jmp    0x140002260
   14000225d:	mov    rcx,r14
   140002260:	mov    r8,rdi
   140002263:	cmp    rsi,rdi
   140002266:	cmovb  r8,rsi
   14000226a:	test   r8,r8
   14000226d:	jne    0x140002273
   14000226f:	xor    eax,eax
   140002271:	jmp    0x140002278
   140002273:	call   0x140017340
   140002278:	cdqe   
   14000227a:	test   rax,rax
   14000227d:	jne    0x140002291
   14000227f:	cmp    rsi,rdi
   140002282:	jae    0x140002289
   140002284:	or     eax,0xffffffff
   140002287:	jmp    0x140002291
   140002289:	xor    eax,eax
   14000228b:	cmp    rsi,rdi
   14000228e:	setne  al
   140002291:	test   eax,eax
   140002293:	sets   dil
   140002297:	test   dil,dil
   14000229a:	je     0x1400022a1
   14000229c:	mov    rbx,QWORD PTR [rbx]
   14000229f:	jmp    0x1400022a5
   1400022a1:	mov    rbx,QWORD PTR [rbx+0x10]
   1400022a5:	cmp    BYTE PTR [rbx+0x19],0x0
   1400022a9:	movzx  eax,BYTE PTR [rsp+0x80]
   1400022b1:	je     0x1400021e0
   1400022b7:	mov    rcx,QWORD PTR [rsp+0x30]
   1400022bc:	mov    rsi,QWORD PTR [rsp+0x70]
   1400022c1:	mov    rbx,r15
   1400022c4:	test   dil,dil
   1400022c7:	je     0x14000236a
   1400022cd:	cmp    r15,QWORD PTR [rcx]
   1400022d0:	jne    0x14000230b
   1400022d2:	movzx  eax,BYTE PTR [rsp+0x90]
   1400022da:	mov    BYTE PTR [rsp+0x28],al
   1400022de:	mov    QWORD PTR [rsp+0x20],r14
   1400022e3:	mov    r9,r15
   1400022e6:	mov    r8b,0x1
   1400022e9:	lea    rdx,[rsp+0x70]
   1400022ee:	mov    rcx,rsi
   1400022f1:	call   0x140001be0
   1400022f6:	mov    rax,QWORD PTR [rax]
   1400022f9:	mov    QWORD PTR [r12],rax
   1400022fd:	mov    BYTE PTR [r12+0x8],0x1
   140002303:	mov    rax,r12
   140002306:	jmp    0x1400023be
   14000230b:	cmp    BYTE PTR [r15+0x19],0x0
   140002310:	je     0x140002318
   140002312:	mov    rbx,QWORD PTR [r15+0x10]
   140002316:	jmp    0x14000236a
   140002318:	mov    rax,QWORD PTR [r15]
   14000231b:	cmp    BYTE PTR [rax+0x19],0x0
   14000231f:	jne    0x14000233f
   140002321:	mov    rbx,rax
   140002324:	mov    rax,QWORD PTR [rax+0x10]
   140002328:	cmp    BYTE PTR [rax+0x19],0x0
   14000232c:	jne    0x14000236a
   14000232e:	xchg   ax,ax
   140002330:	mov    rbx,rax
   140002333:	mov    rax,QWORD PTR [rax+0x10]
   140002337:	cmp    BYTE PTR [rax+0x19],0x0
   14000233b:	je     0x140002330
   14000233d:	jmp    0x14000236a
   14000233f:	mov    rax,QWORD PTR [r15+0x8]
   140002343:	cmp    BYTE PTR [rax+0x19],0x0
   140002347:	jne    0x140002362
   140002349:	nop    DWORD PTR [rax+0x0]
   140002350:	cmp    rbx,QWORD PTR [rax]
   140002353:	jne    0x140002362
   140002355:	mov    rbx,rax
   140002358:	mov    rax,QWORD PTR [rax+0x8]
   14000235c:	cmp    BYTE PTR [rax+0x19],0x0
   140002360:	je     0x140002350
   140002362:	cmp    BYTE PTR [rbx+0x19],0x0
   140002366:	cmove  rbx,rax
   14000236a:	lea    rcx,[rbx+0x20]
   14000236e:	mov    rdx,r14
   140002371:	call   0x140006c10
   140002376:	test   eax,eax
   140002378:	jns    0x1400023b1
   14000237a:	movzx  eax,BYTE PTR [rsp+0x90]
   140002382:	mov    BYTE PTR [rsp+0x28],al
   140002386:	mov    QWORD PTR [rsp+0x20],r14
   14000238b:	mov    r9,r15
   14000238e:	movzx  r8d,dil
   140002392:	lea    rdx,[rsp+0x70]
   140002397:	mov    rcx,rsi
   14000239a:	call   0x140001be0
   14000239f:	mov    rax,QWORD PTR [rax]
   1400023a2:	mov    QWORD PTR [r12],rax
   1400023a6:	mov    BYTE PTR [r12+0x8],0x1
   1400023ac:	mov    rax,r12
   1400023af:	jmp    0x1400023be
   1400023b1:	mov    QWORD PTR [r12],rbx
   1400023b5:	mov    BYTE PTR [r12+0x8],0x0
   1400023bb:	mov    rax,r12
   1400023be:	mov    rbx,QWORD PTR [rsp+0x78]
   1400023c3:	mov    rsi,QWORD PTR [rsp+0x88]
   1400023cb:	add    rsp,0x40
   1400023cf:	pop    r15
   1400023d1:	pop    r14
   1400023d3:	pop    r13
   1400023d5:	pop    r12
   1400023d7:	pop    rdi
   1400023d8:	ret    
   1400023d9:	int3   
   1400023da:	int3   
   1400023db:	int3   
   1400023dc:	int3   
   1400023dd:	int3   
   1400023de:	int3   
   1400023df:	int3   
   1400023e0:	mov    rax,rsp
   1400023e3:	mov    BYTE PTR [rax+0x18],r8b
   1400023e7:	mov    QWORD PTR [rax+0x8],rcx
   1400023eb:	push   rdi
   1400023ec:	push   r12
   1400023ee:	push   r13
   1400023f0:	push   r14
   1400023f2:	push   r15
   1400023f4:	sub    rsp,0x40
   1400023f8:	mov    QWORD PTR [rax-0x30],0xfffffffffffffffe
   140002400:	mov    QWORD PTR [rax+0x10],rbx
   140002404:	mov    QWORD PTR [rax+0x20],rsi
   140002408:	mov    r14,r9
   14000240b:	movzx  eax,r8b
   14000240f:	mov    r12,rdx
   140002412:	mov    rsi,rcx
   140002415:	mov    rcx,QWORD PTR [rcx]
   140002418:	mov    QWORD PTR [rsp+0x30],rcx
   14000241d:	mov    rbx,QWORD PTR [rcx+0x8]
   140002421:	mov    r15,rcx
   140002424:	mov    dil,0x1
   140002427:	cmp    BYTE PTR [rbx+0x19],0x0
   14000242b:	jne    0x140002521
   140002431:	mov    rsi,QWORD PTR [r9+0x10]
   140002435:	mov    r13,QWORD PTR [r9+0x18]
   140002439:	nop    DWORD PTR [rax+0x0]
   140002440:	mov    r15,rbx
   140002443:	test   al,al
   140002445:	je     0x1400024a0
   140002447:	lea    rcx,[rbx+0x20]
   14000244b:	cmp    r13,0x10
   14000244f:	jb     0x140002456
   140002451:	mov    rdx,QWORD PTR [r14]
   140002454:	jmp    0x140002459
   140002456:	mov    rdx,r14
   140002459:	mov    rdi,QWORD PTR [rcx+0x10]
   14000245d:	cmp    QWORD PTR [rcx+0x18],0x10
   140002462:	jb     0x140002467
   140002464:	mov    rcx,QWORD PTR [rcx]
   140002467:	mov    r8,rsi
   14000246a:	cmp    rdi,rsi
   14000246d:	cmovb  r8,rdi
   140002471:	test   r8,r8
   140002474:	jne    0x14000247a
   140002476:	xor    eax,eax
   140002478:	jmp    0x14000247f
   14000247a:	call   0x140017340
   14000247f:	cdqe   
   140002481:	test   rax,rax
   140002484:	jne    0x140002498
   140002486:	cmp    rdi,rsi
   140002489:	jae    0x140002490
   14000248b:	or     eax,0xffffffff
   14000248e:	jmp    0x140002498
   140002490:	xor    eax,eax
   140002492:	cmp    rdi,rsi
   140002495:	setne  al
   140002498:	test   eax,eax
   14000249a:	setns  dil
   14000249e:	jmp    0x1400024f7
   1400024a0:	lea    rdx,[rbx+0x20]
   1400024a4:	mov    rdi,QWORD PTR [rdx+0x10]
   1400024a8:	cmp    QWORD PTR [rdx+0x18],0x10
   1400024ad:	jb     0x1400024b2
   1400024af:	mov    rdx,QWORD PTR [rdx]
   1400024b2:	cmp    r13,0x10
   1400024b6:	jb     0x1400024bd
   1400024b8:	mov    rcx,QWORD PTR [r14]
   1400024bb:	jmp    0x1400024c0
   1400024bd:	mov    rcx,r14
   1400024c0:	mov    r8,rdi
   1400024c3:	cmp    rsi,rdi
   1400024c6:	cmovb  r8,rsi
   1400024ca:	test   r8,r8
   1400024cd:	jne    0x1400024d3
   1400024cf:	xor    eax,eax
   1400024d1:	jmp    0x1400024d8
   1400024d3:	call   0x140017340
   1400024d8:	cdqe   
   1400024da:	test   rax,rax
   1400024dd:	jne    0x1400024f1
   1400024df:	cmp    rsi,rdi
   1400024e2:	jae    0x1400024e9
   1400024e4:	or     eax,0xffffffff
   1400024e7:	jmp    0x1400024f1
   1400024e9:	xor    eax,eax
   1400024eb:	cmp    rsi,rdi
   1400024ee:	setne  al
   1400024f1:	test   eax,eax
   1400024f3:	sets   dil
   1400024f7:	test   dil,dil
   1400024fa:	je     0x140002501
   1400024fc:	mov    rbx,QWORD PTR [rbx]
   1400024ff:	jmp    0x140002505
   140002501:	mov    rbx,QWORD PTR [rbx+0x10]
   140002505:	cmp    BYTE PTR [rbx+0x19],0x0
   140002509:	movzx  eax,BYTE PTR [rsp+0x80]
   140002511:	je     0x140002440
   140002517:	mov    rcx,QWORD PTR [rsp+0x30]
   14000251c:	mov    rsi,QWORD PTR [rsp+0x70]
   140002521:	mov    rbx,r15
   140002524:	test   dil,dil
   140002527:	je     0x1400025ca
   14000252d:	cmp    r15,QWORD PTR [rcx]
   140002530:	jne    0x14000256b
   140002532:	movzx  eax,BYTE PTR [rsp+0x90]
   14000253a:	mov    BYTE PTR [rsp+0x28],al
   14000253e:	mov    QWORD PTR [rsp+0x20],r14
   140002543:	mov    r9,r15
   140002546:	mov    r8b,0x1
   140002549:	lea    rdx,[rsp+0x70]
   14000254e:	mov    rcx,rsi
   140002551:	call   0x140001eb0
   140002556:	mov    rax,QWORD PTR [rax]
   140002559:	mov    QWORD PTR [r12],rax
   14000255d:	mov    BYTE PTR [r12+0x8],0x1
   140002563:	mov    rax,r12
   140002566:	jmp    0x14000261e
   14000256b:	cmp    BYTE PTR [r15+0x19],0x0
   140002570:	je     0x140002578
   140002572:	mov    rbx,QWORD PTR [r15+0x10]
   140002576:	jmp    0x1400025ca
   140002578:	mov    rax,QWORD PTR [r15]
   14000257b:	cmp    BYTE PTR [rax+0x19],0x0
   14000257f:	jne    0x14000259f
   140002581:	mov    rbx,rax
   140002584:	mov    rax,QWORD PTR [rax+0x10]
   140002588:	cmp    BYTE PTR [rax+0x19],0x0
   14000258c:	jne    0x1400025ca
   14000258e:	xchg   ax,ax
   140002590:	mov    rbx,rax
   140002593:	mov    rax,QWORD PTR [rax+0x10]
   140002597:	cmp    BYTE PTR [rax+0x19],0x0
   14000259b:	je     0x140002590
   14000259d:	jmp    0x1400025ca
   14000259f:	mov    rax,QWORD PTR [r15+0x8]
   1400025a3:	cmp    BYTE PTR [rax+0x19],0x0
   1400025a7:	jne    0x1400025c2
   1400025a9:	nop    DWORD PTR [rax+0x0]
   1400025b0:	cmp    rbx,QWORD PTR [rax]
   1400025b3:	jne    0x1400025c2
   1400025b5:	mov    rbx,rax
   1400025b8:	mov    rax,QWORD PTR [rax+0x8]
   1400025bc:	cmp    BYTE PTR [rax+0x19],0x0
   1400025c0:	je     0x1400025b0
   1400025c2:	cmp    BYTE PTR [rbx+0x19],0x0
   1400025c6:	cmove  rbx,rax
   1400025ca:	lea    rcx,[rbx+0x20]
   1400025ce:	mov    rdx,r14
   1400025d1:	call   0x140006c10
   1400025d6:	test   eax,eax
   1400025d8:	jns    0x140002611
   1400025da:	movzx  eax,BYTE PTR [rsp+0x90]
   1400025e2:	mov    BYTE PTR [rsp+0x28],al
   1400025e6:	mov    QWORD PTR [rsp+0x20],r14
   1400025eb:	mov    r9,r15
   1400025ee:	movzx  r8d,dil
   1400025f2:	lea    rdx,[rsp+0x70]
   1400025f7:	mov    rcx,rsi
   1400025fa:	call   0x140001eb0
   1400025ff:	mov    rax,QWORD PTR [rax]
   140002602:	mov    QWORD PTR [r12],rax
   140002606:	mov    BYTE PTR [r12+0x8],0x1
   14000260c:	mov    rax,r12
   14000260f:	jmp    0x14000261e
   140002611:	mov    QWORD PTR [r12],rbx
   140002615:	mov    BYTE PTR [r12+0x8],0x0
   14000261b:	mov    rax,r12
   14000261e:	mov    rbx,QWORD PTR [rsp+0x78]
   140002623:	mov    rsi,QWORD PTR [rsp+0x88]
   14000262b:	add    rsp,0x40
   14000262f:	pop    r15
   140002631:	pop    r14
   140002633:	pop    r13
   140002635:	pop    r12
   140002637:	pop    rdi
   140002638:	ret    
   140002639:	int3   
   14000263a:	int3   
   14000263b:	int3   
   14000263c:	int3   
   14000263d:	int3   
   14000263e:	int3   
   14000263f:	int3   
   140002640:	mov    rax,rcx
   140002643:	ret    
   140002644:	int3   
   140002645:	int3   
   140002646:	int3   
   140002647:	int3   
   140002648:	int3   
   140002649:	int3   
   14000264a:	int3   
   14000264b:	int3   
   14000264c:	int3   
   14000264d:	int3   
   14000264e:	int3   
   14000264f:	int3   
   140002650:	sub    rsp,0x28
   140002654:	movzx  ecx,BYTE PTR [rcx]
   140002657:	call   QWORD PTR [rip+0x16bf3]        # 0x140019250
   14000265d:	cmp    eax,0xffffffff
   140002660:	setne  al
   140002663:	add    rsp,0x28
   140002667:	ret    
   140002668:	int3   
   140002669:	int3   
   14000266a:	int3   
   14000266b:	int3   
   14000266c:	int3   
   14000266d:	int3   
   14000266e:	int3   
   14000266f:	int3   
   140002670:	mov    rax,rcx
   140002673:	ret    
   140002674:	int3   
   140002675:	int3   
   140002676:	int3   
   140002677:	int3   
   140002678:	int3   
   140002679:	int3   
   14000267a:	int3   
   14000267b:	int3   
   14000267c:	int3   
   14000267d:	int3   
   14000267e:	int3   
   14000267f:	int3   
   140002680:	mov    rax,rcx
   140002683:	ret    
   140002684:	int3   
   140002685:	int3   
   140002686:	int3   
   140002687:	int3   
   140002688:	int3   
   140002689:	int3   
   14000268a:	int3   
   14000268b:	int3   
   14000268c:	int3   
   14000268d:	int3   
   14000268e:	int3   
   14000268f:	int3   
   140002690:	mov    rax,rcx
   140002693:	ret    
   140002694:	int3   
   140002695:	int3   
   140002696:	int3   
   140002697:	int3   
   140002698:	int3   
   140002699:	int3   
   14000269a:	int3   
   14000269b:	int3   
   14000269c:	int3   
   14000269d:	int3   
   14000269e:	int3   
   14000269f:	int3   
   1400026a0:	mov    rax,rcx
   1400026a3:	ret    
   1400026a4:	int3   
   1400026a5:	int3   
   1400026a6:	int3   
   1400026a7:	int3   
   1400026a8:	int3   
   1400026a9:	int3   
   1400026aa:	int3   
   1400026ab:	int3   
   1400026ac:	int3   
   1400026ad:	int3   
   1400026ae:	int3   
   1400026af:	int3   
   1400026b0:	mov    rax,rcx
   1400026b3:	ret    
   1400026b4:	int3   
   1400026b5:	int3   
   1400026b6:	int3   
   1400026b7:	int3   
   1400026b8:	int3   
   1400026b9:	int3   
   1400026ba:	int3   
   1400026bb:	int3   
   1400026bc:	int3   
   1400026bd:	int3   
   1400026be:	int3   
   1400026bf:	int3   
   1400026c0:	sub    rsp,0x38
   1400026c4:	mov    r10,QWORD PTR [rcx+0x18]
   1400026c8:	cmp    r10,0x10
   1400026cc:	jb     0x1400026d3
   1400026ce:	mov    r9,QWORD PTR [rcx]
   1400026d1:	jmp    0x1400026d6
   1400026d3:	mov    r9,rcx
   1400026d6:	mov    rax,QWORD PTR [rcx+0x10]
   1400026da:	add    rax,r9
   1400026dd:	cmp    r10,0x10
   1400026e1:	jb     0x1400026e8
   1400026e3:	mov    r10,QWORD PTR [rcx]
   1400026e6:	jmp    0x1400026eb
   1400026e8:	mov    r10,rcx
   1400026eb:	mov    QWORD PTR [rsp+0x20],r8
   1400026f0:	mov    r9,rdx
   1400026f3:	mov    r8,rax
   1400026f6:	mov    rdx,r10
   1400026f9:	call   0x1400095b0
   1400026fe:	add    rsp,0x38
   140002702:	ret    
   140002703:	int3   
   140002704:	int3   
   140002705:	int3   
   140002706:	int3   
   140002707:	int3   
   140002708:	int3   
   140002709:	int3   
   14000270a:	int3   
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	test   rdx,rdx
   140002713:	je     0x14000271b
   140002715:	mov    rax,QWORD PTR [r8]
   140002718:	mov    QWORD PTR [rdx],rax
   14000271b:	ret    
   14000271c:	int3   
   14000271d:	int3   
   14000271e:	int3   
   14000271f:	int3   
   140002720:	test   rdx,rdx
   140002723:	je     0x14000272b
   140002725:	mov    rax,QWORD PTR [r8]
   140002728:	mov    QWORD PTR [rdx],rax
   14000272b:	ret    
   14000272c:	int3   
   14000272d:	int3   
   14000272e:	int3   
   14000272f:	int3   
   140002730:	test   rdx,rdx
   140002733:	je     0x14000273b
   140002735:	mov    rax,QWORD PTR [r8]
   140002738:	mov    QWORD PTR [rdx],rax
   14000273b:	ret    
   14000273c:	int3   
   14000273d:	int3   
   14000273e:	int3   
   14000273f:	int3   
   140002740:	test   rdx,rdx
   140002743:	je     0x14000274b
   140002745:	mov    rax,QWORD PTR [r8]
   140002748:	mov    QWORD PTR [rdx],rax
   14000274b:	ret    
   14000274c:	int3   
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	test   rdx,rdx
   140002753:	je     0x14000275b
   140002755:	mov    rax,QWORD PTR [r8]
   140002758:	mov    QWORD PTR [rdx],rax
   14000275b:	ret    
   14000275c:	int3   
   14000275d:	int3   
   14000275e:	int3   
   14000275f:	int3   
   140002760:	test   rdx,rdx
   140002763:	je     0x14000276b
   140002765:	mov    rax,QWORD PTR [r8]
   140002768:	mov    QWORD PTR [rdx],rax
   14000276b:	ret    
   14000276c:	int3   
   14000276d:	int3   
   14000276e:	int3   
   14000276f:	int3   
   140002770:	mov    QWORD PTR [rsp+0x10],rdx
   140002775:	sub    rsp,0x38
   140002779:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002782:	mov    r10,r8
   140002785:	mov    rax,rdx
   140002788:	mov    QWORD PTR [rsp+0x58],rdx
   14000278d:	test   rdx,rdx
   140002790:	je     0x1400027b8
   140002792:	mov    QWORD PTR [rdx+0x18],0xf
   14000279a:	mov    QWORD PTR [rdx+0x10],0x0
   1400027a2:	mov    BYTE PTR [rdx],0x0
   1400027a5:	or     r9,0xffffffffffffffff
   1400027a9:	xor    r8d,r8d
   1400027ac:	mov    rdx,r10
   1400027af:	mov    rcx,rax
   1400027b2:	call   0x140006640
   1400027b7:	nop
   1400027b8:	add    rsp,0x38
   1400027bc:	ret    
   1400027bd:	int3   
   1400027be:	int3   
   1400027bf:	int3   
   1400027c0:	mov    QWORD PTR [rsp+0x10],rdx
   1400027c5:	sub    rsp,0x38
   1400027c9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400027d2:	mov    r10,r8
   1400027d5:	mov    rax,rdx
   1400027d8:	mov    QWORD PTR [rsp+0x58],rdx
   1400027dd:	test   rdx,rdx
   1400027e0:	je     0x140002808
   1400027e2:	mov    QWORD PTR [rdx+0x18],0xf
   1400027ea:	mov    QWORD PTR [rdx+0x10],0x0
   1400027f2:	mov    BYTE PTR [rdx],0x0
   1400027f5:	or     r9,0xffffffffffffffff
   1400027f9:	xor    r8d,r8d
   1400027fc:	mov    rdx,r10
   1400027ff:	mov    rcx,rax
   140002802:	call   0x140006640
   140002807:	nop
   140002808:	add    rsp,0x38
   14000280c:	ret    
   14000280d:	int3   
   14000280e:	int3   
   14000280f:	int3   
   140002810:	mov    QWORD PTR [rsp+0x10],rdx
   140002815:	sub    rsp,0x38
   140002819:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002822:	mov    r10,r8
   140002825:	mov    rax,rdx
   140002828:	mov    QWORD PTR [rsp+0x58],rdx
   14000282d:	test   rdx,rdx
   140002830:	je     0x140002858
   140002832:	mov    QWORD PTR [rdx+0x18],0xf
   14000283a:	mov    QWORD PTR [rdx+0x10],0x0
   140002842:	mov    BYTE PTR [rdx],0x0
   140002845:	or     r9,0xffffffffffffffff
   140002849:	xor    r8d,r8d
   14000284c:	mov    rdx,r10
   14000284f:	mov    rcx,rax
   140002852:	call   0x140006640
   140002857:	nop
   140002858:	add    rsp,0x38
   14000285c:	ret    
   14000285d:	int3   
   14000285e:	int3   
   14000285f:	int3   
   140002860:	mov    QWORD PTR [rsp+0x10],rdx
   140002865:	push   rdi
   140002866:	sub    rsp,0x30
   14000286a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002873:	mov    QWORD PTR [rsp+0x40],rbx
   140002878:	mov    rdi,r8
   14000287b:	mov    rbx,rdx
   14000287e:	mov    QWORD PTR [rsp+0x58],rdx
   140002883:	test   rdx,rdx
   140002886:	je     0x1400028e9
   140002888:	mov    QWORD PTR [rdx+0x18],0xf
   140002890:	mov    QWORD PTR [rdx+0x10],0x0
   140002898:	mov    BYTE PTR [rdx],0x0
   14000289b:	cmp    QWORD PTR [r8+0x18],0x10
   1400028a0:	jae    0x1400028b9
   1400028a2:	mov    r8,QWORD PTR [r8+0x10]
   1400028a6:	inc    r8
   1400028a9:	je     0x1400028c6
   1400028ab:	mov    rdx,rdi
   1400028ae:	mov    rcx,rbx
   1400028b1:	call   QWORD PTR [rip+0x169c1]        # 0x140019278
   1400028b7:	jmp    0x1400028c6
   1400028b9:	mov    rax,QWORD PTR [r8]
   1400028bc:	mov    QWORD PTR [rdx],rax
   1400028bf:	mov    QWORD PTR [r8],0x0
   1400028c6:	mov    rax,QWORD PTR [rdi+0x10]
   1400028ca:	mov    QWORD PTR [rbx+0x10],rax
   1400028ce:	mov    rax,QWORD PTR [rdi+0x18]
   1400028d2:	mov    QWORD PTR [rbx+0x18],rax
   1400028d6:	mov    QWORD PTR [rdi+0x18],0xf
   1400028de:	mov    QWORD PTR [rdi+0x10],0x0
   1400028e6:	mov    BYTE PTR [rdi],0x0
   1400028e9:	mov    rbx,QWORD PTR [rsp+0x40]
   1400028ee:	add    rsp,0x30
   1400028f2:	pop    rdi
   1400028f3:	ret    
   1400028f4:	int3   
   1400028f5:	int3   
   1400028f6:	int3   
   1400028f7:	int3   
   1400028f8:	int3   
   1400028f9:	int3   
   1400028fa:	int3   
   1400028fb:	int3   
   1400028fc:	int3   
   1400028fd:	int3   
   1400028fe:	int3   
   1400028ff:	int3   
   140002900:	test   rdx,rdx
   140002903:	je     0x140002980
   140002905:	mov    QWORD PTR [rsp+0x8],rbx
   14000290a:	push   rdi
   14000290b:	sub    rsp,0x20
   14000290f:	mov    QWORD PTR [rdx+0x18],0xf
   140002917:	mov    QWORD PTR [rdx+0x10],0x0
   14000291f:	mov    BYTE PTR [rdx],0x0
   140002922:	cmp    QWORD PTR [r8+0x18],0x10
   140002927:	mov    rbx,r8
   14000292a:	mov    rdi,rdx
   14000292d:	jae    0x140002946
   14000292f:	mov    r8,QWORD PTR [r8+0x10]
   140002933:	inc    r8
   140002936:	je     0x140002953
   140002938:	mov    rdx,rbx
   14000293b:	mov    rcx,rdi
   14000293e:	call   QWORD PTR [rip+0x16934]        # 0x140019278
   140002944:	jmp    0x140002953
   140002946:	mov    rax,QWORD PTR [r8]
   140002949:	mov    QWORD PTR [rdx],rax
   14000294c:	mov    QWORD PTR [r8],0x0
   140002953:	mov    rax,QWORD PTR [rbx+0x10]
   140002957:	mov    QWORD PTR [rdi+0x10],rax
   14000295b:	mov    rax,QWORD PTR [rbx+0x18]
   14000295f:	mov    QWORD PTR [rdi+0x18],rax
   140002963:	mov    QWORD PTR [rbx+0x18],0xf
   14000296b:	mov    QWORD PTR [rbx+0x10],0x0
   140002973:	mov    BYTE PTR [rbx],0x0
   140002976:	mov    rbx,QWORD PTR [rsp+0x30]
   14000297b:	add    rsp,0x20
   14000297f:	pop    rdi
   140002980:	ret    
   140002981:	int3   
   140002982:	int3   
   140002983:	int3   
   140002984:	int3   
   140002985:	int3   
   140002986:	int3   
   140002987:	int3   
   140002988:	int3   
   140002989:	int3   
   14000298a:	int3   
   14000298b:	int3   
   14000298c:	int3   
   14000298d:	int3   
   14000298e:	int3   
   14000298f:	int3   
   140002990:	mov    QWORD PTR [rsp+0x10],rdx
   140002995:	push   rdi
   140002996:	sub    rsp,0x30
   14000299a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400029a3:	mov    QWORD PTR [rsp+0x40],rbx
   1400029a8:	mov    rdi,r8
   1400029ab:	mov    rbx,rdx
   1400029ae:	mov    QWORD PTR [rsp+0x58],rdx
   1400029b3:	test   rdx,rdx
   1400029b6:	je     0x140002a19
   1400029b8:	mov    QWORD PTR [rdx+0x18],0xf
   1400029c0:	mov    QWORD PTR [rdx+0x10],0x0
   1400029c8:	mov    BYTE PTR [rdx],0x0
   1400029cb:	cmp    QWORD PTR [r8+0x18],0x10
   1400029d0:	jae    0x1400029e9
   1400029d2:	mov    r8,QWORD PTR [r8+0x10]
   1400029d6:	inc    r8
   1400029d9:	je     0x1400029f6
   1400029db:	mov    rdx,rdi
   1400029de:	mov    rcx,rbx
   1400029e1:	call   QWORD PTR [rip+0x16891]        # 0x140019278
   1400029e7:	jmp    0x1400029f6
   1400029e9:	mov    rax,QWORD PTR [r8]
   1400029ec:	mov    QWORD PTR [rdx],rax
   1400029ef:	mov    QWORD PTR [r8],0x0
   1400029f6:	mov    rax,QWORD PTR [rdi+0x10]
   1400029fa:	mov    QWORD PTR [rbx+0x10],rax
   1400029fe:	mov    rax,QWORD PTR [rdi+0x18]
   140002a02:	mov    QWORD PTR [rbx+0x18],rax
   140002a06:	mov    QWORD PTR [rdi+0x18],0xf
   140002a0e:	mov    QWORD PTR [rdi+0x10],0x0
   140002a16:	mov    BYTE PTR [rdi],0x0
   140002a19:	mov    rbx,QWORD PTR [rsp+0x40]
   140002a1e:	add    rsp,0x30
   140002a22:	pop    rdi
   140002a23:	ret    
   140002a24:	int3   
   140002a25:	int3   
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	ret    0x0
   140002a33:	int3   
   140002a34:	int3   
   140002a35:	int3   
   140002a36:	int3   
   140002a37:	int3   
   140002a38:	int3   
   140002a39:	int3   
   140002a3a:	int3   
   140002a3b:	int3   
   140002a3c:	int3   
   140002a3d:	int3   
   140002a3e:	int3   
   140002a3f:	int3   
   140002a40:	ret    0x0
   140002a43:	int3   
   140002a44:	int3   
   140002a45:	int3   
   140002a46:	int3   
   140002a47:	int3   
   140002a48:	int3   
   140002a49:	int3   
   140002a4a:	int3   
   140002a4b:	int3   
   140002a4c:	int3   
   140002a4d:	int3   
   140002a4e:	int3   
   140002a4f:	int3   
   140002a50:	ret    0x0
   140002a53:	int3   
   140002a54:	int3   
   140002a55:	int3   
   140002a56:	int3   
   140002a57:	int3   
   140002a58:	int3   
   140002a59:	int3   
   140002a5a:	int3   
   140002a5b:	int3   
   140002a5c:	int3   
   140002a5d:	int3   
   140002a5e:	int3   
   140002a5f:	int3   
   140002a60:	ret    0x0
   140002a63:	int3   
   140002a64:	int3   
   140002a65:	int3   
   140002a66:	int3   
   140002a67:	int3   
   140002a68:	int3   
   140002a69:	int3   
   140002a6a:	int3   
   140002a6b:	int3   
   140002a6c:	int3   
   140002a6d:	int3   
   140002a6e:	int3   
   140002a6f:	int3   
   140002a70:	ret    0x0
   140002a73:	int3   
   140002a74:	int3   
   140002a75:	int3   
   140002a76:	int3   
   140002a77:	int3   
   140002a78:	int3   
   140002a79:	int3   
   140002a7a:	int3   
   140002a7b:	int3   
   140002a7c:	int3   
   140002a7d:	int3   
   140002a7e:	int3   
   140002a7f:	int3   
   140002a80:	ret    0x0
   140002a83:	int3   
   140002a84:	int3   
   140002a85:	int3   
   140002a86:	int3   
   140002a87:	int3   
   140002a88:	int3   
   140002a89:	int3   
   140002a8a:	int3   
   140002a8b:	int3   
   140002a8c:	int3   
   140002a8d:	int3   
   140002a8e:	int3   
   140002a8f:	int3   
   140002a90:	rex push rbx
   140002a92:	sub    rsp,0x20
   140002a96:	cmp    QWORD PTR [rdx+0x18],0x10
   140002a9b:	mov    rbx,rdx
   140002a9e:	jb     0x140002aa8
   140002aa0:	mov    rcx,QWORD PTR [rdx]
   140002aa3:	call   0x14001716e
   140002aa8:	mov    QWORD PTR [rbx+0x18],0xf
   140002ab0:	mov    QWORD PTR [rbx+0x10],0x0
   140002ab8:	mov    BYTE PTR [rbx],0x0
   140002abb:	add    rsp,0x20
   140002abf:	pop    rbx
   140002ac0:	ret    
   140002ac1:	int3   
   140002ac2:	int3   
   140002ac3:	int3   
   140002ac4:	int3   
   140002ac5:	int3   
   140002ac6:	int3   
   140002ac7:	int3   
   140002ac8:	int3   
   140002ac9:	int3   
   140002aca:	int3   
   140002acb:	int3   
   140002acc:	int3   
   140002acd:	int3   
   140002ace:	int3   
   140002acf:	int3   
   140002ad0:	rex push rbx
   140002ad2:	sub    rsp,0x20
   140002ad6:	cmp    QWORD PTR [rdx+0x18],0x10
   140002adb:	mov    rbx,rdx
   140002ade:	jb     0x140002ae8
   140002ae0:	mov    rcx,QWORD PTR [rdx]
   140002ae3:	call   0x14001716e
   140002ae8:	mov    QWORD PTR [rbx+0x18],0xf
   140002af0:	mov    QWORD PTR [rbx+0x10],0x0
   140002af8:	mov    BYTE PTR [rbx],0x0
   140002afb:	add    rsp,0x20
   140002aff:	pop    rbx
   140002b00:	ret    
   140002b01:	int3   
   140002b02:	int3   
   140002b03:	int3   
   140002b04:	int3   
   140002b05:	int3   
   140002b06:	int3   
   140002b07:	int3   
   140002b08:	int3   
   140002b09:	int3   
   140002b0a:	int3   
   140002b0b:	int3   
   140002b0c:	int3   
   140002b0d:	int3   
   140002b0e:	int3   
   140002b0f:	int3   
   140002b10:	rex push rbx
   140002b12:	sub    rsp,0x20
   140002b16:	cmp    QWORD PTR [rdx+0x18],0x10
   140002b1b:	mov    rbx,rdx
   140002b1e:	jb     0x140002b28
   140002b20:	mov    rcx,QWORD PTR [rdx]
   140002b23:	call   0x14001716e
   140002b28:	mov    QWORD PTR [rbx+0x18],0xf
   140002b30:	mov    QWORD PTR [rbx+0x10],0x0
   140002b38:	mov    BYTE PTR [rbx],0x0
   140002b3b:	add    rsp,0x20
   140002b3f:	pop    rbx
   140002b40:	ret    
   140002b41:	int3   
   140002b42:	int3   
   140002b43:	int3   
   140002b44:	int3   
   140002b45:	int3   
   140002b46:	int3   
   140002b47:	int3   
   140002b48:	int3   
   140002b49:	int3   
   140002b4a:	int3   
   140002b4b:	int3   
   140002b4c:	int3   
   140002b4d:	int3   
   140002b4e:	int3   
   140002b4f:	int3   
   140002b50:	rex push rbx
   140002b52:	sub    rsp,0x20
   140002b56:	mov    rax,QWORD PTR [rcx]
   140002b59:	mov    rbx,rcx
   140002b5c:	mov    dl,0xa
   140002b5e:	movsxd rcx,DWORD PTR [rax+0x4]
   140002b62:	add    rcx,rbx
   140002b65:	call   QWORD PTR [rip+0x1658d]        # 0x1400190f8
   140002b6b:	mov    rcx,rbx
   140002b6e:	movzx  edx,al
   140002b71:	call   QWORD PTR [rip+0x165c9]        # 0x140019140
   140002b77:	mov    rcx,rbx
   140002b7a:	call   QWORD PTR [rip+0x165d0]        # 0x140019150
   140002b80:	mov    rax,rbx
   140002b83:	add    rsp,0x20
   140002b87:	pop    rbx
   140002b88:	ret    
   140002b89:	int3   
   140002b8a:	int3   
   140002b8b:	int3   
   140002b8c:	int3   
   140002b8d:	int3   
   140002b8e:	int3   
   140002b8f:	int3   
   140002b90:	mov    rax,rcx
   140002b93:	ret    
   140002b94:	int3   
   140002b95:	int3   
   140002b96:	int3   
   140002b97:	int3   
   140002b98:	int3   
   140002b99:	int3   
   140002b9a:	int3   
   140002b9b:	int3   
   140002b9c:	int3   
   140002b9d:	int3   
   140002b9e:	int3   
   140002b9f:	int3   
   140002ba0:	mov    rax,rcx
   140002ba3:	ret    
   140002ba4:	int3   
   140002ba5:	int3   
   140002ba6:	int3   
   140002ba7:	int3   
   140002ba8:	int3   
   140002ba9:	int3   
   140002baa:	int3   
   140002bab:	int3   
   140002bac:	int3   
   140002bad:	int3   
   140002bae:	int3   
   140002baf:	int3   
   140002bb0:	mov    rax,rcx
   140002bb3:	ret    
   140002bb4:	int3   
   140002bb5:	int3   
   140002bb6:	int3   
   140002bb7:	int3   
   140002bb8:	int3   
   140002bb9:	int3   
   140002bba:	int3   
   140002bbb:	int3   
   140002bbc:	int3   
   140002bbd:	int3   
   140002bbe:	int3   
   140002bbf:	int3   
   140002bc0:	mov    rax,rcx
   140002bc3:	ret    
   140002bc4:	int3   
   140002bc5:	int3   
   140002bc6:	int3   
   140002bc7:	int3   
   140002bc8:	int3   
   140002bc9:	int3   
   140002bca:	int3   
   140002bcb:	int3   
   140002bcc:	int3   
   140002bcd:	int3   
   140002bce:	int3   
   140002bcf:	int3   
   140002bd0:	mov    rax,rcx
   140002bd3:	ret    
   140002bd4:	int3   
   140002bd5:	int3   
   140002bd6:	int3   
   140002bd7:	int3   
   140002bd8:	int3   
   140002bd9:	int3   
   140002bda:	int3   
   140002bdb:	int3   
   140002bdc:	int3   
   140002bdd:	int3   
   140002bde:	int3   
   140002bdf:	int3   
   140002be0:	mov    rax,rcx
   140002be3:	ret    
   140002be4:	int3   
   140002be5:	int3   
   140002be6:	int3   
   140002be7:	int3   
   140002be8:	int3   
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	mov    rax,rcx
   140002bf3:	ret    
   140002bf4:	int3   
   140002bf5:	int3   
   140002bf6:	int3   
   140002bf7:	int3   
   140002bf8:	int3   
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	mov    rax,rcx
   140002c03:	ret    
   140002c04:	int3   
   140002c05:	int3   
   140002c06:	int3   
   140002c07:	int3   
   140002c08:	int3   
   140002c09:	int3   
   140002c0a:	int3   
   140002c0b:	int3   
   140002c0c:	int3   
   140002c0d:	int3   
   140002c0e:	int3   
   140002c0f:	int3   
   140002c10:	sub    rsp,0x58
   140002c14:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002c1d:	lea    rax,[rip+0x180b4]        # 0x14001acd8
   140002c24:	mov    QWORD PTR [rsp+0x38],rax
   140002c29:	mov    QWORD PTR [rsp+0x40],rcx
   140002c2e:	mov    eax,DWORD PTR [rsp+0x80]
   140002c35:	mov    DWORD PTR [rsp+0x20],eax
   140002c39:	lea    rcx,[rsp+0x38]
   140002c3e:	call   0x140008c60
   140002c43:	nop
   140002c44:	add    rsp,0x58
   140002c48:	ret    
   140002c49:	int3   
   140002c4a:	int3   
   140002c4b:	int3   
   140002c4c:	int3   
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	movzx  eax,BYTE PTR [rdx]
   140002c53:	movzx  r8d,BYTE PTR [rcx]
   140002c57:	mov    BYTE PTR [rcx],al
   140002c59:	mov    BYTE PTR [rdx],r8b
   140002c5c:	ret    
   140002c5d:	int3   
   140002c5e:	int3   
   140002c5f:	int3   
   140002c60:	rex push rdi
   140002c62:	sub    rsp,0x40
   140002c66:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002c6f:	mov    QWORD PTR [rsp+0x60],rbx
   140002c74:	mov    QWORD PTR [rsp+0x68],rsi
   140002c79:	mov    rsi,rcx
   140002c7c:	xor    edx,edx
   140002c7e:	lea    rcx,[rsp+0x50]
   140002c83:	call   QWORD PTR [rip+0x1655f]        # 0x1400191e8
   140002c89:	nop
   140002c8a:	mov    rax,QWORD PTR [rip+0x1ea07]        # 0x140021698
   140002c91:	mov    QWORD PTR [rsp+0x58],rax
   140002c96:	mov    rcx,QWORD PTR [rip+0x164fb]        # 0x140019198
   140002c9d:	call   QWORD PTR [rip+0x163b5]        # 0x140019058
   140002ca3:	mov    rdi,rax
   140002ca6:	mov    rax,QWORD PTR [rsi]
   140002ca9:	cmp    rdi,QWORD PTR [rax+0x18]
   140002cad:	jae    0x140002cc2
   140002caf:	mov    rcx,QWORD PTR [rax+0x10]
   140002cb3:	mov    rbx,QWORD PTR [rcx+rdi*8]
   140002cb7:	test   rbx,rbx
   140002cba:	jne    0x140002d43
   140002cc0:	jmp    0x140002cc4
   140002cc2:	xor    ebx,ebx
   140002cc4:	cmp    BYTE PTR [rax+0x24],0x0
   140002cc8:	je     0x140002cde
   140002cca:	call   QWORD PTR [rip+0x16390]        # 0x140019060
   140002cd0:	cmp    rdi,QWORD PTR [rax+0x18]
   140002cd4:	jae    0x140002ce3
   140002cd6:	mov    rax,QWORD PTR [rax+0x10]
   140002cda:	mov    rbx,QWORD PTR [rax+rdi*8]
   140002cde:	test   rbx,rbx
   140002ce1:	jne    0x140002d43
   140002ce3:	mov    rbx,QWORD PTR [rsp+0x58]
   140002ce8:	test   rbx,rbx
   140002ceb:	jne    0x140002d43
   140002ced:	mov    rdx,rsi
   140002cf0:	lea    rcx,[rsp+0x58]
   140002cf5:	call   QWORD PTR [rip+0x1638d]        # 0x140019088
   140002cfb:	cmp    rax,0xffffffffffffffff
   140002cff:	jne    0x140002d25
   140002d01:	lea    rdx,[rip+0x17fb8]        # 0x14001acc0
   140002d08:	lea    rcx,[rsp+0x28]
   140002d0d:	call   QWORD PTR [rip+0x16595]        # 0x1400192a8
   140002d13:	lea    rdx,[rip+0x1c896]        # 0x14001f5b0
   140002d1a:	lea    rcx,[rsp+0x28]
   140002d1f:	call   0x140017334
   140002d24:	int3   
   140002d25:	mov    rbx,QWORD PTR [rsp+0x58]
   140002d2a:	mov    QWORD PTR [rip+0x1e967],rbx        # 0x140021698
   140002d31:	mov    rax,QWORD PTR [rbx]
   140002d34:	mov    rcx,rbx
   140002d37:	call   QWORD PTR [rax+0x8]
   140002d3a:	mov    rcx,rbx
   140002d3d:	call   0x140017044
   140002d42:	nop
   140002d43:	lea    rcx,[rsp+0x50]
   140002d48:	call   QWORD PTR [rip+0x1647a]        # 0x1400191c8
   140002d4e:	mov    rax,rbx
   140002d51:	mov    rbx,QWORD PTR [rsp+0x60]
   140002d56:	mov    rsi,QWORD PTR [rsp+0x68]
   140002d5b:	add    rsp,0x40
   140002d5f:	pop    rdi
   140002d60:	ret    
   140002d61:	int3   
   140002d62:	int3   
   140002d63:	int3   
   140002d64:	int3   
   140002d65:	int3   
   140002d66:	int3   
   140002d67:	int3   
   140002d68:	int3   
   140002d69:	int3   
   140002d6a:	int3   
   140002d6b:	int3   
   140002d6c:	int3   
   140002d6d:	int3   
   140002d6e:	int3   
   140002d6f:	int3   
   140002d70:	lea    rax,[rip+0x17f61]        # 0x14001acd8
   140002d77:	mov    QWORD PTR [rcx+0x8],rdx
   140002d7b:	mov    QWORD PTR [rcx],rax
   140002d7e:	mov    rax,rcx
   140002d81:	ret    
   140002d82:	int3   
   140002d83:	int3   
   140002d84:	int3   
   140002d85:	int3   
   140002d86:	int3   
   140002d87:	int3   
   140002d88:	int3   
   140002d89:	int3   
   140002d8a:	int3   
   140002d8b:	int3   
   140002d8c:	int3   
   140002d8d:	int3   
   140002d8e:	int3   
   140002d8f:	int3   
   140002d90:	xor    eax,eax
   140002d92:	mov    QWORD PTR [rcx+0x10],rax
   140002d96:	mov    QWORD PTR [rcx+0x18],rax
   140002d9a:	mov    rax,rcx
   140002d9d:	ret    
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	mov    QWORD PTR [rcx],rdx
   140002da3:	mov    rax,rcx
   140002da6:	ret    
   140002da7:	int3   
   140002da8:	int3   
   140002da9:	int3   
   140002daa:	int3   
   140002dab:	int3   
   140002dac:	int3   
   140002dad:	int3   
   140002dae:	int3   
   140002daf:	int3   
   140002db0:	mov    QWORD PTR [rcx],rdx
   140002db3:	mov    rax,rcx
   140002db6:	ret    
   140002db7:	int3   
   140002db8:	int3   
   140002db9:	int3   
   140002dba:	int3   
   140002dbb:	int3   
   140002dbc:	int3   
   140002dbd:	int3   
   140002dbe:	int3   
   140002dbf:	int3   
   140002dc0:	xor    eax,eax
   140002dc2:	mov    QWORD PTR [rcx+0x10],rax
   140002dc6:	mov    QWORD PTR [rcx+0x18],rax
   140002dca:	mov    rax,rcx
   140002dcd:	ret    
   140002dce:	int3   
   140002dcf:	int3   
   140002dd0:	rex push rbx
   140002dd2:	sub    rsp,0x20
   140002dd6:	xor    eax,eax
   140002dd8:	mov    rbx,rcx
   140002ddb:	mov    QWORD PTR [rcx],rax
   140002dde:	mov    QWORD PTR [rcx+0x8],rax
   140002de2:	call   0x140005560
   140002de7:	mov    QWORD PTR [rbx],rax
   140002dea:	mov    rax,rbx
   140002ded:	add    rsp,0x20
   140002df1:	pop    rbx
   140002df2:	ret    
   140002df3:	int3   
   140002df4:	int3   
   140002df5:	int3   
   140002df6:	int3   
   140002df7:	int3   
   140002df8:	int3   
   140002df9:	int3   
   140002dfa:	int3   
   140002dfb:	int3   
   140002dfc:	int3   
   140002dfd:	int3   
   140002dfe:	int3   
   140002dff:	int3   
   140002e00:	rex push rbx
   140002e02:	sub    rsp,0x20
   140002e06:	xor    eax,eax
   140002e08:	mov    rbx,rcx
   140002e0b:	mov    QWORD PTR [rcx],rax
   140002e0e:	mov    QWORD PTR [rcx+0x8],rax
   140002e12:	call   0x140005560
   140002e17:	mov    QWORD PTR [rbx],rax
   140002e1a:	mov    rax,rbx
   140002e1d:	add    rsp,0x20
   140002e21:	pop    rbx
   140002e22:	ret    
   140002e23:	int3   
   140002e24:	int3   
   140002e25:	int3   
   140002e26:	int3   
   140002e27:	int3   
   140002e28:	int3   
   140002e29:	int3   
   140002e2a:	int3   
   140002e2b:	int3   
   140002e2c:	int3   
   140002e2d:	int3   
   140002e2e:	int3   
   140002e2f:	int3   
   140002e30:	rex push rbx
   140002e32:	sub    rsp,0x20
   140002e36:	xor    eax,eax
   140002e38:	mov    rbx,rcx
   140002e3b:	mov    QWORD PTR [rcx],rax
   140002e3e:	mov    QWORD PTR [rcx+0x8],rax
   140002e42:	call   0x140005560
   140002e47:	mov    QWORD PTR [rbx],rax
   140002e4a:	mov    rax,rbx
   140002e4d:	add    rsp,0x20
   140002e51:	pop    rbx
   140002e52:	ret    
   140002e53:	int3   
   140002e54:	int3   
   140002e55:	int3   
   140002e56:	int3   
   140002e57:	int3   
   140002e58:	int3   
   140002e59:	int3   
   140002e5a:	int3   
   140002e5b:	int3   
   140002e5c:	int3   
   140002e5d:	int3   
   140002e5e:	int3   
   140002e5f:	int3   
   140002e60:	rex push rbx
   140002e62:	sub    rsp,0x20
   140002e66:	xor    eax,eax
   140002e68:	mov    rbx,rcx
   140002e6b:	mov    QWORD PTR [rcx],rax
   140002e6e:	mov    QWORD PTR [rcx+0x8],rax
   140002e72:	call   0x140005560
   140002e77:	mov    QWORD PTR [rbx],rax
   140002e7a:	mov    rax,rbx
   140002e7d:	add    rsp,0x20
   140002e81:	pop    rbx
   140002e82:	ret    
   140002e83:	int3   
   140002e84:	int3   
   140002e85:	int3   
   140002e86:	int3   
   140002e87:	int3   
   140002e88:	int3   
   140002e89:	int3   
   140002e8a:	int3   
   140002e8b:	int3   
   140002e8c:	int3   
   140002e8d:	int3   
   140002e8e:	int3   
   140002e8f:	int3   
   140002e90:	mov    QWORD PTR [rcx],rdx
   140002e93:	mov    rax,rcx
   140002e96:	ret    
   140002e97:	int3   
   140002e98:	int3   
   140002e99:	int3   
   140002e9a:	int3   
   140002e9b:	int3   
   140002e9c:	int3   
   140002e9d:	int3   
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	mov    QWORD PTR [rcx],rdx
   140002ea3:	mov    rax,rcx
   140002ea6:	ret    
   140002ea7:	int3   
   140002ea8:	int3   
   140002ea9:	int3   
   140002eaa:	int3   
   140002eab:	int3   
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	xor    eax,eax
   140002eb2:	mov    QWORD PTR [rcx],rax
   140002eb5:	mov    QWORD PTR [rcx+0x8],rax
   140002eb9:	mov    rax,rcx
   140002ebc:	ret    
   140002ebd:	int3   
   140002ebe:	int3   
   140002ebf:	int3   
   140002ec0:	mov    QWORD PTR [rcx],rdx
   140002ec3:	mov    rax,rcx
   140002ec6:	ret    
   140002ec7:	int3   
   140002ec8:	int3   
   140002ec9:	int3   
   140002eca:	int3   
   140002ecb:	int3   
   140002ecc:	int3   
   140002ecd:	int3   
   140002ece:	int3   
   140002ecf:	int3   
   140002ed0:	mov    QWORD PTR [rcx],rdx
   140002ed3:	mov    rax,rcx
   140002ed6:	ret    
   140002ed7:	int3   
   140002ed8:	int3   
   140002ed9:	int3   
   140002eda:	int3   
   140002edb:	int3   
   140002edc:	int3   
   140002edd:	int3   
   140002ede:	int3   
   140002edf:	int3   
   140002ee0:	mov    QWORD PTR [rcx],rdx
   140002ee3:	mov    rax,rcx
   140002ee6:	ret    
   140002ee7:	int3   
   140002ee8:	int3   
   140002ee9:	int3   
   140002eea:	int3   
   140002eeb:	int3   
   140002eec:	int3   
   140002eed:	int3   
   140002eee:	int3   
   140002eef:	int3   
   140002ef0:	mov    rax,rcx
   140002ef3:	ret    
   140002ef4:	int3   
   140002ef5:	int3   
   140002ef6:	int3   
   140002ef7:	int3   
   140002ef8:	int3   
   140002ef9:	int3   
   140002efa:	int3   
   140002efb:	int3   
   140002efc:	int3   
   140002efd:	int3   
   140002efe:	int3   
   140002eff:	int3   
   140002f00:	mov    rax,rcx
   140002f03:	ret    
   140002f04:	int3   
   140002f05:	int3   
   140002f06:	int3   
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	int3   
   140002f0d:	int3   
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	mov    rax,rcx
   140002f13:	ret    
   140002f14:	int3   
   140002f15:	int3   
   140002f16:	int3   
   140002f17:	int3   
   140002f18:	int3   
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	mov    rax,rcx
   140002f23:	ret    
   140002f24:	int3   
   140002f25:	int3   
   140002f26:	int3   
   140002f27:	int3   
   140002f28:	int3   
   140002f29:	int3   
   140002f2a:	int3   
   140002f2b:	int3   
   140002f2c:	int3   
   140002f2d:	int3   
   140002f2e:	int3   
   140002f2f:	int3   
   140002f30:	mov    rax,rcx
   140002f33:	ret    
   140002f34:	int3   
   140002f35:	int3   
   140002f36:	int3   
   140002f37:	int3   
   140002f38:	int3   
   140002f39:	int3   
   140002f3a:	int3   
   140002f3b:	int3   
   140002f3c:	int3   
   140002f3d:	int3   
   140002f3e:	int3   
   140002f3f:	int3   
   140002f40:	mov    rax,rcx
   140002f43:	ret    
   140002f44:	int3   
   140002f45:	int3   
   140002f46:	int3   
   140002f47:	int3   
   140002f48:	int3   
   140002f49:	int3   
   140002f4a:	int3   
   140002f4b:	int3   
   140002f4c:	int3   
   140002f4d:	int3   
   140002f4e:	int3   
   140002f4f:	int3   
   140002f50:	mov    rax,rcx
   140002f53:	ret    
   140002f54:	int3   
   140002f55:	int3   
   140002f56:	int3   
   140002f57:	int3   
   140002f58:	int3   
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	mov    QWORD PTR [rsp+0x8],rcx
   140002f65:	push   rdi
   140002f66:	sub    rsp,0x30
   140002f6a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140002f73:	mov    QWORD PTR [rsp+0x48],rbx
   140002f78:	mov    rdi,rdx
   140002f7b:	mov    rbx,rcx
   140002f7e:	call   QWORD PTR [rip+0x16124]        # 0x1400190a8
   140002f84:	nop
   140002f85:	lea    rax,[rip+0x17544]        # 0x14001a4d0
   140002f8c:	mov    QWORD PTR [rbx],rax
   140002f8f:	mov    BYTE PTR [rbx+0x88],0x0
   140002f96:	mov    BYTE PTR [rbx+0x81],0x0
   140002f9d:	mov    rcx,rbx
   140002fa0:	call   QWORD PTR [rip+0x16132]        # 0x1400190d8
   140002fa6:	test   rdi,rdi
   140002fa9:	je     0x140002fcb
   140002fab:	lea    rax,[rdi+0x10]
   140002faf:	lea    rcx,[rdi+0x8]
   140002fb3:	mov    QWORD PTR [rbx+0x18],rax
   140002fb7:	mov    QWORD PTR [rbx+0x20],rax
   140002fbb:	mov    QWORD PTR [rbx+0x38],rdi
   140002fbf:	mov    QWORD PTR [rbx+0x40],rdi
   140002fc3:	mov    QWORD PTR [rbx+0x50],rcx
   140002fc7:	mov    QWORD PTR [rbx+0x58],rcx
   140002fcb:	mov    QWORD PTR [rbx+0x90],rdi
   140002fd2:	mov    eax,DWORD PTR [rip+0x1e6b8]        # 0x140021690
   140002fd8:	mov    DWORD PTR [rbx+0x84],eax
   140002fde:	mov    QWORD PTR [rbx+0x78],0x0
   140002fe6:	mov    rax,rbx
   140002fe9:	mov    rbx,QWORD PTR [rsp+0x48]
   140002fee:	add    rsp,0x30
   140002ff2:	pop    rdi
   140002ff3:	ret    
   140002ff4:	int3   
   140002ff5:	int3   
   140002ff6:	int3   
   140002ff7:	int3   
   140002ff8:	int3   
   140002ff9:	int3   
   140002ffa:	int3   
   140002ffb:	int3   
   140002ffc:	int3   
   140002ffd:	int3   
   140002ffe:	int3   
   140002fff:	int3   
   140003000:	mov    QWORD PTR [rsp+0x8],rcx
   140003005:	push   rbx
   140003006:	push   rbp
   140003007:	push   rsi
   140003008:	push   rdi
   140003009:	push   r14
   14000300b:	sub    rsp,0x30
   14000300f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003018:	mov    r14d,r9d
   14000301b:	mov    ebp,r8d
   14000301e:	mov    rdi,rdx
   140003021:	mov    rbx,rcx
   140003024:	mov    DWORD PTR [rsp+0x70],0x0
   14000302c:	cmp    DWORD PTR [rsp+0x80],0x0
   140003034:	je     0x140003064
   140003036:	lea    rax,[rip+0x17b8b]        # 0x14001abc8
   14000303d:	mov    QWORD PTR [rcx],rax
   140003040:	mov    rax,QWORD PTR [rip+0x16159]        # 0x1400191a0
   140003047:	mov    QWORD PTR [rcx+0xb0],rax
   14000304e:	mov    rax,QWORD PTR [rip+0x16153]        # 0x1400191a8
   140003055:	mov    QWORD PTR [rcx+0xb0],rax
   14000305c:	mov    DWORD PTR [rsp+0x70],0x1
   140003064:	lea    rsi,[rcx+0x10]
   140003068:	xor    r9d,r9d
   14000306b:	xor    r8d,r8d
   14000306e:	mov    rdx,rsi
   140003071:	call   QWORD PTR [rip+0x160e9]        # 0x140019160
   140003077:	nop
   140003078:	mov    rax,QWORD PTR [rbx]
   14000307b:	movsxd rcx,DWORD PTR [rax+0x4]
   14000307f:	lea    rax,[rip+0x17b3a]        # 0x14001abc0
   140003086:	mov    QWORD PTR [rcx+rbx*1],rax
   14000308a:	mov    rax,QWORD PTR [rbx]
   14000308d:	movsxd rcx,DWORD PTR [rax+0x4]
   140003091:	lea    edx,[rcx-0xb0]
   140003097:	mov    DWORD PTR [rcx+rbx*1-0x4],edx
   14000309b:	mov    QWORD PTR [rsp+0x68],rsi
   1400030a0:	mov    rcx,rsi
   1400030a3:	call   QWORD PTR [rip+0x15fff]        # 0x1400190a8
   1400030a9:	nop
   1400030aa:	lea    rax,[rip+0x1741f]        # 0x14001a4d0
   1400030b1:	mov    QWORD PTR [rsi],rax
   1400030b4:	mov    BYTE PTR [rsi+0x88],0x0
   1400030bb:	mov    BYTE PTR [rsi+0x81],0x0
   1400030c2:	mov    rcx,rsi
   1400030c5:	call   QWORD PTR [rip+0x1600d]        # 0x1400190d8
   1400030cb:	mov    QWORD PTR [rsi+0x90],0x0
   1400030d6:	mov    eax,DWORD PTR [rip+0x1e5b4]        # 0x140021690
   1400030dc:	mov    DWORD PTR [rsi+0x84],eax
   1400030e2:	mov    QWORD PTR [rsi+0x78],0x0
   1400030ea:	cmp    QWORD PTR [rdi+0x18],0x10
   1400030ef:	jb     0x1400030f4
   1400030f1:	mov    rdi,QWORD PTR [rdi]
   1400030f4:	or     ebp,0x1
   1400030f7:	mov    r9d,r14d
   1400030fa:	mov    r8d,ebp
   1400030fd:	mov    rdx,rdi
   140003100:	mov    rcx,rsi
   140003103:	call   0x1400084f0
   140003108:	test   rax,rax
   14000310b:	jne    0x140003125
   14000310d:	mov    rax,QWORD PTR [rbx]
   140003110:	movsxd rcx,DWORD PTR [rax+0x4]
   140003114:	add    rcx,rbx
   140003117:	xor    r8d,r8d
   14000311a:	lea    edx,[r8+0x2]
   14000311e:	call   QWORD PTR [rip+0x15fcc]        # 0x1400190f0
   140003124:	nop
   140003125:	mov    rax,rbx
   140003128:	add    rsp,0x30
   14000312c:	pop    r14
   14000312e:	pop    rdi
   14000312f:	pop    rsi
   140003130:	pop    rbp
   140003131:	pop    rbx
   140003132:	ret    
   140003133:	int3   
   140003134:	int3   
   140003135:	int3   
   140003136:	int3   
   140003137:	int3   
   140003138:	int3   
   140003139:	int3   
   14000313a:	int3   
   14000313b:	int3   
   14000313c:	int3   
   14000313d:	int3   
   14000313e:	int3   
   14000313f:	int3   
   140003140:	mov    QWORD PTR [rsp+0x8],rcx
   140003145:	push   rbx
   140003146:	push   rbp
   140003147:	push   rsi
   140003148:	push   rdi
   140003149:	push   r14
   14000314b:	sub    rsp,0x30
   14000314f:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003158:	mov    r14d,r9d
   14000315b:	mov    ebp,r8d
   14000315e:	mov    rdi,rdx
   140003161:	mov    rbx,rcx
   140003164:	mov    DWORD PTR [rsp+0x70],0x0
   14000316c:	cmp    DWORD PTR [rsp+0x80],0x0
   140003174:	je     0x1400031a4
   140003176:	lea    rax,[rip+0x173db]        # 0x14001a558
   14000317d:	mov    QWORD PTR [rcx],rax
   140003180:	mov    rax,QWORD PTR [rip+0x16019]        # 0x1400191a0
   140003187:	mov    QWORD PTR [rcx+0xa8],rax
   14000318e:	mov    rax,QWORD PTR [rip+0x16013]        # 0x1400191a8
   140003195:	mov    QWORD PTR [rcx+0xa8],rax
   14000319c:	mov    DWORD PTR [rsp+0x70],0x1
   1400031a4:	lea    rsi,[rcx+0x8]
   1400031a8:	xor    r9d,r9d
   1400031ab:	xor    r8d,r8d
   1400031ae:	mov    rdx,rsi
   1400031b1:	call   QWORD PTR [rip+0x15f51]        # 0x140019108
   1400031b7:	nop
   1400031b8:	mov    rax,QWORD PTR [rbx]
   1400031bb:	movsxd rcx,DWORD PTR [rax+0x4]
   1400031bf:	lea    rax,[rip+0x1738a]        # 0x14001a550
   1400031c6:	mov    QWORD PTR [rcx+rbx*1],rax
   1400031ca:	mov    rax,QWORD PTR [rbx]
   1400031cd:	movsxd rcx,DWORD PTR [rax+0x4]
   1400031d1:	lea    edx,[rcx-0xa8]
   1400031d7:	mov    DWORD PTR [rcx+rbx*1-0x4],edx
   1400031db:	mov    QWORD PTR [rsp+0x68],rsi
   1400031e0:	mov    rcx,rsi
   1400031e3:	call   QWORD PTR [rip+0x15ebf]        # 0x1400190a8
   1400031e9:	nop
   1400031ea:	lea    rax,[rip+0x172df]        # 0x14001a4d0
   1400031f1:	mov    QWORD PTR [rsi],rax
   1400031f4:	mov    BYTE PTR [rsi+0x88],0x0
   1400031fb:	mov    BYTE PTR [rsi+0x81],0x0
   140003202:	mov    rcx,rsi
   140003205:	call   QWORD PTR [rip+0x15ecd]        # 0x1400190d8
   14000320b:	mov    QWORD PTR [rsi+0x90],0x0
   140003216:	mov    eax,DWORD PTR [rip+0x1e474]        # 0x140021690
   14000321c:	mov    DWORD PTR [rsi+0x84],eax
   140003222:	mov    QWORD PTR [rsi+0x78],0x0
   14000322a:	cmp    QWORD PTR [rdi+0x18],0x10
   14000322f:	jb     0x140003234
   140003231:	mov    rdi,QWORD PTR [rdi]
   140003234:	or     ebp,0x2
   140003237:	mov    r9d,r14d
   14000323a:	mov    r8d,ebp
   14000323d:	mov    rdx,rdi
   140003240:	mov    rcx,rsi
   140003243:	call   0x1400084f0
   140003248:	test   rax,rax
   14000324b:	jne    0x140003265
   14000324d:	mov    rax,QWORD PTR [rbx]
   140003250:	movsxd rcx,DWORD PTR [rax+0x4]
   140003254:	add    rcx,rbx
   140003257:	xor    r8d,r8d
   14000325a:	lea    edx,[r8+0x2]
   14000325e:	call   QWORD PTR [rip+0x15e8c]        # 0x1400190f0
   140003264:	nop
   140003265:	mov    rax,rbx
   140003268:	add    rsp,0x30
   14000326c:	pop    r14
   14000326e:	pop    rdi
   14000326f:	pop    rsi
   140003270:	pop    rbp
   140003271:	pop    rbx
   140003272:	ret    
   140003273:	int3   
   140003274:	int3   
   140003275:	int3   
   140003276:	int3   
   140003277:	int3   
   140003278:	int3   
   140003279:	int3   
   14000327a:	int3   
   14000327b:	int3   
   14000327c:	int3   
   14000327d:	int3   
   14000327e:	int3   
   14000327f:	int3   
   140003280:	mov    QWORD PTR [rsp+0x8],rbx
   140003285:	push   rdi
   140003286:	sub    rsp,0x20
   14000328a:	mov    QWORD PTR [rcx+0x18],0xf
   140003292:	mov    QWORD PTR [rcx+0x10],0x0
   14000329a:	mov    BYTE PTR [rcx],0x0
   14000329d:	cmp    QWORD PTR [rdx+0x18],0x10
   1400032a2:	mov    rbx,rdx
   1400032a5:	mov    rdi,rcx
   1400032a8:	jae    0x1400032bb
   1400032aa:	mov    r8,QWORD PTR [rdx+0x10]
   1400032ae:	inc    r8
   1400032b1:	je     0x1400032c8
   1400032b3:	call   QWORD PTR [rip+0x15fbf]        # 0x140019278
   1400032b9:	jmp    0x1400032c8
   1400032bb:	mov    rax,QWORD PTR [rdx]
   1400032be:	mov    QWORD PTR [rcx],rax
   1400032c1:	mov    QWORD PTR [rdx],0x0
   1400032c8:	mov    rax,QWORD PTR [rbx+0x10]
   1400032cc:	mov    QWORD PTR [rdi+0x10],rax
   1400032d0:	mov    rax,QWORD PTR [rbx+0x18]
   1400032d4:	mov    QWORD PTR [rdi+0x18],rax
   1400032d8:	mov    QWORD PTR [rbx+0x18],0xf
   1400032e0:	mov    QWORD PTR [rbx+0x10],0x0
   1400032e8:	mov    BYTE PTR [rbx],0x0
   1400032eb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032f0:	mov    rax,rdi
   1400032f3:	add    rsp,0x20
   1400032f7:	pop    rdi
   1400032f8:	ret    
   1400032f9:	int3   
   1400032fa:	int3   
   1400032fb:	int3   
   1400032fc:	int3   
   1400032fd:	int3   
   1400032fe:	int3   
   1400032ff:	int3   
   140003300:	rex push rbx
   140003302:	sub    rsp,0x20
   140003306:	mov    QWORD PTR [rcx+0x18],0xf
   14000330e:	mov    QWORD PTR [rcx+0x10],0x0
   140003316:	or     r9,0xffffffffffffffff
   14000331a:	xor    r8d,r8d
   14000331d:	mov    rbx,rcx
   140003320:	mov    BYTE PTR [rcx],0x0
   140003323:	call   0x140006640
   140003328:	mov    rax,rbx
   14000332b:	add    rsp,0x20
   14000332f:	pop    rbx
   140003330:	ret    
   140003331:	int3   
   140003332:	int3   
   140003333:	int3   
   140003334:	int3   
   140003335:	int3   
   140003336:	int3   
   140003337:	int3   
   140003338:	int3   
   140003339:	int3   
   14000333a:	int3   
   14000333b:	int3   
   14000333c:	int3   
   14000333d:	int3   
   14000333e:	int3   
   14000333f:	int3   
   140003340:	rex push rbx
   140003342:	sub    rsp,0x20
   140003346:	mov    QWORD PTR [rcx+0x18],0xf
   14000334e:	mov    QWORD PTR [rcx+0x10],0x0
   140003356:	mov    rbx,rcx
   140003359:	mov    BYTE PTR [rcx],0x0
   14000335c:	call   0x140006640
   140003361:	mov    rax,rbx
   140003364:	add    rsp,0x20
   140003368:	pop    rbx
   140003369:	ret    
   14000336a:	int3   
   14000336b:	int3   
   14000336c:	int3   
   14000336d:	int3   
   14000336e:	int3   
   14000336f:	int3   
   140003370:	rex push rbx
   140003372:	sub    rsp,0x20
   140003376:	xor    r8d,r8d
   140003379:	mov    QWORD PTR [rcx+0x18],0xf
   140003381:	mov    rbx,rcx
   140003384:	mov    QWORD PTR [rcx+0x10],r8
   140003388:	mov    BYTE PTR [rcx],r8b
   14000338b:	cmp    BYTE PTR [rdx],r8b
   14000338e:	je     0x14000339e
   140003390:	or     r8,0xffffffffffffffff
   140003394:	inc    r8
   140003397:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000339c:	jne    0x140003394
   14000339e:	call   0x140006790
   1400033a3:	mov    rax,rbx
   1400033a6:	add    rsp,0x20
   1400033aa:	pop    rbx
   1400033ab:	ret    
   1400033ac:	int3   
   1400033ad:	int3   
   1400033ae:	int3   
   1400033af:	int3   
   1400033b0:	mov    QWORD PTR [rcx+0x18],0xf
   1400033b8:	mov    QWORD PTR [rcx+0x10],0x0
   1400033c0:	mov    rax,rcx
   1400033c3:	mov    BYTE PTR [rcx],0x0
   1400033c6:	ret    
   1400033c7:	int3   
   1400033c8:	int3   
   1400033c9:	int3   
   1400033ca:	int3   
   1400033cb:	int3   
   1400033cc:	int3   
   1400033cd:	int3   
   1400033ce:	int3   
   1400033cf:	int3   
   1400033d0:	rex push rbx
   1400033d2:	sub    rsp,0x20
   1400033d6:	mov    QWORD PTR [rcx+0x18],0xf
   1400033de:	mov    QWORD PTR [rcx+0x10],0x0
   1400033e6:	mov    rbx,rcx
   1400033e9:	mov    BYTE PTR [rcx],0x0
   1400033ec:	call   0x1400068c0
   1400033f1:	mov    rax,rbx
   1400033f4:	add    rsp,0x20
   1400033f8:	pop    rbx
   1400033f9:	ret    
   1400033fa:	int3   
   1400033fb:	int3   
   1400033fc:	int3   
   1400033fd:	int3   
   1400033fe:	int3   
   1400033ff:	int3   
   140003400:	mov    rax,rcx
   140003403:	ret    
   140003404:	int3   
   140003405:	int3   
   140003406:	int3   
   140003407:	int3   
   140003408:	int3   
   140003409:	int3   
   14000340a:	int3   
   14000340b:	int3   
   14000340c:	int3   
   14000340d:	int3   
   14000340e:	int3   
   14000340f:	int3   
   140003410:	mov    rax,rcx
   140003413:	ret    
   140003414:	int3   
   140003415:	int3   
   140003416:	int3   
   140003417:	int3   
   140003418:	int3   
   140003419:	int3   
   14000341a:	int3   
   14000341b:	int3   
   14000341c:	int3   
   14000341d:	int3   
   14000341e:	int3   
   14000341f:	int3   
   140003420:	mov    rax,rcx
   140003423:	ret    
   140003424:	int3   
   140003425:	int3   
   140003426:	int3   
   140003427:	int3   
   140003428:	int3   
   140003429:	int3   
   14000342a:	int3   
   14000342b:	int3   
   14000342c:	int3   
   14000342d:	int3   
   14000342e:	int3   
   14000342f:	int3   
   140003430:	mov    QWORD PTR [rcx],0x0
   140003437:	mov    QWORD PTR [rcx+0x8],r8
   14000343b:	mov    DWORD PTR [rcx+0x10],edx
   14000343e:	mov    rax,rcx
   140003441:	ret    
   140003442:	int3   
   140003443:	int3   
   140003444:	int3   
   140003445:	int3   
   140003446:	int3   
   140003447:	int3   
   140003448:	int3   
   140003449:	int3   
   14000344a:	int3   
   14000344b:	int3   
   14000344c:	int3   
   14000344d:	int3   
   14000344e:	int3   
   14000344f:	int3   
   140003450:	xor    eax,eax
   140003452:	mov    QWORD PTR [rcx],rdx
   140003455:	mov    QWORD PTR [rcx+0x8],rax
   140003459:	mov    DWORD PTR [rcx+0x10],eax
   14000345c:	mov    rax,rcx
   14000345f:	ret    
   140003460:	rex push rbx
   140003462:	sub    rsp,0x20
   140003466:	xor    eax,eax
   140003468:	mov    rbx,rcx
   14000346b:	mov    QWORD PTR [rcx],rax
   14000346e:	mov    QWORD PTR [rcx+0x8],rax
   140003472:	call   0x140005560
   140003477:	mov    QWORD PTR [rbx],rax
   14000347a:	mov    rax,rbx
   14000347d:	add    rsp,0x20
   140003481:	pop    rbx
   140003482:	ret    
   140003483:	int3   
   140003484:	int3   
   140003485:	int3   
   140003486:	int3   
   140003487:	int3   
   140003488:	int3   
   140003489:	int3   
   14000348a:	int3   
   14000348b:	int3   
   14000348c:	int3   
   14000348d:	int3   
   14000348e:	int3   
   14000348f:	int3   
   140003490:	mov    QWORD PTR [rcx],rdx
   140003493:	mov    rax,rcx
   140003496:	ret    
   140003497:	int3   
   140003498:	int3   
   140003499:	int3   
   14000349a:	int3   
   14000349b:	int3   
   14000349c:	int3   
   14000349d:	int3   
   14000349e:	int3   
   14000349f:	int3   
   1400034a0:	mov    QWORD PTR [rcx],rdx
   1400034a3:	mov    rax,rcx
   1400034a6:	ret    
   1400034a7:	int3   
   1400034a8:	int3   
   1400034a9:	int3   
   1400034aa:	int3   
   1400034ab:	int3   
   1400034ac:	int3   
   1400034ad:	int3   
   1400034ae:	int3   
   1400034af:	int3   
   1400034b0:	mov    QWORD PTR [rcx],rdx
   1400034b3:	mov    rax,rcx
   1400034b6:	ret    
   1400034b7:	int3   
   1400034b8:	int3   
   1400034b9:	int3   
   1400034ba:	int3   
   1400034bb:	int3   
   1400034bc:	int3   
   1400034bd:	int3   
   1400034be:	int3   
   1400034bf:	int3   
   1400034c0:	lea    rax,[rip+0x16f19]        # 0x14001a3e0
   1400034c7:	mov    QWORD PTR [rcx],rax
   1400034ca:	mov    rax,rcx
   1400034cd:	ret    
   1400034ce:	int3   
   1400034cf:	int3   
   1400034d0:	lea    rax,[rip+0x16f29]        # 0x14001a400
   1400034d7:	mov    QWORD PTR [rcx+0x8],rdx
   1400034db:	mov    QWORD PTR [rcx],rax
   1400034de:	mov    rax,rcx
   1400034e1:	ret    
   1400034e2:	int3   
   1400034e3:	int3   
   1400034e4:	int3   
   1400034e5:	int3   
   1400034e6:	int3   
   1400034e7:	int3   
   1400034e8:	int3   
   1400034e9:	int3   
   1400034ea:	int3   
   1400034eb:	int3   
   1400034ec:	int3   
   1400034ed:	int3   
   1400034ee:	int3   
   1400034ef:	int3   
   1400034f0:	lea    rax,[rip+0x16f49]        # 0x14001a440
   1400034f7:	mov    QWORD PTR [rcx],rax
   1400034fa:	mov    rax,rcx
   1400034fd:	ret    
   1400034fe:	int3   
   1400034ff:	int3   
   140003500:	xor    eax,eax
   140003502:	mov    QWORD PTR [rcx],rdx
   140003505:	mov    DWORD PTR [rcx+0x20],0xffffffff
   14000350c:	mov    QWORD PTR [rcx+0x8],rax
   140003510:	mov    QWORD PTR [rcx+0x10],rax
   140003514:	mov    QWORD PTR [rcx+0x18],rax
   140003518:	mov    DWORD PTR [rcx+0x24],eax
   14000351b:	mov    QWORD PTR [rcx+0x2c],rax
   14000351f:	mov    DWORD PTR [rcx+0x34],eax
   140003522:	mov    rax,rcx
   140003525:	mov    BYTE PTR [rcx+0x38],0x1
   140003529:	ret    
   14000352a:	int3   
   14000352b:	int3   
   14000352c:	int3   
   14000352d:	int3   
   14000352e:	int3   
   14000352f:	int3   
   140003530:	mov    eax,0x2
   140003535:	sub    r8d,edx
   140003538:	mov    DWORD PTR [rcx+0xc0],edx
   14000353e:	cmp    r8d,eax
   140003541:	mov    DWORD PTR [rcx+0xc8],0x0
   14000354b:	mov    DWORD PTR [rcx+0xcc],0xf
   140003555:	cmovl  r8d,eax
   140003559:	mov    rax,rcx
   14000355c:	mov    DWORD PTR [rcx+0xc4],r8d
   140003563:	ret    
   140003564:	int3   
   140003565:	int3   
   140003566:	int3   
   140003567:	int3   
   140003568:	int3   
   140003569:	int3   
   14000356a:	int3   
   14000356b:	int3   
   14000356c:	int3   
   14000356d:	int3   
   14000356e:	int3   
   14000356f:	int3   
   140003570:	mov    rax,rcx
   140003573:	mov    QWORD PTR [rcx+0x10],rdx
   140003577:	mov    QWORD PTR [rcx+0x18],r8
   14000357b:	or     rax,0x1
   14000357f:	mov    QWORD PTR [rcx+0x20],r9
   140003583:	mov    DWORD PTR [rcx+0x28],0x0
   14000358a:	mov    QWORD PTR [rcx+0x8],rax
   14000358e:	mov    QWORD PTR [rcx],rax
   140003591:	test   r8,r8
   140003594:	je     0x1400035ca
   140003596:	mov    DWORD PTR [rcx+0x28],0x1
   14000359d:	cmp    BYTE PTR [r8],0x2d
   1400035a1:	jne    0x1400035ca
   1400035a3:	cmp    BYTE PTR [r8+0x1],0x0
   1400035a8:	je     0x1400035ca
   1400035aa:	nop    WORD PTR [rax+rax*1+0x0]
   1400035b0:	movsxd rdx,DWORD PTR [rcx+0x28]
   1400035b4:	cmp    BYTE PTR [rdx+r8*1],0x3d
   1400035b9:	je     0x1400035ca
   1400035bb:	lea    eax,[rdx+0x1]
   1400035be:	mov    DWORD PTR [rcx+0x28],eax
   1400035c1:	cdqe   
   1400035c3:	cmp    BYTE PTR [rax+r8*1],0x0
   1400035c8:	jne    0x1400035b0
   1400035ca:	mov    rax,rcx
   1400035cd:	ret    
   1400035ce:	int3   
   1400035cf:	int3   
   1400035d0:	xor    eax,eax
   1400035d2:	mov    QWORD PTR [rcx+0x10],rax
   1400035d6:	mov    QWORD PTR [rcx+0x18],rax
   1400035da:	mov    QWORD PTR [rcx+0x20],rax
   1400035de:	mov    DWORD PTR [rcx+0x28],eax
   1400035e1:	mov    rax,rcx
   1400035e4:	or     rax,0x1
   1400035e8:	mov    QWORD PTR [rcx+0x8],rax
   1400035ec:	mov    QWORD PTR [rcx],rax
   1400035ef:	mov    rax,rcx
   1400035f2:	ret    
   1400035f3:	int3   
   1400035f4:	int3   
   1400035f5:	int3   
   1400035f6:	int3   
   1400035f7:	int3   
   1400035f8:	int3   
   1400035f9:	int3   
   1400035fa:	int3   
   1400035fb:	int3   
   1400035fc:	int3   
   1400035fd:	int3   
   1400035fe:	int3   
   1400035ff:	int3   
   140003600:	rex push rbx
   140003602:	sub    rsp,0x50
   140003606:	xor    eax,eax
   140003608:	mov    rbx,rcx
   14000360b:	mov    QWORD PTR [rcx],rax
   14000360e:	mov    QWORD PTR [rcx+0x8],rax
   140003612:	mov    BYTE PTR [rcx+0x10],al
   140003615:	mov    eax,DWORD PTR [rsp+0xa0]
   14000361c:	mov    DWORD PTR [rsp+0x48],eax
   140003620:	movzx  eax,BYTE PTR [rsp+0x98]
   140003628:	mov    BYTE PTR [rsp+0x40],al
   14000362c:	mov    eax,DWORD PTR [rsp+0x90]
   140003633:	mov    DWORD PTR [rsp+0x38],eax
   140003637:	mov    rax,QWORD PTR [rsp+0x88]
   14000363f:	mov    QWORD PTR [rsp+0x30],rax
   140003644:	mov    rax,QWORD PTR [rsp+0x80]
   14000364c:	mov    QWORD PTR [rsp+0x28],rax
   140003651:	mov    QWORD PTR [rsp+0x20],r9
   140003656:	mov    r9d,r8d
   140003659:	mov    r8,rdx
   14000365c:	xor    edx,edx
   14000365e:	call   0x140008950
   140003663:	mov    rax,rbx
   140003666:	add    rsp,0x50
   14000366a:	pop    rbx
   14000366b:	ret    
   14000366c:	int3   
   14000366d:	int3   
   14000366e:	int3   
   14000366f:	int3   
   140003670:	rex push rbx
   140003672:	sub    rsp,0x40
   140003676:	movzx  eax,BYTE PTR [rsp+0x78]
   14000367b:	mov    rbx,rcx
   14000367e:	mov    DWORD PTR [rcx],0x1
   140003684:	mov    BYTE PTR [rsp+0x30],al
   140003688:	mov    eax,DWORD PTR [rsp+0x70]
   14000368c:	mov    DWORD PTR [rcx+0x4],0x1
   140003693:	mov    DWORD PTR [rsp+0x28],eax
   140003697:	mov    QWORD PTR [rsp+0x20],r9
   14000369c:	mov    r9d,r8d
   14000369f:	mov    r8,rdx
   1400036a2:	xor    edx,edx
   1400036a4:	call   0x140006080
   1400036a9:	mov    rax,rbx
   1400036ac:	add    rsp,0x40
   1400036b0:	pop    rbx
   1400036b1:	ret    
   1400036b2:	int3   
   1400036b3:	int3   
   1400036b4:	int3   
   1400036b5:	int3   
   1400036b6:	int3   
   1400036b7:	int3   
   1400036b8:	int3   
   1400036b9:	int3   
   1400036ba:	int3   
   1400036bb:	int3   
   1400036bc:	int3   
   1400036bd:	int3   
   1400036be:	int3   
   1400036bf:	int3   
   1400036c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400036c5:	movsxd r11,DWORD PTR [rsp+0x28]
   1400036ca:	lea    rax,[rip+0x16d4f]        # 0x14001a420
   1400036d1:	mov    QWORD PTR [rcx+0x10],r8
   1400036d5:	xor    r10d,r10d
   1400036d8:	mov    QWORD PTR [rcx],rax
   1400036db:	mov    QWORD PTR [rcx+0x8],rdx
   1400036df:	mov    DWORD PTR [rcx+0x20],r11d
   1400036e3:	mov    QWORD PTR [rcx+0x18],r9
   1400036e7:	xor    r8d,r8d
   1400036ea:	nop    WORD PTR [rax+rax*1+0x0]
   1400036f0:	test   r11d,r11d
   1400036f3:	js     0x1400036fa
   1400036f5:	cmp    r8,r11
   1400036f8:	jge    0x140003715
   1400036fa:	xor    eax,eax
   1400036fc:	cmp    QWORD PTR [r9+0x10],rax
   140003700:	cmovne rax,r9
   140003704:	test   rax,rax
   140003707:	je     0x140003715
   140003709:	inc    r10d
   14000370c:	inc    r8
   14000370f:	add    r9,0x30
   140003713:	jmp    0x1400036f0
   140003715:	mov    rbx,QWORD PTR [rsp+0x8]
   14000371a:	mov    rax,rcx
   14000371d:	mov    DWORD PTR [rdx],r10d
   140003720:	ret    
   140003721:	int3   
   140003722:	int3   
   140003723:	int3   
   140003724:	int3   
   140003725:	int3   
   140003726:	int3   
   140003727:	int3   
   140003728:	int3   
   140003729:	int3   
   14000372a:	int3   
   14000372b:	int3   
   14000372c:	int3   
   14000372d:	int3   
   14000372e:	int3   
   14000372f:	int3   
   140003730:	mov    rax,rsp
   140003733:	mov    QWORD PTR [rax+0x8],rcx
   140003737:	push   rsi
   140003738:	push   rdi
   140003739:	push   r14
   14000373b:	sub    rsp,0x170
   140003742:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000374b:	mov    QWORD PTR [rax+0x10],rbx
   14000374f:	mov    QWORD PTR [rax+0x18],rbp
   140003753:	mov    rdi,r9
   140003756:	mov    ebx,r8d
   140003759:	mov    r14,rcx
   14000375c:	lea    rax,[rip+0x16d35]        # 0x14001a498
   140003763:	mov    QWORD PTR [rcx],rax
   140003766:	lea    rsi,[rcx+0x8]
   14000376a:	mov    QWORD PTR [rsi+0x18],0xf
   140003772:	xor    ebp,ebp
   140003774:	mov    QWORD PTR [rsi+0x10],rbp
   140003778:	mov    BYTE PTR [rsi],bpl
   14000377b:	or     r9,0xffffffffffffffff
   14000377f:	xor    r8d,r8d
   140003782:	mov    rcx,rsi
   140003785:	call   0x140006640
   14000378a:	nop
   14000378b:	mov    DWORD PTR [r14+0x28],ebx
   14000378f:	lea    rcx,[r14+0x30]
   140003793:	mov    QWORD PTR [rcx+0x18],0xf
   14000379b:	mov    QWORD PTR [rcx+0x10],rbp
   14000379f:	mov    BYTE PTR [rcx],bpl
   1400037a2:	or     r9,0xffffffffffffffff
   1400037a6:	xor    r8d,r8d
   1400037a9:	mov    rdx,rdi
   1400037ac:	call   0x140006640
   1400037b1:	nop
   1400037b2:	lea    ecx,[rbp+0x68]
   1400037b5:	call   0x140017168
   1400037ba:	mov    rbx,rax
   1400037bd:	test   rax,rax
   1400037c0:	je     0x1400037d2
   1400037c2:	xor    edx,edx
   1400037c4:	lea    r8d,[rbp+0x68]
   1400037c8:	mov    rcx,rax
   1400037cb:	call   0x14001734c
   1400037d0:	jmp    0x1400037d5
   1400037d2:	mov    rbx,rbp
   1400037d5:	mov    QWORD PTR [r14+0x50],rbx
   1400037d9:	mov    QWORD PTR [r14+0x58],rbp
   1400037dd:	mov    QWORD PTR [r14+0x60],rbp
   1400037e1:	lea    rcx,[r14+0x58]
   1400037e5:	call   0x140005560
   1400037ea:	mov    QWORD PTR [r14+0x58],rax
   1400037ee:	mov    QWORD PTR [r14+0x68],rbp
   1400037f2:	mov    QWORD PTR [r14+0x70],rbp
   1400037f6:	lea    rcx,[r14+0x68]
   1400037fa:	call   0x140005560
   1400037ff:	mov    QWORD PTR [r14+0x68],rax
   140003803:	lea    rdx,[rip+0x16c9e]        # 0x14001a4a8
   14000380a:	mov    rcx,QWORD PTR [rip+0x159af]        # 0x1400191c0
   140003811:	call   0x1400014f0
   140003816:	mov    rcx,rax
   140003819:	mov    rdx,rsi
   14000381c:	call   0x140001320
   140003821:	mov    rcx,rax
   140003824:	lea    rdx,[rip+0x16c75]        # 0x14001a4a0
   14000382b:	call   0x1400014f0
   140003830:	mov    rcx,rax
   140003833:	lea    rdx,[rip+0xfffffffffffff316]        # 0x140002b50
   14000383a:	call   QWORD PTR [rip+0x158e0]        # 0x140019120
   140003840:	mov    DWORD PTR [rsp+0x20],0x1
   140003848:	mov    r9d,0x40
   14000384e:	lea    r8d,[r9-0x30]
   140003852:	mov    rdx,rsi
   140003855:	lea    rcx,[rsp+0x60]
   14000385a:	call   0x140003140
   14000385f:	nop
   140003860:	lea    rcx,[rsp+0x68]
   140003865:	call   0x140006b30
   14000386a:	test   rax,rax
   14000386d:	jne    0x14000388a
   14000386f:	mov    rax,QWORD PTR [rsp+0x60]
   140003874:	movsxd rcx,DWORD PTR [rax+0x4]
   140003878:	lea    rcx,[rsp+rcx*1+0x60]
   14000387d:	xor    r8d,r8d
   140003880:	lea    edx,[r8+0x2]
   140003884:	call   QWORD PTR [rip+0x15866]        # 0x1400190f0
   14000388a:	cmp    QWORD PTR [rsi+0x18],0x10
   14000388f:	jb     0x140003894
   140003891:	mov    rsi,QWORD PTR [rsi]
   140003894:	xor    r8d,r8d
   140003897:	mov    rdx,rsi
   14000389a:	mov    rcx,QWORD PTR [r14+0x50]
   14000389e:	call   0x140011160
   1400038a3:	test   eax,eax
   1400038a5:	jne    0x1400038e1
   1400038a7:	lea    rax,[rip+0x16cb2]        # 0x14001a560
   1400038ae:	mov    QWORD PTR [rsp+0x30],rax
   1400038b3:	lea    rdx,[rsp+0x30]
   1400038b8:	lea    rcx,[rsp+0x40]
   1400038bd:	call   QWORD PTR [rip+0x159c5]        # 0x140019288
   1400038c3:	lea    rax,[rip+0x169d6]        # 0x14001a2a0
   1400038ca:	mov    QWORD PTR [rsp+0x40],rax
   1400038cf:	lea    rdx,[rip+0x1bc52]        # 0x14001f528
   1400038d6:	lea    rcx,[rsp+0x40]
   1400038db:	call   0x140017334
   1400038e0:	nop
   1400038e1:	mov    rax,QWORD PTR [rsp+0x60]
   1400038e6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400038ea:	lea    rax,[rip+0x16c5f]        # 0x14001a550
   1400038f1:	mov    QWORD PTR [rsp+rcx*1+0x60],rax
   1400038f6:	mov    rax,QWORD PTR [rsp+0x60]
   1400038fb:	movsxd rcx,DWORD PTR [rax+0x4]
   1400038ff:	lea    edx,[rcx-0xa8]
   140003905:	mov    DWORD PTR [rsp+rcx*1+0x5c],edx
   140003909:	lea    rcx,[rsp+0x68]
   14000390e:	call   0x140003b60
   140003913:	lea    rcx,[rsp+0x70]
   140003918:	call   QWORD PTR [rip+0x157f2]        # 0x140019110
   14000391e:	lea    rcx,[rsp+0x108]
   140003926:	call   QWORD PTR [rip+0x157b4]        # 0x1400190e0
   14000392c:	nop
   14000392d:	mov    rax,r14
   140003930:	lea    r11,[rsp+0x170]
   140003938:	mov    rbx,QWORD PTR [r11+0x28]
   14000393c:	mov    rbp,QWORD PTR [r11+0x30]
   140003940:	mov    rsp,r11
   140003943:	pop    r14
   140003945:	pop    rdi
   140003946:	pop    rsi
   140003947:	ret    
   140003948:	int3   
   140003949:	int3   
   14000394a:	int3   
   14000394b:	int3   
   14000394c:	int3   
   14000394d:	int3   
   14000394e:	int3   
   14000394f:	int3   
   140003950:	lea    rax,[rip+0x16999]        # 0x14001a2f0
   140003957:	mov    QWORD PTR [rcx],rax
   14000395a:	mov    rax,rcx
   14000395d:	ret    
   14000395e:	int3   
   14000395f:	int3   
   140003960:	lea    rax,[rip+0x169d9]        # 0x14001a340
   140003967:	mov    QWORD PTR [rcx],rax
   14000396a:	mov    rax,rcx
   14000396d:	ret    
   14000396e:	int3   
   14000396f:	int3   
   140003970:	rex push rbx
   140003972:	sub    rsp,0x20
   140003976:	mov    QWORD PTR [rcx],rdx
   140003979:	mov    rax,QWORD PTR [rdx]
   14000397c:	mov    rbx,rcx
   14000397f:	movsxd r8,DWORD PTR [rax+0x4]
   140003983:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140003988:	test   rcx,rcx
   14000398b:	je     0x140003993
   14000398d:	mov    rax,QWORD PTR [rcx]
   140003990:	call   QWORD PTR [rax+0x8]
   140003993:	mov    rax,rbx
   140003996:	add    rsp,0x20
   14000399a:	pop    rbx
   14000399b:	ret    
   14000399c:	int3   
   14000399d:	int3   
   14000399e:	int3   
   14000399f:	int3   
   1400039a0:	lea    rax,[rip+0x169f9]        # 0x14001a3a0
   1400039a7:	mov    QWORD PTR [rcx],rax
   1400039aa:	mov    rax,rcx
   1400039ad:	ret    
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	lea    rax,[rip+0x16901]        # 0x14001a2b8
   1400039b7:	mov    QWORD PTR [rcx],rax
   1400039ba:	mov    rax,rcx
   1400039bd:	ret    
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	mov    DWORD PTR [rcx],edx
   1400039c2:	mov    QWORD PTR [rcx+0x8],r8
   1400039c6:	mov    rax,rcx
   1400039c9:	ret    
   1400039ca:	int3   
   1400039cb:	int3   
   1400039cc:	int3   
   1400039cd:	int3   
   1400039ce:	int3   
   1400039cf:	int3   
   1400039d0:	rex push rbx
   1400039d2:	sub    rsp,0x20
   1400039d6:	mov    rbx,rcx
   1400039d9:	call   QWORD PTR [rip+0x158b1]        # 0x140019290
   1400039df:	lea    rax,[rip+0x168ba]        # 0x14001a2a0
   1400039e6:	mov    QWORD PTR [rbx],rax
   1400039e9:	mov    rax,rbx
   1400039ec:	add    rsp,0x20
   1400039f0:	pop    rbx
   1400039f1:	ret    
   1400039f2:	int3   
   1400039f3:	int3   
   1400039f4:	int3   
   1400039f5:	int3   
   1400039f6:	int3   
   1400039f7:	int3   
   1400039f8:	int3   
   1400039f9:	int3   
   1400039fa:	int3   
   1400039fb:	int3   
   1400039fc:	int3   
   1400039fd:	int3   
   1400039fe:	int3   
   1400039ff:	int3   
   140003a00:	rex push rbx
   140003a02:	sub    rsp,0x20
   140003a06:	cmp    QWORD PTR [rdx+0x18],0x10
   140003a0b:	mov    rbx,rcx
   140003a0e:	jb     0x140003a13
   140003a10:	mov    rdx,QWORD PTR [rdx]
   140003a13:	mov    QWORD PTR [rsp+0x30],rdx
   140003a18:	lea    rdx,[rsp+0x30]
   140003a1d:	call   QWORD PTR [rip+0x15865]        # 0x140019288
   140003a23:	lea    rax,[rip+0x16876]        # 0x14001a2a0
   140003a2a:	mov    QWORD PTR [rbx],rax
   140003a2d:	mov    rax,rbx
   140003a30:	add    rsp,0x20
   140003a34:	pop    rbx
   140003a35:	ret    
   140003a36:	int3   
   140003a37:	int3   
   140003a38:	int3   
   140003a39:	int3   
   140003a3a:	int3   
   140003a3b:	int3   
   140003a3c:	int3   
   140003a3d:	int3   
   140003a3e:	int3   
   140003a3f:	int3   
   140003a40:	mov    QWORD PTR [rsp+0x10],rdx
   140003a45:	push   rbx
   140003a46:	sub    rsp,0x20
   140003a4a:	lea    rdx,[rsp+0x38]
   140003a4f:	mov    rbx,rcx
   140003a52:	call   QWORD PTR [rip+0x15830]        # 0x140019288
   140003a58:	lea    rax,[rip+0x16841]        # 0x14001a2a0
   140003a5f:	mov    QWORD PTR [rbx],rax
   140003a62:	mov    rax,rbx
   140003a65:	add    rsp,0x20
   140003a69:	pop    rbx
   140003a6a:	ret    
   140003a6b:	int3   
   140003a6c:	int3   
   140003a6d:	int3   
   140003a6e:	int3   
   140003a6f:	int3   
   140003a70:	mov    QWORD PTR [rsp+0x8],rcx
   140003a75:	push   rdi
   140003a76:	sub    rsp,0x30
   140003a7a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003a83:	mov    QWORD PTR [rsp+0x48],rbx
   140003a88:	mov    rbx,rdx
   140003a8b:	mov    rdi,rcx
   140003a8e:	mov    QWORD PTR [rcx],rdx
   140003a91:	mov    rax,QWORD PTR [rdx]
   140003a94:	movsxd r8,DWORD PTR [rax+0x4]
   140003a98:	mov    rcx,QWORD PTR [r8+rdx*1+0x48]
   140003a9d:	test   rcx,rcx
   140003aa0:	je     0x140003aa9
   140003aa2:	mov    rax,QWORD PTR [rcx]
   140003aa5:	call   QWORD PTR [rax+0x8]
   140003aa8:	nop
   140003aa9:	mov    rax,QWORD PTR [rbx]
   140003aac:	movsxd rcx,DWORD PTR [rax+0x4]
   140003ab0:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140003ab5:	jne    0x140003acc
   140003ab7:	mov    rcx,QWORD PTR [rcx+rbx*1+0x50]
   140003abc:	test   rcx,rcx
   140003abf:	je     0x140003acc
   140003ac1:	cmp    rcx,rbx
   140003ac4:	je     0x140003acc
   140003ac6:	call   QWORD PTR [rip+0x15684]        # 0x140019150
   140003acc:	mov    rax,QWORD PTR [rbx]
   140003acf:	movsxd rcx,DWORD PTR [rax+0x4]
   140003ad3:	cmp    DWORD PTR [rcx+rbx*1+0x10],0x0
   140003ad8:	sete   al
   140003adb:	mov    BYTE PTR [rdi+0x8],al
   140003ade:	mov    rax,rdi
   140003ae1:	mov    rbx,QWORD PTR [rsp+0x48]
   140003ae6:	add    rsp,0x30
   140003aea:	pop    rdi
   140003aeb:	ret    
   140003aec:	int3   
   140003aed:	int3   
   140003aee:	int3   
   140003aef:	int3   
   140003af0:	lea    rax,[rip+0x16949]        # 0x14001a440
   140003af7:	mov    QWORD PTR [rcx],rax
   140003afa:	ret    
   140003afb:	int3   
   140003afc:	int3   
   140003afd:	int3   
   140003afe:	int3   
   140003aff:	int3   
   140003b00:	rex push rbx
   140003b02:	sub    rsp,0x20
   140003b06:	mov    r8,QWORD PTR [rcx]
   140003b09:	lea    rdx,[rsp+0x30]
   140003b0e:	mov    rbx,rcx
   140003b11:	mov    r9,r8
   140003b14:	mov    r8,QWORD PTR [r8]
   140003b17:	call   0x140006f00
   140003b1c:	mov    rcx,QWORD PTR [rbx]
   140003b1f:	add    rsp,0x20
   140003b23:	pop    rbx
   140003b24:	jmp    0x14001716e
   140003b29:	int3   
   140003b2a:	int3   
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	mov    rcx,QWORD PTR [rcx]
   140003b33:	jmp    0x14001716e
   140003b38:	int3   
   140003b39:	int3   
   140003b3a:	int3   
   140003b3b:	int3   
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	mov    rcx,QWORD PTR [rcx]
   140003b43:	jmp    0x14001716e
   140003b48:	int3   
   140003b49:	int3   
   140003b4a:	int3   
   140003b4b:	int3   
   140003b4c:	int3   
   140003b4d:	int3   
   140003b4e:	int3   
   140003b4f:	int3   
   140003b50:	mov    rcx,QWORD PTR [rcx]
   140003b53:	jmp    0x14001716e
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	rex push rbx
   140003b62:	sub    rsp,0x20
   140003b66:	cmp    QWORD PTR [rcx+0x90],0x0
   140003b6e:	lea    rax,[rip+0x1695b]        # 0x14001a4d0
   140003b75:	mov    rbx,rcx
   140003b78:	mov    QWORD PTR [rcx],rax
   140003b7b:	je     0x140003ba9
   140003b7d:	mov    rcx,QWORD PTR [rcx+0x18]
   140003b81:	lea    rax,[rbx+0x80]
   140003b88:	cmp    QWORD PTR [rcx],rax
   140003b8b:	jne    0x140003ba9
   140003b8d:	mov    rdx,QWORD PTR [rbx+0x68]
   140003b91:	mov    r8,QWORD PTR [rbx+0x70]
   140003b95:	mov    QWORD PTR [rcx],rdx
   140003b98:	mov    rax,QWORD PTR [rbx+0x38]
   140003b9c:	sub    r8d,edx
   140003b9f:	mov    QWORD PTR [rax],rdx
   140003ba2:	mov    rax,QWORD PTR [rbx+0x50]
   140003ba6:	mov    DWORD PTR [rax],r8d
   140003ba9:	cmp    BYTE PTR [rbx+0x88],0x0
   140003bb0:	je     0x140003bba
   140003bb2:	mov    rcx,rbx
   140003bb5:	call   0x140006b30
   140003bba:	mov    rcx,rbx
   140003bbd:	add    rsp,0x20
   140003bc1:	pop    rbx
   140003bc2:	rex.W jmp QWORD PTR [rip+0x154e7]        # 0x1400190b0
   140003bc9:	int3   
   140003bca:	int3   
   140003bcb:	int3   
   140003bcc:	int3   
   140003bcd:	int3   
   140003bce:	int3   
   140003bcf:	int3   
   140003bd0:	rex push rbx
   140003bd2:	sub    rsp,0x20
   140003bd6:	mov    rax,QWORD PTR [rcx-0xb0]
   140003bdd:	mov    rbx,rcx
   140003be0:	add    rcx,0xffffffffffffff60
   140003be7:	movsxd rdx,DWORD PTR [rax+0x4]
   140003beb:	lea    rax,[rip+0x16fce]        # 0x14001abc0
   140003bf2:	mov    QWORD PTR [rdx+rcx*1-0x10],rax
   140003bf7:	mov    rax,QWORD PTR [rcx-0x10]
   140003bfb:	movsxd rdx,DWORD PTR [rax+0x4]
   140003bff:	lea    r8d,[rdx-0xb0]
   140003c06:	mov    DWORD PTR [rdx+rcx*1-0x14],r8d
   140003c0b:	call   0x140003b60
   140003c10:	lea    rcx,[rbx-0x98]
   140003c17:	add    rsp,0x20
   140003c1b:	pop    rbx
   140003c1c:	rex.W jmp QWORD PTR [rip+0x15545]        # 0x140019168
   140003c23:	int3   
   140003c24:	int3   
   140003c25:	int3   
   140003c26:	int3   
   140003c27:	int3   
   140003c28:	int3   
   140003c29:	int3   
   140003c2a:	int3   
   140003c2b:	int3   
   140003c2c:	int3   
   140003c2d:	int3   
   140003c2e:	int3   
   140003c2f:	int3   
   140003c30:	rex push rbx
   140003c32:	sub    rsp,0x20
   140003c36:	mov    rax,QWORD PTR [rcx-0xa8]
   140003c3d:	mov    rbx,rcx
   140003c40:	add    rcx,0xffffffffffffff60
   140003c47:	movsxd rdx,DWORD PTR [rax+0x4]
   140003c4b:	lea    rax,[rip+0x168fe]        # 0x14001a550
   140003c52:	mov    QWORD PTR [rdx+rcx*1-0x8],rax
   140003c57:	mov    rax,QWORD PTR [rcx-0x8]
   140003c5b:	movsxd rdx,DWORD PTR [rax+0x4]
   140003c5f:	lea    r8d,[rdx-0xa8]
   140003c66:	mov    DWORD PTR [rdx+rcx*1-0xc],r8d
   140003c6b:	call   0x140003b60
   140003c70:	lea    rcx,[rbx-0x98]
   140003c77:	add    rsp,0x20
   140003c7b:	pop    rbx
   140003c7c:	rex.W jmp QWORD PTR [rip+0x1548d]        # 0x140019110
   140003c83:	int3   
   140003c84:	int3   
   140003c85:	int3   
   140003c86:	int3   
   140003c87:	int3   
   140003c88:	int3   
   140003c89:	int3   
   140003c8a:	int3   
   140003c8b:	int3   
   140003c8c:	int3   
   140003c8d:	int3   
   140003c8e:	int3   
   140003c8f:	int3   
   140003c90:	rex push rbx
   140003c92:	sub    rsp,0x20
   140003c96:	cmp    QWORD PTR [rcx+0x18],0x10
   140003c9b:	mov    rbx,rcx
   140003c9e:	jb     0x140003ca8
   140003ca0:	mov    rcx,QWORD PTR [rcx]
   140003ca3:	call   0x14001716e
   140003ca8:	mov    QWORD PTR [rbx+0x18],0xf
   140003cb0:	mov    QWORD PTR [rbx+0x10],0x0
   140003cb8:	mov    BYTE PTR [rbx],0x0
   140003cbb:	add    rsp,0x20
   140003cbf:	pop    rbx
   140003cc0:	ret    
   140003cc1:	int3   
   140003cc2:	int3   
   140003cc3:	int3   
   140003cc4:	int3   
   140003cc5:	int3   
   140003cc6:	int3   
   140003cc7:	int3   
   140003cc8:	int3   
   140003cc9:	int3   
   140003cca:	int3   
   140003ccb:	int3   
   140003ccc:	int3   
   140003ccd:	int3   
   140003cce:	int3   
   140003ccf:	int3   
   140003cd0:	rex push rbx
   140003cd2:	sub    rsp,0x20
   140003cd6:	mov    r8,QWORD PTR [rcx]
   140003cd9:	lea    rdx,[rsp+0x30]
   140003cde:	mov    rbx,rcx
   140003ce1:	mov    r9,r8
   140003ce4:	mov    r8,QWORD PTR [r8]
   140003ce7:	call   0x140006f00
   140003cec:	mov    rcx,QWORD PTR [rbx]
   140003cef:	add    rsp,0x20
   140003cf3:	pop    rbx
   140003cf4:	jmp    0x14001716e
   140003cf9:	int3   
   140003cfa:	int3   
   140003cfb:	int3   
   140003cfc:	int3   
   140003cfd:	int3   
   140003cfe:	int3   
   140003cff:	int3   
   140003d00:	mov    rcx,QWORD PTR [rcx]
   140003d03:	test   rcx,rcx
   140003d06:	jne    0x140017316
   140003d0c:	ret    
   140003d0d:	int3   
   140003d0e:	int3   
   140003d0f:	int3   
   140003d10:	mov    rcx,QWORD PTR [rcx]
   140003d13:	test   rcx,rcx
   140003d16:	jne    0x14001716e
   140003d1c:	ret    
   140003d1d:	int3   
   140003d1e:	int3   
   140003d1f:	int3   
   140003d20:	mov    rcx,QWORD PTR [rcx]
   140003d23:	test   rcx,rcx
   140003d26:	je     0x140003d33
   140003d28:	mov    rax,QWORD PTR [rcx]
   140003d2b:	mov    edx,0x1
   140003d30:	rex.W jmp QWORD PTR [rax]
   140003d33:	ret    
   140003d34:	int3   
   140003d35:	int3   
   140003d36:	int3   
   140003d37:	int3   
   140003d38:	int3   
   140003d39:	int3   
   140003d3a:	int3   
   140003d3b:	int3   
   140003d3c:	int3   
   140003d3d:	int3   
   140003d3e:	int3   
   140003d3f:	int3   
   140003d40:	lea    rax,[rip+0x16699]        # 0x14001a3e0
   140003d47:	mov    QWORD PTR [rcx],rax
   140003d4a:	ret    
   140003d4b:	int3   
   140003d4c:	int3   
   140003d4d:	int3   
   140003d4e:	int3   
   140003d4f:	int3   
   140003d50:	lea    rax,[rip+0x16689]        # 0x14001a3e0
   140003d57:	mov    QWORD PTR [rcx],rax
   140003d5a:	ret    
   140003d5b:	int3   
   140003d5c:	int3   
   140003d5d:	int3   
   140003d5e:	int3   
   140003d5f:	int3   
   140003d60:	lea    rax,[rip+0x166d9]        # 0x14001a440
   140003d67:	mov    QWORD PTR [rcx],rax
   140003d6a:	ret    
   140003d6b:	int3   
   140003d6c:	int3   
   140003d6d:	int3   
   140003d6e:	int3   
   140003d6f:	int3   
   140003d70:	lea    rax,[rip+0x16669]        # 0x14001a3e0
   140003d77:	mov    QWORD PTR [rcx],rax
   140003d7a:	ret    
   140003d7b:	int3   
   140003d7c:	int3   
   140003d7d:	int3   
   140003d7e:	int3   
   140003d7f:	int3   
   140003d80:	mov    rax,rsp
   140003d83:	mov    QWORD PTR [rax+0x8],rcx
   140003d87:	push   rbp
   140003d88:	push   rdi
   140003d89:	push   r12
   140003d8b:	push   r14
   140003d8d:	push   r15
   140003d8f:	mov    rbp,rsp
   140003d92:	sub    rsp,0x50
   140003d96:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   140003d9e:	mov    QWORD PTR [rax+0x18],rbx
   140003da2:	mov    QWORD PTR [rax+0x20],rsi
   140003da6:	mov    rsi,rcx
   140003da9:	lea    rax,[rip+0x166e8]        # 0x14001a498
   140003db0:	mov    QWORD PTR [rcx],rax
   140003db3:	mov    rax,QWORD PTR [rcx+0x50]
   140003db7:	cmp    DWORD PTR [rax+0x1c],0x0
   140003dbb:	jne    0x140003dd7
   140003dbd:	mov    r8d,0xec
   140003dc3:	lea    rdx,[rip+0x16846]        # 0x14001a610
   140003dca:	lea    rcx,[rip+0x1694f]        # 0x14001a720
   140003dd1:	call   QWORD PTR [rip+0x15441]        # 0x140019218
   140003dd7:	lea    rdx,[rip+0x169a2]        # 0x14001a780
   140003dde:	mov    rcx,QWORD PTR [rip+0x153db]        # 0x1400191c0
   140003de5:	call   0x1400014f0
   140003dea:	mov    rcx,rax
   140003ded:	lea    rdx,[rip+0xffffffffffffed5c]        # 0x140002b50
   140003df4:	call   QWORD PTR [rip+0x15326]        # 0x140019120
   140003dfa:	lea    rdx,[rip+0x1699f]        # 0x14001a7a0
   140003e01:	mov    rcx,QWORD PTR [rip+0x153b8]        # 0x1400191c0
   140003e08:	call   0x1400014f0
   140003e0d:	mov    rcx,rax
   140003e10:	lea    rdx,[rip+0xffffffffffffed39]        # 0x140002b50
   140003e17:	call   QWORD PTR [rip+0x15303]        # 0x140019120
   140003e1d:	mov    rdi,QWORD PTR [rsi+0x58]
   140003e21:	mov    rbx,QWORD PTR [rdi]
   140003e24:	xor    r12d,r12d
   140003e27:	cmp    rbx,rdi
   140003e2a:	je     0x140003eef
   140003e30:	lea    rdx,[rbx+0x20]
   140003e34:	mov    QWORD PTR [rbp-0x10],0xf
   140003e3c:	mov    QWORD PTR [rbp-0x18],r12
   140003e40:	mov    BYTE PTR [rbp-0x28],0x0
   140003e44:	or     r9,0xffffffffffffffff
   140003e48:	xor    r8d,r8d
   140003e4b:	lea    rcx,[rbp-0x28]
   140003e4f:	call   0x140006640
   140003e54:	nop
   140003e55:	lea    rdx,[rip+0x16964]        # 0x14001a7c0
   140003e5c:	mov    rcx,QWORD PTR [rip+0x1535d]        # 0x1400191c0
   140003e63:	call   0x1400014f0
   140003e68:	mov    rcx,rax
   140003e6b:	lea    rdx,[rbp-0x28]
   140003e6f:	call   0x140001320
   140003e74:	mov    rcx,rax
   140003e77:	lea    rdx,[rip+0xffffffffffffecd2]        # 0x140002b50
   140003e7e:	call   QWORD PTR [rip+0x1529c]        # 0x140019120
   140003e84:	nop
   140003e85:	cmp    QWORD PTR [rbp-0x10],0x10
   140003e8a:	jb     0x140003e95
   140003e8c:	mov    rcx,QWORD PTR [rbp-0x28]
   140003e90:	call   0x14001716e
   140003e95:	cmp    BYTE PTR [rbx+0x19],0x0
   140003e99:	jne    0x140003ee6
   140003e9b:	mov    rax,QWORD PTR [rbx+0x10]
   140003e9f:	cmp    BYTE PTR [rax+0x19],0x0
   140003ea3:	jne    0x140003ebf
   140003ea5:	mov    rbx,rax
   140003ea8:	mov    rax,QWORD PTR [rax]
   140003eab:	cmp    BYTE PTR [rax+0x19],0x0
   140003eaf:	jne    0x140003ee6
   140003eb1:	mov    rbx,rax
   140003eb4:	mov    rax,QWORD PTR [rax]
   140003eb7:	cmp    BYTE PTR [rax+0x19],0x0
   140003ebb:	je     0x140003eb1
   140003ebd:	jmp    0x140003ee6
   140003ebf:	mov    rax,QWORD PTR [rbx+0x8]
   140003ec3:	cmp    BYTE PTR [rax+0x19],0x0
   140003ec7:	jne    0x140003ee3
   140003ec9:	nop    DWORD PTR [rax+0x0]
   140003ed0:	cmp    rbx,QWORD PTR [rax+0x10]
   140003ed4:	jne    0x140003ee3
   140003ed6:	mov    rbx,rax
   140003ed9:	mov    rax,QWORD PTR [rax+0x8]
   140003edd:	cmp    BYTE PTR [rax+0x19],0x0
   140003ee1:	je     0x140003ed0
   140003ee3:	mov    rbx,rax
   140003ee6:	cmp    rbx,rdi
   140003ee9:	jne    0x140003e30
   140003eef:	lea    rdx,[rip+0x168d2]        # 0x14001a7c8
   140003ef6:	mov    rcx,QWORD PTR [rip+0x152c3]        # 0x1400191c0
   140003efd:	call   0x1400014f0
   140003f02:	mov    rcx,rax
   140003f05:	lea    rdx,[rip+0xffffffffffffec44]        # 0x140002b50
   140003f0c:	call   QWORD PTR [rip+0x1520e]        # 0x140019120
   140003f12:	mov    rdi,QWORD PTR [rsi+0x68]
   140003f16:	mov    rbx,QWORD PTR [rdi]
   140003f19:	cmp    rbx,rdi
   140003f1c:	je     0x140003fef
   140003f22:	nop    DWORD PTR [rax+0x0]
   140003f26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140003f30:	lea    rdx,[rbx+0x20]
   140003f34:	mov    QWORD PTR [rbp-0x10],0xf
   140003f3c:	mov    QWORD PTR [rbp-0x18],r12
   140003f40:	mov    BYTE PTR [rbp-0x28],0x0
   140003f44:	or     r9,0xffffffffffffffff
   140003f48:	xor    r8d,r8d
   140003f4b:	lea    rcx,[rbp-0x28]
   140003f4f:	call   0x140006640
   140003f54:	nop
   140003f55:	lea    rdx,[rip+0x16864]        # 0x14001a7c0
   140003f5c:	mov    rcx,QWORD PTR [rip+0x1525d]        # 0x1400191c0
   140003f63:	call   0x1400014f0
   140003f68:	mov    rcx,rax
   140003f6b:	lea    rdx,[rbp-0x28]
   140003f6f:	call   0x140001320
   140003f74:	mov    rcx,rax
   140003f77:	lea    rdx,[rip+0xffffffffffffebd2]        # 0x140002b50
   140003f7e:	call   QWORD PTR [rip+0x1519c]        # 0x140019120
   140003f84:	nop
   140003f85:	cmp    QWORD PTR [rbp-0x10],0x10
   140003f8a:	jb     0x140003f95
   140003f8c:	mov    rcx,QWORD PTR [rbp-0x28]
   140003f90:	call   0x14001716e
   140003f95:	cmp    BYTE PTR [rbx+0x19],0x0
   140003f99:	jne    0x140003fe6
   140003f9b:	mov    rax,QWORD PTR [rbx+0x10]
   140003f9f:	cmp    BYTE PTR [rax+0x19],0x0
   140003fa3:	jne    0x140003fbf
   140003fa5:	mov    rbx,rax
   140003fa8:	mov    rax,QWORD PTR [rax]
   140003fab:	cmp    BYTE PTR [rax+0x19],0x0
   140003faf:	jne    0x140003fe6
   140003fb1:	mov    rbx,rax
   140003fb4:	mov    rax,QWORD PTR [rax]
   140003fb7:	cmp    BYTE PTR [rax+0x19],0x0
   140003fbb:	je     0x140003fb1
   140003fbd:	jmp    0x140003fe6
   140003fbf:	mov    rax,QWORD PTR [rbx+0x8]
   140003fc3:	cmp    BYTE PTR [rax+0x19],0x0
   140003fc7:	jne    0x140003fe3
   140003fc9:	nop    DWORD PTR [rax+0x0]
   140003fd0:	cmp    rbx,QWORD PTR [rax+0x10]
   140003fd4:	jne    0x140003fe3
   140003fd6:	mov    rbx,rax
   140003fd9:	mov    rax,QWORD PTR [rax+0x8]
   140003fdd:	cmp    BYTE PTR [rax+0x19],0x0
   140003fe1:	je     0x140003fd0
   140003fe3:	mov    rbx,rax
   140003fe6:	cmp    rbx,rdi
   140003fe9:	jne    0x140003f30
   140003fef:	mov    rcx,QWORD PTR [rsi+0x50]
   140003ff3:	call   0x140010e60
   140003ff8:	test   eax,eax
   140003ffa:	jne    0x14000404c
   140003ffc:	mov    QWORD PTR [rbp-0x10],0xf
   140004004:	mov    QWORD PTR [rbp-0x18],r12
   140004008:	mov    BYTE PTR [rbp-0x28],al
   14000400b:	lea    r8d,[rax+0x1e]
   14000400f:	lea    rdx,[rip+0x167ca]        # 0x14001a7e0
   140004016:	lea    rcx,[rbp-0x28]
   14000401a:	call   0x140006790
   14000401f:	nop
   140004020:	lea    rdx,[rbp-0x28]
   140004024:	mov    rcx,QWORD PTR [rip+0x1518d]        # 0x1400191b8
   14000402b:	call   0x140001320
   140004030:	mov    rcx,rax
   140004033:	lea    rdx,[rip+0xffffffffffffeb16]        # 0x140002b50
   14000403a:	call   QWORD PTR [rip+0x150e0]        # 0x140019120
   140004040:	mov    ecx,0x1
   140004045:	call   QWORD PTR [rip+0x153b5]        # 0x140019400
   14000404b:	nop
   14000404c:	mov    rax,QWORD PTR [rsi+0x50]
   140004050:	cmp    DWORD PTR [rax+0x1c],0x3
   140004054:	je     0x140004070
   140004056:	mov    r8d,0xfd
   14000405c:	lea    rdx,[rip+0x165ad]        # 0x14001a610
   140004063:	lea    rcx,[rip+0x16796]        # 0x14001a800
   14000406a:	call   QWORD PTR [rip+0x151a8]        # 0x140019218
   140004070:	mov    rcx,QWORD PTR [rsi+0x50]
   140004074:	call   0x140010d50
   140004079:	test   eax,eax
   14000407b:	jne    0x1400040cd
   14000407d:	mov    QWORD PTR [rbp-0x10],0xf
   140004085:	mov    QWORD PTR [rbp-0x18],r12
   140004089:	mov    BYTE PTR [rbp-0x28],al
   14000408c:	lea    r8d,[rax+0x1b]
   140004090:	lea    rdx,[rip+0x167f1]        # 0x14001a888
   140004097:	lea    rcx,[rbp-0x28]
   14000409b:	call   0x140006790
   1400040a0:	nop
   1400040a1:	lea    rdx,[rbp-0x28]
   1400040a5:	mov    rcx,QWORD PTR [rip+0x1510c]        # 0x1400191b8
   1400040ac:	call   0x140001320
   1400040b1:	mov    rcx,rax
   1400040b4:	lea    rdx,[rip+0xffffffffffffea95]        # 0x140002b50
   1400040bb:	call   QWORD PTR [rip+0x1505f]        # 0x140019120
   1400040c1:	mov    ecx,0x1
   1400040c6:	call   QWORD PTR [rip+0x15334]        # 0x140019400
   1400040cc:	nop
   1400040cd:	mov    rax,QWORD PTR [rsi+0x50]
   1400040d1:	cmp    DWORD PTR [rax+0x1c],0x0
   1400040d5:	je     0x1400040f2
   1400040d7:	mov    r8d,0x103
   1400040dd:	lea    rdx,[rip+0x1652c]        # 0x14001a610
   1400040e4:	lea    rcx,[rip+0x167c5]        # 0x14001a8b0
   1400040eb:	call   QWORD PTR [rip+0x15127]        # 0x140019218
   1400040f1:	nop
   1400040f2:	mov    r8,QWORD PTR [rsi+0x68]
   1400040f6:	mov    r9,r8
   1400040f9:	mov    r8,QWORD PTR [r8]
   1400040fc:	lea    rdx,[rbp+0x38]
   140004100:	lea    rcx,[rsi+0x68]
   140004104:	call   0x140006f00
   140004109:	mov    rcx,QWORD PTR [rsi+0x68]
   14000410d:	call   0x14001716e
   140004112:	nop
   140004113:	mov    r8,QWORD PTR [rsi+0x58]
   140004117:	mov    r9,r8
   14000411a:	mov    r8,QWORD PTR [r8]
   14000411d:	lea    rdx,[rbp+0x38]
   140004121:	lea    rcx,[rsi+0x58]
   140004125:	call   0x140006f00
   14000412a:	mov    rcx,QWORD PTR [rsi+0x58]
   14000412e:	call   0x14001716e
   140004133:	nop
   140004134:	mov    rcx,QWORD PTR [rsi+0x50]
   140004138:	test   rcx,rcx
   14000413b:	je     0x140004143
   14000413d:	call   0x14001716e
   140004142:	nop
   140004143:	cmp    QWORD PTR [rsi+0x48],0x10
   140004148:	jb     0x140004153
   14000414a:	mov    rcx,QWORD PTR [rsi+0x30]
   14000414e:	call   0x14001716e
   140004153:	mov    QWORD PTR [rsi+0x48],0xf
   14000415b:	mov    QWORD PTR [rsi+0x40],r12
   14000415f:	mov    BYTE PTR [rsi+0x30],0x0
   140004163:	cmp    QWORD PTR [rsi+0x20],0x10
   140004168:	jb     0x140004173
   14000416a:	mov    rcx,QWORD PTR [rsi+0x8]
   14000416e:	call   0x14001716e
   140004173:	mov    QWORD PTR [rsi+0x20],0xf
   14000417b:	mov    QWORD PTR [rsi+0x18],r12
   14000417f:	mov    BYTE PTR [rsi+0x8],0x0
   140004183:	lea    r11,[rsp+0x50]
   140004188:	mov    rbx,QWORD PTR [r11+0x40]
   14000418c:	mov    rsi,QWORD PTR [r11+0x48]
   140004190:	mov    rsp,r11
   140004193:	pop    r15
   140004195:	pop    r14
   140004197:	pop    r12
   140004199:	pop    rdi
   14000419a:	pop    rbp
   14000419b:	ret    
   14000419c:	int3   
   14000419d:	int3   
   14000419e:	int3   
   14000419f:	int3   
   1400041a0:	lea    rax,[rip+0x16111]        # 0x14001a2b8
   1400041a7:	mov    QWORD PTR [rcx],rax
   1400041aa:	ret    
   1400041ab:	int3   
   1400041ac:	int3   
   1400041ad:	int3   
   1400041ae:	int3   
   1400041af:	int3   
   1400041b0:	lea    rax,[rip+0x16101]        # 0x14001a2b8
   1400041b7:	mov    QWORD PTR [rcx],rax
   1400041ba:	ret    
   1400041bb:	int3   
   1400041bc:	int3   
   1400041bd:	int3   
   1400041be:	int3   
   1400041bf:	int3   
   1400041c0:	mov    rdx,QWORD PTR [rcx]
   1400041c3:	mov    rax,QWORD PTR [rdx]
   1400041c6:	movsxd rcx,DWORD PTR [rax+0x4]
   1400041ca:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   1400041cf:	test   rcx,rcx
   1400041d2:	je     0x1400041db
   1400041d4:	mov    rax,QWORD PTR [rcx]
   1400041d7:	rex.W jmp QWORD PTR [rax+0x10]
   1400041db:	ret    
   1400041dc:	int3   
   1400041dd:	int3   
   1400041de:	int3   
   1400041df:	int3   
   1400041e0:	lea    rax,[rip+0x160d1]        # 0x14001a2b8
   1400041e7:	mov    QWORD PTR [rcx],rax
   1400041ea:	ret    
   1400041eb:	int3   
   1400041ec:	int3   
   1400041ed:	int3   
   1400041ee:	int3   
   1400041ef:	int3   
   1400041f0:	lea    rax,[rip+0x160c1]        # 0x14001a2b8
   1400041f7:	mov    QWORD PTR [rcx],rax
   1400041fa:	ret    
   1400041fb:	int3   
   1400041fc:	int3   
   1400041fd:	int3   
   1400041fe:	int3   
   1400041ff:	int3   
   140004200:	sub    rsp,0x28
   140004204:	mov    rcx,QWORD PTR [rcx]
   140004207:	test   rcx,rcx
   14000420a:	je     0x140004229
   14000420c:	mov    rax,QWORD PTR [rcx]
   14000420f:	call   QWORD PTR [rax+0x10]
   140004212:	test   rax,rax
   140004215:	je     0x140004229
   140004217:	mov    r8,QWORD PTR [rax]
   14000421a:	mov    edx,0x1
   14000421f:	mov    rcx,rax
   140004222:	add    rsp,0x28
   140004226:	rex.WB jmp QWORD PTR [r8]
   140004229:	add    rsp,0x28
   14000422d:	ret    
   14000422e:	int3   
   14000422f:	int3   
   140004230:	rex.W jmp QWORD PTR [rip+0x15061]        # 0x140019298
   140004237:	int3   
   140004238:	int3   
   140004239:	int3   
   14000423a:	int3   
   14000423b:	int3   
   14000423c:	int3   
   14000423d:	int3   
   14000423e:	int3   
   14000423f:	int3   
   140004240:	rex push rbx
   140004242:	sub    rsp,0x20
   140004246:	mov    rbx,rcx
   140004249:	call   QWORD PTR [rip+0x14f81]        # 0x1400191d0
   14000424f:	test   al,al
   140004251:	jne    0x14000425c
   140004253:	mov    rcx,QWORD PTR [rbx]
   140004256:	call   QWORD PTR [rip+0x14ebc]        # 0x140019118
   14000425c:	mov    rdx,QWORD PTR [rbx]
   14000425f:	mov    rax,QWORD PTR [rdx]
   140004262:	movsxd rcx,DWORD PTR [rax+0x4]
   140004266:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14000426b:	test   rcx,rcx
   14000426e:	je     0x14000427c
   140004270:	mov    rax,QWORD PTR [rcx]
   140004273:	add    rsp,0x20
   140004277:	pop    rbx
   140004278:	rex.W jmp QWORD PTR [rax+0x10]
   14000427c:	add    rsp,0x20
   140004280:	pop    rbx
   140004281:	ret    
   140004282:	int3   
   140004283:	int3   
   140004284:	int3   
   140004285:	int3   
   140004286:	int3   
   140004287:	int3   
   140004288:	int3   
   140004289:	int3   
   14000428a:	int3   
   14000428b:	int3   
   14000428c:	int3   
   14000428d:	int3   
   14000428e:	int3   
   14000428f:	int3   
   140004290:	mov    rax,rdx
   140004293:	ret    
   140004294:	int3   
   140004295:	int3   
   140004296:	int3   
   140004297:	int3   
   140004298:	int3   
   140004299:	int3   
   14000429a:	int3   
   14000429b:	int3   
   14000429c:	int3   
   14000429d:	int3   
   14000429e:	int3   
   14000429f:	int3   
   1400042a0:	ret    0x0
   1400042a3:	int3   
   1400042a4:	int3   
   1400042a5:	int3   
   1400042a6:	int3   
   1400042a7:	int3   
   1400042a8:	int3   
   1400042a9:	int3   
   1400042aa:	int3   
   1400042ab:	int3   
   1400042ac:	int3   
   1400042ad:	int3   
   1400042ae:	int3   
   1400042af:	int3   
   1400042b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400042b5:	push   rdi
   1400042b6:	sub    rsp,0x20
   1400042ba:	mov    rdi,rdx
   1400042bd:	mov    rbx,rcx
   1400042c0:	cmp    rcx,rdx
   1400042c3:	je     0x1400042f2
   1400042c5:	cmp    QWORD PTR [rcx+0x18],0x10
   1400042ca:	jb     0x1400042d4
   1400042cc:	mov    rcx,QWORD PTR [rcx]
   1400042cf:	call   0x14001716e
   1400042d4:	mov    QWORD PTR [rbx+0x18],0xf
   1400042dc:	mov    QWORD PTR [rbx+0x10],0x0
   1400042e4:	mov    rdx,rdi
   1400042e7:	mov    rcx,rbx
   1400042ea:	mov    BYTE PTR [rbx],0x0
   1400042ed:	call   0x1400054f0
   1400042f2:	mov    rax,rbx
   1400042f5:	mov    rbx,QWORD PTR [rsp+0x30]
   1400042fa:	add    rsp,0x20
   1400042fe:	pop    rdi
   1400042ff:	ret    
   140004300:	cmp    BYTE PTR [rdx],0x0
   140004303:	jne    0x14000430d
   140004305:	xor    r8d,r8d
   140004308:	jmp    0x140006790
   14000430d:	or     r8,0xffffffffffffffff
   140004311:	inc    r8
   140004314:	cmp    BYTE PTR [rdx+r8*1],0x0
   140004319:	jne    0x140004311
   14000431b:	jmp    0x140006790
   140004320:	mov    rax,QWORD PTR [rdx+0x10]
   140004324:	mov    r9,QWORD PTR [rdx+0x18]
   140004328:	mov    r8,QWORD PTR [rdx+0x20]
   14000432c:	mov    QWORD PTR [rcx+0x10],rax
   140004330:	mov    rax,rcx
   140004333:	mov    QWORD PTR [rcx+0x18],r9
   140004337:	or     rax,0x1
   14000433b:	mov    QWORD PTR [rcx+0x20],r8
   14000433f:	mov    DWORD PTR [rcx+0x28],0x0
   140004346:	mov    QWORD PTR [rcx+0x8],rax
   14000434a:	mov    QWORD PTR [rcx],rax
   14000434d:	test   r9,r9
   140004350:	je     0x14000438a
   140004352:	mov    DWORD PTR [rcx+0x28],0x1
   140004359:	cmp    BYTE PTR [r9],0x2d
   14000435d:	jne    0x14000438a
   14000435f:	cmp    BYTE PTR [r9+0x1],0x0
   140004364:	je     0x14000438a
   140004366:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004370:	movsxd rdx,DWORD PTR [rcx+0x28]
   140004374:	cmp    BYTE PTR [rdx+r9*1],0x3d
   140004379:	je     0x14000438a
   14000437b:	lea    eax,[rdx+0x1]
   14000437e:	mov    DWORD PTR [rcx+0x28],eax
   140004381:	cdqe   
   140004383:	cmp    BYTE PTR [rax+r9*1],0x0
   140004388:	jne    0x140004370
   14000438a:	ret    
   14000438b:	int3   
   14000438c:	int3   
   14000438d:	int3   
   14000438e:	int3   
   14000438f:	int3   
   140004390:	mov    rdx,QWORD PTR [rdx]
   140004393:	cmp    QWORD PTR [rcx],rdx
   140004396:	sete   al
   140004399:	ret    
   14000439a:	int3   
   14000439b:	int3   
   14000439c:	int3   
   14000439d:	int3   
   14000439e:	int3   
   14000439f:	int3   
   1400043a0:	mov    rdx,QWORD PTR [rdx]
   1400043a3:	cmp    QWORD PTR [rcx],rdx
   1400043a6:	sete   al
   1400043a9:	ret    
   1400043aa:	int3   
   1400043ab:	int3   
   1400043ac:	int3   
   1400043ad:	int3   
   1400043ae:	int3   
   1400043af:	int3   
   1400043b0:	cmp    rcx,rdx
   1400043b3:	sete   al
   1400043b6:	ret    
   1400043b7:	int3   
   1400043b8:	int3   
   1400043b9:	int3   
   1400043ba:	int3   
   1400043bb:	int3   
   1400043bc:	int3   
   1400043bd:	int3   
   1400043be:	int3   
   1400043bf:	int3   
   1400043c0:	mov    rax,QWORD PTR [rdx+0x8]
   1400043c4:	cmp    QWORD PTR [rcx+0x8],rax
   1400043c8:	jne    0x1400043d3
   1400043ca:	mov    eax,DWORD PTR [rdx]
   1400043cc:	cmp    DWORD PTR [rcx],eax
   1400043ce:	jne    0x1400043d3
   1400043d0:	mov    al,0x1
   1400043d2:	ret    
   1400043d3:	xor    al,al
   1400043d5:	ret    
   1400043d6:	int3   
   1400043d7:	int3   
   1400043d8:	int3   
   1400043d9:	int3   
   1400043da:	int3   
   1400043db:	int3   
   1400043dc:	int3   
   1400043dd:	int3   
   1400043de:	int3   
   1400043df:	int3   
   1400043e0:	mov    rdx,QWORD PTR [rdx]
   1400043e3:	cmp    QWORD PTR [rcx],rdx
   1400043e6:	setne  al
   1400043e9:	ret    
   1400043ea:	int3   
   1400043eb:	int3   
   1400043ec:	int3   
   1400043ed:	int3   
   1400043ee:	int3   
   1400043ef:	int3   
   1400043f0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400043f5:	jb     0x1400043fe
   1400043f7:	mov    rax,QWORD PTR [rcx]
   1400043fa:	add    rax,rdx
   1400043fd:	ret    
   1400043fe:	lea    rax,[rcx+rdx*1]
   140004402:	ret    
   140004403:	int3   
   140004404:	int3   
   140004405:	int3   
   140004406:	int3   
   140004407:	int3   
   140004408:	int3   
   140004409:	int3   
   14000440a:	int3   
   14000440b:	int3   
   14000440c:	int3   
   14000440d:	int3   
   14000440e:	int3   
   14000440f:	int3   
   140004410:	lea    rax,[rdx+rdx*2]
   140004414:	shl    rax,0x4
   140004418:	add    rax,QWORD PTR [rcx]
   14000441b:	ret    
   14000441c:	int3   
   14000441d:	int3   
   14000441e:	int3   
   14000441f:	int3   
   140004420:	mov    rax,QWORD PTR [rcx+0x8]
   140004424:	add    rax,QWORD PTR [rcx]
   140004427:	ret    
   140004428:	int3   
   140004429:	int3   
   14000442a:	int3   
   14000442b:	int3   
   14000442c:	int3   
   14000442d:	int3   
   14000442e:	int3   
   14000442f:	int3   
   140004430:	xor    eax,eax
   140004432:	cmp    QWORD PTR [rcx+0x10],rax
   140004436:	cmovne rax,rcx
   14000443a:	ret    
   14000443b:	int3   
   14000443c:	int3   
   14000443d:	int3   
   14000443e:	int3   
   14000443f:	int3   
   140004440:	movzx  eax,BYTE PTR [rcx+0x8]
   140004444:	ret    
   140004445:	int3   
   140004446:	int3   
   140004447:	int3   
   140004448:	int3   
   140004449:	int3   
   14000444a:	int3   
   14000444b:	int3   
   14000444c:	int3   
   14000444d:	int3   
   14000444e:	int3   
   14000444f:	int3   
   140004450:	mov    rax,QWORD PTR [rcx]
   140004453:	ret    
   140004454:	int3   
   140004455:	int3   
   140004456:	int3   
   140004457:	int3   
   140004458:	int3   
   140004459:	int3   
   14000445a:	int3   
   14000445b:	int3   
   14000445c:	int3   
   14000445d:	int3   
   14000445e:	int3   
   14000445f:	int3   
   140004460:	mov    rax,QWORD PTR [rcx]
   140004463:	ret    
   140004464:	int3   
   140004465:	int3   
   140004466:	int3   
   140004467:	int3   
   140004468:	int3   
   140004469:	int3   
   14000446a:	int3   
   14000446b:	int3   
   14000446c:	int3   
   14000446d:	int3   
   14000446e:	int3   
   14000446f:	int3   
   140004470:	mov    rax,QWORD PTR [rcx]
   140004473:	ret    
   140004474:	int3   
   140004475:	int3   
   140004476:	int3   
   140004477:	int3   
   140004478:	int3   
   140004479:	int3   
   14000447a:	int3   
   14000447b:	int3   
   14000447c:	int3   
   14000447d:	int3   
   14000447e:	int3   
   14000447f:	int3   
   140004480:	mov    rax,QWORD PTR [rcx]
   140004483:	ret    
   140004484:	int3   
   140004485:	int3   
   140004486:	int3   
   140004487:	int3   
   140004488:	int3   
   140004489:	int3   
   14000448a:	int3   
   14000448b:	int3   
   14000448c:	int3   
   14000448d:	int3   
   14000448e:	int3   
   14000448f:	int3   
   140004490:	mov    rax,QWORD PTR [rcx]
   140004493:	add    rax,0x20
   140004497:	ret    
   140004498:	int3   
   140004499:	int3   
   14000449a:	int3   
   14000449b:	int3   
   14000449c:	int3   
   14000449d:	int3   
   14000449e:	int3   
   14000449f:	int3   
   1400044a0:	mov    rax,QWORD PTR [rcx]
   1400044a3:	ret    
   1400044a4:	int3   
   1400044a5:	int3   
   1400044a6:	int3   
   1400044a7:	int3   
   1400044a8:	int3   
   1400044a9:	int3   
   1400044aa:	int3   
   1400044ab:	int3   
   1400044ac:	int3   
   1400044ad:	int3   
   1400044ae:	int3   
   1400044af:	int3   
   1400044b0:	mov    rax,QWORD PTR [rcx]
   1400044b3:	ret    
   1400044b4:	int3   
   1400044b5:	int3   
   1400044b6:	int3   
   1400044b7:	int3   
   1400044b8:	int3   
   1400044b9:	int3   
   1400044ba:	int3   
   1400044bb:	int3   
   1400044bc:	int3   
   1400044bd:	int3   
   1400044be:	int3   
   1400044bf:	int3   
   1400044c0:	mov    rax,QWORD PTR [rcx]
   1400044c3:	mov    r8,rcx
   1400044c6:	cmp    BYTE PTR [rax+0x19],0x0
   1400044ca:	mov    QWORD PTR [rdx],rax
   1400044cd:	jne    0x140004519
   1400044cf:	mov    rcx,QWORD PTR [rax+0x10]
   1400044d3:	cmp    BYTE PTR [rcx+0x19],0x0
   1400044d7:	jne    0x1400044f5
   1400044d9:	mov    rax,QWORD PTR [rcx]
   1400044dc:	cmp    BYTE PTR [rax+0x19],0x0
   1400044e0:	jne    0x1400044ee
   1400044e2:	mov    rcx,rax
   1400044e5:	mov    rax,QWORD PTR [rax]
   1400044e8:	cmp    BYTE PTR [rax+0x19],0x0
   1400044ec:	je     0x1400044e2
   1400044ee:	mov    QWORD PTR [r8],rcx
   1400044f1:	mov    rax,rdx
   1400044f4:	ret    
   1400044f5:	mov    rax,QWORD PTR [rax+0x8]
   1400044f9:	cmp    BYTE PTR [rax+0x19],0x0
   1400044fd:	jne    0x140004516
   1400044ff:	nop
   140004500:	mov    rcx,QWORD PTR [rax+0x10]
   140004504:	cmp    QWORD PTR [r8],rcx
   140004507:	jne    0x140004516
   140004509:	mov    QWORD PTR [r8],rax
   14000450c:	mov    rax,QWORD PTR [rax+0x8]
   140004510:	cmp    BYTE PTR [rax+0x19],0x0
   140004514:	je     0x140004500
   140004516:	mov    QWORD PTR [r8],rax
   140004519:	mov    rax,rdx
   14000451c:	ret    
   14000451d:	int3   
   14000451e:	int3   
   14000451f:	int3   
   140004520:	mov    rax,QWORD PTR [rcx]
   140004523:	mov    rdx,rcx
   140004526:	cmp    BYTE PTR [rax+0x19],0x0
   14000452a:	jne    0x140004579
   14000452c:	mov    rcx,QWORD PTR [rax+0x10]
   140004530:	cmp    BYTE PTR [rcx+0x19],0x0
   140004534:	jne    0x140004553
   140004536:	mov    rax,QWORD PTR [rcx]
   140004539:	cmp    BYTE PTR [rax+0x19],0x0
   14000453d:	jne    0x14000454c
   14000453f:	nop
   140004540:	mov    rcx,rax
   140004543:	mov    rax,QWORD PTR [rax]
   140004546:	cmp    BYTE PTR [rax+0x19],0x0
   14000454a:	je     0x140004540
   14000454c:	mov    QWORD PTR [rdx],rcx
   14000454f:	mov    rax,rdx
   140004552:	ret    
   140004553:	mov    rax,QWORD PTR [rax+0x8]
   140004557:	cmp    BYTE PTR [rax+0x19],0x0
   14000455b:	jne    0x140004576
   14000455d:	nop    DWORD PTR [rax]
   140004560:	mov    rcx,QWORD PTR [rax+0x10]
   140004564:	cmp    QWORD PTR [rdx],rcx
   140004567:	jne    0x140004576
   140004569:	mov    QWORD PTR [rdx],rax
   14000456c:	mov    rax,QWORD PTR [rax+0x8]
   140004570:	cmp    BYTE PTR [rax+0x19],0x0
   140004574:	je     0x140004560
   140004576:	mov    QWORD PTR [rdx],rax
   140004579:	mov    rax,rdx
   14000457c:	ret    
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	mov    rax,QWORD PTR [rcx]
   140004583:	mov    rdx,rcx
   140004586:	cmp    BYTE PTR [rax+0x19],0x0
   14000458a:	jne    0x1400045d9
   14000458c:	mov    rcx,QWORD PTR [rax+0x10]
   140004590:	cmp    BYTE PTR [rcx+0x19],0x0
   140004594:	jne    0x1400045b3
   140004596:	mov    rax,QWORD PTR [rcx]
   140004599:	cmp    BYTE PTR [rax+0x19],0x0
   14000459d:	jne    0x1400045ac
   14000459f:	nop
   1400045a0:	mov    rcx,rax
   1400045a3:	mov    rax,QWORD PTR [rax]
   1400045a6:	cmp    BYTE PTR [rax+0x19],0x0
   1400045aa:	je     0x1400045a0
   1400045ac:	mov    QWORD PTR [rdx],rcx
   1400045af:	mov    rax,rdx
   1400045b2:	ret    
   1400045b3:	mov    rax,QWORD PTR [rax+0x8]
   1400045b7:	cmp    BYTE PTR [rax+0x19],0x0
   1400045bb:	jne    0x1400045d6
   1400045bd:	nop    DWORD PTR [rax]
   1400045c0:	mov    rcx,QWORD PTR [rax+0x10]
   1400045c4:	cmp    QWORD PTR [rdx],rcx
   1400045c7:	jne    0x1400045d6
   1400045c9:	mov    QWORD PTR [rdx],rax
   1400045cc:	mov    rax,QWORD PTR [rax+0x8]
   1400045d0:	cmp    BYTE PTR [rax+0x19],0x0
   1400045d4:	je     0x1400045c0
   1400045d6:	mov    QWORD PTR [rdx],rax
   1400045d9:	mov    rax,rdx
   1400045dc:	ret    
   1400045dd:	int3   
   1400045de:	int3   
   1400045df:	int3   
   1400045e0:	rex push rbx
   1400045e2:	sub    rsp,0x20
   1400045e6:	mov    rbx,rcx
   1400045e9:	call   0x140004600
   1400045ee:	mov    rax,rbx
   1400045f1:	add    rsp,0x20
   1400045f5:	pop    rbx
   1400045f6:	ret    
   1400045f7:	int3   
   1400045f8:	int3   
   1400045f9:	int3   
   1400045fa:	int3   
   1400045fb:	int3   
   1400045fc:	int3   
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	mov    rax,QWORD PTR [rcx]
   140004603:	mov    rdx,rcx
   140004606:	cmp    BYTE PTR [rax+0x19],0x0
   14000460a:	je     0x140004617
   14000460c:	mov    rax,QWORD PTR [rax+0x10]
   140004610:	mov    QWORD PTR [rcx],rax
   140004613:	mov    rax,rcx
   140004616:	ret    
   140004617:	mov    rcx,QWORD PTR [rax]
   14000461a:	cmp    BYTE PTR [rcx+0x19],0x0
   14000461e:	jne    0x140004644
   140004620:	mov    rax,QWORD PTR [rcx+0x10]
   140004624:	cmp    BYTE PTR [rax+0x19],0x0
   140004628:	jne    0x14000466e
   14000462a:	nop    WORD PTR [rax+rax*1+0x0]
   140004630:	mov    rcx,rax
   140004633:	mov    rax,QWORD PTR [rax+0x10]
   140004637:	cmp    BYTE PTR [rax+0x19],0x0
   14000463b:	je     0x140004630
   14000463d:	mov    QWORD PTR [rdx],rcx
   140004640:	mov    rax,rdx
   140004643:	ret    
   140004644:	mov    rcx,QWORD PTR [rax+0x8]
   140004648:	cmp    BYTE PTR [rcx+0x19],0x0
   14000464c:	jne    0x140004665
   14000464e:	xchg   ax,ax
   140004650:	mov    rax,QWORD PTR [rcx]
   140004653:	cmp    QWORD PTR [rdx],rax
   140004656:	jne    0x140004665
   140004658:	mov    QWORD PTR [rdx],rcx
   14000465b:	mov    rcx,QWORD PTR [rcx+0x8]
   14000465f:	cmp    BYTE PTR [rcx+0x19],0x0
   140004663:	je     0x140004650
   140004665:	mov    rax,QWORD PTR [rdx]
   140004668:	cmp    BYTE PTR [rax+0x19],0x0
   14000466c:	jne    0x140004671
   14000466e:	mov    QWORD PTR [rdx],rcx
   140004671:	mov    rax,rdx
   140004674:	ret    
   140004675:	int3   
   140004676:	int3   
   140004677:	int3   
   140004678:	int3   
   140004679:	int3   
   14000467a:	int3   
   14000467b:	int3   
   14000467c:	int3   
   14000467d:	int3   
   14000467e:	int3   
   14000467f:	int3   
   140004680:	mov    rax,QWORD PTR [rcx]
   140004683:	sub    rax,QWORD PTR [rdx]
   140004686:	ret    
   140004687:	int3   
   140004688:	int3   
   140004689:	int3   
   14000468a:	int3   
   14000468b:	int3   
   14000468c:	int3   
   14000468d:	int3   
   14000468e:	int3   
   14000468f:	int3   
   140004690:	mov    rax,QWORD PTR [rcx]
   140004693:	sub    rax,QWORD PTR [rdx]
   140004696:	ret    
   140004697:	int3   
   140004698:	int3   
   140004699:	int3   
   14000469a:	int3   
   14000469b:	int3   
   14000469c:	int3   
   14000469d:	int3   
   14000469e:	int3   
   14000469f:	int3   
   1400046a0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400046a4:	movsxd r8,r8d
   1400046a7:	rex.W jmp QWORD PTR [rip+0x14a9a]        # 0x140019148
   1400046ae:	int3   
   1400046af:	int3   
   1400046b0:	mov    rcx,rdx
   1400046b3:	jmp    0x140017316
   1400046b8:	int3   
   1400046b9:	int3   
   1400046ba:	int3   
   1400046bb:	int3   
   1400046bc:	int3   
   1400046bd:	int3   
   1400046be:	int3   
   1400046bf:	int3   
   1400046c0:	mov    rcx,rdx
   1400046c3:	jmp    0x14001716e
   1400046c8:	int3   
   1400046c9:	int3   
   1400046ca:	int3   
   1400046cb:	int3   
   1400046cc:	int3   
   1400046cd:	int3   
   1400046ce:	int3   
   1400046cf:	int3   
   1400046d0:	mov    r8,rdx
   1400046d3:	test   rdx,rdx
   1400046d6:	je     0x1400046e6
   1400046d8:	mov    rax,QWORD PTR [rdx]
   1400046db:	mov    rcx,r8
   1400046de:	mov    edx,0x1
   1400046e3:	rex.W jmp QWORD PTR [rax]
   1400046e6:	ret    
   1400046e7:	int3   
   1400046e8:	int3   
   1400046e9:	int3   
   1400046ea:	int3   
   1400046eb:	int3   
   1400046ec:	int3   
   1400046ed:	int3   
   1400046ee:	int3   
   1400046ef:	int3   
   1400046f0:	sub    rsp,0x28
   1400046f4:	mov    rcx,rdx
   1400046f7:	mov    rdx,r8
   1400046fa:	call   0x140006c10
   1400046ff:	test   eax,eax
   140004701:	sets   al
   140004704:	add    rsp,0x28
   140004708:	ret    
   140004709:	int3   
   14000470a:	int3   
   14000470b:	int3   
   14000470c:	int3   
   14000470d:	int3   
   14000470e:	int3   
   14000470f:	int3   
   140004710:	ret    0x0
   140004713:	int3   
   140004714:	int3   
   140004715:	int3   
   140004716:	int3   
   140004717:	int3   
   140004718:	int3   
   140004719:	int3   
   14000471a:	int3   
   14000471b:	int3   
   14000471c:	int3   
   14000471d:	int3   
   14000471e:	int3   
   14000471f:	int3   
   140004720:	or     r9,0xffffffffffffffff
   140004724:	xor    r8d,r8d
   140004727:	jmp    0x140006230
   14000472c:	int3   
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	cmp    BYTE PTR [rdx],0x0
   140004733:	jne    0x14000473d
   140004735:	xor    r8d,r8d
   140004738:	jmp    0x140006370
   14000473d:	or     r8,0xffffffffffffffff
   140004741:	inc    r8
   140004744:	cmp    BYTE PTR [rdx+r8*1],0x0
   140004749:	jne    0x140004741
   14000474b:	jmp    0x140006370
   140004750:	rex push rbx
   140004752:	sub    rsp,0x20
   140004756:	mov    rax,QWORD PTR [rcx]
   140004759:	lea    rbx,[rcx+0xb0]
   140004760:	movsxd rcx,DWORD PTR [rax+0x4]
   140004764:	lea    rax,[rip+0x16455]        # 0x14001abc0
   14000476b:	mov    QWORD PTR [rcx+rbx*1-0xb0],rax
   140004773:	mov    rax,QWORD PTR [rbx-0xb0]
   14000477a:	lea    rcx,[rbx-0xa0]
   140004781:	movsxd rdx,DWORD PTR [rax+0x4]
   140004785:	lea    r8d,[rdx-0xb0]
   14000478c:	mov    DWORD PTR [rdx+rbx*1-0xb4],r8d
   140004794:	call   0x140003b60
   140004799:	lea    rcx,[rbx-0x98]
   1400047a0:	call   QWORD PTR [rip+0x149c2]        # 0x140019168
   1400047a6:	mov    rax,QWORD PTR [rip+0x149fb]        # 0x1400191a8
   1400047ad:	mov    rcx,rbx
   1400047b0:	mov    QWORD PTR [rbx],rax
   1400047b3:	mov    rax,QWORD PTR [rip+0x149e6]        # 0x1400191a0
   1400047ba:	mov    QWORD PTR [rbx],rax
   1400047bd:	add    rsp,0x20
   1400047c1:	pop    rbx
   1400047c2:	rex.W jmp QWORD PTR [rip+0x148d7]        # 0x1400190a0
   1400047c9:	int3   
   1400047ca:	int3   
   1400047cb:	int3   
   1400047cc:	int3   
   1400047cd:	int3   
   1400047ce:	int3   
   1400047cf:	int3   
   1400047d0:	rex push rbx
   1400047d2:	sub    rsp,0x20
   1400047d6:	mov    rax,QWORD PTR [rcx]
   1400047d9:	lea    rbx,[rcx+0xa8]
   1400047e0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400047e4:	lea    rax,[rip+0x15d65]        # 0x14001a550
   1400047eb:	mov    QWORD PTR [rcx+rbx*1-0xa8],rax
   1400047f3:	mov    rax,QWORD PTR [rbx-0xa8]
   1400047fa:	lea    rcx,[rbx-0xa0]
   140004801:	movsxd rdx,DWORD PTR [rax+0x4]
   140004805:	lea    r8d,[rdx-0xa8]
   14000480c:	mov    DWORD PTR [rdx+rbx*1-0xac],r8d
   140004814:	call   0x140003b60
   140004819:	lea    rcx,[rbx-0x98]
   140004820:	call   QWORD PTR [rip+0x148ea]        # 0x140019110
   140004826:	mov    rax,QWORD PTR [rip+0x1497b]        # 0x1400191a8
   14000482d:	mov    rcx,rbx
   140004830:	mov    QWORD PTR [rbx],rax
   140004833:	mov    rax,QWORD PTR [rip+0x14966]        # 0x1400191a0
   14000483a:	mov    QWORD PTR [rbx],rax
   14000483d:	add    rsp,0x20
   140004841:	pop    rbx
   140004842:	rex.W jmp QWORD PTR [rip+0x14857]        # 0x1400190a0
   140004849:	int3   
   14000484a:	int3   
   14000484b:	int3   
   14000484c:	movsxd rax,DWORD PTR [rcx-0x4]
   140004850:	sub    rcx,rax
   140004853:	jmp    0x1400048d0
   140004858:	movsxd rax,DWORD PTR [rcx-0x4]
   14000485c:	sub    rcx,rax
   14000485f:	jmp    0x140004910
   140004864:	int3   
   140004865:	int3   
   140004866:	int3   
   140004867:	int3   
   140004868:	int3   
   140004869:	int3   
   14000486a:	int3   
   14000486b:	int3   
   14000486c:	int3   
   14000486d:	int3   
   14000486e:	int3   
   14000486f:	int3   
   140004870:	rex push rbx
   140004872:	sub    rsp,0x20
   140004876:	lea    rax,[rip+0x15bc3]        # 0x14001a440
   14000487d:	mov    rbx,rcx
   140004880:	mov    QWORD PTR [rcx],rax
   140004883:	test   dl,0x1
   140004886:	je     0x14000488d
   140004888:	call   0x14001716e
   14000488d:	mov    rax,rbx
   140004890:	add    rsp,0x20
   140004894:	pop    rbx
   140004895:	ret    
   140004896:	int3   
   140004897:	int3   
   140004898:	int3   
   140004899:	int3   
   14000489a:	int3   
   14000489b:	int3   
   14000489c:	int3   
   14000489d:	int3   
   14000489e:	int3   
   14000489f:	int3   
   1400048a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048a5:	push   rdi
   1400048a6:	sub    rsp,0x20
   1400048aa:	mov    ebx,edx
   1400048ac:	mov    rdi,rcx
   1400048af:	call   0x140003b60
   1400048b4:	test   bl,0x1
   1400048b7:	je     0x1400048c1
   1400048b9:	mov    rcx,rdi
   1400048bc:	call   0x14001716e
   1400048c1:	mov    rax,rdi
   1400048c4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400048c9:	add    rsp,0x20
   1400048cd:	pop    rdi
   1400048ce:	ret    
   1400048cf:	int3   
   1400048d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400048d5:	push   rdi
   1400048d6:	sub    rsp,0x20
   1400048da:	lea    rdi,[rcx-0xb0]
   1400048e1:	mov    ebx,edx
   1400048e3:	mov    rcx,rdi
   1400048e6:	call   0x140004750
   1400048eb:	test   bl,0x1
   1400048ee:	je     0x1400048f8
   1400048f0:	mov    rcx,rdi
   1400048f3:	call   0x14001716e
   1400048f8:	mov    rax,rdi
   1400048fb:	mov    rbx,QWORD PTR [rsp+0x30]
   140004900:	add    rsp,0x20
   140004904:	pop    rdi
   140004905:	ret    
   140004906:	int3   
   140004907:	int3   
   140004908:	int3   
   140004909:	int3   
   14000490a:	int3   
   14000490b:	int3   
   14000490c:	int3   
   14000490d:	int3   
   14000490e:	int3   
   14000490f:	int3   
   140004910:	mov    QWORD PTR [rsp+0x8],rbx
   140004915:	push   rdi
   140004916:	sub    rsp,0x20
   14000491a:	lea    rdi,[rcx-0xa8]
   140004921:	mov    ebx,edx
   140004923:	mov    rcx,rdi
   140004926:	call   0x1400047d0
   14000492b:	test   bl,0x1
   14000492e:	je     0x140004938
   140004930:	mov    rcx,rdi
   140004933:	call   0x14001716e
   140004938:	mov    rax,rdi
   14000493b:	mov    rbx,QWORD PTR [rsp+0x30]
   140004940:	add    rsp,0x20
   140004944:	pop    rdi
   140004945:	ret    
   140004946:	int3   
   140004947:	int3   
   140004948:	int3   
   140004949:	int3   
   14000494a:	int3   
   14000494b:	int3   
   14000494c:	int3   
   14000494d:	int3   
   14000494e:	int3   
   14000494f:	int3   
   140004950:	mov    QWORD PTR [rsp+0x8],rbx
   140004955:	push   rdi
   140004956:	sub    rsp,0x20
   14000495a:	cmp    QWORD PTR [rcx+0x18],0x10
   14000495f:	mov    edi,edx
   140004961:	mov    rbx,rcx
   140004964:	jb     0x14000496e
   140004966:	mov    rcx,QWORD PTR [rcx]
   140004969:	call   0x14001716e
   14000496e:	mov    QWORD PTR [rbx+0x18],0xf
   140004976:	mov    QWORD PTR [rbx+0x10],0x0
   14000497e:	mov    BYTE PTR [rbx],0x0
   140004981:	test   dil,0x1
   140004985:	je     0x14000498f
   140004987:	mov    rcx,rbx
   14000498a:	call   0x14001716e
   14000498f:	mov    rax,rbx
   140004992:	mov    rbx,QWORD PTR [rsp+0x30]
   140004997:	add    rsp,0x20
   14000499b:	pop    rdi
   14000499c:	ret    
   14000499d:	int3   
   14000499e:	int3   
   14000499f:	int3   
   1400049a0:	rex push rbx
   1400049a2:	sub    rsp,0x20
   1400049a6:	lea    rax,[rip+0x15a33]        # 0x14001a3e0
   1400049ad:	mov    rbx,rcx
   1400049b0:	mov    QWORD PTR [rcx],rax
   1400049b3:	test   dl,0x1
   1400049b6:	je     0x1400049bd
   1400049b8:	call   0x14001716e
   1400049bd:	mov    rax,rbx
   1400049c0:	add    rsp,0x20
   1400049c4:	pop    rbx
   1400049c5:	ret    
   1400049c6:	int3   
   1400049c7:	int3   
   1400049c8:	int3   
   1400049c9:	int3   
   1400049ca:	int3   
   1400049cb:	int3   
   1400049cc:	int3   
   1400049cd:	int3   
   1400049ce:	int3   
   1400049cf:	int3   
   1400049d0:	rex push rbx
   1400049d2:	sub    rsp,0x20
   1400049d6:	lea    rax,[rip+0x15a03]        # 0x14001a3e0
   1400049dd:	mov    rbx,rcx
   1400049e0:	mov    QWORD PTR [rcx],rax
   1400049e3:	test   dl,0x1
   1400049e6:	je     0x1400049ed
   1400049e8:	call   0x14001716e
   1400049ed:	mov    rax,rbx
   1400049f0:	add    rsp,0x20
   1400049f4:	pop    rbx
   1400049f5:	ret    
   1400049f6:	int3   
   1400049f7:	int3   
   1400049f8:	int3   
   1400049f9:	int3   
   1400049fa:	int3   
   1400049fb:	int3   
   1400049fc:	int3   
   1400049fd:	int3   
   1400049fe:	int3   
   1400049ff:	int3   
   140004a00:	rex push rbx
   140004a02:	sub    rsp,0x20
   140004a06:	lea    rax,[rip+0x15a33]        # 0x14001a440
   140004a0d:	mov    rbx,rcx
   140004a10:	mov    QWORD PTR [rcx],rax
   140004a13:	test   dl,0x1
   140004a16:	je     0x140004a1d
   140004a18:	call   0x14001716e
   140004a1d:	mov    rax,rbx
   140004a20:	add    rsp,0x20
   140004a24:	pop    rbx
   140004a25:	ret    
   140004a26:	int3   
   140004a27:	int3   
   140004a28:	int3   
   140004a29:	int3   
   140004a2a:	int3   
   140004a2b:	int3   
   140004a2c:	int3   
   140004a2d:	int3   
   140004a2e:	int3   
   140004a2f:	int3   
   140004a30:	rex push rbx
   140004a32:	sub    rsp,0x20
   140004a36:	lea    rax,[rip+0x159a3]        # 0x14001a3e0
   140004a3d:	mov    rbx,rcx
   140004a40:	mov    QWORD PTR [rcx],rax
   140004a43:	test   dl,0x1
   140004a46:	je     0x140004a4d
   140004a48:	call   0x14001716e
   140004a4d:	mov    rax,rbx
   140004a50:	add    rsp,0x20
   140004a54:	pop    rbx
   140004a55:	ret    
   140004a56:	int3   
   140004a57:	int3   
   140004a58:	int3   
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	mov    QWORD PTR [rsp+0x8],rbx
   140004a65:	push   rdi
   140004a66:	sub    rsp,0x20
   140004a6a:	mov    ebx,edx
   140004a6c:	mov    rdi,rcx
   140004a6f:	call   0x140003d80
   140004a74:	test   bl,0x1
   140004a77:	je     0x140004a81
   140004a79:	mov    rcx,rdi
   140004a7c:	call   0x14001716e
   140004a81:	mov    rax,rdi
   140004a84:	mov    rbx,QWORD PTR [rsp+0x30]
   140004a89:	add    rsp,0x20
   140004a8d:	pop    rdi
   140004a8e:	ret    
   140004a8f:	int3   
   140004a90:	rex push rbx
   140004a92:	sub    rsp,0x20
   140004a96:	lea    rax,[rip+0x1581b]        # 0x14001a2b8
   140004a9d:	mov    rbx,rcx
   140004aa0:	mov    QWORD PTR [rcx],rax
   140004aa3:	test   dl,0x1
   140004aa6:	je     0x140004aad
   140004aa8:	call   0x14001716e
   140004aad:	mov    rax,rbx
   140004ab0:	add    rsp,0x20
   140004ab4:	pop    rbx
   140004ab5:	ret    
   140004ab6:	int3   
   140004ab7:	int3   
   140004ab8:	int3   
   140004ab9:	int3   
   140004aba:	int3   
   140004abb:	int3   
   140004abc:	int3   
   140004abd:	int3   
   140004abe:	int3   
   140004abf:	int3   
   140004ac0:	rex push rbx
   140004ac2:	sub    rsp,0x20
   140004ac6:	lea    rax,[rip+0x157eb]        # 0x14001a2b8
   140004acd:	mov    rbx,rcx
   140004ad0:	mov    QWORD PTR [rcx],rax
   140004ad3:	test   dl,0x1
   140004ad6:	je     0x140004add
   140004ad8:	call   0x14001716e
   140004add:	mov    rax,rbx
   140004ae0:	add    rsp,0x20
   140004ae4:	pop    rbx
   140004ae5:	ret    
   140004ae6:	int3   
   140004ae7:	int3   
   140004ae8:	int3   
   140004ae9:	int3   
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	int3   
   140004aed:	int3   
   140004aee:	int3   
   140004aef:	int3   
   140004af0:	rex push rbx
   140004af2:	sub    rsp,0x20
   140004af6:	lea    rax,[rip+0x157bb]        # 0x14001a2b8
   140004afd:	mov    rbx,rcx
   140004b00:	mov    QWORD PTR [rcx],rax
   140004b03:	test   dl,0x1
   140004b06:	je     0x140004b0d
   140004b08:	call   0x14001716e
   140004b0d:	mov    rax,rbx
   140004b10:	add    rsp,0x20
   140004b14:	pop    rbx
   140004b15:	ret    
   140004b16:	int3   
   140004b17:	int3   
   140004b18:	int3   
   140004b19:	int3   
   140004b1a:	int3   
   140004b1b:	int3   
   140004b1c:	int3   
   140004b1d:	int3   
   140004b1e:	int3   
   140004b1f:	int3   
   140004b20:	rex push rbx
   140004b22:	sub    rsp,0x20
   140004b26:	lea    rax,[rip+0x1578b]        # 0x14001a2b8
   140004b2d:	mov    rbx,rcx
   140004b30:	mov    QWORD PTR [rcx],rax
   140004b33:	test   dl,0x1
   140004b36:	je     0x140004b3d
   140004b38:	call   0x14001716e
   140004b3d:	mov    rax,rbx
   140004b40:	add    rsp,0x20
   140004b44:	pop    rbx
   140004b45:	ret    
   140004b46:	int3   
   140004b47:	int3   
   140004b48:	int3   
   140004b49:	int3   
   140004b4a:	int3   
   140004b4b:	int3   
   140004b4c:	int3   
   140004b4d:	int3   
   140004b4e:	int3   
   140004b4f:	int3   
   140004b50:	mov    QWORD PTR [rsp+0x8],rbx
   140004b55:	push   rdi
   140004b56:	sub    rsp,0x20
   140004b5a:	mov    ebx,edx
   140004b5c:	mov    rdi,rcx
   140004b5f:	call   QWORD PTR [rip+0x14733]        # 0x140019298
   140004b65:	test   bl,0x1
   140004b68:	je     0x140004b72
   140004b6a:	mov    rcx,rdi
   140004b6d:	call   0x14001716e
   140004b72:	mov    rax,rdi
   140004b75:	mov    rbx,QWORD PTR [rsp+0x30]
   140004b7a:	add    rsp,0x20
   140004b7e:	pop    rdi
   140004b7f:	ret    
   140004b80:	mov    QWORD PTR [rsp+0x8],rbx
   140004b85:	mov    QWORD PTR [rsp+0x10],rbp
   140004b8a:	mov    QWORD PTR [rsp+0x18],rsi
   140004b8f:	push   rdi
   140004b90:	sub    rsp,0x20
   140004b94:	mov    edi,r8d
   140004b97:	mov    rsi,r9
   140004b9a:	mov    rbp,rdx
   140004b9d:	dec    edi
   140004b9f:	mov    rbx,rcx
   140004ba2:	js     0x140004bb0
   140004ba4:	mov    rcx,rbx
   140004ba7:	call   rsi
   140004ba9:	add    rbx,rbp
   140004bac:	dec    edi
   140004bae:	jns    0x140004ba4
   140004bb0:	mov    rbx,QWORD PTR [rsp+0x30]
   140004bb5:	mov    rbp,QWORD PTR [rsp+0x38]
   140004bba:	mov    rsi,QWORD PTR [rsp+0x40]
   140004bbf:	add    rsp,0x20
   140004bc3:	pop    rdi
   140004bc4:	ret    
   140004bc5:	int3   
   140004bc6:	int3   
   140004bc7:	int3   
   140004bc8:	int3   
   140004bc9:	int3   
   140004bca:	int3   
   140004bcb:	int3   
   140004bcc:	int3   
   140004bcd:	int3   
   140004bce:	int3   
   140004bcf:	int3   
   140004bd0:	mov    QWORD PTR [rsp+0x10],rbx
   140004bd5:	push   rdi
   140004bd6:	sub    rsp,0x50
   140004bda:	mov    rbx,rdx
   140004bdd:	mov    rdx,QWORD PTR [rdx+0x10]
   140004be1:	mov    rdi,rcx
   140004be4:	cmp    QWORD PTR [rbx+0x18],0x10
   140004be9:	jb     0x140004bf0
   140004beb:	mov    rax,QWORD PTR [rbx]
   140004bee:	jmp    0x140004bf3
   140004bf0:	mov    rax,rbx
   140004bf3:	cmp    BYTE PTR [rax+rdx*1-0x1],0x2f
   140004bf8:	je     0x140004c14
   140004bfa:	lea    rdx,[rip+0x15a0f]        # 0x14001a610
   140004c01:	lea    rcx,[rip+0x15a98]        # 0x14001a6a0
   140004c08:	mov    r8d,0xd8
   140004c0e:	call   QWORD PTR [rip+0x14604]        # 0x140019218
   140004c14:	movzx  eax,BYTE PTR [rip+0x1ca5f]        # 0x14002167a
   140004c1b:	lea    rcx,[rdi+0x68]
   140004c1f:	lea    rdx,[rsp+0x30]
   140004c24:	mov    r9,rbx
   140004c27:	xor    r8d,r8d
   140004c2a:	mov    BYTE PTR [rsp+0x20],al
   140004c2e:	call   0x140002180
   140004c33:	cmp    BYTE PTR [rsp+0x38],0x0
   140004c38:	je     0x140004c90
   140004c3a:	mov    rcx,QWORD PTR [rip+0x1457f]        # 0x1400191c0
   140004c41:	lea    rdx,[rip+0x15aa8]        # 0x14001a6f0
   140004c48:	call   0x1400014f0
   140004c4d:	mov    rdx,rbx
   140004c50:	mov    rcx,rax
   140004c53:	call   0x140001320
   140004c58:	lea    rdx,[rip+0xffffffffffffdef1]        # 0x140002b50
   140004c5f:	mov    rcx,rax
   140004c62:	call   QWORD PTR [rip+0x144b8]        # 0x140019120
   140004c68:	cmp    QWORD PTR [rbx+0x18],0x10
   140004c6d:	jb     0x140004c72
   140004c6f:	mov    rbx,QWORD PTR [rbx]
   140004c72:	mov    rcx,QWORD PTR [rdi+0x50]
   140004c76:	xor    r9d,r9d
   140004c79:	xor    r8d,r8d
   140004c7c:	mov    rdx,rbx
   140004c7f:	mov    DWORD PTR [rsp+0x20],0x0
   140004c87:	call   0x140010130
   140004c8c:	test   eax,eax
   140004c8e:	je     0x140004c9b
   140004c90:	mov    rbx,QWORD PTR [rsp+0x68]
   140004c95:	add    rsp,0x50
   140004c99:	pop    rdi
   140004c9a:	ret    
   140004c9b:	lea    rax,[rip+0x15a66]        # 0x14001a708
   140004ca2:	lea    rdx,[rsp+0x60]
   140004ca7:	lea    rcx,[rsp+0x30]
   140004cac:	mov    QWORD PTR [rsp+0x60],rax
   140004cb1:	call   QWORD PTR [rip+0x145d1]        # 0x140019288
   140004cb7:	lea    rax,[rip+0x155e2]        # 0x14001a2a0
   140004cbe:	lea    rdx,[rip+0x1a863]        # 0x14001f528
   140004cc5:	lea    rcx,[rsp+0x30]
   140004cca:	mov    QWORD PTR [rsp+0x30],rax
   140004ccf:	call   0x140017334
   140004cd4:	int3   
   140004cd5:	int3   
   140004cd6:	int3   
   140004cd7:	int3   
   140004cd8:	int3   
   140004cd9:	int3   
   140004cda:	int3   
   140004cdb:	int3   
   140004cdc:	int3   
   140004cdd:	int3   
   140004cde:	int3   
   140004cdf:	int3   
   140004ce0:	mov    rax,rsp
   140004ce3:	push   rbp
   140004ce4:	push   rdi
   140004ce5:	push   r14
   140004ce7:	lea    rbp,[rax-0x5f]
   140004ceb:	sub    rsp,0xc0
   140004cf2:	mov    QWORD PTR [rbp+0x37],0xfffffffffffffffe
   140004cfa:	mov    QWORD PTR [rax+0x10],rbx
   140004cfe:	mov    QWORD PTR [rax+0x18],rsi
   140004d02:	movzx  esi,r8b
   140004d06:	mov    rbx,rdx
   140004d09:	mov    rdi,rcx
   140004d0c:	cmp    QWORD PTR [rcx+0x40],0x0
   140004d11:	jne    0x140004d48
   140004d13:	lea    rax,[rip+0x15876]        # 0x14001a590
   140004d1a:	mov    QWORD PTR [rbp+0x67],rax
   140004d1e:	lea    rdx,[rbp+0x67]
   140004d22:	lea    rcx,[rbp-0x29]
   140004d26:	call   QWORD PTR [rip+0x1455c]        # 0x140019288
   140004d2c:	lea    rax,[rip+0x1556d]        # 0x14001a2a0
   140004d33:	mov    QWORD PTR [rbp-0x29],rax
   140004d37:	lea    rdx,[rip+0x1a7ea]        # 0x14001f528
   140004d3e:	lea    rcx,[rbp-0x29]
   140004d42:	call   0x140017334
   140004d47:	int3   
   140004d48:	mov    QWORD PTR [rbp+0xf],0xf
   140004d50:	xor    r14d,r14d
   140004d53:	mov    QWORD PTR [rbp+0x7],r14
   140004d57:	mov    BYTE PTR [rbp-0x9],r14b
   140004d5b:	or     r9,0xffffffffffffffff
   140004d5f:	xor    r8d,r8d
   140004d62:	lea    rcx,[rbp-0x9]
   140004d66:	call   0x140006640
   140004d6b:	nop
   140004d6c:	test   sil,sil
   140004d6f:	je     0x140004e05
   140004d75:	lea    r9d,[r14+0x1]
   140004d79:	or     r8,0xffffffffffffffff
   140004d7d:	lea    rdx,[rip+0x15828]        # 0x14001a5ac
   140004d84:	mov    rcx,rbx
   140004d87:	call   0x140007640
   140004d8c:	cmp    rax,0xffffffffffffffff
   140004d90:	je     0x140004e05
   140004d92:	lea    r9d,[r14+0x1]
   140004d96:	or     r8,0xffffffffffffffff
   140004d9a:	lea    rdx,[rip+0x1580b]        # 0x14001a5ac
   140004da1:	mov    rcx,rbx
   140004da4:	call   0x140007640
   140004da9:	lea    r8,[rax+0x1]
   140004dad:	or     r9,0xffffffffffffffff
   140004db1:	lea    rdx,[rbp+0x17]
   140004db5:	mov    rcx,rbx
   140004db8:	call   0x14000a060
   140004dbd:	mov    rsi,rax
   140004dc0:	lea    rax,[rbp-0x9]
   140004dc4:	cmp    rax,rsi
   140004dc7:	je     0x140004df5
   140004dc9:	cmp    QWORD PTR [rbp+0xf],0x10
   140004dce:	jb     0x140004dd9
   140004dd0:	mov    rcx,QWORD PTR [rbp-0x9]
   140004dd4:	call   0x14001716e
   140004dd9:	mov    QWORD PTR [rbp+0xf],0xf
   140004de1:	mov    QWORD PTR [rbp+0x7],r14
   140004de5:	mov    BYTE PTR [rbp-0x9],0x0
   140004de9:	mov    rdx,rsi
   140004dec:	lea    rcx,[rbp-0x9]
   140004df0:	call   0x1400054f0
   140004df5:	cmp    QWORD PTR [rbp+0x2f],0x10
   140004dfa:	jb     0x140004e05
   140004dfc:	mov    rcx,QWORD PTR [rbp+0x17]
   140004e00:	call   0x14001716e
   140004e05:	lea    rdx,[rdi+0x30]
   140004e09:	lea    r8,[rip+0x157a0]        # 0x14001a5b0
   140004e10:	lea    rcx,[rbp+0x17]
   140004e14:	call   0x140001780
   140004e19:	nop
   140004e1a:	lea    r8,[rbp-0x9]
   140004e1e:	mov    rdx,rax
   140004e21:	lea    rcx,[rbp-0x49]
   140004e25:	call   0x1400016f0
   140004e2a:	nop
   140004e2b:	cmp    QWORD PTR [rbp+0x2f],0x10
   140004e30:	jb     0x140004e3b
   140004e32:	mov    rcx,QWORD PTR [rbp+0x17]
   140004e36:	call   0x14001716e
   140004e3b:	mov    QWORD PTR [rbp+0x2f],0xf
   140004e43:	mov    QWORD PTR [rbp+0x27],r14
   140004e47:	mov    BYTE PTR [rbp+0x17],0x0
   140004e4b:	lea    rdx,[rip+0x15766]        # 0x14001a5b8
   140004e52:	mov    rcx,QWORD PTR [rip+0x14367]        # 0x1400191c0
   140004e59:	call   0x1400014f0
   140004e5e:	mov    rcx,rax
   140004e61:	lea    rdx,[rbp-0x49]
   140004e65:	call   0x140001320
   140004e6a:	mov    rcx,rax
   140004e6d:	lea    rdx,[rip+0x1562c]        # 0x14001a4a0
   140004e74:	call   0x1400014f0
   140004e79:	mov    rcx,rax
   140004e7c:	lea    rdx,[rip+0xffffffffffffdccd]        # 0x140002b50
   140004e83:	call   QWORD PTR [rip+0x14297]        # 0x140019120
   140004e89:	lea    rcx,[rdi+0x58]
   140004e8d:	movzx  eax,BYTE PTR [rip+0x1c7e6]        # 0x14002167a
   140004e94:	mov    BYTE PTR [rsp+0x20],al
   140004e98:	lea    r9,[rbp-0x49]
   140004e9c:	xor    r8d,r8d
   140004e9f:	lea    rdx,[rbp-0x29]
   140004ea3:	call   0x140002180
   140004ea8:	cmp    BYTE PTR [rbp-0x21],0x0
   140004eac:	jne    0x140004ee3
   140004eae:	lea    rax,[rip+0x15713]        # 0x14001a5c8
   140004eb5:	mov    QWORD PTR [rbp+0x67],rax
   140004eb9:	lea    rdx,[rbp+0x67]
   140004ebd:	lea    rcx,[rbp-0x29]
   140004ec1:	call   QWORD PTR [rip+0x143c1]        # 0x140019288
   140004ec7:	lea    rax,[rip+0x153d2]        # 0x14001a2a0
   140004ece:	mov    QWORD PTR [rbp-0x29],rax
   140004ed2:	lea    rdx,[rip+0x1a64f]        # 0x14001f528
   140004ed9:	lea    rcx,[rbp-0x29]
   140004edd:	call   0x140017334
   140004ee2:	int3   
   140004ee3:	cmp    QWORD PTR [rbx+0x18],0x10
   140004ee8:	jb     0x140004eed
   140004eea:	mov    rbx,QWORD PTR [rbx]
   140004eed:	lea    rdx,[rbp-0x49]
   140004ef1:	cmp    QWORD PTR [rbp-0x31],0x10
   140004ef6:	cmovae rdx,QWORD PTR [rbp-0x49]
   140004efb:	mov    eax,DWORD PTR [rdi+0x28]
   140004efe:	mov    DWORD PTR [rsp+0x28],eax
   140004f02:	mov    WORD PTR [rsp+0x20],r14w
   140004f08:	xor    r9d,r9d
   140004f0b:	mov    r8,rbx
   140004f0e:	mov    rcx,QWORD PTR [rdi+0x50]
   140004f12:	call   0x14000f5f0
   140004f17:	test   eax,eax
   140004f19:	jne    0x140004f50
   140004f1b:	lea    rax,[rip+0x156ce]        # 0x14001a5f0
   140004f22:	mov    QWORD PTR [rbp+0x67],rax
   140004f26:	lea    rdx,[rbp+0x67]
   140004f2a:	lea    rcx,[rbp-0x29]
   140004f2e:	call   QWORD PTR [rip+0x14354]        # 0x140019288
   140004f34:	lea    rax,[rip+0x15365]        # 0x14001a2a0
   140004f3b:	mov    QWORD PTR [rbp-0x29],rax
   140004f3f:	lea    rdx,[rip+0x1a5e2]        # 0x14001f528
   140004f46:	lea    rcx,[rbp-0x29]
   140004f4a:	call   0x140017334
   140004f4f:	int3   
   140004f50:	mov    r9d,0x1
   140004f56:	xor    r8d,r8d
   140004f59:	lea    rdx,[rip+0x15650]        # 0x14001a5b0
   140004f60:	lea    rcx,[rbp-0x49]
   140004f64:	call   0x140007510
   140004f69:	cmp    rax,0xffffffffffffffff
   140004f6d:	je     0x140004fc3
   140004f6f:	nop
   140004f70:	lea    rbx,[rax+0x1]
   140004f74:	mov    r9,rbx
   140004f77:	xor    r8d,r8d
   140004f7a:	lea    rdx,[rbp-0x29]
   140004f7e:	lea    rcx,[rbp-0x49]
   140004f82:	call   0x14000a060
   140004f87:	nop
   140004f88:	mov    rdx,rax
   140004f8b:	mov    rcx,rdi
   140004f8e:	call   0x140004bd0
   140004f93:	nop
   140004f94:	cmp    QWORD PTR [rbp-0x11],0x10
   140004f99:	jb     0x140004fa4
   140004f9b:	mov    rcx,QWORD PTR [rbp-0x29]
   140004f9f:	call   0x14001716e
   140004fa4:	mov    r9d,0x1
   140004faa:	mov    r8,rbx
   140004fad:	lea    rdx,[rip+0x155fc]        # 0x14001a5b0
   140004fb4:	lea    rcx,[rbp-0x49]
   140004fb8:	call   0x140007510
   140004fbd:	cmp    rax,0xffffffffffffffff
   140004fc1:	jne    0x140004f70
   140004fc3:	cmp    QWORD PTR [rbp-0x31],0x10
   140004fc8:	jb     0x140004fd3
   140004fca:	mov    rcx,QWORD PTR [rbp-0x49]
   140004fce:	call   0x14001716e
   140004fd3:	mov    QWORD PTR [rbp-0x31],0xf
   140004fdb:	mov    QWORD PTR [rbp-0x39],r14
   140004fdf:	mov    BYTE PTR [rbp-0x49],0x0
   140004fe3:	cmp    QWORD PTR [rbp+0xf],0x10
   140004fe8:	jb     0x140004ff3
   140004fea:	mov    rcx,QWORD PTR [rbp-0x9]
   140004fee:	call   0x14001716e
   140004ff3:	lea    r11,[rsp+0xc0]
   140004ffb:	mov    rbx,QWORD PTR [r11+0x28]
   140004fff:	mov    rsi,QWORD PTR [r11+0x30]
   140005003:	mov    rsp,r11
   140005006:	pop    r14
   140005008:	pop    rdi
   140005009:	pop    rbp
   14000500a:	ret    
   14000500b:	int3   
   14000500c:	int3   
   14000500d:	int3   
   14000500e:	int3   
   14000500f:	int3   
   140005010:	mov    rax,rsp
   140005013:	push   r12
   140005015:	push   r14
   140005017:	push   r15
   140005019:	sub    rsp,0x290
   140005020:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140005029:	mov    QWORD PTR [rax+0x8],rbx
   14000502d:	mov    QWORD PTR [rax+0x18],rsi
   140005031:	mov    QWORD PTR [rax+0x20],rdi
   140005035:	mov    r14,rdx
   140005038:	mov    r15,rcx
   14000503b:	xor    edx,edx
   14000503d:	lea    r8d,[rdx+0x68]
   140005041:	lea    rcx,[rax-0x1f8]
   140005048:	call   0x14001734c
   14000504d:	lea    rdx,[rip+0x158c4]        # 0x14001a918
   140005054:	mov    rcx,QWORD PTR [rip+0x14165]        # 0x1400191c0
   14000505b:	call   0x1400014f0
   140005060:	mov    rcx,rax
   140005063:	mov    rdx,r14
   140005066:	call   0x140001320
   14000506b:	mov    rcx,rax
   14000506e:	lea    rdx,[rip+0x1589b]        # 0x14001a910
   140005075:	call   0x1400014f0
   14000507a:	mov    rcx,rax
   14000507d:	lea    rdx,[rip+0xffffffffffffdacc]        # 0x140002b50
   140005084:	call   QWORD PTR [rip+0x14096]        # 0x140019120
   14000508a:	cmp    QWORD PTR [r14+0x18],0x10
   14000508f:	jb     0x140005096
   140005091:	mov    rdx,QWORD PTR [r14]
   140005094:	jmp    0x140005099
   140005096:	mov    rdx,r14
   140005099:	xor    r8d,r8d
   14000509c:	lea    rcx,[rsp+0xb0]
   1400050a4:	call   0x14000e5c0
   1400050a9:	test   eax,eax
   1400050ab:	jne    0x14000510e
   1400050ad:	mov    r8,r14
   1400050b0:	lea    rdx,[rip+0x15879]        # 0x14001a930
   1400050b7:	lea    rcx,[rsp+0x30]
   1400050bc:	call   0x1400018b0
   1400050c1:	nop
   1400050c2:	cmp    QWORD PTR [rax+0x18],0x10
   1400050c7:	jb     0x1400050cc
   1400050c9:	mov    rax,QWORD PTR [rax]
   1400050cc:	mov    QWORD PTR [rsp+0x2b8],rax
   1400050d4:	lea    rdx,[rsp+0x2b8]
   1400050dc:	lea    rcx,[rsp+0x88]
   1400050e4:	call   QWORD PTR [rip+0x1419e]        # 0x140019288
   1400050ea:	lea    rax,[rip+0x151af]        # 0x14001a2a0
   1400050f1:	mov    QWORD PTR [rsp+0x88],rax
   1400050f9:	lea    rdx,[rip+0x1a428]        # 0x14001f528
   140005100:	lea    rcx,[rsp+0x88]
   140005108:	call   0x140017334
   14000510d:	nop
   14000510e:	lea    rcx,[rsp+0xb0]
   140005116:	call   0x14000e540
   14000511b:	mov    r12d,eax
   14000511e:	xor    ebx,ebx
   140005120:	mov    esi,ebx
   140005122:	cmp    esi,r12d
   140005125:	jae    0x140005448
   14000512b:	mov    r9d,0x104
   140005131:	lea    r8,[rsp+0x140]
   140005139:	mov    edx,esi
   14000513b:	lea    rcx,[rsp+0xb0]
   140005143:	call   0x14000e4b0
   140005148:	mov    edi,eax
   14000514a:	lea    rdx,[rip+0x1580f]        # 0x14001a960
   140005151:	mov    rcx,QWORD PTR [rip+0x14068]        # 0x1400191c0
   140005158:	call   0x1400014f0
   14000515d:	mov    rcx,rax
   140005160:	lea    rdx,[rsp+0x140]
   140005168:	call   0x1400014f0
   14000516d:	mov    rcx,rax
   140005170:	lea    rdx,[rip+0x157e1]        # 0x14001a958
   140005177:	call   0x1400014f0
   14000517c:	mov    rcx,rax
   14000517f:	mov    rdx,r14
   140005182:	call   0x140001320
   140005187:	mov    rcx,rax
   14000518a:	lea    rdx,[rip+0x157c3]        # 0x14001a954
   140005191:	call   0x1400014f0
   140005196:	mov    rcx,rax
   140005199:	lea    rdx,[rip+0xffffffffffffd9b0]        # 0x140002b50
   1400051a0:	call   QWORD PTR [rip+0x13f7a]        # 0x140019120
   1400051a6:	nop
   1400051a7:	cmp    edi,0x1
   1400051aa:	jbe    0x140005441
   1400051b0:	lea    eax,[rdi-0x2]
   1400051b3:	mov    QWORD PTR [rsp+0x48],0xf
   1400051bc:	mov    QWORD PTR [rsp+0x40],rbx
   1400051c1:	mov    BYTE PTR [rsp+0x30],0x0
   1400051c6:	cmp    BYTE PTR [rsp+rax*1+0x140],0x2f
   1400051ce:	je     0x1400053e8
   1400051d4:	cmp    BYTE PTR [rsp+0x140],0x0
   1400051dc:	jne    0x1400051e3
   1400051de:	mov    r8,rbx
   1400051e1:	jmp    0x1400051fa
   1400051e3:	lea    rax,[rsp+0x140]
   1400051eb:	or     r8,0xffffffffffffffff
   1400051ef:	nop
   1400051f0:	inc    r8
   1400051f3:	cmp    BYTE PTR [rax+r8*1],0x0
   1400051f8:	jne    0x1400051f0
   1400051fa:	lea    rdx,[rsp+0x140]
   140005202:	lea    rcx,[rsp+0x30]
   140005207:	call   0x140006790
   14000520c:	nop
   14000520d:	lea    rcx,[r15+0x58]
   140005211:	movzx  eax,BYTE PTR [rip+0x1c462]        # 0x14002167a
   140005218:	mov    BYTE PTR [rsp+0x20],al
   14000521c:	lea    r9,[rsp+0x30]
   140005221:	xor    r8d,r8d
   140005224:	lea    rdx,[rsp+0xa0]
   14000522c:	call   0x1400023e0
   140005231:	cmp    BYTE PTR [rsp+0xa8],0x0
   140005239:	sete   dil
   14000523d:	cmp    QWORD PTR [rsp+0x48],0x10
   140005243:	jb     0x14000524f
   140005245:	mov    rcx,QWORD PTR [rsp+0x30]
   14000524a:	call   0x14001716e
   14000524f:	test   dil,dil
   140005252:	je     0x1400052fd
   140005258:	mov    QWORD PTR [rsp+0x48],0xf
   140005261:	mov    QWORD PTR [rsp+0x40],rbx
   140005266:	mov    BYTE PTR [rsp+0x30],0x0
   14000526b:	cmp    BYTE PTR [rsp+0x140],0x0
   140005273:	je     0x14000528a
   140005275:	lea    rax,[rsp+0x140]
   14000527d:	or     rbx,0xffffffffffffffff
   140005281:	inc    rbx
   140005284:	cmp    BYTE PTR [rax+rbx*1],0x0
   140005288:	jne    0x140005281
   14000528a:	mov    r8,rbx
   14000528d:	lea    rdx,[rsp+0x140]
   140005295:	lea    rcx,[rsp+0x30]
   14000529a:	call   0x140006790
   14000529f:	nop
   1400052a0:	lea    r8,[rsp+0x30]
   1400052a5:	lea    rdx,[rip+0x156c4]        # 0x14001a970
   1400052ac:	lea    rcx,[rsp+0x120]
   1400052b4:	call   0x140001860
   1400052b9:	nop
   1400052ba:	cmp    QWORD PTR [rax+0x18],0x10
   1400052bf:	jb     0x1400052c4
   1400052c1:	mov    rax,QWORD PTR [rax]
   1400052c4:	mov    QWORD PTR [rsp+0x2b8],rax
   1400052cc:	lea    rdx,[rsp+0x2b8]
   1400052d4:	lea    rcx,[rsp+0x70]
   1400052d9:	call   QWORD PTR [rip+0x13fa9]        # 0x140019288
   1400052df:	lea    rax,[rip+0x14fba]        # 0x14001a2a0
   1400052e6:	mov    QWORD PTR [rsp+0x70],rax
   1400052eb:	lea    rdx,[rip+0x1a236]        # 0x14001f528
   1400052f2:	lea    rcx,[rsp+0x70]
   1400052f7:	call   0x140017334
   1400052fc:	nop
   1400052fd:	mov    r8d,esi
   140005300:	lea    rdx,[rsp+0xb0]
   140005308:	mov    rcx,QWORD PTR [r15+0x50]
   14000530c:	call   0x14000fc90
   140005311:	test   eax,eax
   140005313:	jne    0x140005441
   140005319:	mov    QWORD PTR [rsp+0x48],0xf
   140005322:	mov    QWORD PTR [rsp+0x40],rbx
   140005327:	mov    BYTE PTR [rsp+0x30],al
   14000532b:	cmp    BYTE PTR [rsp+0x140],al
   140005332:	je     0x140005349
   140005334:	lea    rax,[rsp+0x140]
   14000533c:	or     rbx,0xffffffffffffffff
   140005340:	inc    rbx
   140005343:	cmp    BYTE PTR [rax+rbx*1],0x0
   140005347:	jne    0x140005340
   140005349:	mov    r8,rbx
   14000534c:	lea    rdx,[rsp+0x140]
   140005354:	lea    rcx,[rsp+0x30]
   140005359:	call   0x140006790
   14000535e:	nop
   14000535f:	lea    r8,[rsp+0x30]
   140005364:	lea    rdx,[rip+0x15635]        # 0x14001a9a0
   14000536b:	lea    rcx,[rsp+0x120]
   140005373:	call   0x140001860
   140005378:	nop
   140005379:	lea    r8,[rip+0x15610]        # 0x14001a990
   140005380:	mov    rdx,rax
   140005383:	lea    rcx,[rsp+0x250]
   14000538b:	call   0x140001730
   140005390:	nop
   140005391:	mov    r8,r14
   140005394:	mov    rdx,rax
   140005397:	lea    rcx,[rsp+0x270]
   14000539f:	call   0x1400016f0
   1400053a4:	nop
   1400053a5:	cmp    QWORD PTR [rax+0x18],0x10
   1400053aa:	jb     0x1400053af
   1400053ac:	mov    rax,QWORD PTR [rax]
   1400053af:	mov    QWORD PTR [rsp+0x2b8],rax
   1400053b7:	lea    rdx,[rsp+0x2b8]
   1400053bf:	lea    rcx,[rsp+0x58]
   1400053c4:	call   QWORD PTR [rip+0x13ebe]        # 0x140019288
   1400053ca:	lea    rax,[rip+0x14ecf]        # 0x14001a2a0
   1400053d1:	mov    QWORD PTR [rsp+0x58],rax
   1400053d6:	lea    rdx,[rip+0x1a14b]        # 0x14001f528
   1400053dd:	lea    rcx,[rsp+0x58]
   1400053e2:	call   0x140017334
   1400053e7:	nop
   1400053e8:	cmp    BYTE PTR [rsp+0x140],0x0
   1400053f0:	jne    0x1400053f7
   1400053f2:	mov    r8,rbx
   1400053f5:	jmp    0x14000540d
   1400053f7:	lea    rax,[rsp+0x140]
   1400053ff:	or     r8,0xffffffffffffffff
   140005403:	inc    r8
   140005406:	cmp    BYTE PTR [rax+r8*1],0x0
   14000540b:	jne    0x140005403
   14000540d:	lea    rdx,[rsp+0x140]
   140005415:	lea    rcx,[rsp+0x30]
   14000541a:	call   0x140006790
   14000541f:	nop
   140005420:	lea    rdx,[rsp+0x30]
   140005425:	mov    rcx,r15
   140005428:	call   0x140004bd0
   14000542d:	nop
   14000542e:	cmp    QWORD PTR [rsp+0x48],0x10
   140005434:	jb     0x140005441
   140005436:	mov    rcx,QWORD PTR [rsp+0x30]
   14000543b:	call   0x14001716e
   140005440:	nop
   140005441:	inc    esi
   140005443:	jmp    0x140005122
   140005448:	lea    rdx,[rip+0x15569]        # 0x14001a9b8
   14000544f:	mov    rcx,QWORD PTR [rip+0x13d6a]        # 0x1400191c0
   140005456:	call   0x1400014f0
   14000545b:	mov    rcx,rax
   14000545e:	mov    rdx,r14
   140005461:	call   0x140001320
   140005466:	mov    rcx,rax
   140005469:	lea    rdx,[rip+0xffffffffffffd6e0]        # 0x140002b50
   140005470:	call   QWORD PTR [rip+0x13caa]        # 0x140019120
   140005476:	lea    rcx,[rsp+0xb0]
   14000547e:	call   0x14000d4f0
   140005483:	lea    r11,[rsp+0x290]
   14000548b:	mov    rbx,QWORD PTR [r11+0x20]
   14000548f:	mov    rsi,QWORD PTR [r11+0x30]
   140005493:	mov    rdi,QWORD PTR [r11+0x38]
   140005497:	mov    rsp,r11
   14000549a:	pop    r15
   14000549c:	pop    r14
   14000549e:	pop    r12
   1400054a0:	ret    
   1400054a1:	int3   
   1400054a2:	int3   
   1400054a3:	int3   
   1400054a4:	int3   
   1400054a5:	int3   
   1400054a6:	int3   
   1400054a7:	int3   
   1400054a8:	int3   
   1400054a9:	int3   
   1400054aa:	int3   
   1400054ab:	int3   
   1400054ac:	int3   
   1400054ad:	int3   
   1400054ae:	int3   
   1400054af:	int3   
   1400054b0:	sub    rsp,0x28
   1400054b4:	mov    rdx,rcx
   1400054b7:	mov    rcx,QWORD PTR [rip+0x13cfa]        # 0x1400191b8
   1400054be:	call   0x140001320
   1400054c3:	lea    rdx,[rip+0xffffffffffffd686]        # 0x140002b50
   1400054ca:	mov    rcx,rax
   1400054cd:	call   QWORD PTR [rip+0x13c4d]        # 0x140019120
   1400054d3:	mov    ecx,0x1
   1400054d8:	call   QWORD PTR [rip+0x13f22]        # 0x140019400
   1400054de:	int3   
   1400054df:	int3   
   1400054e0:	ret    0x0
   1400054e3:	int3   
   1400054e4:	int3   
   1400054e5:	int3   
   1400054e6:	int3   
   1400054e7:	int3   
   1400054e8:	int3   
   1400054e9:	int3   
   1400054ea:	int3   
   1400054eb:	int3   
   1400054ec:	int3   
   1400054ed:	int3   
   1400054ee:	int3   
   1400054ef:	int3   
   1400054f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400054f5:	push   rdi
   1400054f6:	sub    rsp,0x20
   1400054fa:	cmp    QWORD PTR [rdx+0x18],0x10
   1400054ff:	mov    rbx,rdx
   140005502:	mov    rdi,rcx
   140005505:	jae    0x140005518
   140005507:	mov    r8,QWORD PTR [rdx+0x10]
   14000550b:	inc    r8
   14000550e:	je     0x14000552a
   140005510:	call   QWORD PTR [rip+0x13d62]        # 0x140019278
   140005516:	jmp    0x14000552a
   140005518:	test   rcx,rcx
   14000551b:	je     0x140005523
   14000551d:	mov    rax,QWORD PTR [rdx]
   140005520:	mov    QWORD PTR [rcx],rax
   140005523:	mov    QWORD PTR [rdx],0x0
   14000552a:	mov    rax,QWORD PTR [rbx+0x10]
   14000552e:	mov    QWORD PTR [rdi+0x10],rax
   140005532:	mov    rax,QWORD PTR [rbx+0x18]
   140005536:	mov    QWORD PTR [rdi+0x18],rax
   14000553a:	mov    QWORD PTR [rbx+0x18],0xf
   140005542:	mov    QWORD PTR [rbx+0x10],0x0
   14000554a:	mov    BYTE PTR [rbx],0x0
   14000554d:	mov    rbx,QWORD PTR [rsp+0x30]
   140005552:	add    rsp,0x20
   140005556:	pop    rdi
   140005557:	ret    
   140005558:	int3   
   140005559:	int3   
   14000555a:	int3   
   14000555b:	int3   
   14000555c:	int3   
   14000555d:	int3   
   14000555e:	int3   
   14000555f:	int3   
   140005560:	sub    rsp,0x38
   140005564:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000556d:	mov    ecx,0x40
   140005572:	call   0x140017168
   140005577:	mov    QWORD PTR [rsp+0x48],rax
   14000557c:	test   rax,rax
   14000557f:	jne    0x140005588
   140005581:	call   QWORD PTR [rip+0x13c51]        # 0x1400191d8
   140005587:	nop
   140005588:	mov    QWORD PTR [rax],rax
   14000558b:	lea    rcx,[rax+0x8]
   14000558f:	test   rcx,rcx
   140005592:	je     0x140005597
   140005594:	mov    QWORD PTR [rcx],rax
   140005597:	lea    rcx,[rax+0x10]
   14000559b:	test   rcx,rcx
   14000559e:	je     0x1400055a3
   1400055a0:	mov    QWORD PTR [rcx],rax
   1400055a3:	mov    WORD PTR [rax+0x18],0x101
   1400055a9:	add    rsp,0x38
   1400055ad:	ret    
   1400055ae:	int3   
   1400055af:	int3   
   1400055b0:	rex push rbx
   1400055b2:	sub    rsp,0x30
   1400055b6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400055bf:	mov    rbx,rcx
   1400055c2:	mov    ecx,0x40
   1400055c7:	call   0x140017168
   1400055cc:	mov    rdx,rax
   1400055cf:	mov    QWORD PTR [rsp+0x48],rax
   1400055d4:	test   rax,rax
   1400055d7:	jne    0x1400055e0
   1400055d9:	call   QWORD PTR [rip+0x13bf9]        # 0x1400191d8
   1400055df:	nop
   1400055e0:	mov    rax,QWORD PTR [rbx]
   1400055e3:	mov    QWORD PTR [rdx],rax
   1400055e6:	lea    rcx,[rdx+0x8]
   1400055ea:	test   rcx,rcx
   1400055ed:	je     0x1400055f5
   1400055ef:	mov    rax,QWORD PTR [rbx]
   1400055f2:	mov    QWORD PTR [rcx],rax
   1400055f5:	lea    rcx,[rdx+0x10]
   1400055f9:	test   rcx,rcx
   1400055fc:	je     0x140005604
   1400055fe:	mov    rax,QWORD PTR [rbx]
   140005601:	mov    QWORD PTR [rcx],rax
   140005604:	mov    rax,rdx
   140005607:	add    rsp,0x30
   14000560b:	pop    rbx
   14000560c:	ret    
   14000560d:	int3   
   14000560e:	int3   
   14000560f:	int3   
   140005610:	ret    0x0
   140005613:	int3   
   140005614:	int3   
   140005615:	int3   
   140005616:	int3   
   140005617:	int3   
   140005618:	int3   
   140005619:	int3   
   14000561a:	int3   
   14000561b:	int3   
   14000561c:	int3   
   14000561d:	int3   
   14000561e:	int3   
   14000561f:	int3   
   140005620:	mov    rax,rdx
   140005623:	cmp    r8,0x1
   140005627:	jne    0x140005638
   140005629:	cmp    QWORD PTR [rcx+0x18],0x10
   14000562e:	jb     0x140005633
   140005630:	mov    rcx,QWORD PTR [rcx]
   140005633:	mov    BYTE PTR [rcx+rdx*1],r9b
   140005637:	ret    
   140005638:	cmp    QWORD PTR [rcx+0x18],0x10
   14000563d:	jb     0x140005642
   14000563f:	mov    rcx,QWORD PTR [rcx]
   140005642:	movsx  edx,r9b
   140005646:	add    rcx,rax
   140005649:	jmp    0x14001734c
   14000564e:	int3   
   14000564f:	int3   
   140005650:	lea    rax,[rcx+0x18]
   140005654:	ret    
   140005655:	int3   
   140005656:	int3   
   140005657:	int3   
   140005658:	int3   
   140005659:	int3   
   14000565a:	int3   
   14000565b:	int3   
   14000565c:	int3   
   14000565d:	int3   
   14000565e:	int3   
   14000565f:	int3   
   140005660:	ret    0x0
   140005663:	int3   
   140005664:	int3   
   140005665:	int3   
   140005666:	int3   
   140005667:	int3   
   140005668:	int3   
   140005669:	int3   
   14000566a:	int3   
   14000566b:	int3   
   14000566c:	int3   
   14000566d:	int3   
   14000566e:	int3   
   14000566f:	int3   
   140005670:	mov    QWORD PTR [rsp+0x18],r8
   140005675:	mov    QWORD PTR [rsp+0x10],rdx
   14000567a:	mov    QWORD PTR [rsp+0x8],rcx
   14000567f:	push   rbx
   140005680:	push   rsi
   140005681:	push   rdi
   140005682:	push   r14
   140005684:	sub    rsp,0x38
   140005688:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005691:	mov    rsi,r8
   140005694:	mov    rbx,rcx
   140005697:	mov    rdi,rdx
   14000569a:	or     rdi,0xf
   14000569e:	cmp    rdi,0xfffffffffffffffe
   1400056a2:	jbe    0x1400056a9
   1400056a4:	mov    rdi,rdx
   1400056a7:	jmp    0x1400056de
   1400056a9:	mov    r8,QWORD PTR [rcx+0x18]
   1400056ad:	mov    rcx,r8
   1400056b0:	shr    rcx,1
   1400056b3:	movabs rax,0xaaaaaaaaaaaaaaab
   1400056bd:	mul    rdi
   1400056c0:	shr    rdx,1
   1400056c3:	cmp    rcx,rdx
   1400056c6:	jbe    0x1400056de
   1400056c8:	mov    rdi,0xfffffffffffffffe
   1400056cf:	mov    rax,rdi
   1400056d2:	sub    rax,rcx
   1400056d5:	cmp    r8,rax
   1400056d8:	ja     0x1400056de
   1400056da:	lea    rdi,[rcx+r8*1]
   1400056de:	lea    rcx,[rdi+0x1]
   1400056e2:	xor    r14d,r14d
   1400056e5:	test   rcx,rcx
   1400056e8:	je     0x140005704
   1400056ea:	cmp    rcx,0xffffffffffffffff
   1400056ee:	ja     0x1400056fd
   1400056f0:	call   0x140017168
   1400056f5:	mov    r14,rax
   1400056f8:	test   rax,rax
   1400056fb:	jne    0x140005704
   1400056fd:	call   QWORD PTR [rip+0x13ad5]        # 0x1400191d8
   140005703:	nop
   140005704:	jmp    0x14000571a
   140005706:	mov    rbx,QWORD PTR [rsp+0x60]
   14000570b:	mov    rsi,QWORD PTR [rsp+0x70]
   140005710:	mov    rdi,QWORD PTR [rsp+0x68]
   140005715:	mov    r14,QWORD PTR [rsp+0x78]
   14000571a:	test   rsi,rsi
   14000571d:	je     0x14000573e
   14000571f:	cmp    QWORD PTR [rbx+0x18],0x10
   140005724:	jb     0x14000572b
   140005726:	mov    rdx,QWORD PTR [rbx]
   140005729:	jmp    0x14000572e
   14000572b:	mov    rdx,rbx
   14000572e:	test   rsi,rsi
   140005731:	je     0x14000573e
   140005733:	mov    r8,rsi
   140005736:	mov    rcx,r14
   140005739:	call   0x140017346
   14000573e:	cmp    QWORD PTR [rbx+0x18],0x10
   140005743:	jb     0x14000574d
   140005745:	mov    rcx,QWORD PTR [rbx]
   140005748:	call   0x14001716e
   14000574d:	mov    BYTE PTR [rbx],0x0
   140005750:	mov    QWORD PTR [rbx],r14
   140005753:	mov    QWORD PTR [rbx+0x18],rdi
   140005757:	mov    QWORD PTR [rbx+0x10],rsi
   14000575b:	cmp    rdi,0x10
   14000575f:	jb     0x140005764
   140005761:	mov    rbx,r14
   140005764:	mov    BYTE PTR [rbx+rsi*1],0x0
   140005768:	add    rsp,0x38
   14000576c:	pop    r14
   14000576e:	pop    rdi
   14000576f:	pop    rsi
   140005770:	pop    rbx
   140005771:	ret    
   140005772:	int3   
   140005773:	int3   
   140005774:	int3   
   140005775:	int3   
   140005776:	int3   
   140005777:	int3   
   140005778:	int3   
   140005779:	int3   
   14000577a:	int3   
   14000577b:	int3   
   14000577c:	int3   
   14000577d:	int3   
   14000577e:	int3   
   14000577f:	int3   
   140005780:	mov    rcx,QWORD PTR [rcx]
   140005783:	test   rcx,rcx
   140005786:	jne    0x140017316
   14000578c:	ret    
   14000578d:	int3   
   14000578e:	int3   
   14000578f:	int3   
   140005790:	ret    0x0
   140005793:	int3   
   140005794:	int3   
   140005795:	int3   
   140005796:	int3   
   140005797:	int3   
   140005798:	int3   
   140005799:	int3   
   14000579a:	int3   
   14000579b:	int3   
   14000579c:	int3   
   14000579d:	int3   
   14000579e:	int3   
   14000579f:	int3   
   1400057a0:	mov    rax,rsp
   1400057a3:	push   rbp
   1400057a4:	push   rdi
   1400057a5:	push   r14
   1400057a7:	mov    rbp,rsp
   1400057aa:	sub    rsp,0x60
   1400057ae:	mov    QWORD PTR [rbp-0x30],0xfffffffffffffffe
   1400057b6:	mov    QWORD PTR [rax+0x10],rbx
   1400057ba:	mov    QWORD PTR [rax+0x18],rsi
   1400057be:	mov    rdi,rcx
   1400057c1:	cmp    QWORD PTR [rcx+0x78],0x0
   1400057c6:	je     0x14000599a
   1400057cc:	cmp    BYTE PTR [rcx+0x81],0x0
   1400057d3:	je     0x14000599a
   1400057d9:	mov    rax,QWORD PTR [rcx]
   1400057dc:	or     edx,0xffffffff
   1400057df:	call   QWORD PTR [rax+0x18]
   1400057e2:	cmp    eax,0xffffffff
   1400057e5:	jne    0x1400057ee
   1400057e7:	xor    al,al
   1400057e9:	jmp    0x14000599c
   1400057ee:	mov    edx,0xf
   1400057f3:	mov    QWORD PTR [rbp-0x10],rdx
   1400057f7:	mov    BYTE PTR [rbp-0x28],0x0
   1400057fb:	xor    ecx,ecx
   1400057fd:	mov    QWORD PTR [rbp-0x28],rcx
   140005801:	mov    QWORD PTR [rbp-0x18],0x8
   140005809:	lea    rax,[rbp-0x28]
   14000580d:	cmp    rdx,0x10
   140005811:	cmovae rax,rcx
   140005815:	mov    BYTE PTR [rax+0x8],cl
   140005818:	xor    r14d,r14d
   14000581b:	mov    rdx,QWORD PTR [rbp-0x10]
   14000581f:	nop
   140005820:	lea    rcx,[rbp-0x28]
   140005824:	cmp    rdx,0x10
   140005828:	cmovae rcx,QWORD PTR [rbp-0x28]
   14000582d:	lea    r8,[rbp-0x28]
   140005831:	cmovae r8,QWORD PTR [rbp-0x28]
   140005836:	mov    r9,QWORD PTR [rbp-0x18]
   14000583a:	add    r9,rcx
   14000583d:	lea    rax,[rbp+0x20]
   140005841:	mov    QWORD PTR [rsp+0x20],rax
   140005846:	lea    rdx,[rdi+0x84]
   14000584d:	mov    rcx,QWORD PTR [rdi+0x78]
   140005851:	call   QWORD PTR [rip+0x13829]        # 0x140019080
   140005857:	test   eax,eax
   140005859:	je     0x140005865
   14000585b:	dec    eax
   14000585d:	jne    0x14000595b
   140005863:	jmp    0x14000586c
   140005865:	mov    BYTE PTR [rdi+0x81],r14b
   14000586c:	lea    rax,[rbp-0x28]
   140005870:	mov    r9,QWORD PTR [rbp-0x28]
   140005874:	mov    rdx,QWORD PTR [rbp-0x10]
   140005878:	cmp    rdx,0x10
   14000587c:	cmovae rax,r9
   140005880:	mov    rbx,QWORD PTR [rbp+0x20]
   140005884:	sub    rbx,rax
   140005887:	je     0x1400058b7
   140005889:	lea    rcx,[rbp-0x28]
   14000588d:	cmp    rdx,0x10
   140005891:	cmovae rcx,r9
   140005895:	mov    r9,QWORD PTR [rdi+0x90]
   14000589c:	mov    r8,rbx
   14000589f:	mov    edx,0x1
   1400058a4:	call   QWORD PTR [rip+0x1398e]        # 0x140019238
   1400058aa:	mov    rdx,QWORD PTR [rbp-0x10]
   1400058ae:	cmp    rbx,rax
   1400058b1:	jne    0x140005964
   1400058b7:	cmp    BYTE PTR [rdi+0x81],r14b
   1400058be:	je     0x140005984
   1400058c4:	test   rbx,rbx
   1400058c7:	jne    0x140005820
   1400058cd:	or     rax,0xffffffffffffffff
   1400058d1:	mov    r8,QWORD PTR [rbp-0x18]
   1400058d5:	sub    rax,r8
   1400058d8:	cmp    rax,0x8
   1400058dc:	jbe    0x140005976
   1400058e2:	lea    rbx,[r8+0x8]
   1400058e6:	cmp    rbx,0xfffffffffffffffe
   1400058ea:	ja     0x140005968
   1400058ec:	cmp    rdx,rbx
   1400058ef:	jae    0x140005903
   1400058f1:	mov    rdx,rbx
   1400058f4:	lea    rcx,[rbp-0x28]
   1400058f8:	call   0x140005670
   1400058fd:	mov    rdx,QWORD PTR [rbp-0x10]
   140005901:	jmp    0x140005921
   140005903:	test   rbx,rbx
   140005906:	jne    0x14000592a
   140005908:	mov    QWORD PTR [rbp-0x18],r14
   14000590c:	lea    rax,[rbp-0x28]
   140005910:	cmp    rdx,0x10
   140005914:	cmovae rax,QWORD PTR [rbp-0x28]
   140005919:	mov    BYTE PTR [rax],r14b
   14000591c:	jmp    0x14000581b
   140005921:	test   rbx,rbx
   140005924:	je     0x140005820
   14000592a:	lea    rcx,[rbp-0x28]
   14000592e:	cmp    rdx,0x10
   140005932:	cmovae rcx,QWORD PTR [rbp-0x28]
   140005937:	mov    rax,QWORD PTR [rbp-0x18]
   14000593b:	xor    edx,edx
   14000593d:	mov    QWORD PTR [rax+rcx*1],rdx
   140005941:	mov    QWORD PTR [rbp-0x18],rbx
   140005945:	lea    rax,[rbp-0x28]
   140005949:	cmp    QWORD PTR [rbp-0x10],0x10
   14000594e:	cmovae rax,QWORD PTR [rbp-0x28]
   140005953:	mov    BYTE PTR [rbx+rax*1],dl
   140005956:	jmp    0x14000581b
   14000595b:	mov    rdx,QWORD PTR [rbp-0x10]
   14000595f:	sub    eax,0x2
   140005962:	je     0x140005984
   140005964:	xor    bl,bl
   140005966:	jmp    0x140005986
   140005968:	lea    rcx,[rip+0x15329]        # 0x14001ac98
   14000596f:	call   QWORD PTR [rip+0x1386b]        # 0x1400191e0
   140005975:	int3   
   140005976:	lea    rcx,[rip+0x1531b]        # 0x14001ac98
   14000597d:	call   QWORD PTR [rip+0x1385d]        # 0x1400191e0
   140005983:	int3   
   140005984:	mov    bl,0x1
   140005986:	cmp    rdx,0x10
   14000598a:	jb     0x140005995
   14000598c:	mov    rcx,QWORD PTR [rbp-0x28]
   140005990:	call   0x14001716e
   140005995:	movzx  eax,bl
   140005998:	jmp    0x14000599c
   14000599a:	mov    al,0x1
   14000599c:	lea    r11,[rsp+0x60]
   1400059a1:	mov    rbx,QWORD PTR [r11+0x28]
   1400059a5:	mov    rsi,QWORD PTR [r11+0x30]
   1400059a9:	mov    rsp,r11
   1400059ac:	pop    r14
   1400059ae:	pop    rdi
   1400059af:	pop    rbp
   1400059b0:	ret    
   1400059b1:	int3   
   1400059b2:	int3   
   1400059b3:	int3   
   1400059b4:	int3   
   1400059b5:	int3   
   1400059b6:	int3   
   1400059b7:	int3   
   1400059b8:	int3   
   1400059b9:	int3   
   1400059ba:	int3   
   1400059bb:	int3   
   1400059bc:	int3   
   1400059bd:	int3   
   1400059be:	int3   
   1400059bf:	int3   
   1400059c0:	cmp    QWORD PTR [rcx+0x18],0x10
   1400059c5:	mov    QWORD PTR [rcx+0x10],rdx
   1400059c9:	jb     0x1400059d3
   1400059cb:	mov    rax,QWORD PTR [rcx]
   1400059ce:	mov    BYTE PTR [rax+rdx*1],0x0
   1400059d2:	ret    
   1400059d3:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400059d7:	ret    
   1400059d8:	int3   
   1400059d9:	int3   
   1400059da:	int3   
   1400059db:	int3   
   1400059dc:	int3   
   1400059dd:	int3   
   1400059de:	int3   
   1400059df:	int3   
   1400059e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400059e5:	mov    QWORD PTR [rsp+0x18],rsi
   1400059ea:	push   rdi
   1400059eb:	sub    rsp,0x20
   1400059ef:	cmp    BYTE PTR [rdx+0x19],0x0
   1400059f3:	mov    rbx,rdx
   1400059f6:	mov    rsi,rcx
   1400059f9:	mov    rdi,rdx
   1400059fc:	jne    0x140005a55
   1400059fe:	mov    QWORD PTR [rsp+0x30],rbp
   140005a03:	xor    ebp,ebp
   140005a05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140005a10:	mov    rdx,QWORD PTR [rdi+0x10]
   140005a14:	mov    rcx,rsi
   140005a17:	call   0x1400059e0
   140005a1c:	cmp    QWORD PTR [rbx+0x38],0x10
   140005a21:	mov    rdi,QWORD PTR [rdi]
   140005a24:	jb     0x140005a2f
   140005a26:	mov    rcx,QWORD PTR [rbx+0x20]
   140005a2a:	call   0x14001716e
   140005a2f:	mov    QWORD PTR [rbx+0x38],0xf
   140005a37:	mov    QWORD PTR [rbx+0x30],rbp
   140005a3b:	mov    rcx,rbx
   140005a3e:	mov    BYTE PTR [rbx+0x20],bpl
   140005a42:	call   0x14001716e
   140005a47:	mov    rbx,rdi
   140005a4a:	cmp    BYTE PTR [rdi+0x19],bpl
   140005a4e:	je     0x140005a10
   140005a50:	mov    rbp,QWORD PTR [rsp+0x30]
   140005a55:	mov    rbx,QWORD PTR [rsp+0x38]
   140005a5a:	mov    rsi,QWORD PTR [rsp+0x40]
   140005a5f:	add    rsp,0x20
   140005a63:	pop    rdi
   140005a64:	ret    
   140005a65:	int3   
   140005a66:	int3   
   140005a67:	int3   
   140005a68:	int3   
   140005a69:	int3   
   140005a6a:	int3   
   140005a6b:	int3   
   140005a6c:	int3   
   140005a6d:	int3   
   140005a6e:	int3   
   140005a6f:	int3   
   140005a70:	mov    rcx,rdx
   140005a73:	jmp    0x14001716e
   140005a78:	int3   
   140005a79:	int3   
   140005a7a:	int3   
   140005a7b:	int3   
   140005a7c:	int3   
   140005a7d:	int3   
   140005a7e:	int3   
   140005a7f:	int3   
   140005a80:	mov    rcx,rdx
   140005a83:	jmp    0x14001716e
   140005a88:	int3   
   140005a89:	int3   
   140005a8a:	int3   
   140005a8b:	int3   
   140005a8c:	int3   
   140005a8d:	int3   
   140005a8e:	int3   
   140005a8f:	int3   
   140005a90:	mov    rax,rdx
   140005a93:	ret    
   140005a94:	int3   
   140005a95:	int3   
   140005a96:	int3   
   140005a97:	int3   
   140005a98:	int3   
   140005a99:	int3   
   140005a9a:	int3   
   140005a9b:	int3   
   140005a9c:	int3   
   140005a9d:	int3   
   140005a9e:	int3   
   140005a9f:	int3   
   140005aa0:	mov    rax,rdx
   140005aa3:	ret    
   140005aa4:	int3   
   140005aa5:	int3   
   140005aa6:	int3   
   140005aa7:	int3   
   140005aa8:	int3   
   140005aa9:	int3   
   140005aaa:	int3   
   140005aab:	int3   
   140005aac:	int3   
   140005aad:	int3   
   140005aae:	int3   
   140005aaf:	int3   
   140005ab0:	mov    rax,rdx
   140005ab3:	ret    
   140005ab4:	int3   
   140005ab5:	int3   
   140005ab6:	int3   
   140005ab7:	int3   
   140005ab8:	int3   
   140005ab9:	int3   
   140005aba:	int3   
   140005abb:	int3   
   140005abc:	int3   
   140005abd:	int3   
   140005abe:	int3   
   140005abf:	int3   
   140005ac0:	mov    QWORD PTR [rsp+0x8],rbx
   140005ac5:	push   rdi
   140005ac6:	sub    rsp,0x20
   140005aca:	mov    rbx,rdx
   140005acd:	mov    rdx,QWORD PTR [rcx]
   140005ad0:	xor    edi,edi
   140005ad2:	cmp    rbx,QWORD PTR [rdx+0x18]
   140005ad6:	jae    0x140005ae7
   140005ad8:	mov    rax,QWORD PTR [rdx+0x10]
   140005adc:	mov    rax,QWORD PTR [rax+rbx*8]
   140005ae0:	test   rax,rax
   140005ae3:	jne    0x140005b07
   140005ae5:	jmp    0x140005aea
   140005ae7:	mov    rax,rdi
   140005aea:	cmp    BYTE PTR [rdx+0x24],dil
   140005aee:	je     0x140005b07
   140005af0:	call   QWORD PTR [rip+0x1356a]        # 0x140019060
   140005af6:	cmp    rbx,QWORD PTR [rax+0x18]
   140005afa:	jae    0x140005b04
   140005afc:	mov    rax,QWORD PTR [rax+0x10]
   140005b00:	mov    rdi,QWORD PTR [rax+rbx*8]
   140005b04:	mov    rax,rdi
   140005b07:	mov    rbx,QWORD PTR [rsp+0x30]
   140005b0c:	add    rsp,0x20
   140005b10:	pop    rdi
   140005b11:	ret    
   140005b12:	int3   
   140005b13:	int3   
   140005b14:	int3   
   140005b15:	int3   
   140005b16:	int3   
   140005b17:	int3   
   140005b18:	int3   
   140005b19:	int3   
   140005b1a:	int3   
   140005b1b:	int3   
   140005b1c:	int3   
   140005b1d:	int3   
   140005b1e:	int3   
   140005b1f:	int3   
   140005b20:	mov    QWORD PTR [rsp+0x20],rbx
   140005b25:	push   rdi
   140005b26:	sub    rsp,0x20
   140005b2a:	mov    rdi,rdx
   140005b2d:	mov    rbx,rcx
   140005b30:	cmp    rdx,0xfffffffffffffffe
   140005b34:	jbe    0x140005b44
   140005b36:	lea    rcx,[rip+0x1515b]        # 0x14001ac98
   140005b3d:	call   QWORD PTR [rip+0x1369d]        # 0x1400191e0
   140005b43:	int3   
   140005b44:	mov    rax,QWORD PTR [rcx+0x18]
   140005b48:	mov    QWORD PTR [rsp+0x30],rbp
   140005b4d:	xor    ebp,ebp
   140005b4f:	cmp    rax,rdx
   140005b52:	jae    0x140005b5f
   140005b54:	mov    r8,QWORD PTR [rcx+0x10]
   140005b58:	call   0x140005670
   140005b5d:	jmp    0x140005bd1
   140005b5f:	test   r8b,r8b
   140005b62:	je     0x140005bbc
   140005b64:	cmp    rdx,0x10
   140005b68:	jae    0x140005bbc
   140005b6a:	mov    QWORD PTR [rsp+0x38],rsi
   140005b6f:	mov    rsi,QWORD PTR [rcx+0x10]
   140005b73:	cmp    rdx,rsi
   140005b76:	cmovb  rsi,rdx
   140005b7a:	cmp    rax,0x10
   140005b7e:	jb     0x140005ba5
   140005b80:	mov    QWORD PTR [rsp+0x40],r14
   140005b85:	mov    r14,QWORD PTR [rcx]
   140005b88:	test   rsi,rsi
   140005b8b:	je     0x140005b98
   140005b8d:	mov    r8,rsi
   140005b90:	mov    rdx,r14
   140005b93:	call   0x140017346
   140005b98:	mov    rcx,r14
   140005b9b:	call   0x14001716e
   140005ba0:	mov    r14,QWORD PTR [rsp+0x40]
   140005ba5:	mov    QWORD PTR [rbx+0x10],rsi
   140005ba9:	mov    QWORD PTR [rbx+0x18],0xf
   140005bb1:	mov    BYTE PTR [rsi+rbx*1],bpl
   140005bb5:	mov    rsi,QWORD PTR [rsp+0x38]
   140005bba:	jmp    0x140005bd1
   140005bbc:	test   rdx,rdx
   140005bbf:	jne    0x140005bd1
   140005bc1:	mov    QWORD PTR [rcx+0x10],rbp
   140005bc5:	cmp    rax,0x10
   140005bc9:	jb     0x140005bce
   140005bcb:	mov    rbx,QWORD PTR [rcx]
   140005bce:	mov    BYTE PTR [rbx],bpl
   140005bd1:	mov    rbp,QWORD PTR [rsp+0x30]
   140005bd6:	mov    rbx,QWORD PTR [rsp+0x48]
   140005bdb:	test   rdi,rdi
   140005bde:	setne  al
   140005be1:	add    rsp,0x20
   140005be5:	pop    rdi
   140005be6:	ret    
   140005be7:	int3   
   140005be8:	int3   
   140005be9:	int3   
   140005bea:	int3   
   140005beb:	int3   
   140005bec:	int3   
   140005bed:	int3   
   140005bee:	int3   
   140005bef:	int3   
   140005bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140005bf5:	push   rdi
   140005bf6:	sub    rsp,0x20
   140005bfa:	cmp    r8d,0x1
   140005bfe:	mov    rdi,rdx
   140005c01:	mov    rbx,rcx
   140005c04:	sete   al
   140005c07:	mov    BYTE PTR [rcx+0x81],0x0
   140005c0e:	mov    BYTE PTR [rcx+0x88],al
   140005c14:	call   QWORD PTR [rip+0x134be]        # 0x1400190d8
   140005c1a:	test   rdi,rdi
   140005c1d:	je     0x140005c3f
   140005c1f:	lea    rax,[rdi+0x10]
   140005c23:	mov    QWORD PTR [rbx+0x38],rdi
   140005c27:	mov    QWORD PTR [rbx+0x40],rdi
   140005c2b:	mov    QWORD PTR [rbx+0x18],rax
   140005c2f:	mov    QWORD PTR [rbx+0x20],rax
   140005c33:	lea    rax,[rdi+0x8]
   140005c37:	mov    QWORD PTR [rbx+0x50],rax
   140005c3b:	mov    QWORD PTR [rbx+0x58],rax
   140005c3f:	mov    QWORD PTR [rbx+0x90],rdi
   140005c46:	mov    eax,DWORD PTR [rip+0x1ba44]        # 0x140021690
   140005c4c:	mov    QWORD PTR [rbx+0x78],0x0
   140005c54:	mov    DWORD PTR [rbx+0x84],eax
   140005c5a:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c5f:	add    rsp,0x20
   140005c63:	pop    rdi
   140005c64:	ret    
   140005c65:	int3   
   140005c66:	int3   
   140005c67:	int3   
   140005c68:	int3   
   140005c69:	int3   
   140005c6a:	int3   
   140005c6b:	int3   
   140005c6c:	int3   
   140005c6d:	int3   
   140005c6e:	int3   
   140005c6f:	int3   
   140005c70:	mov    QWORD PTR [rsp+0x8],rbx
   140005c75:	push   rdi
   140005c76:	sub    rsp,0x20
   140005c7a:	mov    rbx,rcx
   140005c7d:	mov    rcx,rdx
   140005c80:	mov    rdi,rdx
   140005c83:	call   QWORD PTR [rip+0x133df]        # 0x140019068
   140005c89:	test   al,al
   140005c8b:	je     0x140005ca0
   140005c8d:	mov    QWORD PTR [rbx+0x78],0x0
   140005c95:	mov    rbx,QWORD PTR [rsp+0x30]
   140005c9a:	add    rsp,0x20
   140005c9e:	pop    rdi
   140005c9f:	ret    
   140005ca0:	mov    rcx,rbx
   140005ca3:	mov    QWORD PTR [rbx+0x78],rdi
   140005ca7:	mov    rbx,QWORD PTR [rsp+0x30]
   140005cac:	add    rsp,0x20
   140005cb0:	pop    rdi
   140005cb1:	rex.W jmp QWORD PTR [rip+0x13420]        # 0x1400190d8
   140005cb8:	int3   
   140005cb9:	int3   
   140005cba:	int3   
   140005cbb:	int3   
   140005cbc:	int3   
   140005cbd:	int3   
   140005cbe:	int3   
   140005cbf:	int3   
   140005cc0:	test   rdx,rdx
   140005cc3:	je     0x140005cfa
   140005cc5:	mov    rax,QWORD PTR [rcx+0x18]
   140005cc9:	cmp    rax,0x10
   140005ccd:	jb     0x140005cd4
   140005ccf:	mov    r8,QWORD PTR [rcx]
   140005cd2:	jmp    0x140005cd7
   140005cd4:	mov    r8,rcx
   140005cd7:	cmp    rdx,r8
   140005cda:	jb     0x140005cfa
   140005cdc:	cmp    rax,0x10
   140005ce0:	jb     0x140005ce7
   140005ce2:	mov    r8,QWORD PTR [rcx]
   140005ce5:	jmp    0x140005cea
   140005ce7:	mov    r8,rcx
   140005cea:	mov    rax,QWORD PTR [rcx+0x10]
   140005cee:	lea    rcx,[r8+rax*1]
   140005cf2:	cmp    rcx,rdx
   140005cf5:	jbe    0x140005cfa
   140005cf7:	mov    al,0x1
   140005cf9:	ret    
   140005cfa:	xor    al,al
   140005cfc:	ret    
   140005cfd:	int3   
   140005cfe:	int3   
   140005cff:	int3   
   140005d00:	lea    rax,[rcx+0x19]
   140005d04:	ret    
   140005d05:	int3   
   140005d06:	int3   
   140005d07:	int3   
   140005d08:	int3   
   140005d09:	int3   
   140005d0a:	int3   
   140005d0b:	int3   
   140005d0c:	int3   
   140005d0d:	int3   
   140005d0e:	int3   
   140005d0f:	int3   
   140005d10:	lea    rax,[rdx+0x20]
   140005d14:	ret    
   140005d15:	int3   
   140005d16:	int3   
   140005d17:	int3   
   140005d18:	int3   
   140005d19:	int3   
   140005d1a:	int3   
   140005d1b:	int3   
   140005d1c:	int3   
   140005d1d:	int3   
   140005d1e:	int3   
   140005d1f:	int3   
   140005d20:	mov    rax,rdx
   140005d23:	ret    
   140005d24:	int3   
   140005d25:	int3   
   140005d26:	int3   
   140005d27:	int3   
   140005d28:	int3   
   140005d29:	int3   
   140005d2a:	int3   
   140005d2b:	int3   
   140005d2c:	int3   
   140005d2d:	int3   
   140005d2e:	int3   
   140005d2f:	int3   
   140005d30:	mov    rax,rcx
   140005d33:	ret    
   140005d34:	int3   
   140005d35:	int3   
   140005d36:	int3   
   140005d37:	int3   
   140005d38:	int3   
   140005d39:	int3   
   140005d3a:	int3   
   140005d3b:	int3   
   140005d3c:	int3   
   140005d3d:	int3   
   140005d3e:	int3   
   140005d3f:	int3   
   140005d40:	mov    rax,rcx
   140005d43:	ret    
   140005d44:	int3   
   140005d45:	int3   
   140005d46:	int3   
   140005d47:	int3   
   140005d48:	int3   
   140005d49:	int3   
   140005d4a:	int3   
   140005d4b:	int3   
   140005d4c:	int3   
   140005d4d:	int3   
   140005d4e:	int3   
   140005d4f:	int3   
   140005d50:	mov    rax,QWORD PTR [rcx]
   140005d53:	ret    
   140005d54:	int3   
   140005d55:	int3   
   140005d56:	int3   
   140005d57:	int3   
   140005d58:	int3   
   140005d59:	int3   
   140005d5a:	int3   
   140005d5b:	int3   
   140005d5c:	int3   
   140005d5d:	int3   
   140005d5e:	int3   
   140005d5f:	int3   
   140005d60:	mov    rcx,QWORD PTR [rcx+0x90]
   140005d67:	test   rcx,rcx
   140005d6a:	je     0x140005d73
   140005d6c:	rex.W jmp QWORD PTR [rip+0x134e5]        # 0x140019258
   140005d73:	ret    
   140005d74:	int3   
   140005d75:	int3   
   140005d76:	int3   
   140005d77:	int3   
   140005d78:	int3   
   140005d79:	int3   
   140005d7a:	int3   
   140005d7b:	int3   
   140005d7c:	int3   
   140005d7d:	int3   
   140005d7e:	int3   
   140005d7f:	int3   
   140005d80:	mov    r8,QWORD PTR [rdx+0x10]
   140005d84:	mov    rax,QWORD PTR [r8]
   140005d87:	mov    QWORD PTR [rdx+0x10],rax
   140005d8b:	mov    rax,QWORD PTR [r8]
   140005d8e:	cmp    BYTE PTR [rax+0x19],0x0
   140005d92:	jne    0x140005d98
   140005d94:	mov    QWORD PTR [rax+0x8],rdx
   140005d98:	mov    rax,QWORD PTR [rdx+0x8]
   140005d9c:	mov    QWORD PTR [r8+0x8],rax
   140005da0:	mov    rax,QWORD PTR [rcx]
   140005da3:	cmp    rdx,QWORD PTR [rax+0x8]
   140005da7:	jne    0x140005db5
   140005da9:	mov    QWORD PTR [rax+0x8],r8
   140005dad:	mov    QWORD PTR [r8],rdx
   140005db0:	mov    QWORD PTR [rdx+0x8],r8
   140005db4:	ret    
   140005db5:	mov    rax,QWORD PTR [rdx+0x8]
   140005db9:	cmp    rdx,QWORD PTR [rax]
   140005dbc:	jne    0x140005dc9
   140005dbe:	mov    QWORD PTR [rax],r8
   140005dc1:	mov    QWORD PTR [r8],rdx
   140005dc4:	mov    QWORD PTR [rdx+0x8],r8
   140005dc8:	ret    
   140005dc9:	mov    QWORD PTR [rax+0x10],r8
   140005dcd:	mov    QWORD PTR [r8],rdx
   140005dd0:	mov    QWORD PTR [rdx+0x8],r8
   140005dd4:	ret    
   140005dd5:	int3   
   140005dd6:	int3   
   140005dd7:	int3   
   140005dd8:	int3   
   140005dd9:	int3   
   140005dda:	int3   
   140005ddb:	int3   
   140005ddc:	int3   
   140005ddd:	int3   
   140005dde:	int3   
   140005ddf:	int3   
   140005de0:	mov    rax,QWORD PTR [rcx+0x10]
   140005de4:	cmp    BYTE PTR [rax+0x19],0x0
   140005de8:	jne    0x140005dfd
   140005dea:	nop    WORD PTR [rax+rax*1+0x0]
   140005df0:	mov    rcx,rax
   140005df3:	mov    rax,QWORD PTR [rax+0x10]
   140005df7:	cmp    BYTE PTR [rax+0x19],0x0
   140005dfb:	je     0x140005df0
   140005dfd:	mov    rax,rcx
   140005e00:	ret    
   140005e01:	int3   
   140005e02:	int3   
   140005e03:	int3   
   140005e04:	int3   
   140005e05:	int3   
   140005e06:	int3   
   140005e07:	int3   
   140005e08:	int3   
   140005e09:	int3   
   140005e0a:	int3   
   140005e0b:	int3   
   140005e0c:	int3   
   140005e0d:	int3   
   140005e0e:	int3   
   140005e0f:	int3   
   140005e10:	mov    rax,QWORD PTR [rcx]
   140005e13:	cmp    BYTE PTR [rax+0x19],0x0
   140005e17:	jne    0x140005e2c
   140005e19:	nop    DWORD PTR [rax+0x0]
   140005e20:	mov    rcx,rax
   140005e23:	mov    rax,QWORD PTR [rax]
   140005e26:	cmp    BYTE PTR [rax+0x19],0x0
   140005e2a:	je     0x140005e20
   140005e2c:	mov    rax,rcx
   140005e2f:	ret    
   140005e30:	mov    rax,QWORD PTR [rcx]
   140005e33:	ret    
   140005e34:	int3   
   140005e35:	int3   
   140005e36:	int3   
   140005e37:	int3   
   140005e38:	int3   
   140005e39:	int3   
   140005e3a:	int3   
   140005e3b:	int3   
   140005e3c:	int3   
   140005e3d:	int3   
   140005e3e:	int3   
   140005e3f:	int3   
   140005e40:	cmp    QWORD PTR [rcx+0x18],0x10
   140005e45:	jb     0x140005e4b
   140005e47:	mov    rax,QWORD PTR [rcx]
   140005e4a:	ret    
   140005e4b:	mov    rax,rcx
   140005e4e:	ret    
   140005e4f:	int3   
   140005e50:	cmp    QWORD PTR [rcx+0x18],0x10
   140005e55:	jb     0x140005e5b
   140005e57:	mov    rax,QWORD PTR [rcx]
   140005e5a:	ret    
   140005e5b:	mov    rax,rcx
   140005e5e:	ret    
   140005e5f:	int3   
   140005e60:	lea    rax,[rcx+0x20]
   140005e64:	ret    
   140005e65:	int3   
   140005e66:	int3   
   140005e67:	int3   
   140005e68:	int3   
   140005e69:	int3   
   140005e6a:	int3   
   140005e6b:	int3   
   140005e6c:	int3   
   140005e6d:	int3   
   140005e6e:	int3   
   140005e6f:	int3   
   140005e70:	lea    rax,[rcx+0x8]
   140005e74:	ret    
   140005e75:	int3   
   140005e76:	int3   
   140005e77:	int3   
   140005e78:	int3   
   140005e79:	int3   
   140005e7a:	int3   
   140005e7b:	int3   
   140005e7c:	int3   
   140005e7d:	int3   
   140005e7e:	int3   
   140005e7f:	int3   
   140005e80:	test   rcx,rcx
   140005e83:	jne    0x140005e88
   140005e85:	xor    eax,eax
   140005e87:	ret    
   140005e88:	sub    rcx,rdx
   140005e8b:	mov    rax,rcx
   140005e8e:	ret    
   140005e8f:	int3   
   140005e90:	mov    r9,QWORD PTR [rcx+0x18]
   140005e94:	lea    rax,[rcx+0x80]
   140005e9b:	cmp    QWORD PTR [r9],rax
   140005e9e:	jne    0x140005ebc
   140005ea0:	mov    rdx,QWORD PTR [rcx+0x68]
   140005ea4:	mov    r8,QWORD PTR [rcx+0x70]
   140005ea8:	mov    QWORD PTR [r9],rdx
   140005eab:	mov    rax,QWORD PTR [rcx+0x38]
   140005eaf:	sub    r8d,edx
   140005eb2:	mov    QWORD PTR [rax],rdx
   140005eb5:	mov    rax,QWORD PTR [rcx+0x50]
   140005eb9:	mov    DWORD PTR [rax],r8d
   140005ebc:	ret    
   140005ebd:	int3   
   140005ebe:	int3   
   140005ebf:	int3   
   140005ec0:	lea    rax,[rcx+0x10]
   140005ec4:	ret    
   140005ec5:	int3   
   140005ec6:	int3   
   140005ec7:	int3   
   140005ec8:	int3   
   140005ec9:	int3   
   140005eca:	int3   
   140005ecb:	int3   
   140005ecc:	int3   
   140005ecd:	int3   
   140005ece:	int3   
   140005ecf:	int3   
   140005ed0:	mov    rax,QWORD PTR [rcx]
   140005ed3:	add    rax,0x10
   140005ed7:	ret    
   140005ed8:	int3   
   140005ed9:	int3   
   140005eda:	int3   
   140005edb:	int3   
   140005edc:	int3   
   140005edd:	int3   
   140005ede:	int3   
   140005edf:	int3   
   140005ee0:	mov    rax,QWORD PTR [rcx]
   140005ee3:	add    rax,0x8
   140005ee7:	ret    
   140005ee8:	int3   
   140005ee9:	int3   
   140005eea:	int3   
   140005eeb:	int3   
   140005eec:	int3   
   140005eed:	int3   
   140005eee:	int3   
   140005eef:	int3   
   140005ef0:	mov    r8,QWORD PTR [rdx]
   140005ef3:	mov    rax,QWORD PTR [r8+0x10]
   140005ef7:	mov    QWORD PTR [rdx],rax
   140005efa:	mov    rax,QWORD PTR [r8+0x10]
   140005efe:	cmp    BYTE PTR [rax+0x19],0x0
   140005f02:	jne    0x140005f08
   140005f04:	mov    QWORD PTR [rax+0x8],rdx
   140005f08:	mov    rax,QWORD PTR [rdx+0x8]
   140005f0c:	mov    QWORD PTR [r8+0x8],rax
   140005f10:	mov    rax,QWORD PTR [rcx]
   140005f13:	cmp    rdx,QWORD PTR [rax+0x8]
   140005f17:	jne    0x140005f26
   140005f19:	mov    QWORD PTR [rax+0x8],r8
   140005f1d:	mov    QWORD PTR [r8+0x10],rdx
   140005f21:	mov    QWORD PTR [rdx+0x8],r8
   140005f25:	ret    
   140005f26:	mov    rax,QWORD PTR [rdx+0x8]
   140005f2a:	cmp    rdx,QWORD PTR [rax+0x10]
   140005f2e:	jne    0x140005f3d
   140005f30:	mov    QWORD PTR [rax+0x10],r8
   140005f34:	mov    QWORD PTR [r8+0x10],rdx
   140005f38:	mov    QWORD PTR [rdx+0x8],r8
   140005f3c:	ret    
   140005f3d:	mov    QWORD PTR [rax],r8
   140005f40:	mov    QWORD PTR [r8+0x10],rdx
   140005f44:	mov    QWORD PTR [rdx+0x8],r8
   140005f48:	ret    
   140005f49:	int3   
   140005f4a:	int3   
   140005f4b:	int3   
   140005f4c:	int3   
   140005f4d:	int3   
   140005f4e:	int3   
   140005f4f:	int3   
   140005f50:	mov    r8,rcx
   140005f53:	mov    rcx,QWORD PTR [rcx+0x18]
   140005f57:	mov    rax,QWORD PTR [rcx]
   140005f5a:	lea    r9,[r8+0x80]
   140005f61:	cmp    rax,r9
   140005f64:	je     0x140005f7c
   140005f66:	mov    QWORD PTR [r8+0x68],rax
   140005f6a:	mov    rax,QWORD PTR [r8+0x50]
   140005f6e:	movsxd rdx,DWORD PTR [rax]
   140005f71:	mov    rax,QWORD PTR [r8+0x38]
   140005f75:	add    rdx,QWORD PTR [rax]
   140005f78:	mov    QWORD PTR [r8+0x70],rdx
   140005f7c:	mov    QWORD PTR [rcx],r9
   140005f7f:	mov    rax,QWORD PTR [r8+0x38]
   140005f83:	mov    ecx,r8d
   140005f86:	mov    QWORD PTR [rax],r9
   140005f89:	mov    rax,QWORD PTR [r8+0x50]
   140005f8d:	sub    ecx,r9d
   140005f90:	add    ecx,0x81
   140005f96:	mov    DWORD PTR [rax],ecx
   140005f98:	ret    
   140005f99:	int3   
   140005f9a:	int3   
   140005f9b:	int3   
   140005f9c:	int3   
   140005f9d:	int3   
   140005f9e:	int3   
   140005f9f:	int3   
   140005fa0:	sub    rsp,0x28
   140005fa4:	mov    r8,QWORD PTR [rcx]
   140005fa7:	lea    rdx,[rsp+0x30]
   140005fac:	mov    r9,r8
   140005faf:	mov    r8,QWORD PTR [r8]
   140005fb2:	call   0x140006f00
   140005fb7:	add    rsp,0x28
   140005fbb:	ret    
   140005fbc:	int3   
   140005fbd:	int3   
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	mov    QWORD PTR [rsp+0x10],rbx
   140005fc5:	push   rdi
   140005fc6:	sub    rsp,0x20
   140005fca:	mov    rdi,r8
   140005fcd:	mov    rbx,rcx
   140005fd0:	test   dl,dl
   140005fd2:	je     0x140005ffd
   140005fd4:	cmp    QWORD PTR [rcx+0x18],0x10
   140005fd9:	jb     0x140005ffd
   140005fdb:	mov    QWORD PTR [rsp+0x30],rsi
   140005fe0:	mov    rsi,QWORD PTR [rcx]
   140005fe3:	test   r8,r8
   140005fe6:	je     0x140005ff0
   140005fe8:	mov    rdx,rsi
   140005feb:	call   0x140017346
   140005ff0:	mov    rcx,rsi
   140005ff3:	call   0x14001716e
   140005ff8:	mov    rsi,QWORD PTR [rsp+0x30]
   140005ffd:	mov    QWORD PTR [rbx+0x18],0xf
   140006005:	mov    QWORD PTR [rbx+0x10],rdi
   140006009:	mov    BYTE PTR [rdi+rbx*1],0x0
   14000600d:	mov    rbx,QWORD PTR [rsp+0x38]
   140006012:	add    rsp,0x20
   140006016:	pop    rdi
   140006017:	ret    
   140006018:	int3   
   140006019:	int3   
   14000601a:	int3   
   14000601b:	int3   
   14000601c:	int3   
   14000601d:	int3   
   14000601e:	int3   
   14000601f:	int3   
   140006020:	mov    rcx,QWORD PTR [rcx+0x90]
   140006027:	test   rcx,rcx
   14000602a:	je     0x140006033
   14000602c:	rex.W jmp QWORD PTR [rip+0x1322d]        # 0x140019260
   140006033:	ret    
   140006034:	int3   
   140006035:	int3   
   140006036:	int3   
   140006037:	int3   
   140006038:	int3   
   140006039:	int3   
   14000603a:	int3   
   14000603b:	int3   
   14000603c:	int3   
   14000603d:	int3   
   14000603e:	int3   
   14000603f:	int3   
   140006040:	sub    rsp,0x28
   140006044:	lea    rcx,[rip+0x14c4d]        # 0x14001ac98
   14000604b:	call   QWORD PTR [rip+0x1318f]        # 0x1400191e0
   140006051:	int3   
   140006052:	int3   
   140006053:	int3   
   140006054:	int3   
   140006055:	int3   
   140006056:	int3   
   140006057:	int3   
   140006058:	int3   
   140006059:	int3   
   14000605a:	int3   
   14000605b:	int3   
   14000605c:	int3   
   14000605d:	int3   
   14000605e:	int3   
   14000605f:	int3   
   140006060:	sub    rsp,0x28
   140006064:	lea    rcx,[rip+0x14c3d]        # 0x14001aca8
   14000606b:	call   QWORD PTR [rip+0x1317f]        # 0x1400191f0
   140006071:	int3   
   140006072:	int3   
   140006073:	int3   
   140006074:	int3   
   140006075:	int3   
   140006076:	int3   
   140006077:	int3   
   140006078:	int3   
   140006079:	int3   
   14000607a:	int3   
   14000607b:	int3   
   14000607c:	int3   
   14000607d:	int3   
   14000607e:	int3   
   14000607f:	int3   
   140006080:	rex push rdi
   140006082:	sub    rsp,0x60
   140006086:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000608f:	mov    QWORD PTR [rsp+0x70],rbx
   140006094:	mov    QWORD PTR [rsp+0x78],rsi
   140006099:	mov    edi,r9d
   14000609c:	mov    rbx,r8
   14000609f:	movzx  esi,dl
   1400060a2:	cmp    QWORD PTR [r8+0x8],0x0
   1400060a7:	je     0x1400060d9
   1400060a9:	xor    r10d,r10d
   1400060ac:	mov    rax,rbx
   1400060af:	mov    r11d,DWORD PTR [rcx+0x4]
   1400060b3:	mov    r9d,DWORD PTR [rax]
   1400060b6:	lea    eax,[r9+0x1]
   1400060ba:	cmp    eax,r11d
   1400060bd:	jb     0x1400060c7
   1400060bf:	lea    r11d,[r9+0x2]
   1400060c3:	mov    DWORD PTR [rcx+0x4],r11d
   1400060c7:	inc    r10
   1400060ca:	lea    rax,[r10+r10*4]
   1400060ce:	lea    rax,[r8+rax*8]
   1400060d2:	cmp    QWORD PTR [rax+0x8],0x0
   1400060d7:	jne    0x1400060b3
   1400060d9:	lea    rax,[rip+0x14320]        # 0x14001a400
   1400060e0:	mov    QWORD PTR [rsp+0x48],rax
   1400060e5:	mov    QWORD PTR [rsp+0x50],rcx
   1400060ea:	mov    eax,DWORD PTR [rsp+0x98]
   1400060f1:	mov    DWORD PTR [rsp+0x38],eax
   1400060f5:	mov    BYTE PTR [rsp+0x30],0x0
   1400060fa:	movzx  eax,BYTE PTR [rsp+0xa0]
   140006102:	mov    BYTE PTR [rsp+0x28],al
   140006106:	lea    rax,[rsp+0x48]
   14000610b:	mov    QWORD PTR [rsp+0x20],rax
   140006110:	mov    r9,QWORD PTR [rsp+0x90]
   140006118:	mov    r8d,edi
   14000611b:	mov    rdx,rbx
   14000611e:	movzx  ecx,sil
   140006122:	call   0x14000a690
   140006127:	nop
   140006128:	mov    rbx,QWORD PTR [rsp+0x70]
   14000612d:	mov    rsi,QWORD PTR [rsp+0x78]
   140006132:	add    rsp,0x60
   140006136:	pop    rdi
   140006137:	ret    
   140006138:	int3   
   140006139:	int3   
   14000613a:	int3   
   14000613b:	int3   
   14000613c:	int3   
   14000613d:	int3   
   14000613e:	int3   
   14000613f:	int3   
   140006140:	sub    rsp,0x28
   140006144:	xor    eax,eax
   140006146:	test   rdx,rdx
   140006149:	je     0x140006165
   14000614b:	cmp    rdx,0xffffffffffffffff
   14000614f:	ja     0x14000615e
   140006151:	mov    rcx,rdx
   140006154:	call   0x140017168
   140006159:	test   rax,rax
   14000615c:	jne    0x140006165
   14000615e:	call   QWORD PTR [rip+0x13074]        # 0x1400191d8
   140006164:	int3   
   140006165:	add    rsp,0x28
   140006169:	ret    
   14000616a:	int3   
   14000616b:	int3   
   14000616c:	int3   
   14000616d:	int3   
   14000616e:	int3   
   14000616f:	int3   
   140006170:	sub    rsp,0x28
   140006174:	xor    eax,eax
   140006176:	test   rdx,rdx
   140006179:	je     0x1400061a2
   14000617b:	movabs rax,0x3ffffffffffffff
   140006185:	cmp    rdx,rax
   140006188:	ja     0x14000619b
   14000618a:	shl    rdx,0x6
   14000618e:	mov    rcx,rdx
   140006191:	call   0x140017168
   140006196:	test   rax,rax
   140006199:	jne    0x1400061a2
   14000619b:	call   QWORD PTR [rip+0x13037]        # 0x1400191d8
   1400061a1:	int3   
   1400061a2:	add    rsp,0x28
   1400061a6:	ret    
   1400061a7:	int3   
   1400061a8:	int3   
   1400061a9:	int3   
   1400061aa:	int3   
   1400061ab:	int3   
   1400061ac:	int3   
   1400061ad:	int3   
   1400061ae:	int3   
   1400061af:	int3   
   1400061b0:	sub    rsp,0x28
   1400061b4:	xor    eax,eax
   1400061b6:	test   rdx,rdx
   1400061b9:	je     0x1400061d5
   1400061bb:	cmp    rdx,0xffffffffffffffff
   1400061bf:	ja     0x1400061ce
   1400061c1:	mov    rcx,rdx
   1400061c4:	call   0x140017168
   1400061c9:	test   rax,rax
   1400061cc:	jne    0x1400061d5
   1400061ce:	call   QWORD PTR [rip+0x13004]        # 0x1400191d8
   1400061d4:	int3   
   1400061d5:	add    rsp,0x28
   1400061d9:	ret    
   1400061da:	int3   
   1400061db:	int3   
   1400061dc:	int3   
   1400061dd:	int3   
   1400061de:	int3   
   1400061df:	int3   
   1400061e0:	sub    rsp,0x28
   1400061e4:	xor    eax,eax
   1400061e6:	test   rdx,rdx
   1400061e9:	je     0x140006212
   1400061eb:	movabs rax,0x3ffffffffffffff
   1400061f5:	cmp    rdx,rax
   1400061f8:	ja     0x14000620b
   1400061fa:	shl    rdx,0x6
   1400061fe:	mov    rcx,rdx
   140006201:	call   0x140017168
   140006206:	test   rax,rax
   140006209:	jne    0x140006212
   14000620b:	call   QWORD PTR [rip+0x12fc7]        # 0x1400191d8
   140006211:	int3   
   140006212:	add    rsp,0x28
   140006216:	ret    
   140006217:	int3   
   140006218:	int3   
   140006219:	int3   
   14000621a:	int3   
   14000621b:	int3   
   14000621c:	int3   
   14000621d:	int3   
   14000621e:	int3   
   14000621f:	int3   
   140006220:	or     r9,0xffffffffffffffff
   140006224:	xor    r8d,r8d
   140006227:	jmp    0x140006230
   14000622c:	int3   
   14000622d:	int3   
   14000622e:	int3   
   14000622f:	int3   
   140006230:	mov    QWORD PTR [rsp+0x10],rbx
   140006235:	mov    QWORD PTR [rsp+0x18],rbp
   14000623a:	mov    QWORD PTR [rsp+0x20],rsi
   14000623f:	push   r14
   140006241:	sub    rsp,0x20
   140006245:	mov    rax,QWORD PTR [rdx+0x10]
   140006249:	mov    rsi,r9
   14000624c:	mov    rbp,r8
   14000624f:	mov    r14,rdx
   140006252:	mov    rbx,rcx
   140006255:	cmp    rax,r8
   140006258:	jae    0x140006268
   14000625a:	lea    rcx,[rip+0x14a47]        # 0x14001aca8
   140006261:	call   QWORD PTR [rip+0x12f89]        # 0x1400191f0
   140006267:	int3   
   140006268:	sub    rax,r8
   14000626b:	mov    r8,QWORD PTR [rcx+0x10]
   14000626f:	cmp    rax,r9
   140006272:	cmovb  rsi,rax
   140006276:	or     rax,0xffffffffffffffff
   14000627a:	sub    rax,r8
   14000627d:	cmp    rax,rsi
   140006280:	ja     0x140006290
   140006282:	lea    rcx,[rip+0x14a0f]        # 0x14001ac98
   140006289:	call   QWORD PTR [rip+0x12f51]        # 0x1400191e0
   14000628f:	int3   
   140006290:	mov    QWORD PTR [rsp+0x30],rdi
   140006295:	test   rsi,rsi
   140006298:	je     0x140006330
   14000629e:	lea    rdi,[r8+rsi*1]
   1400062a2:	cmp    rdi,0xfffffffffffffffe
   1400062a6:	jbe    0x1400062b6
   1400062a8:	lea    rcx,[rip+0x149e9]        # 0x14001ac98
   1400062af:	call   QWORD PTR [rip+0x12f2b]        # 0x1400191e0
   1400062b5:	int3   
   1400062b6:	mov    rax,QWORD PTR [rcx+0x18]
   1400062ba:	cmp    rax,rdi
   1400062bd:	jae    0x1400062e2
   1400062bf:	mov    rdx,rdi
   1400062c2:	call   0x140005670
   1400062c7:	test   rdi,rdi
   1400062ca:	je     0x140006330
   1400062cc:	cmp    QWORD PTR [r14+0x18],0x10
   1400062d1:	jb     0x1400062d6
   1400062d3:	mov    r14,QWORD PTR [r14]
   1400062d6:	cmp    QWORD PTR [rbx+0x18],0x10
   1400062db:	jb     0x140006301
   1400062dd:	mov    rcx,QWORD PTR [rbx]
   1400062e0:	jmp    0x140006304
   1400062e2:	test   rdi,rdi
   1400062e5:	jne    0x1400062cc
   1400062e7:	mov    QWORD PTR [rcx+0x10],rdi
   1400062eb:	cmp    rax,0x10
   1400062ef:	jb     0x1400062f9
   1400062f1:	mov    rax,QWORD PTR [rcx]
   1400062f4:	mov    BYTE PTR [rax],dil
   1400062f7:	jmp    0x140006330
   1400062f9:	mov    rax,rcx
   1400062fc:	mov    BYTE PTR [rcx],0x0
   1400062ff:	jmp    0x140006330
   140006301:	mov    rcx,rbx
   140006304:	test   rsi,rsi
   140006307:	je     0x140006319
   140006309:	add    rcx,QWORD PTR [rbx+0x10]
   14000630d:	lea    rdx,[r14+rbp*1]
   140006311:	mov    r8,rsi
   140006314:	call   0x140017346
   140006319:	cmp    QWORD PTR [rbx+0x18],0x10
   14000631e:	mov    QWORD PTR [rbx+0x10],rdi
   140006322:	jb     0x140006329
   140006324:	mov    rax,QWORD PTR [rbx]
   140006327:	jmp    0x14000632c
   140006329:	mov    rax,rbx
   14000632c:	mov    BYTE PTR [rax+rdi*1],0x0
   140006330:	mov    rdi,QWORD PTR [rsp+0x30]
   140006335:	mov    rbp,QWORD PTR [rsp+0x40]
   14000633a:	mov    rsi,QWORD PTR [rsp+0x48]
   14000633f:	mov    rax,rbx
   140006342:	mov    rbx,QWORD PTR [rsp+0x38]
   140006347:	add    rsp,0x20
   14000634b:	pop    r14
   14000634d:	ret    
   14000634e:	int3   
   14000634f:	int3   
   140006350:	cmp    BYTE PTR [rdx],0x0
   140006353:	jne    0x14000635d
   140006355:	xor    r8d,r8d
   140006358:	jmp    0x140006370
   14000635d:	or     r8,0xffffffffffffffff
   140006361:	inc    r8
   140006364:	cmp    BYTE PTR [rdx+r8*1],0x0
   140006369:	jne    0x140006361
   14000636b:	jmp    0x140006370
   140006370:	mov    QWORD PTR [rsp+0x10],rbx
   140006375:	mov    QWORD PTR [rsp+0x18],rbp
   14000637a:	push   rsi
   14000637b:	sub    rsp,0x20
   14000637f:	mov    rsi,r8
   140006382:	mov    rbp,rdx
   140006385:	mov    rbx,rcx
   140006388:	test   rdx,rdx
   14000638b:	je     0x1400063e7
   14000638d:	mov    r8,QWORD PTR [rcx+0x18]
   140006391:	cmp    r8,0x10
   140006395:	jb     0x14000639c
   140006397:	mov    rax,QWORD PTR [rcx]
   14000639a:	jmp    0x14000639f
   14000639c:	mov    rax,rcx
   14000639f:	cmp    rdx,rax
   1400063a2:	jb     0x1400063e7
   1400063a4:	cmp    r8,0x10
   1400063a8:	jb     0x1400063ad
   1400063aa:	mov    rcx,QWORD PTR [rcx]
   1400063ad:	add    rcx,QWORD PTR [rbx+0x10]
   1400063b1:	cmp    rcx,rdx
   1400063b4:	jbe    0x1400063e7
   1400063b6:	cmp    r8,0x10
   1400063ba:	jb     0x1400063c1
   1400063bc:	mov    rax,QWORD PTR [rbx]
   1400063bf:	jmp    0x1400063c4
   1400063c1:	mov    rax,rbx
   1400063c4:	sub    rbp,rax
   1400063c7:	mov    r9,rsi
   1400063ca:	mov    rdx,rbx
   1400063cd:	mov    r8,rbp
   1400063d0:	mov    rcx,rbx
   1400063d3:	mov    rbx,QWORD PTR [rsp+0x38]
   1400063d8:	mov    rbp,QWORD PTR [rsp+0x40]
   1400063dd:	add    rsp,0x20
   1400063e1:	pop    rsi
   1400063e2:	jmp    0x140006230
   1400063e7:	mov    r8,QWORD PTR [rbx+0x10]
   1400063eb:	or     rax,0xffffffffffffffff
   1400063ef:	sub    rax,r8
   1400063f2:	cmp    rax,rsi
   1400063f5:	ja     0x140006405
   1400063f7:	lea    rcx,[rip+0x1489a]        # 0x14001ac98
   1400063fe:	call   QWORD PTR [rip+0x12ddc]        # 0x1400191e0
   140006404:	int3   
   140006405:	mov    QWORD PTR [rsp+0x30],rdi
   14000640a:	test   rsi,rsi
   14000640d:	je     0x14000649d
   140006413:	lea    rdi,[r8+rsi*1]
   140006417:	cmp    rdi,0xfffffffffffffffe
   14000641b:	jbe    0x14000642b
   14000641d:	lea    rcx,[rip+0x14874]        # 0x14001ac98
   140006424:	call   QWORD PTR [rip+0x12db6]        # 0x1400191e0
   14000642a:	int3   
   14000642b:	mov    rax,QWORD PTR [rbx+0x18]
   14000642f:	cmp    rax,rdi
   140006432:	jae    0x140006450
   140006434:	mov    rdx,rdi
   140006437:	mov    rcx,rbx
   14000643a:	call   0x140005670
   14000643f:	test   rdi,rdi
   140006442:	je     0x14000649d
   140006444:	cmp    QWORD PTR [rbx+0x18],0x10
   140006449:	jb     0x14000646f
   14000644b:	mov    rcx,QWORD PTR [rbx]
   14000644e:	jmp    0x140006472
   140006450:	test   rdi,rdi
   140006453:	jne    0x140006444
   140006455:	mov    QWORD PTR [rbx+0x10],rdi
   140006459:	cmp    rax,0x10
   14000645d:	jb     0x140006467
   14000645f:	mov    rax,QWORD PTR [rbx]
   140006462:	mov    BYTE PTR [rax],dil
   140006465:	jmp    0x14000649d
   140006467:	mov    rax,rbx
   14000646a:	mov    BYTE PTR [rbx],0x0
   14000646d:	jmp    0x14000649d
   14000646f:	mov    rcx,rbx
   140006472:	test   rsi,rsi
   140006475:	je     0x140006486
   140006477:	add    rcx,QWORD PTR [rbx+0x10]
   14000647b:	mov    r8,rsi
   14000647e:	mov    rdx,rbp
   140006481:	call   0x140017346
   140006486:	cmp    QWORD PTR [rbx+0x18],0x10
   14000648b:	mov    QWORD PTR [rbx+0x10],rdi
   14000648f:	jb     0x140006496
   140006491:	mov    rax,QWORD PTR [rbx]
   140006494:	jmp    0x140006499
   140006496:	mov    rax,rbx
   140006499:	mov    BYTE PTR [rax+rdi*1],0x0
   14000649d:	mov    rdi,QWORD PTR [rsp+0x30]
   1400064a2:	mov    rbp,QWORD PTR [rsp+0x40]
   1400064a7:	mov    rax,rbx
   1400064aa:	mov    rbx,QWORD PTR [rsp+0x38]
   1400064af:	add    rsp,0x20
   1400064b3:	pop    rsi
   1400064b4:	ret    
   1400064b5:	int3   
   1400064b6:	int3   
   1400064b7:	int3   
   1400064b8:	int3   
   1400064b9:	int3   
   1400064ba:	int3   
   1400064bb:	int3   
   1400064bc:	int3   
   1400064bd:	int3   
   1400064be:	int3   
   1400064bf:	int3   
   1400064c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400064c5:	mov    QWORD PTR [rsp+0x18],rbp
   1400064ca:	push   rsi
   1400064cb:	sub    rsp,0x20
   1400064cf:	or     rax,0xffffffffffffffff
   1400064d3:	movzx  ebp,r8b
   1400064d7:	mov    r8,QWORD PTR [rcx+0x10]
   1400064db:	sub    rax,r8
   1400064de:	mov    rsi,rdx
   1400064e1:	mov    rbx,rcx
   1400064e4:	cmp    rax,rdx
   1400064e7:	ja     0x1400064f7
   1400064e9:	lea    rcx,[rip+0x147a8]        # 0x14001ac98
   1400064f0:	call   QWORD PTR [rip+0x12cea]        # 0x1400191e0
   1400064f6:	int3   
   1400064f7:	mov    QWORD PTR [rsp+0x30],rdi
   1400064fc:	test   rdx,rdx
   1400064ff:	je     0x1400065aa
   140006505:	lea    rdi,[r8+rdx*1]
   140006509:	cmp    rdi,0xfffffffffffffffe
   14000650d:	jbe    0x14000651d
   14000650f:	lea    rcx,[rip+0x14782]        # 0x14001ac98
   140006516:	call   QWORD PTR [rip+0x12cc4]        # 0x1400191e0
   14000651c:	int3   
   14000651d:	mov    rax,QWORD PTR [rcx+0x18]
   140006521:	cmp    rax,rdi
   140006524:	jae    0x14000654d
   140006526:	mov    rdx,rdi
   140006529:	call   0x140005670
   14000652e:	test   rdi,rdi
   140006531:	je     0x1400065aa
   140006533:	mov    rcx,QWORD PTR [rbx+0x10]
   140006537:	cmp    rsi,0x1
   14000653b:	jne    0x140006575
   14000653d:	cmp    QWORD PTR [rbx+0x18],0x10
   140006542:	jb     0x14000656c
   140006544:	mov    rax,QWORD PTR [rbx]
   140006547:	mov    BYTE PTR [rax+rcx*1],bpl
   14000654b:	jmp    0x140006593
   14000654d:	test   rdi,rdi
   140006550:	jne    0x140006533
   140006552:	mov    QWORD PTR [rcx+0x10],rdi
   140006556:	cmp    rax,0x10
   14000655a:	jb     0x140006564
   14000655c:	mov    rax,QWORD PTR [rcx]
   14000655f:	mov    BYTE PTR [rax],dil
   140006562:	jmp    0x1400065aa
   140006564:	mov    rax,rcx
   140006567:	mov    BYTE PTR [rcx],0x0
   14000656a:	jmp    0x1400065aa
   14000656c:	mov    rax,rbx
   14000656f:	mov    BYTE PTR [rbx+rcx*1],bpl
   140006573:	jmp    0x140006593
   140006575:	cmp    QWORD PTR [rbx+0x18],0x10
   14000657a:	jb     0x140006581
   14000657c:	mov    rax,QWORD PTR [rbx]
   14000657f:	jmp    0x140006584
   140006581:	mov    rax,rbx
   140006584:	movsx  edx,bpl
   140006588:	add    rcx,rax
   14000658b:	mov    r8,rsi
   14000658e:	call   0x14001734c
   140006593:	cmp    QWORD PTR [rbx+0x18],0x10
   140006598:	mov    QWORD PTR [rbx+0x10],rdi
   14000659c:	jb     0x1400065a3
   14000659e:	mov    rax,QWORD PTR [rbx]
   1400065a1:	jmp    0x1400065a6
   1400065a3:	mov    rax,rbx
   1400065a6:	mov    BYTE PTR [rax+rdi*1],0x0
   1400065aa:	mov    rdi,QWORD PTR [rsp+0x30]
   1400065af:	mov    rbp,QWORD PTR [rsp+0x40]
   1400065b4:	mov    rax,rbx
   1400065b7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400065bc:	add    rsp,0x20
   1400065c0:	pop    rsi
   1400065c1:	ret    
   1400065c2:	int3   
   1400065c3:	int3   
   1400065c4:	int3   
   1400065c5:	int3   
   1400065c6:	int3   
   1400065c7:	int3   
   1400065c8:	int3   
   1400065c9:	int3   
   1400065ca:	int3   
   1400065cb:	int3   
   1400065cc:	int3   
   1400065cd:	int3   
   1400065ce:	int3   
   1400065cf:	int3   
   1400065d0:	movzx  r10d,BYTE PTR [rcx+0x8]
   1400065d5:	lea    rax,[rcx+0x8]
   1400065d9:	mov    r9,rcx
   1400065dc:	and    r10b,0x1
   1400065e0:	jne    0x1400065fe
   1400065e2:	mov    r8,rax
   1400065e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400065f0:	mov    r9,QWORD PTR [r8]
   1400065f3:	test   BYTE PTR [r9+0x8],0x1
   1400065f8:	lea    r8,[r9+0x8]
   1400065fc:	je     0x1400065f0
   1400065fe:	mov    r8,QWORD PTR [r9+0x8]
   140006602:	and    r8,0xfffffffffffffffe
   140006606:	test   r10b,r10b
   140006609:	jne    0x14000661d
   14000660b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006610:	mov    rcx,QWORD PTR [rax]
   140006613:	test   BYTE PTR [rcx+0x8],0x1
   140006617:	lea    rax,[rcx+0x8]
   14000661b:	je     0x140006610
   14000661d:	mov    QWORD PTR [r8],rdx
   140006620:	mov    QWORD PTR [rdx+0x8],r8
   140006624:	mov    rax,rcx
   140006627:	or     rax,0x1
   14000662b:	mov    QWORD PTR [rdx],rax
   14000662e:	or     rdx,0x1
   140006632:	mov    QWORD PTR [rcx+0x8],rdx
   140006636:	ret    
   140006637:	int3   
   140006638:	int3   
   140006639:	int3   
   14000663a:	int3   
   14000663b:	int3   
   14000663c:	int3   
   14000663d:	int3   
   14000663e:	int3   
   14000663f:	int3   
   140006640:	mov    QWORD PTR [rsp+0x8],rbx
   140006645:	mov    QWORD PTR [rsp+0x10],rbp
   14000664a:	mov    QWORD PTR [rsp+0x18],rsi
   14000664f:	push   rdi
   140006650:	sub    rsp,0x20
   140006654:	mov    rdi,QWORD PTR [rdx+0x10]
   140006658:	mov    rbp,r8
   14000665b:	mov    rsi,rdx
   14000665e:	mov    rbx,rcx
   140006661:	cmp    rdi,r8
   140006664:	jae    0x140006674
   140006666:	lea    rcx,[rip+0x1463b]        # 0x14001aca8
   14000666d:	call   QWORD PTR [rip+0x12b7d]        # 0x1400191f0
   140006673:	int3   
   140006674:	sub    rdi,r8
   140006677:	cmp    r9,rdi
   14000667a:	cmovb  rdi,r9
   14000667e:	cmp    rcx,rdx
   140006681:	jne    0x1400066bc
   140006683:	lea    rax,[rdi+r8*1]
   140006687:	cmp    QWORD PTR [rcx+0x10],rax
   14000668b:	jae    0x14000669b
   14000668d:	lea    rcx,[rip+0x14614]        # 0x14001aca8
   140006694:	call   QWORD PTR [rip+0x12b56]        # 0x1400191f0
   14000669a:	int3   
   14000669b:	cmp    QWORD PTR [rcx+0x18],0x10
   1400066a0:	mov    QWORD PTR [rcx+0x10],rax
   1400066a4:	jb     0x1400066a9
   1400066a6:	mov    rcx,QWORD PTR [rcx]
   1400066a9:	mov    BYTE PTR [rcx+rax*1],0x0
   1400066ad:	xor    edx,edx
   1400066af:	mov    rcx,rbx
   1400066b2:	call   0x1400073f0
   1400066b7:	jmp    0x14000674a
   1400066bc:	cmp    rdi,0xfffffffffffffffe
   1400066c0:	jbe    0x1400066d0
   1400066c2:	lea    rcx,[rip+0x145cf]        # 0x14001ac98
   1400066c9:	call   QWORD PTR [rip+0x12b11]        # 0x1400191e0
   1400066cf:	int3   
   1400066d0:	mov    rax,QWORD PTR [rcx+0x18]
   1400066d4:	cmp    rax,rdi
   1400066d7:	jae    0x140006700
   1400066d9:	mov    r8,QWORD PTR [rcx+0x10]
   1400066dd:	mov    rdx,rdi
   1400066e0:	call   0x140005670
   1400066e5:	test   rdi,rdi
   1400066e8:	je     0x14000674a
   1400066ea:	cmp    QWORD PTR [rsi+0x18],0x10
   1400066ef:	jb     0x1400066f4
   1400066f1:	mov    rsi,QWORD PTR [rsi]
   1400066f4:	cmp    QWORD PTR [rbx+0x18],0x10
   1400066f9:	jb     0x14000671f
   1400066fb:	mov    rcx,QWORD PTR [rbx]
   1400066fe:	jmp    0x140006722
   140006700:	test   rdi,rdi
   140006703:	jne    0x1400066ea
   140006705:	mov    QWORD PTR [rcx+0x10],rdi
   140006709:	cmp    rax,0x10
   14000670d:	jb     0x140006717
   14000670f:	mov    rax,QWORD PTR [rcx]
   140006712:	mov    BYTE PTR [rax],dil
   140006715:	jmp    0x14000674a
   140006717:	mov    rax,rcx
   14000671a:	mov    BYTE PTR [rcx],0x0
   14000671d:	jmp    0x14000674a
   14000671f:	mov    rcx,rbx
   140006722:	test   rdi,rdi
   140006725:	je     0x140006733
   140006727:	lea    rdx,[rsi+rbp*1]
   14000672b:	mov    r8,rdi
   14000672e:	call   0x140017346
   140006733:	cmp    QWORD PTR [rbx+0x18],0x10
   140006738:	mov    QWORD PTR [rbx+0x10],rdi
   14000673c:	jb     0x140006743
   14000673e:	mov    rax,QWORD PTR [rbx]
   140006741:	jmp    0x140006746
   140006743:	mov    rax,rbx
   140006746:	mov    BYTE PTR [rax+rdi*1],0x0
   14000674a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000674f:	mov    rsi,QWORD PTR [rsp+0x40]
   140006754:	mov    rax,rbx
   140006757:	mov    rbx,QWORD PTR [rsp+0x30]
   14000675c:	add    rsp,0x20
   140006760:	pop    rdi
   140006761:	ret    
   140006762:	int3   
   140006763:	int3   
   140006764:	int3   
   140006765:	int3   
   140006766:	int3   
   140006767:	int3   
   140006768:	int3   
   140006769:	int3   
   14000676a:	int3   
   14000676b:	int3   
   14000676c:	int3   
   14000676d:	int3   
   14000676e:	int3   
   14000676f:	int3   
   140006770:	cmp    BYTE PTR [rdx],0x0
   140006773:	jne    0x14000677d
   140006775:	xor    r8d,r8d
   140006778:	jmp    0x140006790
   14000677d:	or     r8,0xffffffffffffffff
   140006781:	inc    r8
   140006784:	cmp    BYTE PTR [rdx+r8*1],0x0
   140006789:	jne    0x140006781
   14000678b:	jmp    0x140006790
   140006790:	mov    QWORD PTR [rsp+0x8],rbx
   140006795:	mov    QWORD PTR [rsp+0x10],rsi
   14000679a:	push   rdi
   14000679b:	sub    rsp,0x20
   14000679f:	mov    rdi,r8
   1400067a2:	mov    rsi,rdx
   1400067a5:	mov    rbx,rcx
   1400067a8:	test   rdx,rdx
   1400067ab:	je     0x140006807
   1400067ad:	mov    rdx,QWORD PTR [rcx+0x18]
   1400067b1:	cmp    rdx,0x10
   1400067b5:	jb     0x1400067bc
   1400067b7:	mov    rax,QWORD PTR [rcx]
   1400067ba:	jmp    0x1400067bf
   1400067bc:	mov    rax,rcx
   1400067bf:	cmp    rsi,rax
   1400067c2:	jb     0x140006807
   1400067c4:	cmp    rdx,0x10
   1400067c8:	jb     0x1400067cd
   1400067ca:	mov    rcx,QWORD PTR [rcx]
   1400067cd:	add    rcx,QWORD PTR [rbx+0x10]
   1400067d1:	cmp    rcx,rsi
   1400067d4:	jbe    0x140006807
   1400067d6:	cmp    rdx,0x10
   1400067da:	jb     0x1400067e1
   1400067dc:	mov    rax,QWORD PTR [rbx]
   1400067df:	jmp    0x1400067e4
   1400067e1:	mov    rax,rbx
   1400067e4:	sub    rsi,rax
   1400067e7:	mov    r9,r8
   1400067ea:	mov    rdx,rbx
   1400067ed:	mov    r8,rsi
   1400067f0:	mov    rcx,rbx
   1400067f3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400067f8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400067fd:	add    rsp,0x20
   140006801:	pop    rdi
   140006802:	jmp    0x140006640
   140006807:	cmp    r8,0xfffffffffffffffe
   14000680b:	jbe    0x14000681b
   14000680d:	lea    rcx,[rip+0x14484]        # 0x14001ac98
   140006814:	call   QWORD PTR [rip+0x129c6]        # 0x1400191e0
   14000681a:	int3   
   14000681b:	mov    rax,QWORD PTR [rbx+0x18]
   14000681f:	cmp    rax,r8
   140006822:	jae    0x140006844
   140006824:	mov    r8,QWORD PTR [rbx+0x10]
   140006828:	mov    rdx,rdi
   14000682b:	mov    rcx,rbx
   14000682e:	call   0x140005670
   140006833:	test   rdi,rdi
   140006836:	je     0x1400068ac
   140006838:	cmp    QWORD PTR [rbx+0x18],0x10
   14000683d:	jb     0x140006882
   14000683f:	mov    rcx,QWORD PTR [rbx]
   140006842:	jmp    0x140006885
   140006844:	test   r8,r8
   140006847:	jne    0x140006833
   140006849:	mov    QWORD PTR [rbx+0x10],r8
   14000684d:	cmp    rax,0x10
   140006851:	jb     0x14000686c
   140006853:	mov    rax,QWORD PTR [rbx]
   140006856:	mov    BYTE PTR [rax],r8b
   140006859:	mov    rax,rbx
   14000685c:	mov    rbx,QWORD PTR [rsp+0x30]
   140006861:	mov    rsi,QWORD PTR [rsp+0x38]
   140006866:	add    rsp,0x20
   14000686a:	pop    rdi
   14000686b:	ret    
   14000686c:	mov    rax,rbx
   14000686f:	mov    BYTE PTR [rbx],0x0
   140006872:	mov    rbx,QWORD PTR [rsp+0x30]
   140006877:	mov    rsi,QWORD PTR [rsp+0x38]
   14000687c:	add    rsp,0x20
   140006880:	pop    rdi
   140006881:	ret    
   140006882:	mov    rcx,rbx
   140006885:	test   rdi,rdi
   140006888:	je     0x140006895
   14000688a:	mov    r8,rdi
   14000688d:	mov    rdx,rsi
   140006890:	call   0x140017346
   140006895:	cmp    QWORD PTR [rbx+0x18],0x10
   14000689a:	mov    QWORD PTR [rbx+0x10],rdi
   14000689e:	jb     0x1400068a5
   1400068a0:	mov    rax,QWORD PTR [rbx]
   1400068a3:	jmp    0x1400068a8
   1400068a5:	mov    rax,rbx
   1400068a8:	mov    BYTE PTR [rax+rdi*1],0x0
   1400068ac:	mov    rsi,QWORD PTR [rsp+0x38]
   1400068b1:	mov    rax,rbx
   1400068b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400068b9:	add    rsp,0x20
   1400068bd:	pop    rdi
   1400068be:	ret    
   1400068bf:	int3   
   1400068c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400068c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400068ca:	push   rdi
   1400068cb:	sub    rsp,0x20
   1400068cf:	movzx  esi,r8b
   1400068d3:	mov    rdi,rdx
   1400068d6:	mov    rbx,rcx
   1400068d9:	cmp    rdx,0xffffffffffffffff
   1400068dd:	jne    0x1400068ed
   1400068df:	lea    rcx,[rip+0x143b2]        # 0x14001ac98
   1400068e6:	call   QWORD PTR [rip+0x128f4]        # 0x1400191e0
   1400068ec:	int3   
   1400068ed:	cmp    rdx,0xfffffffffffffffe
   1400068f1:	jbe    0x140006901
   1400068f3:	lea    rcx,[rip+0x1439e]        # 0x14001ac98
   1400068fa:	call   QWORD PTR [rip+0x128e0]        # 0x1400191e0
   140006900:	int3   
   140006901:	mov    rax,QWORD PTR [rcx+0x18]
   140006905:	cmp    rax,rdx
   140006908:	jae    0x140006931
   14000690a:	mov    r8,QWORD PTR [rcx+0x10]
   14000690e:	call   0x140005670
   140006913:	test   rdi,rdi
   140006916:	je     0x1400069ab
   14000691c:	cmp    rdi,0x1
   140006920:	jne    0x140006979
   140006922:	cmp    QWORD PTR [rbx+0x18],0x10
   140006927:	jb     0x140006971
   140006929:	mov    rax,QWORD PTR [rbx]
   14000692c:	mov    BYTE PTR [rax],sil
   14000692f:	jmp    0x140006994
   140006931:	test   rdx,rdx
   140006934:	jne    0x140006913
   140006936:	mov    QWORD PTR [rcx+0x10],rdx
   14000693a:	cmp    rax,0x10
   14000693e:	jb     0x140006958
   140006940:	mov    rax,QWORD PTR [rcx]
   140006943:	mov    BYTE PTR [rax],dl
   140006945:	mov    rax,rbx
   140006948:	mov    rbx,QWORD PTR [rsp+0x30]
   14000694d:	mov    rsi,QWORD PTR [rsp+0x38]
   140006952:	add    rsp,0x20
   140006956:	pop    rdi
   140006957:	ret    
   140006958:	mov    rax,rcx
   14000695b:	mov    BYTE PTR [rcx],0x0
   14000695e:	mov    rax,rbx
   140006961:	mov    rbx,QWORD PTR [rsp+0x30]
   140006966:	mov    rsi,QWORD PTR [rsp+0x38]
   14000696b:	add    rsp,0x20
   14000696f:	pop    rdi
   140006970:	ret    
   140006971:	mov    rax,rbx
   140006974:	mov    BYTE PTR [rbx],sil
   140006977:	jmp    0x140006994
   140006979:	cmp    QWORD PTR [rbx+0x18],0x10
   14000697e:	jb     0x140006985
   140006980:	mov    rcx,QWORD PTR [rbx]
   140006983:	jmp    0x140006988
   140006985:	mov    rcx,rbx
   140006988:	movsx  edx,sil
   14000698c:	mov    r8,rdi
   14000698f:	call   0x14001734c
   140006994:	cmp    QWORD PTR [rbx+0x18],0x10
   140006999:	mov    QWORD PTR [rbx+0x10],rdi
   14000699d:	jb     0x1400069a4
   14000699f:	mov    rax,QWORD PTR [rbx]
   1400069a2:	jmp    0x1400069a7
   1400069a4:	mov    rax,rbx
   1400069a7:	mov    BYTE PTR [rax+rdi*1],0x0
   1400069ab:	mov    rsi,QWORD PTR [rsp+0x38]
   1400069b0:	mov    rax,rbx
   1400069b3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400069b8:	add    rsp,0x20
   1400069bc:	pop    rdi
   1400069bd:	ret    
   1400069be:	int3   
   1400069bf:	int3   
   1400069c0:	rex push rbx
   1400069c2:	sub    rsp,0x20
   1400069c6:	mov    rax,rdx
   1400069c9:	movsx  edx,r8b
   1400069cd:	mov    rbx,rcx
   1400069d0:	mov    r8,rax
   1400069d3:	call   0x14001734c
   1400069d8:	mov    rax,rbx
   1400069db:	add    rsp,0x20
   1400069df:	pop    rbx
   1400069e0:	ret    
   1400069e1:	int3   
   1400069e2:	int3   
   1400069e3:	int3   
   1400069e4:	int3   
   1400069e5:	int3   
   1400069e6:	int3   
   1400069e7:	int3   
   1400069e8:	int3   
   1400069e9:	int3   
   1400069ea:	int3   
   1400069eb:	int3   
   1400069ec:	int3   
   1400069ed:	int3   
   1400069ee:	int3   
   1400069ef:	int3   
   1400069f0:	movzx  eax,BYTE PTR [rdx]
   1400069f3:	mov    BYTE PTR [rcx],al
   1400069f5:	ret    
   1400069f6:	int3   
   1400069f7:	int3   
   1400069f8:	int3   
   1400069f9:	int3   
   1400069fa:	int3   
   1400069fb:	int3   
   1400069fc:	int3   
   1400069fd:	int3   
   1400069fe:	int3   
   1400069ff:	int3   
   140006a00:	mov    rax,QWORD PTR [rcx]
   140006a03:	mov    rcx,QWORD PTR [rax]
   140006a06:	mov    rax,rdx
   140006a09:	mov    QWORD PTR [rdx],rcx
   140006a0c:	ret    
   140006a0d:	int3   
   140006a0e:	int3   
   140006a0f:	int3   
   140006a10:	cmp    QWORD PTR [rcx+0x18],0x10
   140006a15:	jb     0x140006a21
   140006a17:	mov    rax,QWORD PTR [rcx]
   140006a1a:	mov    QWORD PTR [rdx],rax
   140006a1d:	mov    rax,rdx
   140006a20:	ret    
   140006a21:	mov    QWORD PTR [rdx],rcx
   140006a24:	mov    rax,rdx
   140006a27:	ret    
   140006a28:	int3   
   140006a29:	int3   
   140006a2a:	int3   
   140006a2b:	int3   
   140006a2c:	int3   
   140006a2d:	int3   
   140006a2e:	int3   
   140006a2f:	int3   
   140006a30:	mov    edx,DWORD PTR [rcx+0xcc]
   140006a36:	inc    edx
   140006a38:	and    edx,0xf
   140006a3b:	cmp    edx,DWORD PTR [rcx+0xc8]
   140006a41:	sete   al
   140006a44:	ret    
   140006a45:	int3   
   140006a46:	int3   
   140006a47:	int3   
   140006a48:	int3   
   140006a49:	int3   
   140006a4a:	int3   
   140006a4b:	int3   
   140006a4c:	int3   
   140006a4d:	int3   
   140006a4e:	int3   
   140006a4f:	int3   
   140006a50:	mov    edx,DWORD PTR [rcx+0xc8]
   140006a56:	cmp    DWORD PTR [rcx+0xcc],edx
   140006a5c:	sete   al
   140006a5f:	ret    
   140006a60:	mov    eax,DWORD PTR [rcx+0xcc]
   140006a66:	inc    eax
   140006a68:	and    eax,0xf
   140006a6b:	mov    DWORD PTR [rcx+0xcc],eax
   140006a71:	ret    
   140006a72:	int3   
   140006a73:	int3   
   140006a74:	int3   
   140006a75:	int3   
   140006a76:	int3   
   140006a77:	int3   
   140006a78:	int3   
   140006a79:	int3   
   140006a7a:	int3   
   140006a7b:	int3   
   140006a7c:	int3   
   140006a7d:	int3   
   140006a7e:	int3   
   140006a7f:	int3   
   140006a80:	movsxd rax,DWORD PTR [rcx+0xc8]
   140006a87:	mov    DWORD PTR [rcx+rax*4],r8d
   140006a8b:	movsxd rax,DWORD PTR [rcx+0xc8]
   140006a92:	mov    QWORD PTR [rcx+rax*8+0x40],rdx
   140006a97:	mov    eax,DWORD PTR [rcx+0xc8]
   140006a9d:	inc    eax
   140006a9f:	and    eax,0xf
   140006aa2:	mov    DWORD PTR [rcx+0xc8],eax
   140006aa8:	ret    
   140006aa9:	int3   
   140006aaa:	int3   
   140006aab:	int3   
   140006aac:	int3   
   140006aad:	int3   
   140006aae:	int3   
   140006aaf:	int3   
   140006ab0:	bsr    edx,ecx
   140006ab3:	mov    eax,0x20
   140006ab8:	sub    eax,edx
   140006aba:	ret    
   140006abb:	int3   
   140006abc:	int3   
   140006abd:	int3   
   140006abe:	int3   
   140006abf:	int3   
   140006ac0:	cmp    QWORD PTR [rcx+0x18],0x10
   140006ac5:	jb     0x140006acb
   140006ac7:	mov    rax,QWORD PTR [rcx]
   140006aca:	ret    
   140006acb:	mov    rax,rcx
   140006ace:	ret    
   140006acf:	int3   
   140006ad0:	mov    rax,QWORD PTR [rcx+0x8]
   140006ad4:	ret    
   140006ad5:	int3   
   140006ad6:	int3   
   140006ad7:	int3   
   140006ad8:	int3   
   140006ad9:	int3   
   140006ada:	int3   
   140006adb:	int3   
   140006adc:	int3   
   140006add:	int3   
   140006ade:	int3   
   140006adf:	int3   
   140006ae0:	mov    rax,QWORD PTR [rcx+0x8]
   140006ae4:	ret    
   140006ae5:	int3   
   140006ae6:	int3   
   140006ae7:	int3   
   140006ae8:	int3   
   140006ae9:	int3   
   140006aea:	int3   
   140006aeb:	int3   
   140006aec:	int3   
   140006aed:	int3   
   140006aee:	int3   
   140006aef:	int3   
   140006af0:	rex push rbx
   140006af2:	sub    rsp,0x20
   140006af6:	mov    rdx,QWORD PTR [rcx]
   140006af9:	mov    rbx,rcx
   140006afc:	mov    rdx,QWORD PTR [rdx+0x8]
   140006b00:	call   0x1400059e0
   140006b05:	mov    rax,QWORD PTR [rbx]
   140006b08:	mov    QWORD PTR [rax+0x8],rax
   140006b0c:	mov    rax,QWORD PTR [rbx]
   140006b0f:	mov    QWORD PTR [rax],rax
   140006b12:	mov    rax,QWORD PTR [rbx]
   140006b15:	mov    QWORD PTR [rax+0x10],rax
   140006b19:	mov    QWORD PTR [rbx+0x8],0x0
   140006b21:	add    rsp,0x20
   140006b25:	pop    rbx
   140006b26:	ret    
   140006b27:	int3   
   140006b28:	int3   
   140006b29:	int3   
   140006b2a:	int3   
   140006b2b:	int3   
   140006b2c:	int3   
   140006b2d:	int3   
   140006b2e:	int3   
   140006b2f:	int3   
   140006b30:	mov    QWORD PTR [rsp+0x8],rbx
   140006b35:	mov    QWORD PTR [rsp+0x10],rsi
   140006b3a:	push   rdi
   140006b3b:	sub    rsp,0x20
   140006b3f:	cmp    QWORD PTR [rcx+0x90],0x0
   140006b47:	mov    rbx,rcx
   140006b4a:	jne    0x140006b52
   140006b4c:	xor    edi,edi
   140006b4e:	mov    esi,edi
   140006b50:	jmp    0x140006b75
   140006b52:	call   0x1400057a0
   140006b57:	mov    rcx,QWORD PTR [rbx+0x90]
   140006b5e:	xor    edi,edi
   140006b60:	test   al,al
   140006b62:	mov    rsi,rbx
   140006b65:	cmove  rsi,rdi
   140006b69:	call   QWORD PTR [rip+0x12691]        # 0x140019200
   140006b6f:	test   eax,eax
   140006b71:	cmovne rsi,rdi
   140006b75:	mov    rcx,rbx
   140006b78:	mov    BYTE PTR [rbx+0x88],0x0
   140006b7f:	mov    BYTE PTR [rbx+0x81],0x0
   140006b86:	call   QWORD PTR [rip+0x1254c]        # 0x1400190d8
   140006b8c:	mov    QWORD PTR [rbx+0x90],rdi
   140006b93:	mov    ecx,DWORD PTR [rip+0x1aaf7]        # 0x140021690
   140006b99:	mov    DWORD PTR [rbx+0x84],ecx
   140006b9f:	mov    QWORD PTR [rbx+0x78],rdi
   140006ba3:	mov    rbx,QWORD PTR [rsp+0x30]
   140006ba8:	mov    rax,rsi
   140006bab:	mov    rsi,QWORD PTR [rsp+0x38]
   140006bb0:	add    rsp,0x20
   140006bb4:	pop    rdi
   140006bb5:	ret    
   140006bb6:	int3   
   140006bb7:	int3   
   140006bb8:	int3   
   140006bb9:	int3   
   140006bba:	int3   
   140006bbb:	int3   
   140006bbc:	int3   
   140006bbd:	int3   
   140006bbe:	int3   
   140006bbf:	int3   
   140006bc0:	rex push rbx
   140006bc2:	sub    rsp,0x20
   140006bc6:	mov    rbx,rcx
   140006bc9:	add    rcx,0x8
   140006bcd:	call   0x140006b30
   140006bd2:	test   rax,rax
   140006bd5:	jne    0x140006bf4
   140006bd7:	mov    rax,QWORD PTR [rbx]
   140006bda:	xor    r8d,r8d
   140006bdd:	movsxd rcx,DWORD PTR [rax+0x4]
   140006be1:	lea    edx,[r8+0x2]
   140006be5:	add    rcx,rbx
   140006be8:	add    rsp,0x20
   140006bec:	pop    rbx
   140006bed:	rex.W jmp QWORD PTR [rip+0x124fc]        # 0x1400190f0
   140006bf4:	add    rsp,0x20
   140006bf8:	pop    rbx
   140006bf9:	ret    
   140006bfa:	int3   
   140006bfb:	int3   
   140006bfc:	int3   
   140006bfd:	int3   
   140006bfe:	int3   
   140006bff:	int3   
   140006c00:	mov    eax,DWORD PTR [rcx+0x20]
   140006c03:	ret    
   140006c04:	int3   
   140006c05:	int3   
   140006c06:	int3   
   140006c07:	int3   
   140006c08:	int3   
   140006c09:	int3   
   140006c0a:	int3   
   140006c0b:	int3   
   140006c0c:	int3   
   140006c0d:	int3   
   140006c0e:	int3   
   140006c0f:	int3   
   140006c10:	mov    QWORD PTR [rsp+0x8],rbx
   140006c15:	mov    QWORD PTR [rsp+0x10],rsi
   140006c1a:	push   rdi
   140006c1b:	sub    rsp,0x20
   140006c1f:	cmp    QWORD PTR [rdx+0x18],0x10
   140006c24:	mov    rdi,QWORD PTR [rdx+0x10]
   140006c28:	jb     0x140006c2d
   140006c2a:	mov    rdx,QWORD PTR [rdx]
   140006c2d:	cmp    QWORD PTR [rcx+0x18],0x10
   140006c32:	mov    rbx,QWORD PTR [rcx+0x10]
   140006c36:	jb     0x140006c3b
   140006c38:	mov    rcx,QWORD PTR [rcx]
   140006c3b:	cmp    rbx,rdi
   140006c3e:	mov    r8,rdi
   140006c41:	cmovb  r8,rbx
   140006c45:	xor    esi,esi
   140006c47:	test   r8,r8
   140006c4a:	jne    0x140006c50
   140006c4c:	mov    eax,esi
   140006c4e:	jmp    0x140006c55
   140006c50:	call   0x140017340
   140006c55:	cdqe   
   140006c57:	test   rax,rax
   140006c5a:	jne    0x140006c7a
   140006c5c:	cmp    rbx,rdi
   140006c5f:	jae    0x140006c74
   140006c61:	or     eax,0xffffffff
   140006c64:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c69:	mov    rsi,QWORD PTR [rsp+0x38]
   140006c6e:	add    rsp,0x20
   140006c72:	pop    rdi
   140006c73:	ret    
   140006c74:	setne  sil
   140006c78:	mov    eax,esi
   140006c7a:	mov    rbx,QWORD PTR [rsp+0x30]
   140006c7f:	mov    rsi,QWORD PTR [rsp+0x38]
   140006c84:	add    rsp,0x20
   140006c88:	pop    rdi
   140006c89:	ret    
   140006c8a:	int3   
   140006c8b:	int3   
   140006c8c:	int3   
   140006c8d:	int3   
   140006c8e:	int3   
   140006c8f:	int3   
   140006c90:	rex push rbx
   140006c92:	sub    rsp,0x20
   140006c96:	mov    rax,QWORD PTR [rcx+0x10]
   140006c9a:	mov    rbx,r8
   140006c9d:	cmp    rax,rdx
   140006ca0:	jae    0x140006cb0
   140006ca2:	lea    rcx,[rip+0x13fff]        # 0x14001aca8
   140006ca9:	call   QWORD PTR [rip+0x12541]        # 0x1400191f0
   140006caf:	int3   
   140006cb0:	sub    rax,rdx
   140006cb3:	mov    QWORD PTR [rsp+0x30],rsi
   140006cb8:	mov    QWORD PTR [rsp+0x38],rdi
   140006cbd:	cmp    rax,rbx
   140006cc0:	cmovb  rbx,rax
   140006cc4:	cmp    QWORD PTR [rcx+0x18],0x10
   140006cc9:	jb     0x140006cce
   140006ccb:	mov    rcx,QWORD PTR [rcx]
   140006cce:	mov    rdi,QWORD PTR [rsp+0x50]
   140006cd3:	cmp    rbx,rdi
   140006cd6:	mov    r8,rdi
   140006cd9:	cmovb  r8,rbx
   140006cdd:	xor    esi,esi
   140006cdf:	test   r8,r8
   140006ce2:	jne    0x140006ce8
   140006ce4:	mov    eax,esi
   140006ce6:	jmp    0x140006cf3
   140006ce8:	add    rcx,rdx
   140006ceb:	mov    rdx,r9
   140006cee:	call   0x140017340
   140006cf3:	cdqe   
   140006cf5:	test   rax,rax
   140006cf8:	jne    0x140006d18
   140006cfa:	cmp    rbx,rdi
   140006cfd:	jae    0x140006d12
   140006cff:	mov    rdi,QWORD PTR [rsp+0x38]
   140006d04:	mov    rsi,QWORD PTR [rsp+0x30]
   140006d09:	or     eax,0xffffffff
   140006d0c:	add    rsp,0x20
   140006d10:	pop    rbx
   140006d11:	ret    
   140006d12:	setne  sil
   140006d16:	mov    eax,esi
   140006d18:	mov    rdi,QWORD PTR [rsp+0x38]
   140006d1d:	mov    rsi,QWORD PTR [rsp+0x30]
   140006d22:	add    rsp,0x20
   140006d26:	pop    rbx
   140006d27:	ret    
   140006d28:	int3   
   140006d29:	int3   
   140006d2a:	int3   
   140006d2b:	int3   
   140006d2c:	int3   
   140006d2d:	int3   
   140006d2e:	int3   
   140006d2f:	int3   
   140006d30:	test   r8,r8
   140006d33:	jne    0x140006d38
   140006d35:	xor    eax,eax
   140006d37:	ret    
   140006d38:	jmp    0x140017340
   140006d3d:	int3   
   140006d3e:	int3   
   140006d3f:	int3   
   140006d40:	rex push rbx
   140006d42:	sub    rsp,0x20
   140006d46:	mov    rbx,rcx
   140006d49:	test   r8,r8
   140006d4c:	je     0x140006d53
   140006d4e:	call   0x140017346
   140006d53:	mov    rax,rbx
   140006d56:	add    rsp,0x20
   140006d5a:	pop    rbx
   140006d5b:	ret    
   140006d5c:	int3   
   140006d5d:	int3   
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	xor    eax,eax
   140006d62:	lea    rdx,[rcx+0x8]
   140006d66:	cmp    QWORD PTR [rcx+0x10],rax
   140006d6a:	setne  al
   140006d6d:	test   BYTE PTR [rdx],0x1
   140006d70:	jne    0x140006d7f
   140006d72:	mov    rcx,QWORD PTR [rdx]
   140006d75:	test   BYTE PTR [rcx+0x8],0x1
   140006d79:	lea    rdx,[rcx+0x8]
   140006d7d:	je     0x140006d72
   140006d7f:	test   BYTE PTR [rcx],0x1
   140006d82:	jne    0x140006d8e
   140006d84:	mov    rcx,QWORD PTR [rcx]
   140006d87:	inc    eax
   140006d89:	test   BYTE PTR [rcx],0x1
   140006d8c:	je     0x140006d84
   140006d8e:	ret    
   140006d8f:	int3   
   140006d90:	mov    rax,QWORD PTR [rcx+0x18]
   140006d94:	ret    
   140006d95:	int3   
   140006d96:	int3   
   140006d97:	int3   
   140006d98:	int3   
   140006d99:	int3   
   140006d9a:	int3   
   140006d9b:	int3   
   140006d9c:	int3   
   140006d9d:	int3   
   140006d9e:	int3   
   140006d9f:	int3   
   140006da0:	mov    rcx,rdx
   140006da3:	jmp    0x14001716e
   140006da8:	int3   
   140006da9:	int3   
   140006daa:	int3   
   140006dab:	int3   
   140006dac:	int3   
   140006dad:	int3   
   140006dae:	int3   
   140006daf:	int3   
   140006db0:	mov    rcx,rdx
   140006db3:	jmp    0x14001716e
   140006db8:	int3   
   140006db9:	int3   
   140006dba:	int3   
   140006dbb:	int3   
   140006dbc:	int3   
   140006dbd:	int3   
   140006dbe:	int3   
   140006dbf:	int3   
   140006dc0:	mov    rcx,rdx
   140006dc3:	jmp    0x14001716e
   140006dc8:	int3   
   140006dc9:	int3   
   140006dca:	int3   
   140006dcb:	int3   
   140006dcc:	int3   
   140006dcd:	int3   
   140006dce:	int3   
   140006dcf:	int3   
   140006dd0:	mov    rcx,rdx
   140006dd3:	jmp    0x14001716e
   140006dd8:	int3   
   140006dd9:	int3   
   140006dda:	int3   
   140006ddb:	int3   
   140006ddc:	int3   
   140006ddd:	int3   
   140006dde:	int3   
   140006ddf:	int3   
   140006de0:	mov    QWORD PTR [rsp+0x8],rbx
   140006de5:	push   rdi
   140006de6:	sub    rsp,0x20
   140006dea:	mov    ecx,r8d
   140006ded:	mov    edi,r8d
   140006df0:	mov    rbx,rdx
   140006df3:	call   QWORD PTR [rip+0x12297]        # 0x140019090
   140006df9:	mov    DWORD PTR [rbx],edi
   140006dfb:	test   rax,rax
   140006dfe:	lea    rax,[rip+0x1a1fb]        # 0x140021000
   140006e05:	jne    0x140006e0e
   140006e07:	lea    rax,[rip+0x1a202]        # 0x140021010
   140006e0e:	mov    QWORD PTR [rbx+0x8],rax
   140006e12:	mov    rax,rbx
   140006e15:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e1a:	add    rsp,0x20
   140006e1e:	pop    rdi
   140006e1f:	ret    
   140006e20:	mov    DWORD PTR [rdx],r8d
   140006e23:	mov    QWORD PTR [rdx+0x8],rcx
   140006e27:	mov    rax,rdx
   140006e2a:	ret    
   140006e2b:	int3   
   140006e2c:	int3   
   140006e2d:	int3   
   140006e2e:	int3   
   140006e2f:	int3   
   140006e30:	xor    eax,eax
   140006e32:	cmp    QWORD PTR [rcx+0x10],rax
   140006e36:	sete   al
   140006e39:	ret    
   140006e3a:	int3   
   140006e3b:	int3   
   140006e3c:	int3   
   140006e3d:	int3   
   140006e3e:	int3   
   140006e3f:	int3   
   140006e40:	mov    rax,QWORD PTR [rcx]
   140006e43:	mov    QWORD PTR [rdx],rax
   140006e46:	mov    rax,rdx
   140006e49:	ret    
   140006e4a:	int3   
   140006e4b:	int3   
   140006e4c:	int3   
   140006e4d:	int3   
   140006e4e:	int3   
   140006e4f:	int3   
   140006e50:	cmp    QWORD PTR [rcx+0x18],0x10
   140006e55:	jb     0x140006e68
   140006e57:	mov    r8,QWORD PTR [rcx]
   140006e5a:	mov    rcx,QWORD PTR [rcx+0x10]
   140006e5e:	mov    rax,rdx
   140006e61:	add    rcx,r8
   140006e64:	mov    QWORD PTR [rdx],rcx
   140006e67:	ret    
   140006e68:	mov    r8,rcx
   140006e6b:	mov    rcx,QWORD PTR [rcx+0x10]
   140006e6f:	mov    rax,rdx
   140006e72:	add    rcx,r8
   140006e75:	mov    QWORD PTR [rdx],rcx
   140006e78:	ret    
   140006e79:	int3   
   140006e7a:	int3   
   140006e7b:	int3   
   140006e7c:	int3   
   140006e7d:	int3   
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	or     eax,0xffffffff
   140006e83:	ret    
   140006e84:	int3   
   140006e85:	int3   
   140006e86:	int3   
   140006e87:	int3   
   140006e88:	int3   
   140006e89:	int3   
   140006e8a:	int3   
   140006e8b:	int3   
   140006e8c:	int3   
   140006e8d:	int3   
   140006e8e:	int3   
   140006e8f:	int3   
   140006e90:	mov    edx,DWORD PTR [rdx]
   140006e92:	cmp    DWORD PTR [rcx],edx
   140006e94:	sete   al
   140006e97:	ret    
   140006e98:	int3   
   140006e99:	int3   
   140006e9a:	int3   
   140006e9b:	int3   
   140006e9c:	int3   
   140006e9d:	int3   
   140006e9e:	int3   
   140006e9f:	int3   
   140006ea0:	cmp    rcx,QWORD PTR [rdx+0x8]
   140006ea4:	jne    0x140006eae
   140006ea6:	cmp    DWORD PTR [rdx],r8d
   140006ea9:	jne    0x140006eae
   140006eab:	mov    al,0x1
   140006ead:	ret    
   140006eae:	xor    al,al
   140006eb0:	ret    
   140006eb1:	int3   
   140006eb2:	int3   
   140006eb3:	int3   
   140006eb4:	int3   
   140006eb5:	int3   
   140006eb6:	int3   
   140006eb7:	int3   
   140006eb8:	int3   
   140006eb9:	int3   
   140006eba:	int3   
   140006ebb:	int3   
   140006ebc:	int3   
   140006ebd:	int3   
   140006ebe:	int3   
   140006ebf:	int3   
   140006ec0:	rex push rbx
   140006ec2:	sub    rsp,0x30
   140006ec6:	mov    rax,QWORD PTR [rcx]
   140006ec9:	mov    rbx,r8
   140006ecc:	mov    r8d,edx
   140006ecf:	lea    rdx,[rsp+0x20]
   140006ed4:	call   QWORD PTR [rax+0x18]
   140006ed7:	mov    rcx,QWORD PTR [rbx+0x8]
   140006edb:	cmp    QWORD PTR [rax+0x8],rcx
   140006edf:	jne    0x140006eef
   140006ee1:	mov    ecx,DWORD PTR [rbx]
   140006ee3:	cmp    DWORD PTR [rax],ecx
   140006ee5:	jne    0x140006eef
   140006ee7:	mov    al,0x1
   140006ee9:	add    rsp,0x30
   140006eed:	pop    rbx
   140006eee:	ret    
   140006eef:	xor    al,al
   140006ef1:	add    rsp,0x30
   140006ef5:	pop    rbx
   140006ef6:	ret    
   140006ef7:	int3   
   140006ef8:	int3   
   140006ef9:	int3   
   140006efa:	int3   
   140006efb:	int3   
   140006efc:	int3   
   140006efd:	int3   
   140006efe:	int3   
   140006eff:	int3   
   140006f00:	mov    QWORD PTR [rsp+0x10],rbx
   140006f05:	mov    QWORD PTR [rsp+0x20],r9
   140006f0a:	mov    QWORD PTR [rsp+0x18],r8
   140006f0f:	push   rdi
   140006f10:	sub    rsp,0x20
   140006f14:	mov    rdi,rdx
   140006f17:	mov    rdx,QWORD PTR [rcx]
   140006f1a:	mov    rbx,rcx
   140006f1d:	cmp    r8,QWORD PTR [rdx]
   140006f20:	jne    0x140006f63
   140006f22:	cmp    r9,rdx
   140006f25:	jne    0x140006f63
   140006f27:	mov    rdx,QWORD PTR [rdx+0x8]
   140006f2b:	call   0x1400059e0
   140006f30:	mov    rax,QWORD PTR [rbx]
   140006f33:	mov    QWORD PTR [rax+0x8],rax
   140006f37:	mov    rax,QWORD PTR [rbx]
   140006f3a:	mov    QWORD PTR [rax],rax
   140006f3d:	mov    rax,QWORD PTR [rbx]
   140006f40:	mov    QWORD PTR [rax+0x10],rax
   140006f44:	mov    rax,QWORD PTR [rbx]
   140006f47:	mov    QWORD PTR [rbx+0x8],0x0
   140006f4f:	mov    rcx,QWORD PTR [rax]
   140006f52:	mov    rax,rdi
   140006f55:	mov    QWORD PTR [rdi],rcx
   140006f58:	mov    rbx,QWORD PTR [rsp+0x38]
   140006f5d:	add    rsp,0x20
   140006f61:	pop    rdi
   140006f62:	ret    
   140006f63:	cmp    r8,r9
   140006f66:	je     0x140006fe9
   140006f6c:	nop    DWORD PTR [rax+0x0]
   140006f70:	cmp    BYTE PTR [r8+0x19],0x0
   140006f75:	mov    rax,r8
   140006f78:	jne    0x140006fcd
   140006f7a:	mov    rdx,QWORD PTR [r8+0x10]
   140006f7e:	cmp    BYTE PTR [rdx+0x19],0x0
   140006f82:	jne    0x140006fa3
   140006f84:	mov    rcx,QWORD PTR [rdx]
   140006f87:	cmp    BYTE PTR [rcx+0x19],0x0
   140006f8b:	jne    0x140006f9c
   140006f8d:	nop    DWORD PTR [rax]
   140006f90:	mov    rdx,rcx
   140006f93:	mov    rcx,QWORD PTR [rcx]
   140006f96:	cmp    BYTE PTR [rcx+0x19],0x0
   140006f9a:	je     0x140006f90
   140006f9c:	mov    QWORD PTR [rsp+0x40],rdx
   140006fa1:	jmp    0x140006fcd
   140006fa3:	mov    rcx,QWORD PTR [r8+0x8]
   140006fa7:	cmp    BYTE PTR [rcx+0x19],0x0
   140006fab:	jne    0x140006fc8
   140006fad:	nop    DWORD PTR [rax]
   140006fb0:	cmp    r8,QWORD PTR [rcx+0x10]
   140006fb4:	jne    0x140006fc8
   140006fb6:	mov    QWORD PTR [rsp+0x40],rcx
   140006fbb:	mov    r8,rcx
   140006fbe:	mov    rcx,QWORD PTR [rcx+0x8]
   140006fc2:	cmp    BYTE PTR [rcx+0x19],0x0
   140006fc6:	je     0x140006fb0
   140006fc8:	mov    QWORD PTR [rsp+0x40],rcx
   140006fcd:	lea    rdx,[rsp+0x30]
   140006fd2:	mov    r8,rax
   140006fd5:	mov    rcx,rbx
   140006fd8:	call   0x140007000
   140006fdd:	mov    r8,QWORD PTR [rsp+0x40]
   140006fe2:	cmp    r8,QWORD PTR [rsp+0x48]
   140006fe7:	jne    0x140006f70
   140006fe9:	mov    rbx,QWORD PTR [rsp+0x38]
   140006fee:	mov    QWORD PTR [rdi],r8
   140006ff1:	mov    rax,rdi
   140006ff4:	add    rsp,0x20
   140006ff8:	pop    rdi
   140006ff9:	ret    
   140006ffa:	int3   
   140006ffb:	int3   
   140006ffc:	int3   
   140006ffd:	int3   
   140006ffe:	int3   
   140006fff:	int3   
   140007000:	mov    QWORD PTR [rsp+0x18],r8
   140007005:	push   r14
   140007007:	push   r15
   140007009:	sub    rsp,0x28
   14000700d:	cmp    BYTE PTR [r8+0x19],0x0
   140007012:	mov    QWORD PTR [rsp+0x48],rsi
   140007017:	mov    r15,rdx
   14000701a:	mov    rsi,r8
   14000701d:	mov    r14,rcx
   140007020:	jne    0x140007080
   140007022:	mov    rax,QWORD PTR [r8+0x10]
   140007026:	cmp    BYTE PTR [rax+0x19],0x0
   14000702a:	jne    0x140007053
   14000702c:	mov    r8,rax
   14000702f:	mov    rax,QWORD PTR [rax]
   140007032:	cmp    BYTE PTR [rax+0x19],0x0
   140007036:	jne    0x14000704c
   140007038:	nop    DWORD PTR [rax+rax*1+0x0]
   140007040:	mov    r8,rax
   140007043:	mov    rax,QWORD PTR [rax]
   140007046:	cmp    BYTE PTR [rax+0x19],0x0
   14000704a:	je     0x140007040
   14000704c:	mov    QWORD PTR [rsp+0x50],r8
   140007051:	jmp    0x140007080
   140007053:	mov    rax,QWORD PTR [r8+0x8]
   140007057:	cmp    BYTE PTR [rax+0x19],0x0
   14000705b:	jne    0x140007078
   14000705d:	nop    DWORD PTR [rax]
   140007060:	cmp    r8,QWORD PTR [rax+0x10]
   140007064:	jne    0x140007078
   140007066:	mov    QWORD PTR [rsp+0x50],rax
   14000706b:	mov    r8,rax
   14000706e:	mov    rax,QWORD PTR [rax+0x8]
   140007072:	cmp    BYTE PTR [rax+0x19],0x0
   140007076:	je     0x140007060
   140007078:	mov    r8,rax
   14000707b:	mov    QWORD PTR [rsp+0x50],rax
   140007080:	mov    rcx,QWORD PTR [rsi]
   140007083:	mov    QWORD PTR [rsp+0x40],rbx
   140007088:	mov    QWORD PTR [rsp+0x20],rdi
   14000708d:	cmp    BYTE PTR [rcx+0x19],0x0
   140007091:	je     0x140007099
   140007093:	mov    rdi,QWORD PTR [rsi+0x10]
   140007097:	jmp    0x1400070b5
   140007099:	mov    rax,QWORD PTR [rsi+0x10]
   14000709d:	cmp    BYTE PTR [rax+0x19],0x0
   1400070a1:	je     0x1400070a8
   1400070a3:	mov    rdi,rcx
   1400070a6:	jmp    0x1400070b5
   1400070a8:	mov    rdi,QWORD PTR [r8+0x10]
   1400070ac:	cmp    r8,rsi
   1400070af:	jne    0x140007153
   1400070b5:	cmp    BYTE PTR [rdi+0x19],0x0
   1400070b9:	mov    rbx,QWORD PTR [rsi+0x8]
   1400070bd:	jne    0x1400070c3
   1400070bf:	mov    QWORD PTR [rdi+0x8],rbx
   1400070c3:	mov    rax,QWORD PTR [r14]
   1400070c6:	cmp    QWORD PTR [rax+0x8],rsi
   1400070ca:	jne    0x1400070d2
   1400070cc:	mov    QWORD PTR [rax+0x8],rdi
   1400070d0:	jmp    0x1400070e0
   1400070d2:	cmp    QWORD PTR [rbx],rsi
   1400070d5:	jne    0x1400070dc
   1400070d7:	mov    QWORD PTR [rbx],rdi
   1400070da:	jmp    0x1400070e0
   1400070dc:	mov    QWORD PTR [rbx+0x10],rdi
   1400070e0:	mov    rdx,QWORD PTR [r14]
   1400070e3:	cmp    QWORD PTR [rdx],rsi
   1400070e6:	jne    0x14000710f
   1400070e8:	cmp    BYTE PTR [rdi+0x19],0x0
   1400070ec:	je     0x1400070f3
   1400070ee:	mov    rcx,rbx
   1400070f1:	jmp    0x14000710c
   1400070f3:	mov    rax,QWORD PTR [rdi]
   1400070f6:	mov    rcx,rdi
   1400070f9:	cmp    BYTE PTR [rax+0x19],0x0
   1400070fd:	jne    0x14000710c
   1400070ff:	nop
   140007100:	mov    rcx,rax
   140007103:	mov    rax,QWORD PTR [rax]
   140007106:	cmp    BYTE PTR [rax+0x19],0x0
   14000710a:	je     0x140007100
   14000710c:	mov    QWORD PTR [rdx],rcx
   14000710f:	mov    rdx,QWORD PTR [r14]
   140007112:	cmp    QWORD PTR [rdx+0x10],rsi
   140007116:	jne    0x1400071c2
   14000711c:	cmp    BYTE PTR [rdi+0x19],0x0
   140007120:	je     0x14000712e
   140007122:	mov    rcx,rbx
   140007125:	mov    QWORD PTR [rdx+0x10],rbx
   140007129:	jmp    0x1400071c2
   14000712e:	mov    rax,QWORD PTR [rdi+0x10]
   140007132:	mov    rcx,rdi
   140007135:	cmp    BYTE PTR [rax+0x19],0x0
   140007139:	jne    0x14000714d
   14000713b:	nop    DWORD PTR [rax+rax*1+0x0]
   140007140:	mov    rcx,rax
   140007143:	mov    rax,QWORD PTR [rax+0x10]
   140007147:	cmp    BYTE PTR [rax+0x19],0x0
   14000714b:	je     0x140007140
   14000714d:	mov    QWORD PTR [rdx+0x10],rcx
   140007151:	jmp    0x1400071c2
   140007153:	mov    QWORD PTR [rcx+0x8],r8
   140007157:	mov    rax,QWORD PTR [rsi]
   14000715a:	mov    QWORD PTR [r8],rax
   14000715d:	cmp    r8,QWORD PTR [rsi+0x10]
   140007161:	jne    0x140007168
   140007163:	mov    rbx,r8
   140007166:	jmp    0x140007189
   140007168:	cmp    BYTE PTR [rdi+0x19],0x0
   14000716c:	mov    rbx,QWORD PTR [r8+0x8]
   140007170:	jne    0x140007176
   140007172:	mov    QWORD PTR [rdi+0x8],rbx
   140007176:	mov    QWORD PTR [rbx],rdi
   140007179:	mov    rax,QWORD PTR [rsi+0x10]
   14000717d:	mov    QWORD PTR [r8+0x10],rax
   140007181:	mov    rax,QWORD PTR [rsi+0x10]
   140007185:	mov    QWORD PTR [rax+0x8],r8
   140007189:	mov    rax,QWORD PTR [r14]
   14000718c:	cmp    QWORD PTR [rax+0x8],rsi
   140007190:	jne    0x140007198
   140007192:	mov    QWORD PTR [rax+0x8],r8
   140007196:	jmp    0x1400071aa
   140007198:	mov    rax,QWORD PTR [rsi+0x8]
   14000719c:	cmp    QWORD PTR [rax],rsi
   14000719f:	jne    0x1400071a6
   1400071a1:	mov    QWORD PTR [rax],r8
   1400071a4:	jmp    0x1400071aa
   1400071a6:	mov    QWORD PTR [rax+0x10],r8
   1400071aa:	mov    rax,QWORD PTR [rsi+0x8]
   1400071ae:	mov    QWORD PTR [r8+0x8],rax
   1400071b2:	movzx  eax,BYTE PTR [rsi+0x18]
   1400071b6:	movzx  ecx,BYTE PTR [r8+0x18]
   1400071bb:	mov    BYTE PTR [r8+0x18],al
   1400071bf:	mov    BYTE PTR [rsi+0x18],cl
   1400071c2:	cmp    BYTE PTR [rsi+0x18],0x1
   1400071c6:	jne    0x14000738e
   1400071cc:	mov    rax,QWORD PTR [r14]
   1400071cf:	cmp    rdi,QWORD PTR [rax+0x8]
   1400071d3:	je     0x14000738a
   1400071d9:	nop    DWORD PTR [rax+0x0]
   1400071e0:	cmp    BYTE PTR [rdi+0x18],0x1
   1400071e4:	jne    0x14000738a
   1400071ea:	mov    rcx,QWORD PTR [rbx]
   1400071ed:	cmp    rdi,rcx
   1400071f0:	jne    0x1400072bc
   1400071f6:	mov    rcx,QWORD PTR [rbx+0x10]
   1400071fa:	cmp    BYTE PTR [rcx+0x18],0x0
   1400071fe:	jne    0x140007254
   140007200:	mov    BYTE PTR [rcx+0x18],0x1
   140007204:	mov    rcx,QWORD PTR [rbx+0x10]
   140007208:	mov    BYTE PTR [rbx+0x18],0x0
   14000720c:	mov    rax,QWORD PTR [rcx]
   14000720f:	mov    QWORD PTR [rbx+0x10],rax
   140007213:	mov    rax,QWORD PTR [rcx]
   140007216:	cmp    BYTE PTR [rax+0x19],0x0
   14000721a:	jne    0x140007220
   14000721c:	mov    QWORD PTR [rax+0x8],rbx
   140007220:	mov    rax,QWORD PTR [rbx+0x8]
   140007224:	mov    QWORD PTR [rcx+0x8],rax
   140007228:	mov    rax,QWORD PTR [r14]
   14000722b:	cmp    rbx,QWORD PTR [rax+0x8]
   14000722f:	jne    0x140007237
   140007231:	mov    QWORD PTR [rax+0x8],rcx
   140007235:	jmp    0x140007249
   140007237:	mov    rax,QWORD PTR [rbx+0x8]
   14000723b:	cmp    rbx,QWORD PTR [rax]
   14000723e:	jne    0x140007245
   140007240:	mov    QWORD PTR [rax],rcx
   140007243:	jmp    0x140007249
   140007245:	mov    QWORD PTR [rax+0x10],rcx
   140007249:	mov    QWORD PTR [rcx],rbx
   14000724c:	mov    QWORD PTR [rbx+0x8],rcx
   140007250:	mov    rcx,QWORD PTR [rbx+0x10]
   140007254:	cmp    BYTE PTR [rcx+0x19],0x0
   140007258:	jne    0x140007334
   14000725e:	mov    rax,QWORD PTR [rcx]
   140007261:	cmp    BYTE PTR [rax+0x18],0x1
   140007265:	jne    0x140007275
   140007267:	mov    rax,QWORD PTR [rcx+0x10]
   14000726b:	cmp    BYTE PTR [rax+0x18],0x1
   14000726f:	je     0x140007330
   140007275:	mov    rax,QWORD PTR [rcx+0x10]
   140007279:	cmp    BYTE PTR [rax+0x18],0x1
   14000727d:	jne    0x140007299
   14000727f:	mov    rax,QWORD PTR [rcx]
   140007282:	mov    rdx,rcx
   140007285:	mov    BYTE PTR [rax+0x18],0x1
   140007289:	mov    BYTE PTR [rcx+0x18],0x0
   14000728d:	mov    rcx,r14
   140007290:	call   0x140005ef0
   140007295:	mov    rcx,QWORD PTR [rbx+0x10]
   140007299:	movzx  eax,BYTE PTR [rbx+0x18]
   14000729d:	mov    rdx,rbx
   1400072a0:	mov    BYTE PTR [rcx+0x18],al
   1400072a3:	mov    BYTE PTR [rbx+0x18],0x1
   1400072a7:	mov    rax,QWORD PTR [rcx+0x10]
   1400072ab:	mov    rcx,r14
   1400072ae:	mov    BYTE PTR [rax+0x18],0x1
   1400072b2:	call   0x140005d80
   1400072b7:	jmp    0x14000738a
   1400072bc:	cmp    BYTE PTR [rcx+0x18],0x0
   1400072c0:	jne    0x140007317
   1400072c2:	mov    BYTE PTR [rcx+0x18],0x1
   1400072c6:	mov    rcx,QWORD PTR [rbx]
   1400072c9:	mov    BYTE PTR [rbx+0x18],0x0
   1400072cd:	mov    rax,QWORD PTR [rcx+0x10]
   1400072d1:	mov    QWORD PTR [rbx],rax
   1400072d4:	mov    rax,QWORD PTR [rcx+0x10]
   1400072d8:	cmp    BYTE PTR [rax+0x19],0x0
   1400072dc:	jne    0x1400072e2
   1400072de:	mov    QWORD PTR [rax+0x8],rbx
   1400072e2:	mov    rax,QWORD PTR [rbx+0x8]
   1400072e6:	mov    QWORD PTR [rcx+0x8],rax
   1400072ea:	mov    rax,QWORD PTR [r14]
   1400072ed:	cmp    rbx,QWORD PTR [rax+0x8]
   1400072f1:	jne    0x1400072f9
   1400072f3:	mov    QWORD PTR [rax+0x8],rcx
   1400072f7:	jmp    0x14000730c
   1400072f9:	mov    rax,QWORD PTR [rbx+0x8]
   1400072fd:	cmp    rbx,QWORD PTR [rax+0x10]
   140007301:	jne    0x140007309
   140007303:	mov    QWORD PTR [rax+0x10],rcx
   140007307:	jmp    0x14000730c
   140007309:	mov    QWORD PTR [rax],rcx
   14000730c:	mov    QWORD PTR [rcx+0x10],rbx
   140007310:	mov    QWORD PTR [rbx+0x8],rcx
   140007314:	mov    rcx,QWORD PTR [rbx]
   140007317:	cmp    BYTE PTR [rcx+0x19],0x0
   14000731b:	jne    0x140007334
   14000731d:	mov    rax,QWORD PTR [rcx+0x10]
   140007321:	cmp    BYTE PTR [rax+0x18],0x1
   140007325:	jne    0x14000734a
   140007327:	mov    rax,QWORD PTR [rcx]
   14000732a:	cmp    BYTE PTR [rax+0x18],0x1
   14000732e:	jne    0x14000734a
   140007330:	mov    BYTE PTR [rcx+0x18],0x0
   140007334:	mov    rax,QWORD PTR [r14]
   140007337:	mov    rdi,rbx
   14000733a:	mov    rbx,QWORD PTR [rbx+0x8]
   14000733e:	cmp    rdi,QWORD PTR [rax+0x8]
   140007342:	jne    0x1400071e0
   140007348:	jmp    0x14000738a
   14000734a:	mov    rax,QWORD PTR [rcx]
   14000734d:	cmp    BYTE PTR [rax+0x18],0x1
   140007351:	jne    0x14000736d
   140007353:	mov    rax,QWORD PTR [rcx+0x10]
   140007357:	mov    rdx,rcx
   14000735a:	mov    BYTE PTR [rax+0x18],0x1
   14000735e:	mov    BYTE PTR [rcx+0x18],0x0
   140007362:	mov    rcx,r14
   140007365:	call   0x140005d80
   14000736a:	mov    rcx,QWORD PTR [rbx]
   14000736d:	movzx  eax,BYTE PTR [rbx+0x18]
   140007371:	mov    rdx,rbx
   140007374:	mov    BYTE PTR [rcx+0x18],al
   140007377:	mov    BYTE PTR [rbx+0x18],0x1
   14000737b:	mov    rax,QWORD PTR [rcx]
   14000737e:	mov    rcx,r14
   140007381:	mov    BYTE PTR [rax+0x18],0x1
   140007385:	call   0x140005ef0
   14000738a:	mov    BYTE PTR [rdi+0x18],0x1
   14000738e:	cmp    QWORD PTR [rsi+0x38],0x10
   140007393:	mov    rdi,QWORD PTR [rsp+0x20]
   140007398:	mov    rbx,QWORD PTR [rsp+0x40]
   14000739d:	jb     0x1400073a8
   14000739f:	mov    rcx,QWORD PTR [rsi+0x20]
   1400073a3:	call   0x14001716e
   1400073a8:	mov    QWORD PTR [rsi+0x38],0xf
   1400073b0:	mov    QWORD PTR [rsi+0x30],0x0
   1400073b8:	mov    rcx,rsi
   1400073bb:	mov    BYTE PTR [rsi+0x20],0x0
   1400073bf:	call   0x14001716e
   1400073c4:	mov    rax,QWORD PTR [r14+0x8]
   1400073c8:	mov    rsi,QWORD PTR [rsp+0x48]
   1400073cd:	test   rax,rax
   1400073d0:	je     0x1400073d9
   1400073d2:	dec    rax
   1400073d5:	mov    QWORD PTR [r14+0x8],rax
   1400073d9:	mov    rax,QWORD PTR [rsp+0x50]
   1400073de:	mov    QWORD PTR [r15],rax
   1400073e1:	mov    rax,r15
   1400073e4:	add    rsp,0x28
   1400073e8:	pop    r15
   1400073ea:	pop    r14
   1400073ec:	ret    
   1400073ed:	int3   
   1400073ee:	int3   
   1400073ef:	int3   
   1400073f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400073f5:	push   rdi
   1400073f6:	sub    rsp,0x20
   1400073fa:	mov    rdi,QWORD PTR [rcx+0x10]
   1400073fe:	mov    rbx,rcx
   140007401:	cmp    rdi,rdx
   140007404:	jae    0x140007414
   140007406:	lea    rcx,[rip+0x1389b]        # 0x14001aca8
   14000740d:	call   QWORD PTR [rip+0x11ddd]        # 0x1400191f0
   140007413:	int3   
   140007414:	mov    rax,rdi
   140007417:	sub    rax,rdx
   14000741a:	cmp    rax,r8
   14000741d:	ja     0x140007454
   14000741f:	cmp    QWORD PTR [rcx+0x18],0x10
   140007424:	mov    QWORD PTR [rcx+0x10],rdx
   140007428:	jb     0x14000743f
   14000742a:	mov    rax,QWORD PTR [rcx]
   14000742d:	mov    BYTE PTR [rax+rdx*1],0x0
   140007431:	mov    rax,rbx
   140007434:	mov    rbx,QWORD PTR [rsp+0x30]
   140007439:	add    rsp,0x20
   14000743d:	pop    rdi
   14000743e:	ret    
   14000743f:	mov    rax,rcx
   140007442:	mov    BYTE PTR [rcx+rdx*1],0x0
   140007446:	mov    rax,rbx
   140007449:	mov    rbx,QWORD PTR [rsp+0x30]
   14000744e:	add    rsp,0x20
   140007452:	pop    rdi
   140007453:	ret    
   140007454:	test   r8,r8
   140007457:	je     0x1400074ab
   140007459:	cmp    QWORD PTR [rcx+0x18],0x10
   14000745e:	jb     0x140007465
   140007460:	mov    rax,QWORD PTR [rcx]
   140007463:	jmp    0x140007468
   140007465:	mov    rax,rcx
   140007468:	sub    rdi,r8
   14000746b:	lea    rcx,[rax+rdx*1]
   14000746f:	mov    rax,rdi
   140007472:	sub    rax,rdx
   140007475:	je     0x140007484
   140007477:	lea    rdx,[rcx+r8*1]
   14000747b:	mov    r8,rax
   14000747e:	call   QWORD PTR [rip+0x11df4]        # 0x140019278
   140007484:	cmp    QWORD PTR [rbx+0x18],0x10
   140007489:	mov    QWORD PTR [rbx+0x10],rdi
   14000748d:	jb     0x1400074a4
   14000748f:	mov    rax,QWORD PTR [rbx]
   140007492:	mov    BYTE PTR [rax+rdi*1],0x0
   140007496:	mov    rax,rbx
   140007499:	mov    rbx,QWORD PTR [rsp+0x30]
   14000749e:	add    rsp,0x20
   1400074a2:	pop    rdi
   1400074a3:	ret    
   1400074a4:	mov    rax,rbx
   1400074a7:	mov    BYTE PTR [rbx+rdi*1],0x0
   1400074ab:	mov    rax,rbx
   1400074ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400074b3:	add    rsp,0x20
   1400074b7:	pop    rdi
   1400074b8:	ret    
   1400074b9:	int3   
   1400074ba:	int3   
   1400074bb:	int3   
   1400074bc:	int3   
   1400074bd:	int3   
   1400074be:	int3   
   1400074bf:	int3   
   1400074c0:	sub    rsp,0x28
   1400074c4:	cmp    QWORD PTR [rcx+0x10],rdx
   1400074c8:	jae    0x1400074d8
   1400074ca:	lea    rcx,[rip+0x137d7]        # 0x14001aca8
   1400074d1:	call   QWORD PTR [rip+0x11d19]        # 0x1400191f0
   1400074d7:	int3   
   1400074d8:	cmp    QWORD PTR [rcx+0x18],0x10
   1400074dd:	mov    QWORD PTR [rcx+0x10],rdx
   1400074e1:	jb     0x1400074f2
   1400074e3:	mov    rax,QWORD PTR [rcx]
   1400074e6:	mov    BYTE PTR [rax+rdx*1],0x0
   1400074ea:	mov    rax,rcx
   1400074ed:	add    rsp,0x28
   1400074f1:	ret    
   1400074f2:	mov    rax,rcx
   1400074f5:	mov    BYTE PTR [rcx+rdx*1],0x0
   1400074f9:	add    rsp,0x28
   1400074fd:	ret    
   1400074fe:	int3   
   1400074ff:	int3   
   140007500:	movzx  eax,BYTE PTR [rcx+0x10]
   140007504:	ret    
   140007505:	int3   
   140007506:	int3   
   140007507:	int3   
   140007508:	int3   
   140007509:	int3   
   14000750a:	int3   
   14000750b:	int3   
   14000750c:	int3   
   14000750d:	int3   
   14000750e:	int3   
   14000750f:	int3   
   140007510:	rex push rbp
   140007512:	push   r14
   140007514:	push   r15
   140007516:	sub    rsp,0x20
   14000751a:	mov    rbp,r9
   14000751d:	mov    r15,rdx
   140007520:	mov    r14,rcx
   140007523:	test   r9,r9
   140007526:	jne    0x14000753b
   140007528:	cmp    r8,QWORD PTR [rcx+0x10]
   14000752c:	ja     0x14000753b
   14000752e:	mov    rax,r8
   140007531:	add    rsp,0x20
   140007535:	pop    r15
   140007537:	pop    r14
   140007539:	pop    rbp
   14000753a:	ret    
   14000753b:	mov    QWORD PTR [rsp+0x40],rbx
   140007540:	mov    rbx,QWORD PTR [rcx+0x10]
   140007544:	mov    QWORD PTR [rsp+0x48],rsi
   140007549:	mov    QWORD PTR [rsp+0x50],rdi
   14000754e:	cmp    r8,rbx
   140007551:	jae    0x1400075d5
   140007557:	sub    rbx,r8
   14000755a:	cmp    r9,rbx
   14000755d:	ja     0x1400075d5
   14000755f:	mov    eax,0x1
   140007564:	sub    rax,r9
   140007567:	add    rbx,rax
   14000756a:	cmp    QWORD PTR [rcx+0x18],0x10
   14000756f:	jb     0x140007576
   140007571:	mov    rax,QWORD PTR [rcx]
   140007574:	jmp    0x140007579
   140007576:	mov    rax,rcx
   140007579:	lea    rsi,[rax+r8*1]
   14000757d:	nop    DWORD PTR [rax]
   140007580:	test   rbx,rbx
   140007583:	je     0x1400075d5
   140007585:	movsx  edx,BYTE PTR [r15]
   140007589:	mov    r8,rbx
   14000758c:	mov    rcx,rsi
   14000758f:	call   QWORD PTR [rip+0x11cd3]        # 0x140019268
   140007595:	mov    rdi,rax
   140007598:	test   rax,rax
   14000759b:	je     0x1400075d5
   14000759d:	test   rbp,rbp
   1400075a0:	je     0x1400075c3
   1400075a2:	mov    r8,rbp
   1400075a5:	mov    rdx,r15
   1400075a8:	mov    rcx,rax
   1400075ab:	call   0x140017340
   1400075b0:	test   eax,eax
   1400075b2:	je     0x1400075c3
   1400075b4:	sub    rsi,rdi
   1400075b7:	dec    rsi
   1400075ba:	add    rbx,rsi
   1400075bd:	lea    rsi,[rdi+0x1]
   1400075c1:	jmp    0x140007580
   1400075c3:	cmp    QWORD PTR [r14+0x18],0x10
   1400075c8:	jb     0x1400075cd
   1400075ca:	mov    r14,QWORD PTR [r14]
   1400075cd:	sub    rdi,r14
   1400075d0:	mov    rax,rdi
   1400075d3:	jmp    0x1400075d9
   1400075d5:	or     rax,0xffffffffffffffff
   1400075d9:	mov    rsi,QWORD PTR [rsp+0x48]
   1400075de:	mov    rbx,QWORD PTR [rsp+0x40]
   1400075e3:	mov    rdi,QWORD PTR [rsp+0x50]
   1400075e8:	add    rsp,0x20
   1400075ec:	pop    r15
   1400075ee:	pop    r14
   1400075f0:	pop    rbp
   1400075f1:	ret    
   1400075f2:	int3   
   1400075f3:	int3   
   1400075f4:	int3   
   1400075f5:	int3   
   1400075f6:	int3   
   1400075f7:	int3   
   1400075f8:	int3   
   1400075f9:	int3   
   1400075fa:	int3   
   1400075fb:	int3   
   1400075fc:	int3   
   1400075fd:	int3   
   1400075fe:	int3   
   1400075ff:	int3   
   140007600:	cmp    BYTE PTR [rdx],0x0
   140007603:	jne    0x14000760d
   140007605:	xor    r9d,r9d
   140007608:	jmp    0x140007510
   14000760d:	or     r9,0xffffffffffffffff
   140007611:	inc    r9
   140007614:	cmp    BYTE PTR [rdx+r9*1],0x0
   140007619:	jne    0x140007611
   14000761b:	jmp    0x140007510
   140007620:	mov    rax,r8
   140007623:	mov    r8,rdx
   140007626:	test   rdx,rdx
   140007629:	jne    0x14000762e
   14000762b:	xor    eax,eax
   14000762d:	ret    
   14000762e:	movsx  edx,BYTE PTR [rax]
   140007631:	rex.W jmp QWORD PTR [rip+0x11c30]        # 0x140019268
   140007638:	int3   
   140007639:	int3   
   14000763a:	int3   
   14000763b:	int3   
   14000763c:	int3   
   14000763d:	int3   
   14000763e:	int3   
   14000763f:	int3   
   140007640:	mov    QWORD PTR [rsp+0x8],rbx
   140007645:	mov    QWORD PTR [rsp+0x10],rbp
   14000764a:	mov    QWORD PTR [rsp+0x18],rsi
   14000764f:	push   rdi
   140007650:	sub    rsp,0x20
   140007654:	mov    rsi,r9
   140007657:	mov    rbp,rdx
   14000765a:	mov    rdi,rcx
   14000765d:	test   r9,r9
   140007660:	je     0x1400076c4
   140007662:	mov    rax,QWORD PTR [rcx+0x10]
   140007666:	test   rax,rax
   140007669:	je     0x1400076c4
   14000766b:	cmp    r8,rax
   14000766e:	jb     0x140007674
   140007670:	lea    r8,[rax-0x1]
   140007674:	cmp    QWORD PTR [rcx+0x18],0x10
   140007679:	jb     0x140007680
   14000767b:	mov    rax,QWORD PTR [rcx]
   14000767e:	jmp    0x140007683
   140007680:	mov    rax,rcx
   140007683:	lea    rbx,[rax+r8*1]
   140007687:	test   rsi,rsi
   14000768a:	je     0x1400076a0
   14000768c:	movsx  edx,BYTE PTR [rbx]
   14000768f:	mov    r8,rsi
   140007692:	mov    rcx,rbp
   140007695:	call   QWORD PTR [rip+0x11bcd]        # 0x140019268
   14000769b:	test   rax,rax
   14000769e:	jne    0x1400076b2
   1400076a0:	mov    rcx,rdi
   1400076a3:	call   0x140005e50
   1400076a8:	cmp    rbx,rax
   1400076ab:	je     0x1400076c4
   1400076ad:	dec    rbx
   1400076b0:	jmp    0x140007687
   1400076b2:	cmp    QWORD PTR [rdi+0x18],0x10
   1400076b7:	jb     0x1400076bc
   1400076b9:	mov    rdi,QWORD PTR [rdi]
   1400076bc:	sub    rbx,rdi
   1400076bf:	mov    rax,rbx
   1400076c2:	jmp    0x1400076c8
   1400076c4:	or     rax,0xffffffffffffffff
   1400076c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400076cd:	mov    rbp,QWORD PTR [rsp+0x38]
   1400076d2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400076d7:	add    rsp,0x20
   1400076db:	pop    rdi
   1400076dc:	ret    
   1400076dd:	int3   
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	cmp    BYTE PTR [rdx],0x0
   1400076e3:	jne    0x1400076ed
   1400076e5:	xor    r9d,r9d
   1400076e8:	jmp    0x140007640
   1400076ed:	or     r9,0xffffffffffffffff
   1400076f1:	inc    r9
   1400076f4:	cmp    BYTE PTR [rdx+r9*1],0x0
   1400076f9:	jne    0x1400076f1
   1400076fb:	jmp    0x140007640
   140007700:	mov    al,0x1
   140007702:	ret    
   140007703:	int3   
   140007704:	int3   
   140007705:	int3   
   140007706:	int3   
   140007707:	int3   
   140007708:	int3   
   140007709:	int3   
   14000770a:	int3   
   14000770b:	int3   
   14000770c:	int3   
   14000770d:	int3   
   14000770e:	int3   
   14000770f:	int3   
   140007710:	test   edx,edx
   140007712:	jle    0x140007723
   140007714:	mov    rax,QWORD PTR [rcx+0x8]
   140007718:	mov    DWORD PTR [rax+0x4],edx
   14000771b:	mov    rax,QWORD PTR [rcx+0x8]
   14000771f:	mov    QWORD PTR [rax+0x8],r8
   140007723:	mov    al,0x1
   140007725:	ret    
   140007726:	int3   
   140007727:	int3   
   140007728:	int3   
   140007729:	int3   
   14000772a:	int3   
   14000772b:	int3   
   14000772c:	int3   
   14000772d:	int3   
   14000772e:	int3   
   14000772f:	int3   
   140007730:	test   BYTE PTR [rcx+0x8],0x1
   140007734:	lea    rax,[rcx+0x8]
   140007738:	jne    0x14000774d
   14000773a:	nop    WORD PTR [rax+rax*1+0x0]
   140007740:	mov    rcx,QWORD PTR [rax]
   140007743:	test   BYTE PTR [rcx+0x8],0x1
   140007747:	lea    rax,[rcx+0x8]
   14000774b:	je     0x140007740
   14000774d:	mov    rax,rcx
   140007750:	ret    
   140007751:	int3   
   140007752:	int3   
   140007753:	int3   
   140007754:	int3   
   140007755:	int3   
   140007756:	int3   
   140007757:	int3   
   140007758:	int3   
   140007759:	int3   
   14000775a:	int3   
   14000775b:	int3   
   14000775c:	int3   
   14000775d:	int3   
   14000775e:	int3   
   14000775f:	int3   
   140007760:	mov    QWORD PTR [rsp+0x18],rbx
   140007765:	push   rdi
   140007766:	sub    rsp,0x20
   14000776a:	mov    eax,DWORD PTR [rcx+0xcc]
   140007770:	mov    rbx,rdx
   140007773:	mov    rdi,rcx
   140007776:	inc    eax
   140007778:	and    eax,0xf
   14000777b:	cmp    eax,DWORD PTR [rcx+0xc8]
   140007781:	je     0x1400078d0
   140007787:	mov    QWORD PTR [rsp+0x38],rsi
   14000778c:	mov    esi,DWORD PTR [rcx+0xc0]
   140007792:	test   esi,esi
   140007794:	jns    0x1400077ae
   140007796:	mov    rax,QWORD PTR [rdx]
   140007799:	lea    rdx,[rip+0x12cb0]        # 0x14001a450
   1400077a0:	mov    r8d,0x1
   1400077a6:	mov    rcx,rbx
   1400077a9:	call   QWORD PTR [rax+0x8]
   1400077ac:	test   esi,esi
   1400077ae:	jle    0x1400077d9
   1400077b0:	mov    BYTE PTR [rsp+0x30],0x20
   1400077b5:	test   esi,esi
   1400077b7:	jle    0x1400077d9
   1400077b9:	nop    DWORD PTR [rax+0x0]
   1400077c0:	mov    rax,QWORD PTR [rbx]
   1400077c3:	lea    rdx,[rsp+0x30]
   1400077c8:	mov    r8d,0x1
   1400077ce:	mov    rcx,rbx
   1400077d1:	call   QWORD PTR [rax+0x8]
   1400077d4:	dec    rsi
   1400077d7:	jne    0x1400077c0
   1400077d9:	mov    eax,DWORD PTR [rdi+0xcc]
   1400077df:	mov    BYTE PTR [rdi+0xd0],0x0
   1400077e6:	inc    eax
   1400077e8:	and    eax,0xf
   1400077eb:	cmp    eax,DWORD PTR [rdi+0xc8]
   1400077f1:	je     0x1400078b5
   1400077f7:	cmp    BYTE PTR [rdi+0xd0],0x0
   1400077fe:	je     0x140007869
   140007800:	mov    rax,QWORD PTR [rbx]
   140007803:	lea    rdx,[rip+0x12c46]        # 0x14001a450
   14000780a:	mov    r8d,0x1
   140007810:	mov    rcx,rbx
   140007813:	call   QWORD PTR [rax+0x8]
   140007816:	mov    esi,DWORD PTR [rdi+0xc0]
   14000781c:	test   esi,esi
   14000781e:	jns    0x140007838
   140007820:	mov    rax,QWORD PTR [rbx]
   140007823:	lea    rdx,[rip+0x12c26]        # 0x14001a450
   14000782a:	mov    r8d,0x1
   140007830:	mov    rcx,rbx
   140007833:	call   QWORD PTR [rax+0x8]
   140007836:	test   esi,esi
   140007838:	jle    0x140007869
   14000783a:	mov    BYTE PTR [rsp+0x30],0x20
   14000783f:	test   esi,esi
   140007841:	jle    0x140007869
   140007843:	nop    DWORD PTR [rax+0x0]
   140007847:	nop    WORD PTR [rax+rax*1+0x0]
   140007850:	mov    rax,QWORD PTR [rbx]
   140007853:	lea    rdx,[rsp+0x30]
   140007858:	mov    r8d,0x1
   14000785e:	mov    rcx,rbx
   140007861:	call   QWORD PTR [rax+0x8]
   140007864:	dec    rsi
   140007867:	jne    0x140007850
   140007869:	mov    eax,DWORD PTR [rdi+0xcc]
   14000786f:	inc    eax
   140007871:	and    eax,0xf
   140007874:	cmp    eax,DWORD PTR [rdi+0xc8]
   14000787a:	je     0x140007897
   14000787c:	movsxd rdx,eax
   14000787f:	mov    DWORD PTR [rdi+0xcc],eax
   140007885:	mov    rax,QWORD PTR [rbx]
   140007888:	mov    r8d,DWORD PTR [rdi+rdx*4]
   14000788c:	mov    rdx,QWORD PTR [rdi+rdx*8+0x40]
   140007891:	mov    rcx,rbx
   140007894:	call   QWORD PTR [rax+0x8]
   140007897:	mov    BYTE PTR [rdi+0xd0],0x1
   14000789e:	mov    eax,DWORD PTR [rdi+0xcc]
   1400078a4:	inc    eax
   1400078a6:	and    eax,0xf
   1400078a9:	cmp    eax,DWORD PTR [rdi+0xc8]
   1400078af:	jne    0x1400077f7
   1400078b5:	mov    rax,QWORD PTR [rbx]
   1400078b8:	lea    rdx,[rip+0x12b91]        # 0x14001a450
   1400078bf:	mov    r8d,0x1
   1400078c5:	mov    rcx,rbx
   1400078c8:	call   QWORD PTR [rax+0x8]
   1400078cb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400078d0:	mov    rbx,QWORD PTR [rsp+0x40]
   1400078d5:	add    rsp,0x20
   1400078d9:	pop    rdi
   1400078da:	ret    
   1400078db:	int3   
   1400078dc:	int3   
   1400078dd:	int3   
   1400078de:	int3   
   1400078df:	int3   
   1400078e0:	lea    rax,[rip+0x19719]        # 0x140021000
   1400078e7:	ret    
   1400078e8:	int3   
   1400078e9:	int3   
   1400078ea:	int3   
   1400078eb:	int3   
   1400078ec:	int3   
   1400078ed:	int3   
   1400078ee:	int3   
   1400078ef:	int3   
   1400078f0:	mov    rax,QWORD PTR [rcx]
   1400078f3:	ret    
   1400078f4:	int3   
   1400078f5:	int3   
   1400078f6:	int3   
   1400078f7:	int3   
   1400078f8:	int3   
   1400078f9:	int3   
   1400078fa:	int3   
   1400078fb:	int3   
   1400078fc:	int3   
   1400078fd:	int3   
   1400078fe:	int3   
   1400078ff:	int3   
   140007900:	mov    rax,QWORD PTR [rcx]
   140007903:	ret    
   140007904:	int3   
   140007905:	int3   
   140007906:	int3   
   140007907:	int3   
   140007908:	int3   
   140007909:	int3   
   14000790a:	int3   
   14000790b:	int3   
   14000790c:	int3   
   14000790d:	int3   
   14000790e:	int3   
   14000790f:	int3   
   140007910:	mov    rax,rdx
   140007913:	ret    
   140007914:	int3   
   140007915:	int3   
   140007916:	int3   
   140007917:	int3   
   140007918:	int3   
   140007919:	int3   
   14000791a:	int3   
   14000791b:	int3   
   14000791c:	int3   
   14000791d:	int3   
   14000791e:	int3   
   14000791f:	int3   
   140007920:	mov    rax,rcx
   140007923:	ret    
   140007924:	int3   
   140007925:	int3   
   140007926:	int3   
   140007927:	int3   
   140007928:	int3   
   140007929:	int3   
   14000792a:	int3   
   14000792b:	int3   
   14000792c:	int3   
   14000792d:	int3   
   14000792e:	int3   
   14000792f:	int3   
   140007930:	mov    rax,rcx
   140007933:	ret    
   140007934:	int3   
   140007935:	int3   
   140007936:	int3   
   140007937:	int3   
   140007938:	int3   
   140007939:	int3   
   14000793a:	int3   
   14000793b:	int3   
   14000793c:	int3   
   14000793d:	int3   
   14000793e:	int3   
   14000793f:	int3   
   140007940:	mov    rax,rcx
   140007943:	ret    
   140007944:	int3   
   140007945:	int3   
   140007946:	int3   
   140007947:	int3   
   140007948:	int3   
   140007949:	int3   
   14000794a:	int3   
   14000794b:	int3   
   14000794c:	int3   
   14000794d:	int3   
   14000794e:	int3   
   14000794f:	int3   
   140007950:	mov    QWORD PTR [rsp+0x8],rcx
   140007955:	push   rdi
   140007956:	sub    rsp,0x50
   14000795a:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140007963:	mov    QWORD PTR [rsp+0x70],rbx
   140007968:	mov    rdi,rcx
   14000796b:	xor    ebx,ebx
   14000796d:	mov    DWORD PTR [rsp+0x40],ebx
   140007971:	call   QWORD PTR [rip+0x11689]        # 0x140019000
   140007977:	mov    QWORD PTR [rdi+0x18],0xf
   14000797f:	mov    QWORD PTR [rdi+0x10],rbx
   140007983:	mov    BYTE PTR [rdi],bl
   140007985:	mov    DWORD PTR [rsp+0x40],0x1
   14000798d:	mov    QWORD PTR [rsp+0x30],rbx
   140007992:	mov    DWORD PTR [rsp+0x28],ebx
   140007996:	lea    rcx,[rsp+0x68]
   14000799b:	mov    QWORD PTR [rsp+0x20],rcx
   1400079a0:	mov    r9d,0x400
   1400079a6:	mov    r8d,eax
   1400079a9:	xor    edx,edx
   1400079ab:	mov    ecx,0x1300
   1400079b0:	call   QWORD PTR [rip+0x1165a]        # 0x140019010
   1400079b6:	test   eax,eax
   1400079b8:	jne    0x1400079cf
   1400079ba:	lea    r8d,[rbx+0x21]
   1400079be:	lea    rdx,[rip+0x12a93]        # 0x14001a458
   1400079c5:	mov    rcx,rdi
   1400079c8:	call   0x140006790
   1400079cd:	jmp    0x1400079ff
   1400079cf:	mov    rdx,QWORD PTR [rsp+0x68]
   1400079d4:	cmp    BYTE PTR [rdx],0x0
   1400079d7:	je     0x1400079e9
   1400079d9:	or     rbx,0xffffffffffffffff
   1400079dd:	nop    DWORD PTR [rax]
   1400079e0:	inc    rbx
   1400079e3:	cmp    BYTE PTR [rdx+rbx*1],0x0
   1400079e7:	jne    0x1400079e0
   1400079e9:	mov    r8,rbx
   1400079ec:	mov    rcx,rdi
   1400079ef:	call   0x140006790
   1400079f4:	mov    rcx,QWORD PTR [rsp+0x68]
   1400079f9:	call   QWORD PTR [rip+0x11609]        # 0x140019008
   1400079ff:	mov    rax,rdi
   140007a02:	mov    rbx,QWORD PTR [rsp+0x70]
   140007a07:	add    rsp,0x50
   140007a0b:	pop    rdi
   140007a0c:	ret    
   140007a0d:	int3   
   140007a0e:	int3   
   140007a0f:	int3   
   140007a10:	mov    QWORD PTR [rsp+0x8],rbx
   140007a15:	push   rdi
   140007a16:	sub    rsp,0x20
   140007a1a:	mov    rbx,rcx
   140007a1d:	mov    rcx,rdx
   140007a20:	call   0x140002c60
   140007a25:	mov    rcx,rax
   140007a28:	mov    rdi,rax
   140007a2b:	call   QWORD PTR [rip+0x11637]        # 0x140019068
   140007a31:	test   al,al
   140007a33:	je     0x140007a48
   140007a35:	mov    QWORD PTR [rbx+0x78],0x0
   140007a3d:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a42:	add    rsp,0x20
   140007a46:	pop    rdi
   140007a47:	ret    
   140007a48:	mov    rcx,rbx
   140007a4b:	mov    QWORD PTR [rbx+0x78],rdi
   140007a4f:	mov    rbx,QWORD PTR [rsp+0x30]
   140007a54:	add    rsp,0x20
   140007a58:	pop    rdi
   140007a59:	rex.W jmp QWORD PTR [rip+0x11678]        # 0x1400190d8
   140007a60:	mov    QWORD PTR [rsp+0x10],rbx
   140007a65:	mov    QWORD PTR [rsp+0x20],rsi
   140007a6a:	push   r14
   140007a6c:	sub    rsp,0x20
   140007a70:	mov    eax,r8d
   140007a73:	mov    esi,r8d
   140007a76:	mov    r14,rdx
   140007a79:	sub    eax,DWORD PTR [rdx]
   140007a7b:	mov    rbx,rcx
   140007a7e:	jns    0x140007a95
   140007a80:	mov    rax,QWORD PTR [rcx]
   140007a83:	lea    rdx,[rip+0x129c6]        # 0x14001a450
   140007a8a:	mov    r8d,0x1
   140007a90:	call   QWORD PTR [rax+0x8]
   140007a93:	mov    eax,esi
   140007a95:	test   eax,eax
   140007a97:	jle    0x140007ad1
   140007a99:	mov    QWORD PTR [rsp+0x30],rdi
   140007a9e:	mov    BYTE PTR [rsp+0x40],0x20
   140007aa3:	mov    edi,eax
   140007aa5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140007ab0:	mov    rax,QWORD PTR [rbx]
   140007ab3:	lea    rdx,[rsp+0x40]
   140007ab8:	mov    r8d,0x1
   140007abe:	mov    rcx,rbx
   140007ac1:	call   QWORD PTR [rax+0x8]
   140007ac4:	dec    rdi
   140007ac7:	jne    0x140007ab0
   140007ac9:	mov    rdi,QWORD PTR [rsp+0x30]
   140007ace:	mov    DWORD PTR [r14],esi
   140007ad1:	mov    rbx,QWORD PTR [rsp+0x38]
   140007ad6:	mov    rsi,QWORD PTR [rsp+0x48]
   140007adb:	add    rsp,0x20
   140007adf:	pop    r14
   140007ae1:	ret    
   140007ae2:	int3   
   140007ae3:	int3   
   140007ae4:	int3   
   140007ae5:	int3   
   140007ae6:	int3   
   140007ae7:	int3   
   140007ae8:	int3   
   140007ae9:	int3   
   140007aea:	int3   
   140007aeb:	int3   
   140007aec:	int3   
   140007aed:	int3   
   140007aee:	int3   
   140007aef:	int3   
   140007af0:	mov    rax,rcx
   140007af3:	mov    QWORD PTR [rcx+0x10],rdx
   140007af7:	mov    QWORD PTR [rcx+0x18],r8
   140007afb:	or     rax,0x1
   140007aff:	mov    QWORD PTR [rcx+0x20],r9
   140007b03:	mov    DWORD PTR [rcx+0x28],0x0
   140007b0a:	mov    QWORD PTR [rcx+0x8],rax
   140007b0e:	mov    QWORD PTR [rcx],rax
   140007b11:	test   r8,r8
   140007b14:	je     0x140007b4a
   140007b16:	mov    DWORD PTR [rcx+0x28],0x1
   140007b1d:	cmp    BYTE PTR [r8],0x2d
   140007b21:	jne    0x140007b4a
   140007b23:	cmp    BYTE PTR [r8+0x1],0x0
   140007b28:	je     0x140007b4a
   140007b2a:	nop    WORD PTR [rax+rax*1+0x0]
   140007b30:	movsxd rdx,DWORD PTR [rcx+0x28]
   140007b34:	cmp    BYTE PTR [rdx+r8*1],0x3d
   140007b39:	je     0x140007b4a
   140007b3b:	lea    eax,[rdx+0x1]
   140007b3e:	mov    DWORD PTR [rcx+0x28],eax
   140007b41:	cdqe   
   140007b43:	cmp    BYTE PTR [rax+r8*1],0x0
   140007b48:	jne    0x140007b30
   140007b4a:	ret    
   140007b4b:	int3   
   140007b4c:	int3   
   140007b4d:	int3   
   140007b4e:	int3   
   140007b4f:	int3   
   140007b50:	rex push rbx
   140007b52:	sub    rsp,0x30
   140007b56:	movzx  eax,BYTE PTR [rip+0x19b1d]        # 0x14002167a
   140007b5d:	mov    r9,r8
   140007b60:	xor    r8d,r8d
   140007b63:	mov    BYTE PTR [rsp+0x20],al
   140007b67:	mov    rbx,rdx
   140007b6a:	call   0x1400023e0
   140007b6f:	mov    rax,rbx
   140007b72:	add    rsp,0x30
   140007b76:	pop    rbx
   140007b77:	ret    
   140007b78:	int3   
   140007b79:	int3   
   140007b7a:	int3   
   140007b7b:	int3   
   140007b7c:	int3   
   140007b7d:	int3   
   140007b7e:	int3   
   140007b7f:	int3   
   140007b80:	rex push rbx
   140007b82:	sub    rsp,0x30
   140007b86:	movzx  eax,BYTE PTR [rip+0x19aed]        # 0x14002167a
   140007b8d:	mov    r9,r8
   140007b90:	xor    r8d,r8d
   140007b93:	mov    BYTE PTR [rsp+0x20],al
   140007b97:	mov    rbx,rdx
   140007b9a:	call   0x140002180
   140007b9f:	mov    rax,rbx
   140007ba2:	add    rsp,0x30
   140007ba6:	pop    rbx
   140007ba7:	ret    
   140007ba8:	int3   
   140007ba9:	int3   
   140007baa:	int3   
   140007bab:	int3   
   140007bac:	int3   
   140007bad:	int3   
   140007bae:	int3   
   140007baf:	int3   
   140007bb0:	mov    QWORD PTR [rsp+0x18],rbx
   140007bb5:	push   rbp
   140007bb6:	push   rsi
   140007bb7:	push   r14
   140007bb9:	sub    rsp,0x20
   140007bbd:	mov    rbx,rcx
   140007bc0:	mov    rcx,QWORD PTR [rcx+0x10]
   140007bc4:	mov    r14,r9
   140007bc7:	mov    rsi,r8
   140007bca:	mov    rbp,rdx
   140007bcd:	cmp    rcx,rdx
   140007bd0:	jb     0x140007d19
   140007bd6:	mov    rax,QWORD PTR [r8+0x10]
   140007bda:	cmp    rax,r9
   140007bdd:	jb     0x140007d19
   140007be3:	sub    rax,r9
   140007be6:	mov    QWORD PTR [rsp+0x40],rdi
   140007beb:	mov    rdi,QWORD PTR [rsp+0x60]
   140007bf0:	cmp    rax,rdi
   140007bf3:	cmovb  rdi,rax
   140007bf7:	or     rax,0xffffffffffffffff
   140007bfb:	sub    rax,rcx
   140007bfe:	cmp    rax,rdi
   140007c01:	ja     0x140007c11
   140007c03:	lea    rcx,[rip+0x1308e]        # 0x14001ac98
   140007c0a:	call   QWORD PTR [rip+0x115d0]        # 0x1400191e0
   140007c10:	int3   
   140007c11:	test   rdi,rdi
   140007c14:	je     0x140007d03
   140007c1a:	mov    QWORD PTR [rsp+0x48],r15
   140007c1f:	lea    r15,[rcx+rdi*1]
   140007c23:	xor    r8d,r8d
   140007c26:	mov    rdx,r15
   140007c29:	mov    rcx,rbx
   140007c2c:	call   0x140005b20
   140007c31:	test   al,al
   140007c33:	je     0x140007cfe
   140007c39:	mov    rax,QWORD PTR [rbx+0x18]
   140007c3d:	cmp    rax,0x10
   140007c41:	jb     0x140007c48
   140007c43:	mov    rcx,QWORD PTR [rbx]
   140007c46:	jmp    0x140007c4b
   140007c48:	mov    rcx,rbx
   140007c4b:	cmp    rax,0x10
   140007c4f:	jb     0x140007c56
   140007c51:	mov    rax,QWORD PTR [rbx]
   140007c54:	jmp    0x140007c59
   140007c56:	mov    rax,rbx
   140007c59:	mov    r8,QWORD PTR [rbx+0x10]
   140007c5d:	sub    r8,rbp
   140007c60:	je     0x140007c73
   140007c62:	lea    rdx,[rcx+rbp*1]
   140007c66:	lea    rcx,[rax+rbp*1]
   140007c6a:	add    rcx,rdi
   140007c6d:	call   QWORD PTR [rip+0x11605]        # 0x140019278
   140007c73:	cmp    rbx,rsi
   140007c76:	jne    0x140007cb8
   140007c78:	cmp    rbp,r14
   140007c7b:	jae    0x140007c80
   140007c7d:	add    r14,rdi
   140007c80:	mov    rax,QWORD PTR [rbx+0x18]
   140007c84:	cmp    rax,0x10
   140007c88:	jb     0x140007c8f
   140007c8a:	mov    rcx,QWORD PTR [rbx]
   140007c8d:	jmp    0x140007c92
   140007c8f:	mov    rcx,rbx
   140007c92:	cmp    rax,0x10
   140007c96:	jb     0x140007c9d
   140007c98:	mov    rax,QWORD PTR [rbx]
   140007c9b:	jmp    0x140007ca0
   140007c9d:	mov    rax,rbx
   140007ca0:	test   rdi,rdi
   140007ca3:	je     0x140007ce6
   140007ca5:	lea    rdx,[rcx+r14*1]
   140007ca9:	lea    rcx,[rax+rbp*1]
   140007cad:	mov    r8,rdi
   140007cb0:	call   QWORD PTR [rip+0x115c2]        # 0x140019278
   140007cb6:	jmp    0x140007ce6
   140007cb8:	cmp    QWORD PTR [rsi+0x18],0x10
   140007cbd:	jb     0x140007cc2
   140007cbf:	mov    rsi,QWORD PTR [rsi]
   140007cc2:	cmp    QWORD PTR [rbx+0x18],0x10
   140007cc7:	jb     0x140007cce
   140007cc9:	mov    rax,QWORD PTR [rbx]
   140007ccc:	jmp    0x140007cd1
   140007cce:	mov    rax,rbx
   140007cd1:	test   rdi,rdi
   140007cd4:	je     0x140007ce6
   140007cd6:	lea    rdx,[rsi+r14*1]
   140007cda:	lea    rcx,[rax+rbp*1]
   140007cde:	mov    r8,rdi
   140007ce1:	call   0x140017346
   140007ce6:	cmp    QWORD PTR [rbx+0x18],0x10
   140007ceb:	mov    QWORD PTR [rbx+0x10],r15
   140007cef:	jb     0x140007cf6
   140007cf1:	mov    rax,QWORD PTR [rbx]
   140007cf4:	jmp    0x140007cf9
   140007cf6:	mov    rax,rbx
   140007cf9:	mov    BYTE PTR [rax+r15*1],0x0
   140007cfe:	mov    r15,QWORD PTR [rsp+0x48]
   140007d03:	mov    rdi,QWORD PTR [rsp+0x40]
   140007d08:	mov    rax,rbx
   140007d0b:	mov    rbx,QWORD PTR [rsp+0x50]
   140007d10:	add    rsp,0x20
   140007d14:	pop    r14
   140007d16:	pop    rsi
   140007d17:	pop    rbp
   140007d18:	ret    
   140007d19:	lea    rcx,[rip+0x12f88]        # 0x14001aca8
   140007d20:	call   QWORD PTR [rip+0x114ca]        # 0x1400191f0
   140007d26:	int3   
   140007d27:	int3   
   140007d28:	int3   
   140007d29:	int3   
   140007d2a:	int3   
   140007d2b:	int3   
   140007d2c:	int3   
   140007d2d:	int3   
   140007d2e:	int3   
   140007d2f:	int3   
   140007d30:	mov    QWORD PTR [rsp+0x10],rbx
   140007d35:	mov    QWORD PTR [rsp+0x18],rbp
   140007d3a:	mov    QWORD PTR [rsp+0x20],rsi
   140007d3f:	push   rdi
   140007d40:	sub    rsp,0x30
   140007d44:	mov    rdi,r9
   140007d47:	mov    rsi,r8
   140007d4a:	mov    rbp,rdx
   140007d4d:	mov    rbx,rcx
   140007d50:	test   r8,r8
   140007d53:	je     0x140007da7
   140007d55:	mov    r10,QWORD PTR [rcx+0x18]
   140007d59:	cmp    r10,0x10
   140007d5d:	jb     0x140007d64
   140007d5f:	mov    rax,QWORD PTR [rcx]
   140007d62:	jmp    0x140007d67
   140007d64:	mov    rax,rcx
   140007d67:	cmp    r8,rax
   140007d6a:	jb     0x140007da7
   140007d6c:	cmp    r10,0x10
   140007d70:	jb     0x140007d75
   140007d72:	mov    rcx,QWORD PTR [rcx]
   140007d75:	add    rcx,QWORD PTR [rbx+0x10]
   140007d79:	cmp    rcx,r8
   140007d7c:	jbe    0x140007da7
   140007d7e:	cmp    r10,0x10
   140007d82:	jb     0x140007d89
   140007d84:	mov    rax,QWORD PTR [rbx]
   140007d87:	jmp    0x140007d8c
   140007d89:	mov    rax,rbx
   140007d8c:	sub    rsi,rax
   140007d8f:	mov    QWORD PTR [rsp+0x20],r9
   140007d94:	mov    r8,rbx
   140007d97:	mov    r9,rsi
   140007d9a:	mov    rcx,rbx
   140007d9d:	call   0x140007bb0
   140007da2:	jmp    0x140007e79
   140007da7:	mov    rcx,QWORD PTR [rbx+0x10]
   140007dab:	cmp    rcx,rdx
   140007dae:	jae    0x140007dbe
   140007db0:	lea    rcx,[rip+0x12ef1]        # 0x14001aca8
   140007db7:	call   QWORD PTR [rip+0x11433]        # 0x1400191f0
   140007dbd:	int3   
   140007dbe:	or     rax,0xffffffffffffffff
   140007dc2:	sub    rax,rcx
   140007dc5:	cmp    rax,r9
   140007dc8:	ja     0x140007dd8
   140007dca:	lea    rcx,[rip+0x12ec7]        # 0x14001ac98
   140007dd1:	call   QWORD PTR [rip+0x11409]        # 0x1400191e0
   140007dd7:	int3   
   140007dd8:	test   r9,r9
   140007ddb:	je     0x140007e76
   140007de1:	mov    QWORD PTR [rsp+0x40],r14
   140007de6:	lea    r14,[rcx+r9*1]
   140007dea:	xor    r8d,r8d
   140007ded:	mov    rdx,r14
   140007df0:	mov    rcx,rbx
   140007df3:	call   0x140005b20
   140007df8:	test   al,al
   140007dfa:	je     0x140007e71
   140007dfc:	mov    rax,QWORD PTR [rbx+0x18]
   140007e00:	cmp    rax,0x10
   140007e04:	jb     0x140007e0b
   140007e06:	mov    rcx,QWORD PTR [rbx]
   140007e09:	jmp    0x140007e0e
   140007e0b:	mov    rcx,rbx
   140007e0e:	cmp    rax,0x10
   140007e12:	jb     0x140007e19
   140007e14:	mov    rax,QWORD PTR [rbx]
   140007e17:	jmp    0x140007e1c
   140007e19:	mov    rax,rbx
   140007e1c:	mov    r8,QWORD PTR [rbx+0x10]
   140007e20:	sub    r8,rbp
   140007e23:	je     0x140007e36
   140007e25:	lea    rdx,[rcx+rbp*1]
   140007e29:	lea    rcx,[rax+rbp*1]
   140007e2d:	add    rcx,rdi
   140007e30:	call   QWORD PTR [rip+0x11442]        # 0x140019278
   140007e36:	cmp    QWORD PTR [rbx+0x18],0x10
   140007e3b:	jb     0x140007e42
   140007e3d:	mov    rax,QWORD PTR [rbx]
   140007e40:	jmp    0x140007e45
   140007e42:	mov    rax,rbx
   140007e45:	test   rdi,rdi
   140007e48:	je     0x140007e59
   140007e4a:	lea    rcx,[rax+rbp*1]
   140007e4e:	mov    r8,rdi
   140007e51:	mov    rdx,rsi
   140007e54:	call   0x140017346
   140007e59:	cmp    QWORD PTR [rbx+0x18],0x10
   140007e5e:	mov    QWORD PTR [rbx+0x10],r14
   140007e62:	jb     0x140007e69
   140007e64:	mov    rax,QWORD PTR [rbx]
   140007e67:	jmp    0x140007e6c
   140007e69:	mov    rax,rbx
   140007e6c:	mov    BYTE PTR [rax+r14*1],0x0
   140007e71:	mov    r14,QWORD PTR [rsp+0x40]
   140007e76:	mov    rax,rbx
   140007e79:	mov    rbx,QWORD PTR [rsp+0x48]
   140007e7e:	mov    rbp,QWORD PTR [rsp+0x50]
   140007e83:	mov    rsi,QWORD PTR [rsp+0x58]
   140007e88:	add    rsp,0x30
   140007e8c:	pop    rdi
   140007e8d:	ret    
   140007e8e:	int3   
   140007e8f:	int3   
   140007e90:	cmp    BYTE PTR [r8],0x0
   140007e94:	jne    0x140007e9e
   140007e96:	xor    r9d,r9d
   140007e99:	jmp    0x140007d30
   140007e9e:	or     r9,0xffffffffffffffff
   140007ea2:	inc    r9
   140007ea5:	cmp    BYTE PTR [r8+r9*1],0x0
   140007eaa:	jne    0x140007ea2
   140007eac:	jmp    0x140007d30
   140007eb1:	int3   
   140007eb2:	int3   
   140007eb3:	int3   
   140007eb4:	int3   
   140007eb5:	int3   
   140007eb6:	int3   
   140007eb7:	int3   
   140007eb8:	int3   
   140007eb9:	int3   
   140007eba:	int3   
   140007ebb:	int3   
   140007ebc:	int3   
   140007ebd:	int3   
   140007ebe:	int3   
   140007ebf:	int3   
   140007ec0:	rex push rbx
   140007ec2:	sub    rsp,0x30
   140007ec6:	movzx  eax,BYTE PTR [rip+0x197ad]        # 0x14002167a
   140007ecd:	mov    r9,r8
   140007ed0:	xor    r8d,r8d
   140007ed3:	mov    BYTE PTR [rsp+0x20],al
   140007ed7:	mov    rbx,rdx
   140007eda:	call   0x1400023e0
   140007edf:	mov    rax,rbx
   140007ee2:	add    rsp,0x30
   140007ee6:	pop    rbx
   140007ee7:	ret    
   140007ee8:	int3   
   140007ee9:	int3   
   140007eea:	int3   
   140007eeb:	int3   
   140007eec:	int3   
   140007eed:	int3   
   140007eee:	int3   
   140007eef:	int3   
   140007ef0:	rex push rbx
   140007ef2:	sub    rsp,0x30
   140007ef6:	movzx  eax,BYTE PTR [rip+0x1977d]        # 0x14002167a
   140007efd:	mov    r9,r8
   140007f00:	xor    r8d,r8d
   140007f03:	mov    BYTE PTR [rsp+0x20],al
   140007f07:	mov    rbx,rdx
   140007f0a:	call   0x140002180
   140007f0f:	mov    rax,rbx
   140007f12:	add    rsp,0x30
   140007f16:	pop    rbx
   140007f17:	ret    
   140007f18:	int3   
   140007f19:	int3   
   140007f1a:	int3   
   140007f1b:	int3   
   140007f1c:	int3   
   140007f1d:	int3   
   140007f1e:	int3   
   140007f1f:	int3   
   140007f20:	movzx  eax,BYTE PTR [rdx]
   140007f23:	test   al,al
   140007f25:	je     0x140007f36
   140007f27:	cmp    al,cl
   140007f29:	je     0x140007f36
   140007f2b:	movzx  eax,BYTE PTR [rdx+0x1]
   140007f2f:	inc    rdx
   140007f32:	test   al,al
   140007f34:	jne    0x140007f27
   140007f36:	cmp    BYTE PTR [rdx],cl
   140007f38:	sete   al
   140007f3b:	ret    
   140007f3c:	int3   
   140007f3d:	int3   
   140007f3e:	int3   
   140007f3f:	int3   
   140007f40:	movzx  eax,BYTE PTR [rcx+0x8]
   140007f44:	and    al,0x1
   140007f46:	ret    
   140007f47:	int3   
   140007f48:	int3   
   140007f49:	int3   
   140007f4a:	int3   
   140007f4b:	int3   
   140007f4c:	int3   
   140007f4d:	int3   
   140007f4e:	int3   
   140007f4f:	int3   
   140007f50:	movzx  eax,BYTE PTR [rcx]
   140007f53:	and    al,0x1
   140007f55:	ret    
   140007f56:	int3   
   140007f57:	int3   
   140007f58:	int3   
   140007f59:	int3   
   140007f5a:	int3   
   140007f5b:	int3   
   140007f5c:	int3   
   140007f5d:	int3   
   140007f5e:	int3   
   140007f5f:	int3   
   140007f60:	and    cl,0x1
   140007f63:	movzx  eax,cl
   140007f66:	ret    
   140007f67:	int3   
   140007f68:	int3   
   140007f69:	int3   
   140007f6a:	int3   
   140007f6b:	int3   
   140007f6c:	int3   
   140007f6d:	int3   
   140007f6e:	int3   
   140007f6f:	int3   
   140007f70:	cmp    ecx,0x303f
   140007f76:	jne    0x140007f7b
   140007f78:	xor    al,al
   140007f7a:	ret    
   140007f7b:	lea    eax,[rcx-0xffe7]
   140007f81:	cmp    eax,0xb018
   140007f86:	jbe    0x140007ffc
   140007f88:	lea    eax,[rcx-0xff61]
   140007f8e:	cmp    eax,0x7e
   140007f91:	jbe    0x140007ffc
   140007f93:	lea    eax,[rcx-0xfe6c]
   140007f99:	cmp    eax,0x94
   140007f9e:	jbe    0x140007ffc
   140007fa0:	lea    eax,[rcx-0xfb00]
   140007fa6:	cmp    eax,0x30f
   140007fab:	jbe    0x140007ffc
   140007fad:	lea    eax,[rcx-0xd7fc]
   140007fb3:	cmp    eax,0x2103
   140007fb8:	jbe    0x140007ffc
   140007fba:	lea    eax,[rcx-0xa97d]
   140007fc0:	cmp    eax,0x282
   140007fc5:	jbe    0x140007ffc
   140007fc7:	lea    eax,[rcx-0xa4c7]
   140007fcd:	cmp    eax,0x498
   140007fd2:	jbe    0x140007ffc
   140007fd4:	lea    eax,[rcx-0x232b]
   140007fda:	cmp    eax,0xb54
   140007fdf:	jbe    0x140007ffc
   140007fe1:	lea    eax,[rcx-0x1160]
   140007fe7:	cmp    eax,0x11c8
   140007fec:	jbe    0x140007ffc
   140007fee:	cmp    ecx,0x10ff
   140007ff4:	jbe    0x140007ffc
   140007ff6:	mov    eax,0x1
   140007ffb:	ret    
   140007ffc:	xor    eax,eax
   140007ffe:	ret    
   140007fff:	int3   
   140008000:	xor    eax,eax
   140008002:	cmp    QWORD PTR [rcx+0x90],rax
   140008009:	setne  al
   14000800c:	ret    
   14000800d:	int3   
   14000800e:	int3   
   14000800f:	int3   
   140008010:	xor    eax,eax
   140008012:	cmp    QWORD PTR [rcx+0xa0],rax
   140008019:	setne  al
   14000801c:	ret    
   14000801d:	int3   
   14000801e:	int3   
   14000801f:	int3   
   140008020:	xor    eax,eax
   140008022:	cmp    QWORD PTR [rcx+0x98],rax
   140008029:	setne  al
   14000802c:	ret    
   14000802d:	int3   
   14000802e:	int3   
   14000802f:	int3   
   140008030:	test   BYTE PTR [rcx+0x8],0x1
   140008034:	lea    rax,[rcx+0x8]
   140008038:	jne    0x14000804d
   14000803a:	nop    WORD PTR [rax+rax*1+0x0]
   140008040:	mov    rcx,QWORD PTR [rax]
   140008043:	test   BYTE PTR [rcx+0x8],0x1
   140008047:	lea    rax,[rcx+0x8]
   14000804b:	je     0x140008040
   14000804d:	mov    rax,QWORD PTR [rcx+0x8]
   140008051:	and    rax,0xfffffffffffffffe
   140008055:	ret    
   140008056:	int3   
   140008057:	int3   
   140008058:	int3   
   140008059:	int3   
   14000805a:	int3   
   14000805b:	int3   
   14000805c:	int3   
   14000805d:	int3   
   14000805e:	int3   
   14000805f:	int3   
   140008060:	mov    rax,QWORD PTR [rcx+0x10]
   140008064:	ret    
   140008065:	int3   
   140008066:	int3   
   140008067:	int3   
   140008068:	int3   
   140008069:	int3   
   14000806a:	int3   
   14000806b:	int3   
   14000806c:	int3   
   14000806d:	int3   
   14000806e:	int3   
   14000806f:	int3   
   140008070:	cmp    BYTE PTR [rcx],0x0
   140008073:	jne    0x140008078
   140008075:	xor    eax,eax
   140008077:	ret    
   140008078:	or     rax,0xffffffffffffffff
   14000807c:	nop    DWORD PTR [rax+0x0]
   140008080:	inc    rax
   140008083:	cmp    BYTE PTR [rcx+rax*1],0x0
   140008087:	jne    0x140008080
   140008089:	ret    
   14000808a:	int3   
   14000808b:	int3   
   14000808c:	int3   
   14000808d:	int3   
   14000808e:	int3   
   14000808f:	int3   
   140008090:	mov    eax,DWORD PTR [rcx+0x24]
   140008093:	ret    
   140008094:	int3   
   140008095:	int3   
   140008096:	int3   
   140008097:	int3   
   140008098:	int3   
   140008099:	int3   
   14000809a:	int3   
   14000809b:	int3   
   14000809c:	int3   
   14000809d:	int3   
   14000809e:	int3   
   14000809f:	int3   
   1400080a0:	mov    eax,DWORD PTR [rcx+0x34]
   1400080a3:	ret    
   1400080a4:	int3   
   1400080a5:	int3   
   1400080a6:	int3   
   1400080a7:	int3   
   1400080a8:	int3   
   1400080a9:	int3   
   1400080aa:	int3   
   1400080ab:	int3   
   1400080ac:	int3   
   1400080ad:	int3   
   1400080ae:	int3   
   1400080af:	int3   
   1400080b0:	movabs rax,0x3ffffffffffffff
   1400080ba:	ret    
   1400080bb:	int3   
   1400080bc:	int3   
   1400080bd:	int3   
   1400080be:	int3   
   1400080bf:	int3   
   1400080c0:	or     rax,0xffffffffffffffff
   1400080c4:	ret    
   1400080c5:	int3   
   1400080c6:	int3   
   1400080c7:	int3   
   1400080c8:	int3   
   1400080c9:	int3   
   1400080ca:	int3   
   1400080cb:	int3   
   1400080cc:	int3   
   1400080cd:	int3   
   1400080ce:	int3   
   1400080cf:	int3   
   1400080d0:	movabs rax,0x3ffffffffffffff
   1400080da:	ret    
   1400080db:	int3   
   1400080dc:	int3   
   1400080dd:	int3   
   1400080de:	int3   
   1400080df:	int3   
   1400080e0:	or     rax,0xffffffffffffffff
   1400080e4:	ret    
   1400080e5:	int3   
   1400080e6:	int3   
   1400080e7:	int3   
   1400080e8:	int3   
   1400080e9:	int3   
   1400080ea:	int3   
   1400080eb:	int3   
   1400080ec:	int3   
   1400080ed:	int3   
   1400080ee:	int3   
   1400080ef:	int3   
   1400080f0:	movabs rax,0x3ffffffffffffff
   1400080fa:	ret    
   1400080fb:	int3   
   1400080fc:	int3   
   1400080fd:	int3   
   1400080fe:	int3   
   1400080ff:	int3   
   140008100:	or     rax,0xffffffffffffffff
   140008104:	ret    
   140008105:	int3   
   140008106:	int3   
   140008107:	int3   
   140008108:	int3   
   140008109:	int3   
   14000810a:	int3   
   14000810b:	int3   
   14000810c:	int3   
   14000810d:	int3   
   14000810e:	int3   
   14000810f:	int3   
   140008110:	movabs rax,0x3ffffffffffffff
   14000811a:	ret    
   14000811b:	int3   
   14000811c:	int3   
   14000811d:	int3   
   14000811e:	int3   
   14000811f:	int3   
   140008120:	mov    rax,0xfffffffffffffffe
   140008127:	ret    
   140008128:	int3   
   140008129:	int3   
   14000812a:	int3   
   14000812b:	int3   
   14000812c:	int3   
   14000812d:	int3   
   14000812e:	int3   
   14000812f:	int3   
   140008130:	mov    QWORD PTR [rsp+0x8],rbx
   140008135:	push   rdi
   140008136:	sub    rsp,0x30
   14000813a:	xor    ebx,ebx
   14000813c:	mov    ecx,r8d
   14000813f:	mov    rdi,rdx
   140008142:	mov    DWORD PTR [rsp+0x20],ebx
   140008146:	call   QWORD PTR [rip+0x10f44]        # 0x140019090
   14000814c:	mov    QWORD PTR [rdi+0x18],0xf
   140008154:	test   rax,rax
   140008157:	mov    QWORD PTR [rdi+0x10],rbx
   14000815b:	lea    rdx,[rip+0x121c6]        # 0x14001a328
   140008162:	cmovne rdx,rax
   140008166:	mov    BYTE PTR [rdi],bl
   140008168:	cmp    BYTE PTR [rdx],bl
   14000816a:	je     0x140008179
   14000816c:	or     rbx,0xffffffffffffffff
   140008170:	inc    rbx
   140008173:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140008177:	jne    0x140008170
   140008179:	mov    r8,rbx
   14000817c:	mov    rcx,rdi
   14000817f:	call   0x140006790
   140008184:	mov    rbx,QWORD PTR [rsp+0x40]
   140008189:	mov    rax,rdi
   14000818c:	add    rsp,0x30
   140008190:	pop    rdi
   140008191:	ret    
   140008192:	int3   
   140008193:	int3   
   140008194:	int3   
   140008195:	int3   
   140008196:	int3   
   140008197:	int3   
   140008198:	int3   
   140008199:	int3   
   14000819a:	int3   
   14000819b:	int3   
   14000819c:	int3   
   14000819d:	int3   
   14000819e:	int3   
   14000819f:	int3   
   1400081a0:	rex push rbx
   1400081a2:	sub    rsp,0x30
   1400081a6:	xor    eax,eax
   1400081a8:	mov    rbx,rdx
   1400081ab:	mov    DWORD PTR [rsp+0x20],eax
   1400081af:	cmp    r8d,0x1
   1400081b3:	jne    0x1400081df
   1400081b5:	mov    QWORD PTR [rdx+0x18],0xf
   1400081bd:	mov    QWORD PTR [rdx+0x10],rax
   1400081c1:	mov    BYTE PTR [rdx],al
   1400081c3:	lea    rdx,[rip+0x121b6]        # 0x14001a380
   1400081ca:	lea    r8d,[rax+0x15]
   1400081ce:	mov    rcx,rbx
   1400081d1:	call   0x140006790
   1400081d6:	mov    rax,rbx
   1400081d9:	add    rsp,0x30
   1400081dd:	pop    rbx
   1400081de:	ret    
   1400081df:	call   0x140008130
   1400081e4:	mov    rax,rbx
   1400081e7:	add    rsp,0x30
   1400081eb:	pop    rbx
   1400081ec:	ret    
   1400081ed:	int3   
   1400081ee:	int3   
   1400081ef:	int3   
   1400081f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400081f5:	push   rdi
   1400081f6:	sub    rsp,0x30
   1400081fa:	xor    ebx,ebx
   1400081fc:	mov    ecx,r8d
   1400081ff:	mov    rdi,rdx
   140008202:	mov    DWORD PTR [rsp+0x20],ebx
   140008206:	call   QWORD PTR [rip+0x10e8c]        # 0x140019098
   14000820c:	mov    QWORD PTR [rdi+0x18],0xf
   140008214:	test   rax,rax
   140008217:	mov    QWORD PTR [rdi+0x10],rbx
   14000821b:	lea    rdx,[rip+0x12106]        # 0x14001a328
   140008222:	cmovne rdx,rax
   140008226:	mov    BYTE PTR [rdi],bl
   140008228:	cmp    BYTE PTR [rdx],bl
   14000822a:	je     0x140008239
   14000822c:	or     rbx,0xffffffffffffffff
   140008230:	inc    rbx
   140008233:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140008237:	jne    0x140008230
   140008239:	mov    r8,rbx
   14000823c:	mov    rcx,rdi
   14000823f:	call   0x140006790
   140008244:	mov    rbx,QWORD PTR [rsp+0x40]
   140008249:	mov    rax,rdi
   14000824c:	add    rsp,0x30
   140008250:	pop    rdi
   140008251:	ret    
   140008252:	int3   
   140008253:	int3   
   140008254:	int3   
   140008255:	int3   
   140008256:	int3   
   140008257:	int3   
   140008258:	int3   
   140008259:	int3   
   14000825a:	int3   
   14000825b:	int3   
   14000825c:	int3   
   14000825d:	int3   
   14000825e:	int3   
   14000825f:	int3   
   140008260:	test   r8,r8
   140008263:	jne    0x140008269
   140008265:	mov    rax,rcx
   140008268:	ret    
   140008269:	rex.W jmp QWORD PTR [rip+0x11008]        # 0x140019278
   140008270:	lea    rax,[rip+0x120a9]        # 0x14001a320
   140008277:	ret    
   140008278:	int3   
   140008279:	int3   
   14000827a:	int3   
   14000827b:	int3   
   14000827c:	int3   
   14000827d:	int3   
   14000827e:	int3   
   14000827f:	int3   
   140008280:	lea    rax,[rip+0x120e9]        # 0x14001a370
   140008287:	ret    
   140008288:	int3   
   140008289:	int3   
   14000828a:	int3   
   14000828b:	int3   
   14000828c:	int3   
   14000828d:	int3   
   14000828e:	int3   
   14000828f:	int3   
   140008290:	lea    rax,[rip+0x12139]        # 0x14001a3d0
   140008297:	ret    
   140008298:	int3   
   140008299:	int3   
   14000829a:	int3   
   14000829b:	int3   
   14000829c:	int3   
   14000829d:	int3   
   14000829e:	int3   
   14000829f:	int3   
   1400082a0:	rex push rbx
   1400082a2:	sub    rsp,0x20
   1400082a6:	mov    rbx,rcx
   1400082a9:	mov    rcx,QWORD PTR [rcx+0x18]
   1400082ad:	test   rcx,rcx
   1400082b0:	je     0x14000837a
   1400082b6:	cmp    DWORD PTR [rbx+0x20],0xffffffff
   1400082ba:	jne    0x1400082d3
   1400082bc:	xor    r8d,r8d
   1400082bf:	mov    rcx,rbx
   1400082c2:	mov    DWORD PTR [rbx+0x20],r8d
   1400082c6:	call   0x14000a490
   1400082cb:	mov    al,0x1
   1400082cd:	add    rsp,0x20
   1400082d1:	pop    rbx
   1400082d2:	ret    
   1400082d3:	movsxd rax,DWORD PTR [rbx+0x24]
   1400082d7:	add    rax,rcx
   1400082da:	xor    r8d,r8d
   1400082dd:	mov    QWORD PTR [rbx+0x18],rax
   1400082e1:	mov    rdx,QWORD PTR [rbx+0x18]
   1400082e5:	movsx  ecx,BYTE PTR [rdx]
   1400082e8:	test   ecx,ecx
   1400082ea:	je     0x14000834c
   1400082ec:	sub    ecx,0x9
   1400082ef:	je     0x140008317
   1400082f1:	dec    ecx
   1400082f3:	je     0x14000834c
   1400082f5:	dec    ecx
   1400082f7:	je     0x1400082ff
   1400082f9:	lea    rax,[rdx+0x1]
   1400082fd:	jmp    0x1400082dd
   1400082ff:	mov    ecx,DWORD PTR [rbx+0x30]
   140008302:	inc    ecx
   140008304:	mov    DWORD PTR [rbx+0x30],ecx
   140008307:	cmp    DWORD PTR [rbx+0x2c],ecx
   14000830a:	cmovge ecx,DWORD PTR [rbx+0x2c]
   14000830e:	mov    DWORD PTR [rbx+0x2c],ecx
   140008311:	inc    QWORD PTR [rbx+0x18]
   140008315:	jmp    0x140008330
   140008317:	cmp    BYTE PTR [rbx+0x38],r8b
   14000831b:	je     0x140008338
   14000831d:	inc    DWORD PTR [rbx+0x20]
   140008320:	lea    rax,[rdx+0x1]
   140008324:	mov    BYTE PTR [rbx+0x38],r8b
   140008328:	mov    QWORD PTR [rbx+0x18],rax
   14000832c:	mov    DWORD PTR [rbx+0x30],r8d
   140008330:	mov    eax,DWORD PTR [rbx+0x34]
   140008333:	cmp    DWORD PTR [rbx+0x30],eax
   140008336:	jne    0x1400082e1
   140008338:	mov    rcx,rbx
   14000833b:	call   0x14000a490
   140008340:	mov    BYTE PTR [rbx+0x38],0x1
   140008344:	mov    al,0x1
   140008346:	add    rsp,0x20
   14000834a:	pop    rbx
   14000834b:	ret    
   14000834c:	cmp    BYTE PTR [rbx+0x38],r8b
   140008350:	je     0x140008338
   140008352:	inc    DWORD PTR [rbx+0x34]
   140008355:	mov    eax,DWORD PTR [rbx+0x34]
   140008358:	cmp    eax,DWORD PTR [rbx+0x2c]
   14000835b:	jg     0x140008372
   14000835d:	mov    rax,QWORD PTR [rbx+0x10]
   140008361:	mov    BYTE PTR [rbx+0x38],r8b
   140008365:	mov    DWORD PTR [rbx+0x30],r8d
   140008369:	mov    DWORD PTR [rbx+0x20],r8d
   14000836d:	jmp    0x1400082dd
   140008372:	mov    rcx,rbx
   140008375:	call   0x14000a490
   14000837a:	xor    al,al
   14000837c:	add    rsp,0x20
   140008380:	pop    rbx
   140008381:	ret    
   140008382:	int3   
   140008383:	int3   
   140008384:	int3   
   140008385:	int3   
   140008386:	int3   
   140008387:	int3   
   140008388:	int3   
   140008389:	int3   
   14000838a:	int3   
   14000838b:	int3   
   14000838c:	int3   
   14000838d:	int3   
   14000838e:	int3   
   14000838f:	int3   
   140008390:	test   BYTE PTR [rcx],0x1
   140008393:	je     0x140008398
   140008395:	xor    eax,eax
   140008397:	ret    
   140008398:	mov    rax,QWORD PTR [rcx]
   14000839b:	ret    
   14000839c:	int3   
   14000839d:	int3   
   14000839e:	int3   
   14000839f:	int3   
   1400083a0:	mov    rax,QWORD PTR [rcx+0x18]
   1400083a4:	test   rax,rax
   1400083a7:	jne    0x1400083ce
   1400083a9:	mov    rdx,QWORD PTR [rcx+0x10]
   1400083ad:	mov    QWORD PTR [rcx+0x24],rax
   1400083b1:	mov    QWORD PTR [rcx+0x2c],rax
   1400083b5:	test   rdx,rdx
   1400083b8:	mov    DWORD PTR [rcx+0x34],eax
   1400083bb:	mov    BYTE PTR [rcx+0x38],0x1
   1400083bf:	mov    QWORD PTR [rcx+0x18],rdx
   1400083c3:	mov    DWORD PTR [rcx+0x20],0xffffffff
   1400083ca:	setne  al
   1400083cd:	ret    
   1400083ce:	cmp    BYTE PTR [rax],0x0
   1400083d1:	je     0x1400083e8
   1400083d3:	mov    rax,QWORD PTR [rcx+0x18]
   1400083d7:	cmp    BYTE PTR [rax],0xa
   1400083da:	je     0x1400083e8
   1400083dc:	inc    rax
   1400083df:	mov    QWORD PTR [rcx+0x18],rax
   1400083e3:	cmp    BYTE PTR [rax],0x0
   1400083e6:	jne    0x1400083d3
   1400083e8:	mov    rax,QWORD PTR [rcx+0x18]
   1400083ec:	cmp    BYTE PTR [rax],0x0
   1400083ef:	jne    0x14000840d
   1400083f1:	mov    rax,QWORD PTR [rcx+0x8]
   1400083f5:	cmp    QWORD PTR [rax+0x48],0x0
   1400083fa:	jne    0x1400083ff
   1400083fc:	xor    al,al
   1400083fe:	ret    
   1400083ff:	add    rax,0x28
   140008403:	mov    QWORD PTR [rcx+0x8],rax
   140008407:	mov    rax,QWORD PTR [rax+0x20]
   14000840b:	jmp    0x140008410
   14000840d:	inc    rax
   140008410:	mov    QWORD PTR [rcx+0x10],rax
   140008414:	mov    QWORD PTR [rcx+0x18],rax
   140008418:	xor    eax,eax
   14000841a:	mov    QWORD PTR [rcx+0x24],rax
   14000841e:	mov    QWORD PTR [rcx+0x2c],rax
   140008422:	mov    DWORD PTR [rcx+0x34],eax
   140008425:	mov    al,0x1
   140008427:	mov    DWORD PTR [rcx+0x20],0xffffffff
   14000842e:	mov    BYTE PTR [rcx+0x38],al
   140008431:	ret    
   140008432:	int3   
   140008433:	int3   
   140008434:	int3   
   140008435:	int3   
   140008436:	int3   
   140008437:	int3   
   140008438:	int3   
   140008439:	int3   
   14000843a:	int3   
   14000843b:	int3   
   14000843c:	int3   
   14000843d:	int3   
   14000843e:	int3   
   14000843f:	int3   
   140008440:	cmp    QWORD PTR [rcx+0x8],0x0
   140008445:	je     0x140008469
   140008447:	mov    rax,QWORD PTR [rcx]
   14000844a:	cmp    QWORD PTR [rax+0x20],0x0
   14000844f:	je     0x140008469
   140008451:	mov    rax,QWORD PTR [rcx]
   140008454:	cmp    QWORD PTR [rax+0x8],0x0
   140008459:	je     0x140008469
   14000845b:	add    rax,0x28
   14000845f:	mov    QWORD PTR [rcx],rax
   140008462:	cmp    QWORD PTR [rax+0x20],0x0
   140008467:	jne    0x140008451
   140008469:	mov    rax,QWORD PTR [rcx]
   14000846c:	cmp    QWORD PTR [rax+0x20],0x0
   140008471:	jne    0x14000848b
   140008473:	mov    rax,QWORD PTR [rcx]
   140008476:	cmp    QWORD PTR [rax+0x8],0x0
   14000847b:	je     0x14000848b
   14000847d:	add    rax,0x28
   140008481:	mov    QWORD PTR [rcx],rax
   140008484:	cmp    QWORD PTR [rax+0x20],0x0
   140008489:	je     0x140008473
   14000848b:	mov    rax,QWORD PTR [rcx]
   14000848e:	mov    QWORD PTR [rcx+0x8],rax
   140008492:	mov    rax,QWORD PTR [rax+0x20]
   140008496:	mov    QWORD PTR [rcx+0x10],rax
   14000849a:	xor    eax,eax
   14000849c:	cmp    QWORD PTR [rcx+0x10],rax
   1400084a0:	mov    QWORD PTR [rcx+0x18],rax
   1400084a4:	setne  al
   1400084a7:	ret    
   1400084a8:	int3   
   1400084a9:	int3   
   1400084aa:	int3   
   1400084ab:	int3   
   1400084ac:	int3   
   1400084ad:	int3   
   1400084ae:	int3   
   1400084af:	int3   
   1400084b0:	mov    rax,QWORD PTR [rcx+0x8]
   1400084b4:	movsxd rdx,edx
   1400084b7:	mov    rax,QWORD PTR [rax+rdx*8]
   1400084bb:	ret    
   1400084bc:	int3   
   1400084bd:	int3   
   1400084be:	int3   
   1400084bf:	int3   
   1400084c0:	mov    rax,QWORD PTR [rcx+0x8]
   1400084c4:	ret    
   1400084c5:	int3   
   1400084c6:	int3   
   1400084c7:	int3   
   1400084c8:	int3   
   1400084c9:	int3   
   1400084ca:	int3   
   1400084cb:	int3   
   1400084cc:	int3   
   1400084cd:	int3   
   1400084ce:	int3   
   1400084cf:	int3   
   1400084d0:	mov    eax,DWORD PTR [rcx+0x4]
   1400084d3:	ret    
   1400084d4:	int3   
   1400084d5:	int3   
   1400084d6:	int3   
   1400084d7:	int3   
   1400084d8:	int3   
   1400084d9:	int3   
   1400084da:	int3   
   1400084db:	int3   
   1400084dc:	int3   
   1400084dd:	int3   
   1400084de:	int3   
   1400084df:	int3   
   1400084e0:	xor    eax,eax
   1400084e2:	cmp    DWORD PTR [rcx],0xffffffff
   1400084e5:	cmovne eax,DWORD PTR [rcx]
   1400084e8:	ret    
   1400084e9:	int3   
   1400084ea:	int3   
   1400084eb:	int3   
   1400084ec:	int3   
   1400084ed:	int3   
   1400084ee:	int3   
   1400084ef:	int3   
   1400084f0:	rex push rdi
   1400084f2:	sub    rsp,0x30
   1400084f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400084ff:	mov    QWORD PTR [rsp+0x48],rbx
   140008504:	mov    eax,r8d
   140008507:	mov    r10,rdx
   14000850a:	mov    rbx,rcx
   14000850d:	cmp    QWORD PTR [rcx+0x90],0x0
   140008515:	jne    0x1400085ee
   14000851b:	mov    r8d,r9d
   14000851e:	mov    edx,eax
   140008520:	mov    rcx,r10
   140008523:	call   QWORD PTR [rip+0x10c47]        # 0x140019170
   140008529:	mov    rdi,rax
   14000852c:	test   rax,rax
   14000852f:	je     0x1400085ee
   140008535:	mov    BYTE PTR [rbx+0x88],0x1
   14000853c:	mov    BYTE PTR [rbx+0x81],0x0
   140008543:	mov    rcx,rbx
   140008546:	call   QWORD PTR [rip+0x10b8c]        # 0x1400190d8
   14000854c:	lea    rcx,[rdi+0x10]
   140008550:	lea    rdx,[rdi+0x8]
   140008554:	mov    QWORD PTR [rbx+0x18],rcx
   140008558:	mov    QWORD PTR [rbx+0x20],rcx
   14000855c:	mov    QWORD PTR [rbx+0x38],rdi
   140008560:	mov    QWORD PTR [rbx+0x40],rdi
   140008564:	mov    QWORD PTR [rbx+0x50],rdx
   140008568:	mov    QWORD PTR [rbx+0x58],rdx
   14000856c:	mov    QWORD PTR [rbx+0x90],rdi
   140008573:	mov    eax,DWORD PTR [rip+0x19117]        # 0x140021690
   140008579:	mov    DWORD PTR [rbx+0x84],eax
   14000857f:	mov    QWORD PTR [rbx+0x78],0x0
   140008587:	lea    rdx,[rsp+0x40]
   14000858c:	mov    rcx,rbx
   14000858f:	call   QWORD PTR [rip+0x10b23]        # 0x1400190b8
   140008595:	nop
   140008596:	mov    rcx,rax
   140008599:	call   0x140002c60
   14000859e:	mov    rdi,rax
   1400085a1:	mov    rcx,rax
   1400085a4:	call   QWORD PTR [rip+0x10abe]        # 0x140019068
   1400085aa:	test   al,al
   1400085ac:	je     0x1400085b8
   1400085ae:	mov    QWORD PTR [rbx+0x78],0x0
   1400085b6:	jmp    0x1400085c6
   1400085b8:	mov    QWORD PTR [rbx+0x78],rdi
   1400085bc:	mov    rcx,rbx
   1400085bf:	call   QWORD PTR [rip+0x10b13]        # 0x1400190d8
   1400085c5:	nop
   1400085c6:	mov    rcx,QWORD PTR [rsp+0x40]
   1400085cb:	test   rcx,rcx
   1400085ce:	je     0x1400085e9
   1400085d0:	mov    rax,QWORD PTR [rcx]
   1400085d3:	call   QWORD PTR [rax+0x10]
   1400085d6:	test   rax,rax
   1400085d9:	je     0x1400085e9
   1400085db:	mov    r8,QWORD PTR [rax]
   1400085de:	mov    edx,0x1
   1400085e3:	mov    rcx,rax
   1400085e6:	call   QWORD PTR [r8]
   1400085e9:	mov    rax,rbx
   1400085ec:	jmp    0x1400085f0
   1400085ee:	xor    eax,eax
   1400085f0:	mov    rbx,QWORD PTR [rsp+0x48]
   1400085f5:	add    rsp,0x30
   1400085f9:	pop    rdi
   1400085fa:	ret    
   1400085fb:	int3   
   1400085fc:	int3   
   1400085fd:	int3   
   1400085fe:	int3   
   1400085ff:	int3   
   140008600:	mov    QWORD PTR [rsp+0x8],rbx
   140008605:	mov    QWORD PTR [rsp+0x10],rsi
   14000860a:	push   rdi
   14000860b:	sub    rsp,0x20
   14000860f:	mov    eax,DWORD PTR [rcx+0xc8]
   140008615:	mov    edi,r9d
   140008618:	mov    rsi,r8
   14000861b:	mov    rbx,rcx
   14000861e:	cmp    DWORD PTR [rcx+0xcc],eax
   140008624:	jne    0x14000862b
   140008626:	call   0x14000ac60
   14000862b:	movsxd rax,DWORD PTR [rbx+0xc8]
   140008632:	mov    DWORD PTR [rbx+rax*4],edi
   140008635:	movsxd rax,DWORD PTR [rbx+0xc8]
   14000863c:	mov    QWORD PTR [rbx+rax*8+0x40],rsi
   140008641:	mov    eax,DWORD PTR [rbx+0xc8]
   140008647:	mov    rsi,QWORD PTR [rsp+0x38]
   14000864c:	inc    eax
   14000864e:	and    eax,0xf
   140008651:	mov    DWORD PTR [rbx+0xc8],eax
   140008657:	mov    rbx,QWORD PTR [rsp+0x30]
   14000865c:	add    rsp,0x20
   140008660:	pop    rdi
   140008661:	ret    
   140008662:	int3   
   140008663:	int3   
   140008664:	int3   
   140008665:	int3   
   140008666:	int3   
   140008667:	int3   
   140008668:	int3   
   140008669:	int3   
   14000866a:	int3   
   14000866b:	int3   
   14000866c:	int3   
   14000866d:	int3   
   14000866e:	int3   
   14000866f:	int3   
   140008670:	mov    rax,rsp
   140008673:	push   rbp
   140008674:	push   rdi
   140008675:	push   r12
   140008677:	push   r14
   140008679:	push   r15
   14000867b:	mov    rbp,rsp
   14000867e:	sub    rsp,0x70
   140008682:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   14000868a:	mov    QWORD PTR [rax+0x8],rbx
   14000868e:	mov    QWORD PTR [rax+0x10],rsi
   140008692:	mov    r14d,edx
   140008695:	mov    rdi,rcx
   140008698:	cmp    edx,0xffffffff
   14000869b:	jne    0x1400086a4
   14000869d:	xor    eax,eax
   14000869f:	jmp    0x140008932
   1400086a4:	mov    rax,QWORD PTR [rcx+0x40]
   1400086a8:	mov    rcx,QWORD PTR [rax]
   1400086ab:	test   rcx,rcx
   1400086ae:	je     0x1400086df
   1400086b0:	mov    rdx,QWORD PTR [rdi+0x58]
   1400086b4:	movsxd r8,DWORD PTR [rdx]
   1400086b7:	lea    rax,[rcx+r8*1]
   1400086bb:	cmp    rcx,rax
   1400086be:	jae    0x1400086df
   1400086c0:	lea    eax,[r8-0x1]
   1400086c4:	mov    DWORD PTR [rdx],eax
   1400086c6:	mov    rcx,QWORD PTR [rdi+0x40]
   1400086ca:	mov    rdx,QWORD PTR [rcx]
   1400086cd:	lea    rax,[rdx+0x1]
   1400086d1:	mov    QWORD PTR [rcx],rax
   1400086d4:	mov    BYTE PTR [rdx],r14b
   1400086d7:	mov    eax,r14d
   1400086da:	jmp    0x140008932
   1400086df:	cmp    QWORD PTR [rdi+0x90],0x0
   1400086e7:	jne    0x1400086f2
   1400086e9:	or     rax,0xffffffffffffffff
   1400086ed:	jmp    0x140008932
   1400086f2:	mov    rax,QWORD PTR [rdi+0x18]
   1400086f6:	mov    rcx,QWORD PTR [rax]
   1400086f9:	lea    rax,[rdi+0x80]
   140008700:	cmp    rcx,rax
   140008703:	jne    0x140008719
   140008705:	mov    rdx,QWORD PTR [rdi+0x68]
   140008709:	mov    r9,QWORD PTR [rdi+0x70]
   14000870d:	mov    r8,rdx
   140008710:	mov    rcx,rdi
   140008713:	call   QWORD PTR [rip+0x109b7]        # 0x1400190d0
   140008719:	cmp    QWORD PTR [rdi+0x78],0x0
   14000871e:	jne    0x140008740
   140008720:	movsx  ecx,r14b
   140008724:	mov    rdx,QWORD PTR [rdi+0x90]
   14000872b:	call   QWORD PTR [rip+0x10aef]        # 0x140019220
   140008731:	or     rsi,0xffffffffffffffff
   140008735:	cmp    eax,esi
   140008737:	cmovne esi,r14d
   14000873b:	jmp    0x140008930
   140008740:	mov    BYTE PTR [rbp-0x30],r14b
   140008744:	mov    edx,0xf
   140008749:	mov    QWORD PTR [rbp-0x8],rdx
   14000874d:	mov    BYTE PTR [rbp-0x20],0x0
   140008751:	xor    ecx,ecx
   140008753:	mov    QWORD PTR [rbp-0x20],rcx
   140008757:	mov    QWORD PTR [rbp-0x10],0x8
   14000875f:	lea    rax,[rbp-0x20]
   140008763:	cmp    rdx,0x10
   140008767:	cmovae rax,rcx
   14000876b:	mov    BYTE PTR [rax+0x8],cl
   14000876e:	or     rsi,0xffffffffffffffff
   140008772:	xor    r12d,r12d
   140008775:	mov    rdx,QWORD PTR [rbp-0x8]
   140008779:	mov    r8,QWORD PTR [rbp-0x10]
   14000877d:	nop    DWORD PTR [rax]
   140008780:	lea    rax,[rbp-0x20]
   140008784:	cmp    rdx,0x10
   140008788:	cmovae rax,QWORD PTR [rbp-0x20]
   14000878d:	lea    rcx,[rbp-0x20]
   140008791:	cmovae rcx,QWORD PTR [rbp-0x20]
   140008796:	add    rax,r8
   140008799:	lea    rdx,[rbp+0x40]
   14000879d:	mov    QWORD PTR [rsp+0x38],rdx
   1400087a2:	mov    QWORD PTR [rsp+0x30],rax
   1400087a7:	mov    QWORD PTR [rsp+0x28],rcx
   1400087ac:	lea    rax,[rbp+0x48]
   1400087b0:	mov    QWORD PTR [rsp+0x20],rax
   1400087b5:	lea    r9,[rbp-0x2f]
   1400087b9:	lea    r8,[rbp-0x30]
   1400087bd:	lea    rdx,[rdi+0x84]
   1400087c4:	mov    rcx,QWORD PTR [rdi+0x78]
   1400087c8:	call   QWORD PTR [rip+0x108aa]        # 0x140019078
   1400087ce:	test   eax,eax
   1400087d0:	js     0x14000891d
   1400087d6:	cmp    eax,0x1
   1400087d9:	jg     0x140008900
   1400087df:	lea    rax,[rbp-0x20]
   1400087e3:	mov    r9,QWORD PTR [rbp-0x20]
   1400087e7:	mov    rdx,QWORD PTR [rbp-0x8]
   1400087eb:	cmp    rdx,0x10
   1400087ef:	cmovae rax,r9
   1400087f3:	mov    rbx,QWORD PTR [rbp+0x40]
   1400087f7:	sub    rbx,rax
   1400087fa:	je     0x14000882a
   1400087fc:	lea    rcx,[rbp-0x20]
   140008800:	cmp    rdx,0x10
   140008804:	cmovae rcx,r9
   140008808:	mov    r9,QWORD PTR [rdi+0x90]
   14000880f:	mov    r8,rbx
   140008812:	mov    edx,0x1
   140008817:	call   QWORD PTR [rip+0x10a1b]        # 0x140019238
   14000881d:	mov    rdx,QWORD PTR [rbp-0x8]
   140008821:	cmp    rbx,rax
   140008824:	jne    0x140008921
   14000882a:	mov    BYTE PTR [rdi+0x81],0x1
   140008831:	lea    rax,[rbp-0x30]
   140008835:	cmp    QWORD PTR [rbp+0x48],rax
   140008839:	jne    0x1400088fb
   14000883f:	mov    r8,QWORD PTR [rbp-0x10]
   140008843:	test   rbx,rbx
   140008846:	jne    0x140008780
   14000884c:	cmp    r8,0x20
   140008850:	jae    0x140008921
   140008856:	mov    rax,rsi
   140008859:	sub    rax,r8
   14000885c:	cmp    rax,0x8
   140008860:	jbe    0x1400088ed
   140008866:	lea    rbx,[r8+0x8]
   14000886a:	cmp    rbx,0xfffffffffffffffe
   14000886e:	ja     0x1400088df
   140008870:	cmp    rdx,rbx
   140008873:	jae    0x14000888b
   140008875:	mov    rdx,rbx
   140008878:	lea    rcx,[rbp-0x20]
   14000887c:	call   0x140005670
   140008881:	mov    rdx,QWORD PTR [rbp-0x8]
   140008885:	mov    r8,QWORD PTR [rbp-0x10]
   140008889:	jmp    0x1400088a9
   14000888b:	test   rbx,rbx
   14000888e:	jne    0x1400088b2
   140008890:	mov    QWORD PTR [rbp-0x10],r12
   140008894:	lea    rax,[rbp-0x20]
   140008898:	cmp    rdx,0x10
   14000889c:	cmovae rax,QWORD PTR [rbp-0x20]
   1400088a1:	mov    BYTE PTR [rax],r12b
   1400088a4:	jmp    0x140008775
   1400088a9:	test   rbx,rbx
   1400088ac:	je     0x140008780
   1400088b2:	lea    rax,[rbp-0x20]
   1400088b6:	cmp    rdx,0x10
   1400088ba:	cmovae rax,QWORD PTR [rbp-0x20]
   1400088bf:	xor    ecx,ecx
   1400088c1:	mov    QWORD PTR [r8+rax*1],rcx
   1400088c5:	mov    QWORD PTR [rbp-0x10],rbx
   1400088c9:	lea    rax,[rbp-0x20]
   1400088cd:	cmp    QWORD PTR [rbp-0x8],0x10
   1400088d2:	cmovae rax,QWORD PTR [rbp-0x20]
   1400088d7:	mov    BYTE PTR [rbx+rax*1],cl
   1400088da:	jmp    0x140008775
   1400088df:	lea    rcx,[rip+0x123b2]        # 0x14001ac98
   1400088e6:	call   QWORD PTR [rip+0x108f4]        # 0x1400191e0
   1400088ec:	int3   
   1400088ed:	lea    rcx,[rip+0x123a4]        # 0x14001ac98
   1400088f4:	call   QWORD PTR [rip+0x108e6]        # 0x1400191e0
   1400088fa:	int3   
   1400088fb:	mov    esi,r14d
   1400088fe:	jmp    0x140008921
   140008900:	cmp    eax,0x3
   140008903:	jne    0x14000891d
   140008905:	movsx  ecx,BYTE PTR [rbp-0x30]
   140008909:	mov    rdx,QWORD PTR [rdi+0x90]
   140008910:	call   QWORD PTR [rip+0x1090a]        # 0x140019220
   140008916:	cmp    eax,0xffffffff
   140008919:	cmovne esi,r14d
   14000891d:	mov    rdx,QWORD PTR [rbp-0x8]
   140008921:	cmp    rdx,0x10
   140008925:	jb     0x140008930
   140008927:	mov    rcx,QWORD PTR [rbp-0x20]
   14000892b:	call   0x14001716e
   140008930:	mov    eax,esi
   140008932:	lea    r11,[rsp+0x70]
   140008937:	mov    rbx,QWORD PTR [r11+0x30]
   14000893b:	mov    rsi,QWORD PTR [r11+0x38]
   14000893f:	mov    rsp,r11
   140008942:	pop    r15
   140008944:	pop    r14
   140008946:	pop    r12
   140008948:	pop    rdi
   140008949:	pop    rbp
   14000894a:	ret    
   14000894b:	int3   
   14000894c:	int3   
   14000894d:	int3   
   14000894e:	int3   
   14000894f:	int3   
   140008950:	mov    rax,rsp
   140008953:	push   rdi
   140008954:	sub    rsp,0x70
   140008958:	mov    QWORD PTR [rax-0x38],0xfffffffffffffffe
   140008960:	mov    QWORD PTR [rax+0x8],rbx
   140008964:	mov    QWORD PTR [rax+0x10],rsi
   140008968:	mov    r11d,r9d
   14000896b:	mov    rdi,r8
   14000896e:	movzx  esi,dl
   140008971:	mov    rbx,rcx
   140008974:	lea    rax,[rip+0x11aa5]        # 0x14001a420
   14000897b:	mov    QWORD PTR [rsp+0x48],rax
   140008980:	mov    QWORD PTR [rsp+0x50],rcx
   140008985:	mov    rax,QWORD PTR [rsp+0xa8]
   14000898d:	mov    QWORD PTR [rsp+0x58],rax
   140008992:	mov    rax,QWORD PTR [rsp+0xb0]
   14000899a:	mov    QWORD PTR [rsp+0x60],rax
   14000899f:	mov    r10d,DWORD PTR [rsp+0xc8]
   1400089a7:	mov    DWORD PTR [rsp+0x68],r10d
   1400089ac:	xor    r9d,r9d
   1400089af:	nop
   1400089b0:	test   r10d,r10d
   1400089b3:	js     0x1400089ba
   1400089b5:	cmp    r9d,r10d
   1400089b8:	jge    0x1400089d2
   1400089ba:	xor    ecx,ecx
   1400089bc:	cmp    QWORD PTR [rax+0x10],rcx
   1400089c0:	cmovne rcx,rax
   1400089c4:	test   rcx,rcx
   1400089c7:	je     0x1400089d2
   1400089c9:	inc    r9d
   1400089cc:	add    rax,0x30
   1400089d0:	jmp    0x1400089b0
   1400089d2:	mov    DWORD PTR [rbx],r9d
   1400089d5:	mov    eax,DWORD PTR [rsp+0xb8]
   1400089dc:	mov    DWORD PTR [rsp+0x38],eax
   1400089e0:	mov    BYTE PTR [rsp+0x30],0x1
   1400089e5:	movzx  eax,BYTE PTR [rsp+0xc0]
   1400089ed:	mov    BYTE PTR [rsp+0x28],al
   1400089f1:	lea    rax,[rsp+0x48]
   1400089f6:	mov    QWORD PTR [rsp+0x20],rax
   1400089fb:	mov    r9,QWORD PTR [rsp+0xa0]
   140008a03:	mov    r8d,r11d
   140008a06:	mov    rdx,rdi
   140008a09:	movzx  ecx,sil
   140008a0d:	call   0x14000a690
   140008a12:	test   al,al
   140008a14:	sete   al
   140008a17:	mov    BYTE PTR [rbx+0x10],al
   140008a1a:	lea    r11,[rsp+0x70]
   140008a1f:	mov    rbx,QWORD PTR [r11+0x10]
   140008a23:	mov    rsi,QWORD PTR [r11+0x18]
   140008a27:	mov    rsp,r11
   140008a2a:	pop    rdi
   140008a2b:	ret    
   140008a2c:	int3   
   140008a2d:	int3   
   140008a2e:	int3   
   140008a2f:	int3   
   140008a30:	mov    QWORD PTR [rsp+0x8],rbx
   140008a35:	push   rdi
   140008a36:	sub    rsp,0x20
   140008a3a:	mov    rax,QWORD PTR [rcx+0x38]
   140008a3e:	mov    rdi,rcx
   140008a41:	mov    ebx,edx
   140008a43:	mov    rcx,QWORD PTR [rax]
   140008a46:	test   rcx,rcx
   140008a49:	je     0x140008a81
   140008a4b:	mov    rax,QWORD PTR [rdi+0x18]
   140008a4f:	cmp    QWORD PTR [rax],rcx
   140008a52:	jae    0x140008a81
   140008a54:	cmp    edx,0xffffffff
   140008a57:	je     0x140008a61
   140008a59:	movzx  eax,BYTE PTR [rcx-0x1]
   140008a5d:	cmp    eax,edx
   140008a5f:	jne    0x140008a81
   140008a61:	mov    rax,QWORD PTR [rdi+0x50]
   140008a65:	inc    DWORD PTR [rax]
   140008a67:	mov    rax,QWORD PTR [rdi+0x38]
   140008a6b:	dec    QWORD PTR [rax]
   140008a6e:	xor    eax,eax
   140008a70:	cmp    edx,0xffffffff
   140008a73:	cmovne eax,edx
   140008a76:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a7b:	add    rsp,0x20
   140008a7f:	pop    rdi
   140008a80:	ret    
   140008a81:	mov    rdx,QWORD PTR [rdi+0x90]
   140008a88:	test   rdx,rdx
   140008a8b:	je     0x140008ace
   140008a8d:	cmp    ebx,0xffffffff
   140008a90:	je     0x140008ace
   140008a92:	cmp    QWORD PTR [rdi+0x78],0x0
   140008a97:	jne    0x140008aa7
   140008a99:	movzx  ecx,bl
   140008a9c:	call   QWORD PTR [rip+0x107ae]        # 0x140019250
   140008aa2:	cmp    eax,0xffffffff
   140008aa5:	jne    0x140008ac1
   140008aa7:	mov    rax,QWORD PTR [rdi+0x38]
   140008aab:	lea    rcx,[rdi+0x80]
   140008ab2:	cmp    QWORD PTR [rax],rcx
   140008ab5:	je     0x140008ace
   140008ab7:	mov    BYTE PTR [rcx],bl
   140008ab9:	mov    rcx,rdi
   140008abc:	call   0x140005f50
   140008ac1:	mov    eax,ebx
   140008ac3:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ac8:	add    rsp,0x20
   140008acc:	pop    rdi
   140008acd:	ret    
   140008ace:	or     eax,0xffffffff
   140008ad1:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ad6:	add    rsp,0x20
   140008ada:	pop    rdi
   140008adb:	ret    
   140008adc:	int3   
   140008add:	int3   
   140008ade:	int3   
   140008adf:	int3   
   140008ae0:	mov    al,0x1
   140008ae2:	ret    
   140008ae3:	int3   
   140008ae4:	int3   
   140008ae5:	int3   
   140008ae6:	int3   
   140008ae7:	int3   
   140008ae8:	int3   
   140008ae9:	int3   
   140008aea:	int3   
   140008aeb:	int3   
   140008aec:	int3   
   140008aed:	int3   
   140008aee:	int3   
   140008aef:	int3   
   140008af0:	mov    rdx,QWORD PTR [rcx+0x8]
   140008af4:	mov    eax,DWORD PTR [rdx]
   140008af6:	cmp    eax,0x7fffffff
   140008afb:	jne    0x140008b00
   140008afd:	xor    al,al
   140008aff:	ret    
   140008b00:	inc    eax
   140008b02:	mov    DWORD PTR [rdx],eax
   140008b04:	mov    al,0x1
   140008b06:	ret    
   140008b07:	int3   
   140008b08:	int3   
   140008b09:	int3   
   140008b0a:	int3   
   140008b0b:	int3   
   140008b0c:	int3   
   140008b0d:	int3   
   140008b0e:	int3   
   140008b0f:	int3   
   140008b10:	rex push rbx
   140008b12:	sub    rsp,0x20
   140008b16:	mov    rbx,rcx
   140008b19:	mov    ecx,DWORD PTR [rcx+0x20]
   140008b1c:	test   ecx,ecx
   140008b1e:	js     0x140008b2c
   140008b20:	mov    rax,QWORD PTR [rbx+0x8]
   140008b24:	cmp    DWORD PTR [rax],ecx
   140008b26:	jge    0x140008bb4
   140008b2c:	mov    rax,QWORD PTR [rbx+0x8]
   140008b30:	movsxd rcx,DWORD PTR [rax]
   140008b33:	cmp    ecx,0x7fffffff
   140008b39:	jne    0x140008b43
   140008b3b:	xor    al,al
   140008b3d:	add    rsp,0x20
   140008b41:	pop    rbx
   140008b42:	ret    
   140008b43:	lea    rcx,[rcx+rcx*2]
   140008b47:	shl    rcx,0x4
   140008b4b:	add    rcx,QWORD PTR [rbx+0x18]
   140008b4f:	call   0x140004320
   140008b54:	mov    rax,QWORD PTR [rbx+0x8]
   140008b58:	xor    edx,edx
   140008b5a:	movsxd rcx,DWORD PTR [rax]
   140008b5d:	lea    r8,[rcx+rcx*2]
   140008b61:	shl    r8,0x4
   140008b65:	add    r8,QWORD PTR [rbx+0x18]
   140008b69:	mov    rax,QWORD PTR [r8+0x10]
   140008b6d:	movsxd rcx,DWORD PTR [rax]
   140008b70:	mov    eax,edx
   140008b72:	lea    rcx,[rcx+rcx*2]
   140008b76:	shl    rcx,0x4
   140008b7a:	add    rcx,QWORD PTR [rbx+0x10]
   140008b7e:	cmp    QWORD PTR [rcx+0x10],rdx
   140008b82:	cmovne rax,rcx
   140008b86:	test   rax,rax
   140008b89:	je     0x140008ba6
   140008b8b:	cmp    QWORD PTR [r8+0x10],rdx
   140008b8f:	cmovne rdx,r8
   140008b93:	call   0x1400065d0
   140008b98:	mov    rax,QWORD PTR [rbx+0x8]
   140008b9c:	inc    DWORD PTR [rax]
   140008b9e:	mov    al,0x1
   140008ba0:	add    rsp,0x20
   140008ba4:	pop    rbx
   140008ba5:	ret    
   140008ba6:	mov    rdx,r8
   140008ba9:	call   0x140004320
   140008bae:	mov    rax,QWORD PTR [rbx+0x8]
   140008bb2:	inc    DWORD PTR [rax]
   140008bb4:	mov    al,0x1
   140008bb6:	add    rsp,0x20
   140008bba:	pop    rbx
   140008bbb:	ret    
   140008bbc:	int3   
   140008bbd:	int3   
   140008bbe:	int3   
   140008bbf:	int3   
   140008bc0:	mov    rax,rcx
   140008bc3:	ret    
   140008bc4:	int3   
   140008bc5:	int3   
   140008bc6:	int3   
   140008bc7:	int3   
   140008bc8:	int3   
   140008bc9:	int3   
   140008bca:	int3   
   140008bcb:	int3   
   140008bcc:	int3   
   140008bcd:	int3   
   140008bce:	int3   
   140008bcf:	int3   
   140008bd0:	mov    rax,rcx
   140008bd3:	ret    
   140008bd4:	int3   
   140008bd5:	int3   
   140008bd6:	int3   
   140008bd7:	int3   
   140008bd8:	int3   
   140008bd9:	int3   
   140008bda:	int3   
   140008bdb:	int3   
   140008bdc:	int3   
   140008bdd:	int3   
   140008bde:	int3   
   140008bdf:	int3   
   140008be0:	mov    rax,QWORD PTR [rcx+0x8]
   140008be4:	and    rax,0xfffffffffffffffe
   140008be8:	ret    
   140008be9:	int3   
   140008bea:	int3   
   140008beb:	int3   
   140008bec:	int3   
   140008bed:	int3   
   140008bee:	int3   
   140008bef:	int3   
   140008bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140008bf5:	mov    QWORD PTR [rsp+0x10],rsi
   140008bfa:	push   rdi
   140008bfb:	sub    rsp,0x20
   140008bff:	mov    rbx,rcx
   140008c02:	mov    rcx,QWORD PTR [rip+0x105af]        # 0x1400191b8
   140008c09:	mov    rdi,rdx
   140008c0c:	lea    rdx,[rip+0x11dc5]        # 0x14001a9d8
   140008c13:	mov    rsi,r8
   140008c16:	call   0x1400014f0
   140008c1b:	mov    rdx,rbx
   140008c1e:	mov    rcx,rax
   140008c21:	call   0x140001320
   140008c26:	mov    rdx,QWORD PTR [rdi+0x18]
   140008c2a:	mov    rcx,rax
   140008c2d:	call   0x1400014f0
   140008c32:	mov    rdx,rsi
   140008c35:	mov    rcx,rax
   140008c38:	call   0x140001320
   140008c3d:	lea    rdx,[rip+0xffffffffffff9f0c]        # 0x140002b50
   140008c44:	mov    rcx,rax
   140008c47:	mov    rbx,QWORD PTR [rsp+0x30]
   140008c4c:	mov    rsi,QWORD PTR [rsp+0x38]
   140008c51:	add    rsp,0x20
   140008c55:	pop    rdi
   140008c56:	rex.W jmp QWORD PTR [rip+0x104c3]        # 0x140019120
   140008c5d:	int3   
   140008c5e:	int3   
   140008c5f:	int3   
   140008c60:	mov    QWORD PTR [rsp+0x8],rbx
   140008c65:	push   rbp
   140008c66:	push   rsi
   140008c67:	push   rdi
   140008c68:	push   r12
   140008c6a:	push   r13
   140008c6c:	push   r14
   140008c6e:	push   r15
   140008c70:	lea    rbp,[rsp-0x160]
   140008c78:	sub    rsp,0x260
   140008c7f:	mov    r11d,r8d
   140008c82:	mov    r10,rdx
   140008c85:	mov    rbx,rcx
   140008c88:	mov    r8d,0x2710
   140008c8e:	cmp    r11d,0x1
   140008c92:	jge    0x140008c9c
   140008c94:	mov    r11d,0x50
   140008c9a:	jmp    0x140008ca3
   140008c9c:	cmp    r11d,r8d
   140008c9f:	cmovg  r11d,r8d
   140008ca3:	mov    eax,0x51eb851f
   140008ca8:	mov    ecx,r11d
   140008cab:	mov    r15d,0x1
   140008cb1:	mov    DWORD PTR [rbp+0x1b8],r11d
   140008cb8:	mov    QWORD PTR [rsp+0x20],r10
   140008cbd:	mov    DWORD PTR [rsp+0x40],0xffffffff
   140008cc5:	imul   ecx,r9d
   140008cc9:	add    ecx,0x32
   140008ccc:	mov    BYTE PTR [rsp+0x58],r15b
   140008cd1:	imul   ecx
   140008cd3:	mov    r14d,edx
   140008cd6:	mov    eax,0x51eb851f
   140008cdb:	sar    r14d,0x5
   140008cdf:	mov    ecx,r14d
   140008ce2:	shr    ecx,0x1f
   140008ce5:	add    r14d,ecx
   140008ce8:	mov    ecx,r11d
   140008ceb:	mov    DWORD PTR [rbp+0x1b0],r14d
   140008cf2:	imul   ecx,DWORD PTR [rbp+0x1c0]
   140008cf9:	add    ecx,0x32
   140008cfc:	imul   ecx
   140008cfe:	mov    r9d,edx
   140008d01:	sar    r9d,0x5
   140008d05:	mov    eax,r9d
   140008d08:	shr    eax,0x1f
   140008d0b:	add    r9d,eax
   140008d0e:	cmove  r9d,r15d
   140008d12:	xor    eax,eax
   140008d14:	mov    edx,eax
   140008d16:	mov    DWORD PTR [rsp+0x44],eax
   140008d1a:	mov    QWORD PTR [rsp+0x4c],rax
   140008d1f:	mov    DWORD PTR [rsp+0x54],eax
   140008d23:	mov    DWORD PTR [rbp+0x1a8],r9d
   140008d2a:	nop    WORD PTR [rax+rax*1+0x0]
   140008d30:	test   rdx,rdx
   140008d33:	je     0x140008d57
   140008d35:	cmp    QWORD PTR [r10+0x20],0x0
   140008d3a:	je     0x140008d60
   140008d3c:	nop    DWORD PTR [rax+0x0]
   140008d40:	cmp    QWORD PTR [r10+0x8],0x0
   140008d45:	je     0x140008d57
   140008d47:	add    r10,0x28
   140008d4b:	mov    QWORD PTR [rsp+0x20],r10
   140008d50:	cmp    QWORD PTR [r10+0x20],0x0
   140008d55:	jne    0x140008d40
   140008d57:	cmp    QWORD PTR [r10+0x20],0x0
   140008d5c:	jne    0x140008d77
   140008d5e:	xchg   ax,ax
   140008d60:	cmp    QWORD PTR [r10+0x8],0x0
   140008d65:	je     0x140008d77
   140008d67:	add    r10,0x28
   140008d6b:	mov    QWORD PTR [rsp+0x20],r10
   140008d70:	cmp    QWORD PTR [r10+0x20],0x0
   140008d75:	je     0x140008d60
   140008d77:	cmp    QWORD PTR [r10+0x20],0x0
   140008d7c:	mov    QWORD PTR [rsp+0x28],r10
   140008d81:	mov    QWORD PTR [rsp+0x38],rax
   140008d86:	je     0x1400092b2
   140008d8c:	mov    esi,r8d
   140008d8f:	xor    r14d,r14d
   140008d92:	mov    rcx,QWORD PTR [r10+0x20]
   140008d96:	mov    edi,r14d
   140008d99:	mov    QWORD PTR [rsp+0x60],r14
   140008d9e:	mov    QWORD PTR [rsp+0x68],r14
   140008da3:	mov    QWORD PTR [rsp+0x70],r14
   140008da8:	mov    QWORD PTR [rsp+0x78],r14
   140008dad:	mov    QWORD PTR [rsp+0x30],rcx
   140008db2:	mov    QWORD PTR [rsp+0x28],r10
   140008db7:	mov    rax,r14
   140008dba:	nop    WORD PTR [rax+rax*1+0x0]
   140008dc0:	test   rax,rax
   140008dc3:	jne    0x140008e2e
   140008dc5:	movdqa xmm0,XMMWORD PTR [rip+0x11f33]        # 0x14001ad00
   140008dcd:	test   rcx,rcx
   140008dd0:	mov    QWORD PTR [rsp+0x38],rcx
   140008dd5:	setne  al
   140008dd8:	mov    QWORD PTR [rsp+0x50],r14
   140008ddd:	mov    BYTE PTR [rsp+0x58],0x1
   140008de2:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140008de8:	test   al,al
   140008dea:	jne    0x140008ee2
   140008df0:	mov    edx,r14d
   140008df3:	mov    esi,r14d
   140008df6:	test   edi,edi
   140008df8:	jle    0x140008e14
   140008dfa:	lea    rcx,[rsp+0x60]
   140008dff:	mov    r8d,edi
   140008e02:	mov    eax,DWORD PTR [rcx]
   140008e04:	lea    rcx,[rcx+0x4]
   140008e08:	add    edx,eax
   140008e0a:	cmp    esi,eax
   140008e0c:	cmovl  esi,eax
   140008e0f:	dec    r8
   140008e12:	jne    0x140008e02
   140008e14:	mov    r11d,DWORD PTR [rbp+0x1b8]
   140008e1b:	cmp    edx,r11d
   140008e1e:	jle    0x140008f04
   140008e24:	mov    r10,QWORD PTR [rsp+0x20]
   140008e29:	jmp    0x140008d92
   140008e2e:	movzx  ecx,BYTE PTR [rax]
   140008e31:	test   cl,cl
   140008e33:	je     0x140008e45
   140008e35:	cmp    cl,0xa
   140008e38:	je     0x140008e7c
   140008e3a:	movzx  ecx,BYTE PTR [rax+0x1]
   140008e3e:	inc    rax
   140008e41:	test   cl,cl
   140008e43:	jne    0x140008e35
   140008e45:	cmp    QWORD PTR [r10+0x48],r14
   140008e49:	je     0x140008df0
   140008e4b:	mov    rax,QWORD PTR [r10+0x48]
   140008e4f:	add    r10,0x28
   140008e53:	mov    QWORD PTR [rsp+0x28],r10
   140008e58:	movdqa xmm0,XMMWORD PTR [rip+0x11ea0]        # 0x14001ad00
   140008e60:	mov    QWORD PTR [rsp+0x30],rax
   140008e65:	mov    QWORD PTR [rsp+0x38],rax
   140008e6a:	mov    QWORD PTR [rsp+0x50],r14
   140008e6f:	mov    BYTE PTR [rsp+0x58],0x1
   140008e74:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   140008e7a:	jmp    0x140008ee2
   140008e7c:	cmp    BYTE PTR [rax],r14b
   140008e7f:	je     0x140008e45
   140008e81:	inc    rax
   140008e84:	jmp    0x140008e58
   140008e86:	data16 nop WORD PTR [rax+rax*1+0x0]
   140008e90:	movsxd r8,DWORD PTR [rsp+0x40]
   140008e95:	cmp    r8d,0x8
   140008e99:	jge    0x140008ee2
   140008e9b:	mov    r9d,DWORD PTR [rsp+0x48]
   140008ea0:	cmp    edi,r8d
   140008ea3:	cmovl  edi,r8d
   140008ea7:	cmp    r9d,esi
   140008eaa:	jge    0x140008ee2
   140008eac:	test   r8d,r8d
   140008eaf:	jg     0x140008ece
   140008eb1:	cmp    DWORD PTR [rsp+0x54],r14d
   140008eb6:	jg     0x140008ece
   140008eb8:	movsxd rcx,DWORD PTR [rsp+0x44]
   140008ebd:	mov    rax,QWORD PTR [rsp+0x38]
   140008ec2:	movzx  edx,BYTE PTR [rcx+rax*1]
   140008ec6:	sub    dl,0x9
   140008ec9:	test   dl,0xfd
   140008ecc:	jne    0x140008ee2
   140008ece:	lea    rcx,[rsp+0x60]
   140008ed3:	cmp    DWORD PTR [rcx+r8*4],r9d
   140008ed7:	lea    rcx,[rcx+r8*4]
   140008edb:	cmovge r9d,DWORD PTR [rcx]
   140008edf:	mov    DWORD PTR [rcx],r9d
   140008ee2:	lea    rcx,[rsp+0x20]
   140008ee7:	call   0x1400082a0
   140008eec:	test   al,al
   140008eee:	jne    0x140008e90
   140008ef0:	mov    rax,QWORD PTR [rsp+0x38]
   140008ef5:	mov    rcx,QWORD PTR [rsp+0x30]
   140008efa:	mov    r10,QWORD PTR [rsp+0x28]
   140008eff:	jmp    0x140008dc0
   140008f04:	mov    rcx,QWORD PTR [rsp+0x60]
   140008f09:	mov    edx,DWORD PTR [rsp+0x64]
   140008f0d:	movsxd rax,edi
   140008f10:	add    edx,ecx
   140008f12:	mov    DWORD PTR [rbp-0x7c],ecx
   140008f15:	mov    ecx,DWORD PTR [rsp+0x68]
   140008f19:	add    ecx,edx
   140008f1b:	mov    DWORD PTR [rbp-0x78],edx
   140008f1e:	mov    edx,DWORD PTR [rsp+0x6c]
   140008f22:	add    edx,ecx
   140008f24:	mov    DWORD PTR [rbp-0x74],ecx
   140008f27:	mov    ecx,DWORD PTR [rsp+0x70]
   140008f2b:	add    ecx,edx
   140008f2d:	mov    DWORD PTR [rbp-0x70],edx
   140008f30:	mov    edx,DWORD PTR [rsp+0x74]
   140008f34:	add    edx,ecx
   140008f36:	mov    DWORD PTR [rbp-0x6c],ecx
   140008f39:	mov    ecx,DWORD PTR [rsp+0x78]
   140008f3d:	add    ecx,edx
   140008f3f:	mov    DWORD PTR [rbp-0x68],edx
   140008f42:	mov    DWORD PTR [rbp-0x80],r14d
   140008f46:	mov    DWORD PTR [rbp-0x64],ecx
   140008f49:	lea    rcx,[rax*4+0x0]
   140008f51:	mov    eax,r11d
   140008f54:	sub    eax,DWORD PTR [rbp+rcx*1-0x80]
   140008f58:	xor    dl,dl
   140008f5a:	cmp    eax,DWORD PTR [rbp+0x1b0]
   140008f60:	jge    0x140008f70
   140008f62:	cmp    eax,DWORD PTR [rsp+rcx*1+0x60]
   140008f66:	jge    0x140008f70
   140008f68:	mov    eax,DWORD PTR [rbp+0x1a8]
   140008f6e:	mov    dl,0x1
   140008f70:	test   edi,edi
   140008f72:	mov    r9d,0x2
   140008f78:	movzx  r13d,dl
   140008f7c:	mov    rdx,QWORD PTR [rsp+0x20]
   140008f81:	cmove  r13d,r14d
   140008f85:	mov    r12d,r11d
   140008f88:	mov    rcx,QWORD PTR [rdx+0x20]
   140008f8c:	sub    r12d,eax
   140008f8f:	mov    eax,r11d
   140008f92:	sub    eax,r12d
   140008f95:	mov    DWORD PTR [rbp+0x68],r14d
   140008f99:	mov    DWORD PTR [rbp+0x6c],0xf
   140008fa0:	cmp    eax,0x2
   140008fa3:	mov    DWORD PTR [rbp+0x60],r12d
   140008fa7:	mov    DWORD PTR [rbp+0x140],r14d
   140008fae:	cmovl  eax,r9d
   140008fb2:	cmp    r11d,r9d
   140008fb5:	mov    DWORD PTR [rbp+0x148],r14d
   140008fbc:	mov    DWORD PTR [rbp+0x64],eax
   140008fbf:	mov    eax,r11d
   140008fc2:	mov    DWORD PTR [rbp+0x14c],0xf
   140008fcc:	cmovl  eax,r9d
   140008fd0:	mov    QWORD PTR [rsp+0x28],rdx
   140008fd5:	mov    QWORD PTR [rsp+0x30],rcx
   140008fda:	mov    DWORD PTR [rbp+0x144],eax
   140008fe0:	mov    rax,r14
   140008fe3:	test   rax,rax
   140008fe6:	jne    0x140009021
   140008fe8:	movdqa xmm0,XMMWORD PTR [rip+0x11d10]        # 0x14001ad00
   140008ff0:	test   rcx,rcx
   140008ff3:	mov    QWORD PTR [rsp+0x50],rax
   140008ff8:	setne  al
   140008ffb:	mov    QWORD PTR [rsp+0x38],rcx
   140009000:	mov    BYTE PTR [rsp+0x58],0x1
   140009005:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000900b:	test   al,al
   14000900d:	jne    0x14000907e
   14000900f:	mov    r10,QWORD PTR [rsp+0x20]
   140009014:	xor    eax,eax
   140009016:	mov    r8d,0x2710
   14000901c:	jmp    0x140008d30
   140009021:	movzx  ecx,BYTE PTR [rax]
   140009024:	test   cl,cl
   140009026:	je     0x140009044
   140009028:	nop    DWORD PTR [rax+rax*1+0x0]
   140009030:	cmp    cl,0xa
   140009033:	je     0x140009158
   140009039:	movzx  ecx,BYTE PTR [rax+0x1]
   14000903d:	inc    rax
   140009040:	test   cl,cl
   140009042:	jne    0x140009030
   140009044:	cmp    QWORD PTR [rdx+0x48],0x0
   140009049:	je     0x14000900f
   14000904b:	mov    rax,QWORD PTR [rdx+0x48]
   14000904f:	add    rdx,0x28
   140009053:	mov    QWORD PTR [rsp+0x28],rdx
   140009058:	movdqa xmm0,XMMWORD PTR [rip+0x11ca0]        # 0x14001ad00
   140009060:	mov    QWORD PTR [rsp+0x30],rax
   140009065:	mov    QWORD PTR [rsp+0x38],rax
   14000906a:	mov    QWORD PTR [rsp+0x50],0x0
   140009073:	mov    BYTE PTR [rsp+0x58],0x1
   140009078:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   14000907e:	lea    rcx,[rsp+0x20]
   140009083:	or     esi,0xffffffff
   140009086:	call   0x1400082a0
   14000908b:	test   al,al
   14000908d:	je     0x1400091a6
   140009093:	nop    DWORD PTR [rax+0x0]
   140009097:	nop    WORD PTR [rax+rax*1+0x0]
   1400090a0:	movsxd r14,DWORD PTR [rsp+0x40]
   1400090a5:	cmp    r14d,edi
   1400090a8:	jg     0x140009191
   1400090ae:	test   r14d,r14d
   1400090b1:	jne    0x1400090cc
   1400090b3:	test   esi,esi
   1400090b5:	js     0x1400090ca
   1400090b7:	mov    rax,QWORD PTR [rbx]
   1400090ba:	lea    rdx,[rip+0x1138f]        # 0x14001a450
   1400090c1:	mov    r8d,r15d
   1400090c4:	mov    rcx,rbx
   1400090c7:	call   QWORD PTR [rax+0x8]
   1400090ca:	xor    esi,esi
   1400090cc:	mov    r15d,DWORD PTR [rbp+r14*4-0x80]
   1400090d1:	mov    eax,r15d
   1400090d4:	sub    eax,esi
   1400090d6:	jns    0x1400090f1
   1400090d8:	mov    rax,QWORD PTR [rbx]
   1400090db:	lea    rdx,[rip+0x1136e]        # 0x14001a450
   1400090e2:	mov    r8d,0x1
   1400090e8:	mov    rcx,rbx
   1400090eb:	call   QWORD PTR [rax+0x8]
   1400090ee:	mov    eax,r15d
   1400090f1:	test   eax,eax
   1400090f3:	jle    0x14000911e
   1400090f5:	mov    BYTE PTR [rbp+0x1c0],0x20
   1400090fc:	mov    esi,eax
   1400090fe:	xchg   ax,ax
   140009100:	mov    rax,QWORD PTR [rbx]
   140009103:	lea    rdx,[rbp+0x1c0]
   14000910a:	mov    r8d,0x1
   140009110:	mov    rcx,rbx
   140009113:	call   QWORD PTR [rax+0x8]
   140009116:	dec    rsi
   140009119:	jne    0x140009100
   14000911b:	mov    esi,r15d
   14000911e:	movsxd r9,DWORD PTR [rsp+0x44]
   140009123:	mov    rdx,QWORD PTR [rsp+0x38]
   140009128:	cmp    r14d,edi
   14000912b:	jge    0x140009169
   14000912d:	test   r14d,r14d
   140009130:	jg     0x140009146
   140009132:	cmp    DWORD PTR [rsp+0x54],0x0
   140009137:	jg     0x140009146
   140009139:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14000913e:	sub    cl,0x9
   140009141:	test   cl,0xfd
   140009144:	jne    0x140009169
   140009146:	mov    rax,QWORD PTR [rbx]
   140009149:	mov    r8d,r9d
   14000914c:	mov    rcx,rbx
   14000914f:	call   QWORD PTR [rax+0x8]
   140009152:	add    esi,DWORD PTR [rsp+0x48]
   140009156:	jmp    0x14000918b
   140009158:	cmp    BYTE PTR [rax],0x0
   14000915b:	je     0x140009044
   140009161:	inc    rax
   140009164:	jmp    0x140009058
   140009169:	test   r13b,r13b
   14000916c:	jne    0x14000918b
   14000916e:	lea    rax,[rbp-0x60]
   140009172:	test   r14d,r14d
   140009175:	mov    r8,rdx
   140009178:	lea    rcx,[rbp+0x80]
   14000917f:	mov    rdx,rbx
   140009182:	cmovne rcx,rax
   140009186:	call   0x1400092d0
   14000918b:	mov    r15d,0x1
   140009191:	lea    rcx,[rsp+0x20]
   140009196:	call   0x1400082a0
   14000919b:	test   al,al
   14000919d:	jne    0x1400090a0
   1400091a3:	xor    r14d,r14d
   1400091a6:	test   r13b,r13b
   1400091a9:	je     0x140009270
   1400091af:	mov    rax,QWORD PTR [rsp+0x30]
   1400091b4:	movdqa xmm0,XMMWORD PTR [rip+0x11b44]        # 0x14001ad00
   1400091bc:	lea    rcx,[rsp+0x20]
   1400091c1:	mov    QWORD PTR [rsp+0x50],0x0
   1400091ca:	mov    BYTE PTR [rsp+0x58],0x1
   1400091cf:	mov    QWORD PTR [rsp+0x38],rax
   1400091d4:	movdqa XMMWORD PTR [rsp+0x40],xmm0
   1400091da:	call   0x1400082a0
   1400091df:	test   al,al
   1400091e1:	je     0x140009270
   1400091e7:	cmp    DWORD PTR [rsp+0x40],edi
   1400091eb:	jne    0x14000925e
   1400091ed:	mov    rax,QWORD PTR [rbx]
   1400091f0:	lea    rdx,[rip+0x11259]        # 0x14001a450
   1400091f7:	mov    r8d,r15d
   1400091fa:	mov    rcx,rbx
   1400091fd:	call   QWORD PTR [rax+0x8]
   140009200:	test   r12d,r12d
   140009203:	jns    0x14000921b
   140009205:	mov    rax,QWORD PTR [rbx]
   140009208:	lea    rdx,[rip+0x11241]        # 0x14001a450
   14000920f:	mov    r8d,r15d
   140009212:	mov    rcx,rbx
   140009215:	call   QWORD PTR [rax+0x8]
   140009218:	test   r12d,r12d
   14000921b:	jle    0x140009248
   14000921d:	mov    BYTE PTR [rbp+0x1c0],0x20
   140009224:	test   r12d,r12d
   140009227:	jle    0x140009248
   140009229:	mov    esi,r12d
   14000922c:	nop    DWORD PTR [rax+0x0]
   140009230:	mov    rax,QWORD PTR [rbx]
   140009233:	lea    rdx,[rbp+0x1c0]
   14000923a:	mov    r8d,r15d
   14000923d:	mov    rcx,rbx
   140009240:	call   QWORD PTR [rax+0x8]
   140009243:	dec    rsi
   140009246:	jne    0x140009230
   140009248:	mov    r9d,DWORD PTR [rsp+0x44]
   14000924d:	mov    r8,QWORD PTR [rsp+0x38]
   140009252:	lea    rcx,[rbp-0x60]
   140009256:	mov    rdx,rbx
   140009259:	call   0x1400092d0
   14000925e:	lea    rcx,[rsp+0x20]
   140009263:	call   0x1400082a0
   140009268:	test   al,al
   14000926a:	jne    0x1400091e7
   140009270:	mov    rax,QWORD PTR [rbx]
   140009273:	lea    rdx,[rip+0x111d6]        # 0x14001a450
   14000927a:	mov    r8d,r15d
   14000927d:	mov    rcx,rbx
   140009280:	call   QWORD PTR [rax+0x8]
   140009283:	lea    rcx,[rbp-0x60]
   140009287:	mov    rdx,rbx
   14000928a:	call   0x140007760
   14000928f:	lea    rcx,[rbp+0x80]
   140009296:	mov    rdx,rbx
   140009299:	call   0x140007760
   14000929e:	mov    rax,QWORD PTR [rsp+0x38]
   1400092a3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400092a8:	mov    rdx,QWORD PTR [rsp+0x28]
   1400092ad:	jmp    0x140008fe3
   1400092b2:	mov    rbx,QWORD PTR [rsp+0x2a0]
   1400092ba:	add    rsp,0x260
   1400092c1:	pop    r15
   1400092c3:	pop    r14
   1400092c5:	pop    r13
   1400092c7:	pop    r12
   1400092c9:	pop    rdi
   1400092ca:	pop    rsi
   1400092cb:	pop    rbp
   1400092cc:	ret    
   1400092cd:	int3   
   1400092ce:	int3   
   1400092cf:	int3   
   1400092d0:	mov    rax,rsp
   1400092d3:	mov    QWORD PTR [rax+0x18],r8
   1400092d7:	mov    QWORD PTR [rax+0x10],rdx
   1400092db:	push   rbp
   1400092dc:	push   rsi
   1400092dd:	sub    rsp,0x48
   1400092e1:	mov    QWORD PTR [rax-0x20],r12
   1400092e5:	mov    rbp,rdx
   1400092e8:	mov    rsi,rcx
   1400092eb:	mov    r12d,r9d
   1400092ee:	mov    BYTE PTR [rcx+0xd0],0x0
   1400092f5:	test   r9d,r9d
   1400092f8:	jle    0x140009579
   1400092fe:	mov    QWORD PTR [rax+0x8],rbx
   140009302:	mov    QWORD PTR [rax-0x18],rdi
   140009306:	mov    QWORD PTR [rax-0x28],r13
   14000930a:	mov    QWORD PTR [rax-0x30],r14
   14000930e:	mov    QWORD PTR [rax-0x38],r15
   140009312:	nop    DWORD PTR [rax+0x0]
   140009316:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009320:	mov    eax,DWORD PTR [rsi+0xc4]
   140009326:	cmp    r12d,eax
   140009329:	jle    0x14000951a
   14000932f:	xor    r14d,r14d
   140009332:	xor    r13d,r13d
   140009335:	xor    edi,edi
   140009337:	test   r12d,r12d
   14000933a:	jle    0x14000940f
   140009340:	lea    r15d,[r14+0x2]
   140009344:	cmp    r14d,eax
   140009347:	jge    0x140009405
   14000934d:	movzx  eax,BYTE PTR [rdi+r8*1]
   140009352:	lea    r9,[rdi+r8*1]
   140009356:	mov    ebp,0x1
   14000935b:	mov    ebx,ebp
   14000935d:	cmp    eax,0xc1
   140009362:	jbe    0x1400093e7
   140009368:	mov    ecx,eax
   14000936a:	lea    r8d,[r13+0x1]
   14000936e:	xor    ecx,0xff
   140009374:	bsr    edx,ecx
   140009377:	mov    ecx,0x20
   14000937c:	sub    ecx,edx
   14000937e:	or     edx,0xffffffff
   140009381:	shr    edx,cl
   140009383:	and    eax,edx
   140009385:	cmp    r8d,r12d
   140009388:	jge    0x1400093b8
   14000938a:	nop    WORD PTR [rax+rax*1+0x0]
   140009390:	movzx  edx,BYTE PTR [r9+rbx*1]
   140009395:	movzx  ecx,dl
   140009398:	xor    cl,0x80
   14000939b:	cmp    cl,0x3f
   14000939e:	ja     0x1400093b8
   1400093a0:	xor    eax,0x2
   1400093a3:	movzx  ecx,dl
   1400093a6:	inc    r8d
   1400093a9:	shl    eax,0x6
   1400093ac:	inc    ebp
   1400093ae:	inc    rbx
   1400093b1:	xor    eax,ecx
   1400093b3:	cmp    r8d,r12d
   1400093b6:	jl     0x140009390
   1400093b8:	cmp    eax,0x1100
   1400093bd:	jb     0x1400093e2
   1400093bf:	mov    ecx,eax
   1400093c1:	call   0x140007f70
   1400093c6:	test   al,al
   1400093c8:	mov    eax,DWORD PTR [rsi+0xc4]
   1400093ce:	je     0x1400093db
   1400093d0:	cmp    r15d,eax
   1400093d3:	jg     0x140009405
   1400093d5:	inc    r14d
   1400093d8:	inc    r15d
   1400093db:	mov    r8,QWORD PTR [rsp+0x70]
   1400093e0:	jmp    0x1400093ed
   1400093e2:	mov    r8,QWORD PTR [rsp+0x70]
   1400093e7:	mov    eax,DWORD PTR [rsi+0xc4]
   1400093ed:	add    rdi,rbx
   1400093f0:	movsxd r9,r12d
   1400093f3:	inc    r14d
   1400093f6:	inc    r15d
   1400093f9:	add    r13d,ebp
   1400093fc:	cmp    rdi,r9
   1400093ff:	jl     0x140009344
   140009405:	mov    r8,QWORD PTR [rsp+0x70]
   14000940a:	mov    rbp,QWORD PTR [rsp+0x68]
   14000940f:	cmp    r13d,r12d
   140009412:	je     0x1400094e3
   140009418:	mov    ebx,r13d
   14000941b:	test   rdi,rdi
   14000941e:	js     0x14000942e
   140009420:	cmp    BYTE PTR [rdi+r8*1],0x20
   140009425:	je     0x14000942e
   140009427:	dec    ebx
   140009429:	dec    rdi
   14000942c:	jns    0x140009420
   14000942e:	mov    eax,DWORD PTR [rsi+0xc8]
   140009434:	test   ebx,ebx
   140009436:	js     0x14000948a
   140009438:	cmp    DWORD PTR [rsi+0xcc],eax
   14000943e:	jne    0x140009450
   140009440:	mov    rdx,rbp
   140009443:	mov    rcx,rsi
   140009446:	call   0x14000ac60
   14000944b:	mov    r8,QWORD PTR [rsp+0x70]
   140009450:	movsxd rax,DWORD PTR [rsi+0xc8]
   140009457:	mov    DWORD PTR [rsi+rax*4],ebx
   14000945a:	movsxd rax,DWORD PTR [rsi+0xc8]
   140009461:	mov    QWORD PTR [rsi+rax*8+0x40],r8
   140009466:	mov    eax,DWORD PTR [rsi+0xc8]
   14000946c:	inc    eax
   14000946e:	and    eax,0xf
   140009471:	mov    DWORD PTR [rsi+0xc8],eax
   140009477:	lea    eax,[rbx+0x1]
   14000947a:	movsxd rcx,eax
   14000947d:	or     eax,0xffffffff
   140009480:	sub    eax,ebx
   140009482:	add    r8,rcx
   140009485:	add    r12d,eax
   140009488:	jmp    0x1400094d3
   14000948a:	cmp    DWORD PTR [rsi+0xcc],eax
   140009490:	jne    0x1400094a2
   140009492:	mov    rdx,rbp
   140009495:	mov    rcx,rsi
   140009498:	call   0x14000ac60
   14000949d:	mov    r8,QWORD PTR [rsp+0x70]
   1400094a2:	movsxd rax,DWORD PTR [rsi+0xc8]
   1400094a9:	mov    DWORD PTR [rsi+rax*4],r13d
   1400094ad:	movsxd rax,DWORD PTR [rsi+0xc8]
   1400094b4:	mov    QWORD PTR [rsi+rax*8+0x40],r8
   1400094b9:	mov    eax,DWORD PTR [rsi+0xc8]
   1400094bf:	inc    eax
   1400094c1:	and    eax,0xf
   1400094c4:	mov    DWORD PTR [rsi+0xc8],eax
   1400094ca:	movsxd rax,r13d
   1400094cd:	add    r8,rax
   1400094d0:	sub    r12d,r13d
   1400094d3:	mov    QWORD PTR [rsp+0x70],r8
   1400094d8:	test   r12d,r12d
   1400094db:	jg     0x140009320
   1400094e1:	jmp    0x140009560
   1400094e3:	mov    eax,DWORD PTR [rsi+0xc8]
   1400094e9:	cmp    DWORD PTR [rsi+0xcc],eax
   1400094ef:	jne    0x1400094fc
   1400094f1:	mov    rdx,rbp
   1400094f4:	mov    rcx,rsi
   1400094f7:	call   0x14000ac60
   1400094fc:	movsxd rax,DWORD PTR [rsi+0xc8]
   140009503:	mov    rcx,QWORD PTR [rsp+0x70]
   140009508:	mov    DWORD PTR [rsi+rax*4],r12d
   14000950c:	movsxd rax,DWORD PTR [rsi+0xc8]
   140009513:	mov    QWORD PTR [rsi+rax*8+0x40],rcx
   140009518:	jmp    0x14000954f
   14000951a:	mov    eax,DWORD PTR [rsi+0xc8]
   140009520:	cmp    DWORD PTR [rsi+0xcc],eax
   140009526:	jne    0x140009538
   140009528:	mov    rdx,rbp
   14000952b:	mov    rcx,rsi
   14000952e:	call   0x14000ac60
   140009533:	mov    r8,QWORD PTR [rsp+0x70]
   140009538:	movsxd rax,DWORD PTR [rsi+0xc8]
   14000953f:	mov    DWORD PTR [rsi+rax*4],r12d
   140009543:	movsxd rax,DWORD PTR [rsi+0xc8]
   14000954a:	mov    QWORD PTR [rsi+rax*8+0x40],r8
   14000954f:	mov    eax,DWORD PTR [rsi+0xc8]
   140009555:	inc    eax
   140009557:	and    eax,0xf
   14000955a:	mov    DWORD PTR [rsi+0xc8],eax
   140009560:	mov    r14,QWORD PTR [rsp+0x28]
   140009565:	mov    r13,QWORD PTR [rsp+0x30]
   14000956a:	mov    rdi,QWORD PTR [rsp+0x40]
   14000956f:	mov    rbx,QWORD PTR [rsp+0x60]
   140009574:	mov    r15,QWORD PTR [rsp+0x20]
   140009579:	cmp    BYTE PTR [rsi+0xd0],0x0
   140009580:	mov    r12,QWORD PTR [rsp+0x38]
   140009585:	jne    0x140009592
   140009587:	mov    rdx,rbp
   14000958a:	mov    rcx,rsi
   14000958d:	call   0x14000ac60
   140009592:	add    rsp,0x48
   140009596:	pop    rsi
   140009597:	pop    rbp
   140009598:	ret    
   140009599:	int3   
   14000959a:	int3   
   14000959b:	int3   
   14000959c:	int3   
   14000959d:	int3   
   14000959e:	int3   
   14000959f:	int3   
   1400095a0:	lea    rax,[rcx+0x10]
   1400095a4:	ret    
   1400095a5:	int3   
   1400095a6:	int3   
   1400095a7:	int3   
   1400095a8:	int3   
   1400095a9:	int3   
   1400095aa:	int3   
   1400095ab:	int3   
   1400095ac:	int3   
   1400095ad:	int3   
   1400095ae:	int3   
   1400095af:	int3   
   1400095b0:	rex push rbx
   1400095b2:	sub    rsp,0x30
   1400095b6:	mov    rax,QWORD PTR [rsp+0x60]
   1400095bb:	mov    rbx,rcx
   1400095be:	cmp    r9,rax
   1400095c1:	jne    0x140009600
   1400095c3:	cmp    QWORD PTR [rcx+0x18],0x10
   1400095c8:	jb     0x1400095cf
   1400095ca:	mov    rax,QWORD PTR [rcx]
   1400095cd:	jmp    0x1400095d2
   1400095cf:	mov    rax,rcx
   1400095d2:	xor    ecx,ecx
   1400095d4:	test   r8,r8
   1400095d7:	jne    0x1400095de
   1400095d9:	mov    r8d,ecx
   1400095dc:	jmp    0x1400095e1
   1400095de:	sub    r8,rdx
   1400095e1:	test   rdx,rdx
   1400095e4:	je     0x1400095ec
   1400095e6:	mov    rcx,rdx
   1400095e9:	sub    rcx,rax
   1400095ec:	mov    rdx,rcx
   1400095ef:	mov    rcx,rbx
   1400095f2:	call   0x1400073f0
   1400095f7:	mov    rax,rbx
   1400095fa:	add    rsp,0x30
   1400095fe:	pop    rbx
   1400095ff:	ret    
   140009600:	cmp    QWORD PTR [rcx+0x18],0x10
   140009605:	jb     0x14000960c
   140009607:	mov    r10,QWORD PTR [rcx]
   14000960a:	jmp    0x14000960f
   14000960c:	mov    r10,rcx
   14000960f:	xor    ecx,ecx
   140009611:	test   r8,r8
   140009614:	jne    0x14000961b
   140009616:	mov    r8d,ecx
   140009619:	jmp    0x14000961e
   14000961b:	sub    r8,rdx
   14000961e:	test   rdx,rdx
   140009621:	je     0x140009629
   140009623:	mov    rcx,rdx
   140009626:	sub    rcx,r10
   140009629:	sub    rax,r9
   14000962c:	mov    rdx,rcx
   14000962f:	mov    rcx,rbx
   140009632:	mov    QWORD PTR [rsp+0x20],rax
   140009637:	call   0x1400099d0
   14000963c:	mov    rax,rbx
   14000963f:	add    rsp,0x30
   140009643:	pop    rbx
   140009644:	ret    
   140009645:	int3   
   140009646:	int3   
   140009647:	int3   
   140009648:	int3   
   140009649:	int3   
   14000964a:	int3   
   14000964b:	int3   
   14000964c:	int3   
   14000964d:	int3   
   14000964e:	int3   
   14000964f:	int3   
   140009650:	rex push rbx
   140009652:	push   rbp
   140009653:	push   rsi
   140009654:	push   r12
   140009656:	push   r15
   140009658:	sub    rsp,0x20
   14000965c:	mov    rbx,rcx
   14000965f:	mov    rcx,QWORD PTR [rcx+0x10]
   140009663:	mov    r15,r9
   140009666:	mov    rbp,r8
   140009669:	mov    rsi,rdx
   14000966c:	cmp    rcx,rdx
   14000966f:	jb     0x1400099bb
   140009675:	mov    rax,QWORD PTR [r9+0x10]
   140009679:	mov    r12,QWORD PTR [rsp+0x70]
   14000967e:	cmp    rax,r12
   140009681:	jb     0x1400099bb
   140009687:	mov    QWORD PTR [rsp+0x50],rdi
   14000968c:	mov    rdi,QWORD PTR [rsp+0x78]
   140009691:	mov    QWORD PTR [rsp+0x60],r14
   140009696:	mov    r14,rcx
   140009699:	sub    r14,rdx
   14000969c:	mov    rdx,rcx
   14000969f:	cmp    r14,r8
   1400096a2:	cmovb  rbp,r14
   1400096a6:	sub    rax,r12
   1400096a9:	cmp    rax,rdi
   1400096ac:	cmovb  rdi,rax
   1400096b0:	or     rax,0xffffffffffffffff
   1400096b4:	sub    rdx,rbp
   1400096b7:	sub    rax,rdi
   1400096ba:	cmp    rax,rdx
   1400096bd:	ja     0x1400096cd
   1400096bf:	lea    rcx,[rip+0x115d2]        # 0x14001ac98
   1400096c6:	call   QWORD PTR [rip+0xfb14]        # 0x1400191e0
   1400096cc:	int3   
   1400096cd:	mov    QWORD PTR [rsp+0x58],r13
   1400096d2:	lea    r13,[rdx+rdi*1]
   1400096d6:	sub    r14,rbp
   1400096d9:	cmp    rcx,r13
   1400096dc:	jae    0x1400096ec
   1400096de:	xor    r8d,r8d
   1400096e1:	mov    rdx,r13
   1400096e4:	mov    rcx,rbx
   1400096e7:	call   0x140005b20
   1400096ec:	cmp    rbx,r15
   1400096ef:	je     0x140009764
   1400096f1:	mov    rax,QWORD PTR [rbx+0x18]
   1400096f5:	cmp    rax,0x10
   1400096f9:	jb     0x140009700
   1400096fb:	mov    rcx,QWORD PTR [rbx]
   1400096fe:	jmp    0x140009703
   140009700:	mov    rcx,rbx
   140009703:	cmp    rax,0x10
   140009707:	jb     0x14000970e
   140009709:	mov    rax,QWORD PTR [rbx]
   14000970c:	jmp    0x140009711
   14000970e:	mov    rax,rbx
   140009711:	test   r14,r14
   140009714:	je     0x14000972d
   140009716:	lea    rdx,[rcx+rsi*1]
   14000971a:	lea    rcx,[rax+rsi*1]
   14000971e:	mov    r8,r14
   140009721:	add    rcx,rdi
   140009724:	add    rdx,rbp
   140009727:	call   QWORD PTR [rip+0xfb4b]        # 0x140019278
   14000972d:	cmp    QWORD PTR [r15+0x18],0x10
   140009732:	jb     0x140009737
   140009734:	mov    r15,QWORD PTR [r15]
   140009737:	cmp    QWORD PTR [rbx+0x18],0x10
   14000973c:	jb     0x140009743
   14000973e:	mov    rax,QWORD PTR [rbx]
   140009741:	jmp    0x140009746
   140009743:	mov    rax,rbx
   140009746:	test   rdi,rdi
   140009749:	je     0x140009985
   14000974f:	lea    rdx,[r15+r12*1]
   140009753:	lea    rcx,[rax+rsi*1]
   140009757:	mov    r8,rdi
   14000975a:	call   0x140017346
   14000975f:	jmp    0x140009985
   140009764:	cmp    rdi,rbp
   140009767:	ja     0x1400097de
   140009769:	mov    rax,QWORD PTR [rbx+0x18]
   14000976d:	cmp    rax,0x10
   140009771:	jb     0x140009778
   140009773:	mov    rcx,QWORD PTR [rbx]
   140009776:	jmp    0x14000977b
   140009778:	mov    rcx,rbx
   14000977b:	cmp    rax,0x10
   14000977f:	jb     0x140009786
   140009781:	mov    rax,QWORD PTR [rbx]
   140009784:	jmp    0x140009789
   140009786:	mov    rax,rbx
   140009789:	test   rdi,rdi
   14000978c:	je     0x14000979f
   14000978e:	lea    rdx,[rcx+r12*1]
   140009792:	lea    rcx,[rax+rsi*1]
   140009796:	mov    r8,rdi
   140009799:	call   QWORD PTR [rip+0xfad9]        # 0x140019278
   14000979f:	mov    rax,QWORD PTR [rbx+0x18]
   1400097a3:	cmp    rax,0x10
   1400097a7:	jb     0x1400097ae
   1400097a9:	mov    rcx,QWORD PTR [rbx]
   1400097ac:	jmp    0x1400097b1
   1400097ae:	mov    rcx,rbx
   1400097b1:	cmp    rax,0x10
   1400097b5:	jb     0x1400097bc
   1400097b7:	mov    rax,QWORD PTR [rbx]
   1400097ba:	jmp    0x1400097bf
   1400097bc:	mov    rax,rbx
   1400097bf:	test   r14,r14
   1400097c2:	je     0x140009985
   1400097c8:	lea    rdx,[rcx+rsi*1]
   1400097cc:	lea    rcx,[rax+rsi*1]
   1400097d0:	mov    r8,r14
   1400097d3:	add    rdx,rbp
   1400097d6:	add    rcx,rdi
   1400097d9:	jmp    0x14000997f
   1400097de:	cmp    r12,rsi
   1400097e1:	ja     0x140009858
   1400097e3:	mov    rax,QWORD PTR [rbx+0x18]
   1400097e7:	cmp    rax,0x10
   1400097eb:	jb     0x1400097f2
   1400097ed:	mov    rcx,QWORD PTR [rbx]
   1400097f0:	jmp    0x1400097f5
   1400097f2:	mov    rcx,rbx
   1400097f5:	cmp    rax,0x10
   1400097f9:	jb     0x140009800
   1400097fb:	mov    rax,QWORD PTR [rbx]
   1400097fe:	jmp    0x140009803
   140009800:	mov    rax,rbx
   140009803:	test   r14,r14
   140009806:	je     0x14000981f
   140009808:	lea    rdx,[rcx+rsi*1]
   14000980c:	lea    rcx,[rax+rsi*1]
   140009810:	mov    r8,r14
   140009813:	add    rcx,rdi
   140009816:	add    rdx,rbp
   140009819:	call   QWORD PTR [rip+0xfa59]        # 0x140019278
   14000981f:	mov    rax,QWORD PTR [rbx+0x18]
   140009823:	cmp    rax,0x10
   140009827:	jb     0x14000982e
   140009829:	mov    rcx,QWORD PTR [rbx]
   14000982c:	jmp    0x140009831
   14000982e:	mov    rcx,rbx
   140009831:	cmp    rax,0x10
   140009835:	jb     0x14000983c
   140009837:	mov    rax,QWORD PTR [rbx]
   14000983a:	jmp    0x14000983f
   14000983c:	mov    rax,rbx
   14000983f:	test   rdi,rdi
   140009842:	je     0x140009985
   140009848:	lea    rdx,[rcx+r12*1]
   14000984c:	mov    r8,rdi
   14000984f:	lea    rcx,[rax+rsi*1]
   140009853:	jmp    0x14000997f
   140009858:	lea    rax,[rsi+rbp*1]
   14000985c:	cmp    rax,r12
   14000985f:	mov    rax,QWORD PTR [rbx+0x18]
   140009863:	ja     0x1400098db
   140009865:	cmp    rax,0x10
   140009869:	jb     0x140009870
   14000986b:	mov    rcx,QWORD PTR [rbx]
   14000986e:	jmp    0x140009873
   140009870:	mov    rcx,rbx
   140009873:	cmp    rax,0x10
   140009877:	jb     0x14000987e
   140009879:	mov    rax,QWORD PTR [rbx]
   14000987c:	jmp    0x140009881
   14000987e:	mov    rax,rbx
   140009881:	test   r14,r14
   140009884:	je     0x14000989d
   140009886:	lea    rdx,[rcx+rsi*1]
   14000988a:	lea    rcx,[rax+rsi*1]
   14000988e:	mov    r8,r14
   140009891:	add    rcx,rdi
   140009894:	add    rdx,rbp
   140009897:	call   QWORD PTR [rip+0xf9db]        # 0x140019278
   14000989d:	mov    rax,QWORD PTR [rbx+0x18]
   1400098a1:	cmp    rax,0x10
   1400098a5:	jb     0x1400098ac
   1400098a7:	mov    rdx,QWORD PTR [rbx]
   1400098aa:	jmp    0x1400098af
   1400098ac:	mov    rdx,rbx
   1400098af:	cmp    rax,0x10
   1400098b3:	jb     0x1400098ba
   1400098b5:	mov    rax,QWORD PTR [rbx]
   1400098b8:	jmp    0x1400098bd
   1400098ba:	mov    rax,rbx
   1400098bd:	test   rdi,rdi
   1400098c0:	je     0x140009985
   1400098c6:	sub    rdx,rbp
   1400098c9:	lea    rcx,[rax+rsi*1]
   1400098cd:	mov    r8,rdi
   1400098d0:	add    rdx,r12
   1400098d3:	add    rdx,rdi
   1400098d6:	jmp    0x14000997f
   1400098db:	cmp    rax,0x10
   1400098df:	jb     0x1400098e6
   1400098e1:	mov    rcx,QWORD PTR [rbx]
   1400098e4:	jmp    0x1400098e9
   1400098e6:	mov    rcx,rbx
   1400098e9:	cmp    rax,0x10
   1400098ed:	jb     0x1400098f4
   1400098ef:	mov    rax,QWORD PTR [rbx]
   1400098f2:	jmp    0x1400098f7
   1400098f4:	mov    rax,rbx
   1400098f7:	test   rbp,rbp
   1400098fa:	je     0x14000990d
   1400098fc:	lea    rdx,[rcx+r12*1]
   140009900:	lea    rcx,[rax+rsi*1]
   140009904:	mov    r8,rbp
   140009907:	call   QWORD PTR [rip+0xf96b]        # 0x140019278
   14000990d:	mov    rax,QWORD PTR [rbx+0x18]
   140009911:	cmp    rax,0x10
   140009915:	jb     0x14000991c
   140009917:	mov    rcx,QWORD PTR [rbx]
   14000991a:	jmp    0x14000991f
   14000991c:	mov    rcx,rbx
   14000991f:	cmp    rax,0x10
   140009923:	jb     0x14000992a
   140009925:	mov    rax,QWORD PTR [rbx]
   140009928:	jmp    0x14000992d
   14000992a:	mov    rax,rbx
   14000992d:	test   r14,r14
   140009930:	je     0x140009949
   140009932:	lea    rdx,[rcx+rsi*1]
   140009936:	lea    rcx,[rax+rsi*1]
   14000993a:	mov    r8,r14
   14000993d:	add    rcx,rdi
   140009940:	add    rdx,rbp
   140009943:	call   QWORD PTR [rip+0xf92f]        # 0x140019278
   140009949:	mov    rax,QWORD PTR [rbx+0x18]
   14000994d:	cmp    rax,0x10
   140009951:	jb     0x140009958
   140009953:	mov    rcx,QWORD PTR [rbx]
   140009956:	jmp    0x14000995b
   140009958:	mov    rcx,rbx
   14000995b:	cmp    rax,0x10
   14000995f:	jb     0x140009966
   140009961:	mov    rax,QWORD PTR [rbx]
   140009964:	jmp    0x140009969
   140009966:	mov    rax,rbx
   140009969:	mov    r8,rdi
   14000996c:	sub    r8,rbp
   14000996f:	je     0x140009985
   140009971:	lea    rdx,[rcx+r12*1]
   140009975:	lea    rcx,[rax+rsi*1]
   140009979:	add    rdx,rdi
   14000997c:	add    rcx,rbp
   14000997f:	call   QWORD PTR [rip+0xf8f3]        # 0x140019278
   140009985:	cmp    QWORD PTR [rbx+0x18],0x10
   14000998a:	mov    QWORD PTR [rbx+0x10],r13
   14000998e:	jb     0x140009995
   140009990:	mov    rax,QWORD PTR [rbx]
   140009993:	jmp    0x140009998
   140009995:	mov    rax,rbx
   140009998:	mov    rdi,QWORD PTR [rsp+0x50]
   14000999d:	mov    r14,QWORD PTR [rsp+0x60]
   1400099a2:	mov    BYTE PTR [rax+r13*1],0x0
   1400099a7:	mov    r13,QWORD PTR [rsp+0x58]
   1400099ac:	mov    rax,rbx
   1400099af:	add    rsp,0x20
   1400099b3:	pop    r15
   1400099b5:	pop    r12
   1400099b7:	pop    rsi
   1400099b8:	pop    rbp
   1400099b9:	pop    rbx
   1400099ba:	ret    
   1400099bb:	lea    rcx,[rip+0x112e6]        # 0x14001aca8
   1400099c2:	call   QWORD PTR [rip+0xf828]        # 0x1400191f0
   1400099c8:	int3   
   1400099c9:	int3   
   1400099ca:	int3   
   1400099cb:	int3   
   1400099cc:	int3   
   1400099cd:	int3   
   1400099ce:	int3   
   1400099cf:	int3   
   1400099d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400099d5:	push   rsi
   1400099d6:	push   r12
   1400099d8:	push   r15
   1400099da:	sub    rsp,0x30
   1400099de:	mov    r15,r9
   1400099e1:	mov    rsi,r8
   1400099e4:	mov    r12,rdx
   1400099e7:	mov    rbx,rcx
   1400099ea:	test   r9,r9
   1400099ed:	je     0x140009a55
   1400099ef:	mov    r8,QWORD PTR [rcx+0x18]
   1400099f3:	cmp    r8,0x10
   1400099f7:	jb     0x1400099fe
   1400099f9:	mov    rax,QWORD PTR [rcx]
   1400099fc:	jmp    0x140009a01
   1400099fe:	mov    rax,rcx
   140009a01:	cmp    r9,rax
   140009a04:	jb     0x140009a55
   140009a06:	cmp    r8,0x10
   140009a0a:	jb     0x140009a0f
   140009a0c:	mov    rcx,QWORD PTR [rcx]
   140009a0f:	add    rcx,QWORD PTR [rbx+0x10]
   140009a13:	cmp    rcx,r9
   140009a16:	jbe    0x140009a55
   140009a18:	cmp    r8,0x10
   140009a1c:	jb     0x140009a23
   140009a1e:	mov    rax,QWORD PTR [rbx]
   140009a21:	jmp    0x140009a26
   140009a23:	mov    rax,rbx
   140009a26:	sub    r15,rax
   140009a29:	mov    rax,QWORD PTR [rsp+0x70]
   140009a2e:	mov    r9,rbx
   140009a31:	mov    QWORD PTR [rsp+0x28],rax
   140009a36:	mov    r8,rsi
   140009a39:	mov    rcx,rbx
   140009a3c:	mov    QWORD PTR [rsp+0x20],r15
   140009a41:	call   0x140009650
   140009a46:	mov    rbx,QWORD PTR [rsp+0x68]
   140009a4b:	add    rsp,0x30
   140009a4f:	pop    r15
   140009a51:	pop    r12
   140009a53:	pop    rsi
   140009a54:	ret    
   140009a55:	mov    rcx,QWORD PTR [rbx+0x10]
   140009a59:	cmp    rcx,rdx
   140009a5c:	jae    0x140009a6c
   140009a5e:	lea    rcx,[rip+0x11243]        # 0x14001aca8
   140009a65:	call   QWORD PTR [rip+0xf785]        # 0x1400191f0
   140009a6b:	int3   
   140009a6c:	mov    QWORD PTR [rsp+0x50],rbp
   140009a71:	mov    rbp,QWORD PTR [rsp+0x70]
   140009a76:	mov    QWORD PTR [rsp+0x60],r14
   140009a7b:	mov    r14,rcx
   140009a7e:	sub    r14,rdx
   140009a81:	cmp    r14,rsi
   140009a84:	cmovb  rsi,r14
   140009a88:	or     rax,0xffffffffffffffff
   140009a8c:	sub    rax,rbp
   140009a8f:	sub    rcx,rsi
   140009a92:	cmp    rax,rcx
   140009a95:	ja     0x140009aa5
   140009a97:	lea    rcx,[rip+0x111fa]        # 0x14001ac98
   140009a9e:	call   QWORD PTR [rip+0xf73c]        # 0x1400191e0
   140009aa4:	int3   
   140009aa5:	sub    r14,rsi
   140009aa8:	cmp    rbp,rsi
   140009aab:	jae    0x140009ae8
   140009aad:	mov    rax,QWORD PTR [rbx+0x18]
   140009ab1:	cmp    rax,0x10
   140009ab5:	jb     0x140009abc
   140009ab7:	mov    rcx,QWORD PTR [rbx]
   140009aba:	jmp    0x140009abf
   140009abc:	mov    rcx,rbx
   140009abf:	cmp    rax,0x10
   140009ac3:	jb     0x140009aca
   140009ac5:	mov    rax,QWORD PTR [rbx]
   140009ac8:	jmp    0x140009acd
   140009aca:	mov    rax,rbx
   140009acd:	test   r14,r14
   140009ad0:	je     0x140009ae8
   140009ad2:	add    rdx,rcx
   140009ad5:	lea    rcx,[rax+r12*1]
   140009ad9:	mov    r8,r14
   140009adc:	add    rcx,rbp
   140009adf:	add    rdx,rsi
   140009ae2:	call   QWORD PTR [rip+0xf790]        # 0x140019278
   140009ae8:	mov    QWORD PTR [rsp+0x58],rdi
   140009aed:	test   rbp,rbp
   140009af0:	jne    0x140009afb
   140009af2:	test   rsi,rsi
   140009af5:	je     0x140009bd3
   140009afb:	mov    r8,QWORD PTR [rbx+0x10]
   140009aff:	mov    rdi,r8
   140009b02:	sub    rdi,rsi
   140009b05:	add    rdi,rbp
   140009b08:	cmp    rdi,0xfffffffffffffffe
   140009b0c:	jbe    0x140009b1c
   140009b0e:	lea    rcx,[rip+0x11183]        # 0x14001ac98
   140009b15:	call   QWORD PTR [rip+0xf6c5]        # 0x1400191e0
   140009b1b:	int3   
   140009b1c:	mov    rax,QWORD PTR [rbx+0x18]
   140009b20:	cmp    rax,rdi
   140009b23:	jae    0x140009b4d
   140009b25:	mov    rdx,rdi
   140009b28:	mov    rcx,rbx
   140009b2b:	call   0x140005670
   140009b30:	test   rdi,rdi
   140009b33:	je     0x140009bd3
   140009b39:	cmp    rsi,rbp
   140009b3c:	jae    0x140009b99
   140009b3e:	mov    rax,QWORD PTR [rbx+0x18]
   140009b42:	cmp    rax,0x10
   140009b46:	jb     0x140009b6c
   140009b48:	mov    rcx,QWORD PTR [rbx]
   140009b4b:	jmp    0x140009b6f
   140009b4d:	test   rdi,rdi
   140009b50:	jne    0x140009b39
   140009b52:	mov    QWORD PTR [rbx+0x10],rdi
   140009b56:	cmp    rax,0x10
   140009b5a:	jb     0x140009b64
   140009b5c:	mov    rax,QWORD PTR [rbx]
   140009b5f:	mov    BYTE PTR [rax],dil
   140009b62:	jmp    0x140009bd3
   140009b64:	mov    rax,rbx
   140009b67:	mov    BYTE PTR [rbx],0x0
   140009b6a:	jmp    0x140009bd3
   140009b6c:	mov    rcx,rbx
   140009b6f:	cmp    rax,0x10
   140009b73:	jb     0x140009b7a
   140009b75:	mov    rax,QWORD PTR [rbx]
   140009b78:	jmp    0x140009b7d
   140009b7a:	mov    rax,rbx
   140009b7d:	test   r14,r14
   140009b80:	je     0x140009b99
   140009b82:	lea    rdx,[rcx+r12*1]
   140009b86:	lea    rcx,[rax+r12*1]
   140009b8a:	mov    r8,r14
   140009b8d:	add    rcx,rbp
   140009b90:	add    rdx,rsi
   140009b93:	call   QWORD PTR [rip+0xf6df]        # 0x140019278
   140009b99:	cmp    QWORD PTR [rbx+0x18],0x10
   140009b9e:	jb     0x140009ba5
   140009ba0:	mov    rax,QWORD PTR [rbx]
   140009ba3:	jmp    0x140009ba8
   140009ba5:	mov    rax,rbx
   140009ba8:	test   rbp,rbp
   140009bab:	je     0x140009bbc
   140009bad:	lea    rcx,[rax+r12*1]
   140009bb1:	mov    r8,rbp
   140009bb4:	mov    rdx,r15
   140009bb7:	call   0x140017346
   140009bbc:	cmp    QWORD PTR [rbx+0x18],0x10
   140009bc1:	mov    QWORD PTR [rbx+0x10],rdi
   140009bc5:	jb     0x140009bcc
   140009bc7:	mov    rax,QWORD PTR [rbx]
   140009bca:	jmp    0x140009bcf
   140009bcc:	mov    rax,rbx
   140009bcf:	mov    BYTE PTR [rax+rdi*1],0x0
   140009bd3:	mov    rdi,QWORD PTR [rsp+0x58]
   140009bd8:	mov    rbp,QWORD PTR [rsp+0x50]
   140009bdd:	mov    r14,QWORD PTR [rsp+0x60]
   140009be2:	mov    rax,rbx
   140009be5:	mov    rbx,QWORD PTR [rsp+0x68]
   140009bea:	add    rsp,0x30
   140009bee:	pop    r15
   140009bf0:	pop    r12
   140009bf2:	pop    rsi
   140009bf3:	ret    
   140009bf4:	int3   
   140009bf5:	int3   
   140009bf6:	int3   
   140009bf7:	int3   
   140009bf8:	int3   
   140009bf9:	int3   
   140009bfa:	int3   
   140009bfb:	int3   
   140009bfc:	int3   
   140009bfd:	int3   
   140009bfe:	int3   
   140009bff:	int3   
   140009c00:	mov    QWORD PTR [rsp+0x8],rbx
   140009c05:	push   rdi
   140009c06:	sub    rsp,0x20
   140009c0a:	mov    rdi,QWORD PTR [rcx+0x10]
   140009c0e:	mov    rbx,rcx
   140009c11:	cmp    rdi,rdx
   140009c14:	ja     0x140009c3a
   140009c16:	cmp    QWORD PTR [rcx+0x18],rdx
   140009c1a:	je     0x140009c3a
   140009c1c:	mov    r8b,0x1
   140009c1f:	call   0x140005b20
   140009c24:	test   al,al
   140009c26:	je     0x140009c3a
   140009c28:	cmp    QWORD PTR [rbx+0x18],0x10
   140009c2d:	mov    QWORD PTR [rbx+0x10],rdi
   140009c31:	jb     0x140009c36
   140009c33:	mov    rbx,QWORD PTR [rbx]
   140009c36:	mov    BYTE PTR [rbx+rdi*1],0x0
   140009c3a:	mov    rbx,QWORD PTR [rsp+0x30]
   140009c3f:	add    rsp,0x20
   140009c43:	pop    rdi
   140009c44:	ret    
   140009c45:	int3   
   140009c46:	int3   
   140009c47:	int3   
   140009c48:	int3   
   140009c49:	int3   
   140009c4a:	int3   
   140009c4b:	int3   
   140009c4c:	int3   
   140009c4d:	int3   
   140009c4e:	int3   
   140009c4f:	int3   
   140009c50:	mov    rax,QWORD PTR [rcx+0x10]
   140009c54:	mov    DWORD PTR [rcx+0x20],0xffffffff
   140009c5b:	mov    BYTE PTR [rcx+0x38],0x1
   140009c5f:	mov    QWORD PTR [rcx+0x18],rax
   140009c63:	xor    eax,eax
   140009c65:	mov    QWORD PTR [rcx+0x24],rax
   140009c69:	mov    QWORD PTR [rcx+0x2c],rax
   140009c6d:	mov    DWORD PTR [rcx+0x34],eax
   140009c70:	ret    
   140009c71:	int3   
   140009c72:	int3   
   140009c73:	int3   
   140009c74:	int3   
   140009c75:	int3   
   140009c76:	int3   
   140009c77:	int3   
   140009c78:	int3   
   140009c79:	int3   
   140009c7a:	int3   
   140009c7b:	int3   
   140009c7c:	int3   
   140009c7d:	int3   
   140009c7e:	int3   
   140009c7f:	int3   
   140009c80:	mov    rax,QWORD PTR [rcx]
   140009c83:	mov    QWORD PTR [rcx+0x8],rax
   140009c87:	mov    rax,QWORD PTR [rax+0x20]
   140009c8b:	mov    QWORD PTR [rcx+0x18],0x0
   140009c93:	mov    QWORD PTR [rcx+0x10],rax
   140009c97:	ret    
   140009c98:	int3   
   140009c99:	int3   
   140009c9a:	int3   
   140009c9b:	int3   
   140009c9c:	int3   
   140009c9d:	int3   
   140009c9e:	int3   
   140009c9f:	int3   
   140009ca0:	mov    eax,DWORD PTR [rcx+0x28]
   140009ca3:	ret    
   140009ca4:	int3   
   140009ca5:	int3   
   140009ca6:	int3   
   140009ca7:	int3   
   140009ca8:	int3   
   140009ca9:	int3   
   140009caa:	int3   
   140009cab:	int3   
   140009cac:	int3   
   140009cad:	int3   
   140009cae:	int3   
   140009caf:	int3   
   140009cb0:	mov    QWORD PTR [rsp+0x10],rbx
   140009cb5:	mov    QWORD PTR [rsp+0x18],rbp
   140009cba:	push   rsi
   140009cbb:	push   rdi
   140009cbc:	push   r14
   140009cbe:	sub    rsp,0x20
   140009cc2:	mov    rax,QWORD PTR [rcx+0x38]
   140009cc6:	lea    r14,[rcx+0x80]
   140009ccd:	mov    ebp,r9d
   140009cd0:	mov    rsi,r8
   140009cd3:	mov    rdi,rdx
   140009cd6:	mov    rbx,rcx
   140009cd9:	cmp    QWORD PTR [rax],r14
   140009cdc:	jne    0x140009cee
   140009cde:	cmp    r9d,0x1
   140009ce2:	jne    0x140009cee
   140009ce4:	cmp    QWORD PTR [rcx+0x78],0x0
   140009ce9:	jne    0x140009cee
   140009ceb:	dec    rsi
   140009cee:	cmp    QWORD PTR [rcx+0x90],0x0
   140009cf6:	je     0x140009d71
   140009cf8:	call   0x1400057a0
   140009cfd:	test   al,al
   140009cff:	je     0x140009d71
   140009d01:	test   rsi,rsi
   140009d04:	jne    0x140009d0b
   140009d06:	cmp    ebp,0x1
   140009d09:	je     0x140009d22
   140009d0b:	mov    rcx,QWORD PTR [rbx+0x90]
   140009d12:	mov    r8d,ebp
   140009d15:	mov    rdx,rsi
   140009d18:	call   QWORD PTR [rip+0xf512]        # 0x140019230
   140009d1e:	test   eax,eax
   140009d20:	jne    0x140009d71
   140009d22:	mov    rcx,QWORD PTR [rbx+0x90]
   140009d29:	lea    rdx,[rsp+0x40]
   140009d2e:	call   QWORD PTR [rip+0xf6f4]        # 0x140019428
   140009d34:	test   eax,eax
   140009d36:	jne    0x140009d71
   140009d38:	mov    rax,QWORD PTR [rbx+0x18]
   140009d3c:	cmp    QWORD PTR [rax],r14
   140009d3f:	jne    0x140009d5b
   140009d41:	mov    rcx,QWORD PTR [rbx+0x68]
   140009d45:	mov    rdx,QWORD PTR [rbx+0x70]
   140009d49:	mov    QWORD PTR [rax],rcx
   140009d4c:	mov    rax,QWORD PTR [rbx+0x38]
   140009d50:	sub    edx,ecx
   140009d52:	mov    QWORD PTR [rax],rcx
   140009d55:	mov    rax,QWORD PTR [rbx+0x50]
   140009d59:	mov    DWORD PTR [rax],edx
   140009d5b:	xor    eax,eax
   140009d5d:	mov    QWORD PTR [rdi],rax
   140009d60:	mov    rax,QWORD PTR [rsp+0x40]
   140009d65:	mov    QWORD PTR [rdi+0x8],rax
   140009d69:	mov    eax,DWORD PTR [rbx+0x84]
   140009d6f:	jmp    0x140009d84
   140009d71:	mov    rax,QWORD PTR [rip+0xf418]        # 0x140019190
   140009d78:	mov    rcx,QWORD PTR [rax]
   140009d7b:	xor    eax,eax
   140009d7d:	mov    QWORD PTR [rdi],rcx
   140009d80:	mov    QWORD PTR [rdi+0x8],rax
   140009d84:	mov    rbx,QWORD PTR [rsp+0x48]
   140009d89:	mov    rbp,QWORD PTR [rsp+0x50]
   140009d8e:	mov    DWORD PTR [rdi+0x10],eax
   140009d91:	mov    rax,rdi
   140009d94:	add    rsp,0x20
   140009d98:	pop    r14
   140009d9a:	pop    rdi
   140009d9b:	pop    rsi
   140009d9c:	ret    
   140009d9d:	int3   
   140009d9e:	int3   
   140009d9f:	int3   
   140009da0:	mov    QWORD PTR [rsp+0x10],rbx
   140009da5:	mov    QWORD PTR [rsp+0x18],rsi
   140009daa:	mov    QWORD PTR [rsp+0x20],rdi
   140009daf:	push   r14
   140009db1:	sub    rsp,0x20
   140009db5:	cmp    QWORD PTR [rcx+0x90],0x0
   140009dbd:	mov    rax,QWORD PTR [r8+0x8]
   140009dc1:	mov    rsi,QWORD PTR [r8]
   140009dc4:	mov    QWORD PTR [rsp+0x30],rax
   140009dc9:	mov    r14,r8
   140009dcc:	mov    rbx,rdx
   140009dcf:	mov    rdi,rcx
   140009dd2:	je     0x140009e4e
   140009dd4:	call   0x1400057a0
   140009dd9:	test   al,al
   140009ddb:	je     0x140009e4e
   140009ddd:	mov    rcx,QWORD PTR [rdi+0x90]
   140009de4:	lea    rdx,[rsp+0x30]
   140009de9:	call   QWORD PTR [rip+0xf439]        # 0x140019228
   140009def:	test   eax,eax
   140009df1:	jne    0x140009e4e
   140009df3:	test   rsi,rsi
   140009df6:	je     0x140009e10
   140009df8:	mov    rcx,QWORD PTR [rdi+0x90]
   140009dff:	lea    r8d,[rax+0x1]
   140009e03:	mov    rdx,rsi
   140009e06:	call   QWORD PTR [rip+0xf424]        # 0x140019230
   140009e0c:	test   eax,eax
   140009e0e:	jne    0x140009e4e
   140009e10:	mov    rcx,QWORD PTR [rdi+0x90]
   140009e17:	lea    rdx,[rsp+0x30]
   140009e1c:	call   QWORD PTR [rip+0xf606]        # 0x140019428
   140009e22:	test   eax,eax
   140009e24:	jne    0x140009e4e
   140009e26:	mov    eax,DWORD PTR [r14+0x10]
   140009e2a:	mov    rcx,rdi
   140009e2d:	mov    DWORD PTR [rdi+0x84],eax
   140009e33:	call   0x140005e90
   140009e38:	xor    eax,eax
   140009e3a:	mov    QWORD PTR [rbx],rax
   140009e3d:	mov    rax,QWORD PTR [rsp+0x30]
   140009e42:	mov    QWORD PTR [rbx+0x8],rax
   140009e46:	mov    eax,DWORD PTR [rdi+0x84]
   140009e4c:	jmp    0x140009e61
   140009e4e:	mov    rax,QWORD PTR [rip+0xf33b]        # 0x140019190
   140009e55:	mov    rcx,QWORD PTR [rax]
   140009e58:	xor    eax,eax
   140009e5a:	mov    QWORD PTR [rbx],rcx
   140009e5d:	mov    QWORD PTR [rbx+0x8],rax
   140009e61:	mov    rsi,QWORD PTR [rsp+0x40]
   140009e66:	mov    rdi,QWORD PTR [rsp+0x48]
   140009e6b:	mov    DWORD PTR [rbx+0x10],eax
   140009e6e:	mov    rax,rbx
   140009e71:	mov    rbx,QWORD PTR [rsp+0x38]
   140009e76:	add    rsp,0x20
   140009e7a:	pop    r14
   140009e7c:	ret    
   140009e7d:	int3   
   140009e7e:	int3   
   140009e7f:	int3   
   140009e80:	mov    rax,QWORD PTR [rcx+0x8]
   140009e84:	ret    
   140009e85:	int3   
   140009e86:	int3   
   140009e87:	int3   
   140009e88:	int3   
   140009e89:	int3   
   140009e8a:	int3   
   140009e8b:	int3   
   140009e8c:	int3   
   140009e8d:	int3   
   140009e8e:	int3   
   140009e8f:	int3   
   140009e90:	mov    rax,rdx
   140009e93:	ret    
   140009e94:	int3   
   140009e95:	int3   
   140009e96:	int3   
   140009e97:	int3   
   140009e98:	int3   
   140009e99:	int3   
   140009e9a:	int3   
   140009e9b:	int3   
   140009e9c:	int3   
   140009e9d:	int3   
   140009e9e:	int3   
   140009e9f:	int3   
   140009ea0:	mov    rax,rdx
   140009ea3:	ret    
   140009ea4:	int3   
   140009ea5:	int3   
   140009ea6:	int3   
   140009ea7:	int3   
   140009ea8:	int3   
   140009ea9:	int3   
   140009eaa:	int3   
   140009eab:	int3   
   140009eac:	int3   
   140009ead:	int3   
   140009eae:	int3   
   140009eaf:	int3   
   140009eb0:	mov    rax,rcx
   140009eb3:	ret    
   140009eb4:	int3   
   140009eb5:	int3   
   140009eb6:	int3   
   140009eb7:	int3   
   140009eb8:	int3   
   140009eb9:	int3   
   140009eba:	int3   
   140009ebb:	int3   
   140009ebc:	int3   
   140009ebd:	int3   
   140009ebe:	int3   
   140009ebf:	int3   
   140009ec0:	rex push rbx
   140009ec2:	sub    rsp,0x20
   140009ec6:	mov    rbx,rcx
   140009ec9:	mov    rcx,QWORD PTR [rcx+0x90]
   140009ed0:	mov    r9,r8
   140009ed3:	test   rcx,rcx
   140009ed6:	je     0x140009f69
   140009edc:	test   rdx,rdx
   140009edf:	jne    0x140009eec
   140009ee1:	test   r8,r8
   140009ee4:	jne    0x140009eec
   140009ee6:	lea    r8d,[r9+0x4]
   140009eea:	jmp    0x140009eef
   140009eec:	xor    r8d,r8d
   140009eef:	call   QWORD PTR [rip+0xf353]        # 0x140019248
   140009ef5:	test   eax,eax
   140009ef7:	jne    0x140009f69
   140009ef9:	mov    rcx,rbx
   140009efc:	mov    QWORD PTR [rsp+0x30],rdi
   140009f01:	mov    rdi,QWORD PTR [rbx+0x90]
   140009f08:	mov    BYTE PTR [rbx+0x88],0x1
   140009f0f:	mov    BYTE PTR [rbx+0x81],al
   140009f15:	call   QWORD PTR [rip+0xf1bd]        # 0x1400190d8
   140009f1b:	test   rdi,rdi
   140009f1e:	je     0x140009f40
   140009f20:	lea    rax,[rdi+0x10]
   140009f24:	mov    QWORD PTR [rbx+0x38],rdi
   140009f28:	mov    QWORD PTR [rbx+0x40],rdi
   140009f2c:	mov    QWORD PTR [rbx+0x18],rax
   140009f30:	mov    QWORD PTR [rbx+0x20],rax
   140009f34:	lea    rax,[rdi+0x8]
   140009f38:	mov    QWORD PTR [rbx+0x50],rax
   140009f3c:	mov    QWORD PTR [rbx+0x58],rax
   140009f40:	mov    QWORD PTR [rbx+0x90],rdi
   140009f47:	mov    eax,DWORD PTR [rip+0x17743]        # 0x140021690
   140009f4d:	mov    rdi,QWORD PTR [rsp+0x30]
   140009f52:	mov    DWORD PTR [rbx+0x84],eax
   140009f58:	mov    QWORD PTR [rbx+0x78],0x0
   140009f60:	mov    rax,rbx
   140009f63:	add    rsp,0x20
   140009f67:	pop    rbx
   140009f68:	ret    
   140009f69:	xor    eax,eax
   140009f6b:	add    rsp,0x20
   140009f6f:	pop    rbx
   140009f70:	ret    
   140009f71:	int3   
   140009f72:	int3   
   140009f73:	int3   
   140009f74:	int3   
   140009f75:	int3   
   140009f76:	int3   
   140009f77:	int3   
   140009f78:	int3   
   140009f79:	int3   
   140009f7a:	int3   
   140009f7b:	int3   
   140009f7c:	int3   
   140009f7d:	int3   
   140009f7e:	int3   
   140009f7f:	int3   
   140009f80:	xor    eax,eax
   140009f82:	neg    edx
   140009f84:	mov    r8,rcx
   140009f87:	movsxd r9,edx
   140009f8a:	jns    0x140009faa
   140009f8c:	nop    DWORD PTR [rax+0x0]
   140009f90:	mov    rdx,QWORD PTR [r8+rax*8]
   140009f94:	mov    rcx,QWORD PTR [r8+rax*8-0x8]
   140009f99:	dec    rax
   140009f9c:	mov    QWORD PTR [r8+rax*8+0x8],rcx
   140009fa1:	mov    QWORD PTR [r8+rax*8],rdx
   140009fa5:	cmp    rax,r9
   140009fa8:	jg     0x140009f90
   140009faa:	ret    
   140009fab:	int3   
   140009fac:	int3   
   140009fad:	int3   
   140009fae:	int3   
   140009faf:	int3   
   140009fb0:	mov    rax,QWORD PTR [rcx+0x10]
   140009fb4:	ret    
   140009fb5:	int3   
   140009fb6:	int3   
   140009fb7:	int3   
   140009fb8:	int3   
   140009fb9:	int3   
   140009fba:	int3   
   140009fbb:	int3   
   140009fbc:	int3   
   140009fbd:	int3   
   140009fbe:	int3   
   140009fbf:	int3   
   140009fc0:	mov    eax,DWORD PTR [rcx+0x10]
   140009fc3:	ret    
   140009fc4:	int3   
   140009fc5:	int3   
   140009fc6:	int3   
   140009fc7:	int3   
   140009fc8:	int3   
   140009fc9:	int3   
   140009fca:	int3   
   140009fcb:	int3   
   140009fcc:	int3   
   140009fcd:	int3   
   140009fce:	int3   
   140009fcf:	int3   
   140009fd0:	movzx  r8d,BYTE PTR [rcx]
   140009fd4:	test   r8b,r8b
   140009fd7:	je     0x140009ff8
   140009fd9:	nop    DWORD PTR [rax+0x0]
   140009fe0:	movzx  eax,BYTE PTR [rdx]
   140009fe3:	inc    rdx
   140009fe6:	lea    rcx,[rcx+0x1]
   140009fea:	cmp    r8b,al
   140009fed:	jne    0x14000a006
   140009fef:	movzx  r8d,BYTE PTR [rcx]
   140009ff3:	test   r8b,r8b
   140009ff6:	jne    0x140009fe0
   140009ff8:	movzx  eax,BYTE PTR [rdx]
   140009ffb:	test   al,al
   140009ffd:	je     0x14000a009
   140009fff:	cmp    al,0x3d
   14000a001:	je     0x14000a009
   14000a003:	xor    eax,eax
   14000a005:	ret    
   14000a006:	xor    al,al
   14000a008:	ret    
   14000a009:	mov    eax,0x1
   14000a00e:	ret    
   14000a00f:	int3   
   14000a010:	movzx  eax,BYTE PTR [rcx]
   14000a013:	mov    r9,rcx
   14000a016:	test   al,al
   14000a018:	je     0x14000a046
   14000a01a:	nop    WORD PTR [rax+rax*1+0x0]
   14000a020:	cmp    al,BYTE PTR [rdx]
   14000a022:	jne    0x14000a034
   14000a024:	movzx  eax,BYTE PTR [rcx+0x1]
   14000a028:	inc    rcx
   14000a02b:	inc    rdx
   14000a02e:	test   al,al
   14000a030:	jne    0x14000a020
   14000a032:	jmp    0x14000a046
   14000a034:	cmp    BYTE PTR [rcx],0x0
   14000a037:	je     0x14000a046
   14000a039:	test   r8,r8
   14000a03c:	jle    0x14000a051
   14000a03e:	sub    rcx,r9
   14000a041:	cmp    rcx,r8
   14000a044:	jl     0x14000a051
   14000a046:	movzx  eax,BYTE PTR [rdx]
   14000a049:	test   al,al
   14000a04b:	je     0x14000a054
   14000a04d:	cmp    al,0x3d
   14000a04f:	je     0x14000a054
   14000a051:	xor    al,al
   14000a053:	ret    
   14000a054:	mov    al,0x1
   14000a056:	ret    
   14000a057:	int3   
   14000a058:	int3   
   14000a059:	int3   
   14000a05a:	int3   
   14000a05b:	int3   
   14000a05c:	int3   
   14000a05d:	int3   
   14000a05e:	int3   
   14000a05f:	int3   
   14000a060:	rex push rbx
   14000a062:	sub    rsp,0x30
   14000a066:	xor    eax,eax
   14000a068:	mov    rbx,rdx
   14000a06b:	mov    QWORD PTR [rdx+0x18],0xf
   14000a073:	mov    QWORD PTR [rdx+0x10],rax
   14000a077:	mov    BYTE PTR [rdx],al
   14000a079:	mov    rdx,rcx
   14000a07c:	mov    rcx,rbx
   14000a07f:	mov    DWORD PTR [rsp+0x20],eax
   14000a083:	call   0x140006640
   14000a088:	mov    rax,rbx
   14000a08b:	add    rsp,0x30
   14000a08f:	pop    rbx
   14000a090:	ret    
   14000a091:	int3   
   14000a092:	int3   
   14000a093:	int3   
   14000a094:	int3   
   14000a095:	int3   
   14000a096:	int3   
   14000a097:	int3   
   14000a098:	int3   
   14000a099:	int3   
   14000a09a:	int3   
   14000a09b:	int3   
   14000a09c:	int3   
   14000a09d:	int3   
   14000a09e:	int3   
   14000a09f:	int3   
   14000a0a0:	rex push rbx
   14000a0a2:	sub    rsp,0x20
   14000a0a6:	cmp    QWORD PTR [rcx+0x90],0x0
   14000a0ae:	mov    rbx,rcx
   14000a0b1:	je     0x14000a0db
   14000a0b3:	mov    rax,QWORD PTR [rcx]
   14000a0b6:	or     edx,0xffffffff
   14000a0b9:	call   QWORD PTR [rax+0x18]
   14000a0bc:	cmp    eax,0xffffffff
   14000a0bf:	je     0x14000a0db
   14000a0c1:	mov    rcx,QWORD PTR [rbx+0x90]
   14000a0c8:	call   QWORD PTR [rip+0xf13a]        # 0x140019208
   14000a0ce:	test   eax,eax
   14000a0d0:	jns    0x14000a0db
   14000a0d2:	or     eax,0xffffffff
   14000a0d5:	add    rsp,0x20
   14000a0d9:	pop    rbx
   14000a0da:	ret    
   14000a0db:	xor    eax,eax
   14000a0dd:	add    rsp,0x20
   14000a0e1:	pop    rbx
   14000a0e2:	ret    
   14000a0e3:	int3   
   14000a0e4:	int3   
   14000a0e5:	int3   
   14000a0e6:	int3   
   14000a0e7:	int3   
   14000a0e8:	int3   
   14000a0e9:	int3   
   14000a0ea:	int3   
   14000a0eb:	int3   
   14000a0ec:	int3   
   14000a0ed:	int3   
   14000a0ee:	int3   
   14000a0ef:	int3   
   14000a0f0:	lea    rax,[rip+0x16f19]        # 0x140021010
   14000a0f7:	ret    
   14000a0f8:	int3   
   14000a0f9:	int3   
   14000a0fa:	int3   
   14000a0fb:	int3   
   14000a0fc:	int3   
   14000a0fd:	int3   
   14000a0fe:	int3   
   14000a0ff:	int3   
   14000a100:	or     rcx,0x1
   14000a104:	mov    rax,rcx
   14000a107:	ret    
   14000a108:	int3   
   14000a109:	int3   
   14000a10a:	int3   
   14000a10b:	int3   
   14000a10c:	int3   
   14000a10d:	int3   
   14000a10e:	int3   
   14000a10f:	int3   
   14000a110:	movzx  eax,BYTE PTR [rcx]
   14000a113:	ret    
   14000a114:	int3   
   14000a115:	int3   
   14000a116:	int3   
   14000a117:	int3   
   14000a118:	int3   
   14000a119:	int3   
   14000a11a:	int3   
   14000a11b:	int3   
   14000a11c:	int3   
   14000a11d:	int3   
   14000a11e:	int3   
   14000a11f:	int3   
   14000a120:	movzx  eax,BYTE PTR [rcx]
   14000a123:	ret    
   14000a124:	int3   
   14000a125:	int3   
   14000a126:	int3   
   14000a127:	int3   
   14000a128:	int3   
   14000a129:	int3   
   14000a12a:	int3   
   14000a12b:	int3   
   14000a12c:	int3   
   14000a12d:	int3   
   14000a12e:	int3   
   14000a12f:	int3   
   14000a130:	rex push rbp
   14000a132:	push   rsi
   14000a133:	push   rdi
   14000a134:	push   r14
   14000a136:	push   r15
   14000a138:	mov    rbp,rsp
   14000a13b:	sub    rsp,0x70
   14000a13f:	mov    QWORD PTR [rbp-0x28],0xfffffffffffffffe
   14000a147:	mov    QWORD PTR [rsp+0xb0],rbx
   14000a14f:	mov    rdi,rcx
   14000a152:	mov    rax,QWORD PTR [rcx+0x38]
   14000a156:	mov    rcx,QWORD PTR [rax]
   14000a159:	test   rcx,rcx
   14000a15c:	je     0x14000a18a
   14000a15e:	mov    rdx,QWORD PTR [rdi+0x50]
   14000a162:	movsxd r8,DWORD PTR [rdx]
   14000a165:	lea    rax,[rcx+r8*1]
   14000a169:	cmp    rcx,rax
   14000a16c:	jae    0x14000a18a
   14000a16e:	lea    eax,[r8-0x1]
   14000a172:	mov    DWORD PTR [rdx],eax
   14000a174:	mov    rcx,QWORD PTR [rdi+0x38]
   14000a178:	mov    rdx,QWORD PTR [rcx]
   14000a17b:	lea    rax,[rdx+0x1]
   14000a17f:	mov    QWORD PTR [rcx],rax
   14000a182:	movzx  eax,BYTE PTR [rdx]
   14000a185:	jmp    0x14000a3ed
   14000a18a:	cmp    QWORD PTR [rdi+0x90],0x0
   14000a192:	jne    0x14000a19d
   14000a194:	or     rax,0xffffffffffffffff
   14000a198:	jmp    0x14000a3ed
   14000a19d:	mov    rax,QWORD PTR [rdi+0x18]
   14000a1a1:	mov    rcx,QWORD PTR [rax]
   14000a1a4:	lea    rax,[rdi+0x80]
   14000a1ab:	cmp    rcx,rax
   14000a1ae:	jne    0x14000a1c4
   14000a1b0:	mov    rdx,QWORD PTR [rdi+0x68]
   14000a1b4:	mov    r9,QWORD PTR [rdi+0x70]
   14000a1b8:	mov    r8,rdx
   14000a1bb:	mov    rcx,rdi
   14000a1be:	call   QWORD PTR [rip+0xef0c]        # 0x1400190d0
   14000a1c4:	cmp    QWORD PTR [rdi+0x78],0x0
   14000a1c9:	jne    0x14000a1ee
   14000a1cb:	mov    rcx,QWORD PTR [rdi+0x90]
   14000a1d2:	call   QWORD PTR [rip+0xf038]        # 0x140019210
   14000a1d8:	cmp    eax,0xffffffff
   14000a1db:	je     0x14000a1e5
   14000a1dd:	movzx  esi,al
   14000a1e0:	jmp    0x14000a3eb
   14000a1e5:	or     rsi,0xffffffffffffffff
   14000a1e9:	jmp    0x14000a3eb
   14000a1ee:	mov    QWORD PTR [rbp-0x8],0xf
   14000a1f6:	xor    r15d,r15d
   14000a1f9:	mov    QWORD PTR [rbp-0x10],r15
   14000a1fd:	mov    BYTE PTR [rbp-0x20],r15b
   14000a201:	mov    rcx,QWORD PTR [rdi+0x90]
   14000a208:	call   QWORD PTR [rip+0xf002]        # 0x140019210
   14000a20e:	or     rsi,0xffffffffffffffff
   14000a212:	cmp    eax,0xffffffff
   14000a215:	mov    r14d,eax
   14000a218:	je     0x14000a3db
   14000a21e:	mov    rcx,rsi
   14000a221:	mov    rdx,QWORD PTR [rbp-0x10]
   14000a225:	sub    rcx,rdx
   14000a228:	cmp    rcx,0x1
   14000a22c:	jbe    0x14000a3cd
   14000a232:	lea    rbx,[rdx+0x1]
   14000a236:	cmp    rbx,0xfffffffffffffffe
   14000a23a:	ja     0x14000a3bf
   14000a240:	mov    r9,QWORD PTR [rbp-0x8]
   14000a244:	cmp    r9,rbx
   14000a247:	jae    0x14000a25a
   14000a249:	mov    r8,rdx
   14000a24c:	mov    rdx,rbx
   14000a24f:	lea    rcx,[rbp-0x20]
   14000a253:	call   0x140005670
   14000a258:	jmp    0x14000a272
   14000a25a:	test   rbx,rbx
   14000a25d:	jne    0x14000a27f
   14000a25f:	mov    QWORD PTR [rbp-0x10],r15
   14000a263:	lea    rax,[rbp-0x20]
   14000a267:	cmp    r9,0x10
   14000a26b:	cmovae rax,QWORD PTR [rbp-0x20]
   14000a270:	mov    BYTE PTR [rax],bl
   14000a272:	mov    rdx,QWORD PTR [rbp-0x10]
   14000a276:	mov    r9,QWORD PTR [rbp-0x8]
   14000a27a:	test   rbx,rbx
   14000a27d:	je     0x14000a2ae
   14000a27f:	lea    rax,[rbp-0x20]
   14000a283:	cmp    r9,0x10
   14000a287:	cmovae rax,QWORD PTR [rbp-0x20]
   14000a28c:	mov    BYTE PTR [rax+rdx*1],r14b
   14000a290:	mov    QWORD PTR [rbp-0x10],rbx
   14000a294:	lea    rax,[rbp-0x20]
   14000a298:	cmp    QWORD PTR [rbp-0x8],0x10
   14000a29d:	cmovae rax,QWORD PTR [rbp-0x20]
   14000a2a2:	mov    BYTE PTR [rax+rbx*1],0x0
   14000a2a6:	mov    r9,QWORD PTR [rbp-0x8]
   14000a2aa:	mov    rdx,QWORD PTR [rbp-0x10]
   14000a2ae:	lea    rcx,[rbp-0x20]
   14000a2b2:	cmp    r9,0x10
   14000a2b6:	cmovae rcx,QWORD PTR [rbp-0x20]
   14000a2bb:	lea    r8,[rbp-0x20]
   14000a2bf:	cmovae r8,QWORD PTR [rbp-0x20]
   14000a2c4:	lea    r9,[rcx+rdx*1]
   14000a2c8:	lea    rdx,[rdi+0x84]
   14000a2cf:	lea    rax,[rbp+0x38]
   14000a2d3:	mov    QWORD PTR [rsp+0x38],rax
   14000a2d8:	lea    rax,[rbp-0x2f]
   14000a2dc:	mov    QWORD PTR [rsp+0x30],rax
   14000a2e1:	lea    rax,[rbp-0x30]
   14000a2e5:	mov    QWORD PTR [rsp+0x28],rax
   14000a2ea:	lea    rax,[rbp+0x30]
   14000a2ee:	mov    QWORD PTR [rsp+0x20],rax
   14000a2f3:	mov    rcx,QWORD PTR [rdi+0x78]
   14000a2f7:	call   QWORD PTR [rip+0xed73]        # 0x140019070
   14000a2fd:	test   eax,eax
   14000a2ff:	js     0x14000a3db
   14000a305:	cmp    eax,0x1
   14000a308:	jle    0x14000a31c
   14000a30a:	cmp    eax,0x3
   14000a30d:	jne    0x14000a3db
   14000a313:	cmp    QWORD PTR [rbp-0x10],0x1
   14000a318:	jae    0x14000a358
   14000a31a:	jmp    0x14000a346
   14000a31c:	lea    rax,[rbp-0x30]
   14000a320:	lea    rcx,[rbp-0x20]
   14000a324:	cmp    QWORD PTR [rbp+0x38],rax
   14000a328:	jne    0x14000a37e
   14000a32a:	lea    rax,[rbp-0x20]
   14000a32e:	cmp    QWORD PTR [rbp-0x8],0x10
   14000a333:	cmovae rax,QWORD PTR [rbp-0x20]
   14000a338:	mov    r8,QWORD PTR [rbp+0x30]
   14000a33c:	sub    r8,rax
   14000a33f:	xor    edx,edx
   14000a341:	call   0x1400073f0
   14000a346:	mov    rcx,QWORD PTR [rdi+0x90]
   14000a34d:	call   QWORD PTR [rip+0xeebd]        # 0x140019210
   14000a353:	jmp    0x14000a212
   14000a358:	lea    r8,[rbp-0x20]
   14000a35c:	cmp    QWORD PTR [rbp-0x8],0x10
   14000a361:	cmovae r8,QWORD PTR [rbp-0x20]
   14000a366:	mov    edx,0x1
   14000a36b:	mov    r9d,edx
   14000a36e:	lea    rcx,[rbp-0x30]
   14000a372:	call   QWORD PTR [rip+0xeef8]        # 0x140019270
   14000a378:	movzx  esi,BYTE PTR [rbp-0x30]
   14000a37c:	jmp    0x14000a3db
   14000a37e:	cmp    QWORD PTR [rbp-0x8],0x10
   14000a383:	cmovae rcx,QWORD PTR [rbp-0x20]
   14000a388:	mov    eax,DWORD PTR [rbp-0x10]
   14000a38b:	mov    rdx,QWORD PTR [rbp+0x30]
   14000a38f:	sub    eax,edx
   14000a391:	add    eax,ecx
   14000a393:	movsxd rbx,eax
   14000a396:	test   eax,eax
   14000a398:	jle    0x14000a378
   14000a39a:	nop    WORD PTR [rax+rax*1+0x0]
   14000a3a0:	dec    rbx
   14000a3a3:	movsx  ecx,BYTE PTR [rbx+rdx*1]
   14000a3a7:	mov    rdx,QWORD PTR [rdi+0x90]
   14000a3ae:	call   QWORD PTR [rip+0xee9c]        # 0x140019250
   14000a3b4:	test   rbx,rbx
   14000a3b7:	jle    0x14000a378
   14000a3b9:	mov    rdx,QWORD PTR [rbp+0x30]
   14000a3bd:	jmp    0x14000a3a0
   14000a3bf:	lea    rcx,[rip+0x108d2]        # 0x14001ac98
   14000a3c6:	call   QWORD PTR [rip+0xee14]        # 0x1400191e0
   14000a3cc:	int3   
   14000a3cd:	lea    rcx,[rip+0x108c4]        # 0x14001ac98
   14000a3d4:	call   QWORD PTR [rip+0xee06]        # 0x1400191e0
   14000a3da:	nop
   14000a3db:	cmp    QWORD PTR [rbp-0x8],0x10
   14000a3e0:	jb     0x14000a3eb
   14000a3e2:	mov    rcx,QWORD PTR [rbp-0x20]
   14000a3e6:	call   0x14001716e
   14000a3eb:	mov    eax,esi
   14000a3ed:	mov    rbx,QWORD PTR [rsp+0xb0]
   14000a3f5:	add    rsp,0x70
   14000a3f9:	pop    r15
   14000a3fb:	pop    r14
   14000a3fd:	pop    rdi
   14000a3fe:	pop    rsi
   14000a3ff:	pop    rbp
   14000a400:	ret    
   14000a401:	int3   
   14000a402:	int3   
   14000a403:	int3   
   14000a404:	int3   
   14000a405:	int3   
   14000a406:	int3   
   14000a407:	int3   
   14000a408:	int3   
   14000a409:	int3   
   14000a40a:	int3   
   14000a40b:	int3   
   14000a40c:	int3   
   14000a40d:	int3   
   14000a40e:	int3   
   14000a40f:	int3   
   14000a410:	rex push rbx
   14000a412:	sub    rsp,0x20
   14000a416:	mov    rax,QWORD PTR [rcx+0x38]
   14000a41a:	mov    rbx,rcx
   14000a41d:	mov    rcx,QWORD PTR [rax]
   14000a420:	test   rcx,rcx
   14000a423:	je     0x14000a43d
   14000a425:	mov    rax,QWORD PTR [rbx+0x50]
   14000a429:	movsxd rdx,DWORD PTR [rax]
   14000a42c:	add    rdx,rcx
   14000a42f:	cmp    rcx,rdx
   14000a432:	jae    0x14000a43d
   14000a434:	movzx  eax,BYTE PTR [rcx]
   14000a437:	add    rsp,0x20
   14000a43b:	pop    rbx
   14000a43c:	ret    
   14000a43d:	mov    rax,QWORD PTR [rbx]
   14000a440:	mov    rcx,rbx
   14000a443:	mov    QWORD PTR [rsp+0x30],rdi
   14000a448:	call   QWORD PTR [rax+0x38]
   14000a44b:	mov    edi,eax
   14000a44d:	cmp    eax,0xffffffff
   14000a450:	jne    0x14000a45f
   14000a452:	or     eax,eax
   14000a454:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a459:	add    rsp,0x20
   14000a45d:	pop    rbx
   14000a45e:	ret    
   14000a45f:	mov    rax,QWORD PTR [rbx]
   14000a462:	mov    edx,edi
   14000a464:	mov    rcx,rbx
   14000a467:	call   QWORD PTR [rax+0x20]
   14000a46a:	mov    eax,edi
   14000a46c:	mov    rdi,QWORD PTR [rsp+0x30]
   14000a471:	add    rsp,0x20
   14000a475:	pop    rbx
   14000a476:	ret    
   14000a477:	int3   
   14000a478:	int3   
   14000a479:	int3   
   14000a47a:	int3   
   14000a47b:	int3   
   14000a47c:	int3   
   14000a47d:	int3   
   14000a47e:	int3   
   14000a47f:	int3   
   14000a480:	and    rcx,0xfffffffffffffffe
   14000a484:	mov    rax,rcx
   14000a487:	ret    
   14000a488:	int3   
   14000a489:	int3   
   14000a48a:	int3   
   14000a48b:	int3   
   14000a48c:	int3   
   14000a48d:	int3   
   14000a48e:	int3   
   14000a48f:	int3   
   14000a490:	mov    QWORD PTR [rsp+0x10],rbx
   14000a495:	push   rdi
   14000a496:	sub    rsp,0x20
   14000a49a:	mov    rdi,QWORD PTR [rcx+0x18]
   14000a49e:	xor    eax,eax
   14000a4a0:	mov    rbx,rcx
   14000a4a3:	mov    QWORD PTR [rcx+0x24],rax
   14000a4a7:	cmp    BYTE PTR [rdi],al
   14000a4a9:	je     0x14000a565
   14000a4af:	mov    QWORD PTR [rsp+0x30],rsi
   14000a4b4:	nop    DWORD PTR [rax+0x0]
   14000a4b8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a4c0:	movsxd r8,DWORD PTR [rbx+0x24]
   14000a4c4:	movzx  eax,BYTE PTR [r8+rdi*1]
   14000a4c9:	sub    al,0x9
   14000a4cb:	cmp    al,0x2
   14000a4cd:	jbe    0x14000a560
   14000a4d3:	inc    DWORD PTR [rbx+0x28]
   14000a4d6:	movzx  eax,BYTE PTR [r8+rdi*1]
   14000a4db:	mov    esi,DWORD PTR [rbx+0x28]
   14000a4de:	cmp    eax,0xc1
   14000a4e3:	jbe    0x14000a54f
   14000a4e5:	mov    ecx,eax
   14000a4e7:	xor    ecx,0xff
   14000a4ed:	bsr    edx,ecx
   14000a4f0:	mov    ecx,0x20
   14000a4f5:	sub    ecx,edx
   14000a4f7:	or     edx,0xffffffff
   14000a4fa:	shr    edx,cl
   14000a4fc:	movzx  ecx,BYTE PTR [rdi+r8*1+0x1]
   14000a502:	xor    cl,0x80
   14000a505:	and    eax,edx
   14000a507:	cmp    cl,0x3f
   14000a50a:	ja     0x14000a537
   14000a50c:	nop    DWORD PTR [rax+0x0]
   14000a510:	movsxd rcx,r8d
   14000a513:	xor    eax,0x2
   14000a516:	inc    r8d
   14000a519:	movzx  edx,BYTE PTR [rcx+rdi*1+0x1]
   14000a51e:	shl    eax,0x6
   14000a521:	movsxd rcx,r8d
   14000a524:	xor    eax,edx
   14000a526:	mov    DWORD PTR [rbx+0x24],r8d
   14000a52a:	movzx  edx,BYTE PTR [rcx+rdi*1+0x1]
   14000a52f:	xor    dl,0x80
   14000a532:	cmp    dl,0x3f
   14000a535:	jbe    0x14000a510
   14000a537:	cmp    eax,0x1100
   14000a53c:	jb     0x14000a54f
   14000a53e:	mov    ecx,eax
   14000a540:	call   0x140007f70
   14000a545:	test   al,al
   14000a547:	je     0x14000a54f
   14000a549:	lea    eax,[rsi+0x1]
   14000a54c:	mov    DWORD PTR [rbx+0x28],eax
   14000a54f:	inc    DWORD PTR [rbx+0x24]
   14000a552:	movsxd rax,DWORD PTR [rbx+0x24]
   14000a556:	cmp    BYTE PTR [rax+rdi*1],0x0
   14000a55a:	jne    0x14000a4c0
   14000a560:	mov    rsi,QWORD PTR [rsp+0x30]
   14000a565:	mov    rbx,QWORD PTR [rsp+0x38]
   14000a56a:	add    rsp,0x20
   14000a56e:	pop    rdi
   14000a56f:	ret    
   14000a570:	cmp    DWORD PTR [rcx],edx
   14000a572:	cmovge edx,DWORD PTR [rcx]
   14000a575:	mov    DWORD PTR [rcx],edx
   14000a577:	ret    
   14000a578:	int3   
   14000a579:	int3   
   14000a57a:	int3   
   14000a57b:	int3   
   14000a57c:	int3   
   14000a57d:	int3   
   14000a57e:	int3   
   14000a57f:	int3   
   14000a580:	rex push rdi
   14000a582:	sub    rsp,0x160
   14000a589:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14000a592:	mov    QWORD PTR [rsp+0x170],rbx
   14000a59a:	mov    rdi,rcx
   14000a59d:	xor    ebx,ebx
   14000a59f:	mov    DWORD PTR [rsp+0x20],ebx
   14000a5a3:	lea    r9,[rsp+0x50]
   14000a5a8:	lea    r8d,[rbx+0x1]
   14000a5ac:	lea    rdx,[rip+0xfec9]        # 0x14001a47c
   14000a5b3:	lea    rcx,[rip+0xfec6]        # 0x14001a480
   14000a5ba:	call   QWORD PTR [rip+0xea58]        # 0x140019018
   14000a5c0:	test   eax,eax
   14000a5c2:	jne    0x14000a61e
   14000a5c4:	lea    rcx,[rsp+0x30]
   14000a5c9:	call   0x140007950
   14000a5ce:	mov    rbx,rax
   14000a5d1:	lea    rdx,[rip+0xfeb0]        # 0x14001a488
   14000a5d8:	mov    rcx,QWORD PTR [rip+0xebd9]        # 0x1400191b8
   14000a5df:	call   0x1400014f0
   14000a5e4:	mov    rcx,rax
   14000a5e7:	mov    rdx,rbx
   14000a5ea:	call   0x140001320
   14000a5ef:	mov    rcx,rax
   14000a5f2:	lea    rdx,[rip+0xffffffffffff8557]        # 0x140002b50
   14000a5f9:	call   QWORD PTR [rip+0xeb21]        # 0x140019120
   14000a5ff:	nop
   14000a600:	cmp    QWORD PTR [rsp+0x48],0x10
   14000a606:	jb     0x14000a612
   14000a608:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a60d:	call   0x14001716e
   14000a612:	mov    ecx,0x1
   14000a617:	call   QWORD PTR [rip+0xede3]        # 0x140019400
   14000a61d:	int3   
   14000a61e:	mov    QWORD PTR [rdi+0x18],0xf
   14000a626:	mov    QWORD PTR [rdi+0x10],rbx
   14000a62a:	mov    BYTE PTR [rdi],bl
   14000a62c:	cmp    BYTE PTR [rsp+0x50],bl
   14000a630:	je     0x14000a649
   14000a632:	lea    rax,[rsp+0x50]
   14000a637:	or     rbx,0xffffffffffffffff
   14000a63b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000a640:	inc    rbx
   14000a643:	cmp    BYTE PTR [rax+rbx*1],0x0
   14000a647:	jne    0x14000a640
   14000a649:	mov    r8,rbx
   14000a64c:	lea    rdx,[rsp+0x50]
   14000a651:	mov    rcx,rdi
   14000a654:	call   0x140006790
   14000a659:	mov    rax,rdi
   14000a65c:	mov    rbx,QWORD PTR [rsp+0x170]
   14000a664:	add    rsp,0x160
   14000a66b:	pop    rdi
   14000a66c:	ret    
   14000a66d:	int3   
   14000a66e:	int3   
   14000a66f:	int3   
   14000a670:	mov    eax,DWORD PTR [rcx]
   14000a672:	ret    
   14000a673:	int3   
   14000a674:	int3   
   14000a675:	int3   
   14000a676:	int3   
   14000a677:	int3   
   14000a678:	int3   
   14000a679:	int3   
   14000a67a:	int3   
   14000a67b:	int3   
   14000a67c:	int3   
   14000a67d:	int3   
   14000a67e:	int3   
   14000a67f:	int3   
   14000a680:	mov    eax,DWORD PTR [rcx]
   14000a682:	ret    
   14000a683:	int3   
   14000a684:	int3   
   14000a685:	int3   
   14000a686:	int3   
   14000a687:	int3   
   14000a688:	int3   
   14000a689:	int3   
   14000a68a:	int3   
   14000a68b:	int3   
   14000a68c:	int3   
   14000a68d:	int3   
   14000a68e:	int3   
   14000a68f:	int3   
   14000a690:	mov    QWORD PTR [rsp+0x10],rbx
   14000a695:	mov    BYTE PTR [rsp+0x8],cl
   14000a699:	push   rbp
   14000a69a:	push   rsi
   14000a69b:	push   rdi
   14000a69c:	push   r12
   14000a69e:	push   r13
   14000a6a0:	push   r14
   14000a6a2:	push   r15
   14000a6a4:	sub    rsp,0x60
   14000a6a8:	mov    r15,r9
   14000a6ab:	xor    r9d,r9d
   14000a6ae:	mov    r11d,r8d
   14000a6b1:	test   r15,r15
   14000a6b4:	movzx  r8d,cl
   14000a6b8:	mov    ecx,r9d
   14000a6bb:	cmove  r11d,r9d
   14000a6bf:	mov    rsi,rdx
   14000a6c2:	mov    DWORD PTR [rsp+0x24],ecx
   14000a6c6:	mov    DWORD PTR [rsp+0xb0],r11d
   14000a6ce:	test   r11d,r11d
   14000a6d1:	je     0x14000abfd
   14000a6d7:	mov    edx,DWORD PTR [rsp+0xd8]
   14000a6de:	mov    ebp,DWORD PTR [rsp+0xb0]
   14000a6e5:	mov    rbx,QWORD PTR [rsp+0xb8]
   14000a6ed:	nop    DWORD PTR [rax]
   14000a6f0:	mov    r13,QWORD PTR [r15]
   14000a6f3:	test   r13,r13
   14000a6f6:	je     0x14000abea
   14000a6fc:	cmp    BYTE PTR [r13+0x0],0x2d
   14000a701:	jne    0x14000ab88
   14000a707:	movzx  eax,BYTE PTR [r13+0x1]
   14000a70c:	lea    r14,[r13+0x1]
   14000a710:	test   al,al
   14000a712:	je     0x14000ab88
   14000a718:	cmp    al,0x2d
   14000a71a:	jne    0x14000a734
   14000a71c:	cmp    BYTE PTR [r13+0x2],0x0
   14000a721:	je     0x14000abb2
   14000a727:	cmp    al,al
   14000a729:	jne    0x14000a734
   14000a72b:	xor    r10b,r10b
   14000a72e:	lea    r12,[r13+0x2]
   14000a732:	jmp    0x14000a73a
   14000a734:	mov    r10b,0x1
   14000a737:	mov    r12,r14
   14000a73a:	movzx  edi,BYTE PTR [rsp+0xc8]
   14000a742:	cmp    r11d,0x1
   14000a746:	mov    DWORD PTR [rsp+0x20],r10d
   14000a74b:	seta   r11b
   14000a74f:	mov    BYTE PTR [rsp+0xb8],r11b
   14000a757:	test   r10b,r10b
   14000a75a:	je     0x14000a765
   14000a75c:	test   dil,dil
   14000a75f:	je     0x14000a937
   14000a765:	mov    ebp,r9d
   14000a768:	mov    rdi,r9
   14000a76b:	mov    r9,QWORD PTR [rsi+0x10]
   14000a76f:	test   r9,r9
   14000a772:	je     0x14000a7cb
   14000a774:	mov    rcx,r9
   14000a777:	nop    WORD PTR [rax+rax*1+0x0]
   14000a780:	movzx  edx,BYTE PTR [rcx]
   14000a783:	mov    r8,r12
   14000a786:	test   dl,dl
   14000a788:	je     0x14000a7a5
   14000a78a:	nop    WORD PTR [rax+rax*1+0x0]
   14000a790:	movzx  eax,BYTE PTR [r8]
   14000a794:	inc    r8
   14000a797:	inc    rcx
   14000a79a:	cmp    dl,al
   14000a79c:	jne    0x14000a7b1
   14000a79e:	movzx  edx,BYTE PTR [rcx]
   14000a7a1:	test   dl,dl
   14000a7a3:	jne    0x14000a790
   14000a7a5:	movzx  eax,BYTE PTR [r8]
   14000a7a9:	test   al,al
   14000a7ab:	je     0x14000a7c4
   14000a7ad:	cmp    al,0x3d
   14000a7af:	je     0x14000a7c4
   14000a7b1:	inc    rdi
   14000a7b4:	inc    ebp
   14000a7b6:	lea    rax,[rdi+rdi*4]
   14000a7ba:	mov    rcx,QWORD PTR [rsi+rax*8+0x10]
   14000a7bf:	test   rcx,rcx
   14000a7c2:	jne    0x14000a780
   14000a7c4:	mov    edx,DWORD PTR [rsp+0xd8]
   14000a7cb:	lea    rax,[rdi+rdi*4]
   14000a7cf:	cmp    QWORD PTR [rsi+rax*8+0x10],0x0
   14000a7d5:	jne    0x14000a8e1
   14000a7db:	test   edx,edx
   14000a7dd:	jle    0x14000a8e1
   14000a7e3:	xor    eax,eax
   14000a7e5:	mov    ebx,eax
   14000a7e7:	mov    r11d,eax
   14000a7ea:	test   r9,r9
   14000a7ed:	je     0x14000a84d
   14000a7ef:	movsxd r8,edx
   14000a7f2:	movzx  eax,BYTE PTR [r9]
   14000a7f6:	mov    rcx,r12
   14000a7f9:	mov    rdx,r9
   14000a7fc:	test   al,al
   14000a7fe:	je     0x14000a828
   14000a800:	cmp    al,BYTE PTR [rcx]
   14000a802:	jne    0x14000a815
   14000a804:	movzx  eax,BYTE PTR [r9+0x1]
   14000a809:	inc    r9
   14000a80c:	inc    rcx
   14000a80f:	test   al,al
   14000a811:	jne    0x14000a800
   14000a813:	jmp    0x14000a828
   14000a815:	cmp    BYTE PTR [r9],0x0
   14000a819:	je     0x14000a828
   14000a81b:	test   r8,r8
   14000a81e:	jle    0x14000a833
   14000a820:	sub    r9,rdx
   14000a823:	cmp    r9,r8
   14000a826:	jl     0x14000a833
   14000a828:	movzx  eax,BYTE PTR [rcx]
   14000a82b:	test   al,al
   14000a82d:	je     0x14000a846
   14000a82f:	cmp    al,0x3d
   14000a831:	je     0x14000a846
   14000a833:	inc    r11
   14000a836:	inc    ebx
   14000a838:	lea    rax,[r11+r11*4]
   14000a83c:	mov    r9,QWORD PTR [rsi+rax*8+0x10]
   14000a841:	test   r9,r9
   14000a844:	jne    0x14000a7f2
   14000a846:	mov    edx,DWORD PTR [rsp+0xd8]
   14000a84d:	lea    rax,[r11+r11*4]
   14000a851:	cmp    QWORD PTR [rsi+rax*8+0x10],0x0
   14000a857:	je     0x14000a8d8
   14000a859:	lea    r8,[r11+0x1]
   14000a85d:	lea    rax,[r8+r8*4]
   14000a861:	mov    rcx,QWORD PTR [rsi+rax*8+0x10]
   14000a866:	test   rcx,rcx
   14000a869:	je     0x14000a8c7
   14000a86b:	movsxd r10,edx
   14000a86e:	xchg   ax,ax
   14000a870:	movzx  eax,BYTE PTR [rcx]
   14000a873:	mov    rdx,r12
   14000a876:	mov    r9,rcx
   14000a879:	test   al,al
   14000a87b:	je     0x14000a8a6
   14000a87d:	nop    DWORD PTR [rax]
   14000a880:	cmp    al,BYTE PTR [rdx]
   14000a882:	jne    0x14000a894
   14000a884:	movzx  eax,BYTE PTR [rcx+0x1]
   14000a888:	inc    rcx
   14000a88b:	inc    rdx
   14000a88e:	test   al,al
   14000a890:	jne    0x14000a880
   14000a892:	jmp    0x14000a8a6
   14000a894:	cmp    BYTE PTR [rcx],0x0
   14000a897:	je     0x14000a8a6
   14000a899:	test   r10,r10
   14000a89c:	jle    0x14000a8b1
   14000a89e:	sub    rcx,r9
   14000a8a1:	cmp    rcx,r10
   14000a8a4:	jl     0x14000a8b1
   14000a8a6:	movzx  eax,BYTE PTR [rdx]
   14000a8a9:	test   al,al
   14000a8ab:	je     0x14000a8c2
   14000a8ad:	cmp    al,0x3d
   14000a8af:	je     0x14000a8c2
   14000a8b1:	inc    r8
   14000a8b4:	lea    rax,[r8+r8*4]
   14000a8b8:	mov    rcx,QWORD PTR [rsi+rax*8+0x10]
   14000a8bd:	test   rcx,rcx
   14000a8c0:	jne    0x14000a870
   14000a8c2:	mov    r10d,DWORD PTR [rsp+0x20]
   14000a8c7:	lea    rax,[r8+r8*4]
   14000a8cb:	cmp    QWORD PTR [rsi+rax*8+0x10],0x0
   14000a8d1:	jne    0x14000a8d8
   14000a8d3:	mov    ebp,ebx
   14000a8d5:	mov    rdi,r11
   14000a8d8:	movzx  r11d,BYTE PTR [rsp+0xb8]
   14000a8e1:	lea    rax,[rdi+rdi*4]
   14000a8e5:	movzx  r10d,r10b
   14000a8e9:	mov    r9d,0x0
   14000a8ef:	cmp    QWORD PTR [rsi+rax*8+0x10],0x0
   14000a8f5:	movzx  eax,BYTE PTR [r12]
   14000a8fa:	mov    rbx,r12
   14000a8fd:	cmovne r10d,r9d
   14000a901:	xor    dil,dil
   14000a904:	mov    DWORD PTR [rsp+0x20],r10d
   14000a909:	test   al,al
   14000a90b:	je     0x14000a91f
   14000a90d:	nop    DWORD PTR [rax]
   14000a910:	cmp    al,0x3d
   14000a912:	je     0x14000a924
   14000a914:	movzx  eax,BYTE PTR [rbx+0x1]
   14000a918:	inc    rbx
   14000a91b:	test   al,al
   14000a91d:	jne    0x14000a910
   14000a91f:	cmp    BYTE PTR [rbx],0x3d
   14000a922:	jne    0x14000a929
   14000a924:	inc    rbx
   14000a927:	jmp    0x14000a937
   14000a929:	test   r11b,r11b
   14000a92c:	je     0x14000a934
   14000a92e:	mov    rbx,QWORD PTR [r15+0x8]
   14000a932:	jmp    0x14000a937
   14000a934:	mov    rbx,r9
   14000a937:	test   r10b,r10b
   14000a93a:	je     0x14000a9a9
   14000a93c:	movzx  edx,BYTE PTR [r14]
   14000a940:	mov    r13,r14
   14000a943:	test   dl,dl
   14000a945:	je     0x14000ab3f
   14000a94b:	mov    rax,QWORD PTR [rsi+0x8]
   14000a94f:	mov    ebp,r9d
   14000a952:	mov    r8,r9
   14000a955:	test   rax,rax
   14000a958:	je     0x14000a98d
   14000a95a:	nop    WORD PTR [rax+rax*1+0x0]
   14000a960:	movzx  ecx,BYTE PTR [rax]
   14000a963:	test   cl,cl
   14000a965:	je     0x14000a976
   14000a967:	cmp    cl,dl
   14000a969:	je     0x14000a98d
   14000a96b:	movzx  ecx,BYTE PTR [rax+0x1]
   14000a96f:	inc    rax
   14000a972:	test   cl,cl
   14000a974:	jne    0x14000a967
   14000a976:	cmp    BYTE PTR [rax],dl
   14000a978:	je     0x14000a98d
   14000a97a:	inc    r8
   14000a97d:	inc    ebp
   14000a97f:	lea    rax,[r8+r8*4]
   14000a983:	mov    rax,QWORD PTR [rsi+rax*8+0x8]
   14000a988:	test   rax,rax
   14000a98b:	jne    0x14000a960
   14000a98d:	inc    r14
   14000a990:	cmp    BYTE PTR [r14],0x0
   14000a994:	jne    0x14000a9a6
   14000a996:	test   r11b,r11b
   14000a999:	je     0x14000a9a1
   14000a99b:	mov    rbx,QWORD PTR [r15+0x8]
   14000a99f:	jmp    0x14000a9a9
   14000a9a1:	mov    rbx,r9
   14000a9a4:	jmp    0x14000a9a9
   14000a9a6:	mov    rbx,r14
   14000a9a9:	movsxd rax,ebp
   14000a9ac:	lea    rcx,[rax+rax*4]
   14000a9b0:	cmp    QWORD PTR [rsi+rcx*8+0x8],0x0
   14000a9b6:	lea    r8,[rsi+rcx*8]
   14000a9ba:	jne    0x14000aa11
   14000a9bc:	mov    rax,QWORD PTR [rsi+0x8]
   14000a9c0:	mov    ebp,r9d
   14000a9c3:	mov    rcx,r9
   14000a9c6:	test   rax,rax
   14000a9c9:	je     0x14000a9f5
   14000a9cb:	mov    rdx,rsi
   14000a9ce:	xchg   ax,ax
   14000a9d0:	cmp    BYTE PTR [rax],0x0
   14000a9d3:	jne    0x14000a9de
   14000a9d5:	mov    rax,QWORD PTR [rdx+0x10]
   14000a9d9:	cmp    BYTE PTR [rax],0x0
   14000a9dc:	je     0x14000a9f5
   14000a9de:	inc    rcx
   14000a9e1:	inc    ebp
   14000a9e3:	lea    rax,[rcx+rcx*4]
   14000a9e7:	lea    rdx,[rsi+rax*8]
   14000a9eb:	mov    rax,QWORD PTR [rsi+rax*8+0x8]
   14000a9f0:	test   rax,rax
   14000a9f3:	jne    0x14000a9d0
   14000a9f5:	lea    rax,[rcx+rcx*4]
   14000a9f9:	cmp    QWORD PTR [rsi+rax*8+0x8],0x0
   14000a9ff:	jne    0x14000aa06
   14000aa01:	mov    r8,r9
   14000aa04:	jmp    0x14000aa11
   14000aa06:	movsxd rax,ebp
   14000aa09:	lea    rcx,[rax+rax*4]
   14000aa0d:	lea    r8,[rsi+rcx*8]
   14000aa11:	test   r8,r8
   14000aa14:	je     0x14000ab20
   14000aa1a:	lea    rax,[rsp+0x28]
   14000aa1f:	mov    ecx,0x1
   14000aa24:	mov    QWORD PTR [rsp+0x38],r8
   14000aa29:	or     rax,0x1
   14000aa2d:	mov    QWORD PTR [rsp+0x40],r13
   14000aa32:	mov    QWORD PTR [rsp+0x48],rbx
   14000aa37:	mov    QWORD PTR [rsp+0x30],rax
   14000aa3c:	mov    QWORD PTR [rsp+0x28],rax
   14000aa41:	mov    DWORD PTR [rsp+0x50],ecx
   14000aa45:	cmp    BYTE PTR [r13+0x0],0x2d
   14000aa4a:	jne    0x14000aa6a
   14000aa4c:	movzx  eax,BYTE PTR [r14]
   14000aa50:	test   al,al
   14000aa52:	je     0x14000aa6a
   14000aa54:	cmp    al,0x3d
   14000aa56:	je     0x14000aa6a
   14000aa58:	inc    ecx
   14000aa5a:	movsxd rax,ecx
   14000aa5d:	mov    DWORD PTR [rsp+0x50],ecx
   14000aa61:	movzx  eax,BYTE PTR [rax+r13*1]
   14000aa66:	test   al,al
   14000aa68:	jne    0x14000aa54
   14000aa6a:	movzx  edx,BYTE PTR [rsp+0xd0]
   14000aa72:	lea    rcx,[rsp+0x28]
   14000aa77:	call   QWORD PTR [r8+0x18]
   14000aa7b:	test   eax,eax
   14000aa7d:	je     0x14000aaf9
   14000aa7f:	dec    eax
   14000aa81:	je     0x14000aa92
   14000aa83:	dec    eax
   14000aa85:	je     0x14000aaf9
   14000aa87:	dec    eax
   14000aa89:	jne    0x14000ab00
   14000aa8b:	xor    al,al
   14000aa8d:	jmp    0x14000ac40
   14000aa92:	test   rbx,rbx
   14000aa95:	je     0x14000aaf2
   14000aa97:	cmp    BYTE PTR [rsp+0xb8],0x0
   14000aa9f:	je     0x14000aaf2
   14000aaa1:	cmp    rbx,QWORD PTR [r15+0x8]
   14000aaa5:	jne    0x14000aaf2
   14000aaa7:	xor    eax,eax
   14000aaa9:	mov    edx,eax
   14000aaab:	mov    eax,DWORD PTR [rsp+0x24]
   14000aaaf:	neg    eax
   14000aab1:	movsxd r8,eax
   14000aab4:	jns    0x14000aada
   14000aab6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000aac0:	mov    rcx,QWORD PTR [r15+rdx*8]
   14000aac4:	mov    rax,QWORD PTR [r15+rdx*8-0x8]
   14000aac9:	dec    rdx
   14000aacc:	mov    QWORD PTR [r15+rdx*8+0x8],rax
   14000aad1:	mov    QWORD PTR [r15+rdx*8],rcx
   14000aad5:	cmp    rdx,r8
   14000aad8:	jg     0x14000aac0
   14000aada:	mov    eax,DWORD PTR [rsp+0xb0]
   14000aae1:	test   eax,eax
   14000aae3:	jle    0x14000aaee
   14000aae5:	dec    eax
   14000aae7:	mov    DWORD PTR [rsp+0xb0],eax
   14000aaee:	add    r15,0x8
   14000aaf2:	mov    BYTE PTR [rsp+0x20],0x0
   14000aaf7:	jmp    0x14000ab00
   14000aaf9:	xor    eax,eax
   14000aafb:	mov    QWORD PTR [rsp+0x48],rax
   14000ab00:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000ab08:	lea    rdx,[rsp+0x28]
   14000ab0d:	mov    rax,QWORD PTR [rcx]
   14000ab10:	call   QWORD PTR [rax+0x8]
   14000ab13:	test   al,al
   14000ab15:	je     0x14000aa8b
   14000ab1b:	mov    r10d,DWORD PTR [rsp+0x20]
   14000ab20:	movzx  r11d,BYTE PTR [rsp+0xb8]
   14000ab29:	mov    edx,DWORD PTR [rsp+0xd8]
   14000ab30:	mov    r9d,0x0
   14000ab36:	test   r10b,r10b
   14000ab39:	jne    0x14000a75c
   14000ab3f:	mov    ecx,DWORD PTR [rsp+0x24]
   14000ab43:	mov    rdx,r9
   14000ab46:	mov    eax,ecx
   14000ab48:	neg    eax
   14000ab4a:	movsxd r8,eax
   14000ab4d:	jns    0x14000ab6e
   14000ab4f:	nop
   14000ab50:	mov    rcx,QWORD PTR [r15+rdx*8]
   14000ab54:	mov    rax,QWORD PTR [r15+rdx*8-0x8]
   14000ab59:	dec    rdx
   14000ab5c:	mov    QWORD PTR [r15+rdx*8+0x8],rax
   14000ab61:	mov    QWORD PTR [r15+rdx*8],rcx
   14000ab65:	cmp    rdx,r8
   14000ab68:	jg     0x14000ab50
   14000ab6a:	mov    ecx,DWORD PTR [rsp+0x24]
   14000ab6e:	mov    r11d,DWORD PTR [rsp+0xb0]
   14000ab76:	mov    edx,DWORD PTR [rsp+0xd8]
   14000ab7d:	movzx  r8d,BYTE PTR [rsp+0xa0]
   14000ab86:	jmp    0x14000ab93
   14000ab88:	test   r8b,r8b
   14000ab8b:	je     0x14000abea
   14000ab8d:	inc    ecx
   14000ab8f:	mov    DWORD PTR [rsp+0x24],ecx
   14000ab93:	add    r15,0x8
   14000ab97:	test   r11d,r11d
   14000ab9a:	jle    0x14000abaa
   14000ab9c:	dec    r11d
   14000ab9f:	mov    DWORD PTR [rsp+0xb0],r11d
   14000aba7:	test   r11d,r11d
   14000abaa:	jne    0x14000a6f0
   14000abb0:	jmp    0x14000ac1d
   14000abb2:	mov    eax,ecx
   14000abb4:	mov    rdx,r9
   14000abb7:	neg    eax
   14000abb9:	movsxd r8,eax
   14000abbc:	jns    0x14000abde
   14000abbe:	xchg   ax,ax
   14000abc0:	mov    rcx,QWORD PTR [r15+rdx*8]
   14000abc4:	mov    rax,QWORD PTR [r15+rdx*8-0x8]
   14000abc9:	dec    rdx
   14000abcc:	mov    QWORD PTR [r15+rdx*8+0x8],rax
   14000abd1:	mov    QWORD PTR [r15+rdx*8],rcx
   14000abd5:	cmp    rdx,r8
   14000abd8:	jg     0x14000abc0
   14000abda:	mov    ecx,DWORD PTR [rsp+0x24]
   14000abde:	add    r15,0x8
   14000abe2:	test   r11d,r11d
   14000abe5:	jle    0x14000abfd
   14000abe7:	dec    r11d
   14000abea:	test   r11d,r11d
   14000abed:	jle    0x14000abfd
   14000abef:	cmp    QWORD PTR [r15],0x0
   14000abf3:	jne    0x14000abfa
   14000abf5:	mov    r11d,r9d
   14000abf8:	jmp    0x14000ac1d
   14000abfa:	test   r11d,r11d
   14000abfd:	jns    0x14000ac1d
   14000abff:	cmp    QWORD PTR [r15],0x0
   14000ac03:	mov    r11d,r9d
   14000ac06:	je     0x14000ac1d
   14000ac08:	mov    rax,r15
   14000ac0b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ac10:	lea    rax,[rax+0x8]
   14000ac14:	inc    r11d
   14000ac17:	cmp    QWORD PTR [rax],0x0
   14000ac1b:	jne    0x14000ac10
   14000ac1d:	mov    r10,QWORD PTR [rsp+0xc0]
   14000ac25:	movsxd rax,ecx
   14000ac28:	lea    edx,[rcx+r11*1]
   14000ac2c:	mov    r9,QWORD PTR [r10]
   14000ac2f:	shl    rax,0x3
   14000ac33:	mov    rcx,r10
   14000ac36:	sub    r15,rax
   14000ac39:	mov    r8,r15
   14000ac3c:	call   QWORD PTR [r9+0x10]
   14000ac40:	mov    rbx,QWORD PTR [rsp+0xa8]
   14000ac48:	add    rsp,0x60
   14000ac4c:	pop    r15
   14000ac4e:	pop    r14
   14000ac50:	pop    r13
   14000ac52:	pop    r12
   14000ac54:	pop    rdi
   14000ac55:	pop    rsi
   14000ac56:	pop    rbp
   14000ac57:	ret    
   14000ac58:	int3   
   14000ac59:	int3   
   14000ac5a:	int3   
   14000ac5b:	int3   
   14000ac5c:	int3   
   14000ac5d:	int3   
   14000ac5e:	int3   
   14000ac5f:	int3   
   14000ac60:	mov    QWORD PTR [rsp+0x18],rbx
   14000ac65:	push   rdi
   14000ac66:	sub    rsp,0x20
   14000ac6a:	cmp    BYTE PTR [rcx+0xd0],0x0
   14000ac71:	mov    rbx,rdx
   14000ac74:	mov    rdi,rcx
   14000ac77:	je     0x14000acdf
   14000ac79:	mov    rax,QWORD PTR [rdx]
   14000ac7c:	lea    rdx,[rip+0xf7cd]        # 0x14001a450
   14000ac83:	mov    r8d,0x1
   14000ac89:	mov    rcx,rbx
   14000ac8c:	mov    QWORD PTR [rsp+0x38],rsi
   14000ac91:	call   QWORD PTR [rax+0x8]
   14000ac94:	mov    esi,DWORD PTR [rdi+0xc0]
   14000ac9a:	test   esi,esi
   14000ac9c:	jns    0x14000acb6
   14000ac9e:	mov    rax,QWORD PTR [rbx]
   14000aca1:	lea    rdx,[rip+0xf7a8]        # 0x14001a450
   14000aca8:	mov    r8d,0x1
   14000acae:	mov    rcx,rbx
   14000acb1:	call   QWORD PTR [rax+0x8]
   14000acb4:	test   esi,esi
   14000acb6:	jle    0x14000acda
   14000acb8:	mov    BYTE PTR [rsp+0x30],0x20
   14000acbd:	test   esi,esi
   14000acbf:	jle    0x14000acda
   14000acc1:	mov    rax,QWORD PTR [rbx]
   14000acc4:	lea    rdx,[rsp+0x30]
   14000acc9:	mov    r8d,0x1
   14000accf:	mov    rcx,rbx
   14000acd2:	call   QWORD PTR [rax+0x8]
   14000acd5:	dec    rsi
   14000acd8:	jne    0x14000acc1
   14000acda:	mov    rsi,QWORD PTR [rsp+0x38]
   14000acdf:	mov    eax,DWORD PTR [rdi+0xcc]
   14000ace5:	inc    eax
   14000ace7:	and    eax,0xf
   14000acea:	cmp    eax,DWORD PTR [rdi+0xc8]
   14000acf0:	je     0x14000ad0d
   14000acf2:	movsxd rdx,eax
   14000acf5:	mov    DWORD PTR [rdi+0xcc],eax
   14000acfb:	mov    rax,QWORD PTR [rbx]
   14000acfe:	mov    r8d,DWORD PTR [rdi+rdx*4]
   14000ad02:	mov    rdx,QWORD PTR [rdi+rdx*8+0x40]
   14000ad07:	mov    rcx,rbx
   14000ad0a:	call   QWORD PTR [rax+0x8]
   14000ad0d:	mov    BYTE PTR [rdi+0xd0],0x1
   14000ad14:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ad19:	add    rsp,0x20
   14000ad1d:	pop    rdi
   14000ad1e:	ret    
   14000ad1f:	int3   
   14000ad20:	rex.W jmp QWORD PTR [rip+0xe559]        # 0x140019280
   14000ad27:	int3   
   14000ad28:	int3   
   14000ad29:	int3   
   14000ad2a:	int3   
   14000ad2b:	int3   
   14000ad2c:	int3   
   14000ad2d:	int3   
   14000ad2e:	int3   
   14000ad2f:	int3   
   14000ad30:	mov    r11,rsp
   14000ad33:	push   rbx
   14000ad34:	push   rsi
   14000ad35:	push   rdi
   14000ad36:	push   r12
   14000ad38:	push   r13
   14000ad3a:	push   r14
   14000ad3c:	push   r15
   14000ad3e:	sub    rsp,0x330
   14000ad45:	mov    QWORD PTR [r11-0x40],0xfffffffffffffffe
   14000ad4d:	mov    r12d,ecx
   14000ad50:	xor    r14d,r14d
   14000ad53:	mov    DWORD PTR [r11+0x18],r14d
   14000ad57:	mov    DWORD PTR [rsp+0x378],r14d
   14000ad5f:	mov    QWORD PTR [r11-0x280],0xf
   14000ad6a:	mov    QWORD PTR [r11-0x288],r14
   14000ad71:	mov    BYTE PTR [r11-0x298],r14b
   14000ad78:	mov    eax,r14d
   14000ad7b:	test   ecx,ecx
   14000ad7d:	setg   al
   14000ad80:	sub    r12d,eax
   14000ad83:	mov    DWORD PTR [rsp+0x370],r12d
   14000ad8b:	mov    eax,r14d
   14000ad8e:	test   r12d,r12d
   14000ad91:	setg   al
   14000ad94:	lea    r15,[rdx+rax*8]
   14000ad98:	mov    DWORD PTR [r11+0x20],0x1
   14000ada0:	mov    edx,0x1
   14000ada5:	mov    DWORD PTR [r11+0x24],edx
   14000ada9:	lea    r13,[rip+0xe730]        # 0x1400194e0
   14000adb0:	cmp    QWORD PTR [rip+0xe731],r14        # 0x1400194e8
   14000adb7:	je     0x14000adee
   14000adb9:	mov    ecx,r14d
   14000adbc:	mov    eax,r14d
   14000adbf:	nop
   14000adc0:	mov    r8d,DWORD PTR [rax+r13*1]
   14000adc4:	lea    eax,[r8+0x1]
   14000adc8:	cmp    eax,edx
   14000adca:	jb     0x14000add0
   14000adcc:	lea    edx,[r8+0x2]
   14000add0:	inc    rcx
   14000add3:	lea    rax,[rcx+rcx*4]
   14000add7:	lea    rax,[rax*8+0x0]
   14000addf:	cmp    QWORD PTR [rax+r13*1+0x8],0x0
   14000ade5:	jne    0x14000adc0
   14000ade7:	mov    DWORD PTR [rsp+0x38c],edx
   14000adee:	lea    rax,[rip+0xf60b]        # 0x14001a400
   14000adf5:	mov    QWORD PTR [rsp+0xc0],rax
   14000adfd:	lea    rax,[rsp+0x388]
   14000ae05:	mov    QWORD PTR [rsp+0xc8],rax
   14000ae0d:	mov    DWORD PTR [rsp+0x38],r14d
   14000ae12:	mov    BYTE PTR [rsp+0x30],0x0
   14000ae17:	mov    BYTE PTR [rsp+0x28],0x0
   14000ae1c:	lea    rax,[rsp+0xc0]
   14000ae24:	mov    QWORD PTR [rsp+0x20],rax
   14000ae29:	mov    r9,r15
   14000ae2c:	mov    r8d,r12d
   14000ae2f:	mov    rdx,r13
   14000ae32:	xor    ecx,ecx
   14000ae34:	call   0x14000a690
   14000ae39:	nop
   14000ae3a:	mov    ebx,DWORD PTR [rsp+0x38c]
   14000ae41:	mov    eax,0x30
   14000ae46:	mul    rbx
   14000ae49:	mov    rsi,0xffffffffffffffff
   14000ae50:	cmovo  rax,rsi
   14000ae54:	mov    rcx,rax
   14000ae57:	call   0x140016f64
   14000ae5c:	mov    rdi,rax
   14000ae5f:	test   rax,rax
   14000ae62:	je     0x14000ae9b
   14000ae64:	lea    r8d,[rbx-0x1]
   14000ae68:	test   r8d,r8d
   14000ae6b:	js     0x14000ae9e
   14000ae6d:	lea    rdx,[rax+0x18]
   14000ae71:	mov    QWORD PTR [rdx-0x8],r14
   14000ae75:	mov    QWORD PTR [rdx],r14
   14000ae78:	mov    QWORD PTR [rdx+0x8],r14
   14000ae7c:	mov    DWORD PTR [rdx+0x10],r14d
   14000ae80:	lea    rax,[rdx-0x18]
   14000ae84:	or     rax,0x1
   14000ae88:	mov    QWORD PTR [rdx-0x10],rax
   14000ae8c:	mov    QWORD PTR [rdx-0x18],rax
   14000ae90:	lea    rdx,[rdx+0x30]
   14000ae94:	dec    r8d
   14000ae97:	jns    0x14000ae71
   14000ae99:	jmp    0x14000ae9e
   14000ae9b:	mov    rdi,r14
   14000ae9e:	mov    QWORD PTR [rsp+0xf0],rdi
   14000aea6:	mov    ebx,DWORD PTR [rsp+0x388]
   14000aead:	mov    eax,0x30
   14000aeb2:	mul    rbx
   14000aeb5:	cmovo  rax,rsi
   14000aeb9:	mov    rcx,rax
   14000aebc:	call   0x140016f64
   14000aec1:	mov    rsi,rax
   14000aec4:	test   rax,rax
   14000aec7:	je     0x14000af0a
   14000aec9:	lea    r8d,[rbx-0x1]
   14000aecd:	test   r8d,r8d
   14000aed0:	js     0x14000af0d
   14000aed2:	lea    rdx,[rax+0x18]
   14000aed6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000aee0:	mov    QWORD PTR [rdx-0x8],r14
   14000aee4:	mov    QWORD PTR [rdx],r14
   14000aee7:	mov    QWORD PTR [rdx+0x8],r14
   14000aeeb:	mov    DWORD PTR [rdx+0x10],r14d
   14000aeef:	lea    rax,[rdx-0x18]
   14000aef3:	or     rax,0x1
   14000aef7:	mov    QWORD PTR [rdx-0x10],rax
   14000aefb:	mov    QWORD PTR [rdx-0x18],rax
   14000aeff:	lea    rdx,[rdx+0x30]
   14000af03:	dec    r8d
   14000af06:	jns    0x14000aee0
   14000af08:	jmp    0x14000af0d
   14000af0a:	mov    rsi,r14
   14000af0d:	mov    QWORD PTR [rsp+0xc0],rsi
   14000af15:	mov    QWORD PTR [rsp+0xa0],r14
   14000af1d:	mov    QWORD PTR [rsp+0xa8],r14
   14000af25:	mov    BYTE PTR [rsp+0xb0],0x0
   14000af2d:	lea    rax,[rip+0xf4ec]        # 0x14001a420
   14000af34:	mov    QWORD PTR [rsp+0x40],rax
   14000af39:	lea    rax,[rsp+0xa0]
   14000af41:	mov    QWORD PTR [rsp+0x48],rax
   14000af46:	mov    QWORD PTR [rsp+0x50],rdi
   14000af4b:	mov    QWORD PTR [rsp+0x58],rsi
   14000af50:	mov    DWORD PTR [rsp+0x60],0xffffffff
   14000af58:	mov    edx,r14d
   14000af5b:	mov    rcx,rsi
   14000af5e:	xchg   ax,ax
   14000af60:	mov    rax,r14
   14000af63:	cmp    QWORD PTR [rcx+0x10],rax
   14000af67:	cmovne rax,rcx
   14000af6b:	test   rax,rax
   14000af6e:	je     0x14000af78
   14000af70:	inc    edx
   14000af72:	add    rcx,0x30
   14000af76:	jmp    0x14000af60
   14000af78:	mov    DWORD PTR [rsp+0xa0],edx
   14000af7f:	mov    DWORD PTR [rsp+0x38],r14d
   14000af84:	mov    BYTE PTR [rsp+0x30],0x1
   14000af89:	mov    BYTE PTR [rsp+0x28],0x0
   14000af8e:	lea    rax,[rsp+0x40]
   14000af93:	mov    QWORD PTR [rsp+0x20],rax
   14000af98:	mov    r9,r15
   14000af9b:	mov    r8d,r12d
   14000af9e:	mov    rdx,r13
   14000afa1:	xor    ecx,ecx
   14000afa3:	call   0x14000a690
   14000afa8:	test   al,al
   14000afaa:	sete   al
   14000afad:	mov    BYTE PTR [rsp+0xb0],al
   14000afb4:	test   al,al
   14000afb6:	je     0x14000afeb
   14000afb8:	lea    rdx,[rip+0xfaa1]        # 0x14001aa60
   14000afbf:	mov    rcx,QWORD PTR [rip+0xe1f2]        # 0x1400191b8
   14000afc6:	call   0x1400014f0
   14000afcb:	mov    rcx,rax
   14000afce:	lea    rdx,[rip+0xffffffffffff7b7b]        # 0x140002b50
   14000afd5:	call   QWORD PTR [rip+0xe145]        # 0x140019120
   14000afdb:	mov    r8d,0x1
   14000afe1:	mov    DWORD PTR [rsp+0x378],r8d
   14000afe9:	jmp    0x14000aff3
   14000afeb:	mov    r8d,DWORD PTR [rsp+0x378]
   14000aff3:	cmp    DWORD PTR [rsp+0xa4],0x0
   14000affb:	je     0x14000b095
   14000b001:	lea    rdx,[rip+0xfa80]        # 0x14001aa88
   14000b008:	mov    rcx,QWORD PTR [rip+0xe1b1]        # 0x1400191c0
   14000b00f:	call   0x1400014f0
   14000b014:	mov    rcx,rax
   14000b017:	lea    rdx,[rip+0xffffffffffff7b32]        # 0x140002b50
   14000b01e:	call   QWORD PTR [rip+0xe0fc]        # 0x140019120
   14000b024:	mov    r12d,r14d
   14000b027:	cmp    DWORD PTR [rsp+0xa4],r14d
   14000b02f:	jle    0x14000b07f
   14000b031:	mov    r15,r14
   14000b034:	mov    rax,QWORD PTR [rsp+0xa8]
   14000b03c:	mov    rbx,QWORD PTR [rax+r15*1]
   14000b040:	lea    rdx,[rip+0xfa5d]        # 0x14001aaa4
   14000b047:	mov    rcx,QWORD PTR [rip+0xe162]        # 0x1400191b0
   14000b04e:	call   0x1400014f0
   14000b053:	mov    rcx,rax
   14000b056:	mov    rdx,rbx
   14000b059:	call   0x1400014f0
   14000b05e:	mov    rcx,rax
   14000b061:	lea    rdx,[rip+0xffffffffffff7ae8]        # 0x140002b50
   14000b068:	call   QWORD PTR [rip+0xe0b2]        # 0x140019120
   14000b06e:	inc    r12d
   14000b071:	lea    r15,[r15+0x8]
   14000b075:	cmp    r12d,DWORD PTR [rsp+0xa4]
   14000b07d:	jl     0x14000b034
   14000b07f:	mov    r8d,0x1
   14000b085:	mov    DWORD PTR [rsp+0x378],r8d
   14000b08d:	mov    r12d,DWORD PTR [rsp+0x370]
   14000b095:	lea    r15,[rdi+0x1b0]
   14000b09c:	mov    rcx,r14
   14000b09f:	cmp    QWORD PTR [r15+0x10],rcx
   14000b0a3:	cmovne rcx,r15
   14000b0a7:	mov    QWORD PTR [rsp+0xb8],rcx
   14000b0af:	test   rcx,rcx
   14000b0b2:	je     0x14000b121
   14000b0b4:	mov    edx,r14d
   14000b0b7:	cmp    QWORD PTR [rcx+0x10],rdx
   14000b0bb:	setne  dl
   14000b0be:	mov    rax,rcx
   14000b0c1:	add    rcx,0x8
   14000b0c5:	test   BYTE PTR [rcx],0x1
   14000b0c8:	jne    0x14000b0dc
   14000b0ca:	nop    WORD PTR [rax+rax*1+0x0]
   14000b0d0:	mov    rax,QWORD PTR [rcx]
   14000b0d3:	lea    rcx,[rax+0x8]
   14000b0d7:	test   BYTE PTR [rcx],0x1
   14000b0da:	je     0x14000b0d0
   14000b0dc:	test   BYTE PTR [rax],0x1
   14000b0df:	jne    0x14000b0eb
   14000b0e1:	inc    edx
   14000b0e3:	mov    rax,QWORD PTR [rax]
   14000b0e6:	test   BYTE PTR [rax],0x1
   14000b0e9:	je     0x14000b0e1
   14000b0eb:	cmp    edx,0x1
   14000b0ee:	jle    0x14000b121
   14000b0f0:	lea    rdx,[rip+0xf9b9]        # 0x14001aab0
   14000b0f7:	mov    rcx,QWORD PTR [rip+0xe0ba]        # 0x1400191b8
   14000b0fe:	call   0x1400014f0
   14000b103:	mov    rcx,rax
   14000b106:	lea    rdx,[rip+0xffffffffffff7a43]        # 0x140002b50
   14000b10d:	call   QWORD PTR [rip+0xe00d]        # 0x140019120
   14000b113:	mov    r8d,0x1
   14000b119:	mov    DWORD PTR [rsp+0x378],r8d
   14000b121:	lea    rax,[rdi+0xf0]
   14000b128:	mov    rbx,r14
   14000b12b:	cmp    QWORD PTR [rax+0x10],rbx
   14000b12f:	cmovne rbx,rax
   14000b133:	test   rbx,rbx
   14000b136:	je     0x14000b1a1
   14000b138:	mov    edx,r14d
   14000b13b:	cmp    QWORD PTR [rbx+0x10],rdx
   14000b13f:	setne  dl
   14000b142:	mov    rax,rbx
   14000b145:	lea    rcx,[rbx+0x8]
   14000b149:	test   BYTE PTR [rcx],0x1
   14000b14c:	jne    0x14000b15c
   14000b14e:	xchg   ax,ax
   14000b150:	mov    rax,QWORD PTR [rcx]
   14000b153:	lea    rcx,[rax+0x8]
   14000b157:	test   BYTE PTR [rcx],0x1
   14000b15a:	je     0x14000b150
   14000b15c:	test   BYTE PTR [rax],0x1
   14000b15f:	jne    0x14000b16b
   14000b161:	inc    edx
   14000b163:	mov    rax,QWORD PTR [rax]
   14000b166:	test   BYTE PTR [rax],0x1
   14000b169:	je     0x14000b161
   14000b16b:	cmp    edx,0x1
   14000b16e:	jle    0x14000b1a1
   14000b170:	lea    rdx,[rip+0xf989]        # 0x14001ab00
   14000b177:	mov    rcx,QWORD PTR [rip+0xe03a]        # 0x1400191b8
   14000b17e:	call   0x1400014f0
   14000b183:	mov    rcx,rax
   14000b186:	lea    rdx,[rip+0xffffffffffff79c3]        # 0x140002b50
   14000b18d:	call   QWORD PTR [rip+0xdf8d]        # 0x140019120
   14000b193:	mov    r8d,0x1
   14000b199:	mov    DWORD PTR [rsp+0x378],r8d
   14000b1a1:	cmp    QWORD PTR [rsp+0xb8],0x0
   14000b1aa:	jne    0x14000b1e2
   14000b1ac:	test   rbx,rbx
   14000b1af:	jne    0x14000b1e2
   14000b1b1:	lea    rdx,[rip+0xf998]        # 0x14001ab50
   14000b1b8:	mov    rcx,QWORD PTR [rip+0xdff9]        # 0x1400191b8
   14000b1bf:	call   0x1400014f0
   14000b1c4:	mov    rcx,rax
   14000b1c7:	lea    rdx,[rip+0xffffffffffff7982]        # 0x140002b50
   14000b1ce:	call   QWORD PTR [rip+0xdf4c]        # 0x140019120
   14000b1d4:	mov    r8d,0x1
   14000b1da:	mov    DWORD PTR [rsp+0x378],r8d
   14000b1e2:	test   r12d,r12d
   14000b1e5:	je     0x14000bd66
   14000b1eb:	lea    rax,[rdi+0x30]
   14000b1ef:	mov    rcx,r14
   14000b1f2:	cmp    QWORD PTR [rax+0x10],rcx
   14000b1f6:	cmovne rcx,rax
   14000b1fa:	test   rcx,rcx
   14000b1fd:	jne    0x14000bd66
   14000b203:	cmp    r8d,0x1
   14000b207:	je     0x14000bd66
   14000b20d:	lea    rax,[rdi+0x90]
   14000b214:	mov    rcx,r14
   14000b217:	cmp    QWORD PTR [rax+0x10],rcx
   14000b21b:	cmovne rcx,rax
   14000b21f:	test   rcx,rcx
   14000b222:	je     0x14000b257
   14000b224:	mov    rdx,QWORD PTR [rdi+0xb0]
   14000b22b:	cmp    BYTE PTR [rdx],0x0
   14000b22e:	jne    0x14000b235
   14000b230:	mov    r8,r14
   14000b233:	jmp    0x14000b24a
   14000b235:	or     r8,0xffffffffffffffff
   14000b239:	nop    DWORD PTR [rax+0x0]
   14000b240:	inc    r8
   14000b243:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000b248:	jne    0x14000b240
   14000b24a:	lea    rcx,[rsp+0xd0]
   14000b252:	call   0x140006790
   14000b257:	lea    rax,[rdi+0x60]
   14000b25b:	mov    rcx,r14
   14000b25e:	cmp    QWORD PTR [rax+0x10],rcx
   14000b262:	cmovne rcx,rax
   14000b266:	test   rcx,rcx
   14000b269:	jne    0x14000b289
   14000b26b:	mov    rdx,QWORD PTR [rip+0xdf4e]        # 0x1400191c0
   14000b272:	mov    rax,QWORD PTR [rdx]
   14000b275:	movsxd rcx,DWORD PTR [rax+0x4]
   14000b279:	add    rcx,rdx
   14000b27c:	xor    r8d,r8d
   14000b27f:	lea    edx,[r8+0x2]
   14000b283:	call   QWORD PTR [rip+0xde67]        # 0x1400190f0
   14000b289:	lea    rcx,[rdi+0xc0]
   14000b290:	mov    rax,r14
   14000b293:	cmp    QWORD PTR [rcx+0x10],rax
   14000b297:	cmovne rax,rcx
   14000b29b:	test   rax,rax
   14000b29e:	je     0x14000b2c5
   14000b2a0:	mov    QWORD PTR [rsp+0x88],r14
   14000b2a8:	mov    r8d,0xa
   14000b2ae:	lea    rdx,[rsp+0x88]
   14000b2b6:	mov    rcx,QWORD PTR [rcx+0x20]
   14000b2ba:	call   QWORD PTR [rip+0xdf80]        # 0x140019240
   14000b2c0:	mov    r13d,eax
   14000b2c3:	jmp    0x14000b2cb
   14000b2c5:	mov    r13d,0x6
   14000b2cb:	lea    rdx,[rip+0xf8c6]        # 0x14001ab98
   14000b2d2:	mov    rcx,QWORD PTR [rip+0xdee7]        # 0x1400191c0
   14000b2d9:	call   0x1400014f0
   14000b2de:	mov    rcx,rax
   14000b2e1:	mov    edx,r13d
   14000b2e4:	call   QWORD PTR [rip+0xde3e]        # 0x140019128
   14000b2ea:	mov    rcx,rax
   14000b2ed:	lea    rdx,[rip+0xffffffffffff785c]        # 0x140002b50
   14000b2f4:	call   QWORD PTR [rip+0xde26]        # 0x140019120
   14000b2fa:	mov    QWORD PTR [rsp+0x80],0xf
   14000b306:	mov    QWORD PTR [rsp+0x78],r14
   14000b30b:	mov    BYTE PTR [rsp+0x68],0x0
   14000b310:	mov    BYTE PTR [rsp+0x370],0x0
   14000b318:	lea    r12,[rdi+0x120]
   14000b31f:	mov    rax,r14
   14000b322:	cmp    QWORD PTR [r12+0x10],rax
   14000b327:	cmovne rax,r12
   14000b32b:	test   rax,rax
   14000b32e:	jne    0x14000b3ce
   14000b334:	lea    rax,[rdi+0x180]
   14000b33b:	mov    rcx,r14
   14000b33e:	cmp    QWORD PTR [rax+0x10],rcx
   14000b342:	cmovne rcx,rax
   14000b346:	test   rcx,rcx
   14000b349:	jne    0x14000b3ce
   14000b34f:	lea    rax,[rdi+0x150]
   14000b356:	mov    edx,r14d
   14000b359:	cmp    QWORD PTR [rax+0x10],rdx
   14000b35d:	setne  dl
   14000b360:	lea    rcx,[rax+0x8]
   14000b364:	test   BYTE PTR [rcx],0x1
   14000b367:	jne    0x14000b37c
   14000b369:	nop    DWORD PTR [rax+0x0]
   14000b370:	mov    rax,QWORD PTR [rcx]
   14000b373:	lea    rcx,[rax+0x8]
   14000b377:	test   BYTE PTR [rcx],0x1
   14000b37a:	je     0x14000b370
   14000b37c:	test   BYTE PTR [rax],0x1
   14000b37f:	jne    0x14000b38b
   14000b381:	inc    edx
   14000b383:	mov    rax,QWORD PTR [rax]
   14000b386:	test   BYTE PTR [rax],0x1
   14000b389:	je     0x14000b381
   14000b38b:	cmp    edx,0x1
   14000b38e:	jne    0x14000b3ce
   14000b390:	mov    rax,r14
   14000b393:	cmp    QWORD PTR [r15+0x10],rax
   14000b397:	cmovne rax,r15
   14000b39b:	test   rax,rax
   14000b39e:	je     0x14000b3ce
   14000b3a0:	mov    rdx,QWORD PTR [rdi+0x170]
   14000b3a7:	cmp    BYTE PTR [rdx],0x0
   14000b3aa:	jne    0x14000b3b1
   14000b3ac:	mov    r8,r14
   14000b3af:	jmp    0x14000b3bf
   14000b3b1:	or     r8,0xffffffffffffffff
   14000b3b5:	inc    r8
   14000b3b8:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000b3bd:	jne    0x14000b3b5
   14000b3bf:	lea    rcx,[rsp+0x68]
   14000b3c4:	call   0x140006790
   14000b3c9:	jmp    0x14000b637
   14000b3ce:	test   rbx,rbx
   14000b3d1:	je     0x14000b3fb
   14000b3d3:	mov    rdx,QWORD PTR [rbx+0x20]
   14000b3d7:	cmp    BYTE PTR [rdx],0x0
   14000b3da:	jne    0x14000b3e1
   14000b3dc:	mov    r8,r14
   14000b3df:	jmp    0x14000b3ef
   14000b3e1:	or     r8,0xffffffffffffffff
   14000b3e5:	inc    r8
   14000b3e8:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000b3ed:	jne    0x14000b3e5
   14000b3ef:	lea    rcx,[rsp+0x68]
   14000b3f4:	call   0x140006790
   14000b3f9:	jmp    0x14000b464
   14000b3fb:	lea    rcx,[rsp+0x40]
   14000b400:	call   0x14000a580
   14000b405:	mov    rbx,rax
   14000b408:	lea    rax,[rsp+0x68]
   14000b40d:	cmp    rax,rbx
   14000b410:	je     0x14000b44a
   14000b412:	cmp    QWORD PTR [rsp+0x80],0x10
   14000b41b:	jb     0x14000b427
   14000b41d:	mov    rcx,QWORD PTR [rsp+0x68]
   14000b422:	call   0x14001716e
   14000b427:	mov    QWORD PTR [rsp+0x80],0xf
   14000b433:	mov    QWORD PTR [rsp+0x78],r14
   14000b438:	mov    BYTE PTR [rsp+0x68],0x0
   14000b43d:	mov    rdx,rbx
   14000b440:	lea    rcx,[rsp+0x68]
   14000b445:	call   0x1400054f0
   14000b44a:	cmp    QWORD PTR [rsp+0x58],0x10
   14000b450:	jb     0x14000b45c
   14000b452:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b457:	call   0x14001716e
   14000b45c:	mov    BYTE PTR [rsp+0x370],0x1
   14000b464:	mov    ecx,0x78
   14000b469:	call   0x140017168
   14000b46e:	mov    QWORD PTR [rsp+0x88],rax
   14000b476:	test   rax,rax
   14000b479:	je     0x14000b498
   14000b47b:	lea    r9,[rsp+0xd0]
   14000b483:	mov    r8d,r13d
   14000b486:	lea    rdx,[rsp+0x68]
   14000b48b:	mov    rcx,rax
   14000b48e:	call   0x140003730
   14000b493:	mov    rbx,rax
   14000b496:	jmp    0x14000b49b
   14000b498:	mov    rbx,r14
   14000b49b:	mov    QWORD PTR [rsp+0x88],rbx
   14000b4a3:	lea    rdx,[rdi+0x180]
   14000b4aa:	mov    rax,r14
   14000b4ad:	cmp    QWORD PTR [rdx+0x10],rax
   14000b4b1:	cmovne rax,rdx
   14000b4b5:	test   rax,rax
   14000b4b8:	je     0x14000b518
   14000b4ba:	mov    rdx,QWORD PTR [rdx+0x20]
   14000b4be:	mov    QWORD PTR [rsp+0x58],0xf
   14000b4c7:	mov    QWORD PTR [rsp+0x50],r14
   14000b4cc:	mov    BYTE PTR [rsp+0x40],0x0
   14000b4d1:	cmp    BYTE PTR [rdx],0x0
   14000b4d4:	jne    0x14000b4db
   14000b4d6:	mov    r8,r14
   14000b4d9:	jmp    0x14000b4ea
   14000b4db:	or     r8,0xffffffffffffffff
   14000b4df:	nop
   14000b4e0:	inc    r8
   14000b4e3:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000b4e8:	jne    0x14000b4e0
   14000b4ea:	lea    rcx,[rsp+0x40]
   14000b4ef:	call   0x140006790
   14000b4f4:	nop
   14000b4f5:	mov    r8b,0x1
   14000b4f8:	lea    rdx,[rsp+0x40]
   14000b4fd:	mov    rcx,rbx
   14000b500:	call   0x140004ce0
   14000b505:	nop
   14000b506:	cmp    QWORD PTR [rsp+0x58],0x10
   14000b50c:	jb     0x14000b518
   14000b50e:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b513:	call   0x14001716e
   14000b518:	mov    r15,r14
   14000b51b:	cmp    QWORD PTR [r12+0x10],r14
   14000b520:	cmovne r15,r12
   14000b524:	test   r15,r15
   14000b527:	je     0x14000b598
   14000b529:	mov    rdx,QWORD PTR [r15+0x20]
   14000b52d:	mov    QWORD PTR [rsp+0x58],0xf
   14000b536:	mov    QWORD PTR [rsp+0x50],r14
   14000b53b:	mov    BYTE PTR [rsp+0x40],0x0
   14000b540:	cmp    BYTE PTR [rdx],0x0
   14000b543:	jne    0x14000b54a
   14000b545:	mov    r8,r14
   14000b548:	jmp    0x14000b55a
   14000b54a:	or     r8,0xffffffffffffffff
   14000b54e:	xchg   ax,ax
   14000b550:	inc    r8
   14000b553:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000b558:	jne    0x14000b550
   14000b55a:	lea    rcx,[rsp+0x40]
   14000b55f:	call   0x140006790
   14000b564:	nop
   14000b565:	xor    r8d,r8d
   14000b568:	lea    rdx,[rsp+0x40]
   14000b56d:	mov    rcx,rbx
   14000b570:	call   0x140004ce0
   14000b575:	nop
   14000b576:	cmp    QWORD PTR [rsp+0x58],0x10
   14000b57c:	jb     0x14000b588
   14000b57e:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b583:	call   0x14001716e
   14000b588:	test   BYTE PTR [r15],0x1
   14000b58c:	je     0x14000b593
   14000b58e:	mov    r15,r14
   14000b591:	jmp    0x14000b524
   14000b593:	mov    r15,QWORD PTR [r15]
   14000b596:	jmp    0x14000b524
   14000b598:	lea    rax,[rdi+0x150]
   14000b59f:	mov    r15,r14
   14000b5a2:	cmp    QWORD PTR [rax+0x10],r14
   14000b5a6:	cmovne r15,rax
   14000b5aa:	nop    WORD PTR [rax+rax*1+0x0]
   14000b5b0:	test   r15,r15
   14000b5b3:	je     0x14000b625
   14000b5b5:	mov    rdx,QWORD PTR [r15+0x20]
   14000b5b9:	mov    QWORD PTR [rsp+0x58],0xf
   14000b5c2:	mov    QWORD PTR [rsp+0x50],r14
   14000b5c7:	mov    BYTE PTR [rsp+0x40],0x0
   14000b5cc:	cmp    BYTE PTR [rdx],0x0
   14000b5cf:	jne    0x14000b5d6
   14000b5d1:	mov    r8,r14
   14000b5d4:	jmp    0x14000b5ea
   14000b5d6:	or     r8,0xffffffffffffffff
   14000b5da:	nop    WORD PTR [rax+rax*1+0x0]
   14000b5e0:	inc    r8
   14000b5e3:	cmp    BYTE PTR [rdx+r8*1],0x0
   14000b5e8:	jne    0x14000b5e0
   14000b5ea:	lea    rcx,[rsp+0x40]
   14000b5ef:	call   0x140006790
   14000b5f4:	nop
   14000b5f5:	lea    rdx,[rsp+0x40]
   14000b5fa:	mov    rcx,rbx
   14000b5fd:	call   0x140005010
   14000b602:	nop
   14000b603:	cmp    QWORD PTR [rsp+0x58],0x10
   14000b609:	jb     0x14000b615
   14000b60b:	mov    rcx,QWORD PTR [rsp+0x40]
   14000b610:	call   0x14001716e
   14000b615:	test   BYTE PTR [r15],0x1
   14000b619:	je     0x14000b620
   14000b61b:	mov    r15,r14
   14000b61e:	jmp    0x14000b5b0
   14000b620:	mov    r15,QWORD PTR [r15]
   14000b623:	jmp    0x14000b5b0
   14000b625:	test   rbx,rbx
   14000b628:	je     0x14000b637
   14000b62a:	mov    rax,QWORD PTR [rbx]
   14000b62d:	mov    edx,0x1
   14000b632:	mov    rcx,rbx
   14000b635:	call   QWORD PTR [rax]
   14000b637:	mov    rax,QWORD PTR [rsp+0xb8]
   14000b63f:	test   rax,rax
   14000b642:	je     0x14000bc51
   14000b648:	mov    rdx,QWORD PTR [rax+0x20]
   14000b64c:	mov    QWORD PTR [rsp+0x58],0xf
   14000b655:	mov    QWORD PTR [rsp+0x50],r14
   14000b65a:	mov    BYTE PTR [rsp+0x40],0x0
   14000b65f:	cmp    BYTE PTR [rdx],0x0
   14000b662:	jne    0x14000b669
   14000b664:	mov    rax,r14
   14000b667:	jmp    0x14000b679
   14000b669:	or     rax,0xffffffffffffffff
   14000b66d:	nop    DWORD PTR [rax]
   14000b670:	inc    rax
   14000b673:	cmp    BYTE PTR [rdx+rax*1],0x0
   14000b677:	jne    0x14000b670
   14000b679:	mov    r8,rax
   14000b67c:	lea    rcx,[rsp+0x40]
   14000b681:	call   0x140006790
   14000b686:	nop
   14000b687:	lea    rax,[rip+0xeeca]        # 0x14001a558
   14000b68e:	mov    QWORD PTR [rsp+0x100],rax
   14000b696:	lea    rcx,[rsp+0x1a8]
   14000b69e:	call   QWORD PTR [rip+0xda5c]        # 0x140019100
   14000b6a4:	nop
   14000b6a5:	mov    ebx,DWORD PTR [rsp+0x380]
   14000b6ac:	or     ebx,0x1
   14000b6af:	mov    DWORD PTR [rsp+0x380],ebx
   14000b6b6:	xor    r9d,r9d
   14000b6b9:	xor    r8d,r8d
   14000b6bc:	lea    rdx,[rsp+0x108]
   14000b6c4:	lea    rcx,[rsp+0x100]
   14000b6cc:	call   QWORD PTR [rip+0xda36]        # 0x140019108
   14000b6d2:	nop
   14000b6d3:	mov    rax,QWORD PTR [rsp+0x100]
   14000b6db:	movsxd rcx,DWORD PTR [rax+0x4]
   14000b6df:	lea    r13,[rip+0xee6a]        # 0x14001a550
   14000b6e6:	mov    QWORD PTR [rsp+rcx*1+0x100],r13
   14000b6ee:	mov    rax,QWORD PTR [rsp+0x100]
   14000b6f6:	movsxd rcx,DWORD PTR [rax+0x4]
   14000b6fa:	lea    edx,[rcx-0xa8]
   14000b700:	mov    DWORD PTR [rsp+rcx*1+0xfc],edx
   14000b707:	lea    rax,[rsp+0x108]
   14000b70f:	mov    QWORD PTR [rsp+0x88],rax
   14000b717:	lea    rcx,[rsp+0x108]
   14000b71f:	call   QWORD PTR [rip+0xd983]        # 0x1400190a8
   14000b725:	nop
   14000b726:	lea    r15,[rip+0xeda3]        # 0x14001a4d0
   14000b72d:	mov    QWORD PTR [rsp+0x108],r15
   14000b735:	mov    BYTE PTR [rsp+0x190],0x0
   14000b73d:	mov    BYTE PTR [rsp+0x189],0x0
   14000b745:	lea    rcx,[rsp+0x108]
   14000b74d:	call   QWORD PTR [rip+0xd985]        # 0x1400190d8
   14000b753:	mov    QWORD PTR [rsp+0x198],r14
   14000b75b:	mov    eax,DWORD PTR [rip+0x15f2f]        # 0x140021690
   14000b761:	mov    DWORD PTR [rsp+0x18c],eax
   14000b768:	mov    QWORD PTR [rsp+0x180],r14
   14000b770:	lea    rdx,[rsp+0x40]
   14000b775:	cmp    QWORD PTR [rsp+0x58],0x10
   14000b77b:	cmovae rdx,QWORD PTR [rsp+0x40]
   14000b781:	mov    r9d,0x40
   14000b787:	lea    r8d,[r9-0x12]
   14000b78b:	lea    rcx,[rsp+0x108]
   14000b793:	call   0x1400084f0
   14000b798:	test   rax,rax
   14000b79b:	jne    0x14000b7bf
   14000b79d:	mov    rax,QWORD PTR [rsp+0x100]
   14000b7a5:	movsxd rcx,DWORD PTR [rax+0x4]
   14000b7a9:	lea    rcx,[rsp+rcx*1+0x100]
   14000b7b1:	xor    r8d,r8d
   14000b7b4:	lea    edx,[r8+0x2]
   14000b7b8:	call   QWORD PTR [rip+0xd932]        # 0x1400190f0
   14000b7be:	nop
   14000b7bf:	lea    rax,[rip+0xf402]        # 0x14001abc8
   14000b7c6:	mov    QWORD PTR [rsp+0x210],rax
   14000b7ce:	lea    rcx,[rsp+0x2c0]
   14000b7d6:	call   QWORD PTR [rip+0xd924]        # 0x140019100
   14000b7dc:	nop
   14000b7dd:	or     ebx,0x2
   14000b7e0:	mov    DWORD PTR [rsp+0x380],ebx
   14000b7e7:	xor    r9d,r9d
   14000b7ea:	xor    r8d,r8d
   14000b7ed:	lea    rdx,[rsp+0x220]
   14000b7f5:	lea    rcx,[rsp+0x210]
   14000b7fd:	call   QWORD PTR [rip+0xd95d]        # 0x140019160
   14000b803:	nop
   14000b804:	mov    rax,QWORD PTR [rsp+0x210]
   14000b80c:	movsxd rcx,DWORD PTR [rax+0x4]
   14000b810:	lea    r12,[rip+0xf3a9]        # 0x14001abc0
   14000b817:	mov    QWORD PTR [rsp+rcx*1+0x210],r12
   14000b81f:	mov    rax,QWORD PTR [rsp+0x210]
   14000b827:	movsxd rcx,DWORD PTR [rax+0x4]
   14000b82b:	lea    edx,[rcx-0xb0]
   14000b831:	mov    DWORD PTR [rsp+rcx*1+0x20c],edx
   14000b838:	lea    rax,[rsp+0x220]
   14000b840:	mov    QWORD PTR [rsp+0x88],rax
   14000b848:	lea    rcx,[rsp+0x220]
   14000b850:	call   QWORD PTR [rip+0xd852]        # 0x1400190a8
   14000b856:	nop
   14000b857:	mov    QWORD PTR [rsp+0x220],r15
   14000b85f:	mov    BYTE PTR [rsp+0x2a8],0x0
   14000b867:	mov    BYTE PTR [rsp+0x2a1],0x0
   14000b86f:	lea    rcx,[rsp+0x220]
   14000b877:	call   QWORD PTR [rip+0xd85b]        # 0x1400190d8
   14000b87d:	mov    QWORD PTR [rsp+0x2b0],r14
   14000b885:	mov    eax,DWORD PTR [rip+0x15e05]        # 0x140021690
   14000b88b:	mov    DWORD PTR [rsp+0x2a4],eax
   14000b892:	mov    QWORD PTR [rsp+0x298],r14
   14000b89a:	lea    rdx,[rsp+0x68]
   14000b89f:	cmp    QWORD PTR [rsp+0x80],0x10
   14000b8a8:	cmovae rdx,QWORD PTR [rsp+0x68]
   14000b8ae:	mov    r9d,0x40
   14000b8b4:	lea    r8d,[r9-0x1f]
   14000b8b8:	lea    rcx,[rsp+0x220]
   14000b8c0:	call   0x1400084f0
   14000b8c5:	test   rax,rax
   14000b8c8:	jne    0x14000b8ec
   14000b8ca:	mov    rax,QWORD PTR [rsp+0x210]
   14000b8d2:	movsxd rcx,DWORD PTR [rax+0x4]
   14000b8d6:	lea    rcx,[rsp+rcx*1+0x210]
   14000b8de:	xor    r8d,r8d
   14000b8e1:	lea    edx,[r8+0x2]
   14000b8e5:	call   QWORD PTR [rip+0xd805]        # 0x1400190f0
   14000b8eb:	nop
   14000b8ec:	mov    rax,QWORD PTR [rsp+0x198]
   14000b8f4:	test   rax,rax
   14000b8f7:	je     0x14000ba86
   14000b8fd:	cmp    QWORD PTR [rsp+0x2b0],0x0
   14000b906:	je     0x14000ba86
   14000b90c:	lea    rdx,[rip+0xf2ed]        # 0x14001ac00
   14000b913:	mov    rcx,QWORD PTR [rip+0xd8a6]        # 0x1400191c0
   14000b91a:	call   0x1400014f0
   14000b91f:	lea    rdx,[rsp+0x40]
   14000b924:	mov    rcx,rax
   14000b927:	call   0x140001320
   14000b92c:	lea    rdx,[rip+0xf29d]        # 0x14001abd0
   14000b933:	mov    rcx,rax
   14000b936:	call   0x1400014f0
   14000b93b:	lea    rdx,[rsp+0x68]
   14000b940:	mov    rcx,rax
   14000b943:	call   0x140001320
   14000b948:	lea    rdx,[rip+0xffffffffffff7201]        # 0x140002b50
   14000b94f:	mov    rcx,rax
   14000b952:	call   QWORD PTR [rip+0xd7c8]        # 0x140019120
   14000b958:	lea    rdx,[rsp+0x88]
   14000b960:	lea    rcx,[rsp+0x100]
   14000b968:	call   QWORD PTR [rip+0xd7ea]        # 0x140019158
   14000b96e:	mov    rbx,QWORD PTR [rax+0x8]
   14000b972:	add    rbx,QWORD PTR [rax]
   14000b975:	lea    rdx,[rip+0xf294]        # 0x14001ac10
   14000b97c:	mov    rcx,QWORD PTR [rip+0xd83d]        # 0x1400191c0
   14000b983:	call   0x1400014f0
   14000b988:	mov    rdx,rbx
   14000b98b:	mov    rcx,rax
   14000b98e:	call   QWORD PTR [rip+0xd79c]        # 0x140019130
   14000b994:	lea    rdx,[rip+0xffffffffffff71b5]        # 0x140002b50
   14000b99b:	mov    rcx,rax
   14000b99e:	call   QWORD PTR [rip+0xd77c]        # 0x140019120
   14000b9a4:	lea    rdx,[rsp+0x220]
   14000b9ac:	lea    rcx,[rsp+0x100]
   14000b9b4:	call   QWORD PTR [rip+0xd77e]        # 0x140019138
   14000b9ba:	lea    rdx,[rsp+0x88]
   14000b9c2:	lea    rcx,[rsp+0x100]
   14000b9ca:	call   QWORD PTR [rip+0xd788]        # 0x140019158
   14000b9d0:	mov    rbx,QWORD PTR [rax+0x8]
   14000b9d4:	add    rbx,QWORD PTR [rax]
   14000b9d7:	lea    rdx,[rip+0xf24a]        # 0x14001ac28
   14000b9de:	mov    rcx,QWORD PTR [rip+0xd7db]        # 0x1400191c0
   14000b9e5:	call   0x1400014f0
   14000b9ea:	mov    rdx,rbx
   14000b9ed:	mov    rcx,rax
   14000b9f0:	call   QWORD PTR [rip+0xd73a]        # 0x140019130
   14000b9f6:	lea    rdx,[rip+0xffffffffffff7153]        # 0x140002b50
   14000b9fd:	mov    rcx,rax
   14000ba00:	call   QWORD PTR [rip+0xd71a]        # 0x140019120
   14000ba06:	lea    rcx,[rsp+0x108]
   14000ba0e:	call   0x140006b30
   14000ba13:	test   rax,rax
   14000ba16:	jne    0x14000ba39
   14000ba18:	mov    rax,QWORD PTR [rsp+0x100]
   14000ba20:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ba24:	lea    rcx,[rsp+rcx*1+0x100]
   14000ba2c:	xor    r8d,r8d
   14000ba2f:	lea    edx,[r8+0x2]
   14000ba33:	call   QWORD PTR [rip+0xd6b7]        # 0x1400190f0
   14000ba39:	mov    rax,QWORD PTR [rsp+0x100]
   14000ba41:	movsxd rcx,DWORD PTR [rax+0x4]
   14000ba45:	test   BYTE PTR [rsp+rcx*1+0x110],0x2
   14000ba4d:	je     0x14000bac6
   14000ba4f:	lea    rdx,[rip+0xf1ea]        # 0x14001ac40
   14000ba56:	mov    rcx,QWORD PTR [rip+0xd75b]        # 0x1400191b8
   14000ba5d:	call   0x1400014f0
   14000ba62:	lea    rdx,[rsp+0x40]
   14000ba67:	mov    rcx,rax
   14000ba6a:	call   0x140001320
   14000ba6f:	lea    rdx,[rip+0xffffffffffff70da]        # 0x140002b50
   14000ba76:	mov    rcx,rax
   14000ba79:	call   QWORD PTR [rip+0xd6a1]        # 0x140019120
   14000ba7f:	mov    ebx,0x1
   14000ba84:	jmp    0x14000bacd
   14000ba86:	lea    rbx,[rsp+0x68]
   14000ba8b:	lea    rcx,[rsp+0x40]
   14000ba90:	test   rax,rax
   14000ba93:	cmove  rbx,rcx
   14000ba97:	lea    rdx,[rip+0xf1c2]        # 0x14001ac60
   14000ba9e:	mov    rcx,QWORD PTR [rip+0xd713]        # 0x1400191b8
   14000baa5:	call   0x1400014f0
   14000baaa:	mov    rdx,rbx
   14000baad:	mov    rcx,rax
   14000bab0:	call   0x140001320
   14000bab5:	lea    rdx,[rip+0xf19c]        # 0x14001ac58
   14000babc:	mov    rcx,rax
   14000babf:	call   0x1400014f0
   14000bac4:	jmp    0x14000ba6f
   14000bac6:	mov    ebx,DWORD PTR [rsp+0x378]
   14000bacd:	mov    rax,QWORD PTR [rsp+0x210]
   14000bad5:	movsxd rcx,DWORD PTR [rax+0x4]
   14000bad9:	mov    QWORD PTR [rsp+rcx*1+0x210],r12
   14000bae1:	mov    rax,QWORD PTR [rsp+0x210]
   14000bae9:	movsxd rcx,DWORD PTR [rax+0x4]
   14000baed:	lea    edx,[rcx-0xb0]
   14000baf3:	mov    DWORD PTR [rsp+rcx*1+0x20c],edx
   14000bafa:	mov    QWORD PTR [rsp+0x220],r15
   14000bb02:	cmp    QWORD PTR [rsp+0x2b0],0x0
   14000bb0b:	je     0x14000bb43
   14000bb0d:	mov    rax,QWORD PTR [rsp+0x238]
   14000bb15:	lea    rcx,[rsp+0x2a0]
   14000bb1d:	cmp    QWORD PTR [rax],rcx
   14000bb20:	jne    0x14000bb43
   14000bb22:	mov    r9,QWORD PTR [rsp+0x290]
   14000bb2a:	mov    rdx,QWORD PTR [rsp+0x288]
   14000bb32:	mov    r8,rdx
   14000bb35:	lea    rcx,[rsp+0x220]
   14000bb3d:	call   QWORD PTR [rip+0xd58d]        # 0x1400190d0
   14000bb43:	cmp    BYTE PTR [rsp+0x2a8],0x0
   14000bb4b:	je     0x14000bb5a
   14000bb4d:	lea    rcx,[rsp+0x220]
   14000bb55:	call   0x140006b30
   14000bb5a:	lea    rcx,[rsp+0x220]
   14000bb62:	call   QWORD PTR [rip+0xd548]        # 0x1400190b0
   14000bb68:	lea    rcx,[rsp+0x228]
   14000bb70:	call   QWORD PTR [rip+0xd5f2]        # 0x140019168
   14000bb76:	lea    rcx,[rsp+0x2c0]
   14000bb7e:	call   QWORD PTR [rip+0xd55c]        # 0x1400190e0
   14000bb84:	nop
   14000bb85:	mov    rax,QWORD PTR [rsp+0x100]
   14000bb8d:	movsxd rcx,DWORD PTR [rax+0x4]
   14000bb91:	mov    QWORD PTR [rsp+rcx*1+0x100],r13
   14000bb99:	mov    rax,QWORD PTR [rsp+0x100]
   14000bba1:	movsxd rcx,DWORD PTR [rax+0x4]
   14000bba5:	lea    edx,[rcx-0xa8]
   14000bbab:	mov    DWORD PTR [rsp+rcx*1+0xfc],edx
   14000bbb2:	mov    QWORD PTR [rsp+0x108],r15
   14000bbba:	cmp    QWORD PTR [rsp+0x198],0x0
   14000bbc3:	je     0x14000bbfb
   14000bbc5:	mov    rax,QWORD PTR [rsp+0x120]
   14000bbcd:	lea    rcx,[rsp+0x188]
   14000bbd5:	cmp    QWORD PTR [rax],rcx
   14000bbd8:	jne    0x14000bbfb
   14000bbda:	mov    r9,QWORD PTR [rsp+0x178]
   14000bbe2:	mov    rdx,QWORD PTR [rsp+0x170]
   14000bbea:	mov    r8,rdx
   14000bbed:	lea    rcx,[rsp+0x108]
   14000bbf5:	call   QWORD PTR [rip+0xd4d5]        # 0x1400190d0
   14000bbfb:	cmp    BYTE PTR [rsp+0x190],0x0
   14000bc03:	je     0x14000bc12
   14000bc05:	lea    rcx,[rsp+0x108]
   14000bc0d:	call   0x140006b30
   14000bc12:	lea    rcx,[rsp+0x108]
   14000bc1a:	call   QWORD PTR [rip+0xd490]        # 0x1400190b0
   14000bc20:	lea    rcx,[rsp+0x110]
   14000bc28:	call   QWORD PTR [rip+0xd4e2]        # 0x140019110
   14000bc2e:	lea    rcx,[rsp+0x1a8]
   14000bc36:	call   QWORD PTR [rip+0xd4a4]        # 0x1400190e0
   14000bc3c:	nop
   14000bc3d:	cmp    QWORD PTR [rsp+0x58],0x10
   14000bc43:	jb     0x14000bc58
   14000bc45:	mov    rcx,QWORD PTR [rsp+0x40]
   14000bc4a:	call   0x14001716e
   14000bc4f:	jmp    0x14000bc58
   14000bc51:	mov    ebx,DWORD PTR [rsp+0x378]
   14000bc58:	jmp    0x14000bc74
   14000bc5a:	xor    r14d,r14d
   14000bc5d:	mov    ebx,DWORD PTR [rsp+0x378]
   14000bc64:	mov    rdi,QWORD PTR [rsp+0xf0]
   14000bc6c:	mov    rsi,QWORD PTR [rsp+0xc0]
   14000bc74:	cmp    BYTE PTR [rsp+0x370],0x0
   14000bc7c:	je     0x14000bcd1
   14000bc7e:	lea    rcx,[rsp+0x68]
   14000bc83:	cmp    QWORD PTR [rsp+0x80],0x10
   14000bc8c:	cmovae rcx,QWORD PTR [rsp+0x68]
   14000bc92:	call   QWORD PTR [rip+0xd788]        # 0x140019420
   14000bc98:	test   eax,eax
   14000bc9a:	je     0x14000bcd1
   14000bc9c:	lea    rdx,[rip+0xefcd]        # 0x14001ac70
   14000bca3:	mov    rcx,QWORD PTR [rip+0xd50e]        # 0x1400191b8
   14000bcaa:	call   0x1400014f0
   14000bcaf:	mov    rcx,rax
   14000bcb2:	lea    rdx,[rsp+0x68]
   14000bcb7:	call   0x140001320
   14000bcbc:	mov    rcx,rax
   14000bcbf:	lea    rdx,[rip+0xffffffffffff6e8a]        # 0x140002b50
   14000bcc6:	call   QWORD PTR [rip+0xd454]        # 0x140019120
   14000bccc:	mov    ebx,0x1
   14000bcd1:	lea    rax,[rdi+0x60]
   14000bcd5:	mov    rcx,r14
   14000bcd8:	cmp    QWORD PTR [rax+0x10],0x0
   14000bcdd:	cmovne rcx,rax
   14000bce1:	test   rcx,rcx
   14000bce4:	jne    0x14000bd03
   14000bce6:	mov    rdx,QWORD PTR [rip+0xd4d3]        # 0x1400191c0
   14000bced:	mov    rax,QWORD PTR [rdx]
   14000bcf0:	movsxd rcx,DWORD PTR [rax+0x4]
   14000bcf4:	add    rcx,rdx
   14000bcf7:	xor    r8d,r8d
   14000bcfa:	xor    edx,edx
   14000bcfc:	call   QWORD PTR [rip+0xd3e6]        # 0x1400190e8
   14000bd02:	nop
   14000bd03:	cmp    QWORD PTR [rsp+0x80],0x10
   14000bd0c:	jb     0x14000bd18
   14000bd0e:	mov    rcx,QWORD PTR [rsp+0x68]
   14000bd13:	call   0x14001716e
   14000bd18:	mov    QWORD PTR [rsp+0x80],0xf
   14000bd24:	mov    QWORD PTR [rsp+0x78],r14
   14000bd29:	mov    BYTE PTR [rsp+0x68],0x0
   14000bd2e:	test   rsi,rsi
   14000bd31:	je     0x14000bd3c
   14000bd33:	mov    rcx,rsi
   14000bd36:	call   0x140017316
   14000bd3b:	nop
   14000bd3c:	test   rdi,rdi
   14000bd3f:	je     0x14000bd4a
   14000bd41:	mov    rcx,rdi
   14000bd44:	call   0x140017316
   14000bd49:	nop
   14000bd4a:	cmp    QWORD PTR [rsp+0xe8],0x10
   14000bd53:	jb     0x14000bd62
   14000bd55:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000bd5d:	call   0x14001716e
   14000bd62:	mov    eax,ebx
   14000bd64:	jmp    0x14000bde2
   14000bd66:	lea    rax,[rip+0xef6b]        # 0x14001acd8
   14000bd6d:	mov    QWORD PTR [rsp+0x88],rax
   14000bd75:	mov    rax,QWORD PTR [rip+0xd444]        # 0x1400191c0
   14000bd7c:	mov    QWORD PTR [rsp+0x90],rax
   14000bd84:	mov    DWORD PTR [rsp+0x20],0x4b
   14000bd8c:	mov    r9d,0x32
   14000bd92:	lea    r8d,[r9+0x1e]
   14000bd96:	mov    rdx,r13
   14000bd99:	lea    rcx,[rsp+0x88]
   14000bda1:	call   0x140008c60
   14000bda6:	nop
   14000bda7:	test   rsi,rsi
   14000bdaa:	je     0x14000bdb5
   14000bdac:	mov    rcx,rsi
   14000bdaf:	call   0x140017316
   14000bdb4:	nop
   14000bdb5:	test   rdi,rdi
   14000bdb8:	je     0x14000bdc3
   14000bdba:	mov    rcx,rdi
   14000bdbd:	call   0x140017316
   14000bdc2:	nop
   14000bdc3:	cmp    QWORD PTR [rsp+0xe8],0x10
   14000bdcc:	jb     0x14000bddb
   14000bdce:	mov    rcx,QWORD PTR [rsp+0xd0]
   14000bdd6:	call   0x14001716e
   14000bddb:	mov    eax,DWORD PTR [rsp+0x378]
   14000bde2:	add    rsp,0x330
   14000bde9:	pop    r15
   14000bdeb:	pop    r14
   14000bded:	pop    r13
   14000bdef:	pop    r12
   14000bdf1:	pop    rdi
   14000bdf2:	pop    rsi
   14000bdf3:	pop    rbx
   14000bdf4:	ret    
   14000bdf5:	int3   
   14000bdf6:	int3   
   14000bdf7:	int3   
   14000bdf8:	int3   
   14000bdf9:	int3   
   14000bdfa:	int3   
   14000bdfb:	int3   
   14000bdfc:	int3   
   14000bdfd:	int3   
   14000bdfe:	int3   
   14000bdff:	int3   
   14000be00:	imul   rdx,r8
   14000be04:	mov    rcx,rdx
   14000be07:	rex.W jmp QWORD PTR [rip+0xd4ea]        # 0x1400192f8
   14000be0e:	int3   
   14000be0f:	int3   
   14000be10:	mov    rcx,rdx
   14000be13:	rex.W jmp QWORD PTR [rip+0xd4d6]        # 0x1400192f0
   14000be1a:	int3   
   14000be1b:	int3   
   14000be1c:	int3   
   14000be1d:	int3   
   14000be1e:	int3   
   14000be1f:	int3   
   14000be20:	imul   r8,r9
   14000be24:	mov    rcx,rdx
   14000be27:	mov    rdx,r8
   14000be2a:	rex.W jmp QWORD PTR [rip+0xd4cf]        # 0x140019300
   14000be31:	int3   
   14000be32:	int3   
   14000be33:	int3   
   14000be34:	int3   
   14000be35:	int3   
   14000be36:	int3   
   14000be37:	int3   
   14000be38:	int3   
   14000be39:	int3   
   14000be3a:	int3   
   14000be3b:	int3   
   14000be3c:	int3   
   14000be3d:	int3   
   14000be3e:	int3   
   14000be3f:	int3   
   14000be40:	rex.W jmp QWORD PTR [rip+0xd4c1]        # 0x140019308
   14000be47:	int3   
   14000be48:	int3   
   14000be49:	int3   
   14000be4a:	int3   
   14000be4b:	int3   
   14000be4c:	int3   
   14000be4d:	int3   
   14000be4e:	int3   
   14000be4f:	int3   
   14000be50:	rex.W jmp QWORD PTR [rip+0xd4b9]        # 0x140019310
   14000be57:	int3   
   14000be58:	int3   
   14000be59:	int3   
   14000be5a:	int3   
   14000be5b:	int3   
   14000be5c:	int3   
   14000be5d:	int3   
   14000be5e:	int3   
   14000be5f:	int3   
   14000be60:	mov    QWORD PTR [rsp+0x8],rbx
   14000be65:	mov    r10,rdx
   14000be68:	movabs rax,0x79baa6bb6398b6f7
   14000be72:	mov    rbx,r8
   14000be75:	movzx  r9d,cx
   14000be79:	shr    ecx,0x10
   14000be7c:	mul    r8
   14000be7f:	mov    rax,r8
   14000be82:	sub    rax,rdx
   14000be85:	shr    rax,1
   14000be88:	add    rax,rdx
   14000be8b:	shr    rax,0xc
   14000be8f:	imul   rax,rax,0x15b0
   14000be96:	sub    r8,rax
   14000be99:	test   r10,r10
   14000be9c:	jne    0x14000bea8
   14000be9e:	lea    eax,[r10+0x1]
   14000bea2:	mov    rbx,QWORD PTR [rsp+0x8]
   14000bea7:	ret    
   14000bea8:	test   rbx,rbx
   14000beab:	je     0x14000bf7c
   14000beb1:	xor    edx,edx
   14000beb3:	cmp    r8,0x7
   14000beb7:	jbe    0x14000bf2a
   14000beb9:	lea    r11d,[rdx+0x7]
   14000bebd:	nop    DWORD PTR [rax]
   14000bec0:	movzx  eax,BYTE PTR [r10]
   14000bec4:	add    r11d,0x8
   14000bec8:	add    edx,0x8
   14000becb:	add    r9d,eax
   14000bece:	movzx  eax,BYTE PTR [r10+0x1]
   14000bed3:	add    r10,0x8
   14000bed7:	add    ecx,r9d
   14000beda:	add    r9d,eax
   14000bedd:	movzx  eax,BYTE PTR [r10-0x6]
   14000bee2:	add    ecx,r9d
   14000bee5:	add    r9d,eax
   14000bee8:	movzx  eax,BYTE PTR [r10-0x5]
   14000beed:	add    ecx,r9d
   14000bef0:	add    r9d,eax
   14000bef3:	movzx  eax,BYTE PTR [r10-0x4]
   14000bef8:	add    ecx,r9d
   14000befb:	add    r9d,eax
   14000befe:	movzx  eax,BYTE PTR [r10-0x3]
   14000bf03:	add    ecx,r9d
   14000bf06:	add    r9d,eax
   14000bf09:	movzx  eax,BYTE PTR [r10-0x2]
   14000bf0e:	add    ecx,r9d
   14000bf11:	add    r9d,eax
   14000bf14:	movzx  eax,BYTE PTR [r10-0x1]
   14000bf19:	add    ecx,r9d
   14000bf1c:	add    r9d,eax
   14000bf1f:	mov    eax,r11d
   14000bf22:	add    ecx,r9d
   14000bf25:	cmp    rax,r8
   14000bf28:	jb     0x14000bec0
   14000bf2a:	mov    eax,edx
   14000bf2c:	cmp    rax,r8
   14000bf2f:	jae    0x14000bf47
   14000bf31:	movzx  eax,BYTE PTR [r10]
   14000bf35:	inc    edx
   14000bf37:	inc    r10
   14000bf3a:	add    r9d,eax
   14000bf3d:	mov    eax,edx
   14000bf3f:	add    ecx,r9d
   14000bf42:	cmp    rax,r8
   14000bf45:	jb     0x14000bf31
   14000bf47:	mov    eax,0x80078071
   14000bf4c:	mul    r9d
   14000bf4f:	shr    edx,0xf
   14000bf52:	imul   eax,edx,0xffff000f
   14000bf58:	add    r9d,eax
   14000bf5b:	mov    eax,0x80078071
   14000bf60:	mul    ecx
   14000bf62:	shr    edx,0xf
   14000bf65:	imul   eax,edx,0xffff000f
   14000bf6b:	add    ecx,eax
   14000bf6d:	sub    rbx,r8
   14000bf70:	mov    r8d,0x15b0
   14000bf76:	jne    0x14000beb1
   14000bf7c:	mov    rbx,QWORD PTR [rsp+0x8]
   14000bf81:	shl    ecx,0x10
   14000bf84:	lea    eax,[r9+rcx*1]
   14000bf88:	ret    
   14000bf89:	int3   
   14000bf8a:	int3   
   14000bf8b:	int3   
   14000bf8c:	int3   
   14000bf8d:	int3   
   14000bf8e:	int3   
   14000bf8f:	int3   
   14000bf90:	sub    rsp,0x38
   14000bf94:	mov    DWORD PTR [rsp+0x20],0xffffffff
   14000bf9c:	call   0x14000bfb0
   14000bfa1:	add    rsp,0x38
   14000bfa5:	ret    
   14000bfa6:	int3   
   14000bfa7:	int3   
   14000bfa8:	int3   
   14000bfa9:	int3   
   14000bfaa:	int3   
   14000bfab:	int3   
   14000bfac:	int3   
   14000bfad:	int3   
   14000bfae:	int3   
   14000bfaf:	int3   
   14000bfb0:	mov    QWORD PTR [rsp+0x8],rbx
   14000bfb5:	mov    QWORD PTR [rsp+0x10],rbp
   14000bfba:	mov    QWORD PTR [rsp+0x18],rsi
   14000bfbf:	push   rdi
   14000bfc0:	sub    rsp,0x80
   14000bfc7:	mov    rdi,rdx
   14000bfca:	xor    edx,edx
   14000bfcc:	mov    rsi,r8
   14000bfcf:	mov    rbp,rcx
   14000bfd2:	lea    r8d,[rdx+0x58]
   14000bfd6:	lea    rcx,[rsp+0x20]
   14000bfdb:	mov    ebx,r9d
   14000bfde:	call   0x14001734c
   14000bfe3:	mov    edx,DWORD PTR [rdi]
   14000bfe5:	mov    eax,edx
   14000bfe7:	or     eax,ebx
   14000bfe9:	cmp    eax,0xffffffff
   14000bfec:	jbe    0x14000bff5
   14000bfee:	mov    eax,0xffffd8f0
   14000bff3:	jmp    0x14000c067
   14000bff5:	mov    DWORD PTR [rsp+0x38],edx
   14000bff9:	mov    edx,DWORD PTR [rsp+0xb0]
   14000c000:	lea    rcx,[rsp+0x20]
   14000c005:	mov    QWORD PTR [rsp+0x20],rsi
   14000c00a:	mov    DWORD PTR [rsp+0x28],ebx
   14000c00e:	mov    QWORD PTR [rsp+0x30],rbp
   14000c013:	call   0x14000c340
   14000c018:	test   eax,eax
   14000c01a:	jne    0x14000c067
   14000c01c:	lea    edx,[rax+0x4]
   14000c01f:	lea    rcx,[rsp+0x20]
   14000c024:	call   0x14000c120
   14000c029:	mov    rdx,QWORD PTR [rsp+0x48]
   14000c02e:	mov    ebx,eax
   14000c030:	cmp    eax,0x1
   14000c033:	je     0x14000c051
   14000c035:	test   rdx,rdx
   14000c038:	je     0x14000c043
   14000c03a:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c03f:	call   QWORD PTR [rsp+0x58]
   14000c043:	mov    eax,0xfffffffb
   14000c048:	test   ebx,ebx
   14000c04a:	cmove  ebx,eax
   14000c04d:	mov    eax,ebx
   14000c04f:	jmp    0x14000c067
   14000c051:	mov    eax,DWORD PTR [rsp+0x3c]
   14000c055:	mov    DWORD PTR [rdi],eax
   14000c057:	test   rdx,rdx
   14000c05a:	je     0x14000c065
   14000c05c:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c061:	call   QWORD PTR [rsp+0x58]
   14000c065:	xor    eax,eax
   14000c067:	lea    r11,[rsp+0x80]
   14000c06f:	mov    rbx,QWORD PTR [r11+0x10]
   14000c073:	mov    rbp,QWORD PTR [r11+0x18]
   14000c077:	mov    rsi,QWORD PTR [r11+0x20]
   14000c07b:	mov    rsp,r11
   14000c07e:	pop    rdi
   14000c07f:	ret    
   14000c080:	mov    r8d,ecx
   14000c083:	lea    r9d,[rcx+0x85]
   14000c08a:	mov    eax,0x8421085
   14000c08f:	mul    ecx
   14000c091:	sub    r8d,edx
   14000c094:	imul   ecx,ecx,0x6e
   14000c097:	shr    r8d,1
   14000c09a:	mov    eax,0x51eb851f
   14000c09f:	add    r8d,edx
   14000c0a2:	shr    r8d,0xe
   14000c0a6:	mul    ecx
   14000c0a8:	shr    edx,0x5
   14000c0ab:	lea    r9d,[r9+r8*4]
   14000c0af:	sub    edx,0xffffff80
   14000c0b2:	add    r9d,r8d
   14000c0b5:	cmp    edx,r9d
   14000c0b8:	cmova  r9d,edx
   14000c0bc:	mov    eax,r9d
   14000c0bf:	ret    
   14000c0c0:	mov    r9,r8
   14000c0c3:	mov    r10,rdx
   14000c0c6:	test   rdx,rdx
   14000c0c9:	jne    0x14000c0ce
   14000c0cb:	xor    eax,eax
   14000c0cd:	ret    
   14000c0ce:	not    ecx
   14000c0d0:	test   r8,r8
   14000c0d3:	je     0x14000c113
   14000c0d5:	lea    r11,[rip+0xef14]        # 0x14001aff0
   14000c0dc:	nop    DWORD PTR [rax+0x0]
   14000c0e0:	movzx  r8d,BYTE PTR [r10]
   14000c0e4:	mov    eax,ecx
   14000c0e6:	shr    ecx,0x4
   14000c0e9:	xor    rax,r8
   14000c0ec:	shr    r8,0x4
   14000c0f0:	lea    r10,[r10+0x1]
   14000c0f4:	and    eax,0xf
   14000c0f7:	mov    edx,DWORD PTR [r11+rax*4]
   14000c0fb:	xor    edx,ecx
   14000c0fd:	mov    eax,edx
   14000c0ff:	shr    edx,0x4
   14000c102:	and    eax,0xf
   14000c105:	xor    rax,r8
   14000c108:	mov    ecx,DWORD PTR [r11+rax*4]
   14000c10c:	xor    ecx,edx
   14000c10e:	dec    r9
   14000c111:	jne    0x14000c0e0
   14000c113:	not    ecx
   14000c115:	mov    eax,ecx
   14000c117:	ret    
   14000c118:	int3   
   14000c119:	int3   
   14000c11a:	int3   
   14000c11b:	int3   
   14000c11c:	int3   
   14000c11d:	int3   
   14000c11e:	int3   
   14000c11f:	int3   
   14000c120:	rex push rbx
   14000c122:	push   rsi
   14000c123:	push   rdi
   14000c124:	sub    rsp,0x30
   14000c128:	xor    esi,esi
   14000c12a:	mov    edi,edx
   14000c12c:	mov    rbx,rcx
   14000c12f:	test   rcx,rcx
   14000c132:	je     0x14000c2b1
   14000c138:	mov    rcx,QWORD PTR [rcx+0x28]
   14000c13c:	test   rcx,rcx
   14000c13f:	je     0x14000c2b1
   14000c145:	cmp    edx,0x4
   14000c148:	ja     0x14000c2b1
   14000c14e:	mov    r9,QWORD PTR [rbx+0x10]
   14000c152:	test   r9,r9
   14000c155:	je     0x14000c2b1
   14000c15b:	mov    edx,DWORD PTR [rbx+0x18]
   14000c15e:	test   edx,edx
   14000c160:	jne    0x14000c16d
   14000c162:	lea    eax,[rsi-0x5]
   14000c165:	add    rsp,0x30
   14000c169:	pop    rdi
   14000c16a:	pop    rsi
   14000c16b:	pop    rbx
   14000c16c:	ret    
   14000c16d:	cmp    edi,0x1
   14000c170:	mov    eax,0x2
   14000c175:	cmove  edi,eax
   14000c178:	cmp    DWORD PTR [rcx+0x84],0x1
   14000c17f:	jne    0x14000c199
   14000c181:	mov    eax,0xfffffffb
   14000c186:	mov    esi,0x1
   14000c18b:	cmp    edi,0x4
   14000c18e:	cmove  eax,esi
   14000c191:	add    rsp,0x30
   14000c195:	pop    rdi
   14000c196:	pop    rsi
   14000c197:	pop    rbx
   14000c198:	ret    
   14000c199:	mov    eax,DWORD PTR [rbx+0x8]
   14000c19c:	mov    QWORD PTR [rsp+0x60],rdx
   14000c1a1:	mov    rdx,QWORD PTR [rbx]
   14000c1a4:	mov    QWORD PTR [rsp+0x50],rax
   14000c1a9:	lea    rax,[rsp+0x60]
   14000c1ae:	mov    QWORD PTR [rsp+0x58],rbp
   14000c1b3:	mov    ebp,DWORD PTR [rbx+0x1c]
   14000c1b6:	lea    r8,[rsp+0x50]
   14000c1bb:	mov    QWORD PTR [rsp+0x68],r14
   14000c1c0:	mov    r14d,DWORD PTR [rbx+0xc]
   14000c1c4:	mov    DWORD PTR [rsp+0x28],edi
   14000c1c8:	mov    QWORD PTR [rsp+0x20],rax
   14000c1cd:	call   0x140011670
   14000c1d2:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c1d7:	sub    DWORD PTR [rbx+0x8],ecx
   14000c1da:	add    DWORD PTR [rbx+0xc],ecx
   14000c1dd:	mov    edx,eax
   14000c1df:	mov    eax,ecx
   14000c1e1:	add    QWORD PTR [rbx],rax
   14000c1e4:	mov    rax,QWORD PTR [rbx+0x28]
   14000c1e8:	mov    ecx,DWORD PTR [rax+0x20]
   14000c1eb:	mov    DWORD PTR [rbx+0x4c],ecx
   14000c1ee:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c1f3:	sub    DWORD PTR [rbx+0x18],ecx
   14000c1f6:	add    DWORD PTR [rbx+0x1c],ecx
   14000c1f9:	mov    eax,ecx
   14000c1fb:	add    QWORD PTR [rbx+0x10],rax
   14000c1ff:	test   edx,edx
   14000c201:	js     0x14000c27d
   14000c203:	cmp    edx,0x1
   14000c206:	je     0x14000c2aa
   14000c20c:	mov    ecx,DWORD PTR [rbx+0x18]
   14000c20f:	test   ecx,ecx
   14000c211:	je     0x14000c282
   14000c213:	mov    eax,DWORD PTR [rbx+0x8]
   14000c216:	test   eax,eax
   14000c218:	jne    0x14000c21f
   14000c21a:	cmp    edi,0x4
   14000c21d:	jne    0x14000c296
   14000c21f:	mov    r9,QWORD PTR [rbx+0x10]
   14000c223:	mov    rdx,QWORD PTR [rbx]
   14000c226:	mov    QWORD PTR [rsp+0x50],rax
   14000c22b:	mov    QWORD PTR [rsp+0x60],rcx
   14000c230:	mov    rcx,QWORD PTR [rbx+0x28]
   14000c234:	lea    rax,[rsp+0x60]
   14000c239:	lea    r8,[rsp+0x50]
   14000c23e:	mov    DWORD PTR [rsp+0x28],edi
   14000c242:	mov    QWORD PTR [rsp+0x20],rax
   14000c247:	call   0x140011670
   14000c24c:	mov    rcx,QWORD PTR [rsp+0x50]
   14000c251:	mov    edx,eax
   14000c253:	mov    eax,ecx
   14000c255:	add    QWORD PTR [rbx],rax
   14000c258:	sub    DWORD PTR [rbx+0x8],ecx
   14000c25b:	add    DWORD PTR [rbx+0xc],ecx
   14000c25e:	mov    rax,QWORD PTR [rbx+0x28]
   14000c262:	mov    ecx,DWORD PTR [rax+0x20]
   14000c265:	mov    DWORD PTR [rbx+0x4c],ecx
   14000c268:	mov    rcx,QWORD PTR [rsp+0x60]
   14000c26d:	mov    eax,ecx
   14000c26f:	add    QWORD PTR [rbx+0x10],rax
   14000c273:	sub    DWORD PTR [rbx+0x18],ecx
   14000c276:	add    DWORD PTR [rbx+0x1c],ecx
   14000c279:	test   edx,edx
   14000c27b:	jns    0x14000c203
   14000c27d:	mov    esi,0xfffffffe
   14000c282:	mov    eax,esi
   14000c284:	mov    rbp,QWORD PTR [rsp+0x58]
   14000c289:	mov    r14,QWORD PTR [rsp+0x68]
   14000c28e:	add    rsp,0x30
   14000c292:	pop    rdi
   14000c293:	pop    rsi
   14000c294:	pop    rbx
   14000c295:	ret    
   14000c296:	test   edi,edi
   14000c298:	jne    0x14000c282
   14000c29a:	cmp    DWORD PTR [rbx+0xc],r14d
   14000c29e:	jne    0x14000c282
   14000c2a0:	cmp    DWORD PTR [rbx+0x1c],ebp
   14000c2a3:	jne    0x14000c282
   14000c2a5:	lea    eax,[rdi-0x5]
   14000c2a8:	jmp    0x14000c284
   14000c2aa:	mov    esi,0x1
   14000c2af:	jmp    0x14000c282
   14000c2b1:	mov    eax,0xfffffffe
   14000c2b6:	add    rsp,0x30
   14000c2ba:	pop    rdi
   14000c2bb:	pop    rsi
   14000c2bc:	pop    rbx
   14000c2bd:	ret    
   14000c2be:	int3   
   14000c2bf:	int3   
   14000c2c0:	mov    r9d,edx
   14000c2c3:	mov    eax,0x8421085
   14000c2c8:	mov    ecx,r9d
   14000c2cb:	mul    edx
   14000c2cd:	sub    ecx,edx
   14000c2cf:	mov    eax,0x51eb851f
   14000c2d4:	shr    ecx,1
   14000c2d6:	add    ecx,edx
   14000c2d8:	shr    ecx,0xe
   14000c2db:	lea    r8d,[r9+rcx*4]
   14000c2df:	add    ecx,0x85
   14000c2e5:	add    r8d,ecx
   14000c2e8:	imul   ecx,r9d,0x6e
   14000c2ec:	mul    ecx
   14000c2ee:	shr    edx,0x5
   14000c2f1:	sub    edx,0xffffff80
   14000c2f4:	cmp    edx,r8d
   14000c2f7:	cmova  r8d,edx
   14000c2fb:	mov    eax,r8d
   14000c2fe:	ret    
   14000c2ff:	int3   
   14000c300:	rex push rbx
   14000c302:	sub    rsp,0x20
   14000c306:	mov    rbx,rcx
   14000c309:	test   rcx,rcx
   14000c30c:	jne    0x14000c317
   14000c30e:	lea    eax,[rcx-0x2]
   14000c311:	add    rsp,0x20
   14000c315:	pop    rbx
   14000c316:	ret    
   14000c317:	mov    rdx,QWORD PTR [rcx+0x28]
   14000c31b:	test   rdx,rdx
   14000c31e:	je     0x14000c32f
   14000c320:	mov    rcx,QWORD PTR [rcx+0x40]
   14000c324:	call   QWORD PTR [rbx+0x38]
   14000c327:	mov    QWORD PTR [rbx+0x28],0x0
   14000c32f:	xor    eax,eax
   14000c331:	add    rsp,0x20
   14000c335:	pop    rbx
   14000c336:	ret    
   14000c337:	int3   
   14000c338:	int3   
   14000c339:	int3   
   14000c33a:	int3   
   14000c33b:	int3   
   14000c33c:	int3   
   14000c33d:	int3   
   14000c33e:	int3   
   14000c33f:	int3   
   14000c340:	mov    QWORD PTR [rsp+0x8],rbx
   14000c345:	mov    QWORD PTR [rsp+0x10],rsi
   14000c34a:	push   rdi
   14000c34b:	sub    rsp,0x20
   14000c34f:	mov    rbx,rcx
   14000c352:	test   edx,edx
   14000c354:	js     0x14000c364
   14000c356:	mov    ecx,0xa
   14000c35b:	mov    eax,edx
   14000c35d:	cmp    edx,ecx
   14000c35f:	cmovg  eax,ecx
   14000c362:	jmp    0x14000c369
   14000c364:	mov    eax,0x6
   14000c369:	movsxd rcx,eax
   14000c36c:	xor    esi,esi
   14000c36e:	cmp    edx,0x3
   14000c371:	lea    r9,[rip+0xea18]        # 0x14001ad90
   14000c378:	mov    r8d,0x4000
   14000c37e:	mov    eax,esi
   14000c380:	mov    edi,DWORD PTR [r9+rcx*4]
   14000c384:	cmovle eax,r8d
   14000c388:	or     edi,eax
   14000c38a:	bts    edi,0xc
   14000c38e:	test   edx,edx
   14000c390:	jne    0x14000c396
   14000c392:	bts    edi,0x13
   14000c396:	bts    edi,0xd
   14000c39a:	test   rbx,rbx
   14000c39d:	jne    0x14000c3b2
   14000c39f:	lea    eax,[rbx-0x2]
   14000c3a2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c3a7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c3ac:	add    rsp,0x20
   14000c3b0:	pop    rdi
   14000c3b1:	ret    
   14000c3b2:	mov    DWORD PTR [rbx+0x48],esi
   14000c3b5:	mov    QWORD PTR [rbx+0x4c],0x1
   14000c3bd:	mov    QWORD PTR [rbx+0x20],rsi
   14000c3c1:	mov    DWORD PTR [rbx+0xc],esi
   14000c3c4:	mov    DWORD PTR [rbx+0x1c],esi
   14000c3c7:	cmp    QWORD PTR [rbx+0x30],rsi
   14000c3cb:	jne    0x14000c3d8
   14000c3cd:	lea    rax,[rip+0xfffffffffffffa2c]        # 0x14000be00
   14000c3d4:	mov    QWORD PTR [rbx+0x30],rax
   14000c3d8:	cmp    QWORD PTR [rbx+0x38],rsi
   14000c3dc:	jne    0x14000c3e9
   14000c3de:	lea    rax,[rip+0xfffffffffffffa2b]        # 0x14000be10
   14000c3e5:	mov    QWORD PTR [rbx+0x38],rax
   14000c3e9:	mov    rcx,QWORD PTR [rbx+0x40]
   14000c3ed:	mov    edx,0x1
   14000c3f2:	mov    r8d,0x4df78
   14000c3f8:	call   QWORD PTR [rbx+0x30]
   14000c3fb:	test   rax,rax
   14000c3fe:	jne    0x14000c415
   14000c400:	mov    eax,0xfffffffc
   14000c405:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c40a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c40f:	add    rsp,0x20
   14000c413:	pop    rdi
   14000c414:	ret    
   14000c415:	mov    r9d,edi
   14000c418:	xor    r8d,r8d
   14000c41b:	xor    edx,edx
   14000c41d:	mov    rcx,rax
   14000c420:	mov    QWORD PTR [rbx+0x28],rax
   14000c424:	call   0x140013bd0
   14000c429:	test   eax,eax
   14000c42b:	je     0x14000c44a
   14000c42d:	mov    rcx,rbx
   14000c430:	call   0x14000c300
   14000c435:	mov    eax,0xffffd8f0
   14000c43a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c43f:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c444:	add    rsp,0x20
   14000c448:	pop    rdi
   14000c449:	ret    
   14000c44a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c44f:	mov    eax,esi
   14000c451:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c456:	add    rsp,0x20
   14000c45a:	pop    rdi
   14000c45b:	ret    
   14000c45c:	int3   
   14000c45d:	int3   
   14000c45e:	int3   
   14000c45f:	int3   
   14000c460:	mov    QWORD PTR [rsp+0x8],rbx
   14000c465:	mov    QWORD PTR [rsp+0x10],rbp
   14000c46a:	mov    QWORD PTR [rsp+0x18],rsi
   14000c46f:	push   rdi
   14000c470:	sub    rsp,0x20
   14000c474:	mov    eax,edx
   14000c476:	mov    esi,r8d
   14000c479:	mov    r8d,DWORD PTR [rsp+0x58]
   14000c47e:	mov    rbx,rcx
   14000c481:	mov    edx,r9d
   14000c484:	mov    ecx,eax
   14000c486:	mov    edi,r9d
   14000c489:	call   0x140012ff0
   14000c48e:	mov    ebp,eax
   14000c490:	bts    ebp,0xd
   14000c494:	test   rbx,rbx
   14000c497:	jne    0x14000c4a1
   14000c499:	lea    eax,[rbx-0x2]
   14000c49c:	jmp    0x14000c541
   14000c4a1:	cmp    esi,0x8
   14000c4a4:	jne    0x14000c53c
   14000c4aa:	mov    eax,DWORD PTR [rsp+0x50]
   14000c4ae:	dec    eax
   14000c4b0:	cmp    eax,esi
   14000c4b2:	ja     0x14000c53c
   14000c4b8:	cmp    edi,0xf
   14000c4bb:	je     0x14000c4c4
   14000c4bd:	neg    edi
   14000c4bf:	cmp    edi,0xf
   14000c4c2:	jne    0x14000c53c
   14000c4c4:	xor    eax,eax
   14000c4c6:	mov    QWORD PTR [rbx+0x4c],0x1
   14000c4ce:	mov    DWORD PTR [rbx+0x48],eax
   14000c4d1:	mov    QWORD PTR [rbx+0x20],rax
   14000c4d5:	mov    DWORD PTR [rbx+0xc],eax
   14000c4d8:	mov    DWORD PTR [rbx+0x1c],eax
   14000c4db:	cmp    QWORD PTR [rbx+0x30],rax
   14000c4df:	jne    0x14000c4ec
   14000c4e1:	lea    rax,[rip+0xfffffffffffff918]        # 0x14000be00
   14000c4e8:	mov    QWORD PTR [rbx+0x30],rax
   14000c4ec:	cmp    QWORD PTR [rbx+0x38],0x0
   14000c4f1:	jne    0x14000c4fe
   14000c4f3:	lea    rax,[rip+0xfffffffffffff916]        # 0x14000be10
   14000c4fa:	mov    QWORD PTR [rbx+0x38],rax
   14000c4fe:	mov    rcx,QWORD PTR [rbx+0x40]
   14000c502:	mov    edx,0x1
   14000c507:	mov    r8d,0x4df78
   14000c50d:	call   QWORD PTR [rbx+0x30]
   14000c510:	test   rax,rax
   14000c513:	jne    0x14000c51c
   14000c515:	mov    eax,0xfffffffc
   14000c51a:	jmp    0x14000c541
   14000c51c:	mov    r9d,ebp
   14000c51f:	xor    r8d,r8d
   14000c522:	xor    edx,edx
   14000c524:	mov    rcx,rax
   14000c527:	mov    QWORD PTR [rbx+0x28],rax
   14000c52b:	call   0x140013bd0
   14000c530:	test   eax,eax
   14000c532:	je     0x14000c556
   14000c534:	mov    rcx,rbx
   14000c537:	call   0x14000c300
   14000c53c:	mov    eax,0xffffd8f0
   14000c541:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c546:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c54b:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c550:	add    rsp,0x20
   14000c554:	pop    rdi
   14000c555:	ret    
   14000c556:	xor    eax,eax
   14000c558:	jmp    0x14000c541
   14000c55a:	int3   
   14000c55b:	int3   
   14000c55c:	int3   
   14000c55d:	int3   
   14000c55e:	int3   
   14000c55f:	int3   
   14000c560:	sub    rsp,0x28
   14000c564:	test   rcx,rcx
   14000c567:	je     0x14000c59e
   14000c569:	mov    rax,QWORD PTR [rcx+0x28]
   14000c56d:	test   rax,rax
   14000c570:	je     0x14000c59e
   14000c572:	cmp    QWORD PTR [rcx+0x30],0x0
   14000c577:	je     0x14000c59e
   14000c579:	cmp    QWORD PTR [rcx+0x38],0x0
   14000c57e:	je     0x14000c59e
   14000c580:	xor    edx,edx
   14000c582:	xor    r8d,r8d
   14000c585:	mov    DWORD PTR [rcx+0x1c],edx
   14000c588:	mov    DWORD PTR [rcx+0xc],edx
   14000c58b:	mov    r9d,DWORD PTR [rax+0x10]
   14000c58f:	mov    rcx,rax
   14000c592:	call   0x140013bd0
   14000c597:	xor    eax,eax
   14000c599:	add    rsp,0x28
   14000c59d:	ret    
   14000c59e:	mov    eax,0xfffffffe
   14000c5a3:	add    rsp,0x28
   14000c5a7:	ret    
   14000c5a8:	int3   
   14000c5a9:	int3   
   14000c5aa:	int3   
   14000c5ab:	int3   
   14000c5ac:	int3   
   14000c5ad:	int3   
   14000c5ae:	int3   
   14000c5af:	int3   
   14000c5b0:	lea    r8,[rip+0x14a89]        # 0x140021040
   14000c5b7:	xor    eax,eax
   14000c5b9:	mov    rdx,r8
   14000c5bc:	nop    DWORD PTR [rax+0x0]
   14000c5c0:	cmp    DWORD PTR [rdx],ecx
   14000c5c2:	je     0x14000c5d2
   14000c5c4:	inc    eax
   14000c5c6:	add    rdx,0x10
   14000c5ca:	cmp    eax,0xa
   14000c5cd:	jb     0x14000c5c0
   14000c5cf:	xor    eax,eax
   14000c5d1:	ret    
   14000c5d2:	add    rax,rax
   14000c5d5:	mov    rax,QWORD PTR [r8+rax*8+0x8]
   14000c5da:	ret    
   14000c5db:	int3   
   14000c5dc:	int3   
   14000c5dd:	int3   
   14000c5de:	int3   
   14000c5df:	int3   
   14000c5e0:	sub    rsp,0x28
   14000c5e4:	mov    r8,rdx
   14000c5e7:	mov    rdx,rcx
   14000c5ea:	lea    rcx,[rsp+0x40]
   14000c5ef:	mov    QWORD PTR [rsp+0x40],0x0
   14000c5f8:	call   QWORD PTR [rip+0xcd22]        # 0x140019320
   14000c5fe:	mov    rax,QWORD PTR [rsp+0x40]
   14000c603:	add    rsp,0x28
   14000c607:	ret    
   14000c608:	int3   
   14000c609:	int3   
   14000c60a:	int3   
   14000c60b:	int3   
   14000c60c:	int3   
   14000c60d:	int3   
   14000c60e:	int3   
   14000c60f:	int3   
   14000c610:	rex.W jmp QWORD PTR [rip+0xccd9]        # 0x1400192f0
   14000c617:	int3   
   14000c618:	int3   
   14000c619:	int3   
   14000c61a:	int3   
   14000c61b:	int3   
   14000c61c:	int3   
   14000c61d:	int3   
   14000c61e:	int3   
   14000c61f:	int3   
   14000c620:	rex push rbx
   14000c622:	sub    rsp,0x20
   14000c626:	mov    r9,r8
   14000c629:	mov    r8,rdx
   14000c62c:	mov    rdx,rcx
   14000c62f:	lea    rcx,[rsp+0x48]
   14000c634:	xor    ebx,ebx
   14000c636:	mov    QWORD PTR [rsp+0x48],rbx
   14000c63b:	call   QWORD PTR [rip+0xccef]        # 0x140019330
   14000c641:	mov    rcx,QWORD PTR [rsp+0x48]
   14000c646:	test   eax,eax
   14000c648:	cmovne rcx,rbx
   14000c64c:	mov    rax,rcx
   14000c64f:	add    rsp,0x20
   14000c653:	pop    rbx
   14000c654:	ret    
   14000c655:	int3   
   14000c656:	int3   
   14000c657:	int3   
   14000c658:	int3   
   14000c659:	int3   
   14000c65a:	int3   
   14000c65b:	int3   
   14000c65c:	int3   
   14000c65d:	int3   
   14000c65e:	int3   
   14000c65f:	int3   
   14000c660:	rex push rbx
   14000c662:	push   rbp
   14000c663:	push   r12
   14000c665:	sub    rsp,0x60
   14000c669:	mov    rbx,rcx
   14000c66c:	mov    r12d,0x8
   14000c672:	test   rcx,rcx
   14000c675:	je     0x14000c9f6
   14000c67b:	mov    rbp,QWORD PTR [rcx+0x28]
   14000c67f:	test   rbp,rbp
   14000c682:	je     0x14000c9f6
   14000c688:	cmp    edx,0x1
   14000c68b:	jne    0x14000c694
   14000c68d:	lea    edx,[r12-0x6]
   14000c692:	jmp    0x14000c6a9
   14000c694:	test   edx,0xfffffff9
   14000c69a:	jne    0x14000c9f6
   14000c6a0:	cmp    edx,0x6
   14000c6a3:	je     0x14000c9f6
   14000c6a9:	cmp    DWORD PTR [rbp+0x2b08],0x0
   14000c6b0:	mov    r8d,DWORD PTR [rbp+0x2b00]
   14000c6b7:	mov    eax,0x9
   14000c6bc:	cmovg  r12d,eax
   14000c6c0:	mov    eax,DWORD PTR [rcx+0x8]
   14000c6c3:	mov    QWORD PTR [rsp+0x48],r14
   14000c6c8:	xor    r14d,r14d
   14000c6cb:	mov    QWORD PTR [rsp+0x98],rax
   14000c6d3:	mov    DWORD PTR [rbp+0x2b00],r14d
   14000c6da:	cmp    DWORD PTR [rbp+0xab0c],r14d
   14000c6e1:	jl     0x14000c7a9
   14000c6e7:	mov    ecx,DWORD PTR [rbp+0x2b04]
   14000c6ed:	test   ecx,ecx
   14000c6ef:	je     0x14000c708
   14000c6f1:	cmp    edx,0x4
   14000c6f4:	je     0x14000c708
   14000c6f6:	lea    eax,[r14-0x2]
   14000c6fa:	mov    r14,QWORD PTR [rsp+0x48]
   14000c6ff:	add    rsp,0x60
   14000c703:	pop    r12
   14000c705:	pop    rbp
   14000c706:	pop    rbx
   14000c707:	ret    
   14000c708:	cmp    edx,0x4
   14000c70b:	mov    eax,r14d
   14000c70e:	sete   al
   14000c711:	or     eax,ecx
   14000c713:	mov    DWORD PTR [rbp+0x2b04],eax
   14000c719:	cmp    edx,0x4
   14000c71c:	jne    0x14000c7ee
   14000c722:	test   r8d,r8d
   14000c725:	je     0x14000c7f2
   14000c72b:	mov    eax,DWORD PTR [rbx+0x8]
   14000c72e:	mov    r9,QWORD PTR [rbx+0x10]
   14000c732:	or     r12d,edx
   14000c735:	mov    rdx,QWORD PTR [rbx]
   14000c738:	mov    QWORD PTR [rsp+0x80],rax
   14000c740:	mov    eax,DWORD PTR [rbx+0x18]
   14000c743:	mov    QWORD PTR [rsp+0x90],rax
   14000c74b:	lea    rax,[rsp+0x90]
   14000c753:	mov    DWORD PTR [rsp+0x30],r12d
   14000c758:	mov    QWORD PTR [rsp+0x28],rax
   14000c75d:	lea    r8,[rsp+0x80]
   14000c765:	mov    rcx,rbp
   14000c768:	mov    QWORD PTR [rsp+0x20],r9
   14000c76d:	call   0x140015440
   14000c772:	mov    rdx,QWORD PTR [rsp+0x80]
   14000c77a:	mov    DWORD PTR [rbp+0xab0c],eax
   14000c780:	sub    DWORD PTR [rbx+0x8],edx
   14000c783:	add    DWORD PTR [rbx+0xc],edx
   14000c786:	mov    ecx,edx
   14000c788:	mov    rdx,QWORD PTR [rsp+0x90]
   14000c790:	add    QWORD PTR [rbx],rcx
   14000c793:	mov    ecx,DWORD PTR [rbp+0x1c]
   14000c796:	sub    DWORD PTR [rbx+0x18],edx
   14000c799:	add    DWORD PTR [rbx+0x1c],edx
   14000c79c:	mov    DWORD PTR [rbx+0x4c],ecx
   14000c79f:	mov    ecx,edx
   14000c7a1:	add    QWORD PTR [rbx+0x10],rcx
   14000c7a5:	test   eax,eax
   14000c7a7:	jns    0x14000c7bc
   14000c7a9:	mov    eax,0xfffffffd
   14000c7ae:	mov    r14,QWORD PTR [rsp+0x48]
   14000c7b3:	add    rsp,0x60
   14000c7b7:	pop    r12
   14000c7b9:	pop    rbp
   14000c7ba:	pop    rbx
   14000c7bb:	ret    
   14000c7bc:	je     0x14000c7db
   14000c7be:	mov    r14,QWORD PTR [rsp+0x48]
   14000c7c3:	mov    DWORD PTR [rbp+0xab0c],0xffffffff
   14000c7cd:	mov    eax,0xfffffffb
   14000c7d2:	add    rsp,0x60
   14000c7d6:	pop    r12
   14000c7d8:	pop    rbp
   14000c7d9:	pop    rbx
   14000c7da:	ret    
   14000c7db:	mov    eax,0x1
   14000c7e0:	mov    r14,QWORD PTR [rsp+0x48]
   14000c7e5:	add    rsp,0x60
   14000c7e9:	pop    r12
   14000c7eb:	pop    rbp
   14000c7ec:	pop    rbx
   14000c7ed:	ret    
   14000c7ee:	or     r12d,0x2
   14000c7f2:	mov    eax,DWORD PTR [rbp+0x2afc]
   14000c7f8:	mov    QWORD PTR [rsp+0x88],rsi
   14000c800:	mov    QWORD PTR [rsp+0x58],rdi
   14000c805:	test   eax,eax
   14000c807:	je     0x14000c872
   14000c809:	mov    esi,DWORD PTR [rbx+0x18]
   14000c80c:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c810:	lea    rdx,[rbp+0x2b0c]
   14000c817:	cmp    eax,esi
   14000c819:	cmovb  esi,eax
   14000c81c:	mov    eax,DWORD PTR [rbp+0x2af8]
   14000c822:	add    rdx,rax
   14000c825:	mov    r8d,esi
   14000c828:	mov    edi,esi
   14000c82a:	call   0x140017346
   14000c82f:	add    QWORD PTR [rbx+0x10],rdi
   14000c833:	sub    DWORD PTR [rbx+0x18],esi
   14000c836:	add    DWORD PTR [rbx+0x1c],esi
   14000c839:	mov    eax,DWORD PTR [rbp+0x2af8]
   14000c83f:	sub    DWORD PTR [rbp+0x2afc],esi
   14000c845:	add    eax,esi
   14000c847:	and    eax,0x7fff
   14000c84c:	mov    DWORD PTR [rbp+0x2af8],eax
   14000c852:	cmp    DWORD PTR [rbp+0xab0c],r14d
   14000c859:	jne    0x14000c86a
   14000c85b:	cmp    DWORD PTR [rbp+0x2afc],r14d
   14000c862:	jne    0x14000c86a
   14000c864:	mov    r14d,0x1
   14000c86a:	mov    eax,r14d
   14000c86d:	jmp    0x14000c9b7
   14000c872:	mov    QWORD PTR [rsp+0x50],r13
   14000c877:	mov    QWORD PTR [rsp+0x40],r15
   14000c87c:	movsxd r13,edx
   14000c87f:	mov    eax,DWORD PTR [rbx+0x8]
   14000c882:	mov    ecx,DWORD PTR [rbp+0x2af8]
   14000c888:	lea    rdx,[rbp+0x2b0c]
   14000c88f:	mov    QWORD PTR [rsp+0x80],rax
   14000c897:	mov    eax,0x8000
   14000c89c:	mov    r9,rdx
   14000c89f:	mov    rdx,QWORD PTR [rbx]
   14000c8a2:	sub    eax,ecx
   14000c8a4:	mov    DWORD PTR [rsp+0x30],r12d
   14000c8a9:	mov    QWORD PTR [rsp+0x90],rax
   14000c8b1:	lea    rax,[rbp+0x2b0c]
   14000c8b8:	lea    r8,[rsp+0x80]
   14000c8c0:	add    rax,rcx
   14000c8c3:	lea    rcx,[rsp+0x90]
   14000c8cb:	mov    QWORD PTR [rsp+0x28],rcx
   14000c8d0:	mov    rcx,rbp
   14000c8d3:	mov    QWORD PTR [rsp+0x20],rax
   14000c8d8:	call   0x140015440
   14000c8dd:	mov    rdx,QWORD PTR [rsp+0x80]
   14000c8e5:	mov    DWORD PTR [rbp+0xab0c],eax
   14000c8eb:	sub    DWORD PTR [rbx+0x8],edx
   14000c8ee:	add    DWORD PTR [rbx+0xc],edx
   14000c8f1:	mov    ecx,edx
   14000c8f3:	mov    r15d,eax
   14000c8f6:	lea    rdx,[rbp+0x2b0c]
   14000c8fd:	add    QWORD PTR [rbx],rcx
   14000c900:	mov    ecx,DWORD PTR [rbp+0x1c]
   14000c903:	mov    DWORD PTR [rbx+0x4c],ecx
   14000c906:	mov    rcx,QWORD PTR [rsp+0x90]
   14000c90e:	mov    eax,DWORD PTR [rbp+0x2af8]
   14000c914:	mov    DWORD PTR [rbp+0x2afc],ecx
   14000c91a:	mov    esi,DWORD PTR [rbx+0x18]
   14000c91d:	cmp    ecx,esi
   14000c91f:	cmovb  esi,ecx
   14000c922:	mov    rcx,QWORD PTR [rbx+0x10]
   14000c926:	add    rdx,rax
   14000c929:	mov    r8d,esi
   14000c92c:	mov    edi,esi
   14000c92e:	call   0x140017346
   14000c933:	add    QWORD PTR [rbx+0x10],rdi
   14000c937:	sub    DWORD PTR [rbx+0x18],esi
   14000c93a:	add    DWORD PTR [rbx+0x1c],esi
   14000c93d:	mov    eax,DWORD PTR [rbp+0x2af8]
   14000c943:	sub    DWORD PTR [rbp+0x2afc],esi
   14000c949:	mov    ecx,DWORD PTR [rbp+0x2afc]
   14000c94f:	add    eax,esi
   14000c951:	and    eax,0x7fff
   14000c956:	mov    DWORD PTR [rbp+0x2af8],eax
   14000c95c:	test   r15d,r15d
   14000c95f:	js     0x14000c9ef
   14000c965:	cmp    r15d,0x1
   14000c969:	jne    0x14000c975
   14000c96b:	cmp    QWORD PTR [rsp+0x98],r14
   14000c973:	je     0x14000c98a
   14000c975:	cmp    r13,0x4
   14000c979:	jne    0x14000c991
   14000c97b:	test   r15d,r15d
   14000c97e:	je     0x14000c9d2
   14000c980:	cmp    DWORD PTR [rbx+0x18],r14d
   14000c984:	jne    0x14000c87f
   14000c98a:	mov    eax,0xfffffffb
   14000c98f:	jmp    0x14000c9ad
   14000c991:	test   r15d,r15d
   14000c994:	je     0x14000c9e5
   14000c996:	cmp    DWORD PTR [rbx+0x8],r14d
   14000c99a:	je     0x14000c9aa
   14000c99c:	cmp    DWORD PTR [rbx+0x18],r14d
   14000c9a0:	je     0x14000c9aa
   14000c9a2:	test   ecx,ecx
   14000c9a4:	je     0x14000c87f
   14000c9aa:	mov    eax,r14d
   14000c9ad:	mov    r13,QWORD PTR [rsp+0x50]
   14000c9b2:	mov    r15,QWORD PTR [rsp+0x40]
   14000c9b7:	mov    rdi,QWORD PTR [rsp+0x58]
   14000c9bc:	mov    rsi,QWORD PTR [rsp+0x88]
   14000c9c4:	mov    r14,QWORD PTR [rsp+0x48]
   14000c9c9:	add    rsp,0x60
   14000c9cd:	pop    r12
   14000c9cf:	pop    rbp
   14000c9d0:	pop    rbx
   14000c9d1:	ret    
   14000c9d2:	mov    eax,0xfffffffb
   14000c9d7:	mov    r14d,0x1
   14000c9dd:	test   ecx,ecx
   14000c9df:	cmovne r14d,eax
   14000c9e3:	jmp    0x14000c9aa
   14000c9e5:	test   ecx,ecx
   14000c9e7:	jne    0x14000c9aa
   14000c9e9:	lea    r14d,[rcx+0x1]
   14000c9ed:	jmp    0x14000c9aa
   14000c9ef:	mov    eax,0xfffffffd
   14000c9f4:	jmp    0x14000c9ad
   14000c9f6:	mov    eax,0xfffffffe
   14000c9fb:	add    rsp,0x60
   14000c9ff:	pop    r12
   14000ca01:	pop    rbp
   14000ca02:	pop    rbx
   14000ca03:	ret    
   14000ca04:	int3   
   14000ca05:	int3   
   14000ca06:	int3   
   14000ca07:	int3   
   14000ca08:	int3   
   14000ca09:	int3   
   14000ca0a:	int3   
   14000ca0b:	int3   
   14000ca0c:	int3   
   14000ca0d:	int3   
   14000ca0e:	int3   
   14000ca0f:	int3   
   14000ca10:	rex push rbx
   14000ca12:	sub    rsp,0x20
   14000ca16:	mov    rbx,rcx
   14000ca19:	test   rcx,rcx
   14000ca1c:	jne    0x14000ca27
   14000ca1e:	lea    eax,[rcx-0x2]
   14000ca21:	add    rsp,0x20
   14000ca25:	pop    rbx
   14000ca26:	ret    
   14000ca27:	mov    rdx,QWORD PTR [rcx+0x28]
   14000ca2b:	test   rdx,rdx
   14000ca2e:	je     0x14000ca3f
   14000ca30:	mov    rcx,QWORD PTR [rcx+0x40]
   14000ca34:	call   QWORD PTR [rbx+0x38]
   14000ca37:	mov    QWORD PTR [rbx+0x28],0x0
   14000ca3f:	xor    eax,eax
   14000ca41:	add    rsp,0x20
   14000ca45:	pop    rbx
   14000ca46:	ret    
   14000ca47:	int3   
   14000ca48:	int3   
   14000ca49:	int3   
   14000ca4a:	int3   
   14000ca4b:	int3   
   14000ca4c:	int3   
   14000ca4d:	int3   
   14000ca4e:	int3   
   14000ca4f:	int3   
   14000ca50:	mov    edx,0xf
   14000ca55:	jmp    0x14000ca60
   14000ca5a:	int3   
   14000ca5b:	int3   
   14000ca5c:	int3   
   14000ca5d:	int3   
   14000ca5e:	int3   
   14000ca5f:	int3   
   14000ca60:	mov    QWORD PTR [rsp+0x10],rbx
   14000ca65:	push   rdi
   14000ca66:	sub    rsp,0x20
   14000ca6a:	mov    edi,edx
   14000ca6c:	mov    rbx,rcx
   14000ca6f:	test   rcx,rcx
   14000ca72:	jne    0x14000ca82
   14000ca74:	lea    eax,[rcx-0x2]
   14000ca77:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ca7c:	add    rsp,0x20
   14000ca80:	pop    rdi
   14000ca81:	ret    
   14000ca82:	cmp    edx,0xf
   14000ca85:	je     0x14000caa0
   14000ca87:	mov    eax,edx
   14000ca89:	neg    eax
   14000ca8b:	cmp    eax,0xf
   14000ca8e:	je     0x14000caa0
   14000ca90:	mov    eax,0xffffd8f0
   14000ca95:	mov    rbx,QWORD PTR [rsp+0x38]
   14000ca9a:	add    rsp,0x20
   14000ca9e:	pop    rdi
   14000ca9f:	ret    
   14000caa0:	mov    QWORD PTR [rsp+0x30],rsi
   14000caa5:	xor    esi,esi
   14000caa7:	mov    QWORD PTR [rcx+0x48],rsi
   14000caab:	mov    QWORD PTR [rcx+0x20],rsi
   14000caaf:	mov    DWORD PTR [rcx+0xc],esi
   14000cab2:	mov    DWORD PTR [rcx+0x1c],esi
   14000cab5:	mov    DWORD PTR [rcx+0x50],esi
   14000cab8:	cmp    QWORD PTR [rcx+0x30],rsi
   14000cabc:	jne    0x14000cac9
   14000cabe:	lea    rax,[rip+0xfffffffffffff33b]        # 0x14000be00
   14000cac5:	mov    QWORD PTR [rcx+0x30],rax
   14000cac9:	cmp    QWORD PTR [rcx+0x38],rsi
   14000cacd:	jne    0x14000cada
   14000cacf:	lea    rax,[rip+0xfffffffffffff33a]        # 0x14000be10
   14000cad6:	mov    QWORD PTR [rcx+0x38],rax
   14000cada:	mov    rcx,QWORD PTR [rcx+0x40]
   14000cade:	mov    edx,0x1
   14000cae3:	mov    r8d,0xab10
   14000cae9:	call   QWORD PTR [rbx+0x30]
   14000caec:	test   rax,rax
   14000caef:	jne    0x14000cb06
   14000caf1:	mov    eax,0xfffffffc
   14000caf6:	mov    rsi,QWORD PTR [rsp+0x30]
   14000cafb:	mov    rbx,QWORD PTR [rsp+0x38]
   14000cb00:	add    rsp,0x20
   14000cb04:	pop    rdi
   14000cb05:	ret    
   14000cb06:	mov    QWORD PTR [rbx+0x28],rax
   14000cb0a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000cb0f:	mov    DWORD PTR [rax],esi
   14000cb11:	mov    QWORD PTR [rax+0x2af8],rsi
   14000cb18:	mov    rsi,QWORD PTR [rsp+0x30]
   14000cb1d:	mov    DWORD PTR [rax+0xab0c],0x1
   14000cb27:	mov    QWORD PTR [rax+0x2b00],0x1
   14000cb32:	mov    DWORD PTR [rax+0x2b08],edi
   14000cb38:	xor    eax,eax
   14000cb3a:	add    rsp,0x20
   14000cb3e:	pop    rdi
   14000cb3f:	ret    
   14000cb40:	mov    QWORD PTR [rsp+0x8],rbx
   14000cb45:	mov    QWORD PTR [rsp+0x10],rsi
   14000cb4a:	mov    QWORD PTR [rsp+0x18],rdi
   14000cb4f:	mov    QWORD PTR [rsp+0x20],r14
   14000cb54:	push   rbp
   14000cb55:	mov    rbp,rsp
   14000cb58:	sub    rsp,0x80
   14000cb5f:	mov    rdi,rdx
   14000cb62:	xor    edx,edx
   14000cb64:	mov    rsi,r8
   14000cb67:	mov    r14,rcx
   14000cb6a:	lea    r8d,[rdx+0x58]
   14000cb6e:	lea    rcx,[rbp-0x60]
   14000cb72:	mov    ebx,r9d
   14000cb75:	call   0x14001734c
   14000cb7a:	mov    edx,DWORD PTR [rdi]
   14000cb7c:	mov    eax,edx
   14000cb7e:	or     eax,ebx
   14000cb80:	cmp    eax,0xffffffff
   14000cb83:	jbe    0x14000cb8f
   14000cb85:	mov    eax,0xffffd8f0
   14000cb8a:	jmp    0x14000cc6e
   14000cb8f:	mov    r9,QWORD PTR [rbp-0x30]
   14000cb93:	lea    rax,[rip+0xfffffffffffff266]        # 0x14000be00
   14000cb9a:	lea    rcx,[rip+0xfffffffffffff26f]        # 0x14000be10
   14000cba1:	mov    DWORD PTR [rbp-0x48],edx
   14000cba4:	mov    DWORD PTR [rbp-0x58],ebx
   14000cba7:	xor    ebx,ebx
   14000cba9:	test   r9,r9
   14000cbac:	lea    edx,[rbx+0x1]
   14000cbaf:	mov    r8d,0xab10
   14000cbb5:	cmove  r9,rax
   14000cbb9:	mov    rax,QWORD PTR [rbp-0x28]
   14000cbbd:	mov    QWORD PTR [rbp-0x60],rsi
   14000cbc1:	test   rax,rax
   14000cbc4:	mov    QWORD PTR [rbp-0x50],r14
   14000cbc8:	mov    QWORD PTR [rbp-0x18],rbx
   14000cbcc:	cmove  rax,rcx
   14000cbd0:	mov    rcx,QWORD PTR [rbp-0x20]
   14000cbd4:	mov    QWORD PTR [rbp-0x40],rbx
   14000cbd8:	mov    DWORD PTR [rbp-0x54],ebx
   14000cbdb:	mov    DWORD PTR [rbp-0x44],ebx
   14000cbde:	mov    DWORD PTR [rbp-0x10],ebx
   14000cbe1:	mov    QWORD PTR [rbp-0x30],r9
   14000cbe5:	mov    QWORD PTR [rbp-0x28],rax
   14000cbe9:	call   r9
   14000cbec:	test   rax,rax
   14000cbef:	je     0x14000cc69
   14000cbf1:	lea    edx,[rbx+0x4]
   14000cbf4:	lea    rcx,[rbp-0x60]
   14000cbf8:	mov    QWORD PTR [rbp-0x38],rax
   14000cbfc:	mov    DWORD PTR [rax],ebx
   14000cbfe:	mov    QWORD PTR [rax+0x2af8],rbx
   14000cc05:	mov    DWORD PTR [rax+0xab0c],0x1
   14000cc0f:	mov    QWORD PTR [rax+0x2b00],0x1
   14000cc1a:	mov    DWORD PTR [rax+0x2b08],0xf
   14000cc24:	call   0x14000c660
   14000cc29:	mov    rdx,QWORD PTR [rbp-0x38]
   14000cc2d:	mov    ebx,eax
   14000cc2f:	cmp    eax,0x1
   14000cc32:	je     0x14000cc54
   14000cc34:	test   rdx,rdx
   14000cc37:	je     0x14000cc40
   14000cc39:	mov    rcx,QWORD PTR [rbp-0x20]
   14000cc3d:	call   QWORD PTR [rbp-0x28]
   14000cc40:	cmp    ebx,0xfffffffb
   14000cc43:	jne    0x14000cc50
   14000cc45:	cmp    DWORD PTR [rbp-0x58],0x0
   14000cc49:	jne    0x14000cc50
   14000cc4b:	mov    ebx,0xfffffffd
   14000cc50:	mov    eax,ebx
   14000cc52:	jmp    0x14000cc6e
   14000cc54:	mov    eax,DWORD PTR [rbp-0x44]
   14000cc57:	mov    DWORD PTR [rdi],eax
   14000cc59:	test   rdx,rdx
   14000cc5c:	je     0x14000cc65
   14000cc5e:	mov    rcx,QWORD PTR [rbp-0x20]
   14000cc62:	call   QWORD PTR [rbp-0x28]
   14000cc65:	xor    eax,eax
   14000cc67:	jmp    0x14000cc6e
   14000cc69:	mov    eax,0xfffffffc
   14000cc6e:	lea    r11,[rsp+0x80]
   14000cc76:	mov    rbx,QWORD PTR [r11+0x10]
   14000cc7a:	mov    rsi,QWORD PTR [r11+0x18]
   14000cc7e:	mov    rdi,QWORD PTR [r11+0x20]
   14000cc82:	mov    r14,QWORD PTR [r11+0x28]
   14000cc86:	mov    rsp,r11
   14000cc89:	pop    rbp
   14000cc8a:	ret    
   14000cc8b:	int3   
   14000cc8c:	int3   
   14000cc8d:	int3   
   14000cc8e:	int3   
   14000cc8f:	int3   
   14000cc90:	lea    rax,[rip+0xec29]        # 0x14001b8c0
   14000cc97:	ret    
   14000cc98:	int3   
   14000cc99:	int3   
   14000cc9a:	int3   
   14000cc9b:	int3   
   14000cc9c:	int3   
   14000cc9d:	int3   
   14000cc9e:	int3   
   14000cc9f:	int3   
   14000cca0:	mov    BYTE PTR [rcx],dl
   14000cca2:	shr    dx,0x8
   14000cca6:	mov    BYTE PTR [rcx+0x1],dl
   14000cca9:	ret    
   14000ccaa:	int3   
   14000ccab:	int3   
   14000ccac:	int3   
   14000ccad:	int3   
   14000ccae:	int3   
   14000ccaf:	int3   
   14000ccb0:	mov    eax,edx
   14000ccb2:	mov    BYTE PTR [rcx],dl
   14000ccb4:	shr    eax,0x8
   14000ccb7:	mov    BYTE PTR [rcx+0x1],al
   14000ccba:	mov    eax,edx
   14000ccbc:	shr    edx,0x18
   14000ccbf:	shr    eax,0x10
   14000ccc2:	mov    BYTE PTR [rcx+0x3],dl
   14000ccc5:	mov    BYTE PTR [rcx+0x2],al
   14000ccc8:	ret    
   14000ccc9:	int3   
   14000ccca:	int3   
   14000cccb:	int3   
   14000cccc:	int3   
   14000cccd:	int3   
   14000ccce:	int3   
   14000cccf:	int3   
   14000ccd0:	mov    QWORD PTR [rsp+0x10],rbx
   14000ccd5:	mov    QWORD PTR [rsp+0x18],rbp
   14000ccda:	mov    QWORD PTR [rsp+0x20],rsi
   14000ccdf:	push   rdi
   14000cce0:	push   r12
   14000cce2:	push   r13
   14000cce4:	push   r14
   14000cce6:	push   r15
   14000cce8:	sub    rsp,0xf0
   14000ccef:	xor    eax,eax
   14000ccf1:	mov    r13,r8
   14000ccf4:	mov    rdi,rcx
   14000ccf7:	mov    rsi,rdx
   14000ccfa:	lea    rcx,[rsp+0x50]
   14000ccff:	lea    r8d,[rax+0x68]
   14000cd03:	xor    edx,edx
   14000cd05:	mov    r12,r9
   14000cd08:	mov    ebp,eax
   14000cd0a:	call   0x14001734c
   14000cd0f:	mov    ebx,DWORD PTR [rsp+0x150]
   14000cd16:	mov    eax,0x6
   14000cd1b:	test   ebx,ebx
   14000cd1d:	cmovs  ebx,eax
   14000cd20:	test   rdi,rdi
   14000cd23:	je     0x14000ce17
   14000cd29:	test   rsi,rsi
   14000cd2c:	je     0x14000ce17
   14000cd32:	test   r12,r12
   14000cd35:	je     0x14000cd40
   14000cd37:	test   r13,r13
   14000cd3a:	je     0x14000ce17
   14000cd40:	movzx  r15d,WORD PTR [rsp+0x148]
   14000cd49:	mov    r14,QWORD PTR [rsp+0x140]
   14000cd51:	test   r15w,r15w
   14000cd55:	je     0x14000cd60
   14000cd57:	test   r14,r14
   14000cd5a:	je     0x14000ce17
   14000cd60:	mov    eax,ebx
   14000cd62:	and    eax,0xf
   14000cd65:	cmp    al,0xa
   14000cd67:	ja     0x14000ce17
   14000cd6d:	movzx  eax,BYTE PTR [rsi]
   14000cd70:	mov    rcx,rsi
   14000cd73:	cmp    al,0x2f
   14000cd75:	je     0x14000ce17
   14000cd7b:	test   al,al
   14000cd7d:	je     0x14000cd9b
   14000cd7f:	nop
   14000cd80:	cmp    al,0x5c
   14000cd82:	je     0x14000ce17
   14000cd88:	cmp    al,0x3a
   14000cd8a:	je     0x14000ce17
   14000cd90:	movzx  eax,BYTE PTR [rcx+0x1]
   14000cd94:	inc    rcx
   14000cd97:	test   al,al
   14000cd99:	jne    0x14000cd80
   14000cd9b:	lea    rdx,[rsp+0xc0]
   14000cda3:	mov    rcx,rdi
   14000cda6:	call   QWORD PTR [rip+0xc594]        # 0x140019340
   14000cdac:	lea    rcx,[rsp+0x50]
   14000cdb1:	test   eax,eax
   14000cdb3:	je     0x14000cea0
   14000cdb9:	lea    rax,[rip+0x540]        # 0x14000d300
   14000cdc0:	xor    edx,edx
   14000cdc2:	mov    QWORD PTR [rsp+0xa0],rax
   14000cdca:	lea    rax,[rsp+0x50]
   14000cdcf:	mov    QWORD PTR [rsp+0xa8],rax
   14000cdd7:	call   0x140011070
   14000cddc:	test   eax,eax
   14000cdde:	je     0x14000ce17
   14000cde0:	lea    r8,[rip+0xf055]        # 0x14001be3c
   14000cde7:	lea    rcx,[rsp+0x120]
   14000cdef:	mov    rdx,rdi
   14000cdf2:	mov    QWORD PTR [rsp+0x120],rbp
   14000cdfa:	call   QWORD PTR [rip+0xc520]        # 0x140019320
   14000ce00:	mov    rcx,QWORD PTR [rsp+0x120]
   14000ce08:	test   rcx,rcx
   14000ce0b:	jne    0x14000ce3a
   14000ce0d:	lea    rcx,[rsp+0x50]
   14000ce12:	call   0x140010d50
   14000ce17:	xor    eax,eax
   14000ce19:	lea    r11,[rsp+0xf0]
   14000ce21:	mov    rbx,QWORD PTR [r11+0x38]
   14000ce25:	mov    rbp,QWORD PTR [r11+0x40]
   14000ce29:	mov    rsi,QWORD PTR [r11+0x48]
   14000ce2d:	mov    rsp,r11
   14000ce30:	pop    r15
   14000ce32:	pop    r14
   14000ce34:	pop    r13
   14000ce36:	pop    r12
   14000ce38:	pop    rdi
   14000ce39:	ret    
   14000ce3a:	mov    rax,QWORD PTR [rsp+0xb0]
   14000ce42:	mov    ebp,0x1
   14000ce47:	mov    QWORD PTR [rax+0x60],rcx
   14000ce4b:	xor    eax,eax
   14000ce4d:	lea    rcx,[rsp+0x50]
   14000ce52:	mov    r9,r12
   14000ce55:	mov    DWORD PTR [rsp+0x40],eax
   14000ce59:	mov    QWORD PTR [rsp+0x38],rax
   14000ce5e:	mov    DWORD PTR [rsp+0x30],ebx
   14000ce62:	mov    r8,r13
   14000ce65:	mov    rdx,rsi
   14000ce68:	mov    WORD PTR [rsp+0x28],r15w
   14000ce6e:	mov    QWORD PTR [rsp+0x20],r14
   14000ce73:	call   0x140010170
   14000ce78:	lea    rcx,[rsp+0x50]
   14000ce7d:	mov    ebx,eax
   14000ce7f:	call   0x140010e60
   14000ce84:	lea    rcx,[rsp+0x50]
   14000ce89:	test   eax,eax
   14000ce8b:	mov    esi,0x0
   14000ce90:	cmove  ebx,esi
   14000ce93:	call   0x140010d50
   14000ce98:	test   eax,eax
   14000ce9a:	jne    0x14000ced8
   14000ce9c:	mov    ebx,esi
   14000ce9e:	jmp    0x14000cedc
   14000cea0:	mov    r8d,ebx
   14000cea3:	mov    rdx,rdi
   14000cea6:	bts    r8d,0xb
   14000ceab:	call   0x14000e5c0
   14000ceb0:	test   eax,eax
   14000ceb2:	je     0x14000ce17
   14000ceb8:	lea    rcx,[rsp+0x50]
   14000cebd:	mov    rdx,rdi
   14000cec0:	call   0x140011270
   14000cec5:	test   eax,eax
   14000cec7:	jne    0x14000ce4b
   14000cec9:	lea    rcx,[rsp+0x50]
   14000cece:	call   0x14000d4f0
   14000ced3:	jmp    0x14000ce17
   14000ced8:	test   ebx,ebx
   14000ceda:	jne    0x14000cee9
   14000cedc:	test   ebp,ebp
   14000cede:	je     0x14000cee9
   14000cee0:	mov    rcx,rdi
   14000cee3:	call   QWORD PTR [rip+0xc537]        # 0x140019420
   14000cee9:	mov    eax,ebx
   14000ceeb:	jmp    0x14000ce19
   14000cef0:	rex push rbx
   14000cef2:	sub    rsp,0x20
   14000cef6:	mov    rbx,rdx
   14000cef9:	mov    rdx,QWORD PTR [rdx]
   14000cefc:	mov    rax,rcx
   14000ceff:	mov    rcx,QWORD PTR [rcx+0x40]
   14000cf03:	call   QWORD PTR [rax+0x30]
   14000cf06:	xor    eax,eax
   14000cf08:	mov    QWORD PTR [rbx],rax
   14000cf0b:	mov    QWORD PTR [rbx+0x8],rax
   14000cf0f:	mov    QWORD PTR [rbx+0x10],rax
   14000cf13:	mov    QWORD PTR [rbx+0x18],rax
   14000cf17:	add    rsp,0x20
   14000cf1b:	pop    rbx
   14000cf1c:	ret    
   14000cf1d:	int3   
   14000cf1e:	int3   
   14000cf1f:	int3   
   14000cf20:	mov    QWORD PTR [rsp+0x10],rbx
   14000cf25:	mov    QWORD PTR [rsp+0x18],rbp
   14000cf2a:	push   rdi
   14000cf2b:	push   r14
   14000cf2d:	push   r15
   14000cf2f:	sub    rsp,0x20
   14000cf33:	cmp    DWORD PTR [rdx+0x18],0x0
   14000cf37:	mov    ebp,r9d
   14000cf3a:	mov    rdi,r8
   14000cf3d:	mov    r14,rdx
   14000cf40:	mov    r15,rcx
   14000cf43:	mov    rbx,r8
   14000cf46:	jne    0x14000cf62
   14000cf48:	lea    rdx,[rip+0xe991]        # 0x14001b8e0
   14000cf4f:	lea    rcx,[rip+0xeeb2]        # 0x14001be08
   14000cf56:	mov    r8d,0xbb7
   14000cf5c:	call   QWORD PTR [rip+0xc2b6]        # 0x140019218
   14000cf62:	mov    rax,QWORD PTR [r14+0x10]
   14000cf66:	mov    QWORD PTR [rsp+0x40],rsi
   14000cf6b:	cmp    rax,rdi
   14000cf6e:	jb     0x14000cf77
   14000cf70:	mov    eax,0x1
   14000cf75:	jmp    0x14000cfb8
   14000cf77:	mov    esi,0x1
   14000cf7c:	test   ebp,ebp
   14000cf7e:	je     0x14000cf98
   14000cf80:	cmp    rax,rsi
   14000cf83:	mov    rbx,rax
   14000cf86:	cmovb  rbx,rsi
   14000cf8a:	cmp    rbx,rdi
   14000cf8d:	jae    0x14000cf98
   14000cf8f:	nop
   14000cf90:	add    rbx,rbx
   14000cf93:	cmp    rbx,rdi
   14000cf96:	jb     0x14000cf90
   14000cf98:	mov    r8d,DWORD PTR [r14+0x18]
   14000cf9c:	mov    rdx,QWORD PTR [r14]
   14000cf9f:	mov    rcx,QWORD PTR [r15+0x40]
   14000cfa3:	mov    r9,rbx
   14000cfa6:	call   QWORD PTR [r15+0x38]
   14000cfaa:	test   rax,rax
   14000cfad:	je     0x14000cfb8
   14000cfaf:	mov    QWORD PTR [r14],rax
   14000cfb2:	mov    QWORD PTR [r14+0x10],rbx
   14000cfb6:	mov    eax,esi
   14000cfb8:	mov    rsi,QWORD PTR [rsp+0x40]
   14000cfbd:	mov    rbx,QWORD PTR [rsp+0x48]
   14000cfc2:	mov    rbp,QWORD PTR [rsp+0x50]
   14000cfc7:	add    rsp,0x20
   14000cfcb:	pop    r15
   14000cfcd:	pop    r14
   14000cfcf:	pop    rdi
   14000cfd0:	ret    
   14000cfd1:	int3   
   14000cfd2:	int3   
   14000cfd3:	int3   
   14000cfd4:	int3   
   14000cfd5:	int3   
   14000cfd6:	int3   
   14000cfd7:	int3   
   14000cfd8:	int3   
   14000cfd9:	int3   
   14000cfda:	int3   
   14000cfdb:	int3   
   14000cfdc:	int3   
   14000cfdd:	int3   
   14000cfde:	int3   
   14000cfdf:	int3   
   14000cfe0:	sub    rsp,0x28
   14000cfe4:	add    r8,QWORD PTR [rdx+0x8]
   14000cfe8:	cmp    r8,QWORD PTR [rdx+0x10]
   14000cfec:	jbe    0x14000d002
   14000cfee:	mov    r9d,0x1
   14000cff4:	call   0x14000cf20
   14000cff9:	test   eax,eax
   14000cffb:	jne    0x14000d002
   14000cffd:	add    rsp,0x28
   14000d001:	ret    
   14000d002:	mov    eax,0x1
   14000d007:	add    rsp,0x28
   14000d00b:	ret    
   14000d00c:	int3   
   14000d00d:	int3   
   14000d00e:	int3   
   14000d00f:	int3   
   14000d010:	mov    QWORD PTR [rsp+0x8],rbx
   14000d015:	mov    QWORD PTR [rsp+0x10],rbp
   14000d01a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d01f:	mov    QWORD PTR [rsp+0x20],rdi
   14000d024:	push   r14
   14000d026:	sub    rsp,0x20
   14000d02a:	mov    r14,QWORD PTR [rdx+0x8]
   14000d02e:	mov    rsi,r9
   14000d031:	mov    rbp,r8
   14000d034:	lea    rdi,[r14+r9*1]
   14000d038:	mov    rbx,rdx
   14000d03b:	cmp    rdi,QWORD PTR [rdx+0x10]
   14000d03f:	jbe    0x14000d053
   14000d041:	mov    r9d,0x1
   14000d047:	mov    r8,rdi
   14000d04a:	call   0x14000cf20
   14000d04f:	test   eax,eax
   14000d051:	je     0x14000d075
   14000d053:	mov    ecx,DWORD PTR [rbx+0x18]
   14000d056:	mov    rdx,rbp
   14000d059:	mov    QWORD PTR [rbx+0x8],rdi
   14000d05d:	mov    r8d,ecx
   14000d060:	imul   rcx,r14
   14000d064:	imul   r8,rsi
   14000d068:	add    rcx,QWORD PTR [rbx]
   14000d06b:	call   0x140017346
   14000d070:	mov    eax,0x1
   14000d075:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d07a:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d07f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d084:	mov    rdi,QWORD PTR [rsp+0x48]
   14000d089:	add    rsp,0x20
   14000d08d:	pop    r14
   14000d08f:	ret    
   14000d090:	sub    rsp,0x28
   14000d094:	cmp    r8,QWORD PTR [rdx+0x10]
   14000d098:	jbe    0x14000d0a8
   14000d09a:	call   0x14000cf20
   14000d09f:	test   eax,eax
   14000d0a1:	jne    0x14000d0a8
   14000d0a3:	add    rsp,0x28
   14000d0a7:	ret    
   14000d0a8:	mov    eax,0x1
   14000d0ad:	add    rsp,0x28
   14000d0b1:	ret    
   14000d0b2:	int3   
   14000d0b3:	int3   
   14000d0b4:	int3   
   14000d0b5:	int3   
   14000d0b6:	int3   
   14000d0b7:	int3   
   14000d0b8:	int3   
   14000d0b9:	int3   
   14000d0ba:	int3   
   14000d0bb:	int3   
   14000d0bc:	int3   
   14000d0bd:	int3   
   14000d0be:	int3   
   14000d0bf:	int3   
   14000d0c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d0c5:	push   rdi
   14000d0c6:	sub    rsp,0x20
   14000d0ca:	mov    rbx,r8
   14000d0cd:	mov    rdi,rdx
   14000d0d0:	cmp    r8,QWORD PTR [rdx+0x10]
   14000d0d4:	jbe    0x14000d0ea
   14000d0d6:	call   0x14000cf20
   14000d0db:	test   eax,eax
   14000d0dd:	jne    0x14000d0ea
   14000d0df:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d0e4:	add    rsp,0x20
   14000d0e8:	pop    rdi
   14000d0e9:	ret    
   14000d0ea:	mov    QWORD PTR [rdi+0x8],rbx
   14000d0ee:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d0f3:	mov    eax,0x1
   14000d0f8:	add    rsp,0x20
   14000d0fc:	pop    rdi
   14000d0fd:	ret    
   14000d0fe:	int3   
   14000d0ff:	int3   
   14000d100:	sub    rsp,0x58
   14000d104:	xor    eax,eax
   14000d106:	mov    QWORD PTR [rsp+0x20],rax
   14000d10b:	mov    QWORD PTR [rsp+0x28],rax
   14000d110:	mov    QWORD PTR [rsp+0x30],rax
   14000d115:	mov    DWORD PTR [rsp+0x40],eax
   14000d119:	mov    QWORD PTR [rsp+0x38],rax
   14000d11e:	mov    eax,edx
   14000d120:	sar    eax,0x9
   14000d123:	mov    DWORD PTR [rsp+0x40],0xffffffff
   14000d12b:	and    eax,0x7f
   14000d12e:	add    eax,0x50
   14000d131:	mov    DWORD PTR [rsp+0x34],eax
   14000d135:	mov    eax,edx
   14000d137:	and    edx,0x1f
   14000d13a:	sar    eax,0x5
   14000d13d:	mov    DWORD PTR [rsp+0x2c],edx
   14000d141:	and    eax,0xf
   14000d144:	dec    eax
   14000d146:	mov    DWORD PTR [rsp+0x30],eax
   14000d14a:	mov    eax,ecx
   14000d14c:	sar    eax,0xb
   14000d14f:	and    eax,0x1f
   14000d152:	mov    DWORD PTR [rsp+0x28],eax
   14000d156:	mov    eax,ecx
   14000d158:	and    ecx,0x1f
   14000d15b:	add    ecx,ecx
   14000d15d:	sar    eax,0x5
   14000d160:	mov    DWORD PTR [rsp+0x20],ecx
   14000d164:	and    eax,0x3f
   14000d167:	lea    rcx,[rsp+0x20]
   14000d16c:	mov    DWORD PTR [rsp+0x24],eax
   14000d170:	call   QWORD PTR [rip+0xc19a]        # 0x140019310
   14000d176:	add    rsp,0x58
   14000d17a:	ret    
   14000d17b:	int3   
   14000d17c:	int3   
   14000d17d:	int3   
   14000d17e:	int3   
   14000d17f:	int3   
   14000d180:	mov    QWORD PTR [rsp+0x8],rbx
   14000d185:	mov    QWORD PTR [rsp+0x10],rbp
   14000d18a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d18f:	mov    QWORD PTR [rsp+0x20],rdi
   14000d194:	push   r14
   14000d196:	sub    rsp,0x90
   14000d19d:	xor    ebx,ebx
   14000d19f:	mov    esi,r9d
   14000d1a2:	mov    rdi,r8
   14000d1a5:	mov    rbp,rdx
   14000d1a8:	mov    r14,rcx
   14000d1ab:	test   r8,r8
   14000d1ae:	je     0x14000d1b3
   14000d1b0:	mov    QWORD PTR [r8],rbx
   14000d1b3:	test   rcx,rcx
   14000d1b6:	je     0x14000d221
   14000d1b8:	test   rdx,rdx
   14000d1bb:	je     0x14000d221
   14000d1bd:	xor    edx,edx
   14000d1bf:	lea    rcx,[rsp+0x20]
   14000d1c4:	lea    r8d,[rdx+0x68]
   14000d1c8:	call   0x14001734c
   14000d1cd:	mov    r8d,esi
   14000d1d0:	lea    rcx,[rsp+0x20]
   14000d1d5:	bts    r8d,0xb
   14000d1da:	mov    rdx,r14
   14000d1dd:	call   0x14000e5c0
   14000d1e2:	test   eax,eax
   14000d1e4:	je     0x14000d221
   14000d1e6:	lea    rcx,[rsp+0x20]
   14000d1eb:	mov    r9d,esi
   14000d1ee:	xor    r8d,r8d
   14000d1f1:	mov    rdx,rbp
   14000d1f4:	call   0x14000e890
   14000d1f9:	test   eax,eax
   14000d1fb:	js     0x14000d212
   14000d1fd:	lea    rcx,[rsp+0x20]
   14000d202:	mov    r9d,esi
   14000d205:	mov    r8,rdi
   14000d208:	mov    edx,eax
   14000d20a:	call   0x14000dd20
   14000d20f:	mov    rbx,rax
   14000d212:	lea    rcx,[rsp+0x20]
   14000d217:	call   0x14000d4f0
   14000d21c:	mov    rax,rbx
   14000d21f:	jmp    0x14000d223
   14000d221:	xor    eax,eax
   14000d223:	lea    r11,[rsp+0x90]
   14000d22b:	mov    rbx,QWORD PTR [r11+0x10]
   14000d22f:	mov    rbp,QWORD PTR [r11+0x18]
   14000d233:	mov    rsi,QWORD PTR [r11+0x20]
   14000d237:	mov    rdi,QWORD PTR [r11+0x28]
   14000d23b:	mov    rsp,r11
   14000d23e:	pop    r14
   14000d240:	ret    
   14000d241:	int3   
   14000d242:	int3   
   14000d243:	int3   
   14000d244:	int3   
   14000d245:	int3   
   14000d246:	int3   
   14000d247:	int3   
   14000d248:	int3   
   14000d249:	int3   
   14000d24a:	int3   
   14000d24b:	int3   
   14000d24c:	int3   
   14000d24d:	int3   
   14000d24e:	int3   
   14000d24f:	int3   
   14000d250:	mov    QWORD PTR [rsp+0x8],rbx
   14000d255:	mov    QWORD PTR [rsp+0x10],rbp
   14000d25a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d25f:	push   rdi
   14000d260:	sub    rsp,0x20
   14000d264:	mov    rdi,rcx
   14000d267:	mov    rcx,QWORD PTR [rcx+0x60]
   14000d26b:	mov    rsi,r9
   14000d26e:	mov    rcx,QWORD PTR [rcx+0x60]
   14000d272:	mov    rbp,r8
   14000d275:	mov    rbx,rdx
   14000d278:	call   QWORD PTR [rip+0xc0ba]        # 0x140019338
   14000d27e:	test   rbx,rbx
   14000d281:	js     0x14000d2bb
   14000d283:	cmp    rax,rbx
   14000d286:	je     0x14000d2a0
   14000d288:	mov    rcx,QWORD PTR [rdi+0x60]
   14000d28c:	xor    r8d,r8d
   14000d28f:	mov    rdx,rbx
   14000d292:	mov    rcx,QWORD PTR [rcx+0x60]
   14000d296:	call   QWORD PTR [rip+0xbf94]        # 0x140019230
   14000d29c:	test   eax,eax
   14000d29e:	jne    0x14000d2bb
   14000d2a0:	mov    r9,QWORD PTR [rdi+0x60]
   14000d2a4:	mov    r8,rsi
   14000d2a7:	mov    edx,0x1
   14000d2ac:	mov    r9,QWORD PTR [r9+0x60]
   14000d2b0:	mov    rcx,rbp
   14000d2b3:	call   QWORD PTR [rip+0xc06f]        # 0x140019328
   14000d2b9:	jmp    0x14000d2bd
   14000d2bb:	xor    eax,eax
   14000d2bd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d2c2:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d2c7:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d2cc:	add    rsp,0x20
   14000d2d0:	pop    rdi
   14000d2d1:	ret    
   14000d2d2:	int3   
   14000d2d3:	int3   
   14000d2d4:	int3   
   14000d2d5:	int3   
   14000d2d6:	int3   
   14000d2d7:	int3   
   14000d2d8:	int3   
   14000d2d9:	int3   
   14000d2da:	int3   
   14000d2db:	int3   
   14000d2dc:	int3   
   14000d2dd:	int3   
   14000d2de:	int3   
   14000d2df:	int3   
   14000d2e0:	mov    rax,r9
   14000d2e3:	mov    r10,r8
   14000d2e6:	mov    r9,rcx
   14000d2e9:	mov    r8,rax
   14000d2ec:	mov    rcx,r10
   14000d2ef:	mov    edx,0x1
   14000d2f4:	rex.W jmp QWORD PTR [rip+0xbf3d]        # 0x140019238
   14000d2fb:	int3   
   14000d2fc:	int3   
   14000d2fd:	int3   
   14000d2fe:	int3   
   14000d2ff:	int3   
   14000d300:	mov    QWORD PTR [rsp+0x8],rbx
   14000d305:	mov    QWORD PTR [rsp+0x10],rbp
   14000d30a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d30f:	push   rdi
   14000d310:	sub    rsp,0x20
   14000d314:	mov    rdi,rcx
   14000d317:	mov    rcx,QWORD PTR [rcx+0x60]
   14000d31b:	mov    rsi,r9
   14000d31e:	mov    rcx,QWORD PTR [rcx+0x60]
   14000d322:	mov    rbp,r8
   14000d325:	mov    rbx,rdx
   14000d328:	call   QWORD PTR [rip+0xc00a]        # 0x140019338
   14000d32e:	test   rbx,rbx
   14000d331:	js     0x14000d36b
   14000d333:	cmp    rax,rbx
   14000d336:	je     0x14000d350
   14000d338:	mov    rcx,QWORD PTR [rdi+0x60]
   14000d33c:	xor    r8d,r8d
   14000d33f:	mov    rdx,rbx
   14000d342:	mov    rcx,QWORD PTR [rcx+0x60]
   14000d346:	call   QWORD PTR [rip+0xbee4]        # 0x140019230
   14000d34c:	test   eax,eax
   14000d34e:	jne    0x14000d36b
   14000d350:	mov    r9,QWORD PTR [rdi+0x60]
   14000d354:	mov    r8,rsi
   14000d357:	mov    edx,0x1
   14000d35c:	mov    r9,QWORD PTR [r9+0x60]
   14000d360:	mov    rcx,rbp
   14000d363:	call   QWORD PTR [rip+0xbecf]        # 0x140019238
   14000d369:	jmp    0x14000d36d
   14000d36b:	xor    eax,eax
   14000d36d:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d372:	mov    rbp,QWORD PTR [rsp+0x38]
   14000d377:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d37c:	add    rsp,0x20
   14000d380:	pop    rdi
   14000d381:	ret    
   14000d382:	int3   
   14000d383:	int3   
   14000d384:	int3   
   14000d385:	int3   
   14000d386:	int3   
   14000d387:	int3   
   14000d388:	int3   
   14000d389:	int3   
   14000d38a:	int3   
   14000d38b:	int3   
   14000d38c:	int3   
   14000d38d:	int3   
   14000d38e:	int3   
   14000d38f:	int3   
   14000d390:	mov    QWORD PTR [rsp+0x8],rbx
   14000d395:	push   rdi
   14000d396:	sub    rsp,0x50
   14000d39a:	mov    rdi,rdx
   14000d39d:	lea    rdx,[rsp+0x20]
   14000d3a2:	mov    rbx,r8
   14000d3a5:	call   QWORD PTR [rip+0xbf95]        # 0x140019340
   14000d3ab:	test   eax,eax
   14000d3ad:	je     0x14000d3bc
   14000d3af:	xor    eax,eax
   14000d3b1:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d3b6:	add    rsp,0x50
   14000d3ba:	pop    rdi
   14000d3bb:	ret    
   14000d3bc:	mov    rcx,QWORD PTR [rsp+0x40]
   14000d3c1:	mov    r8,rbx
   14000d3c4:	mov    rdx,rdi
   14000d3c7:	call   0x14000f560
   14000d3cc:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d3d1:	mov    eax,0x1
   14000d3d6:	add    rsp,0x50
   14000d3da:	pop    rdi
   14000d3db:	ret    
   14000d3dc:	int3   
   14000d3dd:	int3   
   14000d3de:	int3   
   14000d3df:	int3   
   14000d3e0:	mov    QWORD PTR [rsp+0x10],rbp
   14000d3e5:	mov    QWORD PTR [rsp+0x18],rsi
   14000d3ea:	push   rdi
   14000d3eb:	push   r14
   14000d3ed:	push   r15
   14000d3ef:	sub    rsp,0x20
   14000d3f3:	mov    rsi,QWORD PTR [rcx+0x60]
   14000d3f7:	lea    rax,[rdx+r9*1]
   14000d3fb:	mov    rbp,r9
   14000d3fe:	mov    rdi,QWORD PTR [rsi+0x70]
   14000d402:	mov    r15,r8
   14000d405:	mov    r14,rdx
   14000d408:	cmp    rax,rdi
   14000d40b:	mov    r10,rcx
   14000d40e:	cmova  rdi,rax
   14000d412:	test   r9,r9
   14000d415:	je     0x14000d494
   14000d417:	mov    QWORD PTR [rsp+0x40],rbx
   14000d41c:	mov    rbx,QWORD PTR [rsi+0x78]
   14000d420:	cmp    rdi,rbx
   14000d423:	jbe    0x14000d479
   14000d425:	mov    eax,0x40
   14000d42a:	cmp    rbx,rax
   14000d42d:	cmovb  rbx,rax
   14000d431:	cmp    rbx,rdi
   14000d434:	jae    0x14000d43e
   14000d436:	add    rbx,rbx
   14000d439:	cmp    rbx,rdi
   14000d43c:	jb     0x14000d436
   14000d43e:	mov    rdx,QWORD PTR [rsi+0x68]
   14000d442:	mov    rcx,QWORD PTR [rcx+0x40]
   14000d446:	mov    r9,rbx
   14000d449:	mov    r8d,0x1
   14000d44f:	call   QWORD PTR [r10+0x38]
   14000d453:	test   rax,rax
   14000d456:	jne    0x14000d471
   14000d458:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d45d:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d462:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d467:	add    rsp,0x20
   14000d46b:	pop    r15
   14000d46d:	pop    r14
   14000d46f:	pop    rdi
   14000d470:	ret    
   14000d471:	mov    QWORD PTR [rsi+0x68],rax
   14000d475:	mov    QWORD PTR [rsi+0x78],rbx
   14000d479:	mov    rcx,QWORD PTR [rsi+0x68]
   14000d47d:	mov    r8,rbp
   14000d480:	mov    rdx,r15
   14000d483:	add    rcx,r14
   14000d486:	call   0x140017346
   14000d48b:	mov    QWORD PTR [rsi+0x70],rdi
   14000d48f:	mov    rax,rbp
   14000d492:	jmp    0x14000d458
   14000d494:	xor    eax,eax
   14000d496:	jmp    0x14000d45d
   14000d498:	int3   
   14000d499:	int3   
   14000d49a:	int3   
   14000d49b:	int3   
   14000d49c:	int3   
   14000d49d:	int3   
   14000d49e:	int3   
   14000d49f:	int3   
   14000d4a0:	rex push rbx
   14000d4a2:	sub    rsp,0x20
   14000d4a6:	mov    rax,QWORD PTR [rcx]
   14000d4a9:	mov    rbx,r9
   14000d4ac:	mov    r10,r8
   14000d4af:	mov    r9,rdx
   14000d4b2:	cmp    rdx,rax
   14000d4b5:	jb     0x14000d4bb
   14000d4b7:	xor    ebx,ebx
   14000d4b9:	jmp    0x14000d4c5
   14000d4bb:	sub    rax,rdx
   14000d4be:	cmp    rax,rbx
   14000d4c1:	cmovb  rbx,rax
   14000d4c5:	mov    rcx,QWORD PTR [rcx+0x60]
   14000d4c9:	mov    r8,rbx
   14000d4cc:	mov    rdx,QWORD PTR [rcx+0x68]
   14000d4d0:	mov    rcx,r10
   14000d4d3:	add    rdx,r9
   14000d4d6:	call   0x140017346
   14000d4db:	mov    rax,rbx
   14000d4de:	add    rsp,0x20
   14000d4e2:	pop    rbx
   14000d4e3:	ret    
   14000d4e4:	int3   
   14000d4e5:	int3   
   14000d4e6:	int3   
   14000d4e7:	int3   
   14000d4e8:	int3   
   14000d4e9:	int3   
   14000d4ea:	int3   
   14000d4eb:	int3   
   14000d4ec:	int3   
   14000d4ed:	int3   
   14000d4ee:	int3   
   14000d4ef:	int3   
   14000d4f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4f5:	push   rdi
   14000d4f6:	sub    rsp,0x20
   14000d4fa:	mov    rbx,rcx
   14000d4fd:	test   rcx,rcx
   14000d500:	je     0x14000d5c9
   14000d506:	mov    rdi,QWORD PTR [rcx+0x60]
   14000d50a:	test   rdi,rdi
   14000d50d:	je     0x14000d5c9
   14000d513:	cmp    QWORD PTR [rcx+0x28],0x0
   14000d518:	je     0x14000d5c9
   14000d51e:	mov    rax,QWORD PTR [rcx+0x30]
   14000d522:	test   rax,rax
   14000d525:	je     0x14000d5c9
   14000d52b:	cmp    DWORD PTR [rcx+0x1c],0x1
   14000d52f:	jne    0x14000d5c9
   14000d535:	mov    QWORD PTR [rcx+0x60],0x0
   14000d53d:	mov    rdx,QWORD PTR [rdi]
   14000d540:	mov    rcx,QWORD PTR [rcx+0x40]
   14000d544:	call   rax
   14000d546:	xor    eax,eax
   14000d548:	mov    QWORD PTR [rdi],rax
   14000d54b:	mov    QWORD PTR [rdi+0x8],rax
   14000d54f:	mov    QWORD PTR [rdi+0x10],rax
   14000d553:	mov    QWORD PTR [rdi+0x18],rax
   14000d557:	mov    rdx,QWORD PTR [rdi+0x20]
   14000d55b:	mov    rcx,QWORD PTR [rbx+0x40]
   14000d55f:	call   QWORD PTR [rbx+0x30]
   14000d562:	xor    eax,eax
   14000d564:	mov    QWORD PTR [rdi+0x20],rax
   14000d568:	mov    QWORD PTR [rdi+0x28],rax
   14000d56c:	mov    QWORD PTR [rdi+0x30],rax
   14000d570:	mov    QWORD PTR [rdi+0x38],rax
   14000d574:	mov    rdx,QWORD PTR [rdi+0x40]
   14000d578:	mov    rcx,QWORD PTR [rbx+0x40]
   14000d57c:	call   QWORD PTR [rbx+0x30]
   14000d57f:	xor    eax,eax
   14000d581:	mov    QWORD PTR [rdi+0x40],rax
   14000d585:	mov    QWORD PTR [rdi+0x48],rax
   14000d589:	mov    QWORD PTR [rdi+0x50],rax
   14000d58d:	mov    QWORD PTR [rdi+0x58],rax
   14000d591:	mov    rcx,QWORD PTR [rdi+0x60]
   14000d595:	test   rcx,rcx
   14000d598:	je     0x14000d5a8
   14000d59a:	call   QWORD PTR [rip+0xbc60]        # 0x140019200
   14000d5a0:	mov    QWORD PTR [rdi+0x60],0x0
   14000d5a8:	mov    rcx,QWORD PTR [rbx+0x40]
   14000d5ac:	mov    rdx,rdi
   14000d5af:	call   QWORD PTR [rbx+0x30]
   14000d5b2:	mov    DWORD PTR [rbx+0x1c],0x0
   14000d5b9:	mov    eax,0x1
   14000d5be:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5c3:	add    rsp,0x20
   14000d5c7:	pop    rdi
   14000d5c8:	ret    
   14000d5c9:	xor    eax,eax
   14000d5cb:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d5d0:	add    rsp,0x20
   14000d5d4:	pop    rdi
   14000d5d5:	ret    
   14000d5d6:	int3   
   14000d5d7:	int3   
   14000d5d8:	int3   
   14000d5d9:	int3   
   14000d5da:	int3   
   14000d5db:	int3   
   14000d5dc:	int3   
   14000d5dd:	int3   
   14000d5de:	int3   
   14000d5df:	int3   
   14000d5e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d5e5:	mov    QWORD PTR [rsp+0x10],rbp
   14000d5ea:	mov    QWORD PTR [rsp+0x18],rsi
   14000d5ef:	push   rdi
   14000d5f0:	sub    rsp,0x30
   14000d5f4:	mov    edi,DWORD PTR [rsp+0x60]
   14000d5f8:	mov    rsi,r9
   14000d5fb:	mov    rbp,r8
   14000d5fe:	xor    r8d,r8d
   14000d601:	mov    r9d,edi
   14000d604:	mov    rbx,rcx
   14000d607:	call   0x14000e890
   14000d60c:	test   eax,eax
   14000d60e:	jns    0x14000d614
   14000d610:	xor    eax,eax
   14000d612:	jmp    0x14000d628
   14000d614:	mov    r9,rsi
   14000d617:	mov    r8,rbp
   14000d61a:	mov    edx,eax
   14000d61c:	mov    rcx,rbx
   14000d61f:	mov    DWORD PTR [rsp+0x20],edi
   14000d623:	call   0x14000d800
   14000d628:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d62d:	mov    rbp,QWORD PTR [rsp+0x48]
   14000d632:	mov    rsi,QWORD PTR [rsp+0x50]
   14000d637:	add    rsp,0x30
   14000d63b:	pop    rdi
   14000d63c:	ret    
   14000d63d:	int3   
   14000d63e:	int3   
   14000d63f:	int3   
   14000d640:	mov    QWORD PTR [rsp+0x8],rbx
   14000d645:	mov    QWORD PTR [rsp+0x10],rsi
   14000d64a:	push   rdi
   14000d64b:	sub    rsp,0x20
   14000d64f:	mov    rsi,r8
   14000d652:	xor    r8d,r8d
   14000d655:	mov    ebx,r9d
   14000d658:	mov    rdi,rcx
   14000d65b:	call   0x14000e890
   14000d660:	test   eax,eax
   14000d662:	jns    0x14000d676
   14000d664:	xor    eax,eax
   14000d666:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d66b:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d670:	add    rsp,0x20
   14000d674:	pop    rdi
   14000d675:	ret    
   14000d676:	mov    r9d,ebx
   14000d679:	mov    r8,rsi
   14000d67c:	mov    edx,eax
   14000d67e:	mov    rcx,rdi
   14000d681:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d686:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d68b:	add    rsp,0x20
   14000d68f:	pop    rdi
   14000d690:	jmp    0x14000dc40
   14000d695:	int3   
   14000d696:	int3   
   14000d697:	int3   
   14000d698:	int3   
   14000d699:	int3   
   14000d69a:	int3   
   14000d69b:	int3   
   14000d69c:	int3   
   14000d69d:	int3   
   14000d69e:	int3   
   14000d69f:	int3   
   14000d6a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d6a5:	mov    QWORD PTR [rsp+0x10],rsi
   14000d6aa:	push   rdi
   14000d6ab:	sub    rsp,0x20
   14000d6af:	mov    rbx,r8
   14000d6b2:	xor    r8d,r8d
   14000d6b5:	mov    edi,r9d
   14000d6b8:	mov    rsi,rcx
   14000d6bb:	call   0x14000e890
   14000d6c0:	test   eax,eax
   14000d6c2:	jns    0x14000d6e2
   14000d6c4:	test   rbx,rbx
   14000d6c7:	je     0x14000d6d0
   14000d6c9:	mov    QWORD PTR [rbx],0x0
   14000d6d0:	xor    eax,eax
   14000d6d2:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d6d7:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d6dc:	add    rsp,0x20
   14000d6e0:	pop    rdi
   14000d6e1:	ret    
   14000d6e2:	mov    r9d,edi
   14000d6e5:	mov    r8,rbx
   14000d6e8:	mov    edx,eax
   14000d6ea:	mov    rcx,rsi
   14000d6ed:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d6f2:	mov    rsi,QWORD PTR [rsp+0x38]
   14000d6f7:	add    rsp,0x20
   14000d6fb:	pop    rdi
   14000d6fc:	jmp    0x14000dd20
   14000d701:	int3   
   14000d702:	int3   
   14000d703:	int3   
   14000d704:	int3   
   14000d705:	int3   
   14000d706:	int3   
   14000d707:	int3   
   14000d708:	int3   
   14000d709:	int3   
   14000d70a:	int3   
   14000d70b:	int3   
   14000d70c:	int3   
   14000d70d:	int3   
   14000d70e:	int3   
   14000d70f:	int3   
   14000d710:	mov    QWORD PTR [rsp+0x8],rbx
   14000d715:	mov    QWORD PTR [rsp+0x10],rbp
   14000d71a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d71f:	push   rdi
   14000d720:	sub    rsp,0x40
   14000d724:	mov    edi,DWORD PTR [rsp+0x70]
   14000d728:	mov    rsi,r9
   14000d72b:	mov    rbp,r8
   14000d72e:	xor    r8d,r8d
   14000d731:	mov    r9d,edi
   14000d734:	mov    rbx,rcx
   14000d737:	call   0x14000e890
   14000d73c:	test   eax,eax
   14000d73e:	jns    0x14000d744
   14000d740:	xor    eax,eax
   14000d742:	jmp    0x14000d76a
   14000d744:	mov    QWORD PTR [rsp+0x30],0x0
   14000d74d:	mov    r9,rsi
   14000d750:	mov    r8,rbp
   14000d753:	mov    edx,eax
   14000d755:	mov    rcx,rbx
   14000d758:	mov    QWORD PTR [rsp+0x28],0x0
   14000d761:	mov    DWORD PTR [rsp+0x20],edi
   14000d765:	call   0x14000de50
   14000d76a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d76f:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d774:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d779:	add    rsp,0x40
   14000d77d:	pop    rdi
   14000d77e:	ret    
   14000d77f:	int3   
   14000d780:	mov    QWORD PTR [rsp+0x8],rbx
   14000d785:	mov    QWORD PTR [rsp+0x10],rbp
   14000d78a:	mov    QWORD PTR [rsp+0x18],rsi
   14000d78f:	push   rdi
   14000d790:	sub    rsp,0x40
   14000d794:	mov    edi,DWORD PTR [rsp+0x70]
   14000d798:	mov    rsi,r9
   14000d79b:	mov    rbp,r8
   14000d79e:	xor    r8d,r8d
   14000d7a1:	mov    r9d,edi
   14000d7a4:	mov    rbx,rcx
   14000d7a7:	call   0x14000e890
   14000d7ac:	mov    edx,eax
   14000d7ae:	test   eax,eax
   14000d7b0:	jns    0x14000d7b6
   14000d7b2:	xor    eax,eax
   14000d7b4:	jmp    0x14000d7df
   14000d7b6:	mov    rax,QWORD PTR [rsp+0x80]
   14000d7be:	mov    r9,rsi
   14000d7c1:	mov    r8,rbp
   14000d7c4:	mov    QWORD PTR [rsp+0x30],rax
   14000d7c9:	mov    rax,QWORD PTR [rsp+0x78]
   14000d7ce:	mov    rcx,rbx
   14000d7d1:	mov    QWORD PTR [rsp+0x28],rax
   14000d7d6:	mov    DWORD PTR [rsp+0x20],edi
   14000d7da:	call   0x14000de50
   14000d7df:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d7e4:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d7e9:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d7ee:	add    rsp,0x40
   14000d7f2:	pop    rdi
   14000d7f3:	ret    
   14000d7f4:	int3   
   14000d7f5:	int3   
   14000d7f6:	int3   
   14000d7f7:	int3   
   14000d7f8:	int3   
   14000d7f9:	int3   
   14000d7fa:	int3   
   14000d7fb:	int3   
   14000d7fc:	int3   
   14000d7fd:	int3   
   14000d7fe:	int3   
   14000d7ff:	int3   
   14000d800:	mov    QWORD PTR [rsp+0x20],r9
   14000d805:	mov    QWORD PTR [rsp+0x18],r8
   14000d80a:	push   rbx
   14000d80b:	push   rbp
   14000d80c:	push   rsi
   14000d80d:	push   rdi
   14000d80e:	push   r15
   14000d810:	mov    eax,0x2df0
   14000d815:	call   0x140017430
   14000d81a:	sub    rsp,rax
   14000d81d:	xor    esi,esi
   14000d81f:	lea    r8,[rsp+0x90]
   14000d827:	mov    ebx,edx
   14000d829:	mov    rdi,rcx
   14000d82c:	mov    ebp,esi
   14000d82e:	mov    DWORD PTR [rsp+0x40],esi
   14000d832:	mov    QWORD PTR [rsp+0x50],rsi
   14000d837:	mov    r15d,esi
   14000d83a:	mov    QWORD PTR [rsp+0x48],rsi
   14000d83f:	call   0x14000e200
   14000d844:	test   eax,eax
   14000d846:	jne    0x14000d856
   14000d848:	add    rsp,0x2df0
   14000d84f:	pop    r15
   14000d851:	pop    rdi
   14000d852:	pop    rsi
   14000d853:	pop    rbp
   14000d854:	pop    rbx
   14000d855:	ret    
   14000d856:	mov    QWORD PTR [rsp+0x2e20],r12
   14000d85e:	mov    r12,QWORD PTR [rsp+0xb0]
   14000d866:	test   r12,r12
   14000d869:	je     0x14000d8a5
   14000d86b:	test   rdi,rdi
   14000d86e:	je     0x14000d8af
   14000d870:	mov    r8,QWORD PTR [rdi+0x60]
   14000d874:	test   r8,r8
   14000d877:	je     0x14000d8af
   14000d879:	cmp    ebx,DWORD PTR [rdi+0x18]
   14000d87c:	jae    0x14000d8af
   14000d87e:	cmp    DWORD PTR [rdi+0x1c],0x1
   14000d882:	jne    0x14000d8af
   14000d884:	mov    rax,QWORD PTR [r8+0x20]
   14000d888:	mov    edx,DWORD PTR [rax+rbx*4]
   14000d88b:	add    rdx,QWORD PTR [r8]
   14000d88e:	je     0x14000d8af
   14000d890:	movzx  eax,WORD PTR [rdx+0x1c]
   14000d894:	test   eax,eax
   14000d896:	je     0x14000d89f
   14000d898:	cmp    BYTE PTR [rax+rdx*1+0x2d],0x2f
   14000d89d:	je     0x14000d8a5
   14000d89f:	test   BYTE PTR [rdx+0x26],0x10
   14000d8a3:	je     0x14000d8af
   14000d8a5:	mov    eax,0x1
   14000d8aa:	jmp    0x14000dc1f
   14000d8af:	test   BYTE PTR [rsp+0x9c],0x21
   14000d8b7:	jne    0x14000d902
   14000d8b9:	and    DWORD PTR [rsp+0x2e40],0x400
   14000d8c4:	jne    0x14000d8d5
   14000d8c6:	mov    eax,0xfff7
   14000d8cb:	test   WORD PTR [rsp+0x9e],ax
   14000d8d3:	jne    0x14000d902
   14000d8d5:	mov    rbx,QWORD PTR [rsp+0xc8]
   14000d8dd:	mov    rcx,QWORD PTR [rdi+0x58]
   14000d8e1:	lea    r8,[rsp+0x70]
   14000d8e6:	mov    rdx,rbx
   14000d8e9:	mov    r9d,0x1e
   14000d8ef:	call   QWORD PTR [rdi+0x48]
   14000d8f2:	cmp    rax,0x1e
   14000d8f6:	jne    0x14000d902
   14000d8f8:	cmp    DWORD PTR [rsp+0x70],0x4034b50
   14000d900:	je     0x14000d909
   14000d902:	xor    eax,eax
   14000d904:	jmp    0x14000dc1f
   14000d909:	movzx  eax,WORD PTR [rsp+0x8c]
   14000d911:	movzx  ecx,WORD PTR [rsp+0x8a]
   14000d919:	mov    QWORD PTR [rsp+0x2de0],r14
   14000d921:	add    eax,0x1e
   14000d924:	add    ecx,eax
   14000d926:	movsxd r14,ecx
   14000d929:	add    r14,rbx
   14000d92c:	lea    rax,[r14+r12*1]
   14000d930:	cmp    rax,QWORD PTR [rdi]
   14000d933:	jbe    0x14000d93c
   14000d935:	xor    eax,eax
   14000d937:	jmp    0x14000dc17
   14000d93c:	mov    rax,QWORD PTR [rdi+0x60]
   14000d940:	mov    QWORD PTR [rsp+0x2de8],r13
   14000d948:	mov    rcx,QWORD PTR [rax+0x68]
   14000d94c:	test   rcx,rcx
   14000d94f:	je     0x14000d962
   14000d951:	lea    r13,[rcx+r14*1]
   14000d955:	mov    rcx,r12
   14000d958:	mov    rbx,r12
   14000d95b:	mov    QWORD PTR [rsp+0x58],rcx
   14000d960:	jmp    0x14000d999
   14000d962:	mov    rcx,QWORD PTR [rdi+0x40]
   14000d966:	mov    eax,0x10000
   14000d96b:	mov    edx,0x1
   14000d970:	cmp    r12,rax
   14000d973:	cmovb  rax,r12
   14000d977:	mov    r8,rax
   14000d97a:	mov    QWORD PTR [rsp+0x58],rax
   14000d97f:	call   QWORD PTR [rdi+0x28]
   14000d982:	mov    r13,rax
   14000d985:	test   rax,rax
   14000d988:	je     0x14000dc0f
   14000d98e:	mov    rcx,QWORD PTR [rsp+0x58]
   14000d993:	mov    rbx,rsi
   14000d996:	mov    rsi,r12
   14000d999:	cmp    DWORD PTR [rsp+0x2e40],ebp
   14000d9a0:	jne    0x14000daf8
   14000d9a6:	cmp    WORD PTR [rsp+0x9e],bp
   14000d9ae:	je     0x14000daf8
   14000d9b4:	mov    rcx,QWORD PTR [rdi+0x40]
   14000d9b8:	mov    edx,0x1
   14000d9bd:	mov    r8d,0x8000
   14000d9c3:	mov    DWORD PTR [rsp+0x2e0],ebp
   14000d9ca:	call   QWORD PTR [rdi+0x28]
   14000d9cd:	mov    r12,rax
   14000d9d0:	mov    QWORD PTR [rsp+0x48],rax
   14000d9d5:	test   rax,rax
   14000d9d8:	jne    0x14000d9e2
   14000d9da:	or     ebp,0xffffffff
   14000d9dd:	jmp    0x14000dbe1
   14000d9e2:	mov    rcx,r15
   14000d9e5:	mov    eax,0x8000
   14000d9ea:	and    ecx,0x7fff
   14000d9f0:	sub    rax,rcx
   14000d9f3:	lea    rbp,[rcx+r12*1]
   14000d9f7:	mov    QWORD PTR [rsp+0x60],rax
   14000d9fc:	mov    QWORD PTR [rsp+0x68],rbp
   14000da01:	test   rbx,rbx
   14000da04:	jne    0x14000da3e
   14000da06:	mov    rax,QWORD PTR [rdi+0x60]
   14000da0a:	cmp    QWORD PTR [rax+0x68],rbx
   14000da0e:	jne    0x14000da3e
   14000da10:	cmp    QWORD PTR [rsp+0x58],rsi
   14000da15:	mov    rcx,QWORD PTR [rdi+0x58]
   14000da19:	mov    rbx,rsi
   14000da1c:	cmovb  rbx,QWORD PTR [rsp+0x58]
   14000da22:	mov    r8,r13
   14000da25:	mov    rdx,r14
   14000da28:	mov    r9,rbx
   14000da2b:	call   QWORD PTR [rdi+0x48]
   14000da2e:	cmp    rax,rbx
   14000da31:	jne    0x14000d9da
   14000da33:	add    r14,rbx
   14000da36:	sub    rsi,rbx
   14000da39:	xor    r12d,r12d
   14000da3c:	jmp    0x14000da43
   14000da3e:	mov    r12,QWORD PTR [rsp+0x50]
   14000da43:	mov    r9,QWORD PTR [rsp+0x48]
   14000da48:	mov    rax,rsi
   14000da4b:	lea    rdx,[r12+r13*1]
   14000da4f:	neg    rax
   14000da52:	lea    rax,[rsp+0x60]
   14000da57:	lea    r8,[rsp+0x50]
   14000da5c:	sbb    ecx,ecx
   14000da5e:	mov    QWORD PTR [rsp+0x50],rbx
   14000da63:	and    ecx,0x2
   14000da66:	mov    DWORD PTR [rsp+0x30],ecx
   14000da6a:	mov    QWORD PTR [rsp+0x28],rax
   14000da6f:	lea    rcx,[rsp+0x2e0]
   14000da77:	mov    QWORD PTR [rsp+0x20],rbp
   14000da7c:	call   0x140015440
   14000da81:	sub    rbx,QWORD PTR [rsp+0x50]
   14000da86:	add    QWORD PTR [rsp+0x50],r12
   14000da8b:	mov    r12,QWORD PTR [rsp+0x60]
   14000da90:	mov    ebp,eax
   14000da92:	test   r12,r12
   14000da95:	je     0x14000dae0
   14000da97:	mov    r8,QWORD PTR [rsp+0x68]
   14000da9c:	mov    rcx,QWORD PTR [rsp+0x2e38]
   14000daa4:	mov    r9,r12
   14000daa7:	mov    rdx,r15
   14000daaa:	call   QWORD PTR [rsp+0x2e30]
   14000dab1:	cmp    rax,r12
   14000dab4:	jne    0x14000dbd9
   14000daba:	mov    rdx,QWORD PTR [rsp+0x68]
   14000dabf:	mov    ecx,DWORD PTR [rsp+0x40]
   14000dac3:	mov    r8,r12
   14000dac6:	call   0x14000c0c0
   14000dacb:	add    r15,r12
   14000dace:	mov    DWORD PTR [rsp+0x40],eax
   14000dad2:	cmp    r15,QWORD PTR [rsp+0xb8]
   14000dada:	ja     0x14000dbd9
   14000dae0:	mov    r12,QWORD PTR [rsp+0x48]
   14000dae5:	cmp    ebp,0x1
   14000dae8:	je     0x14000d9e2
   14000daee:	cmp    ebp,0x2
   14000daf1:	jne    0x14000db40
   14000daf3:	jmp    0x14000d9e2
   14000daf8:	mov    rax,QWORD PTR [rdi+0x60]
   14000dafc:	cmp    QWORD PTR [rax+0x68],rbp
   14000db00:	je     0x14000db4a
   14000db02:	mov    rcx,QWORD PTR [rsp+0x2e38]
   14000db0a:	mov    r9,r12
   14000db0d:	mov    r8,r13
   14000db10:	xor    edx,edx
   14000db12:	call   QWORD PTR [rsp+0x2e30]
   14000db19:	cmp    rax,r12
   14000db1c:	je     0x14000db23
   14000db1e:	or     ebp,0xffffffff
   14000db21:	jmp    0x14000db3d
   14000db23:	cmp    DWORD PTR [rsp+0x2e40],ebp
   14000db2a:	jne    0x14000db3d
   14000db2c:	mov    r8,r12
   14000db2f:	mov    rdx,r13
   14000db32:	xor    ecx,ecx
   14000db34:	call   0x14000c0c0
   14000db39:	mov    DWORD PTR [rsp+0x40],eax
   14000db3d:	mov    r15,r12
   14000db40:	test   ebp,ebp
   14000db42:	jne    0x14000dbdc
   14000db48:	jmp    0x14000dbb8
   14000db4a:	test   rsi,rsi
   14000db4d:	je     0x14000dbb8
   14000db4f:	nop
   14000db50:	cmp    rcx,rsi
   14000db53:	mov    rbx,rsi
   14000db56:	mov    r8,r13
   14000db59:	cmovb  rbx,rcx
   14000db5d:	mov    rcx,QWORD PTR [rdi+0x58]
   14000db61:	mov    rdx,r14
   14000db64:	mov    r9,rbx
   14000db67:	call   QWORD PTR [rdi+0x48]
   14000db6a:	cmp    rax,rbx
   14000db6d:	jne    0x14000dbd9
   14000db6f:	cmp    DWORD PTR [rsp+0x2e40],ebp
   14000db76:	jne    0x14000db8b
   14000db78:	mov    ecx,DWORD PTR [rsp+0x40]
   14000db7c:	mov    r8,rbx
   14000db7f:	mov    rdx,r13
   14000db82:	call   0x14000c0c0
   14000db87:	mov    DWORD PTR [rsp+0x40],eax
   14000db8b:	mov    rcx,QWORD PTR [rsp+0x2e38]
   14000db93:	mov    r9,rbx
   14000db96:	mov    r8,r13
   14000db99:	mov    rdx,r15
   14000db9c:	call   QWORD PTR [rsp+0x2e30]
   14000dba3:	cmp    rax,rbx
   14000dba6:	jne    0x14000dbd9
   14000dba8:	mov    rcx,QWORD PTR [rsp+0x58]
   14000dbad:	add    r14,rbx
   14000dbb0:	add    r15,rbx
   14000dbb3:	sub    rsi,rbx
   14000dbb6:	jne    0x14000db50
   14000dbb8:	cmp    DWORD PTR [rsp+0x2e40],0x0
   14000dbc0:	jne    0x14000dbdc
   14000dbc2:	cmp    r15,QWORD PTR [rsp+0xb8]
   14000dbca:	jne    0x14000dbd9
   14000dbcc:	mov    eax,DWORD PTR [rsp+0x40]
   14000dbd0:	cmp    eax,DWORD PTR [rsp+0xa8]
   14000dbd7:	je     0x14000dbdc
   14000dbd9:	or     ebp,0xffffffff
   14000dbdc:	mov    r12,QWORD PTR [rsp+0x48]
   14000dbe1:	mov    rax,QWORD PTR [rdi+0x60]
   14000dbe5:	cmp    QWORD PTR [rax+0x68],0x0
   14000dbea:	jne    0x14000dbf6
   14000dbec:	mov    rcx,QWORD PTR [rdi+0x40]
   14000dbf0:	mov    rdx,r13
   14000dbf3:	call   QWORD PTR [rdi+0x30]
   14000dbf6:	test   r12,r12
   14000dbf9:	je     0x14000dc05
   14000dbfb:	mov    rcx,QWORD PTR [rdi+0x40]
   14000dbff:	mov    rdx,r12
   14000dc02:	call   QWORD PTR [rdi+0x30]
   14000dc05:	test   ebp,ebp
   14000dc07:	mov    eax,0x0
   14000dc0c:	sete   al
   14000dc0f:	mov    r13,QWORD PTR [rsp+0x2de8]
   14000dc17:	mov    r14,QWORD PTR [rsp+0x2de0]
   14000dc1f:	mov    r12,QWORD PTR [rsp+0x2e20]
   14000dc27:	add    rsp,0x2df0
   14000dc2e:	pop    r15
   14000dc30:	pop    rdi
   14000dc31:	pop    rsi
   14000dc32:	pop    rbp
   14000dc33:	pop    rbx
   14000dc34:	ret    
   14000dc35:	int3   
   14000dc36:	int3   
   14000dc37:	int3   
   14000dc38:	int3   
   14000dc39:	int3   
   14000dc3a:	int3   
   14000dc3b:	int3   
   14000dc3c:	int3   
   14000dc3d:	int3   
   14000dc3e:	int3   
   14000dc3f:	int3   
   14000dc40:	mov    QWORD PTR [rsp+0x10],rbx
   14000dc45:	mov    QWORD PTR [rsp+0x18],rbp
   14000dc4a:	mov    QWORD PTR [rsp+0x20],rsi
   14000dc4f:	push   r14
   14000dc51:	sub    rsp,0x290
   14000dc58:	mov    rsi,r8
   14000dc5b:	lea    r8,[rsp+0x40]
   14000dc60:	mov    r14d,r9d
   14000dc63:	mov    ebx,edx
   14000dc65:	mov    rbp,rcx
   14000dc68:	call   0x14000e200
   14000dc6d:	test   eax,eax
   14000dc6f:	je     0x14000dcfd
   14000dc75:	lea    r8,[rip+0xe1c0]        # 0x14001be3c
   14000dc7c:	lea    rcx,[rsp+0x30]
   14000dc81:	mov    rdx,rsi
   14000dc84:	mov    QWORD PTR [rsp+0x2a0],rdi
   14000dc8c:	mov    QWORD PTR [rsp+0x30],0x0
   14000dc95:	call   QWORD PTR [rip+0xb685]        # 0x140019320
   14000dc9b:	mov    rdi,QWORD PTR [rsp+0x30]
   14000dca0:	test   rdi,rdi
   14000dca3:	je     0x14000dcce
   14000dca5:	lea    r8,[rip+0xfffffffffffff634]        # 0x14000d2e0
   14000dcac:	mov    r9,rdi
   14000dcaf:	mov    edx,ebx
   14000dcb1:	mov    rcx,rbp
   14000dcb4:	mov    DWORD PTR [rsp+0x20],r14d
   14000dcb9:	call   0x14000d800
   14000dcbe:	mov    rcx,rdi
   14000dcc1:	mov    ebx,eax
   14000dcc3:	call   QWORD PTR [rip+0xb537]        # 0x140019200
   14000dcc9:	cmp    eax,0xffffffff
   14000dccc:	jne    0x14000dcd2
   14000dcce:	xor    eax,eax
   14000dcd0:	jmp    0x14000dcf5
   14000dcd2:	test   ebx,ebx
   14000dcd4:	je     0x14000dcf3
   14000dcd6:	mov    rax,QWORD PTR [rsp+0x50]
   14000dcdb:	lea    rdx,[rsp+0x30]
   14000dce0:	mov    rcx,rsi
   14000dce3:	mov    QWORD PTR [rsp+0x30],rax
   14000dce8:	mov    QWORD PTR [rsp+0x38],rax
   14000dced:	call   QWORD PTR [rip+0xb655]        # 0x140019348
   14000dcf3:	mov    eax,ebx
   14000dcf5:	mov    rdi,QWORD PTR [rsp+0x2a0]
   14000dcfd:	lea    r11,[rsp+0x290]
   14000dd05:	mov    rbx,QWORD PTR [r11+0x18]
   14000dd09:	mov    rbp,QWORD PTR [r11+0x20]
   14000dd0d:	mov    rsi,QWORD PTR [r11+0x28]
   14000dd11:	mov    rsp,r11
   14000dd14:	pop    r14
   14000dd16:	ret    
   14000dd17:	int3   
   14000dd18:	int3   
   14000dd19:	int3   
   14000dd1a:	int3   
   14000dd1b:	int3   
   14000dd1c:	int3   
   14000dd1d:	int3   
   14000dd1e:	int3   
   14000dd1f:	int3   
   14000dd20:	mov    QWORD PTR [rsp+0x18],rbx
   14000dd25:	push   rdi
   14000dd26:	push   r14
   14000dd28:	push   r15
   14000dd2a:	sub    rsp,0x40
   14000dd2e:	mov    r15d,r9d
   14000dd31:	mov    rdi,r8
   14000dd34:	mov    r14d,edx
   14000dd37:	mov    rbx,rcx
   14000dd3a:	test   rcx,rcx
   14000dd3d:	je     0x14000dd61
   14000dd3f:	mov    r8,QWORD PTR [rcx+0x60]
   14000dd43:	test   r8,r8
   14000dd46:	je     0x14000dd61
   14000dd48:	cmp    r14d,DWORD PTR [rcx+0x18]
   14000dd4c:	jae    0x14000dd61
   14000dd4e:	cmp    DWORD PTR [rcx+0x1c],0x1
   14000dd52:	jne    0x14000dd61
   14000dd54:	mov    rax,QWORD PTR [r8+0x20]
   14000dd58:	mov    edx,DWORD PTR [rax+r14*4]
   14000dd5c:	add    rdx,QWORD PTR [r8]
   14000dd5f:	jmp    0x14000dd63
   14000dd61:	xor    edx,edx
   14000dd63:	test   rdi,rdi
   14000dd66:	je     0x14000dd6f
   14000dd68:	mov    QWORD PTR [rdi],0x0
   14000dd6f:	test   rdx,rdx
   14000dd72:	jne    0x14000dd85
   14000dd74:	xor    eax,eax
   14000dd76:	mov    rbx,QWORD PTR [rsp+0x70]
   14000dd7b:	add    rsp,0x40
   14000dd7f:	pop    r15
   14000dd81:	pop    r14
   14000dd83:	pop    rdi
   14000dd84:	ret    
   14000dd85:	mov    eax,DWORD PTR [rdx+0x14]
   14000dd88:	mov    rcx,QWORD PTR [rcx+0x40]
   14000dd8c:	mov    QWORD PTR [rsp+0x60],rbp
   14000dd91:	mov    ebp,DWORD PTR [rdx+0x18]
   14000dd94:	bt     r9d,0xa
   14000dd99:	mov    edx,0x1
   14000dd9e:	cmovb  ebp,eax
   14000dda1:	mov    QWORD PTR [rsp+0x68],rsi
   14000dda6:	mov    r8d,ebp
   14000dda9:	call   QWORD PTR [rbx+0x28]
   14000ddac:	mov    rsi,rax
   14000ddaf:	test   rax,rax
   14000ddb2:	je     0x14000ddea
   14000ddb4:	mov    QWORD PTR [rsp+0x30],0x0
   14000ddbd:	mov    r9d,ebp
   14000ddc0:	mov    r8,rax
   14000ddc3:	mov    edx,r14d
   14000ddc6:	mov    rcx,rbx
   14000ddc9:	mov    QWORD PTR [rsp+0x28],0x0
   14000ddd2:	mov    DWORD PTR [rsp+0x20],r15d
   14000ddd7:	call   0x14000de50
   14000dddc:	test   eax,eax
   14000ddde:	jne    0x14000ddee
   14000dde0:	mov    rcx,QWORD PTR [rbx+0x40]
   14000dde4:	mov    rdx,rsi
   14000dde7:	call   QWORD PTR [rbx+0x30]
   14000ddea:	xor    eax,eax
   14000ddec:	jmp    0x14000ddf9
   14000ddee:	test   rdi,rdi
   14000ddf1:	je     0x14000ddf6
   14000ddf3:	mov    QWORD PTR [rdi],rbp
   14000ddf6:	mov    rax,rsi
   14000ddf9:	mov    rbp,QWORD PTR [rsp+0x60]
   14000ddfe:	mov    rsi,QWORD PTR [rsp+0x68]
   14000de03:	mov    rbx,QWORD PTR [rsp+0x70]
   14000de08:	add    rsp,0x40
   14000de0c:	pop    r15
   14000de0e:	pop    r14
   14000de10:	pop    rdi
   14000de11:	ret    
   14000de12:	int3   
   14000de13:	int3   
   14000de14:	int3   
   14000de15:	int3   
   14000de16:	int3   
   14000de17:	int3   
   14000de18:	int3   
   14000de19:	int3   
   14000de1a:	int3   
   14000de1b:	int3   
   14000de1c:	int3   
   14000de1d:	int3   
   14000de1e:	int3   
   14000de1f:	int3   
   14000de20:	sub    rsp,0x48
   14000de24:	xor    eax,eax
   14000de26:	mov    QWORD PTR [rsp+0x30],rax
   14000de2b:	mov    QWORD PTR [rsp+0x28],rax
   14000de30:	mov    eax,DWORD PTR [rsp+0x70]
   14000de34:	mov    DWORD PTR [rsp+0x20],eax
   14000de38:	call   0x14000de50
   14000de3d:	add    rsp,0x48
   14000de41:	ret    
   14000de42:	int3   
   14000de43:	int3   
   14000de44:	int3   
   14000de45:	int3   
   14000de46:	int3   
   14000de47:	int3   
   14000de48:	int3   
   14000de49:	int3   
   14000de4a:	int3   
   14000de4b:	int3   
   14000de4c:	int3   
   14000de4d:	int3   
   14000de4e:	int3   
   14000de4f:	int3   
   14000de50:	mov    QWORD PTR [rsp+0x18],r8
   14000de55:	push   rbx
   14000de56:	push   rbp
   14000de57:	push   rdi
   14000de58:	push   r14
   14000de5a:	mov    eax,0x2de8
   14000de5f:	call   0x140017430
   14000de64:	sub    rsp,rax
   14000de67:	xor    ebp,ebp
   14000de69:	mov    r14,r9
   14000de6c:	mov    rax,r8
   14000de6f:	mov    ebx,edx
   14000de71:	mov    rdi,rcx
   14000de74:	mov    QWORD PTR [rsp+0x40],rbp
   14000de79:	mov    QWORD PTR [rsp+0x2e28],rbp
   14000de81:	test   r9,r9
   14000de84:	je     0x14000de9a
   14000de86:	test   rax,rax
   14000de89:	jne    0x14000de9a
   14000de8b:	xor    eax,eax
   14000de8d:	add    rsp,0x2de8
   14000de94:	pop    r14
   14000de96:	pop    rdi
   14000de97:	pop    rbp
   14000de98:	pop    rbx
   14000de99:	ret    
   14000de9a:	lea    r8,[rsp+0x80]
   14000dea2:	mov    edx,ebx
   14000dea4:	call   0x14000e200
   14000dea9:	test   eax,eax
   14000deab:	je     0x14000de8b
   14000dead:	mov    QWORD PTR [rsp+0x2e10],rsi
   14000deb5:	mov    rsi,QWORD PTR [rsp+0xa0]
   14000debd:	test   rsi,rsi
   14000dec0:	je     0x14000defc
   14000dec2:	test   rdi,rdi
   14000dec5:	je     0x14000df06
   14000dec7:	mov    r8,QWORD PTR [rdi+0x60]
   14000decb:	test   r8,r8
   14000dece:	je     0x14000df06
   14000ded0:	cmp    ebx,DWORD PTR [rdi+0x18]
   14000ded3:	jae    0x14000df06
   14000ded5:	cmp    DWORD PTR [rdi+0x1c],0x1
   14000ded9:	jne    0x14000df06
   14000dedb:	mov    rax,QWORD PTR [r8+0x20]
   14000dedf:	mov    edx,DWORD PTR [rax+rbx*4]
   14000dee2:	add    rdx,QWORD PTR [r8]
   14000dee5:	je     0x14000df06
   14000dee7:	movzx  eax,WORD PTR [rdx+0x1c]
   14000deeb:	test   eax,eax
   14000deed:	je     0x14000def6
   14000deef:	cmp    BYTE PTR [rax+rdx*1+0x2d],0x2f
   14000def4:	je     0x14000defc
   14000def6:	test   BYTE PTR [rdx+0x26],0x10
   14000defa:	je     0x14000df06
   14000defc:	mov    eax,0x1
   14000df01:	jmp    0x14000e1e3
   14000df06:	test   BYTE PTR [rsp+0x8c],0x21
   14000df0e:	je     0x14000df17
   14000df10:	xor    eax,eax
   14000df12:	jmp    0x14000e1e3
   14000df17:	mov    ebx,DWORD PTR [rsp+0x2e30]
   14000df1e:	mov    QWORD PTR [rsp+0x2de0],r12
   14000df26:	movzx  r12d,WORD PTR [rsp+0x8e]
   14000df2f:	and    ebx,0x400
   14000df35:	jne    0x14000df49
   14000df37:	mov    eax,0xfff7
   14000df3c:	test   ax,r12w
   14000df40:	je     0x14000df49
   14000df42:	xor    eax,eax
   14000df44:	jmp    0x14000e1db
   14000df49:	mov    QWORD PTR [rsp+0x2dd8],r13
   14000df51:	mov    r13,QWORD PTR [rsp+0xa8]
   14000df59:	mov    QWORD PTR [rsp+0x2dd0],r15
   14000df61:	test   ebx,ebx
   14000df63:	mov    r15,r13
   14000df66:	cmovne r15,rsi
   14000df6a:	cmp    r14,r15
   14000df6d:	jb     0x14000e1a6
   14000df73:	mov    r14,QWORD PTR [rsp+0xb8]
   14000df7b:	mov    rcx,QWORD PTR [rdi+0x58]
   14000df7f:	lea    r8,[rsp+0x60]
   14000df84:	add    r14,QWORD PTR [rdi+0x8]
   14000df88:	mov    r9d,0x1e
   14000df8e:	mov    rdx,r14
   14000df91:	call   QWORD PTR [rdi+0x48]
   14000df94:	cmp    rax,0x1e
   14000df98:	jne    0x14000e1a6
   14000df9e:	cmp    DWORD PTR [rsp+0x60],0x4034b50
   14000dfa6:	jne    0x14000e1a6
   14000dfac:	movzx  eax,WORD PTR [rsp+0x7c]
   14000dfb1:	movzx  ecx,WORD PTR [rsp+0x7a]
   14000dfb6:	add    eax,0x1e
   14000dfb9:	add    eax,ecx
   14000dfbb:	cdqe   
   14000dfbd:	add    r14,rax
   14000dfc0:	lea    rax,[r14+rsi*1]
   14000dfc4:	cmp    rax,QWORD PTR [rdi]
   14000dfc7:	ja     0x14000e1a6
   14000dfcd:	test   ebx,ebx
   14000dfcf:	jne    0x14000e189
   14000dfd5:	test   r12w,r12w
   14000dfd9:	je     0x14000e189
   14000dfdf:	mov    rax,QWORD PTR [rdi+0x60]
   14000dfe3:	mov    DWORD PTR [rsp+0x2d0],ebp
   14000dfea:	mov    rcx,QWORD PTR [rax+0x68]
   14000dfee:	mov    rax,QWORD PTR [rsp+0x2e38]
   14000dff6:	test   rcx,rcx
   14000dff9:	je     0x14000e00f
   14000dffb:	lea    r15,[rcx+r14*1]
   14000dfff:	mov    rbx,rsi
   14000e002:	mov    r12,rsi
   14000e005:	mov    QWORD PTR [rsp+0x48],r15
   14000e00a:	mov    rsi,rbp
   14000e00d:	jmp    0x14000e060
   14000e00f:	test   rax,rax
   14000e012:	je     0x14000e02f
   14000e014:	mov    r12,QWORD PTR [rsp+0x2e40]
   14000e01c:	test   r12,r12
   14000e01f:	je     0x14000e1a6
   14000e025:	mov    r15,rax
   14000e028:	mov    QWORD PTR [rsp+0x48],rax
   14000e02d:	jmp    0x14000e05c
   14000e02f:	mov    rcx,QWORD PTR [rdi+0x40]
   14000e033:	mov    r12d,0x10000
   14000e039:	mov    edx,0x1
   14000e03e:	cmp    rsi,r12
   14000e041:	cmovb  r12,rsi
   14000e045:	mov    r8,r12
   14000e048:	call   QWORD PTR [rdi+0x28]
   14000e04b:	mov    r15,rax
   14000e04e:	mov    QWORD PTR [rsp+0x48],rax
   14000e053:	test   rax,rax
   14000e056:	je     0x14000e1a6
   14000e05c:	mov    rbx,rbp
   14000e05f:	nop
   14000e060:	mov    rax,r13
   14000e063:	sub    rax,QWORD PTR [rsp+0x40]
   14000e068:	mov    QWORD PTR [rsp+0x50],rax
   14000e06d:	test   rbx,rbx
   14000e070:	jne    0x14000e0ad
   14000e072:	mov    rax,QWORD PTR [rdi+0x60]
   14000e076:	cmp    QWORD PTR [rax+0x68],rbp
   14000e07a:	jne    0x14000e0ad
   14000e07c:	mov    rcx,QWORD PTR [rdi+0x58]
   14000e080:	mov    rbx,rsi
   14000e083:	cmp    r12,rsi
   14000e086:	cmovb  rbx,r12
   14000e08a:	mov    r8,r15
   14000e08d:	mov    rdx,r14
   14000e090:	mov    r9,rbx
   14000e093:	call   QWORD PTR [rdi+0x48]
   14000e096:	cmp    rax,rbx
   14000e099:	jne    0x14000e15c
   14000e09f:	add    r14,rbx
   14000e0a2:	mov    QWORD PTR [rsp+0x2e28],rbp
   14000e0aa:	sub    rsi,rbx
   14000e0ad:	mov    rdx,QWORD PTR [rsp+0x2e28]
   14000e0b5:	mov    r9,QWORD PTR [rsp+0x2e20]
   14000e0bd:	mov    rax,rsi
   14000e0c0:	neg    rax
   14000e0c3:	mov    rax,QWORD PTR [rsp+0x40]
   14000e0c8:	lea    r8,[rsp+0x58]
   14000e0cd:	sbb    ecx,ecx
   14000e0cf:	add    rax,QWORD PTR [rsp+0x2e20]
   14000e0d7:	add    rdx,r15
   14000e0da:	and    ecx,0x2
   14000e0dd:	mov    QWORD PTR [rsp+0x58],rbx
   14000e0e2:	or     ecx,0x4
   14000e0e5:	mov    DWORD PTR [rsp+0x30],ecx
   14000e0e9:	lea    rcx,[rsp+0x50]
   14000e0ee:	mov    QWORD PTR [rsp+0x28],rcx
   14000e0f3:	lea    rcx,[rsp+0x2d0]
   14000e0fb:	mov    QWORD PTR [rsp+0x20],rax
   14000e100:	call   0x140015440
   14000e105:	mov    rcx,QWORD PTR [rsp+0x58]
   14000e10a:	add    QWORD PTR [rsp+0x2e28],rcx
   14000e112:	mov    r15d,eax
   14000e115:	mov    rax,QWORD PTR [rsp+0x40]
   14000e11a:	add    rax,QWORD PTR [rsp+0x50]
   14000e11f:	sub    rbx,rcx
   14000e122:	mov    QWORD PTR [rsp+0x40],rax
   14000e127:	cmp    r15d,0x1
   14000e12b:	jne    0x14000e137
   14000e12d:	mov    r15,QWORD PTR [rsp+0x48]
   14000e132:	jmp    0x14000e060
   14000e137:	test   r15d,r15d
   14000e13a:	jne    0x14000e160
   14000e13c:	cmp    rax,r13
   14000e13f:	jne    0x14000e15c
   14000e141:	mov    rdx,QWORD PTR [rsp+0x2e20]
   14000e149:	mov    r8,r13
   14000e14c:	xor    ecx,ecx
   14000e14e:	call   0x14000c0c0
   14000e153:	cmp    eax,DWORD PTR [rsp+0x98]
   14000e15a:	je     0x14000e160
   14000e15c:	or     r15d,0xffffffff
   14000e160:	mov    rcx,QWORD PTR [rdi+0x60]
   14000e164:	cmp    QWORD PTR [rcx+0x68],rbp
   14000e168:	jne    0x14000e180
   14000e16a:	cmp    QWORD PTR [rsp+0x2e38],rbp
   14000e172:	jne    0x14000e180
   14000e174:	mov    rdx,QWORD PTR [rsp+0x48]
   14000e179:	mov    rcx,QWORD PTR [rdi+0x40]
   14000e17d:	call   QWORD PTR [rdi+0x30]
   14000e180:	test   r15d,r15d
   14000e183:	sete   bpl
   14000e187:	jmp    0x14000e1c9
   14000e189:	mov    rsi,QWORD PTR [rsp+0x2e20]
   14000e191:	mov    rcx,QWORD PTR [rdi+0x58]
   14000e195:	mov    r9,r15
   14000e198:	mov    r8,rsi
   14000e19b:	mov    rdx,r14
   14000e19e:	call   QWORD PTR [rdi+0x48]
   14000e1a1:	cmp    rax,r15
   14000e1a4:	je     0x14000e1aa
   14000e1a6:	xor    eax,eax
   14000e1a8:	jmp    0x14000e1cb
   14000e1aa:	test   ebx,ebx
   14000e1ac:	jne    0x14000e1c4
   14000e1ae:	mov    r8,r13
   14000e1b1:	mov    rdx,rsi
   14000e1b4:	xor    ecx,ecx
   14000e1b6:	call   0x14000c0c0
   14000e1bb:	cmp    eax,DWORD PTR [rsp+0x98]
   14000e1c2:	jne    0x14000e1c9
   14000e1c4:	mov    ebp,0x1
   14000e1c9:	mov    eax,ebp
   14000e1cb:	mov    r13,QWORD PTR [rsp+0x2dd8]
   14000e1d3:	mov    r15,QWORD PTR [rsp+0x2dd0]
   14000e1db:	mov    r12,QWORD PTR [rsp+0x2de0]
   14000e1e3:	mov    rsi,QWORD PTR [rsp+0x2e10]
   14000e1eb:	add    rsp,0x2de8
   14000e1f2:	pop    r14
   14000e1f4:	pop    rdi
   14000e1f5:	pop    rbp
   14000e1f6:	pop    rbx
   14000e1f7:	ret    
   14000e1f8:	int3   
   14000e1f9:	int3   
   14000e1fa:	int3   
   14000e1fb:	int3   
   14000e1fc:	int3   
   14000e1fd:	int3   
   14000e1fe:	int3   
   14000e1ff:	int3   
   14000e200:	mov    QWORD PTR [rsp+0x10],rsi
   14000e205:	push   rdi
   14000e206:	sub    rsp,0x20
   14000e20a:	mov    rsi,r8
   14000e20d:	test   rcx,rcx
   14000e210:	je     0x14000e340
   14000e216:	mov    r9,QWORD PTR [rcx+0x60]
   14000e21a:	test   r9,r9
   14000e21d:	je     0x14000e340
   14000e223:	cmp    edx,DWORD PTR [rcx+0x18]
   14000e226:	jae    0x14000e340
   14000e22c:	cmp    DWORD PTR [rcx+0x1c],0x1
   14000e230:	jne    0x14000e340
   14000e236:	mov    eax,edx
   14000e238:	lea    r8,[rax*4+0x0]
   14000e240:	mov    rax,QWORD PTR [r9+0x20]
   14000e244:	mov    edi,DWORD PTR [rax+r8*1]
   14000e248:	add    rdi,QWORD PTR [r9]
   14000e24b:	je     0x14000e340
   14000e251:	test   rsi,rsi
   14000e254:	je     0x14000e340
   14000e25a:	mov    DWORD PTR [rsi],edx
   14000e25c:	mov    rax,QWORD PTR [rcx+0x60]
   14000e260:	mov    QWORD PTR [rsp+0x30],rbx
   14000e265:	mov    rcx,QWORD PTR [rax+0x20]
   14000e269:	mov    eax,DWORD PTR [r8+rcx*1]
   14000e26d:	mov    DWORD PTR [rsi+0x4],eax
   14000e270:	movzx  eax,WORD PTR [rdi+0x4]
   14000e274:	mov    WORD PTR [rsi+0x8],ax
   14000e278:	movzx  eax,WORD PTR [rdi+0x6]
   14000e27c:	mov    WORD PTR [rsi+0xa],ax
   14000e280:	movzx  eax,WORD PTR [rdi+0x8]
   14000e284:	mov    WORD PTR [rsi+0xc],ax
   14000e288:	movzx  eax,WORD PTR [rdi+0xa]
   14000e28c:	mov    WORD PTR [rsi+0xe],ax
   14000e290:	movzx  edx,WORD PTR [rdi+0xe]
   14000e294:	movzx  ecx,WORD PTR [rdi+0xc]
   14000e298:	call   0x14000d100
   14000e29d:	mov    ecx,0x103
   14000e2a2:	lea    rdx,[rdi+0x2e]
   14000e2a6:	mov    QWORD PTR [rsi+0x10],rax
   14000e2aa:	mov    eax,DWORD PTR [rdi+0x10]
   14000e2ad:	mov    DWORD PTR [rsi+0x18],eax
   14000e2b0:	mov    eax,DWORD PTR [rdi+0x14]
   14000e2b3:	mov    QWORD PTR [rsi+0x20],rax
   14000e2b7:	mov    eax,DWORD PTR [rdi+0x18]
   14000e2ba:	mov    QWORD PTR [rsi+0x28],rax
   14000e2be:	movzx  eax,WORD PTR [rdi+0x24]
   14000e2c2:	mov    WORD PTR [rsi+0x30],ax
   14000e2c6:	mov    eax,DWORD PTR [rdi+0x26]
   14000e2c9:	mov    DWORD PTR [rsi+0x34],eax
   14000e2cc:	mov    eax,DWORD PTR [rdi+0x2a]
   14000e2cf:	mov    QWORD PTR [rsi+0x38],rax
   14000e2d3:	movzx  eax,WORD PTR [rdi+0x1c]
   14000e2d7:	cmp    eax,ecx
   14000e2d9:	cmovb  ecx,eax
   14000e2dc:	mov    ebx,ecx
   14000e2de:	lea    rcx,[rsi+0x44]
   14000e2e2:	mov    r8d,ebx
   14000e2e5:	call   0x140017346
   14000e2ea:	mov    BYTE PTR [rbx+rsi*1+0x44],0x0
   14000e2ef:	movzx  eax,WORD PTR [rdi+0x20]
   14000e2f3:	mov    ecx,0xff
   14000e2f8:	cmp    eax,ecx
   14000e2fa:	cmovb  ecx,eax
   14000e2fd:	mov    DWORD PTR [rsi+0x40],ecx
   14000e300:	movzx  edx,WORD PTR [rdi+0x1e]
   14000e304:	mov    ebx,ecx
   14000e306:	movzx  ecx,WORD PTR [rdi+0x1c]
   14000e30a:	add    rdx,rdi
   14000e30d:	mov    r8d,ebx
   14000e310:	add    rcx,0x2e
   14000e314:	add    rdx,rcx
   14000e317:	lea    rcx,[rsi+0x148]
   14000e31e:	call   0x140017346
   14000e323:	mov    BYTE PTR [rbx+rsi*1+0x148],0x0
   14000e32b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e330:	mov    eax,0x1
   14000e335:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e33a:	add    rsp,0x20
   14000e33e:	pop    rdi
   14000e33f:	ret    
   14000e340:	xor    eax,eax
   14000e342:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e347:	add    rsp,0x20
   14000e34b:	pop    rdi
   14000e34c:	ret    
   14000e34d:	int3   
   14000e34e:	int3   
   14000e34f:	int3   
   14000e350:	mov    rax,QWORD PTR [rdx]
   14000e353:	mov    r8d,r8d
   14000e356:	xor    dl,dl
   14000e358:	mov    r10d,DWORD PTR [rax+r8*4]
   14000e35c:	xor    al,al
   14000e35e:	add    r10,QWORD PTR [rcx]
   14000e361:	mov    ecx,DWORD PTR [rsp+0x28]
   14000e365:	movzx  r11d,WORD PTR [r10+0x1c]
   14000e36a:	add    r10,0x2e
   14000e36e:	cmp    r11d,ecx
   14000e371:	cmovb  ecx,r11d
   14000e375:	mov    r8d,ecx
   14000e378:	add    r8,r10
   14000e37b:	cmp    r10,r8
   14000e37e:	jae    0x14000e3b1
   14000e380:	movzx  ecx,BYTE PTR [r10]
   14000e384:	movzx  edx,cl
   14000e387:	lea    eax,[rcx-0x41]
   14000e38a:	cmp    al,0x19
   14000e38c:	ja     0x14000e391
   14000e38e:	add    edx,0x20
   14000e391:	movzx  eax,BYTE PTR [r9]
   14000e395:	lea    ecx,[rax-0x41]
   14000e398:	cmp    cl,0x19
   14000e39b:	ja     0x14000e39f
   14000e39d:	add    al,0x20
   14000e39f:	cmp    dl,al
   14000e3a1:	jne    0x14000e3ae
   14000e3a3:	inc    r10
   14000e3a6:	inc    r9
   14000e3a9:	cmp    r10,r8
   14000e3ac:	jb     0x14000e380
   14000e3ae:	cmp    r10,r8
   14000e3b1:	jne    0x14000e3bc
   14000e3b3:	sub    r11d,DWORD PTR [rsp+0x28]
   14000e3b8:	mov    eax,r11d
   14000e3bb:	ret    
   14000e3bc:	movzx  ecx,al
   14000e3bf:	movzx  eax,dl
   14000e3c2:	sub    eax,ecx
   14000e3c4:	ret    
   14000e3c5:	int3   
   14000e3c6:	int3   
   14000e3c7:	int3   
   14000e3c8:	int3   
   14000e3c9:	int3   
   14000e3ca:	int3   
   14000e3cb:	int3   
   14000e3cc:	int3   
   14000e3cd:	int3   
   14000e3ce:	int3   
   14000e3cf:	int3   
   14000e3d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e3d5:	mov    r10,QWORD PTR [rdx]
   14000e3d8:	mov    rdx,QWORD PTR [rcx]
   14000e3db:	mov    eax,r8d
   14000e3de:	mov    r8d,DWORD PTR [r10+rax*4]
   14000e3e2:	mov    eax,r9d
   14000e3e5:	mov    r9d,DWORD PTR [r10+rax*4]
   14000e3e9:	add    r8,rdx
   14000e3ec:	xor    al,al
   14000e3ee:	movzx  r11d,WORD PTR [r8+0x1c]
   14000e3f3:	add    r9,rdx
   14000e3f6:	add    r8,0x2e
   14000e3fa:	movzx  ebx,WORD PTR [r9+0x1c]
   14000e3ff:	xor    dl,dl
   14000e401:	add    r9,0x2e
   14000e405:	cmp    r11d,ebx
   14000e408:	mov    ecx,ebx
   14000e40a:	cmovb  ecx,r11d
   14000e40e:	mov    r10d,ecx
   14000e411:	add    r10,r8
   14000e414:	cmp    r8,r10
   14000e417:	jae    0x14000e451
   14000e419:	nop    DWORD PTR [rax+0x0]
   14000e420:	movzx  ecx,BYTE PTR [r8]
   14000e424:	movzx  edx,cl
   14000e427:	lea    eax,[rcx-0x41]
   14000e42a:	cmp    al,0x19
   14000e42c:	ja     0x14000e431
   14000e42e:	add    edx,0x20
   14000e431:	movzx  eax,BYTE PTR [r9]
   14000e435:	lea    ecx,[rax-0x41]
   14000e438:	cmp    cl,0x19
   14000e43b:	ja     0x14000e43f
   14000e43d:	add    al,0x20
   14000e43f:	cmp    dl,al
   14000e441:	jne    0x14000e44e
   14000e443:	inc    r8
   14000e446:	inc    r9
   14000e449:	cmp    r8,r10
   14000e44c:	jb     0x14000e420
   14000e44e:	cmp    r8,r10
   14000e451:	jne    0x14000e463
   14000e453:	xor    ecx,ecx
   14000e455:	cmp    r11d,ebx
   14000e458:	setb   cl
   14000e45b:	mov    eax,ecx
   14000e45d:	mov    rbx,QWORD PTR [rsp+0x8]
   14000e462:	ret    
   14000e463:	mov    rbx,QWORD PTR [rsp+0x8]
   14000e468:	xor    ecx,ecx
   14000e46a:	cmp    dl,al
   14000e46c:	setb   cl
   14000e46f:	mov    eax,ecx
   14000e471:	ret    
   14000e472:	int3   
   14000e473:	int3   
   14000e474:	int3   
   14000e475:	int3   
   14000e476:	int3   
   14000e477:	int3   
   14000e478:	int3   
   14000e479:	int3   
   14000e47a:	int3   
   14000e47b:	int3   
   14000e47c:	int3   
   14000e47d:	int3   
   14000e47e:	int3   
   14000e47f:	int3   
   14000e480:	test   rcx,rcx
   14000e483:	je     0x14000e4a6
   14000e485:	mov    r8,QWORD PTR [rcx+0x60]
   14000e489:	test   r8,r8
   14000e48c:	je     0x14000e4a6
   14000e48e:	cmp    edx,DWORD PTR [rcx+0x18]
   14000e491:	jae    0x14000e4a6
   14000e493:	cmp    DWORD PTR [rcx+0x1c],0x1
   14000e497:	jne    0x14000e4a6
   14000e499:	mov    rax,QWORD PTR [r8+0x20]
   14000e49d:	mov    ecx,edx
   14000e49f:	mov    eax,DWORD PTR [rax+rcx*4]
   14000e4a2:	add    rax,QWORD PTR [r8]
   14000e4a5:	ret    
   14000e4a6:	xor    eax,eax
   14000e4a8:	ret    
   14000e4a9:	int3   
   14000e4aa:	int3   
   14000e4ab:	int3   
   14000e4ac:	int3   
   14000e4ad:	int3   
   14000e4ae:	int3   
   14000e4af:	int3   
   14000e4b0:	rex push rsi
   14000e4b2:	sub    rsp,0x20
   14000e4b6:	mov    rsi,r8
   14000e4b9:	test   rcx,rcx
   14000e4bc:	je     0x14000e522
   14000e4be:	mov    r10,QWORD PTR [rcx+0x60]
   14000e4c2:	test   r10,r10
   14000e4c5:	je     0x14000e522
   14000e4c7:	cmp    edx,DWORD PTR [rcx+0x18]
   14000e4ca:	jae    0x14000e522
   14000e4cc:	cmp    DWORD PTR [rcx+0x1c],0x1
   14000e4d0:	jne    0x14000e522
   14000e4d2:	mov    rax,QWORD PTR [r10+0x20]
   14000e4d6:	mov    ecx,edx
   14000e4d8:	mov    edx,DWORD PTR [rax+rcx*4]
   14000e4db:	add    rdx,QWORD PTR [r10]
   14000e4de:	je     0x14000e522
   14000e4e0:	mov    QWORD PTR [rsp+0x38],rdi
   14000e4e5:	movzx  edi,WORD PTR [rdx+0x1c]
   14000e4e9:	test   r9d,r9d
   14000e4ec:	je     0x14000e514
   14000e4ee:	lea    eax,[r9-0x1]
   14000e4f2:	mov    rcx,rsi
   14000e4f5:	mov    QWORD PTR [rsp+0x30],rbx
   14000e4fa:	cmp    edi,eax
   14000e4fc:	cmovae edi,eax
   14000e4ff:	add    rdx,0x2e
   14000e503:	mov    r8d,edi
   14000e506:	call   0x140017346
   14000e50b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e510:	mov    BYTE PTR [rdi+rsi*1],0x0
   14000e514:	lea    eax,[rdi+0x1]
   14000e517:	mov    rdi,QWORD PTR [rsp+0x38]
   14000e51c:	add    rsp,0x20
   14000e520:	pop    rsi
   14000e521:	ret    
   14000e522:	test   r9d,r9d
   14000e525:	je     0x14000e52b
   14000e527:	mov    BYTE PTR [r8],0x0
   14000e52b:	xor    eax,eax
   14000e52d:	add    rsp,0x20
   14000e531:	pop    rsi
   14000e532:	ret    
   14000e533:	int3   
   14000e534:	int3   
   14000e535:	int3   
   14000e536:	int3   
   14000e537:	int3   
   14000e538:	int3   
   14000e539:	int3   
   14000e53a:	int3   
   14000e53b:	int3   
   14000e53c:	int3   
   14000e53d:	int3   
   14000e53e:	int3   
   14000e53f:	int3   
   14000e540:	test   rcx,rcx
   14000e543:	je     0x14000e549
   14000e545:	mov    eax,DWORD PTR [rcx+0x18]
   14000e548:	ret    
   14000e549:	xor    eax,eax
   14000e54b:	ret    
   14000e54c:	int3   
   14000e54d:	int3   
   14000e54e:	int3   
   14000e54f:	int3   
   14000e550:	mov    QWORD PTR [rsp+0x8],rbx
   14000e555:	mov    QWORD PTR [rsp+0x10],rsi
   14000e55a:	push   rdi
   14000e55b:	sub    rsp,0x20
   14000e55f:	mov    edi,r8d
   14000e562:	mov    rsi,rdx
   14000e565:	mov    rbx,rcx
   14000e568:	test   rcx,rcx
   14000e56b:	je     0x14000e599
   14000e56d:	cmp    QWORD PTR [rcx+0x48],0x0
   14000e572:	je     0x14000e599
   14000e574:	mov    edx,r8d
   14000e577:	call   0x14000e6a0
   14000e57c:	test   eax,eax
   14000e57e:	je     0x14000e599
   14000e580:	mov    edx,edi
   14000e582:	mov    rcx,rbx
   14000e585:	mov    QWORD PTR [rbx],rsi
   14000e588:	call   0x14000ec70
   14000e58d:	test   eax,eax
   14000e58f:	jne    0x14000e5ab
   14000e591:	mov    rcx,rbx
   14000e594:	call   0x14000d4f0
   14000e599:	xor    eax,eax
   14000e59b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e5a0:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e5a5:	add    rsp,0x20
   14000e5a9:	pop    rdi
   14000e5aa:	ret    
   14000e5ab:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e5b0:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e5b5:	mov    eax,0x1
   14000e5ba:	add    rsp,0x20
   14000e5be:	pop    rdi
   14000e5bf:	ret    
   14000e5c0:	mov    QWORD PTR [rsp+0x10],rbx
   14000e5c5:	mov    QWORD PTR [rsp+0x18],rsi
   14000e5ca:	push   rdi
   14000e5cb:	sub    rsp,0x20
   14000e5cf:	mov    esi,r8d
   14000e5d2:	mov    rbx,rcx
   14000e5d5:	lea    r8,[rip+0xd85c]        # 0x14001be38
   14000e5dc:	lea    rcx,[rsp+0x48]
   14000e5e1:	mov    QWORD PTR [rsp+0x48],0x0
   14000e5ea:	call   QWORD PTR [rip+0xad30]        # 0x140019320
   14000e5f0:	mov    rdi,QWORD PTR [rsp+0x48]
   14000e5f5:	test   rdi,rdi
   14000e5f8:	je     0x14000e616
   14000e5fa:	xor    edx,edx
   14000e5fc:	mov    rcx,rdi
   14000e5ff:	lea    r8d,[rdx+0x2]
   14000e603:	call   QWORD PTR [rip+0xac27]        # 0x140019230
   14000e609:	mov    rcx,rdi
   14000e60c:	test   eax,eax
   14000e60e:	je     0x14000e628
   14000e610:	call   QWORD PTR [rip+0xabea]        # 0x140019200
   14000e616:	xor    eax,eax
   14000e618:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e61d:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e622:	add    rsp,0x20
   14000e626:	pop    rdi
   14000e627:	ret    
   14000e628:	mov    QWORD PTR [rsp+0x30],rbp
   14000e62d:	call   QWORD PTR [rip+0xad05]        # 0x140019338
   14000e633:	mov    edx,esi
   14000e635:	mov    rcx,rbx
   14000e638:	mov    rbp,rax
   14000e63b:	call   0x14000e6a0
   14000e640:	test   eax,eax
   14000e642:	jne    0x14000e651
   14000e644:	mov    rcx,rdi
   14000e647:	call   QWORD PTR [rip+0xabb3]        # 0x140019200
   14000e64d:	xor    eax,eax
   14000e64f:	jmp    0x14000e68a
   14000e651:	lea    rax,[rip+0xffffffffffffebf8]        # 0x14000d250
   14000e658:	mov    QWORD PTR [rbx+0x58],rbx
   14000e65c:	mov    edx,esi
   14000e65e:	mov    QWORD PTR [rbx+0x48],rax
   14000e662:	mov    rax,QWORD PTR [rbx+0x60]
   14000e666:	mov    rcx,rbx
   14000e669:	mov    QWORD PTR [rax+0x60],rdi
   14000e66d:	mov    QWORD PTR [rbx],rbp
   14000e670:	call   0x14000ec70
   14000e675:	test   eax,eax
   14000e677:	jne    0x14000e685
   14000e679:	mov    rcx,rbx
   14000e67c:	call   0x14000d4f0
   14000e681:	xor    eax,eax
   14000e683:	jmp    0x14000e68a
   14000e685:	mov    eax,0x1
   14000e68a:	mov    rbp,QWORD PTR [rsp+0x30]
   14000e68f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e694:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e699:	add    rsp,0x20
   14000e69d:	pop    rdi
   14000e69e:	ret    
   14000e69f:	int3   
   14000e6a0:	rex push rbx
   14000e6a2:	sub    rsp,0x20
   14000e6a6:	mov    rbx,rcx
   14000e6a9:	test   rcx,rcx
   14000e6ac:	je     0x14000e763
   14000e6b2:	cmp    QWORD PTR [rcx+0x60],0x0
   14000e6b7:	jne    0x14000e763
   14000e6bd:	cmp    DWORD PTR [rcx+0x1c],0x0
   14000e6c1:	jne    0x14000e763
   14000e6c7:	cmp    QWORD PTR [rcx+0x28],0x0
   14000e6cc:	jne    0x14000e6d9
   14000e6ce:	lea    rax,[rip+0xffffffffffffd72b]        # 0x14000be00
   14000e6d5:	mov    QWORD PTR [rcx+0x28],rax
   14000e6d9:	cmp    QWORD PTR [rcx+0x30],0x0
   14000e6de:	jne    0x14000e6eb
   14000e6e0:	lea    rax,[rip+0xffffffffffffd729]        # 0x14000be10
   14000e6e7:	mov    QWORD PTR [rcx+0x30],rax
   14000e6eb:	cmp    QWORD PTR [rcx+0x38],0x0
   14000e6f0:	jne    0x14000e6fd
   14000e6f2:	lea    rax,[rip+0xffffffffffffd727]        # 0x14000be20
   14000e6f9:	mov    QWORD PTR [rcx+0x38],rax
   14000e6fd:	xor    eax,eax
   14000e6ff:	mov    DWORD PTR [rcx+0x1c],0x1
   14000e706:	lea    edx,[rax+0x1]
   14000e709:	mov    QWORD PTR [rcx],rax
   14000e70c:	mov    QWORD PTR [rcx+0x10],rax
   14000e710:	mov    DWORD PTR [rcx+0x18],eax
   14000e713:	mov    rcx,QWORD PTR [rcx+0x40]
   14000e717:	lea    r8d,[rdx+0x7f]
   14000e71b:	call   QWORD PTR [rbx+0x28]
   14000e71e:	mov    QWORD PTR [rbx+0x60],rax
   14000e722:	test   rax,rax
   14000e725:	je     0x14000e763
   14000e727:	xor    edx,edx
   14000e729:	mov    r8d,0x80
   14000e72f:	mov    rcx,rax
   14000e732:	call   0x14001734c
   14000e737:	mov    rcx,QWORD PTR [rbx+0x60]
   14000e73b:	mov    eax,0x1
   14000e740:	mov    DWORD PTR [rcx+0x18],0x1
   14000e747:	mov    rcx,QWORD PTR [rbx+0x60]
   14000e74b:	mov    DWORD PTR [rcx+0x38],0x4
   14000e752:	mov    rcx,QWORD PTR [rbx+0x60]
   14000e756:	mov    DWORD PTR [rcx+0x58],0x4
   14000e75d:	add    rsp,0x20
   14000e761:	pop    rbx
   14000e762:	ret    
   14000e763:	xor    eax,eax
   14000e765:	add    rsp,0x20
   14000e769:	pop    rbx
   14000e76a:	ret    
   14000e76b:	int3   
   14000e76c:	int3   
   14000e76d:	int3   
   14000e76e:	int3   
   14000e76f:	int3   
   14000e770:	mov    QWORD PTR [rsp+0x8],rbx
   14000e775:	mov    QWORD PTR [rsp+0x10],rbp
   14000e77a:	mov    QWORD PTR [rsp+0x18],rsi
   14000e77f:	push   rdi
   14000e780:	sub    rsp,0x20
   14000e784:	mov    rbp,rdx
   14000e787:	mov    edx,r9d
   14000e78a:	mov    edi,r9d
   14000e78d:	mov    rsi,r8
   14000e790:	mov    rbx,rcx
   14000e793:	call   0x14000e6a0
   14000e798:	test   eax,eax
   14000e79a:	je     0x14000e7d4
   14000e79c:	mov    QWORD PTR [rbx],rsi
   14000e79f:	mov    QWORD PTR [rbx+0x58],rbx
   14000e7a3:	lea    rax,[rip+0xffffffffffffecf6]        # 0x14000d4a0
   14000e7aa:	mov    QWORD PTR [rbx+0x48],rax
   14000e7ae:	mov    rax,QWORD PTR [rbx+0x60]
   14000e7b2:	mov    edx,edi
   14000e7b4:	mov    QWORD PTR [rax+0x68],rbp
   14000e7b8:	mov    rax,QWORD PTR [rbx+0x60]
   14000e7bc:	mov    rcx,rbx
   14000e7bf:	mov    QWORD PTR [rax+0x70],rsi
   14000e7c3:	call   0x14000ec70
   14000e7c8:	test   eax,eax
   14000e7ca:	jne    0x14000e7d8
   14000e7cc:	mov    rcx,rbx
   14000e7cf:	call   0x14000d4f0
   14000e7d4:	xor    eax,eax
   14000e7d6:	jmp    0x14000e7dd
   14000e7d8:	mov    eax,0x1
   14000e7dd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e7e2:	mov    rbp,QWORD PTR [rsp+0x38]
   14000e7e7:	mov    rsi,QWORD PTR [rsp+0x40]
   14000e7ec:	add    rsp,0x20
   14000e7f0:	pop    rdi
   14000e7f1:	ret    
   14000e7f2:	int3   
   14000e7f3:	int3   
   14000e7f4:	int3   
   14000e7f5:	int3   
   14000e7f6:	int3   
   14000e7f7:	int3   
   14000e7f8:	int3   
   14000e7f9:	int3   
   14000e7fa:	int3   
   14000e7fb:	int3   
   14000e7fc:	int3   
   14000e7fd:	int3   
   14000e7fe:	int3   
   14000e7ff:	int3   
   14000e800:	test   rcx,rcx
   14000e803:	je     0x14000e847
   14000e805:	mov    r8,QWORD PTR [rcx+0x60]
   14000e809:	test   r8,r8
   14000e80c:	je     0x14000e847
   14000e80e:	cmp    edx,DWORD PTR [rcx+0x18]
   14000e811:	jae    0x14000e847
   14000e813:	cmp    DWORD PTR [rcx+0x1c],0x1
   14000e817:	jne    0x14000e847
   14000e819:	mov    rax,QWORD PTR [r8+0x20]
   14000e81d:	mov    ecx,edx
   14000e81f:	mov    edx,DWORD PTR [rax+rcx*4]
   14000e822:	add    rdx,QWORD PTR [r8]
   14000e825:	je     0x14000e847
   14000e827:	movzx  eax,WORD PTR [rdx+0x1c]
   14000e82b:	test   eax,eax
   14000e82d:	je     0x14000e83c
   14000e82f:	cmp    BYTE PTR [rax+rdx*1+0x2d],0x2f
   14000e834:	jne    0x14000e83c
   14000e836:	mov    eax,0x1
   14000e83b:	ret    
   14000e83c:	movzx  eax,BYTE PTR [rdx+0x26]
   14000e840:	shr    eax,0x4
   14000e843:	and    eax,0x1
   14000e846:	ret    
   14000e847:	xor    eax,eax
   14000e849:	ret    
   14000e84a:	int3   
   14000e84b:	int3   
   14000e84c:	int3   
   14000e84d:	int3   
   14000e84e:	int3   
   14000e84f:	int3   
   14000e850:	test   rcx,rcx
   14000e853:	je     0x14000e87f
   14000e855:	mov    r8,QWORD PTR [rcx+0x60]
   14000e859:	test   r8,r8
   14000e85c:	je     0x14000e87f
   14000e85e:	cmp    edx,DWORD PTR [rcx+0x18]
   14000e861:	jae    0x14000e87f
   14000e863:	cmp    DWORD PTR [rcx+0x1c],0x1
   14000e867:	jne    0x14000e87f
   14000e869:	mov    rax,QWORD PTR [r8+0x20]
   14000e86d:	mov    ecx,edx
   14000e86f:	mov    edx,DWORD PTR [rax+rcx*4]
   14000e872:	add    rdx,QWORD PTR [r8]
   14000e875:	je     0x14000e87f
   14000e877:	movzx  eax,WORD PTR [rdx+0x8]
   14000e87b:	and    eax,0x1
   14000e87e:	ret    
   14000e87f:	xor    eax,eax
   14000e881:	ret    
   14000e882:	int3   
   14000e883:	int3   
   14000e884:	int3   
   14000e885:	int3   
   14000e886:	int3   
   14000e887:	int3   
   14000e888:	int3   
   14000e889:	int3   
   14000e88a:	int3   
   14000e88b:	int3   
   14000e88c:	int3   
   14000e88d:	int3   
   14000e88e:	int3   
   14000e88f:	int3   
   14000e890:	push   r12
   14000e892:	push   r13
   14000e894:	push   r15
   14000e896:	sub    rsp,0x40
   14000e89a:	mov    r13d,r9d
   14000e89d:	mov    r12,r8
   14000e8a0:	mov    r15,rdx
   14000e8a3:	test   rcx,rcx
   14000e8a6:	je     0x14000eb3c
   14000e8ac:	mov    rax,QWORD PTR [rcx+0x60]
   14000e8b0:	test   rax,rax
   14000e8b3:	je     0x14000eb3c
   14000e8b9:	test   rdx,rdx
   14000e8bc:	je     0x14000eb3c
   14000e8c2:	cmp    DWORD PTR [rcx+0x1c],0x1
   14000e8c6:	jne    0x14000eb3c
   14000e8cc:	test   r9d,0x300
   14000e8d3:	jne    0x14000e8ef
   14000e8d5:	test   r8,r8
   14000e8d8:	jne    0x14000e8ef
   14000e8da:	cmp    QWORD PTR [rax+0x48],r8
   14000e8de:	je     0x14000e8ef
   14000e8e0:	add    rsp,0x40
   14000e8e4:	pop    r15
   14000e8e6:	pop    r13
   14000e8e8:	pop    r12
   14000e8ea:	jmp    0x14000eb50
   14000e8ef:	mov    QWORD PTR [rsp+0x78],rsi
   14000e8f4:	or     rsi,0xffffffffffffffff
   14000e8f8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e900:	inc    rsi
   14000e903:	cmp    BYTE PTR [rdx+rsi*1],0x0
   14000e907:	jne    0x14000e900
   14000e909:	cmp    rsi,0xffff
   14000e910:	jbe    0x14000e925
   14000e912:	or     eax,0xffffffff
   14000e915:	mov    rsi,QWORD PTR [rsp+0x78]
   14000e91a:	add    rsp,0x40
   14000e91e:	pop    r15
   14000e920:	pop    r13
   14000e922:	pop    r12
   14000e924:	ret    
   14000e925:	mov    QWORD PTR [rsp+0x70],rbp
   14000e92a:	test   r8,r8
   14000e92d:	je     0x14000e94e
   14000e92f:	or     rbp,0xffffffffffffffff
   14000e933:	inc    rbp
   14000e936:	cmp    BYTE PTR [r8+rbp*1],0x0
   14000e93b:	jne    0x14000e933
   14000e93d:	cmp    rbp,0xffff
   14000e944:	jbe    0x14000e950
   14000e946:	or     eax,0xffffffff
   14000e949:	jmp    0x14000eadd
   14000e94e:	xor    ebp,ebp
   14000e950:	mov    ecx,DWORD PTR [rcx+0x18]
   14000e953:	mov    QWORD PTR [rsp+0x68],rbx
   14000e958:	mov    QWORD PTR [rsp+0x38],rdi
   14000e95d:	mov    QWORD PTR [rsp+0x30],r14
   14000e962:	xor    r14d,r14d
   14000e965:	mov    DWORD PTR [rsp+0x60],ecx
   14000e969:	test   ecx,ecx
   14000e96b:	je     0x14000eb37
   14000e971:	mov    rcx,QWORD PTR [rax+0x20]
   14000e975:	mov    rdx,QWORD PTR [rax]
   14000e978:	mov    QWORD PTR [rsp+0x28],rcx
   14000e97d:	mov    QWORD PTR [rsp+0x20],rdx
   14000e982:	mov    ecx,DWORD PTR [rcx+r14*4]
   14000e986:	movabs r9,0x200000000801
   14000e990:	add    rcx,rdx
   14000e993:	movzx  edi,WORD PTR [rcx+0x1c]
   14000e997:	lea    rbx,[rcx+0x2e]
   14000e99b:	cmp    rdi,rsi
   14000e99e:	jb     0x14000e9df
   14000e9a0:	test   rbp,rbp
   14000e9a3:	je     0x14000ea4e
   14000e9a9:	movzx  r10d,WORD PTR [rcx+0x20]
   14000e9ae:	movzx  edx,WORD PTR [rcx+0x1e]
   14000e9b2:	add    rdx,rdi
   14000e9b5:	mov    r8d,r10d
   14000e9b8:	add    rdx,rbx
   14000e9bb:	cmp    r10,rbp
   14000e9be:	jne    0x14000e9da
   14000e9c0:	bt     r13d,0x8
   14000e9c5:	jae    0x14000e9f4
   14000e9c7:	mov    rcx,r12
   14000e9ca:	call   0x140017340
   14000e9cf:	xor    ecx,ecx
   14000e9d1:	test   eax,eax
   14000e9d3:	sete   cl
   14000e9d6:	test   ecx,ecx
   14000e9d8:	jne    0x14000ea44
   14000e9da:	mov    rdx,QWORD PTR [rsp+0x20]
   14000e9df:	inc    r14d
   14000e9e2:	cmp    r14d,DWORD PTR [rsp+0x60]
   14000e9e7:	jae    0x14000eb37
   14000e9ed:	mov    rcx,QWORD PTR [rsp+0x28]
   14000e9f2:	jmp    0x14000e982
   14000e9f4:	xor    r9d,r9d
   14000e9f7:	test   r10d,r10d
   14000e9fa:	je     0x14000ea44
   14000e9fc:	mov    r11,r12
   14000e9ff:	sub    r11,rdx
   14000ea02:	nop    DWORD PTR [rax+0x0]
   14000ea06:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000ea10:	movzx  ecx,BYTE PTR [r11+rdx*1]
   14000ea15:	movsx  r8d,cl
   14000ea19:	lea    eax,[rcx-0x41]
   14000ea1c:	cmp    al,0x19
   14000ea1e:	ja     0x14000ea24
   14000ea20:	add    r8d,0x20
   14000ea24:	movzx  ecx,BYTE PTR [rdx]
   14000ea27:	lea    eax,[rcx-0x41]
   14000ea2a:	cmp    al,0x19
   14000ea2c:	movsx  eax,cl
   14000ea2f:	ja     0x14000ea34
   14000ea31:	add    eax,0x20
   14000ea34:	cmp    r8d,eax
   14000ea37:	jne    0x14000e9da
   14000ea39:	inc    r9d
   14000ea3c:	inc    rdx
   14000ea3f:	cmp    r9d,r10d
   14000ea42:	jb     0x14000ea10
   14000ea44:	movabs r9,0x200000000801
   14000ea4e:	bt     r13d,0x9
   14000ea53:	jae    0x14000ea9e
   14000ea55:	test   edi,edi
   14000ea57:	je     0x14000ea9e
   14000ea59:	lea    r8d,[rdi-0x1]
   14000ea5d:	mov    rdx,rbx
   14000ea60:	movsxd rax,r8d
   14000ea63:	neg    rdx
   14000ea66:	lea    rcx,[rax+rbx*1]
   14000ea6a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ea70:	movzx  eax,BYTE PTR [rcx]
   14000ea73:	sub    al,0x2f
   14000ea75:	cmp    al,0x2d
   14000ea77:	ja     0x14000ea83
   14000ea79:	movsx  rax,al
   14000ea7d:	bt     r9,rax
   14000ea81:	jb     0x14000ea92
   14000ea83:	dec    rcx
   14000ea86:	dec    r8d
   14000ea89:	lea    rax,[rdx+rcx*1]
   14000ea8d:	test   rax,rax
   14000ea90:	jns    0x14000ea70
   14000ea92:	inc    r8d
   14000ea95:	movsxd rax,r8d
   14000ea98:	add    rbx,rax
   14000ea9b:	sub    edi,r8d
   14000ea9e:	mov    r8d,edi
   14000eaa1:	cmp    r8,rsi
   14000eaa4:	jne    0x14000e9da
   14000eaaa:	bt     r13d,0x8
   14000eaaf:	jae    0x14000eaf2
   14000eab1:	mov    rdx,rbx
   14000eab4:	mov    rcx,r15
   14000eab7:	call   0x140017340
   14000eabc:	xor    ecx,ecx
   14000eabe:	test   eax,eax
   14000eac0:	sete   cl
   14000eac3:	test   ecx,ecx
   14000eac5:	je     0x14000e9da
   14000eacb:	mov    eax,r14d
   14000eace:	mov    rdi,QWORD PTR [rsp+0x38]
   14000ead3:	mov    rbx,QWORD PTR [rsp+0x68]
   14000ead8:	mov    r14,QWORD PTR [rsp+0x30]
   14000eadd:	mov    rbp,QWORD PTR [rsp+0x70]
   14000eae2:	mov    rsi,QWORD PTR [rsp+0x78]
   14000eae7:	add    rsp,0x40
   14000eaeb:	pop    r15
   14000eaed:	pop    r13
   14000eaef:	pop    r12
   14000eaf1:	ret    
   14000eaf2:	xor    r8d,r8d
   14000eaf5:	test   edi,edi
   14000eaf7:	je     0x14000eacb
   14000eaf9:	mov    r9,r15
   14000eafc:	sub    r9,rbx
   14000eaff:	nop
   14000eb00:	movzx  ecx,BYTE PTR [r9+rbx*1]
   14000eb05:	movsx  edx,cl
   14000eb08:	lea    eax,[rcx-0x41]
   14000eb0b:	cmp    al,0x19
   14000eb0d:	ja     0x14000eb12
   14000eb0f:	add    edx,0x20
   14000eb12:	movzx  ecx,BYTE PTR [rbx]
   14000eb15:	lea    eax,[rcx-0x41]
   14000eb18:	cmp    al,0x19
   14000eb1a:	movsx  eax,cl
   14000eb1d:	ja     0x14000eb22
   14000eb1f:	add    eax,0x20
   14000eb22:	cmp    edx,eax
   14000eb24:	jne    0x14000e9da
   14000eb2a:	inc    r8d
   14000eb2d:	inc    rbx
   14000eb30:	cmp    r8d,edi
   14000eb33:	jb     0x14000eb00
   14000eb35:	jmp    0x14000eacb
   14000eb37:	or     eax,0xffffffff
   14000eb3a:	jmp    0x14000eace
   14000eb3c:	or     eax,0xffffffff
   14000eb3f:	add    rsp,0x40
   14000eb43:	pop    r15
   14000eb45:	pop    r13
   14000eb47:	pop    r12
   14000eb49:	ret    
   14000eb4a:	int3   
   14000eb4b:	int3   
   14000eb4c:	int3   
   14000eb4d:	int3   
   14000eb4e:	int3   
   14000eb4f:	int3   
   14000eb50:	rex push rbx
   14000eb52:	push   rbp
   14000eb53:	push   rsi
   14000eb54:	push   r14
   14000eb56:	sub    rsp,0x8
   14000eb5a:	mov    rax,QWORD PTR [rcx+0x60]
   14000eb5e:	mov    r14,rdx
   14000eb61:	or     rbx,0xffffffffffffffff
   14000eb65:	mov    rdx,QWORD PTR [rax+0x40]
   14000eb69:	mov    QWORD PTR [rsp+0x30],rdx
   14000eb6e:	xchg   ax,ax
   14000eb70:	inc    rbx
   14000eb73:	cmp    BYTE PTR [r14+rbx*1],0x0
   14000eb78:	jne    0x14000eb70
   14000eb7a:	mov    esi,DWORD PTR [rcx+0x18]
   14000eb7d:	mov    QWORD PTR [rsp+0x38],rdi
   14000eb82:	mov    QWORD PTR [rsp+0x40],r12
   14000eb87:	xor    ebp,ebp
   14000eb89:	dec    esi
   14000eb8b:	mov    QWORD PTR [rsp+0x48],r13
   14000eb90:	mov    QWORD PTR [rsp],r15
   14000eb94:	js     0x14000ec3e
   14000eb9a:	mov    r12,QWORD PTR [rax+0x20]
   14000eb9e:	mov    r13,QWORD PTR [rax]
   14000eba1:	lea    edi,[rsi+rbp*1]
   14000eba4:	mov    ecx,ebx
   14000eba6:	mov    r9,r14
   14000eba9:	sar    edi,1
   14000ebab:	movsxd rax,edi
   14000ebae:	mov    r15d,DWORD PTR [rdx+rax*4]
   14000ebb2:	xor    dl,dl
   14000ebb4:	mov    r8d,DWORD PTR [r12+r15*4]
   14000ebb8:	mov    eax,r15d
   14000ebbb:	xor    al,al
   14000ebbd:	add    r8,r13
   14000ebc0:	add    r8,0x2e
   14000ebc4:	movzx  r10d,WORD PTR [r8-0x12]
   14000ebc9:	cmp    r10d,ebx
   14000ebcc:	cmovb  ecx,r10d
   14000ebd0:	mov    r11d,ecx
   14000ebd3:	add    r11,r8
   14000ebd6:	cmp    r8,r11
   14000ebd9:	jae    0x14000ec11
   14000ebdb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ebe0:	movzx  ecx,BYTE PTR [r8]
   14000ebe4:	movzx  edx,cl
   14000ebe7:	lea    eax,[rcx-0x41]
   14000ebea:	cmp    al,0x19
   14000ebec:	ja     0x14000ebf1
   14000ebee:	add    edx,0x20
   14000ebf1:	movzx  eax,BYTE PTR [r9]
   14000ebf5:	lea    ecx,[rax-0x41]
   14000ebf8:	cmp    cl,0x19
   14000ebfb:	ja     0x14000ebff
   14000ebfd:	add    al,0x20
   14000ebff:	cmp    dl,al
   14000ec01:	jne    0x14000ec0e
   14000ec03:	inc    r8
   14000ec06:	inc    r9
   14000ec09:	cmp    r8,r11
   14000ec0c:	jb     0x14000ebe0
   14000ec0e:	cmp    r8,r11
   14000ec11:	jne    0x14000ec18
   14000ec13:	sub    r10d,ebx
   14000ec16:	jmp    0x14000ec22
   14000ec18:	movzx  ecx,al
   14000ec1b:	movzx  r10d,dl
   14000ec1f:	sub    r10d,ecx
   14000ec22:	test   r10d,r10d
   14000ec25:	je     0x14000ec5e
   14000ec27:	jns    0x14000ec2e
   14000ec29:	lea    ebp,[rdi+0x1]
   14000ec2c:	jmp    0x14000ec31
   14000ec2e:	lea    esi,[rdi-0x1]
   14000ec31:	mov    rdx,QWORD PTR [rsp+0x30]
   14000ec36:	cmp    ebp,esi
   14000ec38:	jle    0x14000eba1
   14000ec3e:	or     eax,0xffffffff
   14000ec41:	mov    r15,QWORD PTR [rsp]
   14000ec45:	mov    r13,QWORD PTR [rsp+0x48]
   14000ec4a:	mov    r12,QWORD PTR [rsp+0x40]
   14000ec4f:	mov    rdi,QWORD PTR [rsp+0x38]
   14000ec54:	add    rsp,0x8
   14000ec58:	pop    r14
   14000ec5a:	pop    rsi
   14000ec5b:	pop    rbp
   14000ec5c:	pop    rbx
   14000ec5d:	ret    
   14000ec5e:	mov    eax,r15d
   14000ec61:	jmp    0x14000ec41
   14000ec63:	int3   
   14000ec64:	int3   
   14000ec65:	int3   
   14000ec66:	int3   
   14000ec67:	int3   
   14000ec68:	int3   
   14000ec69:	int3   
   14000ec6a:	int3   
   14000ec6b:	int3   
   14000ec6c:	int3   
   14000ec6d:	int3   
   14000ec6e:	int3   
   14000ec6f:	int3   
   14000ec70:	rex push rdi
   14000ec72:	mov    eax,0x1040
   14000ec77:	call   0x140017430
   14000ec7c:	sub    rsp,rax
   14000ec7f:	mov    eax,edx
   14000ec81:	mov    rdi,rcx
   14000ec84:	shr    eax,0xb
   14000ec87:	not    eax
   14000ec89:	and    eax,0x1
   14000ec8c:	mov    DWORD PTR [rsp+0x1058],eax
   14000ec93:	mov    rax,QWORD PTR [rcx]
   14000ec96:	cmp    rax,0x16
   14000ec9a:	jae    0x14000eca7
   14000ec9c:	xor    eax,eax
   14000ec9e:	add    rsp,0x1040
   14000eca5:	pop    rdi
   14000eca6:	ret    
   14000eca7:	mov    QWORD PTR [rsp+0x1050],rbx
   14000ecaf:	mov    QWORD PTR [rsp+0x1060],rbp
   14000ecb7:	mov    QWORD PTR [rsp+0x1068],rsi
   14000ecbf:	mov    QWORD PTR [rsp+0x1038],r12
   14000ecc7:	add    rax,0xfffffffffffff000
   14000eccd:	xor    r12d,r12d
   14000ecd0:	test   rax,rax
   14000ecd3:	mov    rbp,r12
   14000ecd6:	cmovg  rbp,rax
   14000ecda:	mov    rax,QWORD PTR [rdi]
   14000ecdd:	sub    rax,rbp
   14000ece0:	cmp    rax,0x1000
   14000ece6:	jbe    0x14000ecef
   14000ece8:	mov    ebx,0x1000
   14000eced:	jmp    0x14000ecf3
   14000ecef:	mov    ebx,DWORD PTR [rdi]
   14000ecf1:	sub    ebx,ebp
   14000ecf3:	mov    rcx,QWORD PTR [rdi+0x58]
   14000ecf7:	lea    r8,[rsp+0x20]
   14000ecfc:	movsxd r9,ebx
   14000ecff:	mov    rdx,rbp
   14000ed02:	call   QWORD PTR [rdi+0x48]
   14000ed05:	mov    ecx,ebx
   14000ed07:	cmp    rax,rcx
   14000ed0a:	jne    0x14000f078
   14000ed10:	add    ebx,0xfffffffc
   14000ed13:	js     0x14000ed68
   14000ed15:	lea    rsi,[rsp+0x20]
   14000ed1a:	movsxd rax,ebx
   14000ed1d:	add    rsi,rax
   14000ed20:	cmp    DWORD PTR [rsi],0x6054b50
   14000ed26:	jne    0x14000ed61
   14000ed28:	mov    rcx,QWORD PTR [rdi+0x58]
   14000ed2c:	movsxd rdx,ebx
   14000ed2f:	lea    r8,[rsp+0x20]
   14000ed34:	add    rdx,rbp
   14000ed37:	mov    r9d,0x16
   14000ed3d:	call   QWORD PTR [rdi+0x48]
   14000ed40:	cmp    rax,0x16
   14000ed44:	jne    0x14000ed61
   14000ed46:	cmp    DWORD PTR [rsp+0x20],0x6054b50
   14000ed4e:	jne    0x14000ed61
   14000ed50:	movzx  edx,WORD PTR [rsp+0x2a]
   14000ed55:	movzx  eax,WORD PTR [rsp+0x28]
   14000ed5a:	mov    DWORD PTR [rdi+0x18],edx
   14000ed5d:	cmp    edx,eax
   14000ed5f:	je     0x14000ed7e
   14000ed61:	dec    rsi
   14000ed64:	dec    ebx
   14000ed66:	jns    0x14000ed20
   14000ed68:	cmp    rbp,0x16
   14000ed6c:	jl     0x14000f078
   14000ed72:	lea    rax,[rbp-0xffd]
   14000ed79:	jmp    0x14000ecd0
   14000ed7e:	movzx  ecx,WORD PTR [rsp+0x26]
   14000ed83:	movsxd rax,ebx
   14000ed86:	mov    QWORD PTR [rsp+0x1030],r13
   14000ed8e:	movzx  r13d,WORD PTR [rsp+0x24]
   14000ed94:	add    rbp,rax
   14000ed97:	mov    eax,ecx
   14000ed99:	or     eax,r13d
   14000ed9c:	je     0x14000eda9
   14000ed9e:	cmp    r13d,0x1
   14000eda2:	jne    0x14000edb4
   14000eda4:	cmp    ecx,r13d
   14000eda7:	jne    0x14000edb4
   14000eda9:	mov    ebx,DWORD PTR [rsp+0x2c]
   14000edad:	imul   eax,edx,0x2e
   14000edb0:	cmp    ebx,eax
   14000edb2:	jae    0x14000edbb
   14000edb4:	xor    eax,eax
   14000edb6:	jmp    0x14000f043
   14000edbb:	mov    r8,QWORD PTR [rdi]
   14000edbe:	sub    rbp,rbx
   14000edc1:	mov    QWORD PTR [rsp+0x1028],r14
   14000edc9:	lea    rax,[rbx+rbp*1]
   14000edcd:	cmp    rax,r8
   14000edd0:	ja     0x14000ede9
   14000edd2:	mov    eax,DWORD PTR [rsp+0x30]
   14000edd6:	mov    rcx,rbp
   14000edd9:	mov    QWORD PTR [rdi+0x10],rbp
   14000eddd:	sub    rcx,rax
   14000ede0:	mov    QWORD PTR [rdi+0x8],rcx
   14000ede4:	cmp    rcx,r8
   14000ede7:	jbe    0x14000edf0
   14000ede9:	xor    eax,eax
   14000edeb:	jmp    0x14000f03b
   14000edf0:	mov    QWORD PTR [rsp+0x1020],r15
   14000edf8:	test   edx,edx
   14000edfa:	je     0x14000f01c
   14000ee00:	mov    rsi,QWORD PTR [rdi+0x60]
   14000ee04:	cmp    rbx,QWORD PTR [rsi+0x10]
   14000ee08:	jbe    0x14000ee51
   14000ee0a:	cmp    DWORD PTR [rsi+0x18],r12d
   14000ee0e:	jne    0x14000ee2a
   14000ee10:	lea    rdx,[rip+0xcac9]        # 0x14001b8e0
   14000ee17:	lea    rcx,[rip+0xcfea]        # 0x14001be08
   14000ee1e:	mov    r8d,0xbb7
   14000ee24:	call   QWORD PTR [rip+0xa3ee]        # 0x140019218
   14000ee2a:	cmp    QWORD PTR [rsi+0x10],rbx
   14000ee2e:	jae    0x14000ee51
   14000ee30:	mov    r8d,DWORD PTR [rsi+0x18]
   14000ee34:	mov    rdx,QWORD PTR [rsi]
   14000ee37:	mov    rcx,QWORD PTR [rdi+0x40]
   14000ee3b:	mov    r9,rbx
   14000ee3e:	call   QWORD PTR [rdi+0x38]
   14000ee41:	test   rax,rax
   14000ee44:	je     0x14000f074
   14000ee4a:	mov    QWORD PTR [rsi],rax
   14000ee4d:	mov    QWORD PTR [rsi+0x10],rbx
   14000ee51:	mov    QWORD PTR [rsi+0x8],rbx
   14000ee55:	mov    rsi,QWORD PTR [rdi+0x60]
   14000ee59:	mov    r15d,DWORD PTR [rdi+0x18]
   14000ee5d:	cmp    r15,QWORD PTR [rsi+0x30]
   14000ee61:	jbe    0x14000eeac
   14000ee63:	cmp    DWORD PTR [rsi+0x38],r12d
   14000ee67:	jne    0x14000ee83
   14000ee69:	lea    rdx,[rip+0xca70]        # 0x14001b8e0
   14000ee70:	lea    rcx,[rip+0xcf91]        # 0x14001be08
   14000ee77:	mov    r8d,0xbb7
   14000ee7d:	call   QWORD PTR [rip+0xa395]        # 0x140019218
   14000ee83:	cmp    QWORD PTR [rsi+0x30],r15
   14000ee87:	jae    0x14000eeac
   14000ee89:	mov    r8d,DWORD PTR [rsi+0x38]
   14000ee8d:	mov    rdx,QWORD PTR [rsi+0x20]
   14000ee91:	mov    rcx,QWORD PTR [rdi+0x40]
   14000ee95:	mov    r9,r15
   14000ee98:	call   QWORD PTR [rdi+0x38]
   14000ee9b:	test   rax,rax
   14000ee9e:	je     0x14000f074
   14000eea4:	mov    QWORD PTR [rsi+0x20],rax
   14000eea8:	mov    QWORD PTR [rsi+0x30],r15
   14000eeac:	mov    QWORD PTR [rsi+0x28],r15
   14000eeb0:	mov    esi,DWORD PTR [rsp+0x1058]
   14000eeb7:	test   esi,esi
   14000eeb9:	je     0x14000ef1d
   14000eebb:	mov    rsi,QWORD PTR [rdi+0x60]
   14000eebf:	mov    r15d,DWORD PTR [rdi+0x18]
   14000eec3:	cmp    r15,QWORD PTR [rsi+0x50]
   14000eec7:	jbe    0x14000ef12
   14000eec9:	cmp    DWORD PTR [rsi+0x58],r12d
   14000eecd:	jne    0x14000eee9
   14000eecf:	lea    rdx,[rip+0xca0a]        # 0x14001b8e0
   14000eed6:	lea    rcx,[rip+0xcf2b]        # 0x14001be08
   14000eedd:	mov    r8d,0xbb7
   14000eee3:	call   QWORD PTR [rip+0xa32f]        # 0x140019218
   14000eee9:	cmp    QWORD PTR [rsi+0x50],r15
   14000eeed:	jae    0x14000ef12
   14000eeef:	mov    r8d,DWORD PTR [rsi+0x58]
   14000eef3:	mov    rdx,QWORD PTR [rsi+0x40]
   14000eef7:	mov    rcx,QWORD PTR [rdi+0x40]
   14000eefb:	mov    r9,r15
   14000eefe:	call   QWORD PTR [rdi+0x38]
   14000ef01:	test   rax,rax
   14000ef04:	je     0x14000f074
   14000ef0a:	mov    QWORD PTR [rsi+0x40],rax
   14000ef0e:	mov    QWORD PTR [rsi+0x50],r15
   14000ef12:	mov    QWORD PTR [rsi+0x48],r15
   14000ef16:	mov    esi,DWORD PTR [rsp+0x1058]
   14000ef1d:	mov    r8,QWORD PTR [rdi+0x60]
   14000ef21:	mov    rcx,QWORD PTR [rdi+0x58]
   14000ef25:	mov    r9,rbx
   14000ef28:	mov    r8,QWORD PTR [r8]
   14000ef2b:	mov    rdx,rbp
   14000ef2e:	call   QWORD PTR [rdi+0x48]
   14000ef31:	cmp    rax,rbx
   14000ef34:	jne    0x14000f074
   14000ef3a:	mov    rax,QWORD PTR [rdi+0x60]
   14000ef3e:	mov    r8,QWORD PTR [rax]
   14000ef41:	cmp    DWORD PTR [rdi+0x18],r12d
   14000ef45:	jbe    0x14000f01c
   14000ef4b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000ef50:	cmp    ebx,0x2e
   14000ef53:	jb     0x14000f074
   14000ef59:	cmp    DWORD PTR [r8],0x2014b50
   14000ef60:	jne    0x14000f074
   14000ef66:	mov    rdx,QWORD PTR [rdi+0x60]
   14000ef6a:	mov    eax,r12d
   14000ef6d:	mov    ecx,r8d
   14000ef70:	sub    ecx,DWORD PTR [rdx]
   14000ef72:	lea    r9,[rax*4+0x0]
   14000ef7a:	mov    rax,QWORD PTR [rdx+0x20]
   14000ef7e:	mov    DWORD PTR [r9+rax*1],ecx
   14000ef82:	test   esi,esi
   14000ef84:	je     0x14000ef92
   14000ef86:	mov    rax,QWORD PTR [rdi+0x60]
   14000ef8a:	mov    rcx,QWORD PTR [rax+0x40]
   14000ef8e:	mov    DWORD PTR [r9+rcx*1],r12d
   14000ef92:	cmp    DWORD PTR [r8+0xa],0x0
   14000ef97:	mov    eax,DWORD PTR [r8+0x14]
   14000ef9b:	mov    ecx,DWORD PTR [r8+0x18]
   14000ef9f:	jne    0x14000efa9
   14000efa1:	cmp    ecx,eax
   14000efa3:	jne    0x14000f074
   14000efa9:	test   ecx,ecx
   14000efab:	je     0x14000efb5
   14000efad:	test   eax,eax
   14000efaf:	je     0x14000f074
   14000efb5:	cmp    ecx,0xffffffff
   14000efb8:	je     0x14000f074
   14000efbe:	cmp    eax,0xffffffff
   14000efc1:	je     0x14000f074
   14000efc7:	movzx  ecx,WORD PTR [r8+0x22]
   14000efcc:	cmp    ecx,r13d
   14000efcf:	je     0x14000efda
   14000efd1:	cmp    ecx,0x1
   14000efd4:	jne    0x14000f074
   14000efda:	mov    ecx,DWORD PTR [r8+0x2a]
   14000efde:	add    rcx,0x1e
   14000efe2:	add    rcx,rax
   14000efe5:	cmp    rcx,QWORD PTR [rdi]
   14000efe8:	ja     0x14000f074
   14000efee:	movzx  ecx,WORD PTR [r8+0x20]
   14000eff3:	movzx  eax,WORD PTR [r8+0x1e]
   14000eff8:	movzx  edx,WORD PTR [r8+0x1c]
   14000effd:	add    ecx,eax
   14000efff:	add    edx,0x2e
   14000f002:	add    edx,ecx
   14000f004:	cmp    edx,ebx
   14000f006:	ja     0x14000f074
   14000f008:	mov    eax,edx
   14000f00a:	inc    r12d
   14000f00d:	sub    ebx,edx
   14000f00f:	add    r8,rax
   14000f012:	cmp    r12d,DWORD PTR [rdi+0x18]
   14000f016:	jb     0x14000ef50
   14000f01c:	cmp    DWORD PTR [rsp+0x1058],0x0
   14000f024:	je     0x14000f02e
   14000f026:	mov    rcx,rdi
   14000f029:	call   0x14000f080
   14000f02e:	mov    eax,0x1
   14000f033:	mov    r15,QWORD PTR [rsp+0x1020]
   14000f03b:	mov    r14,QWORD PTR [rsp+0x1028]
   14000f043:	mov    r13,QWORD PTR [rsp+0x1030]
   14000f04b:	mov    rsi,QWORD PTR [rsp+0x1068]
   14000f053:	mov    rbp,QWORD PTR [rsp+0x1060]
   14000f05b:	mov    rbx,QWORD PTR [rsp+0x1050]
   14000f063:	mov    r12,QWORD PTR [rsp+0x1038]
   14000f06b:	add    rsp,0x1040
   14000f072:	pop    rdi
   14000f073:	ret    
   14000f074:	xor    eax,eax
   14000f076:	jmp    0x14000f033
   14000f078:	xor    eax,eax
   14000f07a:	jmp    0x14000f04b
   14000f07c:	int3   
   14000f07d:	int3   
   14000f07e:	int3   
   14000f07f:	int3   
   14000f080:	rex push rbx
   14000f082:	push   rbp
   14000f083:	push   rsi
   14000f084:	push   rdi
   14000f085:	push   r12
   14000f087:	push   r13
   14000f089:	push   r14
   14000f08b:	push   r15
   14000f08d:	sub    rsp,0x18
   14000f091:	mov    rbp,QWORD PTR [rcx+0x60]
   14000f095:	movsxd r13,DWORD PTR [rcx+0x18]
   14000f099:	mov    r14,QWORD PTR [rbp+0x40]
   14000f09d:	lea    r12d,[r13-0x2]
   14000f0a1:	mov    QWORD PTR [rsp+0x78],rbp
   14000f0a6:	sar    r12d,1
   14000f0a9:	mov    QWORD PTR [rsp+0x70],r14
   14000f0ae:	mov    DWORD PTR [rsp+0x60],r12d
   14000f0b3:	js     0x14000f2b5
   14000f0b9:	lea    edx,[r12*2+0x1]
   14000f0c1:	movsxd r8,r12d
   14000f0c4:	mov    rcx,r13
   14000f0c7:	movsxd rax,edx
   14000f0ca:	mov    QWORD PTR [rsp+0x8],r8
   14000f0cf:	mov    DWORD PTR [rsp+0x68],edx
   14000f0d3:	mov    QWORD PTR [rsp],rax
   14000f0d7:	nop    WORD PTR [rax+rax*1+0x0]
   14000f0e0:	mov    r15d,edx
   14000f0e3:	mov    r14,rax
   14000f0e6:	cmp    rax,rcx
   14000f0e9:	jge    0x14000f288
   14000f0ef:	mov    r12,QWORD PTR [rsp+0x70]
   14000f0f4:	mov    rdi,r8
   14000f0f7:	nop    WORD PTR [rax+rax*1+0x0]
   14000f100:	lea    eax,[r15+0x1]
   14000f104:	cmp    eax,r13d
   14000f107:	jge    0x14000f1ae
   14000f10d:	mov    rcx,QWORD PTR [rbp+0x20]
   14000f111:	mov    rdx,QWORD PTR [rbp+0x0]
   14000f115:	mov    eax,DWORD PTR [r12+r14*4]
   14000f119:	mov    r8d,DWORD PTR [rcx+rax*4]
   14000f11d:	mov    eax,DWORD PTR [r12+r14*4+0x4]
   14000f122:	mov    r9d,DWORD PTR [rcx+rax*4]
   14000f126:	add    r8,rdx
   14000f129:	xor    cl,cl
   14000f12b:	movzx  r11d,WORD PTR [r8+0x1c]
   14000f130:	add    r9,rdx
   14000f133:	add    r8,0x2e
   14000f137:	movzx  ebx,WORD PTR [r9+0x1c]
   14000f13c:	xor    dl,dl
   14000f13e:	add    r9,0x2e
   14000f142:	mov    r10d,ebx
   14000f145:	cmp    r11d,ebx
   14000f148:	cmovb  r10d,r11d
   14000f14c:	add    r10,r8
   14000f14f:	cmp    r8,r10
   14000f152:	jae    0x14000f191
   14000f154:	nop    DWORD PTR [rax+0x0]
   14000f158:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f160:	movzx  ecx,BYTE PTR [r8]
   14000f164:	movzx  edx,cl
   14000f167:	lea    eax,[rcx-0x41]
   14000f16a:	cmp    al,0x19
   14000f16c:	ja     0x14000f171
   14000f16e:	add    edx,0x20
   14000f171:	movzx  ecx,BYTE PTR [r9]
   14000f175:	lea    eax,[rcx-0x41]
   14000f178:	cmp    al,0x19
   14000f17a:	ja     0x14000f17f
   14000f17c:	add    cl,0x20
   14000f17f:	cmp    dl,cl
   14000f181:	jne    0x14000f18e
   14000f183:	inc    r8
   14000f186:	inc    r9
   14000f189:	cmp    r8,r10
   14000f18c:	jb     0x14000f160
   14000f18e:	cmp    r8,r10
   14000f191:	jne    0x14000f19a
   14000f193:	xor    eax,eax
   14000f195:	cmp    r11d,ebx
   14000f198:	jmp    0x14000f19e
   14000f19a:	xor    eax,eax
   14000f19c:	cmp    dl,cl
   14000f19e:	setb   al
   14000f1a1:	test   eax,eax
   14000f1a3:	je     0x14000f1ae
   14000f1a5:	mov    eax,0x1
   14000f1aa:	mov    ecx,eax
   14000f1ac:	jmp    0x14000f1b2
   14000f1ae:	xor    eax,eax
   14000f1b0:	xor    ecx,ecx
   14000f1b2:	mov    esi,DWORD PTR [r12+rdi*4]
   14000f1b6:	add    r14,rcx
   14000f1b9:	mov    rcx,QWORD PTR [rbp+0x0]
   14000f1bd:	add    r15d,eax
   14000f1c0:	mov    rax,QWORD PTR [rbp+0x20]
   14000f1c4:	mov    ebp,DWORD PTR [r12+r14*4]
   14000f1c8:	mov    r9d,DWORD PTR [rax+rbp*4]
   14000f1cc:	mov    r8d,DWORD PTR [rax+rsi*4]
   14000f1d0:	xor    dl,dl
   14000f1d2:	add    r9,rcx
   14000f1d5:	add    r8,rcx
   14000f1d8:	xor    cl,cl
   14000f1da:	movzx  ebx,WORD PTR [r9+0x1c]
   14000f1df:	movzx  r11d,WORD PTR [r8+0x1c]
   14000f1e4:	add    r8,0x2e
   14000f1e8:	add    r9,0x2e
   14000f1ec:	mov    r10d,ebx
   14000f1ef:	cmp    r11d,ebx
   14000f1f2:	cmovb  r10d,r11d
   14000f1f6:	add    r10,r8
   14000f1f9:	cmp    r8,r10
   14000f1fc:	jae    0x14000f231
   14000f1fe:	xchg   ax,ax
   14000f200:	movzx  ecx,BYTE PTR [r8]
   14000f204:	movzx  edx,cl
   14000f207:	lea    eax,[rcx-0x41]
   14000f20a:	cmp    al,0x19
   14000f20c:	ja     0x14000f211
   14000f20e:	add    edx,0x20
   14000f211:	movzx  ecx,BYTE PTR [r9]
   14000f215:	lea    eax,[rcx-0x41]
   14000f218:	cmp    al,0x19
   14000f21a:	ja     0x14000f21f
   14000f21c:	add    cl,0x20
   14000f21f:	cmp    dl,cl
   14000f221:	jne    0x14000f22e
   14000f223:	inc    r8
   14000f226:	inc    r9
   14000f229:	cmp    r8,r10
   14000f22c:	jb     0x14000f200
   14000f22e:	cmp    r8,r10
   14000f231:	jne    0x14000f23a
   14000f233:	xor    eax,eax
   14000f235:	cmp    r11d,ebx
   14000f238:	jmp    0x14000f23e
   14000f23a:	xor    eax,eax
   14000f23c:	cmp    dl,cl
   14000f23e:	setb   al
   14000f241:	mov    rcx,r13
   14000f244:	test   eax,eax
   14000f246:	je     0x14000f271
   14000f248:	mov    DWORD PTR [r12+rdi*4],ebp
   14000f24c:	mov    rbp,QWORD PTR [rsp+0x78]
   14000f251:	mov    DWORD PTR [r12+r14*4],esi
   14000f255:	mov    rdi,r14
   14000f258:	lea    r14,[r14*2+0x1]
   14000f260:	lea    r15d,[r15*2+0x1]
   14000f268:	cmp    r14,r13
   14000f26b:	jl     0x14000f100
   14000f271:	mov    r12d,DWORD PTR [rsp+0x60]
   14000f276:	mov    rax,QWORD PTR [rsp]
   14000f27a:	mov    edx,DWORD PTR [rsp+0x68]
   14000f27e:	mov    r8,QWORD PTR [rsp+0x8]
   14000f283:	mov    rbp,QWORD PTR [rsp+0x78]
   14000f288:	dec    r12d
   14000f28b:	sub    edx,0x2
   14000f28e:	sub    rax,0x2
   14000f292:	dec    r8
   14000f295:	mov    DWORD PTR [rsp+0x60],r12d
   14000f29a:	mov    DWORD PTR [rsp+0x68],edx
   14000f29e:	mov    QWORD PTR [rsp],rax
   14000f2a2:	mov    QWORD PTR [rsp+0x8],r8
   14000f2a7:	test   r12d,r12d
   14000f2aa:	jns    0x14000f0e0
   14000f2b0:	mov    r14,QWORD PTR [rsp+0x70]
   14000f2b5:	dec    r13d
   14000f2b8:	movsxd r12,r13d
   14000f2bb:	test   r13d,r13d
   14000f2be:	jle    0x14000f482
   14000f2c4:	nop    DWORD PTR [rax+0x0]
   14000f2c8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f2d0:	mov    eax,DWORD PTR [r14]
   14000f2d3:	mov    ecx,DWORD PTR [r14+r12*4]
   14000f2d7:	mov    edi,0x1
   14000f2dc:	xor    esi,esi
   14000f2de:	mov    DWORD PTR [r14+r12*4],eax
   14000f2e2:	mov    r15d,edi
   14000f2e5:	mov    DWORD PTR [r14],ecx
   14000f2e8:	cmp    rdi,r12
   14000f2eb:	jge    0x14000f46e
   14000f2f1:	lea    eax,[r15+0x1]
   14000f2f5:	cmp    eax,r13d
   14000f2f8:	jge    0x14000f39e
   14000f2fe:	mov    rcx,QWORD PTR [rbp+0x20]
   14000f302:	mov    rdx,QWORD PTR [rbp+0x0]
   14000f306:	mov    eax,DWORD PTR [r14+rdi*4]
   14000f30a:	mov    r8d,DWORD PTR [rcx+rax*4]
   14000f30e:	mov    eax,DWORD PTR [r14+rdi*4+0x4]
   14000f313:	mov    r9d,DWORD PTR [rcx+rax*4]
   14000f317:	add    r8,rdx
   14000f31a:	xor    al,al
   14000f31c:	movzx  r11d,WORD PTR [r8+0x1c]
   14000f321:	add    r9,rdx
   14000f324:	add    r8,0x2e
   14000f328:	movzx  ebx,WORD PTR [r9+0x1c]
   14000f32d:	xor    dl,dl
   14000f32f:	add    r9,0x2e
   14000f333:	cmp    r11d,ebx
   14000f336:	mov    ecx,ebx
   14000f338:	cmovb  ecx,r11d
   14000f33c:	mov    r10d,ecx
   14000f33f:	add    r10,r8
   14000f342:	cmp    r8,r10
   14000f345:	jae    0x14000f381
   14000f347:	nop    WORD PTR [rax+rax*1+0x0]
   14000f350:	movzx  ecx,BYTE PTR [r8]
   14000f354:	movzx  edx,cl
   14000f357:	lea    eax,[rcx-0x41]
   14000f35a:	cmp    al,0x19
   14000f35c:	ja     0x14000f361
   14000f35e:	add    edx,0x20
   14000f361:	movzx  eax,BYTE PTR [r9]
   14000f365:	lea    ecx,[rax-0x41]
   14000f368:	cmp    cl,0x19
   14000f36b:	ja     0x14000f36f
   14000f36d:	add    al,0x20
   14000f36f:	cmp    dl,al
   14000f371:	jne    0x14000f37e
   14000f373:	inc    r8
   14000f376:	inc    r9
   14000f379:	cmp    r8,r10
   14000f37c:	jb     0x14000f350
   14000f37e:	cmp    r8,r10
   14000f381:	jne    0x14000f38a
   14000f383:	xor    ecx,ecx
   14000f385:	cmp    r11d,ebx
   14000f388:	jmp    0x14000f38e
   14000f38a:	xor    ecx,ecx
   14000f38c:	cmp    dl,al
   14000f38e:	setb   cl
   14000f391:	test   ecx,ecx
   14000f393:	je     0x14000f39e
   14000f395:	mov    eax,0x1
   14000f39a:	mov    ecx,eax
   14000f39c:	jmp    0x14000f3a2
   14000f39e:	xor    eax,eax
   14000f3a0:	xor    ecx,ecx
   14000f3a2:	mov    ebp,DWORD PTR [r14+rsi*4]
   14000f3a6:	add    rdi,rcx
   14000f3a9:	mov    rcx,QWORD PTR [rsp+0x78]
   14000f3ae:	mov    r14d,DWORD PTR [r14+rdi*4]
   14000f3b2:	add    r15d,eax
   14000f3b5:	mov    rax,QWORD PTR [rcx+0x20]
   14000f3b9:	mov    rcx,QWORD PTR [rcx]
   14000f3bc:	mov    r8d,DWORD PTR [rax+rbp*4]
   14000f3c0:	mov    r9d,DWORD PTR [rax+r14*4]
   14000f3c4:	add    r8,rcx
   14000f3c7:	add    r9,rcx
   14000f3ca:	xor    dl,dl
   14000f3cc:	movzx  r11d,WORD PTR [r8+0x1c]
   14000f3d1:	movzx  ebx,WORD PTR [r9+0x1c]
   14000f3d6:	add    r8,0x2e
   14000f3da:	xor    cl,cl
   14000f3dc:	add    r9,0x2e
   14000f3e0:	mov    r10d,ebx
   14000f3e3:	cmp    r11d,ebx
   14000f3e6:	cmovb  r10d,r11d
   14000f3ea:	add    r10,r8
   14000f3ed:	cmp    r8,r10
   14000f3f0:	jae    0x14000f423
   14000f3f2:	movzx  ecx,BYTE PTR [r8]
   14000f3f6:	movzx  edx,cl
   14000f3f9:	lea    eax,[rcx-0x41]
   14000f3fc:	cmp    al,0x19
   14000f3fe:	ja     0x14000f403
   14000f400:	add    edx,0x20
   14000f403:	movzx  ecx,BYTE PTR [r9]
   14000f407:	lea    eax,[rcx-0x41]
   14000f40a:	cmp    al,0x19
   14000f40c:	ja     0x14000f411
   14000f40e:	add    cl,0x20
   14000f411:	cmp    dl,cl
   14000f413:	jne    0x14000f420
   14000f415:	inc    r8
   14000f418:	inc    r9
   14000f41b:	cmp    r8,r10
   14000f41e:	jb     0x14000f3f2
   14000f420:	cmp    r8,r10
   14000f423:	jne    0x14000f42c
   14000f425:	xor    eax,eax
   14000f427:	cmp    r11d,ebx
   14000f42a:	jmp    0x14000f430
   14000f42c:	xor    eax,eax
   14000f42e:	cmp    dl,cl
   14000f430:	setb   al
   14000f433:	test   eax,eax
   14000f435:	je     0x14000f469
   14000f437:	mov    rax,QWORD PTR [rsp+0x70]
   14000f43c:	lea    r15d,[r15*2+0x1]
   14000f444:	mov    DWORD PTR [rax+rsi*4],r14d
   14000f448:	mov    DWORD PTR [rax+rdi*4],ebp
   14000f44b:	mov    rbp,QWORD PTR [rsp+0x78]
   14000f450:	mov    rsi,rdi
   14000f453:	lea    rdi,[rdi*2+0x1]
   14000f45b:	mov    r14,rax
   14000f45e:	cmp    rdi,r12
   14000f461:	jl     0x14000f2f1
   14000f467:	jmp    0x14000f46e
   14000f469:	mov    r14,QWORD PTR [rsp+0x70]
   14000f46e:	mov    rbp,QWORD PTR [rsp+0x78]
   14000f473:	dec    r12
   14000f476:	dec    r13d
   14000f479:	test   r12,r12
   14000f47c:	jg     0x14000f2d0
   14000f482:	add    rsp,0x18
   14000f486:	pop    r15
   14000f488:	pop    r14
   14000f48a:	pop    r13
   14000f48c:	pop    r12
   14000f48e:	pop    rdi
   14000f48f:	pop    rsi
   14000f490:	pop    rbp
   14000f491:	pop    rbx
   14000f492:	ret    
   14000f493:	int3   
   14000f494:	int3   
   14000f495:	int3   
   14000f496:	int3   
   14000f497:	int3   
   14000f498:	int3   
   14000f499:	int3   
   14000f49a:	int3   
   14000f49b:	int3   
   14000f49c:	int3   
   14000f49d:	int3   
   14000f49e:	int3   
   14000f49f:	int3   
   14000f4a0:	sub    rsp,0x28
   14000f4a4:	mov    r10d,r8d
   14000f4a7:	mov    r11,rcx
   14000f4aa:	bt     r9d,0x8
   14000f4af:	jae    0x14000f4ca
   14000f4b1:	mov    r8d,r10d
   14000f4b4:	call   0x140017340
   14000f4b9:	xor    r8d,r8d
   14000f4bc:	test   eax,eax
   14000f4be:	sete   r8b
   14000f4c2:	mov    eax,r8d
   14000f4c5:	add    rsp,0x28
   14000f4c9:	ret    
   14000f4ca:	xor    r8d,r8d
   14000f4cd:	test   r10d,r10d
   14000f4d0:	je     0x14000f514
   14000f4d2:	sub    r11,rdx
   14000f4d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000f4e0:	movzx  ecx,BYTE PTR [r11+rdx*1]
   14000f4e5:	lea    eax,[rcx-0x41]
   14000f4e8:	movsx  ecx,cl
   14000f4eb:	cmp    al,0x19
   14000f4ed:	ja     0x14000f4f2
   14000f4ef:	add    ecx,0x20
   14000f4f2:	movzx  r9d,BYTE PTR [rdx]
   14000f4f6:	lea    eax,[r9-0x41]
   14000f4fa:	cmp    al,0x19
   14000f4fc:	movsx  eax,r9b
   14000f500:	ja     0x14000f505
   14000f502:	add    eax,0x20
   14000f505:	cmp    ecx,eax
   14000f507:	jne    0x14000f51e
   14000f509:	inc    r8d
   14000f50c:	inc    rdx
   14000f50f:	cmp    r8d,r10d
   14000f512:	jb     0x14000f4e0
   14000f514:	mov    eax,0x1
   14000f519:	add    rsp,0x28
   14000f51d:	ret    
   14000f51e:	xor    eax,eax
   14000f520:	add    rsp,0x28
   14000f524:	ret    
   14000f525:	int3   
   14000f526:	int3   
   14000f527:	int3   
   14000f528:	int3   
   14000f529:	int3   
   14000f52a:	int3   
   14000f52b:	int3   
   14000f52c:	int3   
   14000f52d:	int3   
   14000f52e:	int3   
   14000f52f:	int3   
   14000f530:	sub    rsp,0x38
   14000f534:	mov    QWORD PTR [rsp+0x20],rdx
   14000f539:	lea    rdx,[rsp+0x20]
   14000f53e:	mov    QWORD PTR [rsp+0x28],r8
   14000f543:	call   QWORD PTR [rip+0x9dff]        # 0x140019348
   14000f549:	xor    ecx,ecx
   14000f54b:	test   eax,eax
   14000f54d:	sete   cl
   14000f550:	mov    eax,ecx
   14000f552:	add    rsp,0x38
   14000f556:	ret    
   14000f557:	int3   
   14000f558:	int3   
   14000f559:	int3   
   14000f55a:	int3   
   14000f55b:	int3   
   14000f55c:	int3   
   14000f55d:	int3   
   14000f55e:	int3   
   14000f55f:	int3   
   14000f560:	mov    QWORD PTR [rsp+0x10],rbx
   14000f565:	mov    QWORD PTR [rsp+0x8],rcx
   14000f56a:	push   rdi
   14000f56b:	sub    rsp,0x50
   14000f56f:	mov    rdi,rdx
   14000f572:	lea    rcx,[rsp+0x20]
   14000f577:	lea    rdx,[rsp+0x60]
   14000f57c:	mov    rbx,r8
   14000f57f:	call   QWORD PTR [rip+0x9d83]        # 0x140019308
   14000f585:	test   eax,eax
   14000f587:	je     0x14000f59c
   14000f589:	xor    eax,eax
   14000f58b:	mov    WORD PTR [rbx],ax
   14000f58e:	mov    WORD PTR [rdi],ax
   14000f591:	mov    rbx,QWORD PTR [rsp+0x68]
   14000f596:	add    rsp,0x50
   14000f59a:	pop    rdi
   14000f59b:	ret    
   14000f59c:	movzx  ecx,WORD PTR [rsp+0x28]
   14000f5a1:	mov    eax,DWORD PTR [rsp+0x20]
   14000f5a5:	sar    eax,1
   14000f5a7:	shl    cx,0x6
   14000f5ab:	add    cx,WORD PTR [rsp+0x24]
   14000f5b0:	shl    cx,0x5
   14000f5b4:	add    cx,ax
   14000f5b7:	movzx  eax,WORD PTR [rsp+0x34]
   14000f5bc:	shl    ax,0x4
   14000f5c0:	mov    WORD PTR [rdi],cx
   14000f5c3:	mov    ecx,0x301
   14000f5c8:	add    ax,WORD PTR [rsp+0x30]
   14000f5cd:	add    ax,cx
   14000f5d0:	shl    ax,0x5
   14000f5d4:	add    ax,WORD PTR [rsp+0x2c]
   14000f5d9:	mov    WORD PTR [rbx],ax
   14000f5dc:	mov    rbx,QWORD PTR [rsp+0x68]
   14000f5e1:	add    rsp,0x50
   14000f5e5:	pop    rdi
   14000f5e6:	ret    
   14000f5e7:	int3   
   14000f5e8:	int3   
   14000f5e9:	int3   
   14000f5ea:	int3   
   14000f5eb:	int3   
   14000f5ec:	int3   
   14000f5ed:	int3   
   14000f5ee:	int3   
   14000f5ef:	int3   
   14000f5f0:	mov    QWORD PTR [rsp+0x20],r9
   14000f5f5:	mov    QWORD PTR [rsp+0x10],rdx
   14000f5fa:	push   rbp
   14000f5fb:	push   rbx
   14000f5fc:	push   rsi
   14000f5fd:	push   r12
   14000f5ff:	push   r14
   14000f601:	lea    rbp,[rsp-0x40]
   14000f606:	sub    rsp,0x140
   14000f60d:	xor    r12d,r12d
   14000f610:	mov    rbx,rcx
   14000f613:	mov    r14,r8
   14000f616:	mov    r8,QWORD PTR [rcx]
   14000f619:	movzx  eax,r12w
   14000f61d:	mov    ecx,0x6
   14000f622:	mov    DWORD PTR [rbp-0x80],eax
   14000f625:	mov    eax,DWORD PTR [rbp+0x98]
   14000f62b:	mov    r10,r9
   14000f62e:	test   eax,eax
   14000f630:	mov    DWORD PTR [rbp-0x7c],r12d
   14000f634:	mov    QWORD PTR [rbp-0x50],r8
   14000f638:	cmovs  eax,ecx
   14000f63b:	mov    QWORD PTR [rbp-0x40],r8
   14000f63f:	mov    QWORD PTR [rbp-0x48],r12
   14000f643:	mov    esi,eax
   14000f645:	and    esi,0xf
   14000f648:	cmp    QWORD PTR [rbx+0x60],r12
   14000f64c:	je     0x14000f677
   14000f64e:	cmp    DWORD PTR [rbx+0x1c],0x2
   14000f652:	jne    0x14000f677
   14000f654:	test   rdx,rdx
   14000f657:	je     0x14000f677
   14000f659:	movzx  r9d,WORD PTR [rbp+0x90]
   14000f661:	test   r9w,r9w
   14000f665:	je     0x14000f66c
   14000f667:	test   r10,r10
   14000f66a:	je     0x14000f677
   14000f66c:	cmp    esi,0xa
   14000f66f:	ja     0x14000f677
   14000f671:	bt     eax,0xa
   14000f675:	jae    0x14000f688
   14000f677:	xor    eax,eax
   14000f679:	add    rsp,0x140
   14000f680:	pop    r14
   14000f682:	pop    r12
   14000f684:	pop    rsi
   14000f685:	pop    rbx
   14000f686:	pop    rbp
   14000f687:	ret    
   14000f688:	movzx  eax,BYTE PTR [rdx]
   14000f68b:	mov    rcx,rdx
   14000f68e:	cmp    al,0x2f
   14000f690:	je     0x14000f677
   14000f692:	test   al,al
   14000f694:	je     0x14000f6a9
   14000f696:	cmp    al,0x5c
   14000f698:	je     0x14000f677
   14000f69a:	cmp    al,0x3a
   14000f69c:	je     0x14000f677
   14000f69e:	movzx  eax,BYTE PTR [rcx+0x1]
   14000f6a2:	inc    rcx
   14000f6a5:	test   al,al
   14000f6a7:	jne    0x14000f696
   14000f6a9:	mov    QWORD PTR [rsp+0x138],r13
   14000f6b1:	or     r13,0xffffffffffffffff
   14000f6b5:	inc    r13
   14000f6b8:	cmp    BYTE PTR [rdx+r13*1],r12b
   14000f6bc:	jne    0x14000f6b5
   14000f6be:	cmp    r13,0xffff
   14000f6c5:	jbe    0x14000f6ce
   14000f6c7:	xor    eax,eax
   14000f6c9:	jmp    0x14000f987
   14000f6ce:	mov    QWORD PTR [rsp+0x180],rdi
   14000f6d6:	mov    edi,DWORD PTR [rbx+0x20]
   14000f6d9:	test   edi,edi
   14000f6db:	jne    0x14000f6e2
   14000f6dd:	mov    edi,r12d
   14000f6e0:	jmp    0x14000f6ee
   14000f6e2:	lea    ecx,[rdi-0x1]
   14000f6e5:	mov    eax,ecx
   14000f6e7:	and    eax,r8d
   14000f6ea:	sub    edi,eax
   14000f6ec:	and    edi,ecx
   14000f6ee:	cmp    DWORD PTR [rbx+0x18],0xffff
   14000f6f5:	mov    QWORD PTR [rsp+0x130],r15
   14000f6fd:	je     0x14000f975
   14000f703:	movzx  eax,r9w
   14000f707:	mov    r15d,edi
   14000f70a:	mov    ecx,0xffffffff
   14000f70f:	add    rax,0x4c
   14000f713:	add    rax,r15
   14000f716:	add    rax,r8
   14000f719:	add    rax,r13
   14000f71c:	cmp    rax,rcx
   14000f71f:	ja     0x14000f975
   14000f725:	lea    rdx,[rbp+0x0]
   14000f729:	mov    rcx,r14
   14000f72c:	call   QWORD PTR [rip+0x9c0e]        # 0x140019340
   14000f732:	test   eax,eax
   14000f734:	jne    0x14000f975
   14000f73a:	mov    rax,QWORD PTR [rbp+0x20]
   14000f73e:	lea    rdx,[rbp+0x70]
   14000f742:	lea    rcx,[rbp-0x28]
   14000f746:	mov    QWORD PTR [rbp+0x70],rax
   14000f74a:	call   QWORD PTR [rip+0x9bb8]        # 0x140019308
   14000f750:	test   eax,eax
   14000f752:	je     0x14000f763
   14000f754:	mov    WORD PTR [rbp+0x70],r12w
   14000f759:	mov    WORD PTR [rbp+0x98],r12w
   14000f761:	jmp    0x14000f7ac
   14000f763:	movzx  r12d,WORD PTR [rbp-0x14]
   14000f768:	movzx  ecx,WORD PTR [rbp-0x20]
   14000f76c:	mov    eax,DWORD PTR [rbp-0x28]
   14000f76f:	shl    r12w,0x4
   14000f774:	shl    cx,0x6
   14000f778:	sar    eax,1
   14000f77a:	add    r12w,WORD PTR [rbp-0x18]
   14000f77f:	add    cx,WORD PTR [rbp-0x24]
   14000f783:	shl    cx,0x5
   14000f787:	add    cx,ax
   14000f78a:	mov    eax,0x301
   14000f78f:	add    r12w,ax
   14000f793:	mov    WORD PTR [rbp+0x98],cx
   14000f79a:	shl    r12w,0x5
   14000f79f:	add    r12w,WORD PTR [rbp-0x1c]
   14000f7a4:	mov    WORD PTR [rbp+0x70],r12w
   14000f7a9:	xor    r12d,r12d
   14000f7ac:	lea    r8,[rip+0xc685]        # 0x14001be38
   14000f7b3:	lea    rcx,[rbp-0x30]
   14000f7b7:	mov    rdx,r14
   14000f7ba:	mov    QWORD PTR [rbp-0x30],r12
   14000f7be:	call   QWORD PTR [rip+0x9b5c]        # 0x140019320
   14000f7c4:	mov    r14,QWORD PTR [rbp-0x30]
   14000f7c8:	test   r14,r14
   14000f7cb:	je     0x14000f975
   14000f7d1:	xor    edx,edx
   14000f7d3:	mov    rcx,r14
   14000f7d6:	lea    r8d,[rdx+0x2]
   14000f7da:	call   QWORD PTR [rip+0x9a50]        # 0x140019230
   14000f7e0:	mov    rcx,r14
   14000f7e3:	call   QWORD PTR [rip+0x9b4f]        # 0x140019338
   14000f7e9:	xor    r8d,r8d
   14000f7ec:	xor    edx,edx
   14000f7ee:	mov    rcx,r14
   14000f7f1:	mov    r12,rax
   14000f7f4:	mov    QWORD PTR [rbp-0x58],rax
   14000f7f8:	call   QWORD PTR [rip+0x9a32]        # 0x140019230
   14000f7fe:	mov    eax,0xffffffff
   14000f803:	cmp    r12,rax
   14000f806:	ja     0x14000f96c
   14000f80c:	lea    r8d,[rdi+0x1e]
   14000f810:	mov    rdi,QWORD PTR [rbp-0x40]
   14000f814:	mov    eax,0x0
   14000f819:	cmp    r12,0x3
   14000f81d:	mov    rcx,rbx
   14000f820:	mov    rdx,rdi
   14000f823:	cmovbe esi,eax
   14000f826:	mov    DWORD PTR [rbp-0x38],esi
   14000f829:	call   0x140011450
   14000f82e:	test   eax,eax
   14000f830:	je     0x14000f96c
   14000f836:	mov    eax,DWORD PTR [rbx+0x20]
   14000f839:	mov    rdx,rdi
   14000f83c:	add    rdx,r15
   14000f83f:	mov    QWORD PTR [rbp-0x50],rdx
   14000f843:	test   eax,eax
   14000f845:	je     0x14000f869
   14000f847:	lea    ecx,[rax-0x1]
   14000f84a:	test   rdx,rcx
   14000f84d:	je     0x14000f869
   14000f84f:	lea    rdx,[rip+0xc08a]        # 0x14001b8e0
   14000f856:	lea    rcx,[rip+0xc5f3]        # 0x14001be50
   14000f85d:	mov    r8d,0x1180
   14000f863:	call   QWORD PTR [rip+0x99af]        # 0x140019218
   14000f869:	mov    r8,QWORD PTR [rbp+0x78]
   14000f86d:	mov    rcx,QWORD PTR [rbx+0x58]
   14000f871:	xor    eax,eax
   14000f873:	lea    r12,[rdi+0x1e]
   14000f877:	mov    r9,r13
   14000f87a:	mov    QWORD PTR [rbp-0x78],rax
   14000f87e:	add    r12,r15
   14000f881:	mov    QWORD PTR [rbp-0x70],rax
   14000f885:	mov    QWORD PTR [rbp-0x68],rax
   14000f889:	mov    rdx,r12
   14000f88c:	mov    DWORD PTR [rbp-0x60],eax
   14000f88f:	mov    WORD PTR [rbp-0x5c],ax
   14000f893:	call   QWORD PTR [rbx+0x50]
   14000f896:	cmp    rax,r13
   14000f899:	jne    0x14000f96c
   14000f89f:	mov    r15,QWORD PTR [rbp-0x58]
   14000f8a3:	add    r12,r13
   14000f8a6:	test   r15,r15
   14000f8a9:	je     0x14000fae2
   14000f8af:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f8b3:	mov    edx,0x1
   14000f8b8:	mov    r8d,0x10000
   14000f8be:	call   QWORD PTR [rbx+0x28]
   14000f8c1:	mov    rsi,rax
   14000f8c4:	test   rax,rax
   14000f8c7:	je     0x14000f96c
   14000f8cd:	mov    edi,DWORD PTR [rbp-0x38]
   14000f8d0:	test   edi,edi
   14000f8d2:	jne    0x14000f944
   14000f8d4:	nop    DWORD PTR [rax+0x0]
   14000f8d8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000f8e0:	mov    ecx,0x10000
   14000f8e5:	mov    eax,r15d
   14000f8e8:	mov    r9,r14
   14000f8eb:	cmp    r15,rcx
   14000f8ee:	mov    edx,0x1
   14000f8f3:	cmova  eax,ecx
   14000f8f6:	mov    rcx,rsi
   14000f8f9:	mov    r8d,eax
   14000f8fc:	mov    edi,eax
   14000f8fe:	call   QWORD PTR [rip+0x9a24]        # 0x140019328
   14000f904:	cmp    rax,rdi
   14000f907:	jne    0x14000f962
   14000f909:	mov    rcx,QWORD PTR [rbx+0x58]
   14000f90d:	mov    r9d,edi
   14000f910:	mov    r8,rsi
   14000f913:	mov    rdx,r12
   14000f916:	call   QWORD PTR [rbx+0x50]
   14000f919:	cmp    rax,rdi
   14000f91c:	jne    0x14000f962
   14000f91e:	mov    ecx,DWORD PTR [rbp-0x7c]
   14000f921:	mov    r8d,edi
   14000f924:	mov    rdx,rsi
   14000f927:	call   0x14000c0c0
   14000f92c:	add    r12,rdi
   14000f92f:	mov    DWORD PTR [rbp-0x7c],eax
   14000f932:	sub    r15,rdi
   14000f935:	jne    0x14000f8e0
   14000f937:	mov    r15,QWORD PTR [rbp-0x58]
   14000f93b:	mov    QWORD PTR [rbp-0x48],r15
   14000f93f:	jmp    0x14000fad8
   14000f944:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f948:	xor    eax,eax
   14000f94a:	mov    r8d,0x4df78
   14000f950:	lea    edx,[rax+0x1]
   14000f953:	mov    DWORD PTR [rbp-0x80],eax
   14000f956:	call   QWORD PTR [rbx+0x28]
   14000f959:	mov    QWORD PTR [rbp-0x40],rax
   14000f95d:	test   rax,rax
   14000f960:	jne    0x14000f99e
   14000f962:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f966:	mov    rdx,rsi
   14000f969:	call   QWORD PTR [rbx+0x30]
   14000f96c:	mov    rcx,r14
   14000f96f:	call   QWORD PTR [rip+0x988b]        # 0x140019200
   14000f975:	xor    eax,eax
   14000f977:	mov    r15,QWORD PTR [rsp+0x130]
   14000f97f:	mov    rdi,QWORD PTR [rsp+0x180]
   14000f987:	mov    r13,QWORD PTR [rsp+0x138]
   14000f98f:	add    rsp,0x140
   14000f996:	pop    r14
   14000f998:	pop    r12
   14000f99a:	pop    rsi
   14000f99b:	pop    rbx
   14000f99c:	pop    rbp
   14000f99d:	ret    
   14000f99e:	xor    edx,edx
   14000f9a0:	mov    QWORD PTR [rbp-0x28],rbx
   14000f9a4:	mov    QWORD PTR [rbp-0x20],r12
   14000f9a8:	mov    QWORD PTR [rbp-0x18],rdx
   14000f9ac:	test   edi,edi
   14000f9ae:	js     0x14000f9be
   14000f9b0:	mov    ecx,0xa
   14000f9b5:	mov    eax,edi
   14000f9b7:	cmp    edi,ecx
   14000f9b9:	cmovg  eax,ecx
   14000f9bc:	jmp    0x14000f9c3
   14000f9be:	mov    eax,0x6
   14000f9c3:	mov    r12,QWORD PTR [rbp-0x40]
   14000f9c7:	movsxd rcx,eax
   14000f9ca:	mov    eax,edx
   14000f9cc:	lea    r8,[rip+0xb3bd]        # 0x14001ad90
   14000f9d3:	mov    edx,0x4000
   14000f9d8:	cmp    edi,0x3
   14000f9db:	mov    r9d,DWORD PTR [r8+rcx*4]
   14000f9df:	cmovle eax,edx
   14000f9e2:	lea    r8,[rbp-0x28]
   14000f9e6:	lea    rdx,[rip+0xd93]        # 0x140010780
   14000f9ed:	mov    rcx,r12
   14000f9f0:	or     r9d,eax
   14000f9f3:	call   0x140013bd0
   14000f9f8:	test   eax,eax
   14000f9fa:	je     0x14000fa15
   14000f9fc:	mov    rcx,QWORD PTR [rbx+0x40]
   14000fa00:	mov    rdx,r12
   14000fa03:	call   QWORD PTR [rbx+0x30]
   14000fa06:	mov    rcx,QWORD PTR [rbx+0x40]
   14000fa0a:	mov    rdx,rsi
   14000fa0d:	call   QWORD PTR [rbx+0x30]
   14000fa10:	jmp    0x14000f96c
   14000fa15:	mov    rcx,QWORD PTR [rbp-0x58]
   14000fa19:	mov    eax,0x10000
   14000fa1e:	mov    r9,r14
   14000fa21:	cmp    rcx,rax
   14000fa24:	mov    edx,0x1
   14000fa29:	cmovb  eax,ecx
   14000fa2c:	mov    rcx,rsi
   14000fa2f:	mov    r8d,eax
   14000fa32:	mov    edi,eax
   14000fa34:	call   QWORD PTR [rip+0x98ee]        # 0x140019328
   14000fa3a:	cmp    rax,rdi
   14000fa3d:	jne    0x14000faac
   14000fa3f:	nop
   14000fa40:	mov    ecx,DWORD PTR [rbp-0x7c]
   14000fa43:	mov    r8,rdi
   14000fa46:	mov    rdx,rsi
   14000fa49:	call   0x14000c0c0
   14000fa4e:	mov    r9d,0x4
   14000fa54:	sub    r15,rdi
   14000fa57:	mov    DWORD PTR [rbp-0x7c],eax
   14000fa5a:	mov    eax,0x0
   14000fa5f:	mov    r8,rdi
   14000fa62:	mov    rdx,rsi
   14000fa65:	mov    rcx,r12
   14000fa68:	cmovne r9d,eax
   14000fa6c:	call   0x1400118f0
   14000fa71:	cmp    eax,0x1
   14000fa74:	je     0x14000faa5
   14000fa76:	test   eax,eax
   14000fa78:	jne    0x14000faac
   14000fa7a:	mov    ecx,0x10000
   14000fa7f:	mov    r9,r14
   14000fa82:	mov    edx,0x1
   14000fa87:	mov    eax,ecx
   14000fa89:	cmp    r15,rcx
   14000fa8c:	mov    rcx,rsi
   14000fa8f:	cmovb  eax,r15d
   14000fa93:	mov    r8d,eax
   14000fa96:	mov    edi,eax
   14000fa98:	call   QWORD PTR [rip+0x988a]        # 0x140019328
   14000fa9e:	cmp    rax,rdi
   14000faa1:	je     0x14000fa40
   14000faa3:	jmp    0x14000faac
   14000faa5:	mov    DWORD PTR [rbp-0x80],0x1
   14000faac:	mov    rcx,QWORD PTR [rbx+0x40]
   14000fab0:	mov    rdx,r12
   14000fab3:	call   QWORD PTR [rbx+0x30]
   14000fab6:	cmp    DWORD PTR [rbp-0x80],0x0
   14000faba:	je     0x14000fa06
   14000fac0:	mov    rax,QWORD PTR [rbp-0x18]
   14000fac4:	mov    r12,QWORD PTR [rbp-0x20]
   14000fac8:	mov    r15,QWORD PTR [rbp-0x58]
   14000facc:	mov    QWORD PTR [rbp-0x48],rax
   14000fad0:	mov    eax,0x8
   14000fad5:	mov    DWORD PTR [rbp-0x80],eax
   14000fad8:	mov    rcx,QWORD PTR [rbx+0x40]
   14000fadc:	mov    rdx,rsi
   14000fadf:	call   QWORD PTR [rbx+0x30]
   14000fae2:	mov    rcx,r14
   14000fae5:	call   QWORD PTR [rip+0x9715]        # 0x140019200
   14000faeb:	mov    rsi,QWORD PTR [rbp-0x48]
   14000faef:	mov    eax,0xffffffff
   14000faf4:	cmp    rsi,rax
   14000faf7:	ja     0x14000f975
   14000fafd:	cmp    r12,rax
   14000fb00:	ja     0x14000f975
   14000fb06:	mov    edx,DWORD PTR [rbp-0x80]
   14000fb09:	xor    eax,eax
   14000fb0b:	movzx  r14d,WORD PTR [rbp+0x98]
   14000fb13:	mov    QWORD PTR [rbp-0x70],rax
   14000fb17:	mov    QWORD PTR [rbp-0x68],rax
   14000fb1b:	movzx  edi,WORD PTR [rbp+0x70]
   14000fb1f:	mov    QWORD PTR [rbp-0x78],rax
   14000fb23:	mov    DWORD PTR [rbp-0x60],eax
   14000fb26:	mov    WORD PTR [rbp-0x5c],ax
   14000fb2a:	movzx  eax,dx
   14000fb2d:	mov    BYTE PTR [rbp-0x70],dl
   14000fb30:	lea    r8,[rbp-0x78]
   14000fb34:	neg    ax
   14000fb37:	movzx  eax,dx
   14000fb3a:	mov    rdx,QWORD PTR [rbp-0x50]
   14000fb3e:	sbb    cx,cx
   14000fb41:	shr    ax,0x8
   14000fb45:	mov    r9d,0x1e
   14000fb4b:	mov    BYTE PTR [rbp-0x6f],al
   14000fb4e:	and    cx,0x14
   14000fb52:	movzx  eax,r14w
   14000fb56:	shr    ax,0x8
   14000fb5a:	mov    BYTE PTR [rbp-0x74],cl
   14000fb5d:	shr    cx,0x8
   14000fb61:	mov    BYTE PTR [rbp-0x6d],al
   14000fb64:	movzx  eax,di
   14000fb67:	mov    BYTE PTR [rbp-0x73],cl
   14000fb6a:	mov    ecx,DWORD PTR [rbp-0x7c]
   14000fb6d:	shr    ax,0x8
   14000fb71:	mov    DWORD PTR [rbp-0x78],0x4034b50
   14000fb78:	mov    BYTE PTR [rbp-0x6b],al
   14000fb7b:	mov    eax,ecx
   14000fb7d:	mov    BYTE PTR [rbp-0x6a],cl
   14000fb80:	shr    eax,0x8
   14000fb83:	mov    WORD PTR [rbp-0x72],0x0
   14000fb89:	mov    BYTE PTR [rbp-0x6e],r14b
   14000fb8d:	mov    BYTE PTR [rbp-0x69],al
   14000fb90:	mov    eax,ecx
   14000fb92:	mov    BYTE PTR [rbp-0x6c],dil
   14000fb96:	shr    eax,0x10
   14000fb99:	mov    BYTE PTR [rbp-0x66],sil
   14000fb9d:	mov    BYTE PTR [rbp-0x62],r15b
   14000fba1:	mov    BYTE PTR [rbp-0x68],al
   14000fba4:	mov    eax,ecx
   14000fba6:	mov    rcx,QWORD PTR [rbx+0x58]
   14000fbaa:	shr    eax,0x18
   14000fbad:	mov    BYTE PTR [rbp-0x5e],r13b
   14000fbb1:	mov    WORD PTR [rbp-0x5c],0x0
   14000fbb7:	mov    BYTE PTR [rbp-0x67],al
   14000fbba:	mov    eax,esi
   14000fbbc:	shr    eax,0x8
   14000fbbf:	mov    BYTE PTR [rbp-0x65],al
   14000fbc2:	mov    eax,esi
   14000fbc4:	shr    eax,0x10
   14000fbc7:	mov    BYTE PTR [rbp-0x64],al
   14000fbca:	mov    eax,esi
   14000fbcc:	shr    eax,0x18
   14000fbcf:	mov    BYTE PTR [rbp-0x63],al
   14000fbd2:	mov    eax,r15d
   14000fbd5:	shr    eax,0x8
   14000fbd8:	mov    BYTE PTR [rbp-0x61],al
   14000fbdb:	mov    eax,r15d
   14000fbde:	shr    eax,0x10
   14000fbe1:	mov    BYTE PTR [rbp-0x60],al
   14000fbe4:	mov    eax,r15d
   14000fbe7:	shr    eax,0x18
   14000fbea:	mov    BYTE PTR [rbp-0x5f],al
   14000fbed:	movzx  eax,r13w
   14000fbf1:	shr    ax,0x8
   14000fbf5:	mov    BYTE PTR [rbp-0x5d],al
   14000fbf8:	call   QWORD PTR [rbx+0x50]
   14000fbfb:	cmp    rax,0x1e
   14000fbff:	jne    0x14000f975
   14000fc05:	mov    rax,QWORD PTR [rbp-0x50]
   14000fc09:	mov    rdx,QWORD PTR [rbp+0x78]
   14000fc0d:	xor    ecx,ecx
   14000fc0f:	mov    DWORD PTR [rsp+0x78],ecx
   14000fc13:	mov    QWORD PTR [rsp+0x70],rax
   14000fc18:	mov    eax,DWORD PTR [rbp-0x80]
   14000fc1b:	mov    WORD PTR [rsp+0x68],di
   14000fc20:	mov    WORD PTR [rsp+0x60],r14w
   14000fc26:	mov    WORD PTR [rsp+0x58],cx
   14000fc2b:	mov    WORD PTR [rsp+0x50],ax
   14000fc30:	mov    eax,DWORD PTR [rbp-0x7c]
   14000fc33:	xor    r9d,r9d
   14000fc36:	mov    DWORD PTR [rsp+0x48],eax
   14000fc3a:	movzx  eax,WORD PTR [rbp+0x90]
   14000fc41:	mov    QWORD PTR [rsp+0x40],rsi
   14000fc46:	mov    QWORD PTR [rsp+0x38],r15
   14000fc4b:	mov    WORD PTR [rsp+0x30],ax
   14000fc50:	mov    rax,QWORD PTR [rbp+0x88]
   14000fc57:	mov    QWORD PTR [rsp+0x28],rax
   14000fc5c:	mov    WORD PTR [rsp+0x20],cx
   14000fc61:	mov    rcx,rbx
   14000fc64:	movzx  r8d,r13w
   14000fc68:	call   0x1400107e0
   14000fc6d:	test   eax,eax
   14000fc6f:	je     0x14000f975
   14000fc75:	inc    DWORD PTR [rbx+0x18]
   14000fc78:	mov    QWORD PTR [rbx],r12
   14000fc7b:	mov    eax,0x1
   14000fc80:	jmp    0x14000f977
   14000fc85:	int3   
   14000fc86:	int3   
   14000fc87:	int3   
   14000fc88:	int3   
   14000fc89:	int3   
   14000fc8a:	int3   
   14000fc8b:	int3   
   14000fc8c:	int3   
   14000fc8d:	int3   
   14000fc8e:	int3   
   14000fc8f:	int3   
   14000fc90:	rex push rbx
   14000fc92:	push   rdi
   14000fc93:	push   r15
   14000fc95:	sub    rsp,0x90
   14000fc9c:	mov    r15,rdx
   14000fc9f:	mov    rbx,rcx
   14000fca2:	test   rcx,rcx
   14000fca5:	je     0x1400100a3
   14000fcab:	mov    rdi,QWORD PTR [rcx+0x60]
   14000fcaf:	test   rdi,rdi
   14000fcb2:	je     0x1400100a3
   14000fcb8:	cmp    DWORD PTR [rcx+0x1c],0x2
   14000fcbc:	jne    0x1400100a3
   14000fcc2:	mov    QWORD PTR [rsp+0x70],r14
   14000fcc7:	test   rdx,rdx
   14000fcca:	je     0x140010090
   14000fcd0:	mov    rdx,QWORD PTR [rdx+0x60]
   14000fcd4:	test   rdx,rdx
   14000fcd7:	je     0x140010090
   14000fcdd:	cmp    r8d,DWORD PTR [r15+0x18]
   14000fce1:	jae    0x140010090
   14000fce7:	cmp    DWORD PTR [r15+0x1c],0x1
   14000fcec:	jne    0x140010090
   14000fcf2:	mov    rax,QWORD PTR [rdx+0x20]
   14000fcf6:	mov    ecx,r8d
   14000fcf9:	mov    r14d,DWORD PTR [rax+rcx*4]
   14000fcfd:	add    r14,QWORD PTR [rdx]
   14000fd00:	mov    QWORD PTR [rsp+0xb0],r14
   14000fd08:	je     0x140010090
   14000fd0e:	mov    QWORD PTR [rsp+0xb8],rbp
   14000fd16:	mov    ebp,DWORD PTR [rbx+0x20]
   14000fd19:	test   ebp,ebp
   14000fd1b:	je     0x14000fd28
   14000fd1d:	lea    ecx,[rbp-0x1]
   14000fd20:	mov    eax,ecx
   14000fd22:	and    eax,DWORD PTR [rbx]
   14000fd24:	sub    ebp,eax
   14000fd26:	and    ebp,ecx
   14000fd28:	cmp    DWORD PTR [rbx+0x18],0xffff
   14000fd2f:	mov    QWORD PTR [rsp+0x88],rsi
   14000fd37:	mov    QWORD PTR [rsp+0x80],r12
   14000fd3f:	je     0x14001008c
   14000fd45:	mov    rsi,QWORD PTR [rbx]
   14000fd48:	mov    r12d,ebp
   14000fd4b:	mov    ecx,0xffffffff
   14000fd50:	lea    rax,[rsi+0x4c]
   14000fd54:	add    rax,r12
   14000fd57:	cmp    rax,rcx
   14000fd5a:	ja     0x14001008c
   14000fd60:	mov    rcx,QWORD PTR [r15+0x58]
   14000fd64:	mov    QWORD PTR [rsp+0x78],r13
   14000fd69:	mov    r13d,DWORD PTR [r14+0x2a]
   14000fd6d:	add    r13,QWORD PTR [r15+0x8]
   14000fd71:	lea    r8,[rsp+0x20]
   14000fd76:	mov    r9d,0x1e
   14000fd7c:	mov    rdx,r13
   14000fd7f:	call   QWORD PTR [r15+0x48]
   14000fd83:	cmp    rax,0x1e
   14000fd87:	jne    0x1400100fe
   14000fd8d:	cmp    DWORD PTR [rsp+0x20],0x4034b50
   14000fd95:	jne    0x1400100fe
   14000fd9b:	mov    r8d,ebp
   14000fd9e:	mov    rdx,rsi
   14000fda1:	mov    rcx,rbx
   14000fda4:	add    r13,rax
   14000fda7:	call   0x140011450
   14000fdac:	test   eax,eax
   14000fdae:	je     0x1400100fe
   14000fdb4:	mov    eax,DWORD PTR [rbx+0x20]
   14000fdb7:	add    rsi,r12
   14000fdba:	mov    QWORD PTR [rsp+0xc8],rsi
   14000fdc2:	test   eax,eax
   14000fdc4:	je     0x14000fde8
   14000fdc6:	lea    ecx,[rax-0x1]
   14000fdc9:	test   rsi,rcx
   14000fdcc:	je     0x14000fde8
   14000fdce:	lea    rdx,[rip+0xbb0b]        # 0x14001b8e0
   14000fdd5:	lea    rcx,[rip+0xc074]        # 0x14001be50
   14000fddc:	mov    r8d,0x121f
   14000fde2:	call   QWORD PTR [rip+0x9430]        # 0x140019218
   14000fde8:	mov    rcx,QWORD PTR [rbx+0x58]
   14000fdec:	lea    r8,[rsp+0x20]
   14000fdf1:	mov    r9d,0x1e
   14000fdf7:	mov    rdx,rsi
   14000fdfa:	call   QWORD PTR [rbx+0x50]
   14000fdfd:	cmp    rax,0x1e
   14000fe01:	jne    0x1400100fe
   14000fe07:	movzx  ecx,WORD PTR [rsp+0x3a]
   14000fe0c:	add    rsi,rax
   14000fe0f:	movzx  eax,WORD PTR [rsp+0x3c]
   14000fe14:	add    ecx,eax
   14000fe16:	mov    eax,DWORD PTR [r14+0x14]
   14000fe1a:	mov    ebp,0x10000
   14000fe1f:	add    eax,ecx
   14000fe21:	mov    rcx,QWORD PTR [rbx+0x40]
   14000fe25:	mov    r12d,eax
   14000fe28:	mov    r8d,eax
   14000fe2b:	mov    eax,0x10
   14000fe30:	cmp    r12,rbp
   14000fe33:	lea    edx,[rax-0xf]
   14000fe36:	cmova  r8d,ebp
   14000fe3a:	cmp    r8,rax
   14000fe3d:	cmovb  r8d,eax
   14000fe41:	call   QWORD PTR [rbx+0x28]
   14000fe44:	mov    r14,rax
   14000fe47:	test   rax,rax
   14000fe4a:	je     0x1400100fe
   14000fe50:	test   r12,r12
   14000fe53:	je     0x14000fea6
   14000fe55:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fe60:	mov    rcx,QWORD PTR [r15+0x58]
   14000fe64:	mov    eax,r12d
   14000fe67:	cmp    r12,rbp
   14000fe6a:	cmova  eax,ebp
   14000fe6d:	mov    r8,r14
   14000fe70:	mov    rdx,r13
   14000fe73:	mov    r9d,eax
   14000fe76:	mov    ebp,eax
   14000fe78:	call   QWORD PTR [r15+0x48]
   14000fe7c:	cmp    rax,rbp
   14000fe7f:	jne    0x14000fef3
   14000fe81:	mov    rcx,QWORD PTR [rbx+0x58]
   14000fe85:	mov    r9d,ebp
   14000fe88:	mov    r8,r14
   14000fe8b:	mov    rdx,rsi
   14000fe8e:	add    r13,rbp
   14000fe91:	call   QWORD PTR [rbx+0x50]
   14000fe94:	cmp    rax,rbp
   14000fe97:	jne    0x14000fef3
   14000fe99:	add    rsi,rbp
   14000fe9c:	sub    r12,rbp
   14000fe9f:	mov    ebp,0x10000
   14000fea4:	jne    0x14000fe60
   14000fea6:	test   BYTE PTR [rsp+0x26],0x8
   14000feab:	je     0x14000ff05
   14000fead:	mov    rcx,QWORD PTR [r15+0x58]
   14000feb1:	mov    r9d,0x10
   14000feb7:	mov    r8,r14
   14000feba:	mov    rdx,r13
   14000febd:	call   QWORD PTR [r15+0x48]
   14000fec1:	cmp    rax,0x10
   14000fec5:	jne    0x14000fef3
   14000fec7:	cmp    DWORD PTR [r14],0x8074b50
   14000fece:	mov    rcx,QWORD PTR [rbx+0x58]
   14000fed2:	mov    eax,0x0
   14000fed7:	sete   al
   14000feda:	mov    r8,r14
   14000fedd:	mov    rdx,rsi
   14000fee0:	add    eax,0x3
   14000fee3:	shl    eax,0x2
   14000fee6:	mov    r9d,eax
   14000fee9:	mov    ebp,eax
   14000feeb:	call   QWORD PTR [rbx+0x50]
   14000feee:	cmp    rax,rbp
   14000fef1:	je     0x14000ff02
   14000fef3:	mov    rcx,QWORD PTR [rbx+0x40]
   14000fef7:	mov    rdx,r14
   14000fefa:	call   QWORD PTR [rbx+0x30]
   14000fefd:	jmp    0x1400100fe
   14000ff02:	add    rsi,rbp
   14000ff05:	mov    rcx,QWORD PTR [rbx+0x40]
   14000ff09:	mov    rdx,r14
   14000ff0c:	call   QWORD PTR [rbx+0x30]
   14000ff0f:	mov    eax,0xffffffff
   14000ff14:	cmp    rsi,rax
   14000ff17:	ja     0x1400100fe
   14000ff1d:	mov    r14,QWORD PTR [rsp+0xb0]
   14000ff25:	mov    rcx,QWORD PTR [rsp+0xc8]
   14000ff2d:	mov    rbp,QWORD PTR [rdi+0x8]
   14000ff31:	mov    eax,DWORD PTR [r14+0x28]
   14000ff35:	movups xmm0,XMMWORD PTR [r14]
   14000ff39:	movups xmm1,XMMWORD PTR [r14+0x10]
   14000ff3e:	mov    DWORD PTR [rsp+0x68],eax
   14000ff42:	movzx  eax,WORD PTR [r14+0x2c]
   14000ff47:	lea    r15,[rbp+0x2e]
   14000ff4b:	movups XMMWORD PTR [rsp+0x40],xmm0
   14000ff50:	movsd  xmm0,QWORD PTR [r14+0x20]
   14000ff56:	movups XMMWORD PTR [rsp+0x50],xmm1
   14000ff5b:	mov    WORD PTR [rsp+0x6c],ax
   14000ff60:	mov    eax,ecx
   14000ff62:	mov    BYTE PTR [rsp+0x6a],cl
   14000ff66:	movsd  QWORD PTR [rsp+0x60],xmm0
   14000ff6c:	shr    eax,0x8
   14000ff6f:	mov    BYTE PTR [rsp+0x6b],al
   14000ff73:	mov    eax,ecx
   14000ff75:	shr    ecx,0x18
   14000ff78:	shr    eax,0x10
   14000ff7b:	mov    BYTE PTR [rsp+0x6d],cl
   14000ff7f:	mov    BYTE PTR [rsp+0x6c],al
   14000ff83:	cmp    r15,QWORD PTR [rdi+0x10]
   14000ff87:	jbe    0x14000ffa5
   14000ff89:	mov    r9d,0x1
   14000ff8f:	mov    r8,r15
   14000ff92:	mov    rdx,rdi
   14000ff95:	mov    rcx,rbx
   14000ff98:	call   0x14000cf20
   14000ff9d:	test   eax,eax
   14000ff9f:	je     0x1400100fe
   14000ffa5:	mov    ecx,DWORD PTR [rdi+0x18]
   14000ffa8:	lea    rdx,[rsp+0x40]
   14000ffad:	mov    QWORD PTR [rdi+0x8],r15
   14000ffb1:	imul   r8,rcx,0x2e
   14000ffb5:	imul   rcx,rbp
   14000ffb9:	add    rcx,QWORD PTR [rdi]
   14000ffbc:	call   0x140017346
   14000ffc1:	movzx  ecx,WORD PTR [r14+0x20]
   14000ffc6:	movzx  eax,WORD PTR [r14+0x1e]
   14000ffcb:	mov    r15,QWORD PTR [rdi+0x8]
   14000ffcf:	add    ecx,eax
   14000ffd1:	movzx  eax,WORD PTR [r14+0x1c]
   14000ffd6:	add    ecx,eax
   14000ffd8:	mov    r13d,ecx
   14000ffdb:	lea    r12,[r15+rcx*1]
   14000ffdf:	cmp    r12,QWORD PTR [rdi+0x10]
   14000ffe3:	jbe    0x140010001
   14000ffe5:	mov    r9d,0x1
   14000ffeb:	mov    r8,r12
   14000ffee:	mov    rdx,rdi
   14000fff1:	mov    rcx,rbx
   14000fff4:	call   0x14000cf20
   14000fff9:	test   eax,eax
   14000fffb:	je     0x1400100b1
   140010001:	mov    eax,DWORD PTR [rdi+0x18]
   140010004:	lea    rdx,[r14+0x2e]
   140010008:	mov    QWORD PTR [rdi+0x8],r12
   14001000c:	mov    r8d,eax
   14001000f:	imul   r15,rax
   140010013:	add    r15,QWORD PTR [rdi]
   140010016:	mov    rcx,r15
   140010019:	imul   r8,r13
   14001001d:	call   0x140017346
   140010022:	mov    eax,0xffffffff
   140010027:	cmp    QWORD PTR [rdi+0x8],rax
   14001002b:	ja     0x1400100fe
   140010031:	mov    r13,QWORD PTR [rdi+0x28]
   140010035:	mov    DWORD PTR [rsp+0xb0],ebp
   14001003c:	lea    r15,[r13+0x1]
   140010040:	cmp    r15,QWORD PTR [rdi+0x30]
   140010044:	jbe    0x14001005f
   140010046:	lea    rdx,[rdi+0x20]
   14001004a:	mov    r9d,0x1
   140010050:	mov    r8,r15
   140010053:	mov    rcx,rbx
   140010056:	call   0x14000cf20
   14001005b:	test   eax,eax
   14001005d:	je     0x1400100b1
   14001005f:	mov    r8d,DWORD PTR [rdi+0x38]
   140010063:	lea    rdx,[rsp+0xb0]
   14001006b:	mov    QWORD PTR [rdi+0x28],r15
   14001006f:	mov    ecx,r8d
   140010072:	imul   rcx,r13
   140010076:	add    rcx,QWORD PTR [rdi+0x20]
   14001007a:	call   0x140017346
   14001007f:	inc    DWORD PTR [rbx+0x18]
   140010082:	mov    QWORD PTR [rbx],rsi
   140010085:	mov    eax,0x1
   14001008a:	jmp    0x140010100
   14001008c:	xor    eax,eax
   14001008e:	jmp    0x140010105
   140010090:	xor    eax,eax
   140010092:	mov    r14,QWORD PTR [rsp+0x70]
   140010097:	add    rsp,0x90
   14001009e:	pop    r15
   1400100a0:	pop    rdi
   1400100a1:	pop    rbx
   1400100a2:	ret    
   1400100a3:	xor    eax,eax
   1400100a5:	add    rsp,0x90
   1400100ac:	pop    r15
   1400100ae:	pop    rdi
   1400100af:	pop    rbx
   1400100b0:	ret    
   1400100b1:	cmp    rbp,QWORD PTR [rdi+0x10]
   1400100b5:	jbe    0x1400100fa
   1400100b7:	cmp    DWORD PTR [rdi+0x18],0x0
   1400100bb:	jne    0x1400100d7
   1400100bd:	lea    rdx,[rip+0xb81c]        # 0x14001b8e0
   1400100c4:	lea    rcx,[rip+0xbd3d]        # 0x14001be08
   1400100cb:	mov    r8d,0xbb7
   1400100d1:	call   QWORD PTR [rip+0x9141]        # 0x140019218
   1400100d7:	cmp    QWORD PTR [rdi+0x10],rbp
   1400100db:	jae    0x1400100fa
   1400100dd:	mov    r8d,DWORD PTR [rdi+0x18]
   1400100e1:	mov    rdx,QWORD PTR [rdi]
   1400100e4:	mov    rcx,QWORD PTR [rbx+0x40]
   1400100e8:	mov    r9,rbp
   1400100eb:	call   QWORD PTR [rbx+0x38]
   1400100ee:	test   rax,rax
   1400100f1:	je     0x1400100fe
   1400100f3:	mov    QWORD PTR [rdi],rax
   1400100f6:	mov    QWORD PTR [rdi+0x10],rbp
   1400100fa:	mov    QWORD PTR [rdi+0x8],rbp
   1400100fe:	xor    eax,eax
   140010100:	mov    r13,QWORD PTR [rsp+0x78]
   140010105:	mov    r12,QWORD PTR [rsp+0x80]
   14001010d:	mov    rsi,QWORD PTR [rsp+0x88]
   140010115:	mov    rbp,QWORD PTR [rsp+0xb8]
   14001011d:	mov    r14,QWORD PTR [rsp+0x70]
   140010122:	add    rsp,0x90
   140010129:	pop    r15
   14001012b:	pop    rdi
   14001012c:	pop    rbx
   14001012d:	ret    
   14001012e:	int3   
   14001012f:	int3   
   140010130:	sub    rsp,0x58
   140010134:	mov    eax,DWORD PTR [rsp+0x80]
   14001013b:	xor    r10d,r10d
   14001013e:	mov    DWORD PTR [rsp+0x40],r10d
   140010143:	mov    QWORD PTR [rsp+0x38],r10
   140010148:	mov    DWORD PTR [rsp+0x30],eax
   14001014c:	mov    WORD PTR [rsp+0x28],r10w
   140010152:	mov    QWORD PTR [rsp+0x20],r10
   140010157:	call   0x140010170
   14001015c:	add    rsp,0x58
   140010160:	ret    
   140010161:	int3   
   140010162:	int3   
   140010163:	int3   
   140010164:	int3   
   140010165:	int3   
   140010166:	int3   
   140010167:	int3   
   140010168:	int3   
   140010169:	int3   
   14001016a:	int3   
   14001016b:	int3   
   14001016c:	int3   
   14001016d:	int3   
   14001016e:	int3   
   14001016f:	int3   
   140010170:	mov    QWORD PTR [rsp+0x18],r8
   140010175:	mov    QWORD PTR [rsp+0x10],rdx
   14001017a:	push   rbp
   14001017b:	push   rbx
   14001017c:	push   rsi
   14001017d:	push   r12
   14001017f:	push   r14
   140010181:	push   r15
   140010183:	lea    rbp,[rsp-0x18]
   140010188:	sub    rsp,0x118
   14001018f:	xor    r12d,r12d
   140010192:	mov    rbx,rcx
   140010195:	mov    r14,r9
   140010198:	movzx  eax,r12w
   14001019c:	mov    rsi,rdx
   14001019f:	mov    DWORD PTR [rbp-0x54],r12d
   1400101a3:	mov    DWORD PTR [rbp-0x80],eax
   1400101a6:	mov    rax,QWORD PTR [rcx]
   1400101a9:	mov    ecx,0x6
   1400101ae:	mov    QWORD PTR [rbp+0x0],rax
   1400101b2:	mov    eax,DWORD PTR [rbp+0x80]
   1400101b8:	mov    QWORD PTR [rbp-0x50],r12
   1400101bc:	test   eax,eax
   1400101be:	mov    r15d,r12d
   1400101c1:	cmovs  eax,ecx
   1400101c4:	mov    ecx,eax
   1400101c6:	and    ecx,0xf
   1400101c9:	mov    DWORD PTR [rbp-0x40],ecx
   1400101cc:	je     0x1400101d8
   1400101ce:	mov    DWORD PTR [rbp-0x58],r12d
   1400101d2:	bt     eax,0xa
   1400101d6:	jae    0x1400101df
   1400101d8:	mov    DWORD PTR [rbp-0x58],0x1
   1400101df:	mov    rdx,QWORD PTR [rbx+0x60]
   1400101e3:	mov    QWORD PTR [rbp-0x38],rdx
   1400101e7:	test   rdx,rdx
   1400101ea:	je     0x140010235
   1400101ec:	cmp    DWORD PTR [rbx+0x1c],0x2
   1400101f0:	jne    0x140010235
   1400101f2:	test   r9,r9
   1400101f5:	je     0x1400101fc
   1400101f7:	test   r8,r8
   1400101fa:	je     0x140010235
   1400101fc:	test   rsi,rsi
   1400101ff:	je     0x140010235
   140010201:	cmp    WORD PTR [rbp+0x78],r12w
   140010206:	je     0x14001020e
   140010208:	cmp    QWORD PTR [rbp+0x70],r12
   14001020c:	je     0x140010235
   14001020e:	cmp    DWORD PTR [rbx+0x18],0xffff
   140010215:	je     0x140010235
   140010217:	cmp    ecx,0xa
   14001021a:	ja     0x140010235
   14001021c:	and    eax,0x400
   140010221:	mov    DWORD PTR [rbp+0x80],eax
   140010227:	mov    rax,QWORD PTR [rbp+0x88]
   14001022e:	jne    0x140010248
   140010230:	test   rax,rax
   140010233:	je     0x140010248
   140010235:	xor    eax,eax
   140010237:	add    rsp,0x118
   14001023e:	pop    r15
   140010240:	pop    r14
   140010242:	pop    r12
   140010244:	pop    rsi
   140010245:	pop    rbx
   140010246:	pop    rbp
   140010247:	ret    
   140010248:	mov    ecx,0xffffffff
   14001024d:	cmp    r9,rcx
   140010250:	ja     0x140010235
   140010252:	cmp    rax,rcx
   140010255:	ja     0x140010235
   140010257:	movzx  eax,BYTE PTR [rsi]
   14001025a:	mov    rcx,rsi
   14001025d:	cmp    al,0x2f
   14001025f:	je     0x140010235
   140010261:	test   al,al
   140010263:	je     0x140010278
   140010265:	cmp    al,0x5c
   140010267:	je     0x140010235
   140010269:	cmp    al,0x3a
   14001026b:	je     0x140010235
   14001026d:	movzx  eax,BYTE PTR [rcx+0x1]
   140010271:	inc    rcx
   140010274:	test   al,al
   140010276:	jne    0x140010265
   140010278:	lea    rcx,[rbp+0x50]
   14001027c:	mov    QWORD PTR [rsp+0x168],rdi
   140010284:	mov    QWORD PTR [rsp+0x110],r13
   14001028c:	call   QWORD PTR [rip+0x9086]        # 0x140019318
   140010292:	mov    rax,QWORD PTR [rbp+0x50]
   140010296:	lea    rdx,[rbp-0x8]
   14001029a:	lea    rcx,[rbp-0x30]
   14001029e:	mov    QWORD PTR [rbp-0x8],rax
   1400102a2:	call   QWORD PTR [rip+0x9060]        # 0x140019308
   1400102a8:	test   eax,eax
   1400102aa:	je     0x1400102b7
   1400102ac:	movzx  r13d,r12w
   1400102b0:	mov    WORD PTR [rbp+0x50],r12w
   1400102b5:	jmp    0x1400102f5
   1400102b7:	movzx  ecx,WORD PTR [rbp-0x28]
   1400102bb:	movzx  r13d,WORD PTR [rbp-0x1c]
   1400102c0:	mov    eax,DWORD PTR [rbp-0x30]
   1400102c3:	shl    cx,0x6
   1400102c7:	shl    r13w,0x4
   1400102cc:	sar    eax,1
   1400102ce:	add    cx,WORD PTR [rbp-0x2c]
   1400102d2:	add    r13w,WORD PTR [rbp-0x20]
   1400102d7:	shl    cx,0x5
   1400102db:	add    cx,ax
   1400102de:	mov    eax,0x301
   1400102e3:	add    r13w,ax
   1400102e7:	mov    WORD PTR [rbp+0x50],cx
   1400102eb:	shl    r13w,0x5
   1400102f0:	add    r13w,WORD PTR [rbp-0x24]
   1400102f5:	or     rdi,0xffffffffffffffff
   1400102f9:	nop    DWORD PTR [rax+0x0]
   140010300:	inc    rdi
   140010303:	cmp    BYTE PTR [rsi+rdi*1],r12b
   140010307:	jne    0x140010300
   140010309:	cmp    rdi,0xffff
   140010310:	ja     0x1400105b5
   140010316:	mov    esi,DWORD PTR [rbx+0x20]
   140010319:	test   esi,esi
   14001031b:	jne    0x140010322
   14001031d:	mov    esi,r12d
   140010320:	jmp    0x14001032d
   140010322:	lea    ecx,[rsi-0x1]
   140010325:	mov    eax,ecx
   140010327:	and    eax,DWORD PTR [rbx]
   140010329:	sub    esi,eax
   14001032b:	and    esi,ecx
   14001032d:	cmp    DWORD PTR [rbx+0x18],0xffff
   140010334:	je     0x1400105b5
   14001033a:	movzx  edx,WORD PTR [rbp+0x78]
   14001033e:	mov    r12d,esi
   140010341:	mov    eax,0xffffffff
   140010346:	lea    rcx,[rdx+0x4c]
   14001034a:	add    rcx,r12
   14001034d:	add    rcx,QWORD PTR [rbx]
   140010350:	add    rcx,rdi
   140010353:	cmp    rcx,rax
   140010356:	ja     0x1400105b5
   14001035c:	test   rdi,rdi
   14001035f:	je     0x140010389
   140010361:	mov    rax,QWORD PTR [rbp+0x58]
   140010365:	cmp    BYTE PTR [rdi+rax*1-0x1],0x2f
   14001036a:	jne    0x140010389
   14001036c:	mov    DWORD PTR [rbp-0x54],0x10
   140010373:	test   r14,r14
   140010376:	jne    0x1400105b5
   14001037c:	cmp    QWORD PTR [rbp+0x88],r15
   140010383:	jne    0x1400105b5
   140010389:	mov    rcx,QWORD PTR [rbp-0x38]
   14001038d:	mov    r8,QWORD PTR [rcx+0x8]
   140010391:	add    r8,0x2e
   140010395:	add    r8,rdx
   140010398:	add    r8,rdi
   14001039b:	cmp    r8,QWORD PTR [rcx+0x10]
   14001039f:	jbe    0x1400103be
   1400103a1:	mov    rdx,rcx
   1400103a4:	mov    r9d,0x1
   1400103aa:	mov    rcx,rbx
   1400103ad:	call   0x14000cf20
   1400103b2:	test   eax,eax
   1400103b4:	je     0x1400105b5
   1400103ba:	mov    rcx,QWORD PTR [rbp-0x38]
   1400103be:	mov    r8,QWORD PTR [rcx+0x28]
   1400103c2:	lea    rdx,[rcx+0x20]
   1400103c6:	inc    r8
   1400103c9:	cmp    r8,QWORD PTR [rdx+0x10]
   1400103cd:	jbe    0x1400103e5
   1400103cf:	mov    r9d,0x1
   1400103d5:	mov    rcx,rbx
   1400103d8:	call   0x14000cf20
   1400103dd:	test   eax,eax
   1400103df:	je     0x1400105b5
   1400103e5:	cmp    DWORD PTR [rbp-0x58],r15d
   1400103e9:	jne    0x14001040e
   1400103eb:	test   r14,r14
   1400103ee:	je     0x14001040e
   1400103f0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400103f4:	mov    edx,0x1
   1400103f9:	mov    r8d,0x4df78
   1400103ff:	call   QWORD PTR [rbx+0x28]
   140010402:	mov    r15,rax
   140010405:	test   rax,rax
   140010408:	je     0x1400105b5
   14001040e:	lea    r8d,[rsi+0x1e]
   140010412:	mov    rsi,QWORD PTR [rbp+0x0]
   140010416:	mov    rcx,rbx
   140010419:	mov    rdx,rsi
   14001041c:	call   0x140011450
   140010421:	test   eax,eax
   140010423:	je     0x1400105ab
   140010429:	mov    eax,DWORD PTR [rbx+0x20]
   14001042c:	mov    rdx,rsi
   14001042f:	add    rdx,r12
   140010432:	mov    QWORD PTR [rbp-0x48],rdx
   140010436:	test   eax,eax
   140010438:	je     0x14001045c
   14001043a:	lea    ecx,[rax-0x1]
   14001043d:	test   rdx,rcx
   140010440:	je     0x14001045c
   140010442:	lea    rdx,[rip+0xb497]        # 0x14001b8e0
   140010449:	lea    rcx,[rip+0xba00]        # 0x14001be50
   140010450:	mov    r8d,0x10f9
   140010456:	call   QWORD PTR [rip+0x8dbc]        # 0x140019218
   14001045c:	mov    r8,QWORD PTR [rbp+0x58]
   140010460:	mov    rcx,QWORD PTR [rbx+0x58]
   140010464:	xor    eax,eax
   140010466:	add    rsi,0x1e
   14001046a:	mov    r9,rdi
   14001046d:	mov    QWORD PTR [rbp-0x78],rax
   140010471:	add    rsi,r12
   140010474:	mov    QWORD PTR [rbp-0x70],rax
   140010478:	mov    QWORD PTR [rbp-0x68],rax
   14001047c:	mov    rdx,rsi
   14001047f:	mov    DWORD PTR [rbp-0x60],eax
   140010482:	mov    WORD PTR [rbp-0x5c],ax
   140010486:	call   QWORD PTR [rbx+0x50]
   140010489:	cmp    rax,rdi
   14001048c:	jne    0x1400105ab
   140010492:	add    rsi,rdi
   140010495:	cmp    DWORD PTR [rbp+0x80],0x0
   14001049c:	jne    0x1400104be
   14001049e:	mov    rdx,QWORD PTR [rbp+0x60]
   1400104a2:	mov    r8,r14
   1400104a5:	xor    ecx,ecx
   1400104a7:	call   0x14000c0c0
   1400104ac:	mov    QWORD PTR [rbp+0x88],r14
   1400104b3:	mov    r12d,eax
   1400104b6:	cmp    r14,0x3
   1400104ba:	jbe    0x1400104cb
   1400104bc:	jmp    0x1400104c5
   1400104be:	mov    r12d,DWORD PTR [rbp+0x90]
   1400104c5:	cmp    DWORD PTR [rbp-0x58],0x0
   1400104c9:	je     0x140010508
   1400104cb:	mov    r8,QWORD PTR [rbp+0x60]
   1400104cf:	mov    rcx,QWORD PTR [rbx+0x58]
   1400104d3:	mov    r9,r14
   1400104d6:	mov    rdx,rsi
   1400104d9:	call   QWORD PTR [rbx+0x50]
   1400104dc:	cmp    rax,r14
   1400104df:	jne    0x1400105ab
   1400104e5:	add    rsi,r14
   1400104e8:	cmp    DWORD PTR [rbp+0x80],0x0
   1400104ef:	mov    QWORD PTR [rbp-0x50],r14
   1400104f3:	je     0x1400105bc
   1400104f9:	mov    r14d,0x8
   1400104ff:	mov    DWORD PTR [rbp-0x80],r14d
   140010503:	jmp    0x1400105c0
   140010508:	test   r14,r14
   14001050b:	je     0x1400105bc
   140010511:	mov    edx,DWORD PTR [rbp-0x40]
   140010514:	mov    QWORD PTR [rbp-0x30],rbx
   140010518:	mov    QWORD PTR [rbp-0x28],rsi
   14001051c:	mov    QWORD PTR [rbp-0x20],0x0
   140010524:	test   edx,edx
   140010526:	js     0x140010536
   140010528:	mov    ecx,0xa
   14001052d:	mov    eax,edx
   14001052f:	cmp    edx,ecx
   140010531:	cmovg  eax,ecx
   140010534:	jmp    0x14001053b
   140010536:	mov    eax,0x6
   14001053b:	movsxd rcx,eax
   14001053e:	xor    eax,eax
   140010540:	cmp    edx,0x3
   140010543:	lea    r9,[rip+0xa846]        # 0x14001ad90
   14001054a:	mov    r8d,0x4000
   140010550:	mov    r9d,DWORD PTR [r9+rcx*4]
   140010554:	cmovle eax,r8d
   140010558:	or     r9d,eax
   14001055b:	test   edx,edx
   14001055d:	jne    0x140010564
   14001055f:	bts    r9d,0x13
   140010564:	lea    r8,[rbp-0x30]
   140010568:	lea    rdx,[rip+0x211]        # 0x140010780
   14001056f:	mov    rcx,r15
   140010572:	call   0x140013bd0
   140010577:	test   eax,eax
   140010579:	jne    0x1400105ab
   14001057b:	mov    rdx,QWORD PTR [rbp+0x60]
   14001057f:	lea    r9d,[rax+0x4]
   140010583:	mov    r8,r14
   140010586:	mov    rcx,r15
   140010589:	call   0x1400118f0
   14001058e:	cmp    eax,0x1
   140010591:	jne    0x1400105ab
   140010593:	mov    rax,QWORD PTR [rbp-0x20]
   140010597:	mov    rsi,QWORD PTR [rbp-0x28]
   14001059b:	mov    r14d,0x8
   1400105a1:	mov    QWORD PTR [rbp-0x50],rax
   1400105a5:	mov    DWORD PTR [rbp-0x80],r14d
   1400105a9:	jmp    0x1400105c0
   1400105ab:	mov    rcx,QWORD PTR [rbx+0x40]
   1400105af:	mov    rdx,r15
   1400105b2:	call   QWORD PTR [rbx+0x30]
   1400105b5:	xor    eax,eax
   1400105b7:	jmp    0x140010757
   1400105bc:	mov    r14d,DWORD PTR [rbp-0x80]
   1400105c0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400105c4:	mov    rdx,r15
   1400105c7:	call   QWORD PTR [rbx+0x30]
   1400105ca:	mov    rdx,QWORD PTR [rbp-0x50]
   1400105ce:	mov    eax,0xffffffff
   1400105d3:	cmp    rdx,rax
   1400105d6:	ja     0x1400105b5
   1400105d8:	cmp    rsi,rax
   1400105db:	ja     0x1400105b5
   1400105dd:	xor    eax,eax
   1400105df:	mov    r15,QWORD PTR [rbp+0x88]
   1400105e6:	lea    r8,[rbp-0x78]
   1400105ea:	mov    QWORD PTR [rbp-0x70],rax
   1400105ee:	mov    QWORD PTR [rbp-0x68],rax
   1400105f2:	mov    QWORD PTR [rbp-0x78],rax
   1400105f6:	mov    DWORD PTR [rbp-0x60],eax
   1400105f9:	mov    WORD PTR [rbp-0x5c],ax
   1400105fd:	movzx  eax,r14w
   140010601:	neg    ax
   140010604:	movzx  eax,r14w
   140010608:	mov    BYTE PTR [rbp-0x70],r14b
   14001060c:	movzx  r14d,WORD PTR [rbp+0x50]
   140010611:	sbb    cx,cx
   140010614:	shr    ax,0x8
   140010618:	mov    BYTE PTR [rbp-0x6f],al
   14001061b:	movzx  eax,r14w
   14001061f:	and    cx,0x14
   140010623:	shr    ax,0x8
   140010627:	mov    BYTE PTR [rbp-0x74],cl
   14001062a:	shr    cx,0x8
   14001062e:	mov    BYTE PTR [rbp-0x6d],al
   140010631:	movzx  eax,r13w
   140010635:	mov    BYTE PTR [rbp-0x66],dl
   140010638:	shr    ax,0x8
   14001063c:	mov    BYTE PTR [rbp-0x73],cl
   14001063f:	mov    rcx,QWORD PTR [rbx+0x58]
   140010643:	mov    BYTE PTR [rbp-0x6b],al
   140010646:	mov    eax,r12d
   140010649:	mov    r9d,0x1e
   14001064f:	shr    eax,0x8
   140010652:	mov    DWORD PTR [rbp-0x78],0x4034b50
   140010659:	mov    WORD PTR [rbp-0x72],0x0
   14001065f:	mov    BYTE PTR [rbp-0x69],al
   140010662:	mov    eax,r12d
   140010665:	mov    BYTE PTR [rbp-0x6e],r14b
   140010669:	shr    eax,0x10
   14001066c:	mov    BYTE PTR [rbp-0x6c],r13b
   140010670:	mov    BYTE PTR [rbp-0x6a],r12b
   140010674:	mov    BYTE PTR [rbp-0x68],al
   140010677:	mov    eax,r12d
   14001067a:	mov    BYTE PTR [rbp-0x62],r15b
   14001067e:	shr    eax,0x18
   140010681:	mov    BYTE PTR [rbp-0x5e],dil
   140010685:	mov    WORD PTR [rbp-0x5c],0x0
   14001068b:	mov    BYTE PTR [rbp-0x67],al
   14001068e:	mov    eax,edx
   140010690:	shr    eax,0x8
   140010693:	mov    BYTE PTR [rbp-0x65],al
   140010696:	mov    eax,edx
   140010698:	shr    eax,0x10
   14001069b:	mov    BYTE PTR [rbp-0x64],al
   14001069e:	mov    eax,edx
   1400106a0:	mov    rdx,QWORD PTR [rbp-0x48]
   1400106a4:	shr    eax,0x18
   1400106a7:	mov    BYTE PTR [rbp-0x63],al
   1400106aa:	mov    eax,r15d
   1400106ad:	shr    eax,0x8
   1400106b0:	mov    BYTE PTR [rbp-0x61],al
   1400106b3:	mov    eax,r15d
   1400106b6:	shr    eax,0x10
   1400106b9:	mov    BYTE PTR [rbp-0x60],al
   1400106bc:	mov    eax,r15d
   1400106bf:	shr    eax,0x18
   1400106c2:	mov    BYTE PTR [rbp-0x5f],al
   1400106c5:	movzx  eax,di
   1400106c8:	shr    ax,0x8
   1400106cc:	mov    BYTE PTR [rbp-0x5d],al
   1400106cf:	call   QWORD PTR [rbx+0x50]
   1400106d2:	cmp    rax,0x1e
   1400106d6:	jne    0x1400105b5
   1400106dc:	mov    eax,DWORD PTR [rbp-0x54]
   1400106df:	mov    rdx,QWORD PTR [rbp+0x58]
   1400106e3:	xor    ecx,ecx
   1400106e5:	mov    DWORD PTR [rsp+0x78],eax
   1400106e9:	mov    rax,QWORD PTR [rbp-0x48]
   1400106ed:	xor    r9d,r9d
   1400106f0:	mov    QWORD PTR [rsp+0x70],rax
   1400106f5:	mov    eax,DWORD PTR [rbp-0x80]
   1400106f8:	mov    WORD PTR [rsp+0x68],r13w
   1400106fe:	mov    WORD PTR [rsp+0x60],r14w
   140010704:	mov    WORD PTR [rsp+0x58],cx
   140010709:	mov    WORD PTR [rsp+0x50],ax
   14001070e:	mov    rax,QWORD PTR [rbp-0x50]
   140010712:	mov    DWORD PTR [rsp+0x48],r12d
   140010717:	movzx  r8d,di
   14001071b:	mov    QWORD PTR [rsp+0x40],rax
   140010720:	movzx  eax,WORD PTR [rbp+0x78]
   140010724:	mov    QWORD PTR [rsp+0x38],r15
   140010729:	mov    WORD PTR [rsp+0x30],ax
   14001072e:	mov    rax,QWORD PTR [rbp+0x70]
   140010732:	mov    QWORD PTR [rsp+0x28],rax
   140010737:	mov    WORD PTR [rsp+0x20],cx
   14001073c:	mov    rcx,rbx
   14001073f:	call   0x1400107e0
   140010744:	test   eax,eax
   140010746:	je     0x1400105b5
   14001074c:	inc    DWORD PTR [rbx+0x18]
   14001074f:	mov    QWORD PTR [rbx],rsi
   140010752:	mov    eax,0x1
   140010757:	mov    rdi,QWORD PTR [rsp+0x168]
   14001075f:	mov    r13,QWORD PTR [rsp+0x110]
   140010767:	add    rsp,0x118
   14001076e:	pop    r15
   140010770:	pop    r14
   140010772:	pop    r12
   140010774:	pop    rsi
   140010775:	pop    rbx
   140010776:	pop    rbp
   140010777:	ret    
   140010778:	int3   
   140010779:	int3   
   14001077a:	int3   
   14001077b:	int3   
   14001077c:	int3   
   14001077d:	int3   
   14001077e:	int3   
   14001077f:	int3   
   140010780:	mov    QWORD PTR [rsp+0x8],rbx
   140010785:	mov    QWORD PTR [rsp+0x10],rsi
   14001078a:	push   rdi
   14001078b:	sub    rsp,0x20
   14001078f:	mov    rax,QWORD PTR [r8]
   140010792:	mov    rdi,r8
   140010795:	movsxd rbx,edx
   140010798:	mov    rdx,QWORD PTR [rdi+0x8]
   14001079c:	mov    r8,rcx
   14001079f:	mov    rcx,QWORD PTR [rax+0x58]
   1400107a3:	mov    r9,rbx
   1400107a6:	call   QWORD PTR [rax+0x50]
   1400107a9:	cmp    eax,ebx
   1400107ab:	je     0x1400107bf
   1400107ad:	xor    eax,eax
   1400107af:	mov    rbx,QWORD PTR [rsp+0x30]
   1400107b4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400107b9:	add    rsp,0x20
   1400107bd:	pop    rdi
   1400107be:	ret    
   1400107bf:	add    QWORD PTR [rdi+0x8],rbx
   1400107c3:	add    QWORD PTR [rdi+0x10],rbx
   1400107c7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400107cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400107d1:	mov    eax,0x1
   1400107d6:	add    rsp,0x20
   1400107da:	pop    rdi
   1400107db:	ret    
   1400107dc:	int3   
   1400107dd:	int3   
   1400107de:	int3   
   1400107df:	int3   
   1400107e0:	mov    QWORD PTR [rsp+0x20],r9
   1400107e5:	mov    QWORD PTR [rsp+0x10],rdx
   1400107ea:	push   rbx
   1400107eb:	push   rsi
   1400107ec:	push   rdi
   1400107ed:	push   r12
   1400107ef:	push   r13
   1400107f1:	push   r15
   1400107f3:	sub    rsp,0xa8
   1400107fa:	mov    rbx,QWORD PTR [rcx+0x60]
   1400107fe:	mov    r10,QWORD PTR [rsp+0x150]
   140010806:	mov    r11d,0xffffffff
   14001080c:	mov    eax,DWORD PTR [rbx+0x8]
   14001080f:	mov    rdi,QWORD PTR [rbx+0x8]
   140010813:	mov    rsi,rcx
   140010816:	mov    DWORD PTR [rsp+0xe0],eax
   14001081d:	cmp    r10,r11
   140010820:	ja     0x1400108d2
   140010826:	movzx  edx,WORD PTR [rsp+0x110]
   14001082e:	movzx  r9d,WORD PTR [rsp+0x100]
   140010837:	movzx  r15d,r8w
   14001083b:	lea    rcx,[rdx+0x2e]
   14001083f:	mov    r12d,r9d
   140010842:	mov    r13d,edx
   140010845:	add    rcx,r9
   140010848:	add    rcx,r15
   14001084b:	add    rcx,rdi
   14001084e:	cmp    rcx,r11
   140010851:	ja     0x1400108d2
   140010853:	mov    eax,DWORD PTR [rsp+0x158]
   14001085a:	mov    rcx,rsi
   14001085d:	mov    DWORD PTR [rsp+0x68],eax
   140010861:	movzx  eax,WORD PTR [rsp+0x148]
   140010869:	mov    QWORD PTR [rsp+0x60],r10
   14001086e:	mov    WORD PTR [rsp+0x58],ax
   140010873:	movzx  eax,WORD PTR [rsp+0x140]
   14001087b:	mov    WORD PTR [rsp+0x50],ax
   140010880:	movzx  eax,WORD PTR [rsp+0x138]
   140010888:	mov    WORD PTR [rsp+0x48],ax
   14001088d:	movzx  eax,WORD PTR [rsp+0x130]
   140010895:	mov    WORD PTR [rsp+0x40],ax
   14001089a:	mov    eax,DWORD PTR [rsp+0x128]
   1400108a1:	mov    DWORD PTR [rsp+0x38],eax
   1400108a5:	mov    rax,QWORD PTR [rsp+0x120]
   1400108ad:	mov    QWORD PTR [rsp+0x30],rax
   1400108b2:	mov    rax,QWORD PTR [rsp+0x118]
   1400108ba:	mov    QWORD PTR [rsp+0x28],rax
   1400108bf:	mov    WORD PTR [rsp+0x20],dx
   1400108c4:	lea    rdx,[rsp+0x70]
   1400108c9:	call   0x140010b00
   1400108ce:	test   eax,eax
   1400108d0:	jne    0x1400108e5
   1400108d2:	xor    eax,eax
   1400108d4:	add    rsp,0xa8
   1400108db:	pop    r15
   1400108dd:	pop    r13
   1400108df:	pop    r12
   1400108e1:	pop    rdi
   1400108e2:	pop    rsi
   1400108e3:	pop    rbx
   1400108e4:	ret    
   1400108e5:	mov    QWORD PTR [rsp+0xf0],rbp
   1400108ed:	mov    QWORD PTR [rsp+0xa0],r14
   1400108f5:	mov    r14,QWORD PTR [rbx+0x8]
   1400108f9:	lea    rbp,[r14+0x2e]
   1400108fd:	cmp    rbp,QWORD PTR [rbx+0x10]
   140010901:	jbe    0x14001091f
   140010903:	mov    r9d,0x1
   140010909:	mov    r8,rbp
   14001090c:	mov    rdx,rbx
   14001090f:	mov    rcx,rsi
   140010912:	call   0x14000cf20
   140010917:	test   eax,eax
   140010919:	je     0x140010a42
   14001091f:	mov    ecx,DWORD PTR [rbx+0x18]
   140010922:	lea    rdx,[rsp+0x70]
   140010927:	mov    QWORD PTR [rbx+0x8],rbp
   14001092b:	imul   r8,rcx,0x2e
   14001092f:	imul   rcx,r14
   140010933:	add    rcx,QWORD PTR [rbx]
   140010936:	call   0x140017346
   14001093b:	mov    r14,QWORD PTR [rbx+0x8]
   14001093f:	lea    rbp,[r14+r15*1]
   140010943:	cmp    rbp,QWORD PTR [rbx+0x10]
   140010947:	jbe    0x140010965
   140010949:	mov    r9d,0x1
   14001094f:	mov    r8,rbp
   140010952:	mov    rdx,rbx
   140010955:	mov    rcx,rsi
   140010958:	call   0x14000cf20
   14001095d:	test   eax,eax
   14001095f:	je     0x140010a42
   140010965:	mov    ecx,DWORD PTR [rbx+0x18]
   140010968:	mov    rdx,QWORD PTR [rsp+0xe8]
   140010970:	mov    QWORD PTR [rbx+0x8],rbp
   140010974:	mov    r8d,ecx
   140010977:	imul   rcx,r14
   14001097b:	imul   r8,r15
   14001097f:	add    rcx,QWORD PTR [rbx]
   140010982:	call   0x140017346
   140010987:	mov    r14,QWORD PTR [rbx+0x8]
   14001098b:	lea    rbp,[r14+r12*1]
   14001098f:	cmp    rbp,QWORD PTR [rbx+0x10]
   140010993:	jbe    0x1400109b1
   140010995:	mov    r9d,0x1
   14001099b:	mov    r8,rbp
   14001099e:	mov    rdx,rbx
   1400109a1:	mov    rcx,rsi
   1400109a4:	call   0x14000cf20
   1400109a9:	test   eax,eax
   1400109ab:	je     0x140010a42
   1400109b1:	mov    ecx,DWORD PTR [rbx+0x18]
   1400109b4:	mov    rdx,QWORD PTR [rsp+0xf8]
   1400109bc:	mov    QWORD PTR [rbx+0x8],rbp
   1400109c0:	mov    r8d,ecx
   1400109c3:	imul   rcx,r14
   1400109c7:	imul   r8,r12
   1400109cb:	add    rcx,QWORD PTR [rbx]
   1400109ce:	call   0x140017346
   1400109d3:	mov    r14,QWORD PTR [rbx+0x8]
   1400109d7:	lea    rbp,[r14+r13*1]
   1400109db:	cmp    rbp,QWORD PTR [rbx+0x10]
   1400109df:	jbe    0x1400109f9
   1400109e1:	mov    r9d,0x1
   1400109e7:	mov    r8,rbp
   1400109ea:	mov    rdx,rbx
   1400109ed:	mov    rcx,rsi
   1400109f0:	call   0x14000cf20
   1400109f5:	test   eax,eax
   1400109f7:	je     0x140010a42
   1400109f9:	mov    ecx,DWORD PTR [rbx+0x18]
   1400109fc:	mov    rdx,QWORD PTR [rsp+0x108]
   140010a04:	mov    QWORD PTR [rbx+0x8],rbp
   140010a08:	mov    r8d,ecx
   140010a0b:	imul   rcx,r14
   140010a0f:	imul   r8,r13
   140010a13:	add    rcx,QWORD PTR [rbx]
   140010a16:	call   0x140017346
   140010a1b:	mov    r15,QWORD PTR [rbx+0x28]
   140010a1f:	lea    r14,[r15+0x1]
   140010a23:	cmp    r14,QWORD PTR [rbx+0x30]
   140010a27:	jbe    0x140010a93
   140010a29:	lea    rdx,[rbx+0x20]
   140010a2d:	mov    r9d,0x1
   140010a33:	mov    r8,r14
   140010a36:	mov    rcx,rsi
   140010a39:	call   0x14000cf20
   140010a3e:	test   eax,eax
   140010a40:	jne    0x140010a93
   140010a42:	cmp    rdi,QWORD PTR [rbx+0x10]
   140010a46:	jbe    0x140010a8b
   140010a48:	cmp    DWORD PTR [rbx+0x18],0x0
   140010a4c:	jne    0x140010a68
   140010a4e:	lea    rdx,[rip+0xae8b]        # 0x14001b8e0
   140010a55:	lea    rcx,[rip+0xb3ac]        # 0x14001be08
   140010a5c:	mov    r8d,0xbb7
   140010a62:	call   QWORD PTR [rip+0x87b0]        # 0x140019218
   140010a68:	cmp    QWORD PTR [rbx+0x10],rdi
   140010a6c:	jae    0x140010a8b
   140010a6e:	mov    r8d,DWORD PTR [rbx+0x18]
   140010a72:	mov    rdx,QWORD PTR [rbx]
   140010a75:	mov    rcx,QWORD PTR [rsi+0x40]
   140010a79:	mov    r9,rdi
   140010a7c:	call   QWORD PTR [rsi+0x38]
   140010a7f:	test   rax,rax
   140010a82:	je     0x140010a8f
   140010a84:	mov    QWORD PTR [rbx],rax
   140010a87:	mov    QWORD PTR [rbx+0x10],rdi
   140010a8b:	mov    QWORD PTR [rbx+0x8],rdi
   140010a8f:	xor    eax,eax
   140010a91:	jmp    0x140010ab8
   140010a93:	mov    r8d,DWORD PTR [rbx+0x38]
   140010a97:	lea    rdx,[rsp+0xe0]
   140010a9f:	mov    QWORD PTR [rbx+0x28],r14
   140010aa3:	mov    ecx,r8d
   140010aa6:	imul   rcx,r15
   140010aaa:	add    rcx,QWORD PTR [rbx+0x20]
   140010aae:	call   0x140017346
   140010ab3:	mov    eax,0x1
   140010ab8:	mov    rbp,QWORD PTR [rsp+0xf0]
   140010ac0:	mov    r14,QWORD PTR [rsp+0xa0]
   140010ac8:	add    rsp,0xa8
   140010acf:	pop    r15
   140010ad1:	pop    r13
   140010ad3:	pop    r12
   140010ad5:	pop    rdi
   140010ad6:	pop    rsi
   140010ad7:	pop    rbx
   140010ad8:	ret    
   140010ad9:	int3   
   140010ada:	int3   
   140010adb:	int3   
   140010adc:	int3   
   140010add:	int3   
   140010ade:	int3   
   140010adf:	int3   
   140010ae0:	mov    eax,DWORD PTR [rcx+0x20]
   140010ae3:	mov    r8,rcx
   140010ae6:	test   eax,eax
   140010ae8:	jne    0x140010aeb
   140010aea:	ret    
   140010aeb:	lea    edx,[rax-0x1]
   140010aee:	mov    ecx,edx
   140010af0:	and    ecx,DWORD PTR [r8]
   140010af3:	sub    eax,ecx
   140010af5:	and    eax,edx
   140010af7:	ret    
   140010af8:	int3   
   140010af9:	int3   
   140010afa:	int3   
   140010afb:	int3   
   140010afc:	int3   
   140010afd:	int3   
   140010afe:	int3   
   140010aff:	int3   
   140010b00:	xor    eax,eax
   140010b02:	mov    r10,rdx
   140010b05:	mov    QWORD PTR [rdx],rax
   140010b08:	mov    QWORD PTR [rdx+0x8],rax
   140010b0c:	mov    QWORD PTR [rdx+0x10],rax
   140010b10:	mov    QWORD PTR [rdx+0x18],rax
   140010b14:	mov    QWORD PTR [rdx+0x20],rax
   140010b18:	mov    DWORD PTR [rdx+0x28],eax
   140010b1b:	mov    WORD PTR [rdx+0x2c],ax
   140010b1f:	mov    DWORD PTR [rdx],0x2014b50
   140010b25:	movzx  edx,WORD PTR [rsp+0x48]
   140010b2a:	movzx  eax,dx
   140010b2d:	neg    ax
   140010b30:	movzx  eax,WORD PTR [rsp+0x50]
   140010b35:	sbb    cx,cx
   140010b38:	and    cx,0x14
   140010b3c:	mov    BYTE PTR [r10+0x6],cl
   140010b40:	shr    cx,0x8
   140010b44:	mov    BYTE PTR [r10+0x7],cl
   140010b48:	mov    BYTE PTR [r10+0x8],al
   140010b4c:	mov    ecx,DWORD PTR [rsp+0x40]
   140010b50:	shr    ax,0x8
   140010b54:	mov    BYTE PTR [r10+0x9],al
   140010b58:	movzx  eax,WORD PTR [rsp+0x58]
   140010b5d:	mov    BYTE PTR [r10+0xa],dl
   140010b61:	shr    dx,0x8
   140010b65:	mov    BYTE PTR [r10+0xb],dl
   140010b69:	mov    BYTE PTR [r10+0xc],al
   140010b6d:	shr    ax,0x8
   140010b71:	mov    BYTE PTR [r10+0xd],al
   140010b75:	movzx  eax,WORD PTR [rsp+0x60]
   140010b7a:	mov    BYTE PTR [r10+0xe],al
   140010b7e:	shr    ax,0x8
   140010b82:	mov    BYTE PTR [r10+0xf],al
   140010b86:	mov    BYTE PTR [r10+0x10],cl
   140010b8a:	mov    eax,ecx
   140010b8c:	shr    eax,0x8
   140010b8f:	mov    BYTE PTR [r10+0x11],al
   140010b93:	mov    eax,ecx
   140010b95:	shr    ecx,0x18
   140010b98:	mov    BYTE PTR [r10+0x13],cl
   140010b9c:	mov    rcx,QWORD PTR [rsp+0x38]
   140010ba1:	shr    eax,0x10
   140010ba4:	mov    BYTE PTR [r10+0x12],al
   140010ba8:	mov    BYTE PTR [r10+0x14],cl
   140010bac:	mov    eax,ecx
   140010bae:	shr    eax,0x8
   140010bb1:	mov    BYTE PTR [r10+0x15],al
   140010bb5:	mov    eax,ecx
   140010bb7:	shr    ecx,0x18
   140010bba:	mov    BYTE PTR [r10+0x17],cl
   140010bbe:	mov    rcx,QWORD PTR [rsp+0x30]
   140010bc3:	shr    eax,0x10
   140010bc6:	mov    BYTE PTR [r10+0x16],al
   140010bca:	mov    BYTE PTR [r10+0x18],cl
   140010bce:	mov    eax,ecx
   140010bd0:	shr    eax,0x8
   140010bd3:	mov    BYTE PTR [r10+0x19],al
   140010bd7:	mov    eax,ecx
   140010bd9:	shr    ecx,0x18
   140010bdc:	mov    BYTE PTR [r10+0x1b],cl
   140010be0:	mov    ecx,DWORD PTR [rsp+0x70]
   140010be4:	shr    eax,0x10
   140010be7:	mov    BYTE PTR [r10+0x1a],al
   140010beb:	movzx  eax,WORD PTR [rsp+0x28]
   140010bf0:	mov    BYTE PTR [r10+0x1c],r8b
   140010bf4:	shr    r8w,0x8
   140010bf9:	mov    BYTE PTR [r10+0x1d],r8b
   140010bfd:	mov    BYTE PTR [r10+0x1e],r9b
   140010c01:	shr    r9w,0x8
   140010c06:	mov    BYTE PTR [r10+0x1f],r9b
   140010c0a:	mov    BYTE PTR [r10+0x20],al
   140010c0e:	shr    ax,0x8
   140010c12:	mov    BYTE PTR [r10+0x21],al
   140010c16:	mov    eax,ecx
   140010c18:	mov    BYTE PTR [r10+0x26],cl
   140010c1c:	shr    eax,0x8
   140010c1f:	mov    BYTE PTR [r10+0x27],al
   140010c23:	mov    eax,ecx
   140010c25:	shr    eax,0x10
   140010c28:	mov    BYTE PTR [r10+0x28],al
   140010c2c:	shr    ecx,0x18
   140010c2f:	mov    BYTE PTR [r10+0x29],cl
   140010c33:	mov    rcx,QWORD PTR [rsp+0x68]
   140010c38:	mov    eax,ecx
   140010c3a:	mov    BYTE PTR [r10+0x2a],cl
   140010c3e:	shr    eax,0x8
   140010c41:	mov    BYTE PTR [r10+0x2b],al
   140010c45:	mov    eax,ecx
   140010c47:	shr    ecx,0x18
   140010c4a:	shr    eax,0x10
   140010c4d:	mov    BYTE PTR [r10+0x2d],cl
   140010c51:	mov    BYTE PTR [r10+0x2c],al
   140010c55:	mov    eax,0x1
   140010c5a:	ret    
   140010c5b:	int3   
   140010c5c:	int3   
   140010c5d:	int3   
   140010c5e:	int3   
   140010c5f:	int3   
   140010c60:	xor    eax,eax
   140010c62:	movzx  r10d,r8w
   140010c66:	movzx  r8d,WORD PTR [rsp+0x40]
   140010c6c:	mov    QWORD PTR [rdx],rax
   140010c6f:	mov    QWORD PTR [rdx+0x8],rax
   140010c73:	mov    QWORD PTR [rdx+0x10],rax
   140010c77:	mov    DWORD PTR [rdx+0x18],eax
   140010c7a:	mov    WORD PTR [rdx+0x1c],ax
   140010c7e:	mov    DWORD PTR [rdx],0x4034b50
   140010c84:	movzx  eax,r8w
   140010c88:	neg    ax
   140010c8b:	movzx  eax,WORD PTR [rsp+0x48]
   140010c90:	sbb    cx,cx
   140010c93:	and    cx,0x14
   140010c97:	mov    BYTE PTR [rdx+0x4],cl
   140010c9a:	shr    cx,0x8
   140010c9e:	mov    BYTE PTR [rdx+0x5],cl
   140010ca1:	mov    BYTE PTR [rdx+0x6],al
   140010ca4:	mov    ecx,DWORD PTR [rsp+0x38]
   140010ca8:	shr    ax,0x8
   140010cac:	mov    BYTE PTR [rdx+0x7],al
   140010caf:	movzx  eax,WORD PTR [rsp+0x50]
   140010cb4:	mov    BYTE PTR [rdx+0x8],r8b
   140010cb8:	shr    r8w,0x8
   140010cbd:	mov    BYTE PTR [rdx+0x9],r8b
   140010cc1:	mov    BYTE PTR [rdx+0xa],al
   140010cc4:	shr    ax,0x8
   140010cc8:	mov    BYTE PTR [rdx+0xb],al
   140010ccb:	movzx  eax,WORD PTR [rsp+0x58]
   140010cd0:	mov    BYTE PTR [rdx+0xc],al
   140010cd3:	shr    ax,0x8
   140010cd7:	mov    BYTE PTR [rdx+0xd],al
   140010cda:	mov    BYTE PTR [rdx+0xe],cl
   140010cdd:	mov    eax,ecx
   140010cdf:	shr    eax,0x8
   140010ce2:	mov    BYTE PTR [rdx+0xf],al
   140010ce5:	mov    eax,ecx
   140010ce7:	shr    ecx,0x18
   140010cea:	mov    BYTE PTR [rdx+0x11],cl
   140010ced:	mov    rcx,QWORD PTR [rsp+0x30]
   140010cf2:	shr    eax,0x10
   140010cf5:	mov    BYTE PTR [rdx+0x10],al
   140010cf8:	mov    BYTE PTR [rdx+0x12],cl
   140010cfb:	mov    eax,ecx
   140010cfd:	shr    eax,0x8
   140010d00:	mov    BYTE PTR [rdx+0x13],al
   140010d03:	mov    eax,ecx
   140010d05:	shr    ecx,0x18
   140010d08:	mov    BYTE PTR [rdx+0x15],cl
   140010d0b:	mov    rcx,QWORD PTR [rsp+0x28]
   140010d10:	shr    eax,0x10
   140010d13:	mov    BYTE PTR [rdx+0x14],al
   140010d16:	mov    BYTE PTR [rdx+0x16],cl
   140010d19:	mov    eax,ecx
   140010d1b:	shr    eax,0x8
   140010d1e:	mov    BYTE PTR [rdx+0x17],al
   140010d21:	mov    eax,ecx
   140010d23:	shr    ecx,0x18
   140010d26:	mov    BYTE PTR [rdx+0x19],cl
   140010d29:	shr    eax,0x10
   140010d2c:	mov    BYTE PTR [rdx+0x18],al
   140010d2f:	mov    BYTE PTR [rdx+0x1a],r10b
   140010d33:	shr    r10w,0x8
   140010d38:	mov    BYTE PTR [rdx+0x1b],r10b
   140010d3c:	mov    BYTE PTR [rdx+0x1c],r9b
   140010d40:	shr    r9w,0x8
   140010d45:	mov    BYTE PTR [rdx+0x1d],r9b
   140010d49:	mov    eax,0x1
   140010d4e:	ret    
   140010d4f:	int3   
   140010d50:	mov    QWORD PTR [rsp+0x10],rbx
   140010d55:	push   rdi
   140010d56:	sub    rsp,0x20
   140010d5a:	mov    rbx,rcx
   140010d5d:	test   rcx,rcx
   140010d60:	je     0x140010e50
   140010d66:	mov    rdi,QWORD PTR [rcx+0x60]
   140010d6a:	test   rdi,rdi
   140010d6d:	je     0x140010e50
   140010d73:	cmp    QWORD PTR [rcx+0x28],0x0
   140010d78:	je     0x140010e50
   140010d7e:	mov    r8,QWORD PTR [rcx+0x30]
   140010d82:	test   r8,r8
   140010d85:	je     0x140010e50
   140010d8b:	mov    eax,DWORD PTR [rcx+0x1c]
   140010d8e:	sub    eax,0x2
   140010d91:	cmp    eax,0x1
   140010d94:	ja     0x140010e50
   140010d9a:	mov    QWORD PTR [rsp+0x30],rsi
   140010d9f:	xor    esi,esi
   140010da1:	mov    QWORD PTR [rcx+0x60],rsi
   140010da5:	mov    rdx,QWORD PTR [rdi]
   140010da8:	mov    rcx,QWORD PTR [rcx+0x40]
   140010dac:	call   r8
   140010daf:	xor    eax,eax
   140010db1:	mov    QWORD PTR [rdi],rax
   140010db4:	mov    QWORD PTR [rdi+0x8],rax
   140010db8:	mov    QWORD PTR [rdi+0x10],rax
   140010dbc:	mov    QWORD PTR [rdi+0x18],rax
   140010dc0:	mov    rdx,QWORD PTR [rdi+0x20]
   140010dc4:	mov    rcx,QWORD PTR [rbx+0x40]
   140010dc8:	call   QWORD PTR [rbx+0x30]
   140010dcb:	xor    eax,eax
   140010dcd:	mov    QWORD PTR [rdi+0x20],rax
   140010dd1:	mov    QWORD PTR [rdi+0x28],rax
   140010dd5:	mov    QWORD PTR [rdi+0x30],rax
   140010dd9:	mov    QWORD PTR [rdi+0x38],rax
   140010ddd:	mov    rdx,QWORD PTR [rdi+0x40]
   140010de1:	mov    rcx,QWORD PTR [rbx+0x40]
   140010de5:	call   QWORD PTR [rbx+0x30]
   140010de8:	xor    eax,eax
   140010dea:	mov    QWORD PTR [rdi+0x40],rax
   140010dee:	mov    QWORD PTR [rdi+0x48],rax
   140010df2:	mov    QWORD PTR [rdi+0x50],rax
   140010df6:	mov    QWORD PTR [rdi+0x58],rax
   140010dfa:	mov    rcx,QWORD PTR [rdi+0x60]
   140010dfe:	test   rcx,rcx
   140010e01:	je     0x140010e0d
   140010e03:	call   QWORD PTR [rip+0x83f7]        # 0x140019200
   140010e09:	mov    QWORD PTR [rdi+0x60],rsi
   140010e0d:	lea    rax,[rip+0xffffffffffffc5cc]        # 0x14000d3e0
   140010e14:	cmp    QWORD PTR [rbx+0x50],rax
   140010e18:	jne    0x140010e2e
   140010e1a:	mov    rdx,QWORD PTR [rdi+0x68]
   140010e1e:	test   rdx,rdx
   140010e21:	je     0x140010e2e
   140010e23:	mov    rcx,QWORD PTR [rbx+0x40]
   140010e27:	call   QWORD PTR [rbx+0x30]
   140010e2a:	mov    QWORD PTR [rdi+0x68],rsi
   140010e2e:	mov    rcx,QWORD PTR [rbx+0x40]
   140010e32:	mov    rdx,rdi
   140010e35:	call   QWORD PTR [rbx+0x30]
   140010e38:	mov    DWORD PTR [rbx+0x1c],esi
   140010e3b:	mov    rsi,QWORD PTR [rsp+0x30]
   140010e40:	mov    eax,0x1
   140010e45:	mov    rbx,QWORD PTR [rsp+0x38]
   140010e4a:	add    rsp,0x20
   140010e4e:	pop    rdi
   140010e4f:	ret    
   140010e50:	xor    eax,eax
   140010e52:	mov    rbx,QWORD PTR [rsp+0x38]
   140010e57:	add    rsp,0x20
   140010e5b:	pop    rdi
   140010e5c:	ret    
   140010e5d:	int3   
   140010e5e:	int3   
   140010e5f:	int3   
   140010e60:	mov    QWORD PTR [rsp+0x18],rbx
   140010e65:	push   rsi
   140010e66:	sub    rsp,0x40
   140010e6a:	mov    rbx,rcx
   140010e6d:	test   rcx,rcx
   140010e70:	je     0x140010fc3
   140010e76:	mov    rsi,QWORD PTR [rcx+0x60]
   140010e7a:	test   rsi,rsi
   140010e7d:	je     0x140010fc3
   140010e83:	cmp    DWORD PTR [rcx+0x1c],0x2
   140010e87:	jne    0x140010fc3
   140010e8d:	mov    ecx,DWORD PTR [rcx+0x18]
   140010e90:	cmp    ecx,0xffff
   140010e96:	ja     0x140010fc3
   140010e9c:	mov    r8,QWORD PTR [rbx]
   140010e9f:	mov    rdx,QWORD PTR [rsi+0x8]
   140010ea3:	mov    r9d,0xffffffff
   140010ea9:	lea    rax,[r8+0x16]
   140010ead:	add    rax,rdx
   140010eb0:	cmp    rax,r9
   140010eb3:	ja     0x140010fc3
   140010eb9:	mov    QWORD PTR [rsp+0x50],rbp
   140010ebe:	xor    ebp,ebp
   140010ec0:	mov    QWORD PTR [rsp+0x58],rdi
   140010ec5:	mov    edi,ebp
   140010ec7:	test   ecx,ecx
   140010ec9:	je     0x140010ef1
   140010ecb:	mov    rcx,QWORD PTR [rbx+0x58]
   140010ecf:	mov    rbp,r8
   140010ed2:	mov    QWORD PTR [rbx+0x10],r8
   140010ed6:	mov    r8,QWORD PTR [rsi]
   140010ed9:	mov    rdi,rdx
   140010edc:	mov    r9,rdx
   140010edf:	mov    rdx,rbp
   140010ee2:	call   QWORD PTR [rbx+0x50]
   140010ee5:	cmp    rax,rdi
   140010ee8:	jne    0x140010f9a
   140010eee:	add    QWORD PTR [rbx],rdi
   140010ef1:	movzx  ecx,WORD PTR [rbx+0x18]
   140010ef5:	mov    rdx,QWORD PTR [rbx]
   140010ef8:	xor    eax,eax
   140010efa:	mov    QWORD PTR [rsp+0x28],rax
   140010eff:	mov    DWORD PTR [rsp+0x30],eax
   140010f03:	mov    QWORD PTR [rsp+0x20],rax
   140010f08:	mov    WORD PTR [rsp+0x34],ax
   140010f0d:	movzx  eax,cx
   140010f10:	mov    BYTE PTR [rsp+0x28],cl
   140010f14:	shr    ax,0x8
   140010f18:	mov    BYTE PTR [rsp+0x2a],cl
   140010f1c:	shr    cx,0x8
   140010f20:	mov    BYTE PTR [rsp+0x29],al
   140010f24:	mov    eax,edi
   140010f26:	mov    BYTE PTR [rsp+0x2b],cl
   140010f2a:	mov    rcx,QWORD PTR [rbx+0x58]
   140010f2e:	shr    eax,0x8
   140010f31:	mov    BYTE PTR [rsp+0x2c],dil
   140010f36:	mov    BYTE PTR [rsp+0x2d],al
   140010f3a:	mov    eax,edi
   140010f3c:	mov    BYTE PTR [rsp+0x30],bpl
   140010f41:	shr    eax,0x10
   140010f44:	lea    r8,[rsp+0x20]
   140010f49:	shr    edi,0x18
   140010f4c:	mov    BYTE PTR [rsp+0x2e],al
   140010f50:	mov    eax,ebp
   140010f52:	mov    r9d,0x16
   140010f58:	shr    eax,0x8
   140010f5b:	mov    DWORD PTR [rsp+0x20],0x6054b50
   140010f63:	mov    BYTE PTR [rsp+0x2f],dil
   140010f68:	mov    BYTE PTR [rsp+0x31],al
   140010f6c:	mov    eax,ebp
   140010f6e:	shr    ebp,0x18
   140010f71:	shr    eax,0x10
   140010f74:	mov    BYTE PTR [rsp+0x33],bpl
   140010f79:	mov    BYTE PTR [rsp+0x32],al
   140010f7d:	call   QWORD PTR [rbx+0x50]
   140010f80:	cmp    rax,0x16
   140010f84:	jne    0x140010f9a
   140010f86:	mov    rcx,QWORD PTR [rsi+0x60]
   140010f8a:	test   rcx,rcx
   140010f8d:	je     0x140010fb1
   140010f8f:	call   QWORD PTR [rip+0x8273]        # 0x140019208
   140010f95:	cmp    eax,0xffffffff
   140010f98:	jne    0x140010fb1
   140010f9a:	xor    eax,eax
   140010f9c:	mov    rbp,QWORD PTR [rsp+0x50]
   140010fa1:	mov    rdi,QWORD PTR [rsp+0x58]
   140010fa6:	mov    rbx,QWORD PTR [rsp+0x60]
   140010fab:	add    rsp,0x40
   140010faf:	pop    rsi
   140010fb0:	ret    
   140010fb1:	add    QWORD PTR [rbx],0x16
   140010fb5:	mov    DWORD PTR [rbx+0x1c],0x3
   140010fbc:	mov    eax,0x1
   140010fc1:	jmp    0x140010f9c
   140010fc3:	xor    eax,eax
   140010fc5:	mov    rbx,QWORD PTR [rsp+0x60]
   140010fca:	add    rsp,0x40
   140010fce:	pop    rsi
   140010fcf:	ret    
   140010fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140010fd5:	mov    QWORD PTR [rsp+0x10],rsi
   140010fda:	push   rdi
   140010fdb:	sub    rsp,0x20
   140010fdf:	mov    rdi,r8
   140010fe2:	mov    rsi,rdx
   140010fe5:	mov    rbx,rcx
   140010fe8:	test   rcx,rcx
   140010feb:	je     0x140011057
   140010fed:	cmp    QWORD PTR [rcx+0x60],0x0
   140010ff2:	je     0x140011057
   140010ff4:	test   rdx,rdx
   140010ff7:	je     0x140011057
   140010ff9:	test   r8,r8
   140010ffc:	je     0x140011057
   140010ffe:	lea    rax,[rip+0xffffffffffffc3db]        # 0x14000d3e0
   140011005:	cmp    QWORD PTR [rcx+0x50],rax
   140011009:	jne    0x140011057
   14001100b:	call   0x140010e60
   140011010:	test   eax,eax
   140011012:	je     0x140011057
   140011014:	mov    rax,QWORD PTR [rbx+0x60]
   140011018:	mov    rcx,QWORD PTR [rax+0x68]
   14001101c:	mov    QWORD PTR [rsi],rcx
   14001101f:	mov    rax,QWORD PTR [rbx+0x60]
   140011023:	mov    rcx,QWORD PTR [rax+0x70]
   140011027:	mov    QWORD PTR [rdi],rcx
   14001102a:	mov    rax,QWORD PTR [rbx+0x60]
   14001102e:	xor    ecx,ecx
   140011030:	mov    QWORD PTR [rax+0x68],rcx
   140011034:	mov    rax,QWORD PTR [rbx+0x60]
   140011038:	mov    QWORD PTR [rax+0x78],rcx
   14001103c:	mov    rax,QWORD PTR [rbx+0x60]
   140011040:	mov    QWORD PTR [rax+0x70],rcx
   140011044:	lea    eax,[rcx+0x1]
   140011047:	mov    rbx,QWORD PTR [rsp+0x30]
   14001104c:	mov    rsi,QWORD PTR [rsp+0x38]
   140011051:	add    rsp,0x20
   140011055:	pop    rdi
   140011056:	ret    
   140011057:	mov    rbx,QWORD PTR [rsp+0x30]
   14001105c:	mov    rsi,QWORD PTR [rsp+0x38]
   140011061:	xor    eax,eax
   140011063:	add    rsp,0x20
   140011067:	pop    rdi
   140011068:	ret    
   140011069:	int3   
   14001106a:	int3   
   14001106b:	int3   
   14001106c:	int3   
   14001106d:	int3   
   14001106e:	int3   
   14001106f:	int3   
   140011070:	rex push rbx
   140011072:	sub    rsp,0x20
   140011076:	mov    rbx,rcx
   140011079:	test   rcx,rcx
   14001107c:	je     0x140011150
   140011082:	cmp    QWORD PTR [rcx+0x60],0x0
   140011087:	jne    0x140011150
   14001108d:	cmp    QWORD PTR [rcx+0x50],0x0
   140011092:	je     0x140011150
   140011098:	cmp    DWORD PTR [rcx+0x1c],0x0
   14001109c:	jne    0x140011150
   1400110a2:	mov    ecx,DWORD PTR [rcx+0x20]
   1400110a5:	test   ecx,ecx
   1400110a7:	je     0x1400110b4
   1400110a9:	lea    eax,[rcx-0x1]
   1400110ac:	test   ecx,eax
   1400110ae:	jne    0x140011150
   1400110b4:	cmp    QWORD PTR [rbx+0x28],0x0
   1400110b9:	jne    0x1400110c6
   1400110bb:	lea    rax,[rip+0xffffffffffffad3e]        # 0x14000be00
   1400110c2:	mov    QWORD PTR [rbx+0x28],rax
   1400110c6:	cmp    QWORD PTR [rbx+0x30],0x0
   1400110cb:	jne    0x1400110d8
   1400110cd:	lea    rax,[rip+0xffffffffffffad3c]        # 0x14000be10
   1400110d4:	mov    QWORD PTR [rbx+0x30],rax
   1400110d8:	cmp    QWORD PTR [rbx+0x38],0x0
   1400110dd:	jne    0x1400110ea
   1400110df:	lea    rax,[rip+0xffffffffffffad3a]        # 0x14000be20
   1400110e6:	mov    QWORD PTR [rbx+0x38],rax
   1400110ea:	mov    rcx,QWORD PTR [rbx+0x40]
   1400110ee:	xor    eax,eax
   1400110f0:	mov    QWORD PTR [rbx],rdx
   1400110f3:	lea    edx,[rax+0x1]
   1400110f6:	mov    DWORD PTR [rbx+0x1c],0x2
   1400110fd:	mov    QWORD PTR [rbx+0x10],rax
   140011101:	lea    r8d,[rdx+0x7f]
   140011105:	mov    DWORD PTR [rbx+0x18],eax
   140011108:	call   QWORD PTR [rbx+0x28]
   14001110b:	mov    QWORD PTR [rbx+0x60],rax
   14001110f:	test   rax,rax
   140011112:	je     0x140011150
   140011114:	xor    edx,edx
   140011116:	mov    r8d,0x80
   14001111c:	mov    rcx,rax
   14001111f:	call   0x14001734c
   140011124:	mov    rcx,QWORD PTR [rbx+0x60]
   140011128:	mov    eax,0x1
   14001112d:	mov    DWORD PTR [rcx+0x18],0x1
   140011134:	mov    rcx,QWORD PTR [rbx+0x60]
   140011138:	mov    DWORD PTR [rcx+0x38],0x4
   14001113f:	mov    rcx,QWORD PTR [rbx+0x60]
   140011143:	mov    DWORD PTR [rcx+0x58],0x4
   14001114a:	add    rsp,0x20
   14001114e:	pop    rbx
   14001114f:	ret    
   140011150:	xor    eax,eax
   140011152:	add    rsp,0x20
   140011156:	pop    rbx
   140011157:	ret    
   140011158:	int3   
   140011159:	int3   
   14001115a:	int3   
   14001115b:	int3   
   14001115c:	int3   
   14001115d:	int3   
   14001115e:	int3   
   14001115f:	int3   
   140011160:	rex push rbx
   140011162:	push   rbp
   140011163:	push   rdi
   140011164:	mov    eax,0x1020
   140011169:	call   0x140017430
   14001116e:	sub    rsp,rax
   140011171:	lea    rax,[rip+0xffffffffffffc188]        # 0x14000d300
   140011178:	mov    rbx,rdx
   14001117b:	mov    rdx,r8
   14001117e:	mov    rdi,r8
   140011181:	mov    rbp,rcx
   140011184:	mov    QWORD PTR [rcx+0x58],rcx
   140011188:	mov    QWORD PTR [rcx+0x50],rax
   14001118c:	call   0x140011070
   140011191:	test   eax,eax
   140011193:	jne    0x1400111a0
   140011195:	add    rsp,0x1020
   14001119c:	pop    rdi
   14001119d:	pop    rbp
   14001119e:	pop    rbx
   14001119f:	ret    
   1400111a0:	mov    QWORD PTR [rsp+0x1048],rsi
   1400111a8:	lea    r8,[rip+0xac8d]        # 0x14001be3c
   1400111af:	lea    rcx,[rsp+0x1040]
   1400111b7:	xor    esi,esi
   1400111b9:	mov    rdx,rbx
   1400111bc:	mov    QWORD PTR [rsp+0x1040],rsi
   1400111c4:	call   QWORD PTR [rip+0x8156]        # 0x140019320
   1400111ca:	mov    rcx,QWORD PTR [rsp+0x1040]
   1400111d2:	test   rcx,rcx
   1400111d5:	jne    0x1400111e3
   1400111d7:	mov    rcx,rbp
   1400111da:	call   0x140010d50
   1400111df:	xor    eax,eax
   1400111e1:	jmp    0x140011246
   1400111e3:	mov    rax,QWORD PTR [rbp+0x60]
   1400111e7:	mov    QWORD PTR [rsp+0x1050],r14
   1400111ef:	mov    QWORD PTR [rax+0x60],rcx
   1400111f3:	test   rdi,rdi
   1400111f6:	je     0x140011239
   1400111f8:	mov    r14d,0x1000
   1400111fe:	lea    rcx,[rsp+0x20]
   140011203:	xor    edx,edx
   140011205:	mov    r8d,r14d
   140011208:	call   0x14001734c
   14001120d:	nop    DWORD PTR [rax]
   140011210:	mov    rcx,QWORD PTR [rbp+0x58]
   140011214:	mov    rbx,rdi
   140011217:	cmp    rdi,r14
   14001121a:	cmova  rbx,r14
   14001121e:	lea    r8,[rsp+0x20]
   140011223:	mov    rdx,rsi
   140011226:	mov    r9,rbx
   140011229:	call   QWORD PTR [rbp+0x50]
   14001122c:	cmp    rax,rbx
   14001122f:	jne    0x140011259
   140011231:	add    rsi,rbx
   140011234:	sub    rdi,rbx
   140011237:	jne    0x140011210
   140011239:	mov    eax,0x1
   14001123e:	mov    r14,QWORD PTR [rsp+0x1050]
   140011246:	mov    rsi,QWORD PTR [rsp+0x1048]
   14001124e:	add    rsp,0x1020
   140011255:	pop    rdi
   140011256:	pop    rbp
   140011257:	pop    rbx
   140011258:	ret    
   140011259:	mov    rcx,rbp
   14001125c:	call   0x140010d50
   140011261:	xor    eax,eax
   140011263:	jmp    0x14001123e
   140011265:	int3   
   140011266:	int3   
   140011267:	int3   
   140011268:	int3   
   140011269:	int3   
   14001126a:	int3   
   14001126b:	int3   
   14001126c:	int3   
   14001126d:	int3   
   14001126e:	int3   
   14001126f:	int3   
   140011270:	mov    QWORD PTR [rsp+0x18],rbx
   140011275:	push   rdi
   140011276:	sub    rsp,0x20
   14001127a:	mov    rbx,rcx
   14001127d:	test   rcx,rcx
   140011280:	je     0x140011379
   140011286:	mov    rdi,QWORD PTR [rcx+0x60]
   14001128a:	test   rdi,rdi
   14001128d:	je     0x140011379
   140011293:	cmp    DWORD PTR [rcx+0x1c],0x1
   140011297:	jne    0x140011379
   14001129d:	cmp    DWORD PTR [rcx+0x18],0xffff
   1400112a4:	je     0x140011379
   1400112aa:	mov    rax,QWORD PTR [rcx]
   1400112ad:	mov    ecx,0xffffffff
   1400112b2:	add    rax,0x4c
   1400112b6:	cmp    rax,rcx
   1400112b9:	ja     0x140011379
   1400112bf:	mov    QWORD PTR [rsp+0x38],rsi
   1400112c4:	xor    esi,esi
   1400112c6:	cmp    QWORD PTR [rdi+0x60],rsi
   1400112ca:	je     0x14001132b
   1400112cc:	cmp    QWORD PTR [rbx+0x58],rbx
   1400112d0:	jne    0x140011319
   1400112d2:	test   rdx,rdx
   1400112d5:	je     0x140011319
   1400112d7:	lea    rax,[rip+0xffffffffffffc022]        # 0x14000d300
   1400112de:	lea    r8,[rip+0xab5b]        # 0x14001be40
   1400112e5:	lea    rcx,[rsp+0x30]
   1400112ea:	mov    QWORD PTR [rbx+0x50],rax
   1400112ee:	mov    r9,QWORD PTR [rdi+0x60]
   1400112f2:	mov    QWORD PTR [rsp+0x30],rsi
   1400112f7:	call   QWORD PTR [rip+0x8033]        # 0x140019330
   1400112fd:	mov    rcx,QWORD PTR [rsp+0x30]
   140011302:	test   eax,eax
   140011304:	cmovne rcx,rsi
   140011308:	mov    QWORD PTR [rdi+0x60],rcx
   14001130c:	test   rcx,rcx
   14001130f:	jne    0x140011352
   140011311:	mov    rcx,rbx
   140011314:	call   0x14000d4f0
   140011319:	xor    eax,eax
   14001131b:	mov    rsi,QWORD PTR [rsp+0x38]
   140011320:	mov    rbx,QWORD PTR [rsp+0x40]
   140011325:	add    rsp,0x20
   140011329:	pop    rdi
   14001132a:	ret    
   14001132b:	cmp    QWORD PTR [rdi+0x68],rsi
   14001132f:	je     0x14001134c
   140011331:	cmp    QWORD PTR [rbx+0x58],rbx
   140011335:	jne    0x140011319
   140011337:	mov    rax,QWORD PTR [rdi+0x70]
   14001133b:	mov    QWORD PTR [rdi+0x78],rax
   14001133f:	lea    rax,[rip+0xffffffffffffc09a]        # 0x14000d3e0
   140011346:	mov    QWORD PTR [rbx+0x50],rax
   14001134a:	jmp    0x140011352
   14001134c:	cmp    QWORD PTR [rbx+0x50],rsi
   140011350:	je     0x140011319
   140011352:	mov    rax,QWORD PTR [rbx+0x10]
   140011356:	mov    QWORD PTR [rbx+0x10],rsi
   14001135a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001135f:	mov    QWORD PTR [rbx],rax
   140011362:	mov    DWORD PTR [rbx+0x1c],0x2
   140011369:	mov    eax,0x1
   14001136e:	mov    rbx,QWORD PTR [rsp+0x40]
   140011373:	add    rsp,0x20
   140011377:	pop    rdi
   140011378:	ret    
   140011379:	xor    eax,eax
   14001137b:	mov    rbx,QWORD PTR [rsp+0x40]
   140011380:	add    rsp,0x20
   140011384:	pop    rdi
   140011385:	ret    
   140011386:	int3   
   140011387:	int3   
   140011388:	int3   
   140011389:	int3   
   14001138a:	int3   
   14001138b:	int3   
   14001138c:	int3   
   14001138d:	int3   
   14001138e:	int3   
   14001138f:	int3   
   140011390:	mov    QWORD PTR [rsp+0x8],rbx
   140011395:	mov    QWORD PTR [rsp+0x10],rsi
   14001139a:	push   rdi
   14001139b:	sub    rsp,0x20
   14001139f:	lea    rax,[rip+0xffffffffffffc03a]        # 0x14000d3e0
   1400113a6:	mov    rsi,r8
   1400113a9:	mov    rdi,rdx
   1400113ac:	mov    rbx,rcx
   1400113af:	mov    QWORD PTR [rcx+0x58],rcx
   1400113b3:	mov    QWORD PTR [rcx+0x50],rax
   1400113b7:	call   0x140011070
   1400113bc:	test   eax,eax
   1400113be:	je     0x1400113f0
   1400113c0:	cmp    rsi,rdi
   1400113c3:	cmova  rdi,rsi
   1400113c7:	test   rdi,rdi
   1400113ca:	je     0x14001140a
   1400113cc:	mov    rcx,QWORD PTR [rbx+0x40]
   1400113d0:	mov    r8,rdi
   1400113d3:	mov    edx,0x1
   1400113d8:	call   QWORD PTR [rbx+0x28]
   1400113db:	mov    rcx,QWORD PTR [rbx+0x60]
   1400113df:	mov    QWORD PTR [rcx+0x68],rax
   1400113e3:	test   rax,rax
   1400113e6:	jne    0x140011402
   1400113e8:	mov    rcx,rbx
   1400113eb:	call   0x140010d50
   1400113f0:	xor    eax,eax
   1400113f2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400113f7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400113fc:	add    rsp,0x20
   140011400:	pop    rdi
   140011401:	ret    
   140011402:	mov    rcx,QWORD PTR [rbx+0x60]
   140011406:	mov    QWORD PTR [rcx+0x78],rdi
   14001140a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001140f:	mov    rsi,QWORD PTR [rsp+0x38]
   140011414:	mov    eax,0x1
   140011419:	add    rsp,0x20
   14001141d:	pop    rdi
   14001141e:	ret    
   14001141f:	int3   
   140011420:	movzx  eax,BYTE PTR [rcx]
   140011423:	cmp    al,0x2f
   140011425:	jne    0x14001142a
   140011427:	xor    eax,eax
   140011429:	ret    
   14001142a:	test   al,al
   14001142c:	je     0x140011443
   14001142e:	xchg   ax,ax
   140011430:	cmp    al,0x5c
   140011432:	je     0x140011427
   140011434:	cmp    al,0x3a
   140011436:	je     0x140011427
   140011438:	movzx  eax,BYTE PTR [rcx+0x1]
   14001143c:	inc    rcx
   14001143f:	test   al,al
   140011441:	jne    0x140011430
   140011443:	mov    eax,0x1
   140011448:	ret    
   140011449:	int3   
   14001144a:	int3   
   14001144b:	int3   
   14001144c:	int3   
   14001144d:	int3   
   14001144e:	int3   
   14001144f:	int3   
   140011450:	mov    QWORD PTR [rsp+0x18],rbx
   140011455:	push   rdi
   140011456:	push   r14
   140011458:	push   r15
   14001145a:	mov    eax,0x1020
   14001145f:	call   0x140017430
   140011464:	sub    rsp,rax
   140011467:	mov    r15d,0x1000
   14001146d:	mov    ebx,r8d
   140011470:	mov    rdi,rdx
   140011473:	cmp    r8d,r15d
   140011476:	mov    r8d,r15d
   140011479:	mov    r14,rcx
   14001147c:	ja     0x140011481
   14001147e:	mov    r8d,ebx
   140011481:	lea    rcx,[rsp+0x20]
   140011486:	xor    edx,edx
   140011488:	mov    QWORD PTR [rsp+0x1040],rbp
   140011490:	mov    QWORD PTR [rsp+0x1048],rsi
   140011498:	call   0x14001734c
   14001149d:	test   ebx,ebx
   14001149f:	je     0x1400114cb
   1400114a1:	mov    rcx,QWORD PTR [r14+0x58]
   1400114a5:	mov    esi,ebx
   1400114a7:	cmp    ebx,r15d
   1400114aa:	cmova  esi,r15d
   1400114ae:	lea    r8,[rsp+0x20]
   1400114b3:	mov    rdx,rdi
   1400114b6:	mov    r9d,esi
   1400114b9:	mov    ebp,esi
   1400114bb:	call   QWORD PTR [r14+0x50]
   1400114bf:	cmp    rax,rbp
   1400114c2:	jne    0x1400114f5
   1400114c4:	add    rdi,rbp
   1400114c7:	sub    ebx,esi
   1400114c9:	jne    0x1400114a1
   1400114cb:	mov    eax,0x1
   1400114d0:	mov    rsi,QWORD PTR [rsp+0x1048]
   1400114d8:	mov    rbp,QWORD PTR [rsp+0x1040]
   1400114e0:	mov    rbx,QWORD PTR [rsp+0x1050]
   1400114e8:	add    rsp,0x1020
   1400114ef:	pop    r15
   1400114f1:	pop    r14
   1400114f3:	pop    rdi
   1400114f4:	ret    
   1400114f5:	xor    eax,eax
   1400114f7:	jmp    0x1400114d0
   1400114f9:	int3   
   1400114fa:	int3   
   1400114fb:	int3   
   1400114fc:	int3   
   1400114fd:	int3   
   1400114fe:	int3   
   1400114ff:	int3   
   140011500:	rex push rbp
   140011502:	movsxd rbp,edx
   140011505:	mov    r11,rcx
   140011508:	test   edx,edx
   14001150a:	je     0x140011664
   140011510:	mov    r10d,0x1
   140011516:	cmp    ebp,r10d
   140011519:	jne    0x140011521
   14001151b:	mov    WORD PTR [rcx],r10w
   14001151f:	pop    rbp
   140011520:	ret    
   140011521:	movzx  eax,WORD PTR [rcx+0x4]
   140011525:	mov    QWORD PTR [rsp+0x10],rbx
   14001152a:	mov    QWORD PTR [rsp+0x18],rsi
   14001152f:	add    WORD PTR [rcx],ax
   140011532:	mov    QWORD PTR [rsp+0x20],rdi
   140011537:	lea    rdx,[rcx+0x4]
   14001153b:	lea    r8d,[rbp-0x1]
   14001153f:	mov    QWORD PTR [rsp+0x28],r14
   140011544:	xor    r14d,r14d
   140011547:	mov    ebx,r10d
   14001154a:	mov    esi,r14d
   14001154d:	lea    edi,[r14+0x2]
   140011551:	cmp    r8d,ebx
   140011554:	jle    0x1400115c2
   140011556:	lea    r9,[rcx+0x8]
   14001155a:	nop    WORD PTR [rax+rax*1+0x0]
   140011560:	cmp    edi,ebp
   140011562:	jge    0x140011578
   140011564:	movzx  eax,WORD PTR [r9]
   140011568:	cmp    WORD PTR [rcx],ax
   14001156b:	jb     0x140011578
   14001156d:	inc    edi
   14001156f:	mov    WORD PTR [rdx],ax
   140011572:	add    r9,0x4
   140011576:	jmp    0x140011588
   140011578:	movzx  eax,WORD PTR [rcx]
   14001157b:	inc    esi
   14001157d:	add    rcx,0x4
   140011581:	mov    WORD PTR [rdx],ax
   140011584:	mov    WORD PTR [rcx-0x4],bx
   140011588:	cmp    edi,ebp
   14001158a:	jge    0x1400115a8
   14001158c:	cmp    esi,ebx
   14001158e:	jge    0x140011599
   140011590:	movzx  eax,WORD PTR [r9]
   140011594:	cmp    WORD PTR [rcx],ax
   140011597:	jb     0x1400115a8
   140011599:	movzx  eax,WORD PTR [r9]
   14001159d:	inc    edi
   14001159f:	add    WORD PTR [rdx],ax
   1400115a2:	add    r9,0x4
   1400115a6:	jmp    0x1400115b7
   1400115a8:	movzx  eax,WORD PTR [rcx]
   1400115ab:	inc    esi
   1400115ad:	add    WORD PTR [rdx],ax
   1400115b0:	mov    WORD PTR [rcx],bx
   1400115b3:	add    rcx,0x4
   1400115b7:	inc    ebx
   1400115b9:	add    rdx,0x4
   1400115bd:	cmp    ebx,r8d
   1400115c0:	jl     0x140011560
   1400115c2:	mov    rdi,QWORD PTR [rsp+0x20]
   1400115c7:	mov    rsi,QWORD PTR [rsp+0x18]
   1400115cc:	mov    rbx,QWORD PTR [rsp+0x10]
   1400115d1:	lea    r9d,[rbp-0x3]
   1400115d5:	mov    WORD PTR [r11+rbp*4-0x8],r14w
   1400115db:	test   r9d,r9d
   1400115de:	js     0x140011608
   1400115e0:	movsxd rax,r9d
   1400115e3:	lea    rdx,[r11+rax*4]
   1400115e7:	nop    WORD PTR [rax+rax*1+0x0]
   1400115f0:	movzx  eax,WORD PTR [rdx]
   1400115f3:	lea    rdx,[rdx-0x4]
   1400115f7:	movzx  ecx,WORD PTR [r11+rax*4]
   1400115fc:	inc    cx
   1400115ff:	dec    r9d
   140011602:	mov    WORD PTR [rdx+0x4],cx
   140011606:	jns    0x1400115f0
   140011608:	lea    eax,[rbp-0x2]
   14001160b:	mov    r9d,r14d
   14001160e:	mov    edx,r14d
   140011611:	cdqe   
   140011613:	test   rax,rax
   140011616:	js     0x140011631
   140011618:	nop    DWORD PTR [rax+rax*1+0x0]
   140011620:	movzx  ecx,WORD PTR [r11+rax*4]
   140011625:	cmp    ecx,r9d
   140011628:	jne    0x140011631
   14001162a:	inc    edx
   14001162c:	dec    rax
   14001162f:	jns    0x140011620
   140011631:	cmp    r10d,edx
   140011634:	jle    0x140011650
   140011636:	sub    r10d,edx
   140011639:	nop    DWORD PTR [rax+0x0]
   140011640:	movsxd rcx,r8d
   140011643:	dec    r8d
   140011646:	mov    WORD PTR [r11+rcx*4],r9w
   14001164b:	dec    r10
   14001164e:	jne    0x140011640
   140011650:	lea    r10d,[rdx+rdx*1]
   140011654:	inc    r9d
   140011657:	mov    edx,r14d
   14001165a:	test   r10d,r10d
   14001165d:	jg     0x140011613
   14001165f:	mov    r14,QWORD PTR [rsp+0x28]
   140011664:	pop    rbp
   140011665:	ret    
   140011666:	int3   
   140011667:	int3   
   140011668:	int3   
   140011669:	int3   
   14001166a:	int3   
   14001166b:	int3   
   14001166c:	int3   
   14001166d:	int3   
   14001166e:	int3   
   14001166f:	int3   
   140011670:	mov    QWORD PTR [rsp+0x18],rbx
   140011675:	mov    QWORD PTR [rsp+0x20],rbp
   14001167a:	push   rdi
   14001167b:	sub    rsp,0x20
   14001167f:	xor    edi,edi
   140011681:	mov    rbp,rdx
   140011684:	mov    rbx,rcx
   140011687:	test   rcx,rcx
   14001168a:	jne    0x1400116b6
   14001168c:	test   r8,r8
   14001168f:	je     0x140011694
   140011691:	mov    QWORD PTR [r8],rdi
   140011694:	mov    rax,QWORD PTR [rsp+0x50]
   140011699:	test   rax,rax
   14001169c:	je     0x1400116a1
   14001169e:	mov    QWORD PTR [rax],rdi
   1400116a1:	mov    eax,0xfffffffe
   1400116a6:	mov    rbx,QWORD PTR [rsp+0x40]
   1400116ab:	mov    rbp,QWORD PTR [rsp+0x48]
   1400116b0:	add    rsp,0x20
   1400116b4:	pop    rdi
   1400116b5:	ret    
   1400116b6:	mov    QWORD PTR [rcx+0x88],rdx
   1400116bd:	mov    QWORD PTR [rcx+0x98],r8
   1400116c4:	mov    QWORD PTR [rcx+0x90],r9
   1400116cb:	mov    rcx,QWORD PTR [rsp+0x50]
   1400116d0:	mov    QWORD PTR [rsp+0x30],rsi
   1400116d5:	mov    QWORD PTR [rbx+0xb0],rdx
   1400116dc:	mov    QWORD PTR [rbx+0xa0],rcx
   1400116e3:	test   r8,r8
   1400116e6:	je     0x1400116ed
   1400116e8:	mov    rax,QWORD PTR [r8]
   1400116eb:	jmp    0x1400116f0
   1400116ed:	mov    rax,rdi
   1400116f0:	mov    esi,DWORD PTR [rsp+0x58]
   1400116f4:	mov    QWORD PTR [rbx+0xb8],rax
   1400116fb:	mov    QWORD PTR [rbx+0xc0],rdi
   140011702:	mov    DWORD PTR [rbx+0xa8],esi
   140011708:	test   r9,r9
   14001170b:	jne    0x140011714
   14001170d:	mov    edx,edi
   14001170f:	test   rcx,rcx
   140011712:	je     0x140011719
   140011714:	mov    edx,0x1
   140011719:	mov    eax,edi
   14001171b:	cmp    QWORD PTR [rbx],rax
   14001171e:	setne  al
   140011721:	cmp    eax,edx
   140011723:	je     0x140011881
   140011729:	cmp    DWORD PTR [rbx+0x84],edi
   14001172f:	jne    0x140011881
   140011735:	mov    edx,DWORD PTR [rbx+0x80]
   14001173b:	test   edx,edx
   14001173d:	je     0x140011748
   14001173f:	cmp    esi,0x4
   140011742:	jne    0x140011881
   140011748:	test   r8,r8
   14001174b:	je     0x14001175b
   14001174d:	cmp    QWORD PTR [r8],rdi
   140011750:	je     0x14001175b
   140011752:	test   rbp,rbp
   140011755:	je     0x140011881
   14001175b:	test   rcx,rcx
   14001175e:	je     0x14001176e
   140011760:	cmp    QWORD PTR [rcx],rdi
   140011763:	je     0x14001176e
   140011765:	test   r9,r9
   140011768:	je     0x140011881
   14001176e:	cmp    esi,0x4
   140011771:	mov    QWORD PTR [rsp+0x38],r14
   140011776:	mov    r14d,edi
   140011779:	sete   r14b
   14001177d:	mov    eax,r14d
   140011780:	or     eax,edx
   140011782:	mov    DWORD PTR [rbx+0x80],eax
   140011788:	cmp    DWORD PTR [rbx+0x74],edi
   14001178b:	jne    0x14001186e
   140011791:	cmp    DWORD PTR [rbx+0x78],edi
   140011794:	jne    0x14001186e
   14001179a:	mov    ecx,DWORD PTR [rbx+0x10]
   14001179d:	mov    eax,ecx
   14001179f:	and    eax,0xfff
   1400117a4:	cmp    eax,0x1
   1400117a7:	jne    0x1400117e3
   1400117a9:	bt     ecx,0xe
   1400117ad:	jae    0x1400117e3
   1400117af:	test   ecx,0xb0000
   1400117b5:	jne    0x1400117e3
   1400117b7:	mov    rcx,rbx
   1400117ba:	call   0x140011960
   1400117bf:	test   eax,eax
   1400117c1:	jne    0x1400117ef
   1400117c3:	mov    eax,DWORD PTR [rbx+0x84]
   1400117c9:	mov    r14,QWORD PTR [rsp+0x38]
   1400117ce:	mov    rsi,QWORD PTR [rsp+0x30]
   1400117d3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400117d8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400117dd:	add    rsp,0x20
   1400117e1:	pop    rdi
   1400117e2:	ret    
   1400117e3:	mov    rcx,rbx
   1400117e6:	call   0x1400125c0
   1400117eb:	test   eax,eax
   1400117ed:	je     0x1400117c3
   1400117ef:	test   DWORD PTR [rbx+0x10],0x3000
   1400117f6:	je     0x140011815
   1400117f8:	test   rbp,rbp
   1400117fb:	je     0x140011815
   1400117fd:	mov    r8,QWORD PTR [rbx+0xb0]
   140011804:	mov    ecx,DWORD PTR [rbx+0x20]
   140011807:	mov    rdx,rbp
   14001180a:	sub    r8,rbp
   14001180d:	call   0x14000be60
   140011812:	mov    DWORD PTR [rbx+0x20],eax
   140011815:	test   esi,esi
   140011817:	je     0x14001186e
   140011819:	cmp    DWORD PTR [rbx+0x28],edi
   14001181c:	jne    0x14001186e
   14001181e:	cmp    QWORD PTR [rbx+0xb8],rdi
   140011825:	jne    0x14001186e
   140011827:	cmp    DWORD PTR [rbx+0x74],edi
   14001182a:	jne    0x14001186e
   14001182c:	mov    edx,esi
   14001182e:	mov    rcx,rbx
   140011831:	call   0x1400132f0
   140011836:	test   eax,eax
   140011838:	js     0x1400117c3
   14001183a:	mov    DWORD PTR [rbx+0x78],r14d
   14001183e:	cmp    esi,0x3
   140011841:	jne    0x14001186e
   140011843:	lea    rcx,[rbx+0x292aa]
   14001184a:	xor    edx,edx
   14001184c:	mov    r8d,0x10000
   140011852:	call   0x14001734c
   140011857:	lea    rcx,[rbx+0x192aa]
   14001185e:	xor    edx,edx
   140011860:	mov    r8d,0x10000
   140011866:	call   0x14001734c
   14001186b:	mov    DWORD PTR [rbx+0x2c],edi
   14001186e:	mov    rcx,rbx
   140011871:	call   0x1400139e0
   140011876:	mov    DWORD PTR [rbx+0x84],eax
   14001187c:	jmp    0x1400117c9
   140011881:	test   r8,r8
   140011884:	je     0x140011889
   140011886:	mov    QWORD PTR [r8],rdi
   140011889:	test   rcx,rcx
   14001188c:	je     0x140011891
   14001188e:	mov    QWORD PTR [rcx],rdi
   140011891:	mov    DWORD PTR [rbx+0x84],0xfffffffe
   14001189b:	mov    eax,0xfffffffe
   1400118a0:	jmp    0x1400117ce
   1400118a5:	int3   
   1400118a6:	int3   
   1400118a7:	int3   
   1400118a8:	int3   
   1400118a9:	int3   
   1400118aa:	int3   
   1400118ab:	int3   
   1400118ac:	int3   
   1400118ad:	int3   
   1400118ae:	int3   
   1400118af:	int3   
   1400118b0:	rex push rbx
   1400118b2:	sub    rsp,0x20
   1400118b6:	mov    rbx,rcx
   1400118b9:	test   edx,edx
   1400118bb:	je     0x1400118cf
   1400118bd:	call   0x1400149f0
   1400118c2:	mov    rcx,rbx
   1400118c5:	add    rsp,0x20
   1400118c9:	pop    rbx
   1400118ca:	jmp    0x140011f20
   1400118cf:	call   0x140014350
   1400118d4:	mov    rcx,rbx
   1400118d7:	add    rsp,0x20
   1400118db:	pop    rbx
   1400118dc:	jmp    0x140011f20
   1400118e1:	int3   
   1400118e2:	int3   
   1400118e3:	int3   
   1400118e4:	int3   
   1400118e5:	int3   
   1400118e6:	int3   
   1400118e7:	int3   
   1400118e8:	int3   
   1400118e9:	int3   
   1400118ea:	int3   
   1400118eb:	int3   
   1400118ec:	int3   
   1400118ed:	int3   
   1400118ee:	int3   
   1400118ef:	int3   
   1400118f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400118f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400118fa:	mov    QWORD PTR [rsp+0x18],r8
   1400118ff:	push   rdi
   140011900:	sub    rsp,0x30
   140011904:	cmp    QWORD PTR [rcx],0x0
   140011908:	mov    edi,r9d
   14001190b:	mov    rsi,rdx
   14001190e:	mov    rbx,rcx
   140011911:	jne    0x14001192d
   140011913:	lea    rdx,[rip+0x9fc6]        # 0x14001b8e0
   14001191a:	lea    rcx,[rip+0xa4a7]        # 0x14001bdc8
   140011921:	mov    r8d,0xa87
   140011927:	call   QWORD PTR [rip+0x78eb]        # 0x140019218
   14001192d:	lea    r8,[rsp+0x50]
   140011932:	xor    r9d,r9d
   140011935:	mov    rdx,rsi
   140011938:	mov    rcx,rbx
   14001193b:	mov    DWORD PTR [rsp+0x28],edi
   14001193f:	mov    QWORD PTR [rsp+0x20],0x0
   140011948:	call   0x140011670
   14001194d:	mov    rbx,QWORD PTR [rsp+0x40]
   140011952:	mov    rsi,QWORD PTR [rsp+0x48]
   140011957:	add    rsp,0x30
   14001195b:	pop    rdi
   14001195c:	ret    
   14001195d:	int3   
   14001195e:	int3   
   14001195f:	int3   
   140011960:	rex push rbx
   140011962:	push   rbp
   140011963:	push   rsi
   140011964:	push   rdi
   140011965:	push   r12
   140011967:	push   r13
   140011969:	push   r14
   14001196b:	push   r15
   14001196d:	sub    rsp,0x38
   140011971:	mov    r10d,DWORD PTR [rcx+0x24]
   140011975:	mov    r13d,DWORD PTR [rcx+0x2c]
   140011979:	mov    edx,DWORD PTR [rcx+0x54]
   14001197c:	mov    r14d,DWORD PTR [rcx+0x50]
   140011980:	mov    r15d,DWORD PTR [rcx+0x28]
   140011984:	mov    rdi,QWORD PTR [rcx+0x30]
   140011988:	mov    r12,QWORD PTR [rcx+0x38]
   14001198c:	mov    r8d,r10d
   14001198f:	mov    rbx,rcx
   140011992:	and    r8d,0x7fff
   140011999:	mov    DWORD PTR [rsp+0x80],r10d
   1400119a1:	mov    DWORD PTR [rsp+0x20],r13d
   1400119a6:	mov    DWORD PTR [rsp+0x90],edx
   1400119ad:	mov    DWORD PTR [rsp+0x98],r14d
   1400119b5:	mov    DWORD PTR [rsp+0x88],r8d
   1400119bd:	nop    DWORD PTR [rax]
   1400119c0:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400119c7:	test   rcx,rcx
   1400119ca:	jne    0x1400119e1
   1400119cc:	cmp    DWORD PTR [rbx+0xa8],ecx
   1400119d2:	je     0x140011ee2
   1400119d8:	test   r15d,r15d
   1400119db:	je     0x140011ee2
   1400119e1:	mov    ebp,0x1000
   1400119e6:	lea    esi,[r15+r10*1]
   1400119ea:	sub    ebp,r15d
   1400119ed:	and    esi,0x7fff
   1400119f3:	cmp    rcx,rbp
   1400119f6:	jae    0x1400119fe
   1400119f8:	mov    ebp,DWORD PTR [rbx+0xb8]
   1400119fe:	mov    eax,ebp
   140011a00:	add    r15d,ebp
   140011a03:	sub    rcx,rax
   140011a06:	mov    QWORD PTR [rbx+0xb8],rcx
   140011a0d:	test   ebp,ebp
   140011a0f:	je     0x140011abd
   140011a15:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140011a20:	mov    rdx,QWORD PTR [rbx+0xb0]
   140011a27:	mov    eax,0x8000
   140011a2c:	mov    r14d,ebp
   140011a2f:	sub    eax,esi
   140011a31:	cmp    eax,ebp
   140011a33:	cmovb  r14d,eax
   140011a37:	mov    eax,esi
   140011a39:	add    rax,rbx
   140011a3c:	mov    r8d,r14d
   140011a3f:	mov    r13d,r14d
   140011a42:	lea    rcx,[rax+0xc8]
   140011a49:	mov    QWORD PTR [rsp+0x28],rax
   140011a4e:	call   0x140017346
   140011a53:	cmp    esi,0x101
   140011a59:	jae    0x140011a84
   140011a5b:	mov    rcx,QWORD PTR [rsp+0x28]
   140011a60:	mov    rdx,QWORD PTR [rbx+0xb0]
   140011a67:	mov    eax,0x101
   140011a6c:	sub    eax,esi
   140011a6e:	cmp    r14d,eax
   140011a71:	cmovb  eax,r14d
   140011a75:	add    rcx,0x80c8
   140011a7c:	mov    r8d,eax
   140011a7f:	call   0x140017346
   140011a84:	add    QWORD PTR [rbx+0xb0],r13
   140011a8b:	add    esi,r14d
   140011a8e:	and    esi,0x7fff
   140011a94:	sub    ebp,r14d
   140011a97:	jne    0x140011a20
   140011a99:	mov    r14d,DWORD PTR [rsp+0x98]
   140011aa1:	mov    r13d,DWORD PTR [rsp+0x20]
   140011aa6:	mov    edx,DWORD PTR [rsp+0x90]
   140011aad:	mov    r8d,DWORD PTR [rsp+0x88]
   140011ab5:	mov    r10d,DWORD PTR [rsp+0x80]
   140011abd:	mov    eax,0x8000
   140011ac2:	sub    eax,r15d
   140011ac5:	cmp    eax,r13d
   140011ac8:	cmovb  r13d,eax
   140011acc:	cmp    DWORD PTR [rbx+0xa8],0x0
   140011ad3:	mov    DWORD PTR [rsp+0x20],r13d
   140011ad8:	jne    0x140011ae7
   140011ada:	cmp    r15d,0x1000
   140011ae1:	jb     0x140011ee2
   140011ae7:	cmp    r15d,0x4
   140011aeb:	jb     0x140011dce
   140011af1:	mov    eax,r8d
   140011af4:	lea    rdx,[rbx+0xc8]
   140011afb:	mov    esi,0x1
   140011b00:	add    rdx,rax
   140011b03:	mov    r11d,DWORD PTR [rdx]
   140011b06:	and    r11d,0xffffff
   140011b0d:	mov    eax,r11d
   140011b10:	shr    eax,0x11
   140011b13:	xor    eax,r11d
   140011b16:	and    eax,0xfff
   140011b1b:	movzx  ecx,WORD PTR [rbx+rax*2+0x292aa]
   140011b23:	mov    WORD PTR [rbx+rax*2+0x292aa],r10w
   140011b2c:	movzx  eax,r10w
   140011b30:	sub    ax,cx
   140011b33:	movzx  ebp,ax
   140011b36:	cmp    ebp,r13d
   140011b39:	ja     0x140011cb2
   140011b3f:	and    ecx,0x7fff
   140011b45:	lea    r9,[rbx+0xc8]
   140011b4c:	mov    eax,ecx
   140011b4e:	add    r9,rax
   140011b51:	mov    eax,DWORD PTR [r9]
   140011b54:	and    eax,0xffffff
   140011b59:	cmp    eax,r11d
   140011b5c:	jne    0x140011cb2
   140011b62:	mov    rax,rdx
   140011b65:	lea    r10d,[rsi+0x1f]
   140011b69:	nop    DWORD PTR [rax+0x0]
   140011b70:	movzx  ecx,WORD PTR [r9+0x2]
   140011b75:	add    r9,0x2
   140011b79:	add    rax,0x2
   140011b7d:	cmp    WORD PTR [rax],cx
   140011b80:	jne    0x140011bbd
   140011b82:	movzx  ecx,WORD PTR [r9+0x2]
   140011b87:	add    r9,0x2
   140011b8b:	add    rax,0x2
   140011b8f:	cmp    WORD PTR [rax],cx
   140011b92:	jne    0x140011bbd
   140011b94:	movzx  ecx,WORD PTR [r9+0x2]
   140011b99:	add    r9,0x2
   140011b9d:	add    rax,0x2
   140011ba1:	cmp    WORD PTR [rax],cx
   140011ba4:	jne    0x140011bbd
   140011ba6:	movzx  ecx,WORD PTR [r9+0x2]
   140011bab:	add    r9,0x2
   140011baf:	add    rax,0x2
   140011bb3:	cmp    WORD PTR [rax],cx
   140011bb6:	jne    0x140011bbd
   140011bb8:	dec    r10d
   140011bbb:	jne    0x140011b70
   140011bbd:	movzx  ecx,BYTE PTR [r9]
   140011bc1:	mov    r8,rax
   140011bc4:	sub    r8,rdx
   140011bc7:	xor    edx,edx
   140011bc9:	sar    r8,1
   140011bcc:	cmp    BYTE PTR [rax],cl
   140011bce:	sete   dl
   140011bd1:	lea    eax,[rdx+r8*2]
   140011bd5:	test   r10d,r10d
   140011bd8:	jne    0x140011be5
   140011bda:	mov    eax,ebp
   140011bdc:	neg    eax
   140011bde:	sbb    eax,eax
   140011be0:	and    eax,0x102
   140011be5:	cmp    eax,0x3
   140011be8:	jb     0x140011ca2
   140011bee:	jne    0x140011bfc
   140011bf0:	cmp    ebp,0x2000
   140011bf6:	jae    0x140011ca2
   140011bfc:	cmp    eax,r15d
   140011bff:	mov    esi,r15d
   140011c02:	cmovb  esi,eax
   140011c05:	cmp    esi,0x3
   140011c08:	jb     0x140011c14
   140011c0a:	lea    eax,[rbp-0x1]
   140011c0d:	cmp    eax,0x7fff
   140011c12:	jbe    0x140011c2e
   140011c14:	lea    rdx,[rip+0x9cc5]        # 0x14001b8e0
   140011c1b:	lea    rcx,[rip+0x9f7e]        # 0x14001bba0
   140011c22:	mov    r8d,0x957
   140011c28:	call   QWORD PTR [rip+0x75ea]        # 0x140019218
   140011c2e:	mov    r10d,DWORD PTR [rsp+0x80]
   140011c36:	dec    ebp
   140011c38:	lea    r8,[rip+0xfffffffffffee3c1]        # 0x140000000
   140011c3f:	mov    WORD PTR [rdi+0x1],bp
   140011c43:	lea    eax,[rsi-0x3]
   140011c46:	add    rdi,0x3
   140011c4a:	mov    BYTE PTR [rdi-0x3],al
   140011c4d:	movzx  eax,BYTE PTR [r12]
   140011c52:	mov    edx,ebp
   140011c54:	shr    al,1
   140011c56:	shr    rdx,0x8
   140011c5a:	or     al,0x80
   140011c5c:	mov    BYTE PTR [r12],al
   140011c60:	mov    eax,ebp
   140011c62:	and    eax,0x1ff
   140011c67:	cmp    ebp,0x200
   140011c6d:	movzx  ecx,BYTE PTR [rax+r8*1+0x1b330]
   140011c76:	movzx  eax,BYTE PTR [rdx+r8*1+0x1b730]
   140011c7f:	cmovb  eax,ecx
   140011c82:	inc    WORD PTR [rbx+rax*2+0x840a]
   140011c8a:	lea    eax,[rsi-0x3]
   140011c8d:	mov    ecx,eax
   140011c8f:	movzx  eax,WORD PTR [r8+rax*2+0x1b030]
   140011c98:	mov    r8d,DWORD PTR [rsp+0x88]
   140011ca0:	jmp    0x140011cc0
   140011ca2:	mov    r8d,DWORD PTR [rsp+0x88]
   140011caa:	mov    r10d,DWORD PTR [rsp+0x80]
   140011cb2:	mov    BYTE PTR [rdi],r11b
   140011cb5:	inc    rdi
   140011cb8:	shr    BYTE PTR [r12],1
   140011cbc:	movzx  eax,r11b
   140011cc0:	inc    WORD PTR [rbx+rax*2+0x81ca]
   140011cc8:	dec    r14d
   140011ccb:	mov    DWORD PTR [rsp+0x98],r14d
   140011cd3:	jne    0x140011ce9
   140011cd5:	mov    r14d,0x8
   140011cdb:	mov    r12,rdi
   140011cde:	inc    rdi
   140011ce1:	mov    DWORD PTR [rsp+0x98],r14d
   140011ce9:	mov    edx,DWORD PTR [rsp+0x90]
   140011cf0:	lea    eax,[rsi+r13*1]
   140011cf4:	add    r10d,esi
   140011cf7:	add    edx,esi
   140011cf9:	mov    r13d,0x8000
   140011cff:	mov    DWORD PTR [rsp+0x80],r10d
   140011d07:	cmp    eax,r13d
   140011d0a:	mov    DWORD PTR [rsp+0x90],edx
   140011d11:	cmovb  r13d,eax
   140011d15:	add    r8d,esi
   140011d18:	and    r8d,0x7fff
   140011d1f:	mov    DWORD PTR [rsp+0x20],r13d
   140011d24:	mov    DWORD PTR [rsp+0x88],r8d
   140011d2c:	cmp    r15d,esi
   140011d2f:	jae    0x140011d5a
   140011d31:	lea    rdx,[rip+0x9ba8]        # 0x14001b8e0
   140011d38:	lea    rcx,[rip+0x9f41]        # 0x14001bc80
   140011d3f:	mov    r8d,0x974
   140011d45:	call   QWORD PTR [rip+0x74cd]        # 0x140019218
   140011d4b:	mov    edx,DWORD PTR [rsp+0x90]
   140011d52:	mov    r10d,DWORD PTR [rsp+0x80]
   140011d5a:	lea    rax,[rbx+0x192a2]
   140011d61:	sub    r15d,esi
   140011d64:	cmp    rdi,rax
   140011d67:	jbe    0x140011db4
   140011d69:	mov    DWORD PTR [rbx+0x54],edx
   140011d6c:	mov    rcx,rbx
   140011d6f:	xor    edx,edx
   140011d71:	mov    DWORD PTR [rbx+0x24],r10d
   140011d75:	mov    DWORD PTR [rbx+0x28],r15d
   140011d79:	mov    DWORD PTR [rbx+0x2c],r13d
   140011d7d:	mov    QWORD PTR [rbx+0x30],rdi
   140011d81:	mov    QWORD PTR [rbx+0x38],r12
   140011d85:	mov    DWORD PTR [rbx+0x50],r14d
   140011d89:	call   0x1400132f0
   140011d8e:	test   eax,eax
   140011d90:	jne    0x140011f04
   140011d96:	mov    edx,DWORD PTR [rbx+0x54]
   140011d99:	mov    r14d,DWORD PTR [rbx+0x50]
   140011d9d:	mov    rdi,QWORD PTR [rbx+0x30]
   140011da1:	mov    r12,QWORD PTR [rbx+0x38]
   140011da5:	mov    DWORD PTR [rsp+0x90],edx
   140011dac:	mov    DWORD PTR [rsp+0x98],r14d
   140011db4:	mov    r8d,DWORD PTR [rsp+0x88]
   140011dbc:	mov    r10d,DWORD PTR [rsp+0x80]
   140011dc4:	cmp    r15d,0x4
   140011dc8:	jae    0x140011af1
   140011dce:	mov    r8d,DWORD PTR [rsp+0x88]
   140011dd6:	mov    r10d,DWORD PTR [rsp+0x80]
   140011dde:	test   r15d,r15d
   140011de1:	je     0x1400119c0
   140011de7:	lea    rsi,[rbx+0x192a2]
   140011dee:	xchg   ax,ax
   140011df0:	inc    edx
   140011df2:	mov    eax,r8d
   140011df5:	inc    rdi
   140011df8:	movzx  ecx,BYTE PTR [rax+rbx*1+0xc8]
   140011e00:	mov    DWORD PTR [rsp+0x90],edx
   140011e07:	mov    BYTE PTR [rdi-0x1],cl
   140011e0a:	shr    BYTE PTR [r12],1
   140011e0e:	dec    r14d
   140011e11:	mov    DWORD PTR [rsp+0x98],r14d
   140011e19:	jne    0x140011e2f
   140011e1b:	mov    r14d,0x8
   140011e21:	mov    r12,rdi
   140011e24:	inc    rdi
   140011e27:	mov    DWORD PTR [rsp+0x98],r14d
   140011e2f:	mov    r10d,DWORD PTR [rsp+0x80]
   140011e37:	movzx  eax,cl
   140011e3a:	inc    WORD PTR [rbx+rax*2+0x81ca]
   140011e42:	inc    r10d
   140011e45:	lea    eax,[r13+0x1]
   140011e49:	mov    r13d,0x8000
   140011e4f:	mov    DWORD PTR [rsp+0x80],r10d
   140011e57:	cmp    eax,r13d
   140011e5a:	inc    r8d
   140011e5d:	cmovb  r13d,eax
   140011e61:	and    r8d,0x7fff
   140011e68:	dec    r15d
   140011e6b:	mov    DWORD PTR [rsp+0x88],r8d
   140011e73:	mov    DWORD PTR [rsp+0x20],r13d
   140011e78:	cmp    rdi,rsi
   140011e7b:	jbe    0x140011ed4
   140011e7d:	mov    DWORD PTR [rbx+0x54],edx
   140011e80:	mov    rcx,rbx
   140011e83:	xor    edx,edx
   140011e85:	mov    DWORD PTR [rbx+0x24],r10d
   140011e89:	mov    DWORD PTR [rbx+0x28],r15d
   140011e8d:	mov    DWORD PTR [rbx+0x2c],r13d
   140011e91:	mov    QWORD PTR [rbx+0x30],rdi
   140011e95:	mov    QWORD PTR [rbx+0x38],r12
   140011e99:	mov    DWORD PTR [rbx+0x50],r14d
   140011e9d:	call   0x1400132f0
   140011ea2:	test   eax,eax
   140011ea4:	jne    0x140011f04
   140011ea6:	mov    edx,DWORD PTR [rbx+0x54]
   140011ea9:	mov    r14d,DWORD PTR [rbx+0x50]
   140011ead:	mov    rdi,QWORD PTR [rbx+0x30]
   140011eb1:	mov    r12,QWORD PTR [rbx+0x38]
   140011eb5:	mov    r8d,DWORD PTR [rsp+0x88]
   140011ebd:	mov    r10d,DWORD PTR [rsp+0x80]
   140011ec5:	mov    DWORD PTR [rsp+0x90],edx
   140011ecc:	mov    DWORD PTR [rsp+0x98],r14d
   140011ed4:	test   r15d,r15d
   140011ed7:	jne    0x140011df0
   140011edd:	jmp    0x1400119c0
   140011ee2:	mov    DWORD PTR [rbx+0x24],r10d
   140011ee6:	mov    DWORD PTR [rbx+0x28],r15d
   140011eea:	mov    DWORD PTR [rbx+0x2c],r13d
   140011eee:	mov    DWORD PTR [rbx+0x54],edx
   140011ef1:	mov    QWORD PTR [rbx+0x30],rdi
   140011ef5:	mov    QWORD PTR [rbx+0x38],r12
   140011ef9:	mov    DWORD PTR [rbx+0x50],r14d
   140011efd:	mov    eax,0x1
   140011f02:	jmp    0x140011f0c
   140011f04:	mov    eax,0x0
   140011f09:	setns  al
   140011f0c:	add    rsp,0x38
   140011f10:	pop    r15
   140011f12:	pop    r14
   140011f14:	pop    r13
   140011f16:	pop    r12
   140011f18:	pop    rdi
   140011f19:	pop    rsi
   140011f1a:	pop    rbp
   140011f1b:	pop    rbx
   140011f1c:	ret    
   140011f1d:	int3   
   140011f1e:	int3   
   140011f1f:	int3   
   140011f20:	mov    QWORD PTR [rsp+0x20],rbx
   140011f25:	push   rbp
   140011f26:	push   rsi
   140011f27:	push   rdi
   140011f28:	push   r12
   140011f2a:	push   r13
   140011f2c:	push   r14
   140011f2e:	push   r15
   140011f30:	sub    rsp,0x20
   140011f34:	mov    r13,QWORD PTR [rcx+0x30]
   140011f38:	mov    r15,QWORD PTR [rcx+0x40]
   140011f3c:	mov    ebp,DWORD PTR [rcx+0x60]
   140011f3f:	mov    edi,DWORD PTR [rcx+0x5c]
   140011f42:	lea    rsi,[rcx+0x92aa]
   140011f49:	mov    r8d,0x1
   140011f4f:	mov    rbx,rcx
   140011f52:	mov    r14d,r8d
   140011f55:	lea    r10,[rip+0xfffffffffffee0a4]        # 0x140000000
   140011f5c:	cmp    rsi,r13
   140011f5f:	jae    0x14001220a
   140011f65:	cmp    r14d,0x1
   140011f69:	jne    0x140011f77
   140011f6b:	movzx  r14d,BYTE PTR [rsi]
   140011f6f:	bts    r14d,0x8
   140011f74:	inc    rsi
   140011f77:	movzx  eax,BYTE PTR [rsi]
   140011f7a:	mov    r12d,eax
   140011f7d:	test   r14b,0x1
   140011f81:	je     0x1400120d0
   140011f87:	movzx  r9d,WORD PTR [rsi+0x1]
   140011f8c:	movzx  eax,WORD PTR [r10+rax*2+0x1b030]
   140011f95:	add    rsi,0x3
   140011f99:	cmp    BYTE PTR [rax+rbx*1+0x8f4a],0x0
   140011fa1:	mov    DWORD PTR [rsp+0x60],r9d
   140011fa6:	jne    0x140011fce
   140011fa8:	lea    rdx,[rip+0x9931]        # 0x14001b8e0
   140011faf:	lea    rcx,[rip+0x9a1a]        # 0x14001b9d0
   140011fb6:	mov    r8d,0x7fa
   140011fbc:	call   QWORD PTR [rip+0x7256]        # 0x140019218
   140011fc2:	mov    r9d,DWORD PTR [rsp+0x60]
   140011fc7:	lea    r10,[rip+0xfffffffffffee032]        # 0x140000000
   140011fce:	movzx  edx,WORD PTR [r10+r12*2+0x1b030]
   140011fd7:	mov    ecx,edi
   140011fd9:	movzx  eax,WORD PTR [rbx+rdx*2+0x888a]
   140011fe1:	shl    rax,cl
   140011fe4:	or     rbp,rax
   140011fe7:	movzx  eax,BYTE PTR [rdx+rbx*1+0x8f4a]
   140011fef:	movzx  edx,BYTE PTR [r12+r10*1+0x1b230]
   140011ff8:	add    edi,eax
   140011ffa:	mov    eax,DWORD PTR [r10+rdx*4+0x1afa0]
   140012002:	and    rax,r12
   140012005:	mov    ecx,edi
   140012007:	add    edi,edx
   140012009:	shl    rax,cl
   14001200c:	mov    ecx,r9d
   14001200f:	or     rbp,rax
   140012012:	mov    eax,r9d
   140012015:	mov    QWORD PTR [rsp+0x70],rcx
   14001201a:	and    eax,0x1ff
   14001201f:	movzx  edx,BYTE PTR [rax+r10*1+0x1b330]
   140012028:	movzx  r8d,BYTE PTR [rax+r10*1+0x1b530]
   140012031:	mov    eax,r9d
   140012034:	shr    rax,0x8
   140012038:	cmp    r9d,0x200
   14001203f:	movzx  ecx,BYTE PTR [rax+r10*1+0x1b730]
   140012048:	movzx  r12d,BYTE PTR [rax+r10*1+0x1b7b0]
   140012051:	cmovb  ecx,edx
   140012054:	cmovb  r12d,r8d
   140012058:	mov    eax,ecx
   14001205a:	lea    rcx,[rbx+0x906a]
   140012061:	add    rcx,rax
   140012064:	mov    QWORD PTR [rsp+0x60],rax
   140012069:	cmp    BYTE PTR [rcx],0x0
   14001206c:	mov    QWORD PTR [rsp+0x68],rcx
   140012071:	jne    0x140012099
   140012073:	lea    rdx,[rip+0x9866]        # 0x14001b8e0
   14001207a:	lea    rcx,[rip+0x99b7]        # 0x14001ba38
   140012081:	mov    r8d,0x806
   140012087:	call   QWORD PTR [rip+0x718b]        # 0x140019218
   14001208d:	mov    rax,QWORD PTR [rsp+0x60]
   140012092:	lea    r10,[rip+0xfffffffffffedf67]        # 0x140000000
   140012099:	movzx  eax,WORD PTR [rbx+rax*2+0x8aca]
   1400120a1:	mov    edx,DWORD PTR [r10+r12*4+0x1afa0]
   1400120a9:	mov    ecx,edi
   1400120ab:	and    rdx,QWORD PTR [rsp+0x70]
   1400120b0:	shl    rax,cl
   1400120b3:	or     rbp,rax
   1400120b6:	mov    rax,QWORD PTR [rsp+0x68]
   1400120bb:	movzx  eax,BYTE PTR [rax]
   1400120be:	add    edi,eax
   1400120c0:	mov    ecx,edi
   1400120c2:	shl    rdx,cl
   1400120c5:	or     rbp,rdx
   1400120c8:	add    edi,r12d
   1400120cb:	jmp    0x1400121c9
   1400120d0:	inc    rsi
   1400120d3:	cmp    BYTE PTR [rax+rbx*1+0x8f4a],0x0
   1400120db:	jne    0x1400120f7
   1400120dd:	lea    rdx,[rip+0x97fc]        # 0x14001b8e0
   1400120e4:	lea    rcx,[rip+0x998d]        # 0x14001ba78
   1400120eb:	mov    r8d,0x80d
   1400120f1:	call   QWORD PTR [rip+0x7121]        # 0x140019218
   1400120f7:	movzx  eax,WORD PTR [rbx+r12*2+0x888a]
   140012100:	mov    ecx,edi
   140012102:	shl    rax,cl
   140012105:	or     rbp,rax
   140012108:	movzx  eax,BYTE PTR [r12+rbx*1+0x8f4a]
   140012111:	add    edi,eax
   140012113:	test   r14b,0x2
   140012117:	jne    0x1400121c9
   14001211d:	cmp    rsi,r13
   140012120:	jae    0x1400121c9
   140012126:	movzx  eax,BYTE PTR [rsi]
   140012129:	shr    r14d,1
   14001212c:	inc    rsi
   14001212f:	cmp    BYTE PTR [rax+rbx*1+0x8f4a],0x0
   140012137:	mov    r12d,eax
   14001213a:	jne    0x140012156
   14001213c:	lea    rdx,[rip+0x979d]        # 0x14001b8e0
   140012143:	lea    rcx,[rip+0x992e]        # 0x14001ba78
   14001214a:	mov    r8d,0x814
   140012150:	call   QWORD PTR [rip+0x70c2]        # 0x140019218
   140012156:	movzx  eax,WORD PTR [rbx+r12*2+0x888a]
   14001215f:	mov    ecx,edi
   140012161:	shl    rax,cl
   140012164:	or     rbp,rax
   140012167:	movzx  eax,BYTE PTR [r12+rbx*1+0x8f4a]
   140012170:	add    edi,eax
   140012172:	test   r14b,0x2
   140012176:	jne    0x1400121c9
   140012178:	cmp    rsi,r13
   14001217b:	jae    0x1400121c9
   14001217d:	movzx  eax,BYTE PTR [rsi]
   140012180:	shr    r14d,1
   140012183:	inc    rsi
   140012186:	cmp    BYTE PTR [rax+rbx*1+0x8f4a],0x0
   14001218e:	mov    r12d,eax
   140012191:	jne    0x1400121ad
   140012193:	lea    rdx,[rip+0x9746]        # 0x14001b8e0
   14001219a:	lea    rcx,[rip+0x98d7]        # 0x14001ba78
   1400121a1:	mov    r8d,0x81b
   1400121a7:	call   QWORD PTR [rip+0x706b]        # 0x140019218
   1400121ad:	movzx  eax,WORD PTR [rbx+r12*2+0x888a]
   1400121b6:	mov    ecx,edi
   1400121b8:	shl    rax,cl
   1400121bb:	or     rbp,rax
   1400121be:	movzx  eax,BYTE PTR [r12+rbx*1+0x8f4a]
   1400121c7:	add    edi,eax
   1400121c9:	cmp    r15,QWORD PTR [rbx+0x48]
   1400121cd:	jae    0x140012346
   1400121d3:	mov    ecx,edi
   1400121d5:	mov    eax,edi
   1400121d7:	mov    QWORD PTR [r15],rbp
   1400121da:	shr    rax,0x3
   1400121de:	and    cl,0xf8
   1400121e1:	and    edi,0x7
   1400121e4:	shr    r14d,1
   1400121e7:	add    r15,rax
   1400121ea:	shr    rbp,cl
   1400121ed:	lea    r10,[rip+0xfffffffffffede0c]        # 0x140000000
   1400121f4:	cmp    rsi,r13
   1400121f7:	jb     0x140011f65
   1400121fd:	mov    r8d,0x1
   140012203:	lea    r10,[rip+0xfffffffffffeddf6]        # 0x140000000
   14001220a:	xor    r12d,r12d
   14001220d:	mov    QWORD PTR [rbx+0x40],r15
   140012211:	mov    QWORD PTR [rbx+0x5c],r12
   140012215:	test   edi,edi
   140012217:	je     0x1400122b4
   14001221d:	nop    DWORD PTR [rax]
   140012220:	mov    r14d,0x10
   140012226:	mov    eax,r8d
   140012229:	cmp    edi,r14d
   14001222c:	cmovb  r14d,edi
   140012230:	mov    ecx,r14d
   140012233:	mov    r15d,r14d
   140012236:	mov    esi,DWORD PTR [r10+r14*4+0x1afa0]
   14001223e:	shl    eax,cl
   140012240:	and    esi,ebp
   140012242:	dec    eax
   140012244:	cmp    esi,eax
   140012246:	jbe    0x14001226f
   140012248:	lea    rdx,[rip+0x9691]        # 0x14001b8e0
   14001224f:	lea    rcx,[rip+0x9702]        # 0x14001b958
   140012256:	mov    r8d,0x833
   14001225c:	call   QWORD PTR [rip+0x6fb6]        # 0x140019218
   140012262:	mov    r8d,0x1
   140012268:	lea    r10,[rip+0xfffffffffffedd91]        # 0x140000000
   14001226f:	mov    ecx,DWORD PTR [rbx+0x5c]
   140012272:	shl    esi,cl
   140012274:	or     DWORD PTR [rbx+0x60],esi
   140012277:	lea    eax,[rcx+r14*1]
   14001227b:	mov    DWORD PTR [rbx+0x5c],eax
   14001227e:	cmp    eax,0x8
   140012281:	jb     0x1400122a5
   140012283:	mov    rdx,QWORD PTR [rbx+0x40]
   140012287:	cmp    rdx,QWORD PTR [rbx+0x48]
   14001228b:	jae    0x140012297
   14001228d:	movzx  eax,BYTE PTR [rbx+0x60]
   140012291:	mov    BYTE PTR [rdx],al
   140012293:	inc    QWORD PTR [rbx+0x40]
   140012297:	shr    DWORD PTR [rbx+0x60],0x8
   14001229b:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001229f:	cmp    DWORD PTR [rbx+0x5c],0x8
   1400122a3:	jae    0x140012283
   1400122a5:	mov    rcx,r15
   1400122a8:	shr    rbp,cl
   1400122ab:	sub    edi,r14d
   1400122ae:	jne    0x140012220
   1400122b4:	movzx  esi,BYTE PTR [rbx+0x904a]
   1400122bb:	movzx  edi,WORD PTR [rbx+0x8a8a]
   1400122c2:	mov    ecx,esi
   1400122c4:	shl    r8d,cl
   1400122c7:	dec    r8d
   1400122ca:	cmp    edi,r8d
   1400122cd:	jbe    0x1400122e9
   1400122cf:	lea    rdx,[rip+0x960a]        # 0x14001b8e0
   1400122d6:	lea    rcx,[rip+0x967b]        # 0x14001b958
   1400122dd:	mov    r8d,0x838
   1400122e3:	call   QWORD PTR [rip+0x6f2f]        # 0x140019218
   1400122e9:	mov    ecx,DWORD PTR [rbx+0x5c]
   1400122ec:	shl    edi,cl
   1400122ee:	or     DWORD PTR [rbx+0x60],edi
   1400122f1:	lea    eax,[rcx+rsi*1]
   1400122f4:	mov    DWORD PTR [rbx+0x5c],eax
   1400122f7:	cmp    eax,0x8
   1400122fa:	jb     0x140012322
   1400122fc:	nop    DWORD PTR [rax+0x0]
   140012300:	mov    rcx,QWORD PTR [rbx+0x40]
   140012304:	cmp    rcx,QWORD PTR [rbx+0x48]
   140012308:	jae    0x140012314
   14001230a:	movzx  eax,BYTE PTR [rbx+0x60]
   14001230e:	mov    BYTE PTR [rcx],al
   140012310:	inc    QWORD PTR [rbx+0x40]
   140012314:	shr    DWORD PTR [rbx+0x60],0x8
   140012318:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001231c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140012320:	jae    0x140012300
   140012322:	mov    rcx,QWORD PTR [rbx+0x48]
   140012326:	cmp    QWORD PTR [rbx+0x40],rcx
   14001232a:	setb   r12b
   14001232e:	mov    eax,r12d
   140012331:	mov    rbx,QWORD PTR [rsp+0x78]
   140012336:	add    rsp,0x20
   14001233a:	pop    r15
   14001233c:	pop    r14
   14001233e:	pop    r13
   140012340:	pop    r12
   140012342:	pop    rdi
   140012343:	pop    rsi
   140012344:	pop    rbp
   140012345:	ret    
   140012346:	xor    eax,eax
   140012348:	jmp    0x140012331
   14001234a:	int3   
   14001234b:	int3   
   14001234c:	int3   
   14001234d:	int3   
   14001234e:	int3   
   14001234f:	int3   
   140012350:	mov    r11,rsp
   140012353:	mov    QWORD PTR [r11+0x20],rbp
   140012357:	push   rsi
   140012358:	push   r14
   14001235a:	push   r15
   14001235c:	sub    rsp,0x40
   140012360:	xor    eax,eax
   140012362:	mov    r15d,r9d
   140012365:	mov    rsi,r8
   140012368:	mov    rbp,rdx
   14001236b:	mov    r14,rcx
   14001236e:	mov    QWORD PTR [r11-0x38],rax
   140012372:	mov    QWORD PTR [r11-0x30],rax
   140012376:	mov    QWORD PTR [r11-0x28],rax
   14001237a:	mov    QWORD PTR [r11-0x20],rax
   14001237e:	test   r8,r8
   140012381:	je     0x140012424
   140012387:	mov    QWORD PTR [r11+0x8],rbx
   14001238b:	mov    ebx,0x1
   140012390:	mov    QWORD PTR [r11+0x10],rdi
   140012394:	mov    QWORD PTR [r11+0x18],r12
   140012398:	mov    QWORD PTR [r8],rax
   14001239b:	mov    DWORD PTR [rsp+0x38],ebx
   14001239f:	test   rdx,rdx
   1400123a2:	je     0x1400123a9
   1400123a4:	test   rcx,rcx
   1400123a7:	je     0x140012413
   1400123a9:	lea    r12,[rip+0x1c30]        # 0x140013fe0
   1400123b0:	test   r12,r12
   1400123b3:	je     0x140012413
   1400123b5:	mov    ecx,0x4df78
   1400123ba:	call   QWORD PTR [rip+0x6f38]        # 0x1400192f8
   1400123c0:	mov    rdi,rax
   1400123c3:	test   rax,rax
   1400123c6:	je     0x140012413
   1400123c8:	lea    r8,[rsp+0x20]
   1400123cd:	mov    r9d,r15d
   1400123d0:	mov    rdx,r12
   1400123d3:	mov    rcx,rax
   1400123d6:	call   0x140013bd0
   1400123db:	test   eax,eax
   1400123dd:	jne    0x1400123f5
   1400123df:	lea    r9d,[rax+0x4]
   1400123e3:	mov    r8,rbp
   1400123e6:	mov    rdx,r14
   1400123e9:	mov    rcx,rdi
   1400123ec:	call   0x1400118f0
   1400123f1:	cmp    eax,ebx
   1400123f3:	je     0x1400123f7
   1400123f5:	xor    ebx,ebx
   1400123f7:	mov    rcx,rdi
   1400123fa:	call   QWORD PTR [rip+0x6ef0]        # 0x1400192f0
   140012400:	test   ebx,ebx
   140012402:	je     0x140012413
   140012404:	mov    rax,QWORD PTR [rsp+0x20]
   140012409:	mov    QWORD PTR [rsi],rax
   14001240c:	mov    rax,QWORD PTR [rsp+0x30]
   140012411:	jmp    0x140012415
   140012413:	xor    eax,eax
   140012415:	mov    rdi,QWORD PTR [rsp+0x68]
   14001241a:	mov    rbx,QWORD PTR [rsp+0x60]
   14001241f:	mov    r12,QWORD PTR [rsp+0x70]
   140012424:	mov    rbp,QWORD PTR [rsp+0x78]
   140012429:	add    rsp,0x40
   14001242d:	pop    r15
   14001242f:	pop    r14
   140012431:	pop    rsi
   140012432:	ret    
   140012433:	int3   
   140012434:	int3   
   140012435:	int3   
   140012436:	int3   
   140012437:	int3   
   140012438:	int3   
   140012439:	int3   
   14001243a:	int3   
   14001243b:	int3   
   14001243c:	int3   
   14001243d:	int3   
   14001243e:	int3   
   14001243f:	int3   
   140012440:	mov    r11,rsp
   140012443:	mov    QWORD PTR [r11+0x18],rsi
   140012447:	push   rdi
   140012448:	sub    rsp,0x40
   14001244c:	xor    eax,eax
   14001244e:	mov    rsi,r9
   140012451:	mov    rdi,r8
   140012454:	mov    QWORD PTR [r11-0x28],rax
   140012458:	mov    QWORD PTR [r11-0x20],rax
   14001245c:	mov    QWORD PTR [r11-0x18],rax
   140012460:	mov    QWORD PTR [r11-0x10],rax
   140012464:	test   rcx,rcx
   140012467:	je     0x1400124fc
   14001246d:	mov    QWORD PTR [r11+0x8],rbx
   140012471:	mov    QWORD PTR [r11-0x18],rcx
   140012475:	mov    QWORD PTR [r11-0x20],rdx
   140012479:	mov    QWORD PTR [r11+0x10],rbp
   14001247d:	test   r9,r9
   140012480:	je     0x140012487
   140012482:	test   r8,r8
   140012485:	je     0x1400124f0
   140012487:	lea    rbp,[rip+0x1b52]        # 0x140013fe0
   14001248e:	test   rbp,rbp
   140012491:	je     0x1400124f0
   140012493:	mov    ecx,0x4df78
   140012498:	call   QWORD PTR [rip+0x6e5a]        # 0x1400192f8
   14001249e:	mov    rbx,rax
   1400124a1:	test   rax,rax
   1400124a4:	je     0x1400124f0
   1400124a6:	mov    r9d,DWORD PTR [rsp+0x70]
   1400124ab:	lea    r8,[rsp+0x20]
   1400124b0:	mov    rdx,rbp
   1400124b3:	mov    rcx,rax
   1400124b6:	call   0x140013bd0
   1400124bb:	test   eax,eax
   1400124bd:	jne    0x1400124da
   1400124bf:	lea    r9d,[rax+0x4]
   1400124c3:	mov    r8,rsi
   1400124c6:	mov    rdx,rdi
   1400124c9:	mov    rcx,rbx
   1400124cc:	call   0x1400118f0
   1400124d1:	cmp    eax,0x1
   1400124d4:	jne    0x1400124da
   1400124d6:	mov    edi,eax
   1400124d8:	jmp    0x1400124dc
   1400124da:	xor    edi,edi
   1400124dc:	mov    rcx,rbx
   1400124df:	call   QWORD PTR [rip+0x6e0b]        # 0x1400192f0
   1400124e5:	test   edi,edi
   1400124e7:	je     0x1400124f0
   1400124e9:	mov    rax,QWORD PTR [rsp+0x20]
   1400124ee:	jmp    0x1400124f2
   1400124f0:	xor    eax,eax
   1400124f2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400124f7:	mov    rbp,QWORD PTR [rsp+0x58]
   1400124fc:	mov    rsi,QWORD PTR [rsp+0x60]
   140012501:	add    rsp,0x40
   140012505:	pop    rdi
   140012506:	ret    
   140012507:	int3   
   140012508:	int3   
   140012509:	int3   
   14001250a:	int3   
   14001250b:	int3   
   14001250c:	int3   
   14001250d:	int3   
   14001250e:	int3   
   14001250f:	int3   
   140012510:	mov    QWORD PTR [rsp+0x10],rbx
   140012515:	mov    QWORD PTR [rsp+0x18],rbp
   14001251a:	mov    QWORD PTR [rsp+0x20],rsi
   14001251f:	push   r14
   140012521:	sub    rsp,0x20
   140012525:	mov    r14,r9
   140012528:	mov    rsi,r8
   14001252b:	mov    rbp,rdx
   14001252e:	mov    rbx,rcx
   140012531:	test   rdx,rdx
   140012534:	je     0x14001253b
   140012536:	test   rcx,rcx
   140012539:	je     0x140012540
   14001253b:	test   r8,r8
   14001253e:	jne    0x140012544
   140012540:	xor    eax,eax
   140012542:	jmp    0x1400125a0
   140012544:	mov    ecx,0x4df78
   140012549:	mov    QWORD PTR [rsp+0x30],rdi
   14001254e:	call   QWORD PTR [rip+0x6da4]        # 0x1400192f8
   140012554:	mov    rdi,rax
   140012557:	test   rax,rax
   14001255a:	je     0x14001259b
   14001255c:	mov    r9d,DWORD PTR [rsp+0x50]
   140012561:	mov    r8,r14
   140012564:	mov    rdx,rsi
   140012567:	mov    rcx,rax
   14001256a:	call   0x140013bd0
   14001256f:	test   eax,eax
   140012571:	jne    0x14001258e
   140012573:	lea    r9d,[rax+0x4]
   140012577:	mov    r8,rbp
   14001257a:	mov    rdx,rbx
   14001257d:	mov    rcx,rdi
   140012580:	call   0x1400118f0
   140012585:	cmp    eax,0x1
   140012588:	jne    0x14001258e
   14001258a:	mov    ebx,eax
   14001258c:	jmp    0x140012590
   14001258e:	xor    ebx,ebx
   140012590:	mov    rcx,rdi
   140012593:	call   QWORD PTR [rip+0x6d57]        # 0x1400192f0
   140012599:	mov    eax,ebx
   14001259b:	mov    rdi,QWORD PTR [rsp+0x30]
   1400125a0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400125a5:	mov    rbp,QWORD PTR [rsp+0x40]
   1400125aa:	mov    rsi,QWORD PTR [rsp+0x48]
   1400125af:	add    rsp,0x20
   1400125b3:	pop    r14
   1400125b5:	ret    
   1400125b6:	int3   
   1400125b7:	int3   
   1400125b8:	int3   
   1400125b9:	int3   
   1400125ba:	int3   
   1400125bb:	int3   
   1400125bc:	int3   
   1400125bd:	int3   
   1400125be:	int3   
   1400125bf:	int3   
   1400125c0:	rex push rbx
   1400125c2:	push   rbp
   1400125c3:	push   rsi
   1400125c4:	push   rdi
   1400125c5:	push   r12
   1400125c7:	push   r13
   1400125c9:	push   r14
   1400125cb:	push   r15
   1400125cd:	sub    rsp,0x58
   1400125d1:	mov    r13,QWORD PTR [rcx+0xb0]
   1400125d8:	mov    rdi,QWORD PTR [rcx+0xb8]
   1400125df:	movsxd rsi,DWORD PTR [rcx+0xa8]
   1400125e6:	mov    QWORD PTR [rsp+0x28],r13
   1400125eb:	mov    QWORD PTR [rsp+0x30],rdi
   1400125f0:	mov    QWORD PTR [rsp+0x40],rsi
   1400125f5:	mov    rbx,rcx
   1400125f8:	xor    r10d,r10d
   1400125fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140012600:	test   rdi,rdi
   140012603:	jne    0x140012617
   140012605:	test   rsi,rsi
   140012608:	je     0x140012fb6
   14001260e:	cmp    DWORD PTR [rbx+0x28],edi
   140012611:	je     0x140012fb6
   140012617:	mov    edx,DWORD PTR [rbx+0x28]
   14001261a:	mov    ecx,DWORD PTR [rbx+0x2c]
   14001261d:	add    ecx,edx
   14001261f:	cmp    ecx,0x2
   140012622:	jb     0x1400127dc
   140012628:	mov    ecx,DWORD PTR [rbx+0x24]
   14001262b:	add    ecx,edx
   14001262d:	mov    r8d,ecx
   140012630:	lea    r10d,[rcx-0x2]
   140012634:	and    r8d,0x7fff
   14001263b:	mov    eax,r10d
   14001263e:	and    eax,0x7fff
   140012643:	movzx  r9d,BYTE PTR [rax+rbx*1+0xc8]
   14001264c:	lea    eax,[r10+0x1]
   140012650:	and    eax,0x7fff
   140012655:	shl    r9d,0x5
   140012659:	movzx  ecx,BYTE PTR [rax+rbx*1+0xc8]
   140012661:	xor    r9d,ecx
   140012664:	mov    ecx,0x102
   140012669:	sub    ecx,edx
   14001266b:	cmp    rdi,rcx
   14001266e:	cmovb  ecx,edi
   140012671:	mov    eax,ecx
   140012673:	sub    rdi,rax
   140012676:	lea    r11,[rcx+r13*1]
   14001267a:	lea    eax,[rdx+rcx*1]
   14001267d:	mov    DWORD PTR [rbx+0x28],eax
   140012680:	mov    QWORD PTR [rsp+0x30],rdi
   140012685:	cmp    r13,r11
   140012688:	je     0x140012705
   14001268a:	nop    WORD PTR [rax+rax*1+0x0]
   140012690:	movzx  edx,BYTE PTR [r13+0x0]
   140012695:	inc    r13
   140012698:	mov    BYTE PTR [r8+rbx*1+0xc8],dl
   1400126a0:	cmp    r8d,0x101
   1400126a7:	jae    0x1400126b7
   1400126a9:	lea    eax,[r8+0x8000]
   1400126b0:	mov    BYTE PTR [rax+rbx*1+0xc8],dl
   1400126b7:	movzx  eax,dl
   1400126ba:	shl    r9d,0x5
   1400126be:	mov    ecx,r10d
   1400126c1:	xor    r9d,eax
   1400126c4:	and    ecx,0x7fff
   1400126ca:	and    r9d,0x7fff
   1400126d1:	mov    edx,r9d
   1400126d4:	add    rdx,0x14955
   1400126db:	inc    r8d
   1400126de:	lea    rdx,[rbx+rdx*2]
   1400126e2:	and    r8d,0x7fff
   1400126e9:	movzx  eax,WORD PTR [rdx]
   1400126ec:	mov    WORD PTR [rbx+rcx*2+0x192aa],ax
   1400126f4:	mov    WORD PTR [rdx],r10w
   1400126f8:	inc    r10d
   1400126fb:	cmp    r13,r11
   1400126fe:	jne    0x140012690
   140012700:	mov    QWORD PTR [rsp+0x28],r13
   140012705:	xor    r10d,r10d
   140012708:	mov    ebp,DWORD PTR [rbx+0x2c]
   14001270b:	mov    r11d,DWORD PTR [rbx+0x28]
   14001270f:	mov    eax,0x8000
   140012714:	sub    eax,r11d
   140012717:	mov    DWORD PTR [rsp+0x20],r11d
   14001271c:	cmp    eax,ebp
   14001271e:	cmovb  ebp,eax
   140012721:	mov    DWORD PTR [rbx+0x2c],ebp
   140012724:	test   rsi,rsi
   140012727:	jne    0x140012736
   140012729:	cmp    r11d,0x102
   140012730:	jb     0x140012fb6
   140012736:	mov    eax,DWORD PTR [rbx+0x68]
   140012739:	mov    r14d,DWORD PTR [rbx+0x24]
   14001273d:	mov    r15d,0x2
   140012743:	test   eax,eax
   140012745:	mov    esi,r14d
   140012748:	mov    DWORD PTR [rsp+0xb8],0x1
   140012753:	cmovne r15d,eax
   140012757:	mov    eax,DWORD PTR [rbx+0x10]
   14001275a:	and    esi,0x7fff
   140012760:	mov    r12d,r10d
   140012763:	mov    DWORD PTR [rsp+0xb0],r10d
   14001276b:	mov    DWORD PTR [rsp+0xa8],esi
   140012772:	test   eax,0x90000
   140012777:	je     0x1400128c4
   14001277d:	test   ebp,ebp
   14001277f:	je     0x140012b1e
   140012785:	bt     eax,0x13
   140012789:	jb     0x140012b1e
   14001278f:	lea    eax,[rsi-0x1]
   140012792:	mov    r15d,r10d
   140012795:	and    eax,0x7fff
   14001279a:	movzx  edx,BYTE PTR [rax+rbx*1+0xc8]
   1400127a2:	test   r11d,r11d
   1400127a5:	je     0x1400128bc
   1400127ab:	nop    DWORD PTR [rax+rax*1+0x0]
   1400127b0:	lea    eax,[rsi+r15*1]
   1400127b4:	mov    ecx,eax
   1400127b6:	cmp    BYTE PTR [rax+rbx*1+0xc8],dl
   1400127bd:	jne    0x1400127c7
   1400127bf:	inc    r15d
   1400127c2:	cmp    r15d,r11d
   1400127c5:	jb     0x1400127b0
   1400127c7:	cmp    r15d,0x3
   1400127cb:	jb     0x1400128bc
   1400127d1:	mov    r12d,0x1
   1400127d7:	jmp    0x140012b1e
   1400127dc:	test   rdi,rdi
   1400127df:	je     0x140012708
   1400127e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400127f0:	mov    ecx,DWORD PTR [rbx+0x28]
   1400127f3:	cmp    ecx,0x102
   1400127f9:	jae    0x1400128ad
   1400127ff:	add    ecx,DWORD PTR [rbx+0x24]
   140012802:	movzx  r9d,BYTE PTR [r13+0x0]
   140012807:	inc    r13
   14001280a:	and    ecx,0x7fff
   140012810:	dec    rdi
   140012813:	mov    BYTE PTR [rcx+rbx*1+0xc8],r9b
   14001281b:	cmp    ecx,0x101
   140012821:	jae    0x140012831
   140012823:	lea    eax,[rcx+0x8000]
   140012829:	mov    BYTE PTR [rax+rbx*1+0xc8],r9b
   140012831:	inc    DWORD PTR [rbx+0x28]
   140012834:	mov    ecx,DWORD PTR [rbx+0x2c]
   140012837:	mov    edx,DWORD PTR [rbx+0x28]
   14001283a:	add    ecx,edx
   14001283c:	cmp    ecx,0x3
   14001283f:	jb     0x1400128a4
   140012841:	mov    r8d,DWORD PTR [rbx+0x24]
   140012845:	add    edx,0xfffffffd
   140012848:	add    r8d,edx
   14001284b:	mov    edx,r8d
   14001284e:	and    edx,0x7fff
   140012854:	lea    eax,[r8+0x1]
   140012858:	and    eax,0x7fff
   14001285d:	movzx  ecx,BYTE PTR [rax+rbx*1+0xc8]
   140012865:	movzx  eax,r9b
   140012869:	and    ecx,0x3ff
   14001286f:	shl    ecx,0x5
   140012872:	xor    ecx,eax
   140012874:	movzx  eax,BYTE PTR [rdx+rbx*1+0xc8]
   14001287c:	and    eax,0x1f
   14001287f:	and    ecx,0x7fff
   140012885:	shl    eax,0xa
   140012888:	xor    ecx,eax
   14001288a:	add    rcx,0x14955
   140012891:	lea    rcx,[rbx+rcx*2]
   140012895:	movzx  eax,WORD PTR [rcx]
   140012898:	mov    WORD PTR [rbx+rdx*2+0x192aa],ax
   1400128a0:	mov    WORD PTR [rcx],r8w
   1400128a4:	test   rdi,rdi
   1400128a7:	jne    0x1400127f0
   1400128ad:	mov    QWORD PTR [rsp+0x30],rdi
   1400128b2:	mov    QWORD PTR [rsp+0x28],r13
   1400128b7:	jmp    0x140012708
   1400128bc:	mov    r15d,r10d
   1400128bf:	jmp    0x140012b30
   1400128c4:	mov    rax,r10
   1400128c7:	mov    ecx,r14d
   1400128ca:	lea    rdx,[rbx+0xc8]
   1400128d1:	and    ecx,0x7fff
   1400128d7:	cmp    r15d,0x20
   1400128db:	mov    esi,r15d
   1400128de:	setae  al
   1400128e1:	mov    DWORD PTR [rsp+0x24],ecx
   1400128e5:	mov    edi,ecx
   1400128e7:	mov    r13d,DWORD PTR [rbx+rax*4+0x14]
   1400128ec:	mov    eax,ecx
   1400128ee:	add    rdx,rax
   1400128f1:	lea    eax,[rcx-0x1]
   1400128f4:	movzx  r8d,WORD PTR [rdx]
   1400128f8:	add    eax,r15d
   1400128fb:	mov    QWORD PTR [rsp+0x38],rdx
   140012900:	movzx  r12d,WORD PTR [rax+rbx*1+0xc8]
   140012909:	mov    ecx,eax
   14001290b:	mov    WORD PTR [rsp+0xa0],r8w
   140012914:	cmp    r11d,0x102
   14001291b:	jbe    0x14001294a
   14001291d:	lea    rdx,[rip+0x8fbc]        # 0x14001b8e0
   140012924:	lea    rcx,[rip+0x9225]        # 0x14001bb50
   14001292b:	mov    r8d,0x8e0
   140012931:	call   QWORD PTR [rip+0x68e1]        # 0x140019218
   140012937:	mov    r11d,DWORD PTR [rsp+0x20]
   14001293c:	mov    rdx,QWORD PTR [rsp+0x38]
   140012941:	movzx  r8d,WORD PTR [rsp+0xa0]
   14001294a:	cmp    r11d,r15d
   14001294d:	jbe    0x140012b0a
   140012953:	dec    r13d
   140012956:	je     0x140012b0a
   14001295c:	mov    eax,edi
   14001295e:	movzx  edi,WORD PTR [rbx+rax*2+0x192aa]
   140012966:	test   edi,edi
   140012968:	je     0x140012b0a
   14001296e:	movzx  eax,r14w
   140012972:	sub    ax,di
   140012975:	movzx  r10d,ax
   140012979:	cmp    r10d,ebp
   14001297c:	ja     0x140012b0a
   140012982:	lea    eax,[rsi-0x1]
   140012985:	and    edi,0x7fff
   14001298b:	add    eax,edi
   14001298d:	mov    ecx,eax
   14001298f:	cmp    WORD PTR [rax+rbx*1+0xc8],r12w
   140012998:	je     0x140012a16
   14001299a:	movzx  edi,WORD PTR [rbx+rdi*2+0x192aa]
   1400129a2:	test   edi,edi
   1400129a4:	je     0x140012b0a
   1400129aa:	movzx  eax,r14w
   1400129ae:	sub    ax,di
   1400129b1:	movzx  r10d,ax
   1400129b5:	cmp    r10d,ebp
   1400129b8:	ja     0x140012b0a
   1400129be:	lea    eax,[rsi-0x1]
   1400129c1:	and    edi,0x7fff
   1400129c7:	add    eax,edi
   1400129c9:	mov    ecx,eax
   1400129cb:	cmp    WORD PTR [rax+rbx*1+0xc8],r12w
   1400129d4:	je     0x140012a16
   1400129d6:	movzx  edi,WORD PTR [rbx+rdi*2+0x192aa]
   1400129de:	test   edi,edi
   1400129e0:	je     0x140012b0a
   1400129e6:	movzx  eax,r14w
   1400129ea:	sub    ax,di
   1400129ed:	movzx  r10d,ax
   1400129f1:	cmp    r10d,ebp
   1400129f4:	ja     0x140012b0a
   1400129fa:	and    edi,0x7fff
   140012a00:	lea    eax,[rdi-0x1]
   140012a03:	add    eax,esi
   140012a05:	mov    ecx,eax
   140012a07:	cmp    WORD PTR [rax+rbx*1+0xc8],r12w
   140012a10:	jne    0x140012953
   140012a16:	test   r10d,r10d
   140012a19:	je     0x140012b0a
   140012a1f:	lea    r9,[rbx+0xc8]
   140012a26:	mov    eax,edi
   140012a28:	add    r9,rax
   140012a2b:	cmp    WORD PTR [r9],r8w
   140012a2f:	jne    0x140012953
   140012a35:	mov    r8,rdx
   140012a38:	mov    ecx,0x20
   140012a3d:	nop    DWORD PTR [rax]
   140012a40:	movzx  eax,WORD PTR [r9+0x2]
   140012a45:	add    r9,0x2
   140012a49:	add    r8,0x2
   140012a4d:	cmp    WORD PTR [r8],ax
   140012a51:	jne    0x140012a90
   140012a53:	movzx  eax,WORD PTR [r9+0x2]
   140012a58:	add    r9,0x2
   140012a5c:	add    r8,0x2
   140012a60:	cmp    WORD PTR [r8],ax
   140012a64:	jne    0x140012a90
   140012a66:	movzx  eax,WORD PTR [r9+0x2]
   140012a6b:	add    r9,0x2
   140012a6f:	add    r8,0x2
   140012a73:	cmp    WORD PTR [r8],ax
   140012a77:	jne    0x140012a90
   140012a79:	movzx  eax,WORD PTR [r9+0x2]
   140012a7e:	add    r9,0x2
   140012a82:	add    r8,0x2
   140012a86:	cmp    WORD PTR [r8],ax
   140012a8a:	jne    0x140012a90
   140012a8c:	dec    ecx
   140012a8e:	jne    0x140012a40
   140012a90:	test   ecx,ecx
   140012a92:	je     0x140012af8
   140012a94:	movzx  eax,BYTE PTR [r9]
   140012a98:	xor    ecx,ecx
   140012a9a:	mov    rdx,r8
   140012a9d:	sub    rdx,QWORD PTR [rsp+0x38]
   140012aa2:	sar    rdx,1
   140012aa5:	cmp    BYTE PTR [r8],al
   140012aa8:	movzx  r8d,WORD PTR [rsp+0xa0]
   140012ab1:	sete   cl
   140012ab4:	lea    eax,[rcx+rdx*2]
   140012ab7:	mov    rdx,QWORD PTR [rsp+0x38]
   140012abc:	cmp    eax,esi
   140012abe:	jbe    0x140012953
   140012ac4:	cmp    r11d,eax
   140012ac7:	mov    esi,eax
   140012ac9:	mov    r12d,r10d
   140012acc:	cmovb  esi,r11d
   140012ad0:	mov    DWORD PTR [rsp+0xb0],r10d
   140012ad8:	mov    r15d,esi
   140012adb:	cmp    esi,r11d
   140012ade:	je     0x140012b12
   140012ae0:	mov    eax,DWORD PTR [rsp+0x24]
   140012ae4:	dec    eax
   140012ae6:	add    eax,esi
   140012ae8:	mov    ecx,eax
   140012aea:	movzx  r12d,WORD PTR [rax+rbx*1+0xc8]
   140012af3:	jmp    0x140012953
   140012af8:	mov    r15d,0x102
   140012afe:	mov    r12d,r10d
   140012b01:	cmp    r11d,r15d
   140012b04:	cmovb  r15d,r11d
   140012b08:	jmp    0x140012b12
   140012b0a:	mov    r12d,DWORD PTR [rsp+0xb0]
   140012b12:	mov    esi,DWORD PTR [rsp+0xa8]
   140012b19:	mov    r13,QWORD PTR [rsp+0x28]
   140012b1e:	xor    r10d,r10d
   140012b21:	cmp    r15d,0x3
   140012b25:	jne    0x140012b30
   140012b27:	cmp    r12d,0x2000
   140012b2e:	jae    0x140012b44
   140012b30:	cmp    esi,r12d
   140012b33:	je     0x140012b44
   140012b35:	test   DWORD PTR [rbx+0x10],0x20000
   140012b3c:	je     0x140012b4a
   140012b3e:	cmp    r15d,0x5
   140012b42:	ja     0x140012b4a
   140012b44:	mov    r15d,r10d
   140012b47:	mov    r12d,r10d
   140012b4a:	mov    edi,DWORD PTR [rbx+0x68]
   140012b4d:	test   edi,edi
   140012b4f:	je     0x140012d87
   140012b55:	cmp    r15d,edi
   140012b58:	jbe    0x140012cab
   140012b5e:	mov    rax,QWORD PTR [rbx+0x30]
   140012b62:	inc    DWORD PTR [rbx+0x54]
   140012b65:	movzx  ecx,BYTE PTR [rbx+0x6c]
   140012b69:	mov    BYTE PTR [rax],cl
   140012b6b:	inc    QWORD PTR [rbx+0x30]
   140012b6f:	mov    rax,QWORD PTR [rbx+0x38]
   140012b73:	shr    BYTE PTR [rax],1
   140012b75:	dec    DWORD PTR [rbx+0x50]
   140012b78:	jne    0x140012b90
   140012b7a:	mov    rax,QWORD PTR [rbx+0x30]
   140012b7e:	mov    DWORD PTR [rbx+0x50],0x8
   140012b85:	mov    QWORD PTR [rbx+0x38],rax
   140012b89:	inc    rax
   140012b8c:	mov    QWORD PTR [rbx+0x30],rax
   140012b90:	movzx  eax,cl
   140012b93:	inc    WORD PTR [rbx+rax*2+0x81ca]
   140012b9b:	cmp    r15d,0x80
   140012ba2:	jb     0x140012c8a
   140012ba8:	cmp    r15d,0x3
   140012bac:	jb     0x140012bba
   140012bae:	lea    eax,[r12-0x1]
   140012bb3:	cmp    eax,0x7fff
   140012bb8:	jbe    0x140012bd7
   140012bba:	lea    rdx,[rip+0x8d1f]        # 0x14001b8e0
   140012bc1:	lea    rcx,[rip+0x90f8]        # 0x14001bcc0
   140012bc8:	mov    r8d,0x9b0
   140012bce:	call   QWORD PTR [rip+0x6644]        # 0x140019218
   140012bd4:	xor    r10d,r10d
   140012bd7:	mov    rax,QWORD PTR [rbx+0x30]
   140012bdb:	add    DWORD PTR [rbx+0x54],r15d
   140012bdf:	lea    ecx,[r15-0x3]
   140012be3:	mov    BYTE PTR [rax],cl
   140012be5:	mov    rax,QWORD PTR [rbx+0x30]
   140012be9:	lea    r8d,[r12-0x1]
   140012bee:	mov    BYTE PTR [rax+0x1],r8b
   140012bf2:	mov    rax,QWORD PTR [rbx+0x30]
   140012bf6:	mov    ecx,r8d
   140012bf9:	shr    ecx,0x8
   140012bfc:	mov    BYTE PTR [rax+0x2],cl
   140012bff:	add    QWORD PTR [rbx+0x30],0x3
   140012c04:	mov    rcx,QWORD PTR [rbx+0x38]
   140012c08:	movzx  eax,BYTE PTR [rcx]
   140012c0b:	shr    al,1
   140012c0d:	or     al,0x80
   140012c0f:	mov    BYTE PTR [rcx],al
   140012c11:	dec    DWORD PTR [rbx+0x50]
   140012c14:	jne    0x140012c2c
   140012c16:	mov    rax,QWORD PTR [rbx+0x30]
   140012c1a:	mov    DWORD PTR [rbx+0x50],0x8
   140012c21:	mov    QWORD PTR [rbx+0x38],rax
   140012c25:	inc    rax
   140012c28:	mov    QWORD PTR [rbx+0x30],rax
   140012c2c:	mov    eax,r8d
   140012c2f:	lea    rbp,[rip+0xfffffffffffed3ca]        # 0x140000000
   140012c36:	mov    edx,r8d
   140012c39:	and    eax,0x1ff
   140012c3e:	shr    rdx,0x8
   140012c42:	movzx  ecx,BYTE PTR [rax+rbp*1+0x1b330]
   140012c4a:	and    edx,0x7f
   140012c4d:	cmp    r8d,0x200
   140012c54:	movzx  eax,BYTE PTR [rdx+rbp*1+0x1b730]
   140012c5c:	cmovb  eax,ecx
   140012c5f:	inc    WORD PTR [rbx+rax*2+0x840a]
   140012c67:	cmp    r15d,0x3
   140012c6b:	jb     0x140012c81
   140012c6d:	lea    eax,[r15-0x3]
   140012c71:	movzx  eax,WORD PTR [rbp+rax*2+0x1b030]
   140012c79:	inc    WORD PTR [rbx+rax*2+0x81ca]
   140012c81:	mov    DWORD PTR [rbx+0x68],r10d
   140012c85:	jmp    0x140012f04
   140012c8a:	mov    edi,DWORD PTR [rsp+0xb8]
   140012c91:	mov    eax,esi
   140012c93:	movzx  ecx,BYTE PTR [rax+rbx*1+0xc8]
   140012c9b:	mov    DWORD PTR [rbx+0x64],r12d
   140012c9f:	mov    DWORD PTR [rbx+0x68],r15d
   140012ca3:	mov    DWORD PTR [rbx+0x6c],ecx
   140012ca6:	jmp    0x140012f07
   140012cab:	mov    esi,DWORD PTR [rbx+0x64]
   140012cae:	cmp    edi,0x3
   140012cb1:	jb     0x140012cbd
   140012cb3:	lea    eax,[rsi-0x1]
   140012cb6:	cmp    eax,0x7fff
   140012cbb:	jbe    0x140012cda
   140012cbd:	lea    rdx,[rip+0x8c1c]        # 0x14001b8e0
   140012cc4:	lea    rcx,[rip+0x8ff5]        # 0x14001bcc0
   140012ccb:	mov    r8d,0x9b0
   140012cd1:	call   QWORD PTR [rip+0x6541]        # 0x140019218
   140012cd7:	xor    r10d,r10d
   140012cda:	mov    rax,QWORD PTR [rbx+0x30]
   140012cde:	add    DWORD PTR [rbx+0x54],edi
   140012ce1:	lea    ecx,[rdi-0x3]
   140012ce4:	mov    BYTE PTR [rax],cl
   140012ce6:	mov    rax,QWORD PTR [rbx+0x30]
   140012cea:	dec    esi
   140012cec:	mov    BYTE PTR [rax+0x1],sil
   140012cf0:	mov    rax,QWORD PTR [rbx+0x30]
   140012cf4:	mov    ecx,esi
   140012cf6:	shr    ecx,0x8
   140012cf9:	mov    BYTE PTR [rax+0x2],cl
   140012cfc:	add    QWORD PTR [rbx+0x30],0x3
   140012d01:	mov    rcx,QWORD PTR [rbx+0x38]
   140012d05:	movzx  eax,BYTE PTR [rcx]
   140012d08:	shr    al,1
   140012d0a:	or     al,0x80
   140012d0c:	mov    BYTE PTR [rcx],al
   140012d0e:	dec    DWORD PTR [rbx+0x50]
   140012d11:	jne    0x140012d29
   140012d13:	mov    rax,QWORD PTR [rbx+0x30]
   140012d17:	mov    DWORD PTR [rbx+0x50],0x8
   140012d1e:	mov    QWORD PTR [rbx+0x38],rax
   140012d22:	inc    rax
   140012d25:	mov    QWORD PTR [rbx+0x30],rax
   140012d29:	mov    eax,esi
   140012d2b:	lea    rbp,[rip+0xfffffffffffed2ce]        # 0x140000000
   140012d32:	mov    edx,esi
   140012d34:	and    eax,0x1ff
   140012d39:	shr    rdx,0x8
   140012d3d:	movzx  ecx,BYTE PTR [rax+rbp*1+0x1b330]
   140012d45:	and    edx,0x7f
   140012d48:	cmp    esi,0x200
   140012d4e:	movzx  eax,BYTE PTR [rdx+rbp*1+0x1b730]
   140012d56:	cmovb  eax,ecx
   140012d59:	inc    WORD PTR [rbx+rax*2+0x840a]
   140012d61:	cmp    edi,0x3
   140012d64:	jb     0x140012d79
   140012d66:	lea    eax,[rdi-0x3]
   140012d69:	movzx  eax,WORD PTR [rbp+rax*2+0x1b030]
   140012d71:	inc    WORD PTR [rbx+rax*2+0x81ca]
   140012d79:	mov    edi,DWORD PTR [rbx+0x68]
   140012d7c:	mov    DWORD PTR [rbx+0x68],r10d
   140012d80:	dec    edi
   140012d82:	jmp    0x140012f07
   140012d87:	test   r12d,r12d
   140012d8a:	jne    0x140012de8
   140012d8c:	mov    eax,esi
   140012d8e:	cmp    esi,0x8100
   140012d94:	jb     0x140012d9b
   140012d96:	mov    eax,0x8100
   140012d9b:	movzx  ecx,BYTE PTR [rax+rbx*1+0xc8]
   140012da3:	mov    rax,QWORD PTR [rbx+0x30]
   140012da7:	inc    DWORD PTR [rbx+0x54]
   140012daa:	mov    BYTE PTR [rax],cl
   140012dac:	inc    QWORD PTR [rbx+0x30]
   140012db0:	mov    rax,QWORD PTR [rbx+0x38]
   140012db4:	shr    BYTE PTR [rax],1
   140012db6:	dec    DWORD PTR [rbx+0x50]
   140012db9:	jne    0x140012dd1
   140012dbb:	mov    rax,QWORD PTR [rbx+0x30]
   140012dbf:	mov    DWORD PTR [rbx+0x50],0x8
   140012dc6:	mov    QWORD PTR [rbx+0x38],rax
   140012dca:	inc    rax
   140012dcd:	mov    QWORD PTR [rbx+0x30],rax
   140012dd1:	mov    edi,DWORD PTR [rsp+0xb8]
   140012dd8:	movzx  eax,cl
   140012ddb:	inc    WORD PTR [rbx+rax*2+0x81ca]
   140012de3:	jmp    0x140012f07
   140012de8:	cmp    DWORD PTR [rbx+0x1c],0x0
   140012dec:	jne    0x140012e2e
   140012dee:	test   DWORD PTR [rbx+0x10],0x10000
   140012df5:	jne    0x140012e2e
   140012df7:	cmp    r15d,0x80
   140012dfe:	jae    0x140012e2e
   140012e00:	mov    eax,esi
   140012e02:	cmp    esi,0x8100
   140012e08:	jb     0x140012e0f
   140012e0a:	mov    eax,0x8100
   140012e0f:	movzx  eax,BYTE PTR [rax+rbx*1+0xc8]
   140012e17:	mov    edi,DWORD PTR [rsp+0xb8]
   140012e1e:	mov    DWORD PTR [rbx+0x64],r12d
   140012e22:	mov    DWORD PTR [rbx+0x6c],eax
   140012e25:	mov    DWORD PTR [rbx+0x68],r15d
   140012e29:	jmp    0x140012f07
   140012e2e:	cmp    r15d,0x3
   140012e32:	jb     0x140012e40
   140012e34:	lea    eax,[r12-0x1]
   140012e39:	cmp    eax,0x7fff
   140012e3e:	jbe    0x140012e5a
   140012e40:	lea    rdx,[rip+0x8a99]        # 0x14001b8e0
   140012e47:	lea    rcx,[rip+0x8e72]        # 0x14001bcc0
   140012e4e:	mov    r8d,0x9b0
   140012e54:	call   QWORD PTR [rip+0x63be]        # 0x140019218
   140012e5a:	mov    rax,QWORD PTR [rbx+0x30]
   140012e5e:	add    DWORD PTR [rbx+0x54],r15d
   140012e62:	lea    ecx,[r15-0x3]
   140012e66:	mov    BYTE PTR [rax],cl
   140012e68:	mov    rax,QWORD PTR [rbx+0x30]
   140012e6c:	lea    r8d,[r12-0x1]
   140012e71:	mov    BYTE PTR [rax+0x1],r8b
   140012e75:	mov    rax,QWORD PTR [rbx+0x30]
   140012e79:	mov    ecx,r8d
   140012e7c:	shr    ecx,0x8
   140012e7f:	mov    BYTE PTR [rax+0x2],cl
   140012e82:	add    QWORD PTR [rbx+0x30],0x3
   140012e87:	mov    rcx,QWORD PTR [rbx+0x38]
   140012e8b:	movzx  eax,BYTE PTR [rcx]
   140012e8e:	shr    al,1
   140012e90:	or     al,0x80
   140012e92:	mov    BYTE PTR [rcx],al
   140012e94:	dec    DWORD PTR [rbx+0x50]
   140012e97:	jne    0x140012eaf
   140012e99:	mov    rax,QWORD PTR [rbx+0x30]
   140012e9d:	mov    DWORD PTR [rbx+0x50],0x8
   140012ea4:	mov    QWORD PTR [rbx+0x38],rax
   140012ea8:	inc    rax
   140012eab:	mov    QWORD PTR [rbx+0x30],rax
   140012eaf:	mov    eax,r8d
   140012eb2:	lea    rbp,[rip+0xfffffffffffed147]        # 0x140000000
   140012eb9:	mov    edx,r8d
   140012ebc:	and    eax,0x1ff
   140012ec1:	shr    rdx,0x8
   140012ec5:	movzx  ecx,BYTE PTR [rax+rbp*1+0x1b330]
   140012ecd:	and    edx,0x7f
   140012ed0:	cmp    r8d,0x200
   140012ed7:	movzx  eax,BYTE PTR [rdx+rbp*1+0x1b730]
   140012edf:	cmovb  eax,ecx
   140012ee2:	inc    WORD PTR [rbx+rax*2+0x840a]
   140012eea:	cmp    r15d,0x3
   140012eee:	jb     0x140012f04
   140012ef0:	lea    eax,[r15-0x3]
   140012ef4:	movzx  eax,WORD PTR [rbp+rax*2+0x1b030]
   140012efc:	inc    WORD PTR [rbx+rax*2+0x81ca]
   140012f04:	mov    edi,r15d
   140012f07:	add    DWORD PTR [rbx+0x24],edi
   140012f0a:	cmp    DWORD PTR [rbx+0x28],edi
   140012f0d:	jae    0x140012f29
   140012f0f:	lea    rdx,[rip+0x89ca]        # 0x14001b8e0
   140012f16:	lea    rcx,[rip+0x8e63]        # 0x14001bd80
   140012f1d:	mov    r8d,0xa26
   140012f23:	call   QWORD PTR [rip+0x62ef]        # 0x140019218
   140012f29:	mov    ecx,DWORD PTR [rbx+0x2c]
   140012f2c:	sub    DWORD PTR [rbx+0x28],edi
   140012f2f:	mov    eax,0x8000
   140012f34:	add    ecx,edi
   140012f36:	cmp    ecx,eax
   140012f38:	cmovb  eax,ecx
   140012f3b:	mov    DWORD PTR [rbx+0x2c],eax
   140012f3e:	lea    rax,[rbx+0x192a2]
   140012f45:	cmp    QWORD PTR [rbx+0x30],rax
   140012f49:	ja     0x140012f8b
   140012f4b:	mov    ecx,DWORD PTR [rbx+0x54]
   140012f4e:	mov    rdi,QWORD PTR [rsp+0x30]
   140012f53:	mov    rsi,QWORD PTR [rsp+0x40]
   140012f58:	mov    r10d,0x0
   140012f5e:	cmp    ecx,0x7c00
   140012f64:	jbe    0x140012600
   140012f6a:	mov    eax,DWORD PTR [rbx+0x30]
   140012f6d:	sub    eax,ebx
   140012f6f:	sub    eax,0x92aa
   140012f74:	imul   eax,eax,0x73
   140012f77:	shr    eax,0x7
   140012f7a:	cmp    eax,ecx
   140012f7c:	jae    0x140012f8b
   140012f7e:	test   DWORD PTR [rbx+0x10],0x80000
   140012f85:	je     0x140012600
   140012f8b:	mov    rdi,QWORD PTR [rsp+0x30]
   140012f90:	xor    edx,edx
   140012f92:	mov    rcx,rbx
   140012f95:	mov    QWORD PTR [rbx+0xb8],rdi
   140012f9c:	mov    QWORD PTR [rbx+0xb0],r13
   140012fa3:	call   0x1400132f0
   140012fa8:	test   eax,eax
   140012faa:	jne    0x140012fcb
   140012fac:	mov    rsi,QWORD PTR [rsp+0x40]
   140012fb1:	jmp    0x1400125f8
   140012fb6:	mov    QWORD PTR [rbx+0xb0],r13
   140012fbd:	mov    QWORD PTR [rbx+0xb8],rdi
   140012fc4:	mov    eax,0x1
   140012fc9:	jmp    0x140012fd3
   140012fcb:	mov    eax,0x0
   140012fd0:	setns  al
   140012fd3:	add    rsp,0x58
   140012fd7:	pop    r15
   140012fd9:	pop    r14
   140012fdb:	pop    r13
   140012fdd:	pop    r12
   140012fdf:	pop    rdi
   140012fe0:	pop    rsi
   140012fe1:	pop    rbp
   140012fe2:	pop    rbx
   140012fe3:	ret    
   140012fe4:	int3   
   140012fe5:	int3   
   140012fe6:	int3   
   140012fe7:	int3   
   140012fe8:	int3   
   140012fe9:	int3   
   140012fea:	int3   
   140012feb:	int3   
   140012fec:	int3   
   140012fed:	int3   
   140012fee:	int3   
   140012fef:	int3   
   140012ff0:	mov    r9d,ecx
   140012ff3:	test   ecx,ecx
   140012ff5:	js     0x140013005
   140012ff7:	mov    eax,ecx
   140012ff9:	mov    ecx,0xa
   140012ffe:	cmp    eax,ecx
   140013000:	cmovg  eax,ecx
   140013003:	jmp    0x14001300a
   140013005:	mov    eax,0x6
   14001300a:	xor    ecx,ecx
   14001300c:	cdqe   
   14001300e:	cmp    r9d,0x3
   140013012:	lea    r11,[rip+0x7d77]        # 0x14001ad90
   140013019:	mov    r10d,0x4000
   14001301f:	mov    eax,DWORD PTR [r11+rax*4]
   140013023:	cmovle ecx,r10d
   140013027:	or     eax,ecx
   140013029:	test   edx,edx
   14001302b:	jle    0x140013031
   14001302d:	bts    eax,0xc
   140013031:	test   r9d,r9d
   140013034:	jne    0x14001303b
   140013036:	bts    eax,0x13
   14001303a:	ret    
   14001303b:	cmp    r8d,0x1
   14001303f:	jne    0x140013046
   140013041:	bts    eax,0x11
   140013045:	ret    
   140013046:	cmp    r8d,0x2
   14001304a:	jne    0x140013052
   14001304c:	and    eax,0xfffff000
   140013051:	ret    
   140013052:	cmp    r8d,0x4
   140013056:	jne    0x14001305d
   140013058:	bts    eax,0x12
   14001305c:	ret    
   14001305d:	cmp    r8d,0x3
   140013061:	jne    0x140013067
   140013063:	bts    eax,0x10
   140013067:	ret    
   140013068:	int3   
   140013069:	int3   
   14001306a:	int3   
   14001306b:	int3   
   14001306c:	int3   
   14001306d:	int3   
   14001306e:	int3   
   14001306f:	int3   
   140013070:	mov    QWORD PTR [rsp+0x18],rbx
   140013075:	push   rbp
   140013076:	push   rsi
   140013077:	push   rdi
   140013078:	push   r12
   14001307a:	push   r13
   14001307c:	push   r14
   14001307e:	push   r15
   140013080:	sub    rsp,0x20
   140013084:	mov    rax,QWORD PTR [rsp+0x88]
   14001308c:	mov    rdi,rcx
   14001308f:	mov    ecx,edx
   140013091:	mov    esi,DWORD PTR [rax]
   140013093:	xor    eax,eax
   140013095:	and    ecx,0x7fff
   14001309b:	cmp    esi,0x20
   14001309e:	mov    ebp,edx
   1400130a0:	mov    r13d,r9d
   1400130a3:	setae  al
   1400130a6:	lea    rdx,[rdi+0xc8]
   1400130ad:	mov    r14d,r8d
   1400130b0:	mov    r12d,DWORD PTR [rdi+rax*4+0x14]
   1400130b5:	mov    eax,ecx
   1400130b7:	mov    DWORD PTR [rsp+0x78],ecx
   1400130bb:	add    rdx,rax
   1400130be:	lea    eax,[rsi-0x1]
   1400130c1:	mov    ebx,ecx
   1400130c3:	movzx  r9d,WORD PTR [rdx]
   1400130c7:	add    eax,ecx
   1400130c9:	mov    QWORD PTR [rsp+0x60],rdx
   1400130ce:	movzx  r15d,WORD PTR [rax+rdi*1+0xc8]
   1400130d7:	mov    WORD PTR [rsp+0x68],r9w
   1400130dd:	cmp    r13d,0x102
   1400130e4:	jbe    0x14001310b
   1400130e6:	lea    rdx,[rip+0x87f3]        # 0x14001b8e0
   1400130ed:	lea    rcx,[rip+0x8a5c]        # 0x14001bb50
   1400130f4:	mov    r8d,0x8e0
   1400130fa:	call   QWORD PTR [rip+0x6118]        # 0x140019218
   140013100:	mov    rdx,QWORD PTR [rsp+0x60]
   140013105:	movzx  r9d,WORD PTR [rsp+0x68]
   14001310b:	cmp    r13d,esi
   14001310e:	jbe    0x1400132cc
   140013114:	mov    r11,QWORD PTR [rsp+0x80]
   14001311c:	nop    DWORD PTR [rax+0x0]
   140013120:	dec    r12d
   140013123:	je     0x1400132cc
   140013129:	mov    eax,ebx
   14001312b:	movzx  ebx,WORD PTR [rdi+rax*2+0x192aa]
   140013133:	test   ebx,ebx
   140013135:	je     0x1400132cc
   14001313b:	movzx  eax,bp
   14001313e:	sub    ax,bx
   140013141:	movzx  r10d,ax
   140013145:	cmp    r10d,r14d
   140013148:	ja     0x1400132cc
   14001314e:	lea    eax,[rsi-0x1]
   140013151:	and    ebx,0x7fff
   140013157:	add    eax,ebx
   140013159:	cmp    WORD PTR [rax+rdi*1+0xc8],r15w
   140013162:	je     0x1400131da
   140013164:	movzx  ebx,WORD PTR [rdi+rbx*2+0x192aa]
   14001316c:	test   ebx,ebx
   14001316e:	je     0x1400132cc
   140013174:	movzx  eax,bp
   140013177:	sub    ax,bx
   14001317a:	movzx  r10d,ax
   14001317e:	cmp    r10d,r14d
   140013181:	ja     0x1400132cc
   140013187:	lea    eax,[rsi-0x1]
   14001318a:	and    ebx,0x7fff
   140013190:	add    eax,ebx
   140013192:	cmp    WORD PTR [rax+rdi*1+0xc8],r15w
   14001319b:	je     0x1400131da
   14001319d:	movzx  ebx,WORD PTR [rdi+rbx*2+0x192aa]
   1400131a5:	test   ebx,ebx
   1400131a7:	je     0x1400132cc
   1400131ad:	movzx  eax,bp
   1400131b0:	sub    ax,bx
   1400131b3:	movzx  r10d,ax
   1400131b7:	cmp    r10d,r14d
   1400131ba:	ja     0x1400132cc
   1400131c0:	and    ebx,0x7fff
   1400131c6:	lea    eax,[rbx-0x1]
   1400131c9:	add    eax,esi
   1400131cb:	cmp    WORD PTR [rax+rdi*1+0xc8],r15w
   1400131d4:	jne    0x140013120
   1400131da:	test   r10d,r10d
   1400131dd:	je     0x1400132cc
   1400131e3:	lea    r8,[rdi+0xc8]
   1400131ea:	mov    eax,ebx
   1400131ec:	add    r8,rax
   1400131ef:	cmp    WORD PTR [r8],r9w
   1400131f3:	jne    0x140013120
   1400131f9:	mov    r9,rdx
   1400131fc:	mov    ecx,0x20
   140013201:	movzx  eax,WORD PTR [r8+0x2]
   140013206:	add    r8,0x2
   14001320a:	add    r9,0x2
   14001320e:	cmp    WORD PTR [r9],ax
   140013212:	jne    0x140013251
   140013214:	movzx  eax,WORD PTR [r8+0x2]
   140013219:	add    r8,0x2
   14001321d:	add    r9,0x2
   140013221:	cmp    WORD PTR [r9],ax
   140013225:	jne    0x140013251
   140013227:	movzx  eax,WORD PTR [r8+0x2]
   14001322c:	add    r8,0x2
   140013230:	add    r9,0x2
   140013234:	cmp    WORD PTR [r9],ax
   140013238:	jne    0x140013251
   14001323a:	movzx  eax,WORD PTR [r8+0x2]
   14001323f:	add    r8,0x2
   140013243:	add    r9,0x2
   140013247:	cmp    WORD PTR [r9],ax
   14001324b:	jne    0x140013251
   14001324d:	dec    ecx
   14001324f:	jne    0x140013201
   140013251:	test   ecx,ecx
   140013253:	je     0x1400132b3
   140013255:	movzx  eax,BYTE PTR [r8]
   140013259:	xor    ecx,ecx
   14001325b:	mov    rdx,r9
   14001325e:	sub    rdx,QWORD PTR [rsp+0x60]
   140013263:	sar    rdx,1
   140013266:	cmp    BYTE PTR [r9],al
   140013269:	movzx  r9d,WORD PTR [rsp+0x68]
   14001326f:	sete   cl
   140013272:	lea    eax,[rcx+rdx*2]
   140013275:	mov    rdx,QWORD PTR [rsp+0x60]
   14001327a:	cmp    eax,esi
   14001327c:	jbe    0x140013120
   140013282:	cmp    r13d,eax
   140013285:	mov    esi,eax
   140013287:	mov    rax,QWORD PTR [rsp+0x88]
   14001328f:	cmovb  esi,r13d
   140013293:	mov    DWORD PTR [r11],r10d
   140013296:	mov    DWORD PTR [rax],esi
   140013298:	cmp    esi,r13d
   14001329b:	je     0x1400132cc
   14001329d:	mov    eax,DWORD PTR [rsp+0x78]
   1400132a1:	dec    eax
   1400132a3:	add    eax,esi
   1400132a5:	movzx  r15d,WORD PTR [rax+rdi*1+0xc8]
   1400132ae:	jmp    0x140013120
   1400132b3:	mov    rax,QWORD PTR [rsp+0x88]
   1400132bb:	mov    edx,0x102
   1400132c0:	mov    DWORD PTR [r11],r10d
   1400132c3:	cmp    r13d,edx
   1400132c6:	cmovb  edx,r13d
   1400132ca:	mov    DWORD PTR [rax],edx
   1400132cc:	mov    rbx,QWORD PTR [rsp+0x70]
   1400132d1:	add    rsp,0x20
   1400132d5:	pop    r15
   1400132d7:	pop    r14
   1400132d9:	pop    r13
   1400132db:	pop    r12
   1400132dd:	pop    rdi
   1400132de:	pop    rsi
   1400132df:	pop    rbp
   1400132e0:	ret    
   1400132e1:	int3   
   1400132e2:	int3   
   1400132e3:	int3   
   1400132e4:	int3   
   1400132e5:	int3   
   1400132e6:	int3   
   1400132e7:	int3   
   1400132e8:	int3   
   1400132e9:	int3   
   1400132ea:	int3   
   1400132eb:	int3   
   1400132ec:	int3   
   1400132ed:	int3   
   1400132ee:	int3   
   1400132ef:	int3   
   1400132f0:	mov    QWORD PTR [rsp+0x10],rbx
   1400132f5:	mov    QWORD PTR [rsp+0x18],rbp
   1400132fa:	mov    QWORD PTR [rsp+0x20],rsi
   1400132ff:	push   rdi
   140013300:	push   r12
   140013302:	push   r13
   140013304:	push   r14
   140013306:	push   r15
   140013308:	sub    rsp,0x20
   14001330c:	xor    esi,esi
   14001330e:	test   DWORD PTR [rcx+0x10],0x80000
   140013315:	mov    r12d,edx
   140013318:	lea    edi,[rsi+0x1]
   14001331b:	mov    rbx,rcx
   14001331e:	mov    r15d,esi
   140013321:	je     0x140013331
   140013323:	mov    eax,DWORD PTR [rcx+0x24]
   140013326:	mov    r14d,edi
   140013329:	sub    eax,DWORD PTR [rcx+0x58]
   14001332c:	cmp    eax,DWORD PTR [rcx+0x2c]
   14001332f:	jbe    0x140013334
   140013331:	mov    r14d,esi
   140013334:	cmp    QWORD PTR [rcx],rsi
   140013337:	jne    0x140013362
   140013339:	mov    rax,QWORD PTR [rcx+0xa0]
   140013340:	mov    rdx,QWORD PTR [rcx+0xc0]
   140013347:	mov    rcx,QWORD PTR [rax]
   14001334a:	sub    rcx,rdx
   14001334d:	cmp    rcx,0x14ccc
   140013354:	jb     0x140013362
   140013356:	mov    rax,QWORD PTR [rbx+0x90]
   14001335d:	add    rax,rdx
   140013360:	jmp    0x140013369
   140013362:	lea    rax,[rbx+0x392aa]
   140013369:	mov    QWORD PTR [rsp+0x50],rax
   14001336e:	mov    QWORD PTR [rbx+0x40],rax
   140013372:	add    rax,0x14cbc
   140013378:	mov    QWORD PTR [rbx+0x48],rax
   14001337c:	cmp    DWORD PTR [rbx+0x74],esi
   14001337f:	je     0x14001339b
   140013381:	lea    rdx,[rip+0x8558]        # 0x14001b8e0
   140013388:	lea    rcx,[rip+0x8729]        # 0x14001bab8
   14001338f:	mov    r8d,0x87e
   140013395:	call   QWORD PTR [rip+0x5e7d]        # 0x140019218
   14001339b:	mov    rax,QWORD PTR [rbx+0x38]
   14001339f:	movzx  ecx,BYTE PTR [rbx+0x50]
   1400133a3:	mov    QWORD PTR [rbx+0x70],rsi
   1400133a7:	shr    BYTE PTR [rax],cl
   1400133a9:	cmp    DWORD PTR [rbx+0x50],0x8
   1400133ad:	mov    rax,rsi
   1400133b0:	sete   al
   1400133b3:	sub    QWORD PTR [rbx+0x30],rax
   1400133b7:	test   DWORD PTR [rbx+0x10],0x1000
   1400133be:	je     0x140013437
   1400133c0:	cmp    DWORD PTR [rbx+0x7c],esi
   1400133c3:	jne    0x140013437
   1400133c5:	mov    ecx,DWORD PTR [rbx+0x5c]
   1400133c8:	mov    eax,0x78
   1400133cd:	shl    eax,cl
   1400133cf:	or     DWORD PTR [rbx+0x60],eax
   1400133d2:	lea    eax,[rcx+0x8]
   1400133d5:	mov    DWORD PTR [rbx+0x5c],eax
   1400133d8:	cmp    eax,0x8
   1400133db:	jb     0x140013402
   1400133dd:	nop    DWORD PTR [rax]
   1400133e0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400133e4:	cmp    rcx,QWORD PTR [rbx+0x48]
   1400133e8:	jae    0x1400133f4
   1400133ea:	movzx  eax,BYTE PTR [rbx+0x60]
   1400133ee:	mov    BYTE PTR [rcx],al
   1400133f0:	inc    QWORD PTR [rbx+0x40]
   1400133f4:	shr    DWORD PTR [rbx+0x60],0x8
   1400133f8:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   1400133fc:	cmp    DWORD PTR [rbx+0x5c],0x8
   140013400:	jae    0x1400133e0
   140013402:	mov    ecx,DWORD PTR [rbx+0x5c]
   140013405:	shl    edi,cl
   140013407:	or     DWORD PTR [rbx+0x60],edi
   14001340a:	lea    eax,[rcx+0x8]
   14001340d:	mov    DWORD PTR [rbx+0x5c],eax
   140013410:	cmp    eax,0x8
   140013413:	jb     0x140013437
   140013415:	mov    rcx,QWORD PTR [rbx+0x40]
   140013419:	cmp    rcx,QWORD PTR [rbx+0x48]
   14001341d:	jae    0x140013429
   14001341f:	movzx  eax,BYTE PTR [rbx+0x60]
   140013423:	mov    BYTE PTR [rcx],al
   140013425:	inc    QWORD PTR [rbx+0x40]
   140013429:	shr    DWORD PTR [rbx+0x60],0x8
   14001342d:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   140013431:	cmp    DWORD PTR [rbx+0x5c],0x8
   140013435:	jae    0x140013415
   140013437:	cmp    r12d,0x4
   14001343b:	mov    edi,esi
   14001343d:	sete   dil
   140013441:	cmp    edi,0x1
   140013444:	jbe    0x140013460
   140013446:	lea    rdx,[rip+0x8493]        # 0x14001b8e0
   14001344d:	lea    rcx,[rip+0x8504]        # 0x14001b958
   140013454:	mov    r8d,0x88a
   14001345a:	call   QWORD PTR [rip+0x5db8]        # 0x140019218
   140013460:	mov    ecx,DWORD PTR [rbx+0x5c]
   140013463:	shl    edi,cl
   140013465:	or     DWORD PTR [rbx+0x60],edi
   140013468:	lea    eax,[rcx+0x1]
   14001346b:	mov    DWORD PTR [rbx+0x5c],eax
   14001346e:	cmp    eax,0x8
   140013471:	jb     0x140013495
   140013473:	mov    rcx,QWORD PTR [rbx+0x40]
   140013477:	cmp    rcx,QWORD PTR [rbx+0x48]
   14001347b:	jae    0x140013487
   14001347d:	movzx  eax,BYTE PTR [rbx+0x60]
   140013481:	mov    BYTE PTR [rcx],al
   140013483:	inc    QWORD PTR [rbx+0x40]
   140013487:	shr    DWORD PTR [rbx+0x60],0x8
   14001348b:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001348f:	cmp    DWORD PTR [rbx+0x5c],0x8
   140013493:	jae    0x140013473
   140013495:	mov    rdi,QWORD PTR [rbx+0x40]
   140013499:	mov    ebp,DWORD PTR [rbx+0x60]
   14001349c:	mov    esi,DWORD PTR [rbx+0x5c]
   14001349f:	mov    r13d,0x2
   1400134a5:	test   r14d,r14d
   1400134a8:	jne    0x1400134f4
   1400134aa:	test   DWORD PTR [rbx+0x10],0x40000
   1400134b1:	jne    0x1400134c3
   1400134b3:	cmp    DWORD PTR [rbx+0x54],0x30
   1400134b7:	jb     0x1400134c3
   1400134b9:	mov    rcx,rbx
   1400134bc:	call   0x140014350
   1400134c1:	jmp    0x1400134cb
   1400134c3:	mov    rcx,rbx
   1400134c6:	call   0x1400149f0
   1400134cb:	mov    rcx,rbx
   1400134ce:	call   0x140011f20
   1400134d3:	mov    ecx,DWORD PTR [rbx+0x54]
   1400134d6:	mov    r15d,eax
   1400134d9:	test   ecx,ecx
   1400134db:	je     0x14001367b
   1400134e1:	mov    rdx,QWORD PTR [rbx+0x40]
   1400134e5:	sub    rdx,rdi
   1400134e8:	inc    rdx
   1400134eb:	cmp    rdx,rcx
   1400134ee:	jl     0x14001367b
   1400134f4:	mov    eax,DWORD PTR [rbx+0x24]
   1400134f7:	sub    eax,DWORD PTR [rbx+0x58]
   1400134fa:	cmp    eax,DWORD PTR [rbx+0x2c]
   1400134fd:	ja     0x14001367b
   140013503:	xor    eax,eax
   140013505:	mov    ecx,esi
   140013507:	mov    QWORD PTR [rbx+0x40],rdi
   14001350b:	shl    eax,cl
   14001350d:	or     eax,ebp
   14001350f:	mov    DWORD PTR [rbx+0x60],eax
   140013512:	lea    eax,[rsi+0x2]
   140013515:	mov    DWORD PTR [rbx+0x5c],eax
   140013518:	cmp    eax,0x8
   14001351b:	jb     0x140013542
   14001351d:	nop    DWORD PTR [rax]
   140013520:	mov    rcx,QWORD PTR [rbx+0x40]
   140013524:	cmp    rcx,QWORD PTR [rbx+0x48]
   140013528:	jae    0x140013534
   14001352a:	movzx  eax,BYTE PTR [rbx+0x60]
   14001352e:	mov    BYTE PTR [rcx],al
   140013530:	inc    QWORD PTR [rbx+0x40]
   140013534:	shr    DWORD PTR [rbx+0x60],0x8
   140013538:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001353c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140013540:	jae    0x140013520
   140013542:	mov    eax,DWORD PTR [rbx+0x5c]
   140013545:	test   eax,eax
   140013547:	je     0x140013586
   140013549:	mov    ecx,eax
   14001354b:	mov    edx,0x8
   140013550:	sub    edx,eax
   140013552:	xor    eax,eax
   140013554:	shl    eax,cl
   140013556:	or     DWORD PTR [rbx+0x60],eax
   140013559:	lea    eax,[rcx+rdx*1]
   14001355c:	mov    DWORD PTR [rbx+0x5c],eax
   14001355f:	cmp    eax,0x8
   140013562:	jb     0x140013586
   140013564:	mov    rcx,QWORD PTR [rbx+0x40]
   140013568:	cmp    rcx,QWORD PTR [rbx+0x48]
   14001356c:	jae    0x140013578
   14001356e:	movzx  eax,BYTE PTR [rbx+0x60]
   140013572:	mov    BYTE PTR [rcx],al
   140013574:	inc    QWORD PTR [rbx+0x40]
   140013578:	shr    DWORD PTR [rbx+0x60],0x8
   14001357c:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   140013580:	cmp    DWORD PTR [rbx+0x5c],0x8
   140013584:	jae    0x140013564
   140013586:	mov    esi,r13d
   140013589:	nop    DWORD PTR [rax+0x0]
   140013590:	movzx  edi,WORD PTR [rbx+0x54]
   140013594:	cmp    edi,0xffff
   14001359a:	jbe    0x1400135b6
   14001359c:	lea    rdx,[rip+0x833d]        # 0x14001b8e0
   1400135a3:	lea    rcx,[rip+0x83ae]        # 0x14001b958
   1400135aa:	mov    r8d,0x89a
   1400135b0:	call   QWORD PTR [rip+0x5c62]        # 0x140019218
   1400135b6:	mov    ecx,DWORD PTR [rbx+0x5c]
   1400135b9:	shl    edi,cl
   1400135bb:	or     DWORD PTR [rbx+0x60],edi
   1400135be:	lea    eax,[rcx+0x10]
   1400135c1:	mov    DWORD PTR [rbx+0x5c],eax
   1400135c4:	cmp    eax,0x8
   1400135c7:	jb     0x1400135f2
   1400135c9:	nop    DWORD PTR [rax+0x0]
   1400135d0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400135d4:	cmp    rcx,QWORD PTR [rbx+0x48]
   1400135d8:	jae    0x1400135e4
   1400135da:	movzx  eax,BYTE PTR [rbx+0x60]
   1400135de:	mov    BYTE PTR [rcx],al
   1400135e0:	inc    QWORD PTR [rbx+0x40]
   1400135e4:	shr    DWORD PTR [rbx+0x60],0x8
   1400135e8:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   1400135ec:	cmp    DWORD PTR [rbx+0x5c],0x8
   1400135f0:	jae    0x1400135d0
   1400135f2:	xor    DWORD PTR [rbx+0x54],0xffff
   1400135f9:	dec    esi
   1400135fb:	jne    0x140013590
   1400135fd:	cmp    DWORD PTR [rbx+0x54],esi
   140013600:	jbe    0x14001369a
   140013606:	mov    eax,DWORD PTR [rbx+0x58]
   140013609:	add    eax,esi
   14001360b:	and    eax,0x7fff
   140013610:	movzx  edi,BYTE PTR [rax+rbx*1+0xc8]
   140013618:	cmp    edi,0xff
   14001361e:	jbe    0x14001363a
   140013620:	lea    rdx,[rip+0x82b9]        # 0x14001b8e0
   140013627:	lea    rcx,[rip+0x832a]        # 0x14001b958
   14001362e:	mov    r8d,0x89e
   140013634:	call   QWORD PTR [rip+0x5bde]        # 0x140019218
   14001363a:	mov    ecx,DWORD PTR [rbx+0x5c]
   14001363d:	shl    edi,cl
   14001363f:	or     DWORD PTR [rbx+0x60],edi
   140013642:	lea    eax,[rcx+0x8]
   140013645:	mov    DWORD PTR [rbx+0x5c],eax
   140013648:	cmp    eax,0x8
   14001364b:	jb     0x140013672
   14001364d:	nop    DWORD PTR [rax]
   140013650:	mov    rcx,QWORD PTR [rbx+0x40]
   140013654:	cmp    rcx,QWORD PTR [rbx+0x48]
   140013658:	jae    0x140013664
   14001365a:	movzx  eax,BYTE PTR [rbx+0x60]
   14001365e:	mov    BYTE PTR [rcx],al
   140013660:	inc    QWORD PTR [rbx+0x40]
   140013664:	shr    DWORD PTR [rbx+0x60],0x8
   140013668:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001366c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140013670:	jae    0x140013650
   140013672:	inc    esi
   140013674:	cmp    esi,DWORD PTR [rbx+0x54]
   140013677:	jb     0x140013606
   140013679:	jmp    0x14001369a
   14001367b:	test   r15d,r15d
   14001367e:	jne    0x14001369a
   140013680:	mov    rcx,rbx
   140013683:	mov    QWORD PTR [rbx+0x40],rdi
   140013687:	mov    DWORD PTR [rbx+0x60],ebp
   14001368a:	mov    DWORD PTR [rbx+0x5c],esi
   14001368d:	call   0x1400149f0
   140013692:	mov    rcx,rbx
   140013695:	call   0x140011f20
   14001369a:	test   r12d,r12d
   14001369d:	je     0x14001386d
   1400136a3:	cmp    r12d,0x4
   1400136a7:	jne    0x14001377f
   1400136ad:	mov    eax,DWORD PTR [rbx+0x5c]
   1400136b0:	test   eax,eax
   1400136b2:	je     0x1400136f2
   1400136b4:	mov    ecx,eax
   1400136b6:	mov    edx,0x8
   1400136bb:	sub    edx,eax
   1400136bd:	xor    eax,eax
   1400136bf:	shl    eax,cl
   1400136c1:	or     DWORD PTR [rbx+0x60],eax
   1400136c4:	lea    eax,[rcx+rdx*1]
   1400136c7:	mov    DWORD PTR [rbx+0x5c],eax
   1400136ca:	cmp    eax,0x8
   1400136cd:	jb     0x1400136f2
   1400136cf:	nop
   1400136d0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400136d4:	cmp    rcx,QWORD PTR [rbx+0x48]
   1400136d8:	jae    0x1400136e4
   1400136da:	movzx  eax,BYTE PTR [rbx+0x60]
   1400136de:	mov    BYTE PTR [rcx],al
   1400136e0:	inc    QWORD PTR [rbx+0x40]
   1400136e4:	shr    DWORD PTR [rbx+0x60],0x8
   1400136e8:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   1400136ec:	cmp    DWORD PTR [rbx+0x5c],0x8
   1400136f0:	jae    0x1400136d0
   1400136f2:	test   DWORD PTR [rbx+0x10],0x1000
   1400136f9:	je     0x14001386d
   1400136ff:	mov    esi,DWORD PTR [rbx+0x20]
   140013702:	mov    ebp,0x4
   140013707:	nop    WORD PTR [rax+rax*1+0x0]
   140013710:	mov    edi,esi
   140013712:	shr    edi,0x18
   140013715:	cmp    edi,0xff
   14001371b:	jbe    0x140013737
   14001371d:	lea    rdx,[rip+0x81bc]        # 0x14001b8e0
   140013724:	lea    rcx,[rip+0x822d]        # 0x14001b958
   14001372b:	mov    r8d,0x8ad
   140013731:	call   QWORD PTR [rip+0x5ae1]        # 0x140019218
   140013737:	mov    ecx,DWORD PTR [rbx+0x5c]
   14001373a:	shl    edi,cl
   14001373c:	or     DWORD PTR [rbx+0x60],edi
   14001373f:	lea    eax,[rcx+0x8]
   140013742:	mov    DWORD PTR [rbx+0x5c],eax
   140013745:	cmp    eax,0x8
   140013748:	jb     0x140013772
   14001374a:	nop    WORD PTR [rax+rax*1+0x0]
   140013750:	mov    rcx,QWORD PTR [rbx+0x40]
   140013754:	cmp    rcx,QWORD PTR [rbx+0x48]
   140013758:	jae    0x140013764
   14001375a:	movzx  eax,BYTE PTR [rbx+0x60]
   14001375e:	mov    BYTE PTR [rcx],al
   140013760:	inc    QWORD PTR [rbx+0x40]
   140013764:	shr    DWORD PTR [rbx+0x60],0x8
   140013768:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001376c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140013770:	jae    0x140013750
   140013772:	shl    esi,0x8
   140013775:	dec    rbp
   140013778:	jne    0x140013710
   14001377a:	jmp    0x14001386d
   14001377f:	mov    ecx,DWORD PTR [rbx+0x5c]
   140013782:	xor    eax,eax
   140013784:	xor    esi,esi
   140013786:	shl    eax,cl
   140013788:	or     DWORD PTR [rbx+0x60],eax
   14001378b:	lea    eax,[rcx+0x3]
   14001378e:	mov    DWORD PTR [rbx+0x5c],eax
   140013791:	cmp    eax,0x8
   140013794:	jb     0x1400137b8
   140013796:	mov    rcx,QWORD PTR [rbx+0x40]
   14001379a:	cmp    rcx,QWORD PTR [rbx+0x48]
   14001379e:	jae    0x1400137aa
   1400137a0:	movzx  eax,BYTE PTR [rbx+0x60]
   1400137a4:	mov    BYTE PTR [rcx],al
   1400137a6:	inc    QWORD PTR [rbx+0x40]
   1400137aa:	shr    DWORD PTR [rbx+0x60],0x8
   1400137ae:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   1400137b2:	cmp    DWORD PTR [rbx+0x5c],0x8
   1400137b6:	jae    0x140013796
   1400137b8:	mov    eax,DWORD PTR [rbx+0x5c]
   1400137bb:	test   eax,eax
   1400137bd:	je     0x140013802
   1400137bf:	mov    ecx,eax
   1400137c1:	mov    edx,0x8
   1400137c6:	sub    edx,eax
   1400137c8:	xor    eax,eax
   1400137ca:	shl    eax,cl
   1400137cc:	or     DWORD PTR [rbx+0x60],eax
   1400137cf:	lea    eax,[rdx+rcx*1]
   1400137d2:	mov    DWORD PTR [rbx+0x5c],eax
   1400137d5:	cmp    eax,0x8
   1400137d8:	jb     0x140013802
   1400137da:	nop    WORD PTR [rax+rax*1+0x0]
   1400137e0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400137e4:	cmp    rcx,QWORD PTR [rbx+0x48]
   1400137e8:	jae    0x1400137f4
   1400137ea:	movzx  eax,BYTE PTR [rbx+0x60]
   1400137ee:	mov    BYTE PTR [rcx],al
   1400137f0:	inc    QWORD PTR [rbx+0x40]
   1400137f4:	shr    DWORD PTR [rbx+0x60],0x8
   1400137f8:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   1400137fc:	cmp    DWORD PTR [rbx+0x5c],0x8
   140013800:	jae    0x1400137e0
   140013802:	movzx  edi,si
   140013805:	cmp    edi,0xffff
   14001380b:	jbe    0x140013827
   14001380d:	lea    rdx,[rip+0x80cc]        # 0x14001b8e0
   140013814:	lea    rcx,[rip+0x813d]        # 0x14001b958
   14001381b:	mov    r8d,0x8b1
   140013821:	call   QWORD PTR [rip+0x59f1]        # 0x140019218
   140013827:	mov    ecx,DWORD PTR [rbx+0x5c]
   14001382a:	shl    edi,cl
   14001382c:	or     DWORD PTR [rbx+0x60],edi
   14001382f:	lea    eax,[rcx+0x10]
   140013832:	mov    DWORD PTR [rbx+0x5c],eax
   140013835:	cmp    eax,0x8
   140013838:	jb     0x140013862
   14001383a:	nop    WORD PTR [rax+rax*1+0x0]
   140013840:	mov    rcx,QWORD PTR [rbx+0x40]
   140013844:	cmp    rcx,QWORD PTR [rbx+0x48]
   140013848:	jae    0x140013854
   14001384a:	movzx  eax,BYTE PTR [rbx+0x60]
   14001384e:	mov    BYTE PTR [rcx],al
   140013850:	inc    QWORD PTR [rbx+0x40]
   140013854:	shr    DWORD PTR [rbx+0x60],0x8
   140013858:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001385c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140013860:	jae    0x140013840
   140013862:	xor    esi,0xffff
   140013868:	dec    r13d
   14001386b:	jne    0x140013802
   14001386d:	mov    rax,QWORD PTR [rbx+0x48]
   140013871:	cmp    QWORD PTR [rbx+0x40],rax
   140013875:	jb     0x140013891
   140013877:	lea    rdx,[rip+0x8062]        # 0x14001b8e0
   14001387e:	lea    rcx,[rip+0x827b]        # 0x14001bb00
   140013885:	mov    r8d,0x8b5
   14001388b:	call   QWORD PTR [rip+0x5987]        # 0x140019218
   140013891:	lea    rcx,[rbx+0x81ca]
   140013898:	xor    edx,edx
   14001389a:	mov    r8d,0x240
   1400138a0:	call   0x14001734c
   1400138a5:	xor    eax,eax
   1400138a7:	mov    QWORD PTR [rbx+0x840a],rax
   1400138ae:	mov    QWORD PTR [rbx+0x8412],rax
   1400138b5:	mov    QWORD PTR [rbx+0x841a],rax
   1400138bc:	mov    QWORD PTR [rbx+0x8422],rax
   1400138c3:	mov    QWORD PTR [rbx+0x842a],rax
   1400138ca:	mov    QWORD PTR [rbx+0x8432],rax
   1400138d1:	mov    QWORD PTR [rbx+0x843a],rax
   1400138d8:	mov    QWORD PTR [rbx+0x8442],rax
   1400138df:	mov    esi,DWORD PTR [rbx+0x40]
   1400138e2:	inc    DWORD PTR [rbx+0x7c]
   1400138e5:	lea    rax,[rbx+0x92ab]
   1400138ec:	mov    DWORD PTR [rbx+0x50],0x8
   1400138f3:	mov    QWORD PTR [rbx+0x30],rax
   1400138f7:	lea    rax,[rbx+0x92aa]
   1400138fe:	mov    QWORD PTR [rbx+0x38],rax
   140013902:	mov    eax,DWORD PTR [rbx+0x54]
   140013905:	mov    DWORD PTR [rbx+0x54],0x0
   14001390c:	add    DWORD PTR [rbx+0x58],eax
   14001390f:	mov    rax,QWORD PTR [rsp+0x50]
   140013914:	sub    esi,eax
   140013916:	je     0x1400139c0
   14001391c:	cmp    QWORD PTR [rbx],0x0
   140013920:	je     0x14001395c
   140013922:	mov    rcx,QWORD PTR [rbx+0xb0]
   140013929:	mov    rax,QWORD PTR [rbx+0x98]
   140013930:	mov    edx,esi
   140013932:	sub    rcx,QWORD PTR [rbx+0x88]
   140013939:	mov    QWORD PTR [rax],rcx
   14001393c:	mov    r8,QWORD PTR [rbx+0x8]
   140013940:	lea    rcx,[rbx+0x392aa]
   140013947:	call   QWORD PTR [rbx]
   140013949:	test   eax,eax
   14001394b:	jne    0x1400139c0
   14001394d:	mov    DWORD PTR [rbx+0x84],0xffffffff
   140013957:	or     eax,0xffffffff
   14001395a:	jmp    0x1400139c3
   14001395c:	lea    rdx,[rbx+0x392aa]
   140013963:	cmp    rax,rdx
   140013966:	movsxd rax,esi
   140013969:	jne    0x1400139b9
   14001396b:	mov    r8,QWORD PTR [rbx+0xa0]
   140013972:	mov    r9,QWORD PTR [rbx+0xc0]
   140013979:	mov    rcx,QWORD PTR [r8]
   14001397c:	sub    rcx,r9
   14001397f:	cmp    rax,rcx
   140013982:	jae    0x140013988
   140013984:	mov    ebp,esi
   140013986:	jmp    0x140013991
   140013988:	mov    ebp,DWORD PTR [r8]
   14001398b:	sub    ebp,DWORD PTR [rbx+0xc0]
   140013991:	mov    rcx,QWORD PTR [rbx+0x90]
   140013998:	movsxd rdi,ebp
   14001399b:	add    rcx,r9
   14001399e:	mov    r8,rdi
   1400139a1:	call   0x140017346
   1400139a6:	add    QWORD PTR [rbx+0xc0],rdi
   1400139ad:	sub    esi,ebp
   1400139af:	je     0x1400139c0
   1400139b1:	mov    DWORD PTR [rbx+0x70],ebp
   1400139b4:	mov    DWORD PTR [rbx+0x74],esi
   1400139b7:	jmp    0x1400139c0
   1400139b9:	add    QWORD PTR [rbx+0xc0],rax
   1400139c0:	mov    eax,DWORD PTR [rbx+0x74]
   1400139c3:	mov    rbx,QWORD PTR [rsp+0x58]
   1400139c8:	mov    rbp,QWORD PTR [rsp+0x60]
   1400139cd:	mov    rsi,QWORD PTR [rsp+0x68]
   1400139d2:	add    rsp,0x20
   1400139d6:	pop    r15
   1400139d8:	pop    r14
   1400139da:	pop    r13
   1400139dc:	pop    r12
   1400139de:	pop    rdi
   1400139df:	ret    
   1400139e0:	rex push rdi
   1400139e2:	sub    rsp,0x20
   1400139e6:	mov    rdi,rcx
   1400139e9:	mov    rcx,QWORD PTR [rcx+0x98]
   1400139f0:	test   rcx,rcx
   1400139f3:	je     0x140013a06
   1400139f5:	mov    rax,QWORD PTR [rdi+0xb0]
   1400139fc:	sub    rax,QWORD PTR [rdi+0x88]
   140013a03:	mov    QWORD PTR [rcx],rax
   140013a06:	mov    rax,QWORD PTR [rdi+0xa0]
   140013a0d:	test   rax,rax
   140013a10:	je     0x140013a71
   140013a12:	mov    rax,QWORD PTR [rax]
   140013a15:	mov    rcx,QWORD PTR [rdi+0x90]
   140013a1c:	mov    QWORD PTR [rsp+0x30],rbx
   140013a21:	sub    rax,QWORD PTR [rdi+0xc0]
   140013a28:	mov    ebx,DWORD PTR [rdi+0x74]
   140013a2b:	lea    rdx,[rdi+0x392aa]
   140013a32:	cmp    rax,rbx
   140013a35:	cmovb  rbx,rax
   140013a39:	mov    eax,DWORD PTR [rdi+0x70]
   140013a3c:	add    rcx,QWORD PTR [rdi+0xc0]
   140013a43:	add    rdx,rax
   140013a46:	mov    r8,rbx
   140013a49:	call   0x140017346
   140013a4e:	add    DWORD PTR [rdi+0x70],ebx
   140013a51:	sub    DWORD PTR [rdi+0x74],ebx
   140013a54:	add    QWORD PTR [rdi+0xc0],rbx
   140013a5b:	mov    rax,QWORD PTR [rdi+0xa0]
   140013a62:	mov    rcx,QWORD PTR [rdi+0xc0]
   140013a69:	mov    rbx,QWORD PTR [rsp+0x30]
   140013a6e:	mov    QWORD PTR [rax],rcx
   140013a71:	cmp    DWORD PTR [rdi+0x78],0x0
   140013a75:	je     0x140013a88
   140013a77:	cmp    DWORD PTR [rdi+0x74],0x0
   140013a7b:	jne    0x140013a88
   140013a7d:	mov    eax,0x1
   140013a82:	add    rsp,0x20
   140013a86:	pop    rdi
   140013a87:	ret    
   140013a88:	xor    eax,eax
   140013a8a:	add    rsp,0x20
   140013a8e:	pop    rdi
   140013a8f:	ret    
   140013a90:	mov    eax,DWORD PTR [rcx+0x20]
   140013a93:	ret    
   140013a94:	int3   
   140013a95:	int3   
   140013a96:	int3   
   140013a97:	int3   
   140013a98:	int3   
   140013a99:	int3   
   140013a9a:	int3   
   140013a9b:	int3   
   140013a9c:	int3   
   140013a9d:	int3   
   140013a9e:	int3   
   140013a9f:	int3   
   140013aa0:	mov    eax,DWORD PTR [rcx+0x84]
   140013aa6:	ret    
   140013aa7:	int3   
   140013aa8:	int3   
   140013aa9:	int3   
   140013aaa:	int3   
   140013aab:	int3   
   140013aac:	int3   
   140013aad:	int3   
   140013aae:	int3   
   140013aaf:	int3   
   140013ab0:	sub    rsp,0x8
   140013ab4:	xor    r10d,r10d
   140013ab7:	movsxd r11,r8d
   140013aba:	mov    r9,rcx
   140013abd:	cmp    edx,0x1
   140013ac0:	jle    0x140013bcb
   140013ac6:	mov    QWORD PTR [rsp+0x10],rbx
   140013acb:	mov    QWORD PTR [rsp+0x18],rbp
   140013ad0:	lea    eax,[r11+0x1]
   140013ad4:	movsxd rcx,eax
   140013ad7:	mov    QWORD PTR [rsp+0x20],rsi
   140013adc:	mov    QWORD PTR [rsp],rdi
   140013ae0:	cmp    rcx,0x20
   140013ae4:	jg     0x140013aff
   140013ae6:	mov    eax,DWORD PTR [r9+r11*4]
   140013aea:	lea    rdx,[r9+r11*4]
   140013aee:	xchg   ax,ax
   140013af0:	add    eax,DWORD PTR [r9+rcx*4]
   140013af4:	inc    rcx
   140013af7:	mov    DWORD PTR [rdx],eax
   140013af9:	cmp    rcx,0x20
   140013afd:	jle    0x140013af0
   140013aff:	mov    ebx,r10d
   140013b02:	mov    edi,r10d
   140013b05:	mov    ebp,r11d
   140013b08:	mov    rsi,r11
   140013b0b:	mov    rdx,r11
   140013b0e:	cmp    r11,0x2
   140013b12:	jl     0x140013b56
   140013b14:	lea    rax,[r11-0x2]
   140013b18:	mov    r8d,r10d
   140013b1b:	shr    rax,1
   140013b1e:	lea    ecx,[rax*2+0x2]
   140013b25:	sub    ebp,ecx
   140013b27:	nop    WORD PTR [rax+rax*1+0x0]
   140013b30:	mov    eax,DWORD PTR [r9+rdx*4]
   140013b34:	mov    ecx,r8d
   140013b37:	sub    rdx,0x2
   140013b3b:	shl    eax,cl
   140013b3d:	lea    ecx,[r8+0x1]
   140013b41:	add    r8d,0x2
   140013b45:	add    ebx,eax
   140013b47:	mov    eax,DWORD PTR [r9+rdx*4+0x4]
   140013b4c:	shl    eax,cl
   140013b4e:	add    edi,eax
   140013b50:	cmp    rdx,0x1
   140013b54:	jg     0x140013b30
   140013b56:	test   rdx,rdx
   140013b59:	jle    0x140013b67
   140013b5b:	mov    r10d,DWORD PTR [r9+rdx*4]
   140013b5f:	mov    ecx,r11d
   140013b62:	sub    ecx,ebp
   140013b64:	shl    r10d,cl
   140013b67:	mov    rbp,QWORD PTR [rsp+0x18]
   140013b6c:	lea    eax,[rdi+rbx*1]
   140013b6f:	mov    rdi,QWORD PTR [rsp]
   140013b73:	mov    rbx,QWORD PTR [rsp+0x10]
   140013b78:	add    r10d,eax
   140013b7b:	mov    ecx,r11d
   140013b7e:	mov    eax,0x1
   140013b83:	shl    eax,cl
   140013b85:	cmp    r10d,eax
   140013b88:	je     0x140013bc6
   140013b8a:	dec    r11
   140013b8d:	sub    r10d,eax
   140013b90:	mov    r8d,r10d
   140013b93:	dec    DWORD PTR [r9+rsi*4]
   140013b97:	mov    rax,r11
   140013b9a:	test   r11,r11
   140013b9d:	jle    0x140013bc1
   140013b9f:	nop
   140013ba0:	mov    edx,DWORD PTR [r9+rax*4]
   140013ba4:	test   edx,edx
   140013ba6:	jne    0x140013bb2
   140013ba8:	dec    rax
   140013bab:	test   rax,rax
   140013bae:	jg     0x140013ba0
   140013bb0:	jmp    0x140013bc1
   140013bb2:	add    DWORD PTR [r9+rax*4+0x4],0x2
   140013bb8:	lea    rcx,[r9+rax*4]
   140013bbc:	lea    eax,[rdx-0x1]
   140013bbf:	mov    DWORD PTR [rcx],eax
   140013bc1:	dec    r8
   140013bc4:	jne    0x140013b93
   140013bc6:	mov    rsi,QWORD PTR [rsp+0x20]
   140013bcb:	add    rsp,0x8
   140013bcf:	ret    
   140013bd0:	rex push rbx
   140013bd2:	sub    rsp,0x20
   140013bd6:	mov    QWORD PTR [rcx],rdx
   140013bd9:	mov    rbx,rcx
   140013bdc:	mov    QWORD PTR [rcx+0x8],r8
   140013be0:	mov    DWORD PTR [rcx+0x10],r9d
   140013be4:	mov    edx,r9d
   140013be7:	mov    eax,0x55555556
   140013bec:	and    edx,0xfff
   140013bf2:	add    edx,0x2
   140013bf5:	imul   edx
   140013bf7:	mov    eax,0x55555556
   140013bfc:	mov    ecx,edx
   140013bfe:	inc    edx
   140013c00:	shr    ecx,0x1f
   140013c03:	add    ecx,edx
   140013c05:	mov    DWORD PTR [rbx+0x14],ecx
   140013c08:	mov    ecx,r9d
   140013c0b:	shr    ecx,0xe
   140013c0e:	and    ecx,0x1
   140013c11:	mov    DWORD PTR [rbx+0x1c],ecx
   140013c14:	mov    ecx,r9d
   140013c17:	sar    ecx,0x2
   140013c1a:	and    ecx,0x3ff
   140013c20:	add    ecx,0x2
   140013c23:	imul   ecx
   140013c25:	mov    eax,edx
   140013c27:	shr    eax,0x1f
   140013c2a:	inc    eax
   140013c2c:	add    eax,edx
   140013c2e:	mov    DWORD PTR [rbx+0x18],eax
   140013c31:	bt     r9d,0xf
   140013c36:	jb     0x140013c4c
   140013c38:	lea    rcx,[rbx+0x292aa]
   140013c3f:	xor    edx,edx
   140013c41:	mov    r8d,0x10000
   140013c47:	call   0x14001734c
   140013c4c:	xor    ecx,ecx
   140013c4e:	lea    rax,[rbx+0x92ab]
   140013c55:	xor    edx,edx
   140013c57:	mov    QWORD PTR [rbx+0x30],rax
   140013c5b:	lea    rax,[rbx+0x92aa]
   140013c62:	mov    QWORD PTR [rbx+0x58],rcx
   140013c66:	mov    QWORD PTR [rbx+0x38],rax
   140013c6a:	lea    rax,[rbx+0x392aa]
   140013c71:	mov    QWORD PTR [rbx+0x28],rcx
   140013c75:	mov    QWORD PTR [rbx+0x7c],rcx
   140013c79:	mov    QWORD PTR [rbx+0x60],rcx
   140013c7d:	mov    QWORD PTR [rbx+0x74],rcx
   140013c81:	mov    QWORD PTR [rbx+0x6c],rcx
   140013c85:	mov    DWORD PTR [rbx+0x84],ecx
   140013c8b:	mov    DWORD PTR [rbx+0x68],ecx
   140013c8e:	mov    QWORD PTR [rbx+0x88],rcx
   140013c95:	mov    QWORD PTR [rbx+0x90],rcx
   140013c9c:	mov    QWORD PTR [rbx+0x98],rcx
   140013ca3:	mov    QWORD PTR [rbx+0xa0],rcx
   140013caa:	mov    DWORD PTR [rbx+0xa8],ecx
   140013cb0:	mov    QWORD PTR [rbx+0xb0],rcx
   140013cb7:	mov    QWORD PTR [rbx+0xb8],rcx
   140013cbe:	mov    QWORD PTR [rbx+0xc0],rcx
   140013cc5:	lea    rcx,[rbx+0x81ca]
   140013ccc:	mov    r8d,0x240
   140013cd2:	mov    QWORD PTR [rbx+0x40],rax
   140013cd6:	mov    QWORD PTR [rbx+0x48],rax
   140013cda:	mov    QWORD PTR [rbx+0x50],0x8
   140013ce2:	mov    QWORD PTR [rbx+0x20],0x1
   140013cea:	call   0x14001734c
   140013cef:	xor    eax,eax
   140013cf1:	mov    QWORD PTR [rbx+0x840a],rax
   140013cf8:	mov    QWORD PTR [rbx+0x8412],rax
   140013cff:	mov    QWORD PTR [rbx+0x841a],rax
   140013d06:	mov    QWORD PTR [rbx+0x8422],rax
   140013d0d:	mov    QWORD PTR [rbx+0x842a],rax
   140013d14:	mov    QWORD PTR [rbx+0x8432],rax
   140013d1b:	mov    QWORD PTR [rbx+0x843a],rax
   140013d22:	mov    QWORD PTR [rbx+0x8442],rax
   140013d29:	add    rsp,0x20
   140013d2d:	pop    rbx
   140013d2e:	ret    
   140013d2f:	int3   
   140013d30:	rex push rbx
   140013d32:	push   rbp
   140013d33:	push   r12
   140013d35:	sub    rsp,0xa50
   140013d3c:	mov    rbx,rcx
   140013d3f:	mov    ebp,r8d
   140013d42:	movsxd r12,edx
   140013d45:	lea    rcx,[rsp+0x20]
   140013d4a:	xor    edx,edx
   140013d4c:	mov    r8d,0x84
   140013d52:	mov    QWORD PTR [rsp+0xa48],r14
   140013d5a:	mov    r14d,r9d
   140013d5d:	call   0x14001734c
   140013d62:	cmp    DWORD PTR [rsp+0xa90],0x0
   140013d6a:	je     0x140013da5
   140013d6c:	test   ebp,ebp
   140013d6e:	jle    0x140013f0d
   140013d74:	lea    rdx,[r12+r12*8]
   140013d78:	lea    rcx,[rbx+0x8f4a]
   140013d7f:	shl    rdx,0x5
   140013d83:	add    rcx,rdx
   140013d86:	mov    edx,ebp
   140013d88:	nop    DWORD PTR [rax+rax*1+0x0]
   140013d90:	movzx  eax,BYTE PTR [rcx]
   140013d93:	lea    rcx,[rcx+0x1]
   140013d97:	inc    DWORD PTR [rsp+rax*4+0x20]
   140013d9b:	dec    rdx
   140013d9e:	jne    0x140013d90
   140013da0:	jmp    0x140013f0d
   140013da5:	mov    QWORD PTR [rsp+0xa70],rsi
   140013dad:	mov    QWORD PTR [rsp+0xa78],rdi
   140013db5:	mov    QWORD PTR [rsp+0xa80],r13
   140013dbd:	lea    r13,[r12+r12*8]
   140013dc1:	lea    rdx,[rbx+0x81ca]
   140013dc8:	xor    esi,esi
   140013dca:	shl    r13,0x6
   140013dce:	xor    eax,eax
   140013dd0:	mov    QWORD PTR [rsp+0xa40],r15
   140013dd8:	add    rdx,r13
   140013ddb:	test   ebp,ebp
   140013ddd:	jle    0x140013e12
   140013ddf:	lea    rcx,[rsp+0x142]
   140013de7:	nop    WORD PTR [rax+rax*1+0x0]
   140013df0:	movzx  r8d,WORD PTR [rdx]
   140013df4:	test   r8w,r8w
   140013df8:	je     0x140013e08
   140013dfa:	mov    WORD PTR [rcx-0x2],r8w
   140013dff:	mov    WORD PTR [rcx],ax
   140013e02:	inc    esi
   140013e04:	add    rcx,0x4
   140013e08:	inc    eax
   140013e0a:	add    rdx,0x2
   140013e0e:	cmp    eax,ebp
   140013e10:	jl     0x140013df0
   140013e12:	lea    r8,[rsp+0x5c0]
   140013e1a:	lea    rdx,[rsp+0x140]
   140013e22:	mov    ecx,esi
   140013e24:	call   0x140014090
   140013e29:	mov    edx,esi
   140013e2b:	mov    rcx,rax
   140013e2e:	mov    r15,rax
   140013e31:	call   0x140011500
   140013e36:	test   esi,esi
   140013e38:	jle    0x140013e50
   140013e3a:	mov    rdx,r15
   140013e3d:	mov    r8d,esi
   140013e40:	movzx  ecx,WORD PTR [rdx]
   140013e43:	lea    rdx,[rdx+0x4]
   140013e47:	inc    DWORD PTR [rsp+rcx*4+0x20]
   140013e4b:	dec    r8
   140013e4e:	jne    0x140013e40
   140013e50:	lea    rcx,[rsp+0x20]
   140013e55:	mov    r8d,r14d
   140013e58:	mov    edx,esi
   140013e5a:	call   0x140013ab0
   140013e5f:	lea    rdi,[r12+r12*8]
   140013e63:	lea    rcx,[rbx+0x8f4a]
   140013e6a:	shl    rdi,0x5
   140013e6e:	xor    edx,edx
   140013e70:	mov    r8d,0x120
   140013e76:	add    rcx,rdi
   140013e79:	call   0x14001734c
   140013e7e:	lea    rcx,[rbx+0x888a]
   140013e85:	xor    edx,edx
   140013e87:	add    rcx,r13
   140013e8a:	mov    r8d,0x240
   140013e90:	call   0x14001734c
   140013e95:	mov    r13,QWORD PTR [rsp+0xa80]
   140013e9d:	mov    r8d,0x1
   140013ea3:	cmp    r14d,r8d
   140013ea6:	jl     0x140013ef5
   140013ea8:	movsxd r10,esi
   140013eab:	lea    r9,[rsp+0x24]
   140013eb0:	mov    ecx,DWORD PTR [r9]
   140013eb3:	test   ecx,ecx
   140013eb5:	jle    0x140013ee9
   140013eb7:	lea    rdx,[r10*4+0x2]
   140013ebf:	add    rdx,r15
   140013ec2:	sub    r10,rcx
   140013ec5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140013ed0:	movzx  eax,WORD PTR [rdx-0x4]
   140013ed4:	lea    rdx,[rdx-0x4]
   140013ed8:	dec    ecx
   140013eda:	add    rax,rdi
   140013edd:	mov    BYTE PTR [rax+rbx*1+0x8f4a],r8b
   140013ee5:	test   ecx,ecx
   140013ee7:	jg     0x140013ed0
   140013ee9:	inc    r8d
   140013eec:	add    r9,0x4
   140013ef0:	cmp    r8d,r14d
   140013ef3:	jle    0x140013eb0
   140013ef5:	mov    rdi,QWORD PTR [rsp+0xa78]
   140013efd:	mov    rsi,QWORD PTR [rsp+0xa70]
   140013f05:	mov    r15,QWORD PTR [rsp+0xa40]
   140013f0d:	xor    ecx,ecx
   140013f0f:	mov    DWORD PTR [rsp+0xb4],0x0
   140013f1a:	cmp    r14d,0x2
   140013f1e:	jl     0x140013f3c
   140013f20:	xor    edx,edx
   140013f22:	lea    r8d,[r14-0x1]
   140013f26:	add    ecx,DWORD PTR [rsp+rdx*1+0x24]
   140013f2a:	lea    rdx,[rdx+0x4]
   140013f2e:	add    ecx,ecx
   140013f30:	mov    DWORD PTR [rsp+rdx*1+0xb4],ecx
   140013f37:	dec    r8
   140013f3a:	jne    0x140013f26
   140013f3c:	mov    r14,QWORD PTR [rsp+0xa48]
   140013f44:	test   ebp,ebp
   140013f46:	jle    0x140013fc8
   140013f4c:	lea    r11,[rbx+0x8f4a]
   140013f53:	lea    r10,[rbx+0x888a]
   140013f5a:	lea    rax,[r12+r12*8]
   140013f5e:	shl    rax,0x5
   140013f62:	mov    rbx,rbp
   140013f65:	add    r11,rax
   140013f68:	lea    rax,[r12+r12*8]
   140013f6c:	shl    rax,0x6
   140013f70:	add    r10,rax
   140013f73:	movzx  r8d,BYTE PTR [r11]
   140013f77:	xor    eax,eax
   140013f79:	test   r8d,r8d
   140013f7c:	je     0x140013fbc
   140013f7e:	lea    rdx,[rsp+0xb0]
   140013f86:	mov    r9d,DWORD PTR [rdx+r8*4]
   140013f8a:	lea    rdx,[rdx+r8*4]
   140013f8e:	lea    ecx,[r9+0x1]
   140013f92:	mov    DWORD PTR [rdx],ecx
   140013f94:	jle    0x140013fb8
   140013f96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013fa0:	mov    edx,r9d
   140013fa3:	lea    ecx,[rax+rax*1]
   140013fa6:	dec    r8d
   140013fa9:	and    edx,0x1
   140013fac:	shr    r9d,1
   140013faf:	mov    eax,edx
   140013fb1:	or     eax,ecx
   140013fb3:	test   r8d,r8d
   140013fb6:	jg     0x140013fa0
   140013fb8:	mov    WORD PTR [r10],ax
   140013fbc:	add    r10,0x2
   140013fc0:	inc    r11
   140013fc3:	dec    rbx
   140013fc6:	jne    0x140013f73
   140013fc8:	add    rsp,0xa50
   140013fcf:	pop    r12
   140013fd1:	pop    rbp
   140013fd2:	pop    rbx
   140013fd3:	ret    
   140013fd4:	int3   
   140013fd5:	int3   
   140013fd6:	int3   
   140013fd7:	int3   
   140013fd8:	int3   
   140013fd9:	int3   
   140013fda:	int3   
   140013fdb:	int3   
   140013fdc:	int3   
   140013fdd:	int3   
   140013fde:	int3   
   140013fdf:	int3   
   140013fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140013fe5:	mov    QWORD PTR [rsp+0x10],rbp
   140013fea:	mov    QWORD PTR [rsp+0x18],rsi
   140013fef:	mov    QWORD PTR [rsp+0x20],rdi
   140013ff4:	push   r14
   140013ff6:	sub    rsp,0x20
   140013ffa:	mov    rsi,QWORD PTR [r8]
   140013ffd:	mov    rbx,QWORD PTR [r8+0x8]
   140014001:	movsxd r14,edx
   140014004:	add    rsi,r14
   140014007:	mov    rdi,r8
   14001400a:	mov    rbp,rcx
   14001400d:	cmp    rsi,rbx
   140014010:	jbe    0x14001404f
   140014012:	cmp    DWORD PTR [r8+0x18],0x0
   140014017:	jne    0x14001401d
   140014019:	xor    eax,eax
   14001401b:	jmp    0x140014069
   14001401d:	mov    ecx,0x80
   140014022:	lea    rax,[rbx+rbx*1]
   140014026:	cmp    rax,rcx
   140014029:	mov    rbx,rax
   14001402c:	cmovb  rbx,rcx
   140014030:	cmp    rsi,rbx
   140014033:	ja     0x140014022
   140014035:	mov    rcx,QWORD PTR [r8+0x10]
   140014039:	mov    rdx,rbx
   14001403c:	call   QWORD PTR [rip+0x52be]        # 0x140019300
   140014042:	test   rax,rax
   140014045:	je     0x140014019
   140014047:	mov    QWORD PTR [rdi+0x10],rax
   14001404b:	mov    QWORD PTR [rdi+0x8],rbx
   14001404f:	mov    rcx,QWORD PTR [rdi+0x10]
   140014053:	mov    r8,r14
   140014056:	mov    rdx,rbp
   140014059:	add    rcx,QWORD PTR [rdi]
   14001405c:	call   0x140017346
   140014061:	mov    QWORD PTR [rdi],rsi
   140014064:	mov    eax,0x1
   140014069:	mov    rbx,QWORD PTR [rsp+0x30]
   14001406e:	mov    rbp,QWORD PTR [rsp+0x38]
   140014073:	mov    rsi,QWORD PTR [rsp+0x40]
   140014078:	mov    rdi,QWORD PTR [rsp+0x48]
   14001407d:	add    rsp,0x20
   140014081:	pop    r14
   140014083:	ret    
   140014084:	int3   
   140014085:	int3   
   140014086:	int3   
   140014087:	int3   
   140014088:	int3   
   140014089:	int3   
   14001408a:	int3   
   14001408b:	int3   
   14001408c:	int3   
   14001408d:	int3   
   14001408e:	int3   
   14001408f:	int3   
   140014090:	mov    QWORD PTR [rsp+0x8],rbx
   140014095:	mov    QWORD PTR [rsp+0x10],rsi
   14001409a:	mov    QWORD PTR [rsp+0x18],rdi
   14001409f:	push   r14
   1400140a1:	sub    rsp,0xc20
   1400140a8:	mov    esi,ecx
   1400140aa:	mov    r14,r8
   1400140ad:	mov    rdi,rdx
   1400140b0:	lea    rcx,[rsp+0x420]
   1400140b8:	xor    edx,edx
   1400140ba:	mov    r8d,0x800
   1400140c0:	mov    ebx,0x2
   1400140c5:	call   0x14001734c
   1400140ca:	mov    r9d,0x100
   1400140d0:	test   esi,esi
   1400140d2:	je     0x140014110
   1400140d4:	mov    r8,rdi
   1400140d7:	mov    r10d,esi
   1400140da:	nop    WORD PTR [rax+rax*1+0x0]
   1400140e0:	movzx  edx,WORD PTR [r8]
   1400140e4:	lea    r8,[r8+0x4]
   1400140e8:	movzx  ecx,dl
   1400140eb:	shr    edx,0x8
   1400140ee:	inc    DWORD PTR [rsp+rcx*4+0x420]
   1400140f5:	movzx  eax,dl
   1400140f8:	add    eax,r9d
   1400140fb:	inc    DWORD PTR [rsp+rax*4+0x420]
   140014102:	dec    r10
   140014105:	jne    0x1400140e0
   140014107:	nop    WORD PTR [rax+rax*1+0x0]
   140014110:	mov    eax,r9d
   140014113:	cmp    esi,DWORD PTR [rsp+rax*4+0x420]
   14001411a:	jne    0x14001412a
   14001411c:	dec    ebx
   14001411e:	add    r9d,0xffffff00
   140014125:	cmp    ebx,0x1
   140014128:	ja     0x140014110
   14001412a:	xor    r11d,r11d
   14001412d:	xor    r10d,r10d
   140014130:	test   ebx,ebx
   140014132:	je     0x1400141ea
   140014138:	nop    DWORD PTR [rax+rax*1+0x0]
   140014140:	mov    eax,r10d
   140014143:	lea    rdx,[rsp+0x20]
   140014148:	lea    r8,[rsp+0x420]
   140014150:	shl    eax,0x8
   140014153:	xor    ecx,ecx
   140014155:	lea    r8,[r8+rax*4]
   140014159:	lea    rax,[rsp+0x20]
   14001415e:	sub    r8,rdx
   140014161:	mov    edx,0x80
   140014166:	data16 nop WORD PTR [rax+rax*1+0x0]
   140014170:	mov    DWORD PTR [rax],ecx
   140014172:	add    ecx,DWORD PTR [r8+rax*1]
   140014176:	lea    rax,[rax+0x8]
   14001417a:	mov    DWORD PTR [rax-0x4],ecx
   14001417d:	add    ecx,DWORD PTR [r8+rax*1-0x4]
   140014182:	dec    rdx
   140014185:	jne    0x140014170
   140014187:	test   esi,esi
   140014189:	je     0x1400141d1
   14001418b:	movzx  r8d,r11w
   14001418f:	mov    rdx,rdi
   140014192:	mov    r9,rsi
   140014195:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400141a0:	movzx  eax,WORD PTR [rdx]
   1400141a3:	mov    rcx,r8
   1400141a6:	lea    rdx,[rdx+0x4]
   1400141aa:	shr    rax,cl
   1400141ad:	movzx  eax,al
   1400141b0:	mov    ecx,DWORD PTR [rsp+rax*4+0x20]
   1400141b4:	mov    eax,DWORD PTR [rdx-0x4]
   1400141b7:	mov    DWORD PTR [r14+rcx*4],eax
   1400141bb:	movzx  eax,WORD PTR [rdx-0x4]
   1400141bf:	mov    rcx,r8
   1400141c2:	shr    rax,cl
   1400141c5:	movzx  eax,al
   1400141c8:	inc    DWORD PTR [rsp+rax*4+0x20]
   1400141cc:	dec    r9
   1400141cf:	jne    0x1400141a0
   1400141d1:	mov    rcx,rdi
   1400141d4:	inc    r10d
   1400141d7:	add    r11d,0x8
   1400141db:	mov    rdi,r14
   1400141de:	mov    r14,rcx
   1400141e1:	cmp    r10d,ebx
   1400141e4:	jb     0x140014140
   1400141ea:	lea    r11,[rsp+0xc20]
   1400141f2:	mov    rax,rdi
   1400141f5:	mov    rbx,QWORD PTR [r11+0x10]
   1400141f9:	mov    rsi,QWORD PTR [r11+0x18]
   1400141fd:	mov    rdi,QWORD PTR [r11+0x20]
   140014201:	mov    rsp,r11
   140014204:	pop    r14
   140014206:	ret    
   140014207:	int3   
   140014208:	int3   
   140014209:	int3   
   14001420a:	int3   
   14001420b:	int3   
   14001420c:	int3   
   14001420d:	int3   
   14001420e:	int3   
   14001420f:	int3   
   140014210:	mov    rax,QWORD PTR [rcx+0x30]
   140014214:	inc    DWORD PTR [rcx+0x54]
   140014217:	mov    BYTE PTR [rax],dl
   140014219:	inc    QWORD PTR [rcx+0x30]
   14001421d:	mov    rax,QWORD PTR [rcx+0x38]
   140014221:	shr    BYTE PTR [rax],1
   140014223:	dec    DWORD PTR [rcx+0x50]
   140014226:	jne    0x14001423e
   140014228:	mov    rax,QWORD PTR [rcx+0x30]
   14001422c:	mov    DWORD PTR [rcx+0x50],0x8
   140014233:	mov    QWORD PTR [rcx+0x38],rax
   140014237:	inc    rax
   14001423a:	mov    QWORD PTR [rcx+0x30],rax
   14001423e:	movzx  eax,dl
   140014241:	inc    WORD PTR [rcx+rax*2+0x81ca]
   140014249:	ret    
   14001424a:	int3   
   14001424b:	int3   
   14001424c:	int3   
   14001424d:	int3   
   14001424e:	int3   
   14001424f:	int3   
   140014250:	mov    QWORD PTR [rsp+0x8],rbx
   140014255:	mov    QWORD PTR [rsp+0x10],rsi
   14001425a:	push   rdi
   14001425b:	sub    rsp,0x20
   14001425f:	mov    edi,r8d
   140014262:	mov    esi,edx
   140014264:	mov    rbx,rcx
   140014267:	cmp    edx,0x3
   14001426a:	jb     0x140014277
   14001426c:	lea    eax,[r8-0x1]
   140014270:	cmp    eax,0x7fff
   140014275:	jbe    0x140014291
   140014277:	lea    rdx,[rip+0x7662]        # 0x14001b8e0
   14001427e:	lea    rcx,[rip+0x7a3b]        # 0x14001bcc0
   140014285:	mov    r8d,0x9b0
   14001428b:	call   QWORD PTR [rip+0x4f87]        # 0x140019218
   140014291:	mov    rax,QWORD PTR [rbx+0x30]
   140014295:	add    DWORD PTR [rbx+0x54],esi
   140014298:	lea    ecx,[rsi-0x3]
   14001429b:	mov    BYTE PTR [rax],cl
   14001429d:	mov    rax,QWORD PTR [rbx+0x30]
   1400142a1:	dec    edi
   1400142a3:	mov    BYTE PTR [rax+0x1],dil
   1400142a7:	mov    rax,QWORD PTR [rbx+0x30]
   1400142ab:	mov    ecx,edi
   1400142ad:	shr    ecx,0x8
   1400142b0:	mov    BYTE PTR [rax+0x2],cl
   1400142b3:	add    QWORD PTR [rbx+0x30],0x3
   1400142b8:	mov    rcx,QWORD PTR [rbx+0x38]
   1400142bc:	movzx  eax,BYTE PTR [rcx]
   1400142bf:	shr    al,1
   1400142c1:	or     al,0x80
   1400142c3:	mov    BYTE PTR [rcx],al
   1400142c5:	dec    DWORD PTR [rbx+0x50]
   1400142c8:	jne    0x1400142e0
   1400142ca:	mov    rax,QWORD PTR [rbx+0x30]
   1400142ce:	mov    DWORD PTR [rbx+0x50],0x8
   1400142d5:	mov    QWORD PTR [rbx+0x38],rax
   1400142d9:	inc    rax
   1400142dc:	mov    QWORD PTR [rbx+0x30],rax
   1400142e0:	mov    eax,edi
   1400142e2:	lea    r8,[rip+0xfffffffffffebd17]        # 0x140000000
   1400142e9:	mov    edx,edi
   1400142eb:	and    eax,0x1ff
   1400142f0:	shr    rdx,0x8
   1400142f4:	movzx  ecx,BYTE PTR [rax+r8*1+0x1b330]
   1400142fd:	and    edx,0x7f
   140014300:	cmp    edi,0x200
   140014306:	movzx  eax,BYTE PTR [rdx+r8*1+0x1b730]
   14001430f:	cmovb  eax,ecx
   140014312:	inc    WORD PTR [rbx+rax*2+0x840a]
   14001431a:	cmp    esi,0x3
   14001431d:	jb     0x140014333
   14001431f:	lea    eax,[rsi-0x3]
   140014322:	movzx  eax,WORD PTR [r8+rax*2+0x1b030]
   14001432b:	inc    WORD PTR [rbx+rax*2+0x81ca]
   140014333:	mov    rbx,QWORD PTR [rsp+0x30]
   140014338:	mov    rsi,QWORD PTR [rsp+0x38]
   14001433d:	add    rsp,0x20
   140014341:	pop    rdi
   140014342:	ret    
   140014343:	int3   
   140014344:	int3   
   140014345:	int3   
   140014346:	int3   
   140014347:	int3   
   140014348:	int3   
   140014349:	int3   
   14001434a:	int3   
   14001434b:	int3   
   14001434c:	int3   
   14001434d:	int3   
   14001434e:	int3   
   14001434f:	int3   
   140014350:	mov    QWORD PTR [rsp+0x8],rbx
   140014355:	mov    QWORD PTR [rsp+0x10],rsi
   14001435a:	mov    QWORD PTR [rsp+0x18],rdi
   14001435f:	push   rbp
   140014360:	push   r12
   140014362:	push   r13
   140014364:	push   r14
   140014366:	push   r15
   140014368:	lea    rbp,[rsp-0x1b0]
   140014370:	sub    rsp,0x2b0
   140014377:	mov    edi,0x1
   14001437c:	xor    r13d,r13d
   14001437f:	xor    edx,edx
   140014381:	lea    r9d,[rdi+0xe]
   140014385:	mov    r8d,0x120
   14001438b:	mov    rbx,rcx
   14001438e:	mov    r14b,0xff
   140014391:	mov    WORD PTR [rcx+0x83ca],di
   140014398:	mov    DWORD PTR [rsp+0x20],r13d
   14001439d:	call   0x140013d30
   1400143a2:	lea    r9d,[rdi+0xe]
   1400143a6:	lea    r8d,[rdi+0x1f]
   1400143aa:	mov    edx,edi
   1400143ac:	mov    rcx,rbx
   1400143af:	mov    DWORD PTR [rsp+0x20],r13d
   1400143b4:	call   0x140013d30
   1400143b9:	mov    r12d,0x11e
   1400143bf:	mov    eax,r12d
   1400143c2:	cmp    BYTE PTR [rax+rbx*1+0x8f49],r13b
   1400143ca:	jne    0x1400143da
   1400143cc:	dec    rax
   1400143cf:	dec    r12d
   1400143d2:	cmp    rax,0x101
   1400143d8:	jg     0x1400143c2
   1400143da:	mov    r15d,0x1e
   1400143e0:	mov    eax,r15d
   1400143e3:	cmp    BYTE PTR [rax+rbx*1+0x9069],r13b
   1400143eb:	jne    0x1400143f8
   1400143ed:	dec    rax
   1400143f0:	dec    r15d
   1400143f3:	cmp    rax,rdi
   1400143f6:	jg     0x1400143e3
   1400143f8:	movsxd rdi,r12d
   1400143fb:	lea    rdx,[rbx+0x8f4a]
   140014402:	lea    rcx,[rbp+0x70]
   140014406:	mov    r8,rdi
   140014409:	call   0x140017346
   14001440e:	lea    rcx,[rbp+0x70]
   140014412:	lea    rdx,[rbx+0x906a]
   140014419:	add    rcx,rdi
   14001441c:	movsxd r8,r15d
   14001441f:	call   0x140017346
   140014424:	xor    r8d,r8d
   140014427:	lea    eax,[r15+r12*1]
   14001442b:	mov    QWORD PTR [rbx+0x864a],r8
   140014432:	mov    QWORD PTR [rbx+0x8652],r8
   140014439:	mov    QWORD PTR [rbx+0x865a],r8
   140014440:	mov    QWORD PTR [rbx+0x8662],r8
   140014447:	mov    DWORD PTR [rbx+0x866a],r8d
   14001444e:	mov    esi,r13d
   140014451:	mov    WORD PTR [rbx+0x866e],r8w
   140014459:	mov    edx,r13d
   14001445c:	mov    ecx,r13d
   14001445f:	test   eax,eax
   140014461:	je     0x14001466e
   140014467:	lea    r9,[rbp+0x70]
   14001446b:	mov    r10d,eax
   14001446e:	xchg   ax,ax
   140014470:	movzx  r8d,BYTE PTR [r9]
   140014474:	test   r8b,r8b
   140014477:	jne    0x1400144e6
   140014479:	test   ecx,ecx
   14001447b:	je     0x1400144bb
   14001447d:	cmp    ecx,0x3
   140014480:	jae    0x14001449f
   140014482:	movzx  eax,r14b
   140014486:	add    WORD PTR [rbx+rax*2+0x864a],cx
   14001448e:	xchg   ax,ax
   140014490:	mov    eax,esi
   140014492:	inc    esi
   140014494:	mov    BYTE PTR [rsp+rax*1+0x30],r14b
   140014499:	dec    ecx
   14001449b:	jne    0x140014490
   14001449d:	jmp    0x1400144b8
   14001449f:	inc    WORD PTR [rbx+0x866a]
   1400144a6:	mov    eax,esi
   1400144a8:	inc    esi
   1400144aa:	sub    cl,0x3
   1400144ad:	mov    BYTE PTR [rsp+rax*1+0x30],0x10
   1400144b2:	mov    BYTE PTR [rsp+rsi*1+0x30],cl
   1400144b6:	inc    esi
   1400144b8:	mov    ecx,r13d
   1400144bb:	inc    edx
   1400144bd:	cmp    edx,0x8a
   1400144c3:	jne    0x1400145c1
   1400144c9:	inc    WORD PTR [rbx+0x866e]
   1400144d0:	mov    eax,esi
   1400144d2:	inc    esi
   1400144d4:	mov    BYTE PTR [rsp+rax*1+0x30],0x12
   1400144d9:	mov    BYTE PTR [rsp+rsi*1+0x30],0x7f
   1400144de:	mov    edx,r13d
   1400144e1:	jmp    0x1400145bf
   1400144e6:	test   edx,edx
   1400144e8:	je     0x140014541
   1400144ea:	cmp    edx,0x3
   1400144ed:	jae    0x14001450f
   1400144ef:	add    WORD PTR [rbx+0x864a],dx
   1400144f6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140014500:	mov    eax,esi
   140014502:	inc    esi
   140014504:	mov    BYTE PTR [rsp+rax*1+0x30],r13b
   140014509:	dec    edx
   14001450b:	jne    0x140014500
   14001450d:	jmp    0x14001453e
   14001450f:	mov    eax,esi
   140014511:	inc    esi
   140014513:	cmp    edx,0xa
   140014516:	ja     0x140014529
   140014518:	inc    WORD PTR [rbx+0x866c]
   14001451f:	mov    BYTE PTR [rsp+rax*1+0x30],0x11
   140014524:	sub    dl,0x3
   140014527:	jmp    0x140014538
   140014529:	inc    WORD PTR [rbx+0x866e]
   140014530:	mov    BYTE PTR [rsp+rax*1+0x30],0x12
   140014535:	sub    dl,0xb
   140014538:	mov    BYTE PTR [rsp+rsi*1+0x30],dl
   14001453c:	inc    esi
   14001453e:	mov    edx,r13d
   140014541:	cmp    r8b,r14b
   140014544:	je     0x1400145a0
   140014546:	test   ecx,ecx
   140014548:	je     0x14001458b
   14001454a:	cmp    ecx,0x3
   14001454d:	jae    0x14001456f
   14001454f:	movzx  eax,r14b
   140014553:	add    WORD PTR [rbx+rax*2+0x864a],cx
   14001455b:	nop    DWORD PTR [rax+rax*1+0x0]
   140014560:	mov    eax,esi
   140014562:	inc    esi
   140014564:	mov    BYTE PTR [rsp+rax*1+0x30],r14b
   140014569:	dec    ecx
   14001456b:	jne    0x140014560
   14001456d:	jmp    0x140014588
   14001456f:	inc    WORD PTR [rbx+0x866a]
   140014576:	mov    eax,esi
   140014578:	inc    esi
   14001457a:	sub    cl,0x3
   14001457d:	mov    BYTE PTR [rsp+rax*1+0x30],0x10
   140014582:	mov    BYTE PTR [rsp+rsi*1+0x30],cl
   140014586:	inc    esi
   140014588:	mov    ecx,r13d
   14001458b:	movzx  eax,r8b
   14001458f:	inc    WORD PTR [rbx+rax*2+0x864a]
   140014597:	mov    eax,esi
   140014599:	mov    BYTE PTR [rsp+rax*1+0x30],r8b
   14001459e:	jmp    0x1400145bf
   1400145a0:	inc    ecx
   1400145a2:	cmp    ecx,0x6
   1400145a5:	jne    0x1400145c1
   1400145a7:	inc    WORD PTR [rbx+0x866a]
   1400145ae:	mov    eax,esi
   1400145b0:	inc    esi
   1400145b2:	mov    BYTE PTR [rsp+rax*1+0x30],0x10
   1400145b7:	mov    BYTE PTR [rsp+rsi*1+0x30],0x3
   1400145bc:	mov    ecx,r13d
   1400145bf:	inc    esi
   1400145c1:	inc    r9
   1400145c4:	movzx  r14d,r8b
   1400145c8:	dec    r10
   1400145cb:	jne    0x140014470
   1400145d1:	test   ecx,ecx
   1400145d3:	je     0x140014618
   1400145d5:	cmp    ecx,0x3
   1400145d8:	jae    0x1400145ff
   1400145da:	movzx  eax,r8b
   1400145de:	add    WORD PTR [rbx+rax*2+0x864a],cx
   1400145e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400145f0:	mov    eax,esi
   1400145f2:	inc    esi
   1400145f4:	mov    BYTE PTR [rsp+rax*1+0x30],r8b
   1400145f9:	dec    ecx
   1400145fb:	jne    0x1400145f0
   1400145fd:	jmp    0x14001466e
   1400145ff:	inc    WORD PTR [rbx+0x866a]
   140014606:	mov    eax,esi
   140014608:	inc    esi
   14001460a:	sub    cl,0x3
   14001460d:	mov    BYTE PTR [rsp+rax*1+0x30],0x10
   140014612:	mov    BYTE PTR [rsp+rsi*1+0x30],cl
   140014616:	jmp    0x14001466c
   140014618:	test   edx,edx
   14001461a:	je     0x14001466e
   14001461c:	cmp    edx,0x3
   14001461f:	jae    0x14001463f
   140014621:	add    WORD PTR [rbx+0x864a],dx
   140014628:	nop    DWORD PTR [rax+rax*1+0x0]
   140014630:	mov    eax,esi
   140014632:	inc    esi
   140014634:	mov    BYTE PTR [rsp+rax*1+0x30],r13b
   140014639:	dec    edx
   14001463b:	jne    0x140014630
   14001463d:	jmp    0x14001466e
   14001463f:	mov    eax,esi
   140014641:	inc    esi
   140014643:	cmp    edx,0xa
   140014646:	ja     0x140014659
   140014648:	inc    WORD PTR [rbx+0x866c]
   14001464f:	mov    BYTE PTR [rsp+rax*1+0x30],0x11
   140014654:	sub    dl,0x3
   140014657:	jmp    0x140014668
   140014659:	inc    WORD PTR [rbx+0x866e]
   140014660:	mov    BYTE PTR [rsp+rax*1+0x30],0x12
   140014665:	sub    dl,0xb
   140014668:	mov    BYTE PTR [rsp+rsi*1+0x30],dl
   14001466c:	inc    esi
   14001466e:	mov    edi,0x2
   140014673:	mov    rcx,rbx
   140014676:	mov    DWORD PTR [rsp+0x20],r13d
   14001467b:	lea    r9d,[rdi+0x5]
   14001467f:	lea    r8d,[rdi+0x11]
   140014683:	mov    edx,edi
   140014685:	call   0x140013d30
   14001468a:	mov    ecx,DWORD PTR [rbx+0x5c]
   14001468d:	lea    eax,[rcx+0x2]
   140014690:	shl    edi,cl
   140014692:	or     DWORD PTR [rbx+0x60],edi
   140014695:	mov    DWORD PTR [rbx+0x5c],eax
   140014698:	cmp    eax,0x8
   14001469b:	jb     0x1400146c2
   14001469d:	nop    DWORD PTR [rax]
   1400146a0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400146a4:	cmp    rcx,QWORD PTR [rbx+0x48]
   1400146a8:	jae    0x1400146b4
   1400146aa:	movzx  eax,BYTE PTR [rbx+0x60]
   1400146ae:	mov    BYTE PTR [rcx],al
   1400146b0:	inc    QWORD PTR [rbx+0x40]
   1400146b4:	shr    DWORD PTR [rbx+0x60],0x8
   1400146b8:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   1400146bc:	cmp    DWORD PTR [rbx+0x5c],0x8
   1400146c0:	jae    0x1400146a0
   1400146c2:	lea    edi,[r12-0x101]
   1400146ca:	cmp    edi,0x1f
   1400146cd:	jbe    0x1400146e9
   1400146cf:	lea    rdx,[rip+0x720a]        # 0x14001b8e0
   1400146d6:	lea    rcx,[rip+0x727b]        # 0x14001b958
   1400146dd:	mov    r8d,0x7c0
   1400146e3:	call   QWORD PTR [rip+0x4b2f]        # 0x140019218
   1400146e9:	mov    ecx,DWORD PTR [rbx+0x5c]
   1400146ec:	shl    edi,cl
   1400146ee:	or     DWORD PTR [rbx+0x60],edi
   1400146f1:	lea    eax,[rcx+0x5]
   1400146f4:	mov    DWORD PTR [rbx+0x5c],eax
   1400146f7:	cmp    eax,0x8
   1400146fa:	jb     0x140014722
   1400146fc:	nop    DWORD PTR [rax+0x0]
   140014700:	mov    rcx,QWORD PTR [rbx+0x40]
   140014704:	cmp    rcx,QWORD PTR [rbx+0x48]
   140014708:	jae    0x140014714
   14001470a:	movzx  eax,BYTE PTR [rbx+0x60]
   14001470e:	mov    BYTE PTR [rcx],al
   140014710:	inc    QWORD PTR [rbx+0x40]
   140014714:	shr    DWORD PTR [rbx+0x60],0x8
   140014718:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001471c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140014720:	jae    0x140014700
   140014722:	lea    edi,[r15-0x1]
   140014726:	cmp    edi,0x1f
   140014729:	jbe    0x140014745
   14001472b:	lea    rdx,[rip+0x71ae]        # 0x14001b8e0
   140014732:	lea    rcx,[rip+0x721f]        # 0x14001b958
   140014739:	mov    r8d,0x7c1
   14001473f:	call   QWORD PTR [rip+0x4ad3]        # 0x140019218
   140014745:	mov    ecx,DWORD PTR [rbx+0x5c]
   140014748:	shl    edi,cl
   14001474a:	or     DWORD PTR [rbx+0x60],edi
   14001474d:	lea    eax,[rcx+0x5]
   140014750:	mov    DWORD PTR [rbx+0x5c],eax
   140014753:	cmp    eax,0x8
   140014756:	jb     0x140014782
   140014758:	nop    DWORD PTR [rax+rax*1+0x0]
   140014760:	mov    rcx,QWORD PTR [rbx+0x40]
   140014764:	cmp    rcx,QWORD PTR [rbx+0x48]
   140014768:	jae    0x140014774
   14001476a:	movzx  eax,BYTE PTR [rbx+0x60]
   14001476e:	mov    BYTE PTR [rcx],al
   140014770:	inc    QWORD PTR [rbx+0x40]
   140014774:	shr    DWORD PTR [rbx+0x60],0x8
   140014778:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001477c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140014780:	jae    0x140014760
   140014782:	mov    edx,0x12
   140014787:	lea    r14,[rip+0xc892]        # 0x140021020
   14001478e:	mov    ecx,edx
   140014790:	movzx  eax,BYTE PTR [rcx+r14*1]
   140014795:	cmp    BYTE PTR [rax+rbx*1+0x918a],r13b
   14001479d:	jne    0x1400147a6
   14001479f:	dec    edx
   1400147a1:	dec    rcx
   1400147a4:	jns    0x140014790
   1400147a6:	lea    edi,[rdx+0x1]
   1400147a9:	mov    eax,0x4
   1400147ae:	cmp    edi,eax
   1400147b0:	cmovl  edi,eax
   1400147b3:	lea    r15d,[rdi-0x4]
   1400147b7:	cmp    r15d,0xf
   1400147bb:	jbe    0x1400147d7
   1400147bd:	lea    rdx,[rip+0x711c]        # 0x14001b8e0
   1400147c4:	lea    rcx,[rip+0x718d]        # 0x14001b958
   1400147cb:	mov    r8d,0x7c4
   1400147d1:	call   QWORD PTR [rip+0x4a41]        # 0x140019218
   1400147d7:	mov    ecx,DWORD PTR [rbx+0x5c]
   1400147da:	shl    r15d,cl
   1400147dd:	or     DWORD PTR [rbx+0x60],r15d
   1400147e1:	lea    eax,[rcx+0x4]
   1400147e4:	mov    DWORD PTR [rbx+0x5c],eax
   1400147e7:	cmp    eax,0x8
   1400147ea:	jb     0x140014812
   1400147ec:	nop    DWORD PTR [rax+0x0]
   1400147f0:	mov    rcx,QWORD PTR [rbx+0x40]
   1400147f4:	cmp    rcx,QWORD PTR [rbx+0x48]
   1400147f8:	jae    0x140014804
   1400147fa:	movzx  eax,BYTE PTR [rbx+0x60]
   1400147fe:	mov    BYTE PTR [rcx],al
   140014800:	inc    QWORD PTR [rbx+0x40]
   140014804:	shr    DWORD PTR [rbx+0x60],0x8
   140014808:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001480c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140014810:	jae    0x1400147f0
   140014812:	test   edi,edi
   140014814:	jle    0x14001488a
   140014816:	mov    r15d,edi
   140014819:	nop    DWORD PTR [rax+0x0]
   140014820:	movzx  eax,BYTE PTR [r14]
   140014824:	movzx  edi,BYTE PTR [rax+rbx*1+0x918a]
   14001482c:	cmp    edi,0x7
   14001482f:	jbe    0x14001484b
   140014831:	lea    rdx,[rip+0x70a8]        # 0x14001b8e0
   140014838:	lea    rcx,[rip+0x7119]        # 0x14001b958
   14001483f:	mov    r8d,0x7c5
   140014845:	call   QWORD PTR [rip+0x49cd]        # 0x140019218
   14001484b:	mov    ecx,DWORD PTR [rbx+0x5c]
   14001484e:	shl    edi,cl
   140014850:	or     DWORD PTR [rbx+0x60],edi
   140014853:	lea    eax,[rcx+0x3]
   140014856:	mov    DWORD PTR [rbx+0x5c],eax
   140014859:	cmp    eax,0x8
   14001485c:	jb     0x140014882
   14001485e:	xchg   ax,ax
   140014860:	mov    rcx,QWORD PTR [rbx+0x40]
   140014864:	cmp    rcx,QWORD PTR [rbx+0x48]
   140014868:	jae    0x140014874
   14001486a:	movzx  eax,BYTE PTR [rbx+0x60]
   14001486e:	mov    BYTE PTR [rcx],al
   140014870:	inc    QWORD PTR [rbx+0x40]
   140014874:	shr    DWORD PTR [rbx+0x60],0x8
   140014878:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001487c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140014880:	jae    0x140014860
   140014882:	inc    r14
   140014885:	dec    r15
   140014888:	jne    0x140014820
   14001488a:	test   esi,esi
   14001488c:	je     0x1400149c0
   140014892:	lea    r12,[rip+0x7033]        # 0x14001b8cc
   140014899:	nop    DWORD PTR [rax+0x0]
   1400148a0:	movzx  r15d,BYTE PTR [rsp+r13*1+0x30]
   1400148a6:	inc    r13d
   1400148a9:	cmp    r15d,0x13
   1400148ad:	jb     0x1400148c9
   1400148af:	lea    rdx,[rip+0x702a]        # 0x14001b8e0
   1400148b6:	lea    rcx,[rip+0x70d3]        # 0x14001b990
   1400148bd:	mov    r8d,0x7c9
   1400148c3:	call   QWORD PTR [rip+0x494f]        # 0x140019218
   1400148c9:	movzx  r14d,BYTE PTR [r15+rbx*1+0x918a]
   1400148d2:	movzx  edi,WORD PTR [rbx+r15*2+0x8d0a]
   1400148db:	mov    edx,0x1
   1400148e0:	mov    ecx,r14d
   1400148e3:	mov    eax,edx
   1400148e5:	shl    eax,cl
   1400148e7:	dec    eax
   1400148e9:	cmp    edi,eax
   1400148eb:	jbe    0x14001490c
   1400148ed:	lea    rdx,[rip+0x6fec]        # 0x14001b8e0
   1400148f4:	lea    rcx,[rip+0x705d]        # 0x14001b958
   1400148fb:	mov    r8d,0x7ca
   140014901:	call   QWORD PTR [rip+0x4911]        # 0x140019218
   140014907:	mov    edx,0x1
   14001490c:	mov    ecx,DWORD PTR [rbx+0x5c]
   14001490f:	shl    edi,cl
   140014911:	or     DWORD PTR [rbx+0x60],edi
   140014914:	lea    eax,[rcx+r14*1]
   140014918:	mov    DWORD PTR [rbx+0x5c],eax
   14001491b:	cmp    eax,0x8
   14001491e:	jb     0x140014942
   140014920:	mov    rcx,QWORD PTR [rbx+0x40]
   140014924:	cmp    rcx,QWORD PTR [rbx+0x48]
   140014928:	jae    0x140014934
   14001492a:	movzx  eax,BYTE PTR [rbx+0x60]
   14001492e:	mov    BYTE PTR [rcx],al
   140014930:	inc    QWORD PTR [rbx+0x40]
   140014934:	shr    DWORD PTR [rbx+0x60],0x8
   140014938:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   14001493c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140014940:	jae    0x140014920
   140014942:	cmp    r15d,0x10
   140014946:	jb     0x1400149b7
   140014948:	movzx  edi,BYTE PTR [rsp+r13*1+0x30]
   14001494e:	lea    eax,[r15-0x10]
   140014952:	inc    r13d
   140014955:	movsx  r14d,BYTE PTR [rax+r12*1]
   14001495a:	mov    eax,edx
   14001495c:	mov    ecx,r14d
   14001495f:	shl    eax,cl
   140014961:	dec    eax
   140014963:	cmp    edi,eax
   140014965:	jbe    0x140014981
   140014967:	lea    rdx,[rip+0x6f72]        # 0x14001b8e0
   14001496e:	lea    rcx,[rip+0x6fe3]        # 0x14001b958
   140014975:	mov    r8d,0x7cb
   14001497b:	call   QWORD PTR [rip+0x4897]        # 0x140019218
   140014981:	mov    ecx,DWORD PTR [rbx+0x5c]
   140014984:	shl    edi,cl
   140014986:	or     DWORD PTR [rbx+0x60],edi
   140014989:	lea    eax,[rcx+r14*1]
   14001498d:	mov    DWORD PTR [rbx+0x5c],eax
   140014990:	cmp    eax,0x8
   140014993:	jb     0x1400149b7
   140014995:	mov    rcx,QWORD PTR [rbx+0x40]
   140014999:	cmp    rcx,QWORD PTR [rbx+0x48]
   14001499d:	jae    0x1400149a9
   14001499f:	movzx  eax,BYTE PTR [rbx+0x60]
   1400149a3:	mov    BYTE PTR [rcx],al
   1400149a5:	inc    QWORD PTR [rbx+0x40]
   1400149a9:	shr    DWORD PTR [rbx+0x60],0x8
   1400149ad:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   1400149b1:	cmp    DWORD PTR [rbx+0x5c],0x8
   1400149b5:	jae    0x140014995
   1400149b7:	cmp    r13d,esi
   1400149ba:	jb     0x1400148a0
   1400149c0:	lea    r11,[rsp+0x2b0]
   1400149c8:	mov    rbx,QWORD PTR [r11+0x30]
   1400149cc:	mov    rsi,QWORD PTR [r11+0x38]
   1400149d0:	mov    rdi,QWORD PTR [r11+0x40]
   1400149d4:	mov    rsp,r11
   1400149d7:	pop    r15
   1400149d9:	pop    r14
   1400149db:	pop    r13
   1400149dd:	pop    r12
   1400149df:	pop    rbp
   1400149e0:	ret    
   1400149e1:	int3   
   1400149e2:	int3   
   1400149e3:	int3   
   1400149e4:	int3   
   1400149e5:	int3   
   1400149e6:	int3   
   1400149e7:	int3   
   1400149e8:	int3   
   1400149e9:	int3   
   1400149ea:	int3   
   1400149eb:	int3   
   1400149ec:	int3   
   1400149ed:	int3   
   1400149ee:	int3   
   1400149ef:	int3   
   1400149f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400149f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400149fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400149ff:	mov    QWORD PTR [rsp+0x20],rdi
   140014a04:	push   r14
   140014a06:	sub    rsp,0x140
   140014a0d:	lea    rsi,[rcx+0x8f4a]
   140014a14:	mov    rbx,rcx
   140014a17:	movabs r8,0x808080808080808
   140014a21:	mov    rax,rsi
   140014a24:	mov    ecx,0x2
   140014a29:	nop    DWORD PTR [rax+0x0]
   140014a30:	mov    QWORD PTR [rax],r8
   140014a33:	mov    QWORD PTR [rax+0x8],r8
   140014a37:	mov    QWORD PTR [rax+0x10],r8
   140014a3b:	lea    rax,[rax+0x40]
   140014a3f:	mov    QWORD PTR [rax-0x28],r8
   140014a43:	mov    QWORD PTR [rax-0x20],r8
   140014a47:	mov    QWORD PTR [rax-0x18],r8
   140014a4b:	mov    QWORD PTR [rax-0x10],r8
   140014a4f:	mov    QWORD PTR [rax-0x8],r8
   140014a53:	dec    rcx
   140014a56:	jne    0x140014a30
   140014a58:	mov    QWORD PTR [rax],r8
   140014a5b:	mov    QWORD PTR [rax+0x8],r8
   140014a5f:	lea    r14,[rbx+0x906a]
   140014a66:	mov    eax,0x9
   140014a6b:	lea    rdi,[rsi+0x90]
   140014a72:	mov    ecx,0x70
   140014a77:	rep stos BYTE PTR es:[rdi],al
   140014a79:	movabs rax,0x707070707070707
   140014a83:	lea    rcx,[rsp+0x20]
   140014a88:	mov    QWORD PTR [rsi+0x100],rax
   140014a8f:	mov    QWORD PTR [rsi+0x108],rax
   140014a96:	mov    QWORD PTR [rsi+0x110],rax
   140014a9d:	mov    QWORD PTR [rsi+0x118],r8
   140014aa4:	movabs rax,0x505050505050505
   140014aae:	xor    edx,edx
   140014ab0:	mov    QWORD PTR [r14],rax
   140014ab3:	mov    QWORD PTR [r14+0x8],rax
   140014ab7:	mov    QWORD PTR [r14+0x10],rax
   140014abb:	mov    r8d,0x84
   140014ac1:	mov    QWORD PTR [r14+0x18],rax
   140014ac5:	call   0x14001734c
   140014aca:	mov    r11d,0x120
   140014ad0:	mov    rcx,rsi
   140014ad3:	mov    edx,r11d
   140014ad6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140014ae0:	movzx  eax,BYTE PTR [rcx]
   140014ae3:	lea    rcx,[rcx+0x1]
   140014ae7:	inc    DWORD PTR [rsp+rax*4+0x20]
   140014aeb:	dec    rdx
   140014aee:	jne    0x140014ae0
   140014af0:	mov    ebp,0xe
   140014af5:	mov    DWORD PTR [rsp+0xb4],edx
   140014afc:	xor    ecx,ecx
   140014afe:	mov    edi,ebp
   140014b00:	add    ecx,DWORD PTR [rsp+rdx*1+0x24]
   140014b04:	lea    rdx,[rdx+0x4]
   140014b08:	add    ecx,ecx
   140014b0a:	mov    DWORD PTR [rsp+rdx*1+0xb4],ecx
   140014b11:	dec    rdi
   140014b14:	jne    0x140014b00
   140014b16:	lea    r10,[rbx+0x888a]
   140014b1d:	nop    DWORD PTR [rax]
   140014b20:	movzx  edi,BYTE PTR [rsi]
   140014b23:	xor    edx,edx
   140014b25:	test   edi,edi
   140014b27:	je     0x140014b5b
   140014b29:	lea    rcx,[rsp+0xb0]
   140014b31:	mov    r9d,DWORD PTR [rcx+rdi*4]
   140014b35:	lea    rcx,[rcx+rdi*4]
   140014b39:	lea    eax,[r9+0x1]
   140014b3d:	mov    DWORD PTR [rcx],eax
   140014b3f:	jle    0x140014b57
   140014b41:	mov    ecx,r9d
   140014b44:	lea    eax,[rdx+rdx*1]
   140014b47:	dec    edi
   140014b49:	and    ecx,0x1
   140014b4c:	shr    r9d,1
   140014b4f:	mov    edx,ecx
   140014b51:	or     edx,eax
   140014b53:	test   edi,edi
   140014b55:	jg     0x140014b41
   140014b57:	mov    WORD PTR [r10],dx
   140014b5b:	add    r10,0x2
   140014b5f:	inc    rsi
   140014b62:	dec    r11
   140014b65:	jne    0x140014b20
   140014b67:	lea    rcx,[rsp+0x20]
   140014b6c:	xor    edx,edx
   140014b6e:	mov    r8d,0x84
   140014b74:	call   0x14001734c
   140014b79:	mov    r10d,0x20
   140014b7f:	mov    rcx,r14
   140014b82:	mov    edx,r10d
   140014b85:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140014b90:	movzx  eax,BYTE PTR [rcx]
   140014b93:	lea    rcx,[rcx+0x1]
   140014b97:	inc    DWORD PTR [rsp+rax*4+0x20]
   140014b9b:	dec    rdx
   140014b9e:	jne    0x140014b90
   140014ba0:	mov    DWORD PTR [rsp+0xb4],edx
   140014ba7:	xor    ecx,ecx
   140014ba9:	nop    DWORD PTR [rax+0x0]
   140014bb0:	add    ecx,DWORD PTR [rsp+rdx*1+0x24]
   140014bb4:	lea    rdx,[rdx+0x4]
   140014bb8:	add    ecx,ecx
   140014bba:	mov    DWORD PTR [rsp+rdx*1+0xb4],ecx
   140014bc1:	dec    rbp
   140014bc4:	jne    0x140014bb0
   140014bc6:	lea    r9,[rbx+0x8aca]
   140014bcd:	nop    DWORD PTR [rax]
   140014bd0:	movzx  edi,BYTE PTR [r14]
   140014bd4:	xor    eax,eax
   140014bd6:	test   edi,edi
   140014bd8:	je     0x140014c0c
   140014bda:	lea    rdx,[rsp+0xb0]
   140014be2:	mov    r8d,DWORD PTR [rdx+rdi*4]
   140014be6:	lea    rdx,[rdx+rdi*4]
   140014bea:	lea    ecx,[r8+0x1]
   140014bee:	mov    DWORD PTR [rdx],ecx
   140014bf0:	jle    0x140014c08
   140014bf2:	mov    edx,r8d
   140014bf5:	lea    ecx,[rax+rax*1]
   140014bf8:	dec    edi
   140014bfa:	and    edx,0x1
   140014bfd:	shr    r8d,1
   140014c00:	mov    eax,edx
   140014c02:	or     eax,ecx
   140014c04:	test   edi,edi
   140014c06:	jg     0x140014bf2
   140014c08:	mov    WORD PTR [r9],ax
   140014c0c:	add    r9,0x2
   140014c10:	inc    r14
   140014c13:	dec    r10
   140014c16:	jne    0x140014bd0
   140014c18:	mov    ecx,DWORD PTR [rbx+0x5c]
   140014c1b:	mov    eax,0x1
   140014c20:	shl    eax,cl
   140014c22:	or     DWORD PTR [rbx+0x60],eax
   140014c25:	lea    eax,[rcx+0x2]
   140014c28:	mov    DWORD PTR [rbx+0x5c],eax
   140014c2b:	cmp    eax,0x8
   140014c2e:	jb     0x140014c52
   140014c30:	mov    rcx,QWORD PTR [rbx+0x40]
   140014c34:	cmp    rcx,QWORD PTR [rbx+0x48]
   140014c38:	jae    0x140014c44
   140014c3a:	movzx  eax,BYTE PTR [rbx+0x60]
   140014c3e:	mov    BYTE PTR [rcx],al
   140014c40:	inc    QWORD PTR [rbx+0x40]
   140014c44:	shr    DWORD PTR [rbx+0x60],0x8
   140014c48:	add    DWORD PTR [rbx+0x5c],0xfffffff8
   140014c4c:	cmp    DWORD PTR [rbx+0x5c],0x8
   140014c50:	jae    0x140014c30
   140014c52:	lea    r11,[rsp+0x140]
   140014c5a:	mov    rbx,QWORD PTR [r11+0x10]
   140014c5e:	mov    rbp,QWORD PTR [r11+0x18]
   140014c62:	mov    rsi,QWORD PTR [r11+0x20]
   140014c66:	mov    rdi,QWORD PTR [r11+0x28]
   140014c6a:	mov    rsp,r11
   140014c6d:	pop    r14
   140014c6f:	ret    
   140014c70:	sub    rsp,0x48
   140014c74:	mov    rax,QWORD PTR [rsp+0x70]
   140014c79:	mov    DWORD PTR [rsp+0x30],0x0
   140014c81:	mov    DWORD PTR [rsp+0x28],0x6
   140014c89:	mov    QWORD PTR [rsp+0x20],rax
   140014c8e:	call   0x140014ca0
   140014c93:	add    rsp,0x48
   140014c97:	ret    
   140014c98:	int3   
   140014c99:	int3   
   140014c9a:	int3   
   140014c9b:	int3   
   140014c9c:	int3   
   140014c9d:	int3   
   140014c9e:	int3   
   140014c9f:	int3   
   140014ca0:	mov    DWORD PTR [rsp+0x20],r9d
   140014ca5:	mov    DWORD PTR [rsp+0x18],r8d
   140014caa:	mov    DWORD PTR [rsp+0x10],edx
   140014cae:	mov    QWORD PTR [rsp+0x8],rcx
   140014cb3:	push   rbp
   140014cb4:	push   rbx
   140014cb5:	push   rsi
   140014cb6:	push   rdi
   140014cb7:	push   r12
   140014cb9:	push   r13
   140014cbb:	push   r15
   140014cbd:	lea    rbp,[rsp-0xf]
   140014cc2:	sub    rsp,0x90
   140014cc9:	mov    ecx,0x4df78
   140014cce:	mov    esi,r9d
   140014cd1:	mov    r12d,r8d
   140014cd4:	mov    r13d,edx
   140014cd7:	call   QWORD PTR [rip+0x461b]        # 0x1400192f8
   140014cdd:	xor    r15d,r15d
   140014ce0:	mov    rdi,rax
   140014ce3:	mov    rax,QWORD PTR [rbp+0x6f]
   140014ce7:	imul   r13d,esi
   140014ceb:	mov    QWORD PTR [rax],r15
   140014cee:	test   rdi,rdi
   140014cf1:	je     0x140014d46
   140014cf3:	xor    esi,esi
   140014cf5:	mov    ecx,0x40
   140014cfa:	lea    eax,[r13+0x1]
   140014cfe:	mov    QWORD PTR [rbp-0x49],rsi
   140014d02:	mov    QWORD PTR [rbp-0x39],rsi
   140014d06:	mov    QWORD PTR [rbp-0x51],rsi
   140014d0a:	imul   eax,r12d
   140014d0e:	cmp    eax,ecx
   140014d10:	mov    QWORD PTR [rbp-0x41],rsi
   140014d14:	mov    DWORD PTR [rbp-0x39],0x1
   140014d1b:	cmovl  eax,ecx
   140014d1e:	add    eax,0x39
   140014d21:	movsxd rbx,eax
   140014d24:	mov    rcx,rbx
   140014d27:	mov    QWORD PTR [rbp-0x49],rbx
   140014d2b:	call   QWORD PTR [rip+0x45c7]        # 0x1400192f8
   140014d31:	mov    rcx,rax
   140014d34:	mov    QWORD PTR [rbp-0x41],rax
   140014d38:	test   rax,rax
   140014d3b:	jne    0x140014d4d
   140014d3d:	mov    rcx,rdi
   140014d40:	call   QWORD PTR [rip+0x45aa]        # 0x1400192f0
   140014d46:	xor    eax,eax
   140014d48:	jmp    0x140015413
   140014d4d:	mov    QWORD PTR [rsp+0x88],r14
   140014d55:	mov    DWORD PTR [rbp-0x61],0x29
   140014d5c:	mov    edx,0x80
   140014d61:	lea    r14,[rsi+0x1]
   140014d65:	cmp    r14,rbx
   140014d68:	jbe    0x140014da0
   140014d6a:	cmp    DWORD PTR [rbp-0x39],r15d
   140014d6e:	je     0x140014db6
   140014d70:	lea    rax,[rbx+rbx*1]
   140014d74:	cmp    rax,rdx
   140014d77:	mov    rbx,rax
   140014d7a:	cmovb  rbx,rdx
   140014d7e:	cmp    r14,rbx
   140014d81:	ja     0x140014d70
   140014d83:	mov    rdx,rbx
   140014d86:	call   QWORD PTR [rip+0x4574]        # 0x140019300
   140014d8c:	mov    rsi,QWORD PTR [rbp-0x51]
   140014d90:	mov    rcx,rax
   140014d93:	test   rax,rax
   140014d96:	je     0x140014dae
   140014d98:	mov    QWORD PTR [rbp-0x41],rax
   140014d9c:	mov    QWORD PTR [rbp-0x49],rbx
   140014da0:	movzx  eax,BYTE PTR [rbp-0x61]
   140014da4:	mov    BYTE PTR [rsi+rcx*1],al
   140014da7:	mov    rsi,r14
   140014daa:	mov    QWORD PTR [rbp-0x51],r14
   140014dae:	mov    rbx,QWORD PTR [rbp-0x49]
   140014db2:	mov    rcx,QWORD PTR [rbp-0x41]
   140014db6:	dec    DWORD PTR [rbp-0x61]
   140014db9:	mov    edx,0x80
   140014dbe:	jne    0x140014d61
   140014dc0:	mov    eax,DWORD PTR [rbp+0x77]
   140014dc3:	mov    ecx,0xa
   140014dc8:	lea    r8,[rbp-0x51]
   140014dcc:	cmp    eax,ecx
   140014dce:	lea    rdx,[rip+0xfffffffffffff20b]        # 0x140013fe0
   140014dd5:	cmova  eax,ecx
   140014dd8:	lea    rcx,[rip+0xfffffffffffeb221]        # 0x140000000
   140014ddf:	mov    r9d,DWORD PTR [rcx+rax*4+0x1af68]
   140014de7:	mov    rcx,rdi
   140014dea:	bts    r9d,0xc
   140014def:	call   0x140013bd0
   140014df4:	mov    esi,r15d
   140014df7:	test   r12d,r12d
   140014dfa:	jle    0x14001504f
   140014e00:	mov    r14d,DWORD PTR [rbp+0x5f]
   140014e04:	movsxd r12,r13d
   140014e07:	dec    r14d
   140014e0a:	nop    WORD PTR [rax+rax*1+0x0]
   140014e10:	mov    eax,0x1
   140014e15:	mov    QWORD PTR [rbp-0x59],rax
   140014e19:	cmp    QWORD PTR [rdi],r15
   140014e1c:	jne    0x140014e3c
   140014e1e:	lea    rdx,[rip+0x6abb]        # 0x14001b8e0
   140014e25:	lea    rcx,[rip+0x6f9c]        # 0x14001bdc8
   140014e2c:	mov    r8d,0xa87
   140014e32:	call   QWORD PTR [rip+0x43e0]        # 0x140019218
   140014e38:	mov    rax,QWORD PTR [rbp-0x59]
   140014e3c:	lea    rcx,[rbp-0x61]
   140014e40:	mov    QWORD PTR [rdi+0x90],r15
   140014e47:	mov    QWORD PTR [rdi+0xa0],r15
   140014e4e:	mov    QWORD PTR [rdi+0x88],rcx
   140014e55:	lea    rcx,[rbp-0x59]
   140014e59:	mov    QWORD PTR [rdi+0xb8],rax
   140014e60:	mov    QWORD PTR [rdi+0x98],rcx
   140014e67:	lea    rcx,[rbp-0x61]
   140014e6b:	mov    QWORD PTR [rdi+0xc0],r15
   140014e72:	mov    DWORD PTR [rdi+0xa8],r15d
   140014e79:	mov    QWORD PTR [rdi+0xb0],rcx
   140014e80:	cmp    QWORD PTR [rdi],r15
   140014e83:	je     0x140014f10
   140014e89:	cmp    DWORD PTR [rdi+0x84],r15d
   140014e90:	jne    0x140014f10
   140014e92:	cmp    DWORD PTR [rdi+0x80],r15d
   140014e99:	jne    0x140014f10
   140014e9b:	cmp    DWORD PTR [rdi+0x74],r15d
   140014e9f:	jne    0x140014f00
   140014ea1:	cmp    DWORD PTR [rdi+0x78],r15d
   140014ea5:	jne    0x140014f00
   140014ea7:	mov    ecx,DWORD PTR [rdi+0x10]
   140014eaa:	mov    eax,ecx
   140014eac:	and    eax,0xfff
   140014eb1:	cmp    eax,0x1
   140014eb4:	jne    0x140014ece
   140014eb6:	bt     ecx,0xe
   140014eba:	jae    0x140014ece
   140014ebc:	test   ecx,0xb0000
   140014ec2:	jne    0x140014ece
   140014ec4:	mov    rcx,rdi
   140014ec7:	call   0x140011960
   140014ecc:	jmp    0x140014ed6
   140014ece:	mov    rcx,rdi
   140014ed1:	call   0x1400125c0
   140014ed6:	test   eax,eax
   140014ed8:	je     0x140014f1a
   140014eda:	test   DWORD PTR [rdi+0x10],0x3000
   140014ee1:	je     0x140014f00
   140014ee3:	mov    r8,QWORD PTR [rdi+0xb0]
   140014eea:	mov    ecx,DWORD PTR [rdi+0x20]
   140014eed:	lea    rax,[rbp-0x61]
   140014ef1:	lea    rdx,[rbp-0x61]
   140014ef5:	sub    r8,rax
   140014ef8:	call   0x14000be60
   140014efd:	mov    DWORD PTR [rdi+0x20],eax
   140014f00:	mov    rcx,rdi
   140014f03:	call   0x1400139e0
   140014f08:	mov    DWORD PTR [rdi+0x84],eax
   140014f0e:	jmp    0x140014f1a
   140014f10:	mov    DWORD PTR [rdi+0x84],0xfffffffe
   140014f1a:	cmp    DWORD PTR [rbp+0x7f],r15d
   140014f1e:	mov    eax,esi
   140014f20:	mov    rcx,r12
   140014f23:	cmovne eax,r14d
   140014f27:	mov    QWORD PTR [rbp-0x59],rcx
   140014f2b:	imul   eax,r13d
   140014f2f:	movsxd rbx,eax
   140014f32:	add    rbx,QWORD PTR [rbp+0x4f]
   140014f36:	cmp    QWORD PTR [rdi],r15
   140014f39:	jne    0x140014f59
   140014f3b:	lea    rdx,[rip+0x699e]        # 0x14001b8e0
   140014f42:	lea    rcx,[rip+0x6e7f]        # 0x14001bdc8
   140014f49:	mov    r8d,0xa87
   140014f4f:	call   QWORD PTR [rip+0x42c3]        # 0x140019218
   140014f55:	mov    rcx,QWORD PTR [rbp-0x59]
   140014f59:	lea    rax,[rbp-0x59]
   140014f5d:	mov    QWORD PTR [rdi+0x88],rbx
   140014f64:	mov    QWORD PTR [rdi+0x90],r15
   140014f6b:	mov    QWORD PTR [rdi+0xa0],r15
   140014f72:	mov    QWORD PTR [rdi+0xb0],rbx
   140014f79:	mov    QWORD PTR [rdi+0xb8],rcx
   140014f80:	mov    QWORD PTR [rdi+0x98],rax
   140014f87:	mov    QWORD PTR [rdi+0xc0],r15
   140014f8e:	mov    DWORD PTR [rdi+0xa8],r15d
   140014f95:	cmp    QWORD PTR [rdi],r15
   140014f98:	je     0x140015033
   140014f9e:	cmp    DWORD PTR [rdi+0x84],r15d
   140014fa5:	jne    0x140015033
   140014fab:	cmp    DWORD PTR [rdi+0x80],r15d
   140014fb2:	jne    0x140015033
   140014fb4:	test   rcx,rcx
   140014fb7:	je     0x140014fbe
   140014fb9:	test   rbx,rbx
   140014fbc:	je     0x140015033
   140014fbe:	cmp    DWORD PTR [rdi+0x74],r15d
   140014fc2:	jne    0x140015023
   140014fc4:	cmp    DWORD PTR [rdi+0x78],r15d
   140014fc8:	jne    0x140015023
   140014fca:	mov    ecx,DWORD PTR [rdi+0x10]
   140014fcd:	mov    eax,ecx
   140014fcf:	and    eax,0xfff
   140014fd4:	cmp    eax,0x1
   140014fd7:	jne    0x140014ff1
   140014fd9:	bt     ecx,0xe
   140014fdd:	jae    0x140014ff1
   140014fdf:	test   ecx,0xb0000
   140014fe5:	jne    0x140014ff1
   140014fe7:	mov    rcx,rdi
   140014fea:	call   0x140011960
   140014fef:	jmp    0x140014ff9
   140014ff1:	mov    rcx,rdi
   140014ff4:	call   0x1400125c0
   140014ff9:	test   eax,eax
   140014ffb:	je     0x14001503d
   140014ffd:	test   DWORD PTR [rdi+0x10],0x3000
   140015004:	je     0x140015023
   140015006:	test   rbx,rbx
   140015009:	je     0x140015023
   14001500b:	mov    r8,QWORD PTR [rdi+0xb0]
   140015012:	mov    ecx,DWORD PTR [rdi+0x20]
   140015015:	mov    rdx,rbx
   140015018:	sub    r8,rbx
   14001501b:	call   0x14000be60
   140015020:	mov    DWORD PTR [rdi+0x20],eax
   140015023:	mov    rcx,rdi
   140015026:	call   0x1400139e0
   14001502b:	mov    DWORD PTR [rdi+0x84],eax
   140015031:	jmp    0x14001503d
   140015033:	mov    DWORD PTR [rdi+0x84],0xfffffffe
   14001503d:	inc    esi
   14001503f:	dec    r14d
   140015042:	cmp    esi,DWORD PTR [rbp+0x5f]
   140015045:	jl     0x140014e10
   14001504b:	mov    r12d,DWORD PTR [rbp+0x5f]
   14001504f:	mov    rax,r15
   140015052:	mov    QWORD PTR [rbp-0x59],rax
   140015056:	cmp    QWORD PTR [rdi],rax
   140015059:	jne    0x140015079
   14001505b:	lea    rdx,[rip+0x687e]        # 0x14001b8e0
   140015062:	lea    rcx,[rip+0x6d5f]        # 0x14001bdc8
   140015069:	mov    r8d,0xa87
   14001506f:	call   QWORD PTR [rip+0x41a3]        # 0x140019218
   140015075:	mov    rax,QWORD PTR [rbp-0x59]
   140015079:	lea    rcx,[rbp-0x59]
   14001507d:	mov    QWORD PTR [rdi+0x88],r15
   140015084:	mov    QWORD PTR [rdi+0x90],r15
   14001508b:	mov    QWORD PTR [rdi+0xa0],r15
   140015092:	mov    QWORD PTR [rdi+0xb0],r15
   140015099:	mov    QWORD PTR [rdi+0xb8],rax
   1400150a0:	mov    QWORD PTR [rdi+0x98],rcx
   1400150a7:	mov    QWORD PTR [rdi+0xc0],r15
   1400150ae:	mov    DWORD PTR [rdi+0xa8],0x4
   1400150b8:	cmp    QWORD PTR [rdi],r15
   1400150bb:	je     0x1400153ec
   1400150c1:	cmp    DWORD PTR [rdi+0x84],r15d
   1400150c8:	jne    0x1400153ec
   1400150ce:	test   rax,rax
   1400150d1:	jne    0x1400153ec
   1400150d7:	or     DWORD PTR [rdi+0x80],0x1
   1400150de:	cmp    DWORD PTR [rdi+0x74],r15d
   1400150e2:	jne    0x140015168
   1400150e8:	cmp    DWORD PTR [rdi+0x78],r15d
   1400150ec:	jne    0x140015168
   1400150ee:	mov    ecx,DWORD PTR [rdi+0x10]
   1400150f1:	mov    eax,ecx
   1400150f3:	and    eax,0xfff
   1400150f8:	cmp    eax,0x1
   1400150fb:	jne    0x14001511f
   1400150fd:	bt     ecx,0xe
   140015101:	jae    0x14001511f
   140015103:	test   ecx,0xb0000
   140015109:	jne    0x14001511f
   14001510b:	mov    rcx,rdi
   14001510e:	call   0x140011960
   140015113:	test   eax,eax
   140015115:	jne    0x140015133
   140015117:	mov    eax,DWORD PTR [rdi+0x84]
   14001511d:	jmp    0x140015176
   14001511f:	mov    rcx,rdi
   140015122:	call   0x1400125c0
   140015127:	test   eax,eax
   140015129:	jne    0x140015133
   14001512b:	mov    eax,DWORD PTR [rdi+0x84]
   140015131:	jmp    0x140015176
   140015133:	cmp    DWORD PTR [rdi+0x28],r15d
   140015137:	jne    0x140015168
   140015139:	cmp    QWORD PTR [rdi+0xb8],r15
   140015140:	jne    0x140015168
   140015142:	cmp    DWORD PTR [rdi+0x74],r15d
   140015146:	jne    0x140015168
   140015148:	mov    edx,0x4
   14001514d:	mov    rcx,rdi
   140015150:	call   0x1400132f0
   140015155:	test   eax,eax
   140015157:	jns    0x140015161
   140015159:	mov    eax,DWORD PTR [rdi+0x84]
   14001515f:	jmp    0x140015176
   140015161:	mov    DWORD PTR [rdi+0x78],0x1
   140015168:	mov    rcx,rdi
   14001516b:	call   0x1400139e0
   140015170:	mov    DWORD PTR [rdi+0x84],eax
   140015176:	cmp    eax,0x1
   140015179:	jne    0x1400153f6
   14001517f:	mov    edx,DWORD PTR [rbp+0x57]
   140015182:	mov    r13,QWORD PTR [rbp+0x6f]
   140015186:	mov    rcx,QWORD PTR [rbp-0x51]
   14001518a:	add    rcx,0xffffffffffffffd7
   14001518e:	mov    eax,edx
   140015190:	lea    r11,[rip+0xfffffffffffeae69]        # 0x140000000
   140015197:	sar    eax,0x8
   14001519a:	mov    QWORD PTR [r13+0x0],rcx
   14001519e:	mov    DWORD PTR [rbp-0x31],0x474e5089
   1400151a5:	mov    BYTE PTR [rbp-0x1f],al
   1400151a8:	mov    eax,r12d
   1400151ab:	mov    DWORD PTR [rbp-0x2d],0xa1a0a0d
   1400151b2:	sar    eax,0x8
   1400151b5:	mov    DWORD PTR [rbp-0x29],0xd000000
   1400151bc:	mov    DWORD PTR [rbp-0x25],0x52444849
   1400151c3:	mov    BYTE PTR [rbp-0x1b],al
   1400151c6:	movsxd rax,DWORD PTR [rbp+0x67]
   1400151ca:	mov    WORD PTR [rbp-0x21],r15w
   1400151cf:	movzx  eax,BYTE PTR [rax+r11*1+0x1af94]
   1400151d8:	mov    BYTE PTR [rbp-0x1e],dl
   1400151db:	mov    WORD PTR [rbp-0x1d],r15w
   1400151e0:	mov    BYTE PTR [rbp-0x18],al
   1400151e3:	mov    rax,rcx
   1400151e6:	mov    BYTE PTR [rbp-0x1a],r12b
   1400151ea:	shr    rax,0x18
   1400151ee:	mov    BYTE PTR [rbp-0x19],0x8
   1400151f2:	mov    DWORD PTR [rbp-0x17],r15d
   1400151f6:	mov    BYTE PTR [rbp-0x10],al
   1400151f9:	mov    rax,rcx
   1400151fc:	shr    rcx,0x8
   140015200:	shr    rax,0x10
   140015204:	or     esi,0xffffffff
   140015207:	mov    WORD PTR [rbp-0x13],r15w
   14001520c:	mov    BYTE PTR [rbp-0xf],al
   14001520f:	movzx  eax,BYTE PTR [r13+0x0]
   140015214:	mov    BYTE PTR [rbp-0x11],r15b
   140015218:	mov    BYTE PTR [rbp-0xe],cl
   14001521b:	mov    DWORD PTR [rbp-0xc],0x54414449
   140015222:	mov    r9d,0x11
   140015228:	mov    BYTE PTR [rbp-0xd],al
   14001522b:	lea    r10,[rbp-0x25]
   14001522f:	mov    r8d,esi
   140015232:	movzx  edx,BYTE PTR [r10]
   140015236:	mov    eax,r8d
   140015239:	shr    r8d,0x4
   14001523d:	xor    rax,rdx
   140015240:	shr    rdx,0x4
   140015244:	lea    r10,[r10+0x1]
   140015248:	and    eax,0xf
   14001524b:	mov    ecx,DWORD PTR [r11+rax*4+0x1aff0]
   140015253:	xor    ecx,r8d
   140015256:	mov    eax,ecx
   140015258:	shr    ecx,0x4
   14001525b:	and    eax,0xf
   14001525e:	xor    rax,rdx
   140015261:	mov    r8d,DWORD PTR [r11+rax*4+0x1aff0]
   140015269:	xor    r8d,ecx
   14001526c:	dec    r9
   14001526f:	jne    0x140015232
   140015271:	movups xmm0,XMMWORD PTR [rbp-0x31]
   140015275:	not    r8d
   140015278:	mov    eax,r8d
   14001527b:	shl    r8d,0x8
   14001527f:	shr    eax,0x18
   140015282:	mov    BYTE PTR [rbp-0x14],al
   140015285:	mov    eax,r8d
   140015288:	shl    r8d,0x8
   14001528c:	shr    eax,0x18
   14001528f:	mov    BYTE PTR [rbp-0x13],al
   140015292:	mov    eax,r8d
   140015295:	shr    r8d,0x10
   140015299:	shr    eax,0x18
   14001529c:	mov    BYTE PTR [rbp-0x11],r8b
   1400152a0:	mov    BYTE PTR [rbp-0x12],al
   1400152a3:	mov    rax,QWORD PTR [rbp-0x41]
   1400152a7:	movups xmm1,XMMWORD PTR [rbp-0x21]
   1400152ab:	movups XMMWORD PTR [rax],xmm0
   1400152ae:	movsd  xmm0,QWORD PTR [rbp-0x11]
   1400152b3:	movups XMMWORD PTR [rax+0x10],xmm1
   1400152b7:	movsd  QWORD PTR [rax+0x20],xmm0
   1400152bc:	mov    BYTE PTR [rax+0x28],0x54
   1400152c0:	mov    rcx,QWORD PTR [rbp-0x51]
   1400152c4:	mov    rbx,QWORD PTR [rbp-0x49]
   1400152c8:	lea    r14,[rcx+0x10]
   1400152cc:	cmp    r14,rbx
   1400152cf:	jbe    0x140015323
   1400152d1:	cmp    DWORD PTR [rbp-0x39],r15d
   1400152d5:	je     0x14001531a
   1400152d7:	mov    ecx,0x80
   1400152dc:	nop    DWORD PTR [rax+0x0]
   1400152e0:	lea    rax,[rbx+rbx*1]
   1400152e4:	cmp    rax,rcx
   1400152e7:	mov    rbx,rax
   1400152ea:	cmovb  rbx,rcx
   1400152ee:	cmp    r14,rbx
   1400152f1:	ja     0x1400152e0
   1400152f3:	mov    rcx,QWORD PTR [rbp-0x41]
   1400152f7:	mov    rdx,rbx
   1400152fa:	call   QWORD PTR [rip+0x4000]        # 0x140019300
   140015300:	test   rax,rax
   140015303:	je     0x14001531a
   140015305:	mov    rcx,QWORD PTR [rbp-0x51]
   140015309:	mov    QWORD PTR [rbp-0x41],rax
   14001530d:	mov    QWORD PTR [rbp-0x49],rbx
   140015311:	lea    r11,[rip+0xfffffffffffeace8]        # 0x140000000
   140015318:	jmp    0x140015327
   14001531a:	mov    QWORD PTR [r13+0x0],r15
   14001531e:	jmp    0x1400153f6
   140015323:	mov    rax,QWORD PTR [rbp-0x41]
   140015327:	movups xmm0,XMMWORD PTR [rip+0x6ac2]        # 0x14001bdf0
   14001532e:	movups XMMWORD PTR [rcx+rax*1],xmm0
   140015332:	mov    r10,QWORD PTR [rbp-0x41]
   140015336:	mov    r8,QWORD PTR [r13+0x0]
   14001533a:	mov    QWORD PTR [rbp-0x51],r14
   14001533e:	lea    r9,[r10+0x25]
   140015342:	add    r8,0x4
   140015346:	test   r9,r9
   140015349:	je     0x140015390
   14001534b:	test   r8,r8
   14001534e:	je     0x14001538b
   140015350:	movzx  edx,BYTE PTR [r9]
   140015354:	mov    eax,esi
   140015356:	shr    esi,0x4
   140015359:	xor    rax,rdx
   14001535c:	shr    rdx,0x4
   140015360:	lea    r9,[r9+0x1]
   140015364:	and    eax,0xf
   140015367:	mov    ecx,DWORD PTR [r11+rax*4+0x1aff0]
   14001536f:	xor    ecx,esi
   140015371:	mov    eax,ecx
   140015373:	shr    ecx,0x4
   140015376:	and    eax,0xf
   140015379:	xor    rax,rdx
   14001537c:	mov    esi,DWORD PTR [r11+rax*4+0x1aff0]
   140015384:	xor    esi,ecx
   140015386:	dec    r8
   140015389:	jne    0x140015350
   14001538b:	not    esi
   14001538d:	mov    r15d,esi
   140015390:	mov    eax,r15d
   140015393:	shl    r15d,0x8
   140015397:	shr    eax,0x18
   14001539a:	mov    edx,r15d
   14001539d:	shl    r15d,0x8
   1400153a1:	mov    BYTE PTR [r14+r10*1-0x10],al
   1400153a6:	mov    rcx,QWORD PTR [rbp-0x41]
   1400153aa:	mov    rax,QWORD PTR [rbp-0x51]
   1400153ae:	shr    edx,0x18
   1400153b1:	mov    BYTE PTR [rax+rcx*1-0xf],dl
   1400153b5:	mov    rcx,QWORD PTR [rbp-0x41]
   1400153b9:	mov    rax,QWORD PTR [rbp-0x51]
   1400153bd:	mov    edx,r15d
   1400153c0:	shr    r15d,0x10
   1400153c4:	shr    edx,0x18
   1400153c7:	mov    BYTE PTR [rax+rcx*1-0xe],dl
   1400153cb:	mov    rcx,QWORD PTR [rbp-0x41]
   1400153cf:	mov    rax,QWORD PTR [rbp-0x51]
   1400153d3:	mov    BYTE PTR [rax+rcx*1-0xd],r15b
   1400153d8:	add    QWORD PTR [r13+0x0],0x39
   1400153dd:	mov    rcx,rdi
   1400153e0:	call   QWORD PTR [rip+0x3f0a]        # 0x1400192f0
   1400153e6:	mov    rax,QWORD PTR [rbp-0x41]
   1400153ea:	jmp    0x14001540b
   1400153ec:	mov    DWORD PTR [rdi+0x84],0xfffffffe
   1400153f6:	mov    rcx,rdi
   1400153f9:	call   QWORD PTR [rip+0x3ef1]        # 0x1400192f0
   1400153ff:	mov    rcx,QWORD PTR [rbp-0x41]
   140015403:	call   QWORD PTR [rip+0x3ee7]        # 0x1400192f0
   140015409:	xor    eax,eax
   14001540b:	mov    r14,QWORD PTR [rsp+0x88]
   140015413:	add    rsp,0x90
   14001541a:	pop    r15
   14001541c:	pop    r13
   14001541e:	pop    r12
   140015420:	pop    rdi
   140015421:	pop    rsi
   140015422:	pop    rbx
   140015423:	pop    rbp
   140015424:	ret    
   140015425:	int3   
   140015426:	int3   
   140015427:	int3   
   140015428:	int3   
   140015429:	int3   
   14001542a:	int3   
   14001542b:	int3   
   14001542c:	int3   
   14001542d:	int3   
   14001542e:	int3   
   14001542f:	int3   
   140015430:	rex.W jmp QWORD PTR [rip+0x3ee1]        # 0x140019318
   140015437:	int3   
   140015438:	int3   
   140015439:	int3   
   14001543a:	int3   
   14001543b:	int3   
   14001543c:	int3   
   14001543d:	int3   
   14001543e:	int3   
   14001543f:	int3   
   140015440:	mov    QWORD PTR [rsp+0x20],r9
   140015445:	mov    QWORD PTR [rsp+0x18],r8
   14001544a:	mov    QWORD PTR [rsp+0x10],rdx
   14001544f:	push   rbx
   140015450:	push   rsi
   140015451:	push   rdi
   140015452:	push   r12
   140015454:	push   r13
   140015456:	push   r14
   140015458:	sub    rsp,0xe8
   14001545f:	mov    rbx,QWORD PTR [rsp+0x148]
   140015467:	mov    r14,QWORD PTR [r8]
   14001546a:	mov    r11,r9
   14001546d:	mov    rax,QWORD PTR [rbx]
   140015470:	add    r14,rdx
   140015473:	mov    r12,rcx
   140015476:	mov    rcx,QWORD PTR [rsp+0x140]
   14001547e:	mov    rsi,rdx
   140015481:	mov    edx,DWORD PTR [rsp+0x150]
   140015488:	lea    rdi,[rax+rcx*1]
   14001548c:	mov    r9d,edx
   14001548f:	mov    QWORD PTR [rsp+0x40],r14
   140015494:	mov    QWORD PTR [rsp+0x28],rdi
   140015499:	mov    r13,rcx
   14001549c:	and    r9d,0x4
   1400154a0:	je     0x1400154a8
   1400154a2:	or     rax,0xffffffffffffffff
   1400154a6:	jmp    0x1400154b1
   1400154a8:	sub    rax,r11
   1400154ab:	dec    rax
   1400154ae:	add    rax,rcx
   1400154b1:	lea    r10,[rax+0x1]
   1400154b5:	mov    QWORD PTR [rsp+0x38],rax
   1400154ba:	test   rax,r10
   1400154bd:	jne    0x140016b42
   1400154c3:	cmp    rcx,r11
   1400154c6:	jb     0x140016b42
   1400154cc:	mov    rax,QWORD PTR [r12+0x40]
   1400154d1:	mov    r8d,DWORD PTR [r12+0x20]
   1400154d6:	mov    r11d,DWORD PTR [r12+0x28]
   1400154db:	mov    ebx,DWORD PTR [r12+0x4]
   1400154e0:	mov    QWORD PTR [rsp+0x120],rbp
   1400154e8:	mov    rbp,QWORD PTR [r12+0x38]
   1400154ed:	mov    QWORD PTR [rsp+0x30],rax
   1400154f2:	mov    eax,DWORD PTR [r12]
   1400154f6:	mov    QWORD PTR [rsp+0xe0],r15
   1400154fe:	mov    r15d,DWORD PTR [r12+0x24]
   140015503:	mov    DWORD PTR [rsp+0x20],r8d
   140015508:	mov    DWORD PTR [rsp+0x24],r11d
   14001550d:	cmp    eax,0x35
   140015510:	ja     0x140016813
   140015516:	lea    rcx,[rip+0xfffffffffffeaae3]        # 0x140000000
   14001551d:	mov    ecx,DWORD PTR [rcx+rax*4+0x16b60]
   140015524:	lea    rax,[rip+0xfffffffffffeaad5]        # 0x140000000
   14001552b:	add    rcx,rax
   14001552e:	jmp    rcx
   140015530:	xor    r11d,r11d
   140015533:	xor    r15d,r15d
   140015536:	xor    ebx,ebx
   140015538:	xor    ebp,ebp
   14001553a:	mov    QWORD PTR [r12+0x8],0x0
   140015543:	mov    DWORD PTR [rsp+0x24],0x0
   14001554b:	mov    DWORD PTR [rsp+0x20],r11d
   140015550:	mov    DWORD PTR [r12+0x1c],0x1
   140015559:	mov    DWORD PTR [r12+0x10],0x1
   140015562:	test   dl,0x1
   140015565:	je     0x1400158b9
   14001556b:	mov    rcx,QWORD PTR [rsp+0x128]
   140015573:	cmp    rcx,r14
   140015576:	jae    0x14001558d
   140015578:	movzx  eax,BYTE PTR [rcx]
   14001557b:	lea    rsi,[rcx+0x1]
   14001557f:	mov    DWORD PTR [r12+0x8],eax
   140015584:	jmp    0x1400155ad
   140015586:	mov    r11d,DWORD PTR [rsp+0x20]
   14001558b:	jmp    0x14001556b
   14001558d:	test   dl,0x2
   140015590:	je     0x1400155a4
   140015592:	mov    r14d,0x1
   140015598:	mov    r10d,edx
   14001559b:	mov    DWORD PTR [r12],r14d
   14001559f:	jmp    0x140016824
   1400155a4:	mov    DWORD PTR [r12+0x8],0x0
   1400155ad:	cmp    rsi,r14
   1400155b0:	jae    0x1400155df
   1400155b2:	movzx  eax,BYTE PTR [rsi]
   1400155b5:	inc    rsi
   1400155b8:	mov    DWORD PTR [r12+0xc],eax
   1400155bd:	jmp    0x140015603
   1400155bf:	mov    rcx,QWORD PTR [rsp+0x128]
   1400155c7:	mov    r11d,DWORD PTR [rsp+0x20]
   1400155cc:	cmp    rcx,r14
   1400155cf:	jae    0x1400155df
   1400155d1:	movzx  eax,BYTE PTR [rcx]
   1400155d4:	lea    rsi,[rcx+0x1]
   1400155d8:	mov    DWORD PTR [r12+0xc],eax
   1400155dd:	jmp    0x140015603
   1400155df:	test   dl,0x2
   1400155e2:	je     0x1400155fa
   1400155e4:	mov    r14d,0x1
   1400155ea:	mov    DWORD PTR [r12],0x2
   1400155f2:	mov    r10d,edx
   1400155f5:	jmp    0x140016824
   1400155fa:	mov    DWORD PTR [r12+0xc],0x0
   140015603:	mov    edi,DWORD PTR [r12+0x8]
   140015608:	mov    r8d,DWORD PTR [r12+0xc]
   14001560d:	mov    eax,0x8421085
   140015612:	mov    ecx,edi
   140015614:	shl    ecx,0x8
   140015617:	add    ecx,r8d
   14001561a:	mul    ecx
   14001561c:	mov    eax,ecx
   14001561e:	sub    eax,edx
   140015620:	shr    eax,1
   140015622:	add    eax,edx
   140015624:	shr    eax,0x4
   140015627:	imul   eax,eax,0x1f
   14001562a:	cmp    ecx,eax
   14001562c:	jne    0x140015641
   14001562e:	test   r8b,0x20
   140015632:	jne    0x140015641
   140015634:	mov    eax,edi
   140015636:	and    al,0xf
   140015638:	cmp    al,0x8
   14001563a:	jne    0x140015641
   14001563c:	xor    r15d,r15d
   14001563f:	jmp    0x140015647
   140015641:	mov    r15d,0x1
   140015647:	test   r9d,r9d
   14001564a:	jne    0x140015671
   14001564c:	shr    edi,0x4
   14001564f:	mov    eax,0x1
   140015654:	lea    ecx,[rdi+0x8]
   140015657:	shl    eax,cl
   140015659:	cmp    eax,0x8000
   14001565e:	ja     0x140015669
   140015660:	cmp    r10,rax
   140015663:	jb     0x140015669
   140015665:	xor    eax,eax
   140015667:	jmp    0x14001566e
   140015669:	mov    eax,0x1
   14001566e:	or     r15d,eax
   140015671:	test   r15d,r15d
   140015674:	jne    0x140015680
   140015676:	jmp    0x1400158ad
   14001567b:	mov    r11d,DWORD PTR [rsp+0x20]
   140015680:	or     r14,0xffffffffffffffff
   140015684:	mov    DWORD PTR [r12],0x24
   14001568c:	jmp    0x14001681c
   140015691:	mov    rcx,QWORD PTR [rsp+0x128]
   140015699:	cmp    rcx,r14
   14001569c:	jae    0x1400158c3
   1400156a2:	movzx  eax,BYTE PTR [rcx]
   1400156a5:	lea    rsi,[rcx+0x1]
   1400156a9:	jmp    0x1400158d6
   1400156ae:	mov    rcx,QWORD PTR [rsp+0x128]
   1400156b6:	cmp    rcx,r14
   1400156b9:	jae    0x140015912
   1400156bf:	movzx  eax,BYTE PTR [rcx]
   1400156c2:	lea    rsi,[rcx+0x1]
   1400156c6:	jmp    0x140015925
   1400156cb:	mov    rcx,QWORD PTR [rsp+0x128]
   1400156d3:	mov    r8d,0xfffffff8
   1400156d9:	cmp    rcx,r14
   1400156dc:	jae    0x140015965
   1400156e2:	movzx  eax,BYTE PTR [rcx]
   1400156e5:	lea    rsi,[rcx+0x1]
   1400156e9:	jmp    0x140015978
   1400156ee:	mov    r8,QWORD PTR [rsp+0x128]
   1400156f6:	cmp    r8,r14
   1400156f9:	jae    0x1400159b4
   1400156ff:	movzx  eax,BYTE PTR [r8]
   140015703:	lea    rsi,[r8+0x1]
   140015707:	mov    r8d,0xfffffff8
   14001570d:	mov    BYTE PTR [r15+r12*1+0x2928],al
   140015715:	inc    r15d
   140015718:	jmp    0x140015951
   14001571d:	mov    rcx,QWORD PTR [rsp+0x128]
   140015725:	cmp    rcx,r14
   140015728:	jae    0x140015a2b
   14001572e:	movzx  eax,BYTE PTR [rcx]
   140015731:	lea    rsi,[rcx+0x1]
   140015735:	jmp    0x140015a3e
   14001573a:	mov    rcx,QWORD PTR [rsp+0x128]
   140015742:	lea    r8,[rip+0xfffffffffffea8b7]        # 0x140000000
   140015749:	cmp    rcx,r14
   14001574c:	jae    0x140015b7f
   140015752:	movzx  eax,BYTE PTR [rcx]
   140015755:	lea    rsi,[rcx+0x1]
   140015759:	jmp    0x140015b92
   14001575e:	mov    rcx,QWORD PTR [rsp+0x128]
   140015766:	lea    rdi,[rip+0xfffffffffffea893]        # 0x140000000
   14001576d:	cmp    rcx,r14
   140015770:	jae    0x140015c1e
   140015776:	movzx  eax,BYTE PTR [rcx]
   140015779:	lea    rsi,[rcx+0x1]
   14001577d:	jmp    0x140015c31
   140015782:	mov    rcx,QWORD PTR [rsp+0x128]
   14001578a:	cmp    rcx,r14
   14001578d:	jae    0x140015f15
   140015793:	movzx  eax,BYTE PTR [rcx]
   140015796:	lea    rsi,[rcx+0x1]
   14001579a:	jmp    0x140015f28
   14001579f:	mov    rcx,QWORD PTR [rsp+0x128]
   1400157a7:	cmp    rcx,r14
   1400157aa:	jae    0x14001600c
   1400157b0:	movzx  eax,BYTE PTR [rcx]
   1400157b3:	lea    rsi,[rcx+0x1]
   1400157b7:	jmp    0x14001601f
   1400157bc:	mov    rcx,QWORD PTR [rsp+0x128]
   1400157c4:	cmp    rcx,r14
   1400157c7:	jae    0x140016273
   1400157cd:	movzx  eax,BYTE PTR [rcx]
   1400157d0:	lea    rsi,[rcx+0x1]
   1400157d4:	jmp    0x140016286
   1400157d9:	mov    rcx,QWORD PTR [rsp+0x128]
   1400157e1:	cmp    rcx,r14
   1400157e4:	jae    0x14001638d
   1400157ea:	movzx  eax,BYTE PTR [rcx]
   1400157ed:	lea    rsi,[rcx+0x1]
   1400157f1:	jmp    0x1400163a0
   1400157f6:	mov    rcx,QWORD PTR [rsp+0x128]
   1400157fe:	cmp    rcx,r14
   140015801:	jae    0x140016443
   140015807:	movzx  eax,BYTE PTR [rcx]
   14001580a:	lea    rsi,[rcx+0x1]
   14001580e:	jmp    0x140016456
   140015813:	mov    rcx,QWORD PTR [rsp+0x128]
   14001581b:	cmp    rcx,r14
   14001581e:	jae    0x14001650c
   140015824:	movzx  eax,BYTE PTR [rcx]
   140015827:	lea    rsi,[rcx+0x1]
   14001582b:	jmp    0x14001651f
   140015830:	mov    r9,QWORD PTR [rsp+0x30]
   140015835:	mov    r11,QWORD PTR [rsp+0x138]
   14001583d:	mov    r10d,edx
   140015840:	jmp    0x1400165ae
   140015845:	cmp    r13,rdi
   140015848:	jae    0x1400167fb
   14001584e:	cmp    rsi,r14
   140015851:	jae    0x1400167e2
   140015857:	mov    rcx,rdi
   14001585a:	mov    rdi,r14
   14001585d:	mov    edx,r15d
   140015860:	sub    rdi,rsi
   140015863:	sub    rcx,r13
   140015866:	cmp    rcx,rdi
   140015869:	mov    rax,rdi
   14001586c:	cmovb  rax,rcx
   140015870:	cmp    rax,rdx
   140015873:	jae    0x14001587e
   140015875:	cmp    rcx,rdi
   140015878:	cmovb  rdi,rcx
   14001587c:	jmp    0x140015881
   14001587e:	mov    rdi,rdx
   140015881:	mov    r8,rdi
   140015884:	mov    rdx,rsi
   140015887:	mov    rcx,r13
   14001588a:	call   0x140017346
   14001588f:	add    rsi,rdi
   140015892:	add    r13,rdi
   140015895:	sub    r15d,edi
   140015898:	test   r15d,r15d
   14001589b:	jne    0x140016688
   1400158a1:	test   BYTE PTR [r12+0x14],0x1
   1400158a7:	jne    0x1400167c5
   1400158ad:	mov    rdi,QWORD PTR [rsp+0x28]
   1400158b2:	mov    edx,DWORD PTR [rsp+0x150]
   1400158b9:	cmp    ebx,0x3
   1400158bc:	jae    0x1400158e6
   1400158be:	cmp    rsi,r14
   1400158c1:	jb     0x1400158d0
   1400158c3:	test   dl,0x2
   1400158c6:	jne    0x140016699
   1400158cc:	xor    eax,eax
   1400158ce:	jmp    0x1400158d6
   1400158d0:	movzx  eax,BYTE PTR [rsi]
   1400158d3:	inc    rsi
   1400158d6:	mov    ecx,ebx
   1400158d8:	add    ebx,0x8
   1400158db:	shl    rax,cl
   1400158de:	or     rbp,rax
   1400158e1:	cmp    ebx,0x3
   1400158e4:	jb     0x1400158be
   1400158e6:	mov    eax,ebp
   1400158e8:	add    ebx,0xfffffffd
   1400158eb:	shr    rbp,0x3
   1400158ef:	and    eax,0x7
   1400158f2:	mov    DWORD PTR [r12+0x14],eax
   1400158f7:	shr    eax,1
   1400158f9:	mov    DWORD PTR [r12+0x18],eax
   1400158fe:	jne    0x140015a77
   140015904:	mov    eax,ebx
   140015906:	and    eax,0x7
   140015909:	cmp    ebx,eax
   14001590b:	jae    0x140015939
   14001590d:	cmp    rsi,r14
   140015910:	jb     0x14001591f
   140015912:	test   dl,0x2
   140015915:	jne    0x1400166ac
   14001591b:	xor    eax,eax
   14001591d:	jmp    0x140015925
   14001591f:	movzx  eax,BYTE PTR [rsi]
   140015922:	inc    rsi
   140015925:	mov    ecx,ebx
   140015927:	add    ebx,0x8
   14001592a:	shl    rax,cl
   14001592d:	or     rbp,rax
   140015930:	mov    eax,ebx
   140015932:	and    eax,0x7
   140015935:	cmp    ebx,eax
   140015937:	jb     0x14001590d
   140015939:	mov    ecx,ebx
   14001593b:	mov    eax,ebx
   14001593d:	mov    r8d,0xfffffff8
   140015943:	and    cl,0x7
   140015946:	and    eax,0x7
   140015949:	shr    rbp,cl
   14001594c:	sub    ebx,eax
   14001594e:	xor    r15d,r15d
   140015951:	cmp    r15d,0x4
   140015955:	jae    0x1400159d1
   140015957:	test   ebx,ebx
   140015959:	je     0x14001599c
   14001595b:	cmp    ebx,0x8
   14001595e:	jae    0x140015988
   140015960:	cmp    rsi,r14
   140015963:	jb     0x140015972
   140015965:	test   dl,0x2
   140015968:	jne    0x1400166bf
   14001596e:	xor    eax,eax
   140015970:	jmp    0x140015978
   140015972:	movzx  eax,BYTE PTR [rsi]
   140015975:	inc    rsi
   140015978:	mov    ecx,ebx
   14001597a:	add    ebx,0x8
   14001597d:	shl    rax,cl
   140015980:	or     rbp,rax
   140015983:	cmp    ebx,0x8
   140015986:	jb     0x140015960
   140015988:	mov    BYTE PTR [r15+r12*1+0x2928],bpl
   140015990:	add    ebx,r8d
   140015993:	shr    rbp,0x8
   140015997:	inc    r15d
   14001599a:	jmp    0x140015951
   14001599c:	cmp    rsi,r14
   14001599f:	jae    0x1400159ba
   1400159a1:	movzx  eax,BYTE PTR [rsi]
   1400159a4:	inc    rsi
   1400159a7:	mov    BYTE PTR [r15+r12*1+0x2928],al
   1400159af:	inc    r15d
   1400159b2:	jmp    0x140015951
   1400159b4:	mov    r8d,0xfffffff8
   1400159ba:	test   dl,0x2
   1400159bd:	jne    0x1400166d2
   1400159c3:	mov    BYTE PTR [r15+r12*1+0x2928],0x0
   1400159cc:	inc    r15d
   1400159cf:	jmp    0x140015951
   1400159d1:	movzx  eax,BYTE PTR [r12+0x2928]
   1400159da:	movzx  r15d,BYTE PTR [r12+0x2929]
   1400159e3:	movzx  ecx,BYTE PTR [r12+0x292b]
   1400159ec:	shl    ecx,0x8
   1400159ef:	shl    r15d,0x8
   1400159f3:	or     r15d,eax
   1400159f6:	movzx  eax,BYTE PTR [r12+0x292a]
   1400159ff:	or     ecx,eax
   140015a01:	xor    ecx,0xffff
   140015a07:	cmp    r15d,ecx
   140015a0a:	jne    0x14001680b
   140015a10:	test   r15d,r15d
   140015a13:	je     0x1400158a1
   140015a19:	test   ebx,ebx
   140015a1b:	je     0x140015898
   140015a21:	cmp    ebx,0x8
   140015a24:	jae    0x140015a4e
   140015a26:	cmp    rsi,r14
   140015a29:	jb     0x140015a38
   140015a2b:	test   dl,0x2
   140015a2e:	jne    0x1400166e5
   140015a34:	xor    eax,eax
   140015a36:	jmp    0x140015a3e
   140015a38:	movzx  eax,BYTE PTR [rsi]
   140015a3b:	inc    rsi
   140015a3e:	mov    ecx,ebx
   140015a40:	add    ebx,0x8
   140015a43:	shl    rax,cl
   140015a46:	or     rbp,rax
   140015a49:	cmp    ebx,0x8
   140015a4c:	jb     0x140015a26
   140015a4e:	movzx  r8d,bpl
   140015a52:	mov    eax,0xfffffff8
   140015a57:	shr    rbp,0x8
   140015a5b:	mov    DWORD PTR [rsp+0x20],r8d
   140015a60:	add    ebx,eax
   140015a62:	cmp    r13,rdi
   140015a65:	jae    0x1400166f8
   140015a6b:	mov    BYTE PTR [r13+0x0],r8b
   140015a6f:	inc    r13
   140015a72:	dec    r15d
   140015a75:	jmp    0x140015a10
   140015a77:	cmp    eax,0x3
   140015a7a:	je     0x1400169cd
   140015a80:	cmp    eax,0x1
   140015a83:	jne    0x140015b52
   140015a89:	movabs rax,0x505050505050505
   140015a93:	mov    DWORD PTR [r12+0x2c],0x120
   140015a9c:	mov    DWORD PTR [r12+0x30],0x20
   140015aa5:	mov    QWORD PTR [r12+0xde8],rax
   140015aad:	mov    QWORD PTR [r12+0xdf0],rax
   140015ab5:	mov    QWORD PTR [r12+0xdf8],rax
   140015abd:	mov    QWORD PTR [r12+0xe00],rax
   140015ac5:	mov    ecx,0x2
   140015aca:	movabs r8,0x808080808080808
   140015ad4:	lea    rax,[r12+0x48]
   140015ad9:	nop    DWORD PTR [rax+0x0]
   140015ae0:	mov    QWORD PTR [rax],r8
   140015ae3:	mov    QWORD PTR [rax+0x8],r8
   140015ae7:	mov    QWORD PTR [rax+0x10],r8
   140015aeb:	lea    rax,[rax+0x40]
   140015aef:	mov    QWORD PTR [rax-0x28],r8
   140015af3:	mov    QWORD PTR [rax-0x20],r8
   140015af7:	mov    QWORD PTR [rax-0x18],r8
   140015afb:	mov    QWORD PTR [rax-0x10],r8
   140015aff:	mov    QWORD PTR [rax-0x8],r8
   140015b03:	dec    rcx
   140015b06:	jne    0x140015ae0
   140015b08:	mov    QWORD PTR [rax],r8
   140015b0b:	mov    QWORD PTR [rax+0x8],r8
   140015b0f:	mov    eax,0x9
   140015b14:	lea    rdi,[r12+0xd8]
   140015b1c:	mov    ecx,0x70
   140015b21:	rep stos BYTE PTR es:[rdi],al
   140015b23:	movabs rax,0x707070707070707
   140015b2d:	mov    QWORD PTR [r12+0x148],rax
   140015b35:	mov    QWORD PTR [r12+0x150],rax
   140015b3d:	mov    QWORD PTR [r12+0x158],rax
   140015b45:	mov    QWORD PTR [r12+0x160],r8
   140015b4d:	jmp    0x140015c6c
   140015b52:	xor    r15d,r15d
   140015b55:	lea    r8,[rip+0xfffffffffffea4a4]        # 0x140000000
   140015b5c:	cmp    r15d,0x3
   140015b60:	jae    0x140015be7
   140015b66:	lea    rax,[r8+0x1b8c8]
   140015b6d:	mov    edi,r15d
   140015b70:	add    rax,rdi
   140015b73:	movsx  ecx,BYTE PTR [rax]
   140015b76:	cmp    ebx,ecx
   140015b78:	jae    0x140015bb1
   140015b7a:	cmp    rsi,r14
   140015b7d:	jb     0x140015b8c
   140015b7f:	test   dl,0x2
   140015b82:	jne    0x14001670b
   140015b88:	xor    eax,eax
   140015b8a:	jmp    0x140015b92
   140015b8c:	movzx  eax,BYTE PTR [rsi]
   140015b8f:	inc    rsi
   140015b92:	mov    ecx,ebx
   140015b94:	mov    edi,r15d
   140015b97:	add    ebx,0x8
   140015b9a:	shl    rax,cl
   140015b9d:	or     rbp,rax
   140015ba0:	lea    rax,[r8+0x1b8c8]
   140015ba7:	add    rax,rdi
   140015baa:	movsx  ecx,BYTE PTR [rax]
   140015bad:	cmp    ebx,ecx
   140015baf:	jb     0x140015b7a
   140015bb1:	mov    edx,0x1
   140015bb6:	shl    edx,cl
   140015bb8:	dec    edx
   140015bba:	and    edx,ebp
   140015bbc:	mov    DWORD PTR [r12+rdi*4+0x2c],edx
   140015bc1:	movsx  ecx,BYTE PTR [rax]
   140015bc4:	shr    rbp,cl
   140015bc7:	sub    ebx,ecx
   140015bc9:	mov    ecx,DWORD PTR [r8+rdi*4+0x1af58]
   140015bd1:	add    ecx,edx
   140015bd3:	mov    edx,DWORD PTR [rsp+0x150]
   140015bda:	inc    r15d
   140015bdd:	mov    DWORD PTR [r12+rdi*4+0x2c],ecx
   140015be2:	jmp    0x140015b5c
   140015be7:	lea    rcx,[r12+0x1b88]
   140015bef:	xor    edx,edx
   140015bf1:	mov    r8d,0x120
   140015bf7:	call   0x14001734c
   140015bfc:	xor    r15d,r15d
   140015bff:	lea    rdi,[rip+0xfffffffffffea3fa]        # 0x140000000
   140015c06:	cmp    r15d,DWORD PTR [r12+0x34]
   140015c0b:	jae    0x140015c63
   140015c0d:	cmp    ebx,0x3
   140015c10:	jae    0x140015c41
   140015c12:	cmp    rsi,r14
   140015c15:	jb     0x140015c2b
   140015c17:	mov    edx,DWORD PTR [rsp+0x150]
   140015c1e:	test   dl,0x2
   140015c21:	jne    0x14001671e
   140015c27:	xor    eax,eax
   140015c29:	jmp    0x140015c31
   140015c2b:	movzx  eax,BYTE PTR [rsi]
   140015c2e:	inc    rsi
   140015c31:	mov    ecx,ebx
   140015c33:	add    ebx,0x8
   140015c36:	shl    rax,cl
   140015c39:	or     rbp,rax
   140015c3c:	cmp    ebx,0x3
   140015c3f:	jb     0x140015c12
   140015c41:	movzx  eax,BYTE PTR [r15+rdi*1+0x1af40]
   140015c4a:	mov    ecx,ebp
   140015c4c:	add    ebx,0xfffffffd
   140015c4f:	and    ecx,0x7
   140015c52:	shr    rbp,0x3
   140015c56:	inc    r15d
   140015c59:	mov    BYTE PTR [rax+r12*1+0x1b88],cl
   140015c61:	jmp    0x140015c06
   140015c63:	mov    DWORD PTR [r12+0x34],0x13
   140015c6c:	mov    eax,DWORD PTR [r12+0x18]
   140015c71:	test   eax,eax
   140015c73:	js     0x1400160f6
   140015c79:	imul   r14,rax,0xda0
   140015c80:	xor    eax,eax
   140015c82:	xor    edx,edx
   140015c84:	mov    r8d,0x800
   140015c8a:	mov    QWORD PTR [rsp+0x50],rax
   140015c8f:	mov    QWORD PTR [rsp+0x58],rax
   140015c94:	add    r14,r12
   140015c97:	mov    QWORD PTR [rsp+0x60],rax
   140015c9c:	mov    QWORD PTR [rsp+0x68],rax
   140015ca1:	lea    rcx,[r14+0x168]
   140015ca8:	mov    QWORD PTR [rsp+0x70],rax
   140015cad:	mov    QWORD PTR [rsp+0x78],rax
   140015cb2:	mov    QWORD PTR [rsp+0x80],rax
   140015cba:	mov    QWORD PTR [rsp+0x88],rax
   140015cc2:	call   0x14001734c
   140015cc7:	lea    rcx,[r14+0x968]
   140015cce:	xor    edx,edx
   140015cd0:	mov    r8d,0x480
   140015cd6:	call   0x14001734c
   140015cdb:	mov    eax,DWORD PTR [r12+0x18]
   140015ce0:	mov    r9d,DWORD PTR [r12+rax*4+0x2c]
   140015ce5:	test   r9d,r9d
   140015ce8:	je     0x140015d10
   140015cea:	lea    rcx,[r14+0x48]
   140015cee:	mov    edx,r9d
   140015cf1:	nop    DWORD PTR [rax+0x0]
   140015cf5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140015d00:	movzx  eax,BYTE PTR [rcx]
   140015d03:	lea    rcx,[rcx+0x1]
   140015d07:	inc    DWORD PTR [rsp+rax*4+0x50]
   140015d0b:	dec    rdx
   140015d0e:	jne    0x140015d00
   140015d10:	xor    edi,edi
   140015d12:	xor    ecx,ecx
   140015d14:	xor    edx,edx
   140015d16:	lea    r8d,[rdi+0xf]
   140015d1a:	mov    QWORD PTR [rsp+0x90],rcx
   140015d22:	mov    eax,DWORD PTR [rsp+rdx*1+0x54]
   140015d26:	lea    rdx,[rdx+0x4]
   140015d2a:	add    ecx,eax
   140015d2c:	add    edi,eax
   140015d2e:	add    ecx,ecx
   140015d30:	mov    DWORD PTR [rsp+rdx*1+0x94],ecx
   140015d37:	dec    r8
   140015d3a:	jne    0x140015d22
   140015d3c:	cmp    ecx,0x10000
   140015d42:	je     0x140015d4d
   140015d44:	cmp    edi,0x1
   140015d47:	ja     0x1400169da
   140015d4d:	or     r10d,0xffffffff
   140015d51:	xor    r11d,r11d
   140015d54:	test   r9d,r9d
   140015d57:	je     0x140015e72
   140015d5d:	nop    DWORD PTR [rax]
   140015d60:	movzx  edi,BYTE PTR [r11+r14*1+0x48]
   140015d66:	xor    edx,edx
   140015d68:	test   edi,edi
   140015d6a:	je     0x140015e5f
   140015d70:	lea    rcx,[rsp+0x90]
   140015d78:	mov    r9d,edi
   140015d7b:	mov    r8d,DWORD PTR [rcx+rdi*4]
   140015d7f:	lea    rcx,[rcx+rdi*4]
   140015d83:	lea    eax,[r8+0x1]
   140015d87:	mov    DWORD PTR [rcx],eax
   140015d89:	nop    DWORD PTR [rax+0x0]
   140015d90:	mov    ecx,r8d
   140015d93:	lea    eax,[rdx+rdx*1]
   140015d96:	shr    r8d,1
   140015d99:	and    ecx,0x1
   140015d9c:	mov    edx,ecx
   140015d9e:	or     edx,eax
   140015da0:	dec    r9d
   140015da3:	jne    0x140015d90
   140015da5:	cmp    edi,0xa
   140015da8:	ja     0x140015de5
   140015daa:	movzx  r8d,di
   140015dae:	shl    r8w,0x9
   140015db3:	or     r8w,r11w
   140015db7:	cmp    edx,0x400
   140015dbd:	jae    0x140015e5f
   140015dc3:	mov    ecx,edi
   140015dc5:	mov    edi,0x1
   140015dca:	shl    edi,cl
   140015dcc:	nop    DWORD PTR [rax+0x0]
   140015dd0:	mov    WORD PTR [r14+rdx*2+0x168],r8w
   140015dd9:	add    edx,edi
   140015ddb:	cmp    edx,0x400
   140015de1:	jb     0x140015dd0
   140015de3:	jmp    0x140015e5f
   140015de5:	mov    eax,edx
   140015de7:	and    eax,0x3ff
   140015dec:	movsx  ecx,WORD PTR [r14+rax*2+0x168]
   140015df5:	test   ecx,ecx
   140015df7:	jne    0x140015e09
   140015df9:	mov    WORD PTR [r14+rax*2+0x168],r10w
   140015e02:	mov    ecx,r10d
   140015e05:	sub    r10d,0x2
   140015e09:	shr    edx,0x9
   140015e0c:	cmp    edi,0xb
   140015e0f:	jbe    0x140015e4a
   140015e11:	add    edi,0xfffffff5
   140015e14:	shr    edx,1
   140015e16:	mov    eax,edx
   140015e18:	and    eax,0x1
   140015e1b:	sub    ecx,eax
   140015e1d:	movsxd rax,ecx
   140015e20:	mov    ecx,0x48f
   140015e25:	sub    rcx,rax
   140015e28:	movzx  eax,WORD PTR [r14+rcx*2+0x48]
   140015e2e:	test   ax,ax
   140015e31:	jne    0x140015e42
   140015e33:	mov    WORD PTR [r14+rcx*2+0x48],r10w
   140015e39:	mov    ecx,r10d
   140015e3c:	sub    r10d,0x2
   140015e40:	jmp    0x140015e45
   140015e42:	movsx  ecx,ax
   140015e45:	dec    rdi
   140015e48:	jne    0x140015e14
   140015e4a:	shr    edx,1
   140015e4c:	and    edx,0x1
   140015e4f:	sub    edx,ecx
   140015e51:	lea    eax,[rdx-0x1]
   140015e54:	cdqe   
   140015e56:	mov    WORD PTR [r14+rax*2+0x968],r11w
   140015e5f:	mov    eax,DWORD PTR [r12+0x18]
   140015e64:	inc    r11d
   140015e67:	cmp    r11d,DWORD PTR [r12+rax*4+0x2c]
   140015e6c:	jb     0x140015d60
   140015e72:	cmp    DWORD PTR [r12+0x18],0x2
   140015e78:	jne    0x1400160d9
   140015e7e:	xor    r15d,r15d
   140015e81:	mov    eax,DWORD PTR [r12+0x30]
   140015e86:	add    eax,DWORD PTR [r12+0x2c]
   140015e8b:	cmp    r15d,eax
   140015e8e:	jae    0x14001608d
   140015e94:	cmp    ebx,0xf
   140015e97:	jae    0x140015f5d
   140015e9d:	mov    r14,QWORD PTR [rsp+0x40]
   140015ea2:	mov    rax,r14
   140015ea5:	sub    rax,rsi
   140015ea8:	cmp    rax,0x2
   140015eac:	jge    0x140015f3e
   140015eb2:	mov    rax,rbp
   140015eb5:	and    eax,0x3ff
   140015eba:	movsx  edi,WORD PTR [r12+rax*2+0x1ca8]
   140015ec3:	test   edi,edi
   140015ec5:	js     0x140015ed8
   140015ec7:	sar    edi,0x9
   140015eca:	test   edi,edi
   140015ecc:	je     0x140015f09
   140015ece:	cmp    ebx,edi
   140015ed0:	jae    0x140015f5d
   140015ed6:	jmp    0x140015f09
   140015ed8:	cmp    ebx,0xa
   140015edb:	jbe    0x140015f09
   140015edd:	mov    ecx,0xa
   140015ee2:	not    edi
   140015ee4:	mov    rdx,rbp
   140015ee7:	shr    rdx,cl
   140015eea:	movsxd rax,edi
   140015eed:	inc    ecx
   140015eef:	and    edx,0x1
   140015ef2:	add    rdx,rax
   140015ef5:	movsx  edi,WORD PTR [r12+rdx*2+0x24a8]
   140015efe:	test   edi,edi
   140015f00:	jns    0x140015f5d
   140015f02:	lea    eax,[rcx+0x1]
   140015f05:	cmp    ebx,eax
   140015f07:	jae    0x140015ee2
   140015f09:	cmp    rsi,r14
   140015f0c:	jb     0x140015f22
   140015f0e:	mov    edx,DWORD PTR [rsp+0x150]
   140015f15:	test   dl,0x2
   140015f18:	jne    0x140016731
   140015f1e:	xor    eax,eax
   140015f20:	jmp    0x140015f28
   140015f22:	movzx  eax,BYTE PTR [rsi]
   140015f25:	inc    rsi
   140015f28:	mov    ecx,ebx
   140015f2a:	add    ebx,0x8
   140015f2d:	shl    rax,cl
   140015f30:	or     rbp,rax
   140015f33:	cmp    ebx,0xf
   140015f36:	jb     0x140015eb2
   140015f3c:	jmp    0x140015f5d
   140015f3e:	movzx  edx,BYTE PTR [rsi+0x1]
   140015f42:	movzx  eax,BYTE PTR [rsi]
   140015f45:	lea    ecx,[rbx+0x8]
   140015f48:	shl    rdx,cl
   140015f4b:	mov    ecx,ebx
   140015f4d:	add    rsi,0x2
   140015f51:	shl    rax,cl
   140015f54:	or     rdx,rax
   140015f57:	or     rbp,rdx
   140015f5a:	add    ebx,0x10
   140015f5d:	mov    rax,rbp
   140015f60:	and    eax,0x3ff
   140015f65:	movsx  r8d,WORD PTR [r12+rax*2+0x1ca8]
   140015f6e:	test   r8d,r8d
   140015f71:	js     0x140015f82
   140015f73:	mov    ecx,r8d
   140015f76:	sar    ecx,0x9
   140015f79:	and    r8d,0x1ff
   140015f80:	jmp    0x140015fb2
   140015f82:	mov    ecx,0xa
   140015f87:	nop    WORD PTR [rax+rax*1+0x0]
   140015f90:	not    r8d
   140015f93:	mov    rdx,rbp
   140015f96:	shr    rdx,cl
   140015f99:	movsxd rax,r8d
   140015f9c:	inc    ecx
   140015f9e:	and    edx,0x1
   140015fa1:	add    rdx,rax
   140015fa4:	movsx  r8d,WORD PTR [r12+rdx*2+0x24a8]
   140015fad:	test   r8d,r8d
   140015fb0:	js     0x140015f90
   140015fb2:	shr    rbp,cl
   140015fb5:	sub    ebx,ecx
   140015fb7:	mov    DWORD PTR [rsp+0x20],r8d
   140015fbc:	cmp    r8d,0x10
   140015fc0:	jae    0x140015fd2
   140015fc2:	mov    BYTE PTR [r15+r12*1+0x292c],r8b
   140015fca:	inc    r15d
   140015fcd:	jmp    0x140015e81
   140015fd2:	jne    0x140015fdd
   140015fd4:	test   r15d,r15d
   140015fd7:	je     0x1400169e7
   140015fdd:	lea    ecx,[r8-0x10]
   140015fe1:	lea    rax,[rip+0xfffffffffffea018]        # 0x140000000
   140015fe8:	movsx  r11d,BYTE PTR [rcx+rax*1+0x1b8cc]
   140015ff1:	mov    DWORD PTR [rsp+0x24],r11d
   140015ff6:	cmp    ebx,r11d
   140015ff9:	jae    0x14001602f
   140015ffb:	mov    r14,QWORD PTR [rsp+0x40]
   140016000:	cmp    rsi,r14
   140016003:	jb     0x140016019
   140016005:	mov    edx,DWORD PTR [rsp+0x150]
   14001600c:	test   dl,0x2
   14001600f:	jne    0x140016744
   140016015:	xor    eax,eax
   140016017:	jmp    0x14001601f
   140016019:	movzx  eax,BYTE PTR [rsi]
   14001601c:	inc    rsi
   14001601f:	mov    ecx,ebx
   140016021:	add    ebx,0x8
   140016024:	shl    rax,cl
   140016027:	or     rbp,rax
   14001602a:	cmp    ebx,r11d
   14001602d:	jb     0x140016000
   14001602f:	mov    ecx,r11d
   140016032:	mov    edi,0x1
   140016037:	lea    rax,[rip+0xfffffffffffe9fc2]        # 0x140000000
   14001603e:	shl    edi,cl
   140016040:	sub    ebx,r11d
   140016043:	dec    edi
   140016045:	and    edi,ebp
   140016047:	shr    rbp,cl
   14001604a:	lea    ecx,[r8-0x10]
   14001604e:	movsx  eax,BYTE PTR [rcx+rax*1+0x1b8d0]
   140016056:	add    edi,eax
   140016058:	cmp    r8d,0x10
   14001605c:	jne    0x14001606d
   14001605e:	lea    eax,[r15-0x1]
   140016062:	movzx  edx,BYTE PTR [rax+r12*1+0x292c]
   14001606b:	jmp    0x14001606f
   14001606d:	xor    edx,edx
   14001606f:	mov    eax,r15d
   140016072:	lea    rcx,[r12+0x292c]
   14001607a:	mov    r8d,edi
   14001607d:	add    rcx,rax
   140016080:	call   0x14001734c
   140016085:	add    r15d,edi
   140016088:	jmp    0x140015e81
   14001608d:	mov    edx,DWORD PTR [r12+0x2c]
   140016092:	mov    ecx,DWORD PTR [r12+0x30]
   140016097:	add    ecx,edx
   140016099:	cmp    ecx,r15d
   14001609c:	jne    0x1400169f4
   1400160a2:	mov    r8d,edx
   1400160a5:	lea    rcx,[r12+0x48]
   1400160aa:	lea    rdx,[r12+0x292c]
   1400160b2:	call   0x140017346
   1400160b7:	mov    eax,DWORD PTR [r12+0x2c]
   1400160bc:	mov    r8d,DWORD PTR [r12+0x30]
   1400160c1:	lea    rdx,[r12+0x292c]
   1400160c9:	lea    rcx,[r12+0xde8]
   1400160d1:	add    rdx,rax
   1400160d4:	call   0x140017346
   1400160d9:	dec    DWORD PTR [r12+0x18]
   1400160de:	mov    r14,QWORD PTR [rsp+0x40]
   1400160e3:	jmp    0x140015c6c
   1400160e8:	movzx  eax,BYTE PTR [rcx+0x1]
   1400160ec:	mov    BYTE PTR [r13+0x1],al
   1400160f0:	mov    eax,r15d
   1400160f3:	add    r13,rax
   1400160f6:	mov    rdi,QWORD PTR [rsp+0x28]
   1400160fb:	mov    rcx,r14
   1400160fe:	sub    rcx,rsi
   140016101:	cmp    rcx,0x4
   140016105:	jl     0x1400161f2
   14001610b:	mov    rax,rdi
   14001610e:	sub    rax,r13
   140016111:	cmp    rax,0x2
   140016115:	jl     0x1400161f2
   14001611b:	cmp    ebx,0x1e
   14001611e:	jae    0x140016131
   140016120:	mov    eax,DWORD PTR [rsi]
   140016122:	mov    ecx,ebx
   140016124:	add    rsi,0x4
   140016128:	shl    rax,cl
   14001612b:	or     rbp,rax
   14001612e:	add    ebx,0x20
   140016131:	mov    rax,rbp
   140016134:	and    eax,0x3ff
   140016139:	movsx  r15d,WORD PTR [r12+rax*2+0x168]
   140016142:	test   r15d,r15d
   140016145:	js     0x14001614f
   140016147:	mov    ecx,r15d
   14001614a:	sar    ecx,0x9
   14001614d:	jmp    0x140016182
   14001614f:	mov    ecx,0xa
   140016154:	nop    DWORD PTR [rax+0x0]
   140016158:	nop    DWORD PTR [rax+rax*1+0x0]
   140016160:	not    r15d
   140016163:	mov    rdx,rbp
   140016166:	shr    rdx,cl
   140016169:	movsxd rax,r15d
   14001616c:	inc    ecx
   14001616e:	and    edx,0x1
   140016171:	add    rdx,rax
   140016174:	movsx  r15d,WORD PTR [r12+rdx*2+0x968]
   14001617d:	test   r15d,r15d
   140016180:	js     0x140016160
   140016182:	shr    rbp,cl
   140016185:	sub    ebx,ecx
   140016187:	bt     r15d,0x8
   14001618c:	jb     0x140016340
   140016192:	mov    rax,rbp
   140016195:	and    eax,0x3ff
   14001619a:	movsx  eax,WORD PTR [r12+rax*2+0x168]
   1400161a3:	test   eax,eax
   1400161a5:	js     0x1400161ae
   1400161a7:	mov    ecx,eax
   1400161a9:	sar    ecx,0x9
   1400161ac:	jmp    0x1400161d2
   1400161ae:	mov    ecx,0xa
   1400161b3:	not    eax
   1400161b5:	mov    rdx,rbp
   1400161b8:	shr    rdx,cl
   1400161bb:	cdqe   
   1400161bd:	inc    ecx
   1400161bf:	and    edx,0x1
   1400161c2:	add    rdx,rax
   1400161c5:	movsx  eax,WORD PTR [r12+rdx*2+0x968]
   1400161ce:	test   eax,eax
   1400161d0:	js     0x1400161b3
   1400161d2:	shr    rbp,cl
   1400161d5:	sub    ebx,ecx
   1400161d7:	mov    BYTE PTR [r13+0x0],r15b
   1400161db:	bt     eax,0x8
   1400161df:	jb     0x14001633a
   1400161e5:	mov    BYTE PTR [r13+0x1],al
   1400161e9:	add    r13,0x2
   1400161ed:	jmp    0x1400160fb
   1400161f2:	cmp    ebx,0xf
   1400161f5:	jae    0x1400162bb
   1400161fb:	cmp    rcx,0x2
   1400161ff:	jge    0x14001629c
   140016205:	mov    rax,rbp
   140016208:	and    eax,0x3ff
   14001620d:	movsx  edi,WORD PTR [r12+rax*2+0x168]
   140016216:	test   edi,edi
   140016218:	js     0x14001622b
   14001621a:	sar    edi,0x9
   14001621d:	test   edi,edi
   14001621f:	je     0x140016267
   140016221:	cmp    ebx,edi
   140016223:	jae    0x1400162bb
   140016229:	jmp    0x140016267
   14001622b:	cmp    ebx,0xa
   14001622e:	jbe    0x140016267
   140016230:	mov    ecx,0xa
   140016235:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016240:	not    edi
   140016242:	mov    rdx,rbp
   140016245:	shr    rdx,cl
   140016248:	movsxd rax,edi
   14001624b:	inc    ecx
   14001624d:	and    edx,0x1
   140016250:	add    rdx,rax
   140016253:	movsx  edi,WORD PTR [r12+rdx*2+0x968]
   14001625c:	test   edi,edi
   14001625e:	jns    0x1400162bb
   140016260:	lea    eax,[rcx+0x1]
   140016263:	cmp    ebx,eax
   140016265:	jae    0x140016240
   140016267:	cmp    rsi,r14
   14001626a:	jb     0x140016280
   14001626c:	mov    edx,DWORD PTR [rsp+0x150]
   140016273:	test   dl,0x2
   140016276:	jne    0x140016757
   14001627c:	xor    eax,eax
   14001627e:	jmp    0x140016286
   140016280:	movzx  eax,BYTE PTR [rsi]
   140016283:	inc    rsi
   140016286:	mov    ecx,ebx
   140016288:	add    ebx,0x8
   14001628b:	shl    rax,cl
   14001628e:	or     rbp,rax
   140016291:	cmp    ebx,0xf
   140016294:	jb     0x140016205
   14001629a:	jmp    0x1400162bb
   14001629c:	movzx  edx,BYTE PTR [rsi+0x1]
   1400162a0:	movzx  eax,BYTE PTR [rsi]
   1400162a3:	lea    ecx,[rbx+0x8]
   1400162a6:	shl    rdx,cl
   1400162a9:	mov    ecx,ebx
   1400162ab:	add    rsi,0x2
   1400162af:	shl    rax,cl
   1400162b2:	or     rdx,rax
   1400162b5:	or     rbp,rdx
   1400162b8:	add    ebx,0x10
   1400162bb:	mov    rax,rbp
   1400162be:	and    eax,0x3ff
   1400162c3:	movsx  r15d,WORD PTR [r12+rax*2+0x168]
   1400162cc:	test   r15d,r15d
   1400162cf:	js     0x1400162e0
   1400162d1:	mov    ecx,r15d
   1400162d4:	sar    ecx,0x9
   1400162d7:	and    r15d,0x1ff
   1400162de:	jmp    0x140016312
   1400162e0:	mov    ecx,0xa
   1400162e5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400162f0:	not    r15d
   1400162f3:	mov    rdx,rbp
   1400162f6:	shr    rdx,cl
   1400162f9:	movsxd rax,r15d
   1400162fc:	inc    ecx
   1400162fe:	and    edx,0x1
   140016301:	add    rdx,rax
   140016304:	movsx  r15d,WORD PTR [r12+rdx*2+0x968]
   14001630d:	test   r15d,r15d
   140016310:	js     0x1400162f0
   140016312:	shr    rbp,cl
   140016315:	sub    ebx,ecx
   140016317:	cmp    r15d,0x100
   14001631e:	jae    0x140016340
   140016320:	mov    rdi,QWORD PTR [rsp+0x28]
   140016325:	cmp    r13,rdi
   140016328:	jae    0x14001676a
   14001632e:	mov    BYTE PTR [r13+0x0],r15b
   140016332:	inc    r13
   140016335:	jmp    0x1400160fb
   14001633a:	inc    r13
   14001633d:	mov    r15d,eax
   140016340:	and    r15d,0x1ff
   140016347:	cmp    r15d,0x100
   14001634e:	je     0x1400158a1
   140016354:	lea    ecx,[r15-0x101]
   14001635b:	lea    rax,[rip+0xfffffffffffe9c9e]        # 0x140000000
   140016362:	mov    r11d,DWORD PTR [rax+rcx*4+0x1adc0]
   14001636a:	mov    r15d,DWORD PTR [rax+rcx*4+0x1ad10]
   140016372:	mov    DWORD PTR [rsp+0x24],r11d
   140016377:	test   r11d,r11d
   14001637a:	je     0x1400163c7
   14001637c:	cmp    ebx,r11d
   14001637f:	jae    0x1400163b0
   140016381:	cmp    rsi,r14
   140016384:	jb     0x14001639a
   140016386:	mov    edx,DWORD PTR [rsp+0x150]
   14001638d:	test   dl,0x2
   140016390:	jne    0x14001677d
   140016396:	xor    eax,eax
   140016398:	jmp    0x1400163a0
   14001639a:	movzx  eax,BYTE PTR [rsi]
   14001639d:	inc    rsi
   1400163a0:	mov    ecx,ebx
   1400163a2:	add    ebx,0x8
   1400163a5:	shl    rax,cl
   1400163a8:	or     rbp,rax
   1400163ab:	cmp    ebx,r11d
   1400163ae:	jb     0x140016381
   1400163b0:	mov    ecx,r11d
   1400163b3:	mov    eax,0x1
   1400163b8:	sub    ebx,r11d
   1400163bb:	shl    eax,cl
   1400163bd:	dec    eax
   1400163bf:	and    eax,ebp
   1400163c1:	shr    rbp,cl
   1400163c4:	add    r15d,eax
   1400163c7:	cmp    ebx,0xf
   1400163ca:	jae    0x14001648b
   1400163d0:	mov    rax,r14
   1400163d3:	sub    rax,rsi
   1400163d6:	cmp    rax,0x2
   1400163da:	jge    0x14001646c
   1400163e0:	mov    rax,rbp
   1400163e3:	and    eax,0x3ff
   1400163e8:	movsx  edi,WORD PTR [r12+rax*2+0xf08]
   1400163f1:	test   edi,edi
   1400163f3:	js     0x140016406
   1400163f5:	sar    edi,0x9
   1400163f8:	test   edi,edi
   1400163fa:	je     0x140016437
   1400163fc:	cmp    ebx,edi
   1400163fe:	jae    0x14001648b
   140016404:	jmp    0x140016437
   140016406:	cmp    ebx,0xa
   140016409:	jbe    0x140016437
   14001640b:	mov    ecx,0xa
   140016410:	not    edi
   140016412:	mov    rdx,rbp
   140016415:	shr    rdx,cl
   140016418:	movsxd rax,edi
   14001641b:	inc    ecx
   14001641d:	and    edx,0x1
   140016420:	add    rdx,rax
   140016423:	movsx  edi,WORD PTR [r12+rdx*2+0x1708]
   14001642c:	test   edi,edi
   14001642e:	jns    0x14001648b
   140016430:	lea    eax,[rcx+0x1]
   140016433:	cmp    ebx,eax
   140016435:	jae    0x140016410
   140016437:	cmp    rsi,r14
   14001643a:	jb     0x140016450
   14001643c:	mov    edx,DWORD PTR [rsp+0x150]
   140016443:	test   dl,0x2
   140016446:	jne    0x140016790
   14001644c:	xor    eax,eax
   14001644e:	jmp    0x140016456
   140016450:	movzx  eax,BYTE PTR [rsi]
   140016453:	inc    rsi
   140016456:	mov    ecx,ebx
   140016458:	add    ebx,0x8
   14001645b:	shl    rax,cl
   14001645e:	or     rbp,rax
   140016461:	cmp    ebx,0xf
   140016464:	jb     0x1400163e0
   14001646a:	jmp    0x14001648b
   14001646c:	movzx  edx,BYTE PTR [rsi+0x1]
   140016470:	movzx  eax,BYTE PTR [rsi]
   140016473:	lea    ecx,[rbx+0x8]
   140016476:	shl    rdx,cl
   140016479:	mov    ecx,ebx
   14001647b:	add    rsi,0x2
   14001647f:	shl    rax,cl
   140016482:	or     rdx,rax
   140016485:	or     rbp,rdx
   140016488:	add    ebx,0x10
   14001648b:	mov    rax,rbp
   14001648e:	and    eax,0x3ff
   140016493:	movsx  eax,WORD PTR [r12+rax*2+0xf08]
   14001649c:	test   eax,eax
   14001649e:	js     0x1400164ac
   1400164a0:	mov    ecx,eax
   1400164a2:	sar    ecx,0x9
   1400164a5:	and    eax,0x1ff
   1400164aa:	jmp    0x1400164d0
   1400164ac:	mov    ecx,0xa
   1400164b1:	not    eax
   1400164b3:	mov    rdx,rbp
   1400164b6:	shr    rdx,cl
   1400164b9:	cdqe   
   1400164bb:	inc    ecx
   1400164bd:	and    edx,0x1
   1400164c0:	add    rdx,rax
   1400164c3:	movsx  eax,WORD PTR [r12+rdx*2+0x1708]
   1400164cc:	test   eax,eax
   1400164ce:	js     0x1400164b1
   1400164d0:	shr    rbp,cl
   1400164d3:	sub    ebx,ecx
   1400164d5:	lea    rcx,[rip+0xfffffffffffe9b24]        # 0x140000000
   1400164dc:	mov    r11d,DWORD PTR [rcx+rax*4+0x1aec0]
   1400164e4:	mov    r8d,DWORD PTR [rcx+rax*4+0x1ae40]
   1400164ec:	mov    DWORD PTR [rsp+0x24],r11d
   1400164f1:	mov    DWORD PTR [rsp+0x20],r8d
   1400164f6:	test   r11d,r11d
   1400164f9:	je     0x14001654b
   1400164fb:	cmp    ebx,r11d
   1400164fe:	jae    0x14001652f
   140016500:	cmp    rsi,r14
   140016503:	jb     0x140016519
   140016505:	mov    edx,DWORD PTR [rsp+0x150]
   14001650c:	test   dl,0x2
   14001650f:	jne    0x1400167a0
   140016515:	xor    eax,eax
   140016517:	jmp    0x14001651f
   140016519:	movzx  eax,BYTE PTR [rsi]
   14001651c:	inc    rsi
   14001651f:	mov    ecx,ebx
   140016521:	add    ebx,0x8
   140016524:	shl    rax,cl
   140016527:	or     rbp,rax
   14001652a:	cmp    ebx,r11d
   14001652d:	jb     0x140016500
   14001652f:	mov    ecx,r11d
   140016532:	mov    eax,0x1
   140016537:	sub    ebx,r11d
   14001653a:	shl    eax,cl
   14001653c:	dec    eax
   14001653e:	and    eax,ebp
   140016540:	shr    rbp,cl
   140016543:	add    r8d,eax
   140016546:	mov    DWORD PTR [rsp+0x20],r8d
   14001654b:	mov    r11,QWORD PTR [rsp+0x138]
   140016553:	mov    r10d,DWORD PTR [rsp+0x150]
   14001655b:	mov    r9,r13
   14001655e:	sub    r9,r11
   140016561:	mov    eax,r8d
   140016564:	mov    QWORD PTR [rsp+0x30],r9
   140016569:	cmp    rax,r9
   14001656c:	jbe    0x140016578
   14001656e:	test   r10b,0x4
   140016572:	jne    0x140016a04
   140016578:	mov    rdi,QWORD PTR [rsp+0x28]
   14001657d:	mov    rcx,r9
   140016580:	mov    edx,r15d
   140016583:	sub    rcx,rax
   140016586:	and    rcx,QWORD PTR [rsp+0x38]
   14001658b:	add    rcx,r11
   14001658e:	cmp    r13,rcx
   140016591:	mov    rax,rcx
   140016594:	cmova  rax,r13
   140016598:	add    rax,rdx
   14001659b:	cmp    rax,rdi
   14001659e:	jbe    0x1400165db
   1400165a0:	mov    eax,r15d
   1400165a3:	dec    r15d
   1400165a6:	test   eax,eax
   1400165a8:	je     0x1400160f6
   1400165ae:	cmp    r13,rdi
   1400165b1:	jae    0x1400167b0
   1400165b7:	mov    eax,r8d
   1400165ba:	mov    rcx,r9
   1400165bd:	inc    r13
   1400165c0:	sub    rcx,rax
   1400165c3:	and    rcx,QWORD PTR [rsp+0x38]
   1400165c8:	inc    r9
   1400165cb:	movzx  eax,BYTE PTR [rcx+r11*1]
   1400165d0:	mov    QWORD PTR [rsp+0x30],r9
   1400165d5:	mov    BYTE PTR [r13-0x1],al
   1400165d9:	jmp    0x1400165a0
   1400165db:	cmp    r15d,0x9
   1400165df:	jb     0x140016640
   1400165e1:	cmp    r15d,r8d
   1400165e4:	ja     0x140016640
   1400165e6:	mov    eax,0xfffffff8
   1400165eb:	and    rdx,rax
   1400165ee:	add    rdx,rcx
   1400165f1:	mov    eax,DWORD PTR [rcx]
   1400165f3:	add    rcx,0x8
   1400165f7:	add    r13,0x8
   1400165fb:	mov    DWORD PTR [r13-0x8],eax
   1400165ff:	mov    eax,DWORD PTR [rcx-0x4]
   140016602:	mov    DWORD PTR [r13-0x4],eax
   140016606:	cmp    rcx,rdx
   140016609:	jb     0x1400165f1
   14001660b:	and    r15d,0x7
   14001660f:	cmp    r15d,0x3
   140016613:	jae    0x140016640
   140016615:	test   r15d,r15d
   140016618:	je     0x1400160f6
   14001661e:	movzx  eax,BYTE PTR [rcx]
   140016621:	mov    BYTE PTR [r13+0x0],al
   140016625:	cmp    r15d,0x1
   140016629:	jbe    0x1400160f0
   14001662f:	jmp    0x1400160e8
   140016634:	nop    DWORD PTR [rax+0x0]
   140016638:	nop    DWORD PTR [rax+rax*1+0x0]
   140016640:	movzx  eax,BYTE PTR [rcx]
   140016643:	add    r15d,0xfffffffd
   140016647:	add    r13,0x3
   14001664b:	mov    BYTE PTR [r13-0x3],al
   14001664f:	movzx  eax,BYTE PTR [rcx+0x1]
   140016653:	lea    rcx,[rcx+0x3]
   140016657:	mov    BYTE PTR [r13-0x2],al
   14001665b:	movzx  eax,BYTE PTR [rcx-0x1]
   14001665f:	mov    BYTE PTR [r13-0x1],al
   140016663:	cmp    r15d,0x2
   140016667:	jg     0x140016640
   140016669:	test   r15d,r15d
   14001666c:	jle    0x1400160f6
   140016672:	movzx  eax,BYTE PTR [rcx]
   140016675:	mov    BYTE PTR [r13+0x0],al
   140016679:	cmp    r15d,0x1
   14001667d:	jle    0x1400160f0
   140016683:	jmp    0x1400160e8
   140016688:	mov    edx,DWORD PTR [rsp+0x150]
   14001668f:	mov    rdi,QWORD PTR [rsp+0x28]
   140016694:	jmp    0x140015845
   140016699:	mov    r14d,0x1
   14001669f:	mov    DWORD PTR [r12],0x3
   1400166a7:	jmp    0x140016817
   1400166ac:	mov    r14d,0x1
   1400166b2:	mov    DWORD PTR [r12],0x5
   1400166ba:	jmp    0x140016817
   1400166bf:	mov    r14d,0x1
   1400166c5:	mov    DWORD PTR [r12],0x6
   1400166cd:	jmp    0x140016817
   1400166d2:	mov    r14d,0x1
   1400166d8:	mov    DWORD PTR [r12],0x7
   1400166e0:	jmp    0x140016817
   1400166e5:	mov    r14d,0x1
   1400166eb:	mov    DWORD PTR [r12],0x33
   1400166f3:	jmp    0x140016817
   1400166f8:	mov    r14d,0x2
   1400166fe:	mov    DWORD PTR [r12],0x34
   140016706:	jmp    0x140016817
   14001670b:	mov    r14d,0x1
   140016711:	mov    DWORD PTR [r12],0xb
   140016719:	jmp    0x140016817
   14001671e:	mov    r14d,0x1
   140016724:	mov    DWORD PTR [r12],0xe
   14001672c:	jmp    0x140016817
   140016731:	mov    r14d,0x1
   140016737:	mov    DWORD PTR [r12],0x10
   14001673f:	jmp    0x140016817
   140016744:	mov    r14d,0x1
   14001674a:	mov    DWORD PTR [r12],0x12
   140016752:	jmp    0x140016817
   140016757:	mov    r14d,0x1
   14001675d:	mov    DWORD PTR [r12],0x17
   140016765:	jmp    0x140016817
   14001676a:	mov    r14d,0x2
   140016770:	mov    DWORD PTR [r12],0x18
   140016778:	jmp    0x140016817
   14001677d:	mov    r14d,0x1
   140016783:	mov    DWORD PTR [r12],0x19
   14001678b:	jmp    0x140016817
   140016790:	mov    r14d,0x1
   140016796:	mov    DWORD PTR [r12],0x1a
   14001679e:	jmp    0x140016817
   1400167a0:	mov    r14d,0x1
   1400167a6:	mov    DWORD PTR [r12],0x1b
   1400167ae:	jmp    0x140016817
   1400167b0:	mov    r11d,DWORD PTR [rsp+0x20]
   1400167b5:	mov    r14d,0x2
   1400167bb:	mov    DWORD PTR [r12],0x35
   1400167c3:	jmp    0x140016824
   1400167c5:	mov    edx,DWORD PTR [rsp+0x150]
   1400167cc:	test   dl,0x1
   1400167cf:	jne    0x140016a43
   1400167d5:	xor    r14d,r14d
   1400167d8:	mov    DWORD PTR [r12],0x22
   1400167e0:	jmp    0x140016817
   1400167e2:	test   dl,0x2
   1400167e5:	je     0x1400169c0
   1400167eb:	mov    r14d,0x1
   1400167f1:	mov    DWORD PTR [r12],0x26
   1400167f9:	jmp    0x140016817
   1400167fb:	mov    r14d,0x2
   140016801:	mov    DWORD PTR [r12],0x9
   140016809:	jmp    0x140016817
   14001680b:	mov    DWORD PTR [r12],0x27
   140016813:	or     r14,0xffffffffffffffff
   140016817:	mov    r11d,DWORD PTR [rsp+0x20]
   14001681c:	mov    r10d,DWORD PTR [rsp+0x150]
   140016824:	mov    eax,DWORD PTR [rsp+0x24]
   140016828:	sub    rsi,QWORD PTR [rsp+0x128]
   140016830:	mov    DWORD PTR [r12+0x20],r11d
   140016835:	mov    r11,QWORD PTR [rsp+0x140]
   14001683d:	mov    DWORD PTR [r12+0x28],eax
   140016842:	mov    rax,QWORD PTR [rsp+0x30]
   140016847:	mov    QWORD PTR [r12+0x40],rax
   14001684c:	mov    rax,QWORD PTR [rsp+0x130]
   140016854:	mov    QWORD PTR [r12+0x38],rbp
   140016859:	mov    rbp,QWORD PTR [rsp+0x120]
   140016861:	mov    DWORD PTR [r12+0x24],r15d
   140016866:	mov    r15,QWORD PTR [rsp+0xe0]
   14001686e:	mov    DWORD PTR [r12+0x4],ebx
   140016873:	mov    QWORD PTR [rax],rsi
   140016876:	mov    rax,QWORD PTR [rsp+0x148]
   14001687e:	sub    r13,r11
   140016881:	mov    QWORD PTR [rax],r13
   140016884:	test   r10b,0x9
   140016888:	je     0x1400169ac
   14001688e:	test   r14d,r14d
   140016891:	js     0x1400169ac
   140016897:	mov    edi,DWORD PTR [r12+0x1c]
   14001689c:	movabs rax,0x79baa6bb6398b6f7
   1400168a6:	mov    r8,r13
   1400168a9:	movzx  ecx,di
   1400168ac:	shr    edi,0x10
   1400168af:	mul    r13
   1400168b2:	mov    rax,r13
   1400168b5:	sub    rax,rdx
   1400168b8:	shr    rax,1
   1400168bb:	add    rax,rdx
   1400168be:	shr    rax,0xc
   1400168c2:	imul   rax,rax,0x15b0
   1400168c9:	sub    r8,rax
   1400168cc:	test   r13,r13
   1400168cf:	je     0x140016989
   1400168d5:	xor    edx,edx
   1400168d7:	cmp    r8,0x7
   1400168db:	jbe    0x14001693b
   1400168dd:	lea    r9d,[rdx+0x7]
   1400168e1:	movzx  eax,BYTE PTR [r11]
   1400168e5:	add    r9d,0x8
   1400168e9:	add    edx,0x8
   1400168ec:	add    ecx,eax
   1400168ee:	movzx  eax,BYTE PTR [r11+0x1]
   1400168f3:	add    r11,0x8
   1400168f7:	add    edi,ecx
   1400168f9:	add    ecx,eax
   1400168fb:	movzx  eax,BYTE PTR [r11-0x6]
   140016900:	add    edi,ecx
   140016902:	add    ecx,eax
   140016904:	movzx  eax,BYTE PTR [r11-0x5]
   140016909:	add    edi,ecx
   14001690b:	add    ecx,eax
   14001690d:	movzx  eax,BYTE PTR [r11-0x4]
   140016912:	add    edi,ecx
   140016914:	add    ecx,eax
   140016916:	movzx  eax,BYTE PTR [r11-0x3]
   14001691b:	add    edi,ecx
   14001691d:	add    ecx,eax
   14001691f:	movzx  eax,BYTE PTR [r11-0x2]
   140016924:	add    edi,ecx
   140016926:	add    ecx,eax
   140016928:	movzx  eax,BYTE PTR [r11-0x1]
   14001692d:	add    edi,ecx
   14001692f:	add    ecx,eax
   140016931:	mov    eax,r9d
   140016934:	add    edi,ecx
   140016936:	cmp    rax,r8
   140016939:	jb     0x1400168e1
   14001693b:	mov    eax,edx
   14001693d:	cmp    rax,r8
   140016940:	jae    0x140016956
   140016942:	movzx  eax,BYTE PTR [r11]
   140016946:	inc    edx
   140016948:	inc    r11
   14001694b:	add    ecx,eax
   14001694d:	mov    eax,edx
   14001694f:	add    edi,ecx
   140016951:	cmp    rax,r8
   140016954:	jb     0x140016942
   140016956:	mov    eax,0x80078071
   14001695b:	mul    ecx
   14001695d:	shr    edx,0xf
   140016960:	imul   eax,edx,0xffff000f
   140016966:	add    ecx,eax
   140016968:	mov    eax,0x80078071
   14001696d:	mul    edi
   14001696f:	shr    edx,0xf
   140016972:	imul   eax,edx,0xffff000f
   140016978:	add    edi,eax
   14001697a:	sub    r13,r8
   14001697d:	mov    r8d,0x15b0
   140016983:	jne    0x1400168d5
   140016989:	shl    edi,0x10
   14001698c:	add    edi,ecx
   14001698e:	mov    DWORD PTR [r12+0x1c],edi
   140016993:	test   r14d,r14d
   140016996:	jne    0x1400169ac
   140016998:	test   r10b,0x1
   14001699c:	je     0x1400169ac
   14001699e:	cmp    edi,DWORD PTR [r12+0x10]
   1400169a3:	mov    eax,0xfffffffe
   1400169a8:	cmovne r14d,eax
   1400169ac:	mov    eax,r14d
   1400169af:	add    rsp,0xe8
   1400169b6:	pop    r14
   1400169b8:	pop    r13
   1400169ba:	pop    r12
   1400169bc:	pop    rdi
   1400169bd:	pop    rsi
   1400169be:	pop    rbx
   1400169bf:	ret    
   1400169c0:	mov    DWORD PTR [r12],0x28
   1400169c8:	jmp    0x140016813
   1400169cd:	mov    DWORD PTR [r12],0xa
   1400169d5:	jmp    0x140016813
   1400169da:	mov    DWORD PTR [r12],0x23
   1400169e2:	jmp    0x140016813
   1400169e7:	mov    DWORD PTR [r12],0x11
   1400169ef:	jmp    0x140016813
   1400169f4:	mov    DWORD PTR [r12],0x15
   1400169fc:	jmp    0x140016813
   140016a01:	mov    r10d,edx
   140016a04:	mov    r11d,DWORD PTR [rsp+0x20]
   140016a09:	or     r14,0xffffffffffffffff
   140016a0d:	mov    DWORD PTR [r12],0x25
   140016a15:	jmp    0x140016824
   140016a1a:	mov    r10,QWORD PTR [rsp+0x128]
   140016a22:	cmp    r10,r14
   140016a25:	jae    0x140016a31
   140016a27:	movzx  eax,BYTE PTR [r10]
   140016a2b:	lea    rsi,[r10+0x1]
   140016a2f:	jmp    0x140016a38
   140016a31:	test   dl,0x2
   140016a34:	jne    0x140016a6d
   140016a36:	xor    eax,eax
   140016a38:	mov    ecx,ebx
   140016a3a:	shl    rax,cl
   140016a3d:	or     rbp,rax
   140016a40:	add    ebx,0x8
   140016a43:	mov    eax,ebx
   140016a45:	and    eax,0x7
   140016a48:	cmp    ebx,eax
   140016a4a:	jae    0x140016a59
   140016a4c:	cmp    rsi,r14
   140016a4f:	jae    0x140016a31
   140016a51:	movzx  eax,BYTE PTR [rsi]
   140016a54:	inc    rsi
   140016a57:	jmp    0x140016a38
   140016a59:	mov    ecx,ebx
   140016a5b:	mov    eax,ebx
   140016a5d:	and    cl,0x7
   140016a60:	and    eax,0x7
   140016a63:	shr    rbp,cl
   140016a66:	sub    ebx,eax
   140016a68:	xor    r15d,r15d
   140016a6b:	jmp    0x140016ac7
   140016a6d:	mov    r14d,0x1
   140016a73:	mov    DWORD PTR [r12],0x20
   140016a7b:	jmp    0x140016817
   140016a80:	mov    r10,QWORD PTR [rsp+0x128]
   140016a88:	cmp    r10,r14
   140016a8b:	jae    0x140016adf
   140016a8d:	movzx  eax,BYTE PTR [r10]
   140016a91:	lea    rsi,[r10+0x1]
   140016a95:	jmp    0x140016aee
   140016a97:	mov    r10,QWORD PTR [rsp+0x128]
   140016a9f:	cmp    r10,r14
   140016aa2:	jae    0x140016aae
   140016aa4:	movzx  ecx,BYTE PTR [r10]
   140016aa8:	lea    rsi,[r10+0x1]
   140016aac:	jmp    0x140016ab5
   140016aae:	test   dl,0x2
   140016ab1:	jne    0x140016b2f
   140016ab3:	xor    ecx,ecx
   140016ab5:	mov    eax,DWORD PTR [r12+0x10]
   140016aba:	shl    eax,0x8
   140016abd:	or     eax,ecx
   140016abf:	inc    r15d
   140016ac2:	mov    DWORD PTR [r12+0x10],eax
   140016ac7:	cmp    r15d,0x4
   140016acb:	jae    0x1400167d5
   140016ad1:	test   ebx,ebx
   140016ad3:	je     0x140016b0f
   140016ad5:	cmp    ebx,0x8
   140016ad8:	jae    0x140016afe
   140016ada:	cmp    rsi,r14
   140016add:	jb     0x140016ae8
   140016adf:	test   dl,0x2
   140016ae2:	jne    0x140016b1c
   140016ae4:	xor    eax,eax
   140016ae6:	jmp    0x140016aee
   140016ae8:	movzx  eax,BYTE PTR [rsi]
   140016aeb:	inc    rsi
   140016aee:	mov    ecx,ebx
   140016af0:	add    ebx,0x8
   140016af3:	shl    rax,cl
   140016af6:	or     rbp,rax
   140016af9:	cmp    ebx,0x8
   140016afc:	jb     0x140016ada
   140016afe:	mov    eax,0xfffffff8
   140016b03:	movzx  ecx,bpl
   140016b07:	shr    rbp,0x8
   140016b0b:	add    ebx,eax
   140016b0d:	jmp    0x140016ab5
   140016b0f:	cmp    rsi,r14
   140016b12:	jae    0x140016aae
   140016b14:	movzx  ecx,BYTE PTR [rsi]
   140016b17:	inc    rsi
   140016b1a:	jmp    0x140016ab5
   140016b1c:	mov    r14d,0x1
   140016b22:	mov    DWORD PTR [r12],0x29
   140016b2a:	jmp    0x140016817
   140016b2f:	mov    r14d,0x1
   140016b35:	mov    DWORD PTR [r12],0x2a
   140016b3d:	jmp    0x140016817
   140016b42:	xor    eax,eax
   140016b44:	mov    QWORD PTR [rbx],rax
   140016b47:	mov    QWORD PTR [r8],rax
   140016b4a:	mov    eax,0xfffffffd
   140016b4f:	add    rsp,0xe8
   140016b56:	pop    r14
   140016b58:	pop    r13
   140016b5a:	pop    r12
   140016b5c:	pop    rdi
   140016b5d:	pop    rsi
   140016b5e:	pop    rbx
   140016b5f:	ret    
   140016b60:	xor    BYTE PTR [rbp+0x1],dl
   140016b63:	add    BYTE PTR [rsi-0x40fffeab],al
   140016b69:	push   rbp
   140016b6a:	add    DWORD PTR [rax],eax
   140016b6c:	xchg   ecx,eax
   140016b6d:	push   rsi
   140016b6e:	add    DWORD PTR [rax],eax
   140016b70:	adc    ebp,DWORD PTR [rax+0x1]
   140016b73:	add    BYTE PTR [rsi-0x34fffeaa],ch
   140016b79:	push   rsi
   140016b7a:	add    DWORD PTR [rax],eax
   140016b7c:	out    dx,al
   140016b7d:	push   rsi
   140016b7e:	add    DWORD PTR [rax],eax
   140016b80:	adc    ebp,DWORD PTR [rax+0x1]
   140016b83:	add    BYTE PTR [rbp+0x58],al
   140016b86:	add    DWORD PTR [rax],eax
   140016b88:	int    0x69
   140016b8a:	add    DWORD PTR [rax],eax
   140016b8c:	cmp    dl,BYTE PTR [rdi+0x1]
   140016b8f:	add    BYTE PTR [rbx],dl
   140016b91:	push   0x68130001
   140016b96:	add    DWORD PTR [rax],eax
   140016b98:	pop    rsi
   140016b99:	push   rdi
   140016b9a:	add    DWORD PTR [rax],eax
   140016b9c:	adc    ebp,DWORD PTR [rax+0x1]
   140016b9f:	add    BYTE PTR [rdx-0x18fffea9],al
   140016ba5:	imul   eax,DWORD PTR [rcx],0x1579f00
   140016bab:	add    BYTE PTR [rbx],dl
   140016bad:	push   0x68130001
   140016bb2:	add    DWORD PTR [rax],eax
   140016bb4:	hlt    
   140016bb5:	imul   eax,DWORD PTR [rcx],0x1681300
   140016bbb:	add    BYTE PTR [rdi+rdx*2+0x63250001],bh
   140016bc2:	add    DWORD PTR [rax],eax
   140016bc4:	fst    DWORD PTR [rdi+0x1]
   140016bc7:	add    dh,dh
   140016bc9:	push   rdi
   140016bca:	add    DWORD PTR [rax],eax
   140016bcc:	adc    ebx,DWORD PTR [rax+0x1]
   140016bcf:	add    BYTE PTR [rbx],dl
   140016bd1:	push   0x68130001
   140016bd6:	add    DWORD PTR [rax],eax
   140016bd8:	adc    ebp,DWORD PTR [rax+0x1]
   140016bdb:	add    BYTE PTR [rbx],dl
   140016bdd:	push   0x6a1a0001
   140016be2:	add    DWORD PTR [rax],eax
   140016be4:	adc    ebp,DWORD PTR [rax+0x1]
   140016be7:	add    ch,dl
   140016be9:	add    DWORD PTR [eax],eax
   140016bec:	fisubr DWORD PTR [rcx+0x1]
   140016bef:	add    BYTE PTR [rbx+0x56],bh
   140016bf2:	add    DWORD PTR [rax],eax
   140016bf4:	add    DWORD PTR [rdx+0x1],ebp
   140016bf7:	add    BYTE PTR [rsi+0x58],cl
   140016bfa:	add    DWORD PTR [rax],eax
   140016bfc:	or     ebp,DWORD PTR [rax+0x1]
   140016bff:	add    al,al
   140016c01:	imul   eax,DWORD PTR [rcx],0x16a8000
   140016c07:	add    BYTE PTR [rdi+0x1300016a],dl
   140016c0d:	push   0x68130001
   140016c12:	add    DWORD PTR [rax],eax
   140016c14:	adc    ebp,DWORD PTR [rax+0x1]
   140016c17:	add    BYTE PTR [rbx],dl
   140016c19:	push   0x68130001
   140016c1e:	add    DWORD PTR [rax],eax
   140016c20:	adc    ebp,DWORD PTR [rax+0x1]
   140016c23:	add    BYTE PTR [rbx],dl
   140016c25:	push   0x68130001
   140016c2a:	add    DWORD PTR [rax],eax
   140016c2c:	sbb    eax,0x62000157
   140016c31:	pop    rdx
   140016c32:	add    DWORD PTR [rax],eax
   140016c34:	xor    BYTE PTR [rax+0x1],bl
   140016c37:	add    ah,cl
   140016c39:	int3   
   140016c3a:	int3   
   140016c3b:	int3   
   140016c3c:	int3   
   140016c3d:	int3   
   140016c3e:	int3   
   140016c3f:	int3   
   140016c40:	mov    QWORD PTR [rsp+0x20],r9
   140016c45:	mov    QWORD PTR [rsp+0x18],r8
   140016c4a:	mov    QWORD PTR [rsp+0x10],rdx
   140016c4f:	mov    QWORD PTR [rsp+0x8],rcx
   140016c54:	push   rbx
   140016c55:	push   rbp
   140016c56:	push   rsi
   140016c57:	push   rdi
   140016c58:	push   r12
   140016c5a:	push   r14
   140016c5c:	mov    eax,0x2b68
   140016c61:	call   0x140017430
   140016c66:	sub    rsp,rax
   140016c69:	mov    rbp,rcx
   140016c6c:	mov    ecx,0x8000
   140016c71:	mov    rdi,rdx
   140016c74:	xor    esi,esi
   140016c76:	call   QWORD PTR [rip+0x267c]        # 0x1400192f8
   140016c7c:	mov    r14d,esi
   140016c7f:	mov    r12,rax
   140016c82:	mov    ebx,esi
   140016c84:	test   rax,rax
   140016c87:	jne    0x140016c9c
   140016c89:	or     eax,0xffffffff
   140016c8c:	add    rsp,0x2b68
   140016c93:	pop    r14
   140016c95:	pop    r12
   140016c97:	pop    rdi
   140016c98:	pop    rsi
   140016c99:	pop    rbp
   140016c9a:	pop    rbx
   140016c9b:	ret    
   140016c9c:	mov    QWORD PTR [rsp+0x2b60],r13
   140016ca4:	mov    r13d,DWORD PTR [rsp+0x2bc0]
   140016cac:	mov    DWORD PTR [rsp+0x50],esi
   140016cb0:	and    r13d,0xfffffff9
   140016cb4:	mov    QWORD PTR [rsp+0x2b58],r15
   140016cbc:	nop    DWORD PTR [rax+0x0]
   140016cc0:	mov    rax,QWORD PTR [rdi]
   140016cc3:	mov    DWORD PTR [rsp+0x30],r13d
   140016cc8:	lea    r15,[rbx+r12*1]
   140016ccc:	sub    rax,r14
   140016ccf:	lea    rdx,[r14+rbp*1]
   140016cd3:	lea    r8,[rsp+0x48]
   140016cd8:	mov    QWORD PTR [rsp+0x48],rax
   140016cdd:	mov    eax,0x8000
   140016ce2:	lea    rcx,[rsp+0x50]
   140016ce7:	sub    rax,rbx
   140016cea:	mov    r9,r12
   140016ced:	mov    QWORD PTR [rsp+0x40],rax
   140016cf2:	lea    rax,[rsp+0x40]
   140016cf7:	mov    QWORD PTR [rsp+0x28],rax
   140016cfc:	mov    QWORD PTR [rsp+0x20],r15
   140016d01:	call   0x140015440
   140016d06:	mov    rdi,QWORD PTR [rsp+0x40]
   140016d0b:	add    r14,QWORD PTR [rsp+0x48]
   140016d10:	mov    ebp,eax
   140016d12:	test   rdi,rdi
   140016d15:	je     0x140016d2f
   140016d17:	mov    r8,QWORD PTR [rsp+0x2bb8]
   140016d1f:	mov    edx,edi
   140016d21:	mov    rcx,r15
   140016d24:	call   QWORD PTR [rsp+0x2bb0]
   140016d2b:	test   eax,eax
   140016d2d:	je     0x140016d58
   140016d2f:	cmp    ebp,0x2
   140016d32:	jne    0x140016d52
   140016d34:	mov    rbp,QWORD PTR [rsp+0x2ba0]
   140016d3c:	add    rbx,rdi
   140016d3f:	mov    rdi,QWORD PTR [rsp+0x2ba8]
   140016d47:	and    ebx,0x7fff
   140016d4d:	jmp    0x140016cc0
   140016d52:	test   ebp,ebp
   140016d54:	sete   sil
   140016d58:	mov    rcx,r12
   140016d5b:	call   QWORD PTR [rip+0x258f]        # 0x1400192f0
   140016d61:	mov    rax,QWORD PTR [rsp+0x2ba8]
   140016d69:	mov    r15,QWORD PTR [rsp+0x2b58]
   140016d71:	mov    r13,QWORD PTR [rsp+0x2b60]
   140016d79:	mov    QWORD PTR [rax],r14
   140016d7c:	mov    eax,esi
   140016d7e:	add    rsp,0x2b68
   140016d85:	pop    r14
   140016d87:	pop    r12
   140016d89:	pop    rdi
   140016d8a:	pop    rsi
   140016d8b:	pop    rbp
   140016d8c:	pop    rbx
   140016d8d:	ret    
   140016d8e:	int3   
   140016d8f:	int3   
   140016d90:	mov    QWORD PTR [rsp+0x18],rbx
   140016d95:	push   rbp
   140016d96:	push   rsi
   140016d97:	push   rdi
   140016d98:	push   r12
   140016d9a:	push   r13
   140016d9c:	push   r14
   140016d9e:	push   r15
   140016da0:	mov    eax,0x2b40
   140016da5:	call   0x140017430
   140016daa:	sub    rsp,rax
   140016dad:	xor    r13d,r13d
   140016db0:	mov    ebp,r9d
   140016db3:	mov    rdi,r8
   140016db6:	and    ebp,0xfffffffd
   140016db9:	mov    r15,rdx
   140016dbc:	mov    r12,rcx
   140016dbf:	mov    ebx,r13d
   140016dc2:	mov    esi,r13d
   140016dc5:	mov    r14d,r13d
   140016dc8:	or     ebp,0x4
   140016dcb:	mov    QWORD PTR [r8],r13
   140016dce:	mov    DWORD PTR [rsp+0x40],r13d
   140016dd3:	mov    rcx,QWORD PTR [rdi]
   140016dd6:	mov    rax,r15
   140016dd9:	sub    rax,rsi
   140016ddc:	mov    QWORD PTR [rsp+0x2b80],rax
   140016de4:	mov    rax,r14
   140016de7:	sub    rax,rcx
   140016dea:	mov    QWORD PTR [rsp+0x2b88],rax
   140016df2:	lea    rax,[rcx+rbx*1]
   140016df6:	test   rbx,rbx
   140016df9:	jne    0x140016dfe
   140016dfb:	mov    rax,r13
   140016dfe:	lea    rcx,[rsp+0x2b88]
   140016e06:	mov    DWORD PTR [rsp+0x30],ebp
   140016e0a:	lea    rdx,[rsi+r12*1]
   140016e0e:	mov    QWORD PTR [rsp+0x28],rcx
   140016e13:	lea    r8,[rsp+0x2b80]
   140016e1b:	lea    rcx,[rsp+0x40]
   140016e20:	mov    r9,rbx
   140016e23:	mov    QWORD PTR [rsp+0x20],rax
   140016e28:	call   0x140015440
   140016e2d:	test   eax,eax
   140016e2f:	js     0x140016e7e
   140016e31:	cmp    eax,0x1
   140016e34:	je     0x140016e7e
   140016e36:	mov    rcx,QWORD PTR [rsp+0x2b88]
   140016e3e:	add    rsi,QWORD PTR [rsp+0x2b80]
   140016e46:	add    QWORD PTR [rdi],rcx
   140016e49:	test   eax,eax
   140016e4b:	je     0x140016e79
   140016e4d:	lea    rax,[r14+r14*1]
   140016e51:	mov    ecx,0x80
   140016e56:	cmp    rax,rcx
   140016e59:	mov    r14,rax
   140016e5c:	cmovb  r14,rcx
   140016e60:	mov    rcx,rbx
   140016e63:	mov    rdx,r14
   140016e66:	call   QWORD PTR [rip+0x2494]        # 0x140019300
   140016e6c:	test   rax,rax
   140016e6f:	je     0x140016e7e
   140016e71:	mov    rbx,rax
   140016e74:	jmp    0x140016dd3
   140016e79:	mov    rax,rbx
   140016e7c:	jmp    0x140016e8c
   140016e7e:	mov    rcx,rbx
   140016e81:	call   QWORD PTR [rip+0x2469]        # 0x1400192f0
   140016e87:	xor    eax,eax
   140016e89:	mov    QWORD PTR [rdi],r13
   140016e8c:	mov    rbx,QWORD PTR [rsp+0x2b90]
   140016e94:	add    rsp,0x2b40
   140016e9b:	pop    r15
   140016e9d:	pop    r14
   140016e9f:	pop    r13
   140016ea1:	pop    r12
   140016ea3:	pop    rdi
   140016ea4:	pop    rsi
   140016ea5:	pop    rbp
   140016ea6:	ret    
   140016ea7:	int3   
   140016ea8:	int3   
   140016ea9:	int3   
   140016eaa:	int3   
   140016eab:	int3   
   140016eac:	int3   
   140016ead:	int3   
   140016eae:	int3   
   140016eaf:	int3   
   140016eb0:	mov    QWORD PTR [rsp+0x20],r9
   140016eb5:	mov    QWORD PTR [rsp+0x10],rdx
   140016eba:	mov    eax,0x2b48
   140016ebf:	call   0x140017430
   140016ec4:	sub    rsp,rax
   140016ec7:	mov    eax,DWORD PTR [rsp+0x2b70]
   140016ece:	mov    rdx,r8
   140016ed1:	mov    r9,rcx
   140016ed4:	and    eax,0xfffffffd
   140016ed7:	lea    r8,[rsp+0x2b68]
   140016edf:	mov    DWORD PTR [rsp+0x40],0x0
   140016ee7:	or     eax,0x4
   140016eea:	mov    DWORD PTR [rsp+0x30],eax
   140016eee:	lea    rax,[rsp+0x2b58]
   140016ef6:	mov    QWORD PTR [rsp+0x28],rax
   140016efb:	mov    QWORD PTR [rsp+0x20],rcx
   140016f00:	lea    rcx,[rsp+0x40]
   140016f05:	call   0x140015440
   140016f0a:	mov    rcx,QWORD PTR [rsp+0x2b58]
   140016f12:	or     rdx,0xffffffffffffffff
   140016f16:	test   eax,eax
   140016f18:	cmovne rcx,rdx
   140016f1c:	mov    rax,rcx
   140016f1f:	add    rsp,0x2b48
   140016f26:	ret    
   140016f27:	int3   
   140016f28:	int3   
   140016f29:	int3   
   140016f2a:	int3   
   140016f2b:	int3   
   140016f2c:	int3   
   140016f2d:	int3   
   140016f2e:	int3   
   140016f2f:	int3   
   140016f30:	rex.W jmp QWORD PTR [rip+0x2411]        # 0x140019348
   140016f37:	int3   
   140016f38:	jmp    QWORD PTR [rip+0x20c2]        # 0x140019000
   140016f3e:	jmp    QWORD PTR [rip+0x20c4]        # 0x140019008
   140016f44:	jmp    QWORD PTR [rip+0x20c6]        # 0x140019010
   140016f4a:	jmp    QWORD PTR [rip+0x20c8]        # 0x140019018
   140016f50:	jmp    QWORD PTR [rip+0x2292]        # 0x1400191e8
   140016f56:	jmp    QWORD PTR [rip+0x226c]        # 0x1400191c8
   140016f5c:	jmp    QWORD PTR [rip+0x226e]        # 0x1400191d0
   140016f62:	int3   
   140016f63:	int3   
   140016f64:	jmp    0x140017168
   140016f69:	int3   
   140016f6a:	jmp    QWORD PTR [rip+0x2268]        # 0x1400191d8
   140016f70:	jmp    QWORD PTR [rip+0x226a]        # 0x1400191e0
   140016f76:	jmp    QWORD PTR [rip+0x2274]        # 0x1400191f0
   140016f7c:	mov    QWORD PTR [rcx],rdx
   140016f7f:	mov    QWORD PTR [rcx+0x8],r8
   140016f83:	mov    rax,rcx
   140016f86:	ret    
   140016f87:	int3   
   140016f88:	sub    rsp,0x28
   140016f8c:	mov    rcx,QWORD PTR [rcx+0x8]
   140016f90:	mov    rax,QWORD PTR [rcx]
   140016f93:	call   QWORD PTR [rax+0x10]
   140016f96:	test   rax,rax
   140016f99:	je     0x140016fa9
   140016f9b:	mov    r8,QWORD PTR [rax]
   140016f9e:	mov    edx,0x1
   140016fa3:	mov    rcx,rax
   140016fa6:	call   QWORD PTR [r8]
   140016fa9:	add    rsp,0x28
   140016fad:	ret    
   140016fae:	int3   
   140016faf:	int3   
   140016fb0:	rex push rbx
   140016fb2:	sub    rsp,0x20
   140016fb6:	jmp    0x140016fe7
   140016fb8:	mov    rax,QWORD PTR [rbx]
   140016fbb:	mov    rcx,QWORD PTR [rbx+0x8]
   140016fbf:	mov    QWORD PTR [rip+0xa6da],rax        # 0x1400216a0
   140016fc6:	mov    rax,QWORD PTR [rcx]
   140016fc9:	call   QWORD PTR [rax+0x10]
   140016fcc:	test   rax,rax
   140016fcf:	je     0x140016fdf
   140016fd1:	mov    r8,QWORD PTR [rax]
   140016fd4:	mov    edx,0x1
   140016fd9:	mov    rcx,rax
   140016fdc:	call   QWORD PTR [r8]
   140016fdf:	mov    rcx,rbx
   140016fe2:	call   0x14001716e
   140016fe7:	mov    rbx,QWORD PTR [rip+0xa6b2]        # 0x1400216a0
   140016fee:	test   rbx,rbx
   140016ff1:	jne    0x140016fb8
   140016ff3:	add    rsp,0x20
   140016ff7:	pop    rbx
   140016ff8:	ret    
   140016ff9:	int3   
   140016ffa:	int3   
   140016ffb:	int3   
   140016ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140017001:	push   rdi
   140017002:	sub    rsp,0x20
   140017006:	mov    rbx,rcx
   140017009:	mov    rcx,QWORD PTR [rcx+0x8]
   14001700d:	mov    edi,edx
   14001700f:	mov    rax,QWORD PTR [rcx]
   140017012:	call   QWORD PTR [rax+0x10]
   140017015:	test   rax,rax
   140017018:	je     0x140017028
   14001701a:	mov    r8,QWORD PTR [rax]
   14001701d:	mov    edx,0x1
   140017022:	mov    rcx,rax
   140017025:	call   QWORD PTR [r8]
   140017028:	test   dil,0x1
   14001702c:	je     0x140017036
   14001702e:	mov    rcx,rbx
   140017031:	call   0x14001716e
   140017036:	mov    rax,rbx
   140017039:	mov    rbx,QWORD PTR [rsp+0x30]
   14001703e:	add    rsp,0x20
   140017042:	pop    rdi
   140017043:	ret    
   140017044:	rex push rbx
   140017046:	sub    rsp,0x20
   14001704a:	mov    rbx,rcx
   14001704d:	mov    ecx,0x10
   140017052:	call   0x140017168
   140017057:	test   rax,rax
   14001705a:	je     0x14001706a
   14001705c:	mov    rdx,QWORD PTR [rip+0xa63d]        # 0x1400216a0
   140017063:	mov    QWORD PTR [rax+0x8],rbx
   140017067:	mov    QWORD PTR [rax],rdx
   14001706a:	mov    QWORD PTR [rip+0xa62f],rax        # 0x1400216a0
   140017071:	add    rsp,0x20
   140017075:	pop    rbx
   140017076:	ret    
   140017077:	int3   
   140017078:	jmp    QWORD PTR [rip+0x1fda]        # 0x140019058
   14001707e:	jmp    QWORD PTR [rip+0x1fdc]        # 0x140019060
   140017084:	jmp    QWORD PTR [rip+0x1fde]        # 0x140019068
   14001708a:	jmp    QWORD PTR [rip+0x1fe0]        # 0x140019070
   140017090:	jmp    QWORD PTR [rip+0x1fe2]        # 0x140019078
   140017096:	jmp    QWORD PTR [rip+0x1fe4]        # 0x140019080
   14001709c:	jmp    QWORD PTR [rip+0x1fe6]        # 0x140019088
   1400170a2:	jmp    QWORD PTR [rip+0x1fe8]        # 0x140019090
   1400170a8:	jmp    QWORD PTR [rip+0x1fea]        # 0x140019098
   1400170ae:	jmp    QWORD PTR [rip+0x1fec]        # 0x1400190a0
   1400170b4:	jmp    QWORD PTR [rip+0x1fee]        # 0x1400190a8
   1400170ba:	jmp    QWORD PTR [rip+0x1ff0]        # 0x1400190b0
   1400170c0:	jmp    QWORD PTR [rip+0x1ff2]        # 0x1400190b8
   1400170c6:	jmp    QWORD PTR [rip+0x1ff4]        # 0x1400190c0
   1400170cc:	jmp    QWORD PTR [rip+0x1ff6]        # 0x1400190c8
   1400170d2:	jmp    QWORD PTR [rip+0x1ff8]        # 0x1400190d0
   1400170d8:	jmp    QWORD PTR [rip+0x1ffa]        # 0x1400190d8
   1400170de:	jmp    QWORD PTR [rip+0x1ffc]        # 0x1400190e0
   1400170e4:	jmp    QWORD PTR [rip+0x1ffe]        # 0x1400190e8
   1400170ea:	jmp    QWORD PTR [rip+0x2000]        # 0x1400190f0
   1400170f0:	jmp    QWORD PTR [rip+0x2002]        # 0x1400190f8
   1400170f6:	jmp    QWORD PTR [rip+0x2004]        # 0x140019100
   1400170fc:	jmp    QWORD PTR [rip+0x2006]        # 0x140019108
   140017102:	jmp    QWORD PTR [rip+0x2008]        # 0x140019110
   140017108:	jmp    QWORD PTR [rip+0x200a]        # 0x140019118
   14001710e:	jmp    QWORD PTR [rip+0x200c]        # 0x140019120
   140017114:	jmp    QWORD PTR [rip+0x200e]        # 0x140019128
   14001711a:	jmp    QWORD PTR [rip+0x2010]        # 0x140019130
   140017120:	jmp    QWORD PTR [rip+0x2012]        # 0x140019138
   140017126:	jmp    QWORD PTR [rip+0x2014]        # 0x140019140
   14001712c:	jmp    QWORD PTR [rip+0x2016]        # 0x140019148
   140017132:	jmp    QWORD PTR [rip+0x2018]        # 0x140019150
   140017138:	jmp    QWORD PTR [rip+0x201a]        # 0x140019158
   14001713e:	jmp    QWORD PTR [rip+0x201c]        # 0x140019160
   140017144:	jmp    QWORD PTR [rip+0x201e]        # 0x140019168
   14001714a:	jmp    QWORD PTR [rip+0x2020]        # 0x140019170
   140017150:	jmp    QWORD PTR [rip+0x2022]        # 0x140019178
   140017156:	jmp    QWORD PTR [rip+0x2024]        # 0x140019180
   14001715c:	jmp    QWORD PTR [rip+0x2026]        # 0x140019188
   140017162:	jmp    QWORD PTR [rip+0x22b0]        # 0x140019418
   140017168:	jmp    QWORD PTR [rip+0x22a2]        # 0x140019410
   14001716e:	jmp    QWORD PTR [rip+0x2294]        # 0x140019408
   140017174:	rex push rbx
   140017176:	sub    rsp,0x20
   14001717a:	cmp    QWORD PTR [rip+0xa586],0x0        # 0x140021708
   140017182:	jne    0x1400171ba
   140017184:	mov    edx,0x8
   140017189:	lea    ecx,[rdx+0x18]
   14001718c:	call   QWORD PTR [rip+0x21ce]        # 0x140019360
   140017192:	mov    rcx,rax
   140017195:	mov    rbx,rax
   140017198:	call   QWORD PTR [rip+0x1ea2]        # 0x140019040
   14001719e:	mov    QWORD PTR [rip+0xa563],rax        # 0x140021708
   1400171a5:	mov    QWORD PTR [rip+0xa554],rax        # 0x140021700
   1400171ac:	test   rbx,rbx
   1400171af:	jne    0x1400171b6
   1400171b1:	lea    eax,[rbx+0x18]
   1400171b4:	jmp    0x1400171bc
   1400171b6:	and    QWORD PTR [rbx],0x0
   1400171ba:	xor    eax,eax
   1400171bc:	add    rsp,0x20
   1400171c0:	pop    rbx
   1400171c1:	ret    
   1400171c2:	int3   
   1400171c3:	int3   
   1400171c4:	rex push rbx
   1400171c6:	sub    rsp,0x20
   1400171ca:	mov    rbx,rcx
   1400171cd:	mov    rcx,QWORD PTR [rip+0xa534]        # 0x140021708
   1400171d4:	call   QWORD PTR [rip+0x1e5e]        # 0x140019038
   1400171da:	mov    QWORD PTR [rsp+0x38],rax
   1400171df:	cmp    rax,0xffffffffffffffff
   1400171e3:	jne    0x1400171f0
   1400171e5:	mov    rcx,rbx
   1400171e8:	call   QWORD PTR [rip+0x218a]        # 0x140019378
   1400171ee:	jmp    0x14001726e
   1400171f0:	mov    ecx,0x8
   1400171f5:	call   0x14001778e
   1400171fa:	nop
   1400171fb:	mov    rcx,QWORD PTR [rip+0xa506]        # 0x140021708
   140017202:	call   QWORD PTR [rip+0x1e30]        # 0x140019038
   140017208:	mov    QWORD PTR [rsp+0x38],rax
   14001720d:	mov    rcx,QWORD PTR [rip+0xa4ec]        # 0x140021700
   140017214:	call   QWORD PTR [rip+0x1e1e]        # 0x140019038
   14001721a:	mov    QWORD PTR [rsp+0x40],rax
   14001721f:	mov    rcx,rbx
   140017222:	call   QWORD PTR [rip+0x1e18]        # 0x140019040
   140017228:	mov    rcx,rax
   14001722b:	lea    r8,[rsp+0x40]
   140017230:	lea    rdx,[rsp+0x38]
   140017235:	call   0x1400177a0
   14001723a:	mov    rbx,rax
   14001723d:	mov    rcx,QWORD PTR [rsp+0x38]
   140017242:	call   QWORD PTR [rip+0x1df8]        # 0x140019040
   140017248:	mov    QWORD PTR [rip+0xa4b9],rax        # 0x140021708
   14001724f:	mov    rcx,QWORD PTR [rsp+0x40]
   140017254:	call   QWORD PTR [rip+0x1de6]        # 0x140019040
   14001725a:	mov    QWORD PTR [rip+0xa49f],rax        # 0x140021700
   140017261:	mov    ecx,0x8
   140017266:	call   0x140017794
   14001726b:	mov    rax,rbx
   14001726e:	add    rsp,0x20
   140017272:	pop    rbx
   140017273:	ret    
   140017274:	sub    rsp,0x28
   140017278:	call   0x1400171c4
   14001727d:	neg    rax
   140017280:	sbb    eax,eax
   140017282:	neg    eax
   140017284:	dec    eax
   140017286:	add    rsp,0x28
   14001728a:	ret    
   14001728b:	int3   
   14001728c:	jmp    QWORD PTR [rip+0x216e]        # 0x140019400
   140017292:	jmp    QWORD PTR [rip+0x1fa8]        # 0x140019240
   140017298:	jmp    QWORD PTR [rip+0x1f7a]        # 0x140019218
   14001729e:	jmp    QWORD PTR [rip+0x1f5c]        # 0x140019200
   1400172a4:	jmp    QWORD PTR [rip+0x1f5e]        # 0x140019208
   1400172aa:	jmp    QWORD PTR [rip+0x1f60]        # 0x140019210
   1400172b0:	jmp    QWORD PTR [rip+0x2172]        # 0x140019428
   1400172b6:	jmp    QWORD PTR [rip+0x1f64]        # 0x140019220
   1400172bc:	jmp    QWORD PTR [rip+0x1f66]        # 0x140019228
   1400172c2:	jmp    QWORD PTR [rip+0x1f68]        # 0x140019230
   1400172c8:	jmp    QWORD PTR [rip+0x1f6a]        # 0x140019238
   1400172ce:	jmp    QWORD PTR [rip+0x214c]        # 0x140019420
   1400172d4:	jmp    QWORD PTR [rip+0x1f6e]        # 0x140019248
   1400172da:	jmp    QWORD PTR [rip+0x1f70]        # 0x140019250
   1400172e0:	jmp    QWORD PTR [rip+0x1f72]        # 0x140019258
   1400172e6:	jmp    QWORD PTR [rip+0x1f74]        # 0x140019260
   1400172ec:	jmp    QWORD PTR [rip+0x1f76]        # 0x140019268
   1400172f2:	jmp    QWORD PTR [rip+0x1f78]        # 0x140019270
   1400172f8:	jmp    QWORD PTR [rip+0x1f7a]        # 0x140019278
   1400172fe:	jmp    QWORD PTR [rip+0x1f7c]        # 0x140019280
   140017304:	jmp    QWORD PTR [rip+0x1f7e]        # 0x140019288
   14001730a:	jmp    QWORD PTR [rip+0x1f80]        # 0x140019290
   140017310:	jmp    QWORD PTR [rip+0x1f82]        # 0x140019298
   140017316:	jmp    QWORD PTR [rip+0x1f84]        # 0x1400192a0
   14001731c:	jmp    QWORD PTR [rip+0x1f86]        # 0x1400192a8
   140017322:	jmp    QWORD PTR [rip+0x1f88]        # 0x1400192b0
   140017328:	jmp    QWORD PTR [rip+0x1f8a]        # 0x1400192b8
   14001732e:	jmp    QWORD PTR [rip+0x1f8c]        # 0x1400192c0
   140017334:	jmp    QWORD PTR [rip+0x1f8e]        # 0x1400192c8
   14001733a:	jmp    QWORD PTR [rip+0x1f90]        # 0x1400192d0
   140017340:	jmp    QWORD PTR [rip+0x1f92]        # 0x1400192d8
   140017346:	jmp    QWORD PTR [rip+0x1f94]        # 0x1400192e0
   14001734c:	jmp    QWORD PTR [rip+0x1f96]        # 0x1400192e8
   140017352:	int3   
   140017353:	int3   
   140017354:	lea    rax,[rip+0x4b85]        # 0x14001bee0
   14001735b:	mov    QWORD PTR [rcx],rax
   14001735e:	mov    rax,rcx
   140017361:	ret    
   140017362:	int3   
   140017363:	int3   
   140017364:	mov    rax,rcx
   140017367:	ret    
   140017368:	mov    QWORD PTR [rsp+0x8],rbx
   14001736d:	mov    QWORD PTR [rsp+0x10],rsi
   140017372:	push   rdi
   140017373:	sub    rsp,0x20
   140017377:	mov    esi,edx
   140017379:	mov    rbx,rcx
   14001737c:	test   dl,0x2
   14001737f:	je     0x1400173ac
   140017381:	lea    rdi,[rcx-0x8]
   140017385:	lea    r9,[rip+0x76e]        # 0x140017afa
   14001738c:	mov    edx,0x18
   140017391:	mov    r8d,DWORD PTR [rdi]
   140017394:	call   0x1400177ac
   140017399:	test   sil,0x1
   14001739d:	je     0x1400173a7
   14001739f:	mov    rcx,rdi
   1400173a2:	call   0x14001716e
   1400173a7:	mov    rax,rdi
   1400173aa:	jmp    0x1400173c2
   1400173ac:	call   0x140017afa
   1400173b1:	test   sil,0x1
   1400173b5:	je     0x1400173bf
   1400173b7:	mov    rcx,rbx
   1400173ba:	call   0x14001716e
   1400173bf:	mov    rax,rbx
   1400173c2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400173c7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400173cc:	add    rsp,0x20
   1400173d0:	pop    rdi
   1400173d1:	ret    
   1400173d2:	jmp    QWORD PTR [rip+0x1f18]        # 0x1400192f0
   1400173d8:	jmp    QWORD PTR [rip+0x1f1a]        # 0x1400192f8
   1400173de:	jmp    QWORD PTR [rip+0x1f1c]        # 0x140019300
   1400173e4:	jmp    QWORD PTR [rip+0x1f1e]        # 0x140019308
   1400173ea:	jmp    QWORD PTR [rip+0x1f20]        # 0x140019310
   1400173f0:	jmp    QWORD PTR [rip+0x1f22]        # 0x140019318
   1400173f6:	jmp    QWORD PTR [rip+0x1f24]        # 0x140019320
   1400173fc:	jmp    QWORD PTR [rip+0x1f26]        # 0x140019328
   140017402:	jmp    QWORD PTR [rip+0x1f28]        # 0x140019330
   140017408:	jmp    QWORD PTR [rip+0x1f2a]        # 0x140019338
   14001740e:	jmp    QWORD PTR [rip+0x1f2c]        # 0x140019340
   140017414:	jmp    QWORD PTR [rip+0x1f2e]        # 0x140019348
   14001741a:	int3   
   14001741b:	int3   
   14001741c:	int3   
   14001741d:	int3   
   14001741e:	int3   
   14001741f:	int3   
   140017420:	int3   
   140017421:	int3   
   140017422:	int3   
   140017423:	int3   
   140017424:	int3   
   140017425:	int3   
   140017426:	data16 nop WORD PTR [rax+rax*1+0x0]
   140017430:	sub    rsp,0x10
   140017434:	mov    QWORD PTR [rsp],r10
   140017438:	mov    QWORD PTR [rsp+0x8],r11
   14001743d:	xor    r11,r11
   140017440:	lea    r10,[rsp+0x18]
   140017445:	sub    r10,rax
   140017448:	cmovb  r10,r11
   14001744c:	mov    r11,QWORD PTR gs:0x10
   140017455:	cmp    r10,r11
   140017458:	jae    0x140017470
   14001745a:	and    r10w,0xf000
   140017460:	lea    r11,[r11-0x1000]
   140017467:	mov    BYTE PTR [r11],0x0
   14001746b:	cmp    r10,r11
   14001746e:	jne    0x140017460
   140017470:	mov    r10,QWORD PTR [rsp]
   140017474:	mov    r11,QWORD PTR [rsp+0x8]
   140017479:	add    rsp,0x10
   14001747d:	ret    
   14001747e:	int3   
   14001747f:	int3   
   140017480:	sub    rsp,0x28
   140017484:	mov    eax,0x5a4d
   140017489:	cmp    WORD PTR [rip+0xfffffffffffe8b70],ax        # 0x140000000
   140017490:	je     0x140017496
   140017492:	xor    ecx,ecx
   140017494:	jmp    0x1400174ce
   140017496:	movsxd rax,DWORD PTR [rip+0xfffffffffffe8b9f]        # 0x14000003c
   14001749d:	lea    rcx,[rip+0xfffffffffffe8b5c]        # 0x140000000
   1400174a4:	add    rax,rcx
   1400174a7:	cmp    DWORD PTR [rax],0x4550
   1400174ad:	jne    0x140017492
   1400174af:	mov    ecx,0x20b
   1400174b4:	cmp    WORD PTR [rax+0x18],cx
   1400174b8:	jne    0x140017492
   1400174ba:	xor    ecx,ecx
   1400174bc:	cmp    DWORD PTR [rax+0x84],0xe
   1400174c3:	jbe    0x1400174ce
   1400174c5:	cmp    DWORD PTR [rax+0xf8],ecx
   1400174cb:	setne  cl
   1400174ce:	mov    DWORD PTR [rip+0xa1e4],ecx        # 0x1400216b8
   1400174d4:	mov    ecx,0x1
   1400174d9:	call   QWORD PTR [rip+0x1eb9]        # 0x140019398
   1400174df:	or     rcx,0xffffffffffffffff
   1400174e3:	call   QWORD PTR [rip+0x1b57]        # 0x140019040
   1400174e9:	mov    rcx,QWORD PTR [rip+0x1ee8]        # 0x1400193d8
   1400174f0:	mov    QWORD PTR [rip+0xa209],rax        # 0x140021700
   1400174f7:	mov    QWORD PTR [rip+0xa20a],rax        # 0x140021708
   1400174fe:	mov    eax,DWORD PTR [rip+0xa1e0]        # 0x1400216e4
   140017504:	mov    DWORD PTR [rcx],eax
   140017506:	mov    rdx,QWORD PTR [rip+0x1ed3]        # 0x1400193e0
   14001750d:	mov    eax,DWORD PTR [rip+0xa1c5]        # 0x1400216d8
   140017513:	mov    DWORD PTR [rdx],eax
   140017515:	call   0x140017a6c
   14001751a:	call   0x1400178d0
   14001751f:	cmp    DWORD PTR [rip+0x9bca],0x0        # 0x1400210f0
   140017526:	jne    0x140017535
   140017528:	lea    rcx,[rip+0x539]        # 0x140017a68
   14001752f:	call   QWORD PTR [rip+0x1e83]        # 0x1400193b8
   140017535:	cmp    DWORD PTR [rip+0x9bb8],0xffffffff        # 0x1400210f4
   14001753c:	jne    0x140017547
   14001753e:	or     ecx,0xffffffff
   140017541:	call   QWORD PTR [rip+0x1e69]        # 0x1400193b0
   140017547:	xor    eax,eax
   140017549:	add    rsp,0x28
   14001754d:	ret    
   14001754e:	int3   
   14001754f:	int3   
   140017550:	sub    rsp,0x38
   140017554:	lea    rcx,[rip+0x549]        # 0x140017aa4
   14001755b:	call   0x140017274
   140017560:	mov    eax,DWORD PTR [rip+0xa17a]        # 0x1400216e0
   140017566:	mov    r9d,DWORD PTR [rip+0xa16f]        # 0x1400216dc
   14001756d:	mov    DWORD PTR [rip+0xa161],eax        # 0x1400216d4
   140017573:	lea    rax,[rip+0xa15a]        # 0x1400216d4
   14001757a:	lea    r8,[rip+0xa147]        # 0x1400216c8
   140017581:	lea    rdx,[rip+0xa138]        # 0x1400216c0
   140017588:	lea    rcx,[rip+0xa12d]        # 0x1400216bc
   14001758f:	mov    QWORD PTR [rsp+0x20],rax
   140017594:	call   QWORD PTR [rip+0x1df6]        # 0x140019390
   14001759a:	mov    DWORD PTR [rip+0xa130],eax        # 0x1400216d0
   1400175a0:	test   eax,eax
   1400175a2:	jns    0x1400175ae
   1400175a4:	mov    ecx,0x8
   1400175a9:	call   0x1400178ca
   1400175ae:	add    rsp,0x38
   1400175b2:	ret    
   1400175b3:	int3   
   1400175b4:	mov    rax,QWORD PTR gs:0x30
   1400175bd:	ret    
   1400175be:	int3   
   1400175bf:	int3   
   1400175c0:	rex push rdi
   1400175c2:	sub    rsp,0x20
   1400175c6:	mov    rax,QWORD PTR gs:0x30
   1400175cf:	mov    rcx,QWORD PTR [rax+0x8]
   1400175d3:	xor    edi,edi
   1400175d5:	xor    eax,eax
   1400175d7:	lock cmpxchg QWORD PTR [rip+0xa108],rcx        # 0x1400216e8
   1400175e0:	je     0x1400175f0
   1400175e2:	cmp    rax,rcx
   1400175e5:	jne    0x1400175ee
   1400175e7:	mov    edi,0x1
   1400175ec:	jmp    0x1400175f0
   1400175ee:	jmp    0x1400175d5
   1400175f0:	mov    eax,DWORD PTR [rip+0xa0fa]        # 0x1400216f0
   1400175f6:	cmp    eax,0x1
   1400175f9:	jne    0x140017605
   1400175fb:	lea    ecx,[rax+0x1e]
   1400175fe:	call   0x1400178ca
   140017603:	jmp    0x140017644
   140017605:	mov    eax,DWORD PTR [rip+0xa0e5]        # 0x1400216f0
   14001760b:	test   eax,eax
   14001760d:	jne    0x14001763a
   14001760f:	mov    DWORD PTR [rip+0xa0d7],0x1        # 0x1400216f0
   140017619:	lea    rdx,[rip+0x1e70]        # 0x140019490
   140017620:	lea    rcx,[rip+0x1e49]        # 0x140019470
   140017627:	call   0x140017ae8
   14001762c:	test   eax,eax
   14001762e:	je     0x140017644
   140017630:	mov    eax,0xff
   140017635:	jmp    0x14001772a
   14001763a:	mov    DWORD PTR [rip+0xa06c],0x1        # 0x1400216b0
   140017644:	mov    eax,DWORD PTR [rip+0xa0a6]        # 0x1400216f0
   14001764a:	cmp    eax,0x1
   14001764d:	jne    0x14001766c
   14001764f:	lea    rdx,[rip+0x1e12]        # 0x140019468
   140017656:	lea    rcx,[rip+0x1ddb]        # 0x140019438
   14001765d:	call   0x140017aee
   140017662:	mov    DWORD PTR [rip+0xa084],0x2        # 0x1400216f0
   14001766c:	test   edi,edi
   14001766e:	jne    0x140017679
   140017670:	xor    eax,eax
   140017672:	xchg   QWORD PTR [rip+0xa06f],rax        # 0x1400216e8
   140017679:	cmp    QWORD PTR [rip+0xa077],0x0        # 0x1400216f8
   140017681:	je     0x1400176a5
   140017683:	lea    rcx,[rip+0xa06e]        # 0x1400216f8
   14001768a:	call   0x140017930
   14001768f:	test   eax,eax
   140017691:	je     0x1400176a5
   140017693:	xor    r8d,r8d
   140017696:	lea    edx,[r8+0x2]
   14001769a:	xor    ecx,ecx
   14001769c:	mov    rax,QWORD PTR [rip+0xa055]        # 0x1400216f8
   1400176a3:	call   rax
   1400176a5:	mov    rcx,QWORD PTR [rip+0xa01c]        # 0x1400216c8
   1400176ac:	mov    rax,QWORD PTR [rip+0x1d1d]        # 0x1400193d0
   1400176b3:	mov    QWORD PTR [rax],rcx
   1400176b6:	mov    r8,QWORD PTR [rip+0xa00b]        # 0x1400216c8
   1400176bd:	mov    rdx,QWORD PTR [rip+0x9ffc]        # 0x1400216c0
   1400176c4:	mov    ecx,DWORD PTR [rip+0x9ff2]        # 0x1400216bc
   1400176ca:	call   0x14000ad30
   1400176cf:	mov    DWORD PTR [rip+0x9fdf],eax        # 0x1400216b4
   1400176d5:	cmp    DWORD PTR [rip+0x9fdc],0x0        # 0x1400216b8
   1400176dc:	jne    0x1400176e6
   1400176de:	mov    ecx,eax
   1400176e0:	call   QWORD PTR [rip+0x1d1a]        # 0x140019400
   1400176e6:	cmp    DWORD PTR [rip+0x9fc3],0x0        # 0x1400216b0
   1400176ed:	jne    0x1400176fb
   1400176ef:	call   QWORD PTR [rip+0x1cb3]        # 0x1400193a8
   1400176f5:	mov    eax,DWORD PTR [rip+0x9fb9]        # 0x1400216b4
   1400176fb:	jmp    0x14001772a
   1400176fd:	mov    DWORD PTR [rip+0x9fb1],eax        # 0x1400216b4
   140017703:	cmp    DWORD PTR [rip+0x9fae],0x0        # 0x1400216b8
   14001770a:	jne    0x140017715
   14001770c:	mov    ecx,eax
   14001770e:	call   QWORD PTR [rip+0x1c8c]        # 0x1400193a0
   140017714:	int3   
   140017715:	cmp    DWORD PTR [rip+0x9f94],0x0        # 0x1400216b0
   14001771c:	jne    0x14001772a
   14001771e:	call   QWORD PTR [rip+0x1c84]        # 0x1400193a8
   140017724:	mov    eax,DWORD PTR [rip+0x9f8a]        # 0x1400216b4
   14001772a:	add    rsp,0x20
   14001772e:	pop    rdi
   14001772f:	ret    
   140017730:	mov    eax,0x5a4d
   140017735:	cmp    WORD PTR [rip+0xfffffffffffe88c4],ax        # 0x140000000
   14001773c:	je     0x140017741
   14001773e:	xor    eax,eax
   140017740:	ret    
   140017741:	movsxd rcx,DWORD PTR [rip+0xfffffffffffe88f4]        # 0x14000003c
   140017748:	lea    rax,[rip+0xfffffffffffe88b1]        # 0x140000000
   14001774f:	add    rcx,rax
   140017752:	cmp    DWORD PTR [rcx],0x4550
   140017758:	jne    0x14001773e
   14001775a:	mov    eax,0x20b
   14001775f:	cmp    WORD PTR [rcx+0x18],ax
   140017763:	jne    0x14001773e
   140017765:	xor    eax,eax
   140017767:	cmp    DWORD PTR [rcx+0x84],0xe
   14001776e:	jbe    0x140017779
   140017770:	cmp    DWORD PTR [rcx+0xf8],eax
   140017776:	setne  al
   140017779:	ret    
   14001777a:	int3   
   14001777b:	int3   
   14001777c:	sub    rsp,0x28
   140017780:	call   0x1400179bc
   140017785:	add    rsp,0x28
   140017789:	jmp    0x1400175c0
   14001778e:	jmp    QWORD PTR [rip+0x1bbc]        # 0x140019350
   140017794:	jmp    QWORD PTR [rip+0x1bbe]        # 0x140019358
   14001779a:	jmp    QWORD PTR [rip+0x1bc0]        # 0x140019360
   1400177a0:	jmp    QWORD PTR [rip+0x1bc2]        # 0x140019368
   1400177a6:	jmp    QWORD PTR [rip+0x1bc4]        # 0x140019370
   1400177ac:	mov    rax,rsp
   1400177af:	mov    QWORD PTR [rax+0x20],r9
   1400177b3:	mov    DWORD PTR [rax+0x18],r8d
   1400177b7:	mov    QWORD PTR [rax+0x10],rdx
   1400177bb:	push   rbx
   1400177bc:	push   rsi
   1400177bd:	push   rdi
   1400177be:	push   r14
   1400177c0:	sub    rsp,0x38
   1400177c4:	mov    r14,r9
   1400177c7:	movsxd rdi,r8d
   1400177ca:	mov    rsi,rdx
   1400177cd:	and    DWORD PTR [rax-0x38],0x0
   1400177d1:	mov    rbx,rdi
   1400177d4:	imul   rbx,rdx
   1400177d8:	add    rbx,rcx
   1400177db:	mov    QWORD PTR [rax+0x8],rbx
   1400177df:	dec    edi
   1400177e1:	mov    DWORD PTR [rsp+0x70],edi
   1400177e5:	js     0x1400177f7
   1400177e7:	sub    rbx,rsi
   1400177ea:	mov    QWORD PTR [rsp+0x60],rbx
   1400177ef:	mov    rcx,rbx
   1400177f2:	call   r14
   1400177f5:	jmp    0x1400177df
   1400177f7:	mov    DWORD PTR [rsp+0x20],0x1
   1400177ff:	add    rsp,0x38
   140017803:	pop    r14
   140017805:	pop    rdi
   140017806:	pop    rsi
   140017807:	pop    rbx
   140017808:	ret    
   140017809:	int3   
   14001780a:	int3   
   14001780b:	int3   
   14001780c:	sub    rsp,0x28
   140017810:	mov    rax,QWORD PTR [rcx]
   140017813:	cmp    DWORD PTR [rax],0xe06d7363
   140017819:	je     0x140017822
   14001781b:	xor    eax,eax
   14001781d:	add    rsp,0x28
   140017821:	ret    
   140017822:	call   0x140017af4
   140017827:	int3   
   140017828:	mov    QWORD PTR [rsp+0x10],rbx
   14001782d:	mov    DWORD PTR [rsp+0x18],r8d
   140017832:	mov    QWORD PTR [rsp+0x8],rcx
   140017837:	push   rsi
   140017838:	push   rdi
   140017839:	push   r14
   14001783b:	sub    rsp,0x40
   14001783f:	mov    rsi,r9
   140017842:	mov    edi,r8d
   140017845:	mov    r14,rdx
   140017848:	mov    rbx,rcx
   14001784b:	dec    edi
   14001784d:	mov    DWORD PTR [rsp+0x70],edi
   140017851:	js     0x140017862
   140017853:	sub    rbx,r14
   140017856:	mov    QWORD PTR [rsp+0x60],rbx
   14001785b:	mov    rcx,rbx
   14001785e:	call   rsi
   140017860:	jmp    0x14001784b
   140017862:	jmp    0x140017864
   140017864:	mov    rbx,QWORD PTR [rsp+0x68]
   140017869:	add    rsp,0x40
   14001786d:	pop    r14
   14001786f:	pop    rdi
   140017870:	pop    rsi
   140017871:	ret    
   140017872:	int3   
   140017873:	int3   
   140017874:	sub    rsp,0x28
   140017878:	mov    rax,QWORD PTR [rcx]
   14001787b:	cmp    DWORD PTR [rax],0xe06d7363
   140017881:	jne    0x14001789f
   140017883:	cmp    DWORD PTR [rax+0x18],0x4
   140017887:	jne    0x14001789f
   140017889:	mov    ecx,DWORD PTR [rax+0x20]
   14001788c:	lea    eax,[rcx-0x19930520]
   140017892:	cmp    eax,0x2
   140017895:	jbe    0x1400178a6
   140017897:	cmp    ecx,0x1994000
   14001789d:	je     0x1400178a6
   14001789f:	xor    eax,eax
   1400178a1:	add    rsp,0x28
   1400178a5:	ret    
   1400178a6:	call   0x140017af4
   1400178ab:	int3   
   1400178ac:	sub    rsp,0x28
   1400178b0:	lea    rcx,[rip+0xffffffffffffffbd]        # 0x140017874
   1400178b7:	call   0x140017b00
   1400178bc:	xor    eax,eax
   1400178be:	add    rsp,0x28
   1400178c2:	ret    
   1400178c3:	int3   
   1400178c4:	jmp    QWORD PTR [rip+0x1ab6]        # 0x140019380
   1400178ca:	jmp    QWORD PTR [rip+0x1ab8]        # 0x140019388
   1400178d0:	xor    eax,eax
   1400178d2:	ret    
   1400178d3:	int3   
   1400178d4:	jmp    QWORD PTR [rip+0x1ab6]        # 0x140019390
   1400178da:	jmp    QWORD PTR [rip+0x1ab8]        # 0x140019398
   1400178e0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400178e4:	xor    r9d,r9d
   1400178e7:	mov    r10,rdx
   1400178ea:	add    r8,rcx
   1400178ed:	movzx  eax,WORD PTR [r8+0x14]
   1400178f2:	movzx  r11d,WORD PTR [r8+0x6]
   1400178f7:	add    rax,0x18
   1400178fb:	add    rax,r8
   1400178fe:	test   r11d,r11d
   140017901:	je     0x140017921
   140017903:	mov    edx,DWORD PTR [rax+0xc]
   140017906:	cmp    r10,rdx
   140017909:	jb     0x140017915
   14001790b:	mov    ecx,DWORD PTR [rax+0x8]
   14001790e:	add    ecx,edx
   140017910:	cmp    r10,rcx
   140017913:	jb     0x140017923
   140017915:	inc    r9d
   140017918:	add    rax,0x28
   14001791c:	cmp    r9d,r11d
   14001791f:	jb     0x140017903
   140017921:	xor    eax,eax
   140017923:	ret    
   140017924:	int3   
   140017925:	int3   
   140017926:	int3   
   140017927:	int3   
   140017928:	int3   
   140017929:	int3   
   14001792a:	int3   
   14001792b:	int3   
   14001792c:	int3   
   14001792d:	int3   
   14001792e:	int3   
   14001792f:	int3   
   140017930:	mov    QWORD PTR [rsp+0x8],rbx
   140017935:	push   rdi
   140017936:	sub    rsp,0x20
   14001793a:	mov    rbx,rcx
   14001793d:	lea    rdi,[rip+0xfffffffffffe86bc]        # 0x140000000
   140017944:	mov    rcx,rdi
   140017947:	call   0x140017980
   14001794c:	test   eax,eax
   14001794e:	je     0x140017972
   140017950:	sub    rbx,rdi
   140017953:	mov    rdx,rbx
   140017956:	mov    rcx,rdi
   140017959:	call   0x1400178e0
   14001795e:	test   rax,rax
   140017961:	je     0x140017972
   140017963:	mov    eax,DWORD PTR [rax+0x24]
   140017966:	shr    eax,0x1f
   140017969:	not    eax
   14001796b:	and    eax,0x1
   14001796e:	jmp    0x140017972
   140017970:	xor    eax,eax
   140017972:	mov    rbx,QWORD PTR [rsp+0x30]
   140017977:	add    rsp,0x20
   14001797b:	pop    rdi
   14001797c:	ret    
   14001797d:	int3   
   14001797e:	int3   
   14001797f:	int3   
   140017980:	mov    rax,rcx
   140017983:	mov    ecx,0x5a4d
   140017988:	cmp    WORD PTR [rax],cx
   14001798b:	je     0x140017990
   14001798d:	xor    eax,eax
   14001798f:	ret    
   140017990:	movsxd rcx,DWORD PTR [rax+0x3c]
   140017994:	add    rcx,rax
   140017997:	xor    eax,eax
   140017999:	cmp    DWORD PTR [rcx],0x4550
   14001799f:	jne    0x1400179ad
   1400179a1:	mov    edx,0x20b
   1400179a6:	cmp    WORD PTR [rcx+0x18],dx
   1400179aa:	sete   al
   1400179ad:	ret    
   1400179ae:	jmp    QWORD PTR [rip+0x19ec]        # 0x1400193a0
   1400179b4:	jmp    QWORD PTR [rip+0x19ee]        # 0x1400193a8
   1400179ba:	int3   
   1400179bb:	int3   
   1400179bc:	mov    QWORD PTR [rsp+0x20],rbx
   1400179c1:	push   rbp
   1400179c2:	mov    rbp,rsp
   1400179c5:	sub    rsp,0x20
   1400179c9:	mov    rax,QWORD PTR [rip+0x9730]        # 0x140021100
   1400179d0:	and    QWORD PTR [rbp+0x18],0x0
   1400179d5:	movabs rbx,0x2b992ddfa232
   1400179df:	cmp    rax,rbx
   1400179e2:	jne    0x140017a53
   1400179e4:	lea    rcx,[rbp+0x18]
   1400179e8:	call   QWORD PTR [rip+0x165a]        # 0x140019048
   1400179ee:	mov    rax,QWORD PTR [rbp+0x18]
   1400179f2:	mov    QWORD PTR [rbp+0x10],rax
   1400179f6:	call   QWORD PTR [rip+0x1624]        # 0x140019020
   1400179fc:	mov    eax,eax
   1400179fe:	xor    QWORD PTR [rbp+0x10],rax
   140017a02:	call   QWORD PTR [rip+0x1620]        # 0x140019028
   140017a08:	lea    rcx,[rbp+0x20]
   140017a0c:	mov    eax,eax
   140017a0e:	xor    QWORD PTR [rbp+0x10],rax
   140017a12:	call   QWORD PTR [rip+0x1618]        # 0x140019030
   140017a18:	mov    eax,DWORD PTR [rbp+0x20]
   140017a1b:	shl    rax,0x20
   140017a1f:	lea    rcx,[rbp+0x10]
   140017a23:	xor    rax,QWORD PTR [rbp+0x20]
   140017a27:	xor    rax,QWORD PTR [rbp+0x10]
   140017a2b:	xor    rax,rcx
   140017a2e:	movabs rcx,0xffffffffffff
   140017a38:	and    rax,rcx
   140017a3b:	movabs rcx,0x2b992ddfa233
   140017a45:	cmp    rax,rbx
   140017a48:	cmove  rax,rcx
   140017a4c:	mov    QWORD PTR [rip+0x96ad],rax        # 0x140021100
   140017a53:	mov    rbx,QWORD PTR [rsp+0x48]
   140017a58:	not    rax
   140017a5b:	mov    QWORD PTR [rip+0x96a6],rax        # 0x140021108
   140017a62:	add    rsp,0x20
   140017a66:	pop    rbp
   140017a67:	ret    
   140017a68:	xor    eax,eax
   140017a6a:	ret    
   140017a6b:	int3   
   140017a6c:	mov    QWORD PTR [rsp+0x8],rbx
   140017a71:	push   rdi
   140017a72:	sub    rsp,0x20
   140017a76:	lea    rbx,[rip+0x5023]        # 0x14001caa0
   140017a7d:	lea    rdi,[rip+0x501c]        # 0x14001caa0
   140017a84:	jmp    0x140017a94
   140017a86:	mov    rax,QWORD PTR [rbx]
   140017a89:	test   rax,rax
   140017a8c:	je     0x140017a90
   140017a8e:	call   rax
   140017a90:	add    rbx,0x8
   140017a94:	cmp    rbx,rdi
   140017a97:	jb     0x140017a86
   140017a99:	mov    rbx,QWORD PTR [rsp+0x30]
   140017a9e:	add    rsp,0x20
   140017aa2:	pop    rdi
   140017aa3:	ret    
   140017aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140017aa9:	push   rdi
   140017aaa:	sub    rsp,0x20
   140017aae:	lea    rbx,[rip+0x4ffb]        # 0x14001cab0
   140017ab5:	lea    rdi,[rip+0x4ff4]        # 0x14001cab0
   140017abc:	jmp    0x140017acc
   140017abe:	mov    rax,QWORD PTR [rbx]
   140017ac1:	test   rax,rax
   140017ac4:	je     0x140017ac8
   140017ac6:	call   rax
   140017ac8:	add    rbx,0x8
   140017acc:	cmp    rbx,rdi
   140017acf:	jb     0x140017abe
   140017ad1:	mov    rbx,QWORD PTR [rsp+0x30]
   140017ad6:	add    rsp,0x20
   140017ada:	pop    rdi
   140017adb:	ret    
   140017adc:	jmp    QWORD PTR [rip+0x18ce]        # 0x1400193b0
   140017ae2:	jmp    QWORD PTR [rip+0x18d0]        # 0x1400193b8
   140017ae8:	jmp    QWORD PTR [rip+0x18d2]        # 0x1400193c0
   140017aee:	jmp    QWORD PTR [rip+0x18d4]        # 0x1400193c8
   140017af4:	jmp    QWORD PTR [rip+0x18ee]        # 0x1400193e8
   140017afa:	jmp    QWORD PTR [rip+0x18f0]        # 0x1400193f0
   140017b00:	jmp    QWORD PTR [rip+0x18f2]        # 0x1400193f8
   140017b06:	jmp    QWORD PTR [rip+0x1534]        # 0x140019040
   140017b0c:	jmp    QWORD PTR [rip+0x1526]        # 0x140019038
   140017b12:	jmp    QWORD PTR [rip+0x1518]        # 0x140019030
   140017b18:	jmp    QWORD PTR [rip+0x150a]        # 0x140019028
   140017b1e:	jmp    QWORD PTR [rip+0x14fc]        # 0x140019020
   140017b24:	jmp    QWORD PTR [rip+0x151e]        # 0x140019048
   140017b2a:	int3   
   140017b2b:	int3   
   140017b2c:	int3   
   140017b2d:	int3   
   140017b2e:	int3   
   140017b2f:	int3   
   140017b30:	lea    rcx,[rdx+0x28]
   140017b37:	jmp    0x1400041c0
   140017b3c:	lea    rcx,[rdx+0x28]
   140017b43:	jmp    0x140004240
   140017b48:	mov    QWORD PTR [rsp+0x10],rdx
   140017b4d:	push   rbp
   140017b4e:	sub    rsp,0x20
   140017b52:	mov    rbp,rdx
   140017b55:	mov    rdx,QWORD PTR [rbp+0x70]
   140017b59:	mov    rax,QWORD PTR [rdx]
   140017b5c:	movsxd rcx,DWORD PTR [rax+0x4]
   140017b60:	add    rcx,rdx
   140017b63:	mov    r8b,0x1
   140017b66:	mov    edx,0x4
   140017b6b:	call   QWORD PTR [rip+0x157f]        # 0x1400190f0
   140017b71:	nop
   140017b72:	lea    rax,[rip+0xfffffffffffe9909]        # 0x140001482
   140017b79:	add    rsp,0x20
   140017b7d:	pop    rbp
   140017b7e:	ret    
   140017b7f:	int3   
   140017b80:	lea    rcx,[rdx+0x28]
   140017b87:	jmp    0x1400041c0
   140017b8c:	lea    rcx,[rdx+0x28]
   140017b93:	jmp    0x140004240
   140017b98:	mov    QWORD PTR [rsp+0x10],rdx
   140017b9d:	push   rbp
   140017b9e:	sub    rsp,0x20
   140017ba2:	mov    rbp,rdx
   140017ba5:	mov    rdx,QWORD PTR [rbp+0x70]
   140017ba9:	mov    rax,QWORD PTR [rdx]
   140017bac:	movsxd rcx,DWORD PTR [rax+0x4]
   140017bb0:	add    rcx,rdx
   140017bb3:	mov    r8b,0x1
   140017bb6:	mov    edx,0x4
   140017bbb:	call   QWORD PTR [rip+0x152f]        # 0x1400190f0
   140017bc1:	nop
   140017bc2:	lea    rax,[rip+0xfffffffffffe9a90]        # 0x140001659
   140017bc9:	add    rsp,0x20
   140017bcd:	pop    rbp
   140017bce:	ret    
   140017bcf:	int3   
   140017bd0:	rex push rbp
   140017bd2:	sub    rsp,0x20
   140017bd6:	mov    rbp,rdx
   140017bd9:	mov    eax,DWORD PTR [rbp+0x20]
   140017bdc:	and    eax,0x1
   140017bdf:	test   eax,eax
   140017be1:	je     0x140017bf0
   140017be3:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140017be7:	mov    rcx,QWORD PTR [rbp+0x50]
   140017beb:	call   0x140003c90
   140017bf0:	add    rsp,0x20
   140017bf4:	pop    rbp
   140017bf5:	ret    
   140017bf6:	int3   
   140017bf7:	int3   
   140017bf8:	int3   
   140017bf9:	int3   
   140017bfa:	int3   
   140017bfb:	int3   
   140017bfc:	int3   
   140017bfd:	int3   
   140017bfe:	int3   
   140017bff:	int3   
   140017c00:	rex push rbp
   140017c02:	sub    rsp,0x20
   140017c06:	mov    rbp,rdx
   140017c09:	mov    eax,DWORD PTR [rbp+0x20]
   140017c0c:	and    eax,0x1
   140017c0f:	test   eax,eax
   140017c11:	je     0x140017c20
   140017c13:	and    DWORD PTR [rbp+0x20],0xfffffffe
   140017c17:	mov    rcx,QWORD PTR [rbp+0x50]
   140017c1b:	call   0x140003c90
   140017c20:	add    rsp,0x20
   140017c24:	pop    rbp
   140017c25:	ret    
   140017c26:	int3   
   140017c27:	int3   
   140017c28:	int3   
   140017c29:	int3   
   140017c2a:	int3   
   140017c2b:	int3   
   140017c2c:	int3   
   140017c2d:	int3   
   140017c2e:	int3   
   140017c2f:	int3   
   140017c30:	rex push rbp
   140017c32:	sub    rsp,0x20
   140017c36:	mov    rbp,rdx
   140017c39:	mov    rdx,QWORD PTR [rbp+0x58]
   140017c3d:	mov    rcx,QWORD PTR [rbp+0x28]
   140017c41:	call   0x1400042a0
   140017c46:	add    rsp,0x20
   140017c4a:	pop    rbp
   140017c4b:	ret    
   140017c4c:	mov    QWORD PTR [rsp+0x10],rdx
   140017c51:	push   rbp
   140017c52:	sub    rsp,0x20
   140017c56:	mov    rbp,rdx
   140017c59:	mov    rcx,QWORD PTR [rbp+0x50]
   140017c5d:	call   0x14001716e
   140017c62:	xor    edx,edx
   140017c64:	xor    ecx,ecx
   140017c66:	call   0x140017334
   140017c6b:	nop
   140017c6c:	int3   
   140017c6d:	int3   
   140017c6e:	int3   
   140017c6f:	int3   
   140017c70:	rex push rbp
   140017c72:	sub    rsp,0x20
   140017c76:	mov    rbp,rdx
   140017c79:	mov    rdx,QWORD PTR [rbp+0x58]
   140017c7d:	mov    rcx,QWORD PTR [rbp+0x28]
   140017c81:	call   0x1400042a0
   140017c86:	add    rsp,0x20
   140017c8a:	pop    rbp
   140017c8b:	ret    
   140017c8c:	mov    QWORD PTR [rsp+0x10],rdx
   140017c91:	push   rbp
   140017c92:	sub    rsp,0x20
   140017c96:	mov    rbp,rdx
   140017c99:	mov    rcx,QWORD PTR [rbp+0x50]
   140017c9d:	call   0x14001716e
   140017ca2:	xor    edx,edx
   140017ca4:	xor    ecx,ecx
   140017ca6:	call   0x140017334
   140017cab:	nop
   140017cac:	int3   
   140017cad:	int3   
   140017cae:	int3   
   140017caf:	int3   
   140017cb0:	mov    QWORD PTR [rsp+0x10],rdx
   140017cb5:	push   rbp
   140017cb6:	sub    rsp,0x30
   140017cba:	mov    rbp,rdx
   140017cbd:	xor    edx,edx
   140017cbf:	xor    ecx,ecx
   140017cc1:	call   0x140017334
   140017cc6:	nop
   140017cc7:	int3   
   140017cc8:	int3   
   140017cc9:	int3   
   140017cca:	int3   
   140017ccb:	int3   
   140017ccc:	int3   
   140017ccd:	int3   
   140017cce:	int3   
   140017ccf:	int3   
   140017cd0:	mov    QWORD PTR [rsp+0x10],rdx
   140017cd5:	push   rbp
   140017cd6:	sub    rsp,0x30
   140017cda:	mov    rbp,rdx
   140017cdd:	xor    edx,edx
   140017cdf:	xor    ecx,ecx
   140017ce1:	call   0x140017334
   140017ce6:	nop
   140017ce7:	int3   
   140017ce8:	int3   
   140017ce9:	int3   
   140017cea:	int3   
   140017ceb:	int3   
   140017cec:	int3   
   140017ced:	int3   
   140017cee:	int3   
   140017cef:	int3   
   140017cf0:	rex push rbp
   140017cf2:	sub    rsp,0x20
   140017cf6:	mov    rbp,rdx
   140017cf9:	mov    rdx,QWORD PTR [rbp+0x48]
   140017cfd:	mov    rcx,QWORD PTR [rbp+0x58]
   140017d01:	call   0x1400042a0
   140017d06:	add    rsp,0x20
   140017d0a:	pop    rbp
   140017d0b:	ret    
   140017d0c:	int3   
   140017d0d:	int3   
   140017d0e:	int3   
   140017d0f:	int3   
   140017d10:	rex push rbp
   140017d12:	sub    rsp,0x20
   140017d16:	mov    rbp,rdx
   140017d19:	mov    rdx,QWORD PTR [rbp+0x48]
   140017d1d:	mov    rcx,QWORD PTR [rbp+0x58]
   140017d21:	call   0x1400042a0
   140017d26:	add    rsp,0x20
   140017d2a:	pop    rbp
   140017d2b:	ret    
   140017d2c:	int3   
   140017d2d:	int3   
   140017d2e:	int3   
   140017d2f:	int3   
   140017d30:	rex push rbp
   140017d32:	sub    rsp,0x20
   140017d36:	mov    rbp,rdx
   140017d39:	mov    rdx,QWORD PTR [rbp+0x48]
   140017d3d:	mov    rcx,QWORD PTR [rbp+0x58]
   140017d41:	call   0x1400042a0
   140017d46:	add    rsp,0x20
   140017d4a:	pop    rbp
   140017d4b:	ret    
   140017d4c:	int3   
   140017d4d:	int3   
   140017d4e:	int3   
   140017d4f:	int3   
   140017d50:	rex push rbp
   140017d52:	sub    rsp,0x20
   140017d56:	mov    rbp,rdx
   140017d59:	mov    rdx,QWORD PTR [rbp+0x48]
   140017d5d:	mov    rcx,QWORD PTR [rbp+0x58]
   140017d61:	call   0x1400042a0
   140017d66:	add    rsp,0x20
   140017d6a:	pop    rbp
   140017d6b:	ret    
   140017d6c:	int3   
   140017d6d:	int3   
   140017d6e:	int3   
   140017d6f:	int3   
   140017d70:	rex push rbp
   140017d72:	sub    rsp,0x20
   140017d76:	mov    rbp,rdx
   140017d79:	mov    rdx,QWORD PTR [rbp+0x48]
   140017d7d:	mov    rcx,QWORD PTR [rbp+0x58]
   140017d81:	call   0x1400042a0
   140017d86:	add    rsp,0x20
   140017d8a:	pop    rbp
   140017d8b:	ret    
   140017d8c:	int3   
   140017d8d:	int3   
   140017d8e:	int3   
   140017d8f:	int3   
   140017d90:	lea    rcx,[rdx+0x38]
   140017d97:	jmp    0x140003af0
   140017d9c:	int3   
   140017d9d:	int3   
   140017d9e:	int3   
   140017d9f:	int3   
   140017da0:	lea    rcx,[rdx+0x50]
   140017da7:	rex.W jmp QWORD PTR [rip+0x141a]        # 0x1400191c8
   140017dae:	int3   
   140017daf:	int3   
   140017db0:	mov    rcx,QWORD PTR [rdx+0x40]
   140017db7:	rex.W jmp QWORD PTR [rip+0x12f2]        # 0x1400190b0
   140017dbe:	int3   
   140017dbf:	int3   
   140017dc0:	rex push rbp
   140017dc2:	sub    rsp,0x20
   140017dc6:	mov    rbp,rdx
   140017dc9:	mov    eax,DWORD PTR [rbp+0x70]
   140017dcc:	and    eax,0x1
   140017dcf:	test   eax,eax
   140017dd1:	je     0x140017de8
   140017dd3:	and    DWORD PTR [rbp+0x70],0xfffffffe
   140017dd7:	mov    rcx,QWORD PTR [rbp+0x60]
   140017ddb:	add    rcx,0xb0
   140017de2:	call   QWORD PTR [rip+0x12f8]        # 0x1400190e0
   140017de8:	add    rsp,0x20
   140017dec:	pop    rbp
   140017ded:	ret    
   140017dee:	mov    rcx,QWORD PTR [rdx+0x60]
   140017df5:	add    rcx,0x18
   140017df9:	rex.W jmp QWORD PTR [rip+0x1368]        # 0x140019168
   140017e00:	mov    rcx,QWORD PTR [rdx+0x68]
   140017e07:	rex.W jmp QWORD PTR [rip+0x12a2]        # 0x1400190b0
   140017e0e:	mov    rcx,QWORD PTR [rdx+0x60]
   140017e15:	add    rcx,0x10
   140017e19:	jmp    0x140003b60
   140017e1e:	int3   
   140017e1f:	int3   
   140017e20:	rex push rbp
   140017e22:	sub    rsp,0x20
   140017e26:	mov    rbp,rdx
   140017e29:	mov    eax,DWORD PTR [rbp+0x70]
   140017e2c:	and    eax,0x1
   140017e2f:	test   eax,eax
   140017e31:	je     0x140017e48
   140017e33:	and    DWORD PTR [rbp+0x70],0xfffffffe
   140017e37:	mov    rcx,QWORD PTR [rbp+0x60]
   140017e3b:	add    rcx,0xa8
   140017e42:	call   QWORD PTR [rip+0x1298]        # 0x1400190e0
   140017e48:	add    rsp,0x20
   140017e4c:	pop    rbp
   140017e4d:	ret    
   140017e4e:	mov    rcx,QWORD PTR [rdx+0x60]
   140017e55:	add    rcx,0x10
   140017e59:	rex.W jmp QWORD PTR [rip+0x12b0]        # 0x140019110
   140017e60:	mov    rcx,QWORD PTR [rdx+0x68]
   140017e67:	rex.W jmp QWORD PTR [rip+0x1242]        # 0x1400190b0
   140017e6e:	mov    rcx,QWORD PTR [rdx+0x60]
   140017e75:	add    rcx,0x8
   140017e79:	jmp    0x140003b60
   140017e7e:	int3   
   140017e7f:	int3   
   140017e80:	mov    rcx,QWORD PTR [rdx+0x190]
   140017e87:	add    rcx,0x8
   140017e8b:	jmp    0x140003c90
   140017e90:	mov    rcx,QWORD PTR [rdx+0x190]
   140017e97:	add    rcx,0x30
   140017e9b:	jmp    0x140003c90
   140017ea0:	mov    rcx,QWORD PTR [rdx+0x190]
   140017ea7:	add    rcx,0x50
   140017eab:	jmp    0x140003d10
   140017eb0:	mov    rcx,QWORD PTR [rdx+0x190]
   140017eb7:	add    rcx,0x58
   140017ebb:	jmp    0x140003cd0
   140017ec0:	mov    rcx,QWORD PTR [rdx+0x190]
   140017ec7:	add    rcx,0x68
   140017ecb:	jmp    0x140003cd0
   140017ed0:	lea    rcx,[rdx+0x60]
   140017ed7:	jmp    0x1400047d0
   140017edc:	int3   
   140017edd:	int3   
   140017ede:	int3   
   140017edf:	int3   
   140017ee0:	mov    rcx,QWORD PTR [rdx+0x40]
   140017ee7:	jmp    0x1400041c0
   140017eec:	int3   
   140017eed:	int3   
   140017eee:	int3   
   140017eef:	int3   
   140017ef0:	mov    rcx,QWORD PTR [rdx+0x80]
   140017ef7:	add    rcx,0x8
   140017efb:	jmp    0x140003c90
   140017f00:	mov    rcx,QWORD PTR [rdx+0x80]
   140017f07:	add    rcx,0x30
   140017f0b:	jmp    0x140003c90
   140017f10:	mov    rcx,QWORD PTR [rdx+0x80]
   140017f17:	add    rcx,0x50
   140017f1b:	jmp    0x140003d10
   140017f20:	mov    rcx,QWORD PTR [rdx+0x80]
   140017f27:	add    rcx,0x58
   140017f2b:	jmp    0x140003cd0
   140017f30:	mov    rcx,QWORD PTR [rdx+0x80]
   140017f37:	add    rcx,0x68
   140017f3b:	jmp    0x140003cd0
   140017f40:	lea    rcx,[rdx+0x28]
   140017f47:	jmp    0x140003c90
   140017f4c:	lea    rcx,[rdx+0x28]
   140017f53:	jmp    0x140003c90
   140017f58:	lea    rcx,[rdx+0x28]
   140017f5f:	jmp    0x140003c90
   140017f64:	lea    rcx,[rdx+0x28]
   140017f6b:	jmp    0x140003c90
   140017f70:	lea    rcx,[rdx+0x70]
   140017f77:	jmp    0x140003c90
   140017f7c:	lea    rcx,[rdx+0x90]
   140017f83:	jmp    0x140003c90
   140017f88:	lea    rcx,[rdx+0x30]
   140017f8f:	jmp    0x140003c90
   140017f94:	lea    rcx,[rdx+0x50]
   140017f9b:	jmp    0x140003c90
   140017fa0:	lea    rcx,[rdx+0x30]
   140017fa7:	jmp    0x140003c90
   140017fac:	lea    rcx,[rdx+0x30]
   140017fb3:	jmp    0x140003c90
   140017fb8:	lea    rcx,[rdx+0x30]
   140017fbf:	jmp    0x140003c90
   140017fc4:	lea    rcx,[rdx+0x120]
   140017fcb:	jmp    0x140003c90
   140017fd0:	lea    rcx,[rdx+0x30]
   140017fd7:	jmp    0x140003c90
   140017fdc:	lea    rcx,[rdx+0x120]
   140017fe3:	jmp    0x140003c90
   140017fe8:	lea    rcx,[rdx+0x250]
   140017fef:	jmp    0x140003c90
   140017ff4:	lea    rcx,[rdx+0x270]
   140017ffb:	jmp    0x140003c90
   140018000:	lea    rcx,[rdx+0x30]
   140018007:	jmp    0x140003c90
   14001800c:	mov    QWORD PTR [rsp+0x10],rdx
   140018011:	push   rbp
   140018012:	sub    rsp,0x30
   140018016:	mov    rbp,rdx
   140018019:	lea    rcx,[rbp+0xb0]
   140018020:	call   0x14000d4f0
   140018025:	xor    edx,edx
   140018027:	xor    ecx,ecx
   140018029:	call   0x140017334
   14001802e:	nop
   14001802f:	int3   
   140018030:	lea    rcx,[rdx+0x48]
   140018037:	jmp    0x140003c90
   14001803c:	lea    rcx,[rdx+0x28]
   140018043:	jmp    0x140003c90
   140018048:	int3   
   140018049:	int3   
   14001804a:	int3   
   14001804b:	int3   
   14001804c:	int3   
   14001804d:	int3   
   14001804e:	int3   
   14001804f:	int3   
   140018050:	lea    rcx,[rdx+0x48]
   140018057:	jmp    0x140003c90
   14001805c:	lea    rcx,[rdx+0x28]
   140018063:	jmp    0x140003c90
   140018068:	int3   
   140018069:	int3   
   14001806a:	int3   
   14001806b:	int3   
   14001806c:	int3   
   14001806d:	int3   
   14001806e:	int3   
   14001806f:	int3   
   140018070:	mov    QWORD PTR [rsp+0x10],rdx
   140018075:	push   rbp
   140018076:	sub    rsp,0x20
   14001807a:	mov    rbp,rdx
   14001807d:	mov    rcx,QWORD PTR [rbp+0x48]
   140018081:	call   0x14001716e
   140018086:	xor    edx,edx
   140018088:	xor    ecx,ecx
   14001808a:	call   0x140017334
   14001808f:	nop
   140018090:	mov    QWORD PTR [rsp+0x10],rdx
   140018095:	push   rbp
   140018096:	sub    rsp,0x20
   14001809a:	mov    rbp,rdx
   14001809d:	mov    rcx,QWORD PTR [rbp+0x48]
   1400180a1:	call   0x14001716e
   1400180a6:	xor    edx,edx
   1400180a8:	xor    ecx,ecx
   1400180aa:	call   0x140017334
   1400180af:	nop
   1400180b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400180b5:	push   rbp
   1400180b6:	sub    rsp,0x20
   1400180ba:	mov    rbp,rdx
   1400180bd:	mov    rcx,QWORD PTR [rbp+0x68]
   1400180c1:	mov    QWORD PTR [rbp+0x68],rcx
   1400180c5:	xor    eax,eax
   1400180c7:	inc    rcx
   1400180ca:	je     0x1400180e2
   1400180cc:	cmp    rcx,0xffffffffffffffff
   1400180d0:	ja     0x1400180dc
   1400180d2:	call   0x140017168
   1400180d7:	test   rax,rax
   1400180da:	jne    0x1400180e2
   1400180dc:	call   QWORD PTR [rip+0x10f6]        # 0x1400191d8
   1400180e2:	mov    QWORD PTR [rbp+0x78],rax
   1400180e6:	lea    rax,[rip+0xfffffffffffed619]        # 0x140005706
   1400180ed:	add    rsp,0x20
   1400180f1:	pop    rbp
   1400180f2:	ret    
   1400180f3:	int3   
   1400180f4:	mov    QWORD PTR [rsp+0x10],rdx
   1400180f9:	push   rbx
   1400180fa:	push   rbp
   1400180fb:	sub    rsp,0x28
   1400180ff:	mov    rbp,rdx
   140018102:	mov    rbx,QWORD PTR [rbp+0x60]
   140018106:	cmp    QWORD PTR [rbx+0x18],0x10
   14001810b:	jb     0x140018115
   14001810d:	mov    rcx,QWORD PTR [rbx]
   140018110:	call   0x14001716e
   140018115:	mov    QWORD PTR [rbx+0x18],0xf
   14001811d:	mov    QWORD PTR [rbx+0x10],0x0
   140018125:	mov    BYTE PTR [rbx],0x0
   140018128:	xor    edx,edx
   14001812a:	xor    ecx,ecx
   14001812c:	call   0x140017334
   140018131:	nop
   140018132:	int3   
   140018133:	int3   
   140018134:	int3   
   140018135:	int3   
   140018136:	int3   
   140018137:	int3   
   140018138:	int3   
   140018139:	int3   
   14001813a:	int3   
   14001813b:	int3   
   14001813c:	int3   
   14001813d:	int3   
   14001813e:	int3   
   14001813f:	int3   
   140018140:	lea    rcx,[rdx+0x38]
   140018147:	jmp    0x140003c90
   14001814c:	int3   
   14001814d:	int3   
   14001814e:	int3   
   14001814f:	int3   
   140018150:	lea    rcx,[rdx+0x48]
   140018157:	jmp    0x140003d50
   14001815c:	int3   
   14001815d:	int3   
   14001815e:	int3   
   14001815f:	int3   
   140018160:	rex push rbp
   140018162:	sub    rsp,0x20
   140018166:	mov    rbp,rdx
   140018169:	mov    eax,DWORD PTR [rbp+0x40]
   14001816c:	and    eax,0x1
   14001816f:	test   eax,eax
   140018171:	je     0x140018180
   140018173:	and    DWORD PTR [rbp+0x40],0xfffffffe
   140018177:	mov    rcx,QWORD PTR [rbp+0x60]
   14001817b:	call   0x140003c90
   140018180:	add    rsp,0x20
   140018184:	pop    rbp
   140018185:	ret    
   140018186:	int3   
   140018187:	int3   
   140018188:	int3   
   140018189:	int3   
   14001818a:	int3   
   14001818b:	int3   
   14001818c:	int3   
   14001818d:	int3   
   14001818e:	int3   
   14001818f:	int3   
   140018190:	lea    rcx,[rdx+0x40]
   140018197:	jmp    0x140004200
   14001819c:	int3   
   14001819d:	int3   
   14001819e:	int3   
   14001819f:	int3   
   1400181a0:	lea    rcx,[rdx+0x50]
   1400181a7:	jmp    0x140003c90
   1400181ac:	int3   
   1400181ad:	int3   
   1400181ae:	int3   
   1400181af:	int3   
   1400181b0:	lea    rcx,[rdx+0x48]
   1400181b7:	jmp    0x140003d70
   1400181bc:	int3   
   1400181bd:	int3   
   1400181be:	int3   
   1400181bf:	int3   
   1400181c0:	lea    rcx,[rdx+0x50]
   1400181c7:	jmp    0x140003c90
   1400181cc:	int3   
   1400181cd:	int3   
   1400181ce:	int3   
   1400181cf:	int3   
   1400181d0:	lea    rcx,[rdx+0x30]
   1400181d7:	jmp    0x140003c90
   1400181dc:	int3   
   1400181dd:	int3   
   1400181de:	int3   
   1400181df:	int3   
   1400181e0:	lea    rcx,[rdx+0xd0]
   1400181e7:	jmp    0x140003c90
   1400181ec:	lea    rcx,[rdx+0xc0]
   1400181f3:	jmp    0x140003d50
   1400181f8:	lea    rcx,[rdx+0xf0]
   1400181ff:	jmp    0x140003d00
   140018204:	lea    rcx,[rdx+0xc0]
   14001820b:	jmp    0x140003d00
   140018210:	lea    rcx,[rdx+0x40]
   140018217:	jmp    0x140003d70
   14001821c:	lea    rcx,[rdx+0x88]
   140018223:	jmp    0x140003af0
   140018228:	lea    rcx,[rdx+0x68]
   14001822f:	jmp    0x140003c90
   140018234:	mov    rcx,QWORD PTR [rdx+0x88]
   14001823b:	jmp    0x14001716e
   140018240:	lea    rcx,[rdx+0x88]
   140018247:	jmp    0x140003d20
   14001824c:	lea    rcx,[rdx+0x40]
   140018253:	jmp    0x140003c90
   140018258:	lea    rcx,[rdx+0x40]
   14001825f:	jmp    0x140003c90
   140018264:	lea    rcx,[rdx+0x40]
   14001826b:	jmp    0x140003c90
   140018270:	lea    rcx,[rdx+0x40]
   140018277:	jmp    0x140003c90
   14001827c:	rex push rbp
   14001827e:	sub    rsp,0x20
   140018282:	mov    rbp,rdx
   140018285:	mov    eax,DWORD PTR [rbp+0x380]
   14001828b:	and    eax,0x1
   14001828e:	test   eax,eax
   140018290:	je     0x1400182ad
   140018292:	and    DWORD PTR [rbp+0x380],0xfffffffe
   140018299:	lea    rcx,[rbp+0x100]
   1400182a0:	add    rcx,0xa8
   1400182a7:	call   QWORD PTR [rip+0xe33]        # 0x1400190e0
   1400182ad:	add    rsp,0x20
   1400182b1:	pop    rbp
   1400182b2:	ret    
   1400182b3:	lea    rcx,[rdx+0x100]
   1400182ba:	add    rcx,0x10
   1400182be:	rex.W jmp QWORD PTR [rip+0xe4b]        # 0x140019110
   1400182c5:	mov    rcx,QWORD PTR [rdx+0x88]
   1400182cc:	rex.W jmp QWORD PTR [rip+0xddd]        # 0x1400190b0
   1400182d3:	lea    rcx,[rdx+0x100]
   1400182da:	add    rcx,0x8
   1400182de:	jmp    0x140003b60
   1400182e3:	lea    rcx,[rdx+0x100]
   1400182ea:	jmp    0x1400047d0
   1400182ef:	rex push rbp
   1400182f1:	sub    rsp,0x20
   1400182f5:	mov    rbp,rdx
   1400182f8:	mov    eax,DWORD PTR [rbp+0x380]
   1400182fe:	and    eax,0x2
   140018301:	test   eax,eax
   140018303:	je     0x140018320
   140018305:	and    DWORD PTR [rbp+0x380],0xfffffffd
   14001830c:	lea    rcx,[rbp+0x210]
   140018313:	add    rcx,0xb0
   14001831a:	call   QWORD PTR [rip+0xdc0]        # 0x1400190e0
   140018320:	add    rsp,0x20
   140018324:	pop    rbp
   140018325:	ret    
   140018326:	lea    rcx,[rdx+0x210]
   14001832d:	add    rcx,0x18
   140018331:	rex.W jmp QWORD PTR [rip+0xe30]        # 0x140019168
   140018338:	mov    rcx,QWORD PTR [rdx+0x88]
   14001833f:	rex.W jmp QWORD PTR [rip+0xd6a]        # 0x1400190b0
   140018346:	lea    rcx,[rdx+0x210]
   14001834d:	add    rcx,0x10
   140018351:	jmp    0x140003b60
   140018356:	lea    rcx,[rdx+0x210]
   14001835d:	jmp    0x140004750
   140018362:	mov    QWORD PTR [rsp+0x10],rdx
   140018367:	push   rbx
   140018368:	push   rbp
   140018369:	sub    rsp,0x48
   14001836d:	mov    rbp,rdx
   140018370:	mov    rcx,QWORD PTR [rbp+0x320]
   140018377:	mov    rax,QWORD PTR [rcx]
   14001837a:	call   QWORD PTR [rax+0x8]
   14001837d:	mov    rbx,rax
   140018380:	lea    rdx,[rip+0x2101]        # 0x14001a488
   140018387:	mov    rcx,QWORD PTR [rip+0xe2a]        # 0x1400191b8
   14001838e:	call   0x1400014f0
   140018393:	mov    rcx,rax
   140018396:	mov    rdx,rbx
   140018399:	call   0x1400014f0
   14001839e:	mov    rcx,rax
   1400183a1:	lea    rdx,[rip+0xfffffffffffea7a8]        # 0x140002b50
   1400183a8:	call   QWORD PTR [rip+0xd72]        # 0x140019120
   1400183ae:	mov    DWORD PTR [rbp+0x378],0x1
   1400183b8:	lea    rax,[rip+0xffffffffffff389b]        # 0x14000bc5a
   1400183bf:	add    rsp,0x48
   1400183c3:	pop    rbp
   1400183c4:	pop    rbx
   1400183c5:	ret    
   1400183c6:	int3   
   1400183c7:	rex push rbp
   1400183c9:	sub    rsp,0x20
   1400183cd:	mov    rbp,rdx
   1400183d0:	mov    ecx,0x8
   1400183d5:	call   0x140017794
   1400183da:	nop
   1400183db:	add    rsp,0x20
   1400183df:	pop    rbp
   1400183e0:	ret    
   1400183e1:	int3   
   1400183e2:	rex push rbp
   1400183e4:	sub    rsp,0x20
   1400183e8:	mov    rbp,rdx
   1400183eb:	mov    rax,QWORD PTR [rcx]
   1400183ee:	mov    rdx,rcx
   1400183f1:	mov    ecx,DWORD PTR [rax]
   1400183f3:	call   0x1400178c4
   1400183f8:	nop
   1400183f9:	add    rsp,0x20
   1400183fd:	pop    rbp
   1400183fe:	ret    
   1400183ff:	int3   
   140018400:	rex push rbp
   140018402:	sub    rsp,0x20
   140018406:	mov    rbp,rdx
   140018409:	cmp    DWORD PTR [rbp+0x20],0x0
   14001840d:	jne    0x140018425
   14001840f:	mov    r9,QWORD PTR [rbp+0x78]
   140018413:	mov    r8d,DWORD PTR [rbp+0x70]
   140018417:	mov    rdx,QWORD PTR [rbp+0x68]
   14001841b:	mov    rcx,QWORD PTR [rbp+0x60]
   14001841f:	call   0x140017828
   140018424:	nop
   140018425:	add    rsp,0x20
   140018429:	pop    rbp
   14001842a:	ret    
   14001842b:	int3   
   14001842c:	rex push rbp
   14001842e:	sub    rsp,0x20
   140018432:	mov    rbp,rdx
   140018435:	mov    QWORD PTR [rbp+0x38],rcx
   140018439:	mov    QWORD PTR [rbp+0x28],rcx
   14001843d:	mov    rax,QWORD PTR [rbp+0x28]
   140018441:	mov    rcx,QWORD PTR [rax]
   140018444:	mov    QWORD PTR [rbp+0x30],rcx
   140018448:	mov    rax,QWORD PTR [rbp+0x30]
   14001844c:	cmp    DWORD PTR [rax],0xe06d7363
   140018452:	je     0x140018460
   140018454:	mov    DWORD PTR [rbp+0x20],0x0
   14001845b:	mov    eax,DWORD PTR [rbp+0x20]
   14001845e:	jmp    0x140018466
   140018460:	call   0x140017af4
   140018465:	nop
   140018466:	add    rsp,0x20
   14001846a:	pop    rbp
   14001846b:	ret    
   14001846c:	int3   
   14001846d:	int3   
   14001846e:	int3   
   14001846f:	int3   
   140018470:	rex push rbp
   140018472:	sub    rsp,0x20
   140018476:	mov    rbp,rdx
   140018479:	mov    rax,QWORD PTR [rcx]
   14001847c:	xor    ecx,ecx
   14001847e:	cmp    DWORD PTR [rax],0xc0000005
   140018484:	sete   cl
   140018487:	mov    eax,ecx
   140018489:	add    rsp,0x20
   14001848d:	pop    rbp
   14001848e:	ret    
   14001848f:	int3   
   140018490:	lea    rax,[rip+0x1e21]        # 0x14001a2b8
   140018497:	mov    QWORD PTR [rip+0x8b62],rax        # 0x140021000
   14001849e:	ret    
   14001849f:	int3   
   1400184a0:	lea    rax,[rip+0x1e11]        # 0x14001a2b8
   1400184a7:	mov    QWORD PTR [rip+0x8b5a],rax        # 0x140021008
   1400184ae:	ret    
   1400184af:	int3   
   1400184b0:	lea    rax,[rip+0x1e01]        # 0x14001a2b8
   1400184b7:	mov    QWORD PTR [rip+0x8b52],rax        # 0x140021010
   1400184be:	ret    
   1400184bf:	int3   
   1400184c0:	rex push rbx
   1400184c2:	sub    rsp,0x20
   1400184c6:	jmp    0x1400184f7
   1400184c8:	mov    rax,QWORD PTR [rbx]
   1400184cb:	mov    rcx,QWORD PTR [rbx+0x8]
   1400184cf:	mov    QWORD PTR [rip+0x91ca],rax        # 0x1400216a0
   1400184d6:	mov    rax,QWORD PTR [rcx]
   1400184d9:	call   QWORD PTR [rax+0x10]
   1400184dc:	test   rax,rax
   1400184df:	je     0x1400184ef
   1400184e1:	mov    r8,QWORD PTR [rax]
   1400184e4:	mov    edx,0x1
   1400184e9:	mov    rcx,rax
   1400184ec:	call   QWORD PTR [r8]
   1400184ef:	mov    rcx,rbx
   1400184f2:	call   0x14001716e
   1400184f7:	mov    rbx,QWORD PTR [rip+0x91a2]        # 0x1400216a0
   1400184fe:	test   rbx,rbx
   140018501:	jne    0x1400184c8
   140018503:	add    rsp,0x20
   140018507:	pop    rbx
   140018508:	ret    
