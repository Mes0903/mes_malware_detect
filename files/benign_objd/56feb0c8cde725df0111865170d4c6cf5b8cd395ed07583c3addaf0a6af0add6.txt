
56feb0c8cde725df0111865170d4c6cf5b8cd395ed07583c3addaf0a6af0add6.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x17555]        # 0x418570
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x17556]        # 0x418580
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x17559]        # 0x418590
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x1751c]        # 0x418560
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x1738f]        # 0x4183e0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x174f1]        # 0x418550
  40105f:	mov    DWORD PTR [rip+0x19fa3],edx        # 0x41b008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4115a8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x40b680
  401081:	mov    rdx,QWORD PTR [rip+0x173f8]        # 0x418480
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x173de]        # 0x418470
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x17454]        # 0x4184f0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x1737b]        # 0x418420
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x40b260
  4010af:	mov    rax,QWORD PTR [rip+0x172da]        # 0x418390
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4115a8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0xa439]        # 0x40b560
  401127:	call   0x40b550
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x173b5]        # 0x418520
  40116b:	lea    r8,[rip+0x19ea6]        # 0x41b018
  401172:	lea    rdx,[rip+0x19ea7]        # 0x41b020
  401179:	lea    rcx,[rip+0x19ea8]        # 0x41b028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x19e78],eax        # 0x41b000
  401188:	lea    rax,[rip+0x19e71]        # 0x41b000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x17345]        # 0x4184e0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4115c0
  4011a3:	mov    DWORD PTR [rip+0x19e67],eax        # 0x41b010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x1738a]        # 0x418550
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x1725b]        # 0x418450
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x1d366]        # 0x41e568
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x17237]        # 0x418460
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x19dba],0x1        # 0x41b004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x1716c]        # 0x4183d0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x40b870
  40127d:	lea    rcx,[rip+0xab8c]        # 0x40be10
  401284:	call   QWORD PTR [rip+0x1d2d6]        # 0x41e560
  40128a:	mov    rdx,QWORD PTR [rip+0x171af]        # 0x418440
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x40bd20
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x4115f0
  4012a5:	call   0x40b660
  4012aa:	mov    rax,QWORD PTR [rip+0x1712f]        # 0x4183e0
  4012b1:	mov    QWORD PTR [rip+0x1c430],rax        # 0x41d6e8
  4012b8:	mov    rax,QWORD PTR [rip+0x17151]        # 0x418410
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x1c3c9],rax        # 0x41d6e0
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x10cca],eax        # 0x412000
  401336:	mov    r12d,DWORD PTR [rip+0x19ceb]        # 0x41b028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x4114b8
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x19cc2]        # 0x41b020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x411440
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x4114b8
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x4114a8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x19c6a],rbp        # 0x41b020
  4013b6:	call   0x40b230
  4013bb:	mov    rax,QWORD PTR [rip+0x1702e]        # 0x4183f0
  4013c2:	mov    rdx,QWORD PTR [rip+0x19c4f]        # 0x41b018
  4013c9:	mov    ecx,DWORD PTR [rip+0x19c59]        # 0x41b028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x19c3c]        # 0x41b018
  4013dc:	mov    rdx,QWORD PTR [rip+0x19c3d]        # 0x41b020
  4013e3:	call   0x411820
  4013e8:	mov    ecx,DWORD PTR [rip+0x19c1a]        # 0x41b008
  4013ee:	mov    DWORD PTR [rip+0x19c18],eax        # 0x41b00c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x19c02]        # 0x41b004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x411590
  40140b:	mov    eax,DWORD PTR [rip+0x19bfb]        # 0x41b00c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x17029]        # 0x418460
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x411598
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x1704d]        # 0x4184b0
  401463:	mov    rcx,QWORD PTR [rip+0x17036]        # 0x4184a0
  40146a:	call   0x411570
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x1d04f]        # 0x41e4e8
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x17029]        # 0x4184d0
  4014a7:	mov    rcx,QWORD PTR [rip+0x17012]        # 0x4184c0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x411570
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x411538
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x17075]        # 0x418550
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x40b270
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x17045]        # 0x418550
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x40b270
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rsi
  401531:	push   rbx
  401532:	sub    rsp,0x28
  401536:	movzx  eax,BYTE PTR [rcx]
  401539:	mov    rsi,rdx
  40153c:	jmp    0x40154f
  40153e:	xchg   ax,ax
  401540:	cmp    al,0x24
  401542:	lea    r9,[rcx+0x1]
  401546:	movzx  eax,BYTE PTR [rcx+0x1]
  40154a:	je     0x401560
  40154c:	mov    rcx,r9
  40154f:	test   al,al
  401551:	jne    0x401540
  401553:	add    rsp,0x28
  401557:	pop    rbx
  401558:	pop    rsi
  401559:	ret    
  40155a:	nop    WORD PTR [rax+rax*1+0x0]
  401560:	cmp    al,0x7b
  401562:	je     0x4015c1
  401564:	mov    ecx,eax
  401566:	and    ecx,0xffffffdf
  401569:	sub    ecx,0x41
  40156c:	cmp    cl,0x19
  40156f:	jbe    0x401575
  401571:	cmp    al,0x5f
  401573:	jne    0x40154c
  401575:	mov    rbx,r9
  401578:	nop    DWORD PTR [rax+rax*1+0x0]
  401580:	add    rbx,0x1
  401584:	movzx  eax,BYTE PTR [rbx]
  401587:	mov    r8d,eax
  40158a:	and    r8d,0xffffffdf
  40158e:	sub    r8d,0x41
  401592:	cmp    r8b,0x19
  401596:	jbe    0x401580
  401598:	lea    ecx,[rax-0x30]
  40159b:	cmp    cl,0x9
  40159e:	jbe    0x401580
  4015a0:	cmp    al,0x5f
  4015a2:	je     0x401580
  4015a4:	cmp    BYTE PTR [r9-0x1],0x7b
  4015a9:	mov    rcx,rbx
  4015ac:	je     0x4015cb
  4015ae:	mov    rdx,rcx
  4015b1:	mov    rcx,r9
  4015b4:	sub    rdx,r9
  4015b7:	call   rsi
  4015b9:	movzx  eax,BYTE PTR [rbx]
  4015bc:	mov    r9,rbx
  4015bf:	jmp    0x40154c
  4015c1:	lea    r9,[rcx+0x2]
  4015c5:	movzx  eax,BYTE PTR [rcx+0x2]
  4015c9:	jmp    0x401564
  4015cb:	cmp    al,0x7d
  4015cd:	je     0x4015d7
  4015cf:	mov    r9,rbx
  4015d2:	jmp    0x40154c
  4015d7:	add    rbx,0x1
  4015db:	jmp    0x4015ae
  4015dd:	nop    DWORD PTR [rax]
  4015e0:	push   rsi
  4015e1:	push   rbx
  4015e2:	sub    rsp,0x28
  4015e6:	mov    rbx,rcx
  4015e9:	mov    rsi,rdx
  4015ec:	call   QWORD PTR [rip+0x1cfe6]        # 0x41e5d8
  4015f2:	lea    r9,[rax+0x30]
  4015f6:	mov    rcx,rbx
  4015f9:	mov    r8d,0x1
  4015ff:	mov    rdx,rsi
  401602:	call   0x405370
  401607:	mov    ecx,0xa
  40160c:	add    rsp,0x28
  401610:	pop    rbx
  401611:	pop    rsi
  401612:	jmp    0x4051f0
  401617:	nop    WORD PTR [rax+rax*1+0x0]
  401620:	mov    rdx,QWORD PTR [rdx]
  401623:	mov    rcx,QWORD PTR [rcx]
  401626:	jmp    0x411458
  40162b:	nop    DWORD PTR [rax+rax*1+0x0]
  401630:	push   rdi
  401631:	push   rsi
  401632:	push   rbx
  401633:	sub    rsp,0x20
  401637:	mov    rsi,QWORD PTR [rip+0x1cf9a]        # 0x41e5d8
  40163e:	call   rsi
  401640:	mov    rcx,rax
  401643:	call   0x4114e8
  401648:	cmp    eax,0xffffffff
  40164b:	mov    ebx,eax
  40164d:	je     0x401660
  40164f:	mov    eax,ebx
  401651:	add    rsp,0x20
  401655:	pop    rbx
  401656:	pop    rsi
  401657:	pop    rdi
  401658:	ret    
  401659:	nop    DWORD PTR [rax+0x0]
  401660:	call   rsi
  401662:	mov    rcx,rax
  401665:	call   0x411528
  40166a:	test   eax,eax
  40166c:	je     0x40164f
  40166e:	lea    rcx,[rip+0x1198b]        # 0x413000
  401675:	call   0x40b090
  40167a:	lea    rcx,[rip+0x1198e]        # 0x41300f
  401681:	mov    rdi,rax
  401684:	call   0x40b090
  401689:	mov    rsi,rax
  40168c:	call   QWORD PTR [rip+0x1cf86]        # 0x41e618
  401692:	mov    edx,DWORD PTR [rax]
  401694:	mov    r9,rdi
  401697:	mov    r8,rsi
  40169a:	mov    ecx,0x1
  40169f:	call   0x403240
  4016a4:	jmp    0x40164f
  4016a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016b0:	push   rbx
  4016b1:	sub    rsp,0x20
  4016b5:	mov    ebx,ecx
  4016b7:	call   QWORD PTR [rip+0x1cf1b]        # 0x41e5d8
  4016bd:	mov    ecx,ebx
  4016bf:	mov    rdx,rax
  4016c2:	add    rsp,0x20
  4016c6:	pop    rbx
  4016c7:	jmp    0x411418
  4016cc:	nop    DWORD PTR [rax+0x0]
  4016d0:	push   rdi
  4016d1:	push   rsi
  4016d2:	push   rbx
  4016d3:	sub    rsp,0x20
  4016d7:	mov    rdi,rcx
  4016da:	lea    rcx,[rdx+0x1]
  4016de:	mov    rsi,rdx
  4016e1:	call   0x402f50
  4016e6:	mov    r8,rsi
  4016e9:	mov    rbx,rax
  4016ec:	mov    rdx,rdi
  4016ef:	mov    rcx,rax
  4016f2:	call   0x4114a8
  4016f7:	mov    BYTE PTR [rbx+rsi*1],0x0
  4016fb:	mov    r8,QWORD PTR [rip+0x19956]        # 0x41b058
  401702:	mov    rdx,QWORD PTR [rip+0x19957]        # 0x41b060
  401709:	cmp    r8,rdx
  40170c:	jae    0x401730
  40170e:	mov    rax,QWORD PTR [rip+0x1993b]        # 0x41b050
  401715:	lea    rdx,[r8+0x1]
  401719:	mov    QWORD PTR [rip+0x19938],rdx        # 0x41b058
  401720:	mov    QWORD PTR [rax+r8*8],rbx
  401724:	add    rsp,0x20
  401728:	pop    rbx
  401729:	pop    rsi
  40172a:	pop    rdi
  40172b:	ret    
  40172c:	nop    DWORD PTR [rax+0x0]
  401730:	add    rdx,0x2
  401734:	mov    rcx,QWORD PTR [rip+0x19915]        # 0x41b050
  40173b:	lea    rax,[rdx+rdx*1]
  40173f:	shl    rdx,0x4
  401743:	mov    QWORD PTR [rip+0x19916],rax        # 0x41b060
  40174a:	call   0x403030
  40174f:	mov    r8,QWORD PTR [rip+0x19902]        # 0x41b058
  401756:	mov    QWORD PTR [rip+0x198f3],rax        # 0x41b050
  40175d:	jmp    0x401715
  40175f:	nop
  401760:	sub    rsp,0x38
  401764:	movzx  edx,BYTE PTR [rcx]
  401767:	xor    eax,eax
  401769:	and    edx,0xffffffdf
  40176c:	sub    edx,0x41
  40176f:	cmp    dl,0x19
  401772:	ja     0x401780
  401774:	xor    eax,eax
  401776:	cmp    BYTE PTR [rcx+0x1],0x3a
  40177a:	sete   al
  40177d:	add    rax,rax
  401780:	add    rax,rcx
  401783:	movzx  r10d,BYTE PTR [rax]
  401787:	test   r10b,r10b
  40178a:	je     0x4017ea
  40178c:	lea    rdx,[rax+0x1]
  401790:	mov    r8d,r10d
  401793:	mov    r9d,0x1
  401799:	jmp    0x4017b9
  40179b:	nop    DWORD PTR [rax+rax*1+0x0]
  4017a0:	cmp    r8b,0x2f
  4017a4:	je     0x4017bf
  4017a6:	movzx  r8d,BYTE PTR [rdx]
  4017aa:	mov    rcx,rdx
  4017ad:	xor    r9d,r9d
  4017b0:	add    rdx,0x1
  4017b4:	test   r8b,r8b
  4017b7:	je     0x4017d2
  4017b9:	cmp    r8b,0x5c
  4017bd:	jne    0x4017a0
  4017bf:	movzx  r8d,BYTE PTR [rdx]
  4017c3:	mov    rax,rdx
  4017c6:	mov    rcx,rdx
  4017c9:	add    rdx,0x1
  4017cd:	test   r8b,r8b
  4017d0:	jne    0x4017b9
  4017d2:	cmp    BYTE PTR [rax],0x0
  4017d5:	je     0x401820
  4017d7:	test   r9d,r9d
  4017da:	jne    0x4017ea
  4017dc:	movzx  edx,BYTE PTR [rcx-0x1]
  4017e0:	cmp    dl,0x5c
  4017e3:	je     0x4017f0
  4017e5:	cmp    dl,0x2f
  4017e8:	je     0x4017f0
  4017ea:	add    rsp,0x38
  4017ee:	ret    
  4017ef:	nop
  4017f0:	lea    rdx,[rip+0x11e89]        # 0x413680
  4017f7:	lea    rcx,[rip+0x11e92]        # 0x413690
  4017fe:	mov    r8d,0x50
  401804:	mov    QWORD PTR [rsp+0x28],rax
  401809:	call   0x40cb10
  40180e:	mov    rax,QWORD PTR [rsp+0x28]
  401813:	add    rsp,0x38
  401817:	ret    
  401818:	nop    DWORD PTR [rax+rax*1+0x0]
  401820:	cmp    r10b,0x5c
  401824:	je     0x40182c
  401826:	cmp    r10b,0x2f
  40182a:	jne    0x4017d7
  40182c:	test   r9d,r9d
  40182f:	je     0x4017dc
  401831:	sub    rax,0x1
  401835:	add    rsp,0x38
  401839:	ret    
  40183a:	nop
  40183b:	nop
  40183c:	nop
  40183d:	nop
  40183e:	nop
  40183f:	nop
  401840:	push   rdi
  401841:	push   rsi
  401842:	push   rbx
  401843:	sub    rsp,0x20
  401847:	mov    rbx,QWORD PTR [rip+0x1cd8a]        # 0x41e5d8
  40184e:	call   rbx
  401850:	lea    rcx,[rax+0x30]
  401854:	call   0x4019f0
  401859:	test   eax,eax
  40185b:	mov    rsi,QWORD PTR [rip+0x1cdb6]        # 0x41e618
  401862:	jne    0x4018b2
  401864:	call   rsi
  401866:	mov    DWORD PTR [rax],0x0
  40186c:	call   rbx
  40186e:	lea    rcx,[rax+0x60]
  401872:	call   0x411528
  401877:	test   eax,eax
  401879:	jne    0x4018db
  40187b:	call   rbx
  40187d:	lea    rcx,[rax+0x60]
  401881:	call   0x411520
  401886:	test   eax,eax
  401888:	jne    0x4018db
  40188a:	call   rbx
  40188c:	lea    rcx,[rax+0x60]
  401890:	call   0x411530
  401895:	test   eax,eax
  401897:	jne    0x4018a1
  401899:	add    rsp,0x20
  40189d:	pop    rbx
  40189e:	pop    rsi
  40189f:	pop    rdi
  4018a0:	ret    
  4018a1:	call   rsi
  4018a3:	cmp    DWORD PTR [rax],0x9
  4018a6:	je     0x401899
  4018a8:	mov    ecx,0x1
  4018ad:	call   0x411538
  4018b2:	lea    rcx,[rip+0x11e07]        # 0x4136c0
  4018b9:	call   0x40b090
  4018be:	mov    rdi,rax
  4018c1:	call   rsi
  4018c3:	mov    edx,DWORD PTR [rax]
  4018c5:	lea    r8,[rip+0x11e00]        # 0x4136cc
  4018cc:	mov    r9,rdi
  4018cf:	mov    ecx,0x1
  4018d4:	call   0x403240
  4018d9:	jmp    0x401864
  4018db:	call   rbx
  4018dd:	lea    rcx,[rax+0x60]
  4018e1:	call   0x411530
  4018e6:	mov    ecx,0x1
  4018eb:	call   0x411538
  4018f0:	nop
  4018f1:	nop
  4018f2:	nop
  4018f3:	nop
  4018f4:	nop
  4018f5:	nop
  4018f6:	nop
  4018f7:	nop
  4018f8:	nop
  4018f9:	nop
  4018fa:	nop
  4018fb:	nop
  4018fc:	nop
  4018fd:	nop
  4018fe:	nop
  4018ff:	nop
  401900:	push   rdi
  401901:	push   rsi
  401902:	push   rbx
  401903:	sub    rsp,0x20
  401907:	mov    rbx,rcx
  40190a:	mov    edi,edx
  40190c:	call   QWORD PTR [rip+0x1ccc6]        # 0x41e5d8
  401912:	add    rax,0x30
  401916:	cmp    rbx,rax
  401919:	je     0x401983
  40191b:	mov    rsi,QWORD PTR [rip+0x1ccf6]        # 0x41e618
  401922:	call   rsi
  401924:	mov    rcx,rbx
  401927:	mov    DWORD PTR [rax],0x0
  40192d:	call   0x411528
  401932:	test   eax,eax
  401934:	mov    rcx,rbx
  401937:	jne    0x401995
  401939:	test   dil,dil
  40193c:	je     0x401970
  40193e:	call   0x411520
  401943:	test   eax,eax
  401945:	je     0x4019c3
  401947:	call   rsi
  401949:	mov    edi,DWORD PTR [rax]
  40194b:	mov    rcx,rbx
  40194e:	call   0x411530
  401953:	call   rsi
  401955:	mov    DWORD PTR [rax],edi
  401957:	call   rsi
  401959:	cmp    DWORD PTR [rax],0x20
  40195c:	setne  al
  40195f:	movzx  eax,al
  401962:	neg    eax
  401964:	add    rsp,0x20
  401968:	pop    rbx
  401969:	pop    rsi
  40196a:	pop    rdi
  40196b:	ret    
  40196c:	nop    DWORD PTR [rax+0x0]
  401970:	call   0x411530
  401975:	test   eax,eax
  401977:	jne    0x401957
  401979:	xor    eax,eax
  40197b:	add    rsp,0x20
  40197f:	pop    rbx
  401980:	pop    rsi
  401981:	pop    rdi
  401982:	ret    
  401983:	cmp    BYTE PTR [rip+0x196e6],0x0        # 0x41b070
  40198a:	jne    0x401979
  40198c:	mov    BYTE PTR [rip+0x196dd],0x1        # 0x41b070
  401993:	jmp    0x40191b
  401995:	call   0x411520
  40199a:	test   eax,eax
  40199c:	jne    0x401947
  40199e:	xor    ecx,ecx
  4019a0:	mov    rdx,rbx
  4019a3:	call   0x405140
  4019a8:	cmp    eax,0xffffffff
  4019ab:	je     0x401947
  4019ad:	mov    rcx,rbx
  4019b0:	call   0x411520
  4019b5:	test   eax,eax
  4019b7:	jne    0x401947
  4019b9:	call   rsi
  4019bb:	mov    DWORD PTR [rax],0x0
  4019c1:	jmp    0x401947
  4019c3:	mov    rcx,rbx
  4019c6:	call   0x411530
  4019cb:	test   eax,eax
  4019cd:	je     0x401979
  4019cf:	call   rsi
  4019d1:	cmp    DWORD PTR [rax],0x9
  4019d4:	jne    0x401957
  4019d6:	xor    eax,eax
  4019d8:	jmp    0x40197b
  4019da:	nop    WORD PTR [rax+rax*1+0x0]
  4019e0:	xor    edx,edx
  4019e2:	jmp    0x401900
  4019e7:	nop    WORD PTR [rax+rax*1+0x0]
  4019f0:	mov    edx,0x1
  4019f5:	jmp    0x401900
  4019fa:	nop
  4019fb:	nop
  4019fc:	nop
  4019fd:	nop
  4019fe:	nop
  4019ff:	nop
  401a00:	push   rdi
  401a01:	push   rsi
  401a02:	push   rbx
  401a03:	sub    rsp,0x20
  401a07:	test   rcx,rcx
  401a0a:	mov    rbx,rcx
  401a0d:	je     0x401a77
  401a0f:	mov    edx,0x2f
  401a14:	call   0x411428
  401a19:	test   rax,rax
  401a1c:	je     0x401a68
  401a1e:	lea    rdx,[rax+0x1]
  401a22:	mov    rcx,rdx
  401a25:	sub    rcx,rbx
  401a28:	cmp    rcx,0x6
  401a2c:	jle    0x401a68
  401a2e:	lea    rsi,[rax-0x6]
  401a32:	lea    rdi,[rip+0x11ccf]        # 0x413708
  401a39:	mov    ecx,0x7
  401a3e:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401a40:	jne    0x401a68
  401a42:	lea    rdi,[rip+0x11cc7]        # 0x413710
  401a49:	mov    ecx,0x3
  401a4e:	mov    rsi,rdx
  401a51:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401a53:	seta   r8b
  401a57:	setb   cl
  401a5a:	add    rax,0x4
  401a5e:	cmp    r8b,cl
  401a61:	cmovne rax,rdx
  401a65:	mov    rbx,rax
  401a68:	mov    QWORD PTR [rip+0x19611],rbx        # 0x41b080
  401a6f:	add    rsp,0x20
  401a73:	pop    rbx
  401a74:	pop    rsi
  401a75:	pop    rdi
  401a76:	ret    
  401a77:	call   QWORD PTR [rip+0x1cb5b]        # 0x41e5d8
  401a7d:	lea    rcx,[rip+0x11c4c]        # 0x4136d0
  401a84:	lea    rdx,[rax+0x60]
  401a88:	call   0x405210
  401a8d:	call   0x411548
  401a92:	nop
  401a93:	nop
  401a94:	nop
  401a95:	nop
  401a96:	nop
  401a97:	nop
  401a98:	nop
  401a99:	nop
  401a9a:	nop
  401a9b:	nop
  401a9c:	nop
  401a9d:	nop
  401a9e:	nop
  401a9f:	nop
  401aa0:	push   r15
  401aa2:	push   r14
  401aa4:	push   r13
  401aa6:	push   r12
  401aa8:	push   rbp
  401aa9:	push   rdi
  401aaa:	push   rsi
  401aab:	push   rbx
  401aac:	sub    rsp,0xc8
  401ab3:	lea    rbx,[rsp+0x40]
  401ab8:	mov    r12,rcx
  401abb:	mov    rcx,rdx
  401abe:	mov    edx,0x2
  401ac3:	lea    rbp,[rsp+0x80]
  401acb:	call   0x402870
  401ad0:	mov    QWORD PTR [rsp+0x28],rax
  401ad5:	lea    rax,[rbx+0x4]
  401ad9:	mov    rdi,QWORD PTR [rip+0x16920]        # 0x418400
  401ae0:	mov    QWORD PTR [rsp+0x20],rax
  401ae5:	lea    rax,[rbp+0x4]
  401ae9:	mov    QWORD PTR [rsp+0x30],rax
  401aee:	xchg   ax,ax
  401af0:	cmp    BYTE PTR [r12],0x0
  401af5:	je     0x401dce
  401afb:	mov    rdx,QWORD PTR [rsp+0x28]
  401b00:	mov    rcx,r12
  401b03:	call   0x408ac0
  401b08:	test   rax,rax
  401b0b:	mov    rsi,rax
  401b0e:	je     0x401dce
  401b14:	mov    rax,QWORD PTR [rdi]
  401b17:	cmp    DWORD PTR [rax],0x1
  401b1a:	jle    0x4022b0
  401b20:	cmp    r12,rsi
  401b23:	mov    QWORD PTR [rsp+0x50],r12
  401b28:	mov    BYTE PTR [rsp+0x40],0x0
  401b2d:	mov    DWORD PTR [rsp+0x44],0x0
  401b35:	mov    BYTE PTR [rsp+0x48],0x0
  401b3a:	jae    0x401c7a
  401b40:	mov    r12,QWORD PTR [rip+0x169f9]        # 0x418540
  401b47:	nop    WORD PTR [rax+rax*1+0x0]
  401b50:	cmp    BYTE PTR [rsp+0x40],0x0
  401b55:	jne    0x401bb8
  401b57:	mov    r13,QWORD PTR [rsp+0x50]
  401b5c:	movzx  eax,BYTE PTR [r13+0x0]
  401b61:	mov    edx,eax
  401b63:	and    eax,0x1f
  401b66:	shr    dl,0x5
  401b69:	and    edx,0x7
  401b6c:	mov    edx,DWORD PTR [r12+rdx*4]
  401b70:	bt     edx,eax
  401b73:	jae    0x401ba1
  401b75:	mov    QWORD PTR [rsp+0x58],0x1
  401b7e:	movsx  cx,BYTE PTR [r13+0x0]
  401b84:	mov    BYTE PTR [rsp+0x60],0x1
  401b89:	mov    BYTE PTR [rsp+0x48],0x1
  401b8e:	mov    WORD PTR [rsp+0x62],cx
  401b93:	test   cx,cx
  401b96:	jne    0x401c4d
  401b9c:	call   0x411548
  401ba1:	mov    rcx,QWORD PTR [rsp+0x20]
  401ba6:	call   0x4046b0
  401bab:	test   eax,eax
  401bad:	je     0x402300
  401bb3:	mov    BYTE PTR [rsp+0x40],0x1
  401bb8:	mov    rax,QWORD PTR [rdi]
  401bbb:	mov    r13,QWORD PTR [rsp+0x50]
  401bc0:	movsxd rdx,DWORD PTR [rax]
  401bc3:	mov    rcx,r13
  401bc6:	call   0x402830
  401bcb:	lea    rcx,[rbx+0x22]
  401bcf:	lea    r9,[rbx+0x4]
  401bd3:	mov    r8,rax
  401bd6:	mov    rdx,r13
  401bd9:	call   0x4045a0
  401bde:	cmp    rax,0xffffffffffffffff
  401be2:	mov    QWORD PTR [rsp+0x58],rax
  401be7:	je     0x402150
  401bed:	cmp    rax,0xfffffffffffffffe
  401bf1:	je     0x4021b0
  401bf7:	test   rax,rax
  401bfa:	jne    0x401c1f
  401bfc:	mov    rax,QWORD PTR [rsp+0x50]
  401c01:	mov    QWORD PTR [rsp+0x58],0x1
  401c0a:	cmp    BYTE PTR [rax],0x0
  401c0d:	jne    0x4023e1
  401c13:	cmp    WORD PTR [rsp+0x62],0x0
  401c19:	jne    0x4023c3
  401c1f:	lea    rcx,[rbx+0x4]
  401c23:	mov    BYTE PTR [rsp+0x60],0x1
  401c28:	call   0x4046b0
  401c2d:	test   eax,eax
  401c2f:	je     0x401c36
  401c31:	mov    BYTE PTR [rsp+0x40],0x0
  401c36:	movzx  eax,BYTE PTR [rsp+0x60]
  401c3b:	movzx  ecx,WORD PTR [rsp+0x62]
  401c40:	mov    BYTE PTR [rsp+0x48],0x1
  401c45:	test   al,al
  401c47:	jne    0x401b93
  401c4d:	mov    r13,QWORD PTR [rsp+0x50]
  401c52:	mov    rax,r13
  401c55:	add    rax,QWORD PTR [rsp+0x58]
  401c5a:	movzx  edx,BYTE PTR [rsp+0x60]
  401c5f:	mov    BYTE PTR [rsp+0x48],0x0
  401c64:	cmp    rsi,rax
  401c67:	mov    QWORD PTR [rsp+0x50],rax
  401c6c:	ja     0x401b50
  401c72:	test   dl,dl
  401c74:	jne    0x4023ff
  401c7a:	mov    BYTE PTR [rsp+0x3f],0x1
  401c7f:	mov    rax,QWORD PTR [rsp+0x28]
  401c84:	mov    r12,QWORD PTR [rip+0x168b5]        # 0x418540
  401c8b:	mov    QWORD PTR [rsp+0x50],rsi
  401c90:	mov    BYTE PTR [rsp+0x40],0x0
  401c95:	mov    DWORD PTR [rsp+0x44],0x0
  401c9d:	mov    BYTE PTR [rsp+0x48],0x0
  401ca2:	mov    QWORD PTR [rsp+0x90],rax
  401caa:	mov    BYTE PTR [rsp+0x80],0x0
  401cb2:	mov    r13,r12
  401cb5:	mov    DWORD PTR [rsp+0x84],0x0
  401cc0:	mov    BYTE PTR [rsp+0x88],0x0
  401cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  401cd0:	cmp    BYTE PTR [rsp+0x80],0x0
  401cd8:	jne    0x401eea
  401cde:	mov    rcx,QWORD PTR [rsp+0x90]
  401ce6:	movzx  eax,BYTE PTR [rcx]
  401ce9:	mov    edx,eax
  401ceb:	and    eax,0x1f
  401cee:	shr    dl,0x5
  401cf1:	and    edx,0x7
  401cf4:	mov    edx,DWORD PTR [r12+rdx*4]
  401cf8:	bt     edx,eax
  401cfb:	jae    0x401ed0
  401d01:	mov    QWORD PTR [rsp+0x98],0x1
  401d0d:	movsx  ax,BYTE PTR [rcx]
  401d11:	mov    BYTE PTR [rsp+0xa0],0x1
  401d19:	mov    BYTE PTR [rsp+0x88],0x1
  401d21:	mov    WORD PTR [rsp+0xa2],ax
  401d29:	cmp    WORD PTR [rsp+0xa2],0x0
  401d32:	jne    0x401f95
  401d38:	movzx  r12d,BYTE PTR [rsp+0x48]
  401d3e:	test   r12b,r12b
  401d41:	je     0x4021d1
  401d47:	movzx  eax,WORD PTR [rsp+0x62]
  401d4c:	movzx  r12d,BYTE PTR [rsp+0x60]
  401d52:	test   r12b,r12b
  401d55:	je     0x401d5c
  401d57:	test   ax,ax
  401d5a:	je     0x401d67
  401d5c:	cmp    BYTE PTR [rsp+0x60],0x0
  401d61:	jne    0x402418
  401d67:	cmp    BYTE PTR [rsp+0x3f],0x0
  401d6c:	jne    0x4022e2
  401d72:	mov    QWORD PTR [rsp+0x50],rsi
  401d77:	mov    BYTE PTR [rsp+0x40],0x0
  401d7c:	mov    DWORD PTR [rsp+0x44],0x0
  401d84:	mov    BYTE PTR [rsp+0x48],0x0
  401d89:	movzx  eax,BYTE PTR [rsi]
  401d8c:	mov    rcx,QWORD PTR [rip+0x167ad]        # 0x418540
  401d93:	mov    edx,eax
  401d95:	and    eax,0x1f
  401d98:	shr    dl,0x5
  401d9b:	and    edx,0x7
  401d9e:	mov    edx,DWORD PTR [rcx+rdx*4]
  401da1:	bt     edx,eax
  401da4:	jae    0x401df0
  401da6:	mov    QWORD PTR [rsp+0x58],0x1
  401daf:	movsx  ax,BYTE PTR [rsi]
  401db3:	mov    BYTE PTR [rsp+0x60],0x1
  401db8:	mov    BYTE PTR [rsp+0x48],0x1
  401dbd:	mov    WORD PTR [rsp+0x62],ax
  401dc2:	cmp    WORD PTR [rsp+0x62],0x0
  401dc8:	jne    0x401ec3
  401dce:	xor    ebx,ebx
  401dd0:	mov    rcx,QWORD PTR [rsp+0x28]
  401dd5:	call   0x411500
  401dda:	mov    eax,ebx
  401ddc:	add    rsp,0xc8
  401de3:	pop    rbx
  401de4:	pop    rsi
  401de5:	pop    rdi
  401de6:	pop    rbp
  401de7:	pop    r12
  401de9:	pop    r13
  401deb:	pop    r14
  401ded:	pop    r15
  401def:	ret    
  401df0:	mov    rcx,QWORD PTR [rsp+0x20]
  401df5:	call   0x4046b0
  401dfa:	test   eax,eax
  401dfc:	je     0x402432
  401e02:	mov    rax,QWORD PTR [rdi]
  401e05:	mov    r12,QWORD PTR [rsp+0x50]
  401e0a:	mov    BYTE PTR [rsp+0x40],0x1
  401e0f:	movsxd rdx,DWORD PTR [rax]
  401e12:	mov    rcx,r12
  401e15:	call   0x402830
  401e1a:	mov    r9,QWORD PTR [rsp+0x20]
  401e1f:	lea    rcx,[rbx+0x22]
  401e23:	mov    r8,rax
  401e26:	mov    rdx,r12
  401e29:	call   0x4045a0
  401e2e:	cmp    rax,0xffffffffffffffff
  401e32:	mov    QWORD PTR [rsp+0x58],rax
  401e37:	je     0x402450
  401e3d:	cmp    rax,0xfffffffffffffffe
  401e41:	je     0x40247e
  401e47:	test   rax,rax
  401e4a:	jne    0x401e99
  401e4c:	mov    rax,QWORD PTR [rsp+0x50]
  401e51:	mov    QWORD PTR [rsp+0x58],0x1
  401e5a:	cmp    BYTE PTR [rax],0x0
  401e5d:	je     0x401e78
  401e5f:	lea    rdx,[rip+0x118ba]        # 0x413720
  401e66:	lea    rcx,[rip+0x118d4]        # 0x413741
  401e6d:	mov    r8d,0xb2
  401e73:	call   0x40cb10
  401e78:	cmp    WORD PTR [rsp+0x62],0x0
  401e7e:	je     0x401e99
  401e80:	lea    rdx,[rip+0x11899]        # 0x413720
  401e87:	lea    rcx,[rip+0x118ca]        # 0x413758
  401e8e:	mov    r8d,0xb3
  401e94:	call   0x40cb10
  401e99:	mov    rcx,QWORD PTR [rsp+0x20]
  401e9e:	mov    BYTE PTR [rsp+0x60],0x1
  401ea3:	call   0x4046b0
  401ea8:	test   eax,eax
  401eaa:	je     0x401eb1
  401eac:	mov    BYTE PTR [rsp+0x40],0x0
  401eb1:	movzx  eax,BYTE PTR [rsp+0x60]
  401eb6:	mov    BYTE PTR [rsp+0x48],0x1
  401ebb:	test   al,al
  401ebd:	jne    0x401dc2
  401ec3:	add    rsi,QWORD PTR [rsp+0x58]
  401ec8:	mov    r12,rsi
  401ecb:	jmp    0x401af0
  401ed0:	mov    rcx,QWORD PTR [rsp+0x30]
  401ed5:	call   0x4046b0
  401eda:	test   eax,eax
  401edc:	je     0x402170
  401ee2:	mov    BYTE PTR [rsp+0x80],0x1
  401eea:	mov    rax,QWORD PTR [rdi]
  401eed:	mov    r14,QWORD PTR [rsp+0x90]
  401ef5:	movsxd rdx,DWORD PTR [rax]
  401ef8:	mov    rcx,r14
  401efb:	call   0x402830
  401f00:	lea    rcx,[rbp+0x22]
  401f04:	lea    r9,[rbp+0x4]
  401f08:	mov    r8,rax
  401f0b:	mov    rdx,r14
  401f0e:	call   0x4045a0
  401f13:	cmp    rax,0xffffffffffffffff
  401f17:	mov    QWORD PTR [rsp+0x98],rax
  401f1f:	je     0x4020e0
  401f25:	cmp    rax,0xfffffffffffffffe
  401f29:	je     0x402114
  401f2f:	test   rax,rax
  401f32:	jne    0x401f60
  401f34:	mov    rax,QWORD PTR [rsp+0x90]
  401f3c:	mov    QWORD PTR [rsp+0x98],0x1
  401f48:	cmp    BYTE PTR [rax],0x0
  401f4b:	jne    0x402250
  401f51:	cmp    WORD PTR [rsp+0xa2],0x0
  401f5a:	jne    0x402230
  401f60:	lea    rcx,[rbp+0x4]
  401f64:	mov    BYTE PTR [rsp+0xa0],0x1
  401f6c:	call   0x4046b0
  401f71:	test   eax,eax
  401f73:	je     0x401f7d
  401f75:	mov    BYTE PTR [rsp+0x80],0x0
  401f7d:	movzx  eax,BYTE PTR [rsp+0xa0]
  401f85:	mov    BYTE PTR [rsp+0x88],0x1
  401f8d:	test   al,al
  401f8f:	jne    0x401d29
  401f95:	movzx  r14d,BYTE PTR [rsp+0x48]
  401f9b:	test   r14b,r14b
  401f9e:	je     0x401fe0
  401fa0:	movzx  r14d,BYTE PTR [rsp+0x60]
  401fa6:	test   r14b,r14b
  401fa9:	jne    0x40202b
  401faf:	mov    rax,QWORD PTR [rsp+0x58]
  401fb4:	mov    BYTE PTR [rsp+0x48],0x0
  401fb9:	add    QWORD PTR [rsp+0x50],rax
  401fbe:	mov    BYTE PTR [rsp+0x88],0x0
  401fc6:	mov    rax,QWORD PTR [rsp+0x98]
  401fce:	add    QWORD PTR [rsp+0x90],rax
  401fd6:	jmp    0x401cd0
  401fdb:	nop    DWORD PTR [rax+rax*1+0x0]
  401fe0:	cmp    BYTE PTR [rsp+0x40],0x0
  401fe5:	jne    0x402057
  401fe7:	mov    rcx,QWORD PTR [rsp+0x50]
  401fec:	movzx  eax,BYTE PTR [rcx]
  401fef:	mov    edx,eax
  401ff1:	and    eax,0x1f
  401ff4:	shr    dl,0x5
  401ff7:	and    edx,0x7
  401ffa:	mov    edx,DWORD PTR [r13+rdx*4+0x0]
  401fff:	bt     edx,eax
  402002:	jae    0x402040
  402004:	mov    QWORD PTR [rsp+0x58],0x1
  40200d:	movsx  ax,BYTE PTR [rcx]
  402011:	mov    r14d,0x1
  402017:	mov    BYTE PTR [rsp+0x60],0x1
  40201c:	mov    WORD PTR [rsp+0x62],ax
  402021:	test   r14b,r14b
  402024:	mov    BYTE PTR [rsp+0x48],0x1
  402029:	je     0x401faf
  40202b:	cmp    WORD PTR [rsp+0x62],0x0
  402031:	je     0x401b9c
  402037:	jmp    0x401faf
  40203c:	nop    DWORD PTR [rax+0x0]
  402040:	mov    rcx,QWORD PTR [rsp+0x20]
  402045:	call   0x4046b0
  40204a:	test   eax,eax
  40204c:	je     0x402190
  402052:	mov    BYTE PTR [rsp+0x40],0x1
  402057:	mov    rax,QWORD PTR [rdi]
  40205a:	mov    r15,QWORD PTR [rsp+0x50]
  40205f:	movsxd rdx,DWORD PTR [rax]
  402062:	mov    rcx,r15
  402065:	call   0x402830
  40206a:	lea    rcx,[rbx+0x22]
  40206e:	lea    r9,[rbx+0x4]
  402072:	mov    r8,rax
  402075:	mov    rdx,r15
  402078:	call   0x4045a0
  40207d:	cmp    rax,0xffffffffffffffff
  402081:	mov    QWORD PTR [rsp+0x58],rax
  402086:	je     0x402101
  402088:	cmp    rax,0xfffffffffffffffe
  40208c:	je     0x402133
  402092:	test   rax,rax
  402095:	jne    0x4020ba
  402097:	mov    rax,QWORD PTR [rsp+0x50]
  40209c:	mov    QWORD PTR [rsp+0x58],0x1
  4020a5:	cmp    BYTE PTR [rax],0x0
  4020a8:	jne    0x402290
  4020ae:	cmp    WORD PTR [rsp+0x62],0x0
  4020b4:	jne    0x402270
  4020ba:	lea    rcx,[rbx+0x4]
  4020be:	mov    BYTE PTR [rsp+0x60],0x1
  4020c3:	call   0x4046b0
  4020c8:	test   eax,eax
  4020ca:	je     0x4020d1
  4020cc:	mov    BYTE PTR [rsp+0x40],0x0
  4020d1:	movzx  r14d,BYTE PTR [rsp+0x60]
  4020d7:	jmp    0x402021
  4020dc:	nop    DWORD PTR [rax+0x0]
  4020e0:	mov    QWORD PTR [rsp+0x98],0x1
  4020ec:	mov    BYTE PTR [rsp+0xa0],0x0
  4020f4:	mov    BYTE PTR [rsp+0x88],0x1
  4020fc:	jmp    0x401f95
  402101:	mov    QWORD PTR [rsp+0x58],0x1
  40210a:	mov    BYTE PTR [rsp+0x60],0x0
  40210f:	jmp    0x402021
  402114:	mov    rcx,QWORD PTR [rsp+0x90]
  40211c:	call   0x411440
  402121:	mov    BYTE PTR [rsp+0xa0],0x0
  402129:	mov    QWORD PTR [rsp+0x98],rax
  402131:	jmp    0x4020f4
  402133:	mov    rcx,QWORD PTR [rsp+0x50]
  402138:	call   0x411440
  40213d:	mov    BYTE PTR [rsp+0x60],0x0
  402142:	mov    QWORD PTR [rsp+0x58],rax
  402147:	jmp    0x402021
  40214c:	nop    DWORD PTR [rax+0x0]
  402150:	mov    QWORD PTR [rsp+0x58],0x1
  402159:	mov    BYTE PTR [rsp+0x60],0x0
  40215e:	movzx  ecx,WORD PTR [rsp+0x62]
  402163:	mov    r13,QWORD PTR [rsp+0x50]
  402168:	jmp    0x401c52
  40216d:	nop    DWORD PTR [rax]
  402170:	lea    rdx,[rip+0x115a9]        # 0x413720
  402177:	lea    rcx,[rip+0x115ac]        # 0x41372a
  40217e:	mov    r8d,0x96
  402184:	call   0x40cb10
  402189:	jmp    0x401ee2
  40218e:	xchg   ax,ax
  402190:	lea    rdx,[rip+0x11589]        # 0x413720
  402197:	lea    rcx,[rip+0x1158c]        # 0x41372a
  40219e:	mov    r8d,0x96
  4021a4:	call   0x40cb10
  4021a9:	jmp    0x402052
  4021ae:	xchg   ax,ax
  4021b0:	mov    r13,QWORD PTR [rsp+0x50]
  4021b5:	mov    rcx,r13
  4021b8:	call   0x411440
  4021bd:	mov    BYTE PTR [rsp+0x60],0x0
  4021c2:	mov    QWORD PTR [rsp+0x58],rax
  4021c7:	movzx  ecx,WORD PTR [rsp+0x62]
  4021cc:	jmp    0x401c52
  4021d1:	cmp    BYTE PTR [rsp+0x40],0x0
  4021d6:	jne    0x402335
  4021dc:	mov    rcx,QWORD PTR [rsp+0x50]
  4021e1:	mov    r8,QWORD PTR [rip+0x16358]        # 0x418540
  4021e8:	movzx  eax,BYTE PTR [rcx]
  4021eb:	mov    edx,eax
  4021ed:	and    eax,0x1f
  4021f0:	shr    dl,0x5
  4021f3:	and    edx,0x7
  4021f6:	mov    edx,DWORD PTR [r8+rdx*4]
  4021fa:	bt     edx,eax
  4021fd:	jae    0x40231e
  402203:	mov    QWORD PTR [rsp+0x58],0x1
  40220c:	movsx  ax,BYTE PTR [rcx]
  402210:	mov    r12d,0x1
  402216:	mov    BYTE PTR [rsp+0x60],0x1
  40221b:	mov    WORD PTR [rsp+0x62],ax
  402220:	mov    BYTE PTR [rsp+0x48],0x1
  402225:	jmp    0x401d52
  40222a:	nop    WORD PTR [rax+rax*1+0x0]
  402230:	lea    rdx,[rip+0x114e9]        # 0x413720
  402237:	lea    rcx,[rip+0x1151a]        # 0x413758
  40223e:	mov    r8d,0xb3
  402244:	call   0x40cb10
  402249:	jmp    0x401f60
  40224e:	xchg   ax,ax
  402250:	lea    rdx,[rip+0x114c9]        # 0x413720
  402257:	lea    rcx,[rip+0x114e3]        # 0x413741
  40225e:	mov    r8d,0xb2
  402264:	call   0x40cb10
  402269:	jmp    0x401f51
  40226e:	xchg   ax,ax
  402270:	lea    rdx,[rip+0x114a9]        # 0x413720
  402277:	lea    rcx,[rip+0x114da]        # 0x413758
  40227e:	mov    r8d,0xb3
  402284:	call   0x40cb10
  402289:	jmp    0x4020ba
  40228e:	xchg   ax,ax
  402290:	lea    rdx,[rip+0x11489]        # 0x413720
  402297:	lea    rcx,[rip+0x114a3]        # 0x413741
  40229e:	mov    r8d,0xb2
  4022a4:	call   0x40cb10
  4022a9:	jmp    0x4020ae
  4022ae:	xchg   ax,ax
  4022b0:	cmp    r12,rsi
  4022b3:	jae    0x4022c3
  4022b5:	movzx  ecx,BYTE PTR [rsi-0x1]
  4022b9:	call   QWORD PTR [rip+0x1c411]        # 0x41e6d0
  4022bf:	test   eax,eax
  4022c1:	jne    0x4022ec
  4022c3:	mov    rcx,QWORD PTR [rsp+0x28]
  4022c8:	call   0x411440
  4022cd:	movzx  eax,BYTE PTR [rsi+rax*1]
  4022d1:	test   al,al
  4022d3:	je     0x4022e2
  4022d5:	movzx  ecx,al
  4022d8:	call   QWORD PTR [rip+0x1c3f2]        # 0x41e6d0
  4022de:	test   eax,eax
  4022e0:	jne    0x4022ec
  4022e2:	mov    ebx,0x1
  4022e7:	jmp    0x401dd0
  4022ec:	cmp    BYTE PTR [rsi],0x0
  4022ef:	je     0x401dce
  4022f5:	lea    r12,[rsi+0x1]
  4022f9:	jmp    0x401af0
  4022fe:	xchg   ax,ax
  402300:	lea    rdx,[rip+0x11419]        # 0x413720
  402307:	lea    rcx,[rip+0x1141c]        # 0x41372a
  40230e:	mov    r8d,0x96
  402314:	call   0x40cb10
  402319:	jmp    0x401bb3
  40231e:	mov    rcx,QWORD PTR [rsp+0x20]
  402323:	call   0x4046b0
  402328:	test   eax,eax
  40232a:	je     0x4024b8
  402330:	mov    BYTE PTR [rsp+0x40],0x1
  402335:	mov    rax,QWORD PTR [rdi]
  402338:	mov    r13,QWORD PTR [rsp+0x50]
  40233d:	movsxd rdx,DWORD PTR [rax]
  402340:	mov    rcx,r13
  402343:	call   0x402830
  402348:	lea    rcx,[rbx+0x22]
  40234c:	lea    r9,[rbx+0x4]
  402350:	mov    r8,rax
  402353:	mov    rdx,r13
  402356:	call   0x4045a0
  40235b:	cmp    rax,0xffffffffffffffff
  40235f:	mov    QWORD PTR [rsp+0x58],rax
  402364:	je     0x402466
  40236a:	cmp    rax,0xfffffffffffffffe
  40236e:	je     0x40249a
  402374:	test   rax,rax
  402377:	jne    0x40239c
  402379:	mov    rax,QWORD PTR [rsp+0x50]
  40237e:	mov    QWORD PTR [rsp+0x58],0x1
  402387:	cmp    BYTE PTR [rax],0x0
  40238a:	jne    0x4024d6
  402390:	cmp    WORD PTR [rsp+0x62],0x0
  402396:	jne    0x4024fb
  40239c:	lea    rcx,[rbx+0x4]
  4023a0:	mov    BYTE PTR [rsp+0x60],0x1
  4023a5:	call   0x4046b0
  4023aa:	test   eax,eax
  4023ac:	je     0x4023b3
  4023ae:	mov    BYTE PTR [rsp+0x40],0x0
  4023b3:	movzx  eax,WORD PTR [rsp+0x62]
  4023b8:	movzx  r12d,BYTE PTR [rsp+0x60]
  4023be:	jmp    0x402220
  4023c3:	lea    rdx,[rip+0x11356]        # 0x413720
  4023ca:	lea    rcx,[rip+0x11387]        # 0x413758
  4023d1:	mov    r8d,0xb3
  4023d7:	call   0x40cb10
  4023dc:	jmp    0x401c1f
  4023e1:	lea    rdx,[rip+0x11338]        # 0x413720
  4023e8:	lea    rcx,[rip+0x11352]        # 0x413741
  4023ef:	mov    r8d,0xb2
  4023f5:	call   0x40cb10
  4023fa:	jmp    0x401c13
  4023ff:	movzx  ecx,cx
  402402:	mov    edx,0x107
  402407:	call   0x4114c8
  40240c:	test   eax,eax
  40240e:	sete   BYTE PTR [rsp+0x3f]
  402413:	jmp    0x401c7f
  402418:	movzx  ecx,ax
  40241b:	mov    edx,0x107
  402420:	call   0x4114c8
  402425:	test   eax,eax
  402427:	je     0x401d67
  40242d:	jmp    0x401d72
  402432:	lea    rdx,[rip+0x112e7]        # 0x413720
  402439:	lea    rcx,[rip+0x112ea]        # 0x41372a
  402440:	mov    r8d,0x96
  402446:	call   0x40cb10
  40244b:	jmp    0x401e02
  402450:	mov    QWORD PTR [rsp+0x58],0x1
  402459:	add    rsi,QWORD PTR [rsp+0x58]
  40245e:	mov    r12,rsi
  402461:	jmp    0x401af0
  402466:	mov    QWORD PTR [rsp+0x58],0x1
  40246f:	mov    BYTE PTR [rsp+0x60],0x0
  402474:	movzx  eax,WORD PTR [rsp+0x62]
  402479:	jmp    0x402220
  40247e:	mov    rcx,QWORD PTR [rsp+0x50]
  402483:	call   0x411440
  402488:	mov    QWORD PTR [rsp+0x58],rax
  40248d:	add    rsi,QWORD PTR [rsp+0x58]
  402492:	mov    r12,rsi
  402495:	jmp    0x401af0
  40249a:	mov    rcx,QWORD PTR [rsp+0x50]
  40249f:	call   0x411440
  4024a4:	mov    BYTE PTR [rsp+0x60],0x0
  4024a9:	mov    QWORD PTR [rsp+0x58],rax
  4024ae:	movzx  eax,WORD PTR [rsp+0x62]
  4024b3:	jmp    0x402220
  4024b8:	lea    rdx,[rip+0x11261]        # 0x413720
  4024bf:	lea    rcx,[rip+0x11264]        # 0x41372a
  4024c6:	mov    r8d,0x96
  4024cc:	call   0x40cb10
  4024d1:	jmp    0x402330
  4024d6:	lea    rdx,[rip+0x11243]        # 0x413720
  4024dd:	lea    rcx,[rip+0x1125d]        # 0x413741
  4024e4:	mov    r8d,0xb2
  4024ea:	call   0x40cb10
  4024ef:	cmp    WORD PTR [rsp+0x62],0x0
  4024f5:	je     0x40239c
  4024fb:	lea    rdx,[rip+0x1121e]        # 0x413720
  402502:	lea    rcx,[rip+0x1124f]        # 0x413758
  402509:	mov    r8d,0xb3
  40250f:	call   0x40cb10
  402514:	jmp    0x40239c
  402519:	nop    DWORD PTR [rax+0x0]
  402520:	push   rdi
  402521:	push   rsi
  402522:	push   rbx
  402523:	sub    rsp,0x20
  402527:	mov    rsi,rcx
  40252a:	call   0x40b090
  40252f:	cmp    rax,rsi
  402532:	mov    rbx,rax
  402535:	je     0x402546
  402537:	mov    rdx,rsi
  40253a:	mov    rcx,rax
  40253d:	call   0x401aa0
  402542:	test   al,al
  402544:	je     0x402551
  402546:	mov    rax,rbx
  402549:	add    rsp,0x20
  40254d:	pop    rbx
  40254e:	pop    rsi
  40254f:	pop    rdi
  402550:	ret    
  402551:	mov    rcx,rbx
  402554:	call   0x411440
  402559:	mov    rcx,rsi
  40255c:	mov    rdi,rax
  40255f:	call   0x411440
  402564:	lea    rcx,[rdi+rax*1+0x4]
  402569:	call   0x402f50
  40256e:	lea    rdx,[rip+0x111f5]        # 0x41376a
  402575:	mov    rdi,rax
  402578:	mov    r8,rbx
  40257b:	mov    r9,rsi
  40257e:	mov    rcx,rax
  402581:	mov    rbx,rdi
  402584:	call   0x40b088
  402589:	mov    rax,rbx
  40258c:	add    rsp,0x20
  402590:	pop    rbx
  402591:	pop    rsi
  402592:	pop    rdi
  402593:	ret    
  402594:	xchg   ax,ax
  402596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4025a0:	push   r14
  4025a2:	push   r13
  4025a4:	push   r12
  4025a6:	push   rbp
  4025a7:	push   rdi
  4025a8:	push   rsi
  4025a9:	push   rbx
  4025aa:	sub    rsp,0x30
  4025ae:	mov    rsi,rcx
  4025b1:	mov    rdi,rdx
  4025b4:	call   0x40b090
  4025b9:	mov    r12,rax
  4025bc:	call   0x4059e0
  4025c1:	lea    rdx,[rip+0x111aa]        # 0x413772
  4025c8:	mov    rcx,rax
  4025cb:	mov    rbx,rax
  4025ce:	call   0x405950
  4025d3:	test   eax,eax
  4025d5:	jne    0x402610
  4025d7:	test   rdi,rdi
  4025da:	je     0x4027f0
  4025e0:	mov    r14,rdi
  4025e3:	mov    rbx,rdi
  4025e6:	xor    r13d,r13d
  4025e9:	xor    ebp,ebp
  4025eb:	mov    rdx,rsi
  4025ee:	mov    rcx,r12
  4025f1:	call   0x411458
  4025f6:	test   eax,eax
  4025f8:	jne    0x4026f1
  4025fe:	mov    rax,rbx
  402601:	add    rsp,0x30
  402605:	pop    rbx
  402606:	pop    rsi
  402607:	pop    rdi
  402608:	pop    rbp
  402609:	pop    r12
  40260b:	pop    r13
  40260d:	pop    r14
  40260f:	ret    
  402610:	lea    rdx,[rip+0x1115b]        # 0x413772
  402617:	mov    r8,rbx
  40261a:	mov    rcx,rdi
  40261d:	call   0x4030f0
  402622:	mov    rcx,rbx
  402625:	mov    rbp,rax
  402628:	call   0x411440
  40262d:	lea    rcx,[rax+0xb]
  402631:	mov    r13,rax
  402634:	call   0x402f50
  402639:	mov    r8,r13
  40263c:	mov    r14,rax
  40263f:	mov    rdx,rbx
  402642:	mov    rcx,rax
  402645:	add    r13,r14
  402648:	call   0x4114a8
  40264d:	movabs rax,0x4c534e4152542f2f
  402657:	lea    rdx,[rip+0x11114]        # 0x413772
  40265e:	mov    BYTE PTR [r13+0xa],0x0
  402663:	mov    QWORD PTR [r13+0x0],rax
  402667:	mov    eax,0x5449
  40266c:	mov    r8,r14
  40266f:	mov    WORD PTR [r13+0x8],ax
  402674:	mov    rcx,rdi
  402677:	call   0x4030f0
  40267c:	mov    rcx,r14
  40267f:	mov    r13,rax
  402682:	call   0x411500
  402687:	test   r13,r13
  40268a:	je     0x402800
  402690:	test   rbp,rbp
  402693:	je     0x4026d0
  402695:	mov    rdx,rsi
  402698:	mov    rcx,r12
  40269b:	mov    r14,r13
  40269e:	call   0x411458
  4026a3:	test   eax,eax
  4026a5:	mov    rdi,rbp
  4026a8:	mov    rbx,rbp
  4026ab:	jne    0x4026f1
  4026ad:	cmp    r13,rbp
  4026b0:	je     0x402820
  4026b6:	mov    rcx,r13
  4026b9:	call   0x411500
  4026be:	mov    rax,rbp
  4026c1:	add    rsp,0x30
  4026c5:	pop    rbx
  4026c6:	pop    rsi
  4026c7:	pop    rdi
  4026c8:	pop    rbp
  4026c9:	pop    r12
  4026cb:	pop    r13
  4026cd:	pop    r14
  4026cf:	ret    
  4026d0:	mov    rdx,rsi
  4026d3:	mov    rcx,r12
  4026d6:	call   0x411458
  4026db:	test   eax,eax
  4026dd:	jne    0x402720
  4026df:	mov    rax,r13
  4026e2:	add    rsp,0x30
  4026e6:	pop    rbx
  4026e7:	pop    rsi
  4026e8:	pop    rdi
  4026e9:	pop    rbp
  4026ea:	pop    r12
  4026ec:	pop    r13
  4026ee:	pop    r14
  4026f0:	ret    
  4026f1:	mov    rdx,rsi
  4026f4:	mov    rcx,r12
  4026f7:	call   0x401aa0
  4026fc:	test   al,al
  4026fe:	jne    0x402750
  402700:	test   rdi,rdi
  402703:	je     0x402714
  402705:	mov    rdx,rdi
  402708:	mov    rcx,r12
  40270b:	call   0x401aa0
  402710:	test   al,al
  402712:	jne    0x402750
  402714:	mov    rsi,r13
  402717:	mov    r13,rbx
  40271a:	jmp    0x402735
  40271c:	nop    DWORD PTR [rax+0x0]
  402720:	mov    rdx,rsi
  402723:	mov    rcx,r12
  402726:	call   0x401aa0
  40272b:	test   al,al
  40272d:	jne    0x402769
  40272f:	mov    rsi,r13
  402732:	mov    r14,r13
  402735:	test   r14,r14
  402738:	je     0x402783
  40273a:	mov    rdx,r14
  40273d:	mov    rcx,r12
  402740:	call   0x401aa0
  402745:	test   al,al
  402747:	je     0x402783
  402749:	mov    r13,rsi
  40274c:	nop    DWORD PTR [rax+0x0]
  402750:	test   rbp,rbp
  402753:	je     0x40275d
  402755:	mov    rcx,rbp
  402758:	call   0x411500
  40275d:	test   r13,r13
  402760:	mov    rax,r12
  402763:	je     0x402601
  402769:	mov    rcx,r13
  40276c:	call   0x411500
  402771:	mov    rax,r12
  402774:	add    rsp,0x30
  402778:	pop    rbx
  402779:	pop    rsi
  40277a:	pop    rdi
  40277b:	pop    rbp
  40277c:	pop    r12
  40277e:	pop    r13
  402780:	pop    r14
  402782:	ret    
  402783:	mov    rcx,r12
  402786:	call   0x411440
  40278b:	mov    rcx,r13
  40278e:	mov    rbx,rax
  402791:	call   0x411440
  402796:	lea    rcx,[rbx+rax*1+0x4]
  40279b:	call   0x402f50
  4027a0:	lea    rdx,[rip+0x10fc3]        # 0x41376a
  4027a7:	mov    r9,r13
  4027aa:	mov    r8,r12
  4027ad:	mov    rcx,rax
  4027b0:	mov    rbx,rax
  4027b3:	call   0x40b088
  4027b8:	test   rbp,rbp
  4027bb:	je     0x4027c5
  4027bd:	mov    rcx,rbp
  4027c0:	call   0x411500
  4027c5:	test   rsi,rsi
  4027c8:	mov    rax,rbx
  4027cb:	je     0x402601
  4027d1:	mov    rcx,rsi
  4027d4:	mov    QWORD PTR [rsp+0x28],rbx
  4027d9:	call   0x411500
  4027de:	mov    rax,QWORD PTR [rsp+0x28]
  4027e3:	jmp    0x402601
  4027e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4027f0:	xor    r14d,r14d
  4027f3:	xor    r13d,r13d
  4027f6:	xor    ebp,ebp
  4027f8:	mov    rbx,rsi
  4027fb:	jmp    0x4025eb
  402800:	xor    r14d,r14d
  402803:	test   rbp,rbp
  402806:	je     0x402813
  402808:	mov    rdi,rbp
  40280b:	mov    rbx,rbp
  40280e:	jmp    0x4025eb
  402813:	xor    edi,edi
  402815:	mov    r13,rbp
  402818:	mov    rbx,rsi
  40281b:	jmp    0x4025eb
  402820:	mov    rax,rbp
  402823:	jmp    0x402601
  402828:	nop
  402829:	nop
  40282a:	nop
  40282b:	nop
  40282c:	nop
  40282d:	nop
  40282e:	nop
  40282f:	nop
  402830:	push   rsi
  402831:	push   rbx
  402832:	sub    rsp,0x28
  402836:	mov    r8,rdx
  402839:	mov    rsi,rdx
  40283c:	xor    edx,edx
  40283e:	mov    rbx,rcx
  402841:	call   0x4046d0
  402846:	test   rax,rax
  402849:	je     0x402860
  40284b:	sub    rax,rbx
  40284e:	add    rax,0x1
  402852:	add    rsp,0x28
  402856:	pop    rbx
  402857:	pop    rsi
  402858:	ret    
  402859:	nop    DWORD PTR [rax+0x0]
  402860:	mov    rax,rsi
  402863:	add    rsp,0x28
  402867:	pop    rbx
  402868:	pop    rsi
  402869:	ret    
  40286a:	nop
  40286b:	nop
  40286c:	nop
  40286d:	nop
  40286e:	nop
  40286f:	nop
  402870:	push   r14
  402872:	push   r13
  402874:	push   r12
  402876:	push   rbp
  402877:	push   rdi
  402878:	push   rsi
  402879:	push   rbx
  40287a:	sub    rsp,0x70
  40287e:	mov    ebp,edx
  402880:	call   0x4113f8
  402885:	test   rax,rax
  402888:	mov    rsi,rax
  40288b:	je     0x402ede
  402891:	mov    rax,QWORD PTR [rip+0x15b68]        # 0x418400
  402898:	mov    rax,QWORD PTR [rax]
  40289b:	cmp    DWORD PTR [rax],0x1
  40289e:	jle    0x402cd0
  4028a4:	test   ebp,ebp
  4028a6:	je     0x402a58
  4028ac:	mov    QWORD PTR [rsp+0x38],rsi
  4028b1:	mov    rdx,rsi
  4028b4:	mov    ecx,DWORD PTR [rdx]
  4028b6:	add    rdx,0x4
  4028ba:	lea    eax,[rcx-0x1010101]
  4028c0:	not    ecx
  4028c2:	and    eax,ecx
  4028c4:	and    eax,0x80808080
  4028c9:	je     0x4028b4
  4028cb:	mov    ecx,eax
  4028cd:	mov    BYTE PTR [rsp+0x28],0x0
  4028d2:	mov    DWORD PTR [rsp+0x2c],0x0
  4028da:	shr    ecx,0x10
  4028dd:	test   eax,0x8080
  4028e2:	mov    BYTE PTR [rsp+0x30],0x0
  4028e7:	cmove  eax,ecx
  4028ea:	lea    rcx,[rdx+0x2]
  4028ee:	mov    rbx,rsi
  4028f1:	cmove  rdx,rcx
  4028f5:	add    al,al
  4028f7:	sbb    rdx,0x3
  4028fb:	cmp    rsi,rdx
  4028fe:	mov    QWORD PTR [rsp+0x20],rdx
  402903:	jae    0x402a38
  402909:	lea    rdi,[rsp+0x20]
  40290e:	mov    r13,QWORD PTR [rip+0x15c2b]        # 0x418540
  402915:	lea    r14,[rdi+0xc]
  402919:	jmp    0x40298e
  40291b:	nop    DWORD PTR [rax+rax*1+0x0]
  402920:	movzx  eax,BYTE PTR [rbx]
  402923:	mov    edx,eax
  402925:	and    eax,0x1f
  402928:	shr    dl,0x5
  40292b:	and    edx,0x7
  40292e:	mov    edx,DWORD PTR [r13+rdx*4+0x0]
  402933:	bt     edx,eax
  402936:	jae    0x402de0
  40293c:	mov    QWORD PTR [rsp+0x40],0x1
  402945:	movsx  ax,BYTE PTR [rbx]
  402949:	mov    BYTE PTR [rsp+0x48],0x1
  40294e:	mov    BYTE PTR [rsp+0x30],0x1
  402953:	mov    WORD PTR [rsp+0x4a],ax
  402958:	movzx  ecx,WORD PTR [rsp+0x4a]
  40295d:	mov    edx,0x8
  402962:	call   0x4114c8
  402967:	test   eax,eax
  402969:	je     0x402a33
  40296f:	mov    rbx,QWORD PTR [rsp+0x40]
  402974:	add    rbx,QWORD PTR [rsp+0x38]
  402979:	cmp    QWORD PTR [rsp+0x20],rbx
  40297e:	mov    BYTE PTR [rsp+0x30],0x0
  402983:	mov    QWORD PTR [rsp+0x38],rbx
  402988:	jbe    0x402a38
  40298e:	cmp    BYTE PTR [rsp+0x28],0x0
  402993:	je     0x402920
  402995:	mov    rdx,QWORD PTR [rsp+0x38]
  40299a:	mov    r8,QWORD PTR [rsp+0x20]
  40299f:	lea    rcx,[rdi+0x2a]
  4029a3:	lea    r9,[rdi+0xc]
  4029a7:	sub    r8,rdx
  4029aa:	call   0x4045a0
  4029af:	cmp    rax,0xffffffffffffffff
  4029b3:	mov    QWORD PTR [rsp+0x40],rax
  4029b8:	je     0x402a20
  4029ba:	cmp    rax,0xfffffffffffffffe
  4029be:	je     0x402e00
  4029c4:	test   rax,rax
  4029c7:	jne    0x4029ec
  4029c9:	mov    rax,QWORD PTR [rsp+0x38]
  4029ce:	mov    QWORD PTR [rsp+0x40],0x1
  4029d7:	cmp    BYTE PTR [rax],0x0
  4029da:	jne    0x402ec0
  4029e0:	cmp    WORD PTR [rsp+0x4a],0x0
  4029e6:	jne    0x402ea0
  4029ec:	lea    rcx,[rdi+0xc]
  4029f0:	mov    BYTE PTR [rsp+0x48],0x1
  4029f5:	call   0x4046b0
  4029fa:	test   eax,eax
  4029fc:	je     0x402a03
  4029fe:	mov    BYTE PTR [rsp+0x28],0x0
  402a03:	movzx  eax,BYTE PTR [rsp+0x48]
  402a08:	mov    BYTE PTR [rsp+0x30],0x1
  402a0d:	test   al,al
  402a0f:	jne    0x402958
  402a15:	jmp    0x402a33
  402a17:	nop    WORD PTR [rax+rax*1+0x0]
  402a20:	mov    QWORD PTR [rsp+0x40],0x1
  402a29:	mov    BYTE PTR [rsp+0x48],0x0
  402a2e:	mov    BYTE PTR [rsp+0x30],0x1
  402a33:	mov    rbx,QWORD PTR [rsp+0x38]
  402a38:	mov    rcx,rbx
  402a3b:	call   0x411440
  402a40:	lea    r8,[rax+0x1]
  402a44:	mov    rdx,rbx
  402a47:	mov    rcx,rsi
  402a4a:	call   0x4114a0
  402a4f:	cmp    ebp,0x1
  402a52:	je     0x402c1a
  402a58:	mov    QWORD PTR [rsp+0x38],rsi
  402a5d:	mov    rdx,rsi
  402a60:	mov    ecx,DWORD PTR [rdx]
  402a62:	add    rdx,0x4
  402a66:	lea    eax,[rcx-0x1010101]
  402a6c:	not    ecx
  402a6e:	and    eax,ecx
  402a70:	and    eax,0x80808080
  402a75:	je     0x402a60
  402a77:	mov    ecx,eax
  402a79:	mov    BYTE PTR [rsp+0x28],0x0
  402a7e:	mov    DWORD PTR [rsp+0x2c],0x0
  402a86:	shr    ecx,0x10
  402a89:	test   eax,0x8080
  402a8e:	mov    BYTE PTR [rsp+0x30],0x0
  402a93:	cmove  eax,ecx
  402a96:	lea    rcx,[rdx+0x2]
  402a9a:	cmove  rdx,rcx
  402a9e:	add    al,al
  402aa0:	mov    rax,rdx
  402aa3:	mov    rdx,rsi
  402aa6:	sbb    rax,0x3
  402aaa:	xor    ebx,ebx
  402aac:	cmp    rsi,rax
  402aaf:	mov    QWORD PTR [rsp+0x20],rax
  402ab4:	jae    0x402c1a
  402aba:	lea    rdi,[rsp+0x20]
  402abf:	mov    rbp,QWORD PTR [rip+0x15a7a]        # 0x418540
  402ac6:	lea    r13,[rdi+0xc]
  402aca:	jmp    0x402b3e
  402acc:	nop    DWORD PTR [rax+0x0]
  402ad0:	movzx  eax,BYTE PTR [rdx]
  402ad3:	mov    ecx,eax
  402ad5:	and    eax,0x1f
  402ad8:	shr    cl,0x5
  402adb:	and    ecx,0x7
  402ade:	mov    ecx,DWORD PTR [rbp+rcx*4+0x0]
  402ae2:	bt     ecx,eax
  402ae5:	jae    0x402c81
  402aeb:	mov    QWORD PTR [rsp+0x40],0x1
  402af4:	movsx  ax,BYTE PTR [rdx]
  402af8:	mov    BYTE PTR [rsp+0x48],0x1
  402afd:	mov    WORD PTR [rsp+0x4a],ax
  402b02:	test   ebx,ebx
  402b04:	mov    BYTE PTR [rsp+0x30],0x1
  402b09:	jne    0x402bd0
  402b0f:	cmp    BYTE PTR [rsp+0x48],0x0
  402b14:	jne    0x402c45
  402b1a:	mov    rdx,QWORD PTR [rsp+0x38]
  402b1f:	mov    ebx,0x1
  402b24:	add    rdx,QWORD PTR [rsp+0x40]
  402b29:	mov    BYTE PTR [rsp+0x30],0x0
  402b2e:	cmp    QWORD PTR [rsp+0x20],rdx
  402b33:	mov    QWORD PTR [rsp+0x38],rdx
  402b38:	jbe    0x402c10
  402b3e:	cmp    BYTE PTR [rsp+0x28],0x0
  402b43:	je     0x402ad0
  402b45:	mov    rdx,QWORD PTR [rsp+0x38]
  402b4a:	mov    r8,QWORD PTR [rsp+0x20]
  402b4f:	lea    rcx,[rdi+0x2a]
  402b53:	lea    r9,[rdi+0xc]
  402b57:	sub    r8,rdx
  402b5a:	call   0x4045a0
  402b5f:	cmp    rax,0xffffffffffffffff
  402b63:	mov    QWORD PTR [rsp+0x40],rax
  402b68:	je     0x402ca0
  402b6e:	cmp    rax,0xfffffffffffffffe
  402b72:	je     0x402cb3
  402b78:	test   rax,rax
  402b7b:	jne    0x402ba0
  402b7d:	mov    rax,QWORD PTR [rsp+0x38]
  402b82:	mov    QWORD PTR [rsp+0x40],0x1
  402b8b:	cmp    BYTE PTR [rax],0x0
  402b8e:	jne    0x402e80
  402b94:	cmp    WORD PTR [rsp+0x4a],0x0
  402b9a:	jne    0x402e60
  402ba0:	lea    rcx,[rdi+0xc]
  402ba4:	mov    BYTE PTR [rsp+0x48],0x1
  402ba9:	call   0x4046b0
  402bae:	test   eax,eax
  402bb0:	je     0x402b02
  402bb6:	test   ebx,ebx
  402bb8:	mov    BYTE PTR [rsp+0x28],0x0
  402bbd:	mov    BYTE PTR [rsp+0x30],0x1
  402bc2:	je     0x402b0f
  402bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd0:	cmp    ebx,0x1
  402bd3:	je     0x402c30
  402bd5:	cmp    ebx,0x2
  402bd8:	jne    0x402b1a
  402bde:	cmp    BYTE PTR [rsp+0x48],0x0
  402be3:	je     0x402b1a
  402be9:	movzx  ecx,WORD PTR [rsp+0x4a]
  402bee:	mov    edx,0x8
  402bf3:	call   0x4114c8
  402bf8:	test   eax,eax
  402bfa:	mov    rdx,QWORD PTR [rsp+0x38]
  402bff:	jne    0x402b24
  402c05:	mov    ebx,0x1
  402c0a:	jmp    0x402b24
  402c0f:	nop
  402c10:	cmp    ebx,0x2
  402c13:	jne    0x402c1a
  402c15:	mov    BYTE PTR [r12],0x0
  402c1a:	mov    rax,rsi
  402c1d:	add    rsp,0x70
  402c21:	pop    rbx
  402c22:	pop    rsi
  402c23:	pop    rdi
  402c24:	pop    rbp
  402c25:	pop    r12
  402c27:	pop    r13
  402c29:	pop    r14
  402c2b:	ret    
  402c2c:	nop    DWORD PTR [rax+0x0]
  402c30:	cmp    BYTE PTR [rsp+0x48],0x0
  402c35:	jne    0x402d90
  402c3b:	mov    rdx,QWORD PTR [rsp+0x38]
  402c40:	jmp    0x402b24
  402c45:	movzx  ecx,WORD PTR [rsp+0x4a]
  402c4a:	mov    edx,0x8
  402c4f:	call   0x4114c8
  402c54:	test   eax,eax
  402c56:	jne    0x402c3b
  402c58:	cmp    BYTE PTR [rsp+0x48],0x0
  402c5d:	je     0x402b1a
  402c63:	movzx  ecx,WORD PTR [rsp+0x4a]
  402c68:	mov    edx,0x8
  402c6d:	mov    ebx,0x1
  402c72:	call   0x4114c8
  402c77:	mov    rdx,QWORD PTR [rsp+0x38]
  402c7c:	jmp    0x402b24
  402c81:	mov    rcx,r13
  402c84:	call   0x4046b0
  402c89:	test   eax,eax
  402c8b:	je     0x402e20
  402c91:	mov    BYTE PTR [rsp+0x28],0x1
  402c96:	jmp    0x402b45
  402c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402ca0:	mov    QWORD PTR [rsp+0x40],0x1
  402ca9:	mov    BYTE PTR [rsp+0x48],0x0
  402cae:	jmp    0x402b02
  402cb3:	mov    rax,QWORD PTR [rsp+0x20]
  402cb8:	sub    rax,QWORD PTR [rsp+0x38]
  402cbd:	mov    BYTE PTR [rsp+0x48],0x0
  402cc2:	mov    QWORD PTR [rsp+0x40],rax
  402cc7:	jmp    0x402b02
  402ccc:	nop    DWORD PTR [rax+0x0]
  402cd0:	test   ebp,ebp
  402cd2:	je     0x402d24
  402cd4:	movzx  eax,BYTE PTR [rsi]
  402cd7:	mov    rbx,rsi
  402cda:	mov    rdi,QWORD PTR [rip+0x1b9f7]        # 0x41e6d8
  402ce1:	test   al,al
  402ce3:	jne    0x402cfb
  402ce5:	jmp    0x402d04
  402ce7:	nop    WORD PTR [rax+rax*1+0x0]
  402cf0:	add    rbx,0x1
  402cf4:	movzx  eax,BYTE PTR [rbx]
  402cf7:	test   al,al
  402cf9:	je     0x402d04
  402cfb:	movzx  ecx,al
  402cfe:	call   rdi
  402d00:	test   eax,eax
  402d02:	jne    0x402cf0
  402d04:	mov    rcx,rbx
  402d07:	call   0x411440
  402d0c:	lea    r8,[rax+0x1]
  402d10:	mov    rdx,rbx
  402d13:	mov    rcx,rsi
  402d16:	call   0x4114a0
  402d1b:	cmp    ebp,0x1
  402d1e:	je     0x402c1a
  402d24:	mov    rdx,rsi
  402d27:	mov    ecx,DWORD PTR [rdx]
  402d29:	add    rdx,0x4
  402d2d:	lea    eax,[rcx-0x1010101]
  402d33:	not    ecx
  402d35:	and    eax,ecx
  402d37:	and    eax,0x80808080
  402d3c:	je     0x402d27
  402d3e:	mov    ecx,eax
  402d40:	mov    rdi,QWORD PTR [rip+0x1b991]        # 0x41e6d8
  402d47:	shr    ecx,0x10
  402d4a:	test   eax,0x8080
  402d4f:	cmove  eax,ecx
  402d52:	lea    rcx,[rdx+0x2]
  402d56:	cmove  rdx,rcx
  402d5a:	add    al,al
  402d5c:	sbb    rdx,0x3
  402d60:	lea    rbx,[rdx-0x1]
  402d64:	cmp    rsi,rbx
  402d67:	jbe    0x402d80
  402d69:	jmp    0x402c1a
  402d6e:	xchg   ax,ax
  402d70:	mov    BYTE PTR [rbx],0x0
  402d73:	sub    rbx,0x1
  402d77:	cmp    rsi,rbx
  402d7a:	ja     0x402c1a
  402d80:	movzx  ecx,BYTE PTR [rbx]
  402d83:	call   rdi
  402d85:	test   eax,eax
  402d87:	jne    0x402d70
  402d89:	jmp    0x402c1a
  402d8e:	xchg   ax,ax
  402d90:	movzx  ecx,WORD PTR [rsp+0x4a]
  402d95:	mov    edx,0x8
  402d9a:	call   0x4114c8
  402d9f:	test   eax,eax
  402da1:	je     0x402c3b
  402da7:	cmp    BYTE PTR [rsp+0x48],0x0
  402dac:	je     0x402c3b
  402db2:	movzx  ecx,WORD PTR [rsp+0x4a]
  402db7:	mov    edx,0x8
  402dbc:	call   0x4114c8
  402dc1:	test   eax,eax
  402dc3:	je     0x402c3b
  402dc9:	mov    r12,QWORD PTR [rsp+0x38]
  402dce:	mov    ebx,0x2
  402dd3:	mov    rdx,r12
  402dd6:	jmp    0x402b24
  402ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  402de0:	mov    rcx,r14
  402de3:	call   0x4046b0
  402de8:	test   eax,eax
  402dea:	je     0x402e40
  402dec:	mov    BYTE PTR [rsp+0x28],0x1
  402df1:	jmp    0x402995
  402df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e00:	mov    rax,QWORD PTR [rsp+0x20]
  402e05:	sub    rax,QWORD PTR [rsp+0x38]
  402e0a:	mov    BYTE PTR [rsp+0x48],0x0
  402e0f:	mov    QWORD PTR [rsp+0x40],rax
  402e14:	jmp    0x402a2e
  402e19:	nop    DWORD PTR [rax+0x0]
  402e20:	lea    rdx,[rip+0x10959]        # 0x413780
  402e27:	lea    rcx,[rip+0x1095b]        # 0x413789
  402e2e:	mov    r8d,0x8e
  402e34:	call   0x40cb10
  402e39:	jmp    0x402c91
  402e3e:	xchg   ax,ax
  402e40:	lea    rdx,[rip+0x10939]        # 0x413780
  402e47:	lea    rcx,[rip+0x1093b]        # 0x413789
  402e4e:	mov    r8d,0x8e
  402e54:	call   0x40cb10
  402e59:	jmp    0x402dec
  402e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402e60:	lea    rdx,[rip+0x10919]        # 0x413780
  402e67:	lea    rcx,[rip+0x10949]        # 0x4137b7
  402e6e:	mov    r8d,0xaa
  402e74:	call   0x40cb10
  402e79:	jmp    0x402ba0
  402e7e:	xchg   ax,ax
  402e80:	lea    rdx,[rip+0x108f9]        # 0x413780
  402e87:	lea    rcx,[rip+0x10912]        # 0x4137a0
  402e8e:	mov    r8d,0xa9
  402e94:	call   0x40cb10
  402e99:	jmp    0x402b94
  402e9e:	xchg   ax,ax
  402ea0:	lea    rdx,[rip+0x108d9]        # 0x413780
  402ea7:	lea    rcx,[rip+0x10909]        # 0x4137b7
  402eae:	mov    r8d,0xaa
  402eb4:	call   0x40cb10
  402eb9:	jmp    0x4029ec
  402ebe:	xchg   ax,ax
  402ec0:	lea    rdx,[rip+0x108b9]        # 0x413780
  402ec7:	lea    rcx,[rip+0x108d2]        # 0x4137a0
  402ece:	mov    r8d,0xa9
  402ed4:	call   0x40cb10
  402ed9:	jmp    0x4029e0
  402ede:	call   0x402ef0
  402ee3:	nop
  402ee4:	nop
  402ee5:	nop
  402ee6:	nop
  402ee7:	nop
  402ee8:	nop
  402ee9:	nop
  402eea:	nop
  402eeb:	nop
  402eec:	nop
  402eed:	nop
  402eee:	nop
  402eef:	nop
  402ef0:	sub    rsp,0x28
  402ef4:	lea    rcx,[rip+0x108d5]        # 0x4137d0
  402efb:	call   0x40b090
  402f00:	mov    ecx,DWORD PTR [rip+0xf10a]        # 0x412010
  402f06:	mov    r8,rax
  402f09:	xor    edx,edx
  402f0b:	call   0x403240
  402f10:	mov    ecx,0x1
  402f15:	call   0x411538
  402f1a:	nop
  402f1b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f20:	sub    rsp,0x28
  402f24:	test   rcx,rcx
  402f27:	jne    0x402f40
  402f29:	mov    ecx,0x1
  402f2e:	call   0x4114b8
  402f33:	test   rax,rax
  402f36:	je     0x402f40
  402f38:	add    rsp,0x28
  402f3c:	ret    
  402f3d:	nop    DWORD PTR [rax]
  402f40:	call   0x402ef0
  402f45:	nop
  402f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f50:	push   rbx
  402f51:	sub    rsp,0x20
  402f55:	mov    rbx,rcx
  402f58:	call   0x4114b8
  402f5d:	test   rax,rax
  402f60:	je     0x402f70
  402f62:	add    rsp,0x20
  402f66:	pop    rbx
  402f67:	ret    
  402f68:	nop    DWORD PTR [rax+rax*1+0x0]
  402f70:	mov    rcx,rbx
  402f73:	add    rsp,0x20
  402f77:	pop    rbx
  402f78:	jmp    0x402f20
  402f7a:	nop    WORD PTR [rax+rax*1+0x0]
  402f80:	push   rbx
  402f81:	sub    rsp,0x20
  402f85:	mov    rax,0xffffffffffffffff
  402f8c:	mov    rbx,rdx
  402f8f:	xor    edx,edx
  402f91:	div    rbx
  402f94:	cmp    rax,rcx
  402f97:	jb     0x402fbd
  402f99:	imul   rbx,rcx
  402f9d:	mov    rcx,rbx
  402fa0:	call   0x4114b8
  402fa5:	test   rax,rax
  402fa8:	je     0x402fb0
  402faa:	add    rsp,0x20
  402fae:	pop    rbx
  402faf:	ret    
  402fb0:	mov    rcx,rbx
  402fb3:	add    rsp,0x20
  402fb7:	pop    rbx
  402fb8:	jmp    0x402f20
  402fbd:	call   0x402ef0
  402fc2:	nop
  402fc3:	nop    DWORD PTR [rax]
  402fc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fd0:	push   rsi
  402fd1:	push   rbx
  402fd2:	sub    rsp,0x28
  402fd6:	mov    rsi,rcx
  402fd9:	call   0x402f50
  402fde:	mov    r8,rsi
  402fe1:	mov    rbx,rax
  402fe4:	xor    edx,edx
  402fe6:	mov    rcx,rax
  402fe9:	call   0x411498
  402fee:	mov    rax,rbx
  402ff1:	add    rsp,0x28
  402ff5:	pop    rbx
  402ff6:	pop    rsi
  402ff7:	ret    
  402ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  403000:	push   rbx
  403001:	sub    rsp,0x20
  403005:	mov    rbx,rcx
  403008:	call   0x411540
  40300d:	test   rax,rax
  403010:	je     0x403020
  403012:	add    rsp,0x20
  403016:	pop    rbx
  403017:	ret    
  403018:	nop    DWORD PTR [rax+rax*1+0x0]
  403020:	mov    rcx,rbx
  403023:	add    rsp,0x20
  403027:	pop    rbx
  403028:	jmp    0x402f20
  40302d:	nop    DWORD PTR [rax]
  403030:	push   rbx
  403031:	sub    rsp,0x20
  403035:	test   rcx,rcx
  403038:	je     0x403050
  40303a:	mov    rbx,rdx
  40303d:	call   0x411478
  403042:	test   rax,rax
  403045:	je     0x403060
  403047:	add    rsp,0x20
  40304b:	pop    rbx
  40304c:	ret    
  40304d:	nop    DWORD PTR [rax]
  403050:	mov    rcx,rdx
  403053:	add    rsp,0x20
  403057:	pop    rbx
  403058:	jmp    0x402f50
  40305d:	nop    DWORD PTR [rax]
  403060:	mov    rcx,rbx
  403063:	add    rsp,0x20
  403067:	pop    rbx
  403068:	jmp    0x402f20
  40306d:	nop
  40306e:	nop
  40306f:	nop
  403070:	push   rbx
  403071:	sub    rsp,0x30
  403075:	mov    rax,QWORD PTR [rsp+0x60]
  40307a:	mov    QWORD PTR [rsp+0x20],rax
  40307f:	call   0x409da0
  403084:	test   eax,eax
  403086:	mov    ebx,eax
  403088:	js     0x403092
  40308a:	mov    eax,ebx
  40308c:	add    rsp,0x30
  403090:	pop    rbx
  403091:	ret    
  403092:	call   QWORD PTR [rip+0x1b580]        # 0x41e618
  403098:	cmp    DWORD PTR [rax],0xc
  40309b:	jne    0x40308a
  40309d:	call   0x402ef0
  4030a2:	nop
  4030a3:	nop    DWORD PTR [rax]
  4030a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030b0:	push   rbx
  4030b1:	sub    rsp,0x20
  4030b5:	call   0x40a030
  4030ba:	test   rax,rax
  4030bd:	mov    rbx,rax
  4030c0:	je     0x4030d0
  4030c2:	mov    rax,rbx
  4030c5:	add    rsp,0x20
  4030c9:	pop    rbx
  4030ca:	ret    
  4030cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4030d0:	call   QWORD PTR [rip+0x1b542]        # 0x41e618
  4030d6:	cmp    DWORD PTR [rax],0xc
  4030d9:	jne    0x4030c2
  4030db:	call   0x402ef0
  4030e0:	nop
  4030e1:	nop    DWORD PTR [rax+rax*1+0x0]
  4030e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030f0:	push   rbx
  4030f1:	sub    rsp,0x20
  4030f5:	call   0x40a230
  4030fa:	test   rax,rax
  4030fd:	mov    rbx,rax
  403100:	je     0x403110
  403102:	mov    rax,rbx
  403105:	add    rsp,0x20
  403109:	pop    rbx
  40310a:	ret    
  40310b:	nop    DWORD PTR [rax+rax*1+0x0]
  403110:	call   QWORD PTR [rip+0x1b502]        # 0x41e618
  403116:	cmp    DWORD PTR [rax],0xc
  403119:	jne    0x403102
  40311b:	call   0x402ef0
  403120:	nop
  403121:	nop
  403122:	nop
  403123:	nop
  403124:	nop
  403125:	nop
  403126:	nop
  403127:	nop
  403128:	nop
  403129:	nop
  40312a:	nop
  40312b:	nop
  40312c:	nop
  40312d:	nop
  40312e:	nop
  40312f:	nop
  403130:	push   r12
  403132:	push   rbp
  403133:	push   rdi
  403134:	push   rsi
  403135:	push   rbx
  403136:	sub    rsp,0x20
  40313a:	mov    rbx,QWORD PTR [rip+0x1b497]        # 0x41e5d8
  403141:	mov    edi,edx
  403143:	mov    rbp,r8
  403146:	mov    r12,r9
  403149:	mov    esi,ecx
  40314b:	mov    QWORD PTR [rsp+0x68],r9
  403150:	call   rbx
  403152:	lea    rcx,[rax+0x60]
  403156:	mov    r8,r12
  403159:	mov    rdx,rbp
  40315c:	call   0x404ff0
  403161:	add    DWORD PTR [rip+0x1a588],0x1        # 0x41d6f0
  403168:	test   edi,edi
  40316a:	jne    0x4031a0
  40316c:	call   rbx
  40316e:	lea    rdx,[rax+0x60]
  403172:	mov    ecx,0xa
  403177:	call   0x405140
  40317c:	call   rbx
  40317e:	lea    rcx,[rax+0x60]
  403182:	call   0x411520
  403187:	test   esi,esi
  403189:	jne    0x4031e1
  40318b:	add    rsp,0x20
  40318f:	pop    rbx
  403190:	pop    rsi
  403191:	pop    rdi
  403192:	pop    rbp
  403193:	pop    r12
  403195:	ret    
  403196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031a0:	mov    ecx,edi
  4031a2:	call   0x405470
  4031a7:	test   rax,rax
  4031aa:	mov    rdi,rax
  4031ad:	je     0x4031d0
  4031af:	call   rbx
  4031b1:	lea    rdx,[rip+0x1064d]        # 0x413805
  4031b8:	lea    rcx,[rax+0x60]
  4031bc:	mov    r8,rdi
  4031bf:	call   0x4050e0
  4031c4:	jmp    0x40316c
  4031c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031d0:	lea    rcx,[rip+0x10619]        # 0x4137f0
  4031d7:	call   0x40b090
  4031dc:	mov    rdi,rax
  4031df:	jmp    0x4031af
  4031e1:	mov    ecx,esi
  4031e3:	call   0x411538
  4031e8:	nop
  4031e9:	nop    DWORD PTR [rax+0x0]
  4031f0:	push   rbx
  4031f1:	sub    rsp,0x20
  4031f5:	mov    rbx,QWORD PTR [rip+0x1b3dc]        # 0x41e5d8
  4031fc:	call   rbx
  4031fe:	lea    rcx,[rax+0x30]
  403202:	call   0x4113f0
  403207:	test   eax,eax
  403209:	js     0x403230
  40320b:	mov    ecx,eax
  40320d:	call   0x404780
  403212:	cmp    rax,0xffffffffffffffff
  403216:	je     0x403230
  403218:	call   rbx
  40321a:	lea    rcx,[rax+0x30]
  40321e:	add    rsp,0x20
  403222:	pop    rbx
  403223:	jmp    0x411520
  403228:	nop    DWORD PTR [rax+rax*1+0x0]
  403230:	add    rsp,0x20
  403234:	pop    rbx
  403235:	ret    
  403236:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403240:	push   rbp
  403241:	push   rdi
  403242:	push   rsi
  403243:	push   rbx
  403244:	sub    rsp,0x38
  403248:	mov    ebx,ecx
  40324a:	mov    esi,edx
  40324c:	mov    QWORD PTR [rsp+0x78],r9
  403251:	mov    rdi,r8
  403254:	call   0x4031f0
  403259:	mov    rax,QWORD PTR [rip+0x1a498]        # 0x41d6f8
  403260:	test   rax,rax
  403263:	je     0x403290
  403265:	call   rax
  403267:	lea    r9,[rsp+0x78]
  40326c:	mov    r8,rdi
  40326f:	mov    edx,esi
  403271:	mov    ecx,ebx
  403273:	mov    QWORD PTR [rsp+0x28],r9
  403278:	call   0x403130
  40327d:	nop
  40327e:	add    rsp,0x38
  403282:	pop    rbx
  403283:	pop    rsi
  403284:	pop    rdi
  403285:	pop    rbp
  403286:	ret    
  403287:	nop    WORD PTR [rax+rax*1+0x0]
  403290:	mov    rax,QWORD PTR [rip+0x15309]        # 0x4185a0
  403297:	mov    rbp,QWORD PTR [rax]
  40329a:	call   QWORD PTR [rip+0x1b338]        # 0x41e5d8
  4032a0:	lea    rdx,[rip+0x10563]        # 0x41380a
  4032a7:	lea    rcx,[rax+0x60]
  4032ab:	mov    r8,rbp
  4032ae:	call   0x4050e0
  4032b3:	jmp    0x403267
  4032b5:	nop
  4032b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032c0:	push   r13
  4032c2:	push   r12
  4032c4:	push   rbp
  4032c5:	push   rdi
  4032c6:	push   rsi
  4032c7:	push   rbx
  4032c8:	sub    rsp,0x38
  4032cc:	mov    eax,DWORD PTR [rip+0x1a42e]        # 0x41d700
  4032d2:	mov    ebp,ecx
  4032d4:	mov    r12d,edx
  4032d7:	mov    rbx,r8
  4032da:	mov    edi,r9d
  4032dd:	test   eax,eax
  4032df:	je     0x4032fb
  4032e1:	cmp    DWORD PTR [rip+0x17db0],r9d        # 0x41b098
  4032e8:	je     0x403370
  4032ee:	mov    QWORD PTR [rip+0x17d9b],rbx        # 0x41b090
  4032f5:	mov    DWORD PTR [rip+0x17d9d],edi        # 0x41b098
  4032fb:	call   0x4031f0
  403300:	mov    rax,QWORD PTR [rip+0x1a3f1]        # 0x41d6f8
  403307:	test   rax,rax
  40330a:	je     0x4033a0
  403310:	call   rax
  403312:	mov    r13,QWORD PTR [rip+0x1b2bf]        # 0x41e5d8
  403319:	lea    rax,[rip+0x104ef]        # 0x41380f
  403320:	lea    rsi,[rip+0x104f0]        # 0x413817
  403327:	test   rbx,rbx
  40332a:	cmovne rsi,rax
  40332e:	call   r13
  403331:	lea    rcx,[rax+0x60]
  403335:	mov    r9d,edi
  403338:	mov    r8,rbx
  40333b:	mov    rdx,rsi
  40333e:	call   0x4050e0
  403343:	mov    r8,QWORD PTR [rsp+0x90]
  40334b:	lea    r9,[rsp+0x98]
  403353:	mov    edx,r12d
  403356:	mov    ecx,ebp
  403358:	mov    QWORD PTR [rsp+0x28],r9
  40335d:	call   0x403130
  403362:	nop
  403363:	add    rsp,0x38
  403367:	pop    rbx
  403368:	pop    rsi
  403369:	pop    rdi
  40336a:	pop    rbp
  40336b:	pop    r12
  40336d:	pop    r13
  40336f:	ret    
  403370:	mov    rcx,QWORD PTR [rip+0x17d19]        # 0x41b090
  403377:	cmp    r8,rcx
  40337a:	je     0x403363
  40337c:	test   r8,r8
  40337f:	je     0x4032ee
  403385:	test   rcx,rcx
  403388:	je     0x4032ee
  40338e:	mov    rdx,r8
  403391:	call   0x411458
  403396:	test   eax,eax
  403398:	je     0x403363
  40339a:	jmp    0x4032ee
  40339f:	nop
  4033a0:	mov    rax,QWORD PTR [rip+0x151f9]        # 0x4185a0
  4033a7:	mov    r13,QWORD PTR [rip+0x1b22a]        # 0x41e5d8
  4033ae:	mov    rsi,QWORD PTR [rax]
  4033b1:	call   r13
  4033b4:	lea    rdx,[rip+0x1045e]        # 0x413819
  4033bb:	lea    rcx,[rax+0x60]
  4033bf:	mov    r8,rsi
  4033c2:	call   0x4050e0
  4033c7:	jmp    0x403319
  4033cc:	nop
  4033cd:	nop
  4033ce:	nop
  4033cf:	nop
  4033d0:	push   r14
  4033d2:	push   r13
  4033d4:	push   r12
  4033d6:	push   rbp
  4033d7:	push   rdi
  4033d8:	push   rsi
  4033d9:	push   rbx
  4033da:	movsxd rax,DWORD PTR [rdx+0x34]
  4033de:	mov    r12d,DWORD PTR [rdx+0x30]
  4033e2:	mov    ebp,DWORD PTR [rdx]
  4033e4:	mov    esi,r12d
  4033e7:	lea    r10,[rcx+rax*8]
  4033eb:	mov    rbx,rax
  4033ee:	mov    edi,ebp
  4033f0:	cmp    ebx,esi
  4033f2:	jle    0x403440
  4033f4:	cmp    edi,ebx
  4033f6:	jle    0x403440
  4033f8:	mov    r13d,edi
  4033fb:	mov    r14d,ebx
  4033fe:	sub    r13d,ebx
  403401:	sub    r14d,esi
  403404:	cmp    r13d,r14d
  403407:	jg     0x403460
  403409:	test   r13d,r13d
  40340c:	jle    0x403439
  40340e:	movsxd rax,esi
  403411:	lea    r8,[rcx+rax*8]
  403415:	xor    eax,eax
  403417:	nop    WORD PTR [rax+rax*1+0x0]
  403420:	mov    r9,QWORD PTR [r8+rax*8]
  403424:	mov    r11,QWORD PTR [r10+rax*8]
  403428:	mov    QWORD PTR [r8+rax*8],r11
  40342c:	mov    QWORD PTR [r10+rax*8],r9
  403430:	add    rax,0x1
  403434:	cmp    r13d,eax
  403437:	jg     0x403420
  403439:	add    esi,r13d
  40343c:	cmp    ebx,esi
  40343e:	jg     0x4033f4
  403440:	mov    eax,ebp
  403442:	mov    DWORD PTR [rdx+0x34],ebp
  403445:	sub    eax,ebx
  403447:	add    r12d,eax
  40344a:	mov    DWORD PTR [rdx+0x30],r12d
  40344e:	pop    rbx
  40344f:	pop    rsi
  403450:	pop    rdi
  403451:	pop    rbp
  403452:	pop    r12
  403454:	pop    r13
  403456:	pop    r14
  403458:	ret    
  403459:	nop    DWORD PTR [rax+0x0]
  403460:	test   r14d,r14d
  403463:	jle    0x403499
  403465:	movsxd rax,esi
  403468:	lea    r9,[rcx+rax*8]
  40346c:	mov    eax,esi
  40346e:	sub    eax,ebx
  403470:	add    eax,edi
  403472:	cdqe   
  403474:	lea    r8,[rcx+rax*8]
  403478:	xor    eax,eax
  40347a:	nop    WORD PTR [rax+rax*1+0x0]
  403480:	mov    r11,QWORD PTR [r9+rax*8]
  403484:	mov    r13,QWORD PTR [r8+rax*8]
  403488:	mov    QWORD PTR [r9+rax*8],r13
  40348c:	mov    QWORD PTR [r8+rax*8],r11
  403490:	add    rax,0x1
  403494:	cmp    r14d,eax
  403497:	jg     0x403480
  403499:	sub    edi,r14d
  40349c:	jmp    0x4033f0
  4034a1:	nop    DWORD PTR [rax+rax*1+0x0]
  4034a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034b0:	push   r15
  4034b2:	push   r14
  4034b4:	push   r13
  4034b6:	push   r12
  4034b8:	push   rbp
  4034b9:	push   rdi
  4034ba:	push   rsi
  4034bb:	push   rbx
  4034bc:	sub    rsp,0x68
  4034c0:	mov    r15,QWORD PTR [rsp+0xe0]
  4034c8:	test   ecx,ecx
  4034ca:	mov    ebp,ecx
  4034cc:	mov    QWORD PTR [rsp+0xb8],rdx
  4034d4:	mov    r13,r8
  4034d7:	mov    QWORD PTR [rsp+0xc8],r9
  4034df:	mov    eax,DWORD PTR [r15+0x4]
  4034e3:	mov    DWORD PTR [rsp+0x3c],eax
  4034e7:	jle    0x40393c
  4034ed:	mov    eax,DWORD PTR [r15]
  4034f0:	mov    QWORD PTR [r15+0x10],0x0
  4034f8:	test   eax,eax
  4034fa:	jne    0x4037d4
  403500:	mov    DWORD PTR [r15],0x1
  403507:	mov    eax,0x1
  40350c:	mov    r9d,DWORD PTR [rsp+0xe8]
  403514:	mov    DWORD PTR [r15+0x34],eax
  403518:	mov    DWORD PTR [r15+0x30],eax
  40351c:	mov    QWORD PTR [r15+0x20],0x0
  403524:	mov    eax,0x1
  403529:	test   r9d,r9d
  40352c:	je     0x403950
  403532:	mov    DWORD PTR [r15+0x2c],eax
  403536:	movzx  edx,BYTE PTR [r13+0x0]
  40353b:	cmp    dl,0x2d
  40353e:	je     0x403977
  403544:	cmp    dl,0x2b
  403547:	je     0x403ab0
  40354d:	xor    eax,0x1
  403550:	mov    DWORD PTR [r15+0x28],eax
  403554:	mov    DWORD PTR [r15+0x18],0x1
  40355c:	movzx  eax,BYTE PTR [r13+0x0]
  403561:	cmp    al,0x3a
  403563:	mov    rbx,QWORD PTR [r15+0x20]
  403567:	mov    eax,0x0
  40356c:	cmovne eax,DWORD PTR [rsp+0x3c]
  403571:	test   rbx,rbx
  403574:	mov    DWORD PTR [rsp+0x3c],eax
  403578:	je     0x4038b0
  40357e:	cmp    BYTE PTR [rbx],0x0
  403581:	je     0x4038b0
  403587:	cmp    QWORD PTR [rsp+0xc8],0x0
  403590:	je     0x403802
  403596:	movsxd rax,DWORD PTR [r15]
  403599:	mov    rdi,QWORD PTR [rsp+0xb8]
  4035a1:	mov    r8,rax
  4035a4:	mov    rax,QWORD PTR [rdi+rax*8]
  4035a8:	movsx  edx,BYTE PTR [rax+0x1]
  4035ac:	cmp    dl,0x2d
  4035af:	je     0x4035e4
  4035b1:	mov    ecx,DWORD PTR [rsp+0xd8]
  4035b8:	test   ecx,ecx
  4035ba:	je     0x403802
  4035c0:	cmp    BYTE PTR [rax+0x2],0x0
  4035c4:	jne    0x4035e4
  4035c6:	mov    rcx,r13
  4035c9:	mov    DWORD PTR [rsp+0x40],r8d
  4035ce:	mov    rdi,rbx
  4035d1:	call   0x411460
  4035d6:	test   rax,rax
  4035d9:	mov    r8d,DWORD PTR [rsp+0x40]
  4035de:	jne    0x403805
  4035e4:	movzx  eax,BYTE PTR [rbx]
  4035e7:	mov    rdi,rbx
  4035ea:	cmp    al,0x3d
  4035ec:	je     0x403eb3
  4035f2:	test   al,al
  4035f4:	jne    0x403604
  4035f6:	jmp    0x403eb3
  4035fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403600:	test   al,al
  403602:	je     0x40360f
  403604:	add    rdi,0x1
  403608:	movzx  eax,BYTE PTR [rdi]
  40360b:	cmp    al,0x3d
  40360d:	jne    0x403600
  40360f:	mov    rax,rdi
  403612:	sub    rax,rbx
  403615:	mov    r11d,eax
  403618:	mov    rsi,QWORD PTR [rsp+0xc8]
  403620:	mov    r14,QWORD PTR [rsi]
  403623:	test   r14,r14
  403626:	je     0x40373d
  40362c:	mov    eax,eax
  40362e:	xor    ecx,ecx
  403630:	mov    rdx,rbx
  403633:	mov    QWORD PTR [rsp+0x48],rdi
  403638:	mov    DWORD PTR [rsp+0xb0],ebp
  40363f:	xor    r12d,r12d
  403642:	mov    QWORD PTR [rsp+0xc0],r13
  40364a:	mov    DWORD PTR [rsp+0x44],0xffffffff
  403652:	mov    r13,r14
  403655:	mov    DWORD PTR [rsp+0x40],0x0
  40365d:	xor    ebx,ebx
  40365f:	mov    rdi,rax
  403662:	mov    ebp,r11d
  403665:	mov    r14,rcx
  403668:	jmp    0x4036c4
  40366a:	nop    WORD PTR [rax+rax*1+0x0]
  403670:	mov    eax,DWORD PTR [rsp+0x40]
  403674:	test   eax,eax
  403676:	jne    0x4036b0
  403678:	mov    eax,DWORD PTR [rsp+0xd8]
  40367f:	test   eax,eax
  403681:	jne    0x403690
  403683:	mov    eax,DWORD PTR [rsi+0x8]
  403686:	cmp    DWORD PTR [r14+0x8],eax
  40368a:	je     0x403ac1
  403690:	mov    ecx,0x10
  403695:	call   0x4114b8
  40369a:	test   rax,rax
  40369d:	je     0x403ae1
  4036a3:	mov    QWORD PTR [rax+0x8],rbx
  4036a7:	mov    QWORD PTR [rax],rsi
  4036aa:	mov    rbx,rax
  4036ad:	nop    DWORD PTR [rax]
  4036b0:	add    rsi,0x20
  4036b4:	mov    r13,QWORD PTR [rsi]
  4036b7:	add    r12d,0x1
  4036bb:	test   r13,r13
  4036be:	je     0x403700
  4036c0:	mov    rdx,QWORD PTR [r15+0x20]
  4036c4:	mov    r8,rdi
  4036c7:	mov    rcx,r13
  4036ca:	call   0x411438
  4036cf:	test   eax,eax
  4036d1:	jne    0x4036b0
  4036d3:	mov    rcx,r13
  4036d6:	call   0x411440
  4036db:	cmp    ebp,eax
  4036dd:	je     0x403b10
  4036e3:	test   r14,r14
  4036e6:	jne    0x403670
  4036e8:	mov    r14,rsi
  4036eb:	add    rsi,0x20
  4036ef:	mov    r13,QWORD PTR [rsi]
  4036f2:	mov    DWORD PTR [rsp+0x44],r12d
  4036f7:	add    r12d,0x1
  4036fb:	test   r13,r13
  4036fe:	jne    0x4036c0
  403700:	test   rbx,rbx
  403703:	mov    rcx,r14
  403706:	mov    rdi,QWORD PTR [rsp+0x48]
  40370b:	mov    ebp,DWORD PTR [rsp+0xb0]
  403712:	mov    r13,QWORD PTR [rsp+0xc0]
  40371a:	setne  sil
  40371e:	movzx  eax,BYTE PTR [rsp+0x40]
  403723:	jne    0x403e00
  403729:	test   al,al
  40372b:	jne    0x403e00
  403731:	mov    r8d,DWORD PTR [r15]
  403734:	test   rcx,rcx
  403737:	jne    0x404376
  40373d:	mov    ebx,DWORD PTR [rsp+0xd8]
  403744:	test   ebx,ebx
  403746:	jne    0x403da7
  40374c:	mov    r11d,DWORD PTR [rsp+0x3c]
  403751:	test   r11d,r11d
  403754:	je     0x4037b0
  403756:	mov    rax,QWORD PTR [rsp+0xb8]
  40375e:	movsxd r14,r8d
  403761:	mov    rsi,QWORD PTR [rax+r14*8]
  403765:	cmp    BYTE PTR [rsi+0x1],0x2d
  403769:	je     0x40400e
  40376f:	mov    rbx,QWORD PTR [r15+0x20]
  403773:	mov    rax,QWORD PTR [rsp+0xb8]
  40377b:	movsx  ebp,BYTE PTR [rsi]
  40377e:	lea    rcx,[rip+0x101b3]        # 0x413938
  403785:	mov    rdi,QWORD PTR [rax]
  403788:	call   0x40b090
  40378d:	mov    rsi,rax
  403790:	call   QWORD PTR [rip+0x1ae42]        # 0x41e5d8
  403796:	lea    rcx,[rax+0x60]
  40379a:	mov    r8,rdi
  40379d:	mov    QWORD PTR [rsp+0x20],rbx
  4037a2:	mov    r9d,ebp
  4037a5:	mov    rdx,rsi
  4037a8:	call   0x4050e0
  4037ad:	mov    r8d,DWORD PTR [r15]
  4037b0:	lea    rax,[rip+0x101a1]        # 0x413958
  4037b7:	lea    r14d,[r8+0x1]
  4037bb:	mov    DWORD PTR [r15+0x8],0x0
  4037c3:	mov    ebx,0x3f
  4037c8:	mov    QWORD PTR [r15+0x20],rax
  4037cc:	mov    DWORD PTR [r15],r14d
  4037cf:	jmp    0x40389c
  4037d4:	mov    r10d,DWORD PTR [r15+0x18]
  4037d8:	test   r10d,r10d
  4037db:	je     0x40350c
  4037e1:	movzx  eax,BYTE PTR [r8]
  4037e5:	lea    edx,[rax-0x2b]
  4037e8:	and    edx,0xfd
  4037ee:	jne    0x403561
  4037f4:	movzx  eax,BYTE PTR [r8+0x1]
  4037f9:	add    r13,0x1
  4037fd:	jmp    0x403561
  403802:	mov    rdi,rbx
  403805:	lea    r12,[rdi+0x1]
  403809:	mov    rcx,r13
  40380c:	mov    QWORD PTR [r15+0x20],r12
  403810:	movsx  ebx,BYTE PTR [rdi]
  403813:	mov    edx,ebx
  403815:	mov    esi,ebx
  403817:	call   0x411460
  40381c:	cmp    BYTE PTR [rdi+0x1],0x0
  403820:	je     0x4039b2
  403826:	sub    esi,0x3a
  403829:	cmp    sil,0x1
  40382d:	jbe    0x403885
  40382f:	test   rax,rax
  403832:	je     0x403885
  403834:	cmp    BYTE PTR [rax],0x57
  403837:	movzx  edx,BYTE PTR [rax+0x1]
  40383b:	je     0x403c8b
  403841:	cmp    dl,0x3a
  403844:	jne    0x40389c
  403846:	cmp    BYTE PTR [rax+0x2],0x3a
  40384a:	je     0x403fef
  403850:	cmp    BYTE PTR [rdi+0x1],0x0
  403854:	jne    0x403fe2
  40385a:	movsxd rax,DWORD PTR [r15]
  40385d:	cmp    eax,ebp
  40385f:	je     0x404134
  403865:	mov    rsi,QWORD PTR [rsp+0xb8]
  40386d:	lea    edx,[rax+0x1]
  403870:	mov    DWORD PTR [r15],edx
  403873:	mov    rax,QWORD PTR [rsi+rax*8]
  403877:	mov    QWORD PTR [r15+0x10],rax
  40387b:	mov    QWORD PTR [r15+0x20],0x0
  403883:	jmp    0x40389c
  403885:	mov    r10d,DWORD PTR [rsp+0x3c]
  40388a:	test   r10d,r10d
  40388d:	jne    0x4039c0
  403893:	mov    DWORD PTR [r15+0x8],ebx
  403897:	mov    ebx,0x3f
  40389c:	mov    eax,ebx
  40389e:	add    rsp,0x68
  4038a2:	pop    rbx
  4038a3:	pop    rsi
  4038a4:	pop    rdi
  4038a5:	pop    rbp
  4038a6:	pop    r12
  4038a8:	pop    r13
  4038aa:	pop    r14
  4038ac:	pop    r15
  4038ae:	ret    
  4038af:	nop
  4038b0:	mov    edx,DWORD PTR [r15]
  4038b3:	cmp    DWORD PTR [r15+0x34],edx
  4038b7:	jle    0x4038bd
  4038b9:	mov    DWORD PTR [r15+0x34],edx
  4038bd:	cmp    edx,DWORD PTR [r15+0x30]
  4038c1:	jge    0x4038c7
  4038c3:	mov    DWORD PTR [r15+0x30],edx
  4038c7:	cmp    DWORD PTR [r15+0x28],0x1
  4038cc:	je     0x403a30
  4038d2:	cmp    ebp,edx
  4038d4:	je     0x403a91
  4038da:	mov    rdi,QWORD PTR [rsp+0xb8]
  4038e2:	movsxd rax,edx
  4038e5:	mov    ecx,0x3
  4038ea:	mov    rax,QWORD PTR [rdi+rax*8]
  4038ee:	lea    rdi,[rip+0xff3b]        # 0x413830
  4038f5:	mov    rsi,rax
  4038f8:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4038fa:	jne    0x403990
  403900:	mov    eax,DWORD PTR [r15+0x30]
  403904:	mov    ecx,DWORD PTR [r15+0x34]
  403908:	add    edx,0x1
  40390b:	mov    DWORD PTR [r15],edx
  40390e:	cmp    eax,ecx
  403910:	je     0x403c50
  403916:	cmp    edx,ecx
  403918:	je     0x40392e
  40391a:	mov    rcx,QWORD PTR [rsp+0xb8]
  403922:	mov    rdx,r15
  403925:	call   0x4033d0
  40392a:	mov    eax,DWORD PTR [r15+0x30]
  40392e:	mov    DWORD PTR [r15+0x34],ebp
  403932:	mov    DWORD PTR [r15],ebp
  403935:	cmp    ebp,eax
  403937:	je     0x40393c
  403939:	mov    DWORD PTR [r15],eax
  40393c:	mov    ebx,0xffffffff
  403941:	jmp    0x40389c
  403946:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403950:	lea    rcx,[rip+0xfec9]        # 0x413820
  403957:	call   0x4114e0
  40395c:	test   rax,rax
  40395f:	setne  al
  403962:	movzx  eax,al
  403965:	mov    DWORD PTR [r15+0x2c],eax
  403969:	movzx  edx,BYTE PTR [r13+0x0]
  40396e:	cmp    dl,0x2d
  403971:	jne    0x403544
  403977:	mov    DWORD PTR [r15+0x28],0x2
  40397f:	add    r13,0x1
  403983:	jmp    0x403554
  403988:	nop    DWORD PTR [rax+rax*1+0x0]
  403990:	cmp    BYTE PTR [rax],0x2d
  403993:	je     0x403a00
  403995:	mov    r8d,DWORD PTR [r15+0x28]
  403999:	test   r8d,r8d
  40399c:	je     0x40393c
  40399e:	add    edx,0x1
  4039a1:	mov    QWORD PTR [r15+0x10],rax
  4039a5:	mov    ebx,0x1
  4039aa:	mov    DWORD PTR [r15],edx
  4039ad:	jmp    0x40389c
  4039b2:	add    DWORD PTR [r15],0x1
  4039b6:	jmp    0x403826
  4039bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4039c0:	mov    rax,QWORD PTR [rsp+0xb8]
  4039c8:	lea    rcx,[rip+0xff8a]        # 0x413959
  4039cf:	mov    rdi,QWORD PTR [rax]
  4039d2:	call   0x40b090
  4039d7:	mov    rsi,rax
  4039da:	call   QWORD PTR [rip+0x1abf8]        # 0x41e5d8
  4039e0:	lea    rcx,[rax+0x60]
  4039e4:	mov    r9d,ebx
  4039e7:	mov    r8,rdi
  4039ea:	mov    rdx,rsi
  4039ed:	call   0x4050e0
  4039f2:	jmp    0x403893
  4039f7:	nop    WORD PTR [rax+rax*1+0x0]
  403a00:	movzx  ecx,BYTE PTR [rax+0x1]
  403a04:	test   cl,cl
  403a06:	je     0x403995
  403a08:	cmp    cl,0x2d
  403a0b:	sete   dl
  403a0e:	xor    ecx,ecx
  403a10:	cmp    QWORD PTR [rsp+0xc8],0x0
  403a19:	setne  cl
  403a1c:	and    rdx,rcx
  403a1f:	lea    rbx,[rax+rdx*1+0x1]
  403a24:	mov    QWORD PTR [r15+0x20],rbx
  403a28:	jmp    0x403587
  403a2d:	nop    DWORD PTR [rax]
  403a30:	mov    eax,DWORD PTR [r15+0x34]
  403a34:	cmp    DWORD PTR [r15+0x30],eax
  403a38:	je     0x403ea0
  403a3e:	cmp    edx,eax
  403a40:	je     0x403a55
  403a42:	mov    rcx,QWORD PTR [rsp+0xb8]
  403a4a:	mov    rdx,r15
  403a4d:	call   0x4033d0
  403a52:	mov    eax,DWORD PTR [r15]
  403a55:	cmp    ebp,eax
  403a57:	jle    0x403aa0
  403a59:	mov    rsi,QWORD PTR [rsp+0xb8]
  403a61:	movsxd rdx,eax
  403a64:	lea    rdx,[rsi+rdx*8]
  403a68:	jmp    0x403a7e
  403a6a:	nop    WORD PTR [rax+rax*1+0x0]
  403a70:	add    eax,0x1
  403a73:	add    rdx,0x8
  403a77:	cmp    eax,ebp
  403a79:	mov    DWORD PTR [r15],eax
  403a7c:	je     0x403aa0
  403a7e:	mov    rcx,QWORD PTR [rdx]
  403a81:	cmp    BYTE PTR [rcx],0x2d
  403a84:	jne    0x403a70
  403a86:	cmp    BYTE PTR [rcx+0x1],0x0
  403a8a:	je     0x403a70
  403a8c:	mov    edx,DWORD PTR [r15]
  403a8f:	jmp    0x403aa2
  403a91:	mov    ebp,DWORD PTR [r15+0x34]
  403a95:	mov    eax,DWORD PTR [r15+0x30]
  403a99:	jmp    0x403935
  403a9e:	xchg   ax,ax
  403aa0:	mov    edx,eax
  403aa2:	mov    DWORD PTR [r15+0x34],eax
  403aa6:	jmp    0x4038d2
  403aab:	nop    DWORD PTR [rax+rax*1+0x0]
  403ab0:	mov    DWORD PTR [r15+0x28],0x0
  403ab8:	add    r13,0x1
  403abc:	jmp    0x403554
  403ac1:	mov    rax,QWORD PTR [rsi+0x10]
  403ac5:	cmp    QWORD PTR [r14+0x10],rax
  403ac9:	jne    0x403690
  403acf:	mov    eax,DWORD PTR [rsi+0x18]
  403ad2:	cmp    DWORD PTR [r14+0x18],eax
  403ad6:	jne    0x403690
  403adc:	jmp    0x4036b0
  403ae1:	test   rbx,rbx
  403ae4:	je     0x403b01
  403ae6:	mov    rcx,rbx
  403ae9:	nop    DWORD PTR [rax+0x0]
  403af0:	mov    rbx,QWORD PTR [rbx+0x8]
  403af4:	call   0x411500
  403af9:	test   rbx,rbx
  403afc:	mov    rcx,rbx
  403aff:	jne    0x403af0
  403b01:	mov    DWORD PTR [rsp+0x40],0x1
  403b09:	jmp    0x4036b0
  403b0e:	xchg   ax,ax
  403b10:	test   rbx,rbx
  403b13:	mov    rdi,QWORD PTR [rsp+0x48]
  403b18:	mov    ebp,DWORD PTR [rsp+0xb0]
  403b1f:	mov    r13,QWORD PTR [rsp+0xc0]
  403b27:	mov    rcx,rbx
  403b2a:	jne    0x403b44
  403b2c:	mov    eax,DWORD PTR [rsp+0x40]
  403b30:	mov    r8d,DWORD PTR [r15]
  403b33:	test   eax,eax
  403b35:	jne    0x403b58
  403b37:	mov    DWORD PTR [rsp+0x44],r12d
  403b3c:	mov    rcx,rsi
  403b3f:	jmp    0x403734
  403b44:	mov    rbx,QWORD PTR [rcx+0x8]
  403b48:	call   0x411500
  403b4d:	test   rbx,rbx
  403b50:	mov    rcx,rbx
  403b53:	jne    0x403b44
  403b55:	mov    r8d,DWORD PTR [r15]
  403b58:	lea    eax,[r8+0x1]
  403b5c:	mov    DWORD PTR [r15],eax
  403b5f:	cmp    BYTE PTR [rdi],0x0
  403b62:	je     0x403c00
  403b68:	mov    r13d,DWORD PTR [rsi+0x8]
  403b6c:	test   r13d,r13d
  403b6f:	jne    0x403c5b
  403b75:	mov    ebp,DWORD PTR [rsp+0x3c]
  403b79:	test   ebp,ebp
  403b7b:	je     0x403bd3
  403b7d:	mov    rdi,QWORD PTR [rsp+0xb8]
  403b85:	cdqe   
  403b87:	mov    rax,QWORD PTR [rdi+rax*8-0x8]
  403b8c:	cmp    BYTE PTR [rax+0x1],0x2d
  403b90:	je     0x403fb0
  403b96:	movsx  ebp,BYTE PTR [rax]
  403b99:	mov    rax,QWORD PTR [rsp+0xb8]
  403ba1:	lea    rcx,[rip+0xfd18]        # 0x4138c0
  403ba8:	mov    r12,QWORD PTR [rsi]
  403bab:	mov    rdi,QWORD PTR [rax]
  403bae:	call   0x40b090
  403bb3:	mov    rbx,rax
  403bb6:	call   QWORD PTR [rip+0x1aa1c]        # 0x41e5d8
  403bbc:	lea    rcx,[rax+0x60]
  403bc0:	mov    QWORD PTR [rsp+0x20],r12
  403bc5:	mov    r9d,ebp
  403bc8:	mov    r8,rdi
  403bcb:	mov    rdx,rbx
  403bce:	call   0x4050e0
  403bd3:	mov    rbx,QWORD PTR [r15+0x20]
  403bd7:	mov    rcx,rbx
  403bda:	call   0x411440
  403bdf:	add    rax,rbx
  403be2:	mov    QWORD PTR [r15+0x20],rax
  403be6:	mov    eax,DWORD PTR [rsi+0x18]
  403be9:	mov    DWORD PTR [r15+0x8],eax
  403bed:	mov    ebx,0x3f
  403bf2:	jmp    0x40389c
  403bf7:	nop    WORD PTR [rax+rax*1+0x0]
  403c00:	cmp    DWORD PTR [rsi+0x8],0x1
  403c04:	je     0x403c65
  403c06:	mov    rbx,QWORD PTR [r15+0x20]
  403c0a:	mov    rcx,rbx
  403c0d:	call   0x411440
  403c12:	add    rax,rbx
  403c15:	cmp    QWORD PTR [rsp+0xd0],0x0
  403c1e:	mov    QWORD PTR [r15+0x20],rax
  403c22:	je     0x403c2f
  403c24:	mov    rax,QWORD PTR [rsp+0xd0]
  403c2c:	mov    DWORD PTR [rax],r12d
  403c2f:	mov    rax,QWORD PTR [rsi+0x10]
  403c33:	test   rax,rax
  403c36:	je     0x403f6d
  403c3c:	mov    edx,DWORD PTR [rsi+0x18]
  403c3f:	xor    ebx,ebx
  403c41:	mov    DWORD PTR [rax],edx
  403c43:	jmp    0x40389c
  403c48:	nop    DWORD PTR [rax+rax*1+0x0]
  403c50:	mov    DWORD PTR [r15+0x30],edx
  403c54:	mov    eax,edx
  403c56:	jmp    0x40392e
  403c5b:	add    rdi,0x1
  403c5f:	mov    QWORD PTR [r15+0x10],rdi
  403c63:	jmp    0x403c06
  403c65:	cmp    ebp,eax
  403c67:	jle    0x403f75
  403c6d:	mov    rdi,QWORD PTR [rsp+0xb8]
  403c75:	cdqe   
  403c77:	lea    r14d,[r8+0x2]
  403c7b:	mov    DWORD PTR [r15],r14d
  403c7e:	mov    rax,QWORD PTR [rdi+rax*8]
  403c82:	mov    QWORD PTR [r15+0x10],rax
  403c86:	jmp    0x403c06
  403c8b:	cmp    dl,0x3b
  403c8e:	jne    0x403841
  403c94:	cmp    QWORD PTR [rsp+0xc8],0x0
  403c9d:	je     0x40417d
  403ca3:	cmp    BYTE PTR [rdi+0x1],0x0
  403ca7:	je     0x404157
  403cad:	add    DWORD PTR [r15],0x1
  403cb1:	mov    QWORD PTR [r15+0x10],r12
  403cb5:	mov    QWORD PTR [r15+0x20],r12
  403cb9:	movzx  edi,BYTE PTR [r12]
  403cbe:	mov    rbx,r12
  403cc1:	cmp    dil,0x3d
  403cc5:	jne    0x403cdd
  403cc7:	jmp    0x403ce2
  403cc9:	nop    DWORD PTR [rax+0x0]
  403cd0:	add    rbx,0x1
  403cd4:	movzx  edi,BYTE PTR [rbx]
  403cd7:	cmp    dil,0x3d
  403cdb:	je     0x403ce2
  403cdd:	test   dil,dil
  403ce0:	jne    0x403cd0
  403ce2:	mov    rax,QWORD PTR [rsp+0xc8]
  403cea:	mov    r14,QWORD PTR [rax]
  403ced:	test   r14,r14
  403cf0:	je     0x40417d
  403cf6:	mov    rax,rbx
  403cf9:	xor    r10d,r10d
  403cfc:	xor    ecx,ecx
  403cfe:	sub    rax,r12
  403d01:	mov    BYTE PTR [rsp+0x44],dil
  403d06:	mov    QWORD PTR [rsp+0x48],rbx
  403d0b:	mov    edx,eax
  403d0d:	mov    DWORD PTR [rsp+0xb0],ebp
  403d14:	mov    QWORD PTR [rsp+0xc0],r13
  403d1c:	mov    QWORD PTR [rsp+0xe0],r15
  403d24:	xor    esi,esi
  403d26:	mov    DWORD PTR [rsp+0x40],0x0
  403d2e:	mov    rdi,rax
  403d31:	mov    rbp,rcx
  403d34:	mov    r13d,r10d
  403d37:	mov    rbx,QWORD PTR [rsp+0xc8]
  403d3f:	mov    r15,rdx
  403d42:	jmp    0x403d76
  403d44:	mov    r9d,DWORD PTR [rsp+0xd8]
  403d4c:	test   r9d,r9d
  403d4f:	jne    0x403d5d
  403d51:	mov    eax,DWORD PTR [rbx+0x8]
  403d54:	cmp    DWORD PTR [rbp+0x8],eax
  403d57:	je     0x404086
  403d5d:	mov    r13d,0x1
  403d63:	add    rbx,0x20
  403d67:	mov    r14,QWORD PTR [rbx]
  403d6a:	add    esi,0x1
  403d6d:	test   r14,r14
  403d70:	je     0x4040a8
  403d76:	mov    r8,rdi
  403d79:	mov    rdx,r12
  403d7c:	mov    rcx,r14
  403d7f:	call   0x411438
  403d84:	test   eax,eax
  403d86:	jne    0x403d63
  403d88:	mov    rcx,r14
  403d8b:	call   0x411440
  403d90:	cmp    r15,rax
  403d93:	je     0x40418f
  403d99:	test   rbp,rbp
  403d9c:	jne    0x403d44
  403d9e:	mov    DWORD PTR [rsp+0x40],esi
  403da2:	mov    rbp,rbx
  403da5:	jmp    0x403d63
  403da7:	mov    rsi,QWORD PTR [rsp+0xb8]
  403daf:	movsxd rax,r8d
  403db2:	mov    rsi,QWORD PTR [rsi+rax*8]
  403db6:	cmp    BYTE PTR [rsi+0x1],0x2d
  403dba:	je     0x404002
  403dc0:	mov    rbx,QWORD PTR [r15+0x20]
  403dc4:	mov    rcx,r13
  403dc7:	mov    DWORD PTR [rsp+0x40],r8d
  403dcc:	movsx  edx,BYTE PTR [rbx]
  403dcf:	mov    rdi,rbx
  403dd2:	call   0x411460
  403dd7:	test   rax,rax
  403dda:	mov    r8d,DWORD PTR [rsp+0x40]
  403ddf:	jne    0x403805
  403de5:	mov    edx,DWORD PTR [rsp+0x3c]
  403de9:	test   edx,edx
  403deb:	jne    0x403773
  403df1:	jmp    0x4037b0
  403df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e00:	mov    r14d,DWORD PTR [rsp+0x3c]
  403e05:	test   r14d,r14d
  403e08:	setne  dl
  403e0b:	test   sil,sil
  403e0e:	je     0x403e18
  403e10:	test   dl,dl
  403e12:	jne    0x403ebd
  403e18:	test   al,al
  403e1a:	je     0x403e59
  403e1c:	test   dl,dl
  403e1e:	je     0x403e59
  403e20:	movsxd rax,DWORD PTR [r15]
  403e23:	mov    rdi,QWORD PTR [rsp+0xb8]
  403e2b:	lea    rcx,[rip+0xfa3b]        # 0x41386d
  403e32:	mov    rbp,QWORD PTR [rdi]
  403e35:	mov    r12,QWORD PTR [rdi+rax*8]
  403e39:	call   0x40b090
  403e3e:	mov    rdi,rax
  403e41:	call   QWORD PTR [rip+0x1a791]        # 0x41e5d8
  403e47:	lea    rcx,[rax+0x60]
  403e4b:	mov    r9,r12
  403e4e:	mov    r8,rbp
  403e51:	mov    rdx,rdi
  403e54:	call   0x4050e0
  403e59:	mov    rdi,QWORD PTR [r15+0x20]
  403e5d:	mov    rcx,rdi
  403e60:	call   0x411440
  403e65:	add    DWORD PTR [r15],0x1
  403e69:	add    rax,rdi
  403e6c:	test   sil,sil
  403e6f:	mov    QWORD PTR [r15+0x20],rax
  403e73:	mov    DWORD PTR [r15+0x8],0x0
  403e7b:	je     0x403bed
  403e81:	mov    rcx,rbx
  403e84:	mov    rbx,QWORD PTR [rcx+0x8]
  403e88:	call   0x411500
  403e8d:	test   rbx,rbx
  403e90:	mov    rcx,rbx
  403e93:	jne    0x403e84
  403e95:	jmp    0x403bed
  403e9a:	nop    WORD PTR [rax+rax*1+0x0]
  403ea0:	cmp    edx,eax
  403ea2:	je     0x403a55
  403ea8:	mov    DWORD PTR [r15+0x30],edx
  403eac:	mov    eax,edx
  403eae:	jmp    0x403a55
  403eb3:	xor    r11d,r11d
  403eb6:	xor    eax,eax
  403eb8:	jmp    0x403618
  403ebd:	movsxd rax,DWORD PTR [r15]
  403ec0:	mov    rsi,QWORD PTR [rsp+0xb8]
  403ec8:	mov    r14,rcx
  403ecb:	mov    QWORD PTR [rsp+0x50],rcx
  403ed0:	lea    rcx,[rip+0xf961]        # 0x413838
  403ed7:	mov    QWORD PTR [rsp+0x58],rbx
  403edc:	mov    rbp,QWORD PTR [rsi+rax*8]
  403ee0:	mov    rsi,QWORD PTR [rsi]
  403ee3:	call   0x40b090
  403ee8:	mov    rdi,QWORD PTR [rip+0x1a6e9]        # 0x41e5d8
  403eef:	mov    rbx,rax
  403ef2:	call   rdi
  403ef4:	lea    rcx,[rax+0x60]
  403ef8:	mov    rdx,rbx
  403efb:	mov    r9,rbp
  403efe:	mov    r8,rsi
  403f01:	lea    rbx,[rsp+0x50]
  403f06:	call   0x4050e0
  403f0b:	mov    rax,r14
  403f0e:	jmp    0x403f13
  403f10:	mov    rax,QWORD PTR [rbx]
  403f13:	mov    rsi,QWORD PTR [rax]
  403f16:	call   rdi
  403f18:	lea    rdx,[rip+0xf946]        # 0x413865
  403f1f:	lea    rcx,[rax+0x60]
  403f23:	mov    r8,rsi
  403f26:	call   0x4050e0
  403f2b:	mov    rbx,QWORD PTR [rbx+0x8]
  403f2f:	test   rbx,rbx
  403f32:	jne    0x403f10
  403f34:	call   rdi
  403f36:	lea    rdx,[rax+0x60]
  403f3a:	mov    ecx,0xa
  403f3f:	call   0x405140
  403f44:	mov    rbx,QWORD PTR [r15+0x20]
  403f48:	mov    rcx,rbx
  403f4b:	call   0x411440
  403f50:	add    rax,rbx
  403f53:	add    DWORD PTR [r15],0x1
  403f57:	mov    DWORD PTR [r15+0x8],0x0
  403f5f:	mov    QWORD PTR [r15+0x20],rax
  403f63:	mov    ebx,0x3f
  403f68:	jmp    0x40389c
  403f6d:	mov    ebx,DWORD PTR [rsi+0x18]
  403f70:	jmp    0x40389c
  403f75:	mov    edi,DWORD PTR [rsp+0x3c]
  403f79:	test   edi,edi
  403f7b:	jne    0x40404c
  403f81:	mov    rbx,QWORD PTR [r15+0x20]
  403f85:	mov    rcx,rbx
  403f88:	call   0x411440
  403f8d:	add    rax,rbx
  403f90:	mov    QWORD PTR [r15+0x20],rax
  403f94:	mov    eax,DWORD PTR [rsi+0x18]
  403f97:	mov    DWORD PTR [r15+0x8],eax
  403f9b:	cmp    BYTE PTR [r13+0x0],0x3a
  403fa0:	jne    0x403bed
  403fa6:	mov    ebx,0x3a
  403fab:	jmp    0x40389c
  403fb0:	mov    rbp,QWORD PTR [rsi]
  403fb3:	mov    rdi,QWORD PTR [rdi]
  403fb6:	lea    rcx,[rip+0xf8d3]        # 0x413890
  403fbd:	call   0x40b090
  403fc2:	mov    rbx,rax
  403fc5:	call   QWORD PTR [rip+0x1a60d]        # 0x41e5d8
  403fcb:	lea    rcx,[rax+0x60]
  403fcf:	mov    r9,rbp
  403fd2:	mov    r8,rdi
  403fd5:	mov    rdx,rbx
  403fd8:	call   0x4050e0
  403fdd:	jmp    0x403bd3
  403fe2:	mov    QWORD PTR [r15+0x10],r12
  403fe6:	add    DWORD PTR [r15],0x1
  403fea:	jmp    0x40387b
  403fef:	cmp    BYTE PTR [rdi+0x1],0x0
  403ff3:	jne    0x403fe2
  403ff5:	mov    QWORD PTR [r15+0x10],0x0
  403ffd:	jmp    0x40387b
  404002:	mov    eax,DWORD PTR [rsp+0x3c]
  404006:	test   eax,eax
  404008:	je     0x4037b0
  40400e:	mov    rax,QWORD PTR [rsp+0xb8]
  404016:	lea    rcx,[rip+0xf8fb]        # 0x413918
  40401d:	mov    rdi,QWORD PTR [r15+0x20]
  404021:	mov    rsi,QWORD PTR [rax]
  404024:	call   0x40b090
  404029:	mov    rbx,rax
  40402c:	call   QWORD PTR [rip+0x1a5a6]        # 0x41e5d8
  404032:	lea    rcx,[rax+0x60]
  404036:	mov    r8,rsi
  404039:	mov    r9,rdi
  40403c:	mov    rdx,rbx
  40403f:	call   0x4050e0
  404044:	mov    r8d,DWORD PTR [r15]
  404047:	jmp    0x4037b0
  40404c:	mov    rax,QWORD PTR [rsp+0xb8]
  404054:	mov    rbp,QWORD PTR [rsi]
  404057:	lea    rcx,[rip+0xf892]        # 0x4138f0
  40405e:	mov    rdi,QWORD PTR [rax]
  404061:	call   0x40b090
  404066:	mov    rbx,rax
  404069:	call   QWORD PTR [rip+0x1a569]        # 0x41e5d8
  40406f:	lea    rcx,[rax+0x60]
  404073:	mov    r9,rbp
  404076:	mov    r8,rdi
  404079:	mov    rdx,rbx
  40407c:	call   0x4050e0
  404081:	jmp    0x403f81
  404086:	mov    rax,QWORD PTR [rbx+0x10]
  40408a:	cmp    QWORD PTR [rbp+0x10],rax
  40408e:	jne    0x403d5d
  404094:	mov    eax,DWORD PTR [rbx+0x18]
  404097:	cmp    DWORD PTR [rbp+0x18],eax
  40409a:	mov    eax,0x1
  40409f:	cmovne r13d,eax
  4040a3:	jmp    0x403d63
  4040a8:	mov    eax,r13d
  4040ab:	mov    rsi,rbp
  4040ae:	movzx  edi,BYTE PTR [rsp+0x44]
  4040b3:	test   eax,eax
  4040b5:	mov    rbx,QWORD PTR [rsp+0x48]
  4040ba:	mov    ebp,DWORD PTR [rsp+0xb0]
  4040c1:	mov    r13,QWORD PTR [rsp+0xc0]
  4040c9:	mov    r15,QWORD PTR [rsp+0xe0]
  4040d1:	je     0x404206
  4040d7:	mov    r8d,DWORD PTR [rsp+0x3c]
  4040dc:	test   r8d,r8d
  4040df:	je     0x404117
  4040e1:	mov    rax,QWORD PTR [rsp+0xb8]
  4040e9:	lea    rcx,[rip+0xf8b8]        # 0x4139a8
  4040f0:	mov    rsi,QWORD PTR [rax]
  4040f3:	call   0x40b090
  4040f8:	mov    rbx,rax
  4040fb:	call   QWORD PTR [rip+0x1a4d7]        # 0x41e5d8
  404101:	lea    rcx,[rax+0x60]
  404105:	mov    r9,r12
  404108:	mov    r8,rsi
  40410b:	mov    rdx,rbx
  40410e:	call   0x4050e0
  404113:	mov    r12,QWORD PTR [r15+0x20]
  404117:	mov    rcx,r12
  40411a:	mov    ebx,0x3f
  40411f:	call   0x411440
  404124:	add    r12,rax
  404127:	add    DWORD PTR [r15],0x1
  40412b:	mov    QWORD PTR [r15+0x20],r12
  40412f:	jmp    0x40389c
  404134:	mov    ecx,DWORD PTR [rsp+0x3c]
  404138:	test   ecx,ecx
  40413a:	jne    0x404220
  404140:	mov    DWORD PTR [r15+0x8],ebx
  404144:	xor    ebx,ebx
  404146:	cmp    BYTE PTR [r13+0x0],0x3a
  40414b:	setne  bl
  40414e:	lea    ebx,[rbx+rbx*4+0x3a]
  404152:	jmp    0x40387b
  404157:	movsxd rax,DWORD PTR [r15]
  40415a:	cmp    eax,ebp
  40415c:	je     0x404257
  404162:	mov    rsi,QWORD PTR [rsp+0xb8]
  40416a:	lea    edx,[rax+0x1]
  40416d:	mov    DWORD PTR [r15],edx
  404170:	mov    r12,QWORD PTR [rsi+rax*8]
  404174:	mov    QWORD PTR [r15+0x10],r12
  404178:	jmp    0x403cb5
  40417d:	mov    QWORD PTR [r15+0x20],0x0
  404185:	mov    ebx,0x57
  40418a:	jmp    0x40389c
  40418f:	movzx  edi,BYTE PTR [rsp+0x44]
  404194:	mov    QWORD PTR [rsp+0xc8],rbx
  40419c:	mov    ebp,DWORD PTR [rsp+0xb0]
  4041a3:	mov    r13,QWORD PTR [rsp+0xc0]
  4041ab:	mov    rbx,QWORD PTR [rsp+0x48]
  4041b0:	mov    r15,QWORD PTR [rsp+0xe0]
  4041b8:	test   dil,dil
  4041bb:	mov    rax,QWORD PTR [rsp+0xc8]
  4041c3:	je     0x40427a
  4041c9:	cmp    DWORD PTR [rax+0x8],0x0
  4041cd:	jne    0x4043c5
  4041d3:	cmp    DWORD PTR [rsp+0x3c],0x0
  4041d8:	jne    0x404383
  4041de:	mov    rdx,QWORD PTR [r15+0x20]
  4041e2:	xor    eax,eax
  4041e4:	or     rcx,0xffffffffffffffff
  4041e8:	mov    ebx,0x3f
  4041ed:	mov    rdi,rdx
  4041f0:	repnz scas al,BYTE PTR es:[rdi]
  4041f2:	mov    rax,rcx
  4041f5:	not    rax
  4041f8:	lea    rax,[rdx+rax*1-0x1]
  4041fd:	mov    QWORD PTR [r15+0x20],rax
  404201:	jmp    0x40389c
  404206:	test   rsi,rsi
  404209:	mov    rax,rsi
  40420c:	je     0x40417d
  404212:	mov    esi,DWORD PTR [rsp+0x40]
  404216:	mov    QWORD PTR [rsp+0xc8],rax
  40421e:	jmp    0x4041b8
  404220:	mov    rax,QWORD PTR [rsp+0xb8]
  404228:	lea    rcx,[rip+0xf749]        # 0x413978
  40422f:	mov    rdi,QWORD PTR [rax]
  404232:	call   0x40b090
  404237:	mov    rsi,rax
  40423a:	call   QWORD PTR [rip+0x1a398]        # 0x41e5d8
  404240:	lea    rcx,[rax+0x60]
  404244:	mov    r9d,ebx
  404247:	mov    r8,rdi
  40424a:	mov    rdx,rsi
  40424d:	call   0x4050e0
  404252:	jmp    0x404140
  404257:	cmp    DWORD PTR [rsp+0x3c],0x0
  40425c:	jne    0x4043d2
  404262:	mov    DWORD PTR [r15+0x8],ebx
  404266:	cmp    BYTE PTR [r13+0x0],0x3a
  40426b:	setne  bl
  40426e:	lea    ebx,[rbx+rbx*4+0x3a]
  404272:	movsx  ebx,bl
  404275:	jmp    0x40389c
  40427a:	cmp    DWORD PTR [rax+0x8],0x1
  40427e:	je     0x4042d5
  404280:	mov    QWORD PTR [r15+0x10],0x0
  404288:	xor    eax,eax
  40428a:	or     rcx,0xffffffffffffffff
  40428e:	mov    rdi,r12
  404291:	repnz scas al,BYTE PTR es:[rdi]
  404293:	cmp    QWORD PTR [rsp+0xd0],0x0
  40429c:	mov    rax,rcx
  40429f:	not    rax
  4042a2:	lea    rax,[r12+rax*1-0x1]
  4042a7:	mov    QWORD PTR [r15+0x20],rax
  4042ab:	je     0x4042b7
  4042ad:	mov    rax,QWORD PTR [rsp+0xd0]
  4042b5:	mov    DWORD PTR [rax],esi
  4042b7:	mov    rax,QWORD PTR [rsp+0xc8]
  4042bf:	mov    rax,QWORD PTR [rax+0x10]
  4042c3:	test   rax,rax
  4042c6:	je     0x4042f4
  4042c8:	mov    rsi,QWORD PTR [rsp+0xc8]
  4042d0:	jmp    0x403c3c
  4042d5:	movsxd rax,DWORD PTR [r15]
  4042d8:	cmp    ebp,eax
  4042da:	jle    0x404304
  4042dc:	mov    rdi,QWORD PTR [rsp+0xb8]
  4042e4:	lea    edx,[rax+0x1]
  4042e7:	mov    DWORD PTR [r15],edx
  4042ea:	mov    rax,QWORD PTR [rdi+rax*8]
  4042ee:	mov    QWORD PTR [r15+0x10],rax
  4042f2:	jmp    0x404288
  4042f4:	mov    rax,QWORD PTR [rsp+0xc8]
  4042fc:	mov    ebx,DWORD PTR [rax+0x18]
  4042ff:	jmp    0x40389c
  404304:	cmp    DWORD PTR [rsp+0x3c],0x0
  404309:	je     0x404348
  40430b:	mov    rax,QWORD PTR [rsp+0xc8]
  404313:	lea    rcx,[rip+0xf6e6]        # 0x413a00
  40431a:	mov    rdi,QWORD PTR [rax]
  40431d:	mov    rax,QWORD PTR [rsp+0xb8]
  404325:	mov    rsi,QWORD PTR [rax]
  404328:	call   0x40b090
  40432d:	mov    rbx,rax
  404330:	call   QWORD PTR [rip+0x1a2a2]        # 0x41e5d8
  404336:	lea    rcx,[rax+0x60]
  40433a:	mov    r9,rdi
  40433d:	mov    r8,rsi
  404340:	mov    rdx,rbx
  404343:	call   0x4050e0
  404348:	mov    rdx,QWORD PTR [r15+0x20]
  40434c:	xor    eax,eax
  40434e:	or     rcx,0xffffffffffffffff
  404352:	mov    rdi,rdx
  404355:	repnz scas al,BYTE PTR es:[rdi]
  404357:	mov    rax,rcx
  40435a:	not    rax
  40435d:	lea    rax,[rdx+rax*1-0x1]
  404362:	mov    QWORD PTR [r15+0x20],rax
  404366:	cmp    BYTE PTR [r13+0x0],0x3a
  40436b:	jne    0x403bed
  404371:	jmp    0x403fa6
  404376:	mov    rsi,rcx
  404379:	mov    r12d,DWORD PTR [rsp+0x44]
  40437e:	jmp    0x403b58
  404383:	mov    rax,QWORD PTR [rsp+0xc8]
  40438b:	lea    rcx,[rip+0xf63e]        # 0x4139d0
  404392:	mov    rdi,QWORD PTR [rax]
  404395:	mov    rax,QWORD PTR [rsp+0xb8]
  40439d:	mov    rsi,QWORD PTR [rax]
  4043a0:	call   0x40b090
  4043a5:	mov    rbx,rax
  4043a8:	call   QWORD PTR [rip+0x1a22a]        # 0x41e5d8
  4043ae:	lea    rcx,[rax+0x60]
  4043b2:	mov    r9,rdi
  4043b5:	mov    r8,rsi
  4043b8:	mov    rdx,rbx
  4043bb:	call   0x4050e0
  4043c0:	jmp    0x4041de
  4043c5:	add    rbx,0x1
  4043c9:	mov    QWORD PTR [r15+0x10],rbx
  4043cd:	jmp    0x404288
  4043d2:	mov    rax,QWORD PTR [rsp+0xb8]
  4043da:	lea    rcx,[rip+0xf597]        # 0x413978
  4043e1:	mov    rdi,QWORD PTR [rax]
  4043e4:	call   0x40b090
  4043e9:	mov    rsi,rax
  4043ec:	call   QWORD PTR [rip+0x1a1e6]        # 0x41e5d8
  4043f2:	lea    rcx,[rax+0x60]
  4043f6:	mov    r9d,ebx
  4043f9:	mov    r8,rdi
  4043fc:	mov    rdx,rsi
  4043ff:	call   0x4050e0
  404404:	jmp    0x404262
  404409:	nop    DWORD PTR [rax+0x0]
  404410:	sub    rsp,0x48
  404414:	mov    eax,DWORD PTR [rip+0xdc0e]        # 0x412028
  40441a:	mov    DWORD PTR [rip+0x16c80],eax        # 0x41b0a0
  404420:	mov    eax,DWORD PTR [rip+0xdbfe]        # 0x412024
  404426:	mov    DWORD PTR [rip+0x16c78],eax        # 0x41b0a4
  40442c:	mov    eax,DWORD PTR [rsp+0x80]
  404433:	mov    DWORD PTR [rsp+0x38],eax
  404437:	lea    rax,[rip+0x16c62]        # 0x41b0a0
  40443e:	mov    QWORD PTR [rsp+0x30],rax
  404443:	mov    eax,DWORD PTR [rsp+0x78]
  404447:	mov    DWORD PTR [rsp+0x28],eax
  40444b:	mov    rax,QWORD PTR [rsp+0x70]
  404450:	mov    QWORD PTR [rsp+0x20],rax
  404455:	call   0x4034b0
  40445a:	mov    edx,DWORD PTR [rip+0x16c40]        # 0x41b0a0
  404460:	mov    DWORD PTR [rip+0xdbc2],edx        # 0x412028
  404466:	mov    rdx,QWORD PTR [rip+0x16c43]        # 0x41b0b0
  40446d:	mov    QWORD PTR [rip+0x19294],rdx        # 0x41d708
  404474:	mov    edx,DWORD PTR [rip+0x16c2e]        # 0x41b0a8
  40447a:	mov    DWORD PTR [rip+0xdba0],edx        # 0x412020
  404480:	add    rsp,0x48
  404484:	ret    
  404485:	nop
  404486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404490:	sub    rsp,0x48
  404494:	xor    r9d,r9d
  404497:	mov    DWORD PTR [rsp+0x30],0x1
  40449f:	mov    DWORD PTR [rsp+0x28],0x0
  4044a7:	mov    QWORD PTR [rsp+0x20],0x0
  4044b0:	call   0x404410
  4044b5:	add    rsp,0x48
  4044b9:	ret    
  4044ba:	nop
  4044bb:	nop
  4044bc:	nop
  4044bd:	nop
  4044be:	nop
  4044bf:	nop
  4044c0:	sub    rsp,0x48
  4044c4:	mov    rax,QWORD PTR [rsp+0x70]
  4044c9:	mov    DWORD PTR [rsp+0x30],0x0
  4044d1:	mov    DWORD PTR [rsp+0x28],0x0
  4044d9:	mov    QWORD PTR [rsp+0x20],rax
  4044de:	call   0x404410
  4044e3:	add    rsp,0x48
  4044e7:	ret    
  4044e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4044f0:	sub    rsp,0x48
  4044f4:	mov    rax,QWORD PTR [rsp+0x78]
  4044f9:	mov    DWORD PTR [rsp+0x38],0x0
  404501:	mov    DWORD PTR [rsp+0x28],0x0
  404509:	mov    QWORD PTR [rsp+0x30],rax
  40450e:	mov    rax,QWORD PTR [rsp+0x70]
  404513:	mov    QWORD PTR [rsp+0x20],rax
  404518:	call   0x4034b0
  40451d:	add    rsp,0x48
  404521:	ret    
  404522:	nop    DWORD PTR [rax+0x0]
  404526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404530:	sub    rsp,0x48
  404534:	mov    rax,QWORD PTR [rsp+0x70]
  404539:	mov    DWORD PTR [rsp+0x30],0x0
  404541:	mov    DWORD PTR [rsp+0x28],0x1
  404549:	mov    QWORD PTR [rsp+0x20],rax
  40454e:	call   0x404410
  404553:	add    rsp,0x48
  404557:	ret    
  404558:	nop    DWORD PTR [rax+rax*1+0x0]
  404560:	sub    rsp,0x48
  404564:	mov    rax,QWORD PTR [rsp+0x78]
  404569:	mov    DWORD PTR [rsp+0x38],0x0
  404571:	mov    DWORD PTR [rsp+0x28],0x1
  404579:	mov    QWORD PTR [rsp+0x30],rax
  40457e:	mov    rax,QWORD PTR [rsp+0x70]
  404583:	mov    QWORD PTR [rsp+0x20],rax
  404588:	call   0x4034b0
  40458d:	add    rsp,0x48
  404591:	ret    
  404592:	nop
  404593:	nop
  404594:	nop
  404595:	nop
  404596:	nop
  404597:	nop
  404598:	nop
  404599:	nop
  40459a:	nop
  40459b:	nop
  40459c:	nop
  40459d:	nop
  40459e:	nop
  40459f:	nop
  4045a0:	push   r13
  4045a2:	push   r12
  4045a4:	push   rbp
  4045a5:	push   rdi
  4045a6:	push   rsi
  4045a7:	push   rbx
  4045a8:	sub    rsp,0x38
  4045ac:	test   rdx,rdx
  4045af:	mov    r13,rcx
  4045b2:	mov    rdi,rdx
  4045b5:	mov    rbp,r8
  4045b8:	mov    rsi,r9
  4045bb:	je     0x404690
  4045c1:	lea    rax,[rip+0x16b18]        # 0x41b0e0
  4045c8:	test   rsi,rsi
  4045cb:	cmove  rsi,rax
  4045cf:	mov    rcx,rsi
  4045d2:	call   0x4046b0
  4045d7:	test   eax,eax
  4045d9:	jne    0x404630
  4045db:	xor    ebx,ebx
  4045dd:	test   rbp,rbp
  4045e0:	lea    r12,[rsp+0x2e]
  4045e5:	jne    0x4045ff
  4045e7:	jmp    0x404650
  4045e9:	nop    DWORD PTR [rax+0x0]
  4045f0:	add    rbx,0x1
  4045f4:	cmp    rax,0xfffffffffffffffe
  4045f8:	jne    0x404664
  4045fa:	cmp    rbp,rbx
  4045fd:	je     0x404650
  4045ff:	lea    rdx,[rdi+rbx*1]
  404603:	mov    r9,rsi
  404606:	mov    r8d,0x1
  40460c:	mov    rcx,r12
  40460f:	call   0x40c790
  404614:	cmp    rax,0xffffffffffffffff
  404618:	jne    0x4045f0
  40461a:	add    rsp,0x38
  40461e:	pop    rbx
  40461f:	pop    rsi
  404620:	pop    rdi
  404621:	pop    rbp
  404622:	pop    r12
  404624:	pop    r13
  404626:	ret    
  404627:	nop    WORD PTR [rax+rax*1+0x0]
  404630:	mov    r9,rsi
  404633:	mov    r8,rbp
  404636:	mov    rdx,rdi
  404639:	mov    rcx,r13
  40463c:	call   0x40c790
  404641:	add    rsp,0x38
  404645:	pop    rbx
  404646:	pop    rsi
  404647:	pop    rdi
  404648:	pop    rbp
  404649:	pop    r12
  40464b:	pop    r13
  40464d:	ret    
  40464e:	xchg   ax,ax
  404650:	mov    rax,0xfffffffffffffffe
  404657:	add    rsp,0x38
  40465b:	pop    rbx
  40465c:	pop    rsi
  40465d:	pop    rdi
  40465e:	pop    rbp
  40465f:	pop    r12
  404661:	pop    r13
  404663:	ret    
  404664:	test   r13,r13
  404667:	movzx  eax,WORD PTR [rsp+0x2e]
  40466c:	je     0x404673
  40466e:	mov    WORD PTR [r13+0x0],ax
  404673:	test   ax,ax
  404676:	mov    eax,0x0
  40467b:	cmovne rax,rbx
  40467f:	add    rsp,0x38
  404683:	pop    rbx
  404684:	pop    rsi
  404685:	pop    rdi
  404686:	pop    rbp
  404687:	pop    r12
  404689:	pop    r13
  40468b:	ret    
  40468c:	nop    DWORD PTR [rax+0x0]
  404690:	mov    ebp,0x1
  404695:	lea    rdi,[rip+0xf394]        # 0x413a30
  40469c:	xor    r13d,r13d
  40469f:	jmp    0x4045c1
  4046a4:	nop
  4046a5:	nop
  4046a6:	nop
  4046a7:	nop
  4046a8:	nop
  4046a9:	nop
  4046aa:	nop
  4046ab:	nop
  4046ac:	nop
  4046ad:	nop
  4046ae:	nop
  4046af:	nop
  4046b0:	test   rcx,rcx
  4046b3:	je     0x4046c0
  4046b5:	mov    edx,DWORD PTR [rcx]
  4046b7:	xor    eax,eax
  4046b9:	test   edx,edx
  4046bb:	sete   al
  4046be:	ret    
  4046bf:	nop
  4046c0:	mov    eax,0x1
  4046c5:	ret    
  4046c6:	nop
  4046c7:	nop
  4046c8:	nop
  4046c9:	nop
  4046ca:	nop
  4046cb:	nop
  4046cc:	nop
  4046cd:	nop
  4046ce:	nop
  4046cf:	nop
  4046d0:	test   r8,r8
  4046d3:	mov    r9d,edx
  4046d6:	je     0x4046f7
  4046d8:	test   cl,0x3
  4046db:	je     0x404704
  4046dd:	cmp    BYTE PTR [rcx],dl
  4046df:	jne    0x4046ed
  4046e1:	jmp    0x404700
  4046e3:	test   cl,0x3
  4046e6:	je     0x404704
  4046e8:	cmp    BYTE PTR [rcx],r9b
  4046eb:	je     0x404700
  4046ed:	add    rcx,0x1
  4046f1:	sub    r8,0x1
  4046f5:	jne    0x4046e3
  4046f7:	xor    eax,eax
  4046f9:	ret    
  4046fa:	nop    WORD PTR [rax+rax*1+0x0]
  404700:	mov    rax,rcx
  404703:	ret    
  404704:	movzx  eax,dl
  404707:	mov    r11d,eax
  40470a:	shl    r11d,0x8
  40470e:	or     r11d,eax
  404711:	mov    eax,r11d
  404714:	shl    eax,0x10
  404717:	or     r11d,eax
  40471a:	cmp    r8,0x3
  40471e:	ja     0x404730
  404720:	jmp    0x404748
  404722:	sub    r8,0x4
  404726:	add    rcx,0x4
  40472a:	cmp    r8,0x3
  40472e:	jbe    0x404770
  404730:	mov    eax,DWORD PTR [rcx]
  404732:	xor    eax,r11d
  404735:	lea    r10d,[rax-0x1010101]
  40473c:	not    eax
  40473e:	and    eax,r10d
  404741:	test   eax,0x80808080
  404746:	je     0x404722
  404748:	add    r8,rcx
  40474b:	cmp    BYTE PTR [rcx],dl
  40474d:	lea    rax,[rcx+0x1]
  404751:	jne    0x40475f
  404753:	jmp    0x404700
  404755:	add    rax,0x1
  404759:	cmp    BYTE PTR [rax-0x1],r9b
  40475d:	je     0x404700
  40475f:	cmp    rax,r8
  404762:	mov    rcx,rax
  404765:	jne    0x404755
  404767:	xor    eax,eax
  404769:	ret    
  40476a:	nop    WORD PTR [rax+rax*1+0x0]
  404770:	test   r8,r8
  404773:	jne    0x404748
  404775:	jmp    0x4046f7
  404777:	nop
  404778:	nop
  404779:	nop
  40477a:	nop
  40477b:	nop
  40477c:	nop
  40477d:	nop
  40477e:	nop
  40477f:	nop
  404780:	push   rbx
  404781:	sub    rsp,0x20
  404785:	mov    ebx,ecx
  404787:	call   0x40a300
  40478c:	mov    rax,QWORD PTR [rip+0x19e9d]        # 0x41e630
  404793:	mov    ecx,ebx
  404795:	add    rsp,0x20
  404799:	pop    rbx
  40479a:	rex.W jmp rax
  40479d:	nop
  40479e:	nop
  40479f:	nop
  4047a0:	push   r15
  4047a2:	push   r14
  4047a4:	push   r13
  4047a6:	push   r12
  4047a8:	push   rbp
  4047a9:	push   rdi
  4047aa:	push   rsi
  4047ab:	push   rbx
  4047ac:	sub    rsp,0x28
  4047b0:	xor    edi,edi
  4047b2:	test   rdx,rdx
  4047b5:	mov    r13,rcx
  4047b8:	mov    rsi,rdx
  4047bb:	mov    r12,r8
  4047be:	mov    QWORD PTR [rsp+0x88],r9
  4047c6:	jne    0x4047da
  4047c8:	jmp    0x404802
  4047ca:	nop    WORD PTR [rax+rax*1+0x0]
  4047d0:	je     0x404822
  4047d2:	mov    rsi,rbx
  4047d5:	cmp    rdi,rsi
  4047d8:	jae    0x404802
  4047da:	lea    rbx,[rsi+rdi*1]
  4047de:	mov    rdx,r12
  4047e1:	shr    rbx,1
  4047e4:	mov    rbp,rbx
  4047e7:	shl    rbp,0x4
  4047eb:	mov    rcx,QWORD PTR [r13+rbp*1+0x0]
  4047f0:	call   0x411458
  4047f5:	test   eax,eax
  4047f7:	jns    0x4047d0
  4047f9:	lea    rdi,[rbx+0x1]
  4047fd:	cmp    rdi,rsi
  404800:	jb     0x4047da
  404802:	mov    rax,QWORD PTR [rsp+0x88]
  40480a:	mov    QWORD PTR [rax],rdi
  40480d:	mov    QWORD PTR [rax+0x8],rsi
  404811:	add    rsp,0x28
  404815:	pop    rbx
  404816:	pop    rsi
  404817:	pop    rdi
  404818:	pop    rbp
  404819:	pop    r12
  40481b:	pop    r13
  40481d:	pop    r14
  40481f:	pop    r15
  404821:	ret    
  404822:	cmp    rdi,rbx
  404825:	jae    0x404853
  404827:	lea    r14,[r13+rbp*1-0x10]
  40482c:	mov    rbp,rbx
  40482f:	jmp    0x40483d
  404831:	sub    r14,0x10
  404835:	cmp    r15,rdi
  404838:	mov    rbp,r15
  40483b:	jbe    0x404853
  40483d:	mov    rcx,QWORD PTR [r14]
  404840:	mov    rdx,r12
  404843:	lea    r15,[rbp-0x1]
  404847:	call   0x411458
  40484c:	test   eax,eax
  40484e:	jns    0x404831
  404850:	mov    rdi,rbp
  404853:	lea    rbp,[rbx+0x1]
  404857:	mov    rax,rbp
  40485a:	shl    rax,0x4
  40485e:	add    r13,rax
  404861:	cmp    rsi,rbx
  404864:	ja     0x404874
  404866:	jmp    0x404802
  404868:	nop    DWORD PTR [rax+rax*1+0x0]
  404870:	add    rbp,0x1
  404874:	cmp    rbp,rsi
  404877:	je     0x404802
  404879:	mov    rcx,QWORD PTR [r13+0x0]
  40487d:	mov    rdx,r12
  404880:	add    r13,0x10
  404884:	call   0x411458
  404889:	test   eax,eax
  40488b:	jle    0x404870
  40488d:	mov    rsi,rbp
  404890:	jmp    0x404802
  404895:	nop
  404896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048a0:	push   r15
  4048a2:	push   r14
  4048a4:	push   r13
  4048a6:	push   r12
  4048a8:	push   rbp
  4048a9:	push   rdi
  4048aa:	push   rsi
  4048ab:	push   rbx
  4048ac:	sub    rsp,0x1a8
  4048b3:	mov    ebx,ecx
  4048b5:	mov    rdi,rdx
  4048b8:	call   0x411470
  4048bd:	test   rax,rax
  4048c0:	mov    rbp,rax
  4048c3:	je     0x4048e0
  4048c5:	mov    rax,rbp
  4048c8:	add    rsp,0x1a8
  4048cf:	pop    rbx
  4048d0:	pop    rsi
  4048d1:	pop    rdi
  4048d2:	pop    rbp
  4048d3:	pop    r12
  4048d5:	pop    r13
  4048d7:	pop    r14
  4048d9:	pop    r15
  4048db:	ret    
  4048dc:	nop    DWORD PTR [rax+0x0]
  4048e0:	mov    rcx,rdi
  4048e3:	call   0x411440
  4048e8:	cmp    rax,0x3f
  4048ec:	ja     0x4048c5
  4048ee:	movzx  eax,BYTE PTR [rdi]
  4048f1:	lea    rsi,[rsp+0x60]
  4048f6:	mov    r9,rdi
  4048f9:	mov    rdx,rsi
  4048fc:	cmp    al,0x2e
  4048fe:	jne    0x404914
  404900:	jmp    0x404918
  404902:	add    r9,0x1
  404906:	mov    BYTE PTR [rdx],al
  404908:	add    rdx,0x1
  40490c:	movzx  eax,BYTE PTR [r9]
  404910:	cmp    al,0x2e
  404912:	je     0x404918
  404914:	test   al,al
  404916:	jne    0x404902
  404918:	cmp    al,0x2e
  40491a:	jne    0x40492f
  40491c:	jmp    0x4049e0
  404921:	add    r9,0x1
  404925:	mov    BYTE PTR [rdx],al
  404927:	add    rdx,0x1
  40492b:	movzx  eax,BYTE PTR [r9]
  40492f:	test   al,al
  404931:	jne    0x404921
  404933:	mov    BYTE PTR [rdx],0x0
  404936:	mov    rcx,rsi
  404939:	mov    rdx,rdi
  40493c:	call   0x411458
  404941:	test   eax,eax
  404943:	je     0x404960
  404945:	mov    rdx,rsi
  404948:	mov    ecx,ebx
  40494a:	call   0x411470
  40494f:	test   rax,rax
  404952:	mov    rbp,rax
  404955:	jne    0x4048c5
  40495b:	nop    DWORD PTR [rax+rax*1+0x0]
  404960:	lea    rdi,[rsp+0x120]
  404968:	lea    rcx,[rip+0x10991]        # 0x415300
  40496f:	mov    edx,0xa4
  404974:	mov    r8,rsi
  404977:	mov    r9,rdi
  40497a:	call   0x4047a0
  40497f:	mov    rbp,QWORD PTR [rsp+0x120]
  404987:	lea    rdx,[rip+0x10972]        # 0x415300
  40498e:	mov    rax,rbp
  404991:	shl    rax,0x4
  404995:	cmp    rbp,QWORD PTR [rsp+0x128]
  40499d:	lea    r12,[rdx+rax*1+0x8]
  4049a2:	jb     0x4049c2
  4049a4:	jmp    0x404a01
  4049a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049b0:	add    rbp,0x1
  4049b4:	add    r12,0x10
  4049b8:	cmp    rbp,QWORD PTR [rsp+0x128]
  4049c0:	jae    0x404a01
  4049c2:	mov    rdx,QWORD PTR [r12]
  4049c6:	mov    ecx,ebx
  4049c8:	call   0x411470
  4049cd:	test   rax,rax
  4049d0:	je     0x4049b0
  4049d2:	mov    rbp,rax
  4049d5:	jmp    0x4048c5
  4049da:	nop    WORD PTR [rax+rax*1+0x0]
  4049e0:	add    r9,0x1
  4049e4:	movzx  eax,BYTE PTR [r9]
  4049e8:	test   al,0xbf
  4049ea:	je     0x40492f
  4049f0:	add    r9,0x1
  4049f4:	movzx  eax,BYTE PTR [r9]
  4049f8:	test   al,0xbf
  4049fa:	jne    0x4049e0
  4049fc:	jmp    0x40492f
  404a01:	mov    edx,0x5f
  404a06:	mov    rcx,rsi
  404a09:	call   0x411460
  404a0e:	test   rax,rax
  404a11:	mov    rbp,rax
  404a14:	je     0x4048c5
  404a1a:	lea    r13,[rax+0x1]
  404a1e:	mov    edx,0x40
  404a23:	mov    rcx,r13
  404a26:	call   0x411460
  404a2b:	test   rax,rax
  404a2e:	mov    r12,rax
  404a31:	je     0x404c1b
  404a37:	lea    r14,[rsp+0xa0]
  404a3f:	sub    rbp,rsi
  404a42:	mov    rdx,rsi
  404a45:	mov    r8,rbp
  404a48:	lea    rsi,[rsp+0xe0]
  404a50:	mov    rcx,r14
  404a53:	call   0x4114a8
  404a58:	lea    rcx,[r14+rbp*1]
  404a5c:	mov    rdx,r12
  404a5f:	sub    r12,r13
  404a62:	call   0x411450
  404a67:	mov    r8,r12
  404a6a:	mov    rdx,r13
  404a6d:	mov    rcx,rsi
  404a70:	call   0x4114a8
  404a75:	lea    r9,[rsp+0x40]
  404a7a:	lea    rcx,[rip+0x1087f]        # 0x415300
  404a81:	mov    r8,r14
  404a84:	mov    edx,0xa4
  404a89:	mov    BYTE PTR [rsp+r12*1+0xe0],0x0
  404a92:	call   0x4047a0
  404a97:	mov    rax,QWORD PTR [rsp+0x48]
  404a9c:	cmp    QWORD PTR [rsp+0x40],rax
  404aa1:	jae    0x404b13
  404aa3:	lea    r9,[rsp+0x50]
  404aa8:	lea    rcx,[rip+0xf751]        # 0x414200
  404aaf:	mov    r8,rsi
  404ab2:	mov    edx,0x8f
  404ab7:	call   0x4047a0
  404abc:	mov    rbp,QWORD PTR [rsp+0x50]
  404ac1:	mov    rax,QWORD PTR [rsp+0x58]
  404ac6:	cmp    rbp,rax
  404ac9:	jb     0x404b20
  404acb:	mov    rsi,QWORD PTR [rsp+0x40]
  404ad0:	cmp    rsi,QWORD PTR [rsp+0x48]
  404ad5:	jae    0x404b13
  404ad7:	mov    rax,rsi
  404ada:	lea    rdx,[rip+0x1081f]        # 0x415300
  404ae1:	shl    rax,0x4
  404ae5:	lea    rdi,[rdx+rax*1+0x8]
  404aea:	jmp    0x404aff
  404aec:	nop    DWORD PTR [rax+0x0]
  404af0:	add    rsi,0x1
  404af4:	add    rdi,0x10
  404af8:	cmp    rsi,QWORD PTR [rsp+0x48]
  404afd:	jae    0x404b13
  404aff:	mov    rdx,QWORD PTR [rdi]
  404b02:	mov    ecx,ebx
  404b04:	call   0x411470
  404b09:	test   rax,rax
  404b0c:	je     0x404af0
  404b0e:	jmp    0x4049d2
  404b13:	xor    ebp,ebp
  404b15:	jmp    0x4048c5
  404b1a:	nop    WORD PTR [rax+rax*1+0x0]
  404b20:	mov    rsi,QWORD PTR [rsp+0x40]
  404b25:	cmp    rsi,QWORD PTR [rsp+0x48]
  404b2a:	mov    QWORD PTR [rsp+0x30],rsi
  404b2f:	jae    0x404b13
  404b31:	mov    rdx,rsi
  404b34:	lea    rcx,[rip+0x107c5]        # 0x415300
  404b3b:	shl    rdx,0x4
  404b3f:	lea    rsi,[rcx+rdx*1+0x8]
  404b44:	mov    QWORD PTR [rsp+0x38],rsi
  404b49:	cmp    rbp,rax
  404b4c:	jae    0x404bf0
  404b52:	mov    rax,QWORD PTR [rsp+0x38]
  404b57:	lea    rsi,[rip+0xf6a2]        # 0x414200
  404b5e:	mov    rax,QWORD PTR [rax]
  404b61:	mov    QWORD PTR [rsp+0x28],rax
  404b66:	mov    rax,rbp
  404b69:	shl    rax,0x4
  404b6d:	lea    r13,[rsi+rax*1+0x8]
  404b72:	jmp    0x404b83
  404b74:	add    rbp,0x1
  404b78:	add    r13,0x10
  404b7c:	cmp    rbp,QWORD PTR [rsp+0x58]
  404b81:	jae    0x404bf0
  404b83:	mov    rcx,QWORD PTR [rsp+0x28]
  404b88:	call   0x411440
  404b8d:	mov    r12,QWORD PTR [r13+0x0]
  404b91:	mov    rsi,rax
  404b94:	lea    r14,[rsi+0x1]
  404b98:	mov    rcx,r12
  404b9b:	call   0x411440
  404ba0:	lea    r15,[rax+0x1]
  404ba4:	lea    rax,[r14+r15*1]
  404ba8:	cmp    rax,0x80
  404bae:	ja     0x404c2d
  404bb0:	mov    rdx,QWORD PTR [rsp+0x28]
  404bb5:	mov    r8,rsi
  404bb8:	mov    rcx,rdi
  404bbb:	call   0x4114a8
  404bc0:	lea    rcx,[rdi+r14*1]
  404bc4:	mov    r8,r15
  404bc7:	mov    rdx,r12
  404bca:	mov    BYTE PTR [rsp+rsi*1+0x120],0x5f
  404bd2:	call   0x4114a8
  404bd7:	mov    rdx,rdi
  404bda:	mov    ecx,ebx
  404bdc:	call   0x411470
  404be1:	test   rax,rax
  404be4:	je     0x404b74
  404be6:	jmp    0x4049d2
  404beb:	nop    DWORD PTR [rax+rax*1+0x0]
  404bf0:	add    QWORD PTR [rsp+0x30],0x1
  404bf6:	add    QWORD PTR [rsp+0x38],0x10
  404bfc:	mov    rax,QWORD PTR [rsp+0x30]
  404c01:	cmp    rax,QWORD PTR [rsp+0x48]
  404c06:	jae    0x404acb
  404c0c:	mov    rax,QWORD PTR [rsp+0x58]
  404c11:	mov    rbp,QWORD PTR [rsp+0x50]
  404c16:	jmp    0x404b49
  404c1b:	mov    rcx,r13
  404c1e:	call   0x411440
  404c23:	lea    r12,[r13+rax*1+0x0]
  404c28:	jmp    0x404a37
  404c2d:	call   0x411548
  404c32:	nop
  404c33:	nop    DWORD PTR [rax]
  404c36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c40:	sub    rsp,0x28
  404c44:	cmp    ecx,0x6c1
  404c4a:	je     0x404c55
  404c4c:	add    rsp,0x28
  404c50:	jmp    0x4048a0
  404c55:	test   rdx,rdx
  404c58:	je     0x404c73
  404c5a:	lea    rcx,[rip+0xd3df]        # 0x412040
  404c61:	mov    r8d,0x3f
  404c67:	mov    BYTE PTR [rip+0xd411],0x0        # 0x41207f
  404c6e:	call   0x411430
  404c73:	lea    rax,[rip+0xd3c6]        # 0x412040
  404c7a:	add    rsp,0x28
  404c7e:	ret    
  404c7f:	nop
  404c80:	push   r13
  404c82:	push   r12
  404c84:	push   rbp
  404c85:	push   rdi
  404c86:	push   rsi
  404c87:	push   rbx
  404c88:	sub    rsp,0x28
  404c8c:	test   rdx,rdx
  404c8f:	mov    esi,ecx
  404c91:	mov    rbx,rdx
  404c94:	je     0x404db0
  404c9a:	cmp    BYTE PTR [rdx],0x0
  404c9d:	je     0x404d40
  404ca3:	test   ecx,ecx
  404ca5:	jne    0x404db0
  404cab:	mov    edx,0x2e
  404cb0:	mov    rcx,rbx
  404cb3:	call   0x411460
  404cb8:	test   rax,rax
  404cbb:	je     0x404db0
  404cc1:	xor    edx,edx
  404cc3:	xor    ecx,ecx
  404cc5:	call   0x411470
  404cca:	test   rax,rax
  404ccd:	je     0x404f50
  404cd3:	mov    rcx,rax
  404cd6:	call   0x4113f8
  404cdb:	test   rax,rax
  404cde:	mov    rbp,rax
  404ce1:	je     0x404f50
  404ce7:	xor    ecx,ecx
  404ce9:	mov    rdx,rbx
  404cec:	call   0x4048a0
  404cf1:	test   rax,rax
  404cf4:	je     0x404fb0
  404cfa:	xor    edx,edx
  404cfc:	mov    ecx,0x2
  404d01:	lea    rdi,[rip+0xed7e]        # 0x413a86
  404d08:	call   0x411470
  404d0d:	mov    ecx,0x2
  404d12:	mov    rsi,rax
  404d15:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404d17:	je     0x404fa0
  404d1d:	mov    rcx,rbp
  404d20:	call   0x411500
  404d25:	xor    edx,edx
  404d27:	xor    ecx,ecx
  404d29:	add    rsp,0x28
  404d2d:	pop    rbx
  404d2e:	pop    rsi
  404d2f:	pop    rdi
  404d30:	pop    rbp
  404d31:	pop    r12
  404d33:	pop    r13
  404d35:	jmp    0x411470
  404d3a:	nop    WORD PTR [rax+rax*1+0x0]
  404d40:	test   ecx,ecx
  404d42:	je     0x404de0
  404d48:	cmp    ecx,0x3
  404d4b:	lea    rdx,[rip+0xed02]        # 0x413a54
  404d52:	je     0x404d80
  404d54:	jle    0x404db5
  404d56:	cmp    ecx,0x5
  404d59:	lea    rdx,[rip+0xed0b]        # 0x413a6b
  404d60:	je     0x404d80
  404d62:	lea    rdx,[rip+0xecf7]        # 0x413a60
  404d69:	jl     0x404d80
  404d6b:	cmp    ecx,0x6c1
  404d71:	lea    rdx,[rip+0xed02]        # 0x413a7a
  404d78:	jne    0x404dcd
  404d7a:	nop    WORD PTR [rax+rax*1+0x0]
  404d80:	mov    ecx,esi
  404d82:	call   0x4074c0
  404d87:	test   rax,rax
  404d8a:	je     0x404fd0
  404d90:	mov    rdx,rax
  404d93:	mov    ecx,esi
  404d95:	add    rsp,0x28
  404d99:	pop    rbx
  404d9a:	pop    rsi
  404d9b:	pop    rdi
  404d9c:	pop    rbp
  404d9d:	pop    r12
  404d9f:	pop    r13
  404da1:	jmp    0x404c40
  404da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404db0:	mov    rdx,rbx
  404db3:	jmp    0x404d93
  404db5:	cmp    ecx,0x1
  404db8:	lea    rdx,[rip+0xec81]        # 0x413a40
  404dbf:	je     0x404d80
  404dc1:	cmp    ecx,0x2
  404dc4:	lea    rdx,[rip+0xec80]        # 0x413a4b
  404dcb:	je     0x404d80
  404dcd:	lea    rdx,[rip+0xec9f]        # 0x413a73
  404dd4:	jmp    0x404d80
  404dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404de0:	xor    edx,edx
  404de2:	xor    ecx,ecx
  404de4:	call   0x411470
  404de9:	test   rax,rax
  404dec:	je     0x404f50
  404df2:	mov    rcx,rax
  404df5:	call   0x4113f8
  404dfa:	test   rax,rax
  404dfd:	mov    r12,rax
  404e00:	je     0x404f50
  404e06:	lea    rdx,[rip+0xec3e]        # 0x413a4b
  404e0d:	mov    ecx,0x2
  404e12:	call   0x4074c0
  404e17:	test   rax,rax
  404e1a:	mov    rbp,rax
  404e1d:	je     0x404fda
  404e23:	xor    ecx,ecx
  404e25:	mov    rdx,rbp
  404e28:	call   0x4048a0
  404e2d:	test   rax,rax
  404e30:	je     0x404f30
  404e36:	mov    edx,0x2e
  404e3b:	mov    rcx,rbp
  404e3e:	call   0x411460
  404e43:	test   rax,rax
  404e46:	je     0x404e6b
  404e48:	xor    edx,edx
  404e4a:	mov    ecx,0x2
  404e4f:	lea    rdi,[rip+0xec30]        # 0x413a86
  404e56:	call   0x411470
  404e5b:	mov    ecx,0x2
  404e60:	mov    rsi,rax
  404e63:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404e65:	je     0x404f30
  404e6b:	lea    rsi,[rip+0xec1e]        # 0x413a90
  404e72:	lea    r13,[rip+0xec2b]        # 0x413aa4
  404e79:	jmp    0x404ed0
  404e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  404e80:	cmp    ebx,0x5
  404e83:	je     0x404f80
  404e89:	jl     0x404f70
  404e8f:	cmp    ebx,0x6c1
  404e95:	jne    0x404f60
  404e9b:	lea    rdx,[rip+0xebd8]        # 0x413a7a
  404ea2:	mov    ecx,0x6c1
  404ea7:	call   0x4074c0
  404eac:	test   rax,rax
  404eaf:	mov    rdi,rax
  404eb2:	je     0x404fc0
  404eb8:	mov    rdx,rdi
  404ebb:	mov    ecx,ebx
  404ebd:	call   0x404c40
  404ec2:	test   rax,rax
  404ec5:	je     0x404f30
  404ec7:	add    rsi,0x4
  404ecb:	cmp    rsi,r13
  404ece:	je     0x404f28
  404ed0:	mov    ebx,DWORD PTR [rsi]
  404ed2:	cmp    ebx,0x3
  404ed5:	je     0x404f90
  404edb:	jg     0x404e80
  404edd:	cmp    ebx,0x1
  404ee0:	lea    rdx,[rip+0xeb59]        # 0x413a40
  404ee7:	je     0x404ef5
  404ee9:	cmp    ebx,0x2
  404eec:	lea    rdx,[rip+0xeb58]        # 0x413a4b
  404ef3:	jne    0x404f60
  404ef5:	mov    ecx,ebx
  404ef7:	call   0x4074c0
  404efc:	test   rax,rax
  404eff:	mov    rdi,rax
  404f02:	je     0x404fc0
  404f08:	mov    rdx,rbp
  404f0b:	mov    rcx,rdi
  404f0e:	call   0x411458
  404f13:	test   eax,eax
  404f15:	jne    0x404eb8
  404f17:	cmp    ebx,0x6c1
  404f1d:	je     0x404eb8
  404f1f:	add    rsi,0x4
  404f23:	cmp    rsi,r13
  404f26:	jne    0x404ed0
  404f28:	mov    rcx,r12
  404f2b:	jmp    0x404d20
  404f30:	cmp    BYTE PTR [r12],0x0
  404f35:	je     0x404f41
  404f37:	mov    rdx,r12
  404f3a:	xor    ecx,ecx
  404f3c:	call   0x411470
  404f41:	mov    rcx,r12
  404f44:	call   0x411500
  404f49:	nop    DWORD PTR [rax+0x0]
  404f50:	xor    eax,eax
  404f52:	add    rsp,0x28
  404f56:	pop    rbx
  404f57:	pop    rsi
  404f58:	pop    rdi
  404f59:	pop    rbp
  404f5a:	pop    r12
  404f5c:	pop    r13
  404f5e:	ret    
  404f5f:	nop
  404f60:	lea    rdx,[rip+0xeb0c]        # 0x413a73
  404f67:	jmp    0x404ef5
  404f69:	nop    DWORD PTR [rax+0x0]
  404f70:	lea    rdx,[rip+0xeae9]        # 0x413a60
  404f77:	jmp    0x404ef5
  404f7c:	nop    DWORD PTR [rax+0x0]
  404f80:	lea    rdx,[rip+0xeae4]        # 0x413a6b
  404f87:	jmp    0x404ef5
  404f8c:	nop    DWORD PTR [rax+0x0]
  404f90:	lea    rdx,[rip+0xeabd]        # 0x413a54
  404f97:	jmp    0x404ef5
  404f9c:	nop    DWORD PTR [rax+0x0]
  404fa0:	cmp    BYTE PTR [rbp+0x0],0x0
  404fa4:	je     0x404fb0
  404fa6:	mov    rdx,rbp
  404fa9:	xor    ecx,ecx
  404fab:	call   0x411470
  404fb0:	mov    rcx,rbp
  404fb3:	call   0x411500
  404fb8:	jmp    0x404f50
  404fba:	nop    WORD PTR [rax+rax*1+0x0]
  404fc0:	call   0x407530
  404fc5:	mov    rdi,rax
  404fc8:	jmp    0x404f08
  404fcd:	nop    DWORD PTR [rax]
  404fd0:	call   0x407530
  404fd5:	jmp    0x404d90
  404fda:	call   0x407530
  404fdf:	mov    rbp,rax
  404fe2:	jmp    0x404e23
  404fe7:	nop
  404fe8:	nop
  404fe9:	nop
  404fea:	nop
  404feb:	nop
  404fec:	nop
  404fed:	nop
  404fee:	nop
  404fef:	nop
  404ff0:	push   rdi
  404ff1:	push   rsi
  404ff2:	push   rbx
  404ff3:	sub    rsp,0x20
  404ff7:	mov    rbx,rcx
  404ffa:	mov    rsi,rdx
  404ffd:	mov    rdi,r8
  405000:	call   0x411528
  405005:	test   eax,eax
  405007:	jne    0x405030
  405009:	xor    ecx,ecx
  40500b:	call   QWORD PTR [rip+0x19547]        # 0x41e558
  405011:	mov    rdx,rsi
  405014:	mov    r8,rdi
  405017:	mov    rcx,rbx
  40501a:	call   0x40cbd0
  40501f:	cmp    eax,0xffffffff
  405022:	mov    esi,eax
  405024:	je     0x405045
  405026:	mov    eax,esi
  405028:	add    rsp,0x20
  40502c:	pop    rbx
  40502d:	pop    rsi
  40502e:	pop    rdi
  40502f:	ret    
  405030:	mov    r8,rdi
  405033:	mov    rdx,rsi
  405036:	mov    rcx,rbx
  405039:	add    rsp,0x20
  40503d:	pop    rbx
  40503e:	pop    rsi
  40503f:	pop    rdi
  405040:	jmp    0x40cbd0
  405045:	call   QWORD PTR [rip+0x19475]        # 0x41e4c0
  40504b:	cmp    eax,0xe8
  405050:	jne    0x405026
  405052:	mov    rcx,rbx
  405055:	call   0x411528
  40505a:	test   eax,eax
  40505c:	je     0x405026
  40505e:	mov    rcx,rbx
  405061:	call   0x4113f0
  405066:	test   eax,eax
  405068:	js     0x405026
  40506a:	mov    ecx,eax
  40506c:	call   0x404780
  405071:	mov    rcx,rax
  405074:	call   QWORD PTR [rip+0x1943e]        # 0x41e4b8
  40507a:	cmp    eax,0x3
  40507d:	jne    0x405026
  40507f:	mov    ecx,0xd
  405084:	call   0x40a330
  405089:	call   QWORD PTR [rip+0x19589]        # 0x41e618
  40508f:	mov    DWORD PTR [rax],0x20
  405095:	jmp    0x405026
  405097:	nop    WORD PTR [rax+rax*1+0x0]
  4050a0:	push   rsi
  4050a1:	push   rbx
  4050a2:	sub    rsp,0x38
  4050a6:	lea    rbx,[rsp+0x58]
  4050ab:	mov    rsi,rcx
  4050ae:	mov    QWORD PTR [rsp+0x58],rdx
  4050b3:	mov    QWORD PTR [rsp+0x60],r8
  4050b8:	mov    QWORD PTR [rsp+0x68],r9
  4050bd:	mov    QWORD PTR [rsp+0x28],rbx
  4050c2:	call   QWORD PTR [rip+0x19510]        # 0x41e5d8
  4050c8:	lea    rcx,[rax+0x30]
  4050cc:	mov    r8,rbx
  4050cf:	mov    rdx,rsi
  4050d2:	call   0x404ff0
  4050d7:	add    rsp,0x38
  4050db:	pop    rbx
  4050dc:	pop    rsi
  4050dd:	ret    
  4050de:	xchg   ax,ax
  4050e0:	sub    rsp,0x38
  4050e4:	mov    QWORD PTR [rsp+0x50],r8
  4050e9:	lea    r8,[rsp+0x50]
  4050ee:	mov    QWORD PTR [rsp+0x58],r9
  4050f3:	mov    QWORD PTR [rsp+0x28],r8
  4050f8:	call   0x404ff0
  4050fd:	add    rsp,0x38
  405101:	ret    
  405102:	nop    DWORD PTR [rax+0x0]
  405106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405110:	push   rsi
  405111:	push   rbx
  405112:	sub    rsp,0x28
  405116:	mov    rbx,rcx
  405119:	mov    rsi,rdx
  40511c:	call   QWORD PTR [rip+0x194b6]        # 0x41e5d8
  405122:	lea    rcx,[rax+0x30]
  405126:	mov    r8,rsi
  405129:	mov    rdx,rbx
  40512c:	add    rsp,0x28
  405130:	pop    rbx
  405131:	pop    rsi
  405132:	jmp    0x404ff0
  405137:	nop    WORD PTR [rax+rax*1+0x0]
  405140:	push   rsi
  405141:	push   rbx
  405142:	sub    rsp,0x28
  405146:	mov    esi,ecx
  405148:	mov    rcx,rdx
  40514b:	mov    rbx,rdx
  40514e:	call   0x411528
  405153:	test   eax,eax
  405155:	jne    0x405180
  405157:	xor    ecx,ecx
  405159:	call   QWORD PTR [rip+0x193f9]        # 0x41e558
  40515f:	mov    ecx,esi
  405161:	mov    rdx,rbx
  405164:	call   0x411510
  405169:	cmp    eax,0xffffffff
  40516c:	mov    esi,eax
  40516e:	je     0x405190
  405170:	mov    eax,esi
  405172:	add    rsp,0x28
  405176:	pop    rbx
  405177:	pop    rsi
  405178:	ret    
  405179:	nop    DWORD PTR [rax+0x0]
  405180:	mov    rdx,rbx
  405183:	mov    ecx,esi
  405185:	add    rsp,0x28
  405189:	pop    rbx
  40518a:	pop    rsi
  40518b:	jmp    0x411510
  405190:	call   QWORD PTR [rip+0x1932a]        # 0x41e4c0
  405196:	cmp    eax,0xe8
  40519b:	je     0x4051a4
  40519d:	mov    esi,0xffffffff
  4051a2:	jmp    0x405170
  4051a4:	mov    rcx,rbx
  4051a7:	call   0x411528
  4051ac:	test   eax,eax
  4051ae:	je     0x40519d
  4051b0:	mov    rcx,rbx
  4051b3:	call   0x4113f0
  4051b8:	test   eax,eax
  4051ba:	js     0x40519d
  4051bc:	mov    ecx,eax
  4051be:	call   0x404780
  4051c3:	mov    rcx,rax
  4051c6:	call   QWORD PTR [rip+0x192ec]        # 0x41e4b8
  4051cc:	cmp    eax,0x3
  4051cf:	jne    0x40519d
  4051d1:	mov    ecx,0xd
  4051d6:	call   0x40a330
  4051db:	call   QWORD PTR [rip+0x19437]        # 0x41e618
  4051e1:	mov    DWORD PTR [rax],0x20
  4051e7:	jmp    0x405170
  4051e9:	nop    DWORD PTR [rax+0x0]
  4051f0:	push   rbx
  4051f1:	sub    rsp,0x20
  4051f5:	mov    ebx,ecx
  4051f7:	call   QWORD PTR [rip+0x193db]        # 0x41e5d8
  4051fd:	lea    rdx,[rax+0x30]
  405201:	mov    ecx,ebx
  405203:	add    rsp,0x20
  405207:	pop    rbx
  405208:	jmp    0x405140
  40520d:	nop    DWORD PTR [rax]
  405210:	push   rsi
  405211:	push   rbx
  405212:	sub    rsp,0x28
  405216:	mov    rsi,rcx
  405219:	mov    rcx,rdx
  40521c:	mov    rbx,rdx
  40521f:	call   0x411528
  405224:	test   eax,eax
  405226:	jne    0x405250
  405228:	xor    ecx,ecx
  40522a:	call   QWORD PTR [rip+0x19328]        # 0x41e558
  405230:	mov    rcx,rsi
  405233:	mov    rdx,rbx
  405236:	call   0x411508
  40523b:	cmp    eax,0xffffffff
  40523e:	mov    esi,eax
  405240:	je     0x405261
  405242:	mov    eax,esi
  405244:	add    rsp,0x28
  405248:	pop    rbx
  405249:	pop    rsi
  40524a:	ret    
  40524b:	nop    DWORD PTR [rax+rax*1+0x0]
  405250:	mov    rdx,rbx
  405253:	mov    rcx,rsi
  405256:	add    rsp,0x28
  40525a:	pop    rbx
  40525b:	pop    rsi
  40525c:	jmp    0x411508
  405261:	call   QWORD PTR [rip+0x19259]        # 0x41e4c0
  405267:	cmp    eax,0xe8
  40526c:	je     0x405275
  40526e:	mov    esi,0xffffffff
  405273:	jmp    0x405242
  405275:	mov    rcx,rbx
  405278:	call   0x411528
  40527d:	test   eax,eax
  40527f:	je     0x40526e
  405281:	mov    rcx,rbx
  405284:	call   0x4113f0
  405289:	test   eax,eax
  40528b:	js     0x40526e
  40528d:	mov    ecx,eax
  40528f:	call   0x404780
  405294:	mov    rcx,rax
  405297:	call   QWORD PTR [rip+0x1921b]        # 0x41e4b8
  40529d:	cmp    eax,0x3
  4052a0:	jne    0x40526e
  4052a2:	mov    ecx,0xd
  4052a7:	call   0x40a330
  4052ac:	call   QWORD PTR [rip+0x19366]        # 0x41e618
  4052b2:	mov    DWORD PTR [rax],0x20
  4052b8:	jmp    0x405242
  4052ba:	nop    WORD PTR [rax+rax*1+0x0]
  4052c0:	push   rsi
  4052c1:	push   rbx
  4052c2:	sub    rsp,0x28
  4052c6:	mov    rsi,rcx
  4052c9:	call   QWORD PTR [rip+0x19309]        # 0x41e5d8
  4052cf:	lea    rbx,[rax+0x30]
  4052d3:	mov    rcx,rbx
  4052d6:	call   0x411528
  4052db:	test   eax,eax
  4052dd:	jne    0x405300
  4052df:	xor    ecx,ecx
  4052e1:	call   QWORD PTR [rip+0x19271]        # 0x41e558
  4052e7:	mov    rcx,rsi
  4052ea:	call   0x411490
  4052ef:	cmp    eax,0xffffffff
  4052f2:	mov    esi,eax
  4052f4:	je     0x405310
  4052f6:	mov    eax,esi
  4052f8:	add    rsp,0x28
  4052fc:	pop    rbx
  4052fd:	pop    rsi
  4052fe:	ret    
  4052ff:	nop
  405300:	mov    rcx,rsi
  405303:	add    rsp,0x28
  405307:	pop    rbx
  405308:	pop    rsi
  405309:	jmp    0x411490
  40530e:	xchg   ax,ax
  405310:	call   QWORD PTR [rip+0x191aa]        # 0x41e4c0
  405316:	cmp    eax,0xe8
  40531b:	je     0x405324
  40531d:	mov    esi,0xffffffff
  405322:	jmp    0x4052f6
  405324:	mov    rcx,rbx
  405327:	call   0x411528
  40532c:	test   eax,eax
  40532e:	je     0x40531d
  405330:	mov    rcx,rbx
  405333:	call   0x4113f0
  405338:	test   eax,eax
  40533a:	js     0x40531d
  40533c:	mov    ecx,eax
  40533e:	call   0x404780
  405343:	mov    rcx,rax
  405346:	call   QWORD PTR [rip+0x1916c]        # 0x41e4b8
  40534c:	cmp    eax,0x3
  40534f:	jne    0x40531d
  405351:	mov    ecx,0xd
  405356:	call   0x40a330
  40535b:	call   QWORD PTR [rip+0x192b7]        # 0x41e618
  405361:	mov    DWORD PTR [rax],0x20
  405367:	jmp    0x4052f6
  405369:	nop    DWORD PTR [rax+0x0]
  405370:	push   rbp
  405371:	push   rdi
  405372:	push   rsi
  405373:	push   rbx
  405374:	sub    rsp,0x28
  405378:	mov    rdi,rcx
  40537b:	mov    rcx,r9
  40537e:	mov    rbp,rdx
  405381:	mov    rsi,r8
  405384:	mov    rbx,r9
  405387:	call   0x411528
  40538c:	test   eax,eax
  40538e:	jne    0x4053c0
  405390:	xor    ecx,ecx
  405392:	call   QWORD PTR [rip+0x191c0]        # 0x41e558
  405398:	mov    rcx,rdi
  40539b:	mov    r9,rbx
  40539e:	mov    r8,rsi
  4053a1:	mov    rdx,rbp
  4053a4:	call   0x4114f0
  4053a9:	cmp    rsi,rax
  4053ac:	mov    rdi,rax
  4053af:	ja     0x4053e0
  4053b1:	mov    rax,rdi
  4053b4:	add    rsp,0x28
  4053b8:	pop    rbx
  4053b9:	pop    rsi
  4053ba:	pop    rdi
  4053bb:	pop    rbp
  4053bc:	ret    
  4053bd:	nop    DWORD PTR [rax]
  4053c0:	mov    r9,rbx
  4053c3:	mov    r8,rsi
  4053c6:	mov    rdx,rbp
  4053c9:	mov    rcx,rdi
  4053cc:	add    rsp,0x28
  4053d0:	pop    rbx
  4053d1:	pop    rsi
  4053d2:	pop    rdi
  4053d3:	pop    rbp
  4053d4:	jmp    0x4114f0
  4053d9:	nop    DWORD PTR [rax+0x0]
  4053e0:	call   QWORD PTR [rip+0x190da]        # 0x41e4c0
  4053e6:	cmp    eax,0xe8
  4053eb:	jne    0x4053b1
  4053ed:	mov    rcx,rbx
  4053f0:	call   0x411528
  4053f5:	test   eax,eax
  4053f7:	je     0x4053b1
  4053f9:	mov    rcx,rbx
  4053fc:	call   0x4113f0
  405401:	test   eax,eax
  405403:	js     0x4053b1
  405405:	mov    ecx,eax
  405407:	call   0x404780
  40540c:	mov    rcx,rax
  40540f:	call   QWORD PTR [rip+0x190a3]        # 0x41e4b8
  405415:	cmp    eax,0x3
  405418:	jne    0x4053b1
  40541a:	mov    ecx,0xd
  40541f:	call   0x40a330
  405424:	call   QWORD PTR [rip+0x191ee]        # 0x41e618
  40542a:	mov    DWORD PTR [rax],0x20
  405430:	jmp    0x4053b1
  405435:	nop
  405436:	nop
  405437:	nop
  405438:	nop
  405439:	nop
  40543a:	nop
  40543b:	nop
  40543c:	nop
  40543d:	nop
  40543e:	nop
  40543f:	nop
  405440:	sub    rsp,0x38
  405444:	lea    rdx,[rip+0x108f5]        # 0x415d40
  40544b:	lea    rcx,[rip+0x15cae]        # 0x41b100
  405452:	mov    QWORD PTR [rsp+0x50],r8
  405457:	lea    r8,[rsp+0x50]
  40545c:	mov    QWORD PTR [rsp+0x58],r9
  405461:	mov    QWORD PTR [rsp+0x28],r8
  405466:	call   0x40cc00
  40546b:	add    rsp,0x38
  40546f:	ret    
  405470:	push   rdi
  405471:	push   rsi
  405472:	push   rbx
  405473:	sub    rsp,0x20
  405477:	mov    ebx,ecx
  405479:	call   0x405560
  40547e:	test   rax,rax
  405481:	je     0x405490
  405483:	add    rsp,0x20
  405487:	pop    rbx
  405488:	pop    rsi
  405489:	pop    rdi
  40548a:	ret    
  40548b:	nop    DWORD PTR [rax+rax*1+0x0]
  405490:	mov    ecx,ebx
  405492:	call   0x411448
  405497:	test   rax,rax
  40549a:	mov    rsi,rax
  40549d:	je     0x405520
  4054a3:	cmp    BYTE PTR [rax],0x0
  4054a6:	je     0x405520
  4054a8:	mov    rcx,rax
  4054ab:	call   0x411440
  4054b0:	cmp    rax,0xff
  4054b6:	ja     0x40554e
  4054bc:	add    rax,0x1
  4054c0:	lea    rdi,[rip+0x15c39]        # 0x41b100
  4054c7:	cmp    eax,0x8
  4054ca:	jae    0x405510
  4054cc:	xor    edx,edx
  4054ce:	test   al,0x4
  4054d0:	jne    0x405500
  4054d2:	test   al,0x2
  4054d4:	jne    0x4054f0
  4054d6:	test   al,0x1
  4054d8:	jne    0x4054e3
  4054da:	lea    rax,[rip+0x15c1f]        # 0x41b100
  4054e1:	jmp    0x405483
  4054e3:	movzx  eax,BYTE PTR [rsi+rdx*1]
  4054e7:	mov    BYTE PTR [rdi+rdx*1],al
  4054ea:	jmp    0x4054da
  4054ec:	nop    DWORD PTR [rax+0x0]
  4054f0:	movzx  ecx,WORD PTR [rsi+rdx*1]
  4054f4:	mov    WORD PTR [rdi+rdx*1],cx
  4054f8:	add    rdx,0x2
  4054fc:	jmp    0x4054d6
  4054fe:	xchg   ax,ax
  405500:	mov    edx,DWORD PTR [rsi]
  405502:	mov    DWORD PTR [rdi],edx
  405504:	mov    edx,0x4
  405509:	jmp    0x4054d2
  40550b:	nop    DWORD PTR [rax+rax*1+0x0]
  405510:	mov    ecx,eax
  405512:	shr    ecx,0x3
  405515:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  405518:	jmp    0x4054cc
  40551a:	nop    WORD PTR [rax+rax*1+0x0]
  405520:	lea    rdx,[rip+0x10819]        # 0x415d40
  405527:	lea    rcx,[rip+0x15bd2]        # 0x41b100
  40552e:	mov    r8d,ebx
  405531:	call   0x405440
  405536:	call   QWORD PTR [rip+0x190dc]        # 0x41e618
  40553c:	mov    DWORD PTR [rax],0x16
  405542:	lea    rax,[rip+0x15bb7]        # 0x41b100
  405549:	jmp    0x405483
  40554e:	call   0x411548
  405553:	nop
  405554:	nop
  405555:	nop
  405556:	nop
  405557:	nop
  405558:	nop
  405559:	nop
  40555a:	nop
  40555b:	nop
  40555c:	nop
  40555d:	nop
  40555e:	nop
  40555f:	nop
  405560:	cmp    ecx,0x2754
  405566:	je     0x405910
  40556c:	jg     0x4055c2
  40556e:	cmp    ecx,0x89
  405574:	je     0x4058f0
  40557a:	jg     0x405623
  405580:	cmp    ecx,0x79
  405583:	je     0x405920
  405589:	jle    0x405751
  40558f:	cmp    ecx,0x7d
  405592:	lea    rax,[rip+0x10809]        # 0x415da2
  405599:	je     0x4055c0
  40559b:	jle    0x405860
  4055a1:	cmp    ecx,0x7f
  4055a4:	lea    rax,[rip+0x10bf5]        # 0x4161a0
  4055ab:	je     0x4055c0
  4055ad:	cmp    ecx,0x83
  4055b3:	lea    rax,[rip+0x1080a]        # 0x415dc4
  4055ba:	jne    0x405620
  4055bc:	nop    DWORD PTR [rax+0x0]
  4055c0:	repz ret 
  4055c2:	cmp    ecx,0x2779
  4055c8:	je     0x405900
  4055ce:	jg     0x405672
  4055d4:	cmp    ecx,0x276c
  4055da:	je     0x4058e1
  4055e0:	jg     0x405790
  4055e6:	cmp    ecx,0x2756
  4055ec:	lea    rax,[rip+0x108ab]        # 0x415e9e
  4055f3:	je     0x4055c0
  4055f5:	lea    rax,[rip+0x1088e]        # 0x415e8a
  4055fc:	jl     0x4055c0
  4055fe:	cmp    ecx,0x2757
  405604:	lea    rax,[rip+0x108a9]        # 0x415eb4
  40560b:	je     0x4055c0
  40560d:	cmp    ecx,0x276b
  405613:	lea    rax,[rip+0x10936]        # 0x415f50
  40561a:	je     0x4055c0
  40561c:	nop    DWORD PTR [rax+0x0]
  405620:	xor    eax,eax
  405622:	ret    
  405623:	cmp    ecx,0x273c
  405629:	je     0x405940
  40562f:	jle    0x4056c5
  405635:	cmp    ecx,0x274b
  40563b:	lea    rax,[rip+0x107f6]        # 0x415e38
  405642:	je     0x4055c0
  405648:	jle    0x4057d0
  40564e:	cmp    ecx,0x2750
  405654:	lea    rax,[rip+0x10800]        # 0x415e5b
  40565b:	je     0x4055c0
  405661:	cmp    ecx,0x2753
  405667:	lea    rax,[rip+0x107fa]        # 0x415e68
  40566e:	jne    0x405620
  405670:	repz ret 
  405672:	cmp    ecx,0x277f
  405678:	je     0x405930
  40567e:	jle    0x405710
  405684:	cmp    ecx,0x2afa
  40568a:	lea    rax,[rip+0x10a47]        # 0x4160d8
  405691:	je     0x4055c0
  405697:	jle    0x405830
  40569d:	cmp    ecx,0x2afb
  4056a3:	lea    rax,[rip+0x10a4e]        # 0x4160f8
  4056aa:	je     0x4055c0
  4056b0:	cmp    ecx,0x2afc
  4056b6:	lea    rax,[rip+0x10a53]        # 0x416110
  4056bd:	jne    0x405620
  4056c3:	repz ret 
  4056c5:	cmp    ecx,0x3e4
  4056cb:	lea    rax,[rip+0x10816]        # 0x415ee8
  4056d2:	je     0x4055c0
  4056d8:	jle    0x405800
  4056de:	cmp    ecx,0x3e5
  4056e4:	lea    rax,[rip+0x10835]        # 0x415f20
  4056eb:	je     0x4055c0
  4056f1:	cmp    ecx,0x7d4
  4056f7:	lea    rax,[rip+0x10a83]        # 0x416181
  4056fe:	jne    0x405620
  405704:	repz ret 
  405706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405710:	cmp    ecx,0x277c
  405716:	lea    rax,[rip+0x10965]        # 0x416082
  40571d:	je     0x4055c0
  405723:	jg     0x4058a3
  405729:	cmp    ecx,0x277a
  40572f:	lea    rax,[rip+0x10912]        # 0x416048
  405736:	je     0x4055c0
  40573c:	cmp    ecx,0x277b
  405742:	lea    rax,[rip+0x10925]        # 0x41606e
  405749:	jne    0x405620
  40574f:	repz ret 
  405751:	cmp    ecx,0x68
  405754:	lea    rax,[rip+0x10a39]        # 0x416194
  40575b:	je     0x4055c0
  405761:	jle    0x4058d0
  405767:	cmp    ecx,0x6f
  40576a:	lea    rax,[rip+0x109e7]        # 0x416158
  405771:	je     0x4055c0
  405777:	cmp    ecx,0x78
  40577a:	lea    rax,[rip+0x105f6]        # 0x415d77
  405781:	jne    0x405620
  405787:	repz ret 
  405789:	nop    DWORD PTR [rax+0x0]
  405790:	cmp    ecx,0x2776
  405796:	je     0x4058c2
  40579c:	jg     0x405882
  4057a2:	cmp    ecx,0x276d
  4057a8:	lea    rax,[rip+0x107f1]        # 0x415fa0
  4057af:	je     0x4055c0
  4057b5:	cmp    ecx,0x2775
  4057bb:	lea    rax,[rip+0x10806]        # 0x415fc8
  4057c2:	jne    0x405620
  4057c8:	repz ret 
  4057ca:	nop    WORD PTR [rax+rax*1+0x0]
  4057d0:	cmp    ecx,0x273e
  4057d6:	lea    rax,[rip+0x1060d]        # 0x415dea
  4057dd:	je     0x4055c0
  4057e3:	cmp    ecx,0x274a
  4057e9:	lea    rax,[rip+0x10618]        # 0x415e08
  4057f0:	jne    0x405620
  4057f6:	repz ret 
  4057f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405800:	cmp    ecx,0x8b
  405806:	lea    rax,[rip+0x1055b]        # 0x415d68
  40580d:	je     0x4055c0
  405813:	cmp    ecx,0x3e3
  405819:	lea    rax,[rip+0x106a5]        # 0x415ec5
  405820:	jne    0x405620
  405826:	repz ret 
  405828:	nop    DWORD PTR [rax+rax*1+0x0]
  405830:	cmp    ecx,0x2780
  405836:	lea    rax,[rip+0x1086c]        # 0x4160a9
  40583d:	je     0x4055c0
  405843:	cmp    ecx,0x2af9
  405849:	lea    rax,[rip+0x10874]        # 0x4160c4
  405850:	jne    0x405620
  405856:	repz ret 
  405858:	nop    DWORD PTR [rax+rax*1+0x0]
  405860:	cmp    ecx,0x7a
  405863:	lea    rax,[rip+0x108d3]        # 0x41613d
  40586a:	je     0x4055c0
  405870:	cmp    ecx,0x7c
  405873:	lea    rax,[rip+0x1050f]        # 0x415d89
  40587a:	jne    0x405620
  405880:	repz ret 
  405882:	cmp    ecx,0x2777
  405888:	je     0x405930
  40588e:	cmp    ecx,0x2778
  405894:	lea    rax,[rip+0x1076d]        # 0x416008
  40589b:	jne    0x405620
  4058a1:	repz ret 
  4058a3:	cmp    ecx,0x277d
  4058a9:	lea    rax,[rip+0x107e4]        # 0x416094
  4058b0:	je     0x4055c0
  4058b6:	cmp    ecx,0x277e
  4058bc:	jne    0x405620
  4058c2:	lea    rax,[rip+0x1071d]        # 0x415fe6
  4058c9:	ret    
  4058ca:	nop    WORD PTR [rax+rax*1+0x0]
  4058d0:	test   ecx,ecx
  4058d2:	lea    rax,[rip+0x10487]        # 0x415d60
  4058d9:	jne    0x405620
  4058df:	repz ret 
  4058e1:	lea    rax,[rip+0x10690]        # 0x415f78
  4058e8:	ret    
  4058e9:	nop    DWORD PTR [rax+0x0]
  4058f0:	lea    rax,[rip+0x104bf]        # 0x415db6
  4058f7:	ret    
  4058f8:	nop    DWORD PTR [rax+rax*1+0x0]
  405900:	lea    rax,[rip+0x10721]        # 0x416028
  405907:	ret    
  405908:	nop    DWORD PTR [rax+rax*1+0x0]
  405910:	lea    rax,[rip+0x10564]        # 0x415e7b
  405917:	ret    
  405918:	nop    DWORD PTR [rax+rax*1+0x0]
  405920:	lea    rax,[rip+0x10844]        # 0x41616b
  405927:	ret    
  405928:	nop    DWORD PTR [rax+rax*1+0x0]
  405930:	lea    rax,[rip+0x106bf]        # 0x415ff6
  405937:	ret    
  405938:	nop    DWORD PTR [rax+rax*1+0x0]
  405940:	lea    rax,[rip+0x10489]        # 0x415dd0
  405947:	ret    
  405948:	nop
  405949:	nop
  40594a:	nop
  40594b:	nop
  40594c:	nop
  40594d:	nop
  40594e:	nop
  40594f:	nop
  405950:	cmp    rcx,rdx
  405953:	jne    0x40596d
  405955:	jmp    0x4059a4
  405957:	nop    WORD PTR [rax+rax*1+0x0]
  405960:	add    rcx,0x1
  405964:	add    rdx,0x1
  405968:	cmp    al,r8b
  40596b:	jne    0x405999
  40596d:	movzx  r8d,BYTE PTR [rcx]
  405971:	lea    r9d,[r8-0x41]
  405975:	lea    eax,[r8+0x20]
  405979:	cmp    r9d,0x19
  40597d:	movzx  r9d,BYTE PTR [rdx]
  405981:	cmova  eax,r8d
  405985:	lea    r11d,[r9-0x41]
  405989:	lea    r8d,[r9+0x20]
  40598d:	cmp    r11d,0x19
  405991:	cmova  r8d,r9d
  405995:	test   al,al
  405997:	jne    0x405960
  405999:	movzx  r8d,r8b
  40599d:	movzx  eax,al
  4059a0:	sub    eax,r8d
  4059a3:	ret    
  4059a4:	xor    eax,eax
  4059a6:	ret    
  4059a7:	nop
  4059a8:	nop
  4059a9:	nop
  4059aa:	nop
  4059ab:	nop
  4059ac:	nop
  4059ad:	nop
  4059ae:	nop
  4059af:	nop
  4059b0:	sub    rsp,0x38
  4059b4:	lea    rcx,[rip+0x15845]        # 0x41b200
  4059bb:	mov    QWORD PTR [rsp+0x50],r8
  4059c0:	lea    r8,[rsp+0x50]
  4059c5:	mov    QWORD PTR [rsp+0x58],r9
  4059ca:	mov    QWORD PTR [rsp+0x28],r8
  4059cf:	call   0x40cc00
  4059d4:	add    rsp,0x38
  4059d8:	ret    
  4059d9:	nop    DWORD PTR [rax+0x0]
  4059e0:	push   rsi
  4059e1:	push   rbx
  4059e2:	sub    rsp,0x28
  4059e6:	xor    edx,edx
  4059e8:	xor    ecx,ecx
  4059ea:	call   0x404c80
  4059ef:	mov    edx,0x3b
  4059f4:	mov    rcx,rax
  4059f7:	mov    rbx,rax
  4059fa:	call   0x411460
  4059ff:	test   rax,rax
  405a02:	je     0x405a13
  405a04:	xor    edx,edx
  405a06:	mov    ecx,0x2
  405a0b:	call   0x404c80
  405a10:	mov    rbx,rax
  405a13:	mov    edx,0x2e
  405a18:	mov    rcx,rbx
  405a1b:	call   0x411428
  405a20:	test   rax,rax
  405a23:	je     0x405ad3
  405a29:	lea    r8,[rax+0x1]
  405a2d:	lea    rdx,[rip+0x10912]        # 0x416346
  405a34:	lea    rcx,[rip+0x157c5]        # 0x41b200
  405a3b:	call   0x4059b0
  405a40:	mov    rbx,QWORD PTR [rip+0x157c9]        # 0x41b210
  405a47:	test   rbx,rbx
  405a4a:	jne    0x405a6a
  405a4c:	jmp    0x405ac0
  405a4e:	xchg   ax,ax
  405a50:	mov    rcx,rbx
  405a53:	call   0x411440
  405a58:	lea    rbx,[rbx+rax*1+0x1]
  405a5d:	mov    rcx,rbx
  405a60:	call   0x411440
  405a65:	lea    rbx,[rbx+rax*1+0x1]
  405a6a:	movzx  esi,BYTE PTR [rbx]
  405a6d:	test   sil,sil
  405a70:	je     0x405ab3
  405a72:	lea    rcx,[rip+0x15787]        # 0x41b200
  405a79:	mov    rdx,rbx
  405a7c:	call   0x411458
  405a81:	test   eax,eax
  405a83:	je     0x405a91
  405a85:	cmp    sil,0x2a
  405a89:	jne    0x405a50
  405a8b:	cmp    BYTE PTR [rbx+0x1],0x0
  405a8f:	jne    0x405a50
  405a91:	mov    rcx,rbx
  405a94:	call   0x411440
  405a99:	lea    rax,[rbx+rax*1+0x1]
  405a9e:	cmp    BYTE PTR [rax],0x0
  405aa1:	lea    rdx,[rip+0x10898]        # 0x416340
  405aa8:	cmove  rax,rdx
  405aac:	add    rsp,0x28
  405ab0:	pop    rbx
  405ab1:	pop    rsi
  405ab2:	ret    
  405ab3:	lea    rax,[rip+0x15746]        # 0x41b200
  405aba:	jmp    0x405a9e
  405abc:	nop    DWORD PTR [rax+0x0]
  405ac0:	lea    rax,[rip+0x106f9]        # 0x4161c0
  405ac7:	mov    QWORD PTR [rip+0x15742],rax        # 0x41b210
  405ace:	mov    rbx,rax
  405ad1:	jmp    0x405a6a
  405ad3:	call   QWORD PTR [rip+0x189bf]        # 0x41e498
  405ad9:	lea    rdx,[rip+0x1086b]        # 0x41634b
  405ae0:	lea    rcx,[rip+0x15719]        # 0x41b200
  405ae7:	mov    r8d,eax
  405aea:	call   0x4059b0
  405aef:	jmp    0x405a40
  405af4:	nop
  405af5:	nop
  405af6:	nop
  405af7:	nop
  405af8:	nop
  405af9:	nop
  405afa:	nop
  405afb:	nop
  405afc:	nop
  405afd:	nop
  405afe:	nop
  405aff:	nop
  405b00:	push   rdi
  405b01:	push   rsi
  405b02:	push   rbx
  405b03:	sub    rsp,0xe0
  405b0a:	mov    r8d,0x10
  405b10:	lea    rdx,[rsp+0x28]
  405b15:	lea    rbx,[rsp+0x30]
  405b1a:	call   0x411420
  405b1f:	mov    r9d,0x55
  405b25:	mov    esi,eax
  405b27:	mov    r8,rbx
  405b2a:	mov    edx,0x1001
  405b2f:	mov    ecx,eax
  405b31:	mov    rdi,QWORD PTR [rip+0x18990]        # 0x41e4c8
  405b38:	call   rdi
  405b3a:	test   eax,eax
  405b3c:	jne    0x405b50
  405b3e:	mov    eax,0x1
  405b43:	add    rsp,0xe0
  405b4a:	pop    rbx
  405b4b:	pop    rsi
  405b4c:	pop    rdi
  405b4d:	ret    
  405b4e:	xchg   ax,ax
  405b50:	mov    r8,rbx
  405b53:	mov    eax,DWORD PTR [r8]
  405b56:	add    r8,0x4
  405b5a:	lea    edx,[rax-0x1010101]
  405b60:	not    eax
  405b62:	and    edx,eax
  405b64:	and    edx,0x80808080
  405b6a:	je     0x405b53
  405b6c:	mov    eax,edx
  405b6e:	mov    r9d,0x55
  405b74:	mov    ecx,esi
  405b76:	shr    eax,0x10
  405b79:	test   edx,0x8080
  405b7f:	cmove  edx,eax
  405b82:	lea    rax,[r8+0x2]
  405b86:	cmove  r8,rax
  405b8a:	add    dl,dl
  405b8c:	mov    eax,0x5f
  405b91:	sbb    r8,0x3
  405b95:	mov    edx,0x1002
  405b9a:	sub    r8,rbx
  405b9d:	mov    WORD PTR [rbx+r8*1],ax
  405ba2:	lea    r8,[rbx+r8*1+0x1]
  405ba7:	call   rdi
  405ba9:	test   eax,eax
  405bab:	je     0x405b3e
  405bad:	mov    rdi,rbx
  405bb0:	mov    eax,DWORD PTR [rdi]
  405bb2:	add    rdi,0x4
  405bb6:	lea    edx,[rax-0x1010101]
  405bbc:	not    eax
  405bbe:	and    edx,eax
  405bc0:	and    edx,0x80808080
  405bc6:	je     0x405bb0
  405bc8:	mov    eax,edx
  405bca:	mov    rcx,rbx
  405bcd:	shr    eax,0x10
  405bd0:	test   edx,0x8080
  405bd6:	cmove  edx,eax
  405bd9:	lea    rax,[rdi+0x2]
  405bdd:	cmove  rdi,rax
  405be1:	add    dl,dl
  405be3:	lea    rdx,[rip+0x15b56]        # 0x41b740
  405bea:	sbb    rdi,0x3
  405bee:	sub    rdi,rbx
  405bf1:	mov    r8,rdi
  405bf4:	call   0x411438
  405bf9:	test   eax,eax
  405bfb:	jne    0x405b3e
  405c01:	lea    rdx,[rip+0x15b38]        # 0x41b740
  405c08:	movzx  edx,BYTE PTR [rdx+rdi*1]
  405c0c:	test   dl,dl
  405c0e:	je     0x405c19
  405c10:	cmp    dl,0x2e
  405c13:	jne    0x405b3e
  405c19:	mov    DWORD PTR [rip+0x15cd1],esi        # 0x41b8f0
  405c1f:	jmp    0x405b43
  405c24:	xchg   ax,ax
  405c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c30:	push   rbx
  405c31:	sub    rsp,0x20
  405c35:	mov    ebx,ecx
  405c37:	lea    rcx,[rip+0x10f86]        # 0x416bc4
  405c3e:	call   0x4114e0
  405c43:	test   rax,rax
  405c46:	je     0x405c67
  405c48:	movzx  ecx,bx
  405c4b:	mov    r9d,0xff
  405c51:	lea    r8,[rip+0x155e8]        # 0x41b240
  405c58:	mov    edx,0x5c
  405c5d:	call   QWORD PTR [rip+0x18865]        # 0x41e4c8
  405c63:	test   eax,eax
  405c65:	jne    0x405c90
  405c67:	mov    edx,ebx
  405c69:	and    bx,0x3ff
  405c6e:	shr    dx,0xa
  405c72:	cmp    bx,0x91
  405c77:	ja     0x406d87
  405c7d:	lea    rax,[rip+0x10f4c]        # 0x416bd0
  405c84:	movzx  ebx,bx
  405c87:	movsxd rcx,DWORD PTR [rax+rbx*4]
  405c8b:	add    rax,rcx
  405c8e:	jmp    rax
  405c90:	movzx  eax,BYTE PTR [rip+0x155a9]        # 0x41b240
  405c97:	test   al,al
  405c99:	je     0x405cc0
  405c9b:	cmp    al,0x2d
  405c9d:	lea    rax,[rip+0x1559c]        # 0x41b240
  405ca4:	jne    0x405cb5
  405ca6:	jmp    0x405ce0
  405ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  405cb0:	cmp    dl,0x2d
  405cb3:	je     0x405ce0
  405cb5:	add    rax,0x1
  405cb9:	movzx  edx,BYTE PTR [rax]
  405cbc:	test   dl,dl
  405cbe:	jne    0x405cb0
  405cc0:	lea    rax,[rip+0x15579]        # 0x41b240
  405cc7:	nop    WORD PTR [rax+rax*1+0x0]
  405cd0:	add    rsp,0x20
  405cd4:	pop    rbx
  405cd5:	ret    
  405cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ce0:	mov    BYTE PTR [rax],0x5f
  405ce3:	lea    rdx,[rax+0x1]
  405ce7:	movzx  eax,BYTE PTR [rax+0x1]
  405ceb:	test   al,al
  405ced:	jne    0x405d05
  405cef:	jmp    0x405cc0
  405cf1:	cmp    BYTE PTR [rdx],0x2d
  405cf4:	je     0x407330
  405cfa:	add    rdx,0x1
  405cfe:	movzx  eax,BYTE PTR [rdx]
  405d01:	test   al,al
  405d03:	je     0x405cc0
  405d05:	lea    ecx,[rax-0x61]
  405d08:	cmp    cl,0x19
  405d0b:	ja     0x405cf1
  405d0d:	sub    eax,0x20
  405d10:	mov    BYTE PTR [rdx],al
  405d12:	jmp    0x405cfa
  405d14:	cmp    dx,0x1
  405d18:	lea    rax,[rip+0x10965]        # 0x416684
  405d1f:	lea    rdx,[rip+0x10c5d]        # 0x416983
  405d26:	cmovne rax,rdx
  405d2a:	jmp    0x405cd0
  405d2c:	cmp    dx,0x1
  405d30:	lea    rax,[rip+0x1081d]        # 0x416554
  405d37:	lea    rdx,[rip+0x1081d]        # 0x41655b
  405d3e:	cmovne rax,rdx
  405d42:	jmp    0x405cd0
  405d44:	cmp    dx,0x1
  405d48:	lea    rax,[rip+0x10e4f]        # 0x416b9e
  405d4f:	lea    rdx,[rip+0x10e4e]        # 0x416ba4
  405d56:	cmovne rax,rdx
  405d5a:	jmp    0x405cd0
  405d5f:	cmp    dx,0x1
  405d63:	lea    rax,[rip+0x10a49]        # 0x4167b3
  405d6a:	lea    rdx,[rip+0x10a48]        # 0x4167b9
  405d71:	cmovne rax,rdx
  405d75:	jmp    0x405cd0
  405d7a:	cmp    dx,0x1
  405d7e:	lea    rax,[rip+0x10a23]        # 0x4167a8
  405d85:	lea    rdx,[rip+0x10a23]        # 0x4167af
  405d8c:	cmovne rax,rdx
  405d90:	jmp    0x405cd0
  405d95:	cmp    dx,0x1
  405d99:	lea    rax,[rip+0x10e10]        # 0x416bb0
  405da0:	lea    rdx,[rip+0x10e10]        # 0x416bb7
  405da7:	cmovne rax,rdx
  405dab:	jmp    0x405cd0
  405db0:	cmp    dx,0x1
  405db4:	lea    rax,[rip+0x105a7]        # 0x416362
  405dbb:	lea    rdx,[rip+0x105a7]        # 0x416369
  405dc2:	cmovne rax,rdx
  405dc6:	jmp    0x405cd0
  405dcb:	cmp    dx,0x1
  405dcf:	lea    rax,[rip+0x106cb]        # 0x4164a1
  405dd6:	lea    rdx,[rip+0x106ca]        # 0x4164a7
  405ddd:	cmovne rax,rdx
  405de1:	jmp    0x405cd0
  405de6:	cmp    dx,0x1
  405dea:	lea    rax,[rip+0x10aa5]        # 0x416896
  405df1:	lea    rdx,[rip+0x10aa4]        # 0x41689c
  405df8:	cmovne rax,rdx
  405dfc:	jmp    0x405cd0
  405e01:	cmp    dx,0x1
  405e05:	lea    rax,[rip+0x10a2f]        # 0x41683b
  405e0c:	lea    rdx,[rip+0x10a2e]        # 0x416841
  405e13:	cmovne rax,rdx
  405e17:	jmp    0x405cd0
  405e1c:	cmp    dx,0x1
  405e20:	lea    rax,[rip+0x10d11]        # 0x416b38
  405e27:	lea    rdx,[rip+0x10d10]        # 0x416b3e
  405e2e:	cmovne rax,rdx
  405e32:	jmp    0x405cd0
  405e37:	cmp    dx,0x1
  405e3b:	lea    rax,[rip+0x10606]        # 0x416448
  405e42:	lea    rdx,[rip+0x10605]        # 0x41644e
  405e49:	cmovne rax,rdx
  405e4d:	jmp    0x405cd0
  405e52:	cmp    dx,0x1
  405e56:	lea    rax,[rip+0x109fb]        # 0x416858
  405e5d:	lea    rdx,[rip+0x109fb]        # 0x41685f
  405e64:	cmovne rax,rdx
  405e68:	jmp    0x405cd0
  405e6d:	cmp    dx,0x1
  405e71:	lea    rax,[rip+0x109cc]        # 0x416844
  405e78:	lea    rdx,[rip+0x109cc]        # 0x41684b
  405e7f:	cmovne rax,rdx
  405e83:	jmp    0x405cd0
  405e88:	cmp    dx,0x1
  405e8c:	lea    rax,[rip+0x10a1e]        # 0x4168b1
  405e93:	lea    rdx,[rip+0x10a1e]        # 0x4168b8
  405e9a:	cmovne rax,rdx
  405e9e:	jmp    0x405cd0
  405ea3:	cmp    dx,0x1
  405ea7:	lea    rax,[rip+0x10d0d]        # 0x416bbb
  405eae:	lea    rdx,[rip+0x10d0c]        # 0x416bc1
  405eb5:	cmovne rax,rdx
  405eb9:	jmp    0x405cd0
  405ebe:	cmp    dx,0x1
  405ec2:	lea    rax,[rip+0x10ae7]        # 0x4169b0
  405ec9:	lea    rdx,[rip+0x10ae6]        # 0x4169b6
  405ed0:	cmovne rax,rdx
  405ed4:	jmp    0x405cd0
  405ed9:	cmp    dx,0x1
  405edd:	lea    rax,[rip+0x108fe]        # 0x4167e2
  405ee4:	lea    rdx,[rip+0x108fd]        # 0x4167e8
  405eeb:	cmovne rax,rdx
  405eef:	jmp    0x405cd0
  405ef4:	cmp    dx,0x1
  405ef8:	lea    rax,[rip+0x107f7]        # 0x4166f6
  405eff:	lea    rdx,[rip+0x107f7]        # 0x4166fd
  405f06:	cmovne rax,rdx
  405f0a:	jmp    0x405cd0
  405f0f:	cmp    dx,0x1
  405f13:	lea    rax,[rip+0x107be]        # 0x4166d8
  405f1a:	lea    rdx,[rip+0x107bd]        # 0x4166de
  405f21:	cmovne rax,rdx
  405f25:	jmp    0x405cd0
  405f2a:	cmp    dx,0x1
  405f2e:	lea    rax,[rip+0x10bd0]        # 0x416b05
  405f35:	je     0x405cd0
  405f3b:	cmp    dx,0x2
  405f3f:	lea    rax,[rip+0x10bc5]        # 0x416b0b
  405f46:	lea    rdx,[rip+0x10bc4]        # 0x416b11
  405f4d:	cmovne rax,rdx
  405f51:	jmp    0x405cd0
  405f56:	cmp    dx,0x1
  405f5a:	lea    rax,[rip+0x10947]        # 0x4168a8
  405f61:	lea    rdx,[rip+0x10946]        # 0x4168ae
  405f68:	cmovne rax,rdx
  405f6c:	jmp    0x405cd0
  405f71:	cmp    dx,0x1
  405f75:	lea    rax,[rip+0x1080b]        # 0x416787
  405f7c:	lea    rdx,[rip+0x1080a]        # 0x41678d
  405f83:	cmovne rax,rdx
  405f87:	jmp    0x405cd0
  405f8c:	cmp    dx,0x1
  405f90:	lea    rax,[rip+0x10799]        # 0x416730
  405f97:	lea    rdx,[rip+0x10798]        # 0x416736
  405f9e:	cmovne rax,rdx
  405fa2:	jmp    0x405cd0
  405fa7:	cmp    dx,0x1
  405fab:	lea    rax,[rip+0x1071d]        # 0x4166cf
  405fb2:	lea    rdx,[rip+0x1071c]        # 0x4166d5
  405fb9:	cmovne rax,rdx
  405fbd:	jmp    0x405cd0
  405fc2:	cmp    dx,0x1
  405fc6:	lea    rax,[rip+0x10830]        # 0x4167fd
  405fcd:	lea    rdx,[rip+0x1082f]        # 0x416803
  405fd4:	cmovne rax,rdx
  405fd8:	jmp    0x405cd0
  405fdd:	cmp    dx,0x1
  405fe1:	lea    rax,[rip+0x10436]        # 0x41641e
  405fe8:	lea    rdx,[rip+0x10435]        # 0x416424
  405fef:	cmovne rax,rdx
  405ff3:	jmp    0x405cd0
  405ff8:	cmp    dx,0x1
  405ffc:	lea    rax,[rip+0x109d0]        # 0x4169d3
  406003:	lea    rdx,[rip+0x109d0]        # 0x4169da
  40600a:	cmovne rax,rdx
  40600e:	jmp    0x405cd0
  406013:	cmp    dx,0x2
  406017:	lea    rax,[rip+0x108d4]        # 0x4168f2
  40601e:	je     0x405cd0
  406024:	cmp    dx,0x3
  406028:	lea    rax,[rip+0x108c9]        # 0x4168f8
  40602f:	je     0x405cd0
  406035:	cmp    dx,0x1
  406039:	lea    rax,[rip+0x108ac]        # 0x4168ec
  406040:	lea    rdx,[rip+0x108b7]        # 0x4168fe
  406047:	cmovne rax,rdx
  40604b:	jmp    0x405cd0
  406050:	cmp    dx,0x1
  406054:	lea    rax,[rip+0x10a4b]        # 0x416aa6
  40605b:	lea    rdx,[rip+0x10915]        # 0x416977
  406062:	cmovne rax,rdx
  406066:	jmp    0x405cd0
  40606b:	cmp    dx,0x1
  40606f:	lea    rax,[rip+0x106a6]        # 0x41671c
  406076:	lea    rdx,[rip+0x106a6]        # 0x416723
  40607d:	cmovne rax,rdx
  406081:	jmp    0x405cd0
  406086:	cmp    dx,0x1
  40608a:	lea    rax,[rip+0x1065c]        # 0x4166ed
  406091:	lea    rdx,[rip+0x10652]        # 0x4166ea
  406098:	cmovne rax,rdx
  40609c:	jmp    0x405cd0
  4060a1:	cmp    dx,0x1
  4060a5:	lea    rax,[rip+0x105cf]        # 0x41667b
  4060ac:	lea    rdx,[rip+0x105ce]        # 0x416681
  4060b3:	cmovne rax,rdx
  4060b7:	jmp    0x405cd0
  4060bc:	cmp    dx,0x1
  4060c0:	lea    rax,[rip+0x104b6]        # 0x41657d
  4060c7:	lea    rdx,[rip+0x104b6]        # 0x416584
  4060ce:	cmovne rax,rdx
  4060d2:	jmp    0x405cd0
  4060d7:	cmp    dx,0x1
  4060db:	lea    rax,[rip+0x1047d]        # 0x41655f
  4060e2:	lea    rdx,[rip+0x1047c]        # 0x416565
  4060e9:	cmovne rax,rdx
  4060ed:	jmp    0x405cd0
  4060f2:	cmp    dx,0x1
  4060f6:	lea    rax,[rip+0x10997]        # 0x416a94
  4060fd:	lea    rdx,[rip+0x10996]        # 0x416a9a
  406104:	cmovne rax,rdx
  406108:	jmp    0x405cd0
  40610d:	cmp    dx,0x1
  406111:	lea    rax,[rip+0x107a4]        # 0x4168bc
  406118:	lea    rdx,[rip+0x107a3]        # 0x4168c2
  40611f:	cmovne rax,rdx
  406123:	jmp    0x405cd0
  406128:	cmp    dx,0x1
  40612c:	lea    rax,[rip+0x1053f]        # 0x416672
  406133:	lea    rdx,[rip+0x1053e]        # 0x416678
  40613a:	cmovne rax,rdx
  40613e:	jmp    0x405cd0
  406143:	cmp    dx,0x1
  406147:	lea    rax,[rip+0x10724]        # 0x416872
  40614e:	je     0x405cd0
  406154:	cmp    dx,0x2
  406158:	lea    rax,[rip+0x10719]        # 0x416878
  40615f:	lea    rdx,[rip+0x10718]        # 0x41687e
  406166:	cmovne rax,rdx
  40616a:	jmp    0x405cd0
  40616f:	cmp    dx,0x1
  406173:	lea    rax,[rip+0x10616]        # 0x416790
  40617a:	je     0x405cd0
  406180:	cmp    dx,0x2
  406184:	lea    rax,[rip+0x1060b]        # 0x416796
  40618b:	lea    rdx,[rip+0x1060a]        # 0x41679c
  406192:	cmovne rax,rdx
  406196:	jmp    0x405cd0
  40619b:	cmp    dx,0x2
  40619f:	lea    rax,[rip+0x1091e]        # 0x416ac4
  4061a6:	je     0x405cd0
  4061ac:	cmp    dx,0x1f
  4061b0:	lea    rax,[rip+0x10903]        # 0x416aba
  4061b7:	je     0x405cd0
  4061bd:	cmp    dx,0x1
  4061c1:	lea    rax,[rip+0x108e4]        # 0x416aac
  4061c8:	lea    rdx,[rip+0x10902]        # 0x416ad1
  4061cf:	cmovne rax,rdx
  4061d3:	jmp    0x405cd0
  4061d8:	cmp    dx,0x1
  4061dc:	lea    rax,[rip+0x1018a]        # 0x41636d
  4061e3:	lea    rdx,[rip+0x10189]        # 0x416373
  4061ea:	cmovne rax,rdx
  4061ee:	jmp    0x405cd0
  4061f3:	cmp    dx,0x2
  4061f7:	lea    rax,[rip+0x10556]        # 0x416754
  4061fe:	je     0x405cd0
  406204:	cmp    dx,0x1f
  406208:	lea    rax,[rip+0x1053c]        # 0x41674b
  40620f:	je     0x405cd0
  406215:	cmp    dx,0x1
  406219:	lea    rax,[rip+0x10525]        # 0x416745
  406220:	lea    rdx,[rip+0x1051b]        # 0x416742
  406227:	cmovne rax,rdx
  40622b:	jmp    0x405cd0
  406230:	cmp    dx,0x1
  406234:	lea    rax,[rip+0x1023a]        # 0x416475
  40623b:	lea    rdx,[rip+0x1023a]        # 0x41647c
  406242:	cmovne rax,rdx
  406246:	jmp    0x405cd0
  40624b:	cmp    dx,0x1
  40624f:	lea    rax,[rip+0x1073f]        # 0x416995
  406256:	lea    rdx,[rip+0x1073e]        # 0x41699b
  40625d:	cmovne rax,rdx
  406261:	jmp    0x405cd0
  406266:	cmp    dx,0x1
  40626a:	lea    rax,[rip+0x10818]        # 0x416a89
  406271:	lea    rdx,[rip+0x10818]        # 0x416a90
  406278:	cmovne rax,rdx
  40627c:	jmp    0x405cd0
  406281:	cmp    dx,0x1
  406285:	lea    rax,[rip+0x106fa]        # 0x416986
  40628c:	je     0x405cd0
  406292:	cmp    dx,0x2
  406296:	lea    rax,[rip+0x106ef]        # 0x41698c
  40629d:	lea    rdx,[rip+0x106ee]        # 0x416992
  4062a4:	cmovne rax,rdx
  4062a8:	jmp    0x405cd0
  4062ad:	cmp    dx,0x1
  4062b1:	lea    rax,[rip+0x10578]        # 0x416830
  4062b8:	lea    rdx,[rip+0x10578]        # 0x416837
  4062bf:	cmovne rax,rdx
  4062c3:	jmp    0x405cd0
  4062c8:	cmp    dx,0x1
  4062cc:	lea    rax,[rip+0x104e9]        # 0x4167bc
  4062d3:	lea    rdx,[rip+0x104e9]        # 0x4167c3
  4062da:	cmovne rax,rdx
  4062de:	jmp    0x405cd0
  4062e3:	cmp    dx,0x1
  4062e7:	lea    rax,[rip+0x103a5]        # 0x416693
  4062ee:	lea    rdx,[rip+0x103a4]        # 0x416699
  4062f5:	cmovne rax,rdx
  4062f9:	jmp    0x405cd0
  4062fe:	cmp    dx,0x1
  406302:	lea    rax,[rip+0x10151]        # 0x41645a
  406309:	lea    rdx,[rip+0x10150]        # 0x416460
  406310:	cmovne rax,rdx
  406314:	jmp    0x405cd0
  406319:	cmp    dx,0x1
  40631d:	lea    rax,[rip+0x104b5]        # 0x4167d9
  406324:	lea    rdx,[rip+0x104b4]        # 0x4167df
  40632b:	cmovne rax,rdx
  40632f:	jmp    0x405cd0
  406334:	cmp    dx,0x1
  406338:	lea    rax,[rip+0x10124]        # 0x416463
  40633f:	lea    rdx,[rip+0x10123]        # 0x416469
  406346:	cmovne rax,rdx
  40634a:	jmp    0x405cd0
  40634f:	cmp    dx,0x1
  406353:	lea    rax,[rip+0x1083b]        # 0x416b95
  40635a:	lea    rdx,[rip+0x1083a]        # 0x416b9b
  406361:	cmovne rax,rdx
  406365:	jmp    0x405cd0
  40636a:	cmp    dx,0x2
  40636e:	lea    rax,[rip+0x10787]        # 0x416afc
  406375:	lea    rdx,[rip+0x1077d]        # 0x416af9
  40637c:	cmovne rax,rdx
  406380:	jmp    0x405cd0
  406385:	cmp    dx,0x2
  406389:	je     0x4063a5
  40638b:	jbe    0x40733f
  406391:	cmp    dx,0x1e
  406395:	je     0x407351
  40639b:	cmp    dx,0x1f
  40639f:	jne    0x407345
  4063a5:	lea    rax,[rip+0x104bd]        # 0x416869
  4063ac:	jmp    0x405cd0
  4063b1:	cmp    dx,0x1
  4063b5:	lea    rax,[rip+0x105be]        # 0x41697a
  4063bc:	lea    rdx,[rip+0x105bd]        # 0x416980
  4063c3:	cmovne rax,rdx
  4063c7:	jmp    0x405cd0
  4063cc:	cmp    dx,0x1
  4063d0:	lea    rax,[rip+0x10478]        # 0x41684f
  4063d7:	lea    rdx,[rip+0x10477]        # 0x416855
  4063de:	cmovne rax,rdx
  4063e2:	jmp    0x405cd0
  4063e7:	cmp    dx,0x1
  4063eb:	lea    rax,[rip+0xfff0]        # 0x4163e2
  4063f2:	lea    rdx,[rip+0xffef]        # 0x4163e8
  4063f9:	cmovne rax,rdx
  4063fd:	jmp    0x405cd0
  406402:	cmp    dx,0x1
  406406:	lea    rax,[rip+0x10411]        # 0x41681e
  40640d:	lea    rdx,[rip+0x10410]        # 0x416824
  406414:	cmovne rax,rdx
  406418:	jmp    0x405cd0
  40641d:	cmp    dx,0x1
  406421:	lea    rax,[rip+0x10356]        # 0x41677e
  406428:	lea    rdx,[rip+0x10355]        # 0x416784
  40642f:	cmovne rax,rdx
  406433:	jmp    0x405cd0
  406438:	cmp    dx,0x1
  40643c:	lea    rax,[rip+0x106a4]        # 0x416ae7
  406443:	lea    rdx,[rip+0x106a3]        # 0x416aed
  40644a:	cmovne rax,rdx
  40644e:	jmp    0x405cd0
  406453:	cmp    dx,0x1
  406457:	lea    rax,[rip+0x10677]        # 0x416ad5
  40645e:	lea    rdx,[rip+0x10676]        # 0x416adb
  406465:	cmovne rax,rdx
  406469:	jmp    0x405cd0
  40646e:	cmp    dx,0x1
  406472:	lea    rax,[rip+0x10426]        # 0x41689f
  406479:	lea    rdx,[rip+0x10425]        # 0x4168a5
  406480:	cmovne rax,rdx
  406484:	jmp    0x405cd0
  406489:	cmp    dx,0x1
  40648d:	lea    rax,[rip+0x1024d]        # 0x4166e1
  406494:	lea    rdx,[rip+0x1024c]        # 0x4166e7
  40649b:	cmovne rax,rdx
  40649f:	jmp    0x405cd0
  4064a4:	cmp    dx,0x1
  4064a8:	lea    rax,[rip+0x1042e]        # 0x4168dd
  4064af:	je     0x405cd0
  4064b5:	cmp    dx,0x2
  4064b9:	lea    rax,[rip+0x10423]        # 0x4168e3
  4064c0:	lea    rdx,[rip+0x10422]        # 0x4168e9
  4064c7:	cmovne rax,rdx
  4064cb:	jmp    0x405cd0
  4064d0:	cmp    dx,0x1
  4064d4:	lea    rax,[rip+0xff5e]        # 0x416439
  4064db:	je     0x405cd0
  4064e1:	cmp    dx,0x2
  4064e5:	lea    rax,[rip+0xff53]        # 0x41643f
  4064ec:	lea    rdx,[rip+0xff52]        # 0x416445
  4064f3:	cmovne rax,rdx
  4064f7:	jmp    0x405cd0
  4064fc:	cmp    dx,0x1
  406500:	lea    rax,[rip+0x105d7]        # 0x416ade
  406507:	lea    rdx,[rip+0x105d6]        # 0x416ae4
  40650e:	cmovne rax,rdx
  406512:	jmp    0x405cd0
  406517:	cmp    dx,0x2
  40651b:	lea    rax,[rip+0x1064c]        # 0x416b6e
  406522:	je     0x405cd0
  406528:	cmp    dx,0x1e
  40652c:	lea    rax,[rip+0x1062f]        # 0x416b62
  406533:	je     0x405cd0
  406539:	cmp    dx,0x1
  40653d:	lea    rax,[rip+0x10618]        # 0x416b5c
  406544:	lea    rdx,[rip+0x1060e]        # 0x416b59
  40654b:	cmovne rax,rdx
  40654f:	jmp    0x405cd0
  406554:	cmp    dx,0x1
  406558:	lea    rax,[rip+0x105d0]        # 0x416b2f
  40655f:	lea    rdx,[rip+0x105cf]        # 0x416b35
  406566:	cmovne rax,rdx
  40656a:	jmp    0x405cd0
  40656f:	cmp    dx,0x1
  406573:	lea    rax,[rip+0x104f7]        # 0x416a71
  40657a:	lea    rdx,[rip+0x104f6]        # 0x416a77
  406581:	cmovne rax,rdx
  406585:	jmp    0x405cd0
  40658a:	cmp    dx,0x1
  40658e:	lea    rax,[rip+0x1023b]        # 0x4167d0
  406595:	lea    rdx,[rip+0x1023a]        # 0x4167d6
  40659c:	cmovne rax,rdx
  4065a0:	jmp    0x405cd0
  4065a5:	cmp    dx,0x1
  4065a9:	lea    rax,[rip+0x101ef]        # 0x41679f
  4065b0:	lea    rdx,[rip+0x101ee]        # 0x4167a5
  4065b7:	cmovne rax,rdx
  4065bb:	jmp    0x405cd0
  4065c0:	cmp    dx,0x1
  4065c4:	lea    rax,[rip+0x10244]        # 0x41680f
  4065cb:	je     0x405cd0
  4065d1:	cmp    dx,0x2
  4065d5:	lea    rax,[rip+0x10239]        # 0x416815
  4065dc:	lea    rdx,[rip+0x10238]        # 0x41681b
  4065e3:	cmovne rax,rdx
  4065e7:	jmp    0x405cd0
  4065ec:	cmp    dx,0x1
  4065f0:	lea    rax,[rip+0x10586]        # 0x416b7d
  4065f7:	lea    rdx,[rip+0x10504]        # 0x416b02
  4065fe:	cmovne rax,rdx
  406602:	jmp    0x405cd0
  406607:	cmp    dx,0x1
  40660b:	lea    rax,[rip+0x10072]        # 0x416684
  406612:	je     0x405cd0
  406618:	cmp    dx,0x2
  40661c:	lea    rax,[rip+0x10067]        # 0x41668a
  406623:	lea    rdx,[rip+0x10066]        # 0x416690
  40662a:	cmovne rax,rdx
  40662e:	jmp    0x405cd0
  406633:	cmp    dx,0x1f
  406637:	ja     0x406e3b
  40663d:	lea    rax,[rip+0x107d4]        # 0x416e18
  406644:	movzx  edx,dx
  406647:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40664b:	add    rax,rdx
  40664e:	jmp    rax
  406650:	cmp    dx,0x1
  406654:	lea    rax,[rip+0x101cc]        # 0x416827
  40665b:	lea    rdx,[rip+0x101cb]        # 0x41682d
  406662:	cmovne rax,rdx
  406666:	jmp    0x405cd0
  40666b:	cmp    dx,0x1
  40666f:	lea    rax,[rip+0x10094]        # 0x41670a
  406676:	lea    rdx,[rip+0x10093]        # 0x416710
  40667d:	cmovne rax,rdx
  406681:	jmp    0x405cd0
  406686:	cmp    dx,0x1
  40668a:	lea    rax,[rip+0xff6f]        # 0x416600
  406691:	lea    rdx,[rip+0xff6e]        # 0x416606
  406698:	cmovne rax,rdx
  40669c:	jmp    0x405cd0
  4066a1:	cmp    dx,0x1
  4066a5:	lea    rax,[rip+0xfff0]        # 0x41669c
  4066ac:	lea    rdx,[rip+0xffef]        # 0x4166a2
  4066b3:	cmovne rax,rdx
  4066b7:	jmp    0x405cd0
  4066bc:	cmp    dx,0x1
  4066c0:	lea    rax,[rip+0xfc89]        # 0x416350
  4066c7:	lea    rdx,[rip+0xfc88]        # 0x416356
  4066ce:	cmovne rax,rdx
  4066d2:	jmp    0x405cd0
  4066d7:	cmp    dx,0x1
  4066db:	lea    rax,[rip+0x1007e]        # 0x416760
  4066e2:	lea    rdx,[rip+0x1000a]        # 0x4166f3
  4066e9:	cmovne rax,rdx
  4066ed:	jmp    0x405cd0
  4066f2:	cmp    dx,0x1
  4066f6:	lea    rax,[rip+0x104aa]        # 0x416ba7
  4066fd:	lea    rdx,[rip+0x104a9]        # 0x416bad
  406704:	cmovne rax,rdx
  406708:	jmp    0x405cd0
  40670d:	cmp    dx,0x1
  406711:	lea    rax,[rip+0x1046b]        # 0x416b83
  406718:	lea    rdx,[rip+0x1046a]        # 0x416b89
  40671f:	cmovne rax,rdx
  406723:	jmp    0x405cd0
  406728:	cmp    dx,0x1
  40672c:	lea    rax,[rip+0x103ea]        # 0x416b1d
  406733:	lea    rdx,[rip+0x103e9]        # 0x416b23
  40673a:	cmovne rax,rdx
  40673e:	jmp    0x405cd0
  406743:	cmp    dx,0x1
  406747:	lea    rax,[rip+0x103c6]        # 0x416b14
  40674e:	lea    rdx,[rip+0x103c5]        # 0x416b1a
  406755:	cmovne rax,rdx
  406759:	jmp    0x405cd0
  40675e:	cmp    dx,0x1
  406762:	lea    rax,[rip+0x102fd]        # 0x416a66
  406769:	lea    rdx,[rip+0x102fd]        # 0x416a6d
  406770:	cmovne rax,rdx
  406774:	jmp    0x405cd0
  406779:	cmp    dx,0x1
  40677d:	lea    rax,[rip+0x10082]        # 0x416806
  406784:	lea    rdx,[rip+0x10081]        # 0x41680c
  40678b:	cmovne rax,rdx
  40678f:	jmp    0x405cd0
  406794:	cmp    dx,0x1
  406798:	lea    rax,[rip+0x1021e]        # 0x4169bd
  40679f:	je     0x405cd0
  4067a5:	lea    rax,[rip+0x1020d]        # 0x4169b9
  4067ac:	jb     0x405cd0
  4067b2:	cmp    dx,0x2
  4067b6:	lea    rax,[rip+0x1020b]        # 0x4169c8
  4067bd:	je     0x405cd0
  4067c3:	cmp    dx,0x1f
  4067c7:	lea    rax,[rip+0x101f6]        # 0x4169c4
  4067ce:	lea    rdx,[rip+0x101fa]        # 0x4169cf
  4067d5:	cmovne rax,rdx
  4067d9:	jmp    0x405cd0
  4067de:	cmp    dx,0x1
  4067e2:	lea    rax,[rip+0xfc3e]        # 0x416427
  4067e9:	lea    rdx,[rip+0xfc3d]        # 0x41642d
  4067f0:	cmovne rax,rdx
  4067f4:	jmp    0x405cd0
  4067f9:	cmp    dx,0x2
  4067fd:	lea    rax,[rip+0xfc08]        # 0x41640c
  406804:	je     0x405cd0
  40680a:	jbe    0x407373
  406810:	cmp    dx,0x1d
  406814:	lea    rax,[rip+0xfbe5]        # 0x416400
  40681b:	je     0x405cd0
  406821:	cmp    dx,0x1e
  406825:	lea    rax,[rip+0xfbbf]        # 0x4163eb
  40682c:	je     0x405cd0
  406832:	lea    rax,[rip+0xfbe2]        # 0x41641b
  406839:	jmp    0x405cd0
  40683e:	cmp    dx,0x1
  406842:	lea    rax,[rip+0xfb90]        # 0x4163d9
  406849:	lea    rdx,[rip+0xfb8f]        # 0x4163df
  406850:	cmovne rax,rdx
  406854:	jmp    0x405cd0
  406859:	cmp    dx,0x1
  40685d:	lea    rax,[rip+0x10328]        # 0x416b8c
  406864:	lea    rdx,[rip+0x10327]        # 0x416b92
  40686b:	cmovne rax,rdx
  40686f:	jmp    0x405cd0
  406874:	cmp    dx,0x1
  406878:	lea    rax,[rip+0xfd8a]        # 0x416609
  40687f:	lea    rdx,[rip+0xfd89]        # 0x41660f
  406886:	cmovne rax,rdx
  40688a:	jmp    0x405cd0
  40688f:	cmp    dx,0x1
  406893:	lea    rax,[rip+0x10206]        # 0x416aa0
  40689a:	lea    rdx,[rip+0x101fc]        # 0x416a9d
  4068a1:	cmovne rax,rdx
  4068a5:	jmp    0x405cd0
  4068aa:	cmp    dx,0x1
  4068ae:	lea    rax,[rip+0xff3f]        # 0x4167f4
  4068b5:	lea    rdx,[rip+0xff3e]        # 0x4167fa
  4068bc:	cmovne rax,rdx
  4068c0:	jmp    0x405cd0
  4068c5:	cmp    dx,0x1
  4068c9:	lea    rax,[rip+0xff1b]        # 0x4167eb
  4068d0:	lea    rdx,[rip+0xff1a]        # 0x4167f1
  4068d7:	cmovne rax,rdx
  4068db:	jmp    0x405cd0
  4068e0:	cmp    dx,0x1
  4068e4:	lea    rax,[rip+0xfd0c]        # 0x4165f7
  4068eb:	lea    rdx,[rip+0xfd0b]        # 0x4165fd
  4068f2:	cmovne rax,rdx
  4068f6:	jmp    0x405cd0
  4068fb:	cmp    dx,0x1
  4068ff:	lea    rax,[rip+0x100a1]        # 0x4169a7
  406906:	lea    rdx,[rip+0x100a0]        # 0x4169ad
  40690d:	cmovne rax,rdx
  406911:	jmp    0x405cd0
  406916:	cmp    dx,0x1
  40691a:	lea    rax,[rip+0xfb0f]        # 0x416430
  406921:	lea    rdx,[rip+0xfb0e]        # 0x416436
  406928:	cmovne rax,rdx
  40692c:	jmp    0x405cd0
  406931:	cmp    dx,0x1
  406935:	lea    rax,[rip+0x10205]        # 0x416b41
  40693c:	lea    rdx,[rip+0x10204]        # 0x416b47
  406943:	cmovne rax,rdx
  406947:	jmp    0x405cd0
  40694c:	cmp    dx,0x1
  406950:	lea    rax,[rip+0xfde2]        # 0x416739
  406957:	lea    rdx,[rip+0xfde1]        # 0x41673f
  40695e:	cmovne rax,rdx
  406962:	jmp    0x405cd0
  406967:	cmp    dx,0x1
  40696b:	lea    rax,[rip+0x101d8]        # 0x416b4a
  406972:	je     0x405cd0
  406978:	cmp    dx,0x2
  40697c:	lea    rax,[rip+0x101cd]        # 0x416b50
  406983:	lea    rdx,[rip+0x101cc]        # 0x416b56
  40698a:	cmovne rax,rdx
  40698e:	jmp    0x405cd0
  406993:	cmp    dx,0x1
  406997:	lea    rax,[rip+0x10188]        # 0x416b26
  40699e:	lea    rdx,[rip+0x10187]        # 0x416b2c
  4069a5:	cmovne rax,rdx
  4069a9:	jmp    0x405cd0
  4069ae:	cmp    dx,0x1
  4069b2:	lea    rax,[rip+0x10137]        # 0x416af0
  4069b9:	lea    rdx,[rip+0x10136]        # 0x416af6
  4069c0:	cmovne rax,rdx
  4069c4:	jmp    0x405cd0
  4069c9:	cmp    dx,0x1
  4069cd:	lea    rax,[rip+0x100a6]        # 0x416a7a
  4069d4:	je     0x405cd0
  4069da:	cmp    dx,0x2
  4069de:	lea    rax,[rip+0x1009b]        # 0x416a80
  4069e5:	lea    rdx,[rip+0x1009a]        # 0x416a86
  4069ec:	cmovne rax,rdx
  4069f0:	jmp    0x405cd0
  4069f5:	cmp    dx,0x1
  4069f9:	lea    rax,[rip+0xf959]        # 0x416359
  406a00:	lea    rdx,[rip+0xf958]        # 0x41635f
  406a07:	cmovne rax,rdx
  406a0b:	jmp    0x405cd0
  406a10:	cmp    dx,0x1
  406a14:	lea    rax,[rip+0xff83]        # 0x41699e
  406a1b:	lea    rdx,[rip+0xff82]        # 0x4169a4
  406a22:	cmovne rax,rdx
  406a26:	jmp    0x405cd0
  406a2b:	cmp    dx,0x1f
  406a2f:	ja     0x407123
  406a35:	lea    rax,[rip+0x1045c]        # 0x416e98
  406a3c:	movzx  edx,dx
  406a3f:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406a43:	add    rax,rdx
  406a46:	jmp    rax
  406a48:	cmp    dx,0x1
  406a4c:	lea    rax,[rip+0xfec6]        # 0x416919
  406a53:	je     0x405cd0
  406a59:	cmp    dx,0x2
  406a5d:	lea    rax,[rip+0xfebb]        # 0x41691f
  406a64:	lea    rdx,[rip+0xfeba]        # 0x416925
  406a6b:	cmovne rax,rdx
  406a6f:	jmp    0x405cd0
  406a74:	cmp    dx,0x1
  406a78:	lea    rax,[rip+0xfe82]        # 0x416901
  406a7f:	je     0x405cd0
  406a85:	cmp    dx,0x2
  406a89:	lea    rax,[rip+0xfe77]        # 0x416907
  406a90:	lea    rdx,[rip+0xfe76]        # 0x41690d
  406a97:	cmovne rax,rdx
  406a9b:	jmp    0x405cd0
  406aa0:	cmp    dx,0x1
  406aa4:	lea    rax,[rip+0xfe65]        # 0x416910
  406aab:	lea    rdx,[rip+0xfe64]        # 0x416916
  406ab2:	cmovne rax,rdx
  406ab6:	jmp    0x405cd0
  406abb:	cmp    dx,0x1
  406abf:	lea    rax,[rip+0xfe08]        # 0x4168ce
  406ac6:	je     0x405cd0
  406acc:	cmp    dx,0x2
  406ad0:	lea    rax,[rip+0xfdfd]        # 0x4168d4
  406ad7:	lea    rdx,[rip+0xfdfc]        # 0x4168da
  406ade:	cmovne rax,rdx
  406ae2:	jmp    0x405cd0
  406ae7:	cmp    dx,0x1
  406aeb:	lea    rax,[rip+0xfdd3]        # 0x4168c5
  406af2:	lea    rdx,[rip+0xfdd2]        # 0x4168cb
  406af9:	cmovne rax,rdx
  406afd:	jmp    0x405cd0
  406b02:	cmp    dx,0x2
  406b06:	lea    rax,[rip+0xfd80]        # 0x41688d
  406b0d:	je     0x405cd0
  406b13:	jbe    0x40735d
  406b19:	cmp    dx,0x1e
  406b1d:	lea    rax,[rip+0xfd66]        # 0x41688a
  406b24:	je     0x405cd0
  406b2a:	cmp    dx,0x1f
  406b2e:	lea    rax,[rip+0xfd4c]        # 0x416881
  406b35:	je     0x405cd0
  406b3b:	lea    rax,[rip+0xfd51]        # 0x416893
  406b42:	jmp    0x405cd0
  406b47:	cmp    dx,0x2
  406b4b:	lea    rax,[rip+0xfa1c]        # 0x41656e
  406b52:	je     0x405cd0
  406b58:	cmp    dx,0x3
  406b5c:	lea    rax,[rip+0xfa11]        # 0x416574
  406b63:	je     0x405cd0
  406b69:	cmp    dx,0x1
  406b6d:	lea    rax,[rip+0xf9f4]        # 0x416568
  406b74:	lea    rdx,[rip+0xf9ff]        # 0x41657a
  406b7b:	cmovne rax,rdx
  406b7f:	jmp    0x405cd0
  406b84:	cmp    dx,0x1
  406b88:	lea    rax,[rip+0xfc38]        # 0x4167c7
  406b8f:	lea    rdx,[rip+0xfc37]        # 0x4167cd
  406b96:	cmovne rax,rdx
  406b9a:	jmp    0x405cd0
  406b9f:	cmp    dx,0x1
  406ba3:	lea    rax,[rip+0xfbcb]        # 0x416775
  406baa:	lea    rdx,[rip+0xfbca]        # 0x41677b
  406bb1:	cmovne rax,rdx
  406bb5:	jmp    0x405cd0
  406bba:	cmp    dx,0x1
  406bbe:	lea    rax,[rip+0xfba1]        # 0x416766
  406bc5:	je     0x405cd0
  406bcb:	cmp    dx,0x2
  406bcf:	lea    rax,[rip+0xfb96]        # 0x41676c
  406bd6:	lea    rdx,[rip+0xfb95]        # 0x416772
  406bdd:	cmovne rax,rdx
  406be1:	jmp    0x405cd0
  406be6:	cmp    dx,0x1
  406bea:	lea    rax,[rip+0xfb36]        # 0x416727
  406bf1:	lea    rdx,[rip+0xfb35]        # 0x41672d
  406bf8:	cmovne rax,rdx
  406bfc:	jmp    0x405cd0
  406c01:	cmp    dx,0x1
  406c05:	lea    rax,[rip+0xfb07]        # 0x416713
  406c0c:	lea    rdx,[rip+0xfb06]        # 0x416719
  406c13:	cmovne rax,rdx
  406c17:	jmp    0x405cd0
  406c1c:	cmp    dx,0x1
  406c20:	lea    rax,[rip+0xfada]        # 0x416701
  406c27:	lea    rdx,[rip+0xfad9]        # 0x416707
  406c2e:	cmovne rax,rdx
  406c32:	jmp    0x405cd0
  406c37:	cmp    dx,0xf
  406c3b:	ja     0x40730f
  406c41:	lea    rax,[rip+0x102d0]        # 0x416f18
  406c48:	movzx  edx,dx
  406c4b:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406c4f:	add    rax,rdx
  406c52:	jmp    rax
  406c54:	cmp    dx,0x1
  406c58:	lea    rax,[rip+0xf9b3]        # 0x416612
  406c5f:	lea    rdx,[rip+0xf9b2]        # 0x416618
  406c66:	cmovne rax,rdx
  406c6a:	jmp    0x405cd0
  406c6f:	cmp    dx,0x15
  406c73:	ja     0x4072f7
  406c79:	lea    rax,[rip+0x102d8]        # 0x416f58
  406c80:	movzx  edx,dx
  406c83:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406c87:	add    rax,rdx
  406c8a:	jmp    rax
  406c8c:	cmp    dx,0x12
  406c90:	ja     0x40731b
  406c96:	lea    rax,[rip+0x10313]        # 0x416fb0
  406c9d:	movzx  edx,dx
  406ca0:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406ca4:	add    rax,rdx
  406ca7:	jmp    rax
  406ca9:	cmp    dx,0x1
  406cad:	lea    rax,[rip+0xfa12]        # 0x4166c6
  406cb4:	lea    rdx,[rip+0xfa11]        # 0x4166cc
  406cbb:	cmovne rax,rdx
  406cbf:	jmp    0x405cd0
  406cc4:	cmp    dx,0x1
  406cc8:	lea    rax,[rip+0xf87c]        # 0x41654b
  406ccf:	lea    rdx,[rip+0xf87b]        # 0x416551
  406cd6:	cmovne rax,rdx
  406cda:	jmp    0x405cd0
  406cdf:	cmp    dx,0x1
  406ce3:	lea    rax,[rip+0xf858]        # 0x416542
  406cea:	lea    rdx,[rip+0xf857]        # 0x416548
  406cf1:	cmovne rax,rdx
  406cf5:	jmp    0x405cd0
  406cfa:	cmp    dx,0x1f
  406cfe:	ja     0x406e0b
  406d04:	lea    rax,[rip+0x102f1]        # 0x416ffc
  406d0b:	movzx  edx,dx
  406d0e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406d12:	add    rax,rdx
  406d15:	jmp    rax
  406d17:	cmp    dx,0x1
  406d1b:	lea    rax,[rip+0xf74a]        # 0x41646c
  406d22:	lea    rdx,[rip+0xf749]        # 0x416472
  406d29:	cmovne rax,rdx
  406d2d:	jmp    0x405cd0
  406d32:	cmp    dx,0x1
  406d36:	lea    rax,[rip+0xf714]        # 0x416451
  406d3d:	lea    rdx,[rip+0xf713]        # 0x416457
  406d44:	cmovne rax,rdx
  406d48:	jmp    0x405cd0
  406d4d:	cmp    dx,0x10
  406d51:	ja     0x4072eb
  406d57:	lea    rax,[rip+0x1031e]        # 0x41707c
  406d5e:	movzx  edx,dx
  406d61:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406d65:	add    rax,rdx
  406d68:	jmp    rax
  406d6a:	cmp    dx,0x5
  406d6e:	ja     0x406e17
  406d74:	lea    rax,[rip+0x10345]        # 0x4170c0
  406d7b:	movzx  edx,dx
  406d7e:	movsxd rdx,DWORD PTR [rax+rdx*4]
  406d82:	add    rax,rdx
  406d85:	jmp    rax
  406d87:	lea    rax,[rip+0xf7b2]        # 0x416540
  406d8e:	jmp    0x405cd0
  406d93:	lea    rax,[rip+0xf6e6]        # 0x416480
  406d9a:	jmp    0x405cd0
  406d9f:	lea    rax,[rip+0xf6e0]        # 0x416486
  406da6:	jmp    0x405cd0
  406dab:	lea    rax,[rip+0xf8f9]        # 0x4166ab
  406db2:	jmp    0x405cd0
  406db7:	lea    rax,[rip+0xf8e7]        # 0x4166a5
  406dbe:	jmp    0x405cd0
  406dc3:	lea    rax,[rip+0xf6c2]        # 0x41648c
  406dca:	jmp    0x405cd0
  406dcf:	lea    rax,[rip+0xf8db]        # 0x4166b1
  406dd6:	jmp    0x405cd0
  406ddb:	lea    rax,[rip+0xf8db]        # 0x4166bd
  406de2:	jmp    0x405cd0
  406de7:	lea    rax,[rip+0xf8c9]        # 0x4166b7
  406dee:	jmp    0x405cd0
  406df3:	lea    rax,[rip+0xf69e]        # 0x416498
  406dfa:	jmp    0x405cd0
  406dff:	lea    rax,[rip+0xf68c]        # 0x416492
  406e06:	jmp    0x405cd0
  406e0b:	lea    rax,[rip+0xf68c]        # 0x41649e
  406e12:	jmp    0x405cd0
  406e17:	lea    rax,[rip+0xf8a5]        # 0x4166c3
  406e1e:	jmp    0x405cd0
  406e23:	lea    rax,[rip+0xfb07]        # 0x416931
  406e2a:	jmp    0x405cd0
  406e2f:	lea    rax,[rip+0xfaf5]        # 0x41692b
  406e36:	jmp    0x405cd0
  406e3b:	lea    rax,[rip+0xfae6]        # 0x416928
  406e42:	jmp    0x405cd0
  406e47:	lea    rax,[rip+0xfb1e]        # 0x41696c
  406e4e:	jmp    0x405cd0
  406e53:	lea    rax,[rip+0xfb16]        # 0x416970
  406e5a:	jmp    0x405cd0
  406e5f:	lea    rax,[rip+0xfaff]        # 0x416965
  406e66:	jmp    0x405cd0
  406e6b:	lea    rax,[rip+0xfae8]        # 0x41695a
  406e72:	jmp    0x405cd0
  406e77:	lea    rax,[rip+0xfad5]        # 0x416953
  406e7e:	jmp    0x405cd0
  406e83:	lea    rax,[rip+0xfabe]        # 0x416948
  406e8a:	jmp    0x405cd0
  406e8f:	lea    rax,[rip+0xfaab]        # 0x416941
  406e96:	jmp    0x405cd0
  406e9b:	lea    rax,[rip+0xfa95]        # 0x416937
  406ea2:	jmp    0x405cd0
  406ea7:	lea    rax,[rip+0xfaa1]        # 0x41694f
  406eae:	jmp    0x405cd0
  406eb3:	lea    rax,[rip+0xfaa7]        # 0x416961
  406eba:	jmp    0x405cd0
  406ebf:	lea    rax,[rip+0xf755]        # 0x41661b
  406ec6:	jmp    0x405cd0
  406ecb:	lea    rax,[rip+0xf79a]        # 0x41666c
  406ed2:	jmp    0x405cd0
  406ed7:	lea    rax,[rip+0xf788]        # 0x416666
  406ede:	jmp    0x405cd0
  406ee3:	lea    rax,[rip+0xf6f2]        # 0x4165dc
  406eea:	jmp    0x405cd0
  406eef:	lea    rax,[rip+0xf6e0]        # 0x4165d6
  406ef6:	jmp    0x405cd0
  406efb:	lea    rax,[rip+0xf6ce]        # 0x4165d0
  406f02:	jmp    0x405cd0
  406f07:	lea    rax,[rip+0xf6bc]        # 0x4165ca
  406f0e:	jmp    0x405cd0
  406f13:	lea    rax,[rip+0xf6aa]        # 0x4165c4
  406f1a:	jmp    0x405cd0
  406f1f:	lea    rax,[rip+0xf698]        # 0x4165be
  406f26:	jmp    0x405cd0
  406f2b:	lea    rax,[rip+0xf686]        # 0x4165b8
  406f32:	jmp    0x405cd0
  406f37:	lea    rax,[rip+0xf674]        # 0x4165b2
  406f3e:	jmp    0x405cd0
  406f43:	lea    rax,[rip+0xf662]        # 0x4165ac
  406f4a:	jmp    0x405cd0
  406f4f:	lea    rax,[rip+0xf650]        # 0x4165a6
  406f56:	jmp    0x405cd0
  406f5b:	lea    rax,[rip+0xf63e]        # 0x4165a0
  406f62:	jmp    0x405cd0
  406f67:	lea    rax,[rip+0xf62c]        # 0x41659a
  406f6e:	jmp    0x405cd0
  406f73:	lea    rax,[rip+0xf61a]        # 0x416594
  406f7a:	jmp    0x405cd0
  406f7f:	lea    rax,[rip+0xf608]        # 0x41658e
  406f86:	jmp    0x405cd0
  406f8b:	lea    rax,[rip+0xf5f6]        # 0x416588
  406f92:	jmp    0x405cd0
  406f97:	lea    rax,[rip+0xfa9b]        # 0x416a39
  406f9e:	jmp    0x405cd0
  406fa3:	lea    rax,[rip+0xfa89]        # 0x416a33
  406faa:	jmp    0x405cd0
  406faf:	lea    rax,[rip+0xfa77]        # 0x416a2d
  406fb6:	jmp    0x405cd0
  406fbb:	lea    rax,[rip+0xfa65]        # 0x416a27
  406fc2:	jmp    0x405cd0
  406fc7:	lea    rax,[rip+0xfa53]        # 0x416a21
  406fce:	jmp    0x405cd0
  406fd3:	lea    rax,[rip+0xfa41]        # 0x416a1b
  406fda:	jmp    0x405cd0
  406fdf:	lea    rax,[rip+0xfa2f]        # 0x416a15
  406fe6:	jmp    0x405cd0
  406feb:	lea    rax,[rip+0xfa1d]        # 0x416a0f
  406ff2:	jmp    0x405cd0
  406ff7:	lea    rax,[rip+0xfa0b]        # 0x416a09
  406ffe:	jmp    0x405cd0
  407003:	lea    rax,[rip+0xf9f9]        # 0x416a03
  40700a:	jmp    0x405cd0
  40700f:	lea    rax,[rip+0xf9e7]        # 0x4169fd
  407016:	jmp    0x405cd0
  40701b:	lea    rax,[rip+0xf9d5]        # 0x4169f7
  407022:	jmp    0x405cd0
  407027:	lea    rax,[rip+0xf9bc]        # 0x4169ea
  40702e:	jmp    0x405cd0
  407033:	lea    rax,[rip+0xf9aa]        # 0x4169e4
  40703a:	jmp    0x405cd0
  40703f:	lea    rax,[rip+0xf998]        # 0x4169de
  407046:	jmp    0x405cd0
  40704b:	lea    rax,[rip+0xf9ff]        # 0x416a51
  407052:	jmp    0x405cd0
  407057:	lea    rax,[rip+0xf9ed]        # 0x416a4b
  40705e:	jmp    0x405cd0
  407063:	lea    rax,[rip+0xf9db]        # 0x416a45
  40706a:	jmp    0x405cd0
  40706f:	lea    rax,[rip+0xf9c9]        # 0x416a3f
  407076:	jmp    0x405cd0
  40707b:	lea    rax,[rip+0xf5b1]        # 0x416633
  407082:	jmp    0x405cd0
  407087:	lea    rax,[rip+0xf59f]        # 0x41662d
  40708e:	jmp    0x405cd0
  407093:	lea    rax,[rip+0xf58d]        # 0x416627
  40709a:	jmp    0x405cd0
  40709f:	lea    rax,[rip+0xf57b]        # 0x416621
  4070a6:	jmp    0x405cd0
  4070ab:	lea    rax,[rip+0xf5ae]        # 0x416660
  4070b2:	jmp    0x405cd0
  4070b7:	lea    rax,[rip+0xf59c]        # 0x41665a
  4070be:	jmp    0x405cd0
  4070c3:	lea    rax,[rip+0xf58a]        # 0x416654
  4070ca:	jmp    0x405cd0
  4070cf:	lea    rax,[rip+0xf578]        # 0x41664e
  4070d6:	jmp    0x405cd0
  4070db:	lea    rax,[rip+0xf566]        # 0x416648
  4070e2:	jmp    0x405cd0
  4070e7:	lea    rax,[rip+0xf554]        # 0x416642
  4070ee:	jmp    0x405cd0
  4070f3:	lea    rax,[rip+0xf545]        # 0x41663f
  4070fa:	jmp    0x405cd0
  4070ff:	lea    rax,[rip+0xf533]        # 0x416639
  407106:	jmp    0x405cd0
  40710b:	lea    rax,[rip+0xf3aa]        # 0x4164bc
  407112:	jmp    0x405cd0
  407117:	lea    rax,[rip+0xf38f]        # 0x4164ad
  40711e:	jmp    0x405cd0
  407123:	lea    rax,[rip+0xf380]        # 0x4164aa
  40712a:	jmp    0x405cd0
  40712f:	lea    rax,[rip+0xf383]        # 0x4164b9
  407136:	jmp    0x405cd0
  40713b:	lea    rax,[rip+0xf392]        # 0x4164d4
  407142:	jmp    0x405cd0
  407147:	lea    rax,[rip+0xf3ce]        # 0x41651c
  40714e:	jmp    0x405cd0
  407153:	lea    rax,[rip+0xf3c2]        # 0x41651c
  40715a:	jmp    0x405cd0
  40715f:	lea    rax,[rip+0xf3bf]        # 0x416525
  407166:	jmp    0x405cd0
  40716b:	lea    rax,[rip+0xf38c]        # 0x4164fe
  407172:	jmp    0x405cd0
  407177:	lea    rax,[rip+0xf34a]        # 0x4164c8
  40717e:	jmp    0x405cd0
  407183:	lea    rax,[rip+0xf8d3]        # 0x416a5d
  40718a:	jmp    0x405cd0
  40718f:	lea    rax,[rip+0xf8c1]        # 0x416a57
  407196:	jmp    0x405cd0
  40719b:	lea    rax,[rip+0xf446]        # 0x4165e8
  4071a2:	jmp    0x405cd0
  4071a7:	lea    rax,[rip+0xf434]        # 0x4165e2
  4071ae:	jmp    0x405cd0
  4071b3:	lea    rax,[rip+0xf434]        # 0x4165ee
  4071ba:	jmp    0x405cd0
  4071bf:	lea    rax,[rip+0xf20a]        # 0x4163d0
  4071c6:	jmp    0x405cd0
  4071cb:	lea    rax,[rip+0xf31d]        # 0x4164ef
  4071d2:	jmp    0x405cd0
  4071d7:	lea    rax,[rip+0xf2e4]        # 0x4164c2
  4071de:	jmp    0x405cd0
  4071e3:	lea    rax,[rip+0xf347]        # 0x416531
  4071ea:	jmp    0x405cd0
  4071ef:	lea    rax,[rip+0xf317]        # 0x41650d
  4071f6:	jmp    0x405cd0
  4071fb:	lea    rax,[rip+0xf2cc]        # 0x4164ce
  407202:	jmp    0x405cd0
  407207:	lea    rax,[rip+0xf311]        # 0x41651f
  40720e:	jmp    0x405cd0
  407213:	lea    rax,[rip+0xf299]        # 0x4164b3
  40721a:	jmp    0x405cd0
  40721f:	lea    rax,[rip+0xf2ba]        # 0x4164e0
  407226:	jmp    0x405cd0
  40722b:	lea    rax,[rip+0xf198]        # 0x4163ca
  407232:	jmp    0x405cd0
  407237:	lea    rax,[rip+0xf186]        # 0x4163c4
  40723e:	jmp    0x405cd0
  407243:	lea    rax,[rip+0xf174]        # 0x4163be
  40724a:	jmp    0x405cd0
  40724f:	lea    rax,[rip+0xf162]        # 0x4163b8
  407256:	jmp    0x405cd0
  40725b:	lea    rax,[rip+0xf150]        # 0x4163b2
  407262:	jmp    0x405cd0
  407267:	lea    rax,[rip+0xf13e]        # 0x4163ac
  40726e:	jmp    0x405cd0
  407273:	lea    rax,[rip+0xf12c]        # 0x4163a6
  40727a:	jmp    0x405cd0
  40727f:	lea    rax,[rip+0xf11a]        # 0x4163a0
  407286:	jmp    0x405cd0
  40728b:	lea    rax,[rip+0xf108]        # 0x41639a
  407292:	jmp    0x405cd0
  407297:	lea    rax,[rip+0xf0f6]        # 0x416394
  40729e:	jmp    0x405cd0
  4072a3:	lea    rax,[rip+0xf0e4]        # 0x41638e
  4072aa:	jmp    0x405cd0
  4072af:	lea    rax,[rip+0xf0d2]        # 0x416388
  4072b6:	jmp    0x405cd0
  4072bb:	lea    rax,[rip+0xf0c0]        # 0x416382
  4072c2:	jmp    0x405cd0
  4072c7:	lea    rax,[rip+0xf0ae]        # 0x41637c
  4072ce:	jmp    0x405cd0
  4072d3:	lea    rax,[rip+0xf09c]        # 0x416376
  4072da:	jmp    0x405cd0
  4072df:	lea    rax,[rip+0xf657]        # 0x41693d
  4072e6:	jmp    0x405cd0
  4072eb:	lea    rax,[rip+0xf0e4]        # 0x4163d6
  4072f2:	jmp    0x405cd0
  4072f7:	lea    rax,[rip+0xf765]        # 0x416a63
  4072fe:	jmp    0x405cd0
  407303:	lea    rax,[rip+0xf1af]        # 0x4164b9
  40730a:	jmp    0x405cd0
  40730f:	lea    rax,[rip+0xf329]        # 0x41663f
  407316:	jmp    0x405cd0
  40731b:	lea    rax,[rip+0xf2d2]        # 0x4165f4
  407322:	jmp    0x405cd0
  407327:	nop    WORD PTR [rax+rax*1+0x0]
  407330:	mov    BYTE PTR [rdx],0x0
  407333:	lea    rax,[rip+0x13f06]        # 0x41b240
  40733a:	jmp    0x405cd0
  40733f:	cmp    dx,0x1
  407343:	je     0x407351
  407345:	lea    rax,[rip+0xf523]        # 0x41686f
  40734c:	jmp    0x405cd0
  407351:	lea    rax,[rip+0xf50b]        # 0x416863
  407358:	jmp    0x405cd0
  40735d:	cmp    dx,0x1
  407361:	lea    rax,[rip+0xf51c]        # 0x416884
  407368:	je     0x405cd0
  40736e:	jmp    0x406b3b
  407373:	cmp    dx,0x1
  407377:	lea    rax,[rip+0xf076]        # 0x4163f4
  40737e:	je     0x405cd0
  407384:	jmp    0x406832
  407389:	nop    DWORD PTR [rax+0x0]
  407390:	push   rbx
  407391:	sub    rsp,0x20
  407395:	cmp    ecx,0x5
  407398:	ja     0x407470
  40739e:	xor    edx,edx
  4073a0:	call   0x404c80
  4073a5:	mov    edx,0x3b
  4073aa:	mov    rcx,rax
  4073ad:	mov    rbx,rax
  4073b0:	call   0x411460
  4073b5:	test   rax,rax
  4073b8:	je     0x4073c9
  4073ba:	xor    edx,edx
  4073bc:	mov    ecx,0x2
  4073c1:	call   0x404c80
  4073c6:	mov    rbx,rax
  4073c9:	lea    rcx,[rip+0xacb0]        # 0x412080
  4073d0:	call   0x4076b0
  4073d5:	test   eax,eax
  4073d7:	jne    0x4074b8
  4073dd:	mov    eax,DWORD PTR [rip+0x14345]        # 0x41b728
  4073e3:	test   eax,eax
  4073e5:	je     0x4073fe
  4073e7:	lea    rdx,[rip+0x13f52]        # 0x41b340
  4073ee:	mov    rcx,rbx
  4073f1:	call   0x411458
  4073f6:	test   eax,eax
  4073f8:	je     0x4074a0
  4073fe:	lea    rcx,[rip+0x1433b]        # 0x41b740
  407405:	mov    r8d,0x1ae
  40740b:	mov    rdx,rbx
  40740e:	call   0x411430
  407413:	mov    BYTE PTR [rip+0x144d4],0x0        # 0x41b8ee
  40741a:	mov    DWORD PTR [rip+0x144cc],0x0        # 0x41b8f0
  407424:	mov    edx,0x2
  407429:	lea    rcx,[rip+0xffffffffffffe6d0]        # 0x405b00
  407430:	call   QWORD PTR [rip+0x1705a]        # 0x41e490
  407436:	mov    eax,DWORD PTR [rip+0x144b4]        # 0x41b8f0
  40743c:	test   eax,eax
  40743e:	jne    0x407480
  407440:	lea    rcx,[rip+0xac39]        # 0x412080
  407447:	call   0x407720
  40744c:	test   eax,eax
  40744e:	jne    0x4074b8
  407450:	mov    ecx,DWORD PTR [rip+0x1449a]        # 0x41b8f0
  407456:	test   ecx,ecx
  407458:	je     0x407470
  40745a:	movzx  ecx,cx
  40745d:	add    rsp,0x20
  407461:	pop    rbx
  407462:	jmp    0x405c30
  407467:	nop    WORD PTR [rax+rax*1+0x0]
  407470:	xor    eax,eax
  407472:	add    rsp,0x20
  407476:	pop    rbx
  407477:	ret    
  407478:	nop    DWORD PTR [rax+rax*1+0x0]
  407480:	lea    rcx,[rip+0x13eb9]        # 0x41b340
  407487:	mov    rdx,rbx
  40748a:	mov    DWORD PTR [rip+0x14298],eax        # 0x41b728
  407490:	call   0x411450
  407495:	jmp    0x407440
  407497:	nop    WORD PTR [rax+rax*1+0x0]
  4074a0:	lea    rcx,[rip+0xabd9]        # 0x412080
  4074a7:	call   0x407720
  4074ac:	test   eax,eax
  4074ae:	jne    0x4074b8
  4074b0:	mov    ecx,DWORD PTR [rip+0x14272]        # 0x41b728
  4074b6:	jmp    0x407456
  4074b8:	call   0x411548
  4074bd:	nop
  4074be:	xchg   ax,ax
  4074c0:	push   rbx
  4074c1:	sub    rsp,0x20
  4074c5:	lea    rcx,[rip+0xfc0c]        # 0x4170d8
  4074cc:	mov    rbx,rdx
  4074cf:	call   0x4114e0
  4074d4:	test   rax,rax
  4074d7:	je     0x4074de
  4074d9:	cmp    BYTE PTR [rax],0x0
  4074dc:	jne    0x40750d
  4074de:	mov    rcx,rbx
  4074e1:	call   0x4114e0
  4074e6:	test   rax,rax
  4074e9:	je     0x4074f0
  4074eb:	cmp    BYTE PTR [rax],0x0
  4074ee:	jne    0x40750d
  4074f0:	lea    rcx,[rip+0xfbe8]        # 0x4170df
  4074f7:	call   0x4114e0
  4074fc:	test   rax,rax
  4074ff:	je     0x407513
  407501:	cmp    BYTE PTR [rax],0x0
  407504:	mov    edx,0x0
  407509:	cmove  rax,rdx
  40750d:	add    rsp,0x20
  407511:	pop    rbx
  407512:	ret    
  407513:	xor    eax,eax
  407515:	jmp    0x40750d
  407517:	nop    WORD PTR [rax+rax*1+0x0]
  407520:	jmp    0x4074c0
  407522:	nop    DWORD PTR [rax+0x0]
  407526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407530:	sub    rsp,0x28
  407534:	call   QWORD PTR [rip+0x16fbe]        # 0x41e4f8
  40753a:	movzx  ecx,ax
  40753d:	add    rsp,0x28
  407541:	jmp    0x405c30
  407546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407550:	push   rsi
  407551:	push   rbx
  407552:	sub    rsp,0x28
  407556:	mov    ebx,ecx
  407558:	mov    rsi,rdx
  40755b:	call   0x407390
  407560:	test   rax,rax
  407563:	je     0x407570
  407565:	add    rsp,0x28
  407569:	pop    rbx
  40756a:	pop    rsi
  40756b:	ret    
  40756c:	nop    DWORD PTR [rax+0x0]
  407570:	mov    rdx,rsi
  407573:	mov    ecx,ebx
  407575:	call   0x4074c0
  40757a:	test   rax,rax
  40757d:	jne    0x407565
  40757f:	add    rsp,0x28
  407583:	pop    rbx
  407584:	pop    rsi
  407585:	jmp    0x407530
  407587:	nop
  407588:	nop
  407589:	nop
  40758a:	nop
  40758b:	nop
  40758c:	nop
  40758d:	nop
  40758e:	nop
  40758f:	nop
  407590:	push   rdi
  407591:	push   rsi
  407592:	push   rbx
  407593:	sub    rsp,0x20
  407597:	mov    eax,DWORD PTR [rcx+0x8]
  40759a:	cmp    eax,DWORD PTR [rcx+0xc]
  40759d:	mov    rbx,rcx
  4075a0:	je     0x4075f0
  4075a2:	xor    r9d,r9d
  4075a5:	xor    r8d,r8d
  4075a8:	xor    ecx,ecx
  4075aa:	mov    edx,0x1
  4075af:	call   QWORD PTR [rip+0x16ec3]        # 0x41e478
  4075b5:	cmp    rax,0xffffffffffffffff
  4075b9:	je     0x407680
  4075bf:	mov    ecx,DWORD PTR [rbx+0x8]
  4075c2:	mov    r8d,DWORD PTR [rbx+0xc]
  4075c6:	mov    edx,ecx
  4075c8:	add    edx,DWORD PTR [rbx+0x10]
  4075cb:	mov    r9d,edx
  4075ce:	sub    r9d,r8d
  4075d1:	cmp    edx,r8d
  4075d4:	mov    r8,QWORD PTR [rbx]
  4075d7:	cmovae rdx,r9
  4075db:	add    ecx,0x1
  4075de:	mov    QWORD PTR [r8+rdx*8],rax
  4075e2:	mov    DWORD PTR [rbx+0x8],ecx
  4075e5:	add    rsp,0x20
  4075e9:	pop    rbx
  4075ea:	pop    rsi
  4075eb:	pop    rdi
  4075ec:	ret    
  4075ed:	nop    DWORD PTR [rax]
  4075f0:	lea    edx,[rax+rax*1+0x1]
  4075f4:	mov    rcx,QWORD PTR [rcx]
  4075f7:	mov    rsi,rdx
  4075fa:	shl    rdx,0x3
  4075fe:	call   0x411478
  407603:	test   rax,rax
  407606:	je     0x407680
  407608:	mov    r8d,DWORD PTR [rbx+0x10]
  40760c:	test   r8d,r8d
  40760f:	je     0x40766c
  407611:	mov    r9d,DWORD PTR [rbx+0x8]
  407615:	mov    edi,DWORD PTR [rbx+0xc]
  407618:	lea    r11d,[r9+r8*1]
  40761c:	cmp    edi,r11d
  40761f:	jae    0x407644
  407621:	sub    r11d,edi
  407624:	je     0x407644
  407626:	xor    edx,edx
  407628:	nop    DWORD PTR [rax+rax*1+0x0]
  407630:	mov    r10,QWORD PTR [rax+rdx*8]
  407634:	lea    ecx,[rdi+rdx*1]
  407637:	add    rdx,0x1
  40763b:	cmp    r11d,edx
  40763e:	mov    QWORD PTR [rax+rcx*8],r10
  407642:	ja     0x407630
  407644:	xor    edx,edx
  407646:	test   r9d,r9d
  407649:	je     0x407665
  40764b:	nop    DWORD PTR [rax+rax*1+0x0]
  407650:	lea    ecx,[r8+rdx*1]
  407654:	mov    rcx,QWORD PTR [rax+rcx*8]
  407658:	mov    QWORD PTR [rax+rdx*8],rcx
  40765c:	add    rdx,0x1
  407660:	cmp    r9d,edx
  407663:	ja     0x407650
  407665:	mov    DWORD PTR [rbx+0x10],0x0
  40766c:	mov    QWORD PTR [rbx],rax
  40766f:	mov    DWORD PTR [rbx+0xc],esi
  407672:	jmp    0x4075a2
  407677:	nop    WORD PTR [rax+rax*1+0x0]
  407680:	mov    rax,0xffffffffffffffff
  407687:	add    rsp,0x20
  40768b:	pop    rbx
  40768c:	pop    rsi
  40768d:	pop    rdi
  40768e:	ret    
  40768f:	nop
  407690:	push   rbx
  407691:	sub    rsp,0x20
  407695:	mov    rbx,rcx
  407698:	lea    rcx,[rcx+0x8]
  40769c:	call   QWORD PTR [rip+0x16e66]        # 0x41e508
  4076a2:	mov    DWORD PTR [rbx],0x1
  4076a8:	add    rsp,0x20
  4076ac:	pop    rbx
  4076ad:	ret    
  4076ae:	xchg   ax,ax
  4076b0:	push   rsi
  4076b1:	push   rbx
  4076b2:	sub    rsp,0x28
  4076b6:	mov    eax,DWORD PTR [rcx]
  4076b8:	mov    rbx,rcx
  4076bb:	test   eax,eax
  4076bd:	je     0x4076d5
  4076bf:	lea    rsi,[rbx+0x8]
  4076c3:	mov    rcx,rsi
  4076c6:	call   QWORD PTR [rip+0x16dbc]        # 0x41e488
  4076cc:	xor    eax,eax
  4076ce:	add    rsp,0x28
  4076d2:	pop    rbx
  4076d3:	pop    rsi
  4076d4:	ret    
  4076d5:	lock add DWORD PTR [rcx+0x4],0x1
  4076da:	je     0x407700
  4076dc:	mov    eax,DWORD PTR [rcx]
  4076de:	mov    rsi,QWORD PTR [rip+0x16e83]        # 0x41e568
  4076e5:	test   eax,eax
  4076e7:	jne    0x4076bf
  4076e9:	nop    DWORD PTR [rax+0x0]
  4076f0:	xor    ecx,ecx
  4076f2:	call   rsi
  4076f4:	mov    eax,DWORD PTR [rbx]
  4076f6:	test   eax,eax
  4076f8:	je     0x4076f0
  4076fa:	jmp    0x4076bf
  4076fc:	nop    DWORD PTR [rax+0x0]
  407700:	lea    rsi,[rcx+0x8]
  407704:	mov    rcx,rsi
  407707:	call   QWORD PTR [rip+0x16dfb]        # 0x41e508
  40770d:	mov    DWORD PTR [rbx],0x1
  407713:	jmp    0x4076c3
  407715:	nop
  407716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407720:	sub    rsp,0x28
  407724:	mov    edx,DWORD PTR [rcx]
  407726:	mov    eax,0x16
  40772b:	test   edx,edx
  40772d:	jne    0x407734
  40772f:	add    rsp,0x28
  407733:	ret    
  407734:	add    rcx,0x8
  407738:	call   QWORD PTR [rip+0x16dda]        # 0x41e518
  40773e:	xor    eax,eax
  407740:	add    rsp,0x28
  407744:	ret    
  407745:	nop
  407746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407750:	push   rbx
  407751:	sub    rsp,0x20
  407755:	mov    edx,DWORD PTR [rcx]
  407757:	mov    eax,0x16
  40775c:	test   edx,edx
  40775e:	jne    0x407770
  407760:	add    rsp,0x20
  407764:	pop    rbx
  407765:	ret    
  407766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407770:	mov    rbx,rcx
  407773:	lea    rcx,[rcx+0x8]
  407777:	call   QWORD PTR [rip+0x16d03]        # 0x41e480
  40777d:	xor    eax,eax
  40777f:	mov    DWORD PTR [rbx],0x0
  407785:	add    rsp,0x20
  407789:	pop    rbx
  40778a:	ret    
  40778b:	nop    DWORD PTR [rax+rax*1+0x0]
  407790:	push   rbx
  407791:	sub    rsp,0x20
  407795:	mov    rbx,rcx
  407798:	lea    rcx,[rcx+0x8]
  40779c:	call   QWORD PTR [rip+0x16d66]        # 0x41e508
  4077a2:	mov    QWORD PTR [rbx+0x30],0x0
  4077aa:	mov    DWORD PTR [rbx+0x38],0x0
  4077b1:	mov    DWORD PTR [rbx+0x3c],0x0
  4077b8:	mov    DWORD PTR [rbx+0x40],0x0
  4077bf:	mov    QWORD PTR [rbx+0x48],0x0
  4077c7:	mov    DWORD PTR [rbx+0x50],0x0
  4077ce:	mov    DWORD PTR [rbx+0x54],0x0
  4077d5:	mov    DWORD PTR [rbx+0x58],0x0
  4077dc:	mov    DWORD PTR [rbx+0x60],0x0
  4077e3:	mov    DWORD PTR [rbx],0x1
  4077e9:	add    rsp,0x20
  4077ed:	pop    rbx
  4077ee:	ret    
  4077ef:	nop
  4077f0:	push   r12
  4077f2:	push   rbp
  4077f3:	push   rdi
  4077f4:	push   rsi
  4077f5:	push   rbx
  4077f6:	sub    rsp,0x20
  4077fa:	mov    eax,DWORD PTR [rcx]
  4077fc:	mov    rbx,rcx
  4077ff:	test   eax,eax
  407801:	je     0x407840
  407803:	lea    rsi,[rbx+0x8]
  407807:	mov    rcx,rsi
  40780a:	mov    rbp,QWORD PTR [rip+0x16c77]        # 0x41e488
  407811:	call   rbp
  407813:	mov    eax,DWORD PTR [rbx+0x60]
  407816:	mov    r12,QWORD PTR [rip+0x16cfb]        # 0x41e518
  40781d:	test   eax,eax
  40781f:	js     0x407880
  407821:	add    eax,0x1
  407824:	mov    rcx,rsi
  407827:	mov    DWORD PTR [rbx+0x60],eax
  40782a:	call   r12
  40782d:	xor    eax,eax
  40782f:	add    rsp,0x20
  407833:	pop    rbx
  407834:	pop    rsi
  407835:	pop    rdi
  407836:	pop    rbp
  407837:	pop    r12
  407839:	ret    
  40783a:	nop    WORD PTR [rax+rax*1+0x0]
  407840:	lock add DWORD PTR [rcx+0x4],0x1
  407845:	je     0x407900
  40784b:	mov    eax,DWORD PTR [rcx]
  40784d:	mov    rdi,QWORD PTR [rip+0x16d14]        # 0x41e568
  407854:	test   eax,eax
  407856:	jne    0x407803
  407858:	nop    DWORD PTR [rax+rax*1+0x0]
  407860:	xor    ecx,ecx
  407862:	call   rdi
  407864:	mov    eax,DWORD PTR [rbx]
  407866:	test   eax,eax
  407868:	jne    0x407803
  40786a:	xor    ecx,ecx
  40786c:	call   rdi
  40786e:	mov    eax,DWORD PTR [rbx]
  407870:	test   eax,eax
  407872:	je     0x407860
  407874:	jmp    0x407803
  407876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407880:	lea    rcx,[rbx+0x30]
  407884:	call   0x407590
  407889:	cmp    rax,0xffffffffffffffff
  40788d:	mov    rdi,rax
  407890:	je     0x4078d0
  407892:	mov    rcx,rsi
  407895:	call   r12
  407898:	mov    edx,0xffffffff
  40789d:	mov    rcx,rdi
  4078a0:	call   QWORD PTR [rip+0x16cf2]        # 0x41e598
  4078a6:	cmp    eax,0x102
  4078ab:	je     0x4078c6
  4078ad:	cmp    eax,0xffffffff
  4078b0:	je     0x4078c6
  4078b2:	mov    rcx,rdi
  4078b5:	call   QWORD PTR [rip+0x16bb5]        # 0x41e470
  4078bb:	mov    eax,DWORD PTR [rbx+0x60]
  4078be:	test   eax,eax
  4078c0:	jg     0x40782d
  4078c6:	call   0x411548
  4078cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4078d0:	mov    rdi,QWORD PTR [rip+0x16c91]        # 0x41e568
  4078d7:	nop    WORD PTR [rax+rax*1+0x0]
  4078e0:	mov    rcx,rsi
  4078e3:	call   r12
  4078e6:	mov    ecx,0x1
  4078eb:	call   rdi
  4078ed:	mov    rcx,rsi
  4078f0:	call   rbp
  4078f2:	mov    eax,DWORD PTR [rbx+0x60]
  4078f5:	test   eax,eax
  4078f7:	js     0x4078e0
  4078f9:	jmp    0x407821
  4078fe:	xchg   ax,ax
  407900:	lea    rsi,[rcx+0x8]
  407904:	mov    rcx,rsi
  407907:	call   QWORD PTR [rip+0x16bfb]        # 0x41e508
  40790d:	mov    QWORD PTR [rbx+0x30],0x0
  407915:	mov    DWORD PTR [rbx+0x38],0x0
  40791c:	mov    DWORD PTR [rbx+0x3c],0x0
  407923:	mov    DWORD PTR [rbx+0x40],0x0
  40792a:	mov    QWORD PTR [rbx+0x48],0x0
  407932:	mov    DWORD PTR [rbx+0x50],0x0
  407939:	mov    DWORD PTR [rbx+0x54],0x0
  407940:	mov    DWORD PTR [rbx+0x58],0x0
  407947:	mov    DWORD PTR [rbx+0x60],0x0
  40794e:	mov    DWORD PTR [rbx],0x1
  407954:	jmp    0x407807
  407959:	nop    DWORD PTR [rax+0x0]
  407960:	push   r12
  407962:	push   rbp
  407963:	push   rdi
  407964:	push   rsi
  407965:	push   rbx
  407966:	sub    rsp,0x20
  40796a:	mov    eax,DWORD PTR [rcx]
  40796c:	mov    rbx,rcx
  40796f:	test   eax,eax
  407971:	je     0x407a23
  407977:	lea    rsi,[rbx+0x8]
  40797b:	mov    rcx,rsi
  40797e:	mov    rbp,QWORD PTR [rip+0x16b03]        # 0x41e488
  407985:	call   rbp
  407987:	mov    edx,DWORD PTR [rbx+0x60]
  40798a:	mov    r12,QWORD PTR [rip+0x16b87]        # 0x41e518
  407991:	test   edx,edx
  407993:	je     0x407a09
  407995:	lea    rcx,[rbx+0x48]
  407999:	call   0x407590
  40799e:	cmp    rax,0xffffffffffffffff
  4079a2:	mov    rdi,rax
  4079a5:	je     0x4079e0
  4079a7:	mov    rcx,rsi
  4079aa:	call   QWORD PTR [rip+0x16b68]        # 0x41e518
  4079b0:	mov    edx,0xffffffff
  4079b5:	mov    rcx,rdi
  4079b8:	call   QWORD PTR [rip+0x16bda]        # 0x41e598
  4079be:	cmp    eax,0x102
  4079c3:	je     0x4079d9
  4079c5:	cmp    eax,0xffffffff
  4079c8:	je     0x4079d9
  4079ca:	mov    rcx,rdi
  4079cd:	call   QWORD PTR [rip+0x16a9d]        # 0x41e470
  4079d3:	cmp    DWORD PTR [rbx+0x60],0xffffffff
  4079d7:	je     0x407a16
  4079d9:	call   0x411548
  4079de:	xchg   ax,ax
  4079e0:	mov    rdi,QWORD PTR [rip+0x16b81]        # 0x41e568
  4079e7:	mov    r12,QWORD PTR [rip+0x16b2a]        # 0x41e518
  4079ee:	xchg   ax,ax
  4079f0:	mov    rcx,rsi
  4079f3:	call   r12
  4079f6:	mov    ecx,0x1
  4079fb:	call   rdi
  4079fd:	mov    rcx,rsi
  407a00:	call   rbp
  407a02:	mov    eax,DWORD PTR [rbx+0x60]
  407a05:	test   eax,eax
  407a07:	jne    0x4079f0
  407a09:	mov    DWORD PTR [rbx+0x60],0xffffffff
  407a10:	mov    rcx,rsi
  407a13:	call   r12
  407a16:	xor    eax,eax
  407a18:	add    rsp,0x20
  407a1c:	pop    rbx
  407a1d:	pop    rsi
  407a1e:	pop    rdi
  407a1f:	pop    rbp
  407a20:	pop    r12
  407a22:	ret    
  407a23:	lock add DWORD PTR [rcx+0x4],0x1
  407a28:	je     0x407a60
  407a2a:	mov    eax,DWORD PTR [rcx]
  407a2c:	mov    rdi,QWORD PTR [rip+0x16b35]        # 0x41e568
  407a33:	test   eax,eax
  407a35:	jne    0x407977
  407a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a40:	xor    ecx,ecx
  407a42:	call   rdi
  407a44:	mov    eax,DWORD PTR [rbx]
  407a46:	test   eax,eax
  407a48:	jne    0x407977
  407a4e:	xor    ecx,ecx
  407a50:	call   rdi
  407a52:	mov    eax,DWORD PTR [rbx]
  407a54:	test   eax,eax
  407a56:	je     0x407a40
  407a58:	jmp    0x407977
  407a5d:	nop    DWORD PTR [rax]
  407a60:	lea    rsi,[rcx+0x8]
  407a64:	mov    rcx,rsi
  407a67:	call   QWORD PTR [rip+0x16a9b]        # 0x41e508
  407a6d:	mov    QWORD PTR [rbx+0x30],0x0
  407a75:	mov    DWORD PTR [rbx+0x38],0x0
  407a7c:	mov    DWORD PTR [rbx+0x3c],0x0
  407a83:	mov    DWORD PTR [rbx+0x40],0x0
  407a8a:	mov    QWORD PTR [rbx+0x48],0x0
  407a92:	mov    DWORD PTR [rbx+0x50],0x0
  407a99:	mov    DWORD PTR [rbx+0x54],0x0
  407aa0:	mov    DWORD PTR [rbx+0x58],0x0
  407aa7:	mov    DWORD PTR [rbx+0x60],0x0
  407aae:	mov    DWORD PTR [rbx],0x1
  407ab4:	jmp    0x40797b
  407ab9:	nop    DWORD PTR [rax+0x0]
  407ac0:	push   rbp
  407ac1:	push   rdi
  407ac2:	push   rsi
  407ac3:	push   rbx
  407ac4:	sub    rsp,0x28
  407ac8:	mov    edx,DWORD PTR [rcx]
  407aca:	mov    eax,0x16
  407acf:	test   edx,edx
  407ad1:	jne    0x407ae0
  407ad3:	add    rsp,0x28
  407ad7:	pop    rbx
  407ad8:	pop    rsi
  407ad9:	pop    rdi
  407ada:	pop    rbp
  407adb:	ret    
  407adc:	nop    DWORD PTR [rax+0x0]
  407ae0:	lea    rdi,[rcx+0x8]
  407ae4:	mov    rbx,rcx
  407ae7:	mov    rcx,rdi
  407aea:	call   QWORD PTR [rip+0x16998]        # 0x41e488
  407af0:	mov    eax,DWORD PTR [rbx+0x60]
  407af3:	test   eax,eax
  407af5:	js     0x407b20
  407af7:	je     0x407bc0
  407afd:	sub    eax,0x1
  407b00:	test   eax,eax
  407b02:	mov    DWORD PTR [rbx+0x60],eax
  407b05:	je     0x407b30
  407b07:	mov    rcx,rdi
  407b0a:	call   QWORD PTR [rip+0x16a08]        # 0x41e518
  407b10:	xor    eax,eax
  407b12:	add    rsp,0x28
  407b16:	pop    rbx
  407b17:	pop    rsi
  407b18:	pop    rdi
  407b19:	pop    rbp
  407b1a:	ret    
  407b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  407b20:	cmp    eax,0xffffffff
  407b23:	jne    0x407bd3
  407b29:	mov    DWORD PTR [rbx+0x60],0x0
  407b30:	mov    eax,DWORD PTR [rbx+0x50]
  407b33:	test   eax,eax
  407b35:	je     0x407b70
  407b37:	mov    edx,DWORD PTR [rbx+0x58]
  407b3a:	mov    rax,QWORD PTR [rbx+0x48]
  407b3e:	mov    DWORD PTR [rbx+0x60],0xffffffff
  407b45:	mov    rcx,QWORD PTR [rax+rdx*8]
  407b49:	call   QWORD PTR [rip+0x16a01]        # 0x41e550
  407b4f:	mov    eax,DWORD PTR [rbx+0x58]
  407b52:	sub    DWORD PTR [rbx+0x50],0x1
  407b56:	lea    edx,[rax+0x1]
  407b59:	mov    DWORD PTR [rbx+0x58],edx
  407b5c:	je     0x407b63
  407b5e:	cmp    edx,DWORD PTR [rbx+0x54]
  407b61:	jne    0x407b07
  407b63:	mov    DWORD PTR [rbx+0x58],0x0
  407b6a:	jmp    0x407b07
  407b6c:	nop    DWORD PTR [rax+0x0]
  407b70:	mov    eax,DWORD PTR [rbx+0x38]
  407b73:	xor    esi,esi
  407b75:	mov    rbp,QWORD PTR [rip+0x169d4]        # 0x41e550
  407b7c:	test   eax,eax
  407b7e:	mov    DWORD PTR [rbx+0x60],eax
  407b81:	je     0x407ba7
  407b83:	mov    eax,esi
  407b85:	add    eax,DWORD PTR [rbx+0x40]
  407b88:	mov    edx,DWORD PTR [rbx+0x3c]
  407b8b:	mov    ecx,eax
  407b8d:	sub    ecx,edx
  407b8f:	cmp    eax,edx
  407b91:	mov    rdx,QWORD PTR [rbx+0x30]
  407b95:	cmovae rax,rcx
  407b99:	add    esi,0x1
  407b9c:	mov    rcx,QWORD PTR [rdx+rax*8]
  407ba0:	call   rbp
  407ba2:	cmp    esi,DWORD PTR [rbx+0x38]
  407ba5:	jb     0x407b83
  407ba7:	mov    DWORD PTR [rbx+0x38],0x0
  407bae:	mov    DWORD PTR [rbx+0x40],0x0
  407bb5:	jmp    0x407b07
  407bba:	nop    WORD PTR [rax+rax*1+0x0]
  407bc0:	mov    rcx,rdi
  407bc3:	call   QWORD PTR [rip+0x1694f]        # 0x41e518
  407bc9:	mov    eax,0x1
  407bce:	jmp    0x407ad3
  407bd3:	call   0x411548
  407bd8:	nop
  407bd9:	nop    DWORD PTR [rax+0x0]
  407be0:	push   rbx
  407be1:	sub    rsp,0x30
  407be5:	mov    edx,DWORD PTR [rcx]
  407be7:	mov    eax,0x16
  407bec:	test   edx,edx
  407bee:	jne    0x407c00
  407bf0:	add    rsp,0x30
  407bf4:	pop    rbx
  407bf5:	ret    
  407bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c00:	mov    eax,DWORD PTR [rcx+0x60]
  407c03:	test   eax,eax
  407c05:	je     0x407c12
  407c07:	mov    eax,0x10
  407c0c:	add    rsp,0x30
  407c10:	pop    rbx
  407c11:	ret    
  407c12:	mov    rbx,rcx
  407c15:	mov    DWORD PTR [rsp+0x2c],eax
  407c19:	lea    rcx,[rcx+0x8]
  407c1d:	call   QWORD PTR [rip+0x1685d]        # 0x41e480
  407c23:	mov    rcx,QWORD PTR [rbx+0x30]
  407c27:	mov    eax,DWORD PTR [rsp+0x2c]
  407c2b:	test   rcx,rcx
  407c2e:	je     0x407c39
  407c30:	call   0x411500
  407c35:	mov    eax,DWORD PTR [rsp+0x2c]
  407c39:	mov    rcx,QWORD PTR [rbx+0x48]
  407c3d:	test   rcx,rcx
  407c40:	je     0x407c4f
  407c42:	mov    DWORD PTR [rsp+0x2c],eax
  407c46:	call   0x411500
  407c4b:	mov    eax,DWORD PTR [rsp+0x2c]
  407c4f:	mov    DWORD PTR [rbx],0x0
  407c55:	jmp    0x407bf0
  407c57:	nop    WORD PTR [rax+rax*1+0x0]
  407c60:	push   rbx
  407c61:	sub    rsp,0x20
  407c65:	mov    rbx,rcx
  407c68:	mov    DWORD PTR [rcx+0x8],0x0
  407c6f:	mov    DWORD PTR [rcx+0xc],0x0
  407c76:	lea    rcx,[rcx+0x10]
  407c7a:	call   QWORD PTR [rip+0x16888]        # 0x41e508
  407c80:	mov    DWORD PTR [rbx],0x1
  407c86:	add    rsp,0x20
  407c8a:	pop    rbx
  407c8b:	ret    
  407c8c:	nop    DWORD PTR [rax+0x0]
  407c90:	push   rsi
  407c91:	push   rbx
  407c92:	sub    rsp,0x28
  407c96:	mov    eax,DWORD PTR [rcx]
  407c98:	mov    rbx,rcx
  407c9b:	test   eax,eax
  407c9d:	je     0x407ce0
  407c9f:	call   QWORD PTR [rip+0x1680b]        # 0x41e4b0
  407ca5:	cmp    DWORD PTR [rbx+0x8],eax
  407ca8:	mov    esi,eax
  407caa:	je     0x407cb9
  407cac:	lea    rcx,[rbx+0x10]
  407cb0:	call   QWORD PTR [rip+0x167d2]        # 0x41e488
  407cb6:	mov    DWORD PTR [rbx+0x8],esi
  407cb9:	mov    edx,DWORD PTR [rbx+0xc]
  407cbc:	mov    eax,0xb
  407cc1:	add    edx,0x1
  407cc4:	jne    0x407cd0
  407cc6:	add    rsp,0x28
  407cca:	pop    rbx
  407ccb:	pop    rsi
  407ccc:	ret    
  407ccd:	nop    DWORD PTR [rax]
  407cd0:	xor    al,al
  407cd2:	mov    DWORD PTR [rbx+0xc],edx
  407cd5:	add    rsp,0x28
  407cd9:	pop    rbx
  407cda:	pop    rsi
  407cdb:	ret    
  407cdc:	nop    DWORD PTR [rax+0x0]
  407ce0:	mov    al,0x1
  407ce2:	lock xadd DWORD PTR [rcx+0x4],eax
  407ce7:	cmp    eax,0xffffffff
  407cea:	je     0x407d20
  407cec:	mov    eax,DWORD PTR [rcx]
  407cee:	mov    rsi,QWORD PTR [rip+0x16873]        # 0x41e568
  407cf5:	test   eax,eax
  407cf7:	jne    0x407c9f
  407cf9:	nop    DWORD PTR [rax+0x0]
  407d00:	xor    ecx,ecx
  407d02:	call   rsi
  407d04:	mov    eax,DWORD PTR [rbx]
  407d06:	test   eax,eax
  407d08:	jne    0x407c9f
  407d0a:	xor    ecx,ecx
  407d0c:	call   rsi
  407d0e:	mov    eax,DWORD PTR [rbx]
  407d10:	test   eax,eax
  407d12:	je     0x407d00
  407d14:	jmp    0x407c9f
  407d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d20:	mov    DWORD PTR [rcx+0x8],0x0
  407d27:	mov    DWORD PTR [rcx+0xc],0x0
  407d2e:	lea    rcx,[rcx+0x10]
  407d32:	call   QWORD PTR [rip+0x167d0]        # 0x41e508
  407d38:	mov    DWORD PTR [rbx],0x1
  407d3e:	jmp    0x407c9f
  407d43:	nop    DWORD PTR [rax]
  407d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d50:	push   rdi
  407d51:	push   rsi
  407d52:	push   rbx
  407d53:	sub    rsp,0x20
  407d57:	mov    edi,DWORD PTR [rcx+0x8]
  407d5a:	mov    esi,0x1
  407d5f:	mov    rbx,rcx
  407d62:	call   QWORD PTR [rip+0x16748]        # 0x41e4b0
  407d68:	cmp    edi,eax
  407d6a:	je     0x407d80
  407d6c:	mov    eax,esi
  407d6e:	add    rsp,0x20
  407d72:	pop    rbx
  407d73:	pop    rsi
  407d74:	pop    rdi
  407d75:	ret    
  407d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d80:	mov    eax,DWORD PTR [rbx+0xc]
  407d83:	mov    sil,0x16
  407d86:	test   eax,eax
  407d88:	je     0x407d6c
  407d8a:	sub    eax,0x1
  407d8d:	xor    sil,sil
  407d90:	test   eax,eax
  407d92:	mov    DWORD PTR [rbx+0xc],eax
  407d95:	jne    0x407d6c
  407d97:	mov    DWORD PTR [rbx+0x8],0x0
  407d9e:	lea    rcx,[rbx+0x10]
  407da2:	call   QWORD PTR [rip+0x16770]        # 0x41e518
  407da8:	jmp    0x407d6c
  407daa:	nop    WORD PTR [rax+rax*1+0x0]
  407db0:	push   rbx
  407db1:	sub    rsp,0x20
  407db5:	mov    edx,DWORD PTR [rcx+0x8]
  407db8:	mov    eax,0x10
  407dbd:	test   edx,edx
  407dbf:	je     0x407dd0
  407dc1:	add    rsp,0x20
  407dc5:	pop    rbx
  407dc6:	ret    
  407dc7:	nop    WORD PTR [rax+rax*1+0x0]
  407dd0:	mov    rbx,rcx
  407dd3:	lea    rcx,[rcx+0x10]
  407dd7:	call   QWORD PTR [rip+0x166a3]        # 0x41e480
  407ddd:	xor    eax,eax
  407ddf:	mov    DWORD PTR [rbx],0x0
  407de5:	add    rsp,0x20
  407de9:	pop    rbx
  407dea:	ret    
  407deb:	nop    DWORD PTR [rax+rax*1+0x0]
  407df0:	push   rdi
  407df1:	push   rsi
  407df2:	push   rbx
  407df3:	sub    rsp,0x20
  407df7:	mov    eax,DWORD PTR [rcx]
  407df9:	test   eax,eax
  407dfb:	jle    0x407e05
  407dfd:	add    rsp,0x20
  407e01:	pop    rbx
  407e02:	pop    rsi
  407e03:	pop    rdi
  407e04:	ret    
  407e05:	lea    rax,[rcx+0x4]
  407e09:	mov    rsi,rdx
  407e0c:	mov    rbx,rcx
  407e0f:	lock add DWORD PTR [rax],0x1
  407e13:	je     0x407e61
  407e15:	lock sub DWORD PTR [rax],0x1
  407e19:	mov    eax,DWORD PTR [rcx]
  407e1b:	mov    rsi,QWORD PTR [rip+0x16746]        # 0x41e568
  407e22:	test   eax,eax
  407e24:	jns    0x407e3a
  407e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e30:	xor    ecx,ecx
  407e32:	call   rsi
  407e34:	mov    eax,DWORD PTR [rbx]
  407e36:	test   eax,eax
  407e38:	js     0x407e30
  407e3a:	mov    eax,DWORD PTR [rbx]
  407e3c:	test   eax,eax
  407e3e:	jg     0x407dfd
  407e40:	lea    rsi,[rbx+0x8]
  407e44:	mov    rcx,rsi
  407e47:	call   QWORD PTR [rip+0x1663b]        # 0x41e488
  407e4d:	mov    rcx,rsi
  407e50:	call   QWORD PTR [rip+0x166c2]        # 0x41e518
  407e56:	mov    eax,DWORD PTR [rbx]
  407e58:	test   eax,eax
  407e5a:	jg     0x407dfd
  407e5c:	call   0x411548
  407e61:	lea    rdi,[rcx+0x8]
  407e65:	mov    rcx,rdi
  407e68:	call   QWORD PTR [rip+0x1669a]        # 0x41e508
  407e6e:	mov    rcx,rdi
  407e71:	call   QWORD PTR [rip+0x16611]        # 0x41e488
  407e77:	mov    DWORD PTR [rbx],0x0
  407e7d:	call   rsi
  407e7f:	mov    rax,QWORD PTR [rip+0x16692]        # 0x41e518
  407e86:	mov    rcx,rdi
  407e89:	mov    DWORD PTR [rbx],0x1
  407e8f:	add    rsp,0x20
  407e93:	pop    rbx
  407e94:	pop    rsi
  407e95:	pop    rdi
  407e96:	rex.W jmp rax
  407e99:	nop
  407e9a:	nop
  407e9b:	nop
  407e9c:	nop
  407e9d:	nop
  407e9e:	nop
  407e9f:	nop
  407ea0:	push   rbx
  407ea1:	sub    rsp,0x20
  407ea5:	movzx  ebx,cx
  407ea8:	mov    ecx,ebx
  407eaa:	call   0x40a7a0
  407eaf:	test   eax,eax
  407eb1:	js     0x407ec0
  407eb3:	add    rsp,0x20
  407eb7:	pop    rbx
  407eb8:	ret    
  407eb9:	nop    DWORD PTR [rax+0x0]
  407ec0:	mov    edx,0x20
  407ec5:	mov    ecx,ebx
  407ec7:	call   0x4114c8
  407ecc:	test   eax,eax
  407ece:	sete   al
  407ed1:	movzx  eax,al
  407ed4:	add    rsp,0x20
  407ed8:	pop    rbx
  407ed9:	ret    
  407eda:	nop    WORD PTR [rax+rax*1+0x0]
  407ee0:	push   rsi
  407ee1:	push   rbx
  407ee2:	sub    rsp,0x28
  407ee6:	mov    rbx,rdx
  407ee9:	mov    rdx,QWORD PTR [rdx]
  407eec:	mov    rsi,rcx
  407eef:	lea    rax,[rbx+0x14]
  407ef3:	cmp    rdx,rax
  407ef6:	je     0x407f20
  407ef8:	mov    QWORD PTR [rcx],rdx
  407efb:	mov    rax,QWORD PTR [rbx+0x8]
  407eff:	mov    QWORD PTR [rsi+0x8],rax
  407f03:	movzx  eax,BYTE PTR [rbx+0x10]
  407f07:	test   al,al
  407f09:	mov    BYTE PTR [rsi+0x10],al
  407f0c:	je     0x407f16
  407f0e:	movzx  eax,WORD PTR [rbx+0x12]
  407f12:	mov    WORD PTR [rsi+0x12],ax
  407f16:	add    rsp,0x28
  407f1a:	pop    rbx
  407f1b:	pop    rsi
  407f1c:	ret    
  407f1d:	nop    DWORD PTR [rax]
  407f20:	lea    r9,[rcx+0x14]
  407f24:	mov    r8,QWORD PTR [rbx+0x8]
  407f28:	mov    rcx,r9
  407f2b:	call   0x4114a8
  407f30:	mov    QWORD PTR [rsi],rax
  407f33:	jmp    0x407efb
  407f35:	nop
  407f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f40:	lea    rdx,[rip+0xf1b9]        # 0x417100
  407f47:	mov    eax,ecx
  407f49:	and    ecx,0x1f
  407f4c:	shr    al,0x5
  407f4f:	and    eax,0x7
  407f52:	mov    eax,DWORD PTR [rdx+rax*4]
  407f55:	shr    eax,cl
  407f57:	and    eax,0x1
  407f5a:	ret    
  407f5b:	nop
  407f5c:	nop
  407f5d:	nop
  407f5e:	nop
  407f5f:	nop
  407f60:	push   rbp
  407f61:	push   rsi
  407f62:	push   rbx
  407f63:	mov    rbp,rsp
  407f66:	sub    rsp,0x40
  407f6a:	movabs rax,0x1fffffffffffffff
  407f74:	cmp    r8,rax
  407f77:	mov    rsi,rcx
  407f7a:	jbe    0x407f85
  407f7c:	xor    eax,eax
  407f7e:	mov    rsp,rbp
  407f81:	pop    rbx
  407f82:	pop    rsi
  407f83:	pop    rbp
  407f84:	ret    
  407f85:	lea    rcx,[r8*8+0x0]
  407f8d:	cmp    rcx,0xfaf
  407f94:	jbe    0x408053
  407f9a:	mov    QWORD PTR [rbp-0x18],r9
  407f9e:	mov    QWORD PTR [rbp-0x10],r8
  407fa2:	mov    QWORD PTR [rbp-0x8],rdx
  407fa6:	call   0x40a810
  407fab:	mov    r9,QWORD PTR [rbp-0x18]
  407faf:	mov    r8,QWORD PTR [rbp-0x10]
  407fb3:	mov    rdx,QWORD PTR [rbp-0x8]
  407fb7:	test   rax,rax
  407fba:	je     0x407f7c
  407fbc:	xor    r10d,r10d
  407fbf:	cmp    r8,0x2
  407fc3:	mov    QWORD PTR [rax+0x8],0x1
  407fcb:	mov    ebx,0x2
  407fd0:	jbe    0x408006
  407fd2:	movzx  r11d,BYTE PTR [rdx+rbx*1-0x1]
  407fd8:	cmp    BYTE PTR [rdx+r10*1],r11b
  407fdc:	jne    0x407ff1
  407fde:	jmp    0x408080
  407fe3:	sub    r10,QWORD PTR [rax+r10*8]
  407fe7:	cmp    BYTE PTR [rdx+r10*1],r11b
  407feb:	je     0x408080
  407ff1:	test   r10,r10
  407ff4:	jne    0x407fe3
  407ff6:	mov    QWORD PTR [rax+rbx*8],rbx
  407ffa:	xor    r10d,r10d
  407ffd:	add    rbx,0x1
  408001:	cmp    rbx,r8
  408004:	jne    0x407fd2
  408006:	mov    QWORD PTR [r9],0x0
  40800d:	movzx  r11d,BYTE PTR [rsi]
  408011:	mov    rbx,rsi
  408014:	xor    r10d,r10d
  408017:	nop    WORD PTR [rax+rax*1+0x0]
  408020:	test   r11b,r11b
  408023:	je     0x40803f
  408025:	cmp    BYTE PTR [rdx+r10*1],r11b
  408029:	je     0x408093
  40802b:	test   r10,r10
  40802e:	je     0x408070
  408030:	mov    rcx,QWORD PTR [rax+r10*8]
  408034:	add    rsi,rcx
  408037:	sub    r10,rcx
  40803a:	test   r11b,r11b
  40803d:	jne    0x408025
  40803f:	mov    rcx,rax
  408042:	call   0x40a890
  408047:	mov    eax,0x1
  40804c:	mov    rsp,rbp
  40804f:	pop    rbx
  408050:	pop    rsi
  408051:	pop    rbp
  408052:	ret    
  408053:	lea    rax,[rcx+0x2e]
  408057:	and    rax,0xfffffffffffffff0
  40805b:	call   0x40c5e0
  408060:	sub    rsp,rax
  408063:	lea    rax,[rsp+0x30]
  408068:	jmp    0x407fb7
  40806d:	nop    DWORD PTR [rax]
  408070:	movzx  r11d,BYTE PTR [rbx+0x1]
  408075:	add    rsi,0x1
  408079:	add    rbx,0x1
  40807d:	jmp    0x408020
  40807f:	nop
  408080:	add    r10,0x1
  408084:	mov    rcx,rbx
  408087:	sub    rcx,r10
  40808a:	mov    QWORD PTR [rax+rbx*8],rcx
  40808e:	jmp    0x407ffd
  408093:	add    r10,0x1
  408097:	lea    rcx,[rbx+0x1]
  40809b:	cmp    r8,r10
  40809e:	je     0x4080ad
  4080a0:	movzx  r11d,BYTE PTR [rbx+0x1]
  4080a5:	mov    rbx,rcx
  4080a8:	jmp    0x408020
  4080ad:	mov    rcx,rax
  4080b0:	mov    QWORD PTR [r9],rsi
  4080b3:	call   0x40a890
  4080b8:	mov    eax,0x1
  4080bd:	jmp    0x40804c
  4080bf:	nop
  4080c0:	push   rbp
  4080c1:	push   r15
  4080c3:	push   r14
  4080c5:	push   r13
  4080c7:	push   r12
  4080c9:	push   rdi
  4080ca:	push   rsi
  4080cb:	push   rbx
  4080cc:	sub    rsp,0xd8
  4080d3:	lea    rbp,[rsp+0x80]
  4080db:	mov    rdi,rcx
  4080de:	mov    rcx,rdx
  4080e1:	mov    rbx,rdx
  4080e4:	mov    QWORD PTR [rbp+0xb0],r8
  4080eb:	call   0x40a910
  4080f0:	mov    rsi,rax
  4080f3:	mov    QWORD PTR [rbp-0x48],rax
  4080f7:	movabs rax,0x492492492492492
  408101:	cmp    rsi,rax
  408104:	jbe    0x408119
  408106:	xor    eax,eax
  408108:	lea    rsp,[rbp+0x58]
  40810c:	pop    rbx
  40810d:	pop    rsi
  40810e:	pop    rdi
  40810f:	pop    r12
  408111:	pop    r13
  408113:	pop    r14
  408115:	pop    r15
  408117:	pop    rbp
  408118:	ret    
  408119:	mov    rcx,QWORD PTR [rbp-0x48]
  40811d:	mov    rax,rcx
  408120:	shl    rcx,0x6
  408124:	shl    rax,0x3
  408128:	sub    rcx,rax
  40812b:	cmp    rcx,0xfaf
  408132:	jbe    0x4082b7
  408138:	call   0x40a810
  40813d:	mov    rsi,rax
  408140:	test   rsi,rsi
  408143:	je     0x408106
  408145:	mov    QWORD PTR [rbp+0x20],rbx
  408149:	mov    BYTE PTR [rbp+0x10],0x0
  40814d:	lea    rbx,[rsi+0x14]
  408151:	mov    DWORD PTR [rbp+0x14],0x0
  408158:	mov    BYTE PTR [rbp+0x18],0x0
  40815c:	mov    r13,QWORD PTR [rip+0x1029d]        # 0x418400
  408163:	mov    r12,QWORD PTR [rip+0x103d6]        # 0x418540
  40816a:	jmp    0x4081f7
  40816f:	nop
  408170:	mov    rcx,QWORD PTR [rbp+0x20]
  408174:	movzx  eax,BYTE PTR [rcx]
  408177:	mov    edx,eax
  408179:	and    eax,0x1f
  40817c:	shr    dl,0x5
  40817f:	and    edx,0x7
  408182:	mov    edx,DWORD PTR [r12+rdx*4]
  408186:	bt     edx,eax
  408189:	jae    0x4082d1
  40818f:	mov    QWORD PTR [rbp+0x28],0x1
  408197:	movsx  ax,BYTE PTR [rcx]
  40819b:	mov    BYTE PTR [rbp+0x30],0x1
  40819f:	mov    BYTE PTR [rbp+0x18],0x1
  4081a3:	mov    WORD PTR [rbp+0x32],ax
  4081a7:	cmp    WORD PTR [rbp+0x32],0x0
  4081ac:	je     0x408319
  4081b2:	lea    r14,[rbp+0x10]
  4081b6:	mov    eax,0x1
  4081bb:	mov    rdx,QWORD PTR [rbp+0x20]
  4081bf:	add    r14,0x24
  4081c3:	cmp    rdx,r14
  4081c6:	je     0x40829e
  4081cc:	mov    QWORD PTR [rbx-0x14],rdx
  4081d0:	mov    rdx,QWORD PTR [rbp+0x28]
  4081d4:	test   al,al
  4081d6:	mov    BYTE PTR [rbx-0x4],al
  4081d9:	mov    QWORD PTR [rbx-0xc],rdx
  4081dd:	je     0x4081e7
  4081df:	movzx  eax,WORD PTR [rbp+0x32]
  4081e3:	mov    WORD PTR [rbx-0x2],ax
  4081e7:	mov    rax,QWORD PTR [rbp+0x28]
  4081eb:	add    QWORD PTR [rbp+0x20],rax
  4081ef:	add    rbx,0x30
  4081f3:	mov    BYTE PTR [rbp+0x18],0x0
  4081f7:	cmp    BYTE PTR [rbp+0x10],0x0
  4081fb:	lea    r14,[rbp+0x10]
  4081ff:	je     0x408170
  408205:	mov    rax,QWORD PTR [r13+0x0]
  408209:	mov    r15,QWORD PTR [rbp+0x20]
  40820d:	movsxd rdx,DWORD PTR [rax]
  408210:	mov    rcx,r15
  408213:	call   0x402830
  408218:	lea    rcx,[r14+0x22]
  40821c:	lea    r9,[r14+0x4]
  408220:	mov    r8,rax
  408223:	mov    rdx,r15
  408226:	call   0x4045a0
  40822b:	cmp    rax,0xffffffffffffffff
  40822f:	mov    QWORD PTR [rbp+0x28],rax
  408233:	je     0x4082ef
  408239:	cmp    rax,0xfffffffffffffffe
  40823d:	je     0x408306
  408243:	test   rax,rax
  408246:	jne    0x408268
  408248:	mov    rax,QWORD PTR [rbp+0x20]
  40824c:	mov    QWORD PTR [rbp+0x28],0x1
  408254:	cmp    BYTE PTR [rax],0x0
  408257:	jne    0x408a58
  40825d:	cmp    WORD PTR [rbp+0x32],0x0
  408262:	jne    0x408a3a
  408268:	lea    rcx,[r14+0x4]
  40826c:	mov    BYTE PTR [rbp+0x30],0x1
  408270:	call   0x4046b0
  408275:	test   eax,eax
  408277:	je     0x40827d
  408279:	mov    BYTE PTR [rbp+0x10],0x0
  40827d:	movzx  eax,BYTE PTR [rbp+0x30]
  408281:	mov    BYTE PTR [rbp+0x18],0x1
  408285:	test   al,al
  408287:	jne    0x4081a7
  40828d:	mov    rdx,QWORD PTR [rbp+0x20]
  408291:	add    r14,0x24
  408295:	cmp    rdx,r14
  408298:	jne    0x4081cc
  40829e:	mov    r8,QWORD PTR [rbp+0x28]
  4082a2:	mov    rcx,rbx
  4082a5:	call   0x4114a8
  4082aa:	mov    QWORD PTR [rbx-0x14],rbx
  4082ae:	movzx  eax,BYTE PTR [rbp+0x30]
  4082b2:	jmp    0x4081d0
  4082b7:	lea    rax,[rcx+0x2e]
  4082bb:	and    rax,0xfffffffffffffff0
  4082bf:	call   0x40c5e0
  4082c4:	sub    rsp,rax
  4082c7:	lea    rsi,[rsp+0x30]
  4082cc:	jmp    0x408140
  4082d1:	lea    r14,[rbp+0x10]
  4082d5:	lea    rcx,[r14+0x4]
  4082d9:	call   0x4046b0
  4082de:	test   eax,eax
  4082e0:	je     0x4089e7
  4082e6:	mov    BYTE PTR [rbp+0x10],0x1
  4082ea:	jmp    0x408205
  4082ef:	mov    QWORD PTR [rbp+0x28],0x1
  4082f7:	mov    BYTE PTR [rbp+0x30],0x0
  4082fb:	mov    BYTE PTR [rbp+0x18],0x1
  4082ff:	xor    eax,eax
  408301:	jmp    0x4081bb
  408306:	mov    rcx,QWORD PTR [rbp+0x20]
  40830a:	call   0x411440
  40830f:	mov    BYTE PTR [rbp+0x30],0x0
  408313:	mov    QWORD PTR [rbp+0x28],rax
  408317:	jmp    0x4082fb
  408319:	mov    rax,QWORD PTR [rbp-0x48]
  40831d:	lea    r12,[rax+rax*2]
  408321:	shl    r12,0x4
  408325:	add    r12,rsi
  408328:	cmp    rax,0x2
  40832c:	mov    QWORD PTR [r12+0x8],0x1
  408335:	jbe    0x4083eb
  40833b:	lea    r14,[rsi+0x40]
  40833f:	mov    QWORD PTR [rbp+0xa0],rdi
  408346:	xor    r13d,r13d
  408349:	mov    rdi,r12
  40834c:	mov    ebx,0x2
  408351:	mov    r15,rax
  408354:	mov    r12,rsi
  408357:	nop    WORD PTR [rax+rax*1+0x0]
  408360:	movzx  esi,BYTE PTR [r14]
  408364:	jmp    0x408393
  408366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408370:	cmp    BYTE PTR [rax+0x10],0x0
  408374:	je     0x4083a4
  408376:	movzx  eax,WORD PTR [rax+0x12]
  40837a:	cmp    WORD PTR [r14+0x2],ax
  40837f:	sete   al
  408382:	test   al,al
  408384:	jne    0x4083c3
  408386:	test   r13,r13
  408389:	je     0x4087a0
  40838f:	sub    r13,QWORD PTR [rdi+r13*8]
  408393:	lea    rax,[r13+r13*2+0x0]
  408398:	shl    rax,0x4
  40839c:	add    rax,r12
  40839f:	test   sil,sil
  4083a2:	jne    0x408370
  4083a4:	mov    r8,QWORD PTR [r14-0x8]
  4083a8:	cmp    r8,QWORD PTR [rax+0x8]
  4083ac:	jne    0x408386
  4083ae:	mov    rcx,QWORD PTR [r14-0x10]
  4083b2:	mov    rdx,QWORD PTR [rax]
  4083b5:	call   0x4114b0
  4083ba:	test   eax,eax
  4083bc:	sete   al
  4083bf:	test   al,al
  4083c1:	je     0x408386
  4083c3:	add    r13,0x1
  4083c7:	mov    rax,rbx
  4083ca:	sub    rax,r13
  4083cd:	mov    QWORD PTR [rdi+rbx*8],rax
  4083d1:	add    rbx,0x1
  4083d5:	add    r14,0x30
  4083d9:	cmp    rbx,r15
  4083dc:	jne    0x408360
  4083de:	mov    rsi,r12
  4083e1:	mov    r12,rdi
  4083e4:	mov    rdi,QWORD PTR [rbp+0xa0]
  4083eb:	mov    rax,QWORD PTR [rbp+0xb0]
  4083f2:	lea    r13,[rbp-0x30]
  4083f6:	mov    QWORD PTR [rbp-0x20],rdi
  4083fa:	mov    QWORD PTR [rbp+0x20],rdi
  4083fe:	mov    BYTE PTR [rbp-0x30],0x0
  408402:	xor    ebx,ebx
  408404:	mov    DWORD PTR [rbp-0x2c],0x0
  40840b:	mov    BYTE PTR [rbp-0x28],0x0
  40840f:	xor    edi,edi
  408411:	mov    QWORD PTR [rax],0x0
  408418:	lea    rax,[rbp+0x10]
  40841c:	mov    BYTE PTR [rbp+0x10],0x0
  408420:	mov    DWORD PTR [rbp+0x14],0x0
  408427:	mov    BYTE PTR [rbp+0x18],0x0
  40842b:	mov    QWORD PTR [rbp-0x50],rax
  40842f:	lea    rax,[rbp+0x14]
  408433:	mov    QWORD PTR [rbp-0x38],rsi
  408437:	mov    QWORD PTR [rbp-0x58],r12
  40843b:	mov    QWORD PTR [rbp-0x60],rax
  40843f:	lea    rax,[r13+0x4]
  408443:	mov    QWORD PTR [rbp-0x40],rax
  408447:	nop    WORD PTR [rax+rax*1+0x0]
  408450:	test   bl,bl
  408452:	je     0x408605
  408458:	movzx  ebx,BYTE PTR [rbp+0x30]
  40845c:	test   bl,bl
  40845e:	jne    0x408659
  408464:	lea    rax,[rdi+rdi*2]
  408468:	shl    rax,0x4
  40846c:	add    rax,QWORD PTR [rbp-0x38]
  408470:	mov    r8,QWORD PTR [rax+0x8]
  408474:	xor    ebx,ebx
  408476:	cmp    r8,QWORD PTR [rbp+0x28]
  40847a:	je     0x4085d0
  408480:	test   rdi,rdi
  408483:	je     0x408754
  408489:	mov    rax,QWORD PTR [rbp-0x58]
  40848d:	movzx  r12d,BYTE PTR [rbp-0x28]
  408492:	mov    rbx,QWORD PTR [rax+rdi*8]
  408496:	sub    rdi,rbx
  408499:	test   rbx,rbx
  40849c:	je     0x408790
  4084a2:	test   r12b,r12b
  4084a5:	mov    r15,QWORD PTR [rip+0xff54]        # 0x418400
  4084ac:	mov    r14,QWORD PTR [rip+0x1008d]        # 0x418540
  4084b3:	je     0x4084d8
  4084b5:	movzx  r12d,BYTE PTR [rbp-0x10]
  4084ba:	test   r12b,r12b
  4084bd:	jne    0x40851c
  4084bf:	mov    rax,QWORD PTR [rbp-0x18]
  4084c3:	add    QWORD PTR [rbp-0x20],rax
  4084c7:	sub    rbx,0x1
  4084cb:	mov    BYTE PTR [rbp-0x28],0x0
  4084cf:	je     0x408790
  4084d5:	xor    r12d,r12d
  4084d8:	cmp    BYTE PTR [rbp-0x30],0x0
  4084dc:	jne    0x408545
  4084de:	mov    rcx,QWORD PTR [rbp-0x20]
  4084e2:	movzx  eax,BYTE PTR [rcx]
  4084e5:	mov    edx,eax
  4084e7:	and    eax,0x1f
  4084ea:	shr    dl,0x5
  4084ed:	and    edx,0x7
  4084f0:	mov    edx,DWORD PTR [r14+rdx*4]
  4084f4:	bt     edx,eax
  4084f7:	jae    0x408530
  4084f9:	mov    QWORD PTR [rbp-0x18],0x1
  408501:	movsx  ax,BYTE PTR [rcx]
  408505:	mov    r12d,0x1
  40850b:	mov    BYTE PTR [rbp-0x10],0x1
  40850f:	mov    WORD PTR [rbp-0xe],ax
  408513:	test   r12b,r12b
  408516:	mov    BYTE PTR [rbp-0x28],0x1
  40851a:	je     0x4084bf
  40851c:	cmp    WORD PTR [rbp-0xe],0x0
  408521:	jne    0x4084bf
  408523:	call   0x411548
  408528:	nop    DWORD PTR [rax+rax*1+0x0]
  408530:	mov    rcx,QWORD PTR [rbp-0x40]
  408534:	call   0x4046b0
  408539:	test   eax,eax
  40853b:	je     0x4087b0
  408541:	mov    BYTE PTR [rbp-0x30],0x1
  408545:	mov    rax,QWORD PTR [r15]
  408548:	mov    rsi,QWORD PTR [rbp-0x20]
  40854c:	movsxd rdx,DWORD PTR [rax]
  40854f:	mov    rcx,rsi
  408552:	call   0x402830
  408557:	lea    rcx,[r13+0x22]
  40855b:	lea    r9,[r13+0x4]
  40855f:	mov    r8,rax
  408562:	mov    rdx,rsi
  408565:	call   0x4045a0
  40856a:	cmp    rax,0xffffffffffffffff
  40856e:	mov    QWORD PTR [rbp-0x18],rax
  408572:	je     0x408680
  408578:	cmp    rax,0xfffffffffffffffe
  40857c:	je     0x408691
  408582:	test   rax,rax
  408585:	jne    0x4085a7
  408587:	mov    rax,QWORD PTR [rbp-0x20]
  40858b:	mov    QWORD PTR [rbp-0x18],0x1
  408593:	cmp    BYTE PTR [rax],0x0
  408596:	jne    0x408860
  40859c:	cmp    WORD PTR [rbp-0xe],0x0
  4085a1:	jne    0x408840
  4085a7:	lea    rcx,[r13+0x4]
  4085ab:	mov    BYTE PTR [rbp-0x10],0x1
  4085af:	call   0x4046b0
  4085b4:	test   eax,eax
  4085b6:	je     0x4085bc
  4085b8:	mov    BYTE PTR [rbp-0x30],0x0
  4085bc:	movzx  r12d,BYTE PTR [rbp-0x10]
  4085c1:	jmp    0x408513
  4085c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085d0:	mov    rdx,QWORD PTR [rbp+0x20]
  4085d4:	mov    rcx,QWORD PTR [rax]
  4085d7:	call   0x4114b0
  4085dc:	test   eax,eax
  4085de:	sete   bl
  4085e1:	test   bl,bl
  4085e3:	je     0x408480
  4085e9:	add    rdi,0x1
  4085ed:	mov    rax,QWORD PTR [rbp+0x28]
  4085f1:	add    QWORD PTR [rbp+0x20],rax
  4085f5:	cmp    rdi,QWORD PTR [rbp-0x48]
  4085f9:	mov    BYTE PTR [rbp+0x18],0x0
  4085fd:	je     0x408a05
  408603:	xor    ebx,ebx
  408605:	cmp    BYTE PTR [rbp+0x10],0x0
  408609:	jne    0x4086c5
  40860f:	mov    rcx,QWORD PTR [rbp+0x20]
  408613:	mov    rsi,QWORD PTR [rip+0xff26]        # 0x418540
  40861a:	movzx  eax,BYTE PTR [rcx]
  40861d:	mov    edx,eax
  40861f:	and    eax,0x1f
  408622:	shr    dl,0x5
  408625:	and    edx,0x7
  408628:	mov    edx,DWORD PTR [rsi+rdx*4]
  40862b:	bt     edx,eax
  40862e:	jae    0x4086b0
  408634:	mov    QWORD PTR [rbp+0x28],0x1
  40863c:	movsx  ax,BYTE PTR [rcx]
  408640:	mov    ebx,0x1
  408645:	mov    BYTE PTR [rbp+0x30],0x1
  408649:	mov    WORD PTR [rbp+0x32],ax
  40864d:	test   bl,bl
  40864f:	mov    BYTE PTR [rbp+0x18],0x1
  408653:	je     0x408464
  408659:	movzx  edx,WORD PTR [rbp+0x32]
  40865d:	test   dx,dx
  408660:	jne    0x408944
  408666:	mov    rsi,QWORD PTR [rbp-0x38]
  40866a:	mov    rcx,rsi
  40866d:	call   0x40a890
  408672:	mov    eax,0x1
  408677:	jmp    0x408108
  40867c:	nop    DWORD PTR [rax+0x0]
  408680:	mov    QWORD PTR [rbp-0x18],0x1
  408688:	mov    BYTE PTR [rbp-0x10],0x0
  40868c:	jmp    0x408513
  408691:	mov    rcx,QWORD PTR [rbp-0x20]
  408695:	call   0x411440
  40869a:	mov    BYTE PTR [rbp-0x10],0x0
  40869e:	mov    QWORD PTR [rbp-0x18],rax
  4086a2:	jmp    0x408513
  4086a7:	nop    WORD PTR [rax+rax*1+0x0]
  4086b0:	mov    rcx,QWORD PTR [rbp-0x60]
  4086b4:	call   0x4046b0
  4086b9:	test   eax,eax
  4086bb:	je     0x408966
  4086c1:	mov    BYTE PTR [rbp+0x10],0x1
  4086c5:	mov    rax,QWORD PTR [rip+0xfd34]        # 0x418400
  4086cc:	mov    r14,QWORD PTR [rbp+0x20]
  4086d0:	mov    rax,QWORD PTR [rax]
  4086d3:	mov    rcx,r14
  4086d6:	movsxd rdx,DWORD PTR [rax]
  4086d9:	call   0x402830
  4086de:	mov    r8,rax
  4086e1:	mov    rax,QWORD PTR [rbp-0x50]
  4086e5:	mov    rdx,r14
  4086e8:	lea    rcx,[rax+0x22]
  4086ec:	lea    r9,[rax+0x4]
  4086f0:	call   0x4045a0
  4086f5:	cmp    rax,0xffffffffffffffff
  4086f9:	mov    QWORD PTR [rbp+0x28],rax
  4086fd:	je     0x408880
  408703:	cmp    rax,0xfffffffffffffffe
  408707:	je     0x40892e
  40870d:	test   rax,rax
  408710:	jne    0x408732
  408712:	mov    rax,QWORD PTR [rbp+0x20]
  408716:	mov    QWORD PTR [rbp+0x28],0x1
  40871e:	cmp    BYTE PTR [rax],0x0
  408721:	jne    0x4089a2
  408727:	cmp    WORD PTR [rbp+0x32],0x0
  40872c:	jne    0x408984
  408732:	mov    rax,QWORD PTR [rbp-0x50]
  408736:	mov    BYTE PTR [rbp+0x30],0x1
  40873a:	lea    rcx,[rax+0x4]
  40873e:	call   0x4046b0
  408743:	test   eax,eax
  408745:	je     0x40874b
  408747:	mov    BYTE PTR [rbp+0x10],0x0
  40874b:	movzx  ebx,BYTE PTR [rbp+0x30]
  40874f:	jmp    0x40864d
  408754:	movzx  r14d,BYTE PTR [rbp-0x28]
  408759:	test   r14b,r14b
  40875c:	je     0x4087d0
  40875e:	movzx  r14d,BYTE PTR [rbp-0x10]
  408763:	test   r14b,r14b
  408766:	jne    0x408827
  40876c:	mov    rax,QWORD PTR [rbp-0x18]
  408770:	mov    BYTE PTR [rbp-0x28],0x0
  408774:	add    QWORD PTR [rbp-0x20],rax
  408778:	mov    BYTE PTR [rbp+0x18],0x0
  40877c:	mov    rax,QWORD PTR [rbp+0x28]
  408780:	add    QWORD PTR [rbp+0x20],rax
  408784:	jmp    0x408605
  408789:	nop    DWORD PTR [rax+0x0]
  408790:	movzx  ebx,BYTE PTR [rbp+0x18]
  408794:	jmp    0x408450
  408799:	nop    DWORD PTR [rax+0x0]
  4087a0:	mov    QWORD PTR [rdi+rbx*8],rbx
  4087a4:	jmp    0x4083d1
  4087a9:	nop    DWORD PTR [rax+0x0]
  4087b0:	lea    rdx,[rip+0xe969]        # 0x417120
  4087b7:	lea    rcx,[rip+0xe96c]        # 0x41712a
  4087be:	mov    r8d,0x96
  4087c4:	call   0x40cb10
  4087c9:	jmp    0x408541
  4087ce:	xchg   ax,ax
  4087d0:	cmp    BYTE PTR [rbp-0x30],0x0
  4087d4:	jne    0x4088a6
  4087da:	mov    rcx,QWORD PTR [rbp-0x20]
  4087de:	mov    r8,QWORD PTR [rip+0xfd5b]        # 0x418540
  4087e5:	movzx  eax,BYTE PTR [rcx]
  4087e8:	mov    edx,eax
  4087ea:	and    eax,0x1f
  4087ed:	shr    dl,0x5
  4087f0:	and    edx,0x7
  4087f3:	mov    edx,DWORD PTR [r8+rdx*4]
  4087f7:	bt     edx,eax
  4087fa:	jae    0x408891
  408800:	mov    QWORD PTR [rbp-0x18],0x1
  408808:	movsx  ax,BYTE PTR [rcx]
  40880c:	mov    r14d,0x1
  408812:	mov    BYTE PTR [rbp-0x10],0x1
  408816:	mov    WORD PTR [rbp-0xe],ax
  40881a:	test   r14b,r14b
  40881d:	mov    BYTE PTR [rbp-0x28],0x1
  408821:	je     0x40876c
  408827:	cmp    WORD PTR [rbp-0xe],0x0
  40882c:	jne    0x40876c
  408832:	jmp    0x408523
  408837:	nop    WORD PTR [rax+rax*1+0x0]
  408840:	lea    rdx,[rip+0xe8d9]        # 0x417120
  408847:	lea    rcx,[rip+0xe90a]        # 0x417158
  40884e:	mov    r8d,0xb3
  408854:	call   0x40cb10
  408859:	jmp    0x4085a7
  40885e:	xchg   ax,ax
  408860:	lea    rdx,[rip+0xe8b9]        # 0x417120
  408867:	lea    rcx,[rip+0xe8d3]        # 0x417141
  40886e:	mov    r8d,0xb2
  408874:	call   0x40cb10
  408879:	jmp    0x40859c
  40887e:	xchg   ax,ax
  408880:	mov    QWORD PTR [rbp+0x28],0x1
  408888:	mov    BYTE PTR [rbp+0x30],0x0
  40888c:	jmp    0x40864d
  408891:	mov    rcx,QWORD PTR [rbp-0x40]
  408895:	call   0x4046b0
  40889a:	test   eax,eax
  40889c:	je     0x408a1c
  4088a2:	mov    BYTE PTR [rbp-0x30],0x1
  4088a6:	mov    rax,QWORD PTR [rip+0xfb53]        # 0x418400
  4088ad:	mov    r15,QWORD PTR [rbp-0x20]
  4088b1:	mov    rax,QWORD PTR [rax]
  4088b4:	mov    rcx,r15
  4088b7:	movsxd rdx,DWORD PTR [rax]
  4088ba:	call   0x402830
  4088bf:	lea    rcx,[r13+0x22]
  4088c3:	lea    r9,[r13+0x4]
  4088c7:	mov    r8,rax
  4088ca:	mov    rdx,r15
  4088cd:	call   0x4045a0
  4088d2:	cmp    rax,0xffffffffffffffff
  4088d6:	mov    QWORD PTR [rbp-0x18],rax
  4088da:	je     0x4089c0
  4088e0:	cmp    rax,0xfffffffffffffffe
  4088e4:	je     0x4089d1
  4088ea:	test   rax,rax
  4088ed:	jne    0x40890f
  4088ef:	mov    rax,QWORD PTR [rbp-0x20]
  4088f3:	mov    QWORD PTR [rbp-0x18],0x1
  4088fb:	cmp    BYTE PTR [rax],0x0
  4088fe:	jne    0x408a76
  408904:	cmp    WORD PTR [rbp-0xe],0x0
  408909:	jne    0x408a9a
  40890f:	lea    rcx,[r13+0x4]
  408913:	mov    BYTE PTR [rbp-0x10],0x1
  408917:	call   0x4046b0
  40891c:	test   eax,eax
  40891e:	je     0x408924
  408920:	mov    BYTE PTR [rbp-0x30],0x0
  408924:	movzx  r14d,BYTE PTR [rbp-0x10]
  408929:	jmp    0x40881a
  40892e:	mov    rcx,QWORD PTR [rbp+0x20]
  408932:	call   0x411440
  408937:	mov    BYTE PTR [rbp+0x30],0x0
  40893b:	mov    QWORD PTR [rbp+0x28],rax
  40893f:	jmp    0x40864d
  408944:	lea    rax,[rdi+rdi*2]
  408948:	shl    rax,0x4
  40894c:	add    rax,QWORD PTR [rbp-0x38]
  408950:	cmp    BYTE PTR [rax+0x10],0x0
  408954:	je     0x408470
  40895a:	cmp    dx,WORD PTR [rax+0x12]
  40895e:	sete   bl
  408961:	jmp    0x4085e1
  408966:	lea    rdx,[rip+0xe7b3]        # 0x417120
  40896d:	lea    rcx,[rip+0xe7b6]        # 0x41712a
  408974:	mov    r8d,0x96
  40897a:	call   0x40cb10
  40897f:	jmp    0x4086c1
  408984:	lea    rdx,[rip+0xe795]        # 0x417120
  40898b:	lea    rcx,[rip+0xe7c6]        # 0x417158
  408992:	mov    r8d,0xb3
  408998:	call   0x40cb10
  40899d:	jmp    0x408732
  4089a2:	lea    rdx,[rip+0xe777]        # 0x417120
  4089a9:	lea    rcx,[rip+0xe791]        # 0x417141
  4089b0:	mov    r8d,0xb2
  4089b6:	call   0x40cb10
  4089bb:	jmp    0x408727
  4089c0:	mov    QWORD PTR [rbp-0x18],0x1
  4089c8:	mov    BYTE PTR [rbp-0x10],0x0
  4089cc:	jmp    0x40881a
  4089d1:	mov    rcx,QWORD PTR [rbp-0x20]
  4089d5:	call   0x411440
  4089da:	mov    BYTE PTR [rbp-0x10],0x0
  4089de:	mov    QWORD PTR [rbp-0x18],rax
  4089e2:	jmp    0x40881a
  4089e7:	lea    rdx,[rip+0xe732]        # 0x417120
  4089ee:	lea    rcx,[rip+0xe735]        # 0x41712a
  4089f5:	mov    r8d,0x96
  4089fb:	call   0x40cb10
  408a00:	jmp    0x4082e6
  408a05:	mov    rax,QWORD PTR [rbp-0x20]
  408a09:	mov    rdi,QWORD PTR [rbp+0xb0]
  408a10:	mov    rsi,QWORD PTR [rbp-0x38]
  408a14:	mov    QWORD PTR [rdi],rax
  408a17:	jmp    0x40866a
  408a1c:	lea    rdx,[rip+0xe6fd]        # 0x417120
  408a23:	lea    rcx,[rip+0xe700]        # 0x41712a
  408a2a:	mov    r8d,0x96
  408a30:	call   0x40cb10
  408a35:	jmp    0x4088a2
  408a3a:	lea    rdx,[rip+0xe6df]        # 0x417120
  408a41:	lea    rcx,[rip+0xe710]        # 0x417158
  408a48:	mov    r8d,0xb3
  408a4e:	call   0x40cb10
  408a53:	jmp    0x408268
  408a58:	lea    rdx,[rip+0xe6c1]        # 0x417120
  408a5f:	lea    rcx,[rip+0xe6db]        # 0x417141
  408a66:	mov    r8d,0xb2
  408a6c:	call   0x40cb10
  408a71:	jmp    0x40825d
  408a76:	lea    rdx,[rip+0xe6a3]        # 0x417120
  408a7d:	lea    rcx,[rip+0xe6bd]        # 0x417141
  408a84:	mov    r8d,0xb2
  408a8a:	call   0x40cb10
  408a8f:	cmp    WORD PTR [rbp-0xe],0x0
  408a94:	je     0x40890f
  408a9a:	lea    rdx,[rip+0xe67f]        # 0x417120
  408aa1:	lea    rcx,[rip+0xe6b0]        # 0x417158
  408aa8:	mov    r8d,0xb3
  408aae:	call   0x40cb10
  408ab3:	jmp    0x40890f
  408ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  408ac0:	push   r15
  408ac2:	push   r14
  408ac4:	push   r13
  408ac6:	push   r12
  408ac8:	push   rbp
  408ac9:	push   rdi
  408aca:	push   rsi
  408acb:	push   rbx
  408acc:	sub    rsp,0x1a8
  408ad3:	mov    rbp,QWORD PTR [rip+0xf926]        # 0x418400
  408ada:	mov    QWORD PTR [rsp+0x1f0],rcx
  408ae2:	mov    r14,rdx
  408ae5:	mov    rax,QWORD PTR [rbp+0x0]
  408ae9:	cmp    DWORD PTR [rax],0x1
  408aec:	jle    0x408de0
  408af2:	movsx  ax,BYTE PTR [rdx]
  408af6:	mov    QWORD PTR [rsp+0x70],rdx
  408afb:	mov    rsi,QWORD PTR [rip+0xfa3e]        # 0x418540
  408b02:	mov    BYTE PTR [rsp+0x60],0x0
  408b07:	mov    DWORD PTR [rsp+0x64],0x0
  408b0f:	mov    BYTE PTR [rsp+0x68],0x0
  408b14:	mov    edx,eax
  408b16:	mov    ecx,eax
  408b18:	shr    dl,0x5
  408b1b:	and    ecx,0x1f
  408b1e:	and    edx,0x7
  408b21:	mov    edx,DWORD PTR [rsi+rdx*4]
  408b24:	bt     edx,ecx
  408b27:	jae    0x408ec0
  408b2d:	mov    QWORD PTR [rsp+0x78],0x1
  408b36:	mov    WORD PTR [rsp+0x82],ax
  408b3e:	mov    BYTE PTR [rsp+0x80],0x1
  408b46:	mov    BYTE PTR [rsp+0x68],0x1
  408b4b:	cmp    WORD PTR [rsp+0x82],0x0
  408b54:	je     0x408f80
  408b5a:	mov    rax,QWORD PTR [rsp+0x1f0]
  408b62:	lea    r12,[rsp+0x160]
  408b6a:	lea    r13,[rsp+0x120]
  408b72:	mov    QWORD PTR [rsp+0xb0],r14
  408b7a:	mov    BYTE PTR [rsp+0xa0],0x0
  408b82:	xor    edi,edi
  408b84:	mov    DWORD PTR [rsp+0xa4],0x0
  408b8f:	mov    BYTE PTR [rsp+0xa8],0x0
  408b97:	mov    QWORD PTR [rsp+0xf0],rax
  408b9f:	lea    rax,[r12+0x4]
  408ba4:	mov    BYTE PTR [rsp+0xe0],0x0
  408bac:	mov    DWORD PTR [rsp+0xe4],0x0
  408bb7:	mov    BYTE PTR [rsp+0xe8],0x0
  408bbf:	mov    QWORD PTR [rsp+0x40],rax
  408bc4:	lea    rax,[rsp+0xa0]
  408bcc:	mov    QWORD PTR [rsp+0x28],0x0
  408bd5:	mov    QWORD PTR [rsp+0x20],0x0
  408bde:	mov    BYTE PTR [rsp+0x3f],0x1
  408be3:	mov    QWORD PTR [rsp+0x30],rax
  408be8:	lea    rax,[rsp+0xa4]
  408bf0:	mov    QWORD PTR [rsp+0x1f8],r14
  408bf8:	mov    QWORD PTR [rsp+0x50],rax
  408bfd:	lea    rax,[rsp+0xe0]
  408c05:	mov    QWORD PTR [rsp+0x48],rax
  408c0a:	cmp    BYTE PTR [rsp+0xe0],0x0
  408c12:	jne    0x408cae
  408c18:	mov    rcx,QWORD PTR [rsp+0xf0]
  408c20:	movzx  eax,BYTE PTR [rcx]
  408c23:	mov    edx,eax
  408c25:	and    eax,0x1f
  408c28:	shr    dl,0x5
  408c2b:	and    edx,0x7
  408c2e:	mov    edx,DWORD PTR [rsi+rdx*4]
  408c31:	bt     edx,eax
  408c34:	jae    0x408c90
  408c36:	mov    QWORD PTR [rsp+0xf8],0x1
  408c42:	movsx  ax,BYTE PTR [rcx]
  408c46:	mov    BYTE PTR [rsp+0x100],0x1
  408c4e:	mov    BYTE PTR [rsp+0xe8],0x1
  408c56:	mov    WORD PTR [rsp+0x102],ax
  408c5e:	cmp    WORD PTR [rsp+0x102],0x0
  408c67:	jne    0x40900a
  408c6d:	nop    DWORD PTR [rax]
  408c70:	xor    eax,eax
  408c72:	add    rsp,0x1a8
  408c79:	pop    rbx
  408c7a:	pop    rsi
  408c7b:	pop    rdi
  408c7c:	pop    rbp
  408c7d:	pop    r12
  408c7f:	pop    r13
  408c81:	pop    r14
  408c83:	pop    r15
  408c85:	ret    
  408c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c90:	mov    rax,QWORD PTR [rsp+0x48]
  408c95:	lea    rcx,[rax+0x4]
  408c99:	call   0x4046b0
  408c9e:	test   eax,eax
  408ca0:	je     0x409c7c
  408ca6:	mov    BYTE PTR [rsp+0xe0],0x1
  408cae:	mov    rax,QWORD PTR [rbp+0x0]
  408cb2:	mov    rbx,QWORD PTR [rsp+0xf0]
  408cba:	movsxd rdx,DWORD PTR [rax]
  408cbd:	mov    rcx,rbx
  408cc0:	call   0x402830
  408cc5:	mov    r8,rax
  408cc8:	mov    rax,QWORD PTR [rsp+0x48]
  408ccd:	mov    rdx,rbx
  408cd0:	lea    rcx,[rax+0x22]
  408cd4:	lea    r9,[rax+0x4]
  408cd8:	call   0x4045a0
  408cdd:	cmp    rax,0xffffffffffffffff
  408ce1:	mov    QWORD PTR [rsp+0xf8],rax
  408ce9:	je     0x409a90
  408cef:	cmp    rax,0xfffffffffffffffe
  408cf3:	je     0x408f8d
  408cf9:	test   rax,rax
  408cfc:	jne    0x408d2a
  408cfe:	mov    rax,QWORD PTR [rsp+0xf0]
  408d06:	mov    QWORD PTR [rsp+0xf8],0x1
  408d12:	cmp    BYTE PTR [rax],0x0
  408d15:	jne    0x409cda
  408d1b:	cmp    WORD PTR [rsp+0x102],0x0
  408d24:	jne    0x409cbc
  408d2a:	mov    rax,QWORD PTR [rsp+0x48]
  408d2f:	mov    BYTE PTR [rsp+0x100],0x1
  408d37:	lea    rcx,[rax+0x4]
  408d3b:	call   0x4046b0
  408d40:	test   eax,eax
  408d42:	je     0x408d4c
  408d44:	mov    BYTE PTR [rsp+0xe0],0x0
  408d4c:	movzx  eax,BYTE PTR [rsp+0x100]
  408d54:	mov    BYTE PTR [rsp+0xe8],0x1
  408d5c:	test   al,al
  408d5e:	jne    0x408c5e
  408d64:	cmp    QWORD PTR [rsp+0x28],0x9
  408d6a:	jbe    0x408fbe
  408d70:	cmp    BYTE PTR [rsp+0x3f],0x0
  408d75:	je     0x408fbe
  408d7b:	mov    rax,QWORD PTR [rsp+0x28]
  408d80:	lea    rax,[rax+rax*4]
  408d84:	cmp    QWORD PTR [rsp+0x20],rax
  408d89:	jae    0x409050
  408d8f:	mov    rbx,QWORD PTR [rsp+0x20]
  408d94:	mov    BYTE PTR [rsp+0x3f],0x1
  408d99:	mov    QWORD PTR [rsp+0x20],rdi
  408d9e:	add    rbx,0x1
  408da2:	mov    r8,QWORD PTR [rsp+0xf8]
  408daa:	cmp    r8,QWORD PTR [rsp+0x78]
  408daf:	je     0x4097c2
  408db5:	mov    rdi,QWORD PTR [rsp+0x20]
  408dba:	add    QWORD PTR [rsp+0xf0],r8
  408dc2:	mov    BYTE PTR [rsp+0xe8],0x0
  408dca:	add    QWORD PTR [rsp+0x28],0x1
  408dd0:	mov    QWORD PTR [rsp+0x20],rbx
  408dd5:	jmp    0x408c0a
  408dda:	nop    WORD PTR [rax+rax*1+0x0]
  408de0:	movzx  r12d,BYTE PTR [rdx]
  408de4:	mov    rax,QWORD PTR [rsp+0x1f0]
  408dec:	test   r12b,r12b
  408def:	je     0x408c72
  408df5:	cmp    BYTE PTR [rax],0x0
  408df8:	je     0x408c70
  408dfe:	mov    rax,QWORD PTR [rsp+0x1f0]
  408e06:	lea    rsi,[rsp+0x160]
  408e0e:	mov    rbp,rdx
  408e11:	xor    r13d,r13d
  408e14:	xor    r15d,r15d
  408e17:	xor    edi,edi
  408e19:	mov    QWORD PTR [rsp+0x20],rsi
  408e1e:	lea    rbx,[rax+0x1]
  408e22:	mov    eax,0x1
  408e27:	cmp    rdi,0x9
  408e2b:	lea    rsi,[rbx-0x1]
  408e2f:	jbe    0x408e90
  408e31:	test   al,al
  408e33:	je     0x408e90
  408e35:	lea    rax,[rdi+rdi*4]
  408e39:	cmp    r15,rax
  408e3c:	jb     0x409752
  408e42:	test   rbp,rbp
  408e45:	je     0x408e65
  408e47:	mov    rdx,r15
  408e4a:	mov    rcx,rbp
  408e4d:	sub    rdx,r13
  408e50:	mov    r13,r15
  408e53:	call   0x40c990
  408e58:	add    rbp,rax
  408e5b:	cmp    BYTE PTR [rbp+0x0],0x0
  408e5f:	jne    0x409752
  408e65:	mov    rcx,r14
  408e68:	call   0x411440
  408e6d:	mov    r9,QWORD PTR [rsp+0x20]
  408e72:	mov    r8,rax
  408e75:	mov    rdx,r14
  408e78:	mov    rcx,rsi
  408e7b:	call   0x407f60
  408e80:	test   al,al
  408e82:	jne    0x409d8b
  408e88:	xor    ebp,ebp
  408e8a:	xor    eax,eax
  408e8c:	nop    DWORD PTR [rax+0x0]
  408e90:	add    rdi,0x1
  408e94:	cmp    r12b,BYTE PTR [rbx-0x1]
  408e98:	lea    r8,[r15+0x1]
  408e9c:	je     0x409769
  408ea2:	cmp    BYTE PTR [rbx],0x0
  408ea5:	je     0x408c70
  408eab:	add    rbx,0x1
  408eaf:	mov    r15,r8
  408eb2:	jmp    0x408e27
  408eb7:	nop    WORD PTR [rax+rax*1+0x0]
  408ec0:	lea    rbx,[rsp+0x60]
  408ec5:	lea    rcx,[rbx+0x4]
  408ec9:	call   0x4046b0
  408ece:	test   eax,eax
  408ed0:	je     0x408fd1
  408ed6:	mov    rax,QWORD PTR [rbp+0x0]
  408eda:	mov    rdi,QWORD PTR [rsp+0x70]
  408edf:	mov    BYTE PTR [rsp+0x60],0x1
  408ee4:	movsxd rdx,DWORD PTR [rax]
  408ee7:	mov    rcx,rdi
  408eea:	call   0x402830
  408eef:	lea    rcx,[rbx+0x22]
  408ef3:	lea    r9,[rbx+0x4]
  408ef7:	mov    r8,rax
  408efa:	mov    rdx,rdi
  408efd:	call   0x4045a0
  408f02:	cmp    rax,0xffffffffffffffff
  408f06:	mov    QWORD PTR [rsp+0x78],rax
  408f0b:	je     0x408fef
  408f11:	cmp    rax,0xfffffffffffffffe
  408f15:	je     0x409c60
  408f1b:	test   rax,rax
  408f1e:	jne    0x408f46
  408f20:	mov    rax,QWORD PTR [rsp+0x70]
  408f25:	mov    QWORD PTR [rsp+0x78],0x1
  408f2e:	cmp    BYTE PTR [rax],0x0
  408f31:	jne    0x409c04
  408f37:	cmp    WORD PTR [rsp+0x82],0x0
  408f40:	jne    0x409be6
  408f46:	lea    rcx,[rbx+0x4]
  408f4a:	mov    BYTE PTR [rsp+0x80],0x1
  408f52:	call   0x4046b0
  408f57:	test   eax,eax
  408f59:	je     0x408f60
  408f5b:	mov    BYTE PTR [rsp+0x60],0x0
  408f60:	movzx  eax,BYTE PTR [rsp+0x80]
  408f68:	mov    BYTE PTR [rsp+0x68],0x1
  408f6d:	test   al,al
  408f6f:	je     0x408b5a
  408f75:	jmp    0x408b4b
  408f7a:	nop    WORD PTR [rax+rax*1+0x0]
  408f80:	mov    rax,QWORD PTR [rsp+0x1f0]
  408f88:	jmp    0x408c72
  408f8d:	mov    rcx,QWORD PTR [rsp+0xf0]
  408f95:	call   0x411440
  408f9a:	mov    BYTE PTR [rsp+0x100],0x0
  408fa2:	mov    QWORD PTR [rsp+0xf8],rax
  408faa:	cmp    QWORD PTR [rsp+0x28],0x9
  408fb0:	mov    BYTE PTR [rsp+0xe8],0x1
  408fb8:	ja     0x408d70
  408fbe:	mov    rbx,QWORD PTR [rsp+0x20]
  408fc3:	mov    QWORD PTR [rsp+0x20],rdi
  408fc8:	add    rbx,0x1
  408fcc:	jmp    0x408da2
  408fd1:	lea    rdx,[rip+0xe148]        # 0x417120
  408fd8:	lea    rcx,[rip+0xe14b]        # 0x41712a
  408fdf:	mov    r8d,0x96
  408fe5:	call   0x40cb10
  408fea:	jmp    0x408ed6
  408fef:	mov    QWORD PTR [rsp+0x78],0x1
  408ff8:	mov    BYTE PTR [rsp+0x80],0x0
  409000:	mov    BYTE PTR [rsp+0x68],0x1
  409005:	jmp    0x408b5a
  40900a:	cmp    QWORD PTR [rsp+0x28],0x9
  409010:	jbe    0x409c46
  409016:	cmp    BYTE PTR [rsp+0x3f],0x0
  40901b:	je     0x409c46
  409021:	mov    rax,QWORD PTR [rsp+0x28]
  409026:	lea    rax,[rax+rax*4]
  40902a:	cmp    QWORD PTR [rsp+0x20],rax
  40902f:	jae    0x409050
  409031:	mov    rbx,QWORD PTR [rsp+0x20]
  409036:	mov    BYTE PTR [rsp+0x3f],0x1
  40903b:	mov    QWORD PTR [rsp+0x20],rdi
  409040:	add    rbx,0x1
  409044:	jmp    0x409169
  409049:	nop    DWORD PTR [rax+0x0]
  409050:	mov    r14,QWORD PTR [rsp+0x20]
  409055:	sub    r14,rdi
  409058:	je     0x409952
  40905e:	movzx  edi,BYTE PTR [rsp+0xa8]
  409066:	test   dil,dil
  409069:	je     0x4090a8
  40906b:	movzx  edi,BYTE PTR [rsp+0xc0]
  409073:	test   dil,dil
  409076:	jne    0x40910e
  40907c:	mov    rbx,QWORD PTR [rsp+0xb8]
  409084:	add    rbx,QWORD PTR [rsp+0xb0]
  40908c:	xor    edi,edi
  40908e:	sub    r14,0x1
  409092:	mov    BYTE PTR [rsp+0xa8],0x0
  40909a:	mov    QWORD PTR [rsp+0xb0],rbx
  4090a2:	je     0x409991
  4090a8:	cmp    BYTE PTR [rsp+0xa0],0x0
  4090b0:	jne    0x40961a
  4090b6:	mov    rcx,QWORD PTR [rsp+0xb0]
  4090be:	movzx  eax,BYTE PTR [rcx]
  4090c1:	mov    edx,eax
  4090c3:	and    eax,0x1f
  4090c6:	shr    dl,0x5
  4090c9:	and    edx,0x7
  4090cc:	mov    edx,DWORD PTR [rsi+rdx*4]
  4090cf:	bt     edx,eax
  4090d2:	jae    0x409600
  4090d8:	mov    QWORD PTR [rsp+0xb8],0x1
  4090e4:	movsx  ax,BYTE PTR [rcx]
  4090e8:	mov    edi,0x1
  4090ed:	mov    BYTE PTR [rsp+0xc0],0x1
  4090f5:	mov    WORD PTR [rsp+0xc2],ax
  4090fd:	test   dil,dil
  409100:	mov    BYTE PTR [rsp+0xa8],0x1
  409108:	je     0x40907c
  40910e:	cmp    WORD PTR [rsp+0xc2],0x0
  409117:	jne    0x40907c
  40911d:	cmp    BYTE PTR [rsp+0xa8],0x0
  409125:	je     0x409989
  40912b:	mov    rdx,QWORD PTR [rsp+0x1f8]
  409133:	mov    rcx,QWORD PTR [rsp+0x1f0]
  40913b:	mov    r8,r12
  40913e:	call   0x4080c0
  409143:	test   al,al
  409145:	jne    0x409d8b
  40914b:	movzx  eax,BYTE PTR [rsp+0x100]
  409153:	mov    BYTE PTR [rsp+0x3f],0x0
  409158:	mov    rdi,QWORD PTR [rsp+0x20]
  40915d:	test   al,al
  40915f:	lea    rbx,[rdi+0x1]
  409163:	je     0x408da2
  409169:	cmp    BYTE PTR [rsp+0x80],0x0
  409171:	je     0x408da2
  409177:	movzx  eax,WORD PTR [rsp+0x82]
  40917f:	cmp    WORD PTR [rsp+0x102],ax
  409187:	sete   dil
  40918b:	test   dil,dil
  40918e:	je     0x409510
  409194:	mov    rax,QWORD PTR [rsp+0xe0]
  40919c:	mov    rdx,QWORD PTR [rsp+0x100]
  4091a4:	mov    BYTE PTR [rsp+0x160],0x0
  4091ac:	mov    DWORD PTR [rsp+0x164],0x0
  4091b7:	mov    BYTE PTR [rsp+0x168],0x0
  4091bf:	mov    QWORD PTR [rsp+0x120],rax
  4091c7:	mov    rax,QWORD PTR [rsp+0xe8]
  4091cf:	mov    QWORD PTR [rsp+0x140],rdx
  4091d7:	mov    rdx,QWORD PTR [rsp+0x108]
  4091df:	mov    QWORD PTR [rsp+0x128],rax
  4091e7:	mov    rax,QWORD PTR [rsp+0xf0]
  4091ef:	mov    QWORD PTR [rsp+0x148],rdx
  4091f7:	mov    rdx,QWORD PTR [rsp+0x110]
  4091ff:	mov    BYTE PTR [rsp+0x128],0x0
  409207:	mov    QWORD PTR [rsp+0x130],rax
  40920f:	mov    rax,QWORD PTR [rsp+0xf8]
  409217:	add    QWORD PTR [rsp+0x130],rax
  40921f:	mov    QWORD PTR [rsp+0x150],rdx
  409227:	mov    rdx,QWORD PTR [rsp+0x118]
  40922f:	mov    QWORD PTR [rsp+0x138],rax
  409237:	mov    rax,QWORD PTR [rsp+0x1f8]
  40923f:	mov    QWORD PTR [rsp+0x158],rdx
  409247:	mov    QWORD PTR [rsp+0x170],rax
  40924f:	movsx  ax,BYTE PTR [rax]
  409253:	mov    edx,eax
  409255:	mov    ecx,eax
  409257:	shr    dl,0x5
  40925a:	and    ecx,0x1f
  40925d:	and    edx,0x7
  409260:	mov    edx,DWORD PTR [rsi+rdx*4]
  409263:	bt     edx,ecx
  409266:	jae    0x409840
  40926c:	mov    QWORD PTR [rsp+0x178],0x1
  409278:	mov    WORD PTR [rsp+0x182],ax
  409280:	mov    BYTE PTR [rsp+0x180],0x1
  409288:	mov    BYTE PTR [rsp+0x168],0x1
  409290:	cmp    WORD PTR [rsp+0x182],0x0
  409299:	je     0x409be1
  40929f:	nop
  4092a0:	mov    rax,QWORD PTR [rsp+0x178]
  4092a8:	add    QWORD PTR [rsp+0x170],rax
  4092b0:	add    rbx,0x1
  4092b4:	mov    BYTE PTR [rsp+0x168],0x0
  4092bc:	nop    DWORD PTR [rax+0x0]
  4092c0:	cmp    BYTE PTR [rsp+0x160],0x0
  4092c8:	jne    0x40934a
  4092ce:	mov    rcx,QWORD PTR [rsp+0x170]
  4092d6:	movzx  eax,BYTE PTR [rcx]
  4092d9:	mov    edx,eax
  4092db:	and    eax,0x1f
  4092de:	shr    dl,0x5
  4092e1:	and    edx,0x7
  4092e4:	mov    edx,DWORD PTR [rsi+rdx*4]
  4092e7:	bt     edx,eax
  4092ea:	jae    0x409330
  4092ec:	mov    QWORD PTR [rsp+0x178],0x1
  4092f8:	movsx  ax,BYTE PTR [rcx]
  4092fc:	mov    BYTE PTR [rsp+0x180],0x1
  409304:	mov    BYTE PTR [rsp+0x168],0x1
  40930c:	mov    WORD PTR [rsp+0x182],ax
  409314:	cmp    WORD PTR [rsp+0x182],0x0
  40931d:	jne    0x4093f9
  409323:	mov    rax,QWORD PTR [rsp+0xf0]
  40932b:	jmp    0x408c72
  409330:	mov    rcx,QWORD PTR [rsp+0x40]
  409335:	call   0x4046b0
  40933a:	test   eax,eax
  40933c:	je     0x409800
  409342:	mov    BYTE PTR [rsp+0x160],0x1
  40934a:	mov    rax,QWORD PTR [rbp+0x0]
  40934e:	mov    r14,QWORD PTR [rsp+0x170]
  409356:	movsxd rdx,DWORD PTR [rax]
  409359:	mov    rcx,r14
  40935c:	call   0x402830
  409361:	lea    rcx,[r12+0x22]
  409366:	lea    r9,[r12+0x4]
  40936b:	mov    r8,rax
  40936e:	mov    rdx,r14
  409371:	call   0x4045a0
  409376:	cmp    rax,0xffffffffffffffff
  40937a:	mov    QWORD PTR [rsp+0x178],rax
  409382:	je     0x4096c5
  409388:	cmp    rax,0xfffffffffffffffe
  40938c:	je     0x409710
  409392:	test   rax,rax
  409395:	jne    0x4093c3
  409397:	mov    rax,QWORD PTR [rsp+0x170]
  40939f:	mov    QWORD PTR [rsp+0x178],0x1
  4093ab:	cmp    BYTE PTR [rax],0x0
  4093ae:	jne    0x409a10
  4093b4:	cmp    WORD PTR [rsp+0x182],0x0
  4093bd:	jne    0x4099f0
  4093c3:	lea    rcx,[r12+0x4]
  4093c8:	mov    BYTE PTR [rsp+0x180],0x1
  4093d0:	call   0x4046b0
  4093d5:	test   eax,eax
  4093d7:	je     0x4093e1
  4093d9:	mov    BYTE PTR [rsp+0x160],0x0
  4093e1:	movzx  eax,BYTE PTR [rsp+0x180]
  4093e9:	mov    BYTE PTR [rsp+0x168],0x1
  4093f1:	test   al,al
  4093f3:	jne    0x409314
  4093f9:	movzx  r14d,BYTE PTR [rsp+0x128]
  409402:	test   r14b,r14b
  409405:	je     0x409475
  409407:	movzx  r14d,BYTE PTR [rsp+0x140]
  409410:	test   r14b,r14b
  409413:	jne    0x4094d5
  409419:	mov    r8,QWORD PTR [rsp+0x138]
  409421:	cmp    r8,QWORD PTR [rsp+0x178]
  409429:	mov    eax,edi
  40942b:	je     0x4095e0
  409431:	test   al,al
  409433:	lea    rdx,[rbx+0x1]
  409437:	jne    0x409510
  40943d:	mov    rax,QWORD PTR [rsp+0x138]
  409445:	mov    BYTE PTR [rsp+0x128],0x0
  40944d:	mov    rbx,rdx
  409450:	add    QWORD PTR [rsp+0x130],rax
  409458:	mov    BYTE PTR [rsp+0x168],0x0
  409460:	mov    rax,QWORD PTR [rsp+0x178]
  409468:	add    QWORD PTR [rsp+0x170],rax
  409470:	jmp    0x4092c0
  409475:	cmp    BYTE PTR [rsp+0x120],0x0
  40947d:	jne    0x409539
  409483:	mov    rcx,QWORD PTR [rsp+0x130]
  40948b:	movzx  eax,BYTE PTR [rcx]
  40948e:	mov    edx,eax
  409490:	and    eax,0x1f
  409493:	shr    dl,0x5
  409496:	and    edx,0x7
  409499:	mov    edx,DWORD PTR [rsi+rdx*4]
  40949c:	bt     edx,eax
  40949f:	jae    0x409520
  4094a1:	mov    QWORD PTR [rsp+0x138],0x1
  4094ad:	movsx  ax,BYTE PTR [rcx]
  4094b1:	mov    r14d,edi
  4094b4:	mov    BYTE PTR [rsp+0x140],0x1
  4094bc:	mov    WORD PTR [rsp+0x142],ax
  4094c4:	test   r14b,r14b
  4094c7:	mov    BYTE PTR [rsp+0x128],0x1
  4094cf:	je     0x409419
  4094d5:	movzx  eax,WORD PTR [rsp+0x142]
  4094dd:	test   ax,ax
  4094e0:	je     0x408c70
  4094e6:	cmp    BYTE PTR [rsp+0x180],0x0
  4094ee:	je     0x409419
  4094f4:	cmp    ax,WORD PTR [rsp+0x182]
  4094fc:	lea    rdx,[rbx+0x1]
  409500:	setne  al
  409503:	test   al,al
  409505:	je     0x40943d
  40950b:	nop    DWORD PTR [rax+rax*1+0x0]
  409510:	mov    r8,QWORD PTR [rsp+0xf8]
  409518:	jmp    0x408db5
  40951d:	nop    DWORD PTR [rax]
  409520:	lea    rcx,[r13+0x4]
  409524:	call   0x4046b0
  409529:	test   eax,eax
  40952b:	je     0x409820
  409531:	mov    BYTE PTR [rsp+0x120],0x1
  409539:	mov    rax,QWORD PTR [rbp+0x0]
  40953d:	mov    r15,QWORD PTR [rsp+0x130]
  409545:	movsxd rdx,DWORD PTR [rax]
  409548:	mov    rcx,r15
  40954b:	call   0x402830
  409550:	lea    rcx,[r13+0x22]
  409554:	lea    r9,[r13+0x4]
  409558:	mov    r8,rax
  40955b:	mov    rdx,r15
  40955e:	call   0x4045a0
  409563:	cmp    rax,0xffffffffffffffff
  409567:	mov    QWORD PTR [rsp+0x138],rax
  40956f:	je     0x4096f0
  409575:	cmp    rax,0xfffffffffffffffe
  409579:	je     0x409730
  40957f:	test   rax,rax
  409582:	jne    0x4095b0
  409584:	mov    rax,QWORD PTR [rsp+0x130]
  40958c:	mov    QWORD PTR [rsp+0x138],0x1
  409598:	cmp    BYTE PTR [rax],0x0
  40959b:	jne    0x409a50
  4095a1:	cmp    WORD PTR [rsp+0x142],0x0
  4095aa:	jne    0x409a30
  4095b0:	lea    rcx,[r13+0x4]
  4095b4:	mov    BYTE PTR [rsp+0x140],0x1
  4095bc:	call   0x4046b0
  4095c1:	test   eax,eax
  4095c3:	je     0x4095cd
  4095c5:	mov    BYTE PTR [rsp+0x120],0x0
  4095cd:	movzx  r14d,BYTE PTR [rsp+0x140]
  4095d6:	jmp    0x4094c4
  4095db:	nop    DWORD PTR [rax+rax*1+0x0]
  4095e0:	mov    rdx,QWORD PTR [rsp+0x170]
  4095e8:	mov    rcx,QWORD PTR [rsp+0x130]
  4095f0:	call   0x4114b0
  4095f5:	test   eax,eax
  4095f7:	setne  al
  4095fa:	jmp    0x409431
  4095ff:	nop
  409600:	mov    rcx,QWORD PTR [rsp+0x50]
  409605:	call   0x4046b0
  40960a:	test   eax,eax
  40960c:	je     0x409a70
  409612:	mov    BYTE PTR [rsp+0xa0],0x1
  40961a:	mov    rax,QWORD PTR [rbp+0x0]
  40961e:	mov    rbx,QWORD PTR [rsp+0xb0]
  409626:	movsxd rdx,DWORD PTR [rax]
  409629:	mov    rcx,rbx
  40962c:	call   0x402830
  409631:	mov    r8,rax
  409634:	mov    rax,QWORD PTR [rsp+0x30]
  409639:	mov    rdx,rbx
  40963c:	lea    rcx,[rax+0x22]
  409640:	lea    r9,[rax+0x4]
  409644:	call   0x4045a0
  409649:	cmp    rax,0xffffffffffffffff
  40964d:	mov    QWORD PTR [rsp+0xb8],rax
  409655:	je     0x4097e0
  40965b:	cmp    rax,0xfffffffffffffffe
  40965f:	je     0x409930
  409665:	test   rax,rax
  409668:	jne    0x409696
  40966a:	mov    rax,QWORD PTR [rsp+0xb0]
  409672:	mov    QWORD PTR [rsp+0xb8],0x1
  40967e:	cmp    BYTE PTR [rax],0x0
  409681:	jne    0x409b8c
  409687:	cmp    WORD PTR [rsp+0xc2],0x0
  409690:	jne    0x409b6e
  409696:	mov    rax,QWORD PTR [rsp+0x30]
  40969b:	mov    BYTE PTR [rsp+0xc0],0x1
  4096a3:	lea    rcx,[rax+0x4]
  4096a7:	call   0x4046b0
  4096ac:	test   eax,eax
  4096ae:	je     0x4096b8
  4096b0:	mov    BYTE PTR [rsp+0xa0],0x0
  4096b8:	movzx  edi,BYTE PTR [rsp+0xc0]
  4096c0:	jmp    0x4090fd
  4096c5:	mov    QWORD PTR [rsp+0x178],0x1
  4096d1:	mov    BYTE PTR [rsp+0x180],0x0
  4096d9:	mov    BYTE PTR [rsp+0x168],0x1
  4096e1:	jmp    0x4093f9
  4096e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4096f0:	mov    QWORD PTR [rsp+0x138],0x1
  4096fc:	mov    BYTE PTR [rsp+0x140],0x0
  409704:	jmp    0x4094c4
  409709:	nop    DWORD PTR [rax+0x0]
  409710:	mov    rcx,QWORD PTR [rsp+0x170]
  409718:	call   0x411440
  40971d:	mov    BYTE PTR [rsp+0x180],0x0
  409725:	mov    QWORD PTR [rsp+0x178],rax
  40972d:	jmp    0x4096d9
  40972f:	nop
  409730:	mov    rcx,QWORD PTR [rsp+0x130]
  409738:	call   0x411440
  40973d:	mov    BYTE PTR [rsp+0x140],0x0
  409745:	mov    QWORD PTR [rsp+0x138],rax
  40974d:	jmp    0x4094c4
  409752:	add    rdi,0x1
  409756:	cmp    r12b,BYTE PTR [rbx-0x1]
  40975a:	mov    eax,0x1
  40975f:	lea    r8,[r15+0x1]
  409763:	jne    0x408ea2
  409769:	movzx  edx,BYTE PTR [r14+0x1]
  40976e:	test   dl,dl
  409770:	je     0x4097ba
  409772:	movzx  ecx,BYTE PTR [rbx]
  409775:	test   cl,cl
  409777:	je     0x408c70
  40977d:	cmp    dl,cl
  40977f:	lea    r8,[r15+0x2]
  409783:	jne    0x408eab
  409789:	neg    r15
  40978c:	lea    rdx,[r14+r15*1]
  409790:	add    r15,rsi
  409793:	jmp    0x4097b0
  409795:	movzx  r10d,BYTE PTR [r15+r8*1]
  40979a:	test   r10b,r10b
  40979d:	je     0x408c70
  4097a3:	add    r8,0x1
  4097a7:	cmp    r9b,r10b
  4097aa:	jne    0x408eab
  4097b0:	movzx  r9d,BYTE PTR [rdx+r8*1]
  4097b5:	test   r9b,r9b
  4097b8:	jne    0x409795
  4097ba:	mov    rax,rsi
  4097bd:	jmp    0x408c72
  4097c2:	mov    rdx,QWORD PTR [rsp+0x70]
  4097c7:	mov    rcx,QWORD PTR [rsp+0xf0]
  4097cf:	call   0x4114b0
  4097d4:	test   eax,eax
  4097d6:	sete   dil
  4097da:	jmp    0x40918b
  4097df:	nop
  4097e0:	mov    QWORD PTR [rsp+0xb8],0x1
  4097ec:	mov    BYTE PTR [rsp+0xc0],0x0
  4097f4:	jmp    0x4090fd
  4097f9:	nop    DWORD PTR [rax+0x0]
  409800:	lea    rdx,[rip+0xd919]        # 0x417120
  409807:	lea    rcx,[rip+0xd91c]        # 0x41712a
  40980e:	mov    r8d,0x96
  409814:	call   0x40cb10
  409819:	jmp    0x409342
  40981e:	xchg   ax,ax
  409820:	lea    rdx,[rip+0xd8f9]        # 0x417120
  409827:	lea    rcx,[rip+0xd8fc]        # 0x41712a
  40982e:	mov    r8d,0x96
  409834:	call   0x40cb10
  409839:	jmp    0x409531
  40983e:	xchg   ax,ax
  409840:	mov    rcx,QWORD PTR [rsp+0x40]
  409845:	call   0x4046b0
  40984a:	test   eax,eax
  40984c:	je     0x409baa
  409852:	mov    rax,QWORD PTR [rbp+0x0]
  409856:	mov    r10,QWORD PTR [rsp+0x170]
  40985e:	mov    BYTE PTR [rsp+0x160],0x1
  409866:	movsxd rdx,DWORD PTR [rax]
  409869:	mov    rcx,r10
  40986c:	mov    QWORD PTR [rsp+0x58],r10
  409871:	call   0x402830
  409876:	mov    r10,QWORD PTR [rsp+0x58]
  40987b:	mov    r9,QWORD PTR [rsp+0x40]
  409880:	lea    rcx,[r12+0x22]
  409885:	mov    r8,rax
  409888:	mov    rdx,r10
  40988b:	call   0x4045a0
  409890:	cmp    rax,0xffffffffffffffff
  409894:	mov    QWORD PTR [rsp+0x178],rax
  40989c:	je     0x409bc8
  4098a2:	cmp    rax,0xfffffffffffffffe
  4098a6:	je     0x409c9a
  4098ac:	test   rax,rax
  4098af:	jne    0x4098f2
  4098b1:	mov    rax,QWORD PTR [rsp+0x170]
  4098b9:	mov    QWORD PTR [rsp+0x178],0x1
  4098c5:	cmp    BYTE PTR [rax],0x0
  4098c8:	jne    0x409d13
  4098ce:	cmp    WORD PTR [rsp+0x182],0x0
  4098d7:	je     0x4098f2
  4098d9:	lea    rdx,[rip+0xd840]        # 0x417120
  4098e0:	lea    rcx,[rip+0xd871]        # 0x417158
  4098e7:	mov    r8d,0xb3
  4098ed:	call   0x40cb10
  4098f2:	mov    rcx,QWORD PTR [rsp+0x40]
  4098f7:	mov    BYTE PTR [rsp+0x180],0x1
  4098ff:	call   0x4046b0
  409904:	test   eax,eax
  409906:	je     0x409910
  409908:	mov    BYTE PTR [rsp+0x160],0x0
  409910:	movzx  eax,BYTE PTR [rsp+0x180]
  409918:	mov    BYTE PTR [rsp+0x168],0x1
  409920:	test   al,al
  409922:	je     0x4092a0
  409928:	jmp    0x409290
  40992d:	nop    DWORD PTR [rax]
  409930:	mov    rcx,QWORD PTR [rsp+0xb0]
  409938:	call   0x411440
  40993d:	mov    BYTE PTR [rsp+0xc0],0x0
  409945:	mov    QWORD PTR [rsp+0xb8],rax
  40994d:	jmp    0x4090fd
  409952:	cmp    BYTE PTR [rsp+0xa8],0x0
  40995a:	je     0x409989
  40995c:	movzx  eax,BYTE PTR [rsp+0xc0]
  409964:	test   al,al
  409966:	je     0x409977
  409968:	cmp    WORD PTR [rsp+0xc2],0x0
  409971:	je     0x40912b
  409977:	movzx  eax,BYTE PTR [rsp+0x100]
  40997f:	mov    BYTE PTR [rsp+0x3f],0x1
  409984:	jmp    0x409158
  409989:	mov    rbx,QWORD PTR [rsp+0xb0]
  409991:	cmp    BYTE PTR [rsp+0xa0],0x0
  409999:	jne    0x409acb
  40999f:	movzx  eax,BYTE PTR [rbx]
  4099a2:	mov    edx,eax
  4099a4:	and    eax,0x1f
  4099a7:	shr    dl,0x5
  4099aa:	and    edx,0x7
  4099ad:	mov    edx,DWORD PTR [rsi+rdx*4]
  4099b0:	bt     edx,eax
  4099b3:	jae    0x409aa9
  4099b9:	mov    QWORD PTR [rsp+0xb8],0x1
  4099c5:	movsx  ax,BYTE PTR [rbx]
  4099c9:	mov    BYTE PTR [rsp+0xc0],0x1
  4099d1:	mov    WORD PTR [rsp+0xc2],ax
  4099d9:	mov    eax,0x1
  4099de:	mov    BYTE PTR [rsp+0xa8],0x1
  4099e6:	jmp    0x409964
  4099eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4099f0:	lea    rdx,[rip+0xd729]        # 0x417120
  4099f7:	lea    rcx,[rip+0xd75a]        # 0x417158
  4099fe:	mov    r8d,0xb3
  409a04:	call   0x40cb10
  409a09:	jmp    0x4093c3
  409a0e:	xchg   ax,ax
  409a10:	lea    rdx,[rip+0xd709]        # 0x417120
  409a17:	lea    rcx,[rip+0xd723]        # 0x417141
  409a1e:	mov    r8d,0xb2
  409a24:	call   0x40cb10
  409a29:	jmp    0x4093b4
  409a2e:	xchg   ax,ax
  409a30:	lea    rdx,[rip+0xd6e9]        # 0x417120
  409a37:	lea    rcx,[rip+0xd71a]        # 0x417158
  409a3e:	mov    r8d,0xb3
  409a44:	call   0x40cb10
  409a49:	jmp    0x4095b0
  409a4e:	xchg   ax,ax
  409a50:	lea    rdx,[rip+0xd6c9]        # 0x417120
  409a57:	lea    rcx,[rip+0xd6e3]        # 0x417141
  409a5e:	mov    r8d,0xb2
  409a64:	call   0x40cb10
  409a69:	jmp    0x4095a1
  409a6e:	xchg   ax,ax
  409a70:	lea    rdx,[rip+0xd6a9]        # 0x417120
  409a77:	lea    rcx,[rip+0xd6ac]        # 0x41712a
  409a7e:	mov    r8d,0x96
  409a84:	call   0x40cb10
  409a89:	jmp    0x409612
  409a8e:	xchg   ax,ax
  409a90:	mov    QWORD PTR [rsp+0xf8],0x1
  409a9c:	mov    BYTE PTR [rsp+0x100],0x0
  409aa4:	jmp    0x408faa
  409aa9:	mov    rcx,QWORD PTR [rsp+0x50]
  409aae:	call   0x4046b0
  409ab3:	test   eax,eax
  409ab5:	je     0x409d31
  409abb:	mov    rbx,QWORD PTR [rsp+0xb0]
  409ac3:	mov    BYTE PTR [rsp+0xa0],0x1
  409acb:	mov    rax,QWORD PTR [rbp+0x0]
  409acf:	mov    rcx,rbx
  409ad2:	movsxd rdx,DWORD PTR [rax]
  409ad5:	call   0x402830
  409ada:	mov    r8,rax
  409add:	mov    rax,QWORD PTR [rsp+0x30]
  409ae2:	mov    rdx,rbx
  409ae5:	lea    rcx,[rax+0x22]
  409ae9:	lea    r9,[rax+0x4]
  409aed:	call   0x4045a0
  409af2:	cmp    rax,0xffffffffffffffff
  409af6:	mov    QWORD PTR [rsp+0xb8],rax
  409afe:	je     0x409cf8
  409b04:	cmp    rax,0xfffffffffffffffe
  409b08:	je     0x409c22
  409b0e:	test   rax,rax
  409b11:	jne    0x409b3f
  409b13:	mov    rax,QWORD PTR [rsp+0xb0]
  409b1b:	mov    QWORD PTR [rsp+0xb8],0x1
  409b27:	cmp    BYTE PTR [rax],0x0
  409b2a:	jne    0x409d6d
  409b30:	cmp    WORD PTR [rsp+0xc2],0x0
  409b39:	jne    0x409d4f
  409b3f:	mov    rax,QWORD PTR [rsp+0x30]
  409b44:	mov    BYTE PTR [rsp+0xc0],0x1
  409b4c:	lea    rcx,[rax+0x4]
  409b50:	call   0x4046b0
  409b55:	test   eax,eax
  409b57:	je     0x409b61
  409b59:	mov    BYTE PTR [rsp+0xa0],0x0
  409b61:	movzx  eax,BYTE PTR [rsp+0xc0]
  409b69:	jmp    0x4099de
  409b6e:	lea    rdx,[rip+0xd5ab]        # 0x417120
  409b75:	lea    rcx,[rip+0xd5dc]        # 0x417158
  409b7c:	mov    r8d,0xb3
  409b82:	call   0x40cb10
  409b87:	jmp    0x409696
  409b8c:	lea    rdx,[rip+0xd58d]        # 0x417120
  409b93:	lea    rcx,[rip+0xd5a7]        # 0x417141
  409b9a:	mov    r8d,0xb2
  409ba0:	call   0x40cb10
  409ba5:	jmp    0x409687
  409baa:	lea    rdx,[rip+0xd56f]        # 0x417120
  409bb1:	lea    rcx,[rip+0xd572]        # 0x41712a
  409bb8:	mov    r8d,0x96
  409bbe:	call   0x40cb10
  409bc3:	jmp    0x409852
  409bc8:	mov    QWORD PTR [rsp+0x178],0x1
  409bd4:	mov    BYTE PTR [rsp+0x180],0x0
  409bdc:	jmp    0x4092a0
  409be1:	call   0x411548
  409be6:	lea    rdx,[rip+0xd533]        # 0x417120
  409bed:	lea    rcx,[rip+0xd564]        # 0x417158
  409bf4:	mov    r8d,0xb3
  409bfa:	call   0x40cb10
  409bff:	jmp    0x408f46
  409c04:	lea    rdx,[rip+0xd515]        # 0x417120
  409c0b:	lea    rcx,[rip+0xd52f]        # 0x417141
  409c12:	mov    r8d,0xb2
  409c18:	call   0x40cb10
  409c1d:	jmp    0x408f37
  409c22:	mov    rcx,QWORD PTR [rsp+0xb0]
  409c2a:	call   0x411440
  409c2f:	mov    BYTE PTR [rsp+0xc0],0x0
  409c37:	mov    QWORD PTR [rsp+0xb8],rax
  409c3f:	xor    eax,eax
  409c41:	jmp    0x4099de
  409c46:	mov    rbx,QWORD PTR [rsp+0x20]
  409c4b:	mov    QWORD PTR [rsp+0x20],rdi
  409c50:	add    rbx,0x1
  409c54:	jmp    0x409169
  409c59:	nop    DWORD PTR [rax+0x0]
  409c60:	mov    rcx,QWORD PTR [rsp+0x70]
  409c65:	call   0x411440
  409c6a:	mov    BYTE PTR [rsp+0x80],0x0
  409c72:	mov    QWORD PTR [rsp+0x78],rax
  409c77:	jmp    0x409000
  409c7c:	lea    rdx,[rip+0xd49d]        # 0x417120
  409c83:	lea    rcx,[rip+0xd4a0]        # 0x41712a
  409c8a:	mov    r8d,0x96
  409c90:	call   0x40cb10
  409c95:	jmp    0x408ca6
  409c9a:	mov    rcx,QWORD PTR [rsp+0x170]
  409ca2:	call   0x411440
  409ca7:	mov    BYTE PTR [rsp+0x180],0x0
  409caf:	mov    QWORD PTR [rsp+0x178],rax
  409cb7:	jmp    0x4092a0
  409cbc:	lea    rdx,[rip+0xd45d]        # 0x417120
  409cc3:	lea    rcx,[rip+0xd48e]        # 0x417158
  409cca:	mov    r8d,0xb3
  409cd0:	call   0x40cb10
  409cd5:	jmp    0x408d2a
  409cda:	lea    rdx,[rip+0xd43f]        # 0x417120
  409ce1:	lea    rcx,[rip+0xd459]        # 0x417141
  409ce8:	mov    r8d,0xb2
  409cee:	call   0x40cb10
  409cf3:	jmp    0x408d1b
  409cf8:	mov    QWORD PTR [rsp+0xb8],0x1
  409d04:	mov    BYTE PTR [rsp+0xc0],0x0
  409d0c:	xor    eax,eax
  409d0e:	jmp    0x4099de
  409d13:	lea    rdx,[rip+0xd406]        # 0x417120
  409d1a:	lea    rcx,[rip+0xd420]        # 0x417141
  409d21:	mov    r8d,0xb2
  409d27:	call   0x40cb10
  409d2c:	jmp    0x4098ce
  409d31:	lea    rdx,[rip+0xd3e8]        # 0x417120
  409d38:	lea    rcx,[rip+0xd3eb]        # 0x41712a
  409d3f:	mov    r8d,0x96
  409d45:	call   0x40cb10
  409d4a:	jmp    0x409abb
  409d4f:	lea    rdx,[rip+0xd3ca]        # 0x417120
  409d56:	lea    rcx,[rip+0xd3fb]        # 0x417158
  409d5d:	mov    r8d,0xb3
  409d63:	call   0x40cb10
  409d68:	jmp    0x409b3f
  409d6d:	lea    rdx,[rip+0xd3ac]        # 0x417120
  409d74:	lea    rcx,[rip+0xd3c6]        # 0x417141
  409d7b:	mov    r8d,0xb2
  409d81:	call   0x40cb10
  409d86:	jmp    0x409b30
  409d8b:	mov    rax,QWORD PTR [rsp+0x160]
  409d93:	jmp    0x408c72
  409d98:	nop
  409d99:	nop
  409d9a:	nop
  409d9b:	nop
  409d9c:	nop
  409d9d:	nop
  409d9e:	nop
  409d9f:	nop
  409da0:	push   r15
  409da2:	push   r14
  409da4:	mov    eax,0x1058
  409da9:	push   r13
  409dab:	push   r12
  409dad:	push   rbp
  409dae:	push   rdi
  409daf:	push   rsi
  409db0:	push   rbx
  409db1:	call   0x40c5e0
  409db6:	sub    rsp,rax
  409db9:	xor    esi,esi
  409dbb:	mov    rdi,r8
  409dbe:	mov    r15,rdx
  409dc1:	mov    QWORD PTR [rsp+0x10a0],rcx
  409dc9:	mov    QWORD PTR [rsp+0x10b8],r9
  409dd1:	xor    r8d,r8d
  409dd4:	xor    r9d,r9d
  409dd7:	xor    edx,edx
  409dd9:	mov    QWORD PTR [rsp+0x20],0x0
  409de2:	mov    rcx,rdi
  409de5:	call   0x40b0b0
  409dea:	mov    rax,QWORD PTR [rsp+0x10a0]
  409df2:	test   r15,r15
  409df5:	mov    QWORD PTR [rsp+0x38],r15
  409dfa:	lea    rbx,[rsp+0x50]
  409dff:	lea    r12,[rsp+0x40]
  409e04:	mov    QWORD PTR [rsp+0x30],rax
  409e09:	je     0x40a020
  409e0f:	lea    r14,[rsp+0x38]
  409e14:	lea    r13,[rsp+0x30]
  409e19:	lea    rbp,[rsp+0x48]
  409e1e:	jmp    0x409e33
  409e20:	mov    rax,QWORD PTR [rsp+0x40]
  409e25:	sub    rax,rbx
  409e28:	add    rsi,rax
  409e2b:	cmp    QWORD PTR [rsp+0x38],0x0
  409e31:	je     0x409e80
  409e33:	mov    QWORD PTR [rsp+0x20],rbp
  409e38:	mov    r9,r12
  409e3b:	mov    r8,r14
  409e3e:	mov    rdx,r13
  409e41:	mov    rcx,rdi
  409e44:	mov    QWORD PTR [rsp+0x40],rbx
  409e49:	mov    QWORD PTR [rsp+0x48],0x1000
  409e52:	call   0x40b0b0
  409e57:	cmp    rax,0xffffffffffffffff
  409e5b:	jne    0x409e20
  409e5d:	call   QWORD PTR [rip+0x147b5]        # 0x41e618
  409e63:	cmp    DWORD PTR [rax],0x7
  409e66:	je     0x409e20
  409e68:	call   QWORD PTR [rip+0x147aa]        # 0x41e618
  409e6e:	cmp    DWORD PTR [rax],0x16
  409e71:	jne    0x409fc3
  409e77:	nop    WORD PTR [rax+rax*1+0x0]
  409e80:	xor    r8d,r8d
  409e83:	xor    edx,edx
  409e85:	mov    QWORD PTR [rsp+0x20],rbp
  409e8a:	mov    r9,r12
  409e8d:	mov    rcx,rdi
  409e90:	mov    QWORD PTR [rsp+0x40],rbx
  409e95:	mov    QWORD PTR [rsp+0x48],0x1000
  409e9e:	call   0x40b0b0
  409ea3:	cmp    rax,0xffffffffffffffff
  409ea7:	je     0x409fc3
  409ead:	mov    rax,QWORD PTR [rsp+0x40]
  409eb2:	sub    rax,rbx
  409eb5:	add    rsi,rax
  409eb8:	je     0x409fd0
  409ebe:	mov    rax,QWORD PTR [rsp+0x10b8]
  409ec6:	mov    r13,QWORD PTR [rax]
  409ec9:	test   r13,r13
  409ecc:	je     0x409fa3
  409ed2:	mov    rax,QWORD PTR [rsp+0x10c0]
  409eda:	cmp    rsi,QWORD PTR [rax]
  409edd:	ja     0x409fa3
  409ee3:	mov    QWORD PTR [rsp+0x20],0x0
  409eec:	xor    r9d,r9d
  409eef:	xor    r8d,r8d
  409ef2:	xor    edx,edx
  409ef4:	mov    rcx,rdi
  409ef7:	lea    r14,[rsp+0x38]
  409efc:	call   0x40b0b0
  409f01:	mov    rax,QWORD PTR [rsp+0x10a0]
  409f09:	mov    QWORD PTR [rsp+0x40],r15
  409f0e:	mov    QWORD PTR [rsp+0x48],r13
  409f13:	mov    QWORD PTR [rsp+0x50],rsi
  409f18:	mov    QWORD PTR [rsp+0x38],rax
  409f1d:	jmp    0x409f45
  409f1f:	nop
  409f20:	mov    QWORD PTR [rsp+0x20],rbx
  409f25:	mov    r9,rbp
  409f28:	mov    r8,r12
  409f2b:	mov    rdx,r14
  409f2e:	mov    rcx,rdi
  409f31:	call   0x40b0b0
  409f36:	cmp    rax,0xffffffffffffffff
  409f3a:	je     0x409fe3
  409f40:	mov    r15,QWORD PTR [rsp+0x40]
  409f45:	test   r15,r15
  409f48:	jne    0x409f20
  409f4a:	xor    r8d,r8d
  409f4d:	xor    edx,edx
  409f4f:	mov    QWORD PTR [rsp+0x20],rbx
  409f54:	mov    r9,rbp
  409f57:	mov    rcx,rdi
  409f5a:	call   0x40b0b0
  409f5f:	cmp    rax,0xffffffffffffffff
  409f63:	je     0x409ff2
  409f69:	cmp    QWORD PTR [rsp+0x50],0x0
  409f6f:	jne    0x40a02a
  409f75:	mov    rax,QWORD PTR [rsp+0x10b8]
  409f7d:	xor    ebx,ebx
  409f7f:	mov    QWORD PTR [rax],r13
  409f82:	mov    rax,QWORD PTR [rsp+0x10c0]
  409f8a:	mov    QWORD PTR [rax],rsi
  409f8d:	mov    eax,ebx
  409f8f:	add    rsp,0x1058
  409f96:	pop    rbx
  409f97:	pop    rsi
  409f98:	pop    rdi
  409f99:	pop    rbp
  409f9a:	pop    r12
  409f9c:	pop    r13
  409f9e:	pop    r14
  409fa0:	pop    r15
  409fa2:	ret    
  409fa3:	mov    rcx,rsi
  409fa6:	call   0x4114b8
  409fab:	test   rax,rax
  409fae:	mov    r13,rax
  409fb1:	jne    0x409ee3
  409fb7:	call   QWORD PTR [rip+0x1465b]        # 0x41e618
  409fbd:	mov    DWORD PTR [rax],0xc
  409fc3:	mov    ebx,0xffffffff
  409fc8:	jmp    0x409f8d
  409fca:	nop    WORD PTR [rax+rax*1+0x0]
  409fd0:	mov    rax,QWORD PTR [rsp+0x10c0]
  409fd8:	xor    ebx,ebx
  409fda:	mov    QWORD PTR [rax],0x0
  409fe1:	jmp    0x409f8d
  409fe3:	call   QWORD PTR [rip+0x1462f]        # 0x41e618
  409fe9:	cmp    DWORD PTR [rax],0x16
  409fec:	je     0x409f4a
  409ff2:	mov    rax,QWORD PTR [rsp+0x10b8]
  409ffa:	mov    ebx,0xffffffff
  409fff:	cmp    QWORD PTR [rax],r13
  40a002:	je     0x409f8d
  40a004:	mov    rsi,QWORD PTR [rip+0x1460d]        # 0x41e618
  40a00b:	call   rsi
  40a00d:	mov    edi,DWORD PTR [rax]
  40a00f:	mov    rcx,r13
  40a012:	call   0x411500
  40a017:	call   rsi
  40a019:	mov    DWORD PTR [rax],edi
  40a01b:	jmp    0x409f8d
  40a020:	lea    rbp,[rsp+0x48]
  40a025:	jmp    0x409e80
  40a02a:	call   0x411548
  40a02f:	nop
  40a030:	push   r15
  40a032:	push   r14
  40a034:	push   r13
  40a036:	push   r12
  40a038:	push   rbp
  40a039:	push   rdi
  40a03a:	push   rsi
  40a03b:	push   rbx
  40a03c:	sub    rsp,0x68
  40a040:	mov    rbp,rdx
  40a043:	mov    QWORD PTR [rsp+0x40],rcx
  40a048:	call   0x411440
  40a04d:	cmp    rax,0x33333333
  40a053:	mov    rdi,rax
  40a056:	mov    QWORD PTR [rsp+0x48],rax
  40a05b:	lea    rax,[rax+rax*4]
  40a05f:	cmovbe rdi,rax
  40a063:	lea    rsi,[rdi+0x1]
  40a067:	mov    rcx,rsi
  40a06a:	call   0x4114b8
  40a06f:	test   rax,rax
  40a072:	mov    rbx,rax
  40a075:	je     0x40a21b
  40a07b:	mov    QWORD PTR [rsp+0x20],0x0
  40a084:	xor    r9d,r9d
  40a087:	xor    r8d,r8d
  40a08a:	xor    edx,edx
  40a08c:	mov    rcx,rbp
  40a08f:	lea    r12,[rsp+0x50]
  40a094:	call   0x40b0b0
  40a099:	lea    rax,[rsp+0x48]
  40a09e:	mov    QWORD PTR [rsp+0x50],rbx
  40a0a3:	mov    QWORD PTR [rsp+0x58],rdi
  40a0a8:	lea    r13,[rsp+0x58]
  40a0ad:	mov    QWORD PTR [rsp+0x30],rax
  40a0b2:	lea    rax,[rsp+0x40]
  40a0b7:	mov    QWORD PTR [rsp+0x38],rax
  40a0bc:	jmp    0x40a121
  40a0be:	xchg   ax,ax
  40a0c0:	mov    rdi,QWORD PTR [rip+0x14551]        # 0x41e618
  40a0c7:	call   rdi
  40a0c9:	cmp    DWORD PTR [rax],0x16
  40a0cc:	je     0x40a19e
  40a0d2:	call   rdi
  40a0d4:	cmp    DWORD PTR [rax],0x7
  40a0d7:	jne    0x40a1f8
  40a0dd:	mov    r15,QWORD PTR [rsp+0x50]
  40a0e2:	lea    r14,[rsi+rsi*1]
  40a0e6:	sub    r15,rbx
  40a0e9:	cmp    rsi,r14
  40a0ec:	jae    0x40a1f0
  40a0f2:	mov    rdx,r14
  40a0f5:	mov    rcx,rbx
  40a0f8:	call   0x411478
  40a0fd:	test   rax,rax
  40a100:	je     0x40a1f0
  40a106:	lea    rdx,[rax+r15*1]
  40a10a:	mov    rsi,r14
  40a10d:	mov    rbx,rax
  40a110:	mov    QWORD PTR [rsp+0x50],rdx
  40a115:	lea    rdx,[r14-0x1]
  40a119:	sub    rdx,r15
  40a11c:	mov    QWORD PTR [rsp+0x58],rdx
  40a121:	mov    r8,QWORD PTR [rsp+0x30]
  40a126:	mov    rdx,QWORD PTR [rsp+0x38]
  40a12b:	mov    r9,r12
  40a12e:	mov    QWORD PTR [rsp+0x20],r13
  40a133:	mov    rcx,rbp
  40a136:	call   0x40b0b0
  40a13b:	cmp    rax,0xffffffffffffffff
  40a13f:	je     0x40a0c0
  40a145:	jmp    0x40a19e
  40a147:	nop    WORD PTR [rax+rax*1+0x0]
  40a150:	mov    rdi,QWORD PTR [rip+0x144c1]        # 0x41e618
  40a157:	call   rdi
  40a159:	cmp    DWORD PTR [rax],0x7
  40a15c:	jne    0x40a1f8
  40a162:	mov    r14,QWORD PTR [rsp+0x50]
  40a167:	lea    r15,[rsi+rsi*1]
  40a16b:	sub    r14,rbx
  40a16e:	cmp    rsi,r15
  40a171:	jae    0x40a1f0
  40a173:	mov    rdx,r15
  40a176:	mov    rcx,rbx
  40a179:	call   0x411478
  40a17e:	test   rax,rax
  40a181:	je     0x40a1f0
  40a183:	lea    rdx,[rax+r14*1]
  40a187:	mov    rsi,r15
  40a18a:	mov    rbx,rax
  40a18d:	mov    QWORD PTR [rsp+0x50],rdx
  40a192:	lea    rdx,[r15-0x1]
  40a196:	sub    rdx,r14
  40a199:	mov    QWORD PTR [rsp+0x58],rdx
  40a19e:	xor    r8d,r8d
  40a1a1:	xor    edx,edx
  40a1a3:	mov    QWORD PTR [rsp+0x20],r13
  40a1a8:	mov    r9,r12
  40a1ab:	mov    rcx,rbp
  40a1ae:	call   0x40b0b0
  40a1b3:	cmp    rax,0xffffffffffffffff
  40a1b7:	je     0x40a150
  40a1b9:	mov    rax,QWORD PTR [rsp+0x50]
  40a1be:	lea    rdx,[rax+0x1]
  40a1c2:	mov    QWORD PTR [rsp+0x50],rdx
  40a1c7:	mov    BYTE PTR [rax],0x0
  40a1ca:	mov    rax,rbx
  40a1cd:	mov    rdx,QWORD PTR [rsp+0x50]
  40a1d2:	sub    rdx,rbx
  40a1d5:	cmp    rdx,rsi
  40a1d8:	jae    0x40a20a
  40a1da:	mov    rcx,rbx
  40a1dd:	call   0x411478
  40a1e2:	test   rax,rax
  40a1e5:	cmove  rax,rbx
  40a1e9:	jmp    0x40a20a
  40a1eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1f0:	call   rdi
  40a1f2:	mov    DWORD PTR [rax],0xc
  40a1f8:	call   rdi
  40a1fa:	mov    esi,DWORD PTR [rax]
  40a1fc:	mov    rcx,rbx
  40a1ff:	call   0x411500
  40a204:	call   rdi
  40a206:	mov    DWORD PTR [rax],esi
  40a208:	xor    eax,eax
  40a20a:	add    rsp,0x68
  40a20e:	pop    rbx
  40a20f:	pop    rsi
  40a210:	pop    rdi
  40a211:	pop    rbp
  40a212:	pop    r12
  40a214:	pop    r13
  40a216:	pop    r14
  40a218:	pop    r15
  40a21a:	ret    
  40a21b:	call   QWORD PTR [rip+0x143f7]        # 0x41e618
  40a221:	mov    DWORD PTR [rax],0xc
  40a227:	xor    eax,eax
  40a229:	jmp    0x40a20a
  40a22b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a230:	push   rdi
  40a231:	push   rsi
  40a232:	push   rbx
  40a233:	sub    rsp,0x20
  40a237:	cmp    BYTE PTR [rcx],0x0
  40a23a:	mov    rbx,rcx
  40a23d:	mov    rdi,rdx
  40a240:	mov    rsi,r8
  40a243:	je     0x40a254
  40a245:	mov    rdx,r8
  40a248:	mov    rcx,rdi
  40a24b:	call   0x405950
  40a250:	test   eax,eax
  40a252:	jne    0x40a270
  40a254:	mov    rcx,rbx
  40a257:	call   0x4113f8
  40a25c:	test   rax,rax
  40a25f:	mov    rbx,rax
  40a262:	je     0x40a2c0
  40a264:	mov    rax,rbx
  40a267:	add    rsp,0x20
  40a26b:	pop    rbx
  40a26c:	pop    rsi
  40a26d:	pop    rdi
  40a26e:	ret    
  40a26f:	nop
  40a270:	mov    rcx,rsi
  40a273:	mov    rdx,rdi
  40a276:	call   0x40b0a0
  40a27b:	cmp    rax,0xffffffffffffffff
  40a27f:	mov    rsi,rax
  40a282:	je     0x40a2ce
  40a284:	mov    rcx,rbx
  40a287:	mov    rdx,rax
  40a28a:	call   0x40a030
  40a28f:	test   rax,rax
  40a292:	mov    rbx,rax
  40a295:	je     0x40a2d2
  40a297:	mov    rcx,rsi
  40a29a:	call   0x40b0a8
  40a29f:	test   eax,eax
  40a2a1:	jns    0x40a264
  40a2a3:	mov    rsi,QWORD PTR [rip+0x1436e]        # 0x41e618
  40a2aa:	call   rsi
  40a2ac:	mov    edi,DWORD PTR [rax]
  40a2ae:	mov    rcx,rbx
  40a2b1:	xor    ebx,ebx
  40a2b3:	call   0x411500
  40a2b8:	call   rsi
  40a2ba:	mov    DWORD PTR [rax],edi
  40a2bc:	jmp    0x40a264
  40a2be:	xchg   ax,ax
  40a2c0:	call   QWORD PTR [rip+0x14352]        # 0x41e618
  40a2c6:	mov    DWORD PTR [rax],0xc
  40a2cc:	jmp    0x40a264
  40a2ce:	xor    ebx,ebx
  40a2d0:	jmp    0x40a264
  40a2d2:	mov    rbx,QWORD PTR [rip+0x1433f]        # 0x41e618
  40a2d9:	call   rbx
  40a2db:	mov    edi,DWORD PTR [rax]
  40a2dd:	mov    rcx,rsi
  40a2e0:	call   0x40b0a8
  40a2e5:	call   rbx
  40a2e7:	xor    ebx,ebx
  40a2e9:	mov    DWORD PTR [rax],edi
  40a2eb:	jmp    0x40a264
  40a2f0:	ret    
  40a2f1:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a300:	sub    rsp,0x28
  40a304:	mov    eax,DWORD PTR [rip+0x115f6]        # 0x41b900
  40a30a:	test   eax,eax
  40a30c:	jne    0x40a325
  40a30e:	lea    rcx,[rip+0xffffffffffffffdb]        # 0x40a2f0
  40a315:	call   QWORD PTR [rip+0x7e2d]        # 0x412148
  40a31b:	mov    DWORD PTR [rip+0x115db],0x1        # 0x41b900
  40a325:	add    rsp,0x28
  40a329:	ret    
  40a32a:	nop
  40a32b:	nop
  40a32c:	nop
  40a32d:	nop
  40a32e:	nop
  40a32f:	nop
  40a330:	push   rbx
  40a331:	sub    rsp,0x20
  40a335:	cmp    ecx,0xd
  40a338:	je     0x40a350
  40a33a:	mov    ebx,ecx
  40a33c:	call   0x40a300
  40a341:	mov    ecx,ebx
  40a343:	add    rsp,0x20
  40a347:	pop    rbx
  40a348:	jmp    0x411480
  40a34d:	nop    DWORD PTR [rax]
  40a350:	add    rsp,0x20
  40a354:	pop    rbx
  40a355:	jmp    0x40a750
  40a35a:	nop
  40a35b:	nop
  40a35c:	nop
  40a35d:	nop
  40a35e:	nop
  40a35f:	nop
  40a360:	push   rsi
  40a361:	push   rbx
  40a362:	sub    rsp,0x28
  40a366:	cmp    ecx,0xd
  40a369:	jne    0x40a380
  40a36b:	mov    rax,QWORD PTR [rip+0x116ee]        # 0x41ba60
  40a372:	mov    QWORD PTR [rip+0x116e7],rdx        # 0x41ba60
  40a379:	add    rsp,0x28
  40a37d:	pop    rbx
  40a37e:	pop    rsi
  40a37f:	ret    
  40a380:	mov    rsi,rdx
  40a383:	mov    ebx,ecx
  40a385:	call   0x40a300
  40a38a:	mov    rdx,rsi
  40a38d:	mov    ecx,ebx
  40a38f:	add    rsp,0x28
  40a393:	pop    rbx
  40a394:	pop    rsi
  40a395:	jmp    0x411468
  40a39a:	nop    WORD PTR [rax+rax*1+0x0]
  40a3a0:	push   rbx
  40a3a1:	sub    rsp,0x20
  40a3a5:	lea    rdx,[rip+0xfffffffffffffff4]        # 0x40a3a0
  40a3ac:	movsxd rbx,ecx
  40a3af:	mov    ecx,ebx
  40a3b1:	call   0x40a360
  40a3b6:	cmp    ebx,0x16
  40a3b9:	ja     0x40a3c9
  40a3bb:	lea    rax,[rip+0x1163e]        # 0x41ba00
  40a3c2:	mov    DWORD PTR [rax+rbx*4],0x1
  40a3c9:	add    rsp,0x20
  40a3cd:	pop    rbx
  40a3ce:	ret    
  40a3cf:	nop
  40a3d0:	xor    eax,eax
  40a3d2:	cmp    edx,0x16
  40a3d5:	ja     0x40a3e8
  40a3d7:	cmp    edx,0x6
  40a3da:	mov    al,0x16
  40a3dc:	cmove  edx,eax
  40a3df:	mov    eax,DWORD PTR [rcx]
  40a3e1:	mov    ecx,edx
  40a3e3:	shr    eax,cl
  40a3e5:	and    eax,0x1
  40a3e8:	repz ret 
  40a3ea:	nop    WORD PTR [rax+rax*1+0x0]
  40a3f0:	xor    eax,eax
  40a3f2:	mov    DWORD PTR [rcx],0x0
  40a3f8:	ret    
  40a3f9:	nop    DWORD PTR [rax+0x0]
  40a400:	sub    rsp,0x28
  40a404:	cmp    edx,0x16
  40a407:	mov    r8,rcx
  40a40a:	ja     0x40a430
  40a40c:	cmp    edx,0x6
  40a40f:	mov    eax,0x400000
  40a414:	je     0x40a41f
  40a416:	mov    eax,0x1
  40a41b:	mov    ecx,edx
  40a41d:	shl    eax,cl
  40a41f:	or     DWORD PTR [r8],eax
  40a422:	xor    eax,eax
  40a424:	add    rsp,0x28
  40a428:	ret    
  40a429:	nop    DWORD PTR [rax+0x0]
  40a430:	call   QWORD PTR [rip+0x141e2]        # 0x41e618
  40a436:	mov    DWORD PTR [rax],0x16
  40a43c:	mov    eax,0xffffffff
  40a441:	jmp    0x40a424
  40a443:	nop    DWORD PTR [rax]
  40a446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a450:	sub    rsp,0x28
  40a454:	cmp    edx,0x16
  40a457:	mov    r8,rcx
  40a45a:	ja     0x40a480
  40a45c:	cmp    edx,0x6
  40a45f:	mov    eax,0xffbfffff
  40a464:	je     0x40a46f
  40a466:	mov    eax,0xfffffffe
  40a46b:	mov    ecx,edx
  40a46d:	rol    eax,cl
  40a46f:	and    DWORD PTR [r8],eax
  40a472:	xor    eax,eax
  40a474:	add    rsp,0x28
  40a478:	ret    
  40a479:	nop    DWORD PTR [rax+0x0]
  40a480:	call   QWORD PTR [rip+0x14192]        # 0x41e618
  40a486:	mov    DWORD PTR [rax],0x16
  40a48c:	mov    eax,0xffffffff
  40a491:	jmp    0x40a474
  40a493:	nop    DWORD PTR [rax]
  40a496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4a0:	xor    eax,eax
  40a4a2:	mov    DWORD PTR [rcx],0x7fffbf
  40a4a8:	ret    
  40a4a9:	nop    DWORD PTR [rax+0x0]
  40a4b0:	lea    r8,[rip+0x11549]        # 0x41ba00
  40a4b7:	xor    edx,edx
  40a4b9:	mov    r9d,0x1
  40a4bf:	mov    r10,rcx
  40a4c2:	xor    ecx,ecx
  40a4c4:	movsxd rax,ecx
  40a4c7:	mov    eax,DWORD PTR [r8+rax*4]
  40a4cb:	test   eax,eax
  40a4cd:	je     0x40a4d6
  40a4cf:	mov    eax,r9d
  40a4d2:	shl    eax,cl
  40a4d4:	or     edx,eax
  40a4d6:	add    ecx,0x1
  40a4d9:	cmp    ecx,0x17
  40a4dc:	jne    0x40a4c4
  40a4de:	mov    DWORD PTR [r10],edx
  40a4e1:	xor    eax,eax
  40a4e3:	ret    
  40a4e4:	xchg   ax,ax
  40a4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4f0:	push   r14
  40a4f2:	push   r13
  40a4f4:	push   r12
  40a4f6:	push   rbp
  40a4f7:	push   rdi
  40a4f8:	push   rsi
  40a4f9:	push   rbx
  40a4fa:	add    rsp,0xffffffffffffff80
  40a4fe:	test   r8,r8
  40a501:	je     0x40a50c
  40a503:	mov    eax,DWORD PTR [rip+0x11553]        # 0x41ba5c
  40a509:	mov    DWORD PTR [r8],eax
  40a50c:	test   rdx,rdx
  40a50f:	je     0x40a550
  40a511:	cmp    ecx,0x1
  40a514:	je     0x40a6b0
  40a51a:	cmp    ecx,0x2
  40a51d:	je     0x40a561
  40a51f:	test   ecx,ecx
  40a521:	je     0x40a6c0
  40a527:	call   QWORD PTR [rip+0x140eb]        # 0x41e618
  40a52d:	mov    DWORD PTR [rax],0x16
  40a533:	mov    eax,0xffffffff
  40a538:	sub    rsp,0xffffffffffffff80
  40a53c:	pop    rbx
  40a53d:	pop    rsi
  40a53e:	pop    rdi
  40a53f:	pop    rbp
  40a540:	pop    r12
  40a542:	pop    r13
  40a544:	pop    r14
  40a546:	ret    
  40a547:	nop    WORD PTR [rax+rax*1+0x0]
  40a550:	xor    eax,eax
  40a552:	sub    rsp,0xffffffffffffff80
  40a556:	pop    rbx
  40a557:	pop    rsi
  40a558:	pop    rdi
  40a559:	pop    rbp
  40a55a:	pop    r12
  40a55c:	pop    r13
  40a55e:	pop    r14
  40a560:	ret    
  40a561:	mov    esi,DWORD PTR [rdx]
  40a563:	mov    ecx,DWORD PTR [rip+0x114f3]        # 0x41ba5c
  40a569:	not    esi
  40a56b:	mov    eax,esi
  40a56d:	and    eax,ecx
  40a56f:	mov    edx,DWORD PTR [rip+0x114e7]        # 0x41ba5c
  40a575:	mov    esi,DWORD PTR [rip+0x114e1]        # 0x41ba5c
  40a57b:	mov    ebp,eax
  40a57d:	not    ebp
  40a57f:	not    esi
  40a581:	and    ebp,edx
  40a583:	and    esi,eax
  40a585:	je     0x40a5f0
  40a587:	xor    ebx,ebx
  40a589:	mov    r12d,0x1
  40a58f:	jmp    0x40a599
  40a591:	add    ebx,0x1
  40a594:	cmp    ebx,0x17
  40a597:	je     0x40a5f0
  40a599:	bt     esi,ebx
  40a59c:	jae    0x40a591
  40a59e:	lea    rax,[rip+0x1145b]        # 0x41ba00
  40a5a5:	lea    rdx,[rip+0xfffffffffffffdf4]        # 0x40a3a0
  40a5ac:	movsxd rdi,ebx
  40a5af:	mov    ecx,ebx
  40a5b1:	mov    DWORD PTR [rax+rdi*4],0x0
  40a5b8:	call   0x40a360
  40a5bd:	lea    rdx,[rip+0x1137c]        # 0x41b940
  40a5c4:	cmp    rax,0xffffffffffffffff
  40a5c8:	mov    QWORD PTR [rdx+rdi*8],rax
  40a5cc:	je     0x40a591
  40a5ce:	mov    eax,DWORD PTR [rip+0x11488]        # 0x41ba5c
  40a5d4:	mov    ecx,ebx
  40a5d6:	mov    edx,r12d
  40a5d9:	shl    edx,cl
  40a5db:	add    ebx,0x1
  40a5de:	or     eax,edx
  40a5e0:	cmp    ebx,0x17
  40a5e3:	mov    DWORD PTR [rip+0x11473],eax        # 0x41ba5c
  40a5e9:	jne    0x40a599
  40a5eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5f0:	xor    ebx,ebx
  40a5f2:	test   ebp,ebp
  40a5f4:	lea    r14,[rip+0xfffffffffffffda5]        # 0x40a3a0
  40a5fb:	mov    r13d,0x1
  40a601:	jne    0x40a627
  40a603:	jmp    0x40a550
  40a608:	nop    DWORD PTR [rax+rax*1+0x0]
  40a610:	mov    DWORD PTR [rsp+rbx*4+0x20],0x0
  40a618:	add    rbx,0x1
  40a61c:	lea    rsi,[rsp+0x20]
  40a621:	cmp    rbx,0x17
  40a625:	je     0x40a687
  40a627:	bt     ebp,ebx
  40a62a:	jae    0x40a610
  40a62c:	lea    rax,[rip+0x1130d]        # 0x41b940
  40a633:	movsxd r12,ebx
  40a636:	mov    ecx,ebx
  40a638:	mov    rdx,QWORD PTR [rax+r12*8]
  40a63c:	call   0x40a360
  40a641:	cmp    rax,r14
  40a644:	jne    0x40a6cf
  40a64a:	lea    r8,[rip+0x113af]        # 0x41ba00
  40a651:	mov    ecx,ebx
  40a653:	mov    edx,r13d
  40a656:	shl    edx,cl
  40a658:	lea    rsi,[rsp+0x20]
  40a65d:	mov    eax,DWORD PTR [r8+r12*4]
  40a661:	not    edx
  40a663:	mov    DWORD PTR [rsp+rbx*4+0x20],eax
  40a667:	mov    eax,DWORD PTR [rip+0x113ef]        # 0x41ba5c
  40a66d:	add    rbx,0x1
  40a671:	and    eax,edx
  40a673:	cmp    rbx,0x17
  40a677:	mov    DWORD PTR [rip+0x113df],eax        # 0x41ba5c
  40a67d:	mov    DWORD PTR [r8+r12*4],0x0
  40a685:	jne    0x40a627
  40a687:	xor    bl,bl
  40a689:	jmp    0x40a69e
  40a68b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a690:	add    rbx,0x1
  40a694:	cmp    rbx,0x17
  40a698:	je     0x40a550
  40a69e:	mov    eax,DWORD PTR [rsi+rbx*4]
  40a6a1:	test   eax,eax
  40a6a3:	je     0x40a690
  40a6a5:	mov    ecx,ebx
  40a6a7:	call   0x40a330
  40a6ac:	jmp    0x40a690
  40a6ae:	xchg   ax,ax
  40a6b0:	mov    eax,DWORD PTR [rdx]
  40a6b2:	jmp    0x40a56f
  40a6b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a6c0:	mov    esi,DWORD PTR [rip+0x11396]        # 0x41ba5c
  40a6c6:	mov    eax,DWORD PTR [rdx]
  40a6c8:	or     eax,esi
  40a6ca:	jmp    0x40a56f
  40a6cf:	call   0x411548
  40a6d4:	nop
  40a6d5:	nop
  40a6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a6e0:	sub    rsp,0x28
  40a6e4:	cmp    ecx,0x16
  40a6e7:	ja     0x40a720
  40a6e9:	cmp    rdx,0xffffffffffffffff
  40a6ed:	je     0x40a720
  40a6ef:	cmp    ecx,0x6
  40a6f2:	mov    eax,0x16
  40a6f7:	cmove  ecx,eax
  40a6fa:	mov    eax,DWORD PTR [rip+0x1135c]        # 0x41ba5c
  40a700:	bt     eax,ecx
  40a703:	jae    0x40a740
  40a705:	lea    r8,[rip+0x11234]        # 0x41b940
  40a70c:	movsxd rcx,ecx
  40a70f:	mov    rax,QWORD PTR [r8+rcx*8]
  40a713:	mov    QWORD PTR [r8+rcx*8],rdx
  40a717:	add    rsp,0x28
  40a71b:	ret    
  40a71c:	nop    DWORD PTR [rax+0x0]
  40a720:	call   QWORD PTR [rip+0x13ef2]        # 0x41e618
  40a726:	mov    DWORD PTR [rax],0x16
  40a72c:	mov    rax,0xffffffffffffffff
  40a733:	add    rsp,0x28
  40a737:	ret    
  40a738:	nop    DWORD PTR [rax+rax*1+0x0]
  40a740:	add    rsp,0x28
  40a744:	jmp    0x40a360
  40a749:	nop    DWORD PTR [rax+0x0]
  40a750:	sub    rsp,0x28
  40a754:	mov    eax,DWORD PTR [rip+0x11302]        # 0x41ba5c
  40a75a:	test   ah,0x20
  40a75d:	jne    0x40a780
  40a75f:	mov    rax,QWORD PTR [rip+0x112fa]        # 0x41ba60
  40a766:	test   rax,rax
  40a769:	je     0x40a791
  40a76b:	cmp    rax,0x1
  40a76f:	je     0x40a778
  40a771:	mov    ecx,0xd
  40a776:	call   rax
  40a778:	xor    eax,eax
  40a77a:	add    rsp,0x28
  40a77e:	ret    
  40a77f:	nop
  40a780:	xor    eax,eax
  40a782:	mov    DWORD PTR [rip+0x112a8],0x1        # 0x41ba34
  40a78c:	add    rsp,0x28
  40a790:	ret    
  40a791:	mov    ecx,0x8d
  40a796:	call   0x411538
  40a79b:	nop
  40a79c:	nop
  40a79d:	nop
  40a79e:	nop
  40a79f:	nop
  40a7a0:	push   rbx
  40a7a1:	sub    rsp,0x20
  40a7a5:	mov    ebx,ecx
  40a7a7:	call   0x4059e0
  40a7ac:	cmp    BYTE PTR [rax],0x55
  40a7af:	je     0x40a7c0
  40a7b1:	test   bx,bx
  40a7b4:	jne    0x40a7f0
  40a7b6:	xor    eax,eax
  40a7b8:	add    rsp,0x20
  40a7bc:	pop    rbx
  40a7bd:	ret    
  40a7be:	xchg   ax,ax
  40a7c0:	cmp    BYTE PTR [rax+0x1],0x54
  40a7c4:	jne    0x40a7b1
  40a7c6:	cmp    BYTE PTR [rax+0x2],0x46
  40a7ca:	jne    0x40a7b1
  40a7cc:	cmp    BYTE PTR [rax+0x3],0x2d
  40a7d0:	jne    0x40a7b1
  40a7d2:	cmp    BYTE PTR [rax+0x4],0x38
  40a7d6:	jne    0x40a7b1
  40a7d8:	cmp    BYTE PTR [rax+0x5],0x0
  40a7dc:	jne    0x40a7b1
  40a7de:	movzx  ecx,bx
  40a7e1:	mov    rdx,rax
  40a7e4:	add    rsp,0x20
  40a7e8:	pop    rbx
  40a7e9:	jmp    0x40ac00
  40a7ee:	xchg   ax,ax
  40a7f0:	movzx  ecx,bx
  40a7f3:	mov    edx,0x157
  40a7f8:	call   0x4114c8
  40a7fd:	cmp    eax,0x1
  40a800:	sbb    eax,eax
  40a802:	or     eax,0x1
  40a805:	add    rsp,0x20
  40a809:	pop    rbx
  40a80a:	ret    
  40a80b:	nop
  40a80c:	nop
  40a80d:	nop
  40a80e:	nop
  40a80f:	nop
  40a810:	sub    rsp,0x28
  40a814:	mov    rax,rcx
  40a817:	lea    rcx,[rcx+0x10]
  40a81b:	cmp    rax,rcx
  40a81e:	ja     0x40a880
  40a820:	call   0x4114b8
  40a825:	test   rax,rax
  40a828:	mov    r8,rax
  40a82b:	je     0x40a880
  40a82d:	lea    rcx,[rax+0x10]
  40a831:	mov    DWORD PTR [rax+0xc],0x1415fb4a
  40a838:	movabs rdx,0xff00ff00ff00ff01
  40a842:	mov    rax,rcx
  40a845:	mul    rdx
  40a848:	shr    rdx,0x8
  40a84c:	mov    rax,rdx
  40a84f:	shl    rax,0x8
  40a853:	add    rdx,rax
  40a856:	mov    rax,rcx
  40a859:	sub    rax,rdx
  40a85c:	mov    rdx,rax
  40a85f:	lea    rax,[rip+0x1121a]        # 0x41ba80
  40a866:	mov    r9,QWORD PTR [rax+rdx*8]
  40a86a:	mov    QWORD PTR [rax+rdx*8],rcx
  40a86e:	mov    rax,rcx
  40a871:	mov    QWORD PTR [r8],r9
  40a874:	add    rsp,0x28
  40a878:	ret    
  40a879:	nop    DWORD PTR [rax+0x0]
  40a880:	xor    eax,eax
  40a882:	add    rsp,0x28
  40a886:	ret    
  40a887:	nop    WORD PTR [rax+rax*1+0x0]
  40a890:	test   rcx,rcx
  40a893:	je     0x40a89e
  40a895:	cmp    DWORD PTR [rcx-0x4],0x1415fb4a
  40a89c:	je     0x40a8a0
  40a89e:	repz ret 
  40a8a0:	mov    rax,rcx
  40a8a3:	movabs rdx,0xff00ff00ff00ff01
  40a8ad:	mul    rdx
  40a8b0:	shr    rdx,0x8
  40a8b4:	mov    rax,rdx
  40a8b7:	shl    rax,0x8
  40a8bb:	add    rdx,rax
  40a8be:	mov    rax,rcx
  40a8c1:	sub    rax,rdx
  40a8c4:	mov    rdx,rax
  40a8c7:	lea    rax,[rip+0x111b2]        # 0x41ba80
  40a8ce:	mov    r8,QWORD PTR [rax+rdx*8]
  40a8d2:	test   r8,r8
  40a8d5:	je     0x40a89e
  40a8d7:	cmp    rcx,r8
  40a8da:	jne    0x40a8e8
  40a8dc:	jmp    0x40a907
  40a8de:	xchg   ax,ax
  40a8e0:	cmp    rcx,rdx
  40a8e3:	je     0x40a8f3
  40a8e5:	mov    r8,rdx
  40a8e8:	mov    rdx,QWORD PTR [r8-0x10]
  40a8ec:	test   rdx,rdx
  40a8ef:	jne    0x40a8e0
  40a8f1:	jmp    0x40a89e
  40a8f3:	sub    r8,0x10
  40a8f7:	mov    rax,QWORD PTR [rcx-0x10]
  40a8fb:	sub    rcx,0x10
  40a8ff:	mov    QWORD PTR [r8],rax
  40a902:	jmp    0x411500
  40a907:	lea    r8,[rax+rdx*8]
  40a90b:	jmp    0x40a8f7
  40a90d:	nop
  40a90e:	nop
  40a90f:	nop
  40a910:	push   r13
  40a912:	push   r12
  40a914:	push   rbp
  40a915:	push   rdi
  40a916:	push   rsi
  40a917:	push   rbx
  40a918:	sub    rsp,0x68
  40a91c:	mov    rdi,QWORD PTR [rip+0xdadd]        # 0x418400
  40a923:	mov    rax,QWORD PTR [rdi]
  40a926:	cmp    DWORD PTR [rax],0x1
  40a929:	jle    0x40aae0
  40a92f:	lea    rsi,[rsp+0x20]
  40a934:	mov    rbp,QWORD PTR [rip+0xdc05]        # 0x418540
  40a93b:	mov    QWORD PTR [rsp+0x30],rcx
  40a940:	mov    BYTE PTR [rsp+0x20],0x0
  40a945:	mov    DWORD PTR [rsp+0x24],0x0
  40a94d:	xor    ebx,ebx
  40a94f:	lea    r12,[rsi+0x4]
  40a953:	mov    BYTE PTR [rsp+0x28],0x0
  40a958:	nop    DWORD PTR [rax+rax*1+0x0]
  40a960:	cmp    BYTE PTR [rsp+0x20],0x0
  40a965:	jne    0x40a9d5
  40a967:	mov    rcx,QWORD PTR [rsp+0x30]
  40a96c:	movzx  eax,BYTE PTR [rcx]
  40a96f:	mov    edx,eax
  40a971:	and    eax,0x1f
  40a974:	shr    dl,0x5
  40a977:	and    edx,0x7
  40a97a:	mov    edx,DWORD PTR [rbp+rdx*4+0x0]
  40a97e:	bt     edx,eax
  40a981:	jae    0x40a9c0
  40a983:	mov    QWORD PTR [rsp+0x38],0x1
  40a98c:	movsx  ax,BYTE PTR [rcx]
  40a990:	mov    BYTE PTR [rsp+0x40],0x1
  40a995:	mov    WORD PTR [rsp+0x42],ax
  40a99a:	cmp    WORD PTR [rsp+0x42],0x0
  40a9a0:	jne    0x40aa94
  40a9a6:	mov    rax,rbx
  40a9a9:	add    rsp,0x68
  40a9ad:	pop    rbx
  40a9ae:	pop    rsi
  40a9af:	pop    rdi
  40a9b0:	pop    rbp
  40a9b1:	pop    r12
  40a9b3:	pop    r13
  40a9b5:	ret    
  40a9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9c0:	mov    rcx,r12
  40a9c3:	call   0x4046b0
  40a9c8:	test   eax,eax
  40a9ca:	je     0x40aaf2
  40a9d0:	mov    BYTE PTR [rsp+0x20],0x1
  40a9d5:	mov    rax,QWORD PTR [rdi]
  40a9d8:	mov    r13,QWORD PTR [rsp+0x30]
  40a9dd:	movsxd rdx,DWORD PTR [rax]
  40a9e0:	mov    rcx,r13
  40a9e3:	call   0x402830
  40a9e8:	lea    rcx,[rsi+0x22]
  40a9ec:	lea    r9,[rsi+0x4]
  40a9f0:	mov    r8,rax
  40a9f3:	mov    rdx,r13
  40a9f6:	call   0x4045a0
  40a9fb:	cmp    rax,0xffffffffffffffff
  40a9ff:	mov    QWORD PTR [rsp+0x38],rax
  40aa04:	je     0x40aab0
  40aa0a:	cmp    rax,0xfffffffffffffffe
  40aa0e:	je     0x40aac0
  40aa14:	test   rax,rax
  40aa17:	jne    0x40aa70
  40aa19:	mov    rax,QWORD PTR [rsp+0x30]
  40aa1e:	mov    QWORD PTR [rsp+0x38],0x1
  40aa27:	cmp    BYTE PTR [rax],0x0
  40aa2a:	je     0x40aa45
  40aa2c:	lea    rdx,[rip+0xc73d]        # 0x417170
  40aa33:	lea    rcx,[rip+0xc757]        # 0x417191
  40aa3a:	mov    r8d,0xb2
  40aa40:	call   0x40cb10
  40aa45:	cmp    WORD PTR [rsp+0x42],0x0
  40aa4b:	je     0x40aa70
  40aa4d:	lea    rdx,[rip+0xc71c]        # 0x417170
  40aa54:	lea    rcx,[rip+0xc74d]        # 0x4171a8
  40aa5b:	mov    r8d,0xb3
  40aa61:	call   0x40cb10
  40aa66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa70:	lea    rcx,[rsi+0x4]
  40aa74:	mov    BYTE PTR [rsp+0x40],0x1
  40aa79:	call   0x4046b0
  40aa7e:	test   eax,eax
  40aa80:	je     0x40aa87
  40aa82:	mov    BYTE PTR [rsp+0x20],0x0
  40aa87:	movzx  eax,BYTE PTR [rsp+0x40]
  40aa8c:	test   al,al
  40aa8e:	jne    0x40a99a
  40aa94:	mov    rax,QWORD PTR [rsp+0x38]
  40aa99:	add    rbx,0x1
  40aa9d:	add    QWORD PTR [rsp+0x30],rax
  40aaa2:	mov    BYTE PTR [rsp+0x28],0x0
  40aaa7:	jmp    0x40a960
  40aaac:	nop    DWORD PTR [rax+0x0]
  40aab0:	mov    QWORD PTR [rsp+0x38],0x1
  40aab9:	mov    BYTE PTR [rsp+0x40],0x0
  40aabe:	jmp    0x40aa94
  40aac0:	mov    rcx,QWORD PTR [rsp+0x30]
  40aac5:	call   0x411440
  40aaca:	mov    BYTE PTR [rsp+0x40],0x0
  40aacf:	mov    QWORD PTR [rsp+0x38],rax
  40aad4:	jmp    0x40aa94
  40aad6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aae0:	call   0x411440
  40aae5:	add    rsp,0x68
  40aae9:	pop    rbx
  40aaea:	pop    rsi
  40aaeb:	pop    rdi
  40aaec:	pop    rbp
  40aaed:	pop    r12
  40aaef:	pop    r13
  40aaf1:	ret    
  40aaf2:	lea    rdx,[rip+0xc677]        # 0x417170
  40aaf9:	lea    rcx,[rip+0xc67a]        # 0x41717a
  40ab00:	mov    r8d,0x96
  40ab06:	call   0x40cb10
  40ab0b:	jmp    0x40a9d0
  40ab10:	sub    rsp,0x28
  40ab14:	movzx  r10d,BYTE PTR [rcx+0x6]
  40ab19:	xor    eax,eax
  40ab1b:	mov    r11d,DWORD PTR [rsp+0x50]
  40ab20:	cmp    r10b,r8b
  40ab23:	je     0x40ab30
  40ab25:	add    rsp,0x28
  40ab29:	ret    
  40ab2a:	nop    WORD PTR [rax+rax*1+0x0]
  40ab30:	test   r10b,r10b
  40ab33:	mov    al,0x1
  40ab35:	je     0x40ab25
  40ab37:	xor    al,al
  40ab39:	cmp    r9b,BYTE PTR [rcx+0x7]
  40ab3d:	jne    0x40ab25
  40ab3f:	test   r9b,r9b
  40ab42:	mov    al,0x1
  40ab44:	je     0x40ab25
  40ab46:	xor    al,al
  40ab48:	cmp    r11b,BYTE PTR [rcx+0x8]
  40ab4c:	jne    0x40ab25
  40ab4e:	test   r11b,r11b
  40ab51:	mov    al,0x1
  40ab53:	je     0x40ab25
  40ab55:	add    rdx,0x9
  40ab59:	add    rcx,0x9
  40ab5d:	call   0x411458
  40ab62:	test   eax,eax
  40ab64:	sete   al
  40ab67:	movzx  eax,al
  40ab6a:	jmp    0x40ab25
  40ab6c:	nop    DWORD PTR [rax+0x0]
  40ab70:	push   rsi
  40ab71:	push   rbx
  40ab72:	sub    rsp,0x28
  40ab76:	movzx  r10d,BYTE PTR [rcx+0x4]
  40ab7b:	xor    eax,eax
  40ab7d:	mov    r11d,DWORD PTR [rsp+0x60]
  40ab82:	mov    ebx,DWORD PTR [rsp+0x68]
  40ab86:	mov    esi,DWORD PTR [rsp+0x70]
  40ab8a:	cmp    r10b,r8b
  40ab8d:	je     0x40aba0
  40ab8f:	add    rsp,0x28
  40ab93:	pop    rbx
  40ab94:	pop    rsi
  40ab95:	ret    
  40ab96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aba0:	test   r10b,r10b
  40aba3:	mov    al,0x1
  40aba5:	je     0x40ab8f
  40aba7:	xor    al,al
  40aba9:	cmp    r9b,BYTE PTR [rcx+0x5]
  40abad:	jne    0x40ab8f
  40abaf:	test   r9b,r9b
  40abb2:	mov    al,0x1
  40abb4:	je     0x40ab8f
  40abb6:	xor    al,al
  40abb8:	cmp    r11b,BYTE PTR [rcx+0x6]
  40abbc:	jne    0x40ab8f
  40abbe:	test   r11b,r11b
  40abc1:	mov    al,0x1
  40abc3:	je     0x40ab8f
  40abc5:	xor    al,al
  40abc7:	cmp    bl,BYTE PTR [rcx+0x7]
  40abca:	jne    0x40ab8f
  40abcc:	test   bl,bl
  40abce:	mov    al,0x1
  40abd0:	je     0x40ab8f
  40abd2:	xor    al,al
  40abd4:	cmp    sil,BYTE PTR [rcx+0x8]
  40abd8:	jne    0x40ab8f
  40abda:	test   sil,sil
  40abdd:	mov    al,0x1
  40abdf:	je     0x40ab8f
  40abe1:	add    rdx,0x9
  40abe5:	add    rcx,0x9
  40abe9:	call   0x411458
  40abee:	test   eax,eax
  40abf0:	sete   al
  40abf3:	movzx  eax,al
  40abf6:	jmp    0x40ab8f
  40abf8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ac00:	push   rbx
  40ac01:	sub    rsp,0x40
  40ac05:	mov    eax,ecx
  40ac07:	shr    eax,0x9
  40ac0a:	cmp    eax,0xf7
  40ac0f:	ja     0x40acd0
  40ac15:	lea    r8,[rip+0xc5e4]        # 0x417200
  40ac1c:	movsx  eax,BYTE PTR [r8+rax*1]
  40ac21:	test   eax,eax
  40ac23:	js     0x40ac51
  40ac25:	mov    r8d,ecx
  40ac28:	shl    eax,0x6
  40ac2b:	shr    r8d,0x3
  40ac2f:	and    r8d,0x3f
  40ac33:	add    eax,r8d
  40ac36:	lea    r8,[rip+0xc6c3]        # 0x417300
  40ac3d:	movzx  r8d,BYTE PTR [r8+rax*1]
  40ac42:	mov    eax,ecx
  40ac44:	and    eax,0x7
  40ac47:	bt     r8d,eax
  40ac4b:	jb     0x40acf5
  40ac51:	cmp    ecx,0x10ff
  40ac57:	ja     0x40acd7
  40ac59:	lea    eax,[rcx-0xa1]
  40ac5f:	cmp    eax,0xfebf
  40ac64:	ja     0x40ade0
  40ac6a:	cmp    ecx,0x20a9
  40ac70:	je     0x40ade0
  40ac76:	mov    rbx,rdx
  40ac79:	movzx  edx,BYTE PTR [rdx]
  40ac7c:	cmp    dl,0x45
  40ac7f:	je     0x40ae20
  40ac85:	cmp    dl,0x47
  40ac88:	je     0x40af00
  40ac8e:	cmp    dl,0x42
  40ac91:	je     0x40aeb0
  40ac97:	cmp    dl,0x43
  40ac9a:	mov    eax,0x1
  40ac9f:	je     0x40af90
  40aca5:	cmp    dl,0x4a
  40aca8:	jne    0x40acef
  40acaa:	cmp    BYTE PTR [rbx+0x1],0x4f
  40acae:	jne    0x40acef
  40acb0:	cmp    BYTE PTR [rbx+0x2],0x48
  40acb4:	jne    0x40acef
  40acb6:	cmp    BYTE PTR [rbx+0x3],0x41
  40acba:	jne    0x40acef
  40acbc:	cmp    BYTE PTR [rbx+0x4],0x42
  40acc0:	jne    0x40acef
  40acc2:	cmp    BYTE PTR [rbx+0x5],0x1
  40acc6:	sbb    eax,eax
  40acc8:	not    eax
  40acca:	add    eax,0x2
  40accd:	jmp    0x40acef
  40accf:	nop
  40acd0:	cmp    eax,0x700
  40acd5:	je     0x40ad10
  40acd7:	lea    eax,[rcx-0x2329]
  40acdd:	cmp    eax,0x1
  40ace0:	jbe    0x40acea
  40ace2:	cmp    ecx,0x115f
  40ace8:	ja     0x40ad30
  40acea:	mov    eax,0x2
  40acef:	add    rsp,0x40
  40acf3:	pop    rbx
  40acf4:	ret    
  40acf5:	sub    ecx,0x1
  40acf8:	xor    eax,eax
  40acfa:	cmp    ecx,0x9e
  40ad00:	setbe  al
  40ad03:	neg    eax
  40ad05:	add    rsp,0x40
  40ad09:	pop    rbx
  40ad0a:	ret    
  40ad0b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ad10:	cmp    ecx,0xe00ff
  40ad16:	jbe    0x40adf0
  40ad1c:	xor    ax,ax
  40ad1f:	cmp    ecx,0xe01ef
  40ad25:	ja     0x40acd7
  40ad27:	jmp    0x40acef
  40ad29:	nop    DWORD PTR [rax+0x0]
  40ad30:	lea    eax,[rcx-0x2e80]
  40ad36:	cmp    eax,0x764f
  40ad3b:	ja     0x40ad57
  40ad3d:	cmp    ecx,0x303f
  40ad43:	je     0x40ad57
  40ad45:	lea    r8d,[rcx-0x4dc0]
  40ad4c:	mov    eax,0x2
  40ad51:	cmp    r8d,0x3f
  40ad55:	ja     0x40acef
  40ad57:	lea    r8d,[rcx-0xac00]
  40ad5e:	mov    eax,0x2
  40ad63:	cmp    r8d,0x2ba3
  40ad6a:	jbe    0x40acef
  40ad6c:	lea    r8d,[rcx-0xf900]
  40ad73:	cmp    r8d,0x1ff
  40ad7a:	jbe    0x40acef
  40ad80:	lea    r8d,[rcx-0xfe10]
  40ad87:	cmp    r8d,0xf
  40ad8b:	jbe    0x40acef
  40ad91:	lea    r8d,[rcx-0xfe30]
  40ad98:	cmp    r8d,0x3f
  40ad9c:	jbe    0x40acef
  40ada2:	lea    r8d,[rcx-0xff00]
  40ada9:	cmp    r8d,0x60
  40adad:	jbe    0x40acef
  40adb3:	lea    r8d,[rcx-0xffe0]
  40adba:	cmp    r8d,0x6
  40adbe:	jbe    0x40acef
  40adc4:	lea    r8d,[rcx-0x20000]
  40adcb:	cmp    r8d,0x1ffff
  40add2:	jbe    0x40acef
  40add8:	jmp    0x40ac59
  40addd:	nop    DWORD PTR [rax]
  40ade0:	mov    eax,0x1
  40ade5:	add    rsp,0x40
  40ade9:	pop    rbx
  40adea:	ret    
  40adeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40adf0:	cmp    ecx,0xe001f
  40adf6:	ja     0x40aea0
  40adfc:	cmp    ecx,0xe0001
  40ae02:	sete   r8b
  40ae06:	xor    eax,eax
  40ae08:	test   r8b,r8b
  40ae0b:	je     0x40acd7
  40ae11:	jmp    0x40acef
  40ae16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae20:	cmp    BYTE PTR [rbx+0x1],0x55
  40ae24:	mov    eax,0x1
  40ae29:	jne    0x40acef
  40ae2f:	cmp    BYTE PTR [rbx+0x2],0x43
  40ae33:	je     0x40af38
  40ae39:	cmp    BYTE PTR [rbx+0x2],0x43
  40ae3d:	je     0x40b031
  40ae43:	cmp    BYTE PTR [rbx+0x2],0x43
  40ae47:	mov    eax,0x1
  40ae4c:	jne    0x40acef
  40ae52:	cmp    BYTE PTR [rbx+0x3],0x2d
  40ae56:	jne    0x40acef
  40ae5c:	lea    rdx,[rip+0xc377]        # 0x4171da
  40ae63:	mov    DWORD PTR [rsp+0x30],0x0
  40ae6b:	mov    DWORD PTR [rsp+0x28],0x0
  40ae73:	mov    DWORD PTR [rsp+0x20],0x0
  40ae7b:	mov    r9d,0x52
  40ae81:	mov    r8d,0x4b
  40ae87:	mov    rcx,rbx
  40ae8a:	call   0x40ab70
  40ae8f:	cmp    eax,0x1
  40ae92:	sbb    eax,eax
  40ae94:	add    eax,0x2
  40ae97:	jmp    0x40acef
  40ae9c:	nop    DWORD PTR [rax+0x0]
  40aea0:	cmp    ecx,0xe007f
  40aea6:	setbe  r8b
  40aeaa:	jmp    0x40ae06
  40aeaf:	nop
  40aeb0:	cmp    BYTE PTR [rbx+0x1],0x49
  40aeb4:	mov    eax,0x1
  40aeb9:	jne    0x40acef
  40aebf:	cmp    BYTE PTR [rbx+0x2],0x47
  40aec3:	jne    0x40acef
  40aec9:	cmp    BYTE PTR [rbx+0x3],0x35
  40aecd:	jne    0x40acef
  40aed3:	mov    DWORD PTR [rsp+0x30],0x0
  40aedb:	mov    DWORD PTR [rsp+0x28],0x0
  40aee3:	xor    r9d,r9d
  40aee6:	mov    DWORD PTR [rsp+0x20],0x0
  40aeee:	xor    r8d,r8d
  40aef1:	lea    rdx,[rip+0xc2dd]        # 0x4171d5
  40aef8:	jmp    0x40ae87
  40aefa:	nop    WORD PTR [rax+rax*1+0x0]
  40af00:	cmp    BYTE PTR [rbx+0x1],0x42
  40af04:	mov    eax,0x1
  40af09:	jne    0x40acef
  40af0f:	cmp    BYTE PTR [rbx+0x2],0x32
  40af13:	je     0x40afe0
  40af19:	cmp    BYTE PTR [rbx+0x2],0x4b
  40af1d:	mov    eax,0x1
  40af22:	jne    0x40acef
  40af28:	cmp    BYTE PTR [rbx+0x3],0x1
  40af2c:	sbb    eax,eax
  40af2e:	not    eax
  40af30:	add    eax,0x2
  40af33:	jmp    0x40acef
  40af38:	cmp    BYTE PTR [rbx+0x3],0x2d
  40af3c:	jne    0x40ae39
  40af42:	lea    rdx,[rip+0xc277]        # 0x4171c0
  40af49:	mov    DWORD PTR [rsp+0x30],0x0
  40af51:	mov    DWORD PTR [rsp+0x28],0x0
  40af59:	mov    DWORD PTR [rsp+0x20],0x0
  40af61:	mov    r9d,0x50
  40af67:	mov    r8d,0x4a
  40af6d:	mov    rcx,rbx
  40af70:	call   0x40ab70
  40af75:	mov    edx,eax
  40af77:	mov    eax,0x2
  40af7c:	test   edx,edx
  40af7e:	jne    0x40acef
  40af84:	jmp    0x40ae39
  40af89:	nop    DWORD PTR [rax+0x0]
  40af90:	cmp    BYTE PTR [rbx+0x1],0x50
  40af94:	jne    0x40acef
  40af9a:	cmp    BYTE PTR [rbx+0x2],0x39
  40af9e:	jne    0x40acef
  40afa4:	cmp    BYTE PTR [rbx+0x3],0x34
  40afa8:	jne    0x40acef
  40afae:	mov    DWORD PTR [rsp+0x30],0x0
  40afb6:	mov    DWORD PTR [rsp+0x28],0x0
  40afbe:	xor    r9d,r9d
  40afc1:	mov    DWORD PTR [rsp+0x20],0x0
  40afc9:	mov    r8d,0x39
  40afcf:	lea    rdx,[rip+0xc20b]        # 0x4171e1
  40afd6:	jmp    0x40ae87
  40afdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40afe0:	cmp    BYTE PTR [rbx+0x3],0x33
  40afe4:	jne    0x40af19
  40afea:	lea    rdx,[rip+0xc1d6]        # 0x4171c7
  40aff1:	mov    DWORD PTR [rsp+0x30],0x0
  40aff9:	mov    DWORD PTR [rsp+0x28],0x0
  40b001:	mov    DWORD PTR [rsp+0x20],0x0
  40b009:	mov    r9d,0x32
  40b00f:	mov    r8d,0x31
  40b015:	mov    rcx,rbx
  40b018:	call   0x40ab70
  40b01d:	mov    edx,eax
  40b01f:	mov    eax,0x2
  40b024:	test   edx,edx
  40b026:	jne    0x40acef
  40b02c:	jmp    0x40af19
  40b031:	cmp    BYTE PTR [rbx+0x3],0x2d
  40b035:	jne    0x40ae43
  40b03b:	cmp    BYTE PTR [rbx+0x4],0x54
  40b03f:	jne    0x40ae43
  40b045:	cmp    BYTE PTR [rbx+0x5],0x57
  40b049:	jne    0x40ae43
  40b04f:	lea    rdx,[rip+0xc178]        # 0x4171ce
  40b056:	xor    r9d,r9d
  40b059:	xor    r8d,r8d
  40b05c:	mov    DWORD PTR [rsp+0x20],0x0
  40b064:	mov    rcx,rbx
  40b067:	call   0x40ab10
  40b06c:	mov    edx,eax
  40b06e:	mov    eax,0x2
  40b073:	test   edx,edx
  40b075:	jne    0x40acef
  40b07b:	jmp    0x40ae43
  40b080:	jmp    QWORD PTR [rip+0x133ba]        # 0x41e440
  40b086:	nop
  40b087:	nop
  40b088:	jmp    QWORD PTR [rip+0x133aa]        # 0x41e438
  40b08e:	nop
  40b08f:	nop
  40b090:	jmp    QWORD PTR [rip+0x1339a]        # 0x41e430
  40b096:	nop
  40b097:	nop
  40b098:	jmp    QWORD PTR [rip+0x1338a]        # 0x41e428
  40b09e:	nop
  40b09f:	nop
  40b0a0:	jmp    QWORD PTR [rip+0x133ba]        # 0x41e460
  40b0a6:	nop
  40b0a7:	nop
  40b0a8:	jmp    QWORD PTR [rip+0x133aa]        # 0x41e458
  40b0ae:	nop
  40b0af:	nop
  40b0b0:	jmp    QWORD PTR [rip+0x1339a]        # 0x41e450
  40b0b6:	nop
  40b0b7:	nop
  40b0b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b0c0:	push   rbx
  40b0c1:	sub    rsp,0x30
  40b0c5:	mov    rbx,rcx
  40b0c8:	mov    rcx,QWORD PTR [rip+0x12641]        # 0x41d710
  40b0cf:	call   0x40b670
  40b0d4:	cmp    rax,0xffffffffffffffff
  40b0d8:	mov    QWORD PTR [rsp+0x20],rax
  40b0dd:	je     0x40b155
  40b0df:	mov    ecx,0x8
  40b0e4:	call   0x411568
  40b0e9:	mov    rcx,QWORD PTR [rip+0x12620]        # 0x41d710
  40b0f0:	call   0x40b670
  40b0f5:	mov    rcx,QWORD PTR [rip+0x1261c]        # 0x41d718
  40b0fc:	mov    QWORD PTR [rsp+0x20],rax
  40b101:	call   0x40b670
  40b106:	lea    rdx,[rsp+0x20]
  40b10b:	lea    r8,[rsp+0x28]
  40b110:	mov    rcx,rbx
  40b113:	mov    QWORD PTR [rsp+0x28],rax
  40b118:	call   0x4115c8
  40b11d:	mov    rcx,QWORD PTR [rsp+0x20]
  40b122:	mov    rbx,rax
  40b125:	call   0x40b680
  40b12a:	mov    rcx,QWORD PTR [rsp+0x28]
  40b12f:	mov    QWORD PTR [rip+0x125da],rax        # 0x41d710
  40b136:	call   0x40b680
  40b13b:	mov    ecx,0x8
  40b140:	mov    QWORD PTR [rip+0x125d1],rax        # 0x41d718
  40b147:	call   0x411550
  40b14c:	mov    rax,rbx
  40b14f:	add    rsp,0x30
  40b153:	pop    rbx
  40b154:	ret    
  40b155:	mov    rax,QWORD PTR [rip+0xd2d4]        # 0x418430
  40b15c:	mov    rcx,rbx
  40b15f:	call   QWORD PTR [rax]
  40b161:	add    rsp,0x30
  40b165:	pop    rbx
  40b166:	ret    
  40b167:	nop    WORD PTR [rax+rax*1+0x0]
  40b170:	sub    rsp,0x28
  40b174:	call   0x40b0c0
  40b179:	test   rax,rax
  40b17c:	sete   al
  40b17f:	movzx  eax,al
  40b182:	neg    eax
  40b184:	add    rsp,0x28
  40b188:	ret    
  40b189:	nop
  40b18a:	nop
  40b18b:	nop
  40b18c:	nop
  40b18d:	nop
  40b18e:	nop
  40b18f:	nop
  40b190:	sub    rsp,0x28
  40b194:	mov    rax,QWORD PTR [rip+0x6f25]        # 0x4120c0
  40b19b:	mov    rax,QWORD PTR [rax]
  40b19e:	test   rax,rax
  40b1a1:	je     0x40b1c0
  40b1a3:	call   rax
  40b1a5:	mov    rax,QWORD PTR [rip+0x6f14]        # 0x4120c0
  40b1ac:	lea    rdx,[rax+0x8]
  40b1b0:	mov    rax,QWORD PTR [rax+0x8]
  40b1b4:	mov    QWORD PTR [rip+0x6f05],rdx        # 0x4120c0
  40b1bb:	test   rax,rax
  40b1be:	jne    0x40b1a3
  40b1c0:	add    rsp,0x28
  40b1c4:	ret    
  40b1c5:	nop
  40b1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b1d0:	push   rsi
  40b1d1:	push   rbx
  40b1d2:	sub    rsp,0x28
  40b1d6:	mov    rsi,QWORD PTR [rip+0xd1c3]        # 0x4183a0
  40b1dd:	mov    rax,QWORD PTR [rsi]
  40b1e0:	cmp    eax,0xffffffff
  40b1e3:	mov    ebx,eax
  40b1e5:	je     0x40b210
  40b1e7:	test   ebx,ebx
  40b1e9:	je     0x40b1fa
  40b1eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b1f0:	mov    eax,ebx
  40b1f2:	call   QWORD PTR [rsi+rax*8]
  40b1f5:	sub    ebx,0x1
  40b1f8:	jne    0x40b1f0
  40b1fa:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x40b190
  40b201:	add    rsp,0x28
  40b205:	pop    rbx
  40b206:	pop    rsi
  40b207:	jmp    0x40b170
  40b20c:	nop    DWORD PTR [rax+0x0]
  40b210:	xor    ebx,ebx
  40b212:	jmp    0x40b216
  40b214:	mov    ebx,eax
  40b216:	lea    edx,[rbx+0x1]
  40b219:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40b21e:	mov    rax,rdx
  40b221:	jne    0x40b214
  40b223:	jmp    0x40b1e7
  40b225:	nop
  40b226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b230:	mov    eax,DWORD PTR [rip+0x1108a]        # 0x41c2c0
  40b236:	test   eax,eax
  40b238:	je     0x40b240
  40b23a:	repz ret 
  40b23c:	nop    DWORD PTR [rax+0x0]
  40b240:	mov    DWORD PTR [rip+0x11076],0x1        # 0x41c2c0
  40b24a:	jmp    0x40b1d0
  40b24c:	nop
  40b24d:	nop
  40b24e:	nop
  40b24f:	nop
  40b250:	mov    rax,QWORD PTR [rip+0x13389]        # 0x41e5e0
  40b257:	rex.W jmp rax
  40b25a:	nop
  40b25b:	nop
  40b25c:	nop
  40b25d:	nop
  40b25e:	nop
  40b25f:	nop
  40b260:	xor    eax,eax
  40b262:	ret    
  40b263:	nop
  40b264:	nop
  40b265:	nop
  40b266:	nop
  40b267:	nop
  40b268:	nop
  40b269:	nop
  40b26a:	nop
  40b26b:	nop
  40b26c:	nop
  40b26d:	nop
  40b26e:	nop
  40b26f:	nop
  40b270:	push   r12
  40b272:	push   rbp
  40b273:	push   rdi
  40b274:	push   rsi
  40b275:	push   rbx
  40b276:	sub    rsp,0x40
  40b27a:	mov    rbx,QWORD PTR [rip+0x6edf]        # 0x412160
  40b281:	movabs rax,0x2b992ddfa232
  40b28b:	mov    QWORD PTR [rsp+0x20],0x0
  40b294:	cmp    rbx,rax
  40b297:	je     0x40b2b0
  40b299:	not    rbx
  40b29c:	mov    QWORD PTR [rip+0x6ecd],rbx        # 0x412170
  40b2a3:	add    rsp,0x40
  40b2a7:	pop    rbx
  40b2a8:	pop    rsi
  40b2a9:	pop    rdi
  40b2aa:	pop    rbp
  40b2ab:	pop    r12
  40b2ad:	ret    
  40b2ae:	xchg   ax,ax
  40b2b0:	lea    rcx,[rsp+0x20]
  40b2b5:	call   QWORD PTR [rip+0x13235]        # 0x41e4f0
  40b2bb:	mov    r12,QWORD PTR [rsp+0x20]
  40b2c0:	call   QWORD PTR [rip+0x131e2]        # 0x41e4a8
  40b2c6:	mov    ebp,eax
  40b2c8:	call   QWORD PTR [rip+0x131e2]        # 0x41e4b0
  40b2ce:	mov    edi,eax
  40b2d0:	call   QWORD PTR [rip+0x1322a]        # 0x41e500
  40b2d6:	lea    rcx,[rsp+0x30]
  40b2db:	mov    esi,eax
  40b2dd:	call   QWORD PTR [rip+0x13245]        # 0x41e528
  40b2e3:	xor    r12,QWORD PTR [rsp+0x30]
  40b2e8:	mov    edx,edi
  40b2ea:	movabs rax,0xffffffffffff
  40b2f4:	xor    rbp,r12
  40b2f7:	mov    rdi,rbp
  40b2fa:	xor    rdi,rdx
  40b2fd:	mov    edx,esi
  40b2ff:	xor    rdi,rdx
  40b302:	mov    rsi,rdi
  40b305:	and    rsi,rax
  40b308:	cmp    rsi,rbx
  40b30b:	je     0x40b330
  40b30d:	mov    rax,rsi
  40b310:	not    rax
  40b313:	mov    QWORD PTR [rip+0x6e46],rsi        # 0x412160
  40b31a:	mov    QWORD PTR [rip+0x6e4f],rax        # 0x412170
  40b321:	add    rsp,0x40
  40b325:	pop    rbx
  40b326:	pop    rsi
  40b327:	pop    rdi
  40b328:	pop    rbp
  40b329:	pop    r12
  40b32b:	ret    
  40b32c:	nop    DWORD PTR [rax+0x0]
  40b330:	movabs rax,0xffffd466d2205dcc
  40b33a:	movabs rsi,0x2b992ddfa233
  40b344:	jmp    0x40b313
  40b346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b350:	push   rbp
  40b351:	push   rsi
  40b352:	push   rbx
  40b353:	mov    rbp,rsp
  40b356:	sub    rsp,0x70
  40b35a:	mov    rsi,rcx
  40b35d:	lea    rcx,[rip+0x10f9c]        # 0x41c300
  40b364:	call   QWORD PTR [rip+0x131ce]        # 0x41e538
  40b36a:	mov    rbx,QWORD PTR [rip+0x11087]        # 0x41c3f8
  40b371:	xor    r8d,r8d
  40b374:	lea    rdx,[rbp-0x28]
  40b378:	mov    rcx,rbx
  40b37b:	call   QWORD PTR [rip+0x131bf]        # 0x41e540
  40b381:	test   rax,rax
  40b384:	mov    r9,rax
  40b387:	je     0x40b430
  40b38d:	lea    rax,[rbp-0x20]
  40b391:	mov    QWORD PTR [rsp+0x38],0x0
  40b39a:	mov    r8,rbx
  40b39d:	mov    rdx,QWORD PTR [rbp-0x28]
  40b3a1:	xor    ecx,ecx
  40b3a3:	mov    QWORD PTR [rsp+0x30],rax
  40b3a8:	lea    rax,[rbp-0x18]
  40b3ac:	mov    QWORD PTR [rsp+0x28],rax
  40b3b1:	lea    rax,[rip+0x10f48]        # 0x41c300
  40b3b8:	mov    QWORD PTR [rsp+0x20],rax
  40b3bd:	call   QWORD PTR [rip+0x13185]        # 0x41e548
  40b3c3:	mov    rax,QWORD PTR [rip+0x1102e]        # 0x41c3f8
  40b3ca:	xor    ecx,ecx
  40b3cc:	mov    QWORD PTR [rip+0x10fad],rsi        # 0x41c380
  40b3d3:	mov    DWORD PTR [rip+0x11423],0xc0000409        # 0x41c800
  40b3dd:	mov    DWORD PTR [rip+0x1141d],0x1        # 0x41c804
  40b3e7:	mov    QWORD PTR [rip+0x11422],rax        # 0x41c810
  40b3ee:	mov    rax,QWORD PTR [rip+0x6d6b]        # 0x412160
  40b3f5:	mov    QWORD PTR [rbp-0x10],rax
  40b3f9:	mov    rax,QWORD PTR [rip+0x6d70]        # 0x412170
  40b400:	mov    QWORD PTR [rbp-0x8],rax
  40b404:	call   QWORD PTR [rip+0x13156]        # 0x41e560
  40b40a:	lea    rcx,[rip+0xc7ef]        # 0x417c00
  40b411:	call   QWORD PTR [rip+0x13169]        # 0x41e580
  40b417:	call   QWORD PTR [rip+0x13083]        # 0x41e4a0
  40b41d:	mov    edx,0xc0000409
  40b422:	mov    rcx,rax
  40b425:	call   QWORD PTR [rip+0x13145]        # 0x41e570
  40b42b:	call   0x411548
  40b430:	mov    rax,QWORD PTR [rbp+0x18]
  40b434:	mov    QWORD PTR [rip+0x10fbd],rax        # 0x41c3f8
  40b43b:	lea    rax,[rbp+0x8]
  40b43f:	mov    QWORD PTR [rip+0x10f52],rax        # 0x41c398
  40b446:	jmp    0x40b3c3
  40b44b:	nop
  40b44c:	nop
  40b44d:	nop
  40b44e:	nop
  40b44f:	nop
  40b450:	sub    rsp,0x28
  40b454:	test   edx,edx
  40b456:	je     0x40b470
  40b458:	cmp    edx,0x3
  40b45b:	je     0x40b470
  40b45d:	mov    eax,0x1
  40b462:	add    rsp,0x28
  40b466:	ret    
  40b467:	nop    WORD PTR [rax+rax*1+0x0]
  40b470:	call   0x40c160
  40b475:	mov    eax,0x1
  40b47a:	add    rsp,0x28
  40b47e:	ret    
  40b47f:	nop
  40b480:	push   rsi
  40b481:	push   rbx
  40b482:	sub    rsp,0x28
  40b486:	mov    rax,QWORD PTR [rip+0xcef3]        # 0x418380
  40b48d:	cmp    DWORD PTR [rax],0x2
  40b490:	je     0x40b498
  40b492:	mov    DWORD PTR [rax],0x2
  40b498:	cmp    edx,0x2
  40b49b:	je     0x40b4b0
  40b49d:	cmp    edx,0x1
  40b4a0:	je     0x40b4e2
  40b4a2:	mov    eax,0x1
  40b4a7:	add    rsp,0x28
  40b4ab:	pop    rbx
  40b4ac:	pop    rsi
  40b4ad:	ret    
  40b4ae:	xchg   ax,ax
  40b4b0:	lea    rbx,[rip+0x14ba9]        # 0x420060
  40b4b7:	lea    rsi,[rip+0x14ba2]        # 0x420060
  40b4be:	cmp    rbx,rsi
  40b4c1:	je     0x40b4a2
  40b4c3:	mov    rax,QWORD PTR [rbx]
  40b4c6:	test   rax,rax
  40b4c9:	je     0x40b4cd
  40b4cb:	call   rax
  40b4cd:	add    rbx,0x8
  40b4d1:	cmp    rbx,rsi
  40b4d4:	jne    0x40b4c3
  40b4d6:	mov    eax,0x1
  40b4db:	add    rsp,0x28
  40b4df:	pop    rbx
  40b4e0:	pop    rsi
  40b4e1:	ret    
  40b4e2:	call   0x40c160
  40b4e7:	jmp    0x40b4a2
  40b4e9:	nop    DWORD PTR [rax+0x0]
  40b4f0:	xor    eax,eax
  40b4f2:	ret    
  40b4f3:	nop
  40b4f4:	nop
  40b4f5:	nop
  40b4f6:	nop
  40b4f7:	nop
  40b4f8:	nop
  40b4f9:	nop
  40b4fa:	nop
  40b4fb:	nop
  40b4fc:	nop
  40b4fd:	nop
  40b4fe:	nop
  40b4ff:	nop
  40b500:	sub    rsp,0x58
  40b504:	mov    rax,QWORD PTR [rip+0x113d5]        # 0x41c8e0
  40b50b:	test   rax,rax
  40b50e:	je     0x40b53c
  40b510:	movsd  xmm0,QWORD PTR [rsp+0x80]
  40b519:	mov    DWORD PTR [rsp+0x20],ecx
  40b51d:	lea    rcx,[rsp+0x20]
  40b522:	mov    QWORD PTR [rsp+0x28],rdx
  40b527:	movsd  QWORD PTR [rsp+0x30],xmm2
  40b52d:	movsd  QWORD PTR [rsp+0x38],xmm3
  40b533:	movsd  QWORD PTR [rsp+0x40],xmm0
  40b539:	call   rax
  40b53b:	nop
  40b53c:	add    rsp,0x58
  40b540:	ret    
  40b541:	nop    DWORD PTR [rax+rax*1+0x0]
  40b546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b550:	mov    QWORD PTR [rip+0x11389],rcx        # 0x41c8e0
  40b557:	jmp    0x4115a0
  40b55c:	nop    DWORD PTR [rax+0x0]
  40b560:	push   rsi
  40b561:	push   rbx
  40b562:	sub    rsp,0x78
  40b566:	movaps XMMWORD PTR [rsp+0x40],xmm6
  40b56b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  40b570:	movaps XMMWORD PTR [rsp+0x60],xmm8
  40b576:	cmp    DWORD PTR [rcx],0x6
  40b579:	ja     0x40b650
  40b57f:	mov    edx,DWORD PTR [rcx]
  40b581:	lea    rax,[rip+0xc7bc]        # 0x417d44
  40b588:	movsxd rdx,DWORD PTR [rax+rdx*4]
  40b58c:	add    rax,rdx
  40b58f:	jmp    rax
  40b591:	lea    rbx,[rip+0xc688]        # 0x417c20
  40b598:	nop    DWORD PTR [rax+rax*1+0x0]
  40b5a0:	movsd  xmm8,QWORD PTR [rcx+0x20]
  40b5a6:	mov    rsi,QWORD PTR [rcx+0x8]
  40b5aa:	movsd  xmm7,QWORD PTR [rcx+0x18]
  40b5af:	movsd  xmm6,QWORD PTR [rcx+0x10]
  40b5b4:	call   0x4115b8
  40b5b9:	movsd  QWORD PTR [rsp+0x30],xmm8
  40b5c0:	lea    rcx,[rax+0x60]
  40b5c4:	lea    rdx,[rip+0xc74d]        # 0x417d18
  40b5cb:	movsd  QWORD PTR [rsp+0x28],xmm7
  40b5d1:	mov    r9,rsi
  40b5d4:	mov    r8,rbx
  40b5d7:	movsd  QWORD PTR [rsp+0x20],xmm6
  40b5dd:	call   0x411518
  40b5e2:	nop
  40b5e3:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  40b5e8:	xor    eax,eax
  40b5ea:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  40b5ef:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  40b5f5:	add    rsp,0x78
  40b5f9:	pop    rbx
  40b5fa:	pop    rsi
  40b5fb:	ret    
  40b5fc:	nop    DWORD PTR [rax+0x0]
  40b600:	lea    rbx,[rip+0xc638]        # 0x417c3f
  40b607:	jmp    0x40b5a0
  40b609:	nop    DWORD PTR [rax+0x0]
  40b610:	lea    rbx,[rip+0xc649]        # 0x417c60
  40b617:	jmp    0x40b5a0
  40b619:	nop    DWORD PTR [rax+0x0]
  40b620:	lea    rbx,[rip+0xc6a9]        # 0x417cd0
  40b627:	jmp    0x40b5a0
  40b62c:	nop    DWORD PTR [rax+0x0]
  40b630:	lea    rbx,[rip+0xc671]        # 0x417ca8
  40b637:	jmp    0x40b5a0
  40b63c:	nop    DWORD PTR [rax+0x0]
  40b640:	lea    rbx,[rip+0xc639]        # 0x417c80
  40b647:	jmp    0x40b5a0
  40b64c:	nop    DWORD PTR [rax+0x0]
  40b650:	lea    rbx,[rip+0xc6af]        # 0x417d06
  40b657:	jmp    0x40b5a0
  40b65c:	nop
  40b65d:	nop
  40b65e:	nop
  40b65f:	nop
  40b660:	fninit 
  40b662:	ret    
  40b663:	nop
  40b664:	nop
  40b665:	nop
  40b666:	nop
  40b667:	nop
  40b668:	nop
  40b669:	nop
  40b66a:	nop
  40b66b:	nop
  40b66c:	nop
  40b66d:	nop
  40b66e:	nop
  40b66f:	nop
  40b670:	mov    rax,rcx
  40b673:	ret    
  40b674:	xchg   ax,ax
  40b676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b680:	mov    rax,rcx
  40b683:	ret    
  40b684:	nop
  40b685:	nop
  40b686:	nop
  40b687:	nop
  40b688:	nop
  40b689:	nop
  40b68a:	nop
  40b68b:	nop
  40b68c:	nop
  40b68d:	nop
  40b68e:	nop
  40b68f:	nop
  40b690:	push   rsi
  40b691:	push   rbx
  40b692:	sub    rsp,0x38
  40b696:	lea    rax,[rsp+0x58]
  40b69b:	mov    rbx,rcx
  40b69e:	mov    QWORD PTR [rsp+0x58],rdx
  40b6a3:	mov    QWORD PTR [rsp+0x60],r8
  40b6a8:	mov    QWORD PTR [rsp+0x68],r9
  40b6ad:	mov    QWORD PTR [rsp+0x28],rax
  40b6b2:	call   0x4115b8
  40b6b7:	lea    rcx,[rip+0xc6a2]        # 0x417d60
  40b6be:	lea    r9,[rax+0x60]
  40b6c2:	mov    r8d,0x1b
  40b6c8:	mov    edx,0x1
  40b6cd:	call   0x4114f0
  40b6d2:	mov    rsi,QWORD PTR [rsp+0x28]
  40b6d7:	call   0x4115b8
  40b6dc:	lea    rcx,[rax+0x60]
  40b6e0:	mov    rdx,rbx
  40b6e3:	mov    r8,rsi
  40b6e6:	call   0x411410
  40b6eb:	call   0x411548
  40b6f0:	nop
  40b6f1:	nop    DWORD PTR [rax+rax*1+0x0]
  40b6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b700:	push   r13
  40b702:	push   r12
  40b704:	push   rbp
  40b705:	push   rdi
  40b706:	push   rsi
  40b707:	push   rbx
  40b708:	sub    rsp,0x58
  40b70c:	movsxd rbp,DWORD PTR [rip+0x111f1]        # 0x41c904
  40b713:	mov    rbx,rcx
  40b716:	mov    rsi,rdx
  40b719:	mov    rdi,r8
  40b71c:	test   ebp,ebp
  40b71e:	jle    0x40b81a
  40b724:	mov    rax,QWORD PTR [rip+0x111dd]        # 0x41c908
  40b72b:	xor    r9d,r9d
  40b72e:	add    rax,0x8
  40b732:	mov    r10,QWORD PTR [rax]
  40b735:	cmp    rbx,r10
  40b738:	jb     0x40b74e
  40b73a:	mov    rdx,QWORD PTR [rax+0x8]
  40b73e:	mov    r11d,DWORD PTR [rdx+0x8]
  40b742:	add    r10,r11
  40b745:	cmp    rbx,r10
  40b748:	jb     0x40b800
  40b74e:	add    r9d,0x1
  40b752:	add    rax,0x18
  40b756:	cmp    r9d,ebp
  40b759:	jne    0x40b732
  40b75b:	mov    rcx,rbx
  40b75e:	call   0x40c370
  40b763:	test   rax,rax
  40b766:	mov    r12,rax
  40b769:	je     0x40b852
  40b76f:	lea    rbp,[rbp+rbp*2+0x0]
  40b774:	shl    rbp,0x3
  40b778:	mov    r13,rbp
  40b77b:	add    r13,QWORD PTR [rip+0x11186]        # 0x41c908
  40b782:	mov    QWORD PTR [r13+0x10],rax
  40b786:	mov    DWORD PTR [r13+0x0],0x0
  40b78e:	call   0x40c490
  40b793:	mov    edx,DWORD PTR [r12+0xc]
  40b798:	mov    r8d,0x30
  40b79e:	add    rax,rdx
  40b7a1:	lea    rdx,[rsp+0x20]
  40b7a6:	mov    QWORD PTR [r13+0x8],rax
  40b7aa:	mov    rax,QWORD PTR [rip+0x11157]        # 0x41c908
  40b7b1:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  40b7b6:	call   QWORD PTR [rip+0x12dd4]        # 0x41e590
  40b7bc:	test   rax,rax
  40b7bf:	je     0x40b835
  40b7c1:	mov    eax,DWORD PTR [rsp+0x44]
  40b7c5:	lea    edx,[rax-0x4]
  40b7c8:	and    edx,0xfffffffb
  40b7cb:	je     0x40b7f9
  40b7cd:	sub    eax,0x40
  40b7d0:	and    eax,0xffffffbf
  40b7d3:	je     0x40b7f9
  40b7d5:	mov    r9,rbp
  40b7d8:	add    r9,QWORD PTR [rip+0x11129]        # 0x41c908
  40b7df:	mov    r8d,0x40
  40b7e5:	mov    rdx,QWORD PTR [rsp+0x38]
  40b7ea:	mov    rcx,QWORD PTR [rsp+0x20]
  40b7ef:	call   QWORD PTR [rip+0x12d93]        # 0x41e588
  40b7f5:	test   eax,eax
  40b7f7:	je     0x40b821
  40b7f9:	add    DWORD PTR [rip+0x11104],0x1        # 0x41c904
  40b800:	mov    r8,rdi
  40b803:	mov    rdx,rsi
  40b806:	mov    rcx,rbx
  40b809:	add    rsp,0x58
  40b80d:	pop    rbx
  40b80e:	pop    rsi
  40b80f:	pop    rdi
  40b810:	pop    rbp
  40b811:	pop    r12
  40b813:	pop    r13
  40b815:	jmp    0x4114a8
  40b81a:	xor    ebp,ebp
  40b81c:	jmp    0x40b75b
  40b821:	call   QWORD PTR [rip+0x12c99]        # 0x41e4c0
  40b827:	lea    rcx,[rip+0xc5aa]        # 0x417dd8
  40b82e:	mov    edx,eax
  40b830:	call   0x40b690
  40b835:	mov    rax,QWORD PTR [rip+0x110cc]        # 0x41c908
  40b83c:	mov    edx,DWORD PTR [r12+0x8]
  40b841:	lea    rcx,[rip+0xc558]        # 0x417da0
  40b848:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  40b84d:	call   0x40b690
  40b852:	lea    rcx,[rip+0xc527]        # 0x417d80
  40b859:	mov    rdx,rbx
  40b85c:	call   0x40b690
  40b861:	nop
  40b862:	nop    DWORD PTR [rax+0x0]
  40b866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b870:	push   rbp
  40b871:	push   r14
  40b873:	push   r13
  40b875:	push   r12
  40b877:	push   rdi
  40b878:	push   rsi
  40b879:	push   rbx
  40b87a:	mov    rbp,rsp
  40b87d:	sub    rsp,0x60
  40b881:	mov    ebx,DWORD PTR [rip+0x11079]        # 0x41c900
  40b887:	test   ebx,ebx
  40b889:	je     0x40b8a0
  40b88b:	mov    rsp,rbp
  40b88e:	pop    rbx
  40b88f:	pop    rsi
  40b890:	pop    rdi
  40b891:	pop    r12
  40b893:	pop    r13
  40b895:	pop    r14
  40b897:	pop    rbp
  40b898:	ret    
  40b899:	nop    DWORD PTR [rax+0x0]
  40b8a0:	mov    DWORD PTR [rip+0x11056],0x1        # 0x41c900
  40b8aa:	call   0x40c3c0
  40b8af:	cdqe   
  40b8b1:	lea    rax,[rax+rax*2]
  40b8b5:	lea    rax,[rax*8+0x1e]
  40b8bd:	and    rax,0xfffffffffffffff0
  40b8c1:	call   0x40c5e0
  40b8c6:	mov    rsi,QWORD PTR [rip+0xcae3]        # 0x4183b0
  40b8cd:	mov    rbx,QWORD PTR [rip+0xcaec]        # 0x4183c0
  40b8d4:	sub    rsp,rax
  40b8d7:	mov    DWORD PTR [rip+0x11023],0x0        # 0x41c904
  40b8e1:	lea    rax,[rsp+0x20]
  40b8e6:	mov    QWORD PTR [rip+0x1101b],rax        # 0x41c908
  40b8ed:	mov    rax,rsi
  40b8f0:	sub    rax,rbx
  40b8f3:	cmp    rax,0x7
  40b8f7:	jle    0x40b88b
  40b8f9:	cmp    rax,0xb
  40b8fd:	jle    0x40b925
  40b8ff:	mov    r11d,DWORD PTR [rbx]
  40b902:	test   r11d,r11d
  40b905:	jne    0x40ba50
  40b90b:	mov    r10d,DWORD PTR [rbx+0x4]
  40b90f:	test   r10d,r10d
  40b912:	jne    0x40ba50
  40b918:	mov    r9d,DWORD PTR [rbx+0x8]
  40b91c:	test   r9d,r9d
  40b91f:	jne    0x40b93c
  40b921:	add    rbx,0xc
  40b925:	mov    r8d,DWORD PTR [rbx]
  40b928:	test   r8d,r8d
  40b92b:	jne    0x40ba50
  40b931:	mov    ecx,DWORD PTR [rbx+0x4]
  40b934:	test   ecx,ecx
  40b936:	jne    0x40ba50
  40b93c:	mov    edx,DWORD PTR [rbx+0x8]
  40b93f:	cmp    edx,0x1
  40b942:	jne    0x40bb5c
  40b948:	add    rbx,0xc
  40b94c:	cmp    rbx,rsi
  40b94f:	jae    0x40b88b
  40b955:	mov    r12,QWORD PTR [rip+0xca84]        # 0x4183e0
  40b95c:	lea    r13,[rbp-0x30]
  40b960:	movabs r14,0xffffffff00000000
  40b96a:	mov    ecx,DWORD PTR [rbx+0x4]
  40b96d:	mov    eax,DWORD PTR [rbx]
  40b96f:	movzx  edx,BYTE PTR [rbx+0x8]
  40b973:	add    rax,r12
  40b976:	add    rcx,r12
  40b979:	cmp    edx,0x10
  40b97c:	mov    r8,QWORD PTR [rax]
  40b97f:	je     0x40bac6
  40b985:	jbe    0x40ba8d
  40b98b:	cmp    edx,0x20
  40b98e:	je     0x40bb0f
  40b994:	cmp    edx,0x40
  40b997:	jne    0x40bafb
  40b99d:	sub    r8,rax
  40b9a0:	mov    rdx,r13
  40b9a3:	mov    rdi,r13
  40b9a6:	mov    rax,r8
  40b9a9:	add    rax,QWORD PTR [rcx]
  40b9ac:	mov    r8d,0x8
  40b9b2:	mov    QWORD PTR [rbp-0x30],rax
  40b9b6:	call   0x40b700
  40b9bb:	add    rbx,0xc
  40b9bf:	cmp    rbx,rsi
  40b9c2:	jb     0x40b96a
  40b9c4:	mov    eax,DWORD PTR [rip+0x10f3a]        # 0x41c904
  40b9ca:	xor    ebx,ebx
  40b9cc:	xor    esi,esi
  40b9ce:	test   eax,eax
  40b9d0:	jle    0x40b88b
  40b9d6:	mov    r14,QWORD PTR [rip+0x12bb3]        # 0x41e590
  40b9dd:	lea    r13,[rbp-0x34]
  40b9e1:	mov    r12,QWORD PTR [rip+0x12ba0]        # 0x41e588
  40b9e8:	jmp    0x40ba03
  40b9ea:	nop    WORD PTR [rax+rax*1+0x0]
  40b9f0:	add    esi,0x1
  40b9f3:	add    rbx,0x18
  40b9f7:	cmp    esi,DWORD PTR [rip+0x10f07]        # 0x41c904
  40b9fd:	jge    0x40b88b
  40ba03:	mov    rax,rbx
  40ba06:	add    rax,QWORD PTR [rip+0x10efb]        # 0x41c908
  40ba0d:	mov    edx,DWORD PTR [rax]
  40ba0f:	test   edx,edx
  40ba11:	je     0x40b9f0
  40ba13:	mov    rcx,QWORD PTR [rax+0x8]
  40ba17:	mov    r8d,0x30
  40ba1d:	mov    rdx,rdi
  40ba20:	call   r14
  40ba23:	test   rax,rax
  40ba26:	je     0x40bb3e
  40ba2c:	mov    rax,QWORD PTR [rip+0x10ed5]        # 0x41c908
  40ba33:	mov    r9,r13
  40ba36:	mov    rdx,QWORD PTR [rbp-0x18]
  40ba3a:	mov    rcx,QWORD PTR [rbp-0x30]
  40ba3e:	mov    r8d,DWORD PTR [rax+rbx*1]
  40ba42:	call   r12
  40ba45:	jmp    0x40b9f0
  40ba47:	nop    WORD PTR [rax+rax*1+0x0]
  40ba50:	cmp    rbx,rsi
  40ba53:	jae    0x40b88b
  40ba59:	mov    r12,QWORD PTR [rip+0xc980]        # 0x4183e0
  40ba60:	lea    rdi,[rbp-0x30]
  40ba64:	mov    ecx,DWORD PTR [rbx+0x4]
  40ba67:	mov    eax,DWORD PTR [rbx]
  40ba69:	mov    r8d,0x4
  40ba6f:	mov    rdx,rdi
  40ba72:	add    rbx,0x8
  40ba76:	add    rcx,r12
  40ba79:	add    eax,DWORD PTR [rcx]
  40ba7b:	mov    DWORD PTR [rbp-0x30],eax
  40ba7e:	call   0x40b700
  40ba83:	cmp    rbx,rsi
  40ba86:	jb     0x40ba64
  40ba88:	jmp    0x40b9c4
  40ba8d:	cmp    edx,0x8
  40ba90:	jne    0x40bafb
  40ba92:	movzx  edx,BYTE PTR [rcx]
  40ba95:	mov    rdi,r13
  40ba98:	mov    r10,rdx
  40ba9b:	or     r10,0xffffffffffffff00
  40baa2:	test   dl,dl
  40baa4:	cmovs  rdx,r10
  40baa8:	sub    rdx,rax
  40baab:	lea    rax,[r8+rdx*1]
  40baaf:	mov    r8d,0x1
  40bab5:	mov    rdx,r13
  40bab8:	mov    QWORD PTR [rbp-0x30],rax
  40babc:	call   0x40b700
  40bac1:	jmp    0x40b9bb
  40bac6:	movzx  edx,WORD PTR [rcx]
  40bac9:	mov    rdi,r13
  40bacc:	mov    r10,rdx
  40bacf:	or     r10,0xffffffffffff0000
  40bad6:	test   dx,dx
  40bad9:	cmovs  rdx,r10
  40badd:	sub    rdx,rax
  40bae0:	lea    rax,[r8+rdx*1]
  40bae4:	mov    r8d,0x2
  40baea:	mov    rdx,r13
  40baed:	mov    QWORD PTR [rbp-0x30],rax
  40baf1:	call   0x40b700
  40baf6:	jmp    0x40b9bb
  40bafb:	lea    rcx,[rip+0xc336]        # 0x417e38
  40bb02:	mov    QWORD PTR [rbp-0x30],0x0
  40bb0a:	call   0x40b690
  40bb0f:	mov    edx,DWORD PTR [rcx]
  40bb11:	mov    rdi,r13
  40bb14:	mov    r10,rdx
  40bb17:	or     r10,r14
  40bb1a:	test   edx,edx
  40bb1c:	cmovs  rdx,r10
  40bb20:	sub    rdx,rax
  40bb23:	lea    rax,[r8+rdx*1]
  40bb27:	mov    r8d,0x4
  40bb2d:	mov    rdx,r13
  40bb30:	mov    QWORD PTR [rbp-0x30],rax
  40bb34:	call   0x40b700
  40bb39:	jmp    0x40b9bb
  40bb3e:	add    rbx,QWORD PTR [rip+0x10dc3]        # 0x41c908
  40bb45:	lea    rcx,[rip+0xc254]        # 0x417da0
  40bb4c:	mov    rax,QWORD PTR [rbx+0x10]
  40bb50:	mov    r8,QWORD PTR [rbx+0x8]
  40bb54:	mov    edx,DWORD PTR [rax+0x8]
  40bb57:	call   0x40b690
  40bb5c:	lea    rcx,[rip+0xc29d]        # 0x417e00
  40bb63:	call   0x40b690
  40bb68:	nop
  40bb69:	nop
  40bb6a:	nop
  40bb6b:	nop
  40bb6c:	nop
  40bb6d:	nop
  40bb6e:	nop
  40bb6f:	nop
  40bb70:	sub    rsp,0x28
  40bb74:	mov    eax,DWORD PTR [rcx]
  40bb76:	cmp    eax,0xc0000091
  40bb7b:	ja     0x40bbe0
  40bb7d:	cmp    eax,0xc000008d
  40bb82:	jae    0x40bbff
  40bb84:	cmp    eax,0xc0000008
  40bb89:	je     0x40bca0
  40bb8f:	ja     0x40bc70
  40bb95:	cmp    eax,0x80000002
  40bb9a:	je     0x40bca0
  40bba0:	cmp    eax,0xc0000005
  40bba5:	jne    0x40bc7e
  40bbab:	xor    edx,edx
  40bbad:	mov    ecx,0xb
  40bbb2:	call   0x411468
  40bbb7:	cmp    rax,0x1
  40bbbb:	je     0x40bd00
  40bbc1:	test   rax,rax
  40bbc4:	je     0x40bce0
  40bbca:	mov    ecx,0xb
  40bbcf:	call   rax
  40bbd1:	xor    eax,eax
  40bbd3:	add    rsp,0x28
  40bbd7:	ret    
  40bbd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bbe0:	cmp    eax,0xc0000094
  40bbe5:	je     0x40bcb0
  40bbeb:	ja     0x40bc30
  40bbed:	cmp    eax,0xc0000092
  40bbf2:	je     0x40bca0
  40bbf8:	cmp    eax,0xc0000093
  40bbfd:	jne    0x40bc7e
  40bbff:	xor    edx,edx
  40bc01:	mov    ecx,0x8
  40bc06:	call   0x411468
  40bc0b:	cmp    rax,0x1
  40bc0f:	mov    rdx,rax
  40bc12:	je     0x40bc88
  40bc14:	test   rdx,rdx
  40bc17:	mov    eax,0x1
  40bc1c:	je     0x40bbd3
  40bc1e:	mov    ecx,0x8
  40bc23:	call   rdx
  40bc25:	xor    eax,eax
  40bc27:	add    rsp,0x28
  40bc2b:	ret    
  40bc2c:	nop    DWORD PTR [rax+0x0]
  40bc30:	cmp    eax,0xc0000095
  40bc35:	je     0x40bca0
  40bc37:	cmp    eax,0xc0000096
  40bc3c:	jne    0x40bc7e
  40bc3e:	xor    edx,edx
  40bc40:	mov    ecx,0x4
  40bc45:	call   0x411468
  40bc4a:	cmp    rax,0x1
  40bc4e:	je     0x40bcea
  40bc54:	test   rax,rax
  40bc57:	je     0x40bce0
  40bc5d:	mov    ecx,0x4
  40bc62:	call   rax
  40bc64:	xor    eax,eax
  40bc66:	jmp    0x40bbd3
  40bc6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bc70:	cmp    eax,0xc000001d
  40bc75:	je     0x40bc3e
  40bc77:	cmp    eax,0xc000008c
  40bc7c:	je     0x40bca0
  40bc7e:	mov    eax,0x1
  40bc83:	add    rsp,0x28
  40bc87:	ret    
  40bc88:	mov    edx,0x1
  40bc8d:	mov    ecx,0x8
  40bc92:	call   0x411468
  40bc97:	call   0x40b660
  40bc9c:	nop    DWORD PTR [rax+0x0]
  40bca0:	xor    eax,eax
  40bca2:	add    rsp,0x28
  40bca6:	ret    
  40bca7:	nop    WORD PTR [rax+rax*1+0x0]
  40bcb0:	xor    edx,edx
  40bcb2:	mov    ecx,0x8
  40bcb7:	call   0x411468
  40bcbc:	cmp    rax,0x1
  40bcc0:	mov    rdx,rax
  40bcc3:	jne    0x40bc14
  40bcc9:	mov    edx,0x1
  40bcce:	mov    ecx,0x8
  40bcd3:	call   0x411468
  40bcd8:	xor    eax,eax
  40bcda:	jmp    0x40bbd3
  40bcdf:	nop
  40bce0:	mov    eax,0x4
  40bce5:	add    rsp,0x28
  40bce9:	ret    
  40bcea:	mov    edx,0x1
  40bcef:	mov    ecx,0x4
  40bcf4:	call   0x411468
  40bcf9:	xor    eax,eax
  40bcfb:	jmp    0x40bbd3
  40bd00:	mov    edx,0x1
  40bd05:	mov    ecx,0xb
  40bd0a:	call   0x411468
  40bd0f:	xor    eax,eax
  40bd11:	jmp    0x40bbd3
  40bd16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd20:	push   r12
  40bd22:	push   rbp
  40bd23:	push   rdi
  40bd24:	push   rsi
  40bd25:	push   rbx
  40bd26:	sub    rsp,0x20
  40bd2a:	call   0x40c490
  40bd2f:	mov    rbp,rax
  40bd32:	mov    eax,DWORD PTR [rip+0x10c10]        # 0x41c948
  40bd38:	test   eax,eax
  40bd3a:	jne    0x40bd61
  40bd3c:	test   rbp,rbp
  40bd3f:	je     0x40bd61
  40bd41:	lea    rcx,[rip+0xc128]        # 0x417e70
  40bd48:	mov    DWORD PTR [rip+0x10bf6],0x1        # 0x41c948
  40bd52:	call   0x40c2d0
  40bd57:	test   rax,rax
  40bd5a:	je     0x40bd70
  40bd5c:	mov    eax,0x1
  40bd61:	add    rsp,0x20
  40bd65:	pop    rbx
  40bd66:	pop    rsi
  40bd67:	pop    rdi
  40bd68:	pop    rbp
  40bd69:	pop    r12
  40bd6b:	ret    
  40bd6c:	nop    DWORD PTR [rax+0x0]
  40bd70:	lea    rbx,[rip+0x10d09]        # 0x41ca80
  40bd77:	mov    ecx,0x30
  40bd7c:	lea    rdx,[rip+0x10bfd]        # 0x41c980
  40bd83:	lea    r12,[rip+0xfffffffffffffde6]        # 0x40bb70
  40bd8a:	xor    esi,esi
  40bd8c:	mov    rdi,rbx
  40bd8f:	rep stos QWORD PTR es:[rdi],rax
  40bd92:	mov    rdi,rdx
  40bd95:	sub    r12,rbp
  40bd98:	mov    cl,0x20
  40bd9a:	rep stos QWORD PTR es:[rdi],rax
  40bd9d:	mov    rdi,rdx
  40bda0:	jmp    0x40bdd0
  40bda2:	mov    BYTE PTR [rdi],0x9
  40bda5:	mov    DWORD PTR [rdi+0x4],r12d
  40bda9:	add    rsi,0x1
  40bdad:	mov    edx,DWORD PTR [rax+0xc]
  40bdb0:	add    rbx,0xc
  40bdb4:	mov    DWORD PTR [rbx-0xc],edx
  40bdb7:	add    edx,DWORD PTR [rax+0x8]
  40bdba:	mov    rax,rdi
  40bdbd:	sub    rax,rbp
  40bdc0:	add    rdi,0x8
  40bdc4:	mov    DWORD PTR [rbx-0x4],eax
  40bdc7:	mov    DWORD PTR [rbx-0x8],edx
  40bdca:	cmp    rsi,0x20
  40bdce:	je     0x40be05
  40bdd0:	mov    rcx,rsi
  40bdd3:	call   0x40c400
  40bdd8:	test   rax,rax
  40bddb:	jne    0x40bda2
  40bddd:	test   rsi,rsi
  40bde0:	je     0x40bd5c
  40bde6:	mov    edx,esi
  40bde8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bdf0:	mov    r8,rbp
  40bdf3:	lea    rcx,[rip+0x10c86]        # 0x41ca80
  40bdfa:	call   QWORD PTR [rip+0x12730]        # 0x41e530
  40be00:	jmp    0x40bd5c
  40be05:	mov    edx,0x20
  40be0a:	jmp    0x40bdf0
  40be0c:	nop    DWORD PTR [rax+0x0]
  40be10:	push   rbx
  40be11:	sub    rsp,0x20
  40be15:	mov    rdx,QWORD PTR [rcx]
  40be18:	mov    eax,DWORD PTR [rdx]
  40be1a:	mov    r8d,eax
  40be1d:	and    r8d,0x20ffffff
  40be24:	cmp    r8d,0x20474343
  40be2b:	je     0x40bf30
  40be31:	cmp    eax,0xc0000091
  40be36:	mov    rbx,rcx
  40be39:	ja     0x40bec0
  40be3f:	cmp    eax,0xc000008d
  40be44:	jae    0x40bed7
  40be4a:	cmp    eax,0xc0000008
  40be4f:	je     0x40be83
  40be51:	ja     0x40be90
  40be53:	cmp    eax,0x80000002
  40be58:	je     0x40be83
  40be5a:	cmp    eax,0xc0000005
  40be5f:	jne    0x40bea2
  40be61:	xor    edx,edx
  40be63:	mov    ecx,0xb
  40be68:	call   0x411468
  40be6d:	cmp    rax,0x1
  40be71:	je     0x40bfa0
  40be77:	test   rax,rax
  40be7a:	je     0x40bea2
  40be7c:	mov    ecx,0xb
  40be81:	call   rax
  40be83:	mov    eax,0xffffffff
  40be88:	add    rsp,0x20
  40be8c:	pop    rbx
  40be8d:	ret    
  40be8e:	xchg   ax,ax
  40be90:	cmp    eax,0xc000001d
  40be95:	je     0x40bf56
  40be9b:	cmp    eax,0xc000008c
  40bea0:	je     0x40be83
  40bea2:	mov    rax,QWORD PTR [rip+0x10a97]        # 0x41c940
  40bea9:	test   rax,rax
  40beac:	je     0x40be88
  40beae:	mov    rcx,rbx
  40beb1:	add    rsp,0x20
  40beb5:	pop    rbx
  40beb6:	rex.W jmp rax
  40beb9:	nop    DWORD PTR [rax+0x0]
  40bec0:	cmp    eax,0xc0000094
  40bec5:	je     0x40bf02
  40bec7:	ja     0x40bf40
  40bec9:	cmp    eax,0xc0000092
  40bece:	je     0x40be83
  40bed0:	cmp    eax,0xc0000093
  40bed5:	jne    0x40bea2
  40bed7:	xor    edx,edx
  40bed9:	mov    ecx,0x8
  40bede:	call   0x411468
  40bee3:	cmp    rax,0x1
  40bee7:	jne    0x40bf14
  40bee9:	mov    edx,0x1
  40beee:	mov    ecx,0x8
  40bef3:	call   0x411468
  40bef8:	call   0x40b660
  40befd:	jmp    0x40be83
  40bf02:	xor    edx,edx
  40bf04:	mov    ecx,0x8
  40bf09:	call   0x411468
  40bf0e:	cmp    rax,0x1
  40bf12:	je     0x40bf82
  40bf14:	test   rax,rax
  40bf17:	je     0x40bea2
  40bf19:	mov    ecx,0x8
  40bf1e:	call   rax
  40bf20:	mov    eax,0xffffffff
  40bf25:	jmp    0x40be88
  40bf2a:	nop    WORD PTR [rax+rax*1+0x0]
  40bf30:	test   BYTE PTR [rdx+0x4],0x1
  40bf34:	jne    0x40be31
  40bf3a:	jmp    0x40be83
  40bf3f:	nop
  40bf40:	cmp    eax,0xc0000095
  40bf45:	je     0x40be83
  40bf4b:	cmp    eax,0xc0000096
  40bf50:	jne    0x40bea2
  40bf56:	xor    edx,edx
  40bf58:	mov    ecx,0x4
  40bf5d:	call   0x411468
  40bf62:	cmp    rax,0x1
  40bf66:	je     0x40bfb4
  40bf68:	test   rax,rax
  40bf6b:	je     0x40bea2
  40bf71:	mov    ecx,0x4
  40bf76:	call   rax
  40bf78:	mov    eax,0xffffffff
  40bf7d:	jmp    0x40be88
  40bf82:	mov    edx,0x1
  40bf87:	mov    ecx,0x8
  40bf8c:	call   0x411468
  40bf91:	jmp    0x40be83
  40bf96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfa0:	mov    edx,0x1
  40bfa5:	mov    ecx,0xb
  40bfaa:	call   0x411468
  40bfaf:	jmp    0x40be83
  40bfb4:	mov    edx,0x1
  40bfb9:	mov    ecx,0x4
  40bfbe:	call   0x411468
  40bfc3:	jmp    0x40be83
  40bfc8:	nop
  40bfc9:	nop
  40bfca:	nop
  40bfcb:	nop
  40bfcc:	nop
  40bfcd:	nop
  40bfce:	nop
  40bfcf:	nop
  40bfd0:	push   rbp
  40bfd1:	push   rdi
  40bfd2:	push   rsi
  40bfd3:	push   rbx
  40bfd4:	sub    rsp,0x28
  40bfd8:	lea    rcx,[rip+0x10c41]        # 0x41cc20
  40bfdf:	call   QWORD PTR [rip+0x124a3]        # 0x41e488
  40bfe5:	mov    rbx,QWORD PTR [rip+0x10c14]        # 0x41cc00
  40bfec:	test   rbx,rbx
  40bfef:	je     0x40c024
  40bff1:	mov    rbp,QWORD PTR [rip+0x12580]        # 0x41e578
  40bff8:	mov    rdi,QWORD PTR [rip+0x124c1]        # 0x41e4c0
  40bfff:	nop
  40c000:	mov    ecx,DWORD PTR [rbx]
  40c002:	call   rbp
  40c004:	mov    rsi,rax
  40c007:	call   rdi
  40c009:	test   eax,eax
  40c00b:	jne    0x40c01b
  40c00d:	test   rsi,rsi
  40c010:	je     0x40c01b
  40c012:	mov    rax,QWORD PTR [rbx+0x8]
  40c016:	mov    rcx,rsi
  40c019:	call   rax
  40c01b:	mov    rbx,QWORD PTR [rbx+0x10]
  40c01f:	test   rbx,rbx
  40c022:	jne    0x40c000
  40c024:	mov    rax,QWORD PTR [rip+0x124ed]        # 0x41e518
  40c02b:	lea    rcx,[rip+0x10bee]        # 0x41cc20
  40c032:	add    rsp,0x28
  40c036:	pop    rbx
  40c037:	pop    rsi
  40c038:	pop    rdi
  40c039:	pop    rbp
  40c03a:	rex.W jmp rax
  40c03d:	nop    DWORD PTR [rax]
  40c040:	push   rdi
  40c041:	push   rsi
  40c042:	push   rbx
  40c043:	sub    rsp,0x20
  40c047:	mov    eax,DWORD PTR [rip+0x10bbb]        # 0x41cc08
  40c04d:	test   eax,eax
  40c04f:	jne    0x40c060
  40c051:	add    rsp,0x20
  40c055:	pop    rbx
  40c056:	pop    rsi
  40c057:	pop    rdi
  40c058:	ret    
  40c059:	nop    DWORD PTR [rax+0x0]
  40c060:	mov    rsi,rdx
  40c063:	mov    edi,ecx
  40c065:	mov    edx,0x18
  40c06a:	mov    ecx,0x1
  40c06f:	call   0x411540
  40c074:	test   rax,rax
  40c077:	mov    rbx,rax
  40c07a:	je     0x40c0b8
  40c07c:	mov    DWORD PTR [rax],edi
  40c07e:	mov    QWORD PTR [rax+0x8],rsi
  40c082:	lea    rcx,[rip+0x10b97]        # 0x41cc20
  40c089:	call   QWORD PTR [rip+0x123f9]        # 0x41e488
  40c08f:	mov    rax,QWORD PTR [rip+0x10b6a]        # 0x41cc00
  40c096:	lea    rcx,[rip+0x10b83]        # 0x41cc20
  40c09d:	mov    QWORD PTR [rip+0x10b5c],rbx        # 0x41cc00
  40c0a4:	mov    QWORD PTR [rbx+0x10],rax
  40c0a8:	call   QWORD PTR [rip+0x1246a]        # 0x41e518
  40c0ae:	xor    eax,eax
  40c0b0:	add    rsp,0x20
  40c0b4:	pop    rbx
  40c0b5:	pop    rsi
  40c0b6:	pop    rdi
  40c0b7:	ret    
  40c0b8:	mov    eax,0xffffffff
  40c0bd:	jmp    0x40c051
  40c0bf:	nop
  40c0c0:	push   rbx
  40c0c1:	sub    rsp,0x20
  40c0c5:	mov    eax,DWORD PTR [rip+0x10b3d]        # 0x41cc08
  40c0cb:	test   eax,eax
  40c0cd:	jne    0x40c0e0
  40c0cf:	xor    eax,eax
  40c0d1:	add    rsp,0x20
  40c0d5:	pop    rbx
  40c0d6:	ret    
  40c0d7:	nop    WORD PTR [rax+rax*1+0x0]
  40c0e0:	mov    ebx,ecx
  40c0e2:	lea    rcx,[rip+0x10b37]        # 0x41cc20
  40c0e9:	call   QWORD PTR [rip+0x12399]        # 0x41e488
  40c0ef:	mov    rdx,QWORD PTR [rip+0x10b0a]        # 0x41cc00
  40c0f6:	test   rdx,rdx
  40c0f9:	je     0x40c117
  40c0fb:	mov    eax,DWORD PTR [rdx]
  40c0fd:	cmp    eax,ebx
  40c0ff:	jne    0x40c10e
  40c101:	jmp    0x40c14f
  40c103:	mov    r8d,DWORD PTR [rax]
  40c106:	cmp    r8d,ebx
  40c109:	je     0x40c130
  40c10b:	mov    rdx,rax
  40c10e:	mov    rax,QWORD PTR [rdx+0x10]
  40c112:	test   rax,rax
  40c115:	jne    0x40c103
  40c117:	lea    rcx,[rip+0x10b02]        # 0x41cc20
  40c11e:	call   QWORD PTR [rip+0x123f4]        # 0x41e518
  40c124:	xor    eax,eax
  40c126:	add    rsp,0x20
  40c12a:	pop    rbx
  40c12b:	ret    
  40c12c:	nop    DWORD PTR [rax+0x0]
  40c130:	mov    rcx,rax
  40c133:	mov    rax,QWORD PTR [rax+0x10]
  40c137:	mov    QWORD PTR [rdx+0x10],rax
  40c13b:	call   0x411500
  40c140:	lea    rcx,[rip+0x10ad9]        # 0x41cc20
  40c147:	call   QWORD PTR [rip+0x123cb]        # 0x41e518
  40c14d:	jmp    0x40c124
  40c14f:	mov    rax,QWORD PTR [rdx+0x10]
  40c153:	mov    rcx,rdx
  40c156:	mov    QWORD PTR [rip+0x10aa3],rax        # 0x41cc00
  40c15d:	jmp    0x40c13b
  40c15f:	nop
  40c160:	push   rbx
  40c161:	sub    rsp,0x20
  40c165:	cmp    edx,0x1
  40c168:	je     0x40c200
  40c16e:	jb     0x40c1a0
  40c170:	cmp    edx,0x2
  40c173:	je     0x40c190
  40c175:	cmp    edx,0x3
  40c178:	jne    0x40c195
  40c17a:	mov    eax,DWORD PTR [rip+0x10a88]        # 0x41cc08
  40c180:	test   eax,eax
  40c182:	je     0x40c195
  40c184:	call   0x40bfd0
  40c189:	jmp    0x40c195
  40c18b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c190:	call   0x40b660
  40c195:	mov    eax,0x1
  40c19a:	add    rsp,0x20
  40c19e:	pop    rbx
  40c19f:	ret    
  40c1a0:	mov    eax,DWORD PTR [rip+0x10a62]        # 0x41cc08
  40c1a6:	test   eax,eax
  40c1a8:	jne    0x40c230
  40c1ae:	mov    eax,DWORD PTR [rip+0x10a54]        # 0x41cc08
  40c1b4:	cmp    eax,0x1
  40c1b7:	jne    0x40c195
  40c1b9:	mov    rcx,QWORD PTR [rip+0x10a40]        # 0x41cc00
  40c1c0:	test   rcx,rcx
  40c1c3:	je     0x40c1d6
  40c1c5:	mov    rbx,QWORD PTR [rcx+0x10]
  40c1c9:	call   0x411500
  40c1ce:	test   rbx,rbx
  40c1d1:	mov    rcx,rbx
  40c1d4:	jne    0x40c1c5
  40c1d6:	lea    rcx,[rip+0x10a43]        # 0x41cc20
  40c1dd:	mov    QWORD PTR [rip+0x10a18],0x0        # 0x41cc00
  40c1e8:	mov    DWORD PTR [rip+0x10a16],0x0        # 0x41cc08
  40c1f2:	call   QWORD PTR [rip+0x12288]        # 0x41e480
  40c1f8:	jmp    0x40c195
  40c1fa:	nop    WORD PTR [rax+rax*1+0x0]
  40c200:	mov    eax,DWORD PTR [rip+0x10a02]        # 0x41cc08
  40c206:	test   eax,eax
  40c208:	je     0x40c220
  40c20a:	mov    eax,0x1
  40c20f:	mov    DWORD PTR [rip+0x109ef],0x1        # 0x41cc08
  40c219:	add    rsp,0x20
  40c21d:	pop    rbx
  40c21e:	ret    
  40c21f:	nop
  40c220:	lea    rcx,[rip+0x109f9]        # 0x41cc20
  40c227:	call   QWORD PTR [rip+0x122db]        # 0x41e508
  40c22d:	jmp    0x40c20a
  40c22f:	nop
  40c230:	call   0x40bfd0
  40c235:	jmp    0x40c1ae
  40c23a:	nop
  40c23b:	nop
  40c23c:	nop
  40c23d:	nop
  40c23e:	nop
  40c23f:	nop
  40c240:	movsxd rax,DWORD PTR [rcx+0x3c]
  40c244:	add    rcx,rax
  40c247:	xor    eax,eax
  40c249:	cmp    DWORD PTR [rcx],0x4550
  40c24f:	je     0x40c253
  40c251:	repz ret 
  40c253:	xor    eax,eax
  40c255:	cmp    WORD PTR [rcx+0x18],0x20b
  40c25b:	sete   al
  40c25e:	ret    
  40c25f:	nop
  40c260:	cmp    WORD PTR [rcx],0x5a4d
  40c265:	je     0x40c270
  40c267:	xor    eax,eax
  40c269:	ret    
  40c26a:	nop    WORD PTR [rax+rax*1+0x0]
  40c270:	jmp    0x40c240
  40c272:	nop    DWORD PTR [rax+0x0]
  40c276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c280:	movsxd rax,DWORD PTR [rcx+0x3c]
  40c284:	add    rcx,rax
  40c287:	movzx  eax,WORD PTR [rcx+0x14]
  40c28b:	lea    rax,[rcx+rax*1+0x18]
  40c290:	movzx  ecx,WORD PTR [rcx+0x6]
  40c294:	test   ecx,ecx
  40c296:	je     0x40c2c1
  40c298:	sub    ecx,0x1
  40c29b:	lea    rcx,[rcx+rcx*4]
  40c29f:	lea    r9,[rax+rcx*8+0x28]
  40c2a4:	mov    r8d,DWORD PTR [rax+0xc]
  40c2a8:	cmp    r8,rdx
  40c2ab:	mov    rcx,r8
  40c2ae:	ja     0x40c2b8
  40c2b0:	add    ecx,DWORD PTR [rax+0x8]
  40c2b3:	cmp    rdx,rcx
  40c2b6:	jb     0x40c2c3
  40c2b8:	add    rax,0x28
  40c2bc:	cmp    rax,r9
  40c2bf:	jne    0x40c2a4
  40c2c1:	xor    eax,eax
  40c2c3:	repz ret 
  40c2c5:	nop
  40c2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c2d0:	push   rdi
  40c2d1:	push   rsi
  40c2d2:	push   rbx
  40c2d3:	sub    rsp,0x20
  40c2d7:	mov    rsi,rcx
  40c2da:	call   0x411440
  40c2df:	cmp    rax,0x8
  40c2e3:	ja     0x40c300
  40c2e5:	mov    rbx,QWORD PTR [rip+0xc0f4]        # 0x4183e0
  40c2ec:	xor    edi,edi
  40c2ee:	cmp    WORD PTR [rbx],0x5a4d
  40c2f3:	je     0x40c310
  40c2f5:	mov    rax,rdi
  40c2f8:	add    rsp,0x20
  40c2fc:	pop    rbx
  40c2fd:	pop    rsi
  40c2fe:	pop    rdi
  40c2ff:	ret    
  40c300:	xor    edi,edi
  40c302:	mov    rax,rdi
  40c305:	add    rsp,0x20
  40c309:	pop    rbx
  40c30a:	pop    rsi
  40c30b:	pop    rdi
  40c30c:	ret    
  40c30d:	nop    DWORD PTR [rax]
  40c310:	mov    rcx,rbx
  40c313:	call   0x40c240
  40c318:	test   eax,eax
  40c31a:	je     0x40c2f5
  40c31c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  40c320:	add    rdx,rbx
  40c323:	movzx  eax,WORD PTR [rdx+0x14]
  40c327:	lea    rbx,[rdx+rax*1+0x18]
  40c32c:	movzx  eax,WORD PTR [rdx+0x6]
  40c330:	test   eax,eax
  40c332:	je     0x40c2f5
  40c334:	sub    eax,0x1
  40c337:	lea    rax,[rax+rax*4]
  40c33b:	lea    rdi,[rbx+rax*8+0x28]
  40c340:	jmp    0x40c34b
  40c342:	add    rbx,0x28
  40c346:	cmp    rbx,rdi
  40c349:	je     0x40c300
  40c34b:	mov    r8d,0x8
  40c351:	mov    rdx,rsi
  40c354:	mov    rcx,rbx
  40c357:	call   0x411438
  40c35c:	test   eax,eax
  40c35e:	jne    0x40c342
  40c360:	mov    rdi,rbx
  40c363:	mov    rax,rdi
  40c366:	add    rsp,0x20
  40c36a:	pop    rbx
  40c36b:	pop    rsi
  40c36c:	pop    rdi
  40c36d:	ret    
  40c36e:	xchg   ax,ax
  40c370:	push   rsi
  40c371:	push   rbx
  40c372:	sub    rsp,0x28
  40c376:	mov    rbx,QWORD PTR [rip+0xc063]        # 0x4183e0
  40c37d:	cmp    WORD PTR [rbx],0x5a4d
  40c382:	je     0x40c390
  40c384:	xor    eax,eax
  40c386:	add    rsp,0x28
  40c38a:	pop    rbx
  40c38b:	pop    rsi
  40c38c:	ret    
  40c38d:	nop    DWORD PTR [rax]
  40c390:	mov    rsi,rcx
  40c393:	mov    rcx,rbx
  40c396:	call   0x40c240
  40c39b:	test   eax,eax
  40c39d:	je     0x40c384
  40c39f:	sub    rsi,rbx
  40c3a2:	mov    rcx,rbx
  40c3a5:	mov    rdx,rsi
  40c3a8:	add    rsp,0x28
  40c3ac:	pop    rbx
  40c3ad:	pop    rsi
  40c3ae:	jmp    0x40c280
  40c3b3:	nop    DWORD PTR [rax]
  40c3b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c3c0:	push   rbx
  40c3c1:	sub    rsp,0x20
  40c3c5:	mov    rbx,QWORD PTR [rip+0xc014]        # 0x4183e0
  40c3cc:	xor    eax,eax
  40c3ce:	cmp    WORD PTR [rbx],0x5a4d
  40c3d3:	je     0x40c3e0
  40c3d5:	add    rsp,0x20
  40c3d9:	pop    rbx
  40c3da:	ret    
  40c3db:	nop    DWORD PTR [rax+rax*1+0x0]
  40c3e0:	mov    rcx,rbx
  40c3e3:	call   0x40c240
  40c3e8:	test   eax,eax
  40c3ea:	je     0x40c3d5
  40c3ec:	movsxd rax,DWORD PTR [rbx+0x3c]
  40c3f0:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  40c3f5:	add    rsp,0x20
  40c3f9:	pop    rbx
  40c3fa:	ret    
  40c3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c400:	push   rdi
  40c401:	push   rsi
  40c402:	push   rbx
  40c403:	sub    rsp,0x20
  40c407:	mov    rsi,QWORD PTR [rip+0xbfd2]        # 0x4183e0
  40c40e:	xor    edi,edi
  40c410:	mov    rbx,rcx
  40c413:	cmp    WORD PTR [rsi],0x5a4d
  40c418:	je     0x40c425
  40c41a:	mov    rax,rdi
  40c41d:	add    rsp,0x20
  40c421:	pop    rbx
  40c422:	pop    rsi
  40c423:	pop    rdi
  40c424:	ret    
  40c425:	mov    rcx,rsi
  40c428:	call   0x40c240
  40c42d:	test   eax,eax
  40c42f:	je     0x40c41a
  40c431:	movsxd rax,DWORD PTR [rsi+0x3c]
  40c435:	add    rsi,rax
  40c438:	movzx  eax,WORD PTR [rsi+0x14]
  40c43c:	lea    rdx,[rsi+rax*1+0x18]
  40c441:	movzx  eax,WORD PTR [rsi+0x6]
  40c445:	test   eax,eax
  40c447:	je     0x40c41a
  40c449:	sub    eax,0x1
  40c44c:	lea    rax,[rax+rax*4]
  40c450:	lea    rax,[rdx+rax*8+0x28]
  40c455:	test   BYTE PTR [rdx+0x27],0x20
  40c459:	je     0x40c464
  40c45b:	test   rbx,rbx
  40c45e:	je     0x40c480
  40c460:	sub    rbx,0x1
  40c464:	add    rdx,0x28
  40c468:	cmp    rdx,rax
  40c46b:	jne    0x40c455
  40c46d:	xor    edi,edi
  40c46f:	mov    rax,rdi
  40c472:	add    rsp,0x20
  40c476:	pop    rbx
  40c477:	pop    rsi
  40c478:	pop    rdi
  40c479:	ret    
  40c47a:	nop    WORD PTR [rax+rax*1+0x0]
  40c480:	mov    rdi,rdx
  40c483:	mov    rax,rdi
  40c486:	add    rsp,0x20
  40c48a:	pop    rbx
  40c48b:	pop    rsi
  40c48c:	pop    rdi
  40c48d:	ret    
  40c48e:	xchg   ax,ax
  40c490:	push   rsi
  40c491:	push   rbx
  40c492:	sub    rsp,0x28
  40c496:	mov    rsi,QWORD PTR [rip+0xbf43]        # 0x4183e0
  40c49d:	xor    ebx,ebx
  40c49f:	cmp    WORD PTR [rsi],0x5a4d
  40c4a4:	je     0x40c4b0
  40c4a6:	mov    rax,rbx
  40c4a9:	add    rsp,0x28
  40c4ad:	pop    rbx
  40c4ae:	pop    rsi
  40c4af:	ret    
  40c4b0:	mov    rcx,rsi
  40c4b3:	call   0x40c240
  40c4b8:	test   eax,eax
  40c4ba:	cmovne rbx,rsi
  40c4be:	mov    rax,rbx
  40c4c1:	add    rsp,0x28
  40c4c5:	pop    rbx
  40c4c6:	pop    rsi
  40c4c7:	ret    
  40c4c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4d0:	push   rsi
  40c4d1:	push   rbx
  40c4d2:	sub    rsp,0x28
  40c4d6:	mov    rbx,QWORD PTR [rip+0xbf03]        # 0x4183e0
  40c4dd:	xor    eax,eax
  40c4df:	cmp    WORD PTR [rbx],0x5a4d
  40c4e4:	je     0x40c4f0
  40c4e6:	add    rsp,0x28
  40c4ea:	pop    rbx
  40c4eb:	pop    rsi
  40c4ec:	ret    
  40c4ed:	nop    DWORD PTR [rax]
  40c4f0:	mov    rsi,rcx
  40c4f3:	mov    rcx,rbx
  40c4f6:	call   0x40c240
  40c4fb:	test   eax,eax
  40c4fd:	je     0x40c4e6
  40c4ff:	sub    rsi,rbx
  40c502:	mov    rcx,rbx
  40c505:	mov    rdx,rsi
  40c508:	call   0x40c280
  40c50d:	test   rax,rax
  40c510:	je     0x40c521
  40c512:	mov    eax,DWORD PTR [rax+0x24]
  40c515:	not    eax
  40c517:	shr    eax,0x1f
  40c51a:	add    rsp,0x28
  40c51e:	pop    rbx
  40c51f:	pop    rsi
  40c520:	ret    
  40c521:	xor    eax,eax
  40c523:	jmp    0x40c4e6
  40c525:	nop
  40c526:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c530:	push   rbp
  40c531:	push   rdi
  40c532:	push   rsi
  40c533:	push   rbx
  40c534:	sub    rsp,0x28
  40c538:	mov    rdi,QWORD PTR [rip+0xbea1]        # 0x4183e0
  40c53f:	xor    ebp,ebp
  40c541:	mov    esi,ecx
  40c543:	cmp    WORD PTR [rdi],0x5a4d
  40c548:	je     0x40c560
  40c54a:	mov    rax,rbp
  40c54d:	add    rsp,0x28
  40c551:	pop    rbx
  40c552:	pop    rsi
  40c553:	pop    rdi
  40c554:	pop    rbp
  40c555:	ret    
  40c556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c560:	mov    rcx,rdi
  40c563:	call   0x40c240
  40c568:	test   eax,eax
  40c56a:	je     0x40c54a
  40c56c:	movsxd rax,DWORD PTR [rdi+0x3c]
  40c570:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  40c577:	test   edx,edx
  40c579:	je     0x40c54a
  40c57b:	mov    ebx,edx
  40c57d:	mov    rcx,rdi
  40c580:	mov    rdx,rbx
  40c583:	call   0x40c280
  40c588:	test   rax,rax
  40c58b:	je     0x40c54a
  40c58d:	add    rbx,rdi
  40c590:	mov    rdx,rbx
  40c593:	jne    0x40c5a7
  40c595:	jmp    0x40c54a
  40c597:	nop    WORD PTR [rax+rax*1+0x0]
  40c5a0:	sub    esi,0x1
  40c5a3:	add    rdx,0x14
  40c5a7:	mov    ecx,DWORD PTR [rdx+0x4]
  40c5aa:	test   ecx,ecx
  40c5ac:	jne    0x40c5b5
  40c5ae:	mov    eax,DWORD PTR [rdx+0xc]
  40c5b1:	test   eax,eax
  40c5b3:	je     0x40c5d0
  40c5b5:	test   esi,esi
  40c5b7:	jg     0x40c5a0
  40c5b9:	mov    ebp,DWORD PTR [rdx+0xc]
  40c5bc:	add    rbp,rdi
  40c5bf:	mov    rax,rbp
  40c5c2:	add    rsp,0x28
  40c5c6:	pop    rbx
  40c5c7:	pop    rsi
  40c5c8:	pop    rdi
  40c5c9:	pop    rbp
  40c5ca:	ret    
  40c5cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c5d0:	xor    ebp,ebp
  40c5d2:	mov    rax,rbp
  40c5d5:	add    rsp,0x28
  40c5d9:	pop    rbx
  40c5da:	pop    rsi
  40c5db:	pop    rdi
  40c5dc:	pop    rbp
  40c5dd:	ret    
  40c5de:	nop
  40c5df:	nop
  40c5e0:	push   rcx
  40c5e1:	push   rax
  40c5e2:	cmp    rax,0x1000
  40c5e8:	lea    rcx,[rsp+0x18]
  40c5ed:	jb     0x40c608
  40c5ef:	sub    rcx,0x1000
  40c5f6:	or     QWORD PTR [rcx],0x0
  40c5fa:	sub    rax,0x1000
  40c600:	cmp    rax,0x1000
  40c606:	ja     0x40c5ef
  40c608:	sub    rcx,rax
  40c60b:	or     QWORD PTR [rcx],0x0
  40c60f:	pop    rax
  40c610:	pop    rcx
  40c611:	ret    
  40c612:	nop
  40c613:	nop
  40c614:	nop
  40c615:	nop
  40c616:	nop
  40c617:	nop
  40c618:	nop
  40c619:	nop
  40c61a:	nop
  40c61b:	nop
  40c61c:	nop
  40c61d:	nop
  40c61e:	nop
  40c61f:	nop
  40c620:	push   rbp
  40c621:	push   rdi
  40c622:	push   rsi
  40c623:	push   rbx
  40c624:	sub    rsp,0x48
  40c628:	test   rdx,rdx
  40c62b:	je     0x40c753
  40c631:	test   r8,r8
  40c634:	je     0x40c760
  40c63a:	mov    eax,DWORD PTR [r9]
  40c63d:	mov    DWORD PTR [r9],0x0
  40c644:	mov    DWORD PTR [rsp+0x30],eax
  40c648:	movzx  eax,BYTE PTR [rdx]
  40c64b:	test   al,al
  40c64d:	je     0x40c6f0
  40c653:	cmp    DWORD PTR [rsp+0x98],0x1
  40c65b:	mov    rsi,r9
  40c65e:	mov    rdi,r8
  40c661:	mov    rbx,rdx
  40c664:	mov    rbp,rcx
  40c667:	jbe    0x40c6d0
  40c669:	cmp    BYTE PTR [rsp+0x30],0x0
  40c66e:	jne    0x40c700
  40c674:	movzx  edx,al
  40c677:	mov    ecx,DWORD PTR [rsp+0x90]
  40c67e:	call   QWORD PTR [rip+0x11e8c]        # 0x41e510
  40c684:	test   eax,eax
  40c686:	je     0x40c6d0
  40c688:	cmp    rdi,0x1
  40c68c:	jbe    0x40c77c
  40c692:	mov    DWORD PTR [rsp+0x28],0x1
  40c69a:	mov    QWORD PTR [rsp+0x20],rbp
  40c69f:	mov    r9d,0x2
  40c6a5:	mov    r8,rbx
  40c6a8:	mov    edx,0x8
  40c6ad:	mov    ecx,DWORD PTR [rsp+0x90]
  40c6b4:	call   QWORD PTR [rip+0x11e66]        # 0x41e520
  40c6ba:	test   eax,eax
  40c6bc:	je     0x40c767
  40c6c2:	mov    eax,0x2
  40c6c7:	add    rsp,0x48
  40c6cb:	pop    rbx
  40c6cc:	pop    rsi
  40c6cd:	pop    rdi
  40c6ce:	pop    rbp
  40c6cf:	ret    
  40c6d0:	mov    eax,DWORD PTR [rsp+0x90]
  40c6d7:	test   eax,eax
  40c6d9:	jne    0x40c720
  40c6db:	movzx  eax,BYTE PTR [rbx]
  40c6de:	mov    WORD PTR [rbp+0x0],ax
  40c6e2:	mov    eax,0x1
  40c6e7:	add    rsp,0x48
  40c6eb:	pop    rbx
  40c6ec:	pop    rsi
  40c6ed:	pop    rdi
  40c6ee:	pop    rbp
  40c6ef:	ret    
  40c6f0:	xor    edx,edx
  40c6f2:	xor    eax,eax
  40c6f4:	mov    WORD PTR [rcx],dx
  40c6f7:	add    rsp,0x48
  40c6fb:	pop    rbx
  40c6fc:	pop    rsi
  40c6fd:	pop    rdi
  40c6fe:	pop    rbp
  40c6ff:	ret    
  40c700:	mov    BYTE PTR [rsp+0x31],al
  40c704:	mov    DWORD PTR [rsp+0x28],0x1
  40c70c:	mov    r9d,0x2
  40c712:	mov    QWORD PTR [rsp+0x20],rcx
  40c717:	lea    r8,[rsp+0x30]
  40c71c:	jmp    0x40c6a8
  40c71e:	xchg   ax,ax
  40c720:	mov    DWORD PTR [rsp+0x28],0x1
  40c728:	mov    QWORD PTR [rsp+0x20],rbp
  40c72d:	mov    r9d,0x1
  40c733:	mov    r8,rbx
  40c736:	mov    edx,0x8
  40c73b:	mov    ecx,DWORD PTR [rsp+0x90]
  40c742:	call   QWORD PTR [rip+0x11dd8]        # 0x41e520
  40c748:	test   eax,eax
  40c74a:	je     0x40c767
  40c74c:	mov    eax,0x1
  40c751:	jmp    0x40c6f7
  40c753:	xor    eax,eax
  40c755:	add    rsp,0x48
  40c759:	pop    rbx
  40c75a:	pop    rsi
  40c75b:	pop    rdi
  40c75c:	pop    rbp
  40c75d:	ret    
  40c75e:	xchg   ax,ax
  40c760:	mov    eax,0xfffffffe
  40c765:	jmp    0x40c6f7
  40c767:	call   0x411588
  40c76c:	mov    DWORD PTR [rax],0x2a
  40c772:	mov    eax,0xffffffff
  40c777:	jmp    0x40c6f7
  40c77c:	movzx  eax,BYTE PTR [rbx]
  40c77f:	mov    BYTE PTR [rsi],al
  40c781:	mov    eax,0xfffffffe
  40c786:	jmp    0x40c6f7
  40c78b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c790:	push   rbp
  40c791:	push   rdi
  40c792:	push   rsi
  40c793:	push   rbx
  40c794:	sub    rsp,0x58
  40c798:	xor    eax,eax
  40c79a:	mov    WORD PTR [rsp+0x4e],ax
  40c79f:	lea    rax,[rsp+0x4e]
  40c7a4:	test   rcx,rcx
  40c7a7:	mov    rbx,rcx
  40c7aa:	mov    rsi,r9
  40c7ad:	mov    rdi,rdx
  40c7b0:	cmove  rbx,rax
  40c7b4:	mov    rax,QWORD PTR [rip+0xbc45]        # 0x418400
  40c7bb:	mov    QWORD PTR [rsp+0x38],r8
  40c7c0:	mov    rax,QWORD PTR [rax]
  40c7c3:	mov    ebp,DWORD PTR [rax]
  40c7c5:	call   0x4115d0
  40c7ca:	mov    r8,QWORD PTR [rsp+0x38]
  40c7cf:	lea    r9,[rip+0x104a2]        # 0x41cc78
  40c7d6:	test   rsi,rsi
  40c7d9:	mov    DWORD PTR [rsp+0x28],ebp
  40c7dd:	mov    DWORD PTR [rsp+0x20],eax
  40c7e1:	mov    rdx,rdi
  40c7e4:	cmovne r9,rsi
  40c7e8:	mov    rcx,rbx
  40c7eb:	call   0x40c620
  40c7f0:	cdqe   
  40c7f2:	add    rsp,0x58
  40c7f6:	pop    rbx
  40c7f7:	pop    rsi
  40c7f8:	pop    rdi
  40c7f9:	pop    rbp
  40c7fa:	ret    
  40c7fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c800:	push   r15
  40c802:	push   r14
  40c804:	push   r13
  40c806:	push   r12
  40c808:	push   rbp
  40c809:	push   rdi
  40c80a:	push   rsi
  40c80b:	push   rbx
  40c80c:	sub    rsp,0x48
  40c810:	lea    rax,[rip+0x1045d]        # 0x41cc74
  40c817:	test   r9,r9
  40c81a:	mov    rdi,r9
  40c81d:	mov    r13,rdx
  40c820:	cmove  rdi,rax
  40c824:	mov    r14,rcx
  40c827:	mov    rsi,r8
  40c82a:	call   0x4115d0
  40c82f:	mov    r12d,eax
  40c832:	mov    rax,QWORD PTR [rip+0xbbc7]        # 0x418400
  40c839:	test   r13,r13
  40c83c:	mov    rax,QWORD PTR [rax]
  40c83f:	mov    ebp,DWORD PTR [rax]
  40c841:	je     0x40c8c5
  40c847:	mov    rdx,QWORD PTR [r13+0x0]
  40c84b:	test   rdx,rdx
  40c84e:	je     0x40c8c5
  40c850:	test   r14,r14
  40c853:	je     0x40c8d0
  40c855:	xor    ebx,ebx
  40c857:	test   rsi,rsi
  40c85a:	jne    0x40c87a
  40c85c:	jmp    0x40c8c5
  40c85e:	xchg   ax,ax
  40c860:	movsxd r10,eax
  40c863:	add    r14,0x2
  40c867:	mov    rdx,r10
  40c86a:	add    rdx,QWORD PTR [r13+0x0]
  40c86e:	add    rbx,r10
  40c871:	cmp    rsi,rbx
  40c874:	mov    QWORD PTR [r13+0x0],rdx
  40c878:	jbe    0x40c8c0
  40c87a:	mov    r8,rsi
  40c87d:	mov    DWORD PTR [rsp+0x28],ebp
  40c881:	mov    DWORD PTR [rsp+0x20],r12d
  40c886:	sub    r8,rbx
  40c889:	mov    r9,rdi
  40c88c:	mov    rcx,r14
  40c88f:	call   0x40c620
  40c894:	cmp    eax,0x0
  40c897:	jg     0x40c860
  40c899:	jne    0x40c8c0
  40c89b:	cmp    rbx,rsi
  40c89e:	jae    0x40c8c0
  40c8a0:	mov    QWORD PTR [r13+0x0],0x0
  40c8a8:	mov    rax,rbx
  40c8ab:	add    rsp,0x48
  40c8af:	pop    rbx
  40c8b0:	pop    rsi
  40c8b1:	pop    rdi
  40c8b2:	pop    rbp
  40c8b3:	pop    r12
  40c8b5:	pop    r13
  40c8b7:	pop    r14
  40c8b9:	pop    r15
  40c8bb:	ret    
  40c8bc:	xor    ebx,ebx
  40c8be:	xchg   ax,ax
  40c8c0:	mov    rax,rbx
  40c8c3:	jmp    0x40c8ab
  40c8c5:	xor    eax,eax
  40c8c7:	jmp    0x40c8ab
  40c8c9:	nop    DWORD PTR [rax+0x0]
  40c8d0:	xor    eax,eax
  40c8d2:	test   rsi,rsi
  40c8d5:	mov    WORD PTR [rsp+0x3e],ax
  40c8da:	je     0x40c8bc
  40c8dc:	mov    r15d,ebp
  40c8df:	xor    ebx,ebx
  40c8e1:	lea    r14,[rsp+0x3e]
  40c8e6:	jmp    0x40c905
  40c8e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c8f0:	cdqe   
  40c8f2:	mov    rdx,rax
  40c8f5:	add    rdx,QWORD PTR [r13+0x0]
  40c8f9:	add    rbx,rax
  40c8fc:	cmp    rsi,rbx
  40c8ff:	mov    QWORD PTR [r13+0x0],rdx
  40c903:	jbe    0x40c8c0
  40c905:	mov    DWORD PTR [rsp+0x28],ebp
  40c909:	mov    DWORD PTR [rsp+0x20],r12d
  40c90e:	mov    r9,rdi
  40c911:	mov    r8,r15
  40c914:	mov    rcx,r14
  40c917:	call   0x40c620
  40c91c:	test   eax,eax
  40c91e:	jg     0x40c8f0
  40c920:	jmp    0x40c8c0
  40c922:	nop    DWORD PTR [rax+0x0]
  40c926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c930:	push   rbp
  40c931:	push   rdi
  40c932:	push   rsi
  40c933:	push   rbx
  40c934:	sub    rsp,0x48
  40c938:	xor    eax,eax
  40c93a:	mov    WORD PTR [rsp+0x3e],ax
  40c93f:	mov    rax,QWORD PTR [rip+0xbaba]        # 0x418400
  40c946:	mov    rbx,r8
  40c949:	mov    rsi,rcx
  40c94c:	mov    rdi,rdx
  40c94f:	mov    rax,QWORD PTR [rax]
  40c952:	mov    ebp,DWORD PTR [rax]
  40c954:	call   0x4115d0
  40c959:	lea    r9,[rip+0x10310]        # 0x41cc70
  40c960:	test   rbx,rbx
  40c963:	lea    rcx,[rsp+0x3e]
  40c968:	mov    DWORD PTR [rsp+0x28],ebp
  40c96c:	mov    DWORD PTR [rsp+0x20],eax
  40c970:	mov    r8,rdi
  40c973:	cmovne r9,rbx
  40c977:	mov    rdx,rsi
  40c97a:	call   0x40c620
  40c97f:	cdqe   
  40c981:	add    rsp,0x48
  40c985:	pop    rbx
  40c986:	pop    rsi
  40c987:	pop    rdi
  40c988:	pop    rbp
  40c989:	ret    
  40c98a:	nop
  40c98b:	nop
  40c98c:	nop
  40c98d:	nop
  40c98e:	nop
  40c98f:	nop
  40c990:	test   rdx,rdx
  40c993:	mov    r8,rcx
  40c996:	je     0x40c9c2
  40c998:	cmp    BYTE PTR [rcx],0x0
  40c99b:	jne    0x40c9a5
  40c99d:	jmp    0x40c9c2
  40c99f:	nop
  40c9a0:	cmp    BYTE PTR [rcx],0x0
  40c9a3:	je     0x40c9c0
  40c9a5:	add    rcx,0x1
  40c9a9:	mov    rax,rcx
  40c9ac:	sub    rax,r8
  40c9af:	cmp    rax,rdx
  40c9b2:	jb     0x40c9a0
  40c9b4:	repz ret 
  40c9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c9c0:	repz ret 
  40c9c2:	xor    eax,eax
  40c9c4:	ret    
  40c9c5:	nop
  40c9c6:	nop
  40c9c7:	nop
  40c9c8:	nop
  40c9c9:	nop
  40c9ca:	nop
  40c9cb:	nop
  40c9cc:	nop
  40c9cd:	nop
  40c9ce:	nop
  40c9cf:	nop
  40c9d0:	push   r12
  40c9d2:	push   rbp
  40c9d3:	push   rdi
  40c9d4:	push   rsi
  40c9d5:	push   rbx
  40c9d6:	sub    rsp,0x250
  40c9dd:	mov    rbx,rdx
  40c9e0:	mov    rsi,rcx
  40c9e3:	mov    ecx,0x4000
  40c9e8:	mov    r12d,r8d
  40c9eb:	call   0x4114b8
  40c9f0:	test   rbx,rbx
  40c9f3:	mov    rbp,rax
  40c9f6:	je     0x40cac0
  40c9fc:	cmp    WORD PTR [rbx],0x0
  40ca00:	lea    rax,[rip+0xb479]        # 0x417e80
  40ca07:	cmove  rbx,rax
  40ca0b:	test   rsi,rsi
  40ca0e:	je     0x40cab1
  40ca14:	cmp    WORD PTR [rsi],0x0
  40ca18:	lea    rax,[rip+0xb475]        # 0x417e94
  40ca1f:	cmove  rsi,rax
  40ca23:	lea    rdi,[rsp+0x40]
  40ca28:	xor    ecx,ecx
  40ca2a:	mov    r8d,0x104
  40ca30:	mov    rdx,rdi
  40ca33:	call   QWORD PTR [rip+0x11a97]        # 0x41e4d0
  40ca39:	test   eax,eax
  40ca3b:	je     0x40caa0
  40ca3d:	lea    r8,[rip+0xb454]        # 0x417e98
  40ca44:	mov    QWORD PTR [rsp+0x30],rsi
  40ca49:	mov    DWORD PTR [rsp+0x28],r12d
  40ca4e:	mov    QWORD PTR [rsp+0x20],rbx
  40ca53:	mov    r9,rdi
  40ca56:	mov    edx,0x1fff
  40ca5b:	mov    rcx,rbp
  40ca5e:	call   0x411558
  40ca63:	mov    rax,QWORD PTR [rip+0xbae6]        # 0x418550
  40ca6a:	mov    eax,DWORD PTR [rax]
  40ca6c:	test   eax,eax
  40ca6e:	je     0x40cae5
  40ca70:	xor    ecx,ecx
  40ca72:	mov    r9d,0x12012
  40ca78:	lea    r8,[rip+0xb4b1]        # 0x417f30
  40ca7f:	mov    rdx,rbp
  40ca82:	call   QWORD PTR [rip+0x11d40]        # 0x41e7c8
  40ca88:	cmp    eax,0x3
  40ca8b:	je     0x40cad1
  40ca8d:	cmp    eax,0x5
  40ca90:	jne    0x40cacc
  40ca92:	add    rsp,0x250
  40ca99:	pop    rbx
  40ca9a:	pop    rsi
  40ca9b:	pop    rdi
  40ca9c:	pop    rbp
  40ca9d:	pop    r12
  40ca9f:	ret    
  40caa0:	lea    rdx,[rip+0xb3d9]        # 0x417e80
  40caa7:	mov    rcx,rdi
  40caaa:	call   0x411408
  40caaf:	jmp    0x40ca3d
  40cab1:	lea    rsi,[rip+0xb3dc]        # 0x417e94
  40cab8:	jmp    0x40ca23
  40cabd:	nop    DWORD PTR [rax]
  40cac0:	lea    rbx,[rip+0xb3b9]        # 0x417e80
  40cac7:	jmp    0x40ca0b
  40cacc:	call   0x411548
  40cad1:	mov    ecx,0x16
  40cad6:	call   0x411480
  40cadb:	mov    ecx,0x3
  40cae0:	call   0x411580
  40cae5:	call   0x4115b8
  40caea:	lea    rdx,[rip+0xb42f]        # 0x417f20
  40caf1:	lea    rcx,[rax+0x60]
  40caf5:	mov    r8,rbp
  40caf8:	call   0x4114f8
  40cafd:	call   0x411548
  40cb02:	nop
  40cb03:	nop    DWORD PTR [rax]
  40cb06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb10:	push   rbp
  40cb11:	push   rdi
  40cb12:	push   rsi
  40cb13:	push   rbx
  40cb14:	sub    rsp,0x38
  40cb18:	mov    rdi,rdx
  40cb1b:	mov    DWORD PTR [rsp+0x2c],r8d
  40cb20:	mov    rbp,rcx
  40cb23:	call   0x411440
  40cb28:	lea    rcx,[rax+rax*1+0x2]
  40cb2d:	call   0x4114b8
  40cb32:	mov    rcx,rdi
  40cb35:	mov    rsi,rax
  40cb38:	call   0x411440
  40cb3d:	lea    rcx,[rax+rax*1+0x2]
  40cb42:	call   0x4114b8
  40cb47:	movzx  r9d,BYTE PTR [rbp+0x0]
  40cb4c:	xor    r10d,r10d
  40cb4f:	mov    rbx,rax
  40cb52:	mov    r8d,DWORD PTR [rsp+0x2c]
  40cb57:	test   r9b,r9b
  40cb5a:	je     0x40cb77
  40cb5c:	nop    DWORD PTR [rax+0x0]
  40cb60:	mov    WORD PTR [rsi+r10*2],r9w
  40cb65:	add    r10,0x1
  40cb69:	movzx  r9d,BYTE PTR [rbp+r10*1+0x0]
  40cb6f:	test   r9b,r9b
  40cb72:	jne    0x40cb60
  40cb74:	add    r10,r10
  40cb77:	movzx  r9d,BYTE PTR [rdi]
  40cb7b:	xor    edx,edx
  40cb7d:	mov    WORD PTR [rsi+r10*1],dx
  40cb82:	xor    r10d,r10d
  40cb85:	test   r9b,r9b
  40cb88:	je     0x40cba6
  40cb8a:	nop    WORD PTR [rax+rax*1+0x0]
  40cb90:	mov    WORD PTR [rbx+r10*2],r9w
  40cb95:	add    r10,0x1
  40cb99:	movzx  r9d,BYTE PTR [rdi+r10*1]
  40cb9e:	test   r9b,r9b
  40cba1:	jne    0x40cb90
  40cba3:	add    r10,r10
  40cba6:	xor    eax,eax
  40cba8:	mov    rdx,rbx
  40cbab:	mov    rcx,rsi
  40cbae:	mov    WORD PTR [rbx+r10*1],ax
  40cbb3:	call   0x40c9d0
  40cbb8:	mov    rcx,rsi
  40cbbb:	call   0x411500
  40cbc0:	mov    rcx,rbx
  40cbc3:	add    rsp,0x38
  40cbc7:	pop    rbx
  40cbc8:	pop    rsi
  40cbc9:	pop    rdi
  40cbca:	pop    rbp
  40cbcb:	jmp    0x411500
  40cbd0:	sub    rsp,0x38
  40cbd4:	mov    r9,rdx
  40cbd7:	mov    QWORD PTR [rsp+0x20],r8
  40cbdc:	mov    rdx,rcx
  40cbdf:	xor    r8d,r8d
  40cbe2:	mov    ecx,0x6000
  40cbe7:	call   0x40e460
  40cbec:	add    rsp,0x38
  40cbf0:	ret    
  40cbf1:	nop
  40cbf2:	nop
  40cbf3:	nop
  40cbf4:	nop
  40cbf5:	nop
  40cbf6:	nop
  40cbf7:	nop
  40cbf8:	nop
  40cbf9:	nop
  40cbfa:	nop
  40cbfb:	nop
  40cbfc:	nop
  40cbfd:	nop
  40cbfe:	nop
  40cbff:	nop
  40cc00:	push   rbx
  40cc01:	sub    rsp,0x30
  40cc05:	mov    rbx,rcx
  40cc08:	mov    r9,rdx
  40cc0b:	mov    QWORD PTR [rsp+0x20],r8
  40cc10:	mov    rdx,rcx
  40cc13:	xor    r8d,r8d
  40cc16:	mov    ecx,0x4000
  40cc1b:	call   0x40e460
  40cc20:	movsxd rdx,eax
  40cc23:	mov    BYTE PTR [rbx+rdx*1],0x0
  40cc27:	add    rsp,0x30
  40cc2b:	pop    rbx
  40cc2c:	ret    
  40cc2d:	nop
  40cc2e:	nop
  40cc2f:	nop
  40cc30:	sub    rsp,0x58
  40cc34:	mov    rax,QWORD PTR [rdx]
  40cc37:	mov    r11,rdx
  40cc3a:	mov    edx,DWORD PTR [rdx+0x8]
  40cc3d:	mov    r10,rdx
  40cc40:	and    r10w,0x7fff
  40cc46:	jne    0x40cc64
  40cc48:	mov    rdx,rax
  40cc4b:	shr    rdx,0x20
  40cc4f:	or     eax,edx
  40cc51:	jne    0x40ccd0
  40cc53:	mov    DWORD PTR [rsp+0x44],0x0
  40cc5b:	movzx  eax,WORD PTR [r11+0x8]
  40cc60:	xor    edx,edx
  40cc62:	jmp    0x40cc8b
  40cc64:	cmp    r10w,0x7fff
  40cc6a:	je     0x40ccf0
  40cc70:	movzx  eax,WORD PTR [r11+0x8]
  40cc75:	mov    DWORD PTR [rsp+0x44],0x1
  40cc7d:	mov    edx,eax
  40cc7f:	and    edx,0x7fff
  40cc85:	sub    edx,0x403e
  40cc8b:	and    eax,0x8000
  40cc90:	mov    r10,QWORD PTR [rsp+0x80]
  40cc98:	mov    DWORD PTR [r10],eax
  40cc9b:	lea    rax,[rsp+0x48]
  40cca0:	mov    QWORD PTR [rsp+0x30],r9
  40cca5:	mov    DWORD PTR [rsp+0x20],ecx
  40cca9:	lea    r9,[rsp+0x44]
  40ccae:	lea    rcx,[rip+0x545b]        # 0x412110
  40ccb5:	mov    DWORD PTR [rsp+0x28],r8d
  40ccba:	mov    QWORD PTR [rsp+0x38],rax
  40ccbf:	mov    r8,r11
  40ccc2:	call   0x40f0e0
  40ccc7:	add    rsp,0x58
  40cccb:	ret    
  40cccc:	nop    DWORD PTR [rax+0x0]
  40ccd0:	test   edx,edx
  40ccd2:	js     0x40cc70
  40ccd4:	mov    DWORD PTR [rsp+0x44],0x2
  40ccdc:	movzx  eax,WORD PTR [r11+0x8]
  40cce1:	mov    edx,0xffffbfc3
  40cce6:	jmp    0x40cc8b
  40cce8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ccf0:	mov    rdx,rax
  40ccf3:	shr    rdx,0x20
  40ccf7:	and    edx,0x7fffffff
  40ccfd:	or     edx,eax
  40ccff:	jne    0x40cd15
  40cd01:	mov    DWORD PTR [rsp+0x44],0x3
  40cd09:	movzx  eax,WORD PTR [r11+0x8]
  40cd0e:	xor    edx,edx
  40cd10:	jmp    0x40cc8b
  40cd15:	mov    DWORD PTR [rsp+0x44],0x4
  40cd1d:	xor    edx,edx
  40cd1f:	xor    eax,eax
  40cd21:	jmp    0x40cc90
  40cd26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd30:	push   rbx
  40cd31:	sub    rsp,0x20
  40cd35:	mov    rbx,rdx
  40cd38:	mov    edx,DWORD PTR [rdx+0x8]
  40cd3b:	test   dh,0x40
  40cd3e:	jne    0x40cd48
  40cd40:	mov    eax,DWORD PTR [rbx+0x24]
  40cd43:	cmp    DWORD PTR [rbx+0x28],eax
  40cd46:	jle    0x40cd5a
  40cd48:	and    dh,0x20
  40cd4b:	jne    0x40cd70
  40cd4d:	movsxd rax,DWORD PTR [rbx+0x24]
  40cd51:	mov    rdx,QWORD PTR [rbx]
  40cd54:	mov    BYTE PTR [rdx+rax*1],cl
  40cd57:	mov    eax,DWORD PTR [rbx+0x24]
  40cd5a:	add    eax,0x1
  40cd5d:	mov    DWORD PTR [rbx+0x24],eax
  40cd60:	add    rsp,0x20
  40cd64:	pop    rbx
  40cd65:	ret    
  40cd66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd70:	mov    rdx,QWORD PTR [rbx]
  40cd73:	call   0x411510
  40cd78:	mov    eax,DWORD PTR [rbx+0x24]
  40cd7b:	add    eax,0x1
  40cd7e:	mov    DWORD PTR [rbx+0x24],eax
  40cd81:	add    rsp,0x20
  40cd85:	pop    rbx
  40cd86:	ret    
  40cd87:	nop    WORD PTR [rax+rax*1+0x0]
  40cd90:	push   r14
  40cd92:	push   r13
  40cd94:	push   r12
  40cd96:	push   rbp
  40cd97:	push   rdi
  40cd98:	push   rsi
  40cd99:	push   rbx
  40cd9a:	sub    rsp,0x40
  40cd9e:	lea    r14,[rsp+0x2c]
  40cda3:	lea    r13,[rsp+0x30]
  40cda8:	mov    ebx,edx
  40cdaa:	mov    rsi,r8
  40cdad:	xor    edx,edx
  40cdaf:	mov    r12,rcx
  40cdb2:	mov    r8,r14
  40cdb5:	mov    rcx,r13
  40cdb8:	call   0x411250
  40cdbd:	mov    ebp,DWORD PTR [rsi+0x10]
  40cdc0:	cmp    ebp,ebx
  40cdc2:	jge    0x40ce69
  40cdc8:	test   ebp,ebp
  40cdca:	js     0x40ce69
  40cdd0:	mov    eax,DWORD PTR [rsi+0xc]
  40cdd3:	cmp    ebp,eax
  40cdd5:	jge    0x40ce76
  40cddb:	sub    eax,ebp
  40cddd:	test   eax,eax
  40cddf:	mov    DWORD PTR [rsi+0xc],eax
  40cde2:	jle    0x40cdf0
  40cde4:	test   BYTE PTR [rsi+0x9],0x4
  40cde8:	je     0x40ce82
  40cdee:	xchg   ax,ax
  40cdf0:	test   ebp,ebp
  40cdf2:	jle    0x40ce4d
  40cdf4:	add    r12,0x2
  40cdf8:	movzx  edx,WORD PTR [r12-0x2]
  40cdfe:	mov    r8,r14
  40ce01:	mov    rcx,r13
  40ce04:	call   0x411250
  40ce09:	test   eax,eax
  40ce0b:	jle    0x40ce4d
  40ce0d:	sub    eax,0x1
  40ce10:	mov    rbx,r13
  40ce13:	lea    rdi,[r13+rax*1+0x1]
  40ce18:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce20:	add    rbx,0x1
  40ce24:	movsx  ecx,BYTE PTR [rbx-0x1]
  40ce28:	mov    rdx,rsi
  40ce2b:	call   0x40cd30
  40ce30:	cmp    rbx,rdi
  40ce33:	jne    0x40ce20
  40ce35:	sub    ebp,0x1
  40ce38:	jmp    0x40cdf0
  40ce3a:	nop    WORD PTR [rax+rax*1+0x0]
  40ce40:	mov    rdx,rsi
  40ce43:	mov    ecx,0x20
  40ce48:	call   0x40cd30
  40ce4d:	mov    eax,DWORD PTR [rsi+0xc]
  40ce50:	lea    edx,[rax-0x1]
  40ce53:	test   eax,eax
  40ce55:	mov    DWORD PTR [rsi+0xc],edx
  40ce58:	jg     0x40ce40
  40ce5a:	add    rsp,0x40
  40ce5e:	pop    rbx
  40ce5f:	pop    rsi
  40ce60:	pop    rdi
  40ce61:	pop    rbp
  40ce62:	pop    r12
  40ce64:	pop    r13
  40ce66:	pop    r14
  40ce68:	ret    
  40ce69:	mov    eax,DWORD PTR [rsi+0xc]
  40ce6c:	mov    ebp,ebx
  40ce6e:	cmp    ebp,eax
  40ce70:	jl     0x40cddb
  40ce76:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40ce7d:	jmp    0x40cdf0
  40ce82:	sub    eax,0x1
  40ce85:	mov    DWORD PTR [rsi+0xc],eax
  40ce88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce90:	mov    rdx,rsi
  40ce93:	mov    ecx,0x20
  40ce98:	call   0x40cd30
  40ce9d:	mov    eax,DWORD PTR [rsi+0xc]
  40cea0:	lea    edx,[rax-0x1]
  40cea3:	test   eax,eax
  40cea5:	mov    DWORD PTR [rsi+0xc],edx
  40cea8:	jne    0x40ce90
  40ceaa:	jmp    0x40cdf0
  40ceaf:	nop
  40ceb0:	push   rdi
  40ceb1:	push   rsi
  40ceb2:	push   rbx
  40ceb3:	sub    rsp,0x20
  40ceb7:	mov    edi,DWORD PTR [r8+0x10]
  40cebb:	mov    rsi,rcx
  40cebe:	mov    rbx,r8
  40cec1:	cmp    edi,edx
  40cec3:	jge    0x40cf40
  40cec5:	test   edi,edi
  40cec7:	js     0x40cf40
  40cec9:	mov    eax,DWORD PTR [rbx+0xc]
  40cecc:	cmp    edi,eax
  40cece:	jge    0x40cf49
  40ced0:	sub    eax,edi
  40ced2:	test   eax,eax
  40ced4:	mov    DWORD PTR [rbx+0xc],eax
  40ced7:	jle    0x40cfa2
  40cedd:	test   BYTE PTR [rbx+0x9],0x4
  40cee1:	jne    0x40cf70
  40cee7:	sub    eax,0x1
  40ceea:	mov    DWORD PTR [rbx+0xc],eax
  40ceed:	nop    DWORD PTR [rax]
  40cef0:	mov    rdx,rbx
  40cef3:	mov    ecx,0x20
  40cef8:	call   0x40cd30
  40cefd:	mov    eax,DWORD PTR [rbx+0xc]
  40cf00:	mov    edx,eax
  40cf02:	sub    eax,0x1
  40cf05:	test   edx,edx
  40cf07:	mov    DWORD PTR [rbx+0xc],eax
  40cf0a:	jne    0x40cef0
  40cf0c:	test   edi,edi
  40cf0e:	lea    edx,[rdi-0x1]
  40cf11:	je     0x40cf90
  40cf13:	lea    rdi,[rsi+rdx*1+0x1]
  40cf18:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf20:	add    rsi,0x1
  40cf24:	movsx  ecx,BYTE PTR [rsi-0x1]
  40cf28:	mov    rdx,rbx
  40cf2b:	call   0x40cd30
  40cf30:	cmp    rsi,rdi
  40cf33:	jne    0x40cf20
  40cf35:	jmp    0x40cf8d
  40cf37:	nop    WORD PTR [rax+rax*1+0x0]
  40cf40:	mov    eax,DWORD PTR [rbx+0xc]
  40cf43:	mov    edi,edx
  40cf45:	cmp    edi,eax
  40cf47:	jl     0x40ced0
  40cf49:	test   edi,edi
  40cf4b:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40cf52:	lea    edx,[rdi-0x1]
  40cf55:	jne    0x40cf13
  40cf57:	mov    DWORD PTR [rbx+0xc],0xfffffffe
  40cf5e:	add    rsp,0x20
  40cf62:	pop    rbx
  40cf63:	pop    rsi
  40cf64:	pop    rdi
  40cf65:	ret    
  40cf66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf70:	test   edi,edi
  40cf72:	lea    edx,[rdi-0x1]
  40cf75:	jne    0x40cf13
  40cf77:	sub    eax,0x1
  40cf7a:	mov    DWORD PTR [rbx+0xc],eax
  40cf7d:	nop    DWORD PTR [rax]
  40cf80:	mov    rdx,rbx
  40cf83:	mov    ecx,0x20
  40cf88:	call   0x40cd30
  40cf8d:	mov    eax,DWORD PTR [rbx+0xc]
  40cf90:	lea    edx,[rax-0x1]
  40cf93:	test   eax,eax
  40cf95:	mov    DWORD PTR [rbx+0xc],edx
  40cf98:	jg     0x40cf80
  40cf9a:	add    rsp,0x20
  40cf9e:	pop    rbx
  40cf9f:	pop    rsi
  40cfa0:	pop    rdi
  40cfa1:	ret    
  40cfa2:	test   edi,edi
  40cfa4:	lea    edx,[rdi-0x1]
  40cfa7:	jne    0x40cf13
  40cfad:	sub    eax,0x1
  40cfb0:	mov    DWORD PTR [rbx+0xc],eax
  40cfb3:	jmp    0x40cf5e
  40cfb5:	nop
  40cfb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cfc0:	sub    rsp,0x38
  40cfc4:	test   ecx,ecx
  40cfc6:	mov    DWORD PTR [r8+0x10],0xffffffff
  40cfce:	je     0x40d014
  40cfd0:	lea    rcx,[rsp+0x20]
  40cfd5:	mov    r11d,DWORD PTR [r8+0x8]
  40cfd9:	mov    BYTE PTR [rsp+0x20],0x2d
  40cfde:	lea    r10,[rcx+0x1]
  40cfe2:	and    r11d,0x20
  40cfe6:	xor    r9d,r9d
  40cfe9:	movzx  eax,BYTE PTR [rdx+r9*1]
  40cfee:	and    eax,0xffffffdf
  40cff1:	or     eax,r11d
  40cff4:	mov    BYTE PTR [r10+r9*1],al
  40cff8:	add    r9,0x1
  40cffc:	cmp    r9,0x3
  40d000:	jne    0x40cfe9
  40d002:	lea    rdx,[r10+0x3]
  40d006:	sub    rdx,rcx
  40d009:	call   0x40ceb0
  40d00e:	nop
  40d00f:	add    rsp,0x38
  40d013:	ret    
  40d014:	mov    r11d,DWORD PTR [r8+0x8]
  40d018:	test   r11d,0x100
  40d01f:	je     0x40d031
  40d021:	lea    rcx,[rsp+0x20]
  40d026:	mov    BYTE PTR [rsp+0x20],0x2b
  40d02b:	lea    r10,[rcx+0x1]
  40d02f:	jmp    0x40cfe2
  40d031:	test   r11b,0x40
  40d035:	je     0x40d050
  40d037:	lea    rcx,[rsp+0x20]
  40d03c:	mov    BYTE PTR [rsp+0x20],0x20
  40d041:	lea    r10,[rcx+0x1]
  40d045:	jmp    0x40cfe2
  40d047:	nop    WORD PTR [rax+rax*1+0x0]
  40d050:	lea    rcx,[rsp+0x20]
  40d055:	mov    r10,rcx
  40d058:	jmp    0x40cfe2
  40d05a:	nop    WORD PTR [rax+rax*1+0x0]
  40d060:	push   rbp
  40d061:	push   r12
  40d063:	push   rdi
  40d064:	push   rsi
  40d065:	push   rbx
  40d066:	mov    rbp,rsp
  40d069:	sub    rsp,0x30
  40d06d:	cmp    DWORD PTR [rcx+0x14],0xfffffffd
  40d071:	mov    rsi,rcx
  40d074:	je     0x40d110
  40d07a:	movzx  edx,WORD PTR [rcx+0x18]
  40d07e:	test   dx,dx
  40d081:	je     0x40d0e2
  40d083:	movsxd rax,DWORD PTR [rsi+0x14]
  40d087:	mov    r12,rsp
  40d08a:	add    rax,0xf
  40d08e:	and    rax,0xfffffffffffffff0
  40d092:	call   0x40c5e0
  40d097:	sub    rsp,rax
  40d09a:	lea    r8,[rbp-0x4]
  40d09e:	mov    DWORD PTR [rbp-0x4],0x0
  40d0a5:	lea    rbx,[rsp+0x20]
  40d0aa:	mov    rcx,rbx
  40d0ad:	call   0x411250
  40d0b2:	test   eax,eax
  40d0b4:	jle    0x40d100
  40d0b6:	sub    eax,0x1
  40d0b9:	lea    rdi,[rbx+rax*1+0x1]
  40d0be:	xchg   ax,ax
  40d0c0:	add    rbx,0x1
  40d0c4:	movsx  ecx,BYTE PTR [rbx-0x1]
  40d0c8:	mov    rdx,rsi
  40d0cb:	call   0x40cd30
  40d0d0:	cmp    rbx,rdi
  40d0d3:	jne    0x40d0c0
  40d0d5:	mov    rsp,r12
  40d0d8:	mov    rsp,rbp
  40d0db:	pop    rbx
  40d0dc:	pop    rsi
  40d0dd:	pop    rdi
  40d0de:	pop    r12
  40d0e0:	pop    rbp
  40d0e1:	ret    
  40d0e2:	mov    rdx,rsi
  40d0e5:	mov    ecx,0x2e
  40d0ea:	call   0x40cd30
  40d0ef:	nop
  40d0f0:	mov    rsp,rbp
  40d0f3:	pop    rbx
  40d0f4:	pop    rsi
  40d0f5:	pop    rdi
  40d0f6:	pop    r12
  40d0f8:	pop    rbp
  40d0f9:	ret    
  40d0fa:	nop    WORD PTR [rax+rax*1+0x0]
  40d100:	mov    rdx,rsi
  40d103:	mov    ecx,0x2e
  40d108:	call   0x40cd30
  40d10d:	jmp    0x40d0d5
  40d10f:	nop
  40d110:	mov    DWORD PTR [rbp-0x4],0x0
  40d117:	call   0x4114c0
  40d11c:	mov    rdx,QWORD PTR [rax]
  40d11f:	lea    rcx,[rbp-0x6]
  40d123:	lea    r9,[rbp-0x4]
  40d127:	mov    r8d,0x10
  40d12d:	call   0x40c790
  40d132:	test   eax,eax
  40d134:	jle    0x40d146
  40d136:	movzx  edx,WORD PTR [rbp-0x6]
  40d13a:	mov    WORD PTR [rsi+0x18],dx
  40d13e:	mov    DWORD PTR [rsi+0x14],eax
  40d141:	jmp    0x40d07e
  40d146:	movzx  edx,WORD PTR [rsi+0x18]
  40d14a:	jmp    0x40d13e
  40d14c:	nop    DWORD PTR [rax+0x0]
  40d150:	push   r12
  40d152:	push   rbp
  40d153:	push   rdi
  40d154:	push   rsi
  40d155:	push   rbx
  40d156:	sub    rsp,0x20
  40d15a:	mov    esi,r8d
  40d15d:	mov    ebp,ecx
  40d15f:	mov    rdi,rdx
  40d162:	test   esi,esi
  40d164:	mov    rbx,r9
  40d167:	mov    r8d,DWORD PTR [r9+0xc]
  40d16b:	jle    0x40d342
  40d171:	cmp    esi,r8d
  40d174:	jg     0x40d2b0
  40d17a:	sub    r8d,esi
  40d17d:	mov    DWORD PTR [r9+0xc],r8d
  40d181:	test   r8d,r8d
  40d184:	js     0x40d2b0
  40d18a:	mov    eax,DWORD PTR [rbx+0x10]
  40d18d:	cmp    eax,r8d
  40d190:	jge    0x40d2b0
  40d196:	sub    r8d,eax
  40d199:	test   r8d,r8d
  40d19c:	mov    DWORD PTR [rbx+0xc],r8d
  40d1a0:	jle    0x40d2bd
  40d1a6:	test   eax,eax
  40d1a8:	jle    0x40d3f5
  40d1ae:	sub    r8d,0x1
  40d1b2:	test   esi,esi
  40d1b4:	mov    DWORD PTR [rbx+0xc],r8d
  40d1b8:	jle    0x40d1c4
  40d1ba:	test   BYTE PTR [rbx+0x9],0x10
  40d1be:	jne    0x40d2cf
  40d1c4:	test   r8d,r8d
  40d1c7:	jle    0x40d20d
  40d1c9:	test   ebp,ebp
  40d1cb:	jne    0x40d1db
  40d1cd:	mov    eax,DWORD PTR [rbx+0x8]
  40d1d0:	test   eax,0x1c0
  40d1d5:	je     0x40d3d5
  40d1db:	sub    r8d,0x1
  40d1df:	test   r8d,r8d
  40d1e2:	mov    DWORD PTR [rbx+0xc],r8d
  40d1e6:	jle    0x40d20d
  40d1e8:	test   DWORD PTR [rbx+0x8],0x600
  40d1ef:	jne    0x40d20d
  40d1f1:	jmp    0x40d200
  40d1f3:	mov    rdx,rbx
  40d1f6:	mov    ecx,0x20
  40d1fb:	call   0x40cd30
  40d200:	mov    eax,DWORD PTR [rbx+0xc]
  40d203:	lea    edx,[rax-0x1]
  40d206:	test   eax,eax
  40d208:	mov    DWORD PTR [rbx+0xc],edx
  40d20b:	jg     0x40d1f3
  40d20d:	test   ebp,ebp
  40d20f:	jne    0x40d330
  40d215:	mov    eax,DWORD PTR [rbx+0x8]
  40d218:	test   ah,0x1
  40d21b:	jne    0x40d360
  40d221:	test   al,0x40
  40d223:	jne    0x40d3e3
  40d229:	mov    edx,DWORD PTR [rbx+0xc]
  40d22c:	test   edx,edx
  40d22e:	jle    0x40d243
  40d230:	mov    eax,DWORD PTR [rbx+0x8]
  40d233:	and    eax,0x600
  40d238:	cmp    eax,0x200
  40d23d:	je     0x40d372
  40d243:	test   esi,esi
  40d245:	jle    0x40d3a2
  40d24b:	lea    r12,[rbx+0x20]
  40d24f:	mov    ebp,0x55555556
  40d254:	movzx  eax,BYTE PTR [rdi]
  40d257:	mov    ecx,0x30
  40d25c:	test   al,al
  40d25e:	je     0x40d267
  40d260:	add    rdi,0x1
  40d264:	movsx  ecx,al
  40d267:	mov    rdx,rbx
  40d26a:	call   0x40cd30
  40d26f:	sub    esi,0x1
  40d272:	je     0x40d490
  40d278:	test   BYTE PTR [rbx+0x9],0x10
  40d27c:	je     0x40d254
  40d27e:	cmp    WORD PTR [rbx+0x20],0x0
  40d283:	je     0x40d254
  40d285:	mov    eax,esi
  40d287:	imul   ebp
  40d289:	mov    eax,esi
  40d28b:	sar    eax,0x1f
  40d28e:	sub    edx,eax
  40d290:	lea    eax,[rdx+rdx*2]
  40d293:	cmp    esi,eax
  40d295:	jne    0x40d254
  40d297:	mov    r8,rbx
  40d29a:	mov    edx,0x1
  40d29f:	mov    rcx,r12
  40d2a2:	call   0x40cd90
  40d2a7:	jmp    0x40d254
  40d2a9:	nop    DWORD PTR [rax+0x0]
  40d2b0:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40d2b7:	mov    r8d,0xffffffff
  40d2bd:	test   esi,esi
  40d2bf:	jle    0x40d20d
  40d2c5:	test   BYTE PTR [rbx+0x9],0x10
  40d2c9:	je     0x40d20d
  40d2cf:	cmp    WORD PTR [rbx+0x20],0x0
  40d2d4:	je     0x40d1c4
  40d2da:	lea    ecx,[rsi+0x2]
  40d2dd:	mov    edx,0x55555556
  40d2e2:	mov    eax,ecx
  40d2e4:	sar    ecx,0x1f
  40d2e7:	imul   edx
  40d2e9:	sub    edx,ecx
  40d2eb:	cmp    edx,0x1
  40d2ee:	jle    0x40d1c4
  40d2f4:	test   r8d,r8d
  40d2f7:	jle    0x40d20d
  40d2fd:	mov    eax,r8d
  40d300:	sub    eax,edx
  40d302:	add    eax,0x1
  40d305:	jmp    0x40d319
  40d307:	nop    WORD PTR [rax+rax*1+0x0]
  40d310:	test   r8d,r8d
  40d313:	je     0x40d484
  40d319:	sub    r8d,0x1
  40d31d:	cmp    r8d,eax
  40d320:	jne    0x40d310
  40d322:	mov    DWORD PTR [rbx+0xc],r8d
  40d326:	jmp    0x40d1c4
  40d32b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d330:	mov    rdx,rbx
  40d333:	mov    ecx,0x2d
  40d338:	call   0x40cd30
  40d33d:	jmp    0x40d229
  40d342:	test   r8d,r8d
  40d345:	jle    0x40d181
  40d34b:	sub    r8d,0x1
  40d34f:	mov    DWORD PTR [r9+0xc],r8d
  40d353:	jmp    0x40d18a
  40d358:	nop    DWORD PTR [rax+rax*1+0x0]
  40d360:	mov    rdx,rbx
  40d363:	mov    ecx,0x2b
  40d368:	call   0x40cd30
  40d36d:	jmp    0x40d229
  40d372:	sub    edx,0x1
  40d375:	mov    DWORD PTR [rbx+0xc],edx
  40d378:	nop    DWORD PTR [rax+rax*1+0x0]
  40d380:	mov    rdx,rbx
  40d383:	mov    ecx,0x30
  40d388:	call   0x40cd30
  40d38d:	mov    eax,DWORD PTR [rbx+0xc]
  40d390:	lea    edx,[rax-0x1]
  40d393:	test   eax,eax
  40d395:	mov    DWORD PTR [rbx+0xc],edx
  40d398:	jg     0x40d380
  40d39a:	test   esi,esi
  40d39c:	jg     0x40d24b
  40d3a2:	mov    rdx,rbx
  40d3a5:	mov    ecx,0x30
  40d3aa:	call   0x40cd30
  40d3af:	mov    eax,DWORD PTR [rbx+0x10]
  40d3b2:	test   eax,eax
  40d3b4:	jg     0x40d422
  40d3b6:	test   BYTE PTR [rbx+0x9],0x8
  40d3ba:	jne    0x40d422
  40d3bc:	test   esi,esi
  40d3be:	jne    0x40d466
  40d3c4:	sub    eax,0x1
  40d3c7:	mov    DWORD PTR [rbx+0x10],eax
  40d3ca:	add    rsp,0x20
  40d3ce:	pop    rbx
  40d3cf:	pop    rsi
  40d3d0:	pop    rdi
  40d3d1:	pop    rbp
  40d3d2:	pop    r12
  40d3d4:	ret    
  40d3d5:	test   ah,0x6
  40d3d8:	je     0x40d200
  40d3de:	jmp    0x40d218
  40d3e3:	mov    rdx,rbx
  40d3e6:	mov    ecx,0x20
  40d3eb:	call   0x40cd30
  40d3f0:	jmp    0x40d229
  40d3f5:	mov    eax,DWORD PTR [rbx+0x8]
  40d3f8:	test   ah,0x8
  40d3fb:	jne    0x40d1ae
  40d401:	test   esi,esi
  40d403:	jle    0x40d1c9
  40d409:	test   ah,0x10
  40d40c:	je     0x40d1c9
  40d412:	cmp    WORD PTR [rbx+0x20],0x0
  40d417:	jne    0x40d2da
  40d41d:	jmp    0x40d1c9
  40d422:	mov    rcx,rbx
  40d425:	call   0x40d060
  40d42a:	test   esi,esi
  40d42c:	je     0x40d44b
  40d42e:	jmp    0x40d463
  40d430:	movzx  eax,BYTE PTR [rdi]
  40d433:	mov    ecx,0x30
  40d438:	test   al,al
  40d43a:	je     0x40d443
  40d43c:	add    rdi,0x1
  40d440:	movsx  ecx,al
  40d443:	mov    rdx,rbx
  40d446:	call   0x40cd30
  40d44b:	mov    eax,DWORD PTR [rbx+0x10]
  40d44e:	lea    edx,[rax-0x1]
  40d451:	test   eax,eax
  40d453:	mov    DWORD PTR [rbx+0x10],edx
  40d456:	jg     0x40d430
  40d458:	add    rsp,0x20
  40d45c:	pop    rbx
  40d45d:	pop    rsi
  40d45e:	pop    rdi
  40d45f:	pop    rbp
  40d460:	pop    r12
  40d462:	ret    
  40d463:	mov    eax,DWORD PTR [rbx+0x10]
  40d466:	add    eax,esi
  40d468:	mov    DWORD PTR [rbx+0x10],eax
  40d46b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d470:	mov    rdx,rbx
  40d473:	mov    ecx,0x30
  40d478:	call   0x40cd30
  40d47d:	add    esi,0x1
  40d480:	jne    0x40d470
  40d482:	jmp    0x40d44b
  40d484:	mov    DWORD PTR [rbx+0xc],0x0
  40d48b:	jmp    0x40d20d
  40d490:	mov    eax,DWORD PTR [rbx+0x10]
  40d493:	test   eax,eax
  40d495:	jle    0x40d4a1
  40d497:	mov    rcx,rbx
  40d49a:	call   0x40d060
  40d49f:	jmp    0x40d44b
  40d4a1:	test   BYTE PTR [rbx+0x9],0x8
  40d4a5:	jne    0x40d497
  40d4a7:	jmp    0x40d3c4
  40d4ac:	nop    DWORD PTR [rax+0x0]
  40d4b0:	push   rsi
  40d4b1:	push   rbx
  40d4b2:	sub    rsp,0x68
  40d4b6:	mov    r8d,DWORD PTR [rdx+0x10]
  40d4ba:	fld    TBYTE PTR [rcx]
  40d4bc:	mov    rbx,rdx
  40d4bf:	test   r8d,r8d
  40d4c2:	js     0x40d560
  40d4c8:	lea    rdx,[rsp+0x30]
  40d4cd:	lea    r9,[rsp+0x4c]
  40d4d2:	mov    ecx,0x3
  40d4d7:	fstp   TBYTE PTR [rsp+0x50]
  40d4db:	mov    rax,QWORD PTR [rsp+0x50]
  40d4e0:	mov    QWORD PTR [rsp+0x30],rax
  40d4e5:	mov    rax,QWORD PTR [rsp+0x58]
  40d4ea:	mov    QWORD PTR [rsp+0x38],rax
  40d4ef:	lea    rax,[rsp+0x48]
  40d4f4:	mov    QWORD PTR [rsp+0x20],rax
  40d4f9:	call   0x40cc30
  40d4fe:	mov    r8d,DWORD PTR [rsp+0x4c]
  40d503:	mov    rsi,rax
  40d506:	cmp    r8d,0xffff8000
  40d50d:	je     0x40d572
  40d50f:	mov    ecx,DWORD PTR [rsp+0x48]
  40d513:	mov    rdx,rax
  40d516:	mov    r9,rbx
  40d519:	call   0x40d150
  40d51e:	mov    eax,DWORD PTR [rbx+0xc]
  40d521:	lea    edx,[rax-0x1]
  40d524:	test   eax,eax
  40d526:	mov    DWORD PTR [rbx+0xc],edx
  40d529:	jle    0x40d54e
  40d52b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d530:	mov    rdx,rbx
  40d533:	mov    ecx,0x20
  40d538:	call   0x40cd30
  40d53d:	mov    r8d,DWORD PTR [rbx+0xc]
  40d541:	lea    r9d,[r8-0x1]
  40d545:	test   r8d,r8d
  40d548:	mov    DWORD PTR [rbx+0xc],r9d
  40d54c:	jg     0x40d530
  40d54e:	mov    rcx,rsi
  40d551:	call   0x40ef40
  40d556:	nop
  40d557:	add    rsp,0x68
  40d55b:	pop    rbx
  40d55c:	pop    rsi
  40d55d:	ret    
  40d55e:	xchg   ax,ax
  40d560:	mov    DWORD PTR [rdx+0x10],0x6
  40d567:	mov    r8d,0x6
  40d56d:	jmp    0x40d4c8
  40d572:	mov    ecx,DWORD PTR [rsp+0x48]
  40d576:	mov    r8,rbx
  40d579:	mov    rdx,rax
  40d57c:	call   0x40cfc0
  40d581:	mov    rcx,rsi
  40d584:	call   0x40ef40
  40d589:	nop
  40d58a:	add    rsp,0x68
  40d58e:	pop    rbx
  40d58f:	pop    rsi
  40d590:	ret    
  40d591:	nop    DWORD PTR [rax+rax*1+0x0]
  40d596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d5a0:	push   rbp
  40d5a1:	push   r13
  40d5a3:	push   r12
  40d5a5:	push   rdi
  40d5a6:	push   rsi
  40d5a7:	push   rbx
  40d5a8:	sub    rsp,0x28
  40d5ac:	lea    rbp,[rsp+0x80]
  40d5b4:	mov    ebx,DWORD PTR [rdx+0x10]
  40d5b7:	mov    r11d,DWORD PTR [rdx+0x8]
  40d5bb:	mov    r8d,0x0
  40d5c1:	mov    rsi,rdx
  40d5c4:	test   ebx,ebx
  40d5c6:	cmovns r8d,ebx
  40d5ca:	add    r8d,0x17
  40d5ce:	test   r11d,0x1000
  40d5d5:	je     0x40d5e2
  40d5d7:	cmp    WORD PTR [rdx+0x20],0x0
  40d5dc:	jne    0x40d7d2
  40d5e2:	movsxd r13,DWORD PTR [rsi+0xc]
  40d5e6:	movsxd rax,r8d
  40d5e9:	cmp    r8d,r13d
  40d5ec:	cmovl  rax,r13
  40d5f0:	add    rax,0x1e
  40d5f4:	and    rax,0xfffffffffffffff0
  40d5f8:	call   0x40c5e0
  40d5fd:	sub    rsp,rax
  40d600:	test   r11b,0x80
  40d604:	lea    r12,[rsp+0x20]
  40d609:	je     0x40d61c
  40d60b:	test   rcx,rcx
  40d60e:	js     0x40d860
  40d614:	and    r11b,0x7f
  40d618:	mov    DWORD PTR [rsi+0x8],r11d
  40d61c:	test   rcx,rcx
  40d61f:	je     0x40d868
  40d625:	mov    r10d,r11d
  40d628:	mov    r8,r12
  40d62b:	movabs r9,0xcccccccccccccccd
  40d635:	and    r10d,0x1000
  40d63c:	jmp    0x40d673
  40d63e:	xchg   ax,ax
  40d640:	cmp    r12,rdi
  40d643:	je     0x40d670
  40d645:	test   r10d,r10d
  40d648:	je     0x40d670
  40d64a:	cmp    WORD PTR [rsi+0x20],0x0
  40d64f:	je     0x40d670
  40d651:	mov    rax,rdi
  40d654:	sub    rax,r12
  40d657:	cqo    
  40d659:	shr    rdx,0x3e
  40d65d:	add    rax,rdx
  40d660:	and    eax,0x3
  40d663:	sub    rax,rdx
  40d666:	cmp    rax,0x3
  40d66a:	je     0x40d7b0
  40d670:	mov    r8,rdi
  40d673:	mov    rax,rcx
  40d676:	lea    rdi,[r8+0x1]
  40d67a:	mul    r9
  40d67d:	shr    rdx,0x3
  40d681:	lea    rax,[rdx+rdx*4]
  40d685:	add    rax,rax
  40d688:	sub    rcx,rax
  40d68b:	add    ecx,0x30
  40d68e:	test   rdx,rdx
  40d691:	mov    BYTE PTR [r8],cl
  40d694:	mov    rcx,rdx
  40d697:	jne    0x40d640
  40d699:	test   ebx,ebx
  40d69b:	jle    0x40d6d5
  40d69d:	mov    rax,r12
  40d6a0:	sub    rax,rdi
  40d6a3:	add    eax,ebx
  40d6a5:	test   eax,eax
  40d6a7:	jle    0x40d6d5
  40d6a9:	sub    eax,0x1
  40d6ac:	mov    rdx,rax
  40d6af:	lea    rcx,[rdi+rax*1+0x1]
  40d6b4:	mov    rax,rdi
  40d6b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d6c0:	add    rax,0x1
  40d6c4:	mov    BYTE PTR [rax-0x1],0x30
  40d6c8:	cmp    rax,rcx
  40d6cb:	jne    0x40d6c0
  40d6cd:	movsxd rax,edx
  40d6d0:	lea    rdi,[rdi+rax*1+0x1]
  40d6d5:	cmp    r12,rdi
  40d6d8:	jne    0x40d6e5
  40d6da:	test   ebx,ebx
  40d6dc:	je     0x40d6e5
  40d6de:	mov    BYTE PTR [rdi],0x30
  40d6e1:	add    rdi,0x1
  40d6e5:	test   r13d,r13d
  40d6e8:	jle    0x40d74e
  40d6ea:	mov    rax,r12
  40d6ed:	sub    rax,rdi
  40d6f0:	add    r13d,eax
  40d6f3:	test   r13d,r13d
  40d6f6:	mov    DWORD PTR [rsi+0xc],r13d
  40d6fa:	jle    0x40d74e
  40d6fc:	test   r11d,0x1c0
  40d703:	je     0x40d70d
  40d705:	sub    r13d,0x1
  40d709:	mov    DWORD PTR [rsi+0xc],r13d
  40d70d:	test   ebx,ebx
  40d70f:	js     0x40d810
  40d715:	test   r11d,0x400
  40d71c:	jne    0x40d74e
  40d71e:	mov    eax,DWORD PTR [rsi+0xc]
  40d721:	lea    edx,[rax-0x1]
  40d724:	test   eax,eax
  40d726:	mov    DWORD PTR [rsi+0xc],edx
  40d729:	jle    0x40d74e
  40d72b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d730:	mov    rdx,rsi
  40d733:	mov    ecx,0x20
  40d738:	call   0x40cd30
  40d73d:	mov    eax,DWORD PTR [rsi+0xc]
  40d740:	lea    edx,[rax-0x1]
  40d743:	test   eax,eax
  40d745:	mov    DWORD PTR [rsi+0xc],edx
  40d748:	jg     0x40d730
  40d74a:	mov    r11d,DWORD PTR [rsi+0x8]
  40d74e:	test   r11b,0x80
  40d752:	je     0x40d7c0
  40d754:	lea    rbx,[rdi+0x1]
  40d758:	mov    BYTE PTR [rdi],0x2d
  40d75b:	cmp    r12,rbx
  40d75e:	jae    0x40d78e
  40d760:	sub    rbx,0x1
  40d764:	movsx  ecx,BYTE PTR [rbx]
  40d767:	mov    rdx,rsi
  40d76a:	call   0x40cd30
  40d76f:	cmp    rbx,r12
  40d772:	jne    0x40d760
  40d774:	mov    eax,DWORD PTR [rsi+0xc]
  40d777:	lea    edx,[rax-0x1]
  40d77a:	test   eax,eax
  40d77c:	mov    DWORD PTR [rsi+0xc],edx
  40d77f:	jle    0x40d79b
  40d781:	mov    rdx,rsi
  40d784:	mov    ecx,0x20
  40d789:	call   0x40cd30
  40d78e:	mov    eax,DWORD PTR [rsi+0xc]
  40d791:	lea    edx,[rax-0x1]
  40d794:	test   eax,eax
  40d796:	mov    DWORD PTR [rsi+0xc],edx
  40d799:	jg     0x40d781
  40d79b:	lea    rsp,[rbp-0x58]
  40d79f:	pop    rbx
  40d7a0:	pop    rsi
  40d7a1:	pop    rdi
  40d7a2:	pop    r12
  40d7a4:	pop    r13
  40d7a6:	pop    rbp
  40d7a7:	ret    
  40d7a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d7b0:	lea    rdi,[r8+0x2]
  40d7b4:	mov    BYTE PTR [r8+0x1],0x2c
  40d7b9:	jmp    0x40d670
  40d7be:	xchg   ax,ax
  40d7c0:	test   r11d,0x100
  40d7c7:	je     0x40d7f0
  40d7c9:	lea    rbx,[rdi+0x1]
  40d7cd:	mov    BYTE PTR [rdi],0x2b
  40d7d0:	jmp    0x40d75b
  40d7d2:	mov    eax,r8d
  40d7d5:	mov    edx,0x55555556
  40d7da:	imul   edx
  40d7dc:	mov    eax,r8d
  40d7df:	sar    eax,0x1f
  40d7e2:	sub    edx,eax
  40d7e4:	add    r8d,edx
  40d7e7:	jmp    0x40d5e2
  40d7ec:	nop    DWORD PTR [rax+0x0]
  40d7f0:	and    r11d,0x40
  40d7f4:	mov    rbx,rdi
  40d7f7:	je     0x40d75b
  40d7fd:	add    rbx,0x1
  40d801:	mov    BYTE PTR [rdi],0x20
  40d804:	jmp    0x40d75b
  40d809:	nop    DWORD PTR [rax+0x0]
  40d810:	mov    eax,r11d
  40d813:	and    eax,0x600
  40d818:	cmp    eax,0x200
  40d81d:	jne    0x40d715
  40d823:	mov    eax,DWORD PTR [rsi+0xc]
  40d826:	lea    ecx,[rax-0x1]
  40d829:	test   eax,eax
  40d82b:	mov    DWORD PTR [rsi+0xc],ecx
  40d82e:	jle    0x40d74e
  40d834:	lea    rdx,[rdi+rcx*1+0x1]
  40d839:	mov    rax,rdi
  40d83c:	nop    DWORD PTR [rax+0x0]
  40d840:	add    rax,0x1
  40d844:	mov    BYTE PTR [rax-0x1],0x30
  40d848:	cmp    rax,rdx
  40d84b:	jne    0x40d840
  40d84d:	lea    rdi,[rdi+rcx*1+0x1]
  40d852:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40d859:	jmp    0x40d74e
  40d85e:	xchg   ax,ax
  40d860:	neg    rcx
  40d863:	jmp    0x40d61c
  40d868:	mov    rdi,r12
  40d86b:	jmp    0x40d699
  40d870:	push   rdi
  40d871:	push   rsi
  40d872:	push   rbx
  40d873:	sub    rsp,0x20
  40d877:	mov    rsi,r9
  40d87a:	lea    r9d,[r8-0x1]
  40d87e:	mov    r8d,0x66666667
  40d884:	mov    r10,rdx
  40d887:	mov    eax,r9d
  40d88a:	movsxd rbx,r9d
  40d88d:	sar    r9d,0x1f
  40d891:	imul   r8d
  40d894:	sar    edx,0x2
  40d897:	mov    r8d,edx
  40d89a:	sub    r8d,r9d
  40d89d:	mov    r9d,0x1
  40d8a3:	je     0x40d8cb
  40d8a5:	mov    r11d,0x66666667
  40d8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d8b0:	mov    eax,r8d
  40d8b3:	sar    r8d,0x1f
  40d8b7:	add    r9d,0x1
  40d8bb:	imul   r11d
  40d8be:	mov    eax,edx
  40d8c0:	sar    eax,0x2
  40d8c3:	sub    eax,r8d
  40d8c6:	mov    r8d,eax
  40d8c9:	jne    0x40d8b0
  40d8cb:	mov    edi,DWORD PTR [rsi+0x2c]
  40d8ce:	mov    eax,DWORD PTR [rsi+0xc]
  40d8d1:	cmp    r9d,edi
  40d8d4:	cmovge edi,r9d
  40d8d8:	lea    edx,[rdi+0x2]
  40d8db:	cmp    eax,edx
  40d8dd:	jg     0x40d932
  40d8df:	mov    DWORD PTR [rsi+0xc],0xffffffff
  40d8e6:	mov    r9,rsi
  40d8e9:	mov    rdx,r10
  40d8ec:	mov    r8d,0x1
  40d8f2:	call   0x40d150
  40d8f7:	mov    ecx,DWORD PTR [rsi+0x8]
  40d8fa:	mov    eax,DWORD PTR [rsi+0x2c]
  40d8fd:	mov    rdx,rsi
  40d900:	mov    DWORD PTR [rsi+0x10],eax
  40d903:	mov    eax,ecx
  40d905:	and    ecx,0x20
  40d908:	or     eax,0x1c0
  40d90d:	or     ecx,0x45
  40d910:	mov    DWORD PTR [rsi+0x8],eax
  40d913:	call   0x40cd30
  40d918:	lea    r9d,[rdi+0x1]
  40d91c:	add    DWORD PTR [rsi+0xc],r9d
  40d920:	mov    rdx,rsi
  40d923:	mov    rcx,rbx
  40d926:	add    rsp,0x20
  40d92a:	pop    rbx
  40d92b:	pop    rsi
  40d92c:	pop    rdi
  40d92d:	jmp    0x40d5a0
  40d932:	sub    eax,edx
  40d934:	mov    DWORD PTR [rsi+0xc],eax
  40d937:	jmp    0x40d8e6
  40d939:	nop    DWORD PTR [rax+0x0]
  40d940:	push   rsi
  40d941:	push   rbx
  40d942:	sub    rsp,0x68
  40d946:	mov    eax,DWORD PTR [rdx+0x10]
  40d949:	fld    TBYTE PTR [rcx]
  40d94b:	mov    rbx,rdx
  40d94e:	test   eax,eax
  40d950:	lea    r8d,[rax+0x1]
  40d954:	js     0x40d9c0
  40d956:	lea    rdx,[rsp+0x30]
  40d95b:	lea    r9,[rsp+0x4c]
  40d960:	mov    ecx,0x2
  40d965:	fstp   TBYTE PTR [rsp+0x50]
  40d969:	mov    rax,QWORD PTR [rsp+0x50]
  40d96e:	mov    QWORD PTR [rsp+0x30],rax
  40d973:	mov    rax,QWORD PTR [rsp+0x58]
  40d978:	mov    QWORD PTR [rsp+0x38],rax
  40d97d:	lea    rax,[rsp+0x48]
  40d982:	mov    QWORD PTR [rsp+0x20],rax
  40d987:	call   0x40cc30
  40d98c:	mov    r8d,DWORD PTR [rsp+0x4c]
  40d991:	mov    rsi,rax
  40d994:	cmp    r8d,0xffff8000
  40d99b:	je     0x40d9d0
  40d99d:	mov    ecx,DWORD PTR [rsp+0x48]
  40d9a1:	mov    r9,rbx
  40d9a4:	mov    rdx,rax
  40d9a7:	call   0x40d870
  40d9ac:	mov    rcx,rsi
  40d9af:	call   0x40ef40
  40d9b4:	nop
  40d9b5:	add    rsp,0x68
  40d9b9:	pop    rbx
  40d9ba:	pop    rsi
  40d9bb:	ret    
  40d9bc:	nop    DWORD PTR [rax+0x0]
  40d9c0:	mov    DWORD PTR [rdx+0x10],0x6
  40d9c7:	mov    r8d,0x7
  40d9cd:	jmp    0x40d956
  40d9cf:	nop
  40d9d0:	mov    ecx,DWORD PTR [rsp+0x48]
  40d9d4:	mov    r8,rbx
  40d9d7:	mov    rdx,rax
  40d9da:	call   0x40cfc0
  40d9df:	mov    rcx,rsi
  40d9e2:	call   0x40ef40
  40d9e7:	nop
  40d9e8:	add    rsp,0x68
  40d9ec:	pop    rbx
  40d9ed:	pop    rsi
  40d9ee:	ret    
  40d9ef:	nop
  40d9f0:	push   rsi
  40d9f1:	push   rbx
  40d9f2:	sub    rsp,0x78
  40d9f6:	mov    r8d,DWORD PTR [rdx+0x10]
  40d9fa:	fld    TBYTE PTR [rcx]
  40d9fc:	mov    rbx,rdx
  40d9ff:	test   r8d,r8d
  40da02:	js     0x40db40
  40da08:	je     0x40db20
  40da0e:	lea    rdx,[rsp+0x40]
  40da13:	lea    r9,[rsp+0x5c]
  40da18:	mov    ecx,0x2
  40da1d:	fstp   TBYTE PTR [rsp+0x60]
  40da21:	mov    rax,QWORD PTR [rsp+0x60]
  40da26:	mov    QWORD PTR [rsp+0x40],rax
  40da2b:	mov    rax,QWORD PTR [rsp+0x68]
  40da30:	mov    QWORD PTR [rsp+0x48],rax
  40da35:	lea    rax,[rsp+0x58]
  40da3a:	mov    QWORD PTR [rsp+0x20],rax
  40da3f:	call   0x40cc30
  40da44:	mov    r8d,DWORD PTR [rsp+0x5c]
  40da49:	mov    rsi,rax
  40da4c:	cmp    r8d,0xffff8000
  40da53:	je     0x40db60
  40da59:	cmp    r8d,0xfffffffd
  40da5d:	jl     0x40dae0
  40da63:	mov    eax,DWORD PTR [rbx+0x10]
  40da66:	cmp    r8d,eax
  40da69:	jg     0x40dae0
  40da6b:	test   BYTE PTR [rbx+0x9],0x8
  40da6f:	jne    0x40db52
  40da75:	mov    rcx,rsi
  40da78:	mov    DWORD PTR [rsp+0x3c],r8d
  40da7d:	call   0x411440
  40da82:	mov    r8d,DWORD PTR [rsp+0x3c]
  40da87:	sub    eax,r8d
  40da8a:	test   eax,eax
  40da8c:	mov    DWORD PTR [rbx+0x10],eax
  40da8f:	js     0x40db71
  40da95:	mov    ecx,DWORD PTR [rsp+0x58]
  40da99:	mov    rdx,rsi
  40da9c:	mov    r9,rbx
  40da9f:	call   0x40d150
  40daa4:	mov    eax,DWORD PTR [rbx+0xc]
  40daa7:	lea    edx,[rax-0x1]
  40daaa:	test   eax,eax
  40daac:	mov    DWORD PTR [rbx+0xc],edx
  40daaf:	jle    0x40db0d
  40dab1:	mov    rdx,rbx
  40dab4:	mov    ecx,0x20
  40dab9:	call   0x40cd30
  40dabe:	mov    r8d,DWORD PTR [rbx+0xc]
  40dac2:	lea    r9d,[r8-0x1]
  40dac6:	test   r8d,r8d
  40dac9:	mov    DWORD PTR [rbx+0xc],r9d
  40dacd:	jg     0x40dab1
  40dacf:	mov    rcx,rsi
  40dad2:	call   0x40ef40
  40dad7:	nop
  40dad8:	add    rsp,0x78
  40dadc:	pop    rbx
  40dadd:	pop    rsi
  40dade:	ret    
  40dadf:	nop
  40dae0:	test   BYTE PTR [rbx+0x9],0x8
  40dae4:	jne    0x40db32
  40dae6:	mov    rcx,rsi
  40dae9:	mov    DWORD PTR [rsp+0x3c],r8d
  40daee:	call   0x411440
  40daf3:	mov    r8d,DWORD PTR [rsp+0x3c]
  40daf8:	sub    eax,0x1
  40dafb:	mov    DWORD PTR [rbx+0x10],eax
  40dafe:	mov    ecx,DWORD PTR [rsp+0x58]
  40db02:	mov    r9,rbx
  40db05:	mov    rdx,rsi
  40db08:	call   0x40d870
  40db0d:	mov    rcx,rsi
  40db10:	call   0x40ef40
  40db15:	nop
  40db16:	add    rsp,0x78
  40db1a:	pop    rbx
  40db1b:	pop    rsi
  40db1c:	ret    
  40db1d:	nop    DWORD PTR [rax]
  40db20:	mov    DWORD PTR [rdx+0x10],0x1
  40db27:	mov    r8d,0x1
  40db2d:	jmp    0x40da0e
  40db32:	sub    DWORD PTR [rbx+0x10],0x1
  40db36:	jmp    0x40dafe
  40db38:	nop    DWORD PTR [rax+rax*1+0x0]
  40db40:	mov    DWORD PTR [rdx+0x10],0x6
  40db47:	mov    r8d,0x6
  40db4d:	jmp    0x40da0e
  40db52:	sub    eax,r8d
  40db55:	mov    DWORD PTR [rbx+0x10],eax
  40db58:	jmp    0x40da95
  40db5d:	nop    DWORD PTR [rax]
  40db60:	mov    ecx,DWORD PTR [rsp+0x58]
  40db64:	mov    r8,rbx
  40db67:	mov    rdx,rax
  40db6a:	call   0x40cfc0
  40db6f:	jmp    0x40db0d
  40db71:	mov    edx,DWORD PTR [rbx+0xc]
  40db74:	test   edx,edx
  40db76:	jle    0x40da95
  40db7c:	add    eax,edx
  40db7e:	mov    DWORD PTR [rbx+0xc],eax
  40db81:	jmp    0x40da95
  40db86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40db90:	push   rbp
  40db91:	push   r14
  40db93:	push   r13
  40db95:	push   r12
  40db97:	push   rdi
  40db98:	push   rsi
  40db99:	push   rbx
  40db9a:	mov    rbp,rsp
  40db9d:	sub    rsp,0x20
  40dba1:	mov    r10d,0x12
  40dba7:	mov    eax,0x18
  40dbac:	cmp    ecx,0x6f
  40dbaf:	mov    rbx,r8
  40dbb2:	mov    r8d,DWORD PTR [r8+0x10]
  40dbb6:	mov    r11d,ecx
  40dbb9:	setne  cl
  40dbbc:	mov    edi,DWORD PTR [rbx+0x8]
  40dbbf:	movzx  ecx,cl
  40dbc2:	cmovne eax,r10d
  40dbc6:	mov    r10b,0x0
  40dbc9:	add    ecx,0x3
  40dbcc:	test   r8d,r8d
  40dbcf:	mov    r9,rdx
  40dbd2:	cmovns r10d,r8d
  40dbd6:	add    r10d,eax
  40dbd9:	test   edi,0x1000
  40dbdf:	je     0x40dbec
  40dbe1:	cmp    WORD PTR [rbx+0x20],0x0
  40dbe6:	jne    0x40ddb3
  40dbec:	movsxd r12,DWORD PTR [rbx+0xc]
  40dbf0:	movsxd rax,r10d
  40dbf3:	cmp    r10d,r12d
  40dbf6:	cmovl  rax,r12
  40dbfa:	add    rax,0x1e
  40dbfe:	and    rax,0xfffffffffffffff0
  40dc02:	call   0x40c5e0
  40dc07:	xor    edx,edx
  40dc09:	sub    rsp,rax
  40dc0c:	cmp    r11d,0x6f
  40dc10:	lea    rsi,[rsp+0x20]
  40dc15:	setne  dl
  40dc18:	test   r9,r9
  40dc1b:	lea    edx,[rdx*8+0x7]
  40dc22:	mov    r10,rsi
  40dc25:	je     0x40ded2
  40dc2b:	mov    r13d,r11d
  40dc2e:	and    r13d,0x20
  40dc32:	jmp    0x40dc40
  40dc34:	shr    r9,cl
  40dc37:	mov    BYTE PTR [r10-0x1],r14b
  40dc3b:	test   r9,r9
  40dc3e:	je     0x40dc65
  40dc40:	mov    eax,edx
  40dc42:	add    r10,0x1
  40dc46:	and    eax,r9d
  40dc49:	lea    r14d,[rax+0x30]
  40dc4d:	cmp    r14b,0x39
  40dc51:	jbe    0x40dc34
  40dc53:	add    eax,0x37
  40dc56:	shr    r9,cl
  40dc59:	or     eax,r13d
  40dc5c:	test   r9,r9
  40dc5f:	mov    BYTE PTR [r10-0x1],al
  40dc63:	jne    0x40dc40
  40dc65:	cmp    rsi,r10
  40dc68:	je     0x40ded2
  40dc6e:	test   r8d,r8d
  40dc71:	jle    0x40de32
  40dc77:	mov    rax,rsi
  40dc7a:	sub    rax,r10
  40dc7d:	add    eax,r8d
  40dc80:	test   eax,eax
  40dc82:	jle    0x40de32
  40dc88:	sub    eax,0x1
  40dc8b:	mov    rdx,rax
  40dc8e:	lea    rcx,[r10+rax*1+0x1]
  40dc93:	mov    rax,r10
  40dc96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dca0:	add    rax,0x1
  40dca4:	mov    BYTE PTR [rax-0x1],0x30
  40dca8:	cmp    rax,rcx
  40dcab:	jne    0x40dca0
  40dcad:	movsxd rax,edx
  40dcb0:	lea    r10,[r10+rax*1+0x1]
  40dcb5:	cmp    rsi,r10
  40dcb8:	jne    0x40dcd0
  40dcba:	test   r8d,r8d
  40dcbd:	je     0x40dcd0
  40dcbf:	mov    BYTE PTR [r10],0x30
  40dcc3:	add    r10,0x1
  40dcc7:	nop    WORD PTR [rax+rax*1+0x0]
  40dcd0:	mov    rax,r10
  40dcd3:	sub    rax,rsi
  40dcd6:	cmp    r12d,eax
  40dcd9:	jle    0x40de00
  40dcdf:	sub    r12d,eax
  40dce2:	test   r12d,r12d
  40dce5:	mov    DWORD PTR [rbx+0xc],r12d
  40dce9:	jle    0x40df37
  40dcef:	cmp    r11d,0x6f
  40dcf3:	mov    edx,DWORD PTR [rbx+0x8]
  40dcf6:	je     0x40dec0
  40dcfc:	test   dh,0x8
  40dcff:	je     0x40de80
  40dd05:	lea    r13d,[r12-0x2]
  40dd0a:	test   r13d,r13d
  40dd0d:	jle    0x40dd18
  40dd0f:	test   r8d,r8d
  40dd12:	js     0x40ddcd
  40dd18:	test   r13d,r13d
  40dd1b:	mov    BYTE PTR [r10],r11b
  40dd1e:	lea    rdi,[r10+0x2]
  40dd22:	mov    BYTE PTR [r10+0x1],0x30
  40dd27:	jle    0x40de28
  40dd2d:	and    dh,0x4
  40dd30:	jne    0x40de53
  40dd36:	lea    r14d,[r13-0x1]
  40dd3a:	mov    r12d,r14d
  40dd3d:	nop    DWORD PTR [rax]
  40dd40:	sub    r12d,0x1
  40dd44:	mov    rdx,rbx
  40dd47:	mov    ecx,0x20
  40dd4c:	call   0x40cd30
  40dd51:	lea    eax,[r12+0x1]
  40dd56:	test   eax,eax
  40dd58:	jg     0x40dd40
  40dd5a:	test   r14d,r14d
  40dd5d:	lea    r13d,[r14-0x1]
  40dd61:	mov    r12d,0x0
  40dd67:	cmovns r12d,r14d
  40dd6b:	sub    r13d,r12d
  40dd6e:	cmp    rsi,rdi
  40dd71:	jb     0x40de60
  40dd77:	nop    WORD PTR [rax+rax*1+0x0]
  40dd80:	test   r13d,r13d
  40dd83:	lea    esi,[r13-0x1]
  40dd87:	jle    0x40dda5
  40dd89:	nop    DWORD PTR [rax+0x0]
  40dd90:	mov    rdx,rbx
  40dd93:	mov    ecx,0x20
  40dd98:	sub    esi,0x1
  40dd9b:	call   0x40cd30
  40dda0:	cmp    esi,0xffffffff
  40dda3:	jne    0x40dd90
  40dda5:	mov    rsp,rbp
  40dda8:	pop    rbx
  40dda9:	pop    rsi
  40ddaa:	pop    rdi
  40ddab:	pop    r12
  40ddad:	pop    r13
  40ddaf:	pop    r14
  40ddb1:	pop    rbp
  40ddb2:	ret    
  40ddb3:	mov    eax,r10d
  40ddb6:	mov    edx,0x55555556
  40ddbb:	imul   edx
  40ddbd:	mov    eax,r10d
  40ddc0:	sar    eax,0x1f
  40ddc3:	sub    edx,eax
  40ddc5:	add    r10d,edx
  40ddc8:	jmp    0x40dbec
  40ddcd:	mov    eax,edx
  40ddcf:	and    eax,0x600
  40ddd4:	cmp    eax,0x200
  40ddd9:	je     0x40dee0
  40dddf:	mov    r12d,r13d
  40dde2:	test   dh,0x8
  40dde5:	mov    r13d,r12d
  40dde8:	mov    rdi,r10
  40ddeb:	je     0x40dd2d
  40ddf1:	mov    r13d,r12d
  40ddf4:	jmp    0x40dd18
  40ddf9:	nop    DWORD PTR [rax+0x0]
  40de00:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40de07:	mov    r13d,0xffffffff
  40de0d:	cmp    r11d,0x6f
  40de11:	je     0x40de25
  40de13:	mov    edx,DWORD PTR [rbx+0x8]
  40de16:	mov    eax,edx
  40de18:	and    eax,0x800
  40de1d:	test   eax,eax
  40de1f:	jne    0x40dd18
  40de25:	mov    rdi,r10
  40de28:	cmp    rsi,rdi
  40de2b:	jb     0x40de60
  40de2d:	jmp    0x40dda5
  40de32:	cmp    r11d,0x6f
  40de36:	jne    0x40dcb5
  40de3c:	test   BYTE PTR [rbx+0x9],0x8
  40de40:	je     0x40dcb5
  40de46:	mov    BYTE PTR [r10],0x30
  40de4a:	add    r10,0x1
  40de4e:	jmp    0x40dcb5
  40de53:	cmp    rsi,rdi
  40de56:	jae    0x40df3f
  40de5c:	nop    DWORD PTR [rax+0x0]
  40de60:	sub    rdi,0x1
  40de64:	movsx  ecx,BYTE PTR [rdi]
  40de67:	mov    rdx,rbx
  40de6a:	call   0x40cd30
  40de6f:	cmp    rsi,rdi
  40de72:	jb     0x40de60
  40de74:	jmp    0x40dd80
  40de79:	nop    DWORD PTR [rax+0x0]
  40de80:	test   r8d,r8d
  40de83:	jns    0x40dde2
  40de89:	mov    eax,edx
  40de8b:	and    eax,0x600
  40de90:	cmp    eax,0x200
  40de95:	je     0x40df2e
  40de9b:	cmp    r11d,0x6f
  40de9f:	jne    0x40dde2
  40dea5:	and    dh,0x4
  40dea8:	jne    0x40deca
  40deaa:	lea    r14d,[r12-0x1]
  40deaf:	mov    rdi,r10
  40deb2:	jmp    0x40dd3a
  40deb7:	nop    WORD PTR [rax+rax*1+0x0]
  40dec0:	test   r8d,r8d
  40dec3:	js     0x40de89
  40dec5:	and    dh,0x4
  40dec8:	je     0x40deaa
  40deca:	mov    rdi,r10
  40decd:	mov    r13d,r12d
  40ded0:	jmp    0x40de6f
  40ded2:	and    edi,0xfffff7ff
  40ded8:	mov    DWORD PTR [rbx+0x8],edi
  40dedb:	jmp    0x40dc6e
  40dee0:	lea    r8d,[r12-0x3]
  40dee5:	mov    r12d,r8d
  40dee8:	mov    eax,r12d
  40deeb:	lea    rcx,[r10+rax*1+0x1]
  40def0:	mov    rax,r10
  40def3:	add    rax,0x1
  40def7:	mov    BYTE PTR [rax-0x1],0x30
  40defb:	cmp    rax,rcx
  40defe:	jne    0x40def3
  40df00:	movsxd rax,r8d
  40df03:	cmp    r11d,0x6f
  40df07:	lea    r10,[r10+rax*1+0x1]
  40df0c:	je     0x40df20
  40df0e:	mov    eax,edx
  40df10:	mov    r13d,0xffffffff
  40df16:	and    eax,0x800
  40df1b:	jmp    0x40de1d
  40df20:	mov    rdi,r10
  40df23:	mov    r13d,0xffffffff
  40df29:	jmp    0x40de28
  40df2e:	sub    r12d,0x1
  40df32:	mov    r8d,r12d
  40df35:	jmp    0x40dee8
  40df37:	mov    r13d,r12d
  40df3a:	jmp    0x40de0d
  40df3f:	lea    esi,[r13-0x1]
  40df43:	jmp    0x40dd90
  40df48:	nop    DWORD PTR [rax+rax*1+0x0]
  40df50:	push   r13
  40df52:	push   r12
  40df54:	push   rbp
  40df55:	push   rdi
  40df56:	push   rsi
  40df57:	push   rbx
  40df58:	sub    rsp,0x68
  40df5c:	mov    r9,QWORD PTR [rcx]
  40df5f:	mov    r10d,DWORD PTR [rcx+0x8]
  40df63:	mov    rbx,rdx
  40df66:	mov    rax,r9
  40df69:	mov    QWORD PTR [rsp+0x30],r9
  40df6e:	mov    DWORD PTR [rsp+0x38],r10d
  40df73:	shr    rax,0x20
  40df77:	mov    r8,r10
  40df7a:	and    eax,0x7fffffff
  40df7f:	or     r9d,eax
  40df82:	lea    eax,[r10+r10*1]
  40df86:	mov    edx,r9d
  40df89:	neg    edx
  40df8b:	and    eax,0xfffe
  40df90:	or     edx,r9d
  40df93:	shr    edx,0x1f
  40df96:	or     edx,eax
  40df98:	mov    eax,0xfffe
  40df9d:	sub    eax,edx
  40df9f:	sar    eax,0x10
  40dfa2:	test   eax,eax
  40dfa4:	jne    0x40e390
  40dfaa:	movzx  esi,WORD PTR [rsp+0x38]
  40dfaf:	mov    ecx,esi
  40dfb1:	and    ecx,0x8000
  40dfb7:	je     0x40dfc0
  40dfb9:	or     DWORD PTR [rbx+0x8],0x80
  40dfc0:	and    r8w,0x7fff
  40dfc6:	cmp    r8w,0x7fff
  40dfcc:	jne    0x40dff0
  40dfce:	test   r9d,r9d
  40dfd1:	jne    0x40dff0
  40dfd3:	lea    rdx,[rip+0x9f8a]        # 0x417f64
  40dfda:	mov    r8,rbx
  40dfdd:	call   0x40cfc0
  40dfe2:	jmp    0x40e365
  40dfe7:	nop    WORD PTR [rax+rax*1+0x0]
  40dff0:	and    si,0x7fff
  40dff5:	jne    0x40e120
  40dffb:	mov    rax,QWORD PTR [rsp+0x30]
  40e000:	test   rax,rax
  40e003:	jne    0x40e3af
  40e009:	mov    r9d,DWORD PTR [rbx+0x10]
  40e00d:	cmp    r9d,0xe
  40e011:	jbe    0x40e42c
  40e017:	xor    esi,esi
  40e019:	mov    r8d,DWORD PTR [rbx+0x8]
  40e01d:	lea    rbp,[rsp+0x40]
  40e022:	test   r9d,r9d
  40e025:	jle    0x40e43c
  40e02b:	lea    rax,[rbp+0x1]
  40e02f:	mov    BYTE PTR [rsp+0x40],0x2e
  40e034:	mov    r10d,DWORD PTR [rbx+0xc]
  40e038:	lea    rdi,[rax+0x1]
  40e03c:	mov    BYTE PTR [rax],0x30
  40e03f:	mov    r12d,0x2
  40e045:	test   r10d,r10d
  40e048:	jg     0x40e24c
  40e04e:	xchg   ax,ax
  40e050:	test   r8b,0x80
  40e054:	jne    0x40e310
  40e05a:	test   r8d,0x100
  40e061:	jne    0x40e400
  40e067:	and    r8d,0x40
  40e06b:	jne    0x40e412
  40e071:	mov    rdx,rbx
  40e074:	mov    ecx,0x30
  40e079:	call   0x40cd30
  40e07e:	mov    ecx,DWORD PTR [rbx+0x8]
  40e081:	mov    rdx,rbx
  40e084:	and    ecx,0x20
  40e087:	or     ecx,0x58
  40e08a:	call   0x40cd30
  40e08f:	mov    eax,DWORD PTR [rbx+0xc]
  40e092:	test   eax,eax
  40e094:	jle    0x40e0bc
  40e096:	test   BYTE PTR [rbx+0x9],0x2
  40e09a:	je     0x40e0bc
  40e09c:	sub    eax,0x1
  40e09f:	mov    DWORD PTR [rbx+0xc],eax
  40e0a2:	mov    rdx,rbx
  40e0a5:	mov    ecx,0x30
  40e0aa:	call   0x40cd30
  40e0af:	mov    eax,DWORD PTR [rbx+0xc]
  40e0b2:	lea    edx,[rax-0x1]
  40e0b5:	test   eax,eax
  40e0b7:	mov    DWORD PTR [rbx+0xc],edx
  40e0ba:	jg     0x40e0a2
  40e0bc:	cmp    rdi,rbp
  40e0bf:	lea    r13,[rsp+0x2e]
  40e0c4:	ja     0x40e0f9
  40e0c6:	jmp    0x40e32f
  40e0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e0d0:	movzx  eax,WORD PTR [rbx+0x20]
  40e0d4:	test   ax,ax
  40e0d7:	mov    WORD PTR [rsp+0x2e],ax
  40e0dc:	je     0x40e0f0
  40e0de:	mov    r8,rbx
  40e0e1:	mov    edx,0x1
  40e0e6:	mov    rcx,r13
  40e0e9:	call   0x40cd90
  40e0ee:	xchg   ax,ax
  40e0f0:	cmp    rdi,rbp
  40e0f3:	je     0x40e32f
  40e0f9:	sub    rdi,0x1
  40e0fd:	movsx  ecx,BYTE PTR [rdi]
  40e100:	cmp    ecx,0x2e
  40e103:	je     0x40e372
  40e109:	cmp    ecx,0x2c
  40e10c:	je     0x40e0d0
  40e10e:	mov    rdx,rbx
  40e111:	call   0x40cd30
  40e116:	jmp    0x40e0f0
  40e118:	nop    DWORD PTR [rax+rax*1+0x0]
  40e120:	mov    r9d,DWORD PTR [rbx+0x10]
  40e124:	sub    si,0x3fff
  40e129:	mov    rax,QWORD PTR [rsp+0x30]
  40e12e:	cmp    r9d,0xe
  40e132:	ja     0x40e3dd
  40e138:	test   rax,rax
  40e13b:	js     0x40e145
  40e13d:	nop    DWORD PTR [rax]
  40e140:	add    rax,rax
  40e143:	jns    0x40e140
  40e145:	mov    ecx,0xe
  40e14a:	mov    edx,0x4
  40e14f:	shr    rax,1
  40e152:	sub    ecx,r9d
  40e155:	shl    ecx,0x2
  40e158:	shl    rdx,cl
  40e15b:	add    rax,rdx
  40e15e:	js     0x40e424
  40e164:	add    rax,rax
  40e167:	mov    ecx,0xf
  40e16c:	sub    ecx,r9d
  40e16f:	shl    ecx,0x2
  40e172:	shr    rax,cl
  40e175:	mov    r8d,DWORD PTR [rbx+0x8]
  40e179:	lea    rbp,[rsp+0x40]
  40e17e:	mov    rdi,rbp
  40e181:	mov    r11d,r8d
  40e184:	mov    r10d,r8d
  40e187:	and    r11d,0x800
  40e18e:	and    r10d,0x20
  40e192:	jmp    0x40e1c3
  40e194:	mov    ecx,DWORD PTR [rbx+0x10]
  40e197:	test   ecx,ecx
  40e199:	jle    0x40e1a1
  40e19b:	sub    ecx,0x1
  40e19e:	mov    DWORD PTR [rbx+0x10],ecx
  40e1a1:	shr    rax,0x4
  40e1a5:	mov    r9,rdi
  40e1a8:	test   edx,edx
  40e1aa:	je     0x40e214
  40e1ac:	cmp    edx,0x9
  40e1af:	lea    rdi,[r9+0x1]
  40e1b3:	jle    0x40e227
  40e1b5:	add    edx,0x37
  40e1b8:	or     edx,r10d
  40e1bb:	mov    BYTE PTR [r9],dl
  40e1be:	test   rax,rax
  40e1c1:	je     0x40e230
  40e1c3:	mov    edx,eax
  40e1c5:	and    edx,0xf
  40e1c8:	cmp    edx,eax
  40e1ca:	jne    0x40e194
  40e1cc:	cmp    rdi,rbp
  40e1cf:	ja     0x40e1e2
  40e1d1:	test   r11d,r11d
  40e1d4:	jne    0x40e1e2
  40e1d6:	mov    r12d,DWORD PTR [rbx+0x10]
  40e1da:	mov    r9,rdi
  40e1dd:	test   r12d,r12d
  40e1e0:	jle    0x40e1e9
  40e1e2:	lea    r9,[rdi+0x1]
  40e1e6:	mov    BYTE PTR [rdi],0x2e
  40e1e9:	cmp    rax,0x1
  40e1ed:	jbe    0x40e3f9
  40e1f3:	lea    ecx,[rsi-0x1]
  40e1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e200:	shr    rax,1
  40e203:	mov    esi,ecx
  40e205:	cmp    rax,0x1
  40e209:	lea    ecx,[rsi-0x1]
  40e20c:	jne    0x40e200
  40e20e:	xor    al,al
  40e210:	test   edx,edx
  40e212:	jne    0x40e1ac
  40e214:	cmp    r9,rbp
  40e217:	ja     0x40e223
  40e219:	mov    ecx,DWORD PTR [rbx+0x10]
  40e21c:	mov    rdi,r9
  40e21f:	test   ecx,ecx
  40e221:	js     0x40e1be
  40e223:	lea    rdi,[r9+0x1]
  40e227:	add    edx,0x30
  40e22a:	jmp    0x40e1bb
  40e22c:	nop    DWORD PTR [rax+0x0]
  40e230:	cmp    rdi,rbp
  40e233:	je     0x40e433
  40e239:	mov    r10d,DWORD PTR [rbx+0xc]
  40e23d:	mov    r12d,0x2
  40e243:	test   r10d,r10d
  40e246:	jle    0x40e050
  40e24c:	mov    edx,DWORD PTR [rbx+0x10]
  40e24f:	mov    rax,rdi
  40e252:	movsx  r11d,si
  40e256:	sub    rax,rbp
  40e259:	lea    ecx,[rdx+rax*1]
  40e25c:	test   edx,edx
  40e25e:	mov    edx,r8d
  40e261:	cmovg  eax,ecx
  40e264:	and    edx,0x1c0
  40e26a:	mov    ecx,0x66666667
  40e26f:	cmp    edx,0x1
  40e272:	sbb    edx,edx
  40e274:	lea    r9d,[rax+rdx*1+0x6]
  40e279:	mov    eax,r11d
  40e27c:	imul   ecx
  40e27e:	mov    eax,r11d
  40e281:	sar    eax,0x1f
  40e284:	mov    ecx,edx
  40e286:	sar    ecx,0x2
  40e289:	sub    ecx,eax
  40e28b:	je     0x40e2b0
  40e28d:	mov    r11d,0x66666667
  40e293:	mov    eax,ecx
  40e295:	sar    ecx,0x1f
  40e298:	add    r9d,0x1
  40e29c:	imul   r11d
  40e29f:	add    r12d,0x1
  40e2a3:	sar    edx,0x2
  40e2a6:	sub    edx,ecx
  40e2a8:	mov    ecx,edx
  40e2aa:	jne    0x40e293
  40e2ac:	movsx  r12d,r12w
  40e2b0:	cmp    r10d,r9d
  40e2b3:	jle    0x40e380
  40e2b9:	sub    r10d,r9d
  40e2bc:	test   r8d,0x600
  40e2c3:	jne    0x40e3f0
  40e2c9:	lea    eax,[r10-0x1]
  40e2cd:	test   r10d,r10d
  40e2d0:	mov    DWORD PTR [rbx+0xc],eax
  40e2d3:	jle    0x40e050
  40e2d9:	nop    DWORD PTR [rax+0x0]
  40e2e0:	mov    rdx,rbx
  40e2e3:	mov    ecx,0x20
  40e2e8:	call   0x40cd30
  40e2ed:	mov    eax,DWORD PTR [rbx+0xc]
  40e2f0:	lea    edx,[rax-0x1]
  40e2f3:	test   eax,eax
  40e2f5:	mov    DWORD PTR [rbx+0xc],edx
  40e2f8:	jg     0x40e2e0
  40e2fa:	mov    r8d,DWORD PTR [rbx+0x8]
  40e2fe:	test   r8b,0x80
  40e302:	je     0x40e05a
  40e308:	nop    DWORD PTR [rax+rax*1+0x0]
  40e310:	mov    rdx,rbx
  40e313:	mov    ecx,0x2d
  40e318:	call   0x40cd30
  40e31d:	jmp    0x40e071
  40e322:	mov    rdx,rbx
  40e325:	mov    ecx,0x30
  40e32a:	call   0x40cd30
  40e32f:	mov    eax,DWORD PTR [rbx+0x10]
  40e332:	lea    edx,[rax-0x1]
  40e335:	test   eax,eax
  40e337:	mov    DWORD PTR [rbx+0x10],edx
  40e33a:	jg     0x40e322
  40e33c:	mov    ecx,DWORD PTR [rbx+0x8]
  40e33f:	mov    rdx,rbx
  40e342:	and    ecx,0x20
  40e345:	or     ecx,0x50
  40e348:	call   0x40cd30
  40e34d:	add    DWORD PTR [rbx+0xc],r12d
  40e351:	or     DWORD PTR [rbx+0x8],0x1c0
  40e358:	movsx  rcx,si
  40e35c:	mov    rdx,rbx
  40e35f:	call   0x40d5a0
  40e364:	nop
  40e365:	add    rsp,0x68
  40e369:	pop    rbx
  40e36a:	pop    rsi
  40e36b:	pop    rdi
  40e36c:	pop    rbp
  40e36d:	pop    r12
  40e36f:	pop    r13
  40e371:	ret    
  40e372:	mov    rcx,rbx
  40e375:	call   0x40d060
  40e37a:	jmp    0x40e0f0
  40e37f:	nop
  40e380:	mov    DWORD PTR [rbx+0xc],0xffffffff
  40e387:	jmp    0x40e050
  40e38c:	nop    DWORD PTR [rax+0x0]
  40e390:	lea    rdx,[rip+0x9bc9]        # 0x417f60
  40e397:	mov    r8,rbx
  40e39a:	xor    ecx,ecx
  40e39c:	call   0x40cfc0
  40e3a1:	nop
  40e3a2:	add    rsp,0x68
  40e3a6:	pop    rbx
  40e3a7:	pop    rsi
  40e3a8:	pop    rdi
  40e3a9:	pop    rbp
  40e3aa:	pop    r12
  40e3ac:	pop    r13
  40e3ae:	ret    
  40e3af:	js     0x40e451
  40e3b5:	mov    edx,0xffffc001
  40e3ba:	nop    WORD PTR [rax+rax*1+0x0]
  40e3c0:	mov    esi,edx
  40e3c2:	sub    edx,0x1
  40e3c5:	add    rax,rax
  40e3c8:	jns    0x40e3c0
  40e3ca:	mov    r9d,DWORD PTR [rbx+0x10]
  40e3ce:	cmp    r9d,0xe
  40e3d2:	jbe    0x40e145
  40e3d8:	jmp    0x40e175
  40e3dd:	test   rax,rax
  40e3e0:	jne    0x40e175
  40e3e6:	jmp    0x40e019
  40e3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e3f0:	mov    DWORD PTR [rbx+0xc],r10d
  40e3f4:	jmp    0x40e050
  40e3f9:	xor    eax,eax
  40e3fb:	jmp    0x40e1a8
  40e400:	mov    rdx,rbx
  40e403:	mov    ecx,0x2b
  40e408:	call   0x40cd30
  40e40d:	jmp    0x40e071
  40e412:	mov    rdx,rbx
  40e415:	mov    ecx,0x20
  40e41a:	call   0x40cd30
  40e41f:	jmp    0x40e071
  40e424:	add    esi,0x1
  40e427:	jmp    0x40e167
  40e42c:	xor    eax,eax
  40e42e:	jmp    0x40e140
  40e433:	mov    r9d,DWORD PTR [rbx+0x10]
  40e437:	jmp    0x40e022
  40e43c:	test   r8d,0x800
  40e443:	mov    rax,rbp
  40e446:	je     0x40e034
  40e44c:	jmp    0x40e02b
  40e451:	mov    esi,0xffffc002
  40e456:	jmp    0x40e3ca
  40e45b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e460:	push   r15
  40e462:	push   r14
  40e464:	push   r13
  40e466:	push   r12
  40e468:	push   rbp
  40e469:	push   rdi
  40e46a:	push   rsi
  40e46b:	push   rbx
  40e46c:	sub    rsp,0xb8
  40e473:	mov    r13,QWORD PTR [rsp+0x120]
  40e47b:	mov    r15d,ecx
  40e47e:	mov    rdi,rdx
  40e481:	mov    esi,r8d
  40e484:	mov    rbx,r9
  40e487:	and    r15d,0x6000
  40e48e:	call   0x411588
  40e493:	mov    eax,DWORD PTR [rax]
  40e495:	lea    rcx,[rip+0x9ae1]        # 0x417f7d
  40e49c:	xor    edx,edx
  40e49e:	mov    QWORD PTR [rsp+0x80],rdi
  40e4a6:	mov    DWORD PTR [rsp+0x88],r15d
  40e4ae:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  40e4b9:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e4c4:	mov    DWORD PTR [rsp+0x34],eax
  40e4c8:	xor    eax,eax
  40e4ca:	mov    DWORD PTR [rsp+0x94],0xfffffffd
  40e4d5:	mov    WORD PTR [rsp+0x98],ax
  40e4dd:	mov    DWORD PTR [rsp+0x9c],0x0
  40e4e8:	mov    WORD PTR [rsp+0xa0],dx
  40e4f0:	mov    DWORD PTR [rsp+0xa4],0x0
  40e4fb:	mov    DWORD PTR [rsp+0xa8],esi
  40e502:	call   0x4114e0
  40e507:	test   rax,rax
  40e50a:	je     0x40e51c
  40e50c:	movsx  edx,BYTE PTR [rax]
  40e50f:	mov    eax,0x2
  40e514:	sub    edx,0x30
  40e517:	cmp    edx,0x2
  40e51a:	jbe    0x40e529
  40e51c:	call   0x4116c0
  40e521:	and    eax,0x1
  40e524:	neg    eax
  40e526:	add    eax,0x3
  40e529:	lea    rdi,[rsp+0x70]
  40e52e:	mov    DWORD PTR [rsp+0xac],eax
  40e535:	movzx  eax,BYTE PTR [rbx]
  40e538:	lea    rsi,[rsp+0x6e]
  40e53d:	lea    r12,[rsp+0x80]
  40e545:	lea    rbp,[rip+0x9a48]        # 0x417f94
  40e54c:	mov    QWORD PTR [rsp+0x28],rdi
  40e551:	lea    rdi,[rsp+0x50]
  40e556:	mov    QWORD PTR [rsp+0x38],rsi
  40e55b:	mov    QWORD PTR [rsp+0x20],rdi
  40e560:	mov    edi,r15d
  40e563:	or     edi,0x200
  40e569:	mov    DWORD PTR [rsp+0x48],edi
  40e56d:	nop    DWORD PTR [rax]
  40e570:	movsx  ecx,al
  40e573:	lea    rsi,[rbx+0x1]
  40e577:	test   ecx,ecx
  40e579:	je     0x40e5fa
  40e57b:	cmp    ecx,0x25
  40e57e:	jne    0x40e5e0
  40e580:	movzx  eax,BYTE PTR [rbx+0x1]
  40e584:	xor    r10d,r10d
  40e587:	xor    r14d,r14d
  40e58a:	mov    DWORD PTR [rsp+0x88],r15d
  40e592:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e59d:	mov    rdi,rsi
  40e5a0:	mov    DWORD PTR [rsp+0x8c],0xffffffff
  40e5ab:	lea    r11,[r12+0xc]
  40e5b0:	test   al,al
  40e5b2:	je     0x40e75b
  40e5b8:	lea    edx,[rax-0x20]
  40e5bb:	lea    rbx,[rdi+0x1]
  40e5bf:	movsx  ecx,al
  40e5c2:	cmp    dl,0x5a
  40e5c5:	ja     0x40ebd0
  40e5cb:	movzx  edx,dl
  40e5ce:	movsxd rdx,DWORD PTR [rbp+rdx*4+0x0]
  40e5d3:	add    rdx,rbp
  40e5d6:	jmp    rdx
  40e5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5e0:	mov    rdx,r12
  40e5e3:	call   0x40cd30
  40e5e8:	movzx  eax,BYTE PTR [rbx+0x1]
  40e5ec:	mov    rbx,rsi
  40e5ef:	lea    rsi,[rbx+0x1]
  40e5f3:	movsx  ecx,al
  40e5f6:	test   ecx,ecx
  40e5f8:	jne    0x40e57b
  40e5fa:	mov    eax,DWORD PTR [rsp+0xa4]
  40e601:	add    rsp,0xb8
  40e608:	pop    rbx
  40e609:	pop    rsi
  40e60a:	pop    rdi
  40e60b:	pop    rbp
  40e60c:	pop    r12
  40e60e:	pop    r13
  40e610:	pop    r14
  40e612:	pop    r15
  40e614:	ret    
  40e615:	sub    r10d,0x2
  40e619:	mov    rax,r13
  40e61c:	cmp    r10d,0x1
  40e620:	jbe    0x40ec13
  40e626:	mov    rsi,QWORD PTR [rax]
  40e629:	add    r13,0x8
  40e62d:	test   rsi,rsi
  40e630:	je     0x40e6f5
  40e636:	mov    rcx,rsi
  40e639:	call   0x411440
  40e63e:	mov    edx,eax
  40e640:	mov    r8,r12
  40e643:	mov    rcx,rsi
  40e646:	call   0x40ceb0
  40e64b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e650:	movzx  eax,BYTE PTR [rbx]
  40e653:	jmp    0x40e570
  40e658:	nop    DWORD PTR [rax+rax*1+0x0]
  40e660:	test   r14d,r14d
  40e663:	jne    0x40e673
  40e665:	cmp    DWORD PTR [rsp+0x88],r15d
  40e66d:	je     0x40eddb
  40e673:	mov    rdx,QWORD PTR [r13+0x0]
  40e677:	lea    rsi,[r13+0x8]
  40e67b:	mov    r8,r12
  40e67e:	mov    ecx,0x78
  40e683:	mov    QWORD PTR [rsp+0x78],0x0
  40e68c:	mov    r13,rsi
  40e68f:	mov    QWORD PTR [rsp+0x70],rdx
  40e694:	call   0x40db90
  40e699:	jmp    0x40e650
  40e69b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e6a0:	cmp    r10d,0x5
  40e6a4:	mov    rax,QWORD PTR [r13+0x0]
  40e6a8:	je     0x40ed1a
  40e6ae:	cmp    r10d,0x1
  40e6b2:	je     0x40eda4
  40e6b8:	cmp    r10d,0x2
  40e6bc:	je     0x40e6c8
  40e6be:	cmp    r10d,0x3
  40e6c2:	je     0x40ee4c
  40e6c8:	mov    edx,DWORD PTR [rsp+0xa4]
  40e6cf:	add    r13,0x8
  40e6d3:	mov    DWORD PTR [rax],edx
  40e6d5:	jmp    0x40e650
  40e6da:	nop    WORD PTR [rax+rax*1+0x0]
  40e6e0:	mov    ecx,DWORD PTR [rsp+0x34]
  40e6e4:	call   0x411448
  40e6e9:	test   rax,rax
  40e6ec:	mov    rsi,rax
  40e6ef:	jne    0x40e636
  40e6f5:	mov    edx,0x6
  40e6fa:	lea    rsi,[rip+0x9875]        # 0x417f76
  40e701:	jmp    0x40e640
  40e706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e710:	movzx  eax,BYTE PTR [rdi+0x1]
  40e714:	mov    r10d,0x2
  40e71a:	mov    r14d,0x4
  40e720:	cmp    al,0x6c
  40e722:	jne    0x40e750
  40e724:	lea    rbx,[rdi+0x2]
  40e728:	movzx  eax,BYTE PTR [rdi+0x2]
  40e72c:	mov    r10d,0x3
  40e732:	mov    r14d,0x4
  40e738:	jmp    0x40e750
  40e73a:	nop    WORD PTR [rax+rax*1+0x0]
  40e740:	movzx  eax,BYTE PTR [rdi+0x1]
  40e744:	mov    r10d,0x3
  40e74a:	mov    r14d,0x4
  40e750:	test   al,al
  40e752:	mov    rdi,rbx
  40e755:	jne    0x40e5b8
  40e75b:	mov    rbx,rdi
  40e75e:	jmp    0x40e570
  40e763:	mov    eax,DWORD PTR [rsp+0x88]
  40e76a:	mov    rdx,r13
  40e76d:	add    r13,0x8
  40e771:	or     eax,0x20
  40e774:	test   al,0x4
  40e776:	mov    DWORD PTR [rsp+0x88],eax
  40e77d:	je     0x40e9db
  40e783:	mov    rax,QWORD PTR [rdx]
  40e786:	mov    rcx,QWORD PTR [rsp+0x20]
  40e78b:	mov    rdx,r12
  40e78e:	fld    TBYTE PTR [rax]
  40e790:	fstp   TBYTE PTR [rsp+0x50]
  40e794:	call   0x40d9f0
  40e799:	jmp    0x40e650
  40e79e:	xchg   ax,ax
  40e7a0:	movzx  eax,BYTE PTR [rdi+0x1]
  40e7a4:	mov    r10d,0x1
  40e7aa:	mov    r14d,0x4
  40e7b0:	cmp    al,0x68
  40e7b2:	jne    0x40e750
  40e7b4:	lea    rbx,[rdi+0x2]
  40e7b8:	movzx  eax,BYTE PTR [rdi+0x2]
  40e7bc:	mov    r10d,0x5
  40e7c2:	mov    r14d,0x4
  40e7c8:	jmp    0x40e750
  40e7ca:	nop    WORD PTR [rax+rax*1+0x0]
  40e7d0:	mov    eax,DWORD PTR [rsp+0x88]
  40e7d7:	mov    rdx,r13
  40e7da:	add    r13,0x8
  40e7de:	or     eax,0x20
  40e7e1:	test   al,0x4
  40e7e3:	mov    DWORD PTR [rsp+0x88],eax
  40e7ea:	je     0x40ea09
  40e7f0:	mov    rax,QWORD PTR [rdx]
  40e7f3:	mov    rcx,QWORD PTR [rsp+0x20]
  40e7f8:	mov    rdx,r12
  40e7fb:	fld    TBYTE PTR [rax]
  40e7fd:	fstp   TBYTE PTR [rsp+0x50]
  40e801:	call   0x40d4b0
  40e806:	jmp    0x40e650
  40e80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e810:	mov    eax,DWORD PTR [rsp+0x88]
  40e817:	mov    rdx,r13
  40e81a:	add    r13,0x8
  40e81e:	or     eax,0x20
  40e821:	test   al,0x4
  40e823:	mov    DWORD PTR [rsp+0x88],eax
  40e82a:	je     0x40ea37
  40e830:	mov    rax,QWORD PTR [rdx]
  40e833:	mov    rcx,QWORD PTR [rsp+0x20]
  40e838:	mov    rdx,r12
  40e83b:	fld    TBYTE PTR [rax]
  40e83d:	fstp   TBYTE PTR [rsp+0x50]
  40e841:	call   0x40d940
  40e846:	jmp    0x40e650
  40e84b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e850:	cmp    r10d,0x3
  40e854:	je     0x40ed2c
  40e85a:	cmp    r10d,0x2
  40e85e:	je     0x40edc9
  40e864:	mov    eax,DWORD PTR [r13+0x0]
  40e868:	cmp    r10d,0x1
  40e86c:	lea    rdx,[r13+0x8]
  40e870:	mov    QWORD PTR [rsp+0x70],rax
  40e875:	je     0x40ee0b
  40e87b:	cmp    r10d,0x5
  40e87f:	mov    r13,rdx
  40e882:	je     0x40ee60
  40e888:	cmp    ecx,0x75
  40e88b:	je     0x40ed6c
  40e891:	mov    r8,r12
  40e894:	mov    rdx,rax
  40e897:	call   0x40db90
  40e89c:	jmp    0x40e650
  40e8a1:	sub    r10d,0x2
  40e8a5:	mov    rax,r13
  40e8a8:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40e8b3:	cmp    r10d,0x1
  40e8b7:	jbe    0x40ea5b
  40e8bd:	mov    eax,DWORD PTR [rax]
  40e8bf:	mov    rcx,QWORD PTR [rsp+0x28]
  40e8c4:	mov    r8,r12
  40e8c7:	mov    edx,0x1
  40e8cc:	add    r13,0x8
  40e8d0:	mov    BYTE PTR [rsp+0x70],al
  40e8d4:	call   0x40ceb0
  40e8d9:	jmp    0x40e650
  40e8de:	xchg   ax,ax
  40e8e0:	mov    eax,DWORD PTR [rsp+0x88]
  40e8e7:	mov    rdx,r13
  40e8ea:	add    r13,0x8
  40e8ee:	or     eax,0x20
  40e8f1:	test   al,0x4
  40e8f3:	mov    DWORD PTR [rsp+0x88],eax
  40e8fa:	je     0x40ea98
  40e900:	mov    rax,QWORD PTR [rdx]
  40e903:	mov    rcx,QWORD PTR [rsp+0x20]
  40e908:	mov    rdx,r12
  40e90b:	fld    TBYTE PTR [rax]
  40e90d:	fstp   TBYTE PTR [rsp+0x50]
  40e911:	call   0x40df50
  40e916:	jmp    0x40e650
  40e91b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e920:	or     DWORD PTR [rsp+0x88],0x80
  40e92b:	cmp    r10d,0x3
  40e92f:	je     0x40ed08
  40e935:	cmp    r10d,0x2
  40e939:	je     0x40edb7
  40e93f:	movsxd rcx,DWORD PTR [r13+0x0]
  40e943:	cmp    r10d,0x1
  40e947:	lea    rax,[r13+0x8]
  40e94b:	mov    QWORD PTR [rsp+0x70],rcx
  40e950:	je     0x40ee1d
  40e956:	cmp    r10d,0x5
  40e95a:	mov    r13,rax
  40e95d:	je     0x40ee6f
  40e963:	mov    rax,rcx
  40e966:	mov    rdx,r12
  40e969:	sar    rax,0x3f
  40e96d:	mov    QWORD PTR [rsp+0x78],rax
  40e972:	call   0x40d5a0
  40e977:	jmp    0x40e650
  40e97c:	nop    DWORD PTR [rax+0x0]
  40e980:	or     DWORD PTR [rsp+0x88],0x4
  40e988:	movzx  eax,BYTE PTR [rdi+0x1]
  40e98c:	mov    r14d,0x4
  40e992:	jmp    0x40e750
  40e997:	nop    WORD PTR [rax+rax*1+0x0]
  40e9a0:	movzx  eax,BYTE PTR [rdi+0x1]
  40e9a4:	cmp    al,0x36
  40e9a6:	je     0x40ece8
  40e9ac:	cmp    al,0x33
  40e9ae:	je     0x40ed7c
  40e9b4:	mov    r10d,0x3
  40e9ba:	mov    r14d,0x4
  40e9c0:	jmp    0x40e750
  40e9c5:	mov    eax,DWORD PTR [rsp+0x88]
  40e9cc:	mov    rdx,r13
  40e9cf:	add    r13,0x8
  40e9d3:	test   al,0x4
  40e9d5:	jne    0x40e783
  40e9db:	mov    rcx,QWORD PTR [rsp+0x20]
  40e9e0:	fld    QWORD PTR [rdx]
  40e9e2:	mov    rdx,r12
  40e9e5:	fstp   TBYTE PTR [rsp+0x50]
  40e9e9:	call   0x40d9f0
  40e9ee:	jmp    0x40e650
  40e9f3:	mov    eax,DWORD PTR [rsp+0x88]
  40e9fa:	mov    rdx,r13
  40e9fd:	add    r13,0x8
  40ea01:	test   al,0x4
  40ea03:	jne    0x40e7f0
  40ea09:	mov    rcx,QWORD PTR [rsp+0x20]
  40ea0e:	fld    QWORD PTR [rdx]
  40ea10:	mov    rdx,r12
  40ea13:	fstp   TBYTE PTR [rsp+0x50]
  40ea17:	call   0x40d4b0
  40ea1c:	jmp    0x40e650
  40ea21:	mov    eax,DWORD PTR [rsp+0x88]
  40ea28:	mov    rdx,r13
  40ea2b:	add    r13,0x8
  40ea2f:	test   al,0x4
  40ea31:	jne    0x40e830
  40ea37:	mov    rcx,QWORD PTR [rsp+0x20]
  40ea3c:	fld    QWORD PTR [rdx]
  40ea3e:	mov    rdx,r12
  40ea41:	fstp   TBYTE PTR [rsp+0x50]
  40ea45:	call   0x40d940
  40ea4a:	jmp    0x40e650
  40ea4f:	nop
  40ea50:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40ea5b:	mov    eax,DWORD PTR [r13+0x0]
  40ea5f:	mov    rcx,QWORD PTR [rsp+0x28]
  40ea64:	lea    rsi,[r13+0x8]
  40ea68:	mov    r8,r12
  40ea6b:	mov    edx,0x1
  40ea70:	mov    r13,rsi
  40ea73:	mov    WORD PTR [rsp+0x70],ax
  40ea78:	call   0x40cd90
  40ea7d:	jmp    0x40e650
  40ea82:	mov    eax,DWORD PTR [rsp+0x88]
  40ea89:	mov    rdx,r13
  40ea8c:	add    r13,0x8
  40ea90:	test   al,0x4
  40ea92:	jne    0x40e900
  40ea98:	mov    rcx,QWORD PTR [rsp+0x20]
  40ea9d:	fld    QWORD PTR [rdx]
  40ea9f:	mov    rdx,r12
  40eaa2:	fstp   TBYTE PTR [rsp+0x50]
  40eaa6:	call   0x40df50
  40eaab:	jmp    0x40e650
  40eab0:	test   r14d,r14d
  40eab3:	jne    0x40ec50
  40eab9:	or     DWORD PTR [rsp+0x88],0x200
  40eac4:	movzx  eax,BYTE PTR [rdi+0x1]
  40eac8:	jmp    0x40e750
  40eacd:	nop    DWORD PTR [rax]
  40ead0:	cmp    r14d,0x1
  40ead4:	jbe    0x40ed3e
  40eada:	movzx  eax,BYTE PTR [rdi+0x1]
  40eade:	mov    r14d,0x4
  40eae4:	jmp    0x40e750
  40eae9:	nop    DWORD PTR [rax+0x0]
  40eaf0:	test   r14d,r14d
  40eaf3:	jne    0x40eb79
  40eaf9:	or     DWORD PTR [rsp+0x88],0x400
  40eb04:	movzx  eax,BYTE PTR [rdi+0x1]
  40eb08:	jmp    0x40e750
  40eb0d:	nop    DWORD PTR [rax]
  40eb10:	test   r14d,r14d
  40eb13:	jne    0x40eb79
  40eb15:	or     DWORD PTR [rsp+0x88],0x100
  40eb20:	movzx  eax,BYTE PTR [rdi+0x1]
  40eb24:	jmp    0x40e750
  40eb29:	nop    DWORD PTR [rax+0x0]
  40eb30:	test   r14d,r14d
  40eb33:	jne    0x40eb79
  40eb35:	or     DWORD PTR [rsp+0x88],0x800
  40eb40:	movzx  eax,BYTE PTR [rdi+0x1]
  40eb44:	jmp    0x40e750
  40eb49:	nop    DWORD PTR [rax+0x0]
  40eb50:	test   r14d,r14d
  40eb53:	jne    0x40eb79
  40eb55:	or     DWORD PTR [rsp+0x88],0x40
  40eb5d:	movzx  eax,BYTE PTR [rdi+0x1]
  40eb61:	jmp    0x40e750
  40eb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb70:	test   r14d,r14d
  40eb73:	je     0x40ec82
  40eb79:	movzx  eax,BYTE PTR [rdi+0x1]
  40eb7d:	jmp    0x40e750
  40eb82:	mov    rdx,r12
  40eb85:	call   0x40cd30
  40eb8a:	jmp    0x40e650
  40eb8f:	nop
  40eb90:	test   r11,r11
  40eb93:	je     0x40eada
  40eb99:	test   r14d,0xfffffffd
  40eba0:	jne    0x40ec70
  40eba6:	mov    eax,DWORD PTR [r13+0x0]
  40ebaa:	lea    rdx,[r13+0x8]
  40ebae:	test   eax,eax
  40ebb0:	mov    DWORD PTR [r11],eax
  40ebb3:	js     0x40ee30
  40ebb9:	movzx  eax,BYTE PTR [rdi+0x1]
  40ebbd:	mov    r13,rdx
  40ebc0:	xor    r11d,r11d
  40ebc3:	jmp    0x40e750
  40ebc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ebd0:	sub    eax,0x30
  40ebd3:	cmp    al,0x9
  40ebd5:	ja     0x40edf6
  40ebdb:	cmp    r14d,0x3
  40ebdf:	ja     0x40edf6
  40ebe5:	test   r14d,r14d
  40ebe8:	jne    0x40ec5a
  40ebea:	mov    r14d,0x1
  40ebf0:	test   r11,r11
  40ebf3:	je     0x40eb79
  40ebf5:	mov    eax,DWORD PTR [r11]
  40ebf8:	test   eax,eax
  40ebfa:	js     0x40ed5d
  40ec00:	lea    eax,[rax+rax*4]
  40ec03:	lea    eax,[rcx+rax*2-0x30]
  40ec07:	mov    DWORD PTR [r11],eax
  40ec0a:	movzx  eax,BYTE PTR [rdi+0x1]
  40ec0e:	jmp    0x40e750
  40ec13:	mov    rsi,QWORD PTR [r13+0x0]
  40ec17:	lea    rax,[rip+0x934a]        # 0x417f68
  40ec1e:	lea    rdi,[r13+0x8]
  40ec22:	mov    r13,rdi
  40ec25:	test   rsi,rsi
  40ec28:	cmove  rsi,rax
  40ec2c:	mov    rcx,rsi
  40ec2f:	call   0x411400
  40ec34:	mov    r8,r12
  40ec37:	mov    edx,eax
  40ec39:	mov    rcx,rsi
  40ec3c:	call   0x40cd90
  40ec41:	jmp    0x40e650
  40ec46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ec50:	cmp    r14d,0x3
  40ec54:	ja     0x40edf6
  40ec5a:	cmp    r14d,0x2
  40ec5e:	mov    eax,0x3
  40ec63:	cmove  r14d,eax
  40ec67:	jmp    0x40ebf0
  40ec69:	nop    DWORD PTR [rax+0x0]
  40ec70:	movzx  eax,BYTE PTR [rdi+0x1]
  40ec74:	xor    r11d,r11d
  40ec77:	mov    r14d,0x4
  40ec7d:	jmp    0x40e750
  40ec82:	mov    DWORD PTR [rsp+0x4c],r10d
  40ec87:	mov    QWORD PTR [rsp+0x40],r11
  40ec8c:	or     DWORD PTR [rsp+0x88],0x1000
  40ec97:	mov    DWORD PTR [rsp+0x70],0x0
  40ec9f:	call   0x4114c0
  40eca4:	mov    r9,QWORD PTR [rsp+0x28]
  40eca9:	mov    rdx,QWORD PTR [rax+0x8]
  40ecad:	mov    r8d,0x10
  40ecb3:	mov    rcx,QWORD PTR [rsp+0x38]
  40ecb8:	call   0x40c790
  40ecbd:	test   eax,eax
  40ecbf:	mov    r11,QWORD PTR [rsp+0x40]
  40ecc4:	mov    r10d,DWORD PTR [rsp+0x4c]
  40ecc9:	jle    0x40ecd8
  40eccb:	movzx  edx,WORD PTR [rsp+0x6e]
  40ecd0:	mov    WORD PTR [rsp+0xa0],dx
  40ecd8:	mov    DWORD PTR [rsp+0x9c],eax
  40ecdf:	movzx  eax,BYTE PTR [rdi+0x1]
  40ece3:	jmp    0x40e750
  40ece8:	cmp    BYTE PTR [rdi+0x2],0x34
  40ecec:	je     0x40ee7f
  40ecf2:	mov    eax,0x36
  40ecf7:	mov    r10d,0x3
  40ecfd:	mov    r14d,0x4
  40ed03:	jmp    0x40e750
  40ed08:	mov    rcx,QWORD PTR [r13+0x0]
  40ed0c:	add    r13,0x8
  40ed10:	mov    QWORD PTR [rsp+0x70],rcx
  40ed15:	jmp    0x40e963
  40ed1a:	mov    edx,DWORD PTR [rsp+0xa4]
  40ed21:	add    r13,0x8
  40ed25:	mov    BYTE PTR [rax],dl
  40ed27:	jmp    0x40e650
  40ed2c:	mov    rax,QWORD PTR [r13+0x0]
  40ed30:	add    r13,0x8
  40ed34:	mov    QWORD PTR [rsp+0x70],rax
  40ed39:	jmp    0x40e888
  40ed3e:	mov    DWORD PTR [rsp+0x90],0x0
  40ed49:	movzx  eax,BYTE PTR [rdi+0x1]
  40ed4d:	lea    r11,[r12+0x10]
  40ed52:	mov    r14d,0x2
  40ed58:	jmp    0x40e750
  40ed5d:	sub    ecx,0x30
  40ed60:	movzx  eax,BYTE PTR [rdi+0x1]
  40ed64:	mov    DWORD PTR [r11],ecx
  40ed67:	jmp    0x40e750
  40ed6c:	mov    rdx,r12
  40ed6f:	mov    rcx,rax
  40ed72:	call   0x40d5a0
  40ed77:	jmp    0x40e650
  40ed7c:	cmp    BYTE PTR [rdi+0x2],0x32
  40ed80:	mov    eax,0x33
  40ed85:	jne    0x40e9b4
  40ed8b:	lea    rbx,[rdi+0x3]
  40ed8f:	movzx  eax,BYTE PTR [rdi+0x3]
  40ed93:	mov    r10d,0x2
  40ed99:	mov    r14d,0x4
  40ed9f:	jmp    0x40e750
  40eda4:	mov    edx,DWORD PTR [rsp+0xa4]
  40edab:	add    r13,0x8
  40edaf:	mov    WORD PTR [rax],dx
  40edb2:	jmp    0x40e650
  40edb7:	movsxd rcx,DWORD PTR [r13+0x0]
  40edbb:	add    r13,0x8
  40edbf:	mov    QWORD PTR [rsp+0x70],rcx
  40edc4:	jmp    0x40e963
  40edc9:	mov    eax,DWORD PTR [r13+0x0]
  40edcd:	add    r13,0x8
  40edd1:	mov    QWORD PTR [rsp+0x70],rax
  40edd6:	jmp    0x40e888
  40eddb:	mov    eax,DWORD PTR [rsp+0x48]
  40eddf:	mov    DWORD PTR [rsp+0x90],0x10
  40edea:	mov    DWORD PTR [rsp+0x88],eax
  40edf1:	jmp    0x40e673
  40edf6:	mov    rdx,r12
  40edf9:	mov    ecx,0x25
  40edfe:	mov    rbx,rsi
  40ee01:	call   0x40cd30
  40ee06:	jmp    0x40e650
  40ee0b:	movzx  eax,WORD PTR [rsp+0x70]
  40ee10:	mov    r13,rdx
  40ee13:	mov    QWORD PTR [rsp+0x70],rax
  40ee18:	jmp    0x40e888
  40ee1d:	movsx  rcx,WORD PTR [rsp+0x70]
  40ee23:	mov    r13,rax
  40ee26:	mov    QWORD PTR [rsp+0x70],rcx
  40ee2b:	jmp    0x40e963
  40ee30:	test   r14d,r14d
  40ee33:	jne    0x40ee98
  40ee35:	or     DWORD PTR [rsp+0x88],0x400
  40ee40:	neg    DWORD PTR [rsp+0x8c]
  40ee47:	jmp    0x40ebb9
  40ee4c:	movsxd rdx,DWORD PTR [rsp+0xa4]
  40ee54:	add    r13,0x8
  40ee58:	mov    QWORD PTR [rax],rdx
  40ee5b:	jmp    0x40e650
  40ee60:	movzx  eax,BYTE PTR [rsp+0x70]
  40ee65:	mov    QWORD PTR [rsp+0x70],rax
  40ee6a:	jmp    0x40e888
  40ee6f:	movsx  rcx,BYTE PTR [rsp+0x70]
  40ee75:	mov    QWORD PTR [rsp+0x70],rcx
  40ee7a:	jmp    0x40e963
  40ee7f:	lea    rbx,[rdi+0x3]
  40ee83:	movzx  eax,BYTE PTR [rdi+0x3]
  40ee87:	mov    r10d,0x3
  40ee8d:	mov    r14d,0x4
  40ee93:	jmp    0x40e750
  40ee98:	mov    DWORD PTR [rsp+0x90],0xffffffff
  40eea3:	movzx  eax,BYTE PTR [rdi+0x1]
  40eea7:	mov    r13,rdx
  40eeaa:	xor    r11d,r11d
  40eead:	jmp    0x40e750
  40eeb2:	nop
  40eeb3:	nop
  40eeb4:	nop
  40eeb5:	nop
  40eeb6:	nop
  40eeb7:	nop
  40eeb8:	nop
  40eeb9:	nop
  40eeba:	nop
  40eebb:	nop
  40eebc:	nop
  40eebd:	nop
  40eebe:	nop
  40eebf:	nop
  40eec0:	push   rbx
  40eec1:	sub    rsp,0x20
  40eec5:	xor    ebx,ebx
  40eec7:	cmp    ecx,0x1b
  40eeca:	jle    0x40eedd
  40eecc:	mov    eax,0x4
  40eed1:	add    eax,eax
  40eed3:	add    ebx,0x1
  40eed6:	lea    edx,[rax+0x17]
  40eed9:	cmp    edx,ecx
  40eedb:	jl     0x40eed1
  40eedd:	mov    ecx,ebx
  40eedf:	call   0x4107b0
  40eee4:	mov    DWORD PTR [rax],ebx
  40eee6:	add    rax,0x4
  40eeea:	add    rsp,0x20
  40eeee:	pop    rbx
  40eeef:	ret    
  40eef0:	push   rsi
  40eef1:	push   rbx
  40eef2:	sub    rsp,0x28
  40eef6:	mov    rbx,rcx
  40eef9:	mov    ecx,r8d
  40eefc:	mov    rsi,rdx
  40eeff:	call   0x40eec0
  40ef04:	movzx  ecx,BYTE PTR [rbx]
  40ef07:	lea    r8,[rbx+0x1]
  40ef0b:	test   cl,cl
  40ef0d:	mov    BYTE PTR [rax],cl
  40ef0f:	mov    rcx,rax
  40ef12:	je     0x40ef29
  40ef14:	add    r8,0x1
  40ef18:	movzx  r9d,BYTE PTR [r8-0x1]
  40ef1d:	add    rcx,0x1
  40ef21:	test   r9b,r9b
  40ef24:	mov    BYTE PTR [rcx],r9b
  40ef27:	jne    0x40ef14
  40ef29:	test   rsi,rsi
  40ef2c:	je     0x40ef31
  40ef2e:	mov    QWORD PTR [rsi],rcx
  40ef31:	add    rsp,0x28
  40ef35:	pop    rbx
  40ef36:	pop    rsi
  40ef37:	ret    
  40ef38:	nop    DWORD PTR [rax+rax*1+0x0]
  40ef40:	mov    edx,0x1
  40ef45:	mov    rax,rcx
  40ef48:	mov    ecx,DWORD PTR [rcx-0x4]
  40ef4b:	shl    edx,cl
  40ef4d:	mov    DWORD PTR [rax+0x4],ecx
  40ef50:	lea    rcx,[rax-0x4]
  40ef54:	mov    DWORD PTR [rax+0x8],edx
  40ef57:	jmp    0x4108c0
  40ef5c:	nop    DWORD PTR [rax+0x0]
  40ef60:	push   r15
  40ef62:	push   r14
  40ef64:	push   r13
  40ef66:	push   r12
  40ef68:	push   rbp
  40ef69:	push   rdi
  40ef6a:	push   rsi
  40ef6b:	push   rbx
  40ef6c:	sub    rsp,0x38
  40ef70:	xor    eax,eax
  40ef72:	mov    edi,DWORD PTR [rdx+0x14]
  40ef75:	cmp    edi,DWORD PTR [rcx+0x14]
  40ef78:	mov    r15,rdx
  40ef7b:	jg     0x40f0c9
  40ef81:	sub    edi,0x1
  40ef84:	lea    rbx,[rdx+0x18]
  40ef88:	lea    r12,[rcx+0x18]
  40ef8c:	movsxd r13,edi
  40ef8f:	xor    edx,edx
  40ef91:	shl    r13,0x2
  40ef95:	lea    rbp,[rbx+r13*1]
  40ef99:	add    r13,r12
  40ef9c:	mov    eax,DWORD PTR [rbp+0x0]
  40ef9f:	lea    r8d,[rax+0x1]
  40efa3:	mov    eax,DWORD PTR [r13+0x0]
  40efa7:	div    r8d
  40efaa:	test   eax,eax
  40efac:	mov    r14d,eax
  40efaf:	mov    DWORD PTR [rsp+0x2c],eax
  40efb3:	je     0x40f047
  40efb9:	mov    edx,eax
  40efbb:	mov    rsi,rbx
  40efbe:	mov    r11,r12
  40efc1:	xor    eax,eax
  40efc3:	xor    r10d,r10d
  40efc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40efd0:	add    rsi,0x4
  40efd4:	mov    r8d,DWORD PTR [rsi-0x4]
  40efd8:	mov    r9d,DWORD PTR [r11]
  40efdb:	add    r11,0x4
  40efdf:	imul   r8,rdx
  40efe3:	add    r8,rax
  40efe6:	mov    rax,r8
  40efe9:	mov    r8d,r8d
  40efec:	sub    r9,r8
  40efef:	shr    rax,0x20
  40eff3:	sub    r9,r10
  40eff6:	mov    r10,r9
  40eff9:	mov    DWORD PTR [r11-0x4],r9d
  40effd:	shr    r10,0x20
  40f001:	and    r10d,0x1
  40f005:	cmp    rbp,rsi
  40f008:	jae    0x40efd0
  40f00a:	mov    r11d,DWORD PTR [r13+0x0]
  40f00e:	test   r11d,r11d
  40f011:	jne    0x40f047
  40f013:	lea    rax,[r13-0x4]
  40f017:	cmp    r12,rax
  40f01a:	jae    0x40f044
  40f01c:	mov    r10d,DWORD PTR [r13-0x4]
  40f020:	test   r10d,r10d
  40f023:	je     0x40f038
  40f025:	jmp    0x40f044
  40f027:	nop    WORD PTR [rax+rax*1+0x0]
  40f030:	mov    r9d,DWORD PTR [rax]
  40f033:	test   r9d,r9d
  40f036:	jne    0x40f044
  40f038:	sub    rax,0x4
  40f03c:	sub    edi,0x1
  40f03f:	cmp    r12,rax
  40f042:	jb     0x40f030
  40f044:	mov    DWORD PTR [rcx+0x14],edi
  40f047:	mov    rdx,r15
  40f04a:	mov    rsi,rcx
  40f04d:	call   0x410de0
  40f052:	test   eax,eax
  40f054:	js     0x40f0c5
  40f056:	lea    eax,[r14+0x1]
  40f05a:	mov    rcx,r12
  40f05d:	xor    edx,edx
  40f05f:	mov    DWORD PTR [rsp+0x2c],eax
  40f063:	add    rbx,0x4
  40f067:	mov    eax,DWORD PTR [rcx]
  40f069:	mov    r8d,DWORD PTR [rbx-0x4]
  40f06d:	add    rcx,0x4
  40f071:	sub    rax,r8
  40f074:	sub    rax,rdx
  40f077:	mov    rdx,rax
  40f07a:	mov    DWORD PTR [rcx-0x4],eax
  40f07d:	shr    rdx,0x20
  40f081:	and    edx,0x1
  40f084:	cmp    rbp,rbx
  40f087:	jae    0x40f063
  40f089:	movsxd rax,edi
  40f08c:	lea    rdx,[r12+rax*4]
  40f090:	mov    r8d,DWORD PTR [rdx]
  40f093:	test   r8d,r8d
  40f096:	jne    0x40f0c5
  40f098:	lea    rax,[rdx-0x4]
  40f09c:	cmp    r12,rax
  40f09f:	jae    0x40f0c2
  40f0a1:	mov    ecx,DWORD PTR [rdx-0x4]
  40f0a4:	test   ecx,ecx
  40f0a6:	je     0x40f0b6
  40f0a8:	jmp    0x40f0c2
  40f0aa:	nop    WORD PTR [rax+rax*1+0x0]
  40f0b0:	mov    edx,DWORD PTR [rax]
  40f0b2:	test   edx,edx
  40f0b4:	jne    0x40f0c2
  40f0b6:	sub    rax,0x4
  40f0ba:	sub    edi,0x1
  40f0bd:	cmp    r12,rax
  40f0c0:	jb     0x40f0b0
  40f0c2:	mov    DWORD PTR [rsi+0x14],edi
  40f0c5:	mov    eax,DWORD PTR [rsp+0x2c]
  40f0c9:	add    rsp,0x38
  40f0cd:	pop    rbx
  40f0ce:	pop    rsi
  40f0cf:	pop    rdi
  40f0d0:	pop    rbp
  40f0d1:	pop    r12
  40f0d3:	pop    r13
  40f0d5:	pop    r14
  40f0d7:	pop    r15
  40f0d9:	ret    
  40f0da:	nop
  40f0db:	nop
  40f0dc:	nop
  40f0dd:	nop
  40f0de:	nop
  40f0df:	nop
  40f0e0:	push   r15
  40f0e2:	push   r14
  40f0e4:	push   r13
  40f0e6:	push   r12
  40f0e8:	push   rbp
  40f0e9:	push   rdi
  40f0ea:	push   rsi
  40f0eb:	push   rbx
  40f0ec:	sub    rsp,0xb8
  40f0f3:	movaps XMMWORD PTR [rsp+0xa0],xmm6
  40f0fb:	mov    r12d,DWORD PTR [r9]
  40f0fe:	mov    eax,r12d
  40f101:	and    eax,0xffffffcf
  40f104:	mov    DWORD PTR [r9],eax
  40f107:	mov    eax,r12d
  40f10a:	and    eax,0x7
  40f10d:	cmp    eax,0x4
  40f110:	ja     0x410543
  40f116:	mov    r13d,edx
  40f119:	lea    rdx,[rip+0x8ff0]        # 0x418110
  40f120:	mov    QWORD PTR [rsp+0x28],r9
  40f125:	mov    r15,r8
  40f128:	mov    rbp,rcx
  40f12b:	movsxd rax,DWORD PTR [rdx+rax*4]
  40f12f:	add    rdx,rax
  40f132:	jmp    rdx
  40f134:	mov    edi,DWORD PTR [rcx]
  40f136:	xor    ecx,ecx
  40f138:	cmp    edi,0x20
  40f13b:	jle    0x40f14b
  40f13d:	mov    eax,0x20
  40f142:	add    eax,eax
  40f144:	add    ecx,0x1
  40f147:	cmp    edi,eax
  40f149:	jg     0x40f142
  40f14b:	call   0x4107b0
  40f150:	mov    rsi,rax
  40f153:	lea    eax,[rdi-0x1]
  40f156:	lea    r9,[rsi+0x18]
  40f15a:	sar    eax,0x5
  40f15d:	cdqe   
  40f15f:	mov    rdx,r9
  40f162:	lea    r11,[r15+rax*4]
  40f166:	mov    rax,r15
  40f169:	nop    DWORD PTR [rax+0x0]
  40f170:	mov    ecx,DWORD PTR [rax]
  40f172:	add    rax,0x4
  40f176:	add    rdx,0x4
  40f17a:	cmp    r11,rax
  40f17d:	mov    DWORD PTR [rdx-0x4],ecx
  40f180:	jae    0x40f170
  40f182:	sub    rdx,r9
  40f185:	sar    rdx,0x2
  40f189:	mov    r14d,edx
  40f18c:	movsxd rdx,edx
  40f18f:	lea    rax,[r9+rdx*4-0x4]
  40f194:	jmp    0x40f1af
  40f196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f1a0:	sub    rax,0x4
  40f1a4:	test   edx,edx
  40f1a6:	mov    r14d,edx
  40f1a9:	je     0x40f6b0
  40f1af:	mov    r8d,DWORD PTR [rax]
  40f1b2:	lea    edx,[r14-0x1]
  40f1b6:	test   r8d,r8d
  40f1b9:	je     0x40f1a0
  40f1bb:	movsxd rdx,edx
  40f1be:	mov    DWORD PTR [rsi+0x14],r14d
  40f1c2:	shl    r14d,0x5
  40f1c6:	bsr    eax,DWORD PTR [rsi+rdx*4+0x18]
  40f1cb:	xor    eax,0x1f
  40f1ce:	sub    r14d,eax
  40f1d1:	mov    rcx,rsi
  40f1d4:	call   0x410650
  40f1d9:	test   eax,eax
  40f1db:	mov    DWORD PTR [rsp+0x9c],eax
  40f1e2:	mov    r11d,r13d
  40f1e5:	jne    0x40f6c0
  40f1eb:	mov    ecx,DWORD PTR [rsi+0x14]
  40f1ee:	test   ecx,ecx
  40f1f0:	jne    0x40f2a0
  40f1f6:	mov    rcx,rsi
  40f1f9:	call   0x4108c0
  40f1fe:	mov    rax,QWORD PTR [rsp+0x130]
  40f206:	mov    rdx,QWORD PTR [rsp+0x138]
  40f20e:	lea    rcx,[rip+0x8ef8]        # 0x41810d
  40f215:	mov    r8d,0x1
  40f21b:	mov    DWORD PTR [rax],0x1
  40f221:	call   0x40eef0
  40f226:	nop
  40f227:	movaps xmm6,XMMWORD PTR [rsp+0xa0]
  40f22f:	add    rsp,0xb8
  40f236:	pop    rbx
  40f237:	pop    rsi
  40f238:	pop    rdi
  40f239:	pop    rbp
  40f23a:	pop    r12
  40f23c:	pop    r13
  40f23e:	pop    r14
  40f240:	pop    r15
  40f242:	ret    
  40f243:	mov    rax,QWORD PTR [rsp+0x130]
  40f24b:	mov    rdx,QWORD PTR [rsp+0x138]
  40f253:	lea    rcx,[rip+0x8eaf]        # 0x418109
  40f25a:	mov    r8d,0x3
  40f260:	mov    DWORD PTR [rax],0xffff8000
  40f266:	call   0x40eef0
  40f26b:	jmp    0x40f227
  40f26d:	nop    DWORD PTR [rax]
  40f270:	mov    rax,QWORD PTR [rsp+0x130]
  40f278:	mov    rdx,QWORD PTR [rsp+0x138]
  40f280:	lea    rcx,[rip+0x8e79]        # 0x418100
  40f287:	mov    r8d,0x8
  40f28d:	mov    DWORD PTR [rax],0xffff8000
  40f293:	call   0x40eef0
  40f298:	jmp    0x40f227
  40f29a:	nop    WORD PTR [rax+rax*1+0x0]
  40f2a0:	lea    rdx,[rsp+0x9c]
  40f2a8:	mov    rcx,rsi
  40f2ab:	mov    DWORD PTR [rsp+0x30],r11d
  40f2b0:	call   0x410f70
  40f2b5:	movq   rdx,xmm0
  40f2ba:	movq   r9,xmm0
  40f2bf:	mov    r11d,DWORD PTR [rsp+0x30]
  40f2c4:	pxor   xmm0,xmm0
  40f2c8:	shr    rdx,0x20
  40f2cc:	mov    r9d,r9d
  40f2cf:	and    edx,0xfffff
  40f2d5:	lea    ecx,[r11+r14*1-0x1]
  40f2da:	or     edx,0x3ff00000
  40f2e0:	mov    rax,rdx
  40f2e3:	cvtsi2sd xmm0,ecx
  40f2e7:	shl    rax,0x20
  40f2eb:	mov    ebx,ecx
  40f2ed:	or     r9,rax
  40f2f0:	sar    ebx,0x1f
  40f2f3:	mov    QWORD PTR [rsp+0x30],r9
  40f2f8:	mov    eax,ebx
  40f2fa:	movsd  xmm1,QWORD PTR [rsp+0x30]
  40f300:	xor    eax,ecx
  40f302:	sub    eax,ebx
  40f304:	subsd  xmm1,QWORD PTR [rip+0x8e1c]        # 0x418128
  40f30c:	sub    eax,0x435
  40f311:	test   eax,eax
  40f313:	mulsd  xmm0,QWORD PTR [rip+0x8e25]        # 0x418140
  40f31b:	mulsd  xmm1,QWORD PTR [rip+0x8e0d]        # 0x418130
  40f323:	addsd  xmm1,QWORD PTR [rip+0x8e0d]        # 0x418138
  40f32b:	addsd  xmm1,xmm0
  40f32f:	jle    0x40f345
  40f331:	pxor   xmm0,xmm0
  40f335:	cvtsi2sd xmm0,eax
  40f339:	mulsd  xmm0,QWORD PTR [rip+0x8e07]        # 0x418148
  40f341:	addsd  xmm1,xmm0
  40f345:	cvttsd2si eax,xmm1
  40f349:	pxor   xmm6,xmm6
  40f34d:	ucomisd xmm6,xmm1
  40f351:	mov    DWORD PTR [rsp+0x30],eax
  40f355:	ja     0x40fbe3
  40f35b:	mov    eax,ecx
  40f35d:	mov    r9d,r9d
  40f360:	mov    DWORD PTR [rsp+0x6c],0x1
  40f368:	shl    eax,0x14
  40f36b:	add    eax,edx
  40f36d:	shl    rax,0x20
  40f371:	or     r9,rax
  40f374:	cmp    DWORD PTR [rsp+0x30],0x16
  40f379:	mov    QWORD PTR [rsp+0x80],r9
  40f381:	ja     0x40f3b0
  40f383:	movsxd rax,DWORD PTR [rsp+0x30]
  40f388:	mov    rdx,QWORD PTR [rip+0x9101]        # 0x418490
  40f38f:	movsd  xmm0,QWORD PTR [rdx+rax*8]
  40f394:	ucomisd xmm0,QWORD PTR [rsp+0x80]
  40f39d:	jbe    0x40f700
  40f3a3:	sub    DWORD PTR [rsp+0x30],0x1
  40f3a8:	mov    DWORD PTR [rsp+0x6c],0x0
  40f3b0:	mov    eax,r14d
  40f3b3:	mov    DWORD PTR [rsp+0x50],0x0
  40f3bb:	sub    eax,ecx
  40f3bd:	sub    eax,0x1
  40f3c0:	mov    DWORD PTR [rsp+0x40],eax
  40f3c4:	js     0x40fbd0
  40f3ca:	mov    eax,DWORD PTR [rsp+0x30]
  40f3ce:	test   eax,eax
  40f3d0:	js     0x40fbb0
  40f3d6:	add    DWORD PTR [rsp+0x40],eax
  40f3da:	mov    DWORD PTR [rsp+0x88],eax
  40f3e1:	mov    DWORD PTR [rsp+0x58],0x0
  40f3e9:	cmp    DWORD PTR [rsp+0x120],0x9
  40f3f1:	ja     0x40f6e0
  40f3f7:	cmp    DWORD PTR [rsp+0x120],0x5
  40f3ff:	jle    0x40f6eb
  40f405:	sub    DWORD PTR [rsp+0x120],0x4
  40f40d:	xor    eax,eax
  40f40f:	cmp    DWORD PTR [rsp+0x120],0x3
  40f417:	je     0x40fda4
  40f41d:	jle    0x40fb03
  40f423:	cmp    DWORD PTR [rsp+0x120],0x4
  40f42b:	mov    DWORD PTR [rsp+0x60],0x1
  40f433:	je     0x40f710
  40f439:	cmp    DWORD PTR [rsp+0x120],0x5
  40f441:	jne    0x40fb19
  40f447:	mov    ebx,DWORD PTR [rsp+0x30]
  40f44b:	add    ebx,DWORD PTR [rsp+0x128]
  40f452:	mov    DWORD PTR [rsp+0x8c],ebx
  40f459:	add    ebx,0x1
  40f45c:	test   ebx,ebx
  40f45e:	mov    DWORD PTR [rsp+0x68],ebx
  40f462:	mov    ecx,ebx
  40f464:	jle    0x40ffe0
  40f46a:	cmp    ebx,0xe
  40f46d:	mov    DWORD PTR [rsp+0x9c],ebx
  40f474:	setbe  bl
  40f477:	and    ebx,eax
  40f479:	mov    QWORD PTR [rsp+0x78],r9
  40f47e:	mov    DWORD PTR [rsp+0x70],r11d
  40f483:	call   0x40eec0
  40f488:	mov    QWORD PTR [rsp+0x48],rax
  40f48d:	mov    eax,DWORD PTR [rbp+0xc]
  40f490:	mov    r11d,DWORD PTR [rsp+0x70]
  40f495:	mov    r9,QWORD PTR [rsp+0x78]
  40f49a:	sub    eax,0x1
  40f49d:	mov    DWORD PTR [rsp+0x38],eax
  40f4a1:	je     0x40f4c8
  40f4a3:	mov    ecx,DWORD PTR [rsp+0x38]
  40f4a7:	mov    eax,0x2
  40f4ac:	test   ecx,ecx
  40f4ae:	cmovns eax,ecx
  40f4b1:	and    r12d,0x8
  40f4b5:	mov    DWORD PTR [rsp+0x38],eax
  40f4b9:	je     0x40f4c8
  40f4bb:	mov    eax,0x3
  40f4c0:	sub    eax,DWORD PTR [rsp+0x38]
  40f4c4:	mov    DWORD PTR [rsp+0x38],eax
  40f4c8:	test   bl,bl
  40f4ca:	je     0x40f7c0
  40f4d0:	mov    eax,DWORD PTR [rsp+0x38]
  40f4d4:	or     eax,DWORD PTR [rsp+0x30]
  40f4d8:	jne    0x40f7c0
  40f4de:	mov    eax,DWORD PTR [rsp+0x6c]
  40f4e2:	mov    DWORD PTR [rsp+0x9c],0x0
  40f4ed:	movsd  xmm4,QWORD PTR [rsp+0x80]
  40f4f6:	test   eax,eax
  40f4f8:	je     0x40f50c
  40f4fa:	movsd  xmm0,QWORD PTR [rip+0x8c56]        # 0x418158
  40f502:	ucomisd xmm0,xmm4
  40f506:	ja     0x41033b
  40f50c:	movapd xmm0,xmm4
  40f510:	mov    r12d,DWORD PTR [rsp+0x68]
  40f515:	addsd  xmm0,xmm4
  40f519:	addsd  xmm0,QWORD PTR [rip+0x8c4f]        # 0x418170
  40f521:	movq   rdx,xmm0
  40f526:	movq   rax,xmm0
  40f52b:	shr    rdx,0x20
  40f52f:	mov    eax,eax
  40f531:	sub    edx,0x3400000
  40f537:	shl    rdx,0x20
  40f53b:	or     rax,rdx
  40f53e:	test   r12d,r12d
  40f541:	je     0x40f777
  40f547:	mov    r9d,DWORD PTR [rsp+0x68]
  40f54c:	movapd xmm0,xmm4
  40f550:	xor    ecx,ecx
  40f552:	mov    ebx,DWORD PTR [rsp+0x60]
  40f556:	lea    edx,[r9-0x1]
  40f55a:	movsxd rdx,edx
  40f55d:	test   ebx,ebx
  40f55f:	je     0x410083
  40f565:	mov    r10,QWORD PTR [rip+0x8f24]        # 0x418490
  40f56c:	movsd  xmm1,QWORD PTR [rip+0x8c1c]        # 0x418190
  40f574:	mov    QWORD PTR [rsp+0x38],rax
  40f579:	cvttsd2si eax,xmm0
  40f57d:	pxor   xmm2,xmm2
  40f581:	mov    DWORD PTR [rsp+0x9c],0x0
  40f58c:	divsd  xmm1,QWORD PTR [r10+rdx*8]
  40f592:	mov    rdx,QWORD PTR [rsp+0x48]
  40f597:	mov    rbx,rdx
  40f59a:	add    rbx,0x1
  40f59e:	cvtsi2sd xmm2,eax
  40f5a2:	add    eax,0x30
  40f5a5:	mov    BYTE PTR [rdx],al
  40f5a7:	movsd  xmm5,QWORD PTR [rsp+0x38]
  40f5ad:	subsd  xmm0,xmm2
  40f5b1:	subsd  xmm1,xmm5
  40f5b5:	ucomisd xmm1,xmm0
  40f5b9:	ja     0x40f654
  40f5bf:	movsd  xmm5,QWORD PTR [rip+0x8b91]        # 0x418158
  40f5c7:	movapd xmm2,xmm5
  40f5cb:	subsd  xmm2,xmm0
  40f5cf:	ucomisd xmm1,xmm2
  40f5d3:	ja     0x410157
  40f5d9:	mov    eax,DWORD PTR [rsp+0x9c]
  40f5e0:	movsd  xmm3,QWORD PTR [rip+0x8b78]        # 0x418160
  40f5e8:	add    eax,0x1
  40f5eb:	cmp    r9d,eax
  40f5ee:	mov    DWORD PTR [rsp+0x9c],eax
  40f5f5:	jg     0x40f62c
  40f5f7:	jmp    0x40f7ae
  40f5fc:	nop    DWORD PTR [rax+0x0]
  40f600:	movapd xmm2,xmm5
  40f604:	subsd  xmm2,xmm0
  40f608:	ucomisd xmm1,xmm2
  40f60c:	ja     0x410157
  40f612:	mov    eax,DWORD PTR [rsp+0x9c]
  40f619:	add    eax,0x1
  40f61c:	cmp    r9d,eax
  40f61f:	mov    DWORD PTR [rsp+0x9c],eax
  40f626:	jle    0x40f7ae
  40f62c:	mulsd  xmm0,xmm3
  40f630:	add    rbx,0x1
  40f634:	pxor   xmm2,xmm2
  40f638:	mulsd  xmm1,xmm3
  40f63c:	cvttsd2si eax,xmm0
  40f640:	cvtsi2sd xmm2,eax
  40f644:	add    eax,0x30
  40f647:	mov    BYTE PTR [rbx-0x1],al
  40f64a:	subsd  xmm0,xmm2
  40f64e:	ucomisd xmm1,xmm0
  40f652:	jbe    0x40f600
  40f654:	ucomisd xmm0,xmm6
  40f658:	lea    ebp,[rcx+0x1]
  40f65b:	jp     0x40f663
  40f65d:	je     0x40ffb7
  40f663:	mov    r15d,0x10
  40f669:	nop    DWORD PTR [rax+0x0]
  40f670:	mov    rcx,rsi
  40f673:	call   0x4108c0
  40f678:	cmp    QWORD PTR [rsp+0x138],0x0
  40f681:	mov    rax,QWORD PTR [rsp+0x130]
  40f689:	mov    BYTE PTR [rbx],0x0
  40f68c:	mov    DWORD PTR [rax],ebp
  40f68e:	je     0x40f69b
  40f690:	mov    rax,QWORD PTR [rsp+0x138]
  40f698:	mov    QWORD PTR [rax],rbx
  40f69b:	mov    rax,QWORD PTR [rsp+0x28]
  40f6a0:	or     DWORD PTR [rax],r15d
  40f6a3:	mov    rax,QWORD PTR [rsp+0x48]
  40f6a8:	jmp    0x40f227
  40f6ad:	nop    DWORD PTR [rax]
  40f6b0:	mov    DWORD PTR [rsi+0x14],0x0
  40f6b7:	jmp    0x40f1d1
  40f6bc:	nop    DWORD PTR [rax+0x0]
  40f6c0:	mov    edx,eax
  40f6c2:	mov    rcx,rsi
  40f6c5:	call   0x410550
  40f6ca:	mov    eax,DWORD PTR [rsp+0x9c]
  40f6d1:	lea    r11d,[r13+rax*1+0x0]
  40f6d6:	sub    r14d,eax
  40f6d9:	jmp    0x40f1eb
  40f6de:	xchg   ax,ax
  40f6e0:	mov    DWORD PTR [rsp+0x120],0x0
  40f6eb:	add    ecx,0x3fe
  40f6f1:	cmp    ecx,0x7f7
  40f6f7:	setbe  al
  40f6fa:	jmp    0x40f40f
  40f6ff:	nop
  40f700:	mov    DWORD PTR [rsp+0x6c],0x0
  40f708:	jmp    0x40f3b0
  40f70d:	nop    DWORD PTR [rax]
  40f710:	mov    edx,DWORD PTR [rsp+0x128]
  40f717:	test   edx,edx
  40f719:	jle    0x40ffcb
  40f71f:	cmp    DWORD PTR [rsp+0x128],0xe
  40f727:	setbe  bl
  40f72a:	mov    ecx,DWORD PTR [rsp+0x128]
  40f731:	and    ebx,eax
  40f733:	mov    DWORD PTR [rsp+0x9c],ecx
  40f73a:	mov    DWORD PTR [rsp+0x8c],ecx
  40f741:	mov    DWORD PTR [rsp+0x68],ecx
  40f745:	jmp    0x40f479
  40f74a:	movapd xmm0,xmm4
  40f74e:	addsd  xmm0,xmm4
  40f752:	addsd  xmm0,QWORD PTR [rip+0x8a16]        # 0x418170
  40f75a:	movq   rdx,xmm0
  40f75f:	movq   rax,xmm0
  40f764:	shr    rdx,0x20
  40f768:	mov    eax,eax
  40f76a:	sub    edx,0x3400000
  40f770:	shl    rdx,0x20
  40f774:	or     rax,rdx
  40f777:	movapd xmm1,xmm4
  40f77b:	mov    QWORD PTR [rsp+0x38],rax
  40f780:	movsd  xmm0,QWORD PTR [rsp+0x38]
  40f786:	subsd  xmm1,QWORD PTR [rip+0x89ea]        # 0x418178
  40f78e:	ucomisd xmm1,xmm0
  40f792:	ja     0x410074
  40f798:	movsd  xmm2,QWORD PTR [rip+0x89e0]        # 0x418180
  40f7a0:	xorpd  xmm0,xmm2
  40f7a4:	ucomisd xmm0,xmm1
  40f7a8:	ja     0x40fb8d
  40f7ae:	movq   r9,xmm4
  40f7b3:	mov    DWORD PTR [rsp+0x38],0x0
  40f7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f7c0:	test   r11d,r11d
  40f7c3:	js     0x40f862
  40f7c9:	movsxd rax,DWORD PTR [rsp+0x30]
  40f7ce:	cmp    eax,DWORD PTR [rbp+0x14]
  40f7d1:	jg     0x40f862
  40f7d7:	mov    ebx,DWORD PTR [rsp+0x68]
  40f7db:	mov    rdx,QWORD PTR [rip+0x8cae]        # 0x418490
  40f7e2:	test   ebx,ebx
  40f7e4:	movsd  xmm2,QWORD PTR [rdx+rax*8]
  40f7e9:	jg     0x40fef3
  40f7ef:	mov    eax,DWORD PTR [rsp+0x128]
  40f7f6:	shr    eax,0x1f
  40f7f9:	test   al,al
  40f7fb:	je     0x40fef3
  40f801:	test   ebx,ebx
  40f803:	jne    0x40fb8d
  40f809:	mulsd  xmm2,QWORD PTR [rip+0x8967]        # 0x418178
  40f811:	mov    QWORD PTR [rsp+0x38],r9
  40f816:	movsd  xmm5,QWORD PTR [rsp+0x38]
  40f81c:	ucomisd xmm2,xmm5
  40f820:	jae    0x40fb8d
  40f826:	mov    ebp,DWORD PTR [rsp+0x30]
  40f82a:	xor    r12d,r12d
  40f82d:	xor    edi,edi
  40f82f:	add    ebp,0x2
  40f832:	mov    rax,QWORD PTR [rsp+0x48]
  40f837:	mov    r15d,0x20
  40f83d:	lea    rbx,[rax+0x1]
  40f841:	mov    BYTE PTR [rax],0x31
  40f844:	mov    rcx,r12
  40f847:	call   0x4108c0
  40f84c:	test   rdi,rdi
  40f84f:	je     0x40f670
  40f855:	mov    rcx,rdi
  40f858:	call   0x4108c0
  40f85d:	jmp    0x40f670
  40f862:	mov    r9d,DWORD PTR [rsp+0x60]
  40f867:	test   r9d,r9d
  40f86a:	je     0x40fd70
  40f870:	mov    edx,DWORD PTR [rbp+0x4]
  40f873:	sub    edi,r14d
  40f876:	mov    ecx,r11d
  40f879:	lea    eax,[rdi+0x1]
  40f87c:	sub    ecx,edi
  40f87e:	cmp    ecx,edx
  40f880:	mov    DWORD PTR [rsp+0x9c],eax
  40f887:	jge    0x40f8bc
  40f889:	mov    ebx,DWORD PTR [rsp+0x120]
  40f890:	lea    ecx,[rbx-0x3]
  40f893:	and    ecx,0xfffffffd
  40f896:	je     0x40f8bc
  40f898:	mov    ebx,DWORD PTR [rsp+0x68]
  40f89c:	sub    r11d,edx
  40f89f:	lea    eax,[r11+0x1]
  40f8a3:	test   ebx,ebx
  40f8a5:	mov    DWORD PTR [rsp+0x9c],eax
  40f8ac:	setg   cl
  40f8af:	cmp    ebx,eax
  40f8b1:	setl   dl
  40f8b4:	test   cl,dl
  40f8b6:	je     0x40ffff
  40f8bc:	cmp    DWORD PTR [rsp+0x120],0x1
  40f8c4:	jle    0x40ffff
  40f8ca:	mov    ebx,DWORD PTR [rsp+0x58]
  40f8ce:	mov    eax,DWORD PTR [rsp+0x68]
  40f8d2:	mov    r12d,ebx
  40f8d5:	sub    eax,0x1
  40f8d8:	sub    r12d,eax
  40f8db:	cmp    ebx,eax
  40f8dd:	jge    0x40f8f3
  40f8df:	mov    edx,eax
  40f8e1:	sub    edx,DWORD PTR [rsp+0x58]
  40f8e5:	xor    r12d,r12d
  40f8e8:	add    DWORD PTR [rsp+0x88],edx
  40f8ef:	mov    DWORD PTR [rsp+0x58],eax
  40f8f3:	mov    eax,DWORD PTR [rsp+0x68]
  40f8f7:	test   eax,eax
  40f8f9:	js     0x410292
  40f8ff:	mov    ebx,DWORD PTR [rsp+0x50]
  40f903:	mov    DWORD PTR [rsp+0x9c],eax
  40f90a:	mov    ecx,0x1
  40f90f:	add    DWORD PTR [rsp+0x50],eax
  40f913:	add    DWORD PTR [rsp+0x40],eax
  40f917:	call   0x4109f0
  40f91c:	mov    rdi,rax
  40f91f:	mov    ecx,DWORD PTR [rsp+0x40]
  40f923:	test   ecx,ecx
  40f925:	mov    eax,ecx
  40f927:	jle    0x40f945
  40f929:	test   ebx,ebx
  40f92b:	jle    0x40f945
  40f92d:	cmp    ecx,ebx
  40f92f:	cmovg  eax,ebx
  40f932:	sub    DWORD PTR [rsp+0x50],eax
  40f936:	sub    ecx,eax
  40f938:	mov    DWORD PTR [rsp+0x9c],eax
  40f93f:	sub    ebx,eax
  40f941:	mov    DWORD PTR [rsp+0x40],ecx
  40f945:	mov    r8d,DWORD PTR [rsp+0x58]
  40f94a:	test   r8d,r8d
  40f94d:	jle    0x40f99b
  40f94f:	mov    ecx,DWORD PTR [rsp+0x60]
  40f953:	test   ecx,ecx
  40f955:	je     0x40fd90
  40f95b:	test   r12d,r12d
  40f95e:	jle    0x40f98e
  40f960:	mov    rcx,rdi
  40f963:	mov    edx,r12d
  40f966:	call   0x410b50
  40f96b:	mov    rdx,rsi
  40f96e:	mov    rcx,rax
  40f971:	mov    rdi,rax
  40f974:	call   0x410a20
  40f979:	mov    rcx,rsi
  40f97c:	mov    QWORD PTR [rsp+0x70],rax
  40f981:	call   0x4108c0
  40f986:	mov    rax,QWORD PTR [rsp+0x70]
  40f98b:	mov    rsi,rax
  40f98e:	mov    edx,DWORD PTR [rsp+0x58]
  40f992:	sub    edx,r12d
  40f995:	jne    0x40fd94
  40f99b:	mov    ecx,0x1
  40f9a0:	call   0x4109f0
  40f9a5:	mov    r12,rax
  40f9a8:	mov    eax,DWORD PTR [rsp+0x88]
  40f9af:	test   eax,eax
  40f9b1:	jle    0x40fae0
  40f9b7:	mov    rcx,r12
  40f9ba:	mov    edx,eax
  40f9bc:	call   0x410b50
  40f9c1:	cmp    DWORD PTR [rsp+0x120],0x1
  40f9c9:	mov    r12,rax
  40f9cc:	jg     0x40f9d8
  40f9ce:	cmp    r14d,0x1
  40f9d2:	je     0x40fa9c
  40f9d8:	xor    ebp,ebp
  40f9da:	mov    eax,DWORD PTR [r12+0x14]
  40f9df:	sub    eax,0x1
  40f9e2:	cdqe   
  40f9e4:	bsr    eax,DWORD PTR [r12+rax*4+0x18]
  40f9ea:	xor    eax,0x1f
  40f9ed:	sub    eax,DWORD PTR [rsp+0x40]
  40f9f1:	mov    edx,DWORD PTR [rsp+0x50]
  40f9f5:	sub    eax,0x4
  40f9f8:	and    eax,0x1f
  40f9fb:	add    edx,eax
  40f9fd:	mov    r13d,eax
  40fa00:	mov    DWORD PTR [rsp+0x9c],eax
  40fa07:	test   edx,edx
  40fa09:	mov    ecx,eax
  40fa0b:	jle    0x40fa1f
  40fa0d:	mov    rcx,rsi
  40fa10:	call   0x410cc0
  40fa15:	mov    ecx,DWORD PTR [rsp+0x9c]
  40fa1c:	mov    rsi,rax
  40fa1f:	mov    edx,DWORD PTR [rsp+0x40]
  40fa23:	add    edx,ecx
  40fa25:	test   edx,edx
  40fa27:	jle    0x40fa34
  40fa29:	mov    rcx,r12
  40fa2c:	call   0x410cc0
  40fa31:	mov    r12,rax
  40fa34:	mov    eax,DWORD PTR [rsp+0x6c]
  40fa38:	test   eax,eax
  40fa3a:	jne    0x40fdb1
  40fa40:	mov    r14d,DWORD PTR [rsp+0x68]
  40fa45:	test   r14d,r14d
  40fa48:	jg     0x40fc01
  40fa4e:	cmp    DWORD PTR [rsp+0x120],0x2
  40fa56:	jle    0x40fc01
  40fa5c:	mov    r11d,DWORD PTR [rsp+0x68]
  40fa61:	test   r11d,r11d
  40fa64:	jne    0x40fb92
  40fa6a:	xor    r8d,r8d
  40fa6d:	mov    rcx,r12
  40fa70:	mov    edx,0x5
  40fa75:	call   0x410930
  40fa7a:	mov    rcx,rsi
  40fa7d:	mov    rdx,rax
  40fa80:	mov    r12,rax
  40fa83:	call   0x410de0
  40fa88:	test   eax,eax
  40fa8a:	jle    0x40fb92
  40fa90:	mov    ebp,DWORD PTR [rsp+0x30]
  40fa94:	add    ebp,0x2
  40fa97:	jmp    0x40f832
  40fa9c:	mov    eax,DWORD PTR [rbp+0x4]
  40fa9f:	add    eax,0x1
  40faa2:	cmp    r13d,eax
  40faa5:	jle    0x40f9d8
  40faab:	add    DWORD PTR [rsp+0x50],0x1
  40fab0:	add    DWORD PTR [rsp+0x40],0x1
  40fab5:	mov    ebp,0x1
  40faba:	nop    WORD PTR [rax+rax*1+0x0]
  40fac0:	mov    edx,DWORD PTR [rsp+0x88]
  40fac7:	mov    eax,0x1f
  40facc:	test   edx,edx
  40face:	je     0x40f9ed
  40fad4:	jmp    0x40f9da
  40fad9:	nop    DWORD PTR [rax+0x0]
  40fae0:	cmp    DWORD PTR [rsp+0x120],0x1
  40fae8:	jg     0x40faf0
  40faea:	cmp    r14d,0x1
  40faee:	je     0x40faf4
  40faf0:	xor    ebp,ebp
  40faf2:	jmp    0x40fac0
  40faf4:	mov    eax,DWORD PTR [rbp+0x4]
  40faf7:	xor    ebp,ebp
  40faf9:	add    eax,0x1
  40fafc:	cmp    r13d,eax
  40faff:	jle    0x40fac0
  40fb01:	jmp    0x40faab
  40fb03:	cmp    DWORD PTR [rsp+0x120],0x2
  40fb0b:	mov    DWORD PTR [rsp+0x60],0x0
  40fb13:	je     0x40f710
  40fb19:	pxor   xmm0,xmm0
  40fb1d:	mov    QWORD PTR [rsp+0x60],r9
  40fb22:	mov    DWORD PTR [rsp+0x68],r11d
  40fb27:	cvtsi2sd xmm0,edi
  40fb2b:	mulsd  xmm0,QWORD PTR [rip+0x861d]        # 0x418150
  40fb33:	cvttsd2si ecx,xmm0
  40fb37:	add    ecx,0x3
  40fb3a:	mov    DWORD PTR [rsp+0x9c],ecx
  40fb41:	call   0x40eec0
  40fb46:	mov    QWORD PTR [rsp+0x48],rax
  40fb4b:	mov    eax,DWORD PTR [rbp+0xc]
  40fb4e:	mov    r11d,DWORD PTR [rsp+0x68]
  40fb53:	mov    r9,QWORD PTR [rsp+0x60]
  40fb58:	sub    eax,0x1
  40fb5b:	mov    DWORD PTR [rsp+0x38],eax
  40fb5f:	jne    0x41000d
  40fb65:	mov    eax,0xffffffff
  40fb6a:	mov    DWORD PTR [rsp+0x60],0x1
  40fb72:	mov    DWORD PTR [rsp+0x128],0x0
  40fb7d:	mov    DWORD PTR [rsp+0x8c],eax
  40fb84:	mov    DWORD PTR [rsp+0x68],eax
  40fb88:	jmp    0x40f7c0
  40fb8d:	xor    r12d,r12d
  40fb90:	xor    edi,edi
  40fb92:	mov    ebp,DWORD PTR [rsp+0x128]
  40fb99:	mov    rbx,QWORD PTR [rsp+0x48]
  40fb9e:	mov    r15d,0x10
  40fba4:	neg    ebp
  40fba6:	jmp    0x40f844
  40fbab:	nop    DWORD PTR [rax+rax*1+0x0]
  40fbb0:	mov    eax,DWORD PTR [rsp+0x30]
  40fbb4:	sub    DWORD PTR [rsp+0x50],eax
  40fbb8:	mov    DWORD PTR [rsp+0x88],0x0
  40fbc3:	neg    eax
  40fbc5:	mov    DWORD PTR [rsp+0x58],eax
  40fbc9:	jmp    0x40f3e9
  40fbce:	xchg   ax,ax
  40fbd0:	neg    eax
  40fbd2:	mov    DWORD PTR [rsp+0x40],0x0
  40fbda:	mov    DWORD PTR [rsp+0x50],eax
  40fbde:	jmp    0x40f3ca
  40fbe3:	pxor   xmm0,xmm0
  40fbe7:	cvtsi2sd xmm0,eax
  40fbeb:	ucomisd xmm0,xmm1
  40fbef:	jp     0x40fbf7
  40fbf1:	je     0x40f35b
  40fbf7:	sub    DWORD PTR [rsp+0x30],0x1
  40fbfc:	jmp    0x40f35b
  40fc01:	mov    r10d,DWORD PTR [rsp+0x60]
  40fc06:	test   r10d,r10d
  40fc09:	je     0x40fe10
  40fc0f:	lea    edx,[rbx+r13*1]
  40fc13:	test   edx,edx
  40fc15:	jle    0x40fc22
  40fc17:	mov    rcx,rdi
  40fc1a:	call   0x410cc0
  40fc1f:	mov    rdi,rax
  40fc22:	test   ebp,ebp
  40fc24:	mov    r13,rdi
  40fc27:	jne    0x4102c5
  40fc2d:	mov    DWORD PTR [rsp+0x9c],0x1
  40fc38:	mov    rbx,QWORD PTR [rsp+0x48]
  40fc3d:	mov    QWORD PTR [rsp+0x40],r12
  40fc42:	mov    QWORD PTR [rsp+0x50],r15
  40fc47:	jmp    0x40fd0e
  40fc4c:	nop    DWORD PTR [rax+0x0]
  40fc50:	mov    rcx,r8
  40fc53:	call   0x4108c0
  40fc58:	mov    eax,r12d
  40fc5b:	or     eax,DWORD PTR [rsp+0x120]
  40fc62:	jne    0x40fc7a
  40fc64:	mov    ecx,DWORD PTR [rsp+0x38]
  40fc68:	test   ecx,ecx
  40fc6a:	jne    0x40fc7a
  40fc6c:	mov    rax,QWORD PTR [rsp+0x50]
  40fc71:	test   BYTE PTR [rax],0x1
  40fc74:	je     0x410435
  40fc7a:	test   r14d,r14d
  40fc7d:	js     0x410190
  40fc83:	or     r14d,DWORD PTR [rsp+0x120]
  40fc8b:	jne    0x40fc9b
  40fc8d:	mov    rax,QWORD PTR [rsp+0x50]
  40fc92:	test   BYTE PTR [rax],0x1
  40fc95:	je     0x410190
  40fc9b:	test   r12d,r12d
  40fc9e:	jle    0x40fcab
  40fca0:	cmp    DWORD PTR [rsp+0x38],0x2
  40fca5:	jne    0x41039f
  40fcab:	add    rbx,0x1
  40fcaf:	mov    BYTE PTR [rbx-0x1],bpl
  40fcb3:	mov    eax,DWORD PTR [rsp+0x68]
  40fcb7:	cmp    DWORD PTR [rsp+0x9c],eax
  40fcbe:	je     0x41032b
  40fcc4:	xor    r8d,r8d
  40fcc7:	mov    rcx,rsi
  40fcca:	mov    edx,0xa
  40fccf:	call   0x410930
  40fcd4:	xor    r8d,r8d
  40fcd7:	cmp    rdi,r13
  40fcda:	mov    rsi,rax
  40fcdd:	mov    edx,0xa
  40fce2:	mov    rcx,rdi
  40fce5:	je     0x40fd80
  40fceb:	call   0x410930
  40fcf0:	mov    rcx,r13
  40fcf3:	xor    r8d,r8d
  40fcf6:	mov    edx,0xa
  40fcfb:	mov    rdi,rax
  40fcfe:	call   0x410930
  40fd03:	mov    r13,rax
  40fd06:	add    DWORD PTR [rsp+0x9c],0x1
  40fd0e:	mov    r12,QWORD PTR [rsp+0x40]
  40fd13:	mov    rcx,rsi
  40fd16:	mov    rdx,r12
  40fd19:	call   0x40ef60
  40fd1e:	mov    rdx,rdi
  40fd21:	mov    rcx,rsi
  40fd24:	mov    r15d,eax
  40fd27:	lea    ebp,[rax+0x30]
  40fd2a:	call   0x410de0
  40fd2f:	mov    rcx,r12
  40fd32:	mov    rdx,r13
  40fd35:	mov    r14d,eax
  40fd38:	call   0x410e30
  40fd3d:	mov    r9d,DWORD PTR [rax+0x10]
  40fd41:	mov    r8,rax
  40fd44:	mov    r12d,0x1
  40fd4a:	test   r9d,r9d
  40fd4d:	jne    0x40fc50
  40fd53:	mov    rdx,rax
  40fd56:	mov    rcx,rsi
  40fd59:	mov    QWORD PTR [rsp+0x58],rax
  40fd5e:	call   0x410de0
  40fd63:	mov    r8,QWORD PTR [rsp+0x58]
  40fd68:	mov    r12d,eax
  40fd6b:	jmp    0x40fc50
  40fd70:	mov    r12d,DWORD PTR [rsp+0x58]
  40fd75:	mov    ebx,DWORD PTR [rsp+0x50]
  40fd79:	xor    edi,edi
  40fd7b:	jmp    0x40f91f
  40fd80:	call   0x410930
  40fd85:	mov    rdi,rax
  40fd88:	mov    r13,rax
  40fd8b:	jmp    0x40fd06
  40fd90:	mov    edx,DWORD PTR [rsp+0x58]
  40fd94:	mov    rcx,rsi
  40fd97:	call   0x410b50
  40fd9c:	mov    rsi,rax
  40fd9f:	jmp    0x40f99b
  40fda4:	mov    DWORD PTR [rsp+0x60],0x0
  40fdac:	jmp    0x40f447
  40fdb1:	mov    rdx,r12
  40fdb4:	mov    rcx,rsi
  40fdb7:	call   0x410de0
  40fdbc:	test   eax,eax
  40fdbe:	jns    0x40fa40
  40fdc4:	xor    r8d,r8d
  40fdc7:	mov    rcx,rsi
  40fdca:	mov    edx,0xa
  40fdcf:	sub    DWORD PTR [rsp+0x30],0x1
  40fdd4:	call   0x410930
  40fdd9:	mov    rsi,rax
  40fddc:	mov    eax,DWORD PTR [rsp+0x60]
  40fde0:	test   eax,eax
  40fde2:	jne    0x4104a8
  40fde8:	mov    eax,DWORD PTR [rsp+0x8c]
  40fdef:	test   eax,eax
  40fdf1:	jg     0x40fe05
  40fdf3:	cmp    DWORD PTR [rsp+0x120],0x2
  40fdfb:	mov    DWORD PTR [rsp+0x68],eax
  40fdff:	jg     0x40fa5c
  40fe05:	mov    eax,DWORD PTR [rsp+0x8c]
  40fe0c:	mov    DWORD PTR [rsp+0x68],eax
  40fe10:	mov    DWORD PTR [rsp+0x9c],0x1
  40fe1b:	mov    rbx,QWORD PTR [rsp+0x48]
  40fe20:	mov    r13d,DWORD PTR [rsp+0x68]
  40fe25:	jmp    0x40fe4b
  40fe27:	nop    WORD PTR [rax+rax*1+0x0]
  40fe30:	mov    rcx,rsi
  40fe33:	xor    r8d,r8d
  40fe36:	mov    edx,0xa
  40fe3b:	call   0x410930
  40fe40:	add    DWORD PTR [rsp+0x9c],0x1
  40fe48:	mov    rsi,rax
  40fe4b:	mov    rdx,r12
  40fe4e:	mov    rcx,rsi
  40fe51:	add    rbx,0x1
  40fe55:	call   0x40ef60
  40fe5a:	lea    ebp,[rax+0x30]
  40fe5d:	mov    BYTE PTR [rbx-0x1],bpl
  40fe61:	cmp    DWORD PTR [rsp+0x9c],r13d
  40fe69:	jl     0x40fe30
  40fe6b:	xor    r14d,r14d
  40fe6e:	mov    eax,DWORD PTR [rsp+0x38]
  40fe72:	test   eax,eax
  40fe74:	je     0x41023c
  40fe7a:	cmp    eax,0x2
  40fe7d:	je     0x41026c
  40fe83:	cmp    DWORD PTR [rsi+0x14],0x1
  40fe87:	jle    0x410403
  40fe8d:	movzx  edx,BYTE PTR [rbx-0x1]
  40fe91:	mov    rcx,QWORD PTR [rsp+0x48]
  40fe96:	jmp    0x40feb0
  40fe98:	nop    DWORD PTR [rax+rax*1+0x0]
  40fea0:	cmp    rax,rcx
  40fea3:	je     0x41005c
  40fea9:	movzx  edx,BYTE PTR [rax-0x1]
  40fead:	mov    rbx,rax
  40feb0:	cmp    dl,0x39
  40feb3:	lea    rax,[rbx-0x1]
  40feb7:	je     0x40fea0
  40feb9:	add    edx,0x1
  40febc:	mov    r15d,0x20
  40fec2:	mov    BYTE PTR [rax],dl
  40fec4:	mov    rcx,r12
  40fec7:	call   0x4108c0
  40fecc:	test   rdi,rdi
  40fecf:	je     0x40ffbf
  40fed5:	cmp    r14,rdi
  40fed8:	je     0x40fee7
  40feda:	test   r14,r14
  40fedd:	je     0x40fee7
  40fedf:	mov    rcx,r14
  40fee2:	call   0x4108c0
  40fee7:	mov    ebp,DWORD PTR [rsp+0x30]
  40feeb:	add    ebp,0x1
  40feee:	jmp    0x40f855
  40fef3:	mov    QWORD PTR [rsp+0x40],r9
  40fef8:	mov    rdi,QWORD PTR [rsp+0x48]
  40fefd:	movsd  xmm0,QWORD PTR [rsp+0x40]
  40ff03:	mov    DWORD PTR [rsp+0x9c],0x1
  40ff0e:	movapd xmm1,xmm0
  40ff12:	mov    rbx,rdi
  40ff15:	add    rbx,0x1
  40ff19:	divsd  xmm1,xmm2
  40ff1d:	cvttsd2si eax,xmm1
  40ff21:	pxor   xmm1,xmm1
  40ff25:	cvtsi2sd xmm1,eax
  40ff29:	lea    edx,[rax+0x30]
  40ff2c:	mov    BYTE PTR [rdi],dl
  40ff2e:	mulsd  xmm1,xmm2
  40ff32:	subsd  xmm0,xmm1
  40ff36:	ucomisd xmm0,xmm6
  40ff3a:	jp     0x40ff3e
  40ff3c:	je     0x40ffb0
  40ff3e:	mov    edx,DWORD PTR [rsp+0x9c]
  40ff45:	cmp    DWORD PTR [rsp+0x68],edx
  40ff49:	je     0x410037
  40ff4f:	movsd  xmm3,QWORD PTR [rip+0x8209]        # 0x418160
  40ff57:	movapd xmm4,xmm6
  40ff5b:	mov    ecx,DWORD PTR [rsp+0x68]
  40ff5f:	jmp    0x40ff70
  40ff61:	mov    edx,DWORD PTR [rsp+0x9c]
  40ff68:	cmp    ecx,edx
  40ff6a:	je     0x410037
  40ff70:	mulsd  xmm0,xmm3
  40ff74:	add    edx,0x1
  40ff77:	add    rbx,0x1
  40ff7b:	mov    DWORD PTR [rsp+0x9c],edx
  40ff82:	movapd xmm1,xmm0
  40ff86:	divsd  xmm1,xmm2
  40ff8a:	cvttsd2si eax,xmm1
  40ff8e:	pxor   xmm1,xmm1
  40ff92:	cvtsi2sd xmm1,eax
  40ff96:	lea    edx,[rax+0x30]
  40ff99:	mov    BYTE PTR [rbx-0x1],dl
  40ff9c:	mulsd  xmm1,xmm2
  40ffa0:	subsd  xmm0,xmm1
  40ffa4:	ucomisd xmm0,xmm6
  40ffa8:	jp     0x40ff61
  40ffaa:	ucomisd xmm0,xmm4
  40ffae:	jne    0x40ff61
  40ffb0:	mov    ebp,DWORD PTR [rsp+0x30]
  40ffb4:	add    ebp,0x1
  40ffb7:	xor    r15d,r15d
  40ffba:	jmp    0x40f670
  40ffbf:	mov    ebp,DWORD PTR [rsp+0x30]
  40ffc3:	add    ebp,0x1
  40ffc6:	jmp    0x40f670
  40ffcb:	mov    ebx,0x1
  40ffd0:	mov    DWORD PTR [rsp+0x128],0x1
  40ffdb:	jmp    0x40f72a
  40ffe0:	cmp    DWORD PTR [rsp+0x68],0xe
  40ffe5:	mov    DWORD PTR [rsp+0x9c],0x1
  40fff0:	mov    ecx,0x1
  40fff5:	setbe  bl
  40fff8:	and    ebx,eax
  40fffa:	jmp    0x40f479
  40ffff:	mov    r12d,DWORD PTR [rsp+0x58]
  410004:	mov    ebx,DWORD PTR [rsp+0x50]
  410008:	jmp    0x40f90a
  41000d:	mov    eax,0xffffffff
  410012:	xor    ebx,ebx
  410014:	mov    DWORD PTR [rsp+0x60],0x1
  41001c:	mov    DWORD PTR [rsp+0x8c],eax
  410023:	mov    DWORD PTR [rsp+0x68],eax
  410027:	mov    DWORD PTR [rsp+0x128],0x0
  410032:	jmp    0x40f4a3
  410037:	mov    r10d,DWORD PTR [rsp+0x38]
  41003c:	test   r10d,r10d
  41003f:	je     0x4102fe
  410045:	cmp    DWORD PTR [rsp+0x38],0x1
  41004a:	je     0x4103f1
  410050:	mov    ebp,DWORD PTR [rsp+0x30]
  410054:	add    ebp,0x1
  410057:	jmp    0x40f663
  41005c:	mov    rax,QWORD PTR [rsp+0x48]
  410061:	add    DWORD PTR [rsp+0x30],0x1
  410066:	mov    r15d,0x20
  41006c:	mov    BYTE PTR [rax],0x31
  41006f:	jmp    0x40fec4
  410074:	mov    ebp,0x2
  410079:	xor    r12d,r12d
  41007c:	xor    edi,edi
  41007e:	jmp    0x40f832
  410083:	mov    r10,QWORD PTR [rip+0x8406]        # 0x418490
  41008a:	mov    QWORD PTR [rsp+0x38],rax
  41008f:	movsd  xmm3,QWORD PTR [rsp+0x38]
  410095:	mov    DWORD PTR [rsp+0x9c],0x1
  4100a0:	mov    rbx,QWORD PTR [rsp+0x48]
  4100a5:	movsd  xmm1,QWORD PTR [rip+0x80b3]        # 0x418160
  4100ad:	mulsd  xmm3,QWORD PTR [r10+rdx*8]
  4100b3:	jmp    0x4100c3
  4100b5:	mulsd  xmm0,xmm1
  4100b9:	add    edx,0x1
  4100bc:	mov    DWORD PTR [rsp+0x9c],edx
  4100c3:	cvttsd2si eax,xmm0
  4100c7:	test   eax,eax
  4100c9:	je     0x4100d7
  4100cb:	pxor   xmm2,xmm2
  4100cf:	cvtsi2sd xmm2,eax
  4100d3:	subsd  xmm0,xmm2
  4100d7:	add    rbx,0x1
  4100db:	add    eax,0x30
  4100de:	mov    BYTE PTR [rbx-0x1],al
  4100e1:	mov    edx,DWORD PTR [rsp+0x9c]
  4100e8:	cmp    edx,r9d
  4100eb:	jne    0x4100b5
  4100ed:	movsd  xmm1,QWORD PTR [rip+0x809b]        # 0x418190
  4100f5:	movapd xmm2,xmm3
  4100f9:	addsd  xmm2,xmm1
  4100fd:	ucomisd xmm0,xmm2
  410101:	ja     0x410157
  410103:	subsd  xmm1,xmm3
  410107:	ucomisd xmm1,xmm0
  41010b:	jbe    0x40f7ae
  410111:	ucomisd xmm0,xmm6
  410115:	jp     0x41049d
  41011b:	jne    0x41049d
  410121:	xor    r15d,r15d
  410124:	jmp    0x410137
  410126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410130:	movzx  eax,BYTE PTR [rbx-0x2]
  410134:	mov    rbx,rdx
  410137:	cmp    al,0x30
  410139:	lea    rdx,[rbx-0x1]
  41013d:	je     0x410130
  41013f:	lea    ebp,[rcx+0x1]
  410142:	jmp    0x40f670
  410147:	test   al,0x1
  410149:	mov    ecx,DWORD PTR [rsp+0x30]
  41014d:	movzx  eax,BYTE PTR [rbx-0x1]
  410151:	je     0x41049d
  410157:	mov    r8,QWORD PTR [rsp+0x48]
  41015c:	jmp    0x410170
  41015e:	xchg   ax,ax
  410160:	cmp    rdx,r8
  410163:	je     0x4102ac
  410169:	movzx  eax,BYTE PTR [rdx-0x1]
  41016d:	mov    rbx,rdx
  410170:	cmp    al,0x39
  410172:	lea    rdx,[rbx-0x1]
  410176:	je     0x410160
  410178:	mov    QWORD PTR [rsp+0x48],r8
  41017d:	add    eax,0x1
  410180:	mov    BYTE PTR [rdx],al
  410182:	lea    ebp,[rcx+0x1]
  410185:	mov    r15d,0x20
  41018b:	jmp    0x40f670
  410190:	mov    edx,DWORD PTR [rsp+0x38]
  410194:	mov    eax,r12d
  410197:	mov    r14d,ebp
  41019a:	mov    r12,QWORD PTR [rsp+0x40]
  41019f:	test   edx,edx
  4101a1:	je     0x4103d1
  4101a7:	cmp    DWORD PTR [rsi+0x14],0x1
  4101ab:	jle    0x4103c7
  4101b1:	cmp    DWORD PTR [rsp+0x38],0x2
  4101b6:	jne    0x410207
  4101b8:	jmp    0x4103e6
  4101bd:	nop    DWORD PTR [rax]
  4101c0:	add    rbx,0x1
  4101c4:	xor    r8d,r8d
  4101c7:	mov    rcx,r13
  4101ca:	mov    BYTE PTR [rbx-0x1],r14b
  4101ce:	mov    edx,0xa
  4101d3:	call   0x410930
  4101d8:	cmp    rdi,r13
  4101db:	mov    rcx,rsi
  4101de:	mov    edx,0xa
  4101e3:	cmove  rdi,rax
  4101e7:	xor    r8d,r8d
  4101ea:	mov    rbp,rax
  4101ed:	call   0x410930
  4101f2:	mov    rdx,r12
  4101f5:	mov    rcx,rax
  4101f8:	mov    rsi,rax
  4101fb:	call   0x40ef60
  410200:	lea    r14d,[rax+0x30]
  410204:	mov    r13,rbp
  410207:	mov    rdx,r13
  41020a:	mov    rcx,r12
  41020d:	call   0x410de0
  410212:	test   eax,eax
  410214:	jg     0x4101c0
  410216:	cmp    r14d,0x39
  41021a:	je     0x410416
  410220:	add    r14d,0x1
  410224:	mov    r15d,0x20
  41022a:	mov    BYTE PTR [rbx],r14b
  41022d:	mov    r14,rdi
  410230:	add    rbx,0x1
  410234:	mov    rdi,r13
  410237:	jmp    0x40fec4
  41023c:	mov    rcx,rsi
  41023f:	mov    edx,0x1
  410244:	call   0x410cc0
  410249:	mov    rdx,r12
  41024c:	mov    rcx,rax
  41024f:	mov    rsi,rax
  410252:	call   0x410de0
  410257:	cmp    eax,0x0
  41025a:	jg     0x40fe8d
  410260:	jne    0x41026c
  410262:	and    bpl,0x1
  410266:	jne    0x40fe8d
  41026c:	cmp    DWORD PTR [rsi+0x14],0x1
  410270:	mov    r15d,0x10
  410276:	jg     0x410283
  410278:	jmp    0x41050d
  41027d:	nop    DWORD PTR [rax]
  410280:	mov    rbx,rax
  410283:	cmp    BYTE PTR [rbx-0x1],0x30
  410287:	lea    rax,[rbx-0x1]
  41028b:	je     0x410280
  41028d:	jmp    0x40fec4
  410292:	mov    ebx,DWORD PTR [rsp+0x50]
  410296:	mov    DWORD PTR [rsp+0x9c],0x0
  4102a1:	xor    eax,eax
  4102a3:	sub    ebx,DWORD PTR [rsp+0x68]
  4102a7:	jmp    0x40f90a
  4102ac:	mov    QWORD PTR [rsp+0x48],r8
  4102b1:	add    ecx,0x1
  4102b4:	mov    BYTE PTR [r8],0x30
  4102b8:	mov    rdx,r8
  4102bb:	mov    eax,0x31
  4102c0:	jmp    0x410180
  4102c5:	mov    ecx,DWORD PTR [rdi+0x8]
  4102c8:	call   0x4107b0
  4102cd:	lea    rcx,[rax+0x10]
  4102d1:	mov    rbx,rax
  4102d4:	movsxd rax,DWORD PTR [rdi+0x14]
  4102d8:	lea    rdx,[rdi+0x10]
  4102dc:	lea    r8,[rax*4+0x8]
  4102e4:	call   0x4114a8
  4102e9:	mov    edx,0x1
  4102ee:	mov    rcx,rbx
  4102f1:	call   0x410cc0
  4102f6:	mov    r13,rax
  4102f9:	jmp    0x40fc2d
  4102fe:	addsd  xmm0,xmm0
  410302:	ucomisd xmm0,xmm2
  410306:	ja     0x4103f1
  41030c:	ucomisd xmm2,xmm0
  410310:	jp     0x410318
  410312:	je     0x410147
  410318:	movzx  eax,BYTE PTR [rbx-0x1]
  41031c:	mov    ecx,DWORD PTR [rsp+0x30]
  410320:	mov    r15d,0x10
  410326:	jmp    0x410137
  41032b:	mov    r14,rdi
  41032e:	mov    r12,QWORD PTR [rsp+0x40]
  410333:	mov    rdi,r13
  410336:	jmp    0x40fe6e
  41033b:	mov    eax,DWORD PTR [rsp+0x68]
  41033f:	test   eax,eax
  410341:	je     0x40f74a
  410347:	mov    r9d,DWORD PTR [rsp+0x8c]
  41034f:	test   r9d,r9d
  410352:	jle    0x40f7ae
  410358:	movsd  xmm0,QWORD PTR [rip+0x7e00]        # 0x418160
  410360:	mov    ecx,0xffffffff
  410365:	movsd  xmm1,QWORD PTR [rip+0x7dfb]        # 0x418168
  41036d:	mulsd  xmm0,xmm4
  410371:	mulsd  xmm1,xmm0
  410375:	addsd  xmm1,QWORD PTR [rip+0x7df3]        # 0x418170
  41037d:	movq   rdx,xmm1
  410382:	movq   rax,xmm1
  410387:	shr    rdx,0x20
  41038b:	mov    eax,eax
  41038d:	sub    edx,0x3400000
  410393:	shl    rdx,0x20
  410397:	or     rax,rdx
  41039a:	jmp    0x40f552
  41039f:	cmp    ebp,0x39
  4103a2:	mov    r12,QWORD PTR [rsp+0x40]
  4103a7:	mov    rax,rbx
  4103aa:	je     0x410419
  4103ac:	add    ebp,0x1
  4103af:	mov    r14,rdi
  4103b2:	add    rbx,0x1
  4103b6:	mov    BYTE PTR [rax],bpl
  4103b9:	mov    rdi,r13
  4103bc:	mov    r15d,0x20
  4103c2:	jmp    0x40fec4
  4103c7:	cmp    DWORD PTR [rsi+0x18],0x0
  4103cb:	jne    0x4101b1
  4103d1:	test   eax,eax
  4103d3:	jg     0x410469
  4103d9:	xor    r15d,r15d
  4103dc:	cmp    DWORD PTR [rsi+0x14],0x1
  4103e0:	jle    0x4104e8
  4103e6:	mov    r15d,0x10
  4103ec:	jmp    0x41022a
  4103f1:	movzx  eax,BYTE PTR [rbx-0x1]
  4103f5:	mov    ecx,DWORD PTR [rsp+0x30]
  4103f9:	mov    r8,QWORD PTR [rsp+0x48]
  4103fe:	jmp    0x410170
  410403:	mov    eax,DWORD PTR [rsi+0x18]
  410406:	test   eax,eax
  410408:	jne    0x40fe8d
  41040e:	xor    r15d,r15d
  410411:	jmp    0x410283
  410416:	mov    rax,rbx
  410419:	mov    r14,rdi
  41041c:	add    rbx,0x1
  410420:	mov    rdi,r13
  410423:	mov    BYTE PTR [rax],0x39
  410426:	mov    edx,0x39
  41042b:	mov    rcx,QWORD PTR [rsp+0x48]
  410430:	jmp    0x40feb0
  410435:	cmp    ebp,0x39
  410438:	mov    r12,QWORD PTR [rsp+0x40]
  41043d:	mov    rax,rbx
  410440:	je     0x410416
  410442:	test   r14d,r14d
  410445:	jle    0x410520
  41044b:	mov    ebp,r15d
  41044e:	mov    r15d,0x20
  410454:	add    ebp,0x31
  410457:	mov    r14,rdi
  41045a:	add    rbx,0x1
  41045e:	mov    BYTE PTR [rax],bpl
  410461:	mov    rdi,r13
  410464:	jmp    0x40fec4
  410469:	mov    rcx,rsi
  41046c:	mov    edx,0x1
  410471:	call   0x410cc0
  410476:	mov    rdx,r12
  410479:	mov    rcx,rax
  41047c:	mov    rsi,rax
  41047f:	call   0x410de0
  410484:	cmp    eax,0x0
  410487:	jle    0x4104fa
  410489:	cmp    ebp,0x39
  41048c:	je     0x410416
  41048e:	lea    r14d,[rbp+0x1]
  410492:	mov    r15d,0x20
  410498:	jmp    0x4103dc
  41049d:	mov    r15d,0x10
  4104a3:	jmp    0x410137
  4104a8:	xor    r8d,r8d
  4104ab:	mov    rcx,rdi
  4104ae:	mov    edx,0xa
  4104b3:	call   0x410930
  4104b8:	mov    rdi,rax
  4104bb:	mov    eax,DWORD PTR [rsp+0x8c]
  4104c2:	test   eax,eax
  4104c4:	jg     0x4104d8
  4104c6:	cmp    DWORD PTR [rsp+0x120],0x2
  4104ce:	mov    DWORD PTR [rsp+0x68],eax
  4104d2:	jg     0x40fa5c
  4104d8:	mov    eax,DWORD PTR [rsp+0x8c]
  4104df:	mov    DWORD PTR [rsp+0x68],eax
  4104e3:	jmp    0x40fc0f
  4104e8:	cmp    DWORD PTR [rsi+0x18],0x0
  4104ec:	mov    eax,0x10
  4104f1:	cmovne r15d,eax
  4104f5:	jmp    0x41022a
  4104fa:	jne    0x410502
  4104fc:	test   bpl,0x1
  410500:	jne    0x410489
  410502:	mov    r15d,0x20
  410508:	jmp    0x4103dc
  41050d:	cmp    DWORD PTR [rsi+0x18],0x1
  410511:	sbb    r15d,r15d
  410514:	not    r15d
  410517:	and    r15d,0x10
  41051b:	jmp    0x410283
  410520:	cmp    DWORD PTR [rsi+0x14],0x1
  410524:	mov    r15d,0x10
  41052a:	jg     0x410457
  410530:	cmp    DWORD PTR [rsi+0x18],0x1
  410534:	sbb    r15d,r15d
  410537:	not    r15d
  41053a:	and    r15d,0x10
  41053e:	jmp    0x410457
  410543:	xor    eax,eax
  410545:	jmp    0x40f227
  41054a:	nop
  41054b:	nop
  41054c:	nop
  41054d:	nop
  41054e:	nop
  41054f:	nop
  410550:	push   rbp
  410551:	push   rdi
  410552:	push   rsi
  410553:	push   rbx
  410554:	mov    rsi,rcx
  410557:	lea    r10,[rcx+0x18]
  41055b:	movsxd rcx,DWORD PTR [rcx+0x14]
  41055f:	mov    eax,edx
  410561:	sar    eax,0x5
  410564:	cmp    eax,ecx
  410566:	jge    0x4105f0
  41056c:	cdqe   
  41056e:	and    edx,0x1f
  410571:	lea    rbx,[r10+rcx*4]
  410575:	lea    rdi,[r10+rax*4]
  410579:	je     0x410603
  41057f:	mov    r9d,DWORD PTR [rdi]
  410582:	lea    r8,[rdi+0x4]
  410586:	mov    ebp,0x20
  41058b:	mov    ecx,edx
  41058d:	sub    ebp,edx
  41058f:	shr    r9d,cl
  410592:	cmp    rbx,r8
  410595:	jbe    0x410648
  41059b:	mov    r11,r10
  41059e:	xchg   ax,ax
  4105a0:	mov    eax,DWORD PTR [r8]
  4105a3:	mov    ecx,ebp
  4105a5:	add    r11,0x4
  4105a9:	add    r8,0x4
  4105ad:	shl    eax,cl
  4105af:	mov    ecx,edx
  4105b1:	or     eax,r9d
  4105b4:	mov    DWORD PTR [r11-0x4],eax
  4105b8:	mov    r9d,DWORD PTR [r8-0x4]
  4105bc:	shr    r9d,cl
  4105bf:	cmp    rbx,r8
  4105c2:	ja     0x4105a0
  4105c4:	sub    rbx,rdi
  4105c7:	lea    rax,[rbx-0x5]
  4105cb:	shr    rax,0x2
  4105cf:	lea    rax,[r10+rax*4+0x4]
  4105d4:	test   r9d,r9d
  4105d7:	mov    DWORD PTR [rax],r9d
  4105da:	je     0x4105e0
  4105dc:	add    rax,0x4
  4105e0:	sub    rax,r10
  4105e3:	shr    rax,0x2
  4105e7:	jmp    0x41063c
  4105e9:	nop    DWORD PTR [rax+0x0]
  4105f0:	mov    DWORD PTR [rsi+0x14],0x0
  4105f7:	mov    DWORD PTR [rsi+0x18],0x0
  4105fe:	pop    rbx
  4105ff:	pop    rsi
  410600:	pop    rdi
  410601:	pop    rbp
  410602:	ret    
  410603:	cmp    rbx,rdi
  410606:	mov    rdx,r10
  410609:	mov    rax,rdi
  41060c:	jbe    0x4105f0
  41060e:	xchg   ax,ax
  410610:	add    rax,0x4
  410614:	mov    r8d,DWORD PTR [rax-0x4]
  410618:	add    rdx,0x4
  41061c:	cmp    rbx,rax
  41061f:	mov    DWORD PTR [rdx-0x4],r8d
  410623:	ja     0x410610
  410625:	not    rdi
  410628:	lea    rax,[rdi+rbx*1]
  41062c:	shr    rax,0x2
  410630:	lea    rax,[rax*4+0x4]
  410638:	shr    rax,0x2
  41063c:	test   eax,eax
  41063e:	mov    DWORD PTR [rsi+0x14],eax
  410641:	je     0x4105f7
  410643:	pop    rbx
  410644:	pop    rsi
  410645:	pop    rdi
  410646:	pop    rbp
  410647:	ret    
  410648:	mov    rax,r10
  41064b:	jmp    0x4105d4
  41064d:	nop    DWORD PTR [rax]
  410650:	movsxd rax,DWORD PTR [rcx+0x14]
  410654:	lea    rdx,[rcx+0x18]
  410658:	lea    r8,[rdx+rax*4]
  41065c:	cmp    rdx,r8
  41065f:	jae    0x41068b
  410661:	mov    ecx,DWORD PTR [rcx+0x18]
  410664:	xor    eax,eax
  410666:	test   ecx,ecx
  410668:	je     0x410676
  41066a:	jmp    0x410684
  41066c:	nop    DWORD PTR [rax+0x0]
  410670:	mov    ecx,DWORD PTR [rdx]
  410672:	test   ecx,ecx
  410674:	jne    0x410684
  410676:	add    rdx,0x4
  41067a:	add    eax,0x20
  41067d:	cmp    r8,rdx
  410680:	ja     0x410670
  410682:	repz ret 
  410684:	tzcnt  ecx,ecx
  410688:	add    eax,ecx
  41068a:	ret    
  41068b:	xor    eax,eax
  41068d:	ret    
  41068e:	nop
  41068f:	nop
  410690:	push   rsi
  410691:	push   rbx
  410692:	sub    rsp,0x28
  410696:	mov    eax,DWORD PTR [rip+0xcf74]        # 0x41d610
  41069c:	movsxd rsi,ecx
  41069f:	cmp    eax,0x2
  4106a2:	je     0x41070d
  4106a4:	test   eax,eax
  4106a6:	je     0x4106d2
  4106a8:	cmp    eax,0x1
  4106ab:	jne    0x4106cb
  4106ad:	mov    rbx,QWORD PTR [rip+0xdeb4]        # 0x41e568
  4106b4:	mov    ecx,0x1
  4106b9:	call   rbx
  4106bb:	mov    eax,DWORD PTR [rip+0xcf4f]        # 0x41d610
  4106c1:	cmp    eax,0x1
  4106c4:	je     0x4106b4
  4106c6:	cmp    eax,0x2
  4106c9:	je     0x41070d
  4106cb:	add    rsp,0x28
  4106cf:	pop    rbx
  4106d0:	pop    rsi
  4106d1:	ret    
  4106d2:	mov    al,0x1
  4106d4:	xchg   DWORD PTR [rip+0xcf36],eax        # 0x41d610
  4106da:	test   eax,eax
  4106dc:	jne    0x410730
  4106de:	lea    rcx,[rip+0xcf5b]        # 0x41d640
  4106e5:	mov    rbx,QWORD PTR [rip+0xde1c]        # 0x41e508
  4106ec:	call   rbx
  4106ee:	lea    rcx,[rip+0xcf73]        # 0x41d668
  4106f5:	call   rbx
  4106f7:	lea    rcx,[rip+0x62]        # 0x410760
  4106fe:	call   0x40b170
  410703:	mov    DWORD PTR [rip+0xcf03],0x2        # 0x41d610
  41070d:	lea    rdx,[rsi+rsi*4]
  410711:	lea    rax,[rip+0xcf28]        # 0x41d640
  410718:	lea    rcx,[rax+rdx*8]
  41071c:	mov    rax,QWORD PTR [rip+0xdd65]        # 0x41e488
  410723:	add    rsp,0x28
  410727:	pop    rbx
  410728:	pop    rsi
  410729:	rex.W jmp rax
  41072c:	nop    DWORD PTR [rax+0x0]
  410730:	cmp    eax,0x2
  410733:	je     0x410750
  410735:	mov    eax,DWORD PTR [rip+0xced5]        # 0x41d610
  41073b:	cmp    eax,0x1
  41073e:	je     0x4106ad
  410744:	jmp    0x4106c6
  410746:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410750:	mov    DWORD PTR [rip+0xceb6],0x2        # 0x41d610
  41075a:	jmp    0x41070d
  41075c:	nop    DWORD PTR [rax+0x0]
  410760:	push   rbx
  410761:	sub    rsp,0x20
  410765:	mov    eax,0x3
  41076a:	xchg   DWORD PTR [rip+0xcea0],eax        # 0x41d610
  410770:	cmp    eax,0x2
  410773:	je     0x410780
  410775:	add    rsp,0x20
  410779:	pop    rbx
  41077a:	ret    
  41077b:	nop    DWORD PTR [rax+rax*1+0x0]
  410780:	mov    rbx,QWORD PTR [rip+0xdcf9]        # 0x41e480
  410787:	lea    rcx,[rip+0xceb2]        # 0x41d640
  41078e:	call   rbx
  410790:	lea    rcx,[rip+0xced1]        # 0x41d668
  410797:	mov    rax,rbx
  41079a:	add    rsp,0x20
  41079e:	pop    rbx
  41079f:	rex.W jmp rax
  4107a2:	nop    DWORD PTR [rax+0x0]
  4107a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4107b0:	push   rdi
  4107b1:	push   rsi
  4107b2:	push   rbx
  4107b3:	sub    rsp,0x20
  4107b7:	mov    ebx,ecx
  4107b9:	xor    ecx,ecx
  4107bb:	call   0x410690
  4107c0:	cmp    ebx,0x9
  4107c3:	jg     0x410800
  4107c5:	lea    rdx,[rip+0xcdf4]        # 0x41d5c0
  4107cc:	movsxd rcx,ebx
  4107cf:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4107d3:	test   rdi,rdi
  4107d6:	je     0x410860
  4107dc:	cmp    DWORD PTR [rip+0xce2d],0x2        # 0x41d610
  4107e3:	mov    r8,QWORD PTR [rdi]
  4107e6:	mov    QWORD PTR [rdx+rcx*8],r8
  4107ea:	jne    0x410846
  4107ec:	lea    rcx,[rip+0xce4d]        # 0x41d640
  4107f3:	call   QWORD PTR [rip+0xdd1f]        # 0x41e518
  4107f9:	jmp    0x410846
  4107fb:	nop    DWORD PTR [rax+rax*1+0x0]
  410800:	mov    eax,0x1
  410805:	mov    ecx,ebx
  410807:	shl    eax,cl
  410809:	mov    esi,eax
  41080b:	lea    eax,[rax-0x1]
  41080e:	cdqe   
  410810:	lea    rdx,[rax*4+0x27]
  410818:	shr    rdx,0x3
  41081c:	mov    edx,edx
  41081e:	lea    rcx,[rdx*8+0x0]
  410826:	call   0x4114b8
  41082b:	test   rax,rax
  41082e:	mov    rdi,rax
  410831:	je     0x4108ba
  410837:	cmp    DWORD PTR [rip+0xcdd2],0x2        # 0x41d610
  41083e:	mov    DWORD PTR [rdi+0x8],ebx
  410841:	mov    DWORD PTR [rdi+0xc],esi
  410844:	je     0x4107ec
  410846:	mov    DWORD PTR [rdi+0x14],0x0
  41084d:	mov    DWORD PTR [rdi+0x10],0x0
  410854:	mov    rax,rdi
  410857:	add    rsp,0x20
  41085b:	pop    rbx
  41085c:	pop    rsi
  41085d:	pop    rdi
  41085e:	ret    
  41085f:	nop
  410860:	mov    ecx,ebx
  410862:	mov    eax,0x1
  410867:	mov    rdi,QWORD PTR [rip+0x18c2]        # 0x412130
  41086e:	shl    eax,cl
  410870:	lea    rcx,[rip+0xc449]        # 0x41ccc0
  410877:	lea    edx,[rax-0x1]
  41087a:	mov    esi,eax
  41087c:	mov    rax,rdi
  41087f:	movsxd rdx,edx
  410882:	sub    rax,rcx
  410885:	lea    rdx,[rdx*4+0x27]
  41088d:	mov    rcx,rax
  410890:	sar    rcx,0x3
  410894:	shr    rdx,0x3
  410898:	mov    edx,edx
  41089a:	add    rcx,rdx
  41089d:	cmp    rcx,0x120
  4108a4:	ja     0x41081e
  4108aa:	lea    rdx,[rdi+rdx*8]
  4108ae:	mov    QWORD PTR [rip+0x187b],rdx        # 0x412130
  4108b5:	jmp    0x410837
  4108ba:	xor    eax,eax
  4108bc:	jmp    0x410857
  4108be:	xchg   ax,ax
  4108c0:	push   rbx
  4108c1:	sub    rsp,0x20
  4108c5:	test   rcx,rcx
  4108c8:	je     0x4108f9
  4108ca:	cmp    DWORD PTR [rcx+0x8],0x9
  4108ce:	jg     0x410900
  4108d0:	mov    rbx,rcx
  4108d3:	xor    ecx,ecx
  4108d5:	call   0x410690
  4108da:	movsxd rdx,DWORD PTR [rbx+0x8]
  4108de:	lea    rax,[rip+0xccdb]        # 0x41d5c0
  4108e5:	cmp    DWORD PTR [rip+0xcd24],0x2        # 0x41d610
  4108ec:	mov    rcx,QWORD PTR [rax+rdx*8]
  4108f0:	mov    QWORD PTR [rax+rdx*8],rbx
  4108f4:	mov    QWORD PTR [rbx],rcx
  4108f7:	je     0x410910
  4108f9:	add    rsp,0x20
  4108fd:	pop    rbx
  4108fe:	ret    
  4108ff:	nop
  410900:	add    rsp,0x20
  410904:	pop    rbx
  410905:	jmp    0x411500
  41090a:	nop    WORD PTR [rax+rax*1+0x0]
  410910:	mov    rax,QWORD PTR [rip+0xdc01]        # 0x41e518
  410917:	lea    rcx,[rip+0xcd22]        # 0x41d640
  41091e:	add    rsp,0x20
  410922:	pop    rbx
  410923:	rex.W jmp rax
  410926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410930:	push   rbp
  410931:	push   rdi
  410932:	push   rsi
  410933:	push   rbx
  410934:	sub    rsp,0x28
  410938:	mov    esi,DWORD PTR [rcx+0x14]
  41093b:	xor    r9d,r9d
  41093e:	lea    r10,[rcx+0x18]
  410942:	mov    rdi,rcx
  410945:	movsxd rbx,r8d
  410948:	movsxd rdx,edx
  41094b:	nop    DWORD PTR [rax+rax*1+0x0]
  410950:	mov    eax,DWORD PTR [r10+r9*4]
  410954:	imul   rax,rdx
  410958:	add    rax,rbx
  41095b:	mov    rbx,rax
  41095e:	mov    DWORD PTR [r10+r9*4],eax
  410962:	add    r9,0x1
  410966:	shr    rbx,0x20
  41096a:	cmp    esi,r9d
  41096d:	jg     0x410950
  41096f:	test   rbx,rbx
  410972:	mov    rax,rdi
  410975:	je     0x41098c
  410977:	cmp    esi,DWORD PTR [rdi+0xc]
  41097a:	jge    0x410995
  41097c:	movsxd rax,esi
  41097f:	add    esi,0x1
  410982:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  410986:	mov    DWORD PTR [rdi+0x14],esi
  410989:	mov    rax,rdi
  41098c:	add    rsp,0x28
  410990:	pop    rbx
  410991:	pop    rsi
  410992:	pop    rdi
  410993:	pop    rbp
  410994:	ret    
  410995:	mov    eax,DWORD PTR [rdi+0x8]
  410998:	lea    ecx,[rax+0x1]
  41099b:	call   0x4107b0
  4109a0:	test   rax,rax
  4109a3:	mov    rbp,rax
  4109a6:	je     0x4109de
  4109a8:	lea    rcx,[rax+0x10]
  4109ac:	movsxd rax,DWORD PTR [rdi+0x14]
  4109b0:	lea    rdx,[rdi+0x10]
  4109b4:	lea    r8,[rax*4+0x8]
  4109bc:	call   0x4114a8
  4109c1:	mov    rcx,rdi
  4109c4:	mov    rdi,rbp
  4109c7:	call   0x4108c0
  4109cc:	movsxd rax,esi
  4109cf:	add    esi,0x1
  4109d2:	mov    DWORD PTR [rdi+rax*4+0x18],ebx
  4109d6:	mov    DWORD PTR [rdi+0x14],esi
  4109d9:	mov    rax,rdi
  4109dc:	jmp    0x41098c
  4109de:	xor    eax,eax
  4109e0:	jmp    0x41098c
  4109e2:	nop    DWORD PTR [rax+0x0]
  4109e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4109f0:	push   rbx
  4109f1:	sub    rsp,0x20
  4109f5:	mov    ebx,ecx
  4109f7:	mov    ecx,0x1
  4109fc:	call   0x4107b0
  410a01:	test   rax,rax
  410a04:	je     0x410a10
  410a06:	mov    DWORD PTR [rax+0x18],ebx
  410a09:	mov    DWORD PTR [rax+0x14],0x1
  410a10:	add    rsp,0x20
  410a14:	pop    rbx
  410a15:	ret    
  410a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410a20:	push   r14
  410a22:	push   r13
  410a24:	push   r12
  410a26:	push   rbp
  410a27:	push   rdi
  410a28:	push   rsi
  410a29:	push   rbx
  410a2a:	sub    rsp,0x20
  410a2e:	movsxd r13,DWORD PTR [rcx+0x14]
  410a32:	movsxd rbx,DWORD PTR [rdx+0x14]
  410a36:	mov    r12,rcx
  410a39:	mov    r14,rdx
  410a3c:	cmp    r13d,ebx
  410a3f:	jl     0x410b41
  410a45:	mov    eax,ebx
  410a47:	movsxd rbx,r13d
  410a4a:	movsxd r13,eax
  410a4d:	xor    eax,eax
  410a4f:	lea    esi,[rbx+r13*1]
  410a53:	cmp    esi,DWORD PTR [r12+0xc]
  410a58:	setg   al
  410a5b:	add    eax,DWORD PTR [r12+0x8]
  410a60:	mov    ecx,eax
  410a62:	call   0x4107b0
  410a67:	test   rax,rax
  410a6a:	je     0x410b4c
  410a70:	lea    rdi,[rax+0x18]
  410a74:	movsxd rdx,esi
  410a77:	lea    rbp,[rdi+rdx*4]
  410a7b:	mov    r8,rdi
  410a7e:	cmp    rdi,rbp
  410a81:	jae    0x410a93
  410a83:	mov    DWORD PTR [r8],0x0
  410a8a:	add    r8,0x4
  410a8e:	cmp    rbp,r8
  410a91:	ja     0x410a83
  410a93:	lea    rdx,[r14+0x18]
  410a97:	add    r12,0x18
  410a9b:	lea    rbx,[r12+rbx*4]
  410a9f:	lea    r13,[rdx+r13*4]
  410aa3:	cmp    rdx,r13
  410aa6:	jae    0x410b09
  410aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  410ab0:	add    rdx,0x4
  410ab4:	mov    r11d,DWORD PTR [rdx-0x4]
  410ab8:	test   r11d,r11d
  410abb:	je     0x410b00
  410abd:	mov    r9,rdi
  410ac0:	mov    r8,r12
  410ac3:	xor    r10d,r10d
  410ac6:	jmp    0x410ad3
  410ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  410ad0:	mov    r9,r14
  410ad3:	add    r8,0x4
  410ad7:	mov    ecx,DWORD PTR [r8-0x4]
  410adb:	mov    r14d,DWORD PTR [r9]
  410ade:	imul   rcx,r11
  410ae2:	add    rcx,r14
  410ae5:	lea    r14,[r9+0x4]
  410ae9:	add    rcx,r10
  410aec:	mov    r10,rcx
  410aef:	mov    DWORD PTR [r14-0x4],ecx
  410af3:	shr    r10,0x20
  410af7:	cmp    rbx,r8
  410afa:	ja     0x410ad0
  410afc:	mov    DWORD PTR [r9+0x4],r10d
  410b00:	add    rdi,0x4
  410b04:	cmp    r13,rdx
  410b07:	ja     0x410ab0
  410b09:	test   esi,esi
  410b0b:	jle    0x410b2f
  410b0d:	mov    r8d,DWORD PTR [rbp-0x4]
  410b11:	lea    rdx,[rbp-0x4]
  410b15:	test   r8d,r8d
  410b18:	je     0x410b2a
  410b1a:	jmp    0x410b2f
  410b1c:	nop    DWORD PTR [rax+0x0]
  410b20:	sub    rdx,0x4
  410b24:	mov    ecx,DWORD PTR [rdx]
  410b26:	test   ecx,ecx
  410b28:	jne    0x410b2f
  410b2a:	sub    esi,0x1
  410b2d:	jne    0x410b20
  410b2f:	mov    DWORD PTR [rax+0x14],esi
  410b32:	add    rsp,0x20
  410b36:	pop    rbx
  410b37:	pop    rsi
  410b38:	pop    rdi
  410b39:	pop    rbp
  410b3a:	pop    r12
  410b3c:	pop    r13
  410b3e:	pop    r14
  410b40:	ret    
  410b41:	mov    r12,rdx
  410b44:	mov    r14,rcx
  410b47:	jmp    0x410a4d
  410b4c:	xor    eax,eax
  410b4e:	jmp    0x410b32
  410b50:	push   rbp
  410b51:	push   rdi
  410b52:	push   rsi
  410b53:	push   rbx
  410b54:	sub    rsp,0x28
  410b58:	mov    eax,edx
  410b5a:	mov    rbp,rcx
  410b5d:	mov    ebx,edx
  410b5f:	and    eax,0x3
  410b62:	jne    0x410bf0
  410b68:	sar    ebx,0x2
  410b6b:	mov    rax,rbp
  410b6e:	test   ebx,ebx
  410b70:	je     0x410bbc
  410b72:	mov    rdi,QWORD PTR [rip+0xc107]        # 0x41cc80
  410b79:	test   rdi,rdi
  410b7c:	jne    0x410b92
  410b7e:	jmp    0x410c3d
  410b83:	sar    ebx,1
  410b85:	je     0x410bb9
  410b87:	mov    rsi,QWORD PTR [rdi]
  410b8a:	test   rsi,rsi
  410b8d:	je     0x410bc5
  410b8f:	mov    rdi,rsi
  410b92:	test   bl,0x1
  410b95:	je     0x410b83
  410b97:	mov    rdx,rdi
  410b9a:	mov    rcx,rbp
  410b9d:	call   0x410a20
  410ba2:	test   rax,rax
  410ba5:	mov    rsi,rax
  410ba8:	je     0x410c13
  410baa:	mov    rcx,rbp
  410bad:	mov    rbp,rsi
  410bb0:	call   0x4108c0
  410bb5:	sar    ebx,1
  410bb7:	jne    0x410b87
  410bb9:	mov    rax,rbp
  410bbc:	add    rsp,0x28
  410bc0:	pop    rbx
  410bc1:	pop    rsi
  410bc2:	pop    rdi
  410bc3:	pop    rbp
  410bc4:	ret    
  410bc5:	mov    ecx,0x1
  410bca:	call   0x410690
  410bcf:	mov    rsi,QWORD PTR [rdi]
  410bd2:	test   rsi,rsi
  410bd5:	je     0x410c1e
  410bd7:	cmp    DWORD PTR [rip+0xca32],0x2        # 0x41d610
  410bde:	jne    0x410b8f
  410be0:	lea    rcx,[rip+0xca81]        # 0x41d668
  410be7:	call   QWORD PTR [rip+0xd92b]        # 0x41e518
  410bed:	jmp    0x410b8f
  410bef:	nop
  410bf0:	sub    eax,0x1
  410bf3:	lea    rdx,[rip+0x75c6]        # 0x4181c0
  410bfa:	xor    r8d,r8d
  410bfd:	cdqe   
  410bff:	mov    edx,DWORD PTR [rdx+rax*4]
  410c02:	call   0x410930
  410c07:	test   rax,rax
  410c0a:	mov    rbp,rax
  410c0d:	jne    0x410b68
  410c13:	xor    eax,eax
  410c15:	add    rsp,0x28
  410c19:	pop    rbx
  410c1a:	pop    rsi
  410c1b:	pop    rdi
  410c1c:	pop    rbp
  410c1d:	ret    
  410c1e:	mov    rdx,rdi
  410c21:	mov    rcx,rdi
  410c24:	call   0x410a20
  410c29:	test   rax,rax
  410c2c:	mov    rsi,rax
  410c2f:	mov    QWORD PTR [rdi],rax
  410c32:	je     0x410c13
  410c34:	mov    QWORD PTR [rax],0x0
  410c3b:	jmp    0x410bd7
  410c3d:	mov    ecx,0x1
  410c42:	call   0x410690
  410c47:	mov    rdi,QWORD PTR [rip+0xc032]        # 0x41cc80
  410c4e:	test   rdi,rdi
  410c51:	je     0x410c72
  410c53:	cmp    DWORD PTR [rip+0xc9b6],0x2        # 0x41d610
  410c5a:	jne    0x410b92
  410c60:	lea    rcx,[rip+0xca01]        # 0x41d668
  410c67:	call   QWORD PTR [rip+0xd8ab]        # 0x41e518
  410c6d:	jmp    0x410b92
  410c72:	mov    ecx,0x1
  410c77:	call   0x4107b0
  410c7c:	test   rax,rax
  410c7f:	mov    rdi,rax
  410c82:	je     0x410ca2
  410c84:	mov    DWORD PTR [rax+0x18],0x271
  410c8b:	mov    DWORD PTR [rax+0x14],0x1
  410c92:	mov    QWORD PTR [rip+0xbfe7],rax        # 0x41cc80
  410c99:	mov    QWORD PTR [rax],0x0
  410ca0:	jmp    0x410c53
  410ca2:	mov    QWORD PTR [rip+0xbfd3],0x0        # 0x41cc80
  410cad:	xor    eax,eax
  410caf:	jmp    0x410c15
  410cb4:	xchg   ax,ax
  410cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410cc0:	push   r13
  410cc2:	push   r12
  410cc4:	push   rbp
  410cc5:	push   rdi
  410cc6:	push   rsi
  410cc7:	push   rbx
  410cc8:	sub    rsp,0x28
  410ccc:	mov    rdi,rcx
  410ccf:	mov    ebp,edx
  410cd1:	mov    esi,edx
  410cd3:	mov    r12d,DWORD PTR [rdi+0x14]
  410cd7:	sar    ebp,0x5
  410cda:	mov    eax,DWORD PTR [rdi+0xc]
  410cdd:	mov    ecx,DWORD PTR [rcx+0x8]
  410ce0:	add    r12d,ebp
  410ce3:	lea    ebx,[r12+0x1]
  410ce8:	cmp    ebx,eax
  410cea:	jle    0x410cf9
  410cec:	nop    DWORD PTR [rax+0x0]
  410cf0:	add    eax,eax
  410cf2:	add    ecx,0x1
  410cf5:	cmp    ebx,eax
  410cf7:	jg     0x410cf0
  410cf9:	call   0x4107b0
  410cfe:	test   rax,rax
  410d01:	mov    r13,rax
  410d04:	je     0x410dcf
  410d0a:	test   ebp,ebp
  410d0c:	lea    r8,[rax+0x18]
  410d10:	jle    0x410dc7
  410d16:	lea    eax,[rbp-0x1]
  410d19:	lea    r9,[r8+rax*4+0x4]
  410d1e:	xchg   ax,ax
  410d20:	add    r8,0x4
  410d24:	mov    DWORD PTR [r8-0x4],0x0
  410d2c:	cmp    r8,r9
  410d2f:	jne    0x410d20
  410d31:	movsxd rax,DWORD PTR [rdi+0x14]
  410d35:	lea    r8,[rdi+0x18]
  410d39:	mov    edx,esi
  410d3b:	and    edx,0x1f
  410d3e:	lea    rbp,[r8+rax*4]
  410d42:	je     0x410db0
  410d44:	mov    eax,0x20
  410d49:	xor    r11d,r11d
  410d4c:	sub    eax,edx
  410d4e:	jmp    0x410d53
  410d50:	mov    r9,rsi
  410d53:	mov    r10d,DWORD PTR [r8]
  410d56:	mov    ecx,edx
  410d58:	lea    rsi,[r9+0x4]
  410d5c:	add    r8,0x4
  410d60:	shl    r10d,cl
  410d63:	mov    ecx,eax
  410d65:	or     r10d,r11d
  410d68:	mov    DWORD PTR [rsi-0x4],r10d
  410d6c:	mov    r11d,DWORD PTR [r8-0x4]
  410d70:	shr    r11d,cl
  410d73:	cmp    rbp,r8
  410d76:	ja     0x410d50
  410d78:	add    r12d,0x2
  410d7c:	test   r11d,r11d
  410d7f:	mov    DWORD PTR [r9+0x4],r11d
  410d83:	cmovne ebx,r12d
  410d87:	sub    ebx,0x1
  410d8a:	mov    rcx,rdi
  410d8d:	mov    DWORD PTR [r13+0x14],ebx
  410d91:	call   0x4108c0
  410d96:	mov    rax,r13
  410d99:	add    rsp,0x28
  410d9d:	pop    rbx
  410d9e:	pop    rsi
  410d9f:	pop    rdi
  410da0:	pop    rbp
  410da1:	pop    r12
  410da3:	pop    r13
  410da5:	ret    
  410da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410db0:	add    r8,0x4
  410db4:	mov    edx,DWORD PTR [r8-0x4]
  410db8:	add    r9,0x4
  410dbc:	cmp    rbp,r8
  410dbf:	mov    DWORD PTR [r9-0x4],edx
  410dc3:	ja     0x410db0
  410dc5:	jmp    0x410d87
  410dc7:	mov    r9,r8
  410dca:	jmp    0x410d31
  410dcf:	xor    eax,eax
  410dd1:	jmp    0x410d99
  410dd3:	nop    DWORD PTR [rax]
  410dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410de0:	movsxd r8,DWORD PTR [rdx+0x14]
  410de4:	mov    eax,DWORD PTR [rcx+0x14]
  410de7:	sub    eax,r8d
  410dea:	test   eax,eax
  410dec:	jne    0x410e22
  410dee:	shl    r8,0x2
  410df2:	add    rcx,0x18
  410df6:	lea    rax,[rcx+r8*1]
  410dfa:	lea    rdx,[rdx+r8*1+0x18]
  410dff:	jmp    0x410e06
  410e01:	cmp    rcx,rax
  410e04:	jae    0x410e20
  410e06:	sub    rdx,0x4
  410e0a:	sub    rax,0x4
  410e0e:	mov    r9d,DWORD PTR [rdx]
  410e11:	cmp    DWORD PTR [rax],r9d
  410e14:	je     0x410e01
  410e16:	sbb    eax,eax
  410e18:	or     eax,0x1
  410e1b:	ret    
  410e1c:	nop    DWORD PTR [rax+0x0]
  410e20:	xor    eax,eax
  410e22:	repz ret 
  410e24:	xchg   ax,ax
  410e26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e30:	push   rdi
  410e31:	push   rsi
  410e32:	push   rbx
  410e33:	sub    rsp,0x20
  410e37:	mov    rsi,rcx
  410e3a:	mov    rdi,rdx
  410e3d:	call   0x410de0
  410e42:	test   eax,eax
  410e44:	je     0x410f30
  410e4a:	mov    ebx,0x0
  410e4f:	js     0x410f52
  410e55:	mov    ecx,DWORD PTR [rsi+0x8]
  410e58:	call   0x4107b0
  410e5d:	test   rax,rax
  410e60:	je     0x410f62
  410e66:	movsxd rdx,DWORD PTR [rsi+0x14]
  410e6a:	lea    rcx,[rsi+0x18]
  410e6e:	mov    DWORD PTR [rax+0x10],ebx
  410e71:	lea    r10,[rdi+0x18]
  410e75:	xor    r9d,r9d
  410e78:	mov    rbx,rdx
  410e7b:	lea    rsi,[rcx+rdx*4]
  410e7f:	movsxd rdx,DWORD PTR [rdi+0x14]
  410e83:	lea    rdi,[r10+rdx*4]
  410e87:	lea    rdx,[rax+0x18]
  410e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  410e90:	add    rcx,0x4
  410e94:	add    r10,0x4
  410e98:	mov    r11d,DWORD PTR [r10-0x4]
  410e9c:	mov    r8d,DWORD PTR [rcx-0x4]
  410ea0:	add    rdx,0x4
  410ea4:	sub    r8,r11
  410ea7:	sub    r8,r9
  410eaa:	mov    r9,r8
  410ead:	mov    r11d,r8d
  410eb0:	mov    DWORD PTR [rdx-0x4],r8d
  410eb4:	shr    r9,0x20
  410eb8:	and    r9d,0x1
  410ebc:	cmp    rdi,r10
  410ebf:	ja     0x410e90
  410ec1:	cmp    rsi,rcx
  410ec4:	mov    rdi,rdx
  410ec7:	mov    r10,rcx
  410eca:	jbe    0x410f06
  410ecc:	nop    DWORD PTR [rax+0x0]
  410ed0:	add    rcx,0x4
  410ed4:	mov    r8d,DWORD PTR [rcx-0x4]
  410ed8:	add    rdx,0x4
  410edc:	sub    r8,r9
  410edf:	mov    r9,r8
  410ee2:	mov    r11d,r8d
  410ee5:	mov    DWORD PTR [rdx-0x4],r8d
  410ee9:	shr    r9,0x20
  410eed:	and    r9d,0x1
  410ef1:	cmp    rsi,rcx
  410ef4:	ja     0x410ed0
  410ef6:	not    r10
  410ef9:	lea    rdx,[r10+rsi*1]
  410efd:	shr    rdx,0x2
  410f01:	lea    rdx,[rdi+rdx*4+0x4]
  410f06:	sub    rdx,0x4
  410f0a:	test   r11d,r11d
  410f0d:	jne    0x410f1d
  410f0f:	nop
  410f10:	sub    rdx,0x4
  410f14:	mov    ecx,DWORD PTR [rdx]
  410f16:	sub    ebx,0x1
  410f19:	test   ecx,ecx
  410f1b:	je     0x410f10
  410f1d:	mov    DWORD PTR [rax+0x14],ebx
  410f20:	add    rsp,0x20
  410f24:	pop    rbx
  410f25:	pop    rsi
  410f26:	pop    rdi
  410f27:	ret    
  410f28:	nop    DWORD PTR [rax+rax*1+0x0]
  410f30:	xor    ecx,ecx
  410f32:	call   0x4107b0
  410f37:	test   rax,rax
  410f3a:	je     0x410f62
  410f3c:	mov    DWORD PTR [rax+0x14],0x1
  410f43:	mov    DWORD PTR [rax+0x18],0x0
  410f4a:	add    rsp,0x20
  410f4e:	pop    rbx
  410f4f:	pop    rsi
  410f50:	pop    rdi
  410f51:	ret    
  410f52:	mov    rax,rsi
  410f55:	mov    bl,0x1
  410f57:	mov    rsi,rdi
  410f5a:	mov    rdi,rax
  410f5d:	jmp    0x410e55
  410f62:	xor    eax,eax
  410f64:	jmp    0x410f20
  410f66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410f70:	push   rsi
  410f71:	push   rbx
  410f72:	sub    rsp,0x18
  410f76:	movsxd rax,DWORD PTR [rcx+0x14]
  410f7a:	lea    r10,[rcx+0x18]
  410f7e:	mov    ecx,0x20
  410f83:	lea    r9,[r10+rax*4]
  410f87:	mov    eax,DWORD PTR [r9-0x4]
  410f8b:	lea    rbx,[r9-0x4]
  410f8f:	bsr    r8d,eax
  410f93:	xor    r8d,0x1f
  410f97:	sub    ecx,r8d
  410f9a:	cmp    r8d,0xa
  410f9e:	mov    DWORD PTR [rdx],ecx
  410fa0:	jg     0x410ff0
  410fa2:	mov    ecx,0xb
  410fa7:	mov    r11d,eax
  410faa:	xor    esi,esi
  410fac:	sub    ecx,r8d
  410faf:	shr    r11d,cl
  410fb2:	or     r11d,0x3ff00000
  410fb9:	shl    r11,0x20
  410fbd:	cmp    r10,rbx
  410fc0:	jae    0x410fc8
  410fc2:	mov    esi,DWORD PTR [r9-0x8]
  410fc6:	shr    esi,cl
  410fc8:	lea    ecx,[r8+0x15]
  410fcc:	shl    eax,cl
  410fce:	mov    edx,eax
  410fd0:	mov    eax,esi
  410fd2:	or     eax,edx
  410fd4:	or     rax,r11
  410fd7:	mov    QWORD PTR [rsp+0x8],rax
  410fdc:	movsd  xmm0,QWORD PTR [rsp+0x8]
  410fe2:	add    rsp,0x18
  410fe6:	pop    rbx
  410fe7:	pop    rsi
  410fe8:	ret    
  410fe9:	nop    DWORD PTR [rax+0x0]
  410ff0:	cmp    r10,rbx
  410ff3:	jae    0x411050
  410ff5:	mov    r11d,r8d
  410ff8:	lea    rsi,[r9-0x8]
  410ffc:	mov    edx,DWORD PTR [r9-0x8]
  411000:	sub    r11d,0xb
  411004:	je     0x411072
  411006:	mov    ebx,0x2b
  41100b:	mov    ecx,r11d
  41100e:	sub    ebx,r8d
  411011:	shl    eax,cl
  411013:	mov    r8d,edx
  411016:	mov    ecx,ebx
  411018:	shr    r8d,cl
  41101b:	or     eax,r8d
  41101e:	xor    r8d,r8d
  411021:	or     eax,0x3ff00000
  411026:	shl    rax,0x20
  41102a:	cmp    r10,rsi
  41102d:	jae    0x411036
  41102f:	mov    r8d,DWORD PTR [r9-0xc]
  411033:	shr    r8d,cl
  411036:	mov    ecx,r11d
  411039:	shl    edx,cl
  41103b:	or     r8d,edx
  41103e:	movabs rdx,0xffffffff00000000
  411048:	and    rax,rdx
  41104b:	or     rax,r8
  41104e:	jmp    0x410fd7
  411050:	mov    r11d,r8d
  411053:	sub    r11d,0xb
  411057:	je     0x411070
  411059:	mov    ecx,r11d
  41105c:	xor    r8d,r8d
  41105f:	xor    edx,edx
  411061:	shl    eax,cl
  411063:	or     eax,0x3ff00000
  411068:	shl    rax,0x20
  41106c:	jmp    0x411036
  41106e:	xchg   ax,ax
  411070:	xor    edx,edx
  411072:	or     eax,0x3ff00000
  411077:	shl    rax,0x20
  41107b:	or     rax,rdx
  41107e:	jmp    0x410fd7
  411083:	nop    DWORD PTR [rax]
  411086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411090:	push   rdi
  411091:	push   rsi
  411092:	push   rbx
  411093:	sub    rsp,0x20
  411097:	mov    ecx,0x1
  41109c:	movq   rbx,xmm0
  4110a1:	mov    rdi,rdx
  4110a4:	mov    rsi,r8
  4110a7:	call   0x4107b0
  4110ac:	test   rax,rax
  4110af:	je     0x411195
  4110b5:	mov    r9,rbx
  4110b8:	shr    r9,0x20
  4110bc:	mov    r10d,r9d
  4110bf:	and    r9d,0x7fffffff
  4110c6:	and    r10d,0xfffff
  4110cd:	shr    r9d,0x14
  4110d1:	mov    edx,r10d
  4110d4:	or     edx,0x100000
  4110da:	test   r9d,r9d
  4110dd:	cmovne r10d,edx
  4110e1:	test   ebx,ebx
  4110e3:	jne    0x411124
  4110e5:	xor    ecx,ecx
  4110e7:	mov    DWORD PTR [rax+0x14],0x1
  4110ee:	mov    edx,0x1
  4110f3:	tzcnt  ecx,r10d
  4110f8:	shr    r10d,cl
  4110fb:	test   r9d,r9d
  4110fe:	lea    r11d,[rcx+0x20]
  411102:	mov    DWORD PTR [rax+0x18],r10d
  411106:	je     0x411163
  411108:	lea    edx,[r11+r9*1-0x433]
  411110:	mov    DWORD PTR [rdi],edx
  411112:	mov    edx,0x35
  411117:	sub    edx,r11d
  41111a:	mov    DWORD PTR [rsi],edx
  41111c:	add    rsp,0x20
  411120:	pop    rbx
  411121:	pop    rsi
  411122:	pop    rdi
  411123:	ret    
  411124:	xor    r11d,r11d
  411127:	tzcnt  r11d,ebx
  41112c:	mov    ecx,r11d
  41112f:	shr    ebx,cl
  411131:	test   r11d,r11d
  411134:	je     0x411190
  411136:	mov    ecx,0x20
  41113b:	mov    edx,r10d
  41113e:	sub    ecx,r11d
  411141:	shl    edx,cl
  411143:	mov    ecx,r11d
  411146:	or     ebx,edx
  411148:	shr    r10d,cl
  41114b:	mov    DWORD PTR [rax+0x18],ebx
  41114e:	cmp    r10d,0x1
  411152:	mov    DWORD PTR [rax+0x1c],r10d
  411156:	sbb    edx,edx
  411158:	add    edx,0x2
  41115b:	test   r9d,r9d
  41115e:	mov    DWORD PTR [rax+0x14],edx
  411161:	jne    0x411108
  411163:	movsxd rcx,edx
  411166:	shl    edx,0x5
  411169:	sub    r11d,0x432
  411170:	bsr    ecx,DWORD PTR [rax+rcx*4+0x14]
  411175:	mov    DWORD PTR [rdi],r11d
  411178:	xor    ecx,0x1f
  41117b:	sub    edx,ecx
  41117d:	mov    DWORD PTR [rsi],edx
  41117f:	add    rsp,0x20
  411183:	pop    rbx
  411184:	pop    rsi
  411185:	pop    rdi
  411186:	ret    
  411187:	nop    WORD PTR [rax+rax*1+0x0]
  411190:	mov    DWORD PTR [rax+0x18],ebx
  411193:	jmp    0x41114e
  411195:	xor    eax,eax
  411197:	jmp    0x41111c
  411199:	nop    DWORD PTR [rax+0x0]
  4111a0:	mov    rax,rcx
  4111a3:	lea    rcx,[rdx+0x1]
  4111a7:	movzx  edx,BYTE PTR [rdx]
  4111aa:	test   dl,dl
  4111ac:	mov    BYTE PTR [rax],dl
  4111ae:	je     0x4111c2
  4111b0:	add    rcx,0x1
  4111b4:	movzx  edx,BYTE PTR [rcx-0x1]
  4111b8:	add    rax,0x1
  4111bc:	test   dl,dl
  4111be:	mov    BYTE PTR [rax],dl
  4111c0:	jne    0x4111b0
  4111c2:	repz ret 
  4111c4:	nop
  4111c5:	nop
  4111c6:	nop
  4111c7:	nop
  4111c8:	nop
  4111c9:	nop
  4111ca:	nop
  4111cb:	nop
  4111cc:	nop
  4111cd:	nop
  4111ce:	nop
  4111cf:	nop
  4111d0:	sub    rsp,0x58
  4111d4:	test   r8d,r8d
  4111d7:	mov    eax,r8d
  4111da:	mov    WORD PTR [rsp+0x68],dx
  4111df:	jne    0x4111f4
  4111e1:	cmp    dx,0xff
  4111e6:	ja     0x41123a
  4111e8:	mov    BYTE PTR [rcx],dl
  4111ea:	mov    eax,0x1
  4111ef:	add    rsp,0x58
  4111f3:	ret    
  4111f4:	lea    rdx,[rsp+0x4c]
  4111f9:	mov    DWORD PTR [rsp+0x28],r9d
  4111fe:	mov    QWORD PTR [rsp+0x20],rcx
  411203:	mov    DWORD PTR [rsp+0x4c],0x0
  41120b:	mov    QWORD PTR [rsp+0x30],0x0
  411214:	mov    r9d,0x1
  41121a:	mov    QWORD PTR [rsp+0x38],rdx
  41121f:	lea    r8,[rsp+0x68]
  411224:	xor    edx,edx
  411226:	mov    ecx,eax
  411228:	call   QWORD PTR [rip+0xd372]        # 0x41e5a0
  41122e:	test   eax,eax
  411230:	je     0x41123a
  411232:	mov    edx,DWORD PTR [rsp+0x4c]
  411236:	test   edx,edx
  411238:	je     0x4111ef
  41123a:	call   0x411588
  41123f:	mov    DWORD PTR [rax],0x2a
  411245:	mov    eax,0xffffffff
  41124a:	add    rsp,0x58
  41124e:	ret    
  41124f:	nop
  411250:	push   rdi
  411251:	push   rsi
  411252:	push   rbx
  411253:	sub    rsp,0x30
  411257:	lea    rax,[rsp+0x20]
  41125c:	test   rcx,rcx
  41125f:	mov    rbx,rcx
  411262:	mov    esi,edx
  411264:	cmove  rbx,rax
  411268:	mov    rax,QWORD PTR [rip+0x7191]        # 0x418400
  41126f:	mov    rax,QWORD PTR [rax]
  411272:	mov    edi,DWORD PTR [rax]
  411274:	call   0x4115d0
  411279:	movzx  edx,si
  41127c:	mov    r8d,eax
  41127f:	mov    rcx,rbx
  411282:	mov    r9d,edi
  411285:	call   0x4111d0
  41128a:	cdqe   
  41128c:	add    rsp,0x30
  411290:	pop    rbx
  411291:	pop    rsi
  411292:	pop    rdi
  411293:	ret    
  411294:	xchg   ax,ax
  411296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112a0:	push   r14
  4112a2:	push   r13
  4112a4:	push   r12
  4112a6:	push   rbp
  4112a7:	push   rdi
  4112a8:	push   rsi
  4112a9:	push   rbx
  4112aa:	sub    rsp,0x30
  4112ae:	mov    r13,rdx
  4112b1:	mov    rbx,rcx
  4112b4:	mov    rdi,r8
  4112b7:	call   0x4115d0
  4112bc:	mov    ebp,eax
  4112be:	mov    rax,QWORD PTR [rip+0x713b]        # 0x418400
  4112c5:	mov    r14,QWORD PTR [r13+0x0]
  4112c9:	mov    rax,QWORD PTR [rax]
  4112cc:	test   r14,r14
  4112cf:	mov    r12d,DWORD PTR [rax]
  4112d2:	je     0x4113c0
  4112d8:	xor    esi,esi
  4112da:	test   rbx,rbx
  4112dd:	je     0x411370
  4112e3:	test   rdi,rdi
  4112e6:	jne    0x411308
  4112e8:	jmp    0x411334
  4112ea:	nop    WORD PTR [rax+rax*1+0x0]
  4112f0:	movsxd r10,eax
  4112f3:	add    rbx,r10
  4112f6:	add    rsi,r10
  4112f9:	cmp    BYTE PTR [rbx-0x1],0x0
  4112fd:	je     0x411350
  4112ff:	add    r14,0x2
  411303:	cmp    rdi,rsi
  411306:	jbe    0x411334
  411308:	movzx  edx,WORD PTR [r14]
  41130c:	mov    r9d,r12d
  41130f:	mov    r8d,ebp
  411312:	mov    rcx,rbx
  411315:	call   0x4111d0
  41131a:	test   eax,eax
  41131c:	jg     0x4112f0
  41131e:	mov    rax,0xffffffffffffffff
  411325:	add    rsp,0x30
  411329:	pop    rbx
  41132a:	pop    rsi
  41132b:	pop    rdi
  41132c:	pop    rbp
  41132d:	pop    r12
  41132f:	pop    r13
  411331:	pop    r14
  411333:	ret    
  411334:	mov    rax,rsi
  411337:	mov    QWORD PTR [r13+0x0],r14
  41133b:	add    rsp,0x30
  41133f:	pop    rbx
  411340:	pop    rsi
  411341:	pop    rdi
  411342:	pop    rbp
  411343:	pop    r12
  411345:	pop    r13
  411347:	pop    r14
  411349:	ret    
  41134a:	nop    WORD PTR [rax+rax*1+0x0]
  411350:	lea    rax,[rsi-0x1]
  411354:	mov    QWORD PTR [r13+0x0],0x0
  41135c:	add    rsp,0x30
  411360:	pop    rbx
  411361:	pop    rsi
  411362:	pop    rdi
  411363:	pop    rbp
  411364:	pop    r12
  411366:	pop    r13
  411368:	pop    r14
  41136a:	ret    
  41136b:	nop    DWORD PTR [rax+rax*1+0x0]
  411370:	test   rdi,rdi
  411373:	lea    rbx,[rsp+0x20]
  411378:	jne    0x41139b
  41137a:	jmp    0x4113d1
  41137c:	nop    DWORD PTR [rax+0x0]
  411380:	movsxd rdx,eax
  411383:	sub    eax,0x1
  411386:	cdqe   
  411388:	add    rsi,rdx
  41138b:	cmp    BYTE PTR [rsp+rax*1+0x20],0x0
  411390:	je     0x4113d9
  411392:	add    r14,0x2
  411396:	cmp    rdi,rsi
  411399:	jbe    0x4113d1
  41139b:	movzx  edx,WORD PTR [r14]
  41139f:	mov    r9d,r12d
  4113a2:	mov    r8d,ebp
  4113a5:	mov    rcx,rbx
  4113a8:	call   0x4111d0
  4113ad:	test   eax,eax
  4113af:	jg     0x411380
  4113b1:	jmp    0x41131e
  4113b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4113c0:	xor    eax,eax
  4113c2:	add    rsp,0x30
  4113c6:	pop    rbx
  4113c7:	pop    rsi
  4113c8:	pop    rdi
  4113c9:	pop    rbp
  4113ca:	pop    r12
  4113cc:	pop    r13
  4113ce:	pop    r14
  4113d0:	ret    
  4113d1:	mov    rax,rsi
  4113d4:	jmp    0x411325
  4113d9:	lea    rax,[rsi-0x1]
  4113dd:	jmp    0x411325
  4113e2:	nop
  4113e3:	nop
  4113e4:	nop
  4113e5:	nop
  4113e6:	nop
  4113e7:	nop
  4113e8:	nop
  4113e9:	nop
  4113ea:	nop
  4113eb:	nop
  4113ec:	nop
  4113ed:	nop
  4113ee:	nop
  4113ef:	nop
  4113f0:	jmp    QWORD PTR [rip+0xd3c2]        # 0x41e7b8
  4113f6:	nop
  4113f7:	nop
  4113f8:	jmp    QWORD PTR [rip+0xd3b2]        # 0x41e7b0
  4113fe:	nop
  4113ff:	nop
  411400:	jmp    QWORD PTR [rip+0xd3a2]        # 0x41e7a8
  411406:	nop
  411407:	nop
  411408:	jmp    QWORD PTR [rip+0xd392]        # 0x41e7a0
  41140e:	nop
  41140f:	nop
  411410:	jmp    QWORD PTR [rip+0xd382]        # 0x41e798
  411416:	nop
  411417:	nop
  411418:	jmp    QWORD PTR [rip+0xd372]        # 0x41e790
  41141e:	nop
  41141f:	nop
  411420:	jmp    QWORD PTR [rip+0xd362]        # 0x41e788
  411426:	nop
  411427:	nop
  411428:	jmp    QWORD PTR [rip+0xd352]        # 0x41e780
  41142e:	nop
  41142f:	nop
  411430:	jmp    QWORD PTR [rip+0xd342]        # 0x41e778
  411436:	nop
  411437:	nop
  411438:	jmp    QWORD PTR [rip+0xd332]        # 0x41e770
  41143e:	nop
  41143f:	nop
  411440:	jmp    QWORD PTR [rip+0xd322]        # 0x41e768
  411446:	nop
  411447:	nop
  411448:	jmp    QWORD PTR [rip+0xd312]        # 0x41e760
  41144e:	nop
  41144f:	nop
  411450:	jmp    QWORD PTR [rip+0xd302]        # 0x41e758
  411456:	nop
  411457:	nop
  411458:	jmp    QWORD PTR [rip+0xd2f2]        # 0x41e750
  41145e:	nop
  41145f:	nop
  411460:	jmp    QWORD PTR [rip+0xd2e2]        # 0x41e748
  411466:	nop
  411467:	nop
  411468:	jmp    QWORD PTR [rip+0xd2d2]        # 0x41e740
  41146e:	nop
  41146f:	nop
  411470:	jmp    QWORD PTR [rip+0xd2c2]        # 0x41e738
  411476:	nop
  411477:	nop
  411478:	jmp    QWORD PTR [rip+0xd2b2]        # 0x41e730
  41147e:	nop
  41147f:	nop
  411480:	jmp    QWORD PTR [rip+0xd2a2]        # 0x41e728
  411486:	nop
  411487:	nop
  411488:	jmp    QWORD PTR [rip+0xd292]        # 0x41e720
  41148e:	nop
  41148f:	nop
  411490:	jmp    QWORD PTR [rip+0xd282]        # 0x41e718
  411496:	nop
  411497:	nop
  411498:	jmp    QWORD PTR [rip+0xd272]        # 0x41e710
  41149e:	nop
  41149f:	nop
  4114a0:	jmp    QWORD PTR [rip+0xd262]        # 0x41e708
  4114a6:	nop
  4114a7:	nop
  4114a8:	jmp    QWORD PTR [rip+0xd252]        # 0x41e700
  4114ae:	nop
  4114af:	nop
  4114b0:	jmp    QWORD PTR [rip+0xd242]        # 0x41e6f8
  4114b6:	nop
  4114b7:	nop
  4114b8:	jmp    QWORD PTR [rip+0xd232]        # 0x41e6f0
  4114be:	nop
  4114bf:	nop
  4114c0:	jmp    QWORD PTR [rip+0xd222]        # 0x41e6e8
  4114c6:	nop
  4114c7:	nop
  4114c8:	jmp    QWORD PTR [rip+0xd212]        # 0x41e6e0
  4114ce:	nop
  4114cf:	nop
  4114d0:	jmp    QWORD PTR [rip+0xd202]        # 0x41e6d8
  4114d6:	nop
  4114d7:	nop
  4114d8:	jmp    QWORD PTR [rip+0xd1f2]        # 0x41e6d0
  4114de:	nop
  4114df:	nop
  4114e0:	jmp    QWORD PTR [rip+0xd1e2]        # 0x41e6c8
  4114e6:	nop
  4114e7:	nop
  4114e8:	jmp    QWORD PTR [rip+0xd1d2]        # 0x41e6c0
  4114ee:	nop
  4114ef:	nop
  4114f0:	jmp    QWORD PTR [rip+0xd1c2]        # 0x41e6b8
  4114f6:	nop
  4114f7:	nop
  4114f8:	jmp    QWORD PTR [rip+0xd1b2]        # 0x41e6b0
  4114fe:	nop
  4114ff:	nop
  411500:	jmp    QWORD PTR [rip+0xd1a2]        # 0x41e6a8
  411506:	nop
  411507:	nop
  411508:	jmp    QWORD PTR [rip+0xd192]        # 0x41e6a0
  41150e:	nop
  41150f:	nop
  411510:	jmp    QWORD PTR [rip+0xd182]        # 0x41e698
  411516:	nop
  411517:	nop
  411518:	jmp    QWORD PTR [rip+0xd172]        # 0x41e690
  41151e:	nop
  41151f:	nop
  411520:	jmp    QWORD PTR [rip+0xd162]        # 0x41e688
  411526:	nop
  411527:	nop
  411528:	jmp    QWORD PTR [rip+0xd152]        # 0x41e680
  41152e:	nop
  41152f:	nop
  411530:	jmp    QWORD PTR [rip+0xd142]        # 0x41e678
  411536:	nop
  411537:	nop
  411538:	jmp    QWORD PTR [rip+0xd132]        # 0x41e670
  41153e:	nop
  41153f:	nop
  411540:	jmp    QWORD PTR [rip+0xd122]        # 0x41e668
  411546:	nop
  411547:	nop
  411548:	jmp    QWORD PTR [rip+0xd112]        # 0x41e660
  41154e:	nop
  41154f:	nop
  411550:	jmp    QWORD PTR [rip+0xd102]        # 0x41e658
  411556:	nop
  411557:	nop
  411558:	jmp    QWORD PTR [rip+0xd0f2]        # 0x41e650
  41155e:	nop
  41155f:	nop
  411560:	jmp    QWORD PTR [rip+0xd0e2]        # 0x41e648
  411566:	nop
  411567:	nop
  411568:	jmp    QWORD PTR [rip+0xd0d2]        # 0x41e640
  41156e:	nop
  41156f:	nop
  411570:	jmp    QWORD PTR [rip+0xd0c2]        # 0x41e638
  411576:	nop
  411577:	nop
  411578:	jmp    QWORD PTR [rip+0xd0b2]        # 0x41e630
  41157e:	nop
  41157f:	nop
  411580:	jmp    QWORD PTR [rip+0xd09a]        # 0x41e620
  411586:	nop
  411587:	nop
  411588:	jmp    QWORD PTR [rip+0xd08a]        # 0x41e618
  41158e:	nop
  41158f:	nop
  411590:	jmp    QWORD PTR [rip+0xd07a]        # 0x41e610
  411596:	nop
  411597:	nop
  411598:	jmp    QWORD PTR [rip+0xd06a]        # 0x41e608
  41159e:	nop
  41159f:	nop
  4115a0:	jmp    QWORD PTR [rip+0xd052]        # 0x41e5f8
  4115a6:	nop
  4115a7:	nop
  4115a8:	jmp    QWORD PTR [rip+0xd042]        # 0x41e5f0
  4115ae:	nop
  4115af:	nop
  4115b0:	jmp    QWORD PTR [rip+0xd02a]        # 0x41e5e0
  4115b6:	nop
  4115b7:	nop
  4115b8:	jmp    QWORD PTR [rip+0xd01a]        # 0x41e5d8
  4115be:	nop
  4115bf:	nop
  4115c0:	jmp    QWORD PTR [rip+0xd002]        # 0x41e5c8
  4115c6:	nop
  4115c7:	nop
  4115c8:	jmp    QWORD PTR [rip+0xcff2]        # 0x41e5c0
  4115ce:	nop
  4115cf:	nop
  4115d0:	jmp    QWORD PTR [rip+0xcfe2]        # 0x41e5b8
  4115d6:	nop
  4115d7:	nop
  4115d8:	jmp    QWORD PTR [rip+0xcfd2]        # 0x41e5b0
  4115de:	nop
  4115df:	nop
  4115e0:	mov    rax,QWORD PTR [rip+0xc0d9]        # 0x41d6c0
  4115e7:	ret    
  4115e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4115f0:	mov    rax,rcx
  4115f3:	xchg   QWORD PTR [rip+0xc0c6],rax        # 0x41d6c0
  4115fa:	ret    
  4115fb:	nop
  4115fc:	nop
  4115fd:	nop
  4115fe:	nop
  4115ff:	nop
  411600:	mov    eax,DWORD PTR [rip+0xc0ca]        # 0x41d6d0
  411606:	ret    
  411607:	nop    WORD PTR [rax+rax*1+0x0]
  411610:	mov    eax,ecx
  411612:	xchg   DWORD PTR [rip+0xc0b8],eax        # 0x41d6d0
  411618:	ret    
  411619:	nop    DWORD PTR [rax+0x0]
  411620:	push   rbx
  411621:	sub    rsp,0x20
  411625:	mov    ebx,ecx
  411627:	lea    rcx,[rip+0x6d12]        # 0x418340
  41162e:	call   QWORD PTR [rip+0xcea4]        # 0x41e4d8
  411634:	lea    rdx,[rip+0x6d1b]        # 0x418356
  41163b:	mov    rcx,rax
  41163e:	call   QWORD PTR [rip+0xce9c]        # 0x41e4e0
  411644:	lea    rdx,[rip+0xffffffffffffffc5]        # 0x411610
  41164b:	test   rax,rax
  41164e:	mov    ecx,ebx
  411650:	cmove  rax,rdx
  411654:	mov    QWORD PTR [rip+0xafd],rax        # 0x412158
  41165b:	add    rsp,0x20
  41165f:	pop    rbx
  411660:	rex.W jmp rax
  411663:	nop    DWORD PTR [rax]
  411666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411670:	sub    rsp,0x28
  411674:	lea    rcx,[rip+0x6cc5]        # 0x418340
  41167b:	call   QWORD PTR [rip+0xce57]        # 0x41e4d8
  411681:	lea    rdx,[rip+0x6ce1]        # 0x418369
  411688:	mov    rcx,rax
  41168b:	call   QWORD PTR [rip+0xce4f]        # 0x41e4e0
  411691:	lea    rdx,[rip+0xffffffffffffff68]        # 0x411600
  411698:	test   rax,rax
  41169b:	cmove  rax,rdx
  41169f:	mov    QWORD PTR [rip+0xaaa],rax        # 0x412150
  4116a6:	add    rsp,0x28
  4116aa:	rex.W jmp rax
  4116ad:	nop    DWORD PTR [rax]
  4116b0:	mov    rax,QWORD PTR [rip+0xaa1]        # 0x412158
  4116b7:	rex.W jmp rax
  4116ba:	nop    WORD PTR [rax+rax*1+0x0]
  4116c0:	mov    rax,QWORD PTR [rip+0xa89]        # 0x412150
  4116c7:	rex.W jmp rax
  4116ca:	nop
  4116cb:	nop
  4116cc:	nop
  4116cd:	nop
  4116ce:	nop
  4116cf:	nop
  4116d0:	jmp    QWORD PTR [rip+0xd0f2]        # 0x41e7c8
  4116d6:	nop
  4116d7:	nop
  4116d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4116e0:	jmp    QWORD PTR [rip+0xceba]        # 0x41e5a0
  4116e6:	nop
  4116e7:	nop
  4116e8:	jmp    QWORD PTR [rip+0xceaa]        # 0x41e598
  4116ee:	nop
  4116ef:	nop
  4116f0:	jmp    QWORD PTR [rip+0xce9a]        # 0x41e590
  4116f6:	nop
  4116f7:	nop
  4116f8:	jmp    QWORD PTR [rip+0xce8a]        # 0x41e588
  4116fe:	nop
  4116ff:	nop
  411700:	jmp    QWORD PTR [rip+0xce7a]        # 0x41e580
  411706:	nop
  411707:	nop
  411708:	jmp    QWORD PTR [rip+0xce6a]        # 0x41e578
  41170e:	nop
  41170f:	nop
  411710:	jmp    QWORD PTR [rip+0xce5a]        # 0x41e570
  411716:	nop
  411717:	nop
  411718:	jmp    QWORD PTR [rip+0xce4a]        # 0x41e568
  41171e:	nop
  41171f:	nop
  411720:	jmp    QWORD PTR [rip+0xce3a]        # 0x41e560
  411726:	nop
  411727:	nop
  411728:	jmp    QWORD PTR [rip+0xce2a]        # 0x41e558
  41172e:	nop
  41172f:	nop
  411730:	jmp    QWORD PTR [rip+0xce1a]        # 0x41e550
  411736:	nop
  411737:	nop
  411738:	jmp    QWORD PTR [rip+0xce0a]        # 0x41e548
  41173e:	nop
  41173f:	nop
  411740:	jmp    QWORD PTR [rip+0xcdfa]        # 0x41e540
  411746:	nop
  411747:	nop
  411748:	jmp    QWORD PTR [rip+0xcdea]        # 0x41e538
  41174e:	nop
  41174f:	nop
  411750:	jmp    QWORD PTR [rip+0xcdda]        # 0x41e530
  411756:	nop
  411757:	nop
  411758:	jmp    QWORD PTR [rip+0xcdca]        # 0x41e528
  41175e:	nop
  41175f:	nop
  411760:	jmp    QWORD PTR [rip+0xcdba]        # 0x41e520
  411766:	nop
  411767:	nop
  411768:	jmp    QWORD PTR [rip+0xcdaa]        # 0x41e518
  41176e:	nop
  41176f:	nop
  411770:	jmp    QWORD PTR [rip+0xcd9a]        # 0x41e510
  411776:	nop
  411777:	nop
  411778:	jmp    QWORD PTR [rip+0xcd8a]        # 0x41e508
  41177e:	nop
  41177f:	nop
  411780:	jmp    QWORD PTR [rip+0xcd7a]        # 0x41e500
  411786:	nop
  411787:	nop
  411788:	jmp    QWORD PTR [rip+0xcd6a]        # 0x41e4f8
  41178e:	nop
  41178f:	nop
  411790:	jmp    QWORD PTR [rip+0xcd5a]        # 0x41e4f0
  411796:	nop
  411797:	nop
  411798:	jmp    QWORD PTR [rip+0xcd4a]        # 0x41e4e8
  41179e:	nop
  41179f:	nop
  4117a0:	jmp    QWORD PTR [rip+0xcd3a]        # 0x41e4e0
  4117a6:	nop
  4117a7:	nop
  4117a8:	jmp    QWORD PTR [rip+0xcd2a]        # 0x41e4d8
  4117ae:	nop
  4117af:	nop
  4117b0:	jmp    QWORD PTR [rip+0xcd1a]        # 0x41e4d0
  4117b6:	nop
  4117b7:	nop
  4117b8:	jmp    QWORD PTR [rip+0xcd0a]        # 0x41e4c8
  4117be:	nop
  4117bf:	nop
  4117c0:	jmp    QWORD PTR [rip+0xccfa]        # 0x41e4c0
  4117c6:	nop
  4117c7:	nop
  4117c8:	jmp    QWORD PTR [rip+0xccea]        # 0x41e4b8
  4117ce:	nop
  4117cf:	nop
  4117d0:	jmp    QWORD PTR [rip+0xccda]        # 0x41e4b0
  4117d6:	nop
  4117d7:	nop
  4117d8:	jmp    QWORD PTR [rip+0xccca]        # 0x41e4a8
  4117de:	nop
  4117df:	nop
  4117e0:	jmp    QWORD PTR [rip+0xccba]        # 0x41e4a0
  4117e6:	nop
  4117e7:	nop
  4117e8:	jmp    QWORD PTR [rip+0xccaa]        # 0x41e498
  4117ee:	nop
  4117ef:	nop
  4117f0:	jmp    QWORD PTR [rip+0xcc9a]        # 0x41e490
  4117f6:	nop
  4117f7:	nop
  4117f8:	jmp    QWORD PTR [rip+0xcc8a]        # 0x41e488
  4117fe:	nop
  4117ff:	nop
  411800:	jmp    QWORD PTR [rip+0xcc7a]        # 0x41e480
  411806:	nop
  411807:	nop
  411808:	jmp    QWORD PTR [rip+0xcc6a]        # 0x41e478
  41180e:	nop
  41180f:	nop
  411810:	jmp    QWORD PTR [rip+0xcc5a]        # 0x41e470
  411816:	nop
  411817:	nop
  411818:	nop    DWORD PTR [rax+rax*1+0x0]
  411820:	push   r15
  411822:	push   r14
  411824:	push   r13
  411826:	push   r12
  411828:	push   rbp
  411829:	push   rdi
  41182a:	push   rsi
  41182b:	push   rbx
  41182c:	sub    rsp,0x38
  411830:	xor    edi,edi
  411832:	xor    ebp,ebp
  411834:	xor    r12d,r12d
  411837:	mov    rbx,rdx
  41183a:	mov    esi,ecx
  41183c:	call   0x40b230
  411841:	mov    rcx,QWORD PTR [rbx]
  411844:	call   0x401a00
  411849:	lea    rdx,[rip+0x17d8]        # 0x413028
  411850:	xor    ecx,ecx
  411852:	call   0x404c80
  411857:	lea    rdx,[rip+0x17d2]        # 0x413030
  41185e:	lea    rcx,[rip+0x1814]        # 0x413079
  411865:	call   0x40b098
  41186a:	lea    rcx,[rip+0x1808]        # 0x413079
  411871:	call   0x40b080
  411876:	lea    rcx,[rip+0xfffffffffffeffc3]        # 0x401840
  41187d:	call   0x40b170
  411882:	lea    r9,[rip+0x1d77]        # 0x413600
  411889:	lea    r8,[rip+0x1827]        # 0x4130b7
  411890:	mov    QWORD PTR [rsp+0x20],0x0
  411899:	mov    rdx,rbx
  41189c:	mov    ecx,esi
  41189e:	call   0x4044c0
  4118a3:	cmp    eax,0xffffffff
  4118a6:	je     0x41191a
  4118a8:	cmp    eax,0x56
  4118ab:	je     0x411900
  4118ad:	jle    0x4118c1
  4118af:	cmp    eax,0x68
  4118b2:	je     0x411910
  4118b4:	cmp    eax,0x76
  4118b7:	jne    0x4118c5
  4118b9:	mov    r12d,0x1
  4118bf:	jmp    0x411882
  4118c1:	test   eax,eax
  4118c3:	je     0x411882
  4118c5:	mov    rax,QWORD PTR [rip+0x6cd4]        # 0x4185a0
  4118cc:	lea    rcx,[rip+0x17bd]        # 0x413090
  4118d3:	mov    rsi,QWORD PTR [rax]
  4118d6:	call   0x40b090
  4118db:	mov    rbx,rax
  4118de:	call   QWORD PTR [rip+0xccf4]        # 0x41e5d8
  4118e4:	lea    rcx,[rax+0x60]
  4118e8:	mov    r8,rsi
  4118eb:	mov    rdx,rbx
  4118ee:	call   0x4050e0
  4118f3:	mov    ecx,0x1
  4118f8:	call   0x411538
  4118fd:	nop    DWORD PTR [rax]
  411900:	mov    edi,0x1
  411905:	jmp    0x411882
  41190a:	nop    WORD PTR [rax+rax*1+0x0]
  411910:	mov    ebp,0x1
  411915:	jmp    0x411882
  41191a:	test   dil,dil
  41191d:	jne    0x4119fd
  411923:	test   bpl,bpl
  411926:	jne    0x411c0b
  41192c:	mov    rdi,QWORD PTR [rip+0x6c7d]        # 0x4185b0
  411933:	mov    eax,esi
  411935:	sub    eax,DWORD PTR [rdi]
  411937:	sub    eax,0x1
  41193a:	jle    0x411957
  41193c:	lea    rcx,[rip+0x1c78]        # 0x4135bb
  411943:	call   0x40b090
  411948:	xor    edx,edx
  41194a:	mov    r8,rax
  41194d:	mov    ecx,0x1
  411952:	call   0x403240
  411957:	test   r12b,r12b
  41195a:	movsxd rax,DWORD PTR [rdi]
  41195d:	jne    0x411a71
  411963:	sub    esi,eax
  411965:	je     0x411da9
  41196b:	sub    esi,0x1
  41196e:	jne    0x411c06
  411974:	lea    edx,[rax+0x1]
  411977:	mov    rcx,QWORD PTR [rbx+rax*8]
  41197b:	mov    BYTE PTR [rip+0x96e6],0x0        # 0x41b068
  411982:	mov    QWORD PTR [rip+0x96c3],0x0        # 0x41b050
  41198d:	mov    QWORD PTR [rip+0x96c0],0x0        # 0x41b058
  411998:	mov    DWORD PTR [rdi],edx
  41199a:	lea    rdx,[rip+0xfffffffffffefd2f]        # 0x4016d0
  4119a1:	mov    QWORD PTR [rip+0x96b4],0x0        # 0x41b060
  4119ac:	call   0x401530
  4119b1:	mov    rdx,QWORD PTR [rip+0x96a0]        # 0x41b058
  4119b8:	mov    rcx,QWORD PTR [rip+0x9691]        # 0x41b050
  4119bf:	test   rdx,rdx
  4119c2:	je     0x4119d6
  4119c4:	lea    r9,[rip+0xfffffffffffefc55]        # 0x401620
  4119cb:	mov    r8d,0x8
  4119d1:	call   0x411488
  4119d6:	mov    rbp,QWORD PTR [rip+0xcbfb]        # 0x41e5d8
  4119dd:	call   0x401630
  4119e2:	cmp    eax,0xffffffff
  4119e5:	je     0x411a97
  4119eb:	cmp    eax,0x24
  4119ee:	je     0x411a9e
  4119f4:	mov    ecx,eax
  4119f6:	call   0x4051f0
  4119fb:	jmp    0x4119dd
  4119fd:	mov    rax,QWORD PTR [rip+0x6b9c]        # 0x4185a0
  411a04:	mov    rcx,QWORD PTR [rax]
  411a07:	call   0x401760
  411a0c:	lea    r9,[rip+0x16a8]        # 0x4130bb
  411a13:	lea    r8,[rip+0x165f]        # 0x413079
  411a1a:	lea    rcx,[rip+0x16a3]        # 0x4130c4
  411a21:	mov    rdx,rax
  411a24:	call   0x4050a0
  411a29:	lea    rcx,[rip+0x16a8]        # 0x4130d8
  411a30:	call   0x40b090
  411a35:	lea    rdx,[rip+0x1794]        # 0x4131d0
  411a3c:	mov    rcx,rax
  411a3f:	call   0x4050a0
  411a44:	lea    rcx,[rip+0x178f]        # 0x4131da
  411a4b:	call   0x402520
  411a50:	lea    rcx,[rip+0x1790]        # 0x4131e7
  411a57:	mov    rbx,rax
  411a5a:	call   0x40b090
  411a5f:	mov    rdx,rbx
  411a62:	mov    rcx,rax
  411a65:	call   0x4050a0
  411a6a:	xor    ecx,ecx
  411a6c:	call   0x411538
  411a71:	sub    esi,eax
  411a73:	je     0x411beb
  411a79:	sub    esi,0x1
  411a7c:	jne    0x411c06
  411a82:	lea    edx,[rax+0x1]
  411a85:	mov    rcx,QWORD PTR [rbx+rax*8]
  411a89:	mov    DWORD PTR [rdi],edx
  411a8b:	lea    rdx,[rip+0xfffffffffffefb4e]        # 0x4015e0
  411a92:	call   0x401530
  411a97:	xor    ecx,ecx
  411a99:	call   0x411538
  411a9e:	call   0x401630
  411aa3:	xor    esi,esi
  411aa5:	cmp    eax,0x7b
  411aa8:	mov    ebx,eax
  411aaa:	je     0x411db5
  411ab0:	mov    eax,ebx
  411ab2:	and    eax,0xffffffdf
  411ab5:	sub    eax,0x41
  411ab8:	cmp    eax,0x19
  411abb:	jbe    0x411af0
  411abd:	cmp    ebx,0x5f
  411ac0:	je     0x411af0
  411ac2:	cmp    ebx,0xffffffff
  411ac5:	je     0x411ace
  411ac7:	mov    ecx,ebx
  411ac9:	call   0x4016b0
  411ace:	mov    ecx,0x24
  411ad3:	call   0x4051f0
  411ad8:	test   sil,sil
  411adb:	je     0x4119dd
  411ae1:	mov    ecx,0x7b
  411ae6:	call   0x4051f0
  411aeb:	jmp    0x4119dd
  411af0:	mov    QWORD PTR [rip+0x9545],0x0        # 0x41b040
  411afb:	nop    DWORD PTR [rax+rax*1+0x0]
  411b00:	mov    rdx,QWORD PTR [rip+0x9539]        # 0x41b040
  411b07:	mov    rax,QWORD PTR [rip+0x952a]        # 0x41b038
  411b0e:	cmp    rdx,rax
  411b11:	jae    0x411bc0
  411b17:	mov    rax,QWORD PTR [rip+0x9512]        # 0x41b030
  411b1e:	lea    rcx,[rdx+0x1]
  411b22:	mov    BYTE PTR [rax+rdx*1],bl
  411b25:	mov    QWORD PTR [rip+0x9514],rcx        # 0x41b040
  411b2c:	call   0x401630
  411b31:	mov    edx,eax
  411b33:	mov    ebx,eax
  411b35:	and    edx,0xffffffdf
  411b38:	sub    edx,0x41
  411b3b:	cmp    edx,0x19
  411b3e:	jbe    0x411b00
  411b40:	lea    eax,[rax-0x30]
  411b43:	cmp    eax,0x9
  411b46:	jbe    0x411b00
  411b48:	cmp    ebx,0x5f
  411b4b:	je     0x411b00
  411b4d:	test   sil,sil
  411b50:	je     0x411d3c
  411b56:	cmp    ebx,0x7d
  411b59:	je     0x411e47
  411b5f:	cmp    ebx,0xffffffff
  411b62:	je     0x411b6b
  411b64:	mov    ecx,ebx
  411b66:	call   0x4016b0
  411b6b:	mov    ecx,0x24
  411b70:	xor    r13d,r13d
  411b73:	call   0x4051f0
  411b78:	mov    ecx,0x7b
  411b7d:	call   0x4051f0
  411b82:	call   rbp
  411b84:	mov    rdx,QWORD PTR [rip+0x94b5]        # 0x41b040
  411b8b:	mov    rcx,QWORD PTR [rip+0x949e]        # 0x41b030
  411b92:	lea    r9,[rax+0x30]
  411b96:	mov    r8d,0x1
  411b9c:	call   0x405370
  411ba1:	test   r13b,r13b
  411ba4:	je     0x4119dd
  411baa:	mov    ecx,0x7d
  411baf:	call   0x4051f0
  411bb4:	jmp    0x4119dd
  411bb9:	nop    DWORD PTR [rax+0x0]
  411bc0:	mov    rcx,QWORD PTR [rip+0x9469]        # 0x41b030
  411bc7:	lea    rdx,[rax+rax*1+0xa]
  411bcc:	mov    QWORD PTR [rip+0x9465],rdx        # 0x41b038
  411bd3:	call   0x403030
  411bd8:	mov    rdx,QWORD PTR [rip+0x9461]        # 0x41b040
  411bdf:	mov    QWORD PTR [rip+0x944a],rax        # 0x41b030
  411be6:	jmp    0x411b1e
  411beb:	lea    rcx,[rip+0x19dc]        # 0x4135ce
  411bf2:	call   0x40b090
  411bf7:	xor    edx,edx
  411bf9:	mov    r8,rax
  411bfc:	mov    ecx,0x1
  411c01:	call   0x403240
  411c06:	call   0x411548
  411c0b:	mov    rax,QWORD PTR [rip+0x698e]        # 0x4185a0
  411c12:	lea    rcx,[rip+0x15df]        # 0x4131f8
  411c19:	mov    rbx,QWORD PTR [rax]
  411c1c:	call   0x40b090
  411c21:	mov    rcx,rax
  411c24:	mov    rdx,rbx
  411c27:	call   0x4050a0
  411c2c:	lea    rcx,[rip+0x15e8]        # 0x41321b
  411c33:	call   0x4050a0
  411c38:	lea    rcx,[rip+0x15e1]        # 0x413220
  411c3f:	call   0x40b090
  411c44:	mov    rcx,rax
  411c47:	call   0x4050a0
  411c4c:	lea    rcx,[rip+0x15c8]        # 0x41321b
  411c53:	call   0x4050a0
  411c58:	lea    rcx,[rip+0x15f3]        # 0x413252
  411c5f:	call   0x40b090
  411c64:	mov    rcx,rax
  411c67:	call   0x4050a0
  411c6c:	lea    rcx,[rip+0x15f5]        # 0x413268
  411c73:	call   0x40b090
  411c78:	mov    rcx,rax
  411c7b:	call   0x4050a0
  411c80:	lea    rcx,[rip+0x1594]        # 0x41321b
  411c87:	call   0x4050a0
  411c8c:	lea    rcx,[rip+0x1623]        # 0x4132b6
  411c93:	call   0x40b090
  411c98:	mov    rcx,rax
  411c9b:	call   0x4050a0
  411ca0:	lea    rcx,[rip+0x1629]        # 0x4132d0
  411ca7:	call   0x40b090
  411cac:	mov    rcx,rax
  411caf:	call   0x4050a0
  411cb4:	lea    rcx,[rip+0x1655]        # 0x413310
  411cbb:	call   0x40b090
  411cc0:	mov    rcx,rax
  411cc3:	call   0x4050a0
  411cc8:	lea    rcx,[rip+0x154c]        # 0x41321b
  411ccf:	call   0x4050a0
  411cd4:	lea    rcx,[rip+0x167d]        # 0x413358
  411cdb:	call   0x40b090
  411ce0:	mov    rcx,rax
  411ce3:	call   0x4050a0
  411ce8:	lea    rcx,[rip+0x152c]        # 0x41321b
  411cef:	call   0x4050a0
  411cf4:	lea    rcx,[rip+0x17f5]        # 0x4134f0
  411cfb:	call   0x40b090
  411d00:	mov    rcx,rax
  411d03:	call   0x4050a0
  411d08:	lea    rcx,[rip+0x150c]        # 0x41321b
  411d0f:	call   0x4050a0
  411d14:	call   QWORD PTR [rip+0xc8be]        # 0x41e5d8
  411d1a:	lea    rcx,[rip+0x186f]        # 0x413590
  411d21:	mov    rbx,rax
  411d24:	call   0x40b090
  411d29:	lea    rdx,[rbx+0x30]
  411d2d:	mov    rcx,rax
  411d30:	call   0x405210
  411d35:	xor    ecx,ecx
  411d37:	call   0x411538
  411d3c:	xor    r13d,r13d
  411d3f:	cmp    ebx,0xffffffff
  411d42:	je     0x411d4e
  411d44:	mov    ecx,ebx
  411d46:	mov    r13d,esi
  411d49:	call   0x4016b0
  411d4e:	mov    rax,QWORD PTR [rip+0x92e3]        # 0x41b038
  411d55:	cmp    QWORD PTR [rip+0x92e4],rax        # 0x41b040
  411d5c:	jae    0x411e23
  411d62:	cmp    BYTE PTR [rip+0x92ff],0x0        # 0x41b068
  411d69:	mov    r14,QWORD PTR [rip+0x92c0]        # 0x41b030
  411d70:	mov    rax,QWORD PTR [rip+0x92c9]        # 0x41b040
  411d77:	mov    BYTE PTR [r14+rax*1],0x0
  411d7c:	je     0x411dc6
  411d7e:	mov    rcx,r14
  411d81:	call   0x4114e0
  411d86:	test   rax,rax
  411d89:	mov    rbx,rax
  411d8c:	je     0x4119dd
  411d92:	call   QWORD PTR [rip+0xc840]        # 0x41e5d8
  411d98:	lea    rdx,[rax+0x30]
  411d9c:	mov    rcx,rbx
  411d9f:	call   0x405210
  411da4:	jmp    0x4119dd
  411da9:	mov    BYTE PTR [rip+0x92b8],0x1        # 0x41b068
  411db0:	jmp    0x4119d6
  411db5:	call   0x401630
  411dba:	mov    esi,0x1
  411dbf:	mov    ebx,eax
  411dc1:	jmp    0x411ab0
  411dc6:	mov    r12,QWORD PTR [rip+0x928b]        # 0x41b058
  411dcd:	xor    r15d,r15d
  411dd0:	mov    rdi,QWORD PTR [rip+0x9279]        # 0x41b050
  411dd7:	test   r12,r12
  411dda:	jne    0x411dfa
  411ddc:	mov    ecx,0x24
  411de1:	call   0x4051f0
  411de6:	test   sil,sil
  411de9:	je     0x411b82
  411def:	jmp    0x411b78
  411df4:	je     0x411d7e
  411df6:	lea    r15,[rbx+0x1]
  411dfa:	mov    rax,r12
  411dfd:	sub    rax,r15
  411e00:	cmp    rax,0x1
  411e04:	jbe    0x411e52
  411e06:	lea    rbx,[r12+r15*1]
  411e0a:	mov    rdx,r14
  411e0d:	shr    rbx,1
  411e10:	mov    rcx,QWORD PTR [rdi+rbx*8]
  411e14:	call   0x411458
  411e19:	cmp    eax,0x0
  411e1c:	jle    0x411df4
  411e1e:	mov    r12,rbx
  411e21:	jmp    0x411dfa
  411e23:	mov    rcx,QWORD PTR [rip+0x9206]        # 0x41b030
  411e2a:	lea    rdx,[rax+rax*1+0xa]
  411e2f:	mov    QWORD PTR [rip+0x9202],rdx        # 0x41b038
  411e36:	call   0x403030
  411e3b:	mov    QWORD PTR [rip+0x91ee],rax        # 0x41b030
  411e42:	jmp    0x411d62
  411e47:	mov    r13d,0x1
  411e4d:	jmp    0x411d4e
  411e52:	cmp    r12,r15
  411e55:	jbe    0x411ddc
  411e57:	mov    rcx,QWORD PTR [rdi+r15*8]
  411e5b:	mov    rdx,r14
  411e5e:	call   0x411458
  411e63:	test   eax,eax
  411e65:	jne    0x411ddc
  411e6b:	jmp    0x411d7e
  411e70:	(bad)  
  411e71:	(bad)  
  411e72:	(bad)  
  411e73:	(bad)  
  411e74:	(bad)  
  411e75:	(bad)  
  411e76:	(bad)  
  411e77:	inc    DWORD PTR [rax]
  411e79:	add    BYTE PTR [rax],al
  411e7b:	add    BYTE PTR [rax],al
  411e7d:	add    BYTE PTR [rax],al
  411e7f:	add    bh,bh
  411e81:	(bad)  
  411e82:	(bad)  
  411e83:	(bad)  
  411e84:	(bad)  
  411e85:	(bad)  
  411e86:	(bad)  
  411e87:	inc    DWORD PTR [rax]
  411e89:	add    BYTE PTR [rax],al
  411e8b:	add    BYTE PTR [rax],al
  411e8d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000412000 <.data>:
  412000:	or     al,BYTE PTR [rax]
	...
  41200e:	add    BYTE PTR [rax],al
  412010:	add    DWORD PTR [rax],eax
	...
  41201e:	add    BYTE PTR [rax],al
  412020:	(bad)  
  412021:	add    BYTE PTR [rax],al
  412023:	add    BYTE PTR [rcx],al
  412025:	add    BYTE PTR [rax],al
  412027:	add    BYTE PTR [rcx],al
	...
  41203d:	add    BYTE PTR [rax],al
  41203f:	add    BYTE PTR [rbx+0x0],al
	...
  412082:	add    BYTE PTR [rax],al
  412084:	(bad)  
  412085:	(bad)  
  412086:	(bad)  
  412087:	inc    DWORD PTR [rax]
	...
  4120bd:	add    BYTE PTR [rax],al
  4120bf:	add    BYTE PTR [rax+0x411e],cl
	...
  4120cd:	add    BYTE PTR [rax],al
  4120cf:	add    bh,bh
  4120d1:	(bad)  
  4120d2:	(bad)  
  4120d3:	(bad)  
  4120d4:	(bad)  
  4120d5:	(bad)  
  4120d6:	(bad)  
  4120d7:	inc    DWORD PTR [rax]
  4120d9:	add    BYTE PTR [rax],al
  4120db:	add    BYTE PTR [rax],al
  4120dd:	add    BYTE PTR [rax],al
  4120df:	add    bh,bh
	...
  4120ed:	add    BYTE PTR [rax],al
  4120ef:	add    BYTE PTR [rdx],al
	...
  4120fd:	add    BYTE PTR [rax],al
  4120ff:	add    bh,bh
  412101:	(bad)  
  412102:	(bad)  
  412103:	inc    DWORD PTR [rax]
	...
  41210d:	add    BYTE PTR [rax],al
  41210f:	add    BYTE PTR [rax+0x0],al
  412112:	add    BYTE PTR [rax],al
  412114:	ret    
  412115:	mov    edi,0x3fc0ffff
  41211a:	add    BYTE PTR [rax],al
  41211c:	add    DWORD PTR [rax],eax
  41211e:	add    BYTE PTR [rax],al
  412120:	add    BYTE PTR [rax],al
  412122:	add    BYTE PTR [rax],al
  412124:	(bad)  
	...
  41212d:	add    BYTE PTR [rax],al
  41212f:	add    al,al
  412131:	int3   
  412132:	add    BYTE PTR [r8],al
	...
  41213d:	add    BYTE PTR [rax],al
  41213f:	add    al,ah
  412141:	adc    eax,0x41
  412146:	add    BYTE PTR [rax],al
  412148:	lock adc eax,0x41
  41214e:	add    BYTE PTR [rax],al
  412150:	jo     0x412168
  412152:	add    BYTE PTR [r8],al
  412155:	add    BYTE PTR [rax],al
  412157:	add    BYTE PTR [rax],ah
  412159:	(bad)  
  41215a:	add    BYTE PTR [r8],al
  41215d:	add    BYTE PTR [rax],al
  41215f:	add    BYTE PTR [rdx],dh
  412161:	movabs ds:0x2b992ddf,al
  41216a:	add    BYTE PTR [rax],al
  41216c:	add    BYTE PTR [rax],al
  41216e:	add    BYTE PTR [rax],al
  412170:	int    0x5d
  412172:	and    dl,dl
  412174:	data16 (bad) 
  412176:	(bad)  
  412177:	inc    DWORD PTR [rax]
  412179:	add    BYTE PTR [rax],al
  41217b:	add    BYTE PTR [rax],al
  41217d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000413000 <.rdata>:
  413000:	jae    0x413076
  413002:	(bad)  
  413003:	outs   dx,BYTE PTR ds:[rsi]
  413004:	fs (bad) 
  413006:	jb     0x41306c
  413008:	and    BYTE PTR [rcx+0x6e],ch
  41300b:	jo     0x413082
  41300d:	je     0x41300f
  41300f:	gs jb  0x413084
  413012:	outs   dx,DWORD PTR ds:[rsi]
  413013:	jb     0x413035
  413015:	ja     0x41307f
  413017:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x64616572
  41301f:	imul   ebp,DWORD PTR [rsi+0x67],0x73252220
  413026:	and    al,BYTE PTR [rax]
	...
  413030:	(bad)  
  413031:	jae    0x413096
  413033:	jb     0x413096
  413035:	je     0x41309a
  413037:	push   0x65776a2f
  41303c:	(bad)  
  41303d:	ins    DWORD PTR es:[rdi],dx
  41303e:	js     0x4130a5
  413040:	sub    eax,0x6174636f
  413045:	jbe    0x4130ac
  413047:	(bad)  
  413048:	xor    al,0x2e
  41304a:	xor    ch,BYTE PTR [rsi]
  41304c:	xor    DWORD PTR [rdi],ebp
  41304e:	ja     0x413086
  413050:	xor    al,0x2d
  413052:	xor    esi,DWORD PTR [rdx]
  413054:	(bad)  
  413055:	jne    0x4130ca
  413057:	jb     0x413088
  413059:	js     0x413093
  41305b:	ss pop rdi
  41305d:	ss xor al,0x2d
  413060:	ja     0x413098
  413062:	xor    al,0x2d
  413064:	ins    DWORD PTR es:[rdi],dx
  413065:	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
  41306c:	jae    0x4130d6
  41306e:	(bad)  
  41306f:	jb     0x4130d6
  413071:	(bad)  
  413072:	ins    BYTE PTR es:[rdi],dx
  413073:	outs   dx,DWORD PTR ds:[rsi]
  413074:	movsxd esp,DWORD PTR [rcx+0x6c]
  413077:	add    BYTE PTR gs:[rdi+0x65],ah
  41307b:	je     0x4130f1
  41307d:	gs js  0x4130f4
  413080:	sub    eax,0x746e7572
  413085:	imul   ebp,DWORD PTR [rbp+0x65],0x0
  41308c:	add    BYTE PTR [rax],al
  41308e:	add    BYTE PTR [rax],al
  413090:	push   rsp
  413091:	jb     0x41310c
  413093:	and    BYTE PTR [rdi],ah
  413095:	and    eax,0x2d2d2073
  41309a:	push   0x27706c65
  41309f:	and    BYTE PTR [rsi+0x6f],ah
  4130a2:	jb     0x4130c4
  4130a4:	ins    DWORD PTR es:[rdi],dx
  4130a5:	outs   dx,DWORD PTR ds:[rsi]
  4130a6:	jb     0x41310d
  4130a8:	and    BYTE PTR [rcx+0x6e],ch
  4130ab:	outs   dx,WORD PTR ds:[rsi]
  4130ad:	jb     0x41311c
  4130af:	(bad)  
  4130b0:	je     0x41311b
  4130b2:	outs   dx,DWORD PTR ds:[rsi]
  4130b3:	outs   dx,BYTE PTR ds:[rsi]
  4130b4:	or     al,BYTE PTR cs:[rax]
  4130b7:	push   0x30005676
  4130bc:	xor    DWORD PTR cs:[rcx],edi
  4130bf:	cs xor eax,0x2500312e
  4130c5:	jae    0x4130e7
  4130c7:	sub    BYTE PTR [rdi+0x4e],al
  4130ca:	push   rbp
  4130cb:	and    BYTE PTR [rip+0x25202973],ah        # 0x25615a44
  4130d1:	jae    0x4130dd
  4130d3:	add    BYTE PTR [rax],al
  4130d5:	add    BYTE PTR [rax],al
  4130d7:	add    BYTE PTR [rbx+0x6f],al
  4130da:	jo     0x413155
  4130dc:	jb     0x413147
  4130de:	addr32 push 0x43282074
  4130e4:	sub    DWORD PTR [rax],esp
  4130e6:	and    eax,0x72462073
  4130eb:	gs and BYTE PTR gs:[rbx+0x6f],dl
  4130f0:	data16 je 0x41316a
  4130f3:	(bad)  
  4130f4:	jb     0x41315b
  4130f6:	and    BYTE PTR [rsi+0x6f],al
  4130f9:	jne    0x413169
  4130fb:	fs (bad) 
  4130fd:	je     0x413168
  4130ff:	outs   dx,DWORD PTR ds:[rsi]
  413100:	outs   dx,BYTE PTR ds:[rsi]
  413101:	sub    al,0x20
  413103:	rex.WB outs dx,BYTE PTR ds:[rsi]
  413105:	movsxd ebp,DWORD PTR [rsi]
  413107:	or     cl,BYTE PTR [rcx+rbp*2+0x63]
  41310b:	outs   dx,BYTE PTR gs:[rsi]
  41310d:	jae    0x413174
  41310f:	and    BYTE PTR [rdi+0x50],al
  413112:	rex.WR jbe 0x413148
  413115:	sub    edi,DWORD PTR [rdx]
  413117:	and    BYTE PTR [rdi+0x4e],al
  41311a:	push   rbp
  41311b:	and    BYTE PTR [rdi+0x50],al
  41311e:	rex.WR and BYTE PTR [rsi+0x65],r14b
  413122:	jb     0x413197
  413124:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f203320
  41312b:	jb     0x41314d
  41312d:	ins    BYTE PTR es:[rdi],dx
  41312e:	(bad)  
  41312f:	je     0x413196
  413131:	jb     0x413153
  413133:	cmp    al,0x68
  413135:	je     0x4131ab
  413137:	jo     0x413173
  413139:	(bad)  
  41313a:	(bad)  
  41313b:	outs   dx,BYTE PTR ds:[esi]
  41313d:	jne    0x41316d
  41313f:	outs   dx,DWORD PTR ds:[rsi]
  413140:	jb     0x4131a9
  413142:	(bad)  
  413143:	ins    BYTE PTR es:[rdi],dx
  413144:	imul   esp,DWORD PTR [rbx+0x65],0x7365736e
  41314b:	(bad)  
  41314c:	addr32 jo 0x4131bb
  41314f:	cs push 0x3e6c6d74
  413155:	or     dl,BYTE PTR [rax+rbp*2+0x69]
  413159:	jae    0x41317b
  41315b:	imul   esi,DWORD PTR [rbx+0x20],0x65657266
  413162:	and    BYTE PTR [rbx+0x6f],dh
  413165:	data16 je 0x4131df
  413168:	(bad)  
  413169:	jb     0x4131d0
  41316b:	cmp    ah,BYTE PTR [rax]
  41316d:	jns    0x4131de
  41316f:	jne    0x413191
  413171:	(bad)  
  413172:	jb     0x4131d9
  413174:	and    BYTE PTR [rsi+0x72],ah
  413177:	gs and BYTE PTR gs:[rdi+rbp*2+0x20],dh
  41317d:	movsxd ebp,DWORD PTR [rax+0x61]
  413180:	outs   dx,BYTE PTR ds:[rsi]
  413181:	and    BYTE PTR gs:[ecx+0x6e],ah
  413186:	and    BYTE PTR fs:[rdx+0x65],dh
  41318a:	imul   esi,DWORD PTR fs:[rbx+0x74],0x75626972
  413192:	je     0x4131f9
  413194:	and    BYTE PTR [rcx+0x74],ch
  413197:	or     dl,BYTE PTR cs:[rax+rbp*2+0x65]
  41319c:	jb     0x413203
  41319e:	and    BYTE PTR [rcx+0x73],ch
  4131a1:	and    BYTE PTR [rsi+0x4f],cl
  4131a4:	and    BYTE PTR [rdi+0x41],dl
  4131a7:	push   rdx
  4131a8:	push   rdx
  4131a9:	rex.B
  4131aa:	rex.WRX push rsp
  4131ac:	pop    rcx
  4131ad:	sub    al,0x20
  4131af:	je     0x413220
  4131b1:	and    BYTE PTR [rax+rbp*2+0x65],dh
  4131b5:	and    BYTE PTR [rbp+0x78],ah
  4131b8:	je     0x41321f
  4131ba:	outs   dx,BYTE PTR ds:[rsi]
  4131bb:	je     0x4131dd
  4131bd:	jo     0x413224
  4131bf:	jb     0x41322e
  4131c1:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x79622064
  4131c9:	and    BYTE PTR [rcx+riz*2+0x77],ch
  4131cd:	or     al,BYTE PTR cs:[rax]
  4131d0:	xor    dh,BYTE PTR [rax]
  4131d2:	xor    BYTE PTR [rbx],dh
  4131d4:	sub    eax,0x37303032
  4131d9:	add    BYTE PTR [rdx+0x72],al
  4131dc:	jne    0x41324c
  4131de:	outs   dx,DWORD PTR ds:[rsi]
  4131df:	and    BYTE PTR [rax+0x61],cl
  4131e2:	imul   esp,DWORD PTR [rdx+0x6c],0x72570065
  4131e9:	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x7962206e
  4131f1:	and    BYTE PTR [rip+0xa2e73],ah        # 0x4b606a
  4131f7:	add    BYTE PTR [rbp+0x73],dl
  4131fa:	(bad)  
  4131fb:	cmp    ah,BYTE PTR gs:[eax]
  4131ff:	and    eax,0x4f5b2073
  413204:	push   rax
  413205:	push   rsp
  413206:	rex.WB
  413207:	rex.WRXB
  413208:	rex.WRX pop rbp
  41320a:	and    BYTE PTR [rbx+0x53],bl
  41320d:	rex.W
  41320e:	rex.RB
  41320f:	rex.WR
  413210:	rex.WR sub rax,0x4d524f46
  413216:	push   r12
  413218:	pop    rbp
  413219:	or     al,BYTE PTR [rax]
  41321b:	or     al,BYTE PTR [rax]
  41321d:	add    BYTE PTR [rax],al
  41321f:	add    BYTE PTR [rbx+0x75],dl
  413222:	(bad)
  413227:	jne    0x41329d
  413229:	gs jae 0x41324c
  41322c:	je     0x413296
  41322e:	and    BYTE PTR gs:[rsi+0x61],dh
  413232:	ins    BYTE PTR es:[rdi],dx
  413233:	jne    0x41329a
  413235:	jae    0x413257
  413237:	outs   dx,DWORD PTR ds:[rsi]
  413238:	data16 and BYTE PTR [rbp+0x6e],ah
  41323c:	jbe    0x4132a7
  41323e:	jb     0x4132af
  413240:	outs   dx,BYTE PTR ds:[rsi]
  413241:	ins    DWORD PTR es:[rdi],dx
  413242:	outs   dx,BYTE PTR gs:[rsi]
  413244:	je     0x413266
  413246:	jbe    0x4132a9
  413248:	jb     0x4132b3
  41324a:	(bad)  
  41324b:	(bad)  
  41324c:	ins    BYTE PTR es:[rdi],dx
  41324d:	gs jae 0x41327e
  413250:	or     al,BYTE PTR [rax]
  413252:	rex.WRXB jo 0x4132ba
  413255:	jb     0x4132b8
  413257:	je     0x4132c2
  413259:	outs   dx,DWORD PTR ds:[rsi]
  41325a:	outs   dx,BYTE PTR ds:[rsi]
  41325b:	and    BYTE PTR [rbp+0x6f],ch
  41325e:	fs cmp cl,BYTE PTR gs:[rdx]
  413262:	add    BYTE PTR [rax],al
  413264:	add    BYTE PTR [rax],al
  413266:	add    BYTE PTR [rax],al
  413268:	and    BYTE PTR [rax],ah
  41326a:	sub    eax,0x2d202c76
  41326f:	sub    eax,0x69726176
  413274:	(bad)  
  413275:	(bad)  
  413276:	ins    BYTE PTR es:[rdi],dx
  413277:	gs jae 0x41329a
  41327a:	and    BYTE PTR [rax],ah
  41327c:	and    BYTE PTR [rax],ah
  41327e:	and    BYTE PTR [rax],ah
  413280:	and    BYTE PTR [rax],ah
  413282:	and    BYTE PTR [rax],ah
  413284:	and    BYTE PTR [rax],ah
  413286:	outs   dx,DWORD PTR ds:[rsi]
  413287:	jne    0x4132fd
  413289:	jo     0x413300
  41328b:	je     0x4132ad
  41328d:	je     0x4132f7
  41328f:	and    BYTE PTR gs:[rsi+0x61],dh
  413293:	jb     0x4132fe
  413295:	(bad)  
  413296:	(bad)  
  413297:	ins    BYTE PTR es:[rdi],dx
  413298:	gs jae 0x4132bb
  41329b:	outs   dx,DWORD PTR ds:[rsi]
  41329c:	movsxd esp,DWORD PTR [rbx+0x75]
  41329f:	jb     0x413313
  4132a1:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6920
  4132a8:	push   rbx
  4132a9:	rex.W
  4132aa:	rex.RB
  4132ab:	rex.WR
  4132ac:	rex.WR sub rax,0x4d524f46
  4132b2:	push   r12
  4132b4:	or     al,BYTE PTR [rax]
  4132b6:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4132b8:	outs   dx,WORD PTR ds:[rsi]
  4132ba:	jb     0x413329
  4132bc:	(bad)  
  4132bd:	je     0x413328
  4132bf:	jbe    0x413326
  4132c1:	and    BYTE PTR [rdi+0x75],ch
  4132c4:	je     0x413336
  4132c6:	jne    0x41333c
  4132c8:	cmp    cl,BYTE PTR [rdx]
  4132ca:	add    BYTE PTR [rax],al
  4132cc:	add    BYTE PTR [rax],al
  4132ce:	add    BYTE PTR [rax],al
  4132d0:	and    BYTE PTR [rax],ah
  4132d2:	sub    eax,0x2d202c68
  4132d7:	sub    eax,0x706c6568
  4132dc:	and    BYTE PTR [rax],ah
  4132de:	and    BYTE PTR [rax],ah
  4132e0:	and    BYTE PTR [rax],ah
  4132e2:	and    BYTE PTR [rax],ah
  4132e4:	and    BYTE PTR [rax],ah
  4132e6:	and    BYTE PTR [rax],ah
  4132e8:	and    BYTE PTR [rax],ah
  4132ea:	and    BYTE PTR [rax],ah
  4132ec:	and    BYTE PTR [rax],ah
  4132ee:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  4132f6:	je     0x413360
  4132f8:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  4132ff:	and    BYTE PTR [rcx+0x6e],ah
  413302:	and    BYTE PTR fs:[rbp+0x78],ah
  413306:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  41330e:	add    BYTE PTR [rax],al
  413310:	and    BYTE PTR [rax],ah
  413312:	sub    eax,0x2d202c56
  413317:	sub    eax,0x73726576
  41331c:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  413323:	and    BYTE PTR [rax],ah
  413325:	and    BYTE PTR [rax],ah
  413327:	and    BYTE PTR [rax],ah
  413329:	and    BYTE PTR [rax],ah
  41332b:	and    BYTE PTR [rax],ah
  41332d:	and    BYTE PTR [rdi+0x75],ch
  413330:	je     0x4133a2
  413332:	jne    0x4133a8
  413334:	and    BYTE PTR [rsi+0x65],dh
  413337:	jb     0x4133ac
  413339:	imul   ebp,DWORD PTR [rdi+0x6e],0x666e6920
  413340:	outs   dx,DWORD PTR ds:[rsi]
  413341:	jb     0x4133b0
  413343:	(bad)  
  413344:	je     0x4133af
  413346:	outs   dx,DWORD PTR ds:[rsi]
  413347:	outs   dx,BYTE PTR ds:[rsi]
  413348:	and    BYTE PTR [rcx+0x6e],ah
  41334b:	and    BYTE PTR fs:[rbp+0x78],ah
  41334f:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x0
  413357:	add    BYTE PTR [rcx+0x6e],cl
  41335a:	and    BYTE PTR [rsi+0x6f],ch
  41335d:	jb     0x4133cc
  41335f:	(bad)  
  413360:	ins    BYTE PTR es:[rdi],dx
  413361:	and    BYTE PTR [rdi+0x70],ch
  413364:	gs jb  0x4133c8
  413367:	je     0x4133d2
  413369:	outs   dx,DWORD PTR ds:[rsi]
  41336a:	outs   dx,BYTE PTR ds:[rsi]
  41336b:	and    BYTE PTR [rbp+0x6f],ch
  41336e:	fs gs sub al,0x20
  413372:	jae    0x4133e8
  413374:	(bad)  
  413375:	outs   dx,BYTE PTR ds:[rsi]
  413376:	fs (bad) 
  413378:	jb     0x4133de
  41337a:	and    BYTE PTR [rcx+0x6e],ch
  41337d:	jo     0x4133f4
  41337f:	je     0x4133a1
  413381:	imul   esi,DWORD PTR [rbx+0x20],0x69706f63
  413388:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
  41338e:	jae    0x413404
  413390:	(bad)  
  413391:	outs   dx,BYTE PTR ds:[rsi]
  413392:	fs (bad) 
  413394:	jb     0x4133fa
  413396:	and    BYTE PTR [rdi+0x75],ch
  413399:	je     0x41340b
  41339b:	jne    0x413411
  41339d:	sub    al,0xa
  41339f:	ja     0x41340a
  4133a1:	je     0x41340b
  4133a3:	and    BYTE PTR [rdx+0x65],dh
  4133a6:	data16 gs jb 0x41340f
  4133aa:	outs   dx,BYTE PTR ds:[rsi]
  4133ab:	movsxd esp,DWORD PTR [rbp+0x73]
  4133ae:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  4133b2:	outs   dx,BYTE PTR gs:[rsi]
  4133b4:	jbe    0x41341f
  4133b6:	jb     0x413427
  4133b8:	outs   dx,BYTE PTR ds:[rsi]
  4133b9:	ins    DWORD PTR es:[rdi],dx
  4133ba:	outs   dx,BYTE PTR gs:[rsi]
  4133bc:	je     0x4133de
  4133be:	jbe    0x413421
  4133c0:	jb     0x41342b
  4133c2:	(bad)  
  4133c3:	(bad)  
  4133c4:	ins    BYTE PTR es:[rdi],dx
  4133c5:	gs jae 0x4133e8
  4133c8:	outs   dx,DWORD PTR ds:[rsi]
  4133c9:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  4133ce:	and    BYTE PTR [rsi+0x6f],ah
  4133d1:	jb     0x413440
  4133d3:	and    BYTE PTR [rsi+rdx*2],ah
  4133d6:	push   r10
  4133d8:	rex.WB
  4133d9:	rex.B
  4133da:	rex.X
  4133db:	rex.WR
  4133dc:	and    BYTE PTR [r15+0x72],r13b
  4133e0:	and    BYTE PTR [rbx+rdi*2],ah
  4133e3:	push   rsi
  4133e4:	push   r10
  4133e6:	rex.WB
  4133e7:	rex.B
  4133e8:	rex.X
  4133e9:	rex.WR
  4133ea:	rex.RB jge 0x4133f7
  4133ed:	(bad)  
  4133ee:	imul   ebp,DWORD PTR gs:[rsi+0x67],0x70657220
  4133f6:	ins    BYTE PTR es:[rdi],dx
  4133f7:	(bad)  
  4133f8:	movsxd esp,DWORD PTR [rbp+0x64]
  4133fb:	and    BYTE PTR [rdi+0x69],dh
  4133fe:	je     0x413468
  413400:	and    BYTE PTR [rax+rbp*2+0x65],dh
  413404:	and    BYTE PTR [rbx+0x6f],ah
  413407:	jb     0x41347b
  413409:	gs jae 0x41347c
  41340c:	outs   dx,DWORD PTR ds:[rsi]
  41340d:	outs   dx,BYTE PTR ds:[rsi]
  41340e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x6c617620
  413416:	jne    0x41347d
  413418:	jae    0x413448
  41341a:	and    BYTE PTR [rax],ah
  41341c:	rex.WB
  41341d:	data16 and BYTE PTR [rcx+0x20],ah
  413421:	push   rbx
  413422:	rex.W
  413423:	rex.RB
  413424:	rex.WR
  413425:	rex.WR sub rax,0x4d524f46
  41342b:	push   r12
  41342d:	and    BYTE PTR [rcx+0x73],ch
  413430:	and    BYTE PTR [rdi+0x69],ah
  413433:	jbe    0x41349a
  413435:	outs   dx,BYTE PTR ds:[rsi]
  413436:	sub    al,0xa
  413438:	outs   dx,DWORD PTR ds:[rsi]
  413439:	outs   dx,BYTE PTR ds:[rsi]
  41343a:	ins    BYTE PTR es:[rdi],dx
  41343b:	jns    0x41345d
  41343d:	je     0x4134a7
  41343f:	outs   dx,DWORD PTR ds:[rsi]
  413440:	jae    0x4134a7
  413442:	and    BYTE PTR [rbp+0x6e],ah
  413445:	jbe    0x4134b0
  413447:	jb     0x4134b8
  413449:	outs   dx,BYTE PTR ds:[rsi]
  41344a:	ins    DWORD PTR es:[rdi],dx
  41344b:	outs   dx,BYTE PTR gs:[rsi]
  41344d:	je     0x41346f
  41344f:	jbe    0x4134b2
  413451:	jb     0x4134bc
  413453:	(bad)  
  413454:	(bad)  
  413455:	ins    BYTE PTR es:[rdi],dx
  413456:	gs jae 0x413479
  413459:	je     0x4134c3
  41345b:	(bad)  
  41345c:	je     0x41347e
  41345e:	(bad)  
  41345f:	jb     0x4134c6
  413461:	and    BYTE PTR [rdx+0x65],dh
  413464:	data16 gs jb 0x4134cd
  413468:	outs   dx,BYTE PTR ds:[rsi]
  413469:	movsxd esp,DWORD PTR [rbp+0x64]
  41346c:	and    BYTE PTR [rcx+0x6e],ch
  41346f:	and    BYTE PTR [rbx+0x48],dl
  413472:	rex.RB
  413473:	rex.WR
  413474:	rex.WR sub rax,0x4d524f46
  41347a:	push   r12
  41347c:	and    BYTE PTR [rcx+0x72],ah
  41347f:	or     dh,BYTE PTR gs:[rbx+0x75]
  413483:	(bad)
  413488:	jne    0x4134fe
  41348a:	gs cmp esp,DWORD PTR fs:[rax]
  41348e:	outs   dx,DWORD PTR ds:[rsi]
  41348f:	je     0x4134f9
  413491:	gs jb  0x41350b
  413494:	imul   esi,DWORD PTR [rbx+0x65],0x6c6c6120
  41349b:	and    BYTE PTR [rbp+0x6e],ah
  41349e:	jbe    0x413509
  4134a0:	jb     0x413511
  4134a2:	outs   dx,BYTE PTR ds:[rsi]
  4134a3:	ins    DWORD PTR es:[rdi],dx
  4134a4:	outs   dx,BYTE PTR gs:[rsi]
  4134a6:	je     0x4134c8
  4134a8:	jbe    0x41350b
  4134aa:	jb     0x413515
  4134ac:	(bad)  
  4134ad:	(bad)  
  4134ae:	ins    BYTE PTR es:[rdi],dx
  4134af:	gs jae 0x4134d2
  4134b2:	jb     0x413519
  4134b4:	data16 gs jb 0x41351d
  4134b8:	outs   dx,BYTE PTR ds:[rsi]
  4134b9:	movsxd esp,DWORD PTR [rbp+0x73]
  4134bc:	and    BYTE PTR [rdi+0x63],ch
  4134bf:	movsxd esi,DWORD PTR [rbp+0x72]
  4134c2:	jb     0x41352d
  4134c4:	outs   dx,BYTE PTR ds:[rsi]
  4134c5:	and    BYTE PTR [ecx+0x6e],ch
  4134c9:	or     dh,BYTE PTR [rbx+0x74]
  4134cc:	(bad)  
  4134cd:	outs   dx,BYTE PTR ds:[rsi]
  4134ce:	fs (bad) 
  4134d0:	jb     0x413536
  4134d2:	and    BYTE PTR [rcx+0x6e],ch
  4134d5:	jo     0x41354c
  4134d7:	je     0x4134f9
  4134d9:	(bad)  
  4134da:	jb     0x413541
  4134dc:	and    BYTE PTR [rbx+0x75],dh
  4134df:	(bad)
  4134e4:	jne    0x41355a
  4134e6:	gs fs or al,BYTE PTR cs:[rax]
  4134eb:	add    BYTE PTR [rax],al
  4134ed:	add    BYTE PTR [rax],al
  4134ef:	add    BYTE PTR [rdi+0x68],dl
  4134f2:	outs   dx,BYTE PTR gs:[rsi]
  4134f4:	and    BYTE PTR [rip+0x7261762d],ch        # 0x72a2ab27
  4134fa:	imul   esp,DWORD PTR [rcx+0x62],0x2073656c
  413501:	imul   esi,DWORD PTR [rbx+0x20],0x64657375
  413508:	sub    al,0x20
  41350a:	jae    0x413580
  41350c:	(bad)  
  41350d:	outs   dx,BYTE PTR ds:[rsi]
  41350e:	fs (bad) 
  413510:	jb     0x413576
  413512:	and    BYTE PTR [rcx+0x6e],ch
  413515:	jo     0x41358c
  413517:	je     0x413539
  413519:	imul   esi,DWORD PTR [rbx+0x20],0x6f6e6769
  413520:	jb     0x413587
  413522:	fs sub al,0x20
  413525:	(bad)  
  413526:	outs   dx,BYTE PTR ds:[rsi]
  413527:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
  41352c:	and    BYTE PTR [rdi+0x75],ch
  41352f:	je     0x4135a1
  413531:	jne    0x4135a7
  413533:	and    BYTE PTR [rbx+0x6f],ah
  413536:	outs   dx,BYTE PTR ds:[rsi]
  413537:	jae    0x4135a2
  413539:	jae    0x4135af
  41353b:	jae    0x413547
  41353d:	outs   dx,DWORD PTR ds:[rsi]
  41353e:	data16 and BYTE PTR [rax+rbp*2+0x65],dh
  413543:	and    BYTE PTR [rbp+0x6e],ah
  413546:	jbe    0x4135b1
  413548:	jb     0x4135b9
  41354a:	outs   dx,BYTE PTR ds:[rsi]
  41354b:	ins    DWORD PTR es:[rdi],dx
  41354c:	outs   dx,BYTE PTR gs:[rsi]
  41354e:	je     0x413570
  413550:	jbe    0x4135b3
  413552:	jb     0x4135bd
  413554:	(bad)  
  413555:	(bad)  
  413556:	ins    BYTE PTR es:[rdi],dx
  413557:	gs jae 0x41357a
  41355a:	je     0x4135c4
  41355c:	(bad)  
  41355d:	je     0x41357f
  41355f:	(bad)  
  413560:	jb     0x4135c7
  413562:	and    BYTE PTR [rdx+0x65],dh
  413565:	data16 gs jb 0x4135ce
  413569:	outs   dx,BYTE PTR ds:[rsi]
  41356a:	movsxd esp,DWORD PTR [rbp+0x64]
  41356d:	and    BYTE PTR [rcx+0x6e],ch
  413570:	and    BYTE PTR [rbx+0x48],dl
  413573:	rex.RB
  413574:	rex.WR
  413575:	rex.WR sub rax,0x4d524f46
  41357b:	push   r12
  41357d:	sub    al,0x20
  41357f:	outs   dx,DWORD PTR ds:[rsi]
  413580:	outs   dx,BYTE PTR ds:[rsi]
  413581:	and    BYTE PTR gs:[rax+0x65],dh
  413585:	jb     0x4135a7
  413587:	ins    BYTE PTR es:[rdi],dx
  413588:	imul   ebp,DWORD PTR [rsi+0x65],0xa2e
  41358f:	add    BYTE PTR [rdx+0x65],dl
  413592:	jo     0x413603
  413594:	jb     0x41360a
  413596:	and    BYTE PTR [rdx+0x75],ah
  413599:	addr32 jae 0x4135bc
  41359c:	je     0x41360d
  41359e:	and    BYTE PTR [rdx+riz*2],bh
  4135a1:	jne    0x41360a
  4135a3:	sub    eax,0x2d756e67
  4135a8:	addr32 gs je 0x413620
  4135ac:	gs js  0x413623
  4135af:	rex
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b2:	jne    0x4135e2
  4135b4:	outs   dx,DWORD PTR ds:[rsi]
  4135b5:	jb     0x41361e
  4135b7:	ds or  al,BYTE PTR cs:[rax]
  4135bb:	je     0x41362c
  4135bd:	outs   dx,DWORD PTR ds:[rsi]
  4135be:	and    BYTE PTR [rbp+0x61],ch
  4135c1:	outs   dx,BYTE PTR ds:[rsi]
  4135c2:	jns    0x4135e4
  4135c4:	(bad)  
  4135c5:	jb     0x41362e
  4135c7:	jne    0x413636
  4135c9:	outs   dx,BYTE PTR gs:[rsi]
  4135cb:	je     0x413640
  4135cd:	add    BYTE PTR [rbp+0x69],ch
  4135d0:	jae    0x413645
  4135d2:	imul   ebp,DWORD PTR [rsi+0x67],0x67726120
  4135d9:	jne    0x413648
  4135db:	outs   dx,BYTE PTR gs:[rsi]
  4135dd:	je     0x413652
  4135df:	add    BYTE PTR [rax+0x65],ch
  4135e2:	ins    BYTE PTR es:[rdi],dx
  4135e3:	jo     0x4135e5
  4135e5:	jbe    0x413648
  4135e7:	jb     0x413652
  4135e9:	(bad)  
  4135ea:	(bad)  
  4135eb:	ins    BYTE PTR es:[rdi],dx
  4135ec:	gs jae 0x4135ef
  4135ef:	jbe    0x413656
  4135f1:	jb     0x413666
  4135f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
  4135fa:	add    BYTE PTR [rax],al
  4135fc:	add    BYTE PTR [rax],al
  4135fe:	add    BYTE PTR [rax],al
  413600:	loopne 0x413637
  413602:	add    BYTE PTR [r8],al
	...
  413615:	add    BYTE PTR [rax],al
  413617:	add    BYTE PTR [rax+0x0],ch
  41361a:	add    BYTE PTR [rax],al
  41361c:	add    BYTE PTR [rax],al
  41361e:	add    BYTE PTR [rax],al
  413620:	in     eax,0x35
  413622:	add    BYTE PTR [r8],al
	...
  413635:	add    BYTE PTR [rax],al
  413637:	add    BYTE PTR [rsi+0x0],dh
  41363a:	add    BYTE PTR [rax],al
  41363c:	add    BYTE PTR [rax],al
  41363e:	add    BYTE PTR [rax],al
  413640:	out    dx,eax
  413641:	xor    eax,0x41
	...
  413656:	add    BYTE PTR [rax],al
  413658:	push   rsi
	...
  41367d:	add    BYTE PTR [rax],al
  41367f:	add    BYTE PTR [rdx+0x61],ah
  413682:	jae    0x4136e9
  413684:	outs   dx,BYTE PTR ds:[rsi]
  413685:	(bad)  
  413686:	ins    DWORD PTR es:[rdi],dx
  413687:	gs movsxd eax,DWORD PTR cs:[rax]
  41368b:	add    BYTE PTR [rax],al
  41368d:	add    BYTE PTR [rax],al
  41368f:	add    BYTE PTR [rcx+0x6c],ah
  413692:	ins    BYTE PTR es:[rdi],dx
  413693:	pop    rdi
  413694:	jae    0x413702
  413696:	(bad)  
  413697:	jae    0x413701
  413699:	gs jae 0x4136bc
  41369c:	jl     0x41371a
  41369e:	and    BYTE PTR [rcx],ah
  4136a0:	rex.WB push r11
  4136a2:	push   rbx
  4136a3:	rex.WR
  4136a4:	push   r11
  4136a6:	rex.W and BYTE PTR [rax],bpl
  4136a9:	sub    ch,BYTE PTR [rax]
  4136ab:	jo     0x4136cd
  4136ad:	sub    eax,0x29293120
	...
  4136be:	add    BYTE PTR [rax],al
  4136c0:	ja     0x413734
  4136c2:	imul   esi,DWORD PTR [rbp+riz*2+0x20],0x6f727265
  4136ca:	jb     0x4136cc
  4136cc:	and    eax,0x41000073
  4136d1:	and    BYTE PTR [rsi+0x55],cl
  4136d4:	rex.WR
  4136d5:	rex.WR and BYTE PTR [rcx+0x72],r12b
  4136d9:	addr32 jbe 0x413737
  4136dc:	xor    BYTE PTR [rbp+0x20],bl
  4136df:	ja     0x413742
  4136e1:	jae    0x413703
  4136e3:	jo     0x413746
  4136e5:	jae    0x41375a
  4136e7:	gs and BYTE PTR fs:[rax+rbp*2+0x72],dh
  4136ed:	outs   dx,DWORD PTR ds:[rsi]
  4136ee:	jne    0x413757
  4136f0:	push   0x206e6120
  4136f5:	gs js  0x41375d
  4136f8:	movsxd esp,DWORD PTR [rax]
  4136fa:	jae    0x413775
  4136fc:	jae    0x413772
  4136fe:	gs ins DWORD PTR es:[rdi],dx
  413700:	and    BYTE PTR [rbx+0x61],ah
  413703:	ins    BYTE PTR es:[rdi],dx
  413704:	ins    BYTE PTR es:[rdi],dx
  413705:	or     al,BYTE PTR cs:[rax]
  413708:	(bad)  
  413709:	cs ins BYTE PTR es:[rdi],dx
  41370b:	imul   esp,DWORD PTR [rdx+0x73],0x746c002f
  413712:	sub    eax,0x0
	...
  41371f:	add    BYTE PTR [rbp+0x62],ch
  413722:	jne    0x41378d
  413724:	je     0x41378b
  413726:	jb     0x413756
  413728:	push   0x73626d00
  41372d:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  413734:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x74733e2d
  41373c:	(bad)  
  41373d:	je     0x4137a4
  41373f:	sub    DWORD PTR [rax],eax
  413741:	sub    ch,BYTE PTR [rcx+0x74]
  413744:	gs jb  0x413774
  413747:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  41374b:	cs jo  0x4137c2
  41374e:	jb     0x413770
  413750:	cmp    eax,0x5c27203d
  413755:	xor    BYTE PTR [rdi],ah
  413757:	add    BYTE PTR [rcx+0x74],ch
  41375a:	gs jb  0x41378a
  41375d:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  413761:	cs ja  0x4137c7
  413764:	and    BYTE PTR [rip+0x30203d],bh        # 0x7157a7
  41376a:	and    eax,0x25282073
  41376f:	jae    0x41379a
  413771:	add    BYTE PTR [rbp+0x54],dl
  413774:	rex.RX sub eax,0x38
  41377a:	add    BYTE PTR [rax],al
  41377c:	add    BYTE PTR [rax],al
  41377e:	add    BYTE PTR [rax],al
  413780:	ins    DWORD PTR es:[rdi],dx
  413781:	(bad)  
  413782:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6d00682e
  41378a:	(bad)  
  41378c:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  413793:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x74733e2d
  41379b:	(bad)  
  41379c:	je     0x413803
  41379e:	sub    DWORD PTR [rax],eax
  4137a0:	sub    ch,BYTE PTR [rcx+0x74]
  4137a3:	gs jb  0x4137d3
  4137a6:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  4137aa:	cs jo  0x413821
  4137ad:	jb     0x4137cf
  4137af:	cmp    eax,0x5c27203d
  4137b4:	xor    BYTE PTR [rdi],ah
  4137b6:	add    BYTE PTR [rcx+0x74],ch
  4137b9:	gs jb  0x4137e9
  4137bc:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  4137c0:	cs ja  0x413826
  4137c3:	and    BYTE PTR [rip+0x30203d],bh        # 0x715806
  4137c9:	add    BYTE PTR [rax],al
  4137cb:	add    BYTE PTR [rax],al
  4137cd:	add    BYTE PTR [rax],al
  4137cf:	add    BYTE PTR [rbp+0x65],ch
  4137d2:	ins    DWORD PTR es:[rdi],dx
  4137d3:	outs   dx,DWORD PTR ds:[rsi]
  4137d4:	jb     0x41384f
  4137d6:	and    BYTE PTR [rbp+0x78],ah
  4137d9:	push   0x74737561
  4137de:	gs add BYTE PTR fs:[rax],al
	...
  4137ee:	add    BYTE PTR [rax],al
  4137f0:	push   rbp
  4137f1:	outs   dx,BYTE PTR ds:[rsi]
  4137f2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4137f6:	outs   dx,BYTE PTR ds:[rsi]
  4137f7:	and    BYTE PTR [rbx+0x79],dh
  4137fa:	jae    0x413870
  4137fc:	gs ins DWORD PTR es:[rdi],dx
  4137fe:	and    BYTE PTR [rbp+0x72],ah
  413801:	jb     0x413872
  413803:	jb     0x413805
  413805:	cmp    ah,BYTE PTR [rax]
  413807:	and    eax,0x73250073
  41380c:	cmp    ah,BYTE PTR [rax]
  41380e:	add    BYTE PTR [rip+0x75253a73],ah        # 0x75667287
  413814:	cmp    ah,BYTE PTR [rax]
  413816:	add    BYTE PTR [rax],ah
  413818:	add    BYTE PTR [rip+0x3a73],ah        # 0x417291
  41381e:	add    BYTE PTR [rax],al
  413820:	push   rax
  413821:	rex.WRXB push r11
  413823:	rex.WB pop r8
  413825:	rex.WR pop rcx
  413827:	pop    rdi
  413828:	rex.XB
  413829:	rex.WRXB push r10
  41382b:	push   rdx
  41382c:	rex.RB
  41382d:	rex.XB push r12
  41382f:	add    BYTE PTR [rip+0x2d],ch        # 0x413862
  413835:	add    BYTE PTR [rax],al
  413837:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f6172b0
  41383d:	jo     0x4138b3
  41383f:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  413846:	(bad)  
  413847:	and    BYTE PTR [rcx+0x73],ch
  41384a:	and    BYTE PTR [rcx+0x6d],ah
  41384d:	(bad)  
  41384e:	imul   esp,DWORD PTR [rdi+0x75],0x3b73756f
  413855:	and    BYTE PTR [rax+0x6f],dh
  413858:	jae    0x4138cd
  41385a:	imul   esp,DWORD PTR [rdx+0x69],0x6974696c
  413861:	gs jae 0x41389e
  413864:	add    BYTE PTR [rax],ah
  413866:	(bad)  
  413867:	sub    eax,0x2773252d
  41386c:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f6172e5
  413872:	jo     0x4138e8
  413874:	imul   ebp,DWORD PTR [rdi+0x6e],0x73252720
  41387b:	(bad)  
  41387c:	and    BYTE PTR [rcx+0x73],ch
  41387f:	and    BYTE PTR [rcx+0x6d],ah
  413882:	(bad)  
  413883:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
  41388a:	add    BYTE PTR [rax],al
  41388c:	add    BYTE PTR [rax],al
  41388e:	add    BYTE PTR [rax],al
  413890:	and    eax,0x6f203a73
  413895:	jo     0x41390b
  413897:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d2720
  41389e:	and    eax,0x64202773
  4138a3:	outs   dx,DWORD PTR ds:[rsi]
  4138a4:	gs jae 0x413915
  4138a7:	(bad)  
  4138a8:	je     0x4138ca
  4138aa:	(bad)  
  4138ab:	ins    BYTE PTR es:[rdi],dx
  4138ac:	ins    BYTE PTR es:[rdi],dx
  4138ad:	outs   dx,DWORD PTR ds:[rsi]
  4138ae:	ja     0x4138d0
  4138b0:	(bad)  
  4138b1:	outs   dx,BYTE PTR ds:[rsi]
  4138b2:	and    BYTE PTR [rcx+0x72],ah
  4138b5:	addr32 jne 0x413925
  4138b8:	outs   dx,BYTE PTR gs:[rsi]
  4138ba:	je     0x4138c6
  4138bc:	add    BYTE PTR [rax],al
  4138be:	add    BYTE PTR [rax],al
  4138c0:	and    eax,0x6f203a73
  4138c5:	jo     0x41393b
  4138c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x63252720
  4138ce:	and    eax,0x64202773
  4138d3:	outs   dx,DWORD PTR ds:[rsi]
  4138d4:	gs jae 0x413945
  4138d7:	(bad)  
  4138d8:	je     0x4138fa
  4138da:	(bad)  
  4138db:	ins    BYTE PTR es:[rdi],dx
  4138dc:	ins    BYTE PTR es:[rdi],dx
  4138dd:	outs   dx,DWORD PTR ds:[rsi]
  4138de:	ja     0x413900
  4138e0:	(bad)  
  4138e1:	outs   dx,BYTE PTR ds:[rsi]
  4138e2:	and    BYTE PTR [rcx+0x72],ah
  4138e5:	addr32 jne 0x413955
  4138e8:	outs   dx,BYTE PTR gs:[rsi]
  4138ea:	je     0x4138f6
  4138ec:	add    BYTE PTR [rax],al
  4138ee:	add    BYTE PTR [rax],al
  4138f0:	and    eax,0x6f203a73
  4138f5:	jo     0x41396b
  4138f7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d2d2720
  4138fe:	and    eax,0x72202773
  413903:	gs jno 0x41397b
  413906:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  41390d:	and    BYTE PTR [rcx+0x72],ah
  413910:	addr32 jne 0x413980
  413913:	outs   dx,BYTE PTR gs:[rsi]
  413915:	je     0x413921
  413917:	add    BYTE PTR [rip+0x75203a73],ah        # 0x75617390
  41391d:	outs   dx,BYTE PTR ds:[rsi]
  41391e:	jb     0x413985
  413920:	movsxd ebp,DWORD PTR [rdi+0x67]
  413923:	outs   dx,BYTE PTR ds:[rsi]
  413924:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  41392b:	je     0x413996
  41392d:	outs   dx,DWORD PTR ds:[rsi]
  41392e:	outs   dx,BYTE PTR ds:[rsi]
  41392f:	and    BYTE PTR [rdi],ah
  413931:	sub    eax,0x2773252d
  413936:	or     al,BYTE PTR [rax]
  413938:	and    eax,0x75203a73
  41393d:	outs   dx,BYTE PTR ds:[rsi]
  41393e:	jb     0x4139a5
  413940:	movsxd ebp,DWORD PTR [rdi+0x67]
  413943:	outs   dx,BYTE PTR ds:[rsi]
  413944:	imul   edi,DWORD PTR [rdx+0x65],0x706f2064
  41394b:	je     0x4139b6
  41394d:	outs   dx,DWORD PTR ds:[rsi]
  41394e:	outs   dx,BYTE PTR ds:[rsi]
  41394f:	and    BYTE PTR [rdi],ah
  413951:	and    eax,0x27732563
  413956:	or     al,BYTE PTR [rax]
  413958:	add    BYTE PTR [rip+0x69203a73],ah        # 0x696173d1
  41395e:	outs   dx,BYTE PTR ds:[rsi]
  41395f:	jbe    0x4139c2
  413961:	ins    BYTE PTR es:[rdi],dx
  413962:	imul   esp,DWORD PTR [rax+riz*1+0x6f],0x6f697470
  41396a:	outs   dx,BYTE PTR ds:[rsi]
  41396b:	and    BYTE PTR [rip+0x2527202d],ch        # 0x2568599e
  413971:	movsxd esp,DWORD PTR [rdi]
  413973:	or     al,BYTE PTR [rax]
  413975:	add    BYTE PTR [rax],al
  413977:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f6173f0
  41397d:	jo     0x4139f3
  41397f:	imul   ebp,DWORD PTR [rdi+0x6e],0x71657220
  413986:	jne    0x4139f1
  413988:	jb     0x4139ef
  41398a:	jae    0x4139ac
  41398c:	(bad)  
  41398d:	outs   dx,BYTE PTR ds:[rsi]
  41398e:	and    BYTE PTR [rcx+0x72],ah
  413991:	addr32 jne 0x413a01
  413994:	outs   dx,BYTE PTR gs:[rsi]
  413996:	je     0x4139b8
  413998:	sub    eax,0x2527202d
  41399d:	movsxd esp,DWORD PTR [rdi]
  41399f:	or     al,BYTE PTR [rax]
  4139a1:	add    BYTE PTR [rax],al
  4139a3:	add    BYTE PTR [rax],al
  4139a5:	add    BYTE PTR [rax],al
  4139a7:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f617420
  4139ad:	jo     0x413a23
  4139af:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d2720
  4139b6:	and    BYTE PTR [rip+0x69202773],ah        # 0x6961612f
  4139bc:	jae    0x4139de
  4139be:	(bad)  
  4139bf:	ins    DWORD PTR es:[rdi],dx
  4139c0:	(bad)  
  4139c1:	imul   esp,DWORD PTR [rdi+0x75],0xa73756f
	...
  4139d0:	and    eax,0x6f203a73
  4139d5:	jo     0x413a4b
  4139d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d2720
  4139de:	and    BYTE PTR [rip+0x64202773],ah        # 0x64616157
  4139e4:	outs   dx,DWORD PTR ds:[rsi]
  4139e5:	gs jae 0x413a56
  4139e8:	(bad)  
  4139e9:	je     0x413a0b
  4139eb:	(bad)  
  4139ec:	ins    BYTE PTR es:[rdi],dx
  4139ed:	ins    BYTE PTR es:[rdi],dx
  4139ee:	outs   dx,DWORD PTR ds:[rsi]
  4139ef:	ja     0x413a11
  4139f1:	(bad)  
  4139f2:	outs   dx,BYTE PTR ds:[rsi]
  4139f3:	and    BYTE PTR [rcx+0x72],ah
  4139f6:	addr32 jne 0x413a66
  4139f9:	outs   dx,BYTE PTR gs:[rsi]
  4139fb:	je     0x413a07
  4139fd:	add    BYTE PTR [rax],al
  4139ff:	add    BYTE PTR [rip+0x6f203a73],ah        # 0x6f617478
  413a05:	jo     0x413a7b
  413a07:	imul   ebp,DWORD PTR [rdi+0x6e],0x572d2720
  413a0e:	and    BYTE PTR [rip+0x72202773],ah        # 0x72616187
  413a14:	gs jno 0x413a8c
  413a17:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  413a1e:	and    BYTE PTR [rcx+0x72],ah
  413a21:	addr32 jne 0x413a91
  413a24:	outs   dx,BYTE PTR gs:[rsi]
  413a26:	je     0x413a32
	...
  413a40:	rex.WR
  413a41:	rex.XB pop r15
  413a43:	rex.XB
  413a44:	rex.WRXB
  413a45:	rex.WR
  413a46:	rex.WR
  413a47:	push   r12
  413a49:	add    BYTE PTR [r11+rax*2+0x5f],r9b
  413a4e:	rex.XB push r12
  413a50:	pop    rcx
  413a51:	push   rax
  413a52:	add    BYTE PTR [r11+rax*2+0x5f],r9b
  413a57:	rex.WRB
  413a58:	rex.WRXB
  413a59:	rex.WRX
  413a5a:	rex.RB push r12
  413a5c:	push   r10
  413a5e:	pop    rcx
  413a5f:	add    BYTE PTR [rbx+rax*2+0x5f],cl
  413a63:	rex.WRX push rbp
  413a65:	rex.WRB
  413a66:	rex.RB push r10
  413a68:	rex.WB
  413a69:	add    BYTE PTR [r11+r8*2+0x5f],cl
  413a6e:	push   rsp
  413a6f:	rex.WB
  413a70:	rex.WRB
  413a71:	add    BYTE PTR [r11+rax*2+0x5f],r9b
  413a76:	pop    rax
  413a77:	pop    rax
  413a78:	pop    rax
  413a79:	add    BYTE PTR [rbx+rax*2+0x5f],cl
  413a7d:	rex.WRB
  413a7e:	rex.RB push r11
  413a80:	push   rbx
  413a81:	rex.B
  413a82:	rex.RXB
  413a83:	rex.RB push r11
  413a85:	add    BYTE PTR [rbx+0x0],al
	...
  413a90:	add    al,0x0
  413a92:	add    BYTE PTR [rax],al
  413a94:	add    eax,0x1000000
  413a99:	add    BYTE PTR [rax],al
  413a9b:	add    BYTE PTR [rbx],al
  413a9d:	add    BYTE PTR [rax],al
  413a9f:	add    cl,al
  413aa1:	(bad)  
  413aa2:	add    BYTE PTR [rax],al
  413aa4:	rex.B
  413aa5:	add    BYTE PTR [r13+0x2e],r10b
  413aa9:	rex.B
  413aaa:	cs rex.RB
  413aac:	add    BYTE PTR cs:[rcx+0x46],al
  413ab0:	add    BYTE PTR [rcx+0x66],al
  413ab3:	addr32 push 0x73696e61
  413ab9:	je     0x413b1c
  413abb:	outs   dx,BYTE PTR ds:[rsi]
  413abc:	add    BYTE PTR [rcx+0x4c],al
  413abf:	add    BYTE PTR [rcx+0x6c],al
  413ac2:	(bad)
  413ac7:	add    BYTE PTR [rcx+0x4d],al
  413aca:	add    BYTE PTR [rcx+0x72],al
  413acd:	ins    DWORD PTR es:[rdi],dx
  413ace:	outs   dx,BYTE PTR gs:[rsi]
  413ad0:	imul   esp,DWORD PTR [rcx+0x0],0x4e004e41
  413ad7:	gs je  0x413b42
  413ada:	gs jb  0x413b49
  413add:	(bad)  
  413ade:	outs   dx,BYTE PTR ds:[rsi]
  413adf:	fs jae 0x413b02
  413ae2:	rex.B outs dx,BYTE PTR ds:[rsi]
  413ae4:	je     0x413b4f
  413ae6:	ins    BYTE PTR es:[rdi],dx
  413ae7:	ins    BYTE PTR es:[rdi],dx
  413ae8:	gs jae 0x413aeb
  413aeb:	push   r10
  413aed:	add    BYTE PTR [rcx+0x72],al
  413af0:	outs   dx,BYTE PTR gs:[esi]
  413af3:	je     0x413b5e
  413af5:	outs   dx,BYTE PTR ds:[rsi]
  413af6:	(bad)  
  413af7:	add    BYTE PTR [rcx+0x54],al
  413afa:	add    BYTE PTR [rcx+0x75],al
  413afd:	jae    0x413b73
  413aff:	jb     0x413b6a
  413b01:	(bad)  
  413b02:	add    BYTE PTR [rcx+0x55],al
  413b05:	add    BYTE PTR [rcx+0x75],al
  413b08:	jae    0x413b7e
  413b0a:	jb     0x413b6d
  413b0c:	ins    BYTE PTR es:[rdi],dx
  413b0d:	imul   esp,DWORD PTR [rcx+0x0],0x41005a41
  413b14:	jp     0x413b7b
  413b16:	jb     0x413b7a
  413b18:	(bad)  
  413b19:	imul   ebp,DWORD PTR [rdx+0x61],0x4142006e
  413b20:	add    BYTE PTR [rdx+0x6f],al
  413b23:	jae    0x413b93
  413b25:	imul   esp,DWORD PTR [rcx+0x20],0x20646e61
  413b2c:	rex.W
  413b2d:	gs jb  0x413baa
  413b30:	outs   dx,DWORD PTR gs:[esi]
  413b33:	jbe    0x413b9e
  413b35:	outs   dx,BYTE PTR ds:[rsi]
  413b36:	(bad)  
  413b37:	add    BYTE PTR [rdx+0x44],al
  413b3a:	add    BYTE PTR [rdx+0x61],al
  413b3d:	outs   dx,BYTE PTR ds:[rsi]
  413b3e:	ins    BYTE PTR es:[edi],dx
  413b40:	(bad)  
  413b41:	fs gs jae 0x413bad
  413b45:	add    BYTE PTR [rdx+0x45],al
  413b48:	add    BYTE PTR [rdx+0x65],al
  413b4b:	ins    BYTE PTR es:[rdi],dx
  413b4c:	imul   esi,DWORD PTR [ebp+0x6d],0x474200
  413b54:	rex.X jne 0x413bc3
  413b57:	addr32 (bad) 
  413b59:	jb     0x413bc4
  413b5b:	(bad)  
  413b5c:	add    BYTE PTR [rdx+0x48],al
  413b5f:	add    BYTE PTR [rdx+0x61],al
  413b62:	push   0x6e696172
  413b67:	add    BYTE PTR [rdx+0x4e],al
  413b6a:	add    BYTE PTR [rdx+0x72],al
  413b6d:	jne    0x413bdd
  413b6f:	imul   esp,DWORD PTR gs:[rax],0x75726144
  413b76:	jae    0x413beb
  413b78:	(bad)  
  413b79:	ins    BYTE PTR es:[rdi],dx
  413b7a:	(bad)  
  413b7b:	ins    DWORD PTR es:[rdi],dx
  413b7c:	add    BYTE PTR [rdx+0x4f],al
  413b7f:	add    BYTE PTR [rdx+0x6f],al
  413b82:	ins    BYTE PTR es:[rdi],dx
  413b83:	imul   esi,DWORD PTR [rsi+0x69],0x52420061
  413b8a:	add    BYTE PTR [rdx+0x72],al
  413b8d:	(bad)  
  413b8e:	jp     0x413bf9
  413b90:	ins    BYTE PTR es:[rdi],dx
  413b91:	add    BYTE PTR [rdx+0x54],al
  413b94:	add    BYTE PTR [rdx+0x68],al
  413b97:	jne    0x413c0d
  413b99:	(bad)  
  413b9a:	outs   dx,BYTE PTR ds:[rsi]
  413b9b:	add    BYTE PTR [rdx+0x59],al
  413b9e:	add    BYTE PTR [rdx+0x65],al
  413ba1:	ins    BYTE PTR es:[rdi],dx
  413ba2:	(bad)  
  413ba3:	jb     0x413c1a
  413ba5:	jae    0x413ba7
  413ba7:	rex.X pop rdx
  413ba9:	add    BYTE PTR [rdx+0x65],al
  413bac:	ins    BYTE PTR es:[rdi],dx
  413bad:	imul   edi,DWORD PTR [rdx+0x65],0x414300
  413bb4:	rex.XB (bad) 
  413bb6:	outs   dx,BYTE PTR ds:[rsi]
  413bb7:	(bad)  
  413bb8:	fs (bad) 
  413bba:	add    BYTE PTR [rbx+0x47],al
  413bbd:	add    BYTE PTR [rbx+0x6f],al
  413bc0:	outs   dx,BYTE PTR ds:[rsi]
  413bc1:	outs   dx,DWORD PTR ds:[esi]
  413bc3:	add    BYTE PTR [rbx+0x48],al
  413bc6:	add    BYTE PTR [rbx+0x77],dl
  413bc9:	imul   esi,DWORD PTR [rdx+rdi*2+0x65],0x6e616c72
  413bd1:	add    BYTE PTR fs:[rbx+0x49],al
  413bd5:	add    BYTE PTR [rbx+0x6f],al
  413bd8:	je     0x413c3f
  413bda:	and    BYTE PTR [rdi+riz*1+0x49],ah
  413bde:	jbe    0x413c4f
  413be0:	imul   esi,DWORD PTR [rdx+0x65],0x4c4300
  413be7:	rex.XB push 0x656c69
  413bed:	rex.XB
  413bee:	rex.WRB add BYTE PTR [r11+0x61],r8b
  413bf2:	ins    DWORD PTR es:[rdi],dx
  413bf3:	gs jb  0x413c65
  413bf6:	outs   dx,DWORD PTR ds:[rsi]
  413bf7:	outs   dx,BYTE PTR ds:[rsi]
  413bf8:	add    BYTE PTR [rbx+0x4e],al
  413bfb:	add    BYTE PTR [rax+0x65],dl
  413bfe:	outs   dx,DWORD PTR ds:[rsi]
  413bff:	jo     0x413c6d
  413c01:	gs (bad) 
  413c03:	jae    0x413c25
  413c05:	push   rdx
  413c06:	gs jo  0x413c7e
  413c09:	(bad)  
  413c0a:	ins    BYTE PTR es:[rdi],dx
  413c0b:	imul   esp,DWORD PTR [rbx+0x20],0x4320666f
  413c12:	push   0x616e69
  413c17:	rex.XB
  413c18:	rex.WRXB add BYTE PTR [r11+0x6f],r8b
  413c1c:	ins    BYTE PTR es:[rdi],dx
  413c1d:	outs   dx,DWORD PTR ds:[rsi]
  413c1e:	ins    DWORD PTR es:[rdi],dx
  413c1f:	(bad)  
  413c20:	imul   esp,DWORD PTR [rcx+0x0],0x43005243
  413c27:	outs   dx,DWORD PTR ds:[rsi]
  413c28:	jae    0x413c9e
  413c2a:	(bad)  
  413c2b:	and    BYTE PTR [rdx+0x69],dl
  413c2e:	movsxd esp,DWORD PTR [rcx+0x0]
  413c31:	rex.XB push r11
  413c33:	add    BYTE PTR [rbx+0x65],dl
  413c36:	jb     0x413c9a
  413c38:	imul   esp,DWORD PTR [rcx+0x20],0x20646e61
  413c3f:	rex.WRB outs dx,DWORD PTR ds:[rsi]
  413c41:	outs   dx,BYTE PTR ds:[rsi]
  413c42:	je     0x413ca9
  413c44:	outs   dx,BYTE PTR ds:[rsi]
  413c45:	gs addr32 jb 0x413cb8
  413c49:	add    BYTE PTR [rbx+0x5a],al
  413c4c:	add    BYTE PTR [rbx+0x7a],al
  413c4f:	movsxd ebp,DWORD PTR gs:[rax+0x20]
  413c53:	push   rdx
  413c54:	gs jo  0x413ccc
  413c57:	(bad)  
  413c58:	ins    BYTE PTR es:[rdi],dx
  413c59:	imul   esp,DWORD PTR [rbx+0x0],0x47004544
  413c60:	gs jb  0x413cd0
  413c63:	(bad)  
  413c64:	outs   dx,BYTE PTR ds:[rsi]
  413c65:	jns    0x413c67
  413c67:	rex.R
  413c68:	rex.WXB add BYTE PTR [r13+r12*2+0x6e],al
  413c6d:	ins    DWORD PTR es:[rdi],dx
  413c6e:	(bad)  
  413c6f:	jb     0x413cdc
  413c71:	add    BYTE PTR [rdi+rcx*2+0x0],al
  413c75:	rex.R outs dx,DWORD PTR ds:[rsi]
  413c77:	ins    DWORD PTR es:[rdi],dx
  413c78:	imul   ebp,DWORD PTR [rsi+0x69],0x206e6163
  413c7f:	push   rdx
  413c80:	gs jo  0x413cf8
  413c83:	(bad)  
  413c84:	ins    BYTE PTR es:[rdi],dx
  413c85:	imul   esp,DWORD PTR [rbx+0x0],0x41005a44
  413c8c:	ins    BYTE PTR es:[rdi],dx
  413c8d:	addr32 gs jb 0x413cfa
  413c91:	(bad)  
  413c92:	add    BYTE PTR [rbp+0x43],al
  413c95:	add    BYTE PTR [rbp+0x63],al
  413c98:	jne    0x413cfb
  413c9a:	outs   dx,DWORD PTR fs:[rsi]
  413c9c:	jb     0x413c9e
  413c9e:	rex.RB
  413c9f:	add    BYTE PTR [r13+0x73],r8b
  413ca3:	je     0x413d14
  413ca5:	outs   dx,BYTE PTR ds:[rsi]
  413ca6:	imul   esp,DWORD PTR [rcx+0x0],0x45004745
  413cad:	addr32 jns 0x413d20
  413cb0:	je     0x413cb2
  413cb2:	rex.RB push r10
  413cb4:	add    BYTE PTR [rbp+0x72],al
  413cb7:	imul   esi,DWORD PTR [rdx+rsi*2+0x65],0x53450061
  413cbf:	add    BYTE PTR [rbx+0x70],dl
  413cc2:	(bad)  
  413cc3:	imul   ebp,DWORD PTR [rsi+0x0],0x45005445
  413cca:	je     0x413d34
  413ccc:	imul   ebp,DWORD PTR [rdi+0x70],0x46006169
  413cd3:	rex.WB add BYTE PTR [r14+0x69],al
  413cd7:	outs   dx,BYTE PTR ds:[rsi]
  413cd8:	ins    BYTE PTR es:[rdi],dx
  413cd9:	(bad)  
  413cda:	outs   dx,BYTE PTR ds:[rsi]
  413cdb:	add    BYTE PTR fs:[rsi+0x4f],al
  413cdf:	add    BYTE PTR [rsi+0x61],al
  413ce2:	jb     0x413d53
  413ce4:	and    BYTE PTR gs:[rcx+0x73],cl
  413ce8:	ins    BYTE PTR es:[rdi],dx
  413ce9:	(bad)  
  413cea:	outs   dx,BYTE PTR ds:[rsi]
  413ceb:	fs jae 0x413cee
  413cee:	rex.RX push rdx
  413cf0:	add    BYTE PTR [rsi+0x72],al
  413cf3:	(bad)  
  413cf4:	outs   dx,BYTE PTR ds:[rsi]
  413cf5:	movsxd esp,DWORD PTR [rbp+0x0]
  413cf8:	rex.RXB
  413cf9:	rex.X add BYTE PTR [rbp+0x6e],dl
  413cfd:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x6e694b20
  413d05:	outs   dx,DWORD PTR fs:[esi]
  413d08:	ins    DWORD PTR es:[rdi],dx
  413d09:	add    BYTE PTR [rdi+0x44],al
  413d0c:	add    BYTE PTR [rbx+0x61],al
  413d0f:	jb     0x413d7a
  413d11:	(bad)
  413d16:	add    BYTE PTR [rdi+0x45],al
  413d19:	add    BYTE PTR [rdi+0x65],al
  413d1c:	outs   dx,DWORD PTR ds:[rsi]
  413d1d:	jb     0x413d86
  413d1f:	imul   esp,DWORD PTR [rcx+0x0],0x47004c47
  413d26:	jb     0x413d8d
  413d28:	outs   dx,BYTE PTR gs:[rsi]
  413d2a:	ins    BYTE PTR es:[rdi],dx
  413d2b:	(bad)  
  413d2c:	outs   dx,BYTE PTR ds:[rsi]
  413d2d:	add    BYTE PTR fs:[rdi+0x52],al
  413d31:	add    BYTE PTR [rdi+0x72],al
  413d34:	gs movsxd esp,DWORD PTR gs:[rbp+0x0]
  413d39:	rex.RXB push r12
  413d3b:	add    BYTE PTR [rdi+0x75],al
  413d3e:	(bad)  
  413d3f:	je     0x413da6
  413d41:	ins    DWORD PTR es:[rdi],dx
  413d42:	(bad)  
  413d43:	ins    BYTE PTR es:[rdi],dx
  413d44:	(bad)  
  413d45:	add    BYTE PTR [rax+0x4b],cl
  413d48:	add    BYTE PTR [rax+0x6f],cl
  413d4b:	outs   dx,BYTE PTR ds:[rsi]
  413d4c:	and    BYTE PTR [ebx+0x6f],cl
  413d50:	outs   dx,BYTE PTR ds:[rsi]
  413d51:	add    BYTE PTR [eax+0x6f],cl
  413d55:	outs   dx,BYTE PTR ds:[rsi]
  413d56:	and    BYTE PTR [ebx+0x6f],cl
  413d5a:	outs   dx,BYTE PTR ds:[rsi]
  413d5b:	and    BYTE PTR [ebx+0x2e],dl
  413d5f:	rex.B
  413d60:	cs push rdx
  413d62:	add    BYTE PTR cs:[rax+0x4e],cl
  413d66:	add    BYTE PTR [rax+0x6f],cl
  413d69:	outs   dx,BYTE PTR ds:[rsi]
  413d6a:	fs jne 0x413ddf
  413d6d:	(bad)  
  413d6e:	jae    0x413d70
  413d70:	rex.W push rdx
  413d72:	add    BYTE PTR [rbx+0x72],al
  413d75:	outs   dx,DWORD PTR ds:[rsi]
  413d76:	(bad)  
  413d77:	je     0x413de2
  413d79:	(bad)  
  413d7a:	add    BYTE PTR [rax+0x54],cl
  413d7d:	add    BYTE PTR [rax+0x61],cl
  413d80:	imul   esi,DWORD PTR [rcx+rbp*2+0x0],0x48005548
  413d88:	jne    0x413df8
  413d8a:	addr32 (bad) 
  413d8c:	jb     0x413e07
  413d8e:	add    BYTE PTR [rcx+0x44],cl
  413d91:	add    BYTE PTR [rcx+0x6e],cl
  413d94:	outs   dx,DWORD PTR fs:[rsi]
  413d96:	outs   dx,BYTE PTR ds:[rsi]
  413d97:	gs jae 0x413e03
  413d9a:	(bad)  
  413d9b:	add    BYTE PTR [rcx+0x45],cl
  413d9e:	add    BYTE PTR [rcx+0x72],cl
  413da1:	gs ins BYTE PTR es:[rdi],dx
  413da3:	(bad)  
  413da4:	outs   dx,BYTE PTR ds:[rsi]
  413da5:	add    BYTE PTR fs:[rcx+0x4c],cl
  413da9:	add    BYTE PTR [rcx+0x73],cl
  413dac:	jb     0x413e0f
  413dae:	gs ins BYTE PTR es:[rdi],dx
  413db0:	add    BYTE PTR [rcx+0x4e],cl
  413db3:	add    BYTE PTR [rcx+0x6e],cl
  413db6:	imul   esp,DWORD PTR fs:[rcx+0x0],0x49005149
  413dbe:	jb     0x413e21
  413dc0:	jno    0x413dc2
  413dc2:	rex.WB push r10
  413dc4:	add    BYTE PTR [rcx+0x72],cl
  413dc7:	(bad)  
  413dc8:	outs   dx,BYTE PTR ds:[rsi]
  413dc9:	add    BYTE PTR [rcx+0x53],cl
  413dcc:	add    BYTE PTR [rcx+0x63],cl
  413dcf:	gs ins BYTE PTR es:[rdi],dx
  413dd1:	(bad)  
  413dd2:	outs   dx,BYTE PTR ds:[rsi]
  413dd3:	add    BYTE PTR fs:[rcx+0x54],cl
  413dd7:	add    BYTE PTR [rcx+0x74],cl
  413dda:	(bad)  
  413ddb:	ins    BYTE PTR es:[rdi],dx
  413ddc:	jns    0x413dde
  413dde:	rex.WX
  413ddf:	rex.WRB add BYTE PTR [r10+0x61],r9b
  413de3:	ins    DWORD PTR es:[rdi],dx
  413de4:	(bad)  
  413de5:	imul   esp,DWORD PTR [rbx+0x61],0x4f4a00
  413dec:	rex.WX outs dx,DWORD PTR ds:[rsi]
  413dee:	jb     0x413e54
  413df0:	(bad)  
  413df1:	outs   dx,BYTE PTR ds:[rsi]
  413df2:	add    BYTE PTR [rdx+0x50],cl
  413df5:	add    BYTE PTR [rdx+0x61],cl
  413df8:	jo     0x413e5b
  413dfa:	outs   dx,BYTE PTR ds:[rsi]
  413dfb:	add    BYTE PTR [rbx+0x45],cl
  413dfe:	add    BYTE PTR [rbx+0x65],cl
  413e01:	outs   dx,BYTE PTR ds:[rsi]
  413e02:	jns    0x413e65
  413e04:	add    BYTE PTR [rbx+0x47],cl
  413e07:	add    BYTE PTR [rbx+0x79],cl
  413e0a:	jb     0x413e73
  413e0c:	jns    0x413e88
  413e0e:	jae    0x413e84
  413e10:	(bad)  
  413e11:	outs   dx,BYTE PTR ds:[rsi]
  413e12:	add    BYTE PTR [rbx+0x48],cl
  413e15:	add    BYTE PTR [rbx+0x61],al
  413e18:	ins    DWORD PTR es:[rdi],dx
  413e19:	(bad)  
  413e1a:	outs   dx,DWORD PTR ds:[rsi]
  413e1b:	imul   esp,DWORD PTR fs:[rcx+0x0],0x5300524b
  413e23:	outs   dx,DWORD PTR ds:[rsi]
  413e24:	jne    0x413e9a
  413e26:	push   0x726f4b20
  413e2b:	gs (bad) 
  413e2d:	add    BYTE PTR [rbx+0x57],cl
  413e30:	add    BYTE PTR [rbx+0x75],cl
  413e33:	ja     0x413e96
  413e35:	imul   esi,DWORD PTR [rax+rax*1+0x4b],0x614b005a
  413e3d:	jp     0x413ea0
  413e3f:	imul   ebp,DWORD PTR [rax+0x73],0x74
  413e43:	(bad)  
  413e44:	outs   dx,BYTE PTR ds:[rsi]
  413e45:	add    BYTE PTR [rcx+rax*2+0x0],cl
  413e49:	rex.WR (bad) 
  413e4b:	outs   dx,DWORD PTR ds:[rsi]
  413e4c:	jae    0x413e4e
  413e4e:	rex.WR
  413e4f:	add    BYTE PTR [rbp+r12*2+0x62],cl
  413e54:	(bad)  
  413e55:	outs   dx,BYTE PTR ds:[rsi]
  413e56:	outs   dx,DWORD PTR ds:[rsi]
  413e57:	outs   dx,BYTE PTR ds:[rsi]
  413e58:	add    BYTE PTR [rcx+rcx*2+0x0],cl
  413e5c:	imul   r12,QWORD PTR [rbp+0x63],0x6e657468
  413e64:	jae    0x413eda
  413e66:	imul   ebp,DWORD PTR gs:[rsi+0x0],0x53004b4c
  413e6e:	jb     0x413ed9
  413e70:	and    BYTE PTR [rcx+riz*2+0x6e],cl
  413e74:	imul   esp,DWORD PTR [rcx+0x0],0x4c
  413e78:	push   rsp
  413e79:	add    BYTE PTR [rcx+rbp*2+0x74],cl
  413e7d:	push   0x696e6175
  413e82:	(bad)  
  413e83:	add    BYTE PTR [rbp+rdx*2+0x0],cl
  413e87:	rex.WR jne 0x413f02
  413e8a:	gs ins DWORD PTR es:[rdi],dx
  413e8c:	(bad)  
  413e8d:	outs   dx,DWORD PTR ds:[rsi]
  413e8e:	jne    0x413f02
  413e90:	add    BYTE PTR [esi+edx*2+0x0],cl
  413e95:	rex.WR (bad) 
  413e97:	je     0x413f0f
  413e99:	imul   esp,DWORD PTR [rcx+0x0],0x4c00594c
  413ea0:	imul   esp,DWORD PTR [rdx+0x79],0x414d0061
  413ea7:	add    BYTE PTR [rbp+0x6f],cl
  413eaa:	jb     0x413f1b
  413eac:	movsxd esp,DWORD PTR [rbx+0x6f]
  413eaf:	add    BYTE PTR [rbp+0x43],cl
  413eb2:	add    BYTE PTR [rax+0x72],dl
  413eb5:	imul   ebp,DWORD PTR [rsi+0x63],0x6c617069
  413ebc:	imul   esi,DWORD PTR [rcx+rdi*2+0x20],0x4d20666f
  413ec4:	outs   dx,DWORD PTR ds:[rsi]
  413ec5:	outs   dx,BYTE PTR ds:[rsi]
  413ec6:	(bad)  
  413ec7:	movsxd ebp,DWORD PTR [rdi+0x0]
  413eca:	rex.WRB
  413ecb:	add    BYTE PTR [rbp+0x6f],r9b
  413ecf:	ins    BYTE PTR es:[rdi],dx
  413ed0:	fs (bad) 
  413ed2:	jbe    0x413f35
  413ed4:	add    BYTE PTR [rbp+0x6f],cl
  413ed7:	ins    BYTE PTR es:[rdi],dx
  413ed8:	outs   dx,DWORD PTR fs:[rsi]
  413eda:	jbe    0x413f3d
  413edc:	add    BYTE PTR [rbp+0x45],cl
  413edf:	add    BYTE PTR [rbp+0x6f],cl
  413ee2:	outs   dx,BYTE PTR ds:[rsi]
  413ee3:	je     0x413f4a
  413ee5:	outs   dx,BYTE PTR ds:[rsi]
  413ee6:	gs addr32 jb 0x413f59
  413eea:	add    BYTE PTR [rbp+0x4b],cl
  413eed:	add    BYTE PTR [rax],al
  413eef:	add    BYTE PTR [rsi+0x6f],al
  413ef2:	jb     0x413f61
  413ef4:	gs jb  0x413f17
  413ef7:	pop    rcx
  413ef8:	jne    0x413f61
  413efa:	outs   dx,DWORD PTR ds:[rsi]
  413efb:	jae    0x413f69
  413efd:	(bad)  
  413efe:	jbe    0x413f20
  413f00:	push   rdx
  413f01:	gs jo  0x413f79
  413f04:	(bad)  
  413f05:	ins    BYTE PTR es:[rdi],dx
  413f06:	imul   esp,DWORD PTR [rbx+0x20],0x4d20666f
  413f0d:	(bad)  
  413f0e:	movsxd esp,DWORD PTR [rbp+0x64]
  413f11:	outs   dx,DWORD PTR ds:[rsi]
  413f12:	outs   dx,BYTE PTR ds:[rsi]
  413f13:	imul   esp,DWORD PTR [rcx+0x0],0x4d004c4d
  413f1a:	(bad)  
  413f1b:	ins    BYTE PTR es:[rdi],dx
  413f1c:	imul   eax,DWORD PTR [rax],0x4d004d4d
  413f22:	jns    0x413f85
  413f24:	outs   dx,BYTE PTR ds:[rsi]
  413f25:	ins    DWORD PTR es:[rdi],dx
  413f26:	(bad)  
  413f27:	jb     0x413f29
  413f29:	rex.WRB
  413f2a:	rex.WRX add BYTE PTR [rbp+0x6f],r9b
  413f2e:	outs   dx,BYTE PTR ds:[rsi]
  413f2f:	outs   dx,DWORD PTR ds:[esi]
  413f31:	ins    BYTE PTR es:[rdi],dx
  413f32:	imul   esp,DWORD PTR [rcx+0x0],0x4d004f4d
  413f39:	(bad)  
  413f3a:	movsxd esp,DWORD PTR [rcx+0x75]
  413f3d:	and    BYTE PTR [rbx+0x2e],dl
  413f40:	rex.B
  413f41:	cs push rdx
  413f43:	add    BYTE PTR cs:[rbp+0x54],cl
  413f47:	add    BYTE PTR [rbp+0x61],cl
  413f4a:	ins    BYTE PTR es:[rdi],dx
  413f4b:	je     0x413fae
  413f4d:	add    BYTE PTR [rbp+0x56],cl
  413f50:	add    BYTE PTR [rbp+0x61],cl
  413f53:	ins    BYTE PTR es:[rdi],dx
  413f54:	imul   esi,DWORD PTR fs:[rsi+0x65],0x584d0073
  413f5c:	add    BYTE PTR [rbp+0x65],cl
  413f5f:	js     0x413fca
  413f61:	movsxd ebp,DWORD PTR [rdi+0x0]
  413f64:	rex.WRB pop r9
  413f66:	add    BYTE PTR [rbp+0x61],cl
  413f69:	ins    BYTE PTR es:[rdi],dx
  413f6a:	(bad)  
  413f6b:	jns    0x413fe0
  413f6d:	imul   esp,DWORD PTR [rcx+0x0],0x4e00474e
  413f74:	imul   esp,DWORD PTR [rdi+0x65],0x616972
  413f7b:	rex.WRX
  413f7c:	rex.WB add BYTE PTR [r14+0x69],cl
  413f80:	movsxd esp,DWORD PTR [rcx+0x72]
  413f83:	(bad)  
  413f84:	addr32 jne 0x413fe8
  413f87:	add    BYTE PTR [rsi+0x4c],cl
  413f8a:	add    BYTE PTR [rsi+0x65],cl
  413f8d:	je     0x413ff7
  413f8f:	gs jb  0x413ffe
  413f92:	(bad)  
  413f93:	outs   dx,BYTE PTR ds:[rsi]
  413f94:	fs jae 0x413f97
  413f97:	rex.WRX
  413f98:	rex.WRXB add BYTE PTR [r14+0x6f],r9b
  413f9c:	jb     0x414015
  413f9e:	(bad)  
  413f9f:	jns    0x413fa1
  413fa1:	rex.WRX push rax
  413fa3:	add    BYTE PTR [rsi+0x65],cl
  413fa6:	jo     0x414009
  413fa8:	ins    BYTE PTR es:[rdi],dx
  413fa9:	add    BYTE PTR [rsi+0x5a],cl
  413fac:	add    BYTE PTR [rsi+0x65],cl
  413faf:	ja     0x413fd1
  413fb1:	pop    rdx
  413fb2:	gs (bad) 
  413fb4:	ins    BYTE PTR es:[rdi],dx
  413fb5:	(bad)  
  413fb6:	outs   dx,BYTE PTR ds:[rsi]
  413fb7:	add    BYTE PTR fs:[rdi+0x4d],cl
  413fbb:	add    BYTE PTR [rdi+0x6d],cl
  413fbe:	(bad)  
  413fbf:	outs   dx,BYTE PTR ds:[rsi]
  413fc0:	add    BYTE PTR [rax+0x41],dl
  413fc3:	add    BYTE PTR [rax+0x61],dl
  413fc6:	outs   dx,BYTE PTR ds:[rsi]
  413fc7:	(bad)  
  413fc8:	ins    DWORD PTR es:[rdi],dx
  413fc9:	(bad)  
  413fca:	add    BYTE PTR [rax+0x45],dl
  413fcd:	add    BYTE PTR [rax+0x65],dl
  413fd0:	jb     0x414047
  413fd2:	add    BYTE PTR [rax+0x48],dl
  413fd5:	add    BYTE PTR [rax+0x68],dl
  413fd8:	imul   ebp,DWORD PTR [rcx+rbp*2+0x70],0x656e6970
  413fe0:	jae    0x413fe2
  413fe2:	push   rax
  413fe3:	rex.WXB add BYTE PTR [r9+0x73],cl
  413fe7:	ins    BYTE PTR es:[rdi],dx
  413fe8:	(bad)  
  413fe9:	ins    DWORD PTR es:[rdi],dx
  413fea:	imul   esp,DWORD PTR [rbx+0x20],0x75706552
  413ff1:	(bad)  
  413ff2:	ins    BYTE PTR es:[rdi],dx
  413ff3:	imul   esp,DWORD PTR [rbx+0x20],0x5020666f
  413ffa:	(bad)  
  413ffb:	imul   ebp,DWORD PTR [rcx+0x73],0x74
  413fff:	(bad)  
  414000:	outs   dx,BYTE PTR ds:[rsi]
  414001:	add    BYTE PTR [rax+0x4c],dl
  414004:	add    BYTE PTR [rax+0x6f],dl
  414007:	ins    BYTE PTR es:[rdi],dx
  414008:	(bad)  
  414009:	outs   dx,BYTE PTR ds:[rsi]
  41400a:	add    BYTE PTR fs:[rax+0x52],dl
  41400e:	add    BYTE PTR [rax+0x75],dl
  414011:	gs jb  0x414088
  414014:	outs   dx,DWORD PTR ds:[rsi]
  414015:	and    BYTE PTR [rdx+0x69],dl
  414018:	movsxd ebp,DWORD PTR [rdi+0x0]
  41401b:	push   rax
  41401c:	push   rsp
  41401d:	add    BYTE PTR [rax+0x6f],dl
  414020:	jb     0x414096
  414022:	jne    0x41408b
  414024:	(bad)  
  414025:	ins    BYTE PTR es:[rdi],dx
  414026:	add    BYTE PTR [rax+0x59],dl
  414029:	add    BYTE PTR [rax+0x61],dl
  41402c:	jb     0x41408f
  41402e:	addr32 jne 0x414092
  414031:	jns    0x414033
  414033:	push   rcx
  414034:	add    BYTE PTR [r9+0x61],dl
  414038:	je     0x41409b
  41403a:	jb     0x41403c
  41403c:	push   rdx
  41403d:	add    BYTE PTR [r10+0x65],r10b
  414041:	jne    0x4140b1
  414043:	imul   ebp,DWORD PTR [rdi+0x6e],0x4f5200
  41404a:	push   rdx
  41404b:	outs   dx,DWORD PTR ds:[rsi]
  41404c:	ins    DWORD PTR es:[rdi],dx
  41404d:	(bad)  
  41404e:	outs   dx,BYTE PTR ds:[rsi]
  41404f:	imul   esp,DWORD PTR [rcx+0x0],0x53005352
  414056:	gs jb  0x4140bb
  414059:	imul   esp,DWORD PTR [rcx+0x0],0x52005552
  414060:	jne    0x4140d5
  414062:	jae    0x4140cd
  414064:	(bad)  
  414065:	add    BYTE PTR [rdx+0x57],dl
  414068:	add    BYTE PTR [rdx+0x77],dl
  41406b:	(bad)  
  41406c:	outs   dx,BYTE PTR ds:[rsi]
  41406d:	fs (bad) 
  41406f:	add    BYTE PTR [rbx+0x41],dl
  414072:	add    BYTE PTR [rbx+0x61],dl
  414075:	jne    0x4140db
  414077:	imul   esp,DWORD PTR [rax],0x62617241
  41407d:	imul   esp,DWORD PTR [rcx+0x0],0x53004553
  414084:	ja     0x4140eb
  414086:	fs outs dx,BYTE PTR gs:[rsi]
  414089:	add    BYTE PTR [rbx+0x47],dl
  41408c:	add    BYTE PTR [rbx+0x69],dl
  41408f:	outs   dx,BYTE PTR ds:[rsi]
  414090:	addr32 (bad) 
  414092:	jo     0x414103
  414094:	jb     0x4140fb
  414096:	add    BYTE PTR [rbx+0x49],dl
  414099:	add    BYTE PTR [rbx+0x6c],dl
  41409c:	outs   dx,DWORD PTR ds:[rsi]
  41409d:	jbe    0x414104
  41409f:	outs   dx,BYTE PTR ds:[rsi]
  4140a0:	imul   esp,DWORD PTR [rcx+0x0],0x53004b53
  4140a7:	ins    BYTE PTR es:[rdi],dx
  4140a8:	outs   dx,DWORD PTR ds:[rsi]
  4140a9:	jbe    0x41410c
  4140ab:	imul   eax,DWORD PTR [rax],0x53
  4140ae:	rex.WRX add BYTE PTR [rbx+0x65],r10b
  4140b2:	outs   dx,BYTE PTR ds:[rsi]
  4140b3:	gs addr32 (bad) 
  4140b6:	ins    BYTE PTR es:[rdi],dx
  4140b7:	add    BYTE PTR [rbx+0x4f],dl
  4140ba:	add    BYTE PTR [rbx+0x6f],dl
  4140bd:	ins    DWORD PTR es:[rdi],dx
  4140be:	(bad)  
  4140bf:	ins    BYTE PTR es:[rdi],dx
  4140c0:	imul   esp,DWORD PTR [rcx+0x0],0x53005253
  4140c7:	jne    0x41413b
  4140c9:	imul   ebp,DWORD PTR [rsi+0x61],0x5300656d
  4140d0:	push   rsi
  4140d1:	add    BYTE PTR [rbp+0x6c],al
  4140d4:	and    BYTE PTR [rbx+0x61],dl
  4140d7:	ins    BYTE PTR es:[rdi],dx
  4140d8:	jbe    0x41413b
  4140da:	outs   dx,DWORD PTR fs:[rsi]
  4140dc:	jb     0x4140de
  4140de:	push   rbx
  4140df:	pop    rcx
  4140e0:	add    BYTE PTR [rbx+0x79],dl
  4140e3:	jb     0x41414e
  4140e5:	(bad)  
  4140e6:	add    BYTE PTR [rax+rcx*2+0x0],dl
  4140ea:	push   rsp
  4140eb:	push   0x616c6961
  4140f0:	outs   dx,BYTE PTR ds:[rsi]
  4140f1:	add    BYTE PTR fs:[rdx+rcx*2+0x0],dl
  4140f6:	push   rsp
  4140f7:	(bad)  
  4140f8:	push   0x69
  4140fa:	imul   ebp,DWORD PTR [rcx+0x73],0x74
  4140fe:	(bad)  
  4140ff:	outs   dx,BYTE PTR ds:[rsi]
  414100:	add    BYTE PTR [rbp+rcx*2+0x0],dl
  414104:	push   rsp
  414105:	jne    0x414179
  414107:	imul   ebp,DWORD PTR [rbp+0x65],0x6e
  41410b:	imul   esi,DWORD PTR [rbx+0x74],0x54006e61
  414112:	rex.WRX add BYTE PTR [rbp+r14*2+0x6e],r10b
  414117:	imul   esi,DWORD PTR [rbx+0x69],0x52540061
  41411e:	add    BYTE PTR [rbp+rsi*2+0x72],dl
  414122:	imul   esp,DWORD PTR [rbp+0x79],0x0
  414126:	push   rsp
  414127:	push   rsp
  414128:	add    BYTE PTR [rdx+rsi*2+0x69],dl
  41412c:	outs   dx,BYTE PTR ds:[rsi]
  41412d:	imul   esp,DWORD PTR [rcx+riz*2+0x64],0x646e6120
  414135:	and    BYTE PTR [rdi+rbp*2+0x62],dl
  414139:	(bad)  
  41413a:	outs   dx,DWORD PTR ds:[esi]
  41413c:	add    BYTE PTR [rdi+rdx*2+0x0],dl
  414140:	push   rsp
  414141:	(bad)  
  414142:	imul   esi,DWORD PTR [rdi+0x61],0x5a54006e
  414149:	add    BYTE PTR [rcx+riz*2+0x6e],dl
  41414d:	jp     0x4141b0
  41414f:	outs   dx,BYTE PTR ds:[rsi]
  414150:	imul   esp,DWORD PTR [rcx+0x0],0x55004155
  414157:	imul   esi,DWORD PTR [rdx+0x61],0x69
  41415b:	outs   dx,BYTE PTR ds:[rsi]
  41415c:	add    BYTE PTR gs:[rbp+0x53],dl
  414160:	add    BYTE PTR [rbp+0x6e],dl
  414163:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x61745320
  41416b:	je     0x4141d2
  41416d:	jae    0x41416f
  41416f:	push   rbp
  414170:	pop    rcx
  414171:	add    BYTE PTR [rbp+0x72],dl
  414174:	jne    0x4141dd
  414176:	jne    0x4141d9
  414178:	jns    0x41417a
  41417a:	push   rsi
  41417b:	add    BYTE PTR [r14+0x61],dl
  41417f:	je     0x4141ea
  414181:	movsxd esp,DWORD PTR [rcx+0x6e]
  414184:	add    BYTE PTR [rsi+0x45],dl
  414187:	add    BYTE PTR [rsi+0x65],dl
  41418a:	outs   dx,BYTE PTR ds:[rsi]
  41418b:	gs jp  0x414203
  41418e:	gs ins BYTE PTR es:[rdi],dx
  414190:	(bad)  
  414191:	add    BYTE PTR [rsi+0x4e],dl
  414194:	add    BYTE PTR [rsi+0x69],dl
  414197:	gs je  0x4141ba
  41419a:	rex.WRX (bad) 
  41419c:	ins    DWORD PTR es:[rdi],dx
  41419d:	add    BYTE PTR [rcx+0x45],bl
  4141a0:	add    BYTE PTR [rcx+0x65],bl
  4141a3:	ins    DWORD PTR es:[rdi],dx
  4141a4:	outs   dx,BYTE PTR gs:[rsi]
  4141a6:	add    BYTE PTR [rdx+0x41],bl
  4141a9:	add    BYTE PTR [rbx+0x6f],dl
  4141ac:	jne    0x414222
  4141ae:	push   0x72664120
  4141b3:	imul   esp,DWORD PTR [rbx+0x61],0x575a00
  4141ba:	pop    rdx
  4141bb:	imul   ebp,DWORD PTR [rbp+0x62],0x65776261
	...
  4141fe:	add    BYTE PTR [rax],al
  414200:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  414201:	cmp    al,BYTE PTR [rcx+0x0]
  414204:	add    BYTE PTR [rax],al
  414206:	add    BYTE PTR [rax],al
  414208:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  414209:	cmp    al,BYTE PTR [rcx+0x0]
  41420c:	add    BYTE PTR [rax],al
  41420e:	add    BYTE PTR [rax],al
  414210:	scas   al,BYTE PTR es:[rdi]
  414211:	cmp    al,BYTE PTR [rcx+0x0]
  414214:	add    BYTE PTR [rax],al
  414216:	add    BYTE PTR [rax],al
  414218:	mov    cl,0x3a
  41421a:	add    BYTE PTR [r8],al
  41421d:	add    BYTE PTR [rax],al
  41421f:	add    BYTE PTR [rbp+0x413a],bh
  414225:	add    BYTE PTR [rax],al
  414227:	add    al,al
  414229:	cmp    al,BYTE PTR [rcx+0x0]
  41422c:	add    BYTE PTR [rax],al
  41422e:	add    BYTE PTR [rax],al
  414230:	enter  0x413a,0x0
  414234:	add    BYTE PTR [rax],al
  414236:	add    BYTE PTR [rax],al
  414238:	retf   
  414239:	cmp    al,BYTE PTR [rcx+0x0]
  41423c:	add    BYTE PTR [rax],al
  41423e:	add    BYTE PTR [rax],al
  414240:	sar    DWORD PTR [rdx],cl
  414242:	add    BYTE PTR [r8],al
  414245:	add    BYTE PTR [rax],al
  414247:	add    dh,dl
  414249:	cmp    al,BYTE PTR [rcx+0x0]
  41424c:	add    BYTE PTR [rax],al
  41424e:	add    BYTE PTR [rax],al
  414250:	jmp    0x41428c
  414252:	add    BYTE PTR [r8],al
  414255:	add    BYTE PTR [rax],al
  414257:	add    dh,ch
  414259:	cmp    al,BYTE PTR [rcx+0x0]
  41425c:	add    BYTE PTR [rax],al
  41425e:	add    BYTE PTR [rax],al
  414260:	clc    
  414261:	cmp    al,BYTE PTR [rcx+0x0]
  414264:	add    BYTE PTR [rax],al
  414266:	add    BYTE PTR [rax],al
  414268:	sti    
  414269:	cmp    al,BYTE PTR [rcx+0x0]
  41426c:	add    BYTE PTR [rax],al
  41426e:	add    BYTE PTR [rax],al
  414270:	add    edi,DWORD PTR [rbx]
  414272:	add    BYTE PTR [r8],al
  414275:	add    BYTE PTR [rax],al
  414277:	add    BYTE PTR [rsi],al
  414279:	cmp    eax,DWORD PTR [rcx+0x0]
  41427c:	add    BYTE PTR [rax],al
  41427e:	add    BYTE PTR [rax],al
  414280:	adc    BYTE PTR [rbx],bh
  414282:	add    BYTE PTR [r8],al
  414285:	add    BYTE PTR [rax],al
  414287:	add    BYTE PTR [rbx],dl
  414289:	cmp    eax,DWORD PTR [rcx+0x0]
  41428c:	add    BYTE PTR [rax],al
  41428e:	add    BYTE PTR [rax],al
  414290:	(bad)  
  414291:	cmp    eax,DWORD PTR [rcx+0x0]
  414294:	add    BYTE PTR [rax],al
  414296:	add    BYTE PTR [rax],al
  414298:	and    DWORD PTR [rbx],edi
  41429a:	add    BYTE PTR [r8],al
  41429d:	add    BYTE PTR [rax],al
  41429f:	add    BYTE PTR [rax],bh
  4142a1:	cmp    eax,DWORD PTR [rcx+0x0]
  4142a4:	add    BYTE PTR [rax],al
  4142a6:	add    BYTE PTR [rax],al
  4142a8:	cmp    edi,DWORD PTR [rbx]
  4142aa:	add    BYTE PTR [r8],al
  4142ad:	add    BYTE PTR [rax],al
  4142af:	add    BYTE PTR [rsi+0x3b],al
  4142b2:	add    BYTE PTR [r8],al
  4142b5:	add    BYTE PTR [rax],al
  4142b7:	add    BYTE PTR [rcx+0x3b],cl
  4142ba:	add    BYTE PTR [r8],al
  4142bd:	add    BYTE PTR [rax],al
  4142bf:	add    BYTE PTR [rcx+0x3b],dl
  4142c2:	add    BYTE PTR [r8],al
  4142c5:	add    BYTE PTR [rax],al
  4142c7:	add    BYTE PTR [rbx+rdi*1+0x41],dl
  4142cb:	add    BYTE PTR [rax],al
  4142cd:	add    BYTE PTR [rax],al
  4142cf:	add    BYTE PTR [rbp+0x3b],bl
  4142d2:	add    BYTE PTR [r8],al
  4142d5:	add    BYTE PTR [rax],al
  4142d7:	add    BYTE PTR [rax+0x3b],ah
  4142da:	add    BYTE PTR [r8],al
  4142dd:	add    BYTE PTR [rax],al
  4142df:	add    BYTE PTR [rax+0x3b],ch
  4142e2:	add    BYTE PTR [r8],al
  4142e5:	add    BYTE PTR [rax],al
  4142e7:	add    BYTE PTR [rbx+0x3b],ch
  4142ea:	add    BYTE PTR [r8],al
  4142ed:	add    BYTE PTR [rax],al
  4142ef:	add    BYTE PTR [rbp+0x3b],bh
  4142f2:	add    BYTE PTR [r8],al
  4142f5:	add    BYTE PTR [rax],al
  4142f7:	add    BYTE PTR [rax+0x413b],al
  4142fd:	add    BYTE PTR [rax],al
  4142ff:	add    BYTE PTR [rax+0x413b],cl
  414305:	add    BYTE PTR [rax],al
  414307:	add    BYTE PTR [rbx+0x413b],cl
  41430d:	add    BYTE PTR [rax],al
  41430f:	add    BYTE PTR [rdx+0x413b],dl
  414315:	add    BYTE PTR [rax],al
  414317:	add    BYTE PTR [rbp+0x413b],dl
  41431d:	add    BYTE PTR [rax],al
  41431f:	add    BYTE PTR [rbx+rdi*1+0x41],bl
  414326:	add    BYTE PTR [rax],al
  414328:	lahf   
  414329:	cmp    eax,DWORD PTR [rcx+0x0]
  41432c:	add    BYTE PTR [rax],al
  41432e:	add    BYTE PTR [rax],al
  414330:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  414331:	cmp    eax,DWORD PTR [rcx+0x0]
  414334:	add    BYTE PTR [rax],al
  414336:	add    BYTE PTR [rax],al
  414338:	stos   BYTE PTR es:[rdi],al
  414339:	cmp    eax,DWORD PTR [rcx+0x0]
  41433c:	add    BYTE PTR [rax],al
  41433e:	add    BYTE PTR [rax],al
  414340:	mov    cl,0x3b
  414342:	add    BYTE PTR [r8],al
  414345:	add    BYTE PTR [rax],al
  414347:	add    BYTE PTR [rbx+rdi*1+0x41],dh
  41434e:	add    BYTE PTR [rax],al
  414350:	mov    ebx,0x413b
  414355:	add    BYTE PTR [rax],al
  414357:	add    BYTE PTR [rsi+0x413b],bh
  41435d:	add    BYTE PTR [rax],al
  41435f:	add    ah,al
  414361:	cmp    eax,DWORD PTR [rcx+0x0]
  414364:	add    BYTE PTR [rax],al
  414366:	add    BYTE PTR [rax],al
  414368:	(bad)  
  414369:	cmp    eax,DWORD PTR [rcx+0x0]
  41436c:	add    BYTE PTR [rax],al
  41436e:	add    BYTE PTR [rax],al
  414370:	sar    DWORD PTR [rbx],cl
  414372:	add    BYTE PTR [r8],al
  414375:	add    BYTE PTR [rax],al
  414377:	add    dh,dl
  414379:	cmp    eax,DWORD PTR [rcx+0x0]
  41437c:	add    BYTE PTR [rax],al
  41437e:	add    BYTE PTR [rax],al
  414380:	in     al,0x3b
  414382:	add    BYTE PTR [r8],al
  414385:	add    BYTE PTR [rax],al
  414387:	add    bh,ah
  414389:	cmp    eax,DWORD PTR [rcx+0x0]
  41438c:	add    BYTE PTR [rax],al
  41438e:	add    BYTE PTR [rax],al
  414390:	in     eax,dx
  414391:	cmp    eax,DWORD PTR [rcx+0x0]
  414394:	add    BYTE PTR [rax],al
  414396:	add    BYTE PTR [rax],al
  414398:	lock cmp eax,DWORD PTR [rcx+0x0]
  41439c:	add    BYTE PTR [rax],al
  41439e:	add    BYTE PTR [rax],al
  4143a0:	stc    
  4143a1:	cmp    eax,DWORD PTR [rcx+0x0]
  4143a4:	add    BYTE PTR [rax],al
  4143a6:	add    BYTE PTR [rax],al
  4143a8:	cld    
  4143a9:	cmp    eax,DWORD PTR [rcx+0x0]
  4143ac:	add    BYTE PTR [rax],al
  4143ae:	add    BYTE PTR [rax],al
  4143b0:	(bad)  
  4143b1:	cmp    al,0x41
  4143b3:	add    BYTE PTR [rax],al
  4143b5:	add    BYTE PTR [rax],al
  4143b7:	add    BYTE PTR [rdx],bl
  4143b9:	cmp    al,0x41
  4143bb:	add    BYTE PTR [rax],al
  4143bd:	add    BYTE PTR [rax],al
  4143bf:	add    BYTE PTR [rbx],ah
  4143c1:	cmp    al,0x41
  4143c3:	add    BYTE PTR [rax],al
  4143c5:	add    BYTE PTR [rax],al
  4143c7:	add    BYTE PTR [rsi],ah
  4143c9:	cmp    al,0x41
  4143cb:	add    BYTE PTR [rax],al
  4143cd:	add    BYTE PTR [rax],al
  4143cf:	add    BYTE PTR [rcx],dh
  4143d1:	cmp    al,0x41
  4143d3:	add    BYTE PTR [rax],al
  4143d5:	add    BYTE PTR [rax],al
  4143d7:	add    BYTE PTR [rsp+rdi*1],dh
  4143da:	add    BYTE PTR [r8],al
  4143dd:	add    BYTE PTR [rax],al
  4143df:	add    BYTE PTR [rdx+0x3c],cl
  4143e2:	add    BYTE PTR [r8],al
  4143e5:	add    BYTE PTR [rax],al
  4143e7:	add    BYTE PTR [rbp+0x3c],cl
  4143ea:	add    BYTE PTR [r8],al
  4143ed:	add    BYTE PTR [rax],al
  4143ef:	add    BYTE PTR [rsp+rdi*1+0x41],bl
  4143f3:	add    BYTE PTR [rax],al
  4143f5:	add    BYTE PTR [rax],al
  4143f7:	add    BYTE PTR [rdi+0x3c],bl
  4143fa:	add    BYTE PTR [r8],al
  4143fd:	add    BYTE PTR [rax],al
  4143ff:	add    BYTE PTR [rdi+0x3c],ah
  414402:	add    BYTE PTR [r8],al
  414405:	add    BYTE PTR [rax],al
  414407:	add    BYTE PTR [rdx+0x3c],ch
  41440a:	add    BYTE PTR [r8],al
  41440d:	add    BYTE PTR [rax],al
  41440f:	add    BYTE PTR [rdx+0x3c],dh
  414412:	add    BYTE PTR [r8],al
  414415:	add    BYTE PTR [rax],al
  414417:	add    BYTE PTR [rbp+0x3c],dh
  41441a:	add    BYTE PTR [r8],al
  41441d:	add    BYTE PTR [rax],al
  41441f:	add    BYTE PTR [rax+0x413c],cl
  414425:	add    BYTE PTR [rax],al
  414427:	add    BYTE PTR [rbx+0x413c],cl
  41442d:	add    BYTE PTR [rax],al
  41442f:	add    BYTE PTR [rbx+0x413c],dl
  414435:	add    BYTE PTR [rax],al
  414437:	add    BYTE PTR [rsi+0x413c],dl
  41443d:	add    BYTE PTR [rax],al
  41443f:	add    BYTE PTR [rsi+0x413c],bl
  414445:	add    BYTE PTR [rax],al
  414447:	add    BYTE PTR [rcx+0x413c],ah
  41444d:	add    BYTE PTR [rax],al
  41444f:	add    BYTE PTR [rcx+0x413c],ch
  414455:	add    BYTE PTR [rax],al
  414457:	add    BYTE PTR [rsp+rdi*1+0x41],ch
  41445e:	add    BYTE PTR [rax],al
  414460:	mov    dl,0x3c
  414462:	add    BYTE PTR [r8],al
  414465:	add    BYTE PTR [rax],al
  414467:	add    BYTE PTR [rbp+0x413c],dh
  41446d:	add    BYTE PTR [rax],al
  41446f:	add    BYTE PTR [rbp+0x413c],bh
  414475:	add    BYTE PTR [rax],al
  414477:	add    al,al
  414479:	cmp    al,0x41
  41447b:	add    BYTE PTR [rax],al
  41447d:	add    BYTE PTR [rax],al
  41447f:	add    dh,al
  414481:	cmp    al,0x41
  414483:	add    BYTE PTR [rax],al
  414485:	add    BYTE PTR [rax],al
  414487:	add    cl,cl
  414489:	cmp    al,0x41
  41448b:	add    BYTE PTR [rax],al
  41448d:	add    BYTE PTR [rax],al
  41448f:	add    dl,dl
  414491:	cmp    al,0x41
  414493:	add    BYTE PTR [rax],al
  414495:	add    BYTE PTR [rax],al
  414497:	add    ch,dl
  414499:	cmp    al,0x41
  41449b:	add    BYTE PTR [rax],al
  41449d:	add    BYTE PTR [rax],al
  41449f:	add    ch,bl
  4144a1:	cmp    al,0x41
  4144a3:	add    BYTE PTR [rax],al
  4144a5:	add    BYTE PTR [rax],al
  4144a7:	add    al,ah
  4144a9:	cmp    al,0x41
  4144ab:	add    BYTE PTR [rax],al
  4144ad:	add    BYTE PTR [rax],al
  4144af:	add    dh,ch
  4144b1:	cmp    al,0x41
  4144b3:	add    BYTE PTR [rax],al
  4144b5:	add    BYTE PTR [rax],al
  4144b7:	add    cl,dh
  4144b9:	cmp    al,0x41
  4144bb:	add    BYTE PTR [rax],al
  4144bd:	add    BYTE PTR [rax],al
  4144bf:	add    al,bh
  4144c1:	cmp    al,0x41
  4144c3:	add    BYTE PTR [rax],al
  4144c5:	add    BYTE PTR [rax],al
  4144c7:	add    bl,bh
  4144c9:	cmp    al,0x41
  4144cb:	add    BYTE PTR [rax],al
  4144cd:	add    BYTE PTR [rax],al
  4144cf:	add    BYTE PTR [rdx],cl
  4144d1:	cmp    eax,0x41
  4144d6:	add    BYTE PTR [rax],al
  4144d8:	or     eax,0x413d
  4144dd:	add    BYTE PTR [rax],al
  4144df:	add    BYTE PTR [rdi],dl
  4144e1:	cmp    eax,0x41
  4144e6:	add    BYTE PTR [rax],al
  4144e8:	sbb    bh,BYTE PTR [rip+0x41]        # 0x41452f
  4144ee:	add    BYTE PTR [rax],al
  4144f0:	and    bh,BYTE PTR [rip+0x41]        # 0x414537
  4144f6:	add    BYTE PTR [rax],al
  4144f8:	and    eax,0x413d
  4144fd:	add    BYTE PTR [rax],al
  4144ff:	add    BYTE PTR [rdi],ch
  414501:	cmp    eax,0x41
  414506:	add    BYTE PTR [rax],al
  414508:	xor    bh,BYTE PTR [rip+0x41]        # 0x41454f
  41450e:	add    BYTE PTR [rax],al
  414510:	cmp    DWORD PTR [rip+0x41],edi        # 0x414557
  414516:	add    BYTE PTR [rax],al
  414518:	cmp    al,0x3d
  41451a:	add    BYTE PTR [r8],al
  41451d:	add    BYTE PTR [rax],al
  41451f:	add    BYTE PTR [rsi+0x3d],al
  414522:	add    BYTE PTR [r8],al
  414525:	add    BYTE PTR [rax],al
  414527:	add    BYTE PTR [rcx+0x3d],cl
  41452a:	add    BYTE PTR [r8],al
  41452d:	add    BYTE PTR [rax],al
  41452f:	add    BYTE PTR [rsi+0x3d],al
  414532:	add    BYTE PTR [r8],al
  414535:	add    BYTE PTR [rax],al
  414537:	add    BYTE PTR [rbx+0x3d],dl
  41453a:	add    BYTE PTR [r8],al
  41453d:	add    BYTE PTR [rax],al
  41453f:	add    BYTE PTR [rbp+rdi*1+0x41],ah
  414543:	add    BYTE PTR [rax],al
  414545:	add    BYTE PTR [rax],al
  414547:	add    BYTE PTR [rdi+0x3d],ah
  41454a:	add    BYTE PTR [r8],al
  41454d:	add    BYTE PTR [rax],al
  41454f:	add    BYTE PTR [rax+0x3d],dh
  414552:	add    BYTE PTR [r8],al
  414555:	add    BYTE PTR [rax],al
  414557:	add    BYTE PTR [rbx+0x3d],dh
  41455a:	add    BYTE PTR [r8],al
  41455d:	add    BYTE PTR [rax],al
  41455f:	add    BYTE PTR [rbx+0x3d],bh
  414562:	add    BYTE PTR [r8],al
  414565:	add    BYTE PTR [rax],al
  414567:	add    BYTE PTR [rsi+0x3d],bh
  41456a:	add    BYTE PTR [r8],al
  41456d:	add    BYTE PTR [rax],al
  41456f:	add    BYTE PTR [rbp+rdi*1+0x41],al
  414576:	add    BYTE PTR [rax],al
  414578:	xchg   DWORD PTR [rip+0x41],edi        # 0x4145bf
  41457e:	add    BYTE PTR [rax],al
  414580:	(bad)  
  414581:	cmp    eax,0x41
  414586:	add    BYTE PTR [rax],al
  414588:	xchg   edx,eax
  414589:	cmp    eax,0x41
  41458e:	add    BYTE PTR [rax],al
  414590:	pushf  
  414591:	cmp    eax,0x41
  414596:	add    BYTE PTR [rax],al
  414598:	lahf   
  414599:	cmp    eax,0x41
  41459e:	add    BYTE PTR [rax],al
  4145a0:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4145a1:	cmp    eax,0x41
  4145a6:	add    BYTE PTR [rax],al
  4145a8:	stos   BYTE PTR es:[rdi],al
  4145a9:	cmp    eax,0x41
  4145ae:	add    BYTE PTR [rax],al
  4145b0:	mov    cl,0x3d
  4145b2:	add    BYTE PTR [r8],al
  4145b5:	add    BYTE PTR [rax],al
  4145b7:	add    BYTE PTR [rbp+rdi*1+0x41],dh
  4145be:	add    BYTE PTR [rax],al
  4145c0:	mov    edx,0x413d
  4145c5:	add    BYTE PTR [rax],al
  4145c7:	add    BYTE PTR [rbp+0x413d],bh
  4145cd:	add    BYTE PTR [rax],al
  4145cf:	add    dl,al
  4145d1:	cmp    eax,0x41
  4145d6:	add    BYTE PTR [rax],al
  4145d8:	(bad)
  4145db:	add    BYTE PTR [rax],al
  4145dd:	add    BYTE PTR [rax],al
  4145df:	add    dl,cl
  4145e1:	cmp    eax,0x41
  4145e6:	add    BYTE PTR [rax],al
  4145e8:	int    0x3d
  4145ea:	add    BYTE PTR [r8],al
  4145ed:	add    BYTE PTR [rax],al
  4145ef:	add    ch,dl
  4145f1:	cmp    eax,0x41
  4145f6:	add    BYTE PTR [rax],al
  4145f8:	fdivr  DWORD PTR [rip+0x41]        # 0x41463f
  4145fe:	add    BYTE PTR [rax],al
  414600:	fidivr WORD PTR [rip+0x41]        # 0x414647
  414606:	add    BYTE PTR [rax],al
  414608:	loope  0x414647
  41460a:	add    BYTE PTR [r8],al
  41460d:	add    BYTE PTR [rax],al
  41460f:	add    cl,ch
  414611:	cmp    eax,0x41
  414616:	add    BYTE PTR [rax],al
  414618:	in     al,dx
  414619:	cmp    eax,0x41
  41461e:	add    BYTE PTR [rax],al
  414620:	repz cmp eax,0x41
  414626:	add    BYTE PTR [rax],al
  414628:	idiv   BYTE PTR [rip+0x41]        # 0x41466f
  41462e:	add    BYTE PTR [rax],al
  414630:	cld    
  414631:	cmp    eax,0x41
  414636:	add    BYTE PTR [rax],al
  414638:	(bad)  
  414639:	cmp    eax,0x41
  41463e:	add    BYTE PTR [rax],al
  414640:	add    eax,0x413e
  414645:	add    BYTE PTR [rax],al
  414647:	add    BYTE PTR [rax],cl
  414649:	add    BYTE PTR ds:[r8],al
  41464d:	add    BYTE PTR [rax],al
  41464f:	add    BYTE PTR [rbx],dl
  414651:	add    BYTE PTR ds:[r8],al
  414655:	add    BYTE PTR [rax],al
  414657:	add    BYTE PTR [rsi],dl
  414659:	add    BYTE PTR ds:[r8],al
  41465d:	add    BYTE PTR [rax],al
  41465f:	add    BYTE PTR [rdi],bl
  414661:	add    BYTE PTR ds:[r8],al
  414665:	add    BYTE PTR [rax],al
  414667:	add    BYTE PTR [rdx],ah
  414669:	add    BYTE PTR ds:[r8],al
  41466d:	add    BYTE PTR [rax],al
  41466f:	add    BYTE PTR [rsi],ch
  414671:	add    BYTE PTR ds:[r8],al
  414675:	add    BYTE PTR [rax],al
  414677:	add    BYTE PTR [rcx],dh
  414679:	add    BYTE PTR ds:[r8],al
  41467d:	add    BYTE PTR [rax],al
  41467f:	add    BYTE PTR [rax],bh
  414681:	add    BYTE PTR ds:[r8],al
  414685:	add    BYTE PTR [rax],al
  414687:	add    BYTE PTR [rbx],bh
  414689:	add    BYTE PTR ds:[r8],al
  41468d:	add    BYTE PTR [rax],al
  41468f:	add    BYTE PTR [rsi+0x3e],al
  414692:	add    BYTE PTR [r8],al
  414695:	add    BYTE PTR [rax],al
  414697:	add    BYTE PTR [rcx+0x3e],cl
  41469a:	add    BYTE PTR [r8],al
  41469d:	add    BYTE PTR [rax],al
  41469f:	add    BYTE PTR [rsi+0x3e],cl
  4146a2:	add    BYTE PTR [r8],al
  4146a5:	add    BYTE PTR [rax],al
  4146a7:	add    BYTE PTR [rcx+0x3e],dl
  4146aa:	add    BYTE PTR [r8],al
  4146ad:	add    BYTE PTR [rax],al
  4146af:	add    BYTE PTR [rcx+0x3e],bl
  4146b2:	add    BYTE PTR [r8],al
  4146b5:	add    BYTE PTR [rax],al
  4146b7:	add    BYTE PTR [rsi+rdi*1+0x41],bl
  4146bb:	add    BYTE PTR [rax],al
  4146bd:	add    BYTE PTR [rax],al
  4146bf:	add    BYTE PTR [rdx+0x3e],ch
  4146c2:	add    BYTE PTR [r8],al
  4146c5:	add    BYTE PTR [rax],al
  4146c7:	add    BYTE PTR [rbp+0x3e],ch
  4146ca:	add    BYTE PTR [r8],al
  4146cd:	add    BYTE PTR [rax],al
  4146cf:	add    BYTE PTR [rdi+0x3e],dh
  4146d2:	add    BYTE PTR [r8],al
  4146d5:	add    BYTE PTR [rax],al
  4146d7:	add    BYTE PTR [rdx+0x3e],bh
  4146da:	add    BYTE PTR [r8],al
  4146dd:	add    BYTE PTR [rax],al
  4146df:	add    BYTE PTR [rsi+rdi*1+0x41],al
  4146e6:	add    BYTE PTR [rax],al
  4146e8:	xchg   DWORD PTR [rsi],edi
  4146ea:	add    BYTE PTR [r8],al
  4146ed:	add    BYTE PTR [rax],al
  4146ef:	add    BYTE PTR [rdx+0x413e],dl
  4146f5:	add    BYTE PTR [rax],al
  4146f7:	add    BYTE PTR [rbp+0x413e],dl
  4146fd:	add    BYTE PTR [rax],al
  4146ff:	add    BYTE PTR [rsi+rdi*1+0x41],bl
  414706:	add    BYTE PTR [rax],al
  414708:	lahf   
  414709:	add    BYTE PTR ds:[r8],al
  41470d:	add    BYTE PTR [rax],al
  41470f:	add    BYTE PTR [rbp+0x413e],ah
  414715:	add    BYTE PTR [rax],al
  414717:	add    BYTE PTR [rax+0x413e],ch
  41471d:	add    BYTE PTR [rax],al
  41471f:	add    BYTE PTR [rax+0x413e],dh
  414725:	add    BYTE PTR [rax],al
  414727:	add    BYTE PTR [rbx+0x413e],dh
  41472d:	add    BYTE PTR [rax],al
  41472f:	add    dl,cl
  414731:	add    BYTE PTR ds:[r8],al
  414735:	add    BYTE PTR [rax],al
  414737:	add    ch,cl
  414739:	add    BYTE PTR ds:[r8],al
  41473d:	add    BYTE PTR [rax],al
  41473f:	add    dl,cl
  414741:	add    BYTE PTR ds:[r8],al
  414745:	add    BYTE PTR [rax],al
  414747:	add    ch,dl
  414749:	add    BYTE PTR ds:[r8],al
  41474d:	add    BYTE PTR [rax],al
  41474f:	add    ch,bl
  414751:	add    BYTE PTR ds:[r8],al
  414755:	add    BYTE PTR [rax],al
  414757:	add    al,ah
  414759:	add    BYTE PTR ds:[r8],al
  41475d:	add    BYTE PTR [rax],al
  41475f:	add    bl,ch
  414761:	add    BYTE PTR ds:[r8],al
  414765:	add    BYTE PTR [rax],al
  414767:	add    al,dh
  414769:	add    BYTE PTR ds:[r8],al
  41476d:	add    BYTE PTR [rax],al
  41476f:	add    BYTE PTR [rsi],dl
  414771:	(bad)  
  414772:	add    BYTE PTR [r8],al
  414775:	add    BYTE PTR [rax],al
  414777:	add    BYTE PTR [rcx],bl
  414779:	(bad)  
  41477a:	add    BYTE PTR [r8],al
  41477d:	add    BYTE PTR [rax],al
  41477f:	add    BYTE PTR [rsi],bl
  414781:	(bad)  
  414782:	add    BYTE PTR [r8],al
  414785:	add    BYTE PTR [rax],al
  414787:	add    BYTE PTR [rcx],ah
  414789:	(bad)  
  41478a:	add    BYTE PTR [r8],al
  41478d:	add    BYTE PTR [rax],al
  41478f:	add    BYTE PTR [rcx],ch
  414791:	(bad)  
  414792:	add    BYTE PTR [r8],al
  414795:	add    BYTE PTR [rax],al
  414797:	add    BYTE PTR [rdi+rdi*1],ch
  41479a:	add    BYTE PTR [r8],al
  41479d:	add    BYTE PTR [rax],al
  41479f:	add    BYTE PTR [rip+0x413f],dh        # 0x4188e4
  4147a5:	add    BYTE PTR [rax],al
  4147a7:	add    BYTE PTR [rax],bh
  4147a9:	(bad)  
  4147aa:	add    BYTE PTR [r8],al
  4147ad:	add    BYTE PTR [rax],al
  4147af:	add    BYTE PTR [rbp+0x3f],al
  4147b2:	add    BYTE PTR [r8],al
  4147b5:	add    BYTE PTR [rax],al
  4147b7:	add    BYTE PTR [rax+0x3f],cl
  4147ba:	add    BYTE PTR [r8],al
  4147bd:	add    BYTE PTR [rax],al
  4147bf:	add    BYTE PTR [rsi+0x3f],cl
  4147c2:	add    BYTE PTR [r8],al
  4147c5:	add    BYTE PTR [rax],al
  4147c7:	add    BYTE PTR [rcx+0x3f],dl
  4147ca:	add    BYTE PTR [r8],al
  4147cd:	add    BYTE PTR [rax],al
  4147cf:	add    BYTE PTR [rdx+0x3f],bl
  4147d2:	add    BYTE PTR [r8],al
  4147d5:	add    BYTE PTR [rax],al
  4147d7:	add    BYTE PTR [rbp+0x3f],bl
  4147da:	add    BYTE PTR [r8],al
  4147dd:	add    BYTE PTR [rax],al
  4147df:	add    BYTE PTR [rdi+rdi*1+0x41],ah
  4147e3:	add    BYTE PTR [rax],al
  4147e5:	add    BYTE PTR [rax],al
  4147e7:	add    BYTE PTR [rdi+0x3f],ah
  4147ea:	add    BYTE PTR [r8],al
  4147ed:	add    BYTE PTR [rax],al
  4147ef:	add    BYTE PTR [rax+0x3f],dh
  4147f2:	add    BYTE PTR [r8],al
  4147f5:	add    BYTE PTR [rax],al
  4147f7:	add    BYTE PTR [rbx+0x3f],dh
  4147fa:	add    BYTE PTR [r8],al
  4147fd:	add    BYTE PTR [rax],al
  4147ff:	add    BYTE PTR [rbx+0x3f],bh
  414802:	add    BYTE PTR [r8],al
  414805:	add    BYTE PTR [rax],al
  414807:	add    BYTE PTR [rsi+0x3f],bh
  41480a:	add    BYTE PTR [r8],al
  41480d:	add    BYTE PTR [rax],al
  41480f:	add    BYTE PTR [rax+0x413f],cl
  414815:	add    BYTE PTR [rax],al
  414817:	add    BYTE PTR [rbx+0x413f],cl
  41481d:	add    BYTE PTR [rax],al
  41481f:	add    BYTE PTR [rdi+0x413f],dl
  414825:	add    BYTE PTR [rax],al
  414827:	add    BYTE PTR [rdx+0x413f],bl
  41482d:	add    BYTE PTR [rax],al
  41482f:	add    BYTE PTR [rcx+0x413f],ah
  414835:	add    BYTE PTR [rax],al
  414837:	add    BYTE PTR [rdi+rdi*1+0x41],ah
  41483e:	add    BYTE PTR [rax],al
  414840:	stos   BYTE PTR es:[rdi],al
  414841:	(bad)  
  414842:	add    BYTE PTR [r8],al
  414845:	add    BYTE PTR [rax],al
  414847:	add    BYTE PTR [rbp+0x413f],ch
  41484d:	add    BYTE PTR [rax],al
  41484f:	add    BYTE PTR [rcx+0x413f],bh
  414855:	add    BYTE PTR [rax],al
  414857:	add    BYTE PTR [rdi+rdi*1+0x41],bh
  41485e:	add    BYTE PTR [rax],al
  414860:	sar    DWORD PTR [rdi],0x41
  414863:	add    BYTE PTR [rax],al
  414865:	add    BYTE PTR [rax],al
  414867:	add    ah,al
  414869:	(bad)  
  41486a:	add    BYTE PTR [r8],al
  41486d:	add    BYTE PTR [rax],al
  41486f:	add    bl,cl
  414871:	(bad)  
  414872:	add    BYTE PTR [r8],al
  414875:	add    BYTE PTR [rax],al
  414877:	add    dh,cl
  414879:	(bad)  
  41487a:	add    BYTE PTR [r8],al
  41487d:	add    BYTE PTR [rax],al
  41487f:	add    bl,dl
  414881:	(bad)  
  414882:	add    BYTE PTR [r8],al
  414885:	add    BYTE PTR [rax],al
  414887:	add    dh,dl
  414889:	(bad)  
  41488a:	add    BYTE PTR [r8],al
  41488d:	add    BYTE PTR [rax],al
  41488f:	add    dl,ah
  414891:	(bad)  
  414892:	add    BYTE PTR [r8],al
  414895:	add    BYTE PTR [rax],al
  414897:	add    ch,ah
  414899:	(bad)  
  41489a:	add    BYTE PTR [r8],al
  41489d:	add    BYTE PTR [rax],al
  41489f:	add    BYTE PTR [rdx],al
  4148a1:	rex
  4148a2:	add    BYTE PTR [r8],al
  4148a5:	add    BYTE PTR [rax],al
  4148a7:	add    BYTE PTR [rip+0x4140],al        # 0x4189ed
  4148ad:	add    BYTE PTR [rax],al
  4148af:	add    BYTE PTR [rax+rax*2],cl
  4148b2:	add    BYTE PTR [r8],al
  4148b5:	add    BYTE PTR [rax],al
  4148b7:	add    BYTE PTR [rdi],cl
  4148b9:	rex
  4148ba:	add    BYTE PTR [r8],al
  4148bd:	add    BYTE PTR [rax],al
  4148bf:	add    BYTE PTR [rbx],bl
  4148c1:	rex
  4148c2:	add    BYTE PTR [r8],al
  4148c5:	add    BYTE PTR [rax],al
  4148c7:	add    BYTE PTR [rsi],bl
  4148c9:	rex
  4148ca:	add    BYTE PTR [r8],al
  4148cd:	add    BYTE PTR [rax],al
  4148cf:	add    BYTE PTR [rdi],ah
  4148d1:	rex
  4148d2:	add    BYTE PTR [r8],al
  4148d5:	add    BYTE PTR [rax],al
  4148d7:	add    BYTE PTR [rdx],ch
  4148d9:	rex
  4148da:	add    BYTE PTR [r8],al
  4148dd:	add    BYTE PTR [rax],al
  4148df:	add    BYTE PTR [rbx],dh
  4148e1:	rex
  4148e2:	add    BYTE PTR [r8],al
  4148e5:	add    BYTE PTR [rax],al
  4148e7:	add    BYTE PTR [rsi],dh
  4148e9:	rex
  4148ea:	add    BYTE PTR [r8],al
  4148ed:	add    BYTE PTR [rax],al
  4148ef:	add    BYTE PTR [rax+rax*2],bh
  4148f2:	add    BYTE PTR [r8],al
  4148f5:	add    BYTE PTR [rax],al
  4148f7:	add    BYTE PTR [rdi],bh
  4148f9:	rex
  4148fa:	add    BYTE PTR [r8],al
  4148fd:	add    BYTE PTR [rax],al
  4148ff:	add    BYTE PTR [rdi+0x40],al
  414902:	add    BYTE PTR [r8],al
  414905:	add    BYTE PTR [rax],al
  414907:	add    BYTE PTR [rdx+0x40],cl
  41490a:	add    BYTE PTR [r8],al
  41490d:	add    BYTE PTR [rax],al
  41490f:	add    BYTE PTR [rdx+0x40],dl
  414912:	add    BYTE PTR [r8],al
  414915:	add    BYTE PTR [rax],al
  414917:	add    BYTE PTR [rbp+0x40],dl
  41491a:	add    BYTE PTR [r8],al
  41491d:	add    BYTE PTR [rax],al
  41491f:	add    BYTE PTR [rax+rax*2+0x41],bl
  414923:	add    BYTE PTR [rax],al
  414925:	add    BYTE PTR [rax],al
  414927:	add    BYTE PTR [rdi+0x40],bl
  41492a:	add    BYTE PTR [r8],al
  41492d:	add    BYTE PTR [rax],al
  41492f:	add    BYTE PTR [rsi+0x40],ah
  414932:	add    BYTE PTR [r8],al
  414935:	add    BYTE PTR [rax],al
  414937:	add    BYTE PTR [rcx+0x40],ch
  41493a:	add    BYTE PTR [r8],al
  41493d:	add    BYTE PTR [rax],al
  41493f:	add    BYTE PTR [rax+0x40],dh
  414942:	add    BYTE PTR [r8],al
  414945:	add    BYTE PTR [rax],al
  414947:	add    BYTE PTR [rbx+0x40],dh
  41494a:	add    BYTE PTR [r8],al
  41494d:	add    BYTE PTR [rax],al
  41494f:	add    BYTE PTR [rax+0x4140],al
  414955:	add    BYTE PTR [rax],al
  414957:	add    BYTE PTR [rbx+0x4140],al
  41495d:	add    BYTE PTR [rax],al
  41495f:	add    BYTE PTR [rdx+0x4140],cl
  414965:	add    BYTE PTR [rax],al
  414967:	add    BYTE PTR [rbp+0x4140],cl
  41496d:	add    BYTE PTR [rax],al
  41496f:	add    BYTE PTR [rdi+0x4140],dl
  414975:	add    BYTE PTR [rax],al
  414977:	add    BYTE PTR [rdx+0x4140],bl
  41497d:	add    BYTE PTR [rax],al
  41497f:	add    BYTE PTR [rbx+0x4140],ah
  414985:	add    BYTE PTR [rax],al
  414987:	add    BYTE PTR [rsi+0x4140],ah
  41498d:	add    BYTE PTR [rax],al
  41498f:	add    BYTE PTR [rbp+0x4140],ch
  414995:	add    BYTE PTR [rax],al
  414997:	add    BYTE PTR [rax+0x4140],dh
  41499d:	add    BYTE PTR [rax],al
  41499f:	add    BYTE PTR [rax+0x4140],bh
  4149a5:	add    BYTE PTR [rax],al
  4149a7:	add    BYTE PTR [rbx+0x4140],bh
  4149ad:	add    BYTE PTR [rax],al
  4149af:	add    bl,al
  4149b1:	rex
  4149b2:	add    BYTE PTR [r8],al
  4149b5:	add    BYTE PTR [rax],al
  4149b7:	add    dh,al
  4149b9:	rex
  4149ba:	add    BYTE PTR [r8],al
  4149bd:	add    BYTE PTR [rax],al
  4149bf:	add    bh,cl
  4149c1:	rex
  4149c2:	add    BYTE PTR [r8],al
  4149c5:	add    BYTE PTR [rax],al
  4149c7:	add    dl,dl
  4149c9:	rex
  4149ca:	add    BYTE PTR [r8],al
  4149cd:	add    BYTE PTR [rax],al
  4149cf:	add    dh,bl
  4149d1:	rex
  4149d2:	add    BYTE PTR [r8],al
  4149d5:	add    BYTE PTR [rax],al
  4149d7:	add    cl,ah
  4149d9:	rex
  4149da:	add    BYTE PTR [r8],al
  4149dd:	add    BYTE PTR [rax],al
  4149df:	add    bh,ah
  4149e1:	rex
  4149e2:	add    BYTE PTR [r8],al
  4149e5:	add    BYTE PTR [rax],al
  4149e7:	add    dl,ch
  4149e9:	rex
  4149ea:	add    BYTE PTR [r8],al
  4149ed:	add    BYTE PTR [rax],al
  4149ef:	add    bl,dh
  4149f1:	rex
  4149f2:	add    BYTE PTR [r8],al
  4149f5:	add    BYTE PTR [rax],al
  4149f7:	add    dh,dh
  4149f9:	rex
  4149fa:	add    BYTE PTR [r8],al
  4149fd:	add    BYTE PTR [rax],al
  4149ff:	add    BYTE PTR [rcx],al
  414a01:	rex.B
  414a02:	add    BYTE PTR [r8],al
  414a05:	add    BYTE PTR [rax],al
  414a07:	add    BYTE PTR [rcx+rax*2],al
  414a0a:	add    BYTE PTR [r8],al
  414a0d:	add    BYTE PTR [rax],al
  414a0f:	add    BYTE PTR [rcx],dl
  414a11:	rex.B
  414a12:	add    BYTE PTR [r8],al
  414a15:	add    BYTE PTR [rax],al
  414a17:	add    BYTE PTR [rcx+rax*2],dl
  414a1a:	add    BYTE PTR [r8],al
  414a1d:	add    BYTE PTR [rax],al
  414a1f:	add    BYTE PTR [rcx+rax*2],bl
  414a22:	add    BYTE PTR [r8],al
  414a25:	add    BYTE PTR [rax],al
  414a27:	add    BYTE PTR [rdi],bl
  414a29:	rex.B
  414a2a:	add    BYTE PTR [r8],al
  414a2d:	add    BYTE PTR [rax],al
  414a2f:	add    BYTE PTR [rsi],ah
  414a31:	rex.B
  414a32:	add    BYTE PTR [r8],al
  414a35:	add    BYTE PTR [rax],al
  414a37:	add    BYTE PTR [rcx],ch
  414a39:	rex.B
  414a3a:	add    BYTE PTR [r8],al
  414a3d:	add    BYTE PTR [rax],al
  414a3f:	add    BYTE PTR [rip+0x4141],bh        # 0x418b86
  414a45:	add    BYTE PTR [rax],al
  414a47:	add    BYTE PTR [rax+0x41],al
  414a4a:	add    BYTE PTR [r8],al
  414a4d:	add    BYTE PTR [rax],al
  414a4f:	add    BYTE PTR [rdi+0x41],al
  414a52:	add    BYTE PTR [r8],al
  414a55:	add    BYTE PTR [rax],al
  414a57:	add    BYTE PTR [rdx+0x41],cl
  414a5a:	add    BYTE PTR [r8],al
  414a5d:	add    BYTE PTR [rax],al
  414a5f:	add    BYTE PTR [rbx+0x41],dl
  414a62:	add    BYTE PTR [r8],al
  414a65:	add    BYTE PTR [rax],al
  414a67:	add    BYTE PTR [rsi+0x41],dl
  414a6a:	add    BYTE PTR [r8],al
  414a6d:	add    BYTE PTR [rax],al
  414a6f:	add    BYTE PTR [rsi+0x41],bl
  414a72:	add    BYTE PTR [r8],al
  414a75:	add    BYTE PTR [rax],al
  414a77:	add    BYTE PTR [rcx+0x41],ah
  414a7a:	add    BYTE PTR [r8],al
  414a7d:	add    BYTE PTR [rax],al
  414a7f:	add    BYTE PTR [rdi+0x41],ch
  414a82:	add    BYTE PTR [r8],al
  414a85:	add    BYTE PTR [rax],al
  414a87:	add    BYTE PTR [rdx+0x41],dh
  414a8a:	add    BYTE PTR [r8],al
  414a8d:	add    BYTE PTR [rax],al
  414a8f:	add    BYTE PTR [rdx+0x41],bh
  414a92:	add    BYTE PTR [r8],al
  414a95:	add    BYTE PTR [rax],al
  414a97:	add    BYTE PTR [rbp+0x41],bh
  414a9a:	add    BYTE PTR [r8],al
  414a9d:	add    BYTE PTR [rax],al
  414a9f:	add    BYTE PTR [rbp+0x4141],al
  414aa5:	add    BYTE PTR [rax],al
  414aa7:	add    BYTE PTR [rax+0x4141],cl
  414aad:	add    BYTE PTR [rax],al
  414aaf:	add    BYTE PTR [rdx+0x4141],dl
  414ab5:	add    BYTE PTR [rax],al
  414ab7:	add    BYTE PTR [rbp+0x4141],dl
  414abd:	add    BYTE PTR [rax],al
  414abf:	add    BYTE PTR [rsi+0x4141],bl
  414ac5:	add    BYTE PTR [rax],al
  414ac7:	add    BYTE PTR [rcx+0x4141],ah
  414acd:	add    BYTE PTR [rax],al
  414acf:	add    BYTE PTR [rdi+0x4141],ah
  414ad5:	add    BYTE PTR [rax],al
  414ad7:	add    BYTE PTR [rdx+0x4141],ch
  414add:	add    BYTE PTR [rax],al
  414adf:	add    BYTE PTR [rdi+0x4141],dh
  414ae5:	add    BYTE PTR [rax],al
  414ae7:	add    BYTE PTR [rdx+0x4141],bh
  414aed:	add    BYTE PTR [rax],al
  414aef:	add    BYTE PTR [rcx+0x66],ah
  414af2:	add    BYTE PTR [rcx+0x66],al
  414af5:	jb     0x414b60
  414af7:	imul   esp,DWORD PTR [rcx+0x61],0x6e
  414afb:	jae    0x414afd
  414afd:	(bad)  
  414afe:	ins    DWORD PTR es:[rdi],dx
  414aff:	add    BYTE PTR [rcx+0x6d],al
  414b02:	push   0x63697261
  414b07:	add    BYTE PTR [rcx+0x72],ah
  414b0a:	add    BYTE PTR [rcx+0x72],al
  414b0d:	(bad)  
  414b0e:	(bad)  
  414b0f:	imul   esp,DWORD PTR [rbx+0x0],0x6e7261
  414b16:	rex.WRB (bad) 
  414b18:	jo     0x414b8f
  414b1a:	fs jne 0x414b8b
  414b1d:	addr32 jne 0x414b8e
  414b20:	add    BYTE PTR [rcx+0x73],ah
  414b23:	add    BYTE PTR [rcx+0x73],al
  414b26:	jae    0x414b89
  414b28:	ins    DWORD PTR es:[rdi],dx
  414b29:	gs jae 0x414b91
  414b2c:	add    BYTE PTR [rcx+0x7a],ah
  414b2f:	rex movsxd edi,DWORD PTR [rcx+0x72]
  414b33:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a410063
  414b3b:	gs jb  0x414ba7
  414b3e:	and    BYTE PTR [rax],ch
  414b40:	rex.XB jns 0x414bb5
  414b43:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x61002963
  414b4b:	jp     0x414b8d
  414b4d:	ins    BYTE PTR es:[rdi],dx
  414b4e:	(bad)  
  414b4f:	je     0x414bba
  414b51:	outs   dx,BYTE PTR ds:[rsi]
  414b52:	add    BYTE PTR [rcx+0x7a],al
  414b55:	gs jb  0x414bc1
  414b58:	and    BYTE PTR [rax],ch
  414b5a:	rex.WR (bad) 
  414b5c:	je     0x414bc7
  414b5e:	outs   dx,BYTE PTR ds:[rsi]
  414b5f:	sub    DWORD PTR [rax],eax
  414b61:	(bad)  
  414b63:	add    BYTE PTR [rdx+0x61],al
  414b66:	jae    0x414bd0
  414b68:	imul   ebp,DWORD PTR [rcx+0x72],0x0
  414b6c:	(bad)  
  414b6d:	add    BYTE PTR gs:[rdx+0x65],al
  414b71:	ins    BYTE PTR es:[rdi],dx
  414b72:	(bad)  
  414b73:	jb     0x414bea
  414b75:	jae    0x414be0
  414b77:	(bad)  
  414b78:	outs   dx,BYTE PTR ds:[rsi]
  414b79:	add    BYTE PTR [rdx+0x65],ah
  414b7c:	jb     0x414b7e
  414b7e:	push   rsp
  414b7f:	(bad)  
  414b80:	ins    DWORD PTR es:[rdi],dx
  414b81:	(bad)  
  414b82:	jp     0x414bed
  414b84:	addr32 push 0x65620074
  414b8a:	jb     0x414bcc
  414b8c:	(bad)  
  414b8d:	jb     0x414bf0
  414b8f:	(bad)  
  414b90:	imul   esp,DWORD PTR [rbx+0x0],0x616d6154
  414b97:	jp     0x414c02
  414b99:	addr32 push 0x41282074
  414b9f:	jb     0x414c02
  414ba1:	(bad)  
  414ba2:	imul   esp,DWORD PTR [rbx+0x29],0x72656200
  414ba9:	rex ins BYTE PTR es:[rdi],dx
  414bab:	(bad)  
  414bac:	je     0x414c17
  414bae:	outs   dx,BYTE PTR ds:[rsi]
  414baf:	add    BYTE PTR [rcx+riz*2+0x6d],dl
  414bb3:	(bad)  
  414bb4:	jp     0x414c1f
  414bb6:	addr32 push 0x4c282074
  414bbc:	(bad)  
  414bbd:	je     0x414c28
  414bbf:	outs   dx,BYTE PTR ds:[rsi]
  414bc0:	sub    DWORD PTR [rax],eax
  414bc2:	(bad)  
  414bc3:	add    BYTE PTR [edx+0x75],al
  414bc7:	ins    BYTE PTR es:[rdi],dx
  414bc8:	addr32 (bad) 
  414bca:	jb     0x414c35
  414bcc:	(bad)  
  414bcd:	outs   dx,BYTE PTR ds:[rsi]
  414bce:	add    BYTE PTR [rdx+0x69],ah
  414bd1:	outs   dx,BYTE PTR ds:[rsi]
  414bd2:	add    BYTE PTR [rbp+0x64],al
  414bd5:	outs   dx,DWORD PTR ds:[rsi]
  414bd6:	add    BYTE PTR [rdx+0x6e],ah
  414bd9:	add    BYTE PTR [rdx+0x65],al
  414bdc:	outs   dx,BYTE PTR ds:[rsi]
  414bdd:	addr32 (bad) 
  414bdf:	ins    BYTE PTR es:[rdi],dx
  414be0:	imul   eax,DWORD PTR [rax],0x425f6e62
  414be6:	add    BYTE PTR [rdx+0x65],r8b
  414bea:	outs   dx,BYTE PTR ds:[rsi]
  414beb:	addr32 (bad) 
  414bed:	ins    BYTE PTR es:[rdi],dx
  414bee:	imul   esp,DWORD PTR [rax],0x6e614228
  414bf4:	ins    BYTE PTR es:[edi],dx
  414bf6:	(bad)  
  414bf7:	fs gs jae 0x414c63
  414bfb:	sub    DWORD PTR [rax],eax
  414bfd:	(bad)  
  414bfe:	outs   dx,BYTE PTR ds:[rsi]
  414bff:	pop    rdi
  414c00:	rex.WB
  414c01:	rex.WRX add BYTE PTR [rdx+0x65],r8b
  414c05:	outs   dx,BYTE PTR ds:[rsi]
  414c06:	addr32 (bad) 
  414c08:	ins    BYTE PTR es:[rdi],dx
  414c09:	imul   esp,DWORD PTR [rax],0x646e4928
  414c0f:	imul   esp,DWORD PTR [rcx+0x29],0x746e6200
  414c16:	add    BYTE PTR [rbx+0x75],dl
  414c19:	je     0x414c90
  414c1b:	add    BYTE PTR [rdx+0x6f],ah
  414c1e:	add    BYTE PTR [rcx+rbp*2+0x62],dl
  414c22:	gs je  0x414c86
  414c25:	outs   dx,BYTE PTR ds:[rsi]
  414c26:	add    BYTE PTR [rdx+0x72],ah
  414c29:	add    BYTE PTR [rdx+0x72],al
  414c2c:	gs je  0x414c9e
  414c2f:	outs   dx,BYTE PTR ds:[rsi]
  414c30:	add    BYTE PTR [rdx+0x73],ah
  414c33:	add    BYTE PTR [rdx+0x53],al
  414c36:	rex.X add BYTE PTR [rdx+0x73],spl
  414c3a:	rex movsxd edi,DWORD PTR [rcx+0x72]
  414c3e:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x53420063
  414c46:	rex.XB add BYTE PTR [r11+0x61],spl
  414c4a:	add    BYTE PTR [rbx+0x61],al
  414c4d:	je     0x414cb0
  414c4f:	ins    BYTE PTR es:[rdi],dx
  414c50:	(bad)  
  414c51:	outs   dx,BYTE PTR ds:[rsi]
  414c52:	add    BYTE PTR [rbx+0x68],ah
  414c55:	jb     0x414c57
  414c57:	rex.XB push 0x6b6f7265
  414c5d:	gs add BYTE PTR gs:[rbx+0x6f],ah
  414c62:	add    BYTE PTR [rbx+0x6f],al
  414c65:	jb     0x414cda
  414c67:	imul   esp,DWORD PTR [rbx+0x61],0x7063006e
  414c6e:	add    BYTE PTR gs:[rax+0x61],cl
  414c72:	ja     0x414cd5
  414c74:	imul   ebp,DWORD PTR [rcx+0x61],0x7363006e
  414c7b:	add    BYTE PTR [rbx+0x7a],al
  414c7e:	movsxd ebp,DWORD PTR gs:[rax+0x0]
  414c82:	movsxd edi,DWORD PTR [rcx+0x0]
  414c85:	push   rdi
  414c86:	gs ins BYTE PTR es:[rdi],dx
  414c88:	jae    0x414cf2
  414c8a:	add    BYTE PTR [rcx+riz*2+0x0],ah
  414c8e:	rex.R (bad) 
  414c90:	outs   dx,BYTE PTR ds:[rsi]
  414c91:	imul   esi,DWORD PTR [rbx+0x68],0x656400
  414c98:	rex.RXB
  414c99:	gs jb  0x414d09
  414c9c:	(bad)  
  414c9d:	outs   dx,BYTE PTR ds:[rsi]
  414c9e:	add    BYTE PTR [rbx+rsi*2+0x62],ah
  414ca2:	add    BYTE PTR [rdi+rbp*2+0x77],cl
  414ca6:	gs jb  0x414cc9
  414ca9:	push   rbx
  414caa:	outs   dx,DWORD PTR ds:[rsi]
  414cab:	jb     0x414d0f
  414cad:	imul   esp,DWORD PTR [rcx+0x6e],0x766400
  414cb4:	imul   r14d,DWORD PTR [rsi+0x65],0x65006968
  414cbc:	ins    BYTE PTR es:[rdi],dx
  414cbd:	add    BYTE PTR [rdi+0x72],al
  414cc0:	gs imul eax,DWORD PTR gs:[rax],0x65
  414cc5:	outs   dx,BYTE PTR ds:[rsi]
  414cc6:	add    BYTE PTR [rbp+0x6e],al
  414cc9:	ins    BYTE PTR es:[edi],dx
  414ccb:	imul   esi,DWORD PTR [rbx+0x68],0x736500
  414cd2:	push   rbx
  414cd3:	jo     0x414d36
  414cd5:	outs   dx,BYTE PTR ds:[rsi]
  414cd6:	imul   esi,DWORD PTR [rbx+0x68],0x746500
  414cdd:	rex.RB jae 0x414d54
  414ce0:	outs   dx,DWORD PTR ds:[rsi]
  414ce1:	outs   dx,BYTE PTR ds:[rsi]
  414ce2:	imul   esp,DWORD PTR [rcx+0x6e],0x756500
  414ce9:	rex.X (bad) 
  414ceb:	jae    0x414d5e
  414ced:	jne    0x414d54
  414cef:	add    BYTE PTR [rsi+0x61],ah
  414cf2:	add    BYTE PTR [rsi+0x61],al
  414cf5:	jb     0x414d6a
  414cf7:	imul   eax,DWORD PTR [rax],0x46006666
  414cfd:	jne    0x414d6b
  414cff:	data16 jne 0x414d6e
  414d02:	fs add BYTE PTR gs:[rsi+0x69],ah
  414d07:	add    BYTE PTR [rsi+0x69],al
  414d0a:	outs   dx,BYTE PTR ds:[rsi]
  414d0b:	outs   dx,BYTE PTR ds:[rsi]
  414d0c:	imul   esi,DWORD PTR [rbx+0x68],0x6f6600
  414d13:	rex.RX (bad) 
  414d15:	jb     0x414d86
  414d17:	gs jae 0x414d7f
  414d1a:	add    BYTE PTR [rsi+0x72],ah
  414d1d:	add    BYTE PTR [rsi+0x72],al
  414d20:	outs   dx,BYTE PTR gs:[rsi]
  414d22:	movsxd ebp,DWORD PTR [rax+0x0]
  414d25:	data16 jns 0x414d28
  414d28:	rex.RX jb 0x414d94
  414d2b:	jae    0x414d96
  414d2d:	(bad)  
  414d2e:	outs   dx,BYTE PTR ds:[rsi]
  414d2f:	add    BYTE PTR [rdi+0x61],ah
  414d32:	add    BYTE PTR [rcx+0x52],cl
  414d35:	add    BYTE PTR [r15+0x64],r12b
  414d39:	add    BYTE PTR [rdi+0x61],al
  414d3c:	gs ins BYTE PTR es:[rdi],dx
  414d3e:	imul   esp,DWORD PTR [rbx+0x20],0x6f635328
  414d45:	je     0x414db3
  414d47:	(bad)  
  414d48:	outs   dx,BYTE PTR ds:[rsi]
  414d49:	sub    DWORD PTR fs:[rax],eax
  414d4c:	push   rbx
  414d4d:	movsxd ebp,DWORD PTR [rdi+0x74]
  414d50:	je     0x414dbb
  414d52:	jae    0x414dbc
  414d54:	and    BYTE PTR [rdi+0x61],al
  414d57:	gs ins BYTE PTR es:[rdi],dx
  414d59:	imul   esp,DWORD PTR [rbx+0x0],0x47006c67
  414d60:	(bad)  
  414d61:	ins    BYTE PTR es:[rdi],dx
  414d62:	imul   esp,DWORD PTR [rbx+0x69],0x67006e61
  414d69:	outs   dx,BYTE PTR ds:[rsi]
  414d6a:	add    BYTE PTR [rdi+0x75],al
  414d6d:	(bad)  
  414d6e:	jb     0x414dd1
  414d70:	outs   dx,BYTE PTR ds:[rsi]
  414d71:	imul   eax,DWORD PTR [rax],0x777367
  414d77:	rex.B ins BYTE PTR es:[rdi],dx
  414d79:	jae    0x414ddc
  414d7b:	je     0x414de6
  414d7d:	(bad)  
  414d7e:	outs   dx,BYTE PTR ds:[rsi]
  414d7f:	add    BYTE PTR [rdi+0x75],ah
  414d82:	add    BYTE PTR [rdi+0x75],al
  414d85:	push   0x61
  414d87:	jb     0x414dea
  414d89:	je     0x414df4
  414d8b:	add    BYTE PTR [rax+0x61],ch
  414d8e:	add    BYTE PTR [rax+0x61],cl
  414d91:	jne    0x414e06
  414d93:	(bad)  
  414d94:	add    BYTE PTR [rax+0x65],ch
  414d97:	add    BYTE PTR [rax+0x65],cl
  414d9a:	(bad)
  414d9f:	push   0x69480069
  414da4:	outs   dx,BYTE PTR ds:[rsi]
  414da5:	imul   eax,DWORD PTR fs:[rax],0x43007268
  414dac:	jb     0x414e1d
  414dae:	(bad)  
  414daf:	je     0x414e1a
  414db1:	(bad)  
  414db2:	outs   dx,BYTE PTR ds:[rsi]
  414db3:	add    BYTE PTR [rax+0x73],ch
  414db6:	(bad)  
  414db7:	add    BYTE PTR [rbp+0x70],dl
  414dba:	jo     0x414e21
  414dbc:	jb     0x414dde
  414dbe:	push   rbx
  414dbf:	outs   dx,DWORD PTR ds:[rsi]
  414dc0:	jb     0x414e24
  414dc2:	imul   esp,DWORD PTR [rcx+0x6e],0x756800
  414dc9:	rex.W jne 0x414e3a
  414dcc:	addr32 (bad) 
  414dce:	jb     0x414e39
  414dd0:	(bad)  
  414dd1:	outs   dx,BYTE PTR ds:[rsi]
  414dd2:	add    BYTE PTR [rax+0x79],ch
  414dd5:	add    BYTE PTR [rcx+0x72],al
  414dd8:	ins    DWORD PTR es:[rdi],dx
  414dd9:	outs   dx,BYTE PTR gs:[rsi]
  414ddb:	imul   esp,DWORD PTR [rcx+0x6e],0x646900
  414de2:	rex.WB outs dx,BYTE PTR ds:[rsi]
  414de4:	outs   dx,DWORD PTR fs:[rsi]
  414de6:	outs   dx,BYTE PTR ds:[rsi]
  414de7:	gs jae 0x414e53
  414dea:	(bad)  
  414deb:	outs   dx,BYTE PTR ds:[rsi]
  414dec:	add    BYTE PTR [rcx+0x67],ch
  414def:	add    BYTE PTR [rcx+0x67],cl
  414df2:	(bad)  
  414df3:	outs   dx,DWORD PTR ds:[rsi]
  414df4:	add    BYTE PTR [rcx+0x69],ch
  414df7:	add    BYTE PTR [rcx+0x69],bl
  414dfa:	add    BYTE PTR [rcx+0x73],ch
  414dfd:	add    BYTE PTR [rcx+0x63],cl
  414e00:	gs ins BYTE PTR es:[rdi],dx
  414e02:	(bad)  
  414e03:	outs   dx,BYTE PTR ds:[rsi]
  414e04:	imul   esp,DWORD PTR fs:[rbx+0x0],0x49007469
  414e0c:	je     0x414e6f
  414e0e:	ins    BYTE PTR es:[rdi],dx
  414e0f:	imul   esp,DWORD PTR [rcx+0x6e],0x756900
  414e16:	rex.WB push r13
  414e18:	rex.WXB add BYTE PTR [r10+0x61],bpl
  414e1c:	add    BYTE PTR [rdx+0x61],cl
  414e1f:	jo     0x414e82
  414e21:	outs   dx,BYTE PTR ds:[rsi]
  414e22:	gs jae 0x414e8a
  414e25:	add    BYTE PTR [rbx+0x61],ch
  414e28:	add    BYTE PTR [rdi+0x65],al
  414e2b:	outs   dx,DWORD PTR ds:[rsi]
  414e2c:	jb     0x414e95
  414e2e:	imul   esp,DWORD PTR [rcx+0x6e],0x6b6b00
  414e35:	rex.WXB (bad) 
  414e37:	jp     0x414e9a
  414e39:	imul   ebp,DWORD PTR [rax+0x0],0x6b
  414e3d:	ins    BYTE PTR es:[rdi],dx
  414e3e:	add    BYTE PTR [rdi+0x72],al
  414e41:	gs outs dx,BYTE PTR gs:[rsi]
  414e44:	ins    BYTE PTR es:[rdi],dx
  414e45:	(bad)  
  414e46:	outs   dx,BYTE PTR ds:[rsi]
  414e47:	imul   esp,DWORD PTR fs:[rbx+0x0],0x43006d6b
  414e4f:	(bad)  
  414e50:	ins    DWORD PTR es:[rdi],dx
  414e51:	(bad)  
  414e52:	outs   dx,DWORD PTR ds:[rsi]
  414e53:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x6d684b00
  414e5b:	gs jb  0x414e5e
  414e5e:	imul   ebp,DWORD PTR [rsi+0x0],0x4b
  414e62:	(bad)  
  414e63:	outs   dx,BYTE PTR ds:[rsi]
  414e64:	outs   dx,BYTE PTR ds:[rsi]
  414e65:	(bad)  
  414e66:	fs (bad) 
  414e68:	add    BYTE PTR [rbx+0x6f],ch
  414e6b:	add    BYTE PTR [rbx+0x6f],cl
  414e6e:	jb     0x414ed5
  414e70:	(bad)  
  414e71:	outs   dx,BYTE PTR ds:[rsi]
  414e72:	add    BYTE PTR [rbx+0x6f],ch
  414e75:	imul   eax,DWORD PTR [rax],0x4b
  414e78:	outs   dx,DWORD PTR ds:[rsi]
  414e79:	outs   dx,BYTE PTR ds:[rsi]
  414e7a:	imul   esp,DWORD PTR [rcx+0x6e],0x69
  414e7e:	add    BYTE PTR [rbx+0x72],ch
  414e81:	add    BYTE PTR [rbx+0x61],cl
  414e84:	outs   dx,BYTE PTR ds:[rsi]
  414e85:	jne    0x414ef9
  414e87:	imul   eax,DWORD PTR [rax],0x4b00736b
  414e8d:	(bad)  
  414e8e:	jae    0x414ef8
  414e90:	ins    DWORD PTR es:[rdi],dx
  414e91:	imul   esi,DWORD PTR [rdx+0x69],0x5f736b00
  414e98:	rex.WB
  414e99:	rex.WRX add BYTE PTR [rbx+0x61],r9b
  414e9d:	jae    0x414f07
  414e9f:	ins    DWORD PTR es:[rdi],dx
  414ea0:	imul   esi,DWORD PTR [rdx+0x69],0x646e495f
  414ea7:	imul   esp,DWORD PTR [rcx+0x0],0x505f736b
  414eae:	rex.WXB add BYTE PTR [r11+0x61],cl
  414eb2:	jae    0x414f1c
  414eb4:	ins    DWORD PTR es:[rdi],dx
  414eb5:	imul   esi,DWORD PTR [rdx+0x69],0x72412820
  414ebc:	(bad)  
  414ebd:	(bad)  
  414ebe:	imul   esp,DWORD PTR [rbx+0x29],0x6b61505f
  414ec5:	imul   esi,DWORD PTR [rbx+0x74],0x6b006e61
  414ecc:	jns    0x414ece
  414ece:	rex.WXB jns 0x414f43
  414ed1:	addr32 jns 0x414f4e
  414ed4:	add    BYTE PTR [rcx+riz*2+0x0],ch
  414ed8:	rex.WR (bad) 
  414eda:	je     0x414f45
  414edc:	outs   dx,BYTE PTR ds:[rsi]
  414edd:	add    BYTE PTR [rdx+riz*2+0x0],ch
  414ee1:	rex.WR jne 0x414f5c
  414ee4:	gs ins DWORD PTR es:[rdi],dx
  414ee6:	(bad)  
  414ee7:	outs   dx,DWORD PTR ds:[rsi]
  414ee8:	jne    0x414f5c
  414eea:	imul   esi,DWORD PTR [ebx+0x68],0x6f6c00
  414ef2:	rex.WR (bad) 
  414ef4:	outs   dx,DWORD PTR ds:[rsi]
  414ef5:	add    BYTE PTR [rsp+rsi*2+0x0],ch
  414ef9:	imul   r14,QWORD PTR [rax+rbp*2+0x75],0x61696e61
  414f02:	outs   dx,BYTE PTR ds:[rsi]
  414f03:	add    BYTE PTR [rsi+rsi*2+0x0],ch
  414f07:	rex.WR (bad) 
  414f09:	je     0x414f81
  414f0b:	imul   esp,DWORD PTR [rcx+0x6e],0x696d00
  414f12:	rex.WRB (bad) 
  414f14:	outs   dx,DWORD PTR ds:[rsi]
  414f15:	jb     0x414f80
  414f17:	add    BYTE PTR [rbp+0x6b],ch
  414f1a:	add    BYTE PTR [rsi+0x59],al
  414f1d:	push   rdx
  414f1e:	rex.WRXB and BYTE PTR [r13+0x61],r9b
  414f22:	movsxd esp,DWORD PTR [rbp+0x64]
  414f25:	outs   dx,DWORD PTR ds:[rsi]
  414f26:	outs   dx,BYTE PTR ds:[rsi]
  414f27:	imul   esp,DWORD PTR [rcx+0x6e],0x63614d00
  414f2e:	gs outs dx,DWORD PTR fs:[rsi]
  414f31:	outs   dx,BYTE PTR ds:[rsi]
  414f32:	imul   esp,DWORD PTR [rcx+0x6e],0x6c6d00
  414f39:	rex.WRB (bad) 
  414f3b:	ins    BYTE PTR es:[rdi],dx
  414f3c:	(bad)  
  414f3d:	jns    0x414fa0
  414f3f:	ins    BYTE PTR es:[rdi],dx
  414f40:	(bad)  
  414f41:	ins    DWORD PTR es:[rdi],dx
  414f42:	add    BYTE PTR [rbp+0x6e],ch
  414f45:	add    BYTE PTR [rbp+0x6f],cl
  414f48:	outs   dx,BYTE PTR ds:[rsi]
  414f49:	outs   dx,DWORD PTR ds:[esi]
  414f4b:	ins    BYTE PTR es:[rdi],dx
  414f4c:	imul   esp,DWORD PTR [rcx+0x6e],0x696e6d00
  414f53:	add    BYTE PTR [rbp+0x61],cl
  414f56:	outs   dx,BYTE PTR ds:[rsi]
  414f57:	imul   esi,DWORD PTR [rax+0x75],0x6d006972
  414f5e:	outs   dx,DWORD PTR ds:[rsi]
  414f5f:	push   0x686f4d00
  414f64:	(bad)  
  414f65:	ja     0x414fd2
  414f67:	add    BYTE PTR [rbp+0x72],ch
  414f6a:	add    BYTE PTR [rbp+0x61],cl
  414f6d:	jb     0x414fd0
  414f6f:	je     0x414fd9
  414f71:	imul   eax,DWORD PTR [rax],0x4d00736d
  414f77:	(bad)  
  414f78:	ins    BYTE PTR es:[rdi],dx
  414f79:	(bad)  
  414f7a:	jns    0x414f7c
  414f7c:	ins    DWORD PTR es:[rdi],dx
  414f7d:	je     0x414f7f
  414f7f:	rex.WRB (bad) 
  414f81:	ins    BYTE PTR es:[rdi],dx
  414f82:	je     0x414fe9
  414f84:	jae    0x414feb
  414f86:	add    BYTE PTR [rbp+0x79],ch
  414f89:	add    BYTE PTR [rdx+0x75],al
  414f8c:	jb     0x414ffb
  414f8e:	gs jae 0x414ff6
  414f91:	add    BYTE PTR [rsi+0x62],ch
  414f94:	add    BYTE PTR [rsi+0x4f],cl
  414f97:	push   rdx
  414f98:	add    BYTE PTR [rsi+0x65],ch
  414f9b:	add    BYTE PTR [rsi+0x65],cl
  414f9e:	jo     0x415001
  414fa0:	ins    BYTE PTR es:[rdi],dx
  414fa1:	imul   eax,DWORD PTR [rax],0x63696e
  414fa7:	rex.WB (bad) 
  414fa9:	imul   esp,DWORD PTR [rdx+0x69],0x6c6e006f
  414fb0:	add    BYTE PTR [rbp+rsi*2+0x74],al
  414fb4:	movsxd ebp,DWORD PTR [rax+0x0]
  414fb7:	outs   dx,BYTE PTR ds:[rsi]
  414fb8:	outs   dx,BYTE PTR ds:[rsi]
  414fb9:	add    BYTE PTR [rsi+0x4f],cl
  414fbc:	rex.WRX add BYTE PTR [rsi+0x6f],r13b
  414fc0:	add    BYTE PTR [rsi+0x6f],cl
  414fc3:	jb     0x41503c
  414fc5:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x6f736e00
  414fce:	add    BYTE PTR [rsi+0x6f],cl
  414fd1:	jb     0x415047
  414fd3:	push   0x206e7265
  414fd8:	push   rbx
  414fd9:	outs   dx,DWORD PTR ds:[rsi]
  414fda:	je     0x415044
  414fdc:	outs   dx,DWORD PTR ds:[rsi]
  414fdd:	add    BYTE PTR [rbx+0x65],dl
  414fe0:	jo     0x415047
  414fe2:	imul   eax,DWORD PTR fs:[rax],0x4f00636f
  414fe9:	movsxd esp,DWORD PTR [rbx+0x69]
  414fec:	je     0x41504f
  414fee:	outs   dx,BYTE PTR ds:[rsi]
  414fef:	add    BYTE PTR [rdi+0x6d],ch
  414ff2:	add    BYTE PTR [rdi+0x72],cl
  414ff5:	outs   dx,DWORD PTR ds:[rsi]
  414ff6:	ins    DWORD PTR es:[rdi],dx
  414ff7:	outs   dx,DWORD PTR ds:[rsi]
  414ff8:	add    BYTE PTR [rdi+0x72],ch
  414ffb:	add    BYTE PTR [rdi+0x72],cl
  414ffe:	imul   edi,DWORD PTR [rcx+0x61],0x617000
  415005:	push   rax
  415006:	jne    0x415076
  415008:	push   0x61
  41500a:	(bad)  
  41500b:	imul   eax,DWORD PTR [rax],0x706170
  415011:	push   rax
  415012:	(bad)  
  415013:	jo     0x41507e
  415015:	(bad)  
  415016:	ins    DWORD PTR es:[rdi],dx
  415017:	outs   dx,BYTE PTR gs:[rsi]
  415019:	je     0x415090
  41501b:	add    BYTE PTR [rax+0x6c],dh
  41501e:	add    BYTE PTR [rax+0x6f],dl
  415021:	ins    BYTE PTR es:[rdi],dx
  415022:	imul   esi,DWORD PTR [rbx+0x68],0x73727000
  415029:	add    BYTE PTR [rcx+riz*2+0x72],al
  41502d:	imul   eax,DWORD PTR [rax],0x50007370
  415033:	(bad)  
  415034:	jae    0x41509e
  415036:	je     0x4150a7
  415038:	add    BYTE PTR [rax+0x74],dh
  41503b:	add    BYTE PTR [rax+0x6f],dl
  41503e:	jb     0x4150b4
  415040:	jne    0x4150a9
  415042:	jne    0x4150a9
  415044:	jae    0x4150ab
  415046:	add    BYTE PTR [rcx+0x75],dh
  415049:	add    BYTE PTR [rcx+0x75],dl
  41504c:	movsxd ebp,DWORD PTR gs:[rax+0x75]
  415050:	(bad)  
  415051:	add    BYTE PTR [rcx+0x75],dh
  415054:	je     0x415056
  415056:	rex.WXB (bad) 
  415058:	imul   esp,DWORD PTR [rbx+0x68],0x72002765
  41505f:	ins    DWORD PTR es:[rdi],dx
  415060:	add    BYTE PTR [rdx+0x6f],dl
  415063:	ins    DWORD PTR es:[rdi],dx
  415064:	(bad)  
  415065:	outs   dx,BYTE PTR ds:[rsi]
  415066:	jae    0x4150d0
  415068:	add    BYTE PTR [rdx+0x6f],dh
  41506b:	add    BYTE PTR [rdx+0x6f],dl
  41506e:	ins    DWORD PTR es:[rdi],dx
  41506f:	(bad)  
  415070:	outs   dx,BYTE PTR ds:[rsi]
  415071:	imul   esp,DWORD PTR [rcx+0x6e],0x757200
  415078:	push   rdx
  415079:	jne    0x4150ee
  41507b:	jae    0x4150e6
  41507d:	(bad)  
  41507e:	outs   dx,BYTE PTR ds:[rsi]
  41507f:	add    BYTE PTR [rdx+0x77],dh
  415082:	add    BYTE PTR [rbx+0x69],cl
  415085:	outs   dx,BYTE PTR ds:[rsi]
  415086:	jns    0x4150e9
  415088:	jb     0x415101
  41508a:	(bad)  
  41508b:	outs   dx,BYTE PTR ds:[rsi]
  41508c:	fs (bad) 
  41508e:	add    BYTE PTR [rbx+0x61],dh
  415091:	add    BYTE PTR [rbx+0x61],dl
  415094:	outs   dx,BYTE PTR ds:[rsi]
  415095:	jae    0x415102
  415097:	jb     0x415102
  415099:	je     0x41509b
  41509b:	jae    0x4150fe
  41509d:	push   0x6b615900
  4150a2:	jne    0x415118
  4150a4:	add    BYTE PTR [rbx+0x64],dh
  4150a7:	add    BYTE PTR [rbx+0x69],dl
  4150aa:	outs   dx,BYTE PTR ds:[rsi]
  4150ab:	fs push 0x65730069
  4150b1:	add    BYTE PTR [rbx+0x61],dl
  4150b4:	ins    DWORD PTR es:[rdi],dx
  4150b5:	imul   esp,DWORD PTR [rax],0x726f4e28
  4150bb:	je     0x415125
  4150bd:	gs jb  0x41512e
  4150c0:	sub    DWORD PTR [rax],eax
  4150c2:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4150c4:	jb     0x41513a
  4150c6:	push   0x206e7265
  4150cb:	push   rbx
  4150cc:	(bad)  
  4150cd:	ins    DWORD PTR es:[rdi],dx
  4150ce:	imul   eax,DWORD PTR [rax],0x53006973
  4150d4:	imul   ebp,DWORD PTR [rsi+0x68],0x73656c61
  4150db:	add    BYTE PTR gs:[rbx+0x6b],dh
  4150df:	add    BYTE PTR [rbx+0x6c],dh
  4150e2:	add    BYTE PTR [rbx+0x6c],dl
  4150e5:	outs   dx,DWORD PTR ds:[rsi]
  4150e6:	jbe    0x41514d
  4150e8:	outs   dx,BYTE PTR ds:[rsi]
  4150e9:	imul   esp,DWORD PTR [rcx+0x6e],0x616d7300
  4150f0:	add    BYTE PTR [rbx+0x61],dl
  4150f3:	ins    DWORD PTR es:[rdi],dx
  4150f4:	imul   esp,DWORD PTR [rax],0x756f5328
  4150fa:	je     0x415164
  4150fc:	gs jb  0x41516d
  4150ff:	sub    DWORD PTR [rax],eax
  415101:	push   rbx
  415102:	outs   dx,DWORD PTR ds:[rsi]
  415103:	jne    0x415179
  415105:	push   0x206e7265
  41510a:	push   rbx
  41510b:	(bad)  
  41510c:	ins    DWORD PTR es:[rdi],dx
  41510d:	imul   eax,DWORD PTR [rax],0x6a6d73
  415113:	push   rbx
  415114:	(bad)  
  415115:	ins    DWORD PTR es:[rdi],dx
  415116:	imul   esp,DWORD PTR [rax],0x6c754c28
  41511c:	sub    DWORD PTR gs:[rax],eax
  41511f:	rex.WR jne 0x41518e
  415122:	and    BYTE PTR gs:[rbx+0x61],dl
  415126:	ins    DWORD PTR es:[rdi],dx
  415127:	imul   eax,DWORD PTR [rax],0x6e6d73
  41512d:	push   rbx
  41512e:	(bad)  
  41512f:	ins    DWORD PTR es:[rdi],dx
  415130:	imul   esp,DWORD PTR [rax],0x616e4928
  415136:	jb     0x4151a1
  415138:	sub    DWORD PTR [rax],eax
  41513a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41513c:	(bad)  
  41513d:	jb     0x4151a8
  41513f:	and    BYTE PTR [rbx+0x61],dl
  415142:	ins    DWORD PTR es:[rdi],dx
  415143:	imul   eax,DWORD PTR [rax],0x736d73
  415149:	push   rbx
  41514a:	(bad)  
  41514b:	ins    DWORD PTR es:[rdi],dx
  41514c:	imul   esp,DWORD PTR [rax],0x6f6b5328
  415152:	ins    BYTE PTR es:[rdi],dx
  415153:	je     0x41517e
  415155:	add    BYTE PTR [rbx+0x6b],dl
  415158:	outs   dx,DWORD PTR ds:[rsi]
  415159:	ins    BYTE PTR es:[rdi],dx
  41515a:	je     0x41517c
  41515c:	push   rbx
  41515d:	(bad)  
  41515e:	ins    DWORD PTR es:[rdi],dx
  41515f:	imul   eax,DWORD PTR [rax],0x53006f73
  415165:	outs   dx,DWORD PTR ds:[rsi]
  415166:	ins    DWORD PTR es:[rdi],dx
  415167:	(bad)  
  415168:	ins    BYTE PTR es:[rdi],dx
  415169:	imul   eax,DWORD PTR [rax],0x41007173
  41516f:	ins    BYTE PTR es:[rdi],dx
  415170:	(bad)
  415175:	outs   dx,BYTE PTR ds:[rsi]
  415176:	add    BYTE PTR [rbx+0x72],dh
  415179:	add    BYTE PTR [rbx+0x65],dl
  41517c:	jb     0x4151e0
  41517e:	imul   esp,DWORD PTR [rcx+0x6e],0x614c2820
  415185:	je     0x4151f0
  415187:	outs   dx,BYTE PTR ds:[rsi]
  415188:	sub    DWORD PTR [rax],eax
  41518a:	jae    0x4151fe
  41518c:	rex movsxd edi,DWORD PTR [rcx+0x72]
  415190:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x52530063
  415198:	rex.X add BYTE PTR [rbx+0x77],sil
  41519c:	add    BYTE PTR [rbx+0x77],dl
  41519f:	(bad)  
  4151a0:	push   0x696c69
  4151a5:	jae    0x415220
  4151a7:	jb     0x4151a9
  4151a9:	push   rbx
  4151aa:	jns    0x41521e
  4151ac:	imul   esp,DWORD PTR [rcx+0x63],0x617400
  4151b3:	push   rsp
  4151b4:	(bad)  
  4151b5:	ins    DWORD PTR es:[rdi],dx
  4151b6:	imul   ebp,DWORD PTR [rax+rax*1+0x74],0x65540065
  4151be:	ins    BYTE PTR es:[rdi],dx
  4151bf:	jne    0x415228
  4151c1:	jne    0x4151c3
  4151c3:	je     0x41522c
  4151c5:	add    BYTE PTR [rcx+riz*2+0x6a],dl
  4151c9:	imul   ebp,DWORD PTR [rbx+0x0],0x54006874
  4151d0:	push   0x74006961
  4151d5:	imul   eax,DWORD PTR [rax],0x72676954
  4151db:	imul   ebp,DWORD PTR [rsi+0x79],0x6b740061
  4151e2:	add    BYTE PTR [rbp+rsi*2+0x72],dl
  4151e6:	imul   ebp,DWORD PTR [rbp+0x65],0x6e
  4151ea:	add    BYTE PTR [rsp+rbp*2+0x0],dh
  4151ee:	imul   r13d,DWORD PTR [rcx+r13*2+0x70],0x6f6e69
  4151f7:	je     0x415267
  4151f9:	add    BYTE PTR [rbx+rsi*2+0x77],dl
  4151fd:	(bad)  
  4151fe:	outs   dx,BYTE PTR ds:[rsi]
  4151ff:	(bad)  
  415200:	add    BYTE PTR [rdx+rsi*2+0x0],dh
  415204:	push   rsp
  415205:	jne    0x415279
  415207:	imul   ebp,DWORD PTR [rcx+0x73],0x68
  41520b:	add    BYTE PTR [rbx+rsi*2+0x0],dh
  41520f:	push   rsp
  415210:	jae    0x415281
  415212:	outs   dx,BYTE PTR ds:[rsi]
  415213:	addr32 (bad) 
  415215:	add    BYTE PTR [rsp+rsi*2+0x0],dh
  415219:	push   rsp
  41521a:	(bad)  
  41521b:	je     0x41527e
  41521d:	jb     0x41521f
  41521f:	jne    0x415288
  415221:	add    BYTE PTR [rbp+0x69],dl
  415224:	addr32 push 0x75007275
  41522a:	imul   eax,DWORD PTR [rax],0x55
  41522d:	imul   esi,DWORD PTR [rdx+0x61],0x69
  415231:	outs   dx,BYTE PTR ds:[rsi]
  415232:	imul   esp,DWORD PTR [rcx+0x6e],0x727500
  415239:	push   rbp
  41523a:	jb     0x4152a0
  41523c:	jne    0x41523e
  41523e:	jne    0x4152ba
  415240:	add    BYTE PTR [rbp+0x7a],dl
  415243:	(bad)  
  415244:	imul   eax,DWORD PTR gs:[rax],0x55
  415248:	jp     0x4152ac
  41524a:	imul   esp,DWORD PTR gs:[rax],0x28
  41524e:	rex.WR (bad) 
  415250:	je     0x4152bb
  415252:	outs   dx,BYTE PTR ds:[rsi]
  415253:	sub    DWORD PTR [rax],eax
  415255:	jne    0x4152d1
  415257:	rex movsxd edi,DWORD PTR [rcx+0x72]
  41525b:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a550063
  415263:	(bad)  
  415264:	imul   esp,DWORD PTR gs:[rax],0x28
  415268:	rex.XB jns 0x4152dd
  41526b:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x76002963
  415273:	add    BYTE PTR gs:[rsi+0x65],dl
  415277:	outs   dx,BYTE PTR ds:[rsi]
  415278:	fs (bad) 
  41527a:	add    BYTE PTR [rsi+0x69],dh
  41527d:	add    BYTE PTR [rsi+0x69],dl
  415280:	gs je  0x4152f1
  415283:	(bad)  
  415284:	ins    DWORD PTR es:[rdi],dx
  415285:	gs jae 0x4152ed
  415288:	add    BYTE PTR [rdi+0x65],dh
  41528b:	outs   dx,BYTE PTR ds:[rsi]
  41528c:	add    BYTE PTR [rbx+0x6f],dl
  41528f:	jb     0x4152f3
  415291:	imul   esp,DWORD PTR [rcx+0x6e],0x6f7700
  415298:	push   rdi
  415299:	outs   dx,DWORD PTR ds:[rsi]
  41529a:	ins    BYTE PTR es:[rdi],dx
  41529b:	outs   dx,DWORD PTR ds:[rsi]
  41529c:	data16 add BYTE PTR [rax+0x68],bh
  4152a0:	add    BYTE PTR [rax+0x68],bl
  4152a3:	outs   dx,DWORD PTR ds:[rsi]
  4152a4:	jae    0x415307
  4152a6:	add    BYTE PTR [rcx+0x69],bh
  4152a9:	add    BYTE PTR [rcx+0x69],bl
  4152ac:	fs imul esi,DWORD PTR fs:[rbx+0x68],0x6f7900
  4152b5:	pop    rcx
  4152b6:	outs   dx,DWORD PTR ds:[rsi]
  4152b7:	jb     0x41532e
  4152b9:	(bad)  
  4152bb:	add    BYTE PTR [rdx+0x68],bh
  4152be:	add    BYTE PTR [rbx+0x68],al
  4152c1:	imul   ebp,DWORD PTR [rsi+0x65],0x7a006573
  4152c8:	jne    0x4152ca
  4152ca:	pop    rdx
  4152cb:	jne    0x415339
  4152cd:	jne    0x4152cf
	...
  4152ff:	add    al,dh
  415301:	rex.WX
  415302:	add    BYTE PTR [r8],al
  415305:	add    BYTE PTR [rax],al
  415307:	add    bl,dh
  415309:	rex.WX
  41530a:	add    BYTE PTR [r8],al
  41530d:	add    BYTE PTR [rax],al
  41530f:	add    ch,bh
  415311:	rex.WX
  415312:	add    BYTE PTR [r8],al
  415315:	add    BYTE PTR [rax],al
  415317:	add    BYTE PTR [rax],al
  415319:	rex.WXB
  41531a:	add    BYTE PTR [r8],al
  41531d:	add    BYTE PTR [rax],al
  41531f:	add    BYTE PTR [rax],cl
  415321:	rex.WXB
  415322:	add    BYTE PTR [r8],al
  415325:	add    BYTE PTR [rax],al
  415327:	add    BYTE PTR [rbx],cl
  415329:	rex.WXB
  41532a:	add    BYTE PTR [r8],al
  41532d:	add    BYTE PTR [rax],al
  41532f:	add    BYTE PTR [rdx],dl
  415331:	rex.WXB
  415332:	add    BYTE PTR [r8],al
  415335:	add    BYTE PTR [rax],al
  415337:	add    BYTE PTR [rsi],dl
  415339:	rex.WXB
  41533a:	add    BYTE PTR [r8],al
  41533d:	add    BYTE PTR [rax],al
  41533f:	add    BYTE PTR [rcx],ah
  415341:	rex.WXB
  415342:	add    BYTE PTR [r8],al
  415345:	add    BYTE PTR [rax],al
  415347:	add    BYTE PTR [rbx+rcx*2],ah
  41534a:	add    BYTE PTR [r8],al
  41534d:	add    BYTE PTR [rax],al
  41534f:	add    BYTE PTR [rip+0x414b],ch        # 0x4194a0
  415355:	add    BYTE PTR [rax],al
  415357:	add    BYTE PTR [rcx],bh
  415359:	rex.WXB
  41535a:	add    BYTE PTR [r8],al
  41535d:	add    BYTE PTR [rax],al
  41535f:	add    BYTE PTR [rdx+0x4b],cl
  415362:	add    BYTE PTR [r8],al
  415365:	add    BYTE PTR [rax],al
  415367:	add    BYTE PTR [rbx+0x4b],dl
  41536a:	add    BYTE PTR [r8],al
  41536d:	add    BYTE PTR [rax],al
  41536f:	add    BYTE PTR [rcx+0x4b],ah
  415372:	add    BYTE PTR [r8],al
  415375:	add    BYTE PTR [rax],al
  415377:	add    BYTE PTR [rbx+rcx*2+0x41],ah
  41537b:	add    BYTE PTR [rax],al
  41537d:	add    BYTE PTR [rax],al
  41537f:	add    BYTE PTR [rbx+rcx*2+0x41],ch
  415383:	add    BYTE PTR [rax],al
  415385:	add    BYTE PTR [rax],al
  415387:	add    BYTE PTR [rdi+0x4b],ch
  41538a:	add    BYTE PTR [r8],al
  41538d:	add    BYTE PTR [rax],al
  41538f:	add    BYTE PTR [rdx+0x4b],bh
  415392:	add    BYTE PTR [r8],al
  415395:	add    BYTE PTR [rax],al
  415397:	add    BYTE PTR [rsi+0x4b],bh
  41539a:	add    BYTE PTR [r8],al
  41539d:	add    BYTE PTR [rax],al
  41539f:	add    BYTE PTR [rax+0x414b],cl
  4153a5:	add    BYTE PTR [rax],al
  4153a7:	add    BYTE PTR [rbx+0x414b],dl
  4153ad:	add    BYTE PTR [rax],al
  4153af:	add    BYTE PTR [rsi+0x414b],ah
  4153b5:	add    BYTE PTR [rax],al
  4153b7:	add    BYTE PTR [rax+0x414b],dh
  4153bd:	add    BYTE PTR [rax],al
  4153bf:	add    dl,al
  4153c1:	rex.WXB
  4153c2:	add    BYTE PTR [r8],al
  4153c5:	add    BYTE PTR [rax],al
  4153c7:	add    ch,al
  4153c9:	rex.WXB
  4153ca:	add    BYTE PTR [r8],al
  4153cd:	add    BYTE PTR [rax],al
  4153cf:	add    bh,cl
  4153d1:	rex.WXB
  4153d2:	add    BYTE PTR [r8],al
  4153d5:	add    BYTE PTR [rax],al
  4153d7:	add    bl,dl
  4153d9:	rex.WXB
  4153da:	add    BYTE PTR [r8],al
  4153dd:	add    BYTE PTR [rax],al
  4153df:	add    bh,dl
  4153e1:	rex.WXB
  4153e2:	add    BYTE PTR [r8],al
  4153e5:	add    BYTE PTR [rax],al
  4153e7:	add    dl,bl
  4153e9:	rex.WXB
  4153ea:	add    BYTE PTR [r8],al
  4153ed:	add    BYTE PTR [rax],al
  4153ef:	add    dl,ah
  4153f1:	rex.WXB
  4153f2:	add    BYTE PTR [r8],al
  4153f5:	add    BYTE PTR [rax],al
  4153f7:	add    al,ch
  4153f9:	rex.WXB
  4153fa:	add    BYTE PTR [r8],al
  4153fd:	add    BYTE PTR [rax],al
  4153ff:	add    ch,bh
  415401:	rex.WXB
  415402:	add    BYTE PTR [r8],al
  415405:	add    BYTE PTR [rax],al
  415407:	add    BYTE PTR [rbx],al
  415409:	rex.WR
  41540a:	add    BYTE PTR [r8],al
  41540d:	add    BYTE PTR [rax],al
  41540f:	add    BYTE PTR [rbx],dl
  415411:	rex.WR
  415412:	add    BYTE PTR [r8],al
  415415:	add    BYTE PTR [rax],al
  415417:	add    BYTE PTR [rdi],dl
  415419:	rex.WR
  41541a:	add    BYTE PTR [r8],al
  41541d:	add    BYTE PTR [rax],al
  41541f:	add    BYTE PTR [rsp+rcx*2],bl
  415422:	add    BYTE PTR [r8],al
  415425:	add    BYTE PTR [rax],al
  415427:	add    BYTE PTR [rdi],bl
  415429:	rex.WR
  41542a:	add    BYTE PTR [r8],al
  41542d:	add    BYTE PTR [rax],al
  41542f:	add    BYTE PTR [rdi],ah
  415431:	rex.WR
  415432:	add    BYTE PTR [r8],al
  415435:	add    BYTE PTR [rax],al
  415437:	add    BYTE PTR [rdx],ch
  415439:	rex.WR
  41543a:	add    BYTE PTR [r8],al
  41543d:	add    BYTE PTR [rax],al
  41543f:	add    BYTE PTR [rcx],dh
  415441:	rex.WR
  415442:	add    BYTE PTR [r8],al
  415445:	add    BYTE PTR [rax],al
  415447:	add    BYTE PTR [rsp+rcx*2],dh
  41544a:	add    BYTE PTR [r8],al
  41544d:	add    BYTE PTR [rax],al
  41544f:	add    BYTE PTR [rax],bh
  415451:	rex.WR
  415452:	add    BYTE PTR [r8],al
  415455:	add    BYTE PTR [rax],al
  415457:	add    BYTE PTR [rsp+rcx*2+0x41],al
  41545b:	add    BYTE PTR [rax],al
  41545d:	add    BYTE PTR [rax],al
  41545f:	add    BYTE PTR [rax+0x4c],cl
  415462:	add    BYTE PTR [r8],al
  415465:	add    BYTE PTR [rax],al
  415467:	add    BYTE PTR [rbx+0x4c],cl
  41546a:	add    BYTE PTR [r8],al
  41546d:	add    BYTE PTR [rax],al
  41546f:	add    BYTE PTR [rbx+0x4c],dl
  415472:	add    BYTE PTR [r8],al
  415475:	add    BYTE PTR [rax],al
  415477:	add    BYTE PTR [rdi+0x4c],dl
  41547a:	add    BYTE PTR [r8],al
  41547d:	add    BYTE PTR [rax],al
  41547f:	add    BYTE PTR [rax+0x4c],ah
  415482:	add    BYTE PTR [r8],al
  415485:	add    BYTE PTR [rax],al
  415487:	add    BYTE PTR [rbx+0x4c],ah
  41548a:	add    BYTE PTR [r8],al
  41548d:	add    BYTE PTR [rax],al
  41548f:	add    BYTE PTR [rsp+rcx*2+0x41],ch
  415493:	add    BYTE PTR [rax],al
  415495:	add    BYTE PTR [rax],al
  415497:	add    BYTE PTR [rax+0x4c],dh
  41549a:	add    BYTE PTR [r8],al
  41549d:	add    BYTE PTR [rax],al
  41549f:	add    BYTE PTR [rcx+0x4c],bh
  4154a2:	add    BYTE PTR [r8],al
  4154a5:	add    BYTE PTR [rax],al
  4154a7:	add    BYTE PTR [rsp+rcx*2+0x41],bh
  4154ab:	add    BYTE PTR [rax],al
  4154ad:	add    BYTE PTR [rax],al
  4154af:	add    BYTE PTR [rdx+0x414c],al
  4154b5:	add    BYTE PTR [rax],al
  4154b7:	add    BYTE PTR [rbp+0x414c],al
  4154bd:	add    BYTE PTR [rax],al
  4154bf:	add    BYTE PTR [rbx+0x414c],cl
  4154c5:	add    BYTE PTR [rax],al
  4154c7:	add    BYTE PTR [rsi+0x414c],cl
  4154cd:	add    BYTE PTR [rax],al
  4154cf:	add    BYTE PTR [rbp+0x414c],dl
  4154d5:	add    BYTE PTR [rax],al
  4154d7:	add    BYTE PTR [rax+0x414c],bl
  4154dd:	add    BYTE PTR [rax],al
  4154df:	add    BYTE PTR [rdi+0x414c],bl
  4154e5:	add    BYTE PTR [rax],al
  4154e7:	add    BYTE PTR [rbx+0x414c],ah
  4154ed:	add    BYTE PTR [rax],al
  4154ef:	add    BYTE PTR [rcx+0x414c],dh
  4154f5:	add    BYTE PTR [rax],al
  4154f7:	add    BYTE PTR [rsp+rcx*2+0x41],dh
  4154fe:	add    BYTE PTR [rax],al
  415500:	mov    ebx,0x414c
  415505:	add    BYTE PTR [rax],al
  415507:	add    BYTE PTR [rsi+0x414c],bh
  41550d:	add    BYTE PTR [rax],al
  41550f:	add    ah,al
  415511:	rex.WR
  415512:	add    BYTE PTR [r8],al
  415515:	add    BYTE PTR [rax],al
  415517:	add    bh,al
  415519:	rex.WR
  41551a:	add    BYTE PTR [r8],al
  41551d:	add    BYTE PTR [rax],al
  41551f:	add    bh,cl
  415521:	rex.WR
  415522:	add    BYTE PTR [r8],al
  415525:	add    BYTE PTR [rax],al
  415527:	add    dl,dl
  415529:	rex.WR
  41552a:	add    BYTE PTR [r8],al
  41552d:	add    BYTE PTR [rax],al
  41552f:	add    dl,bl
  415531:	rex.WR
  415532:	add    BYTE PTR [r8],al
  415535:	add    BYTE PTR [rax],al
  415537:	add    ch,bl
  415539:	rex.WR
  41553a:	add    BYTE PTR [r8],al
  41553d:	add    BYTE PTR [rax],al
  41553f:	add    dh,ah
  415541:	rex.WR
  415542:	add    BYTE PTR [r8],al
  415545:	add    BYTE PTR [rax],al
  415547:	add    cl,ch
  415549:	rex.WR
  41554a:	add    BYTE PTR [r8],al
  41554d:	add    BYTE PTR [rax],al
  41554f:	add    al,dh
  415551:	rex.WR
  415552:	add    BYTE PTR [r8],al
  415555:	add    BYTE PTR [rax],al
  415557:	add    bl,dh
  415559:	rex.WR
  41555a:	add    BYTE PTR [r8],al
  41555d:	add    BYTE PTR [rax],al
  41555f:	add    cl,bh
  415561:	rex.WR
  415562:	add    BYTE PTR [r8],al
  415565:	add    BYTE PTR [rax],al
  415567:	add    ah,bh
  415569:	rex.WR
  41556a:	add    BYTE PTR [r8],al
  41556d:	add    BYTE PTR [rax],al
  41556f:	add    BYTE PTR [rip+0x414d],al        # 0x4196c2
  415575:	add    BYTE PTR [rax],al
  415577:	add    BYTE PTR [rax],cl
  415579:	rex.WRB
  41557a:	add    BYTE PTR [r8],al
  41557d:	add    BYTE PTR [rax],al
  41557f:	add    BYTE PTR [rax],dl
  415581:	rex.WRB
  415582:	add    BYTE PTR [r8],al
  415585:	add    BYTE PTR [rax],al
  415587:	add    BYTE PTR [rbx],dl
  415589:	rex.WRB
  41558a:	add    BYTE PTR [r8],al
  41558d:	add    BYTE PTR [rax],al
  41558f:	add    BYTE PTR [rbx],bl
  415591:	rex.WRB
  415592:	add    BYTE PTR [r8],al
  415595:	add    BYTE PTR [rax],al
  415597:	add    BYTE PTR [rsi],bl
  415599:	rex.WRB
  41559a:	add    BYTE PTR [r8],al
  41559d:	add    BYTE PTR [rax],al
  41559f:	add    BYTE PTR [rip+0x414d],ah        # 0x4196f2
  4155a5:	add    BYTE PTR [rax],al
  4155a7:	add    BYTE PTR [rax],ch
  4155a9:	rex.WRB
  4155aa:	add    BYTE PTR [r8],al
  4155ad:	add    BYTE PTR [rax],al
  4155af:	add    BYTE PTR [rax],dh
  4155b1:	rex.WRB
  4155b2:	add    BYTE PTR [r8],al
  4155b5:	add    BYTE PTR [rax],al
  4155b7:	add    BYTE PTR [rbx],dh
  4155b9:	rex.WRB
  4155ba:	add    BYTE PTR [r8],al
  4155bd:	add    BYTE PTR [rax],al
  4155bf:	add    BYTE PTR [rdi],dh
  4155c1:	rex.WRB
  4155c2:	add    BYTE PTR [r8],al
  4155c5:	add    BYTE PTR [rax],al
  4155c7:	add    BYTE PTR [rdx],bh
  4155c9:	rex.WRB
  4155ca:	add    BYTE PTR [r8],al
  4155cd:	add    BYTE PTR [rax],al
  4155cf:	add    BYTE PTR [rdi],dh
  4155d1:	rex.WRB
  4155d2:	add    BYTE PTR [r8],al
  4155d5:	add    BYTE PTR [rax],al
  4155d7:	add    BYTE PTR [rbp+rcx*2+0x41],cl
  4155db:	add    BYTE PTR [rax],al
  4155dd:	add    BYTE PTR [rax],al
  4155df:	add    BYTE PTR [rbp+rcx*2+0x41],bl
  4155e3:	add    BYTE PTR [rax],al
  4155e5:	add    BYTE PTR [rax],al
  4155e7:	add    BYTE PTR [rdi+0x4d],bl
  4155ea:	add    BYTE PTR [r8],al
  4155ed:	add    BYTE PTR [rax],al
  4155ef:	add    BYTE PTR [rax+0x4d],ch
  4155f2:	add    BYTE PTR [r8],al
  4155f5:	add    BYTE PTR [rax],al
  4155f7:	add    BYTE PTR [rbx+0x4d],ch
  4155fa:	add    BYTE PTR [r8],al
  4155fd:	add    BYTE PTR [rax],al
  4155ff:	add    BYTE PTR [rbx+0x4d],dh
  415602:	add    BYTE PTR [r8],al
  415605:	add    BYTE PTR [rax],al
  415607:	add    BYTE PTR [rdi+0x4d],dh
  41560a:	add    BYTE PTR [r8],al
  41560d:	add    BYTE PTR [rax],al
  41560f:	add    BYTE PTR [rax+0x414d],al
  415615:	add    BYTE PTR [rax],al
  415617:	add    BYTE PTR [rbx+0x414d],al
  41561d:	add    BYTE PTR [rax],al
  41561f:	add    BYTE PTR [rbp+rcx*2+0x41],cl
  415626:	add    BYTE PTR [rax],al
  415628:	(bad)  
  415629:	rex.WRB
  41562a:	add    BYTE PTR [r8],al
  41562d:	add    BYTE PTR [rax],al
  41562f:	add    BYTE PTR [rbp+0x414d],dl
  415635:	add    BYTE PTR [rax],al
  415637:	add    BYTE PTR [rax+0x414d],bl
  41563d:	add    BYTE PTR [rax],al
  41563f:	add    BYTE PTR [rdi+0x414d],bl
  415645:	add    BYTE PTR [rax],al
  415647:	add    BYTE PTR [rdx+0x414d],ah
  41564d:	add    BYTE PTR [rax],al
  41564f:	add    BYTE PTR [rax+0x414d],ch
  415655:	add    BYTE PTR [rax],al
  415657:	add    BYTE PTR [rbx+0x414d],ch
  41565d:	add    BYTE PTR [rax],al
  41565f:	add    BYTE PTR [rbp+rcx*2+0x41],dh
  415666:	add    BYTE PTR [rax],al
  415668:	mov    eax,0x414d
  41566d:	add    BYTE PTR [rax],al
  41566f:	add    dh,al
  415671:	rex.WRB
  415672:	add    BYTE PTR [r8],al
  415675:	add    BYTE PTR [rax],al
  415677:	add    cl,cl
  415679:	rex.WRB
  41567a:	add    BYTE PTR [r8],al
  41567d:	add    BYTE PTR [rax],al
  41567f:	add    bl,dl
  415681:	rex.WRB
  415682:	add    BYTE PTR [r8],al
  415685:	add    BYTE PTR [rax],al
  415687:	add    dh,dl
  415689:	rex.WRB
  41568a:	add    BYTE PTR [r8],al
  41568d:	add    BYTE PTR [rax],al
  41568f:	add    bh,bl
  415691:	rex.WRB
  415692:	add    BYTE PTR [r8],al
  415695:	add    BYTE PTR [rax],al
  415697:	add    dl,ah
  415699:	rex.WRB
  41569a:	add    BYTE PTR [r8],al
  41569d:	add    BYTE PTR [rax],al
  41569f:	add    ch,ch
  4156a1:	rex.WRB
  4156a2:	add    BYTE PTR [r8],al
  4156a5:	add    BYTE PTR [rax],al
  4156a7:	add    al,dh
  4156a9:	rex.WRB
  4156aa:	add    BYTE PTR [r8],al
  4156ad:	add    BYTE PTR [rax],al
  4156af:	add    ch,dh
  4156b1:	rex.WRB
  4156b2:	add    BYTE PTR [r8],al
  4156b5:	add    BYTE PTR [rax],al
  4156b7:	add    al,bh
  4156b9:	rex.WRB
  4156ba:	add    BYTE PTR [r8],al
  4156bd:	add    BYTE PTR [rax],al
  4156bf:	add    bl,bh
  4156c1:	rex.WRB
  4156c2:	add    BYTE PTR [r8],al
  4156c5:	add    BYTE PTR [rax],al
  4156c7:	add    dh,bh
  4156c9:	rex.WRB
  4156ca:	add    BYTE PTR [r8],al
  4156cd:	add    BYTE PTR [rax],al
  4156cf:	add    BYTE PTR [rax],cl
  4156d1:	rex.WRX
  4156d2:	add    BYTE PTR [r8],al
  4156d5:	add    BYTE PTR [rax],al
  4156d7:	add    BYTE PTR [rbx],cl
  4156d9:	rex.WRX
  4156da:	add    BYTE PTR [r8],al
  4156dd:	add    BYTE PTR [rax],al
  4156df:	add    BYTE PTR [rbx],dl
  4156e1:	rex.WRX
  4156e2:	add    BYTE PTR [r8],al
  4156e5:	add    BYTE PTR [rax],al
  4156e7:	add    BYTE PTR [rsi],dl
  4156e9:	rex.WRX
  4156ea:	add    BYTE PTR [r8],al
  4156ed:	add    BYTE PTR [rax],al
  4156ef:	add    BYTE PTR [rdx],bl
  4156f1:	rex.WRX
  4156f2:	add    BYTE PTR [r8],al
  4156f5:	add    BYTE PTR [rax],al
  4156f7:	add    BYTE PTR [rip+0x414e],bl        # 0x41984b
  4156fd:	add    BYTE PTR [rax],al
  4156ff:	add    BYTE PTR [rsi],ah
  415701:	rex.WRX
  415702:	add    BYTE PTR [r8],al
  415705:	add    BYTE PTR [rax],al
  415707:	add    BYTE PTR [rcx],ch
  415709:	rex.WRX
  41570a:	add    BYTE PTR [r8],al
  41570d:	add    BYTE PTR [rax],al
  41570f:	add    BYTE PTR [rdx],dh
  415711:	rex.WRX
  415712:	add    BYTE PTR [r8],al
  415715:	add    BYTE PTR [rax],al
  415717:	add    BYTE PTR [rip+0x414e],dh        # 0x41986b
  41571d:	add    BYTE PTR [rax],al
  41571f:	add    BYTE PTR [rsi+rcx*2],bh
  415722:	add    BYTE PTR [r8],al
  415725:	add    BYTE PTR [rax],al
  415727:	add    BYTE PTR [rdi],bh
  415729:	rex.WRX
  41572a:	add    BYTE PTR [r8],al
  41572d:	add    BYTE PTR [rax],al
  41572f:	add    BYTE PTR [rbx+0x4e],cl
  415732:	add    BYTE PTR [r8],al
  415735:	add    BYTE PTR [rax],al
  415737:	add    BYTE PTR [rsi+0x4e],cl
  41573a:	add    BYTE PTR [r8],al
  41573d:	add    BYTE PTR [rax],al
  41573f:	add    BYTE PTR [rbx+0x4e],cl
  415742:	add    BYTE PTR [r8],al
  415745:	add    BYTE PTR [rax],al
  415747:	add    BYTE PTR [rax+0x4e],bl
  41574a:	add    BYTE PTR [r8],al
  41574d:	add    BYTE PTR [rax],al
  41574f:	add    BYTE PTR [rsi+0x4e],bl
  415752:	add    BYTE PTR [r8],al
  415755:	add    BYTE PTR [rax],al
  415757:	add    BYTE PTR [rcx+0x4e],ah
  41575a:	add    BYTE PTR [r8],al
  41575d:	add    BYTE PTR [rax],al
  41575f:	add    BYTE PTR [rcx+0x4e],ch
  415762:	add    BYTE PTR [r8],al
  415765:	add    BYTE PTR [rax],al
  415767:	add    BYTE PTR [rsi+rcx*2+0x41],ch
  41576b:	add    BYTE PTR [rax],al
  41576d:	add    BYTE PTR [rax],al
  41576f:	add    BYTE PTR [rbx+0x4e],dh
  415772:	add    BYTE PTR [r8],al
  415775:	add    BYTE PTR [rax],al
  415777:	add    BYTE PTR [rdi+0x4e],dh
  41577a:	add    BYTE PTR [r8],al
  41577d:	add    BYTE PTR [rax],al
  41577f:	add    BYTE PTR [rdi+0x4e],bh
  415782:	add    BYTE PTR [r8],al
  415785:	add    BYTE PTR [rax],al
  415787:	add    BYTE PTR [rdx+0x414e],al
  41578d:	add    BYTE PTR [rax],al
  41578f:	add    BYTE PTR [rcx+0x414e],cl
  415795:	add    BYTE PTR [rax],al
  415797:	add    BYTE PTR [rsi+rcx*2+0x41],cl
  41579e:	add    BYTE PTR [rax],al
  4157a0:	xchg   ebp,eax
  4157a1:	rex.WRX
  4157a2:	add    BYTE PTR [r8],al
  4157a5:	add    BYTE PTR [rax],al
  4157a7:	add    BYTE PTR [rbx+0x414e],bl
  4157ad:	add    BYTE PTR [rax],al
  4157af:	add    BYTE PTR [rdx+0x414e],ch
  4157b5:	add    BYTE PTR [rax],al
  4157b7:	add    BYTE PTR [rax+0x414e],dh
  4157bd:	add    BYTE PTR [rax],al
  4157bf:	add    bl,cl
  4157c1:	rex.WRX
  4157c2:	add    BYTE PTR [r8],al
  4157c5:	add    BYTE PTR [rax],al
  4157c7:	add    dh,cl
  4157c9:	rex.WRX
  4157ca:	add    BYTE PTR [r8],al
  4157cd:	add    BYTE PTR [rax],al
  4157cf:	add    ch,dl
  4157d1:	rex.WRX
  4157d2:	add    BYTE PTR [r8],al
  4157d5:	add    BYTE PTR [rax],al
  4157d7:	add    al,bl
  4157d9:	rex.WRX
  4157da:	add    BYTE PTR [r8],al
  4157dd:	add    BYTE PTR [rax],al
  4157df:	add    dh,bl
  4157e1:	rex.WRX
  4157e2:	add    BYTE PTR [r8],al
  4157e5:	add    BYTE PTR [rax],al
  4157e7:	add    cl,ah
  4157e9:	rex.WRX
  4157ea:	add    BYTE PTR [r8],al
  4157ed:	add    BYTE PTR [rax],al
  4157ef:	add    bh,ch
  4157f1:	rex.WRX
  4157f2:	add    BYTE PTR [r8],al
  4157f5:	add    BYTE PTR [rax],al
  4157f7:	add    dl,dh
  4157f9:	rex.WRX
  4157fa:	add    BYTE PTR [r8],al
  4157fd:	add    BYTE PTR [rax],al
  4157ff:	add    dh,dh
  415801:	rex.WRX
  415802:	add    BYTE PTR [r8],al
  415805:	add    BYTE PTR [rax],al
  415807:	add    cl,bh
  415809:	rex.WRX
  41580a:	add    BYTE PTR [r8],al
  41580d:	add    BYTE PTR [rax],al
  41580f:	add    BYTE PTR [rdi+rcx*2],al
  415812:	add    BYTE PTR [r8],al
  415815:	add    BYTE PTR [rax],al
  415817:	add    BYTE PTR [rdi],al
  415819:	rex.WRXB
  41581a:	add    BYTE PTR [r8],al
  41581d:	add    BYTE PTR [rax],al
  41581f:	add    BYTE PTR [rdi],cl
  415821:	rex.WRXB
  415822:	add    BYTE PTR [r8],al
  415825:	add    BYTE PTR [rax],al
  415827:	add    BYTE PTR [rdx],dl
  415829:	rex.WRXB
  41582a:	add    BYTE PTR [r8],al
  41582d:	add    BYTE PTR [rax],al
  41582f:	add    BYTE PTR [rax],bl
  415831:	rex.WRXB
  415832:	add    BYTE PTR [r8],al
  415835:	add    BYTE PTR [rax],al
  415837:	add    BYTE PTR [rbx],bl
  415839:	rex.WRXB
  41583a:	add    BYTE PTR [r8],al
  41583d:	add    BYTE PTR [rax],al
  41583f:	add    BYTE PTR [rax],bl
  415841:	rex.WRXB
  415842:	add    BYTE PTR [r8],al
  415845:	add    BYTE PTR [rax],al
  415847:	add    BYTE PTR [rbx],ch
  415849:	rex.WRXB
  41584a:	add    BYTE PTR [r8],al
  41584d:	add    BYTE PTR [rax],al
  41584f:	add    BYTE PTR [rsi],dh
  415851:	rex.WRXB
  415852:	add    BYTE PTR [r8],al
  415855:	add    BYTE PTR [rax],al
  415857:	add    BYTE PTR [rcx],bh
  415859:	rex.WRXB
  41585a:	add    BYTE PTR [r8],al
  41585d:	add    BYTE PTR [rax],al
  41585f:	add    BYTE PTR [rbx+0x4f],al
  415862:	add    BYTE PTR [r8],al
  415865:	add    BYTE PTR [rax],al
  415867:	add    BYTE PTR [rsi+0x4f],al
  41586a:	add    BYTE PTR [r8],al
  41586d:	add    BYTE PTR [rax],al
  41586f:	add    BYTE PTR [rax+0x4f],dl
  415872:	add    BYTE PTR [r8],al
  415875:	add    BYTE PTR [rax],al
  415877:	add    BYTE PTR [rdi+rcx*2+0x41],dl
  41587b:	add    BYTE PTR [rax],al
  41587d:	add    BYTE PTR [rax],al
  41587f:	add    BYTE PTR [rbp+0x4f],bl
  415882:	add    BYTE PTR [r8],al
  415885:	add    BYTE PTR [rax],al
  415887:	add    BYTE PTR [rcx+0x4f],ah
  41588a:	add    BYTE PTR [r8],al
  41588d:	add    BYTE PTR [rax],al
  41588f:	add    BYTE PTR [rax+0x4f],ch
  415892:	add    BYTE PTR [r8],al
  415895:	add    BYTE PTR [rax],al
  415897:	add    BYTE PTR [rbx+0x4f],ch
  41589a:	add    BYTE PTR [r8],al
  41589d:	add    BYTE PTR [rax],al
  41589f:	add    BYTE PTR [rbx+0x4f],dh
  4158a2:	add    BYTE PTR [r8],al
  4158a5:	add    BYTE PTR [rax],al
  4158a7:	add    BYTE PTR [rsi+0x4f],dh
  4158aa:	add    BYTE PTR [r8],al
  4158ad:	add    BYTE PTR [rax],al
  4158af:	add    BYTE PTR [rdi+rcx*2+0x41],bh
  4158b3:	add    BYTE PTR [rax],al
  4158b5:	add    BYTE PTR [rax],al
  4158b7:	add    BYTE PTR [rdi+0x4f],bh
  4158ba:	add    BYTE PTR [r8],al
  4158bd:	add    BYTE PTR [rax],al
  4158bf:	add    BYTE PTR [rdi+0x414f],al
  4158c5:	add    BYTE PTR [rax],al
  4158c7:	add    BYTE PTR [rdx+0x414f],cl
  4158cd:	add    BYTE PTR [rax],al
  4158cf:	add    BYTE PTR [rdx+0x414f],dl
  4158d5:	add    BYTE PTR [rax],al
  4158d7:	add    BYTE PTR [rbp+0x414f],dl
  4158dd:	add    BYTE PTR [rax],al
  4158df:	add    BYTE PTR [rcx+0x414f],bl
  4158e5:	add    BYTE PTR [rax],al
  4158e7:	add    BYTE PTR [rdi+rcx*2+0x41],bl
  4158ee:	add    BYTE PTR [rax],al
  4158f0:	movabs ds:0xa70000000000414f,eax
  4158f9:	rex.WRXB
  4158fa:	add    BYTE PTR [r8],al
  4158fd:	add    BYTE PTR [rax],al
  4158ff:	add    BYTE PTR [rsi+0x414f],ch
  415905:	add    BYTE PTR [rax],al
  415907:	add    BYTE PTR [rcx+0x414f],dh
  41590d:	add    BYTE PTR [rax],al
  41590f:	add    BYTE PTR [rdi+0x414f],dh
  415915:	add    BYTE PTR [rax],al
  415917:	add    BYTE PTR [rdx+0x414f],bh
  41591d:	add    BYTE PTR [rax],al
  41591f:	add    BYTE PTR [rsi+0x414f],bh
  415925:	add    BYTE PTR [rax],al
  415927:	add    cl,al
  415929:	rex.WRXB
  41592a:	add    BYTE PTR [r8],al
  41592d:	add    BYTE PTR [rax],al
  41592f:	add    bl,cl
  415931:	rex.WRXB
  415932:	add    BYTE PTR [r8],al
  415935:	add    BYTE PTR [rax],al
  415937:	add    bh,cl
  415939:	rex.WRXB
  41593a:	add    BYTE PTR [r8],al
  41593d:	add    BYTE PTR [rax],al
  41593f:	add    bl,cl
  415941:	rex.WRXB
  415942:	add    BYTE PTR [r8],al
  415945:	add    BYTE PTR [rax],al
  415947:	add    dh,bl
  415949:	rex.WRXB
  41594a:	add    BYTE PTR [r8],al
  41594d:	add    BYTE PTR [rax],al
  41594f:	add    ch,ah
  415951:	rex.WRXB
  415952:	add    BYTE PTR [r8],al
  415955:	add    BYTE PTR [rax],al
  415957:	add    al,ch
  415959:	rex.WRXB
  41595a:	add    BYTE PTR [r8],al
  41595d:	add    BYTE PTR [rax],al
  41595f:	add    al,dh
  415961:	rex.WRXB
  415962:	add    BYTE PTR [r8],al
  415965:	add    BYTE PTR [rax],al
  415967:	add    bl,dh
  415969:	rex.WRXB
  41596a:	add    BYTE PTR [r8],al
  41596d:	add    BYTE PTR [rax],al
  41596f:	add    cl,bh
  415971:	rex.WRXB
  415972:	add    BYTE PTR [r8],al
  415975:	add    BYTE PTR [rax],al
  415977:	add    ah,bh
  415979:	rex.WRXB
  41597a:	add    BYTE PTR [r8],al
  41597d:	add    BYTE PTR [rax],al
  41597f:	add    BYTE PTR [rdx],al
  415981:	push   rax
  415982:	add    BYTE PTR [r8],al
  415985:	add    BYTE PTR [rax],al
  415987:	add    BYTE PTR [rip+0x4150],al        # 0x419add
  41598d:	add    BYTE PTR [rax],al
  41598f:	add    BYTE PTR [rip+0x4150],cl        # 0x419ae5
  415995:	add    BYTE PTR [rax],al
  415997:	add    BYTE PTR [rcx],dl
  415999:	push   rax
  41599a:	add    BYTE PTR [r8],al
  41599d:	add    BYTE PTR [rax],al
  41599f:	add    BYTE PTR [rax+rdx*2],bl
  4159a2:	add    BYTE PTR [r8],al
  4159a5:	add    BYTE PTR [rax],al
  4159a7:	add    BYTE PTR [rdi],bl
  4159a9:	push   rax
  4159aa:	add    BYTE PTR [r8],al
  4159ad:	add    BYTE PTR [rax],al
  4159af:	add    BYTE PTR [rsi],ah
  4159b1:	push   rax
  4159b2:	add    BYTE PTR [r8],al
  4159b5:	add    BYTE PTR [rax],al
  4159b7:	add    BYTE PTR [rdx],ch
  4159b9:	push   rax
  4159ba:	add    BYTE PTR [r8],al
  4159bd:	add    BYTE PTR [rax],al
  4159bf:	add    BYTE PTR [rdi],ch
  4159c1:	push   rax
  4159c2:	add    BYTE PTR [r8],al
  4159c5:	add    BYTE PTR [rax],al
  4159c7:	add    BYTE PTR [rdx],dh
  4159c9:	push   rax
  4159ca:	add    BYTE PTR [r8],al
  4159cd:	add    BYTE PTR [rax],al
  4159cf:	add    BYTE PTR [rcx],bh
  4159d1:	push   rax
  4159d2:	add    BYTE PTR [r8],al
  4159d5:	add    BYTE PTR [rax],al
  4159d7:	add    BYTE PTR [rax+rdx*2],bh
  4159da:	add    BYTE PTR [r8],al
  4159dd:	add    BYTE PTR [rax],al
  4159df:	add    BYTE PTR [rdi+0x50],al
  4159e2:	add    BYTE PTR [r8],al
  4159e5:	add    BYTE PTR [rax],al
  4159e7:	add    BYTE PTR [rdx+0x50],cl
  4159ea:	add    BYTE PTR [r8],al
  4159ed:	add    BYTE PTR [rax],al
  4159ef:	add    BYTE PTR [rdx+0x50],dl
  4159f2:	add    BYTE PTR [r8],al
  4159f5:	add    BYTE PTR [rax],al
  4159f7:	add    BYTE PTR [rsi+0x50],dl
  4159fa:	add    BYTE PTR [r8],al
  4159fd:	add    BYTE PTR [rax],al
  4159ff:	add    BYTE PTR [rsi+0x50],bl
  415a02:	add    BYTE PTR [r8],al
  415a05:	add    BYTE PTR [rax],al
  415a07:	add    BYTE PTR [rcx+0x50],ah
  415a0a:	add    BYTE PTR [r8],al
  415a0d:	add    BYTE PTR [rax],al
  415a0f:	add    BYTE PTR [rcx+0x50],ch
  415a12:	add    BYTE PTR [r8],al
  415a15:	add    BYTE PTR [rax],al
  415a17:	add    BYTE PTR [rax+rdx*2+0x41],ch
  415a1b:	add    BYTE PTR [rax],al
  415a1d:	add    BYTE PTR [rax],al
  415a1f:	add    BYTE PTR [rbp+0x50],dh
  415a22:	add    BYTE PTR [r8],al
  415a25:	add    BYTE PTR [rax],al
  415a27:	add    BYTE PTR [rax+0x50],bh
  415a2a:	add    BYTE PTR [r8],al
  415a2d:	add    BYTE PTR [rax],al
  415a2f:	add    BYTE PTR [rax+0x4150],al
  415a35:	add    BYTE PTR [rax],al
  415a37:	add    BYTE PTR [rbx+0x4150],al
  415a3d:	add    BYTE PTR [rax],al
  415a3f:	add    BYTE PTR [rdi+0x4150],cl
  415a45:	add    BYTE PTR [rax],al
  415a47:	add    BYTE PTR [rdx+0x4150],dl
  415a4d:	add    BYTE PTR [rax],al
  415a4f:	add    BYTE PTR [rbx+0x4150],bl
  415a55:	add    BYTE PTR [rax],al
  415a57:	add    BYTE PTR [rdi+0x4150],bl
  415a5d:	add    BYTE PTR [rax],al
  415a5f:	add    BYTE PTR [rbp+0x4150],ah
  415a65:	add    BYTE PTR [rax],al
  415a67:	add    BYTE PTR [rax+0x4150],ch
  415a6d:	add    BYTE PTR [rax],al
  415a6f:	add    BYTE PTR [rdi+0x4150],ch
  415a75:	add    BYTE PTR [rax],al
  415a77:	add    BYTE PTR [rdx+0x4150],dh
  415a7d:	add    BYTE PTR [rax],al
  415a7f:	add    BYTE PTR [rdi+0x4150],ch
  415a85:	add    BYTE PTR [rax],al
  415a87:	add    dl,al
  415a89:	push   rax
  415a8a:	add    BYTE PTR [r8],al
  415a8d:	add    BYTE PTR [rax],al
  415a8f:	add    al,dl
  415a91:	push   rax
  415a92:	add    BYTE PTR [r8],al
  415a95:	add    BYTE PTR [rax],al
  415a97:	add    bl,dl
  415a99:	push   rax
  415a9a:	add    BYTE PTR [r8],al
  415a9d:	add    BYTE PTR [rax],al
  415a9f:	add    ch,bl
  415aa1:	push   rax
  415aa2:	add    BYTE PTR [r8],al
  415aa5:	add    BYTE PTR [rax],al
  415aa7:	add    BYTE PTR [rsi+0x4140],ah
  415aad:	add    BYTE PTR [rax],al
  415aaf:	add    al,ah
  415ab1:	push   rax
  415ab2:	add    BYTE PTR [r8],al
  415ab5:	add    BYTE PTR [rax],al
  415ab7:	add    bl,ah
  415ab9:	push   rax
  415aba:	add    BYTE PTR [r8],al
  415abd:	add    BYTE PTR [rax],al
  415abf:	add    ch,ch
  415ac1:	push   rax
  415ac2:	add    BYTE PTR [r8],al
  415ac5:	add    BYTE PTR [rax],al
  415ac7:	add    cl,dh
  415ac9:	push   rax
  415aca:	add    BYTE PTR [r8],al
  415acd:	add    BYTE PTR [rax],al
  415acf:	add    ch,ch
  415ad1:	push   rax
  415ad2:	add    BYTE PTR [r8],al
  415ad5:	add    BYTE PTR [rax],al
  415ad7:	add    BYTE PTR [rcx],al
  415ad9:	push   rcx
  415ada:	add    BYTE PTR [r8],al
  415add:	add    BYTE PTR [rax],al
  415adf:	add    BYTE PTR [rdi],cl
  415ae1:	push   rcx
  415ae2:	add    BYTE PTR [r8],al
  415ae5:	add    BYTE PTR [rax],al
  415ae7:	add    BYTE PTR [rbx],dl
  415ae9:	push   rcx
  415aea:	add    BYTE PTR [r8],al
  415aed:	add    BYTE PTR [rax],al
  415aef:	add    BYTE PTR [rdi],cl
  415af1:	push   rcx
  415af2:	add    BYTE PTR [r8],al
  415af5:	add    BYTE PTR [rax],al
  415af7:	add    BYTE PTR [rdi],bl
  415af9:	push   rcx
  415afa:	add    BYTE PTR [r8],al
  415afd:	add    BYTE PTR [rax],al
  415aff:	add    BYTE PTR [rcx],ch
  415b01:	push   rcx
  415b02:	add    BYTE PTR [r8],al
  415b05:	add    BYTE PTR [rax],al
  415b07:	add    BYTE PTR [rip+0x4151],ch        # 0x419c5e
  415b0d:	add    BYTE PTR [rax],al
  415b0f:	add    BYTE PTR [rcx],ch
  415b11:	push   rcx
  415b12:	add    BYTE PTR [r8],al
  415b15:	add    BYTE PTR [rax],al
  415b17:	add    BYTE PTR [rdx],bh
  415b19:	push   rcx
  415b1a:	add    BYTE PTR [r8],al
  415b1d:	add    BYTE PTR [rax],al
  415b1f:	add    BYTE PTR [rbp+0x51],al
  415b22:	add    BYTE PTR [r8],al
  415b25:	add    BYTE PTR [rax],al
  415b27:	add    BYTE PTR [rcx+0x51],cl
  415b2a:	add    BYTE PTR [r8],al
  415b2d:	add    BYTE PTR [rax],al
  415b2f:	add    BYTE PTR [rbp+0x51],al
  415b32:	add    BYTE PTR [r8],al
  415b35:	add    BYTE PTR [rax],al
  415b37:	add    BYTE PTR [rsi+0x51],dl
  415b3a:	add    BYTE PTR [r8],al
  415b3d:	add    BYTE PTR [rax],al
  415b3f:	add    BYTE PTR [rcx+0x51],ah
  415b42:	add    BYTE PTR [r8],al
  415b45:	add    BYTE PTR [rax],al
  415b47:	add    BYTE PTR [rcx+rdx*2+0x41],ah
  415b4b:	add    BYTE PTR [rax],al
  415b4d:	add    BYTE PTR [rax],al
  415b4f:	add    BYTE PTR [rbx+0x51],ch
  415b52:	add    BYTE PTR [r8],al
  415b55:	add    BYTE PTR [rax],al
  415b57:	add    BYTE PTR [rsi+0x51],ch
  415b5a:	add    BYTE PTR [r8],al
  415b5d:	add    BYTE PTR [rax],al
  415b5f:	add    BYTE PTR [rdi+0x51],dh
  415b62:	add    BYTE PTR [r8],al
  415b65:	add    BYTE PTR [rax],al
  415b67:	add    BYTE PTR [rdx+0x51],bh
  415b6a:	add    BYTE PTR [r8],al
  415b6d:	add    BYTE PTR [rax],al
  415b6f:	add    BYTE PTR [rdx+0x4151],cl
  415b75:	add    BYTE PTR [rax],al
  415b77:	add    BYTE PTR [rsi+0x4151],dl
  415b7d:	add    BYTE PTR [rax],al
  415b7f:	add    BYTE PTR [rdx+0x4151],bl
  415b85:	add    BYTE PTR [rax],al
  415b87:	add    BYTE PTR [rbp+0x4151],bl
  415b8d:	add    BYTE PTR [rax],al
  415b8f:	add    BYTE PTR [rbp+0x4151],ah
  415b95:	add    BYTE PTR [rax],al
  415b97:	add    BYTE PTR [rcx+0x4151],ch
  415b9d:	add    BYTE PTR [rax],al
  415b9f:	add    BYTE PTR [rax+0x4151],dh
  415ba5:	add    BYTE PTR [rax],al
  415ba7:	add    BYTE PTR [rbx+0x4151],dh
  415bad:	add    BYTE PTR [rax],al
  415baf:	add    BYTE PTR [rcx+0x4151],bh
  415bb5:	add    BYTE PTR [rax],al
  415bb7:	add    BYTE PTR [rcx+rdx*2+0x41],bh
  415bbe:	add    BYTE PTR [rax],al
  415bc0:	ret    
  415bc1:	push   rcx
  415bc2:	add    BYTE PTR [r8],al
  415bc5:	add    BYTE PTR [rax],al
  415bc7:	add    dh,al
  415bc9:	push   rcx
  415bca:	add    BYTE PTR [r8],al
  415bcd:	add    BYTE PTR [rax],al
  415bcf:	add    ah,cl
  415bd1:	push   rcx
  415bd2:	add    BYTE PTR [r8],al
  415bd5:	add    BYTE PTR [rax],al
  415bd7:	add    bh,cl
  415bd9:	push   rcx
  415bda:	add    BYTE PTR [r8],al
  415bdd:	add    BYTE PTR [rax],al
  415bdf:	add    ah,dl
  415be1:	push   rcx
  415be2:	add    BYTE PTR [r8],al
  415be5:	add    BYTE PTR [rax],al
  415be7:	add    bh,dl
  415be9:	push   rcx
  415bea:	add    BYTE PTR [r8],al
  415bed:	add    BYTE PTR [rax],al
  415bef:	add    al,ah
  415bf1:	push   rcx
  415bf2:	add    BYTE PTR [r8],al
  415bf5:	add    BYTE PTR [rax],al
  415bf7:	add    bl,ah
  415bf9:	push   rcx
  415bfa:	add    BYTE PTR [r8],al
  415bfd:	add    BYTE PTR [rax],al
  415bff:	add    bl,ch
  415c01:	push   rcx
  415c02:	add    BYTE PTR [r8],al
  415c05:	add    BYTE PTR [rax],al
  415c07:	add    dh,ch
  415c09:	push   rcx
  415c0a:	add    BYTE PTR [r8],al
  415c0d:	add    BYTE PTR [rax],al
  415c0f:	add    bh,dh
  415c11:	push   rcx
  415c12:	add    BYTE PTR [r8],al
  415c15:	add    BYTE PTR [rax],al
  415c17:	add    dl,bh
  415c19:	push   rcx
  415c1a:	add    BYTE PTR [r8],al
  415c1d:	add    BYTE PTR [rax],al
  415c1f:	add    BYTE PTR [rcx],al
  415c21:	push   rdx
  415c22:	add    BYTE PTR [r8],al
  415c25:	add    BYTE PTR [rax],al
  415c27:	add    BYTE PTR [rdx+rdx*2],al
  415c2a:	add    BYTE PTR [r8],al
  415c2d:	add    BYTE PTR [rax],al
  415c2f:	add    BYTE PTR [rdx+rdx*2],cl
  415c32:	add    BYTE PTR [r8],al
  415c35:	add    BYTE PTR [rax],al
  415c37:	add    BYTE PTR [rdi],cl
  415c39:	push   rdx
  415c3a:	add    BYTE PTR [r8],al
  415c3d:	add    BYTE PTR [rax],al
  415c3f:	add    BYTE PTR [rsi],dl
  415c41:	push   rdx
  415c42:	add    BYTE PTR [r8],al
  415c45:	add    BYTE PTR [rax],al
  415c47:	add    BYTE PTR [rcx],bl
  415c49:	push   rdx
  415c4a:	add    BYTE PTR [r8],al
  415c4d:	add    BYTE PTR [rax],al
  415c4f:	add    BYTE PTR [rdi],bl
  415c51:	push   rdx
  415c52:	add    BYTE PTR [r8],al
  415c55:	add    BYTE PTR [rax],al
  415c57:	add    BYTE PTR [rdx],ah
  415c59:	push   rdx
  415c5a:	add    BYTE PTR [r8],al
  415c5d:	add    BYTE PTR [rax],al
  415c5f:	add    BYTE PTR [rcx],ch
  415c61:	push   rdx
  415c62:	add    BYTE PTR [r8],al
  415c65:	add    BYTE PTR [rax],al
  415c67:	add    BYTE PTR [rdx+rdx*2],ch
  415c6a:	add    BYTE PTR [r8],al
  415c6d:	add    BYTE PTR [rax],al
  415c6f:	add    BYTE PTR [rsi],dh
  415c71:	push   rdx
  415c72:	add    BYTE PTR [r8],al
  415c75:	add    BYTE PTR [rax],al
  415c77:	add    BYTE PTR [rcx],bh
  415c79:	push   rdx
  415c7a:	add    BYTE PTR [r8],al
  415c7d:	add    BYTE PTR [rax],al
  415c7f:	add    BYTE PTR [rsi],bh
  415c81:	push   rdx
  415c82:	add    BYTE PTR [r8],al
  415c85:	add    BYTE PTR [rax],al
  415c87:	add    BYTE PTR [rcx+0x52],al
  415c8a:	add    BYTE PTR [r8],al
  415c8d:	add    BYTE PTR [rax],al
  415c8f:	add    BYTE PTR [rsi],bh
  415c91:	push   rdx
  415c92:	add    BYTE PTR [r8],al
  415c95:	add    BYTE PTR [rax],al
  415c97:	add    BYTE PTR [rdi+0x52],al
  415c9a:	add    BYTE PTR [r8],al
  415c9d:	add    BYTE PTR [rax],al
  415c9f:	add    BYTE PTR [rbp+0x52],dl
  415ca2:	add    BYTE PTR [r8],al
  415ca5:	add    BYTE PTR [rax],al
  415ca7:	add    BYTE PTR [rcx+0x52],ah
  415caa:	add    BYTE PTR [r8],al
  415cad:	add    BYTE PTR [rax],al
  415caf:	add    BYTE PTR [rdx+0x52],dh
  415cb2:	add    BYTE PTR [r8],al
  415cb5:	add    BYTE PTR [rax],al
  415cb7:	add    BYTE PTR [rbp+0x52],dh
  415cba:	add    BYTE PTR [r8],al
  415cbd:	add    BYTE PTR [rax],al
  415cbf:	add    BYTE PTR [rbx+0x52],bh
  415cc2:	add    BYTE PTR [r8],al
  415cc5:	add    BYTE PTR [rax],al
  415cc7:	add    BYTE PTR [rsi+0x52],bh
  415cca:	add    BYTE PTR [r8],al
  415ccd:	add    BYTE PTR [rax],al
  415ccf:	add    BYTE PTR [rcx+0x4152],cl
  415cd5:	add    BYTE PTR [rax],al
  415cd7:	add    BYTE PTR [rbp+0x4152],cl
  415cdd:	add    BYTE PTR [rax],al
  415cdf:	add    BYTE PTR [rbp+0x4152],dl
  415ce5:	add    BYTE PTR [rax],al
  415ce7:	add    BYTE PTR [rax+0x4152],bl
  415ced:	add    BYTE PTR [rax],al
  415cef:	add    BYTE PTR [rsi+0x4152],bl
  415cf5:	add    BYTE PTR [rax],al
  415cf7:	add    BYTE PTR [rcx+0x4152],ah
  415cfd:	add    BYTE PTR [rax],al
  415cff:	add    BYTE PTR [rdi+0x4152],ah
  415d05:	add    BYTE PTR [rax],al
  415d07:	add    BYTE PTR [rdx+0x4152],ch
  415d0d:	add    BYTE PTR [rax],al
  415d0f:	add    BYTE PTR [rdx+0x4152],dh
  415d15:	add    BYTE PTR [rax],al
  415d17:	add    BYTE PTR [rbp+0x4152],dh
  415d1d:	add    BYTE PTR [rax],al
  415d1f:	add    BYTE PTR [rdx+rdx*2+0x41],bh
  415d26:	add    BYTE PTR [rax],al
  415d28:	mov    edi,0x4152
  415d2d:	add    BYTE PTR [rax],al
  415d2f:	add    bh,al
  415d31:	push   rdx
  415d32:	add    BYTE PTR [r8],al
  415d35:	add    BYTE PTR [rax],al
  415d37:	add    dl,cl
  415d39:	push   rdx
  415d3a:	add    BYTE PTR [r8],al
  415d3d:	add    BYTE PTR [rax],al
  415d3f:	add    BYTE PTR [rbp+0x6e],dl
  415d42:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  415d46:	outs   dx,BYTE PTR ds:[rsi]
  415d47:	and    BYTE PTR [rbp+0x72],ah
  415d4a:	jb     0x415dbb
  415d4c:	jb     0x415d6e
  415d4e:	and    eax,0x64
	...
  415d5f:	add    BYTE PTR [rbx+0x75],dl
  415d62:	movsxd esp,DWORD PTR [rbx+0x65]
  415d65:	jae    0x415dda
  415d67:	add    BYTE PTR [rbp+riz*2+0x78],dl
  415d6b:	je     0x415d8d
  415d6d:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7562
  415d74:	jae    0x415def
  415d76:	add    BYTE PTR [rsi+0x6f],cl
  415d79:	and    BYTE PTR [rcx+riz*2+0x74],ah
  415d7d:	(bad)  
  415d7e:	and    BYTE PTR [rcx+0x76],ah
  415d81:	(bad)  
  415d82:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x4f00656c
  415d8a:	jne    0x415e00
  415d8c:	and    BYTE PTR [rdi+0x66],ch
  415d8f:	and    BYTE PTR [rbx+0x74],dh
  415d92:	jb     0x415df9
  415d94:	(bad)  
  415d95:	ins    DWORD PTR es:[rdi],dx
  415d96:	jae    0x415db8
  415d98:	jb     0x415dff
  415d9a:	jae    0x415e0b
  415d9c:	jne    0x415e10
  415d9e:	movsxd esp,DWORD PTR [rbp+0x73]
  415da1:	add    BYTE PTR [rbp+riz*2+0x76],al
  415da5:	imul   esp,DWORD PTR [rbx+0x65],0x746f6e20
  415dac:	and    BYTE PTR [rcx+0x20],ah
  415daf:	jae    0x415e25
  415db1:	jb     0x415e18
  415db3:	(bad)  
  415db4:	ins    DWORD PTR es:[rdi],dx
  415db5:	add    BYTE PTR [rcx+rbp*2+0x6d],dl
  415db9:	gs jb  0x415ddc
  415dbc:	gs js  0x415e2f
  415dbf:	imul   esi,DWORD PTR [rdx+0x65],0x744f0064
  415dc6:	push   0x65207265
  415dcb:	jb     0x415e3f
  415dcd:	outs   dx,DWORD PTR ds:[rsi]
  415dce:	jb     0x415dd0
  415dd0:	push   rbx
  415dd1:	outs   dx,DWORD PTR ds:[rsi]
  415dd2:	movsxd ebp,DWORD PTR [rbx+0x65]
  415dd5:	je     0x415df7
  415dd7:	je     0x415e52
  415dd9:	jo     0x415e40
  415ddb:	and    BYTE PTR [rsi+0x6f],ch
  415dde:	je     0x415e00
  415de0:	jae    0x415e57
  415de2:	jo     0x415e54
  415de4:	outs   dx,DWORD PTR ds:[rsi]
  415de5:	jb     0x415e5b
  415de7:	gs add BYTE PTR fs:[rax+0x72],dl
  415dec:	outs   dx,DWORD PTR ds:[rsi]
  415ded:	je     0x415e5e
  415def:	movsxd ebp,DWORD PTR [rdi+0x6c]
  415df2:	and    BYTE PTR [rsi+0x61],ah
  415df5:	ins    DWORD PTR es:[rdi],dx
  415df6:	imul   ebp,DWORD PTR [rcx+rdi*2+0x20],0x20746f6e
  415dfe:	jae    0x415e75
  415e00:	jo     0x415e72
  415e02:	outs   dx,DWORD PTR ds:[rsi]
  415e03:	jb     0x415e79
  415e05:	gs add BYTE PTR fs:[rbx+0x61],al
  415e0a:	outs   dx,BYTE PTR ds:[rsi]
  415e0b:	outs   dx,BYTE PTR ds:[rsi]
  415e0c:	outs   dx,DWORD PTR ds:[rsi]
  415e0d:	je     0x415e2f
  415e0f:	jae    0x415e76
  415e11:	outs   dx,BYTE PTR ds:[rsi]
  415e12:	and    BYTE PTR fs:[rcx+0x66],ah
  415e16:	je     0x415e7d
  415e18:	jb     0x415e3a
  415e1a:	je     0x415e8e
  415e1c:	(bad)  
  415e1d:	outs   dx,BYTE PTR ds:[rsi]
  415e1e:	jae    0x415e90
  415e20:	outs   dx,DWORD PTR ds:[rsi]
  415e21:	jb     0x415e97
  415e23:	and    BYTE PTR [rbp+0x6e],ah
  415e26:	fs jo  0x415e98
  415e29:	imul   ebp,DWORD PTR [rsi+0x74],0x75687320
  415e30:	je     0x415e96
  415e32:	outs   dx,DWORD PTR ds:[rsi]
  415e33:	ja     0x415ea3
  415e35:	add    BYTE PTR [rax],al
  415e37:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  415e3b:	and    BYTE PTR [rbp+0x61],ch
  415e3e:	outs   dx,BYTE PTR ds:[rsi]
  415e3f:	jns    0x415e61
  415e41:	jb     0x415ea8
  415e43:	data16 gs jb 0x415eac
  415e47:	outs   dx,BYTE PTR ds:[rsi]
  415e48:	movsxd esp,DWORD PTR [rbp+0x73]
  415e4b:	cmp    ah,BYTE PTR [rax]
  415e4d:	movsxd esp,DWORD PTR [rcx+0x6e]
  415e50:	outs   dx,BYTE PTR ds:[rsi]
  415e51:	outs   dx,DWORD PTR ds:[rsi]
  415e52:	je     0x415e74
  415e54:	jae    0x415ec6
  415e56:	ins    BYTE PTR es:[rdi],dx
  415e57:	imul   esp,DWORD PTR [rbx+0x65],0x736f4800
  415e5e:	je     0x415e80
  415e60:	imul   esi,DWORD PTR [rbx+0x20],0x6e776f64
  415e67:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
  415e6b:	and    BYTE PTR [rbp+0x61],ch
  415e6e:	outs   dx,BYTE PTR ds:[rsi]
  415e6f:	jns    0x415e91
  415e71:	jo     0x415ee5
  415e73:	outs   dx,DWORD PTR ds:[rsi]
  415e74:	movsxd esp,DWORD PTR [rbp+0x73]
  415e77:	jae    0x415ede
  415e79:	jae    0x415e7b
  415e7b:	push   rsp
  415e7c:	outs   dx,DWORD PTR ds:[rsi]
  415e7d:	outs   dx,DWORD PTR ds:[rsi]
  415e7e:	and    BYTE PTR [rbp+0x61],ch
  415e81:	outs   dx,BYTE PTR ds:[rsi]
  415e82:	jns    0x415ea4
  415e84:	jne    0x415ef9
  415e86:	gs jb  0x415efc
  415e89:	add    BYTE PTR [rcx+rbp*2+0x73],al
  415e8d:	imul   esp,DWORD PTR [rax],0x71
  415e90:	jne    0x415f01
  415e92:	je     0x415ef5
  415e94:	and    BYTE PTR [rbp+0x78],ah
  415e97:	movsxd esp,DWORD PTR [rbp+0x65]
  415e9a:	fs gs add BYTE PTR fs:[rbx+0x74],dl
  415ea0:	(bad)  
  415ea1:	ins    BYTE PTR es:[rdi],dx
  415ea2:	and    BYTE PTR gs:[rsi+0x46],cl
  415ea6:	push   rbx
  415ea7:	and    BYTE PTR [rsi+0x69],ah
  415eaa:	ins    BYTE PTR es:[rdi],dx
  415eab:	and    BYTE PTR gs:[rax+0x61],ch
  415eaf:	outs   dx,BYTE PTR ds:[rsi]
  415eb0:	fs ins BYTE PTR es:[rdi],dx
  415eb2:	add    BYTE PTR gs:[rdi+0x62],cl
  415eb6:	push   0x65
  415eb8:	movsxd esi,DWORD PTR [rax+riz*1+0x69]
  415ebc:	jae    0x415ede
  415ebe:	jb     0x415f25
  415ec0:	ins    DWORD PTR es:[rdi],dx
  415ec1:	outs   dx,DWORD PTR ds:[rsi]
  415ec2:	je     0x415f29
  415ec4:	add    BYTE PTR [rdi+0x76],cl
  415ec7:	gs jb  0x415f36
  415eca:	(bad)  
  415ecb:	jo     0x415f3d
  415ecd:	gs and BYTE PTR fs:[rdi+0x70],ch
  415ed2:	gs jb  0x415f36
  415ed5:	je     0x415f40
  415ed7:	outs   dx,DWORD PTR ds:[rsi]
  415ed8:	outs   dx,BYTE PTR ds:[rsi]
  415ed9:	and    BYTE PTR [rcx+0x62],ah
  415edc:	outs   dx,DWORD PTR ds:[rsi]
  415edd:	jb     0x415f53
  415edf:	gs add BYTE PTR fs:[rax],al
  415ee3:	add    BYTE PTR [rax],al
  415ee5:	add    BYTE PTR [rax],al
  415ee7:	add    BYTE PTR [rdi+0x76],cl
  415eea:	gs jb  0x415f59
  415eed:	(bad)  
  415eee:	jo     0x415f60
  415ef0:	gs and BYTE PTR fs:[rcx+0x2f],cl
  415ef5:	rex.WRXB and BYTE PTR [r13+0x76],r12b
  415ef9:	outs   dx,BYTE PTR gs:[rsi]
  415efb:	je     0x415f1d
  415efd:	outs   dx,DWORD PTR ds:[rsi]
  415efe:	(bad)  
  415eff:	push   0x65
  415f01:	movsxd esi,DWORD PTR [rax+riz*1+0x6e]
  415f05:	outs   dx,DWORD PTR ds:[rsi]
  415f06:	je     0x415f28
  415f08:	imul   ebp,DWORD PTR [rsi+0x20],0x6e676973
  415f0f:	(bad)  
  415f10:	ins    BYTE PTR es:[rdi],dx
  415f11:	gs and BYTE PTR fs:[rbx+0x74],dh
  415f16:	(bad)  
  415f17:	je     0x415f7e
  415f19:	add    BYTE PTR [rax],al
  415f1b:	add    BYTE PTR [rax],al
  415f1d:	add    BYTE PTR [rax],al
  415f1f:	add    BYTE PTR [rdi+0x76],cl
  415f22:	gs jb  0x415f91
  415f25:	(bad)  
  415f26:	jo     0x415f98
  415f28:	gs and BYTE PTR fs:[rdi+0x70],ch
  415f2d:	gs jb  0x415f91
  415f30:	je     0x415f9b
  415f32:	outs   dx,DWORD PTR ds:[rsi]
  415f33:	outs   dx,BYTE PTR ds:[rsi]
  415f34:	jae    0x415f56
  415f36:	ja     0x415fa1
  415f38:	ins    BYTE PTR es:[rdi],dx
  415f39:	ins    BYTE PTR es:[rdi],dx
  415f3a:	and    BYTE PTR [rbx+0x6f],ah
  415f3d:	ins    DWORD PTR es:[rdi],dx
  415f3e:	jo     0x415fac
  415f40:	gs je  0x415fa8
  415f43:	and    BYTE PTR [rcx+riz*2+0x74],ch
  415f47:	gs jb  0x415f4a
  415f4a:	add    BYTE PTR [rax],al
  415f4c:	add    BYTE PTR [rax],al
  415f4e:	add    BYTE PTR [rax],al
  415f50:	rex.WRX
  415f51:	gs je  0x415fcb
  415f54:	outs   dx,DWORD PTR ds:[rsi]
  415f55:	jb     0x415fc2
  415f57:	and    BYTE PTR [rbx+0x75],dh
  415f5a:	(bad)  
  415f5c:	jns    0x415fd1
  415f5e:	je     0x415fc5
  415f60:	ins    DWORD PTR es:[rdi],dx
  415f61:	and    BYTE PTR [rcx+0x73],ch
  415f64:	and    BYTE PTR [rbp+0x6e],dh
  415f67:	(bad)  
  415f68:	jbe    0x415fcb
  415f6a:	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x656c
  415f72:	add    BYTE PTR [rax],al
  415f74:	add    BYTE PTR [rax],al
  415f76:	add    BYTE PTR [rax],al
  415f78:	push   rdi
  415f79:	imul   ebp,DWORD PTR [rsi+0x73],0x2e6b636f
  415f80:	fs ins BYTE PTR es:[rdi],dx
  415f82:	ins    BYTE PTR es:[rdi],dx
  415f83:	and    BYTE PTR [rsi+0x65],dh
  415f86:	jb     0x415ffb
  415f88:	imul   ebp,DWORD PTR [rdi+0x6e],0x74756f20
  415f8f:	and    BYTE PTR [rdi+0x66],ch
  415f92:	and    BYTE PTR [rdx+0x61],dh
  415f95:	outs   dx,BYTE PTR ds:[rsi]
  415f96:	add    BYTE PTR gs:[eax],al
  415f9a:	add    BYTE PTR [rax],al
  415f9c:	add    BYTE PTR [rax],al
  415f9e:	add    BYTE PTR [rax],al
  415fa0:	push   rbx
  415fa1:	jne    0x416006
  415fa3:	movsxd esp,DWORD PTR [rbp+0x73]
  415fa6:	jae    0x41600e
  415fa8:	jne    0x416016
  415faa:	and    BYTE PTR [rdi+0x53],dl
  415fad:	push   r11
  415faf:	je     0x416012
  415fb1:	jb     0x416027
  415fb3:	jne    0x416025
  415fb5:	and    BYTE PTR [rsi+0x6f],ch
  415fb8:	je     0x415fda
  415fba:	jns    0x416021
  415fbc:	je     0x415fde
  415fbe:	jo     0x416025
  415fc0:	jb     0x416028
  415fc2:	outs   dx,DWORD PTR ds:[rsi]
  415fc3:	jb     0x416032
  415fc5:	gs add BYTE PTR fs:[rdi+0x72],al
  415fca:	(bad)  
  415fcb:	movsxd esp,DWORD PTR [rbp+0x66]
  415fce:	jne    0x41603c
  415fd0:	and    BYTE PTR [rbx+0x68],dh
  415fd3:	jne    0x416049
  415fd5:	outs   dx,DWORD PTR fs:[rsi]
  415fd7:	ja     0x416047
  415fd9:	and    BYTE PTR [rcx+0x6e],ch
  415fdc:	and    BYTE PTR [rax+0x72],dh
  415fdf:	outs   dx,DWORD PTR ds:[rsi]
  415fe0:	addr32 jb 0x416048
  415fe3:	jae    0x416058
  415fe5:	add    BYTE PTR [rsi+0x6f],cl
  415fe8:	and    BYTE PTR [rbp+0x6f],ch
  415feb:	jb     0x416052
  415fed:	and    BYTE PTR [rdx+0x65],dh
  415ff0:	jae    0x416067
  415ff2:	ins    BYTE PTR es:[rdi],dx
  415ff3:	je     0x416068
  415ff5:	add    BYTE PTR [rbx+0x61],al
  415ff8:	ins    BYTE PTR es:[rdi],dx
  415ff9:	ins    BYTE PTR es:[rdi],dx
  415ffa:	and    BYTE PTR [rdi+0x61],dh
  415ffd:	jae    0x41601f
  415fff:	movsxd esp,DWORD PTR [rcx+0x6e]
  416002:	movsxd esp,DWORD PTR [rbp+0x6c]
  416005:	gs add BYTE PTR fs:[rax+0x72],dl
  41600a:	outs   dx,DWORD PTR ds:[rsi]
  41600b:	movsxd esp,DWORD PTR [rbp+0x64]
  41600e:	jne    0x416082
  416010:	and    BYTE PTR gs:[rbx+0x61],ah
  416014:	ins    BYTE PTR es:[rdi],dx
  416015:	ins    BYTE PTR es:[rdi],dx
  416016:	and    BYTE PTR [rcx+riz*2+0x62],dh
  41601a:	ins    BYTE PTR es:[rdi],dx
  41601b:	and    BYTE PTR gs:[rcx+0x73],ch
  41601f:	and    BYTE PTR [rcx+0x6e],ch
  416022:	jbe    0x416085
  416024:	ins    BYTE PTR es:[rdi],dx
  416025:	imul   esp,DWORD PTR [rax+rax*1+0x53],0x69767265
  41602d:	movsxd esp,DWORD PTR [rbp+0x20]
  416030:	jo     0x4160a4
  416032:	outs   dx,DWORD PTR ds:[rsi]
  416033:	jbe    0x41609e
  416035:	fs gs jb 0x416059
  416039:	imul   esi,DWORD PTR [rbx+0x20],0x61766e69
  416040:	ins    BYTE PTR es:[rdi],dx
  416041:	imul   esp,DWORD PTR [rax+rax*1+0x0],0x53000000
  416049:	gs jb  0x4160c2
  41604c:	imul   esp,DWORD PTR [rbx+0x65],0x6f727020
  416053:	jbe    0x4160be
  416055:	fs gs jb 0x416079
  416059:	data16 (bad) 
  41605b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
  416063:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  41606a:	imul   edi,DWORD PTR [rdx+0x65],0x73795300
  416071:	je     0x4160d8
  416073:	ins    DWORD PTR es:[rdi],dx
  416074:	and    BYTE PTR [rbx+0x61],ah
  416077:	ins    BYTE PTR es:[rdi],dx
  416078:	ins    BYTE PTR es:[rdi],dx
  416079:	and    BYTE PTR [rsi+0x61],ah
  41607c:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x65530065
  416084:	jb     0x4160fc
  416086:	imul   esp,DWORD PTR [rbx+0x65],0x746f6e20
  41608d:	and    BYTE PTR [rsi+0x6f],ah
  416090:	jne    0x416100
  416092:	add    BYTE PTR fs:[rbx+0x6c],al
  416096:	(bad)  
  416097:	jae    0x41610c
  416099:	and    BYTE PTR [rcx+rdi*2+0x70],dh
  41609d:	and    BYTE PTR gs:[rsi+0x6f],ch
  4160a1:	je     0x4160c3
  4160a3:	outs   dx,WORD PTR ds:[rsi]
  4160a5:	jne    0x416115
  4160a7:	add    BYTE PTR fs:[rcx+riz*2+0x74],al
  4160ac:	(bad)  
  4160ad:	(bad)  
  4160af:	jae    0x416116
  4160b1:	and    BYTE PTR [rcx+0x75],dh
  4160b4:	gs jb  0x416130
  4160b7:	and    BYTE PTR [rdi+0x61],dh
  4160ba:	jae    0x4160dc
  4160bc:	jb     0x416123
  4160be:	data16 jne 0x416134
  4160c1:	gs add BYTE PTR fs:[rax+0x6f],cl
  4160c6:	jae    0x41613c
  4160c8:	and    BYTE PTR [rsi+0x6f],ch
  4160cb:	je     0x4160ed
  4160cd:	outs   dx,WORD PTR ds:[rsi]
  4160cf:	jne    0x41613f
  4160d1:	add    BYTE PTR fs:[rax],al
  4160d4:	add    BYTE PTR [rax],al
  4160d6:	add    BYTE PTR [rax],al
  4160d8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
  4160da:	outs   dx,BYTE PTR ds:[rsi]
  4160db:	(bad)  
  4160dc:	jne    0x416152
  4160de:	push   0x7469726f
  4160e3:	(bad)  
  4160e4:	je     0x41614f
  4160e6:	jbe    0x41614d
  4160e8:	and    BYTE PTR [rax+0x6f],ch
  4160eb:	jae    0x416161
  4160ed:	and    BYTE PTR [rsi+0x6f],ch
  4160f0:	je     0x416112
  4160f2:	outs   dx,WORD PTR ds:[rsi]
  4160f4:	jne    0x416164
  4160f6:	add    BYTE PTR fs:[rsi+0x6f],cl
  4160fa:	outs   dx,BYTE PTR ds:[rsi]
  4160fb:	jb     0x416162
  4160fd:	movsxd ebp,DWORD PTR [rdi+0x76]
  416100:	gs jb  0x416164
  416103:	(bad)  
  416104:	ins    BYTE PTR es:[rdi],dx
  416105:	and    BYTE PTR gs:[rbp+0x72],ah
  416109:	jb     0x41617a
  41610b:	jb     0x41610d
  41610d:	add    BYTE PTR [rax],al
  41610f:	add    BYTE PTR [rsi+0x61],dl
  416112:	ins    BYTE PTR es:[rdi],dx
  416113:	imul   esp,DWORD PTR [rax+riz*1+0x6e],0x2c656d61
  41611b:	and    BYTE PTR [rsi+0x6f],ch
  41611e:	and    BYTE PTR [rcx+riz*2+0x74],ah
  416122:	(bad)  
  416123:	and    BYTE PTR [rdx+0x65],dh
  416126:	movsxd ebp,DWORD PTR [rdi+0x72]
  416129:	and    BYTE PTR fs:[rdi+0x66],ch
  41612d:	and    BYTE PTR [rdx+0x65],dh
  416130:	jno    0x4161a7
  416132:	gs jae 0x4161a9
  416135:	gs and BYTE PTR fs:[rcx+rdi*2+0x70],dh
  41613b:	add    BYTE PTR gs:[rsi+0x6f],cl
  41613f:	and    BYTE PTR [rbp+0x65],ch
  416142:	jae    0x4161b7
  416144:	(bad)  
  416145:	and    BYTE PTR gs:[edi+0x66],ch
  41614a:	and    BYTE PTR [rbp+riz*2+0x73],ah
  41614e:	imul   esi,DWORD PTR [rdx+0x65],0x79742064
  416155:	jo     0x4161bc
  416157:	add    BYTE PTR [rcx+0x64],cl
  41615a:	outs   dx,BYTE PTR gs:[rsi]
  41615c:	je     0x4161c7
  41615e:	imul   sp,WORD PTR [rbp+0x72],0x7220
  416164:	gs ins DWORD PTR es:[rdi],dx
  416166:	outs   dx,DWORD PTR ds:[rsi]
  416167:	jbe    0x4161ce
  416169:	add    BYTE PTR fs:[rcx+rbp*2+0x6e],cl
  41616e:	imul   esp,DWORD PTR [rax],0x68
  416171:	(bad)  
  416172:	jae    0x416194
  416174:	(bad)  
  416175:	gs outs dx,BYTE PTR gs:[rsi]
  416178:	and    BYTE PTR [rbx+0x65],dh
  41617b:	jbe    0x4161e2
  41617d:	jb     0x4161e4
  41617f:	add    BYTE PTR fs:[rbp+0x75],cl
  416183:	ins    BYTE PTR es:[rdi],dx
  416184:	je     0x4161ef
  416186:	push   0x6120706f
  41618b:	je     0x416201
  41618d:	gs ins DWORD PTR es:[rdi],dx
  41618f:	jo     0x416205
  416191:	gs add BYTE PTR fs:[rdx+0x61],al
  416196:	and    BYTE PTR fs:[rbp+0x65],ch
  41619a:	jae    0x41620f
  41619c:	(bad)  
  41619d:	add    BYTE PTR gs:[ebx+0x74],dl
  4161a2:	(bad)  
  4161a3:	je     0x41620a
  4161a5:	and    BYTE PTR [rsi+0x6f],ch
  4161a8:	je     0x4161ca
  4161aa:	jb     0x416211
  4161ac:	movsxd ebp,DWORD PTR [rdi+0x76]
  4161af:	gs jb  0x416213
  4161b2:	(bad)  
  4161b3:	ins    BYTE PTR es:[rdi],dx
  4161b4:	add    BYTE PTR gs:[rax],al
	...
  4161bf:	add    BYTE PTR [rbx+0x50],al
  4161c2:	cmp    DWORD PTR [rbx],esi
  4161c4:	add    BYTE PTR ss:[rdi+0x42],al
  4161c8:	rex.WXB add BYTE PTR [r11+0x50],al
  4161cc:	xor    DWORD PTR [rbx],esi
  4161ce:	xor    DWORD PTR ss:[rax],eax
  4161d1:	rex.WX
  4161d2:	rex.WRXB
  4161d3:	rex.W
  4161d4:	rex.B
  4161d5:	rex.X add BYTE PTR [rbx+0x50],al
  4161d9:	xor    dh,BYTE PTR [rax]
  4161db:	xor    DWORD PTR [rdx],esi
  4161dd:	(bad)  
  4161de:	add    BYTE PTR [rcx+0x53],al
  4161e1:	rex.XB
  4161e2:	rex.WB
  4161e3:	rex.WB add BYTE PTR [r11+0x50],al
  4161e7:	xor    dh,BYTE PTR [rax]
  4161e9:	cmp    BYTE PTR [rsi],dh
  4161eb:	add    BYTE PTR ss:[rbx+0x4f],cl
  4161ef:	rex.WB cmp BYTE PTR [rip+0x50430052],bpl        # 0x50846248
  4161f6:	xor    dh,BYTE PTR [rax]
  4161f8:	cmp    DWORD PTR [rbx],esi
  4161fa:	add    BYTE PTR ss:[rdi+0x42],al
  4161fe:	xor    dh,BYTE PTR [rbx]
  416200:	xor    DWORD PTR [rdx],esi
  416202:	add    BYTE PTR [rbx+0x50],al
  416205:	xor    dh,BYTE PTR [rcx]
  416207:	cmp    BYTE PTR [rsi],dh
  416209:	add    BYTE PTR ss:[rbx+0x4f],cl
  41620d:	rex.WB cmp BYTE PTR [rip+0x43005552],bpl        # 0x4341b766
  416214:	push   rax
  416215:	xor    bh,BYTE PTR [rax]
  416217:	xor    eax,0x49003139
  41621c:	push   rbx
  41621d:	rex.WRXB sub rax,0x39353838
  416223:	sub    eax,0x50430031
  416228:	xor    bh,BYTE PTR [rax]
  41622a:	xor    eax,0x49003239
  41622f:	push   rbx
  416230:	rex.WRXB sub rax,0x39353838
  416236:	sub    eax,0x50430032
  41623b:	xor    bh,BYTE PTR [rax]
  41623d:	xor    eax,0x49003339
  416242:	push   rbx
  416243:	rex.WRXB sub rax,0x39353838
  416249:	sub    eax,0x50430033
  41624e:	xor    bh,BYTE PTR [rax]
  416250:	xor    eax,0x49003439
  416255:	push   rbx
  416256:	rex.WRXB sub rax,0x39353838
  41625c:	sub    eax,0x50430034
  416261:	xor    bh,BYTE PTR [rax]
  416263:	xor    eax,0x49003539
  416268:	push   rbx
  416269:	rex.WRXB sub rax,0x39353838
  41626f:	sub    eax,0x50430035
  416274:	xor    bh,BYTE PTR [rax]
  416276:	xor    eax,0x49003639
  41627b:	push   rbx
  41627c:	rex.WRXB sub rax,0x39353838
  416282:	sub    eax,0x50430036
  416287:	xor    bh,BYTE PTR [rax]
  416289:	xor    eax,0x49003739
  41628e:	push   rbx
  41628f:	rex.WRXB sub rax,0x39353838
  416295:	sub    eax,0x50430037
  41629a:	xor    bh,BYTE PTR [rax]
  41629c:	xor    eax,0x49003839
  4162a1:	push   rbx
  4162a2:	rex.WRXB sub rax,0x39353838
  4162a8:	sub    eax,0x50430038
  4162ad:	xor    bh,BYTE PTR [rax]
  4162af:	xor    eax,0x49003939
  4162b4:	push   rbx
  4162b5:	rex.WRXB sub rax,0x39353838
  4162bb:	sub    eax,0x50430039
  4162c0:	xor    bh,BYTE PTR [rax]
  4162c2:	xor    BYTE PTR ss:[rip+0x4f534900],dh        # 0x4f94abc9
  4162c9:	sub    eax,0x39353838
  4162ce:	sub    eax,0x43003531
  4162d3:	push   rax
  4162d4:	xor    edi,DWORD PTR [rax]
  4162d6:	xor    eax,0x49003839
  4162db:	push   rbx
  4162dc:	rex.WRXB sub rax,0x39353838
  4162e2:	sub    eax,0x50430038
  4162e7:	xor    eax,0x32333931
  4162ec:	add    BYTE PTR [rbp+0x55],al
  4162ef:	rex.XB sub eax,0x4300504a
  4162f5:	push   rax
  4162f6:	xor    eax,0x36333931
  4162fb:	add    BYTE PTR [rdi+0x42],al
  4162fe:	xor    dh,BYTE PTR [rbx]
  416300:	xor    DWORD PTR [rdx],esi
  416302:	add    BYTE PTR [rbx+0x50],al
  416305:	xor    eax,0x39343931
  41630a:	add    BYTE PTR [rbp+0x55],al
  41630d:	rex.XB sub eax,0x4300524b
  416313:	push   rax
  416314:	xor    eax,0x30353931
  416319:	add    BYTE PTR [rbp+0x55],al
  41631c:	rex.XB sub eax,0x43005754
  416322:	push   rax
  416323:	xor    eax,0x36333934
  416328:	add    BYTE PTR [rdi+0x42],al
  41632b:	xor    DWORD PTR [rax],edi
  41632d:	xor    BYTE PTR [rbx],dh
  41632f:	xor    BYTE PTR [rax],al
  416331:	rex.XB push r8
  416333:	ss xor eax,0x313030
  416339:	push   rbp
  41633a:	push   rsp
  41633b:	rex.RX sub eax,0x41000038
  416341:	push   rbx
  416342:	rex.XB
  416343:	rex.WB
  416344:	rex.WB add BYTE PTR [r11+0x50],al
  416348:	and    eax,0x50430073
  41634d:	and    eax,0x66610075
  416352:	pop    rdi
  416353:	pop    rdx
  416354:	add    BYTE PTR [r9+0x66],spl
  416358:	add    BYTE PTR [rbx+0x71],dh
  41635b:	pop    rdi
  41635c:	rex.B
  41635d:	rex.WR add BYTE PTR [rbx+0x71],r14b
  416361:	add    BYTE PTR [rdi+0x73],ah
  416364:	ja     0x4163c5
  416366:	rex.RX push rdx
  416368:	add    BYTE PTR [rdi+0x73],ah
  41636b:	ja     0x41636d
  41636d:	(bad)  
  41636e:	ins    DWORD PTR es:[rdi],dx
  41636f:	pop    rdi
  416370:	rex.RB push r12
  416372:	add    BYTE PTR [rcx+0x6d],ah
  416375:	add    BYTE PTR [rcx+0x72],ah
  416378:	pop    rdi
  416379:	push   rbx
  41637a:	add    BYTE PTR [r9+0x72],spl
  41637e:	pop    rdi
  41637f:	rex.WB push r9
  416381:	add    BYTE PTR [rcx+0x72],ah
  416384:	pop    rdi
  416385:	rex.RB
  416386:	rex.RXB add BYTE PTR [r9+0x72],r12b
  41638a:	pop    rdi
  41638b:	rex.WR pop rcx
  41638d:	add    BYTE PTR [rcx+0x72],ah
  416390:	pop    rdi
  416391:	rex.R pop rdx
  416393:	add    BYTE PTR [rcx+0x72],ah
  416396:	pop    rdi
  416397:	rex.WRB
  416398:	add    BYTE PTR [r9+0x72],spl
  41639c:	pop    rdi
  41639d:	push   rsp
  41639e:	rex.WRX add BYTE PTR [rcx+0x72],r12b
  4163a2:	pop    rdi
  4163a3:	rex.WRXB
  4163a4:	rex.WRB add BYTE PTR [r9+0x72],r12b
  4163a8:	pop    rdi
  4163a9:	pop    rcx
  4163aa:	add    BYTE PTR [r9+0x72],r12b
  4163ae:	pop    rdi
  4163af:	push   rbx
  4163b0:	pop    rcx
  4163b1:	add    BYTE PTR [rcx+0x72],ah
  4163b4:	pop    rdi
  4163b5:	rex.WX
  4163b6:	rex.WRXB add BYTE PTR [r9+0x72],r12b
  4163ba:	pop    rdi
  4163bb:	rex.WR
  4163bc:	rex.X add BYTE PTR [rcx+0x72],spl
  4163c0:	pop    rdi
  4163c1:	rex.WXB push r15
  4163c3:	add    BYTE PTR [rcx+0x72],ah
  4163c6:	pop    rdi
  4163c7:	rex.B
  4163c8:	add    BYTE PTR [r9+0x72],r12b
  4163cc:	pop    rdi
  4163cd:	rex.X
  4163ce:	rex.W add BYTE PTR [rcx+0x72],spl
  4163d2:	pop    rdi
  4163d3:	push   rcx
  4163d4:	add    BYTE PTR [r9+0x72],spl
  4163d8:	add    BYTE PTR [rax+0x79],ch
  4163db:	pop    rdi
  4163dc:	rex.B
  4163dd:	rex.WRB add BYTE PTR [r8+0x79],r13b
  4163e1:	add    BYTE PTR [rcx+0x73],ah
  4163e4:	pop    rdi
  4163e5:	rex.WB
  4163e6:	rex.WRX add BYTE PTR [rcx+0x73],r12b
  4163ea:	add    BYTE PTR [rcx+0x7a],ah
  4163ed:	rex ins BYTE PTR es:[rdi],dx
  4163ef:	(bad)  
  4163f0:	je     0x41645b
  4163f2:	outs   dx,BYTE PTR ds:[rsi]
  4163f3:	add    BYTE PTR [rcx+0x7a],ah
  4163f6:	pop    rdi
  4163f7:	pop    r10
  4163f9:	rex ins BYTE PTR es:[rdi],dx
  4163fb:	(bad)  
  4163fc:	je     0x416467
  4163fe:	outs   dx,BYTE PTR ds:[rsi]
  4163ff:	add    BYTE PTR [rcx+0x7a],ah
  416402:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416406:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a610063
  41640e:	pop    rdi
  41640f:	pop    r10
  416411:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416415:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a610063
  41641d:	add    BYTE PTR [rdx+0x61],ah
  416420:	pop    rdi
  416421:	push   rdx
  416422:	push   rbp
  416423:	add    BYTE PTR [rdx+0x61],ah
  416426:	add    BYTE PTR [rbp+0x75],ah
  416429:	pop    rdi
  41642a:	rex.RB push r11
  41642c:	add    BYTE PTR [rbp+0x75],ah
  41642f:	add    BYTE PTR [rdx+0x65],ah
  416432:	pop    rdi
  416433:	rex.X pop rcx
  416435:	add    BYTE PTR [rdx+0x65],ah
  416438:	add    BYTE PTR [rdx+0x6e],ah
  41643b:	pop    rdi
  41643c:	rex.WB
  41643d:	rex.WRX add BYTE PTR [rdx+0x6e],r12b
  416441:	pop    rdi
  416442:	rex.X
  416443:	add    BYTE PTR [rdx+0x6e],r12b
  416447:	add    BYTE PTR [rdx+0x72],ah
  41644a:	pop    rdi
  41644b:	rex.RX push rdx
  41644d:	add    BYTE PTR [rdx+0x72],ah
  416450:	add    BYTE PTR [rdx+0x67],ah
  416453:	pop    rdi
  416454:	rex.X
  416455:	rex.RXB add BYTE PTR [r10+0x67],r12b
  416459:	add    BYTE PTR [rbp+0x79],ch
  41645c:	pop    rdi
  41645d:	rex.WRB
  41645e:	rex.WRB add BYTE PTR [r13+0x79],r13b
  416462:	add    BYTE PTR [rbx+0x6d],ch
  416465:	pop    rdi
  416466:	rex.WXB
  416467:	rex.W add BYTE PTR [rbx+0x6d],bpl
  41646b:	add    BYTE PTR [rbx+0x61],ah
  41646e:	pop    rdi
  41646f:	rex.RB push r11
  416471:	add    BYTE PTR [rbx+0x61],ah
  416474:	add    BYTE PTR [rbx+0x68],ah
  416477:	jb     0x4164d8
  416479:	push   rbp
  41647a:	push   rbx
  41647b:	add    BYTE PTR [rbx+0x68],ah
  41647e:	jb     0x416480
  416480:	jp     0x4164ea
  416482:	pop    rdi
  416483:	push   rsp
  416484:	push   rdi
  416485:	add    BYTE PTR [rdx+0x68],bh
  416488:	pop    rdi
  416489:	rex.XB
  41648a:	rex.WRX add BYTE PTR [rdx+0x68],r15b
  41648e:	pop    rdi
  41648f:	rex.W
  416490:	rex.WXB add BYTE PTR [r10+0x68],dil
  416494:	pop    rdi
  416495:	push   rbx
  416496:	rex.RXB add BYTE PTR [r10+0x68],r15b
  41649a:	pop    rdi
  41649b:	rex.WRB
  41649c:	rex.WRXB add BYTE PTR [r10+0x68],r15b
  4164a0:	add    BYTE PTR [rbx+0x6f],ah
  4164a3:	pop    rdi
  4164a4:	rex.RX push rdx
  4164a6:	add    BYTE PTR [rbx+0x6f],ah
  4164a9:	add    BYTE PTR [rax+0x72],ch
  4164ac:	add    BYTE PTR [rax+0x72],ch
  4164af:	pop    rdi
  4164b0:	rex.W push rdx
  4164b2:	add    BYTE PTR [rax+0x72],ch
  4164b5:	pop    rdi
  4164b6:	rex.X
  4164b7:	add    BYTE PTR [r11+0x72],sil
  4164bb:	add    BYTE PTR [rbx+0x72],dh
  4164be:	pop    rdi
  4164bf:	rex.XB push r11
  4164c1:	add    BYTE PTR [rbx+0x72],dh
  4164c4:	pop    rdi
  4164c5:	push   rdx
  4164c6:	push   rbx
  4164c7:	add    BYTE PTR [rbx+0x72],dh
  4164ca:	pop    rdi
  4164cb:	rex.WRB
  4164cc:	add    BYTE PTR [r11+0x72],r14b
  4164d0:	pop    rdi
  4164d1:	rex.X
  4164d2:	add    BYTE PTR [r11+0x72],sil
  4164d6:	rex movsxd edi,DWORD PTR [rcx+0x72]
  4164da:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x72730063
  4164e2:	pop    rdi
  4164e3:	rex.XB push r11
  4164e5:	rex movsxd edi,DWORD PTR [rcx+0x72]
  4164e9:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x72730063
  4164f1:	pop    rdi
  4164f2:	push   rdx
  4164f3:	push   rbx
  4164f4:	rex movsxd edi,DWORD PTR [rcx+0x72]
  4164f8:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x72730063
  416500:	pop    rdi
  416501:	rex.WRB
  416502:	rex.RB
  416503:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416507:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x72730063
  41650f:	pop    rdi
  416510:	rex.X
  416511:	rex.B
  416512:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416516:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x73620063
  41651e:	add    BYTE PTR [rdx+0x73],ah
  416521:	pop    rdi
  416522:	rex.X
  416523:	add    BYTE PTR [r10+0x73],spl
  416527:	rex movsxd edi,DWORD PTR [rcx+0x72]
  41652b:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x73620063
  416533:	pop    rdi
  416534:	rex.X
  416535:	rex.B
  416536:	rex movsxd edi,DWORD PTR [rcx+0x72]
  41653a:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x430063
  416542:	movsxd esi,DWORD PTR [rbx+0x5f]
  416545:	rex.XB pop r10
  416547:	add    BYTE PTR [rbx+0x73],ah
  41654a:	add    BYTE PTR [rcx+riz*2+0x5f],ah
  41654e:	rex.R
  41654f:	rex.WXB add BYTE PTR [r9+r12*2+0x0],spl
  416554:	jo     0x4165c8
  416556:	jae    0x4165b7
  416558:	rex.B
  416559:	rex.RX add BYTE PTR [rax+0x72],r14b
  41655d:	jae    0x41655f
  41655f:	fs jbe 0x4165c1
  416562:	rex.WRB push r14
  416564:	add    BYTE PTR [rsi+rsi*2+0x0],ah
  416568:	outs   dx,BYTE PTR ds:[rsi]
  416569:	ins    BYTE PTR es:[rdi],dx
  41656a:	pop    rdi
  41656b:	rex.WRX
  41656c:	rex.WR add BYTE PTR [rsi+0x6c],r13b
  416570:	pop    rdi
  416571:	rex.X
  416572:	add    BYTE PTR [r14+0x6c],r13b
  416576:	pop    rdi
  416577:	push   rbx
  416578:	push   rdx
  416579:	add    BYTE PTR [rsi+0x6c],ch
  41657c:	add    BYTE PTR [rdx+0x69],ah
  41657f:	outs   dx,BYTE PTR ds:[rsi]
  416580:	pop    rdi
  416581:	rex.WRX
  416582:	rex.RXB add BYTE PTR [r10+0x69],r12b
  416586:	outs   dx,BYTE PTR ds:[rsi]
  416587:	add    BYTE PTR [rbp+0x6e],ah
  41658a:	pop    rdi
  41658b:	push   rbp
  41658c:	push   rbx
  41658d:	add    BYTE PTR [rbp+0x6e],ah
  416590:	pop    rdi
  416591:	rex.RXB
  416592:	rex.X add BYTE PTR [rbp+0x6e],spl
  416596:	pop    rdi
  416597:	push   r13
  416599:	add    BYTE PTR [rbp+0x6e],ah
  41659c:	pop    rdi
  41659d:	rex.XB
  41659e:	add    BYTE PTR [r13+0x6e],spl
  4165a2:	pop    rdi
  4165a3:	rex.WRX pop rdx
  4165a5:	add    BYTE PTR [rbp+0x6e],ah
  4165a8:	pop    rdi
  4165a9:	rex.WB
  4165aa:	add    BYTE PTR [r13+0x6e],r12b
  4165ae:	pop    rdi
  4165af:	pop    rdx
  4165b0:	add    BYTE PTR [r13+0x6e],spl
  4165b4:	pop    rdi
  4165b5:	rex.WX
  4165b6:	rex.WRB add BYTE PTR [r13+0x6e],r12b
  4165ba:	pop    rdi
  4165bb:	rex.RXB
  4165bc:	add    BYTE PTR [rbp+0x6e],r12b
  4165c0:	pop    rdi
  4165c1:	rex.X pop rdx
  4165c3:	add    BYTE PTR [rbp+0x6e],ah
  4165c6:	pop    rdi
  4165c7:	push   rsp
  4165c8:	push   rsp
  4165c9:	add    BYTE PTR [rbp+0x6e],ah
  4165cc:	pop    rdi
  4165cd:	pop    rdx
  4165ce:	push   rdi
  4165cf:	add    BYTE PTR [rbp+0x6e],ah
  4165d2:	pop    rdi
  4165d3:	push   rax
  4165d4:	rex.W add BYTE PTR [rbp+0x6e],spl
  4165d8:	pop    rdi
  4165d9:	rex.WB
  4165da:	add    BYTE PTR [rbp+0x6e],r12b
  4165de:	pop    rdi
  4165df:	rex.W
  4165e0:	rex.WXB add BYTE PTR [r13+0x6e],spl
  4165e4:	pop    rdi
  4165e5:	rex.WB
  4165e6:	rex.WRX add BYTE PTR [rbp+0x6e],r12b
  4165ea:	pop    rdi
  4165eb:	rex.WRB pop r9
  4165ed:	add    BYTE PTR [rbp+0x6e],ah
  4165f0:	pop    rdi
  4165f1:	push   rbx
  4165f2:	rex.RXB add BYTE PTR [r13+0x6e],r12b
  4165f6:	add    BYTE PTR [rbp+0x74],ah
  4165f9:	pop    rdi
  4165fa:	rex.RB
  4165fb:	add    BYTE PTR [r13+0x74],r12b
  4165ff:	add    BYTE PTR [rsi+0x6f],ah
  416602:	pop    rdi
  416603:	rex.RX
  416604:	rex.WRXB add BYTE PTR [r14+0x6f],r12b
  416608:	add    BYTE PTR [rsi+0x61],ah
  41660b:	pop    rdi
  41660c:	rex.WB push r10
  41660e:	add    BYTE PTR [rsi+0x61],ah
  416611:	add    BYTE PTR [rsi+0x69],ah
  416614:	pop    rdi
  416615:	rex.RX
  416616:	rex.WB add BYTE PTR [r14+0x69],spl
  41661a:	add    BYTE PTR [rsi+0x72],ah
  41661d:	pop    rdi
  41661e:	rex.RX push rdx
  416620:	add    BYTE PTR [rsi+0x72],ah
  416623:	pop    rdi
  416624:	rex.X
  416625:	add    BYTE PTR [r14+0x72],r12b
  416629:	pop    rdi
  41662a:	rex.XB
  41662b:	add    BYTE PTR [r14+0x72],spl
  41662f:	pop    rdi
  416630:	rex.XB
  416631:	rex.W add BYTE PTR [rsi+0x72],spl
  416635:	pop    rdi
  416636:	rex.WR push rbp
  416638:	add    BYTE PTR [rsi+0x72],ah
  41663b:	pop    rdi
  41663c:	rex.WRB
  41663d:	rex.XB add BYTE PTR [r14+0x72],spl
  416641:	add    BYTE PTR [rsi+0x72],ah
  416644:	pop    rdi
  416645:	push   rdx
  416646:	add    BYTE PTR [r14+0x72],r12b
  41664a:	pop    rdi
  41664b:	rex.XB
  41664c:	rex.RXB add BYTE PTR [r14+0x72],r12b
  416650:	pop    rdi
  416651:	push   rbx
  416652:	rex.WRX add BYTE PTR [rsi+0x72],r12b
  416656:	pop    rdi
  416657:	rex.XB
  416658:	rex.WRB add BYTE PTR [r14+0x72],r12b
  41665c:	pop    rdi
  41665d:	rex.XB
  41665e:	rex.WB add BYTE PTR [r14+0x72],spl
  416662:	pop    rdi
  416663:	rex.WRB
  416664:	rex.WR add BYTE PTR [rsi+0x72],r12b
  416668:	pop    rdi
  416669:	rex.WRB
  41666a:	add    BYTE PTR [r14+0x72],spl
  41666e:	pop    rdi
  41666f:	rex.W push rsp
  416671:	add    BYTE PTR [rsi+0x79],ah
  416674:	pop    rdi
  416675:	rex.WRX
  416676:	rex.WR add BYTE PTR [rsi+0x79],r12b
  41667a:	add    BYTE PTR [rsi+0x66],ah
  41667d:	pop    rdi
  41667e:	rex.WRX
  41667f:	rex.RXB add BYTE PTR [r14+0x66],r12b
  416683:	add    BYTE PTR [rdi+0x64],ah
  416686:	pop    rdi
  416687:	rex.RXB
  416688:	rex.X add BYTE PTR [rdi+0x61],spl
  41668c:	pop    rdi
  41668d:	rex.WB
  41668e:	add    BYTE PTR [r15+0x61],r12b
  416692:	add    BYTE PTR [rdi+0x6c],ah
  416695:	pop    rdi
  416696:	rex.RB push r11
  416698:	add    BYTE PTR [rdi+0x6c],ah
  41669b:	add    BYTE PTR [rbx+0x61],ch
  41669e:	pop    rdi
  41669f:	rex.RXB
  4166a0:	add    BYTE PTR [r11+0x61],r13b
  4166a4:	add    BYTE PTR [rbp+riz*2+0x5f],ah
  4166a8:	rex.R
  4166a9:	add    BYTE PTR [r13+riz*2+0x5f],r12b
  4166ae:	rex.XB
  4166af:	rex.W add BYTE PTR [rbp+riz*2+0x5f],spl
  4166b4:	push   r12
  4166b6:	add    BYTE PTR [rbp+riz*2+0x5f],ah
  4166ba:	rex.WR push rbp
  4166bc:	add    BYTE PTR [rbp+riz*2+0x5f],ah
  4166c0:	rex.WR
  4166c1:	rex.WB add BYTE PTR [r13+riz*2+0x0],spl
  4166c6:	gs ins BYTE PTR es:[rdi],dx
  4166c8:	pop    rdi
  4166c9:	rex.RXB push r10
  4166cb:	add    BYTE PTR [rbp+0x6c],ah
  4166ce:	add    BYTE PTR [rbx+0x6c],ch
  4166d1:	pop    rdi
  4166d2:	rex.RXB
  4166d3:	rex.WR add BYTE PTR [rbx+0x6c],r13b
  4166d7:	add    BYTE PTR [rdi+0x6e],ah
  4166da:	pop    rdi
  4166db:	push   rax
  4166dc:	pop    rcx
  4166dd:	add    BYTE PTR [rdi+0x6e],ah
  4166e0:	add    BYTE PTR [rdi+0x75],ah
  4166e3:	pop    rdi
  4166e4:	rex.WB
  4166e5:	rex.WRX add BYTE PTR [rdi+0x75],r12b
  4166e9:	add    BYTE PTR [rax+0x61],ch
  4166ec:	add    BYTE PTR [rax+0x61],ch
  4166ef:	pop    rdi
  4166f0:	rex.WRX
  4166f1:	rex.RXB add BYTE PTR [r10+0x75],r15b
  4166f5:	add    BYTE PTR [rbx+0x70],ah
  4166f8:	gs pop rdi
  4166fa:	push   rbp
  4166fb:	push   rbx
  4166fc:	add    BYTE PTR [rbx+0x70],ah
  4166ff:	add    BYTE PTR gs:[rax+0x65],ch
  416703:	pop    rdi
  416704:	rex.WB
  416705:	rex.WR add BYTE PTR [rax+0x65],r13b
  416709:	add    BYTE PTR [rax+0x69],ch
  41670c:	pop    rdi
  41670d:	rex.WB
  41670e:	rex.WRX add BYTE PTR [rax+0x69],r13b
  416712:	add    BYTE PTR [rax+0x75],ch
  416715:	pop    rdi
  416716:	rex.W push rbp
  416718:	add    BYTE PTR [rax+0x75],ch
  41671b:	add    BYTE PTR [rsi+0x69],ch
  41671e:	movsxd ebx,DWORD PTR [rdi+0x4e]
  416721:	rex.RXB add BYTE PTR [r14+0x69],r13b
  416725:	movsxd eax,DWORD PTR [rax]
  416727:	imul   esi,DWORD PTR [rbx+0x5f],0x69005349
  41672e:	jae    0x416730
  416730:	imul   esp,DWORD PTR [rdi+0x5f],0x6900474e
  416737:	add    BYTE PTR [ecx+0x64],ch
  41673b:	pop    rdi
  41673c:	rex.WB
  41673d:	add    BYTE PTR [rcx+0x64],r13b
  416741:	add    BYTE PTR [rcx+0x75],ch
  416744:	add    BYTE PTR [rcx+0x75],ch
  416747:	pop    rdi
  416748:	rex.XB
  416749:	add    BYTE PTR [r9+0x75],bpl
  41674d:	rex ins BYTE PTR es:[rdi],dx
  41674f:	(bad)  
  416750:	je     0x4167bb
  416752:	outs   dx,BYTE PTR ds:[rsi]
  416753:	add    BYTE PTR [rcx+0x75],ch
  416756:	pop    rdi
  416757:	rex.XB
  416758:	rex.B
  416759:	rex ins BYTE PTR es:[rdi],dx
  41675b:	(bad)  
  41675c:	je     0x4167c7
  41675e:	outs   dx,BYTE PTR ds:[rsi]
  41675f:	add    BYTE PTR [rdx+0x75],bh
  416762:	pop    rdi
  416763:	pop    rdx
  416764:	add    BYTE PTR [r9+0x74],bpl
  416768:	pop    rdi
  416769:	rex.WB push r12
  41676b:	add    BYTE PTR [rcx+0x74],ch
  41676e:	pop    rdi
  41676f:	rex.XB
  416770:	rex.W add BYTE PTR [rcx+0x74],bpl
  416774:	add    BYTE PTR [rdx+0x61],ch
  416777:	pop    rdi
  416778:	rex.WX push rax
  41677a:	add    BYTE PTR [rdx+0x61],ch
  41677d:	add    BYTE PTR [rbx+0x6e],ch
  416780:	pop    rdi
  416781:	rex.WB
  416782:	rex.WRX add BYTE PTR [rbx+0x6e],r13b
  416786:	add    BYTE PTR [rbx+0x72],ch
  416789:	pop    rdi
  41678a:	rex.WRX
  41678b:	rex.RXB add BYTE PTR [r11+0x72],r13b
  41678f:	add    BYTE PTR [rbx+0x73],ch
  416792:	pop    rdi
  416793:	push   rax
  416794:	rex.WXB add BYTE PTR [r11+0x73],bpl
  416798:	pop    rdi
  416799:	rex.WB
  41679a:	rex.WRX add BYTE PTR [rbx+0x73],r13b
  41679e:	add    BYTE PTR [rbx+0x6b],ch
  4167a1:	pop    rdi
  4167a2:	rex.WXB pop r10
  4167a4:	add    BYTE PTR [rbx+0x6b],ch
  4167a7:	add    BYTE PTR [rcx+0x75],dh
  4167aa:	je     0x41680b
  4167ac:	rex.RXB push r12
  4167ae:	add    BYTE PTR [rcx+0x75],dh
  4167b1:	je     0x4167b3
  4167b3:	jb     0x41682c
  4167b5:	pop    rdi
  4167b6:	push   rdx
  4167b7:	push   rdi
  4167b8:	add    BYTE PTR [rdx+0x77],dh
  4167bb:	add    BYTE PTR [rbx+0x6f],ch
  4167be:	imul   ebx,DWORD PTR [rdi+0x49],0x4e
  4167c2:	add    BYTE PTR [rbx+0x6f],ch
  4167c5:	imul   eax,DWORD PTR [rax],0x6b
  4167c8:	outs   dx,DWORD PTR ds:[rsi]
  4167c9:	pop    rdi
  4167ca:	rex.WXB push r10
  4167cc:	add    BYTE PTR [rbx+0x6f],ch
  4167cf:	add    BYTE PTR [rbx+0x79],ch
  4167d2:	pop    rdi
  4167d3:	rex.WXB
  4167d4:	rex.RXB add BYTE PTR [r11+0x79],r13b
  4167d8:	add    BYTE PTR [rdi+rbp*2+0x5f],ch
  4167dc:	rex.WR
  4167dd:	add    BYTE PTR [r15+rbp*2+0x0],bpl
  4167e2:	ins    BYTE PTR es:[rdi],dx
  4167e3:	(bad)  
  4167e4:	pop    rdi
  4167e5:	push   rsi
  4167e6:	add    BYTE PTR [r9+riz*2+0x0],bpl
  4167eb:	ins    BYTE PTR es:[rdi],dx
  4167ec:	jbe    0x41684d
  4167ee:	rex.WR push rsi
  4167f0:	add    BYTE PTR [rsi+rsi*2+0x0],ch
  4167f4:	ins    BYTE PTR es:[rdi],dx
  4167f5:	je     0x416856
  4167f7:	rex.WR push rsp
  4167f9:	add    BYTE PTR [rsp+rsi*2+0x0],ch
  4167fd:	ins    BYTE PTR es:[rdi],dx
  4167fe:	(bad)  
  4167ff:	pop    rdi
  416800:	rex.WR push rbp
  416802:	add    BYTE PTR [rdx+riz*2+0x0],ch
  416806:	ins    DWORD PTR es:[rdi],dx
  416807:	imul   ebx,DWORD PTR [rdi+0x4d],0x4b
  41680b:	add    BYTE PTR [rbp+0x6b],ch
  41680e:	add    BYTE PTR [rbp+0x73],ch
  416811:	pop    rdi
  416812:	rex.WRB pop r9
  416814:	add    BYTE PTR [rbp+0x73],ch
  416817:	pop    rdi
  416818:	rex.X
  416819:	rex.WRX add BYTE PTR [rbp+0x73],r13b
  41681d:	add    BYTE PTR [rbp+0x6c],ch
  416820:	pop    rdi
  416821:	rex.WB
  416822:	rex.WRX add BYTE PTR [rbp+0x6c],r13b
  416826:	add    BYTE PTR [rbp+0x74],ch
  416829:	pop    rdi
  41682a:	rex.WRB push r12
  41682c:	add    BYTE PTR [rbp+0x74],ch
  41682f:	add    BYTE PTR [rbp+0x6e],ch
  416832:	imul   ebx,DWORD PTR [rdi+0x49],0x6e6d004e
  416839:	imul   eax,DWORD PTR [rax],0x4e5f696d
  41683f:	pop    rdx
  416840:	add    BYTE PTR [rbp+0x69],ch
  416843:	add    BYTE PTR [rcx+0x72],ah
  416846:	outs   dx,BYTE PTR ds:[rsi]
  416847:	pop    rdi
  416848:	rex.XB
  416849:	rex.WR add BYTE PTR [rcx+0x72],r12b
  41684d:	outs   dx,BYTE PTR ds:[rsi]
  41684e:	add    BYTE PTR [rbp+0x72],ch
  416851:	pop    rdi
  416852:	rex.WB
  416853:	rex.WRX add BYTE PTR [rbp+0x72],r13b
  416857:	add    BYTE PTR [rbp+0x6f],ch
  41685a:	push   0x41435f
  41685f:	ins    DWORD PTR es:[rdi],dx
  416860:	outs   dx,DWORD PTR ds:[rsi]
  416861:	push   0x5f6e6d00
  416866:	rex.WRB
  416867:	rex.WRX add BYTE PTR [rbp+0x6e],r13b
  41686b:	pop    rdi
  41686c:	rex.XB
  41686d:	rex.WRX add BYTE PTR [rbp+0x6e],r13b
  416871:	add    BYTE PTR [rsi+0x65],ch
  416874:	pop    rdi
  416875:	rex.WRX push rax
  416877:	add    BYTE PTR [rsi+0x65],ch
  41687a:	pop    rdi
  41687b:	rex.WB
  41687c:	rex.WRX add BYTE PTR [rsi+0x65],r13b
  416880:	add    BYTE PTR [rsi+0x62],ch
  416883:	add    BYTE PTR [rsi+0x62],ch
  416886:	pop    rdi
  416887:	rex.WRX
  416888:	rex.WRXB add BYTE PTR [r14+0x6e],r13b
  41688c:	add    BYTE PTR [rsi+0x6e],ch
  41688f:	pop    rdi
  416890:	rex.WRX
  416891:	rex.WRXB add BYTE PTR [r14+0x6f],r13b
  416895:	add    BYTE PTR [rdi+0x63],ch
  416898:	pop    rdi
  416899:	rex.RX push rdx
  41689b:	add    BYTE PTR [rdi+0x63],ch
  41689e:	add    BYTE PTR [rdi+0x72],ch
  4168a1:	pop    rdi
  4168a2:	rex.WB
  4168a3:	rex.WRX add BYTE PTR [rdi+0x72],r13b
  4168a7:	add    BYTE PTR [rdi+0x6d],ch
  4168aa:	pop    rdi
  4168ab:	rex.RB push r12
  4168ad:	add    BYTE PTR [rdi+0x6d],ch
  4168b0:	add    BYTE PTR [rax+0x61],dh
  4168b3:	jo     0x416914
  4168b5:	rex.B
  4168b6:	rex.WRX add BYTE PTR [rax+0x61],r14b
  4168ba:	jo     0x4168bc
  4168bc:	jo     0x416931
  4168be:	pop    rdi
  4168bf:	rex.B
  4168c0:	rex.RX add BYTE PTR [rax+0x73],r14b
  4168c4:	add    BYTE PTR [rax+0x6c],dh
  4168c7:	pop    rdi
  4168c8:	push   rax
  4168c9:	rex.WR add BYTE PTR [rax+0x6c],r14b
  4168cd:	add    BYTE PTR [rax+0x74],dh
  4168d0:	pop    rdi
  4168d1:	rex.X push rdx
  4168d3:	add    BYTE PTR [rax+0x74],dh
  4168d6:	pop    rdi
  4168d7:	push   rax
  4168d8:	push   rsp
  4168d9:	add    BYTE PTR [rax+0x74],dh
  4168dc:	add    BYTE PTR [rax+0x61],dh
  4168df:	pop    rdi
  4168e0:	rex.WB
  4168e1:	rex.WRX add BYTE PTR [rax+0x61],r14b
  4168e5:	pop    rdi
  4168e6:	push   rax
  4168e7:	rex.WXB add BYTE PTR [r8+0x61],sil
  4168eb:	add    BYTE PTR [rcx+0x75],dh
  4168ee:	pop    rdi
  4168ef:	rex.X
  4168f0:	rex.WRXB add BYTE PTR [r9+0x75],r14b
  4168f4:	pop    rdi
  4168f5:	rex.RB
  4168f6:	rex.XB add BYTE PTR [r9+0x75],sil
  4168fa:	pop    rdi
  4168fb:	push   rax
  4168fc:	add    BYTE PTR [r9+0x75],r14b
  416900:	add    BYTE PTR [rdx+0x6f],dh
  416903:	pop    rdi
  416904:	push   rdx
  416905:	rex.WRXB add BYTE PTR [r10+0x6f],r14b
  416909:	pop    rdi
  41690a:	rex.WRB
  41690b:	add    BYTE PTR [rdx+0x6f],r14b
  41690f:	add    BYTE PTR [rdx+0x6d],dh
  416912:	pop    rdi
  416913:	rex.XB
  416914:	rex.W add BYTE PTR [rdx+0x6d],sil
  416918:	add    BYTE PTR [rdx+0x75],dh
  41691b:	pop    rdi
  41691c:	push   rdx
  41691d:	push   rbp
  41691e:	add    BYTE PTR [rdx+0x75],dh
  416921:	pop    rdi
  416922:	rex.WRB
  416923:	add    BYTE PTR [rdx+0x75],r14b
  416927:	add    BYTE PTR [rbx+0x65],dh
  41692a:	add    BYTE PTR [rbx+0x65],dh
  41692d:	pop    rdi
  41692e:	rex.WRX
  41692f:	rex.WRXB add BYTE PTR [r11+0x65],r14b
  416933:	pop    rdi
  416934:	push   rbx
  416935:	add    BYTE PTR [r11+0x65],r14b
  416939:	pop    rdi
  41693a:	rex.RX
  41693b:	rex.WB add BYTE PTR [r11+0x6d],sil
  41693f:	push   0x0
  416941:	jae    0x4169b0
  416943:	push   0x5f
  416945:	rex.WRX
  416946:	rex.WRXB add BYTE PTR [r11+0x6d],r14b
  41694a:	push   0x5f
  41694c:	push   rbx
  41694d:	add    BYTE PTR [r11+0x6d],r14b
  416951:	(bad)  
  416952:	add    BYTE PTR [rbx+0x6d],dh
  416955:	(bad)  
  416956:	pop    rdi
  416957:	rex.WRX
  416958:	rex.WRXB add BYTE PTR [r11+0x6d],r14b
  41695c:	(bad)  
  41695d:	pop    rdi
  41695e:	push   rbx
  41695f:	add    BYTE PTR [r11+0x6d],r14b
  416963:	jae    0x416965
  416965:	jae    0x4169d4
  416967:	jae    0x4169c8
  416969:	rex.RX
  41696a:	rex.WB add BYTE PTR [r11+0x6d],sil
  41696e:	outs   dx,BYTE PTR ds:[rsi]
  41696f:	add    BYTE PTR [rbx+0x6d],dh
  416972:	outs   dx,BYTE PTR ds:[rsi]
  416973:	pop    rdi
  416974:	rex.RX
  416975:	rex.WB add BYTE PTR [r9+0x6f],dil
  416979:	add    BYTE PTR [rbx+0x61],dh
  41697c:	pop    rdi
  41697d:	rex.WB
  41697e:	rex.WRX add BYTE PTR [rbx+0x61],r14b
  416982:	add    BYTE PTR [rdi+0x64],ah
  416985:	add    BYTE PTR [rbx+0x64],dh
  416988:	pop    rdi
  416989:	rex.WB
  41698a:	rex.WRX add BYTE PTR [rbx+0x64],r14b
  41698e:	pop    rdi
  41698f:	push   rax
  416990:	rex.WXB add BYTE PTR [r11+0x64],sil
  416994:	add    BYTE PTR [rbx+0x69],dh
  416997:	pop    rdi
  416998:	rex.WR
  416999:	rex.WXB add BYTE PTR [r11+0x69],sil
  41699d:	add    BYTE PTR [rbx+0x6b],dh
  4169a0:	pop    rdi
  4169a1:	push   rbx
  4169a2:	rex.WXB add BYTE PTR [r11+0x6b],sil
  4169a6:	add    BYTE PTR [rbx+0x6c],dh
  4169a9:	pop    rdi
  4169aa:	push   rbx
  4169ab:	rex.WB add BYTE PTR [r11+0x6c],sil
  4169af:	add    BYTE PTR [rbx+0x6f],dh
  4169b2:	pop    rdi
  4169b3:	push   rbx
  4169b4:	rex.WRXB add BYTE PTR [r11+0x6f],r14b
  4169b8:	add    BYTE PTR [rax+0x73],ch
  4169bb:	(bad)  
  4169bc:	add    BYTE PTR [rax+0x73],ch
  4169bf:	(bad)  
  4169c0:	pop    rdi
  4169c1:	rex.R
  4169c2:	add    BYTE PTR [r11+rsi*2+0x62],r12b
  4169c7:	add    BYTE PTR [rbx+rsi*2+0x62],ah
  4169cb:	pop    rdi
  4169cc:	rex.R
  4169cd:	add    BYTE PTR [r15+0x65],r14b
  4169d1:	outs   dx,BYTE PTR ds:[rsi]
  4169d2:	add    BYTE PTR [rsi+0x73],ch
  4169d5:	outs   dx,DWORD PTR ds:[rsi]
  4169d6:	pop    rdi
  4169d7:	pop    rdx
  4169d8:	add    BYTE PTR [r14+0x73],bpl
  4169dc:	outs   dx,DWORD PTR ds:[rsi]
  4169dd:	add    BYTE PTR [rbp+0x73],ah
  4169e0:	pop    rdi
  4169e1:	rex.RB push r11
  4169e3:	add    BYTE PTR [rbp+0x73],ah
  4169e6:	pop    rdi
  4169e7:	rex.WRB pop r8
  4169e9:	add    BYTE PTR [rbp+0x73],ah
  4169ec:	pop    rdi
  4169ed:	rex.RB push r11
  4169ef:	rex ins DWORD PTR es:[rdi],dx
  4169f1:	outs   dx,DWORD PTR ds:[rsi]
  4169f2:	fs gs jb 0x416a64
  4169f6:	add    BYTE PTR [rbp+0x73],ah
  4169f9:	pop    rdi
  4169fa:	rex.RXB push r12
  4169fc:	add    BYTE PTR [rbp+0x73],ah
  4169ff:	pop    rdi
  416a00:	rex.XB push r10
  416a02:	add    BYTE PTR [rbp+0x73],ah
  416a05:	pop    rdi
  416a06:	push   rax
  416a07:	add    BYTE PTR [r13+0x73],spl
  416a0b:	pop    rdi
  416a0c:	rex.R
  416a0d:	rex.WRXB add BYTE PTR [r13+0x73],r12b
  416a11:	pop    rdi
  416a12:	push   rsi
  416a13:	add    BYTE PTR [r13+0x73],r12b
  416a17:	pop    rdi
  416a18:	rex.XB
  416a19:	rex.WRXB add BYTE PTR [r13+0x73],r12b
  416a1d:	pop    rdi
  416a1e:	push   rax
  416a1f:	add    BYTE PTR [r13+0x73],r12b
  416a23:	pop    rdi
  416a24:	push   r10
  416a26:	add    BYTE PTR [rbp+0x73],ah
  416a29:	pop    rdi
  416a2a:	rex.RB
  416a2b:	rex.XB add BYTE PTR [r13+0x73],spl
  416a2f:	pop    rdi
  416a30:	rex.XB
  416a31:	rex.WR add BYTE PTR [rbp+0x73],r12b
  416a35:	pop    rdi
  416a36:	push   rbp
  416a37:	pop    rcx
  416a38:	add    BYTE PTR [rbp+0x73],ah
  416a3b:	pop    rdi
  416a3c:	push   rax
  416a3d:	pop    rcx
  416a3e:	add    BYTE PTR [rbp+0x73],ah
  416a41:	pop    rdi
  416a42:	rex.X
  416a43:	rex.WRXB add BYTE PTR [r13+0x73],r12b
  416a47:	pop    rdi
  416a48:	push   rbx
  416a49:	push   rsi
  416a4a:	add    BYTE PTR [rbp+0x73],ah
  416a4d:	pop    rdi
  416a4e:	rex.W
  416a4f:	rex.WRX add BYTE PTR [rbp+0x73],r12b
  416a53:	pop    rdi
  416a54:	rex.WRX
  416a55:	rex.WB add BYTE PTR [r13+0x73],spl
  416a59:	pop    rdi
  416a5a:	push   rax
  416a5b:	push   rdx
  416a5c:	add    BYTE PTR [rbp+0x73],ah
  416a5f:	pop    rdi
  416a60:	push   rbp
  416a61:	push   rbx
  416a62:	add    BYTE PTR [rbp+0x73],ah
  416a65:	add    BYTE PTR [rdx+0x6e],ah
  416a68:	je     0x416ac9
  416a6a:	push   rsp
  416a6b:	pop    rdx
  416a6c:	add    BYTE PTR [rdx+0x6e],ah
  416a6f:	je     0x416a71
  416a71:	jae    0x416aea
  416a73:	pop    rdi
  416a74:	rex.WXB
  416a75:	add    BYTE PTR [r11+0x77],r14b
  416a79:	add    BYTE PTR [rbx+0x76],dh
  416a7c:	pop    rdi
  416a7d:	push   rbx
  416a7e:	add    BYTE PTR [r11+0x76],r14b
  416a82:	pop    rdi
  416a83:	rex.RX
  416a84:	rex.WB add BYTE PTR [r11+0x76],sil
  416a88:	add    BYTE PTR [rbx+0x79],dh
  416a8b:	jb     0x416aec
  416a8d:	push   rbx
  416a8e:	pop    rcx
  416a8f:	add    BYTE PTR [rbx+0x79],dh
  416a92:	jb     0x416a94
  416a94:	je     0x416b02
  416a96:	pop    rdi
  416a97:	push   rax
  416a98:	rex.W add BYTE PTR [rsp+rbp*2+0x0],sil
  416a9d:	je     0x416b06
  416a9f:	add    BYTE PTR [rdi+riz*2+0x5f],dh
  416aa3:	push   rsp
  416aa4:	rex.WX add BYTE PTR [rcx+0x6f],dil
  416aa8:	pop    rdi
  416aa9:	rex.WRX
  416aaa:	rex.RXB add BYTE PTR [r10+0x65],r12b
  416aae:	jb     0x416b0f
  416ab0:	rex.WRB
  416ab1:	rex.B
  416ab2:	rex (bad) 
  416ab4:	jb     0x416b17
  416ab6:	(bad)  
  416ab7:	imul   esp,DWORD PTR [rbx+0x0],0x40726562
  416abe:	ins    BYTE PTR es:[rdi],dx
  416abf:	(bad)  
  416ac0:	je     0x416b2b
  416ac2:	outs   dx,BYTE PTR ds:[rsi]
  416ac3:	add    BYTE PTR [rdx+0x65],ah
  416ac6:	jb     0x416b27
  416ac8:	rex.R pop rdx
  416aca:	rex ins BYTE PTR es:[rdi],dx
  416acc:	(bad)  
  416acd:	je     0x416b38
  416acf:	outs   dx,BYTE PTR ds:[rsi]
  416ad0:	add    BYTE PTR [rdx+0x65],ah
  416ad3:	jb     0x416ad5
  416ad5:	je     0x416b38
  416ad7:	pop    rdi
  416ad8:	rex.WB
  416ad9:	rex.WRX add BYTE PTR [rcx+r12*2+0x0],r14b
  416ade:	je     0x416b54
  416ae0:	pop    rdi
  416ae1:	push   rdx
  416ae2:	push   rbp
  416ae3:	add    BYTE PTR [rsp+rsi*2+0x0],dh
  416ae7:	je     0x416b4e
  416ae9:	pop    rdi
  416aea:	rex.WB
  416aeb:	rex.WRX add BYTE PTR [rbp+r12*2+0x0],r14b
  416af0:	je     0x416b5a
  416af2:	pop    rdi
  416af3:	push   rsp
  416af4:	rex.W add BYTE PTR [rax+rbp*2+0x0],sil
  416af9:	(bad)  
  416afa:	outs   dx,DWORD PTR ds:[rsi]
  416afb:	add    BYTE PTR [rdx+0x6f],ah
  416afe:	pop    rdi
  416aff:	rex.X push rsp
  416b01:	add    BYTE PTR [rcx+0x69],bh
  416b04:	add    BYTE PTR [rcx+rbp*2+0x5f],dh
  416b08:	rex.RB push r12
  416b0a:	add    BYTE PTR [rcx+rbp*2+0x5f],dh
  416b0e:	rex.RB push r10
  416b10:	add    BYTE PTR [rcx+rbp*2+0x0],dh
  416b14:	je     0x416b89
  416b16:	pop    rdi
  416b17:	pop    rdx
  416b18:	add    BYTE PTR [r11+rsi*2+0x0],sil
  416b1d:	je     0x416b8d
  416b1f:	pop    rdi
  416b20:	pop    rdx
  416b21:	add    BYTE PTR [r14+rbp*2+0x0],sil
  416b26:	je     0x416b9a
  416b28:	pop    rdi
  416b29:	push   rsp
  416b2a:	push   rdx
  416b2b:	add    BYTE PTR [rdx+rsi*2+0x0],dh
  416b2f:	je     0x416b9c
  416b31:	pop    rdi
  416b32:	push   rsp
  416b33:	rex.WRB add BYTE PTR [r11+rbp*2+0x0],r14b
  416b38:	jne    0x416ba1
  416b3a:	pop    rdi
  416b3b:	rex.XB
  416b3c:	rex.WRX add BYTE PTR [rbp+0x67],r14b
  416b40:	add    BYTE PTR [rbp+0x6b],dh
  416b43:	pop    rdi
  416b44:	push   rbp
  416b45:	add    BYTE PTR [r13+0x6b],sil
  416b49:	add    BYTE PTR [rbp+0x72],dh
  416b4c:	pop    rdi
  416b4d:	push   rax
  416b4e:	rex.WXB add BYTE PTR [r13+0x72],sil
  416b52:	pop    rdi
  416b53:	rex.WB
  416b54:	rex.WRX add BYTE PTR [rbp+0x72],r14b
  416b58:	add    BYTE PTR [rbp+0x7a],dh
  416b5b:	add    BYTE PTR [rbp+0x7a],dh
  416b5e:	pop    rdi
  416b5f:	push   rbp
  416b60:	pop    rdx
  416b61:	add    BYTE PTR [rbp+0x7a],dh
  416b64:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416b68:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x7a750063
  416b70:	pop    rdi
  416b71:	push   rbp
  416b72:	pop    rdx
  416b73:	rex movsxd edi,DWORD PTR [rcx+0x72]
  416b77:	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x69790063
  416b7f:	pop    rdi
  416b80:	rex.WB
  416b81:	rex.WR add BYTE PTR [rsi+0x65],r14b
  416b85:	pop    rdi
  416b86:	pop    rdx
  416b87:	add    BYTE PTR [r14+0x65],sil
  416b8b:	add    BYTE PTR [rsi+0x69],dh
  416b8e:	pop    rdi
  416b8f:	push   rsi
  416b90:	rex.WRX add BYTE PTR [rsi+0x69],r14b
  416b94:	add    BYTE PTR [rbx+0x79],ah
  416b97:	pop    rdi
  416b98:	rex.RXB
  416b99:	rex.X add BYTE PTR [rbx+0x79],spl
  416b9d:	add    BYTE PTR [rdi+0x6f],dh
  416ba0:	pop    rdi
  416ba1:	push   rbx
  416ba2:	rex.WRX add BYTE PTR [rdi+0x6f],r14b
  416ba6:	add    BYTE PTR [rax+0x68],bh
  416ba9:	pop    rdi
  416baa:	pop    rdx
  416bab:	add    BYTE PTR [r8+0x68],dil
  416baf:	add    BYTE PTR [rbx+0x61],dh
  416bb2:	push   0x55525f
  416bb7:	jae    0x416c1a
  416bb9:	push   0x5f696900
  416bbe:	rex.XB
  416bbf:	rex.WRX add BYTE PTR [rcx+0x69],r13b
  416bc3:	add    BYTE PTR [rdi+0x45],al
  416bc6:	push   rsp
  416bc7:	push   rsp
  416bc8:	rex.RB pop r8
  416bca:	push   rsp
  416bcb:	pop    rdi
  416bcc:	rex.WRB push r13
  416bce:	rex.WB add BYTE PTR [r15+0x7dffff01],sil
  416bd5:	add    edi,edi
  416bd7:	jmp    QWORD PTR [rdx+0x1]
  416bda:	(bad)  
  416bdb:	inc    DWORD PTR [rdi+0x1]
  416bde:	(bad)  
  416bdf:	jmp    FWORD PTR [rdx]
  416be1:	add    edi,edi
  416be3:	dec    DWORD PTR [rdi]
  416be5:	add    edi,edi
  416be7:	push   rsp
  416be9:	add    bh,bh
  416beb:	call   FWORD PTR [rdx-0x260000ff]
  416bf1:	add    bh,bh
  416bf3:	(bad)  
  416bf4:	mov    esp,0x9fffff00
  416bf9:	add    bh,bh
  416bfb:	inc    DWORD PTR [rax+rax*1+0x67ffff]
  416c02:	(bad)  
  416c03:	dec    DWORD PTR [rax+rax*1-0x1]
  416c07:	push   QWORD PTR [rcx]
  416c09:	add    bh,bh
  416c0b:	call   QWORD PTR [rsi]
  416c0d:	add    bh,bh
  416c0f:	(bad)  
  416c10:	(bad)  
  416c11:	(bad)  
  416c12:	(bad)  
  416c13:	dec    edi
  416c15:	(bad)  
  416c16:	(bad)  
  416c17:	push   QWORD PTR [rdi+rdi*8-0x880002]
  416c1e:	(bad)  
  416c1f:	push   QWORD PTR [rdx]
  416c21:	(bad)  
  416c22:	(bad)  
  416c23:	call   QWORD PTR [rdi]
  416c25:	(bad)  
  416c26:	(bad)  
  416c27:	(bad)  
  416c28:	jmp    0x416c28
  416c2a:	(bad)  
  416c2b:	call   rax
  416c2d:	(bad)  
  416c2e:	(bad)  
  416c2f:	jmp    QWORD PTR [rsi+rdi*8-0x1870002]
  416c36:	(bad)  
  416c37:	call   FWORD PTR [rbx-0x2]
  416c3a:	(bad)  
  416c3b:	inc    DWORD PTR [rax-0x2]
  416c3e:	(bad)  
  416c3f:	jmp    QWORD PTR [rip+0xfffffffff9fffefe]        # 0xfffffffffa416b43
  416c45:	std    
  416c46:	(bad)  
  416c47:	(bad)  
  416c48:	fdivp  st(5),st
  416c4a:	(bad)  
  416c4b:	inc    ebx
  416c4d:	std    
  416c4e:	(bad)  
  416c4f:	call   QWORD PTR [rdi+0x7cfffefd]
  416c55:	std    
  416c56:	(bad)  
  416c57:	jmp    QWORD PTR [rcx-0x3]
  416c5a:	(bad)  
  416c5b:	inc    DWORD PTR [rsi-0x3]
  416c5e:	(bad)  
  416c5f:	jmp    FWORD PTR [rbx]
  416c61:	std    
  416c62:	(bad)  
  416c63:	call   QWORD PTR [rax]
  416c65:	std    
  416c66:	(bad)  
  416c67:	push   rbp
  416c69:	cld    
  416c6a:	(bad)  
  416c6b:	(bad)  
  416c6c:	(bad)  
  416c6e:	(bad)  
  416c6f:	(bad)  
  416c70:	mov    edi,0xa4fffefc
  416c75:	cld    
  416c76:	(bad)  
  416c77:	dec    DWORD PTR [rcx+0x6efffefc]
  416c7d:	cld    
  416c7e:	(bad)  
  416c7f:	jmp    FWORD PTR [rcx]
  416c81:	cld    
  416c82:	(bad)  
  416c83:	dec    DWORD PTR [rsi]
  416c85:	cld    
  416c86:	(bad)  
  416c87:	inc    esp
  416c89:	sti    
  416c8a:	(bad)  
  416c8b:	jmp    FWORD PTR [rcx-0x71000105]
  416c91:	sti    
  416c92:	(bad)  
  416c93:	push   QWORD PTR [rbx-0x5]
  416c96:	(bad)  
  416c97:	call   FWORD PTR [rax-0x5]
  416c9a:	(bad)  
  416c9b:	(bad)  
  416c9c:	cmp    eax,0x22fffefb
  416ca1:	sti    
  416ca2:	(bad)  
  416ca3:	inc    DWORD PTR [rdi]
  416ca5:	sti    
  416ca6:	(bad)  
  416ca7:	(bad)  
  416ca8:	in     al,dx
  416ca9:	cli    
  416caa:	(bad)  
  416cab:	call   rcx
  416cad:	cli    
  416cae:	(bad)  
  416caf:	push   QWORD PTR [rsi-0x64000106]
  416cb5:	cli    
  416cb6:	(bad)  
  416cb7:	inc    DWORD PTR [rax+0x63fffefa]
  416cbd:	cli    
  416cbe:	(bad)  
  416cbf:	push   QWORD PTR [rdi]
  416cc1:	cli    
  416cc2:	(bad)  
  416cc3:	call   FWORD PTR [rdx+rdi*8]
  416cc6:	(bad)  
  416cc7:	push   rax
  416cc9:	stc    
  416cca:	(bad)  
  416ccb:	call   rbp
  416ccd:	stc    
  416cce:	(bad)  
  416ccf:	(bad)  
  416cd0:	mov    edx,0x9ffffef9
  416cd5:	stc    
  416cd6:	(bad)  
  416cd7:	inc    DWORD PTR [rcx+rdi*8-0x6b80002]
  416cde:	(bad)  
  416cdf:	jmp    FWORD PTR [rcx+rdi*8]
  416ce2:	(bad)  
  416ce3:	inc    DWORD PTR [rax]
  416ce5:	stc    
  416ce6:	(bad)  
  416ce7:	call   rsp
  416ce9:	clc    
  416cea:	(bad)  
  416ceb:	(bad)  
  416cec:	mov    ecx,0x9efffef8
  416cf1:	clc    
  416cf2:	(bad)  
  416cf3:	inc    DWORD PTR [rbx+0x68fffef8]
  416cf9:	clc    
  416cfa:	(bad)  
  416cfb:	dec    DWORD PTR [rbp-0x8]
  416cfe:	(bad)  
  416cff:	push   QWORD PTR [rdx]
  416d01:	clc    
  416d02:	(bad)  
  416d03:	call   QWORD PTR [rdi]
  416d05:	clc    
  416d06:	(bad)  
  416d07:	(bad)  
  416d08:	cld    
  416d09:	idiv   esi
  416d0b:	jmp    rcx
  416d0d:	idiv   esi
  416d0f:	push   QWORD PTR [rbp-0x65000109]
  416d15:	idiv   esi
  416d17:	(bad)  
  416d18:	jg     0x416d11
  416d1a:	(bad)  
  416d1b:	jmp    QWORD PTR [rdi+rsi*8-0x2]
  416d1f:	dec    DWORD PTR [rcx-0x9]
  416d22:	(bad)  
  416d23:	jmp    FWORD PTR [rsi]
  416d25:	idiv   esi
  416d27:	call   QWORD PTR [rbx]
  416d29:	idiv   esi
  416d2b:	(bad)  
  416d2c:	clc    
  416d2d:	idiv   dh
  416d2f:	(bad)  
  416d30:	(bad)  
  416d32:	(bad)  
  416d33:	push   QWORD PTR [rcx-0x6900010a]
  416d39:	idiv   dh
  416d3b:	(bad)  
  416d3c:	jnp    0x416d34
  416d3e:	(bad)  
  416d3f:	jmp    QWORD PTR [rax-0xa]
  416d42:	(bad)  
  416d43:	jmp    QWORD PTR [rbx]
  416d45:	idiv   dh
  416d47:	dec    DWORD PTR [rax]
  416d49:	idiv   dh
  416d4b:	dec    ebx
  416d4d:	cmc    
  416d4e:	(bad)  
  416d4f:	call   FWORD PTR [rdi+0x73fffef5]
  416d55:	cmc    
  416d56:	(bad)  
  416d57:	call   FWORD PTR [rax-0xb]
  416d5a:	(bad)  
  416d5b:	(bad)  
  416d5c:	cmp    eax,0x22fffef5
  416d61:	cmc    
  416d62:	(bad)  
  416d63:	inc    DWORD PTR [rdi]
  416d65:	cmc    
  416d66:	(bad)  
  416d67:	(bad)  
  416d68:	in     al,dx
  416d69:	hlt    
  416d6a:	(bad)  
  416d6b:	call   rcx
  416d6d:	hlt    
  416d6e:	(bad)  
  416d6f:	push   QWORD PTR [rsi-0x6400010c]
  416d75:	hlt    
  416d76:	(bad)  
  416d77:	inc    DWORD PTR [rax+0x43fffef4]
  416d7d:	hlt    
  416d7e:	(bad)  
  416d7f:	jmp    FWORD PTR [rax]
  416d81:	hlt    
  416d82:	(bad)  
  416d83:	dec    DWORD PTR [rip+0xfffffffff2fffef4]        # 0xfffffffff3416c7d
  416d89:	repz (bad) 
  416d8b:	call   rdi
  416d8d:	repz (bad) 
  416d8f:	(bad)  
  416d90:	mov    esp,0xa1fffef3
  416d95:	repz (bad) 
  416d97:	inc    DWORD PTR [rsi+0x5afffef3]
  416d9d:	repz (bad) 
  416d9f:	(bad)  
  416da0:	(bad)  
  416da1:	repz (bad) 
  416da3:	jmp    QWORD PTR [rbx+rsi*8]
  416da6:	(bad)  
  416da7:	dec    DWORD PTR [rcx]
  416da9:	repz (bad) 
  416dab:	(bad)  
  416dac:	out    dx,al
  416dad:	repnz (bad) 
  416daf:	call   rbx
  416db1:	repnz (bad) 
  416db3:	(bad)  
  416db4:	mov    eax,0x9dfffef2
  416db9:	repnz (bad) 
  416dbb:	push   QWORD PTR [rdi-0x7d0000ff]
  416dc1:	repnz (bad) 
  416dc3:	push   QWORD PTR [rdi+0x67ffff01]
  416dc9:	repnz (bad) 
  416dcb:	push   QWORD PTR [rdi+0x4cffff01]
  416dd1:	repnz (bad) 
  416dd3:	push   QWORD PTR [rcx]
  416dd5:	repnz (bad) 
  416dd7:	call   QWORD PTR [rsi]
  416dd9:	repnz (bad) 
  416ddb:	(bad)  
  416ddc:	sti    
  416ddd:	icebp  
  416dde:	(bad)  
  416ddf:	jmp    rax
  416de1:	icebp  
  416de2:	(bad)  
  416de3:	inc    ebp
  416de5:	icebp  
  416de6:	(bad)  
  416de7:	jmp    FWORD PTR [rdx-0x7000010f]
  416ded:	icebp  
  416dee:	(bad)  
  416def:	push   QWORD PTR [rcx+rsi*8-0x2]
  416df3:	push   QWORD PTR [rdi-0x480000ff]
  416df9:	add    edi,edi
  416dfb:	push   QWORD PTR [rdi+0x5cffff01]
  416e01:	icebp  
  416e02:	(bad)  
  416e03:	push   QWORD PTR [rdi-0x480000ff]
  416e09:	add    edi,edi
  416e0b:	push   QWORD PTR [rdi-0x480000ff]
  416e11:	add    edi,edi
  416e13:	inc    DWORD PTR [rcx+rsi*8-0x2]
  416e17:	jmp    QWORD PTR [rbx]
  416e19:	add    bh,bh
  416e1b:	call   QWORD PTR [rdi]
  416e1d:	add    bh,bh
  416e1f:	dec    DWORD PTR [rbx]
  416e21:	add    bh,bh
  416e23:	inc    DWORD PTR [rbx+0x77ffff00]
  416e29:	add    bh,bh
  416e2b:	jmp    FWORD PTR [rbx+0x0]
  416e2e:	(bad)  
  416e2f:	call   FWORD PTR [rdi+0x0]
  416e32:	(bad)  
  416e33:	call   QWORD PTR [rbx+0x0]
  416e36:	(bad)  
  416e37:	inc    DWORD PTR [rdi+0x0]
  416e3a:	(bad)  
  416e3b:	(bad)  
  416e3c:	cmp    eax,DWORD PTR [rax]
  416e3e:	(bad)  
  416e3f:	jmp    QWORD PTR [rbx]
  416e41:	add    bh,bh
  416e43:	jmp    QWORD PTR [rbx]
  416e45:	add    bh,bh
  416e47:	jmp    QWORD PTR [rbx]
  416e49:	add    bh,bh
  416e4b:	jmp    QWORD PTR [rbx]
  416e4d:	add    bh,bh
  416e4f:	jmp    QWORD PTR [rbx]
  416e51:	add    bh,bh
  416e53:	jmp    QWORD PTR [rbx]
  416e55:	add    bh,bh
  416e57:	jmp    QWORD PTR [rbx]
  416e59:	add    bh,bh
  416e5b:	jmp    QWORD PTR [rbx]
  416e5d:	add    bh,bh
  416e5f:	jmp    QWORD PTR [rbx]
  416e61:	add    bh,bh
  416e63:	jmp    QWORD PTR [rbx]
  416e65:	add    bh,bh
  416e67:	jmp    QWORD PTR [rbx]
  416e69:	add    bh,bh
  416e6b:	jmp    QWORD PTR [rbx]
  416e6d:	add    bh,bh
  416e6f:	jmp    QWORD PTR [rbx]
  416e71:	add    bh,bh
  416e73:	jmp    QWORD PTR [rbx]
  416e75:	add    bh,bh
  416e77:	jmp    QWORD PTR [rbx]
  416e79:	add    bh,bh
  416e7b:	jmp    QWORD PTR [rbx]
  416e7d:	add    bh,bh
  416e7f:	jmp    QWORD PTR [rbx]
  416e81:	add    bh,bh
  416e83:	jmp    QWORD PTR [rbx]
  416e85:	add    bh,bh
  416e87:	jmp    FWORD PTR [rdi]
  416e89:	add    bh,bh
  416e8b:	call   FWORD PTR [rbx-0x70000100]
  416e91:	add    bh,bh
  416e93:	inc    edi
  416e95:	add    al,0xff
  416e97:	dec    DWORD PTR [rbx+0x7fffff02]
  416e9d:	add    bh,bh
  416e9f:	push   QWORD PTR [rbx+0x2]
  416ea2:	(bad)  
  416ea3:	inc    DWORD PTR [rdi+0x7bffff03]
  416ea9:	add    edi,edi
  416eab:	jmp    FWORD PTR [rdi+0x3]
  416eae:	(bad)  
  416eaf:	jmp    QWORD PTR [rbx+0x3]
  416eb2:	(bad)  
  416eb3:	call   QWORD PTR [rdi+0x3]
  416eb6:	(bad)  
  416eb7:	dec    DWORD PTR [rbx+0x3]
  416eba:	(bad)  
  416ebb:	(bad)  
  416ebc:	(bad)  
  416ebd:	add    edi,edi
  416ebf:	push   QWORD PTR [rbx]
  416ec1:	add    edi,edi
  416ec3:	(bad)  
  416ec4:	fild   WORD PTR [rdx]
  416ec6:	(bad)  
  416ec7:	call   rbx
  416ec9:	add    bh,bh
  416ecb:	dec    DWORD PTR [rbx-0x740000fe]
  416ed1:	add    bh,bh
  416ed3:	dec    DWORD PTR [rbx-0x740000fe]
  416ed9:	add    bh,bh
  416edb:	dec    DWORD PTR [rbx-0x740000fe]
  416ee1:	add    bh,bh
  416ee3:	dec    DWORD PTR [rbx-0x740000fe]
  416ee9:	add    bh,bh
  416eeb:	dec    DWORD PTR [rbx-0x740000fe]
  416ef1:	add    bh,bh
  416ef3:	dec    DWORD PTR [rbx-0x740000fe]
  416ef9:	add    bh,bh
  416efb:	inc    edi
  416efd:	add    bh,bh
  416eff:	(bad)  
  416f00:	mov    ebx,0xa3ffff02
  416f05:	add    bh,bh
  416f07:	call   QWORD PTR [rdi-0x740000fe]
  416f0d:	add    bh,bh
  416f0f:	jmp    FWORD PTR [rdi+0x6bffff02]
  416f15:	add    al,0xff
  416f17:	push   rdi
  416f19:	add    edi,edi
  416f1b:	jmp    QWORD PTR [rdi-0x78000101]
  416f21:	add    edi,edi
  416f23:	(bad)  
  416f24:	jnp    0x416f27
  416f26:	(bad)  
  416f27:	jmp    FWORD PTR [rdi+0x1]
  416f2a:	(bad)  
  416f2b:	jmp    QWORD PTR [rbx+0x1]
  416f2e:	(bad)  
  416f2f:	jmp    rdi
  416f31:	add    edi,edi
  416f33:	(bad)  
  416f34:	fild   DWORD PTR [rcx]
  416f36:	(bad)  
  416f37:	dec    edi
  416f39:	add    edi,edi
  416f3b:	inc    ebx
  416f3d:	add    edi,edi
  416f3f:	push   QWORD PTR [rdi-0x540000ff]
  416f45:	add    edi,edi
  416f47:	call   FWORD PTR [rdi-0x6c0000ff]
  416f4d:	add    edi,edi
  416f4f:	(bad)  
  416f50:	mov    edi,0xb3fffeff
  416f55:	(bad)  
  416f56:	(bad)  
  416f57:	call   FWORD PTR [rdi-0x180000fd]
  416f5d:	add    bh,bh
  416f5f:	(bad)  
  416f60:	fild   DWORD PTR [rax]
  416f62:	(bad)  
  416f63:	dec    edi
  416f65:	add    bh,bh
  416f67:	inc    ebx
  416f69:	add    bh,bh
  416f6b:	push   QWORD PTR [rdi-0x54000100]
  416f71:	add    bh,bh
  416f73:	call   FWORD PTR [rdi-0x6c000100]
  416f79:	add    bh,bh
  416f7b:	inc    DWORD PTR [rdi+0x7bffff00]
  416f81:	add    bh,bh
  416f83:	jmp    FWORD PTR [rdi+0x0]
  416f86:	(bad)  
  416f87:	jmp    QWORD PTR [rbx+0x0]
  416f8a:	(bad)  
  416f8b:	call   QWORD PTR [rdi+0x0]
  416f8e:	(bad)  
  416f8f:	dec    DWORD PTR [rbx+0x0]
  416f92:	(bad)  
  416f93:	(bad)  
  416f94:	(bad)  
  416f95:	add    bh,bh
  416f97:	call   QWORD PTR [rdi]
  416f99:	add    edi,edi
  416f9b:	dec    DWORD PTR [rbx]
  416f9d:	add    edi,edi
  416f9f:	(bad)  
  416fa0:	inc    DWORD PTR [rax]
  416fa2:	(bad)  
  416fa3:	push   rbx
  416fa5:	add    bh,bh
  416fa7:	push   QWORD PTR [rdi]
  416fa9:	add    bh,bh
  416fab:	jmp    FWORD PTR [rbx]
  416fad:	add    bh,bh
  416faf:	jmp    FWORD PTR [rbx+0x3]
  416fb2:	(bad)  
  416fb3:	(bad)  
  416fb4:	(bad)  
  416fb6:	(bad)  
  416fb7:	dec    edi
  416fb9:	(bad)  
  416fba:	(bad)  
  416fbb:	inc    ebx
  416fbd:	(bad)  
  416fbe:	(bad)  
  416fbf:	push   QWORD PTR [rdi-0x54000101]
  416fc5:	(bad)  
  416fc6:	(bad)  
  416fc7:	call   FWORD PTR [rdi-0x6c000101]
  416fcd:	(bad)  
  416fce:	(bad)  
  416fcf:	inc    DWORD PTR [rdi+0x7bfffeff]
  416fd5:	(bad)  
  416fd6:	(bad)  
  416fd7:	jmp    FWORD PTR [rdi-0x1]
  416fda:	(bad)  
  416fdb:	jmp    QWORD PTR [rbx-0x1]
  416fde:	(bad)  
  416fdf:	call   QWORD PTR [rdi-0x1]
  416fe2:	(bad)  
  416fe3:	dec    DWORD PTR [rbx-0x1]
  416fe6:	(bad)  
  416fe7:	(bad)  
  416fe8:	(bad)  
  416fe9:	(bad)  
  416fea:	(bad)  
  416feb:	push   QWORD PTR [rbx]
  416fed:	(bad)  
  416fee:	(bad)  
  416fef:	push   rdi
  416ff1:	add    edi,edi
  416ff3:	(bad)  
  416ff4:	jmp    0x416ff7
  416ff6:	(bad)  
  416ff7:	inc    DWORD PTR [rbx]
  416ff9:	add    bh,bh
  416ffb:	jmp    QWORD PTR [rbx-0x68000103]
  417001:	std    
  417002:	(bad)  
  417003:	jmp    QWORD PTR [rbx-0x38000103]
  417009:	std    
  41700a:	(bad)  
  41700b:	inc    DWORD PTR [rbx]
  41700d:	(bad)  
  41700e:	(bad)  
  41700f:	push   rdi
  417011:	std    
  417012:	(bad)  
  417013:	dec    DWORD PTR [rdi]
  417015:	(bad)  
  417016:	(bad)  
  417017:	dec    DWORD PTR [rdi]
  417019:	(bad)  
  41701a:	(bad)  
  41701b:	dec    DWORD PTR [rdi]
  41701d:	(bad)  
  41701e:	(bad)  
  41701f:	dec    DWORD PTR [rdi]
  417021:	(bad)  
  417022:	(bad)  
  417023:	dec    DWORD PTR [rdi]
  417025:	(bad)  
  417026:	(bad)  
  417027:	dec    DWORD PTR [rdi]
  417029:	(bad)  
  41702a:	(bad)  
  41702b:	dec    DWORD PTR [rdi]
  41702d:	(bad)  
  41702e:	(bad)  
  41702f:	dec    DWORD PTR [rdi]
  417031:	(bad)  
  417032:	(bad)  
  417033:	dec    DWORD PTR [rdi]
  417035:	(bad)  
  417036:	(bad)  
  417037:	dec    DWORD PTR [rdi]
  417039:	(bad)  
  41703a:	(bad)  
  41703b:	dec    DWORD PTR [rdi]
  41703d:	(bad)  
  41703e:	(bad)  
  41703f:	dec    DWORD PTR [rdi]
  417041:	(bad)  
  417042:	(bad)  
  417043:	dec    DWORD PTR [rdi]
  417045:	(bad)  
  417046:	(bad)  
  417047:	dec    DWORD PTR [rdi]
  417049:	(bad)  
  41704a:	(bad)  
  41704b:	dec    DWORD PTR [rdi]
  41704d:	(bad)  
  41704e:	(bad)  
  41704f:	dec    DWORD PTR [rdi]
  417051:	(bad)  
  417052:	(bad)  
  417053:	dec    DWORD PTR [rdi]
  417055:	(bad)  
  417056:	(bad)  
  417057:	dec    DWORD PTR [rdi]
  417059:	(bad)  
  41705a:	(bad)  
  41705b:	dec    DWORD PTR [rdi]
  41705d:	(bad)  
  41705e:	(bad)  
  41705f:	dec    DWORD PTR [rdi]
  417061:	(bad)  
  417062:	(bad)  
  417063:	dec    DWORD PTR [rdi]
  417065:	(bad)  
  417066:	(bad)  
  417067:	dec    DWORD PTR [rdi]
  417069:	(bad)  
  41706a:	(bad)  
  41706b:	dec    DWORD PTR [rdi]
  41706d:	(bad)  
  41706e:	(bad)  
  41706f:	dec    DWORD PTR [rdi]
  417071:	(bad)  
  417072:	(bad)  
  417073:	dec    DWORD PTR [rdi]
  417075:	(bad)  
  417076:	(bad)  
  417077:	call   QWORD PTR [rdi+0x6ffffefd]
  41707d:	add    bh,bh
  41707f:	call   QWORD PTR [rdi+0x2]
  417082:	(bad)  
  417083:	dec    DWORD PTR [rbx+0x2]
  417086:	(bad)  
  417087:	(bad)  
  417088:	(bad)  
  417089:	add    bh,bh
  41708b:	push   QWORD PTR [rbx]
  41708d:	add    bh,bh
  41708f:	jmp    QWORD PTR [rdi]
  417091:	add    bh,bh
  417093:	call   FWORD PTR [rbx]
  417095:	add    bh,bh
  417097:	dec    DWORD PTR [rdi]
  417099:	add    bh,bh
  41709b:	inc    DWORD PTR [rbx]
  41709d:	add    bh,bh
  41709f:	push   rdi
  4170a1:	add    edi,edi
  4170a3:	(bad)  
  4170a4:	jmp    0x4170a7
  4170a6:	(bad)  
  4170a7:	(bad)  
  4170a8:	fild   WORD PTR [rcx]
  4170aa:	(bad)  
  4170ab:	call   rbx
  4170ad:	add    edi,edi
  4170af:	inc    edi
  4170b1:	add    edi,edi
  4170b3:	(bad)  
  4170b4:	mov    ebx,0xafffff01
  4170b9:	add    edi,edi
  4170bb:	inc    DWORD PTR [rbx+0x1]
  4170be:	(bad)  
  4170bf:	call   QWORD PTR [rdi-0x3]
  4170c2:	(bad)  
  4170c3:	push   rdi
  4170c5:	cld    
  4170c6:	(bad)  
  4170c7:	(bad)  
  4170c8:	jmp    0x4170c6
  4170ca:	(bad)  
  4170cb:	dec    DWORD PTR [rdi]
  4170cd:	std    
  4170ce:	(bad)  
  4170cf:	jmp    QWORD PTR [rdi]
  4170d1:	std    
  4170d2:	(bad)  
  4170d3:	call   FWORD PTR [rbx]
  4170d5:	std    
  4170d6:	(bad)  
  4170d7:	dec    DWORD PTR [rbx+rax*2+0x5f]
  4170db:	rex.B
  4170dc:	rex.WR
  4170dd:	rex.WR add BYTE PTR [rcx+rax*2+0x4e],r9b
  4170e2:	rex.RXB add BYTE PTR [r8],r8b
	...
  417101:	sbb    al,BYTE PTR [rax]
  417103:	add    bh,ch
  417105:	(bad)  
  417106:	(bad)  
  417107:	(bad)  
  417108:	(bad)  
  417109:	(bad)  
  41710a:	(bad)  
  41710b:	(bad)  
  41710c:	(bad)  
  41710d:	(bad)  
  41710e:	(bad)  
  41710f:	jg     0x417111
	...
  41711d:	add    BYTE PTR [rax],al
  41711f:	add    BYTE PTR [rbp+0x62],ch
  417122:	jne    0x41718d
  417124:	je     0x41718b
  417126:	jb     0x417156
  417128:	push   0x73626d00
  41712d:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  417134:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x74733e2d
  41713c:	(bad)  
  41713d:	je     0x4171a4
  41713f:	sub    DWORD PTR [rax],eax
  417141:	sub    ch,BYTE PTR [rcx+0x74]
  417144:	gs jb  0x417174
  417147:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  41714b:	cs jo  0x4171c2
  41714e:	jb     0x417170
  417150:	cmp    eax,0x5c27203d
  417155:	xor    BYTE PTR [rdi],ah
  417157:	add    BYTE PTR [rcx+0x74],ch
  41715a:	gs jb  0x41718a
  41715d:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  417161:	cs ja  0x4171c7
  417164:	and    BYTE PTR [rip+0x30203d],bh        # 0x7191a7
  41716a:	add    BYTE PTR [rax],al
  41716c:	add    BYTE PTR [rax],al
  41716e:	add    BYTE PTR [rax],al
  417170:	ins    DWORD PTR es:[rdi],dx
  417171:	(bad)  
  417172:	jne    0x4171dd
  417174:	je     0x4171db
  417176:	jb     0x4171a6
  417178:	push   0x73626d00
  41717d:	imul   ebp,DWORD PTR [rsi+0x69],0x26282074
  417184:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x74733e2d
  41718c:	(bad)  
  41718d:	je     0x4171f4
  41718f:	sub    DWORD PTR [rax],eax
  417191:	sub    ch,BYTE PTR [rcx+0x74]
  417194:	gs jb  0x4171c4
  417197:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  41719b:	cs jo  0x417212
  41719e:	jb     0x4171c0
  4171a0:	cmp    eax,0x5c27203d
  4171a5:	xor    BYTE PTR [rdi],ah
  4171a7:	add    BYTE PTR [rcx+0x74],ch
  4171aa:	gs jb  0x4171da
  4171ad:	movsxd esi,DWORD PTR ds:[rbp+0x72]
  4171b1:	cs ja  0x417217
  4171b4:	and    BYTE PTR [rip+0x30203d],bh        # 0x7191f7
  4171ba:	add    BYTE PTR [rax],al
  4171bc:	add    BYTE PTR [rax],al
  4171be:	add    BYTE PTR [rax],al
  4171c0:	rex.RB push r13
  4171c2:	rex.XB sub eax,0x4700504a
  4171c8:	rex.X xor sil,BYTE PTR [rbx]
  4171cb:	xor    DWORD PTR [rdx],esi
  4171cd:	add    BYTE PTR [rbp+0x55],al
  4171d0:	rex.XB sub eax,0x42005754
  4171d6:	rex.WB
  4171d7:	rex.RXB xor eax,0x43554500
  4171dd:	sub    eax,0x4300524b
  4171e2:	push   rax
  4171e3:	cmp    DWORD PTR [rcx+rdi*1],esi
	...
  4171fe:	add    BYTE PTR [rax],al
  417200:	add    BYTE PTR [rcx],al
  417202:	add    al,BYTE PTR [rbx]
  417204:	add    al,0x5
  417206:	(bad)  
  417207:	(bad)  
  417208:	or     BYTE PTR [rcx],cl
  41720a:	dec    DWORD PTR [rdx]
  41720c:	or     ecx,DWORD PTR [rcx*1-0xf101]
  417213:	(bad)  
  417214:	(bad)  
  417215:	dec    DWORD PTR [rdi]
  417217:	call   QWORD PTR [rax]
  417219:	(bad)  
  41721a:	(bad)  
  41721b:	(bad)  
  41721c:	(bad)  
  41721d:	(bad)  
  41721e:	(bad)  
  41721f:	(bad)  
  417220:	(bad)  
  417221:	(bad)  
  417222:	(bad)  
  417223:	(bad)  
  417224:	(bad)  
  417225:	(bad)  
  417226:	(bad)  
  417227:	(bad)  
  417228:	(bad)  
  417229:	(bad)  
  41722a:	(bad)  
  41722b:	(bad)  
  41722c:	(bad)  
  41722d:	(bad)  
  41722e:	(bad)  
  41722f:	(bad)  
  417230:	(bad)  
  417231:	(bad)  
  417232:	(bad)  
  417233:	(bad)  
  417234:	(bad)  
  417235:	(bad)  
  417236:	(bad)  
  417237:	(bad)  
  417238:	(bad)  
  417239:	(bad)  
  41723a:	(bad)  
  41723b:	(bad)  
  41723c:	(bad)  
  41723d:	(bad)  
  41723e:	(bad)  
  41723f:	(bad)  
  417240:	(bad)  
  417241:	(bad)  
  417242:	(bad)  
  417243:	(bad)  
  417244:	(bad)  
  417245:	(bad)  
  417246:	(bad)  
  417247:	(bad)  
  417248:	(bad)  
  417249:	(bad)  
  41724a:	(bad)  
  41724b:	(bad)  
  41724c:	(bad)  
  41724d:	(bad)  
  41724e:	(bad)  
  41724f:	(bad)  
  417250:	(bad)  
  417251:	(bad)  
  417252:	call   QWORD PTR [rcx]
  417254:	adc    dl,BYTE PTR [rbx]
  417256:	(bad)  
  417257:	(bad)  
  417258:	(bad)  
  417259:	(bad)  
  41725a:	(bad)  
  41725b:	(bad)  
  41725c:	(bad)  
  41725d:	(bad)  
  41725e:	(bad)  
  41725f:	(bad)  
  417260:	(bad)  
  417261:	(bad)  
  417262:	(bad)  
  417263:	(bad)  
  417264:	(bad)  
  417265:	(bad)  
  417266:	(bad)  
  417267:	(bad)  
  417268:	(bad)  
  417269:	(bad)  
  41726a:	(bad)  
  41726b:	(bad)  
  41726c:	(bad)  
  41726d:	(bad)  
  41726e:	(bad)  
  41726f:	(bad)  
  417270:	(bad)  
  417271:	(bad)  
  417272:	(bad)  
  417273:	(bad)  
  417274:	(bad)  
  417275:	(bad)  
  417276:	(bad)  
  417277:	(bad)  
  417278:	(bad)  
  417279:	(bad)  
  41727a:	(bad)  
  41727b:	(bad)  
  41727c:	call   QWORD PTR [rdi+rdi*8]
  41727f:	adc    eax,0xffff1716
  417284:	call   FWORD PTR [rax]
  417286:	(bad)  
  417287:	call   FWORD PTR [rcx]
  417289:	sbb    bl,BYTE PTR [rbx]
  41728b:	sbb    al,0xff
  41728d:	(bad)  
  41728e:	(bad)  
  41728f:	(bad)  
  417290:	(bad)  
  417291:	(bad)  
  417292:	(bad)  
  417293:	(bad)  
  417294:	(bad)  
  417295:	(bad)  
  417296:	(bad)  
  417297:	(bad)  
  417298:	(bad)  
  417299:	(bad)  
  41729a:	(bad)  
  41729b:	(bad)  
  41729c:	(bad)  
  41729d:	(bad)  
  41729e:	(bad)  
  41729f:	(bad)  
  4172a0:	(bad)  
  4172a1:	(bad)  
  4172a2:	(bad)  
  4172a3:	(bad)  
  4172a4:	(bad)  
  4172a5:	(bad)  
  4172a6:	(bad)  
  4172a7:	(bad)  
  4172a8:	(bad)  
  4172a9:	(bad)  
  4172aa:	(bad)  
  4172ab:	(bad)  
  4172ac:	(bad)  
  4172ad:	(bad)  
  4172ae:	(bad)  
  4172af:	(bad)  
  4172b0:	(bad)  
  4172b1:	(bad)  
  4172b2:	(bad)  
  4172b3:	(bad)  
  4172b4:	call   FWORD PTR [rip+0xffffffffffff1eff]        # 0x4091b9
  4172ba:	(bad)  
  4172bb:	(bad)  
  4172bc:	(bad)  
  4172bd:	(bad)  
  4172be:	(bad)  
  4172bf:	(bad)  
  4172c0:	(bad)  
  4172c1:	(bad)  
  4172c2:	(bad)  
  4172c3:	(bad)  
  4172c4:	(bad)  
  4172c5:	(bad)  
  4172c6:	(bad)  
  4172c7:	(bad)  
  4172c8:	(bad)  
  4172c9:	(bad)  
  4172ca:	(bad)  
  4172cb:	(bad)  
  4172cc:	(bad)  
  4172cd:	(bad)  
  4172ce:	(bad)  
  4172cf:	(bad)  
  4172d0:	(bad)  
  4172d1:	(bad)  
  4172d2:	(bad)  
  4172d3:	(bad)  
  4172d4:	(bad)  
  4172d5:	(bad)  
  4172d6:	(bad)  
  4172d7:	(bad)  
  4172d8:	(bad)  
  4172d9:	(bad)  
  4172da:	(bad)  
  4172db:	(bad)  
  4172dc:	(bad)  
  4172dd:	call   FWORD PTR [rdi]
  4172df:	(bad)  
  4172e0:	(bad)  
  4172e1:	(bad)  
  4172e2:	(bad)  
  4172e3:	(bad)  
  4172e4:	(bad)  
  4172e5:	(bad)  
  4172e6:	(bad)  
  4172e7:	jmp    QWORD PTR [rax]
  4172e9:	and    edi,edi
  4172eb:	(bad)  
  4172ec:	jmp    QWORD PTR [rdx]
  4172ee:	(bad)  
  4172ef:	(bad)  
  4172f0:	(bad)  
  4172f1:	(bad)  
  4172f2:	(bad)  
  4172f3:	jmp    QWORD PTR [rbx]
  4172f5:	(bad)  
  4172f6:	(bad)  
  4172f7:	inc    DWORD PTR [rax]
  4172f9:	add    BYTE PTR [rax],al
  4172fb:	add    BYTE PTR [rax],al
  4172fd:	add    BYTE PTR [rax],al
  4172ff:	add    bh,bh
  417301:	(bad)  
  417302:	(bad)  
  417303:	inc    DWORD PTR [rax]
	...
  41730d:	add    BYTE PTR [rax],al
  41730f:	cmp    bh,0xff
  417312:	(bad)  
  417313:	inc    DWORD PTR [rax]
  417315:	and    BYTE PTR [rax],al
	...
  41735f:	add    bh,bh
  417361:	(bad)  
  417362:	(bad)  
  417363:	(bad)  
  417364:	(bad)  
  417365:	(bad)  
  417366:	(bad)  
  417367:	(bad)  
  417368:	(bad)  
  417369:	(bad)  
  41736a:	(bad)  
  41736b:	(bad)  
  41736c:	(bad)  
  41736d:	inc    DWORD PTR [rax]
	...
  41738f:	add    al,bh
  417391:	add    eax,DWORD PTR [rax]
	...
  4173af:	add    BYTE PTR [rax],al
  4173b1:	add    dh,bh
  4173b3:	(bad)  
  4173b4:	(bad)  
  4173b5:	(bad)  
  4173b6:	(bad)  
  4173b7:	mov    edi,0xb6
  4173bc:	add    BYTE PTR [rax],al
  4173be:	add    BYTE PTR [rax],al
  4173c0:	(bad)  
  4173c1:	add    bh,bh
  4173c3:	(bad)  
  4173c4:	add    BYTE PTR [rax],al
  4173c6:	add    BYTE PTR [rax],al
  4173c8:	add    al,bh
  4173ca:	(bad)  
  4173cb:	inc    DWORD PTR [rax]
  4173cd:	add    BYTE PTR [rcx],al
	...
  4173d7:	add    BYTE PTR [rax],al
  4173d9:	add    al,al
  4173db:	mov    edi,0x3d9f
  4173e0:	add    BYTE PTR [rax+0x2],al
  4173e6:	(bad)  
  4173e7:	(bad)  
  4173e8:	inc    DWORD PTR [rdi]
	...
  4173f2:	add    BYTE PTR [rax],al
  4173f4:	sar    bh,0x1
  4173f7:	add    BYTE PTR [rax],al
  4173f9:	add    BYTE PTR [rax],al
  4173fb:	add    BYTE PTR [rax],al
  4173fd:	clc    
  4173fe:	sldt   WORD PTR [rax]
  417401:	add    al,al
  417403:	sti    
  417404:	out    dx,eax
  417405:	add    BYTE PTR ds:[rax],al
  417408:	add    BYTE PTR [rax],al
  41740a:	add    BYTE PTR [rsi],cl
	...
  41741c:	clc    
  41741d:	(bad)  
  41741e:	(bad)  
  41741f:	inc    DWORD PTR [rdi]
  417421:	add    BYTE PTR [rax],al
  417423:	add    BYTE PTR [rax],al
  417425:	add    BYTE PTR [rax],al
  417427:	adc    al,0xfe
  417429:	and    esi,edi
  41742b:	add    BYTE PTR [rax+rax*1],cl
  41742e:	add    BYTE PTR [rax],al
  417430:	add    al,BYTE PTR [rax]
  417432:	add    BYTE PTR [rax],al
  417434:	add    BYTE PTR [rax],al
  417436:	add    BYTE PTR [rax],dl
  417438:	(bad)  
  417439:	and    BYTE PTR [rax],al
  41743b:	add    BYTE PTR [rax+rax*1],cl
  41743e:	add    BYTE PTR [rax],al
  417440:	(bad)  
  417441:	add    BYTE PTR [rax],al
  417443:	add    BYTE PTR [rax],al
  417445:	add    BYTE PTR [rax],al
  417447:	adc    BYTE PTR [rsi+0x239],al
  41744d:	add    BYTE PTR [rbx],ah
  41744f:	add    BYTE PTR [rsi],al
  417451:	add    BYTE PTR [rax],al
  417453:	add    BYTE PTR [rax],al
  417455:	add    BYTE PTR [rax],al
  417457:	adc    BYTE PTR [rsi+0xc000021],bh
  41745d:	add    BYTE PTR [rax],al
  41745f:	add    BYTE PTR [rdx],al
  417461:	add    BYTE PTR [rax],al
  417463:	add    BYTE PTR [rax],al
  417465:	add    BYTE PTR [rax],al
  417467:	nop
  417468:	(bad)  
  417469:	and    BYTE PTR [rax+0x0],al
  41746c:	or     al,0x0
  41746e:	add    BYTE PTR [rax],al
  417470:	add    al,0x0
  417472:	add    BYTE PTR [rax],al
  417474:	add    BYTE PTR [rax],al
  417476:	add    BYTE PTR [rax],al
  417478:	add    DWORD PTR [rax],esp
  41747a:	add    BYTE PTR [rax],al
  41747c:	add    BYTE PTR [rax],al
  41747e:	add    BYTE PTR [rax],al
  417480:	add    DWORD PTR [rax],eax
  417482:	add    BYTE PTR [rax],al
  417484:	add    BYTE PTR [rax],al
  417486:	add    al,al
  417488:	sar    DWORD PTR [rip+0xc0060],0x0        # 0x4d74ef
  41748f:	add    BYTE PTR [rdx],al
  417491:	add    BYTE PTR [rax],al
  417493:	add    BYTE PTR [rax],al
  417495:	add    BYTE PTR [rax],al
  417497:	adc    BYTE PTR [rax],al
  417499:	xor    BYTE PTR [rax],al
  41749b:	add    BYTE PTR [rax+rax*1],cl
  41749e:	add    BYTE PTR [rax],al
  4174a0:	add    al,BYTE PTR [rax]
  4174a2:	add    BYTE PTR [rax],al
  4174a4:	add    BYTE PTR [rax],al
  4174a6:	add    BYTE PTR [rax],al
  4174a8:	(bad)  
  4174a9:	and    BYTE PTR [rax],al
  4174ab:	add    BYTE PTR [rax+rax*1],cl
	...
  4174b6:	add    BYTE PTR [rax],al
  4174b8:	add    BYTE PTR [rsp+rbx*2],al
	...
  4174c3:	add    BYTE PTR [rax],al
  4174c5:	add    dl,dh
  4174c7:	(bad)  
  4174c8:	cmp    BYTE PTR [rdi+0x0],0x0
	...
  4174d4:	add    BYTE PTR [rax],al
  4174d6:	repnz sbb eax,DWORD PTR [rax]
  4174d9:	(bad)  
	...
  4174e2:	add    BYTE PTR [rbx],al
  4174e4:	add    BYTE PTR [rax],al
  4174e6:	movabs al,ds:0xfe00000000000002
  4174ef:	jg     0x4174d0
  4174f1:	loopne 0x4174f2
  4174f3:	(bad)  
  4174f4:	(bad)  
  4174f5:	(bad)  
  4174f6:	call   FWORD PTR [rdi]
  4174f8:	add    BYTE PTR [rax],al
	...
  417503:	add    BYTE PTR [rax],al
  417505:	loopne 0x417504
  417507:	data16 add BYTE PTR [rax],al
  41750a:	add    bl,al
  41750c:	add    DWORD PTR [rax],eax
  41750e:	(bad)  
  41750f:	add    BYTE PTR [rax+riz*1+0x0],ah
  417513:	and    BYTE PTR [rax],al
	...
  417569:	add    BYTE PTR [rax],al
  41756b:	loopne 0x41756d
	...
  4175a1:	add    BYTE PTR [rax+rax*1],bl
  4175a4:	add    BYTE PTR [rax],al
  4175a6:	sbb    al,0x0
  4175a8:	add    BYTE PTR [rax],al
  4175aa:	or     al,0x0
  4175ac:	add    BYTE PTR [rax],al
  4175ae:	or     al,0x0
  4175b0:	add    BYTE PTR [rax],al
  4175b2:	add    BYTE PTR [rax],al
  4175b4:	add    BYTE PTR [rax],al
  4175b6:	mov    al,0x3f
  4175b8:	rex dec BYTE PTR [rdi]
  4175bb:	and    BYTE PTR [rax],al
  4175bd:	add    BYTE PTR [rax],al
  4175bf:	add    BYTE PTR [rax],al
  4175c1:	js     0x4175c3
	...
  4175d3:	add    BYTE PTR [rax],al
  4175d5:	add    al,BYTE PTR [rax]
	...
  4175e3:	add    BYTE PTR [rdi+0xe0401],al
	...
  417601:	add    BYTE PTR [rax+0x9],al
  417607:	add    BYTE PTR [rax],al
  417609:	add    BYTE PTR [rax+0x7f],al
  41760c:	in     eax,0x1f
  41760e:	clc    
  41760f:	lahf   
  417610:	add    BYTE PTR [rax],al
  417612:	add    BYTE PTR [rax],al
  417614:	add    BYTE PTR [rax],al
  417616:	(bad)  
  417617:	jg     0x417619
  417619:	add    BYTE PTR [rax],al
  41761b:	add    BYTE PTR [rax],al
  41761d:	add    BYTE PTR [rax],al
  41761f:	add    BYTE PTR [rdi],cl
  417621:	add    BYTE PTR [rax],al
  417623:	add    BYTE PTR [rax],al
  417625:	add    al,dl
  417627:	(bad)  
  417628:	add    al,0x0
  41762a:	add    BYTE PTR [rax],al
  41762c:	add    al,bh
  41762e:	sldt   WORD PTR [rbx]
  417631:	add    BYTE PTR [rax],al
  417633:	add    BYTE PTR [rbx+rdi*1],bh
  417636:	add    BYTE PTR [rax],al
  417638:	add    BYTE PTR [rax],al
  41763a:	add    BYTE PTR [rax],al
  41763c:	rex movabs ds:0xf000000000000003,eax
  417646:	iret   
	...
  417657:	add    BYTE PTR [rax],al
  417659:	add    bh,dh
  41765b:	(bad)  
  41765c:	std    
  41765d:	and    DWORD PTR [rax],edx
  41765f:	add    eax,DWORD PTR [rax]
	...
  417675:	add    BYTE PTR [rax],al
  417677:	add    bh,bh
  417679:	(bad)  
  41767a:	(bad)  
  41767b:	(bad)  
  41767c:	(bad)  
  41767d:	(bad)  
  41767e:	(bad)  
  41767f:	lock add al,bh
  417682:	add    BYTE PTR [rax],al
  417684:	add    BYTE PTR [rax+rax*1+0x0],bh
  417688:	add    BYTE PTR [rax],al
  41768a:	add    BYTE PTR [rax],al
  41768c:	(bad)  
	...
  41769a:	(bad)  
  41769b:	(bad)  
  41769c:	(bad)  
  41769d:	inc    DWORD PTR [rcx]
	...
  4176db:	add    BYTE PTR [rax],al
  4176dd:	add    BYTE PTR [rbx],0x0
	...
  4176ec:	add    BYTE PTR [rax],al
  4176ee:	add    BYTE PTR [rax+0x0],al
	...
  4176fc:	(bad)  
  4176fd:	(bad)  
  4176fe:	(bad)  
  4176ff:	inc    DWORD PTR [rax]
  417701:	add    BYTE PTR [rax],al
  417703:	add    BYTE PTR [rax],al
  417705:	cmp    al,0x0
	...
  417713:	(bad)  
	...
  41774c:	add    BYTE PTR [rax+0x3ff7],al
  417752:	add    al,al
	...
  41775c:	add    BYTE PTR [rax],al
  41775e:	add    eax,DWORD PTR [rax]
	...
  417780:	or     BYTE PTR [rax],r8b
  417783:	add    BYTE PTR [rax+0x0],ah
	...
  417796:	add    BYTE PTR [rax],al
  417798:	adc    BYTE PTR [rax],al
  41779a:	add    BYTE PTR [rax],al
  41779c:	(bad)  
  41779d:	inc    DWORD PTR [rbx]
  41779f:	add    BYTE PTR [rax],al
  4177a1:	add    BYTE PTR [rax],al
  4177a3:	add    al,al
  4177a5:	(bad)  
  4177a6:	add    BYTE PTR [rax],al
  4177a8:	cmp    bh,0x3
  4177ab:	add    BYTE PTR [rax],al
  4177ad:	add    BYTE PTR [rax],al
  4177af:	add    BYTE PTR [rdi],al
  4177b1:	add    BYTE PTR [rax],al
  4177b3:	add    BYTE PTR [rax],al
  4177b5:	add    al,cl
  4177b7:	adc    eax,DWORD PTR [rax]
  4177b9:	add    BYTE PTR [rax],al
  4177bb:	add    BYTE PTR [rax],ah
	...
  4177c5:	jle    0x41782d
  4177c7:	add    BYTE PTR [rax],cl
  4177c9:	adc    BYTE PTR [rax],al
  4177cb:	add    BYTE PTR [rax],al
  4177cd:	add    BYTE PTR [rax],al
  4177cf:	adc    BYTE PTR [rax],al
  4177d1:	add    BYTE PTR [rax],al
  4177d3:	add    BYTE PTR [rax],al
  4177d5:	add    BYTE PTR [rbp+0x2c1],bl
  4177db:	add    BYTE PTR [rax],al
  4177dd:	xor    BYTE PTR [rax+0x0],al
	...
  4177fc:	and    BYTE PTR [rcx],ah
	...
  417822:	add    BYTE PTR [rax+0x0],al
	...
  41783d:	add    BYTE PTR [rax],al
  41783f:	add    bh,bh
  417841:	inc    DWORD PTR [rax]
  417843:	add    bh,bh
  417845:	inc    DWORD PTR [rax]
	...
  41785f:	add    BYTE PTR [rax],0x0
	...
  41787e:	add    BYTE PTR [rsi],cl
	...
  4178bc:	add    BYTE PTR [rax],al
  4178be:	add    BYTE PTR [rax],ah
	...
  4178dc:	add    DWORD PTR [rax],eax
	...
  4178ee:	rol    BYTE PTR [rdi],0x0
	...
  4178fd:	add    BYTE PTR [rax],al
  4178ff:	add    BYTE PTR [rsi-0x10],ch
  417902:	add    BYTE PTR [rax],al
  417904:	add    BYTE PTR [rax],al
  417906:	add    BYTE PTR [rdi+0x0],al
	...
  41791c:	(bad)  
	...
  41793d:	add    BYTE PTR [rax],al
  41793f:	add    BYTE PTR [rdx],al
  417941:	add    BYTE PTR [rax],al
  417943:	add    BYTE PTR [rax],al
  417945:	add    BYTE PTR [rax],al
  417947:	(bad)  
  417948:	jg     0x41794a
  41794a:	add    BYTE PTR [rax],al
  41794c:	add    BYTE PTR [rax],al
  41794e:	add    BYTE PTR [rax+0x3],al
  417954:	add    BYTE PTR [rax],al
  417956:	js     0x41797e
	...
  417960:	(bad)  
  417961:	add    BYTE PTR [rax],al
  417963:	add    BYTE PTR [rax+0x1fef],al
  417969:	add    BYTE PTR [rax],al
  41796b:	add    BYTE PTR [rax],al
  41796d:	add    BYTE PTR [rax],cl
  41796f:	add    BYTE PTR [rbx],al
  417971:	add    BYTE PTR [rax],al
  417973:	add    BYTE PTR [rax],al
  417975:	add    al,al
  417977:	jg     0x417979
  417979:	sbb    al,0x0
	...
  417983:	add    BYTE PTR [rax],al
  417985:	adc    bl,0x0
	...
  417998:	add    BYTE PTR [rax],al
  41799a:	add    BYTE PTR [rax+0x7f8],al
  4179a0:	add    eax,DWORD PTR [rax]
  4179a2:	add    BYTE PTR [rax],al
  4179a4:	add    BYTE PTR [rax],al
  4179a6:	add    BYTE PTR [rax],dl
  4179a8:	add    DWORD PTR [rax],eax
  4179aa:	add    BYTE PTR [rax],al
  4179ac:	rcr    BYTE PTR [rdi],0x1f
	...
  4179d3:	add    BYTE PTR [rax],al
  4179d5:	add    al,bh
  4179d7:	test   DWORD PTR [rip+0x0],ecx        # 0x4179dd
	...
  4179f5:	add    BYTE PTR [rax+rsi*4],bh
  4179f8:	add    DWORD PTR [rax],eax
  4179fa:	add    BYTE PTR [rax],dh
	...
  417a04:	add    BYTE PTR [rax],al
  417a06:	clc    
  417a07:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  417a08:	add    DWORD PTR [rax],eax
	...
  417a12:	add    BYTE PTR [rax],al
  417a14:	add    BYTE PTR [rax],ch
  417a16:	mov    edi,0x0
	...
  417a23:	loopne 0x4179e1
  417a25:	sldt   WORD PTR [rax]
	...
  417a5c:	add    BYTE PTR [rax],al
  417a5e:	(bad)  
  417a5f:	add    BYTE PTR [rax],al
  417a61:	add    BYTE PTR [rax],al
  417a63:	add    BYTE PTR [rax],al
  417a65:	add    BYTE PTR [rdi+0x0],bh
	...
  417ab0:	add    BYTE PTR [rax+0x7],al
	...
  417ad2:	add    BYTE PTR [rax+0xf],ah
	...
  417b29:	add    BYTE PTR [rax],al
  417b2b:	add    BYTE PTR [rax-0x180007fd],al
  417b31:	sldt   WORD PTR [rax]
  417b34:	add    BYTE PTR [rax+rax*1],bh
	...
  417b47:	add    BYTE PTR [rax+rax*1],bl
	...
  417b7e:	add    BYTE PTR [rax],al
  417b80:	(bad)  
  417b81:	(bad)  
  417b82:	(bad)  
  417b83:	(bad)  
  417b84:	(bad)  
  417b85:	(bad)  
  417b86:	jg     0x417b80
  417b88:	(bad)  
  417b89:	(bad)  
  417b8a:	(bad)  
  417b8b:	(bad)  
  417b8c:	call   FWORD PTR [rdi]
  417b8e:	and    BYTE PTR [rax],al
  417b90:	adc    BYTE PTR [rax],al
  417b92:	add    al,bh
  417b94:	(bad)  
  417b95:	inc    DWORD PTR [rax]
	...
  417bd7:	add    BYTE PTR [rax],al
  417bd9:	add    BYTE PTR [rdi+0x0],bh
	...
  417c00:	add    al,cl
  417c02:	add    BYTE PTR [r8],al
  417c05:	add    BYTE PTR [rax],al
  417c07:	add    BYTE PTR [rax],al
  417c09:	ret    
  417c0a:	add    BYTE PTR [r8],al
  417c0d:	add    BYTE PTR [rax],al
  417c0f:	add    BYTE PTR [rax+0x40b4],al
	...
  417c1d:	add    BYTE PTR [rax],al
  417c1f:	add    BYTE PTR [rcx+0x72],al
  417c22:	addr32 jne 0x417c92
  417c25:	outs   dx,BYTE PTR gs:[rsi]
  417c27:	je     0x417c49
  417c29:	outs   dx,DWORD PTR fs:[rsi]
  417c2b:	ins    DWORD PTR es:[rdi],dx
  417c2c:	(bad)  
  417c2d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  417c34:	jb     0x417c56
  417c36:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  417c3a:	rex.B
  417c3b:	rex.WB
  417c3c:	rex.WRX sub QWORD PTR [rax],r8
  417c3f:	rex.B jb 0x417ca9
  417c42:	jne    0x417cb1
  417c44:	outs   dx,BYTE PTR gs:[rsi]
  417c46:	je     0x417c68
  417c48:	jae    0x417cb3
  417c4a:	outs   dx,BYTE PTR ds:[rsi]
  417c4b:	addr32 jne 0x417cba
  417c4e:	(bad)  
  417c4f:	jb     0x417cba
  417c51:	je     0x417ccc
  417c53:	and    BYTE PTR [rax],ch
  417c55:	push   rbx
  417c56:	rex.WB
  417c57:	rex.RXB
  417c58:	rex.WRX sub QWORD PTR [rax],r8
  417c5b:	add    BYTE PTR [rax],al
  417c5d:	add    BYTE PTR [rax],al
  417c5f:	add    BYTE PTR [rdi+0x76],cl
  417c62:	gs jb  0x417ccb
  417c65:	ins    BYTE PTR es:[rdi],dx
  417c66:	outs   dx,DWORD PTR ds:[rsi]
  417c67:	ja     0x417c89
  417c69:	jb     0x417ccc
  417c6b:	outs   dx,BYTE PTR ds:[rsi]
  417c6c:	and    BYTE PTR gs:[ebp+0x72],ah
  417c71:	jb     0x417ce2
  417c73:	jb     0x417c95
  417c75:	sub    BYTE PTR [rdi+0x56],cl
  417c78:	rex.RB push r10
  417c7a:	rex.RX
  417c7b:	rex.WR
  417c7c:	rex.WRXB push r15
  417c7e:	sub    DWORD PTR [rax],eax
  417c80:	push   rax
  417c81:	(bad)  
  417c82:	jb     0x417cf8
  417c84:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  417c8b:	jae    0x417cad
  417c8d:	outs   dx,DWORD PTR ds:[rsi]
  417c8e:	data16 and BYTE PTR [rbx+0x69],dh
  417c92:	outs   dx,BYTE PTR ds:[esi]
  417c94:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  417c9b:	and    BYTE PTR gs:[rax],ch
  417c9e:	push   rax
  417c9f:	rex.WR
  417ca0:	rex.WRXB push r11
  417ca2:	push   rbx
  417ca3:	sub    DWORD PTR [rax],eax
  417ca5:	add    BYTE PTR [rax],al
  417ca7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  417cab:	(bad)  
  417cac:	ins    BYTE PTR es:[rdi],dx
  417cad:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  417cb1:	jae    0x417cd3
  417cb3:	outs   dx,DWORD PTR ds:[rsi]
  417cb4:	data16 and BYTE PTR [rbx+0x69],dh
  417cb8:	outs   dx,BYTE PTR ds:[esi]
  417cba:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  417cc1:	and    BYTE PTR gs:[rax],ch
  417cc4:	push   rsp
  417cc5:	rex.WR
  417cc6:	rex.WRXB push r11
  417cc8:	push   rbx
  417cc9:	sub    DWORD PTR [rax],eax
  417ccb:	add    BYTE PTR [rax],al
  417ccd:	add    BYTE PTR [rax],al
  417ccf:	add    BYTE PTR [rax+rbp*2+0x65],dl
  417cd3:	and    BYTE PTR [rdx+0x65],dh
  417cd6:	jae    0x417d4d
  417cd8:	ins    BYTE PTR es:[rdi],dx
  417cd9:	je     0x417cfb
  417cdb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  417ce2:	jae    0x417d51
  417ce4:	(bad)  
  417ce5:	ins    BYTE PTR es:[rdi],dx
  417ce6:	ins    BYTE PTR es:[rdi],dx
  417ce7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  417ceb:	(bad)  
  417cec:	and    BYTE PTR gs:[rdx+0x65],dh
  417cf0:	jo     0x417d64
  417cf2:	gs jae 0x417d5a
  417cf5:	outs   dx,BYTE PTR ds:[rsi]
  417cf6:	je     0x417d5d
  417cf8:	and    BYTE PTR fs:[rax],ch
  417cfb:	push   rbp
  417cfc:	rex.WRX
  417cfd:	rex.R
  417cfe:	rex.RB push r10
  417d00:	rex.RX
  417d01:	rex.WR
  417d02:	rex.WRXB push r15
  417d04:	sub    DWORD PTR [rax],eax
  417d06:	push   rbp
  417d07:	outs   dx,BYTE PTR ds:[rsi]
  417d08:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  417d0c:	outs   dx,BYTE PTR ds:[rsi]
  417d0d:	and    BYTE PTR [rbp+0x72],ah
  417d10:	jb     0x417d81
  417d12:	jb     0x417d14
  417d14:	add    BYTE PTR [rax],al
  417d16:	add    BYTE PTR [rax],al
  417d18:	pop    rdi
  417d19:	ins    DWORD PTR es:[rdi],dx
  417d1a:	(bad)  
  417d1b:	je     0x417d85
  417d1d:	gs jb  0x417d92
  417d20:	sub    BYTE PTR [rcx],ch
  417d22:	cmp    ah,BYTE PTR [rax]
  417d24:	and    eax,0x6e692073
  417d29:	and    BYTE PTR [rip+0x67252873],ah        # 0x6766a5a2
  417d2f:	sub    al,0x20
  417d31:	and    eax,0x20202967
  417d36:	sub    BYTE PTR [rdx+0x65],dh
  417d39:	je     0x417db1
  417d3b:	(bad)  
  417d3c:	ins    BYTE PTR es:[rdi],dx
  417d3d:	cmp    eax,0xa296725
  417d42:	add    BYTE PTR [rax],al
  417d44:	or     al,0x39
  417d46:	(bad)  
  417d47:	dec    DWORD PTR [rbp+0x38]
  417d4a:	(bad)  
  417d4b:	(bad)  
  417d4c:	mov    esp,0xccffff38
  417d51:	cmp    bh,bh
  417d53:	(bad)  
  417d54:	fdivr  QWORD PTR [rax]
  417d56:	(bad)  
  417d57:	(bad)  
  417d58:	in     al,dx
  417d59:	cmp    bh,bh
  417d5b:	(bad)  
  417d5c:	cld    
  417d5d:	cmp    bh,bh
  417d5f:	dec    DWORD PTR [rbp+0x69]
  417d62:	outs   dx,BYTE PTR ds:[rsi]
  417d63:	addr32 ja 0x417d93
  417d66:	ja     0x417d9e
  417d68:	xor    al,0x20
  417d6a:	jb     0x417de1
  417d6c:	outs   dx,BYTE PTR ds:[rsi]
  417d6d:	je     0x417dd8
  417d6f:	ins    DWORD PTR es:[rdi],dx
  417d70:	and    BYTE PTR gs:[rsi+0x61],ah
  417d74:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  417d7c:	add    BYTE PTR [rax],al
  417d7e:	add    BYTE PTR [rax],al
  417d80:	rex.B
  417d81:	fs fs jb 0x417dea
  417d85:	jae    0x417dfa
  417d87:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a99dfd
  417d8d:	jae    0x417daf
  417d8f:	outs   dx,BYTE PTR ds:[rsi]
  417d90:	outs   dx,DWORD PTR ds:[rsi]
  417d91:	and    BYTE PTR [rcx+0x6d],ch
  417d94:	(bad)  
  417d95:	addr32 gs sub eax,0x74636573
  417d9c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  417da3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  417daa:	jne    0x417e11
  417dac:	jb     0x417e27
  417dae:	and    BYTE PTR [rsi+0x61],ah
  417db1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  417db9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a39e23
  417dbf:	je     0x417e26
  417dc1:	jae    0x417de3
  417dc3:	(bad)  
  417dc4:	je     0x417de6
  417dc6:	(bad)  
  417dc7:	fs fs jb 0x417e30
  417dcb:	jae    0x417e40
  417dcd:	and    BYTE PTR [rip+0x70],ah        # 0x417e43
  417dd3:	add    BYTE PTR [rax],al
  417dd5:	add    BYTE PTR [rax],al
  417dd7:	add    BYTE PTR [rax],ah
  417dd9:	and    BYTE PTR [rsi+0x69],dl
  417ddc:	jb     0x417e52
  417dde:	jne    0x417e41
  417de0:	ins    BYTE PTR es:[rdi],dx
  417de1:	push   rax
  417de2:	jb     0x417e53
  417de4:	je     0x417e4b
  417de6:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  417dea:	(bad)  
  417deb:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  417df3:	push   0x646f6320
  417df8:	and    BYTE PTR gs:[rax],dh
  417dfb:	js     0x417e22
  417dfd:	js     0x417dff
  417dff:	add    BYTE PTR [rax],ah
  417e01:	and    BYTE PTR [rbp+0x6e],dl
  417e04:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  417e08:	outs   dx,BYTE PTR ds:[rsi]
  417e09:	and    BYTE PTR [rax+0x73],dh
  417e0c:	gs jne 0x417e73
  417e0f:	outs   dx,DWORD PTR ds:[rsi]
  417e10:	and    BYTE PTR [rdx+0x65],dh
  417e13:	ins    BYTE PTR es:[rdi],dx
  417e14:	outs   dx,DWORD PTR ds:[rsi]
  417e15:	movsxd esp,DWORD PTR [rcx+0x74]
  417e18:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  417e1f:	je     0x417e90
  417e21:	movsxd ebp,DWORD PTR [rdi+0x6c]
  417e24:	and    BYTE PTR [rsi+0x65],dh
  417e27:	jb     0x417e9c
  417e29:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  417e30:	or     al,BYTE PTR [rax]
  417e32:	add    BYTE PTR [rax],al
  417e34:	add    BYTE PTR [rax],al
  417e36:	add    BYTE PTR [rax],al
  417e38:	and    BYTE PTR [rax],ah
  417e3a:	push   rbp
  417e3b:	outs   dx,BYTE PTR ds:[rsi]
  417e3c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  417e40:	outs   dx,BYTE PTR ds:[rsi]
  417e41:	and    BYTE PTR [rax+0x73],dh
  417e44:	gs jne 0x417eab
  417e47:	outs   dx,DWORD PTR ds:[rsi]
  417e48:	and    BYTE PTR [rdx+0x65],dh
  417e4b:	ins    BYTE PTR es:[rdi],dx
  417e4c:	outs   dx,DWORD PTR ds:[rsi]
  417e4d:	movsxd esp,DWORD PTR [rcx+0x74]
  417e50:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  417e57:	and    BYTE PTR [rbx+0x69],dh
  417e5a:	jp     0x417ec1
  417e5c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4bacc6
	...
  417e6e:	add    BYTE PTR [rax],al
  417e70:	cs jo  0x417ed7
  417e73:	(bad)  
  417e74:	je     0x417ed7
	...
  417e7e:	add    BYTE PTR [rax],al
  417e80:	cmp    al,0x0
  417e82:	jne    0x417e84
  417e84:	outs   dx,BYTE PTR ds:[rsi]
  417e85:	add    BYTE PTR [rbx+0x0],ch
  417e88:	outs   dx,BYTE PTR ds:[rsi]
  417e89:	add    BYTE PTR [rdi+0x0],ch
  417e8c:	ja     0x417e8e
  417e8e:	outs   dx,BYTE PTR ds:[rsi]
  417e8f:	add    BYTE PTR [rsi],bh
  417e91:	add    BYTE PTR [rax],al
  417e93:	add    BYTE PTR [rdi],bh
  417e95:	add    BYTE PTR [rax],al
  417e97:	add    BYTE PTR [rcx+0x0],al
  417e9a:	jae    0x417e9c
  417e9c:	jae    0x417e9e
  417e9e:	add    BYTE PTR gs:[rdx+0x0],dh
  417ea2:	je     0x417ea4
  417ea4:	imul   eax,DWORD PTR [rax],0x6e006f
  417eaa:	and    BYTE PTR [rax],al
  417eac:	data16 add BYTE PTR [rcx+0x0],ah
  417eb0:	imul   eax,DWORD PTR [rax],0x65006c
  417eb6:	add    BYTE PTR fs:[rcx],ah
  417eb9:	add    BYTE PTR [rdx],cl
  417ebb:	add    BYTE PTR [rdx],cl
  417ebd:	add    BYTE PTR [rax+0x0],dl
  417ec0:	jb     0x417ec2
  417ec2:	outs   dx,DWORD PTR ds:[rsi]
  417ec3:	add    BYTE PTR [rdi+0x0],ah
  417ec6:	jb     0x417ec8
  417ec8:	(bad)  
  417ec9:	add    BYTE PTR [rbp+0x0],ch
  417ecc:	cmp    al,BYTE PTR [rax]
  417ece:	and    BYTE PTR [rax],al
  417ed0:	and    eax,0x73007700
  417ed5:	add    BYTE PTR [rdx],cl
  417ed7:	add    BYTE PTR [rsi+0x0],al
  417eda:	imul   eax,DWORD PTR [rax],0x65006c
  417ee0:	cmp    al,BYTE PTR [rax]
  417ee2:	and    BYTE PTR [rax],al
  417ee4:	and    eax,0x73007700
  417ee9:	add    BYTE PTR [rax+rax*1],ch
  417eec:	and    BYTE PTR [rax],al
  417eee:	rex.WR add BYTE PTR [rcx+0x0],r13b
  417ef2:	outs   dx,BYTE PTR ds:[rsi]
  417ef3:	add    BYTE PTR [rbp+0x0],ah
  417ef6:	and    BYTE PTR [rax],al
  417ef8:	and    eax,0xa007500
  417efd:	add    BYTE PTR [rdx],cl
  417eff:	add    BYTE PTR [rbp+0x0],al
  417f02:	js     0x417f04
  417f04:	jo     0x417f06
  417f06:	jb     0x417f08
  417f08:	add    BYTE PTR gs:[rbx+0x0],dh
  417f0c:	jae    0x417f0e
  417f0e:	imul   eax,DWORD PTR [rax],0x6e006f
  417f14:	cmp    al,BYTE PTR [rax]
  417f16:	and    BYTE PTR [rax],al
  417f18:	and    eax,0x73007700
  417f1d:	add    BYTE PTR [rax],al
  417f1f:	add    BYTE PTR [rip+0x73007700],ah        # 0x7341f625
  417f25:	add    BYTE PTR [rdx],cl
	...
  417f2f:	add    BYTE PTR [rbp+0x0],cl
  417f32:	imul   eax,DWORD PTR [rax],0x47006e
  417f38:	push   rdi
  417f39:	add    BYTE PTR [rax],ah
  417f3b:	add    BYTE PTR [rdx+0x0],dl
  417f3e:	jne    0x417f40
  417f40:	outs   dx,BYTE PTR ds:[rsi]
  417f41:	add    BYTE PTR [rax+rax*1+0x69],dh
  417f45:	add    BYTE PTR [rbp+0x0],ch
  417f48:	add    BYTE PTR gs:[rax],ah
  417f4b:	add    BYTE PTR [rcx+0x0],al
  417f4e:	jae    0x417f50
  417f50:	jae    0x417f52
  417f52:	add    BYTE PTR gs:[rdx+0x0],dh
  417f56:	je     0x417f58
  417f58:	imul   eax,DWORD PTR [rax],0x6e006f
  417f5e:	add    BYTE PTR [rax],al
  417f60:	rex.WRX (bad) 
  417f62:	rex.WRX add BYTE PTR [rcx+0x6e],r9b
  417f66:	data16 add BYTE PTR [rax],ch
  417f69:	add    BYTE PTR [rsi+0x0],ch
  417f6c:	jne    0x417f6e
  417f6e:	ins    BYTE PTR es:[rdi],dx
  417f6f:	add    BYTE PTR [rax+rax*1+0x29],ch
  417f73:	add    BYTE PTR [rax],al
  417f75:	add    BYTE PTR [rax],ch
  417f77:	outs   dx,BYTE PTR ds:[rsi]
  417f78:	jne    0x417fe6
  417f7a:	ins    BYTE PTR es:[rdi],dx
  417f7b:	sub    DWORD PTR [rax],eax
  417f7d:	push   rax
  417f7e:	push   rdx
  417f7f:	rex.WB
  417f80:	rex.WRX push rsp
  417f82:	rex.RX pop rdi
  417f84:	rex.RB pop r8
  417f86:	push   rax
  417f87:	rex.WRXB
  417f88:	rex.WRX
  417f89:	rex.RB
  417f8a:	rex.WRX push rsp
  417f8c:	pop    rdi
  417f8d:	rex.R
  417f8e:	rex.WB
  417f8f:	rex.RXB
  417f90:	rex.WB push r12
  417f92:	push   rbx
  417f93:	add    BYTE PTR [rbx+rbp*2+0x6c3cffff],bh
  417f9a:	(bad)  
  417f9b:	(bad)  
  417f9c:	cmp    al,0x6c
  417f9e:	(bad)  
  417f9f:	call   FWORD PTR [rbx+rbp*2+0x6c3cffff]
  417fa6:	(bad)  
  417fa7:	(bad)  
  417fa8:	out    dx,al
  417fa9:	imul   edi,edi,0xffffffff
  417fac:	cmp    al,0x6c
  417fae:	(bad)  
  417faf:	(bad)  
  417fb0:	fsubr  QWORD PTR [rbx-0x1]
  417fb3:	(bad)  
  417fb4:	cmp    al,0x6c
  417fb6:	(bad)  
  417fb7:	(bad)  
  417fb8:	cmp    al,0x6c
  417fba:	(bad)  
  417fbb:	(bad)  
  417fbc:	cld    
  417fbd:	imul   edi,edi,0xffffffff
  417fc0:	jl     0x41802d
  417fc2:	(bad)  
  417fc3:	(bad)  
  417fc4:	cmp    al,0x6c
  417fc6:	(bad)  
  417fc7:	call   FWORD PTR [rbx+rbp*2-0x1]
  417fcb:	(bad)  
  417fcc:	cmp    al,0x6b
  417fce:	(bad)  
  417fcf:	(bad)  
  417fd0:	cmp    al,0x6c
  417fd2:	(bad)  
  417fd3:	call   FWORD PTR [rbx+rbp*2]
  417fd6:	(bad)  
  417fd7:	(bad)  
  417fd8:	cmp    al,0x6c
  417fda:	(bad)  
  417fdb:	(bad)  
  417fdc:	cmp    al,0x6c
  417fde:	(bad)  
  417fdf:	(bad)  
  417fe0:	cmp    al,0x6c
  417fe2:	(bad)  
  417fe3:	(bad)  
  417fe4:	cmp    al,0x6c
  417fe6:	(bad)  
  417fe7:	(bad)  
  417fe8:	cmp    al,0x6c
  417fea:	(bad)  
  417feb:	(bad)  
  417fec:	cmp    al,0x6c
  417fee:	(bad)  
  417fef:	(bad)  
  417ff0:	cmp    al,0x6c
  417ff2:	(bad)  
  417ff3:	(bad)  
  417ff4:	cmp    al,0x6c
  417ff6:	(bad)  
  417ff7:	(bad)  
  417ff8:	cmp    al,0x6c
  417ffa:	(bad)  
  417ffb:	(bad)  
  417ffc:	cmp    al,0x6c
  417ffe:	(bad)  
  417fff:	(bad)  
  418000:	cmp    al,0x6c
  418002:	(bad)  
  418003:	(bad)  
  418004:	cmp    al,0x6c
  418006:	(bad)  
  418007:	(bad)  
  418008:	cmp    al,0x6c
  41800a:	(bad)  
  41800b:	(bad)  
  41800c:	cmp    al,0x6c
  41800e:	(bad)  
  41800f:	(bad)  
  418010:	cmp    al,0x6c
  418012:	(bad)  
  418013:	(bad)  
  418014:	cmp    al,0x6c
  418016:	(bad)  
  418017:	(bad)  
  418018:	out    dx,al
  418019:	push   0xffffffffffffffff
  41801b:	(bad)  
  41801c:	cmp    al,0x6c
  41801e:	(bad)  
  41801f:	(bad)  
  418020:	mov    esp,0x3cffff6a
  418025:	ins    BYTE PTR es:[rdi],dx
  418026:	(bad)  
  418027:	dec    DWORD PTR [rbp+0x5fffff6a]
  41802d:	push   0xffffffffffffffff
  41802f:	push   QWORD PTR [rcx]
  418031:	push   0xffffffffffffffff
  418033:	(bad)  
  418034:	cmp    al,0x6c
  418036:	(bad)  
  418037:	dec    DWORD PTR [rdx+rbp*2]
  41803a:	(bad)  
  41803b:	(bad)  
  41803c:	cmp    al,0x6c
  41803e:	(bad)  
  41803f:	(bad)  
  418040:	cmp    al,0x6c
  418042:	(bad)  
  418043:	(bad)  
  418044:	in     al,dx
  418045:	imul   edi,edi,0xff6c3cff
  41804b:	(bad)  
  41804c:	cmp    al,0x6c
  41804e:	(bad)  
  41804f:	(bad)  
  418050:	cmp    al,0x6c
  418052:	(bad)  
  418053:	(bad)  
  418054:	cmp    al,0x6c
  418056:	(bad)  
  418057:	(bad)  
  418058:	cmp    al,0x6c
  41805a:	(bad)  
  41805b:	(bad)  
  41805c:	cmp    al,0x6c
  41805e:	(bad)  
  41805f:	(bad)  
  418060:	jg     0x4180ce
  418062:	(bad)  
  418063:	(bad)  
  418064:	cmp    al,0x6c
  418066:	(bad)  
  418067:	(bad)  
  418068:	cmp    al,0x6c
  41806a:	(bad)  
  41806b:	(bad)  
  41806c:	cmp    al,0x6c
  41806e:	(bad)  
  41806f:	(bad)  
  418070:	cmp    al,0x6c
  418072:	(bad)  
  418073:	(bad)  
  418074:	mov    esp,0x3cffff68
  418079:	ins    BYTE PTR es:[rdi],dx
  41807a:	(bad)  
  41807b:	(bad)  
  41807c:	cmp    al,0x6c
  41807e:	(bad)  
  41807f:	(bad)  
  418080:	cmp    al,0x6c
  418082:	(bad)  
  418083:	(bad)  
  418084:	cmp    al,0x6c
  418086:	(bad)  
  418087:	(bad)  
  418088:	cmp    al,0x6c
  41808a:	(bad)  
  41808b:	(bad)  
  41808c:	cmp    al,0x6c
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	cmp    al,0x6c
  418092:	(bad)  
  418093:	(bad)  
  418094:	cmp    al,0x6c
  418096:	(bad)  
  418097:	dec    DWORD PTR [rcx+rbp*2-0x1]
  41809b:	(bad)  
  41809c:	cmp    al,0x6c
  41809e:	(bad)  
  41809f:	dec    DWORD PTR [rip+0xffffffff8cffff69]        # 0xffffffff8d41800e
  4180a5:	imul   edi,edi,0xff687cff
  4180ab:	(bad)  
  4180ac:	cmp    al,0x68
  4180ae:	(bad)  
  4180af:	dec    edi
  4180b1:	addr32 (bad) 
  4180b3:	dec    DWORD PTR [rax+rbp*2]
  4180b6:	(bad)  
  4180b7:	dec    DWORD PTR [rcx+rbp*2+0x67acffff]
  4180be:	(bad)  
  4180bf:	(bad)  
  4180c0:	cmp    al,0x6c
  4180c2:	(bad)  
  4180c3:	(bad)  
  4180c4:	jl     0x41812d
  4180c6:	(bad)  
  4180c7:	dec    DWORD PTR [rdi+riz*2-0x1]
  4180cb:	dec    DWORD PTR [rdi+riz*2]
  4180ce:	(bad)  
  4180cf:	(bad)  
  4180d0:	mov    esp,0xccffff68
  4180d5:	data16 (bad) 
  4180d7:	(bad)  
  4180d8:	cmp    al,0x6c
  4180da:	(bad)  
  4180db:	(bad)  
  4180dc:	cmp    al,0x6c
  4180de:	(bad)  
  4180df:	inc    DWORD PTR [rcx-0x5300009a]
  4180e5:	addr32 (bad) 
  4180e7:	(bad)  
  4180e8:	mov    esp,0x3cffff68
  4180ed:	ins    BYTE PTR es:[rdi],dx
  4180ee:	(bad)  
  4180ef:	(bad)  
  4180f0:	cmp    al,0x6c
  4180f2:	(bad)  
  4180f3:	(bad)  
  4180f4:	mov    esp,0x3cffff68
  4180f9:	ins    BYTE PTR es:[rdi],dx
  4180fa:	(bad)  
  4180fb:	jmp    FWORD PTR [rdi+riz*2+0x6e49ffff]
  418102:	imul   bp,WORD PTR [rsi+0x69],0x7974
  418108:	add    BYTE PTR [rsi+0x61],cl
  41810b:	rex.WRX add BYTE PTR [rax],r14b
  41810e:	add    BYTE PTR [rax],al
  418110:	out    dx,al
  418111:	jo     0x418112
  418113:	jmp    QWORD PTR [rax+rsi*2]
  418116:	(bad)  
  418117:	jmp    QWORD PTR [rax+rsi*2]
  41811a:	(bad)  
  41811b:	jmp    QWORD PTR [rax+0x71]
  41811e:	(bad)  
  41811f:	push   QWORD PTR [rbx]
  418121:	jno    0x418122
  418123:	inc    DWORD PTR [rax]
	...
  41812d:	add    al,bh
  41812f:	(bad)  
  418130:	(bad)  
  418131:	rex.XB outs dx,DWORD PTR ds:[rsi]
  418133:	movsxd esp,DWORD PTR [rdi-0x4cc02d79]
  418139:	enter  0x8b60,0x28
  41813d:	mov    al,dh
  41813f:	(bad)  
  418140:	sti    
  418141:	jns    0x4180e2
  418143:	push   rax
  418144:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  418148:	add    al,0xfa
  41814a:	jge    0x4180e9
  41814c:	(bad)  
  41814d:	sub    eax,0x5a323c94
  418152:	rex.RXB push r13
  418154:	adc    eax,DWORD PTR [rbx+rdx*8+0x3f]
  418158:	add    BYTE PTR [rax],al
  41815a:	add    BYTE PTR [rax],al
  41815c:	add    BYTE PTR [rax],al
  41815e:	lock (bad) 
  418160:	add    BYTE PTR [rax],al
  418162:	add    BYTE PTR [rax],al
  418164:	add    BYTE PTR [rax],al
  418166:	and    al,0x40
  418168:	add    BYTE PTR [rax],al
  41816a:	add    BYTE PTR [rax],al
  41816c:	add    BYTE PTR [rax],al
  41816e:	or     BYTE PTR [rax+0x0],al
  418171:	add    BYTE PTR [rax],al
  418173:	add    BYTE PTR [rax],al
  418175:	add    BYTE PTR [rax+rax*2],bl
  418178:	add    BYTE PTR [rax],al
  41817a:	add    BYTE PTR [rax],al
  41817c:	add    BYTE PTR [rax],al
  41817e:	adc    al,0x40
  418180:	add    BYTE PTR [rax],al
  418182:	add    BYTE PTR [rax],al
  418184:	add    BYTE PTR [rax],al
  418186:	add    BYTE PTR [rax+0x0],al
	...
  418194:	add    BYTE PTR [rax],al
  418196:	loopne 0x4181d7
	...
  4181c0:	add    eax,0x19000000
  4181c5:	add    BYTE PTR [rax],al
  4181c7:	add    BYTE PTR [rbp+0x0],bh
	...
  418206:	lock (bad) 
  418208:	add    BYTE PTR [rax],al
  41820a:	add    BYTE PTR [rax],al
  41820c:	add    BYTE PTR [rax],al
  41820e:	and    al,0x40
  418210:	add    BYTE PTR [rax],al
  418212:	add    BYTE PTR [rax],al
  418214:	add    BYTE PTR [rax],al
  418216:	pop    rcx
  418217:	add    BYTE PTR [rax],al
  41821a:	add    BYTE PTR [rax],al
  41821c:	add    BYTE PTR [rax-0x71],al
  41821f:	add    BYTE PTR [rax],al
  418222:	add    BYTE PTR [rax],al
  418224:	add    BYTE PTR [rax+0x40c3],cl
  41822a:	add    BYTE PTR [rax],al
  41822c:	add    BYTE PTR [rdx-0x8],ch
  41822f:	add    BYTE PTR [rax],al
  418232:	add    BYTE PTR [rax],al
  418234:	add    BYTE PTR [rsi+rbp*1+0x41],0x0
  41823c:	rcl    BYTE PTR [rdx],1
  41823e:	movsxd eax,DWORD PTR [rcx+0x0]
  418241:	add    BYTE PTR [rax],al
  418243:	add    BYTE PTR [rdi+rdx*8+0x4197],al
  41824a:	add    BYTE PTR [rax],al
  41824c:	gs int 0xcd
  41824f:	add    BYTE PTR [r8],al
  418252:	add    BYTE PTR [rax],ah
  418254:	pop    rdi
  418255:	movabs al,ds:0x4876e80000004202
  41825e:	(bad)  
  41825f:	rex.X add BYTE PTR [rax],al
  418262:	add    BYTE PTR [rdx+0x426d1a94],ah
  418268:	add    BYTE PTR [rax],al
  41826a:	rex in eax,0x9c
  41826d:	xor    BYTE PTR [rdx-0x6fffffbe],ah
  418273:	(bad)  
  418274:	(bad)  
  418275:	mov    esp,0x42d6
  41827a:	xor    al,0x26
  41827c:	cmc    
  41827d:	imul   ecx,DWORD PTR [rbx+rax*2],0x0
  418281:	and    al,0x37
  418284:	jns    0x418249
  418286:	rex.B
  418287:	rex.XB add BYTE PTR [r8+0x345785d8],spl
  41828e:	jbe    0x4182d3
  418290:	add    al,cl
  418292:	rex.WRX
  418293:	ins    DWORD PTR es:[edi],dx
  418295:	shr    DWORD PTR [rbx-0x6ec2ffbd],0x60
  41829c:	in     al,0x58
  41829e:	loope  0x4182e3
  4182a0:	rex mov WORD PTR [rbp+0x15af1d78],?
  4182a7:	rex.R push rax
  4182a9:	out    dx,eax
  4182aa:	loop   0x418282
  4182ac:	in     al,0x1a
  4182ae:	rex.WXB
  4182af:	rex.R xchg edx,eax
  4182b1:	(bad)  
  4182b2:	rex.WRB (bad) 
  4182b4:	iret   
  4182b5:	lock add BYTE PTR [rax+rax*1+0x0],0x0
  4182bb:	add    BYTE PTR [rax],al
  4182bd:	add    BYTE PTR [rax],al
  4182bf:	add    BYTE PTR [rcx+rcx*4-0x2d4d6828],bh
  4182c6:	pushf  
  4182c7:	cmp    al,0x33
  4182c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4182ca:	test   al,0xd5
  4182cc:	and    esi,esi
  4182ce:	cmp    QWORD PTR [rip+0xfffffffffd44f4a7],rdi        # 0xfffffffffd86777c
  4182d5:	shld   DWORD PTR [rdx],esi,cl
  4182d8:	popf   
  4182d9:	xchg   edi,eax
  4182da:	mov    edi,cs
  4182dc:	or     BYTE PTR [rdx+0x6f43255b],bh
  4182e2:	lods   al,BYTE PTR ds:[rsi]
  4182e3:	sub    BYTE PTR fs:[rsi],al
  4182e6:	enter  0xa,0x0
	...
  4182fe:	add    BYTE PTR [rax],al
  418300:	add    BYTE PTR [rax-0x3c86c820],al
  418306:	rex.B
  418307:	rex.XB (bad) 
  418309:	outs   dx,BYTE PTR ds:[rsi]
  41830a:	add    eax,0x93b8b5b5
  41830f:	rex.RX cmc 
  418311:	stc    
  418312:	(bad)  
  418313:	jmp    0x4d79d21b
  418318:	xor    bl,BYTE PTR [rip+0x7748f930]        # 0x778a7c4e
  41831e:	(bad)  
  41831f:	pop    rdx
  418320:	cmp    al,0xbf
  418322:	jae    0x4183a3
  418324:	fisttp QWORD PTR [rdi+0x15]
  418327:	jne    0x418329
	...
  41833d:	add    BYTE PTR [rax],al
  41833f:	add    BYTE PTR [rbp+0x0],ch
  418342:	jae    0x418344
  418344:	jbe    0x418346
  418346:	movsxd eax,DWORD PTR [rax]
  418348:	jb     0x41834a
  41834a:	je     0x41834c
  41834c:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
  418351:	add    BYTE PTR [rax+rax*1+0x0],ch
  418355:	add    BYTE PTR [rdi+0x73],bl
  418358:	gs je  0x4183ba
  41835b:	outs   dx,DWORD PTR ds:[rsi]
  41835c:	jne    0x4183d2
  41835e:	jo     0x4183d5
  418360:	je     0x4183c1
  418362:	outs   dx,WORD PTR ds:[rsi]
  418364:	jb     0x4183d3
  418366:	(bad)  
  418367:	je     0x418369
  418369:	pop    rdi
  41836a:	addr32 gs je 0x4183cd
  41836e:	outs   dx,DWORD PTR ds:[rsi]
  41836f:	jne    0x4183e5
  418371:	jo     0x4183e8
  418373:	je     0x4183d4
  418375:	outs   dx,WORD PTR ds:[rsi]
  418377:	jb     0x4183e6
  418379:	(bad)  
  41837a:	je     0x41837c
  41837c:	add    BYTE PTR [rax],al
  41837e:	add    BYTE PTR [rax],al
  418380:	lock and BYTE PTR [rcx+0x0],al
	...
  418390:	add    BYTE PTR [rcx],ah
  418392:	add    BYTE PTR [r8],al
	...
  41839d:	add    BYTE PTR [rax],al
  41839f:	add    BYTE PTR [rax+0x1e],dh
  4183a2:	add    BYTE PTR [r8],al
	...
  4183ad:	add    BYTE PTR [rax],al
  4183af:	add    al,ah
  4183b1:	mov    es,WORD PTR [rcx+0x0]
	...
  4183c0:	loopne 0x418350
  4183c2:	add    BYTE PTR [r8],al
	...
  4183cd:	add    BYTE PTR [rax],al
  4183cf:	add    BYTE PTR [rax],dl
  4183d1:	jl     0x418414
	...
  4183df:	add    BYTE PTR [rax],al
  4183e1:	add    BYTE PTR [rax+0x0],al
	...
  4183f0:	shl    ch,1
  4183f2:	add    BYTE PTR [r8],al
	...
  4183fd:	add    BYTE PTR [rax],al
  4183ff:	add    al,ch
  418401:	in     eax,0x41
	...
  41840f:	add    BYTE PTR [rax],al
  418411:	out    0x41,al
	...
  41841f:	add    BYTE PTR [rax],ch
  418421:	out    0x41,al
	...
  41842f:	add    BYTE PTR [rax-0x1a],cl
  418432:	add    BYTE PTR [r8],al
	...
  41843d:	add    BYTE PTR [rax],al
  41843f:	add    BYTE PTR [rax-0x37],al
  418442:	add    BYTE PTR [r8],al
	...
  41844d:	add    BYTE PTR [rax],al
  41844f:	add    BYTE PTR [rax],ch
  418451:	xlat   BYTE PTR ds:[rbx]
  418452:	add    BYTE PTR [r8],al
	...
  41845d:	add    BYTE PTR [rax],al
  41845f:	add    BYTE PTR [rax],ah
  418461:	xlat   BYTE PTR ds:[rbx]
  418462:	add    BYTE PTR [r8],al
	...
  41846d:	add    BYTE PTR [rax],al
  41846f:	add    BYTE PTR [rax],dl
  418471:	xlat   BYTE PTR ds:[rbx]
  418472:	add    BYTE PTR [r8],al
	...
  41847d:	add    BYTE PTR [rax],al
  41847f:	add    BYTE PTR [rax],bl
  418481:	xlat   BYTE PTR ds:[rbx]
  418482:	add    BYTE PTR [r8],al
	...
  418491:	(bad)  
  418492:	add    BYTE PTR [r8],al
	...
  4184a1:	add    BYTE PTR [rdx+0x0],al
	...
  4184b0:	adc    BYTE PTR [rax],al
  4184b2:	rex.X add BYTE PTR [rax],al
	...
  4184bd:	add    BYTE PTR [rax],al
  4184bf:	add    BYTE PTR [rax],bl
  4184c1:	add    BYTE PTR [rdx+0x0],al
	...
  4184d0:	xor    BYTE PTR [rax],al
  4184d2:	rex.X add BYTE PTR [rax],al
	...
  4184dd:	add    BYTE PTR [rax],al
  4184df:	add    al,dl
  4184e1:	ret    0x41
	...
  4184f0:	adc    cl,cl
  4184f2:	add    BYTE PTR [r8],al
	...
  4184fd:	add    BYTE PTR [rax],al
  4184ff:	add    BYTE PTR [rax],dl
  418501:	mov    esi,0x40
	...
  41850e:	add    BYTE PTR [rax],al
  418510:	(bad)  
  418511:	mov    ch,0x40
	...
  41851f:	add    al,al
  418521:	enter  0x41,0x0
	...
  41852d:	add    BYTE PTR [rax],al
  41852f:	add    BYTE PTR [rax+0x18],al
  418532:	add    BYTE PTR [rax],al
	...
  418541:	jno    0x418584
	...
  41854f:	add    al,dh
  418551:	enter  0x41,0x0
	...
  41855d:	add    BYTE PTR [rax],al
  41855f:	add    al,ah
  418561:	ret    0x41
	...
  418570:	fmul   st,st(0)
  418572:	add    BYTE PTR [r8],al
	...
  41857d:	add    BYTE PTR [rax],al
  41857f:	add    ah,dl
  418581:	enter  0x41,0x0
	...
  41858d:	add    BYTE PTR [rax],al
  41858f:	add    al,dl
  418591:	enter  0x41,0x0
	...
  41859d:	add    BYTE PTR [rax],al
  41859f:	add    BYTE PTR [rax+0x41b0],al
	...
  4185ad:	add    BYTE PTR [rax],al
  4185af:	add    BYTE PTR [rax],ch
  4185b1:	and    BYTE PTR [rcx+0x0],al
	...
  4185c0:	rex.RXB
  4185c1:	rex.XB
  4185c2:	rex.XB cmp spl,BYTE PTR [r8]
  4185c5:	sub    BYTE PTR [rdi+0x4e],al
  4185c8:	push   rbp
  4185c9:	sub    DWORD PTR [rax],esp
  4185cb:	xor    al,0x2e
  4185cd:	cmp    DWORD PTR [rsi],ebp
  4185cf:	xor    al,0x0
	...
  4185dd:	add    BYTE PTR [rax],al
  4185df:	add    BYTE PTR [rdi+0x43],al
  4185e2:	rex.XB cmp spl,BYTE PTR [r8]
  4185e5:	sub    BYTE PTR [rdi+0x4e],al
  4185e8:	push   rbp
  4185e9:	sub    DWORD PTR [rax],esp
  4185eb:	xor    al,0x2e
  4185ed:	cmp    DWORD PTR [rsi],ebp
  4185ef:	xor    al,0x0
	...
  4185fd:	add    BYTE PTR [rax],al
  4185ff:	add    BYTE PTR [rdi+0x43],al
  418602:	rex.XB cmp spl,BYTE PTR [r8]
  418605:	sub    BYTE PTR [rdi+0x4e],al
  418608:	push   rbp
  418609:	sub    DWORD PTR [rax],esp
  41860b:	xor    al,0x2e
  41860d:	cmp    DWORD PTR [rsi],ebp
  41860f:	xor    al,0x0
	...
  41861d:	add    BYTE PTR [rax],al
  41861f:	add    BYTE PTR [rdi+0x43],al
  418622:	rex.XB cmp spl,BYTE PTR [r8]
  418625:	sub    BYTE PTR [rdi+0x4e],al
  418628:	push   rbp
  418629:	sub    DWORD PTR [rax],esp
  41862b:	xor    al,0x2e
  41862d:	cmp    DWORD PTR [rsi],ebp
  41862f:	xor    al,0x0
	...
  41863d:	add    BYTE PTR [rax],al
  41863f:	add    BYTE PTR [rdi+0x43],al
  418642:	rex.XB cmp spl,BYTE PTR [r8]
  418645:	sub    BYTE PTR [rdi+0x4e],al
  418648:	push   rbp
  418649:	sub    DWORD PTR [rax],esp
  41864b:	xor    al,0x2e
  41864d:	cmp    DWORD PTR [rsi],ebp
  41864f:	xor    al,0x0
	...
  41865d:	add    BYTE PTR [rax],al
  41865f:	add    BYTE PTR [rdi+0x43],al
  418662:	rex.XB cmp spl,BYTE PTR [r8]
  418665:	sub    BYTE PTR [rdi+0x4e],al
  418668:	push   rbp
  418669:	sub    DWORD PTR [rax],esp
  41866b:	xor    al,0x2e
  41866d:	cmp    DWORD PTR [rsi],ebp
  41866f:	xor    al,0x0
	...
  41867d:	add    BYTE PTR [rax],al
  41867f:	add    BYTE PTR [rdi+0x43],al
  418682:	rex.XB cmp spl,BYTE PTR [r8]
  418685:	sub    BYTE PTR [rdi+0x4e],al
  418688:	push   rbp
  418689:	sub    DWORD PTR [rax],esp
  41868b:	xor    al,0x2e
  41868d:	cmp    DWORD PTR [rsi],ebp
  41868f:	xor    al,0x0
	...
  41869d:	add    BYTE PTR [rax],al
  41869f:	add    BYTE PTR [rdi+0x43],al
  4186a2:	rex.XB cmp spl,BYTE PTR [r8]
  4186a5:	sub    BYTE PTR [rdi+0x4e],al
  4186a8:	push   rbp
  4186a9:	sub    DWORD PTR [rax],esp
  4186ab:	xor    al,0x2e
  4186ad:	cmp    DWORD PTR [rsi],ebp
  4186af:	xor    al,0x0
	...
  4186bd:	add    BYTE PTR [rax],al
  4186bf:	add    BYTE PTR [rdi+0x43],al
  4186c2:	rex.XB cmp spl,BYTE PTR [r8]
  4186c5:	sub    BYTE PTR [rdi+0x4e],al
  4186c8:	push   rbp
  4186c9:	sub    DWORD PTR [rax],esp
  4186cb:	xor    al,0x2e
  4186cd:	cmp    DWORD PTR [rsi],ebp
  4186cf:	xor    al,0x0
	...
  4186dd:	add    BYTE PTR [rax],al
  4186df:	add    BYTE PTR [rdi+0x43],al
  4186e2:	rex.XB cmp spl,BYTE PTR [r8]
  4186e5:	sub    BYTE PTR [rdi+0x4e],al
  4186e8:	push   rbp
  4186e9:	sub    DWORD PTR [rax],esp
  4186eb:	xor    al,0x2e
  4186ed:	cmp    DWORD PTR [rsi],ebp
  4186ef:	xor    al,0x0
	...
  4186fd:	add    BYTE PTR [rax],al
  4186ff:	add    BYTE PTR [rdi+0x43],al
  418702:	rex.XB cmp spl,BYTE PTR [r8]
  418705:	sub    BYTE PTR [rdi+0x4e],al
  418708:	push   rbp
  418709:	sub    DWORD PTR [rax],esp
  41870b:	xor    al,0x2e
  41870d:	cmp    DWORD PTR [rsi],ebp
  41870f:	xor    al,0x0
	...
  41871d:	add    BYTE PTR [rax],al
  41871f:	add    BYTE PTR [rdi+0x43],al
  418722:	rex.XB cmp spl,BYTE PTR [r8]
  418725:	sub    BYTE PTR [rdi+0x4e],al
  418728:	push   rbp
  418729:	sub    DWORD PTR [rax],esp
  41872b:	xor    al,0x2e
  41872d:	cmp    DWORD PTR [rsi],ebp
  41872f:	xor    al,0x0
	...
  41873d:	add    BYTE PTR [rax],al
  41873f:	add    BYTE PTR [rdi+0x43],al
  418742:	rex.XB cmp spl,BYTE PTR [r8]
  418745:	sub    BYTE PTR [rdi+0x4e],al
  418748:	push   rbp
  418749:	sub    DWORD PTR [rax],esp
  41874b:	xor    al,0x2e
  41874d:	cmp    DWORD PTR [rsi],ebp
  41874f:	xor    al,0x0
	...
  41875d:	add    BYTE PTR [rax],al
  41875f:	add    BYTE PTR [rdi+0x43],al
  418762:	rex.XB cmp spl,BYTE PTR [r8]
  418765:	sub    BYTE PTR [rdi+0x4e],al
  418768:	push   rbp
  418769:	sub    DWORD PTR [rax],esp
  41876b:	xor    al,0x2e
  41876d:	cmp    DWORD PTR [rsi],ebp
  41876f:	xor    al,0x0
	...
  41877d:	add    BYTE PTR [rax],al
  41877f:	add    BYTE PTR [rdi+0x43],al
  418782:	rex.XB cmp spl,BYTE PTR [r8]
  418785:	sub    BYTE PTR [rdi+0x4e],al
  418788:	push   rbp
  418789:	sub    DWORD PTR [rax],esp
  41878b:	xor    al,0x2e
  41878d:	cmp    DWORD PTR [rsi],ebp
  41878f:	xor    al,0x0
	...
  41879d:	add    BYTE PTR [rax],al
  41879f:	add    BYTE PTR [rdi+0x43],al
  4187a2:	rex.XB cmp spl,BYTE PTR [r8]
  4187a5:	sub    BYTE PTR [rdi+0x4e],al
  4187a8:	push   rbp
  4187a9:	sub    DWORD PTR [rax],esp
  4187ab:	xor    al,0x2e
  4187ad:	cmp    DWORD PTR [rsi],ebp
  4187af:	xor    al,0x0
	...
  4187bd:	add    BYTE PTR [rax],al
  4187bf:	add    BYTE PTR [rdi+0x43],al
  4187c2:	rex.XB cmp spl,BYTE PTR [r8]
  4187c5:	sub    BYTE PTR [rdi+0x4e],al
  4187c8:	push   rbp
  4187c9:	sub    DWORD PTR [rax],esp
  4187cb:	xor    al,0x2e
  4187cd:	cmp    DWORD PTR [rsi],ebp
  4187cf:	xor    al,0x0
	...
  4187dd:	add    BYTE PTR [rax],al
  4187df:	add    BYTE PTR [rdi+0x43],al
  4187e2:	rex.XB cmp spl,BYTE PTR [r8]
  4187e5:	sub    BYTE PTR [rdi+0x4e],al
  4187e8:	push   rbp
  4187e9:	sub    DWORD PTR [rax],esp
  4187eb:	xor    al,0x2e
  4187ed:	cmp    DWORD PTR [rsi],ebp
  4187ef:	xor    al,0x0
	...
  4187fd:	add    BYTE PTR [rax],al
  4187ff:	add    BYTE PTR [rdi+0x43],al
  418802:	rex.XB cmp spl,BYTE PTR [r8]
  418805:	sub    BYTE PTR [rdi+0x4e],al
  418808:	push   rbp
  418809:	sub    DWORD PTR [rax],esp
  41880b:	xor    al,0x2e
  41880d:	cmp    DWORD PTR [rsi],ebp
  41880f:	xor    al,0x0
	...
  41881d:	add    BYTE PTR [rax],al
  41881f:	add    BYTE PTR [rdi+0x43],al
  418822:	rex.XB cmp spl,BYTE PTR [r8]
  418825:	sub    BYTE PTR [rdi+0x4e],al
  418828:	push   rbp
  418829:	sub    DWORD PTR [rax],esp
  41882b:	xor    al,0x2e
  41882d:	cmp    DWORD PTR [rsi],ebp
  41882f:	xor    al,0x0
	...
  41883d:	add    BYTE PTR [rax],al
  41883f:	add    BYTE PTR [rdi+0x43],al
  418842:	rex.XB cmp spl,BYTE PTR [r8]
  418845:	sub    BYTE PTR [rdi+0x4e],al
  418848:	push   rbp
  418849:	sub    DWORD PTR [rax],esp
  41884b:	xor    al,0x2e
  41884d:	cmp    DWORD PTR [rsi],ebp
  41884f:	xor    al,0x0
	...
  41885d:	add    BYTE PTR [rax],al
  41885f:	add    BYTE PTR [rdi+0x43],al
  418862:	rex.XB cmp spl,BYTE PTR [r8]
  418865:	sub    BYTE PTR [rdi+0x4e],al
  418868:	push   rbp
  418869:	sub    DWORD PTR [rax],esp
  41886b:	xor    al,0x2e
  41886d:	cmp    DWORD PTR [rsi],ebp
  41886f:	xor    al,0x0
	...
  41887d:	add    BYTE PTR [rax],al
  41887f:	add    BYTE PTR [rdi+0x43],al
  418882:	rex.XB cmp spl,BYTE PTR [r8]
  418885:	sub    BYTE PTR [rdi+0x4e],al
  418888:	push   rbp
  418889:	sub    DWORD PTR [rax],esp
  41888b:	xor    al,0x2e
  41888d:	cmp    DWORD PTR [rsi],ebp
  41888f:	xor    al,0x0
	...
  41889d:	add    BYTE PTR [rax],al
  41889f:	add    BYTE PTR [rdi+0x43],al
  4188a2:	rex.XB cmp spl,BYTE PTR [r8]
  4188a5:	sub    BYTE PTR [rdi+0x4e],al
  4188a8:	push   rbp
  4188a9:	sub    DWORD PTR [rax],esp
  4188ab:	xor    al,0x2e
  4188ad:	cmp    DWORD PTR [rsi],ebp
  4188af:	xor    al,0x0
	...
  4188bd:	add    BYTE PTR [rax],al
  4188bf:	add    BYTE PTR [rdi+0x43],al
  4188c2:	rex.XB cmp spl,BYTE PTR [r8]
  4188c5:	sub    BYTE PTR [rdi+0x4e],al
  4188c8:	push   rbp
  4188c9:	sub    DWORD PTR [rax],esp
  4188cb:	xor    al,0x2e
  4188cd:	cmp    DWORD PTR [rsi],ebp
  4188cf:	xor    al,0x0
	...
  4188dd:	add    BYTE PTR [rax],al
  4188df:	add    BYTE PTR [rdi+0x43],al
  4188e2:	rex.XB cmp spl,BYTE PTR [r8]
  4188e5:	sub    BYTE PTR [rdi+0x4e],al
  4188e8:	push   rbp
  4188e9:	sub    DWORD PTR [rax],esp
  4188eb:	xor    al,0x2e
  4188ed:	cmp    DWORD PTR [rsi],ebp
  4188ef:	xor    al,0x0
	...
  4188fd:	add    BYTE PTR [rax],al
  4188ff:	add    BYTE PTR [rdi+0x43],al
  418902:	rex.XB cmp spl,BYTE PTR [r8]
  418905:	sub    BYTE PTR [rdi+0x4e],al
  418908:	push   rbp
  418909:	sub    DWORD PTR [rax],esp
  41890b:	xor    al,0x2e
  41890d:	cmp    DWORD PTR [rsi],ebp
  41890f:	xor    al,0x0
	...
  41891d:	add    BYTE PTR [rax],al
  41891f:	add    BYTE PTR [rdi+0x43],al
  418922:	rex.XB cmp spl,BYTE PTR [r8]
  418925:	sub    BYTE PTR [rdi+0x4e],al
  418928:	push   rbp
  418929:	sub    DWORD PTR [rax],esp
  41892b:	xor    al,0x2e
  41892d:	cmp    DWORD PTR [rsi],ebp
  41892f:	xor    al,0x0
	...
  41893d:	add    BYTE PTR [rax],al
  41893f:	add    BYTE PTR [rdi+0x43],al
  418942:	rex.XB cmp spl,BYTE PTR [r8]
  418945:	sub    BYTE PTR [rdi+0x4e],al
  418948:	push   rbp
  418949:	sub    DWORD PTR [rax],esp
  41894b:	xor    al,0x2e
  41894d:	cmp    DWORD PTR [rsi],ebp
  41894f:	xor    al,0x0
	...
  41895d:	add    BYTE PTR [rax],al
  41895f:	add    BYTE PTR [rdi+0x43],al
  418962:	rex.XB cmp spl,BYTE PTR [r8]
  418965:	sub    BYTE PTR [rdi+0x4e],al
  418968:	push   rbp
  418969:	sub    DWORD PTR [rax],esp
  41896b:	xor    al,0x2e
  41896d:	cmp    DWORD PTR [rsi],ebp
  41896f:	xor    al,0x0
	...
  41897d:	add    BYTE PTR [rax],al
  41897f:	add    BYTE PTR [rdi+0x43],al
  418982:	rex.XB cmp spl,BYTE PTR [r8]
  418985:	sub    BYTE PTR [rdi+0x4e],al
  418988:	push   rbp
  418989:	sub    DWORD PTR [rax],esp
  41898b:	xor    al,0x2e
  41898d:	cmp    DWORD PTR [rsi],ebp
  41898f:	xor    al,0x0
	...
  41899d:	add    BYTE PTR [rax],al
  41899f:	add    BYTE PTR [rdi+0x43],al
  4189a2:	rex.XB cmp spl,BYTE PTR [r8]
  4189a5:	sub    BYTE PTR [rdi+0x4e],al
  4189a8:	push   rbp
  4189a9:	sub    DWORD PTR [rax],esp
  4189ab:	xor    al,0x2e
  4189ad:	cmp    DWORD PTR [rsi],ebp
  4189af:	xor    al,0x0
	...
  4189bd:	add    BYTE PTR [rax],al
  4189bf:	add    BYTE PTR [rdi+0x43],al
  4189c2:	rex.XB cmp spl,BYTE PTR [r8]
  4189c5:	sub    BYTE PTR [rdi+0x4e],al
  4189c8:	push   rbp
  4189c9:	sub    DWORD PTR [rax],esp
  4189cb:	xor    al,0x2e
  4189cd:	cmp    DWORD PTR [rsi],ebp
  4189cf:	xor    al,0x0
	...
  4189dd:	add    BYTE PTR [rax],al
  4189df:	add    BYTE PTR [rdi+0x43],al
  4189e2:	rex.XB cmp spl,BYTE PTR [r8]
  4189e5:	sub    BYTE PTR [rdi+0x4e],al
  4189e8:	push   rbp
  4189e9:	sub    DWORD PTR [rax],esp
  4189eb:	xor    al,0x2e
  4189ed:	cmp    DWORD PTR [rsi],ebp
  4189ef:	xor    al,0x0
	...
  4189fd:	add    BYTE PTR [rax],al
  4189ff:	add    BYTE PTR [rdi+0x43],al
  418a02:	rex.XB cmp spl,BYTE PTR [r8]
  418a05:	sub    BYTE PTR [rdi+0x4e],al
  418a08:	push   rbp
  418a09:	sub    DWORD PTR [rax],esp
  418a0b:	xor    al,0x2e
  418a0d:	cmp    DWORD PTR [rsi],ebp
  418a0f:	xor    al,0x0
	...
  418a1d:	add    BYTE PTR [rax],al
  418a1f:	add    BYTE PTR [rdi+0x43],al
  418a22:	rex.XB cmp spl,BYTE PTR [r8]
  418a25:	sub    BYTE PTR [rdi+0x4e],al
  418a28:	push   rbp
  418a29:	sub    DWORD PTR [rax],esp
  418a2b:	xor    al,0x2e
  418a2d:	cmp    DWORD PTR [rsi],ebp
  418a2f:	xor    al,0x0
	...
  418a3d:	add    BYTE PTR [rax],al
  418a3f:	add    BYTE PTR [rdi+0x43],al
  418a42:	rex.XB cmp spl,BYTE PTR [r8]
  418a45:	sub    BYTE PTR [rdi+0x4e],al
  418a48:	push   rbp
  418a49:	sub    DWORD PTR [rax],esp
  418a4b:	xor    al,0x2e
  418a4d:	cmp    DWORD PTR [rsi],ebp
  418a4f:	xor    al,0x0
	...
  418a5d:	add    BYTE PTR [rax],al
  418a5f:	add    BYTE PTR [rdi+0x43],al
  418a62:	rex.XB cmp spl,BYTE PTR [r8]
  418a65:	sub    BYTE PTR [rdi+0x4e],al
  418a68:	push   rbp
  418a69:	sub    DWORD PTR [rax],esp
  418a6b:	xor    al,0x2e
  418a6d:	cmp    DWORD PTR [rsi],ebp
  418a6f:	xor    al,0x0
	...
  418a7d:	add    BYTE PTR [rax],al
  418a7f:	add    BYTE PTR [rdi+0x43],al
  418a82:	rex.XB cmp spl,BYTE PTR [r8]
  418a85:	sub    BYTE PTR [rdi+0x4e],al
  418a88:	push   rbp
  418a89:	sub    DWORD PTR [rax],esp
  418a8b:	xor    al,0x2e
  418a8d:	cmp    DWORD PTR [rsi],ebp
  418a8f:	xor    al,0x0
	...
  418a9d:	add    BYTE PTR [rax],al
  418a9f:	add    BYTE PTR [rdi+0x43],al
  418aa2:	rex.XB cmp spl,BYTE PTR [r8]
  418aa5:	sub    BYTE PTR [rdi+0x4e],al
  418aa8:	push   rbp
  418aa9:	sub    DWORD PTR [rax],esp
  418aab:	xor    al,0x2e
  418aad:	cmp    DWORD PTR [rsi],ebp
  418aaf:	xor    al,0x0
	...
  418abd:	add    BYTE PTR [rax],al
  418abf:	add    BYTE PTR [rdi+0x43],al
  418ac2:	rex.XB cmp spl,BYTE PTR [r8]
  418ac5:	sub    BYTE PTR [rdi+0x4e],al
  418ac8:	push   rbp
  418ac9:	sub    DWORD PTR [rax],esp
  418acb:	xor    al,0x2e
  418acd:	cmp    DWORD PTR [rsi],ebp
  418acf:	xor    al,0x0
	...
  418add:	add    BYTE PTR [rax],al
  418adf:	add    BYTE PTR [rdi+0x43],al
  418ae2:	rex.XB cmp spl,BYTE PTR [r8]
  418ae5:	sub    BYTE PTR [rdi+0x4e],al
  418ae8:	push   rbp
  418ae9:	sub    DWORD PTR [rax],esp
  418aeb:	xor    al,0x2e
  418aed:	cmp    DWORD PTR [rsi],ebp
  418aef:	xor    al,0x0
	...
  418afd:	add    BYTE PTR [rax],al
  418aff:	add    BYTE PTR [rdi+0x43],al
  418b02:	rex.XB cmp spl,BYTE PTR [r8]
  418b05:	sub    BYTE PTR [rdi+0x4e],al
  418b08:	push   rbp
  418b09:	sub    DWORD PTR [rax],esp
  418b0b:	xor    al,0x2e
  418b0d:	cmp    DWORD PTR [rsi],ebp
  418b0f:	xor    al,0x0
	...
  418b1d:	add    BYTE PTR [rax],al
  418b1f:	add    BYTE PTR [rdi+0x43],al
  418b22:	rex.XB cmp spl,BYTE PTR [r8]
  418b25:	sub    BYTE PTR [rdi+0x4e],al
  418b28:	push   rbp
  418b29:	sub    DWORD PTR [rax],esp
  418b2b:	xor    al,0x2e
  418b2d:	cmp    DWORD PTR [rsi],ebp
  418b2f:	xor    al,0x0
	...
  418b3d:	add    BYTE PTR [rax],al
  418b3f:	add    BYTE PTR [rdi+0x43],al
  418b42:	rex.XB cmp spl,BYTE PTR [r8]
  418b45:	sub    BYTE PTR [rdi+0x4e],al
  418b48:	push   rbp
  418b49:	sub    DWORD PTR [rax],esp
  418b4b:	xor    al,0x2e
  418b4d:	cmp    DWORD PTR [rsi],ebp
  418b4f:	xor    al,0x0
	...
  418b5d:	add    BYTE PTR [rax],al
  418b5f:	add    BYTE PTR [rdi+0x43],al
  418b62:	rex.XB cmp spl,BYTE PTR [r8]
  418b65:	sub    BYTE PTR [rdi+0x4e],al
  418b68:	push   rbp
  418b69:	sub    DWORD PTR [rax],esp
  418b6b:	xor    al,0x2e
  418b6d:	cmp    DWORD PTR [rsi],ebp
  418b6f:	xor    al,0x0
	...
  418b7d:	add    BYTE PTR [rax],al
  418b7f:	add    BYTE PTR [rdi+0x43],al
  418b82:	rex.XB cmp spl,BYTE PTR [r8]
  418b85:	sub    BYTE PTR [rdi+0x4e],al
  418b88:	push   rbp
  418b89:	sub    DWORD PTR [rax],esp
  418b8b:	xor    al,0x2e
  418b8d:	cmp    DWORD PTR [rsi],ebp
  418b8f:	xor    al,0x0
	...
  418b9d:	add    BYTE PTR [rax],al
  418b9f:	add    BYTE PTR [rdi+0x43],al
  418ba2:	rex.XB cmp spl,BYTE PTR [r8]
  418ba5:	sub    BYTE PTR [rdi+0x4e],al
  418ba8:	push   rbp
  418ba9:	sub    DWORD PTR [rax],esp
  418bab:	xor    al,0x2e
  418bad:	cmp    DWORD PTR [rsi],ebp
  418baf:	xor    al,0x0
	...
  418bbd:	add    BYTE PTR [rax],al
  418bbf:	add    BYTE PTR [rdi+0x43],al
  418bc2:	rex.XB cmp spl,BYTE PTR [r8]
  418bc5:	sub    BYTE PTR [rdi+0x4e],al
  418bc8:	push   rbp
  418bc9:	sub    DWORD PTR [rax],esp
  418bcb:	xor    al,0x2e
  418bcd:	cmp    DWORD PTR [rsi],ebp
  418bcf:	xor    al,0x0
	...
  418bdd:	add    BYTE PTR [rax],al
  418bdf:	add    BYTE PTR [rdi+0x43],al
  418be2:	rex.XB cmp spl,BYTE PTR [r8]
  418be5:	sub    BYTE PTR [rdi+0x4e],al
  418be8:	push   rbp
  418be9:	sub    DWORD PTR [rax],esp
  418beb:	xor    al,0x2e
  418bed:	cmp    DWORD PTR [rsi],ebp
  418bef:	xor    al,0x0
	...
  418bfd:	add    BYTE PTR [rax],al
  418bff:	add    BYTE PTR [rdi+0x43],al
  418c02:	rex.XB cmp spl,BYTE PTR [r8]
  418c05:	sub    BYTE PTR [rdi+0x4e],al
  418c08:	push   rbp
  418c09:	sub    DWORD PTR [rax],esp
  418c0b:	xor    al,0x2e
  418c0d:	cmp    DWORD PTR [rsi],ebp
  418c0f:	xor    al,0x0
	...
  418c1d:	add    BYTE PTR [rax],al
  418c1f:	add    BYTE PTR [rdi+0x43],al
  418c22:	rex.XB cmp spl,BYTE PTR [r8]
  418c25:	sub    BYTE PTR [rdi+0x4e],al
  418c28:	push   rbp
  418c29:	sub    DWORD PTR [rax],esp
  418c2b:	xor    al,0x2e
  418c2d:	cmp    DWORD PTR [rsi],ebp
  418c2f:	xor    al,0x0
	...
  418c3d:	add    BYTE PTR [rax],al
  418c3f:	add    BYTE PTR [rdi+0x43],al
  418c42:	rex.XB cmp spl,BYTE PTR [r8]
  418c45:	sub    BYTE PTR [rdi+0x4e],al
  418c48:	push   rbp
  418c49:	sub    DWORD PTR [rax],esp
  418c4b:	xor    al,0x2e
  418c4d:	cmp    DWORD PTR [rsi],ebp
  418c4f:	xor    al,0x0
	...
  418c5d:	add    BYTE PTR [rax],al
  418c5f:	add    BYTE PTR [rdi+0x43],al
  418c62:	rex.XB cmp spl,BYTE PTR [r8]
  418c65:	sub    BYTE PTR [rdi+0x4e],al
  418c68:	push   rbp
  418c69:	sub    DWORD PTR [rax],esp
  418c6b:	xor    al,0x2e
  418c6d:	cmp    DWORD PTR [rsi],ebp
  418c6f:	xor    al,0x0
	...
  418c7d:	add    BYTE PTR [rax],al
  418c7f:	add    BYTE PTR [rdi+0x43],al
  418c82:	rex.XB cmp spl,BYTE PTR [r8]
  418c85:	sub    BYTE PTR [rdi+0x4e],al
  418c88:	push   rbp
  418c89:	sub    DWORD PTR [rax],esp
  418c8b:	xor    al,0x2e
  418c8d:	cmp    DWORD PTR [rsi],ebp
  418c8f:	xor    al,0x0
	...
  418c9d:	add    BYTE PTR [rax],al
  418c9f:	add    BYTE PTR [rdi+0x43],al
  418ca2:	rex.XB cmp spl,BYTE PTR [r8]
  418ca5:	sub    BYTE PTR [rdi+0x4e],al
  418ca8:	push   rbp
  418ca9:	sub    DWORD PTR [rax],esp
  418cab:	xor    al,0x2e
  418cad:	cmp    DWORD PTR [rsi],ebp
  418caf:	xor    al,0x0
	...
  418cbd:	add    BYTE PTR [rax],al
  418cbf:	add    BYTE PTR [rdi+0x43],al
  418cc2:	rex.XB cmp spl,BYTE PTR [r8]
  418cc5:	sub    BYTE PTR [rdi+0x4e],al
  418cc8:	push   rbp
  418cc9:	sub    DWORD PTR [rax],esp
  418ccb:	xor    al,0x2e
  418ccd:	cmp    DWORD PTR [rsi],ebp
  418ccf:	xor    al,0x0
	...
  418cdd:	add    BYTE PTR [rax],al
  418cdf:	add    BYTE PTR [rdi+0x43],al
  418ce2:	rex.XB cmp spl,BYTE PTR [r8]
  418ce5:	sub    BYTE PTR [rdi+0x4e],al
  418ce8:	push   rbp
  418ce9:	sub    DWORD PTR [rax],esp
  418ceb:	xor    al,0x2e
  418ced:	cmp    DWORD PTR [rsi],ebp
  418cef:	xor    al,0x0
	...
  418cfd:	add    BYTE PTR [rax],al
  418cff:	add    BYTE PTR [rdi+0x43],al
  418d02:	rex.XB cmp spl,BYTE PTR [r8]
  418d05:	sub    BYTE PTR [rdi+0x4e],al
  418d08:	push   rbp
  418d09:	sub    DWORD PTR [rax],esp
  418d0b:	xor    al,0x2e
  418d0d:	cmp    DWORD PTR [rsi],ebp
  418d0f:	xor    al,0x0
	...
  418d1d:	add    BYTE PTR [rax],al
  418d1f:	add    BYTE PTR [rdi+0x43],al
  418d22:	rex.XB cmp spl,BYTE PTR [r8]
  418d25:	sub    BYTE PTR [rdi+0x4e],al
  418d28:	push   rbp
  418d29:	sub    DWORD PTR [rax],esp
  418d2b:	xor    al,0x2e
  418d2d:	cmp    DWORD PTR [rsi],ebp
  418d2f:	xor    al,0x0
	...
  418d3d:	add    BYTE PTR [rax],al
  418d3f:	add    BYTE PTR [rdi+0x43],al
  418d42:	rex.XB cmp spl,BYTE PTR [r8]
  418d45:	sub    BYTE PTR [rdi+0x4e],al
  418d48:	push   rbp
  418d49:	sub    DWORD PTR [rax],esp
  418d4b:	xor    al,0x2e
  418d4d:	cmp    DWORD PTR [rsi],ebp
  418d4f:	xor    al,0x0
	...
  418d5d:	add    BYTE PTR [rax],al
  418d5f:	add    BYTE PTR [rdi+0x43],al
  418d62:	rex.XB cmp spl,BYTE PTR [r8]
  418d65:	sub    BYTE PTR [rdi+0x4e],al
  418d68:	push   rbp
  418d69:	sub    DWORD PTR [rax],esp
  418d6b:	xor    al,0x2e
  418d6d:	cmp    DWORD PTR [rsi],ebp
  418d6f:	xor    al,0x0
	...
  418d7d:	add    BYTE PTR [rax],al
  418d7f:	add    BYTE PTR [rdi+0x43],al
  418d82:	rex.XB cmp spl,BYTE PTR [r8]
  418d85:	sub    BYTE PTR [rdi+0x4e],al
  418d88:	push   rbp
  418d89:	sub    DWORD PTR [rax],esp
  418d8b:	xor    al,0x2e
  418d8d:	cmp    DWORD PTR [rsi],ebp
  418d8f:	xor    al,0x0
	...
  418d9d:	add    BYTE PTR [rax],al
  418d9f:	add    BYTE PTR [rdi+0x43],al
  418da2:	rex.XB cmp spl,BYTE PTR [r8]
  418da5:	sub    BYTE PTR [rdi+0x4e],al
  418da8:	push   rbp
  418da9:	sub    DWORD PTR [rax],esp
  418dab:	xor    al,0x2e
  418dad:	cmp    DWORD PTR [rsi],ebp
  418daf:	xor    al,0x0
	...
  418dbd:	add    BYTE PTR [rax],al
  418dbf:	add    BYTE PTR [rdi+0x43],al
  418dc2:	rex.XB cmp spl,BYTE PTR [r8]
  418dc5:	sub    BYTE PTR [rdi+0x4e],al
  418dc8:	push   rbp
  418dc9:	sub    DWORD PTR [rax],esp
  418dcb:	xor    al,0x2e
  418dcd:	cmp    DWORD PTR [rsi],ebp
  418dcf:	xor    al,0x0
	...
  418ddd:	add    BYTE PTR [rax],al
  418ddf:	add    BYTE PTR [rdi+0x43],al
  418de2:	rex.XB cmp spl,BYTE PTR [r8]
  418de5:	sub    BYTE PTR [rdi+0x4e],al
  418de8:	push   rbp
  418de9:	sub    DWORD PTR [rax],esp
  418deb:	xor    al,0x2e
  418ded:	cmp    DWORD PTR [rsi],ebp
  418def:	xor    al,0x0
	...
  418dfd:	add    BYTE PTR [rax],al
  418dff:	add    BYTE PTR [rdi+0x43],al
  418e02:	rex.XB cmp spl,BYTE PTR [r8]
  418e05:	sub    BYTE PTR [rdi+0x4e],al
  418e08:	push   rbp
  418e09:	sub    DWORD PTR [rax],esp
  418e0b:	xor    al,0x2e
  418e0d:	cmp    DWORD PTR [rsi],ebp
  418e0f:	xor    al,0x0
	...
  418e1d:	add    BYTE PTR [rax],al
  418e1f:	add    BYTE PTR [rdi+0x43],al
  418e22:	rex.XB cmp spl,BYTE PTR [r8]
  418e25:	sub    BYTE PTR [rdi+0x4e],al
  418e28:	push   rbp
  418e29:	sub    DWORD PTR [rax],esp
  418e2b:	xor    al,0x2e
  418e2d:	cmp    DWORD PTR [rsi],ebp
  418e2f:	xor    al,0x0
	...
  418e3d:	add    BYTE PTR [rax],al
  418e3f:	add    BYTE PTR [rdi+0x43],al
  418e42:	rex.XB cmp spl,BYTE PTR [r8]
  418e45:	sub    BYTE PTR [rdi+0x4e],al
  418e48:	push   rbp
  418e49:	sub    DWORD PTR [rax],esp
  418e4b:	xor    al,0x2e
  418e4d:	cmp    DWORD PTR [rsi],ebp
  418e4f:	xor    al,0x0
	...
  418e5d:	add    BYTE PTR [rax],al
  418e5f:	add    BYTE PTR [rdi+0x43],al
  418e62:	rex.XB cmp spl,BYTE PTR [r8]
  418e65:	sub    BYTE PTR [rdi+0x4e],al
  418e68:	push   rbp
  418e69:	sub    DWORD PTR [rax],esp
  418e6b:	xor    al,0x2e
  418e6d:	cmp    DWORD PTR [rsi],ebp
  418e6f:	xor    al,0x0
	...
  418e7d:	add    BYTE PTR [rax],al
  418e7f:	add    BYTE PTR [rdi+0x43],al
  418e82:	rex.XB cmp spl,BYTE PTR [r8]
  418e85:	sub    BYTE PTR [rdi+0x4e],al
  418e88:	push   rbp
  418e89:	sub    DWORD PTR [rax],esp
  418e8b:	xor    al,0x2e
  418e8d:	cmp    DWORD PTR [rsi],ebp
  418e8f:	xor    al,0x0
	...
  418e9d:	add    BYTE PTR [rax],al
  418e9f:	add    BYTE PTR [rdi+0x43],al
  418ea2:	rex.XB cmp spl,BYTE PTR [r8]
  418ea5:	sub    BYTE PTR [rdi+0x4e],al
  418ea8:	push   rbp
  418ea9:	sub    DWORD PTR [rax],esp
  418eab:	xor    al,0x2e
  418ead:	cmp    DWORD PTR [rsi],ebp
  418eaf:	xor    al,0x0
	...
  418ebd:	add    BYTE PTR [rax],al
  418ebf:	add    BYTE PTR [rdi+0x43],al
  418ec2:	rex.XB cmp spl,BYTE PTR [r8]
  418ec5:	sub    BYTE PTR [rdi+0x4e],al
  418ec8:	push   rbp
  418ec9:	sub    DWORD PTR [rax],esp
  418ecb:	xor    al,0x2e
  418ecd:	cmp    DWORD PTR [rsi],ebp
  418ecf:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000419000 <.pdata>:
  419000:	add    BYTE PTR [rax],dl
  419002:	add    BYTE PTR [rax],al
  419004:	add    DWORD PTR [rax],edx
  419006:	add    BYTE PTR [rax],al
  419008:	add    BYTE PTR [rax+0x10100001],ah
  41900e:	add    BYTE PTR [rax],al
  419010:	push   rcx
  419011:	adc    DWORD PTR [rax],eax
  419013:	add    BYTE PTR [rax+riz*4],al
  419016:	add    DWORD PTR [rax],eax
  419018:	(bad)  
  419019:	adc    DWORD PTR [rax],eax
  41901b:	add    BYTE PTR [rsi+0xc000011],ch
  419021:	movabs al,ds:0x14ce000011b00001
  41902a:	add    BYTE PTR [rax],al
  41902c:	adc    al,0xa0
  41902e:	add    DWORD PTR [rax],eax
  419030:	rcl    BYTE PTR [rax+rax*1],1
  419033:	add    dl,dh
  419035:	adc    al,0x0
  419037:	add    BYTE PTR [rax],ch
  419039:	movabs al,ds:0x1522000015000001
  419042:	add    BYTE PTR [rax],al
  419044:	rex.W movabs al,ds:0x15dd000015300001
  41904e:	add    BYTE PTR [rax],al
  419050:	push   0xffffffffe00001a0
  419055:	adc    eax,0x16170000
  41905a:	add    BYTE PTR [rax],al
  41905c:	je     0x418ffe
  41905e:	add    DWORD PTR [rax],eax
  419060:	and    BYTE PTR [rsi],dl
  419062:	add    BYTE PTR [rax],al
  419064:	sub    edx,DWORD PTR [rsi]
  419066:	add    BYTE PTR [rax],al
  419068:	and    BYTE PTR [rax+0x16300001],0x0
  41906f:	add    BYTE PTR [rsi-0x7bffffea],ah
  419075:	movabs al,ds:0x16cc000016b00001
  41907e:	add    BYTE PTR [rax],al
  419080:	nop
  419081:	movabs al,ds:0x175f000016d00001
  41908a:	add    BYTE PTR [rax],al
  41908c:	cwde   
  41908d:	movabs al,ds:0x183a000017600001
  419096:	add    BYTE PTR [rax],al
  419098:	mov    esp,0x400001a0
  41909d:	sbb    BYTE PTR [rax],al
  41909f:	add    cl,dh
  4190a1:	sbb    BYTE PTR [rax],al
  4190a3:	add    ah,al
  4190a5:	movabs al,ds:0x19da000019000001
  4190ae:	add    BYTE PTR [rax],al
  4190b0:	shl    BYTE PTR [rax+0x19e00001],1
  4190b6:	add    BYTE PTR [rax],al
  4190b8:	out    0x19,eax
  4190ba:	add    BYTE PTR [rax],al
  4190bc:	fsub   QWORD PTR [rax+0x19f00001]
  4190c2:	add    BYTE PTR [rax],al
  4190c4:	cli    
  4190c5:	sbb    DWORD PTR [rax],eax
  4190c7:	add    al,ah
  4190c9:	movabs al,ds:0x1a9300001a000001
  4190d2:	add    BYTE PTR [rax],al
  4190d4:	in     al,0xa0
  4190d6:	add    DWORD PTR [rax],eax
  4190d8:	movabs al,ds:0xf00000251900001a
  4190e1:	movabs al,ds:0x2594000025200001
  4190ea:	add    BYTE PTR [rax],al
  4190ec:	or     BYTE PTR [rcx+0x25a00001],ah
  4190f2:	add    BYTE PTR [rax],al
  4190f4:	sub    BYTE PTR [rax],ch
  4190f6:	add    BYTE PTR [rax],al
  4190f8:	adc    al,0xa1
  4190fa:	add    DWORD PTR [rax],eax
  4190fc:	xor    BYTE PTR [rax],ch
  4190fe:	add    BYTE PTR [rax],al
  419100:	push   0x28
  419102:	add    BYTE PTR [rax],al
  419104:	sub    BYTE PTR [rcx+0x28700001],ah
  41910a:	add    BYTE PTR [rax],al
  41910c:	in     al,0x2e
  41910e:	add    BYTE PTR [rax],al
  419110:	xor    al,0xa1
  419112:	add    DWORD PTR [rax],eax
  419114:	lock add BYTE PTR cs:[rax],al
  419118:	sbb    ebp,DWORD PTR [rdi]
  41911a:	add    BYTE PTR [rax],al
  41911c:	movabs rax,ds:0x2f4600002f200001
  419126:	add    BYTE PTR [rax],al
  419128:	push   rax
  419129:	movabs eax,ds:0x2f7a00002f500001
  419132:	add    BYTE PTR [rax],al
  419134:	pop    rax
  419135:	movabs eax,ds:0x2fc300002f800001
  41913e:	add    BYTE PTR [rax],al
  419140:	(bad)  
  419141:	movabs eax,ds:0x2ff800002fd00001
  41914a:	add    BYTE PTR [rax],al
  41914c:	push   0x1a1
  419151:	xor    BYTE PTR [rax],al
  419153:	add    BYTE PTR [rip+0x74000030],ch        # 0x74419189
  419159:	movabs eax,ds:0x306d000030300001
  419162:	add    BYTE PTR [rax],al
  419164:	jl     0x419107
  419166:	add    DWORD PTR [rax],eax
  419168:	jo     0x41919a
  41916a:	add    BYTE PTR [rax],al
  41916c:	movabs ds:0xb00001a184000030,eax
  419175:	xor    BYTE PTR [rax],al
  419177:	add    cl,ah
  419179:	xor    BYTE PTR [rax],al
  41917b:	add    BYTE PTR [rcx+riz*4+0x30f00001],cl
  419182:	add    BYTE PTR [rax],al
  419184:	and    DWORD PTR [rcx],esi
  419186:	add    BYTE PTR [rax],al
  419188:	xchg   esp,eax
  419189:	movabs eax,ds:0x31e9000031300001
  419192:	add    BYTE PTR [rax],al
  419194:	pushf  
  419195:	movabs eax,ds:0x3236000031f00001
  41919e:	add    BYTE PTR [rax],al
  4191a0:	lods   al,BYTE PTR ds:[rsi]
  4191a1:	movabs eax,ds:0x32b5000032400001
  4191aa:	add    BYTE PTR [rax],al
  4191ac:	mov    ah,0xa1
  4191ae:	add    DWORD PTR [rax],eax
  4191b0:	shl    BYTE PTR [rdx],0x0
  4191b3:	add    ah,cl
  4191b5:	xor    eax,DWORD PTR [rax]
  4191b7:	add    ah,al
  4191b9:	movabs eax,ds:0x34a1000033d00001
  4191c2:	add    BYTE PTR [rax],al
  4191c4:	fsub   DWORD PTR [rcx+0x34b00001]
  4191ca:	add    BYTE PTR [rax],al
  4191cc:	or     DWORD PTR [rax+rax*1+0x0],eax
  4191d0:	in     al,dx
  4191d1:	movabs eax,ds:0x4485000044100001
  4191da:	add    BYTE PTR [rax],al
  4191dc:	add    al,0xa2
  4191de:	add    DWORD PTR [rax],eax
  4191e0:	nop
  4191e1:	add    BYTE PTR [rax],r8b
  4191e4:	mov    edx,0xc000044
  4191e9:	movabs ds:0x44e8000044c00001,al
  4191f2:	add    BYTE PTR [rax],al
  4191f4:	adc    al,0xa2
  4191f6:	add    DWORD PTR [rax],eax
  4191f8:	lock add BYTE PTR [rax],r8b
  4191fc:	and    al,BYTE PTR [rbp+0x0]
  4191ff:	add    BYTE PTR [rdx+riz*4],bl
  419202:	add    DWORD PTR [rax],eax
  419204:	xor    BYTE PTR [rbp+0x0],al
  419207:	add    BYTE PTR [rax+0x45],bl
  41920a:	add    BYTE PTR [rax],al
  41920c:	and    al,0xa2
  41920e:	add    DWORD PTR [rax],eax
  419210:	(bad)  
  419211:	add    BYTE PTR [r8],r8b
  419214:	xchg   edx,eax
  419215:	add    BYTE PTR [r8],r8b
  419218:	sub    al,0xa2
  41921a:	add    DWORD PTR [rax],eax
  41921c:	movabs al,ds:0x34000046a4000045
  419225:	movabs ds:0x46c6000046b00001,al
  41922e:	add    BYTE PTR [rax],al
  419230:	rex.W movabs ds:0x4777000046d00001,al
  41923a:	add    BYTE PTR [rax],al
  41923c:	rex.WR movabs ds:0x479d000047800001,al
  419246:	add    BYTE PTR [rax],al
  419248:	push   rax
  419249:	movabs ds:0x4895000047a00001,al
  419252:	add    BYTE PTR [rax],al
  419254:	pop    rax
  419255:	movabs ds:0x4c33000048a00001,al
  41925e:	add    BYTE PTR [rax],al
  419260:	jo     0x419204
  419262:	add    DWORD PTR [rax],eax
  419264:	rex
  419265:	rex.WR add BYTE PTR [rax],r8b
  419268:	jg     0x4192b6
  41926a:	add    BYTE PTR [rax],al
  41926c:	mov    BYTE PTR [rdx+0x4c800001],ah
  419272:	add    BYTE PTR [rax],al
  419274:	out    0x4f,eax
  419276:	add    BYTE PTR [rax],al
  419278:	nop
  419279:	movabs ds:0x509700004ff00001,al
  419282:	add    BYTE PTR [rax],al
  419284:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419285:	movabs ds:0x50de000050a00001,al
  41928e:	add    BYTE PTR [rax],al
  419290:	mov    al,0xa2
  419292:	add    DWORD PTR [rax],eax
  419294:	loopne 0x4192e6
  419296:	add    BYTE PTR [rax],al
  419298:	add    dl,BYTE PTR [rcx+0x0]
  41929b:	add    BYTE PTR [rdx+riz*4+0x51100001],bh
  4192a2:	add    BYTE PTR [rax],al
  4192a4:	(bad)  
  4192a5:	push   rcx
  4192a6:	add    BYTE PTR [rax],al
  4192a8:	vpshufb xmm0,xmm15,XMMWORD PTR [rax+0x51]
  4192ae:	add    BYTE PTR [rax],al
  4192b0:	jmp    0xffffffffd0419306
  4192b5:	movabs ds:0x520d000051f00001,al
  4192be:	add    BYTE PTR [rax],al
  4192c0:	fsub   QWORD PTR [rdx+0x52100001]
  4192c6:	add    BYTE PTR [rax],al
  4192c8:	mov    edx,0xe4000052
  4192cd:	movabs ds:0x5369000052c00001,al
  4192d6:	add    BYTE PTR [rax],al
  4192d8:	lock movabs ds:0x5435000053700001,al
  4192e2:	add    BYTE PTR [rax],al
  4192e4:	cld    
  4192e5:	movabs ds:0x5470000054400001,al
  4192ee:	add    BYTE PTR [rax],al
  4192f0:	or     al,0xa3
  4192f2:	add    DWORD PTR [rax],eax
  4192f4:	jo     0x41934a
  4192f6:	add    BYTE PTR [rax],al
  4192f8:	push   rsp
  4192f9:	push   rbp
  4192fa:	add    BYTE PTR [rax],al
  4192fc:	adc    al,0xa3
  4192fe:	add    DWORD PTR [rax],eax
  419300:	(bad)  
  419301:	push   rbp
  419302:	add    BYTE PTR [rax],al
  419304:	rex.W pop rcx
  419306:	add    BYTE PTR [rax],al
  419308:	and    BYTE PTR [rbx+0x59500001],ah
  41930e:	add    BYTE PTR [rax],al
  419310:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  419311:	pop    rcx
  419312:	add    BYTE PTR [rax],al
  419314:	and    al,0xa3
  419316:	add    DWORD PTR [rax],eax
  419318:	mov    al,0x59
  41931a:	add    BYTE PTR [rax],al
  41931c:	fstp   DWORD PTR [rcx+0x0]
  41931f:	add    BYTE PTR [rax],ch
  419321:	movabs ds:0x5af4000059e00001,eax
  41932a:	add    BYTE PTR [rax],al
  41932c:	xor    BYTE PTR [rbx+0x5b000001],ah
  419332:	add    BYTE PTR [rax],al
  419334:	and    al,0x5c
  419336:	add    BYTE PTR [rax],al
  419338:	cmp    al,0xa3
  41933a:	add    DWORD PTR [rax],eax
  41933c:	xor    BYTE PTR [rax+rax*1+0x0],bl
  419340:	mov    DWORD PTR [rbx+0x0],esi
  419343:	add    BYTE PTR [rbx+riz*4+0x1],cl
  419347:	add    BYTE PTR [rax-0x41ffff8d],dl
  41934d:	je     0x41934f
  41934f:	add    BYTE PTR [rbx+riz*4+0x1],dl
  419353:	add    al,al
  419355:	je     0x419357
  419357:	add    BYTE PTR [rdi],dl
  419359:	jne    0x41935b
  41935b:	add    BYTE PTR [rbx+riz*4+0x1],bl
  41935f:	add    BYTE PTR [rax],ah
  419361:	jne    0x419363
  419363:	add    BYTE PTR [rdx],ah
  419365:	jne    0x419367
  419367:	add    BYTE PTR [rbx+riz*4+0x1],ah
  41936b:	add    BYTE PTR [rax],dh
  41936d:	jne    0x41936f
  41936f:	add    BYTE PTR [rsi+0x75],al
  419372:	add    BYTE PTR [rax],al
  419374:	push   0x500001a3
  419379:	jne    0x41937b
  41937b:	add    BYTE PTR [rdi+0x70000075],al
  419381:	movabs ds:0x768f000075900001,eax
  41938a:	add    BYTE PTR [rax],al
  41938c:	jl     0x419331
  41938e:	add    DWORD PTR [rax],eax
  419390:	nop
  419391:	jbe    0x419393
  419393:	add    BYTE PTR [rsi-0x77ffff8a],ch
  419399:	movabs ds:0x7715000076b00001,eax
  4193a2:	add    BYTE PTR [rax],al
  4193a4:	nop
  4193a5:	movabs ds:0x7745000077200001,eax
  4193ae:	add    BYTE PTR [rax],al
  4193b0:	pushf  
  4193b1:	movabs ds:0x778b000077500001,eax
  4193ba:	add    BYTE PTR [rax],al
  4193bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4193bd:	movabs ds:0x77ef000077900001,eax
  4193c6:	add    BYTE PTR [rax],al
  4193c8:	lods   al,BYTE PTR ds:[rsi]
  4193c9:	movabs ds:0x7959000077f00001,eax
  4193d2:	add    BYTE PTR [rax],al
  4193d4:	mov    ah,0xa3
  4193d6:	add    DWORD PTR [rax],eax
  4193d8:	(bad)  
  4193d9:	jns    0x4193db
  4193db:	add    BYTE PTR [rcx-0x3bffff86],bh
  4193e1:	movabs ds:0x7bd900007ac00001,eax
  4193ea:	add    BYTE PTR [rax],al
  4193ec:	(bad)  
  4193ed:	movabs ds:0x7c5700007be00001,eax
  4193f6:	add    BYTE PTR [rax],al
  4193f8:	in     al,0xa3
  4193fa:	add    DWORD PTR [rax],eax
  4193fc:	(bad)  
  4193fd:	jl     0x4193ff
  4193ff:	add    BYTE PTR [rsp+rdi*2-0x5c140000],cl
  419406:	add    DWORD PTR [rax],eax
  419408:	nop
  419409:	jl     0x41940b
  41940b:	add    BYTE PTR [rbx+0x7d],al
  41940e:	add    BYTE PTR [rax],al
  419410:	hlt    
  419411:	movabs ds:0x7daa00007d500001,eax
  41941a:	add    BYTE PTR [rax],al
  41941c:	add    BYTE PTR [rcx+rax*1+0x7db000],ah
  419423:	add    bl,ch
  419425:	jge    0x419427
  419427:	add    BYTE PTR [rsp+riz*4],cl
  41942a:	add    DWORD PTR [rax],eax
  41942c:	lock jge 0x41942f
  41942f:	add    BYTE PTR [rcx+0x1400007e],bl
  419435:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419436:	add    DWORD PTR [rax],eax
  419438:	movabs al,ds:0x2000007eda00007e
  419441:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419442:	add    DWORD PTR [rax],eax
  419444:	loopne 0x4194c4
  419446:	add    BYTE PTR [rax],al
  419448:	xor    eax,0x2800007f
  41944d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41944e:	add    DWORD PTR [rax],eax
  419450:	rex jg 0x419453
  419453:	add    BYTE PTR [rbx+0x7f],bl
  419456:	add    BYTE PTR [rax],al
  419458:	xor    al,0xa4
  41945a:	add    DWORD PTR [rax],eax
  41945c:	(bad)  
  41945d:	jg     0x41945f
  41945f:	add    BYTE PTR [rdi+0x38000080],bh
  419465:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419466:	add    DWORD PTR [rax],eax
  419468:	rol    BYTE PTR [rax-0x75480000],0x0
  41946f:	add    BYTE PTR [rax-0x5c],cl
  419472:	add    DWORD PTR [rax],eax
  419474:	ror    BYTE PTR [rdx-0x62680000],0x0
  41947b:	add    BYTE PTR [rsp+riz*4+0x1],ah
  41947f:	add    BYTE PTR [rax+0x3000009d],ah
  419485:	movabs al,ds:0xa0300001a47c0000
  41948e:	add    BYTE PTR [rax],al
  419490:	sub    esp,DWORD PTR [rdx-0x5b6c0000]
  419496:	add    DWORD PTR [rax],eax
  419498:	xor    BYTE PTR [rdx-0x5d100000],ah
  41949e:	add    BYTE PTR [rax],al
  4194a0:	lods   al,BYTE PTR ds:[rsi]
  4194a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4194a2:	add    DWORD PTR [rax],eax
  4194a4:	lock movabs ds:0xa4b80000a2f10000,al
  4194ae:	add    DWORD PTR [rax],eax
  4194b0:	add    BYTE PTR [rbx-0x5cd60000],ah
  4194b6:	add    BYTE PTR [rax],al
  4194b8:	mov    esp,0x300001a4
  4194bd:	movabs ds:0xa4c40000a35a0000,eax
  4194c6:	add    DWORD PTR [rax],eax
  4194c8:	(bad)  
  4194c9:	movabs ds:0xa4cc0000a39a0000,eax
  4194d2:	add    DWORD PTR [rax],eax
  4194d4:	movabs al,ds:0xd80000a3cf0000a3
  4194dd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4194de:	add    DWORD PTR [rax],eax
  4194e0:	shl    BYTE PTR [rbx-0x5c160000],1
  4194e6:	add    BYTE PTR [rax],al
  4194e8:	loopne 0x41948e
  4194ea:	add    DWORD PTR [rax],eax
  4194ec:	lock movabs ds:0xa4e40000a3f90000,eax
  4194f6:	add    DWORD PTR [rax],eax
  4194f8:	add    BYTE PTR [rax+rax*1+0xa44300],ah
  4194ff:	add    al,ch
  419501:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419502:	add    DWORD PTR [rax],eax
  419504:	push   rax
  419505:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419506:	add    BYTE PTR [rax],al
  419508:	xchg   ebx,eax
  419509:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41950a:	add    BYTE PTR [rax],al
  41950c:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41950e:	add    DWORD PTR [rax],eax
  419510:	movabs al,ds:0xf80000a4a90000a4
  419519:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41951a:	add    DWORD PTR [rax],eax
  41951c:	mov    al,0xa4
  41951e:	add    BYTE PTR [rax],al
  419520:	in     al,0xa4
  419522:	add    BYTE PTR [rax],al
  419524:	cld    
  419525:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419526:	add    DWORD PTR [rax],eax
  419528:	lock movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41952a:	add    BYTE PTR [rax],al
  41952c:	(bad)  
  41952d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41952e:	add    BYTE PTR [rax],al
  419530:	add    BYTE PTR [rbp-0x591fffff],ah
  419536:	add    BYTE PTR [rax],al
  419538:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
  41953a:	add    BYTE PTR [rax],al
  41953c:	adc    al,0xa5
  41953e:	add    DWORD PTR [rax],eax
  419540:	push   rax
  419541:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  419542:	add    BYTE PTR [rax],al
  419544:	pushf  
  419545:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  419546:	add    BYTE PTR [rax],al
  419548:	sbb    al,0xa5
  41954a:	add    DWORD PTR [rax],eax
  41954c:	movabs al,ds:0x240000a80b0000a7
  419555:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  419556:	add    DWORD PTR [rax],eax
  419558:	adc    BYTE PTR [rax-0x57790000],ch
  41955e:	add    BYTE PTR [rax],al
  419560:	sub    al,0xa5
  419562:	add    DWORD PTR [rax],eax
  419564:	nop
  419565:	test   al,0x0
  419567:	add    BYTE PTR [rip+0x340000a9],cl        # 0x34419616
  41956d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41956e:	add    DWORD PTR [rax],eax
  419570:	adc    BYTE PTR [rcx-0x54f00000],ch
  419576:	add    BYTE PTR [rax],al
  419578:	cmp    BYTE PTR [rbp-0x54efffff],ah
  41957e:	add    BYTE PTR [rax],al
  419580:	ins    BYTE PTR es:[rdi],dx
  419581:	stos   DWORD PTR es:[rdi],eax
  419582:	add    BYTE PTR [rax],al
  419584:	rex.WR movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419586:	add    DWORD PTR [rax],eax
  419588:	jo     0x419535
  41958a:	add    BYTE PTR [rax],al
  41958c:	clc    
  41958d:	stos   DWORD PTR es:[rdi],eax
  41958e:	add    BYTE PTR [rax],al
  419590:	push   rsp
  419591:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  419592:	add    DWORD PTR [rax],eax
  419594:	add    BYTE PTR [rax+rax*1+0xb08000],ch
  41959b:	add    BYTE PTR [rax-0x5b],ah
  41959e:	add    DWORD PTR [rax],eax
  4195a0:	shl    BYTE PTR [rax-0x4e990000],0x0
  4195a7:	add    BYTE PTR [rax-0x5b],ch
  4195aa:	add    DWORD PTR [rax],eax
  4195ac:	jo     0x41955f
  4195ae:	add    BYTE PTR [rax],al
  4195b0:	mov    DWORD PTR [rcx-0x5a900000],esi
  4195b6:	add    DWORD PTR [rax],eax
  4195b8:	nop
  4195b9:	mov    cl,0x0
  4195bb:	add    ch,al
  4195bd:	mov    cl,0x0
  4195bf:	add    BYTE PTR [rax-0x5b],bh
  4195c2:	add    DWORD PTR [rax],eax
  4195c4:	shl    BYTE PTR [rcx-0x4ddb0000],1
  4195ca:	add    BYTE PTR [rax],al
  4195cc:	and    BYTE PTR [rbp-0x4dcfffff],0x0
  4195d3:	add    BYTE PTR [rdx+rsi*4+0x0],cl
  4195d7:	add    BYTE PTR [rbp+riz*4-0x4dafffff],cl
  4195de:	add    BYTE PTR [rax],al
  4195e0:	pop    rdx
  4195e1:	mov    dl,0x0
  4195e3:	add    BYTE PTR [rax+0x600001a5],dl
  4195e9:	mov    dl,0x0
  4195eb:	add    BYTE PTR [rbx-0x4e],ah
  4195ee:	add    BYTE PTR [rax],al
  4195f0:	xchg   esp,eax
  4195f1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  4195f2:	add    DWORD PTR [rax],eax
  4195f4:	jo     0x4195a8
  4195f6:	add    BYTE PTR [rax],al
  4195f8:	rex.RX mov bl,0x0
  4195fb:	add    BYTE PTR [rax+0x500001a5],bl
  419601:	mov    bl,0x0
  419603:	add    BYTE PTR [rbx-0x4c],cl
  419606:	add    BYTE PTR [rax],al
  419608:	test   al,0xa5
  41960a:	add    DWORD PTR [rax],eax
  41960c:	push   rax
  41960d:	mov    ah,0x0
  41960f:	add    BYTE PTR [rdi-0x4c],bh
  419612:	add    BYTE PTR [rax],al
  419614:	mov    eax,0x800001a5
  419619:	mov    ah,0x0
  41961b:	add    cl,ch
  41961d:	mov    ah,0x0
  41961f:	add    al,al
  419621:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  419622:	add    DWORD PTR [rax],eax
  419624:	lock mov ah,0x0
  419627:	add    bl,dh
  419629:	mov    ah,0x0
  41962b:	add    ah,cl
  41962d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41962e:	add    DWORD PTR [rax],eax
  419630:	add    BYTE PTR [rbp-0x4abf0000],dh
  419636:	add    BYTE PTR [rax],al
  419638:	shl    BYTE PTR [rbp-0x4aafffff],1
  41963e:	add    BYTE PTR [rax],al
  419640:	pop    rsp
  419641:	mov    ch,0x0
  419643:	add    al,bl
  419645:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  419646:	add    DWORD PTR [rax],eax
  419648:	(bad)  
  419649:	mov    ch,0x0
  41964b:	add    BYTE PTR [rsi+rsi*4+0x0],bl
  41964f:	add    ah,bl
  419651:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  419652:	add    DWORD PTR [rax],eax
  419654:	(bad)  
  419655:	mov    dh,0x0
  419657:	add    BYTE PTR [rbx-0x4a],ah
  41965a:	add    BYTE PTR [rax],al
  41965c:	hlt    
  41965d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41965e:	add    DWORD PTR [rax],eax
  419660:	jo     0x419618
  419662:	add    BYTE PTR [rax],al
  419664:	je     0x41961c
  419666:	add    BYTE PTR [rax],al
  419668:	clc    
  419669:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  41966a:	add    DWORD PTR [rax],eax
  41966c:	xor    BYTE PTR [rsi-0x497c0000],0x0
  419673:	add    ah,bh
  419675:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  419676:	add    DWORD PTR [rax],eax
  419678:	nop
  419679:	mov    dh,0x0
  41967b:	add    cl,dh
  41967d:	mov    dh,0x0
  41967f:	add    BYTE PTR [rax],al
  419681:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419682:	add    DWORD PTR [rax],eax
  419684:	add    BYTE PTR [rdi-0x479e0000],dh
  41968a:	add    BYTE PTR [rax],al
  41968c:	or     al,0xa6
  41968e:	add    DWORD PTR [rax],eax
  419690:	jo     0x41964a
  419692:	add    BYTE PTR [rax],al
  419694:	imul   edi,DWORD PTR [rbx-0x59e00000],0xbb700001
  41969e:	add    BYTE PTR [rax],al
  4196a0:	(bad)  
  4196a1:	mov    ebp,0xa6380000
  4196a6:	add    DWORD PTR [rax],eax
  4196a8:	and    BYTE PTR [rbp-0x41f40000],bh
  4196ae:	add    BYTE PTR [rax],al
  4196b0:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4196b2:	add    DWORD PTR [rax],eax
  4196b4:	adc    BYTE PTR [rsi-0x40380000],bh
  4196ba:	add    BYTE PTR [rax],al
  4196bc:	push   rax
  4196bd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4196be:	add    DWORD PTR [rax],eax
  4196c0:	sar    BYTE PTR [rdi-0x3fc30000],1
  4196c6:	add    BYTE PTR [rax],al
  4196c8:	pop    rax
  4196c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4196ca:	add    DWORD PTR [rax],eax
  4196cc:	rex rol BYTE PTR [rax],0x0
  4196d0:	mov    edi,0x680000c0
  4196d5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4196d6:	add    DWORD PTR [rax],eax
  4196d8:	rol    al,0x0
  4196db:	add    BYTE PTR [rdi-0x3f],bl
  4196de:	add    BYTE PTR [rax],al
  4196e0:	je     0x419688
  4196e2:	add    DWORD PTR [rax],eax
  4196e4:	(bad)  
  4196e5:	rol    DWORD PTR [rax],0x0
  4196e8:	cmp    al,dl
  4196ea:	add    BYTE PTR [rax],al
  4196ec:	jl     0x419694
  4196ee:	add    DWORD PTR [rax],eax
  4196f0:	rex ret 0x0
  4196f4:	pop    rdi
  4196f5:	ret    0x0
  4196f8:	test   BYTE PTR [rsi-0x3d9fffff],ah
  4196fe:	add    BYTE PTR [rax],al
  419700:	jb     0x4196c4
  419702:	add    BYTE PTR [rax],al
  419704:	mov    BYTE PTR [rsi-0x3d7fffff],ah
  41970a:	add    BYTE PTR [rax],al
  41970c:	(bad)
  41970f:	add    BYTE PTR [rsi+riz*4-0x3d2fffff],cl
  419716:	add    BYTE PTR [rax],al
  419718:	outs   dx,BYTE PTR ds:[rsi]
  419719:	ret    
  41971a:	add    BYTE PTR [rax],al
  41971c:	nop
  41971d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41971e:	add    DWORD PTR [rax],eax
  419720:	jo     0x4196e5
  419722:	add    BYTE PTR [rax],al
  419724:	mov    bl,0xc3
  419726:	add    BYTE PTR [rax],al
  419728:	pushf  
  419729:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41972a:	add    DWORD PTR [rax],eax
  41972c:	rol    bl,0x0
  41972f:	add    bl,bh
  419731:	ret    
  419732:	add    BYTE PTR [rax],al
  419734:	test   al,0xa6
  419736:	add    DWORD PTR [rax],eax
  419738:	add    ah,al
  41973a:	add    BYTE PTR [rax],al
  41973c:	mov    es,esp
  41973e:	add    BYTE PTR [rax],al
  419740:	mov    al,0xa6
  419742:	add    DWORD PTR [rax],eax
  419744:	nop
  419745:	(bad)  
  419746:	add    BYTE PTR [rax],al
  419748:	enter  0xc4,0x0
  41974c:	mov    esp,0xd00001a6
  419751:	(bad)  
  419752:	add    BYTE PTR [rax],al
  419754:	and    eax,0xc80000c5
  419759:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41975a:	add    DWORD PTR [rax],eax
  41975c:	xor    ch,al
  41975e:	add    BYTE PTR [rax],al
  419760:	faddp  st(5),st
  419762:	add    BYTE PTR [rax],al
  419764:	(bad)  
  419765:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  419766:	add    DWORD PTR [rax],eax
  419768:	and    dh,al
  41976a:	add    BYTE PTR [rax],al
  41976c:	mov    eax,edi
  41976e:	add    BYTE PTR [rax],al
  419770:	in     al,0xa6
  419772:	add    DWORD PTR [rax],eax
  419774:	nop
  419775:	mov    DWORD PTR [rax],0xc7fb00
  41977b:	add    ah,dh
  41977d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  41977e:	add    DWORD PTR [rax],eax
  419780:	add    al,cl
  419782:	add    BYTE PTR [rax],al
  419784:	and    cl,cl
  419786:	add    BYTE PTR [rax],al
  419788:	add    al,0xa7
  41978a:	add    DWORD PTR [rax],eax
  41978c:	xor    cl,cl
  41978e:	add    BYTE PTR [rax],al
  419790:	mov    cl,cl
  419792:	add    BYTE PTR [rax],al
  419794:	sbb    al,0xa7
  419796:	add    DWORD PTR [rax],eax
  419798:	nop
  419799:	leave  
  41979a:	add    BYTE PTR [rax],al
  41979c:	(bad)
  41979f:	add    BYTE PTR [rdi+riz*4],ch
  4197a2:	add    DWORD PTR [rax],eax
  4197a4:	ror    cl,1
  4197a6:	add    BYTE PTR [rax],al
  4197a8:	add    ecx,ebx
  4197aa:	add    BYTE PTR [rax],al
  4197ac:	xor    BYTE PTR [rdi-0x34efffff],ah
  4197b2:	add    BYTE PTR [rax],al
  4197b4:	ror    bl,1
  4197b6:	add    BYTE PTR [rax],al
  4197b8:	rex.R cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4197ba:	add    DWORD PTR [rax],eax
  4197bc:	ror    bl,1
  4197be:	add    BYTE PTR [rax],al
  4197c0:	icebp  
  4197c1:	retf   
  4197c2:	add    BYTE PTR [rax],al
  4197c4:	push   rsp
  4197c5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4197c6:	add    DWORD PTR [rax],eax
  4197c8:	add    ah,cl
  4197ca:	add    BYTE PTR [rax],al
  4197cc:	sub    eax,0x5c0000cc
  4197d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4197d2:	add    DWORD PTR [rax],eax
  4197d4:	xor    ah,cl
  4197d6:	add    BYTE PTR [rax],al
  4197d8:	es int 0x0
  4197db:	add    BYTE PTR [rdi+riz*4+0x1],ah
  4197df:	add    BYTE PTR [rax],dh
  4197e1:	int    0x0
  4197e3:	add    BYTE PTR [rdi+0x6c0000cd],al
  4197e9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4197ea:	add    DWORD PTR [rax],eax
  4197ec:	nop
  4197ed:	int    0x0
  4197ef:	add    BYTE PTR [rdi+0x740000ce],ch
  4197f5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  4197f6:	add    DWORD PTR [rax],eax
  4197f8:	mov    al,0xce
  4197fa:	add    BYTE PTR [rax],al
  4197fc:	mov    ch,0xcf
  4197fe:	add    BYTE PTR [rax],al
  419800:	mov    BYTE PTR [rdi-0x303fffff],ah
  419806:	add    BYTE PTR [rax],al
  419808:	pop    rdx
  419809:	rol    BYTE PTR [rax],1
  41980b:	add    BYTE PTR [rdi+riz*4-0x2f9fffff],dl
  419812:	add    BYTE PTR [rax],al
  419814:	rex.WR rol QWORD PTR [rax],1
  419817:	add    BYTE PTR [rdi+riz*4-0x2eafffff],bl
  41981e:	add    BYTE PTR [rax],al
  419820:	lods   al,BYTE PTR ds:[rsi]
  419821:	(bad)  
  419822:	add    BYTE PTR [rax],al
  419824:	mov    al,0xa7
  419826:	add    DWORD PTR [rax],eax
  419828:	mov    al,0xd4
  41982a:	add    BYTE PTR [rax],al
  41982c:	xchg   ecx,eax
  41982d:	(bad)  
  41982e:	add    BYTE PTR [rax],al
  419830:	shl    BYTE PTR [rdi-0x2a5fffff],0x0
  419837:	add    BYTE PTR [rax-0x28],dh
  41983a:	add    BYTE PTR [rax],al
  41983c:	int3   
  41983d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  41983e:	add    DWORD PTR [rax],eax
  419840:	jo     0x41981a
  419842:	add    BYTE PTR [rax],al
  419844:	cmp    ecx,ebx
  419846:	add    BYTE PTR [rax],al
  419848:	loopne 0x4197f1
  41984a:	add    DWORD PTR [rax],eax
  41984c:	rex fld DWORD PTR [rax]
  41984f:	add    bh,ch
  419851:	fld    DWORD PTR [rax]
  419853:	add    ah,ch
  419855:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  419856:	add    DWORD PTR [rax],eax
  419858:	lock fld DWORD PTR [rax]
  41985b:	add    BYTE PTR [rsi-0x7ffff25],al
  419861:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  419862:	add    DWORD PTR [rax],eax
  419864:	nop
  419865:	fild   DWORD PTR [rax]
  419867:	add    BYTE PTR [rax-0x21],cl
  41986a:	add    BYTE PTR [rax],al
  41986c:	add    al,0xa8
  41986e:	add    DWORD PTR [rax],eax
  419870:	push   rax
  419871:	fild   WORD PTR [rax]
  419873:	add    BYTE PTR [rbx-0x1c],bl
  419876:	add    BYTE PTR [rax],al
  419878:	sbb    al,0xa8
  41987a:	add    DWORD PTR [rax],eax
  41987c:	(bad)  
  41987d:	in     al,0x0
  41987f:	add    BYTE PTR [rdx+0x300000ee],dh
  419885:	test   al,0x1
  419887:	add    al,al
  419889:	out    dx,al
  41988a:	add    BYTE PTR [rax],al
  41988c:	lock out dx,al
  41988e:	add    BYTE PTR [rax],al
  419890:	rex.W test al,0x1
  419893:	add    al,dh
  419895:	out    dx,al
  419896:	add    BYTE PTR [rax],al
  419898:	cmp    bh,ch
  41989a:	add    BYTE PTR [rax],al
  41989c:	push   rax
  41989d:	test   al,0x1
  41989f:	add    BYTE PTR [rax-0x11],al
  4198a2:	add    BYTE PTR [rax],al
  4198a4:	pop    rsp
  4198a5:	out    dx,eax
  4198a6:	add    BYTE PTR [rax],al
  4198a8:	pop    rsp
  4198a9:	test   al,0x1
  4198ab:	add    BYTE PTR [rax-0x11],ah
  4198ae:	add    BYTE PTR [rax],al
  4198b0:	(bad)  
  4198b2:	add    BYTE PTR [rax],al
  4198b4:	(bad)  
  4198b5:	test   al,0x1
  4198b7:	add    al,ah
  4198b9:	lock add BYTE PTR [rax],al
  4198bc:	rex.WX add rax,0xffffffffa8780001
  4198c2:	add    DWORD PTR [rax],eax
  4198c4:	push   rax
  4198c5:	add    eax,0x64d0001
  4198ca:	add    DWORD PTR [rax],eax
  4198cc:	xchg   esp,eax
  4198cd:	test   al,0x1
  4198cf:	add    BYTE PTR [rax+0x6],dl
  4198d2:	add    DWORD PTR [rax],eax
  4198d4:	mov    es,WORD PTR [rsi]
  4198d6:	add    DWORD PTR [rax],eax
  4198d8:	movabs al,ds:0x5c000106900001a8
  4198e1:	(bad)  
  4198e2:	add    DWORD PTR [rax],eax
  4198e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4198e5:	test   al,0x1
  4198e7:	add    BYTE PTR [rax+0x7],ah
  4198ea:	add    DWORD PTR [rax],eax
  4198ec:	movabs ds:0xb00001a8b0000107,al
  4198f5:	(bad)  
  4198f6:	add    DWORD PTR [rax],eax
  4198f8:	mov    esi,0xb8000108
  4198fd:	test   al,0x1
  4198ff:	add    al,al
  419901:	or     BYTE PTR [rcx],al
  419903:	add    BYTE PTR [rsi],ah
  419905:	or     DWORD PTR [rcx],eax
  419907:	add    ah,al
  419909:	test   al,0x1
  41990b:	add    BYTE PTR [rax],dh
  41990d:	or     DWORD PTR [rcx],eax
  41990f:	add    dl,ah
  419911:	or     DWORD PTR [rcx],eax
  419913:	add    ah,cl
  419915:	test   al,0x1
  419917:	add    al,dh
  419919:	or     DWORD PTR [rcx],eax
  41991b:	add    BYTE PTR [rsi],dl
  41991d:	or     al,BYTE PTR [rcx]
  41991f:	add    ah,bl
  419921:	test   al,0x1
  419923:	add    BYTE PTR [rax],ah
  419925:	or     al,BYTE PTR [rcx]
  419927:	add    BYTE PTR [rax+0xb],dl
  41992a:	add    DWORD PTR [rax],eax
  41992c:	in     al,0xa8
  41992e:	add    DWORD PTR [rax],eax
  419930:	push   rax
  419931:	or     eax,DWORD PTR [rcx]
  419933:	add    BYTE PTR [rsp+rcx*1-0x5707ffff],dh
  41993a:	add    DWORD PTR [rax],eax
  41993c:	ror    BYTE PTR [rcx+rax*1],0x0
  419940:	ror    DWORD PTR [rip+0xffffffffa9080001],cl        # 0xffffffffa9499947
  419946:	add    DWORD PTR [rax],eax
  419948:	loopne 0x419957
  41994a:	add    DWORD PTR [rax],eax
  41994c:	and    al,0xe
  41994e:	add    DWORD PTR [rax],eax
  419950:	sbb    al,0xa9
  419952:	add    DWORD PTR [rax],eax
  419954:	xor    BYTE PTR [rsi],cl
  419956:	add    DWORD PTR [rax],eax
  419958:	data16 sgdt [rax]
  41995c:	and    BYTE PTR [rcx+0xf700001],ch
  419962:	add    DWORD PTR [rax],eax
  419964:	adc    DWORD PTR [rax],0x1
  419967:	add    BYTE PTR [rcx+rbp*4],ch
  41996a:	add    DWORD PTR [rax],eax
  41996c:	nop
  41996d:	adc    BYTE PTR [rcx],al
  41996f:	add    BYTE PTR [rcx+0x38000111],bl
  419975:	test   eax,0x11a00001
  41997a:	add    DWORD PTR [rax],eax
  41997c:	(bad)  
  41997d:	adc    DWORD PTR [rcx],eax
  41997f:	add    BYTE PTR [rcx+rbp*4+0x1],al
  419983:	add    al,dl
  419985:	adc    DWORD PTR [rcx],eax
  419987:	add    BYTE PTR [rdi+0x12],cl
  41998a:	add    DWORD PTR [rax],eax
  41998c:	test   rax,0x12500001
  419992:	add    DWORD PTR [rax],eax
  419994:	xchg   esp,eax
  419995:	adc    al,BYTE PTR [rcx]
  419997:	add    BYTE PTR [rax-0x57],dl
  41999a:	add    DWORD PTR [rax],eax
  41999c:	movabs al,ds:0x5c000113e2000112
  4199a5:	test   eax,0x15e00001
  4199aa:	add    DWORD PTR [rax],eax
  4199ac:	call   0x70419ac6
  4199b1:	test   eax,0x15f00001
  4199b6:	add    DWORD PTR [rax],eax
  4199b8:	sti    
  4199b9:	adc    eax,0xa9740001
  4199be:	add    DWORD PTR [rax],eax
  4199c0:	add    BYTE PTR [rsi],dl
  4199c2:	add    DWORD PTR [rax],eax
  4199c4:	(bad)  
  4199c5:	(bad)  
  4199c6:	add    DWORD PTR [rax],eax
  4199c8:	js     0x419973
  4199ca:	add    DWORD PTR [rax],eax
  4199cc:	adc    BYTE PTR [rsi],dl
  4199ce:	add    DWORD PTR [rax],eax
  4199d0:	sbb    DWORD PTR [rsi],edx
  4199d2:	add    DWORD PTR [rax],eax
  4199d4:	jl     0x41997f
  4199d6:	add    DWORD PTR [rax],eax
  4199d8:	and    BYTE PTR [rsi],dl
  4199da:	add    DWORD PTR [rax],eax
  4199dc:	movsxd edx,DWORD PTR [rsi]
  4199de:	add    DWORD PTR [rax],eax
  4199e0:	sub    BYTE PTR [rcx+0x16700001],0x1
  4199e7:	add    BYTE PTR [rbp-0x77fffeea],ch
  4199ed:	test   eax,0x16b00001
  4199f2:	add    DWORD PTR [rax],eax
  4199f4:	mov    edx,0x90000116
  4199f9:	test   eax,0x16c00001
  4199fe:	add    DWORD PTR [rax],eax
  419a00:	retf   0x116
  419a03:	add    BYTE PTR [rcx+rbp*4+0x18200001],dl
  419a0a:	add    DWORD PTR [rax],eax
  419a0c:	jo     0x419a2c
  419a0e:	add    DWORD PTR [rax],eax
  419a10:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  419a11:	.byte 0xa0
  419a12:	add    DWORD PTR [rax],eax

Disassembly of section .xdata:

000000000041a000 <.xdata>:
  41a000:	add    DWORD PTR [rax],eax
  41a002:	add    BYTE PTR [rax],al
  41a004:	add    DWORD PTR [rcx+rax*1],eax
  41a007:	add    BYTE PTR [rdx+rax*2],al
  41a00a:	add    BYTE PTR [rax],al
  41a00c:	add    DWORD PTR [rcx+rax*1],eax
  41a00f:	add    BYTE PTR [rdx+riz*2],al
  41a012:	add    BYTE PTR [rax],al
  41a014:	add    DWORD PTR [rdi],ecx
  41a016:	or     BYTE PTR [rax],al
  41a018:	lgdt   [rbx]
  41a01b:	add    BYTE PTR [rax],cl
  41a01d:	xor    BYTE PTR [rdi],al
  41a01f:	(bad)  
  41a020:	(bad)  
  41a021:	jo     0x41a028
  41a023:	push   rax
  41a024:	add    al,0xc0
  41a026:	add    dl,al
  41a028:	or     DWORD PTR [rcx+rax*1],eax
  41a02b:	add    BYTE PTR [rdx+rax*2],al
  41a02e:	add    BYTE PTR [rax],al
  41a030:	fcom   DWORD PTR [rip+0x10001]        # 0x42a037
  41a036:	add    BYTE PTR [rax],al
  41a038:	(bad)  
  41a039:	adc    al,0x0
  41a03b:	add    ah,ch
  41a03d:	adc    al,0x0
  41a03f:	add    BYTE PTR [rax],dl
  41a041:	mov    esi,0x14ec0000
  41a046:	add    BYTE PTR [rax],al
  41a048:	or     DWORD PTR [rcx+rax*1],eax
  41a04b:	add    BYTE PTR [rdx+rax*2],al
  41a04e:	add    BYTE PTR [rax],al
  41a050:	fcom   DWORD PTR [rip+0x10001]        # 0x42a057
  41a056:	add    BYTE PTR [rax],al
  41a058:	add    al,0x15
  41a05a:	add    BYTE PTR [rax],al
  41a05c:	sbb    al,0x15
  41a05e:	add    BYTE PTR [rax],al
  41a060:	adc    BYTE PTR [rsi+0x151c0000],bh
  41a066:	add    BYTE PTR [rax],al
  41a068:	add    DWORD PTR [rsi],eax
  41a06a:	add    eax,DWORD PTR [rax]
  41a06c:	(bad)  
  41a06d:	rex.X add sil,BYTE PTR [rax]
  41a070:	add    DWORD PTR [rax+0x0],esp
  41a073:	add    BYTE PTR [rcx],al
  41a075:	(bad)  
  41a076:	add    eax,DWORD PTR [rax]
  41a078:	(bad)  
  41a079:	rex.X add sil,BYTE PTR [rax]
  41a07c:	add    DWORD PTR [rax+0x0],esp
  41a07f:	add    BYTE PTR [rcx],al
  41a081:	add    BYTE PTR [rax],al
  41a083:	add    BYTE PTR [rcx],al
  41a085:	(bad)  
  41a086:	add    al,0x0
  41a088:	(bad)  
  41a089:	xor    al,BYTE PTR [rbx]
  41a08b:	xor    BYTE PTR [rdx],al
  41a08d:	(bad)  
  41a08e:	add    DWORD PTR [rax+0x1],esi
  41a091:	add    eax,0x32050002
  41a096:	add    DWORD PTR [rax],esi
  41a098:	add    DWORD PTR [rdi],eax
  41a09a:	add    al,0x0
  41a09c:	(bad)  
  41a09d:	xor    al,BYTE PTR [rbx]
  41a09f:	xor    BYTE PTR [rdx],al
  41a0a1:	(bad)  
  41a0a2:	add    DWORD PTR [rax+0x1],esi
  41a0a5:	adc    BYTE PTR [rcx],cl
  41a0a7:	add    BYTE PTR [rax],dl
  41a0a9:	(bad)  
  41a0aa:	or     al,0x30
  41a0ac:	or     esp,DWORD PTR [rax+0xa]
  41a0af:	jo     0x41a0ba
  41a0b1:	push   rax
  41a0b2:	or     al,al
  41a0b4:	(bad)  
  41a0b5:	rol    BYTE PTR [rax+riz*8],1
  41a0b8:	add    dh,al
  41a0ba:	add    BYTE PTR [rax],al
  41a0bc:	add    DWORD PTR [rcx+rax*1],eax
  41a0bf:	add    BYTE PTR [rdx+riz*2],al
  41a0c2:	add    BYTE PTR [rax],al
  41a0c4:	add    DWORD PTR [rdi],eax
  41a0c6:	add    al,0x0
  41a0c8:	(bad)  
  41a0c9:	xor    al,BYTE PTR [rbx]
  41a0cb:	xor    BYTE PTR [rdx],al
  41a0cd:	(bad)  
  41a0ce:	add    DWORD PTR [rax+0x1],esi
  41a0d1:	(bad)  
  41a0d2:	add    al,0x0
  41a0d4:	(bad)  
  41a0d5:	xor    al,BYTE PTR [rbx]
  41a0d7:	xor    BYTE PTR [rdx],al
  41a0d9:	(bad)  
  41a0da:	add    DWORD PTR [rax+0x1],esi
  41a0dd:	add    BYTE PTR [rax],al
  41a0df:	add    BYTE PTR [rcx],al
  41a0e1:	add    BYTE PTR [rax],al
  41a0e3:	add    BYTE PTR [rcx],al
  41a0e5:	(bad)  
  41a0e6:	add    al,0x0
  41a0e8:	(bad)  
  41a0e9:	xor    al,BYTE PTR [rbx]
  41a0eb:	xor    BYTE PTR [rdx],al
  41a0ed:	(bad)  
  41a0ee:	add    DWORD PTR [rax+0x1],esi
  41a0f1:	adc    ecx,DWORD PTR [rdx]
  41a0f3:	add    BYTE PTR [rbx],dl
  41a0f5:	add    DWORD PTR [rcx],ebx
  41a0f7:	add    BYTE PTR [rax+rsi*1],cl
  41a0fa:	or     esp,DWORD PTR [rax+0xa]
  41a0fd:	jo     0x41a108
  41a0ff:	push   rax
  41a100:	or     al,al
  41a102:	(bad)  
  41a103:	rol    BYTE PTR [rax+riz*8],1
  41a106:	add    dh,al
  41a108:	add    DWORD PTR [rdi],eax
  41a10a:	add    al,0x0
  41a10c:	(bad)  
  41a10d:	xor    al,BYTE PTR [rbx]
  41a10f:	xor    BYTE PTR [rdx],al
  41a111:	(bad)  
  41a112:	add    DWORD PTR [rax+0x1],esi
  41a115:	(bad)  
  41a116:	or     BYTE PTR [rax],al
  41a118:	(bad)  
  41a119:	push   rdx
  41a11a:	or     dh,BYTE PTR [rax]
  41a11c:	or     DWORD PTR [rax+0x8],esp
  41a11f:	jo     0x41a128
  41a121:	push   rax
  41a122:	(bad)  
  41a123:	rol    BYTE PTR [rax+rdx*8],0x2
  41a127:	loopne 0x41a12a
  41a129:	(bad)  
  41a12a:	add    eax,DWORD PTR [rax]
  41a12c:	(bad)  
  41a12d:	rex.X add sil,BYTE PTR [rax]
  41a130:	add    DWORD PTR [rax+0x0],esp
  41a133:	add    BYTE PTR [rcx],al
  41a135:	(bad)  
  41a136:	or     BYTE PTR [rax],al
  41a138:	(bad)  
  41a139:	ror    BYTE PTR [rdx],cl
  41a13b:	xor    BYTE PTR [rcx],cl
  41a13d:	(bad)  
  41a13e:	or     BYTE PTR [rax+0x7],dh
  41a141:	push   rax
  41a142:	(bad)  
  41a143:	rol    BYTE PTR [rax+rdx*8],0x2
  41a147:	loopne 0x41a14a
  41a149:	add    al,0x1
  41a14b:	add    BYTE PTR [rdx+rax*2],al
  41a14e:	add    BYTE PTR [rax],al
  41a150:	add    DWORD PTR [rcx+rax*1],eax
  41a153:	add    BYTE PTR [rdx+rax*2],al
  41a156:	add    BYTE PTR [rax],al
  41a158:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a160
  41a15e:	add    DWORD PTR [rax],esi
  41a160:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a168
  41a166:	add    DWORD PTR [rax],esi
  41a168:	add    DWORD PTR [rsi],eax
  41a16a:	add    eax,DWORD PTR [rax]
  41a16c:	(bad)  
  41a16d:	rex.X add sil,BYTE PTR [rax]
  41a170:	add    DWORD PTR [rax+0x0],esp
  41a173:	add    BYTE PTR [rcx],al
  41a175:	add    eax,0x32050002
  41a17a:	add    DWORD PTR [rax],esi
  41a17c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a184
  41a182:	add    DWORD PTR [rax],esi
  41a184:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246a18c
  41a18a:	add    DWORD PTR [rax],esi
  41a18c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a194
  41a192:	add    DWORD PTR [rax],esi
  41a194:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a19c
  41a19a:	add    DWORD PTR [rax],esi
  41a19c:	add    DWORD PTR [rdx],ecx
  41a19e:	(bad)  
  41a19f:	add    BYTE PTR [rdx],cl
  41a1a1:	xor    al,BYTE PTR [rsi]
  41a1a3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1a609
  41a1a9:	push   rax
  41a1aa:	add    al,al
  41a1ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a1b4
  41a1b2:	add    DWORD PTR [rax],esi
  41a1b4:	add    DWORD PTR [rax],ecx
  41a1b6:	add    eax,0x4620800
  41a1bb:	xor    BYTE PTR [rbx],al
  41a1bd:	(bad)  
  41a1be:	add    dh,BYTE PTR [rax+0x1]
  41a1c1:	push   rax
  41a1c2:	add    BYTE PTR [rax],al
  41a1c4:	add    DWORD PTR [rdi+rax*1],ecx
  41a1c7:	add    BYTE PTR [rdx+riz*2],cl
  41a1ca:	or     BYTE PTR [rax],dh
  41a1cc:	(bad)  
  41a1cd:	(bad)  
  41a1ce:	(bad)  
  41a1cf:	jo     0x41a1d6
  41a1d1:	push   rax
  41a1d2:	add    al,0xc0
  41a1d4:	add    dl,al
  41a1d6:	add    BYTE PTR [rax],al
  41a1d8:	add    DWORD PTR [rdx],ecx
  41a1da:	(bad)  
  41a1db:	add    BYTE PTR [rdx],cl
  41a1dd:	xor    BYTE PTR [rcx],cl
  41a1df:	(bad)  
  41a1e0:	or     BYTE PTR [rax+0x7],dh
  41a1e3:	push   rax
  41a1e4:	(bad)  
  41a1e5:	rol    BYTE PTR [rax+rdx*8],0x2
  41a1e9:	loopne 0x41a1eb
  41a1eb:	add    BYTE PTR [rcx],al
  41a1ed:	adc    BYTE PTR [rcx],cl
  41a1ef:	add    BYTE PTR [rax],dl
  41a1f1:	ret    0x300c
  41a1f4:	or     esp,DWORD PTR [rax+0xa]
  41a1f7:	jo     0x41a202
  41a1f9:	push   rax
  41a1fa:	or     al,al
  41a1fc:	(bad)  
  41a1fd:	rol    BYTE PTR [rax+riz*8],1
  41a200:	add    dh,al
  41a202:	add    BYTE PTR [rax],al
  41a204:	add    DWORD PTR [rcx+rax*1],eax
  41a207:	add    BYTE PTR [rdx+rax*4],al
  41a20a:	add    BYTE PTR [rax],al
  41a20c:	add    DWORD PTR [rcx+rax*1],eax
  41a20f:	add    BYTE PTR [rdx+rax*4],al
  41a212:	add    BYTE PTR [rax],al
  41a214:	add    DWORD PTR [rcx+rax*1],eax
  41a217:	add    BYTE PTR [rdx+rax*4],al
  41a21a:	add    BYTE PTR [rax],al
  41a21c:	add    DWORD PTR [rcx+rax*1],eax
  41a21f:	add    BYTE PTR [rdx+rax*4],al
  41a222:	add    BYTE PTR [rax],al
  41a224:	add    DWORD PTR [rcx+rax*1],eax
  41a227:	add    BYTE PTR [rdx+rax*4],al
  41a22a:	add    BYTE PTR [rax],al
  41a22c:	add    DWORD PTR [rcx+rax*1],eax
  41a22f:	add    BYTE PTR [rdx+rax*4],al
  41a232:	add    BYTE PTR [rax],al
  41a234:	add    DWORD PTR [rdi+rax*1],ecx
  41a237:	add    BYTE PTR [rdx+riz*2],cl
  41a23a:	or     BYTE PTR [rax],dh
  41a23c:	(bad)  
  41a23d:	(bad)  
  41a23e:	(bad)  
  41a23f:	jo     0x41a246
  41a241:	push   rax
  41a242:	add    al,0xc0
  41a244:	add    dl,al
  41a246:	add    BYTE PTR [rax],al
  41a248:	add    DWORD PTR [rax],eax
  41a24a:	add    BYTE PTR [rax],al
  41a24c:	add    DWORD PTR [rax],eax
  41a24e:	add    BYTE PTR [rax],al
  41a250:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a258
  41a256:	add    DWORD PTR [rax],esi
  41a258:	add    DWORD PTR [rax],edx
  41a25a:	or     DWORD PTR [rax],eax
  41a25c:	adc    BYTE PTR [rdx+0xc],al
  41a25f:	xor    BYTE PTR [rbx],cl
  41a261:	(bad)  
  41a262:	or     dh,BYTE PTR [rax+0x9]
  41a265:	push   rax
  41a266:	or     al,al
  41a268:	(bad)  
  41a269:	rol    BYTE PTR [rax+riz*8],1
  41a26c:	add    dh,al
  41a26e:	add    BYTE PTR [rax],al
  41a270:	add    DWORD PTR [rbx],edx
  41a272:	or     al,BYTE PTR [rax]
  41a274:	adc    eax,DWORD PTR [rcx]
  41a276:	xor    eax,0xb300c00
  41a27b:	(bad)  
  41a27c:	or     dh,BYTE PTR [rax+0x9]
  41a27f:	push   rax
  41a280:	or     al,al
  41a282:	(bad)  
  41a283:	rol    BYTE PTR [rax+riz*8],1
  41a286:	add    dh,al
  41a288:	add    DWORD PTR [rcx+rax*1],eax
  41a28b:	add    BYTE PTR [rdx+rax*2],al
  41a28e:	add    BYTE PTR [rax],al
  41a290:	add    DWORD PTR [rdi+rax*1],ecx
  41a293:	add    BYTE PTR [rdx+rax*2],cl
  41a296:	or     BYTE PTR [rax],dh
  41a298:	(bad)  
  41a299:	(bad)  
  41a29a:	(bad)  
  41a29b:	jo     0x41a2a2
  41a29d:	push   rax
  41a29e:	add    al,0xc0
  41a2a0:	add    dl,al
  41a2a2:	add    BYTE PTR [rax],al
  41a2a4:	add    DWORD PTR [rdi],eax
  41a2a6:	add    al,0x0
  41a2a8:	(bad)  
  41a2a9:	xor    al,BYTE PTR [rbx]
  41a2ab:	xor    BYTE PTR [rdx],al
  41a2ad:	(bad)  
  41a2ae:	add    DWORD PTR [rax+0x1],esi
  41a2b1:	(bad)  
  41a2b2:	add    eax,DWORD PTR [rax]
  41a2b4:	(bad)  
  41a2b5:	(bad)  
  41a2b7:	xor    BYTE PTR [rcx],al
  41a2b9:	(bad)  
  41a2ba:	add    BYTE PTR [rax],al
  41a2bc:	add    DWORD PTR [rcx+rax*1],eax
  41a2bf:	add    BYTE PTR [rdx+riz*2],al
  41a2c2:	add    BYTE PTR [rax],al
  41a2c4:	add    DWORD PTR [rsi],eax
  41a2c6:	add    eax,DWORD PTR [rax]
  41a2c8:	(bad)  
  41a2c9:	rex.X add sil,BYTE PTR [rax]
  41a2cc:	add    DWORD PTR [rax+0x0],esp
  41a2cf:	add    BYTE PTR [rcx],al
  41a2d1:	(bad)  
  41a2d2:	add    eax,DWORD PTR [rax]
  41a2d4:	(bad)  
  41a2d5:	rex.X add sil,BYTE PTR [rax]
  41a2d8:	add    DWORD PTR [rax+0x0],esp
  41a2db:	add    BYTE PTR [rcx],al
  41a2dd:	add    eax,0x32050002
  41a2e2:	add    DWORD PTR [rax],esi
  41a2e4:	add    DWORD PTR [rsi],eax
  41a2e6:	add    eax,DWORD PTR [rax]
  41a2e8:	(bad)  
  41a2e9:	rex.X add sil,BYTE PTR [rax]
  41a2ec:	add    DWORD PTR [rax+0x0],esp
  41a2ef:	add    BYTE PTR [rcx],al
  41a2f1:	(bad)  
  41a2f2:	add    eax,DWORD PTR [rax]
  41a2f4:	(bad)  
  41a2f5:	rex.X add sil,BYTE PTR [rax]
  41a2f8:	add    DWORD PTR [rax+0x0],esp
  41a2fb:	add    BYTE PTR [rcx],al
  41a2fd:	or     BYTE PTR [rip+0x4420800],al        # 0x483ab03
  41a303:	xor    BYTE PTR [rbx],al
  41a305:	(bad)  
  41a306:	add    dh,BYTE PTR [rax+0x1]
  41a309:	push   rax
  41a30a:	add    BYTE PTR [rax],al
  41a30c:	add    DWORD PTR [rcx+rax*1],eax
  41a30f:	add    BYTE PTR [rdx+riz*2],al
  41a312:	add    BYTE PTR [rax],al
  41a314:	add    DWORD PTR [rdi],eax
  41a316:	add    al,0x0
  41a318:	(bad)  
  41a319:	xor    al,BYTE PTR [rbx]
  41a31b:	xor    BYTE PTR [rdx],al
  41a31d:	(bad)  
  41a31e:	add    DWORD PTR [rax+0x1],esi
  41a321:	add    BYTE PTR [rax],al
  41a323:	add    BYTE PTR [rcx],al
  41a325:	add    BYTE PTR [rax],al
  41a327:	add    BYTE PTR [rcx],al
  41a329:	add    al,0x1
  41a32b:	add    BYTE PTR [rdx+riz*2],al
  41a32e:	add    BYTE PTR [rax],al
  41a330:	add    DWORD PTR [rsi],eax
  41a332:	add    eax,DWORD PTR [rax]
  41a334:	(bad)  
  41a335:	rex.X add sil,BYTE PTR [rax]
  41a338:	add    DWORD PTR [rax+0x0],esp
  41a33b:	add    BYTE PTR [rcx],al
  41a33d:	or     al,BYTE PTR [rip+0x1c010a00]        # 0x1c42ad43
  41a343:	add    BYTE PTR [rbx],al
  41a345:	xor    BYTE PTR [rdx],al
  41a347:	(bad)  
  41a348:	add    DWORD PTR [rax+0x0],esi
  41a34b:	add    BYTE PTR [rcx],al
  41a34d:	add    eax,0x32050002
  41a352:	add    DWORD PTR [rax],esi
  41a354:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a35c
  41a35a:	add    DWORD PTR [rax],esi
  41a35c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a364
  41a362:	add    DWORD PTR [rax],esi
  41a364:	add    DWORD PTR [rax],eax
  41a366:	add    BYTE PTR [rax],al
  41a368:	add    DWORD PTR [rcx+rax*1],eax
  41a36b:	add    BYTE PTR [rdx+rax*2],al
  41a36e:	add    BYTE PTR [rax],al
  41a370:	add    DWORD PTR [rsi],eax
  41a372:	add    eax,DWORD PTR [rax]
  41a374:	(bad)  
  41a375:	rex.X add sil,BYTE PTR [rax]
  41a378:	add    DWORD PTR [rax+0x0],esp
  41a37b:	add    BYTE PTR [rcx],al
  41a37d:	(bad)  
  41a37e:	add    al,0x0
  41a380:	(bad)  
  41a381:	xor    al,BYTE PTR [rbx]
  41a383:	xor    BYTE PTR [rdx],al
  41a385:	(bad)  
  41a386:	add    DWORD PTR [rax+0x1],esi
  41a389:	add    eax,0x32050002
  41a38e:	add    DWORD PTR [rax],esi
  41a390:	add    DWORD PTR [rsi],eax
  41a392:	add    eax,DWORD PTR [rax]
  41a394:	(bad)  
  41a395:	rex.X add sil,BYTE PTR [rax]
  41a398:	add    DWORD PTR [rax+0x0],esp
  41a39b:	add    BYTE PTR [rcx],al
  41a39d:	add    al,0x1
  41a39f:	add    BYTE PTR [rdx+rax*2],al
  41a3a2:	add    BYTE PTR [rax],al
  41a3a4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a3ac
  41a3aa:	add    DWORD PTR [rax],esi
  41a3ac:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a3b4
  41a3b2:	add    DWORD PTR [rax],esi
  41a3b4:	add    DWORD PTR [rdx],ecx
  41a3b6:	(bad)  
  41a3b7:	add    BYTE PTR [rdx],cl
  41a3b9:	xor    al,BYTE PTR [rsi]
  41a3bb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1a821
  41a3c1:	push   rax
  41a3c2:	add    al,al
  41a3c4:	add    DWORD PTR [rdx],ecx
  41a3c6:	(bad)  
  41a3c7:	add    BYTE PTR [rdx],cl
  41a3c9:	xor    al,BYTE PTR [rsi]
  41a3cb:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1a831
  41a3d1:	push   rax
  41a3d2:	add    al,al
  41a3d4:	add    DWORD PTR [rax],ecx
  41a3d6:	add    eax,0x4420800
  41a3db:	xor    BYTE PTR [rbx],al
  41a3dd:	(bad)  
  41a3de:	add    dh,BYTE PTR [rax+0x1]
  41a3e1:	push   rax
  41a3e2:	add    BYTE PTR [rax],al
  41a3e4:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246a3ec
  41a3ea:	add    DWORD PTR [rax],esi
  41a3ec:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a3f4
  41a3f2:	add    DWORD PTR [rax],esi
  41a3f4:	add    DWORD PTR [rsi],eax
  41a3f6:	add    eax,DWORD PTR [rax]
  41a3f8:	(bad)  
  41a3f9:	rex.X add sil,BYTE PTR [rax]
  41a3fc:	add    DWORD PTR [rax+0x0],esp
  41a3ff:	add    BYTE PTR [rcx],al
  41a401:	(bad)  
  41a402:	add    al,0x0
  41a404:	(bad)  
  41a405:	xor    al,BYTE PTR [rbx]
  41a407:	xor    BYTE PTR [rdx],al
  41a409:	(bad)  
  41a40a:	add    DWORD PTR [rax+0x1],esi
  41a40d:	add    eax,0x32050002
  41a412:	add    DWORD PTR [rax],esi
  41a414:	add    DWORD PTR [rdi],eax
  41a416:	add    al,0x0
  41a418:	(bad)  
  41a419:	xor    al,BYTE PTR [rbx]
  41a41b:	xor    BYTE PTR [rdx],al
  41a41d:	(bad)  
  41a41e:	add    DWORD PTR [rax+0x1],esi
  41a421:	add    eax,0x32050002
  41a426:	add    DWORD PTR [rax],esi
  41a428:	add    DWORD PTR [rsi],eax
  41a42a:	add    eax,DWORD PTR [rax]
  41a42c:	(bad)  
  41a42d:	rex.X add sil,BYTE PTR [rax]
  41a430:	add    DWORD PTR [rax+0x0],esp
  41a433:	add    BYTE PTR [rcx],al
  41a435:	add    BYTE PTR [rax],al
  41a437:	add    BYTE PTR [rcx],al
  41a439:	or     al,BYTE PTR [rip+0x6720a05]        # 0x6b3ae44
  41a43f:	add    eax,DWORD PTR [rbx]
  41a441:	xor    BYTE PTR [rdx],al
  41a443:	(bad)  
  41a444:	add    DWORD PTR [rax+0x0],edx
  41a447:	add    BYTE PTR [rcx],al
  41a449:	sbb    ecx,DWORD PTR [rbx]
  41a44b:	test   DWORD PTR [rbx],ebx
  41a44d:	add    edx,DWORD PTR [rbx]
  41a44f:	add    DWORD PTR [rbx],ebx
  41a451:	add    BYTE PTR [rax+rsi*1],cl
  41a454:	or     esp,DWORD PTR [rax+0xa]
  41a457:	jo     0x41a462
  41a459:	rol    BYTE PTR [rdi],0xd0
  41a45c:	add    eax,0x1f003e0
  41a461:	push   rax
  41a462:	add    BYTE PTR [rax],al
  41a464:	add    DWORD PTR [rbx],edx
  41a466:	or     al,BYTE PTR [rax]
  41a468:	adc    eax,DWORD PTR [rcx]
  41a46a:	xor    eax,0xb300c00
  41a46f:	(bad)  
  41a470:	or     dh,BYTE PTR [rax+0x9]
  41a473:	push   rax
  41a474:	or     al,al
  41a476:	(bad)  
  41a477:	rol    BYTE PTR [rax+riz*8],1
  41a47a:	add    dh,al
  41a47c:	add    DWORD PTR [rcx],ebx
  41a47e:	or     al,BYTE PTR [rax]
  41a480:	sbb    DWORD PTR [rcx],eax
  41a482:	or     eax,DWORD PTR [rdx]
  41a484:	adc    DWORD PTR [rax],esi
  41a486:	adc    BYTE PTR [rax+0xf],ah
  41a489:	jo     0x41a499
  41a48b:	push   rax
  41a48c:	or     eax,0x4d00bc0
  41a491:	loopne 0x41a495
  41a493:	lock add DWORD PTR [rax],edx
  41a496:	or     DWORD PTR [rax],eax
  41a498:	adc    dl,al
  41a49a:	or     al,0x30
  41a49c:	or     esp,DWORD PTR [rax+0xa]
  41a49f:	jo     0x41a4aa
  41a4a1:	push   rax
  41a4a2:	or     al,al
  41a4a4:	(bad)  
  41a4a5:	rol    BYTE PTR [rax+riz*8],1
  41a4a8:	add    dh,al
  41a4aa:	add    BYTE PTR [rax],al
  41a4ac:	add    DWORD PTR [rdi],eax
  41a4ae:	add    al,0x0
  41a4b0:	(bad)  
  41a4b1:	xor    al,BYTE PTR [rbx]
  41a4b3:	xor    BYTE PTR [rdx],al
  41a4b5:	(bad)  
  41a4b6:	add    DWORD PTR [rax+0x1],esi
  41a4b9:	add    BYTE PTR [rax],al
  41a4bb:	add    BYTE PTR [rcx],al
  41a4bd:	add    al,0x1
  41a4bf:	add    BYTE PTR [rdx+rax*2],al
  41a4c2:	add    BYTE PTR [rax],al
  41a4c4:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a4cc
  41a4ca:	add    DWORD PTR [rax],esi
  41a4cc:	add    DWORD PTR [rsi],eax
  41a4ce:	add    eax,DWORD PTR [rax]
  41a4d0:	(bad)  
  41a4d1:	rex.X add sil,BYTE PTR [rax]
  41a4d4:	add    DWORD PTR [rax+0x0],esp
  41a4d7:	add    BYTE PTR [rcx],al
  41a4d9:	add    eax,0x32050002
  41a4de:	add    DWORD PTR [rax],esi
  41a4e0:	add    DWORD PTR [rax],eax
  41a4e2:	add    BYTE PTR [rax],al
  41a4e4:	add    DWORD PTR [rax],eax
  41a4e6:	add    BYTE PTR [rax],al
  41a4e8:	add    DWORD PTR [rcx+rax*1],eax
  41a4eb:	add    BYTE PTR [rdx+rax*2],al
  41a4ee:	add    BYTE PTR [rax],al
  41a4f0:	add    DWORD PTR [rcx+rax*1],eax
  41a4f3:	add    BYTE PTR [rdx+rax*2],al
  41a4f6:	add    BYTE PTR [rax],al
  41a4f8:	add    DWORD PTR [rax],eax
  41a4fa:	add    BYTE PTR [rax],al
  41a4fc:	add    DWORD PTR [rax],eax
  41a4fe:	add    BYTE PTR [rax],al
  41a500:	add    DWORD PTR [rsi],ecx
  41a502:	or     BYTE PTR [rax],al
  41a504:	(bad)  
  41a505:	repnz or dh,BYTE PTR [rax]
  41a508:	or     DWORD PTR [rax+0x8],esp
  41a50b:	jo     0x41a514
  41a50d:	push   rax
  41a50e:	(bad)  
  41a50f:	rol    BYTE PTR [rax+rdx*8],0x2
  41a513:	loopne 0x41a516
  41a515:	add    al,0x1
  41a517:	add    BYTE PTR [rdx+rax*2],al
  41a51a:	add    BYTE PTR [rax],al
  41a51c:	add    DWORD PTR [rcx+rax*1],eax
  41a51f:	add    BYTE PTR [rdx+rax*2],al
  41a522:	add    BYTE PTR [rax],al
  41a524:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a52c
  41a52a:	add    DWORD PTR [rax],esi
  41a52c:	add    DWORD PTR [rcx+rax*1],eax
  41a52f:	add    BYTE PTR [rdx+rax*2],al
  41a532:	add    BYTE PTR [rax],al
  41a534:	add    DWORD PTR [rax],eax
  41a536:	add    BYTE PTR [rax],al
  41a538:	add    DWORD PTR [rdi+rax*1],ecx
  41a53b:	add    BYTE PTR [rdx+rax*8],cl
  41a53e:	or     BYTE PTR [rax],dh
  41a540:	(bad)  
  41a541:	(bad)  
  41a542:	(bad)  
  41a543:	jo     0x41a54a
  41a545:	push   rax
  41a546:	add    al,0xc0
  41a548:	add    dl,al
  41a54a:	add    BYTE PTR [rax],al
  41a54c:	add    DWORD PTR [rcx+rax*1],eax
  41a54f:	add    BYTE PTR [rdx+rax*2],al
  41a552:	add    BYTE PTR [rax],al
  41a554:	add    DWORD PTR [rsi],eax
  41a556:	add    eax,DWORD PTR [rax]
  41a558:	(bad)  
  41a559:	rex.X add sil,BYTE PTR [rax]
  41a55c:	add    DWORD PTR [rax+0x0],esp
  41a55f:	add    BYTE PTR [rcx],al
  41a561:	add    eax,0x72050002
  41a566:	add    DWORD PTR [rax],esi
  41a568:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246a570
  41a56e:	add    DWORD PTR [rax],esi
  41a570:	add    DWORD PTR [rcx+rax*1],eax
  41a573:	add    BYTE PTR [rdx+rax*2],al
  41a576:	add    BYTE PTR [rax],al
  41a578:	add    DWORD PTR [rcx+rax*1],eax
  41a57b:	add    BYTE PTR [rdx+rax*2],al
  41a57e:	add    BYTE PTR [rax],al
  41a580:	add    DWORD PTR [rsi],eax
  41a582:	add    eax,DWORD PTR [rax]
  41a584:	(bad)  
  41a585:	rex.X add sil,BYTE PTR [rax]
  41a588:	add    DWORD PTR [rax+0x0],esp
  41a58b:	add    BYTE PTR [rcx],al
  41a58d:	add    BYTE PTR [rax],al
  41a58f:	add    BYTE PTR [rcx],al
  41a591:	add    BYTE PTR [rax],al
  41a593:	add    BYTE PTR [rcx],al
  41a595:	add    BYTE PTR [rax],al
  41a597:	add    BYTE PTR [rcx],al
  41a599:	or     al,BYTE PTR [rsi]
  41a59b:	add    BYTE PTR [rdx],cl
  41a59d:	jb     0x41a5a5
  41a59f:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1aa05
  41a5a5:	push   rax
  41a5a6:	add    al,al
  41a5a8:	add    DWORD PTR [rdx],ecx
  41a5aa:	add    eax,0x6d20a05
  41a5af:	add    eax,DWORD PTR [rbx]
  41a5b1:	xor    BYTE PTR [rdx],al
  41a5b3:	(bad)  
  41a5b4:	add    DWORD PTR [rax+0x0],edx
  41a5b7:	add    BYTE PTR [rcx],al
  41a5b9:	add    al,0x1
  41a5bb:	add    BYTE PTR [rdx+rax*2],al
  41a5be:	add    BYTE PTR [rax],al
  41a5c0:	add    DWORD PTR [rsi],eax
  41a5c2:	add    eax,DWORD PTR [rax]
  41a5c4:	(bad)  
  41a5c5:	rex.X add sil,BYTE PTR [rax]
  41a5c8:	add    DWORD PTR [rax+0x0],esp
  41a5cb:	add    BYTE PTR [rcx],al
  41a5cd:	add    BYTE PTR [rax],al
  41a5cf:	add    BYTE PTR [rcx],al
  41a5d1:	add    al,0x1
  41a5d3:	add    BYTE PTR [rdx+riz*4],al
  41a5d6:	add    BYTE PTR [rax],al
  41a5d8:	add    DWORD PTR [rax],eax
  41a5da:	add    BYTE PTR [rax],al
  41a5dc:	add    DWORD PTR [rsi],edx
  41a5de:	or     DWORD PTR [rax],eax
  41a5e0:	(bad)  
  41a5e1:	mov    BYTE PTR [rsi],al
  41a5e3:	add    BYTE PTR [rax],dl
  41a5e5:	js     0x41a5ec
  41a5e7:	add    BYTE PTR [rbx],cl
  41a5e9:	push   0xffffffffe2060004
  41a5ee:	add    dh,BYTE PTR [rax]
  41a5f0:	add    DWORD PTR [rax+0x0],esp
  41a5f3:	add    BYTE PTR [rcx],al
  41a5f5:	add    BYTE PTR [rax],al
  41a5f7:	add    BYTE PTR [rcx],al
  41a5f9:	add    BYTE PTR [rax],al
  41a5fb:	add    BYTE PTR [rcx],al
  41a5fd:	add    BYTE PTR [rax],al
  41a5ff:	add    BYTE PTR [rcx],al
  41a601:	(bad)  
  41a602:	add    eax,DWORD PTR [rax]
  41a604:	(bad)  
  41a605:	(bad)  
  41a607:	xor    BYTE PTR [rcx],al
  41a609:	(bad)  
  41a60a:	add    BYTE PTR [rax],al
  41a60c:	add    DWORD PTR [rdi+rax*1],ecx
  41a60f:	add    BYTE PTR [rdx+riz*4],cl
  41a612:	or     BYTE PTR [rax],dh
  41a614:	(bad)  
  41a615:	(bad)  
  41a616:	(bad)  
  41a617:	jo     0x41a61e
  41a619:	push   rax
  41a61a:	add    al,0xc0
  41a61c:	add    dl,al
  41a61e:	add    BYTE PTR [rax],al
  41a620:	add    DWORD PTR [rcx],edx
  41a622:	or     DWORD PTR [rip+0x30db211],eax        # 0x34f5839
  41a628:	or     dh,BYTE PTR [rax]
  41a62a:	or     DWORD PTR [rax+0x8],esp
  41a62d:	jo     0x41a636
  41a62f:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x221aa06
  41a636:	add    BYTE PTR [rax],al
  41a638:	add    DWORD PTR [rcx+rax*1],eax
  41a63b:	add    BYTE PTR [rdx+rax*2],al
  41a63e:	add    BYTE PTR [rax],al
  41a640:	add    DWORD PTR [rdx],ecx
  41a642:	(bad)  
  41a643:	add    BYTE PTR [rdx],cl
  41a645:	xor    al,BYTE PTR [rsi]
  41a647:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1aaad
  41a64d:	push   rax
  41a64e:	add    al,al
  41a650:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a658
  41a656:	add    DWORD PTR [rax],esi
  41a658:	add    DWORD PTR [rax],ecx
  41a65a:	add    eax,0x4420800
  41a65f:	xor    BYTE PTR [rbx],al
  41a661:	(bad)  
  41a662:	add    dh,BYTE PTR [rax+0x1]
  41a665:	push   rax
  41a666:	add    BYTE PTR [rax],al
  41a668:	add    DWORD PTR [rdi],eax
  41a66a:	add    al,0x0
  41a66c:	(bad)  
  41a66d:	xor    al,BYTE PTR [rbx]
  41a66f:	xor    BYTE PTR [rdx],al
  41a671:	(bad)  
  41a672:	add    DWORD PTR [rax+0x1],esi
  41a675:	add    eax,0x32050002
  41a67a:	add    DWORD PTR [rax],esi
  41a67c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a684
  41a682:	add    DWORD PTR [rax],esi
  41a684:	add    DWORD PTR [rax],eax
  41a686:	add    BYTE PTR [rax],al
  41a688:	add    DWORD PTR [rax],eax
  41a68a:	add    BYTE PTR [rax],al
  41a68c:	add    DWORD PTR [rax],eax
  41a68e:	add    BYTE PTR [rax],al
  41a690:	add    DWORD PTR [rdi],eax
  41a692:	add    al,0x0
  41a694:	(bad)  
  41a695:	xor    al,BYTE PTR [rbx]
  41a697:	xor    BYTE PTR [rdx],al
  41a699:	(bad)  
  41a69a:	add    DWORD PTR [rax+0x1],esi
  41a69d:	(bad)  
  41a69e:	add    eax,DWORD PTR [rax]
  41a6a0:	(bad)  
  41a6a1:	rex.X add sil,BYTE PTR [rax]
  41a6a4:	add    DWORD PTR [rax+0x0],esp
  41a6a7:	add    BYTE PTR [rcx],al
  41a6a9:	add    eax,0x32050002
  41a6ae:	add    DWORD PTR [rax],esi
  41a6b0:	add    DWORD PTR [rdi],eax
  41a6b2:	add    al,0x0
  41a6b4:	(bad)  
  41a6b5:	xor    al,BYTE PTR [rbx]
  41a6b7:	xor    BYTE PTR [rdx],al
  41a6b9:	(bad)  
  41a6ba:	add    DWORD PTR [rax+0x1],esi
  41a6bd:	(bad)  
  41a6be:	add    eax,DWORD PTR [rax]
  41a6c0:	(bad)  
  41a6c1:	rex.X add sil,BYTE PTR [rax]
  41a6c4:	add    DWORD PTR [rax+0x0],esp
  41a6c7:	add    BYTE PTR [rcx],al
  41a6c9:	(bad)  
  41a6ca:	add    eax,DWORD PTR [rax]
  41a6cc:	(bad)  
  41a6cd:	rex.X add sil,BYTE PTR [rax]
  41a6d0:	add    DWORD PTR [rax+0x0],esp
  41a6d3:	add    BYTE PTR [rcx],al
  41a6d5:	or     BYTE PTR [rip+0x4420800],al        # 0x483aedb
  41a6db:	xor    BYTE PTR [rbx],al
  41a6dd:	(bad)  
  41a6de:	add    dh,BYTE PTR [rax+0x1]
  41a6e1:	push   rax
  41a6e2:	add    BYTE PTR [rax],al
  41a6e4:	add    DWORD PTR [rax],ecx
  41a6e6:	add    eax,0x4820800
  41a6eb:	xor    BYTE PTR [rbx],al
  41a6ed:	(bad)  
  41a6ee:	add    dh,BYTE PTR [rax+0x1]
  41a6f1:	push   rax
  41a6f2:	add    BYTE PTR [rax],al
  41a6f4:	add    DWORD PTR [rax],ecx
  41a6f6:	add    eax,0x4a20800
  41a6fb:	xor    BYTE PTR [rbx],al
  41a6fd:	(bad)  
  41a6fe:	add    dh,BYTE PTR [rax+0x1]
  41a701:	push   rax
  41a702:	add    BYTE PTR [rax],al
  41a704:	add    DWORD PTR [rax],edx
  41a706:	or     DWORD PTR [rax],eax
  41a708:	adc    BYTE PTR [rdx+0x600b300c],al
  41a70e:	or     dh,BYTE PTR [rax+0x9]
  41a711:	push   rax
  41a712:	or     al,al
  41a714:	(bad)  
  41a715:	rol    BYTE PTR [rax+riz*8],1
  41a718:	add    dh,al
  41a71a:	add    BYTE PTR [rax],al
  41a71c:	add    DWORD PTR [rax],ecx
  41a71e:	add    eax,0x4820800
  41a723:	xor    BYTE PTR [rbx],al
  41a725:	(bad)  
  41a726:	add    dh,BYTE PTR [rax+0x1]
  41a729:	push   rax
  41a72a:	add    BYTE PTR [rax],al
  41a72c:	add    DWORD PTR [rax],eax
  41a72e:	add    BYTE PTR [rax],al
  41a730:	add    DWORD PTR [rip+0x10d0007],ecx        # 0x14ea73d
  41a736:	rex.WX add BYTE PTR [rsi],al
  41a739:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1ab9f
  41a73f:	push   rax
  41a740:	add    al,al
  41a742:	add    BYTE PTR [rax],al
  41a744:	add    DWORD PTR [rax],ecx
  41a746:	add    eax,0x4620800
  41a74b:	xor    BYTE PTR [rbx],al
  41a74d:	(bad)  
  41a74e:	add    dh,BYTE PTR [rax+0x1]
  41a751:	push   rax
  41a752:	add    BYTE PTR [rax],al
  41a754:	add    DWORD PTR [rcx+rax*1],eax
  41a757:	add    BYTE PTR [rdx+riz*2],al
  41a75a:	add    BYTE PTR [rax],al
  41a75c:	add    DWORD PTR [rip+0x52050002],eax        # 0x5246a764
  41a762:	add    DWORD PTR [rax],esi
  41a764:	add    DWORD PTR [rcx+rax*1],eax
  41a767:	add    BYTE PTR [rdx+riz*4],al
  41a76a:	add    BYTE PTR [rax],al
  41a76c:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a774
  41a772:	add    DWORD PTR [rax],esi
  41a774:	add    DWORD PTR [rsi],ecx
  41a776:	or     BYTE PTR [rax],al
  41a778:	(bad)  
  41a779:	jb     0x41a785
  41a77b:	xor    BYTE PTR [rcx],cl
  41a77d:	(bad)  
  41a77e:	or     BYTE PTR [rax+0x7],dh
  41a781:	push   rax
  41a782:	(bad)  
  41a783:	rol    BYTE PTR [rax+rdx*8],0x2
  41a787:	loopne 0x41a78a
  41a789:	(bad)  
  41a78a:	add    al,0x0
  41a78c:	(bad)  
  41a78d:	xor    al,BYTE PTR [rbx]
  41a78f:	xor    BYTE PTR [rdx],al
  41a791:	(bad)  
  41a792:	add    DWORD PTR [rax+0x1],esi
  41a795:	add    al,0x1
  41a797:	add    BYTE PTR [rdx+riz*2],al
  41a79a:	add    BYTE PTR [rax],al
  41a79c:	add    DWORD PTR [rip+0x520d0507],ecx        # 0x524eaca9
  41a7a2:	or     DWORD PTR [rbx],eax
  41a7a4:	(bad)  
  41a7a5:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1ac0b
  41a7ab:	rol    BYTE PTR [rcx],0x50
  41a7ae:	add    BYTE PTR [rax],al
  41a7b0:	add    DWORD PTR [rdx],ecx
  41a7b2:	(bad)  
  41a7b3:	add    BYTE PTR [rdx],cl
  41a7b5:	xor    al,BYTE PTR [rsi]
  41a7b7:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b1ac1d
  41a7bd:	push   rax
  41a7be:	add    al,al
  41a7c0:	add    DWORD PTR [rsi],eax
  41a7c2:	add    eax,DWORD PTR [rax]
  41a7c4:	(bad)  
  41a7c5:	ret    0x3002
  41a7c8:	add    DWORD PTR [rax+0x0],esp
  41a7cb:	add    BYTE PTR [rcx],al
  41a7cd:	adc    al,0x8
  41a7cf:	test   DWORD PTR [rbx+rax*1],edx
  41a7d2:	or     al,0x42
  41a7d4:	or     BYTE PTR [rax],dh
  41a7d6:	(bad)  
  41a7d7:	(bad)  
  41a7d8:	(bad)  
  41a7d9:	jo     0x41a7e0
  41a7db:	rol    BYTE PTR [rbx],0xd0
  41a7de:	add    DWORD PTR [rax+0x1],edx
  41a7e1:	(bad)  
  41a7e2:	add    al,0x0
  41a7e4:	(bad)  
  41a7e5:	xor    al,BYTE PTR [rbx]
  41a7e7:	xor    BYTE PTR [rdx],al
  41a7e9:	(bad)  
  41a7ea:	add    DWORD PTR [rax+0x1],esi
  41a7ed:	(bad)  
  41a7ee:	add    eax,DWORD PTR [rax]
  41a7f0:	(bad)  
  41a7f1:	ret    0x3002
  41a7f4:	add    DWORD PTR [rax+0x0],esp
  41a7f7:	add    BYTE PTR [rcx],al
  41a7f9:	(bad)  
  41a7fa:	add    eax,DWORD PTR [rax]
  41a7fc:	(bad)  
  41a7fd:	loop   0x41a801
  41a7ff:	xor    BYTE PTR [rcx],al
  41a801:	(bad)  
  41a802:	add    BYTE PTR [rax],al
  41a804:	add    DWORD PTR [rcx],edx
  41a806:	or     DWORD PTR [rip+0x30d3211],eax        # 0x34eda1d
  41a80c:	or     dh,BYTE PTR [rax]
  41a80e:	or     DWORD PTR [rax+0x8],esp
  41a811:	jo     0x41a81a
  41a813:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x221abea
  41a81a:	add    BYTE PTR [rax],al
  41a81c:	add    DWORD PTR [rdi+rax*1],ecx
  41a81f:	add    BYTE PTR [rdx+rax*8],cl
  41a822:	or     BYTE PTR [rax],dh
  41a824:	(bad)  
  41a825:	(bad)  
  41a826:	(bad)  
  41a827:	jo     0x41a82e
  41a829:	push   rax
  41a82a:	add    al,0xc0
  41a82c:	add    dl,al
  41a82e:	add    BYTE PTR [rax],al
  41a830:	add    DWORD PTR [rbx],edx
  41a832:	or     al,BYTE PTR [rax]
  41a834:	adc    eax,DWORD PTR [rcx]
  41a836:	(bad)  
  41a837:	add    BYTE PTR [rax+rsi*1],cl
  41a83a:	or     esp,DWORD PTR [rax+0xa]
  41a83d:	jo     0x41a848
  41a83f:	push   rax
  41a840:	or     al,al
  41a842:	(bad)  
  41a843:	rol    BYTE PTR [rax+riz*8],1
  41a846:	add    dh,al
  41a848:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a850
  41a84e:	add    DWORD PTR [rax],esi
  41a850:	add    DWORD PTR [rsi],eax
  41a852:	add    eax,DWORD PTR [rax]
  41a854:	(bad)  
  41a855:	rex.X add sil,BYTE PTR [rax]
  41a858:	add    DWORD PTR [rax+0x0],esp
  41a85b:	add    BYTE PTR [rcx],al
  41a85d:	add    BYTE PTR [rax],al
  41a85f:	add    BYTE PTR [rcx],al
  41a861:	adc    BYTE PTR [rcx],cl
  41a863:	add    BYTE PTR [rax],dl
  41a865:	(bad)  
  41a866:	or     al,0x30
  41a868:	or     esp,DWORD PTR [rax+0xa]
  41a86b:	jo     0x41a876
  41a86d:	push   rax
  41a86e:	or     al,al
  41a870:	(bad)  
  41a871:	rol    BYTE PTR [rax+riz*8],1
  41a874:	add    dh,al
  41a876:	add    BYTE PTR [rax],al
  41a878:	add    DWORD PTR [rbx],ebx
  41a87a:	or     al,0x0
  41a87c:	sbb    ebp,DWORD PTR [rax+0xa]
  41a87f:	add    BYTE PTR [rbx],dl
  41a881:	add    DWORD PTR [rdi],edx
  41a883:	add    BYTE PTR [rax+rsi*1],cl
  41a886:	or     esp,DWORD PTR [rax+0xa]
  41a889:	jo     0x41a894
  41a88b:	push   rax
  41a88c:	or     al,al
  41a88e:	(bad)  
  41a88f:	rol    BYTE PTR [rax+riz*8],1
  41a892:	add    dh,al
  41a894:	add    DWORD PTR [rsp+rax*1],eax
  41a897:	add    BYTE PTR [rax+rsi*1],al
  41a89a:	add    esp,DWORD PTR [rax+0x2]
  41a89d:	jo     0x41a8a0
  41a89f:	push   rax
  41a8a0:	add    DWORD PTR [rax],eax
  41a8a2:	add    BYTE PTR [rax],al
  41a8a4:	add    DWORD PTR [rsi],eax
  41a8a6:	add    eax,DWORD PTR [rax]
  41a8a8:	(bad)  
  41a8a9:	rex.X add sil,BYTE PTR [rax]
  41a8ac:	add    DWORD PTR [rax+0x0],esp
  41a8af:	add    BYTE PTR [rcx],al
  41a8b1:	add    eax,0x32050002
  41a8b6:	add    DWORD PTR [rax],esi
  41a8b8:	add    DWORD PTR [rdi],eax
  41a8ba:	add    al,0x0
  41a8bc:	(bad)  
  41a8bd:	xor    al,BYTE PTR [rbx]
  41a8bf:	xor    BYTE PTR [rdx],al
  41a8c1:	(bad)  
  41a8c2:	add    DWORD PTR [rax+0x1],esi
  41a8c5:	add    eax,0x32050002
  41a8ca:	add    DWORD PTR [rax],esi
  41a8cc:	add    DWORD PTR [rax],ecx
  41a8ce:	add    eax,0x4420800
  41a8d3:	xor    BYTE PTR [rbx],al
  41a8d5:	(bad)  
  41a8d6:	add    dh,BYTE PTR [rax+0x1]
  41a8d9:	push   rax
  41a8da:	add    BYTE PTR [rax],al
  41a8dc:	add    DWORD PTR [rip+0x32050002],eax        # 0x3246a8e4
  41a8e2:	add    DWORD PTR [rax],esi
  41a8e4:	add    DWORD PTR [rsi],ecx
  41a8e6:	or     BYTE PTR [rax],al
  41a8e8:	(bad)  
  41a8e9:	xor    cl,BYTE PTR [rdx]
  41a8eb:	xor    BYTE PTR [rcx],cl
  41a8ed:	(bad)  
  41a8ee:	or     BYTE PTR [rax+0x7],dh
  41a8f1:	push   rax
  41a8f2:	(bad)  
  41a8f3:	rol    BYTE PTR [rax+rdx*8],0x2
  41a8f7:	loopne 0x41a8fa
  41a8f9:	or     BYTE PTR [rip+0x4420800],al        # 0x483b0ff
  41a8ff:	xor    BYTE PTR [rbx],al
  41a901:	(bad)  
  41a902:	add    dh,BYTE PTR [rax+0x1]
  41a905:	push   rax
  41a906:	add    BYTE PTR [rax],al
  41a908:	add    DWORD PTR [rdi+rax*1],ecx
  41a90b:	add    BYTE PTR [rdx+rax*2],cl
  41a90e:	or     BYTE PTR [rax],dh
  41a910:	(bad)  
  41a911:	(bad)  
  41a912:	(bad)  
  41a913:	jo     0x41a91a
  41a915:	push   rax
  41a916:	add    al,0xc0
  41a918:	add    dl,al
  41a91a:	add    BYTE PTR [rax],al
  41a91c:	add    DWORD PTR [rax],eax
  41a91e:	add    BYTE PTR [rax],al
  41a920:	add    DWORD PTR [rdi],eax
  41a922:	add    al,0x0
  41a924:	(bad)  
  41a925:	xor    al,BYTE PTR [rbx]
  41a927:	xor    BYTE PTR [rdx],al
  41a929:	(bad)  
  41a92a:	add    DWORD PTR [rax+0x1],esi
  41a92d:	(bad)  
  41a92e:	add    eax,DWORD PTR [rax]
  41a930:	(bad)  
  41a931:	and    al,BYTE PTR [rdx]
  41a933:	xor    BYTE PTR [rcx],al
  41a935:	(bad)  
  41a936:	add    BYTE PTR [rax],al
  41a938:	add    DWORD PTR [rdi],eax
  41a93a:	add    al,0x0
  41a93c:	(bad)  
  41a93d:	xor    al,BYTE PTR [rbx]
  41a93f:	xor    BYTE PTR [rdx],al
  41a941:	(bad)  
  41a942:	add    DWORD PTR [rax+0x1],esi
  41a945:	add    BYTE PTR [rax],al
  41a947:	add    BYTE PTR [rcx],al
  41a949:	add    al,0x1
  41a94b:	add    BYTE PTR [rdx+riz*4],al
  41a94e:	add    BYTE PTR [rax],al
  41a950:	add    DWORD PTR [rdi],eax
  41a952:	add    al,0x0
  41a954:	(bad)  
  41a955:	push   rdx
  41a956:	add    esi,DWORD PTR [rax]
  41a958:	add    ah,BYTE PTR [rax+0x1]
  41a95b:	jo     0x41a95e
  41a95d:	(bad)  
  41a95e:	or     BYTE PTR [rax],al
  41a960:	(bad)  
  41a961:	push   rdx
  41a962:	or     dh,BYTE PTR [rax]
  41a964:	or     DWORD PTR [rax+0x8],esp
  41a967:	jo     0x41a970
  41a969:	push   rax
  41a96a:	(bad)  
  41a96b:	rol    BYTE PTR [rax+rdx*8],0x2
  41a96f:	loopne 0x41a972
  41a971:	add    BYTE PTR [rax],al
  41a973:	add    BYTE PTR [rcx],al
  41a975:	add    BYTE PTR [rax],al
  41a977:	add    BYTE PTR [rcx],al
  41a979:	add    BYTE PTR [rax],al
  41a97b:	add    BYTE PTR [rcx],al
  41a97d:	add    BYTE PTR [rax],al
  41a97f:	add    BYTE PTR [rcx],al
  41a981:	add    eax,0x32050002
  41a986:	add    DWORD PTR [rax],esi
  41a988:	add    DWORD PTR [rcx+rax*1],eax
  41a98b:	add    BYTE PTR [rdx+rax*2],al
  41a98e:	add    BYTE PTR [rax],al
  41a990:	add    DWORD PTR [rax],eax
  41a992:	add    BYTE PTR [rax],al
  41a994:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

000000000041b000 <.bss>:
	...

Disassembly of section .idata:

000000000041e000 <.idata>:
  41e000:	js     0x41dfe2
  41e002:	add    DWORD PTR [rax],eax
	...
  41e00c:	jo     0x41dffc
  41e00e:	add    DWORD PTR [rax],eax
  41e010:	sub    ah,ah
  41e012:	add    DWORD PTR [rax],eax
  41e014:	movabs al,ds:0x1e0
  41e01d:	add    BYTE PTR [rax],al
  41e01f:	add    BYTE PTR [rsi+rbp*8-0x1bafffff],cl
  41e026:	add    DWORD PTR [rax],eax
  41e028:	shl    al,0x1
	...
  41e033:	add    BYTE PTR [rax],bh
  41e035:	out    dx,eax
  41e036:	add    DWORD PTR [rax],eax
  41e038:	jo     0x41e01e
  41e03a:	add    DWORD PTR [rax],eax
  41e03c:	add    dl,ah
  41e03e:	add    DWORD PTR [rax],eax
	...
  41e048:	push   rax
  41e049:	lock add DWORD PTR [rax],eax
  41e04c:	mov    al,0xe5
  41e04e:	add    DWORD PTR [rax],eax
  41e050:	sbb    ah,ah
  41e052:	add    DWORD PTR [rax],eax
	...
  41e05c:	(bad)  
  41e05d:	lock add DWORD PTR [rax],eax
  41e060:	enter  0x1e7,0x0
	...
  41e078:	fsub   st,st(7)
  41e07a:	add    DWORD PTR [rax],eax
  41e07c:	add    BYTE PTR [rax],al
  41e07e:	add    BYTE PTR [rax],al
  41e080:	hlt    
  41e081:	out    0x1,eax
  41e083:	add    BYTE PTR [rax],al
  41e085:	add    BYTE PTR [rax],al
  41e087:	add    BYTE PTR [rax],cl
  41e089:	call   0x41e08f
  41e08e:	add    BYTE PTR [rax],al
  41e090:	sbb    al,0xe8
  41e092:	add    DWORD PTR [rax],eax
	...
  41e0a0:	xor    al,0xe8
  41e0a2:	add    DWORD PTR [rax],eax
  41e0a4:	add    BYTE PTR [rax],al
  41e0a6:	add    BYTE PTR [rax],al
  41e0a8:	rex call 0x41e0af
  41e0ae:	add    BYTE PTR [rax],al
  41e0b0:	push   rsp
  41e0b1:	call   0x41e0b7
	...
  41e0be:	add    BYTE PTR [rax],al
  41e0c0:	fs call 0x41e0c7
  41e0c6:	add    BYTE PTR [rax],al
  41e0c8:	jb     0x41e0b2
  41e0ca:	add    DWORD PTR [rax],eax
  41e0cc:	add    BYTE PTR [rax],al
  41e0ce:	add    BYTE PTR [rax],al
  41e0d0:	(bad)  
  41e0d1:	call   0x41e0d7
  41e0d6:	add    BYTE PTR [rax],al
  41e0d8:	(bad)  
  41e0d9:	call   0x41e0df
  41e0de:	add    BYTE PTR [rax],al
  41e0e0:	mov    dl,0xe8
  41e0e2:	add    DWORD PTR [rax],eax
  41e0e4:	add    BYTE PTR [rax],al
  41e0e6:	add    BYTE PTR [rax],al
  41e0e8:	enter  0x1e8,0x0
  41e0ec:	add    BYTE PTR [rax],al
  41e0ee:	add    BYTE PTR [rax],al
  41e0f0:	shr    al,cl
  41e0f2:	add    DWORD PTR [rax],eax
  41e0f4:	add    BYTE PTR [rax],al
  41e0f6:	add    BYTE PTR [rax],al
  41e0f8:	out    0xe8,al
  41e0fa:	add    DWORD PTR [rax],eax
  41e0fc:	add    BYTE PTR [rax],al
  41e0fe:	add    BYTE PTR [rax],al
  41e100:	cld    
  41e101:	call   0x41e107
  41e106:	add    BYTE PTR [rax],al
  41e108:	adc    ch,cl
  41e10a:	add    DWORD PTR [rax],eax
  41e10c:	add    BYTE PTR [rax],al
  41e10e:	add    BYTE PTR [rax],al
  41e110:	and    cl,ch
  41e112:	add    DWORD PTR [rax],eax
  41e114:	add    BYTE PTR [rax],al
  41e116:	add    BYTE PTR [rax],al
  41e118:	xor    cl,ch
  41e11a:	add    DWORD PTR [rax],eax
  41e11c:	add    BYTE PTR [rax],al
  41e11e:	add    BYTE PTR [rax],al
  41e120:	rex.X jmp 0x41e127
  41e126:	add    BYTE PTR [rax],al
  41e128:	pop    rax
  41e129:	jmp    0x41e12f
  41e12e:	add    BYTE PTR [rax],al
  41e130:	ins    BYTE PTR es:[rdi],dx
  41e131:	jmp    0x41e137
  41e136:	add    BYTE PTR [rax],al
  41e138:	jle    0x41e123
  41e13a:	add    DWORD PTR [rax],eax
  41e13c:	add    BYTE PTR [rax],al
  41e13e:	add    BYTE PTR [rax],al
  41e140:	nop
  41e141:	jmp    0x41e147
  41e146:	add    BYTE PTR [rax],al
  41e148:	stos   BYTE PTR es:[rdi],al
  41e149:	jmp    0x41e14f
  41e14e:	add    BYTE PTR [rax],al
  41e150:	mov    esp,0x1e9
  41e155:	add    BYTE PTR [rax],al
  41e157:	add    ah,cl
  41e159:	jmp    0x41e15f
  41e15e:	add    BYTE PTR [rax],al
  41e160:	call   0x41e34e
  41e165:	add    BYTE PTR [rax],al
  41e167:	add    ah,bh
  41e169:	jmp    0x41e16f
  41e16e:	add    BYTE PTR [rax],al
  41e170:	adc    al,0xea
  41e172:	add    DWORD PTR [rax],eax
  41e174:	add    BYTE PTR [rax],al
  41e176:	add    BYTE PTR [rax],al
  41e178:	sub    ch,dl
  41e17a:	add    DWORD PTR [rax],eax
  41e17c:	add    BYTE PTR [rax],al
  41e17e:	add    BYTE PTR [rax],al
  41e180:	rex.R (bad) 
  41e182:	add    DWORD PTR [rax],eax
  41e184:	add    BYTE PTR [rax],al
  41e186:	add    BYTE PTR [rax],al
  41e188:	pop    rdx
  41e189:	(bad)  
  41e18a:	add    DWORD PTR [rax],eax
  41e18c:	add    BYTE PTR [rax],al
  41e18e:	add    BYTE PTR [rax],al
  41e190:	outs   dx,BYTE PTR ds:[rsi]
  41e191:	(bad)  
  41e192:	add    DWORD PTR [rax],eax
  41e194:	add    BYTE PTR [rax],al
  41e196:	add    BYTE PTR [rax],al
  41e198:	mov    dl,ch
  41e19a:	add    DWORD PTR [rax],eax
  41e19c:	add    BYTE PTR [rax],al
  41e19e:	add    BYTE PTR [rax],al
  41e1a0:	pushf  
  41e1a1:	(bad)  
  41e1a2:	add    DWORD PTR [rax],eax
  41e1a4:	add    BYTE PTR [rax],al
  41e1a6:	add    BYTE PTR [rax],al
  41e1a8:	test   al,0xea
  41e1aa:	add    DWORD PTR [rax],eax
  41e1ac:	add    BYTE PTR [rax],al
  41e1ae:	add    BYTE PTR [rax],al
  41e1b0:	mov    eax,0x1ea
  41e1b5:	add    BYTE PTR [rax],al
  41e1b7:	add    dh,dl
  41e1b9:	(bad)  
  41e1ba:	add    DWORD PTR [rax],eax
  41e1bc:	add    BYTE PTR [rax],al
  41e1be:	add    BYTE PTR [rax],al
  41e1c0:	fsubp  st(2),st
  41e1c2:	add    DWORD PTR [rax],eax
  41e1c4:	add    BYTE PTR [rax],al
  41e1c6:	add    BYTE PTR [rax],al
  41e1c8:	repnz (bad) 
  41e1ca:	add    DWORD PTR [rax],eax
  41e1cc:	add    BYTE PTR [rax],al
  41e1ce:	add    BYTE PTR [rax],al
  41e1d0:	add    bl,ch
  41e1d2:	add    DWORD PTR [rax],eax
  41e1d4:	add    BYTE PTR [rax],al
  41e1d6:	add    BYTE PTR [rax],al
  41e1d8:	sbb    al,0xeb
  41e1da:	add    DWORD PTR [rax],eax
  41e1dc:	add    BYTE PTR [rax],al
  41e1de:	add    BYTE PTR [rax],al
  41e1e0:	cs jmp 0x41e1e4
  41e1e3:	add    BYTE PTR [rax],al
  41e1e5:	add    BYTE PTR [rax],al
  41e1e7:	add    BYTE PTR [rsi],bh
  41e1e9:	jmp    0x41e1ec
  41e1eb:	add    BYTE PTR [rax],al
  41e1ed:	add    BYTE PTR [rax],al
  41e1ef:	add    BYTE PTR [rbx+rbp*8+0x1],dl
	...
  41e1ff:	add    BYTE PTR [rdx-0x15],ch
  41e202:	add    DWORD PTR [rax],eax
  41e204:	add    BYTE PTR [rax],al
  41e206:	add    BYTE PTR [rax],al
  41e208:	(bad)  
  41e209:	jmp    0x41e20c
  41e20b:	add    BYTE PTR [rax],al
  41e20d:	add    BYTE PTR [rax],al
  41e20f:	add    BYTE PTR [rax+0x1eb],bl
  41e215:	add    BYTE PTR [rax],al
  41e217:	add    BYTE PTR [rsi+0x1eb],ah
  41e21d:	add    BYTE PTR [rax],al
  41e21f:	add    BYTE PTR [rsi+0x1eb],dh
  41e225:	add    BYTE PTR [rax],al
  41e227:	add    dl,al
  41e229:	jmp    0x41e22c
  41e22b:	add    BYTE PTR [rax],al
  41e22d:	add    BYTE PTR [rax],al
  41e22f:	add    al,dl
  41e231:	jmp    0x41e234
  41e233:	add    BYTE PTR [rax],al
  41e235:	add    BYTE PTR [rax],al
  41e237:	add    al,ah
  41e239:	jmp    0x41e23c
  41e23b:	add    BYTE PTR [rax],al
  41e23d:	add    BYTE PTR [rax],al
  41e23f:	add    al,dh
  41e241:	jmp    0x41e244
  41e243:	add    BYTE PTR [rax],al
  41e245:	add    BYTE PTR [rax],al
  41e247:	add    BYTE PTR [rdx],al
  41e249:	in     al,dx
  41e24a:	add    DWORD PTR [rax],eax
  41e24c:	add    BYTE PTR [rax],al
  41e24e:	add    BYTE PTR [rax],al
  41e250:	(bad)  
  41e251:	in     al,dx
  41e252:	add    DWORD PTR [rax],eax
  41e254:	add    BYTE PTR [rax],al
  41e256:	add    BYTE PTR [rax],al
  41e258:	and    ah,ch
  41e25a:	add    DWORD PTR [rax],eax
  41e25c:	add    BYTE PTR [rax],al
  41e25e:	add    BYTE PTR [rax],al
  41e260:	cs in  al,dx
  41e262:	add    DWORD PTR [rax],eax
  41e264:	add    BYTE PTR [rax],al
  41e266:	add    BYTE PTR [rax],al
  41e268:	cmp    ah,ch
  41e26a:	add    DWORD PTR [rax],eax
  41e26c:	add    BYTE PTR [rax],al
  41e26e:	add    BYTE PTR [rax],al
  41e270:	rex.X in al,dx
  41e272:	add    DWORD PTR [rax],eax
  41e274:	add    BYTE PTR [rax],al
  41e276:	add    BYTE PTR [rax],al
  41e278:	rex.WX in al,dx
  41e27a:	add    DWORD PTR [rax],eax
  41e27c:	add    BYTE PTR [rax],al
  41e27e:	add    BYTE PTR [rax],al
  41e280:	push   rsp
  41e281:	in     al,dx
  41e282:	add    DWORD PTR [rax],eax
  41e284:	add    BYTE PTR [rax],al
  41e286:	add    BYTE PTR [rax],al
  41e288:	data16 in al,dx
  41e28a:	add    DWORD PTR [rax],eax
  41e28c:	add    BYTE PTR [rax],al
  41e28e:	add    BYTE PTR [rax],al
  41e290:	jb     0x41e27e
  41e292:	add    DWORD PTR [rax],eax
  41e294:	add    BYTE PTR [rax],al
  41e296:	add    BYTE PTR [rax],al
  41e298:	jp     0x41e286
  41e29a:	add    DWORD PTR [rax],eax
  41e29c:	add    BYTE PTR [rax],al
  41e29e:	add    BYTE PTR [rax],al
  41e2a0:	test   ah,ch
  41e2a2:	add    DWORD PTR [rax],eax
  41e2a4:	add    BYTE PTR [rax],al
  41e2a6:	add    BYTE PTR [rax],al
  41e2a8:	xchg   edx,eax
  41e2a9:	in     al,dx
  41e2aa:	add    DWORD PTR [rax],eax
  41e2ac:	add    BYTE PTR [rax],al
  41e2ae:	add    BYTE PTR [rax],al
  41e2b0:	pushf  
  41e2b1:	in     al,dx
  41e2b2:	add    DWORD PTR [rax],eax
  41e2b4:	add    BYTE PTR [rax],al
  41e2b6:	add    BYTE PTR [rax],al
  41e2b8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41e2b9:	in     al,dx
  41e2ba:	add    DWORD PTR [rax],eax
  41e2bc:	add    BYTE PTR [rax],al
  41e2be:	add    BYTE PTR [rax],al
  41e2c0:	scas   al,BYTE PTR es:[rdi]
  41e2c1:	in     al,dx
  41e2c2:	add    DWORD PTR [rax],eax
  41e2c4:	add    BYTE PTR [rax],al
  41e2c6:	add    BYTE PTR [rax],al
  41e2c8:	mov    dh,0xec
  41e2ca:	add    DWORD PTR [rax],eax
  41e2cc:	add    BYTE PTR [rax],al
  41e2ce:	add    BYTE PTR [rax],al
  41e2d0:	shr    ah,0x1
  41e2d3:	add    BYTE PTR [rax],al
  41e2d5:	add    BYTE PTR [rax],al
  41e2d7:	add    dl,cl
  41e2d9:	in     al,dx
  41e2da:	add    DWORD PTR [rax],eax
  41e2dc:	add    BYTE PTR [rax],al
  41e2de:	add    BYTE PTR [rax],al
  41e2e0:	(bad)  
  41e2e1:	in     al,dx
  41e2e2:	add    DWORD PTR [rax],eax
  41e2e4:	add    BYTE PTR [rax],al
  41e2e6:	add    BYTE PTR [rax],al
  41e2e8:	fsubp  st(4),st
  41e2ea:	add    DWORD PTR [rax],eax
  41e2ec:	add    BYTE PTR [rax],al
  41e2ee:	add    BYTE PTR [rax],al
  41e2f0:	out    0xec,al
  41e2f2:	add    DWORD PTR [rax],eax
  41e2f4:	add    BYTE PTR [rax],al
  41e2f6:	add    BYTE PTR [rax],al
  41e2f8:	out    dx,al
  41e2f9:	in     al,dx
  41e2fa:	add    DWORD PTR [rax],eax
  41e2fc:	add    BYTE PTR [rax],al
  41e2fe:	add    BYTE PTR [rax],al
  41e300:	imul   ah
  41e302:	add    DWORD PTR [rax],eax
  41e304:	add    BYTE PTR [rax],al
  41e306:	add    BYTE PTR [rax],al
  41e308:	add    ch,ch
  41e30a:	add    DWORD PTR [rax],eax
  41e30c:	add    BYTE PTR [rax],al
  41e30e:	add    BYTE PTR [rax],al
  41e310:	or     al,0xed
  41e312:	add    DWORD PTR [rax],eax
  41e314:	add    BYTE PTR [rax],al
  41e316:	add    BYTE PTR [rax],al
  41e318:	adc    al,0xed
  41e31a:	add    DWORD PTR [rax],eax
  41e31c:	add    BYTE PTR [rax],al
  41e31e:	add    BYTE PTR [rax],al
  41e320:	(bad)  
  41e321:	in     eax,dx
  41e322:	add    DWORD PTR [rax],eax
  41e324:	add    BYTE PTR [rax],al
  41e326:	add    BYTE PTR [rax],al
  41e328:	sub    ch,ch
  41e32a:	add    DWORD PTR [rax],eax
  41e32c:	add    BYTE PTR [rax],al
  41e32e:	add    BYTE PTR [rax],al
  41e330:	xor    ch,ch
  41e332:	add    DWORD PTR [rax],eax
  41e334:	add    BYTE PTR [rax],al
  41e336:	add    BYTE PTR [rax],al
  41e338:	ds in  eax,dx
  41e33a:	add    DWORD PTR [rax],eax
  41e33c:	add    BYTE PTR [rax],al
  41e33e:	add    BYTE PTR [rax],al
  41e340:	rex.WR in eax,dx
  41e342:	add    DWORD PTR [rax],eax
  41e344:	add    BYTE PTR [rax],al
  41e346:	add    BYTE PTR [rax],al
  41e348:	push   rsi
  41e349:	in     eax,dx
  41e34a:	add    DWORD PTR [rax],eax
  41e34c:	add    BYTE PTR [rax],al
  41e34e:	add    BYTE PTR [rax],al
  41e350:	(bad)  
  41e351:	in     eax,dx
  41e352:	add    DWORD PTR [rax],eax
  41e354:	add    BYTE PTR [rax],al
  41e356:	add    BYTE PTR [rax],al
  41e358:	push   0xffffffffffffffed
  41e35a:	add    DWORD PTR [rax],eax
  41e35c:	add    BYTE PTR [rax],al
  41e35e:	add    BYTE PTR [rax],al
  41e360:	je     0x41e34f
  41e362:	add    DWORD PTR [rax],eax
  41e364:	add    BYTE PTR [rax],al
  41e366:	add    BYTE PTR [rax],al
  41e368:	jle    0x41e357
  41e36a:	add    DWORD PTR [rax],eax
  41e36c:	add    BYTE PTR [rax],al
  41e36e:	add    BYTE PTR [rax],al
  41e370:	xchg   ch,ch
  41e372:	add    DWORD PTR [rax],eax
  41e374:	add    BYTE PTR [rax],al
  41e376:	add    BYTE PTR [rax],al
  41e378:	mov    gs,ebp
  41e37a:	add    DWORD PTR [rax],eax
  41e37c:	add    BYTE PTR [rax],al
  41e37e:	add    BYTE PTR [rax],al
  41e380:	xchg   esi,eax
  41e381:	in     eax,dx
  41e382:	add    DWORD PTR [rax],eax
  41e384:	add    BYTE PTR [rax],al
  41e386:	add    BYTE PTR [rax],al
  41e388:	movabs al,ds:0xac000000000001ed
  41e391:	in     eax,dx
  41e392:	add    DWORD PTR [rax],eax
  41e394:	add    BYTE PTR [rax],al
  41e396:	add    BYTE PTR [rax],al
  41e398:	mov    dh,0xed
  41e39a:	add    DWORD PTR [rax],eax
  41e39c:	add    BYTE PTR [rax],al
  41e39e:	add    BYTE PTR [rax],al
  41e3a0:	shr    ch,0x1
  41e3a3:	add    BYTE PTR [rax],al
  41e3a5:	add    BYTE PTR [rax],al
  41e3a7:	add    dl,cl
  41e3a9:	in     eax,dx
  41e3aa:	add    DWORD PTR [rax],eax
  41e3ac:	add    BYTE PTR [rax],al
  41e3ae:	add    BYTE PTR [rax],al
  41e3b0:	(bad)  
  41e3b1:	in     eax,dx
  41e3b2:	add    DWORD PTR [rax],eax
  41e3b4:	add    BYTE PTR [rax],al
  41e3b6:	add    BYTE PTR [rax],al
  41e3b8:	loopne 0x41e3a7
  41e3ba:	add    DWORD PTR [rax],eax
  41e3bc:	add    BYTE PTR [rax],al
  41e3be:	add    BYTE PTR [rax],al
  41e3c0:	(bad)  
  41e3c1:	in     eax,dx
  41e3c2:	add    DWORD PTR [rax],eax
  41e3c4:	add    BYTE PTR [rax],al
  41e3c6:	add    BYTE PTR [rax],al
  41e3c8:	hlt    
  41e3c9:	in     eax,dx
  41e3ca:	add    DWORD PTR [rax],eax
  41e3cc:	add    BYTE PTR [rax],al
  41e3ce:	add    BYTE PTR [rax],al
  41e3d0:	(bad)  
  41e3d1:	in     eax,dx
  41e3d2:	add    DWORD PTR [rax],eax
  41e3d4:	add    BYTE PTR [rax],al
  41e3d6:	add    BYTE PTR [rax],al
  41e3d8:	or     dh,ch
  41e3da:	add    DWORD PTR [rax],eax
  41e3dc:	add    BYTE PTR [rax],al
  41e3de:	add    BYTE PTR [rax],al
  41e3e0:	adc    ch,dh
  41e3e2:	add    DWORD PTR [rax],eax
  41e3e4:	add    BYTE PTR [rax],al
  41e3e6:	add    BYTE PTR [rax],al
  41e3e8:	sbb    al,0xee
  41e3ea:	add    DWORD PTR [rax],eax
  41e3ec:	add    BYTE PTR [rax],al
  41e3ee:	add    BYTE PTR [rax],al
  41e3f0:	sub    dh,ch
  41e3f2:	add    DWORD PTR [rax],eax
  41e3f4:	add    BYTE PTR [rax],al
  41e3f6:	add    BYTE PTR [rax],al
  41e3f8:	xor    ch,dh
  41e3fa:	add    DWORD PTR [rax],eax
  41e3fc:	add    BYTE PTR [rax],al
  41e3fe:	add    BYTE PTR [rax],al
  41e400:	cmp    al,0xee
  41e402:	add    DWORD PTR [rax],eax
  41e404:	add    BYTE PTR [rax],al
  41e406:	add    BYTE PTR [rax],al
  41e408:	rex.RX out dx,al
  41e40a:	add    DWORD PTR [rax],eax
	...
  41e418:	push   rax
  41e419:	out    dx,al
  41e41a:	add    DWORD PTR [rax],eax
	...
  41e428:	fsub   st,st(7)
  41e42a:	add    DWORD PTR [rax],eax
  41e42c:	add    BYTE PTR [rax],al
  41e42e:	add    BYTE PTR [rax],al
  41e430:	hlt    
  41e431:	out    0x1,eax
  41e433:	add    BYTE PTR [rax],al
  41e435:	add    BYTE PTR [rax],al
  41e437:	add    BYTE PTR [rax],cl
  41e439:	call   0x41e43f
  41e43e:	add    BYTE PTR [rax],al
  41e440:	sbb    al,0xe8
  41e442:	add    DWORD PTR [rax],eax
	...
  41e450:	xor    al,0xe8
  41e452:	add    DWORD PTR [rax],eax
  41e454:	add    BYTE PTR [rax],al
  41e456:	add    BYTE PTR [rax],al
  41e458:	rex call 0x41e45f
  41e45e:	add    BYTE PTR [rax],al
  41e460:	push   rsp
  41e461:	call   0x41e467
	...
  41e46e:	add    BYTE PTR [rax],al
  41e470:	fs call 0x41e477
  41e476:	add    BYTE PTR [rax],al
  41e478:	jb     0x41e462
  41e47a:	add    DWORD PTR [rax],eax
  41e47c:	add    BYTE PTR [rax],al
  41e47e:	add    BYTE PTR [rax],al
  41e480:	(bad)  
  41e481:	call   0x41e487
  41e486:	add    BYTE PTR [rax],al
  41e488:	(bad)  
  41e489:	call   0x41e48f
  41e48e:	add    BYTE PTR [rax],al
  41e490:	mov    dl,0xe8
  41e492:	add    DWORD PTR [rax],eax
  41e494:	add    BYTE PTR [rax],al
  41e496:	add    BYTE PTR [rax],al
  41e498:	enter  0x1e8,0x0
  41e49c:	add    BYTE PTR [rax],al
  41e49e:	add    BYTE PTR [rax],al
  41e4a0:	shr    al,cl
  41e4a2:	add    DWORD PTR [rax],eax
  41e4a4:	add    BYTE PTR [rax],al
  41e4a6:	add    BYTE PTR [rax],al
  41e4a8:	out    0xe8,al
  41e4aa:	add    DWORD PTR [rax],eax
  41e4ac:	add    BYTE PTR [rax],al
  41e4ae:	add    BYTE PTR [rax],al
  41e4b0:	cld    
  41e4b1:	call   0x41e4b7
  41e4b6:	add    BYTE PTR [rax],al
  41e4b8:	adc    ch,cl
  41e4ba:	add    DWORD PTR [rax],eax
  41e4bc:	add    BYTE PTR [rax],al
  41e4be:	add    BYTE PTR [rax],al
  41e4c0:	and    cl,ch
  41e4c2:	add    DWORD PTR [rax],eax
  41e4c4:	add    BYTE PTR [rax],al
  41e4c6:	add    BYTE PTR [rax],al
  41e4c8:	xor    cl,ch
  41e4ca:	add    DWORD PTR [rax],eax
  41e4cc:	add    BYTE PTR [rax],al
  41e4ce:	add    BYTE PTR [rax],al
  41e4d0:	rex.X jmp 0x41e4d7
  41e4d6:	add    BYTE PTR [rax],al
  41e4d8:	pop    rax
  41e4d9:	jmp    0x41e4df
  41e4de:	add    BYTE PTR [rax],al
  41e4e0:	ins    BYTE PTR es:[rdi],dx
  41e4e1:	jmp    0x41e4e7
  41e4e6:	add    BYTE PTR [rax],al
  41e4e8:	jle    0x41e4d3
  41e4ea:	add    DWORD PTR [rax],eax
  41e4ec:	add    BYTE PTR [rax],al
  41e4ee:	add    BYTE PTR [rax],al
  41e4f0:	nop
  41e4f1:	jmp    0x41e4f7
  41e4f6:	add    BYTE PTR [rax],al
  41e4f8:	stos   BYTE PTR es:[rdi],al
  41e4f9:	jmp    0x41e4ff
  41e4fe:	add    BYTE PTR [rax],al
  41e500:	mov    esp,0x1e9
  41e505:	add    BYTE PTR [rax],al
  41e507:	add    ah,cl
  41e509:	jmp    0x41e50f
  41e50e:	add    BYTE PTR [rax],al
  41e510:	call   0x41e6fe
  41e515:	add    BYTE PTR [rax],al
  41e517:	add    ah,bh
  41e519:	jmp    0x41e51f
  41e51e:	add    BYTE PTR [rax],al
  41e520:	adc    al,0xea
  41e522:	add    DWORD PTR [rax],eax
  41e524:	add    BYTE PTR [rax],al
  41e526:	add    BYTE PTR [rax],al
  41e528:	sub    ch,dl
  41e52a:	add    DWORD PTR [rax],eax
  41e52c:	add    BYTE PTR [rax],al
  41e52e:	add    BYTE PTR [rax],al
  41e530:	rex.R (bad) 
  41e532:	add    DWORD PTR [rax],eax
  41e534:	add    BYTE PTR [rax],al
  41e536:	add    BYTE PTR [rax],al
  41e538:	pop    rdx
  41e539:	(bad)  
  41e53a:	add    DWORD PTR [rax],eax
  41e53c:	add    BYTE PTR [rax],al
  41e53e:	add    BYTE PTR [rax],al
  41e540:	outs   dx,BYTE PTR ds:[rsi]
  41e541:	(bad)  
  41e542:	add    DWORD PTR [rax],eax
  41e544:	add    BYTE PTR [rax],al
  41e546:	add    BYTE PTR [rax],al
  41e548:	mov    dl,ch
  41e54a:	add    DWORD PTR [rax],eax
  41e54c:	add    BYTE PTR [rax],al
  41e54e:	add    BYTE PTR [rax],al
  41e550:	pushf  
  41e551:	(bad)  
  41e552:	add    DWORD PTR [rax],eax
  41e554:	add    BYTE PTR [rax],al
  41e556:	add    BYTE PTR [rax],al
  41e558:	test   al,0xea
  41e55a:	add    DWORD PTR [rax],eax
  41e55c:	add    BYTE PTR [rax],al
  41e55e:	add    BYTE PTR [rax],al
  41e560:	mov    eax,0x1ea
  41e565:	add    BYTE PTR [rax],al
  41e567:	add    dh,dl
  41e569:	(bad)  
  41e56a:	add    DWORD PTR [rax],eax
  41e56c:	add    BYTE PTR [rax],al
  41e56e:	add    BYTE PTR [rax],al
  41e570:	fsubp  st(2),st
  41e572:	add    DWORD PTR [rax],eax
  41e574:	add    BYTE PTR [rax],al
  41e576:	add    BYTE PTR [rax],al
  41e578:	repnz (bad) 
  41e57a:	add    DWORD PTR [rax],eax
  41e57c:	add    BYTE PTR [rax],al
  41e57e:	add    BYTE PTR [rax],al
  41e580:	add    bl,ch
  41e582:	add    DWORD PTR [rax],eax
  41e584:	add    BYTE PTR [rax],al
  41e586:	add    BYTE PTR [rax],al
  41e588:	sbb    al,0xeb
  41e58a:	add    DWORD PTR [rax],eax
  41e58c:	add    BYTE PTR [rax],al
  41e58e:	add    BYTE PTR [rax],al
  41e590:	cs jmp 0x41e594
  41e593:	add    BYTE PTR [rax],al
  41e595:	add    BYTE PTR [rax],al
  41e597:	add    BYTE PTR [rsi],bh
  41e599:	jmp    0x41e59c
  41e59b:	add    BYTE PTR [rax],al
  41e59d:	add    BYTE PTR [rax],al
  41e59f:	add    BYTE PTR [rbx+rbp*8+0x1],dl
	...
  41e5af:	add    BYTE PTR [rdx-0x15],ch
  41e5b2:	add    DWORD PTR [rax],eax
  41e5b4:	add    BYTE PTR [rax],al
  41e5b6:	add    BYTE PTR [rax],al
  41e5b8:	(bad)  
  41e5b9:	jmp    0x41e5bc
  41e5bb:	add    BYTE PTR [rax],al
  41e5bd:	add    BYTE PTR [rax],al
  41e5bf:	add    BYTE PTR [rax+0x1eb],bl
  41e5c5:	add    BYTE PTR [rax],al
  41e5c7:	add    BYTE PTR [rsi+0x1eb],ah
  41e5cd:	add    BYTE PTR [rax],al
  41e5cf:	add    BYTE PTR [rsi+0x1eb],dh
  41e5d5:	add    BYTE PTR [rax],al
  41e5d7:	add    dl,al
  41e5d9:	jmp    0x41e5dc
  41e5db:	add    BYTE PTR [rax],al
  41e5dd:	add    BYTE PTR [rax],al
  41e5df:	add    al,dl
  41e5e1:	jmp    0x41e5e4
  41e5e3:	add    BYTE PTR [rax],al
  41e5e5:	add    BYTE PTR [rax],al
  41e5e7:	add    al,ah
  41e5e9:	jmp    0x41e5ec
  41e5eb:	add    BYTE PTR [rax],al
  41e5ed:	add    BYTE PTR [rax],al
  41e5ef:	add    al,dh
  41e5f1:	jmp    0x41e5f4
  41e5f3:	add    BYTE PTR [rax],al
  41e5f5:	add    BYTE PTR [rax],al
  41e5f7:	add    BYTE PTR [rdx],al
  41e5f9:	in     al,dx
  41e5fa:	add    DWORD PTR [rax],eax
  41e5fc:	add    BYTE PTR [rax],al
  41e5fe:	add    BYTE PTR [rax],al
  41e600:	(bad)  
  41e601:	in     al,dx
  41e602:	add    DWORD PTR [rax],eax
  41e604:	add    BYTE PTR [rax],al
  41e606:	add    BYTE PTR [rax],al
  41e608:	and    ah,ch
  41e60a:	add    DWORD PTR [rax],eax
  41e60c:	add    BYTE PTR [rax],al
  41e60e:	add    BYTE PTR [rax],al
  41e610:	cs in  al,dx
  41e612:	add    DWORD PTR [rax],eax
  41e614:	add    BYTE PTR [rax],al
  41e616:	add    BYTE PTR [rax],al
  41e618:	cmp    ah,ch
  41e61a:	add    DWORD PTR [rax],eax
  41e61c:	add    BYTE PTR [rax],al
  41e61e:	add    BYTE PTR [rax],al
  41e620:	rex.X in al,dx
  41e622:	add    DWORD PTR [rax],eax
  41e624:	add    BYTE PTR [rax],al
  41e626:	add    BYTE PTR [rax],al
  41e628:	rex.WX in al,dx
  41e62a:	add    DWORD PTR [rax],eax
  41e62c:	add    BYTE PTR [rax],al
  41e62e:	add    BYTE PTR [rax],al
  41e630:	push   rsp
  41e631:	in     al,dx
  41e632:	add    DWORD PTR [rax],eax
  41e634:	add    BYTE PTR [rax],al
  41e636:	add    BYTE PTR [rax],al
  41e638:	data16 in al,dx
  41e63a:	add    DWORD PTR [rax],eax
  41e63c:	add    BYTE PTR [rax],al
  41e63e:	add    BYTE PTR [rax],al
  41e640:	jb     0x41e62e
  41e642:	add    DWORD PTR [rax],eax
  41e644:	add    BYTE PTR [rax],al
  41e646:	add    BYTE PTR [rax],al
  41e648:	jp     0x41e636
  41e64a:	add    DWORD PTR [rax],eax
  41e64c:	add    BYTE PTR [rax],al
  41e64e:	add    BYTE PTR [rax],al
  41e650:	test   ah,ch
  41e652:	add    DWORD PTR [rax],eax
  41e654:	add    BYTE PTR [rax],al
  41e656:	add    BYTE PTR [rax],al
  41e658:	xchg   edx,eax
  41e659:	in     al,dx
  41e65a:	add    DWORD PTR [rax],eax
  41e65c:	add    BYTE PTR [rax],al
  41e65e:	add    BYTE PTR [rax],al
  41e660:	pushf  
  41e661:	in     al,dx
  41e662:	add    DWORD PTR [rax],eax
  41e664:	add    BYTE PTR [rax],al
  41e666:	add    BYTE PTR [rax],al
  41e668:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  41e669:	in     al,dx
  41e66a:	add    DWORD PTR [rax],eax
  41e66c:	add    BYTE PTR [rax],al
  41e66e:	add    BYTE PTR [rax],al
  41e670:	scas   al,BYTE PTR es:[rdi]
  41e671:	in     al,dx
  41e672:	add    DWORD PTR [rax],eax
  41e674:	add    BYTE PTR [rax],al
  41e676:	add    BYTE PTR [rax],al
  41e678:	mov    dh,0xec
  41e67a:	add    DWORD PTR [rax],eax
  41e67c:	add    BYTE PTR [rax],al
  41e67e:	add    BYTE PTR [rax],al
  41e680:	shr    ah,0x1
  41e683:	add    BYTE PTR [rax],al
  41e685:	add    BYTE PTR [rax],al
  41e687:	add    dl,cl
  41e689:	in     al,dx
  41e68a:	add    DWORD PTR [rax],eax
  41e68c:	add    BYTE PTR [rax],al
  41e68e:	add    BYTE PTR [rax],al
  41e690:	(bad)  
  41e691:	in     al,dx
  41e692:	add    DWORD PTR [rax],eax
  41e694:	add    BYTE PTR [rax],al
  41e696:	add    BYTE PTR [rax],al
  41e698:	fsubp  st(4),st
  41e69a:	add    DWORD PTR [rax],eax
  41e69c:	add    BYTE PTR [rax],al
  41e69e:	add    BYTE PTR [rax],al
  41e6a0:	out    0xec,al
  41e6a2:	add    DWORD PTR [rax],eax
  41e6a4:	add    BYTE PTR [rax],al
  41e6a6:	add    BYTE PTR [rax],al
  41e6a8:	out    dx,al
  41e6a9:	in     al,dx
  41e6aa:	add    DWORD PTR [rax],eax
  41e6ac:	add    BYTE PTR [rax],al
  41e6ae:	add    BYTE PTR [rax],al
  41e6b0:	imul   ah
  41e6b2:	add    DWORD PTR [rax],eax
  41e6b4:	add    BYTE PTR [rax],al
  41e6b6:	add    BYTE PTR [rax],al
  41e6b8:	add    ch,ch
  41e6ba:	add    DWORD PTR [rax],eax
  41e6bc:	add    BYTE PTR [rax],al
  41e6be:	add    BYTE PTR [rax],al
  41e6c0:	or     al,0xed
  41e6c2:	add    DWORD PTR [rax],eax
  41e6c4:	add    BYTE PTR [rax],al
  41e6c6:	add    BYTE PTR [rax],al
  41e6c8:	adc    al,0xed
  41e6ca:	add    DWORD PTR [rax],eax
  41e6cc:	add    BYTE PTR [rax],al
  41e6ce:	add    BYTE PTR [rax],al
  41e6d0:	(bad)  
  41e6d1:	in     eax,dx
  41e6d2:	add    DWORD PTR [rax],eax
  41e6d4:	add    BYTE PTR [rax],al
  41e6d6:	add    BYTE PTR [rax],al
  41e6d8:	sub    ch,ch
  41e6da:	add    DWORD PTR [rax],eax
  41e6dc:	add    BYTE PTR [rax],al
  41e6de:	add    BYTE PTR [rax],al
  41e6e0:	xor    ch,ch
  41e6e2:	add    DWORD PTR [rax],eax
  41e6e4:	add    BYTE PTR [rax],al
  41e6e6:	add    BYTE PTR [rax],al
  41e6e8:	ds in  eax,dx
  41e6ea:	add    DWORD PTR [rax],eax
  41e6ec:	add    BYTE PTR [rax],al
  41e6ee:	add    BYTE PTR [rax],al
  41e6f0:	rex.WR in eax,dx
  41e6f2:	add    DWORD PTR [rax],eax
  41e6f4:	add    BYTE PTR [rax],al
  41e6f6:	add    BYTE PTR [rax],al
  41e6f8:	push   rsi
  41e6f9:	in     eax,dx
  41e6fa:	add    DWORD PTR [rax],eax
  41e6fc:	add    BYTE PTR [rax],al
  41e6fe:	add    BYTE PTR [rax],al
  41e700:	(bad)  
  41e701:	in     eax,dx
  41e702:	add    DWORD PTR [rax],eax
  41e704:	add    BYTE PTR [rax],al
  41e706:	add    BYTE PTR [rax],al
  41e708:	push   0xffffffffffffffed
  41e70a:	add    DWORD PTR [rax],eax
  41e70c:	add    BYTE PTR [rax],al
  41e70e:	add    BYTE PTR [rax],al
  41e710:	je     0x41e6ff
  41e712:	add    DWORD PTR [rax],eax
  41e714:	add    BYTE PTR [rax],al
  41e716:	add    BYTE PTR [rax],al
  41e718:	jle    0x41e707
  41e71a:	add    DWORD PTR [rax],eax
  41e71c:	add    BYTE PTR [rax],al
  41e71e:	add    BYTE PTR [rax],al
  41e720:	xchg   ch,ch
  41e722:	add    DWORD PTR [rax],eax
  41e724:	add    BYTE PTR [rax],al
  41e726:	add    BYTE PTR [rax],al
  41e728:	mov    gs,ebp
  41e72a:	add    DWORD PTR [rax],eax
  41e72c:	add    BYTE PTR [rax],al
  41e72e:	add    BYTE PTR [rax],al
  41e730:	xchg   esi,eax
  41e731:	in     eax,dx
  41e732:	add    DWORD PTR [rax],eax
  41e734:	add    BYTE PTR [rax],al
  41e736:	add    BYTE PTR [rax],al
  41e738:	movabs al,ds:0xac000000000001ed
  41e741:	in     eax,dx
  41e742:	add    DWORD PTR [rax],eax
  41e744:	add    BYTE PTR [rax],al
  41e746:	add    BYTE PTR [rax],al
  41e748:	mov    dh,0xed
  41e74a:	add    DWORD PTR [rax],eax
  41e74c:	add    BYTE PTR [rax],al
  41e74e:	add    BYTE PTR [rax],al
  41e750:	shr    ch,0x1
  41e753:	add    BYTE PTR [rax],al
  41e755:	add    BYTE PTR [rax],al
  41e757:	add    dl,cl
  41e759:	in     eax,dx
  41e75a:	add    DWORD PTR [rax],eax
  41e75c:	add    BYTE PTR [rax],al
  41e75e:	add    BYTE PTR [rax],al
  41e760:	(bad)  
  41e761:	in     eax,dx
  41e762:	add    DWORD PTR [rax],eax
  41e764:	add    BYTE PTR [rax],al
  41e766:	add    BYTE PTR [rax],al
  41e768:	loopne 0x41e757
  41e76a:	add    DWORD PTR [rax],eax
  41e76c:	add    BYTE PTR [rax],al
  41e76e:	add    BYTE PTR [rax],al
  41e770:	(bad)  
  41e771:	in     eax,dx
  41e772:	add    DWORD PTR [rax],eax
  41e774:	add    BYTE PTR [rax],al
  41e776:	add    BYTE PTR [rax],al
  41e778:	hlt    
  41e779:	in     eax,dx
  41e77a:	add    DWORD PTR [rax],eax
  41e77c:	add    BYTE PTR [rax],al
  41e77e:	add    BYTE PTR [rax],al
  41e780:	(bad)  
  41e781:	in     eax,dx
  41e782:	add    DWORD PTR [rax],eax
  41e784:	add    BYTE PTR [rax],al
  41e786:	add    BYTE PTR [rax],al
  41e788:	or     dh,ch
  41e78a:	add    DWORD PTR [rax],eax
  41e78c:	add    BYTE PTR [rax],al
  41e78e:	add    BYTE PTR [rax],al
  41e790:	adc    ch,dh
  41e792:	add    DWORD PTR [rax],eax
  41e794:	add    BYTE PTR [rax],al
  41e796:	add    BYTE PTR [rax],al
  41e798:	sbb    al,0xee
  41e79a:	add    DWORD PTR [rax],eax
  41e79c:	add    BYTE PTR [rax],al
  41e79e:	add    BYTE PTR [rax],al
  41e7a0:	sub    dh,ch
  41e7a2:	add    DWORD PTR [rax],eax
  41e7a4:	add    BYTE PTR [rax],al
  41e7a6:	add    BYTE PTR [rax],al
  41e7a8:	xor    ch,dh
  41e7aa:	add    DWORD PTR [rax],eax
  41e7ac:	add    BYTE PTR [rax],al
  41e7ae:	add    BYTE PTR [rax],al
  41e7b0:	cmp    al,0xee
  41e7b2:	add    DWORD PTR [rax],eax
  41e7b4:	add    BYTE PTR [rax],al
  41e7b6:	add    BYTE PTR [rax],al
  41e7b8:	rex.RX out dx,al
  41e7ba:	add    DWORD PTR [rax],eax
	...
  41e7c8:	push   rax
  41e7c9:	out    dx,al
  41e7ca:	add    DWORD PTR [rax],eax
	...
  41e7d8:	(bad)  
  41e7d9:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41e7dd:	imul   ebp,DWORD PTR [rsi+0x74],0x69625f6c
  41e7e4:	outs   dx,BYTE PTR ds:[rsi]
  41e7e5:	fs je  0x41e84d
  41e7e8:	js     0x41e85e
  41e7ea:	outs   dx,DWORD PTR fs:[rsi]
  41e7ec:	ins    DWORD PTR es:[rdi],dx
  41e7ed:	(bad)  
  41e7ee:	imul   ebp,DWORD PTR [rsi+0x0],0x26000000
  41e7f5:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41e7f9:	imul   ebp,DWORD PTR [rsi+0x74],0x65675f6c
  41e800:	je     0x41e876
  41e802:	gs js  0x41e879
  41e805:	add    BYTE PTR [rax],al
  41e807:	add    BYTE PTR [rbx+0x0],al
  41e80a:	ins    BYTE PTR es:[rdi],dx
  41e80b:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  41e812:	jae    0x41e884
  41e814:	jb     0x41e87f
  41e816:	outs   dx,BYTE PTR ds:[rsi]
  41e817:	je     0x41e87f
  41e819:	add    BYTE PTR [rax],al
  41e81b:	add    BYTE PTR [rbp+0x0],al
  41e81e:	ins    BYTE PTR es:[rdi],dx
  41e81f:	imul   esp,DWORD PTR [rdx+0x69],0x5f6c746e
  41e826:	je     0x41e88d
  41e828:	js     0x41e89e
  41e82a:	outs   dx,DWORD PTR fs:[rsi]
  41e82c:	ins    DWORD PTR es:[rdi],dx
  41e82d:	(bad)  
  41e82e:	imul   ebp,DWORD PTR [rsi+0x0],0x5000000
  41e835:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41e839:	imul   esp,DWORD PTR [rbx+0x6f],0x766e
  41e840:	(bad)  
  41e841:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41e845:	imul   esp,DWORD PTR [rbx+0x6f],0x635f766e
  41e84c:	ins    BYTE PTR es:[rdi],dx
  41e84d:	outs   dx,DWORD PTR ds:[rsi]
  41e84e:	jae    0x41e8b5
  41e850:	add    BYTE PTR [rax],al
  41e852:	add    BYTE PTR [rax],al
  41e854:	(bad)  
  41e855:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41e859:	imul   esp,DWORD PTR [rbx+0x6f],0x6f5f766e
  41e860:	jo     0x41e8c7
  41e862:	outs   dx,BYTE PTR ds:[rsi]
  41e863:	add    BYTE PTR [rbp+0x0],dl
  41e866:	rex.XB ins BYTE PTR es:[rdi],dx
  41e868:	outs   dx,DWORD PTR ds:[rsi]
  41e869:	jae    0x41e8d0
  41e86b:	rex.W (bad) 
  41e86d:	outs   dx,BYTE PTR ds:[rsi]
  41e86e:	fs ins BYTE PTR es:[rdi],dx
  41e870:	add    BYTE PTR gs:[rsi+0x65724300],al
  41e877:	(bad)  
  41e878:	je     0x41e8df
  41e87a:	rex.RB jbe 0x41e8e2
  41e87d:	outs   dx,BYTE PTR ds:[rsi]
  41e87e:	je     0x41e8c1
  41e880:	add    BYTE PTR [rax],al
  41e882:	fadd   DWORD PTR [rax]
  41e884:	rex.R
  41e885:	gs ins BYTE PTR es:[rdi],dx
  41e887:	gs je  0x41e8ef
  41e88a:	rex.XB jb 0x41e8f6
  41e88d:	je     0x41e8f8
  41e88f:	movsxd esp,DWORD PTR [rcx+0x6c]
  41e892:	push   rbx
  41e893:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41e898:	outs   dx,BYTE PTR ds:[rsi]
  41e899:	add    al,bh
  41e89b:	add    BYTE PTR [rbp+0x6e],al
  41e89e:	je     0x41e905
  41e8a0:	jb     0x41e8e5
  41e8a2:	jb     0x41e90d
  41e8a4:	je     0x41e90f
  41e8a6:	movsxd esp,DWORD PTR [rcx+0x6c]
  41e8a9:	push   rbx
  41e8aa:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41e8af:	outs   dx,BYTE PTR ds:[rsi]
  41e8b0:	add    BYTE PTR [rax],al
  41e8b2:	sbb    BYTE PTR [rcx],al
  41e8b4:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41e8b6:	jne    0x41e925
  41e8b8:	push   rbx
  41e8b9:	jns    0x41e92e
  41e8bb:	je     0x41e922
  41e8bd:	ins    DWORD PTR es:[rdi],dx
  41e8be:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41e8c0:	movsxd esp,DWORD PTR [rcx+0x6c]
  41e8c3:	gs jae 0x41e907
  41e8c6:	add    BYTE PTR [rax],al
  41e8c8:	je     0x41e8cb
  41e8ca:	rex.RXB
  41e8cb:	gs je  0x41e90f
  41e8ce:	rex.XB push r8
  41e8d0:	add    BYTE PTR [rax],al
  41e8d2:	int    0x1
  41e8d4:	rex.RXB
  41e8d5:	gs je  0x41e91b
  41e8d8:	jne    0x41e94c
  41e8da:	jb     0x41e941
  41e8dc:	outs   dx,BYTE PTR ds:[rsi]
  41e8dd:	je     0x41e92f
  41e8df:	jb     0x41e950
  41e8e1:	movsxd esp,DWORD PTR [rbp+0x73]
  41e8e4:	jae    0x41e8e6
  41e8e6:	(bad)  
  41e8e7:	add    DWORD PTR [rdi+0x65],eax
  41e8ea:	je     0x41e92f
  41e8ec:	jne    0x41e960
  41e8ee:	jb     0x41e955
  41e8f0:	outs   dx,BYTE PTR ds:[rsi]
  41e8f1:	je     0x41e943
  41e8f3:	jb     0x41e964
  41e8f5:	movsxd esp,DWORD PTR [rbp+0x73]
  41e8f8:	jae    0x41e943
  41e8fa:	fs add dl,dl
  41e8fd:	add    DWORD PTR [rdi+0x65],eax
  41e900:	je     0x41e945
  41e902:	jne    0x41e976
  41e904:	jb     0x41e96b
  41e906:	outs   dx,BYTE PTR ds:[rsi]
  41e907:	je     0x41e95d
  41e909:	push   0x64616572
  41e90e:	rex.WB
  41e90f:	add    BYTE PTR fs:[rax],al
  41e912:	add    al,BYTE PTR [rdx]
  41e914:	rex.RXB
  41e915:	gs je  0x41e95e
  41e918:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
  41e920:	adc    BYTE PTR [rdx],al
  41e922:	rex.RXB
  41e923:	gs je  0x41e972
  41e926:	(bad)  
  41e927:	jae    0x41e99d
  41e929:	rex.RB jb 0x41e99e
  41e92c:	outs   dx,DWORD PTR ds:[rsi]
  41e92d:	jb     0x41e92f
  41e92f:	add    BYTE PTR [rbx],dl
  41e931:	add    al,BYTE PTR [rdi+0x65]
  41e934:	je     0x41e982
  41e936:	outs   dx,DWORD PTR ds:[rsi]
  41e937:	movsxd esp,DWORD PTR [rcx+0x6c]
  41e93a:	rex.WB outs dx,BYTE PTR gs:[rsi]
  41e93d:	outs   dx,WORD PTR ds:[rsi]
  41e93f:	add    BYTE PTR [r8],al
  41e942:	and    eax,DWORD PTR [rdx]
  41e944:	rex.RXB
  41e945:	gs je  0x41e995
  41e948:	outs   dx,DWORD PTR ds:[rsi]
  41e949:	fs jne 0x41e9b8
  41e94c:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x57656d61
  41e956:	add    BYTE PTR [rax],al
  41e958:	(bad)  
  41e959:	add    al,BYTE PTR [rdi+0x65]
  41e95c:	je     0x41e9ab
  41e95e:	outs   dx,DWORD PTR ds:[rsi]
  41e95f:	fs jne 0x41e9ce
  41e962:	gs rex.W (bad) 
  41e965:	outs   dx,BYTE PTR ds:[rsi]
  41e966:	fs ins BYTE PTR es:[rdi],dx
  41e968:	gs push rdi
  41e96a:	add    BYTE PTR [rax],al
  41e96c:	push   rsi
  41e96d:	add    al,BYTE PTR [rdi+0x65]
  41e970:	je     0x41e9c2
  41e972:	jb     0x41e9e3
  41e974:	movsxd eax,DWORD PTR [rcx+0x64]
  41e977:	fs jb  0x41e9df
  41e97a:	jae    0x41e9ef
  41e97c:	add    BYTE PTR [rax],al
  41e97e:	jae    0x41e982
  41e980:	rex.RXB
  41e981:	gs je  0x41e9d7
  41e984:	je     0x41e9e7
  41e986:	jb     0x41e9fc
  41e988:	jne    0x41e9fa
  41e98a:	rex.WB outs dx,BYTE PTR ds:[rsi]
  41e98c:	outs   dx,WORD PTR ds:[rsi]
  41e98e:	add    BYTE PTR [r10+0x74654702],cl
  41e995:	push   rbx
  41e996:	jns    0x41ea0b
  41e998:	je     0x41e9ff
  41e99a:	ins    DWORD PTR es:[rdi],dx
  41e99b:	push   rsp
  41e99c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  41e9a3:	ins    BYTE PTR es:[rdi],dx
  41e9a4:	gs push rsp
  41e9a6:	imul   ebp,DWORD PTR [rbp+0x65],0x47029e00
  41e9ad:	gs je  0x41ea04
  41e9b0:	push   0x64616572
  41e9b5:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41e9b7:	movsxd esp,DWORD PTR [rcx+0x6c]
  41e9ba:	add    BYTE PTR gs:[rbp+0x74654702],ah
  41e9c1:	push   rsp
  41e9c2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  41e9c9:	je     0x41e9cb
  41e9cb:	add    cl,bh
  41e9cd:	add    cl,BYTE PTR [rcx+0x6e]
  41e9d0:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  41e9d8:	rex.XB jb 0x41ea44
  41e9db:	je     0x41ea46
  41e9dd:	movsxd esp,DWORD PTR [rcx+0x6c]
  41e9e0:	push   rbx
  41e9e1:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41e9e6:	outs   dx,BYTE PTR ds:[rsi]
  41e9e7:	add    BYTE PTR [rax],dl
  41e9e9:	add    ecx,DWORD PTR [rcx+0x73]
  41e9ec:	rex.R
  41e9ed:	rex.X
  41e9ee:	rex.XB push r11
  41e9f0:	rex.WR
  41e9f1:	gs (bad) 
  41e9f3:	fs rex.X jns 0x41ea6b
  41e9f7:	gs rex.RB js 0x41e9fb
  41e9fb:	add    BYTE PTR [rbx+0x3],cl
  41e9fe:	rex.WR
  41e9ff:	gs (bad) 
  41ea01:	jbe    0x41ea68
  41ea03:	rex.XB jb 0x41ea6f
  41ea06:	je     0x41ea71
  41ea08:	movsxd esp,DWORD PTR [rcx+0x6c]
  41ea0b:	push   rbx
  41ea0c:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  41ea11:	outs   dx,BYTE PTR ds:[rsi]
  41ea12:	add    BYTE PTR [rax],al
  41ea14:	jp     0x41ea19
  41ea16:	rex.WRB jne 0x41ea85
  41ea19:	je     0x41ea84
  41ea1b:	rex.X jns 0x41ea92
  41ea1e:	gs push rsp
  41ea20:	outs   dx,DWORD PTR ds:[rsi]
  41ea21:	push   rdi
  41ea22:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
  41ea2a:	mov    ebx,0x65755103
  41ea2f:	jb     0x41eaaa
  41ea31:	push   rax
  41ea32:	gs jb  0x41ea9b
  41ea35:	outs   dx,DWORD PTR ds:[rsi]
  41ea36:	jb     0x41eaa5
  41ea38:	(bad)  
  41ea39:	outs   dx,BYTE PTR ds:[rsi]
  41ea3a:	movsxd esp,DWORD PTR [rbp+0x43]
  41ea3d:	outs   dx,DWORD PTR ds:[rsi]
  41ea3e:	jne    0x41eaae
  41ea40:	je     0x41eaa7
  41ea42:	jb     0x41ea44
  41ea44:	add    DWORD PTR [rdx+rdx*2],eax
  41ea47:	je     0x41eab5
  41ea49:	rex.B
  41ea4a:	fs fs rex.RX jne 0x41eabd
  41ea4f:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41ea53:	outs   dx,BYTE PTR ds:[rsi]
  41ea54:	push   rsp
  41ea55:	(bad)  
  41ea56:	(bad)  
  41ea57:	ins    BYTE PTR es:[rdi],dx
  41ea58:	add    BYTE PTR gs:[rdx],al
  41ea5b:	add    al,0x52
  41ea5d:	je     0x41eacb
  41ea5f:	rex.XB (bad) 
  41ea61:	jo     0x41ead7
  41ea63:	jne    0x41ead7
  41ea65:	rex.XB outs dx,DWORD PTR gs:[rsi]
  41ea68:	outs   dx,BYTE PTR ds:[rsi]
  41ea69:	je     0x41ead0
  41ea6b:	js     0x41eae1
  41ea6d:	add    BYTE PTR [rcx],cl
  41ea6f:	add    al,0x52
  41ea71:	je     0x41eadf
  41ea73:	rex.WR outs dx,DWORD PTR ds:[rsi]
  41ea75:	outs   dx,DWORD PTR ds:[rsi]
  41ea76:	imul   esi,DWORD PTR [rbp+0x70],0x46
  41ea7a:	jne    0x41eaea
  41ea7c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  41ea80:	outs   dx,BYTE PTR ds:[rsi]
  41ea81:	rex.RB outs dx,BYTE PTR ds:[rsi]
  41ea83:	je     0x41eaf7
  41ea85:	jns    0x41ea87
  41ea87:	add    BYTE PTR [rax],dl
  41ea89:	add    al,0x52
  41ea8b:	je     0x41eaf9
  41ea8d:	push   rsi
  41ea8e:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  41ea95:	outs   dx,BYTE PTR ds:[rsi]
  41ea96:	ja     0x41eb01
  41ea98:	outs   dx,BYTE PTR ds:[rsi]
  41ea99:	add    BYTE PTR fs:[rax],al
  41ea9c:	push   rbx
  41ea9d:	add    al,0x53
  41ea9f:	gs je  0x41eae7
  41eaa2:	jbe    0x41eb09
  41eaa4:	outs   dx,BYTE PTR ds:[rsi]
  41eaa5:	je     0x41eaa7
  41eaa7:	add    BYTE PTR [rsp+rax*1+0x53],ch
  41eaab:	gs je  0x41eafa
  41eaae:	(bad)  
  41eaaf:	jae    0x41eb25
  41eab1:	rex.RB jb 0x41eb26
  41eab4:	outs   dx,DWORD PTR ds:[rsi]
  41eab5:	jb     0x41eab7
  41eab7:	add    BYTE PTR [rdi+0x74655304],bl
  41eabd:	push   rbp
  41eabe:	outs   dx,BYTE PTR ds:[rsi]
  41eabf:	push   0x6c646e61
  41eac4:	gs fs rex.RB js 0x41eb2c
  41eac9:	gs jo  0x41eb40
  41eacc:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  41ead3:	gs jb  0x41ead6
  41ead6:	lods   al,BYTE PTR ds:[rsi]
  41ead7:	add    al,0x53
  41ead9:	ins    BYTE PTR es:[rdi],dx
  41eada:	gs gs jo 0x41eade
  41eade:	mov    edx,0x72655404
  41eae3:	ins    DWORD PTR es:[rdi],dx
  41eae4:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  41eaeb:	outs   dx,DWORD PTR ds:[rsi]
  41eaec:	movsxd esp,DWORD PTR [rbp+0x73]
  41eaef:	jae    0x41eaf1
  41eaf1:	add    cl,al
  41eaf3:	add    al,0x54
  41eaf5:	ins    BYTE PTR es:[rdi],dx
  41eaf6:	jae    0x41eb3f
  41eaf8:	gs je  0x41eb51
  41eafb:	(bad)  
  41eafc:	ins    BYTE PTR es:[rdi],dx
  41eafd:	jne    0x41eb64
  41eaff:	add    dh,cl
  41eb01:	add    al,0x55
  41eb03:	outs   dx,BYTE PTR ds:[rsi]
  41eb04:	push   0x6c646e61
  41eb09:	gs fs rex.RB js 0x41eb71
  41eb0e:	gs jo  0x41eb85
  41eb11:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  41eb18:	gs jb  0x41eb1b
  41eb1b:	add    ah,ch
  41eb1d:	add    al,0x56
  41eb1f:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  41eb26:	jb     0x41eb97
  41eb28:	je     0x41eb8f
  41eb2a:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  41eb2e:	out    dx,al
  41eb2f:	add    al,0x56
  41eb31:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  41eb38:	jne    0x41eb9f
  41eb3a:	jb     0x41ebb5
  41eb3c:	add    BYTE PTR [rax],al
  41eb3e:	test   BYTE PTR [rdi+rdx*2],0x61
  41eb42:	imul   esi,DWORD PTR [rsi+rax*2+0x6f],0x6e695372
  41eb4a:	ins    BYTE PTR es:[edi],dx
  41eb4c:	gs rex.WRXB (bad) 
  41eb4f:	push   0x65
  41eb51:	movsxd esi,DWORD PTR [rax+rax*1+0xe]
  41eb55:	add    eax,0x65646957
  41eb5a:	rex.XB push 0x6f547261
  41eb60:	rex.WRB jne 0x41ebcf
  41eb63:	je     0x41ebce
  41eb65:	rex.X jns 0x41ebdc
  41eb68:	add    BYTE PTR gs:[rdi],dh
  41eb6b:	add    BYTE PTR [rdi+0x5f],bl
  41eb6e:	rex.XB pop r15
  41eb70:	jae    0x41ebe2
  41eb72:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  41eb76:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  41eb7d:	ins    BYTE PTR es:[rdi],dx
  41eb7e:	gs jb  0x41eb81
  41eb81:	add    BYTE PTR [rdi],bh
  41eb83:	add    BYTE PTR [rdi+0x5f],bl
  41eb86:	pop    rdi
  41eb87:	ins    BYTE PTR es:[rdi],dx
  41eb88:	movsxd ebx,DWORD PTR [rdi+0x63]
  41eb8b:	outs   dx,DWORD PTR ds:[rsi]
  41eb8c:	fs gs jo 0x41ebf1
  41eb90:	addr32 gs pop rdi
  41eb93:	data16 jne 0x41ec04
  41eb96:	movsxd eax,DWORD PTR [rax]
  41eb98:	rex.WRX add BYTE PTR [rdi+0x5f],r11b
  41eb9c:	fs ins BYTE PTR es:[rdi],dx
  41eb9e:	ins    BYTE PTR es:[rdi],dx
  41eb9f:	outs   dx,DWORD PTR ds:[rsi]
  41eba0:	outs   dx,BYTE PTR ds:[rsi]
  41eba1:	gs js  0x41ec0d
  41eba4:	je     0x41eba6
  41eba6:	push   rcx
  41eba7:	add    BYTE PTR [rdi+0x5f],bl
  41ebaa:	addr32 gs je 0x41ec1b
  41ebae:	(bad)  
  41ebaf:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  41ebb6:	push   rdx
  41ebb7:	add    BYTE PTR [rdi+0x5f],bl
  41ebba:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  41ebc1:	add    BYTE PTR [rbx+0x0],dl
  41ebc4:	pop    rdi
  41ebc5:	pop    rdi
  41ebc6:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  41ebcd:	movsxd eax,DWORD PTR [rax]
  41ebcf:	add    BYTE PTR [rdx+0x0],bl
  41ebd2:	pop    rdi
  41ebd3:	pop    rdi
  41ebd4:	ins    BYTE PTR es:[rdi],dx
  41ebd5:	movsxd ebp,DWORD PTR [rdi+0x6e]
  41ebd8:	jbe    0x41ec39
  41ebda:	imul   ebp,DWORD PTR [rsi+0x69],0x5b000074
  41ebe1:	add    BYTE PTR [rdi+0x5f],bl
  41ebe4:	ins    DWORD PTR es:[rdi],dx
  41ebe5:	(bad)  
  41ebe6:	pop    rdi
  41ebe7:	movsxd esi,DWORD PTR [rbp+0x72]
  41ebea:	pop    rdi
  41ebeb:	ins    DWORD PTR es:[rdi],dx
  41ebec:	(bad)  
  41ebed:	js     0x41ebef
  41ebef:	add    BYTE PTR [rax+0x0],ah
  41ebf2:	pop    rdi
  41ebf3:	pop    rdi
  41ebf4:	jae    0x41ec5b
  41ebf6:	je     0x41ec57
  41ebf8:	(bad)  
  41ebf9:	jo     0x41ec6b
  41ebfb:	pop    rdi
  41ebfc:	je     0x41ec77
  41ebfe:	jo     0x41ec65
  41ec00:	add    BYTE PTR [rax],al
  41ec02:	(bad)  
  41ec03:	add    BYTE PTR [rdi+0x5f],bl
  41ec06:	jae    0x41ec6d
  41ec08:	je     0x41ec7f
  41ec0a:	jae    0x41ec71
  41ec0c:	jb     0x41ec7b
  41ec0e:	(bad)  
  41ec0f:	je     0x41ec79
  41ec11:	gs jb  0x41ec86
  41ec14:	add    BYTE PTR [rax],al
  41ec16:	jno    0x41ec18
  41ec18:	pop    rdi
  41ec19:	(bad)  
  41ec1a:	movsxd ebp,DWORD PTR [rbp+0x64]
  41ec1d:	ins    BYTE PTR es:[rdi],dx
  41ec1e:	outs   dx,BYTE PTR ds:[rsi]
  41ec1f:	add    BYTE PTR [rax+0x0],bh
  41ec22:	pop    rdi
  41ec23:	(bad)  
  41ec24:	ins    DWORD PTR es:[rdi],dx
  41ec25:	jae    0x41ec8e
  41ec27:	pop    rdi
  41ec28:	gs js  0x41ec94
  41ec2b:	je     0x41ec2d
  41ec2d:	add    BYTE PTR [rdx+0x65635f00],cl
  41ec33:	js     0x41ec9e
  41ec35:	je     0x41ec37
  41ec37:	add    BYTE PTR [rdx+0x72655f00],bh
  41ec3d:	jb     0x41ecad
  41ec3f:	outs   dx,DWORD PTR ds:[rsi]
  41ec40:	add    BYTE PTR [rax],al
  41ec42:	ret    
  41ec43:	add    BYTE PTR [rdi+0x65],bl
  41ec46:	js     0x41ecb1
  41ec48:	je     0x41ec4a
  41ec4a:	fiadd  DWORD PTR [rax]
  41ec4c:	pop    rdi
  41ec4d:	ins    WORD PTR es:[rdi],dx
  41ec4f:	outs   dx,DWORD PTR ds:[rsi]
  41ec50:	fs add BYTE PTR gs:[rax],al
  41ec54:	cli    
  41ec55:	add    BYTE PTR [rdi+0x67],bl
  41ec58:	gs je  0x41ecba
  41ec5b:	outs   dx,DWORD PTR ds:[rsi]
  41ec5c:	jae    0x41ecc4
  41ec5e:	push   0x6c646e61
  41ec63:	add    BYTE PTR gs:[rax],al
  41ec66:	sbb    al,BYTE PTR [rcx]
  41ec68:	pop    rdi
  41ec69:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  41ec70:	ins    DWORD PTR es:[rdi],dx
  41ec71:	add    BYTE PTR [rax+0x6f6c5f01],al
  41ec77:	movsxd ebp,DWORD PTR [rbx+0x0]
  41ec7a:	and    eax,0x6e6f5f02
  41ec7f:	gs js  0x41eceb
  41ec82:	je     0x41ec84
  41ec84:	movsxd eax,DWORD PTR [rdx]
  41ec86:	pop    rdi
  41ec87:	jae    0x41ecf7
  41ec89:	ja     0x41ecfb
  41ec8b:	jb     0x41ecf6
  41ec8d:	outs   dx,BYTE PTR ds:[rsi]
  41ec8e:	je     0x41ecf6
  41ec90:	add    BYTE PTR [rax],al
  41ec92:	(bad)
  41ec96:	outs   dx,BYTE PTR ds:[rsi]
  41ec97:	ins    BYTE PTR es:[rdi],dx
  41ec98:	outs   dx,DWORD PTR ds:[rsi]
  41ec99:	movsxd ebp,DWORD PTR [rbx+0x0]
  41ec9c:	jg     0x41eca1
  41ec9e:	(bad)  
  41ec9f:	(bad)  
  41eca0:	outs   dx,DWORD PTR ds:[rsi]
  41eca1:	jb     0x41ed17
  41eca3:	add    BYTE PTR [rax+0x6c616303],dl
  41eca9:	ins    BYTE PTR es:[rdi],dx
  41ecaa:	outs   dx,DWORD PTR ds:[rsi]
  41ecab:	movsxd eax,DWORD PTR [rax]
  41ecad:	add    BYTE PTR [rbp+0x69786503],bl
  41ecb3:	je     0x41ecb5
  41ecb5:	add    BYTE PTR [rcx+0x6c636603],ah
  41ecbb:	outs   dx,DWORD PTR ds:[rsi]
  41ecbc:	jae    0x41ed23
  41ecbe:	add    BYTE PTR [rax],al
  41ecc0:	movabs ds:0x726f7272656603,eax
  41ecc9:	add    BYTE PTR [rbx+rax*1+0x756c6666],ah
  41ecd0:	jae    0x41ed3a
  41ecd2:	add    BYTE PTR [rax],al
  41ecd4:	mov    al,0x3
  41ecd6:	data16 jo 0x41ed4b
  41ecd9:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  41ece0:	data16 jo 0x41ed58
  41ece3:	je     0x41ed48
  41ece5:	add    BYTE PTR [rbx+0x75706603],dh
  41eceb:	je     0x41ed60
  41eced:	add    BYTE PTR [rdi+0x65726603],dh
  41ecf3:	add    BYTE PTR gs:[rax],al
  41ecf6:	rol    BYTE PTR [rbx],0x66
  41ecf9:	ja     0x41ed6b
  41ecfb:	jb     0x41ed66
  41ecfd:	outs   dx,BYTE PTR ds:[rsi]
  41ecfe:	je     0x41ed66
  41ed00:	add    BYTE PTR [rax],al
  41ed02:	ret    0x6603
  41ed05:	ja     0x41ed79
  41ed07:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c500
  41ed0f:	gs je  0x41ed75
  41ed12:	add    BYTE PTR [rax],al
  41ed14:	mov    DWORD PTR [rbx],0x65746567
  41ed1a:	outs   dx,BYTE PTR ds:[rsi]
  41ed1b:	jbe    0x41ed1d
  41ed1d:	add    dh,cl
  41ed1f:	add    ebp,DWORD PTR [rcx+0x73]
  41ed22:	(bad)  
  41ed23:	ins    BYTE PTR es:[rdi],dx
  41ed24:	outs   dx,BYTE PTR ds:[rsi]
  41ed25:	jne    0x41ed94
  41ed27:	add    bh,dl
  41ed29:	add    ebp,DWORD PTR [rcx+0x73]
  41ed2c:	jae    0x41ed9e
  41ed2e:	(bad)  
  41ed2f:	movsxd esp,DWORD PTR [rbp+0x0]
  41ed32:	fld    QWORD PTR [rbx]
  41ed34:	imul   esi,DWORD PTR [rbx+0x77],0x70797463
  41ed3b:	add    BYTE PTR gs:[rax],al
  41ed3e:	(bad)  
  41ed3f:	add    ebp,DWORD PTR [rdi+rbp*2+0x63]
  41ed43:	(bad)  
  41ed44:	ins    BYTE PTR es:[rdi],dx
  41ed45:	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
  41ed49:	jbe    0x41ed4b
  41ed4b:	add    al,dh
  41ed4d:	add    ebp,DWORD PTR [rbp+0x61]
  41ed50:	ins    BYTE PTR es:[rdi],dx
  41ed51:	ins    BYTE PTR es:[rdi],dx
  41ed52:	outs   dx,DWORD PTR ds:[rsi]
  41ed53:	movsxd eax,DWORD PTR [rax]
  41ed55:	add    bh,dh
  41ed57:	add    ebp,DWORD PTR [rbp+0x65]
  41ed5a:	ins    DWORD PTR es:[rdi],dx
  41ed5b:	movsxd ebp,DWORD PTR [rbp+0x70]
  41ed5e:	add    BYTE PTR [rax],al
  41ed60:	clc    
  41ed61:	add    ebp,DWORD PTR [rbp+0x65]
  41ed64:	ins    DWORD PTR es:[rdi],dx
  41ed65:	movsxd esi,DWORD PTR [rax+0x79]
  41ed68:	add    BYTE PTR [rax],al
  41ed6a:	stc    
  41ed6b:	add    ebp,DWORD PTR [rbp+0x65]
  41ed6e:	ins    DWORD PTR es:[rdi],dx
  41ed6f:	ins    DWORD PTR es:[rdi],dx
  41ed70:	outs   dx,DWORD PTR ds:[rsi]
  41ed71:	jbe    0x41edd8
  41ed73:	add    dl,bh
  41ed75:	add    ebp,DWORD PTR [rbp+0x65]
  41ed78:	ins    DWORD PTR es:[rdi],dx
  41ed79:	jae    0x41ede0
  41ed7b:	je     0x41ed7d
  41ed7d:	add    BYTE PTR [rip+0x74757004],al        # 0x74b75d87
  41ed83:	jae    0x41ed85
  41ed85:	add    BYTE PTR [rax],cl
  41ed87:	add    al,0x71
  41ed89:	jae    0x41edfa
  41ed8b:	jb     0x41ee01
  41ed8d:	add    BYTE PTR [rdx],cl
  41ed8f:	add    al,0x72
  41ed91:	(bad)  
  41ed92:	imul   esi,DWORD PTR [rbx+0x65],0x72040c00
  41ed99:	gs (bad) 
  41ed9b:	ins    BYTE PTR es:[rdi],dx
  41ed9c:	ins    BYTE PTR es:[rdi],dx
  41ed9d:	outs   dx,DWORD PTR ds:[rsi]
  41ed9e:	movsxd eax,DWORD PTR [rax]
  41eda0:	adc    al,0x4
  41eda2:	jae    0x41ee09
  41eda4:	je     0x41ee12
  41eda6:	outs   dx,DWORD PTR ds:[rsi]
  41eda7:	movsxd esp,DWORD PTR [rcx+0x6c]
  41edaa:	add    BYTE PTR gs:[rsi],dl
  41edad:	add    al,0x73
  41edaf:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  41edb6:	and    eax,DWORD PTR [rbx+rsi*2]
  41edb9:	je     0x41ee2d
  41edbb:	movsxd ebp,DWORD PTR [rax+0x72]
  41edbe:	add    BYTE PTR [rax],al
  41edc0:	and    al,0x4
  41edc2:	jae    0x41ee38
  41edc4:	jb     0x41ee29
  41edc6:	ins    DWORD PTR es:[rdi],dx
  41edc7:	jo     0x41edc9
  41edc9:	add    BYTE PTR [rsi],ah
  41edcb:	add    al,0x73
  41edcd:	je     0x41ee41
  41edcf:	movsxd esi,DWORD PTR [rax+0x79]
  41edd2:	add    BYTE PTR [rax],al
  41edd4:	sub    DWORD PTR [rbx+rsi*2],eax
  41edd7:	je     0x41ee4b
  41edd9:	gs jb  0x41ee4e
  41eddc:	outs   dx,DWORD PTR ds:[rsi]
  41eddd:	jb     0x41eddf
  41eddf:	add    BYTE PTR [rbx],ch
  41ede1:	add    al,0x73
  41ede3:	je     0x41ee57
  41ede5:	ins    BYTE PTR es:[rdi],dx
  41ede6:	outs   dx,BYTE PTR gs:[rsi]
  41ede8:	add    BYTE PTR [rax],al
  41edea:	cs add al,0x73
  41eded:	je     0x41ee61
  41edef:	outs   dx,BYTE PTR ds:[rsi]
  41edf0:	movsxd ebp,DWORD PTR [rbp+0x70]
  41edf3:	add    BYTE PTR [rdi],ch
  41edf5:	add    al,0x73
  41edf7:	je     0x41ee6b
  41edf9:	outs   dx,BYTE PTR ds:[rsi]
  41edfa:	movsxd esi,DWORD PTR [rax+0x79]
  41edfd:	add    BYTE PTR [rdx],dh
  41edff:	add    al,0x73
  41ee01:	je     0x41ee75
  41ee03:	jb     0x41ee68
  41ee05:	push   0x4390072
  41ee0a:	jae    0x41ee80
  41ee0c:	jb     0x41ee82
  41ee0e:	outs   dx,DWORD PTR ds:[rsi]
  41ee0f:	jne    0x41ee7d
  41ee11:	add    BYTE PTR [rsp+rax*1+0x75],cl
  41ee15:	outs   dx,BYTE PTR ds:[rsi]
  41ee16:	addr32 gs je 0x41ee7d
  41ee1a:	add    BYTE PTR [rax],al
  41ee1c:	rex.WRX add al,0x76
  41ee1f:	data16 jo 0x41ee94
  41ee22:	imul   ebp,DWORD PTR [rsi+0x74],0x5d000066
  41ee29:	add    al,0x77
  41ee2b:	movsxd esi,DWORD PTR [rbx+0x63]
  41ee2e:	jo     0x41eea9
  41ee30:	add    BYTE PTR [rax],al
  41ee32:	(bad)  
  41ee33:	add    al,0x77
  41ee35:	movsxd esi,DWORD PTR [rbx+0x6c]
  41ee38:	outs   dx,BYTE PTR gs:[rsi]
  41ee3a:	add    BYTE PTR [rax],al
  41ee3c:	mov    esi,0x74735f04
  41ee41:	jb     0x41eea7
  41ee43:	jne    0x41eeb5
  41ee45:	add    al,ch
  41ee47:	add    al,0x5f
  41ee49:	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
  41ee50:	lock add DWORD PTR [rbp+0x65],ecx
  41ee54:	jae    0x41eec9
  41ee56:	(bad)  
  41ee57:	rex.X outs dx,DWORD PTR gs:[esi]
  41ee5b:	js     0x41eeb4
  41ee5d:	add    BYTE PTR [rax],al
  41ee5f:	add    BYTE PTR [rax],al
  41ee61:	loopne 0x41ee64
  41ee63:	add    BYTE PTR [rax],al
  41ee65:	loopne 0x41ee68
  41ee67:	add    BYTE PTR [rax],al
  41ee69:	loopne 0x41ee6c
  41ee6b:	add    BYTE PTR [rax],al
  41ee6d:	loopne 0x41ee70
  41ee6f:	add    BYTE PTR [rcx+rbp*2+0x62],ch
  41ee73:	imul   ebp,DWORD PTR [rsi+0x74],0x2e382d6c
  41ee7a:	fs ins BYTE PTR es:[rdi],dx
  41ee7c:	ins    BYTE PTR es:[rdi],dx
  41ee7d:	add    BYTE PTR [rax],al
  41ee7f:	add    BYTE PTR [rax+riz*8],dl
  41ee82:	add    DWORD PTR [rax],eax
  41ee84:	adc    al,0xe0
  41ee86:	add    DWORD PTR [rax],eax
  41ee88:	adc    al,0xe0
  41ee8a:	add    DWORD PTR [rax],eax
  41ee8c:	ins    BYTE PTR es:[rdi],dx
  41ee8d:	imul   esp,DWORD PTR [rdx+0x69],0x766e6f63
  41ee94:	sub    eax,0x6c642e32
  41ee99:	ins    BYTE PTR es:[rdi],dx
  41ee9a:	add    BYTE PTR [rax],al
  41ee9c:	sub    al,ah
  41ee9e:	add    DWORD PTR [rax],eax
  41eea0:	sub    al,ah
  41eea2:	add    DWORD PTR [rax],eax
  41eea4:	sub    al,ah
  41eea6:	add    DWORD PTR [rax],eax
  41eea8:	sub    al,ah
  41eeaa:	add    DWORD PTR [rax],eax
  41eeac:	sub    al,ah
  41eeae:	add    DWORD PTR [rax],eax
  41eeb0:	sub    al,ah
  41eeb2:	add    DWORD PTR [rax],eax
  41eeb4:	sub    al,ah
  41eeb6:	add    DWORD PTR [rax],eax
  41eeb8:	sub    al,ah
  41eeba:	add    DWORD PTR [rax],eax
  41eebc:	sub    al,ah
  41eebe:	add    DWORD PTR [rax],eax
  41eec0:	sub    al,ah
  41eec2:	add    DWORD PTR [rax],eax
  41eec4:	sub    al,ah
  41eec6:	add    DWORD PTR [rax],eax
  41eec8:	sub    al,ah
  41eeca:	add    DWORD PTR [rax],eax
  41eecc:	sub    al,ah
  41eece:	add    DWORD PTR [rax],eax
  41eed0:	sub    al,ah
  41eed2:	add    DWORD PTR [rax],eax
  41eed4:	sub    al,ah
  41eed6:	add    DWORD PTR [rax],eax
  41eed8:	sub    al,ah
  41eeda:	add    DWORD PTR [rax],eax
  41eedc:	sub    al,ah
  41eede:	add    DWORD PTR [rax],eax
  41eee0:	sub    al,ah
  41eee2:	add    DWORD PTR [rax],eax
  41eee4:	sub    al,ah
  41eee6:	add    DWORD PTR [rax],eax
  41eee8:	sub    al,ah
  41eeea:	add    DWORD PTR [rax],eax
  41eeec:	sub    al,ah
  41eeee:	add    DWORD PTR [rax],eax
  41eef0:	sub    al,ah
  41eef2:	add    DWORD PTR [rax],eax
  41eef4:	sub    al,ah
  41eef6:	add    DWORD PTR [rax],eax
  41eef8:	sub    al,ah
  41eefa:	add    DWORD PTR [rax],eax
  41eefc:	sub    al,ah
  41eefe:	add    DWORD PTR [rax],eax
  41ef00:	sub    al,ah
  41ef02:	add    DWORD PTR [rax],eax
  41ef04:	sub    al,ah
  41ef06:	add    DWORD PTR [rax],eax
  41ef08:	sub    al,ah
  41ef0a:	add    DWORD PTR [rax],eax
  41ef0c:	sub    al,ah
  41ef0e:	add    DWORD PTR [rax],eax
  41ef10:	sub    al,ah
  41ef12:	add    DWORD PTR [rax],eax
  41ef14:	sub    al,ah
  41ef16:	add    DWORD PTR [rax],eax
  41ef18:	sub    al,ah
  41ef1a:	add    DWORD PTR [rax],eax
  41ef1c:	sub    al,ah
  41ef1e:	add    DWORD PTR [rax],eax
  41ef20:	sub    al,ah
  41ef22:	add    DWORD PTR [rax],eax
  41ef24:	sub    al,ah
  41ef26:	add    DWORD PTR [rax],eax
  41ef28:	sub    al,ah
  41ef2a:	add    DWORD PTR [rax],eax
  41ef2c:	sub    al,ah
  41ef2e:	add    DWORD PTR [rax],eax
  41ef30:	sub    al,ah
  41ef32:	add    DWORD PTR [rax],eax
  41ef34:	sub    al,ah
  41ef36:	add    DWORD PTR [rax],eax
  41ef38:	rex.WXB
  41ef39:	rex.RB push r10
  41ef3b:	rex.WRX
  41ef3c:	rex.RB
  41ef3d:	xor    r14,QWORD PTR [rdx]
  41ef40:	cs fs ins BYTE PTR es:[rdi],dx
  41ef43:	ins    BYTE PTR es:[rdi],dx
  41ef44:	add    BYTE PTR [rax],al
  41ef46:	add    BYTE PTR [rax],al
  41ef48:	cmp    al,0xe0
  41ef4a:	add    DWORD PTR [rax],eax
  41ef4c:	cmp    al,0xe0
  41ef4e:	add    DWORD PTR [rax],eax
  41ef50:	cmp    al,0xe0
  41ef52:	add    DWORD PTR [rax],eax
  41ef54:	cmp    al,0xe0
  41ef56:	add    DWORD PTR [rax],eax
  41ef58:	cmp    al,0xe0
  41ef5a:	add    DWORD PTR [rax],eax
  41ef5c:	cmp    al,0xe0
  41ef5e:	add    DWORD PTR [rax],eax
  41ef60:	cmp    al,0xe0
  41ef62:	add    DWORD PTR [rax],eax
  41ef64:	cmp    al,0xe0
  41ef66:	add    DWORD PTR [rax],eax
  41ef68:	cmp    al,0xe0
  41ef6a:	add    DWORD PTR [rax],eax
  41ef6c:	cmp    al,0xe0
  41ef6e:	add    DWORD PTR [rax],eax
  41ef70:	cmp    al,0xe0
  41ef72:	add    DWORD PTR [rax],eax
  41ef74:	cmp    al,0xe0
  41ef76:	add    DWORD PTR [rax],eax
  41ef78:	cmp    al,0xe0
  41ef7a:	add    DWORD PTR [rax],eax
  41ef7c:	cmp    al,0xe0
  41ef7e:	add    DWORD PTR [rax],eax
  41ef80:	cmp    al,0xe0
  41ef82:	add    DWORD PTR [rax],eax
  41ef84:	cmp    al,0xe0
  41ef86:	add    DWORD PTR [rax],eax
  41ef88:	cmp    al,0xe0
  41ef8a:	add    DWORD PTR [rax],eax
  41ef8c:	cmp    al,0xe0
  41ef8e:	add    DWORD PTR [rax],eax
  41ef90:	cmp    al,0xe0
  41ef92:	add    DWORD PTR [rax],eax
  41ef94:	cmp    al,0xe0
  41ef96:	add    DWORD PTR [rax],eax
  41ef98:	cmp    al,0xe0
  41ef9a:	add    DWORD PTR [rax],eax
  41ef9c:	cmp    al,0xe0
  41ef9e:	add    DWORD PTR [rax],eax
  41efa0:	cmp    al,0xe0
  41efa2:	add    DWORD PTR [rax],eax
  41efa4:	cmp    al,0xe0
  41efa6:	add    DWORD PTR [rax],eax
  41efa8:	cmp    al,0xe0
  41efaa:	add    DWORD PTR [rax],eax
  41efac:	cmp    al,0xe0
  41efae:	add    DWORD PTR [rax],eax
  41efb0:	cmp    al,0xe0
  41efb2:	add    DWORD PTR [rax],eax
  41efb4:	cmp    al,0xe0
  41efb6:	add    DWORD PTR [rax],eax
  41efb8:	cmp    al,0xe0
  41efba:	add    DWORD PTR [rax],eax
  41efbc:	cmp    al,0xe0
  41efbe:	add    DWORD PTR [rax],eax
  41efc0:	cmp    al,0xe0
  41efc2:	add    DWORD PTR [rax],eax
  41efc4:	cmp    al,0xe0
  41efc6:	add    DWORD PTR [rax],eax
  41efc8:	cmp    al,0xe0
  41efca:	add    DWORD PTR [rax],eax
  41efcc:	cmp    al,0xe0
  41efce:	add    DWORD PTR [rax],eax
  41efd0:	cmp    al,0xe0
  41efd2:	add    DWORD PTR [rax],eax
  41efd4:	cmp    al,0xe0
  41efd6:	add    DWORD PTR [rax],eax
  41efd8:	cmp    al,0xe0
  41efda:	add    DWORD PTR [rax],eax
  41efdc:	cmp    al,0xe0
  41efde:	add    DWORD PTR [rax],eax
  41efe0:	cmp    al,0xe0
  41efe2:	add    DWORD PTR [rax],eax
  41efe4:	cmp    al,0xe0
  41efe6:	add    DWORD PTR [rax],eax
  41efe8:	cmp    al,0xe0
  41efea:	add    DWORD PTR [rax],eax
  41efec:	cmp    al,0xe0
  41efee:	add    DWORD PTR [rax],eax
  41eff0:	cmp    al,0xe0
  41eff2:	add    DWORD PTR [rax],eax
  41eff4:	cmp    al,0xe0
  41eff6:	add    DWORD PTR [rax],eax
  41eff8:	cmp    al,0xe0
  41effa:	add    DWORD PTR [rax],eax
  41effc:	cmp    al,0xe0
  41effe:	add    DWORD PTR [rax],eax
  41f000:	cmp    al,0xe0
  41f002:	add    DWORD PTR [rax],eax
  41f004:	cmp    al,0xe0
  41f006:	add    DWORD PTR [rax],eax
  41f008:	cmp    al,0xe0
  41f00a:	add    DWORD PTR [rax],eax
  41f00c:	cmp    al,0xe0
  41f00e:	add    DWORD PTR [rax],eax
  41f010:	cmp    al,0xe0
  41f012:	add    DWORD PTR [rax],eax
  41f014:	cmp    al,0xe0
  41f016:	add    DWORD PTR [rax],eax
  41f018:	cmp    al,0xe0
  41f01a:	add    DWORD PTR [rax],eax
  41f01c:	cmp    al,0xe0
  41f01e:	add    DWORD PTR [rax],eax
  41f020:	cmp    al,0xe0
  41f022:	add    DWORD PTR [rax],eax
  41f024:	cmp    al,0xe0
  41f026:	add    DWORD PTR [rax],eax
  41f028:	cmp    al,0xe0
  41f02a:	add    DWORD PTR [rax],eax
  41f02c:	cmp    al,0xe0
  41f02e:	add    DWORD PTR [rax],eax
  41f030:	cmp    al,0xe0
  41f032:	add    DWORD PTR [rax],eax
  41f034:	cmp    al,0xe0
  41f036:	add    DWORD PTR [rax],eax
  41f038:	cmp    al,0xe0
  41f03a:	add    DWORD PTR [rax],eax
  41f03c:	cmp    al,0xe0
  41f03e:	add    DWORD PTR [rax],eax
  41f040:	cmp    al,0xe0
  41f042:	add    DWORD PTR [rax],eax
  41f044:	cmp    al,0xe0
  41f046:	add    DWORD PTR [rax],eax
  41f048:	cmp    al,0xe0
  41f04a:	add    DWORD PTR [rax],eax
  41f04c:	cmp    al,0xe0
  41f04e:	add    DWORD PTR [rax],eax
  41f050:	ins    DWORD PTR es:[rdi],dx
  41f051:	jae    0x41f0c9
  41f053:	movsxd esi,DWORD PTR [rdx+0x74]
  41f056:	cs fs ins BYTE PTR es:[rdi],dx
  41f059:	ins    BYTE PTR es:[rdi],dx
  41f05a:	add    BYTE PTR [rax],al
  41f05c:	push   rax
  41f05d:	loopne 0x41f060
  41f05f:	add    BYTE PTR [rbp+0x53],dl
  41f062:	rex.RB push r10
  41f064:	xor    esi,DWORD PTR [rdx]
  41f066:	cs fs ins BYTE PTR es:[rdi],dx
  41f069:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000420000 <.CRT>:
	...
  420008:	(bad)  
  420009:	adc    DWORD PTR [rax+0x0],eax
	...
  420020:	adc    BYTE PTR [rax],dl
  420022:	add    BYTE PTR [rax],al
  420025:	add    BYTE PTR [rax],al
  420027:	add    BYTE PTR [rax-0x4e],dl
  42002a:	add    BYTE PTR [rax],al
	...
  42003d:	add    BYTE PTR [rax],al
  42003f:	add    BYTE PTR [rax+0x40b4],al
  420045:	add    BYTE PTR [rax],al
  420047:	add    BYTE PTR [rax-0x4c],dl
  42004a:	add    BYTE PTR [rax],al
	...

Disassembly of section .tls:

0000000000421000 <.tls>:
	...
  421020:	add    BYTE PTR [rax],dl
  421022:	rex.X add BYTE PTR [rax],al
  421025:	add    BYTE PTR [rax],al
  421027:	add    BYTE PTR [rax+0x10],ah
  42102a:	rex.X add BYTE PTR [rax],al
  42102d:	add    BYTE PTR [rax],al
  42102f:	add    ah,bl
  421031:	enter  0x41,0x0
  421035:	add    BYTE PTR [rax],al
  421037:	add    BYTE PTR [rax+0x0],al
  42103a:	rex.X add BYTE PTR [rax],al
	...

Disassembly of section .rsrc:

0000000000422000 <.rsrc>:
	...
  42200c:	add    BYTE PTR [rax],al
  42200e:	add    DWORD PTR [rax],eax
  422010:	adc    BYTE PTR [rax],al
  422012:	add    BYTE PTR [rax],al
  422014:	sbb    BYTE PTR [rax],al
  422016:	add    BYTE PTR [rax+0x0],al
	...
  422024:	add    BYTE PTR [rax],al
  422026:	add    DWORD PTR [rax],eax
  422028:	add    DWORD PTR [rax],eax
  42202a:	add    BYTE PTR [rax],al
  42202c:	xor    BYTE PTR [rax],al
  42202e:	add    BYTE PTR [rax+0x0],al
	...
  42203c:	add    BYTE PTR [rax],al
  42203e:	add    DWORD PTR [rax],eax
  422040:	or     DWORD PTR [rax+rax*1],eax
  422043:	add    BYTE PTR [rax+0x0],cl
  422046:	add    BYTE PTR [rax],al
  422048:	pop    rax
  422049:	and    BYTE PTR [rdx],al
  42204b:	add    BYTE PTR [rax+0x5],cl
  422051:	add    BYTE PTR [rax],al
  422053:	add    BYTE PTR [rax],al
  422055:	add    BYTE PTR [rax],al
  422057:	add    BYTE PTR [rax+0x3405],cl
  42205d:	add    BYTE PTR [rsi+0x0],dl
  422060:	push   rbx
  422061:	add    BYTE PTR [rdi+0x0],bl
  422064:	push   rsi
  422065:	add    BYTE PTR [rbp+0x0],al
  422068:	push   rdx
  422069:	add    BYTE PTR [rbx+0x0],dl
  42206c:	rex.WB add BYTE PTR [r15+0x0],cl
  422070:	rex.WRX add BYTE PTR [rdi+0x0],r11b
  422074:	rex.WB add BYTE PTR [r14+0x0],cl
  422078:	rex.RX add BYTE PTR [rdi+0x0],r9b
  42207c:	add    BYTE PTR [rax],al
  42207e:	add    BYTE PTR [rax],al
  422080:	mov    ebp,0xfeef04
  422085:	add    BYTE PTR [rcx],al
  422087:	add    BYTE PTR [rbx],dl
  422089:	add    BYTE PTR [rax],al
  42208b:	add    BYTE PTR [rax],al
  42208d:	add    BYTE PTR [rip+0x1300],al        # 0x423393
  422093:	add    BYTE PTR [rax],al
  422095:	add    BYTE PTR [rip+0x3f00],al        # 0x425f9b
  42209b:	add    BYTE PTR [rax],al
  42209d:	add    BYTE PTR [rax],al
  42209f:	add    BYTE PTR [rax+rax*1],al
  4220a2:	add    DWORD PTR [rax],eax
  4220a4:	add    DWORD PTR [rax],eax
	...
  4220b2:	add    BYTE PTR [rax],al
  4220b4:	out    0x4,al
  4220b6:	add    BYTE PTR [rax],al
  4220b8:	add    DWORD PTR [rax],eax
  4220ba:	push   rbx
  4220bb:	add    BYTE PTR [rax+rax*1+0x72],dh
  4220bf:	add    BYTE PTR [rcx+0x0],ch
  4220c2:	outs   dx,BYTE PTR ds:[rsi]
  4220c3:	add    BYTE PTR [rdi+0x0],ah
  4220c6:	rex.RX add BYTE PTR [rcx+0x0],r13b
  4220ca:	ins    BYTE PTR es:[rdi],dx
  4220cb:	add    BYTE PTR [rbp+0x0],ah
  4220ce:	rex.WB add BYTE PTR [r14+0x0],bpl
  4220d2:	data16 add BYTE PTR [rdi+0x0],ch
  4220d6:	add    BYTE PTR [rax],al
  4220d8:	ret    0x4
  4220db:	add    BYTE PTR [rcx],al
  4220dd:	add    BYTE PTR [rax],dh
  4220df:	add    BYTE PTR [rax+rax*1],dh
  4220e2:	xor    BYTE PTR [rax],al
  4220e4:	cmp    DWORD PTR [rax],eax
  4220e6:	xor    BYTE PTR [rax],al
  4220e8:	xor    BYTE PTR [rax],al
  4220ea:	xor    BYTE PTR [rax],al
  4220ec:	xor    BYTE PTR [rax],al
  4220ee:	add    BYTE PTR [rax],al
  4220f0:	sbb    al,0x2
  4220f2:	add    al,BYTE PTR [rcx]
  4220f4:	add    DWORD PTR [rax],eax
  4220f6:	rex.XB add BYTE PTR [r15+0x0],bpl
  4220fa:	ins    DWORD PTR es:[rdi],dx
  4220fb:	add    BYTE PTR [rbp+0x0],ch
  4220fe:	add    BYTE PTR gs:[rsi+0x0],ch
  422102:	je     0x422104
  422104:	jae    0x422106
  422106:	add    BYTE PTR [rax],al
  422108:	push   rsp
  422109:	add    BYTE PTR [rax+0x0],ch
  42210c:	imul   eax,DWORD PTR [rax],0x200073
  422112:	jo     0x422114
  422114:	jb     0x422116
  422116:	outs   dx,DWORD PTR ds:[rsi]
  422117:	add    BYTE PTR [rdi+0x0],ah
  42211a:	jb     0x42211c
  42211c:	(bad)  
  42211d:	add    BYTE PTR [rbp+0x0],ch
  422120:	and    BYTE PTR [rax],al
  422122:	imul   eax,DWORD PTR [rax],0x200073
  422128:	data16 add BYTE PTR [rdx+0x0],dh
  42212c:	add    BYTE PTR gs:[rbp+0x0],ah
  422130:	and    BYTE PTR [rax],al
  422132:	jae    0x422134
  422134:	outs   dx,DWORD PTR ds:[rsi]
  422135:	add    BYTE PTR [rsi+0x0],ah
  422138:	je     0x42213a
  42213a:	ja     0x42213c
  42213c:	(bad)  
  42213d:	add    BYTE PTR [rdx+0x0],dh
  422140:	add    BYTE PTR gs:[rdx],bh
  422143:	add    BYTE PTR [rax],ah
  422145:	add    BYTE PTR [rcx+0x0],bh
  422148:	outs   dx,DWORD PTR ds:[rsi]
  422149:	add    BYTE PTR [rbp+0x0],dh
  42214c:	and    BYTE PTR [rax],al
  42214e:	movsxd eax,DWORD PTR [rax]
  422150:	(bad)  
  422151:	add    BYTE PTR [rsi+0x0],ch
  422154:	and    BYTE PTR [rax],al
  422156:	jb     0x422158
  422158:	add    BYTE PTR gs:[rax+rax*1+0x69],ah
  42215d:	add    BYTE PTR [rbx+0x0],dh
  422160:	je     0x422162
  422162:	jb     0x422164
  422164:	imul   eax,DWORD PTR [rax],0x750062
  42216a:	je     0x42216c
  42216c:	add    BYTE PTR gs:[rax],ah
  42216f:	add    BYTE PTR [rcx+0x0],ch
  422172:	je     0x422174
  422174:	and    BYTE PTR [rax],al
  422176:	(bad)  
  422177:	add    BYTE PTR [rsi+0x0],ch
  42217a:	add    BYTE PTR fs:[rdi],ch
  42217d:	add    BYTE PTR [rdi+0x0],ch
  422180:	jb     0x422182
  422182:	and    BYTE PTR [rax],al
  422184:	ins    DWORD PTR es:[rdi],dx
  422185:	add    BYTE PTR [rdi+0x0],ch
  422188:	add    BYTE PTR fs:[rcx+0x0],ch
  42218c:	data16 add BYTE PTR [rcx+0x0],bh
  422190:	and    BYTE PTR [rax],al
  422192:	imul   eax,DWORD PTR [rax],0x200074
  422198:	jne    0x42219a
  42219a:	outs   dx,BYTE PTR ds:[rsi]
  42219b:	add    BYTE PTR [rax+rax*1+0x65],ah
  42219f:	add    BYTE PTR [rdx+0x0],dh
  4221a2:	and    BYTE PTR [rax],al
  4221a4:	je     0x4221a6
  4221a6:	push   0x20006500
  4221ab:	add    BYTE PTR [rax+rax*1+0x65],dh
  4221af:	add    BYTE PTR [rdx+0x0],dh
  4221b2:	ins    DWORD PTR es:[rdi],dx
  4221b3:	add    BYTE PTR [rbx+0x0],dh
  4221b6:	and    BYTE PTR [rax],al
  4221b8:	outs   dx,DWORD PTR ds:[rsi]
  4221b9:	add    BYTE PTR [rsi+0x0],ah
  4221bc:	and    BYTE PTR [rax],al
  4221be:	je     0x4221c0
  4221c0:	push   0x20006500
  4221c5:	add    BYTE PTR [rdi+0x0],al
  4221c8:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  4221cc:	and    BYTE PTR [rax],al
  4221ce:	rex.RXB add BYTE PTR [r13+0x0],r12b
  4221d2:	outs   dx,BYTE PTR ds:[rsi]
  4221d3:	add    BYTE PTR [rbp+0x0],ah
  4221d6:	jb     0x4221d8
  4221d8:	(bad)  
  4221d9:	add    BYTE PTR [rax+rax*1+0x20],ch
  4221dd:	add    BYTE PTR [rax+0x0],dl
  4221e0:	jne    0x4221e2
  4221e2:	(bad)  
  4221e3:	add    BYTE PTR [rax+rax*1+0x69],ch
  4221e7:	add    BYTE PTR [rbx+0x0],ah
  4221ea:	and    BYTE PTR [rax],al
  4221ec:	rex.WR add BYTE PTR [rcx+0x0],r13b
  4221f0:	movsxd eax,DWORD PTR [rax]
  4221f2:	add    BYTE PTR gs:[rsi+0x0],ch
  4221f6:	jae    0x4221f8
  4221f8:	add    BYTE PTR gs:[rsi],ch
  4221fb:	add    BYTE PTR [rax],ah
  4221fd:	add    BYTE PTR [rcx+0x0],bl
  422200:	outs   dx,DWORD PTR ds:[rsi]
  422201:	add    BYTE PTR [rbp+0x0],dh
  422204:	and    BYTE PTR [rax],al
  422206:	jae    0x422208
  422208:	push   0x75006f00
  42220d:	add    BYTE PTR [rax+rax*1+0x64],ch
  422211:	add    BYTE PTR [rax],ah
  422213:	add    BYTE PTR [rax+0x0],ch
  422216:	(bad)  
  422217:	add    BYTE PTR [rsi+0x0],dh
  42221a:	add    BYTE PTR gs:[rax],ah
  42221d:	add    BYTE PTR [rdx+0x0],dh
  422220:	add    BYTE PTR gs:[rbx+0x0],ah
  422224:	add    BYTE PTR gs:[rcx+0x0],ch
  422228:	jbe    0x42222a
  42222a:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
  42222f:	add    BYTE PTR [rcx+0x0],ah
  422232:	and    BYTE PTR [rax],al
  422234:	movsxd eax,DWORD PTR [rax]
  422236:	outs   dx,DWORD PTR ds:[rsi]
  422237:	add    BYTE PTR [rax+0x0],dh
  42223a:	jns    0x42223c
  42223c:	and    BYTE PTR [rax],al
  42223e:	outs   dx,DWORD PTR ds:[rsi]
  42223f:	add    BYTE PTR [rsi+0x0],ah
  422242:	and    BYTE PTR [rax],al
  422244:	je     0x422246
  422246:	push   0x20006500
  42224b:	add    BYTE PTR [rdi+0x0],al
  42224e:	rex.WRX add BYTE PTR [rbp+0x0],r10b
  422252:	and    BYTE PTR [rax],al
  422254:	rex.RXB add BYTE PTR [r13+0x0],r12b
  422258:	outs   dx,BYTE PTR ds:[rsi]
  422259:	add    BYTE PTR [rbp+0x0],ah
  42225c:	jb     0x42225e
  42225e:	(bad)  
  42225f:	add    BYTE PTR [rax+rax*1+0x20],ch
  422263:	add    BYTE PTR [rax+0x0],dl
  422266:	jne    0x422268
  422268:	(bad)  
  422269:	add    BYTE PTR [rax+rax*1+0x69],ch
  42226d:	add    BYTE PTR [rbx+0x0],ah
  422270:	and    BYTE PTR [rax],al
  422272:	rex.WR add BYTE PTR [rcx+0x0],r13b
  422276:	movsxd eax,DWORD PTR [rax]
  422278:	add    BYTE PTR gs:[rsi+0x0],ch
  42227c:	jae    0x42227e
  42227e:	add    BYTE PTR gs:[rax],ah
  422281:	add    BYTE PTR [rcx+0x0],ah
  422284:	ins    BYTE PTR es:[rdi],dx
  422285:	add    BYTE PTR [rdi+0x0],ch
  422288:	outs   dx,BYTE PTR ds:[rsi]
  422289:	add    BYTE PTR [rdi+0x0],ah
  42228c:	and    BYTE PTR [rax],al
  42228e:	ja     0x422290
  422290:	imul   eax,DWORD PTR [rax],0x680074
  422296:	and    BYTE PTR [rax],al
  422298:	je     0x42229a
  42229a:	push   0x73006900
  42229f:	add    BYTE PTR [rax],ah
  4222a1:	add    BYTE PTR [rax+0x0],dh
  4222a4:	jb     0x4222a6
  4222a6:	outs   dx,DWORD PTR ds:[rsi]
  4222a7:	add    BYTE PTR [rdi+0x0],ah
  4222aa:	jb     0x4222ac
  4222ac:	(bad)  
  4222ad:	add    BYTE PTR [rbp+0x0],ch
  4222b0:	add    BYTE PTR cs:[rax],ah
  4222b3:	add    BYTE PTR [rcx+0x0],cl
  4222b6:	data16 add BYTE PTR [rax],ah
  4222b9:	add    BYTE PTR [rsi+0x0],ch
  4222bc:	outs   dx,DWORD PTR ds:[rsi]
  4222bd:	add    BYTE PTR [rax+rax*1+0x2c],dh
  4222c1:	add    BYTE PTR [rax],ah
  4222c3:	add    BYTE PTR [rbx+0x0],dh
  4222c6:	add    BYTE PTR gs:[rbp+0x0],ah
  4222ca:	and    BYTE PTR [rax],al
  4222cc:	cmp    al,0x0
  4222ce:	push   0x74007400
  4222d3:	add    BYTE PTR [rax+0x0],dh
  4222d6:	cmp    al,BYTE PTR [rax]
  4222d8:	(bad)  
  4222d9:	add    BYTE PTR [rdi],ch
  4222db:	add    BYTE PTR [rdi+0x0],dh
  4222de:	ja     0x4222e0
  4222e0:	ja     0x4222e2
  4222e2:	add    BYTE PTR cs:[rdi+0x0],ah
  4222e6:	outs   dx,BYTE PTR ds:[rsi]
  4222e7:	add    BYTE PTR [rbp+0x0],dh
  4222ea:	add    BYTE PTR cs:[rdi+0x0],ch
  4222ee:	jb     0x4222f0
  4222f0:	add    BYTE PTR [edi],ch
  4222f3:	add    BYTE PTR [rax+rax*1+0x69],ch
  4222f7:	add    BYTE PTR [rbx+0x0],ah
  4222fa:	add    BYTE PTR gs:[rsi+0x0],ch
  4222fe:	jae    0x422300
  422300:	add    BYTE PTR gs:[rbx+0x0],dh
  422304:	(bad)  
  422305:	add    BYTE PTR [rsi],bh
  422307:	add    BYTE PTR [rsi],ch
  422309:	add    BYTE PTR [rax],al
  42230b:	add    BYTE PTR [rdx+0x0],dl
  42230e:	sbb    DWORD PTR [rax],eax
  422310:	add    DWORD PTR [rax],eax
  422312:	rex.XB add BYTE PTR [r15+0x0],bpl
  422316:	ins    DWORD PTR es:[rdi],dx
  422317:	add    BYTE PTR [rax+0x0],dh
  42231a:	(bad)  
  42231b:	add    BYTE PTR [rsi+0x0],ch
  42231e:	jns    0x422320
  422320:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  422324:	ins    DWORD PTR es:[rdi],dx
  422325:	add    BYTE PTR [rbp+0x0],ah
  422328:	add    BYTE PTR [rax],al
  42232a:	add    BYTE PTR [rax],al
  42232c:	rex.RX add BYTE PTR [rdx+0x0],r14b
  422330:	add    BYTE PTR gs:[rbp+0x0],ah
  422334:	and    BYTE PTR [rax],al
  422336:	push   rbx
  422337:	add    BYTE PTR [rdi+0x0],ch
  42233a:	data16 add BYTE PTR [rax+rax*1+0x77],dh
  42233f:	add    BYTE PTR [rcx+0x0],ah
  422342:	jb     0x422344
  422344:	add    BYTE PTR gs:[rax],ah
  422347:	add    BYTE PTR [rsi+0x0],al
  42234a:	outs   dx,DWORD PTR ds:[rsi]
  42234b:	add    BYTE PTR [rbp+0x0],dh
  42234e:	outs   dx,BYTE PTR ds:[rsi]
  42234f:	add    BYTE PTR [rax+rax*1+0x61],ah
  422353:	add    BYTE PTR [rax+rax*1+0x69],dh
  422357:	add    BYTE PTR [rdi+0x0],ch
  42235a:	outs   dx,BYTE PTR ds:[rsi]
  42235b:	add    BYTE PTR [rax],al
  42235d:	add    BYTE PTR [rax],al
  42235f:	add    BYTE PTR [rax+rax*1+0x10042],ch
  422366:	rex.RX add BYTE PTR [rcx+0x0],r13b
  42236a:	ins    BYTE PTR es:[rdi],dx
  42236b:	add    BYTE PTR [rbp+0x0],ah
  42236e:	add    BYTE PTR [rbp+0x0],r12b
  422372:	jae    0x422374
  422374:	movsxd eax,DWORD PTR [rax]
  422376:	jb     0x422378
  422378:	imul   eax,DWORD PTR [rax],0x740070
  42237e:	imul   eax,DWORD PTR [rax],0x6e006f
  422384:	add    BYTE PTR [rax],al
  422386:	add    BYTE PTR [rax],al
  422388:	rex.RXB add BYTE PTR [r8+0x0],r10b
  42238c:	rex.WR add BYTE PTR [rbp+0x0],r12b
  422390:	add    BYTE PTR fs:[rax],ah
  422393:	add    BYTE PTR [rax+0x0],dh
  422396:	jb     0x422398
  422398:	outs   dx,DWORD PTR ds:[rsi]
  422399:	add    BYTE PTR [rdi+0x0],ah
  42239c:	jb     0x42239e
  42239e:	(bad)  
  42239f:	add    BYTE PTR [rbp+0x0],ch
  4223a2:	and    BYTE PTR [rax],al
  4223a4:	data16 add BYTE PTR [rdi+0x0],ch
  4223a8:	jb     0x4223aa
  4223aa:	and    BYTE PTR [rax],al
  4223ac:	push   rdi
  4223ad:	add    BYTE PTR [rcx+0x0],ch
  4223b0:	outs   dx,BYTE PTR ds:[rsi]
  4223b1:	add    BYTE PTR [rax+rax*1+0x6f],ah
  4223b5:	add    BYTE PTR [rdi+0x0],dh
  4223b8:	jae    0x4223ba
  4223ba:	and    BYTE PTR [rax],al
  4223bc:	rex.WRX add BYTE PTR [rax+r8*1+0x2f],r10b
  4223c1:	add    BYTE PTR [rdx],dh
  4223c3:	add    BYTE PTR [rax],dh
  4223c5:	add    BYTE PTR [rax],dh
  4223c7:	add    BYTE PTR [rax],dh
  4223c9:	add    BYTE PTR [rdi],ch
  4223cb:	add    BYTE PTR [rax+0x0],bl
  4223ce:	push   rax
  4223cf:	add    BYTE PTR [rdi],ch
  4223d1:	add    BYTE PTR [rsi+0x0],dl
  4223d4:	imul   eax,DWORD PTR [rax],0x740073
  4223da:	(bad)  
  4223db:	add    BYTE PTR [rdi],ch
  4223dd:	add    BYTE PTR [rdi],dh
  4223df:	add    BYTE PTR [rax],ah
  4223e1:	add    BYTE PTR [rcx+0x0],ah
  4223e4:	outs   dx,BYTE PTR ds:[rsi]
  4223e5:	add    BYTE PTR [rax+rax*1+0x20],ah
  4223e9:	add    BYTE PTR [rdi+0x0],dl
  4223ec:	imul   eax,DWORD PTR [rax],0x64006e
  4223f2:	outs   dx,DWORD PTR ds:[rsi]
  4223f3:	add    BYTE PTR [rdi+0x0],dh
  4223f6:	jae    0x4223f8
  4223f8:	and    BYTE PTR [rax],al
  4223fa:	cmp    DWORD PTR [rax],eax
  4223fc:	xor    eax,0x39002f00
  422401:	add    BYTE PTR [rax],bh
  422403:	add    BYTE PTR [rdi],ch
  422405:	add    BYTE PTR [rbp+0x0],cl
  422408:	add    BYTE PTR [r8],r8b
  42240b:	add    BYTE PTR [rdx],dh
  42240d:	add    BYTE PTR [rcx],cl
  42240f:	add    BYTE PTR [rcx],al
  422411:	add    BYTE PTR [rsi+0x0],al
  422414:	imul   eax,DWORD PTR [rax],0x65006c
  42241a:	push   rsi
  42241b:	add    BYTE PTR [rbp+0x0],ah
  42241e:	jb     0x422420
  422420:	jae    0x422422
  422422:	imul   eax,DWORD PTR [rax],0x6e006f
  422428:	add    BYTE PTR [rax],al
  42242a:	add    BYTE PTR [rax],al
  42242c:	xor    BYTE PTR [rax],al
  42242e:	add    BYTE PTR cs:[rcx],dh
  422431:	add    BYTE PTR [rcx],bh
  422433:	add    BYTE PTR [rsi],ch
  422435:	add    BYTE PTR [rip+0x31002e00],dh        # 0x3142523b
  42243b:	add    BYTE PTR [rax],al
  42243d:	add    BYTE PTR [rax],al
  42243f:	add    BYTE PTR [rax+rax*1],ch
  422442:	(bad)  
  422443:	add    BYTE PTR [rcx],al
  422445:	add    BYTE PTR [rcx+0x0],cl
  422448:	outs   dx,BYTE PTR ds:[rsi]
  422449:	add    BYTE PTR [rax+rax*1+0x65],dh
  42244d:	add    BYTE PTR [rdx+0x0],dh
  422450:	outs   dx,BYTE PTR ds:[rsi]
  422451:	add    BYTE PTR [rcx+0x0],ah
  422454:	ins    BYTE PTR es:[rdi],dx
  422455:	add    BYTE PTR [rsi+0x0],cl
  422458:	(bad)  
  422459:	add    BYTE PTR [rbp+0x0],ch
  42245c:	add    BYTE PTR gs:[rax],al
  42245f:	add    BYTE PTR [rdx],ch
  422461:	add    BYTE PTR [rsi],ch
  422463:	add    BYTE PTR [rbp+0x0],ah
  422466:	js     0x422468
  422468:	add    BYTE PTR gs:[rax],al
  42246b:	add    BYTE PTR [rax+rax*1+0x18],dl
  42246f:	add    BYTE PTR [rcx],al
  422471:	add    BYTE PTR [rax+rax*1+0x65],cl
  422475:	add    BYTE PTR [rdi+0x0],ah
  422478:	(bad)  
  422479:	add    BYTE PTR [rax+rax*1+0x43],ch
  42247d:	add    BYTE PTR [rdi+0x0],ch
  422480:	jo     0x422482
  422482:	jns    0x422484
  422484:	jb     0x422486
  422486:	imul   eax,DWORD PTR [rax],0x680067
  42248c:	je     0x42248e
  42248e:	add    BYTE PTR [rax],al
  422490:	rex.XB add BYTE PTR [r15+0x0],bpl
  422494:	jo     0x422496
  422496:	jns    0x422498
  422498:	jb     0x42249a
  42249a:	imul   eax,DWORD PTR [rax],0x680067
  4224a0:	je     0x4224a2
  4224a2:	and    BYTE PTR [rax],al
  4224a4:	sub    BYTE PTR [rax],al
  4224a6:	rex.XB add BYTE PTR [r9],bpl
  4224a9:	add    BYTE PTR [rax],ah
  4224ab:	add    BYTE PTR [rcx],dh
  4224ad:	add    BYTE PTR [rcx],bh
  4224af:	add    BYTE PTR [rcx],bh
  4224b1:	add    BYTE PTR [rip+0x32002d00],dh        # 0x324251b7
  4224b7:	add    BYTE PTR [rax],dh
  4224b9:	add    BYTE PTR [rcx],dh
  4224bb:	add    BYTE PTR [rbx],dh
  4224bd:	add    BYTE PTR [rax],al
  4224bf:	add    BYTE PTR [rdx],ch
  4224c1:	add    BYTE PTR [rcx],al
  4224c3:	add    BYTE PTR [rcx],al
  4224c5:	add    BYTE PTR [rax+rax*1+0x65],cl
  4224c9:	add    BYTE PTR [rdi+0x0],ah
  4224cc:	(bad)  
  4224cd:	add    BYTE PTR [rax+rax*1+0x54],ch
  4224d1:	add    BYTE PTR [rdx+0x0],dh
  4224d4:	(bad)  
  4224d5:	add    BYTE PTR [rax+rax*1+0x65],ah
  4224d9:	add    BYTE PTR [rbp+0x0],ch
  4224dc:	(bad)  
  4224dd:	add    BYTE PTR [rdx+0x0],dh
  4224e0:	imul   eax,DWORD PTR [rax],0x73
	...
  4224eb:	add    BYTE PTR [rax+rax*1],dh
  4224ee:	(bad)  
  4224ef:	add    BYTE PTR [rcx],al
  4224f1:	add    BYTE PTR [rdi+0x0],cl
  4224f4:	jb     0x4224f6
  4224f6:	imul   eax,DWORD PTR [rax],0x690067
  4224fc:	outs   dx,BYTE PTR ds:[rsi]
  4224fd:	add    BYTE PTR [rcx+0x0],ah
  422500:	ins    BYTE PTR es:[rdi],dx
  422501:	add    BYTE PTR [rsi+0x0],al
  422504:	imul   eax,DWORD PTR [rax],0x65006c
  42250a:	outs   dx,BYTE PTR ds:[rsi]
  42250b:	add    BYTE PTR [rcx+0x0],ah
  42250e:	ins    DWORD PTR es:[rdi],dx
  42250f:	add    BYTE PTR [rbp+0x0],ah
  422512:	add    BYTE PTR [rax],al
  422514:	sub    al,BYTE PTR [rax]
  422516:	add    BYTE PTR cs:[rbp+0x0],ah
  42251a:	js     0x42251c
  42251c:	add    BYTE PTR gs:[rax],al
  42251f:	add    BYTE PTR [rax+rax*1+0x12],al
  422523:	add    BYTE PTR [rcx],al
  422525:	add    BYTE PTR [rax+0x0],dl
  422528:	jb     0x42252a
  42252a:	outs   dx,DWORD PTR ds:[rsi]
  42252b:	add    BYTE PTR [rax+rax*1+0x75],ah
  42252f:	add    BYTE PTR [rbx+0x0],ah
  422532:	je     0x422534
  422534:	rex.WRX add BYTE PTR [rcx+0x0],r12b
  422538:	ins    DWORD PTR es:[rdi],dx
  422539:	add    BYTE PTR [rbp+0x0],ah
  42253c:	add    BYTE PTR [rax],al
  42253e:	add    BYTE PTR [rax],al
  422540:	add    BYTE PTR [ebp+0x0],ah
  422544:	je     0x422546
  422546:	je     0x422548
  422548:	add    BYTE PTR gs:[rax+0x0],bh
  42254c:	je     0x42254e
  42254e:	and    BYTE PTR [rax],al
  422550:	jne    0x422552
  422552:	je     0x422554
  422554:	imul   eax,DWORD PTR [rax],0x69006c
  42255a:	je     0x42255c
  42255c:	imul   eax,DWORD PTR [rax],0x730065
  422562:	add    BYTE PTR [rax],al
  422564:	add    BYTE PTR ss:[rcx],cl
  422567:	add    BYTE PTR [rcx],al
  422569:	add    BYTE PTR [rax+0x0],dl
  42256c:	jb     0x42256e
  42256e:	outs   dx,DWORD PTR ds:[rsi]
  42256f:	add    BYTE PTR [rax+rax*1+0x75],ah
  422573:	add    BYTE PTR [rbx+0x0],ah
  422576:	je     0x422578
  422578:	push   rsi
  422579:	add    BYTE PTR [rbp+0x0],ah
  42257c:	jb     0x42257e
  42257e:	jae    0x422580
  422580:	imul   eax,DWORD PTR [rax],0x6e006f
  422586:	add    BYTE PTR [rax],al
  422588:	xor    BYTE PTR [rax],al
  42258a:	add    BYTE PTR cs:[rcx],dh
  42258d:	add    BYTE PTR [rcx],bh
  42258f:	add    BYTE PTR [rsi],ch
  422591:	add    BYTE PTR [rip+0x31002e00],dh        # 0x31425397
  422597:	add    BYTE PTR [rax],al
  422599:	add    BYTE PTR [rax],al
  42259b:	add    BYTE PTR [rax+rax*1+0x0],al
  42259f:	add    BYTE PTR [rcx],al
  4225a1:	add    BYTE PTR [rsi+0x0],dl
  4225a4:	(bad)  
  4225a5:	add    BYTE PTR [rdx+0x0],dh
  4225a8:	rex.RX add BYTE PTR [rcx+0x0],r13b
  4225ac:	ins    BYTE PTR es:[rdi],dx
  4225ad:	add    BYTE PTR [rbp+0x0],ah
  4225b0:	rex.WB add BYTE PTR [r14+0x0],bpl
  4225b4:	data16 add BYTE PTR [rdi+0x0],ch
  4225b8:	add    BYTE PTR [rax],al
  4225ba:	add    BYTE PTR [rax],al
  4225bc:	and    al,0x0
  4225be:	add    al,0x0
  4225c0:	add    BYTE PTR [rax],al
  4225c2:	push   rsp
  4225c3:	add    BYTE PTR [rdx+0x0],dh
  4225c6:	(bad)  
  4225c7:	add    BYTE PTR [rsi+0x0],ch
  4225ca:	jae    0x4225cc
  4225cc:	ins    BYTE PTR es:[rdi],dx
  4225cd:	add    BYTE PTR [rcx+0x0],ah
  4225d0:	je     0x4225d2
  4225d2:	imul   eax,DWORD PTR [rax],0x6e006f
  4225d8:	add    BYTE PTR [rax],al
  4225da:	add    BYTE PTR [rax],al
  4225dc:	or     DWORD PTR [rax+rax*1],eax
	...
