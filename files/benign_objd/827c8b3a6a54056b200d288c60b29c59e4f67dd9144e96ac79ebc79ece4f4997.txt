
827c8b3a6a54056b200d288c60b29c59e4f67dd9144e96ac79ebc79ece4f4997.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x3435]        # 0x404450
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x3436]        # 0x404460
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x3439]        # 0x404470
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x33fc]        # 0x404440
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x32af]        # 0x404300
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x33d1]        # 0x404430
  40105f:	mov    DWORD PTR [rip+0x5fa3],edx        # 0x407008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x402c40
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401bf0
  401081:	mov    rdx,QWORD PTR [rip+0x3308]        # 0x404390
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x32ee]        # 0x404380
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x3354]        # 0x4043f0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x328b]        # 0x404330
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x4017d0
  4010af:	mov    rax,QWORD PTR [rip+0x31fa]        # 0x4042b0
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x402c40
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x9a9]        # 0x401ad0
  401127:	call   0x401ac0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x32b5]        # 0x404420
  40116b:	lea    r8,[rip+0x5ea6]        # 0x407018
  401172:	lea    rdx,[rip+0x5ea7]        # 0x407020
  401179:	lea    rcx,[rip+0x5ea8]        # 0x407028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x5e78],eax        # 0x407000
  401188:	lea    rax,[rip+0x5e71]        # 0x407000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x3245]        # 0x4043e0
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x402c58
  4011a3:	mov    DWORD PTR [rip+0x5e67],eax        # 0x407010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x326a]        # 0x404430
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x316b]        # 0x404360
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x70d6]        # 0x4082d8
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x3147]        # 0x404370
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x5dba],0x1        # 0x407004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x308c]        # 0x4042f0
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401de0
  40127d:	lea    rcx,[rip+0x10fc]        # 0x402380
  401284:	call   QWORD PTR [rip+0x7046]        # 0x4082d0
  40128a:	mov    rdx,QWORD PTR [rip+0x30bf]        # 0x404350
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x402290
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x402c80
  4012a5:	call   0x401bd0
  4012aa:	mov    rax,QWORD PTR [rip+0x304f]        # 0x404300
  4012b1:	mov    QWORD PTR [rip+0x6750],rax        # 0x407a08
  4012b8:	mov    rax,QWORD PTR [rip+0x3061]        # 0x404320
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x66e9],rax        # 0x407a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x1cca],eax        # 0x403000
  401336:	mov    r12d,DWORD PTR [rip+0x5ceb]        # 0x407028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x402bd0
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x5cc2]        # 0x407020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x402ba8
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x402bd0
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x402bc8
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x5c6a],rbp        # 0x407020
  4013b6:	call   0x4017a0
  4013bb:	mov    rax,QWORD PTR [rip+0x2f4e]        # 0x404310
  4013c2:	mov    rdx,QWORD PTR [rip+0x5c4f]        # 0x407018
  4013c9:	mov    ecx,DWORD PTR [rip+0x5c59]        # 0x407028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x5c3c]        # 0x407018
  4013dc:	mov    rdx,QWORD PTR [rip+0x5c3d]        # 0x407020
  4013e3:	call   0x4015b6
  4013e8:	mov    ecx,DWORD PTR [rip+0x5c1a]        # 0x407008
  4013ee:	mov    DWORD PTR [rip+0x5c18],eax        # 0x40700c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x5c02]        # 0x407004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x402c28
  40140b:	mov    eax,DWORD PTR [rip+0x5bfb]        # 0x40700c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x2f39]        # 0x404370
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x402c30
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x2f4d]        # 0x4043b0
  401463:	mov    rcx,QWORD PTR [rip+0x2f36]        # 0x4043a0
  40146a:	call   0x402c20
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x6de7]        # 0x408280
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x2f29]        # 0x4043d0
  4014a7:	mov    rcx,QWORD PTR [rip+0x2f12]        # 0x4043c0
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x402c20
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x402bf0
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x2f55]        # 0x404430
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x4017e0
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x2f25]        # 0x404430
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x4017e0
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rbp
  401531:	mov    rbp,rsp
  401534:	sub    rsp,0x30
  401538:	mov    QWORD PTR [rbp+0x18],rdx
  40153c:	mov    QWORD PTR [rbp+0x20],r8
  401540:	mov    QWORD PTR [rbp+0x28],r9
  401544:	mov    QWORD PTR [rbp+0x10],rcx
  401548:	lea    rax,[rbp+0x18]
  40154c:	mov    QWORD PTR [rbp-0x8],rax
  401550:	mov    rax,QWORD PTR [rbp-0x8]
  401554:	mov    rdx,rax
  401557:	mov    rcx,QWORD PTR [rbp+0x10]
  40155b:	call   0x402b90
  401560:	mov    ecx,0xa
  401565:	call   0x402bb8
  40156a:	nop
  40156b:	add    rsp,0x30
  40156f:	pop    rbp
  401570:	ret    
  401571:	push   rbp
  401572:	mov    rbp,rsp
  401575:	sub    rsp,0x30
  401579:	mov    QWORD PTR [rbp+0x18],rdx
  40157d:	mov    QWORD PTR [rbp+0x20],r8
  401581:	mov    QWORD PTR [rbp+0x28],r9
  401585:	mov    QWORD PTR [rbp+0x10],rcx
  401589:	lea    rax,[rbp+0x18]
  40158d:	mov    QWORD PTR [rbp-0x8],rax
  401591:	mov    rax,QWORD PTR [rbp-0x8]
  401595:	mov    rdx,rax
  401598:	mov    rcx,QWORD PTR [rbp+0x10]
  40159c:	call   0x402b90
  4015a1:	mov    ecx,0xa
  4015a6:	call   0x402bb8
  4015ab:	mov    ecx,0x1
  4015b0:	call   0x402bf0
  4015b5:	nop
  4015b6:	push   rbp
  4015b7:	mov    rbp,rsp
  4015ba:	sub    rsp,0x30
  4015be:	mov    DWORD PTR [rbp+0x10],ecx
  4015c1:	mov    QWORD PTR [rbp+0x18],rdx
  4015c5:	call   0x4017a0
  4015ca:	lea    rdx,[rip+0xffffffffffffffa0]        # 0x401571
  4015d1:	lea    rcx,[rip+0xffffffffffffff58]        # 0x401530
  4015d8:	call   0x401610
  4015dd:	mov    QWORD PTR [rbp-0x8],rax
  4015e1:	call   0x401620
  4015e6:	mov    rdx,rax
  4015e9:	lea    rcx,[rip+0x2a10]        # 0x404000
  4015f0:	call   0x402bc0
  4015f5:	mov    rax,QWORD PTR [rbp-0x8]
  4015f9:	mov    rcx,rax
  4015fc:	call   0x401618
  401601:	mov    eax,0x0
  401606:	add    rsp,0x30
  40160a:	pop    rbp
  40160b:	ret    
  40160c:	nop
  40160d:	nop
  40160e:	nop
  40160f:	nop
  401610:	jmp    QWORD PTR [rip+0x6c2a]        # 0x408240
  401616:	nop
  401617:	nop
  401618:	jmp    QWORD PTR [rip+0x6c1a]        # 0x408238
  40161e:	nop
  40161f:	nop
  401620:	jmp    QWORD PTR [rip+0x6c0a]        # 0x408230
  401626:	nop
  401627:	nop
  401628:	nop    DWORD PTR [rax+rax*1+0x0]
  401630:	push   rbx
  401631:	sub    rsp,0x30
  401635:	mov    rbx,rcx
  401638:	mov    rcx,QWORD PTR [rip+0x63d1]        # 0x407a10
  40163f:	call   0x401be0
  401644:	cmp    rax,0xffffffffffffffff
  401648:	mov    QWORD PTR [rsp+0x20],rax
  40164d:	je     0x4016c5
  40164f:	mov    ecx,0x8
  401654:	call   0x402c18
  401659:	mov    rcx,QWORD PTR [rip+0x63b0]        # 0x407a10
  401660:	call   0x401be0
  401665:	mov    rcx,QWORD PTR [rip+0x63ac]        # 0x407a18
  40166c:	mov    QWORD PTR [rsp+0x20],rax
  401671:	call   0x401be0
  401676:	lea    rdx,[rsp+0x20]
  40167b:	lea    r8,[rsp+0x28]
  401680:	mov    rcx,rbx
  401683:	mov    QWORD PTR [rsp+0x28],rax
  401688:	call   0x402c60
  40168d:	mov    rcx,QWORD PTR [rsp+0x20]
  401692:	mov    rbx,rax
  401695:	call   0x401bf0
  40169a:	mov    rcx,QWORD PTR [rsp+0x28]
  40169f:	mov    QWORD PTR [rip+0x636a],rax        # 0x407a10
  4016a6:	call   0x401bf0
  4016ab:	mov    ecx,0x8
  4016b0:	mov    QWORD PTR [rip+0x6361],rax        # 0x407a18
  4016b7:	call   0x402c08
  4016bc:	mov    rax,rbx
  4016bf:	add    rsp,0x30
  4016c3:	pop    rbx
  4016c4:	ret    
  4016c5:	mov    rax,QWORD PTR [rip+0x2c74]        # 0x404340
  4016cc:	mov    rcx,rbx
  4016cf:	call   QWORD PTR [rax]
  4016d1:	add    rsp,0x30
  4016d5:	pop    rbx
  4016d6:	ret    
  4016d7:	nop    WORD PTR [rax+rax*1+0x0]
  4016e0:	sub    rsp,0x28
  4016e4:	call   0x401630
  4016e9:	test   rax,rax
  4016ec:	sete   al
  4016ef:	movzx  eax,al
  4016f2:	neg    eax
  4016f4:	add    rsp,0x28
  4016f8:	ret    
  4016f9:	nop
  4016fa:	nop
  4016fb:	nop
  4016fc:	nop
  4016fd:	nop
  4016fe:	nop
  4016ff:	nop
  401700:	sub    rsp,0x28
  401704:	mov    rax,QWORD PTR [rip+0x1905]        # 0x403010
  40170b:	mov    rax,QWORD PTR [rax]
  40170e:	test   rax,rax
  401711:	je     0x401730
  401713:	call   rax
  401715:	mov    rax,QWORD PTR [rip+0x18f4]        # 0x403010
  40171c:	lea    rdx,[rax+0x8]
  401720:	mov    rax,QWORD PTR [rax+0x8]
  401724:	mov    QWORD PTR [rip+0x18e5],rdx        # 0x403010
  40172b:	test   rax,rax
  40172e:	jne    0x401713
  401730:	add    rsp,0x28
  401734:	ret    
  401735:	nop
  401736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401740:	push   rsi
  401741:	push   rbx
  401742:	sub    rsp,0x28
  401746:	mov    rsi,QWORD PTR [rip+0x2b73]        # 0x4042c0
  40174d:	mov    rax,QWORD PTR [rsi]
  401750:	cmp    eax,0xffffffff
  401753:	mov    ebx,eax
  401755:	je     0x401780
  401757:	test   ebx,ebx
  401759:	je     0x40176a
  40175b:	nop    DWORD PTR [rax+rax*1+0x0]
  401760:	mov    eax,ebx
  401762:	call   QWORD PTR [rsi+rax*8]
  401765:	sub    ebx,0x1
  401768:	jne    0x401760
  40176a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401700
  401771:	add    rsp,0x28
  401775:	pop    rbx
  401776:	pop    rsi
  401777:	jmp    0x4016e0
  40177c:	nop    DWORD PTR [rax+0x0]
  401780:	xor    ebx,ebx
  401782:	jmp    0x401786
  401784:	mov    ebx,eax
  401786:	lea    edx,[rbx+0x1]
  401789:	cmp    QWORD PTR [rsi+rdx*8],0x0
  40178e:	mov    rax,rdx
  401791:	jne    0x401784
  401793:	jmp    0x401757
  401795:	nop
  401796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017a0:	mov    eax,DWORD PTR [rip+0x588a]        # 0x407030
  4017a6:	test   eax,eax
  4017a8:	je     0x4017b0
  4017aa:	repz ret 
  4017ac:	nop    DWORD PTR [rax+0x0]
  4017b0:	mov    DWORD PTR [rip+0x5876],0x1        # 0x407030
  4017ba:	jmp    0x401740
  4017bc:	nop
  4017bd:	nop
  4017be:	nop
  4017bf:	nop
  4017c0:	mov    rax,QWORD PTR [rip+0x6b71]        # 0x408338
  4017c7:	rex.W jmp rax
  4017ca:	nop
  4017cb:	nop
  4017cc:	nop
  4017cd:	nop
  4017ce:	nop
  4017cf:	nop
  4017d0:	xor    eax,eax
  4017d2:	ret    
  4017d3:	nop
  4017d4:	nop
  4017d5:	nop
  4017d6:	nop
  4017d7:	nop
  4017d8:	nop
  4017d9:	nop
  4017da:	nop
  4017db:	nop
  4017dc:	nop
  4017dd:	nop
  4017de:	nop
  4017df:	nop
  4017e0:	push   r12
  4017e2:	push   rbp
  4017e3:	push   rdi
  4017e4:	push   rsi
  4017e5:	push   rbx
  4017e6:	sub    rsp,0x40
  4017ea:	mov    rbx,QWORD PTR [rip+0x187f]        # 0x403070
  4017f1:	movabs rax,0x2b992ddfa232
  4017fb:	mov    QWORD PTR [rsp+0x20],0x0
  401804:	cmp    rbx,rax
  401807:	je     0x401820
  401809:	not    rbx
  40180c:	mov    QWORD PTR [rip+0x186d],rbx        # 0x403080
  401813:	add    rsp,0x40
  401817:	pop    rbx
  401818:	pop    rsi
  401819:	pop    rdi
  40181a:	pop    rbp
  40181b:	pop    r12
  40181d:	ret    
  40181e:	xchg   ax,ax
  401820:	lea    rcx,[rsp+0x20]
  401825:	call   QWORD PTR [rip+0x6a5d]        # 0x408288
  40182b:	mov    r12,QWORD PTR [rsp+0x20]
  401830:	call   QWORD PTR [rip+0x6a32]        # 0x408268
  401836:	mov    ebp,eax
  401838:	call   QWORD PTR [rip+0x6a32]        # 0x408270
  40183e:	mov    edi,eax
  401840:	call   QWORD PTR [rip+0x6a4a]        # 0x408290
  401846:	lea    rcx,[rsp+0x30]
  40184b:	mov    esi,eax
  40184d:	call   QWORD PTR [rip+0x6a55]        # 0x4082a8
  401853:	xor    r12,QWORD PTR [rsp+0x30]
  401858:	mov    edx,edi
  40185a:	movabs rax,0xffffffffffff
  401864:	xor    rbp,r12
  401867:	mov    rdi,rbp
  40186a:	xor    rdi,rdx
  40186d:	mov    edx,esi
  40186f:	xor    rdi,rdx
  401872:	mov    rsi,rdi
  401875:	and    rsi,rax
  401878:	cmp    rsi,rbx
  40187b:	je     0x4018a0
  40187d:	mov    rax,rsi
  401880:	not    rax
  401883:	mov    QWORD PTR [rip+0x17e6],rsi        # 0x403070
  40188a:	mov    QWORD PTR [rip+0x17ef],rax        # 0x403080
  401891:	add    rsp,0x40
  401895:	pop    rbx
  401896:	pop    rsi
  401897:	pop    rdi
  401898:	pop    rbp
  401899:	pop    r12
  40189b:	ret    
  40189c:	nop    DWORD PTR [rax+0x0]
  4018a0:	movabs rax,0xffffd466d2205dcc
  4018aa:	movabs rsi,0x2b992ddfa233
  4018b4:	jmp    0x401883
  4018b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018c0:	push   rbp
  4018c1:	push   rsi
  4018c2:	push   rbx
  4018c3:	mov    rbp,rsp
  4018c6:	sub    rsp,0x70
  4018ca:	mov    rsi,rcx
  4018cd:	lea    rcx,[rip+0x57ac]        # 0x407080
  4018d4:	call   QWORD PTR [rip+0x69de]        # 0x4082b8
  4018da:	mov    rbx,QWORD PTR [rip+0x5897]        # 0x407178
  4018e1:	xor    r8d,r8d
  4018e4:	lea    rdx,[rbp-0x28]
  4018e8:	mov    rcx,rbx
  4018eb:	call   QWORD PTR [rip+0x69cf]        # 0x4082c0
  4018f1:	test   rax,rax
  4018f4:	mov    r9,rax
  4018f7:	je     0x4019a0
  4018fd:	lea    rax,[rbp-0x20]
  401901:	mov    QWORD PTR [rsp+0x38],0x0
  40190a:	mov    r8,rbx
  40190d:	mov    rdx,QWORD PTR [rbp-0x28]
  401911:	xor    ecx,ecx
  401913:	mov    QWORD PTR [rsp+0x30],rax
  401918:	lea    rax,[rbp-0x18]
  40191c:	mov    QWORD PTR [rsp+0x28],rax
  401921:	lea    rax,[rip+0x5758]        # 0x407080
  401928:	mov    QWORD PTR [rsp+0x20],rax
  40192d:	call   QWORD PTR [rip+0x6995]        # 0x4082c8
  401933:	mov    rax,QWORD PTR [rip+0x583e]        # 0x407178
  40193a:	xor    ecx,ecx
  40193c:	mov    QWORD PTR [rip+0x57bd],rsi        # 0x407100
  401943:	mov    DWORD PTR [rip+0x5c33],0xc0000409        # 0x407580
  40194d:	mov    DWORD PTR [rip+0x5c2d],0x1        # 0x407584
  401957:	mov    QWORD PTR [rip+0x5c32],rax        # 0x407590
  40195e:	mov    rax,QWORD PTR [rip+0x170b]        # 0x403070
  401965:	mov    QWORD PTR [rbp-0x10],rax
  401969:	mov    rax,QWORD PTR [rip+0x1710]        # 0x403080
  401970:	mov    QWORD PTR [rbp-0x8],rax
  401974:	call   QWORD PTR [rip+0x6956]        # 0x4082d0
  40197a:	lea    rcx,[rip+0x269f]        # 0x404020
  401981:	call   QWORD PTR [rip+0x6969]        # 0x4082f0
  401987:	call   QWORD PTR [rip+0x68d3]        # 0x408260
  40198d:	mov    edx,0xc0000409
  401992:	mov    rcx,rax
  401995:	call   QWORD PTR [rip+0x6945]        # 0x4082e0
  40199b:	call   0x402c00
  4019a0:	mov    rax,QWORD PTR [rbp+0x18]
  4019a4:	mov    QWORD PTR [rip+0x57cd],rax        # 0x407178
  4019ab:	lea    rax,[rbp+0x8]
  4019af:	mov    QWORD PTR [rip+0x5762],rax        # 0x407118
  4019b6:	jmp    0x401933
  4019bb:	nop
  4019bc:	nop
  4019bd:	nop
  4019be:	nop
  4019bf:	nop
  4019c0:	sub    rsp,0x28
  4019c4:	test   edx,edx
  4019c6:	je     0x4019e0
  4019c8:	cmp    edx,0x3
  4019cb:	je     0x4019e0
  4019cd:	mov    eax,0x1
  4019d2:	add    rsp,0x28
  4019d6:	ret    
  4019d7:	nop    WORD PTR [rax+rax*1+0x0]
  4019e0:	call   0x4026d0
  4019e5:	mov    eax,0x1
  4019ea:	add    rsp,0x28
  4019ee:	ret    
  4019ef:	nop
  4019f0:	push   rsi
  4019f1:	push   rbx
  4019f2:	sub    rsp,0x28
  4019f6:	mov    rax,QWORD PTR [rip+0x28a3]        # 0x4042a0
  4019fd:	cmp    DWORD PTR [rax],0x2
  401a00:	je     0x401a08
  401a02:	mov    DWORD PTR [rax],0x2
  401a08:	cmp    edx,0x2
  401a0b:	je     0x401a20
  401a0d:	cmp    edx,0x1
  401a10:	je     0x401a52
  401a12:	mov    eax,0x1
  401a17:	add    rsp,0x28
  401a1b:	pop    rbx
  401a1c:	pop    rsi
  401a1d:	ret    
  401a1e:	xchg   ax,ax
  401a20:	lea    rbx,[rip+0x7639]        # 0x409060
  401a27:	lea    rsi,[rip+0x7632]        # 0x409060
  401a2e:	cmp    rbx,rsi
  401a31:	je     0x401a12
  401a33:	mov    rax,QWORD PTR [rbx]
  401a36:	test   rax,rax
  401a39:	je     0x401a3d
  401a3b:	call   rax
  401a3d:	add    rbx,0x8
  401a41:	cmp    rbx,rsi
  401a44:	jne    0x401a33
  401a46:	mov    eax,0x1
  401a4b:	add    rsp,0x28
  401a4f:	pop    rbx
  401a50:	pop    rsi
  401a51:	ret    
  401a52:	call   0x4026d0
  401a57:	jmp    0x401a12
  401a59:	nop    DWORD PTR [rax+0x0]
  401a60:	xor    eax,eax
  401a62:	ret    
  401a63:	nop
  401a64:	nop
  401a65:	nop
  401a66:	nop
  401a67:	nop
  401a68:	nop
  401a69:	nop
  401a6a:	nop
  401a6b:	nop
  401a6c:	nop
  401a6d:	nop
  401a6e:	nop
  401a6f:	nop
  401a70:	sub    rsp,0x58
  401a74:	mov    rax,QWORD PTR [rip+0x5be5]        # 0x407660
  401a7b:	test   rax,rax
  401a7e:	je     0x401aac
  401a80:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401a89:	mov    DWORD PTR [rsp+0x20],ecx
  401a8d:	lea    rcx,[rsp+0x20]
  401a92:	mov    QWORD PTR [rsp+0x28],rdx
  401a97:	movsd  QWORD PTR [rsp+0x30],xmm2
  401a9d:	movsd  QWORD PTR [rsp+0x38],xmm3
  401aa3:	movsd  QWORD PTR [rsp+0x40],xmm0
  401aa9:	call   rax
  401aab:	nop
  401aac:	add    rsp,0x58
  401ab0:	ret    
  401ab1:	nop    DWORD PTR [rax+rax*1+0x0]
  401ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ac0:	mov    QWORD PTR [rip+0x5b99],rcx        # 0x407660
  401ac7:	jmp    0x402c38
  401acc:	nop    DWORD PTR [rax+0x0]
  401ad0:	push   rsi
  401ad1:	push   rbx
  401ad2:	sub    rsp,0x78
  401ad6:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401adb:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401ae0:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401ae6:	cmp    DWORD PTR [rcx],0x6
  401ae9:	ja     0x401bc0
  401aef:	mov    edx,DWORD PTR [rcx]
  401af1:	lea    rax,[rip+0x266c]        # 0x404164
  401af8:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401afc:	add    rax,rdx
  401aff:	jmp    rax
  401b01:	lea    rbx,[rip+0x2538]        # 0x404040
  401b08:	nop    DWORD PTR [rax+rax*1+0x0]
  401b10:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401b16:	mov    rsi,QWORD PTR [rcx+0x8]
  401b1a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401b1f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401b24:	call   0x402c50
  401b29:	movsd  QWORD PTR [rsp+0x30],xmm8
  401b30:	lea    rcx,[rax+0x60]
  401b34:	lea    rdx,[rip+0x25fd]        # 0x404138
  401b3b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401b41:	mov    r9,rsi
  401b44:	mov    r8,rbx
  401b47:	movsd  QWORD PTR [rsp+0x20],xmm6
  401b4d:	call   0x402be8
  401b52:	nop
  401b53:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401b58:	xor    eax,eax
  401b5a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401b5f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401b65:	add    rsp,0x78
  401b69:	pop    rbx
  401b6a:	pop    rsi
  401b6b:	ret    
  401b6c:	nop    DWORD PTR [rax+0x0]
  401b70:	lea    rbx,[rip+0x24e8]        # 0x40405f
  401b77:	jmp    0x401b10
  401b79:	nop    DWORD PTR [rax+0x0]
  401b80:	lea    rbx,[rip+0x24f9]        # 0x404080
  401b87:	jmp    0x401b10
  401b89:	nop    DWORD PTR [rax+0x0]
  401b90:	lea    rbx,[rip+0x2559]        # 0x4040f0
  401b97:	jmp    0x401b10
  401b9c:	nop    DWORD PTR [rax+0x0]
  401ba0:	lea    rbx,[rip+0x2521]        # 0x4040c8
  401ba7:	jmp    0x401b10
  401bac:	nop    DWORD PTR [rax+0x0]
  401bb0:	lea    rbx,[rip+0x24e9]        # 0x4040a0
  401bb7:	jmp    0x401b10
  401bbc:	nop    DWORD PTR [rax+0x0]
  401bc0:	lea    rbx,[rip+0x255f]        # 0x404126
  401bc7:	jmp    0x401b10
  401bcc:	nop
  401bcd:	nop
  401bce:	nop
  401bcf:	nop
  401bd0:	fninit 
  401bd2:	ret    
  401bd3:	nop
  401bd4:	nop
  401bd5:	nop
  401bd6:	nop
  401bd7:	nop
  401bd8:	nop
  401bd9:	nop
  401bda:	nop
  401bdb:	nop
  401bdc:	nop
  401bdd:	nop
  401bde:	nop
  401bdf:	nop
  401be0:	mov    rax,rcx
  401be3:	ret    
  401be4:	xchg   ax,ax
  401be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bf0:	mov    rax,rcx
  401bf3:	ret    
  401bf4:	nop
  401bf5:	nop
  401bf6:	nop
  401bf7:	nop
  401bf8:	nop
  401bf9:	nop
  401bfa:	nop
  401bfb:	nop
  401bfc:	nop
  401bfd:	nop
  401bfe:	nop
  401bff:	nop
  401c00:	push   rsi
  401c01:	push   rbx
  401c02:	sub    rsp,0x38
  401c06:	lea    rax,[rsp+0x58]
  401c0b:	mov    rbx,rcx
  401c0e:	mov    QWORD PTR [rsp+0x58],rdx
  401c13:	mov    QWORD PTR [rsp+0x60],r8
  401c18:	mov    QWORD PTR [rsp+0x68],r9
  401c1d:	mov    QWORD PTR [rsp+0x28],rax
  401c22:	call   0x402c50
  401c27:	lea    rcx,[rip+0x2552]        # 0x404180
  401c2e:	lea    r9,[rax+0x60]
  401c32:	mov    r8d,0x1b
  401c38:	mov    edx,0x1
  401c3d:	call   0x402bd8
  401c42:	mov    rsi,QWORD PTR [rsp+0x28]
  401c47:	call   0x402c50
  401c4c:	lea    rcx,[rax+0x60]
  401c50:	mov    rdx,rbx
  401c53:	mov    r8,rsi
  401c56:	call   0x402b98
  401c5b:	call   0x402c00
  401c60:	nop
  401c61:	nop    DWORD PTR [rax+rax*1+0x0]
  401c66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c70:	push   r13
  401c72:	push   r12
  401c74:	push   rbp
  401c75:	push   rdi
  401c76:	push   rsi
  401c77:	push   rbx
  401c78:	sub    rsp,0x58
  401c7c:	movsxd rbp,DWORD PTR [rip+0x5a01]        # 0x407684
  401c83:	mov    rbx,rcx
  401c86:	mov    rsi,rdx
  401c89:	mov    rdi,r8
  401c8c:	test   ebp,ebp
  401c8e:	jle    0x401d8a
  401c94:	mov    rax,QWORD PTR [rip+0x59ed]        # 0x407688
  401c9b:	xor    r9d,r9d
  401c9e:	add    rax,0x8
  401ca2:	mov    r10,QWORD PTR [rax]
  401ca5:	cmp    rbx,r10
  401ca8:	jb     0x401cbe
  401caa:	mov    rdx,QWORD PTR [rax+0x8]
  401cae:	mov    r11d,DWORD PTR [rdx+0x8]
  401cb2:	add    r10,r11
  401cb5:	cmp    rbx,r10
  401cb8:	jb     0x401d70
  401cbe:	add    r9d,0x1
  401cc2:	add    rax,0x18
  401cc6:	cmp    r9d,ebp
  401cc9:	jne    0x401ca2
  401ccb:	mov    rcx,rbx
  401cce:	call   0x4028e0
  401cd3:	test   rax,rax
  401cd6:	mov    r12,rax
  401cd9:	je     0x401dc2
  401cdf:	lea    rbp,[rbp+rbp*2+0x0]
  401ce4:	shl    rbp,0x3
  401ce8:	mov    r13,rbp
  401ceb:	add    r13,QWORD PTR [rip+0x5996]        # 0x407688
  401cf2:	mov    QWORD PTR [r13+0x10],rax
  401cf6:	mov    DWORD PTR [r13+0x0],0x0
  401cfe:	call   0x402a00
  401d03:	mov    edx,DWORD PTR [r12+0xc]
  401d08:	mov    r8d,0x30
  401d0e:	add    rax,rdx
  401d11:	lea    rdx,[rsp+0x20]
  401d16:	mov    QWORD PTR [r13+0x8],rax
  401d1a:	mov    rax,QWORD PTR [rip+0x5967]        # 0x407688
  401d21:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401d26:	call   QWORD PTR [rip+0x65d4]        # 0x408300
  401d2c:	test   rax,rax
  401d2f:	je     0x401da5
  401d31:	mov    eax,DWORD PTR [rsp+0x44]
  401d35:	lea    edx,[rax-0x4]
  401d38:	and    edx,0xfffffffb
  401d3b:	je     0x401d69
  401d3d:	sub    eax,0x40
  401d40:	and    eax,0xffffffbf
  401d43:	je     0x401d69
  401d45:	mov    r9,rbp
  401d48:	add    r9,QWORD PTR [rip+0x5939]        # 0x407688
  401d4f:	mov    r8d,0x40
  401d55:	mov    rdx,QWORD PTR [rsp+0x38]
  401d5a:	mov    rcx,QWORD PTR [rsp+0x20]
  401d5f:	call   QWORD PTR [rip+0x6593]        # 0x4082f8
  401d65:	test   eax,eax
  401d67:	je     0x401d91
  401d69:	add    DWORD PTR [rip+0x5914],0x1        # 0x407684
  401d70:	mov    r8,rdi
  401d73:	mov    rdx,rsi
  401d76:	mov    rcx,rbx
  401d79:	add    rsp,0x58
  401d7d:	pop    rbx
  401d7e:	pop    rsi
  401d7f:	pop    rdi
  401d80:	pop    rbp
  401d81:	pop    r12
  401d83:	pop    r13
  401d85:	jmp    0x402bc8
  401d8a:	xor    ebp,ebp
  401d8c:	jmp    0x401ccb
  401d91:	call   QWORD PTR [rip+0x64e1]        # 0x408278
  401d97:	lea    rcx,[rip+0x245a]        # 0x4041f8
  401d9e:	mov    edx,eax
  401da0:	call   0x401c00
  401da5:	mov    rax,QWORD PTR [rip+0x58dc]        # 0x407688
  401dac:	mov    edx,DWORD PTR [r12+0x8]
  401db1:	lea    rcx,[rip+0x2408]        # 0x4041c0
  401db8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401dbd:	call   0x401c00
  401dc2:	lea    rcx,[rip+0x23d7]        # 0x4041a0
  401dc9:	mov    rdx,rbx
  401dcc:	call   0x401c00
  401dd1:	nop
  401dd2:	nop    DWORD PTR [rax+0x0]
  401dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401de0:	push   rbp
  401de1:	push   r14
  401de3:	push   r13
  401de5:	push   r12
  401de7:	push   rdi
  401de8:	push   rsi
  401de9:	push   rbx
  401dea:	mov    rbp,rsp
  401ded:	sub    rsp,0x60
  401df1:	mov    ebx,DWORD PTR [rip+0x5889]        # 0x407680
  401df7:	test   ebx,ebx
  401df9:	je     0x401e10
  401dfb:	mov    rsp,rbp
  401dfe:	pop    rbx
  401dff:	pop    rsi
  401e00:	pop    rdi
  401e01:	pop    r12
  401e03:	pop    r13
  401e05:	pop    r14
  401e07:	pop    rbp
  401e08:	ret    
  401e09:	nop    DWORD PTR [rax+0x0]
  401e10:	mov    DWORD PTR [rip+0x5866],0x1        # 0x407680
  401e1a:	call   0x402930
  401e1f:	cdqe   
  401e21:	lea    rax,[rax+rax*2]
  401e25:	lea    rax,[rax*8+0x1e]
  401e2d:	and    rax,0xfffffffffffffff0
  401e31:	call   0x402b50
  401e36:	mov    rsi,QWORD PTR [rip+0x2493]        # 0x4042d0
  401e3d:	mov    rbx,QWORD PTR [rip+0x249c]        # 0x4042e0
  401e44:	sub    rsp,rax
  401e47:	mov    DWORD PTR [rip+0x5833],0x0        # 0x407684
  401e51:	lea    rax,[rsp+0x20]
  401e56:	mov    QWORD PTR [rip+0x582b],rax        # 0x407688
  401e5d:	mov    rax,rsi
  401e60:	sub    rax,rbx
  401e63:	cmp    rax,0x7
  401e67:	jle    0x401dfb
  401e69:	cmp    rax,0xb
  401e6d:	jle    0x401e95
  401e6f:	mov    r11d,DWORD PTR [rbx]
  401e72:	test   r11d,r11d
  401e75:	jne    0x401fc0
  401e7b:	mov    r10d,DWORD PTR [rbx+0x4]
  401e7f:	test   r10d,r10d
  401e82:	jne    0x401fc0
  401e88:	mov    r9d,DWORD PTR [rbx+0x8]
  401e8c:	test   r9d,r9d
  401e8f:	jne    0x401eac
  401e91:	add    rbx,0xc
  401e95:	mov    r8d,DWORD PTR [rbx]
  401e98:	test   r8d,r8d
  401e9b:	jne    0x401fc0
  401ea1:	mov    ecx,DWORD PTR [rbx+0x4]
  401ea4:	test   ecx,ecx
  401ea6:	jne    0x401fc0
  401eac:	mov    edx,DWORD PTR [rbx+0x8]
  401eaf:	cmp    edx,0x1
  401eb2:	jne    0x4020cc
  401eb8:	add    rbx,0xc
  401ebc:	cmp    rbx,rsi
  401ebf:	jae    0x401dfb
  401ec5:	mov    r12,QWORD PTR [rip+0x2434]        # 0x404300
  401ecc:	lea    r13,[rbp-0x30]
  401ed0:	movabs r14,0xffffffff00000000
  401eda:	mov    ecx,DWORD PTR [rbx+0x4]
  401edd:	mov    eax,DWORD PTR [rbx]
  401edf:	movzx  edx,BYTE PTR [rbx+0x8]
  401ee3:	add    rax,r12
  401ee6:	add    rcx,r12
  401ee9:	cmp    edx,0x10
  401eec:	mov    r8,QWORD PTR [rax]
  401eef:	je     0x402036
  401ef5:	jbe    0x401ffd
  401efb:	cmp    edx,0x20
  401efe:	je     0x40207f
  401f04:	cmp    edx,0x40
  401f07:	jne    0x40206b
  401f0d:	sub    r8,rax
  401f10:	mov    rdx,r13
  401f13:	mov    rdi,r13
  401f16:	mov    rax,r8
  401f19:	add    rax,QWORD PTR [rcx]
  401f1c:	mov    r8d,0x8
  401f22:	mov    QWORD PTR [rbp-0x30],rax
  401f26:	call   0x401c70
  401f2b:	add    rbx,0xc
  401f2f:	cmp    rbx,rsi
  401f32:	jb     0x401eda
  401f34:	mov    eax,DWORD PTR [rip+0x574a]        # 0x407684
  401f3a:	xor    ebx,ebx
  401f3c:	xor    esi,esi
  401f3e:	test   eax,eax
  401f40:	jle    0x401dfb
  401f46:	mov    r14,QWORD PTR [rip+0x63b3]        # 0x408300
  401f4d:	lea    r13,[rbp-0x34]
  401f51:	mov    r12,QWORD PTR [rip+0x63a0]        # 0x4082f8
  401f58:	jmp    0x401f73
  401f5a:	nop    WORD PTR [rax+rax*1+0x0]
  401f60:	add    esi,0x1
  401f63:	add    rbx,0x18
  401f67:	cmp    esi,DWORD PTR [rip+0x5717]        # 0x407684
  401f6d:	jge    0x401dfb
  401f73:	mov    rax,rbx
  401f76:	add    rax,QWORD PTR [rip+0x570b]        # 0x407688
  401f7d:	mov    edx,DWORD PTR [rax]
  401f7f:	test   edx,edx
  401f81:	je     0x401f60
  401f83:	mov    rcx,QWORD PTR [rax+0x8]
  401f87:	mov    r8d,0x30
  401f8d:	mov    rdx,rdi
  401f90:	call   r14
  401f93:	test   rax,rax
  401f96:	je     0x4020ae
  401f9c:	mov    rax,QWORD PTR [rip+0x56e5]        # 0x407688
  401fa3:	mov    r9,r13
  401fa6:	mov    rdx,QWORD PTR [rbp-0x18]
  401faa:	mov    rcx,QWORD PTR [rbp-0x30]
  401fae:	mov    r8d,DWORD PTR [rax+rbx*1]
  401fb2:	call   r12
  401fb5:	jmp    0x401f60
  401fb7:	nop    WORD PTR [rax+rax*1+0x0]
  401fc0:	cmp    rbx,rsi
  401fc3:	jae    0x401dfb
  401fc9:	mov    r12,QWORD PTR [rip+0x2330]        # 0x404300
  401fd0:	lea    rdi,[rbp-0x30]
  401fd4:	mov    ecx,DWORD PTR [rbx+0x4]
  401fd7:	mov    eax,DWORD PTR [rbx]
  401fd9:	mov    r8d,0x4
  401fdf:	mov    rdx,rdi
  401fe2:	add    rbx,0x8
  401fe6:	add    rcx,r12
  401fe9:	add    eax,DWORD PTR [rcx]
  401feb:	mov    DWORD PTR [rbp-0x30],eax
  401fee:	call   0x401c70
  401ff3:	cmp    rbx,rsi
  401ff6:	jb     0x401fd4
  401ff8:	jmp    0x401f34
  401ffd:	cmp    edx,0x8
  402000:	jne    0x40206b
  402002:	movzx  edx,BYTE PTR [rcx]
  402005:	mov    rdi,r13
  402008:	mov    r10,rdx
  40200b:	or     r10,0xffffffffffffff00
  402012:	test   dl,dl
  402014:	cmovs  rdx,r10
  402018:	sub    rdx,rax
  40201b:	lea    rax,[r8+rdx*1]
  40201f:	mov    r8d,0x1
  402025:	mov    rdx,r13
  402028:	mov    QWORD PTR [rbp-0x30],rax
  40202c:	call   0x401c70
  402031:	jmp    0x401f2b
  402036:	movzx  edx,WORD PTR [rcx]
  402039:	mov    rdi,r13
  40203c:	mov    r10,rdx
  40203f:	or     r10,0xffffffffffff0000
  402046:	test   dx,dx
  402049:	cmovs  rdx,r10
  40204d:	sub    rdx,rax
  402050:	lea    rax,[r8+rdx*1]
  402054:	mov    r8d,0x2
  40205a:	mov    rdx,r13
  40205d:	mov    QWORD PTR [rbp-0x30],rax
  402061:	call   0x401c70
  402066:	jmp    0x401f2b
  40206b:	lea    rcx,[rip+0x21e6]        # 0x404258
  402072:	mov    QWORD PTR [rbp-0x30],0x0
  40207a:	call   0x401c00
  40207f:	mov    edx,DWORD PTR [rcx]
  402081:	mov    rdi,r13
  402084:	mov    r10,rdx
  402087:	or     r10,r14
  40208a:	test   edx,edx
  40208c:	cmovs  rdx,r10
  402090:	sub    rdx,rax
  402093:	lea    rax,[r8+rdx*1]
  402097:	mov    r8d,0x4
  40209d:	mov    rdx,r13
  4020a0:	mov    QWORD PTR [rbp-0x30],rax
  4020a4:	call   0x401c70
  4020a9:	jmp    0x401f2b
  4020ae:	add    rbx,QWORD PTR [rip+0x55d3]        # 0x407688
  4020b5:	lea    rcx,[rip+0x2104]        # 0x4041c0
  4020bc:	mov    rax,QWORD PTR [rbx+0x10]
  4020c0:	mov    r8,QWORD PTR [rbx+0x8]
  4020c4:	mov    edx,DWORD PTR [rax+0x8]
  4020c7:	call   0x401c00
  4020cc:	lea    rcx,[rip+0x214d]        # 0x404220
  4020d3:	call   0x401c00
  4020d8:	nop
  4020d9:	nop
  4020da:	nop
  4020db:	nop
  4020dc:	nop
  4020dd:	nop
  4020de:	nop
  4020df:	nop
  4020e0:	sub    rsp,0x28
  4020e4:	mov    eax,DWORD PTR [rcx]
  4020e6:	cmp    eax,0xc0000091
  4020eb:	ja     0x402150
  4020ed:	cmp    eax,0xc000008d
  4020f2:	jae    0x40216f
  4020f4:	cmp    eax,0xc0000008
  4020f9:	je     0x402210
  4020ff:	ja     0x4021e0
  402105:	cmp    eax,0x80000002
  40210a:	je     0x402210
  402110:	cmp    eax,0xc0000005
  402115:	jne    0x4021ee
  40211b:	xor    edx,edx
  40211d:	mov    ecx,0xb
  402122:	call   0x402bb0
  402127:	cmp    rax,0x1
  40212b:	je     0x402270
  402131:	test   rax,rax
  402134:	je     0x402250
  40213a:	mov    ecx,0xb
  40213f:	call   rax
  402141:	xor    eax,eax
  402143:	add    rsp,0x28
  402147:	ret    
  402148:	nop    DWORD PTR [rax+rax*1+0x0]
  402150:	cmp    eax,0xc0000094
  402155:	je     0x402220
  40215b:	ja     0x4021a0
  40215d:	cmp    eax,0xc0000092
  402162:	je     0x402210
  402168:	cmp    eax,0xc0000093
  40216d:	jne    0x4021ee
  40216f:	xor    edx,edx
  402171:	mov    ecx,0x8
  402176:	call   0x402bb0
  40217b:	cmp    rax,0x1
  40217f:	mov    rdx,rax
  402182:	je     0x4021f8
  402184:	test   rdx,rdx
  402187:	mov    eax,0x1
  40218c:	je     0x402143
  40218e:	mov    ecx,0x8
  402193:	call   rdx
  402195:	xor    eax,eax
  402197:	add    rsp,0x28
  40219b:	ret    
  40219c:	nop    DWORD PTR [rax+0x0]
  4021a0:	cmp    eax,0xc0000095
  4021a5:	je     0x402210
  4021a7:	cmp    eax,0xc0000096
  4021ac:	jne    0x4021ee
  4021ae:	xor    edx,edx
  4021b0:	mov    ecx,0x4
  4021b5:	call   0x402bb0
  4021ba:	cmp    rax,0x1
  4021be:	je     0x40225a
  4021c4:	test   rax,rax
  4021c7:	je     0x402250
  4021cd:	mov    ecx,0x4
  4021d2:	call   rax
  4021d4:	xor    eax,eax
  4021d6:	jmp    0x402143
  4021db:	nop    DWORD PTR [rax+rax*1+0x0]
  4021e0:	cmp    eax,0xc000001d
  4021e5:	je     0x4021ae
  4021e7:	cmp    eax,0xc000008c
  4021ec:	je     0x402210
  4021ee:	mov    eax,0x1
  4021f3:	add    rsp,0x28
  4021f7:	ret    
  4021f8:	mov    edx,0x1
  4021fd:	mov    ecx,0x8
  402202:	call   0x402bb0
  402207:	call   0x401bd0
  40220c:	nop    DWORD PTR [rax+0x0]
  402210:	xor    eax,eax
  402212:	add    rsp,0x28
  402216:	ret    
  402217:	nop    WORD PTR [rax+rax*1+0x0]
  402220:	xor    edx,edx
  402222:	mov    ecx,0x8
  402227:	call   0x402bb0
  40222c:	cmp    rax,0x1
  402230:	mov    rdx,rax
  402233:	jne    0x402184
  402239:	mov    edx,0x1
  40223e:	mov    ecx,0x8
  402243:	call   0x402bb0
  402248:	xor    eax,eax
  40224a:	jmp    0x402143
  40224f:	nop
  402250:	mov    eax,0x4
  402255:	add    rsp,0x28
  402259:	ret    
  40225a:	mov    edx,0x1
  40225f:	mov    ecx,0x4
  402264:	call   0x402bb0
  402269:	xor    eax,eax
  40226b:	jmp    0x402143
  402270:	mov    edx,0x1
  402275:	mov    ecx,0xb
  40227a:	call   0x402bb0
  40227f:	xor    eax,eax
  402281:	jmp    0x402143
  402286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402290:	push   r12
  402292:	push   rbp
  402293:	push   rdi
  402294:	push   rsi
  402295:	push   rbx
  402296:	sub    rsp,0x20
  40229a:	call   0x402a00
  40229f:	mov    rbp,rax
  4022a2:	mov    eax,DWORD PTR [rip+0x5420]        # 0x4076c8
  4022a8:	test   eax,eax
  4022aa:	jne    0x4022d1
  4022ac:	test   rbp,rbp
  4022af:	je     0x4022d1
  4022b1:	lea    rcx,[rip+0x1fd8]        # 0x404290
  4022b8:	mov    DWORD PTR [rip+0x5406],0x1        # 0x4076c8
  4022c2:	call   0x402840
  4022c7:	test   rax,rax
  4022ca:	je     0x4022e0
  4022cc:	mov    eax,0x1
  4022d1:	add    rsp,0x20
  4022d5:	pop    rbx
  4022d6:	pop    rsi
  4022d7:	pop    rdi
  4022d8:	pop    rbp
  4022d9:	pop    r12
  4022db:	ret    
  4022dc:	nop    DWORD PTR [rax+0x0]
  4022e0:	lea    rbx,[rip+0x5519]        # 0x407800
  4022e7:	mov    ecx,0x30
  4022ec:	lea    rdx,[rip+0x540d]        # 0x407700
  4022f3:	lea    r12,[rip+0xfffffffffffffde6]        # 0x4020e0
  4022fa:	xor    esi,esi
  4022fc:	mov    rdi,rbx
  4022ff:	rep stos QWORD PTR es:[rdi],rax
  402302:	mov    rdi,rdx
  402305:	sub    r12,rbp
  402308:	mov    cl,0x20
  40230a:	rep stos QWORD PTR es:[rdi],rax
  40230d:	mov    rdi,rdx
  402310:	jmp    0x402340
  402312:	mov    BYTE PTR [rdi],0x9
  402315:	mov    DWORD PTR [rdi+0x4],r12d
  402319:	add    rsi,0x1
  40231d:	mov    edx,DWORD PTR [rax+0xc]
  402320:	add    rbx,0xc
  402324:	mov    DWORD PTR [rbx-0xc],edx
  402327:	add    edx,DWORD PTR [rax+0x8]
  40232a:	mov    rax,rdi
  40232d:	sub    rax,rbp
  402330:	add    rdi,0x8
  402334:	mov    DWORD PTR [rbx-0x4],eax
  402337:	mov    DWORD PTR [rbx-0x8],edx
  40233a:	cmp    rsi,0x20
  40233e:	je     0x402375
  402340:	mov    rcx,rsi
  402343:	call   0x402970
  402348:	test   rax,rax
  40234b:	jne    0x402312
  40234d:	test   rsi,rsi
  402350:	je     0x4022cc
  402356:	mov    edx,esi
  402358:	nop    DWORD PTR [rax+rax*1+0x0]
  402360:	mov    r8,rbp
  402363:	lea    rcx,[rip+0x5496]        # 0x407800
  40236a:	call   QWORD PTR [rip+0x5f40]        # 0x4082b0
  402370:	jmp    0x4022cc
  402375:	mov    edx,0x20
  40237a:	jmp    0x402360
  40237c:	nop    DWORD PTR [rax+0x0]
  402380:	push   rbx
  402381:	sub    rsp,0x20
  402385:	mov    rdx,QWORD PTR [rcx]
  402388:	mov    eax,DWORD PTR [rdx]
  40238a:	mov    r8d,eax
  40238d:	and    r8d,0x20ffffff
  402394:	cmp    r8d,0x20474343
  40239b:	je     0x4024a0
  4023a1:	cmp    eax,0xc0000091
  4023a6:	mov    rbx,rcx
  4023a9:	ja     0x402430
  4023af:	cmp    eax,0xc000008d
  4023b4:	jae    0x402447
  4023ba:	cmp    eax,0xc0000008
  4023bf:	je     0x4023f3
  4023c1:	ja     0x402400
  4023c3:	cmp    eax,0x80000002
  4023c8:	je     0x4023f3
  4023ca:	cmp    eax,0xc0000005
  4023cf:	jne    0x402412
  4023d1:	xor    edx,edx
  4023d3:	mov    ecx,0xb
  4023d8:	call   0x402bb0
  4023dd:	cmp    rax,0x1
  4023e1:	je     0x402510
  4023e7:	test   rax,rax
  4023ea:	je     0x402412
  4023ec:	mov    ecx,0xb
  4023f1:	call   rax
  4023f3:	mov    eax,0xffffffff
  4023f8:	add    rsp,0x20
  4023fc:	pop    rbx
  4023fd:	ret    
  4023fe:	xchg   ax,ax
  402400:	cmp    eax,0xc000001d
  402405:	je     0x4024c6
  40240b:	cmp    eax,0xc000008c
  402410:	je     0x4023f3
  402412:	mov    rax,QWORD PTR [rip+0x52a7]        # 0x4076c0
  402419:	test   rax,rax
  40241c:	je     0x4023f8
  40241e:	mov    rcx,rbx
  402421:	add    rsp,0x20
  402425:	pop    rbx
  402426:	rex.W jmp rax
  402429:	nop    DWORD PTR [rax+0x0]
  402430:	cmp    eax,0xc0000094
  402435:	je     0x402472
  402437:	ja     0x4024b0
  402439:	cmp    eax,0xc0000092
  40243e:	je     0x4023f3
  402440:	cmp    eax,0xc0000093
  402445:	jne    0x402412
  402447:	xor    edx,edx
  402449:	mov    ecx,0x8
  40244e:	call   0x402bb0
  402453:	cmp    rax,0x1
  402457:	jne    0x402484
  402459:	mov    edx,0x1
  40245e:	mov    ecx,0x8
  402463:	call   0x402bb0
  402468:	call   0x401bd0
  40246d:	jmp    0x4023f3
  402472:	xor    edx,edx
  402474:	mov    ecx,0x8
  402479:	call   0x402bb0
  40247e:	cmp    rax,0x1
  402482:	je     0x4024f2
  402484:	test   rax,rax
  402487:	je     0x402412
  402489:	mov    ecx,0x8
  40248e:	call   rax
  402490:	mov    eax,0xffffffff
  402495:	jmp    0x4023f8
  40249a:	nop    WORD PTR [rax+rax*1+0x0]
  4024a0:	test   BYTE PTR [rdx+0x4],0x1
  4024a4:	jne    0x4023a1
  4024aa:	jmp    0x4023f3
  4024af:	nop
  4024b0:	cmp    eax,0xc0000095
  4024b5:	je     0x4023f3
  4024bb:	cmp    eax,0xc0000096
  4024c0:	jne    0x402412
  4024c6:	xor    edx,edx
  4024c8:	mov    ecx,0x4
  4024cd:	call   0x402bb0
  4024d2:	cmp    rax,0x1
  4024d6:	je     0x402524
  4024d8:	test   rax,rax
  4024db:	je     0x402412
  4024e1:	mov    ecx,0x4
  4024e6:	call   rax
  4024e8:	mov    eax,0xffffffff
  4024ed:	jmp    0x4023f8
  4024f2:	mov    edx,0x1
  4024f7:	mov    ecx,0x8
  4024fc:	call   0x402bb0
  402501:	jmp    0x4023f3
  402506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402510:	mov    edx,0x1
  402515:	mov    ecx,0xb
  40251a:	call   0x402bb0
  40251f:	jmp    0x4023f3
  402524:	mov    edx,0x1
  402529:	mov    ecx,0x4
  40252e:	call   0x402bb0
  402533:	jmp    0x4023f3
  402538:	nop
  402539:	nop
  40253a:	nop
  40253b:	nop
  40253c:	nop
  40253d:	nop
  40253e:	nop
  40253f:	nop
  402540:	push   rbp
  402541:	push   rdi
  402542:	push   rsi
  402543:	push   rbx
  402544:	sub    rsp,0x28
  402548:	lea    rcx,[rip+0x5451]        # 0x4079a0
  40254f:	call   QWORD PTR [rip+0x5d03]        # 0x408258
  402555:	mov    rbx,QWORD PTR [rip+0x5424]        # 0x407980
  40255c:	test   rbx,rbx
  40255f:	je     0x402594
  402561:	mov    rbp,QWORD PTR [rip+0x5d80]        # 0x4082e8
  402568:	mov    rdi,QWORD PTR [rip+0x5d09]        # 0x408278
  40256f:	nop
  402570:	mov    ecx,DWORD PTR [rbx]
  402572:	call   rbp
  402574:	mov    rsi,rax
  402577:	call   rdi
  402579:	test   eax,eax
  40257b:	jne    0x40258b
  40257d:	test   rsi,rsi
  402580:	je     0x40258b
  402582:	mov    rax,QWORD PTR [rbx+0x8]
  402586:	mov    rcx,rsi
  402589:	call   rax
  40258b:	mov    rbx,QWORD PTR [rbx+0x10]
  40258f:	test   rbx,rbx
  402592:	jne    0x402570
  402594:	mov    rax,QWORD PTR [rip+0x5d05]        # 0x4082a0
  40259b:	lea    rcx,[rip+0x53fe]        # 0x4079a0
  4025a2:	add    rsp,0x28
  4025a6:	pop    rbx
  4025a7:	pop    rsi
  4025a8:	pop    rdi
  4025a9:	pop    rbp
  4025aa:	rex.W jmp rax
  4025ad:	nop    DWORD PTR [rax]
  4025b0:	push   rdi
  4025b1:	push   rsi
  4025b2:	push   rbx
  4025b3:	sub    rsp,0x20
  4025b7:	mov    eax,DWORD PTR [rip+0x53cb]        # 0x407988
  4025bd:	test   eax,eax
  4025bf:	jne    0x4025d0
  4025c1:	add    rsp,0x20
  4025c5:	pop    rbx
  4025c6:	pop    rsi
  4025c7:	pop    rdi
  4025c8:	ret    
  4025c9:	nop    DWORD PTR [rax+0x0]
  4025d0:	mov    rsi,rdx
  4025d3:	mov    edi,ecx
  4025d5:	mov    edx,0x18
  4025da:	mov    ecx,0x1
  4025df:	call   0x402bf8
  4025e4:	test   rax,rax
  4025e7:	mov    rbx,rax
  4025ea:	je     0x402628
  4025ec:	mov    DWORD PTR [rax],edi
  4025ee:	mov    QWORD PTR [rax+0x8],rsi
  4025f2:	lea    rcx,[rip+0x53a7]        # 0x4079a0
  4025f9:	call   QWORD PTR [rip+0x5c59]        # 0x408258
  4025ff:	mov    rax,QWORD PTR [rip+0x537a]        # 0x407980
  402606:	lea    rcx,[rip+0x5393]        # 0x4079a0
  40260d:	mov    QWORD PTR [rip+0x536c],rbx        # 0x407980
  402614:	mov    QWORD PTR [rbx+0x10],rax
  402618:	call   QWORD PTR [rip+0x5c82]        # 0x4082a0
  40261e:	xor    eax,eax
  402620:	add    rsp,0x20
  402624:	pop    rbx
  402625:	pop    rsi
  402626:	pop    rdi
  402627:	ret    
  402628:	mov    eax,0xffffffff
  40262d:	jmp    0x4025c1
  40262f:	nop
  402630:	push   rbx
  402631:	sub    rsp,0x20
  402635:	mov    eax,DWORD PTR [rip+0x534d]        # 0x407988
  40263b:	test   eax,eax
  40263d:	jne    0x402650
  40263f:	xor    eax,eax
  402641:	add    rsp,0x20
  402645:	pop    rbx
  402646:	ret    
  402647:	nop    WORD PTR [rax+rax*1+0x0]
  402650:	mov    ebx,ecx
  402652:	lea    rcx,[rip+0x5347]        # 0x4079a0
  402659:	call   QWORD PTR [rip+0x5bf9]        # 0x408258
  40265f:	mov    rdx,QWORD PTR [rip+0x531a]        # 0x407980
  402666:	test   rdx,rdx
  402669:	je     0x402687
  40266b:	mov    eax,DWORD PTR [rdx]
  40266d:	cmp    eax,ebx
  40266f:	jne    0x40267e
  402671:	jmp    0x4026bf
  402673:	mov    r8d,DWORD PTR [rax]
  402676:	cmp    r8d,ebx
  402679:	je     0x4026a0
  40267b:	mov    rdx,rax
  40267e:	mov    rax,QWORD PTR [rdx+0x10]
  402682:	test   rax,rax
  402685:	jne    0x402673
  402687:	lea    rcx,[rip+0x5312]        # 0x4079a0
  40268e:	call   QWORD PTR [rip+0x5c0c]        # 0x4082a0
  402694:	xor    eax,eax
  402696:	add    rsp,0x20
  40269a:	pop    rbx
  40269b:	ret    
  40269c:	nop    DWORD PTR [rax+0x0]
  4026a0:	mov    rcx,rax
  4026a3:	mov    rax,QWORD PTR [rax+0x10]
  4026a7:	mov    QWORD PTR [rdx+0x10],rax
  4026ab:	call   0x402be0
  4026b0:	lea    rcx,[rip+0x52e9]        # 0x4079a0
  4026b7:	call   QWORD PTR [rip+0x5be3]        # 0x4082a0
  4026bd:	jmp    0x402694
  4026bf:	mov    rax,QWORD PTR [rdx+0x10]
  4026c3:	mov    rcx,rdx
  4026c6:	mov    QWORD PTR [rip+0x52b3],rax        # 0x407980
  4026cd:	jmp    0x4026ab
  4026cf:	nop
  4026d0:	push   rbx
  4026d1:	sub    rsp,0x20
  4026d5:	cmp    edx,0x1
  4026d8:	je     0x402770
  4026de:	jb     0x402710
  4026e0:	cmp    edx,0x2
  4026e3:	je     0x402700
  4026e5:	cmp    edx,0x3
  4026e8:	jne    0x402705
  4026ea:	mov    eax,DWORD PTR [rip+0x5298]        # 0x407988
  4026f0:	test   eax,eax
  4026f2:	je     0x402705
  4026f4:	call   0x402540
  4026f9:	jmp    0x402705
  4026fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402700:	call   0x401bd0
  402705:	mov    eax,0x1
  40270a:	add    rsp,0x20
  40270e:	pop    rbx
  40270f:	ret    
  402710:	mov    eax,DWORD PTR [rip+0x5272]        # 0x407988
  402716:	test   eax,eax
  402718:	jne    0x4027a0
  40271e:	mov    eax,DWORD PTR [rip+0x5264]        # 0x407988
  402724:	cmp    eax,0x1
  402727:	jne    0x402705
  402729:	mov    rcx,QWORD PTR [rip+0x5250]        # 0x407980
  402730:	test   rcx,rcx
  402733:	je     0x402746
  402735:	mov    rbx,QWORD PTR [rcx+0x10]
  402739:	call   0x402be0
  40273e:	test   rbx,rbx
  402741:	mov    rcx,rbx
  402744:	jne    0x402735
  402746:	lea    rcx,[rip+0x5253]        # 0x4079a0
  40274d:	mov    QWORD PTR [rip+0x5228],0x0        # 0x407980
  402758:	mov    DWORD PTR [rip+0x5226],0x0        # 0x407988
  402762:	call   QWORD PTR [rip+0x5ae8]        # 0x408250
  402768:	jmp    0x402705
  40276a:	nop    WORD PTR [rax+rax*1+0x0]
  402770:	mov    eax,DWORD PTR [rip+0x5212]        # 0x407988
  402776:	test   eax,eax
  402778:	je     0x402790
  40277a:	mov    eax,0x1
  40277f:	mov    DWORD PTR [rip+0x51ff],0x1        # 0x407988
  402789:	add    rsp,0x20
  40278d:	pop    rbx
  40278e:	ret    
  40278f:	nop
  402790:	lea    rcx,[rip+0x5209]        # 0x4079a0
  402797:	call   QWORD PTR [rip+0x5afb]        # 0x408298
  40279d:	jmp    0x40277a
  40279f:	nop
  4027a0:	call   0x402540
  4027a5:	jmp    0x40271e
  4027aa:	nop
  4027ab:	nop
  4027ac:	nop
  4027ad:	nop
  4027ae:	nop
  4027af:	nop
  4027b0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4027b4:	add    rcx,rax
  4027b7:	xor    eax,eax
  4027b9:	cmp    DWORD PTR [rcx],0x4550
  4027bf:	je     0x4027c3
  4027c1:	repz ret 
  4027c3:	xor    eax,eax
  4027c5:	cmp    WORD PTR [rcx+0x18],0x20b
  4027cb:	sete   al
  4027ce:	ret    
  4027cf:	nop
  4027d0:	cmp    WORD PTR [rcx],0x5a4d
  4027d5:	je     0x4027e0
  4027d7:	xor    eax,eax
  4027d9:	ret    
  4027da:	nop    WORD PTR [rax+rax*1+0x0]
  4027e0:	jmp    0x4027b0
  4027e2:	nop    DWORD PTR [rax+0x0]
  4027e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027f0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4027f4:	add    rcx,rax
  4027f7:	movzx  eax,WORD PTR [rcx+0x14]
  4027fb:	lea    rax,[rcx+rax*1+0x18]
  402800:	movzx  ecx,WORD PTR [rcx+0x6]
  402804:	test   ecx,ecx
  402806:	je     0x402831
  402808:	sub    ecx,0x1
  40280b:	lea    rcx,[rcx+rcx*4]
  40280f:	lea    r9,[rax+rcx*8+0x28]
  402814:	mov    r8d,DWORD PTR [rax+0xc]
  402818:	cmp    r8,rdx
  40281b:	mov    rcx,r8
  40281e:	ja     0x402828
  402820:	add    ecx,DWORD PTR [rax+0x8]
  402823:	cmp    rdx,rcx
  402826:	jb     0x402833
  402828:	add    rax,0x28
  40282c:	cmp    rax,r9
  40282f:	jne    0x402814
  402831:	xor    eax,eax
  402833:	repz ret 
  402835:	nop
  402836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402840:	push   rdi
  402841:	push   rsi
  402842:	push   rbx
  402843:	sub    rsp,0x20
  402847:	mov    rsi,rcx
  40284a:	call   0x402ba8
  40284f:	cmp    rax,0x8
  402853:	ja     0x402870
  402855:	mov    rbx,QWORD PTR [rip+0x1aa4]        # 0x404300
  40285c:	xor    edi,edi
  40285e:	cmp    WORD PTR [rbx],0x5a4d
  402863:	je     0x402880
  402865:	mov    rax,rdi
  402868:	add    rsp,0x20
  40286c:	pop    rbx
  40286d:	pop    rsi
  40286e:	pop    rdi
  40286f:	ret    
  402870:	xor    edi,edi
  402872:	mov    rax,rdi
  402875:	add    rsp,0x20
  402879:	pop    rbx
  40287a:	pop    rsi
  40287b:	pop    rdi
  40287c:	ret    
  40287d:	nop    DWORD PTR [rax]
  402880:	mov    rcx,rbx
  402883:	call   0x4027b0
  402888:	test   eax,eax
  40288a:	je     0x402865
  40288c:	movsxd rdx,DWORD PTR [rbx+0x3c]
  402890:	add    rdx,rbx
  402893:	movzx  eax,WORD PTR [rdx+0x14]
  402897:	lea    rbx,[rdx+rax*1+0x18]
  40289c:	movzx  eax,WORD PTR [rdx+0x6]
  4028a0:	test   eax,eax
  4028a2:	je     0x402865
  4028a4:	sub    eax,0x1
  4028a7:	lea    rax,[rax+rax*4]
  4028ab:	lea    rdi,[rbx+rax*8+0x28]
  4028b0:	jmp    0x4028bb
  4028b2:	add    rbx,0x28
  4028b6:	cmp    rbx,rdi
  4028b9:	je     0x402870
  4028bb:	mov    r8d,0x8
  4028c1:	mov    rdx,rsi
  4028c4:	mov    rcx,rbx
  4028c7:	call   0x402ba0
  4028cc:	test   eax,eax
  4028ce:	jne    0x4028b2
  4028d0:	mov    rdi,rbx
  4028d3:	mov    rax,rdi
  4028d6:	add    rsp,0x20
  4028da:	pop    rbx
  4028db:	pop    rsi
  4028dc:	pop    rdi
  4028dd:	ret    
  4028de:	xchg   ax,ax
  4028e0:	push   rsi
  4028e1:	push   rbx
  4028e2:	sub    rsp,0x28
  4028e6:	mov    rbx,QWORD PTR [rip+0x1a13]        # 0x404300
  4028ed:	cmp    WORD PTR [rbx],0x5a4d
  4028f2:	je     0x402900
  4028f4:	xor    eax,eax
  4028f6:	add    rsp,0x28
  4028fa:	pop    rbx
  4028fb:	pop    rsi
  4028fc:	ret    
  4028fd:	nop    DWORD PTR [rax]
  402900:	mov    rsi,rcx
  402903:	mov    rcx,rbx
  402906:	call   0x4027b0
  40290b:	test   eax,eax
  40290d:	je     0x4028f4
  40290f:	sub    rsi,rbx
  402912:	mov    rcx,rbx
  402915:	mov    rdx,rsi
  402918:	add    rsp,0x28
  40291c:	pop    rbx
  40291d:	pop    rsi
  40291e:	jmp    0x4027f0
  402923:	nop    DWORD PTR [rax]
  402926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402930:	push   rbx
  402931:	sub    rsp,0x20
  402935:	mov    rbx,QWORD PTR [rip+0x19c4]        # 0x404300
  40293c:	xor    eax,eax
  40293e:	cmp    WORD PTR [rbx],0x5a4d
  402943:	je     0x402950
  402945:	add    rsp,0x20
  402949:	pop    rbx
  40294a:	ret    
  40294b:	nop    DWORD PTR [rax+rax*1+0x0]
  402950:	mov    rcx,rbx
  402953:	call   0x4027b0
  402958:	test   eax,eax
  40295a:	je     0x402945
  40295c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402960:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402965:	add    rsp,0x20
  402969:	pop    rbx
  40296a:	ret    
  40296b:	nop    DWORD PTR [rax+rax*1+0x0]
  402970:	push   rdi
  402971:	push   rsi
  402972:	push   rbx
  402973:	sub    rsp,0x20
  402977:	mov    rsi,QWORD PTR [rip+0x1982]        # 0x404300
  40297e:	xor    edi,edi
  402980:	mov    rbx,rcx
  402983:	cmp    WORD PTR [rsi],0x5a4d
  402988:	je     0x402995
  40298a:	mov    rax,rdi
  40298d:	add    rsp,0x20
  402991:	pop    rbx
  402992:	pop    rsi
  402993:	pop    rdi
  402994:	ret    
  402995:	mov    rcx,rsi
  402998:	call   0x4027b0
  40299d:	test   eax,eax
  40299f:	je     0x40298a
  4029a1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4029a5:	add    rsi,rax
  4029a8:	movzx  eax,WORD PTR [rsi+0x14]
  4029ac:	lea    rdx,[rsi+rax*1+0x18]
  4029b1:	movzx  eax,WORD PTR [rsi+0x6]
  4029b5:	test   eax,eax
  4029b7:	je     0x40298a
  4029b9:	sub    eax,0x1
  4029bc:	lea    rax,[rax+rax*4]
  4029c0:	lea    rax,[rdx+rax*8+0x28]
  4029c5:	test   BYTE PTR [rdx+0x27],0x20
  4029c9:	je     0x4029d4
  4029cb:	test   rbx,rbx
  4029ce:	je     0x4029f0
  4029d0:	sub    rbx,0x1
  4029d4:	add    rdx,0x28
  4029d8:	cmp    rdx,rax
  4029db:	jne    0x4029c5
  4029dd:	xor    edi,edi
  4029df:	mov    rax,rdi
  4029e2:	add    rsp,0x20
  4029e6:	pop    rbx
  4029e7:	pop    rsi
  4029e8:	pop    rdi
  4029e9:	ret    
  4029ea:	nop    WORD PTR [rax+rax*1+0x0]
  4029f0:	mov    rdi,rdx
  4029f3:	mov    rax,rdi
  4029f6:	add    rsp,0x20
  4029fa:	pop    rbx
  4029fb:	pop    rsi
  4029fc:	pop    rdi
  4029fd:	ret    
  4029fe:	xchg   ax,ax
  402a00:	push   rsi
  402a01:	push   rbx
  402a02:	sub    rsp,0x28
  402a06:	mov    rsi,QWORD PTR [rip+0x18f3]        # 0x404300
  402a0d:	xor    ebx,ebx
  402a0f:	cmp    WORD PTR [rsi],0x5a4d
  402a14:	je     0x402a20
  402a16:	mov    rax,rbx
  402a19:	add    rsp,0x28
  402a1d:	pop    rbx
  402a1e:	pop    rsi
  402a1f:	ret    
  402a20:	mov    rcx,rsi
  402a23:	call   0x4027b0
  402a28:	test   eax,eax
  402a2a:	cmovne rbx,rsi
  402a2e:	mov    rax,rbx
  402a31:	add    rsp,0x28
  402a35:	pop    rbx
  402a36:	pop    rsi
  402a37:	ret    
  402a38:	nop    DWORD PTR [rax+rax*1+0x0]
  402a40:	push   rsi
  402a41:	push   rbx
  402a42:	sub    rsp,0x28
  402a46:	mov    rbx,QWORD PTR [rip+0x18b3]        # 0x404300
  402a4d:	xor    eax,eax
  402a4f:	cmp    WORD PTR [rbx],0x5a4d
  402a54:	je     0x402a60
  402a56:	add    rsp,0x28
  402a5a:	pop    rbx
  402a5b:	pop    rsi
  402a5c:	ret    
  402a5d:	nop    DWORD PTR [rax]
  402a60:	mov    rsi,rcx
  402a63:	mov    rcx,rbx
  402a66:	call   0x4027b0
  402a6b:	test   eax,eax
  402a6d:	je     0x402a56
  402a6f:	sub    rsi,rbx
  402a72:	mov    rcx,rbx
  402a75:	mov    rdx,rsi
  402a78:	call   0x4027f0
  402a7d:	test   rax,rax
  402a80:	je     0x402a91
  402a82:	mov    eax,DWORD PTR [rax+0x24]
  402a85:	not    eax
  402a87:	shr    eax,0x1f
  402a8a:	add    rsp,0x28
  402a8e:	pop    rbx
  402a8f:	pop    rsi
  402a90:	ret    
  402a91:	xor    eax,eax
  402a93:	jmp    0x402a56
  402a95:	nop
  402a96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402aa0:	push   rbp
  402aa1:	push   rdi
  402aa2:	push   rsi
  402aa3:	push   rbx
  402aa4:	sub    rsp,0x28
  402aa8:	mov    rdi,QWORD PTR [rip+0x1851]        # 0x404300
  402aaf:	xor    ebp,ebp
  402ab1:	mov    esi,ecx
  402ab3:	cmp    WORD PTR [rdi],0x5a4d
  402ab8:	je     0x402ad0
  402aba:	mov    rax,rbp
  402abd:	add    rsp,0x28
  402ac1:	pop    rbx
  402ac2:	pop    rsi
  402ac3:	pop    rdi
  402ac4:	pop    rbp
  402ac5:	ret    
  402ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ad0:	mov    rcx,rdi
  402ad3:	call   0x4027b0
  402ad8:	test   eax,eax
  402ada:	je     0x402aba
  402adc:	movsxd rax,DWORD PTR [rdi+0x3c]
  402ae0:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402ae7:	test   edx,edx
  402ae9:	je     0x402aba
  402aeb:	mov    ebx,edx
  402aed:	mov    rcx,rdi
  402af0:	mov    rdx,rbx
  402af3:	call   0x4027f0
  402af8:	test   rax,rax
  402afb:	je     0x402aba
  402afd:	add    rbx,rdi
  402b00:	mov    rdx,rbx
  402b03:	jne    0x402b17
  402b05:	jmp    0x402aba
  402b07:	nop    WORD PTR [rax+rax*1+0x0]
  402b10:	sub    esi,0x1
  402b13:	add    rdx,0x14
  402b17:	mov    ecx,DWORD PTR [rdx+0x4]
  402b1a:	test   ecx,ecx
  402b1c:	jne    0x402b25
  402b1e:	mov    eax,DWORD PTR [rdx+0xc]
  402b21:	test   eax,eax
  402b23:	je     0x402b40
  402b25:	test   esi,esi
  402b27:	jg     0x402b10
  402b29:	mov    ebp,DWORD PTR [rdx+0xc]
  402b2c:	add    rbp,rdi
  402b2f:	mov    rax,rbp
  402b32:	add    rsp,0x28
  402b36:	pop    rbx
  402b37:	pop    rsi
  402b38:	pop    rdi
  402b39:	pop    rbp
  402b3a:	ret    
  402b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b40:	xor    ebp,ebp
  402b42:	mov    rax,rbp
  402b45:	add    rsp,0x28
  402b49:	pop    rbx
  402b4a:	pop    rsi
  402b4b:	pop    rdi
  402b4c:	pop    rbp
  402b4d:	ret    
  402b4e:	nop
  402b4f:	nop
  402b50:	push   rcx
  402b51:	push   rax
  402b52:	cmp    rax,0x1000
  402b58:	lea    rcx,[rsp+0x18]
  402b5d:	jb     0x402b78
  402b5f:	sub    rcx,0x1000
  402b66:	or     QWORD PTR [rcx],0x0
  402b6a:	sub    rax,0x1000
  402b70:	cmp    rax,0x1000
  402b76:	ja     0x402b5f
  402b78:	sub    rcx,rax
  402b7b:	or     QWORD PTR [rcx],0x0
  402b7f:	pop    rax
  402b80:	pop    rcx
  402b81:	ret    
  402b82:	nop
  402b83:	nop
  402b84:	nop
  402b85:	nop
  402b86:	nop
  402b87:	nop
  402b88:	nop
  402b89:	nop
  402b8a:	nop
  402b8b:	nop
  402b8c:	nop
  402b8d:	nop
  402b8e:	nop
  402b8f:	nop
  402b90:	jmp    QWORD PTR [rip+0x586a]        # 0x408400
  402b96:	nop
  402b97:	nop
  402b98:	jmp    QWORD PTR [rip+0x585a]        # 0x4083f8
  402b9e:	nop
  402b9f:	nop
  402ba0:	jmp    QWORD PTR [rip+0x584a]        # 0x4083f0
  402ba6:	nop
  402ba7:	nop
  402ba8:	jmp    QWORD PTR [rip+0x583a]        # 0x4083e8
  402bae:	nop
  402baf:	nop
  402bb0:	jmp    QWORD PTR [rip+0x582a]        # 0x4083e0
  402bb6:	nop
  402bb7:	nop
  402bb8:	jmp    QWORD PTR [rip+0x581a]        # 0x4083d8
  402bbe:	nop
  402bbf:	nop
  402bc0:	jmp    QWORD PTR [rip+0x580a]        # 0x4083d0
  402bc6:	nop
  402bc7:	nop
  402bc8:	jmp    QWORD PTR [rip+0x57fa]        # 0x4083c8
  402bce:	nop
  402bcf:	nop
  402bd0:	jmp    QWORD PTR [rip+0x57ea]        # 0x4083c0
  402bd6:	nop
  402bd7:	nop
  402bd8:	jmp    QWORD PTR [rip+0x57da]        # 0x4083b8
  402bde:	nop
  402bdf:	nop
  402be0:	jmp    QWORD PTR [rip+0x57ca]        # 0x4083b0
  402be6:	nop
  402be7:	nop
  402be8:	jmp    QWORD PTR [rip+0x57ba]        # 0x4083a8
  402bee:	nop
  402bef:	nop
  402bf0:	jmp    QWORD PTR [rip+0x57aa]        # 0x4083a0
  402bf6:	nop
  402bf7:	nop
  402bf8:	jmp    QWORD PTR [rip+0x579a]        # 0x408398
  402bfe:	nop
  402bff:	nop
  402c00:	jmp    QWORD PTR [rip+0x578a]        # 0x408390
  402c06:	nop
  402c07:	nop
  402c08:	jmp    QWORD PTR [rip+0x577a]        # 0x408388
  402c0e:	nop
  402c0f:	nop
  402c10:	jmp    QWORD PTR [rip+0x576a]        # 0x408380
  402c16:	nop
  402c17:	nop
  402c18:	jmp    QWORD PTR [rip+0x575a]        # 0x408378
  402c1e:	nop
  402c1f:	nop
  402c20:	jmp    QWORD PTR [rip+0x574a]        # 0x408370
  402c26:	nop
  402c27:	nop
  402c28:	jmp    QWORD PTR [rip+0x5732]        # 0x408360
  402c2e:	nop
  402c2f:	nop
  402c30:	jmp    QWORD PTR [rip+0x5722]        # 0x408358
  402c36:	nop
  402c37:	nop
  402c38:	jmp    QWORD PTR [rip+0x570a]        # 0x408348
  402c3e:	nop
  402c3f:	nop
  402c40:	jmp    QWORD PTR [rip+0x56fa]        # 0x408340
  402c46:	nop
  402c47:	nop
  402c48:	jmp    QWORD PTR [rip+0x56ea]        # 0x408338
  402c4e:	nop
  402c4f:	nop
  402c50:	jmp    QWORD PTR [rip+0x56da]        # 0x408330
  402c56:	nop
  402c57:	nop
  402c58:	jmp    QWORD PTR [rip+0x56c2]        # 0x408320
  402c5e:	nop
  402c5f:	nop
  402c60:	jmp    QWORD PTR [rip+0x56b2]        # 0x408318
  402c66:	nop
  402c67:	nop
  402c68:	jmp    QWORD PTR [rip+0x56a2]        # 0x408310
  402c6e:	nop
  402c6f:	nop
  402c70:	mov    rax,QWORD PTR [rip+0x4d79]        # 0x4079f0
  402c77:	ret    
  402c78:	nop    DWORD PTR [rax+rax*1+0x0]
  402c80:	mov    rax,rcx
  402c83:	xchg   QWORD PTR [rip+0x4d66],rax        # 0x4079f0
  402c8a:	ret    
  402c8b:	nop
  402c8c:	nop
  402c8d:	nop
  402c8e:	nop
  402c8f:	nop
  402c90:	jmp    QWORD PTR [rip+0x566a]        # 0x408300
  402c96:	nop
  402c97:	nop
  402c98:	jmp    QWORD PTR [rip+0x565a]        # 0x4082f8
  402c9e:	nop
  402c9f:	nop
  402ca0:	jmp    QWORD PTR [rip+0x564a]        # 0x4082f0
  402ca6:	nop
  402ca7:	nop
  402ca8:	jmp    QWORD PTR [rip+0x563a]        # 0x4082e8
  402cae:	nop
  402caf:	nop
  402cb0:	jmp    QWORD PTR [rip+0x562a]        # 0x4082e0
  402cb6:	nop
  402cb7:	nop
  402cb8:	jmp    QWORD PTR [rip+0x561a]        # 0x4082d8
  402cbe:	nop
  402cbf:	nop
  402cc0:	jmp    QWORD PTR [rip+0x560a]        # 0x4082d0
  402cc6:	nop
  402cc7:	nop
  402cc8:	jmp    QWORD PTR [rip+0x55fa]        # 0x4082c8
  402cce:	nop
  402ccf:	nop
  402cd0:	jmp    QWORD PTR [rip+0x55ea]        # 0x4082c0
  402cd6:	nop
  402cd7:	nop
  402cd8:	jmp    QWORD PTR [rip+0x55da]        # 0x4082b8
  402cde:	nop
  402cdf:	nop
  402ce0:	jmp    QWORD PTR [rip+0x55ca]        # 0x4082b0
  402ce6:	nop
  402ce7:	nop
  402ce8:	jmp    QWORD PTR [rip+0x55ba]        # 0x4082a8
  402cee:	nop
  402cef:	nop
  402cf0:	jmp    QWORD PTR [rip+0x55aa]        # 0x4082a0
  402cf6:	nop
  402cf7:	nop
  402cf8:	jmp    QWORD PTR [rip+0x559a]        # 0x408298
  402cfe:	nop
  402cff:	nop
  402d00:	jmp    QWORD PTR [rip+0x558a]        # 0x408290
  402d06:	nop
  402d07:	nop
  402d08:	jmp    QWORD PTR [rip+0x557a]        # 0x408288
  402d0e:	nop
  402d0f:	nop
  402d10:	jmp    QWORD PTR [rip+0x556a]        # 0x408280
  402d16:	nop
  402d17:	nop
  402d18:	jmp    QWORD PTR [rip+0x555a]        # 0x408278
  402d1e:	nop
  402d1f:	nop
  402d20:	jmp    QWORD PTR [rip+0x554a]        # 0x408270
  402d26:	nop
  402d27:	nop
  402d28:	jmp    QWORD PTR [rip+0x553a]        # 0x408268
  402d2e:	nop
  402d2f:	nop
  402d30:	jmp    QWORD PTR [rip+0x552a]        # 0x408260
  402d36:	nop
  402d37:	nop
  402d38:	jmp    QWORD PTR [rip+0x551a]        # 0x408258
  402d3e:	nop
  402d3f:	nop
  402d40:	jmp    QWORD PTR [rip+0x550a]        # 0x408250
  402d46:	nop
  402d47:	nop
  402d48:	nop    DWORD PTR [rax+rax*1+0x0]
  402d50:	(bad)  
  402d51:	(bad)  
  402d52:	(bad)  
  402d53:	(bad)  
  402d54:	(bad)  
  402d55:	(bad)  
  402d56:	(bad)  
  402d57:	inc    DWORD PTR [rax]
  402d59:	add    BYTE PTR [rax],al
  402d5b:	add    BYTE PTR [rax],al
  402d5d:	add    BYTE PTR [rax],al
  402d5f:	add    bh,bh
  402d61:	(bad)  
  402d62:	(bad)  
  402d63:	(bad)  
  402d64:	(bad)  
  402d65:	(bad)  
  402d66:	(bad)  
  402d67:	inc    DWORD PTR [rax]
  402d69:	add    BYTE PTR [rax],al
  402d6b:	add    BYTE PTR [rax],al
  402d6d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000403000 <.data>:
  403000:	or     al,BYTE PTR [rax]
	...
  40300e:	add    BYTE PTR [rax],al
  403010:	push   0x402d
	...
  40301d:	add    BYTE PTR [rax],al
  40301f:	add    bh,bh
  403021:	(bad)  
  403022:	(bad)  
  403023:	(bad)  
  403024:	(bad)  
  403025:	(bad)  
  403026:	(bad)  
  403027:	inc    DWORD PTR [rax]
  403029:	add    BYTE PTR [rax],al
  40302b:	add    BYTE PTR [rax],al
  40302d:	add    BYTE PTR [rax],al
  40302f:	add    bh,bh
	...
  40303d:	add    BYTE PTR [rax],al
  40303f:	add    BYTE PTR [rdx],al
	...
  40304d:	add    BYTE PTR [rax],al
  40304f:	add    bh,bh
  403051:	(bad)  
  403052:	(bad)  
  403053:	inc    DWORD PTR [rax]
	...
  40305d:	add    BYTE PTR [rax],al
  40305f:	add    BYTE PTR [rax+0x2c],dh
  403062:	add    BYTE PTR [rax],al
  403065:	add    BYTE PTR [rax],al
  403067:	add    BYTE PTR [rax+0x402c],al
  40306d:	add    BYTE PTR [rax],al
  40306f:	add    BYTE PTR [rdx],dh
  403071:	movabs ds:0x2b992ddf,al
  40307a:	add    BYTE PTR [rax],al
  40307c:	add    BYTE PTR [rax],al
  40307e:	add    BYTE PTR [rax],al
  403080:	int    0x5d
  403082:	and    dl,dl
  403084:	data16 (bad) 
  403086:	(bad)  
  403087:	inc    DWORD PTR [rax]
  403089:	add    BYTE PTR [rax],al
  40308b:	add    BYTE PTR [rax],al
  40308d:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000404000 <.rdata>:
  404000:	rex.RXB
  404001:	rex.RB
  404002:	rex.WRXB push r11
  404004:	and    BYTE PTR [rsi+0x65],dh
  404007:	jb     0x40407c
  404009:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325203a
  404010:	or     al,BYTE PTR [rax]
	...
  40401e:	add    BYTE PTR [rax],al
  404020:	xor    BYTE PTR [rbp+0x40],0x0
  404024:	add    BYTE PTR [rax],al
  404026:	add    BYTE PTR [rax],al
  404028:	xor    BYTE PTR [rax+0x40],0x0
  40402c:	add    BYTE PTR [rax],al
  40402e:	add    BYTE PTR [rax],al
  404030:	lock sbb DWORD PTR [rax+0x0],eax
	...
  404040:	rex.B jb 0x4040aa
  404043:	jne    0x4040b2
  404045:	outs   dx,BYTE PTR gs:[rsi]
  404047:	je     0x404069
  404049:	outs   dx,DWORD PTR fs:[rsi]
  40404b:	ins    DWORD PTR es:[rdi],dx
  40404c:	(bad)  
  40404d:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  404054:	jb     0x404076
  404056:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  40405a:	rex.B
  40405b:	rex.WB
  40405c:	rex.WRX sub QWORD PTR [rax],r8
  40405f:	rex.B jb 0x4040c9
  404062:	jne    0x4040d1
  404064:	outs   dx,BYTE PTR gs:[rsi]
  404066:	je     0x404088
  404068:	jae    0x4040d3
  40406a:	outs   dx,BYTE PTR ds:[rsi]
  40406b:	addr32 jne 0x4040da
  40406e:	(bad)  
  40406f:	jb     0x4040da
  404071:	je     0x4040ec
  404073:	and    BYTE PTR [rax],ch
  404075:	push   rbx
  404076:	rex.WB
  404077:	rex.RXB
  404078:	rex.WRX sub QWORD PTR [rax],r8
  40407b:	add    BYTE PTR [rax],al
  40407d:	add    BYTE PTR [rax],al
  40407f:	add    BYTE PTR [rdi+0x76],cl
  404082:	gs jb  0x4040eb
  404085:	ins    BYTE PTR es:[rdi],dx
  404086:	outs   dx,DWORD PTR ds:[rsi]
  404087:	ja     0x4040a9
  404089:	jb     0x4040ec
  40408b:	outs   dx,BYTE PTR ds:[rsi]
  40408c:	and    BYTE PTR gs:[ebp+0x72],ah
  404091:	jb     0x404102
  404093:	jb     0x4040b5
  404095:	sub    BYTE PTR [rdi+0x56],cl
  404098:	rex.RB push r10
  40409a:	rex.RX
  40409b:	rex.WR
  40409c:	rex.WRXB push r15
  40409e:	sub    DWORD PTR [rax],eax
  4040a0:	push   rax
  4040a1:	(bad)  
  4040a2:	jb     0x404118
  4040a4:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  4040ab:	jae    0x4040cd
  4040ad:	outs   dx,DWORD PTR ds:[rsi]
  4040ae:	data16 and BYTE PTR [rbx+0x69],dh
  4040b2:	outs   dx,BYTE PTR ds:[esi]
  4040b4:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4040bb:	and    BYTE PTR gs:[rax],ch
  4040be:	push   rax
  4040bf:	rex.WR
  4040c0:	rex.WRXB push r11
  4040c2:	push   rbx
  4040c3:	sub    DWORD PTR [rax],eax
  4040c5:	add    BYTE PTR [rax],al
  4040c7:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  4040cb:	(bad)  
  4040cc:	ins    BYTE PTR es:[rdi],dx
  4040cd:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  4040d1:	jae    0x4040f3
  4040d3:	outs   dx,DWORD PTR ds:[rsi]
  4040d4:	data16 and BYTE PTR [rbx+0x69],dh
  4040d8:	outs   dx,BYTE PTR ds:[esi]
  4040da:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  4040e1:	and    BYTE PTR gs:[rax],ch
  4040e4:	push   rsp
  4040e5:	rex.WR
  4040e6:	rex.WRXB push r11
  4040e8:	push   rbx
  4040e9:	sub    DWORD PTR [rax],eax
  4040eb:	add    BYTE PTR [rax],al
  4040ed:	add    BYTE PTR [rax],al
  4040ef:	add    BYTE PTR [rax+rbp*2+0x65],dl
  4040f3:	and    BYTE PTR [rdx+0x65],dh
  4040f6:	jae    0x40416d
  4040f8:	ins    BYTE PTR es:[rdi],dx
  4040f9:	je     0x40411b
  4040fb:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  404102:	jae    0x404171
  404104:	(bad)  
  404105:	ins    BYTE PTR es:[rdi],dx
  404106:	ins    BYTE PTR es:[rdi],dx
  404107:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40410b:	(bad)  
  40410c:	and    BYTE PTR gs:[rdx+0x65],dh
  404110:	jo     0x404184
  404112:	gs jae 0x40417a
  404115:	outs   dx,BYTE PTR ds:[rsi]
  404116:	je     0x40417d
  404118:	and    BYTE PTR fs:[rax],ch
  40411b:	push   rbp
  40411c:	rex.WRX
  40411d:	rex.R
  40411e:	rex.RB push r10
  404120:	rex.RX
  404121:	rex.WR
  404122:	rex.WRXB push r15
  404124:	sub    DWORD PTR [rax],eax
  404126:	push   rbp
  404127:	outs   dx,BYTE PTR ds:[rsi]
  404128:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40412c:	outs   dx,BYTE PTR ds:[rsi]
  40412d:	and    BYTE PTR [rbp+0x72],ah
  404130:	jb     0x4041a1
  404132:	jb     0x404134
  404134:	add    BYTE PTR [rax],al
  404136:	add    BYTE PTR [rax],al
  404138:	pop    rdi
  404139:	ins    DWORD PTR es:[rdi],dx
  40413a:	(bad)  
  40413b:	je     0x4041a5
  40413d:	gs jb  0x4041b2
  404140:	sub    BYTE PTR [rcx],ch
  404142:	cmp    ah,BYTE PTR [rax]
  404144:	and    eax,0x6e692073
  404149:	and    BYTE PTR [rip+0x67252873],ah        # 0x676569c2
  40414f:	sub    al,0x20
  404151:	and    eax,0x20202967
  404156:	sub    BYTE PTR [rdx+0x65],dh
  404159:	je     0x4041d1
  40415b:	(bad)  
  40415c:	ins    BYTE PTR es:[rdi],dx
  40415d:	cmp    eax,0xa296725
  404162:	add    BYTE PTR [rax],al
  404164:	pop    rsp
  404165:	(bad)  
  404167:	call   FWORD PTR [rbp+0xcffffd9]
  40416d:	(bad)  
  40416f:	call   FWORD PTR [rdx+rbx*8]
  404172:	(bad)  
  404173:	jmp    FWORD PTR [rdx+rbx*8]
  404176:	(bad)  
  404177:	(bad)  
  404178:	cmp    al,0xda
  40417a:	(bad)  
  40417b:	dec    DWORD PTR [rdx+rbx*8-0x1]
  40417f:	dec    DWORD PTR [rbp+0x69]
  404182:	outs   dx,BYTE PTR ds:[rsi]
  404183:	addr32 ja 0x4041b3
  404186:	ja     0x4041be
  404188:	xor    al,0x20
  40418a:	jb     0x404201
  40418c:	outs   dx,BYTE PTR ds:[rsi]
  40418d:	je     0x4041f8
  40418f:	ins    DWORD PTR es:[rdi],dx
  404190:	and    BYTE PTR gs:[rsi+0x61],ah
  404194:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  40419c:	add    BYTE PTR [rax],al
  40419e:	add    BYTE PTR [rax],al
  4041a0:	rex.B
  4041a1:	fs fs jb 0x40420a
  4041a5:	jae    0x40421a
  4041a7:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8621d
  4041ad:	jae    0x4041cf
  4041af:	outs   dx,BYTE PTR ds:[rsi]
  4041b0:	outs   dx,DWORD PTR ds:[rsi]
  4041b1:	and    BYTE PTR [rcx+0x6d],ch
  4041b4:	(bad)  
  4041b5:	addr32 gs sub eax,0x74636573
  4041bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  4041c3:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4041ca:	jne    0x404231
  4041cc:	jb     0x404247
  4041ce:	and    BYTE PTR [rsi+0x61],ah
  4041d1:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  4041d9:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a26243
  4041df:	je     0x404246
  4041e1:	jae    0x404203
  4041e3:	(bad)  
  4041e4:	je     0x404206
  4041e6:	(bad)  
  4041e7:	fs fs jb 0x404250
  4041eb:	jae    0x404260
  4041ed:	and    BYTE PTR [rip+0x70],ah        # 0x404263
  4041f3:	add    BYTE PTR [rax],al
  4041f5:	add    BYTE PTR [rax],al
  4041f7:	add    BYTE PTR [rax],ah
  4041f9:	and    BYTE PTR [rsi+0x69],dl
  4041fc:	jb     0x404272
  4041fe:	jne    0x404261
  404200:	ins    BYTE PTR es:[rdi],dx
  404201:	push   rax
  404202:	jb     0x404273
  404204:	je     0x40426b
  404206:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40420a:	(bad)  
  40420b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  404213:	push   0x646f6320
  404218:	and    BYTE PTR gs:[rax],dh
  40421b:	js     0x404242
  40421d:	js     0x40421f
  40421f:	add    BYTE PTR [rax],ah
  404221:	and    BYTE PTR [rbp+0x6e],dl
  404224:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  404228:	outs   dx,BYTE PTR ds:[rsi]
  404229:	and    BYTE PTR [rax+0x73],dh
  40422c:	gs jne 0x404293
  40422f:	outs   dx,DWORD PTR ds:[rsi]
  404230:	and    BYTE PTR [rdx+0x65],dh
  404233:	ins    BYTE PTR es:[rdi],dx
  404234:	outs   dx,DWORD PTR ds:[rsi]
  404235:	movsxd esp,DWORD PTR [rcx+0x74]
  404238:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40423f:	je     0x4042b0
  404241:	movsxd ebp,DWORD PTR [rdi+0x6c]
  404244:	and    BYTE PTR [rsi+0x65],dh
  404247:	jb     0x4042bc
  404249:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  404250:	or     al,BYTE PTR [rax]
  404252:	add    BYTE PTR [rax],al
  404254:	add    BYTE PTR [rax],al
  404256:	add    BYTE PTR [rax],al
  404258:	and    BYTE PTR [rax],ah
  40425a:	push   rbp
  40425b:	outs   dx,BYTE PTR ds:[rsi]
  40425c:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  404260:	outs   dx,BYTE PTR ds:[rsi]
  404261:	and    BYTE PTR [rax+0x73],dh
  404264:	gs jne 0x4042cb
  404267:	outs   dx,DWORD PTR ds:[rsi]
  404268:	and    BYTE PTR [rdx+0x65],dh
  40426b:	ins    BYTE PTR es:[rdi],dx
  40426c:	outs   dx,DWORD PTR ds:[rsi]
  40426d:	movsxd esp,DWORD PTR [rcx+0x74]
  404270:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  404277:	and    BYTE PTR [rbx+0x69],dh
  40427a:	jp     0x4042e1
  40427c:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a70e6
	...
  40428e:	add    BYTE PTR [rax],al
  404290:	cs jo  0x4042f7
  404293:	(bad)  
  404294:	je     0x4042f7
	...
  40429e:	add    BYTE PTR [rax],al
  4042a0:	xor    BYTE PTR [rax+0x0],al
	...
  4042b0:	push   rax
  4042b1:	xor    BYTE PTR [rax+0x0],al
	...
  4042c0:	push   rax
  4042c1:	sub    eax,0x40
	...
  4042ce:	add    BYTE PTR [rax],al
  4042d0:	loopne 0x404319
  4042d2:	add    BYTE PTR [rax],al
	...
  4042dd:	add    BYTE PTR [rax],al
  4042df:	add    al,ah
  4042e1:	rex.RXB
  4042e2:	add    BYTE PTR [rax],al
	...
  4042ed:	add    BYTE PTR [rax],al
  4042ef:	add    BYTE PTR [rax],dh
  4042f1:	rex
  4042f2:	add    BYTE PTR [rax],al
	...
  404301:	add    BYTE PTR [rax+0x0],al
	...
  404310:	sub    BYTE PTR [rbx+0x40],al
	...
  40431e:	add    BYTE PTR [rax],al
  404320:	push   rax
  404321:	add    DWORD PTR [rax+0x0],0x0
	...
  40432d:	add    BYTE PTR [rax],al
  40432f:	add    BYTE PTR [rax-0x7d],ch
  404332:	add    BYTE PTR [rax],al
	...
  40433d:	add    BYTE PTR [rax],al
  40433f:	add    BYTE PTR [rax+0x4083],al
	...
  40434d:	add    BYTE PTR [rax],al
  40434f:	add    al,al
  404351:	jbe    0x404393
	...
  40435f:	add    BYTE PTR [rax],ch
  404361:	jp     0x4043a3
	...
  40436f:	add    BYTE PTR [rax],ah
  404371:	jp     0x4043b3
	...
  40437f:	add    BYTE PTR [rax],dl
  404381:	jp     0x4043c3
	...
  40438f:	add    BYTE PTR [rax],bl
  404391:	jp     0x4043d3
	...
  40439f:	add    BYTE PTR [rax],al
  4043a1:	nop
  4043a2:	add    BYTE PTR [rax],al
	...
  4043ad:	add    BYTE PTR [rax],al
  4043af:	add    BYTE PTR [rax],dl
  4043b1:	nop
  4043b2:	add    BYTE PTR [rax],al
	...
  4043bd:	add    BYTE PTR [rax],al
  4043bf:	add    BYTE PTR [rax],bl
  4043c1:	nop
  4043c2:	add    BYTE PTR [rax],al
	...
  4043cd:	add    BYTE PTR [rax],al
  4043cf:	add    BYTE PTR [rax],dh
  4043d1:	nop
  4043d2:	add    BYTE PTR [rax],al
	...
  4043dd:	add    BYTE PTR [rax],al
  4043df:	add    BYTE PTR [rax+0x70],al
  4043e2:	add    BYTE PTR [rax],al
	...
  4043ed:	add    BYTE PTR [rax],al
  4043ef:	add    BYTE PTR [rax+0x4076],dl
	...
  4043fd:	add    BYTE PTR [rax],al
  4043ff:	add    BYTE PTR [rax+0x4023],al
	...
  40440d:	add    BYTE PTR [rax],al
  40440f:	add    al,dl
  404411:	sbb    al,BYTE PTR [rax+0x0]
	...
  404420:	rex jbe 0x404463
	...
  40442f:	add    BYTE PTR [rax+0x76],dh
  404432:	add    BYTE PTR [rax],al
	...
  40443d:	add    BYTE PTR [rax],al
  40443f:	add    BYTE PTR [rax+0x70],dl
  404442:	add    BYTE PTR [rax],al
	...
  40444d:	add    BYTE PTR [rax],al
  40444f:	add    BYTE PTR [rax+0x76],bl
  404452:	add    BYTE PTR [rax],al
	...
  40445d:	add    BYTE PTR [rax],al
  40445f:	add    BYTE PTR [rsi+rsi*2+0x40],dl
	...
  40446f:	add    BYTE PTR [rax+0x76],dl
  404472:	add    BYTE PTR [rax],al
	...
  40447d:	add    BYTE PTR [rax],al
  40447f:	add    BYTE PTR [rdi+0x43],al
  404482:	rex.XB cmp spl,BYTE PTR [r8]
  404485:	sub    BYTE PTR [rdi+0x4e],al
  404488:	push   rbp
  404489:	sub    DWORD PTR [rax],esp
  40448b:	xor    al,0x2e
  40448d:	cmp    DWORD PTR [rsi],ebp
  40448f:	xor    al,0x0
	...
  40449d:	add    BYTE PTR [rax],al
  40449f:	add    BYTE PTR [rdi+0x43],al
  4044a2:	rex.XB cmp spl,BYTE PTR [r8]
  4044a5:	sub    BYTE PTR [rdi+0x4e],al
  4044a8:	push   rbp
  4044a9:	sub    DWORD PTR [rax],esp
  4044ab:	xor    al,0x2e
  4044ad:	cmp    DWORD PTR [rsi],ebp
  4044af:	xor    al,0x0
	...
  4044bd:	add    BYTE PTR [rax],al
  4044bf:	add    BYTE PTR [rdi+0x43],al
  4044c2:	rex.XB cmp spl,BYTE PTR [r8]
  4044c5:	sub    BYTE PTR [rdi+0x4e],al
  4044c8:	push   rbp
  4044c9:	sub    DWORD PTR [rax],esp
  4044cb:	xor    al,0x2e
  4044cd:	cmp    DWORD PTR [rsi],ebp
  4044cf:	xor    al,0x0
	...
  4044dd:	add    BYTE PTR [rax],al
  4044df:	add    BYTE PTR [rdi+0x43],al
  4044e2:	rex.XB cmp spl,BYTE PTR [r8]
  4044e5:	sub    BYTE PTR [rdi+0x4e],al
  4044e8:	push   rbp
  4044e9:	sub    DWORD PTR [rax],esp
  4044eb:	xor    al,0x2e
  4044ed:	cmp    DWORD PTR [rsi],ebp
  4044ef:	xor    al,0x0
	...
  4044fd:	add    BYTE PTR [rax],al
  4044ff:	add    BYTE PTR [rdi+0x43],al
  404502:	rex.XB cmp spl,BYTE PTR [r8]
  404505:	sub    BYTE PTR [rdi+0x4e],al
  404508:	push   rbp
  404509:	sub    DWORD PTR [rax],esp
  40450b:	xor    al,0x2e
  40450d:	cmp    DWORD PTR [rsi],ebp
  40450f:	xor    al,0x0
	...
  40451d:	add    BYTE PTR [rax],al
  40451f:	add    BYTE PTR [rdi+0x43],al
  404522:	rex.XB cmp spl,BYTE PTR [r8]
  404525:	sub    BYTE PTR [rdi+0x4e],al
  404528:	push   rbp
  404529:	sub    DWORD PTR [rax],esp
  40452b:	xor    al,0x2e
  40452d:	cmp    DWORD PTR [rsi],ebp
  40452f:	xor    al,0x0
	...
  40453d:	add    BYTE PTR [rax],al
  40453f:	add    BYTE PTR [rdi+0x43],al
  404542:	rex.XB cmp spl,BYTE PTR [r8]
  404545:	sub    BYTE PTR [rdi+0x4e],al
  404548:	push   rbp
  404549:	sub    DWORD PTR [rax],esp
  40454b:	xor    al,0x2e
  40454d:	cmp    DWORD PTR [rsi],ebp
  40454f:	xor    al,0x0
	...
  40455d:	add    BYTE PTR [rax],al
  40455f:	add    BYTE PTR [rdi+0x43],al
  404562:	rex.XB cmp spl,BYTE PTR [r8]
  404565:	sub    BYTE PTR [rdi+0x4e],al
  404568:	push   rbp
  404569:	sub    DWORD PTR [rax],esp
  40456b:	xor    al,0x2e
  40456d:	cmp    DWORD PTR [rsi],ebp
  40456f:	xor    al,0x0
	...
  40457d:	add    BYTE PTR [rax],al
  40457f:	add    BYTE PTR [rdi+0x43],al
  404582:	rex.XB cmp spl,BYTE PTR [r8]
  404585:	sub    BYTE PTR [rdi+0x4e],al
  404588:	push   rbp
  404589:	sub    DWORD PTR [rax],esp
  40458b:	xor    al,0x2e
  40458d:	cmp    DWORD PTR [rsi],ebp
  40458f:	xor    al,0x0
	...
  40459d:	add    BYTE PTR [rax],al
  40459f:	add    BYTE PTR [rdi+0x43],al
  4045a2:	rex.XB cmp spl,BYTE PTR [r8]
  4045a5:	sub    BYTE PTR [rdi+0x4e],al
  4045a8:	push   rbp
  4045a9:	sub    DWORD PTR [rax],esp
  4045ab:	xor    al,0x2e
  4045ad:	cmp    DWORD PTR [rsi],ebp
  4045af:	xor    al,0x0
	...
  4045bd:	add    BYTE PTR [rax],al
  4045bf:	add    BYTE PTR [rdi+0x43],al
  4045c2:	rex.XB cmp spl,BYTE PTR [r8]
  4045c5:	sub    BYTE PTR [rdi+0x4e],al
  4045c8:	push   rbp
  4045c9:	sub    DWORD PTR [rax],esp
  4045cb:	xor    al,0x2e
  4045cd:	cmp    DWORD PTR [rsi],ebp
  4045cf:	xor    al,0x0
	...
  4045dd:	add    BYTE PTR [rax],al
  4045df:	add    BYTE PTR [rdi+0x43],al
  4045e2:	rex.XB cmp spl,BYTE PTR [r8]
  4045e5:	sub    BYTE PTR [rdi+0x4e],al
  4045e8:	push   rbp
  4045e9:	sub    DWORD PTR [rax],esp
  4045eb:	xor    al,0x2e
  4045ed:	cmp    DWORD PTR [rsi],ebp
  4045ef:	xor    al,0x0
	...
  4045fd:	add    BYTE PTR [rax],al
  4045ff:	add    BYTE PTR [rdi+0x43],al
  404602:	rex.XB cmp spl,BYTE PTR [r8]
  404605:	sub    BYTE PTR [rdi+0x4e],al
  404608:	push   rbp
  404609:	sub    DWORD PTR [rax],esp
  40460b:	xor    al,0x2e
  40460d:	cmp    DWORD PTR [rsi],ebp
  40460f:	xor    al,0x0
	...
  40461d:	add    BYTE PTR [rax],al
  40461f:	add    BYTE PTR [rdi+0x43],al
  404622:	rex.XB cmp spl,BYTE PTR [r8]
  404625:	sub    BYTE PTR [rdi+0x4e],al
  404628:	push   rbp
  404629:	sub    DWORD PTR [rax],esp
  40462b:	xor    al,0x2e
  40462d:	cmp    DWORD PTR [rsi],ebp
  40462f:	xor    al,0x0
	...
  40463d:	add    BYTE PTR [rax],al
  40463f:	add    BYTE PTR [rdi+0x43],al
  404642:	rex.XB cmp spl,BYTE PTR [r8]
  404645:	sub    BYTE PTR [rdi+0x4e],al
  404648:	push   rbp
  404649:	sub    DWORD PTR [rax],esp
  40464b:	xor    al,0x2e
  40464d:	cmp    DWORD PTR [rsi],ebp
  40464f:	xor    al,0x0
	...
  40465d:	add    BYTE PTR [rax],al
  40465f:	add    BYTE PTR [rdi+0x43],al
  404662:	rex.XB cmp spl,BYTE PTR [r8]
  404665:	sub    BYTE PTR [rdi+0x4e],al
  404668:	push   rbp
  404669:	sub    DWORD PTR [rax],esp
  40466b:	xor    al,0x2e
  40466d:	cmp    DWORD PTR [rsi],ebp
  40466f:	xor    al,0x0
	...
  40467d:	add    BYTE PTR [rax],al
  40467f:	add    BYTE PTR [rdi+0x43],al
  404682:	rex.XB cmp spl,BYTE PTR [r8]
  404685:	sub    BYTE PTR [rdi+0x4e],al
  404688:	push   rbp
  404689:	sub    DWORD PTR [rax],esp
  40468b:	xor    al,0x2e
  40468d:	cmp    DWORD PTR [rsi],ebp
  40468f:	xor    al,0x0
	...
  40469d:	add    BYTE PTR [rax],al
  40469f:	add    BYTE PTR [rdi+0x43],al
  4046a2:	rex.XB cmp spl,BYTE PTR [r8]
  4046a5:	sub    BYTE PTR [rdi+0x4e],al
  4046a8:	push   rbp
  4046a9:	sub    DWORD PTR [rax],esp
  4046ab:	xor    al,0x2e
  4046ad:	cmp    DWORD PTR [rsi],ebp
  4046af:	xor    al,0x0
	...
  4046bd:	add    BYTE PTR [rax],al
  4046bf:	add    BYTE PTR [rdi+0x43],al
  4046c2:	rex.XB cmp spl,BYTE PTR [r8]
  4046c5:	sub    BYTE PTR [rdi+0x4e],al
  4046c8:	push   rbp
  4046c9:	sub    DWORD PTR [rax],esp
  4046cb:	xor    al,0x2e
  4046cd:	cmp    DWORD PTR [rsi],ebp
  4046cf:	xor    al,0x0
	...
  4046dd:	add    BYTE PTR [rax],al
  4046df:	add    BYTE PTR [rdi+0x43],al
  4046e2:	rex.XB cmp spl,BYTE PTR [r8]
  4046e5:	sub    BYTE PTR [rdi+0x4e],al
  4046e8:	push   rbp
  4046e9:	sub    DWORD PTR [rax],esp
  4046eb:	xor    al,0x2e
  4046ed:	cmp    DWORD PTR [rsi],ebp
  4046ef:	xor    al,0x0
	...
  4046fd:	add    BYTE PTR [rax],al
  4046ff:	add    BYTE PTR [rdi+0x43],al
  404702:	rex.XB cmp spl,BYTE PTR [r8]
  404705:	sub    BYTE PTR [rdi+0x4e],al
  404708:	push   rbp
  404709:	sub    DWORD PTR [rax],esp
  40470b:	xor    al,0x2e
  40470d:	cmp    DWORD PTR [rsi],ebp
  40470f:	xor    al,0x0
	...
  40471d:	add    BYTE PTR [rax],al
  40471f:	add    BYTE PTR [rdi+0x43],al
  404722:	rex.XB cmp spl,BYTE PTR [r8]
  404725:	sub    BYTE PTR [rdi+0x4e],al
  404728:	push   rbp
  404729:	sub    DWORD PTR [rax],esp
  40472b:	xor    al,0x2e
  40472d:	cmp    DWORD PTR [rsi],ebp
  40472f:	xor    al,0x0
	...
  40473d:	add    BYTE PTR [rax],al
  40473f:	add    BYTE PTR [rdi+0x43],al
  404742:	rex.XB cmp spl,BYTE PTR [r8]
  404745:	sub    BYTE PTR [rdi+0x4e],al
  404748:	push   rbp
  404749:	sub    DWORD PTR [rax],esp
  40474b:	xor    al,0x2e
  40474d:	cmp    DWORD PTR [rsi],ebp
  40474f:	xor    al,0x0
	...
  40475d:	add    BYTE PTR [rax],al
  40475f:	add    BYTE PTR [rdi+0x43],al
  404762:	rex.XB cmp spl,BYTE PTR [r8]
  404765:	sub    BYTE PTR [rdi+0x4e],al
  404768:	push   rbp
  404769:	sub    DWORD PTR [rax],esp
  40476b:	xor    al,0x2e
  40476d:	cmp    DWORD PTR [rsi],ebp
  40476f:	xor    al,0x0
	...
  40477d:	add    BYTE PTR [rax],al
  40477f:	add    BYTE PTR [rdi+0x43],al
  404782:	rex.XB cmp spl,BYTE PTR [r8]
  404785:	sub    BYTE PTR [rdi+0x4e],al
  404788:	push   rbp
  404789:	sub    DWORD PTR [rax],esp
  40478b:	xor    al,0x2e
  40478d:	cmp    DWORD PTR [rsi],ebp
  40478f:	xor    al,0x0
	...
  40479d:	add    BYTE PTR [rax],al
  40479f:	add    BYTE PTR [rdi+0x43],al
  4047a2:	rex.XB cmp spl,BYTE PTR [r8]
  4047a5:	sub    BYTE PTR [rdi+0x4e],al
  4047a8:	push   rbp
  4047a9:	sub    DWORD PTR [rax],esp
  4047ab:	xor    al,0x2e
  4047ad:	cmp    DWORD PTR [rsi],ebp
  4047af:	xor    al,0x0
	...
  4047bd:	add    BYTE PTR [rax],al
  4047bf:	add    BYTE PTR [rdi+0x43],al
  4047c2:	rex.XB cmp spl,BYTE PTR [r8]
  4047c5:	sub    BYTE PTR [rdi+0x4e],al
  4047c8:	push   rbp
  4047c9:	sub    DWORD PTR [rax],esp
  4047cb:	xor    al,0x2e
  4047cd:	cmp    DWORD PTR [rsi],ebp
  4047cf:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000405000 <.pdata>:
  405000:	add    BYTE PTR [rax],dl
  405002:	add    BYTE PTR [rax],al
  405004:	add    DWORD PTR [rax],edx
  405006:	add    BYTE PTR [rax],al
  405008:	add    BYTE PTR [rax+0x0],ah
  40500b:	add    BYTE PTR [rax],dl
  40500d:	adc    BYTE PTR [rax],al
  40500f:	add    BYTE PTR [rcx+0x11],dl
  405012:	add    BYTE PTR [rax],al
  405014:	add    al,0x60
  405016:	add    BYTE PTR [rax],al
  405018:	(bad)  
  405019:	adc    DWORD PTR [rax],eax
  40501b:	add    BYTE PTR [rsi+0xc000011],ch
  405021:	(bad)  
  405022:	add    BYTE PTR [rax],al
  405024:	mov    al,0x11
  405026:	add    BYTE PTR [rax],al
  405028:	(bad)  
  405029:	adc    al,0x0
  40502b:	add    BYTE PTR [rax+riz*2],dl
  40502e:	add    BYTE PTR [rax],al
  405030:	rcl    BYTE PTR [rax+rax*1],1
  405033:	add    dl,dh
  405035:	adc    al,0x0
  405037:	add    BYTE PTR [rax],ch
  405039:	(bad)  
  40503a:	add    BYTE PTR [rax],al
  40503c:	add    BYTE PTR [rip+0x15220000],dl        # 0x15625042
  405042:	add    BYTE PTR [rax],al
  405044:	rex.W (bad) 
  405046:	add    BYTE PTR [rax],al
  405048:	xor    BYTE PTR [rip+0x15710000],dl        # 0x15b1504e
  40504e:	add    BYTE PTR [rax],al
  405050:	push   0x71000060
  405055:	adc    eax,0x15b60000
  40505a:	add    BYTE PTR [rax],al
  40505c:	je     0x4050be
  40505e:	add    BYTE PTR [rax],al
  405060:	mov    dh,0x15
  405062:	add    BYTE PTR [rax],al
  405064:	or     al,0x16
  405066:	add    BYTE PTR [rax],al
  405068:	and    BYTE PTR [rax+0x0],0x0
  40506c:	xor    BYTE PTR [rsi],dl
  40506e:	add    BYTE PTR [rax],al
  405070:	xlat   BYTE PTR ds:[rbx]
  405071:	(bad)  
  405072:	add    BYTE PTR [rax],al
  405074:	mov    WORD PTR [rax+0x0],fs
  405077:	add    al,ah
  405079:	(bad)  
  40507a:	add    BYTE PTR [rax],al
  40507c:	stc    
  40507d:	(bad)  
  40507e:	add    BYTE PTR [rax],al
  405080:	xchg   esp,eax
  405081:	(bad)  
  405082:	add    BYTE PTR [rax],al
  405084:	add    BYTE PTR [rdi],dl
  405086:	add    BYTE PTR [rax],al
  405088:	xor    eax,0x9c000017
  40508d:	(bad)  
  40508e:	add    BYTE PTR [rax],al
  405090:	rex (bad) 
  405092:	add    BYTE PTR [rax],al
  405094:	xchg   ebp,eax
  405095:	(bad)  
  405096:	add    BYTE PTR [rax],al
  405098:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  405099:	(bad)  
  40509a:	add    BYTE PTR [rax],al
  40509c:	movabs al,ds:0xb0000017bc000017
  4050a5:	(bad)  
  4050a6:	add    BYTE PTR [rax],al
  4050a8:	rcl    BYTE PTR [rdi],0x0
  4050ab:	add    dl,cl
  4050ad:	(bad)  
  4050ae:	add    BYTE PTR [rax],al
  4050b0:	mov    ah,0x60
  4050b2:	add    BYTE PTR [rax],al
  4050b4:	rcl    BYTE PTR [rdi],1
  4050b6:	add    BYTE PTR [rax],al
  4050b8:	rcl    DWORD PTR [rdi],cl
  4050ba:	add    BYTE PTR [rax],al
  4050bc:	mov    eax,0xe0000060
  4050c1:	(bad)  
  4050c2:	add    BYTE PTR [rax],al
  4050c4:	mov    dh,0x18
  4050c6:	add    BYTE PTR [rax],al
  4050c8:	mov    esp,0xc0000060
  4050cd:	sbb    BYTE PTR [rax],al
  4050cf:	add    BYTE PTR [rbx-0x33ffffe7],bh
  4050d5:	(bad)  
  4050d6:	add    BYTE PTR [rax],al
  4050d8:	rcr    BYTE PTR [rcx],0x0
  4050db:	add    bh,ch
  4050dd:	sbb    DWORD PTR [rax],eax
  4050df:	add    ah,bl
  4050e1:	(bad)  
  4050e2:	add    BYTE PTR [rax],al
  4050e4:	lock sbb DWORD PTR [rax],eax
  4050e7:	add    BYTE PTR [rcx+0x1a],bl
  4050ea:	add    BYTE PTR [rax],al
  4050ec:	in     al,0x60
  4050ee:	add    BYTE PTR [rax],al
  4050f0:	(bad)  
  4050f1:	sbb    al,BYTE PTR [rax]
  4050f3:	add    BYTE PTR [rbx+0x1a],ah
  4050f6:	add    BYTE PTR [rax],al
  4050f8:	lock (bad) 
  4050fa:	add    BYTE PTR [rax],al
  4050fc:	jo     0x405118
  4050fe:	add    BYTE PTR [rax],al
  405100:	mov    cl,0x1a
  405102:	add    BYTE PTR [rax],al
  405104:	hlt    
  405105:	(bad)  
  405106:	add    BYTE PTR [rax],al
  405108:	rcr    BYTE PTR [rdx],0x0
  40510b:	add    ah,cl
  40510d:	sbb    al,BYTE PTR [rax]
  40510f:	add    ah,bh
  405111:	(bad)  
  405112:	add    BYTE PTR [rax],al
  405114:	rcr    BYTE PTR [rdx],1
  405116:	add    BYTE PTR [rax],al
  405118:	int3   
  405119:	sbb    eax,DWORD PTR [rax]
  40511b:	add    BYTE PTR [rax],al
  40511d:	(bad)  
  40511e:	add    BYTE PTR [rax],al
  405120:	rcr    BYTE PTR [rbx],1
  405122:	add    BYTE PTR [rax],al
  405124:	rcr    DWORD PTR [rbx],cl
  405126:	add    BYTE PTR [rax],al
  405128:	sbb    BYTE PTR [rcx+0x0],ah
  40512b:	add    al,ah
  40512d:	sbb    eax,DWORD PTR [rax]
  40512f:	add    ah,ah
  405131:	sbb    eax,DWORD PTR [rax]
  405133:	add    BYTE PTR [rcx+riz*2],bl
  405136:	add    BYTE PTR [rax],al
  405138:	lock sbb eax,DWORD PTR [rax]
  40513b:	add    ah,dh
  40513d:	sbb    eax,DWORD PTR [rax]
  40513f:	add    BYTE PTR [rax],ah
  405141:	(bad)  
  405142:	add    BYTE PTR [rax],al
  405144:	add    BYTE PTR [rax+rax*1],bl
  405147:	add    BYTE PTR [rcx+0x1c],ah
  40514a:	add    BYTE PTR [rax],al
  40514c:	and    al,0x61
  40514e:	add    BYTE PTR [rax],al
  405150:	jo     0x40516e
  405152:	add    BYTE PTR [rax],al
  405154:	rcr    BYTE PTR [rip+0x61300000],cl        # 0x6170515a
  40515a:	add    BYTE PTR [rax],al
  40515c:	loopne 0x40517b
  40515e:	add    BYTE PTR [rax],al
  405160:	fldenv [rax]
  405162:	add    BYTE PTR [rax],al
  405164:	rex.R (bad) 
  405166:	add    BYTE PTR [rax],al
  405168:	loopne 0x40518a
  40516a:	add    BYTE PTR [rax],al
  40516c:	xchg   BYTE PTR [rdx],ah
  40516e:	add    BYTE PTR [rax],al
  405170:	pop    rsp
  405171:	(bad)  
  405172:	add    BYTE PTR [rax],al
  405174:	nop
  405175:	and    al,BYTE PTR [rax]
  405177:	add    BYTE PTR [rbx+riz*1+0x0],bh
  40517b:	add    BYTE PTR [rcx+riz*2+0x0],ah
  40517f:	add    BYTE PTR [rax+0x38000023],al
  405185:	and    eax,0x61740000
  40518a:	add    BYTE PTR [rax],al
  40518c:	rex and eax,0x25ad0000
  405192:	add    BYTE PTR [rax],al
  405194:	jl     0x4051f7
  405196:	add    BYTE PTR [rax],al
  405198:	mov    al,0x25
  40519a:	add    BYTE PTR [rax],al
  40519c:	(bad)  
  40519d:	add    BYTE PTR es:[rax],al
  4051a0:	mov    WORD PTR [rcx+0x0],fs
  4051a3:	add    BYTE PTR [rax],dh
  4051a5:	add    BYTE PTR es:[rax],al
  4051a8:	iret   
  4051a9:	add    BYTE PTR es:[rax],al
  4051ac:	cwde   
  4051ad:	(bad)  
  4051ae:	add    BYTE PTR [rax],al
  4051b0:	shl    BYTE PTR [rsi],1
  4051b2:	add    BYTE PTR [rax],al
  4051b4:	stos   BYTE PTR es:[rdi],al
  4051b5:	(bad)  
  4051b6:	add    BYTE PTR [rax],al
  4051b8:	movabs al,ds:0xcf000027b0000061
  4051c1:	(bad)  
  4051c2:	add    BYTE PTR [rax],al
  4051c4:	test   al,0x61
  4051c6:	add    BYTE PTR [rax],al
  4051c8:	shl    BYTE PTR [rdi],1
  4051ca:	add    BYTE PTR [rax],al
  4051cc:	loop   0x4051f5
  4051ce:	add    BYTE PTR [rax],al
  4051d0:	lods   al,BYTE PTR ds:[rsi]
  4051d1:	(bad)  
  4051d2:	add    BYTE PTR [rax],al
  4051d4:	lock (bad) 
  4051d6:	add    BYTE PTR [rax],al
  4051d8:	xor    eax,0xb0000028
  4051dd:	(bad)  
  4051de:	add    BYTE PTR [rax],al
  4051e0:	sub    BYTE PTR [rax],al
  4051e3:	add    dh,bl
  4051e5:	sub    BYTE PTR [rax],al
  4051e7:	add    BYTE PTR [rcx+riz*2+0x28e00000],dh
  4051ee:	add    BYTE PTR [rax],al
  4051f0:	and    ebp,DWORD PTR [rcx]
  4051f2:	add    BYTE PTR [rax],al
  4051f4:	shl    BYTE PTR [rcx+0x0],0x0
  4051f8:	xor    BYTE PTR [rcx],ch
  4051fa:	add    BYTE PTR [rax],al
  4051fc:	imul   ebp,DWORD PTR [rcx],0x0
  4051ff:	add    ah,cl
  405201:	(bad)  
  405202:	add    BYTE PTR [rax],al
  405204:	jo     0x40522f
  405206:	add    BYTE PTR [rax],al
  405208:	(bad)  
  405209:	sub    DWORD PTR [rax],eax
  40520b:	add    ah,dl
  40520d:	(bad)  
  40520e:	add    BYTE PTR [rax],al
  405210:	add    BYTE PTR [rdx],ch
  405212:	add    BYTE PTR [rax],al
  405214:	cmp    BYTE PTR [rdx],ch
  405216:	add    BYTE PTR [rax],al
  405218:	loopne 0x40527b
  40521a:	add    BYTE PTR [rax],al
  40521c:	sub    al,BYTE PTR [rax]
  40521f:	add    BYTE PTR [rbp-0x13ffffd6],dl
  405225:	(bad)  
  405226:	add    BYTE PTR [rax],al
  405228:	movabs al,ds:0xf800002b4e00002a
  405231:	(bad)  
  405232:	add    BYTE PTR [rax],al
  405234:	jo     0x405262
  405236:	add    BYTE PTR [rax],al
  405238:	js     0x405266
  40523a:	add    BYTE PTR [rax],al
  40523c:	or     BYTE PTR [rdx+0x0],ah
  40523f:	add    BYTE PTR [rax-0x74ffffd4],al
  405245:	sub    al,0x0
  405247:	add    BYTE PTR [rdx+riz*2],cl
	...

Disassembly of section .xdata:

0000000000406000 <.xdata>:
  406000:	add    DWORD PTR [rax],eax
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rcx+rax*1],eax
  406007:	add    BYTE PTR [rdx+rax*2],al
  40600a:	add    BYTE PTR [rax],al
  40600c:	add    DWORD PTR [rcx+rax*1],eax
  40600f:	add    BYTE PTR [rdx+riz*2],al
  406012:	add    BYTE PTR [rax],al
  406014:	add    DWORD PTR [rdi],ecx
  406016:	or     BYTE PTR [rax],al
  406018:	lgdt   [rbx]
  40601b:	add    BYTE PTR [rax],cl
  40601d:	xor    BYTE PTR [rdi],al
  40601f:	(bad)  
  406020:	(bad)  
  406021:	jo     0x406028
  406023:	push   rax
  406024:	add    al,0xc0
  406026:	add    dl,al
  406028:	or     DWORD PTR [rcx+rax*1],eax
  40602b:	add    BYTE PTR [rdx+rax*2],al
  40602e:	add    BYTE PTR [rax],al
  406030:	push   0x100002c
  406035:	add    BYTE PTR [rax],al
  406037:	add    ah,dl
  406039:	adc    al,0x0
  40603b:	add    ah,ch
  40603d:	adc    al,0x0
  40603f:	add    BYTE PTR [rax-0x13ffffdd],al
  406045:	adc    al,0x0
  406047:	add    BYTE PTR [rcx],cl
  406049:	add    al,0x1
  40604b:	add    BYTE PTR [rdx+rax*2],al
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0x100002c
  406055:	add    BYTE PTR [rax],al
  406057:	add    BYTE PTR [rdx*1+0x151c0000],al
  40605e:	add    BYTE PTR [rax],al
  406060:	and    BYTE PTR [rbx],0x0
  406063:	add    BYTE PTR [rdx*1+0x8010000],bl
  40606a:	add    eax,DWORD PTR [rip+0x3045208]        # 0x344b278
  406070:	add    DWORD PTR [rax+0x0],edx
  406073:	add    BYTE PTR [rcx],al
  406075:	or     BYTE PTR [rbx],al
  406077:	add    eax,0x3045208
  40607c:	add    DWORD PTR [rax+0x0],edx
  40607f:	add    BYTE PTR [rcx],al
  406081:	or     BYTE PTR [rbx],al
  406083:	add    eax,0x3045208
  406088:	add    DWORD PTR [rax+0x0],edx
  40608b:	add    BYTE PTR [rcx],al
  40608d:	add    eax,0x52050002
  406092:	add    DWORD PTR [rax],esi
  406094:	add    DWORD PTR [rcx+rax*1],eax
  406097:	add    BYTE PTR [rdx+rax*2],al
  40609a:	add    BYTE PTR [rax],al
  40609c:	add    DWORD PTR [rcx+rax*1],eax
  40609f:	add    BYTE PTR [rdx+rax*2],al
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	add    DWORD PTR [rsi],eax
  4060a6:	add    eax,DWORD PTR [rax]
  4060a8:	(bad)  
  4060a9:	rex.X add sil,BYTE PTR [rax]
  4060ac:	add    DWORD PTR [rax+0x0],esp
  4060af:	add    BYTE PTR [rcx],al
  4060b1:	add    BYTE PTR [rax],al
  4060b3:	add    BYTE PTR [rcx],al
  4060b5:	add    BYTE PTR [rax],al
  4060b7:	add    BYTE PTR [rcx],al
  4060b9:	add    BYTE PTR [rax],al
  4060bb:	add    BYTE PTR [rcx],al
  4060bd:	or     al,BYTE PTR [rsi]
  4060bf:	add    BYTE PTR [rdx],cl
  4060c1:	jb     0x4060c9
  4060c3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b06529
  4060c9:	push   rax
  4060ca:	add    al,al
  4060cc:	add    DWORD PTR [rdx],ecx
  4060ce:	add    eax,0x6d20a05
  4060d3:	add    eax,DWORD PTR [rbx]
  4060d5:	xor    BYTE PTR [rdx],al
  4060d7:	(bad)  
  4060d8:	add    DWORD PTR [rax+0x0],edx
  4060db:	add    BYTE PTR [rcx],al
  4060dd:	add    al,0x1
  4060df:	add    BYTE PTR [rdx+rax*2],al
  4060e2:	add    BYTE PTR [rax],al
  4060e4:	add    DWORD PTR [rsi],eax
  4060e6:	add    eax,DWORD PTR [rax]
  4060e8:	(bad)  
  4060e9:	rex.X add sil,BYTE PTR [rax]
  4060ec:	add    DWORD PTR [rax+0x0],esp
  4060ef:	add    BYTE PTR [rcx],al
  4060f1:	add    BYTE PTR [rax],al
  4060f3:	add    BYTE PTR [rcx],al
  4060f5:	add    al,0x1
  4060f7:	add    BYTE PTR [rdx+riz*4],al
  4060fa:	add    BYTE PTR [rax],al
  4060fc:	add    DWORD PTR [rax],eax
  4060fe:	add    BYTE PTR [rax],al
  406100:	add    DWORD PTR [rsi],edx
  406102:	or     DWORD PTR [rax],eax
  406104:	(bad)  
  406105:	mov    BYTE PTR [rsi],al
  406107:	add    BYTE PTR [rax],dl
  406109:	js     0x406110
  40610b:	add    BYTE PTR [rbx],cl
  40610d:	push   0xffffffffe2060004
  406112:	add    dh,BYTE PTR [rax]
  406114:	add    DWORD PTR [rax+0x0],esp
  406117:	add    BYTE PTR [rcx],al
  406119:	add    BYTE PTR [rax],al
  40611b:	add    BYTE PTR [rcx],al
  40611d:	add    BYTE PTR [rax],al
  40611f:	add    BYTE PTR [rcx],al
  406121:	add    BYTE PTR [rax],al
  406123:	add    BYTE PTR [rcx],al
  406125:	(bad)  
  406126:	add    eax,DWORD PTR [rax]
  406128:	(bad)  
  406129:	(bad)  
  40612b:	xor    BYTE PTR [rcx],al
  40612d:	(bad)  
  40612e:	add    BYTE PTR [rax],al
  406130:	add    DWORD PTR [rdi+rax*1],ecx
  406133:	add    BYTE PTR [rdx+riz*4],cl
  406136:	or     BYTE PTR [rax],dh
  406138:	(bad)  
  406139:	(bad)  
  40613a:	(bad)  
  40613b:	jo     0x406142
  40613d:	push   rax
  40613e:	add    al,0xc0
  406140:	add    dl,al
  406142:	add    BYTE PTR [rax],al
  406144:	add    DWORD PTR [rcx],edx
  406146:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e135d
  40614c:	or     dh,BYTE PTR [rax]
  40614e:	or     DWORD PTR [rax+0x8],esp
  406151:	jo     0x40615a
  406153:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220652a
  40615a:	add    BYTE PTR [rax],al
  40615c:	add    DWORD PTR [rcx+rax*1],eax
  40615f:	add    BYTE PTR [rdx+rax*2],al
  406162:	add    BYTE PTR [rax],al
  406164:	add    DWORD PTR [rdx],ecx
  406166:	(bad)  
  406167:	add    BYTE PTR [rdx],cl
  406169:	xor    al,BYTE PTR [rsi]
  40616b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b065d1
  406171:	push   rax
  406172:	add    al,al
  406174:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245617c
  40617a:	add    DWORD PTR [rax],esi
  40617c:	add    DWORD PTR [rax],ecx
  40617e:	add    eax,0x4420800
  406183:	xor    BYTE PTR [rbx],al
  406185:	(bad)  
  406186:	add    dh,BYTE PTR [rax+0x1]
  406189:	push   rax
  40618a:	add    BYTE PTR [rax],al
  40618c:	add    DWORD PTR [rdi],eax
  40618e:	add    al,0x0
  406190:	(bad)  
  406191:	xor    al,BYTE PTR [rbx]
  406193:	xor    BYTE PTR [rdx],al
  406195:	(bad)  
  406196:	add    DWORD PTR [rax+0x1],esi
  406199:	add    eax,0x32050002
  40619e:	add    DWORD PTR [rax],esi
  4061a0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324561a8
  4061a6:	add    DWORD PTR [rax],esi
  4061a8:	add    DWORD PTR [rax],eax
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	add    DWORD PTR [rax],eax
  4061ae:	add    BYTE PTR [rax],al
  4061b0:	add    DWORD PTR [rax],eax
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	add    DWORD PTR [rdi],eax
  4061b6:	add    al,0x0
  4061b8:	(bad)  
  4061b9:	xor    al,BYTE PTR [rbx]
  4061bb:	xor    BYTE PTR [rdx],al
  4061bd:	(bad)  
  4061be:	add    DWORD PTR [rax+0x1],esi
  4061c1:	(bad)  
  4061c2:	add    eax,DWORD PTR [rax]
  4061c4:	(bad)  
  4061c5:	rex.X add sil,BYTE PTR [rax]
  4061c8:	add    DWORD PTR [rax+0x0],esp
  4061cb:	add    BYTE PTR [rcx],al
  4061cd:	add    eax,0x32050002
  4061d2:	add    DWORD PTR [rax],esi
  4061d4:	add    DWORD PTR [rdi],eax
  4061d6:	add    al,0x0
  4061d8:	(bad)  
  4061d9:	xor    al,BYTE PTR [rbx]
  4061db:	xor    BYTE PTR [rdx],al
  4061dd:	(bad)  
  4061de:	add    DWORD PTR [rax+0x1],esi
  4061e1:	(bad)  
  4061e2:	add    eax,DWORD PTR [rax]
  4061e4:	(bad)  
  4061e5:	rex.X add sil,BYTE PTR [rax]
  4061e8:	add    DWORD PTR [rax+0x0],esp
  4061eb:	add    BYTE PTR [rcx],al
  4061ed:	(bad)  
  4061ee:	add    eax,DWORD PTR [rax]
  4061f0:	(bad)  
  4061f1:	rex.X add sil,BYTE PTR [rax]
  4061f4:	add    DWORD PTR [rax+0x0],esp
  4061f7:	add    BYTE PTR [rcx],al
  4061f9:	or     BYTE PTR [rip+0x4420800],al        # 0x48269ff
  4061ff:	xor    BYTE PTR [rbx],al
  406201:	(bad)  
  406202:	add    dh,BYTE PTR [rax+0x1]
  406205:	push   rax
  406206:	add    BYTE PTR [rax],al
  406208:	add    DWORD PTR [rax],eax
  40620a:	add    BYTE PTR [rax],al
  40620c:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000407000 <.bss>:
	...

Disassembly of section .idata:

0000000000408000 <.idata>:
  408000:	push   rax
  408001:	add    BYTE PTR [rax],0x0
	...
  40800c:	movabs al,ds:0x7000008230000087
  408015:	add    BYTE PTR [rax],0x0
	...
  408020:	or     al,0x88
  408022:	add    BYTE PTR [rax],al
  408024:	push   rax
  408025:	(bad)  
  408026:	add    BYTE PTR [rax],al
  408028:	xor    BYTE PTR [rcx+0x0],al
  40802e:	add    BYTE PTR [rax],al
  408030:	add    BYTE PTR [rax],al
  408032:	add    BYTE PTR [rax],al
  408034:	cwde   
  408035:	mov    BYTE PTR [rax],al
  408037:	add    BYTE PTR [rax],dl
  408039:	add    DWORD PTR [rax],0x0
	...
  408050:	adc    BYTE PTR [rax+rax*1+0x0],al
  408057:	add    BYTE PTR [rax],ah
  408059:	test   BYTE PTR [rax],al
  40805b:	add    BYTE PTR [rax],al
  40805d:	add    BYTE PTR [rax],al
  40805f:	add    BYTE PTR [rax],dh
  408061:	test   BYTE PTR [rax],al
	...
  40806f:	add    BYTE PTR [rax-0x7c],al
  408072:	add    BYTE PTR [rax],al
  408074:	add    BYTE PTR [rax],al
  408076:	add    BYTE PTR [rax],al
  408078:	pop    rax
  408079:	test   BYTE PTR [rax],al
  40807b:	add    BYTE PTR [rax],al
  40807d:	add    BYTE PTR [rax],al
  40807f:	add    BYTE PTR [rax-0x7c],dh
  408082:	add    BYTE PTR [rax],al
  408084:	add    BYTE PTR [rax],al
  408086:	add    BYTE PTR [rax],al
  408088:	test   BYTE PTR [rax+rax*1+0x0],al
  40808f:	add    BYTE PTR [rdx+0x84],bl
  408095:	add    BYTE PTR [rax],al
  408097:	add    BYTE PTR [rax+0x84],dh
  40809d:	add    BYTE PTR [rax],al
  40809f:	add    al,al
  4080a1:	test   BYTE PTR [rax],al
  4080a3:	add    BYTE PTR [rax],al
  4080a5:	add    BYTE PTR [rax],al
  4080a7:	add    dl,dl
  4080a9:	test   BYTE PTR [rax],al
  4080ab:	add    BYTE PTR [rax],al
  4080ad:	add    BYTE PTR [rax],al
  4080af:	add    ah,ch
  4080b1:	test   BYTE PTR [rax],al
  4080b3:	add    BYTE PTR [rax],al
  4080b5:	add    BYTE PTR [rax],al
  4080b7:	add    ah,bh
  4080b9:	test   BYTE PTR [rax],al
  4080bb:	add    BYTE PTR [rax],al
  4080bd:	add    BYTE PTR [rax],al
  4080bf:	add    BYTE PTR [rax],bl
  4080c1:	test   DWORD PTR [rax],eax
  4080c3:	add    BYTE PTR [rax],al
  4080c5:	add    BYTE PTR [rax],al
  4080c7:	add    BYTE PTR [rax],dh
  4080c9:	test   DWORD PTR [rax],eax
  4080cb:	add    BYTE PTR [rax],al
  4080cd:	add    BYTE PTR [rax],al
  4080cf:	add    BYTE PTR [rdx-0x7b],cl
  4080d2:	add    BYTE PTR [rax],al
  4080d4:	add    BYTE PTR [rax],al
  4080d6:	add    BYTE PTR [rax],al
  4080d8:	(bad)  
  4080d9:	test   DWORD PTR [rax],eax
  4080db:	add    BYTE PTR [rax],al
  4080dd:	add    BYTE PTR [rax],al
  4080df:	add    BYTE PTR [rbp+rax*4+0x0],dh
  4080e3:	add    BYTE PTR [rax],al
  4080e5:	add    BYTE PTR [rax],al
  4080e7:	add    BYTE PTR [rsi+0x85],cl
  4080ed:	add    BYTE PTR [rax],al
  4080ef:	add    BYTE PTR [rdx+0x85],ah
  4080f5:	add    BYTE PTR [rax],al
  4080f7:	add    al,al
  4080f9:	test   DWORD PTR [rax],eax
  4080fb:	add    BYTE PTR [rax],al
  4080fd:	add    BYTE PTR [rax],al
  4080ff:	add    al,cl
  408101:	test   DWORD PTR [rax],eax
  408103:	add    BYTE PTR [rax],al
  408105:	add    BYTE PTR [rax],al
  408107:	add    ah,bl
  408109:	test   DWORD PTR [rax],eax
  40810b:	add    BYTE PTR [rax],al
  40810d:	add    BYTE PTR [rax],al
  40810f:	add    dl,ch
  408111:	test   DWORD PTR [rax],eax
  408113:	add    BYTE PTR [rax],al
  408115:	add    BYTE PTR [rax],al
  408117:	add    BYTE PTR [rsi],al
  408119:	xchg   BYTE PTR [rax],al
  40811b:	add    BYTE PTR [rax],al
  40811d:	add    BYTE PTR [rax],al
  40811f:	add    BYTE PTR [rax],bl
  408121:	xchg   BYTE PTR [rax],al
	...
  40812f:	add    BYTE PTR [rax],ch
  408131:	xchg   BYTE PTR [rax],al
  408133:	add    BYTE PTR [rax],al
  408135:	add    BYTE PTR [rax],al
  408137:	add    BYTE PTR [rax-0x7a],al
  40813a:	add    BYTE PTR [rax],al
  40813c:	add    BYTE PTR [rax],al
  40813e:	add    BYTE PTR [rax],al
  408140:	rex.WRX xchg BYTE PTR [rax],r8b
  408143:	add    BYTE PTR [rax],al
  408145:	add    BYTE PTR [rax],al
  408147:	add    BYTE PTR [rsi-0x7a],bl
  40814a:	add    BYTE PTR [rax],al
  40814c:	add    BYTE PTR [rax],al
  40814e:	add    BYTE PTR [rax],al
  408150:	push   0xffffffffffffff86
  408152:	add    BYTE PTR [rax],al
  408154:	add    BYTE PTR [rax],al
  408156:	add    BYTE PTR [rax],al
  408158:	js     0x4080e0
  40815a:	add    BYTE PTR [rax],al
  40815c:	add    BYTE PTR [rax],al
  40815e:	add    BYTE PTR [rax],al
  408160:	mov    BYTE PTR [rsi+0x0],al
  408166:	add    BYTE PTR [rax],al
  408168:	(bad)  
  408169:	xchg   BYTE PTR [rax],al
  40816b:	add    BYTE PTR [rax],al
  40816d:	add    BYTE PTR [rax],al
  40816f:	add    BYTE PTR [rsi+0x86],ch
  408175:	add    BYTE PTR [rax],al
  408177:	add    BYTE PTR [rax+0x86],bh
  40817d:	add    BYTE PTR [rax],al
  40817f:	add    dh,al
  408181:	xchg   BYTE PTR [rax],al
  408183:	add    BYTE PTR [rax],al
  408185:	add    BYTE PTR [rax],al
  408187:	add    al,dl
  408189:	xchg   BYTE PTR [rax],al
  40818b:	add    BYTE PTR [rax],al
  40818d:	add    BYTE PTR [rax],al
  40818f:	add    dl,bl
  408191:	xchg   BYTE PTR [rax],al
  408193:	add    BYTE PTR [rax],al
  408195:	add    BYTE PTR [rax],al
  408197:	add    dh,ah
  408199:	xchg   BYTE PTR [rax],al
  40819b:	add    BYTE PTR [rax],al
  40819d:	add    BYTE PTR [rax],al
  40819f:	add    dh,ch
  4081a1:	xchg   BYTE PTR [rax],al
  4081a3:	add    BYTE PTR [rax],al
  4081a5:	add    BYTE PTR [rax],al
  4081a7:	add    al,bh
  4081a9:	xchg   BYTE PTR [rax],al
  4081ab:	add    BYTE PTR [rax],al
  4081ad:	add    BYTE PTR [rax],al
  4081af:	add    BYTE PTR [rdx],al
  4081b1:	xchg   DWORD PTR [rax],eax
  4081b3:	add    BYTE PTR [rax],al
  4081b5:	add    BYTE PTR [rax],al
  4081b7:	add    BYTE PTR [rdx],cl
  4081b9:	xchg   DWORD PTR [rax],eax
  4081bb:	add    BYTE PTR [rax],al
  4081bd:	add    BYTE PTR [rax],al
  4081bf:	add    BYTE PTR [rdi+rax*4],dl
  4081c2:	add    BYTE PTR [rax],al
  4081c4:	add    BYTE PTR [rax],al
  4081c6:	add    BYTE PTR [rax],al
  4081c8:	sbb    al,0x87
  4081ca:	add    BYTE PTR [rax],al
  4081cc:	add    BYTE PTR [rax],al
  4081ce:	add    BYTE PTR [rax],al
  4081d0:	xchg   DWORD PTR es:[rax],eax
  4081d3:	add    BYTE PTR [rax],al
  4081d5:	add    BYTE PTR [rax],al
  4081d7:	add    BYTE PTR [rsi],ch
  4081d9:	xchg   DWORD PTR [rax],eax
  4081db:	add    BYTE PTR [rax],al
  4081dd:	add    BYTE PTR [rax],al
  4081df:	add    BYTE PTR [rax],bh
  4081e1:	xchg   DWORD PTR [rax],eax
  4081e3:	add    BYTE PTR [rax],al
  4081e5:	add    BYTE PTR [rax],al
  4081e7:	add    BYTE PTR [rdx-0x79],al
  4081ea:	add    BYTE PTR [rax],al
  4081ec:	add    BYTE PTR [rax],al
  4081ee:	add    BYTE PTR [rax],al
  4081f0:	xchg   QWORD PTR [rax],r8
  4081f3:	add    BYTE PTR [rax],al
  4081f5:	add    BYTE PTR [rax],al
  4081f7:	add    BYTE PTR [rsi-0x79],dl
  4081fa:	add    BYTE PTR [rax],al
  4081fc:	add    BYTE PTR [rax],al
  4081fe:	add    BYTE PTR [rax],al
  408200:	(bad)  
  408201:	xchg   DWORD PTR [rax],eax
  408203:	add    BYTE PTR [rax],al
  408205:	add    BYTE PTR [rax],al
  408207:	add    BYTE PTR [rdx-0x79],ch
  40820a:	add    BYTE PTR [rax],al
  40820c:	add    BYTE PTR [rax],al
  40820e:	add    BYTE PTR [rax],al
  408210:	je     0x408199
  408212:	add    BYTE PTR [rax],al
  408214:	add    BYTE PTR [rax],al
  408216:	add    BYTE PTR [rax],al
  408218:	jle    0x4081a1
  40821a:	add    BYTE PTR [rax],al
  40821c:	add    BYTE PTR [rax],al
  40821e:	add    BYTE PTR [rax],al
  408220:	mov    al,BYTE PTR [rdi+0x0]
	...
  40822e:	add    BYTE PTR [rax],al
  408230:	adc    BYTE PTR [rax+rax*1+0x0],al
  408237:	add    BYTE PTR [rax],ah
  408239:	test   BYTE PTR [rax],al
  40823b:	add    BYTE PTR [rax],al
  40823d:	add    BYTE PTR [rax],al
  40823f:	add    BYTE PTR [rax],dh
  408241:	test   BYTE PTR [rax],al
	...
  40824f:	add    BYTE PTR [rax-0x7c],al
  408252:	add    BYTE PTR [rax],al
  408254:	add    BYTE PTR [rax],al
  408256:	add    BYTE PTR [rax],al
  408258:	pop    rax
  408259:	test   BYTE PTR [rax],al
  40825b:	add    BYTE PTR [rax],al
  40825d:	add    BYTE PTR [rax],al
  40825f:	add    BYTE PTR [rax-0x7c],dh
  408262:	add    BYTE PTR [rax],al
  408264:	add    BYTE PTR [rax],al
  408266:	add    BYTE PTR [rax],al
  408268:	test   BYTE PTR [rax+rax*1+0x0],al
  40826f:	add    BYTE PTR [rdx+0x84],bl
  408275:	add    BYTE PTR [rax],al
  408277:	add    BYTE PTR [rax+0x84],dh
  40827d:	add    BYTE PTR [rax],al
  40827f:	add    al,al
  408281:	test   BYTE PTR [rax],al
  408283:	add    BYTE PTR [rax],al
  408285:	add    BYTE PTR [rax],al
  408287:	add    dl,dl
  408289:	test   BYTE PTR [rax],al
  40828b:	add    BYTE PTR [rax],al
  40828d:	add    BYTE PTR [rax],al
  40828f:	add    ah,ch
  408291:	test   BYTE PTR [rax],al
  408293:	add    BYTE PTR [rax],al
  408295:	add    BYTE PTR [rax],al
  408297:	add    ah,bh
  408299:	test   BYTE PTR [rax],al
  40829b:	add    BYTE PTR [rax],al
  40829d:	add    BYTE PTR [rax],al
  40829f:	add    BYTE PTR [rax],bl
  4082a1:	test   DWORD PTR [rax],eax
  4082a3:	add    BYTE PTR [rax],al
  4082a5:	add    BYTE PTR [rax],al
  4082a7:	add    BYTE PTR [rax],dh
  4082a9:	test   DWORD PTR [rax],eax
  4082ab:	add    BYTE PTR [rax],al
  4082ad:	add    BYTE PTR [rax],al
  4082af:	add    BYTE PTR [rdx-0x7b],cl
  4082b2:	add    BYTE PTR [rax],al
  4082b4:	add    BYTE PTR [rax],al
  4082b6:	add    BYTE PTR [rax],al
  4082b8:	(bad)  
  4082b9:	test   DWORD PTR [rax],eax
  4082bb:	add    BYTE PTR [rax],al
  4082bd:	add    BYTE PTR [rax],al
  4082bf:	add    BYTE PTR [rbp+rax*4+0x0],dh
  4082c3:	add    BYTE PTR [rax],al
  4082c5:	add    BYTE PTR [rax],al
  4082c7:	add    BYTE PTR [rsi+0x85],cl
  4082cd:	add    BYTE PTR [rax],al
  4082cf:	add    BYTE PTR [rdx+0x85],ah
  4082d5:	add    BYTE PTR [rax],al
  4082d7:	add    al,al
  4082d9:	test   DWORD PTR [rax],eax
  4082db:	add    BYTE PTR [rax],al
  4082dd:	add    BYTE PTR [rax],al
  4082df:	add    al,cl
  4082e1:	test   DWORD PTR [rax],eax
  4082e3:	add    BYTE PTR [rax],al
  4082e5:	add    BYTE PTR [rax],al
  4082e7:	add    ah,bl
  4082e9:	test   DWORD PTR [rax],eax
  4082eb:	add    BYTE PTR [rax],al
  4082ed:	add    BYTE PTR [rax],al
  4082ef:	add    dl,ch
  4082f1:	test   DWORD PTR [rax],eax
  4082f3:	add    BYTE PTR [rax],al
  4082f5:	add    BYTE PTR [rax],al
  4082f7:	add    BYTE PTR [rsi],al
  4082f9:	xchg   BYTE PTR [rax],al
  4082fb:	add    BYTE PTR [rax],al
  4082fd:	add    BYTE PTR [rax],al
  4082ff:	add    BYTE PTR [rax],bl
  408301:	xchg   BYTE PTR [rax],al
	...
  40830f:	add    BYTE PTR [rax],ch
  408311:	xchg   BYTE PTR [rax],al
  408313:	add    BYTE PTR [rax],al
  408315:	add    BYTE PTR [rax],al
  408317:	add    BYTE PTR [rax-0x7a],al
  40831a:	add    BYTE PTR [rax],al
  40831c:	add    BYTE PTR [rax],al
  40831e:	add    BYTE PTR [rax],al
  408320:	rex.WRX xchg BYTE PTR [rax],r8b
  408323:	add    BYTE PTR [rax],al
  408325:	add    BYTE PTR [rax],al
  408327:	add    BYTE PTR [rsi-0x7a],bl
  40832a:	add    BYTE PTR [rax],al
  40832c:	add    BYTE PTR [rax],al
  40832e:	add    BYTE PTR [rax],al
  408330:	push   0xffffffffffffff86
  408332:	add    BYTE PTR [rax],al
  408334:	add    BYTE PTR [rax],al
  408336:	add    BYTE PTR [rax],al
  408338:	js     0x4082c0
  40833a:	add    BYTE PTR [rax],al
  40833c:	add    BYTE PTR [rax],al
  40833e:	add    BYTE PTR [rax],al
  408340:	mov    BYTE PTR [rsi+0x0],al
  408346:	add    BYTE PTR [rax],al
  408348:	(bad)  
  408349:	xchg   BYTE PTR [rax],al
  40834b:	add    BYTE PTR [rax],al
  40834d:	add    BYTE PTR [rax],al
  40834f:	add    BYTE PTR [rsi+0x86],ch
  408355:	add    BYTE PTR [rax],al
  408357:	add    BYTE PTR [rax+0x86],bh
  40835d:	add    BYTE PTR [rax],al
  40835f:	add    dh,al
  408361:	xchg   BYTE PTR [rax],al
  408363:	add    BYTE PTR [rax],al
  408365:	add    BYTE PTR [rax],al
  408367:	add    al,dl
  408369:	xchg   BYTE PTR [rax],al
  40836b:	add    BYTE PTR [rax],al
  40836d:	add    BYTE PTR [rax],al
  40836f:	add    dl,bl
  408371:	xchg   BYTE PTR [rax],al
  408373:	add    BYTE PTR [rax],al
  408375:	add    BYTE PTR [rax],al
  408377:	add    dh,ah
  408379:	xchg   BYTE PTR [rax],al
  40837b:	add    BYTE PTR [rax],al
  40837d:	add    BYTE PTR [rax],al
  40837f:	add    dh,ch
  408381:	xchg   BYTE PTR [rax],al
  408383:	add    BYTE PTR [rax],al
  408385:	add    BYTE PTR [rax],al
  408387:	add    al,bh
  408389:	xchg   BYTE PTR [rax],al
  40838b:	add    BYTE PTR [rax],al
  40838d:	add    BYTE PTR [rax],al
  40838f:	add    BYTE PTR [rdx],al
  408391:	xchg   DWORD PTR [rax],eax
  408393:	add    BYTE PTR [rax],al
  408395:	add    BYTE PTR [rax],al
  408397:	add    BYTE PTR [rdx],cl
  408399:	xchg   DWORD PTR [rax],eax
  40839b:	add    BYTE PTR [rax],al
  40839d:	add    BYTE PTR [rax],al
  40839f:	add    BYTE PTR [rdi+rax*4],dl
  4083a2:	add    BYTE PTR [rax],al
  4083a4:	add    BYTE PTR [rax],al
  4083a6:	add    BYTE PTR [rax],al
  4083a8:	sbb    al,0x87
  4083aa:	add    BYTE PTR [rax],al
  4083ac:	add    BYTE PTR [rax],al
  4083ae:	add    BYTE PTR [rax],al
  4083b0:	xchg   DWORD PTR es:[rax],eax
  4083b3:	add    BYTE PTR [rax],al
  4083b5:	add    BYTE PTR [rax],al
  4083b7:	add    BYTE PTR [rsi],ch
  4083b9:	xchg   DWORD PTR [rax],eax
  4083bb:	add    BYTE PTR [rax],al
  4083bd:	add    BYTE PTR [rax],al
  4083bf:	add    BYTE PTR [rax],bh
  4083c1:	xchg   DWORD PTR [rax],eax
  4083c3:	add    BYTE PTR [rax],al
  4083c5:	add    BYTE PTR [rax],al
  4083c7:	add    BYTE PTR [rdx-0x79],al
  4083ca:	add    BYTE PTR [rax],al
  4083cc:	add    BYTE PTR [rax],al
  4083ce:	add    BYTE PTR [rax],al
  4083d0:	xchg   QWORD PTR [rax],r8
  4083d3:	add    BYTE PTR [rax],al
  4083d5:	add    BYTE PTR [rax],al
  4083d7:	add    BYTE PTR [rsi-0x79],dl
  4083da:	add    BYTE PTR [rax],al
  4083dc:	add    BYTE PTR [rax],al
  4083de:	add    BYTE PTR [rax],al
  4083e0:	(bad)  
  4083e1:	xchg   DWORD PTR [rax],eax
  4083e3:	add    BYTE PTR [rax],al
  4083e5:	add    BYTE PTR [rax],al
  4083e7:	add    BYTE PTR [rdx-0x79],ch
  4083ea:	add    BYTE PTR [rax],al
  4083ec:	add    BYTE PTR [rax],al
  4083ee:	add    BYTE PTR [rax],al
  4083f0:	je     0x408379
  4083f2:	add    BYTE PTR [rax],al
  4083f4:	add    BYTE PTR [rax],al
  4083f6:	add    BYTE PTR [rax],al
  4083f8:	jle    0x408381
  4083fa:	add    BYTE PTR [rax],al
  4083fc:	add    BYTE PTR [rax],al
  4083fe:	add    BYTE PTR [rax],al
  408400:	mov    al,BYTE PTR [rdi+0x0]
	...
  40840e:	add    BYTE PTR [rax],al
  408410:	push   rsp
  408411:	add    DWORD PTR [rdi+0x45],eax
  408414:	rex.WRXB push r11
  408416:	jbe    0x40847d
  408418:	jb     0x40848d
  40841a:	imul   ebp,DWORD PTR [rdi+0x6e],0xb4000000
  408421:	add    DWORD PTR [rsi+0x69],esp
  408424:	outs   dx,BYTE PTR ds:[rsi]
  408425:	imul   esi,DWORD PTR [rbx+0x68],0x534f4547
  40842c:	pop    rdi
  40842d:	jb     0x40842f
  40842f:	add    BYTE PTR [rdi+0x696e6901],dh
  408435:	je     0x40847e
  408437:	rex.RB
  408438:	rex.WRXB push r11
  40843a:	pop    rdi
  40843b:	jb     0x40843d
  40843d:	add    BYTE PTR [rax],al
  40843f:	add    al,bl
  408441:	add    BYTE PTR [rbp+riz*2+0x6c],al
  408445:	gs je  0x4084ad
  408448:	rex.XB jb 0x4084b4
  40844b:	je     0x4084b6
  40844d:	movsxd esp,DWORD PTR [rcx+0x6c]
  408450:	push   rbx
  408451:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  408456:	outs   dx,BYTE PTR ds:[rsi]
  408457:	add    al,bh
  408459:	add    BYTE PTR [rbp+0x6e],al
  40845c:	je     0x4084c3
  40845e:	jb     0x4084a3
  408460:	jb     0x4084cb
  408462:	je     0x4084cd
  408464:	movsxd esp,DWORD PTR [rcx+0x6c]
  408467:	push   rbx
  408468:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40846d:	outs   dx,BYTE PTR ds:[rsi]
  40846e:	add    BYTE PTR [rax],al
  408470:	int    0x1
  408472:	rex.RXB
  408473:	gs je  0x4084b9
  408476:	jne    0x4084ea
  408478:	jb     0x4084df
  40847a:	outs   dx,BYTE PTR ds:[rsi]
  40847b:	je     0x4084cd
  40847d:	jb     0x4084ee
  40847f:	movsxd esp,DWORD PTR [rbp+0x73]
  408482:	jae    0x408484
  408484:	(bad)  
  408485:	add    DWORD PTR [rdi+0x65],eax
  408488:	je     0x4084cd
  40848a:	jne    0x4084fe
  40848c:	jb     0x4084f3
  40848e:	outs   dx,BYTE PTR ds:[rsi]
  40848f:	je     0x4084e1
  408491:	jb     0x408502
  408493:	movsxd esp,DWORD PTR [rbp+0x73]
  408496:	jae    0x4084e1
  408498:	fs add dl,dl
  40849b:	add    DWORD PTR [rdi+0x65],eax
  40849e:	je     0x4084e3
  4084a0:	jne    0x408514
  4084a2:	jb     0x408509
  4084a4:	outs   dx,BYTE PTR ds:[rsi]
  4084a5:	je     0x4084fb
  4084a7:	push   0x64616572
  4084ac:	rex.WB
  4084ad:	add    BYTE PTR fs:[rax],al
  4084b0:	adc    BYTE PTR [rdx],al
  4084b2:	rex.RXB
  4084b3:	gs je  0x408502
  4084b6:	(bad)  
  4084b7:	jae    0x40852d
  4084b9:	rex.RB jb 0x40852e
  4084bc:	outs   dx,DWORD PTR ds:[rsi]
  4084bd:	jb     0x4084bf
  4084bf:	add    BYTE PTR [rbx+0x2],dh
  4084c2:	rex.RXB
  4084c3:	gs je  0x408519
  4084c6:	je     0x408529
  4084c8:	jb     0x40853e
  4084ca:	jne    0x40853c
  4084cc:	rex.WB outs dx,BYTE PTR ds:[rsi]
  4084ce:	outs   dx,WORD PTR ds:[rsi]
  4084d0:	add    BYTE PTR [r10+0x74654702],cl
  4084d7:	push   rbx
  4084d8:	jns    0x40854d
  4084da:	je     0x408541
  4084dc:	ins    DWORD PTR es:[rdi],dx
  4084dd:	push   rsp
  4084de:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4084e5:	ins    BYTE PTR es:[rdi],dx
  4084e6:	gs push rsp
  4084e8:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4084ef:	gs je  0x408546
  4084f2:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4084f9:	je     0x4084fb
  4084fb:	add    cl,bh
  4084fd:	add    cl,BYTE PTR [rcx+0x6e]
  408500:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  408508:	rex.XB jb 0x408574
  40850b:	je     0x408576
  40850d:	movsxd esp,DWORD PTR [rcx+0x6c]
  408510:	push   rbx
  408511:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  408516:	outs   dx,BYTE PTR ds:[rsi]
  408517:	add    BYTE PTR [rbx+0x3],cl
  40851a:	rex.WR
  40851b:	gs (bad) 
  40851d:	jbe    0x408584
  40851f:	rex.XB jb 0x40858b
  408522:	je     0x40858d
  408524:	movsxd esp,DWORD PTR [rcx+0x6c]
  408527:	push   rbx
  408528:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  40852d:	outs   dx,BYTE PTR ds:[rsi]
  40852e:	add    BYTE PTR [rax],al
  408530:	mov    ebx,0x65755103
  408535:	jb     0x4085b0
  408537:	push   rax
  408538:	gs jb  0x4085a1
  40853b:	outs   dx,DWORD PTR ds:[rsi]
  40853c:	jb     0x4085ab
  40853e:	(bad)  
  40853f:	outs   dx,BYTE PTR ds:[rsi]
  408540:	movsxd esp,DWORD PTR [rbp+0x43]
  408543:	outs   dx,DWORD PTR ds:[rsi]
  408544:	jne    0x4085b4
  408546:	je     0x4085ad
  408548:	jb     0x40854a
  40854a:	add    DWORD PTR [rdx+rdx*2],eax
  40854d:	je     0x4085bb
  40854f:	rex.B
  408550:	fs fs rex.RX jne 0x4085c3
  408555:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  408559:	outs   dx,BYTE PTR ds:[rsi]
  40855a:	push   rsp
  40855b:	(bad)  
  40855c:	(bad)  
  40855d:	ins    BYTE PTR es:[rdi],dx
  40855e:	add    BYTE PTR gs:[rdx],al
  408561:	add    al,0x52
  408563:	je     0x4085d1
  408565:	rex.XB (bad) 
  408567:	jo     0x4085dd
  408569:	jne    0x4085dd
  40856b:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40856e:	outs   dx,BYTE PTR ds:[rsi]
  40856f:	je     0x4085d6
  408571:	js     0x4085e7
  408573:	add    BYTE PTR [rcx],cl
  408575:	add    al,0x52
  408577:	je     0x4085e5
  408579:	rex.WR outs dx,DWORD PTR ds:[rsi]
  40857b:	outs   dx,DWORD PTR ds:[rsi]
  40857c:	imul   esi,DWORD PTR [rbp+0x70],0x46
  408580:	jne    0x4085f0
  408582:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  408586:	outs   dx,BYTE PTR ds:[rsi]
  408587:	rex.RB outs dx,BYTE PTR ds:[rsi]
  408589:	je     0x4085fd
  40858b:	jns    0x40858d
  40858d:	add    BYTE PTR [rax],dl
  40858f:	add    al,0x52
  408591:	je     0x4085ff
  408593:	push   rsi
  408594:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  40859b:	outs   dx,BYTE PTR ds:[rsi]
  40859c:	ja     0x408607
  40859e:	outs   dx,BYTE PTR ds:[rsi]
  40859f:	add    BYTE PTR fs:[rax],al
  4085a2:	lahf   
  4085a3:	add    al,0x53
  4085a5:	gs je  0x4085fd
  4085a8:	outs   dx,BYTE PTR ds:[rsi]
  4085a9:	push   0x6c646e61
  4085ae:	gs fs rex.RB js 0x408616
  4085b3:	gs jo  0x40862a
  4085b6:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4085bd:	gs jb  0x4085c0
  4085c0:	lods   al,BYTE PTR ds:[rsi]
  4085c1:	add    al,0x53
  4085c3:	ins    BYTE PTR es:[rdi],dx
  4085c4:	gs gs jo 0x4085c8
  4085c8:	mov    edx,0x72655404
  4085cd:	ins    DWORD PTR es:[rdi],dx
  4085ce:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4085d5:	outs   dx,DWORD PTR ds:[rsi]
  4085d6:	movsxd esp,DWORD PTR [rbp+0x73]
  4085d9:	jae    0x4085db
  4085db:	add    cl,al
  4085dd:	add    al,0x54
  4085df:	ins    BYTE PTR es:[rdi],dx
  4085e0:	jae    0x408629
  4085e2:	gs je  0x40863b
  4085e5:	(bad)  
  4085e6:	ins    BYTE PTR es:[rdi],dx
  4085e7:	jne    0x40864e
  4085e9:	add    dh,cl
  4085eb:	add    al,0x55
  4085ed:	outs   dx,BYTE PTR ds:[rsi]
  4085ee:	push   0x6c646e61
  4085f3:	gs fs rex.RB js 0x40865b
  4085f8:	gs jo  0x40866f
  4085fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  408602:	gs jb  0x408605
  408605:	add    ah,ch
  408607:	add    al,0x56
  408609:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  408610:	jb     0x408681
  408612:	je     0x408679
  408614:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  408618:	out    dx,al
  408619:	add    al,0x56
  40861b:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  408622:	jne    0x408689
  408624:	jb     0x40869f
  408626:	add    BYTE PTR [rax],al
  408628:	(bad)  
  408629:	add    BYTE PTR [rdi+0x5f],bl
  40862c:	rex.XB pop r15
  40862e:	jae    0x4086a0
  408630:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  408634:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  40863b:	ins    BYTE PTR es:[rdi],dx
  40863c:	gs jb  0x40863f
  40863f:	add    BYTE PTR [rsi+0x0],cl
  408642:	pop    rdi
  408643:	pop    rdi
  408644:	fs ins BYTE PTR es:[rdi],dx
  408646:	ins    BYTE PTR es:[rdi],dx
  408647:	outs   dx,DWORD PTR ds:[rsi]
  408648:	outs   dx,BYTE PTR ds:[rsi]
  408649:	gs js  0x4086b5
  40864c:	je     0x40864e
  40864e:	push   rcx
  40864f:	add    BYTE PTR [rdi+0x5f],bl
  408652:	addr32 gs je 0x4086c3
  408656:	(bad)  
  408657:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  40865e:	push   rdx
  40865f:	add    BYTE PTR [rdi+0x5f],bl
  408662:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  408669:	add    BYTE PTR [rbx+0x0],dl
  40866c:	pop    rdi
  40866d:	pop    rdi
  40866e:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  408675:	movsxd eax,DWORD PTR [rax]
  408677:	add    BYTE PTR [rdx+0x0],bl
  40867a:	pop    rdi
  40867b:	pop    rdi
  40867c:	ins    BYTE PTR es:[rdi],dx
  40867d:	movsxd ebp,DWORD PTR [rdi+0x6e]
  408680:	jbe    0x4086e1
  408682:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  408689:	add    BYTE PTR [rdi+0x5f],bl
  40868c:	jae    0x4086f3
  40868e:	je     0x4086ef
  408690:	(bad)  
  408691:	jo     0x408703
  408693:	pop    rdi
  408694:	je     0x40870f
  408696:	jo     0x4086fd
  408698:	add    BYTE PTR [rax],al
  40869a:	(bad)  
  40869b:	add    BYTE PTR [rdi+0x5f],bl
  40869e:	jae    0x408705
  4086a0:	je     0x408717
  4086a2:	jae    0x408709
  4086a4:	jb     0x408713
  4086a6:	(bad)  
  4086a7:	je     0x408711
  4086a9:	gs jb  0x40871e
  4086ac:	add    BYTE PTR [rax],al
  4086ae:	jno    0x4086b0
  4086b0:	pop    rdi
  4086b1:	(bad)  
  4086b2:	movsxd ebp,DWORD PTR [rbp+0x64]
  4086b5:	ins    BYTE PTR es:[rdi],dx
  4086b6:	outs   dx,BYTE PTR ds:[rsi]
  4086b7:	add    BYTE PTR [rax+0x0],bh
  4086ba:	pop    rdi
  4086bb:	(bad)  
  4086bc:	ins    DWORD PTR es:[rdi],dx
  4086bd:	jae    0x408726
  4086bf:	pop    rdi
  4086c0:	gs js  0x40872c
  4086c3:	je     0x4086c5
  4086c5:	add    BYTE PTR [rdx+0x65635f00],cl
  4086cb:	js     0x408736
  4086cd:	je     0x4086cf
  4086cf:	add    dl,bl
  4086d1:	add    BYTE PTR [rdi+0x66],bl
  4086d4:	ins    DWORD PTR es:[rdi],dx
  4086d5:	outs   dx,DWORD PTR ds:[rsi]
  4086d6:	fs add BYTE PTR gs:[rax],al
  4086da:	sbb    al,BYTE PTR [rcx]
  4086dc:	pop    rdi
  4086dd:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4086e4:	ins    DWORD PTR es:[rdi],dx
  4086e5:	add    BYTE PTR [rax+0x6f6c5f01],al
  4086eb:	movsxd ebp,DWORD PTR [rbx+0x0]
  4086ee:	and    eax,0x6e6f5f02
  4086f3:	gs js  0x40875f
  4086f6:	je     0x4086f8
  4086f8:	(bad)
  4086fc:	outs   dx,BYTE PTR ds:[rsi]
  4086fd:	ins    BYTE PTR es:[rdi],dx
  4086fe:	outs   dx,DWORD PTR ds:[rsi]
  4086ff:	movsxd ebp,DWORD PTR [rbx+0x0]
  408702:	jg     0x408707
  408704:	(bad)  
  408705:	(bad)  
  408706:	outs   dx,DWORD PTR ds:[rsi]
  408707:	jb     0x40877d
  408709:	add    BYTE PTR [rax+0x6c616303],dl
  40870f:	ins    BYTE PTR es:[rdi],dx
  408710:	outs   dx,DWORD PTR ds:[rsi]
  408711:	movsxd eax,DWORD PTR [rax]
  408713:	add    BYTE PTR [rbp+0x69786503],bl
  408719:	je     0x40871b
  40871b:	add    BYTE PTR [rax+0x72706603],dh
  408721:	imul   ebp,DWORD PTR [rsi+0x74],0x3b70066
  408728:	data16 jb 0x408790
  40872b:	add    BYTE PTR gs:[rax],al
  40872e:	ret    0x6603
  408731:	ja     0x4087a5
  408733:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6d03f000
  40873b:	(bad)  
  40873c:	ins    BYTE PTR es:[rdi],dx
  40873d:	ins    BYTE PTR es:[rdi],dx
  40873e:	outs   dx,DWORD PTR ds:[rsi]
  40873f:	movsxd eax,DWORD PTR [rax]
  408741:	add    al,bh
  408743:	add    ebp,DWORD PTR [rbp+0x65]
  408746:	ins    DWORD PTR es:[rdi],dx
  408747:	movsxd esi,DWORD PTR [rax+0x79]
  40874a:	add    BYTE PTR [rax],al
  40874c:	add    DWORD PTR [rax+rsi*2],eax
  40874f:	jb     0x4087ba
  408751:	outs   dx,BYTE PTR ds:[rsi]
  408752:	je     0x4087ba
  408754:	add    BYTE PTR [rax],al
  408756:	add    al,0x4
  408758:	jo     0x4087cf
  40875a:	je     0x4087bf
  40875c:	push   0x16007261
  408761:	add    al,0x73
  408763:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  40876a:	sub    eax,DWORD PTR [rbx+rsi*2]
  40876d:	je     0x4087e1
  40876f:	ins    BYTE PTR es:[rdi],dx
  408770:	outs   dx,BYTE PTR gs:[rsi]
  408772:	add    BYTE PTR [rax],al
  408774:	cs add al,0x73
  408777:	je     0x4087eb
  408779:	outs   dx,BYTE PTR ds:[rsi]
  40877a:	movsxd ebp,DWORD PTR [rbp+0x70]
  40877d:	add    BYTE PTR [rsi+0x4],cl
  408780:	jbe    0x4087e8
  408782:	jo     0x4087f6
  408784:	imul   ebp,DWORD PTR [rsi+0x74],0x7d000066
  40878b:	add    al,0x76
  40878d:	jo     0x408801
  40878f:	imul   ebp,DWORD PTR [rsi+0x74],0x80000066
  408796:	add    BYTE PTR [rax],al
  408798:	add    BYTE PTR [rax-0x80000000],al
  40879e:	add    BYTE PTR [rax],al
  4087a0:	ins    BYTE PTR es:[rdi],dx
  4087a1:	imul   esp,DWORD PTR [rdx+0x67],0x5f736f65
  4087a8:	movsxd ebp,DWORD PTR [rip+0x6c642e31]        # 0x6ca4b5df
  4087ae:	ins    BYTE PTR es:[rdi],dx
  4087af:	add    BYTE PTR [rax+rax*4],dl
  4087b2:	add    BYTE PTR [rax],al
  4087b4:	adc    al,0x80
  4087b6:	add    BYTE PTR [rax],al
  4087b8:	adc    al,0x80
  4087ba:	add    BYTE PTR [rax],al
  4087bc:	adc    al,0x80
  4087be:	add    BYTE PTR [rax],al
  4087c0:	adc    al,0x80
  4087c2:	add    BYTE PTR [rax],al
  4087c4:	adc    al,0x80
  4087c6:	add    BYTE PTR [rax],al
  4087c8:	adc    al,0x80
  4087ca:	add    BYTE PTR [rax],al
  4087cc:	adc    al,0x80
  4087ce:	add    BYTE PTR [rax],al
  4087d0:	adc    al,0x80
  4087d2:	add    BYTE PTR [rax],al
  4087d4:	adc    al,0x80
  4087d6:	add    BYTE PTR [rax],al
  4087d8:	adc    al,0x80
  4087da:	add    BYTE PTR [rax],al
  4087dc:	adc    al,0x80
  4087de:	add    BYTE PTR [rax],al
  4087e0:	adc    al,0x80
  4087e2:	add    BYTE PTR [rax],al
  4087e4:	adc    al,0x80
  4087e6:	add    BYTE PTR [rax],al
  4087e8:	adc    al,0x80
  4087ea:	add    BYTE PTR [rax],al
  4087ec:	adc    al,0x80
  4087ee:	add    BYTE PTR [rax],al
  4087f0:	adc    al,0x80
  4087f2:	add    BYTE PTR [rax],al
  4087f4:	adc    al,0x80
  4087f6:	add    BYTE PTR [rax],al
  4087f8:	adc    al,0x80
  4087fa:	add    BYTE PTR [rax],al
  4087fc:	adc    al,0x80
  4087fe:	add    BYTE PTR [rax],al
  408800:	adc    al,0x80
  408802:	add    BYTE PTR [rax],al
  408804:	adc    al,0x80
  408806:	add    BYTE PTR [rax],al
  408808:	adc    al,0x80
  40880a:	add    BYTE PTR [rax],al
  40880c:	rex.WXB
  40880d:	rex.RB push r10
  40880f:	rex.WRX
  408810:	rex.RB
  408811:	xor    r14,QWORD PTR [rdx]
  408814:	cs fs ins BYTE PTR es:[rdi],dx
  408817:	ins    BYTE PTR es:[rdi],dx
  408818:	add    BYTE PTR [rax],al
  40881a:	add    BYTE PTR [rax],al
  40881c:	sub    BYTE PTR [rax-0x7fd80000],al
  408822:	add    BYTE PTR [rax],al
  408824:	sub    BYTE PTR [rax-0x7fd80000],al
  40882a:	add    BYTE PTR [rax],al
  40882c:	sub    BYTE PTR [rax-0x7fd80000],al
  408832:	add    BYTE PTR [rax],al
  408834:	sub    BYTE PTR [rax-0x7fd80000],al
  40883a:	add    BYTE PTR [rax],al
  40883c:	sub    BYTE PTR [rax-0x7fd80000],al
  408842:	add    BYTE PTR [rax],al
  408844:	sub    BYTE PTR [rax-0x7fd80000],al
  40884a:	add    BYTE PTR [rax],al
  40884c:	sub    BYTE PTR [rax-0x7fd80000],al
  408852:	add    BYTE PTR [rax],al
  408854:	sub    BYTE PTR [rax-0x7fd80000],al
  40885a:	add    BYTE PTR [rax],al
  40885c:	sub    BYTE PTR [rax-0x7fd80000],al
  408862:	add    BYTE PTR [rax],al
  408864:	sub    BYTE PTR [rax-0x7fd80000],al
  40886a:	add    BYTE PTR [rax],al
  40886c:	sub    BYTE PTR [rax-0x7fd80000],al
  408872:	add    BYTE PTR [rax],al
  408874:	sub    BYTE PTR [rax-0x7fd80000],al
  40887a:	add    BYTE PTR [rax],al
  40887c:	sub    BYTE PTR [rax-0x7fd80000],al
  408882:	add    BYTE PTR [rax],al
  408884:	sub    BYTE PTR [rax-0x7fd80000],al
  40888a:	add    BYTE PTR [rax],al
  40888c:	sub    BYTE PTR [rax-0x7fd80000],al
  408892:	add    BYTE PTR [rax],al
  408894:	sub    BYTE PTR [rax+0x736d0000],al
  40889a:	jbe    0x4088ff
  40889c:	jb     0x408912
  40889e:	cs fs ins BYTE PTR es:[rdi],dx
  4088a1:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000000409000 <.CRT>:
	...
  409008:	(bad)  
  409009:	adc    DWORD PTR [rax+0x0],eax
	...
  409020:	adc    BYTE PTR [rax],dl
  409022:	add    BYTE PTR [rax],al
  409025:	add    BYTE PTR [rax],al
  409027:	add    al,al
  409029:	(bad)  
  40902a:	add    BYTE PTR [rax],al
	...
  40903d:	add    BYTE PTR [rax],al
  40903f:	add    al,dh
  409041:	sbb    DWORD PTR [rax+0x0],eax
  409044:	add    BYTE PTR [rax],al
  409046:	add    BYTE PTR [rax],al
  409048:	rcr    BYTE PTR [rcx],0x40
	...

Disassembly of section .tls:

000000000040a000 <.tls>:
	...
  40a020:	add    BYTE PTR [rax+0x40],ah
  40a026:	add    BYTE PTR [rax],al
  40a028:	(bad)  
  40a029:	movabs al,ds:0x765c000000000040
  40a032:	add    BYTE PTR [rax],al
  40a035:	add    BYTE PTR [rax],al
  40a037:	add    BYTE PTR [rax-0x70],al
  40a03a:	add    BYTE PTR [rax],al
	...
