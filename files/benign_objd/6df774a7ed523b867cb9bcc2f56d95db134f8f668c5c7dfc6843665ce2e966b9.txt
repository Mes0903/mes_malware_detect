
6df774a7ed523b867cb9bcc2f56d95db134f8f668c5c7dfc6843665ce2e966b9.exe:     file format pei-x86-64


Disassembly of section .text:

0000000000401000 <.text>:
  401000:	ret    
  401001:	nop    DWORD PTR [rax+rax*1+0x0]
  401006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401010:	sub    rsp,0x28
  401014:	mov    rax,QWORD PTR [rip+0x48e5]        # 0x405900
  40101b:	xor    edx,edx
  40101d:	mov    DWORD PTR [rax],0x1
  401023:	mov    rax,QWORD PTR [rip+0x48e6]        # 0x405910
  40102a:	mov    DWORD PTR [rax],0x1
  401030:	mov    rax,QWORD PTR [rip+0x48e9]        # 0x405920
  401037:	mov    DWORD PTR [rax],0x1
  40103d:	mov    rax,QWORD PTR [rip+0x48ac]        # 0x4058f0
  401044:	mov    DWORD PTR [rax],0x1
  40104a:	mov    rax,QWORD PTR [rip+0x474f]        # 0x4057a0
  401051:	cmp    WORD PTR [rax],0x5a4d
  401056:	je     0x4010d0
  401058:	mov    rax,QWORD PTR [rip+0x4881]        # 0x4058e0
  40105f:	mov    DWORD PTR [rip+0x6fa3],edx        # 0x408008
  401065:	mov    eax,DWORD PTR [rax]
  401067:	test   eax,eax
  401069:	je     0x4010c2
  40106b:	mov    ecx,0x2
  401070:	call   0x4038d8
  401075:	mov    rcx,0xffffffffffffffff
  40107c:	call   0x401c20
  401081:	mov    rdx,QWORD PTR [rip+0x47b8]        # 0x405840
  401088:	mov    QWORD PTR [rdx],rax
  40108b:	mov    rdx,QWORD PTR [rip+0x479e]        # 0x405830
  401092:	mov    QWORD PTR [rdx],rax
  401095:	mov    rax,QWORD PTR [rip+0x4804]        # 0x4058a0
  40109c:	mov    edx,DWORD PTR [rax]
  40109e:	mov    rax,QWORD PTR [rip+0x473b]        # 0x4057e0
  4010a5:	mov    rax,QWORD PTR [rax]
  4010a8:	mov    DWORD PTR [rax],edx
  4010aa:	call   0x401800
  4010af:	mov    rax,QWORD PTR [rip+0x469a]        # 0x405750
  4010b6:	cmp    DWORD PTR [rax],0x1
  4010b9:	je     0x401120
  4010bb:	xor    eax,eax
  4010bd:	add    rsp,0x28
  4010c1:	ret    
  4010c2:	mov    ecx,0x1
  4010c7:	call   0x4038d8
  4010cc:	jmp    0x401075
  4010ce:	xchg   ax,ax
  4010d0:	movsxd rcx,DWORD PTR [rax+0x3c]
  4010d4:	add    rax,rcx
  4010d7:	cmp    DWORD PTR [rax],0x4550
  4010dd:	jne    0x401058
  4010e3:	movzx  ecx,WORD PTR [rax+0x18]
  4010e7:	cmp    cx,0x10b
  4010ec:	je     0x401133
  4010ee:	cmp    cx,0x20b
  4010f3:	jne    0x401058
  4010f9:	cmp    DWORD PTR [rax+0x84],0xe
  401100:	jbe    0x401058
  401106:	mov    ecx,DWORD PTR [rax+0xf8]
  40110c:	xor    edx,edx
  40110e:	test   ecx,ecx
  401110:	setne  dl
  401113:	jmp    0x401058
  401118:	nop    DWORD PTR [rax+rax*1+0x0]
  401120:	lea    rcx,[rip+0x9d9]        # 0x401b00
  401127:	call   0x401af0
  40112c:	xor    eax,eax
  40112e:	add    rsp,0x28
  401132:	ret    
  401133:	cmp    DWORD PTR [rax+0x74],0xe
  401137:	jbe    0x401058
  40113d:	mov    r8d,DWORD PTR [rax+0xe8]
  401144:	xor    edx,edx
  401146:	test   r8d,r8d
  401149:	setne  dl
  40114c:	jmp    0x401058
  401151:	nop    DWORD PTR [rax+rax*1+0x0]
  401156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401160:	sub    rsp,0x38
  401164:	mov    rax,QWORD PTR [rip+0x4765]        # 0x4058d0
  40116b:	lea    r8,[rip+0x6ea6]        # 0x408018
  401172:	lea    rdx,[rip+0x6ea7]        # 0x408020
  401179:	lea    rcx,[rip+0x6ea8]        # 0x408028
  401180:	mov    eax,DWORD PTR [rax]
  401182:	mov    DWORD PTR [rip+0x6e78],eax        # 0x408000
  401188:	lea    rax,[rip+0x6e71]        # 0x408000
  40118f:	mov    QWORD PTR [rsp+0x20],rax
  401194:	mov    rax,QWORD PTR [rip+0x46f5]        # 0x405890
  40119b:	mov    r9d,DWORD PTR [rax]
  40119e:	call   0x4038f0
  4011a3:	mov    DWORD PTR [rip+0x6e67],eax        # 0x408010
  4011a9:	add    rsp,0x38
  4011ad:	ret    
  4011ae:	xchg   ax,ax
  4011b0:	push   r13
  4011b2:	push   r12
  4011b4:	push   rbp
  4011b5:	push   rdi
  4011b6:	push   rsi
  4011b7:	push   rbx
  4011b8:	sub    rsp,0x98
  4011bf:	mov    rbp,QWORD PTR [rip+0x471a]        # 0x4058e0
  4011c6:	xor    eax,eax
  4011c8:	mov    ecx,0xd
  4011cd:	lea    rdx,[rsp+0x20]
  4011d2:	mov    r9d,DWORD PTR [rbp+0x0]
  4011d6:	mov    rdi,rdx
  4011d9:	rep stos QWORD PTR es:[rdi],rax
  4011dc:	test   r9d,r9d
  4011df:	jne    0x401490
  4011e5:	mov    rax,QWORD PTR gs:0x30
  4011ee:	mov    rbx,QWORD PTR [rip+0x461b]        # 0x405810
  4011f5:	mov    rsi,QWORD PTR [rax+0x8]
  4011f9:	xor    edi,edi
  4011fb:	mov    r12,QWORD PTR [rip+0x8136]        # 0x409338
  401202:	jmp    0x401215
  401204:	cmp    rsi,rax
  401207:	je     0x401430
  40120d:	mov    ecx,0x3e8
  401212:	call   r12
  401215:	mov    rax,rdi
  401218:	lock cmpxchg QWORD PTR [rbx],rsi
  40121d:	test   rax,rax
  401220:	jne    0x401204
  401222:	mov    rsi,QWORD PTR [rip+0x45f7]        # 0x405820
  401229:	xor    edi,edi
  40122b:	mov    eax,DWORD PTR [rsi]
  40122d:	cmp    eax,0x1
  401230:	je     0x401447
  401236:	mov    eax,DWORD PTR [rsi]
  401238:	test   eax,eax
  40123a:	je     0x4014a0
  401240:	mov    DWORD PTR [rip+0x6dba],0x1        # 0x408004
  40124a:	mov    eax,DWORD PTR [rsi]
  40124c:	cmp    eax,0x1
  40124f:	je     0x40145c
  401255:	test   edi,edi
  401257:	je     0x401480
  40125d:	mov    rax,QWORD PTR [rip+0x452c]        # 0x405790
  401264:	mov    rax,QWORD PTR [rax]
  401267:	test   rax,rax
  40126a:	je     0x401278
  40126c:	xor    r8d,r8d
  40126f:	mov    edx,0x2
  401274:	xor    ecx,ecx
  401276:	call   rax
  401278:	call   0x401e10
  40127d:	lea    rcx,[rip+0x112c]        # 0x4023b0
  401284:	call   QWORD PTR [rip+0x80a6]        # 0x409330
  40128a:	mov    rdx,QWORD PTR [rip+0x456f]        # 0x405800
  401291:	mov    QWORD PTR [rdx],rax
  401294:	call   0x4022c0
  401299:	lea    rcx,[rip+0xfffffffffffffd60]        # 0x401000
  4012a0:	call   0x403920
  4012a5:	call   0x401c00
  4012aa:	mov    rax,QWORD PTR [rip+0x44ef]        # 0x4057a0
  4012b1:	mov    QWORD PTR [rip+0x7750],rax        # 0x408a08
  4012b8:	mov    rax,QWORD PTR [rip+0x4511]        # 0x4057d0
  4012bf:	mov    rax,QWORD PTR [rax]
  4012c2:	mov    rax,QWORD PTR [rax]
  4012c5:	test   rax,rax
  4012c8:	je     0x401317
  4012ca:	xor    ecx,ecx
  4012cc:	jmp    0x4012e2
  4012ce:	xchg   ax,ax
  4012d0:	test   dl,dl
  4012d2:	je     0x401310
  4012d4:	and    ecx,0x1
  4012d7:	je     0x401304
  4012d9:	mov    ecx,0x1
  4012de:	add    rax,0x1
  4012e2:	movzx  edx,BYTE PTR [rax]
  4012e5:	cmp    dl,0x20
  4012e8:	jle    0x4012d0
  4012ea:	mov    r8d,ecx
  4012ed:	xor    r8d,0x1
  4012f1:	cmp    dl,0x22
  4012f4:	cmove  ecx,r8d
  4012f8:	jmp    0x4012de
  4012fa:	nop    WORD PTR [rax+rax*1+0x0]
  401300:	test   dl,dl
  401302:	je     0x401310
  401304:	add    rax,0x1
  401308:	movzx  edx,BYTE PTR [rax]
  40130b:	cmp    dl,0x20
  40130e:	jle    0x401300
  401310:	mov    QWORD PTR [rip+0x76e9],rax        # 0x408a00
  401317:	mov    r8d,DWORD PTR [rbp+0x0]
  40131b:	test   r8d,r8d
  40131e:	je     0x401336
  401320:	test   BYTE PTR [rsp+0x5c],0x1
  401325:	mov    eax,0xa
  40132a:	jne    0x401421
  401330:	mov    DWORD PTR [rip+0x2cca],eax        # 0x404000
  401336:	mov    r12d,DWORD PTR [rip+0x6ceb]        # 0x408028
  40133d:	lea    r13d,[r12+0x1]
  401342:	movsxd r13,r13d
  401345:	shl    r13,0x3
  401349:	mov    rcx,r13
  40134c:	call   0x403850
  401351:	test   r12d,r12d
  401354:	mov    rbp,rax
  401357:	mov    rdi,QWORD PTR [rip+0x6cc2]        # 0x408020
  40135e:	jle    0x4014be
  401364:	xor    ebx,ebx
  401366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401370:	mov    rcx,QWORD PTR [rdi+rbx*8]
  401374:	call   0x403828
  401379:	lea    rsi,[rax+0x1]
  40137d:	mov    rcx,rsi
  401380:	call   0x403850
  401385:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  40138a:	mov    rdx,QWORD PTR [rdi+rbx*8]
  40138e:	mov    rcx,rax
  401391:	mov    r8,rsi
  401394:	add    rbx,0x1
  401398:	call   0x403848
  40139d:	cmp    r12d,ebx
  4013a0:	jg     0x401370
  4013a2:	sub    r13,0x8
  4013a6:	mov    QWORD PTR [rbp+r13*1+0x0],0x0
  4013af:	mov    QWORD PTR [rip+0x6c6a],rbp        # 0x408020
  4013b6:	call   0x4017d0
  4013bb:	mov    rax,QWORD PTR [rip+0x43fe]        # 0x4057c0
  4013c2:	mov    rdx,QWORD PTR [rip+0x6c4f]        # 0x408018
  4013c9:	mov    ecx,DWORD PTR [rip+0x6c59]        # 0x408028
  4013cf:	mov    rax,QWORD PTR [rax]
  4013d2:	mov    QWORD PTR [rax],rdx
  4013d5:	mov    r8,QWORD PTR [rip+0x6c3c]        # 0x408018
  4013dc:	mov    rdx,QWORD PTR [rip+0x6c3d]        # 0x408020
  4013e3:	call   0x4039f0
  4013e8:	mov    ecx,DWORD PTR [rip+0x6c1a]        # 0x408008
  4013ee:	mov    DWORD PTR [rip+0x6c18],eax        # 0x40800c
  4013f4:	test   ecx,ecx
  4013f6:	je     0x4014c6
  4013fc:	mov    edx,DWORD PTR [rip+0x6c02]        # 0x408004
  401402:	test   edx,edx
  401404:	jne    0x401411
  401406:	call   0x4038c0
  40140b:	mov    eax,DWORD PTR [rip+0x6bfb]        # 0x40800c
  401411:	add    rsp,0x98
  401418:	pop    rbx
  401419:	pop    rsi
  40141a:	pop    rdi
  40141b:	pop    rbp
  40141c:	pop    r12
  40141e:	pop    r13
  401420:	ret    
  401421:	movzx  eax,WORD PTR [rsp+0x60]
  401426:	jmp    0x401330
  40142b:	nop    DWORD PTR [rax+rax*1+0x0]
  401430:	mov    rsi,QWORD PTR [rip+0x43e9]        # 0x405820
  401437:	mov    edi,0x1
  40143c:	mov    eax,DWORD PTR [rsi]
  40143e:	cmp    eax,0x1
  401441:	jne    0x401236
  401447:	mov    ecx,0x1f
  40144c:	call   0x4038c8
  401451:	mov    eax,DWORD PTR [rsi]
  401453:	cmp    eax,0x1
  401456:	jne    0x401255
  40145c:	mov    rdx,QWORD PTR [rip+0x43fd]        # 0x405860
  401463:	mov    rcx,QWORD PTR [rip+0x43e6]        # 0x405850
  40146a:	call   0x4038b8
  40146f:	test   edi,edi
  401471:	mov    DWORD PTR [rsi],0x2
  401477:	jne    0x40125d
  40147d:	nop    DWORD PTR [rax]
  401480:	xor    eax,eax
  401482:	xchg   QWORD PTR [rbx],rax
  401485:	jmp    0x40125d
  40148a:	nop    WORD PTR [rax+rax*1+0x0]
  401490:	mov    rcx,rdx
  401493:	call   QWORD PTR [rip+0x7e47]        # 0x4092e0
  401499:	jmp    0x4011e5
  40149e:	xchg   ax,ax
  4014a0:	mov    rdx,QWORD PTR [rip+0x43d9]        # 0x405880
  4014a7:	mov    rcx,QWORD PTR [rip+0x43c2]        # 0x405870
  4014ae:	mov    DWORD PTR [rsi],0x1
  4014b4:	call   0x4038b8
  4014b9:	jmp    0x40124a
  4014be:	xor    r13d,r13d
  4014c1:	jmp    0x4013a6
  4014c6:	mov    ecx,eax
  4014c8:	call   0x403880
  4014cd:	nop
  4014ce:	xchg   ax,ax
  4014d0:	sub    rsp,0x28
  4014d4:	mov    rax,QWORD PTR [rip+0x4405]        # 0x4058e0
  4014db:	mov    DWORD PTR [rax],0x1
  4014e1:	call   0x401810
  4014e6:	call   0x4011b0
  4014eb:	nop
  4014ec:	nop
  4014ed:	add    rsp,0x28
  4014f1:	ret    
  4014f2:	nop    DWORD PTR [rax+0x0]
  4014f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401500:	sub    rsp,0x28
  401504:	mov    rax,QWORD PTR [rip+0x43d5]        # 0x4058e0
  40150b:	mov    DWORD PTR [rax],0x0
  401511:	call   0x401810
  401516:	call   0x4011b0
  40151b:	nop
  40151c:	nop
  40151d:	add    rsp,0x28
  401521:	ret    
  401522:	nop
  401523:	nop
  401524:	nop
  401525:	nop
  401526:	nop
  401527:	nop
  401528:	nop
  401529:	nop
  40152a:	nop
  40152b:	nop
  40152c:	nop
  40152d:	nop
  40152e:	nop
  40152f:	nop
  401530:	push   rdi
  401531:	push   rsi
  401532:	push   rbx
  401533:	sub    rsp,0x20
  401537:	test   edx,edx
  401539:	mov    rdi,rcx
  40153c:	mov    esi,edx
  40153e:	je     0x401610
  401544:	call   QWORD PTR [rip+0x7e4e]        # 0x409398
  40154a:	lea    rbx,[rax+0x60]
  40154e:	lea    rdx,[rip+0x3aab]        # 0x405000
  401555:	mov    r8,rdi
  401558:	mov    rcx,rbx
  40155b:	call   0x403878
  401560:	lea    rcx,[rip+0x3b19]        # 0x405080
  401567:	mov    r9,rbx
  40156a:	mov    r8d,0x30
  401570:	mov    edx,0x1
  401575:	call   0x403860
  40157a:	mov    rdx,rbx
  40157d:	mov    ecx,0xa
  401582:	call   0x403870
  401587:	lea    rcx,[rip+0x3b2a]        # 0x4050b8
  40158e:	mov    r9,rbx
  401591:	mov    r8d,0x3a
  401597:	mov    edx,0x1
  40159c:	call   0x403860
  4015a1:	lea    rcx,[rip+0x3b50]        # 0x4050f8
  4015a8:	mov    r9,rbx
  4015ab:	mov    r8d,0x45
  4015b1:	mov    edx,0x1
  4015b6:	call   0x403860
  4015bb:	lea    rcx,[rip+0x3b7e]        # 0x405140
  4015c2:	mov    r9,rbx
  4015c5:	mov    r8d,0x33
  4015cb:	mov    edx,0x1
  4015d0:	call   0x403860
  4015d5:	lea    rcx,[rip+0x3b9c]        # 0x405178
  4015dc:	mov    r9,rbx
  4015df:	mov    r8d,0x3c
  4015e5:	mov    edx,0x1
  4015ea:	call   0x403860
  4015ef:	lea    rcx,[rip+0x3bc2]        # 0x4051b8
  4015f6:	mov    r9,rbx
  4015f9:	mov    r8d,0x32
  4015ff:	mov    edx,0x1
  401604:	call   0x403860
  401609:	mov    ecx,esi
  40160b:	call   0x403880
  401610:	call   QWORD PTR [rip+0x7d82]        # 0x409398
  401616:	lea    rbx,[rax+0x30]
  40161a:	jmp    0x40154e
  40161f:	nop
  401620:	jmp    QWORD PTR [rip+0x7c7a]        # 0x4092a0
  401626:	nop
  401627:	nop
  401628:	jmp    QWORD PTR [rip+0x7c6a]        # 0x409298
  40162e:	nop
  40162f:	nop
  401630:	jmp    QWORD PTR [rip+0x7c5a]        # 0x409290
  401636:	nop
  401637:	nop
  401638:	jmp    QWORD PTR [rip+0x7c4a]        # 0x409288
  40163e:	nop
  40163f:	nop
  401640:	jmp    QWORD PTR [rip+0x7c3a]        # 0x409280
  401646:	nop
  401647:	nop
  401648:	jmp    QWORD PTR [rip+0x7c2a]        # 0x409278
  40164e:	nop
  40164f:	nop
  401650:	jmp    QWORD PTR [rip+0x7c1a]        # 0x409270
  401656:	nop
  401657:	nop
  401658:	nop    DWORD PTR [rax+rax*1+0x0]
  401660:	push   rbx
  401661:	sub    rsp,0x30
  401665:	mov    rbx,rcx
  401668:	mov    rcx,QWORD PTR [rip+0x73a1]        # 0x408a10
  40166f:	call   0x401c10
  401674:	cmp    rax,0xffffffffffffffff
  401678:	mov    QWORD PTR [rsp+0x20],rax
  40167d:	je     0x4016f5
  40167f:	mov    ecx,0x8
  401684:	call   0x4038b0
  401689:	mov    rcx,QWORD PTR [rip+0x7380]        # 0x408a10
  401690:	call   0x401c10
  401695:	mov    rcx,QWORD PTR [rip+0x737c]        # 0x408a18
  40169c:	mov    QWORD PTR [rsp+0x20],rax
  4016a1:	call   0x401c10
  4016a6:	lea    rdx,[rsp+0x20]
  4016ab:	lea    r8,[rsp+0x28]
  4016b0:	mov    rcx,rbx
  4016b3:	mov    QWORD PTR [rsp+0x28],rax
  4016b8:	call   0x4038f8
  4016bd:	mov    rcx,QWORD PTR [rsp+0x20]
  4016c2:	mov    rbx,rax
  4016c5:	call   0x401c20
  4016ca:	mov    rcx,QWORD PTR [rsp+0x28]
  4016cf:	mov    QWORD PTR [rip+0x733a],rax        # 0x408a10
  4016d6:	call   0x401c20
  4016db:	mov    ecx,0x8
  4016e0:	mov    QWORD PTR [rip+0x7331],rax        # 0x408a18
  4016e7:	call   0x4038a0
  4016ec:	mov    rax,rbx
  4016ef:	add    rsp,0x30
  4016f3:	pop    rbx
  4016f4:	ret    
  4016f5:	mov    rax,QWORD PTR [rip+0x40f4]        # 0x4057f0
  4016fc:	mov    rcx,rbx
  4016ff:	call   QWORD PTR [rax]
  401701:	add    rsp,0x30
  401705:	pop    rbx
  401706:	ret    
  401707:	nop    WORD PTR [rax+rax*1+0x0]
  401710:	sub    rsp,0x28
  401714:	call   0x401660
  401719:	test   rax,rax
  40171c:	sete   al
  40171f:	movzx  eax,al
  401722:	neg    eax
  401724:	add    rsp,0x28
  401728:	ret    
  401729:	nop
  40172a:	nop
  40172b:	nop
  40172c:	nop
  40172d:	nop
  40172e:	nop
  40172f:	nop
  401730:	sub    rsp,0x28
  401734:	mov    rax,QWORD PTR [rip+0x28d5]        # 0x404010
  40173b:	mov    rax,QWORD PTR [rax]
  40173e:	test   rax,rax
  401741:	je     0x401760
  401743:	call   rax
  401745:	mov    rax,QWORD PTR [rip+0x28c4]        # 0x404010
  40174c:	lea    rdx,[rax+0x8]
  401750:	mov    rax,QWORD PTR [rax+0x8]
  401754:	mov    QWORD PTR [rip+0x28b5],rdx        # 0x404010
  40175b:	test   rax,rax
  40175e:	jne    0x401743
  401760:	add    rsp,0x28
  401764:	ret    
  401765:	nop
  401766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401770:	push   rsi
  401771:	push   rbx
  401772:	sub    rsp,0x28
  401776:	mov    rsi,QWORD PTR [rip+0x3fe3]        # 0x405760
  40177d:	mov    rax,QWORD PTR [rsi]
  401780:	cmp    eax,0xffffffff
  401783:	mov    ebx,eax
  401785:	je     0x4017b0
  401787:	test   ebx,ebx
  401789:	je     0x40179a
  40178b:	nop    DWORD PTR [rax+rax*1+0x0]
  401790:	mov    eax,ebx
  401792:	call   QWORD PTR [rsi+rax*8]
  401795:	sub    ebx,0x1
  401798:	jne    0x401790
  40179a:	lea    rcx,[rip+0xffffffffffffff8f]        # 0x401730
  4017a1:	add    rsp,0x28
  4017a5:	pop    rbx
  4017a6:	pop    rsi
  4017a7:	jmp    0x401710
  4017ac:	nop    DWORD PTR [rax+0x0]
  4017b0:	xor    ebx,ebx
  4017b2:	jmp    0x4017b6
  4017b4:	mov    ebx,eax
  4017b6:	lea    edx,[rbx+0x1]
  4017b9:	cmp    QWORD PTR [rsi+rdx*8],0x0
  4017be:	mov    rax,rdx
  4017c1:	jne    0x4017b4
  4017c3:	jmp    0x401787
  4017c5:	nop
  4017c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4017d0:	mov    eax,DWORD PTR [rip+0x685a]        # 0x408030
  4017d6:	test   eax,eax
  4017d8:	je     0x4017e0
  4017da:	repz ret 
  4017dc:	nop    DWORD PTR [rax+0x0]
  4017e0:	mov    DWORD PTR [rip+0x6846],0x1        # 0x408030
  4017ea:	jmp    0x401770
  4017ec:	nop
  4017ed:	nop
  4017ee:	nop
  4017ef:	nop
  4017f0:	mov    rax,QWORD PTR [rip+0x7ba9]        # 0x4093a0
  4017f7:	rex.W jmp rax
  4017fa:	nop
  4017fb:	nop
  4017fc:	nop
  4017fd:	nop
  4017fe:	nop
  4017ff:	nop
  401800:	xor    eax,eax
  401802:	ret    
  401803:	nop
  401804:	nop
  401805:	nop
  401806:	nop
  401807:	nop
  401808:	nop
  401809:	nop
  40180a:	nop
  40180b:	nop
  40180c:	nop
  40180d:	nop
  40180e:	nop
  40180f:	nop
  401810:	push   r12
  401812:	push   rbp
  401813:	push   rdi
  401814:	push   rsi
  401815:	push   rbx
  401816:	sub    rsp,0x40
  40181a:	mov    rbx,QWORD PTR [rip+0x287f]        # 0x4040a0
  401821:	movabs rax,0x2b992ddfa232
  40182b:	mov    QWORD PTR [rsp+0x20],0x0
  401834:	cmp    rbx,rax
  401837:	je     0x401850
  401839:	not    rbx
  40183c:	mov    QWORD PTR [rip+0x286d],rbx        # 0x4040b0
  401843:	add    rsp,0x40
  401847:	pop    rbx
  401848:	pop    rsi
  401849:	pop    rdi
  40184a:	pop    rbp
  40184b:	pop    r12
  40184d:	ret    
  40184e:	xchg   ax,ax
  401850:	lea    rcx,[rsp+0x20]
  401855:	call   QWORD PTR [rip+0x7a8d]        # 0x4092e8
  40185b:	mov    r12,QWORD PTR [rsp+0x20]
  401860:	call   QWORD PTR [rip+0x7a62]        # 0x4092c8
  401866:	mov    ebp,eax
  401868:	call   QWORD PTR [rip+0x7a62]        # 0x4092d0
  40186e:	mov    edi,eax
  401870:	call   QWORD PTR [rip+0x7a7a]        # 0x4092f0
  401876:	lea    rcx,[rsp+0x30]
  40187b:	mov    esi,eax
  40187d:	call   QWORD PTR [rip+0x7a85]        # 0x409308
  401883:	xor    r12,QWORD PTR [rsp+0x30]
  401888:	mov    edx,edi
  40188a:	movabs rax,0xffffffffffff
  401894:	xor    rbp,r12
  401897:	mov    rdi,rbp
  40189a:	xor    rdi,rdx
  40189d:	mov    edx,esi
  40189f:	xor    rdi,rdx
  4018a2:	mov    rsi,rdi
  4018a5:	and    rsi,rax
  4018a8:	cmp    rsi,rbx
  4018ab:	je     0x4018d0
  4018ad:	mov    rax,rsi
  4018b0:	not    rax
  4018b3:	mov    QWORD PTR [rip+0x27e6],rsi        # 0x4040a0
  4018ba:	mov    QWORD PTR [rip+0x27ef],rax        # 0x4040b0
  4018c1:	add    rsp,0x40
  4018c5:	pop    rbx
  4018c6:	pop    rsi
  4018c7:	pop    rdi
  4018c8:	pop    rbp
  4018c9:	pop    r12
  4018cb:	ret    
  4018cc:	nop    DWORD PTR [rax+0x0]
  4018d0:	movabs rax,0xffffd466d2205dcc
  4018da:	movabs rsi,0x2b992ddfa233
  4018e4:	jmp    0x4018b3
  4018e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018f0:	push   rbp
  4018f1:	push   rsi
  4018f2:	push   rbx
  4018f3:	mov    rbp,rsp
  4018f6:	sub    rsp,0x70
  4018fa:	mov    rsi,rcx
  4018fd:	lea    rcx,[rip+0x677c]        # 0x408080
  401904:	call   QWORD PTR [rip+0x7a0e]        # 0x409318
  40190a:	mov    rbx,QWORD PTR [rip+0x6867]        # 0x408178
  401911:	xor    r8d,r8d
  401914:	lea    rdx,[rbp-0x28]
  401918:	mov    rcx,rbx
  40191b:	call   QWORD PTR [rip+0x79ff]        # 0x409320
  401921:	test   rax,rax
  401924:	mov    r9,rax
  401927:	je     0x4019d0
  40192d:	lea    rax,[rbp-0x20]
  401931:	mov    QWORD PTR [rsp+0x38],0x0
  40193a:	mov    r8,rbx
  40193d:	mov    rdx,QWORD PTR [rbp-0x28]
  401941:	xor    ecx,ecx
  401943:	mov    QWORD PTR [rsp+0x30],rax
  401948:	lea    rax,[rbp-0x18]
  40194c:	mov    QWORD PTR [rsp+0x28],rax
  401951:	lea    rax,[rip+0x6728]        # 0x408080
  401958:	mov    QWORD PTR [rsp+0x20],rax
  40195d:	call   QWORD PTR [rip+0x79c5]        # 0x409328
  401963:	mov    rax,QWORD PTR [rip+0x680e]        # 0x408178
  40196a:	xor    ecx,ecx
  40196c:	mov    QWORD PTR [rip+0x678d],rsi        # 0x408100
  401973:	mov    DWORD PTR [rip+0x6c03],0xc0000409        # 0x408580
  40197d:	mov    DWORD PTR [rip+0x6bfd],0x1        # 0x408584
  401987:	mov    QWORD PTR [rip+0x6c02],rax        # 0x408590
  40198e:	mov    rax,QWORD PTR [rip+0x270b]        # 0x4040a0
  401995:	mov    QWORD PTR [rbp-0x10],rax
  401999:	mov    rax,QWORD PTR [rip+0x2710]        # 0x4040b0
  4019a0:	mov    QWORD PTR [rbp-0x8],rax
  4019a4:	call   QWORD PTR [rip+0x7986]        # 0x409330
  4019aa:	lea    rcx,[rip+0x39cf]        # 0x405380
  4019b1:	call   QWORD PTR [rip+0x7999]        # 0x409350
  4019b7:	call   QWORD PTR [rip+0x7903]        # 0x4092c0
  4019bd:	mov    edx,0xc0000409
  4019c2:	mov    rcx,rax
  4019c5:	call   QWORD PTR [rip+0x7975]        # 0x409340
  4019cb:	call   0x403898
  4019d0:	mov    rax,QWORD PTR [rbp+0x18]
  4019d4:	mov    QWORD PTR [rip+0x679d],rax        # 0x408178
  4019db:	lea    rax,[rbp+0x8]
  4019df:	mov    QWORD PTR [rip+0x6732],rax        # 0x408118
  4019e6:	jmp    0x401963
  4019eb:	nop
  4019ec:	nop
  4019ed:	nop
  4019ee:	nop
  4019ef:	nop
  4019f0:	sub    rsp,0x28
  4019f4:	test   edx,edx
  4019f6:	je     0x401a10
  4019f8:	cmp    edx,0x3
  4019fb:	je     0x401a10
  4019fd:	mov    eax,0x1
  401a02:	add    rsp,0x28
  401a06:	ret    
  401a07:	nop    WORD PTR [rax+rax*1+0x0]
  401a10:	call   0x402700
  401a15:	mov    eax,0x1
  401a1a:	add    rsp,0x28
  401a1e:	ret    
  401a1f:	nop
  401a20:	push   rsi
  401a21:	push   rbx
  401a22:	sub    rsp,0x28
  401a26:	mov    rax,QWORD PTR [rip+0x3d13]        # 0x405740
  401a2d:	cmp    DWORD PTR [rax],0x2
  401a30:	je     0x401a38
  401a32:	mov    DWORD PTR [rax],0x2
  401a38:	cmp    edx,0x2
  401a3b:	je     0x401a50
  401a3d:	cmp    edx,0x1
  401a40:	je     0x401a82
  401a42:	mov    eax,0x1
  401a47:	add    rsp,0x28
  401a4b:	pop    rbx
  401a4c:	pop    rsi
  401a4d:	ret    
  401a4e:	xchg   ax,ax
  401a50:	lea    rbx,[rip+0x8609]        # 0x40a060
  401a57:	lea    rsi,[rip+0x8602]        # 0x40a060
  401a5e:	cmp    rbx,rsi
  401a61:	je     0x401a42
  401a63:	mov    rax,QWORD PTR [rbx]
  401a66:	test   rax,rax
  401a69:	je     0x401a6d
  401a6b:	call   rax
  401a6d:	add    rbx,0x8
  401a71:	cmp    rbx,rsi
  401a74:	jne    0x401a63
  401a76:	mov    eax,0x1
  401a7b:	add    rsp,0x28
  401a7f:	pop    rbx
  401a80:	pop    rsi
  401a81:	ret    
  401a82:	call   0x402700
  401a87:	jmp    0x401a42
  401a89:	nop    DWORD PTR [rax+0x0]
  401a90:	xor    eax,eax
  401a92:	ret    
  401a93:	nop
  401a94:	nop
  401a95:	nop
  401a96:	nop
  401a97:	nop
  401a98:	nop
  401a99:	nop
  401a9a:	nop
  401a9b:	nop
  401a9c:	nop
  401a9d:	nop
  401a9e:	nop
  401a9f:	nop
  401aa0:	sub    rsp,0x58
  401aa4:	mov    rax,QWORD PTR [rip+0x6bb5]        # 0x408660
  401aab:	test   rax,rax
  401aae:	je     0x401adc
  401ab0:	movsd  xmm0,QWORD PTR [rsp+0x80]
  401ab9:	mov    DWORD PTR [rsp+0x20],ecx
  401abd:	lea    rcx,[rsp+0x20]
  401ac2:	mov    QWORD PTR [rsp+0x28],rdx
  401ac7:	movsd  QWORD PTR [rsp+0x30],xmm2
  401acd:	movsd  QWORD PTR [rsp+0x38],xmm3
  401ad3:	movsd  QWORD PTR [rsp+0x40],xmm0
  401ad9:	call   rax
  401adb:	nop
  401adc:	add    rsp,0x58
  401ae0:	ret    
  401ae1:	nop    DWORD PTR [rax+rax*1+0x0]
  401ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401af0:	mov    QWORD PTR [rip+0x6b69],rcx        # 0x408660
  401af7:	jmp    0x4038d0
  401afc:	nop    DWORD PTR [rax+0x0]
  401b00:	push   rsi
  401b01:	push   rbx
  401b02:	sub    rsp,0x78
  401b06:	movaps XMMWORD PTR [rsp+0x40],xmm6
  401b0b:	movaps XMMWORD PTR [rsp+0x50],xmm7
  401b10:	movaps XMMWORD PTR [rsp+0x60],xmm8
  401b16:	cmp    DWORD PTR [rcx],0x6
  401b19:	ja     0x401bf0
  401b1f:	mov    edx,DWORD PTR [rcx]
  401b21:	lea    rax,[rip+0x399c]        # 0x4054c4
  401b28:	movsxd rdx,DWORD PTR [rax+rdx*4]
  401b2c:	add    rax,rdx
  401b2f:	jmp    rax
  401b31:	lea    rbx,[rip+0x3868]        # 0x4053a0
  401b38:	nop    DWORD PTR [rax+rax*1+0x0]
  401b40:	movsd  xmm8,QWORD PTR [rcx+0x20]
  401b46:	mov    rsi,QWORD PTR [rcx+0x8]
  401b4a:	movsd  xmm7,QWORD PTR [rcx+0x18]
  401b4f:	movsd  xmm6,QWORD PTR [rcx+0x10]
  401b54:	call   0x4038e8
  401b59:	movsd  QWORD PTR [rsp+0x30],xmm8
  401b60:	lea    rcx,[rax+0x60]
  401b64:	lea    rdx,[rip+0x392d]        # 0x405498
  401b6b:	movsd  QWORD PTR [rsp+0x28],xmm7
  401b71:	mov    r9,rsi
  401b74:	mov    r8,rbx
  401b77:	movsd  QWORD PTR [rsp+0x20],xmm6
  401b7d:	call   0x403878
  401b82:	nop
  401b83:	movaps xmm6,XMMWORD PTR [rsp+0x40]
  401b88:	xor    eax,eax
  401b8a:	movaps xmm7,XMMWORD PTR [rsp+0x50]
  401b8f:	movaps xmm8,XMMWORD PTR [rsp+0x60]
  401b95:	add    rsp,0x78
  401b99:	pop    rbx
  401b9a:	pop    rsi
  401b9b:	ret    
  401b9c:	nop    DWORD PTR [rax+0x0]
  401ba0:	lea    rbx,[rip+0x3818]        # 0x4053bf
  401ba7:	jmp    0x401b40
  401ba9:	nop    DWORD PTR [rax+0x0]
  401bb0:	lea    rbx,[rip+0x3829]        # 0x4053e0
  401bb7:	jmp    0x401b40
  401bb9:	nop    DWORD PTR [rax+0x0]
  401bc0:	lea    rbx,[rip+0x3889]        # 0x405450
  401bc7:	jmp    0x401b40
  401bcc:	nop    DWORD PTR [rax+0x0]
  401bd0:	lea    rbx,[rip+0x3851]        # 0x405428
  401bd7:	jmp    0x401b40
  401bdc:	nop    DWORD PTR [rax+0x0]
  401be0:	lea    rbx,[rip+0x3819]        # 0x405400
  401be7:	jmp    0x401b40
  401bec:	nop    DWORD PTR [rax+0x0]
  401bf0:	lea    rbx,[rip+0x388f]        # 0x405486
  401bf7:	jmp    0x401b40
  401bfc:	nop
  401bfd:	nop
  401bfe:	nop
  401bff:	nop
  401c00:	fninit 
  401c02:	ret    
  401c03:	nop
  401c04:	nop
  401c05:	nop
  401c06:	nop
  401c07:	nop
  401c08:	nop
  401c09:	nop
  401c0a:	nop
  401c0b:	nop
  401c0c:	nop
  401c0d:	nop
  401c0e:	nop
  401c0f:	nop
  401c10:	mov    rax,rcx
  401c13:	ret    
  401c14:	xchg   ax,ax
  401c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c20:	mov    rax,rcx
  401c23:	ret    
  401c24:	nop
  401c25:	nop
  401c26:	nop
  401c27:	nop
  401c28:	nop
  401c29:	nop
  401c2a:	nop
  401c2b:	nop
  401c2c:	nop
  401c2d:	nop
  401c2e:	nop
  401c2f:	nop
  401c30:	push   rsi
  401c31:	push   rbx
  401c32:	sub    rsp,0x38
  401c36:	lea    rax,[rsp+0x58]
  401c3b:	mov    rbx,rcx
  401c3e:	mov    QWORD PTR [rsp+0x58],rdx
  401c43:	mov    QWORD PTR [rsp+0x60],r8
  401c48:	mov    QWORD PTR [rsp+0x68],r9
  401c4d:	mov    QWORD PTR [rsp+0x28],rax
  401c52:	call   0x4038e8
  401c57:	lea    rcx,[rip+0x3882]        # 0x4054e0
  401c5e:	lea    r9,[rax+0x60]
  401c62:	mov    r8d,0x1b
  401c68:	mov    edx,0x1
  401c6d:	call   0x403860
  401c72:	mov    rsi,QWORD PTR [rsp+0x28]
  401c77:	call   0x4038e8
  401c7c:	lea    rcx,[rax+0x60]
  401c80:	mov    rdx,rbx
  401c83:	mov    r8,rsi
  401c86:	call   0x403818
  401c8b:	call   0x403898
  401c90:	nop
  401c91:	nop    DWORD PTR [rax+rax*1+0x0]
  401c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ca0:	push   r13
  401ca2:	push   r12
  401ca4:	push   rbp
  401ca5:	push   rdi
  401ca6:	push   rsi
  401ca7:	push   rbx
  401ca8:	sub    rsp,0x58
  401cac:	movsxd rbp,DWORD PTR [rip+0x69d1]        # 0x408684
  401cb3:	mov    rbx,rcx
  401cb6:	mov    rsi,rdx
  401cb9:	mov    rdi,r8
  401cbc:	test   ebp,ebp
  401cbe:	jle    0x401dba
  401cc4:	mov    rax,QWORD PTR [rip+0x69bd]        # 0x408688
  401ccb:	xor    r9d,r9d
  401cce:	add    rax,0x8
  401cd2:	mov    r10,QWORD PTR [rax]
  401cd5:	cmp    rbx,r10
  401cd8:	jb     0x401cee
  401cda:	mov    rdx,QWORD PTR [rax+0x8]
  401cde:	mov    r11d,DWORD PTR [rdx+0x8]
  401ce2:	add    r10,r11
  401ce5:	cmp    rbx,r10
  401ce8:	jb     0x401da0
  401cee:	add    r9d,0x1
  401cf2:	add    rax,0x18
  401cf6:	cmp    r9d,ebp
  401cf9:	jne    0x401cd2
  401cfb:	mov    rcx,rbx
  401cfe:	call   0x402910
  401d03:	test   rax,rax
  401d06:	mov    r12,rax
  401d09:	je     0x401df2
  401d0f:	lea    rbp,[rbp+rbp*2+0x0]
  401d14:	shl    rbp,0x3
  401d18:	mov    r13,rbp
  401d1b:	add    r13,QWORD PTR [rip+0x6966]        # 0x408688
  401d22:	mov    QWORD PTR [r13+0x10],rax
  401d26:	mov    DWORD PTR [r13+0x0],0x0
  401d2e:	call   0x402a30
  401d33:	mov    edx,DWORD PTR [r12+0xc]
  401d38:	mov    r8d,0x30
  401d3e:	add    rax,rdx
  401d41:	lea    rdx,[rsp+0x20]
  401d46:	mov    QWORD PTR [r13+0x8],rax
  401d4a:	mov    rax,QWORD PTR [rip+0x6937]        # 0x408688
  401d51:	mov    rcx,QWORD PTR [rax+rbp*1+0x8]
  401d56:	call   QWORD PTR [rip+0x7604]        # 0x409360
  401d5c:	test   rax,rax
  401d5f:	je     0x401dd5
  401d61:	mov    eax,DWORD PTR [rsp+0x44]
  401d65:	lea    edx,[rax-0x4]
  401d68:	and    edx,0xfffffffb
  401d6b:	je     0x401d99
  401d6d:	sub    eax,0x40
  401d70:	and    eax,0xffffffbf
  401d73:	je     0x401d99
  401d75:	mov    r9,rbp
  401d78:	add    r9,QWORD PTR [rip+0x6909]        # 0x408688
  401d7f:	mov    r8d,0x40
  401d85:	mov    rdx,QWORD PTR [rsp+0x38]
  401d8a:	mov    rcx,QWORD PTR [rsp+0x20]
  401d8f:	call   QWORD PTR [rip+0x75c3]        # 0x409358
  401d95:	test   eax,eax
  401d97:	je     0x401dc1
  401d99:	add    DWORD PTR [rip+0x68e4],0x1        # 0x408684
  401da0:	mov    r8,rdi
  401da3:	mov    rdx,rsi
  401da6:	mov    rcx,rbx
  401da9:	add    rsp,0x58
  401dad:	pop    rbx
  401dae:	pop    rsi
  401daf:	pop    rdi
  401db0:	pop    rbp
  401db1:	pop    r12
  401db3:	pop    r13
  401db5:	jmp    0x403848
  401dba:	xor    ebp,ebp
  401dbc:	jmp    0x401cfb
  401dc1:	call   QWORD PTR [rip+0x7511]        # 0x4092d8
  401dc7:	lea    rcx,[rip+0x378a]        # 0x405558
  401dce:	mov    edx,eax
  401dd0:	call   0x401c30
  401dd5:	mov    rax,QWORD PTR [rip+0x68ac]        # 0x408688
  401ddc:	mov    edx,DWORD PTR [r12+0x8]
  401de1:	lea    rcx,[rip+0x3738]        # 0x405520
  401de8:	mov    r8,QWORD PTR [rax+rbp*1+0x8]
  401ded:	call   0x401c30
  401df2:	lea    rcx,[rip+0x3707]        # 0x405500
  401df9:	mov    rdx,rbx
  401dfc:	call   0x401c30
  401e01:	nop
  401e02:	nop    DWORD PTR [rax+0x0]
  401e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e10:	push   rbp
  401e11:	push   r14
  401e13:	push   r13
  401e15:	push   r12
  401e17:	push   rdi
  401e18:	push   rsi
  401e19:	push   rbx
  401e1a:	mov    rbp,rsp
  401e1d:	sub    rsp,0x60
  401e21:	mov    ebx,DWORD PTR [rip+0x6859]        # 0x408680
  401e27:	test   ebx,ebx
  401e29:	je     0x401e40
  401e2b:	mov    rsp,rbp
  401e2e:	pop    rbx
  401e2f:	pop    rsi
  401e30:	pop    rdi
  401e31:	pop    r12
  401e33:	pop    r13
  401e35:	pop    r14
  401e37:	pop    rbp
  401e38:	ret    
  401e39:	nop    DWORD PTR [rax+0x0]
  401e40:	mov    DWORD PTR [rip+0x6836],0x1        # 0x408680
  401e4a:	call   0x402960
  401e4f:	cdqe   
  401e51:	lea    rax,[rax+rax*2]
  401e55:	lea    rax,[rax*8+0x1e]
  401e5d:	and    rax,0xfffffffffffffff0
  401e61:	call   0x402b80
  401e66:	mov    rsi,QWORD PTR [rip+0x3903]        # 0x405770
  401e6d:	mov    rbx,QWORD PTR [rip+0x390c]        # 0x405780
  401e74:	sub    rsp,rax
  401e77:	mov    DWORD PTR [rip+0x6803],0x0        # 0x408684
  401e81:	lea    rax,[rsp+0x20]
  401e86:	mov    QWORD PTR [rip+0x67fb],rax        # 0x408688
  401e8d:	mov    rax,rsi
  401e90:	sub    rax,rbx
  401e93:	cmp    rax,0x7
  401e97:	jle    0x401e2b
  401e99:	cmp    rax,0xb
  401e9d:	jle    0x401ec5
  401e9f:	mov    r11d,DWORD PTR [rbx]
  401ea2:	test   r11d,r11d
  401ea5:	jne    0x401ff0
  401eab:	mov    r10d,DWORD PTR [rbx+0x4]
  401eaf:	test   r10d,r10d
  401eb2:	jne    0x401ff0
  401eb8:	mov    r9d,DWORD PTR [rbx+0x8]
  401ebc:	test   r9d,r9d
  401ebf:	jne    0x401edc
  401ec1:	add    rbx,0xc
  401ec5:	mov    r8d,DWORD PTR [rbx]
  401ec8:	test   r8d,r8d
  401ecb:	jne    0x401ff0
  401ed1:	mov    ecx,DWORD PTR [rbx+0x4]
  401ed4:	test   ecx,ecx
  401ed6:	jne    0x401ff0
  401edc:	mov    edx,DWORD PTR [rbx+0x8]
  401edf:	cmp    edx,0x1
  401ee2:	jne    0x4020fc
  401ee8:	add    rbx,0xc
  401eec:	cmp    rbx,rsi
  401eef:	jae    0x401e2b
  401ef5:	mov    r12,QWORD PTR [rip+0x38a4]        # 0x4057a0
  401efc:	lea    r13,[rbp-0x30]
  401f00:	movabs r14,0xffffffff00000000
  401f0a:	mov    ecx,DWORD PTR [rbx+0x4]
  401f0d:	mov    eax,DWORD PTR [rbx]
  401f0f:	movzx  edx,BYTE PTR [rbx+0x8]
  401f13:	add    rax,r12
  401f16:	add    rcx,r12
  401f19:	cmp    edx,0x10
  401f1c:	mov    r8,QWORD PTR [rax]
  401f1f:	je     0x402066
  401f25:	jbe    0x40202d
  401f2b:	cmp    edx,0x20
  401f2e:	je     0x4020af
  401f34:	cmp    edx,0x40
  401f37:	jne    0x40209b
  401f3d:	sub    r8,rax
  401f40:	mov    rdx,r13
  401f43:	mov    rdi,r13
  401f46:	mov    rax,r8
  401f49:	add    rax,QWORD PTR [rcx]
  401f4c:	mov    r8d,0x8
  401f52:	mov    QWORD PTR [rbp-0x30],rax
  401f56:	call   0x401ca0
  401f5b:	add    rbx,0xc
  401f5f:	cmp    rbx,rsi
  401f62:	jb     0x401f0a
  401f64:	mov    eax,DWORD PTR [rip+0x671a]        # 0x408684
  401f6a:	xor    ebx,ebx
  401f6c:	xor    esi,esi
  401f6e:	test   eax,eax
  401f70:	jle    0x401e2b
  401f76:	mov    r14,QWORD PTR [rip+0x73e3]        # 0x409360
  401f7d:	lea    r13,[rbp-0x34]
  401f81:	mov    r12,QWORD PTR [rip+0x73d0]        # 0x409358
  401f88:	jmp    0x401fa3
  401f8a:	nop    WORD PTR [rax+rax*1+0x0]
  401f90:	add    esi,0x1
  401f93:	add    rbx,0x18
  401f97:	cmp    esi,DWORD PTR [rip+0x66e7]        # 0x408684
  401f9d:	jge    0x401e2b
  401fa3:	mov    rax,rbx
  401fa6:	add    rax,QWORD PTR [rip+0x66db]        # 0x408688
  401fad:	mov    edx,DWORD PTR [rax]
  401faf:	test   edx,edx
  401fb1:	je     0x401f90
  401fb3:	mov    rcx,QWORD PTR [rax+0x8]
  401fb7:	mov    r8d,0x30
  401fbd:	mov    rdx,rdi
  401fc0:	call   r14
  401fc3:	test   rax,rax
  401fc6:	je     0x4020de
  401fcc:	mov    rax,QWORD PTR [rip+0x66b5]        # 0x408688
  401fd3:	mov    r9,r13
  401fd6:	mov    rdx,QWORD PTR [rbp-0x18]
  401fda:	mov    rcx,QWORD PTR [rbp-0x30]
  401fde:	mov    r8d,DWORD PTR [rax+rbx*1]
  401fe2:	call   r12
  401fe5:	jmp    0x401f90
  401fe7:	nop    WORD PTR [rax+rax*1+0x0]
  401ff0:	cmp    rbx,rsi
  401ff3:	jae    0x401e2b
  401ff9:	mov    r12,QWORD PTR [rip+0x37a0]        # 0x4057a0
  402000:	lea    rdi,[rbp-0x30]
  402004:	mov    ecx,DWORD PTR [rbx+0x4]
  402007:	mov    eax,DWORD PTR [rbx]
  402009:	mov    r8d,0x4
  40200f:	mov    rdx,rdi
  402012:	add    rbx,0x8
  402016:	add    rcx,r12
  402019:	add    eax,DWORD PTR [rcx]
  40201b:	mov    DWORD PTR [rbp-0x30],eax
  40201e:	call   0x401ca0
  402023:	cmp    rbx,rsi
  402026:	jb     0x402004
  402028:	jmp    0x401f64
  40202d:	cmp    edx,0x8
  402030:	jne    0x40209b
  402032:	movzx  edx,BYTE PTR [rcx]
  402035:	mov    rdi,r13
  402038:	mov    r10,rdx
  40203b:	or     r10,0xffffffffffffff00
  402042:	test   dl,dl
  402044:	cmovs  rdx,r10
  402048:	sub    rdx,rax
  40204b:	lea    rax,[r8+rdx*1]
  40204f:	mov    r8d,0x1
  402055:	mov    rdx,r13
  402058:	mov    QWORD PTR [rbp-0x30],rax
  40205c:	call   0x401ca0
  402061:	jmp    0x401f5b
  402066:	movzx  edx,WORD PTR [rcx]
  402069:	mov    rdi,r13
  40206c:	mov    r10,rdx
  40206f:	or     r10,0xffffffffffff0000
  402076:	test   dx,dx
  402079:	cmovs  rdx,r10
  40207d:	sub    rdx,rax
  402080:	lea    rax,[r8+rdx*1]
  402084:	mov    r8d,0x2
  40208a:	mov    rdx,r13
  40208d:	mov    QWORD PTR [rbp-0x30],rax
  402091:	call   0x401ca0
  402096:	jmp    0x401f5b
  40209b:	lea    rcx,[rip+0x3516]        # 0x4055b8
  4020a2:	mov    QWORD PTR [rbp-0x30],0x0
  4020aa:	call   0x401c30
  4020af:	mov    edx,DWORD PTR [rcx]
  4020b1:	mov    rdi,r13
  4020b4:	mov    r10,rdx
  4020b7:	or     r10,r14
  4020ba:	test   edx,edx
  4020bc:	cmovs  rdx,r10
  4020c0:	sub    rdx,rax
  4020c3:	lea    rax,[r8+rdx*1]
  4020c7:	mov    r8d,0x4
  4020cd:	mov    rdx,r13
  4020d0:	mov    QWORD PTR [rbp-0x30],rax
  4020d4:	call   0x401ca0
  4020d9:	jmp    0x401f5b
  4020de:	add    rbx,QWORD PTR [rip+0x65a3]        # 0x408688
  4020e5:	lea    rcx,[rip+0x3434]        # 0x405520
  4020ec:	mov    rax,QWORD PTR [rbx+0x10]
  4020f0:	mov    r8,QWORD PTR [rbx+0x8]
  4020f4:	mov    edx,DWORD PTR [rax+0x8]
  4020f7:	call   0x401c30
  4020fc:	lea    rcx,[rip+0x347d]        # 0x405580
  402103:	call   0x401c30
  402108:	nop
  402109:	nop
  40210a:	nop
  40210b:	nop
  40210c:	nop
  40210d:	nop
  40210e:	nop
  40210f:	nop
  402110:	sub    rsp,0x28
  402114:	mov    eax,DWORD PTR [rcx]
  402116:	cmp    eax,0xc0000091
  40211b:	ja     0x402180
  40211d:	cmp    eax,0xc000008d
  402122:	jae    0x40219f
  402124:	cmp    eax,0xc0000008
  402129:	je     0x402240
  40212f:	ja     0x402210
  402135:	cmp    eax,0x80000002
  40213a:	je     0x402240
  402140:	cmp    eax,0xc0000005
  402145:	jne    0x40221e
  40214b:	xor    edx,edx
  40214d:	mov    ecx,0xb
  402152:	call   0x403838
  402157:	cmp    rax,0x1
  40215b:	je     0x4022a0
  402161:	test   rax,rax
  402164:	je     0x402280
  40216a:	mov    ecx,0xb
  40216f:	call   rax
  402171:	xor    eax,eax
  402173:	add    rsp,0x28
  402177:	ret    
  402178:	nop    DWORD PTR [rax+rax*1+0x0]
  402180:	cmp    eax,0xc0000094
  402185:	je     0x402250
  40218b:	ja     0x4021d0
  40218d:	cmp    eax,0xc0000092
  402192:	je     0x402240
  402198:	cmp    eax,0xc0000093
  40219d:	jne    0x40221e
  40219f:	xor    edx,edx
  4021a1:	mov    ecx,0x8
  4021a6:	call   0x403838
  4021ab:	cmp    rax,0x1
  4021af:	mov    rdx,rax
  4021b2:	je     0x402228
  4021b4:	test   rdx,rdx
  4021b7:	mov    eax,0x1
  4021bc:	je     0x402173
  4021be:	mov    ecx,0x8
  4021c3:	call   rdx
  4021c5:	xor    eax,eax
  4021c7:	add    rsp,0x28
  4021cb:	ret    
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	cmp    eax,0xc0000095
  4021d5:	je     0x402240
  4021d7:	cmp    eax,0xc0000096
  4021dc:	jne    0x40221e
  4021de:	xor    edx,edx
  4021e0:	mov    ecx,0x4
  4021e5:	call   0x403838
  4021ea:	cmp    rax,0x1
  4021ee:	je     0x40228a
  4021f4:	test   rax,rax
  4021f7:	je     0x402280
  4021fd:	mov    ecx,0x4
  402202:	call   rax
  402204:	xor    eax,eax
  402206:	jmp    0x402173
  40220b:	nop    DWORD PTR [rax+rax*1+0x0]
  402210:	cmp    eax,0xc000001d
  402215:	je     0x4021de
  402217:	cmp    eax,0xc000008c
  40221c:	je     0x402240
  40221e:	mov    eax,0x1
  402223:	add    rsp,0x28
  402227:	ret    
  402228:	mov    edx,0x1
  40222d:	mov    ecx,0x8
  402232:	call   0x403838
  402237:	call   0x401c00
  40223c:	nop    DWORD PTR [rax+0x0]
  402240:	xor    eax,eax
  402242:	add    rsp,0x28
  402246:	ret    
  402247:	nop    WORD PTR [rax+rax*1+0x0]
  402250:	xor    edx,edx
  402252:	mov    ecx,0x8
  402257:	call   0x403838
  40225c:	cmp    rax,0x1
  402260:	mov    rdx,rax
  402263:	jne    0x4021b4
  402269:	mov    edx,0x1
  40226e:	mov    ecx,0x8
  402273:	call   0x403838
  402278:	xor    eax,eax
  40227a:	jmp    0x402173
  40227f:	nop
  402280:	mov    eax,0x4
  402285:	add    rsp,0x28
  402289:	ret    
  40228a:	mov    edx,0x1
  40228f:	mov    ecx,0x4
  402294:	call   0x403838
  402299:	xor    eax,eax
  40229b:	jmp    0x402173
  4022a0:	mov    edx,0x1
  4022a5:	mov    ecx,0xb
  4022aa:	call   0x403838
  4022af:	xor    eax,eax
  4022b1:	jmp    0x402173
  4022b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4022c0:	push   r12
  4022c2:	push   rbp
  4022c3:	push   rdi
  4022c4:	push   rsi
  4022c5:	push   rbx
  4022c6:	sub    rsp,0x20
  4022ca:	call   0x402a30
  4022cf:	mov    rbp,rax
  4022d2:	mov    eax,DWORD PTR [rip+0x63f0]        # 0x4086c8
  4022d8:	test   eax,eax
  4022da:	jne    0x402301
  4022dc:	test   rbp,rbp
  4022df:	je     0x402301
  4022e1:	lea    rcx,[rip+0x3308]        # 0x4055f0
  4022e8:	mov    DWORD PTR [rip+0x63d6],0x1        # 0x4086c8
  4022f2:	call   0x402870
  4022f7:	test   rax,rax
  4022fa:	je     0x402310
  4022fc:	mov    eax,0x1
  402301:	add    rsp,0x20
  402305:	pop    rbx
  402306:	pop    rsi
  402307:	pop    rdi
  402308:	pop    rbp
  402309:	pop    r12
  40230b:	ret    
  40230c:	nop    DWORD PTR [rax+0x0]
  402310:	lea    rbx,[rip+0x64e9]        # 0x408800
  402317:	mov    ecx,0x30
  40231c:	lea    rdx,[rip+0x63dd]        # 0x408700
  402323:	lea    r12,[rip+0xfffffffffffffde6]        # 0x402110
  40232a:	xor    esi,esi
  40232c:	mov    rdi,rbx
  40232f:	rep stos QWORD PTR es:[rdi],rax
  402332:	mov    rdi,rdx
  402335:	sub    r12,rbp
  402338:	mov    cl,0x20
  40233a:	rep stos QWORD PTR es:[rdi],rax
  40233d:	mov    rdi,rdx
  402340:	jmp    0x402370
  402342:	mov    BYTE PTR [rdi],0x9
  402345:	mov    DWORD PTR [rdi+0x4],r12d
  402349:	add    rsi,0x1
  40234d:	mov    edx,DWORD PTR [rax+0xc]
  402350:	add    rbx,0xc
  402354:	mov    DWORD PTR [rbx-0xc],edx
  402357:	add    edx,DWORD PTR [rax+0x8]
  40235a:	mov    rax,rdi
  40235d:	sub    rax,rbp
  402360:	add    rdi,0x8
  402364:	mov    DWORD PTR [rbx-0x4],eax
  402367:	mov    DWORD PTR [rbx-0x8],edx
  40236a:	cmp    rsi,0x20
  40236e:	je     0x4023a5
  402370:	mov    rcx,rsi
  402373:	call   0x4029a0
  402378:	test   rax,rax
  40237b:	jne    0x402342
  40237d:	test   rsi,rsi
  402380:	je     0x4022fc
  402386:	mov    edx,esi
  402388:	nop    DWORD PTR [rax+rax*1+0x0]
  402390:	mov    r8,rbp
  402393:	lea    rcx,[rip+0x6466]        # 0x408800
  40239a:	call   QWORD PTR [rip+0x6f70]        # 0x409310
  4023a0:	jmp    0x4022fc
  4023a5:	mov    edx,0x20
  4023aa:	jmp    0x402390
  4023ac:	nop    DWORD PTR [rax+0x0]
  4023b0:	push   rbx
  4023b1:	sub    rsp,0x20
  4023b5:	mov    rdx,QWORD PTR [rcx]
  4023b8:	mov    eax,DWORD PTR [rdx]
  4023ba:	mov    r8d,eax
  4023bd:	and    r8d,0x20ffffff
  4023c4:	cmp    r8d,0x20474343
  4023cb:	je     0x4024d0
  4023d1:	cmp    eax,0xc0000091
  4023d6:	mov    rbx,rcx
  4023d9:	ja     0x402460
  4023df:	cmp    eax,0xc000008d
  4023e4:	jae    0x402477
  4023ea:	cmp    eax,0xc0000008
  4023ef:	je     0x402423
  4023f1:	ja     0x402430
  4023f3:	cmp    eax,0x80000002
  4023f8:	je     0x402423
  4023fa:	cmp    eax,0xc0000005
  4023ff:	jne    0x402442
  402401:	xor    edx,edx
  402403:	mov    ecx,0xb
  402408:	call   0x403838
  40240d:	cmp    rax,0x1
  402411:	je     0x402540
  402417:	test   rax,rax
  40241a:	je     0x402442
  40241c:	mov    ecx,0xb
  402421:	call   rax
  402423:	mov    eax,0xffffffff
  402428:	add    rsp,0x20
  40242c:	pop    rbx
  40242d:	ret    
  40242e:	xchg   ax,ax
  402430:	cmp    eax,0xc000001d
  402435:	je     0x4024f6
  40243b:	cmp    eax,0xc000008c
  402440:	je     0x402423
  402442:	mov    rax,QWORD PTR [rip+0x6277]        # 0x4086c0
  402449:	test   rax,rax
  40244c:	je     0x402428
  40244e:	mov    rcx,rbx
  402451:	add    rsp,0x20
  402455:	pop    rbx
  402456:	rex.W jmp rax
  402459:	nop    DWORD PTR [rax+0x0]
  402460:	cmp    eax,0xc0000094
  402465:	je     0x4024a2
  402467:	ja     0x4024e0
  402469:	cmp    eax,0xc0000092
  40246e:	je     0x402423
  402470:	cmp    eax,0xc0000093
  402475:	jne    0x402442
  402477:	xor    edx,edx
  402479:	mov    ecx,0x8
  40247e:	call   0x403838
  402483:	cmp    rax,0x1
  402487:	jne    0x4024b4
  402489:	mov    edx,0x1
  40248e:	mov    ecx,0x8
  402493:	call   0x403838
  402498:	call   0x401c00
  40249d:	jmp    0x402423
  4024a2:	xor    edx,edx
  4024a4:	mov    ecx,0x8
  4024a9:	call   0x403838
  4024ae:	cmp    rax,0x1
  4024b2:	je     0x402522
  4024b4:	test   rax,rax
  4024b7:	je     0x402442
  4024b9:	mov    ecx,0x8
  4024be:	call   rax
  4024c0:	mov    eax,0xffffffff
  4024c5:	jmp    0x402428
  4024ca:	nop    WORD PTR [rax+rax*1+0x0]
  4024d0:	test   BYTE PTR [rdx+0x4],0x1
  4024d4:	jne    0x4023d1
  4024da:	jmp    0x402423
  4024df:	nop
  4024e0:	cmp    eax,0xc0000095
  4024e5:	je     0x402423
  4024eb:	cmp    eax,0xc0000096
  4024f0:	jne    0x402442
  4024f6:	xor    edx,edx
  4024f8:	mov    ecx,0x4
  4024fd:	call   0x403838
  402502:	cmp    rax,0x1
  402506:	je     0x402554
  402508:	test   rax,rax
  40250b:	je     0x402442
  402511:	mov    ecx,0x4
  402516:	call   rax
  402518:	mov    eax,0xffffffff
  40251d:	jmp    0x402428
  402522:	mov    edx,0x1
  402527:	mov    ecx,0x8
  40252c:	call   0x403838
  402531:	jmp    0x402423
  402536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402540:	mov    edx,0x1
  402545:	mov    ecx,0xb
  40254a:	call   0x403838
  40254f:	jmp    0x402423
  402554:	mov    edx,0x1
  402559:	mov    ecx,0x4
  40255e:	call   0x403838
  402563:	jmp    0x402423
  402568:	nop
  402569:	nop
  40256a:	nop
  40256b:	nop
  40256c:	nop
  40256d:	nop
  40256e:	nop
  40256f:	nop
  402570:	push   rbp
  402571:	push   rdi
  402572:	push   rsi
  402573:	push   rbx
  402574:	sub    rsp,0x28
  402578:	lea    rcx,[rip+0x6421]        # 0x4089a0
  40257f:	call   QWORD PTR [rip+0x6d33]        # 0x4092b8
  402585:	mov    rbx,QWORD PTR [rip+0x63f4]        # 0x408980
  40258c:	test   rbx,rbx
  40258f:	je     0x4025c4
  402591:	mov    rbp,QWORD PTR [rip+0x6db0]        # 0x409348
  402598:	mov    rdi,QWORD PTR [rip+0x6d39]        # 0x4092d8
  40259f:	nop
  4025a0:	mov    ecx,DWORD PTR [rbx]
  4025a2:	call   rbp
  4025a4:	mov    rsi,rax
  4025a7:	call   rdi
  4025a9:	test   eax,eax
  4025ab:	jne    0x4025bb
  4025ad:	test   rsi,rsi
  4025b0:	je     0x4025bb
  4025b2:	mov    rax,QWORD PTR [rbx+0x8]
  4025b6:	mov    rcx,rsi
  4025b9:	call   rax
  4025bb:	mov    rbx,QWORD PTR [rbx+0x10]
  4025bf:	test   rbx,rbx
  4025c2:	jne    0x4025a0
  4025c4:	mov    rax,QWORD PTR [rip+0x6d35]        # 0x409300
  4025cb:	lea    rcx,[rip+0x63ce]        # 0x4089a0
  4025d2:	add    rsp,0x28
  4025d6:	pop    rbx
  4025d7:	pop    rsi
  4025d8:	pop    rdi
  4025d9:	pop    rbp
  4025da:	rex.W jmp rax
  4025dd:	nop    DWORD PTR [rax]
  4025e0:	push   rdi
  4025e1:	push   rsi
  4025e2:	push   rbx
  4025e3:	sub    rsp,0x20
  4025e7:	mov    eax,DWORD PTR [rip+0x639b]        # 0x408988
  4025ed:	test   eax,eax
  4025ef:	jne    0x402600
  4025f1:	add    rsp,0x20
  4025f5:	pop    rbx
  4025f6:	pop    rsi
  4025f7:	pop    rdi
  4025f8:	ret    
  4025f9:	nop    DWORD PTR [rax+0x0]
  402600:	mov    rsi,rdx
  402603:	mov    edi,ecx
  402605:	mov    edx,0x18
  40260a:	mov    ecx,0x1
  40260f:	call   0x403888
  402614:	test   rax,rax
  402617:	mov    rbx,rax
  40261a:	je     0x402658
  40261c:	mov    DWORD PTR [rax],edi
  40261e:	mov    QWORD PTR [rax+0x8],rsi
  402622:	lea    rcx,[rip+0x6377]        # 0x4089a0
  402629:	call   QWORD PTR [rip+0x6c89]        # 0x4092b8
  40262f:	mov    rax,QWORD PTR [rip+0x634a]        # 0x408980
  402636:	lea    rcx,[rip+0x6363]        # 0x4089a0
  40263d:	mov    QWORD PTR [rip+0x633c],rbx        # 0x408980
  402644:	mov    QWORD PTR [rbx+0x10],rax
  402648:	call   QWORD PTR [rip+0x6cb2]        # 0x409300
  40264e:	xor    eax,eax
  402650:	add    rsp,0x20
  402654:	pop    rbx
  402655:	pop    rsi
  402656:	pop    rdi
  402657:	ret    
  402658:	mov    eax,0xffffffff
  40265d:	jmp    0x4025f1
  40265f:	nop
  402660:	push   rbx
  402661:	sub    rsp,0x20
  402665:	mov    eax,DWORD PTR [rip+0x631d]        # 0x408988
  40266b:	test   eax,eax
  40266d:	jne    0x402680
  40266f:	xor    eax,eax
  402671:	add    rsp,0x20
  402675:	pop    rbx
  402676:	ret    
  402677:	nop    WORD PTR [rax+rax*1+0x0]
  402680:	mov    ebx,ecx
  402682:	lea    rcx,[rip+0x6317]        # 0x4089a0
  402689:	call   QWORD PTR [rip+0x6c29]        # 0x4092b8
  40268f:	mov    rdx,QWORD PTR [rip+0x62ea]        # 0x408980
  402696:	test   rdx,rdx
  402699:	je     0x4026b7
  40269b:	mov    eax,DWORD PTR [rdx]
  40269d:	cmp    eax,ebx
  40269f:	jne    0x4026ae
  4026a1:	jmp    0x4026ef
  4026a3:	mov    r8d,DWORD PTR [rax]
  4026a6:	cmp    r8d,ebx
  4026a9:	je     0x4026d0
  4026ab:	mov    rdx,rax
  4026ae:	mov    rax,QWORD PTR [rdx+0x10]
  4026b2:	test   rax,rax
  4026b5:	jne    0x4026a3
  4026b7:	lea    rcx,[rip+0x62e2]        # 0x4089a0
  4026be:	call   QWORD PTR [rip+0x6c3c]        # 0x409300
  4026c4:	xor    eax,eax
  4026c6:	add    rsp,0x20
  4026ca:	pop    rbx
  4026cb:	ret    
  4026cc:	nop    DWORD PTR [rax+0x0]
  4026d0:	mov    rcx,rax
  4026d3:	mov    rax,QWORD PTR [rax+0x10]
  4026d7:	mov    QWORD PTR [rdx+0x10],rax
  4026db:	call   0x403868
  4026e0:	lea    rcx,[rip+0x62b9]        # 0x4089a0
  4026e7:	call   QWORD PTR [rip+0x6c13]        # 0x409300
  4026ed:	jmp    0x4026c4
  4026ef:	mov    rax,QWORD PTR [rdx+0x10]
  4026f3:	mov    rcx,rdx
  4026f6:	mov    QWORD PTR [rip+0x6283],rax        # 0x408980
  4026fd:	jmp    0x4026db
  4026ff:	nop
  402700:	push   rbx
  402701:	sub    rsp,0x20
  402705:	cmp    edx,0x1
  402708:	je     0x4027a0
  40270e:	jb     0x402740
  402710:	cmp    edx,0x2
  402713:	je     0x402730
  402715:	cmp    edx,0x3
  402718:	jne    0x402735
  40271a:	mov    eax,DWORD PTR [rip+0x6268]        # 0x408988
  402720:	test   eax,eax
  402722:	je     0x402735
  402724:	call   0x402570
  402729:	jmp    0x402735
  40272b:	nop    DWORD PTR [rax+rax*1+0x0]
  402730:	call   0x401c00
  402735:	mov    eax,0x1
  40273a:	add    rsp,0x20
  40273e:	pop    rbx
  40273f:	ret    
  402740:	mov    eax,DWORD PTR [rip+0x6242]        # 0x408988
  402746:	test   eax,eax
  402748:	jne    0x4027d0
  40274e:	mov    eax,DWORD PTR [rip+0x6234]        # 0x408988
  402754:	cmp    eax,0x1
  402757:	jne    0x402735
  402759:	mov    rcx,QWORD PTR [rip+0x6220]        # 0x408980
  402760:	test   rcx,rcx
  402763:	je     0x402776
  402765:	mov    rbx,QWORD PTR [rcx+0x10]
  402769:	call   0x403868
  40276e:	test   rbx,rbx
  402771:	mov    rcx,rbx
  402774:	jne    0x402765
  402776:	lea    rcx,[rip+0x6223]        # 0x4089a0
  40277d:	mov    QWORD PTR [rip+0x61f8],0x0        # 0x408980
  402788:	mov    DWORD PTR [rip+0x61f6],0x0        # 0x408988
  402792:	call   QWORD PTR [rip+0x6b18]        # 0x4092b0
  402798:	jmp    0x402735
  40279a:	nop    WORD PTR [rax+rax*1+0x0]
  4027a0:	mov    eax,DWORD PTR [rip+0x61e2]        # 0x408988
  4027a6:	test   eax,eax
  4027a8:	je     0x4027c0
  4027aa:	mov    eax,0x1
  4027af:	mov    DWORD PTR [rip+0x61cf],0x1        # 0x408988
  4027b9:	add    rsp,0x20
  4027bd:	pop    rbx
  4027be:	ret    
  4027bf:	nop
  4027c0:	lea    rcx,[rip+0x61d9]        # 0x4089a0
  4027c7:	call   QWORD PTR [rip+0x6b2b]        # 0x4092f8
  4027cd:	jmp    0x4027aa
  4027cf:	nop
  4027d0:	call   0x402570
  4027d5:	jmp    0x40274e
  4027da:	nop
  4027db:	nop
  4027dc:	nop
  4027dd:	nop
  4027de:	nop
  4027df:	nop
  4027e0:	movsxd rax,DWORD PTR [rcx+0x3c]
  4027e4:	add    rcx,rax
  4027e7:	xor    eax,eax
  4027e9:	cmp    DWORD PTR [rcx],0x4550
  4027ef:	je     0x4027f3
  4027f1:	repz ret 
  4027f3:	xor    eax,eax
  4027f5:	cmp    WORD PTR [rcx+0x18],0x20b
  4027fb:	sete   al
  4027fe:	ret    
  4027ff:	nop
  402800:	cmp    WORD PTR [rcx],0x5a4d
  402805:	je     0x402810
  402807:	xor    eax,eax
  402809:	ret    
  40280a:	nop    WORD PTR [rax+rax*1+0x0]
  402810:	jmp    0x4027e0
  402812:	nop    DWORD PTR [rax+0x0]
  402816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402820:	movsxd rax,DWORD PTR [rcx+0x3c]
  402824:	add    rcx,rax
  402827:	movzx  eax,WORD PTR [rcx+0x14]
  40282b:	lea    rax,[rcx+rax*1+0x18]
  402830:	movzx  ecx,WORD PTR [rcx+0x6]
  402834:	test   ecx,ecx
  402836:	je     0x402861
  402838:	sub    ecx,0x1
  40283b:	lea    rcx,[rcx+rcx*4]
  40283f:	lea    r9,[rax+rcx*8+0x28]
  402844:	mov    r8d,DWORD PTR [rax+0xc]
  402848:	cmp    r8,rdx
  40284b:	mov    rcx,r8
  40284e:	ja     0x402858
  402850:	add    ecx,DWORD PTR [rax+0x8]
  402853:	cmp    rdx,rcx
  402856:	jb     0x402863
  402858:	add    rax,0x28
  40285c:	cmp    rax,r9
  40285f:	jne    0x402844
  402861:	xor    eax,eax
  402863:	repz ret 
  402865:	nop
  402866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402870:	push   rdi
  402871:	push   rsi
  402872:	push   rbx
  402873:	sub    rsp,0x20
  402877:	mov    rsi,rcx
  40287a:	call   0x403828
  40287f:	cmp    rax,0x8
  402883:	ja     0x4028a0
  402885:	mov    rbx,QWORD PTR [rip+0x2f14]        # 0x4057a0
  40288c:	xor    edi,edi
  40288e:	cmp    WORD PTR [rbx],0x5a4d
  402893:	je     0x4028b0
  402895:	mov    rax,rdi
  402898:	add    rsp,0x20
  40289c:	pop    rbx
  40289d:	pop    rsi
  40289e:	pop    rdi
  40289f:	ret    
  4028a0:	xor    edi,edi
  4028a2:	mov    rax,rdi
  4028a5:	add    rsp,0x20
  4028a9:	pop    rbx
  4028aa:	pop    rsi
  4028ab:	pop    rdi
  4028ac:	ret    
  4028ad:	nop    DWORD PTR [rax]
  4028b0:	mov    rcx,rbx
  4028b3:	call   0x4027e0
  4028b8:	test   eax,eax
  4028ba:	je     0x402895
  4028bc:	movsxd rdx,DWORD PTR [rbx+0x3c]
  4028c0:	add    rdx,rbx
  4028c3:	movzx  eax,WORD PTR [rdx+0x14]
  4028c7:	lea    rbx,[rdx+rax*1+0x18]
  4028cc:	movzx  eax,WORD PTR [rdx+0x6]
  4028d0:	test   eax,eax
  4028d2:	je     0x402895
  4028d4:	sub    eax,0x1
  4028d7:	lea    rax,[rax+rax*4]
  4028db:	lea    rdi,[rbx+rax*8+0x28]
  4028e0:	jmp    0x4028eb
  4028e2:	add    rbx,0x28
  4028e6:	cmp    rbx,rdi
  4028e9:	je     0x4028a0
  4028eb:	mov    r8d,0x8
  4028f1:	mov    rdx,rsi
  4028f4:	mov    rcx,rbx
  4028f7:	call   0x403820
  4028fc:	test   eax,eax
  4028fe:	jne    0x4028e2
  402900:	mov    rdi,rbx
  402903:	mov    rax,rdi
  402906:	add    rsp,0x20
  40290a:	pop    rbx
  40290b:	pop    rsi
  40290c:	pop    rdi
  40290d:	ret    
  40290e:	xchg   ax,ax
  402910:	push   rsi
  402911:	push   rbx
  402912:	sub    rsp,0x28
  402916:	mov    rbx,QWORD PTR [rip+0x2e83]        # 0x4057a0
  40291d:	cmp    WORD PTR [rbx],0x5a4d
  402922:	je     0x402930
  402924:	xor    eax,eax
  402926:	add    rsp,0x28
  40292a:	pop    rbx
  40292b:	pop    rsi
  40292c:	ret    
  40292d:	nop    DWORD PTR [rax]
  402930:	mov    rsi,rcx
  402933:	mov    rcx,rbx
  402936:	call   0x4027e0
  40293b:	test   eax,eax
  40293d:	je     0x402924
  40293f:	sub    rsi,rbx
  402942:	mov    rcx,rbx
  402945:	mov    rdx,rsi
  402948:	add    rsp,0x28
  40294c:	pop    rbx
  40294d:	pop    rsi
  40294e:	jmp    0x402820
  402953:	nop    DWORD PTR [rax]
  402956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402960:	push   rbx
  402961:	sub    rsp,0x20
  402965:	mov    rbx,QWORD PTR [rip+0x2e34]        # 0x4057a0
  40296c:	xor    eax,eax
  40296e:	cmp    WORD PTR [rbx],0x5a4d
  402973:	je     0x402980
  402975:	add    rsp,0x20
  402979:	pop    rbx
  40297a:	ret    
  40297b:	nop    DWORD PTR [rax+rax*1+0x0]
  402980:	mov    rcx,rbx
  402983:	call   0x4027e0
  402988:	test   eax,eax
  40298a:	je     0x402975
  40298c:	movsxd rax,DWORD PTR [rbx+0x3c]
  402990:	movzx  eax,WORD PTR [rax+rbx*1+0x6]
  402995:	add    rsp,0x20
  402999:	pop    rbx
  40299a:	ret    
  40299b:	nop    DWORD PTR [rax+rax*1+0x0]
  4029a0:	push   rdi
  4029a1:	push   rsi
  4029a2:	push   rbx
  4029a3:	sub    rsp,0x20
  4029a7:	mov    rsi,QWORD PTR [rip+0x2df2]        # 0x4057a0
  4029ae:	xor    edi,edi
  4029b0:	mov    rbx,rcx
  4029b3:	cmp    WORD PTR [rsi],0x5a4d
  4029b8:	je     0x4029c5
  4029ba:	mov    rax,rdi
  4029bd:	add    rsp,0x20
  4029c1:	pop    rbx
  4029c2:	pop    rsi
  4029c3:	pop    rdi
  4029c4:	ret    
  4029c5:	mov    rcx,rsi
  4029c8:	call   0x4027e0
  4029cd:	test   eax,eax
  4029cf:	je     0x4029ba
  4029d1:	movsxd rax,DWORD PTR [rsi+0x3c]
  4029d5:	add    rsi,rax
  4029d8:	movzx  eax,WORD PTR [rsi+0x14]
  4029dc:	lea    rdx,[rsi+rax*1+0x18]
  4029e1:	movzx  eax,WORD PTR [rsi+0x6]
  4029e5:	test   eax,eax
  4029e7:	je     0x4029ba
  4029e9:	sub    eax,0x1
  4029ec:	lea    rax,[rax+rax*4]
  4029f0:	lea    rax,[rdx+rax*8+0x28]
  4029f5:	test   BYTE PTR [rdx+0x27],0x20
  4029f9:	je     0x402a04
  4029fb:	test   rbx,rbx
  4029fe:	je     0x402a20
  402a00:	sub    rbx,0x1
  402a04:	add    rdx,0x28
  402a08:	cmp    rdx,rax
  402a0b:	jne    0x4029f5
  402a0d:	xor    edi,edi
  402a0f:	mov    rax,rdi
  402a12:	add    rsp,0x20
  402a16:	pop    rbx
  402a17:	pop    rsi
  402a18:	pop    rdi
  402a19:	ret    
  402a1a:	nop    WORD PTR [rax+rax*1+0x0]
  402a20:	mov    rdi,rdx
  402a23:	mov    rax,rdi
  402a26:	add    rsp,0x20
  402a2a:	pop    rbx
  402a2b:	pop    rsi
  402a2c:	pop    rdi
  402a2d:	ret    
  402a2e:	xchg   ax,ax
  402a30:	push   rsi
  402a31:	push   rbx
  402a32:	sub    rsp,0x28
  402a36:	mov    rsi,QWORD PTR [rip+0x2d63]        # 0x4057a0
  402a3d:	xor    ebx,ebx
  402a3f:	cmp    WORD PTR [rsi],0x5a4d
  402a44:	je     0x402a50
  402a46:	mov    rax,rbx
  402a49:	add    rsp,0x28
  402a4d:	pop    rbx
  402a4e:	pop    rsi
  402a4f:	ret    
  402a50:	mov    rcx,rsi
  402a53:	call   0x4027e0
  402a58:	test   eax,eax
  402a5a:	cmovne rbx,rsi
  402a5e:	mov    rax,rbx
  402a61:	add    rsp,0x28
  402a65:	pop    rbx
  402a66:	pop    rsi
  402a67:	ret    
  402a68:	nop    DWORD PTR [rax+rax*1+0x0]
  402a70:	push   rsi
  402a71:	push   rbx
  402a72:	sub    rsp,0x28
  402a76:	mov    rbx,QWORD PTR [rip+0x2d23]        # 0x4057a0
  402a7d:	xor    eax,eax
  402a7f:	cmp    WORD PTR [rbx],0x5a4d
  402a84:	je     0x402a90
  402a86:	add    rsp,0x28
  402a8a:	pop    rbx
  402a8b:	pop    rsi
  402a8c:	ret    
  402a8d:	nop    DWORD PTR [rax]
  402a90:	mov    rsi,rcx
  402a93:	mov    rcx,rbx
  402a96:	call   0x4027e0
  402a9b:	test   eax,eax
  402a9d:	je     0x402a86
  402a9f:	sub    rsi,rbx
  402aa2:	mov    rcx,rbx
  402aa5:	mov    rdx,rsi
  402aa8:	call   0x402820
  402aad:	test   rax,rax
  402ab0:	je     0x402ac1
  402ab2:	mov    eax,DWORD PTR [rax+0x24]
  402ab5:	not    eax
  402ab7:	shr    eax,0x1f
  402aba:	add    rsp,0x28
  402abe:	pop    rbx
  402abf:	pop    rsi
  402ac0:	ret    
  402ac1:	xor    eax,eax
  402ac3:	jmp    0x402a86
  402ac5:	nop
  402ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ad0:	push   rbp
  402ad1:	push   rdi
  402ad2:	push   rsi
  402ad3:	push   rbx
  402ad4:	sub    rsp,0x28
  402ad8:	mov    rdi,QWORD PTR [rip+0x2cc1]        # 0x4057a0
  402adf:	xor    ebp,ebp
  402ae1:	mov    esi,ecx
  402ae3:	cmp    WORD PTR [rdi],0x5a4d
  402ae8:	je     0x402b00
  402aea:	mov    rax,rbp
  402aed:	add    rsp,0x28
  402af1:	pop    rbx
  402af2:	pop    rsi
  402af3:	pop    rdi
  402af4:	pop    rbp
  402af5:	ret    
  402af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b00:	mov    rcx,rdi
  402b03:	call   0x4027e0
  402b08:	test   eax,eax
  402b0a:	je     0x402aea
  402b0c:	movsxd rax,DWORD PTR [rdi+0x3c]
  402b10:	mov    edx,DWORD PTR [rdi+rax*1+0x90]
  402b17:	test   edx,edx
  402b19:	je     0x402aea
  402b1b:	mov    ebx,edx
  402b1d:	mov    rcx,rdi
  402b20:	mov    rdx,rbx
  402b23:	call   0x402820
  402b28:	test   rax,rax
  402b2b:	je     0x402aea
  402b2d:	add    rbx,rdi
  402b30:	mov    rdx,rbx
  402b33:	jne    0x402b47
  402b35:	jmp    0x402aea
  402b37:	nop    WORD PTR [rax+rax*1+0x0]
  402b40:	sub    esi,0x1
  402b43:	add    rdx,0x14
  402b47:	mov    ecx,DWORD PTR [rdx+0x4]
  402b4a:	test   ecx,ecx
  402b4c:	jne    0x402b55
  402b4e:	mov    eax,DWORD PTR [rdx+0xc]
  402b51:	test   eax,eax
  402b53:	je     0x402b70
  402b55:	test   esi,esi
  402b57:	jg     0x402b40
  402b59:	mov    ebp,DWORD PTR [rdx+0xc]
  402b5c:	add    rbp,rdi
  402b5f:	mov    rax,rbp
  402b62:	add    rsp,0x28
  402b66:	pop    rbx
  402b67:	pop    rsi
  402b68:	pop    rdi
  402b69:	pop    rbp
  402b6a:	ret    
  402b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b70:	xor    ebp,ebp
  402b72:	mov    rax,rbp
  402b75:	add    rsp,0x28
  402b79:	pop    rbx
  402b7a:	pop    rsi
  402b7b:	pop    rdi
  402b7c:	pop    rbp
  402b7d:	ret    
  402b7e:	nop
  402b7f:	nop
  402b80:	push   rcx
  402b81:	push   rax
  402b82:	cmp    rax,0x1000
  402b88:	lea    rcx,[rsp+0x18]
  402b8d:	jb     0x402ba8
  402b8f:	sub    rcx,0x1000
  402b96:	or     QWORD PTR [rcx],0x0
  402b9a:	sub    rax,0x1000
  402ba0:	cmp    rax,0x1000
  402ba6:	ja     0x402b8f
  402ba8:	sub    rcx,rax
  402bab:	or     QWORD PTR [rcx],0x0
  402baf:	pop    rax
  402bb0:	pop    rcx
  402bb1:	ret    
  402bb2:	nop
  402bb3:	nop
  402bb4:	nop
  402bb5:	nop
  402bb6:	nop
  402bb7:	nop
  402bb8:	nop
  402bb9:	nop
  402bba:	nop
  402bbb:	nop
  402bbc:	nop
  402bbd:	nop
  402bbe:	nop
  402bbf:	nop
  402bc0:	push   r13
  402bc2:	push   r12
  402bc4:	push   rbp
  402bc5:	push   rdi
  402bc6:	push   rsi
  402bc7:	push   rbx
  402bc8:	mov    r12d,edx
  402bcb:	mov    ebp,r8d
  402bce:	mov    edi,edx
  402bd0:	sub    r12d,ecx
  402bd3:	sub    ebp,edx
  402bd5:	mov    eax,r12d
  402bd8:	cdq    
  402bd9:	idiv   ebp
  402bdb:	test   edx,edx
  402bdd:	mov    r13d,edx
  402be0:	je     0x402c65
  402be6:	mov    eax,ebp
  402be8:	jmp    0x402bf3
  402bea:	nop    WORD PTR [rax+rax*1+0x0]
  402bf0:	mov    r13d,edx
  402bf3:	cdq    
  402bf4:	idiv   r13d
  402bf7:	mov    eax,r13d
  402bfa:	test   edx,edx
  402bfc:	jne    0x402bf0
  402bfe:	mov    eax,r8d
  402c01:	sub    eax,ecx
  402c03:	cdq    
  402c04:	idiv   r13d
  402c07:	test   r13d,r13d
  402c0a:	jle    0x402c5c
  402c0c:	movsxd rdx,edi
  402c0f:	xor    esi,esi
  402c11:	lea    rdx,[r9+rdx*8]
  402c15:	test   eax,eax
  402c17:	lea    ecx,[rdi+rsi*1]
  402c1a:	jle    0x402c53
  402c1c:	mov    rbx,QWORD PTR [rdx+rsi*8]
  402c20:	xor    r10d,r10d
  402c23:	mov    r11d,ecx
  402c26:	lea    r8d,[rcx+rbp*1]
  402c2a:	sub    r11d,r12d
  402c2d:	cmp    edi,ecx
  402c2f:	mov    ecx,r11d
  402c32:	cmovg  ecx,r8d
  402c36:	add    r10d,0x1
  402c3a:	movsxd r11,ecx
  402c3d:	cmp    r10d,eax
  402c40:	lea    r8,[r9+r11*8]
  402c44:	mov    r11,QWORD PTR [r8]
  402c47:	mov    QWORD PTR [r8],rbx
  402c4a:	mov    QWORD PTR [rdx+rsi*8],r11
  402c4e:	mov    rbx,r11
  402c51:	jne    0x402c23
  402c53:	add    rsi,0x1
  402c57:	cmp    r13d,esi
  402c5a:	jg     0x402c15
  402c5c:	pop    rbx
  402c5d:	pop    rsi
  402c5e:	pop    rdi
  402c5f:	pop    rbp
  402c60:	pop    r12
  402c62:	pop    r13
  402c64:	ret    
  402c65:	mov    r13d,ebp
  402c68:	jmp    0x402bfe
  402c6a:	nop    WORD PTR [rax+rax*1+0x0]
  402c70:	push   rdi
  402c71:	push   rsi
  402c72:	push   rbx
  402c73:	sub    rsp,0x30
  402c77:	mov    rax,QWORD PTR [rip+0x2b32]        # 0x4057b0
  402c7e:	mov    QWORD PTR [rsp+0x58],rdx
  402c83:	mov    QWORD PTR [rsp+0x60],r8
  402c88:	lea    rsi,[rsp+0x58]
  402c8d:	mov    QWORD PTR [rsp+0x68],r9
  402c92:	mov    rbx,rcx
  402c95:	mov    rax,QWORD PTR [rax]
  402c98:	mov    QWORD PTR [rsp+0x28],rsi
  402c9d:	mov    rax,QWORD PTR [rax]
  402ca0:	mov    rdi,QWORD PTR [rax]
  402ca3:	call   0x4038e8
  402ca8:	lea    rdx,[rip+0x2951]        # 0x405600
  402caf:	lea    rcx,[rax+0x60]
  402cb3:	mov    r8,rdi
  402cb6:	call   0x403878
  402cbb:	test   rbx,rbx
  402cbe:	je     0x402cd4
  402cc0:	call   0x4038e8
  402cc5:	lea    rcx,[rax+0x60]
  402cc9:	mov    r8,rsi
  402ccc:	mov    rdx,rbx
  402ccf:	call   0x403818
  402cd4:	call   0x4038e8
  402cd9:	lea    rdx,[rax+0x60]
  402cdd:	mov    ecx,0xa
  402ce2:	call   0x403870
  402ce7:	nop
  402ce8:	add    rsp,0x30
  402cec:	pop    rbx
  402ced:	pop    rsi
  402cee:	pop    rdi
  402cef:	ret    
  402cf0:	push   r15
  402cf2:	push   r14
  402cf4:	push   r13
  402cf6:	push   r12
  402cf8:	push   rbp
  402cf9:	push   rdi
  402cfa:	push   rsi
  402cfb:	push   rbx
  402cfc:	sub    rsp,0x48
  402d00:	mov    eax,DWORD PTR [rip+0x1366]        # 0x40406c
  402d06:	mov    rbp,QWORD PTR [rip+0x1353]        # 0x404060
  402d0d:	mov    QWORD PTR [rsp+0x90],rcx
  402d15:	mov    QWORD PTR [rsp+0x98],rdx
  402d1d:	mov    edx,0x3d
  402d22:	mov    r14,r8
  402d25:	mov    QWORD PTR [rsp+0xa8],r9
  402d2d:	mov    r13d,DWORD PTR [rsp+0xb0]
  402d35:	mov    DWORD PTR [rsp+0x38],eax
  402d39:	mov    rcx,rbp
  402d3c:	add    eax,0x1
  402d3f:	mov    DWORD PTR [rsp+0x3c],eax
  402d43:	mov    DWORD PTR [rip+0x1323],eax        # 0x40406c
  402d49:	call   0x403830
  402d4e:	test   rax,rax
  402d51:	mov    QWORD PTR [rsp+0x30],rax
  402d56:	je     0x402f34
  402d5c:	mov    rdi,rax
  402d5f:	add    rax,0x1
  402d63:	sub    rdi,rbp
  402d66:	mov    QWORD PTR [rsp+0x30],rax
  402d6b:	mov    r15,QWORD PTR [r14]
  402d6e:	test   r15,r15
  402d71:	je     0x402f7b
  402d77:	lea    rbx,[r14+0x20]
  402d7b:	mov    r12d,0xffffffff
  402d81:	mov    DWORD PTR [rsp+0x2c],0x0
  402d89:	xor    esi,esi
  402d8b:	jmp    0x402da5
  402d8d:	nop    DWORD PTR [rax]
  402d90:	test   r13d,r13d
  402d93:	je     0x402dce
  402d95:	add    rbx,0x20
  402d99:	mov    r15,QWORD PTR [rbx-0x20]
  402d9d:	add    esi,0x1
  402da0:	test   r15,r15
  402da3:	je     0x402e10
  402da5:	mov    r8,rdi
  402da8:	mov    rdx,r15
  402dab:	mov    rcx,rbp
  402dae:	call   0x403820
  402db3:	test   eax,eax
  402db5:	jne    0x402d95
  402db7:	mov    rcx,r15
  402dba:	call   0x403828
  402dbf:	cmp    rax,rdi
  402dc2:	je     0x402ebd
  402dc8:	cmp    rdi,0x1
  402dcc:	je     0x402d90
  402dce:	cmp    r12d,0xffffffff
  402dd2:	je     0x402e70
  402dd8:	movsxd rax,r12d
  402ddb:	shl    rax,0x5
  402ddf:	add    rax,r14
  402de2:	mov    edx,DWORD PTR [rax+0x8]
  402de5:	cmp    DWORD PTR [rbx-0x18],edx
  402de8:	je     0x402e80
  402dee:	add    rbx,0x20
  402df2:	mov    r15,QWORD PTR [rbx-0x20]
  402df6:	add    esi,0x1
  402df9:	mov    DWORD PTR [rsp+0x2c],0x1
  402e01:	test   r15,r15
  402e04:	jne    0x402da5
  402e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e10:	mov    r9d,DWORD PTR [rsp+0x2c]
  402e15:	test   r9d,r9d
  402e18:	je     0x402eb0
  402e1e:	mov    r8d,DWORD PTR [rip+0x124b]        # 0x404070
  402e25:	test   r8d,r8d
  402e28:	je     0x402e48
  402e2a:	mov    rax,QWORD PTR [rsp+0x98]
  402e32:	cmp    BYTE PTR [rax],0x3a
  402e35:	je     0x402e48
  402e37:	lea    rcx,[rip+0x2852]        # 0x405690
  402e3e:	mov    r8,rbp
  402e41:	mov    edx,edi
  402e43:	call   0x402c70
  402e48:	mov    DWORD PTR [rip+0x1216],0x0        # 0x404068
  402e52:	mov    eax,0x3f
  402e57:	add    rsp,0x48
  402e5b:	pop    rbx
  402e5c:	pop    rsi
  402e5d:	pop    rdi
  402e5e:	pop    rbp
  402e5f:	pop    r12
  402e61:	pop    r13
  402e63:	pop    r14
  402e65:	pop    r15
  402e67:	ret    
  402e68:	nop    DWORD PTR [rax+rax*1+0x0]
  402e70:	mov    r12d,esi
  402e73:	jmp    0x402d95
  402e78:	nop    DWORD PTR [rax+rax*1+0x0]
  402e80:	mov    rdx,QWORD PTR [rax+0x10]
  402e84:	cmp    QWORD PTR [rbx-0x10],rdx
  402e88:	jne    0x402dee
  402e8e:	mov    eax,DWORD PTR [rax+0x18]
  402e91:	cmp    DWORD PTR [rbx-0x8],eax
  402e94:	mov    eax,0x1
  402e99:	cmove  eax,DWORD PTR [rsp+0x2c]
  402e9e:	mov    DWORD PTR [rsp+0x2c],eax
  402ea2:	jmp    0x402d95
  402ea7:	nop    WORD PTR [rax+rax*1+0x0]
  402eb0:	cmp    r12d,0xffffffff
  402eb4:	je     0x402f7b
  402eba:	mov    esi,r12d
  402ebd:	movsxd rax,esi
  402ec0:	shl    rax,0x5
  402ec4:	add    r14,rax
  402ec7:	cmp    QWORD PTR [rsp+0x30],0x0
  402ecd:	mov    eax,DWORD PTR [r14+0x8]
  402ed1:	setne  cl
  402ed4:	je     0x402f44
  402ed6:	test   eax,eax
  402ed8:	jne    0x402f44
  402eda:	mov    ecx,DWORD PTR [rip+0x1190]        # 0x404070
  402ee0:	test   ecx,ecx
  402ee2:	jne    0x402f14
  402ee4:	cmp    QWORD PTR [r14+0x10],0x0
  402ee9:	je     0x403044
  402eef:	mov    DWORD PTR [rip+0x116f],0x0        # 0x404068
  402ef9:	mov    rax,QWORD PTR [rsp+0x98]
  402f01:	cmp    BYTE PTR [rax],0x3a
  402f04:	je     0x403031
  402f0a:	mov    eax,0x3f
  402f0f:	jmp    0x402e57
  402f14:	mov    rax,QWORD PTR [rsp+0x98]
  402f1c:	cmp    BYTE PTR [rax],0x3a
  402f1f:	je     0x402ee4
  402f21:	lea    rcx,[rip+0x2738]        # 0x405660
  402f28:	mov    r8,rbp
  402f2b:	mov    edx,edi
  402f2d:	call   0x402c70
  402f32:	jmp    0x402ee4
  402f34:	mov    rcx,rbp
  402f37:	call   0x403828
  402f3c:	mov    rdi,rax
  402f3f:	jmp    0x402d6b
  402f44:	lea    edx,[rax-0x1]
  402f47:	cmp    edx,0x1
  402f4a:	jbe    0x402fb7
  402f4c:	cmp    QWORD PTR [rsp+0xa8],0x0
  402f55:	je     0x402f61
  402f57:	mov    rax,QWORD PTR [rsp+0xa8]
  402f5f:	mov    DWORD PTR [rax],esi
  402f61:	mov    rax,QWORD PTR [r14+0x10]
  402f65:	test   rax,rax
  402f68:	je     0x40303b
  402f6e:	mov    edx,DWORD PTR [r14+0x18]
  402f72:	mov    DWORD PTR [rax],edx
  402f74:	xor    eax,eax
  402f76:	jmp    0x402e57
  402f7b:	test   r13d,r13d
  402f7e:	jne    0x403092
  402f84:	mov    eax,DWORD PTR [rip+0x10e6]        # 0x404070
  402f8a:	test   eax,eax
  402f8c:	je     0x402e48
  402f92:	mov    rax,QWORD PTR [rsp+0x98]
  402f9a:	cmp    BYTE PTR [rax],0x3a
  402f9d:	je     0x402e48
  402fa3:	lea    rcx,[rip+0x2676]        # 0x405620
  402faa:	mov    rdx,rbp
  402fad:	call   0x402c70
  402fb2:	jmp    0x402e48
  402fb7:	test   cl,cl
  402fb9:	je     0x403053
  402fbf:	mov    rdx,QWORD PTR [rsp+0x30]
  402fc4:	cmp    eax,0x1
  402fc7:	mov    QWORD PTR [rip+0x5a82],rdx        # 0x408a50
  402fce:	jne    0x402f4c
  402fd4:	mov    r15,QWORD PTR [rsp+0x30]
  402fd9:	test   r15,r15
  402fdc:	jne    0x402f4c
  402fe2:	mov    edx,DWORD PTR [rip+0x1088]        # 0x404070
  402fe8:	test   edx,edx
  402fea:	je     0x403008
  402fec:	mov    rax,QWORD PTR [rsp+0x98]
  402ff4:	cmp    BYTE PTR [rax],0x3a
  402ff7:	je     0x403008
  402ff9:	lea    rcx,[rip+0x26c0]        # 0x4056c0
  403000:	mov    rdx,rbp
  403003:	call   0x402c70
  403008:	cmp    QWORD PTR [r14+0x10],0x0
  40300d:	je     0x403086
  40300f:	mov    DWORD PTR [rip+0x104f],0x0        # 0x404068
  403019:	mov    rax,QWORD PTR [rsp+0x98]
  403021:	sub    DWORD PTR [rip+0x1044],0x1        # 0x40406c
  403028:	cmp    BYTE PTR [rax],0x3a
  40302b:	jne    0x402f0a
  403031:	mov    eax,0x3a
  403036:	jmp    0x402e57
  40303b:	mov    eax,DWORD PTR [r14+0x18]
  40303f:	jmp    0x402e57
  403044:	mov    eax,DWORD PTR [r14+0x18]
  403048:	mov    DWORD PTR [rip+0x101a],eax        # 0x404068
  40304e:	jmp    0x402ef9
  403053:	cmp    eax,0x1
  403056:	jne    0x402f4c
  40305c:	mov    eax,DWORD PTR [rsp+0x38]
  403060:	mov    rdx,QWORD PTR [rsp+0x90]
  403068:	add    eax,0x2
  40306b:	mov    DWORD PTR [rip+0xffb],eax        # 0x40406c
  403071:	movsxd rax,DWORD PTR [rsp+0x3c]
  403076:	mov    r15,QWORD PTR [rdx+rax*8]
  40307a:	mov    QWORD PTR [rip+0x59cf],r15        # 0x408a50
  403081:	jmp    0x402fd9
  403086:	mov    eax,DWORD PTR [r14+0x18]
  40308a:	mov    DWORD PTR [rip+0xfd8],eax        # 0x404068
  403090:	jmp    0x403019
  403092:	mov    eax,DWORD PTR [rsp+0x38]
  403096:	mov    DWORD PTR [rip+0xfd0],eax        # 0x40406c
  40309c:	mov    eax,0xffffffff
  4030a1:	jmp    0x402e57
  4030a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4030b0:	push   r15
  4030b2:	push   r14
  4030b4:	push   r13
  4030b6:	push   r12
  4030b8:	push   rbp
  4030b9:	push   rdi
  4030ba:	push   rsi
  4030bb:	push   rbx
  4030bc:	sub    rsp,0x38
  4030c0:	test   r8,r8
  4030c3:	mov    edi,ecx
  4030c5:	mov    r15,rdx
  4030c8:	mov    QWORD PTR [rsp+0x90],r8
  4030d0:	mov    QWORD PTR [rsp+0x98],r9
  4030d8:	je     0x4033ae
  4030de:	mov    r9d,DWORD PTR [rip+0xf87]        # 0x40406c
  4030e5:	test   r9d,r9d
  4030e8:	je     0x403340
  4030ee:	cmp    DWORD PTR [rip+0xf5b],0xffffffff        # 0x404050
  4030f5:	je     0x4032b4
  4030fb:	mov    edx,DWORD PTR [rip+0x5957]        # 0x408a58
  403101:	test   edx,edx
  403103:	jne    0x4032b4
  403109:	mov    rax,QWORD PTR [rsp+0x90]
  403111:	movzx  eax,BYTE PTR [rax]
  403114:	cmp    al,0x2d
  403116:	je     0x4032e8
  40311c:	cmp    al,0x2b
  40311e:	je     0x4033c4
  403124:	mov    r8d,DWORD PTR [rip+0xf25]        # 0x404050
  40312b:	test   r8d,r8d
  40312e:	jne    0x4033c4
  403134:	sub    eax,0x2b
  403137:	test   al,0xfd
  403139:	je     0x4032f0
  40313f:	test   edx,edx
  403141:	mov    QWORD PTR [rip+0x5904],0x0        # 0x408a50
  40314c:	jne    0x403320
  403152:	mov    r14d,DWORD PTR [rsp+0xa8]
  40315a:	mov    ebp,DWORD PTR [rsp+0xa8]
  403161:	and    r14d,0x2
  403165:	and    ebp,0x1
  403168:	jmp    0x4031ee
  40316d:	nop    DWORD PTR [rax]
  403170:	lea    rax,[rip+0x249e]        # 0x405615
  403177:	test   r14d,r14d
  40317a:	mov    edx,r14d
  40317d:	mov    QWORD PTR [rip+0xedc],rax        # 0x404060
  403184:	jne    0x403490
  40318a:	test   ebp,ebp
  40318c:	je     0x4033ae
  403192:	mov    r12d,DWORD PTR [rip+0xebf]        # 0x404058
  403199:	cmp    r12d,0xffffffff
  40319d:	je     0x403310
  4031a3:	mov    r13d,DWORD PTR [rip+0xeaa]        # 0x404054
  4031aa:	cmp    r13d,0xffffffff
  4031ae:	je     0x4031e5
  4031b0:	mov    edx,r13d
  4031b3:	mov    r9,r15
  4031b6:	mov    r8d,ebx
  4031b9:	mov    ecx,r12d
  4031bc:	call   0x402bc0
  4031c1:	mov    esi,DWORD PTR [rip+0xea5]        # 0x40406c
  4031c7:	mov    eax,r12d
  4031ca:	mov    edx,DWORD PTR [rip+0x5888]        # 0x408a58
  4031d0:	sub    eax,r13d
  4031d3:	mov    DWORD PTR [rip+0xe77],0xffffffff        # 0x404054
  4031dd:	add    eax,esi
  4031df:	mov    DWORD PTR [rip+0xe73],eax        # 0x404058
  4031e5:	add    esi,0x1
  4031e8:	mov    DWORD PTR [rip+0xe7e],esi        # 0x40406c
  4031ee:	test   edx,edx
  4031f0:	jne    0x403204
  4031f2:	mov    rsi,QWORD PTR [rip+0xe67]        # 0x404060
  4031f9:	movzx  eax,BYTE PTR [rsi]
  4031fc:	test   al,al
  4031fe:	jne    0x4033fe
  403204:	movsxd rbx,DWORD PTR [rip+0xe61]        # 0x40406c
  40320b:	mov    DWORD PTR [rip+0x5843],0x0        # 0x408a58
  403215:	cmp    ebx,edi
  403217:	mov    esi,ebx
  403219:	jge    0x403360
  40321f:	movsxd rax,ebx
  403222:	mov    r13,QWORD PTR [r15+rax*8]
  403226:	cmp    BYTE PTR [r13+0x0],0x2d
  40322b:	mov    QWORD PTR [rip+0xe2e],r13        # 0x404060
  403232:	jne    0x403170
  403238:	movzx  eax,BYTE PTR [r13+0x1]
  40323d:	test   al,al
  40323f:	jne    0x4033d1
  403245:	mov    rcx,QWORD PTR [rsp+0x90]
  40324d:	mov    edx,0x2d
  403252:	call   0x403830
  403257:	test   rax,rax
  40325a:	je     0x403170
  403260:	cmp    DWORD PTR [rip+0xdf1],0xffffffff        # 0x404058
  403267:	mov    rsi,r13
  40326a:	je     0x403284
  40326c:	cmp    DWORD PTR [rip+0xde1],0xffffffff        # 0x404054
  403273:	mov    eax,0x2d
  403278:	jne    0x4033fe
  40327e:	mov    DWORD PTR [rip+0xdd0],ebx        # 0x404054
  403284:	cmp    QWORD PTR [rsp+0x98],0x0
  40328d:	je     0x40367c
  403293:	cmp    rsi,QWORD PTR [r15+rbx*8]
  403297:	mov    eax,0x2d
  40329c:	je     0x4034ce
  4032a2:	add    rsi,0x1
  4032a6:	xor    edx,edx
  4032a8:	mov    QWORD PTR [rip+0xdb1],rsi        # 0x404060
  4032af:	jmp    0x403452
  4032b4:	lea    rcx,[rip+0x234a]        # 0x405605
  4032bb:	call   0x403858
  4032c0:	test   rax,rax
  4032c3:	mov    edx,DWORD PTR [rip+0x578f]        # 0x408a58
  4032c9:	setne  al
  4032cc:	movzx  eax,al
  4032cf:	mov    DWORD PTR [rip+0xd7b],eax        # 0x404050
  4032d5:	mov    rax,QWORD PTR [rsp+0x90]
  4032dd:	movzx  eax,BYTE PTR [rax]
  4032e0:	cmp    al,0x2d
  4032e2:	jne    0x40311c
  4032e8:	or     DWORD PTR [rsp+0xa8],0x2
  4032f0:	add    QWORD PTR [rsp+0x90],0x1
  4032f9:	test   edx,edx
  4032fb:	mov    QWORD PTR [rip+0x574a],0x0        # 0x408a50
  403306:	je     0x403152
  40330c:	jmp    0x403320
  40330e:	xchg   ax,ax
  403310:	mov    DWORD PTR [rip+0xd42],ebx        # 0x404058
  403316:	jmp    0x4031e5
  40331b:	nop    DWORD PTR [rax+rax*1+0x0]
  403320:	mov    DWORD PTR [rip+0xd2a],0xffffffff        # 0x404054
  40332a:	mov    DWORD PTR [rip+0xd24],0xffffffff        # 0x404058
  403334:	jmp    0x403152
  403339:	nop    DWORD PTR [rax+0x0]
  403340:	mov    DWORD PTR [rip+0x570e],0x1        # 0x408a58
  40334a:	mov    DWORD PTR [rip+0xd18],0x1        # 0x40406c
  403354:	jmp    0x4030ee
  403359:	nop    DWORD PTR [rax+0x0]
  403360:	mov    esi,DWORD PTR [rip+0xcee]        # 0x404054
  403366:	lea    rax,[rip+0x22a8]        # 0x405615
  40336d:	mov    QWORD PTR [rip+0xcec],rax        # 0x404060
  403374:	cmp    esi,0xffffffff
  403377:	je     0x4034aa
  40337d:	mov    edi,DWORD PTR [rip+0xcd5]        # 0x404058
  403383:	mov    r9,r15
  403386:	mov    r8d,ebx
  403389:	mov    edx,esi
  40338b:	mov    ecx,edi
  40338d:	sub    edi,esi
  40338f:	call   0x402bc0
  403394:	add    DWORD PTR [rip+0xcd2],edi        # 0x40406c
  40339a:	mov    DWORD PTR [rip+0xcb0],0xffffffff        # 0x404054
  4033a4:	mov    DWORD PTR [rip+0xcaa],0xffffffff        # 0x404058
  4033ae:	mov    eax,0xffffffff
  4033b3:	add    rsp,0x38
  4033b7:	pop    rbx
  4033b8:	pop    rsi
  4033b9:	pop    rdi
  4033ba:	pop    rbp
  4033bb:	pop    r12
  4033bd:	pop    r13
  4033bf:	pop    r14
  4033c1:	pop    r15
  4033c3:	ret    
  4033c4:	and    DWORD PTR [rsp+0xa8],0xfffffffe
  4033cc:	jmp    0x403134
  4033d1:	mov    ebp,DWORD PTR [rip+0xc81]        # 0x404058
  4033d7:	cmp    ebp,0xffffffff
  4033da:	je     0x4033eb
  4033dc:	cmp    DWORD PTR [rip+0xc71],0xffffffff        # 0x404054
  4033e3:	jne    0x4033eb
  4033e5:	mov    DWORD PTR [rip+0xc69],ebx        # 0x404054
  4033eb:	lea    rsi,[r13+0x1]
  4033ef:	cmp    al,0x2d
  4033f1:	mov    QWORD PTR [rip+0xc68],rsi        # 0x404060
  4033f8:	je     0x4035af
  4033fe:	cmp    QWORD PTR [rsp+0x98],0x0
  403407:	je     0x4034ce
  40340d:	movsxd rdx,DWORD PTR [rip+0xc58]        # 0x40406c
  403414:	cmp    rsi,QWORD PTR [r15+rdx*8]
  403418:	je     0x4034ce
  40341e:	cmp    al,0x2d
  403420:	je     0x4032a2
  403426:	test   BYTE PTR [rsp+0xa8],0x4
  40342e:	je     0x4034ce
  403434:	xor    edx,edx
  403436:	cmp    al,0x3a
  403438:	je     0x403452
  40343a:	mov    rcx,QWORD PTR [rsp+0x90]
  403442:	movsx  edx,al
  403445:	call   0x403830
  40344a:	xor    edx,edx
  40344c:	test   rax,rax
  40344f:	setne  dl
  403452:	mov    DWORD PTR [rsp+0x20],edx
  403456:	mov    r9,QWORD PTR [rsp+0xa0]
  40345e:	mov    rcx,r15
  403461:	mov    r8,QWORD PTR [rsp+0x98]
  403469:	mov    rdx,QWORD PTR [rsp+0x90]
  403471:	call   0x402cf0
  403476:	cmp    eax,0xffffffff
  403479:	je     0x4034c4
  40347b:	lea    rcx,[rip+0x2193]        # 0x405615
  403482:	mov    QWORD PTR [rip+0xbd7],rcx        # 0x404060
  403489:	jmp    0x4033b3
  40348e:	xchg   ax,ax
  403490:	add    ebx,0x1
  403493:	mov    QWORD PTR [rip+0x55b6],r13        # 0x408a50
  40349a:	mov    eax,0x1
  40349f:	mov    DWORD PTR [rip+0xbc7],ebx        # 0x40406c
  4034a5:	jmp    0x4033b3
  4034aa:	mov    eax,DWORD PTR [rip+0xba8]        # 0x404058
  4034b0:	cmp    eax,0xffffffff
  4034b3:	je     0x40339a
  4034b9:	mov    DWORD PTR [rip+0xbad],eax        # 0x40406c
  4034bf:	jmp    0x40339a
  4034c4:	mov    rsi,QWORD PTR [rip+0xb95]        # 0x404060
  4034cb:	movzx  eax,BYTE PTR [rsi]
  4034ce:	lea    rbp,[rsi+0x1]
  4034d2:	movsx  ebx,al
  4034d5:	cmp    ebx,0x3a
  4034d8:	mov    QWORD PTR [rip+0xb81],rbp        # 0x404060
  4034df:	je     0x403544
  4034e1:	cmp    ebx,0x2d
  4034e4:	je     0x403687
  4034ea:	mov    rcx,QWORD PTR [rsp+0x90]
  4034f2:	mov    edx,ebx
  4034f4:	call   0x403830
  4034f9:	test   rax,rax
  4034fc:	je     0x403544
  4034fe:	cmp    ebx,0x57
  403501:	jne    0x4035a6
  403507:	cmp    QWORD PTR [rsp+0x98],0x0
  403510:	je     0x4035a6
  403516:	movzx  edx,BYTE PTR [rax+0x1]
  40351a:	cmp    dl,0x3b
  40351d:	je     0x403600
  403523:	cmp    dl,0x3a
  403526:	je     0x40369b
  40352c:	cmp    BYTE PTR [rsi+0x1],0x0
  403530:	mov    eax,ebx
  403532:	jne    0x4033b3
  403538:	add    DWORD PTR [rip+0xb2d],0x1        # 0x40406c
  40353f:	jmp    0x4033b3
  403544:	cmp    BYTE PTR [rsi+0x1],0x0
  403548:	jne    0x403551
  40354a:	add    DWORD PTR [rip+0xb1b],0x1        # 0x40406c
  403551:	mov    ecx,DWORD PTR [rip+0xb19]        # 0x404070
  403557:	test   ecx,ecx
  403559:	je     0x403576
  40355b:	mov    rax,QWORD PTR [rsp+0x90]
  403563:	cmp    BYTE PTR [rax],0x3a
  403566:	je     0x403576
  403568:	lea    rcx,[rip+0x20d1]        # 0x405640
  40356f:	mov    edx,ebx
  403571:	call   0x402c70
  403576:	mov    DWORD PTR [rip+0xaec],ebx        # 0x404068
  40357c:	mov    eax,0x3f
  403581:	jmp    0x4033b3
  403586:	mov    rcx,QWORD PTR [rsp+0x90]
  40358e:	mov    edx,0x2d
  403593:	call   0x403830
  403598:	test   rax,rax
  40359b:	je     0x4033ae
  4035a1:	mov    ebx,0x2d
  4035a6:	movzx  edx,BYTE PTR [rax+0x1]
  4035aa:	jmp    0x403523
  4035af:	cmp    BYTE PTR [r13+0x2],0x0
  4035b4:	jne    0x403284
  4035ba:	mov    esi,DWORD PTR [rip+0xa94]        # 0x404054
  4035c0:	lea    r8d,[rbx+0x1]
  4035c4:	lea    rax,[rip+0x204a]        # 0x405615
  4035cb:	mov    DWORD PTR [rip+0xa9a],r8d        # 0x40406c
  4035d2:	mov    QWORD PTR [rip+0xa87],rax        # 0x404060
  4035d9:	cmp    esi,0xffffffff
  4035dc:	je     0x40339a
  4035e2:	mov    ecx,ebp
  4035e4:	mov    r9,r15
  4035e7:	mov    edx,esi
  4035e9:	call   0x402bc0
  4035ee:	sub    ebp,esi
  4035f0:	add    DWORD PTR [rip+0xa76],ebp        # 0x40406c
  4035f6:	jmp    0x40339a
  4035fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403600:	cmp    BYTE PTR [rsi+0x1],0x0
  403604:	jne    0x403755
  40360a:	mov    eax,DWORD PTR [rip+0xa5c]        # 0x40406c
  403610:	add    eax,0x1
  403613:	cmp    edi,eax
  403615:	mov    DWORD PTR [rip+0xa51],eax        # 0x40406c
  40361b:	jg     0x403748
  403621:	mov    edx,DWORD PTR [rip+0xa49]        # 0x404070
  403627:	lea    rax,[rip+0x1fe7]        # 0x405615
  40362e:	mov    QWORD PTR [rip+0xa2b],rax        # 0x404060
  403635:	test   edx,edx
  403637:	je     0x403657
  403639:	mov    rax,QWORD PTR [rsp+0x90]
  403641:	cmp    BYTE PTR [rax],0x3a
  403644:	je     0x403657
  403646:	lea    rcx,[rip+0x20b3]        # 0x405700
  40364d:	mov    edx,0x57
  403652:	call   0x402c70
  403657:	mov    rax,QWORD PTR [rsp+0x90]
  40365f:	mov    DWORD PTR [rip+0x9ff],0x57        # 0x404068
  403669:	cmp    BYTE PTR [rax],0x3a
  40366c:	je     0x40373e
  403672:	mov    eax,0x3f
  403677:	jmp    0x4033b3
  40367c:	lea    rbp,[rsi+0x1]
  403680:	mov    QWORD PTR [rip+0x9d9],rbp        # 0x404060
  403687:	cmp    BYTE PTR [rsi+0x1],0x0
  40368b:	je     0x403586
  403691:	mov    ebx,0x2d
  403696:	jmp    0x403551
  40369b:	mov    QWORD PTR [rip+0x53aa],0x0        # 0x408a50
  4036a6:	cmp    BYTE PTR [rsi+0x1],0x0
  4036aa:	je     0x4036d7
  4036ac:	mov    eax,DWORD PTR [rip+0x9ba]        # 0x40406c
  4036b2:	mov    QWORD PTR [rip+0x5397],rbp        # 0x408a50
  4036b9:	lea    rcx,[rip+0x1f55]        # 0x405615
  4036c0:	add    eax,0x1
  4036c3:	mov    DWORD PTR [rip+0x9a3],eax        # 0x40406c
  4036c9:	mov    eax,ebx
  4036cb:	mov    QWORD PTR [rip+0x98e],rcx        # 0x404060
  4036d2:	jmp    0x4033b3
  4036d7:	cmp    BYTE PTR [rax+0x2],0x3a
  4036db:	mov    eax,DWORD PTR [rip+0x98b]        # 0x40406c
  4036e1:	je     0x4036b9
  4036e3:	add    eax,0x1
  4036e6:	cmp    edi,eax
  4036e8:	mov    DWORD PTR [rip+0x97e],eax        # 0x40406c
  4036ee:	jg     0x403782
  4036f4:	lea    rax,[rip+0x1f1a]        # 0x405615
  4036fb:	mov    QWORD PTR [rip+0x95e],rax        # 0x404060
  403702:	mov    eax,DWORD PTR [rip+0x968]        # 0x404070
  403708:	test   eax,eax
  40370a:	je     0x403727
  40370c:	mov    rax,QWORD PTR [rsp+0x90]
  403714:	cmp    BYTE PTR [rax],0x3a
  403717:	je     0x403727
  403719:	lea    rcx,[rip+0x1fe0]        # 0x405700
  403720:	mov    edx,ebx
  403722:	call   0x402c70
  403727:	mov    rax,QWORD PTR [rsp+0x90]
  40372f:	mov    DWORD PTR [rip+0x933],ebx        # 0x404068
  403735:	cmp    BYTE PTR [rax],0x3a
  403738:	jne    0x403672
  40373e:	mov    eax,0x3a
  403743:	jmp    0x4033b3
  403748:	cdqe   
  40374a:	mov    rax,QWORD PTR [r15+rax*8]
  40374e:	mov    QWORD PTR [rip+0x90b],rax        # 0x404060
  403755:	mov    r9,QWORD PTR [rsp+0xa0]
  40375d:	mov    r8,QWORD PTR [rsp+0x98]
  403765:	mov    rcx,r15
  403768:	mov    rdx,QWORD PTR [rsp+0x90]
  403770:	mov    DWORD PTR [rsp+0x20],0x0
  403778:	call   0x402cf0
  40377d:	jmp    0x40347b
  403782:	movsxd rdx,eax
  403785:	mov    rdx,QWORD PTR [r15+rdx*8]
  403789:	mov    QWORD PTR [rip+0x52c0],rdx        # 0x408a50
  403790:	jmp    0x4036b9
  403795:	nop
  403796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037a0:	sub    rsp,0x38
  4037a4:	xor    r9d,r9d
  4037a7:	mov    DWORD PTR [rsp+0x28],0x0
  4037af:	mov    QWORD PTR [rsp+0x20],0x0
  4037b8:	call   0x4030b0
  4037bd:	add    rsp,0x38
  4037c1:	ret    
  4037c2:	nop    DWORD PTR [rax+0x0]
  4037c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037d0:	sub    rsp,0x38
  4037d4:	mov    rax,QWORD PTR [rsp+0x60]
  4037d9:	mov    DWORD PTR [rsp+0x28],0x1
  4037e1:	mov    QWORD PTR [rsp+0x20],rax
  4037e6:	call   0x4030b0
  4037eb:	add    rsp,0x38
  4037ef:	ret    
  4037f0:	sub    rsp,0x38
  4037f4:	mov    rax,QWORD PTR [rsp+0x60]
  4037f9:	mov    DWORD PTR [rsp+0x28],0x5
  403801:	mov    QWORD PTR [rsp+0x20],rax
  403806:	call   0x4030b0
  40380b:	add    rsp,0x38
  40380f:	ret    
  403810:	jmp    QWORD PTR [rip+0x5c6a]        # 0x409480
  403816:	nop
  403817:	nop
  403818:	jmp    QWORD PTR [rip+0x5c5a]        # 0x409478
  40381e:	nop
  40381f:	nop
  403820:	jmp    QWORD PTR [rip+0x5c4a]        # 0x409470
  403826:	nop
  403827:	nop
  403828:	jmp    QWORD PTR [rip+0x5c3a]        # 0x409468
  40382e:	nop
  40382f:	nop
  403830:	jmp    QWORD PTR [rip+0x5c2a]        # 0x409460
  403836:	nop
  403837:	nop
  403838:	jmp    QWORD PTR [rip+0x5c1a]        # 0x409458
  40383e:	nop
  40383f:	nop
  403840:	jmp    QWORD PTR [rip+0x5c0a]        # 0x409450
  403846:	nop
  403847:	nop
  403848:	jmp    QWORD PTR [rip+0x5bfa]        # 0x409448
  40384e:	nop
  40384f:	nop
  403850:	jmp    QWORD PTR [rip+0x5bea]        # 0x409440
  403856:	nop
  403857:	nop
  403858:	jmp    QWORD PTR [rip+0x5bda]        # 0x409438
  40385e:	nop
  40385f:	nop
  403860:	jmp    QWORD PTR [rip+0x5bca]        # 0x409430
  403866:	nop
  403867:	nop
  403868:	jmp    QWORD PTR [rip+0x5bba]        # 0x409428
  40386e:	nop
  40386f:	nop
  403870:	jmp    QWORD PTR [rip+0x5baa]        # 0x409420
  403876:	nop
  403877:	nop
  403878:	jmp    QWORD PTR [rip+0x5b9a]        # 0x409418
  40387e:	nop
  40387f:	nop
  403880:	jmp    QWORD PTR [rip+0x5b8a]        # 0x409410
  403886:	nop
  403887:	nop
  403888:	jmp    QWORD PTR [rip+0x5b7a]        # 0x409408
  40388e:	nop
  40388f:	nop
  403890:	jmp    QWORD PTR [rip+0x5b6a]        # 0x409400
  403896:	nop
  403897:	nop
  403898:	jmp    QWORD PTR [rip+0x5b5a]        # 0x4093f8
  40389e:	nop
  40389f:	nop
  4038a0:	jmp    QWORD PTR [rip+0x5b4a]        # 0x4093f0
  4038a6:	nop
  4038a7:	nop
  4038a8:	jmp    QWORD PTR [rip+0x5b3a]        # 0x4093e8
  4038ae:	nop
  4038af:	nop
  4038b0:	jmp    QWORD PTR [rip+0x5b2a]        # 0x4093e0
  4038b6:	nop
  4038b7:	nop
  4038b8:	jmp    QWORD PTR [rip+0x5b1a]        # 0x4093d8
  4038be:	nop
  4038bf:	nop
  4038c0:	jmp    QWORD PTR [rip+0x5b02]        # 0x4093c8
  4038c6:	nop
  4038c7:	nop
  4038c8:	jmp    QWORD PTR [rip+0x5af2]        # 0x4093c0
  4038ce:	nop
  4038cf:	nop
  4038d0:	jmp    QWORD PTR [rip+0x5ada]        # 0x4093b0
  4038d6:	nop
  4038d7:	nop
  4038d8:	jmp    QWORD PTR [rip+0x5aca]        # 0x4093a8
  4038de:	nop
  4038df:	nop
  4038e0:	jmp    QWORD PTR [rip+0x5aba]        # 0x4093a0
  4038e6:	nop
  4038e7:	nop
  4038e8:	jmp    QWORD PTR [rip+0x5aaa]        # 0x409398
  4038ee:	nop
  4038ef:	nop
  4038f0:	jmp    QWORD PTR [rip+0x5a92]        # 0x409388
  4038f6:	nop
  4038f7:	nop
  4038f8:	jmp    QWORD PTR [rip+0x5a82]        # 0x409380
  4038fe:	nop
  4038ff:	nop
  403900:	jmp    QWORD PTR [rip+0x5a6a]        # 0x409370
  403906:	nop
  403907:	nop
  403908:	nop    DWORD PTR [rax+rax*1+0x0]
  403910:	mov    rax,QWORD PTR [rip+0x50d9]        # 0x4089f0
  403917:	ret    
  403918:	nop    DWORD PTR [rax+rax*1+0x0]
  403920:	mov    rax,rcx
  403923:	xchg   QWORD PTR [rip+0x50c6],rax        # 0x4089f0
  40392a:	ret    
  40392b:	nop
  40392c:	nop
  40392d:	nop
  40392e:	nop
  40392f:	nop
  403930:	jmp    QWORD PTR [rip+0x5a2a]        # 0x409360
  403936:	nop
  403937:	nop
  403938:	jmp    QWORD PTR [rip+0x5a1a]        # 0x409358
  40393e:	nop
  40393f:	nop
  403940:	jmp    QWORD PTR [rip+0x5a0a]        # 0x409350
  403946:	nop
  403947:	nop
  403948:	jmp    QWORD PTR [rip+0x59fa]        # 0x409348
  40394e:	nop
  40394f:	nop
  403950:	jmp    QWORD PTR [rip+0x59ea]        # 0x409340
  403956:	nop
  403957:	nop
  403958:	jmp    QWORD PTR [rip+0x59da]        # 0x409338
  40395e:	nop
  40395f:	nop
  403960:	jmp    QWORD PTR [rip+0x59ca]        # 0x409330
  403966:	nop
  403967:	nop
  403968:	jmp    QWORD PTR [rip+0x59ba]        # 0x409328
  40396e:	nop
  40396f:	nop
  403970:	jmp    QWORD PTR [rip+0x59aa]        # 0x409320
  403976:	nop
  403977:	nop
  403978:	jmp    QWORD PTR [rip+0x599a]        # 0x409318
  40397e:	nop
  40397f:	nop
  403980:	jmp    QWORD PTR [rip+0x598a]        # 0x409310
  403986:	nop
  403987:	nop
  403988:	jmp    QWORD PTR [rip+0x597a]        # 0x409308
  40398e:	nop
  40398f:	nop
  403990:	jmp    QWORD PTR [rip+0x596a]        # 0x409300
  403996:	nop
  403997:	nop
  403998:	jmp    QWORD PTR [rip+0x595a]        # 0x4092f8
  40399e:	nop
  40399f:	nop
  4039a0:	jmp    QWORD PTR [rip+0x594a]        # 0x4092f0
  4039a6:	nop
  4039a7:	nop
  4039a8:	jmp    QWORD PTR [rip+0x593a]        # 0x4092e8
  4039ae:	nop
  4039af:	nop
  4039b0:	jmp    QWORD PTR [rip+0x592a]        # 0x4092e0
  4039b6:	nop
  4039b7:	nop
  4039b8:	jmp    QWORD PTR [rip+0x591a]        # 0x4092d8
  4039be:	nop
  4039bf:	nop
  4039c0:	jmp    QWORD PTR [rip+0x590a]        # 0x4092d0
  4039c6:	nop
  4039c7:	nop
  4039c8:	jmp    QWORD PTR [rip+0x58fa]        # 0x4092c8
  4039ce:	nop
  4039cf:	nop
  4039d0:	jmp    QWORD PTR [rip+0x58ea]        # 0x4092c0
  4039d6:	nop
  4039d7:	nop
  4039d8:	jmp    QWORD PTR [rip+0x58da]        # 0x4092b8
  4039de:	nop
  4039df:	nop
  4039e0:	jmp    QWORD PTR [rip+0x58ca]        # 0x4092b0
  4039e6:	nop
  4039e7:	nop
  4039e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4039f0:	push   r15
  4039f2:	push   r14
  4039f4:	push   r13
  4039f6:	push   r12
  4039f8:	push   rbp
  4039f9:	push   rdi
  4039fa:	push   rsi
  4039fb:	push   rbx
  4039fc:	sub    rsp,0x68
  403a00:	xor    esi,esi
  403a02:	xor    edi,edi
  403a04:	xor    ebp,ebp
  403a06:	mov    DWORD PTR [rsp+0xb0],ecx
  403a0d:	mov    rbx,rdx
  403a10:	call   0x4017d0
  403a15:	mov    r12,QWORD PTR [rip+0x1f14]        # 0x405930
  403a1c:	mov    DWORD PTR [rsp+0x44],0x0
  403a24:	mov    r13,r12
  403a27:	lea    r14,[rip+0x1812]        # 0x405240
  403a2e:	mov    ecx,DWORD PTR [rsp+0xb0]
  403a35:	lea    r9,[rip+0x1884]        # 0x4052c0
  403a3c:	lea    r8,[rip+0x17c5]        # 0x405208
  403a43:	mov    QWORD PTR [rsp+0x20],0x0
  403a4c:	mov    rdx,rbx
  403a4f:	call   0x4037d0
  403a54:	cmp    eax,0xffffffff
  403a57:	je     0x403ae5
  403a5d:	lea    ecx,[rax-0x56]
  403a60:	cmp    ecx,0x13
  403a63:	ja     0x403ad8
  403a65:	movsxd rax,DWORD PTR [r14+rcx*4]
  403a69:	add    rax,r14
  403a6c:	jmp    rax
  403a6e:	mov    edi,0x1
  403a73:	jmp    0x403a2e
  403a75:	call   QWORD PTR [rip+0x591d]        # 0x409398
  403a7b:	lea    rdx,[rip+0x1769]        # 0x4051eb
  403a82:	lea    rcx,[rax+0x60]
  403a86:	mov    DWORD PTR [rsp+0x20],0x1
  403a8e:	mov    r9d,0xc
  403a94:	mov    r8d,0x2
  403a9a:	call   0x403878
  403a9f:	xor    ecx,ecx
  403aa1:	call   0x403880
  403aa6:	mov    rcx,QWORD PTR [r13+0x0]
  403aaa:	mov    ebp,0x1
  403aaf:	call   0x403890
  403ab4:	mov    DWORD PTR [rsp+0x44],eax
  403ab8:	jmp    0x403a27
  403abd:	mov    rcx,QWORD PTR [rbx]
  403ac0:	xor    edx,edx
  403ac2:	call   0x401530
  403ac7:	mov    rcx,QWORD PTR [r12]
  403acb:	call   0x403810
  403ad0:	mov    rsi,rax
  403ad3:	jmp    0x403a27
  403ad8:	mov    rcx,QWORD PTR [rbx]
  403adb:	mov    edx,0x1
  403ae0:	call   0x401530
  403ae5:	mov    rax,QWORD PTR [rip+0x1e54]        # 0x405940
  403aec:	mov    eax,DWORD PTR [rax]
  403aee:	cmp    eax,DWORD PTR [rsp+0xb0]
  403af5:	mov    DWORD PTR [rsp+0x48],eax
  403af9:	je     0x403ad8
  403afb:	xor    r13d,r13d
  403afe:	test   edi,edi
  403b00:	je     0x403bfa
  403b06:	movsxd rax,DWORD PTR [rsp+0x48]
  403b0b:	xor    edi,edi
  403b0d:	mov    DWORD PTR [rsp+0x4c],0x0
  403b15:	lea    r12,[rbx+rax*8]
  403b19:	lea    rax,[rsp+0x5c]
  403b1e:	mov    QWORD PTR [rsp+0x38],rax
  403b23:	mov    eax,DWORD PTR [rsp+0x48]
  403b27:	add    eax,edi
  403b29:	cmp    eax,DWORD PTR [rsp+0xb0]
  403b30:	jge    0x403be0
  403b36:	mov    DWORD PTR [rsp+0x5c],0x0
  403b3e:	mov    ebx,DWORD PTR [rsp+0x44]
  403b42:	jmp    0x403b83
  403b44:	mov    rdx,rsi
  403b47:	mov    rcx,rax
  403b4a:	call   0x401630
  403b4f:	test   rax,rax
  403b52:	mov    r15,rax
  403b55:	je     0x403b6e
  403b57:	lea    rcx,[rip+0x16b2]        # 0x405210
  403b5e:	mov    rdx,rax
  403b61:	call   0x403840
  403b66:	mov    rcx,r15
  403b69:	call   0x401620
  403b6e:	mov    rcx,r14
  403b71:	call   0x401638
  403b76:	add    ebx,0x1
  403b79:	test   ebp,ebp
  403b7b:	jne    0x403bad
  403b7d:	cmp    ebx,DWORD PTR [rsp+0x5c]
  403b81:	jge    0x403bad
  403b83:	mov    rcx,QWORD PTR [r12+rdi*8]
  403b87:	mov    r9,QWORD PTR [rsp+0x38]
  403b8c:	mov    r8,r13
  403b8f:	mov    edx,ebx
  403b91:	call   0x401640
  403b96:	test   rax,rax
  403b99:	mov    r14,rax
  403b9c:	je     0x403bb6
  403b9e:	test   rsi,rsi
  403ba1:	jne    0x403b44
  403ba3:	mov    rcx,rax
  403ba6:	call   0x401628
  403bab:	jmp    0x403b6e
  403bad:	add    rdi,0x1
  403bb1:	jmp    0x403b23
  403bb6:	mov    r14,QWORD PTR [r12+rdi*8]
  403bba:	call   QWORD PTR [rip+0x57d8]        # 0x409398
  403bc0:	lea    rdx,[rip+0x1651]        # 0x405218
  403bc7:	lea    rcx,[rax+0x60]
  403bcb:	mov    r8d,ebx
  403bce:	mov    r9,r14
  403bd1:	call   0x403878
  403bd6:	mov    DWORD PTR [rsp+0x4c],0x1
  403bde:	jmp    0x403b76
  403be0:	call   0x401648
  403be5:	mov    eax,DWORD PTR [rsp+0x4c]
  403be9:	add    rsp,0x68
  403bed:	pop    rbx
  403bee:	pop    rsi
  403bef:	pop    rdi
  403bf0:	pop    rbp
  403bf1:	pop    r12
  403bf3:	pop    r13
  403bf5:	pop    r14
  403bf7:	pop    r15
  403bf9:	ret    
  403bfa:	xor    ecx,ecx
  403bfc:	call   0x401650
  403c01:	mov    r13,rax
  403c04:	jmp    0x403b06
  403c09:	nop
  403c0a:	nop
  403c0b:	nop
  403c0c:	nop
  403c0d:	nop
  403c0e:	nop
  403c0f:	nop
  403c10:	(bad)  
  403c11:	(bad)  
  403c12:	(bad)  
  403c13:	(bad)  
  403c14:	(bad)  
  403c15:	(bad)  
  403c16:	(bad)  
  403c17:	inc    DWORD PTR [rax]
  403c19:	add    BYTE PTR [rax],al
  403c1b:	add    BYTE PTR [rax],al
  403c1d:	add    BYTE PTR [rax],al
  403c1f:	add    bh,bh
  403c21:	(bad)  
  403c22:	(bad)  
  403c23:	(bad)  
  403c24:	(bad)  
  403c25:	(bad)  
  403c26:	(bad)  
  403c27:	inc    DWORD PTR [rax]
  403c29:	add    BYTE PTR [rax],al
  403c2b:	add    BYTE PTR [rax],al
  403c2d:	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000404000 <.data>:
  404000:	or     al,BYTE PTR [rax]
	...
  40400e:	add    BYTE PTR [rax],al
  404010:	sub    BYTE PTR [rax+rax*2],bh
	...
  40401f:	add    bh,bh
  404021:	(bad)  
  404022:	(bad)  
  404023:	(bad)  
  404024:	(bad)  
  404025:	(bad)  
  404026:	(bad)  
  404027:	inc    DWORD PTR [rax]
  404029:	add    BYTE PTR [rax],al
  40402b:	add    BYTE PTR [rax],al
  40402d:	add    BYTE PTR [rax],al
  40402f:	add    bh,bh
	...
  40403d:	add    BYTE PTR [rax],al
  40403f:	add    BYTE PTR [rdx],al
	...
  40404d:	add    BYTE PTR [rax],al
  40404f:	add    bh,bh
  404051:	(bad)  
  404052:	(bad)  
  404053:	(bad)  
  404054:	(bad)  
  404055:	(bad)  
  404056:	(bad)  
  404057:	(bad)  
  404058:	(bad)  
  404059:	(bad)  
  40405a:	(bad)  
  40405b:	inc    DWORD PTR [rax]
  40405d:	add    BYTE PTR [rax],al
  40405f:	add    BYTE PTR [rip+0x4056],dl        # 0x4080bb
  404065:	add    BYTE PTR [rax],al
  404067:	add    BYTE PTR [rdi],bh
  404069:	add    BYTE PTR [rax],al
  40406b:	add    BYTE PTR [rcx],al
  40406d:	add    BYTE PTR [rax],al
  40406f:	add    BYTE PTR [rcx],al
	...
  40407d:	add    BYTE PTR [rax],al
  40407f:	add    bh,bh
  404081:	(bad)  
  404082:	(bad)  
  404083:	inc    DWORD PTR [rax]
	...
  40408d:	add    BYTE PTR [rax],al
  40408f:	add    BYTE PTR [rax],dl
  404091:	cmp    DWORD PTR [rax+0x0],eax
  404094:	add    BYTE PTR [rax],al
  404096:	add    BYTE PTR [rax],al
  404098:	and    BYTE PTR [rcx],bh
  40409a:	add    BYTE PTR [rax],al
  40409d:	add    BYTE PTR [rax],al
  40409f:	add    BYTE PTR [rdx],dh
  4040a1:	movabs ds:0x2b992ddf,al
  4040aa:	add    BYTE PTR [rax],al
  4040ac:	add    BYTE PTR [rax],al
  4040ae:	add    BYTE PTR [rax],al
  4040b0:	int    0x5d
  4040b2:	and    dl,dl
  4040b4:	data16 (bad) 
  4040b6:	(bad)  
  4040b7:	inc    DWORD PTR [rax]
  4040b9:	add    BYTE PTR [rax],al
  4040bb:	add    BYTE PTR [rax],al
  4040bd:	add    BYTE PTR [rax],al
	...

Disassembly of section .rdata:

0000000000405000 <.rdata>:
  405000:	jne    0x405075
  405002:	(bad)  
  405003:	cmp    ah,BYTE PTR gs:[eax]
  405007:	and    eax,0x2d5b2073
  40500c:	push   rsi
  40500d:	(bad)  
  40500e:	push   0x2d5b205d
  405013:	imul   esp,DWORD PTR [rax],0x65646e69
  405019:	js     0x405078
  40501b:	and    BYTE PTR [rbx+0x2d],bl
  40501e:	data16 and BYTE PTR [rsi+0x4f],al
  405022:	push   rdx
  405023:	rex.WRB
  405024:	push   r12
  405026:	pop    rbp
  405027:	and    BYTE PTR [rbx+0x2d],bl
  40502a:	sub    eax,0x6f6e6769
  40502f:	jb     0x405096
  405031:	sub    eax,0x6e616c62
  405036:	imul   esi,DWORD PTR [rbx+0x5d],0x20
  40503a:	pop    rbx
  40503b:	sub    eax,0x646e692d
  405040:	gs js  0x405063
  405043:	imul   ebp,DWORD PTR [rsi+0x64],0x205d7865
  40504a:	pop    rbx
  40504b:	sub    eax,0x726f662d
  405050:	ins    DWORD PTR es:[rdi],dx
  405051:	(bad)  
  405052:	je     0x405074
  405054:	rex.RX
  405055:	rex.WRXB push r10
  405057:	rex.WRB
  405058:	push   r12
  40505a:	pop    rbp
  40505b:	and    BYTE PTR [rbx+0x2d],bl
  40505e:	sub    eax,0x73726576
  405063:	imul   ebp,DWORD PTR [rdi+0x6e],0x2d5b205d
  40506a:	sub    eax,0x706c6568
  40506f:	pop    rbp
  405070:	and    BYTE PTR [rsi+0x6f],ah
  405073:	outs   dx,BYTE PTR ds:[rsi]
  405074:	je     0x4050a3
  405076:	imul   bp,WORD PTR [rbp+riz*2+0x2e],0x2e2e
  40507d:	or     al,BYTE PTR [rax]
  40507f:	add    BYTE PTR [rcx+0x75],dl
  405082:	gs jb  0x4050fe
  405085:	and    BYTE PTR [rsi+0x6f],ah
  405088:	outs   dx,BYTE PTR ds:[rsi]
  405089:	je     0x4050ab
  40508b:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6120
  405092:	outs   dx,BYTE PTR ds:[rsi]
  405093:	and    BYTE PTR fs:[rax+0x72],dh
  405097:	imul   ebp,DWORD PTR [rsi+0x74],0x73657220
  40509e:	jne    0x40510c
  4050a0:	je     0x40510b
  4050a2:	outs   dx,BYTE PTR ds:[rsi]
  4050a3:	and    BYTE PTR [eax+0x61],dh
  4050a7:	je     0x40511d
  4050a9:	gs jb  0x40511a
  4050ac:	sub    BYTE PTR [rbx+0x29],dh
  4050af:	or     al,BYTE PTR [rax]
  4050b1:	add    BYTE PTR [rax],al
  4050b3:	add    BYTE PTR [rax],al
  4050b5:	add    BYTE PTR [rax],al
  4050b7:	add    BYTE PTR [rax],ah
  4050b9:	and    BYTE PTR [rip+0x2d202c62],ch        # 0x2d607d21
  4050bf:	sub    eax,0x6f6e6769
  4050c4:	jb     0x40512b
  4050c6:	sub    eax,0x6e616c62
  4050cb:	imul   esi,DWORD PTR [rbx+0x20],0x20
  4050cf:	imul   esp,DWORD PTR [rdi+0x6e],0x2065726f
  4050d6:	(bad)  
  4050d7:	ins    BYTE PTR es:[rdi],dx
  4050d8:	(bad)  
  4050d9:	outs   dx,BYTE PTR ds:[rsi]
  4050da:	imul   esi,DWORD PTR [rbx+0x20],0x74
  4050de:	outs   dx,DWORD PTR ds:[rsi]
  4050df:	and    BYTE PTR [rbx+0x6f],ah
  4050e2:	ins    DWORD PTR es:[rdi],dx
  4050e3:	jo     0x40515a
  4050e5:	je     0x40514c
  4050e7:	and    BYTE PTR [rcx+riz*2+0x6e],ch
  4050eb:	addr32 (bad) 
  4050ed:	jne    0x405156
  4050ef:	gs jae 0x4050fc
  4050f2:	add    BYTE PTR [rax],al
  4050f4:	add    BYTE PTR [rax],al
  4050f6:	add    BYTE PTR [rax],al
  4050f8:	and    BYTE PTR [rax],ah
  4050fa:	sub    eax,0x2d202c69
  4050ff:	sub    eax,0x65646e69
  405104:	js     0x405126
  405106:	rex.WB
  405107:	rex.WRX
  405108:	rex.R
  405109:	rex.RB pop r8
  40510b:	and    BYTE PTR [rax],ah
  40510d:	and    BYTE PTR [rax],ah
  40510f:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  405117:	je     0x405181
  405119:	and    BYTE PTR gs:[rcx+0x4e],cl
  40511d:	rex.R
  40511e:	rex.RB pop r8
  405120:	and    BYTE PTR [rsi+0x61],ah
  405123:	movsxd esp,DWORD PTR [rbp+0x20]
  405126:	outs   dx,DWORD PTR ds:[rsi]
  405127:	data16 and BYTE PTR [rbp+0x61],ah
  40512b:	movsxd ebp,DWORD PTR [rax+0x20]
  40512e:	outs   dx,WORD PTR ds:[rsi]
  405130:	outs   dx,BYTE PTR ds:[rsi]
  405131:	je     0x405153
  405133:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x6e6f
  40513a:	ins    BYTE PTR es:[rdi],dx
  40513b:	jns    0x405147
  40513d:	add    BYTE PTR [rax],al
  40513f:	add    BYTE PTR [rax],ah
  405141:	and    BYTE PTR [rip+0x2d202c66],ch        # 0x2d607dad
  405147:	sub    eax,0x6d726f66
  40514c:	(bad)  
  40514d:	je     0x40518c
  40514f:	rex.RX
  405150:	rex.WRXB push r10
  405152:	rex.WRB
  405153:	push   r12
  405155:	and    BYTE PTR [rax],ah
  405157:	jne    0x4051cc
  405159:	and    BYTE PTR gs:[rax+rbp*2+0x65],dh
  40515e:	and    BYTE PTR [rdi+0x69],ah
  405161:	jbe    0x4051c8
  405163:	outs   dx,BYTE PTR ds:[rsi]
  405164:	and    BYTE PTR [rdi+0x75],ch
  405167:	je     0x4051d9
  405169:	jne    0x4051df
  40516b:	and    BYTE PTR [rsi+0x6f],ah
  40516e:	jb     0x4051dd
  405170:	(bad)  
  405171:	je     0x40517d
  405173:	add    BYTE PTR [rax],al
  405175:	add    BYTE PTR [rax],al
  405177:	add    BYTE PTR [rax],ah
  405179:	and    BYTE PTR [rip+0x2d202c56],ch        # 0x2d607dd5
  40517f:	sub    eax,0x73726576
  405184:	imul   ebp,DWORD PTR [rdi+0x6e],0x20202020
  40518b:	and    BYTE PTR [rax],ah
  40518d:	and    BYTE PTR [rax],ah
  40518f:	imul   esi,DWORD PTR fs:[rbx+0x70],0x2079616c
  405197:	outs   dx,WORD PTR ds:[rsi]
  405199:	outs   dx,BYTE PTR ds:[rsi]
  40519a:	je     0x4051bc
  40519c:	movsxd ebp,DWORD PTR [rdi+0x6e]
  40519f:	imul   sp,WORD PTR [rdi+0x20],0x6576
  4051a5:	jb     0x40521a
  4051a7:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6120
  4051ae:	and    BYTE PTR [rbp+0x78],ah
  4051b1:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x20000000
  4051b9:	and    BYTE PTR [rip+0x2d202c68],ch        # 0x2d607e27
  4051bf:	sub    eax,0x706c6568
  4051c4:	and    BYTE PTR [rax],ah
  4051c6:	and    BYTE PTR [rax],ah
  4051c8:	and    BYTE PTR [rax],ah
  4051ca:	and    BYTE PTR [rax],ah
  4051cc:	and    BYTE PTR [rax],ah
  4051ce:	and    BYTE PTR [rcx+rbp*2+0x73],ah
  4051d2:	jo     0x405240
  4051d4:	(bad)  
  4051d5:	jns    0x4051f7
  4051d7:	je     0x405241
  4051d9:	imul   esi,DWORD PTR [rbx+0x20],0x706c6568
  4051e0:	and    BYTE PTR [rcx+0x6e],ah
  4051e3:	and    BYTE PTR fs:[rbp+0x78],ah
  4051e7:	imul   esi,DWORD PTR [rdx+rcx*1+0x0],0x746e6f66
  4051ef:	movsxd ebp,DWORD PTR [rdi+0x6e]
  4051f2:	imul   sp,WORD PTR [rdi+0x20],0x6576
  4051f8:	jb     0x40526d
  4051fa:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  405201:	and    eax,0x64252e64
  405206:	or     al,BYTE PTR [rax]
  405208:	(bad)  
  405209:	imul   edi,DWORD PTR [rdx],0x68563a66
  40520f:	add    BYTE PTR [rip+0x73],ah        # 0x405288
  405215:	add    BYTE PTR [rax],al
  405217:	add    BYTE PTR [rbx+0x61],al
  40521a:	outs   dx,BYTE PTR ds:[rsi]
  40521b:	(bad)  
  40521c:	je     0x40523e
  40521e:	jno    0x405295
  405220:	gs jb  0x40529c
  405223:	and    BYTE PTR [rsi+0x61],ah
  405226:	movsxd esp,DWORD PTR [rbp+0x20]
  405229:	and    eax,0x666f2064
  40522e:	and    BYTE PTR [rsi+0x6f],ah
  405231:	outs   dx,BYTE PTR ds:[rsi]
  405232:	je     0x405254
  405234:	imul   bp,WORD PTR [rbp+riz*2+0x20],0x7325
  40523b:	or     al,BYTE PTR [rax]
  40523d:	add    BYTE PTR [rax],al
  40523f:	add    BYTE PTR [rip+0xffffffff98ffffe8],dh        # 0xffffffff9940522d
  405245:	call   0xffffffffe8d95249
  40524a:	(bad)  
  40524b:	call   FWORD PTR [rax-0x67000018]
  405251:	call   0xffffffffe8d95255
  405256:	(bad)  
  405257:	call   FWORD PTR [rax-0x67000018]
  40525d:	call   0xffffffffe8d95261
  405262:	(bad)  
  405263:	call   FWORD PTR [rax-0x67000018]
  405269:	call   0xffffffffe8d9526d
  40526e:	(bad)  
  40526f:	jmp    FWORD PTR [rsi]
  405271:	call   0xffffffffe8d95275
  405276:	(bad)  
  405277:	call   FWORD PTR [rax-0x67000018]
  40527d:	call   0xffffffffe8c85281
  405282:	(bad)  
  405283:	call   FWORD PTR [rax+0x7dffffe8]
  405289:	call   0xffffffffe8a7528d
  40528e:	(bad)  
  40528f:	jmp    FWORD PTR [rcx+0x67]
  405292:	outs   dx,BYTE PTR ds:[rsi]
  405293:	outs   dx,DWORD PTR ds:[rsi]
  405294:	jb     0x4052fb
  405296:	sub    eax,0x6e616c62
  40529b:	imul   esi,DWORD PTR [rbx+0x0],0x69
  40529f:	outs   dx,BYTE PTR ds:[rsi]
  4052a0:	fs gs js 0x4052a4
  4052a4:	outs   dx,WORD PTR ds:[rsi]
  4052a6:	jb     0x405315
  4052a8:	(bad)  
  4052a9:	je     0x4052ab
  4052ab:	jbe    0x405312
  4052ad:	jb     0x405322
  4052af:	imul   ebp,DWORD PTR [rdi+0x6e],0x6c656800
  4052b6:	jo     0x4052b8
	...
  4052c0:	nop
  4052c1:	push   rdx
  4052c2:	add    BYTE PTR [rax],al
	...
  4052d5:	add    BYTE PTR [rax],al
  4052d7:	add    BYTE PTR [rdx+0x0],ah
  4052da:	add    BYTE PTR [rax],al
  4052dc:	add    BYTE PTR [rax],al
  4052de:	add    BYTE PTR [rax],al
  4052e0:	sahf   
  4052e1:	push   rdx
  4052e2:	add    BYTE PTR [rax],al
  4052e5:	add    BYTE PTR [rax],al
  4052e7:	add    BYTE PTR [rcx],al
	...
  4052f5:	add    BYTE PTR [rax],al
  4052f7:	add    BYTE PTR [rcx+0x0],ch
  4052fa:	add    BYTE PTR [rax],al
  4052fc:	add    BYTE PTR [rax],al
  4052fe:	add    BYTE PTR [rax],al
  405300:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  405301:	push   rdx
  405302:	add    BYTE PTR [rax],al
  405305:	add    BYTE PTR [rax],al
  405307:	add    BYTE PTR [rcx],al
	...
  405315:	add    BYTE PTR [rax],al
  405317:	add    BYTE PTR [rsi+0x0],ah
  40531a:	add    BYTE PTR [rax],al
  40531c:	add    BYTE PTR [rax],al
  40531e:	add    BYTE PTR [rax],al
  405320:	stos   DWORD PTR es:[rdi],eax
  405321:	push   rdx
  405322:	add    BYTE PTR [rax],al
	...
  405335:	add    BYTE PTR [rax],al
  405337:	add    BYTE PTR [rsi+0x0],dl
  40533a:	add    BYTE PTR [rax],al
  40533c:	add    BYTE PTR [rax],al
  40533e:	add    BYTE PTR [rax],al
  405340:	mov    bl,0x52
  405342:	add    BYTE PTR [rax],al
	...
  405355:	add    BYTE PTR [rax],al
  405357:	add    BYTE PTR [rax+0x0],ch
	...
  40537e:	add    BYTE PTR [rax],al
  405380:	add    BYTE PTR [rbp+0x40],0x0
  405387:	add    BYTE PTR [rax+0x4080],al
  40538d:	add    BYTE PTR [rax],al
  40538f:	add    BYTE PTR [rax],ah
  405391:	sbb    al,BYTE PTR [rax+0x0]
	...
  4053a0:	rex.B jb 0x40540a
  4053a3:	jne    0x405412
  4053a5:	outs   dx,BYTE PTR gs:[rsi]
  4053a7:	je     0x4053c9
  4053a9:	outs   dx,DWORD PTR fs:[rsi]
  4053ab:	ins    DWORD PTR es:[rdi],dx
  4053ac:	(bad)  
  4053ad:	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
  4053b4:	jb     0x4053d6
  4053b6:	sub    BYTE PTR [rdi+rcx*2+0x4d],al
  4053ba:	rex.B
  4053bb:	rex.WB
  4053bc:	rex.WRX sub QWORD PTR [rax],r8
  4053bf:	rex.B jb 0x405429
  4053c2:	jne    0x405431
  4053c4:	outs   dx,BYTE PTR gs:[rsi]
  4053c6:	je     0x4053e8
  4053c8:	jae    0x405433
  4053ca:	outs   dx,BYTE PTR ds:[rsi]
  4053cb:	addr32 jne 0x40543a
  4053ce:	(bad)  
  4053cf:	jb     0x40543a
  4053d1:	je     0x40544c
  4053d3:	and    BYTE PTR [rax],ch
  4053d5:	push   rbx
  4053d6:	rex.WB
  4053d7:	rex.RXB
  4053d8:	rex.WRX sub QWORD PTR [rax],r8
  4053db:	add    BYTE PTR [rax],al
  4053dd:	add    BYTE PTR [rax],al
  4053df:	add    BYTE PTR [rdi+0x76],cl
  4053e2:	gs jb  0x40544b
  4053e5:	ins    BYTE PTR es:[rdi],dx
  4053e6:	outs   dx,DWORD PTR ds:[rsi]
  4053e7:	ja     0x405409
  4053e9:	jb     0x40544c
  4053eb:	outs   dx,BYTE PTR ds:[rsi]
  4053ec:	and    BYTE PTR gs:[ebp+0x72],ah
  4053f1:	jb     0x405462
  4053f3:	jb     0x405415
  4053f5:	sub    BYTE PTR [rdi+0x56],cl
  4053f8:	rex.RB push r10
  4053fa:	rex.RX
  4053fb:	rex.WR
  4053fc:	rex.WRXB push r15
  4053fe:	sub    DWORD PTR [rax],eax
  405400:	push   rax
  405401:	(bad)  
  405402:	jb     0x405478
  405404:	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
  40540b:	jae    0x40542d
  40540d:	outs   dx,DWORD PTR ds:[rsi]
  40540e:	data16 and BYTE PTR [rbx+0x69],dh
  405412:	outs   dx,BYTE PTR ds:[esi]
  405414:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  40541b:	and    BYTE PTR gs:[rax],ch
  40541e:	push   rax
  40541f:	rex.WR
  405420:	rex.WRXB push r11
  405422:	push   rbx
  405423:	sub    DWORD PTR [rax],eax
  405425:	add    BYTE PTR [rax],al
  405427:	add    BYTE PTR [rdi+rbp*2+0x74],dl
  40542b:	(bad)  
  40542c:	ins    BYTE PTR es:[rdi],dx
  40542d:	and    BYTE PTR [rdi+rbp*2+0x73],ch
  405431:	jae    0x405453
  405433:	outs   dx,DWORD PTR ds:[rsi]
  405434:	data16 and BYTE PTR [rbx+0x69],dh
  405438:	outs   dx,BYTE PTR ds:[esi]
  40543a:	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
  405441:	and    BYTE PTR gs:[rax],ch
  405444:	push   rsp
  405445:	rex.WR
  405446:	rex.WRXB push r11
  405448:	push   rbx
  405449:	sub    DWORD PTR [rax],eax
  40544b:	add    BYTE PTR [rax],al
  40544d:	add    BYTE PTR [rax],al
  40544f:	add    BYTE PTR [rax+rbp*2+0x65],dl
  405453:	and    BYTE PTR [rdx+0x65],dh
  405456:	jae    0x4054cd
  405458:	ins    BYTE PTR es:[rdi],dx
  405459:	je     0x40547b
  40545b:	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
  405462:	jae    0x4054d1
  405464:	(bad)  
  405465:	ins    BYTE PTR es:[rdi],dx
  405466:	ins    BYTE PTR es:[rdi],dx
  405467:	and    BYTE PTR [rdi+rbp*2+0x20],dh
  40546b:	(bad)  
  40546c:	and    BYTE PTR gs:[rdx+0x65],dh
  405470:	jo     0x4054e4
  405472:	gs jae 0x4054da
  405475:	outs   dx,BYTE PTR ds:[rsi]
  405476:	je     0x4054dd
  405478:	and    BYTE PTR fs:[rax],ch
  40547b:	push   rbp
  40547c:	rex.WRX
  40547d:	rex.R
  40547e:	rex.RB push r10
  405480:	rex.RX
  405481:	rex.WR
  405482:	rex.WRXB push r15
  405484:	sub    DWORD PTR [rax],eax
  405486:	push   rbp
  405487:	outs   dx,BYTE PTR ds:[rsi]
  405488:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  40548c:	outs   dx,BYTE PTR ds:[rsi]
  40548d:	and    BYTE PTR [rbp+0x72],ah
  405490:	jb     0x405501
  405492:	jb     0x405494
  405494:	add    BYTE PTR [rax],al
  405496:	add    BYTE PTR [rax],al
  405498:	pop    rdi
  405499:	ins    DWORD PTR es:[rdi],dx
  40549a:	(bad)  
  40549b:	je     0x405505
  40549d:	gs jb  0x405512
  4054a0:	sub    BYTE PTR [rcx],ch
  4054a2:	cmp    ah,BYTE PTR [rax]
  4054a4:	and    eax,0x6e692073
  4054a9:	and    BYTE PTR [rip+0x67252873],ah        # 0x67657d22
  4054af:	sub    al,0x20
  4054b1:	and    eax,0x20202967
  4054b6:	sub    BYTE PTR [rdx+0x65],dh
  4054b9:	je     0x405531
  4054bb:	(bad)  
  4054bc:	ins    BYTE PTR es:[rdi],dx
  4054bd:	cmp    eax,0xa296725
  4054c2:	add    BYTE PTR [rax],al
  4054c4:	sub    al,0xc7
  4054c6:	(bad)  
  4054c7:	jmp    FWORD PTR [rbp-0x3a]
  4054ca:	(bad)  
  4054cb:	(bad)  
  4054cc:	fadd   st(6),st
  4054ce:	(bad)  
  4054cf:	(bad)  
  4054d0:	in     al,dx
  4054d1:	(bad)  
  4054d2:	(bad)  
  4054d3:	(bad)  
  4054d4:	cld    
  4054d5:	(bad)  
  4054d6:	(bad)  
  4054d7:	dec    DWORD PTR [rdi+rax*8]
  4054da:	(bad)  
  4054db:	call   FWORD PTR [rdi+rax*8]
  4054de:	(bad)  
  4054df:	dec    DWORD PTR [rbp+0x69]
  4054e2:	outs   dx,BYTE PTR ds:[rsi]
  4054e3:	addr32 ja 0x405513
  4054e6:	ja     0x40551e
  4054e8:	xor    al,0x20
  4054ea:	jb     0x405561
  4054ec:	outs   dx,BYTE PTR ds:[rsi]
  4054ed:	je     0x405558
  4054ef:	ins    DWORD PTR es:[rdi],dx
  4054f0:	and    BYTE PTR gs:[rsi+0x61],ah
  4054f4:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
  4054fc:	add    BYTE PTR [rax],al
  4054fe:	add    BYTE PTR [rax],al
  405500:	rex.B
  405501:	fs fs jb 0x40556a
  405505:	jae    0x40557a
  405507:	and    BYTE PTR [rip+0x61682070],ah        # 0x61a8757d
  40550d:	jae    0x40552f
  40550f:	outs   dx,BYTE PTR ds:[rsi]
  405510:	outs   dx,DWORD PTR ds:[rsi]
  405511:	and    BYTE PTR [rcx+0x6d],ch
  405514:	(bad)  
  405515:	addr32 gs sub eax,0x74636573
  40551c:	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
  405523:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  40552a:	jne    0x405591
  40552c:	jb     0x4055a7
  40552e:	and    BYTE PTR [rsi+0x61],ah
  405531:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
  405539:	and    BYTE PTR [rip+0x79622064],ah        # 0x79a275a3
  40553f:	je     0x4055a6
  405541:	jae    0x405563
  405543:	(bad)  
  405544:	je     0x405566
  405546:	(bad)  
  405547:	fs fs jb 0x4055b0
  40554b:	jae    0x4055c0
  40554d:	and    BYTE PTR [rip+0x70],ah        # 0x4055c3
  405553:	add    BYTE PTR [rax],al
  405555:	add    BYTE PTR [rax],al
  405557:	add    BYTE PTR [rax],ah
  405559:	and    BYTE PTR [rsi+0x69],dl
  40555c:	jb     0x4055d2
  40555e:	jne    0x4055c1
  405560:	ins    BYTE PTR es:[rdi],dx
  405561:	push   rax
  405562:	jb     0x4055d3
  405564:	je     0x4055cb
  405566:	movsxd esi,DWORD PTR [rax+riz*1+0x66]
  40556a:	(bad)  
  40556b:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
  405573:	push   0x646f6320
  405578:	and    BYTE PTR gs:[rax],dh
  40557b:	js     0x4055a2
  40557d:	js     0x40557f
  40557f:	add    BYTE PTR [rax],ah
  405581:	and    BYTE PTR [rbp+0x6e],dl
  405584:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405588:	outs   dx,BYTE PTR ds:[rsi]
  405589:	and    BYTE PTR [rax+0x73],dh
  40558c:	gs jne 0x4055f3
  40558f:	outs   dx,DWORD PTR ds:[rsi]
  405590:	and    BYTE PTR [rdx+0x65],dh
  405593:	ins    BYTE PTR es:[rdi],dx
  405594:	outs   dx,DWORD PTR ds:[rsi]
  405595:	movsxd esp,DWORD PTR [rcx+0x74]
  405598:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
  40559f:	je     0x405610
  4055a1:	movsxd ebp,DWORD PTR [rdi+0x6c]
  4055a4:	and    BYTE PTR [rsi+0x65],dh
  4055a7:	jb     0x40561c
  4055a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
  4055b0:	or     al,BYTE PTR [rax]
  4055b2:	add    BYTE PTR [rax],al
  4055b4:	add    BYTE PTR [rax],al
  4055b6:	add    BYTE PTR [rax],al
  4055b8:	and    BYTE PTR [rax],ah
  4055ba:	push   rbp
  4055bb:	outs   dx,BYTE PTR ds:[rsi]
  4055bc:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  4055c0:	outs   dx,BYTE PTR ds:[rsi]
  4055c1:	and    BYTE PTR [rax+0x73],dh
  4055c4:	gs jne 0x40562b
  4055c7:	outs   dx,DWORD PTR ds:[rsi]
  4055c8:	and    BYTE PTR [rdx+0x65],dh
  4055cb:	ins    BYTE PTR es:[rdi],dx
  4055cc:	outs   dx,DWORD PTR ds:[rsi]
  4055cd:	movsxd esp,DWORD PTR [rcx+0x74]
  4055d0:	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
  4055d7:	and    BYTE PTR [rbx+0x69],dh
  4055da:	jp     0x405641
  4055dc:	and    BYTE PTR [rip+0xa2e64],ah        # 0x4a8446
	...
  4055ee:	add    BYTE PTR [rax],al
  4055f0:	cs jo  0x405657
  4055f3:	(bad)  
  4055f4:	je     0x405657
	...
  4055fe:	add    BYTE PTR [rax],al
  405600:	and    eax,0x203a73
  405605:	push   rax
  405606:	rex.WRXB push r11
  405608:	rex.WB pop r8
  40560a:	rex.WR pop rcx
  40560c:	pop    rdi
  40560d:	rex.XB
  40560e:	rex.WRXB push r10
  405610:	push   rdx
  405611:	rex.RB
  405612:	rex.XB push r12
	...
  405620:	jne    0x405690
  405622:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405626:	outs   dx,BYTE PTR ds:[rsi]
  405627:	and    BYTE PTR [rdi+0x70],ch
  40562a:	je     0x405695
  40562c:	outs   dx,DWORD PTR ds:[rsi]
  40562d:	outs   dx,BYTE PTR ds:[rsi]
  40562e:	and    BYTE PTR [rip+0x7325202d],ch        # 0x73657661
	...
  405640:	jne    0x4056b0
  405642:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  405646:	outs   dx,BYTE PTR ds:[rsi]
  405647:	and    BYTE PTR [rdi+0x70],ch
  40564a:	je     0x4056b5
  40564c:	outs   dx,DWORD PTR ds:[rsi]
  40564d:	outs   dx,BYTE PTR ds:[rsi]
  40564e:	and    BYTE PTR [rip+0x6325202d],ch        # 0x63657681
	...
  405660:	outs   dx,DWORD PTR ds:[rsi]
  405661:	jo     0x4056d7
  405663:	imul   ebp,DWORD PTR [rdi+0x6e],0x656f6420
  40566a:	jae    0x4056da
  40566c:	(bad)  
  40566d:	je     0x40568f
  40566f:	je     0x4056d2
  405671:	imul   esp,DWORD PTR [rbp+0x20],0x61
  405675:	outs   dx,BYTE PTR ds:[rsi]
  405676:	and    BYTE PTR [rcx+0x72],ah
  405679:	addr32 jne 0x4056e9
  40567c:	outs   dx,BYTE PTR gs:[rsi]
  40567e:	je     0x4056a0
  405680:	sub    eax,0x2e25202d
  405685:	sub    dh,BYTE PTR [rbx+0x0]
	...
  405690:	(bad)  
  405691:	ins    DWORD PTR es:[rdi],dx
  405692:	(bad)  
  405693:	imul   esp,DWORD PTR [rdi+0x75],0x2073756f
  40569a:	outs   dx,DWORD PTR ds:[rsi]
  40569b:	jo     0x405711
  40569d:	imul   ebp,DWORD PTR [rdi+0x6e],0x202d2d20
  4056a4:	and    eax,0x732a2e
	...
  4056bd:	add    BYTE PTR [rax],al
  4056bf:	add    BYTE PTR [rdi+0x70],ch
  4056c2:	je     0x40572d
  4056c4:	outs   dx,DWORD PTR ds:[rsi]
  4056c5:	outs   dx,BYTE PTR ds:[rsi]
  4056c6:	and    BYTE PTR [rdx+0x65],dh
  4056c9:	jno    0x405740
  4056cb:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  4056d2:	and    BYTE PTR [rcx+0x72],ah
  4056d5:	addr32 jne 0x405745
  4056d8:	outs   dx,BYTE PTR gs:[rsi]
  4056da:	je     0x4056fc
  4056dc:	sub    eax,0x7325202d
	...
  4056fd:	add    BYTE PTR [rax],al
  4056ff:	add    BYTE PTR [rdi+0x70],ch
  405702:	je     0x40576d
  405704:	outs   dx,DWORD PTR ds:[rsi]
  405705:	outs   dx,BYTE PTR ds:[rsi]
  405706:	and    BYTE PTR [rdx+0x65],dh
  405709:	jno    0x405780
  40570b:	imul   esi,DWORD PTR [rdx+0x65],0x6e612073
  405712:	and    BYTE PTR [rcx+0x72],ah
  405715:	addr32 jne 0x405785
  405718:	outs   dx,BYTE PTR gs:[rsi]
  40571a:	je     0x40573c
  40571c:	sub    eax,0x6325202d
	...
  40573d:	add    BYTE PTR [rax],al
  40573f:	add    BYTE PTR [rax+0x40],al
  405742:	add    BYTE PTR [rax],al
	...
  40574d:	add    BYTE PTR [rax],al
  40574f:	add    BYTE PTR [rax+0x4040],al
	...
  40575d:	add    BYTE PTR [rax],al
  40575f:	add    BYTE PTR [rax],dl
  405761:	cmp    al,0x40
	...
  40576f:	add    al,dl
  405771:	pop    rsp
  405772:	add    BYTE PTR [rax],al
	...
  40577d:	add    BYTE PTR [rax],al
  40577f:	add    al,dl
  405781:	pop    rsp
  405782:	add    BYTE PTR [rax],al
	...
  40578d:	add    BYTE PTR [rax],al
  40578f:	add    BYTE PTR [rax+0x4053],dl
	...
  4057a1:	add    BYTE PTR [rax+0x0],al
	...
  4057b0:	js     0x405745
  4057b2:	add    BYTE PTR [rax],al
	...
  4057bd:	add    BYTE PTR [rax],al
  4057bf:	add    BYTE PTR [rax+0x4093],dl
	...
  4057cd:	add    BYTE PTR [rax],al
  4057cf:	add    BYTE PTR [rax+0x4093],bh
	...
  4057dd:	add    BYTE PTR [rax],al
  4057df:	add    al,dl
  4057e1:	xchg   ebx,eax
  4057e2:	add    BYTE PTR [rax],al
	...
  4057ed:	add    BYTE PTR [rax],al
  4057ef:	add    al,ch
  4057f1:	xchg   ebx,eax
  4057f2:	add    BYTE PTR [rax],al
	...
  4057fd:	add    BYTE PTR [rax],al
  4057ff:	add    al,al
  405801:	xchg   BYTE PTR [rax+0x0],al
	...
  405810:	sub    BYTE PTR [rdx+0x40],cl
	...
  40581e:	add    BYTE PTR [rax],al
  405820:	and    BYTE PTR [rdx+0x40],cl
	...
  40582e:	add    BYTE PTR [rax],al
  405830:	adc    BYTE PTR [rdx+0x40],cl
	...
  40583e:	add    BYTE PTR [rax],al
  405840:	sbb    BYTE PTR [rdx+0x40],cl
	...
  40584e:	add    BYTE PTR [rax],al
  405850:	add    BYTE PTR [rax+0x40],ah
	...
  40585e:	add    BYTE PTR [rax],al
  405860:	adc    BYTE PTR [rax+0x40],ah
	...
  40586e:	add    BYTE PTR [rax],al
  405870:	sbb    BYTE PTR [rax+0x40],ah
	...
  40587e:	add    BYTE PTR [rax],al
  405880:	xor    BYTE PTR [rax+0x40],ah
	...
  40588e:	add    BYTE PTR [rax],al
  405890:	rex add BYTE PTR [rax+0x0],0x0
	...
  40589d:	add    BYTE PTR [rax],al
  40589f:	add    BYTE PTR [rax+0x4086],dl
	...
  4058ad:	add    BYTE PTR [rax],al
  4058af:	add    BYTE PTR [rax+0x4023],dh
	...
  4058c1:	sbb    eax,DWORD PTR [rax+0x0]
	...
  4058d0:	xchg   BYTE PTR [rax+0x0],al
	...
  4058e0:	jo     0x405868
  4058e2:	add    BYTE PTR [rax],al
	...
  4058ed:	add    BYTE PTR [rax],al
  4058ef:	add    BYTE PTR [rax-0x80],dl
  4058f2:	add    BYTE PTR [rax],al
	...
  4058fd:	add    BYTE PTR [rax],al
  4058ff:	add    BYTE PTR [rax-0x7a],bl
  405902:	add    BYTE PTR [rax],al
	...
  40590d:	add    BYTE PTR [rax],al
  40590f:	add    BYTE PTR [rsi+rax*4+0x40],dl
	...
  40591f:	add    BYTE PTR [rax-0x7a],dl
  405922:	add    BYTE PTR [rax],al
	...
  40592d:	add    BYTE PTR [rax],al
  40592f:	add    BYTE PTR [rax-0x76],dl
  405932:	add    BYTE PTR [rax],al
	...
  40593d:	add    BYTE PTR [rax],al
  40593f:	add    BYTE PTR [rax+rax*2+0x40],ch
	...
  40594f:	add    BYTE PTR [rdi+0x43],al
  405952:	rex.XB cmp spl,BYTE PTR [r8]
  405955:	sub    BYTE PTR [rdi+0x4e],al
  405958:	push   rbp
  405959:	sub    DWORD PTR [rax],esp
  40595b:	xor    al,0x2e
  40595d:	cmp    DWORD PTR [rsi],ebp
  40595f:	xor    al,0x0
	...
  40596d:	add    BYTE PTR [rax],al
  40596f:	add    BYTE PTR [rdi+0x43],al
  405972:	rex.XB cmp spl,BYTE PTR [r8]
  405975:	sub    BYTE PTR [rdi+0x4e],al
  405978:	push   rbp
  405979:	sub    DWORD PTR [rax],esp
  40597b:	xor    al,0x2e
  40597d:	cmp    DWORD PTR [rsi],ebp
  40597f:	xor    al,0x0
	...
  40598d:	add    BYTE PTR [rax],al
  40598f:	add    BYTE PTR [rdi+0x43],al
  405992:	rex.XB cmp spl,BYTE PTR [r8]
  405995:	sub    BYTE PTR [rdi+0x4e],al
  405998:	push   rbp
  405999:	sub    DWORD PTR [rax],esp
  40599b:	xor    al,0x2e
  40599d:	cmp    DWORD PTR [rsi],ebp
  40599f:	xor    al,0x0
	...
  4059ad:	add    BYTE PTR [rax],al
  4059af:	add    BYTE PTR [rdi+0x43],al
  4059b2:	rex.XB cmp spl,BYTE PTR [r8]
  4059b5:	sub    BYTE PTR [rdi+0x4e],al
  4059b8:	push   rbp
  4059b9:	sub    DWORD PTR [rax],esp
  4059bb:	xor    al,0x2e
  4059bd:	cmp    DWORD PTR [rsi],ebp
  4059bf:	xor    al,0x0
	...
  4059cd:	add    BYTE PTR [rax],al
  4059cf:	add    BYTE PTR [rdi+0x43],al
  4059d2:	rex.XB cmp spl,BYTE PTR [r8]
  4059d5:	sub    BYTE PTR [rdi+0x4e],al
  4059d8:	push   rbp
  4059d9:	sub    DWORD PTR [rax],esp
  4059db:	xor    al,0x2e
  4059dd:	cmp    DWORD PTR [rsi],ebp
  4059df:	xor    al,0x0
	...
  4059ed:	add    BYTE PTR [rax],al
  4059ef:	add    BYTE PTR [rdi+0x43],al
  4059f2:	rex.XB cmp spl,BYTE PTR [r8]
  4059f5:	sub    BYTE PTR [rdi+0x4e],al
  4059f8:	push   rbp
  4059f9:	sub    DWORD PTR [rax],esp
  4059fb:	xor    al,0x2e
  4059fd:	cmp    DWORD PTR [rsi],ebp
  4059ff:	xor    al,0x0
	...
  405a0d:	add    BYTE PTR [rax],al
  405a0f:	add    BYTE PTR [rdi+0x43],al
  405a12:	rex.XB cmp spl,BYTE PTR [r8]
  405a15:	sub    BYTE PTR [rdi+0x4e],al
  405a18:	push   rbp
  405a19:	sub    DWORD PTR [rax],esp
  405a1b:	xor    al,0x2e
  405a1d:	cmp    DWORD PTR [rsi],ebp
  405a1f:	xor    al,0x0
	...
  405a2d:	add    BYTE PTR [rax],al
  405a2f:	add    BYTE PTR [rdi+0x43],al
  405a32:	rex.XB cmp spl,BYTE PTR [r8]
  405a35:	sub    BYTE PTR [rdi+0x4e],al
  405a38:	push   rbp
  405a39:	sub    DWORD PTR [rax],esp
  405a3b:	xor    al,0x2e
  405a3d:	cmp    DWORD PTR [rsi],ebp
  405a3f:	xor    al,0x0
	...
  405a4d:	add    BYTE PTR [rax],al
  405a4f:	add    BYTE PTR [rdi+0x43],al
  405a52:	rex.XB cmp spl,BYTE PTR [r8]
  405a55:	sub    BYTE PTR [rdi+0x4e],al
  405a58:	push   rbp
  405a59:	sub    DWORD PTR [rax],esp
  405a5b:	xor    al,0x2e
  405a5d:	cmp    DWORD PTR [rsi],ebp
  405a5f:	xor    al,0x0
	...
  405a6d:	add    BYTE PTR [rax],al
  405a6f:	add    BYTE PTR [rdi+0x43],al
  405a72:	rex.XB cmp spl,BYTE PTR [r8]
  405a75:	sub    BYTE PTR [rdi+0x4e],al
  405a78:	push   rbp
  405a79:	sub    DWORD PTR [rax],esp
  405a7b:	xor    al,0x2e
  405a7d:	cmp    DWORD PTR [rsi],ebp
  405a7f:	xor    al,0x0
	...
  405a8d:	add    BYTE PTR [rax],al
  405a8f:	add    BYTE PTR [rdi+0x43],al
  405a92:	rex.XB cmp spl,BYTE PTR [r8]
  405a95:	sub    BYTE PTR [rdi+0x4e],al
  405a98:	push   rbp
  405a99:	sub    DWORD PTR [rax],esp
  405a9b:	xor    al,0x2e
  405a9d:	cmp    DWORD PTR [rsi],ebp
  405a9f:	xor    al,0x0
	...
  405aad:	add    BYTE PTR [rax],al
  405aaf:	add    BYTE PTR [rdi+0x43],al
  405ab2:	rex.XB cmp spl,BYTE PTR [r8]
  405ab5:	sub    BYTE PTR [rdi+0x4e],al
  405ab8:	push   rbp
  405ab9:	sub    DWORD PTR [rax],esp
  405abb:	xor    al,0x2e
  405abd:	cmp    DWORD PTR [rsi],ebp
  405abf:	xor    al,0x0
	...
  405acd:	add    BYTE PTR [rax],al
  405acf:	add    BYTE PTR [rdi+0x43],al
  405ad2:	rex.XB cmp spl,BYTE PTR [r8]
  405ad5:	sub    BYTE PTR [rdi+0x4e],al
  405ad8:	push   rbp
  405ad9:	sub    DWORD PTR [rax],esp
  405adb:	xor    al,0x2e
  405add:	cmp    DWORD PTR [rsi],ebp
  405adf:	xor    al,0x0
	...
  405aed:	add    BYTE PTR [rax],al
  405aef:	add    BYTE PTR [rdi+0x43],al
  405af2:	rex.XB cmp spl,BYTE PTR [r8]
  405af5:	sub    BYTE PTR [rdi+0x4e],al
  405af8:	push   rbp
  405af9:	sub    DWORD PTR [rax],esp
  405afb:	xor    al,0x2e
  405afd:	cmp    DWORD PTR [rsi],ebp
  405aff:	xor    al,0x0
	...
  405b0d:	add    BYTE PTR [rax],al
  405b0f:	add    BYTE PTR [rdi+0x43],al
  405b12:	rex.XB cmp spl,BYTE PTR [r8]
  405b15:	sub    BYTE PTR [rdi+0x4e],al
  405b18:	push   rbp
  405b19:	sub    DWORD PTR [rax],esp
  405b1b:	xor    al,0x2e
  405b1d:	cmp    DWORD PTR [rsi],ebp
  405b1f:	xor    al,0x0
	...
  405b2d:	add    BYTE PTR [rax],al
  405b2f:	add    BYTE PTR [rdi+0x43],al
  405b32:	rex.XB cmp spl,BYTE PTR [r8]
  405b35:	sub    BYTE PTR [rdi+0x4e],al
  405b38:	push   rbp
  405b39:	sub    DWORD PTR [rax],esp
  405b3b:	xor    al,0x2e
  405b3d:	cmp    DWORD PTR [rsi],ebp
  405b3f:	xor    al,0x0
	...
  405b4d:	add    BYTE PTR [rax],al
  405b4f:	add    BYTE PTR [rdi+0x43],al
  405b52:	rex.XB cmp spl,BYTE PTR [r8]
  405b55:	sub    BYTE PTR [rdi+0x4e],al
  405b58:	push   rbp
  405b59:	sub    DWORD PTR [rax],esp
  405b5b:	xor    al,0x2e
  405b5d:	cmp    DWORD PTR [rsi],ebp
  405b5f:	xor    al,0x0
	...
  405b6d:	add    BYTE PTR [rax],al
  405b6f:	add    BYTE PTR [rdi+0x43],al
  405b72:	rex.XB cmp spl,BYTE PTR [r8]
  405b75:	sub    BYTE PTR [rdi+0x4e],al
  405b78:	push   rbp
  405b79:	sub    DWORD PTR [rax],esp
  405b7b:	xor    al,0x2e
  405b7d:	cmp    DWORD PTR [rsi],ebp
  405b7f:	xor    al,0x0
	...
  405b8d:	add    BYTE PTR [rax],al
  405b8f:	add    BYTE PTR [rdi+0x43],al
  405b92:	rex.XB cmp spl,BYTE PTR [r8]
  405b95:	sub    BYTE PTR [rdi+0x4e],al
  405b98:	push   rbp
  405b99:	sub    DWORD PTR [rax],esp
  405b9b:	xor    al,0x2e
  405b9d:	cmp    DWORD PTR [rsi],ebp
  405b9f:	xor    al,0x0
	...
  405bad:	add    BYTE PTR [rax],al
  405baf:	add    BYTE PTR [rdi+0x43],al
  405bb2:	rex.XB cmp spl,BYTE PTR [r8]
  405bb5:	sub    BYTE PTR [rdi+0x4e],al
  405bb8:	push   rbp
  405bb9:	sub    DWORD PTR [rax],esp
  405bbb:	xor    al,0x2e
  405bbd:	cmp    DWORD PTR [rsi],ebp
  405bbf:	xor    al,0x0
	...
  405bcd:	add    BYTE PTR [rax],al
  405bcf:	add    BYTE PTR [rdi+0x43],al
  405bd2:	rex.XB cmp spl,BYTE PTR [r8]
  405bd5:	sub    BYTE PTR [rdi+0x4e],al
  405bd8:	push   rbp
  405bd9:	sub    DWORD PTR [rax],esp
  405bdb:	xor    al,0x2e
  405bdd:	cmp    DWORD PTR [rsi],ebp
  405bdf:	xor    al,0x0
	...
  405bed:	add    BYTE PTR [rax],al
  405bef:	add    BYTE PTR [rdi+0x43],al
  405bf2:	rex.XB cmp spl,BYTE PTR [r8]
  405bf5:	sub    BYTE PTR [rdi+0x4e],al
  405bf8:	push   rbp
  405bf9:	sub    DWORD PTR [rax],esp
  405bfb:	xor    al,0x2e
  405bfd:	cmp    DWORD PTR [rsi],ebp
  405bff:	xor    al,0x0
	...
  405c0d:	add    BYTE PTR [rax],al
  405c0f:	add    BYTE PTR [rdi+0x43],al
  405c12:	rex.XB cmp spl,BYTE PTR [r8]
  405c15:	sub    BYTE PTR [rdi+0x4e],al
  405c18:	push   rbp
  405c19:	sub    DWORD PTR [rax],esp
  405c1b:	xor    al,0x2e
  405c1d:	cmp    DWORD PTR [rsi],ebp
  405c1f:	xor    al,0x0
	...
  405c2d:	add    BYTE PTR [rax],al
  405c2f:	add    BYTE PTR [rdi+0x43],al
  405c32:	rex.XB cmp spl,BYTE PTR [r8]
  405c35:	sub    BYTE PTR [rdi+0x4e],al
  405c38:	push   rbp
  405c39:	sub    DWORD PTR [rax],esp
  405c3b:	xor    al,0x2e
  405c3d:	cmp    DWORD PTR [rsi],ebp
  405c3f:	xor    al,0x0
	...
  405c4d:	add    BYTE PTR [rax],al
  405c4f:	add    BYTE PTR [rdi+0x43],al
  405c52:	rex.XB cmp spl,BYTE PTR [r8]
  405c55:	sub    BYTE PTR [rdi+0x4e],al
  405c58:	push   rbp
  405c59:	sub    DWORD PTR [rax],esp
  405c5b:	xor    al,0x2e
  405c5d:	cmp    DWORD PTR [rsi],ebp
  405c5f:	xor    al,0x0
	...
  405c6d:	add    BYTE PTR [rax],al
  405c6f:	add    BYTE PTR [rdi+0x43],al
  405c72:	rex.XB cmp spl,BYTE PTR [r8]
  405c75:	sub    BYTE PTR [rdi+0x4e],al
  405c78:	push   rbp
  405c79:	sub    DWORD PTR [rax],esp
  405c7b:	xor    al,0x2e
  405c7d:	cmp    DWORD PTR [rsi],ebp
  405c7f:	xor    al,0x0
	...
  405c8d:	add    BYTE PTR [rax],al
  405c8f:	add    BYTE PTR [rdi+0x43],al
  405c92:	rex.XB cmp spl,BYTE PTR [r8]
  405c95:	sub    BYTE PTR [rdi+0x4e],al
  405c98:	push   rbp
  405c99:	sub    DWORD PTR [rax],esp
  405c9b:	xor    al,0x2e
  405c9d:	cmp    DWORD PTR [rsi],ebp
  405c9f:	xor    al,0x0
	...
  405cad:	add    BYTE PTR [rax],al
  405caf:	add    BYTE PTR [rdi+0x43],al
  405cb2:	rex.XB cmp spl,BYTE PTR [r8]
  405cb5:	sub    BYTE PTR [rdi+0x4e],al
  405cb8:	push   rbp
  405cb9:	sub    DWORD PTR [rax],esp
  405cbb:	xor    al,0x2e
  405cbd:	cmp    DWORD PTR [rsi],ebp
  405cbf:	xor    al,0x0
	...

Disassembly of section .pdata:

0000000000406000 <.pdata>:
  406000:	add    BYTE PTR [rax],dl
  406002:	add    BYTE PTR [rax],al
  406004:	add    DWORD PTR [rax],edx
  406006:	add    BYTE PTR [rax],al
  406008:	add    BYTE PTR [rax+0x0],dh
  40600b:	add    BYTE PTR [rax],dl
  40600d:	adc    BYTE PTR [rax],al
  40600f:	add    BYTE PTR [rcx+0x11],dl
  406012:	add    BYTE PTR [rax],al
  406014:	add    al,0x70
  406016:	add    BYTE PTR [rax],al
  406018:	(bad)  
  406019:	adc    DWORD PTR [rax],eax
  40601b:	add    BYTE PTR [rsi+0xc000011],ch
  406021:	jo     0x406023
  406023:	add    BYTE PTR [rax-0x31ffffef],dh
  406029:	adc    al,0x0
  40602b:	add    BYTE PTR [rax+rsi*2],dl
  40602e:	add    BYTE PTR [rax],al
  406030:	rcl    BYTE PTR [rax+rax*1],1
  406033:	add    dl,dh
  406035:	adc    al,0x0
  406037:	add    BYTE PTR [rax],ch
  406039:	jo     0x40603b
  40603b:	add    BYTE PTR [rax],al
  40603d:	adc    eax,0x15220000
  406042:	add    BYTE PTR [rax],al
  406044:	rex.W jo 0x406047
  406047:	add    BYTE PTR [rax],dh
  406049:	adc    eax,0x161f0000
  40604e:	add    BYTE PTR [rax],al
  406050:	push   0x60000070
  406055:	(bad)  
  406056:	add    BYTE PTR [rax],al
  406058:	(bad)  
  406059:	(bad)  
  40605a:	add    BYTE PTR [rax],al
  40605c:	mov    WORD PTR [rax+0x0],?
  40605f:	add    BYTE PTR [rax],dl
  406061:	(bad)  
  406062:	add    BYTE PTR [rax],al
  406064:	sub    DWORD PTR [rdi],edx
  406066:	add    BYTE PTR [rax],al
  406068:	xchg   esp,eax
  406069:	jo     0x40606b
  40606b:	add    BYTE PTR [rax],dh
  40606d:	(bad)  
  40606e:	add    BYTE PTR [rax],al
  406070:	gs (bad) 
  406072:	add    BYTE PTR [rax],al
  406074:	pushf  
  406075:	jo     0x406077
  406077:	add    BYTE PTR [rax+0x17],dh
  40607a:	add    BYTE PTR [rax],al
  40607c:	(bad)
  40607f:	add    BYTE PTR [rax+rsi*2+0x17d00000],ah
  406086:	add    BYTE PTR [rax],al
  406088:	in     al,dx
  406089:	(bad)  
  40608a:	add    BYTE PTR [rax],al
  40608c:	mov    al,0x70
  40608e:	add    BYTE PTR [rax],al
  406090:	lock (bad) 
  406092:	add    BYTE PTR [rax],al
  406094:	cli    
  406095:	(bad)  
  406096:	add    BYTE PTR [rax],al
  406098:	mov    ah,0x70
  40609a:	add    BYTE PTR [rax],al
  40609c:	add    BYTE PTR [rax],bl
  40609e:	add    BYTE PTR [rax],al
  4060a0:	add    ebx,DWORD PTR [rax]
  4060a2:	add    BYTE PTR [rax],al
  4060a4:	mov    eax,0x10000070
  4060a9:	sbb    BYTE PTR [rax],al
  4060ab:	add    dh,ah
  4060ad:	sbb    BYTE PTR [rax],al
  4060af:	add    BYTE PTR [rax+rsi*2+0x18f00000],bh
  4060b6:	add    BYTE PTR [rax],al
  4060b8:	jmp    0x4060d3
  4060ba:	add    BYTE PTR [rax],al
  4060bc:	int3   
  4060bd:	jo     0x4060bf
  4060bf:	add    al,dh
  4060c1:	sbb    DWORD PTR [rax],eax
  4060c3:	add    BYTE PTR [rdi],bl
  4060c5:	sbb    al,BYTE PTR [rax]
  4060c7:	add    ah,bl
  4060c9:	jo     0x4060cb
  4060cb:	add    BYTE PTR [rax],ah
  4060cd:	sbb    al,BYTE PTR [rax]
  4060cf:	add    BYTE PTR [rcx-0x1bffffe6],cl
  4060d5:	jo     0x4060d7
  4060d7:	add    BYTE PTR [rax-0x6cffffe6],dl
  4060dd:	sbb    al,BYTE PTR [rax]
  4060df:	add    al,dh
  4060e1:	jo     0x4060e3
  4060e3:	add    BYTE PTR [rax-0x1effffe6],ah
  4060e9:	sbb    al,BYTE PTR [rax]
  4060eb:	add    ah,dh
  4060ed:	jo     0x4060ef
  4060ef:	add    al,dh
  4060f1:	sbb    al,BYTE PTR [rax]
  4060f3:	add    ah,bh
  4060f5:	sbb    al,BYTE PTR [rax]
  4060f7:	add    ah,bh
  4060f9:	jo     0x4060fb
  4060fb:	add    BYTE PTR [rax],al
  4060fd:	sbb    eax,DWORD PTR [rax]
  4060ff:	add    ah,bh
  406101:	sbb    eax,DWORD PTR [rax]
  406103:	add    BYTE PTR [rax],al
  406105:	jno    0x406107
  406107:	add    BYTE PTR [rax],al
  406109:	sbb    al,0x0
  40610b:	add    BYTE PTR [rbx],al
  40610d:	sbb    al,0x0
  40610f:	add    BYTE PTR [rax],bl
  406111:	jno    0x406113
  406113:	add    BYTE PTR [rax],dl
  406115:	sbb    al,0x0
  406117:	add    BYTE PTR [rsp+rbx*1],dl
  40611a:	add    BYTE PTR [rax],al
  40611c:	sbb    al,0x71
  40611e:	add    BYTE PTR [rax],al
  406120:	and    BYTE PTR [rax+rax*1],bl
  406123:	add    BYTE PTR [rsp+rbx*1],ah
  406126:	add    BYTE PTR [rax],al
  406128:	and    BYTE PTR [rcx+0x0],dh
  40612b:	add    BYTE PTR [rax],dh
  40612d:	sbb    al,0x0
  40612f:	add    BYTE PTR [rcx+0x2400001c],dl
  406135:	jno    0x406137
  406137:	add    BYTE PTR [rax+0x200001c],ah
  40613d:	(bad)  
  40613e:	add    BYTE PTR [rax],al
  406140:	xor    BYTE PTR [rcx+0x0],dh
  406143:	add    BYTE PTR [rax],dl
  406145:	(bad)  
  406146:	add    BYTE PTR [rax],al
  406148:	or     DWORD PTR [rcx],esp
  40614a:	add    BYTE PTR [rax],al
  40614c:	rex.R jno 0x40614f
  40614f:	add    BYTE PTR [rax],dl
  406151:	and    DWORD PTR [rax],eax
  406153:	add    BYTE PTR [rsi+0x5c000022],dh
  406159:	jno    0x40615b
  40615b:	add    al,al
  40615d:	and    al,BYTE PTR [rax]
  40615f:	add    BYTE PTR [rbx+riz*1+0x71640000],ch
  406166:	add    BYTE PTR [rax],al
  406168:	mov    al,0x23
  40616a:	add    BYTE PTR [rax],al
  40616c:	push   0x74000025
  406171:	jno    0x406173
  406173:	add    BYTE PTR [rax+0x25],dh
  406176:	add    BYTE PTR [rax],al
  406178:	frstor [rip+0x717c0000]        # 0x71bc617e
  40617e:	add    BYTE PTR [rax],al
  406180:	loopne 0x4061a7
  406182:	add    BYTE PTR [rax],al
  406184:	pop    rdi
  406185:	add    BYTE PTR es:[rax],al
  406188:	mov    WORD PTR [rcx+0x0],?
  40618b:	add    BYTE PTR [rax+0x26],ah
  40618e:	add    BYTE PTR [rax],al
  406190:	jmp    QWORD PTR [rsi]
  406192:	add    BYTE PTR [rax],al
  406194:	cwde   
  406195:	jno    0x406197
  406197:	add    BYTE PTR [rax],al
  406199:	(bad)  
  40619a:	add    BYTE PTR [rax],al
  40619c:	fisub  DWORD PTR [rdi]
  40619e:	add    BYTE PTR [rax],al
  4061a0:	movabs al,ds:0xff000027e0000071
  4061a9:	(bad)  
  4061aa:	add    BYTE PTR [rax],al
  4061ac:	test   al,0x71
  4061ae:	add    BYTE PTR [rax],al
  4061b0:	add    BYTE PTR [rax],ch
  4061b2:	add    BYTE PTR [rax],al
  4061b4:	adc    ch,BYTE PTR [rax]
  4061b6:	add    BYTE PTR [rax],al
  4061b8:	lods   al,BYTE PTR ds:[rsi]
  4061b9:	jno    0x4061bb
  4061bb:	add    BYTE PTR [rax],ah
  4061bd:	sub    BYTE PTR [rax],al
  4061bf:	add    BYTE PTR [rbp+0x28],ah
  4061c2:	add    BYTE PTR [rax],al
  4061c4:	mov    al,0x71
  4061c6:	add    BYTE PTR [rax],al
  4061c8:	jo     0x4061f2
  4061ca:	add    BYTE PTR [rax],al
  4061cc:	(bad)  
  4061cd:	sub    DWORD PTR [rax],eax
  4061cf:	add    BYTE PTR [rcx+rsi*2+0x29100000],dh
  4061d6:	add    BYTE PTR [rax],al
  4061d8:	push   rbx
  4061d9:	sub    DWORD PTR [rax],eax
  4061db:	add    al,al
  4061dd:	jno    0x4061df
  4061df:	add    BYTE PTR [rax+0x29],ah
  4061e2:	add    BYTE PTR [rax],al
  4061e4:	fwait
  4061e5:	sub    DWORD PTR [rax],eax
  4061e7:	add    ah,cl
  4061e9:	jno    0x4061eb
  4061eb:	add    BYTE PTR [rax+0x2e000029],ah
  4061f1:	sub    al,BYTE PTR [rax]
  4061f3:	add    ah,dl
  4061f5:	jno    0x4061f7
  4061f7:	add    BYTE PTR [rax],dh
  4061f9:	sub    al,BYTE PTR [rax]
  4061fb:	add    BYTE PTR [rax+0x2a],ch
  4061fe:	add    BYTE PTR [rax],al
  406200:	loopne 0x406273
  406202:	add    BYTE PTR [rax],al
  406204:	jo     0x406230
  406206:	add    BYTE PTR [rax],al
  406208:	(bad)
  40620b:	add    ah,ch
  40620d:	jno    0x40620f
  40620f:	add    al,dl
  406211:	sub    al,BYTE PTR [rax]
  406213:	add    BYTE PTR [rsi+0x2b],bh
  406216:	add    BYTE PTR [rax],al
  406218:	clc    
  406219:	jno    0x40621b
  40621b:	add    al,al
  40621d:	sub    eax,DWORD PTR [rax]
  40621f:	add    BYTE PTR [rdx+0x2c],ch
  406222:	add    BYTE PTR [rax],al
  406224:	or     BYTE PTR [rdx+0x0],dh
  406227:	add    BYTE PTR [rax+0x2c],dh
  40622a:	add    BYTE PTR [rax],al
  40622c:	lock sub al,0x0
  40622f:	add    BYTE PTR [rax],bl
  406231:	jb     0x406233
  406233:	add    al,dh
  406235:	sub    al,0x0
  406237:	add    BYTE PTR [rsi+0x24000030],ah
  40623d:	jb     0x40623f
  40623f:	add    BYTE PTR [rax-0x6affffd0],dh
  406245:	(bad)  
  406246:	add    BYTE PTR [rax],al
  406248:	cmp    al,0x72
  40624a:	add    BYTE PTR [rax],al
  40624c:	movabs al,ds:0x54000037c2000037
  406255:	jb     0x406257
  406257:	add    al,dl
  406259:	(bad)  
  40625a:	add    BYTE PTR [rax],al
  40625c:	lock (bad) 
  40625e:	add    BYTE PTR [rax],al
  406260:	pop    rsp
  406261:	jb     0x406263
  406263:	add    al,dh
  406265:	(bad)  
  406266:	add    BYTE PTR [rax],al
  406268:	adc    BYTE PTR [rax],bh
  40626a:	add    BYTE PTR [rax],al
  40626c:	fs jb  0x40626f
  40626f:	add    BYTE PTR [rax],dl
  406271:	cmp    DWORD PTR [rax],eax
  406273:	add    BYTE PTR [rax],bl
  406275:	cmp    DWORD PTR [rax],eax
  406277:	add    BYTE PTR [rdx+rsi*2+0x0],ch
  40627b:	add    BYTE PTR [rax],ah
  40627d:	cmp    DWORD PTR [rax],eax
  40627f:	add    BYTE PTR [rbx],ch
  406281:	cmp    DWORD PTR [rax],eax
  406283:	add    BYTE PTR [rax+0x72],dh
  406286:	add    BYTE PTR [rax],al
  406288:	lock cmp DWORD PTR [rax],eax
  40628b:	add    BYTE PTR [rcx],cl
  40628d:	cmp    al,0x0
  40628f:	add    BYTE PTR [rax+rsi*2+0x0],dh
	...

Disassembly of section .xdata:

0000000000407000 <.xdata>:
  407000:	add    DWORD PTR [rax],eax
  407002:	add    BYTE PTR [rax],al
  407004:	add    DWORD PTR [rcx+rax*1],eax
  407007:	add    BYTE PTR [rdx+rax*2],al
  40700a:	add    BYTE PTR [rax],al
  40700c:	add    DWORD PTR [rcx+rax*1],eax
  40700f:	add    BYTE PTR [rdx+riz*2],al
  407012:	add    BYTE PTR [rax],al
  407014:	add    DWORD PTR [rdi],ecx
  407016:	or     BYTE PTR [rax],al
  407018:	lgdt   [rbx]
  40701b:	add    BYTE PTR [rax],cl
  40701d:	xor    BYTE PTR [rdi],al
  40701f:	(bad)  
  407020:	(bad)  
  407021:	jo     0x407028
  407023:	push   rax
  407024:	add    al,0xc0
  407026:	add    dl,al
  407028:	or     DWORD PTR [rcx+rax*1],eax
  40702b:	add    BYTE PTR [rdx+rax*2],al
  40702e:	add    BYTE PTR [rax],al
  407030:	add    BYTE PTR [rcx],bh
  407032:	add    BYTE PTR [rax],al
  407034:	add    DWORD PTR [rax],eax
  407036:	add    BYTE PTR [rax],al
  407038:	(bad)  
  407039:	adc    al,0x0
  40703b:	add    ah,ch
  40703d:	adc    al,0x0
  40703f:	add    BYTE PTR [rax-0x13ffffdd],dh
  407045:	adc    al,0x0
  407047:	add    BYTE PTR [rcx],cl
  407049:	add    al,0x1
  40704b:	add    BYTE PTR [rdx+rax*2],al
  40704e:	add    BYTE PTR [rax],al
  407050:	add    BYTE PTR [rcx],bh
  407052:	add    BYTE PTR [rax],al
  407054:	add    DWORD PTR [rax],eax
  407056:	add    BYTE PTR [rax],al
  407058:	add    al,0x15
  40705a:	add    BYTE PTR [rax],al
  40705c:	sbb    al,0x15
  40705e:	add    BYTE PTR [rax],al
  407060:	mov    al,0x23
  407062:	add    BYTE PTR [rax],al
  407064:	sbb    al,0x15
  407066:	add    BYTE PTR [rax],al
  407068:	add    DWORD PTR [rdi],eax
  40706a:	add    al,0x0
  40706c:	(bad)  
  40706d:	xor    al,BYTE PTR [rbx]
  40706f:	xor    BYTE PTR [rdx],al
  407071:	(bad)  
  407072:	add    DWORD PTR [rax+0x1],esi
  407075:	adc    BYTE PTR [rcx],cl
  407077:	add    BYTE PTR [rax],dl
  407079:	ret    0x300c
  40707c:	or     esp,DWORD PTR [rax+0xa]
  40707f:	jo     0x40708a
  407081:	push   rax
  407082:	or     al,al
  407084:	(bad)  
  407085:	rol    BYTE PTR [rax+riz*8],1
  407088:	add    dh,al
  40708a:	add    BYTE PTR [rax],al
  40708c:	add    DWORD PTR [rip+0x52050002],eax        # 0x52457094
  407092:	add    DWORD PTR [rax],esi
  407094:	add    DWORD PTR [rcx+rax*1],eax
  407097:	add    BYTE PTR [rdx+rax*2],al
  40709a:	add    BYTE PTR [rax],al
  40709c:	add    DWORD PTR [rcx+rax*1],eax
  40709f:	add    BYTE PTR [rdx+rax*2],al
  4070a2:	add    BYTE PTR [rax],al
  4070a4:	add    DWORD PTR [rsi],eax
  4070a6:	add    eax,DWORD PTR [rax]
  4070a8:	(bad)  
  4070a9:	rex.X add sil,BYTE PTR [rax]
  4070ac:	add    DWORD PTR [rax+0x0],esp
  4070af:	add    BYTE PTR [rcx],al
  4070b1:	add    BYTE PTR [rax],al
  4070b3:	add    BYTE PTR [rcx],al
  4070b5:	add    BYTE PTR [rax],al
  4070b7:	add    BYTE PTR [rcx],al
  4070b9:	add    BYTE PTR [rax],al
  4070bb:	add    BYTE PTR [rcx],al
  4070bd:	or     al,BYTE PTR [rsi]
  4070bf:	add    BYTE PTR [rdx],cl
  4070c1:	jb     0x4070c9
  4070c3:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b07529
  4070c9:	push   rax
  4070ca:	add    al,al
  4070cc:	add    DWORD PTR [rdx],ecx
  4070ce:	add    eax,0x6d20a05
  4070d3:	add    eax,DWORD PTR [rbx]
  4070d5:	xor    BYTE PTR [rdx],al
  4070d7:	(bad)  
  4070d8:	add    DWORD PTR [rax+0x0],edx
  4070db:	add    BYTE PTR [rcx],al
  4070dd:	add    al,0x1
  4070df:	add    BYTE PTR [rdx+rax*2],al
  4070e2:	add    BYTE PTR [rax],al
  4070e4:	add    DWORD PTR [rsi],eax
  4070e6:	add    eax,DWORD PTR [rax]
  4070e8:	(bad)  
  4070e9:	rex.X add sil,BYTE PTR [rax]
  4070ec:	add    DWORD PTR [rax+0x0],esp
  4070ef:	add    BYTE PTR [rcx],al
  4070f1:	add    BYTE PTR [rax],al
  4070f3:	add    BYTE PTR [rcx],al
  4070f5:	add    al,0x1
  4070f7:	add    BYTE PTR [rdx+riz*4],al
  4070fa:	add    BYTE PTR [rax],al
  4070fc:	add    DWORD PTR [rax],eax
  4070fe:	add    BYTE PTR [rax],al
  407100:	add    DWORD PTR [rsi],edx
  407102:	or     DWORD PTR [rax],eax
  407104:	(bad)  
  407105:	mov    BYTE PTR [rsi],al
  407107:	add    BYTE PTR [rax],dl
  407109:	js     0x407110
  40710b:	add    BYTE PTR [rbx],cl
  40710d:	push   0xffffffffe2060004
  407112:	add    dh,BYTE PTR [rax]
  407114:	add    DWORD PTR [rax+0x0],esp
  407117:	add    BYTE PTR [rcx],al
  407119:	add    BYTE PTR [rax],al
  40711b:	add    BYTE PTR [rcx],al
  40711d:	add    BYTE PTR [rax],al
  40711f:	add    BYTE PTR [rcx],al
  407121:	add    BYTE PTR [rax],al
  407123:	add    BYTE PTR [rcx],al
  407125:	(bad)  
  407126:	add    eax,DWORD PTR [rax]
  407128:	(bad)  
  407129:	(bad)  
  40712b:	xor    BYTE PTR [rcx],al
  40712d:	(bad)  
  40712e:	add    BYTE PTR [rax],al
  407130:	add    DWORD PTR [rdi+rax*1],ecx
  407133:	add    BYTE PTR [rdx+riz*4],cl
  407136:	or     BYTE PTR [rax],dh
  407138:	(bad)  
  407139:	(bad)  
  40713a:	(bad)  
  40713b:	jo     0x407142
  40713d:	push   rax
  40713e:	add    al,0xc0
  407140:	add    dl,al
  407142:	add    BYTE PTR [rax],al
  407144:	add    DWORD PTR [rcx],edx
  407146:	or     DWORD PTR [rip+0x30db211],eax        # 0x34e235d
  40714c:	or     dh,BYTE PTR [rax]
  40714e:	or     DWORD PTR [rax+0x8],esp
  407151:	jo     0x40715a
  407153:	rol    BYTE PTR [rip+0x1e003d0],0x50        # 0x220752a
  40715a:	add    BYTE PTR [rax],al
  40715c:	add    DWORD PTR [rcx+rax*1],eax
  40715f:	add    BYTE PTR [rdx+rax*2],al
  407162:	add    BYTE PTR [rax],al
  407164:	add    DWORD PTR [rdx],ecx
  407166:	(bad)  
  407167:	add    BYTE PTR [rdx],cl
  407169:	xor    al,BYTE PTR [rsi]
  40716b:	xor    BYTE PTR [rip+0x3700460],al        # 0x3b075d1
  407171:	push   rax
  407172:	add    al,al
  407174:	add    DWORD PTR [rip+0x32050002],eax        # 0x3245717c
  40717a:	add    DWORD PTR [rax],esi
  40717c:	add    DWORD PTR [rax],ecx
  40717e:	add    eax,0x4420800
  407183:	xor    BYTE PTR [rbx],al
  407185:	(bad)  
  407186:	add    dh,BYTE PTR [rax+0x1]
  407189:	push   rax
  40718a:	add    BYTE PTR [rax],al
  40718c:	add    DWORD PTR [rdi],eax
  40718e:	add    al,0x0
  407190:	(bad)  
  407191:	xor    al,BYTE PTR [rbx]
  407193:	xor    BYTE PTR [rdx],al
  407195:	(bad)  
  407196:	add    DWORD PTR [rax+0x1],esi
  407199:	add    eax,0x32050002
  40719e:	add    DWORD PTR [rax],esi
  4071a0:	add    DWORD PTR [rip+0x32050002],eax        # 0x324571a8
  4071a6:	add    DWORD PTR [rax],esi
  4071a8:	add    DWORD PTR [rax],eax
  4071aa:	add    BYTE PTR [rax],al
  4071ac:	add    DWORD PTR [rax],eax
  4071ae:	add    BYTE PTR [rax],al
  4071b0:	add    DWORD PTR [rax],eax
  4071b2:	add    BYTE PTR [rax],al
  4071b4:	add    DWORD PTR [rdi],eax
  4071b6:	add    al,0x0
  4071b8:	(bad)  
  4071b9:	xor    al,BYTE PTR [rbx]
  4071bb:	xor    BYTE PTR [rdx],al
  4071bd:	(bad)  
  4071be:	add    DWORD PTR [rax+0x1],esi
  4071c1:	(bad)  
  4071c2:	add    eax,DWORD PTR [rax]
  4071c4:	(bad)  
  4071c5:	rex.X add sil,BYTE PTR [rax]
  4071c8:	add    DWORD PTR [rax+0x0],esp
  4071cb:	add    BYTE PTR [rcx],al
  4071cd:	add    eax,0x32050002
  4071d2:	add    DWORD PTR [rax],esi
  4071d4:	add    DWORD PTR [rdi],eax
  4071d6:	add    al,0x0
  4071d8:	(bad)  
  4071d9:	xor    al,BYTE PTR [rbx]
  4071db:	xor    BYTE PTR [rdx],al
  4071dd:	(bad)  
  4071de:	add    DWORD PTR [rax+0x1],esi
  4071e1:	(bad)  
  4071e2:	add    eax,DWORD PTR [rax]
  4071e4:	(bad)  
  4071e5:	rex.X add sil,BYTE PTR [rax]
  4071e8:	add    DWORD PTR [rax+0x0],esp
  4071eb:	add    BYTE PTR [rcx],al
  4071ed:	(bad)  
  4071ee:	add    eax,DWORD PTR [rax]
  4071f0:	(bad)  
  4071f1:	rex.X add sil,BYTE PTR [rax]
  4071f4:	add    DWORD PTR [rax+0x0],esp
  4071f7:	add    BYTE PTR [rcx],al
  4071f9:	or     BYTE PTR [rip+0x4420800],al        # 0x48279ff
  4071ff:	xor    BYTE PTR [rbx],al
  407201:	(bad)  
  407202:	add    dh,BYTE PTR [rax+0x1]
  407205:	push   rax
  407206:	add    BYTE PTR [rax],al
  407208:	add    DWORD PTR [rax],ecx
  40720a:	(bad)  
  40720b:	add    BYTE PTR [rax],cl
  40720d:	xor    BYTE PTR [rdi],al
  40720f:	(bad)  
  407210:	(bad)  
  407211:	jo     0x407218
  407213:	push   rax
  407214:	add    al,0xc0
  407216:	add    dl,al
  407218:	add    DWORD PTR [rdi],eax
  40721a:	add    al,0x0
  40721c:	(bad)  
  40721d:	push   rdx
  40721e:	add    esi,DWORD PTR [rax]
  407220:	add    ah,BYTE PTR [rax+0x1]
  407223:	jo     0x407226
  407225:	adc    BYTE PTR [rcx],cl
  407227:	add    BYTE PTR [rax],dl
  407229:	(bad)  
  40722a:	or     al,0x30
  40722c:	or     esp,DWORD PTR [rax+0xa]
  40722f:	jo     0x40723a
  407231:	push   rax
  407232:	or     al,al
  407234:	(bad)  
  407235:	rol    BYTE PTR [rax+riz*8],1
  407238:	add    dh,al
  40723a:	add    BYTE PTR [rax],al
  40723c:	add    DWORD PTR [rax],edx
  40723e:	or     DWORD PTR [rax],eax
  407240:	adc    BYTE PTR [rdx+0xc],ah
  407243:	xor    BYTE PTR [rbx],cl
  407245:	(bad)  
  407246:	or     dh,BYTE PTR [rax+0x9]
  407249:	push   rax
  40724a:	or     al,al
  40724c:	(bad)  
  40724d:	rol    BYTE PTR [rax+riz*8],1
  407250:	add    dh,al
  407252:	add    BYTE PTR [rax],al
  407254:	add    DWORD PTR [rcx+rax*1],eax
  407257:	add    BYTE PTR [rdx+riz*2],al
  40725a:	add    BYTE PTR [rax],al
  40725c:	add    DWORD PTR [rcx+rax*1],eax
  40725f:	add    BYTE PTR [rdx+riz*2],al
  407262:	add    BYTE PTR [rax],al
  407264:	add    DWORD PTR [rcx+rax*1],eax
  407267:	add    BYTE PTR [rdx+riz*2],al
  40726a:	add    BYTE PTR [rax],al
  40726c:	add    DWORD PTR [rax],eax
  40726e:	add    BYTE PTR [rax],al
  407270:	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000000408000 <.bss>:
	...

Disassembly of section .idata:

0000000000409000 <.idata>:
  409000:	push   rax
  409001:	nop
	...
  40900a:	add    BYTE PTR [rax],al
  40900c:	movabs al,ds:0x9000009270000098
  409015:	nop
	...
  40901e:	add    BYTE PTR [rax],al
  409020:	adc    BYTE PTR [rcx-0x6d500000],bl
  409026:	add    BYTE PTR [rax],al
  409028:	push   rax
  409029:	xchg   ecx,eax
	...
  409032:	add    BYTE PTR [rax],al
  409034:	lods   al,BYTE PTR ds:[rsi]
  409035:	cdq    
  409036:	add    BYTE PTR [rax],al
  409038:	jo     0x408fcd
	...
  40904e:	add    BYTE PTR [rax],al
  409050:	nop
  409051:	xchg   esp,eax
  409052:	add    BYTE PTR [rax],al
  409054:	add    BYTE PTR [rax],al
  409056:	add    BYTE PTR [rax],al
  409058:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409059:	xchg   esp,eax
  40905a:	add    BYTE PTR [rax],al
  40905c:	add    BYTE PTR [rax],al
  40905e:	add    BYTE PTR [rax],al
  409060:	mov    al,0x94
  409062:	add    BYTE PTR [rax],al
  409064:	add    BYTE PTR [rax],al
  409066:	add    BYTE PTR [rax],al
  409068:	(bad)  
  409069:	xchg   esp,eax
  40906a:	add    BYTE PTR [rax],al
  40906c:	add    BYTE PTR [rax],al
  40906e:	add    BYTE PTR [rax],al
  409070:	fcom   DWORD PTR [rax+rax*1+0x0]
  409077:	add    ah,ch
  409079:	xchg   esp,eax
  40907a:	add    BYTE PTR [rax],al
  40907c:	add    BYTE PTR [rax],al
  40907e:	add    BYTE PTR [rax],al
  409080:	add    BYTE PTR [rbp+0x0],dl
	...
  40908e:	add    BYTE PTR [rax],al
  409090:	or     al,0x95
  409092:	add    BYTE PTR [rax],al
  409094:	add    BYTE PTR [rax],al
  409096:	add    BYTE PTR [rax],al
  409098:	and    al,0x95
  40909a:	add    BYTE PTR [rax],al
  40909c:	add    BYTE PTR [rax],al
  40909e:	add    BYTE PTR [rax],al
  4090a0:	cmp    al,0x95
  4090a2:	add    BYTE PTR [rax],al
  4090a4:	add    BYTE PTR [rax],al
  4090a6:	add    BYTE PTR [rax],al
  4090a8:	push   rax
  4090a9:	xchg   ebp,eax
  4090aa:	add    BYTE PTR [rax],al
  4090ac:	add    BYTE PTR [rax],al
  4090ae:	add    BYTE PTR [rax],al
  4090b0:	xchg   bp,ax
  4090b2:	add    BYTE PTR [rax],al
  4090b4:	add    BYTE PTR [rax],al
  4090b6:	add    BYTE PTR [rax],al
  4090b8:	jl     0x40904f
  4090ba:	add    BYTE PTR [rax],al
  4090bc:	add    BYTE PTR [rax],al
  4090be:	add    BYTE PTR [rax],al
  4090c0:	mov    WORD PTR [rbp+0x0],ss
  4090c6:	add    BYTE PTR [rax],al
  4090c8:	sahf   
  4090c9:	xchg   ebp,eax
  4090ca:	add    BYTE PTR [rax],al
  4090cc:	add    BYTE PTR [rax],al
  4090ce:	add    BYTE PTR [rax],al
  4090d0:	mov    eax,0x95
  4090d5:	add    BYTE PTR [rax],al
  4090d7:	add    al,cl
  4090d9:	xchg   ebp,eax
  4090da:	add    BYTE PTR [rax],al
  4090dc:	add    BYTE PTR [rax],al
  4090de:	add    BYTE PTR [rax],al
  4090e0:	in     al,0x95
  4090e2:	add    BYTE PTR [rax],al
  4090e4:	add    BYTE PTR [rax],al
  4090e6:	add    BYTE PTR [rax],al
  4090e8:	cld    
  4090e9:	xchg   ebp,eax
  4090ea:	add    BYTE PTR [rax],al
  4090ec:	add    BYTE PTR [rax],al
  4090ee:	add    BYTE PTR [rax],al
  4090f0:	(bad)  
  4090f1:	xchg   esi,eax
  4090f2:	add    BYTE PTR [rax],al
  4090f4:	add    BYTE PTR [rax],al
  4090f6:	add    BYTE PTR [rax],al
  4090f8:	sub    al,0x96
  4090fa:	add    BYTE PTR [rax],al
  4090fc:	add    BYTE PTR [rax],al
  4090fe:	add    BYTE PTR [rax],al
  409100:	rex xchg esi,eax
  409102:	add    BYTE PTR [rax],al
  409104:	add    BYTE PTR [rax],al
  409106:	add    BYTE PTR [rax],al
  409108:	pop    rdx
  409109:	xchg   esi,eax
  40910a:	add    BYTE PTR [rax],al
  40910c:	add    BYTE PTR [rax],al
  40910e:	add    BYTE PTR [rax],al
  409110:	outs   dx,BYTE PTR ds:[rsi]
  409111:	xchg   esi,eax
  409112:	add    BYTE PTR [rax],al
  409114:	add    BYTE PTR [rax],al
  409116:	add    BYTE PTR [rax],al
  409118:	mov    WORD PTR [rsi+0x0],ss
  40911e:	add    BYTE PTR [rax],al
  409120:	xchg   esp,eax
  409121:	xchg   esi,eax
  409122:	add    BYTE PTR [rax],al
  409124:	add    BYTE PTR [rax],al
  409126:	add    BYTE PTR [rax],al
  409128:	test   al,0x96
  40912a:	add    BYTE PTR [rax],al
  40912c:	add    BYTE PTR [rax],al
  40912e:	add    BYTE PTR [rax],al
  409130:	mov    dh,0x96
  409132:	add    BYTE PTR [rax],al
  409134:	add    BYTE PTR [rax],al
  409136:	add    BYTE PTR [rax],al
  409138:	rcl    BYTE PTR [rsi+0x0],cl
  40913e:	add    BYTE PTR [rax],al
  409140:	in     al,0x96
	...
  40914e:	add    BYTE PTR [rax],al
  409150:	hlt    
  409151:	xchg   esi,eax
  409152:	add    BYTE PTR [rax],al
  409154:	add    BYTE PTR [rax],al
  409156:	add    BYTE PTR [rax],al
  409158:	or     al,0x97
  40915a:	add    BYTE PTR [rax],al
  40915c:	add    BYTE PTR [rax],al
  40915e:	add    BYTE PTR [rax],al
  409160:	(bad)  
  409161:	xchg   edi,eax
  409162:	add    BYTE PTR [rax],al
  409164:	add    BYTE PTR [rax],al
  409166:	add    BYTE PTR [rax],al
  409168:	and    al,0x97
  40916a:	add    BYTE PTR [rax],al
  40916c:	add    BYTE PTR [rax],al
  40916e:	add    BYTE PTR [rax],al
  409170:	xor    al,0x97
  409172:	add    BYTE PTR [rax],al
  409174:	add    BYTE PTR [rax],al
  409176:	add    BYTE PTR [rax],al
  409178:	rex xchg edi,eax
  40917a:	add    BYTE PTR [rax],al
  40917c:	add    BYTE PTR [rax],al
  40917e:	add    BYTE PTR [rax],al
  409180:	rex.WRX xchg rdi,rax
  409182:	add    BYTE PTR [rax],al
  409184:	add    BYTE PTR [rax],al
  409186:	add    BYTE PTR [rax],al
  409188:	pop    rsi
  409189:	xchg   edi,eax
  40918a:	add    BYTE PTR [rax],al
  40918c:	add    BYTE PTR [rax],al
  40918e:	add    BYTE PTR [rax],al
  409190:	jo     0x409129
  409192:	add    BYTE PTR [rax],al
  409194:	add    BYTE PTR [rax],al
  409196:	add    BYTE PTR [rax],al
  409198:	test   BYTE PTR [rdi+0x0],dl
  40919e:	add    BYTE PTR [rax],al
  4091a0:	mov    ss,WORD PTR [rdi+0x0]
  4091a6:	add    BYTE PTR [rax],al
  4091a8:	pushf  
  4091a9:	xchg   edi,eax
  4091aa:	add    BYTE PTR [rax],al
  4091ac:	add    BYTE PTR [rax],al
  4091ae:	add    BYTE PTR [rax],al
  4091b0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4091b1:	xchg   edi,eax
  4091b2:	add    BYTE PTR [rax],al
  4091b4:	add    BYTE PTR [rax],al
  4091b6:	add    BYTE PTR [rax],al
  4091b8:	mov    al,0x97
  4091ba:	add    BYTE PTR [rax],al
  4091bc:	add    BYTE PTR [rax],al
  4091be:	add    BYTE PTR [rax],al
  4091c0:	mov    esp,0x97
  4091c5:	add    BYTE PTR [rax],al
  4091c7:	add    ah,al
  4091c9:	xchg   edi,eax
  4091ca:	add    BYTE PTR [rax],al
  4091cc:	add    BYTE PTR [rax],al
  4091ce:	add    BYTE PTR [rax],al
  4091d0:	(bad)  
  4091d1:	xchg   edi,eax
  4091d2:	add    BYTE PTR [rax],al
  4091d4:	add    BYTE PTR [rax],al
  4091d6:	add    BYTE PTR [rax],al
  4091d8:	fcom   DWORD PTR [rdi+0x0]
  4091de:	add    BYTE PTR [rax],al
  4091e0:	loopne 0x409179
  4091e2:	add    BYTE PTR [rax],al
  4091e4:	add    BYTE PTR [rax],al
  4091e6:	add    BYTE PTR [rax],al
  4091e8:	call   0x409284
  4091ed:	add    BYTE PTR [rax],al
  4091ef:	add    dl,dh
  4091f1:	xchg   edi,eax
  4091f2:	add    BYTE PTR [rax],al
  4091f4:	add    BYTE PTR [rax],al
  4091f6:	add    BYTE PTR [rax],al
  4091f8:	cli    
  4091f9:	xchg   edi,eax
  4091fa:	add    BYTE PTR [rax],al
  4091fc:	add    BYTE PTR [rax],al
  4091fe:	add    BYTE PTR [rax],al
  409200:	add    al,0x98
  409202:	add    BYTE PTR [rax],al
  409204:	add    BYTE PTR [rax],al
  409206:	add    BYTE PTR [rax],al
  409208:	or     al,0x98
  40920a:	add    BYTE PTR [rax],al
  40920c:	add    BYTE PTR [rax],al
  40920e:	add    BYTE PTR [rax],al
  409210:	adc    al,0x98
  409212:	add    BYTE PTR [rax],al
  409214:	add    BYTE PTR [rax],al
  409216:	add    BYTE PTR [rax],al
  409218:	(bad)  
  409219:	cwde   
  40921a:	add    BYTE PTR [rax],al
  40921c:	add    BYTE PTR [rax],al
  40921e:	add    BYTE PTR [rax],al
  409220:	sub    BYTE PTR [rax+0x0],bl
  409226:	add    BYTE PTR [rax],al
  409228:	xor    bl,BYTE PTR [rax+0x0]
  40922e:	add    BYTE PTR [rax],al
  409230:	cmp    al,0x98
  409232:	add    BYTE PTR [rax],al
  409234:	add    BYTE PTR [rax],al
  409236:	add    BYTE PTR [rax],al
  409238:	rex.RX cwde 
  40923a:	add    BYTE PTR [rax],al
  40923c:	add    BYTE PTR [rax],al
  40923e:	add    BYTE PTR [rax],al
  409240:	push   rax
  409241:	cwde   
  409242:	add    BYTE PTR [rax],al
  409244:	add    BYTE PTR [rax],al
  409246:	add    BYTE PTR [rax],al
  409248:	pop    rdx
  409249:	cwde   
  40924a:	add    BYTE PTR [rax],al
  40924c:	add    BYTE PTR [rax],al
  40924e:	add    BYTE PTR [rax],al
  409250:	fs cwde 
  409252:	add    BYTE PTR [rax],al
  409254:	add    BYTE PTR [rax],al
  409256:	add    BYTE PTR [rax],al
  409258:	outs   dx,BYTE PTR ds:[rsi]
  409259:	cwde   
  40925a:	add    BYTE PTR [rax],al
  40925c:	add    BYTE PTR [rax],al
  40925e:	add    BYTE PTR [rax],al
  409260:	jp     0x4091fa
	...
  40926e:	add    BYTE PTR [rax],al
  409270:	nop
  409271:	xchg   esp,eax
  409272:	add    BYTE PTR [rax],al
  409274:	add    BYTE PTR [rax],al
  409276:	add    BYTE PTR [rax],al
  409278:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  409279:	xchg   esp,eax
  40927a:	add    BYTE PTR [rax],al
  40927c:	add    BYTE PTR [rax],al
  40927e:	add    BYTE PTR [rax],al
  409280:	mov    al,0x94
  409282:	add    BYTE PTR [rax],al
  409284:	add    BYTE PTR [rax],al
  409286:	add    BYTE PTR [rax],al
  409288:	(bad)  
  409289:	xchg   esp,eax
  40928a:	add    BYTE PTR [rax],al
  40928c:	add    BYTE PTR [rax],al
  40928e:	add    BYTE PTR [rax],al
  409290:	fcom   DWORD PTR [rax+rax*1+0x0]
  409297:	add    ah,ch
  409299:	xchg   esp,eax
  40929a:	add    BYTE PTR [rax],al
  40929c:	add    BYTE PTR [rax],al
  40929e:	add    BYTE PTR [rax],al
  4092a0:	add    BYTE PTR [rbp+0x0],dl
	...
  4092ae:	add    BYTE PTR [rax],al
  4092b0:	or     al,0x95
  4092b2:	add    BYTE PTR [rax],al
  4092b4:	add    BYTE PTR [rax],al
  4092b6:	add    BYTE PTR [rax],al
  4092b8:	and    al,0x95
  4092ba:	add    BYTE PTR [rax],al
  4092bc:	add    BYTE PTR [rax],al
  4092be:	add    BYTE PTR [rax],al
  4092c0:	cmp    al,0x95
  4092c2:	add    BYTE PTR [rax],al
  4092c4:	add    BYTE PTR [rax],al
  4092c6:	add    BYTE PTR [rax],al
  4092c8:	push   rax
  4092c9:	xchg   ebp,eax
  4092ca:	add    BYTE PTR [rax],al
  4092cc:	add    BYTE PTR [rax],al
  4092ce:	add    BYTE PTR [rax],al
  4092d0:	xchg   bp,ax
  4092d2:	add    BYTE PTR [rax],al
  4092d4:	add    BYTE PTR [rax],al
  4092d6:	add    BYTE PTR [rax],al
  4092d8:	jl     0x40926f
  4092da:	add    BYTE PTR [rax],al
  4092dc:	add    BYTE PTR [rax],al
  4092de:	add    BYTE PTR [rax],al
  4092e0:	mov    WORD PTR [rbp+0x0],ss
  4092e6:	add    BYTE PTR [rax],al
  4092e8:	sahf   
  4092e9:	xchg   ebp,eax
  4092ea:	add    BYTE PTR [rax],al
  4092ec:	add    BYTE PTR [rax],al
  4092ee:	add    BYTE PTR [rax],al
  4092f0:	mov    eax,0x95
  4092f5:	add    BYTE PTR [rax],al
  4092f7:	add    al,cl
  4092f9:	xchg   ebp,eax
  4092fa:	add    BYTE PTR [rax],al
  4092fc:	add    BYTE PTR [rax],al
  4092fe:	add    BYTE PTR [rax],al
  409300:	in     al,0x95
  409302:	add    BYTE PTR [rax],al
  409304:	add    BYTE PTR [rax],al
  409306:	add    BYTE PTR [rax],al
  409308:	cld    
  409309:	xchg   ebp,eax
  40930a:	add    BYTE PTR [rax],al
  40930c:	add    BYTE PTR [rax],al
  40930e:	add    BYTE PTR [rax],al
  409310:	(bad)  
  409311:	xchg   esi,eax
  409312:	add    BYTE PTR [rax],al
  409314:	add    BYTE PTR [rax],al
  409316:	add    BYTE PTR [rax],al
  409318:	sub    al,0x96
  40931a:	add    BYTE PTR [rax],al
  40931c:	add    BYTE PTR [rax],al
  40931e:	add    BYTE PTR [rax],al
  409320:	rex xchg esi,eax
  409322:	add    BYTE PTR [rax],al
  409324:	add    BYTE PTR [rax],al
  409326:	add    BYTE PTR [rax],al
  409328:	pop    rdx
  409329:	xchg   esi,eax
  40932a:	add    BYTE PTR [rax],al
  40932c:	add    BYTE PTR [rax],al
  40932e:	add    BYTE PTR [rax],al
  409330:	outs   dx,BYTE PTR ds:[rsi]
  409331:	xchg   esi,eax
  409332:	add    BYTE PTR [rax],al
  409334:	add    BYTE PTR [rax],al
  409336:	add    BYTE PTR [rax],al
  409338:	mov    WORD PTR [rsi+0x0],ss
  40933e:	add    BYTE PTR [rax],al
  409340:	xchg   esp,eax
  409341:	xchg   esi,eax
  409342:	add    BYTE PTR [rax],al
  409344:	add    BYTE PTR [rax],al
  409346:	add    BYTE PTR [rax],al
  409348:	test   al,0x96
  40934a:	add    BYTE PTR [rax],al
  40934c:	add    BYTE PTR [rax],al
  40934e:	add    BYTE PTR [rax],al
  409350:	mov    dh,0x96
  409352:	add    BYTE PTR [rax],al
  409354:	add    BYTE PTR [rax],al
  409356:	add    BYTE PTR [rax],al
  409358:	rcl    BYTE PTR [rsi+0x0],cl
  40935e:	add    BYTE PTR [rax],al
  409360:	in     al,0x96
	...
  40936e:	add    BYTE PTR [rax],al
  409370:	hlt    
  409371:	xchg   esi,eax
  409372:	add    BYTE PTR [rax],al
  409374:	add    BYTE PTR [rax],al
  409376:	add    BYTE PTR [rax],al
  409378:	or     al,0x97
  40937a:	add    BYTE PTR [rax],al
  40937c:	add    BYTE PTR [rax],al
  40937e:	add    BYTE PTR [rax],al
  409380:	(bad)  
  409381:	xchg   edi,eax
  409382:	add    BYTE PTR [rax],al
  409384:	add    BYTE PTR [rax],al
  409386:	add    BYTE PTR [rax],al
  409388:	and    al,0x97
  40938a:	add    BYTE PTR [rax],al
  40938c:	add    BYTE PTR [rax],al
  40938e:	add    BYTE PTR [rax],al
  409390:	xor    al,0x97
  409392:	add    BYTE PTR [rax],al
  409394:	add    BYTE PTR [rax],al
  409396:	add    BYTE PTR [rax],al
  409398:	rex xchg edi,eax
  40939a:	add    BYTE PTR [rax],al
  40939c:	add    BYTE PTR [rax],al
  40939e:	add    BYTE PTR [rax],al
  4093a0:	rex.WRX xchg rdi,rax
  4093a2:	add    BYTE PTR [rax],al
  4093a4:	add    BYTE PTR [rax],al
  4093a6:	add    BYTE PTR [rax],al
  4093a8:	pop    rsi
  4093a9:	xchg   edi,eax
  4093aa:	add    BYTE PTR [rax],al
  4093ac:	add    BYTE PTR [rax],al
  4093ae:	add    BYTE PTR [rax],al
  4093b0:	jo     0x409349
  4093b2:	add    BYTE PTR [rax],al
  4093b4:	add    BYTE PTR [rax],al
  4093b6:	add    BYTE PTR [rax],al
  4093b8:	test   BYTE PTR [rdi+0x0],dl
  4093be:	add    BYTE PTR [rax],al
  4093c0:	mov    ss,WORD PTR [rdi+0x0]
  4093c6:	add    BYTE PTR [rax],al
  4093c8:	pushf  
  4093c9:	xchg   edi,eax
  4093ca:	add    BYTE PTR [rax],al
  4093cc:	add    BYTE PTR [rax],al
  4093ce:	add    BYTE PTR [rax],al
  4093d0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4093d1:	xchg   edi,eax
  4093d2:	add    BYTE PTR [rax],al
  4093d4:	add    BYTE PTR [rax],al
  4093d6:	add    BYTE PTR [rax],al
  4093d8:	mov    al,0x97
  4093da:	add    BYTE PTR [rax],al
  4093dc:	add    BYTE PTR [rax],al
  4093de:	add    BYTE PTR [rax],al
  4093e0:	mov    esp,0x97
  4093e5:	add    BYTE PTR [rax],al
  4093e7:	add    ah,al
  4093e9:	xchg   edi,eax
  4093ea:	add    BYTE PTR [rax],al
  4093ec:	add    BYTE PTR [rax],al
  4093ee:	add    BYTE PTR [rax],al
  4093f0:	(bad)  
  4093f1:	xchg   edi,eax
  4093f2:	add    BYTE PTR [rax],al
  4093f4:	add    BYTE PTR [rax],al
  4093f6:	add    BYTE PTR [rax],al
  4093f8:	fcom   DWORD PTR [rdi+0x0]
  4093fe:	add    BYTE PTR [rax],al
  409400:	loopne 0x409399
  409402:	add    BYTE PTR [rax],al
  409404:	add    BYTE PTR [rax],al
  409406:	add    BYTE PTR [rax],al
  409408:	call   0x4094a4
  40940d:	add    BYTE PTR [rax],al
  40940f:	add    dl,dh
  409411:	xchg   edi,eax
  409412:	add    BYTE PTR [rax],al
  409414:	add    BYTE PTR [rax],al
  409416:	add    BYTE PTR [rax],al
  409418:	cli    
  409419:	xchg   edi,eax
  40941a:	add    BYTE PTR [rax],al
  40941c:	add    BYTE PTR [rax],al
  40941e:	add    BYTE PTR [rax],al
  409420:	add    al,0x98
  409422:	add    BYTE PTR [rax],al
  409424:	add    BYTE PTR [rax],al
  409426:	add    BYTE PTR [rax],al
  409428:	or     al,0x98
  40942a:	add    BYTE PTR [rax],al
  40942c:	add    BYTE PTR [rax],al
  40942e:	add    BYTE PTR [rax],al
  409430:	adc    al,0x98
  409432:	add    BYTE PTR [rax],al
  409434:	add    BYTE PTR [rax],al
  409436:	add    BYTE PTR [rax],al
  409438:	(bad)  
  409439:	cwde   
  40943a:	add    BYTE PTR [rax],al
  40943c:	add    BYTE PTR [rax],al
  40943e:	add    BYTE PTR [rax],al
  409440:	sub    BYTE PTR [rax+0x0],bl
  409446:	add    BYTE PTR [rax],al
  409448:	xor    bl,BYTE PTR [rax+0x0]
  40944e:	add    BYTE PTR [rax],al
  409450:	cmp    al,0x98
  409452:	add    BYTE PTR [rax],al
  409454:	add    BYTE PTR [rax],al
  409456:	add    BYTE PTR [rax],al
  409458:	rex.RX cwde 
  40945a:	add    BYTE PTR [rax],al
  40945c:	add    BYTE PTR [rax],al
  40945e:	add    BYTE PTR [rax],al
  409460:	push   rax
  409461:	cwde   
  409462:	add    BYTE PTR [rax],al
  409464:	add    BYTE PTR [rax],al
  409466:	add    BYTE PTR [rax],al
  409468:	pop    rdx
  409469:	cwde   
  40946a:	add    BYTE PTR [rax],al
  40946c:	add    BYTE PTR [rax],al
  40946e:	add    BYTE PTR [rax],al
  409470:	fs cwde 
  409472:	add    BYTE PTR [rax],al
  409474:	add    BYTE PTR [rax],al
  409476:	add    BYTE PTR [rax],al
  409478:	outs   dx,BYTE PTR ds:[rsi]
  409479:	cwde   
  40947a:	add    BYTE PTR [rax],al
  40947c:	add    BYTE PTR [rax],al
  40947e:	add    BYTE PTR [rax],al
  409480:	jp     0x40941a
	...
  40948e:	add    BYTE PTR [rax],al
  409490:	sub    eax,0x43634600
  409495:	outs   dx,DWORD PTR ds:[rsi]
  409496:	outs   dx,BYTE PTR ds:[rsi]
  409497:	imul   sp,WORD PTR [rdi+0x47],0x7465
  40949d:	rex.X ins BYTE PTR es:[rdi],dx
  40949f:	(bad)  
  4094a0:	outs   dx,BYTE PTR ds:[rsi]
  4094a1:	imul   esi,DWORD PTR [rbx+0x0],0x4f
  4094a5:	add    BYTE PTR [rsi+0x63],al
  4094a8:	rex.RX imul r13d,DWORD PTR [rsi+0x69],0x0
  4094b0:	pop    rdi
  4094b1:	add    BYTE PTR [rsi+0x63],al
  4094b4:	rex.RX jb 0x40951c
  4094b7:	gs push rsp
  4094b9:	jns    0x40952b
  4094bb:	gs push rcx
  4094bd:	jne    0x409524
  4094bf:	jb     0x40953a
  4094c1:	add    BYTE PTR [rax],al
  4094c3:	add    BYTE PTR [rdx+0x50634600],bl
  4094c9:	(bad)  
  4094ca:	je     0x409540
  4094cc:	gs jb  0x40953d
  4094cf:	rex.R
  4094d0:	gs jae 0x409547
  4094d3:	jb     0x409544
  4094d5:	jns    0x4094d7
  4094d7:	add    BYTE PTR [rdi+0x50634600],bl
  4094dd:	(bad)  
  4094de:	je     0x409554
  4094e0:	gs jb  0x409551
  4094e3:	rex.RX outs dx,DWORD PTR ds:[rsi]
  4094e5:	jb     0x409554
  4094e7:	(bad)  
  4094e8:	je     0x4094ea
  4094ea:	add    BYTE PTR [rax],al
  4094ec:	stos   DWORD PTR es:[rdi],eax
  4094ed:	add    BYTE PTR [rsi+0x63],al
  4094f0:	push   rax
  4094f1:	(bad)  
  4094f2:	je     0x409568
  4094f4:	gs jb  0x409565
  4094f7:	push   rax
  4094f8:	jb     0x409563
  4094fa:	outs   dx,BYTE PTR ds:[rsi]
  4094fb:	je     0x4094fd
  4094fd:	add    BYTE PTR [rax],al
  4094ff:	add    BYTE PTR [rbx+0x53634600],bh
  409505:	je     0x409579
  409507:	rex.RX jb 0x40956f
  40950a:	gs add al,bl
  40950d:	add    BYTE PTR [rbp+riz*2+0x6c],al
  409511:	gs je  0x409579
  409514:	rex.XB jb 0x409580
  409517:	je     0x409582
  409519:	movsxd esp,DWORD PTR [rcx+0x6c]
  40951c:	push   rbx
  40951d:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409522:	outs   dx,BYTE PTR ds:[rsi]
  409523:	add    al,bh
  409525:	add    BYTE PTR [rbp+0x6e],al
  409528:	je     0x40958f
  40952a:	jb     0x40956f
  40952c:	jb     0x409597
  40952e:	je     0x409599
  409530:	movsxd esp,DWORD PTR [rcx+0x6c]
  409533:	push   rbx
  409534:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  409539:	outs   dx,BYTE PTR ds:[rsi]
  40953a:	add    BYTE PTR [rax],al
  40953c:	int    0x1
  40953e:	rex.RXB
  40953f:	gs je  0x409585
  409542:	jne    0x4095b6
  409544:	jb     0x4095ab
  409546:	outs   dx,BYTE PTR ds:[rsi]
  409547:	je     0x409599
  409549:	jb     0x4095ba
  40954b:	movsxd esp,DWORD PTR [rbp+0x73]
  40954e:	jae    0x409550
  409550:	(bad)  
  409551:	add    DWORD PTR [rdi+0x65],eax
  409554:	je     0x409599
  409556:	jne    0x4095ca
  409558:	jb     0x4095bf
  40955a:	outs   dx,BYTE PTR ds:[rsi]
  40955b:	je     0x4095ad
  40955d:	jb     0x4095ce
  40955f:	movsxd esp,DWORD PTR [rbp+0x73]
  409562:	jae    0x4095ad
  409564:	fs add dl,dl
  409567:	add    DWORD PTR [rdi+0x65],eax
  40956a:	je     0x4095af
  40956c:	jne    0x4095e0
  40956e:	jb     0x4095d5
  409570:	outs   dx,BYTE PTR ds:[rsi]
  409571:	je     0x4095c7
  409573:	push   0x64616572
  409578:	rex.WB
  409579:	add    BYTE PTR fs:[rax],al
  40957c:	adc    BYTE PTR [rdx],al
  40957e:	rex.RXB
  40957f:	gs je  0x4095ce
  409582:	(bad)  
  409583:	jae    0x4095f9
  409585:	rex.RB jb 0x4095fa
  409588:	outs   dx,DWORD PTR ds:[rsi]
  409589:	jb     0x40958b
  40958b:	add    BYTE PTR [rbx+0x2],dh
  40958e:	rex.RXB
  40958f:	gs je  0x4095e5
  409592:	je     0x4095f5
  409594:	jb     0x40960a
  409596:	jne    0x409608
  409598:	rex.WB outs dx,BYTE PTR ds:[rsi]
  40959a:	outs   dx,WORD PTR ds:[rsi]
  40959c:	add    BYTE PTR [r10+0x74654702],cl
  4095a3:	push   rbx
  4095a4:	jns    0x409619
  4095a6:	je     0x40960d
  4095a8:	ins    DWORD PTR es:[rdi],dx
  4095a9:	push   rsp
  4095aa:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
  4095b1:	ins    BYTE PTR es:[rdi],dx
  4095b2:	gs push rsp
  4095b4:	imul   ebp,DWORD PTR [rbp+0x65],0x4702a500
  4095bb:	gs je  0x409612
  4095be:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
  4095c5:	je     0x4095c7
  4095c7:	add    cl,bh
  4095c9:	add    cl,BYTE PTR [rcx+0x6e]
  4095cc:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
  4095d4:	rex.XB jb 0x409640
  4095d7:	je     0x409642
  4095d9:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095dc:	push   rbx
  4095dd:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095e2:	outs   dx,BYTE PTR ds:[rsi]
  4095e3:	add    BYTE PTR [rbx+0x3],cl
  4095e6:	rex.WR
  4095e7:	gs (bad) 
  4095e9:	jbe    0x409650
  4095eb:	rex.XB jb 0x409657
  4095ee:	je     0x409659
  4095f0:	movsxd esp,DWORD PTR [rcx+0x6c]
  4095f3:	push   rbx
  4095f4:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
  4095f9:	outs   dx,BYTE PTR ds:[rsi]
  4095fa:	add    BYTE PTR [rax],al
  4095fc:	mov    ebx,0x65755103
  409601:	jb     0x40967c
  409603:	push   rax
  409604:	gs jb  0x40966d
  409607:	outs   dx,DWORD PTR ds:[rsi]
  409608:	jb     0x409677
  40960a:	(bad)  
  40960b:	outs   dx,BYTE PTR ds:[rsi]
  40960c:	movsxd esp,DWORD PTR [rbp+0x43]
  40960f:	outs   dx,DWORD PTR ds:[rsi]
  409610:	jne    0x409680
  409612:	je     0x409679
  409614:	jb     0x409616
  409616:	add    DWORD PTR [rdx+rdx*2],eax
  409619:	je     0x409687
  40961b:	rex.B
  40961c:	fs fs rex.RX jne 0x40968f
  409621:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409625:	outs   dx,BYTE PTR ds:[rsi]
  409626:	push   rsp
  409627:	(bad)  
  409628:	(bad)  
  409629:	ins    BYTE PTR es:[rdi],dx
  40962a:	add    BYTE PTR gs:[rdx],al
  40962d:	add    al,0x52
  40962f:	je     0x40969d
  409631:	rex.XB (bad) 
  409633:	jo     0x4096a9
  409635:	jne    0x4096a9
  409637:	rex.XB outs dx,DWORD PTR gs:[rsi]
  40963a:	outs   dx,BYTE PTR ds:[rsi]
  40963b:	je     0x4096a2
  40963d:	js     0x4096b3
  40963f:	add    BYTE PTR [rcx],cl
  409641:	add    al,0x52
  409643:	je     0x4096b1
  409645:	rex.WR outs dx,DWORD PTR ds:[rsi]
  409647:	outs   dx,DWORD PTR ds:[rsi]
  409648:	imul   esi,DWORD PTR [rbp+0x70],0x46
  40964c:	jne    0x4096bc
  40964e:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  409652:	outs   dx,BYTE PTR ds:[rsi]
  409653:	rex.RB outs dx,BYTE PTR ds:[rsi]
  409655:	je     0x4096c9
  409657:	jns    0x409659
  409659:	add    BYTE PTR [rax],dl
  40965b:	add    al,0x52
  40965d:	je     0x4096cb
  40965f:	push   rsi
  409660:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
  409667:	outs   dx,BYTE PTR ds:[rsi]
  409668:	ja     0x4096d3
  40966a:	outs   dx,BYTE PTR ds:[rsi]
  40966b:	add    BYTE PTR fs:[rax],al
  40966e:	lahf   
  40966f:	add    al,0x53
  409671:	gs je  0x4096c9
  409674:	outs   dx,BYTE PTR ds:[rsi]
  409675:	push   0x6c646e61
  40967a:	gs fs rex.RB js 0x4096e2
  40967f:	gs jo  0x4096f6
  409682:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  409689:	gs jb  0x40968c
  40968c:	lods   al,BYTE PTR ds:[rsi]
  40968d:	add    al,0x53
  40968f:	ins    BYTE PTR es:[rdi],dx
  409690:	gs gs jo 0x409694
  409694:	mov    edx,0x72655404
  409699:	ins    DWORD PTR es:[rdi],dx
  40969a:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
  4096a1:	outs   dx,DWORD PTR ds:[rsi]
  4096a2:	movsxd esp,DWORD PTR [rbp+0x73]
  4096a5:	jae    0x4096a7
  4096a7:	add    cl,al
  4096a9:	add    al,0x54
  4096ab:	ins    BYTE PTR es:[rdi],dx
  4096ac:	jae    0x4096f5
  4096ae:	gs je  0x409707
  4096b1:	(bad)  
  4096b2:	ins    BYTE PTR es:[rdi],dx
  4096b3:	jne    0x40971a
  4096b5:	add    dh,cl
  4096b7:	add    al,0x55
  4096b9:	outs   dx,BYTE PTR ds:[rsi]
  4096ba:	push   0x6c646e61
  4096bf:	gs fs rex.RB js 0x409727
  4096c4:	gs jo  0x40973b
  4096c7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
  4096ce:	gs jb  0x4096d1
  4096d1:	add    ah,ch
  4096d3:	add    al,0x56
  4096d5:	imul   esi,DWORD PTR [rdx+0x74],0x506c6175
  4096dc:	jb     0x40974d
  4096de:	je     0x409745
  4096e0:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
  4096e4:	out    dx,al
  4096e5:	add    al,0x56
  4096e7:	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
  4096ee:	jne    0x409755
  4096f0:	jb     0x40976b
  4096f2:	add    BYTE PTR [rax],al
  4096f4:	(bad)  
  4096f5:	add    BYTE PTR [rdi+0x5f],bl
  4096f8:	rex.XB pop r15
  4096fa:	jae    0x40976c
  4096fc:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
  409700:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
  409707:	ins    BYTE PTR es:[rdi],dx
  409708:	gs jb  0x40970b
  40970b:	add    BYTE PTR [rsi+0x0],al
  40970e:	pop    rdi
  40970f:	pop    rdi
  409710:	(bad)  
  409711:	jb     0x40977a
  409713:	jbe    0x409715
  409715:	add    BYTE PTR [rsi+0x0],cl
  409718:	pop    rdi
  409719:	pop    rdi
  40971a:	fs ins BYTE PTR es:[rdi],dx
  40971c:	ins    BYTE PTR es:[rdi],dx
  40971d:	outs   dx,DWORD PTR ds:[rsi]
  40971e:	outs   dx,BYTE PTR ds:[rsi]
  40971f:	gs js  0x40978b
  409722:	je     0x409724
  409724:	push   rcx
  409725:	add    BYTE PTR [rdi+0x5f],bl
  409728:	addr32 gs je 0x409799
  40972c:	(bad)  
  40972d:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
  409734:	push   rdx
  409735:	add    BYTE PTR [rdi+0x5f],bl
  409738:	imul   ebp,DWORD PTR [rsi+0x69],0x766e6574
  40973f:	add    BYTE PTR [rbx+0x0],dl
  409742:	pop    rdi
  409743:	pop    rdi
  409744:	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
  40974b:	movsxd eax,DWORD PTR [rax]
  40974d:	add    BYTE PTR [rdx+0x0],bl
  409750:	pop    rdi
  409751:	pop    rdi
  409752:	ins    BYTE PTR es:[rdi],dx
  409753:	movsxd ebp,DWORD PTR [rdi+0x6e]
  409756:	jbe    0x4097b7
  409758:	imul   ebp,DWORD PTR [rsi+0x69],0x60000074
  40975f:	add    BYTE PTR [rdi+0x5f],bl
  409762:	jae    0x4097c9
  409764:	je     0x4097c5
  409766:	(bad)  
  409767:	jo     0x4097d9
  409769:	pop    rdi
  40976a:	je     0x4097e5
  40976c:	jo     0x4097d3
  40976e:	add    BYTE PTR [rax],al
  409770:	(bad)  
  409771:	add    BYTE PTR [rdi+0x5f],bl
  409774:	jae    0x4097db
  409776:	je     0x4097ed
  409778:	jae    0x4097df
  40977a:	jb     0x4097e9
  40977c:	(bad)  
  40977d:	je     0x4097e7
  40977f:	gs jb  0x4097f4
  409782:	add    BYTE PTR [rax],al
  409784:	jno    0x409786
  409786:	pop    rdi
  409787:	(bad)  
  409788:	movsxd ebp,DWORD PTR [rbp+0x64]
  40978b:	ins    BYTE PTR es:[rdi],dx
  40978c:	outs   dx,BYTE PTR ds:[rsi]
  40978d:	add    BYTE PTR [rax+0x0],bh
  409790:	pop    rdi
  409791:	(bad)  
  409792:	ins    DWORD PTR es:[rdi],dx
  409793:	jae    0x4097fc
  409795:	pop    rdi
  409796:	gs js  0x409802
  409799:	je     0x40979b
  40979b:	add    BYTE PTR [rdx+0x65635f00],cl
  4097a1:	js     0x40980c
  4097a3:	je     0x4097a5
  4097a5:	add    dl,bl
  4097a7:	add    BYTE PTR [rdi+0x66],bl
  4097aa:	ins    DWORD PTR es:[rdi],dx
  4097ab:	outs   dx,DWORD PTR ds:[rsi]
  4097ac:	fs add BYTE PTR gs:[rax],al
  4097b0:	sbb    al,BYTE PTR [rcx]
  4097b2:	pop    rdi
  4097b3:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
  4097ba:	ins    DWORD PTR es:[rdi],dx
  4097bb:	add    BYTE PTR [rax+0x6f6c5f01],al
  4097c1:	movsxd ebp,DWORD PTR [rbx+0x0]
  4097c4:	and    eax,0x6e6f5f02
  4097c9:	gs js  0x409835
  4097cc:	je     0x4097ce
  4097ce:	(bad)
  4097d2:	outs   dx,BYTE PTR ds:[rsi]
  4097d3:	ins    BYTE PTR es:[rdi],dx
  4097d4:	outs   dx,DWORD PTR ds:[rsi]
  4097d5:	movsxd ebp,DWORD PTR [rbx+0x0]
  4097d8:	jg     0x4097dd
  4097da:	(bad)  
  4097db:	(bad)  
  4097dc:	outs   dx,DWORD PTR ds:[rsi]
  4097dd:	jb     0x409853
  4097df:	add    BYTE PTR [rbx+rax*1+0x696f7461],cl
  4097e6:	add    BYTE PTR [rax],al
  4097e8:	nop
  4097e9:	add    esp,DWORD PTR [rbx+0x61]
  4097ec:	ins    BYTE PTR es:[rdi],dx
  4097ed:	ins    BYTE PTR es:[rdi],dx
  4097ee:	outs   dx,DWORD PTR ds:[rsi]
  4097ef:	movsxd eax,DWORD PTR [rax]
  4097f1:	add    BYTE PTR [rbp+0x69786503],bl
  4097f7:	je     0x4097f9
  4097f9:	add    BYTE PTR [rax+0x72706603],dh
  4097ff:	imul   ebp,DWORD PTR [rsi+0x74],0x3b20066
  409806:	data16 jo 0x40987e
  409809:	je     0x40986e
  40980b:	add    BYTE PTR [rdi+0x65726603],dh
  409811:	add    BYTE PTR gs:[rax],al
  409814:	ret    0x6603
  409817:	ja     0x40988b
  409819:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x6703c700
  409821:	gs je  0x409889
  409824:	outs   dx,BYTE PTR ds:[rsi]
  409825:	jbe    0x409827
  409827:	add    al,dh
  409829:	add    ebp,DWORD PTR [rbp+0x61]
  40982c:	ins    BYTE PTR es:[rdi],dx
  40982d:	ins    BYTE PTR es:[rdi],dx
  40982e:	outs   dx,DWORD PTR ds:[rsi]
  40982f:	movsxd eax,DWORD PTR [rax]
  409831:	add    al,bh
  409833:	add    ebp,DWORD PTR [rbp+0x65]
  409836:	ins    DWORD PTR es:[rdi],dx
  409837:	movsxd esi,DWORD PTR [rax+0x79]
  40983a:	add    BYTE PTR [rax],al
  40983c:	add    DWORD PTR [rax+rsi*2],eax
  40983f:	jb     0x4098aa
  409841:	outs   dx,BYTE PTR ds:[rsi]
  409842:	je     0x4098aa
  409844:	add    BYTE PTR [rax],al
  409846:	(bad)  
  409847:	add    al,0x73
  409849:	imul   esp,DWORD PTR [rdi+0x6e],0x6c61
  409850:	and    eax,DWORD PTR [rbx+rsi*2]
  409853:	je     0x4098c7
  409855:	movsxd ebp,DWORD PTR [rax+0x72]
  409858:	add    BYTE PTR [rax],al
  40985a:	sub    eax,DWORD PTR [rbx+rsi*2]
  40985d:	je     0x4098d1
  40985f:	ins    BYTE PTR es:[rdi],dx
  409860:	outs   dx,BYTE PTR gs:[rsi]
  409862:	add    BYTE PTR [rax],al
  409864:	cs add al,0x73
  409867:	je     0x4098db
  409869:	outs   dx,BYTE PTR ds:[rsi]
  40986a:	movsxd ebp,DWORD PTR [rbp+0x70]
  40986d:	add    BYTE PTR [rsi+0x4],cl
  409870:	jbe    0x4098d8
  409872:	jo     0x4098e6
  409874:	imul   ebp,DWORD PTR [rsi+0x74],0xbe000066
  40987b:	add    al,0x5f
  40987d:	jae    0x4098f3
  40987f:	jb     0x4098e5
  409881:	jne    0x4098f3
  409883:	add    BYTE PTR [rax],al
  409885:	nop
  409886:	add    BYTE PTR [rax],al
  409888:	add    BYTE PTR [rax-0x70000000],dl
  40988e:	add    BYTE PTR [rax],al
  409890:	add    BYTE PTR [rax-0x70000000],dl
  409896:	add    BYTE PTR [rax],al
  409898:	add    BYTE PTR [rax-0x70000000],dl
  40989e:	add    BYTE PTR [rax],al
  4098a0:	ins    BYTE PTR es:[rdi],dx
  4098a1:	imul   esp,DWORD PTR [rdx+0x66],0x63746e6f
  4098a8:	outs   dx,DWORD PTR ds:[rsi]
  4098a9:	outs   dx,BYTE PTR ds:[rsi]
  4098aa:	imul   sp,WORD PTR [rdi+0x2d],0x2e31
  4098b0:	fs ins BYTE PTR es:[rdi],dx
  4098b2:	ins    BYTE PTR es:[rdi],dx
  4098b3:	add    BYTE PTR [rax+rdx*4],dl
  4098b6:	add    BYTE PTR [rax],al
  4098b8:	adc    al,0x90
  4098ba:	add    BYTE PTR [rax],al
  4098bc:	adc    al,0x90
  4098be:	add    BYTE PTR [rax],al
  4098c0:	adc    al,0x90
  4098c2:	add    BYTE PTR [rax],al
  4098c4:	adc    al,0x90
  4098c6:	add    BYTE PTR [rax],al
  4098c8:	adc    al,0x90
  4098ca:	add    BYTE PTR [rax],al
  4098cc:	adc    al,0x90
  4098ce:	add    BYTE PTR [rax],al
  4098d0:	adc    al,0x90
  4098d2:	add    BYTE PTR [rax],al
  4098d4:	adc    al,0x90
  4098d6:	add    BYTE PTR [rax],al
  4098d8:	adc    al,0x90
  4098da:	add    BYTE PTR [rax],al
  4098dc:	adc    al,0x90
  4098de:	add    BYTE PTR [rax],al
  4098e0:	adc    al,0x90
  4098e2:	add    BYTE PTR [rax],al
  4098e4:	adc    al,0x90
  4098e6:	add    BYTE PTR [rax],al
  4098e8:	adc    al,0x90
  4098ea:	add    BYTE PTR [rax],al
  4098ec:	adc    al,0x90
  4098ee:	add    BYTE PTR [rax],al
  4098f0:	adc    al,0x90
  4098f2:	add    BYTE PTR [rax],al
  4098f4:	adc    al,0x90
  4098f6:	add    BYTE PTR [rax],al
  4098f8:	adc    al,0x90
  4098fa:	add    BYTE PTR [rax],al
  4098fc:	adc    al,0x90
  4098fe:	add    BYTE PTR [rax],al
  409900:	adc    al,0x90
  409902:	add    BYTE PTR [rax],al
  409904:	adc    al,0x90
  409906:	add    BYTE PTR [rax],al
  409908:	adc    al,0x90
  40990a:	add    BYTE PTR [rax],al
  40990c:	adc    al,0x90
  40990e:	add    BYTE PTR [rax],al
  409910:	rex.WXB
  409911:	rex.RB push r10
  409913:	rex.WRX
  409914:	rex.RB
  409915:	xor    r14,QWORD PTR [rdx]
  409918:	cs fs ins BYTE PTR es:[rdi],dx
  40991b:	ins    BYTE PTR es:[rdi],dx
  40991c:	add    BYTE PTR [rax],al
  40991e:	add    BYTE PTR [rax],al
  409920:	sub    BYTE PTR [rax-0x6fd80000],dl
  409926:	add    BYTE PTR [rax],al
  409928:	sub    BYTE PTR [rax-0x6fd80000],dl
  40992e:	add    BYTE PTR [rax],al
  409930:	sub    BYTE PTR [rax-0x6fd80000],dl
  409936:	add    BYTE PTR [rax],al
  409938:	sub    BYTE PTR [rax-0x6fd80000],dl
  40993e:	add    BYTE PTR [rax],al
  409940:	sub    BYTE PTR [rax-0x6fd80000],dl
  409946:	add    BYTE PTR [rax],al
  409948:	sub    BYTE PTR [rax-0x6fd80000],dl
  40994e:	add    BYTE PTR [rax],al
  409950:	sub    BYTE PTR [rax-0x6fd80000],dl
  409956:	add    BYTE PTR [rax],al
  409958:	sub    BYTE PTR [rax-0x6fd80000],dl
  40995e:	add    BYTE PTR [rax],al
  409960:	sub    BYTE PTR [rax-0x6fd80000],dl
  409966:	add    BYTE PTR [rax],al
  409968:	sub    BYTE PTR [rax-0x6fd80000],dl
  40996e:	add    BYTE PTR [rax],al
  409970:	sub    BYTE PTR [rax-0x6fd80000],dl
  409976:	add    BYTE PTR [rax],al
  409978:	sub    BYTE PTR [rax-0x6fd80000],dl
  40997e:	add    BYTE PTR [rax],al
  409980:	sub    BYTE PTR [rax-0x6fd80000],dl
  409986:	add    BYTE PTR [rax],al
  409988:	sub    BYTE PTR [rax-0x6fd80000],dl
  40998e:	add    BYTE PTR [rax],al
  409990:	sub    BYTE PTR [rax-0x6fd80000],dl
  409996:	add    BYTE PTR [rax],al
  409998:	sub    BYTE PTR [rax-0x6fd80000],dl
  40999e:	add    BYTE PTR [rax],al
  4099a0:	sub    BYTE PTR [rax-0x6fd80000],dl
  4099a6:	add    BYTE PTR [rax],al
  4099a8:	sub    BYTE PTR [rax+0x736d0000],dl
  4099ae:	jbe    0x409a13
  4099b0:	jb     0x409a26
  4099b2:	cs fs ins BYTE PTR es:[rdi],dx
  4099b5:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000000040a000 <.CRT>:
	...
  40a008:	(bad)  
  40a009:	adc    DWORD PTR [rax+0x0],eax
	...
  40a020:	adc    BYTE PTR [rax],dl
  40a022:	add    BYTE PTR [rax],al
  40a025:	add    BYTE PTR [rax],al
  40a027:	add    al,dh
  40a029:	(bad)  
  40a02a:	add    BYTE PTR [rax],al
	...
  40a03d:	add    BYTE PTR [rax],al
  40a03f:	add    BYTE PTR [rax],ah
  40a041:	sbb    al,BYTE PTR [rax+0x0]
  40a044:	add    BYTE PTR [rax],al
  40a046:	add    BYTE PTR [rax],al
  40a048:	lock sbb DWORD PTR [rax+0x0],eax
	...

Disassembly of section .tls:

000000000040b000 <.tls>:
	...
  40b020:	add    BYTE PTR [rax+0x40],dh
  40b026:	add    BYTE PTR [rax],al
  40b028:	(bad)  
  40b029:	mov    al,0x40
  40b02b:	add    BYTE PTR [rax],al
  40b02d:	add    BYTE PTR [rax],al
  40b02f:	add    BYTE PTR [rsi+rax*4+0x40],bl
  40b033:	add    BYTE PTR [rax],al
  40b035:	add    BYTE PTR [rax],al
  40b037:	add    BYTE PTR [rax-0x60],al
  40b03a:	add    BYTE PTR [rax],al
	...
