
1d2d450742e4ed4fb8486fd7e3892828dd97bbf63f0e23b0975725bdc18ce766.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
	...
   140001008:	mov    rax,rsp
   14000100b:	mov    QWORD PTR [rax+0x8],rbx
   14000100f:	mov    QWORD PTR [rax+0x10],rdi
   140001013:	mov    QWORD PTR [rax+0x18],r14
   140001017:	push   rbp
   140001018:	lea    rbp,[rax-0x1a8]
   14000101f:	sub    rsp,0x2a0
   140001026:	mov    rax,QWORD PTR [rip+0x1fdb]        # 0x140003008
   14000102d:	xor    rax,rsp
   140001030:	mov    QWORD PTR [rbp+0x190],rax
   140001037:	xor    r9d,r9d
   14000103a:	xor    r8d,r8d
   14000103d:	xor    ecx,ecx
   14000103f:	lea    edx,[r9+0x1]
   140001043:	call   QWORD PTR [rip+0xfcf]        # 0x140002018
   140001049:	mov    rax,QWORD PTR ds:0x7ffe02c8
   140001051:	xor    ecx,ecx
   140001053:	mov    QWORD PTR [rsp+0x30],rax
   140001058:	call   QWORD PTR [rip+0xfa2]        # 0x140002000
   14000105e:	mov    r14d,0x20
   140001064:	lea    r8,[rsp+0x50]
   140001069:	mov    rcx,rax
   14000106c:	mov    r9d,r14d
   14000106f:	lea    edx,[r14+0x45]
   140001073:	call   QWORD PTR [rip+0xfcf]        # 0x140002048
   140001079:	xor    edi,edi
   14000107b:	test   eax,eax
   14000107d:	je     0x1400011d3
   140001083:	cmp    QWORD PTR [rsp+0x30],rdi
   140001088:	je     0x1400011c0
   14000108e:	lea    rdx,[rsp+0x30]
   140001093:	lea    rcx,[rsp+0x30]
   140001098:	call   QWORD PTR [rip+0xf82]        # 0x140002020
   14000109e:	lea    rdx,[rsp+0x38]
   1400010a3:	lea    rcx,[rsp+0x30]
   1400010a8:	call   QWORD PTR [rip+0xf62]        # 0x140002010
   1400010ae:	test   eax,eax
   1400010b0:	je     0x1400011d3
   1400010b6:	lea    rax,[rbp+0x90]
   1400010bd:	xor    r9d,r9d
   1400010c0:	lea    ebx,[r14+0x60]
   1400010c4:	mov    ecx,0x400
   1400010c9:	mov    DWORD PTR [rsp+0x28],ebx
   1400010cd:	lea    r8,[rsp+0x38]
   1400010d2:	lea    edx,[rdi+0x1]
   1400010d5:	mov    QWORD PTR [rsp+0x20],rax
   1400010da:	call   QWORD PTR [rip+0xf48]        # 0x140002028
   1400010e0:	test   eax,eax
   1400010e2:	jle    0x1400011d3
   1400010e8:	lea    ecx,[rax-0x1]
   1400010eb:	xor    r9d,r9d
   1400010ee:	movsxd rdx,ecx
   1400010f1:	lea    r8,[rbp+0x90]
   1400010f8:	mov    ecx,0x400
   1400010fd:	lea    r8,[r8+rdx*2]
   140001101:	mov    WORD PTR [r8],r14w
   140001105:	lea    edx,[rdi+0x7f]
   140001108:	add    r8,0x2
   14000110c:	sub    edx,eax
   14000110e:	mov    DWORD PTR [rsp+0x28],edx
   140001112:	lea    edx,[rdi+0x2]
   140001115:	mov    QWORD PTR [rsp+0x20],r8
   14000111a:	mov    WORD PTR [r8],di
   14000111e:	lea    r8,[rsp+0x38]
   140001123:	call   QWORD PTR [rip+0xedf]        # 0x140002008
   140001129:	xor    ecx,ecx
   14000112b:	call   QWORD PTR [rip+0xecf]        # 0x140002000
   140001131:	mov    r9d,ebx
   140001134:	lea    r8,[rbp-0x70]
   140001138:	mov    rcx,rax
   14000113b:	lea    edx,[rdi+0x66]
   14000113e:	call   QWORD PTR [rip+0xf04]        # 0x140002048
   140001144:	test   eax,eax
   140001146:	je     0x1400011d3
   14000114c:	mov    eax,ebx
   14000114e:	lea    rcx,[rbp-0x70]
   140001152:	cmp    WORD PTR [rcx],di
   140001155:	je     0x140001161
   140001157:	add    rcx,0x2
   14000115b:	sub    rax,0x1
   14000115f:	jne    0x140001152
   140001161:	test   rax,rax
   140001164:	je     0x1400011ba
   140001166:	mov    rcx,rbx
   140001169:	sub    rcx,rax
   14000116c:	lea    rax,[rbp-0x70]
   140001170:	lea    rax,[rax+rcx*2]
   140001174:	sub    rbx,rcx
   140001177:	je     0x1400011b3
   140001179:	lea    rdx,[rcx+0x7fffff7e]
   140001180:	add    rdx,rbx
   140001183:	lea    rcx,[rbp+0x90]
   14000118a:	sub    rcx,rax
   14000118d:	test   rdx,rdx
   140001190:	je     0x1400011ae
   140001192:	movzx  r8d,WORD PTR [rcx+rax*1]
   140001197:	test   r8w,r8w
   14000119b:	je     0x1400011ae
   14000119d:	mov    WORD PTR [rax],r8w
   1400011a1:	dec    rdx
   1400011a4:	add    rax,0x2
   1400011a8:	sub    rbx,0x1
   1400011ac:	jne    0x14000118d
   1400011ae:	test   rbx,rbx
   1400011b1:	jne    0x1400011b7
   1400011b3:	sub    rax,0x2
   1400011b7:	mov    WORD PTR [rax],di
   1400011ba:	lea    r8,[rbp-0x70]
   1400011be:	jmp    0x1400011c3
   1400011c0:	xor    r8d,r8d
   1400011c3:	xor    r9d,r9d
   1400011c6:	lea    rdx,[rsp+0x50]
   1400011cb:	xor    ecx,ecx
   1400011cd:	call   QWORD PTR [rip+0xe65]        # 0x140002038
   1400011d3:	xor    eax,eax
   1400011d5:	mov    rcx,QWORD PTR [rbp+0x190]
   1400011dc:	xor    rcx,rsp
   1400011df:	call   0x1400015f0
   1400011e4:	lea    r11,[rsp+0x2a0]
   1400011ec:	mov    rbx,QWORD PTR [r11+0x10]
   1400011f0:	mov    rdi,QWORD PTR [r11+0x18]
   1400011f4:	mov    r14,QWORD PTR [r11+0x20]
   1400011f8:	mov    rsp,r11
   1400011fb:	pop    rbp
   1400011fc:	ret    
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	int3   
   140001201:	int3   
   140001202:	int3   
   140001203:	int3   
   140001204:	int3   
   140001205:	int3   
   140001206:	int3   
   140001207:	int3   
   140001208:	int3   
   140001209:	int3   
   14000120a:	int3   
   14000120b:	int3   
   14000120c:	int3   
   14000120d:	int3   
   14000120e:	int3   
   14000120f:	int3   
   140001210:	sub    rsp,0x28
   140001214:	mov    eax,0x5a4d
   140001219:	cmp    WORD PTR [rip+0xffffffffffffede0],ax        # 0x140000000
   140001220:	je     0x140001226
   140001222:	xor    eax,eax
   140001224:	jmp    0x140001275
   140001226:	movsxd rcx,DWORD PTR [rip+0xffffffffffffee0f]        # 0x14000003c
   14000122d:	lea    rax,[rip+0xffffffffffffedcc]        # 0x140000000
   140001234:	add    rcx,rax
   140001237:	cmp    DWORD PTR [rcx],0x4550
   14000123d:	jne    0x140001222
   14000123f:	movzx  eax,WORD PTR [rcx+0x18]
   140001243:	cmp    eax,0x10b
   140001248:	je     0x140001264
   14000124a:	cmp    eax,0x20b
   14000124f:	jne    0x140001222
   140001251:	xor    eax,eax
   140001253:	cmp    DWORD PTR [rcx+0x84],0xe
   14000125a:	jbe    0x140001275
   14000125c:	cmp    DWORD PTR [rcx+0xf8],eax
   140001262:	jmp    0x140001272
   140001264:	xor    eax,eax
   140001266:	cmp    DWORD PTR [rcx+0x74],0xe
   14000126a:	jbe    0x140001275
   14000126c:	cmp    DWORD PTR [rcx+0xe8],eax
   140001272:	setne  al
   140001275:	mov    ecx,0x2
   14000127a:	mov    DWORD PTR [rip+0x1dc0],eax        # 0x140003040
   140001280:	call   0x1400016e8
   140001285:	mov    ecx,eax
   140001287:	call   QWORD PTR [rip+0xea3]        # 0x140002130
   14000128d:	mov    rcx,QWORD PTR [rip+0xec4]        # 0x140002158
   140001294:	or     rax,0xffffffffffffffff
   140001298:	mov    QWORD PTR [rip+0x2331],rax        # 0x1400035d0
   14000129f:	mov    QWORD PTR [rip+0x2332],rax        # 0x1400035d8
   1400012a6:	mov    eax,DWORD PTR [rip+0x1da8]        # 0x140003054
   1400012ac:	mov    DWORD PTR [rcx],eax
   1400012ae:	mov    rcx,QWORD PTR [rip+0xe9b]        # 0x140002150
   1400012b5:	mov    eax,DWORD PTR [rip+0x1d8d]        # 0x140003048
   1400012bb:	mov    DWORD PTR [rcx],eax
   1400012bd:	call   0x140001740
   1400012c2:	cmp    DWORD PTR [rip+0x1d37],0x0        # 0x140003000
   1400012c9:	jne    0x1400012d8
   1400012cb:	lea    rcx,[rip+0x46e]        # 0x140001740
   1400012d2:	call   QWORD PTR [rip+0xe28]        # 0x140002100
   1400012d8:	xor    eax,eax
   1400012da:	add    rsp,0x28
   1400012de:	ret    
   1400012df:	int3   
   1400012e0:	int3   
   1400012e1:	int3   
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	int3   
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	sub    rsp,0x38
   1400012f4:	mov    eax,DWORD PTR [rip+0x1d56]        # 0x140003050
   1400012fa:	lea    r8,[rip+0x1d37]        # 0x140003038
   140001301:	mov    r9d,DWORD PTR [rip+0x1d44]        # 0x14000304c
   140001308:	lea    rdx,[rip+0x1d21]        # 0x140003030
   14000130f:	mov    DWORD PTR [rip+0x1d2f],eax        # 0x140003044
   140001315:	lea    rcx,[rip+0x1d0c]        # 0x140003028
   14000131c:	lea    rax,[rip+0x1d21]        # 0x140003044
   140001323:	mov    QWORD PTR [rsp+0x20],rax
   140001328:	call   QWORD PTR [rip+0xe0a]        # 0x140002138
   14000132e:	mov    DWORD PTR [rip+0x1cf8],eax        # 0x14000302c
   140001334:	add    rsp,0x38
   140001338:	ret    
   140001339:	int3   
   14000133a:	int3   
   14000133b:	int3   
   14000133c:	int3   
   14000133d:	int3   
   14000133e:	int3   
   14000133f:	int3   
   140001340:	mov    QWORD PTR [rsp+0x8],rbx
   140001345:	mov    QWORD PTR [rsp+0x10],rsi
   14000134a:	mov    QWORD PTR [rsp+0x18],rdi
   14000134f:	push   r12
   140001351:	push   r14
   140001353:	push   r15
   140001355:	sub    rsp,0xb0
   14000135c:	xor    r15d,r15d
   14000135f:	mov    DWORD PTR [rsp+0x20],r15d
   140001364:	lea    rcx,[rsp+0x40]
   140001369:	call   QWORD PTR [rip+0xd21]        # 0x140002090
   14000136f:	nop
   140001370:	mov    rax,QWORD PTR gs:0x30
   140001379:	mov    rbx,QWORD PTR [rax+0x8]
   14000137d:	mov    r14d,r15d
   140001380:	xor    eax,eax
   140001382:	lock cmpxchg QWORD PTR [rip+0x2255],rbx        # 0x1400035e0
   14000138b:	je     0x1400013a9
   14000138d:	cmp    rax,rbx
   140001390:	jne    0x14000139c
   140001392:	mov    edi,0x1
   140001397:	mov    r14d,edi
   14000139a:	jmp    0x1400013ae
   14000139c:	mov    ecx,0x3e8
   1400013a1:	call   QWORD PTR [rip+0xd29]        # 0x1400020d0
   1400013a7:	jmp    0x140001380
   1400013a9:	mov    edi,0x1
   1400013ae:	mov    eax,DWORD PTR [rip+0x2234]        # 0x1400035e8
   1400013b4:	cmp    eax,edi
   1400013b6:	jne    0x1400013c6
   1400013b8:	mov    esi,0x1f
   1400013bd:	mov    ecx,esi
   1400013bf:	call   0x140001734
   1400013c4:	jmp    0x140001437
   1400013c6:	mov    eax,DWORD PTR [rip+0x221c]        # 0x1400035e8
   1400013cc:	test   eax,eax
   1400013ce:	jne    0x14000142c
   1400013d0:	mov    DWORD PTR [rip+0x2212],edi        # 0x1400035e8
   1400013d6:	lea    r12,[rip+0xdd3]        # 0x1400021b0
   1400013dd:	lea    rbx,[rip+0xdb4]        # 0x140002198
   1400013e4:	mov    QWORD PTR [rsp+0x30],rbx
   1400013e9:	mov    eax,r15d
   1400013ec:	mov    DWORD PTR [rsp+0x24],eax
   1400013f0:	cmp    rbx,r12
   1400013f3:	jae    0x14000141e
   1400013f5:	test   eax,eax
   1400013f7:	jne    0x140001422
   1400013f9:	mov    rsi,QWORD PTR [rbx]
   1400013fc:	test   rsi,rsi
   1400013ff:	je     0x140001413
   140001401:	mov    rcx,rsi
   140001404:	mov    rax,QWORD PTR [rip+0xd65]        # 0x140002170
   14000140b:	call   rax
   14000140d:	call   rsi
   14000140f:	mov    DWORD PTR [rsp+0x24],eax
   140001413:	add    rbx,0x8
   140001417:	mov    QWORD PTR [rsp+0x30],rbx
   14000141c:	jmp    0x1400013f0
   14000141e:	test   eax,eax
   140001420:	je     0x140001432
   140001422:	mov    eax,0xff
   140001427:	jmp    0x140001593
   14000142c:	mov    DWORD PTR [rip+0x1bf2],edi        # 0x140003024
   140001432:	mov    esi,0x1f
   140001437:	mov    eax,DWORD PTR [rip+0x21ab]        # 0x1400035e8
   14000143d:	cmp    eax,edi
   14000143f:	jne    0x14000145e
   140001441:	lea    rdx,[rip+0xd48]        # 0x140002190
   140001448:	lea    rcx,[rip+0xd31]        # 0x140002180
   14000144f:	call   0x14000190a
   140001454:	mov    DWORD PTR [rip+0x218a],0x2        # 0x1400035e8
   14000145e:	test   r14d,r14d
   140001461:	jne    0x14000146d
   140001463:	mov    rax,r15
   140001466:	xchg   QWORD PTR [rip+0x2173],rax        # 0x1400035e0
   14000146d:	cmp    QWORD PTR [rip+0x217c],r15        # 0x1400035f0
   140001474:	je     0x1400014a4
   140001476:	lea    rcx,[rip+0x2173]        # 0x1400035f0
   14000147d:	call   0x1400017a0
   140001482:	test   eax,eax
   140001484:	je     0x1400014a4
   140001486:	mov    rbx,QWORD PTR [rip+0x2163]        # 0x1400035f0
   14000148d:	mov    rcx,rbx
   140001490:	mov    rax,QWORD PTR [rip+0xcd9]        # 0x140002170
   140001497:	call   rax
   140001499:	xor    r8d,r8d
   14000149c:	lea    edx,[r8+0x2]
   1400014a0:	xor    ecx,ecx
   1400014a2:	call   rbx
   1400014a4:	mov    rax,QWORD PTR [rip+0xc6d]        # 0x140002118
   1400014ab:	mov    rdx,QWORD PTR [rax]
   1400014ae:	test   rdx,rdx
   1400014b1:	jne    0x1400014bd
   1400014b3:	mov    eax,0xff
   1400014b8:	jmp    0x140001593
   1400014bd:	mov    QWORD PTR [rsp+0x28],rdx
   1400014c2:	mov    ecx,DWORD PTR [rsp+0x20]
   1400014c6:	cmp    WORD PTR [rdx],0x20
   1400014ca:	ja     0x140001544
   1400014cc:	cmp    WORD PTR [rdx],r15w
   1400014d0:	je     0x1400014d6
   1400014d2:	test   ecx,ecx
   1400014d4:	jne    0x140001544
   1400014d6:	movzx  eax,WORD PTR [rdx]
   1400014d9:	sub    ax,di
   1400014dc:	cmp    ax,si
   1400014df:	ja     0x1400014ec
   1400014e1:	add    rdx,0x2
   1400014e5:	mov    QWORD PTR [rsp+0x28],rdx
   1400014ea:	jmp    0x1400014d6
   1400014ec:	mov    ecx,DWORD PTR [rsp+0x7c]
   1400014f0:	movzx  eax,WORD PTR [rsp+0x80]
   1400014f8:	mov    r9d,0xa
   1400014fe:	and    cl,dil
   140001501:	cmovne r9d,eax
   140001505:	mov    r8,rdx
   140001508:	xor    edx,edx
   14000150a:	lea    rcx,[rip+0xffffffffffffeaef]        # 0x140000000
   140001511:	call   0x140001008
   140001516:	mov    DWORD PTR [rip+0x1b04],eax        # 0x140003020
   14000151c:	cmp    DWORD PTR [rip+0x1b1d],r15d        # 0x140003040
   140001523:	jne    0x14000152d
   140001525:	mov    ecx,eax
   140001527:	call   QWORD PTR [rip+0xbfb]        # 0x140002128
   14000152d:	cmp    DWORD PTR [rip+0x1af0],r15d        # 0x140003024
   140001534:	jne    0x140001542
   140001536:	call   QWORD PTR [rip+0xbcc]        # 0x140002108
   14000153c:	mov    eax,DWORD PTR [rip+0x1ade]        # 0x140003020
   140001542:	jmp    0x140001593
   140001544:	cmp    WORD PTR [rdx],0x22
   140001548:	jne    0x140001558
   14000154a:	mov    eax,r15d
   14000154d:	test   ecx,ecx
   14000154f:	sete   al
   140001552:	mov    ecx,eax
   140001554:	mov    DWORD PTR [rsp+0x20],eax
   140001558:	add    rdx,0x2
   14000155c:	mov    QWORD PTR [rsp+0x28],rdx
   140001561:	jmp    0x1400014c6
   140001566:	mov    DWORD PTR [rip+0x1ab4],eax        # 0x140003020
   14000156c:	cmp    DWORD PTR [rip+0x1acd],0x0        # 0x140003040
   140001573:	jne    0x14000157e
   140001575:	mov    ecx,eax
   140001577:	call   QWORD PTR [rip+0xba3]        # 0x140002120
   14000157d:	int3   
   14000157e:	cmp    DWORD PTR [rip+0x1a9f],0x0        # 0x140003024
   140001585:	jne    0x140001593
   140001587:	call   QWORD PTR [rip+0xb7b]        # 0x140002108
   14000158d:	mov    eax,DWORD PTR [rip+0x1a8d]        # 0x140003020
   140001593:	lea    r11,[rsp+0xb0]
   14000159b:	mov    rbx,QWORD PTR [r11+0x20]
   14000159f:	mov    rsi,QWORD PTR [r11+0x28]
   1400015a3:	mov    rdi,QWORD PTR [r11+0x30]
   1400015a7:	mov    rsp,r11
   1400015aa:	pop    r15
   1400015ac:	pop    r14
   1400015ae:	pop    r12
   1400015b0:	ret    
   1400015b1:	int3   
   1400015b2:	int3   
   1400015b3:	int3   
   1400015b4:	int3   
   1400015b5:	int3   
   1400015b6:	int3   
   1400015b7:	int3   
   1400015b8:	int3   
   1400015b9:	int3   
   1400015ba:	int3   
   1400015bb:	int3   
   1400015bc:	int3   
   1400015bd:	int3   
   1400015be:	int3   
   1400015bf:	int3   
   1400015c0:	sub    rsp,0x28
   1400015c4:	call   0x140001834
   1400015c9:	add    rsp,0x28
   1400015cd:	jmp    0x140001340
   1400015d2:	int3   
   1400015d3:	int3   
   1400015d4:	int3   
   1400015d5:	int3   
   1400015d6:	int3   
   1400015d7:	int3   
   1400015d8:	int3   
   1400015d9:	int3   
   1400015da:	int3   
   1400015db:	int3   
   1400015dc:	int3   
   1400015dd:	int3   
   1400015de:	int3   
   1400015df:	int3   
   1400015e0:	int3   
   1400015e1:	int3   
   1400015e2:	int3   
   1400015e3:	int3   
   1400015e4:	int3   
   1400015e5:	int3   
   1400015e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400015f0:	cmp    rcx,QWORD PTR [rip+0x1a11]        # 0x140003008
   1400015f7:	jne    0x140001609
   1400015f9:	rol    rcx,0x10
   1400015fd:	test   cx,0xffff
   140001602:	jne    0x140001605
   140001604:	ret    
   140001605:	ror    rcx,0x10
   140001609:	jmp    0x140001980
   14000160e:	int3   
   14000160f:	int3   
   140001610:	int3   
   140001611:	int3   
   140001612:	int3   
   140001613:	int3   
   140001614:	int3   
   140001615:	int3   
   140001616:	int3   
   140001617:	int3   
   140001618:	int3   
   140001619:	int3   
   14000161a:	int3   
   14000161b:	int3   
   14000161c:	int3   
   14000161d:	int3   
   14000161e:	int3   
   14000161f:	int3   
   140001620:	sub    rsp,0x28
   140001624:	mov    rax,QWORD PTR [rcx]
   140001627:	cmp    DWORD PTR [rax],0xe06d7363
   14000162d:	jne    0x140001652
   14000162f:	cmp    DWORD PTR [rax+0x18],0x4
   140001633:	jne    0x140001652
   140001635:	mov    ecx,DWORD PTR [rax+0x20]
   140001638:	lea    eax,[rcx-0x19930520]
   14000163e:	cmp    eax,0x2
   140001641:	jbe    0x14000164b
   140001643:	cmp    ecx,0x1994000
   140001649:	jne    0x140001652
   14000164b:	call   QWORD PTR [rip+0xaf7]        # 0x140002148
   140001651:	int3   
   140001652:	xor    eax,eax
   140001654:	add    rsp,0x28
   140001658:	ret    
   140001659:	int3   
   14000165a:	int3   
   14000165b:	int3   
   14000165c:	int3   
   14000165d:	int3   
   14000165e:	int3   
   14000165f:	int3   
   140001660:	sub    rsp,0x28
   140001664:	lea    rcx,[rip+0xffffffffffffffb5]        # 0x140001620
   14000166b:	call   QWORD PTR [rip+0x9e7]        # 0x140002058
   140001671:	xor    eax,eax
   140001673:	add    rsp,0x28
   140001677:	ret    
   140001678:	int3   
   140001679:	int3   
   14000167a:	int3   
   14000167b:	int3   
   14000167c:	int3   
   14000167d:	int3   
   14000167e:	jmp    QWORD PTR [rip+0xadc]        # 0x140002160
   140001684:	int3   
   140001685:	int3   
   140001686:	int3   
   140001687:	int3   
   140001688:	int3   
   140001689:	int3   
   14000168a:	int3   
   14000168b:	int3   
   14000168c:	sub    rsp,0x18
   140001690:	xor    edx,edx
   140001692:	lea    rax,[rcx-0x1]
   140001696:	cmp    rax,0xfffffffffffffffd
   14000169a:	ja     0x1400016d8
   14000169c:	mov    eax,0x5a4d
   1400016a1:	cmp    WORD PTR [rcx],ax
   1400016a4:	jne    0x1400016d0
   1400016a6:	cmp    DWORD PTR [rcx+0x3c],edx
   1400016a9:	jl     0x1400016d0
   1400016ab:	cmp    DWORD PTR [rcx+0x3c],0x10000000
   1400016b2:	jae    0x1400016d0
   1400016b4:	movsxd rax,DWORD PTR [rcx+0x3c]
   1400016b8:	add    rax,rcx
   1400016bb:	mov    QWORD PTR [rsp],rax
   1400016bf:	cmp    DWORD PTR [rax],0x4550
   1400016c5:	cmovne rax,rdx
   1400016c9:	mov    rdx,rax
   1400016cc:	mov    QWORD PTR [rsp],rax
   1400016d0:	jmp    0x1400016d8
   1400016d2:	xor    edx,edx
   1400016d4:	mov    QWORD PTR [rsp],rdx
   1400016d8:	mov    rax,rdx
   1400016db:	add    rsp,0x18
   1400016df:	ret    
   1400016e0:	int3   
   1400016e1:	int3   
   1400016e2:	int3   
   1400016e3:	int3   
   1400016e4:	int3   
   1400016e5:	int3   
   1400016e6:	int3   
   1400016e7:	int3   
   1400016e8:	rex push rbx
   1400016ea:	sub    rsp,0x20
   1400016ee:	mov    ebx,ecx
   1400016f0:	xor    ecx,ecx
   1400016f2:	call   QWORD PTR [rip+0x908]        # 0x140002000
   1400016f8:	test   rax,rax
   1400016fb:	je     0x140001725
   1400016fd:	mov    rcx,rax
   140001700:	call   0x14000168c
   140001705:	test   rax,rax
   140001708:	je     0x140001725
   14000170a:	mov    ecx,0x2
   14000170f:	cmp    WORD PTR [rax+0x5c],cx
   140001713:	jne    0x140001719
   140001715:	mov    eax,ecx
   140001717:	jmp    0x140001727
   140001719:	cmp    WORD PTR [rax+0x5c],0x3
   14000171e:	mov    eax,0x1
   140001723:	je     0x140001727
   140001725:	mov    eax,ebx
   140001727:	add    rsp,0x20
   14000172b:	pop    rbx
   14000172c:	ret    
   14000172d:	int3   
   14000172e:	int3   
   14000172f:	int3   
   140001730:	int3   
   140001731:	int3   
   140001732:	int3   
   140001733:	int3   
   140001734:	jmp    QWORD PTR [rip+0xa06]        # 0x140002140
   14000173a:	int3   
   14000173b:	int3   
   14000173c:	int3   
   14000173d:	int3   
   14000173e:	int3   
   14000173f:	int3   
   140001740:	xor    eax,eax
   140001742:	ret    
   140001743:	int3   
   140001744:	int3   
   140001745:	int3   
   140001746:	int3   
   140001747:	int3   
   140001748:	int3   
   140001749:	int3   
   14000174a:	int3   
   14000174b:	int3   
   14000174c:	int3   
   14000174d:	int3   
   14000174e:	int3   
   14000174f:	int3   
   140001750:	movsxd r8,DWORD PTR [rcx+0x3c]
   140001754:	xor    r9d,r9d
   140001757:	add    r8,rcx
   14000175a:	mov    r10,rdx
   14000175d:	movzx  eax,WORD PTR [r8+0x14]
   140001762:	movzx  r11d,WORD PTR [r8+0x6]
   140001767:	add    rax,0x18
   14000176b:	add    rax,r8
   14000176e:	test   r11d,r11d
   140001771:	je     0x140001791
   140001773:	mov    edx,DWORD PTR [rax+0xc]
   140001776:	cmp    r10,rdx
   140001779:	jb     0x140001785
   14000177b:	mov    ecx,DWORD PTR [rax+0x8]
   14000177e:	add    ecx,edx
   140001780:	cmp    r10,rcx
   140001783:	jb     0x140001793
   140001785:	inc    r9d
   140001788:	add    rax,0x28
   14000178c:	cmp    r9d,r11d
   14000178f:	jb     0x140001773
   140001791:	xor    eax,eax
   140001793:	ret    
   140001794:	int3   
   140001795:	int3   
   140001796:	int3   
   140001797:	int3   
   140001798:	int3   
   140001799:	int3   
   14000179a:	int3   
   14000179b:	int3   
   14000179c:	int3   
   14000179d:	int3   
   14000179e:	int3   
   14000179f:	int3   
   1400017a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400017a5:	push   rdi
   1400017a6:	sub    rsp,0x20
   1400017aa:	mov    rbx,rcx
   1400017ad:	lea    rdi,[rip+0xffffffffffffe84c]        # 0x140000000
   1400017b4:	mov    rcx,rdi
   1400017b7:	call   0x140001800
   1400017bc:	test   eax,eax
   1400017be:	je     0x1400017e2
   1400017c0:	sub    rbx,rdi
   1400017c3:	mov    rdx,rbx
   1400017c6:	mov    rcx,rdi
   1400017c9:	call   0x140001750
   1400017ce:	test   rax,rax
   1400017d1:	je     0x1400017e2
   1400017d3:	mov    eax,DWORD PTR [rax+0x24]
   1400017d6:	shr    eax,0x1f
   1400017d9:	not    eax
   1400017db:	and    eax,0x1
   1400017de:	jmp    0x1400017e2
   1400017e0:	xor    eax,eax
   1400017e2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400017e7:	add    rsp,0x20
   1400017eb:	pop    rdi
   1400017ec:	ret    
   1400017ed:	int3   
   1400017ee:	int3   
   1400017ef:	int3   
   1400017f0:	int3   
   1400017f1:	int3   
   1400017f2:	int3   
   1400017f3:	int3   
   1400017f4:	int3   
   1400017f5:	int3   
   1400017f6:	int3   
   1400017f7:	int3   
   1400017f8:	int3   
   1400017f9:	int3   
   1400017fa:	int3   
   1400017fb:	int3   
   1400017fc:	int3   
   1400017fd:	int3   
   1400017fe:	int3   
   1400017ff:	int3   
   140001800:	mov    rax,rcx
   140001803:	mov    ecx,0x5a4d
   140001808:	cmp    WORD PTR [rax],cx
   14000180b:	je     0x140001810
   14000180d:	xor    eax,eax
   14000180f:	ret    
   140001810:	movsxd rcx,DWORD PTR [rax+0x3c]
   140001814:	add    rcx,rax
   140001817:	xor    eax,eax
   140001819:	cmp    DWORD PTR [rcx],0x4550
   14000181f:	jne    0x14000182d
   140001821:	mov    edx,0x20b
   140001826:	cmp    WORD PTR [rcx+0x18],dx
   14000182a:	sete   al
   14000182d:	ret    
   14000182e:	int3   
   14000182f:	int3   
   140001830:	int3   
   140001831:	int3   
   140001832:	int3   
   140001833:	int3   
   140001834:	mov    QWORD PTR [rsp+0x20],rbx
   140001839:	push   rbp
   14000183a:	mov    rbp,rsp
   14000183d:	sub    rsp,0x20
   140001841:	and    QWORD PTR [rbp+0x18],0x0
   140001846:	movabs rbx,0x2b992ddfa232
   140001850:	mov    rax,QWORD PTR [rip+0x17b1]        # 0x140003008
   140001857:	cmp    rax,rbx
   14000185a:	jne    0x1400018ef
   140001860:	lea    rcx,[rbp+0x18]
   140001864:	call   QWORD PTR [rip+0x876]        # 0x1400020e0
   14000186a:	mov    rax,QWORD PTR [rbp+0x18]
   14000186e:	mov    QWORD PTR [rbp+0x10],rax
   140001872:	call   QWORD PTR [rip+0x800]        # 0x140002078
   140001878:	mov    eax,eax
   14000187a:	xor    QWORD PTR [rbp+0x10],rax
   14000187e:	call   QWORD PTR [rip+0x7ec]        # 0x140002070
   140001884:	mov    eax,eax
   140001886:	xor    QWORD PTR [rbp+0x10],rax
   14000188a:	call   QWORD PTR [rip+0x858]        # 0x1400020e8
   140001890:	mov    eax,eax
   140001892:	shl    rax,0x18
   140001896:	xor    QWORD PTR [rbp+0x10],rax
   14000189a:	call   QWORD PTR [rip+0x848]        # 0x1400020e8
   1400018a0:	mov    eax,eax
   1400018a2:	lea    rcx,[rbp+0x10]
   1400018a6:	xor    rax,QWORD PTR [rbp+0x10]
   1400018aa:	xor    rax,rcx
   1400018ad:	lea    rcx,[rbp+0x20]
   1400018b1:	mov    QWORD PTR [rbp+0x10],rax
   1400018b5:	call   QWORD PTR [rip+0x7e5]        # 0x1400020a0
   1400018bb:	mov    eax,DWORD PTR [rbp+0x20]
   1400018be:	movabs rcx,0xffffffffffff
   1400018c8:	shl    rax,0x20
   1400018cc:	xor    rax,QWORD PTR [rbp+0x20]
   1400018d0:	xor    rax,QWORD PTR [rbp+0x10]
   1400018d4:	and    rax,rcx
   1400018d7:	movabs rcx,0x2b992ddfa233
   1400018e1:	cmp    rax,rbx
   1400018e4:	cmove  rax,rcx
   1400018e8:	mov    QWORD PTR [rip+0x1719],rax        # 0x140003008
   1400018ef:	mov    rbx,QWORD PTR [rsp+0x48]
   1400018f4:	not    rax
   1400018f7:	mov    QWORD PTR [rip+0x1712],rax        # 0x140003010
   1400018fe:	add    rsp,0x20
   140001902:	pop    rbp
   140001903:	ret    
   140001904:	int3   
   140001905:	int3   
   140001906:	int3   
   140001907:	int3   
   140001908:	int3   
   140001909:	int3   
   14000190a:	jmp    QWORD PTR [rip+0x7e8]        # 0x1400020f8
   140001910:	int3   
   140001911:	int3   
   140001912:	int3   
   140001913:	int3   
   140001914:	int3   
   140001915:	int3   
   140001916:	jmp    QWORD PTR [rip+0x7f4]        # 0x140002110
   14000191c:	int3   
   14000191d:	int3   
   14000191e:	int3   
   14000191f:	int3   
   140001920:	int3   
   140001921:	int3   
   140001922:	int3   
   140001923:	int3   
   140001924:	int3   
   140001925:	int3   
   140001926:	int3   
   140001927:	int3   
   140001928:	int3   
   140001929:	int3   
   14000192a:	int3   
   14000192b:	int3   
   14000192c:	int3   
   14000192d:	int3   
   14000192e:	int3   
   14000192f:	int3   
   140001930:	ret    0x0
   140001933:	int3   
   140001934:	int3   
   140001935:	int3   
   140001936:	int3   
   140001937:	int3   
   140001938:	int3   
   140001939:	int3   
   14000193a:	int3   
   14000193b:	int3   
   14000193c:	rex push rbx
   14000193e:	sub    rsp,0x20
   140001942:	mov    rbx,rcx
   140001945:	xor    ecx,ecx
   140001947:	call   QWORD PTR [rip+0x70b]        # 0x140002058
   14000194d:	mov    rcx,rbx
   140001950:	call   QWORD PTR [rip+0x70a]        # 0x140002060
   140001956:	call   QWORD PTR [rip+0x724]        # 0x140002080
   14000195c:	mov    rcx,rax
   14000195f:	mov    edx,0xc0000409
   140001964:	add    rsp,0x20
   140001968:	pop    rbx
   140001969:	rex.W jmp QWORD PTR [rip+0x718]        # 0x140002088
   140001970:	int3   
   140001971:	int3   
   140001972:	int3   
   140001973:	int3   
   140001974:	int3   
   140001975:	int3   
   140001976:	int3   
   140001977:	int3   
   140001978:	int3   
   140001979:	int3   
   14000197a:	int3   
   14000197b:	int3   
   14000197c:	int3   
   14000197d:	int3   
   14000197e:	int3   
   14000197f:	int3   
   140001980:	mov    QWORD PTR [rsp+0x8],rcx
   140001985:	sub    rsp,0x88
   14000198c:	lea    rcx,[rip+0x176d]        # 0x140003100
   140001993:	call   QWORD PTR [rip+0x717]        # 0x1400020b0
   140001999:	mov    rax,QWORD PTR [rip+0x1858]        # 0x1400031f8
   1400019a0:	mov    QWORD PTR [rsp+0x48],rax
   1400019a5:	xor    r8d,r8d
   1400019a8:	lea    rdx,[rsp+0x50]
   1400019ad:	mov    rcx,QWORD PTR [rsp+0x48]
   1400019b2:	call   QWORD PTR [rip+0x700]        # 0x1400020b8
   1400019b8:	mov    QWORD PTR [rsp+0x40],rax
   1400019bd:	cmp    QWORD PTR [rsp+0x40],0x0
   1400019c3:	je     0x140001a07
   1400019c5:	mov    QWORD PTR [rsp+0x38],0x0
   1400019ce:	lea    rax,[rsp+0x58]
   1400019d3:	mov    QWORD PTR [rsp+0x30],rax
   1400019d8:	lea    rax,[rsp+0x60]
   1400019dd:	mov    QWORD PTR [rsp+0x28],rax
   1400019e2:	lea    rax,[rip+0x1717]        # 0x140003100
   1400019e9:	mov    QWORD PTR [rsp+0x20],rax
   1400019ee:	mov    r9,QWORD PTR [rsp+0x40]
   1400019f3:	mov    r8,QWORD PTR [rsp+0x48]
   1400019f8:	mov    rdx,QWORD PTR [rsp+0x50]
   1400019fd:	xor    ecx,ecx
   1400019ff:	call   QWORD PTR [rip+0x6bb]        # 0x1400020c0
   140001a05:	jmp    0x140001a2a
   140001a07:	mov    rax,QWORD PTR [rip+0x178a]        # 0x140003198
   140001a0e:	mov    rax,QWORD PTR [rax]
   140001a11:	mov    QWORD PTR [rip+0x17e0],rax        # 0x1400031f8
   140001a18:	mov    rax,QWORD PTR [rip+0x1779]        # 0x140003198
   140001a1f:	add    rax,0x8
   140001a23:	mov    QWORD PTR [rip+0x176e],rax        # 0x140003198
   140001a2a:	mov    rax,QWORD PTR [rip+0x17c7]        # 0x1400031f8
   140001a31:	mov    QWORD PTR [rip+0x1638],rax        # 0x140003070
   140001a38:	mov    rax,QWORD PTR [rsp+0x90]
   140001a40:	mov    QWORD PTR [rip+0x1739],rax        # 0x140003180
   140001a47:	mov    DWORD PTR [rip+0x160f],0xc0000409        # 0x140003060
   140001a51:	mov    DWORD PTR [rip+0x1609],0x1        # 0x140003064
   140001a5b:	mov    DWORD PTR [rip+0x1613],0x3        # 0x140003078
   140001a65:	mov    eax,0x8
   140001a6a:	imul   rax,rax,0x0
   140001a6e:	lea    rcx,[rip+0x160b]        # 0x140003080
   140001a75:	mov    QWORD PTR [rcx+rax*1],0x2
   140001a7d:	mov    eax,0x8
   140001a82:	imul   rax,rax,0x1
   140001a86:	lea    rcx,[rip+0x15f3]        # 0x140003080
   140001a8d:	mov    rdx,QWORD PTR [rip+0x1574]        # 0x140003008
   140001a94:	mov    QWORD PTR [rcx+rax*1],rdx
   140001a98:	mov    eax,0x8
   140001a9d:	imul   rax,rax,0x2
   140001aa1:	lea    rcx,[rip+0x15d8]        # 0x140003080
   140001aa8:	mov    rdx,QWORD PTR [rip+0x1561]        # 0x140003010
   140001aaf:	mov    QWORD PTR [rcx+rax*1],rdx
   140001ab3:	mov    eax,0x8
   140001ab8:	imul   rax,rax,0x0
   140001abc:	mov    rcx,QWORD PTR [rip+0x1545]        # 0x140003008
   140001ac3:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140001ac8:	mov    eax,0x8
   140001acd:	imul   rax,rax,0x1
   140001ad1:	mov    rcx,QWORD PTR [rip+0x1538]        # 0x140003010
   140001ad8:	mov    QWORD PTR [rsp+rax*1+0x68],rcx
   140001add:	lea    rcx,[rip+0x6fc]        # 0x1400021e0
   140001ae4:	call   0x14000193c
   140001ae9:	add    rsp,0x88
   140001af0:	ret    
   140001af1:	int3   
   140001af2:	int3   
   140001af3:	int3   
   140001af4:	int3   
   140001af5:	int3   
   140001af6:	int3   
   140001af7:	int3   
   140001af8:	int3   
   140001af9:	int3   
   140001afa:	int3   
   140001afb:	int3   
   140001afc:	int3   
   140001afd:	int3   
   140001afe:	int3   
   140001aff:	int3   
   140001b00:	int3   
   140001b01:	int3   
   140001b02:	int3   
   140001b03:	int3   
   140001b04:	int3   
   140001b05:	int3   
   140001b06:	int3   
   140001b07:	int3   
   140001b08:	sub    rsp,0x28
   140001b0c:	mov    r8,QWORD PTR [r9+0x38]
   140001b10:	mov    rcx,rdx
   140001b13:	mov    rdx,r9
   140001b16:	call   0x140001b2c
   140001b1b:	mov    eax,0x1
   140001b20:	add    rsp,0x28
   140001b24:	ret    
   140001b25:	int3   
   140001b26:	int3   
   140001b27:	int3   
   140001b28:	int3   
   140001b29:	int3   
   140001b2a:	int3   
   140001b2b:	int3   
   140001b2c:	rex push rbx
   140001b2e:	sub    rsp,0x20
   140001b32:	mov    r11d,DWORD PTR [r8]
   140001b35:	mov    rbx,rdx
   140001b38:	and    r11d,0xfffffff8
   140001b3c:	mov    r9,rcx
   140001b3f:	test   BYTE PTR [r8],0x4
   140001b43:	mov    r10,rcx
   140001b46:	je     0x140001b5b
   140001b48:	mov    eax,DWORD PTR [r8+0x8]
   140001b4c:	movsxd r10,DWORD PTR [r8+0x4]
   140001b50:	neg    eax
   140001b52:	add    r10,rcx
   140001b55:	movsxd rcx,eax
   140001b58:	and    r10,rcx
   140001b5b:	movsxd rax,r11d
   140001b5e:	mov    rdx,QWORD PTR [rax+r10*1]
   140001b62:	mov    rax,QWORD PTR [rbx+0x10]
   140001b66:	mov    ecx,DWORD PTR [rax+0x8]
   140001b69:	add    rcx,QWORD PTR [rbx+0x8]
   140001b6d:	test   BYTE PTR [rcx+0x3],0xf
   140001b71:	je     0x140001b7f
   140001b73:	movzx  eax,BYTE PTR [rcx+0x3]
   140001b77:	and    eax,0xfffffff0
   140001b7a:	cdqe   
   140001b7c:	add    r9,rax
   140001b7f:	xor    r9,rdx
   140001b82:	mov    rcx,r9
   140001b85:	add    rsp,0x20
   140001b89:	pop    rbx
   140001b8a:	jmp    0x1400015f0
   140001b8f:	int3   
   140001b90:	int3   
   140001b91:	int3   
   140001b92:	int3   
   140001b93:	int3   
   140001b94:	int3   
   140001b95:	int3   
   140001b96:	data16 nop WORD PTR [rax+rax*1+0x0]
   140001ba0:	jmp    rax
   140001ba2:	int3   
   140001ba3:	int3   
   140001ba4:	int3   
   140001ba5:	int3   
   140001ba6:	int3   
   140001ba7:	int3   
   140001ba8:	int3   
   140001ba9:	int3   
   140001baa:	int3   
   140001bab:	int3   
   140001bac:	int3   
   140001bad:	int3   
   140001bae:	int3   
   140001baf:	int3   
   140001bb0:	int3   
   140001bb1:	int3   
   140001bb2:	int3   
   140001bb3:	int3   
   140001bb4:	int3   
   140001bb5:	int3   
   140001bb6:	rex push rbp
   140001bb8:	sub    rsp,0x20
   140001bbc:	mov    rbp,rdx
   140001bbf:	mov    rax,QWORD PTR [rcx]
   140001bc2:	mov    rdx,rcx
   140001bc5:	mov    ecx,DWORD PTR [rax]
   140001bc7:	call   0x14000167e
   140001bcc:	nop
   140001bcd:	add    rsp,0x20
   140001bd1:	pop    rbp
   140001bd2:	ret    
   140001bd3:	int3   
   140001bd4:	int3   
   140001bd5:	int3   
   140001bd6:	int3   
   140001bd7:	int3   
   140001bd8:	int3   
   140001bd9:	int3   
   140001bda:	int3   
   140001bdb:	int3   
   140001bdc:	int3   
   140001bdd:	int3   
   140001bde:	int3   
   140001bdf:	int3   
   140001be0:	rex push rbp
   140001be2:	sub    rsp,0x20
   140001be6:	mov    rbp,rdx
   140001be9:	mov    rax,QWORD PTR [rcx]
   140001bec:	xor    ecx,ecx
   140001bee:	cmp    DWORD PTR [rax],0xc0000005
   140001bf4:	sete   cl
   140001bf7:	mov    eax,ecx
   140001bf9:	add    rsp,0x20
   140001bfd:	pop    rbp
   140001bfe:	ret    
   140001bff:	int3   

Disassembly of section .rdata:

0000000140002000 <.rdata>:
   140002000:	rex.X sub BYTE PTR [rax],al
   140002003:	add    BYTE PTR [rax],al
   140002005:	add    BYTE PTR [rax],al
   140002007:	add    BYTE PTR [rsi+0x28],dl
   14000200a:	add    BYTE PTR [rax],al
   14000200c:	add    BYTE PTR [rax],al
   14000200e:	add    BYTE PTR [rax],al
   140002010:	push   0x28
   140002015:	add    BYTE PTR [rax],al
   140002017:	add    BYTE PTR [rax+0x28],al
   14000201d:	add    BYTE PTR [rax],al
   14000201f:	add    BYTE PTR [rsi+0x28],dl
   140002025:	add    BYTE PTR [rax],al
   140002027:	add    BYTE PTR [rax],dh
   140002029:	sub    BYTE PTR [rax],al
	...
   140002037:	add    BYTE PTR [rbx+rbp*1+0x0],bh
	...
   140002046:	add    BYTE PTR [rax],al
   140002048:	mov    esi,0x28
	...
   140002055:	add    BYTE PTR [rax],al
   140002057:	add    ah,al
   140002059:	sub    DWORD PTR [rax],eax
   14000205b:	add    BYTE PTR [rax],al
   14000205d:	add    BYTE PTR [rax],al
   14000205f:	add    BYTE PTR [rdx+rbp*1+0x0],dl
	...
   14000206e:	add    BYTE PTR [rax],al
   140002070:	adc    ch,BYTE PTR [rdx]
   140002072:	add    BYTE PTR [rax],al
   140002074:	add    BYTE PTR [rax],al
   140002076:	add    BYTE PTR [rax],al
   140002078:	cld    
   140002079:	sub    DWORD PTR [rax],eax
   14000207b:	add    BYTE PTR [rax],al
   14000207d:	add    BYTE PTR [rax],al
   14000207f:	add    BYTE PTR [rax+0x2a],dh
   140002085:	add    BYTE PTR [rax],al
   140002087:	add    ah,al
   140002089:	sub    al,BYTE PTR [rax]
   14000208b:	add    BYTE PTR [rax],al
   14000208d:	add    BYTE PTR [rax],al
   14000208f:	add    BYTE PTR [rdx+0x29],dh
	...
   14000209d:	add    BYTE PTR [rax],al
   14000209f:	add    dl,ah
   1400020a1:	sub    DWORD PTR [rax],eax
	...
   1400020af:	add    BYTE PTR [rdx+0x2a],dl
   1400020b2:	add    BYTE PTR [rax],al
   1400020b4:	add    BYTE PTR [rax],al
   1400020b6:	add    BYTE PTR [rax],al
   1400020b8:	data16 sub al,BYTE PTR [rax]
   1400020bb:	add    BYTE PTR [rax],al
   1400020bd:	add    BYTE PTR [rax],al
   1400020bf:	add    BYTE PTR [rax+0x2a],al
	...
   1400020cd:	add    BYTE PTR [rax],al
   1400020cf:	add    BYTE PTR [rdx+0x29],ch
	...
   1400020dd:	add    BYTE PTR [rax],al
   1400020df:	add    BYTE PTR [rax],ch
   1400020e1:	sub    al,BYTE PTR [rax]
   1400020e3:	add    BYTE PTR [rax],al
   1400020e5:	add    BYTE PTR [rax],al
   1400020e7:	add    BYTE PTR [rdx+0x2a],al
	...
   1400020f6:	add    BYTE PTR [rax],al
   1400020f8:	rex.RX sub DWORD PTR [rax],r8d
   1400020fb:	add    BYTE PTR [rax],al
   1400020fd:	add    BYTE PTR [rax],al
   1400020ff:	add    BYTE PTR [rdx],dh
   140002101:	sub    DWORD PTR [rax],eax
   140002103:	add    BYTE PTR [rax],al
   140002105:	add    BYTE PTR [rax],al
   140002107:	add    BYTE PTR [rax],ch
   140002109:	sub    DWORD PTR [rax],eax
   14000210b:	add    BYTE PTR [rax],al
   14000210d:	add    BYTE PTR [rax],al
   14000210f:	add    BYTE PTR [rdx+0x29],dl
   140002112:	add    BYTE PTR [rax],al
   140002114:	add    BYTE PTR [rax],al
   140002116:	add    BYTE PTR [rax],al
   140002118:	push   0x29
   14000211a:	add    BYTE PTR [rax],al
   14000211c:	add    BYTE PTR [rax],al
   14000211e:	add    BYTE PTR [rax],al
   140002120:	and    BYTE PTR [rcx],ch
   140002122:	add    BYTE PTR [rax],al
   140002124:	add    BYTE PTR [rax],al
   140002126:	add    BYTE PTR [rax],al
   140002128:	sbb    BYTE PTR [rcx],ch
   14000212a:	add    BYTE PTR [rax],al
   14000212c:	add    BYTE PTR [rax],al
   14000212e:	add    BYTE PTR [rax],al
   140002130:	(bad)  
   140002131:	sub    DWORD PTR [rax],eax
   140002133:	add    BYTE PTR [rax],al
   140002135:	add    BYTE PTR [rax],al
   140002137:	add    ah,dh
   140002139:	sub    BYTE PTR [rax],al
   14000213b:	add    BYTE PTR [rax],al
   14000213d:	add    BYTE PTR [rax],al
   14000213f:	add    dh,ah
   140002141:	sub    BYTE PTR [rax],al
   140002143:	add    BYTE PTR [rax],al
   140002145:	add    BYTE PTR [rax],al
   140002147:	add    BYTE PTR [rdx+0x29],cl
   14000214d:	add    BYTE PTR [rax],al
   14000214f:	add    BYTE PTR [rsi+0x29],bh
   140002152:	add    BYTE PTR [rax],al
   140002154:	add    BYTE PTR [rax],al
   140002156:	add    BYTE PTR [rax],al
   140002158:	je     0x140002183
   14000215a:	add    BYTE PTR [rax],al
   14000215c:	add    BYTE PTR [rax],al
   14000215e:	add    BYTE PTR [rax],al
   140002160:	fsubr  DWORD PTR [rax]
	...
   14000216e:	add    BYTE PTR [rax],al
   140002170:	xor    BYTE PTR [rcx],bl
   140002172:	add    BYTE PTR [rax+0x1],al
   140002175:	add    BYTE PTR [rax],al
   140002177:	add    BYTE PTR [rax+0x140001b],ah
	...
   140002185:	add    BYTE PTR [rax],al
   140002187:	add    al,dh
   140002189:	adc    al,BYTE PTR [rax]
   14000218b:	rex add DWORD PTR [rax],eax
	...
   14000219e:	add    BYTE PTR [rax],al
   1400021a0:	adc    BYTE PTR [rdx],dl
   1400021a2:	add    BYTE PTR [rax+0x1],al
   1400021a5:	add    BYTE PTR [rax],al
   1400021a7:	add    BYTE PTR [rax+0x16],ah
   1400021aa:	add    BYTE PTR [rax+0x1],al
	...
   1400021b5:	add    BYTE PTR [rax],al
   1400021b7:	add    BYTE PTR [rax],dl
   1400021b9:	adc    al,BYTE PTR [rax]
   1400021bb:	add    al,dh
   1400021bd:	adc    al,BYTE PTR [rax]
   1400021bf:	add    al,al
   1400021c1:	adc    eax,0x16200000
   1400021c6:	add    BYTE PTR [rax],al
   1400021c8:	(bad)  
   1400021c9:	(bad)  
   1400021ca:	add    BYTE PTR [rax],al
   1400021cc:	rex (bad) 
   1400021ce:	add    BYTE PTR [rax],al
   1400021d0:	xor    BYTE PTR [rcx],bl
   1400021d2:	add    BYTE PTR [rax],al
   1400021d4:	sbb    BYTE PTR [rcx],0x0
	...
   1400021df:	add    BYTE PTR [rax+0x30],ah
   1400021e2:	add    BYTE PTR [rax+0x1],al
   1400021e5:	add    BYTE PTR [rax],al
   1400021e7:	add    BYTE PTR [rax],al
   1400021e9:	xor    DWORD PTR [rax],eax
   1400021eb:	rex add DWORD PTR [rax],eax
   1400021ee:	add    BYTE PTR [rax],al
   1400021f0:	add    BYTE PTR [rax],al
   1400021f2:	add    BYTE PTR [rax],al
   1400021f4:	scas   eax,DWORD PTR es:[rdi]
   1400021f5:	cmp    DWORD PTR [rdi+0x55],ebx
   1400021fb:	add    BYTE PTR [rdx],al
   1400021fd:	add    BYTE PTR [rax],al
   1400021ff:	add    BYTE PTR [rbx],ah
   140002201:	add    BYTE PTR [rax],al
   140002203:	add    al,dh
   140002205:	and    al,BYTE PTR [rax]
   140002207:	add    al,dh
   140002209:	adc    al,BYTE PTR [rax]
   14000220b:	add    BYTE PTR [rax],al
   14000220d:	add    BYTE PTR [rax],al
   14000220f:	add    BYTE PTR [rdi+0x559f39],ch
   140002215:	add    BYTE PTR [rax],al
   140002217:	add    BYTE PTR [rip+0xffffffffe0000000],cl        # 0x12000221d
   14000221d:	add    DWORD PTR [rax],eax
   14000221f:	add    BYTE PTR [rax],ch
   140002221:	and    eax,DWORD PTR [rax]
   140002223:	add    BYTE PTR [rax],ch
   140002225:	adc    eax,DWORD PTR [rax]
	...
   14000224f:	add    BYTE PTR [rax+0x0],ah
	...
   1400022a5:	add    BYTE PTR [rax],al
   1400022a7:	add    BYTE PTR [rax],cl
   1400022a9:	xor    BYTE PTR [rax],al
   1400022ab:	rex add DWORD PTR [rax],eax
	...
   1400022be:	add    BYTE PTR [rax],al
   1400022c0:	jo     0x1400022e3
   1400022c2:	add    BYTE PTR [rax+0x1],al
   1400022c5:	add    BYTE PTR [rax],al
   1400022c7:	add    BYTE PTR [rax+0x21],bh
   1400022ca:	add    BYTE PTR [rax+0x1],al
   1400022cd:	add    BYTE PTR [rax],al
   1400022cf:	add    BYTE PTR [rax+0x1400021],bh
   1400022d5:	add    BYTE PTR [rax],al
   1400022d7:	add    BYTE PTR [rax],cl
	...
   1400022e1:	xor    eax,0x0
	...
   1400022ee:	add    BYTE PTR [rax],al
   1400022f0:	push   rdx
   1400022f1:	push   rbx
   1400022f2:	rex.R push rbx
   1400022f4:	rex cmp eax,0xeb53043b
   1400022fa:	retf   0x904c
   1400022fd:	cmp    bl,BYTE PTR [rdi]
   1400022ff:	cmc    
   140002300:	pop    QWORD PTR [rdx]
   140002302:	cmp    dh,0x1
   140002305:	add    BYTE PTR [rax],al
   140002307:	add    BYTE PTR [rdi+0x69],dh
   14000230a:	outs   dx,BYTE PTR ds:[rsi]
   14000230b:	jbe    0x140002372
   14000230d:	jb     0x14000233d
   14000230f:	jo     0x140002375
   140002311:	(bad)  
	...
   140002326:	add    BYTE PTR [rax],al
   140002328:	rex.RXB
   140002329:	rex.XB push r12
   14000232b:	rex.WR add BYTE PTR [rax],r10b
   14000232e:	add    BYTE PTR [rax],al
   140002330:	(bad)  
   140002331:	or     eax,DWORD PTR [rax]
   140002333:	add    BYTE PTR [rsi],ch
   140002335:	je     0x14000239c
   140002337:	js     0x1400023ad
   140002339:	and    al,0x6d
   14000233b:	outs   dx,BYTE PTR ds:[rsi]
   14000233c:	add    BYTE PTR [rax],al
   14000233e:	add    BYTE PTR [rax],al
   140002340:	nop
   140002341:	sbb    eax,DWORD PTR [rax]
   140002343:	add    BYTE PTR [rdx],dl
   140002345:	add    BYTE PTR [rax],al
   140002347:	add    BYTE PTR [rsi],ch
   140002349:	je     0x1400023b0
   14000234b:	js     0x1400023c1
   14000234d:	and    al,0x6d
   14000234f:	outs   dx,BYTE PTR ds:[rsi]
   140002350:	and    al,0x30
   140002352:	xor    BYTE PTR [rax],al
   140002354:	mov    al,0x1b
   140002356:	add    BYTE PTR [rax],al
   140002358:	push   rax
   140002359:	add    BYTE PTR [rax],al
   14000235b:	add    BYTE PTR [rsi],ch
   14000235d:	je     0x1400023c4
   14000235f:	js     0x1400023d5
   140002361:	and    al,0x78
   140002363:	add    BYTE PTR [rax],al
   140002365:	and    BYTE PTR [rax],al
   140002367:	add    BYTE PTR [rax+0x1],dh
   14000236a:	add    BYTE PTR [rax],al
   14000236c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   140002375:	add    BYTE PTR [rax],al
   140002377:	add    BYTE PTR [rax+0x21],dh
   14000237a:	add    BYTE PTR [rax],al
   14000237c:	adc    BYTE PTR [rax],al
   14000237e:	add    BYTE PTR [rax],al
   140002380:	xor    BYTE PTR cs:[rax],dh
   140002383:	movsxd esp,DWORD PTR [rsi+0x67]
   140002386:	add    BYTE PTR [rax],al
   140002388:	and    BYTE PTR [rcx],0x0
   14000238b:	add    BYTE PTR [rax],cl
   14000238d:	add    BYTE PTR [rax],al
   14000238f:	add    BYTE PTR [rsi],ch
   140002391:	rex.XB push r10
   140002393:	push   rsp
   140002394:	and    al,0x58
   140002396:	rex.XB
   140002397:	add    BYTE PTR [r8],al
   14000239a:	add    BYTE PTR [rax],al
   14000239c:	mov    BYTE PTR [rcx],ah
   14000239e:	add    BYTE PTR [rax],al
   1400023a0:	or     BYTE PTR [rax],al
   1400023a2:	add    BYTE PTR [rax],al
   1400023a4:	cs rex.XB push r10
   1400023a7:	push   rsp
   1400023a8:	and    al,0x58
   1400023aa:	rex.XB
   1400023ab:	rex.B
   1400023ac:	add    BYTE PTR [r8],al
   1400023af:	add    BYTE PTR [rax+0x8000021],dl
   1400023b5:	add    BYTE PTR [rax],al
   1400023b7:	add    BYTE PTR [rsi],ch
   1400023b9:	rex.XB push r10
   1400023bb:	push   rsp
   1400023bc:	and    al,0x58
   1400023be:	rex.XB pop r10
   1400023c0:	add    BYTE PTR [rax],al
   1400023c2:	add    BYTE PTR [rax],al
   1400023c4:	cwde   
   1400023c5:	and    DWORD PTR [rax],eax
   1400023c7:	add    BYTE PTR [rax],cl
   1400023c9:	add    BYTE PTR [rax],al
   1400023cb:	add    BYTE PTR [rsi],ch
   1400023cd:	rex.XB push r10
   1400023cf:	push   rsp
   1400023d0:	and    al,0x58
   1400023d2:	rex.WB
   1400023d3:	add    BYTE PTR [r8],al
   1400023d6:	add    BYTE PTR [rax],al
   1400023d8:	movabs al,ds:0x2e00000008000021
   1400023e1:	rex.XB push r10
   1400023e3:	push   rsp
   1400023e4:	and    al,0x58
   1400023e6:	rex.WB
   1400023e7:	rex.B
   1400023e8:	add    BYTE PTR [r8],al
   1400023eb:	add    BYTE PTR [rax+0x8000021],ch
   1400023f1:	add    BYTE PTR [rax],al
   1400023f3:	add    BYTE PTR [rsi],ch
   1400023f5:	rex.XB push r10
   1400023f7:	push   rsp
   1400023f8:	and    al,0x58
   1400023fa:	rex.WB pop r9
   1400023fc:	add    BYTE PTR [rax],al
   1400023fe:	add    BYTE PTR [rax],al
   140002400:	mov    al,0x21
   140002402:	add    BYTE PTR [rax],al
   140002404:	or     BYTE PTR [rax],al
   140002406:	add    BYTE PTR [rax],al
   140002408:	cs rex.XB push r10
   14000240b:	push   rsp
   14000240c:	and    al,0x58
   14000240e:	rex.WB pop r10
   140002410:	add    BYTE PTR [rax],al
   140002412:	add    BYTE PTR [rax],al
   140002414:	mov    eax,0x20000021
   140002419:	add    BYTE PTR [rax],al
   14000241b:	add    BYTE PTR [rsi],ch
   14000241d:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   140002425:	add    BYTE PTR [rax],al
   140002427:	add    al,ah
   140002429:	and    DWORD PTR [rax],eax
   14000242b:	add    BYTE PTR [rax],dl
   14000242d:	add    DWORD PTR [rax],eax
   14000242f:	add    BYTE PTR [rsi],ch
   140002431:	jb     0x140002497
   140002433:	(bad)  
   140002434:	je     0x140002497
   140002436:	add    BYTE PTR [rax],al
   140002438:	lock and al,BYTE PTR [rax]
   14000243b:	add    BYTE PTR [rax],bl
   14000243d:	add    al,BYTE PTR [rax]
   14000243f:	add    BYTE PTR [rsi],ch
   140002441:	jb     0x1400024a7
   140002443:	(bad)  
   140002444:	je     0x1400024a7
   140002446:	and    al,0x7a
   140002448:	jp     0x1400024c4
   14000244a:	fs (bad) 
   14000244c:	add    BYTE PTR [eax],al
   14000244f:	add    BYTE PTR [rax],cl
   140002451:	and    eax,0xdc0000
   140002456:	add    BYTE PTR [rax],al
   140002458:	cs js  0x1400024bf
   14000245b:	(bad)  
   14000245c:	je     0x1400024bf
   14000245e:	add    BYTE PTR [rax],al
   140002460:	in     al,0x25
   140002462:	add    BYTE PTR [rax],al
   140002464:	enter  0x0,0x0
   140002468:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   140002471:	add    BYTE PTR [rax],al
   140002473:	add    BYTE PTR [rsi+riz*1+0x140000],ch
   14000247a:	add    BYTE PTR [rax],al
   14000247c:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   140002485:	add    BYTE PTR [rax],al
   140002487:	add    al,al
   140002489:	add    BYTE PTR es:[rax],al
   14000248c:	jo     0x14000248f
   14000248e:	add    BYTE PTR [rax],al
   140002490:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   140002499:	add    BYTE PTR [rax],al
   14000249b:	add    BYTE PTR [rax],dh
   14000249d:	sub    BYTE PTR [rax],al
   14000249f:	add    BYTE PTR [rsi+0x2e000003],ah
   1400024a5:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x362461
   1400024ad:	add    BYTE PTR [rax],al
   1400024af:	add    BYTE PTR [rax],al
   1400024b1:	xor    BYTE PTR [rax],al
   1400024b3:	add    BYTE PTR [rax],ah
   1400024b5:	add    BYTE PTR [rax],al
   1400024b7:	add    BYTE PTR [rsi],ch
   1400024b9:	fs (bad) 
   1400024bb:	je     0x14000251e
   1400024bd:	add    BYTE PTR [rax],al
   1400024bf:	add    BYTE PTR [rax],ah
   1400024c1:	xor    BYTE PTR [rax],al
   1400024c3:	add    al,bl
   1400024c5:	add    eax,0x622e0000
   1400024ca:	jae    0x14000253f
   1400024cc:	add    BYTE PTR [rax],al
   1400024ce:	add    BYTE PTR [rax],al
   1400024d0:	add    BYTE PTR [rax+0x0],al
   1400024d3:	add    ah,ah
   1400024d5:	add    BYTE PTR [rax],al
   1400024d7:	add    BYTE PTR [rsi],ch
   1400024d9:	jo     0x14000253f
   1400024db:	(bad)  
   1400024dc:	je     0x14000253f
   1400024de:	add    BYTE PTR [rax],al
   1400024e0:	add    BYTE PTR [rax+0x0],dl
   1400024e3:	add    al,al
   1400024e5:	add    eax,DWORD PTR [rax]
   1400024e7:	add    BYTE PTR [rsi],ch
   1400024e9:	jb     0x14000255e
   1400024eb:	jb     0x140002550
   1400024ed:	and    al,0x30
   1400024ef:	xor    DWORD PTR [rax],eax
   1400024f1:	add    BYTE PTR [rax],al
   1400024f3:	add    al,al
   1400024f5:	push   rbx
   1400024f6:	add    BYTE PTR [rax],al
   1400024f8:	or     BYTE PTR [rsi+0x722e0000],bh
   1400024fe:	jae    0x140002572
   140002500:	movsxd esp,DWORD PTR [rax+rsi*1]
   140002503:	xor    al,BYTE PTR [rax]
   140002505:	add    BYTE PTR [rax],al
   140002507:	add    BYTE PTR [rcx],bl
   140002509:	(bad)  
   14000250a:	or     DWORD PTR [rax],eax
   14000250c:	(bad)  
   14000250d:	in     al,0x58
   14000250f:	add    BYTE PTR [rsi],bl
   140002511:	je     0x14000256a
   140002513:	add    BYTE PTR [rsi],bl
   140002515:	xor    al,0x56
   140002517:	add    BYTE PTR [rsi],bl
   140002519:	add    DWORD PTR [rax+rax*1+0x10],edx
   14000251d:	push   rax
   14000251e:	add    BYTE PTR [rax],al
   140002520:	or     BYTE PTR [rbx],bl
   140002522:	add    BYTE PTR [rax],al
   140002524:	nop
   140002525:	add    al,BYTE PTR [rax]
   140002527:	add    BYTE PTR [rcx],al
   140002529:	add    al,0x1
   14000252b:	add    BYTE PTR [rdx+riz*2],al
   14000252e:	add    BYTE PTR [rax],al
   140002530:	or     DWORD PTR [rbx+rcx*1],ebx
   140002533:	add    BYTE PTR [rsp+rsi*2],bl
   140002536:	sbb    al,0x0
   140002538:	sbb    al,0x64
   14000253a:	sbb    eax,DWORD PTR [rax]
   14000253c:	sbb    al,0x34
   14000253e:	sbb    al,BYTE PTR [rax]
   140002540:	sbb    al,0x1
   140002542:	(bad)  
   140002543:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e03939
   140002549:	rol    BYTE PTR [rax],0x0
   14000254c:	(bad)  
   14000254d:	sbb    DWORD PTR [rax],eax
   14000254f:	add    BYTE PTR [rcx],al
   140002551:	add    BYTE PTR [rax],al
   140002553:	add    BYTE PTR [rax+0x13],dh
   140002556:	add    BYTE PTR [rax],al
   140002558:	adc    ax,0x0
   14000255c:	mov    dh,0x1b
   14000255e:	add    BYTE PTR [rax],al
   140002560:	adc    ax,0x0
   140002564:	add    BYTE PTR [rax],al
   140002566:	add    BYTE PTR [rax],al
   140002568:	add    DWORD PTR [rax],eax
   14000256a:	add    BYTE PTR [rax],al
   14000256c:	or     DWORD PTR [rcx+rax*1],eax
   14000256f:	add    BYTE PTR [rdx+riz*1],al
   140002572:	add    BYTE PTR [rax],al
   140002574:	(bad)  
   140002575:	sbb    DWORD PTR [rax],eax
   140002577:	add    BYTE PTR [rcx],al
   140002579:	add    BYTE PTR [rax],al
   14000257b:	add    BYTE PTR [rsi+rdx*1+0x16d20000],bl
   140002582:	add    BYTE PTR [rax],al
   140002584:	add    DWORD PTR [rax],eax
   140002586:	add    BYTE PTR [rax],al
   140002588:	rcl    BYTE PTR [rsi],cl
   14000258a:	add    BYTE PTR [rax],al
   14000258c:	add    DWORD PTR [rsi],eax
   14000258e:	add    al,BYTE PTR [rax]
   140002590:	(bad)  
   140002591:	xor    al,BYTE PTR [rdx]
   140002593:	xor    BYTE PTR [rcx],cl
   140002595:	or     al,BYTE PTR [rax+rax*1]
   140002598:	or     dh,BYTE PTR [rsi+rax*1]
   14000259b:	add    BYTE PTR [rdx],cl
   14000259d:	xor    al,BYTE PTR [rsi]
   14000259f:	jo     0x1400025b7
   1400025a1:	sbb    DWORD PTR [rax],eax
   1400025a3:	add    BYTE PTR [rcx],al
   1400025a5:	add    BYTE PTR [rax],al
   1400025a7:	add    BYTE PTR [rbp-0x1fffffe9],ch
   1400025ad:	(bad)  
   1400025ae:	add    BYTE PTR [rax],al
   1400025b0:	loopne 0x1400025cd
   1400025b2:	add    BYTE PTR [rax],al
   1400025b4:	loopne 0x1400025cd
   1400025b6:	add    BYTE PTR [rax],al
   1400025b8:	add    DWORD PTR [rsi],eax
   1400025ba:	add    al,BYTE PTR [rax]
   1400025bc:	(bad)  
   1400025bd:	xor    al,BYTE PTR [rdx]
   1400025bf:	push   rax
   1400025c0:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1740d25ca
   1400025c6:	or     DWORD PTR [rax],eax
   1400025c8:	or     eax,0x1500632
   1400025cd:	or     al,0x2
   1400025cf:	add    BYTE PTR [rcx+rax*1],cl
   1400025d2:	adc    DWORD PTR [rax],eax
   1400025d4:	add    BYTE PTR [rax],al
   1400025d6:	add    BYTE PTR [rax],al
   1400025d8:	add    DWORD PTR [rax],eax
   1400025da:	add    BYTE PTR [rax],al
   1400025dc:	add    DWORD PTR [rcx+rax*1],eax
   1400025df:	add    BYTE PTR [rdx+rax*2],al
   1400025e2:	add    BYTE PTR [rax],al
   1400025e4:	shl    BYTE PTR [rsi],0x0
	...
   1400025ef:	add    BYTE PTR [rax+0x28],dh
   1400025f5:	and    BYTE PTR [rax],al
   1400025f7:	add    BYTE PTR [rax],cl
   1400025f9:	(bad)  
	...
   140002602:	add    BYTE PTR [rax],al
   140002604:	int3   
   140002605:	sub    BYTE PTR [rax],al
   140002607:	add    BYTE PTR [rax+0x20],cl
   14000260a:	add    BYTE PTR [rax],al
   14000260c:	mov    eax,0x27
   140002611:	add    BYTE PTR [rax],al
   140002613:	add    BYTE PTR [rax],al
   140002615:	add    BYTE PTR [rax],al
   140002617:	add    BYTE PTR [rsi-0x7ffffd7],bl
   14000261d:	and    BYTE PTR [rax],al
   14000261f:	add    BYTE PTR [rax+0x27],dl
   140002625:	add    BYTE PTR [rax],al
   140002627:	add    BYTE PTR [rax],al
   140002629:	add    BYTE PTR [rax],al
   14000262b:	add    al,bl
   14000262d:	sub    al,BYTE PTR [rax]
   14000262f:	add    al,dl
   140002631:	and    BYTE PTR [rax],al
   140002633:	add    BYTE PTR [rax],dh
   140002635:	(bad)  
	...
   14000263e:	add    BYTE PTR [rax],al
   140002640:	cli    
   140002641:	sub    al,BYTE PTR [rax]
   140002643:	add    BYTE PTR [rax+0x20],dh
   140002646:	add    BYTE PTR [rax],al
   140002648:	sbb    BYTE PTR [rdi],ah
	...
   140002652:	add    BYTE PTR [rax],al
   140002654:	and    al,0x2b
   140002656:	add    BYTE PTR [rax],al
   140002658:	pop    rax
   140002659:	and    BYTE PTR [rax],al
   14000265b:	add    BYTE PTR [rax+0x27],ah
	...
   140002666:	add    BYTE PTR [rax],al
   140002668:	rex.WRX sub r8,QWORD PTR [rax]
   14000266b:	add    BYTE PTR [rax-0x5fffffe0],ah
   140002671:	(bad)  
	...
   14000267a:	add    BYTE PTR [rax],al
   14000267c:	jb     0x1400026a9
   14000267e:	add    BYTE PTR [rax],al
   140002680:	loopne 0x1400026a2
   140002682:	add    BYTE PTR [rax],al
   140002684:	jo     0x1400026ad
	...
   14000268e:	add    BYTE PTR [rax],al
   140002690:	xchg   esi,eax
   140002691:	sub    eax,DWORD PTR [rax]
   140002693:	add    BYTE PTR [rax-0x7ffffe0],dh
   140002699:	add    BYTE PTR es:[rax],al
	...
   1400026a4:	retf   0x2b
   1400026a7:	add    BYTE PTR [rax],bh
   1400026a9:	and    BYTE PTR [rax],al
	...
   1400026bf:	add    BYTE PTR [rdx+0x28],al
   1400026c2:	add    BYTE PTR [rax],al
   1400026c4:	add    BYTE PTR [rax],al
   1400026c6:	add    BYTE PTR [rax],al
   1400026c8:	push   rsi
   1400026c9:	sub    BYTE PTR [rax],al
   1400026cb:	add    BYTE PTR [rax],al
   1400026cd:	add    BYTE PTR [rax],al
   1400026cf:	add    BYTE PTR [rax+0x28],ch
   1400026d2:	add    BYTE PTR [rax],al
   1400026d4:	add    BYTE PTR [rax],al
   1400026d6:	add    BYTE PTR [rax],al
   1400026d8:	sub    BYTE PTR [rax],0x0
   1400026db:	add    BYTE PTR [rax],al
   1400026dd:	add    BYTE PTR [rax],al
   1400026df:	add    BYTE PTR [rsi+0x28],dl
   1400026e5:	add    BYTE PTR [rax],al
   1400026e7:	add    BYTE PTR [rax],dh
   1400026e9:	sub    BYTE PTR [rax],al
	...
   1400026f7:	add    BYTE PTR [rbx+rbp*1+0x0],bh
	...
   140002706:	add    BYTE PTR [rax],al
   140002708:	mov    esi,0x28
	...
   140002715:	add    BYTE PTR [rax],al
   140002717:	add    ah,al
   140002719:	sub    DWORD PTR [rax],eax
   14000271b:	add    BYTE PTR [rax],al
   14000271d:	add    BYTE PTR [rax],al
   14000271f:	add    BYTE PTR [rdx+rbp*1+0x0],dl
	...
   14000272e:	add    BYTE PTR [rax],al
   140002730:	adc    ch,BYTE PTR [rdx]
   140002732:	add    BYTE PTR [rax],al
   140002734:	add    BYTE PTR [rax],al
   140002736:	add    BYTE PTR [rax],al
   140002738:	cld    
   140002739:	sub    DWORD PTR [rax],eax
   14000273b:	add    BYTE PTR [rax],al
   14000273d:	add    BYTE PTR [rax],al
   14000273f:	add    BYTE PTR [rax+0x2a],dh
   140002745:	add    BYTE PTR [rax],al
   140002747:	add    ah,al
   140002749:	sub    al,BYTE PTR [rax]
   14000274b:	add    BYTE PTR [rax],al
   14000274d:	add    BYTE PTR [rax],al
   14000274f:	add    BYTE PTR [rdx+0x29],dh
	...
   14000275d:	add    BYTE PTR [rax],al
   14000275f:	add    dl,ah
   140002761:	sub    DWORD PTR [rax],eax
	...
   14000276f:	add    BYTE PTR [rdx+0x2a],dl
   140002772:	add    BYTE PTR [rax],al
   140002774:	add    BYTE PTR [rax],al
   140002776:	add    BYTE PTR [rax],al
   140002778:	data16 sub al,BYTE PTR [rax]
   14000277b:	add    BYTE PTR [rax],al
   14000277d:	add    BYTE PTR [rax],al
   14000277f:	add    BYTE PTR [rax+0x2a],al
	...
   14000278d:	add    BYTE PTR [rax],al
   14000278f:	add    BYTE PTR [rdx+0x29],ch
	...
   14000279d:	add    BYTE PTR [rax],al
   14000279f:	add    BYTE PTR [rax],ch
   1400027a1:	sub    al,BYTE PTR [rax]
   1400027a3:	add    BYTE PTR [rax],al
   1400027a5:	add    BYTE PTR [rax],al
   1400027a7:	add    BYTE PTR [rdx+0x2a],al
	...
   1400027b6:	add    BYTE PTR [rax],al
   1400027b8:	rex.RX sub DWORD PTR [rax],r8d
   1400027bb:	add    BYTE PTR [rax],al
   1400027bd:	add    BYTE PTR [rax],al
   1400027bf:	add    BYTE PTR [rdx],dh
   1400027c1:	sub    DWORD PTR [rax],eax
   1400027c3:	add    BYTE PTR [rax],al
   1400027c5:	add    BYTE PTR [rax],al
   1400027c7:	add    BYTE PTR [rax],ch
   1400027c9:	sub    DWORD PTR [rax],eax
   1400027cb:	add    BYTE PTR [rax],al
   1400027cd:	add    BYTE PTR [rax],al
   1400027cf:	add    BYTE PTR [rdx+0x29],dl
   1400027d2:	add    BYTE PTR [rax],al
   1400027d4:	add    BYTE PTR [rax],al
   1400027d6:	add    BYTE PTR [rax],al
   1400027d8:	push   0x29
   1400027da:	add    BYTE PTR [rax],al
   1400027dc:	add    BYTE PTR [rax],al
   1400027de:	add    BYTE PTR [rax],al
   1400027e0:	and    BYTE PTR [rcx],ch
   1400027e2:	add    BYTE PTR [rax],al
   1400027e4:	add    BYTE PTR [rax],al
   1400027e6:	add    BYTE PTR [rax],al
   1400027e8:	sbb    BYTE PTR [rcx],ch
   1400027ea:	add    BYTE PTR [rax],al
   1400027ec:	add    BYTE PTR [rax],al
   1400027ee:	add    BYTE PTR [rax],al
   1400027f0:	(bad)  
   1400027f1:	sub    DWORD PTR [rax],eax
   1400027f3:	add    BYTE PTR [rax],al
   1400027f5:	add    BYTE PTR [rax],al
   1400027f7:	add    ah,dh
   1400027f9:	sub    BYTE PTR [rax],al
   1400027fb:	add    BYTE PTR [rax],al
   1400027fd:	add    BYTE PTR [rax],al
   1400027ff:	add    dh,ah
   140002801:	sub    BYTE PTR [rax],al
   140002803:	add    BYTE PTR [rax],al
   140002805:	add    BYTE PTR [rax],al
   140002807:	add    BYTE PTR [rdx+0x29],cl
   14000280d:	add    BYTE PTR [rax],al
   14000280f:	add    BYTE PTR [rsi+0x29],bh
   140002812:	add    BYTE PTR [rax],al
   140002814:	add    BYTE PTR [rax],al
   140002816:	add    BYTE PTR [rax],al
   140002818:	je     0x140002843
   14000281a:	add    BYTE PTR [rax],al
   14000281c:	add    BYTE PTR [rax],al
   14000281e:	add    BYTE PTR [rax],al
   140002820:	fsubr  DWORD PTR [rax]
	...
   14000282e:	add    BYTE PTR [rax],al
   140002830:	sbb    eax,DWORD PTR [rdx]
   140002832:	rex.RXB
   140002833:	gs je  0x14000287a
   140002836:	(bad)  
   140002837:	je     0x14000289e
   140002839:	rex.RX outs dx,DWORD PTR ds:[rsi]
   14000283b:	jb     0x1400028aa
   14000283d:	(bad)  
   14000283e:	je     0x140002897
   140002840:	add    BYTE PTR [rax],al
   140002842:	outs   dx,BYTE PTR ds:[rsi]
   140002843:	add    al,BYTE PTR [rdi+0x65]
   140002846:	je     0x140002895
   140002848:	outs   dx,DWORD PTR ds:[rsi]
   140002849:	fs jne 0x1400028b8
   14000284c:	gs rex.W (bad) 
   14000284f:	outs   dx,BYTE PTR ds:[rsi]
   140002850:	fs ins BYTE PTR es:[rdi],dx
   140002852:	gs push rdi
   140002854:	add    BYTE PTR [rax],al
   140002856:	add    al,BYTE PTR [rbx]
   140002858:	rex.RXB
   140002859:	gs je  0x1400028b0
   14000285c:	imul   ebp,DWORD PTR [rbp+0x65],0x6d726f46
   140002863:	(bad)  
   140002864:	je     0x1400028bd
   140002866:	add    BYTE PTR [rax],al
   140002868:	movsxd eax,DWORD PTR [rcx]
   14000286a:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x54656d69
   140002873:	outs   dx,DWORD PTR ds:[rsi]
   140002874:	push   rbx
   140002875:	jns    0x1400028ea
   140002877:	je     0x1400028de
   140002879:	ins    DWORD PTR es:[rdi],dx
   14000287a:	push   rsp
   14000287b:	imul   ebp,DWORD PTR [rbp+0x65],0x3440000
   140002882:	rex.W
   140002883:	gs (bad) 
   140002885:	jo     0x1400028da
   140002887:	gs je  0x1400028d3
   14000288a:	outs   dx,BYTE PTR ds:[rsi]
   14000288b:	outs   dx,WORD PTR ds:[rsi]
   14000288d:	jb     0x1400028fc
   14000288f:	(bad)  
   140002890:	je     0x1400028fb
   140002892:	outs   dx,DWORD PTR ds:[rsi]
   140002893:	outs   dx,BYTE PTR ds:[rsi]
   140002894:	add    BYTE PTR [rax],al
   140002896:	(bad)
   14000289b:	gs push rsp
   14000289d:	imul   ebp,DWORD PTR [rbp+0x65],0x6f4c6f54
   1400028a4:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400028a7:	imul   r13d,DWORD PTR [rbp+r12*2+0x54],0x656d69
   1400028b0:	rex.WXB
   1400028b1:	rex.RB push r10
   1400028b3:	rex.WRX
   1400028b4:	rex.RB
   1400028b5:	xor    r14,QWORD PTR [rdx]
   1400028b8:	cs fs ins BYTE PTR es:[rdi],dx
   1400028bb:	ins    BYTE PTR es:[rdi],dx
   1400028bc:	add    BYTE PTR [rax],al
   1400028be:	add    cl,BYTE PTR [r15+r13*2+0x61]
   1400028c3:	fs push rbx
   1400028c5:	je     0x140002939
   1400028c7:	imul   ebp,DWORD PTR [rsi+0x67],0x53550057
   1400028ce:	rex.RB push r10
   1400028d0:	xor    esi,DWORD PTR [rdx]
   1400028d2:	cs fs ins BYTE PTR es:[rdi],dx
   1400028d5:	ins    BYTE PTR es:[rdi],dx
   1400028d6:	add    BYTE PTR [rax],al
   1400028d8:	push   rbp
   1400028d9:	add    BYTE PTR [rdi+0x58],bl
   1400028dc:	movsxd esi,DWORD PTR [rax+0x74]
   1400028df:	imul   r13d,DWORD PTR [rsp+r14*2+0x65],0xae0072
   1400028e8:	pop    rdi
   1400028e9:	(bad)  
   1400028ea:	ins    DWORD PTR es:[rdi],dx
   1400028eb:	jae    0x140002954
   1400028ed:	pop    rdi
   1400028ee:	gs js  0x14000295a
   1400028f1:	je     0x1400028f3
   1400028f3:	add    BYTE PTR [rbp+0x775f5f00],bl
   1400028f9:	addr32 gs je 0x14000296a
   1400028fd:	(bad)  
   1400028fe:	imul   ebp,DWORD PTR [rsi+0x61],0x736772
   140002905:	add    BYTE PTR [rsi+0x735f5f00],cl
   14000290b:	gs je  0x14000296d
   14000290e:	(bad)  
   14000290f:	jo     0x140002981
   140002911:	pop    rdi
   140002912:	je     0x14000298d
   140002914:	jo     0x14000297b
   140002916:	add    BYTE PTR [rax],al
   140002918:	xor    al,BYTE PTR [riz*2+0x746978]
   14000291f:	add    BYTE PTR [rsi],cl
   140002921:	add    DWORD PTR [rdi+0x65],ebx
   140002924:	js     0x14000298f
   140002926:	je     0x140002928
   140002928:	rol    DWORD PTR [rax],0x5f
   14000292b:	movsxd esp,DWORD PTR [rbp+0x78]
   14000292e:	imul   esi,DWORD PTR [rax+rax*1+0x0],0x5f5f0090
   140002936:	jae    0x14000299d
   140002938:	je     0x1400029af
   14000293a:	jae    0x1400029a1
   14000293c:	jb     0x1400029ab
   14000293e:	(bad)  
   14000293f:	je     0x1400029a9
   140002941:	gs jb  0x1400029b6
   140002944:	add    BYTE PTR [rax],al
   140002946:	jge    0x140002949
   140002948:	pop    rdi
   140002949:	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140002950:	ins    DWORD PTR es:[rdi],dx
   140002951:	add    BYTE PTR [rdi+0x0],dl
   140002954:	pop    rdi
   140002955:	pop    rdi
   140002956:	rex.XB pop r15
   140002958:	jae    0x1400029ca
   14000295a:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000295e:	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140002965:	ins    BYTE PTR es:[rdi],dx
   140002966:	gs jb  0x140002969
   140002969:	add    BYTE PTR [rdx+0x63775f03],al
   14000296f:	ins    DWORD PTR es:[rdi],dx
   140002970:	fs ins BYTE PTR es:[rdi],dx
   140002972:	outs   dx,BYTE PTR ds:[rsi]
   140002973:	add    BYTE PTR [rdi],ah
   140002975:	add    DWORD PTR [rdi+0x66],ebx
   140002978:	ins    DWORD PTR es:[rdi],dx
   140002979:	outs   dx,DWORD PTR ds:[rsi]
   14000297a:	fs add BYTE PTR gs:[rax],al
   14000297e:	rol    BYTE PTR [rax],cl
   140002980:	pop    rdi
   140002981:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140002984:	ins    DWORD PTR es:[rdi],dx
   140002985:	outs   dx,DWORD PTR ds:[rsi]
   140002986:	fs add BYTE PTR gs:[rax],al
   14000298a:	(bad)  
   14000298b:	add    BYTE PTR [rdi],bh
   14000298d:	je     0x1400029f4
   14000298f:	jb     0x1400029fe
   140002991:	imul   ebp,DWORD PTR [rsi+0x61],0x40406574
   140002998:	pop    rcx
   140002999:	pop    r8
   14000299b:	pop    rax
   14000299c:	pop    rdx
   14000299d:	add    BYTE PTR [rbp+0x73],ch
   1400029a0:	jbe    0x140002a05
   1400029a2:	jb     0x140002a18
   1400029a4:	cs fs ins BYTE PTR es:[rdi],dx
   1400029a7:	ins    BYTE PTR es:[rdi],dx
   1400029a8:	add    BYTE PTR [rax],al
   1400029aa:	sub    eax,0x656c5300
   1400029af:	gs jo  0x1400029b2
   1400029b2:	and    BYTE PTR [rax],al
   1400029b4:	rex.RXB
   1400029b5:	gs je  0x140002a0b
   1400029b8:	je     0x140002a1b
   1400029ba:	jb     0x140002a30
   1400029bc:	jne    0x140002a2e
   1400029be:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400029c0:	outs   dx,WORD PTR ds:[rsi]
   1400029c2:	push   rdi
   1400029c3:	add    BYTE PTR [rdi],cl
   1400029c5:	add    BYTE PTR [rbx+0x65],dl
   1400029c8:	je     0x140002a1f
   1400029ca:	outs   dx,BYTE PTR ds:[rsi]
   1400029cb:	push   0x6c646e61
   1400029d0:	gs fs rex.RB js 0x140002a38
   1400029d5:	gs jo  0x140002a4c
   1400029d8:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400029df:	gs jb  0x1400029e2
   1400029e2:	add    BYTE PTR [rax],al
   1400029e4:	push   rcx
   1400029e5:	jne    0x140002a4c
   1400029e7:	jb     0x140002a62
   1400029e9:	push   rax
   1400029ea:	gs jb  0x140002a53
   1400029ed:	outs   dx,DWORD PTR ds:[rsi]
   1400029ee:	jb     0x140002a5d
   1400029f0:	(bad)  
   1400029f1:	outs   dx,BYTE PTR ds:[rsi]
   1400029f2:	movsxd esp,DWORD PTR [rbp+0x43]
   1400029f5:	outs   dx,DWORD PTR ds:[rsi]
   1400029f6:	jne    0x140002a66
   1400029f8:	je     0x140002a5f
   1400029fa:	jb     0x1400029fc
   1400029fc:	or     eax,0x74654700
   140002a01:	rex.XB jne 0x140002a76
   140002a04:	jb     0x140002a6b
   140002a06:	outs   dx,BYTE PTR ds:[rsi]
   140002a07:	je     0x140002a59
   140002a09:	jb     0x140002a7a
   140002a0b:	movsxd esp,DWORD PTR [rbp+0x73]
   140002a0e:	jae    0x140002a59
   140002a10:	add    BYTE PTR fs:[rcx],dl
   140002a13:	add    BYTE PTR [rdi+0x65],al
   140002a16:	je     0x140002a5b
   140002a18:	jne    0x140002a8c
   140002a1a:	jb     0x140002a81
   140002a1c:	outs   dx,BYTE PTR ds:[rsi]
   140002a1d:	je     0x140002a73
   140002a1f:	push   0x64616572
   140002a24:	rex.WB
   140002a25:	add    BYTE PTR fs:[rax],al
   140002a28:	adc    al,0x0
   140002a2a:	rex.RXB
   140002a2b:	gs je  0x140002a81
   140002a2e:	jns    0x140002aa3
   140002a30:	je     0x140002a97
   140002a32:	ins    DWORD PTR es:[rdi],dx
   140002a33:	push   rsp
   140002a34:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140002a3b:	ins    BYTE PTR es:[rdi],dx
   140002a3c:	gs push rsp
   140002a3e:	imul   ebp,DWORD PTR [rbp+0x65],0x47001800
   140002a45:	gs je  0x140002a9c
   140002a48:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   140002a4f:	je     0x140002a51
   140002a51:	add    BYTE PTR [rdx],al
   140002a53:	add    BYTE PTR [rdx+0x74],dl
   140002a56:	ins    BYTE PTR es:[rdi],dx
   140002a57:	rex.XB (bad) 
   140002a59:	jo     0x140002acf
   140002a5b:	jne    0x140002acf
   140002a5d:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140002a60:	outs   dx,BYTE PTR ds:[rsi]
   140002a61:	je     0x140002ac8
   140002a63:	js     0x140002ad9
   140002a65:	add    BYTE PTR [rcx],cl
   140002a67:	add    BYTE PTR [rdx+0x74],dl
   140002a6a:	ins    BYTE PTR es:[rdi],dx
   140002a6b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140002a6d:	outs   dx,DWORD PTR ds:[rsi]
   140002a6e:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140002a72:	jne    0x140002ae2
   140002a74:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140002a78:	outs   dx,BYTE PTR ds:[rsi]
   140002a79:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140002a7b:	je     0x140002aef
   140002a7d:	jns    0x140002a7f
   140002a7f:	add    BYTE PTR [rdi],cl
   140002a81:	add    BYTE PTR [rdx+0x74],dl
   140002a84:	ins    BYTE PTR es:[rdi],dx
   140002a85:	push   rsi
   140002a86:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140002a8d:	outs   dx,BYTE PTR ds:[rsi]
   140002a8e:	ja     0x140002af9
   140002a90:	outs   dx,BYTE PTR ds:[rsi]
   140002a91:	add    BYTE PTR fs:[rax],al
   140002a94:	adc    DWORD PTR [rax],eax
   140002a96:	push   rbp
   140002a97:	outs   dx,BYTE PTR ds:[rsi]
   140002a98:	push   0x6c646e61
   140002a9d:	gs fs rex.RB js 0x140002b05
   140002aa2:	gs jo  0x140002b19
   140002aa5:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140002aac:	gs jb  0x140002aaf
   140002aaf:	add    BYTE PTR [rax+rax*1],cl
   140002ab2:	rex.RXB
   140002ab3:	gs je  0x140002af9
   140002ab6:	jne    0x140002b2a
   140002ab8:	jb     0x140002b1f
   140002aba:	outs   dx,BYTE PTR ds:[rsi]
   140002abb:	je     0x140002b0d
   140002abd:	jb     0x140002b2e
   140002abf:	movsxd esp,DWORD PTR [rbp+0x73]
   140002ac2:	jae    0x140002ac4
   140002ac4:	rex.WXB add BYTE PTR [r13+r12*2+0x72],dl
   140002ac9:	ins    DWORD PTR es:[rdi],dx
   140002aca:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140002ad1:	outs   dx,DWORD PTR ds:[rsi]
   140002ad2:	movsxd esp,DWORD PTR [rbp+0x73]
   140002ad5:	jae    0x140002ad7
   140002ad7:	add    BYTE PTR [rcx+0x70],ah
   140002ada:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72d9e51
   140002ae4:	outs   dx,DWORD PTR ds:[rsi]
   140002ae5:	jb     0x140002b4c
   140002ae7:	sub    eax,0x636e7973
   140002aec:	push   0x2d316c2d
   140002af1:	xor    ch,BYTE PTR [rip+0x6c642e30]        # 0x1ac645927
   140002af7:	ins    BYTE PTR es:[rdi],dx
   140002af8:	add    BYTE PTR [rax],al
   140002afa:	(bad)  
   140002afb:	jo     0x140002b66
   140002afd:	sub    eax,0x772d736d
   140002b02:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140002b09:	sub    eax,0x636f7270
   140002b0e:	gs jae 0x140002b84
   140002b11:	je     0x140002b7b
   140002b13:	jb     0x140002b7a
   140002b15:	(bad)  
   140002b16:	fs jae 0x140002b46
   140002b19:	ins    BYTE PTR es:[rdi],dx
   140002b1a:	xor    DWORD PTR [rip+0x2e322d31],ebp        # 0x16e325851
   140002b20:	fs ins BYTE PTR es:[rdi],dx
   140002b22:	ins    BYTE PTR es:[rdi],dx
   140002b23:	add    BYTE PTR [rcx+0x70],ah
   140002b26:	imul   ebp,DWORD PTR [rip+0x772d736d],0x632d6e69        # 0x1b72d9e9d
   140002b30:	outs   dx,DWORD PTR ds:[rsi]
   140002b31:	jb     0x140002b98
   140002b33:	sub    eax,0x6f727265
   140002b38:	jb     0x140002ba2
   140002b3a:	(bad)  
   140002b3b:	outs   dx,BYTE PTR ds:[rsi]
   140002b3c:	fs ins BYTE PTR es:[rdi],dx
   140002b3e:	imul   ebp,DWORD PTR [rsi+0x67],0x2d316c2d
   140002b45:	xor    DWORD PTR [rip+0x6c642e31],ebp        # 0x1ac64597c
   140002b4b:	ins    BYTE PTR es:[rdi],dx
   140002b4c:	add    BYTE PTR [rax],al
   140002b4e:	(bad)  
   140002b4f:	jo     0x140002bba
   140002b51:	sub    eax,0x772d736d
   140002b56:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140002b5d:	sub    eax,0x666f7270
   140002b62:	imul   ebp,DWORD PTR [rbp+riz*2+0x2d],0x312d316c
   140002b6a:	sub    eax,0x6c642e30
   140002b6f:	ins    BYTE PTR es:[rdi],dx
   140002b70:	add    BYTE PTR [rax],al
   140002b72:	(bad)  
   140002b73:	jo     0x140002bde
   140002b75:	sub    eax,0x772d736d
   140002b7a:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140002b81:	sub    eax,0x69737973
   140002b86:	outs   dx,BYTE PTR ds:[rsi]
   140002b87:	outs   dx,WORD PTR ds:[rsi]
   140002b89:	sub    eax,0x322d316c
   140002b8e:	sub    eax,0x6c642e31
   140002b93:	ins    BYTE PTR es:[rdi],dx
   140002b94:	add    BYTE PTR [rax],al
   140002b96:	(bad)  
   140002b97:	jo     0x140002c02
   140002b99:	sub    eax,0x772d736d
   140002b9e:	imul   ebp,DWORD PTR [rsi+0x2d],0x65726f63
   140002ba5:	sub    eax,0x736c7472
   140002baa:	jne    0x140002c1c
   140002bac:	jo     0x140002c1d
   140002bae:	jb     0x140002c24
   140002bb0:	sub    eax,0x322d316c
   140002bb5:	sub    eax,0x6c642e30
   140002bba:	ins    BYTE PTR es:[rdi],dx
   140002bbb:	add    BYTE PTR [rsi+0x65685301],ch
   140002bc1:	ins    BYTE PTR es:[rdi],dx
   140002bc2:	ins    BYTE PTR es:[rdi],dx
   140002bc3:	rex.B (bad) 
   140002bc5:	outs   dx,DWORD PTR ds:[rsi]
   140002bc6:	jne    0x140002c3c
   140002bc8:	push   rdi
   140002bc9:	add    BYTE PTR [rbx+0x48],dl
   140002bcc:	rex.RB
   140002bcd:	rex.WR
   140002bce:	xor    r14,QWORD PTR [rdx]
   140002bd1:	cs fs ins BYTE PTR es:[rdi],dx
   140002bd4:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140003000 <.data>:
   140003000:	add    DWORD PTR [rax],eax
   140003002:	add    BYTE PTR [rax],al
   140003004:	add    BYTE PTR [rax],al
   140003006:	add    BYTE PTR [rax],al
   140003008:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   14000300e:	add    BYTE PTR [rax],al
   140003010:	int    0x5d
   140003012:	and    dl,dl
   140003014:	data16 (bad) 
   140003016:	(bad)  
   140003017:	inc    DWORD PTR [rax]
	...

Disassembly of section .pdata:

0000000140004000 <.pdata>:
   140004000:	or     BYTE PTR [rax],dl
   140004002:	add    BYTE PTR [rax],al
   140004004:	std    
   140004005:	adc    DWORD PTR [rax],eax
   140004007:	add    BYTE PTR [rax],cl
   140004009:	and    eax,0x12100000
   14000400e:	add    BYTE PTR [rax],al
   140004010:	fist   WORD PTR [rdx]
   140004012:	add    BYTE PTR [rax],al
   140004014:	fsub   QWORD PTR [rip+0x12f00000]        # 0x152f0401a
   14000401a:	add    BYTE PTR [rax],al
   14000401c:	cmp    DWORD PTR [rbx],edx
   14000401e:	add    BYTE PTR [rax],al
   140004020:	sub    BYTE PTR [rip+0x13400000],ah        # 0x153404026
   140004026:	add    BYTE PTR [rax],al
   140004028:	mov    cl,0x15
   14000402a:	add    BYTE PTR [rax],al
   14000402c:	xor    BYTE PTR [rip+0x15c00000],ah        # 0x155c04032
   140004032:	add    BYTE PTR [rax],al
   140004034:	rcl    BYTE PTR [rip+0x25dc0000],cl        # 0x165dc403a
   14000403a:	add    BYTE PTR [rax],al
   14000403c:	lock adc eax,0x160e0000
   140004042:	add    BYTE PTR [rax],al
   140004044:	push   0x20000025
   140004049:	(bad)  
   14000404a:	add    BYTE PTR [rax],al
   14000404c:	pop    rcx
   14000404d:	(bad)  
   14000404e:	add    BYTE PTR [rax],al
   140004050:	fsub   QWORD PTR [rip+0x16600000]        # 0x156604056
   140004056:	add    BYTE PTR [rax],al
   140004058:	js     0x140004070
   14000405a:	add    BYTE PTR [rax],al
   14000405c:	fsub   QWORD PTR [rip+0x168c0000]        # 0x1568c4062
   140004062:	add    BYTE PTR [rax],al
   140004064:	loopne 0x14000407c
   140004066:	add    BYTE PTR [rax],al
   140004068:	ins    BYTE PTR es:[rdi],dx
   140004069:	and    eax,0x16e80000
   14000406e:	add    BYTE PTR [rax],al
   140004070:	sub    eax,0x8c000017
   140004075:	and    eax,0x17a00000
   14000407a:	add    BYTE PTR [rax],al
   14000407c:	in     eax,dx
   14000407d:	(bad)  
   14000407e:	add    BYTE PTR [rax],al
   140004080:	xchg   esp,eax
   140004081:	and    eax,0x18340000
   140004086:	add    BYTE PTR [rax],al
   140004088:	add    al,0x19
   14000408a:	add    BYTE PTR [rax],al
   14000408c:	shl    BYTE PTR [rip+0x193c0000],0x0        # 0x1593c4093
   140004093:	add    BYTE PTR [rax+0x19],dh
   140004096:	add    BYTE PTR [rax],al
   140004098:	mov    WORD PTR [rip+0x19800000],fs        # 0x15980409e
   14000409e:	add    BYTE PTR [rax],al
   1400040a0:	icebp  
   1400040a1:	sbb    al,BYTE PTR [rax]
   1400040a3:	add    ah,cl
   1400040a5:	and    eax,0x1b080000
   1400040aa:	add    BYTE PTR [rax],al
   1400040ac:	and    eax,0xdc00001b
   1400040b1:	and    eax,0x1b2c0000
   1400040b6:	add    BYTE PTR [rax],al
   1400040b8:	(bad)  
   1400040b9:	sbb    eax,DWORD PTR [rax]
   1400040bb:	add    BYTE PTR [rbp+riz*1+0x1ba00000],cl
   1400040c2:	add    BYTE PTR [rax],al
   1400040c4:	movabs ds:0xb6000025d800001b,al
   1400040cd:	sbb    eax,DWORD PTR [rax]
   1400040cf:	add    ah,dl
   1400040d1:	sbb    eax,DWORD PTR [rax]
   1400040d3:	add    BYTE PTR [rax-0x1fffffdb],bh
   1400040d9:	sbb    eax,DWORD PTR [rax]
   1400040db:	add    BYTE PTR [rax],al
   1400040dd:	sbb    al,0x0
   1400040df:	.byte 0x0
   1400040e0:	.byte 0xb8
   1400040e1:	.byte 0x25
	...

Disassembly of section .rsrc:

0000000140005000 <.rsrc>:
	...
   14000500c:	add    DWORD PTR [rax],eax
   14000500e:	add    al,0x0
   140005010:	mov    eax,0x38800003
   140005015:	add    BYTE PTR [rax],al
   140005017:	add    BYTE PTR [rbx],0x0
   14000501a:	add    BYTE PTR [rax],al
   14000501c:	push   rax
   14000501d:	add    BYTE PTR [rax],al
   14000501f:	or     BYTE PTR [rsi],0x0
   140005022:	add    BYTE PTR [rax],al
   140005024:	enter  0x0,0x80
   140005028:	adc    BYTE PTR [rax],al
   14000502a:	add    BYTE PTR [rax],al
   14000502c:	loopne 0x14000502e
   14000502e:	add    BYTE PTR [rax+0x18],al
   140005034:	clc    
   140005035:	add    BYTE PTR [rax],al
   140005037:	add    BYTE PTR [rax],0x0
	...
   140005046:	add    DWORD PTR [rax],eax
   140005048:	add    DWORD PTR [rax],eax
   14000504a:	add    BYTE PTR [rax],al
   14000504c:	adc    BYTE PTR [rcx],al
   14000504e:	add    BYTE PTR [rax+0x0],al
	...
   14000505c:	add    BYTE PTR [rax],al
   14000505e:	or     eax,0x100
   140005063:	add    BYTE PTR [rax],ch
   140005065:	add    DWORD PTR [rax],eax
   140005067:	add    BYTE PTR [rdx],0x0
   14000506a:	add    BYTE PTR [rax],al
   14000506c:	rex add DWORD PTR [rax],eax
   14000506f:	add    BYTE PTR [rbx],0x0
   140005072:	add    BYTE PTR [rax],al
   140005074:	pop    rax
   140005075:	add    DWORD PTR [rax],eax
   140005077:	add    BYTE PTR [rax+rax*1],0x0
   14000507b:	add    BYTE PTR [rax+0x1],dh
   14000507e:	add    BYTE PTR [rax+0x5],al
   140005084:	mov    BYTE PTR [rcx],al
   140005086:	add    BYTE PTR [rax+0x6],al
   14000508c:	movabs al,ds:0xb800000007800001
   140005095:	add    DWORD PTR [rax],eax
   140005097:	or     BYTE PTR [rax],0x0
   14000509a:	add    BYTE PTR [rax],al
   14000509c:	rol    BYTE PTR [rcx],1
   14000509e:	add    BYTE PTR [rax+0x9],al
   1400050a4:	call   0x14a8050aa
   1400050a9:	add    BYTE PTR [rax],al
   1400050ab:	add    BYTE PTR [rax],al
   1400050ad:	add    al,BYTE PTR [rax]
   1400050af:	or     BYTE PTR [rbx],0x0
   1400050b2:	add    BYTE PTR [rax],al
   1400050b4:	sbb    BYTE PTR [rdx],al
   1400050b6:	add    BYTE PTR [rax+0xc],al
   1400050bc:	xor    BYTE PTR [rdx],al
   1400050be:	add    BYTE PTR [rax+0xd],al
   1400050c4:	rex.W add al,BYTE PTR [rax]
   1400050c7:	add    BYTE PTR [rax],0x0
	...
   1400050d6:	add    DWORD PTR [rax],eax
   1400050d8:	add    DWORD PTR [rax],eax
   1400050da:	add    BYTE PTR [rax],al
   1400050dc:	(bad)  
   1400050dd:	add    al,BYTE PTR [rax]
   1400050df:	add    BYTE PTR [rax],0x0
	...
   1400050ee:	add    DWORD PTR [rax],eax
   1400050f0:	add    DWORD PTR [rax],eax
   1400050f2:	add    BYTE PTR [rax],al
   1400050f4:	js     0x1400050f8
   1400050f6:	add    BYTE PTR [rax+0x0],al
	...
   140005104:	add    BYTE PTR [rax],al
   140005106:	add    DWORD PTR [rax],eax
   140005108:	add    DWORD PTR [rax],eax
   14000510a:	add    BYTE PTR [rax],al
   14000510c:	nop
   14000510d:	add    al,BYTE PTR [rax]
   14000510f:	add    BYTE PTR [rax],0x0
	...
   14000511e:	add    DWORD PTR [rax],eax
   140005120:	or     DWORD PTR [rax+rax*1],eax
   140005123:	add    BYTE PTR [rax+0x2],ch
	...
   140005135:	add    BYTE PTR [rcx],al
   140005137:	add    BYTE PTR [rcx],cl
   140005139:	add    al,0x0
   14000513b:	add    BYTE PTR [rax+0x2],bh
	...
   14000514d:	add    BYTE PTR [rcx],al
   14000514f:	add    BYTE PTR [rcx],cl
   140005151:	add    al,0x0
   140005153:	add    al,cl
   140005155:	add    al,BYTE PTR [rax]
	...
   140005163:	add    BYTE PTR [rax],al
   140005165:	add    BYTE PTR [rcx],al
   140005167:	add    BYTE PTR [rcx],cl
   140005169:	add    al,0x0
   14000516b:	add    al,bl
   14000516d:	add    al,BYTE PTR [rax]
	...
   14000517b:	add    BYTE PTR [rax],al
   14000517d:	add    BYTE PTR [rcx],al
   14000517f:	add    BYTE PTR [rcx],cl
   140005181:	add    al,0x0
   140005183:	add    al,ch
   140005185:	add    al,BYTE PTR [rax]
	...
   140005193:	add    BYTE PTR [rax],al
   140005195:	add    BYTE PTR [rcx],al
   140005197:	add    BYTE PTR [rcx],cl
   140005199:	add    al,0x0
   14000519b:	add    al,bh
   14000519d:	add    al,BYTE PTR [rax]
	...
   1400051ab:	add    BYTE PTR [rax],al
   1400051ad:	add    BYTE PTR [rcx],al
   1400051af:	add    BYTE PTR [rcx],cl
   1400051b1:	add    al,0x0
   1400051b3:	add    BYTE PTR [rax],cl
   1400051b5:	add    eax,DWORD PTR [rax]
	...
   1400051c3:	add    BYTE PTR [rax],al
   1400051c5:	add    BYTE PTR [rcx],al
   1400051c7:	add    BYTE PTR [rcx],cl
   1400051c9:	add    al,0x0
   1400051cb:	add    BYTE PTR [rax],bl
   1400051cd:	add    eax,DWORD PTR [rax]
	...
   1400051db:	add    BYTE PTR [rax],al
   1400051dd:	add    BYTE PTR [rcx],al
   1400051df:	add    BYTE PTR [rcx],cl
   1400051e1:	add    al,0x0
   1400051e3:	add    BYTE PTR [rax],ch
   1400051e5:	add    eax,DWORD PTR [rax]
	...
   1400051f3:	add    BYTE PTR [rax],al
   1400051f5:	add    BYTE PTR [rcx],al
   1400051f7:	add    BYTE PTR [rcx],cl
   1400051f9:	add    al,0x0
   1400051fb:	add    BYTE PTR [rax],bh
   1400051fd:	add    eax,DWORD PTR [rax]
	...
   14000520b:	add    BYTE PTR [rax],al
   14000520d:	add    BYTE PTR [rcx],al
   14000520f:	add    BYTE PTR [rcx],cl
   140005211:	add    al,0x0
   140005213:	add    BYTE PTR [rax+0x3],cl
	...
   140005226:	add    DWORD PTR [rax],eax
   140005228:	or     DWORD PTR [rax+rax*1],eax
   14000522b:	add    BYTE PTR [rax+0x3],bl
	...
   14000523e:	add    DWORD PTR [rax],eax
   140005240:	or     DWORD PTR [rax+rax*1],eax
   140005243:	add    BYTE PTR [rax+0x3],ch
	...
   140005256:	add    DWORD PTR [rax],eax
   140005258:	or     DWORD PTR [rax+rax*1],eax
   14000525b:	add    BYTE PTR [rax+0x3],bh
	...
   14000526e:	add    DWORD PTR [rax],eax
   140005270:	or     DWORD PTR [rax+rax*1],eax
   140005273:	add    BYTE PTR [rax+0x3],cl
	...
   140005285:	add    BYTE PTR [rcx],al
   140005287:	add    BYTE PTR [rcx],cl
   140005289:	add    al,0x0
   14000528b:	add    BYTE PTR [rax+0x3],bl
	...
   14000529d:	add    BYTE PTR [rcx],al
   14000529f:	add    BYTE PTR [rcx],cl
   1400052a1:	add    al,0x0
   1400052a3:	add    BYTE PTR [rax-0x7fffffd],ch
   1400052a9:	adc    BYTE PTR [rcx],al
   1400052ab:	add    al,dl
	...
   1400052b5:	add    BYTE PTR [rax],al
   1400052b7:	add    BYTE PTR [rax+0x58],bl
   1400052ba:	add    BYTE PTR [rax],al
   1400052bc:	push   0x6
   1400052c1:	add    BYTE PTR [rax],al
   1400052c3:	add    BYTE PTR [rax],al
   1400052c5:	add    BYTE PTR [rax],al
   1400052c7:	add    al,al
   1400052c9:	pop    rsi
   1400052ca:	add    BYTE PTR [rax],al
   1400052cc:	call   0x1400052d3
   1400052d1:	add    BYTE PTR [rax],al
   1400052d3:	add    BYTE PTR [rax],al
   1400052d5:	add    BYTE PTR [rax],al
   1400052d7:	add    BYTE PTR [rax-0x17ffff9f],ch
   1400052dd:	add    DWORD PTR [rax],eax
	...
   1400052e7:	add    BYTE PTR [rax+0x28000063],dl
   1400052ed:	add    DWORD PTR [rax],eax
	...
   1400052f7:	add    BYTE PTR [rax-0x57ffff9c],bh
   1400052fd:	(bad)  
	...
   140005306:	add    BYTE PTR [rax],al
   140005308:	(bad)  
   140005309:	jae    0x14000530b
   14000530b:	add    BYTE PTR [rax+0x8],ch
   140005311:	add    BYTE PTR [rax],al
   140005313:	add    BYTE PTR [rax],al
   140005315:	add    BYTE PTR [rax],al
   140005317:	add    BYTE PTR [rax],cl
   140005319:	jl     0x14000531b
   14000531b:	add    al,cl
   14000531d:	(bad)  
	...
   140005326:	add    BYTE PTR [rax],al
   140005328:	rol    BYTE PTR [rdx+0x5680000],1
	...
   140005336:	add    BYTE PTR [rax],al
   140005338:	cmp    BYTE PTR [rax+0x402e0000],cl
	...
   140005346:	add    BYTE PTR [rax],al
   140005348:	push   0xffffffffa80000c8
   14000534d:	and    eax,0x0
   140005352:	add    BYTE PTR [rax],al
   140005354:	add    BYTE PTR [rax],al
   140005356:	add    BYTE PTR [rax],al
   140005358:	adc    dh,ch
   14000535a:	add    BYTE PTR [rax],al
   14000535c:	test   al,0x10
	...
   140005366:	add    BYTE PTR [rax],al
   140005368:	mov    eax,0x880000fe
   14000536d:	or     DWORD PTR [rax],eax
	...
   140005377:	add    BYTE PTR [rax+0x8],al
   14000537a:	add    DWORD PTR [rax],eax
   14000537c:	push   0x4
   140005381:	add    BYTE PTR [rax],al
   140005383:	add    BYTE PTR [rax],al
   140005385:	add    BYTE PTR [rax],al
   140005387:	add    BYTE PTR [rax-0x43fffef4],ch
	...
   140005395:	add    BYTE PTR [rax],al
   140005397:	add    BYTE PTR [rax+0xd],ch
   14000539a:	add    DWORD PTR [rax],eax
   14000539c:	mov    WORD PTR [rbx],es
	...
   1400053a6:	add    BYTE PTR [rax],al
   1400053a8:	rcl    BYTE PTR [rbx+0x0],0x0
   1400053ac:	xchg   ebx,eax
   1400053ad:	add    al,0x0
	...
   1400053b7:	add    BYTE PTR [rbx],al
   1400053b9:	add    BYTE PTR [rbp+0x0],cl
   1400053bc:	push   rbp
   1400053bd:	add    BYTE PTR [rcx+0x0],cl
   1400053c0:	cmp    al,0x3f
   1400053c2:	js     0x140005431
   1400053c4:	ins    BYTE PTR es:[rdi],dx
   1400053c5:	and    BYTE PTR [rsi+0x65],dh
   1400053c8:	jb     0x14000543d
   1400053ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   1400053d1:	xor    BYTE PTR [rdx],ah
   1400053d3:	and    BYTE PTR [rbp+0x6e],ah
   1400053d6:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400053d9:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   1400053e0:	rex.RX sub eax,0x73202238
   1400053e6:	je     0x140005449
   1400053e8:	outs   dx,BYTE PTR ds:[rsi]
   1400053e9:	fs (bad) 
   1400053eb:	ins    BYTE PTR es:[rdi],dx
   1400053ec:	outs   dx,DWORD PTR ds:[rsi]
   1400053ed:	outs   dx,BYTE PTR ds:[rsi]
   1400053ee:	gs cmp eax,0x73657922
   1400053f4:	and    bh,BYTE PTR [rdi]
   1400053f6:	ds or  eax,0x2d213c0a
   1400053fc:	sub    eax,0x706f4320
   140005401:	jns    0x140005475
   140005403:	imul   esp,DWORD PTR [rdi+0x68],0x63282074
   14000540a:	sub    DWORD PTR [rax],esp
   14000540c:	imul   r12,QWORD PTR [r11+0x72],0x666f736f
   140005414:	je     0x140005436
   140005416:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140005418:	jb     0x14000548a
   14000541a:	outs   dx,DWORD PTR ds:[rsi]
   14000541b:	jb     0x14000547e
   14000541d:	je     0x140005488
   14000541f:	outs   dx,DWORD PTR ds:[rsi]
   140005420:	outs   dx,BYTE PTR ds:[rsi]
   140005421:	and    BYTE PTR [rip+0xa0d3e2d],ch        # 0x14a0d9254
   140005427:	cmp    al,0x61
   140005429:	jae    0x14000549e
   14000542b:	gs ins DWORD PTR es:[rdi],dx
   14000542d:	(bad)  
   14000542e:	ins    BYTE PTR es:[rdi],dx
   14000542f:	jns    0x140005451
   140005431:	js     0x1400054a0
   140005433:	ins    BYTE PTR es:[rdi],dx
   140005434:	outs   dx,BYTE PTR ds:[rsi]
   140005435:	jae    0x140005474
   140005437:	and    dh,BYTE PTR [rbp+0x72]
   14000543a:	outs   dx,BYTE PTR ds:[rsi]
   14000543b:	cmp    dh,BYTE PTR [rbx+0x63]
   14000543e:	push   0x73616d65
   140005443:	sub    eax,0x7263696d
   140005448:	outs   dx,DWORD PTR ds:[rsi]
   140005449:	jae    0x1400054ba
   14000544b:	data16 je 0x14000547b
   14000544e:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140005451:	cmp    ah,BYTE PTR [rcx+0x73]
   140005454:	ins    DWORD PTR es:[rdi],dx
   140005455:	cs jbe 0x140005489
   140005458:	and    ah,BYTE PTR [rax]
   14000545a:	ins    DWORD PTR es:[rdi],dx
   14000545b:	(bad)  
   14000545c:	outs   dx,BYTE PTR ds:[rsi]
   14000545d:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140005464:	jb     0x1400054d9
   140005466:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14000546d:	xor    BYTE PTR [rdx],ah
   14000546f:	ds or  eax,0x73613c0a
   140005475:	jae    0x1400054dc
   140005477:	ins    DWORD PTR es:[rdi],dx
   140005478:	(bad)  
   140005479:	ins    BYTE PTR es:[rdi],dx
   14000547a:	jns    0x1400054c5
   14000547c:	fs outs dx,BYTE PTR gs:[rsi]
   14000547f:	je     0x1400054ea
   140005481:	je     0x1400054fc
   140005483:	or     eax,0x2020200a
   140005488:	and    BYTE PTR [rsi+0x61],ch
   14000548b:	ins    DWORD PTR es:[rdi],dx
   14000548c:	gs cmp eax,0x63694d22
   140005492:	jb     0x140005503
   140005494:	jae    0x140005505
   140005496:	data16 je 0x1400054c7
   140005499:	push   rdi
   14000549a:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400054a1:	push   rbx
   1400054a2:	push   0x2e6c6c65
   1400054a7:	ja     0x140005512
   1400054a9:	outs   dx,BYTE PTR ds:[rsi]
   1400054aa:	jbe    0x140005511
   1400054ac:	jb     0x1400054d0
   1400054ae:	or     eax,0x2020200a
   1400054b3:	and    BYTE PTR [rax+0x72],dh
   1400054b6:	outs   dx,DWORD PTR ds:[rsi]
   1400054b7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400054ba:	jae    0x14000552b
   1400054bc:	jb     0x1400054ff
   1400054be:	jb     0x140005523
   1400054c0:	push   0x63657469
   1400054c5:	je     0x14000553c
   1400054c7:	jb     0x14000552e
   1400054c9:	cmp    eax,0x646d6122
   1400054ce:	ss xor al,0x22
   1400054d1:	or     eax,0x2020200a
   1400054d6:	and    BYTE PTR [rsi+0x65],dh
   1400054d9:	jb     0x14000554e
   1400054db:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e35223d
   1400054e2:	xor    DWORD PTR [rsi],ebp
   1400054e4:	xor    BYTE PTR [rsi],ch
   1400054e6:	xor    BYTE PTR [rdx],ah
   1400054e8:	or     eax,0x2020200a
   1400054ed:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   1400054f1:	gs cmp eax,0x6e697722
   1400054f7:	xor    esi,DWORD PTR [rdx]
   1400054f9:	and    ch,BYTE PTR [rdi]
   1400054fb:	ds or  eax,0x65643c0a
   140005501:	jae    0x140005566
   140005503:	jb     0x14000556e
   140005505:	jo     0x14000557b
   140005507:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e69573e
   14000550e:	outs   dx,DWORD PTR fs:[rsi]
   140005510:	ja     0x140005585
   140005512:	and    BYTE PTR [rbx+0x68],dl
   140005515:	gs ins BYTE PTR es:[rdi],dx
   140005517:	ins    BYTE PTR es:[rdi],dx
   140005518:	cmp    al,0x2f
   14000551a:	fs gs jae 0x140005581
   14000551e:	jb     0x140005589
   140005520:	jo     0x140005596
   140005522:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c0a0d3e
   140005529:	fs gs jo 0x140005592
   14000552d:	outs   dx,BYTE PTR ds:[rsi]
   14000552e:	fs outs dx,BYTE PTR gs:[rsi]
   140005531:	movsxd edi,DWORD PTR [rcx+0x3e]
   140005534:	or     eax,0x2020200a
   140005539:	and    BYTE PTR [rsp+riz*2],bh
   14000553c:	gs jo  0x1400055a4
   14000553f:	outs   dx,BYTE PTR ds:[rsi]
   140005540:	fs outs dx,BYTE PTR gs:[rsi]
   140005543:	je     0x140005586
   140005545:	jae    0x1400055ba
   140005547:	gs ins DWORD PTR es:[rdi],dx
   140005549:	(bad)  
   14000554a:	ins    BYTE PTR es:[rdi],dx
   14000554b:	jns    0x14000558b
   14000554d:	or     eax,0x2020200a
   140005552:	and    BYTE PTR [rax],ah
   140005554:	and    BYTE PTR [rax],ah
   140005556:	and    BYTE PTR [rcx+riz*2],bh
   140005559:	jae    0x1400055ce
   14000555b:	gs ins DWORD PTR es:[rdi],dx
   14000555d:	(bad)  
   14000555e:	ins    BYTE PTR es:[rdi],dx
   14000555f:	jns    0x1400055aa
   140005561:	fs outs dx,BYTE PTR gs:[rsi]
   140005564:	je     0x1400055cf
   140005566:	je     0x1400055e1
   140005568:	or     eax,0x2020200a
   14000556d:	and    BYTE PTR [rax],ah
   14000556f:	and    BYTE PTR [rax],ah
   140005571:	and    BYTE PTR [rax],ah
   140005573:	and    BYTE PTR [rax],ah
   140005575:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140005579:	gs cmp eax,0x6e697722
   14000557f:	xor    esi,DWORD PTR [rdx]
   140005581:	and    cl,BYTE PTR [rip+0x2020200a]        # 0x160207591
   140005587:	and    BYTE PTR [rax],ah
   140005589:	and    BYTE PTR [rax],ah
   14000558b:	and    BYTE PTR [rax],ah
   14000558d:	and    BYTE PTR [rax],ah
   14000558f:	and    BYTE PTR [rsi+0x61],ch
   140005592:	ins    DWORD PTR es:[rdi],dx
   140005593:	gs cmp eax,0x63694d22
   140005599:	jb     0x14000560a
   14000559b:	jae    0x14000560c
   14000559d:	data16 je 0x1400055ce
   1400055a0:	push   rdi
   1400055a1:	imul   ebp,DWORD PTR [rsi+0x64],0x2e73776f
   1400055a8:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400055aa:	ins    DWORD PTR es:[rdi],dx
   1400055ab:	ins    DWORD PTR es:[rdi],dx
   1400055ac:	outs   dx,DWORD PTR ds:[rsi]
   1400055ad:	outs   dx,BYTE PTR ds:[rsi]
   1400055ae:	sub    eax,0x746e6f43
   1400055b3:	jb     0x140005624
   1400055b5:	ins    BYTE PTR es:[rdi],dx
   1400055b6:	jae    0x1400055da
   1400055b8:	or     eax,0x2020200a
   1400055bd:	and    BYTE PTR [rax],ah
   1400055bf:	and    BYTE PTR [rax],ah
   1400055c1:	and    BYTE PTR [rax],ah
   1400055c3:	and    BYTE PTR [rax],ah
   1400055c5:	and    BYTE PTR [rsi+0x65],dh
   1400055c8:	jb     0x14000563d
   1400055ca:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e36223d
   1400055d1:	xor    BYTE PTR [rsi],ch
   1400055d3:	xor    BYTE PTR [rsi],ch
   1400055d5:	xor    BYTE PTR [rdx],ah
   1400055d7:	or     eax,0x2020200a
   1400055dc:	and    BYTE PTR [rax],ah
   1400055de:	and    BYTE PTR [rax],ah
   1400055e0:	and    BYTE PTR [rax],ah
   1400055e2:	and    BYTE PTR [rax],ah
   1400055e4:	and    BYTE PTR [rax+0x72],dh
   1400055e7:	outs   dx,DWORD PTR ds:[rsi]
   1400055e8:	movsxd esp,DWORD PTR [rbp+0x73]
   1400055eb:	jae    0x14000565c
   1400055ed:	jb     0x140005630
   1400055ef:	jb     0x140005654
   1400055f1:	push   0x63657469
   1400055f6:	je     0x14000566d
   1400055f8:	jb     0x14000565f
   1400055fa:	cmp    eax,0xd222a22
   1400055ff:	or     ah,BYTE PTR [rax]
   140005601:	and    BYTE PTR [rax],ah
   140005603:	and    BYTE PTR [rax],ah
   140005605:	and    BYTE PTR [rax],ah
   140005607:	and    BYTE PTR [rax],ah
   140005609:	and    BYTE PTR [rax],ah
   14000560b:	and    BYTE PTR [rax+0x75],dh
   14000560e:	(bad)  
   14000560f:	ins    BYTE PTR es:[rdi],dx
   140005610:	imul   esp,DWORD PTR [rbx+0x4b],0x6f547965
   140005617:	imul   esp,DWORD PTR [rbp+0x6e],0x3d
   14000561b:	and    dh,BYTE PTR [rsi]
   14000561d:	xor    eax,0x36623539
   140005622:	xor    al,0x31
   140005624:	xor    al,0x34
   140005626:	movsxd esp,DWORD PTR [rbx+0x66]
   140005629:	xor    DWORD PTR [rsi+riz*2+0x22],esp
   14000562d:	or     eax,0x2020200a
   140005632:	and    BYTE PTR [rax],ah
   140005634:	and    BYTE PTR [rax],ah
   140005636:	and    BYTE PTR [rax],ah
   140005638:	and    BYTE PTR [rax],ah
   14000563a:	and    BYTE PTR [rcx+riz*2+0x6e],ch
   14000563e:	addr32 jne 0x1400056a2
   140005641:	addr32 gs cmp eax,0xd222a22
   140005648:	or     ah,BYTE PTR [rax]
   14000564a:	and    BYTE PTR [rax],ah
   14000564c:	and    BYTE PTR [rax],ah
   14000564e:	and    BYTE PTR [rax],ah
   140005650:	and    BYTE PTR [rdi],ch
   140005652:	ds or  eax,0x2020200a
   140005658:	and    BYTE PTR [rdi+rbp*1],bh
   14000565b:	fs gs jo 0x1400056c4
   14000565f:	outs   dx,BYTE PTR ds:[rsi]
   140005660:	fs outs dx,BYTE PTR gs:[rsi]
   140005663:	je     0x1400056a6
   140005665:	jae    0x1400056da
   140005667:	gs ins DWORD PTR es:[rdi],dx
   140005669:	(bad)  
   14000566a:	ins    BYTE PTR es:[rdi],dx
   14000566b:	jns    0x1400056ab
   14000566d:	or     eax,0x642f3c0a
   140005672:	gs jo  0x1400056da
   140005675:	outs   dx,BYTE PTR ds:[rsi]
   140005676:	fs outs dx,BYTE PTR gs:[rsi]
   140005679:	movsxd edi,DWORD PTR [rcx+0x3e]
   14000567c:	or     eax,0x72743c0a
   140005681:	jne    0x1400056f6
   140005683:	je     0x1400056ce
   140005685:	outs   dx,BYTE PTR ds:[rsi]
   140005686:	outs   dx,WORD PTR ds:[rsi]
   140005688:	and    BYTE PTR [rax+0x6d],bh
   14000568b:	ins    BYTE PTR es:[rdi],dx
   14000568c:	outs   dx,BYTE PTR ds:[rsi]
   14000568d:	jae    0x1400056cc
   14000568f:	and    dh,BYTE PTR [rbp+0x72]
   140005692:	outs   dx,BYTE PTR ds:[rsi]
   140005693:	cmp    dh,BYTE PTR [rbx+0x63]
   140005696:	push   0x73616d65
   14000569b:	sub    eax,0x7263696d
   1400056a0:	outs   dx,DWORD PTR ds:[rsi]
   1400056a1:	jae    0x140005712
   1400056a3:	data16 je 0x1400056d3
   1400056a6:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400056a9:	cmp    ah,BYTE PTR [rcx+0x73]
   1400056ac:	ins    DWORD PTR es:[rdi],dx
   1400056ad:	cs jbe 0x1400056e3
   1400056b0:	and    bh,BYTE PTR [rsi]
   1400056b2:	or     eax,0x2020200a
   1400056b7:	and    BYTE PTR [rbx+rsi*2],bh
   1400056ba:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   1400056be:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   1400056c6:	and    BYTE PTR [rax],ah
   1400056c8:	and    BYTE PTR [rax],ah
   1400056ca:	and    BYTE PTR [rax],ah
   1400056cc:	cmp    al,0x72
   1400056ce:	gs jno 0x140005746
   1400056d1:	gs jae 0x140005748
   1400056d4:	gs fs push rax
   1400056d7:	jb     0x140005742
   1400056d9:	jbe    0x140005744
   1400056db:	ins    BYTE PTR es:[rdi],dx
   1400056dc:	gs addr32 gs jae 0x14000571f
   1400056e1:	or     eax,0x2020200a
   1400056e6:	and    BYTE PTR [rax],ah
   1400056e8:	and    BYTE PTR [rax],ah
   1400056ea:	and    BYTE PTR [rax],ah
   1400056ec:	and    BYTE PTR [rax],ah
   1400056ee:	and    BYTE PTR [rdx+rsi*2],bh
   1400056f1:	gs jno 0x140005769
   1400056f4:	gs jae 0x14000576b
   1400056f7:	gs fs rex.RB js 0x140005761
   1400056fc:	movsxd esi,DWORD PTR [rbp+0x74]
   1400056ff:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140005706:	ins    BYTE PTR es:[rdi],dx
   140005707:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14000570b:	gs ins BYTE PTR es:[rdi],dx
   14000570d:	cmp    eax,0x49736122
   140005712:	outs   dx,BYTE PTR ds:[rsi]
   140005713:	jbe    0x140005784
   140005715:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140005719:	and    BYTE PTR [rbp+0x69],dh
   14000571c:	movsxd esp,DWORD PTR [r11+0x65]
   140005720:	jae    0x140005795
   140005722:	cmp    eax,0x6c616622
   140005727:	jae    0x14000578e
   140005729:	and    ch,BYTE PTR [rdi]
   14000572b:	ds or  eax,0x2020200a
   140005731:	and    BYTE PTR [rax],ah
   140005733:	and    BYTE PTR [rax],ah
   140005735:	and    BYTE PTR [rdi+rbp*1],bh
   140005738:	jb     0x14000579f
   14000573a:	jno    0x1400057b1
   14000573c:	gs jae 0x1400057b3
   14000573f:	gs fs push rax
   140005742:	jb     0x1400057ad
   140005744:	jbe    0x1400057af
   140005746:	ins    BYTE PTR es:[rdi],dx
   140005747:	gs addr32 gs jae 0x14000578a
   14000574c:	or     eax,0x2020200a
   140005751:	and    BYTE PTR [rdi+rbp*1],bh
   140005754:	jae    0x1400057bb
   140005756:	movsxd esi,DWORD PTR [rbp+0x72]
   140005759:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x2f3c0a0d
   140005761:	je     0x1400057d5
   140005763:	jne    0x1400057d8
   140005765:	je     0x1400057b0
   140005767:	outs   dx,BYTE PTR ds:[rsi]
   140005768:	outs   dx,WORD PTR ds:[rsi]
   14000576a:	ds or  eax,0x70613c0a
   140005770:	jo     0x1400057de
   140005772:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140005779:	and    BYTE PTR [rax+0x6d],bh
   14000577c:	ins    BYTE PTR es:[rdi],dx
   14000577d:	outs   dx,BYTE PTR ds:[rsi]
   14000577e:	jae    0x1400057bd
   140005780:	and    dh,BYTE PTR [rbp+0x72]
   140005783:	outs   dx,BYTE PTR ds:[rsi]
   140005784:	cmp    dh,BYTE PTR [rbx+0x63]
   140005787:	push   0x73616d65
   14000578c:	sub    eax,0x7263696d
   140005791:	outs   dx,DWORD PTR ds:[rsi]
   140005792:	jae    0x140005803
   140005794:	data16 je 0x1400057c4
   140005797:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000579a:	cmp    ah,BYTE PTR [rcx+0x73]
   14000579d:	ins    DWORD PTR es:[rdi],dx
   14000579e:	cs jbe 0x1400057d4
   1400057a1:	and    bh,BYTE PTR [rsi]
   1400057a3:	or     eax,0x2020200a
   1400057a8:	and    BYTE PTR [rdi+rsi*2],bh
   1400057ab:	imul   ebp,DWORD PTR [rsi+0x64],0x5373776f
   1400057b2:	gs je  0x140005829
   1400057b5:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   1400057bc:	and    BYTE PTR [rax],ah
   1400057be:	and    BYTE PTR [rax],ah
   1400057c0:	and    BYTE PTR [rax],ah
   1400057c2:	and    BYTE PTR [rax],ah
   1400057c4:	cmp    al,0x64
   1400057c6:	jo     0x140005831
   1400057c8:	rex.B ja 0x14000582c
   1400057cb:	jb     0x140005832
   1400057cd:	and    BYTE PTR [rax],ah
   1400057cf:	js     0x14000583e
   1400057d1:	ins    BYTE PTR es:[rdi],dx
   1400057d2:	outs   dx,BYTE PTR ds:[rsi]
   1400057d3:	jae    0x140005812
   1400057d5:	and    ch,BYTE PTR [rax+0x74]
   1400057d8:	je     0x14000584a
   1400057da:	cmp    ch,BYTE PTR [rdi]
   1400057dc:	(bad)  
   1400057dd:	jae    0x140005842
   1400057df:	push   0x73616d65
   1400057e4:	cs ins DWORD PTR es:[rdi],dx
   1400057e6:	imul   esp,DWORD PTR [rbx+0x72],0x666f736f
   1400057ed:	je     0x14000581d
   1400057ef:	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400057f2:	(bad)  
   1400057f3:	push   rbx
   1400057f4:	rex.WRB
   1400057f5:	rex.WB (bad) 
   1400057f7:	xor    dh,BYTE PTR [rax]
   1400057f9:	xor    BYTE PTR [rip+0x6e69572f],dh        # 0x1ae69af2e
   1400057ff:	outs   dx,DWORD PTR fs:[rsi]
   140005801:	ja     0x140005876
   140005803:	push   rbx
   140005804:	gs je  0x14000587b
   140005807:	imul   ebp,DWORD PTR [rsi+0x67],0x743e2273
   14000580e:	jb     0x140005885
   140005810:	gs cmp al,0x2f
   140005813:	fs jo  0x14000587f
   140005816:	rex.B ja 0x14000587a
   140005819:	jb     0x140005880
   14000581b:	ds or  eax,0x2020200a
   140005821:	and    BYTE PTR [rdi+rbp*1],bh
   140005824:	ja     0x14000588f
   140005826:	outs   dx,BYTE PTR ds:[rsi]
   140005827:	outs   dx,DWORD PTR fs:[rsi]
   140005829:	ja     0x14000589e
   14000582b:	push   rbx
   14000582c:	gs je  0x1400058a3
   14000582f:	imul   ebp,DWORD PTR [rsi+0x67],0xa0d3e73
   140005836:	cmp    al,0x2f
   140005838:	(bad)  
   140005839:	jo     0x1400058ab
   14000583b:	ins    BYTE PTR es:[rdi],dx
   14000583c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140005843:	ds or  eax,0x612f3c0a
   140005849:	jae    0x1400058be
   14000584b:	gs ins DWORD PTR es:[rdi],dx
   14000584d:	(bad)  
   14000584e:	ins    BYTE PTR es:[rdi],dx
   14000584f:	jns    0x14000588f
   140005851:	or     eax,0xa
   140005856:	add    BYTE PTR [rax],al
   140005858:	sub    BYTE PTR [rax],al
   14000585a:	add    BYTE PTR [rax],al
   14000585c:	xor    BYTE PTR [rax],al
   14000585e:	add    BYTE PTR [rax],al
   140005860:	(bad)  
   140005861:	add    BYTE PTR [rax],al
   140005863:	add    BYTE PTR [rcx],al
   140005865:	add    BYTE PTR [rax+rax*1],al
   140005868:	add    BYTE PTR [rax],al
   14000586a:	add    BYTE PTR [rax],al
   14000586c:	add    BYTE PTR [rax+rax*1],0x0
	...
   140005884:	add    BYTE PTR [rax],al
   140005886:	add    BYTE PTR [rax],0x0
   140005889:	add    BYTE PTR [rax],0x0
   14000588c:	add    BYTE PTR [rax+0x800080],al
   140005892:	add    BYTE PTR [rax],al
   140005894:	add    BYTE PTR [rax],0x80
   140005897:	add    BYTE PTR [rax-0x7fffff80],al
   14000589d:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400058a4:	add    BYTE PTR [rax],al
   1400058a6:	inc    DWORD PTR [rax]
   1400058a8:	add    bh,bh
   1400058aa:	add    BYTE PTR [rax],al
   1400058ac:	add    bh,bh
   1400058ae:	inc    DWORD PTR [rax]
   1400058b0:	inc    DWORD PTR [rax]
   1400058b2:	add    BYTE PTR [rax],al
   1400058b4:	inc    DWORD PTR [rax]
   1400058b6:	inc    DWORD PTR [rax]
   1400058b8:	(bad)  
   1400058b9:	inc    DWORD PTR [rax]
   1400058bb:	add    bh,bh
   1400058bd:	(bad)  
   1400058be:	inc    DWORD PTR [rax]
	...
   140005968:	add    BYTE PTR [rdi+0x77],dh
   14000596b:	ja     0x1400059e4
   14000596d:	ja     0x1400059e6
   14000596f:	ja     0x1400059e8
   140005971:	ja     0x1400059ea
   140005973:	ja     0x1400059ec
   140005975:	ja     0x1400059ee
   140005977:	ja     0x1400059f0
   140005979:	ja     0x1400059f2
   14000597b:	ja     0x1400059f4
   14000597d:	ja     0x14000597f
   14000597f:	add    BYTE PTR [rdi],al
   140005981:	mov    BYTE PTR [rax-0x77777778],cl
   140005987:	mov    BYTE PTR [rax-0x77777778],cl
   14000598d:	mov    BYTE PTR [rax-0x77777778],cl
   140005993:	mov    BYTE PTR [rax+0x7007088],cl
   140005999:	(bad)  
   14000599a:	(bad)  
   14000599b:	(bad)  
   14000599c:	(bad)  
   14000599d:	(bad)  
   14000599e:	(bad)  
   14000599f:	(bad)  
   1400059a0:	(bad)  
   1400059a1:	(bad)  
   1400059a2:	(bad)  
   1400059a3:	(bad)  
   1400059a4:	(bad)  
   1400059a5:	(bad)  
   1400059a6:	(bad)  
   1400059a7:	(bad)  
   1400059a8:	(bad)  
   1400059a9:	(bad)  
   1400059aa:	(bad)  
   1400059ab:	(bad)  
   1400059ac:	(bad)  
   1400059ad:	clc    
   1400059ae:	jo     0x1400059b0
   1400059b0:	(bad)  
   1400059b1:	(bad)  
   1400059b2:	(bad)  
   1400059b3:	(bad)  
   1400059b4:	(bad)  
   1400059b5:	(bad)  
   1400059b6:	(bad)  
   1400059b7:	(bad)  
   1400059b8:	(bad)  
   1400059b9:	(bad)  
   1400059ba:	(bad)  
   1400059bb:	(bad)  
   1400059bc:	(bad)  
   1400059bd:	(bad)  
   1400059be:	(bad)  
   1400059bf:	(bad)  
   1400059c0:	clc    
   1400059c1:	(bad)  
   1400059c2:	dec    DWORD PTR [rdi+0x70f8ff]
   1400059c8:	(bad)  
   1400059c9:	(bad)  
   1400059ca:	(bad)  
   1400059cb:	clc    
   1400059cc:	clc    
   1400059cd:	clc    
   1400059ce:	clc    
   1400059cf:	clc    
   1400059d0:	clc    
   1400059d1:	clc    
   1400059d2:	clc    
   1400059d3:	clc    
   1400059d4:	clc    
   1400059d5:	clc    
   1400059d6:	clc    
   1400059d7:	clc    
   1400059d8:	(bad)  
   1400059d9:	clc    
   1400059da:	clc    
   1400059db:	dec    DWORD PTR [rdi+0x70070f8]
   1400059e1:	(bad)  
   1400059e2:	clc    
   1400059e3:	mov    BYTE PTR [rax-0x77777778],cl
   1400059e9:	mov    BYTE PTR [rax-0x7078],cl
   1400059ef:	dec    DWORD PTR [rdi-0x7007001]
   1400059f5:	clc    
   1400059f6:	jo     0x1400059f8
   1400059f8:	(bad)  
   1400059f9:	(bad)  
   1400059fa:	clc    
   1400059fb:	addr32 jbe 0x140005a75
   1400059fe:	ja     0x140005a77
   140005a00:	ja     0x140005a79
   140005a02:	ja     0x140005a7c
   140005a04:	(bad)  
   140005a05:	clc    
   140005a06:	mov    BYTE PTR [rdi-0x70007078],cl
   140005a0c:	(bad)  
   140005a0d:	clc    
   140005a0e:	jo     0x140005a10
   140005a10:	(bad)  
   140005a11:	(bad)  
   140005a12:	clc    
   140005a13:	jbe    0x14000599c
   140005a15:	out    0x67,eax
   140005a17:	out    0xa8,eax
   140005a19:	addr32 test al,0x68
   140005a1c:	(bad)  
   140005a1d:	(bad)  
   140005a1e:	(bad)  
   140005a1f:	(bad)  
   140005a20:	(bad)  
   140005a21:	dec    DWORD PTR [rdi+0x70f8ffff]
   140005a27:	add    BYTE PTR [rdi],al
   140005a29:	(bad)  
   140005a2a:	clc    
   140005a2b:	jbe    0x140005aa3
   140005a2d:	ja     0x1400059d7
   140005a2f:	addr32 jbe 0x1400059bc
   140005a32:	xchg   BYTE PTR [rax-0x77700771],cl
   140005a38:	clc    
   140005a39:	(bad)  
   140005a3a:	dec    DWORD PTR [rdi+0x70f88f]
   140005a40:	(bad)  
   140005a41:	(bad)  
   140005a42:	clc    
   140005a43:	jle    0x140005abc
   140005a45:	test   al,0x67
   140005a47:	jp     0x1400059d3
   140005a49:	ja     0x140005ac5
   140005a4b:	js     0x140005a4c
   140005a4d:	(bad)  
   140005a4e:	(bad)  
   140005a4f:	(bad)  
   140005a50:	(bad)  
   140005a51:	dec    DWORD PTR [rdi+0x70f8f8ff]
   140005a57:	add    BYTE PTR [rdi],al
   140005a59:	(bad)  
   140005a5a:	clc    
   140005a5b:	addr32 jbe 0x1400059e4
   140005a5e:	ja     0x140005a47
   140005a60:	ja     0x140005a49
   140005a62:	js     0x140005acc
   140005a64:	(bad)  
   140005a65:	clc    
   140005a66:	vpmacssdqh ymm7,ymm14,ymm8,ymm15
   140005a6c:	(bad)  
   140005a6d:	clc    
   140005a6e:	jo     0x140005a70
   140005a70:	(bad)  
   140005a71:	(bad)  
   140005a72:	clc    
   140005a73:	jbe    0x140005af3
   140005a75:	ja     0x140005a5e
   140005a77:	ja     0x140005ae0
   140005a79:	jp     0x140005af1
   140005a7b:	mov    BYTE PTR [rdi-0x1],cl
   140005a81:	(bad)  
   140005a82:	(bad)  
   140005a83:	dec    DWORD PTR [rdi+0x70070f8]
   140005a89:	(bad)  
   140005a8a:	clc    
   140005a8b:	jle    0x140005b04
   140005a8d:	addr32 jp 0x140005b06
   140005a90:	mov    al,BYTE PTR [rsi-0x7008776]
   140005a96:	(bad)  
   140005a97:	(bad)
   140005a9b:	(bad)  
   140005a9c:	(bad)  
   140005a9d:	clc    
   140005a9e:	jo     0x140005aa0
   140005aa0:	(bad)  
   140005aa1:	(bad)  
   140005aa2:	clc    
   140005aa3:	addr32 addr32 jp 0x140005b1e
   140005aa7:	out    0x76,eax
   140005aa9:	ja     0x140005b13
   140005aab:	push   0xffffffffffffffff
   140005ab0:	(bad)  
   140005ab1:	(bad)  
   140005ab2:	(bad)  
   140005ab3:	clc    
   140005ab4:	clc    
   140005ab5:	clc    
   140005ab6:	jo     0x140005ab8
   140005ab8:	(bad)  
   140005ab9:	(bad)  
   140005aba:	clc    
   140005abb:	ja     0x140005b33
   140005abd:	jle    0x140005b35
   140005abf:	ja     0x140005a69
   140005ac1:	push   0xffffffffffff78a7
   140005ac6:	(bad)  
   140005ac7:	(bad)  
   140005ac8:	(bad)  
   140005ac9:	(bad)  
   140005aca:	(bad)  
   140005acb:	js     0x140005b45
   140005acd:	clc    
   140005ace:	jo     0x140005ad0
   140005ad0:	(bad)  
   140005ad1:	(bad)  
   140005ad2:	clc    
   140005ad3:	data16 jle 0x140005b4d
   140005ad6:	addr32 jbe 0x140005a5f
   140005ad9:	jbe    0x140005a61
   140005adb:	mov    BYTE PTR [rdi-0x1],cl
   140005ae1:	(bad)  
   140005ae2:	(bad)  
   140005ae3:	js     0x140005a8d
   140005ae5:	clc    
   140005ae6:	jo     0x140005ae8
   140005ae8:	(bad)  
   140005ae9:	(bad)  
   140005aea:	clc    
   140005aeb:	jle    0x140005b64
   140005aed:	addr32 jle 0x140005b67
   140005af0:	addr32 jle 0x140005b6a
   140005af3:	test   al,0xff
   140005af5:	clc    
   140005af6:	mov    BYTE PTR [rax+0x78ffff88],cl
   140005afc:	js     0x140005af6
   140005afe:	jo     0x140005b00
   140005b00:	(bad)  
   140005b01:	(bad)  
   140005b02:	clc    
   140005b03:	addr32 addr32 addr32 addr32 addr32 out 0xa7,eax
   140005b0a:	jbe    0x140005a94
   140005b0c:	(bad)  
   140005b0d:	(bad)  
   140005b0e:	(bad)  
   140005b0f:	(bad)  
   140005b10:	(bad)  
   140005b11:	(bad)  
   140005b12:	(bad)  
   140005b13:	jle    0x140005b8c
   140005b15:	clc    
   140005b16:	jo     0x140005b18
   140005b18:	(bad)  
   140005b19:	(bad)  
   140005b1a:	clc    
   140005b1b:	xchg   BYTE PTR [rdi+0x68],dh
   140005b1e:	addr32 jbe 0x140005b98
   140005b21:	jbe    0x140005b9a
   140005b23:	push   0xffffffff8f8ff8ff
   140005b28:	mov    BYTE PTR [rdi-0x7888701],cl
   140005b2e:	jo     0x140005b30
   140005b30:	(bad)  
   140005b31:	(bad)  
   140005b32:	clc    
   140005b33:	js     0x140005b9c
   140005b35:	addr32 push 0x6768e767
   140005b3b:	call   0x140005b3f
   140005b40:	(bad)  
   140005b41:	(bad)  
   140005b42:	(bad)  
   140005b43:	jle    0x140005bbd
   140005b45:	clc    
   140005b46:	jo     0x140005b48
   140005b48:	(bad)  
   140005b49:	(bad)  
   140005b4a:	clc    
   140005b4b:	jle    0x140005bc4
   140005b4d:	out    0x67,eax
   140005b4f:	out    0x76,eax
   140005b51:	jbe    0x140005ad9
   140005b53:	js     0x140005ae4
   140005b55:	clc    
   140005b56:	clc    
   140005b57:	(bad)  
   140005b58:	(bad)  
   140005b59:	(bad)  
   140005b5a:	push   QWORD PTR [rdi-0x7a]
   140005b5d:	clc    
   140005b5e:	jo     0x140005b60
   140005b60:	(bad)  
   140005b61:	(bad)  
   140005b62:	clc    
   140005b63:	ja     0x140005aeb
   140005b65:	xchg   DWORD PTR [rdi+0x76],esp
   140005b68:	ja     0x140005b51
   140005b6a:	addr32 js 0x140005b6c
   140005b6d:	(bad)  
   140005b6e:	(bad)  
   140005b6f:	(bad)  
   140005b70:	(bad)  
   140005b71:	(bad)  
   140005b72:	(bad)  
   140005b73:	jle    0x140005bed
   140005b75:	clc    
   140005b76:	jo     0x140005b78
   140005b78:	(bad)  
   140005b79:	(bad)  
   140005b7a:	clc    
   140005b7b:	out    0xc8,eax
   140005b7d:	push   0x6767777e
   140005b82:	jp     0x140005b6c
   140005b84:	(bad)  
   140005b85:	clc    
   140005b86:	vpmacssdqh xmm7,xmm0,xmm7,xmm15
   140005b8c:	xchg   al,bh
   140005b8e:	jo     0x140005b90
   140005b90:	(bad)  
   140005b91:	(bad)  
   140005b92:	clc    
   140005b93:	ja     0x140005b1b
   140005b95:	xchg   BYTE PTR [rdi+0x7e],dh
   140005b98:	js     0x140005c18
   140005b9a:	js     0x140005c14
   140005b9c:	(bad)  
   140005b9d:	(bad)  
   140005b9e:	(bad)  
   140005b9f:	(bad)  
   140005ba0:	(bad)  
   140005ba1:	(bad)  
   140005ba2:	(bad)  
   140005ba3:	jle    0x140005c1d
   140005ba5:	clc    
   140005ba6:	jo     0x140005ba8
   140005ba8:	(bad)  
   140005ba9:	(bad)  
   140005baa:	clc    
   140005bab:	(bad)  
   140005bac:	out    0xc8,eax
   140005bae:	push   0x76777667
   140005bb3:	mov    bh,bh
   140005bb5:	clc    
   140005bb6:	clc    
   140005bb7:	(bad)  
   140005bbb:	ja     0x140005c33
   140005bbd:	push   QWORD PTR [rax+0x0]
   140005bc0:	(bad)  
   140005bc1:	(bad)  
   140005bc2:	clc    
   140005bc3:	jbe    0x140005c3c
   140005bc5:	jbe    0x140005b53
   140005bc7:	jle    0x140005c41
   140005bc9:	outs   dx,BYTE PTR ds:[rsi]
   140005bca:	ja     0x140005c34
   140005bcc:	(bad)  
   140005bcd:	(bad)  
   140005bce:	(bad)  
   140005bcf:	(bad)  
   140005bd0:	(bad)  
   140005bd1:	(bad)  
   140005bd2:	(bad)  
   140005bd3:	jle    0x140005c4d
   140005bd5:	clc    
   140005bd6:	jo     0x140005bd8
   140005bd8:	(bad)  
   140005bd9:	(bad)  
   140005bda:	clc    
   140005bdb:	push   0x77767ec6
   140005be0:	addr32 ja 0x140005c4b
   140005be3:	outs   dx,DWORD PTR ds:[rsi]
   140005be4:	(bad)  
   140005be5:	clc    
   140005be6:	clc    
   140005be7:	(bad)  
   140005beb:	ja     0x140005c6b
   140005bed:	clc    
   140005bee:	jo     0x140005bf0
   140005bf0:	(bad)  
   140005bf1:	(bad)  
   140005bf2:	clc    
   140005bf3:	addr32 push 0xffffffffe76767c7
   140005bf9:	addr32 out 0x78,eax
   140005bfc:	(bad)  
   140005bfd:	(bad)  
   140005bfe:	(bad)  
   140005bff:	(bad)  
   140005c00:	(bad)  
   140005c01:	(bad)  
   140005c02:	jmp    FWORD PTR [rax-0x39]
   140005c05:	push   QWORD PTR [rax+0x0]
   140005c08:	(bad)  
   140005c09:	(bad)  
   140005c0a:	clc    
   140005c0b:	mov    BYTE PTR [rax-0x77777778],cl
   140005c11:	mov    BYTE PTR [rax-0x70070078],cl
   140005c17:	mov    al,bh
   140005c19:	(bad)  
   140005c1a:	push   QWORD PTR [rdi-0x7a]
   140005c1d:	clc    
   140005c1e:	jo     0x140005c20
   140005c20:	(bad)  
   140005c21:	(bad)  
   140005c22:	(bad)  
   140005c23:	(bad)  
   140005c24:	(bad)  
   140005c25:	(bad)  
   140005c26:	(bad)  
   140005c27:	(bad)  
   140005c28:	(bad)  
   140005c29:	(bad)  
   140005c2a:	(bad)  
   140005c2b:	(bad)  
   140005c2c:	(bad)  
   140005c2d:	(bad)  
   140005c2e:	(bad)  
   140005c2f:	(bad)  
   140005c30:	(bad)  
   140005c31:	(bad)  
   140005c32:	(bad)  
   140005c33:	(bad)  
   140005c34:	(bad)  
   140005c35:	clc    
   140005c36:	jo     0x140005c38
   140005c38:	(bad)  
   140005c39:	(bad)  
   140005c3a:	(bad)  
   140005c3b:	(bad)  
   140005c3c:	(bad)  
   140005c3d:	(bad)  
   140005c3e:	(bad)  
   140005c3f:	(bad)  
   140005c40:	(bad)  
   140005c41:	(bad)  
   140005c42:	(bad)  
   140005c43:	(bad)  
   140005c44:	(bad)  
   140005c45:	(bad)  
   140005c46:	(bad)  
   140005c47:	(bad)  
   140005c48:	(bad)  
   140005c49:	(bad)  
   140005c4a:	(bad)  
   140005c4b:	(bad)  
   140005c4c:	(bad)  
   140005c4d:	push   QWORD PTR [rax+0x0]
   140005c50:	(bad)  
   140005c51:	(bad)  
   140005c52:	(bad)  
   140005c53:	(bad)  
   140005c54:	(bad)  
   140005c55:	(bad)  
   140005c56:	(bad)  
   140005c57:	(bad)  
   140005c58:	(bad)  
   140005c59:	(bad)  
   140005c5a:	(bad)  
   140005c5b:	(bad)  
   140005c5c:	(bad)  
   140005c5d:	(bad)  
   140005c5e:	(bad)  
   140005c5f:	(bad)  
   140005c60:	(bad)  
   140005c61:	(bad)  
   140005c62:	(bad)  
   140005c63:	(bad)  
   140005c64:	(bad)  
   140005c65:	clc    
   140005c66:	jo     0x140005c68
   140005c68:	(bad)  
   140005c69:	mov    BYTE PTR [rax-0x77777778],cl
   140005c6f:	mov    BYTE PTR [rax-0x77777778],cl
   140005c75:	mov    BYTE PTR [rax-0x77777778],cl
   140005c7b:	mov    BYTE PTR [rax+0x7007088],cl
   140005c81:	clc    
   140005c82:	mov    BYTE PTR [rax-0x77777778],cl
   140005c88:	mov    BYTE PTR [rax-0x77777778],cl
   140005c8e:	mov    BYTE PTR [rax-0x77777778],cl
   140005c94:	mov    al,bh
   140005c96:	jo     0x140005c98
   140005c98:	(bad)  
   140005c99:	(bad)  
   140005c9a:	(bad)  
   140005c9b:	(bad)  
   140005c9c:	(bad)  
   140005c9d:	clc    
   140005c9e:	dec    DWORD PTR [rdi-0x7070708]
   140005ca4:	clc    
   140005ca5:	dec    DWORD PTR [rdi-0x8800808]
   140005cab:	jg     0x140005c34
   140005cad:	js     0x140005d1f
   140005caf:	add    BYTE PTR [rax],al
   140005cb1:	ja     0x140005d2a
   140005cb3:	ja     0x140005d2c
   140005cb5:	ja     0x140005d2e
   140005cb7:	ja     0x140005d30
   140005cb9:	ja     0x140005d32
   140005cbb:	ja     0x140005d34
   140005cbd:	ja     0x140005d36
   140005cbf:	ja     0x140005d38
   140005cc1:	ja     0x140005d3a
   140005cc3:	ja     0x140005d3c
   140005cc5:	ja     0x140005cc7
	...
   140005d3f:	add    bh,bh
   140005d41:	(bad)  
   140005d42:	(bad)  
   140005d43:	(bad)  
   140005d44:	(bad)  
   140005d45:	inc    DWORD PTR [rax]
   140005d47:	add    bh,bh
   140005d49:	(bad)  
   140005d4a:	(bad)  
   140005d4b:	(bad)  
   140005d4c:	(bad)  
   140005d4d:	inc    DWORD PTR [rax]
   140005d4f:	add    bh,bh
   140005d51:	(bad)  
   140005d52:	(bad)  
   140005d53:	(bad)  
   140005d54:	(bad)  
   140005d55:	inc    DWORD PTR [rax]
   140005d57:	add    bh,bh
   140005d59:	(bad)  
   140005d5a:	(bad)  
   140005d5b:	(bad)  
   140005d5c:	(bad)  
   140005d5d:	inc    DWORD PTR [rax]
   140005d5f:	add    bh,bh
   140005d61:	(bad)  
   140005d62:	(bad)  
   140005d63:	(bad)  
   140005d64:	(bad)  
   140005d65:	inc    DWORD PTR [rax]
   140005d67:	add    bh,bh
   140005d69:	(bad)  
   140005d6a:	(bad)  
   140005d6b:	(bad)  
   140005d6c:	(bad)  
   140005d6d:	inc    DWORD PTR [rax]
   140005d6f:	add    bh,bh
   140005d71:	(bad)  
   140005d72:	(bad)  
   140005d73:	(bad)  
   140005d74:	(bad)  
   140005d75:	inc    DWORD PTR [rax]
   140005d77:	add    al,al
   140005d79:	add    BYTE PTR [rax],al
   140005d7b:	add    BYTE PTR [rax],al
   140005d7d:	sldt   WORD PTR [rax]
   140005d80:	add    BYTE PTR [rax],0x0
   140005d83:	add    BYTE PTR [rax],al
   140005d85:	(bad)  
   140005d86:	add    BYTE PTR [rax],al
   140005d88:	add    BYTE PTR [rax],0x0
   140005d8b:	add    BYTE PTR [rax],al
   140005d8d:	(bad)  
   140005d8e:	add    BYTE PTR [rax],al
   140005d90:	add    BYTE PTR [rax],0x0
   140005d93:	add    BYTE PTR [rax],al
   140005d95:	(bad)  
   140005d96:	add    BYTE PTR [rax],al
   140005d98:	add    BYTE PTR [rax],0x0
   140005d9b:	add    BYTE PTR [rax],al
   140005d9d:	(bad)  
   140005d9e:	add    BYTE PTR [rax],al
   140005da0:	add    BYTE PTR [rax],0x0
   140005da3:	add    BYTE PTR [rax],al
   140005da5:	(bad)  
   140005da6:	add    BYTE PTR [rax],al
   140005da8:	add    BYTE PTR [rax],0x0
   140005dab:	add    BYTE PTR [rax],al
   140005dad:	(bad)  
   140005dae:	add    BYTE PTR [rax],al
   140005db0:	add    BYTE PTR [rax],0x0
   140005db3:	add    BYTE PTR [rax],al
   140005db5:	(bad)  
   140005db6:	add    BYTE PTR [rax],al
   140005db8:	add    BYTE PTR [rax],0x0
   140005dbb:	add    BYTE PTR [rax],al
   140005dbd:	(bad)  
   140005dbe:	add    BYTE PTR [rax],al
   140005dc0:	add    BYTE PTR [rax],0x0
   140005dc3:	add    BYTE PTR [rax],al
   140005dc5:	(bad)  
   140005dc6:	add    BYTE PTR [rax],al
   140005dc8:	add    BYTE PTR [rax],0x0
   140005dcb:	add    BYTE PTR [rax],al
   140005dcd:	(bad)  
   140005dce:	add    BYTE PTR [rax],al
   140005dd0:	add    BYTE PTR [rax],0x0
   140005dd3:	add    BYTE PTR [rax],al
   140005dd5:	(bad)  
   140005dd6:	add    BYTE PTR [rax],al
   140005dd8:	add    BYTE PTR [rax],0x0
   140005ddb:	add    BYTE PTR [rax],al
   140005ddd:	(bad)  
   140005dde:	add    BYTE PTR [rax],al
   140005de0:	add    BYTE PTR [rax],0x0
   140005de3:	add    BYTE PTR [rax],al
   140005de5:	(bad)  
   140005de6:	add    BYTE PTR [rax],al
   140005de8:	add    BYTE PTR [rax],0x0
   140005deb:	add    BYTE PTR [rax],al
   140005ded:	(bad)  
   140005dee:	add    BYTE PTR [rax],al
   140005df0:	add    BYTE PTR [rax],0x0
   140005df3:	add    BYTE PTR [rax],al
   140005df5:	(bad)  
   140005df6:	add    BYTE PTR [rax],al
   140005df8:	add    BYTE PTR [rax],0x0
   140005dfb:	add    BYTE PTR [rax],al
   140005dfd:	(bad)  
   140005dfe:	add    BYTE PTR [rax],al
   140005e00:	add    BYTE PTR [rax],0x0
   140005e03:	add    BYTE PTR [rax],al
   140005e05:	(bad)  
   140005e06:	add    BYTE PTR [rax],al
   140005e08:	add    BYTE PTR [rax],0x0
   140005e0b:	add    BYTE PTR [rax],al
   140005e0d:	(bad)  
   140005e0e:	add    BYTE PTR [rax],al
   140005e10:	add    BYTE PTR [rax],0x0
   140005e13:	add    BYTE PTR [rax],al
   140005e15:	(bad)  
   140005e16:	add    BYTE PTR [rax],al
   140005e18:	add    BYTE PTR [rax],0x0
   140005e1b:	add    BYTE PTR [rax],al
   140005e1d:	(bad)  
   140005e1e:	add    BYTE PTR [rax],al
   140005e20:	add    BYTE PTR [rax],0x0
   140005e23:	add    BYTE PTR [rax],al
   140005e25:	(bad)  
   140005e26:	add    BYTE PTR [rax],al
   140005e28:	add    BYTE PTR [rax],0x0
   140005e2b:	add    BYTE PTR [rax],al
   140005e2d:	(bad)  
   140005e2e:	add    BYTE PTR [rax],al
   140005e30:	add    BYTE PTR [rax],0x0
   140005e33:	add    BYTE PTR [rax],al
   140005e35:	(bad)  
   140005e36:	add    BYTE PTR [rax],al
   140005e38:	add    BYTE PTR [rax],0x0
   140005e3b:	add    BYTE PTR [rax],al
   140005e3d:	(bad)  
   140005e3e:	add    BYTE PTR [rax],al
   140005e40:	add    BYTE PTR [rax],0x0
   140005e43:	add    BYTE PTR [rax],al
   140005e45:	(bad)  
   140005e46:	add    BYTE PTR [rax],al
   140005e48:	add    BYTE PTR [rax],0x0
   140005e4b:	add    BYTE PTR [rax],al
   140005e4d:	(bad)  
   140005e4e:	add    BYTE PTR [rax],al
   140005e50:	add    BYTE PTR [rax],0x0
   140005e53:	add    BYTE PTR [rax],al
   140005e55:	(bad)  
   140005e56:	add    BYTE PTR [rax],al
   140005e58:	add    BYTE PTR [rax],0x0
   140005e5b:	add    BYTE PTR [rax],al
   140005e5d:	(bad)  
   140005e5e:	add    BYTE PTR [rax],al
   140005e60:	add    BYTE PTR [rax],0x0
   140005e63:	add    BYTE PTR [rax],al
   140005e65:	(bad)  
   140005e66:	add    BYTE PTR [rax],al
   140005e68:	add    BYTE PTR [rax],0x0
   140005e6b:	add    BYTE PTR [rax],al
   140005e6d:	(bad)  
   140005e6e:	add    BYTE PTR [rax],al
   140005e70:	add    BYTE PTR [rax],0x0
   140005e73:	add    BYTE PTR [rax],al
   140005e75:	(bad)  
   140005e76:	add    BYTE PTR [rax],al
   140005e78:	add    BYTE PTR [rax],0x0
   140005e7b:	add    BYTE PTR [rax],al
   140005e7d:	(bad)  
   140005e7e:	add    BYTE PTR [rax],al
   140005e80:	add    BYTE PTR [rax],0x0
   140005e83:	add    BYTE PTR [rax],al
   140005e85:	(bad)  
   140005e86:	add    BYTE PTR [rax],al
   140005e88:	add    BYTE PTR [rax],0x0
   140005e8b:	add    BYTE PTR [rax],al
   140005e8d:	(bad)  
   140005e8e:	add    BYTE PTR [rax],al
   140005e90:	rol    BYTE PTR [rax],0x0
   140005e93:	add    BYTE PTR [rax],al
   140005e95:	sldt   WORD PTR [rax]
   140005e98:	(bad)  
   140005e99:	(bad)  
   140005e9a:	(bad)  
   140005e9b:	(bad)  
   140005e9c:	(bad)  
   140005e9d:	inc    DWORD PTR [rax]
   140005e9f:	add    bh,bh
   140005ea1:	(bad)  
   140005ea2:	(bad)  
   140005ea3:	(bad)  
   140005ea4:	(bad)  
   140005ea5:	inc    DWORD PTR [rax]
   140005ea7:	add    bh,bh
   140005ea9:	(bad)  
   140005eaa:	(bad)  
   140005eab:	(bad)  
   140005eac:	(bad)  
   140005ead:	inc    DWORD PTR [rax]
   140005eaf:	add    bh,bh
   140005eb1:	(bad)  
   140005eb2:	(bad)  
   140005eb3:	(bad)  
   140005eb4:	(bad)  
   140005eb5:	inc    DWORD PTR [rax]
   140005eb7:	add    bh,bh
   140005eb9:	(bad)  
   140005eba:	(bad)  
   140005ebb:	(bad)  
   140005ebc:	(bad)  
   140005ebd:	inc    DWORD PTR [rax]
   140005ebf:	add    BYTE PTR [rax],ch
   140005ec1:	add    BYTE PTR [rax],al
   140005ec3:	add    BYTE PTR [rax],ah
   140005ec5:	add    BYTE PTR [rax],al
   140005ec7:	add    BYTE PTR [rax+0x0],al
   140005eca:	add    BYTE PTR [rax],al
   140005ecc:	add    DWORD PTR [rax],eax
   140005ece:	add    al,0x0
   140005ed0:	add    BYTE PTR [rax],al
   140005ed2:	add    BYTE PTR [rax],al
   140005ed4:	add    BYTE PTR [rdx],al
	...
   140005eee:	add    BYTE PTR [rax],0x0
   140005ef1:	add    BYTE PTR [rax],0x0
   140005ef4:	add    BYTE PTR [rax+0x800080],al
   140005efa:	add    BYTE PTR [rax],al
   140005efc:	add    BYTE PTR [rax],0x80
   140005eff:	add    BYTE PTR [rax-0x7fffff80],al
   140005f05:	add    BYTE PTR [rax-0x3f3f4000],0x0
   140005f0c:	add    BYTE PTR [rax],al
   140005f0e:	inc    DWORD PTR [rax]
   140005f10:	add    bh,bh
   140005f12:	add    BYTE PTR [rax],al
   140005f14:	add    bh,bh
   140005f16:	inc    DWORD PTR [rax]
   140005f18:	inc    DWORD PTR [rax]
   140005f1a:	add    BYTE PTR [rax],al
   140005f1c:	inc    DWORD PTR [rax]
   140005f1e:	inc    DWORD PTR [rax]
   140005f20:	(bad)  
   140005f21:	inc    DWORD PTR [rax]
   140005f23:	add    bh,bh
   140005f25:	(bad)  
   140005f26:	inc    DWORD PTR [rax]
	...
   140005f68:	xchg   DWORD PTR [rdi+0x77],esi
   140005f6b:	ja     0x140005fe4
   140005f6d:	ja     0x140005fe6
   140005f6f:	ja     0x140005fe8
   140005f71:	ja     0x140005fea
   140005f73:	ja     0x140005fec
   140005f75:	ja     0x140005fef
   140005f77:	add    BYTE PTR [rdi-0x1],bh
   140005f7a:	(bad)  
   140005f7b:	(bad)  
   140005f7c:	(bad)  
   140005f7d:	(bad)  
   140005f7e:	(bad)  
   140005f7f:	(bad)  
   140005f80:	(bad)  
   140005f81:	(bad)  
   140005f82:	(bad)  
   140005f83:	(bad)  
   140005f84:	(bad)  
   140005f85:	push   rdi
   140005f87:	add    BYTE PTR [rdi-0x1],bh
   140005f8a:	(bad)  
   140005f8b:	(bad)  
   140005f8c:	(bad)  
   140005f8d:	(bad)  
   140005f8e:	(bad)  
   140005f8f:	(bad)  
   140005f90:	(bad)  
   140005f91:	(bad)  
   140005f92:	(bad)  
   140005f93:	(bad)  
   140005f94:	(bad)  
   140005f95:	push   rdi
   140005f97:	add    BYTE PTR [rdi-0x1],bh
   140005f9a:	(bad)  
   140005f9b:	(bad)  
   140005f9c:	(bad)  
   140005f9d:	(bad)  
   140005f9e:	(bad)  
   140005f9f:	(bad)  
   140005fa0:	(bad)  
   140005fa1:	dec    DWORD PTR [rdi-0x8070708]
   140005fa7:	add    BYTE PTR [rdi-0x9],bh
   140005faa:	mov    BYTE PTR [rax-0x77777778],cl
   140005fb0:	clc    
   140005fb1:	mov    BYTE PTR [rax-0x8700071],cl
   140005fb7:	add    BYTE PTR [rdi-0x8],bh
   140005fba:	jbe    0x140006033
   140005fbc:	jbe    0x140006035
   140005fbe:	ja     0x140005f4f
   140005fc0:	(bad)  
   140005fc1:	(bad)  
   140005fc2:	(bad)  
   140005fc3:	(bad)  
   140005fc4:	(bad)  
   140005fc5:	push   rdi
   140005fc7:	add    BYTE PTR [rdi-0x8],bh
   140005fca:	push   0xffffffff867ae767
   140005fcf:	(bad)
   140005fd3:	(bad)  
   140005fd4:	clc    
   140005fd5:	clc    
   140005fd6:	test   DWORD PTR [rax],0x8676f87f
   140005fdc:	jp     0x140005f65
   140005fde:	push   0xffffffffffffff8f
   140005fe3:	(bad)  
   140005fe4:	(bad)  
   140005fe5:	push   rdi
   140005fe7:	add    BYTE PTR [rdi-0x8],bh
   140005fea:	addr32 addr32 ja 0x140006056
   140005fee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140005fef:	mov    bh,bh
   140005ff1:	(bad)  
   140005ff2:	(bad)  
   140005ff3:	(bad)  
   140005ff4:	clc    
   140005ff5:	push   rdi
   140005ff7:	add    BYTE PTR [rdi-0x8],bh
   140005ffa:	jbe    0x140005f82
   140005ffc:	xchg   BYTE PTR [rsi-0x7a],dh
   140005fff:	(bad)  
   140006000:	clc    
   140006001:	mov    BYTE PTR [rax-0x8000071],cl
   140006007:	add    BYTE PTR [rdi-0x8],bh
   14000600a:	addr32 addr32 push 0xffffffffff8f67a8
   140006011:	(bad)  
   140006012:	(bad)  
   140006013:	dec    DWORD PTR [rdi+0x7f00f7ff]
   140006019:	clc    
   14000601a:	push   0x7e676768
   14000601f:	mov    al,bh
   140006021:	mov    BYTE PTR [rax-0x78800871],cl
   140006027:	add    BYTE PTR [rdi-0x8],bh
   14000602a:	addr32 addr32 push 0xffffffffff8f6767
   140006031:	(bad)  
   140006032:	(bad)  
   140006033:	push   rdi
   140006035:	scas   eax,DWORD PTR es:[rdi]
   140006036:	test   DWORD PTR [rax],0x7e86f87f
   14000603c:	jbe    0x1400060bc
   14000603e:	ja     0x140005fcf
   140006040:	mov    BYTE PTR [rax+0x7ff78f88],cl
   140006046:	test   DWORD PTR [rax],0x7678f87f
   14000604c:	ja     0x1400060b5
   14000604e:	jbe    0x140005fdf
   140006050:	(bad)  
   140006051:	(bad)  
   140006052:	(bad)  
   140006053:	push   rsi
   140006055:	jg     0x14000604e
   140006057:	add    BYTE PTR [rdi-0x8],bh
   14000605a:	out    0x88,eax
   14000605c:	push   0xfffffffff888787e
   140006061:	mov    BYTE PTR [rax-0x8900871],cl
   140006067:	add    BYTE PTR [rdi-0x8],bh
   14000606a:	jl     0x140005ff2
   14000606c:	mov    ?,WORD PTR [rax+0x7e]
   14000606f:	(bad)  
   140006070:	(bad)  
   140006071:	(bad)  
   140006072:	(bad)  
   140006073:	push   rsi
   140006075:	jg     0x14000606e
   140006077:	add    BYTE PTR [rdi-0x8],bh
   14000607a:	ja     0x140006063
   14000607c:	ja     0x1400060f5
   14000607e:	ja     0x14000600f
   140006080:	mov    BYTE PTR [rax+0x7ff68f88],cl
   140006086:	test   DWORD PTR [rax],0x7cc7f87f
   14000608c:	xchg   BYTE PTR [rsi-0x7019],al
   140006092:	(bad)  
   140006093:	push   rsi
   140006095:	outs   dx,DWORD PTR ds:[rsi]
   140006096:	test   DWORD PTR [rax],0x8888f87f
   14000609c:	mov    BYTE PTR [rax-0x77077078],cl
   1400060a2:	mov    BYTE PTR [rdi+0xf7cff7],cl
   1400060a8:	jg     0x1400060a9
   1400060aa:	(bad)  
   1400060ab:	(bad)  
   1400060ac:	(bad)  
   1400060ad:	(bad)  
   1400060ae:	(bad)  
   1400060af:	(bad)  
   1400060b0:	(bad)  
   1400060b1:	(bad)  
   1400060b2:	(bad)  
   1400060b3:	(bad)  
   1400060b4:	(bad)  
   1400060b5:	push   rdi
   1400060b7:	add    BYTE PTR [rdi-0x1],bh
   1400060ba:	(bad)  
   1400060bb:	(bad)  
   1400060bc:	dec    DWORD PTR [rdi-0x7001]
   1400060c2:	(bad)  
   1400060c3:	(bad)  
   1400060c4:	(bad)  
   1400060c5:	push   rdi
   1400060c7:	add    BYTE PTR [rax-0x78],bh
   1400060ca:	mov    BYTE PTR [rax-0x77777778],cl
   1400060d0:	mov    BYTE PTR [rax-0x77777778],cl
   1400060d6:	xchg   DWORD PTR [rax],eax
   1400060d8:	jg     0x140006062
   1400060da:	clc    
   1400060db:	mov    BYTE PTR [rdi-0x77707071],cl
   1400060e1:	clc    
   1400060e2:	pop    QWORD PTR [rdi+0x878787]
   1400060e8:	(bad)  
   1400060e9:	ja     0x140006162
   1400060eb:	ja     0x140006164
   1400060ed:	ja     0x140006166
   1400060ef:	ja     0x140006168
   1400060f1:	ja     0x14000616a
   1400060f3:	ja     0x14000616c
   1400060f5:	ja     0x14000616f
	...
   140006127:	add    bh,bh
   140006129:	(bad)  
   14000612a:	(bad)  
   14000612b:	(bad)  
   14000612c:	(bad)  
   14000612d:	(bad)  
   14000612e:	(bad)  
   14000612f:	(bad)  
   140006130:	(bad)  
   140006131:	(bad)  
   140006132:	(bad)  
   140006133:	(bad)  
   140006134:	(bad)  
   140006135:	(bad)  
   140006136:	(bad)  
   140006137:	inc    DWORD PTR [rax]
   140006139:	add    BYTE PTR [rax],al
   14000613b:	add    eax,DWORD PTR [rax]
   14000613d:	add    BYTE PTR [rax],al
   14000613f:	add    eax,DWORD PTR [rax]
   140006141:	add    BYTE PTR [rax],al
   140006143:	add    eax,DWORD PTR [rax]
   140006145:	add    BYTE PTR [rax],al
   140006147:	add    eax,DWORD PTR [rax]
   140006149:	add    BYTE PTR [rax],al
   14000614b:	add    eax,DWORD PTR [rax]
   14000614d:	add    BYTE PTR [rax],al
   14000614f:	add    eax,DWORD PTR [rax]
   140006151:	add    BYTE PTR [rax],al
   140006153:	add    eax,DWORD PTR [rax]
   140006155:	add    BYTE PTR [rax],al
   140006157:	add    eax,DWORD PTR [rax]
   140006159:	add    BYTE PTR [rax],al
   14000615b:	add    eax,DWORD PTR [rax]
   14000615d:	add    BYTE PTR [rax],al
   14000615f:	add    eax,DWORD PTR [rax]
   140006161:	add    BYTE PTR [rax],al
   140006163:	add    eax,DWORD PTR [rax]
   140006165:	add    BYTE PTR [rax],al
   140006167:	add    eax,DWORD PTR [rax]
   140006169:	add    BYTE PTR [rax],al
   14000616b:	add    eax,DWORD PTR [rax]
   14000616d:	add    BYTE PTR [rax],al
   14000616f:	add    eax,DWORD PTR [rax]
   140006171:	add    BYTE PTR [rax],al
   140006173:	add    eax,DWORD PTR [rax]
   140006175:	add    BYTE PTR [rax],al
   140006177:	add    eax,DWORD PTR [rax]
   140006179:	add    BYTE PTR [rax],al
   14000617b:	add    eax,DWORD PTR [rax]
   14000617d:	add    BYTE PTR [rax],al
   14000617f:	add    eax,DWORD PTR [rax]
   140006181:	add    BYTE PTR [rax],al
   140006183:	add    eax,DWORD PTR [rax]
   140006185:	add    BYTE PTR [rax],al
   140006187:	add    eax,DWORD PTR [rax]
   140006189:	add    BYTE PTR [rax],al
   14000618b:	add    eax,DWORD PTR [rax]
   14000618d:	add    BYTE PTR [rax],al
   14000618f:	add    eax,DWORD PTR [rax]
   140006191:	add    BYTE PTR [rax],al
   140006193:	add    eax,DWORD PTR [rax]
   140006195:	add    BYTE PTR [rax],al
   140006197:	add    eax,DWORD PTR [rax-0xfd0000]
   14000619d:	(bad)  
   14000619e:	(bad)  
   14000619f:	(bad)  
   1400061a0:	(bad)  
   1400061a1:	(bad)  
   1400061a2:	(bad)  
   1400061a3:	(bad)  
   1400061a4:	(bad)  
   1400061a5:	(bad)  
   1400061a6:	(bad)  
   1400061a7:	jmp    FWORD PTR [rax]
   1400061a9:	add    BYTE PTR [rax],al
   1400061ab:	add    BYTE PTR [rax],bl
   1400061ad:	add    BYTE PTR [rax],al
   1400061af:	add    BYTE PTR [rax],dh
   1400061b1:	add    BYTE PTR [rax],al
   1400061b3:	add    BYTE PTR [rcx],al
   1400061b5:	add    BYTE PTR [rax+rax*1],al
   1400061b8:	add    BYTE PTR [rax],al
   1400061ba:	add    BYTE PTR [rax],al
   1400061bc:	and    BYTE PTR [rcx],al
	...
   1400061d6:	add    BYTE PTR [rax],0x0
   1400061d9:	add    BYTE PTR [rax],0x0
   1400061dc:	add    BYTE PTR [rax+0x800080],al
   1400061e2:	add    BYTE PTR [rax],al
   1400061e4:	add    BYTE PTR [rax],0x80
   1400061e7:	add    BYTE PTR [rax-0x7fffff80],al
   1400061ed:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400061f4:	add    BYTE PTR [rax],al
   1400061f6:	inc    DWORD PTR [rax]
   1400061f8:	add    bh,bh
   1400061fa:	add    BYTE PTR [rax],al
   1400061fc:	add    bh,bh
   1400061fe:	inc    DWORD PTR [rax]
   140006200:	inc    DWORD PTR [rax]
   140006202:	add    BYTE PTR [rax],al
   140006204:	inc    DWORD PTR [rax]
   140006206:	inc    DWORD PTR [rax]
   140006208:	(bad)  
   140006209:	inc    DWORD PTR [rax]
   14000620b:	add    bh,bh
   14000620d:	(bad)  
   14000620e:	inc    DWORD PTR [rax]
	...
   140006234:	xchg   DWORD PTR [rdi+0x78],esi
   140006237:	ja     0x1400062b0
   140006239:	xchg   DWORD PTR [rdi+0x78],esi
   14000623c:	ja     0x1400062b5
   14000623e:	xchg   DWORD PTR [rax],eax
   140006240:	jg     0x140006241
   140006242:	(bad)  
   140006243:	(bad)  
   140006244:	(bad)  
   140006245:	(bad)  
   140006246:	(bad)  
   140006247:	(bad)  
   140006248:	(bad)  
   140006249:	push   rdi
   14000624b:	add    BYTE PTR [rdi-0x1],bh
   14000624e:	(bad)  
   14000624f:	(bad)  
   140006250:	dec    DWORD PTR [rdi-0x7707001]
   140006256:	test   DWORD PTR [rax],0xf8f8ff7f
   14000625c:	(bad)  
   14000625d:	dec    DWORD PTR [rax-0x8000078]
   140006263:	add    BYTE PTR [rdi-0x9],bh
   140006266:	addr32 ja 0x1400062e0
   140006269:	outs   dx,DWORD PTR ds:[rsi]
   14000626a:	(bad)  
   14000626b:	(bad)  
   14000626c:	clc    
   14000626d:	clc    
   14000626e:	test   DWORD PTR [rax],0x7a76f77f
   140006274:	jp     0x140006205
   140006276:	mov    BYTE PTR [rax+0xf7ffff],cl
   14000627c:	jg     0x140006274
   14000627e:	jle    0x1400062f8
   140006280:	push   0xfffffffff8ffff6f
   140006285:	clc    
   140006286:	test   DWORD PTR [rax],0x6777f77f
   14000628c:	jp     0x14000630d
   14000628e:	(bad)  
   14000628f:	(bad)  
   140006290:	(bad)  
   140006291:	push   rdi
   140006293:	add    BYTE PTR [rdi-0xa],bh
   140006296:	addr32 jle 0x140006310
   140006299:	jg     0x140006223
   14000629b:	mov    bh,dh
   14000629d:	jg     0x140006296
   14000629f:	add    BYTE PTR [rdi-0x9],bh
   1400062a2:	jle    0x14000631a
   1400062a4:	jbe    0x140006325
   1400062a6:	(bad)  
   1400062a7:	push   rsi
   1400062a9:	js     0x1400062a2
   1400062ab:	add    BYTE PTR [rdi-0xa],bh
   1400062ae:	jbe    0x140006327
   1400062b0:	push   0xfffffffff788886f
   1400062b5:	scas   eax,DWORD PTR es:[rdi]
   1400062b6:	test   DWORD PTR [rax],0x6767f77f
   1400062bc:	addr32 jg 0x1400062be
   1400062bf:	push   rsi
   1400062c1:	jg     0x1400062ba
   1400062c3:	add    BYTE PTR [rdi-0xa],bh
   1400062c6:	jbe    0x140006346
   1400062c8:	jbe    0x140006349
   1400062ca:	mov    BYTE PTR [rax+0xf76ff7],cl
   1400062d0:	jg     0x1400062c9
   1400062d2:	(bad)  
   1400062d3:	addr32 jbe 0x140006355
   1400062d6:	(bad)  
   1400062d7:	push   rsi
   1400062d9:	jg     0x1400062d2
   1400062db:	add    BYTE PTR [rdi-0xa],bh
   1400062de:	jbe    0x140006356
   1400062e0:	jle    0x140006361
   1400062e2:	mov    BYTE PTR [rax+0xf7cff6],cl
   1400062e8:	jg     0x1400062e9
   1400062ea:	(bad)  
   1400062eb:	(bad)  
   1400062ec:	(bad)  
   1400062ed:	(bad)  
   1400062ee:	(bad)  
   1400062ef:	(bad)  
   1400062f0:	(bad)  
   1400062f1:	push   rdi
   1400062f3:	add    BYTE PTR [rax-0x78],bh
   1400062f6:	mov    BYTE PTR [rax-0x77777778],cl
   1400062fc:	mov    BYTE PTR [rax-0x7080ff78],cl
   140006302:	(bad)  
   140006303:	clc    
   140006304:	clc    
   140006305:	clc    
   140006306:	clc    
   140006307:	div    edi
   140006309:	xchg   DWORD PTR [rdi+0x77878700],eax
   14000630f:	ja     0x140006298
   140006311:	ja     0x14000638a
   140006313:	ja     0x14000638c
   140006315:	xchg   DWORD PTR [rax+0x0],ecx
	...
   14000632f:	add    bh,bh
   140006331:	(bad)  
   140006332:	inc    DWORD PTR [rax]
   140006334:	(bad)  
   140006335:	(bad)  
   140006336:	inc    DWORD PTR [rax]
   140006338:	(bad)  
   140006339:	(bad)  
   14000633a:	inc    DWORD PTR [rax]
   14000633c:	add    BYTE PTR [rax],al
   14000633e:	add    eax,DWORD PTR [rax]
   140006340:	add    BYTE PTR [rax],al
   140006342:	add    eax,DWORD PTR [rax]
   140006344:	add    BYTE PTR [rax],al
   140006346:	add    eax,DWORD PTR [rax]
   140006348:	add    BYTE PTR [rax],al
   14000634a:	add    eax,DWORD PTR [rax]
   14000634c:	add    BYTE PTR [rax],al
   14000634e:	add    eax,DWORD PTR [rax]
   140006350:	add    BYTE PTR [rax],al
   140006352:	add    eax,DWORD PTR [rax]
   140006354:	add    BYTE PTR [rax],al
   140006356:	add    eax,DWORD PTR [rax]
   140006358:	add    BYTE PTR [rax],al
   14000635a:	add    eax,DWORD PTR [rax]
   14000635c:	add    BYTE PTR [rax],al
   14000635e:	add    eax,DWORD PTR [rax]
   140006360:	add    BYTE PTR [rax],al
   140006362:	add    eax,DWORD PTR [rax]
   140006364:	add    BYTE PTR [rax],al
   140006366:	add    eax,DWORD PTR [rax]
   140006368:	add    BYTE PTR [rax],al
   14000636a:	add    eax,DWORD PTR [rax]
   14000636c:	add    BYTE PTR [rax],al
   14000636e:	add    eax,DWORD PTR [rax]
   140006370:	add    BYTE PTR [rax],al
   140006372:	add    eax,DWORD PTR [rax]
   140006374:	add    BYTE PTR [rax],al
   140006376:	add    eax,DWORD PTR [rax]
   140006378:	add    BYTE PTR [rax],al
   14000637a:	add    eax,DWORD PTR [rax]
   14000637c:	add    BYTE PTR [rax],al
   14000637e:	add    eax,DWORD PTR [rax]
   140006380:	add    BYTE PTR [rax],al
   140006382:	add    eax,DWORD PTR [rax]
   140006384:	add    BYTE PTR [rax],al
   140006386:	add    eax,DWORD PTR [rax]
   140006388:	(bad)  
   140006389:	(bad)  
   14000638a:	inc    DWORD PTR [rax]
   14000638c:	(bad)  
   14000638d:	(bad)  
   14000638e:	inc    DWORD PTR [rax]
   140006390:	sub    BYTE PTR [rax],al
   140006392:	add    BYTE PTR [rax],al
   140006394:	adc    BYTE PTR [rax],al
   140006396:	add    BYTE PTR [rax],al
   140006398:	and    BYTE PTR [rax],al
   14000639a:	add    BYTE PTR [rax],al
   14000639c:	add    DWORD PTR [rax],eax
   14000639e:	add    al,0x0
   1400063a0:	add    BYTE PTR [rax],al
   1400063a2:	add    BYTE PTR [rax],al
   1400063a4:	add    BYTE PTR [rax],0x0
	...
   1400063bb:	add    BYTE PTR [rax],al
   1400063bd:	add    BYTE PTR [rax+0x800000],al
   1400063c3:	add    BYTE PTR [rax],al
   1400063c5:	add    BYTE PTR [rax+0x8000],0x0
   1400063cc:	add    BYTE PTR [rax],0x80
   1400063cf:	add    BYTE PTR [rax-0x7fffff80],al
   1400063d5:	add    BYTE PTR [rax-0x3f3f4000],0x0
   1400063dc:	add    BYTE PTR [rax],al
   1400063de:	inc    DWORD PTR [rax]
   1400063e0:	add    bh,bh
   1400063e2:	add    BYTE PTR [rax],al
   1400063e4:	add    bh,bh
   1400063e6:	inc    DWORD PTR [rax]
   1400063e8:	inc    DWORD PTR [rax]
   1400063ea:	add    BYTE PTR [rax],al
   1400063ec:	inc    DWORD PTR [rax]
   1400063ee:	inc    DWORD PTR [rax]
   1400063f0:	(bad)  
   1400063f1:	inc    DWORD PTR [rax]
   1400063f3:	add    bh,bh
   1400063f5:	(bad)  
   1400063f6:	inc    DWORD PTR [rax]
	...
   140006408:	ja     0x140006481
   14000640a:	xchg   DWORD PTR [rdi+0x78],esi
   14000640d:	ja     0x140006486
   14000640f:	xchg   DWORD PTR [rdi-0x1],edi
   140006412:	(bad)  
   140006413:	(bad)  
   140006414:	(bad)  
   140006415:	(bad)  
   140006416:	inc    DWORD PTR [rdi-0x81]
   14000641c:	clc    
   14000641d:	clc    
   14000641e:	clc    
   14000641f:	idiv   DWORD PTR [rdi+0x77]
   140006422:	addr32 jg 0x1400063ad
   140006425:	mov    bh,bh
   140006427:	idiv   DWORD PTR [rdi+0x67]
   14000642a:	ja     0x1400063db
   14000642c:	(bad)  
   14000642d:	(bad)  
   14000642e:	clc    
   14000642f:	idiv   DWORD PTR [rdi+0x76]
   140006432:	jle    0x1400064b3
   140006434:	mov    BYTE PTR [rax+0x677ff7f7],cl
   14000643a:	addr32 jg 0x14000643c
   14000643d:	push   rsi
   14000643f:	idiv   DWORD PTR [rdi+0x76]
   140006442:	xchg   BYTE PTR [rdi-0x78],ch
   140006445:	mov    bh,dh
   140006447:	idiv   DWORD PTR [rdi+0x67]
   14000644a:	addr32 jg 0x14000644c
   14000644d:	push   rsi
   14000644f:	idiv   DWORD PTR [rdi-0x1]
   140006452:	(bad)  
   140006453:	(bad)  
   140006454:	(bad)  
   140006455:	(bad)  
   140006456:	push   rdi
   140006458:	js     0x1400063e2
   14000645a:	mov    BYTE PTR [rax-0x78777778],cl
   140006460:	mov    al,bh
   140006462:	clc    
   140006463:	clc    
   140006464:	clc    
   140006465:	jg     0x1400064df
   140006467:	ja     0x1400064e0
   140006469:	xchg   DWORD PTR [rax+0x77],edi
   14000646c:	js     0x1400064e5
   14000646e:	js     0x1400064e8
	...
   140006478:	(bad)  
   140006479:	inc    DWORD PTR [rax]
   14000647b:	add    bh,bh
   14000647d:	inc    DWORD PTR [rax]
	...
   1400064b3:	add    bh,bh
   1400064b5:	inc    DWORD PTR [rax]
   1400064b7:	add    BYTE PTR [rax],ch
   1400064b9:	add    BYTE PTR [rax],al
   1400064bb:	add    BYTE PTR [rax],dh
   1400064bd:	add    BYTE PTR [rax],al
   1400064bf:	add    BYTE PTR [rax+0x0],ah
   1400064c2:	add    BYTE PTR [rax],al
   1400064c4:	add    DWORD PTR [rax],eax
   1400064c6:	or     BYTE PTR [rax],al
   1400064c8:	add    BYTE PTR [rax],al
   1400064ca:	add    BYTE PTR [rax],al
   1400064cc:	add    BYTE PTR [rcx],cl
	...
   1400064d6:	add    BYTE PTR [rax],al
   1400064d8:	add    BYTE PTR [rcx],al
   1400064da:	add    BYTE PTR [rax],al
   1400064dc:	add    BYTE PTR [rcx],al
   1400064de:	add    BYTE PTR [rax],al
   1400064e0:	add    BYTE PTR [rax],al
   1400064e2:	add    BYTE PTR [rax],al
   1400064e4:	lahf   
   1400064e5:	ja     0x14000652e
   1400064e7:	add    BYTE PTR [rdi-0x62ffb786],bl
   1400064ed:	jle    0x140006538
   1400064ef:	add    BYTE PTR [rcx-0x5fffbb8e],ah
   1400064f5:	jne    0x14000653c
   1400064f7:	add    BYTE PTR [rdi+rsi*2+0x7aa20049],ah
   1400064fe:	rex.WX add BYTE PTR [rax+r15*2+0x7ea1004a],spl
   140006506:	rex.WR add BYTE PTR [rsi-0x6effaf82],r12b
   14000650d:	jns    0x140006577
   14000650f:	add    BYTE PTR [rdi-0x5b],bh
   140006512:	pop    rbx
   140006513:	add    BYTE PTR [rbp-0x5a],bh
   140006516:	pop    rsp
   140006517:	add    BYTE PTR [rdx-0x57],bh
   14000651a:	pop    rsi
   14000651b:	add    BYTE PTR [rax+rbp*4+0x5d],bh
   14000651f:	add    BYTE PTR [rsi-0x52],dh
   140006522:	(bad)  
   140006523:	add    BYTE PTR [rcx-0x55],bh
   140006526:	(bad)  
   140006527:	add    BYTE PTR [rax-0x54],bh
   14000652a:	(bad)  
   14000652b:	add    BYTE PTR [rdx-0x4f],dh
   14000652e:	add    BYTE PTR gs:[rax+rsi*4+0x64],dh
   140006533:	add    BYTE PTR [rdi-0x6cffb271],cl
   140006539:	xchg   DWORD PTR [rcx+0x0],ecx
   14000653c:	xchg   esp,eax
   14000653d:	test   DWORD PTR [rax+0x0],ecx
   140006540:	pushf  
   140006541:	or     DWORD PTR [rbx+0x0],0x4d839d
   140006548:	(bad)  
   140006549:	test   DWORD PTR [rbp+0x0],ecx
   14000654c:	sahf   
   14000654d:	test   DWORD PTR [rdi+0x0],ecx
   140006550:	xchg   edx,eax
   140006551:	mov    DWORD PTR [rdx+0x0],ecx
   140006554:	xchg   ecx,eax
   140006555:	mov    WORD PTR [rbx+0x0],cs
   140006558:	xchg   esi,eax
   140006559:	mov    BYTE PTR [rax+rax*1-0x70],cl
   14000655d:	lea    ecx,[rax+rax*1-0x68]
   140006561:	mov    DWORD PTR [rsi+0x0],ecx
   140006564:	mov    ss,WORD PTR [rcx-0x6b72ffb3]
   14000656a:	rex.WRXB add BYTE PTR [r13-0x69ffaf79],r11b
   140006571:	mov    ss,WORD PTR [rcx+0x0]
   140006574:	fwait
   140006575:	mov    dl,BYTE PTR [rdx+0x0]
   140006578:	pushf  
   140006579:	mov    BYTE PTR [rcx+0x0],dl
   14000657c:	(bad)  
   14000657d:	mov    WORD PTR [rbx+0x0],ss
   140006580:	cdq    
   140006581:	mov    ss,WORD PTR [rax+rax*1-0x62]
   140006585:	lea    edx,[rdi+0x0]
   140006588:	lahf   
   140006589:	(bad)  
   14000658a:	pop    rax
   14000658b:	add    BYTE PTR [rbx-0x73ffae6a],cl
   140006591:	xchg   ebp,eax
   140006592:	push   rax
   140006593:	add    BYTE PTR [rsi-0x76ffaa63],al
   140006599:	cdq    
   14000659a:	push   rdx
   14000659b:	add    BYTE PTR [rax-0x68ffab65],cl
   1400065a1:	xchg   edx,eax
   1400065a2:	push   rsi
   1400065a3:	add    BYTE PTR [rdi-0x67ffa86c],dl
   1400065a9:	nop
   1400065aa:	push   rbp
   1400065ab:	add    BYTE PTR [rbp-0x64ffa66e],bl
   1400065b1:	xchg   esi,eax
   1400065b2:	pop    rbx
   1400065b3:	add    BYTE PTR [rbp+rdx*4-0x6666ffa6],bl
   1400065ba:	pop    rsp
   1400065bb:	add    BYTE PTR [rax-0x5cffb27f],ah
   1400065c1:	adc    DWORD PTR [rbx+0x0],0xffffffa4
   1400065c5:	adc    DWORD PTR [rcx+0x0],0x5486a2
   1400065cc:	test   al,0x83
   1400065ce:	push   rdi
   1400065cf:	add    BYTE PTR [rax-0x58ffaa76],ah
   1400065d5:	xchg   DWORD PTR [rax+0x0],ebx
   1400065d8:	test   al,0x85
   1400065da:	pop    rax
   1400065db:	add    BYTE PTR [rbp-0x5affa677],ah
   1400065e1:	mov    WORD PTR [rbx+0x0],ds
   1400065e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400065e5:	mov    ds,WORD PTR [rax+rax*1-0x56]
   1400065e9:	mov    bl,BYTE PTR [rsi+0x0]
   1400065ec:	test   eax,0xa0005f8c
   1400065f1:	nop
   1400065f2:	pop    rdx
   1400065f3:	add    BYTE PTR [rdx-0x5effa26e],ah
   1400065f9:	xchg   ebp,eax
   1400065fa:	pop    rdi
   1400065fb:	add    BYTE PTR [rax+riz*4-0x5d7dffa9],al
   140006602:	pop    rax
   140006603:	add    BYTE PTR [rax-0x61ffa55c],al
   140006609:	(bad)  
   14000660a:	(bad)  
   14000660b:	add    BYTE PTR [rbp-0x63ff9d63],bl
   140006611:	lahf   
   140006612:	add    BYTE PTR fs:[rcx-0x4cff9f71],ch
   140006619:	mov    BYTE PTR [rbx+0x0],ah
   14000661c:	mov    cl,0x8d
   14000661e:	add    BYTE PTR gs:[rdi-0x5fff9e6d],ah
   140006625:	xchg   edi,eax
   140006626:	(bad)  
   140006627:	add    BYTE PTR [rbp-0x57ff9d6b],ah
   14000662d:	xchg   ecx,eax
   14000662e:	(bad)  
   14000662f:	add    BYTE PTR [rcx+rdx*4-0x6955ff9b],ch
   140006636:	data16 add BYTE PTR [rbx-0x5bff9965],ah
   14000663d:	cwde   
   14000663e:	add    BYTE PTR fs:[rdx-0x52ff9863],ah
   140006645:	xchg   ebp,eax
   140006646:	imul   eax,DWORD PTR [rax],0x6c97af
   14000664c:	test   eax,0xad006899
   140006651:	cdq    
   140006652:	ins    DWORD PTR es:[rdi],dx
   140006653:	add    BYTE PTR [rdx-0x52ff9364],ch
   140006659:	popf   
   14000665a:	outs   dx,DWORD PTR ds:[rsi]
   14000665b:	add    BYTE PTR [rcx-0x64ff8d62],dh
   140006661:	movabs eax,ds:0xb39d006aa49d0065
   14000666a:	jns    0x14000666c
   14000666c:	cdq    
   14000666d:	mov    bh,0x7c
   14000666f:	add    BYTE PTR [rbp-0x57ff8146],dl
   140006675:	movabs eax,ds:0xaca20071a7a5006e
   14000667e:	je     0x140006680
   140006680:	mov    ah,0xa3
   140006682:	jns    0x140006684
   140006684:	movabs al,ds:0xb2008184880076b0
   14000668d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000668e:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000668f:	add    BYTE PTR [rbx-0x3eff5858],dh
   140006695:	mov    dh,0xb5
   140006697:	add    cl,dl
   140006699:	mov    ebp,0xc58b00bc
   14000669e:	xchg   DWORD PTR [rax],eax
   1400066a0:	nop
   1400066a1:	rol    DWORD PTR [rax+rax*1+0xbdc6d1],0xbe
   1400066a9:	mov    edi,0xdada00c0
   1400066ae:	fiadd  DWORD PTR [rax]
   1400066b0:	fstp   st(5)
   1400066b2:	fld    QWORD PTR [rax]
   1400066b4:	loopne 0x14000668f
   1400066b6:	rol    DWORD PTR [rax],cl
   1400066b8:	out    0xe6,al
   1400066ba:	out    0x0,eax
   1400066bc:	out    0xe7,eax
   1400066be:	call   0x129e94ec3
   1400066c3:	add    ch,ch
   1400066c5:	in     eax,dx
   1400066c6:	in     eax,dx
   1400066c7:	add    bh,ch
   1400066c9:	lock lock add cl,dh
   1400066cd:	icebp  
   1400066ce:	icebp  
   1400066cf:	add    bl,dh
   1400066d1:	hlt    
   1400066d2:	hlt    
   1400066d3:	add    ch,dh
   1400066d5:	cmc    
   1400066d6:	cmc    
   1400066d7:	add    bh,dh
   1400066d9:	clc    
   1400066da:	clc    
   1400066db:	add    al,bh
   1400066dd:	stc    
   1400066de:	stc    
   1400066df:	add    bl,bh
   1400066e1:	cld    
   1400066e2:	cld    
   1400066e3:	add    ch,bh
   1400066e5:	(bad)  
   1400066e6:	inc    BYTE PTR [rax]
	...
   1400068dc:	(bad)  
   1400068dd:	(bad)  
   1400068de:	inc    DWORD PTR [rax]
	...
   140006a30:	add    BYTE PTR [rax],al
   140006a32:	push   0x6a
   140006a34:	push   0x6a
   140006a36:	push   0x6a
   140006a38:	push   0x6a
   140006a3a:	push   0x6a
   140006a3c:	push   0x6a
   140006a3e:	push   0x6a
   140006a40:	push   0x6a
   140006a42:	push   0x6a
   140006a44:	push   0x6a
   140006a46:	push   0x6a
   140006a48:	push   0x6a
   140006a4a:	push   0x6a
   140006a4c:	push   0x6a
   140006a4e:	push   0x6a
   140006a50:	push   0x6a
   140006a52:	push   0x6a
   140006a54:	push   0x6a
   140006a56:	push   0x6a
   140006a58:	push   0x6a
   140006a5a:	push   0x6a
   140006a5c:	add    BYTE PTR [rax],al
   140006a5e:	add    BYTE PTR [rax],al
   140006a60:	add    BYTE PTR [rdx+0x71],ch
   140006a63:	jno    0x140006ad6
   140006a65:	jno    0x140006ad8
   140006a67:	jno    0x140006ada
   140006a69:	jno    0x140006adc
   140006a6b:	jno    0x140006ade
   140006a6d:	jno    0x140006ae0
   140006a6f:	jno    0x140006ae2
   140006a71:	jno    0x140006ae4
   140006a73:	jno    0x140006ae6
   140006a75:	jno    0x140006ae8
   140006a77:	jno    0x140006aea
   140006a79:	jno    0x140006aec
   140006a7b:	jno    0x140006aee
   140006a7d:	jno    0x140006af0
   140006a7f:	jno    0x140006af2
   140006a81:	jno    0x140006af4
   140006a83:	jno    0x140006af6
   140006a85:	jno    0x140006af8
   140006a87:	jno    0x140006afa
   140006a89:	jno    0x140006afc
   140006a8b:	jno    0x140006af7
   140006a8d:	add    BYTE PTR [rax],al
   140006a8f:	add    BYTE PTR [rax],al
   140006a91:	push   0x71
   140006a93:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006a9d:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006aa7:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006ab1:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006abb:	jno    0x140006b27
   140006abd:	add    BYTE PTR [rax],al
   140006abf:	add    BYTE PTR [rax],al
   140006ac1:	push   0x71
   140006ac3:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006acd:	add    DWORD PTR [rcx-0x7e7e7e7f],0x7e7e7e81
   140006ad7:	jle    0x140006b57
   140006ad9:	jp     0x140006b59
   140006adb:	jp     0x140006b57
   140006add:	jp     0x140006b59
   140006adf:	jp     0x140006b5b
   140006ae1:	jp     0x140006b5d
   140006ae3:	jp     0x140006b5f
   140006ae5:	jp     0x140006b61
   140006ae7:	jp     0x140006b63
   140006ae9:	jp     0x140006a6c
   140006aeb:	jno    0x140006b57
   140006aed:	add    BYTE PTR [rax],al
   140006aef:	add    BYTE PTR [rax],al
   140006af1:	push   0x71
   140006af3:	add    DWORD PTR [rcx+0x76767681],0x76767676
   140006afd:	jbe    0x140006b75
   140006aff:	jbe    0x140006b77
   140006b01:	jbe    0x140006b79
   140006b03:	jbe    0x140006b7f
   140006b05:	jbe    0x140006b7d
   140006b07:	jbe    0x140006b7f
   140006b09:	jle    0x140006b85
   140006b0b:	jp     0x140006b8b
   140006b0d:	jp     0x140006b89
   140006b0f:	jp     0x140006b8b
   140006b11:	jp     0x140006b8a
   140006b13:	jp     0x140006b8c
   140006b15:	jp     0x140006b8d
   140006b17:	jp     0x140006b8f
   140006b19:	jp     0x140006a9c
   140006b1b:	jno    0x140006b87
   140006b1d:	add    BYTE PTR [rax],al
   140006b1f:	add    BYTE PTR [rax],al
   140006b21:	push   0x71
   140006b23:	add    DWORD PTR [rcx+0x6e6e6e6b],0x6e6e6e6e
   140006b2d:	outs   dx,BYTE PTR ds:[rsi]
   140006b2e:	outs   dx,BYTE PTR ds:[rsi]
   140006b2f:	outs   dx,BYTE PTR ds:[rsi]
   140006b30:	outs   dx,BYTE PTR ds:[rsi]
   140006b31:	outs   dx,BYTE PTR ds:[rsi]
   140006b32:	outs   dx,BYTE PTR ds:[rsi]
   140006b33:	outs   dx,BYTE PTR ds:[rsi]
   140006b34:	outs   dx,BYTE PTR ds:[rsi]
   140006b35:	outs   dx,BYTE PTR ds:[rsi]
   140006b36:	outs   dx,BYTE PTR ds:[rsi]
   140006b37:	imul   esi,DWORD PTR [rsi+0x7e],0x7a
   140006b3b:	jle    0x140006bb7
   140006b3d:	jp     0x140006bb9
   140006b3f:	jp     0x140006bbb
   140006b41:	jp     0x140006bbd
   140006b43:	jp     0x140006bbd
   140006b45:	jp     0x140006bbf
   140006b47:	js     0x140006bc1
   140006b49:	js     0x140006acc
   140006b4b:	jno    0x140006bb7
   140006b4d:	add    BYTE PTR [rax],al
   140006b4f:	add    BYTE PTR [rax],al
   140006b51:	push   0x71
   140006b53:	add    DWORD PTR [rcx+0x4847476e],0xf0f4848
   140006b5d:	(bad)  
   140006b5e:	movlps xmm2,QWORD PTR [rdx]
   140006b61:	adc    BYTE PTR [rax],dl
   140006b63:	adc    BYTE PTR [rax],dl
   140006b65:	adc    edx,DWORD PTR [rbx]
   140006b67:	outs   dx,BYTE PTR ds:[rsi]
   140006b68:	jbe    0x140006be8
   140006b6a:	jp     0x140006bdf
   140006b6c:	jae    0x140006be1
   140006b6e:	jae    0x140006be3
   140006b70:	jae    0x140006be5
   140006b72:	jae    0x140006bee
   140006b74:	js     0x140006bf0
   140006b76:	jp     0x140006bf2
   140006b78:	jp     0x140006bf2
   140006b7a:	xor    DWORD PTR [rcx+0x6a],0x0
   140006b81:	push   0x71
   140006b83:	add    DWORD PTR [rcx+0x4747476e],0x480f4848
   140006b8d:	(bad)  
   140006b8e:	movlps xmm2,QWORD PTR [rdx]
   140006b91:	adc    dl,BYTE PTR [rax]
   140006b93:	adc    BYTE PTR [rbx],dl
   140006b95:	adc    edx,DWORD PTR [rbx]
   140006b97:	outs   dx,BYTE PTR ds:[rsi]
   140006b98:	jbe    0x140006c18
   140006b9a:	jle    0x140006c1a
   140006b9c:	jle    0x140006c1c
   140006b9e:	jle    0x140006c1e
   140006ba0:	jp     0x140006c20
   140006ba2:	jp     0x140006c1e
   140006ba4:	jp     0x140006c20
   140006ba6:	js     0x140006c22
   140006ba8:	js     0x140006c23
   140006baa:	xor    DWORD PTR [rcx+0x6a],0x0
   140006bb1:	push   0x71
   140006bb3:	add    DWORD PTR [rcx+0x472e2e6e],0x48484847
   140006bbd:	cmovs  ecx,DWORD PTR [rdi]
   140006bc0:	movlps xmm2,QWORD PTR [rdx]
   140006bc3:	adc    BYTE PTR [rax],dl
   140006bc5:	adc    edx,DWORD PTR [rbx]
   140006bc7:	outs   dx,BYTE PTR ds:[rsi]
   140006bc8:	jbe    0x140006c48
   140006bca:	jle    0x140006c3f
   140006bcc:	jae    0x140006c41
   140006bce:	jae    0x140006c43
   140006bd0:	jae    0x140006c45
   140006bd2:	jae    0x140006c4f
   140006bd4:	jp     0x140006c50
   140006bd6:	jp     0x140006c51
   140006bd8:	jns    0x140006c53
   140006bda:	xor    DWORD PTR [rcx+0x6a],0x0
   140006be1:	push   0x71
   140006be3:	add    DWORD PTR [rcx+0x2e2e2e6e],0x48484747
   140006bed:	rex.W (bad) 
   140006bef:	(bad)  
   140006bf0:	(bad)  
   140006bf1:	(bad)  
   140006bf2:	movlps xmm2,QWORD PTR [rax]
   140006bf5:	adc    BYTE PTR [rax],dl
   140006bf7:	outs   dx,BYTE PTR ds:[rsi]
   140006bf8:	jbe    0x140006c78
   140006bfa:	jle    0x140006c7a
   140006bfc:	jle    0x140006c7c
   140006bfe:	jle    0x140006c7e
   140006c00:	jle    0x140006c80
   140006c02:	jnp    0x140006c7f
   140006c04:	jp     0x140006c80
   140006c06:	jp     0x140006c82
   140006c08:	jns    0x140006c84
   140006c0a:	xor    BYTE PTR [rcx+0x6a],0x0
   140006c0e:	add    BYTE PTR [rax],al
   140006c10:	add    BYTE PTR [rdx+0x71],ch
   140006c13:	add    DWORD PTR [rcx+0x2e2e2b6e],0x47482e2e
   140006c1d:	rex.W
   140006c1e:	rex.W
   140006c1f:	rex.W
   140006c20:	rex.W movlps xmm1,QWORD PTR [rdi]
   140006c24:	adc    dl,BYTE PTR [rdx]
   140006c26:	adc    BYTE PTR [rsi+0x76],ch
   140006c29:	jle    0x140006bac
   140006c2b:	jae    0x140006ca0
   140006c2d:	jae    0x140006ca2
   140006c2f:	jae    0x140006ca4
   140006c31:	jae    0x140006ca7
   140006c33:	jle    0x140006cb0
   140006c35:	jnp    0x140006cb1
   140006c37:	jp     0x140006cb2
   140006c39:	jns    0x140006bbb
   140006c3b:	jno    0x140006ca7
   140006c3d:	add    BYTE PTR [rax],al
   140006c3f:	add    BYTE PTR [rax],al
   140006c41:	push   0x71
   140006c43:	add    DWORD PTR [rcx+0x2e2b2b6e],0x472e2e2e
   140006c4d:	cs rex.W
   140006c4f:	rex.W
   140006c50:	cmovs  rdx,QWORD PTR [rdx]
   140006c54:	movlps xmm2,QWORD PTR [rdx]
   140006c57:	outs   dx,BYTE PTR ds:[rsi]
   140006c58:	jbe    0x140006bdb
   140006c5a:	jle    0x140006bdd
   140006c5c:	add    DWORD PTR [rcx+0x7e7e817e],0x7e7b7e7e
   140006c66:	jnp    0x140006ce3
   140006c68:	jnp    0x140006ce5
   140006c6a:	xor    DWORD PTR [rcx+0x6a],0x0
   140006c71:	push   0x71
   140006c73:	add    DWORD PTR [rcx+0x2b21216e],0x2e2e2e2e
   140006c7d:	rex.W
   140006c7e:	rex.RXB
   140006c7f:	rex.W
   140006c80:	rex.W
   140006c81:	rex.W
   140006c82:	rex.W (bad) 
   140006c84:	(bad)  
   140006c85:	(bad)  
   140006c86:	movd   mm6,DWORD PTR [rsi-0x7f]
   140006c8a:	xor    DWORD PTR [rbx+0x73],0x74737373
   140006c91:	je     0x140006d06
   140006c93:	jle    0x140006d10
   140006c95:	jle    0x140006d12
   140006c97:	jnp    0x140006d14
   140006c99:	jnp    0x140006c1c
   140006c9b:	jno    0x140006d07
   140006c9d:	add    BYTE PTR [rax],al
   140006c9f:	add    BYTE PTR [rax],al
   140006ca1:	push   0x71
   140006ca3:	add    DWORD PTR [rcx+0x2b21216e],0x2e2e2e2b
   140006cad:	cs cs rex.W
   140006cb0:	rex.W
   140006cb1:	rex.W
   140006cb2:	rex.W
   140006cb3:	rex.W
   140006cb4:	rex.W movlps xmm5,QWORD PTR [rsi+0x76]
   140006cb9:	add    DWORD PTR [rcx-0x7e7e7e7f],0x7e7e7e81
   140006cc3:	jle    0x140006d43
   140006cc5:	jle    0x140006d42
   140006cc7:	jle    0x140006d44
   140006cc9:	jnp    0x140006c4c
   140006ccb:	jno    0x140006d37
   140006ccd:	add    BYTE PTR [rax],al
   140006ccf:	add    BYTE PTR [rax],al
   140006cd1:	push   0x71
   140006cd3:	add    DWORD PTR [rcx+0x21211f6e],0x2e2b2b21
   140006cdd:	cs cs cs rex.RXB
   140006ce1:	rex.RXB
   140006ce2:	rex.W
   140006ce3:	rex.W
   140006ce4:	cmovs  rbp,QWORD PTR [rsi+0x76]
   140006ce9:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006cf3:	add    DWORD PTR [rcx+0x706f6481],0x6a71816f
   140006cfd:	add    BYTE PTR [rax],al
   140006cff:	add    BYTE PTR [rax],al
   140006d01:	push   0x71
   140006d03:	add    DWORD PTR [rcx+0x1f1f1f6e],0x22222121
   140006d0d:	cs cs cs cs sub eax,0x48484848
   140006d16:	movd   mm6,DWORD PTR [rsi-0x7f]
   140006d1a:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006d24:	add    DWORD PTR [rcx+0x6f6f7064],0x6a7181
   140006d2e:	add    BYTE PTR [rax],al
   140006d30:	add    BYTE PTR [rdx+0x71],ch
   140006d33:	add    DWORD PTR [rcx+0x1f1f166e],0x2221211f
   140006d3d:	and    ch,BYTE PTR [rsi]
   140006d3f:	cs cs cs cs rex.W
   140006d44:	rex.W
   140006d45:	rex.W
   140006d46:	rex.W outs dx,BYTE PTR ds:[rsi]
   140006d48:	jbe    0x140006ccb
   140006d4a:	xor    DWORD PTR [rbx+0x73],0x73737373
   140006d51:	jae    0x140006dc6
   140006d53:	add    DWORD PTR [rcx+0x70646381],0x6a71816f
   140006d5d:	add    BYTE PTR [rax],al
   140006d5f:	add    BYTE PTR [rax],al
   140006d61:	push   0x71
   140006d63:	add    DWORD PTR [rcx+0x1f16166e],0x221f1f1f
   140006d6d:	and    ah,BYTE PTR [rdx]
   140006d6f:	sub    ebp,DWORD PTR [rsi]
   140006d71:	cs cs cs rex.RXB sub eax,0x81766e48
   140006d7a:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006d84:	add    DWORD PTR [rcx+0x70646362],0x6a7181
   140006d8e:	add    BYTE PTR [rax],al
   140006d90:	add    BYTE PTR [rdx+0x71],ch
   140006d93:	add    DWORD PTR [rcx+0x1816556e],0x1f1f1f1f
   140006d9d:	and    ah,BYTE PTR [rdx]
   140006d9f:	and    ah,BYTE PTR [rdx]
   140006da1:	cs cs sub eax,0x6e472d2e
   140006da8:	jbe    0x140006d2b
   140006daa:	xor    DWORD PTR [rbx+0x73],0x73737373
   140006db1:	jae    0x140006e26
   140006db3:	add    DWORD PTR [rcx+0x63626981],0x6a718164
   140006dbd:	add    BYTE PTR [rax],al
   140006dbf:	add    BYTE PTR [rax],al
   140006dc1:	push   0x71
   140006dc3:	add    DWORD PTR [rcx+0x165b686e],0x1f1f1718
   140006dcd:	(bad)  
   140006dce:	(bad)  
   140006dcf:	and    ah,BYTE PTR [rdx]
   140006dd1:	and    ch,BYTE PTR [rsi]
   140006dd3:	cs cs sub eax,0x81766e2e
   140006dda:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006de4:	add    DWORD PTR [rcx+0x63626967],0x6a7181
   140006dee:	add    BYTE PTR [rax],al
   140006df0:	add    BYTE PTR [rdx+0x71],ch
   140006df3:	add    DWORD PTR [rcx+0x5b5f5f6e],0x1f17172a
   140006dfd:	(bad)  
   140006dfe:	(bad)  
   140006dff:	(bad)  
   140006e00:	and    ah,BYTE PTR [rdx]
   140006e02:	and    ah,BYTE PTR [rdx]
   140006e04:	cs cs sub eax,0x8181766e
   140006e0b:	jae    0x140006e80
   140006e0d:	jae    0x140006e82
   140006e0f:	jae    0x140006e84
   140006e11:	jae    0x140006e86
   140006e13:	add    DWORD PTR [rcx+0x69676681],0x6a718162
   140006e1d:	add    BYTE PTR [rax],al
   140006e1f:	add    BYTE PTR [rax],al
   140006e21:	push   0x71
   140006e23:	add    DWORD PTR [rcx+0x5b5f556e],0x18445b5f
   140006e2d:	(bad)  
   140006e2e:	(bad)  
   140006e2f:	(bad)  
   140006e30:	(bad)  
   140006e31:	and    DWORD PTR [rdx],esp
   140006e33:	and    ah,BYTE PTR [rdx]
   140006e35:	sub    ebp,DWORD PTR cs:[rsi+0x76]
   140006e39:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006e43:	add    DWORD PTR [rcx+0x67676581],0x6a718169
   140006e4d:	add    BYTE PTR [rax],al
   140006e4f:	add    BYTE PTR [rax],al
   140006e51:	push   0x71
   140006e53:	add    DWORD PTR [rcx+0x55544f6e],0x5b5b5554
   140006e5d:	rex.RB
   140006e5e:	rex.R (bad) 
   140006e60:	(bad)  
   140006e61:	(bad)  
   140006e62:	(bad)  
   140006e63:	and    ah,BYTE PTR [rdx]
   140006e65:	and    ch,BYTE PTR [rbx]
   140006e67:	outs   dx,BYTE PTR ds:[rsi]
   140006e68:	jbe    0x140006deb
   140006e6a:	xor    DWORD PTR [rbx+0x73],0x73737373
   140006e71:	jae    0x140006ee6
   140006e73:	add    DWORD PTR [rcx+0x66655b81],0x6a718167
   140006e7d:	add    BYTE PTR [rax],al
   140006e7f:	add    BYTE PTR [rax],al
   140006e81:	push   0x75
   140006e83:	add    DWORD PTR [rcx+0x444f436e],0x5353534f
   140006e8d:	push   rdi
   140006e8e:	push   rdi
   140006e8f:	push   rdi
   140006e90:	push   rdi
   140006e91:	pop    rax
   140006e92:	push   rdi
   140006e93:	rex.WR push rdi
   140006e95:	(bad)  
   140006e96:	(bad)  
   140006e97:	outs   dx,BYTE PTR ds:[rsi]
   140006e98:	jbe    0x140006e1b
   140006e9a:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006ea4:	add    DWORD PTR [rcx+0x66655b55],0x6a7581
   140006eae:	add    BYTE PTR [rax],al
   140006eb0:	add    BYTE PTR [rdx+0x75],ch
   140006eb3:	add    DWORD PTR [rcx+0x3e3b3b6e],0x44443b44
   140006ebd:	rex.R
   140006ebe:	rex.RB
   140006ebf:	rex.RB push r11
   140006ec1:	rex.WR push rdi
   140006ec3:	rex.WR
   140006ec4:	rex.WR
   140006ec5:	rex.WR
   140006ec6:	rex.WR outs dx,BYTE PTR ds:[rsi]
   140006ec8:	jbe    0x140006e4b
   140006eca:	xor    DWORD PTR [rbx+0x73],0x73737373
   140006ed1:	jae    0x140006f46
   140006ed3:	add    DWORD PTR [rcx+0x5e554f81],0x6a758165
   140006edd:	add    BYTE PTR [rax],al
   140006edf:	add    BYTE PTR [rax],al
   140006ee1:	push   0x75
   140006ee3:	add    DWORD PTR [rcx+0xa0a0a6e],0x3a3b3b0a
   140006eed:	cmp    bh,BYTE PTR [rdx]
   140006eef:	xor    ebp,DWORD PTR [rdx]
   140006ef1:	sub    ch,BYTE PTR [rdx]
   140006ef3:	xor    esi,DWORD PTR [rsp+rsi*1]
   140006ef6:	xor    al,0x6e
   140006ef8:	jbe    0x140006e7b
   140006efa:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006f04:	add    DWORD PTR [rcx+0x5b554f4f],0x6a7581
   140006f0e:	add    BYTE PTR [rax],al
   140006f10:	add    BYTE PTR [rdx+0x75],ch
   140006f13:	add    DWORD PTR [rcx+0x808066e],0x3b180308
   140006f1d:	sbb    BYTE PTR [rdi],ah
   140006f1f:	sbb    esp,DWORD PTR [rdi]
   140006f21:	(bad)  
   140006f22:	(bad)  
   140006f23:	sub    ah,BYTE PTR [rdx]
   140006f25:	xor    esi,DWORD PTR [rcx]
   140006f27:	outs   dx,BYTE PTR ds:[rsi]
   140006f28:	jbe    0x140006eab
   140006f2a:	xor    DWORD PTR [rbx+0x73],0x73737373
   140006f31:	jae    0x140006fa6
   140006f33:	add    DWORD PTR [rcx+0x4f4e4e81],0x6a75815a
   140006f3d:	add    BYTE PTR [rax],al
   140006f3f:	add    BYTE PTR [rax],al
   140006f41:	push   0x75
   140006f43:	add    DWORD PTR [rcx+0x404046e],0x1030601
   140006f4d:	sbb    BYTE PTR [rbx],al
   140006f4f:	sbb    BYTE PTR [rax],bl
   140006f51:	sbb    BYTE PTR [rax],ah
   140006f53:	and    BYTE PTR [rdi],ah
   140006f55:	(bad)  
   140006f56:	sub    ch,BYTE PTR [rsi+0x76]
   140006f59:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006f63:	add    DWORD PTR [rcx+0x4e4e4e81],0x6a75814f
   140006f6d:	add    BYTE PTR [rax],al
   140006f6f:	add    BYTE PTR [rax],al
   140006f71:	push   0x75
   140006f73:	add    DWORD PTR [rcx+0x6e6e6e6d],0x6e6e6e6e
   140006f7d:	outs   dx,BYTE PTR ds:[rsi]
   140006f7e:	outs   dx,BYTE PTR ds:[rsi]
   140006f7f:	outs   dx,BYTE PTR ds:[rsi]
   140006f80:	outs   dx,BYTE PTR ds:[rsi]
   140006f81:	outs   dx,BYTE PTR ds:[rsi]
   140006f82:	outs   dx,BYTE PTR ds:[rsi]
   140006f83:	outs   dx,BYTE PTR ds:[rsi]
   140006f84:	outs   dx,BYTE PTR ds:[rsi]
   140006f85:	outs   dx,BYTE PTR ds:[rsi]
   140006f86:	outs   dx,BYTE PTR ds:[rsi]
   140006f87:	ins    DWORD PTR es:[rdi],dx
   140006f88:	add    DWORD PTR [rcx+0x73737381],0x73737373
   140006f92:	jae    0x140006f15
   140006f94:	add    DWORD PTR [rcx+0x4f4e4e4f],0x6a7581
   140006f9e:	add    BYTE PTR [rax],al
   140006fa0:	add    BYTE PTR [rdx+0x75],ch
   140006fa3:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006fad:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006fb7:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006fc1:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006fcb:	jne    0x140007037
   140006fcd:	add    BYTE PTR [rax],al
   140006fcf:	add    BYTE PTR [rax],al
   140006fd1:	push   0x75
   140006fd3:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006fdd:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006fe7:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006ff1:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140006ffb:	jne    0x140007067
   140006ffd:	add    BYTE PTR [rax],al
   140006fff:	add    BYTE PTR [rax],al
   140007001:	push   0x75
   140007003:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   14000700d:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140007017:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   140007021:	add    DWORD PTR [rcx-0x7e7e7e7f],0x81818181
   14000702b:	jne    0x140007097
   14000702d:	add    BYTE PTR [rax],al
   14000702f:	add    BYTE PTR [rax],al
   140007031:	push   0x75
   140007033:	jb     0x1400070a7
   140007035:	jb     0x1400070a9
   140007037:	jb     0x1400070ab
   140007039:	jb     0x1400070ad
   14000703b:	jb     0x1400070af
   14000703d:	jb     0x1400070b1
   14000703f:	jb     0x1400070b3
   140007041:	jb     0x1400070b5
   140007043:	jb     0x1400070b7
   140007045:	jb     0x1400070b9
   140007047:	jb     0x1400070bb
   140007049:	jb     0x1400070bd
   14000704b:	jb     0x1400070bf
   14000704d:	jb     0x1400070c1
   14000704f:	jb     0x1400070c3
   140007051:	jb     0x1400070c5
   140007053:	jb     0x1400070c7
   140007055:	jb     0x1400070c9
   140007057:	jb     0x1400070cb
   140007059:	jb     0x1400070cd
   14000705b:	jne    0x1400070c7
   14000705d:	add    BYTE PTR [rax],al
   14000705f:	add    BYTE PTR [rax],al
   140007061:	push   0x75
   140007063:	jne    0x1400070da
   140007065:	jne    0x1400070dc
   140007067:	jne    0x1400070de
   140007069:	jne    0x1400070e0
   14000706b:	jne    0x1400070e2
   14000706d:	jne    0x1400070e4
   14000706f:	jne    0x1400070e6
   140007071:	jne    0x1400070e8
   140007073:	jne    0x1400070ea
   140007075:	jne    0x1400070ec
   140007077:	jne    0x1400070ee
   140007079:	jne    0x1400070f0
   14000707b:	jne    0x1400070f2
   14000707d:	jne    0x1400070f4
   14000707f:	jne    0x1400070f6
   140007081:	jne    0x1400070f8
   140007083:	jne    0x1400070fa
   140007085:	jne    0x1400070fc
   140007087:	jne    0x1400070fe
   140007089:	jne    0x140007100
   14000708b:	jne    0x1400070f7
   14000708d:	add    BYTE PTR [rax],al
   14000708f:	add    BYTE PTR [rax],al
   140007091:	push   0x75
   140007093:	jne    0x14000710a
   140007095:	jne    0x14000710c
   140007097:	jne    0x14000710e
   140007099:	jne    0x140007110
   14000709b:	jne    0x140007112
   14000709d:	jne    0x140007114
   14000709f:	jne    0x140007116
   1400070a1:	jne    0x140007118
   1400070a3:	jne    0x14000711a
   1400070a5:	jne    0x14000711c
   1400070a7:	jne    0x14000711e
   1400070a9:	jne    0x140007120
   1400070ab:	jne    0x140007122
   1400070ad:	jne    0x140007124
   1400070af:	jne    0x140007126
   1400070b1:	or     ecx,DWORD PTR [rbx]
   1400070b3:	jne    0x14000712a
   1400070b5:	or     ecx,DWORD PTR [rbx]
   1400070b7:	jne    0x14000712e
   1400070b9:	or     ecx,DWORD PTR [rbx]
   1400070bb:	jne    0x140007127
   1400070bd:	add    BYTE PTR [rax],al
   1400070bf:	add    BYTE PTR [rax],al
   1400070c1:	add    BYTE PTR [rdx+0x6a],ch
   1400070c4:	push   0x6a
   1400070c6:	push   0x6a
   1400070c8:	push   0x6a
   1400070ca:	push   0x6a
   1400070cc:	push   0x6a
   1400070ce:	push   0x6a
   1400070d0:	push   0x6a
   1400070d2:	push   0x6a
   1400070d4:	push   0x6a
   1400070d6:	push   0x6a
   1400070d8:	push   0x6a
   1400070da:	push   0x6a
   1400070dc:	push   0x6a
   1400070de:	push   0x6a
   1400070e0:	push   0x6a
   1400070e2:	push   0x6a
   1400070e4:	push   0x6a
   1400070e6:	push   0x6a
   1400070e8:	push   0x6a
   1400070ea:	push   0x6a
	...
   1400071e0:	(bad)  
   1400071e1:	(bad)  
   1400071e2:	(bad)  
   1400071e3:	(bad)  
   1400071e4:	(bad)  
   1400071e5:	inc    DWORD PTR [rax]
   1400071e7:	add    bh,bh
   1400071e9:	(bad)  
   1400071ea:	(bad)  
   1400071eb:	(bad)  
   1400071ec:	(bad)  
   1400071ed:	inc    DWORD PTR [rax]
   1400071ef:	add    bh,bh
   1400071f1:	(bad)  
   1400071f2:	(bad)  
   1400071f3:	(bad)  
   1400071f4:	(bad)  
   1400071f5:	inc    DWORD PTR [rax]
   1400071f7:	add    bh,bh
   1400071f9:	(bad)  
   1400071fa:	(bad)  
   1400071fb:	(bad)  
   1400071fc:	(bad)  
   1400071fd:	inc    DWORD PTR [rax]
   1400071ff:	add    bh,bh
   140007201:	(bad)  
   140007202:	(bad)  
   140007203:	(bad)  
   140007204:	(bad)  
   140007205:	inc    DWORD PTR [rax]
   140007207:	add    bh,bh
   140007209:	(bad)  
   14000720a:	(bad)  
   14000720b:	(bad)  
   14000720c:	(bad)  
   14000720d:	inc    DWORD PTR [rax]
   14000720f:	add    bh,bh
   140007211:	(bad)  
   140007212:	(bad)  
   140007213:	(bad)  
   140007214:	(bad)  
   140007215:	inc    DWORD PTR [rax]
   140007217:	add    al,al
   140007219:	add    BYTE PTR [rax],al
   14000721b:	add    BYTE PTR [rax],al
   14000721d:	sldt   WORD PTR [rax]
   140007220:	add    BYTE PTR [rax],0x0
   140007223:	add    BYTE PTR [rax],al
   140007225:	(bad)  
   140007226:	add    BYTE PTR [rax],al
   140007228:	add    BYTE PTR [rax],0x0
   14000722b:	add    BYTE PTR [rax],al
   14000722d:	(bad)  
   14000722e:	add    BYTE PTR [rax],al
   140007230:	add    BYTE PTR [rax],0x0
   140007233:	add    BYTE PTR [rax],al
   140007235:	(bad)  
   140007236:	add    BYTE PTR [rax],al
   140007238:	add    BYTE PTR [rax],0x0
   14000723b:	add    BYTE PTR [rax],al
   14000723d:	(bad)  
   14000723e:	add    BYTE PTR [rax],al
   140007240:	add    BYTE PTR [rax],0x0
   140007243:	add    BYTE PTR [rax],al
   140007245:	(bad)  
   140007246:	add    BYTE PTR [rax],al
   140007248:	add    BYTE PTR [rax],0x0
   14000724b:	add    BYTE PTR [rax],al
   14000724d:	(bad)  
   14000724e:	add    BYTE PTR [rax],al
   140007250:	add    BYTE PTR [rax],0x0
   140007253:	add    BYTE PTR [rax],al
   140007255:	(bad)  
   140007256:	add    BYTE PTR [rax],al
   140007258:	add    BYTE PTR [rax],0x0
   14000725b:	add    BYTE PTR [rax],al
   14000725d:	(bad)  
   14000725e:	add    BYTE PTR [rax],al
   140007260:	add    BYTE PTR [rax],0x0
   140007263:	add    BYTE PTR [rax],al
   140007265:	(bad)  
   140007266:	add    BYTE PTR [rax],al
   140007268:	add    BYTE PTR [rax],0x0
   14000726b:	add    BYTE PTR [rax],al
   14000726d:	(bad)  
   14000726e:	add    BYTE PTR [rax],al
   140007270:	add    BYTE PTR [rax],0x0
   140007273:	add    BYTE PTR [rax],al
   140007275:	(bad)  
   140007276:	add    BYTE PTR [rax],al
   140007278:	add    BYTE PTR [rax],0x0
   14000727b:	add    BYTE PTR [rax],al
   14000727d:	(bad)  
   14000727e:	add    BYTE PTR [rax],al
   140007280:	add    BYTE PTR [rax],0x0
   140007283:	add    BYTE PTR [rax],al
   140007285:	(bad)  
   140007286:	add    BYTE PTR [rax],al
   140007288:	add    BYTE PTR [rax],0x0
   14000728b:	add    BYTE PTR [rax],al
   14000728d:	(bad)  
   14000728e:	add    BYTE PTR [rax],al
   140007290:	add    BYTE PTR [rax],0x0
   140007293:	add    BYTE PTR [rax],al
   140007295:	(bad)  
   140007296:	add    BYTE PTR [rax],al
   140007298:	add    BYTE PTR [rax],0x0
   14000729b:	add    BYTE PTR [rax],al
   14000729d:	(bad)  
   14000729e:	add    BYTE PTR [rax],al
   1400072a0:	add    BYTE PTR [rax],0x0
   1400072a3:	add    BYTE PTR [rax],al
   1400072a5:	(bad)  
   1400072a6:	add    BYTE PTR [rax],al
   1400072a8:	add    BYTE PTR [rax],0x0
   1400072ab:	add    BYTE PTR [rax],al
   1400072ad:	(bad)  
   1400072ae:	add    BYTE PTR [rax],al
   1400072b0:	add    BYTE PTR [rax],0x0
   1400072b3:	add    BYTE PTR [rax],al
   1400072b5:	(bad)  
   1400072b6:	add    BYTE PTR [rax],al
   1400072b8:	add    BYTE PTR [rax],0x0
   1400072bb:	add    BYTE PTR [rax],al
   1400072bd:	(bad)  
   1400072be:	add    BYTE PTR [rax],al
   1400072c0:	add    BYTE PTR [rax],0x0
   1400072c3:	add    BYTE PTR [rax],al
   1400072c5:	(bad)  
   1400072c6:	add    BYTE PTR [rax],al
   1400072c8:	add    BYTE PTR [rax],0x0
   1400072cb:	add    BYTE PTR [rax],al
   1400072cd:	(bad)  
   1400072ce:	add    BYTE PTR [rax],al
   1400072d0:	add    BYTE PTR [rax],0x0
   1400072d3:	add    BYTE PTR [rax],al
   1400072d5:	(bad)  
   1400072d6:	add    BYTE PTR [rax],al
   1400072d8:	add    BYTE PTR [rax],0x0
   1400072db:	add    BYTE PTR [rax],al
   1400072dd:	(bad)  
   1400072de:	add    BYTE PTR [rax],al
   1400072e0:	add    BYTE PTR [rax],0x0
   1400072e3:	add    BYTE PTR [rax],al
   1400072e5:	(bad)  
   1400072e6:	add    BYTE PTR [rax],al
   1400072e8:	add    BYTE PTR [rax],0x0
   1400072eb:	add    BYTE PTR [rax],al
   1400072ed:	(bad)  
   1400072ee:	add    BYTE PTR [rax],al
   1400072f0:	add    BYTE PTR [rax],0x0
   1400072f3:	add    BYTE PTR [rax],al
   1400072f5:	(bad)  
   1400072f6:	add    BYTE PTR [rax],al
   1400072f8:	add    BYTE PTR [rax],0x0
   1400072fb:	add    BYTE PTR [rax],al
   1400072fd:	(bad)  
   1400072fe:	add    BYTE PTR [rax],al
   140007300:	add    BYTE PTR [rax],0x0
   140007303:	add    BYTE PTR [rax],al
   140007305:	(bad)  
   140007306:	add    BYTE PTR [rax],al
   140007308:	add    BYTE PTR [rax],0x0
   14000730b:	add    BYTE PTR [rax],al
   14000730d:	(bad)  
   14000730e:	add    BYTE PTR [rax],al
   140007310:	add    BYTE PTR [rax],0x0
   140007313:	add    BYTE PTR [rax],al
   140007315:	(bad)  
   140007316:	add    BYTE PTR [rax],al
   140007318:	add    BYTE PTR [rax],0x0
   14000731b:	add    BYTE PTR [rax],al
   14000731d:	(bad)  
   14000731e:	add    BYTE PTR [rax],al
   140007320:	add    BYTE PTR [rax],0x0
   140007323:	add    BYTE PTR [rax],al
   140007325:	(bad)  
   140007326:	add    BYTE PTR [rax],al
   140007328:	add    BYTE PTR [rax],0x0
   14000732b:	add    BYTE PTR [rax],al
   14000732d:	(bad)  
   14000732e:	add    BYTE PTR [rax],al
   140007330:	rol    BYTE PTR [rax],0x0
   140007333:	add    BYTE PTR [rax],al
   140007335:	sldt   WORD PTR [rax]
   140007338:	(bad)  
   140007339:	(bad)  
   14000733a:	(bad)  
   14000733b:	(bad)  
   14000733c:	(bad)  
   14000733d:	inc    DWORD PTR [rax]
   14000733f:	add    bh,bh
   140007341:	(bad)  
   140007342:	(bad)  
   140007343:	(bad)  
   140007344:	(bad)  
   140007345:	inc    DWORD PTR [rax]
   140007347:	add    bh,bh
   140007349:	(bad)  
   14000734a:	(bad)  
   14000734b:	(bad)  
   14000734c:	(bad)  
   14000734d:	inc    DWORD PTR [rax]
   14000734f:	add    bh,bh
   140007351:	(bad)  
   140007352:	(bad)  
   140007353:	(bad)  
   140007354:	(bad)  
   140007355:	inc    DWORD PTR [rax]
   140007357:	add    bh,bh
   140007359:	(bad)  
   14000735a:	(bad)  
   14000735b:	(bad)  
   14000735c:	(bad)  
   14000735d:	inc    DWORD PTR [rax]
   14000735f:	add    BYTE PTR [rax],ch
   140007361:	add    BYTE PTR [rax],al
   140007363:	add    BYTE PTR [rax],ah
   140007365:	add    BYTE PTR [rax],al
   140007367:	add    BYTE PTR [rax+0x0],al
   14000736a:	add    BYTE PTR [rax],al
   14000736c:	add    DWORD PTR [rax],eax
   14000736e:	or     BYTE PTR [rax],al
   140007370:	add    BYTE PTR [rax],al
   140007372:	add    BYTE PTR [rax],al
   140007374:	add    BYTE PTR [rax+rax*1],al
	...
   14000737f:	add    BYTE PTR [rax],al
   140007381:	add    DWORD PTR [rax],eax
   140007383:	add    BYTE PTR [rax],al
   140007385:	add    DWORD PTR [rax],eax
   140007387:	add    BYTE PTR [rax],al
   140007389:	add    BYTE PTR [rax],al
   14000738b:	add    BYTE PTR [rax-0x54ffc396],ah
   140007391:	jle    0x1400073e8
   140007393:	add    BYTE PTR [rbp+rdi*2+0x79910054],ch
   14000739a:	push   0x5ba57f00
   14000739f:	add    BYTE PTR [rsi-0x5a],bh
   1400073a2:	pop    rsp
   1400073a3:	add    BYTE PTR [rdx-0x56],bh
   1400073a6:	pop    rsi
   1400073a7:	add    BYTE PTR [rax+rbp*4+0x5d],bh
   1400073ab:	add    BYTE PTR [rsi-0x52],dh
   1400073ae:	(bad)  
   1400073af:	add    BYTE PTR [rcx-0x55],bh
   1400073b2:	(bad)  
   1400073b3:	add    BYTE PTR [rax-0x54],bh
   1400073b6:	(bad)  
   1400073b7:	add    BYTE PTR [rsi-0x4a],ch
   1400073ba:	imul   eax,DWORD PTR [rax],0x65b272
   1400073c0:	je     0x140007373
   1400073c2:	add    BYTE PTR fs:[rbp-0x6affb87e],dl
   1400073c9:	test   BYTE PTR [rdi+0x0],al
   1400073cc:	xchg   esp,eax
   1400073cd:	xchg   BYTE PTR [rax+0x0],cl
   1400073d0:	cdq    
   1400073d1:	test   DWORD PTR [rax+rax*1-0x6e],ecx
   1400073d5:	mov    DWORD PTR [rdx+0x0],ecx
   1400073d8:	xchg   ecx,eax
   1400073d9:	mov    WORD PTR [rbx+0x0],cs
   1400073dc:	nop
   1400073dd:	mov    cs,WORD PTR [rax+rax*1-0x65]
   1400073e1:	mov    BYTE PTR [rdi+0x0],cl
   1400073e4:	mov    ss,WORD PTR [rcx-0x6b72ffb2]
   1400073ea:	rex.WRXB add BYTE PTR [r11-0x73ffae6a],r9b
   1400073f1:	xchg   ebp,eax
   1400073f2:	push   rax
   1400073f3:	add    BYTE PTR [rsi-0x76ffaa63],al
   1400073f9:	cdq    
   1400073fa:	push   rdx
   1400073fb:	add    BYTE PTR [rax-0x56ffab65],cl
   140007401:	adc    DWORD PTR [rsi+0x0],0x5886a8
   140007408:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140007409:	mov    ebx,DWORD PTR [rbx+0x0]
   14000740c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000740d:	lea    ebx,[rbx+0x0]
   140007410:	movabs ds:0x820057a084005d92,al
   140007419:	movabs ds:0x9b9f005aa4800058,al
   140007422:	movsxd eax,DWORD PTR [rax]
   140007424:	popf   
   140007425:	pushf  
   140007426:	(bad)  
   140007427:	add    BYTE PTR [rdi-0x51ff9d75],ch
   14000742d:	mov    fs,WORD PTR [rax+rax*1-0x50]
   140007431:	mov    DWORD PTR [rcx+0x0],esp
   140007434:	lods   al,BYTE PTR ds:[rsi]
   140007435:	xchg   edx,eax
   140007436:	add    BYTE PTR gs:[rcx-0x59ff9a6b],ch
   14000743d:	sahf   
   14000743e:	push   0x0
   140007440:	test   eax,0xa8006999
   140007445:	pushf  
   140007446:	push   0x0
   140007448:	stos   DWORD PTR es:[rdi],eax
   140007449:	lahf   
   14000744a:	outs   dx,DWORD PTR ds:[rsi]
   14000744b:	add    BYTE PTR [rbp-0x4cff916d],dh
   140007451:	xchg   edi,eax
   140007452:	outs   dx,DWORD PTR ds:[rsi]
   140007453:	add    BYTE PTR [rbp+rdx*4-0x654cff92],dh
   14000745a:	jno    0x14000745c
   14000745c:	mov    al,0x9e
   14000745e:	jb     0x140007460
   140007460:	mov    eax,0x9c00799e
   140007465:	movabs al,ds:0xa5ad0074a1af0064
   14000746e:	jne    0x140007470
   140007470:	stos   DWORD PTR es:[rdi],eax
   140007471:	test   eax,0xa1b70078
   140007476:	jp     0x140007478
   140007478:	mov    dh,0xa4
   14000747a:	jl     0x14000747c
   14000747c:	mov    ecx,0x88007fa5
   140007481:	test   BYTE PTR [rcx-0x7a787500],al
   140007487:	add    BYTE PTR [rbx-0x72ff7877],cl
   14000748d:	mov    DWORD PTR [rsi-0x77757200],eax
   140007493:	add    BYTE PTR [rdi-0x6eff7674],cl
   140007499:	mov    cs,WORD PTR [rax+rax*1+0x82a6bc]
   1400074a0:	lods   eax,DWORD PTR ds:[rsi]
   1400074a1:	movabs ds:0xbac600adaeb100a1,al
   1400074aa:	mov    edx,0xbcbdd100
   1400074af:	add    ah,al
   1400074b1:	rol    eax,0x0
   1400074b4:	retf   
   1400074b5:	leave  
   1400074b6:	mov    DWORD PTR [rax],0xcbcbcb
   1400074bc:	int3   
   1400074bd:	retf   0xc8
   1400074c0:	int    0xcc
   1400074c2:	retf   0xde00
   1400074c5:	xlat   BYTE PTR ds:[rbx]
   1400074c6:	rol    DWORD PTR [rax],1
   1400074c8:	out    0xde,al
   1400074ca:	fadd   DWORD PTR [rax]
   1400074cc:	out    0xe6,al
   1400074ce:	out    0x0,eax
   1400074d0:	in     eax,dx
   1400074d1:	in     eax,dx
   1400074d2:	in     eax,dx
   1400074d3:	add    bh,dh
   1400074d5:	repnz out dx,eax
   1400074d7:	add    dh,ch
   1400074d9:	out    dx,eax
   1400074da:	lock add bh,ch
   1400074dd:	lock icebp 
   1400074df:	add    al,dh
   1400074e1:	icebp  
   1400074e2:	icebp  
   1400074e3:	add    bh,dh
   1400074e5:	repz icebp 
   1400074e7:	add    dh,dh
   1400074e9:	hlt    
   1400074ea:	repnz add dl,dh
   1400074ed:	repz cmc 
   1400074ef:	add    bl,dh
   1400074f1:	hlt    
   1400074f2:	hlt    
   1400074f3:	add    ah,dh
   1400074f5:	cmc    
   1400074f6:	test   BYTE PTR [rax],0xf8
   1400074f9:	div    ch
   1400074fb:	add    bl,bh
   1400074fd:	stc    
   1400074fe:	test   BYTE PTR [rax],0xf2
   140007501:	idiv   al
   140007503:	add    ch,dh
   140007505:	idiv   al
   140007507:	add    dh,dh
   140007509:	clc    
   14000750a:	clc    
   14000750b:	add    ch,dh
   14000750d:	cli    
   14000750e:	std    
   14000750f:	add    bh,dh
   140007511:	cld    
   140007512:	inc    DWORD PTR [rax]
   140007514:	clc    
   140007515:	clc    
   140007516:	stc    
   140007517:	add    ah,bh
   140007519:	cld    
   14000751a:	sti    
   14000751b:	add    dl,bh
   14000751d:	sti    
   14000751e:	cld    
   14000751f:	add    cl,bh
   140007521:	(bad)  
   140007522:	inc    DWORD PTR [rax]
   140007524:	(bad)  
   140007525:	(bad)  
   140007526:	inc    BYTE PTR [rax]
	...
   140007784:	(bad)  
   140007785:	(bad)  
   140007786:	inc    DWORD PTR [rax]
	...
   140007808:	rex.WX
   140007809:	ds ds ds ds ds ds ds ds ds ds ds ds ds ds
   140007817:	ds ds rex.B
   14000781a:	rex.XB
   14000781b:	rex.B
   14000781c:	ds ds ds ds ds ds ds ds rex.RXB add BYTE PTR ds:[r8],r8b
   140007828:	ds push rbx
   14000782a:	pop    rbp
   14000782b:	pop    rbp
   14000782c:	pop    rbp
   14000782d:	pop    rbp
   14000782e:	pop    rbp
   14000782f:	pop    rbp
   140007830:	pop    rbp
   140007831:	pop    rbp
   140007832:	pop    rbp
   140007833:	pop    rbp
   140007834:	pop    rbp
   140007835:	pop    rbp
   140007836:	pop    rbp
   140007837:	pop    rbp
   140007838:	pop    rbp
   140007839:	pop    rbp
   14000783a:	pop    rbp
   14000783b:	pop    rbp
   14000783c:	pop    rbp
   14000783d:	pop    rbp
   14000783e:	pop    rbp
   14000783f:	pop    rbp
   140007840:	pop    rbp
   140007841:	pop    rbp
   140007842:	pop    rbp
   140007843:	pop    rbp
   140007844:	pop    rbp
   140007845:	add    BYTE PTR ds:[rax],al
   140007848:	ds push rbx
   14000784a:	pop    rbp
   14000784b:	pop    rbp
   14000784c:	(bad)  
   14000784d:	pop    rbp
   14000784e:	(bad)  
   14000784f:	(bad)  
   140007850:	(bad)  
   140007851:	pop    rbp
   140007852:	pop    rbp
   140007853:	pop    rbp
   140007854:	pop    rbp
   140007855:	pop    rbp
   140007856:	pop    rbp
   140007857:	(bad)  
   140007858:	(bad)  
   140007859:	(bad)  
   14000785a:	(bad)  
   14000785b:	pop    rdi
   14000785c:	pop    rdi
   14000785d:	pop    rdi
   14000785e:	pop    rdi
   14000785f:	push   rdx
   140007860:	pop    rdi
   140007861:	push   rdx
   140007862:	pop    rdi
   140007863:	push   rbp
   140007864:	pop    rbp
   140007865:	add    BYTE PTR ds:[rax],al
   140007868:	ds pop rdi
   14000786a:	pop    rbp
   14000786b:	pop    rbp
   14000786c:	push   rcx
   14000786d:	push   rcx
   14000786e:	push   rcx
   14000786f:	push   rcx
   140007870:	push   rcx
   140007871:	push   rcx
   140007872:	push   rdx
   140007873:	push   rcx
   140007874:	push   rdx
   140007875:	push   rcx
   140007876:	push   rcx
   140007877:	push   rcx
   140007878:	pop    rdi
   140007879:	(bad)  
   14000787a:	(bad)  
   14000787b:	pop    rdi
   14000787c:	pop    rdi
   14000787d:	push   rbx
   14000787e:	push   rsp
   14000787f:	push   rsp
   140007880:	push   rdx
   140007881:	push   rdx
   140007882:	push   rdx
   140007883:	push   rdx
   140007884:	pop    rbp
   140007885:	add    BYTE PTR ds:[rax],al
   140007888:	ds pop rsp
   14000788a:	pop    rbp
   14000788b:	rex.RX
   14000788c:	rex.WB
   14000788d:	rex.WB
   14000788e:	rex.WB
   14000788f:	rex.WB
   140007890:	rex.WB
   140007891:	rex.WB
   140007892:	rex.WB
   140007893:	rex.WB
   140007894:	rex.WB
   140007895:	rex.WB
   140007896:	rex.RX push rcx
   140007898:	(bad)  
   140007899:	rex.WR
   14000789a:	rex.WR
   14000789b:	rex.WR
   14000789c:	rex.WR
   14000789d:	rex.WR
   14000789e:	rex.WR pop rdi
   1400078a0:	push   rsp
   1400078a1:	push   rdx
   1400078a2:	push   rdx
   1400078a3:	push   rdx
   1400078a4:	pop    rbp
   1400078a5:	add    BYTE PTR ds:[rax],al
   1400078a8:	ds pop rdi
   1400078aa:	pop    rbp
   1400078ab:	rex.WB and al,0x24
   1400078ae:	and    al,0xa
   1400078b0:	or     cl,BYTE PTR [rdx]
   1400078b2:	or     DWORD PTR [rcx],ecx
   1400078b4:	or     eax,0x6051490c
   1400078b9:	(bad)  
   1400078ba:	(bad)  
   1400078bb:	(bad)  
   1400078bc:	pop    rsp
   1400078bd:	(bad)  
   1400078be:	pop    rdi
   1400078bf:	(bad)  
   1400078c0:	pop    rdi
   1400078c1:	push   rbp
   1400078c2:	push   rdx
   1400078c3:	push   rdx
   1400078c4:	pop    rbp
   1400078c5:	add    BYTE PTR ds:[rax],al
   1400078c8:	ds pop rsp
   1400078ca:	pop    rbp
   1400078cb:	rex.WB sbb rax,0x24242424
   1400078d1:	or     cl,BYTE PTR [rdx]
   1400078d3:	or     cl,BYTE PTR [rsi]
   1400078d5:	(bad)  
   1400078d6:	rex.WB push r9
   1400078d8:	pop    rsi
   1400078d9:	rex.WR
   1400078da:	rex.WR
   1400078db:	rex.WR
   1400078dc:	rex.WR
   1400078dd:	rex.WR
   1400078de:	rex.WR pop rdi
   1400078e0:	pop    rdi
   1400078e1:	pop    rdi
   1400078e2:	push   rdx
   1400078e3:	push   rdx
   1400078e4:	pop    rbp
   1400078e5:	add    BYTE PTR ds:[rax],al
   1400078e8:	ds pop rdi
   1400078ea:	pop    rbp
   1400078eb:	rex.WB sbb rax,0x24241d1d
   1400078f1:	and    al,0xa
   1400078f3:	or     cl,BYTE PTR [rdx]
   1400078f5:	or     DWORD PTR [rcx+0x51],ecx
   1400078f8:	(bad)  
   1400078f9:	pop    rdi
   1400078fa:	(bad)  
   1400078fb:	(bad)  
   1400078fc:	(bad)  
   1400078fd:	pop    rsp
   1400078fe:	(bad)  
   1400078ff:	pop    rsp
   140007900:	pop    rdi
   140007901:	push   rbx
   140007902:	push   rdx
   140007903:	push   rbp
   140007904:	pop    rbp
   140007905:	add    BYTE PTR ds:[rax],al
   140007908:	ds pop rsp
   14000790a:	pop    rbp
   14000790b:	rex.WB sbb BYTE PTR [r9],bl
   14000790e:	sbb    eax,0x2424241d
   140007913:	and    al,0xa
   140007915:	or     cl,BYTE PTR [rcx+0x51]
   140007918:	(bad)  
   140007919:	(bad)  
   14000791a:	(bad)  
   14000791b:	(bad)  
   14000791c:	movsxd esp,DWORD PTR [rcx+0x5c]
   14000791f:	(bad)  
   140007920:	pop    rdi
   140007921:	pop    rdi
   140007922:	(bad)  
   140007923:	pop    rbp
   140007924:	pop    rbp
   140007925:	add    BYTE PTR ds:[rax],al
   140007928:	ds pop rdi
   14000792a:	pop    rbp
   14000792b:	rex.WB sbb BYTE PTR [r8],bl
   14000792e:	sbb    DWORD PTR [rip+0x24241b1d],ebx        # 0x164249451
   140007934:	and    al,0x7
   140007936:	rex.WB push r9
   140007938:	(bad)  
   140007939:	rex.WR
   14000793a:	rex.WR
   14000793b:	rex.WR
   14000793c:	rex.WR
   14000793d:	rex.WR
   14000793e:	rex.WR pop rsp
   140007940:	pop    rbp
   140007941:	(bad)  
   140007942:	pop    rdi
   140007943:	(bad)  
   140007944:	pop    rbp
   140007945:	add    BYTE PTR ds:[rax],al
   140007948:	ds push rbx
   14000794a:	pop    rbp
   14000794b:	adc    rdx,QWORD PTR [r11]
   14000794e:	sbb    BYTE PTR [rcx],bl
   140007950:	sbb    eax,0x24241d1d
   140007955:	and    al,0x49
   140007957:	push   rcx
   140007958:	(bad)  
   140007959:	(bad)  
   14000795a:	(bad)  
   14000795b:	(bad)  
   14000795c:	(bad)  
   14000795d:	movsxd esp,DWORD PTR [rcx+0x5f]
   140007960:	(bad)  
   140007961:	pop    rsp
   140007962:	pop    rbp
   140007963:	pop    rdi
   140007964:	pop    rbp
   140007965:	add    BYTE PTR ds:[rax],al
   140007968:	ds pop rdi
   14000796a:	pop    rbp
   14000796b:	adc    QWORD PTR [r11],rdx
   14000796e:	adc    eax,0x1d1d1515
   140007973:	sbb    eax,0x51492424
   140007978:	(bad)  
   140007979:	rex.WR
   14000797a:	rex.WR
   14000797b:	rex.WR
   14000797c:	rex.WR
   14000797d:	rex.WR
   14000797e:	rex.WR pop rbp
   140007980:	(bad)  
   140007981:	or     al,0xc
   140007983:	pop    rbp
   140007984:	pop    rbp
   140007985:	add    BYTE PTR ds:[rax],al
   140007988:	ds pop rdi
   14000798a:	push   rdi
   14000798b:	rex.WB adc BYTE PTR [r9],dl
   14000798e:	adc    edx,DWORD PTR [rip+0x1d191715]        # 0x15d1990a9
   140007994:	sbb    eax,0x6051491d
   140007999:	(bad)  
   14000799a:	pop    rdi
   14000799b:	(bad)  
   14000799c:	(bad)  
   14000799d:	pop    rsp
   14000799e:	(bad)  
   14000799f:	(bad)  
   1400079a0:	(bad)  
   1400079a1:	or     al,0xc
   1400079a3:	(bad)  
   1400079a4:	pop    rbp
   1400079a5:	add    BYTE PTR ds:[rax],al
   1400079a8:	ds push rbx
   1400079aa:	pop    rbp
   1400079ab:	rex.WB xor rax,0x13131012
   1400079b1:	adc    eax,0x1d191915
   1400079b6:	rex.WB push r9
   1400079b8:	(bad)  
   1400079b9:	rex.WR
   1400079ba:	rex.WR
   1400079bb:	rex.WR
   1400079bc:	rex.WR
   1400079bd:	rex.WR
   1400079be:	rex.WR (bad) 
   1400079c0:	pop    rsp
   1400079c1:	and    al,0xc
   1400079c3:	(bad)  
   1400079c4:	pop    rbp
   1400079c5:	add    BYTE PTR ds:[rax],al
   1400079c8:	ds pop rdi
   1400079ca:	pop    rbp
   1400079cb:	rex.WB
   1400079cc:	rex.RB cmp eax,0x1313162c
   1400079d2:	adc    edx,DWORD PTR [rip+0x51491919]        # 0x1914992f1
   1400079d8:	(bad)  
   1400079d9:	(bad)  
   1400079da:	(bad)  
   1400079db:	(bad)  
   1400079dc:	(bad)  
   1400079dd:	(bad)  
   1400079de:	(bad)  
   1400079df:	pop    rsp
   1400079e0:	(bad)  
   1400079e1:	sbb    eax,0x3e5d6124
   1400079e6:	add    BYTE PTR [rax],al
   1400079e8:	ds pop rdi
   1400079ea:	pop    rbp
   1400079eb:	rex.WB
   1400079ec:	ss cmp edi,DWORD PTR ss:[rbx]
   1400079f0:	cmp    BYTE PTR [rax],dh
   1400079f2:	sub    eax,0x49372626
   1400079f7:	push   rcx
   1400079f8:	(bad)  
   1400079f9:	rex.WR
   1400079fa:	rex.WR
   1400079fb:	rex.WR
   1400079fc:	rex.WR
   1400079fd:	rex.WR
   1400079fe:	rex.WR (bad) 
   140007a00:	pop    rsp
   140007a01:	adc    BYTE PTR [rcx],bl
   140007a03:	pop    rbp
   140007a04:	pop    rbp
   140007a05:	add    BYTE PTR ds:[rax],al
   140007a08:	ds pop rbp
   140007a0a:	pop    rbp
   140007a0b:	xor    QWORD PTR [r9],rsi
   140007a0e:	xor    dh,BYTE PTR [rip+0x30383835]        # 0x17038b249
   140007a14:	cmp    bh,BYTE PTR [rdx]
   140007a16:	rex.WB push r9
   140007a18:	(bad)  
   140007a19:	(bad)  
   140007a1a:	(bad)  
   140007a1b:	(bad)  
   140007a1c:	(bad)  
   140007a1d:	(bad)  
   140007a1e:	pop    rsp
   140007a1f:	(bad)  
   140007a20:	movsxd eax,DWORD PTR [rcx]
   140007a22:	adc    BYTE PTR [rcx+0x5d],ah
   140007a25:	add    BYTE PTR ds:[rax],al
   140007a28:	rex.XB pop r13
   140007a2a:	pop    rbp
   140007a2b:	rex.WB sub bpl,BYTE PTR [r10]
   140007a2e:	sub    ch,BYTE PTR [rdx]
   140007a30:	sub    al,0x2b
   140007a32:	cs cs cs sub eax,0x4c605149
   140007a3a:	rex.WR
   140007a3b:	rex.WR
   140007a3c:	rex.WR
   140007a3d:	rex.WR
   140007a3e:	movsxd r12,DWORD PTR [rcx+0x1]
   140007a42:	add    DWORD PTR [rdi+0x5d],ebx
   140007a45:	add    BYTE PTR ds:[rax],al
   140007a48:	rex.XB pop r13
   140007a4a:	pop    rbp
   140007a4b:	add    rax,QWORD PTR [r10]
   140007a4e:	add    bl,BYTE PTR [rdi]
   140007a50:	(bad)  
   140007a51:	(bad)  
   140007a52:	and    BYTE PTR [rax],ah
   140007a54:	and    ah,BYTE PTR [rdx]
   140007a56:	rex.WB push r9
   140007a58:	(bad)  
   140007a59:	(bad)  
   140007a5a:	(bad)  
   140007a5b:	(bad)  
   140007a5c:	(bad)  
   140007a5d:	movsxd esp,DWORD PTR [rcx+0x5c]
   140007a60:	movsxd eax,DWORD PTR [rcx]
   140007a62:	add    DWORD PTR [rbp+0x5d],ebx
   140007a65:	add    BYTE PTR ds:[rax],al
   140007a68:	rex.XB pop r13
   140007a6a:	pop    rbp
   140007a6b:	rex.W
   140007a6c:	rex.WB
   140007a6d:	rex.WB
   140007a6e:	rex.WB
   140007a6f:	rex.WB
   140007a70:	rex.WB
   140007a71:	rex.WB
   140007a72:	rex.WB
   140007a73:	rex.WB
   140007a74:	rex.WB
   140007a75:	rex.WB
   140007a76:	rex.W pop rbp
   140007a78:	(bad)  
   140007a79:	rex.WR
   140007a7a:	rex.WR
   140007a7b:	rex.WR
   140007a7c:	rex.WR
   140007a7d:	rex.WR
   140007a7e:	rex.WR (bad) 
   140007a80:	pop    rsp
   140007a81:	add    DWORD PTR [rcx],eax
   140007a83:	(bad)  
   140007a84:	pop    rbp
   140007a85:	add    BYTE PTR ds:[rax],al
   140007a88:	rex.XB pop r13
   140007a8a:	pop    rbp
   140007a8b:	pop    rbp
   140007a8c:	pop    rbp
   140007a8d:	pop    rbp
   140007a8e:	pop    rbp
   140007a8f:	pop    rbp
   140007a90:	pop    rbp
   140007a91:	pop    rbp
   140007a92:	pop    rbp
   140007a93:	pop    rbp
   140007a94:	pop    rbp
   140007a95:	pop    rbp
   140007a96:	pop    rbp
   140007a97:	pop    rbp
   140007a98:	pop    rbp
   140007a99:	pop    rbp
   140007a9a:	pop    rbp
   140007a9b:	pop    rbp
   140007a9c:	pop    rbp
   140007a9d:	pop    rbp
   140007a9e:	pop    rbp
   140007a9f:	pop    rbp
   140007aa0:	pop    rbp
   140007aa1:	pop    rbp
   140007aa2:	pop    rbp
   140007aa3:	pop    rbp
   140007aa4:	pop    rbp
   140007aa5:	add    BYTE PTR ds:[rax],al
   140007aa8:	rex.XB pop r15
   140007aaa:	pop    rbp
   140007aab:	(bad)  
   140007aac:	(bad)  
   140007aad:	(bad)  
   140007aae:	pop    rbp
   140007aaf:	pop    rbp
   140007ab0:	(bad)  
   140007ab1:	movsxd ebx,DWORD PTR [rbp+0x61]
   140007ab4:	pop    rbp
   140007ab5:	(bad)  
   140007ab6:	pop    rbp
   140007ab7:	(bad)  
   140007ab8:	pop    rbp
   140007ab9:	(bad)  
   140007aba:	(bad)  
   140007abb:	(bad)  
   140007abc:	pop    rsp
   140007abd:	(bad)  
   140007abe:	pop    rsp
   140007abf:	(bad)  
   140007ac0:	pop    rsp
   140007ac1:	(bad)  
   140007ac2:	movsxd ebx,DWORD PTR [rbp+0x5d]
   140007ac5:	add    BYTE PTR ds:[rax],al
   140007ac8:	rex.R
   140007ac9:	rex.WXB
   140007aca:	rex.WR
   140007acb:	rex.WXB
   140007acc:	rex.WXB
   140007acd:	rex.WXB
   140007ace:	rex.WR
   140007acf:	rex.WXB
   140007ad0:	rex.WXB
   140007ad1:	rex.WR
   140007ad2:	rex.WXB
   140007ad3:	rex.WXB
   140007ad4:	rex.WXB
   140007ad5:	rex.WXB
   140007ad6:	rex.WR
   140007ad7:	rex.WXB
   140007ad8:	rex.WR
   140007ad9:	rex.WXB
   140007ada:	rex.WR
   140007adb:	rex.WXB
   140007adc:	rex.WR
   140007add:	rex.WRB
   140007ade:	rex.WXB
   140007adf:	rex.WXB
   140007ae0:	rex.WXB
   140007ae1:	rex.WXB
   140007ae2:	rex.WR
   140007ae3:	rex.WXB
   140007ae4:	rex.WR
   140007ae5:	add    BYTE PTR ds:[rax],al
   140007ae8:	push   r8
   140007aea:	rex.WRXB
   140007aeb:	rex.WRXB
   140007aec:	rex.WRXB
   140007aed:	rex.WRXB
   140007aee:	rex.WRXB
   140007aef:	rex.WRXB
   140007af0:	rex.WRXB
   140007af1:	rex.WRXB
   140007af2:	rex.WRXB
   140007af3:	rex.WRXB
   140007af4:	rex.WRXB
   140007af5:	rex.WRXB
   140007af6:	rex.WRXB
   140007af7:	rex.WRXB
   140007af8:	rex.WRXB
   140007af9:	rex.WRXB
   140007afa:	rex.WRXB
   140007afb:	rex.WRXB
   140007afc:	rex.WRXB
   140007afd:	rex.WRXB
   140007afe:	rex.WRXB add al,0x4f
   140007b01:	add    al,0x4f
   140007b03:	add    al,0x4f
   140007b05:	add    BYTE PTR ds:[rax],al
   140007b08:	add    BYTE PTR [rsi],bh
   140007b0a:	ds ds ds ds ds ds ds ds ds ds ds ds ds ds
   140007b18:	ds ds ds ds ds ds ds ds ds ds ds ds ds rex.WX
	...
   140007b86:	add    BYTE PTR [rax],al
   140007b88:	(bad)  
   140007b89:	(bad)  
   140007b8a:	(bad)  
   140007b8b:	(bad)  
   140007b8c:	(bad)  
   140007b8d:	(bad)  
   140007b8e:	(bad)  
   140007b8f:	(bad)  
   140007b90:	(bad)  
   140007b91:	(bad)  
   140007b92:	(bad)  
   140007b93:	(bad)  
   140007b94:	(bad)  
   140007b95:	(bad)  
   140007b96:	(bad)  
   140007b97:	inc    DWORD PTR [rax]
   140007b99:	add    BYTE PTR [rax],al
   140007b9b:	add    eax,DWORD PTR [rax]
   140007b9d:	add    BYTE PTR [rax],al
   140007b9f:	add    eax,DWORD PTR [rax]
   140007ba1:	add    BYTE PTR [rax],al
   140007ba3:	add    eax,DWORD PTR [rax]
   140007ba5:	add    BYTE PTR [rax],al
   140007ba7:	add    eax,DWORD PTR [rax]
   140007ba9:	add    BYTE PTR [rax],al
   140007bab:	add    eax,DWORD PTR [rax]
   140007bad:	add    BYTE PTR [rax],al
   140007baf:	add    eax,DWORD PTR [rax]
   140007bb1:	add    BYTE PTR [rax],al
   140007bb3:	add    eax,DWORD PTR [rax]
   140007bb5:	add    BYTE PTR [rax],al
   140007bb7:	add    eax,DWORD PTR [rax]
   140007bb9:	add    BYTE PTR [rax],al
   140007bbb:	add    eax,DWORD PTR [rax]
   140007bbd:	add    BYTE PTR [rax],al
   140007bbf:	add    eax,DWORD PTR [rax]
   140007bc1:	add    BYTE PTR [rax],al
   140007bc3:	add    eax,DWORD PTR [rax]
   140007bc5:	add    BYTE PTR [rax],al
   140007bc7:	add    eax,DWORD PTR [rax]
   140007bc9:	add    BYTE PTR [rax],al
   140007bcb:	add    eax,DWORD PTR [rax]
   140007bcd:	add    BYTE PTR [rax],al
   140007bcf:	add    eax,DWORD PTR [rax]
   140007bd1:	add    BYTE PTR [rax],al
   140007bd3:	add    eax,DWORD PTR [rax]
   140007bd5:	add    BYTE PTR [rax],al
   140007bd7:	add    eax,DWORD PTR [rax]
   140007bd9:	add    BYTE PTR [rax],al
   140007bdb:	add    eax,DWORD PTR [rax]
   140007bdd:	add    BYTE PTR [rax],al
   140007bdf:	add    eax,DWORD PTR [rax]
   140007be1:	add    BYTE PTR [rax],al
   140007be3:	add    eax,DWORD PTR [rax]
   140007be5:	add    BYTE PTR [rax],al
   140007be7:	add    eax,DWORD PTR [rax]
   140007be9:	add    BYTE PTR [rax],al
   140007beb:	add    eax,DWORD PTR [rax]
   140007bed:	add    BYTE PTR [rax],al
   140007bef:	add    eax,DWORD PTR [rax]
   140007bf1:	add    BYTE PTR [rax],al
   140007bf3:	add    eax,DWORD PTR [rax]
   140007bf5:	add    BYTE PTR [rax],al
   140007bf7:	add    eax,DWORD PTR [rax-0xfd0000]
   140007bfd:	(bad)  
   140007bfe:	(bad)  
   140007bff:	(bad)  
   140007c00:	(bad)  
   140007c01:	(bad)  
   140007c02:	(bad)  
   140007c03:	(bad)  
   140007c04:	(bad)  
   140007c05:	(bad)  
   140007c06:	(bad)  
   140007c07:	jmp    FWORD PTR [rax]
   140007c09:	add    BYTE PTR [rax],al
   140007c0b:	add    BYTE PTR [rax],bl
   140007c0d:	add    BYTE PTR [rax],al
   140007c0f:	add    BYTE PTR [rax],dh
   140007c11:	add    BYTE PTR [rax],al
   140007c13:	add    BYTE PTR [rcx],al
   140007c15:	add    BYTE PTR [rax],cl
   140007c17:	add    BYTE PTR [rax],al
   140007c19:	add    BYTE PTR [rax],al
   140007c1b:	add    BYTE PTR [rax+0x2],al
	...
   140007c26:	add    BYTE PTR [rax],al
   140007c28:	add    BYTE PTR [rcx],al
   140007c2a:	add    BYTE PTR [rax],al
   140007c2c:	add    BYTE PTR [rcx],al
   140007c2e:	add    BYTE PTR [rax],al
   140007c30:	add    BYTE PTR [rax],al
   140007c32:	add    BYTE PTR [rax],al
   140007c34:	sahf   
   140007c35:	ins    DWORD PTR es:[rdi],dx
   140007c36:	cmp    eax,0x3f709d00
   140007c3b:	add    BYTE PTR [rax-0x62ffc396],ah
   140007c41:	jb     0x140007c83
   140007c43:	add    BYTE PTR [rbx-0x63ffbe8b],bl
   140007c49:	je     0x140007c8b
   140007c4b:	add    BYTE PTR [rdi-0x66ffba81],dl
   140007c51:	jns    0x140007c95
   140007c53:	add    BYTE PTR [rcx-0x67ffbb85],bl
   140007c59:	jge    0x140007c9f
   140007c5b:	add    BYTE PTR [rcx+0x7f006879],dl
   140007c61:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140007c62:	pop    rbx
   140007c63:	add    BYTE PTR [rbp-0x5a],bh
   140007c66:	pop    rsp
   140007c67:	add    BYTE PTR [rdx-0x56],bh
   140007c6a:	pop    rdi
   140007c6b:	add    BYTE PTR [rax+rbp*4+0x5d],bh
   140007c6f:	add    BYTE PTR [rbp-0x52],dh
   140007c72:	(bad)  
   140007c73:	add    BYTE PTR [rcx-0x55],bh
   140007c76:	(bad)  
   140007c77:	add    BYTE PTR [rax-0x54],bh
   140007c7a:	(bad)  
   140007c7b:	add    BYTE PTR [rsi-0x4a],ch
   140007c7e:	imul   eax,DWORD PTR [rax],0x65b172
   140007c84:	jne    0x140007c36
   140007c86:	add    BYTE PTR fs:[rax-0x4c],dh
   140007c8a:	push   0x4d8f8f00
   140007c8f:	add    BYTE PTR [rbp-0x6bffb97e],dl
   140007c95:	test   DWORD PTR [rax+0x0],ecx
   140007c98:	xchg   edx,eax
   140007c99:	mov    DWORD PTR [rdx+0x0],ecx
   140007c9c:	xchg   ecx,eax
   140007c9d:	mov    WORD PTR [rbx+0x0],cs
   140007ca0:	nop
   140007ca1:	lea    ecx,[rax+rax*1-0x72]
   140007ca5:	xchg   ecx,eax
   140007ca6:	rex.WRB add BYTE PTR [r13-0x74ffb06c],r9b
   140007cad:	xchg   edi,eax
   140007cae:	push   rcx
   140007caf:	add    BYTE PTR [rbp+rdx*4-0x627affb0],cl
   140007cb6:	push   rbp
   140007cb7:	add    BYTE PTR [rcx-0x77ffad67],cl
   140007cbd:	fwait
   140007cbe:	push   rsp
   140007cbf:	add    BYTE PTR [rax+riz*4-0x5d7dffa9],al
   140007cc6:	pop    rax
   140007cc7:	add    BYTE PTR [rax-0x77ffa55c],al
   140007ccd:	test   BYTE PTR [rcx-0x706d6900],al
   140007cd3:	add    BYTE PTR [rax-0x3eff5454],dh
   140007cd9:	mov    edi,0xc3c500bd
   140007cde:	rol    DWORD PTR [rax],0xcb
   140007ce1:	retf   
   140007ce2:	retf   
   140007ce3:	add    ch,cl
   140007ce5:	int3   
   140007ce6:	retf   0xd100
   140007ce9:	retf   
   140007cea:	mov    DWORD PTR [rax],0xd3d9e0
   140007cf0:	loopne 0x140007cd2
   140007cf2:	loopne 0x140007cf4
   140007cf4:	out    dx,al
   140007cf5:	out    dx,al
   140007cf6:	out    dx,al
   140007cf7:	add    cl,dh
   140007cf9:	icebp  
   140007cfa:	icebp  
   140007cfb:	add    ch,dh
   140007cfd:	cmc    
   140007cfe:	cmc    
   140007cff:	add    bh,dh
   140007d01:	clc    
   140007d02:	clc    
   140007d03:	add    cl,bh
   140007d05:	stc    
   140007d06:	stc    
   140007d07:	add    dh,bh
   140007d09:	(bad)  
   140007d0a:	inc    BYTE PTR [rax]
	...
   14000802c:	(bad)  
   14000802d:	(bad)  
   14000802e:	inc    DWORD PTR [rax]
	...
   140008078:	sub    ch,BYTE PTR [rax]
   14000807a:	sub    BYTE PTR [rax],ch
   14000807c:	sub    BYTE PTR [rax],ch
   14000807e:	sub    BYTE PTR [rax],ch
   140008080:	sub    BYTE PTR [rax],ch
   140008082:	sub    BYTE PTR [rax],ch
   140008084:	sub    BYTE PTR [rax],ch
   140008086:	sub    BYTE PTR [rax],ch
   140008088:	sub    BYTE PTR [rax],ch
   14000808a:	sub    BYTE PTR [rax],ch
   14000808c:	sub    BYTE PTR [rcx],ch
   14000808e:	add    BYTE PTR [rax],al
   140008090:	sub    BYTE PTR [rip+0x34353535],dh        # 0x17435b5cb
   140008096:	xor    al,0x34
   140008098:	xor    al,0x34
   14000809a:	xor    al,0x34
   14000809c:	xor    DWORD PTR [rcx+rsi*1],esi
   14000809f:	xor    al,0x31
   1400080a1:	xor    DWORD PTR [rcx],esi
   1400080a3:	xor    DWORD PTR [rcx],esi
   1400080a5:	sub    BYTE PTR [rax],al
   1400080a7:	add    BYTE PTR [rax],ch
   1400080a9:	xor    eax,0x34353535
   1400080ae:	xor    al,0x34
   1400080b0:	xor    al,0x32
   1400080b2:	xor    dh,BYTE PTR [rdx]
   1400080b4:	xor    dh,BYTE PTR [rdx]
   1400080b6:	xor    dh,BYTE PTR [rcx]
   1400080b8:	xor    DWORD PTR [rcx],esi
   1400080ba:	xor    DWORD PTR [rcx],esi
   1400080bc:	xor    DWORD PTR [rax],ebp
   1400080be:	add    BYTE PTR [rax],al
   1400080c0:	sub    BYTE PTR [rip+0x34343535],dh        # 0x17434b5fb
   1400080c6:	xor    dh,BYTE PTR [rdx+rsi*1]
   1400080c9:	xor    al,0x32
   1400080cb:	xor    al,0x30
   1400080cd:	sub    al,0x2c
   1400080cf:	sub    al,0x32
   1400080d1:	xor    dh,BYTE PTR [rcx]
   1400080d3:	xor    DWORD PTR [rcx],esi
   1400080d5:	sub    BYTE PTR [rax],al
   1400080d7:	add    BYTE PTR [rax],ch
   1400080d9:	xor    eax,0xd252435
   1400080de:	or     eax,0x14141111
   1400080e3:	xor    al,0x34
   1400080e5:	xor    al,0x34
   1400080e7:	xor    al,0x32
   1400080e9:	xor    dh,BYTE PTR [rdx]
   1400080eb:	xor    DWORD PTR [rcx],esi
   1400080ed:	sub    BYTE PTR [rax],al
   1400080ef:	add    BYTE PTR [rax],ch
   1400080f1:	xor    eax,0x24232335
   1400080f6:	or     eax,0x1410100f
   1400080fb:	xor    al,0x30
   1400080fd:	sub    ebp,DWORD PTR [rsp+rbp*1]
   140008100:	xor    al,0x31
   140008102:	xor    dh,BYTE PTR [rdx]
   140008104:	xor    DWORD PTR [rax],ebp
   140008106:	add    BYTE PTR [rax],al
   140008108:	sub    BYTE PTR [rip+0x21231f35],dh        # 0x16123a043
   14000810e:	and    eax,0x10110d0d
   140008113:	xor    al,0x34
   140008115:	xor    al,0x34
   140008117:	xor    al,0x31
   140008119:	xor    al,0x31
   14000811b:	xor    dh,BYTE PTR [rdx]
   14000811d:	sub    BYTE PTR [rax],al
   14000811f:	add    BYTE PTR [rax],ch
   140008121:	xor    eax,0x231e1e35
   140008126:	and    esp,DWORD PTR [rcx]
   140008128:	and    al,0xf
   14000812a:	sysenter 
   14000812c:	xor    al,0x34
   14000812e:	xor    al,0x34
   140008130:	xor    dh,BYTE PTR [rdx]
   140008132:	xor    dh,BYTE PTR [rdx]
   140008134:	xor    ch,BYTE PTR [rax]
   140008136:	add    BYTE PTR [rax],al
   140008138:	sub    BYTE PTR [rip+0x1d1e1b35],dh        # 0x15d1e9c73
   14000813e:	and    esp,DWORD PTR [rbx]
   140008140:	and    eax,0x30340d24
   140008145:	sub    ebp,DWORD PTR [rsp+rbp*1]
   140008148:	xor    al,0x14
   14000814a:	adc    esi,DWORD PTR [rcx+rsi*1]
   14000814d:	sub    BYTE PTR [rax],al
   14000814f:	add    BYTE PTR [rax],ch
   140008151:	xor    eax,0x1d191935
   140008156:	sbb    eax,0x2421231f
   14000815b:	xor    al,0x34
   14000815d:	xor    al,0x34
   14000815f:	xor    al,0x34
   140008161:	or     eax,0x28343114
   140008166:	add    BYTE PTR [rax],al
   140008168:	sub    BYTE PTR [rip+0x19070735],dh        # 0x1590788a3
   14000816e:	sbb    ebx,DWORD PTR [rsi]
   140008170:	(bad)  
   140008171:	and    esp,DWORD PTR [rcx]
   140008173:	xor    al,0x30
   140008175:	sub    al,0x2c
   140008177:	sub    al,0x32
   140008179:	(bad)  
   14000817a:	or     eax,0x283134
   14000817f:	add    BYTE PTR [rax],ch
   140008181:	xor    eax,0x7070935
   140008186:	sbb    DWORD PTR [rbx],ebx
   140008188:	sbb    eax,0x3434231f
   14000818d:	xor    al,0x34
   14000818f:	xor    al,0x34
   140008191:	sbb    BYTE PTR [rdi],bl
   140008193:	xor    al,0x34
   140008195:	sub    BYTE PTR [rax],al
   140008197:	add    BYTE PTR [rax],ch
   140008199:	xor    eax,0x7050435
   14000819e:	(bad)  
   14000819f:	sbb    DWORD PTR [rcx],ebx
   1400081a1:	sbb    eax,0x2b30341d
   1400081a6:	sub    al,0x2c
   1400081a8:	xor    al,0x3
   1400081aa:	sbb    BYTE PTR [rdx],dh
   1400081ac:	xor    ch,BYTE PTR [rax]
   1400081ae:	add    BYTE PTR [rax],al
   1400081b0:	sub    BYTE PTR [rip+0x4040435],dh        # 0x1440485eb
   1400081b6:	add    eax,0x1b1b1907
   1400081bb:	xor    al,0x34
   1400081bd:	xor    al,0x34
   1400081bf:	xor    al,0x34
   1400081c1:	add    eax,DWORD PTR [rbx]
   1400081c3:	xor    al,0x34
   1400081c5:	sub    BYTE PTR [rax],al
   1400081c7:	add    BYTE PTR [rax],ch
   1400081c9:	xor    eax,0x4030335
   1400081ce:	add    eax,0x1b070705
   1400081d3:	xor    eax,0x2c2c2c30
   1400081d8:	xor    eax,DWORD PTR [rbx]
   1400081da:	add    esi,DWORD PTR [rdx+rsi*1]
   1400081dd:	sub    BYTE PTR [rax],al
   1400081df:	add    BYTE PTR [rax],ch
   1400081e1:	xor    eax,0x35353535
   1400081e6:	xor    eax,0x35353535
   1400081eb:	xor    eax,0x35353535
   1400081f0:	xor    eax,0x34343434
   1400081f5:	sub    BYTE PTR [rax],al
   1400081f7:	add    BYTE PTR [rax],ch
   1400081f9:	sub    eax,0x2d2d2d2d
   1400081fe:	sub    eax,0x2d2d2d2d
   140008203:	sub    eax,0x2c2d2d2d
   140008208:	sub    eax,0x2c2e2c2c
   14000820d:	sub    BYTE PTR [rax],al
   14000820f:	add    BYTE PTR [rdi],ah
   140008211:	(bad)  
   140008212:	(bad)  
   140008213:	(bad)  
   140008214:	(bad)  
   140008215:	(bad)  
   140008216:	(bad)  
   140008217:	(bad)  
   140008218:	(bad)  
   140008219:	(bad)  
   14000821a:	(bad)  
   14000821b:	(bad)  
   14000821c:	(bad)  
   14000821d:	(bad)  
   14000821e:	(bad)  
   14000821f:	or     ebp,DWORD PTR [rdi]
   140008221:	or     ebp,DWORD PTR [rdi]
   140008223:	or     ebp,DWORD PTR [rsi]
   140008225:	sub    BYTE PTR [rax],al
   140008227:	add    BYTE PTR [rbx],ch
   140008229:	sub    BYTE PTR [rax],ch
   14000822b:	sub    BYTE PTR [rax],ch
   14000822d:	sub    BYTE PTR [rax],ch
   14000822f:	sub    BYTE PTR [rax],ch
   140008231:	sub    BYTE PTR [rax],ch
   140008233:	sub    BYTE PTR [rax],ch
   140008235:	sub    BYTE PTR [rax],ch
   140008237:	sub    BYTE PTR [rax],ch
   140008239:	sub    BYTE PTR [rax],ch
   14000823b:	sub    BYTE PTR [rax],ch
   14000823d:	sub    al,BYTE PTR [rax]
	...
   14000826f:	add    bh,bh
   140008271:	(bad)  
   140008272:	inc    DWORD PTR [rax]
   140008274:	(bad)  
   140008275:	(bad)  
   140008276:	inc    DWORD PTR [rax]
   140008278:	(bad)  
   140008279:	(bad)  
   14000827a:	inc    DWORD PTR [rax]
   14000827c:	add    BYTE PTR [rax],al
   14000827e:	add    eax,DWORD PTR [rax]
   140008280:	add    BYTE PTR [rax],al
   140008282:	add    eax,DWORD PTR [rax]
   140008284:	add    BYTE PTR [rax],al
   140008286:	add    eax,DWORD PTR [rax]
   140008288:	add    BYTE PTR [rax],al
   14000828a:	add    eax,DWORD PTR [rax]
   14000828c:	add    BYTE PTR [rax],al
   14000828e:	add    eax,DWORD PTR [rax]
   140008290:	add    BYTE PTR [rax],al
   140008292:	add    eax,DWORD PTR [rax]
   140008294:	add    BYTE PTR [rax],al
   140008296:	add    eax,DWORD PTR [rax]
   140008298:	add    BYTE PTR [rax],al
   14000829a:	add    eax,DWORD PTR [rax]
   14000829c:	add    BYTE PTR [rax],al
   14000829e:	add    eax,DWORD PTR [rax]
   1400082a0:	add    BYTE PTR [rax],al
   1400082a2:	add    eax,DWORD PTR [rax]
   1400082a4:	add    BYTE PTR [rax],al
   1400082a6:	add    eax,DWORD PTR [rax]
   1400082a8:	add    BYTE PTR [rax],al
   1400082aa:	add    eax,DWORD PTR [rax]
   1400082ac:	add    BYTE PTR [rax],al
   1400082ae:	add    eax,DWORD PTR [rax]
   1400082b0:	add    BYTE PTR [rax],al
   1400082b2:	add    eax,DWORD PTR [rax]
   1400082b4:	add    BYTE PTR [rax],al
   1400082b6:	add    eax,DWORD PTR [rax]
   1400082b8:	add    BYTE PTR [rax],al
   1400082ba:	add    eax,DWORD PTR [rax]
   1400082bc:	add    BYTE PTR [rax],al
   1400082be:	add    eax,DWORD PTR [rax]
   1400082c0:	add    BYTE PTR [rax],al
   1400082c2:	add    eax,DWORD PTR [rax]
   1400082c4:	add    BYTE PTR [rax],al
   1400082c6:	add    eax,DWORD PTR [rax]
   1400082c8:	(bad)  
   1400082c9:	(bad)  
   1400082ca:	inc    DWORD PTR [rax]
   1400082cc:	(bad)  
   1400082cd:	(bad)  
   1400082ce:	inc    DWORD PTR [rax]
   1400082d0:	sub    BYTE PTR [rax],al
   1400082d2:	add    BYTE PTR [rax],al
   1400082d4:	adc    BYTE PTR [rax],al
   1400082d6:	add    BYTE PTR [rax],al
   1400082d8:	and    BYTE PTR [rax],al
   1400082da:	add    BYTE PTR [rax],al
   1400082dc:	add    DWORD PTR [rax],eax
   1400082de:	or     BYTE PTR [rax],al
   1400082e0:	add    BYTE PTR [rax],al
   1400082e2:	add    BYTE PTR [rax],al
   1400082e4:	add    BYTE PTR [rcx],al
	...
   1400082ee:	add    BYTE PTR [rax],al
   1400082f0:	add    BYTE PTR [rcx],al
   1400082f2:	add    BYTE PTR [rax],al
   1400082f4:	add    BYTE PTR [rcx],al
   1400082f6:	add    BYTE PTR [rax],al
   1400082f8:	add    BYTE PTR [rax],al
   1400082fa:	add    BYTE PTR [rax],al
   1400082fc:	sahf   
   1400082fd:	outs   dx,DWORD PTR ds:[rsi]
   1400082fe:	add    BYTE PTR ds:[rbp-0x5fffc08e],bl
   140008305:	push   0x3c
   140008307:	add    BYTE PTR [rbx-0x68ffbe8b],bl
   14000830d:	jle    0x140008354
   14000830f:	add    BYTE PTR [rdx-0x67ffbd87],bl
   140008315:	jl     0x14000835b
   140008317:	add    BYTE PTR [rcx+0x7f006879],dl
   14000831d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000831e:	pop    rbx
   14000831f:	add    BYTE PTR [rdx-0x57],bh
   140008322:	pop    rsi
   140008323:	add    BYTE PTR [rbp-0x58],bh
   140008326:	pop    rbp
   140008327:	add    BYTE PTR [rdi-0x53],dh
   14000832a:	(bad)  
   14000832b:	add    BYTE PTR [rbx-0x4f],dh
   14000832e:	add    BYTE PTR gs:[rsi-0x6affb980],dl
   140008335:	test   BYTE PTR [rax+0x0],cl
   140008338:	xchg   ebx,eax
   140008339:	mov    DWORD PTR [rdx+0x0],ecx
   14000833c:	xchg   ecx,eax
   14000833d:	mov    WORD PTR [rbx+0x0],cs
   140008340:	(bad)  
   140008341:	nop
   140008342:	rex.WRB add BYTE PTR [r13-0x74ffb06c],r9b
   140008349:	xchg   edi,eax
   14000834a:	push   rcx
   14000834b:	add    BYTE PTR [rdi-0x76ffaa63],al
   140008351:	(bad)  
   140008352:	push   rbx
   140008353:	add    BYTE PTR [rax+riz*4-0x5d7dffa9],al
   14000835a:	pop    rcx
   14000835b:	add    BYTE PTR [rdi-0x32ff706e],dl
   140008361:	int3   
   140008362:	retf   0xe000
   140008365:	(bad)  
   140008367:	add    dh,ah
   140008369:	out    0xe6,al
   14000836b:	add    cl,ch
   14000836d:	jmp    0x12ded845b
   140008372:	in     eax,dx
   140008373:	add    cl,dh
   140008375:	icebp  
   140008376:	icebp  
   140008377:	add    ch,dh
   140008379:	cmc    
   14000837a:	cmc    
   14000837b:	add    cl,bh
   14000837d:	stc    
   14000837e:	stc    
   14000837f:	add    dh,bh
   140008381:	(bad)  
   140008382:	inc    BYTE PTR [rax]
	...
   1400086f4:	(bad)  
   1400086f5:	(bad)  
   1400086f6:	inc    DWORD PTR [rax]
	...
   140008718:	sbb    DWORD PTR [rcx],ebx
   14000871a:	sbb    DWORD PTR [rcx],ebx
   14000871c:	sbb    DWORD PTR [rcx],ebx
   14000871e:	sbb    DWORD PTR [rcx],ebx
   140008720:	sbb    DWORD PTR [rcx],ebx
   140008722:	sbb    DWORD PTR [rcx],ebx
   140008724:	sbb    DWORD PTR [rcx],ebx
   140008726:	sbb    DWORD PTR [rcx],ebx
   140008728:	sbb    edi,edi
   14000872a:	(bad)  
   14000872b:	(bad)  
   14000872c:	(bad)  
   14000872d:	jmp    QWORD PTR [rax]
   14000872f:	and    BYTE PTR [rax],ah
   140008731:	and    BYTE PTR [rsi],bl
   140008733:	(bad)  
   140008734:	(bad)  
   140008735:	sbb    al,0x1c
   140008737:	sbb    DWORD PTR [rcx],ebx
   140008739:	(bad)  
   14000873a:	(bad)  
   14000873b:	(bad)  
   14000873c:	jmp    QWORD PTR [rax]
   14000873e:	jmp    QWORD PTR [rax]
   140008740:	and    BYTE PTR [rax],ah
   140008742:	(bad)  
   140008743:	(bad)  
   140008744:	(bad)  
   140008745:	(bad)  
   140008746:	sbb    al,0x19
   140008748:	sbb    edi,edi
   14000874a:	adc    eax,0xd0c0918
   14000874f:	and    BYTE PTR [rdx],bl
   140008751:	sbb    bl,BYTE PTR [rdx]
   140008753:	sbb    bl,BYTE PTR [rsi]
   140008755:	(bad)  
   140008756:	sbb    al,0x19
   140008758:	sbb    edi,edi
   14000875a:	adc    edx,DWORD PTR [rip+0x210a0915]        # 0x1610a9075
   140008760:	and    BYTE PTR [rax],ah
   140008762:	and    BYTE PTR [rax],ah
   140008764:	(bad)  
   140008765:	(bad)  
   140008766:	(bad)  
   140008767:	sbb    DWORD PTR [rcx],ebx
   140008769:	call   QWORD PTR [rax]
   14000876b:	adc    dl,BYTE PTR [rdx*1+0x1a1aff09]
   140008772:	sbb    bl,BYTE PTR [rdx]
   140008774:	(bad)  
   140008775:	or     DWORD PTR [rip+0x7ff1919],ebx        # 0x147ffa094
   14000877b:	movlps xmm2,QWORD PTR [rbx]
   14000877e:	adc    al,0xff
   140008780:	and    BYTE PTR [rax],ah
   140008782:	and    BYTE PTR [rax],ah
   140008784:	and    BYTE PTR [rsi+rbx*1],dl
   140008787:	sbb    DWORD PTR [rcx],ebx
   140008789:	inc    DWORD PTR [rdx]
   14000878b:	(bad)  
   14000878c:	(bad)  
   14000878d:	adc    BYTE PTR [rdx],dl
   14000878f:	call   FWORD PTR [rdx]
   140008791:	sbb    bl,BYTE PTR [rdx]
   140008793:	sbb    ah,BYTE PTR [rax]
   140008795:	(bad)  
   140008796:	(bad)  
   140008797:	sbb    DWORD PTR [rcx],ebx
   140008799:	inc    DWORD PTR [rbx]
   14000879b:	add    DWORD PTR [rdi+rax*1],eax
   14000879e:	ud0    edi,edi
   1400087a1:	(bad)  
   1400087a2:	jmp    QWORD PTR [rax]
   1400087a4:	and    BYTE PTR [rcx],al
   1400087a6:	and    BYTE PTR [rcx],bl
   1400087a8:	sbb    edi,edi
   1400087aa:	(bad)  
   1400087ab:	(bad)  
   1400087ac:	(bad)  
   1400087ad:	(bad)  
   1400087ae:	(bad)  
   1400087af:	(bad)  
   1400087b0:	(bad)  
   1400087b1:	jmp    QWORD PTR [rax]
   1400087b3:	jmp    QWORD PTR [rax]
   1400087b5:	and    BYTE PTR [rsi],bl
   1400087b7:	sbb    DWORD PTR [rcx],ebx
   1400087b9:	sbb    bl,BYTE PTR [rdx]
   1400087bb:	sbb    bl,BYTE PTR [rdx]
   1400087bd:	sbb    bl,BYTE PTR [rdx]
   1400087bf:	sbb    bl,BYTE PTR [rdx]
   1400087c1:	sbb    bl,BYTE PTR [rdx]
   1400087c3:	sbb    bl,BYTE PTR [rdx]
   1400087c5:	sbb    bl,BYTE PTR [rdx]
   1400087c7:	sbb    DWORD PTR [rcx],ebx
   1400087c9:	sbb    ebx,DWORD PTR [rbx]
   1400087cb:	sbb    ebx,DWORD PTR [rbx]
   1400087cd:	sbb    ebx,DWORD PTR [rbx]
   1400087cf:	sbb    ebx,DWORD PTR [rbx]
   1400087d1:	sbb    ecx,DWORD PTR [rax]
   1400087d3:	sbb    ecx,DWORD PTR [rax]
   1400087d5:	sbb    ecx,DWORD PTR [rax]
   1400087d7:	sbb    DWORD PTR [rcx],ebx
   1400087d9:	sbb    DWORD PTR [rcx],ebx
   1400087db:	sbb    DWORD PTR [rcx],ebx
   1400087dd:	sbb    DWORD PTR [rcx],ebx
   1400087df:	sbb    DWORD PTR [rcx],ebx
   1400087e1:	sbb    DWORD PTR [rcx],ebx
   1400087e3:	sbb    DWORD PTR [rcx],ebx
   1400087e5:	sbb    DWORD PTR [rcx],ebx
   1400087e7:	sbb    DWORD PTR [rax],eax
	...
   1400087f5:	add    BYTE PTR [rax],al
   1400087f7:	add    bh,bh
   1400087f9:	inc    DWORD PTR [rax]
   1400087fb:	add    bh,bh
   1400087fd:	inc    DWORD PTR [rax]
	...
   140008833:	add    bh,bh
   140008835:	inc    DWORD PTR [rax]
   140008837:	add    BYTE PTR [rcx+0xd474e50],cl
   14000883d:	or     bl,BYTE PTR [rdx]
   14000883f:	or     al,BYTE PTR [rax]
   140008841:	add    BYTE PTR [rax],al
   140008843:	or     eax,0x52444849
   140008848:	add    BYTE PTR [rax],al
   14000884a:	add    DWORD PTR [rax],eax
   14000884c:	add    BYTE PTR [rax],al
   14000884e:	add    DWORD PTR [rax],eax
   140008850:	or     BYTE PTR [rsi],al
   140008852:	add    BYTE PTR [rax],al
   140008854:	add    BYTE PTR [rdx+rsi*2-0x58],bl
   140008858:	data16 add BYTE PTR [rax],al
   14000885b:	and    BYTE PTR [rax],al
   14000885d:	rex.WB
   14000885e:	rex.R
   14000885f:	push   r12
   140008861:	js     0x1400087ff
   140008863:	in     eax,dx
   140008864:	jge    0x140008841
   140008866:	scas   eax,DWORD PTR es:[rdi]
   140008867:	and    eax,0x57d67dcb
   14000886c:	mov    ebp,0x6733ded6
   140008871:	out    0x1c,al
   140008873:	jnp    0x140008843
   140008875:	mov    WORD PTR [rbp-0x12],?
   140008878:	mov    bh,0xd8
   14000887a:	ror    DWORD PTR [rsi-0x1f6f78e3],0x8
   140008881:	adc    eax,ebp
   140008883:	xchg   esi,eax
   140008884:	cmp    DWORD PTR [rcx+0xb],0x48
   140008888:	or     DWORD PTR [rcx+0x8882f10],edx
   14000888e:	icebp  
   14000888f:	add    BYTE PTR [rdx-0x1c],al
   140008892:	add    DWORD PTR [rdi-0x8],0x5c2f100f
   140008899:	(bad)  
   14000889a:	loopne 0x140008821
   14000889c:	(bad)  
   14000889d:	and    al,0x24
   14000889f:	add    r13b,BYTE PTR [rax]
   1400088a2:	xchg   BYTE PTR [rax-0x7c],cl
   1400088a5:	pop    rsp
   1400088a6:	sub    eax,DWORD PTR fs:[rcx+0xa212448]
   1400088ad:	cmp    DWORD PTR [rax],edx
   1400088af:	movsxd esp,edx
   1400088b1:	pushf  
   1400088b2:	fistp  DWORD PTR [rbx+rbp*8+0x339999cc]
   1400088b9:	addr32 pop rdi
   1400088bb:	(bad)  
   1400088bc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400088bd:	mov    eax,DWORD PTR [rdi-0x2055512]
   1400088c3:	(bad)  
   1400088c4:	(bad)  
   1400088c5:	push   rbp
   1400088c6:	fst    st(5)
   1400088c8:	imul   ebp,DWORD PTR [rbp-0x2e415843],0xffffffec
   1400088cf:	mov    ch,0x56
   1400088d1:	fnstsw WORD PTR [rbx-0x10204145]
   1400088d7:	stos   DWORD PTR es:[rdi],eax
   1400088d8:	rex.WXB ja 0x1400088de
   1400088db:	adc    eax,0x15151515
   1400088e0:	adc    eax,0x15151515
   1400088e5:	adc    eax,0x15151515
   1400088ea:	adc    eax,0x15151515
   1400088ef:	adc    eax,0x15151515
   1400088f4:	adc    eax,0x15151515
   1400088f9:	adc    eax,0x15151515
   1400088fe:	adc    eax,0x15151515
   140008903:	adc    eax,0x15151515
   140008908:	adc    eax,0x15151515
   14000890d:	adc    eax,0x15151515
   140008912:	adc    eax,0x15151515
   140008917:	adc    eax,0x15151515
   14000891c:	adc    eax,0x15151515
   140008921:	adc    eax,0x15151515
   140008926:	adc    eax,0x15151515
   14000892b:	adc    eax,0x853b1515
   140008930:	and    bh,bl
   140008932:	jg     0x1400089b2
   140008934:	outs   dx,DWORD PTR ds:[rsi]
   140008935:	lods   eax,DWORD PTR ds:[rsi]
   140008936:	test   al,0xa8
   140008938:	test   al,0x98
   14000893a:	sbb    edi,edi
   14000893c:	(bad)  
   14000893d:	(bad)  
   14000893e:	mov    eax,0xfe7f3fec
   140008943:	rol    ebx,0xd3
   140008946:	jg     0x14000894a
   140008948:	add    BYTE PTR [rdx],dl
   14000894a:	adc    dl,BYTE PTR [rax+0x45546b3b]
   140008950:	(bad)
   140008953:	fist   DWORD PTR [rsi+0x7f]
   140008956:	(bad)  
   140008957:	std    
   140008958:	pop    rdi
   140008959:	movabs eax,ds:0xe906071c9e109ddc
   140008962:	xchg   edx,eax
   140008963:	mov    al,0x59
   140008965:	or     BYTE PTR [rax],al
   140008967:	movabs ds:0xedb409125d94bf6b,al
   140008970:	(bad)  
   140008971:	add    al,al
   140008973:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008974:	ins    DWORD PTR es:[rdi],dx
   140008975:	and    DWORD PTR [rax],esp
   140008977:	and    DWORD PTR [rsi+0x4059a2c1],0xc4fce390
   140008981:	jrcxz  0x140008912
   140008983:	or     DWORD PTR [rax],eax
   140008985:	dec    DWORD PTR [rbp+rdx*4-0x52]
   140008989:	ds xchg edi,eax
   14000898b:	mov    ah,0x82
   14000898d:	stos   DWORD PTR es:[rdi],eax
   14000898e:	push   rdi
   14000898f:	mov    cs,WORD PTR [rax-0x3]
   140008992:	xchg   edx,eax
   140008993:	and    eax,0xd0ab1e95
   140008998:	and    eax,0xaebbfa91
   14000899d:	rex.WRX cdqe 
   14000899f:	hlt    
   1400089a0:	mov    dl,0xe5
   1400089a2:	xor    eax,0xd95383d2
   1400089a7:	and    eax,0x51a68329
   1400089ac:	test   eax,0x2b4eb074
   1400089b1:	lods   al,BYTE PTR ds:[rsi]
   1400089b2:	div    ch
   1400089b4:	(bad)  
   1400089b5:	rex.XB cwde 
   1400089b7:	jbe    0x1400089a4
   1400089b9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400089ba:	cmc    
   1400089bb:	adc    DWORD PTR [rdx-0x6c155c6b],edx
   1400089c1:	mov    al,0xe
   1400089c3:	adc    eax,DWORD PTR [rdx]
   1400089c5:	adc    ch,BYTE PTR [rbp-0x755b381c]
   1400089cb:	shl    DWORD PTR [rbp-0x16],1
   1400089ce:	test   BYTE PTR [rdx-0x24b8242],0x12
   1400089d5:	nop
   1400089d6:	(bad)  
   1400089d7:	mov    bh,0x5c
   1400089d9:	shl    BYTE PTR [rbx-0x7fd12518],cl
   1400089df:	scas   al,BYTE PTR es:[rdi]
   1400089e0:	(bad)  
   1400089e1:	add    DWORD PTR [rbx-0x47],edx
   1400089e4:	out    0x5c,eax
   1400089e6:	rex.WXB
   1400089e7:	data16 (bad) 
   1400089e9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400089ea:	or     esp,edx
   1400089ec:	addr32 pop rbx
   1400089ee:	xchg   edx,eax
   1400089ef:	je     0x1400089a3
   1400089f1:	scas   eax,DWORD PTR es:[rdi]
   1400089f2:	sbb    DWORD PTR [rdi],0x6f643913
   1400089f8:	pushf  
   1400089f9:	popf   
   1400089fa:	data16 sbb BYTE PTR [rsi-0x3],dh
   1400089fe:	(bad)  
   1400089ff:	rex.X test eax,0xe725283e
   140008a05:	sbb    eax,0xd60121cd
   140008a0a:	pop    rcx
   140008a0b:	add    eax,0x89d09d6b
   140008a10:	test   DWORD PTR [rbx-0x62bf5455],edx
   140008a16:	rex.X movabs eax,ds:0xd346ceedb20213ea
   140008a20:	jae    0x140008a88
   140008a22:	and    DWORD PTR [rsi],edx
   140008a24:	adc    BYTE PTR [rdx-0x798b2cbf],ah
   140008a2a:	rex (bad) 
   140008a2c:	(bad)  
   140008a2d:	test   al,al
   140008a2f:	push   rbx
   140008a30:	mov    bh,0x3e
   140008a32:	mov    DWORD PTR [rdi-0x3],ebx
   140008a35:	cmc    
   140008a36:	dec    DWORD PTR [rsi-0x683b0251]
   140008a3c:	lods   eax,DWORD PTR ds:[rsi]
   140008a3d:	push   0x75
   140008a3f:	vhaddpd xmm13,xmm7,xmm7
   140008a43:	rex.WRXB pop r14
   140008a45:	(bad)  
   140008a46:	sub    ebp,DWORD PTR [rdi]
   140008a48:	mov    ebp,0xf6ff7fa8
   140008a4d:	outs   dx,DWORD PTR ds:[rsi]
   140008a4e:	jmp    QWORD PTR [rcx]
   140008a50:	out    dx,al
   140008a51:	fnstsw WORD PTR [rbx+0x71bba4eb]
   140008a57:	jrcxz  0x140008a7f
   140008a59:	mov    esi,0x4bfe7f2
   140008a5e:	add    al,bl
   140008a60:	outs   dx,BYTE PTR ds:[rsi]
   140008a61:	pop    rbx
   140008a62:	mov    esp,0x789bfafe
   140008a67:	in     eax,0x95
   140008a69:	(bad)  
   140008a6a:	add    DWORD PTR [rcx],ecx
   140008a6c:	mov    dh,al
   140008a6e:	lods   eax,DWORD PTR ds:[rsi]
   140008a6f:	loopne 0x140008a65
   140008a71:	in     al,0xc
   140008a73:	mov    edi,0xc5dffbff
   140008a78:	rcl    DWORD PTR [rcx-0x740e840],1
   140008a7e:	pop    rcx
   140008a7f:	jl     0x140008a79
   140008a81:	loope  0x140008a86
   140008a83:	mov    esp,0xb8fbc6f1
   140008a88:	jns    0x140008a7d
   140008a8a:	jno    0x140008a88
   140008a8c:	ror    BYTE PTR [rdi],0xbc
   140008a8f:	rex.X (bad) 
   140008a91:	rex.X jg 0x140008a40
   140008a94:	adc    dl,BYTE PTR [rax]
   140008a96:	ins    DWORD PTR es:[rdi],dx
   140008a97:	sub    DWORD PTR [rdi-0x1],0xffffffe6
   140008a9b:	out    dx,eax
   140008a9c:	loopne 0x140008ab9
   140008a9e:	(bad)  
   140008a9f:	stc    
   140008aa0:	adc    eax,0x439f9d9c
   140008aa5:	rex.X
   140008aa6:	rex
   140008aa7:	rex loopne 0x140008aa4
   140008aaa:	mov    ch,0x2b
   140008aac:	add    BYTE PTR [rax+0x25f0e740],dh
   140008ab2:	adc    BYTE PTR [rsi-0x63],0x40
   140008ab6:	add    BYTE PTR gs:[rax+0xb],bl
   140008aba:	and    al,0xef
   140008abc:	jne    0x140008acc
   140008abe:	stc    
   140008abf:	rex.WRB
   140008ac0:	rex.RXB jno 0x140008a4c
   140008ac3:	rex.WXB cmp rdi,QWORD PTR [rip+0xffffffffe9e564cf]        # 0x129e5ef99
   140008aca:	jmp    FWORD PTR [rax]
   140008acc:	vpunpckhwd xmm12,xmm11,XMMWORD PTR [rdx]
   140008ad0:	rex.WRB or BYTE PTR [r9-0x7df39b48],r13b
   140008ad7:	mov    ah,0xea
   140008ad9:	nop
   140008ada:	xchg   edx,eax
   140008adb:	and    al,0xb7
   140008add:	mov    DWORD PTR [rax-0x3e],ebp
   140008ae0:	and    eax,0x6b24d90c
   140008ae5:	mov    ah,0x84
   140008ae7:	and    al,0x11
   140008ae9:	pop    rsp
   140008aea:	add    DWORD PTR [rbp+0x71],esi
   140008aed:	out    0x7c,al
   140008aef:	pop    rax
   140008af0:	(bad)  
   140008af1:	push   rsp
   140008af2:	(bad)  
   140008af3:	or     eax,0x5a0890dc
   140008af8:	mov    dh,0xfe
   140008afa:	cs hlt 
   140008afc:	xor    DWORD PTR [rdx],ebx
   140008afe:	jrcxz  0x140008b65
   140008b00:	sbb    ebx,DWORD PTR [rcx+0x13]
   140008b03:	out    0x33,al
   140008b05:	cwde   
   140008b06:	cld    
   140008b07:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008b08:	in     al,0xed
   140008b0a:	(bad)  
   140008b0b:	jns    0x140008b12
   140008b0d:	rex.WB retf 
   140008b0f:	rep stos BYTE PTR es:[rdi],al
   140008b11:	(bad)  
   140008b12:	sbb    edi,edx
   140008b14:	stos   BYTE PTR es:[rdi],al
   140008b15:	retf   0xbd7d
   140008b18:	pop    rsp
   140008b19:	xchg   edx,eax
   140008b1a:	(bad)  
   140008b1b:	ror    DWORD PTR [rbx],0x1a
   140008b1e:	rex.WB (bad) 
   140008b20:	cli    
   140008b21:	repz sub DWORD PTR [rbx+rdi*4-0x4b],esi
   140008b26:	mov    r8b,0x73
   140008b29:	shl    DWORD PTR [rsi+0x32],1
   140008b2c:	paddusw mm0,QWORD PTR [rdx+0x51]
   140008b30:	push   rcx
   140008b31:	sbb    DWORD PTR [rdi-0x6a],edi
   140008b34:	mov    WORD PTR [rdi+rdi*2+0x8],ds
   140008b38:	sar    DWORD PTR [rbx+0x45],1
   140008b3b:	mov    ebp,ebp
   140008b3d:	jbe    0x140008b4a
   140008b3f:	add    DWORD PTR [rcx+0x69a042d],eax
   140008b45:	nop
   140008b46:	or     ecx,DWORD PTR [rcx]
   140008b48:	(bad)  
   140008b49:	or     ebp,DWORD PTR [rcx]
   140008b4b:	(bad)  
   140008b4c:	mov    esp,0x7aed5278
   140008b51:	mov    ebx,0xe5e84761
   140008b56:	mov    ebp,0xf7be1ea5
   140008b5b:	ficomp DWORD PTR [rbx+0x67f9fe78]
   140008b61:	cmc    
   140008b62:	out    dx,eax
   140008b63:	jnp    0x140008b5c
   140008b65:	out    dx,al
   140008b66:	loop   0x140008bcf
   140008b68:	jle    0x140008b64
   140008b6a:	(bad)  
   140008b6b:	loop   0x140008b30
   140008b6d:	jnp    0x140008b66
   140008b6f:	shr    DWORD PTR [rsi-0x49],1
   140008b72:	cmp    BYTE PTR [rdx],bh
   140008b74:	cmp    al,dl
   140008b76:	lea    ebx,[rbx]
   140008b78:	lahf   
   140008b79:	shr    BYTE PTR [rdi],0xfc
   140008b7c:	loop   0x140008b2d
   140008b7e:	(bad)  
   140008b7f:	mov    ebp,0xff72e8d9
   140008b84:	clc    
   140008b85:	jnp    0x140008b36
   140008b87:	loope  0x140008b2e
   140008b89:	(bad)  
   140008b8a:	lahf   
   140008b8b:	(bad)  
   140008b8c:	push   rsi
   140008b8d:	mov    dh,0x10
   140008b8f:	pop    rbx
   140008b90:	push   rbx
   140008b91:	scas   al,BYTE PTR es:[rdi]
   140008b92:	xchg   esp,eax
   140008b93:	rex add esp,eax
   140008b96:	lea    esi,[rdi]
   140008b98:	ffreep st(1)
   140008b9a:	std    
   140008b9b:	jnp    0x140008b94
   140008b9d:	lock and edi,DWORD PTR [rdi]
   140008ba0:	repnz add eax,0xfd6fe6fc
   140008ba6:	(bad)  
   140008ba7:	(bad)  
   140008ba8:	mov    edi,0xbd2f0d7e
   140008bad:	lock sub al,0xbe
   140008bb0:	stc    
   140008bb1:	lahf   
   140008bb2:	jle    0x140008bb7
   140008bb4:	lahf   
   140008bb5:	stc    
   140008bb6:	int3   
   140008bb7:	mov    edx,DWORD PTR [rax]
   140008bb9:	rex.WRB push r15
   140008bbb:	(bad)  
   140008bbc:	jp     0x140008bc9
   140008bbe:	mov    ah,0x9b
   140008bc0:	jne    0x140008ba1
   140008bc2:	rex.RXB jns 0x140008bc4
   140008bc5:	mov    ah,0x9a
   140008bc7:	mov    edx,0x600c7004
   140008bcc:	(bad)  
   140008bce:	outs   dx,DWORD PTR ds:[rsi]
   140008bcf:	add    DWORD PTR [rsp+rcx*2+0x23197401],esi
   140008bd6:	in     al,0x97
   140008bd8:	cld    
   140008bd9:	(bad)  
   140008bda:	xor    eax,0x93d2ec04
   140008bdf:	dec    ch
   140008be1:	mov    ebx,0x95af2789
   140008be6:	xchg   BYTE PTR [rdx-0x2206e9ea],dl
   140008bec:	cmp    al,0x6e
   140008bee:	(bad)  
   140008bef:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008bf0:	rex.RX shr sil,0x8e
   140008bf4:	int3   
   140008bf5:	xor    al,dl
   140008bf7:	xor    cl,BYTE PTR [rcx+0x42]
   140008bfa:	ret    
   140008bfb:	jne    0x140008ba0
   140008bfd:	rex mov eax,0x96dda2a1
   140008c03:	(bad)  
   140008c04:	xchg   ebp,eax
   140008c05:	xor    al,BYTE PTR [rdx]
   140008c07:	ret    0x4884
   140008c0a:	shl    DWORD PTR [rbp+0x25],cl
   140008c0d:	sub    eax,0xdb43d58f
   140008c12:	rex.RXB (bad) 
   140008c14:	nop
   140008c15:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008c16:	mov    cl,0x4e
   140008c18:	(bad)  
   140008c19:	rex.WRB
   140008c1a:	rex.RB push r13
   140008c1c:	nop
   140008c1d:	and    al,0xdf
   140008c1f:	stc    
   140008c20:	pop    rcx
   140008c21:	and    edi,ebx
   140008c23:	ins    BYTE PTR es:[rdi],dx
   140008c24:	sbb    ebp,ebx
   140008c26:	imul   rdx,r15,0xffffffffc2f38de7
   140008c2d:	rex.WX cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140008c2f:	iret   
   140008c30:	stos   DWORD PTR es:[rdi],eax
   140008c31:	or     al,0x26
   140008c33:	add    DWORD PTR [rax-0x7e8dde13],ebp
   140008c39:	add    al,0x9
   140008c3b:	test   eax,0x1100348c
   140008c40:	sub    BYTE PTR [rbx-0x2b623a69],ch
   140008c46:	out    dx,eax
   140008c47:	and    dh,BYTE PTR [rsi+0x11a68b6d]
   140008c4d:	nop
   140008c4e:	push   0x2c5bb6d0
   140008c53:	(bad)  
   140008c54:	or     eax,DWORD PTR [rax]
   140008c56:	adc    ch,BYTE PTR [rbp-0x6a2b97ec]
   140008c5c:	and    ebp,esp
   140008c5e:	shr    DWORD PTR [rdx+0x7f],1
   140008c61:	out    dx,eax
   140008c62:	ja     0x140008c62
   140008c64:	sub    al,ch
   140008c66:	leave  
   140008c67:	(bad)  
   140008c68:	in     al,dx
   140008c69:	xchg   edi,eax
   140008c6a:	(bad)  
   140008c6b:	scas   eax,DWORD PTR es:[rdi]
   140008c6c:	jg     0x140008ccd
   140008c6e:	mov    ebp,0xa728ec72
   140008c73:	cmp    esi,DWORD PTR [rdi-0x12]
   140008c76:	loop   0x140008cd3
   140008c78:	(bad)  
   140008c7a:	pop    rbp
   140008c7b:	std    
   140008c7c:	sti    
   140008c7d:	imul   ebx,DWORD PTR [rdi-0x3],0x51
   140008c81:	push   rsi
   140008c82:	rcl    DWORD PTR [rsi+0x2],0x57
   140008c86:	scas   al,BYTE PTR es:[rdi]
   140008c87:	pop    rsp
   140008c88:	(bad)
   140008c8b:	mov    edx,0xb19e89ff
   140008c90:	retf   0x7dd0
   140008c93:	out    0xfb,al
   140008c95:	pop    rsi
   140008c96:	shr    cl,0xd9
   140008c99:	sbb    bl,BYTE PTR [rdi]
   140008c9b:	fidivr WORD PTR [rbx-0x12805079]
   140008ca1:	retf   
   140008ca2:	cmp    BYTE PTR [rdx],bh
   140008ca4:	pop    rsi
   140008ca5:	loop   0x140008c3e
   140008ca7:	jg     0x140008ca2
   140008ca9:	(bad)  
   140008cab:	sbb    edi,DWORD PTR [rdi]
   140008cad:	not    ebx
   140008caf:	out    0x94,al
   140008cb1:	shl    BYTE PTR [rcx],cl
   140008cb3:	lea    eax,[rsi+rsi*4]
   140008cb6:	not    al
   140008cb8:	rex.RX add r10b,dl
   140008cbb:	sbb    al,0xdf
   140008cbd:	adc    DWORD PTR [rax+0x3600ab],eax
   140008cc3:	push   rsi
   140008cc4:	std    
   140008cc5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140008cc6:	sbb    DWORD PTR [rdx],eax
   140008cc8:	rex.W in eax,0x99
   140008ccb:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008ccc:	stc    
   140008ccd:	or     r14,QWORD PTR [r10+0x60156cc3]
   140008cd4:	(bad)  
   140008cd5:	retf   
   140008cd6:	mov    ebp,ebp
   140008cd8:	js     0x140008d0a
   140008cda:	stos   DWORD PTR es:[rdi],eax
   140008cdb:	(bad)  
   140008cdc:	xchg   edx,eax
   140008cdd:	(bad)  
   140008cde:	(bad)  
   140008cdf:	pop    rax
   140008ce0:	xchg   edi,eax
   140008ce1:	mov    ah,0x19
   140008ce3:	ror    bl,0x15
   140008ce6:	(bad)  
   140008ce7:	adc    BYTE PTR [rax+0x5a],cl
   140008cea:	scas   al,BYTE PTR es:[rdi]
   140008ceb:	ror    DWORD PTR [rsi],cl
   140008ced:	rex.WRX
   140008cee:	data16 (bad) 
   140008cf0:	xchg   edx,eax
   140008cf1:	xlat   BYTE PTR ds:[rbx]
   140008cf2:	and    eax,0x8a53d1d9
   140008cf7:	pop    rbx
   140008cf8:	(bad)  
   140008cf9:	loopne 0x140008d5c
   140008cfb:	mov    cl,0x87
   140008cfd:	push   rdx
   140008cfe:	(bad)  
   140008cff:	mov    ecx,0x3380aa22
   140008d04:	shl    BYTE PTR [rdi+0x20],cl
   140008d07:	or     eax,0xb48d05e9
   140008d0c:	mov    ah,0xbc
   140008d0e:	repnz mov ah,0x34
   140008d11:	popf   
   140008d12:	xor    ebp,DWORD PTR [rbx+rsi*2-0x52]
   140008d16:	movsxd esp,DWORD PTR [rax+rax*2-0x70]
   140008d1a:	retf   0x18f9
   140008d1d:	in     al,dx
   140008d1e:	jno    0x140008d27
   140008d20:	(bad)  
   140008d21:	mov    ebx,0x6eda3e8a
   140008d26:	xchg   eax,edx
   140008d28:	mov    edi,0xad1635f4
   140008d2d:	rex.WB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140008d2f:	xchg   ebx,eax
   140008d30:	jno    0x140008cd7
   140008d32:	ror    ecx,cl
   140008d34:	cli    
   140008d35:	cs mov dl,0x95
   140008d38:	mov    dl,0xe7
   140008d3a:	or     r11d,r9d
   140008d3d:	or     cl,al
   140008d3f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008d40:	rex sub ebx,DWORD PTR [rbx+0x8]
   140008d44:	sub    DWORD PTR [rax],eax
   140008d46:	fld    DWORD PTR [rdx+0x36]
   140008d49:	or     eax,0x30fd9084
   140008d4e:	scas   al,BYTE PTR es:[rdi]
   140008d4f:	ret    
   140008d50:	jp     0x140008dbf
   140008d52:	adc    al,0xc0
   140008d54:	mov    ebp,0xb3f1777b
   140008d59:	jg     0x140008d40
   140008d5b:	sbb    edi,DWORD PTR [rax]
   140008d5d:	cmp    edi,DWORD PTR [rbx]
   140008d5f:	shl    DWORD PTR [rcx-0x35],cl
   140008d62:	(bad)
   140008d65:	icebp  
   140008d66:	xchg   edi,eax
   140008d67:	mov    esi,0xb5f3f385
   140008d6c:	(bad)  
   140008d6d:	cmp    edi,DWORD PTR [rsi]
   140008d6f:	cmp    ah,BYTE PTR [rsi-0x7]
   140008d72:	add    al,ah
   140008d74:	(bad)  
   140008d75:	lods   eax,DWORD PTR ds:[rsi]
   140008d76:	fwait
   140008d77:	clc    
   140008d78:	cli    
   140008d79:	xlat   BYTE PTR ds:[rbx]
   140008d7a:	jg     0x140008d08
   140008d7c:	sub    DWORD PTR [rax],eax
   140008d7e:	add    BYTE PTR [rdx],bh
   140008d80:	fist   WORD PTR [rsi+0x4a]
   140008d83:	cmp    al,0xf6
   140008d85:	fcom   DWORD PTR [rbp-0x64]
   140008d88:	lahf   
   140008d89:	lods   eax,DWORD PTR ds:[rsi]
   140008d8a:	and    DWORD PTR [rdx],ebx
   140008d8c:	adc    DWORD PTR [rsi+0x4a],0x740cfa34
   140008d93:	xlat   BYTE PTR ds:[rbx]
   140008d94:	jno    0x140008d47
   140008d96:	push   0xfffffffff53fb9f0
   140008d9b:	adc    bh,dh
   140008d9d:	in     eax,0xbf
   140008d9f:	clc    
   140008da0:	xlat   BYTE PTR ds:[rbx]
   140008da1:	clc    
   140008da2:	xchg   edi,edi
   140008da4:	loopne 0x140008d95
   140008da6:	loopne 0x140008d43
   140008da8:	(bad)  
   140008daa:	or     eax,0xa7dcf33c
   140008daf:	ror    BYTE PTR [rax],1
   140008db1:	xor    ebx,0x1f3ef3f3
   140008db7:	and    BYTE PTR [rbx+rax*4+0x76],al
   140008dbb:	and    esp,DWORD PTR [rcx]
   140008dbd:	in     eax,0x16
   140008dbf:	rex.RXB retf 
   140008dc1:	rex.RX mov dil,0xc1
   140008dc4:	pushf  
   140008dc5:	(bad)  
   140008dc7:	rex.WX scas al,BYTE PTR es:[rdi]
   140008dc9:	add    BYTE PTR [rax+0x2afc8e86],bh
   140008dcf:	xchg   esp,eax
   140008dd0:	int3   
   140008dd1:	add    DWORD PTR [rax],esi
   140008dd3:	mov    esi,0x8137f74b
   140008dd8:	ins    DWORD PTR es:[rdi],dx
   140008dd9:	icebp  
   140008dda:	jl     0x140008dde
   140008ddc:	xchg   ecx,eax
   140008ddd:	es (bad) 
   140008ddf:	jo     0x140008daf
   140008de1:	xor    DWORD PTR [rax],ebp
   140008de3:	(bad)
   140008de7:	sbb    eax,0xed7b8d68
   140008dec:	mov    WORD PTR [rbp+rdi*2-0x726c0c6e],gs
   140008df3:	mov    ch,0xb9
   140008df5:	movabs ds:0xcbcbdb87beee5c50,al
   140008dfe:	(bad)  
   140008dff:	cmc    
   140008e00:	shl    BYTE PTR [rax],1
   140008e02:	(bad)  
   140008e03:	xor    edi,edi
   140008e05:	sub    bl,al
   140008e07:	leave  
   140008e08:	xchg   ebx,eax
   140008e09:	fidiv  WORD PTR [rdx]
   140008e0b:	rex.WR cmp rax,0x20eeb4b4
   140008e11:	in     al,dx
   140008e12:	rol    DWORD PTR [rbx-0xa00a951],1
   140008e18:	repnz sbb eax,0x2bafc55
   140008e1e:	neg    BYTE PTR [rax+0x5d]
   140008e21:	push   0x12
   140008e23:	repnz out dx,eax
   140008e25:	scas   al,BYTE PTR es:[rdi]
   140008e26:	pop    rsp
   140008e27:	mov    dh,0x9b
   140008e29:	addr32 mov eax,0x761871ea
   140008e2f:	nop
   140008e30:	lock xor al,0x44
   140008e33:	pop    rbp
   140008e34:	jle    0x140008e98
   140008e36:	push   rbx
   140008e37:	xchg   esp,eax
   140008e38:	int3   
   140008e39:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008e3a:	repz rex.X movabs ds:0x4680242c3ea8061f,al
   140008e45:	rex.X outs dx,BYTE PTR ds:[rsi]
   140008e47:	add    eax,0x91b12364
   140008e4c:	ins    DWORD PTR es:[rdi],dx
   140008e4d:	(bad)  
   140008e4e:	and    al,0x90
   140008e50:	popf   
   140008e51:	(bad)  
   140008e52:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140008e53:	push   rbp
   140008e54:	fnstsw WORD PTR [rsi-0x9]
   140008e57:	mov    esi,0xc6e37efe
   140008e5c:	rex.WRB cld 
   140008e5e:	ret    0xfe2f
   140008e61:	stos   BYTE PTR es:[rdi],al
   140008e62:	ror    DWORD PTR [rbx+rbx*1-0x91d91c9],cl
   140008e69:	jnp    0x140008e7a
   140008e6b:	hlt    
   140008e6c:	out    dx,eax
   140008e6d:	shl    DWORD PTR [rbx-0x4020d88d],cl
   140008e73:	dec    DWORD PTR [rdi]
   140008e75:	push   QWORD PTR [rbp+0x30]
   140008e78:	fbld   TBYTE PTR [rsi-0x45]
   140008e7b:	(bad)
   140008e7e:	(bad)  
   140008e7f:	jo     0x140008e53
   140008e81:	push   rcx
   140008e82:	cld    
   140008e83:	cli    
   140008e84:	jg     0x140008e7f
   140008e86:	xor    eax,0xff4fccfc
   140008e8b:	add    eax,0xbf5beb7c
   140008e90:	lea    ebp,[rdi]
   140008e92:	jge    0x140008e7d
   140008e94:	xor    edi,eax
   140008e96:	(bad)  
   140008e97:	pop    rdi
   140008e98:	sti    
   140008e99:	outs   dx,DWORD PTR ds:[rsi]
   140008e9a:	js     0x140008e8c
   140008e9c:	lock or al,0xcf
   140008e9f:	cmp    al,0xfb
   140008ea1:	pop    rsp
   140008ea2:	xor    al,0x1f
   140008ea4:	shl    BYTE PTR [rbx+0x7833b21b],1
   140008eaa:	sbb    eax,0x3a000294
   140008eaf:	out    dx,eax
   140008eb0:	mov    edi,0xda5db001
   140008eb5:	mov    ecx,0x7a6fc9d2
   140008eba:	mov    esp,0x955e1664
   140008ebf:	add    edi,DWORD PTR [rsi+0x65]
   140008ec2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140008ec3:	pop    rbx
   140008ec4:	(bad)  
   140008ec5:	push   0xfffffffff49b555a
   140008eca:	(bad)  
   140008ecb:	adc    DWORD PTR [rcx],ecx
   140008ecd:	enter  0x32fa,0x25
   140008ed1:	stos   DWORD PTR es:[rdi],eax
   140008ed2:	xchg   DWORD PTR [rbp+rdi*8-0x4794df54],edx
   140008ed9:	stos   DWORD PTR es:[rdi],eax
   140008eda:	ds pushf 
   140008edc:	(bad)  
   140008edd:	es mov ah,0x9f
   140008ee0:	lods   al,BYTE PTR ds:[rsi]
   140008ee1:	rol    DWORD PTR [rsi],cl
   140008ee3:	add    eax,esi
   140008ee5:	(bad)  
   140008ee6:	mov    cl,0x43
   140008ee8:	repz sbb al,BYTE PTR [rsi+rbp*2]
   140008eec:	sar    BYTE PTR [rbx+rax*2+0x1e],0xbb
   140008ef1:	in     eax,dx
   140008ef2:	mov    esi,0x6e248e6
   140008ef7:	stc    
   140008ef8:	jl     0x140008f03
   140008efa:	pop    rsp
   140008efb:	(bad)  
   140008efc:	out    dx,al
   140008efd:	push   rbp
   140008efe:	rex (bad) 
   140008f00:	and    eax,0xb6f463fe
   140008f05:	rex.B jp 0x140008ec6
   140008f08:	test   eax,0xddf032df
   140008f0d:	(bad)  
   140008f0e:	(bad)  
   140008f0f:	movabs eax,ds:0x879610adfcf3e741
   140008f18:	out    dx,eax
   140008f19:	mov    edi,0x9819ea0a
   140008f1e:	shl    DWORD PTR [rcx+0x7b],1
   140008f21:	xchg   esp,eax
   140008f22:	rex.R out dx,eax
   140008f24:	stc    
   140008f25:	pop    rdx
   140008f26:	or     DWORD PTR [rcx],ebp
   140008f28:	jp     0x140008f67
   140008f2a:	fld    DWORD PTR [rdx]
   140008f2c:	mov    eax,ebp
   140008f2e:	(bad)  
   140008f2f:	adc    cl,BYTE PTR [rip+0xa405b20]        # 0x14a40ea55
   140008f35:	enter  0xc5b6,0x56
   140008f39:	rex.WX
   140008f3a:	ds add edi,edx
   140008f3d:	(bad)  
   140008f3e:	shr    BYTE PTR [rsi+0x3e],cl
   140008f41:	jne    0x140008f4e
   140008f43:	(bad)  
   140008f44:	lahf   
   140008f45:	mov    edx,0xfd861f65
   140008f4a:	add    ebp,DWORD PTR [rbp+0x2b]
   140008f4d:	std    
   140008f4e:	stc    
   140008f4f:	(bad)  
   140008f50:	repnz pushf 
   140008f52:	lahf   
   140008f53:	scas   al,BYTE PTR es:[rdi]
   140008f54:	and    BYTE PTR [rbp+0x676d9080],ah
   140008f5a:	mov    DWORD PTR [rax],esp
   140008f5c:	movabs al,ds:0xeaf87f02e595c064
   140008f65:	div    DWORD PTR [rax-0xb]
   140008f68:	clc    
   140008f69:	or     BYTE PTR [rdi+0x78c7fabe],ch
   140008f6f:	sti    
   140008f70:	std    
   140008f71:	sti    
   140008f72:	clc    
   140008f73:	popf   
   140008f74:	(bad)  
   140008f76:	(bad)  
   140008f77:	clc    
   140008f78:	ret    0x5ee7
   140008f7b:	shl    DWORD PTR [rdi-0x1f801c82],0xe7
   140008f82:	(bad)  
   140008f83:	out    0xcf,al
   140008f85:	(bad)  
   140008f86:	mov    ebx,0xf7a06725
   140008f8b:	sub    ebp,0x32226c2
   140008f91:	popf   
   140008f92:	add    ebx,DWORD PTR [rax-0x60]
   140008f95:	mov    bh,0x7f
   140008f97:	int3   
   140008f98:	add    BYTE PTR [rsi+rbp*1+0x3db30eae],al
   140008f9f:	mov    DWORD PTR [rbp-0x6],esp
   140008fa2:	jge    0x140008f88
   140008fa4:	vmwrite rdx,QWORD PTR [rbx+0x3e]
   140008fa8:	and    dh,BYTE PTR [rsi-0x350d8641]
   140008fae:	push   rax
   140008faf:	(bad)  
   140008fb0:	xor    esp,ebp
   140008fb2:	mov    ecx,0x139543c6
   140008fb7:	int3   
   140008fb8:	jmp    0xcf1f2ea4
   140008fbd:	sar    ecx,1
   140008fbf:	gs rex.WX ins BYTE PTR es:[rdi],dx
   140008fc2:	push   rdi
   140008fc3:	repz clc 
   140008fc5:	mov    esp,0x34cf0767
   140008fca:	(bad)  
   140008fcb:	or     eax,0x3c4d1bb6
   140008fd0:	in     al,dx
   140008fd1:	(bad)  
   140008fd2:	movsxd ecx,DWORD PTR [rcx-0x3b]
   140008fd5:	mov    ?,WORD PTR [rdx-0x60]
   140008fd8:	and    ecx,0xcc0af9c6
   140008fde:	rex.W
   140008fdf:	fwait
   140008fe0:	push   rdx
   140008fe1:	(bad)  
   140008fe2:	out    dx,eax
   140008fe3:	and    ah,dl
   140008fe5:	pop    rcx
   140008fe6:	test   BYTE PTR [rsi],ah
   140008fe8:	xlat   BYTE PTR ds:[rbx]
   140008fe9:	gs and al,0xce
   140008fec:	xor    ecx,edi
   140008fee:	call   0xc9d535c0
   140008ff3:	xor    eax,ebx
   140008ff5:	add    dh,BYTE PTR [rdx+0xb]
   140008ff8:	xor    al,0xb
   140008ffa:	mov    DWORD PTR [rsi-0x2e976feb],esi
   140009000:	or     BYTE PTR [rcx],al
   140009002:	mov    ecx,0x7dbd8531
   140009007:	sti    
   140009008:	int    0xa1
   14000900a:	add    esi,edx
   14000900c:	ss push 0xffffffffde77be6c
   140009012:	jp     0x140009051
   140009014:	sbb    BYTE PTR [rbx-0x3],bh
   140009017:	stos   BYTE PTR es:[rdi],al
   140009018:	shl    ch,0xef
   14000901b:	jg     0x140009022
   14000901d:	add    al,dh
   14000901f:	fldenv [rdi]
   140009021:	mov    edx,0xe00b4421
   140009026:	(bad)  
   140009027:	mov    esi,0xeef823fa
   14000902c:	(bad)  
   14000902d:	std    
   14000902e:	jrcxz  0x140008fe4
   140009030:	sub    ah,BYTE PTR [rax+rbp*8]
   140009033:	sbb    al,0x80
   140009035:	pop    rdx
   140009036:	add    eax,0x3107e4d0
   14000903b:	add    BYTE PTR [rax+rdi*2+0x19],ah
   14000903f:	and    bh,BYTE PTR [rsi+0x5f]
   140009042:	and    bh,cl
   140009044:	or     BYTE PTR [rdx+0x6936a79f],dl
   14000904a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000904b:	rex.WX movsxd rsp,DWORD PTR [rdx-0x38]
   14000904f:	mov    al,0xcd
   140009051:	sbb    DWORD PTR [rdx],ebx
   140009053:	fwait
   140009054:	leave  
   140009055:	mov    bl,0xc0
   140009057:	mov    ah,0x2d
   140009059:	ins    DWORD PTR es:[rdi],dx
   14000905a:	xor    DWORD PTR [rdx+0x74],0xffffffcc
   14000905e:	cmp    eax,0x47d2cf12
   140009063:	nop
   140009064:	data16 cmp BYTE PTR [rbp+0x2a],al
   140009068:	(bad)  
   140009069:	(bad)  
   14000906a:	xchg   ebp,eax
   14000906b:	retf   
   14000906c:	(bad)  
   14000906d:	in     eax,0xf9
   14000906f:	sti    
   140009070:	sahf   
   140009071:	outs   dx,BYTE PTR ds:[rsi]
   140009072:	xor    dh,BYTE PTR [rbp-0x4e]
   140009075:	mov    ah,0x2f
   140009077:	push   rdx
   140009078:	out    0x46,eax
   14000907a:	mov    esp,0x494cdda0
   14000907f:	or     esp,DWORD PTR [rcx+0x5]
   140009082:	neg    DWORD PTR [rbp-0x461068a7]
   140009088:	fidiv  DWORD PTR ds:[rbp+0xfb38d86]
   14000908f:	xchg   edx,eax
   140009090:	sahf   
   140009091:	xor    edi,DWORD PTR [rbp-0x38]
   140009094:	adc    DWORD PTR [rbx],eax
   140009096:	rex.R
   140009097:	repnz (bad) 
   140009099:	rex xchg edi,eax
   14000909b:	jmp    0x140009119
   14000909d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000909e:	test   bl,dh
   1400090a0:	pop    rbx
   1400090a1:	(bad)  
   1400090a2:	pop    rsi
   1400090a3:	je     0x14000904a
   1400090a5:	sub    DWORD PTR [rdi-0x59],ebx
   1400090a8:	(bad)  
   1400090a9:	xchg   ecx,eax
   1400090aa:	(bad)  
   1400090ab:	and    BYTE PTR [rbp+0x43d0061e],al
   1400090b1:	(bad)  
   1400090b2:	or     esp,DWORD PTR [rbx+0x0]
   1400090b5:	fidiv  DWORD PTR [rsi+0x12dd9485]
   1400090bb:	(bad)  
   1400090bc:	mov    ebx,0xd168a405
   1400090c1:	add    al,bl
   1400090c3:	mov    al,BYTE PTR [rsi]
   1400090c5:	push   0xffffffffe37e16ba
   1400090ca:	(bad)  
   1400090cb:	mov    edi,0xba83f12
   1400090d0:	or     esi,edx
   1400090d2:	or     DWORD PTR [rdx+rdi*1],eax
   1400090d5:	loop   0x140009142
   1400090d7:	repnz add esp,DWORD PTR [rsi+0x19]
   1400090db:	xor    BYTE PTR [rsp+rax*8-0x80],bl
   1400090df:	xlat   BYTE PTR ds:[rbx]
   1400090e0:	xlat   BYTE PTR ds:[rbx]
   1400090e1:	mov    cl,0xd2
   1400090e3:	and    al,BYTE PTR [rax+0x43a44e53]
   1400090e9:	mov    cl,0xb2
   1400090eb:	sub    al,0x4d
   1400090ed:	and    BYTE PTR [rcx+rbx*2+0xca1eabb],al
   1400090f4:	sbb    DWORD PTR [rcx-0x493449cc],0xffffffdd
   1400090fb:	mov    esp,fs
   1400090fd:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400090fe:	mov    dl,0x5a
   140009100:	iret   
   140009101:	rex.W shr BYTE PTR [rax+rbx*4],0xb7
   140009106:	sti    
   140009107:	div    BYTE PTR [rdx]
   140009109:	shr    DWORD PTR [rbp+0x56b97557],cl
   14000910f:	popf   
   140009110:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009111:	xor    BYTE PTR [rbx],0x55
   140009114:	(bad)  
   140009115:	rex.WRB or BYTE PTR [r9-0x1527b609],r13b
   14000911c:	push   rdi
   14000911d:	mov    BYTE PTR [rsi+0x72],ch
   140009120:	mov    BYTE PTR [rsi+0x654ed51b],bl
   140009126:	rex.WR (bad) 
   140009128:	stos   BYTE PTR es:[rdi],al
   140009129:	sub    DWORD PTR [rcx+0x2ee288df],0xd
   140009130:	adc    eax,0x924596c9
   140009135:	cld    
   140009136:	(bad)  
   140009137:	clc    
   140009138:	mov    ss,ebx
   14000913a:	sbb    edi,DWORD PTR [rdx]
   14000913c:	rex (bad) 
   14000913e:	adc    BYTE PTR [rax+0x36],bl
   140009141:	fld    QWORD PTR [rdi-0x149d6488]
   140009147:	out    dx,al
   140009148:	mov    dl,0x3f
   14000914a:	cmp    bh,ch
   14000914c:	rex.WXB pop r11
   14000914e:	pop    rsp
   14000914f:	(bad)  
   140009151:	in     al,dx
   140009152:	or     eax,0xe5c0df45
   140009157:	(bad)  
   140009159:	mov    ebx,DWORD PTR [rsi+0x2e]
   14000915c:	xchg   esi,eax
   14000915d:	mov    edx,0xda865d3e
   140009162:	(bad)  
   140009163:	add    BYTE PTR [rsi],0x6f
   140009166:	fdivr  QWORD PTR [rsi+0x5f]
   140009169:	sbb    esp,DWORD PTR [rsi+0x61]
   14000916c:	sbb    eax,0x8205f1a0
   140009171:	mov    ch,0x99
   140009173:	out    dx,eax
   140009174:	imul   edx,DWORD PTR [rax],0xf6c37866
   14000917a:	xor    eax,eax
   14000917c:	sbb    BYTE PTR [rax-0xb],dh
   14000917f:	popf   
   140009180:	js     0x14000918c
   140009182:	and    eax,ecx
   140009184:	movabs eax,ds:0xb566ef2d433d1ff2
   14000918d:	mov    DWORD PTR [rsi+rax*4+0x53b4cd34],esi
   140009194:	add    bl,dh
   140009196:	jmp    0x1443e9baf
   14000919b:	call   0x176b030b3
   1400091a0:	mov    esi,0xee8c51b4
   1400091a5:	sbb    ah,dh
   1400091a7:	movabs al,ds:0x91e2a2a0d1a593ad
   1400091b0:	rex.RB (bad) 
   1400091b2:	or     BYTE PTR [rsi],cl
   1400091b4:	shl    ch,0xc7
   1400091b7:	scas   al,BYTE PTR es:[rdi]
   1400091b8:	loopne 0x1400091b8
   1400091ba:	ret    
   1400091bb:	adc    ecx,DWORD PTR [rdx+rcx*2]
   1400091be:	cmp    BYTE PTR [rdx],cl
   1400091c1:	ror    BYTE PTR [rbx+riz*4-0x1680e41],0xfa
   1400091c9:	stos   DWORD PTR es:[rdi],eax
   1400091ca:	out    0x6b,eax
   1400091cc:	jno    0x140009151
   1400091ce:	rex.R ror DWORD PTR [rdi],1
   1400091d1:	cli    
   1400091d2:	(bad)  
   1400091d3:	imul   ebp,DWORD PTR [rdi+0x97ff411],0xffffffad
   1400091da:	repnz and bh,dh
   1400091dd:	and    al,0x4c
   1400091df:	rex.RB test eax,0xdae5a2dd
   1400091e5:	mov    ebp,0x115013e3
   1400091ea:	mov    r14b,0x3a
   1400091ed:	or     cl,BYTE PTR [rbx+rbx*2-0x1eb4ba43]
   1400091f4:	and    al,0xf0
   1400091f6:	stos   DWORD PTR es:[rdi],eax
   1400091f7:	adc    bl,BYTE PTR [rbp+0x32]
   1400091fa:	or     DWORD PTR [rax+0x7f0f8c7a],edi
   140009200:	jmp    0x140009259
   140009202:	dec    ch
   140009204:	xchg   edi,eax
   140009205:	rex.WR pop rsp
   140009207:	mov    eax,0x432202a
   14000920c:	cmp    BYTE PTR [rdi-0x75],bl
   14000920f:	sbb    edi,DWORD PTR [rdi-0x10]
   140009212:	pop    rbx
   140009213:	jmp    FWORD PTR [rsi+0x78]
   140009216:	mov    ebp,0xe2a2a2a1
   14000921b:	(bad)  
   14000921c:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000921e:	(bad)  
   14000921f:	jmp    FWORD PTR [rbx+0x7e8366dd]
   140009225:	ret    0xc875
   140009228:	(bad)  
   140009229:	jns    0x1400091b1
   14000922b:	add    ah,bl
   14000922d:	pop    rax
   14000922e:	jge    0x140009217
   140009230:	cmp    ebx,edi
   140009232:	sub    eax,ebx
   140009234:	mov    esp,0x8bcb8a8a
   140009239:	sar    BYTE PTR [rdi+rdx*2],1
   14000923c:	test   eax,0x5ff143fc
   140009241:	clc    
   140009242:	ret    0xb217
   140009245:	repz mov al,0xd1
   140009248:	jne    0x14000926b
   14000924a:	(bad)  
   14000924b:	pop    rbx
   14000924c:	push   rcx
   14000924d:	icebp  
   14000924e:	enter  0x2a61,0xf9
   140009252:	out    0x83,eax
   140009254:	mov    BYTE PTR [rsi],cl
   140009256:	(bad)  
   140009257:	stc    
   140009258:	hlt    
   140009259:	sbb    dh,BYTE PTR [rdi+0x447a8700]
   14000925f:	adc    eax,0xb30e9715
   140009264:	sbb    DWORD PTR [rax+0xcceaf01],edx
   14000926a:	rex ins BYTE PTR es:[rdi],dx
   14000926c:	ret    
   14000926d:	rex.WR
   14000926e:	rex.RB
   14000926f:	(bad)
   140009273:	add    BYTE PTR [rbp+0x6ab6059d],ah
   140009279:	add    ch,BYTE PTR [rdx]
   14000927b:	sub    cl,BYTE PTR [rsi]
   14000927d:	psubusw mm1,QWORD PTR [rdx]
   140009280:	movabs eax,ds:0xc049f3a9c86fb1bf
   140009289:	(bad)  
   14000928a:	pop    rcx
   14000928b:	push   rbp
   14000928c:	test   al,0xa8
   14000928e:	test   al,0x88
   140009290:	movabs al,ds:0x8b6441fce7df7484
   140009299:	rex.WRB mov r13b,0x2
   14000929c:	adc    eax,0xd61d9715
   1400092a1:	int    0x40
   1400092a3:	and    BYTE PTR [rbx-0x80],ah
   1400092a6:	out    dx,al
   1400092a7:	retf   
   1400092a8:	std    
   1400092a9:	mov    ebx,0x2a1143ee
   1400092ae:	sub    ch,BYTE PTR [rdx]
   1400092b0:	(bad)  
   1400092b1:	sbb    al,0xdd
   1400092b3:	jle    0x14000932e
   1400092b5:	cmc    
   1400092b6:	and    eax,0x227dcc98
   1400092bb:	nop
   1400092bc:	xchg   ebp,eax
   1400092bd:	clc    
   1400092be:	(bad)  
   1400092bf:	mov    esi,0x926f1972
   1400092c4:	test   al,0xa8
   1400092c6:	sub    BYTE PTR [rdi-0x3bfe0847],cl
   1400092cc:	sar    al,cl
   1400092ce:	(bad)  
   1400092cf:	xchg   BYTE PTR [rbx+0x10f9e1a2],dl
   1400092d5:	sub    bh,0xf3
   1400092d8:	lods   eax,DWORD PTR ds:[rsi]
   1400092d9:	repz adc DWORD PTR [rip+0x54840715],0xdc439303        # 0x1948499f9
   1400092e4:	cmp    al,BYTE PTR [rdi]
   1400092e6:	push   rax
   1400092e7:	push   rcx
   1400092e8:	push   rcx
   1400092e9:	add    BYTE PTR [rdi+0x742811b8],al
   1400092ef:	sti    
   1400092f0:	cmp    BYTE PTR [rbp-0x453ff045],al
   1400092f6:	(bad)
   1400092f9:	movabs ds:0x39e5a92036947e62,al
   140009302:	rex.XB cmp BYTE PTR [r10-0x1d5d57e7],0x62
   14000930a:	and    DWORD PTR [rsi-0xa],eax
   14000930d:	and    DWORD PTR [rbx],edi
   14000930f:	adc    BYTE PTR [rax+0x0],dl
   140009312:	adc    eax,0x84871515
   140009317:	mov    ecx,0x559e1886
   14000931c:	add    bl,dh
   14000931e:	mov    bh,0xa2
   140009320:	movabs ds:0x7f7a8a046f7d8e22,al
   140009329:	mul    ah
   14000932b:	and    al,0x3f
   14000932d:	mov    eax,0x4509d002
   140009332:	popf   
   140009333:	add    eax,0xc0b8a8a8
   140009338:	rex.W mov bpl,0x29
   14000933b:	out    dx,al
   14000933c:	sub    al,al
   14000933e:	add    esi,ecx
   140009340:	push   si
   140009342:	push   rsp
   140009343:	pop    rsp
   140009344:	push   rsi
   140009345:	xchg   esp,eax
   140009346:	pop    rsp
   140009347:	sti    
   140009348:	ja     0x14000932d
   14000934a:	xor    ebx,DWORD PTR [rdi+0x51515007]
   140009350:	xchg   ecx,eax
   140009351:	mov    ds,WORD PTR [rbp+0x2c]
   140009354:	std    
   140009355:	lea    ebp,[rdi-0x7fd52b9d]
   14000935b:	leave  
   14000935c:	hlt    
   14000935d:	(bad)  
   14000935e:	push   rbx
   14000935f:	mov    bh,0x5e
   140009361:	sbb    BYTE PTR [rcx+0x73],bl
   140009364:	rex.RB
   140009365:	(bad)
   140009369:	out    dx,eax
   14000936a:	jmp    0x14000938b
   14000936c:	xor    al,BYTE PTR [rbx]
   14000936e:	out    dx,al
   14000936f:	mov    ebp,0x6759000
   140009374:	movabs al,ds:0x785beaf87f0062a2
   14000937d:	jrcxz  0x14000934c
   14000937f:	cmp    edx,DWORD PTR [rbx]
   140009381:	rex.WXB or r11,rdx
   140009384:	(bad)
   140009388:	loope  0x140009391
   14000938a:	jmp    FWORD PTR ds:[rax+rsi*1-0x42]
   14000938f:	xchg   esp,eax
   140009390:	cli    
   140009391:	jo     0x140009331
   140009393:	or     bl,BYTE PTR [rbx+rax*4-0x485c05c1]
   14000939a:	lock out 0x5b,al
   14000939d:	push   rbx
   14000939e:	rex.WRXB
   14000939f:	(bad)
   1400093a3:	ret    0xb7f3
   1400093a6:	lock stc 
   1400093a8:	iret   
   1400093a9:	(bad)  
   1400093aa:	mov    edi,0x185c66ef
   1400093af:	sub    rcx,rsi
   1400093b2:	(bad)  
   1400093b3:	fwait
   1400093b4:	ja     0x1400093a6
   1400093b6:	adc    edi,DWORD PTR [rdi]
   1400093b8:	(bad)  
   1400093b9:	cdq    
   1400093ba:	shl    DWORD PTR [rsi+rsi*8-0xeadf985],0xed
   1400093c2:	(bad)  
   1400093c4:	outs   dx,BYTE PTR ds:[rsi]
   1400093c5:	(bad)  
   1400093c6:	add    BYTE PTR [rdx+rax*4-0x2b3f9109],dl
   1400093cd:	ss mov edi,0xfc1dd6f9
   1400093d3:	movabs ds:0x324bcf5e7d07fcff,eax
   1400093dc:	jl     0x14000944d
   1400093de:	and    eax,0x4fd6cbb0
   1400093e3:	cs xchg ebp,eax
   1400093e5:	shl    DWORD PTR [rax+rsi*4],1
   1400093e8:	sar    DWORD PTR [rax-0x2e],cl
   1400093eb:	jp     0x1400093d8
   1400093ed:	adc    al,0xfc
   1400093ef:	cmp    ebp,DWORD PTR [rbx-0x3438e435]
   1400093f5:	movabs al,ds:0x47f3705f2f31202f
   1400093fe:	jrcxz  0x140009458
   140009400:	cmp    eax,0xfc6615e4
   140009405:	pop    rbp
   140009406:	adc    BYTE PTR [rsi-0x22],cl
   140009409:	pop    rax
   14000940a:	sbb    al,0xff
   14000940c:	cs add esi,ebp
   14000940f:	leave  
   140009410:	lock xor DWORD PTR [rdx-0x50784048],edx
   140009417:	sbb    ax,WORD PTR [rax+0x676fb7db]
   14000941e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000941f:	mov    edi,0xb9ee7808
   140009424:	cld    
   140009425:	xchg   DWORD PTR [rax+0x2f],esp
   140009428:	xchg   edi,eax
   140009429:	sub    edi,0xffffffd6
   14000942c:	or     DWORD PTR [rdx],esp
   14000942e:	in     al,0xc5
   140009430:	mov    bh,0xdb
   140009432:	ins    DWORD PTR es:[rdi],dx
   140009433:	not    DWORD PTR [rsi]
   140009435:	movabs ds:0x90df22108c6b7bb6,eax
   14000943e:	call   0x171c5355a
   140009443:	mov    esi,0xb46556f5
   140009448:	sub    dh,bl
   14000944a:	sbb    ah,BYTE PTR [rdi+0x15cde3f0]
   140009450:	mov    cl,0x44
   140009452:	add    dh,cl
   140009454:	xor    eax,0x9af10369
   140009459:	movabs ds:0xeafdba1490565c22,eax
   140009462:	cmp    ebp,DWORD PTR [rdi]
   140009464:	rex.XB call 0x17fa95ca1
   14000946a:	ror    dl,cl
   14000946c:	ror    bl,0xb6
   14000946f:	(bad)  
   140009470:	test   eax,0xec215eaf
   140009475:	cmp    dl,BYTE PTR [rbp-0x47]
   140009478:	loopne 0x140009441
   14000947a:	sbb    al,0x28
   14000947c:	xlat   BYTE PTR ds:[rbx]
   14000947d:	jns    0x140009452
   14000947f:	outs   dx,BYTE PTR ds:[rsi]
   140009480:	and    bh,cl
   140009482:	or     eax,0xddb073dc
   140009487:	outs   dx,BYTE PTR ds:[rsi]
   140009488:	pop    rcx
   140009489:	rex.RXB sbb r13d,r11d
   14000948c:	mov    ecx,0xbb9c3b2e
   140009491:	out    dx,al
   140009492:	es rex.W jno 0x1400094db
   140009496:	lock adc BYTE PTR [rsi-0x55],dl
   14000949a:	adc    eax,0x62c1a69a
   14000949f:	mov    cl,0x80
   1400094a1:	adc    BYTE PTR [rdx],al
   1400094a3:	rex.WRB shl QWORD PTR [r13+rdx*8+0x7c3109a9],cl
   1400094ab:	rex.WRXB movabs al,ds:0x89fbb203cce076fb
   1400094b5:	mov    BYTE PTR [rax],dl
   1400094b7:	push   rbp
   1400094b8:	xor    eax,0x469a0009
   1400094bd:	frstor [rdi+0x101379ec]
   1400094c3:	in     al,dx
   1400094c4:	(bad)  
   1400094c5:	iret   
   1400094c6:	fs (bad) 
   1400094c8:	rex.WB fisttp WORD PTR [r8]
   1400094cb:	and    al,0x90
   1400094cd:	fist   WORD PTR [rax-0x7b9de27b]
   1400094d3:	cld    
   1400094d4:	cli    
   1400094d5:	and    esi,0xffffffb7
   1400094d8:	retf   0x9b7
   1400094db:	(bad)  
   1400094dc:	or     eax,0x96d72d21
   1400094e1:	or     esi,DWORD PTR [rsi+rbp*1]
   1400094e4:	rex.R jle 0x1400094fa
   1400094e7:	scas   al,BYTE PTR es:[rdi]
   1400094e8:	mov    dl,0x84
   1400094ea:	or     BYTE PTR [rsi-0x75fdcf94],bl
   1400094f0:	(bad)  
   1400094f1:	mov    ebp,0x1a69a35e
   1400094f6:	std    
   1400094f7:	mov    edi,0x3cee17cb
   1400094fc:	movsxd edi,DWORD PTR [rbp+riz*8+0x71a94745]
   140009503:	not    DWORD PTR [rax]
   140009505:	icebp  
   140009506:	mov    ebx,0xf3f380ba
   14000950b:	jae    0x140009539
   14000950d:	(bad)  
   14000950e:	or     ebx,DWORD PTR [rbx*1+0x5cb9611d]
   140009515:	(bad)  
   140009516:	xlat   BYTE PTR ds:[rbx]
   140009517:	lahf   
   140009518:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009519:	mov    ah,0x4d
   14000951b:	movabs rax,ds:0x54e076f827ad1188
   140009525:	mov    al,0xf7
   140009527:	xchg   esp,eax
   140009528:	xor    ecx,ebp
   14000952a:	lods   al,BYTE PTR ds:[rsi]
   14000952b:	add    ch,BYTE PTR [rbp-0x65b0c50c]
   140009531:	out    0x97,eax
   140009533:	(bad)  
   140009534:	(bad)  
   140009535:	mov    ecx,0x2435c336
   14000953a:	es (bad) 
   14000953c:	test   eax,0x381e42b
   140009541:	ficom  WORD PTR [rdx+0x38fa5112]
   140009547:	cmp    al,0x28
   140009549:	shl    DWORD PTR [rbx],0xc7
   14000954c:	leave  
   14000954d:	(bad)  
   14000954e:	or     DWORD PTR [rax],0x69e10228
   140009554:	or     eax,DWORD PTR [rax]
   140009556:	mov    ah,0xe1
   140009558:	cli    
   140009559:	cli    
   14000955a:	imul   esi,DWORD PTR [rax],0x64
   14000955d:	xor    BYTE PTR [rcx+rdx*1],ch
   140009560:	adc    ebx,0xffffffd3
   140009563:	push   rbx
   140009564:	sub    al,0x97
   140009566:	rex.WXB fstp st(1)
   140009569:	(bad)  
   14000956a:	(bad)  
   14000956b:	fnstsw WORD PTR [rdx+0x15]
   14000956e:	push   rcx
   14000956f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009570:	nop
   140009571:	jns    0x14000959f
   140009573:	rex.WRX
   140009574:	rex.WRX
   140009575:	rex.WRX jo 0x1400095f4
   140009578:	jl     0x140009586
   14000957a:	add    BYTE PTR [rdx-0x63],bl
   14000957d:	and    eax,0xb941332b
   140009582:	(bad)  
   140009583:	xchg   BYTE PTR [rbp+0x5c6f7c00],ah
   140009589:	rex.WRXB stos BYTE PTR es:[rdi],al
   14000958b:	or     esi,esi
   14000958d:	fcomp  DWORD PTR [rbx-0x6f]
   140009590:	int3   
   140009591:	ins    DWORD PTR es:[rdi],dx
   140009592:	xchg   esp,eax
   140009593:	jg     0x140009521
   140009595:	out    dx,al
   140009596:	mov    cs,WORD PTR [rbx+0x4ac729a5]
   14000959c:	sbb    ebp,DWORD PTR [rdx-0x672a696d]
   1400095a2:	xchg   edi,eax
   1400095a3:	retf   0xe9c3
   1400095a6:	in     eax,dx
   1400095a7:	mov    ss,edi
   1400095a9:	(bad)  
   1400095aa:	cmp    ah,BYTE PTR [rbx]
   1400095ac:	loopne 0x140009533
   1400095ae:	add    eax,0xd8d3059
   1400095b3:	(bad)  
   1400095b4:	push   0xffffffff8270cead
   1400095b9:	and    eax,0x3a7e4b0a
   1400095be:	out    dx,eax
   1400095bf:	(bad)  
   1400095c0:	(bad)  
   1400095c1:	fst    DWORD PTR [rbx-0x7ba491cc]
   1400095c7:	adc    eax,0xc18a40e
   1400095cc:	fcmovu st,st(1)
   1400095ce:	xchg   esp,eax
   1400095cf:	or     ch,BYTE PTR [rax+0x5d8300c3]
   1400095d5:	fucomip st,st(6)
   1400095d7:	sub    esp,DWORD PTR [rbp+0x19d9d9c4]
   1400095dd:	add    BYTE PTR [rax-0x11],ch
   1400095e0:	(bad)  
   1400095e1:	push   0xffffffffffffff87
   1400095e3:	mov    bh,0x6d
   1400095e5:	mov    ebp,0xaf0314d3
   1400095ea:	(bad)  
   1400095eb:	pop    rdx
   1400095ec:	xchg   edx,eax
   1400095ed:	hlt    
   1400095ee:	sub    al,0xde
   1400095f1:	rex.RX
   1400095f2:	fwait
   1400095f3:	jae    0x1400095ce
   1400095f5:	or     eax,0x697207d1
   1400095fa:	bnd ja 0x14000967b
   1400095fd:	frstor [rcx]
   1400095ff:	mov    ?,WORD PTR [rbp+0x5b]
   140009602:	push   rdx
   140009603:	ins    BYTE PTR es:[rdi],dx
   140009604:	sbb    BYTE PTR [rcx+0x19501fc9],ah
   14000960a:	lea    ebp,[rsi]
   14000960c:	sub    ebp,DWORD PTR [rbp-0x44]
   14000960f:	(bad)  
   140009610:	mov    ch,0x8d
   140009612:	adc    BYTE PTR [rsi-0x64],cl
   140009615:	ins    DWORD PTR es:[rdi],dx
   140009616:	cmp    al,0xd8
   140009618:	js     0x140009659
   14000961a:	rex jle 0x1400095b0
   14000961d:	rex.RB pop r8
   14000961f:	mov    edi,0xa00ae5fd
   140009624:	jg     0x1400095b5
   140009626:	sti    
   140009627:	xor    BYTE PTR [rcx+0xd8645e1],0x86
   14000962e:	rex.XB
   14000962f:	lock (bad) 
   140009631:	xor    DWORD PTR [rcx+0x7a],0x7a
   140009635:	or     al,BYTE PTR [rax]
   140009637:	pop    rdx
   140009638:	add    eax,0xedfde21c
   14000963d:	mov    ebx,0xa7e3a944
   140009642:	in     eax,0x28
   140009644:	sbb    DWORD PTR [rdx-0xa5ff906],0x7a
   14000964b:	(bad)  
   14000964c:	in     eax,0x72
   14000964e:	mov    DWORD PTR [rsi-0x63a80493],esi
   140009654:	xchg   DWORD PTR [rdi+0x4bcc3600],eax
   14000965a:	jbe    0x14000963f
   14000965c:	repz add BYTE PTR [rsi+0x1],al
   140009660:	or     cl,dl
   140009662:	sub    DWORD PTR [rax],eax
   140009664:	sub    DWORD PTR [rcx+0x7009ba45],eax
   14000966a:	(bad)  
   14000966c:	leave  
   14000966d:	rex.WX and rax,0x3f36477f
   140009673:	jae    0x140009629
   140009675:	out    0xb7,eax
   140009677:	loop   0x14000969e
   140009679:	xchg   ebp,eax
   14000967a:	mov    ch,0xb6
   14000967c:	test   DWORD PTR [rcx+rdx*4],0x9f5c6ed0
   140009683:	iret   
   140009684:	(bad)  
   140009685:	rex.B movabs ds:0xed40ab734984921a,al
   14000968f:	fisubr WORD PTR [rbp-0x1f68769f]
   140009695:	(bad)  
   140009696:	jno    0x1400096a1
   140009698:	jmp    0x14000965c
   14000969a:	pop    rbx
   14000969b:	jno    0x140009677
   14000969d:	(bad)  
   14000969e:	js     0x1400096a8
   1400096a0:	out    dx,al
   1400096a1:	repz cli 
   1400096a3:	rex.RX test eax,0xc4ea11c9
   1400096a9:	lea    esi,[rbx+0x2e10db3b]
   1400096af:	repz sub al,BYTE PTR [rax-0x17]
   1400096b3:	sbb    edi,DWORD PTR [rdx+rdx*2-0x77]
   1400096b7:	outs   dx,DWORD PTR ds:[rsi]
   1400096b8:	adc    DWORD PTR [rdx],0x3f
   1400096bb:	(bad)  
   1400096bc:	mov    edi,0x710bea80
   1400096c1:	cmp    ebp,DWORD PTR cs:[rbx+0x2fa2b900]
   1400096c8:	and    al,0xd1
   1400096ca:	lea    edx,[rdi+0x5]
   1400096cd:	sub    BYTE PTR [rcx-0x2706427c],ah
   1400096d3:	rex.WRX movsxd r10,DWORD PTR [rbp-0x41728e29]
   1400096da:	(bad)  
   1400096db:	fdivr  QWORD PTR [rdi]
   1400096dd:	jno    0x1400096a7
   1400096df:	cmp    al,0xb3
   1400096e1:	ins    DWORD PTR es:[rdi],dx
   1400096e2:	hlt    
   1400096e3:	sbb    cl,al
   1400096e5:	cld    
   1400096e6:	adc    esi,DWORD PTR [rdx+0x4e]
   1400096e9:	stc    
   1400096ea:	mov    dh,0xa1
   1400096ec:	movabs eax,ds:0xfc9712c76384a46d
   1400096f5:	je     0x14000974f
   1400096f7:	in     al,0x10
   1400096f9:	(bad)  
   1400096fb:	(bad)  
   1400096fc:	std    
   1400096fd:	scas   al,BYTE PTR es:[rdi]
   1400096fe:	rex.RX iret 
   140009700:	jno    0x14000970c
   140009702:	inc    bh
   140009704:	adc    ch,BYTE PTR [rdx]
   140009706:	(bad)  
   140009707:	(bad)  
   140009708:	rex.X cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000970a:	adc    al,0x24
   14000970c:	(bad)  
   14000970d:	xor    eax,0x76ed8ffd
   140009712:	retf   
   140009713:	cmp    bl,bl
   140009715:	movabs ds:0x4917447e4f63dc88,eax
   14000971e:	out    0xf3,eax
   140009720:	loop   0x1400096c7
   140009722:	out    dx,eax
   140009723:	(bad)  
   140009724:	push   rsp
   140009725:	out    dx,al
   140009726:	push   rdx
   140009727:	(bad)  
   140009728:	js     0x1400096f8
   14000972a:	sbb    BYTE PTR [rbx],0x0
   14000972d:	(bad)  
   14000972e:	jl     0x140009794
   140009730:	sub    al,BYTE PTR [rbx+rbp*8]
   140009733:	mov    ch,0x4
   140009735:	or     eax,0xb27c92d
   14000973a:	call   0xe5626e86
   14000973f:	(bad)  
   140009740:	repz or dl,ch
   140009743:	mov    cl,0x13
   140009745:	xchg   edi,eax
   140009746:	clc    
   140009747:	sbb    al,0x81
   140009749:	xor    eax,esp
   14000974b:	popf   
   14000974c:	push   rbp
   14000974d:	cmc    
   14000974e:	jle    0x140009712
   140009750:	or     ecx,ebx
   140009752:	movabs ds:0xf0c79be709c1c372,eax
   14000975b:	xlat   BYTE PTR ds:[rbx]
   14000975c:	jmp    0x1a39ec9b6
   140009761:	mov    cl,0xe7
   140009763:	push   rcx
   140009764:	movabs ds:0xde1af2ecfabe994b,al
   14000976d:	mov    BYTE PTR [rbx+riz*2+0x4f],bl
   140009771:	jno    0x14000974c
   140009773:	push   rsi
   140009774:	add    esi,eax
   140009776:	xchg   edx,eax
   140009777:	jo     0x1400097c5
   140009779:	mov    esi,0xcbbd3cb4
   14000977e:	sbb    ch,BYTE PTR [rcx-0x48bb0be2]
   140009784:	outs   dx,DWORD PTR ds:[rsi]
   140009785:	(bad)  
   140009786:	(bad)  
   140009787:	sbb    DWORD PTR [rcx-0x22feffd],0xa7ee6b2a
   140009791:	add    DWORD PTR [rbx-0x34],edx
   140009794:	stos   BYTE PTR es:[rdi],al
   140009795:	sub    al,0xee
   140009797:	sbb    ebp,ebp
   140009799:	(bad)  
   14000979a:	rcr    DWORD PTR [rdi],1
   14000979c:	jge    0x140009743
   14000979e:	shr    BYTE PTR [rdi+0x4c],cl
   1400097a1:	int3   
   1400097a2:	lock ror DWORD PTR [rbp+0x54248a93],0x61
   1400097aa:	pop    rax
   1400097ab:	cmc    
   1400097ac:	or     al,0x11
   1400097ae:	push   rcx
   1400097af:	or     bh,BYTE PTR [rdi-0x64]
   1400097b2:	test   eax,0x7d1b49b
   1400097b7:	xchg   edx,eax
   1400097b8:	push   rdi
   1400097b9:	xor    al,0x5a
   1400097bb:	addr32 nop
   1400097bd:	cmp    dh,bl
   1400097bf:	outs   dx,BYTE PTR ds:[rsi]
   1400097c0:	pop    rbx
   1400097c1:	imul   ecx,DWORD PTR [rax+0x6d],0x53c6adaf
   1400097c8:	bswap  esi
   1400097ca:	loop   0x14000980e
   1400097cc:	fidivr WORD PTR [rbp+0x6bbf2b5]
   1400097d2:	sub    bl,BYTE PTR [rax]
   1400097d4:	test   DWORD PTR [rax-0x6d39d],0xa5fe3fee
   1400097de:	in     al,0xb4
   1400097e0:	scas   eax,DWORD PTR es:[rdi]
   1400097e1:	cmp    al,0x77
   1400097e3:	adc    edi,DWORD PTR [rdi+0x72]
   1400097e6:	fcomi  st,st(3)
   1400097e8:	mov    BYTE PTR [rbp+0x41],bh
   1400097eb:	scas   al,BYTE PTR es:[rdi]
   1400097ec:	scas   eax,DWORD PTR es:[rdi]
   1400097ed:	call   0x130049c6c
   1400097f2:	xlat   BYTE PTR ds:[rbx]
   1400097f3:	(bad)  
   1400097f4:	fmul   QWORD PTR [rdi]
   1400097f6:	rex.WRB (bad) 
   1400097f8:	test   BYTE PTR [rip+0x1f2d093d],dl        # 0x15f2da13b
   1400097fe:	loop   0x1400097c0
   140009800:	push   rdx
   140009801:	add    BYTE PTR [rdx+0x5c],dh
   140009804:	jg     0x1400097f6
   140009806:	adc    dl,dh
   140009808:	lea    esp,[rbx-0x41]
   14000980b:	ins    DWORD PTR es:[rdi],dx
   14000980c:	jns    0x140009879
   14000980e:	jge    0x14000984a
   140009810:	pop    rsi
   140009811:	rcl    BYTE PTR [rbx+0x56],cl
   140009814:	movabs ds:0x785f9dbcceed872c,eax
   14000981d:	ja     0x140009814
   14000981f:	or     DWORD PTR [rdi-0x4d1449e9],ebx
   140009825:	(bad)  
   140009826:	fild   QWORD PTR [rdx-0xd339b3d]
   14000982c:	and    edx,DWORD PTR [rax]
   14000982e:	mov    DWORD PTR [rdi+0x76bdb437],0x78655ef6
   140009838:	fwait
   140009839:	and    eax,0xda71f1b5
   14000983e:	xchg   edx,eax
   14000983f:	push   0x30
   140009841:	(bad)  
   140009842:	xchg   r12d,eax
   140009844:	sbb    dh,ch
   140009846:	sbb    al,0x5f
   140009848:	sti    
   140009849:	rex.R push rdx
   14000984b:	mov    edx,0x71d7aba3
   140009850:	jl     0x1400098bf
   140009852:	ret    
   140009853:	add    ecx,DWORD PTR [rcx-0x1]
   140009856:	adc    ecx,edx
   140009858:	adc    DWORD PTR [rcx],ecx
   14000985a:	(bad)  
   14000985b:	jge    0x140009853
   14000985d:	and    BYTE PTR [rcx+0x6bf6d19d],ch
   140009863:	ret    
   140009864:	adc    bh,BYTE PTR [rdi-0x5fea9b38]
   14000986a:	xchg   edi,eax
   14000986b:	sbb    ah,ah
   14000986d:	jnp    0x140009879
   14000986f:	clc    
   140009870:	rex.R cwde 
   140009872:	jg     0x14000985a
   140009874:	pop    rsp
   140009875:	mov    dl,0xe
   140009877:	(bad)  
   140009879:	adc    dl,BYTE PTR [rcx+0x5]
   14000987c:	pop    rbp
   14000987d:	ret    
   14000987e:	stc    
   14000987f:	rcl    ecx,0x19
   140009882:	neg    eax
   140009884:	rex.WRX cmp sil,r14b
   140009887:	rcl    DWORD PTR [rsi-0x76a2723d],cl
   14000988d:	imul   edi,DWORD PTR [rsp+rbx*4],0xffffffb2
   140009891:	loope  0x140009859
   140009893:	jne    0x14000986b
   140009895:	xchg   ebp,eax
   140009896:	jnp    0x14000990f
   140009898:	xchg   edi,eax
   140009899:	cld    
   14000989a:	and    al,0x90
   14000989c:	int    0xd2
   14000989e:	jnp    0x1400098a8
   1400098a0:	out    dx,al
   1400098a1:	xor    DWORD PTR [rax],ebx
   1400098a3:	jl     0x14000984b
   1400098a5:	(bad)  
   1400098a6:	sbb    ebp,DWORD PTR [rsi]
   1400098a8:	addr32 lahf 
   1400098aa:	rex.B
   1400098ab:	rex.R mov bpl,0x24
   1400098ae:	sbb    DWORD PTR [rdi+rax*2-0x30cf78f4],ecx
   1400098b5:	movabs eax,ds:0xaf4d5713bfe8b9a5
   1400098be:	int3   
   1400098bf:	fsub   DWORD PTR [rdi+0x1]
   1400098c2:	or     BYTE PTR [rcx],ah
   1400098c4:	cli    
   1400098c5:	and    ch,BYTE PTR [rip+0xffffffffac8168e7]        # 0xec8201b2
   1400098cb:	add    dl,BYTE PTR [rax+0x21be8c8f]
   1400098d1:	rex.R (bad) 
   1400098d3:	xlat   BYTE PTR ds:[rbx]
   1400098d4:	out    dx,eax
   1400098d5:	add    ecx,DWORD PTR [rcx+rdi*8]
   1400098d8:	rex.XB mov WORD PTR [r13-0x11],es
   1400098dc:	rcr    DWORD PTR [rbx+0x27],cl
   1400098df:	or     r8,QWORD PTR [rax+r8*4-0x7376a999]
   1400098e7:	ror    BYTE PTR [rax],0x97
   1400098ea:	xchg   ecx,eax
   1400098eb:	sub    bh,cl
   1400098ed:	sbb    DWORD PTR [rcx+0x7c],edi
   1400098f0:	jns    0x14000989f
   1400098f2:	cmp    al,BYTE PTR [rbx-0x2885f38d]
   1400098f8:	and    ebp,DWORD PTR [rdi+0x33]
   1400098fb:	(bad)  
   1400098fc:	ss and al,0x5c
   1400098ff:	(bad)  
   140009901:	rex.WR pop rbx
   140009903:	fdivr  QWORD PTR [rsp+rdi*4]
   140009906:	ds sub ebp,ebx
   140009909:	imul   bl
   14000990b:	data16 js 0x140009923
   14000990e:	xchg   ecx,eax
   14000990f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009910:	popf   
   140009911:	sbb    DWORD PTR [rax+0x3100aba8],edi
   140009917:	loop   0x140009905
   140009919:	fs pop rsi
   14000991b:	ret    
   14000991c:	push   rdx
   14000991d:	popf   
   14000991e:	(bad)  
   14000991f:	stc    
   140009920:	test   DWORD PTR [rbx+rdi*8+0x58],esi
   140009924:	add    bl,ah
   140009926:	popf   
   140009927:	adc    al,0xc3
   14000992a:	sbb    BYTE PTR [rax],0xd8
   14000992d:	add    BYTE PTR ds:[rcx-0x72bf7204],al
   140009934:	xchg   esp,edi
   140009936:	lods   al,BYTE PTR ds:[rsi]
   140009937:	add    al,0x41
   140009939:	(bad)  
   14000993a:	(bad)  
   14000993b:	cmp    al,0x96
   14000993d:	out    0x9e,al
   14000993f:	shl    BYTE PTR [rbx+0xa],1
   140009942:	test   eax,0x19c4f07a
   140009947:	(bad)  
   140009948:	sub    esp,DWORD PTR [rcx+0x174d35a4]
   14000994e:	sub    edi,DWORD PTR [rdi+0x756aa7a3]
   140009954:	test   BYTE PTR [rbx+rax*1],bh
   140009957:	adc    edi,DWORD PTR [rdx-0xa]
   14000995a:	out    dx,al
   14000995b:	(bad)  
   14000995c:	nop
   14000995d:	ja     0x140009906
   14000995f:	rex.RX (bad) 
   140009961:	mov    ecx,0x60598a89
   140009966:	mov    edi,0x1ac3a77c
   14000996b:	(bad)  
   14000996c:	cs out 0xd0,al
   14000996f:	popf   
   140009970:	in     eax,0x4f
   140009972:	fidivr DWORD PTR [rsi+0x6e]
   140009975:	push   0xffffffff821c151e
   14000997a:	xlat   BYTE PTR ds:[rbx]
   14000997b:	(bad)  
   14000997c:	xchg   edx,eax
   14000997d:	lahf   
   14000997e:	std    
   14000997f:	mov    ?,WORD PTR [rdi+0x47ee935]
   140009985:	jrcxz  0x140009920
   140009987:	movabs ds:0x4f991697bd007320,eax
   140009990:	add    esp,DWORD PTR [rax+0x1d]
   140009993:	mov    cl,0xff
   140009995:	nop
   140009996:	(bad)  
   140009997:	xchg   edx,eax
   140009998:	stos   BYTE PTR es:[rdi],al
   140009999:	rex.RX icebp 
   14000999b:	(bad)  
   14000999c:	rex.WR jp 0x1400099e1
   14000999f:	adc    al,0x5b
   1400099a1:	test   DWORD PTR [rbp+riz*1-0x41],eax
   1400099a5:	movabs al,ds:0x35f933cbccef5c69
   1400099ae:	push   rdi
   1400099af:	sbb    eax,0x42094075
   1400099b4:	retf   
   1400099b5:	jb     0x1400099dc
   1400099b7:	mov    edi,0xdbef4f59
   1400099bc:	in     eax,dx
   1400099bd:	in     al,dx
   1400099be:	(bad)  
   1400099bf:	and    BYTE PTR [rip+0x449a6c79],ah        # 0x1849b063e
   1400099c5:	imul   ebp,DWORD PTR [rbp-0x5b],0x36
   1400099c9:	xor    DWORD PTR [rsi-0x1d],edi
   1400099cc:	(bad)  
   1400099cd:	ss (bad) 
   1400099cf:	(bad)  
   1400099d0:	repnz sbb BYTE PTR [rbx-0x40],al
   1400099d4:	push   0xd
   1400099d6:	xchg   ebp,eax
   1400099d7:	(bad)  
   1400099d8:	mov    ?,WORD PTR [rax+0x1c]
   1400099db:	xor    DWORD PTR [rsi],ebp
   1400099dd:	shr    BYTE PTR [rdx],cl
   1400099df:	rol    BYTE PTR [rcx-0x6f],0xdf
   1400099e3:	jrcxz  0x1400099da
   1400099e5:	push   rbp
   1400099e6:	cwde   
   1400099e7:	(bad)  
   1400099e8:	(bad)  
   1400099e9:	sar    ch,1
   1400099eb:	enter  0xe043,0xd4
   1400099ef:	movsxd ebp,ecx
   1400099f1:	mov    dh,0xd
   1400099f3:	add    eax,DWORD PTR [rcx+0x5641af0b]
   1400099f9:	add    DWORD PTR [rsi+rbx*8-0x2a5314c2],esp
   140009a00:	(bad)  
   140009a01:	sub    al,BYTE PTR [rdx]
   140009a03:	pushf  
   140009a04:	sbb    eax,0xe1b36071
   140009a09:	sub    ebx,esp
   140009a0b:	jge    0x140009a4f
   140009a0d:	jge    0x140009a3a
   140009a0f:	lods   eax,DWORD PTR ds:[rsi]
   140009a10:	ja     0x140009a2b
   140009a12:	(bad)  
   140009a13:	addr32 (bad) 
   140009a15:	rex.X mov dl,0x5e
   140009a18:	push   QWORD PTR [rcx+0x324070bc]
   140009a1e:	mov    ebx,0x387e8cd
   140009a23:	sahf   
   140009a24:	jmp    0x162e02d36
   140009a29:	mov    eax,0x350e3ea7
   140009a2e:	icebp  
   140009a2f:	adc    esi,edx
   140009a31:	out    dx,al
   140009a32:	mov    esi,0x468d570
   140009a37:	repnz lock sbb cl,BYTE PTR [rsi+rax*4-0x53a4e2f8]
   140009a40:	jge    0x1400099d9
   140009a42:	(bad)  
   140009a43:	xchg   DWORD PTR [rax+0x7e],eax
   140009a46:	and    DWORD PTR [rax+rdx*4-0x4],esp
   140009a4a:	(bad)  
   140009a4b:	mov    bh,0x68
   140009a4d:	and    al,0xfb
   140009a4f:	ins    DWORD PTR es:[rdi],dx
   140009a50:	repnz mov ?,WORD PTR [rbx+0x3f598d40]
   140009a57:	rex.RXB int3 
   140009a59:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009a5a:	adc    eax,DWORD PTR [rbx]
   140009a5c:	movabs al,ds:0xe9a211387fb75add
   140009a65:	mov    dl,BYTE PTR [rdi-0x3778d6ea]
   140009a6b:	(bad)  
   140009a6c:	sar    DWORD PTR [rbx],0xa2
   140009a6f:	iret   
   140009a70:	pop    rax
   140009a71:	xor    DWORD PTR [rdi+0x411ae34e],ebp
   140009a77:	repnz repz rol BYTE PTR [rdx+0x44],cl
   140009a7c:	xchg   esp,eax
   140009a7d:	push   rsi
   140009a7e:	sbb    esp,ecx
   140009a80:	enter  0x2759,0xd9
   140009a84:	lock ficom DWORD PTR [rbx+rbp*4+0x1c58102e]
   140009a8c:	iret   
   140009a8d:	shr    dl,0xb4
   140009a90:	fwait
   140009a91:	adc    al,0x31
   140009a93:	ss (bad) 
   140009a95:	sahf   
   140009a96:	or     DWORD PTR [rdx+0x2b],eax
   140009a99:	pop    rsp
   140009a9a:	rex.WRB (bad) 
   140009a9c:	lock cmp BYTE PTR [rsi+0x12179f89],bl
   140009aa3:	adc    eax,0x11972550
   140009aa8:	xchg   DWORD PTR [rax+0x7c],eax
   140009aab:	es stc 
   140009aad:	loope  0x140009ad0
   140009aaf:	jg     0x140009af4
   140009ab1:	mov    WORD PTR [rdx-0x1],es
   140009ab4:	pop    rbx
   140009ab5:	nop
   140009ab6:	fbld   TBYTE PTR [rsi]
   140009ab8:	pop    rdi
   140009ab9:	iret   
   140009aba:	xchg   esp,eax
   140009abb:	(bad)  
   140009abc:	sti    
   140009abd:	add    BYTE PTR [rax],al
   140009abf:	imul   ecx,DWORD PTR [rcx+0x3a],0x7c
   140009ac3:	cs clc 
   140009ac5:	adc    BYTE PTR [rax+0x11c8371f],ah
   140009acb:	push   rsi
   140009acc:	xchg   DWORD PTR [rsi+0x38],ecx
   140009acf:	sbb    dl,dh
   140009ad1:	sti    
   140009ad2:	fst    QWORD PTR [rdx+0x67]
   140009ad5:	addr32 and al,0x6f
   140009ad8:	pop    rax
   140009ad9:	rol    BYTE PTR [rbx],1
   140009adb:	mov    ebx,esi
   140009add:	add    ecx,DWORD PTR [rbx+0x16]
   140009ae0:	out    0x35,eax
   140009ae2:	xor    BYTE PTR [rcx],dh
   140009ae4:	(bad)  
   140009ae5:	sub    al,0x85
   140009ae7:	adc    eax,0xcda7e6e7
   140009aec:	mov    ch,0x37
   140009aee:	and    eax,0xc90539f1
   140009af3:	sbb    cl,BYTE PTR [rcx-0x7b]
   140009af6:	or     BYTE PTR [rdx-0x38d0488d],0xeb
   140009afd:	xor    ebp,DWORD PTR [rdx]
   140009aff:	enter  0xb8e,0x19
   140009b03:	add    eax,0xbbf24520
   140009b08:	jnp    0x140009b35
   140009b0a:	ret    0x30f3
   140009b0d:	(bad)  
   140009b0e:	sbb    ebx,edi
   140009b10:	and    ah,bh
   140009b12:	sub    ecx,edi
   140009b14:	ffree  st(4)
   140009b16:	rcl    ebp,1
   140009b18:	jmp    0x140009b18
   140009b1a:	rex.W
   140009b1b:	rex.X jle 0x140009af3
   140009b1e:	(bad)  
   140009b1f:	pop    rsi
   140009b20:	jle    0x140009b08
   140009b22:	xchg   dh,ch
   140009b24:	mov    esp,0x2a79b6fa
   140009b29:	std    
   140009b2a:	sti    
   140009b2b:	jmp    0x140009ae6
   140009b2d:	cmp    DWORD PTR [rbx+0x7b],ecx
   140009b30:	rex.WR
   140009b31:	rex.RXB in al,dx
   140009b33:	cwde   
   140009b34:	mov    DWORD PTR [rax],eax
   140009b36:	mov    BYTE PTR [rdx+0x21aa024d],al
   140009b3c:	rex (bad) 
   140009b3e:	movabs ds:0x25dabf24524add82,eax
   140009b47:	call   0x11e38ca02
   140009b4c:	(bad)  
   140009b4d:	sbb    ebx,DWORD PTR [rbx]
   140009b4f:	rcl    BYTE PTR [rdi-0x20321f],1
   140009b55:	shr    DWORD PTR [rbx-0x709b7e00],1
   140009b5b:	nop
   140009b5c:	shl    bh,0x6d
   140009b5f:	push   rbp
   140009b60:	test   BYTE PTR [rbx+0x70],cl
   140009b63:	push   rdx
   140009b64:	scas   al,BYTE PTR es:[rdi]
   140009b65:	stos   BYTE PTR es:[rdi],al
   140009b66:	rex.WRXB
   140009b67:	repnz mov esp,0x7665f6ee
   140009b6d:	jo     0x140009b6d
   140009b6f:	mov    dh,0x48
   140009b71:	(bad)  
   140009b72:	fxch   st(4)
   140009b74:	clc    
   140009b75:	and    al,0x20
   140009b77:	mov    ebx,0x30a220b5
   140009b7c:	(bad)  
   140009b7d:	mov    DWORD PTR [rsi-0x72],0xb2871723
   140009b84:	or     dl,BYTE PTR [rax-0x6e]
   140009b87:	clc    
   140009b88:	mov    ecx,0x727f1af3
   140009b8d:	sti    
   140009b8e:	scas   al,BYTE PTR es:[rdi]
   140009b8f:	mov    ebx,0xc1e20fb6
   140009b94:	xchg   ebp,eax
   140009b95:	(bad)  
   140009b96:	out    dx,eax
   140009b97:	leave  
   140009b98:	(bad)  
   140009b99:	fidivr DWORD PTR [rbx+0x7e71acf7]
   140009b9f:	rex.WRXB cli 
   140009ba1:	xchg   ah,ah
   140009ba3:	imul   eax,DWORD PTR [rax+0x7c7dc9f5],0x5997e9f9
   140009bad:	cdq    
   140009bae:	mov    ecx,0xcf61220f
   140009bb3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140009bb4:	mov    BYTE PTR [rax],bh
   140009bb6:	je     0x140009c1b
   140009bb8:	push   0x1a
   140009bba:	mov    spl,0xbd
   140009bbd:	sbb    ecx,edx
   140009bbf:	mov    cl,0x0
   140009bc1:	je     0x140009ba5
   140009bc3:	retf   
   140009bc4:	(bad)  
   140009bc5:	(bad)  
   140009bc6:	(bad)  
   140009bc7:	jnp    0x140009bb1
   140009bc9:	add    ebx,DWORD PTR [rsi+0x1f]
   140009bcc:	sahf   
   140009bcd:	rex.WRX in al,dx
   140009bcf:	in     eax,dx
   140009bd0:	loopne 0x140009bd0
   140009bd2:	xor    al,BYTE PTR [rbp+rdx*1+0x627b8f67]
   140009bd9:	pop    rbx
   140009bda:	jp     0x140009c51
   140009bdc:	movsxd ebp,ecx
   140009bde:	scas   al,BYTE PTR es:[rdi]
   140009bdf:	mov    esi,0xd3b08ffe
   140009be4:	fstp   DWORD PTR [rsi-0x3747d841]
   140009bea:	icebp  
   140009beb:	loopne 0x140009c27
   140009bed:	sub    eax,0x3bec6b8f
   140009bf2:	and    al,BYTE PTR [rdi+0x628db3ca]
   140009bf8:	jo     0x140009c32
   140009bfa:	xchg   BYTE PTR [rcx-0x42],al
   140009bfe:	repnz adc BYTE PTR cs:[rsi],cl
   140009c02:	rex.X fiadd DWORD PTR [rdi+0x253ebc40]
   140009c09:	mov    edi,0xec9c4271
   140009c0e:	rex.WX
   140009c0f:	repnz and DWORD PTR [rbx+rdx*2+0x318a02c3],0xffffffc7
   140009c18:	lods   al,BYTE PTR ds:[rsi]
   140009c19:	add    BYTE PTR es:[rdi+0x8db3bec],al
   140009c20:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009c21:	test   DWORD PTR [rdi],0x3305b867
   140009c27:	(bad)
   140009c2a:	jle    0x140009bfd
   140009c2c:	je     0x140009c80
   140009c2e:	(bad)  
   140009c2f:	stos   DWORD PTR es:[rdi],eax
   140009c30:	add    al,0x9b
   140009c32:	mov    cl,0xf4
   140009c34:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009c35:	in     al,0x93
   140009c37:	push   rsi
   140009c38:	ret    0xee4e
   140009c3b:	xchg   edi,eax
   140009c3c:	scas   eax,DWORD PTR es:[rdi]
   140009c3d:	xchg   BYTE PTR [rsi+rbp*8+0x7c],dl
   140009c41:	add    DWORD PTR [rdi+0x1bf9e23b],ebp
   140009c47:	rex pop rdx
   140009c49:	ins    DWORD PTR es:[rdi],dx
   140009c4a:	jae    0x140009c88
   140009c4c:	mov    eax,0x6874f9b7
   140009c51:	(bad)  
   140009c52:	rex.RXB xchg BYTE PTR [r15],r12b
   140009c55:	hlt    
   140009c56:	in     al,dx
   140009c57:	and    eax,0x370798b8
   140009c5c:	push   rbp
   140009c5d:	pop    rcx
   140009c5e:	(bad)  
   140009c5f:	and    esi,DWORD PTR [rsi+0x5c]
   140009c62:	fidivr WORD PTR [rax]
   140009c64:	loope  0x140009ccf
   140009c66:	sti    
   140009c67:	cmp    BYTE PTR [rcx],cl
   140009c69:	mov    al,0x8b
   140009c6b:	push   rbp
   140009c6c:	add    BYTE PTR [rbx+0x420dbb26],0x7e
   140009c73:	fwait
   140009c74:	(bad)  
   140009c75:	ficomp DWORD PTR [rax]
   140009c77:	hlt    
   140009c78:	in     al,0x37
   140009c7a:	xchg   edx,eax
   140009c7b:	fbld   TBYTE PTR [rbx+rdx*1+0x73061f4d]
   140009c82:	in     eax,dx
   140009c83:	clc    
   140009c84:	and    al,0x31
   140009c86:	mov    ecx,0x173096a
   140009c8b:	(bad)  [rdx-0x62]
   140009c8e:	in     eax,0x45
   140009c90:	cmp    eax,0x21a00660
   140009c95:	fist   WORD PTR [rbx-0x2f]
   140009c98:	or     BYTE PTR [rdi-0x683a08c],dl
   140009c9e:	sub    DWORD PTR [rsi+0x4ea0f228],ebx
   140009ca4:	mov    ebx,0xb3a56926
   140009ca9:	cmp    eax,0xfa5193bb
   140009cae:	lea    eax,[rdx]
   140009cb0:	loopne 0x140009ca3
   140009cb2:	jb     0x140009c36
   140009cb4:	(bad)  
   140009cb5:	cdq    
   140009cb6:	cdq    
   140009cb7:	jge    0x140009ca4
   140009cb9:	in     al,0xb1
   140009cbb:	(bad)  
   140009cbc:	sahf   
   140009cbd:	rex.WB
   140009cbe:	rex.W pop rdx
   140009cc0:	mov    bh,0x1d
   140009cc2:	out    0x2d,eax
   140009cc4:	or     BYTE PTR [rcx+riz*1+0xc],al
   140009cc8:	or     al,0x3f
   140009cca:	mov    esp,0xe8daefed
   140009ccf:	mul    eax
   140009cd1:	mov    cl,0x6a
   140009cd3:	fucomp st(5)
   140009cd5:	mov    esi,0xdb9dfbff
   140009cda:	lock sbb DWORD PTR [rbx+rax*2-0x206cde3d],esi
   140009ce2:	imul   ebx,DWORD PTR [rbx-0x142840de],0x8d5c90c3
   140009cec:	repz xchg ebp,eax
   140009cee:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009cef:	(bad)  
   140009cf0:	mov    WORD PTR [rdx],fs
   140009cf2:	push   rax
   140009cf3:	jge    0x140009d72
   140009cf5:	(bad)  
   140009cf6:	adc    eax,0x50226920
   140009cfb:	(bad)  
   140009cfc:	jl     0x140009cc7
   140009cfe:	ja     0x140009d03
   140009d00:	or     al,BYTE PTR [rcx]
   140009d02:	cmp    eax,0x73597f9
   140009d07:	call   0x1357c85a5
   140009d0c:	cmc    
   140009d0d:	not    esp
   140009d0f:	push   rdi
   140009d10:	(bad)  
   140009d11:	and    al,0x3f
   140009d13:	outs   dx,DWORD PTR ds:[rsi]
   140009d14:	mov    cl,0x5d
   140009d16:	outs   dx,BYTE PTR ds:[rsi]
   140009d17:	test   ah,bh
   140009d19:	mov    ah,0xb8
   140009d1b:	nop
   140009d1c:	out    0xf,eax
   140009d1e:	js     0x140009d67
   140009d20:	out    dx,al
   140009d21:	repz (bad) {k7}{z}
   140009d27:	addr32 xchg ebx,eax
   140009d29:	xchg   edi,eax
   140009d2a:	fdivp  st(2),st
   140009d2c:	fdivr  QWORD PTR [rdx+rbp*8]
   140009d2f:	mov    ebx,0x383effbd
   140009d34:	lods   al,BYTE PTR ds:[rsi]
   140009d35:	add    DWORD PTR [rip+0x7a631950],esi        # 0x1ba63b68b
   140009d3b:	sbb    eax,0x557e4ae7
   140009d40:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009d41:	loopne 0x140009d4c
   140009d43:	femms  
   140009d45:	(bad)  
   140009d46:	mov    ?,eax
   140009d48:	mov    cl,0x2d
   140009d4a:	mov    ebp,0x6b0bf254
   140009d4f:	mov    esp,0x5a8194af
   140009d54:	(bad)  
   140009d55:	rol    DWORD PTR [rsi],cl
   140009d57:	add    al,0xba
   140009d59:	(bad)  
   140009d5a:	rex.WR jns 0x140009d5d
   140009d5d:	imul   ebp,edx,0x40f61e7e
   140009d63:	nop
   140009d64:	(bad)  
   140009d65:	push   0x548a8c8f
   140009d6a:	jrcxz  0x140009d2c
   140009d6c:	pop    rsp
   140009d6d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140009d6e:	pop    rcx
   140009d6f:	ret    0x3473
   140009d72:	xor    ecx,ecx
   140009d74:	addr32 es (bad) 
   140009d77:	cld    
   140009d78:	retf   
   140009d79:	mov    dl,ch
   140009d7b:	or     ecx,DWORD PTR [rdi]
   140009d7d:	sbb    al,0xda
   140009d7f:	cmp    BYTE PTR [rsp+rdx*4],dl
   140009d82:	cld    
   140009d83:	movabs ds:0x1cc8a61b8890b29f,al
   140009d8c:	or     DWORD PTR [rbp+0x20],0x5e
   140009d90:	ja     0x140009dd6
   140009d92:	mov    esi,0x1e07df83
   140009d97:	(bad)  
   140009d99:	rex.RXB (bad) 
   140009d9b:	adc    dl,dh
   140009d9d:	push   rbx
   140009d9e:	xchg   DWORD PTR [rsi+rbx*8],ebx
   140009da1:	repnz repnz ins BYTE PTR es:[rdi],dx
   140009da4:	jrcxz  0x140009dca
   140009da6:	rex.W pushf 
   140009da8:	scas   al,BYTE PTR es:[rdi]
   140009da9:	retf   
   140009daa:	push   0xffffffffffffffd7
   140009dac:	cs in  al,dx
   140009dae:	cmp    BYTE PTR [rdx-0x366f01f9],0x3d
   140009db5:	add    al,0x5f
   140009db7:	fild   DWORD PTR [rip+0x25d114e9]        # 0x165d1b2a6
   140009dbd:	mov    esi,0xe64ae89e
   140009dc2:	fist   DWORD PTR [rdx+0x120428df]
   140009dc8:	movabs eax,ss:0xc0adf125c36da65d
   140009dd2:	movabs ds:0x619398429dd971f3,al
   140009ddb:	(bad)  
   140009ddc:	or     eax,0x29788c10
   140009de1:	push   0x34
   140009de3:	call   0xc05e29d5
   140009de8:	pop    rdi
   140009de9:	bnd ja 0x140009dd1
   140009dec:	stos   DWORD PTR es:[rdi],eax
   140009ded:	sub    eax,0x4e119ccb
   140009df2:	frstor [rbp+rdi*8-0x6c]
   140009df6:	fnstenv [rax+rdx*8+0x68d4f17d]
   140009dfd:	push   rcx
   140009dfe:	scas   eax,DWORD PTR es:[rdi]
   140009dff:	outs   dx,DWORD PTR ds:[rsi]
   140009e00:	sbb    DWORD PTR [rcx+rax*2-0x47bf340e],ebx
   140009e07:	stos   BYTE PTR es:[rdi],al
   140009e08:	es adc bh,dl
   140009e0b:	lahf   
   140009e0c:	(bad)  
   140009e0d:	inc    BYTE PTR [rdi+0x45b66e32]
   140009e13:	or     al,0x97
   140009e15:	(bad)  
   140009e16:	js     0x140009e5a
   140009e18:	adc    ah,BYTE PTR [rdi-0x44e70af5]
   140009e1e:	jno    0x140009e2f
   140009e20:	mov    ch,0x4c
   140009e22:	pop    rbp
   140009e23:	add    eax,0xb7a448b8
   140009e28:	out    0x35,eax
   140009e2a:	(bad)  
   140009e2b:	or     eax,0x84e0f297
   140009e30:	clc    
   140009e31:	mov    dh,ah
   140009e33:	idiv   BYTE PTR [rax]
   140009e35:	pop    rdi
   140009e36:	out    dx,eax
   140009e37:	icebp  
   140009e38:	not    DWORD PTR [rax+0x130d9f]
   140009e3e:	neg    DWORD PTR [rdx]
   140009e40:	and    DWORD PTR [rcx-0x6],edx
   140009e43:	stos   DWORD PTR es:[rdi],eax
   140009e44:	jo     0x140009e3a
   140009e46:	std    
   140009e47:	(bad)  
   140009e48:	cmc    
   140009e49:	add    BYTE PTR [rsi],cl
   140009e4b:	fmul   st,st(5)
   140009e4d:	mov    sil,0x77
   140009e50:	rex.WXB movabs r9,0xa3a793653a84ce78
   140009e5a:	push   rdx
   140009e5b:	(bad)  
   140009e5c:	gs scas eax,DWORD PTR es:[rdi]
   140009e5e:	cmp    DWORD PTR [rbx-0x37],0xffffffef
   140009e62:	ins    DWORD PTR es:[rdi],dx
   140009e63:	mov    ebx,0x2618b13d
   140009e68:	adc    eax,0x7c823dd0
   140009e6d:	push   rax
   140009e6e:	rex.WRX pop rbx
   140009e70:	add    al,0xa7
   140009e72:	sbb    al,0x56
   140009e74:	xchg   BYTE PTR [rcx],dh
   140009e76:	mov    eax,0xc1f6724
   140009e7b:	imul   edi,DWORD PTR [rdi-0x749570d1],0x36
   140009e82:	test   esp,eax
   140009e84:	fwait
   140009e85:	or     al,0xcc
   140009e87:	adc    DWORD PTR [rsp+rdx*1+0x46],eax
   140009e8b:	push   rsp
   140009e8c:	rcr    DWORD PTR gs:[rdi],0xa7
   140009e90:	(bad)  
   140009e91:	xchg   edx,eax
   140009e92:	movs   DWORD PTR es:[rdi],DWORD PTR es:[rsi]
   140009e94:	idiv   DWORD PTR [rdi]
   140009e96:	iret   
   140009e97:	ret    
   140009e98:	sub    esi,DWORD PTR [rax-0x6e8a84e1]
   140009e9e:	enter  0x843e,0x94
   140009ea2:	(bad)  
   140009ea3:	jo     0x140009e3e
   140009ea5:	mov    ch,0xfc
   140009ea7:	(bad)  
   140009ea8:	mov    bh,0x22
   140009eaa:	cmp    ebx,ebp
   140009eac:	(bad)  
   140009ead:	addr32 sub eax,0x7de3d9f1
   140009eb3:	data16 sub al,ch
   140009eb6:	xor    BYTE PTR [rax],al
   140009eb8:	out    0x7c,al
   140009eba:	ins    DWORD PTR es:[edi],dx
   140009ebc:	add    dl,ch
   140009ebe:	retf   
   140009ebf:	movabs eax,ds:0xa10055add0e6200a
   140009ec8:	mov    edi,0x38bf82a7
   140009ecd:	and    esp,DWORD PTR [rsi]
   140009ecf:	stos   DWORD PTR es:[rdi],eax
   140009ed0:	sti    
   140009ed1:	xchg   BYTE PTR [rcx-0x40],cl
   140009ed4:	mov    cl,0x48
   140009ed6:	(bad)  
   140009ed7:	stc    
   140009ed8:	lea    ecx,[rbx-0x6d]
   140009edb:	push   rdx
   140009edc:	pop    rdx
   140009edd:	and    al,0xb5
   140009edf:	xor    ebx,eax
   140009ee1:	in     al,0xa7
   140009ee3:	je     0x140009f16
   140009ee5:	jns    0x140009ec4
   140009ee7:	popf   
   140009ee8:	jl     0x140009eeb
   140009eea:	add    DWORD PTR [rbx-0x55],0xfffffff2
   140009eee:	js     0x140009f6d
   140009ef0:	mov    bh,0xbe
   140009ef2:	(bad)  
   140009ef3:	sbb    edx,DWORD PTR [rbx-0xe]
   140009ef6:	add    dh,BYTE PTR [rsi]
   140009ef8:	and    DWORD PTR [rbx-0x35],esp
   140009efb:	cwde   
   140009efc:	or     eax,0x16e281a8
   140009f01:	xchg   ebp,eax
   140009f02:	xchg   ebx,eax
   140009f03:	lahf   
   140009f04:	je     0x140009f0e
   140009f06:	fstp   TBYTE PTR [rsi+0x75938d06]
   140009f0c:	scas   al,BYTE PTR es:[rdi]
   140009f0d:	add    al,dl
   140009f0f:	cmp    esp,DWORD PTR [rip+0xfffffffff1b4afd3]        # 0x131b54ee8
   140009f15:	mov    BYTE PTR [rax],al
   140009f17:	lock in al,dx
   140009f19:	mov    bl,0xf3
   140009f1b:	mov    edi,0x485f6ab6
   140009f20:	xor    eax,0x773caf64
   140009f25:	adc    eax,DWORD PTR [rdi-0x71]
   140009f28:	jne    0x140009f45
   140009f2a:	sub    esp,0xc344791b
   140009f30:	in     eax,0x3d
   140009f32:	add    al,0xf0
   140009f34:	repnz push rbx
   140009f36:	(bad)  
   140009f37:	lods   al,BYTE PTR ds:[rsi]
   140009f38:	mov    ah,0x80
   140009f3a:	and    DWORD PTR [rbx-0x14149817],ebp
   140009f40:	push   rdi
   140009f41:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140009f42:	mov    bh,0x39
   140009f44:	jno    0x140009f5e
   140009f46:	iret   
   140009f47:	outs   dx,DWORD PTR ds:[rsi]
   140009f48:	(bad)  
   140009f49:	out    0x5a,al
   140009f4b:	xor    cl,BYTE PTR [rcx]
   140009f4d:	fdivrp st(5),st
   140009f4f:	fs scas eax,DWORD PTR es:[rdi]
   140009f51:	xchg   edi,eax
   140009f52:	jb     0x140009edd
   140009f54:	(bad)  
   140009f55:	(bad)  
   140009f56:	lods   eax,DWORD PTR ds:[rsi]
   140009f57:	fistp  QWORD PTR [rbx-0x51d2bdcb]
   140009f5d:	add    al,0xc6
   140009f5f:	scas   eax,DWORD PTR es:[rdi]
   140009f60:	adc    edi,ecx
   140009f62:	out    dx,eax
   140009f63:	jge    0x140009f97
   140009f65:	sub    bh,ch
   140009f67:	shl    BYTE PTR [rdi],1
   140009f69:	pop    rsi
   140009f6a:	gs sbb al,0x36
   140009f6d:	ss mov esp,0x34d1133e
   140009f73:	and    bl,cl
   140009f75:	or     dl,BYTE PTR [rcx]
   140009f77:	rex.WRXB ins DWORD PTR es:[rdi],dx
   140009f79:	sbb    DWORD PTR [rax],ecx
   140009f7b:	movabs ds:0x8446ae391b6f6c32,eax
   140009f84:	jrcxz  0x140009f7a
   140009f86:	(bad)  
   140009f87:	scas   al,BYTE PTR es:[rdi]
   140009f88:	data16 rex.WR (bad) 
   140009f8b:	(bad)  
   140009f8c:	retf   
   140009f8d:	pop    rdi
   140009f8e:	jae    0x140009fbc
   140009f90:	add    BYTE PTR [rsi],ch
   140009f92:	xchg   esi,eax
   140009f93:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009f94:	iret   
   140009f95:	rex.RB out dx,al
   140009f97:	mov    cl,0xbd
   140009f99:	imul   dh
   140009f9b:	sbb    eax,0x1b5b5d1c
   140009fa0:	scas   eax,DWORD PTR es:[rdi]
   140009fa1:	out    dx,al
   140009fa2:	rex.W jle 0x140009fe5
   140009fa5:	rex.WB (bad) 
   140009fa7:	xchg   edi,eax
   140009fa8:	ds jge 0x140009fae
   140009fab:	outs   dx,DWORD PTR ds:[rsi]
   140009fac:	jl     0x140009f9e
   140009fae:	and    DWORD PTR [rax-0x2e],eax
   140009fb1:	push   rdx
   140009fb2:	and    eax,0x5802d3a0
   140009fb7:	jge    0x140009fb5
   140009fb9:	add    BYTE PTR [rdi],bh
   140009fbb:	jp     0x140009fa0
   140009fbd:	sti    
   140009fbe:	(bad)  
   140009fbf:	ins    DWORD PTR es:[rdi],dx
   140009fc0:	rex.WX cqo 
   140009fc2:	sbb    al,0x4c
   140009fc4:	mov    ebp,0x401cd6ac
   140009fc9:	pop    rsi
   140009fca:	data16 xor BYTE PTR [rsi+0x54],0x37
   140009fcf:	xor    ebp,ebp
   140009fd1:	(bad)
   140009fd5:	stos   BYTE PTR es:[rdi],al
   140009fd6:	jo     0x140009fb6
   140009fd8:	sub    DWORD PTR [rbp-0x87fe819],esi
   140009fde:	test   eax,0xc2c3313d
   140009fe3:	sbb    cl,al
   140009fe5:	or     eax,0x9993af13
   140009fea:	(bad)  
   140009feb:	lock xchg DWORD PTR [rdi],esp
   140009fee:	movabs rbx,0x20c9d1bfeb31ae49
   140009ff8:	xchg   esi,eax
   140009ff9:	shl    cl,1
   140009ffb:	loopne 0x140009fb1
   140009ffd:	cmp    al,0xb2
   140009fff:	adc    eax,eax
   14000a001:	mov    esi,0x6467d74d
   14000a006:	pushf  
   14000a007:	and    eax,0x2dcd8c7
   14000a00c:	scas   eax,DWORD PTR es:[rdi]
   14000a00d:	mov    esp,0x7a19966b
   14000a012:	icebp  
   14000a013:	jb     0x14000a03f
   14000a015:	(bad)  
   14000a016:	sbb    dh,BYTE PTR [rbp-0x16d1cc72]
   14000a01c:	movsxd ecx,DWORD PTR [rbx+0x7c]
   14000a01f:	jl     0x140009fdd
   14000a021:	rex.WRXB xchg r12,rax
   14000a023:	add    BYTE PTR [rax],0xb8
   14000a026:	jl     0x14000a017
   14000a028:	jmp    0x14000a03a
   14000a02a:	cld    
   14000a02b:	rcr    DWORD PTR [rsi-0x46fcd417],0xa
   14000a032:	add    dl,cl
   14000a034:	movsxd esp,esi
   14000a036:	popf   
   14000a037:	or     al,0xd7
   14000a039:	movsxd esi,esi
   14000a03b:	(bad)  
   14000a03c:	push   rbp
   14000a03d:	mov    edi,0x9e1ae3d5
   14000a042:	shl    ah,0xf3
   14000a045:	ja     0x14000a091
   14000a047:	out    dx,al
   14000a048:	stc    
   14000a049:	mov    ecx,0x8411f617
   14000a04e:	cmp    eax,0xe7958f5b
   14000a053:	and    DWORD PTR [rbx+0xeef9430],esp
   14000a059:	cdq    
   14000a05a:	(bad)  
   14000a05b:	sub    esp,eax
   14000a05d:	mov    WORD PTR [rbp-0x76d8aa52],cs
   14000a063:	rex.WRX call 0x10d922ee2
   14000a069:	sub    eax,0x51f12ce4
   14000a06e:	scas   eax,DWORD PTR es:[rdi]
   14000a06f:	outs   dx,DWORD PTR ds:[rsi]
   14000a070:	(bad)  
   14000a071:	push   rax
   14000a072:	xlat   BYTE PTR ds:[rbx]
   14000a073:	(bad)  
   14000a074:	fld    TBYTE PTR [rsi]
   14000a076:	pop    rcx
   14000a077:	sbb    al,0x89
   14000a079:	(bad)  
   14000a07a:	xchg   al,ch
   14000a07c:	bnd jp 0x14000a073
   14000a07f:	adc    al,0x4c
   14000a081:	push   rdx
   14000a082:	xor    al,0x74
   14000a084:	mov    esp,0x7d5da1f
   14000a089:	gs add al,0xfc
   14000a08c:	jrcxz  0x14000a10b
   14000a08e:	(bad)  
   14000a08f:	stc    
   14000a090:	add    ecx,ebx
   14000a092:	sbb    BYTE PTR [rcx+0x4d],0x4b
   14000a096:	xor    al,0xf0
   14000a098:	in     al,dx
   14000a099:	data16 and BYTE PTR [rcx],dl
   14000a09c:	fcomp  DWORD PTR [rdi+0x1f]
   14000a09f:	scas   eax,DWORD PTR es:[rdi]
   14000a0a0:	rex.W js 0x14000a055
   14000a0a3:	sbb    BYTE PTR [rdi+0x63],ch
   14000a0a6:	rex.WRXB hlt 
   14000a0a8:	cdq    
   14000a0a9:	pop    QWORD PTR [rax-0xfb229b4]
   14000a0af:	leave  
   14000a0b0:	icebp  
   14000a0b1:	or     cl,ah
   14000a0b3:	fmul   DWORD PTR [rdi]
   14000a0b5:	xlat   BYTE PTR ds:[rbx]
   14000a0b6:	test   al,0xd8
   14000a0b8:	in     al,0xa7
   14000a0ba:	mov    al,ah
   14000a0bc:	fdivr  QWORD PTR [rdx]
   14000a0be:	leave  
   14000a0bf:	lea    ecx,[rbp-0x38]
   14000a0c2:	jmp    0x14000a13b
   14000a0c4:	out    0x8a,eax
   14000a0c6:	cld    
   14000a0c7:	sbb    al,0x98
   14000a0c9:	and    BYTE PTR [rsi+rbx*4],dh
   14000a0cc:	sahf   
   14000a0cd:	out    dx,al
   14000a0ce:	mov    dl,0x8e
   14000a0d0:	sbb    BYTE PTR [rdx+rdx*8],cl
   14000a0d3:	(bad)  
   14000a0d4:	ss rex.B cwde 
   14000a0d7:	test   eax,0xe9cbba84
   14000a0dc:	(bad)  
   14000a0dd:	jge    0x14000a0af
   14000a0df:	rol    bh,cl
   14000a0e1:	sub    al,BYTE PTR [rcx+0x6017b943]
   14000a0e7:	or     al,0x42
   14000a0e9:	(bad)  
   14000a0ea:	retf   0xddde
   14000a0ed:	call   0x1324b9f83
   14000a0f2:	fisttp DWORD PTR [rbx+0x7c]
   14000a0f5:	push   0x4d949e60
   14000a0fa:	(bad)  
   14000a0fb:	iret   
   14000a0fc:	cmc    
   14000a0fd:	stc    
   14000a0fe:	add    DWORD PTR [rax+0x3],esi
   14000a101:	add    dl,bh
   14000a103:	imul   edx,DWORD PTR [rsi+0x42a9317c],0x8ca3b6e0
   14000a10d:	pop    rsi
   14000a10e:	adc    eax,esi
   14000a110:	(bad)  
   14000a111:	shl    dl,cl
   14000a113:	fisubr DWORD PTR [rcx+rbp*4]
   14000a116:	ins    DWORD PTR es:[rdi],dx
   14000a117:	push   0xfffffffff2c02abc
   14000a11c:	cli    
   14000a11d:	cli    
   14000a11e:	(bad)  
   14000a11f:	cmp    bh,BYTE PTR [rcx-0x4a]
   14000a122:	rex.RXB hlt 
   14000a124:	xchg   edi,eax
   14000a125:	in     eax,0x1a
   14000a127:	adc    DWORD PTR [rcx+0x2c],esp
   14000a12a:	cs xchg ebx,eax
   14000a12c:	(bad)  
   14000a12d:	pushf  
   14000a12e:	rex (bad) 
   14000a130:	xacquire xchg DWORD PTR [rbp+0x3b83c850],ecx
   14000a137:	xchg   ebx,eax
   14000a138:	stos   BYTE PTR es:[rdi],al
   14000a139:	push   rcx
   14000a13a:	leave  
   14000a13b:	iret   
   14000a13c:	stos   DWORD PTR es:[rdi],eax
   14000a13d:	movsxd ebp,DWORD PTR [rdi-0x61b30cc8]
   14000a143:	xor    al,BYTE PTR [rbp+0x40]
   14000a146:	jle    0x14000a153
   14000a148:	inc    BYTE PTR [rdi-0x434fa4e3]
   14000a14e:	rex.WXB mov ss,r10
   14000a151:	repz (bad) 
   14000a153:	rex.X ins DWORD PTR es:[rdi],dx
   14000a155:	in     eax,dx
   14000a156:	gs xchg edx,eax
   14000a158:	(bad)  
   14000a159:	mov    esp,?
   14000a15b:	xchg   ah,dl
   14000a15d:	out    dx,al
   14000a15e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a15f:	and    BYTE PTR [rbp+0x6d],dl
   14000a162:	data16 (bad) 
   14000a164:	rol    DWORD PTR [rbp+rax*8-0x6201e126],0x77
   14000a16c:	rex.WRB stc 
   14000a16e:	rex.WRX
   14000a16f:	rex
   14000a170:	fwait
   14000a171:	pop    rbx
   14000a172:	or     DWORD PTR [rax+0x52e8877b],esp
   14000a178:	sbb    ebp,DWORD PTR [rbx]
   14000a17a:	(bad)  
   14000a17b:	adc    DWORD PTR [rcx],esi
   14000a17d:	rex jbe 0x14000a162
   14000a180:	stc    
   14000a181:	jns    0x14000a11f
   14000a183:	rex.WXB adc BYTE PTR [r14+0x17],dil
   14000a187:	pushf  
   14000a188:	(bad)  
   14000a189:	jno    0x14000a11f
   14000a18b:	rcr    DWORD PTR [rsp+rdi*8+0x5c1f78f6],0x56
   14000a193:	push   rbx
   14000a194:	clflush BYTE PTR [rdi-0x423dec0f]
   14000a19b:	xor    DWORD PTR [rdx],eax
   14000a19d:	jns    0x14000a1eb
   14000a19f:	jns    0x14000a21b
   14000a1a1:	pop    rax
   14000a1a2:	adc    dh,BYTE PTR [rdx]
   14000a1a4:	sbb    BYTE PTR [rsi+0x5d],dh
   14000a1a7:	ret    0xf204
   14000a1aa:	push   rdi
   14000a1ab:	mov    edx,0x7cfbc685
   14000a1b0:	push   0xffffffff9d3b32a1
   14000a1b5:	mov    cl,bl
   14000a1b7:	xor    cl,0x5e
   14000a1ba:	lahf   
   14000a1bb:	movabs ds:0x727a9f32d008113e,al
   14000a1c4:	jne    0x14000a1a3
   14000a1c6:	sub    al,0xc9
   14000a1c8:	fistp  WORD PTR [rbp-0x41036889]
   14000a1ce:	cmp    DWORD PTR [rcx],eax
   14000a1d0:	addr32 enter 0xe599,0xf9
   14000a1d5:	repz mov ss,WORD PTR [rbp-0xf73fe31]
   14000a1dc:	or     BYTE PTR [rdx+0x1acf3876],al
   14000a1e2:	jbe    0x14000a17b
   14000a1e4:	xchg   BYTE PTR [rsi+0x31],bh
   14000a1e7:	add    al,0x65
   14000a1e9:	(bad)  
   14000a1ea:	or     al,BYTE PTR [rbp-0x3785044a]
   14000a1f0:	and    ebp,DWORD PTR [rax-0x50d87f43]
   14000a1f6:	gs jo  0x14000a1b1
   14000a1f9:	js     0x14000a1f2
   14000a1fb:	test   eax,0x6a7d7889
   14000a200:	mov    edi,ecx
   14000a202:	xor    eax,0x503ce136
   14000a207:	jmp    0x11ee42f31
   14000a20c:	cwde   
   14000a20d:	adc    ebx,esp
   14000a20f:	lods   al,BYTE PTR ds:[rsi]
   14000a210:	movabs ds:0xc9693e2594aaa33b,eax
   14000a219:	rex.WXB jp 0x14000a1dc
   14000a21c:	hlt    
   14000a21d:	stos   DWORD PTR es:[rdi],eax
   14000a21e:	xor    eax,0x18c25267
   14000a223:	sbb    al,0x2a
   14000a225:	out    0x20,al
   14000a227:	ds (bad) 
   14000a22a:	rol    bh,0xfb
   14000a22d:	(bad)  
   14000a22e:	ret    
   14000a22f:	xor    esp,DWORD PTR [rip+0xffffffff87b5cf40]        # 0xc7b67175
   14000a235:	cld    
   14000a236:	je     0x14000a214
   14000a238:	outs   dx,DWORD PTR ds:[rsi]
   14000a239:	iret   
   14000a23a:	leave  
   14000a23b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a23c:	sbb    al,0xc3
   14000a23e:	xchg   esp,eax
   14000a23f:	jrcxz  0x14000a28d
   14000a241:	jnp    0x14000a235
   14000a243:	add    al,0x5c
   14000a246:	mov    ah,0xe4
   14000a249:	es pushf 
   14000a24b:	mov    eax,0xab39bb46
   14000a250:	xor    edi,DWORD PTR [rbx]
   14000a252:	gs rex.W
   14000a254:	es push rcx
   14000a256:	sbb    BYTE PTR [rcx+0x2c],al
   14000a259:	movabs ds:0xae53b22dab95d1c2,eax
   14000a262:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a263:	rex.WRX
   14000a264:	rex.WRXB jnp 0x14000a240
   14000a267:	ins    DWORD PTR es:[rdi],dx
   14000a268:	mov    edx,0x1ba54301
   14000a26d:	rex.RX
   14000a26e:	repnz xor eax,DWORD PTR [rbx-0x6d]
   14000a272:	push   rax
   14000a273:	(bad)  
   14000a274:	jns    0x14000a204
   14000a276:	pop    rbx
   14000a277:	sub    al,0x4f
   14000a279:	(bad)  
   14000a27a:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a27b:	retf   
   14000a27c:	out    dx,al
   14000a27d:	fld    TBYTE PTR [rax]
   14000a27f:	add    al,0xdc
   14000a281:	movabs eax,ds:0xe5fdcf4ddbb0fd15
   14000a28a:	ret    0x1e5c
   14000a28d:	(bad)  
   14000a28f:	sbb    BYTE PTR [rip+0xffffffffb97a5b03],ah        # 0xf97afd98
   14000a295:	adc    al,BYTE PTR [rax-0x2fc3c8c0]
   14000a29b:	sti    
   14000a29c:	ror    BYTE PTR [rcx+0x1a],1
   14000a29f:	loope  0x14000a287
   14000a2a1:	(bad)  
   14000a2a2:	cmc    
   14000a2a3:	mov    cl,0x24
   14000a2a5:	xor    eax,0x93f87190
   14000a2aa:	or     eax,0xd0d09b00
   14000a2af:	(bad)  
   14000a2b0:	xchg   esi,eax
   14000a2b1:	ja     0x14000a2b6
   14000a2b3:	(bad)  
   14000a2b4:	rcr    ebp,cl
   14000a2b6:	mov    ah,0xf1
   14000a2b8:	(bad)
   14000a2bc:	fnsave [rcx]
   14000a2be:	jo     0x14000a32c
   14000a2c0:	mov    esp,0x66356d6f
   14000a2c5:	or     DWORD PTR [rdx+riz*8],ebp
   14000a2c8:	mov    cl,0xf6
   14000a2ca:	fwait
   14000a2cb:	movabs eax,ds:0xfb14d3c2db51ff84
   14000a2d4:	rex.WRX cmp rax,0xffffffffbc6c785a
   14000a2da:	fist   WORD PTR [rbx+0x73]
   14000a2dd:	(bad)  
   14000a2de:	movsxd ecx,DWORD PTR [rdi-0x2e711607]
   14000a2e4:	int3   
   14000a2e5:	ss out 0x88,eax
   14000a2e8:	in     al,0x57
   14000a2ea:	(bad)  
   14000a2eb:	ins    BYTE PTR es:[rdi],dx
   14000a2ec:	call   0x144ba8855
   14000a2f1:	sub    BYTE PTR [rbp-0x4],cl
   14000a2f4:	movabs eax,ds:0x8f47137b3f2fc0ad
   14000a2fd:	cmp    eax,0x585792ee
   14000a302:	out    0xbd,eax
   14000a304:	(bad)  
   14000a305:	cli    
   14000a306:	mov    esi,DWORD PTR [rdi+0x7c4b586e]
   14000a30c:	je     0x14000a2e6
   14000a30e:	addr32 mov esi,0xf55eafaf
   14000a314:	(bad)  
   14000a315:	rex.WRXB ficom DWORD PTR [r8+0x20]
   14000a319:	rex.WRXB rcl BYTE PTR [rip+0x29360050],cl        # 0x16936a370
   14000a320:	sub    DWORD PTR [rcx],edx
   14000a322:	rex.WRB out 0xa7,eax
   14000a325:	retf   
   14000a326:	je     0x14000a2c4
   14000a328:	jo     0x14000a2e6
   14000a32a:	out    0x27,eax
   14000a32c:	adc    DWORD PTR [rsi+riz*1],esp
   14000a32f:	stc    
   14000a330:	rex.WB movabs al,ds:0xa972b7e48f023cfb
   14000a33a:	fwait
   14000a33b:	outs   dx,DWORD PTR ds:[rsi]
   14000a33c:	add    al,0x94
   14000a33e:	(bad)
   14000a341:	pushf  
   14000a342:	ss (bad) 
   14000a344:	mov    dh,0x28
   14000a346:	jle    0x14000a3c1
   14000a348:	(bad)  
   14000a349:	rex.RX cmp DWORD PTR [rbp-0x1c],r13d
   14000a34d:	(bad)  
   14000a34e:	stc    
   14000a34f:	test   al,0xe7
   14000a351:	sub    cl,BYTE PTR [rsi]
   14000a353:	sbb    al,bl
   14000a355:	mov    esi,0xd1aa9a1c
   14000a35a:	out    dx,eax
   14000a35b:	sbb    al,0xf0
   14000a35d:	popf   
   14000a35e:	add    DWORD PTR [rdi-0x28],esi
   14000a361:	movabs eax,ds:0x56d0e1c7ab756597
   14000a36a:	add    DWORD PTR [rdx-0x70],ecx
   14000a36d:	lahf   
   14000a36e:	(bad)  
   14000a36f:	imul   esp,DWORD PTR [rsp+rbp*2-0x421281fb],0x3b
   14000a377:	mov    eax,0x798af8f2
   14000a37c:	sti    
   14000a37d:	rcl    BYTE PTR [rdx],1
   14000a37f:	fisttp WORD PTR [rbx-0x321f9149]
   14000a385:	mov    ebx,0xf92bc21f
   14000a38a:	lods   eax,DWORD PTR ds:[rsi]
   14000a38b:	mov    ah,0xe7
   14000a38d:	(bad)  
   14000a38e:	jge    0x14000a314
   14000a390:	(bad)  
   14000a391:	mov    esi,0xf6cfdf6
   14000a396:	rcr    BYTE PTR [rbx+rsi*8+0x0],0x85
   14000a39b:	xchg   BYTE PTR [rax],al
   14000a39d:	mov    bl,cl
   14000a39f:	int    0x9e
   14000a3a1:	or     DWORD PTR [rsi],0xd9654311
   14000a3a7:	add    al,0x11
   14000a3a9:	fs (bad) 
   14000a3ab:	jge    0x14000a41d
   14000a3ad:	push   rdi
   14000a3ae:	(bad)  
   14000a3af:	clc    
   14000a3b0:	adc    bl,BYTE PTR [rdi]
   14000a3b2:	xchg   ebx,eax
   14000a3b3:	mov    edx,0x8fa793c2
   14000a3b8:	push   rbx
   14000a3b9:	ffreep st(7)
   14000a3bb:	ds xchg esi,eax
   14000a3bd:	rex.WXB pop r8
   14000a3bf:	rsqrtps xmm6,xmm2
   14000a3c2:	out    0x31,al
   14000a3c4:	in     eax,dx
   14000a3c5:	(bad)  
   14000a3c6:	movabs al,ds:0xa9610c6fddb4dbde
   14000a3cf:	sbb    ebx,edx
   14000a3d1:	loope  0x14000a3eb
   14000a3d3:	in     al,dx
   14000a3d4:	imul   esp,eax,0xffffffc9
   14000a3d7:	(bad)  
   14000a3d8:	rol    BYTE PTR [rdx-0x427f2759],0x62
   14000a3df:	(bad)  
   14000a3e0:	sbb    eax,0xde8fe989
   14000a3e5:	(bad)  
   14000a3e6:	(bad)  
   14000a3e7:	xchg   edx,eax
   14000a3e8:	(bad)  
   14000a3e9:	and    al,0x4e
   14000a3eb:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a3ec:	and    eax,0xb6957ee3
   14000a3f1:	rex.WRXB out 0xa4,eax
   14000a3f4:	popf   
   14000a3f5:	test   eax,0x1ba636cd
   14000a3fa:	add    ch,bh
   14000a3fc:	(bad)  
   14000a3fd:	adc    eax,DWORD PTR [rax+0x1e]
   14000a400:	(bad)  
   14000a401:	(bad)  
   14000a402:	outs   dx,BYTE PTR ds:[rsi]
   14000a403:	shl    bl,0xf
   14000a406:	sbb    DWORD PTR [rax-0x5f],edi
   14000a409:	cmp    eax,0x7d87ede1
   14000a40e:	test   BYTE PTR [rdi+rdi*1],ah
   14000a411:	js     0x14000a3cc
   14000a413:	mov    dh,0x51
   14000a415:	jb     0x14000a453
   14000a417:	mov    eax,0xb1bcc71d
   14000a41c:	(bad)  
   14000a41d:	(bad)  
   14000a41e:	in     eax,dx
   14000a41f:	shl    DWORD PTR [rip+0xffffffff92c322d9],0xcd        # 0xd2c3c6ff
   14000a426:	jbe    0x14000a433
   14000a428:	or     BYTE PTR [rax-0x1264ed6b],ah
   14000a42e:	(bad)  
   14000a42f:	adc    al,al
   14000a431:	mov    dh,0x6d
   14000a433:	rcl    DWORD PTR [rdx-0x48964a75],1
   14000a439:	(bad)  
   14000a43a:	jae    0x14000a43e
   14000a43c:	mov    edx,0xd67abb72
   14000a441:	fld    TBYTE PTR [rbp-0x23a2d38b]
   14000a447:	jb     0x14000a41a
   14000a449:	js     0x14000a3d4
   14000a44b:	mov    esp,0x5f6b1a6c
   14000a450:	rex.XB xchg DWORD PTR [r14+0x57e8b069],esp
   14000a457:	cmp    eax,0x4202cd96
   14000a45c:	je     0x14000a415
   14000a45e:	jg     0x14000a48f
   14000a460:	jb     0x14000a400
   14000a462:	add    DWORD PTR [rdi-0x50],ecx
   14000a465:	(bad)  
   14000a466:	push   rbp
   14000a467:	cmp    BYTE PTR [rcx-0x6898de49],0xcf
   14000a46e:	enter  0x7aef,0x72
   14000a472:	cmp    eax,0x8cb07d1
   14000a477:	add    dh,al
   14000a479:	push   rax
   14000a47a:	call   0x146e6e8fd
   14000a47f:	call   0xedc9736e
   14000a484:	shr    BYTE PTR [rcx-0x2ff8c168],0x8
   14000a48b:	rex.WRX or al,0x5
   14000a48e:	add    DWORD PTR [rbx+rcx*2+0x61],esi
   14000a492:	mov    dh,0x87
   14000a494:	out    0x3d,al
   14000a496:	cmp    eax,0x38bbf5e4
   14000a49b:	in     eax,dx
   14000a49c:	xchg   esi,eax
   14000a49d:	cmp    DWORD PTR [rbx+0x29],ebp
   14000a4a0:	sbb    ecx,ecx
   14000a4a2:	scas   al,BYTE PTR es:[rdi]
   14000a4a3:	mov    esi,0x6aed37a4
   14000a4a8:	fcmovnb st,st(4)
   14000a4aa:	(bad)  
   14000a4ab:	sbb    ch,BYTE PTR [rdx+0x25]
   14000a4ae:	or     edi,DWORD PTR [rbx-0x10]
   14000a4b1:	(bad)  
   14000a4b2:	sbb    BYTE PTR [rsi-0x25],dl
   14000a4b5:	rex.WRB
   14000a4b6:	rex.WRXB out 0x16,al
   14000a4b9:	fwait
   14000a4ba:	ins    DWORD PTR es:[rdi],dx
   14000a4bb:	(bad)  
   14000a4bc:	fldcw  WORD PTR [rsi+0x21]
   14000a4bf:	and    DWORD PTR [rcx+0x6836cda],esi
   14000a4c5:	ret    
   14000a4c6:	imul   edi,edi,0x205f12d0
   14000a4cc:	outs   dx,BYTE PTR ds:[rsi]
   14000a4cd:	jrcxz  0x14000a502
   14000a4cf:	or     al,0x90
   14000a4d1:	fdivr  st,st(0)
   14000a4d3:	out    dx,al
   14000a4d4:	out    dx,al
   14000a4d5:	push   rbp
   14000a4d6:	sbb    eax,0xc766fc94
   14000a4db:	repz xchg esp,eax
   14000a4dd:	popf   
   14000a4de:	loope  0x14000a490
   14000a4e0:	jo     0x14000a552
   14000a4e2:	(bad)  
   14000a4e3:	push   rdi
   14000a4e4:	rex.W (bad) 
   14000a4e7:	(bad)  
   14000a4e8:	add    al,0xfa
   14000a4ea:	in     eax,0x42
   14000a4ec:	repz jle 0x14000a4ef
   14000a4ef:	cmp    ebp,DWORD PTR [rip+0x64498c40]        # 0x1a44a3135
   14000a4f5:	(bad)  
   14000a4f6:	(bad)  
   14000a4f7:	or     bh,cl
   14000a4f9:	jae    0x14000a489
   14000a4fb:	rex.RX sbb r8d,DWORD PTR [rax-0xeb0f0f9]
   14000a502:	mov    edi,0xeb8ddbbe
   14000a507:	jle    0x14000a4f9
   14000a509:	mov    bl,0xe9
   14000a50b:	ja     0x14000a587
   14000a50d:	imul   edi,edi,0xd761d9e1
   14000a513:	fild   DWORD PTR [rax]
   14000a515:	cmp    BYTE PTR [rsi-0x434a82bf],al
   14000a51b:	mov    al,0x20
   14000a51d:	stc    
   14000a51e:	pop    rbp
   14000a51f:	(bad)  
   14000a520:	repz jb 0x14000a4de
   14000a523:	pop    rsp
   14000a524:	mov    dh,0x22
   14000a526:	or     BYTE PTR [rdi],cl
   14000a528:	xor    ebp,DWORD PTR [rdi+rbp*4+0x2f]
   14000a52c:	sbb    dh,dh
   14000a52e:	sub    dl,BYTE PTR [rbx+0x2]
   14000a531:	rex.XB enter 0x73ce,0x6f
   14000a536:	mov    cl,0xda
   14000a538:	outs   dx,BYTE PTR ds:[rsi]
   14000a539:	mov    al,0xde
   14000a53b:	outs   dx,BYTE PTR ds:[rsi]
   14000a53c:	mov    al,0x69
   14000a53e:	fucomi st,st(6)
   14000a540:	push   QWORD PTR [rsi+0x3c]
   14000a543:	rcl    ebx,0x24
   14000a546:	jg     0x14000a5a8
   14000a548:	scas   al,BYTE PTR es:[rdi]
   14000a549:	and    bh,BYTE PTR [rdx+0x121ae7c4]
   14000a54f:	jae    0x14000a50f
   14000a551:	ret    0x3fe4
   14000a554:	(bad)  
   14000a555:	mov    ebp,0x8878bb40
   14000a55a:	enter  0xb2d8,0xf5
   14000a55e:	jb     0x14000a5cd
   14000a560:	test   ebx,0xf25fb422
   14000a566:	ja     0x14000a5c9
   14000a568:	out    dx,al
   14000a569:	(bad)  
   14000a56a:	and    al,ah
   14000a56c:	pop    rcx
   14000a56d:	rex.B
   14000a56e:	rex.W ins BYTE PTR es:[rdi],dx
   14000a570:	outs   dx,DWORD PTR ds:[rsi]
   14000a571:	test   al,0xfd
   14000a573:	jmp    0x14000a522
   14000a575:	(bad)  
   14000a576:	out    dx,eax
   14000a577:	dec    bh
   14000a579:	jmp    QWORD PTR [rdi-0x182f0081]
   14000a57f:	pop    rsi
   14000a580:	or     BYTE PTR [rsi+0x77005419],dl
   14000a586:	out    dx,al
   14000a587:	fdivr  QWORD PTR [rbx+0x13]
   14000a58a:	cmp    BYTE PTR [rdi-0x71],spl
   14000a58e:	outs   dx,BYTE PTR ds:[rsi]
   14000a58f:	test   eax,0xffc434db
   14000a594:	jp     0x14000a5c2
   14000a596:	retf   
   14000a597:	jmp    0x14000a54c
   14000a599:	and    dh,ch
   14000a59b:	stc    
   14000a59c:	sbb    edx,DWORD PTR [rcx]
   14000a59e:	call   0x11abc5128
   14000a5a4:	and    al,0x8f
   14000a5a6:	(bad)  
   14000a5a7:	jns    0x14000a5f8
   14000a5a9:	ins    DWORD PTR es:[rdi],dx
   14000a5aa:	xor    eax,0x11522b24
   14000a5af:	(bad)  
   14000a5b0:	(bad)  [rsi-0x63e448a8]
   14000a5b6:	outs   dx,DWORD PTR ds:[rsi]
   14000a5b7:	mov    dh,0x58
   14000a5b9:	outs   dx,DWORD PTR ds:[rsi]
   14000a5ba:	mov    edx,0xd5bb6dcf
   14000a5bf:	ins    DWORD PTR es:[rdi],dx
   14000a5c0:	sbb    al,0x45
   14000a5c2:	jo     0x14000a573
   14000a5c4:	test   DWORD PTR [rsi+0x250c05c5],0xeb3f2410
   14000a5ce:	test   BYTE PTR [rsi-0x44],cl
   14000a5d1:	jg     0x14000a60e
   14000a5d3:	mov    ch,0xe9
   14000a5d5:	je     0x14000a60f
   14000a5d7:	or     BYTE PTR [rbp+rdi*2+0x751cee03],cl
   14000a5de:	in     ax,0x11
   14000a5e1:	call   0xd3d10622
   14000a5e6:	add    ecx,DWORD PTR [rsi-0x10b5781c]
   14000a5ec:	sbb    al,BYTE PTR [rip+0xfffffffff9efddf3]        # 0x139f083e5
   14000a5f2:	(bad)  
   14000a5f3:	fst    QWORD PTR [rsp+rdx*1]
   14000a5f6:	rex.RXB and DWORD PTR [r13+0x40],0x80fcfbc0
   14000a5fe:	add    BYTE PTR [rcx],dl
   14000a600:	test   esi,esp
   14000a602:	sub    al,0x25
   14000a604:	movabs ds:0x22c4df3ef1e1e48f,al
   14000a60d:	lods   al,BYTE PTR ds:[rsi]
   14000a60e:	(bad)  
   14000a60f:	int3   
   14000a610:	xchg   DWORD PTR [rcx],ebx
   14000a612:	mov    dh,0x22
   14000a614:	nop
   14000a615:	(bad)  
   14000a616:	shl    BYTE PTR [rsi+0x6cdab16d],0xb0
   14000a61d:	fisubr WORD PTR [rcx+rsi*4-0x26]
   14000a621:	ins    BYTE PTR es:[rdi],dx
   14000a622:	mov    al,0xda
   14000a624:	lods   al,BYTE PTR ds:[rsi]
   14000a625:	mov    cl,0x91
   14000a627:	in     al,0x1e
   14000a629:	jns    0x14000a686
   14000a62b:	and    cl,BYTE PTR [rdi+0x25]
   14000a62e:	js     0x14000a67c
   14000a630:	sub    eax,0xc9717ce8
   14000a635:	iret   
   14000a636:	cmovs  edi,DWORD PTR [rbp-0xb]
   14000a63a:	out    0x19,eax
   14000a63c:	xchg   edx,eax
   14000a63d:	cld    
   14000a63e:	and    eax,0x55a97ebc
   14000a643:	sbb    BYTE PTR [rbp-0x22],0x5e
   14000a647:	cmp    al,0x54
   14000a649:	push   rdi
   14000a64a:	ins    BYTE PTR es:[rdi],dx
   14000a64b:	pop    rsi
   14000a64c:	and    edi,eax
   14000a64e:	rex.W xor dl,bpl
   14000a651:	leave  
   14000a652:	xchg   ebp,eax
   14000a653:	mov    bh,0x57
   14000a655:	out    0x5f,eax
   14000a657:	pop    rbp
   14000a658:	mul    DWORD PTR [rcx+0x4544bfed]
   14000a65e:	mov    ecx,ds
   14000a660:	test   eax,0x39dfb9
   14000a665:	shl    BYTE PTR [rbp-0x2e],0x43
   14000a669:	mov    ebx,0xf1dc04fa
   14000a66e:	jle    0x14000a698
   14000a670:	scas   eax,DWORD PTR es:[rdi]
   14000a671:	rex.WRB
   14000a672:	rex.RX adc eax,0x198ceb44
   14000a678:	sbb    esi,DWORD PTR [rbx+rdx*4+0x71]
   14000a67c:	addr32 fwait
   14000a67e:	or     eax,0x9c2b574e
   14000a683:	lods   eax,DWORD PTR ds:[rsi]
   14000a684:	(bad)  
   14000a685:	fdiv   DWORD PTR [rsi+0x442dd274]
   14000a68b:	jo     0x14000a644
   14000a68d:	sub    eax,0xe3ae08a3
   14000a692:	repnz and al,0xbf
   14000a695:	mov    DWORD PTR [rdi+0x51d7df90],ecx
   14000a69b:	jbe    0x14000a6dd
   14000a69d:	(bad)  
   14000a69e:	mov    cl,0xd8
   14000a6a0:	xlat   BYTE PTR ds:[rbx]
   14000a6a1:	mov    bl,0x4
   14000a6a3:	mov    bh,BYTE PTR [rax+0x7b]
   14000a6a6:	(bad)  
   14000a6a7:	enter  0x401c,0x70
   14000a6ab:	push   rdi
   14000a6ac:	pop    rdi
   14000a6ad:	rex.WRXB ins BYTE PTR es:[rdi],dx
   14000a6af:	and    BYTE PTR [rdx+rdx*1-0xb282874],ah
   14000a6b6:	sbb    BYTE PTR [rax+0x536db446],bh
   14000a6bc:	iret   
   14000a6bd:	imul   esi,DWORD PTR [rcx-0x7763ff83],0x4e7422dc
   14000a6c7:	fistp  WORD PTR [rip+0x2aef9baf]        # 0x16af0427c
   14000a6cd:	fcomp  QWORD PTR [rdi+0x3fbf3a17]
   14000a6d3:	rex.WRX xlat BYTE PTR ds:[rbx]
   14000a6d5:	imul   edx,DWORD PTR [rdx],0x8e7d64e3
   14000a6db:	mov    bl,0xf5
   14000a6dd:	sbb    ah,BYTE PTR [rdi]
   14000a6df:	out    0x2b,eax
   14000a6e1:	lods   al,BYTE PTR ds:[rsi]
   14000a6e2:	mov    ch,0x94
   14000a6e4:	(bad)  
   14000a6e5:	push   rsi
   14000a6e6:	pop    rbx
   14000a6e7:	(bad)  
   14000a6e8:	rex.WR icebp 
   14000a6ea:	out    dx,al
   14000a6eb:	adc    DWORD PTR [rdx-0x21f3e4d9],eax
   14000a6f1:	loopne 0x14000a6c4
   14000a6f3:	jrcxz  0x14000a772
   14000a6f5:	ins    DWORD PTR es:[rdi],dx
   14000a6f6:	rex.WR cmp al,0x5e
   14000a6f9:	lahf   
   14000a6fa:	rex.WB jle 0x14000a753
   14000a6fd:	sbb    DWORD PTR es:[rdi-0x620e074e],edx
   14000a704:	(bad)  
   14000a705:	addr32 adc eax,0x3f1122e0
   14000a70b:	(bad)  
   14000a70c:	(bad)  
   14000a70e:	rex.WRXB ffree st(2)
   14000a711:	shl    DWORD PTR [rbp+0x52bcfa6b],1
   14000a717:	repnz fcmovnu st,st(3)
   14000a71a:	loop   0x14000a6a1
   14000a71c:	nop
   14000a71d:	js     0x14000a700
   14000a71f:	leave  
   14000a720:	(bad)  
   14000a721:	fldenv [rcx+riz*4+0x637167ce]
   14000a728:	jne    0x14000a70f
   14000a72a:	xor    DWORD PTR [rdi+0x5b],ebp
   14000a72d:	in     al,dx
   14000a72e:	(bad)  
   14000a72f:	mov    ah,0xcd
   14000a731:	js     0x14000a76a
   14000a733:	and    dl,bh
   14000a735:	push   rsi
   14000a736:	(bad)  
   14000a737:	rex.XB scas eax,DWORD PTR es:[rdi]
   14000a739:	cmp    cl,bl
   14000a73b:	fimul  WORD PTR [rdx+0x27]
   14000a73e:	(bad)  
   14000a73f:	(bad)  
   14000a740:	outs   dx,BYTE PTR ds:[rsi]
   14000a741:	rex.RXB xlat BYTE PTR ds:[rbx]
   14000a743:	(bad)  
   14000a744:	rex.X pop rsi
   14000a746:	stos   DWORD PTR es:[rdi],eax
   14000a747:	sub    edx,DWORD PTR [rdi-0x28]
   14000a74a:	loope  0x14000a7a2
   14000a74c:	out    0x6e,eax
   14000a74e:	and    DWORD PTR [rcx+0x72],esi
   14000a751:	mov    esi,0x39d9c9c2
   14000a756:	rex.WRX xlat BYTE PTR ds:[rbx]
   14000a758:	jmp    0x14000a7d8
   14000a75a:	test   eax,0xf704876d
   14000a75f:	jp     0x14000a750
   14000a761:	pop    rax
   14000a762:	pop    rsp
   14000a763:	shl    BYTE PTR [rbx+0x2b7d790f],0xcc
   14000a76a:	mov    ah,0x3f
   14000a76c:	loop   0x14000a763
   14000a76e:	mov    ebp,0x749ba479
   14000a773:	add    dh,dh
   14000a775:	cmp    BYTE PTR [rsp+rdx*4],dh
   14000a778:	data16 fistp WORD PTR [rax+0x6f0af89b]
   14000a77f:	jl     0x14000a771
   14000a781:	add    DWORD PTR [rsi+0x1c789f],ecx
   14000a787:	icebp  
   14000a788:	call   0x197e54f8d
   14000a78d:	jno    0x14000a7be
   14000a78f:	cmp    al,0x79
   14000a791:	adc    ebp,DWORD PTR [rdi-0x23]
   14000a794:	mov    ebx,0x6936ffd3
   14000a799:	pushf  
   14000a79a:	jmp    0x14000a7c2
   14000a79c:	and    al,0x56
   14000a79e:	nop    edx
   14000a7a1:	rex.WXB iretq 
   14000a7a3:	jl     0x14000a7e3
   14000a7a5:	stos   DWORD PTR es:[rdi],eax
   14000a7a6:	ins    DWORD PTR es:[rdi],dx
   14000a7a7:	mov    bl,0xcc
   14000a7a9:	add    DWORD PTR [rdi*1-0x1600abec],esp
   14000a7b0:	mov    edi,0x3b4c2f68
   14000a7b5:	jle    0x14000a743
   14000a7b7:	jo     0x14000a80f
   14000a7b9:	and    DWORD PTR [rbp+0x5c],edi
   14000a7bc:	mov    bh,0xfb
   14000a7be:	iret   
   14000a7bf:	in     eax,dx
   14000a7c0:	(bad)  
   14000a7c1:	xor    al,0x5f
   14000a7c3:	fisttp DWORD PTR [rdx+0x3c]
   14000a7c6:	pop    rsp
   14000a7c7:	popf   
   14000a7c8:	loope  0x14000a7ad
   14000a7ca:	mov    bl,0x15
   14000a7cc:	rex.WRX push rsi
   14000a7ce:	stos   DWORD PTR es:[rdi],eax
   14000a7cf:	je     0x14000a760
   14000a7d1:	cmp    edx,DWORD PTR [rbp+0x118311e0]
   14000a7d7:	xchg   ebx,eax
   14000a7d8:	cld    
   14000a7d9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a7da:	int3   
   14000a7db:	cmp    eax,0xf90f7e4b
   14000a7e0:	push   rbx
   14000a7e1:	(bad)  
   14000a7e2:	or     cl,BYTE PTR [rdx]
   14000a7e4:	sub    edi,ebp
   14000a7e6:	movabs eax,ds:0xd5d84de5469b4a61
   14000a7ef:	(bad)  
   14000a7f0:	cmp    dh,bl
   14000a7f2:	(bad)  
   14000a7f3:	int3   
   14000a7f4:	test   DWORD PTR [rax-0x460d1436],esi
   14000a7fa:	(bad)  
   14000a7fb:	jo     0x14000a854
   14000a7fd:	sti    
   14000a7fe:	add    dl,dl
   14000a800:	adc    al,0x0
   14000a802:	mov    ebx,0x277e8651
   14000a807:	jp     0x14000a7e5
   14000a809:	cmp    cl,BYTE PTR [rax]
   14000a80b:	cs stc 
   14000a80d:	sti    
   14000a80e:	push   rsp
   14000a80f:	(bad)  
   14000a810:	rol    DWORD PTR [rbp-0x780beb9b],0x0
   14000a817:	ds ds (bad) 
   14000a81a:	mov    DWORD PTR [rdi-0x59],0x7578f867
   14000a821:	rex.WRX out dx,al
   14000a823:	(bad)  
   14000a824:	and    ecx,ebp
   14000a826:	(bad)  
   14000a827:	adc    DWORD PTR [rax+rax*4+0xb534822],edi
   14000a82e:	in     eax,0x24
   14000a830:	jg     0x14000a829
   14000a832:	xor    eax,0x71f7f257
   14000a837:	fnstcw WORD PTR [rcx-0x7a]
   14000a83a:	jno    0x14000a8a4
   14000a83c:	(bad)  
   14000a83d:	fbstp  TBYTE PTR [rip+0xffffffff9e9e59e9]        # 0xde9f022c
   14000a843:	lods   al,BYTE PTR ds:[rsi]
   14000a844:	in     al,dx
   14000a845:	cli    
   14000a846:	imul   esi,edx,0x3e2af9d3
   14000a84c:	ficom  WORD PTR [rdi]
   14000a84e:	ds (bad) 
   14000a850:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000a851:	xchg   DWORD PTR [rsi+rbp*8],ecx
   14000a854:	jne    0x14000a881
   14000a856:	sub    eax,0x62229fb
   14000a85b:	and    BYTE PTR [rbp+0x9f00867],ch
   14000a861:	xchg   ebp,eax
   14000a862:	jae    0x14000a800
   14000a864:	rex.WRB add BYTE PTR [r8],r8b
   14000a867:	(bad)  
   14000a868:	jmp    0x19441ecb6
   14000a86d:	cmp    eax,0xdbc32b9e
   14000a872:	mov    dl,0x2f
   14000a874:	pushf  
   14000a875:	and    al,0x2
   14000a877:	shr    BYTE PTR [rdx-0x4d],0xc5
   14000a87b:	adc    ebx,0x33
   14000a87e:	cmp    al,0x38
   14000a880:	cmp    eax,0x5c789365
   14000a885:	and    DWORD PTR [rdx+rdx*1],0x73b7123c
   14000a88c:	leave  
   14000a88d:	out    dx,eax
   14000a88e:	test   eax,0x4bddb87
   14000a893:	repnz fcmovnb st,st(4)
   14000a896:	ja     0x14000a85a
   14000a898:	rex.WR sbb rax,0x1d719e6e
   14000a89e:	push   0xffffffffffffff9f
   14000a8a0:	test   DWORD PTR [rdx],0x98c1254c
   14000a8a6:	(bad)  
   14000a8a7:	add    bh,cl
   14000a8a9:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000a8ab:	in     al,dx
   14000a8ac:	(bad)  
   14000a8ad:	add    edx,DWORD PTR [rcx+0x3]
   14000a8b0:	(bad)  
   14000a8b1:	repnz adc eax,DWORD PTR [rbx]
   14000a8b4:	(bad)  
   14000a8b5:	retf   0x13f2
   14000a8b8:	fidiv  WORD PTR [rdi]
   14000a8ba:	add    al,0xdb
   14000a8bc:	sti    
   14000a8bd:	and    al,0x20
   14000a8bf:	cmc    
   14000a8c0:	mov    BYTE PTR [rsp+rdi*1+0xf058ffa],bl
   14000a8c7:	rex.B jl 0x14000a929
   14000a8ca:	cli    
   14000a8cb:	out    dx,eax
   14000a8cc:	(bad)  
   14000a8cd:	stos   DWORD PTR es:[rdi],eax
   14000a8ce:	adc    eax,0x4f8fc3e
   14000a8d3:	(bad)  
   14000a8d4:	out    0x2b,eax
   14000a8d6:	xchg   ebx,eax
   14000a8d7:	xlat   BYTE PTR ds:[rbx]
   14000a8d8:	and    edi,edi
   14000a8da:	rex.W leave 
   14000a8dc:	jmp    FWORD PTR [rax+0x2615f12c]
   14000a8e2:	(bad)  
   14000a8e3:	ds mov cl,0x4b
   14000a8e6:	(bad)  
   14000a8e7:	(bad)  
   14000a8e8:	mov    ah,0x19
   14000a8ea:	mov    DWORD PTR [rsi-0x40daf81b],ecx
   14000a8f0:	or     al,BYTE PTR [rbx]
   14000a8f2:	or     BYTE PTR [rcx-0x54],ah
   14000a8f5:	(bad)  
   14000a8f6:	(bad)  
   14000a8f7:	mov    r13d,0xb526541c
   14000a8fd:	mov    bh,0x84
   14000a8ff:	xor    ch,BYTE PTR [rax]
   14000a901:	jg     0x14000a93a
   14000a903:	movabs al,ds:0x38274f319fba2087
   14000a90c:	jns    0x14000a8b6
   14000a90e:	(bad)  
   14000a90f:	add    esp,0x47
   14000a912:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a913:	out    0xb8,eax
   14000a915:	div    ecx
   14000a917:	or     esi,ecx
   14000a919:	(bad)  
   14000a91a:	sbb    esp,DWORD PTR [rcx+rdx*1-0x64]
   14000a91e:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000a91f:	fcmovnu st,st(7)
   14000a921:	js     0x14000a9a2
   14000a923:	js     0x14000a8ae
   14000a925:	outs   dx,DWORD PTR ds:[rsi]
   14000a926:	mov    esp,fs
   14000a928:	iret   
   14000a929:	and    al,0xbf
   14000a92b:	lods   eax,DWORD PTR ds:[rsi]
   14000a92c:	adc    al,0x48
   14000a92e:	cwde   
   14000a92f:	fcmovne st,st(6)
   14000a931:	cmp    al,0xec
   14000a933:	repnz pop rsi
   14000a935:	adc    BYTE PTR [rdx],0xb2
   14000a938:	(bad)  
   14000a939:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000a93a:	mov    WORD PTR [rdx+riz*2],gs
   14000a93d:	(bad)
   14000a940:	xchg   esp,eax
   14000a941:	sub    BYTE PTR [rbp-0x30],0x5d
   14000a945:	leave  
   14000a946:	(bad)  
   14000a947:	js     0x14000a8e9
   14000a949:	rex.WXB mov QWORD PTR [r14],rsi
   14000a94c:	rex.RX adc BYTE PTR [rsi],r14b
   14000a94f:	add    BYTE PTR [rcx+0x3846231d],cl
   14000a955:	adc    eax,0xca59525
   14000a95a:	out    0xed,al
   14000a95c:	loop   0x14000a9b8
   14000a95e:	sub    DWORD PTR [rcx-0x11],esi
   14000a961:	in     al,0x14
   14000a963:	ja     0x14000a984
   14000a965:	sahf   
   14000a966:	movabs al,ds:0xbc11240e1ddf32d5
   14000a96f:	call   0x10919697e
   14000a974:	out    dx,eax
   14000a975:	mov    dh,0xdd
   14000a977:	mov    ah,0x7f
   14000a979:	movabs ds:0x19e7664eaa6567e4,al
   14000a982:	idiv   dl
   14000a984:	xchg   DWORD PTR [rdx+0x3728180d],edi
   14000a98a:	(bad)  
   14000a98b:	sbb    eax,0xe193f5e3
   14000a990:	adc    BYTE PTR [rip+0x382fd750],bl        # 0x1783080e6
   14000a996:	ficom  WORD PTR [rdi]
   14000a998:	xchg   edx,eax
   14000a999:	cmc    
   14000a99a:	jnp    0x14000a937
   14000a99c:	cld    
   14000a99d:	mov    esi,0x39a7b26b
   14000a9a2:	xor    BYTE PTR [rax+rbp*8],0xd7
   14000a9a6:	and    WORD PTR [rdi+rdx*1],di
   14000a9aa:	(bad)  
   14000a9ab:	rex.WRXB call 0x14129f8a2
   14000a9b1:	or     ah,bl
   14000a9b3:	cmp    edi,DWORD PTR [rcx]
   14000a9b5:	(bad)
   14000a9b8:	cmp    eax,0x6adb76c4
   14000a9bd:	stos   DWORD PTR es:[rdi],eax
   14000a9be:	cmp    cl,BYTE PTR [rsi-0x71f79c04]
   14000a9c4:	je     0x14000aa0b
   14000a9c6:	nop
   14000a9c7:	adc    al,0x17
   14000a9c9:	nop
   14000a9ca:	cmc    
   14000a9cb:	mov    cl,0xb8
   14000a9cd:	cmp    DWORD PTR [rdi-0x1e9c9308],edx
   14000a9d3:	or     ebx,ebx
   14000a9d5:	(bad)  
   14000a9d6:	out    0x78,al
   14000a9d8:	nop
   14000a9d9:	(bad)  
   14000a9da:	pop    rsp
   14000a9db:	jns    0x14000a9c9
   14000a9dd:	rex.WB
   14000a9de:	rex
   14000a9df:	rex.RX je 0x14000aa57
   14000a9e2:	lods   eax,DWORD PTR ds:[rsi]
   14000a9e3:	xchg   esp,eax
   14000a9e4:	sub    dh,al
   14000a9e6:	sub    al,0xf1
   14000a9e8:	jno    0x14000a98c
   14000a9ea:	stos   DWORD PTR es:[rdi],eax
   14000a9eb:	jmp    0x14000a98e
   14000a9ed:	mov    WORD PTR [rsi+0x7e],es
   14000a9f0:	mov    ebx,0x48039b66
   14000a9f5:	jne    0x14000aa05
   14000a9f7:	(bad)  
   14000a9f8:	sar    BYTE PTR [rbx+0x251178d9],0x1c
   14000a9ff:	iret   
   14000aa00:	fdiv   DWORD PTR [rip+0x19e9c1fc]        # 0x159ea6c02
   14000aa06:	ds clc 
   14000aa08:	call   0xed9c002e
   14000aa0d:	movabs ds:0x547822b275245208,eax
   14000aa16:	xchg   edi,eax
   14000aa17:	clc    
   14000aa18:	lods   al,BYTE PTR ds:[rsi]
   14000aa19:	jp     0x14000aa38
   14000aa1b:	xchg   ebp,eax
   14000aa1c:	mov    ah,0x47
   14000aa1e:	sbb    al,0x2
   14000aa20:	icebp  
   14000aa21:	jae    0x14000aa15
   14000aa23:	fldl2t 
   14000aa25:	pop    rsi
   14000aa26:	(bad)  
   14000aa27:	hlt    
   14000aa28:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000aa29:	jno    0x14000aa9f
   14000aa2b:	in     eax,dx
   14000aa2c:	xor    DWORD PTR [rbx+0xf],ebp
   14000aa2f:	add    al,ah
   14000aa31:	popf   
   14000aa32:	movabs al,ds:0xd78e0b793c2f1215
   14000aa3b:	push   rdi
   14000aa3c:	rol    esp,1
   14000aa3e:	jmp    0x1b35dc9e0
   14000aa43:	(bad)  
   14000aa44:	push   rbx
   14000aa45:	retf   
   14000aa46:	mov    dl,0xa1
   14000aa48:	sti    
   14000aa49:	add    esi,esp
   14000aa4b:	cwde   
   14000aa4c:	add    ecx,DWORD PTR [rax+0x2b]
   14000aa4f:	push   rcx
   14000aa50:	adc    DWORD PTR [rcx],esi
   14000aa52:	loopne 0x14000a9d9
   14000aa54:	pop    rax
   14000aa55:	sbb    dh,dl
   14000aa57:	sti    
   14000aa58:	je     0x14000aa0f
   14000aa5a:	sar    DWORD PTR [rbx],0x1f
   14000aa5d:	ds rcr cl,0x66
   14000aa61:	ins    DWORD PTR es:[rdi],dx
   14000aa62:	loop   0x14000aaaa
   14000aa64:	jnp    0x14000aa63
   14000aa66:	pop    rax
   14000aa67:	fcomp  QWORD PTR [rax]
   14000aa69:	(bad)  
   14000aa6a:	sete   bh
   14000aa6d:	fidiv  DWORD PTR [rax+rdx*1]
   14000aa70:	(bad)  
   14000aa71:	cmp    dh,al
   14000aa73:	addr32 nop
   14000aa75:	cld    
   14000aa76:	sahf   
   14000aa77:	(bad)  
   14000aa78:	xor    cl,BYTE PTR [rax+0x7e]
   14000aa7b:	ffreep st(6)
   14000aa7d:	sahf   
   14000aa7e:	and    edx,esi
   14000aa80:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000aa81:	pop    rdx
   14000aa82:	jns    0x14000aa93
   14000aa84:	(bad)  
   14000aa85:	lods   al,BYTE PTR ds:[rsi]
   14000aa86:	add    ch,ah
   14000aa88:	(bad)  
   14000aa89:	pop    rcx
   14000aa8a:	jge    0x14000aaef
   14000aa8c:	(bad)  
   14000aa8d:	mov    edi,0x126870ef
   14000aa92:	lock lea edi,[rbx]
   14000aa95:	out    dx,eax
   14000aa96:	jrcxz  0x14000aa62
   14000aa98:	(bad)  
   14000aa99:	mov    edx,0x341404ab
   14000aa9e:	(bad)  
   14000aa9f:	and    al,0x9e
   14000aaa1:	jg     0x14000aa95
   14000aaa3:	(bad)  
   14000aaa4:	fidivr WORD PTR [rdx-0x6d47e09]
   14000aaaa:	push   rbp
   14000aaab:	cmp    dh,BYTE PTR [rdx-0x3e030f7d]
   14000aab1:	xbegin 0x146307899
   14000aab7:	(bad)  
   14000aab8:	pop    rbp
   14000aab9:	sbb    eax,0xfa00f3d6
   14000aabe:	movabs ds:0x5b68c4300d2dbd74,eax
   14000aac7:	mov    edi,esi
   14000aac9:	out    dx,al
   14000aaca:	jg     0x14000aa50
   14000aacc:	(bad)  
   14000aace:	and    DWORD PTR ds:[rcx+0x166b3bc1],edi
   14000aad5:	stc    
   14000aad6:	shl    DWORD PTR [rip+0xffffffffe25945fa],cl        # 0x12259f0d6
   14000aadc:	sub    ebp,DWORD PTR [rip+0x70639df9]        # 0x1b06448db
   14000aae2:	fidiv  DWORD PTR [rcx]
   14000aae4:	sbb    eax,0xf50e5936
   14000aae9:	push   rsi
   14000aaea:	(bad)  
   14000aaec:	xacquire xchg DWORD PTR [rsi],ebx
   14000aaef:	mov    ebp,0xcfabb435
   14000aaf4:	rex.W jle 0x14000ab40
   14000aaf7:	test   BYTE PTR [rsi],0x58
   14000aafa:	xchg   edx,eax
   14000aafb:	fbstp  TBYTE PTR [rcx]
   14000aafd:	(bad)  
   14000aafe:	scas   al,BYTE PTR es:[rdi]
   14000aaff:	out    0xb7,eax
   14000ab01:	fist   DWORD PTR [rip+0xffffffffe98b9dfa]        # 0x1298c4901
   14000ab07:	cmp    eax,DWORD PTR [rcx]
   14000ab09:	mov    edi,edx
   14000ab0b:	xchg   esp,eax
   14000ab0c:	ds (bad) 
   14000ab0e:	test   al,0xbf
   14000ab10:	add    bh,al
   14000ab12:	call   0x11f6fc00b
   14000ab17:	sti    
   14000ab18:	or     BYTE PTR [rbx+0x327e6f7e],bl
   14000ab1e:	rcr    DWORD PTR [rcx-0x46],0x44
   14000ab22:	(bad)  
   14000ab23:	(bad)  
   14000ab24:	cli    
   14000ab25:	adc    bl,bh
   14000ab27:	ds and eax,0xea5c7dbf
   14000ab2d:	pop    rbx
   14000ab2e:	ret    0x404e
   14000ab31:	cli    
   14000ab32:	jbe    0x14000ab14
   14000ab34:	pop    rbp
   14000ab35:	mov    esi,0x2b177c12
   14000ab3a:	add    DWORD PTR [rcx+0x7e57a875],edi
   14000ab40:	mov    cl,0xeb
   14000ab42:	rex.RX
   14000ab43:	rex.W ins DWORD PTR es:[rdi],dx
   14000ab45:	enter  0x500f,0xaf
   14000ab49:	(bad)  
   14000ab4b:	xor    eax,0xbe7e4ce9
   14000ab50:	or     al,0xe8
   14000ab52:	imul   ebx,DWORD PTR [rdi-0x14],0xffffff96
   14000ab56:	loopne 0x14000ab89
   14000ab58:	cwde   
   14000ab59:	lods   al,BYTE PTR ds:[rsi]
   14000ab5a:	add    BYTE PTR [rdx],bl
   14000ab5c:	cmp    esi,0x64ae1e21
   14000ab62:	push   rbp
   14000ab63:	mov    edi,0xef16edd7
   14000ab68:	fdivr  QWORD PTR [rbp-0x80]
   14000ab6b:	(bad)  
   14000ab6c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000ab6d:	addr32 (bad) 
   14000ab6f:	out    dx,eax
   14000ab70:	sahf   
   14000ab71:	rex.B jo 0x14000ab0a
   14000ab74:	sar    DWORD PTR cs:[rbx+0x26fc948f],1
   14000ab7b:	outs   dx,BYTE PTR ds:[rsi]
   14000ab7c:	push   rdi
   14000ab7d:	xchg   edx,eax
   14000ab7e:	(bad)  
   14000ab7f:	xchg   ebx,eax
   14000ab80:	cld    
   14000ab81:	mov    ah,0x53
   14000ab83:	pop    rcx
   14000ab84:	(bad)  
   14000ab85:	outs   dx,BYTE PTR ds:[rsi]
   14000ab86:	cmp    edi,ebx
   14000ab88:	jo     0x14000ab51
   14000ab8a:	jmp    0x14000ab1b
   14000ab8c:	sbb    eax,DWORD PTR [rsi]
   14000ab8e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ab8f:	jns    0x14000ab58
   14000ab91:	jb     0x14000ab2b
   14000ab93:	jnp    0x14000ab82
   14000ab95:	jg     0x14000ab61
   14000ab97:	rex.WX
   14000ab98:	fisubr DWORD PTR [r14+0x57e4b8be]
   14000ab9f:	std    
   14000aba0:	rex.WR mov al,0x3c
   14000aba3:	jrcxz  0x14000ab7f
   14000aba5:	xchg   ebx,eax
   14000aba6:	mov    esp,DWORD PTR [rdx]
   14000aba8:	mov    bh,0x3
   14000abaa:	or     esi,ebx
   14000abac:	sar    BYTE PTR [rdi],0x2b
   14000abaf:	add    bh,BYTE PTR [rax+0x78]
   14000abb2:	jbe    0x14000ab3a
   14000abb4:	mov    bh,0xee
   14000abb6:	fadd   st(3),st
   14000abb8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000abb9:	pop    rdi
   14000abba:	(bad)  
   14000abbb:	repz jp 0x14000abe8
   14000abbe:	(bad)  
   14000abbf:	sub    ah,dh
   14000abc1:	jno    0x14000ac16
   14000abc3:	mov    ebp,0x8fe0847b
   14000abc8:	(bad)  
   14000abc9:	adc    bl,BYTE PTR [rdi+0x48]
   14000abcc:	repnz rex.WRXB and r15,r15
   14000abd0:	cs xor bh,dl
   14000abd3:	mov    ?,WORD PTR [rdi+0xfb875b1]
   14000abd9:	add    al,0x89
   14000abdb:	rex.W jle 0x14000abf0
   14000abde:	(bad)  
   14000abdf:	in     al,dx
   14000abe0:	jmp    0x14000abca
   14000abe2:	xchg   ecx,eax
   14000abe3:	cld    
   14000abe4:	pushf  
   14000abe5:	cld    
   14000abe6:	outs   dx,BYTE PTR ds:[rsi]
   14000abe7:	fwait
   14000abe8:	out    0x5a,al
   14000abea:	or     bl,BYTE PTR [rsp+rdi*4+0x38443815]
   14000abf1:	or     eax,esp
   14000abf3:	std    
   14000abf4:	(bad)  
   14000abf5:	(bad)  
   14000abf6:	loope  0x14000abb5
   14000abf8:	sti    
   14000abf9:	(bad)  
   14000abfa:	cmc    
   14000abfb:	(bad)  
   14000abfc:	addr32 and al,0xb1
   14000ac00:	mov    eax,0x43870449
   14000ac05:	retf   0x6e47
   14000ac08:	mov    DWORD PTR [rdi-0x38],ebp
   14000ac0b:	or     BYTE PTR [rip+0xffffffffe1b97608],bl        # 0x121ba2219
   14000ac11:	(bad)  
   14000ac12:	(bad)  
   14000ac13:	cmp    BYTE PTR [rdi+rax*4+0x39],al
   14000ac17:	jge    0x14000abd8
   14000ac19:	out    dx,al
   14000ac1a:	mov    esi,0xa2f89607
   14000ac1f:	xchg   edx,eax
   14000ac20:	pop    rdi
   14000ac21:	sub    DWORD PTR [rdx+0x15],eax
   14000ac24:	(bad)  
   14000ac25:	stos   DWORD PTR es:[rdi],eax
   14000ac26:	rex.WRXB out dx,eax
   14000ac28:	jns    0x14000ac38
   14000ac2a:	and    BYTE PTR [rip+0xffffffffd0224c74],al        # 0x11022f8a4
   14000ac30:	int    0x3
   14000ac32:	ins    BYTE PTR es:[rdi],dx
   14000ac33:	in     eax,0x16
   14000ac35:	outs   dx,DWORD PTR ds:[rsi]
   14000ac36:	jl     0x14000aca8
   14000ac38:	(bad)  
   14000ac39:	bswap  edi
   14000ac3b:	(bad)  
   14000ac3c:	cmp    eax,0x525d3dde
   14000ac41:	(bad)  
   14000ac42:	sub    eax,DWORD PTR [rdx-0x25b83b46]
   14000ac48:	(bad)  
   14000ac49:	retf   0xf530
   14000ac4c:	nop
   14000ac4d:	mov    al,0x21
   14000ac4f:	(bad)
   14000ac52:	mov    edi,eax
   14000ac54:	rex.R movabs al,ds:0x8730ca402ae8faa1
   14000ac5e:	xchg   edx,eax
   14000ac5f:	(bad)  
   14000ac61:	loopne 0x14000acbf
   14000ac63:	or     DWORD PTR [rax-0x36ceed01],ebp
   14000ac69:	outs   dx,DWORD PTR ds:[rsi]
   14000ac6a:	ss adc bh,cl
   14000ac6d:	jmp    0x14000ac4d
   14000ac6f:	in     eax,dx
   14000ac70:	sbb    al,0x40
   14000ac72:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ac73:	xchg   edi,eax
   14000ac74:	push   rax
   14000ac75:	leave  
   14000ac76:	rex.WRXB xlat BYTE PTR ds:[rbx]
   14000ac78:	sub    edi,DWORD PTR [rsi+rdi*8-0x8a7783f]
   14000ac7f:	rex.WRXB (bad) 
   14000ac81:	(bad)  
   14000ac82:	jno    0x14000aca2
   14000ac84:	add    ah,BYTE PTR [rip+0xffffffff8a977c13]        # 0xca98289d
   14000ac8a:	xor    BYTE PTR [rbp+0x53ce2069],0xd6
   14000ac91:	xor    al,0xc9
   14000ac93:	ffreep st(7)
   14000ac95:	or     eax,0x8e527d79
   14000ac9a:	fisttp DWORD PTR [rsi+0x5e]
   14000ac9d:	out    dx,eax
   14000ac9e:	sbb    al,0xe4
   14000aca0:	lahf   
   14000aca1:	mov    bh,BYTE PTR [rbp-0x24]
   14000aca4:	push   rcx
   14000aca5:	pop    rax
   14000aca6:	jb     0x14000ace0
   14000aca8:	loopne 0x14000ac76
   14000acaa:	add    DWORD PTR [rdx+rdx*4],ecx
   14000acad:	pop    rdi
   14000acae:	rex.X adc ebx,ebx
   14000acb1:	rex.WXB jle 0x14000ac99
   14000acb4:	or     al,0xb4
   14000acb6:	add    DWORD PTR [rax],ebx
   14000acb8:	outs   dx,BYTE PTR ds:[rsi]
   14000acb9:	pop    rbx
   14000acba:	sub    DWORD PTR [rip+0x20c5f450],esp        # 0x160c6a110
   14000acc0:	bswap  edi
   14000acc2:	(bad)  
   14000acc3:	lock fidivr DWORD PTR [rbx+0x77]
   14000acc7:	shr    DWORD PTR [rdx-0x4767f19b],1
   14000accd:	jno    0x14000acb3
   14000accf:	(bad)  
   14000acd0:	(bad)  
   14000acd1:	leave  
   14000acd2:	out    dx,eax
   14000acd3:	test   eax,0x87fc8527
   14000acd8:	and    cl,bh
   14000acda:	rex.WXB xchg r8,rax
   14000acdc:	(bad)  
   14000acdd:	neg    DWORD PTR [rsi-0x80]
   14000ace0:	xchg   edx,eax
   14000ace1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ace2:	lahf   
   14000ace3:	xor    al,0x6e
   14000ace5:	lahf   
   14000ace6:	push   rax
   14000ace7:	sahf   
   14000ace8:	popf   
   14000ace9:	out    dx,al
   14000acea:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000aceb:	pop    rbx
   14000acec:	lahf   
   14000aced:	ret    0xe3d1
   14000acf0:	(bad)  
   14000acf1:	pop    rcx
   14000acf2:	mov    ebx,0x24f83afa
   14000acf7:	dec    DWORD PTR [rbx]
   14000acf9:	lahf   
   14000acfa:	cld    
   14000acfb:	adc    al,0xa8
   14000acfd:	xchg   DWORD PTR [rdi-0x29],edx
   14000ad00:	(bad)  
   14000ad01:	jbe    0x14000ac93
   14000ad03:	stos   DWORD PTR es:[rdi],eax
   14000ad04:	(bad)
   14000ad07:	cmp    al,0xc4
   14000ad09:	push   0x36
   14000ad0b:	repnz add eax,DWORD PTR [rip+0xffffffffe0f8099f]        # 0x120f8b6b1
   14000ad12:	in     al,0x14
   14000ad14:	scas   eax,DWORD PTR es:[rdi]
   14000ad15:	jg     0x14000ad07
   14000ad17:	and    esp,edi
   14000ad19:	iret   
   14000ad1a:	out    0x8f,al
   14000ad1c:	adc    BYTE PTR [rbp+riz*4+0x2eb2130b],bl
   14000ad23:	icebp  
   14000ad24:	xor    DWORD PTR [rbp+0x12],0xc720ed3
   14000ad2b:	mov    edx,0xb4e6121e
   14000ad30:	jge    0x14000ad69
   14000ad32:	fidiv  WORD PTR [rdi+0x5f]
   14000ad35:	test   bh,cl
   14000ad37:	leave  
   14000ad38:	xor    edx,ebp
   14000ad3a:	nop
   14000ad3b:	mov    esp,0x5c3df771
   14000ad40:	fnstsw WORD PTR [rsi]
   14000ad42:	(bad)  
   14000ad43:	(bad)  
   14000ad44:	cmc    
   14000ad45:	add    DWORD PTR [rdi],edi
   14000ad47:	stc    
   14000ad48:	lahf   
   14000ad49:	jmp    rsp
   14000ad4b:	sub    eax,0x1ffbedc
   14000ad50:	call   0x1325c2cd3
   14000ad55:	stos   DWORD PTR es:[rdi],eax
   14000ad56:	jle    0x14000adc8
   14000ad58:	jbe    0x14000ad59
   14000ad5a:	and    DWORD PTR [rsi],edi
   14000ad5c:	test   DWORD PTR [rcx-0x3895b1e1],0xb803ec41
   14000ad66:	sti    
   14000ad67:	lock add al,0x6f
   14000ad6a:	(bad)  
   14000ad6c:	nop
   14000ad6d:	(bad)  
   14000ad6e:	(bad)  
   14000ad6f:	and    eax,DWORD PTR [rax-0x60]
   14000ad72:	imul   ecx,DWORD PTR [rbx+0x7c],0x3f4c663
   14000ad79:	in     eax,0xc5
   14000ad7b:	fisub  DWORD PTR [rdi-0x39]
   14000ad7e:	add    DWORD PTR [rcx-0x51],eax
   14000ad81:	fistp  QWORD PTR [rbp+0xd]
   14000ad84:	rex.WB dec BYTE PTR [r10+rsi*8+0x53]
   14000ad89:	sub    DWORD PTR [rcx-0x7b],ebp
   14000ad8c:	mov    ecx,0x99c3eced
   14000ad91:	xlat   BYTE PTR ds:[rbx]
   14000ad92:	out    0x61,eax
   14000ad94:	shl    DWORD PTR [rsi+0x3a0418c3],0xe6
   14000ad9b:	rex.WRB fld DWORD PTR [r15]
   14000ad9e:	movabs al,ds:0x24fb02575dde86d2
   14000ada7:	jle    0x14000ae13
   14000ada9:	fisttp WORD PTR [rdi]
   14000adab:	rex.WXB jle 0x14000adc0
   14000adae:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000adaf:	scas   al,BYTE PTR es:[rdi]
   14000adb0:	add    eax,0xaeb4bf23
   14000adb5:	sub    DWORD PTR [rcx],ebx
   14000adb7:	(bad)  
   14000adb8:	xor    al,0xfe
   14000adba:	ss in  al,dx
   14000adbc:	jp     0x14000ade9
   14000adbe:	jo     0x14000add2
   14000adc0:	ds clc 
   14000adc2:	call   0xfde01be8
   14000adc7:	iret   
   14000adc8:	or     DWORD PTR [rdi],esi
   14000adca:	pop    rdx
   14000adcb:	bnd ret 
   14000adcd:	jmp    0xc96b4576
   14000add2:	iret   
   14000add3:	jrcxz  0x14000ad86
   14000add5:	addr32 pop rcx
   14000add7:	loop   0x14000ad8c
   14000add9:	iret   
   14000adda:	(bad)  
   14000addb:	movabs al,ds:0x3da5053e8bbf6ed
   14000ade4:	or     eax,0x4f325f95
   14000ade9:	jno    0x14000adce
   14000adeb:	movabs al,ds:0x5a5507d79615f36e
   14000adf4:	add    esp,ebx
   14000adf6:	jge    0x14000ada0
   14000adf8:	fistp  WORD PTR [rbp-0x44]
   14000adfb:	or     BYTE PTR [rdi+rdx*4-0x47],bl
   14000adff:	push   rsi
   14000ae00:	add    ah,BYTE PTR [rsi]
   14000ae02:	sbb    eax,DWORD PTR [rax-0xdede025]
   14000ae08:	(bad)  
   14000ae09:	hlt    
   14000ae0a:	out    dx,al
   14000ae0b:	imul   edx,DWORD PTR [rdx-0x79f3bae1],0xf25237c9
   14000ae15:	jnp    0x14000ae09
   14000ae17:	xchg   esp,eax
   14000ae18:	xchg   ebx,eax
   14000ae19:	cld    
   14000ae1a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000ae1b:	out    dx,al
   14000ae1c:	nop
   14000ae1d:	in     al,0x37
   14000ae1f:	(bad)  
   14000ae20:	mov    esi,0x30cfbef1
   14000ae25:	rex.WB (bad) 
   14000ae27:	sub    BYTE PTR [rdi],dl
   14000ae29:	xchg   eax,esi
   14000ae2b:	jbe    0x14000ae0d
   14000ae2d:	rol    ah,cl
   14000ae2f:	mov    bh,0xef
   14000ae31:	add    eax,0xbd8b2a18
   14000ae36:	add    BYTE PTR [rax+rax*4],al
   14000ae39:	outs   dx,DWORD PTR ds:[rsi]
   14000ae3a:	push   rdi
   14000ae3b:	lahf   
   14000ae3c:	es ss loopne 0x14000ae61
   14000ae40:	(bad)  
   14000ae41:	(bad)  
   14000ae42:	(bad)  
   14000ae43:	push   0xffffffffffffffbb
   14000ae45:	mov    al,0x3d
   14000ae47:	mov    r14,QWORD PTR [rbp+0x33cb8ddf]
   14000ae4e:	(bad)  
   14000ae4f:	shr    DWORD PTR [rdi+0x6],cl
   14000ae52:	add    ah,BYTE PTR [rip+0xffffffffdea4ba78]        # 0x11ea568d0
   14000ae58:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000ae59:	and    dh,BYTE PTR [rax]
   14000ae5b:	jno    0x14000aed6
   14000ae5d:	xchg   edx,eax
   14000ae5e:	ffreep st(4)
   14000ae60:	pop    rdi
   14000ae61:	mov    esp,0xebd7bef1
   14000ae66:	add    ecx,DWORD PTR [rsi-0x19]
   14000ae69:	(bad)  
   14000ae6a:	ins    BYTE PTR es:[rdi],dx
   14000ae6b:	or     esi,esi
   14000ae6d:	adc    BYTE PTR [rdx-0x34ac7f6d],0x52
   14000ae74:	pop    rsi
   14000ae75:	pop    rbp
   14000ae76:	(bad)  
   14000ae77:	in     eax,0x55
   14000ae79:	(bad)  
   14000ae7a:	repz sub eax,0x7f17f1f1
   14000ae80:	pop    rdx
   14000ae81:	in     al,0x6f
   14000ae83:	xchg   esp,eax
   14000ae84:	(bad)  
   14000ae85:	nop
   14000ae86:	rex jrcxz 0x14000ae80
   14000ae89:	test   BYTE PTR [rbx+0x7b],0x2
   14000ae8d:	(bad)  
   14000ae8e:	movabs al,ds:0x2b977c124781dbe0
   14000ae97:	add    BYTE PTR [rbp+rcx*2-0x4d618efd],ch
   14000ae9e:	mov    dl,0x25
   14000aea0:	mov    edi,0xbc7fa655
   14000aea5:	(bad)  
   14000aea6:	frstor [rcx+rax*2-0xe]
   14000aeaa:	(bad)  
   14000aeab:	and    al,0x7f
   14000aead:	or     bh,cl
   14000aeaf:	jge    0x14000ae83
   14000aeb1:	shl    BYTE PTR [rsi],cl
   14000aeb3:	outs   dx,BYTE PTR ds:[rsi]
   14000aeb4:	sbb    eax,ebx
   14000aeb6:	in     eax,0x2a
   14000aeb8:	rcl    BYTE PTR [rbp+rbp*4+0x24d363ba],0xd7
   14000aec0:	cmp    DWORD PTR [rbp+riz*4-0x6a06d7c9],esi
   14000aec7:	(bad)  
   14000aec8:	push   rdi
   14000aec9:	jns    0x14000aef0
   14000aecb:	and    dl,bl
   14000aecd:	ficom  WORD PTR [rax-0x4c]
   14000aed0:	rex.WRX sbb r9,QWORD PTR [rsi]
   14000aed3:	jbe    0x14000aeee
   14000aed5:	jo     0x14000af13
   14000aed7:	stc    
   14000aed8:	and    BYTE PTR [eax-0x1d388429],bh
   14000aedf:	add    bl,BYTE PTR [rsi+0x7d0c47dd]
   14000aee5:	ins    BYTE PTR es:[rdi],dx
   14000aee6:	and    esp,DWORD PTR [rip+0xffffffff80cf37bf]        # 0xc0cfe6ab
   14000aeec:	in     al,0xf7
   14000aeee:	test   BYTE PTR [rip+0xffffffffe7387e4b],cl        # 0x127392d3f
   14000aef4:	sub    BYTE PTR [rsi-0x2],al
   14000aef7:	mov    ecx,0x772ec004
   14000aefc:	cmc    
   14000aefd:	in     eax,0xa4
   14000aeff:	(bad)  
   14000af00:	outs   dx,BYTE PTR ds:[rsi]
   14000af01:	sbb    al,0xc8
   14000af03:	mov    ecx,0xb3eaeff5
   14000af08:	enter  0x8c2f,0xf4
   14000af0c:	(bad)  
   14000af0d:	jb     0x14000aeae
   14000af0f:	(bad)  
   14000af10:	add    DWORD PTR [rax-0x378db29],edi
   14000af16:	mov    ecx,0x2af27da7
   14000af1b:	rex xchg esp,eax
   14000af1d:	loopne 0x14000af5f
   14000af1f:	adc    bh,cl
   14000af21:	out    0x93,eax
   14000af23:	cld    
   14000af24:	sahf   
   14000af25:	cmp    BYTE PTR [rbp-0x1a],bl
   14000af28:	movabs ds:0xef88f969377df921,eax
   14000af31:	mov    ebx,0x15687013
   14000af36:	rol    BYTE PTR [rdi-0x630585a3],0x7c
   14000af3d:	mov    bl,0xa4
   14000af3f:	rcl    edi,1
   14000af41:	jge    0x14000afbb
   14000af43:	push   rdi
   14000af44:	pop    rdi
   14000af45:	(bad)  
   14000af46:	out    0x27,eax
   14000af48:	(bad)  
   14000af49:	jge    0x14000aed1
   14000af4b:	and    BYTE PTR [rbx+0x7e],bh
   14000af4e:	(bad)  
   14000af4f:	rex.X sbb esi,edi
   14000af52:	mov    esi,0xebc93815
   14000af57:	(bad)  
   14000af58:	loop   0x14000af64
   14000af5a:	adc    edi,DWORD PTR [rsi+rbp*1-0x108f6e0f]
   14000af61:	icebp  
   14000af62:	test   BYTE PTR [rsi+0x25],dl
   14000af65:	repnz push rax
   14000af67:	push   0xfffffffffffffff6
   14000af69:	jg     0x14000afb9
   14000af6b:	shl    BYTE PTR [rdi-0x1964e45a],cl
   14000af71:	(bad)
   14000af74:	(bad)  
   14000af75:	xchg   ebp,eax
   14000af76:	jmp    0x14000afcf
   14000af78:	popf   
   14000af79:	repz retf 0x5e6
   14000af7d:	(bad)  
   14000af7e:	cli    
   14000af7f:	(bad)  
   14000af80:	repz lahf 
   14000af82:	cld    
   14000af83:	push   rsp
   14000af84:	lahf   
   14000af85:	sar    BYTE PTR [rsi+0x4e],0x80
   14000af89:	retf   0xa5df
   14000af8c:	pop    rdi
   14000af8d:	loope  0x14000af9b
   14000af8f:	cmp    BYTE PTR [rbx],dh
   14000af91:	jne    0x14000af65
   14000af93:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000af94:	(bad)  
   14000af95:	popf   
   14000af96:	ins    DWORD PTR es:[rdi],dx
   14000af97:	add    eax,0x37f1bef6
   14000af9c:	cwde   
   14000af9d:	(bad)  
   14000af9e:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000af9f:	xor    esp,DWORD PTR [rip+0xffffffff97163c12]        # 0xd716ebb7
   14000afa5:	rex.WX
   14000afa6:	lock push rdx
   14000afa8:	xchg   edx,eax
   14000afa9:	(bad)  
   14000afaa:	or     BYTE PTR [rdx-0x1c4adbc1],dl
   14000afb0:	fs (bad) 
   14000afb2:	icebp  
   14000afb3:	rcr    DWORD PTR [rip+0xffffffff82f89763],0xed        # 0xc2f9471d
   14000afba:	sbb    eax,0x7edfb327
   14000afbf:	sti    
   14000afc0:	in     eax,dx
   14000afc1:	lods   al,BYTE PTR ds:[rsi]
   14000afc2:	jl     0x14000af82
   14000afc4:	xor    ah,dh
   14000afc6:	int3   
   14000afc7:	cmp    eax,DWORD PTR [rsi+0x17bbed4]
   14000afcd:	(bad)  
   14000afce:	stc    
   14000afcf:	fidivr WORD PTR [rbx+rdi*8+0x5edb1e2e]
   14000afd6:	(bad)  
   14000afd7:	lock js 0x14000b039
   14000afda:	loop   0x14000afd5
   14000afdc:	rex.WRXB jle 0x14000aff9
   14000afdf:	outs   dx,DWORD PTR ds:[rsi]
   14000afe0:	jg     0x14000afd6
   14000afe2:	jle    0x14000b023
   14000afe4:	mov    esi,0x52bf24b7
   14000afe9:	add    al,BYTE PTR [rax]
   14000afeb:	and    BYTE PTR [rsi+rcx*8],ah
   14000afee:	(bad)  
   14000afef:	pushf  
   14000aff0:	loopne 0x14000af87
   14000aff2:	jrcxz  0x14000b06c
   14000aff4:	pop    rbx
   14000aff5:	pcmpgtd mm1,QWORD PTR [rsi]
   14000aff8:	shl    BYTE PTR [rsp+rsi*8-0x6f],0x92
   14000affd:	jg     0x14000b065
   14000afff:	and    DWORD PTR [rcx-0xe],0xffffff8d
   14000b003:	xchg   esp,eax
   14000b004:	cld    
   14000b005:	sahf   
   14000b006:	cmp    al,0xe5
   14000b008:	and    al,0xbf
   14000b00a:	test   eax,0x3eaed47b
   14000b00f:	scas   eax,DWORD PTR es:[rdi]
   14000b010:	(bad)  
   14000b011:	or     ch,BYTE PTR [rbx-0x64f4eef5]
   14000b017:	sbb    DWORD PTR [rbx-0xab3e5e6],edi
   14000b01d:	clc    
   14000b01e:	cmp    DWORD PTR [rbp-0x4f],esi
   14000b021:	and    eax,0x9efc873b
   14000b026:	sbb    eax,DWORD PTR [rdx+rdi*2+0x3f257bf2]
   14000b02d:	sub    edi,eax
   14000b02f:	in     al,dx
   14000b030:	and    eax,0xff334910
   14000b035:	sti    
   14000b036:	fisttp QWORD PTR [rdx]
   14000b038:	lods   al,BYTE PTR ds:[rsi]
   14000b039:	(bad)  
   14000b03a:	cmp    BYTE PTR [rbx-0xe],bl
   14000b03d:	ret    
   14000b03e:	cmc    
   14000b03f:	xchg   bx,ax
   14000b041:	xchg   BYTE PTR [rbx],al
   14000b043:	jns    0x14000afd7
   14000b045:	ffreep st(4)
   14000b047:	pop    rdi
   14000b048:	sahf   
   14000b049:	icebp  
   14000b04a:	(bad)  
   14000b04b:	movabs al,ds:0xe44494aaf6eab7e4
   14000b054:	scas   al,BYTE PTR es:[rdi]
   14000b055:	cdq    
   14000b056:	out    0x40,eax
   14000b058:	rex.WB fstp QWORD PTR [r13+0x2e]
   14000b05c:	test   DWORD PTR [rbp-0x69dc31a],0xb1f57753
   14000b066:	fnstcw WORD PTR [rsi+0x76]
   14000b069:	out    0x20,eax
   14000b06b:	and    DWORD PTR [rdi-0xeca28e0],edi
   14000b071:	outs   dx,BYTE PTR ds:[rsi]
   14000b072:	rcl    BYTE PTR [rbx+riz*8-0x6c733de6],0x80
   14000b07a:	mov    cl,0xb8
   14000b07c:	xor    DWORD PTR [rdx-0x2e7c8ee1],edx
   14000b082:	xchg   edi,eax
   14000b083:	xchg   ebx,eax
   14000b084:	adc    al,0xe7
   14000b086:	sub    DWORD PTR [rbx],ebp
   14000b088:	pop    rbx
   14000b089:	repnz mov bl,0x32
   14000b08c:	jge    0x14000b0ec
   14000b08e:	(bad)  
   14000b090:	xor    DWORD PTR [rcx-0xe],ecx
   14000b093:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b094:	nop
   14000b095:	jg     0x14000b01b
   14000b097:	in     al,0xb7
   14000b099:	leave  
   14000b09a:	(bad)  
   14000b09b:	jne    0x14000b0af
   14000b09d:	jo     0x14000b109
   14000b09f:	rex.RXB sbb al,0x2b
   14000b0a2:	imul   ecx,DWORD PTR [rbx+0x10],0x3717163f
   14000b0a9:	rex.R shl BYTE PTR [rcx],cl
   14000b0ac:	mov    edi,0x45af897f
   14000b0b1:	mov    bh,0xc4
   14000b0b3:	(bad)  
   14000b0b4:	(bad)  
   14000b0b5:	cli    
   14000b0b6:	xor    dl,dh
   14000b0b8:	cmp    edi,DWORD PTR [rbx]
   14000b0ba:	or     BYTE PTR [rdi+0x1cef39db],al
   14000b0c0:	stos   BYTE PTR es:[rdi],al
   14000b0c2:	fcom   DWORD PTR [eip+0x38753c1]        # 0x14388048a
   14000b0c9:	cmp    ch,BYTE PTR [rsi]
   14000b0cb:	loopne 0x14000b0a6
   14000b0cd:	out    0x90,eax
   14000b0cf:	cld    
   14000b0d0:	fidivr WORD PTR [rbx+rax*1]
   14000b0d3:	xchg   edx,eax
   14000b0d4:	fist   WORD PTR [rbx]
   14000b0d6:	ss test BYTE PTR fs:[rsi+0x68f25f91],ah
   14000b0de:	sti    
   14000b0df:	cmp    al,0x64
   14000b0e1:	movabs al,ds:0xc50dfd6d7ddff6e4
   14000b0ea:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b0eb:	sbb    BYTE PTR [rdx],ah
   14000b0ed:	cmp    eax,0xb8ffa739
   14000b0f2:	xchg   edx,eax
   14000b0f3:	(bad)  
   14000b0f4:	mov    eax,0xfc91e7c4
   14000b0f9:	sti    
   14000b0fa:	and    bh,BYTE PTR [rdi]
   14000b0fc:	push   rax
   14000b0fd:	bnd jns 0x14000b100
   14000b100:	(bad)  
   14000b101:	and    cl,bh
   14000b103:	rex.WRB cqo 
   14000b105:	pop    QWORD PTR [rsi-0x1da5b01c]
   14000b10b:	or     ecx,DWORD PTR [rdx-0x2]
   14000b10e:	std    
   14000b10f:	xchg   edx,eax
   14000b110:	mov    edi,0x353eb8f4
   14000b115:	in     eax,dx
   14000b116:	xchg   esp,eax
   14000b117:	icebp  
   14000b118:	mov    edi,0xf677af13
   14000b11d:	add    eax,0x15eecfc8
   14000b122:	or     BYTE PTR [rbx-0x2],cl
   14000b125:	(bad)  
   14000b126:	fisttp WORD PTR [rbx]
   14000b128:	mov    ah,0xa9
   14000b12a:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b12b:	add    DWORD PTR [rsi],ebp
   14000b12d:	idiv   DWORD PTR [rax+rax*1]
   14000b130:	add    BYTE PTR [rip+0x5a9a7f24],ah        # 0x19a9b305a
   14000b136:	sub    BYTE PTR [rdi],ah
   14000b138:	stc    
   14000b139:	mov    ebx,0xbf92b9af
   14000b13e:	(bad)  
   14000b13f:	rex.WXB (bad) 
   14000b141:	adc    esp,DWORD PTR [rcx]
   14000b143:	call   FWORD PTR [rsi+0x24]
   14000b146:	jg     0x14000b0f0
   14000b148:	cmp    eax,0x55dc8e9
   14000b14d:	cwde   
   14000b14e:	rcl    ebx,cl
   14000b150:	(bad)  
   14000b151:	sub    eax,0xccfbcedf
   14000b156:	xor    ecx,edi
   14000b158:	cmp    cl,ah
   14000b15a:	pop    QWORD PTR [r11+r12*4]
   14000b15e:	add    al,0xd7
   14000b160:	rex.R xlat BYTE PTR ds:[rbx]
   14000b162:	pop    rsi
   14000b163:	lahf   
   14000b164:	out    dx,eax
   14000b165:	hlt    
   14000b166:	repz xchg edx,eax
   14000b168:	(bad)  
   14000b169:	loopne 0x14000b160
   14000b16b:	rex.XB (bad) 
   14000b16d:	xchg   esp,eax
   14000b16e:	stos   BYTE PTR es:[rdi],al
   14000b16f:	pop    rsp
   14000b170:	push   rdx
   14000b171:	xor    ebp,edi
   14000b173:	cdq    
   14000b174:	sbb    BYTE PTR [rbp-0xb],0x1
   14000b178:	outs   dx,DWORD PTR ds:[rsi]
   14000b179:	jmp    0x14000b141
   14000b17b:	in     eax,dx
   14000b17c:	pop    rsp
   14000b17d:	bnd jnp 0x14000b16a
   14000b180:	sbb    DWORD PTR [rdx-0x6ecd9e26],edx
   14000b186:	lock rex.WR leave 
   14000b189:	out    dx,eax
   14000b18a:	sbb    al,0x83
   14000b18c:	ror    DWORD PTR [rsi],cl
   14000b18e:	mov    bh,0x9d
   14000b190:	in     eax,0xc9
   14000b192:	iret   
   14000b193:	iret   
   14000b194:	adc    DWORD PTR [rbx+0x52],edx
   14000b197:	xor    esp,DWORD PTR [rax+0x6e]
   14000b19a:	ror    BYTE PTR [rdi+0x7f2863ad],cl
   14000b1a0:	(bad)  
   14000b1a1:	jle    0x14000b21e
   14000b1a3:	jle    0x14000b1bc
   14000b1a5:	pop    rdi
   14000b1a6:	pop    rax
   14000b1a7:	repnz fwait
   14000b1a9:	jmp    0x14000b148
   14000b1ab:	fimul  WORD PTR ss:[rdi+0x737d5b5]
   14000b1b2:	mov    bl,0xdf
   14000b1b4:	push   rbp
   14000b1b5:	adc    BYTE PTR [rdx],0x93
   14000b1b8:	xor    BYTE PTR [rcx-0x2fa56748],0xf9
   14000b1bf:	rex.RX
   14000b1c0:	rex.WX jle 0x14000b212
   14000b1c3:	sahf   
   14000b1c4:	jb     0x14000b158
   14000b1c6:	(bad)  
   14000b1c8:	mov    ebp,0x14be25d7
   14000b1cd:	rex.XB xor al,0x2
   14000b1d0:	mov    esi,0x414ce8b7
   14000b1d5:	imul   esp,edx,0x39fa958f
   14000b1db:	jno    0x14000b1ac
   14000b1dd:	(bad)  
   14000b1de:	stc    
   14000b1df:	adc    al,0xae
   14000b1e1:	ds icebp 
   14000b1e3:	sbb    al,bh
   14000b1e5:	adc    al,al
   14000b1e7:	push   rdx
   14000b1e8:	add    al,BYTE PTR [rax]
   14000b1ea:	(bad)  
   14000b1eb:	push   rax
   14000b1ec:	loope  0x14000b1c7
   14000b1ee:	(bad)  
   14000b1ef:	sahf   
   14000b1f0:	xlat   BYTE PTR ss:[rbx]
   14000b1f2:	xor    BYTE PTR [rdx-0x2],al
   14000b1f5:	xor    edi,DWORD PTR [rcx+0x6]
   14000b1f8:	jl     0x14000b216
   14000b1fa:	mov    WORD PTR [rsi+0x6e],cs
   14000b1fd:	outs   dx,DWORD PTR ds:[rsi]
   14000b1fe:	or     cl,BYTE PTR [rdx+0x460404ed]
   14000b204:	jp     0x14000b1fd
   14000b206:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b207:	loope  0x14000b249
   14000b209:	sahf   
   14000b20a:	in     al,0xef
   14000b20c:	loop   0x14000b1d5
   14000b20e:	rex.W dec BYTE PTR [rdx+rsi*8-0x11]
   14000b213:	rex.WX
   14000b214:	repnz and esi,DWORD PTR [rsp+rdi*1-0x7]
   14000b219:	jrcxz  0x14000b218
   14000b21b:	sar    BYTE PTR [rcx-0x5d],1
   14000b21e:	mov    bl,0xfe
   14000b220:	cmp    DWORD PTR [rbx-0x414b7900],ebp
   14000b226:	(bad)  
   14000b227:	xchg   esp,eax
   14000b228:	scas   al,BYTE PTR es:[rdi]
   14000b229:	call   0x12dc0d226
   14000b22e:	sti    
   14000b22f:	out    dx,eax
   14000b230:	loop   0x14000b263
   14000b232:	jno    0x14000b201
   14000b234:	xchg   ebp,eax
   14000b235:	cld    
   14000b236:	jo     0x14000b1ff
   14000b238:	sti    
   14000b239:	iret   
   14000b23a:	ds (bad) 
   14000b23c:	xor    al,0xde
   14000b23e:	stc    
   14000b23f:	clc    
   14000b240:	popf   
   14000b241:	and    al,0xaf
   14000b243:	jg     0x14000b2b7
   14000b245:	inc    DWORD PTR [rdi+rbp*4]
   14000b248:	adc    BYTE PTR [rsi-0x1a],ah
   14000b24b:	leave  
   14000b24c:	(bad)  
   14000b24d:	mov    esp,0x3111eb
   14000b252:	icebp  
   14000b253:	jne    0x14000b2a6
   14000b255:	sbb    edi,DWORD PTR [rbx-0x38282a21]
   14000b25b:	cmc    
   14000b25c:	jne    0x14000b1ee
   14000b25e:	(bad)  
   14000b25f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b260:	rex.WXB jle 0x14000b2b9
   14000b263:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b264:	iret   
   14000b265:	mov    ebx,DWORD PTR [rbx-0x1b6d9c6]
   14000b26b:	pop    rbp
   14000b26c:	mov    ?,edi
   14000b26e:	jge    0x14000b202
   14000b270:	fbld   TBYTE PTR [rdi+0x4bb01266]
   14000b276:	outs   dx,DWORD PTR ds:[rsi]
   14000b277:	mov    edi,0xd4a7e22f
   14000b27c:	fisttp DWORD PTR [rbp-0x1b50a415]
   14000b282:	xlat   BYTE PTR ds:[rbx]
   14000b283:	xlat   BYTE PTR ds:[rbx]
   14000b284:	push   rdx
   14000b285:	rex.WB inc BYTE PTR [r9-0x4972410f]
   14000b28c:	cmp    eax,0xbb357005
   14000b291:	fnstsw WORD PTR [rcx-0x7fa10dd8]
   14000b297:	(bad)  
   14000b298:	(bad)  
   14000b299:	and    ebx,DWORD PTR [rbp+0x11]
   14000b29c:	and    al,0xc5
   14000b29e:	add    eax,0x921cfd64
   14000b2a3:	fistp  WORD PTR [rbx+0x7bf24067]
   14000b2a9:	ret    0x8c86
   14000b2ac:	push   rax
   14000b2ad:	adc    bh,cl
   14000b2af:	rex.WB cqo 
   14000b2b1:	ds leave 
   14000b2b3:	iret   
   14000b2b4:	jmp    0x14000b2d4
   14000b2b6:	nop
   14000b2b7:	cld    
   14000b2b8:	adc    DWORD PTR ds:[rax-0x33b0a280],0x4d
   14000b2c0:	rex.WB (bad) 
   14000b2c2:	mov    bh,0x1a
   14000b2c4:	xor    ah,al
   14000b2c6:	ss in  al,0xcf
   14000b2c9:	pop    rbp
   14000b2ca:	loop   0x14000b2e7
   14000b2cc:	ret    0x56de
   14000b2cf:	add    DWORD PTR [rdx-0x63],edx
   14000b2d2:	sub    ecx,0xffffff88
   14000b2d5:	repz rex.WX jle 0x14000b32c
   14000b2d9:	out    0xc8,al
   14000b2db:	icebp  
   14000b2dc:	mov    esi,0xc88680ef
   14000b2e1:	out    dx,eax
   14000b2e2:	int    0x13
   14000b2e4:	(bad)  
   14000b2e5:	jae    0x14000b282
   14000b2e7:	jbe    0x14000b281
   14000b2e9:	xor    cl,BYTE PTR [rbp+rdi*1+0x24]
   14000b2ed:	in     al,dx
   14000b2ee:	add    BYTE PTR [rdi+rdi*8],ah
   14000b2f1:	sbb    dl,dh
   14000b2f3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b2f4:	(bad)  
   14000b2f5:	pop    rdi
   14000b2f6:	imul   edi,ebx,0x29
   14000b2f9:	imul   ecx,DWORD PTR [rdx+0xd],0x168b1603
   14000b300:	push   0xffffffffed011a24
   14000b305:	fnsave [rbx+0x67]
   14000b308:	stc    
   14000b309:	jrcxz  0x14000b380
   14000b30b:	in     eax,0x91
   14000b30d:	jg     0x14000b37e
   14000b30f:	test   DWORD PTR [rdx],0x1bb8238c
   14000b315:	ja     0x14000b30f
   14000b317:	rex.WXB jl 0x14000b2ec
   14000b31a:	rex.WRB
   14000b31b:	ss rex.R (bad) 
   14000b31e:	jge    0x14000b36a
   14000b320:	jle    0x14000b2a6
   14000b322:	iret   
   14000b323:	pop    rbx
   14000b324:	fsubr  st,st(0)
   14000b326:	rex.WRB ret 
   14000b328:	pushf  
   14000b329:	xor    edi,eax
   14000b32b:	sti    
   14000b32c:	and    dh,bh
   14000b32e:	shl    BYTE PTR [rdx],1
   14000b330:	movabs al,ds:0xf2397f24a3442d10
   14000b339:	out    0xe2,eax
   14000b33b:	add    dh,ch
   14000b33d:	add    eax,0x5aeebfe8
   14000b342:	bnd jnp 0x14000b32f
   14000b345:	sbb    DWORD PTR [rdx+0x7e4873da],edx
   14000b34b:	out    0x18,eax
   14000b34d:	adc    bl,dl
   14000b34f:	push   rcx
   14000b350:	sahf   
   14000b351:	cld    
   14000b352:	add    esi,edx
   14000b354:	adc    BYTE PTR ds:[rsi+0x15b09b4b],ah
   14000b35b:	js     0x14000b2fc
   14000b35d:	(bad)  
   14000b35e:	lahf   
   14000b35f:	jnp    0x14000b396
   14000b361:	and    BYTE PTR [rax+0x1c],ch
   14000b364:	movabs al,ds:0xc7f2405e886b5f4e
   14000b36d:	loopne 0x14000b3ca
   14000b36f:	(bad)  
   14000b370:	pushf  
   14000b371:	ins    DWORD PTR es:[rdi],dx
   14000b372:	adc    eax,0xe92053a0
   14000b377:	test   DWORD PTR [rdi],ebx
   14000b379:	fcom   QWORD PTR [rdx]
   14000b37b:	fild   WORD PTR [rcx-0x49f01b6]
   14000b381:	or     ch,ch
   14000b383:	(bad)  
   14000b384:	rex.WXB sbb bpl,r15b
   14000b387:	(bad)  
   14000b389:	push   0x24
   14000b38b:	(bad)  
   14000b38c:	jno    0x14000b3c5
   14000b38e:	pop    rdi
   14000b38f:	rex.WX (bad) 
   14000b391:	push   rdx
   14000b392:	ret    
   14000b393:	add    BYTE PTR [rcx],al
   14000b395:	mov    DWORD PTR [rbx+0xc427fb],esi
   14000b39b:	pop    rax
   14000b39c:	lahf   
   14000b39d:	add    al,0x67
   14000b39f:	repnz or al,0x27
   14000b3a2:	test   DWORD PTR [rdi-0x5e],0x9bd6a765
   14000b3a9:	fcmovbe st,st(6)
   14000b3ab:	adc    al,0x4c
   14000b3ad:	jg     0x14000b3d7
   14000b3af:	call   0x12d207cfc
   14000b3b4:	xchg   esp,eax
   14000b3b5:	mov    bl,0x48
   14000b3b7:	dec    BYTE PTR [rdx+rsi*8+0xf]
   14000b3bb:	adc    BYTE PTR [rax+0x1f0fb3b7],dl
   14000b3c1:	and    edi,ecx
   14000b3c3:	loope  0x14000b3b6
   14000b3c5:	(bad)  
   14000b3c6:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b3c7:	enter  0xab6f,0x10
   14000b3cb:	sub    ebx,edi
   14000b3cd:	sbb    ch,dh
   14000b3cf:	jg     0x14000b399
   14000b3d1:	fidivr WORD PTR [rsi+0x28]
   14000b3d4:	fst    QWORD PTR [rdx+riz*8]
   14000b3d7:	fld    TBYTE PTR [rcx-0x62]
   14000b3da:	jg     0x14000b3d2
   14000b3dc:	(bad)  
   14000b3dd:	mov    esi,0xb0a7fb7a
   14000b3e2:	pop    rsp
   14000b3e3:	or     BYTE PTR [rbp+rbp*2+0x6d97fddb],dh
   14000b3ea:	xchg   edi,eax
   14000b3eb:	rex.RX
   14000b3ec:	rex.WX
   14000b3ed:	rex.RX sahf 
   14000b3ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b3f0:	jns    0x14000b3fe
   14000b3f2:	in     eax,dx
   14000b3f3:	rex.RXB cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b3f5:	js     0x14000b3a0
   14000b3f7:	stc    
   14000b3f8:	rcr    ebp,cl
   14000b3fa:	loopne 0x14000b39a
   14000b3fc:	xchg   esi,eax
   14000b3fd:	or     DWORD PTR [rbx+0x49],esi
   14000b400:	push   0x1bd713d4
   14000b405:	pop    rbp
   14000b406:	addr32 (bad) 
   14000b408:	cmp    edi,ecx
   14000b40a:	mov    esp,0x79e65ac
   14000b40f:	rcl    bh,1
   14000b411:	sbb    al,0x24
   14000b413:	jno    0x14000b3cb
   14000b415:	in     al,0xef
   14000b417:	jrcxz  0x14000b491
   14000b419:	add    eax,0x787f25a3
   14000b41e:	mov    esp,0x9d9ae4af
   14000b423:	stos   BYTE PTR es:[edi],al
   14000b425:	in     al,0x77
   14000b427:	fist   DWORD PTR [rdx+0x5e]
   14000b42a:	repnz repz mov edx,0x67def243
   14000b431:	hlt    
   14000b432:	(bad)  
   14000b433:	sub    esp,DWORD PTR [rdx]
   14000b435:	test   DWORD PTR [rcx+0x6a],edx
   14000b438:	(bad)  
   14000b439:	outs   dx,DWORD PTR ds:[rsi]
   14000b43a:	pop    rdi
   14000b43b:	(bad)  
   14000b43c:	(bad)  
   14000b43d:	ss (bad) 
   14000b43f:	lock ret 0x4ff3
   14000b443:	loop   0x14000b41e
   14000b445:	addr32 ds xor ebp,0x6ad58d7a
   14000b44d:	test   ebx,edx
   14000b44f:	rcl    DWORD PTR [rbx-0x54],cl
   14000b452:	push   rsi
   14000b453:	sub    ebp,DWORD PTR [rdi+rdx*8+0x5bb76c6b]
   14000b45a:	rex.WXB stos BYTE PTR es:[rdi],al
   14000b45c:	scas   eax,DWORD PTR es:[rdi]
   14000b45d:	xor    DWORD PTR [rbp+rsi*1-0x45],eax
   14000b461:	mov    fs,WORD PTR [rsi-0x2f7bdf97]
   14000b467:	push   QWORD PTR [rbx-0x26]
   14000b46a:	popf   
   14000b46b:	or     ecx,0xffffffab
   14000b46e:	add    BYTE PTR [rbp-0x1e],bl
   14000b471:	sbb    eax,0x2487f78c
   14000b476:	mov    edi,0x1f7ea615
   14000b47b:	(bad)  
   14000b47c:	adc    bl,BYTE PTR [rdi-0x46]
   14000b47f:	in     al,0x77
   14000b481:	jmp    0x14000b411
   14000b483:	retf   
   14000b484:	sti    
   14000b485:	rcl    DWORD PTR [rdx-0x100dd981],1
   14000b48b:	jb     0x14000b4d4
   14000b48d:	(bad)  
   14000b48f:	clc    
   14000b490:	rex.WB jae 0x14000b493
   14000b493:	jp     0x14000b4be
   14000b495:	push   rax
   14000b496:	movabs al,ds:0xb162c0b162c1a69
   14000b49f:	sub    QWORD PTR [rip+0xffffffff81b4a779],rsi        # 0xc1b55c1f
   14000b4a6:	xchg   esi,eax
   14000b4a7:	pop    rcx
   14000b4a8:	jp     0x14000b486
   14000b4aa:	rex.WRXB adc QWORD PTR [r9-0x3a63b7fd],r11
   14000b4b1:	adc    BYTE PTR [rsi-0x6f6a2872],bh
   14000b4b7:	sub    bh,cl
   14000b4b9:	add    DWORD PTR [rdx+rcx*8-0xf],ebx
   14000b4bd:	inc    cl
   14000b4bf:	rex.WX jle 0x14000b461
   14000b4c2:	ror    DWORD PTR [rax+0x40],1
   14000b4c5:	push   0xffffffffcb8aba2f
   14000b4ca:	sub    DWORD PTR [rdi-0x12],esp
   14000b4cd:	xor    al,0xa5
   14000b4cf:	ja     0x14000b4ce
   14000b4d1:	test   edx,esp
   14000b4d3:	test   DWORD PTR [rax],edx
   14000b4d5:	(bad)  
   14000b4d6:	test   al,0x47
   14000b4d8:	rex.RXB
   14000b4d9:	rex.RXB fimul DWORD PTR [r8]
   14000b4dc:	xchg   esp,eax
   14000b4dd:	test   al,0x6b
   14000b4df:	mov    cl,0x58
   14000b4e1:	(bad)  
   14000b4e2:	mov    ecx,0x58b1625c
   14000b4e7:	push   0x2e7a52a3
   14000b4ec:	and    BYTE PTR [rsi+0x24e47013],dh
   14000b4f2:	and    dl,ah
   14000b4f4:	mov    al,BYTE PTR [rax]
   14000b4f6:	or     BYTE PTR [rdi],cl
   14000b4f8:	adc    eax,0x594f38ec
   14000b4fd:	shl    DWORD PTR [rdi+rdi*2],cl
   14000b500:	(bad)  
   14000b501:	(bad)  
   14000b502:	in     al,0xf5
   14000b504:	cmp    QWORD PTR [r14+0x3b],rbp
   14000b508:	jns    0x14000b4c7
   14000b50a:	sti    
   14000b50b:	xchg   ebp,eax
   14000b50c:	cld    
   14000b50d:	cmp    al,0xac
   14000b50f:	sti    
   14000b510:	lock sbb DWORD PTR [rip+0x2b6f97f],edi        # 0x142b7ae96
   14000b517:	rex.WX pop rcx
   14000b519:	add    eax,0x3e6398a0
   14000b51e:	movabs al,ds:0xa5fde506195d9a44
   14000b527:	xchg   esp,eax
   14000b528:	mov    eax,0x960ae572
   14000b52d:	retf   
   14000b52e:	and    eax,0x5c1db6da
   14000b533:	imul   r8,QWORD PTR ds:[rdi+0x554fe92],0x201574ec
   14000b53f:	rex.RXB and r11d,DWORD PTR [r14-0x1a]
   14000b543:	and    eax,0xdf9271be
   14000b548:	fcomip st,st(6)
   14000b54a:	popf   
   14000b54b:	sub    eax,0xfe4a0df1
   14000b550:	sar    BYTE PTR [rcx-0x6ca33fb8],0x80
   14000b557:	jae    0x14000b56c
   14000b559:	jg     0x14000b583
   14000b55b:	jle    0x14000b5a9
   14000b55d:	pop    rsi
   14000b55e:	rex.RB shl BYTE PTR [r14-0x6b13d917],cl
   14000b565:	xor    DWORD PTR [rax+0x29],ecx
   14000b568:	(bad)  
   14000b569:	mov    ch,0x1e
   14000b56b:	push   rbp
   14000b56c:	mov    dh,0x6f
   14000b56e:	cs loopne 0x14000b591
   14000b571:	push   rsi
   14000b572:	add    edx,ebp
   14000b574:	adc    bl,BYTE PTR [rdi+0x69cf76dd]
   14000b57a:	fcomi  st,st(7)
   14000b57c:	adc    bl,BYTE PTR [rdi-0x76]
   14000b57f:	push   rcx
   14000b580:	sub    ecx,DWORD PTR [rdx+rdx*2-0x22dac122]
   14000b587:	pushf  
   14000b588:	mov    ah,BYTE PTR [rax]
   14000b58a:	out    0xc9,al
   14000b58c:	push   rbp
   14000b58d:	jl     0x14000b562
   14000b58f:	xor    al,0x49
   14000b591:	in     al,0x9f
   14000b593:	(bad)  
   14000b594:	and    dh,0x9a
   14000b597:	(bad)  
   14000b598:	mov    BYTE PTR [rcx+rdx*1],bh
   14000b59b:	sub    BYTE PTR [rdi+0x27],ah
   14000b59e:	and    DWORD PTR [rip+0xfffffffffc90677f],0xffffffdd        # 0x13c911d24
   14000b5a5:	xlat   BYTE PTR ds:[rbx]
   14000b5a6:	nop
   14000b5a7:	in     al,0xcf
   14000b5a9:	and    al,0xff
   14000b5ab:	add    BYTE PTR [rcx],al
   14000b5ad:	jns    0x14000b5ea
   14000b5af:	sti    
   14000b5b0:	lock xor DWORD PTR [rdx+0x58d39e1f],edx
   14000b5b7:	mov    bh,ah
   14000b5b9:	and    esp,DWORD PTR [rdi+rdi*2]
   14000b5bc:	lods   al,BYTE PTR ds:[rsi]
   14000b5bd:	cld    
   14000b5be:	xchg   edx,eax
   14000b5bf:	cmp    BYTE PTR [rcx+rbp*4],al
   14000b5c2:	(bad)  
   14000b5c3:	and    eax,0x6f0c653e
   14000b5c8:	iret   
   14000b5c9:	add    ebp,DWORD PTR [rax-0x36c32f31]
   14000b5cf:	sar    ah,1
   14000b5d1:	rex.WB (bad) 
   14000b5d3:	rex.WR dec QWORD PTR [rsi+0x26]
   14000b5d7:	add    DWORD PTR [rcx+0x2f],esp
   14000b5da:	pop    rax
   14000b5db:	xchg   BYTE PTR [rax],dh
   14000b5dd:	jbe    0x14000b5e4
   14000b5df:	add    BYTE PTR [rax],ch
   14000b5e1:	and    bh,cl
   14000b5e3:	std    
   14000b5e4:	popf   
   14000b5e5:	fst    st(4)
   14000b5e7:	xor    ebx,ecx
   14000b5e9:	adc    bl,bh
   14000b5eb:	in     al,dx
   14000b5ec:	pmaxsw mm4,mm0
   14000b5ef:	jne    0x14000b5ec
   14000b5f1:	and    al,0x7f
   14000b5f3:	not    DWORD PTR [rcx]
   14000b5f5:	or     DWORD PTR [rbx],ebx
   14000b5f7:	xchg   esp,eax
   14000b5f8:	cld    
   14000b5f9:	xor    ebx,0x94bb1233
   14000b5ff:	cli    
   14000b600:	sub    DWORD PTR [rcx-0xa],ebp
   14000b603:	xor    DWORD PTR [rcx+0x58],eax
   14000b606:	shl    bl,cl
   14000b608:	(bad)  
   14000b609:	(bad)  
   14000b60a:	jg     0x14000b5aa
   14000b60c:	jno    0x14000b616
   14000b60e:	sbb    eax,DWORD PTR [rax]
   14000b610:	sub    DWORD PTR [rsi+rdx*4-0x5b],eax
   14000b614:	cdq    
   14000b615:	push   rbx
   14000b616:	bnd jnp 0x14000b60b
   14000b619:	xchg   esp,eax
   14000b61a:	xchg   ebx,eax
   14000b61b:	cld    
   14000b61c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b61d:	out    dx,al
   14000b61e:	nop
   14000b61f:	in     al,0x37
   14000b621:	(bad)  
   14000b622:	mov    esi,0x30cfbef1
   14000b627:	int    0xf8
   14000b629:	loopne 0x14000b5b9
   14000b62b:	sub    al,0xc9
   14000b62d:	fbld   TBYTE PTR [rbp-0x21e0d1e5]
   14000b633:	or     eax,eax
   14000b635:	sar    BYTE PTR [rax-0x3ab05aa9],1
   14000b63b:	gs sahf 
   14000b63d:	(bad)  
   14000b63e:	cwde   
   14000b63f:	push   rdx
   14000b640:	data16 rex.WB
   14000b642:	repnz (bad) 
   14000b644:	push   rbp
   14000b645:	add    eax,0x1a0a1e65
   14000b64a:	jmp    0x14000b5e0
   14000b64c:	adc    DWORD PTR [rdi-0x21d01d91],ebp
   14000b652:	js     0x14000b6d3
   14000b654:	jg     0x14000b5e8
   14000b656:	fisttp WORD PTR [rip+0xffffffffbdf9231b]        # 0xfdf9d977
   14000b65c:	(bad)  
   14000b65d:	and    eax,0xbda3aa01
   14000b662:	repz (bad) 
   14000b664:	cmp    ecx,ecx
   14000b666:	imul   ecx,DWORD PTR [rbx-0x5c],0x10a7392b
   14000b66d:	retf   0xf4f7
   14000b670:	ror    DWORD PTR [rdi+0x67],cl
   14000b673:	xchg   edi,eax
   14000b674:	mov    ebp,0x7a50a30b
   14000b679:	xor    eax,0xa22286
   14000b67e:	rex.RX
   14000b67f:	rex.WR add r8b,BYTE PTR [rdx]
   14000b682:	leave  
   14000b683:	in     al,0x2f
   14000b685:	and    bh,cl
   14000b687:	lods   eax,DWORD PTR ds:[rsi]
   14000b688:	xor    bh,ch
   14000b68a:	jrcxz  0x14000b709
   14000b68c:	jmp    0x17f92c1b7
   14000b691:	and    cl,bh
   14000b693:	div    DWORD PTR [rdx-0x6d9683c]
   14000b699:	rex.XB in eax,0xa7
   14000b69c:	rex.WB (bad) 
   14000b69e:	bnd jae 0x14000b6a1
   14000b6a1:	xchg   DWORD PTR [rsi-0x21939fe1],esi
   14000b6a7:	sub    ebp,esi
   14000b6a9:	(bad)  
   14000b6aa:	xor    eax,0x93c948fc
   14000b6af:	pop    rbx
   14000b6b0:	rex.X adc DWORD PTR [rdi],0xe6d5f483
   14000b6b7:	js     0x14000b72f
   14000b6b9:	cmp    ecx,DWORD PTR [rsi-0x5101e03c]
   14000b6bf:	ds push rbx
   14000b6c1:	outs   dx,BYTE PTR ds:[rsi]
   14000b6c2:	mov    al,0x6d
   14000b6c4:	cmp    ah,BYTE PTR [rcx-0x22]
   14000b6c7:	adc    bl,bh
   14000b6c9:	cmp    al,0x92
   14000b6cb:	lahf   
   14000b6cc:	(bad)  
   14000b6cd:	sbb    DWORD PTR [rax],ebp
   14000b6cf:	(bad)  
   14000b6d0:	enter  0x21f,0xf8
   14000b6d4:	sahf   
   14000b6d5:	movabs al,ds:0xaf1e9410ad5d8a9b
   14000b6de:	rex.WRXB leave 
   14000b6e0:	mov    edi,0x2a45e1eb
   14000b6e5:	or     ch,BYTE PTR [rdx+rax*1+0x5fef1e14]
   14000b6ec:	xor    cl,cl
   14000b6ee:	(bad)  
   14000b6ef:	fist   DWORD PTR [rdx]
   14000b6f1:	pop    rdi
   14000b6f2:	push   rsp
   14000b6f3:	repnz sti 
   14000b6f5:	enter  0x423f,0xf2
   14000b6f9:	or     edi,edi
   14000b6fb:	jmp    0x12249f8ce
   14000b700:	out    dx,eax
   14000b701:	push   0xffffffffffffffc8
   14000b703:	xor    BYTE PTR [rsi+0x66],al
   14000b706:	(bad)  
   14000b707:	sub    eax,0xb19e6c77
   14000b70c:	in     eax,0xe5
   14000b70e:	(bad)  
   14000b70f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b710:	out    0x1,eax
   14000b712:	in     al,0x49
   14000b714:	(bad)  
   14000b715:	out    dx,al
   14000b716:	imul   ecx,DWORD PTR [rax-0xe],0x67
   14000b71a:	xchg   edx,eax
   14000b71b:	jg     0x14000b69d
   14000b71d:	cmp    BYTE PTR [rbp+rbx*4-0x36e70783],0xf
   14000b725:	(bad)  
   14000b726:	lea    ebx,[rbx+riz*1]
   14000b729:	stc    
   14000b72a:	adc    DWORD PTR [rsi],edi
   14000b72c:	outs   dx,DWORD PTR ds:[rsi]
   14000b72d:	(bad)  [rbx+0x7c]
   14000b730:	sub    DWORD PTR [rsi-0x73],eax
   14000b733:	xchg   ebp,eax
   14000b734:	iret   
   14000b735:	fist   DWORD PTR [rcx-0x90bbc76]
   14000b73b:	sub    DWORD PTR [rcx+0x76],ebp
   14000b73e:	in     eax,dx
   14000b73f:	cmc    
   14000b740:	out    0x88,eax
   14000b742:	sub    ecx,DWORD PTR [rcx+0x7e]
   14000b745:	movabs al,ds:0xcfabb1cc3a8113c8
   14000b74e:	(bad)  
   14000b750:	rex.WB js 0x14000b6f9
   14000b753:	in     al,0x37
   14000b755:	in     eax,dx
   14000b756:	and    al,0x61
   14000b758:	ss stc 
   14000b75a:	idiv   ebp
   14000b75c:	ins    BYTE PTR es:[rdi],dx
   14000b75d:	dec    BYTE PTR [rax]
   14000b75f:	stc    
   14000b760:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b761:	sub    eax,0x420c45f1
   14000b766:	(bad)  
   14000b767:	rex.WX xchg rdx,rax
   14000b769:	mov    ch,0x64
   14000b76b:	mov    edx,0xd6a4c839
   14000b770:	out    0xf7,eax
   14000b772:	cmp    DWORD PTR [rsi+0x10de5a9f],esp
   14000b778:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b779:	(bad)  
   14000b77a:	lldt   WORD PTR [rbx]
   14000b77d:	and    eax,0x394f27bf
   14000b782:	leave  
   14000b783:	outs   dx,DWORD PTR ds:[rsi]
   14000b784:	(bad)  
   14000b785:	sahf   
   14000b786:	sti    
   14000b787:	rcr    DWORD PTR [rip+0x2453dd6e],0xf9        # 0x1645494fc
   14000b78e:	fcom   QWORD PTR [rdx-0x5ff8c021]
   14000b794:	ds push rbx
   14000b796:	out    0x0,al
   14000b798:	jl     0x14000b745
   14000b79a:	add    bl,bh
   14000b79c:	xor    cl,BYTE PTR [rsi]
   14000b79e:	movsxd ecx,edx
   14000b7a0:	lock test DWORD PTR [rbx+0x371a0055],ebp
   14000b7a7:	xchg   edi,eax
   14000b7a8:	(bad)  
   14000b7a9:	sbb    DWORD PTR [rbx-0x53334ed1],edx
   14000b7af:	push   rcx
   14000b7b0:	pop    rbp
   14000b7b1:	je     0x14000b7c8
   14000b7b3:	and    BYTE PTR [rbp+0x1f1d8f41],ah
   14000b7b9:	loope  0x14000b827
   14000b7bb:	mov    ebp,0xd97d56f2
   14000b7c0:	(bad)  
   14000b7c1:	sti    
   14000b7c2:	(bad)  
   14000b7c3:	jp     0x14000b74e
   14000b7c5:	(bad)  
   14000b7c6:	rex.X (bad) 
   14000b7c8:	sub    eax,ebx
   14000b7ca:	xlat   BYTE PTR ds:[rbx]
   14000b7cb:	jle    0x14000b74d
   14000b7cd:	sub    DWORD PTR [rbp+0x4c],esp
   14000b7d0:	cmc    
   14000b7d1:	mov    dl,0xfb
   14000b7d3:	pop    rax
   14000b7d4:	jne    0x14000b76e
   14000b7d6:	sbb    QWORD PTR [r14+r11*1+0x2],rcx
   14000b7db:	pop    rsp
   14000b7dc:	cmp    eax,0x3800425a
   14000b7e1:	(bad)  [rsp+rsi*2+0x4fc91158]
   14000b7e8:	repnz clc 
   14000b7ea:	mov    ebp,0x9263a9b8
   14000b7ef:	in     al,0xbf
   14000b7f1:	or     BYTE PTR [rbx+0x7c],cl
   14000b7f4:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b7f5:	and    eax,0x64594fbf
   14000b7fa:	rex
   14000b7fb:	rex.WX sbb QWORD PTR [rbp+0x33],rbx
   14000b7ff:	mul    DWORD PTR [rbp+0x1f6e952f]
   14000b805:	sbb    edi,DWORD PTR [rbp+0x4a]
   14000b808:	xchg   esp,eax
   14000b809:	(bad)  
   14000b80a:	xchg   edi,eax
   14000b80b:	rex.B (bad) 
   14000b80d:	push   0x2c
   14000b80f:	(bad)  
   14000b810:	sbb    eax,DWORD PTR [rax]
   14000b812:	sub    DWORD PTR [rcx-0x2ffa5c5d],eax
   14000b818:	sbb    al,0xe3
   14000b81a:	je     0x14000b7d1
   14000b81c:	mov    edx,0x30ee0fe0
   14000b821:	in     eax,0x6
   14000b823:	(bad)  [rsi+0x6cf0ce13]
   14000b829:	inc    cl
   14000b82b:	jae    0x14000b7c2
   14000b82d:	mov    edi,0x706497c4
   14000b832:	xor    dh,BYTE PTR [rax]
   14000b834:	xchg   edi,eax
   14000b835:	(bad)  
   14000b836:	fist   WORD PTR [rdi]
   14000b838:	stc    
   14000b839:	push   rdx
   14000b83a:	jmp    0x14000b7ca
   14000b83c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b83d:	fwait
   14000b83e:	adc    DWORD PTR [r12+r10*4+0x6032ef3b],esp
   14000b846:	and    ah,BYTE PTR [rdi+rcx*2-0x68]
   14000b84a:	movabs ds:0x9d59382b95cd02c5,eax
   14000b853:	cdq    
   14000b854:	enter  0x2e0b,0xf9
   14000b858:	div    DWORD PTR [rbx-0x1b40c83c]
   14000b85e:	(bad)  
   14000b85f:	sti    
   14000b860:	pop    rax
   14000b861:	jo     0x14000b898
   14000b863:	sub    DWORD PTR [rsi],edx
   14000b865:	mov    ecx,edi
   14000b867:	rcr    esp,0x1b
   14000b86a:	or     DWORD PTR [rdx+0x18],0x80932995
   14000b871:	push   rbx
   14000b872:	fidiv  DWORD PTR [rsi-0x7afc0df5]
   14000b878:	add    cl,BYTE PTR ss:[rcx]
   14000b87b:	fscale 
   14000b87d:	pop    rcx
   14000b87e:	xor    al,0x2
   14000b880:	xlat   BYTE PTR ds:[rbx]
   14000b881:	mov    gs,WORD PTR [rdi-0x7d428b20]
   14000b887:	fs (bad) 
   14000b889:	xor    DWORD PTR [rdi-0xe],edx
   14000b88c:	div    DWORD PTR [rcx-0x37]
   14000b88f:	jns    0x14000b8b3
   14000b891:	in     al,0xdf
   14000b893:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b894:	in     al,0x87
   14000b896:	xchg   DWORD PTR [rcx+rbp*1+0x7e57df92],ebx
   14000b89d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b89e:	mov    esp,0x3dbf25cf
   14000b8a3:	icebp  
   14000b8a4:	(bad)  
   14000b8a5:	(bad)  
   14000b8a6:	add    al,0xb4
   14000b8a8:	push   rcx
   14000b8a9:	jp     0x14000b851
   14000b8ab:	mov    ebx,0x43529a54
   14000b8b0:	test   ebx,ecx
   14000b8b2:	rex.WR jle 0x14000b855
   14000b8b5:	vfnmaddsd xmm14,xmm7,xmm10,xmm10
   14000b8bb:	es sub eax,0x8ed7069a
   14000b8c1:	(bad)  
   14000b8c2:	jno    0x14000b87a
   14000b8c4:	pop    rcx
   14000b8c5:	movabs ds:0x7e480bf78d245b6d,eax
   14000b8ce:	(bad)  
   14000b8cf:	enter  0xc2d3,0x21
   14000b8d3:	jp     0x14000b94e
   14000b8d5:	repnz (bad) 
   14000b8d8:	loopne 0x14000b91b
   14000b8da:	(bad)  
   14000b8db:	out    dx,al
   14000b8dc:	rex.WX
   14000b8dd:	repnz sti 
   14000b8df:	repnz (bad) 
   14000b8e1:	rex.X
   14000b8e2:	rex.WX cqo 
   14000b8e4:	je     0x14000b915
   14000b8e6:	sbb    BYTE PTR [rbp-0x6519eb59],0xc4
   14000b8ed:	jnp    0x14000b8e9
   14000b8ef:	jmp    0x14f3bb09b
   14000b8f4:	xor    edi,esi
   14000b8f6:	add    al,0xa4
   14000b8f8:	pextrw eax,(bad),0xc5
   14000b8fa:	xchg   BYTE PTR [rax],al
   14000b8fc:	add    BYTE PTR [rdi+rdx*8-0x251fbde9],dh
   14000b903:	rcl    DWORD PTR [rcx],1
   14000b905:	push   rsi
   14000b906:	fwait
   14000b907:	or     eax,0x6786ed56
   14000b90c:	sub    BYTE PTR [rsi],ah
   14000b90e:	stc    
   14000b90f:	mov    ebx,0xbc7d5df4
   14000b914:	or     al,0x53
   14000b916:	wbinvd 
   14000b918:	jae    0x14000b8e0
   14000b91a:	sti    
   14000b91b:	ds ret 
   14000b91d:	je     0x14000b958
   14000b91f:	xchg   edi,eax
   14000b920:	clc    
   14000b921:	rex.X push 0xffffffffffffffc3
   14000b924:	push   0x46
   14000b926:	adc    ah,dh
   14000b928:	nop
   14000b929:	stc    
   14000b92a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000b92b:	retf   0x85da
   14000b92e:	addr32 mov ebp,0xa07e44c
   14000b934:	ins    DWORD PTR es:[rdi],dx
   14000b935:	add    al,0x92
   14000b937:	rcl    BYTE PTR [rsi-0x5c10222b],cl
   14000b93d:	movabs ds:0x1c86bd7ce0569a05,eax
   14000b946:	sbb    al,0x7f
   14000b948:	(bad)  
   14000b949:	clc    
   14000b94a:	scas   al,BYTE PTR es:[rdi]
   14000b94b:	ds stos DWORD PTR es:[rdi],eax
   14000b94d:	out    dx,al
   14000b94e:	mov    ebp,0x927df78c
   14000b953:	lahf   
   14000b954:	test   DWORD PTR [rdi-0x4150206d],esp
   14000b95a:	loop   0x14000b8fc
   14000b95c:	jae    0x14000b95e
   14000b95e:	idiv   BYTE PTR [rbp-0x2b458a00]
   14000b964:	repnz rex.WX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b967:	sub    esi,DWORD PTR [rcx-0x23c369bc]
   14000b96d:	sbb    eax,0x2e504278
   14000b972:	mov    dl,BYTE PTR [rbx]
   14000b974:	(bad)  
   14000b975:	mov    bl,0x9
   14000b977:	rol    edi,1
   14000b979:	(bad)  
   14000b97a:	(bad)  
   14000b97b:	(bad)  
   14000b97c:	(bad)  
   14000b97d:	(bad)  
   14000b97e:	in     al,0x54
   14000b980:	adc    eax,0xd5c1a234
   14000b985:	jrcxz  0x14000b9ea
   14000b987:	lods   al,BYTE PTR ds:[rsi]
   14000b988:	mov    dh,0x6a
   14000b98a:	rex.W add BYTE PTR [rdx+0x2eb8b758],bl
   14000b991:	icebp  
   14000b992:	test   ebx,eax
   14000b994:	add    BYTE PTR [rbp+rdx*4+0x63],0xe5
   14000b999:	int    0x21
   14000b99b:	mov    edi,0x752801bd
   14000b9a0:	(bad)  
   14000b9a1:	and    dh,0x2f
   14000b9a4:	cdq    
   14000b9a5:	jbe    0x14000b93e
   14000b9a7:	jrcxz  0x14000b98d
   14000b9a9:	mov    ecx,0xdcc096d2
   14000b9ae:	retf   0xac20
   14000b9b1:	add    BYTE PTR [rdx+0x3a40d744],bl
   14000b9b7:	mov    ecx,0x252708b4
   14000b9bc:	xor    al,0xc1
   14000b9be:	scas   al,BYTE PTR es:[rdi]
   14000b9bf:	sub    al,0x97
   14000b9c1:	fdiv   DWORD PTR [rsi+0x2ddbd62d]
   14000b9c7:	cdq    
   14000b9c8:	and    BYTE PTR [rax+rsi*4],bh
   14000b9cb:	and    eax,0x244920be
   14000b9d0:	rex.WRXB adc r10b,BYTE PTR [r9+r12*1+0x63]
   14000b9d5:	and    eax,0x5773a93f
   14000b9da:	xchg   edx,eax
   14000b9db:	fist   WORD PTR [rdi+0x66]
   14000b9de:	es (bad) 
   14000b9e0:	ins    DWORD PTR es:[rdi],dx
   14000b9e1:	(bad)  
   14000b9e2:	(bad)  
   14000b9e3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000b9e4:	mov    WORD PTR [rsp+rsi*2-0x1b582c9d],ds
   14000b9eb:	fwait
   14000b9ec:	stos   BYTE PTR es:[rdi],al
   14000b9ed:	sub    dh,dh
   14000b9ef:	mov    esi,0xc9e8000f
   14000b9f4:	rex.WRXB out 0x2,eax
   14000b9f7:	(bad)  
   14000b9f8:	push   rdi
   14000b9f9:	and    DWORD PTR [rcx+0x3b],eax
   14000b9fc:	fsub   DWORD PTR [rdx+0x66e2787f]
   14000ba02:	mov    ebx,0xd6dda6c1
   14000ba07:	pop    rbp
   14000ba08:	jge    0x14000ba2e
   14000ba0a:	int    0xdc
   14000ba0c:	in     al,0x8f
   14000ba0e:	or     eax,0xd760c6a3
   14000ba13:	xor    bh,BYTE PTR [rdi]
   14000ba15:	and    eax,0x73bdaecd
   14000ba1a:	sub    cl,BYTE PTR [rdx+0xf]
   14000ba1d:	sbb    esp,edx
   14000ba1f:	jns    0x14000ba14
   14000ba21:	retf   0x602b
   14000ba24:	add    BYTE PTR [rdx+0x3d],bl
   14000ba27:	mov    esi,0xc2efc437
   14000ba2c:	pop    rcx
   14000ba2d:	fwait
   14000ba2e:	rex.W subps xmm5,XMMWORD PTR [rsi]
   14000ba32:	(bad)  
   14000ba33:	pop    rax
   14000ba34:	sub    al,0x1a
   14000ba36:	lods   al,BYTE PTR ds:[rsi]
   14000ba37:	mov    bh,0x1b
   14000ba39:	jae    0x14000ba4b
   14000ba3b:	(bad)  
   14000ba3c:	in     eax,dx
   14000ba3d:	frndint 
   14000ba3f:	mov    BYTE PTR [rcx-0x7885aac1],dl
   14000ba45:	in     eax,0x7d
   14000ba47:	shl    bl,cl
   14000ba49:	leave  
   14000ba4a:	pop    rax
   14000ba4b:	pop    rcx
   14000ba4c:	stc    
   14000ba4d:	cmc    
   14000ba4e:	pop    rdx
   14000ba4f:	fst    DWORD PTR [rbx-0x11a85160]
   14000ba55:	sub    al,al
   14000ba57:	push   rax
   14000ba58:	jns    0x14000baad
   14000ba5a:	shl    esp,cl
   14000ba5c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000ba5d:	or     esp,ecx
   14000ba5f:	test   eax,0x949a9ea7
   14000ba64:	jg     0x14000ba32
   14000ba66:	mov    edi,DWORD PTR [rbx]
   14000ba68:	loop   0x14000ba19
   14000ba6a:	(bad)  
   14000ba6b:	(bad)  
   14000ba6c:	jmp    QWORD PTR [rdx]
   14000ba6e:	adc    BYTE PTR [rbx],bl
   14000ba70:	shl    edi,cl
   14000ba72:	add    DWORD PTR [rax],edi
   14000ba74:	in     al,0x27
   14000ba76:	pop    rsi
   14000ba77:	pop    rdi
   14000ba78:	adc    DWORD PTR [rdi-0x5b],ebx
   14000ba7b:	jmp    0x17cfb5dbb
   14000ba80:	pop    rsi
   14000ba81:	sub    al,0xd1
   14000ba83:	retf   0x1b16
   14000ba86:	mov    ecx,0x1c479b05
   14000ba8b:	jrcxz  0x14000baf6
   14000ba8d:	(bad)  
   14000ba8e:	rex.W jle 0x14000ba2e
   14000ba91:	lock repnz cs icebp 
   14000ba95:	rex.RB (bad) 
   14000ba97:	retf   
   14000ba98:	stos   BYTE PTR es:[rdi],al
   14000ba99:	(bad)  
   14000ba9a:	gs (bad) 
   14000ba9c:	and    BYTE PTR [rsi-0x44f8d7ef],dh
   14000baa2:	sbb    cl,BYTE PTR [rsi]
   14000baa4:	sbb    al,0x2
   14000baa6:	xchg   BYTE PTR [rsi],dh
   14000baa8:	adc    ebp,ebp
   14000baaa:	mov    bl,0xbc
   14000baac:	and    bl,BYTE PTR [rbx-0x7f]
   14000baaf:	sti    
   14000bab0:	outs   dx,DWORD PTR ds:[rsi]
   14000bab1:	pushf  
   14000bab2:	sub    ah,al
   14000bab4:	jmp    0x14000ba81
   14000bab6:	(bad)  
   14000bab7:	scas   eax,DWORD PTR es:[rdi]
   14000bab8:	adc    dh,ch
   14000baba:	add    eax,0x63811a6b
   14000babf:	sub    al,0xd1
   14000bac1:	mov    dh,0x5b
   14000bac3:	ins    BYTE PTR es:[rdi],dx
   14000bac4:	pop    rbx
   14000bac5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bac6:	es (bad) 
   14000bac8:	rex.WXB (bad) 
   14000baca:	fimul  DWORD PTR cs:[rip+0xffffffffe6cf28bb]        # 0x126cfe38c
   14000bad1:	ffreep st(5)
   14000bad3:	js     0x14000bb14
   14000bad5:	push   rsp
   14000bad6:	ja     0x14000bae6
   14000bad8:	(bad)  
   14000bad9:	sub    al,al
   14000badb:	scas   al,BYTE PTR es:[rdi]
   14000badc:	(bad)  
   14000badd:	inc    esi
   14000badf:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bae0:	popf   
   14000bae1:	and    edi,DWORD PTR [rdi+0x4e]
   14000bae4:	jns    0x14000ba8b
   14000bae6:	lea    eax,[rax+0x29]
   14000bae9:	xchg   esp,eax
   14000baea:	jns    0x14000bb0a
   14000baec:	xor    dh,0xb4
   14000baef:	shl    ah,cl
   14000baf1:	(bad)  
   14000baf2:	mov    r11d,0xd80aa756
   14000baf8:	icebp  
   14000baf9:	or     edx,DWORD PTR [rbx]
   14000bafb:	(bad)  
   14000bafc:	rex mov edi,0xb72b615c
   14000bb02:	push   0xffffffffb09a6edb
   14000bb07:	cs icebp 
   14000bb09:	shl    eax,1
   14000bb0b:	adc    ebx,esp
   14000bb0d:	std    
   14000bb0e:	nop
   14000bb0f:	in     al,0x9f
   14000bb11:	rex.W jle 0x14000bb74
   14000bb14:	mov    edi,0xde931fc4
   14000bb19:	(bad)  
   14000bb1a:	pop    rbx
   14000bb1b:	rex.WX leave 
   14000bb1d:	push   rax
   14000bb1e:	mov    WORD PTR [rip+0x6198feb],ds        # 0x1461a4b0f
   14000bb24:	xchg   esp,eax
   14000bb25:	xor    ch,BYTE PTR [rax]
   14000bb27:	add    eax,0x93d4089e
   14000bb2c:	fsub   DWORD PTR [rdx]
   14000bb2e:	mov    bh,0xf2
   14000bb30:	cli    
   14000bb31:	(bad)  
   14000bb33:	mul    ch
   14000bb35:	jmp    0x189bf7d1c
   14000bb3a:	xor    al,0xa2
   14000bb3c:	mov    r11b,0x68
   14000bb3f:	and    cl,dl
   14000bb41:	movabs ds:0x81f24cbab6521295,al
   14000bb4a:	popf   
   14000bb4b:	mov    ?,edi
   14000bb4d:	xor    ecx,DWORD PTR [rcx+0x38]
   14000bb50:	fild   DWORD PTR [rbx-0x873b5c5]
   14000bb56:	in     eax,dx
   14000bb57:	loope  0x14000bba5
   14000bb59:	div    BYTE PTR es:[rcx]
   14000bb5c:	stc    
   14000bb5d:	push   rdi
   14000bb5e:	and    cl,BYTE PTR [rdi-0x77]
   14000bb61:	xor    dl,BYTE PTR [rdx+0x48]
   14000bb64:	(bad)  
   14000bb65:	(bad)  
   14000bb66:	(bad)  
   14000bb67:	rex.WXB xchg r15,rax
   14000bb69:	pop    rcx
   14000bb6a:	rex add DWORD PTR [rsp+rdi*4+0x7e],eax
   14000bb6f:	cmp    ah,0x12
   14000bb72:	fdiv   st(3),st
   14000bb74:	rex.WX
   14000bb75:	repnz push rdi
   14000bb77:	adc    DWORD PTR [rcx+0x40],ebx
   14000bb7a:	movabs al,ds:0xc78418da172b4011
   14000bb83:	sti    
   14000bb84:	jmp    0xf5801b1b
   14000bb89:	ret    0xbf00
   14000bb8c:	cld    
   14000bb8d:	mov    esi,0x317c4b0c
   14000bb92:	scas   eax,DWORD PTR es:[rdi]
   14000bb93:	scas   eax,DWORD PTR es:[rdi]
   14000bb94:	(bad)  
   14000bb95:	rex.WRXB fld QWORD PTR [r15]
   14000bb98:	push   rax
   14000bb99:	(bad)  
   14000bb9a:	data16 movabs al,ds:0x9ba99c4b1c28ee7d
   14000bba4:	test   esi,eax
   14000bba6:	(bad)  
   14000bba7:	cmp    edx,esi
   14000bba9:	loopne 0x14000bb4f
   14000bbab:	(bad)  
   14000bbac:	cli    
   14000bbad:	and    al,0xa0
   14000bbaf:	sbb    dh,dl
   14000bbb1:	mov    bl,0xc9
   14000bbb3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bbb4:	mov    dh,0xeb
   14000bbb6:	pop    rax
   14000bbb7:	push   rsi
   14000bbb8:	pop    rdi
   14000bbb9:	xchg   ecx,eax
   14000bbba:	movabs ds:0x52e01f12982ae6f3,al
   14000bbc3:	pop    rbp
   14000bbc4:	(bad)  
   14000bbc5:	sub    eax,0x41a0d004
   14000bbca:	and    edi,DWORD PTR [rdx]
   14000bbcc:	xor    eax,0xb8e4920
   14000bbd1:	sub    eax,0xf7e57df9
   14000bbd6:	jmp    0x15d7f0721
   14000bbdb:	sahf   
   14000bbdc:	es stc 
   14000bbde:	mov    ebp,0xc44e674f
   14000bbe3:	mov    ebx,0x95dbbeef
   14000bbe8:	cmp    bl,dh
   14000bbea:	cwde   
   14000bbeb:	jge    0x14000bb84
   14000bbed:	jrcxz  0x14000bbd5
   14000bbef:	movabs eax,ds:0x4f9bc90efc6a0055
   14000bbf8:	leave  
   14000bbf9:	pop    rbx
   14000bbfa:	sub    si,WORD PTR [rax]
   14000bbfd:	icebp  
   14000bbfe:	and    al,al
   14000bc00:	mov    al,0xd7
   14000bc02:	push   rdi
   14000bc03:	sbb    eax,DWORD PTR [rsp+rcx*2+0x13c493e7]
   14000bc0a:	cmc    
   14000bc0b:	loope  0x14000bbb1
   14000bc0d:	shr    DWORD PTR [rdx],cl
   14000bc0f:	rex.XB and DWORD PTR [r10],ebx
   14000bc12:	add    DWORD PTR [rcx+0x24252068],esp
   14000bc18:	pop    rbp
   14000bc19:	push   0x4
   14000bc1b:	xchg   ax,ax
   14000bc1d:	cld    
   14000bc1e:	cmp    al,0xac
   14000bc20:	sti    
   14000bc21:	xchg   rdi,rax
   14000bc23:	fidivr WORD PTR [rcx-0x3383206e]
   14000bc29:	sub    edi,ecx
   14000bc2b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000bc2c:	(bad)  
   14000bc2d:	add    eax,0xa825dce6
   14000bc32:	rcr    BYTE PTR [rdi],cl
   14000bc34:	(bad)  
   14000bc35:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bc36:	fst    DWORD PTR [rsp+riz*8-0x72]
   14000bc3a:	not    DWORD PTR [rbx-0x21]
   14000bc3d:	(bad)  
   14000bc3e:	xor    al,0x76
   14000bc40:	rex.WRX movabs ds:0x1d3d6ca7fd40cdc0,rax
   14000bc4a:	ds loopne 0x14000bc42
   14000bc4d:	cdq    
   14000bc4e:	div    DWORD PTR [rip+0x27b3764]        # 0x1427bf3b8
   14000bc54:	rex push rdx
   14000bc56:	mov    ebx,0xd3e9bef2
   14000bc5b:	rex.W push 0xc
   14000bc5e:	es xchg ecx,eax
   14000bc60:	jg     0x14000bc3a
   14000bc62:	add    ecx,DWORD PTR [rdi-0x6d]
   14000bc65:	cld    
   14000bc66:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bc67:	(bad)  
   14000bc68:	and    bl,BYTE PTR [rsi-0x61]
   14000bc6b:	(bad)  
   14000bc6c:	rol    edx,0xe3
   14000bc6f:	rex.XB pushf 
   14000bc71:	(bad)  
   14000bc72:	std    
   14000bc73:	sbb    DWORD PTR [rax-0x29],edx
   14000bc76:	push   0x534089e8
   14000bc7b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000bc7c:	out    dx,al
   14000bc7d:	cs leave 
   14000bc7f:	mov    edi,0xcfb3230f
   14000bc84:	rex.WB (bad) 
   14000bc86:	sbb    edx,DWORD PTR [rbx-0x50deff79]
   14000bc8c:	fild   QWORD PTR [rbp+0xb]
   14000bc8f:	ss sbb eax,0xc3ebc932
   14000bc95:	rex.WRB jrcxz 0x14000bcb3
   14000bc98:	out    dx,eax
   14000bc99:	repz addr32 or eax,0xb2546800
   14000bca0:	(bad)  
   14000bca1:	and    al,0x95
   14000bca3:	xchg   edx,eax
   14000bca4:	cld    
   14000bca5:	jge    0x14000bc61
   14000bca7:	je     0x14000bc9b
   14000bca9:	out    dx,eax
   14000bcaa:	rex.RX
   14000bcab:	repnz mov bl,0x9f
   14000bcae:	test   DWORD PTR [rdi+rdi*8],esp
   14000bcb1:	and    ebp,ecx
   14000bcb3:	add    esp,ebp
   14000bcb5:	xchg   edx,eax
   14000bcb6:	cld    
   14000bcb7:	movsxd ecx,DWORD PTR [rcx-0x37906bcb]
   14000bcbd:	jae    0x14000bc4e
   14000bcbf:	test   eax,0x197bcc77
   14000bcc4:	xchg   DWORD PTR [rax+0x64],edx
   14000bcc7:	adc    dl,BYTE PTR [rax+0x3f7309f6]
   14000bccd:	adc    ah,0xc4
   14000bcd0:	out    0x5e,eax
   14000bcd2:	fistp  QWORD PTR [rax+0x42]
   14000bcd5:	jnp    0x14000bce6
   14000bcd7:	add    DWORD PTR [rdi-0x26e96be4],ebx
   14000bcdd:	add    BYTE PTR [rcx-0x941122a],cl
   14000bce3:	cmp    eax,0x7a008dfe
   14000bce8:	xor    eax,0x90c663a2
   14000bced:	jg     0x14000bc73
   14000bcef:	in     al,0xf
   14000bcf1:	xchg   esi,eax
   14000bcf2:	out    dx,eax
   14000bcf3:	sbb    edx,DWORD PTR [rdx-0x50]
   14000bcf6:	lock adc ebx,esp
   14000bcf9:	std    
   14000bcfa:	test   al,0xe4
   14000bcfc:	mov    bh,0xca
   14000bcfe:	test   spl,r15b
   14000bd01:	jrcxz  0x14000bc97
   14000bd03:	movsxd edx,DWORD PTR [rdi-0x3d]
   14000bd06:	(bad)  
   14000bd07:	(bad)  
   14000bd08:	repnz rex.WX (bad) 
   14000bd0b:	stos   BYTE PTR es:[rdi],al
   14000bd0c:	push   rdi
   14000bd0d:	rex.WRB pop r13
   14000bd0f:	adc    eax,0x3ec7fc00
   14000bd14:	(bad)  
   14000bd15:	fild   DWORD PTR [rdi-0x69]
   14000bd18:	sbb    esp,DWORD PTR [rbx-0x2ce8e53]
   14000bd1e:	and    DWORD PTR [rax],0x5e7df90e
   14000bd24:	(bad)  
   14000bd25:	xor    BYTE PTR [rip+0x3ebdb75e],0x23        # 0x17ebe748a
   14000bd2c:	mov    edi,0xbe1dc1e7
   14000bd31:	icebp  
   14000bd32:	mov    esi,0x9012b87b
   14000bd37:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bd38:	sbb    al,0xad
   14000bd3a:	xor    BYTE PTR [rdx-0x3db96638],dl
   14000bd40:	rex.XB pop r12
   14000bd42:	loop   0x14000bccf
   14000bd44:	rex.WX inc BYTE PTR [rax-0x48]
   14000bd48:	imul   ebx,DWORD PTR [rbx+0x3e],0xf13a2e01
   14000bd4f:	sub    DWORD PTR [rbp+rax*2+0x33],ebp
   14000bd53:	xchg   edi,eax
   14000bd54:	push   rdi
   14000bd55:	(bad)  
   14000bd56:	and    eax,0xc20a1cfb
   14000bd5b:	xchg   DWORD PTR [rdx],esp
   14000bd5d:	out    dx,eax
   14000bd5e:	add    eax,0x115c92d0
   14000bd63:	xchg   edi,eax
   14000bd64:	jns    0x14000bde3
   14000bd66:	rex xchg ecx,eax
   14000bd68:	fcomip st,st(1)
   14000bd6a:	cli    
   14000bd6b:	cmp    BYTE PTR [rsi-0x2f6cb777],0xf6
   14000bd72:	rex.W mov dl,0x65
   14000bd75:	sub    ecx,DWORD PTR [rdx+rbp*1]
   14000bd78:	(bad)  
   14000bd79:	jne    0x14000bd54
   14000bd7b:	loopne 0x14000bda0
   14000bd7d:	rex.XB xchg r12d,eax
   14000bd7f:	clc    
   14000bd80:	sub    BYTE PTR [rcx],ah
   14000bd82:	stc    
   14000bd83:	mov    ebx,0xfc97bb74
   14000bd88:	push   rsi
   14000bd89:	js     0x14000bd5f
   14000bd8b:	jmp    0x14000bd48
   14000bd8d:	loope  0x14000bdec
   14000bd8f:	sbb    eax,esi
   14000bd91:	jne    0x14000bdb1
   14000bd93:	(bad)  
   14000bd94:	jmp    0x16c40e86d
   14000bd99:	int    0x45
   14000bd9b:	ret    
   14000bd9c:	ror    DWORD PTR [rdi+0x3f],cl
   14000bd9f:	cmp    eax,0xe943fceb
   14000bda4:	icebp  
   14000bda5:	jge    0x14000bdc7
   14000bda7:	pop    rdi
   14000bda8:	xchg   esi,eax
   14000bda9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bdaa:	mov    ebx,DWORD PTR [rcx]
   14000bdac:	add    BYTE PTR [rcx-0x37bff8cc],dl
   14000bdb2:	(bad)  
   14000bdb3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000bdb4:	fst    QWORD PTR [rcx+0x7d]
   14000bdb7:	pop    rsi
   14000bdb8:	pop    rdi
   14000bdb9:	in     eax,0x92
   14000bdbb:	scas   al,BYTE PTR es:[rdi]
   14000bdbc:	(bad)  
   14000bdbd:	adc    al,0x56
   14000bdbf:	(bad)  
   14000bdc1:	ret    
   14000bdc2:	and    al,0x0
   14000bdc4:	adc    DWORD PTR [rax],esp
   14000bdc6:	mov    edi,0x26cfde3d
   14000bdcb:	mov    edi,0xd8ee1fa0
   14000bdd0:	ds xchg edi,eax
   14000bdd2:	add    BYTE PTR [rdi],0xbb
   14000bdd5:	(bad)  
   14000bdd6:	(bad)  
   14000bdd7:	and    bh,bh
   14000bdd9:	scas   al,BYTE PTR es:[rdi]
   14000bdda:	out    0x0,eax
   14000bddc:	(bad)  
   14000bddd:	sbb    DWORD PTR [rbx-0x3a],edx
   14000bde0:	out    0x40,eax
   14000bde2:	cld    
   14000bde3:	cmp    al,0x1c
   14000bde5:	(bad)  
   14000bde6:	adc    ch,BYTE PTR [rax]
   14000bde8:	mov    dl,0x13
   14000bdea:	shl    cl,1
   14000bdec:	sub    bh,BYTE PTR [rcx-0x68b5b7df]
   14000bdf2:	or     al,0xd2
   14000bdf4:	mov    ecx,0x7e402ff3
   14000bdf9:	sbb    ah,BYTE PTR [rdi+rsi*2+0x5c]
   14000bdfd:	fbld   TBYTE PTR [rdi+rbx*4-0x30]
   14000be01:	xor    eax,0x4a27f298
   14000be06:	(bad)  
   14000be07:	adc    cl,bh
   14000be09:	imul   DWORD PTR [rcx]
   14000be0b:	stc    
   14000be0c:	jne    0x14000bdde
   14000be0e:	mov    fs,WORD PTR [rdi+rdi*4]
   14000be11:	pcmpeqb mm2,QWORD PTR [rip+0xffffffff9f10b2e0]        # 0xdf1170f8
   14000be18:	ret    0xe867
   14000be1b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000be1c:	outs   dx,BYTE PTR ds:[rsi]
   14000be1d:	add    al,0x9a
   14000be1f:	xchg   edx,eax
   14000be20:	outs   dx,DWORD PTR ds:[rsi]
   14000be21:	ins    BYTE PTR es:[rdi],dx
   14000be22:	fcom   QWORD PTR [rax]
   14000be24:	mov    bl,ah
   14000be26:	or     al,0xe4
   14000be28:	mov    es,WORD PTR [rcx-0x33]
   14000be2b:	push   rax
   14000be2c:	adc    BYTE PTR [rdx-0x3bcfc161],0x27
   14000be33:	stc    
   14000be34:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000be35:	sbb    bh,BYTE PTR [rdi-0x7df3184d]
   14000be3b:	jnp    0x14000be6a
   14000be3d:	mov    dh,0x54
   14000be3f:	rex.W not BYTE PTR [rsi]
   14000be42:	add    al,0x3d
   14000be44:	repz fcom QWORD PTR [rdx+0x2bb9d49f]
   14000be4b:	leave  
   14000be4c:	scas   eax,DWORD PTR es:[rdi]
   14000be4d:	mov    edi,0x1d7e4a24
   14000be52:	out    0x57,eax
   14000be54:	add    al,0x63
   14000be56:	jno    0x14000be71
   14000be58:	mov    DWORD PTR [rdi+0xa],ebx
   14000be5b:	rex.XB xchg r11d,eax
   14000be5d:	jg     0x14000bed2
   14000be5f:	vpunpckldq ymm7,ymm3,ymm2
   14000be63:	and    al,0xa0
   14000be65:	(bad)  
   14000be66:	loop   0x14000be59
   14000be68:	cli    
   14000be69:	jge    0x14000be0f
   14000be6b:	sahf   
   14000be6c:	ror    BYTE PTR [rbx],0x48
   14000be6f:	jle    0x14000beb6
   14000be71:	jl     0x14000bed4
   14000be73:	adc    edi,DWORD PTR [rdi+0x6bf4d72f]
   14000be79:	(bad)  
   14000be7a:	xlat   BYTE PTR ds:[rbx]
   14000be7b:	(bad)  
   14000be7c:	fcomp  DWORD PTR [rip+0xffffffffbf246584]        # 0xff252406
   14000be82:	(bad)  
   14000be83:	cld    
   14000be84:	xchg   edi,eax
   14000be85:	rex.WXB
   14000be86:	bnd ja 0x14000befa
   14000be89:	je     0x14000befe
   14000be8b:	xchg   esi,eax
   14000be8c:	(bad)  
   14000be8d:	lahf   
   14000be8e:	mov    cl,0x21
   14000be90:	shl    BYTE PTR [rbx+0x60aa318c],0xe
   14000be97:	scas   eax,DWORD PTR es:[rdi]
   14000be98:	ds sti 
   14000be9a:	in     eax,dx
   14000be9b:	ror    ch,0x62
   14000be9e:	add    DWORD PTR [rax],esp
   14000bea0:	(bad)  
   14000bea1:	ret    0x521b
   14000bea4:	push   0xffffffffffffffe7
   14000bea6:	rex.WR movabs rbp,0xebc44f346c8b5a3a
   14000beb0:	sbb    DWORD PTR [rax],0xffffff84
   14000beb3:	ins    BYTE PTR es:[rdi],dx
   14000beb4:	scas   eax,DWORD PTR es:[rdi]
   14000beb5:	rex.WRXB
   14000beb6:	rex.WXB mov QWORD PTR [r9-0x1885b0c1],rdx
   14000bebd:	retf   0x12fb
   14000bec0:	rex.XB or eax,0xfc8a5416
   14000bec6:	(bad)  
   14000bec7:	and    ebx,DWORD PTR [rdx+0x31]
   14000beca:	(bad)  
   14000becb:	and    eax,0x71630296
   14000bed0:	sti    
   14000bed1:	pop    rsp
   14000bed2:	add    eax,0xfc804348
   14000bed7:	(bad)  
   14000bed8:	jmp    0x14000be6d
   14000beda:	cmovge esi,DWORD PTR [rbp+rdi*4-0x29]
   14000bedf:	lahf   
   14000bee0:	xchg   BYTE PTR [rcx+0x21a40532],dl
   14000bee6:	ds test eax,0x974a847
   14000beec:	xchg   edx,eax
   14000beed:	(bad)  
   14000beee:	xlat   BYTE PTR ds:[rbx]
   14000beef:	add    edi,DWORD PTR [rdi]
   14000bef1:	adc    cl,BYTE PTR [rbx+0x7c]
   14000bef4:	test   eax,ecx
   14000bef6:	(bad)  
   14000bef7:	pop    rbx
   14000bef8:	add    eax,0xe4d81438
   14000befd:	repnz sub eax,0x3934d1f9
   14000bf03:	out    dx,eax
   14000bf04:	cmp    esi,esp
   14000bf06:	(bad)  
   14000bf07:	rex.XB retf 
   14000bf09:	or     eax,0xf9c58ba5
   14000bf0e:	repnz mov ?,WORD PTR [rip+0x3028a910]        # 0x170296825
   14000bf15:	(bad)  
   14000bf16:	ror    cl,0x20
   14000bf19:	jmp    0x132483f3a
   14000bf1e:	mov    bl,0x2d
   14000bf20:	lahf   
   14000bf21:	sub    cl,BYTE PTR [rsi+rdx*1-0x787bdbd8]
   14000bf28:	clc    
   14000bf29:	(bad)  
   14000bf2a:	stos   DWORD PTR es:[rdi],eax
   14000bf2b:	hlt    
   14000bf2c:	test   BYTE PTR [rbp+0x2007e496],cl
   14000bf32:	stc    
   14000bf33:	fxch   st(7)
   14000bf35:	(bad)  
   14000bf36:	mov    edx,0x36ebf583
   14000bf3b:	test   BYTE PTR [rip+0x12f22b3f],ah        # 0x152f2ea80
   14000bf41:	ret    0x8d9e
   14000bf44:	(bad)  
   14000bf45:	rex.X add al,0xc7
   14000bf48:	(bad)  
   14000bf49:	jbe    0x14000bf03
   14000bf4b:	and    dl,ah
   14000bf4d:	xchg   esp,eax
   14000bf4e:	or     DWORD PTR [rax+0x5a],eax
   14000bf51:	rex.WRX lods al,BYTE PTR ds:[rsi]
   14000bf53:	(bad)  
   14000bf54:	push   rdx
   14000bf55:	pop    rbx
   14000bf56:	and    DWORD PTR [rdi-0xcd3f112],0x88a15050
   14000bf60:	shld   DWORD PTR [rax-0x2e0a1421],edx,0x4b
   14000bf68:	dec    BYTE PTR [rax+0x7e4d1fd7]
   14000bf6e:	lahf   
   14000bf6f:	and    al,0x4f
   14000bf71:	cmc    
   14000bf72:	mov    esi,0x759f9233
   14000bf77:	xor    ecx,ebx
   14000bf79:	movsxd ebp,edi
   14000bf7b:	rex.WR
   14000bf7c:	repnz addr32 pop rax
   14000bf7f:	add    ebx,edx
   14000bf81:	leave  
   14000bf82:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000bf83:	cmp    al,0x3f
   14000bf85:	scas   eax,DWORD PTR es:[rdi]
   14000bf86:	hlt    
   14000bf87:	ret    
   14000bf88:	cmp    BYTE PTR [rdx-0x6a],cl
   14000bf8b:	(bad)  
   14000bf8c:	xor    edx,DWORD PTR [rsi]
   14000bf8e:	mov    ecx,0x13880046
   14000bf93:	cmp    eax,0xd563f14
   14000bf98:	mov    ecx,es
   14000bf9a:	in     al,0x7b
   14000bf9c:	add    DWORD PTR [rcx+rdi*8],ecx
   14000bf9f:	jge    0x14000c005
   14000bfa1:	add    edi,DWORD PTR [rdx-0x365c36a8]
   14000bfa7:	stos   DWORD PTR es:[rdi],eax
   14000bfa8:	(bad)  
   14000bfa9:	push   rsp
   14000bfaa:	movabs al,ds:0x4b8ccba00d65ad90
   14000bfb3:	jle    0x14000bfc8
   14000bfb5:	ss (bad) 
   14000bfb7:	test   BYTE PTR [rdi],al
   14000bfb9:	and    al,0xf9
   14000bfbb:	jne    0x14000bf8d
   14000bfbd:	cs and al,0xbf
   14000bfc0:	jne    0x14000bfbd
   14000bfc2:	mov    ch,0x6f
   14000bfc4:	and    dh,BYTE PTR [rax+0x765e6234]
   14000bfca:	ins    BYTE PTR es:[rdi],dx
   14000bfcb:	jns    0x14000bf88
   14000bfcd:	ret    0x5d98
   14000bfd0:	adc    DWORD PTR [rbx-0x4a],0xfffffff5
   14000bfd4:	mov    ?,WORD PTR [rcx]
   14000bfd6:	add    al,0xb9
   14000bfd8:	cwde   
   14000bfd9:	ds add al,0x8
   14000bfdc:	xchg   edx,eax
   14000bfdd:	lahf   
   14000bfde:	fbstp  TBYTE PTR [rbx+riz*4-0x50825a3e]
   14000bfe5:	ds sub al,0xc9
   14000bfe8:	fbld   TBYTE PTR [rdi]
   14000bfea:	xchg   esp,eax
   14000bfeb:	(bad)  
   14000bfec:	rex.WB loop 0x14000bff3
   14000bfef:	mov    ecx,0xb97c4b34
   14000bff4:	xchg   edx,eax
   14000bff5:	(bad)  
   14000bff6:	xor    bl,0xfc
   14000bff9:	add    edx,DWORD PTR [rsi-0x2]
   14000bffc:	xor    cl,bh
   14000bffe:	ja     0x14000bf89
   14000c000:	push   rdx
   14000c001:	rex.RX
   14000c002:	gs xchg edi,eax
   14000c004:	(bad)  
   14000c005:	rex.WRXB imul r8,QWORD PTR [r11-0x36],0xffffffffb4a1418d
   14000c00d:	rex.XB in eax,0xe4
   14000c010:	or     eax,0x6fcef20b
   14000c015:	fadd   DWORD PTR [rax]
   14000c017:	mov    ah,0xa9
   14000c019:	add    eax,0xca509eb9
   14000c01e:	(bad)  
   14000c01f:	and    bl,BYTE PTR [rbx]
   14000c021:	pop    rsp
   14000c022:	scas   eax,DWORD PTR es:[rdi]
   14000c023:	fist   WORD PTR [rbp+0x12]
   14000c026:	xchg   esp,eax
   14000c027:	sar    DWORD PTR [rsi],0xf2
   14000c02a:	push   rdi
   14000c02b:	leave  
   14000c02c:	outs   dx,DWORD PTR ds:[rsi]
   14000c02d:	and    DWORD PTR [rcx+rdi*8],esp
   14000c030:	add    DWORD PTR [rax],edi
   14000c032:	rex.WRXB
   14000c033:	mov    r10b,bpl
   14000c036:	jnp    0x14000c039
   14000c038:	push   rax
   14000c039:	pop    rdx
   14000c03a:	cmp    DWORD PTR [rsi+rax*2+0x7b1e578e],edx
   14000c041:	cmp    esi,DWORD PTR [rax+0x76d9fcaf]
   14000c047:	add    ah,BYTE PTR [rsi]
   14000c049:	(bad)  
   14000c04a:	imul   ecx,DWORD PTR [rcx+0x7e],0x5ebdf91f
   14000c051:	fbstp  TBYTE PTR [rbx]
   14000c053:	jns    0x14000c03a
   14000c055:	jp     0x14000c0d4
   14000c057:	rcl    DWORD PTR [rdx+0x49e7f27c],cl
   14000c05d:	out    dx,eax
   14000c05e:	rex.XB pop r12
   14000c060:	loop   0x14000bfed
   14000c062:	rex.WB (bad) 
   14000c064:	jno    0x14000c049
   14000c066:	std    
   14000c067:	xor    al,ah
   14000c069:	xchg   edi,eax
   14000c06a:	push   rdx
   14000c06b:	loop   0x14000c06a
   14000c06d:	neg    edi
   14000c06f:	xlat   BYTE PTR ds:[rbx]
   14000c070:	test   ah,bl
   14000c072:	adc    eax,0xeb1ee731
   14000c077:	xchg   edi,eax
   14000c078:	fcomp  st(5)
   14000c07a:	cwde   
   14000c07b:	sti    
   14000c07c:	add    BYTE PTR [rdi-0x277e64ee],cl
   14000c082:	mov    cl,0x64
   14000c084:	ss jnp 0x14000c081
   14000c087:	and    eax,ecx
   14000c089:	rcl    BYTE PTR [rbx+0x1f77b3dc],1
   14000c08f:	mov    al,0xc8
   14000c091:	fild   QWORD PTR [rdi-0x1c]
   14000c094:	mov    cl,0x3b
   14000c096:	scas   al,BYTE PTR es:[rdi]
   14000c097:	mov    ah,0x3b
   14000c099:	ins    DWORD PTR es:[rdi],dx
   14000c09a:	nop
   14000c09b:	cld    
   14000c09c:	ret    
   14000c09d:	(bad)  
   14000c09e:	js     0x14000c030
   14000c0a0:	cwde   
   14000c0a1:	mov    ebx,0x31d6fc90
   14000c0a6:	rex.R (bad) 
   14000c0a8:	rex.WXB jg 0x14000c084
   14000c0ab:	fnstsw WORD PTR [rax+0x3f]
   14000c0ae:	rex.R movabs ds:0xc879f55a68017b94,eax
   14000c0b8:	in     al,0x1f
   14000c0ba:	imul   esp,DWORD PTR [rax-0x6f0c215a],0xffffffb3
   14000c0c1:	xor    al,0x18
   14000c0c3:	mov    bl,BYTE PTR [rdi+0x2810097b]
   14000c0c9:	mov    cl,0xa
   14000c0cb:	and    BYTE PTR [rip+0x4f4404ef],bh        # 0x18f44c5c0
   14000c0d1:	or     cl,al
   14000c0d3:	sar    ecx,cl
   14000c0d5:	(bad)  
   14000c0d6:	(bad)  
   14000c0d7:	sub    DWORD PTR [rbx],esp
   14000c0d9:	fs cwde 
   14000c0db:	and    al,0xc9
   14000c0dd:	cdq    
   14000c0de:	or     dh,BYTE PTR [rcx-0x79]
   14000c0e1:	add    DWORD PTR [rbx+0xf7927cb],edx
   14000c0e7:	jle    0x14000c072
   14000c0e9:	(bad)  
   14000c0ea:	rex.RX (bad) 
   14000c0ec:	xchg   ecx,eax
   14000c0ed:	jae    0x14000c0f0
   14000c0ef:	je     0x14000c106
   14000c0f1:	(bad)  
   14000c0f2:	(bad)  
   14000c0f3:	xchg   edx,eax
   14000c0f4:	lea    ecx,[rcx+0x37]
   14000c0f7:	xor    eax,0xa7b294cf
   14000c0fc:	js     0x14000c0fa
   14000c0fe:	movabs eax,ds:0xd8153ccb032739f8
   14000c107:	cmp    bl,BYTE PTR [rdi]
   14000c109:	(bad)  
   14000c10a:	clc    
   14000c10b:	in     al,dx
   14000c10c:	rex.WXB and al,0x5a
   14000c10f:	jns    0x14000c165
   14000c111:	retf   
   14000c112:	jmp    0x14000c10b
   14000c114:	jg     0x14000c0f3
   14000c116:	jno    0x14000c0c9
   14000c118:	out    dx,eax
   14000c119:	test   DWORD PTR [rax],0xf9088139
   14000c11f:	ret    
   14000c120:	gs add eax,0x9d27b765
   14000c126:	rex.WXB sbb al,0xf5
   14000c129:	adc    DWORD PTR [rdi],ebp
   14000c12b:	iret   
   14000c12c:	and    BYTE PTR [rcx+rdi*8],ah
   14000c12f:	lods   eax,DWORD PTR ds:[rsi]
   14000c130:	(bad)
   14000c135:	ds mov bh,0xe
   14000c138:	add    eax,esp
   14000c13a:	cmp    esi,DWORD PTR [rdi-0x42]
   14000c13d:	rex.WXB add cl,r10b
   14000c140:	rex.WR enter 0xa9cd,0x6
   14000c145:	out    0x32,al
   14000c147:	sub    ah,BYTE PTR [rbp-0x4fbd99cf]
   14000c14d:	xchg   esp,eax
   14000c14e:	xlat   BYTE PTR ds:[rbx]
   14000c14f:	fucomip st,st(3)
   14000c151:	int    0x40
   14000c153:	stos   BYTE PTR es:[rdi],al
   14000c154:	xchg   ebx,eax
   14000c155:	rex.WB cmc 
   14000c157:	push   rbp
   14000c158:	movabs rsp,0x95c776f89a6bcefa
   14000c162:	cmp    cl,bh
   14000c164:	mov    esp,0xc90fe6cf
   14000c169:	sti    
   14000c16a:	(bad)  
   14000c16b:	leave  
   14000c16c:	out    dx,eax
   14000c16d:	stos   DWORD PTR es:[rdi],eax
   14000c16e:	xchg   ebx,eax
   14000c16f:	xchg   DWORD PTR [rcx-0x8735956],ebx
   14000c175:	imul   DWORD PTR [rax]
   14000c177:	stc    
   14000c178:	div    DWORD PTR [rdx+rax*1-0x3e605460]
   14000c17f:	repz rex.WRXB and rax,0x4d6c687e
   14000c186:	out    0x39,eax
   14000c188:	(bad)  
   14000c189:	mov    ah,0x25
   14000c18b:	(bad)
   14000c18e:	lods   eax,DWORD PTR ds:[rsi]
   14000c18f:	jmp    0x14000c18c
   14000c191:	(bad)  
   14000c192:	sti    
   14000c193:	mov    cl,0x95
   14000c195:	test   BYTE PTR [rsp+rdx*1],bl
   14000c198:	pop    rax
   14000c199:	(bad)  
   14000c19a:	in     al,dx
   14000c19b:	sbb    eax,DWORD PTR [rax]
   14000c19d:	cwde   
   14000c19e:	mov    ss,WORD PTR [rip+0x24907f22]        # 0x1649140c6
   14000c1a4:	jno    0x14000c128
   14000c1a6:	int3   
   14000c1a7:	mov    bl,0xc4
   14000c1a9:	ja     0x14000c17c
   14000c1ab:	and    eax,0xd0fe977f
   14000c1b0:	enter  0xa29f,0x2
   14000c1b4:	idiv   BYTE PTR [rcx-0x42d79ff1]
   14000c1ba:	outs   dx,DWORD PTR ds:[rsi]
   14000c1bb:	ja     0x14000c19d
   14000c1bd:	push   rax
   14000c1be:	mov    esi,0x76804b29
   14000c1c3:	(bad)  
   14000c1c4:	fmul   QWORD PTR [rcx+0x56fbdbf]
   14000c1ca:	not    BYTE PTR [rdx]
   14000c1cc:	(bad)  
   14000c1cd:	pop    rsp
   14000c1ce:	bnd jnp 0x14000c18e
   14000c1d1:	or     DWORD PTR ds:[rbx],esi
   14000c1d4:	in     eax,0xb0
   14000c1d6:	sbb    al,0x7d
   14000c1d8:	cmp    DWORD PTR [rsi-0x68],edx
   14000c1db:	movabs al,ds:0xd48f80973ed8ee1f
   14000c1e4:	adc    bl,BYTE PTR [rdi-0x1f5e211]
   14000c1ea:	sbb    al,BYTE PTR [rsi]
   14000c1ec:	icebp  
   14000c1ed:	fidivr WORD PTR [rbx-0x11]
   14000c1f0:	rex.RB jrcxz 0x14000c23e
   14000c1f3:	jns    0x14000c1d9
   14000c1f5:	test   eax,0x63b4e7e5
   14000c1fa:	out    dx,al
   14000c1fb:	jnp    0x14000c1fe
   14000c1fd:	push   0x173b1da
   14000c202:	cmp    ebx,DWORD PTR [rbx+0x6]
   14000c205:	or     al,0x35
   14000c207:	ret    0x956d
   14000c20a:	fs (bad) 
   14000c20c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c20d:	sbb    eax,0x22b09257
   14000c212:	in     al,0x4c
   14000c214:	and    eax,0x867e5da1
   14000c219:	in     al,0x37
   14000c21b:	(bad)  
   14000c21c:	sti    
   14000c21d:	xchg   ebx,eax
   14000c21e:	cld    
   14000c21f:	rex.B
   14000c220:	repnz (bad) 
   14000c222:	hlt    
   14000c223:	cli    
   14000c224:	gs cld 
   14000c226:	scas   eax,DWORD PTR es:[rdi]
   14000c227:	(bad)  
   14000c228:	jae    0x14000c1b9
   14000c22a:	ret    
   14000c22b:	push   rbx
   14000c22c:	retf   0xe7df
   14000c22f:	jle    0x14000c1b2
   14000c231:	mov    ecx,0x7c287ebc
   14000c236:	retf   0x16b1
   14000c239:	pop    rcx
   14000c23a:	add    eax,0x42992d30
   14000c23f:	(bad)  
   14000c240:	(bad)  
   14000c241:	(bad)  
   14000c243:	call   0xdf9365dd
   14000c248:	(bad)  
   14000c249:	cmp    ebp,eax
   14000c24b:	jmp    0x14000c2a8
   14000c24d:	(bad)  
   14000c24e:	adc    BYTE PTR [rip+0x5125fd2e],bh        # 0x19126bf82
   14000c254:	bnd jmp 0x14000c20f
   14000c257:	sbb    eax,0x48633f92
   14000c25c:	rex movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c25e:	jnp    0x14000c24c
   14000c260:	pop    rsi
   14000c261:	sub    BYTE PTR [rcx+0x3f163bde],0x14
   14000c268:	(bad)  
   14000c269:	gs js  0x14000c1fd
   14000c26c:	xor    dh,BYTE PTR [rcx+rbp*1+0x51]
   14000c270:	outs   dx,BYTE PTR ds:[rsi]
   14000c271:	(bad)  
   14000c272:	rex.WRX sar BYTE PTR [rcx+0x4c290036],0x32
   14000c27a:	add    BYTE PTR [rdi-0x203ca192],dh
   14000c280:	ret    0x9e5f
   14000c283:	fmul   QWORD PTR [rax-0x35bd0276]
   14000c289:	push   rbx
   14000c28a:	out    dx,eax
   14000c28b:	(bad)  
   14000c28c:	adc    BYTE PTR [rax-0x59],0x3b
   14000c290:	test   BYTE PTR [rcx+0x726929f6],bl
   14000c296:	shl    ch,cl
   14000c298:	out    0xc9,al
   14000c29a:	frstor [rbx]
   14000c29c:	nop
   14000c29d:	rex.WX in al,dx
   14000c29f:	nop
   14000c2a0:	cld    
   14000c2a1:	rex.WRXB lods rax,QWORD PTR ds:[rsi]
   14000c2a3:	xor    eax,DWORD PTR [rcx+rcx*2-0x18461ffa]
   14000c2aa:	and    DWORD PTR ds:[rdi-0x2a714161],0xb3b3856a
   14000c2b5:	xor    edi,DWORD PTR [rsp+rdi*2]
   14000c2b8:	clc    
   14000c2b9:	adc    BYTE PTR [rdi+0x67],ah
   14000c2bc:	addr32 pop rax
   14000c2be:	lods   eax,DWORD PTR ds:[rsi]
   14000c2bf:	push   rsi
   14000c2c0:	fsubr  DWORD PTR [rsi+rsi*1+0x53]
   14000c2c4:	mov    ch,BYTE PTR [rsi-0x3469de28]
   14000c2ca:	and    eax,0x34638b16
   14000c2cf:	rex.WRB xchg r11,rax
   14000c2d1:	fmul   st(1),st
   14000c2d3:	jne    0x14000c30f
   14000c2d5:	and    DWORD PTR [rdx*8-0x5ca98a2f],ebx
   14000c2dc:	je     0x14000c2d2
   14000c2de:	or     dl,BYTE PTR [rcx+0x2]
   14000c2e1:	(bad)  
   14000c2e2:	ja     0x14000c2c7
   14000c2e4:	test   eax,0x2f2810b2
   14000c2e9:	jmp    0xfdbf5e94
   14000c2ee:	xor    al,0xad
   14000c2f0:	imul   ebx,DWORD PTR [rdi-0x1],0xcb7d8277
   14000c2f7:	frstor [rbx]
   14000c2f9:	nop
   14000c2fa:	xor    eax,ecx
   14000c2fc:	(bad)  
   14000c2fd:	xchg   DWORD PTR [rdx],ebx
   14000c2ff:	sub    BYTE PTR [rdx+0x3b],dh
   14000c302:	mov    al,0xea
   14000c304:	cmp    bl,cl
   14000c306:	in     eax,0x12
   14000c308:	retf   
   14000c309:	gs push rdi
   14000c30b:	in     al,0xa2
   14000c30d:	jg     0x14000c2b9
   14000c30f:	push   rax
   14000c310:	vpacksswb xmm6,xmm3,XMMWORD PTR [rcx+0x276be858]
   14000c318:	test   BYTE PTR [rax-0x2d],al
   14000c31b:	xor    al,0xde
   14000c31d:	je     0x14000c2b3
   14000c31f:	clc    
   14000c320:	(bad)  
   14000c322:	(bad)  
   14000c323:	lea    ebp,[rax+0x7a]
   14000c326:	ret    0xd808
   14000c329:	repz (bad) 
   14000c32b:	mov    bl,BYTE PTR [rax-0x76]
   14000c32e:	adc    ah,BYTE PTR [rcx]
   14000c330:	repnz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c332:	sbb    BYTE PTR [rax],cl
   14000c334:	mov    ebx,0xee1d4b83
   14000c339:	adc    dl,dh
   14000c33b:	push   rdi
   14000c33c:	sahf   
   14000c33d:	jle    0x14000c2fa
   14000c33f:	mov    ah,0xe4
   14000c341:	(bad)  
   14000c342:	scas   al,BYTE PTR es:[rdi]
   14000c343:	jmp    0x14000c2fb
   14000c345:	mov    esi,ebp
   14000c347:	ins    DWORD PTR es:[rdi],dx
   14000c348:	(bad)  
   14000c349:	push   0xffffffffffffffc0
   14000c34b:	push   rdi
   14000c34c:	push   rdx
   14000c34d:	jrcxz  0x14000c333
   14000c34f:	int3   
   14000c350:	or     DWORD PTR [rdx+rbx*1+0x197d982],esp
   14000c357:	test   DWORD PTR [rax+0x7c],ecx
   14000c35a:	jb     0x14000c318
   14000c35c:	adc    BYTE PTR [rax],dl
   14000c35e:	rex.WRB add r13,0x72
   14000c362:	mov    DWORD PTR [rbx+0x4863e3],esp
   14000c368:	mov    ecx,ebp
   14000c36a:	(bad)  
   14000c36b:	ins    DWORD PTR es:[rdi],dx
   14000c36c:	fisttp DWORD PTR [rsi]
   14000c36e:	lods   ax,WORD PTR ds:[rsi]
   14000c370:	cmp    BYTE PTR [rsp+rsi*1],cl
   14000c373:	rex.WRB and QWORD PTR [r13+0x7f],0xfffffffffffffffd
   14000c378:	(bad)  
   14000c379:	retf   
   14000c37a:	and    eax,0x9e00d344
   14000c37f:	jmp    0x14000c330
   14000c381:	mov    edx,0xeb021098
   14000c386:	cmc    
   14000c387:	sbb    ah,BYTE PTR [rdx+0x38bc7069]
   14000c38d:	(bad)  
   14000c38e:	add    BYTE PTR [rbp+rbp*8-0x5049a42a],dh
   14000c395:	shld   DWORD PTR [rsi-0x3183d5b],eax,cl
   14000c39c:	jb     0x14000c389
   14000c39e:	adc    eax,0x858b0042
   14000c3a3:	ss pop rsp
   14000c3a5:	cmp    ch,BYTE PTR [rsp+rsi*2-0x65]
   14000c3a9:	rcl    BYTE PTR [rsi-0x6d98cfa],cl
   14000c3af:	jbe    0x14000c370
   14000c3b1:	or     al,0x98
   14000c3b3:	mov    dl,0x8
   14000c3b5:	sar    bh,1
   14000c3b7:	cmp    ebx,DWORD PTR [rdx+0x1e]
   14000c3ba:	add    DWORD PTR [rdx],edx
   14000c3bc:	pop    rax
   14000c3bd:	cs (bad) 
   14000c3bf:	push   0x40f64bdb
   14000c3c4:	leave  
   14000c3c5:	std    
   14000c3c6:	rex.WRB sub r15b,r13b
   14000c3c9:	add    al,0x42
   14000c3cb:	or     BYTE PTR [rdx+rax*2],dh
   14000c3ce:	je     0x14000c416
   14000c3d0:	cld    
   14000c3d1:	call   0xdff905de
   14000c3d6:	movabs ds:0x802411d1d1e33d43,al
   14000c3df:	or     BYTE PTR [rbp+r13*2-0x4851d685],r14b
   14000c3e7:	xchg   esp,eax
   14000c3e8:	mov    dl,0x53
   14000c3ea:	(bad)  
   14000c3eb:	add    eax,0xbdea658e
   14000c3f0:	add    BYTE PTR [rcx-0x4589b673],dh
   14000c3f6:	jns    0x14000c3de
   14000c3f8:	add    ah,bl
   14000c3fa:	movabs eax,ds:0xb6834d36324a105d
   14000c403:	cmp    eax,0x7fde74ba
   14000c408:	(bad)  
   14000c409:	sub    ecx,DWORD PTR [rdx+0x3b]
   14000c40c:	shl    DWORD PTR [r10+r15*2],cl
   14000c410:	sub    bh,dl
   14000c412:	xor    al,0xd
   14000c414:	xchg   ebx,eax
   14000c415:	out    dx,al
   14000c416:	sbb    al,BYTE PTR [rdx+0x42163cb]
   14000c41c:	ficom  DWORD PTR [rsi-0x16]
   14000c41f:	out    dx,eax
   14000c420:	adc    al,0x12
   14000c422:	mov    al,0x88
   14000c424:	fs (bad) 
   14000c427:	mov    dl,cl
   14000c429:	je     0x14000c465
   14000c42b:	mov    al,0x19
   14000c42d:	rex.WRX cdqe 
   14000c42f:	(bad)  
   14000c430:	outs   dx,BYTE PTR ds:[rsi]
   14000c431:	rdtsc  
   14000c433:	rex.R lahf 
   14000c435:	rex.WRB jp 0x14000c4b7
   14000c438:	xchg   edx,ecx
   14000c43a:	repz movabs eax,ds:0xf3bd6db696d77b6b
   14000c444:	sbb    dl,BYTE PTR [rbx+0x31]
   14000c447:	fldcw  WORD PTR gs:[rdi]
   14000c44a:	rex.RB or eax,0x900731cc
   14000c450:	je     0x14000c468
   14000c452:	rex.R scas eax,DWORD PTR es:[rdi]
   14000c454:	cdq    
   14000c455:	(bad)  
   14000c456:	int    0xa2
   14000c458:	mov    bl,0xa0
   14000c45a:	sar    BYTE PTR [rdi],cl
   14000c45c:	jle    0x14000c41a
   14000c45e:	enter  0xe7d8,0x9a
   14000c462:	repnz cs rex.B cmp eax,0x5598efbf
   14000c46a:	rex.W (bad) [rsi+0x2f]
   14000c46e:	test   BYTE PTR [rbp+0x77],dl
   14000c471:	sub    BYTE PTR [rdx],0x2
   14000c474:	jne    0x14000c416
   14000c476:	retf   
   14000c477:	mov    ebx,0xdc26f3be
   14000c47c:	pop    rdi
   14000c47d:	add    ebp,ecx
   14000c47f:	rex.WR pop rbx
   14000c481:	js     0x14000c45e
   14000c483:	int3   
   14000c484:	fadd   QWORD PTR [rbx]
   14000c486:	mov    esp,0xdaf563bf
   14000c48b:	jno    0x14000c4cf
   14000c48d:	cwde   
   14000c48e:	adc    al,0x2
   14000c490:	or     dh,cl
   14000c492:	and    esp,0x60
   14000c495:	enter  0xfbeb,0xd2
   14000c499:	in     al,0xc
   14000c49b:	add    DWORD PTR [rdx-0x14],ecx
   14000c49e:	add    eax,0xa6801a08
   14000c4a3:	xor    DWORD PTR [rdi],edx
   14000c4a5:	jne    0x14000c50f
   14000c4a7:	jmp    0x174912433
   14000c4ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c4ad:	cs (bad) 
   14000c4af:	xchg   ebp,eax
   14000c4b0:	pop    rdx
   14000c4b1:	jbe    0x14000c44d
   14000c4b3:	push   rsp
   14000c4b4:	ret    0x5994
   14000c4b7:	loope  0x14000c4e2
   14000c4b9:	cmc    
   14000c4ba:	es (bad) 
   14000c4bc:	xchg   edi,eax
   14000c4bd:	mov    bh,0xe4
   14000c4bf:	jbe    0x14000c465
   14000c4c1:	(bad)  
   14000c4c2:	rex.WRX
   14000c4c3:	fwait
   14000c4c4:	rex.WRB test rax,0x7378e109
   14000c4ca:	scas   eax,DWORD PTR es:[rdi]
   14000c4cb:	and    ecx,ecx
   14000c4cd:	push   0x6e6b686b
   14000c4d2:	rex.WX fidiv DWORD PTR [rax+r9*4-0x22]
   14000c4d7:	clc    
   14000c4d8:	test   eax,0x198b23ef
   14000c4dd:	push   0x3f0d894f
   14000c4e2:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c4e3:	cmp    al,0xbf
   14000c4e5:	ret    0x2ac0
   14000c4e8:	add    ch,bl
   14000c4ea:	cmp    BYTE PTR [rbx+0x76],dl
   14000c4ed:	mov    WORD PTR [rdi-0x455699a6],ss
   14000c4f3:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000c4f4:	xchg   esp,eax
   14000c4f5:	xor    BYTE PTR [rbp+0x10],al
   14000c4f8:	out    dx,al
   14000c4f9:	fs fs pushf 
   14000c4fc:	cmp    ah,BYTE PTR [rcx+0x3b]
   14000c4ff:	adc    eax,0x4b5d066a
   14000c504:	jb     0x14000c529
   14000c506:	cmc    
   14000c507:	test   DWORD PTR [rdi+0x354839fc],eax
   14000c50d:	adc    al,0x39
   14000c50f:	(bad)  
   14000c510:	mov    ds,WORD PTR gs:[rip+0x7ccbb983]        # 0x1bccc7e9a
   14000c517:	mov    esi,0x8725bc
   14000c51c:	push   rbx
   14000c51d:	(bad)  
   14000c51e:	add    eax,DWORD PTR [rbx-0x37645ffa]
   14000c524:	sbb    edx,DWORD PTR [rbp-0x1a]
   14000c527:	and    eax,0x80113d44
   14000c52c:	fiadd  DWORD PTR [rdi-0x242d0ad8]
   14000c532:	adc    BYTE PTR [rbp-0x5a],dh
   14000c535:	ins    BYTE PTR es:[rdi],dx
   14000c536:	retf   0x9399
   14000c539:	cld    
   14000c53a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c53b:	or     eax,0xee6d2c43
   14000c540:	ss loopne 0x14000c4c6
   14000c543:	sbb    DWORD PTR [rdx],eax
   14000c545:	push   rsp
   14000c546:	sbb    BYTE PTR [rbx+rax*2-0x58],dl
   14000c54a:	rex
   14000c54b:	ss iret 
   14000c54d:	nop
   14000c54e:	rex.WRB xor rax,0x4db92839
   14000c554:	(bad)  
   14000c555:	xchg   esp,edi
   14000c557:	rex.XB cmc 
   14000c559:	(bad)  
   14000c55a:	xor    eax,0xf9352a84
   14000c55f:	out    0xb,eax
   14000c561:	fcmovnb st,st(1)
   14000c563:	adc    BYTE PTR [rax-0x1679dd5e],ah
   14000c569:	pop    rbx
   14000c56a:	data16 (bad) 
   14000c56c:	(bad)  
   14000c56d:	adc    DWORD PTR [rax+rdx*2+0x250a3903],edx
   14000c574:	addr32 (bad) 
   14000c576:	sub    dl,BYTE PTR [rsi+0x4e]
   14000c579:	sub    ch,bl
   14000c57b:	adc    al,0xcf
   14000c57d:	(bad)  
   14000c57e:	iret   
   14000c57f:	xor    ah,BYTE PTR [rax-0xb]
   14000c582:	jp     0x14000c599
   14000c584:	or     DWORD PTR [rax-0x6cce7fd5],0xffffff93
   14000c58b:	sti    
   14000c58c:	xor    al,0x8
   14000c58e:	push   rbx
   14000c58f:	fneni(8087 only) 
   14000c591:	rex.WXB (bad) 
   14000c593:	data16 std 
   14000c595:	(bad)  
   14000c596:	xlat   BYTE PTR ds:[rbx]
   14000c597:	repz iret 
   14000c599:	mov    ch,0xc
   14000c59b:	clc    
   14000c59c:	rex.W lods al,BYTE PTR ds:[rsi]
   14000c59e:	jg     0x14000c5f7
   14000c5a0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c5a1:	sbb    ebp,0xfffffff8
   14000c5a4:	sub    esp,edx
   14000c5a6:	(bad)  
   14000c5a7:	pop    rcx
   14000c5a8:	adc    eax,0x8c7d92e7
   14000c5ad:	lods   al,BYTE PTR ds:[rsi]
   14000c5ae:	mov    dh,0xcb
   14000c5b0:	and    r11,rsp
   14000c5b3:	(bad)  
   14000c5b4:	stc    
   14000c5b5:	(bad)  
   14000c5b6:	movabs eax,ds:0xf319c804331829b8
   14000c5bf:	fist   DWORD PTR [rbx+0x3f08b981]
   14000c5c5:	(bad)  
   14000c5c6:	pop    rsp
   14000c5c7:	mov    dh,0xf2
   14000c5c9:	mov    DWORD PTR [rdi],esp
   14000c5cb:	sahf   
   14000c5cc:	sbb    BYTE PTR [rbp-0x18],dl
   14000c5cf:	in     eax,0x43
   14000c5d1:	mov    ch,0x84
   14000c5d3:	sub    cl,0x6c
   14000c5d6:	and    r14,QWORD PTR [r8-0x74cbe598]
   14000c5dd:	add    eax,0xf97afd16
   14000c5e2:	movabs ds:0x1e006821b2e257b2,eax
   14000c5eb:	mov    edi,0xafdde57e
   14000c5f0:	std    
   14000c5f1:	(bad)  
   14000c5f2:	fild   WORD PTR [rsi]
   14000c5f4:	shr    BYTE PTR [rbp+0x108d36f5],1
   14000c5fa:	rex.WRB ror QWORD PTR [r8],cl
   14000c5fd:	and    DWORD PTR [rsi+rcx*4],eax
   14000c600:	xchg   esi,eax
   14000c601:	or     esi,DWORD PTR [rcx+0x62c52e5c]
   14000c607:	ror    DWORD PTR [rax-0x22ee5d1b],1
   14000c60d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000c60e:	or     DWORD PTR [rcx+0x4f942c5],eax
   14000c614:	imul   edi,DWORD PTR [rsi],0x216aa9b4
   14000c61a:	test   BYTE PTR [rax+0x2b],al
   14000c61d:	xor    DWORD PTR [rsi-0x7bdc9a93],0x9ebdade8
   14000c627:	rex.WRXB xchg r14,rax
   14000c629:	push   rdx
   14000c62a:	retf   0x6f3e
   14000c62d:	add    ecx,DWORD PTR [rax]
   14000c62f:	sub    QWORD PTR [rbp-0x2d],rsp
   14000c633:	xor    al,0xa2
   14000c635:	ins    DWORD PTR es:[rdi],dx
   14000c636:	mov    bh,0x5d
   14000c638:	(bad)  
   14000c639:	mov    bl,0x10
   14000c63b:	ins    DWORD PTR es:[rdi],dx
   14000c63c:	sub    esp,DWORD PTR [rbp+0x4a20ca10]
   14000c642:	sub    DWORD PTR [rbx+riz*1-0x26],eax
   14000c646:	mov    dh,0xed
   14000c648:	out    0xa3,eax
   14000c64a:	and    al,0x5a
   14000c64c:	or     DWORD PTR [rcx],ebp
   14000c64e:	and    BYTE PTR [rsp+rbp*8-0x137f78f6],al
   14000c655:	bnd je 0x14000c613
   14000c658:	fild   DWORD PTR [rdi+rsi*2+0x34]
   14000c65c:	push   rdx
   14000c65d:	or     al,BYTE PTR [rax+0x34]
   14000c660:	int    0x2
   14000c662:	fld    TBYTE PTR [rsi+0x2b]
   14000c665:	fwait
   14000c666:	push   0xffffffffb6db4404
   14000c66b:	adc    ah,BYTE PTR [rax-0x5133bfe5]
   14000c671:	jo     0x14000c6c2
   14000c673:	pop    rax
   14000c674:	mov    edi,0x65212dec
   14000c679:	or     esp,DWORD PTR [rcx]
   14000c67b:	mov    edx,0xb7be6073
   14000c680:	cli    
   14000c681:	xchg   BYTE PTR [rcx],bl
   14000c683:	xchg   ebp,eax
   14000c684:	pop    rsi
   14000c685:	retf   0xbf6d
   14000c688:	pop    rbx
   14000c689:	push   rdx
   14000c68a:	jbe    0x14000c6b7
   14000c68c:	iret   
   14000c68d:	add    bl,al
   14000c68f:	mov    dh,0xdd
   14000c691:	retf   
   14000c692:	push   rcx
   14000c693:	add    al,0xd9
   14000c695:	js     0x14000c6f9
   14000c697:	sahf   
   14000c698:	xchg   esp,eax
   14000c699:	rex.WR sahf 
   14000c69b:	rex.WB (bad) 
   14000c69d:	fldcw  WORD PTR [rdi]
   14000c69f:	mov    bh,0xf5
   14000c6a1:	stc    
   14000c6a2:	sbb    eax,DWORD PTR [rcx]
   14000c6a4:	add    DWORD PTR [rcx],ecx
   14000c6a6:	sub    DWORD PTR [rbp-0x6992df80],esp
   14000c6ac:	fisttp QWORD PTR [rsi-0x4a]
   14000c6af:	rex.RX xor al,0xd8
   14000c6b2:	outs   dx,BYTE PTR ds:[rsi]
   14000c6b3:	mov    ebx,0x234df9fd
   14000c6b8:	cli    
   14000c6b9:	jbe    0x14000c70d
   14000c6bb:	movabs ds:0x3ffb7e895b68e39a,al
   14000c6c4:	pop    rdx
   14000c6c5:	or     DWORD PTR [rdx+rdi*4],ebp
   14000c6c8:	jmp    0x14000c6f6
   14000c6ca:	xchg   edi,eax
   14000c6cb:	retf   
   14000c6cc:	rex.RX test al,0x76
   14000c6cf:	or     bpl,BYTE PTR [rdx+r11*8+0x16]
   14000c6d4:	mov    dl,0x6d
   14000c6d6:	jno    0x14000c756
   14000c6d8:	mov    esi,0xabe7a796
   14000c6dd:	jbe    0x14000c69c
   14000c6df:	pop    rsi
   14000c6e0:	leave  
   14000c6e1:	cmc    
   14000c6e2:	jp     0x14000c667
   14000c6e4:	cmc    
   14000c6e5:	sub    di,WORD PTR [rip+0x2dc70fb7]        # 0x16dc7d6a3
   14000c6ec:	(bad)  
   14000c6ed:	or     al,0xfe
   14000c6ef:	rex.W xchg BYTE PTR [rbp-0xdfa5f55],dl
   14000c6f6:	mov    ah,0xe7
   14000c6f8:	(bad)  
   14000c6f9:	or     al,0x89
   14000c6fb:	(bad)  
   14000c6fc:	(bad)  
   14000c6fd:	fstp   TBYTE PTR [rbx+0x4d4c5e00]
   14000c703:	(bad)  
   14000c704:	xor    al,0x0
   14000c706:	(bad)  
   14000c708:	mov    bh,0xff
   14000c70a:	cld    
   14000c70b:	jmp    0x14000c732
   14000c70d:	sbb    dl,BYTE PTR [rcx+rdx*2+0x51]
   14000c711:	mov    cl,0x53
   14000c713:	and    al,0x93
   14000c715:	(bad)  
   14000c716:	or     BYTE PTR [rax],bl
   14000c718:	cmp    BYTE PTR [rdi],0xf8
   14000c71b:	(bad)  
   14000c71c:	fwait
   14000c71d:	gs (bad) 
   14000c71f:	push   rdx
   14000c720:	push   rcx
   14000c721:	push   rcx
   14000c722:	jno    0x14000c6f4
   14000c724:	mov    eax,0x2bf71b7c
   14000c729:	sub    ch,BYTE PTR [rdx]
   14000c72b:	xchg   edx,eax
   14000c72c:	push   rcx
   14000c72d:	or     eax,0x23c54540
   14000c732:	or     al,0x35
   14000c734:	add    al,0x90
   14000c736:	add    al,dh
   14000c738:	jrcxz  0x14000c7b9
   14000c73a:	out    0xb3,al
   14000c73c:	jnp    0x14000c7aa
   14000c73e:	rex.WX
   14000c73f:	rex.RB
   14000c740:	(bad)
   14000c744:	add    dl,bl
   14000c746:	(bad)  
   14000c747:	mov    edi,0x99b3ffec
   14000c74c:	sar    DWORD PTR [rdi+0x3c20ce8f],cl
   14000c752:	fnstcw WORD PTR [rdi+0x2e]
   14000c755:	push   rax
   14000c756:	xlat   BYTE PTR ds:[rbx]
   14000c757:	mov    edi,0x32e2a2a
   14000c75c:	and    al,0x80
   14000c75e:	jg     0x14000c735
   14000c760:	jg     0x14000c7a1
   14000c762:	add    eax,0x3cffb0f0
   14000c767:	push   rdi
   14000c768:	add    al,0x6f
   14000c76a:	rcl    BYTE PTR [rcx+0x73c018fe],1
   14000c770:	std    
   14000c771:	out    0x12,eax
   14000c773:	jne    0x14000c6fd
   14000c775:	push   rax
   14000c776:	push   rcx
   14000c777:	jno    0x14000c792
   14000c779:	rol    BYTE PTR [rdx],1
   14000c77b:	push   rax
   14000c77c:	rex.WRXB jmp 0x144e0c7ff
   14000c782:	rcr    BYTE PTR [rcx],0x80
   14000c785:	adc    eax,0x90055d
   14000c78a:	mov    dh,0x7d
   14000c78c:	(bad)  
   14000c78d:	(bad)  
   14000c78e:	popf   
   14000c78f:	add    ch,BYTE PTR [rax-0x1d5d5ffa]
   14000c795:	loop   0x14000c73a
   14000c797:	rex.RB (bad) 
   14000c799:	jmp    0x17a1647d3
   14000c79e:	movsxd esi,DWORD PTR [rax+0x1ce92005]
   14000c7a4:	or     BYTE PTR [rdx+0x74],0x2
   14000c7a8:	rex.XB (bad) 
   14000c7aa:	cmp    al,BYTE PTR [rax+rbp*4]
   14000c7ad:	test   al,0xb8
   14000c7af:	clc    
   14000c7b0:	movabs al,ds:0xad005b0233a0defc
   14000c7b9:	lods   eax,DWORD PTR ds:[rsi]
   14000c7ba:	add    BYTE PTR [rdx+0x74],bl
   14000c7bd:	or     al,BYTE PTR [rax-0x6f]
   14000c7c0:	mov    edi,0x8a8a801a
   14000c7c5:	mov    ecx,DWORD PTR [rdi]
   14000c7c7:	xor    eax,0xc08ca7e9
   14000c7cc:	mov    dh,0xff
   14000c7ce:	cs sub ecx,eax
   14000c7d1:	adc    eax,0xe4a897e1
   14000c7d6:	scas   eax,DWORD PTR es:[rdi]
   14000c7d7:	test   al,0xb8
   14000c7d9:	ins    BYTE PTR es:[rdi],dx
   14000c7da:	nop
   14000c7db:	loopne 0x14000c763
   14000c7dd:	rex ret 0x32
   14000c7e1:	rex
   14000c7e2:	rex.RXB jp 0x14000c7ca
   14000c7e5:	std    
   14000c7e6:	pop    rbx
   14000c7e7:	push   rsp
   14000c7e8:	and    edx,DWORD PTR [rax+0x51]
   14000c7eb:	jno    0x14000c806
   14000c7ed:	(bad)  
   14000c7ee:	(bad)  
   14000c7f0:	and    BYTE PTR [rbx],al
   14000c7f2:	loope  0x14000c809
   14000c7f4:	adc    eax,0x15151515
   14000c7f9:	adc    eax,0x15151515
   14000c7fe:	adc    eax,0x15151515
   14000c803:	adc    eax,0x15151515
   14000c808:	adc    eax,0x15151515
   14000c80d:	adc    eax,0x15151515
   14000c812:	adc    eax,0x15151515
   14000c817:	adc    eax,0x15151515
   14000c81c:	adc    eax,0x15151515
   14000c821:	adc    eax,0x15151515
   14000c826:	adc    eax,0x15151515
   14000c82b:	adc    eax,0x15151515
   14000c830:	adc    eax,0x15151515
   14000c835:	adc    eax,0x15151515
   14000c83a:	adc    eax,0x15151515
   14000c83f:	adc    eax,0x15151515
   14000c844:	adc    eax,0x15151515
   14000c849:	adc    eax,0x15151515
   14000c84e:	in     eax,0xf1
   14000c850:	inc    DWORD PTR [rcx]
   14000c852:	rex.RXB rcl DWORD PTR [r13+0x71aa550f],cl
   14000c859:	(bad)  
   14000c85a:	add    BYTE PTR [rax],al
   14000c85c:	add    BYTE PTR [rax],al
   14000c85e:	rex.WB
   14000c85f:	rex.RB
   14000c860:	rex.WRX
   14000c861:	rex.R scas al,BYTE PTR es:[rdi]
   14000c863:	rex.X (bad) 
   14000c865:	(bad)  
   14000c866:	add    BYTE PTR [rax],al
   14000c868:	sub    BYTE PTR [rax],al
   14000c86a:	add    BYTE PTR [rax],al
   14000c86c:	xor    BYTE PTR [rax],al
   14000c86e:	add    BYTE PTR [rax],al
   14000c870:	(bad)  
   14000c871:	add    BYTE PTR [rax],al
   14000c873:	add    BYTE PTR [rcx],al
   14000c875:	add    BYTE PTR [rax],ah
   14000c877:	add    BYTE PTR [rax],al
   14000c879:	add    BYTE PTR [rax],al
   14000c87b:	add    BYTE PTR [rax+0x25],al
	...
   14000cc55:	add    BYTE PTR [rax],al
   14000cc57:	add    DWORD PTR [rax],eax
   14000cc59:	add    BYTE PTR [rax],al
   14000cc5b:	add    eax,0xb000000
   14000cc60:	add    BYTE PTR [rax],al
   14000cc62:	add    BYTE PTR [rsi],cl
   14000cc64:	add    BYTE PTR [rax],al
   14000cc66:	add    BYTE PTR [rsi],cl
   14000cc68:	add    BYTE PTR [rax],al
   14000cc6a:	add    BYTE PTR [rsi],cl
   14000cc6c:	add    BYTE PTR [rax],al
   14000cc6e:	add    BYTE PTR [rsi],cl
   14000cc70:	add    BYTE PTR [rax],al
   14000cc72:	add    BYTE PTR [rsi],cl
   14000cc74:	add    BYTE PTR [rax],al
   14000cc76:	add    BYTE PTR [rsi],cl
   14000cc78:	add    BYTE PTR [rax],al
   14000cc7a:	add    BYTE PTR [rsi],cl
   14000cc7c:	add    BYTE PTR [rax],al
   14000cc7e:	add    BYTE PTR [rsi],cl
   14000cc80:	add    BYTE PTR [rax],al
   14000cc82:	add    BYTE PTR [rsi],cl
   14000cc84:	add    BYTE PTR [rax],al
   14000cc86:	add    BYTE PTR [rsi],cl
   14000cc88:	add    BYTE PTR [rax],al
   14000cc8a:	add    BYTE PTR [rsi],cl
   14000cc8c:	add    BYTE PTR [rax],al
   14000cc8e:	add    BYTE PTR [rsi],cl
   14000cc90:	add    BYTE PTR [rax],al
   14000cc92:	add    BYTE PTR [rsi],cl
   14000cc94:	add    BYTE PTR [rax],al
   14000cc96:	add    BYTE PTR [rsi],cl
   14000cc98:	add    BYTE PTR [rax],al
   14000cc9a:	add    BYTE PTR [rsi],cl
   14000cc9c:	add    BYTE PTR [rax],al
   14000cc9e:	add    BYTE PTR [rsi],cl
   14000cca0:	add    BYTE PTR [rax],al
   14000cca2:	add    BYTE PTR [rsi],cl
   14000cca4:	add    BYTE PTR [rax],al
   14000cca6:	add    BYTE PTR [rsi],cl
   14000cca8:	add    BYTE PTR [rax],al
   14000ccaa:	add    BYTE PTR [rsi],cl
   14000ccac:	add    BYTE PTR [rax],al
   14000ccae:	add    BYTE PTR [rsi],cl
   14000ccb0:	add    BYTE PTR [rax],al
   14000ccb2:	add    BYTE PTR [rsi],cl
   14000ccb4:	add    BYTE PTR [rax],al
   14000ccb6:	add    BYTE PTR [rsi],cl
   14000ccb8:	add    BYTE PTR [rax],al
   14000ccba:	add    BYTE PTR [rsi],cl
   14000ccbc:	add    BYTE PTR [rax],al
   14000ccbe:	add    BYTE PTR [rsi],cl
   14000ccc0:	add    BYTE PTR [rax],al
   14000ccc2:	add    BYTE PTR [rsi],cl
   14000ccc4:	add    BYTE PTR [rax],al
   14000ccc6:	add    BYTE PTR [rsi],cl
   14000ccc8:	add    BYTE PTR [rax],al
   14000ccca:	add    BYTE PTR [rsi],cl
   14000cccc:	add    BYTE PTR [rax],al
   14000ccce:	add    BYTE PTR [rsi],cl
   14000ccd0:	add    BYTE PTR [rax],al
   14000ccd2:	add    BYTE PTR [rsi],cl
   14000ccd4:	add    BYTE PTR [rax],al
   14000ccd6:	add    BYTE PTR [rsi],cl
   14000ccd8:	add    BYTE PTR [rax],al
   14000ccda:	add    BYTE PTR [rsi],cl
   14000ccdc:	add    BYTE PTR [rax],al
   14000ccde:	add    BYTE PTR [rsi],cl
   14000cce0:	add    BYTE PTR [rax],al
   14000cce2:	add    BYTE PTR [rsi],cl
   14000cce4:	add    BYTE PTR [rax],al
   14000cce6:	add    BYTE PTR [rsi],cl
   14000cce8:	add    BYTE PTR [rax],al
   14000ccea:	add    BYTE PTR [rsi],cl
   14000ccec:	add    BYTE PTR [rax],al
   14000ccee:	add    BYTE PTR [rsi],cl
   14000ccf0:	add    BYTE PTR [rax],al
   14000ccf2:	add    BYTE PTR [rsi],cl
   14000ccf4:	add    BYTE PTR [rax],al
   14000ccf6:	add    BYTE PTR [rsi],cl
   14000ccf8:	add    BYTE PTR [rax],al
   14000ccfa:	add    BYTE PTR [rsi],cl
   14000ccfc:	add    BYTE PTR [rax],al
   14000ccfe:	add    BYTE PTR [rsi],cl
   14000cd00:	add    BYTE PTR [rax],al
   14000cd02:	add    BYTE PTR [rdx],cl
   14000cd04:	add    BYTE PTR [rax],al
   14000cd06:	add    BYTE PTR [rbx],al
	...
   14000cd14:	add    BYTE PTR [rax],al
   14000cd16:	add    BYTE PTR [rip+0x15000000],al        # 0x15500cd1c
   14000cd1c:	add    BYTE PTR [rax],al
   14000cd1e:	add    BYTE PTR [rip+0x2a000000],ah        # 0x16a00cd24
   14000cd24:	add    BYTE PTR [rax],al
   14000cd26:	add    BYTE PTR [rdx],ch
   14000cd28:	add    BYTE PTR [rax],al
   14000cd2a:	add    BYTE PTR [rdx],ch
   14000cd2c:	add    BYTE PTR [rax],al
   14000cd2e:	add    BYTE PTR [rdx],ch
   14000cd30:	add    BYTE PTR [rax],al
   14000cd32:	add    BYTE PTR [rdx],ch
   14000cd34:	add    BYTE PTR [rax],al
   14000cd36:	add    BYTE PTR [rdx],ch
   14000cd38:	add    BYTE PTR [rax],al
   14000cd3a:	add    BYTE PTR [rdx],ch
   14000cd3c:	add    BYTE PTR [rax],al
   14000cd3e:	add    BYTE PTR [rdx],ch
   14000cd40:	add    BYTE PTR [rax],al
   14000cd42:	add    BYTE PTR [rdx],ch
   14000cd44:	add    BYTE PTR [rax],al
   14000cd46:	add    BYTE PTR [rdx],ch
   14000cd48:	add    BYTE PTR [rax],al
   14000cd4a:	add    BYTE PTR [rdx],ch
   14000cd4c:	add    BYTE PTR [rax],al
   14000cd4e:	add    BYTE PTR [rdx],ch
   14000cd50:	add    BYTE PTR [rax],al
   14000cd52:	add    BYTE PTR [rdx],ch
   14000cd54:	add    BYTE PTR [rax],al
   14000cd56:	add    BYTE PTR [rdx],ch
   14000cd58:	add    BYTE PTR [rax],al
   14000cd5a:	add    BYTE PTR [rdx],ch
   14000cd5c:	add    BYTE PTR [rax],al
   14000cd5e:	add    BYTE PTR [rdx],ch
   14000cd60:	add    BYTE PTR [rax],al
   14000cd62:	add    BYTE PTR [rdx],ch
   14000cd64:	add    BYTE PTR [rax],al
   14000cd66:	add    BYTE PTR [rdx],ch
   14000cd68:	add    BYTE PTR [rax],al
   14000cd6a:	add    BYTE PTR [rdx],ch
   14000cd6c:	add    BYTE PTR [rax],al
   14000cd6e:	add    BYTE PTR [rdx],ch
   14000cd70:	add    BYTE PTR [rax],al
   14000cd72:	add    BYTE PTR [rdx],ch
   14000cd74:	add    BYTE PTR [rax],al
   14000cd76:	add    BYTE PTR [rdx],ch
   14000cd78:	add    BYTE PTR [rax],al
   14000cd7a:	add    BYTE PTR [rdx],ch
   14000cd7c:	add    BYTE PTR [rax],al
   14000cd7e:	add    BYTE PTR [rdx],ch
   14000cd80:	add    BYTE PTR [rax],al
   14000cd82:	add    BYTE PTR [rdx],ch
   14000cd84:	add    BYTE PTR [rax],al
   14000cd86:	add    BYTE PTR [rdx],ch
   14000cd88:	add    BYTE PTR [rax],al
   14000cd8a:	add    BYTE PTR [rdx],ch
   14000cd8c:	add    BYTE PTR [rax],al
   14000cd8e:	add    BYTE PTR [rdx],ch
   14000cd90:	add    BYTE PTR [rax],al
   14000cd92:	add    BYTE PTR [rdx],ch
   14000cd94:	add    BYTE PTR [rax],al
   14000cd96:	add    BYTE PTR [rdx],ch
   14000cd98:	add    BYTE PTR [rax],al
   14000cd9a:	add    BYTE PTR [rdx],ch
   14000cd9c:	add    BYTE PTR [rax],al
   14000cd9e:	add    BYTE PTR [rdx],ch
   14000cda0:	add    BYTE PTR [rax],al
   14000cda2:	add    BYTE PTR [rdx],ch
   14000cda4:	add    BYTE PTR [rax],al
   14000cda6:	add    BYTE PTR [rdx],ch
   14000cda8:	add    BYTE PTR [rax],al
   14000cdaa:	add    BYTE PTR [rdx],ch
   14000cdac:	add    BYTE PTR [rax],al
   14000cdae:	add    BYTE PTR [rdx],ch
   14000cdb0:	add    BYTE PTR [rax],al
   14000cdb2:	add    BYTE PTR [rdx],ch
   14000cdb4:	add    BYTE PTR [rax],al
   14000cdb6:	add    BYTE PTR [rdx],ch
   14000cdb8:	add    BYTE PTR [rax],al
   14000cdba:	add    BYTE PTR [rdx],ch
   14000cdbc:	add    BYTE PTR [rax],al
   14000cdbe:	add    BYTE PTR [rdx],ch
   14000cdc0:	add    BYTE PTR [rax],al
   14000cdc2:	add    BYTE PTR [rbx],ah
   14000cdc4:	add    BYTE PTR [rax],al
   14000cdc6:	add    BYTE PTR [rcx],dl
   14000cdc8:	add    BYTE PTR [rax],al
   14000cdca:	add    BYTE PTR [rbx],al
	...
   14000cdd4:	js     0x14000ce4a
   14000cdd6:	jb     0x14000ce1d
   14000cdd8:	mov    BYTE PTR [rcx+rax*4-0x7e7b7701],al
   14000cddf:	dec    DWORD PTR [rax-0x77007e7c]
   14000cde5:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000cdeb:	dec    DWORD PTR [rax-0x77007e7c]
   14000cdf1:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000cdf7:	dec    DWORD PTR [rax-0x77007e7c]
   14000cdfd:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce03:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce09:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce0f:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce15:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce1b:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce21:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce27:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce2d:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce33:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce39:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce3f:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce45:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce4b:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce51:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce57:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce5d:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce63:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce69:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce6f:	dec    DWORD PTR [rax-0x77007e7c]
   14000ce75:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000ce7b:	dec    DWORD PTR [rax+0xff8184]
   14000ce81:	add    BYTE PTR [rax],al
   14000ce83:	xor    al,0x0
   14000ce85:	add    BYTE PTR [rax],al
   14000ce87:	and    eax,DWORD PTR [rax]
   14000ce89:	add    BYTE PTR [rax],al
   14000ce8b:	or     al,BYTE PTR [rax]
   14000ce8d:	add    BYTE PTR [rax],al
   14000ce8f:	add    BYTE PTR [rax],al
   14000ce91:	add    BYTE PTR [rax],al
   14000ce93:	add    BYTE PTR [rax-0x2e007e7c],cl
   14000ce99:	(bad)  
   14000ce9a:	mov    ebp,0xbdc6d1ff
   14000ce9f:	call   rcx
   14000cea1:	(bad)  
   14000cea2:	mov    ebp,0xbdc6d1ff
   14000cea7:	call   rcx
   14000cea9:	(bad)  
   14000ceaa:	mov    ebp,0xbdc6d1ff
   14000ceaf:	call   rcx
   14000ceb1:	(bad)  
   14000ceb2:	mov    ebp,0xbdc6d1ff
   14000ceb7:	call   rcx
   14000ceb9:	(bad)  
   14000ceba:	mov    ebp,0xbdc6d1ff
   14000cebf:	call   rcx
   14000cec1:	(bad)  
   14000cec2:	mov    ebp,0xbdc6d1ff
   14000cec7:	call   rcx
   14000cec9:	(bad)  
   14000ceca:	mov    ebp,0xbdc6d1ff
   14000cecf:	call   rcx
   14000ced1:	(bad)  
   14000ced2:	mov    ebp,0xbdc6d1ff
   14000ced7:	call   rcx
   14000ced9:	(bad)  
   14000ceda:	mov    ebp,0xbdc6d1ff
   14000cedf:	call   rcx
   14000cee1:	(bad)  
   14000cee2:	mov    ebp,0xbdc6d1ff
   14000cee7:	call   rcx
   14000cee9:	(bad)  
   14000ceea:	mov    ebp,0xbdc6d1ff
   14000ceef:	call   rcx
   14000cef1:	(bad)  
   14000cef2:	mov    ebp,0xbdc6d1ff
   14000cef7:	call   rcx
   14000cef9:	(bad)  
   14000cefa:	mov    ebp,0xbdc6d1ff
   14000ceff:	call   rcx
   14000cf01:	(bad)  
   14000cf02:	mov    ebp,0xbdc6d1ff
   14000cf07:	call   rcx
   14000cf09:	(bad)  
   14000cf0a:	mov    ebp,0xbdc6d1ff
   14000cf0f:	call   rcx
   14000cf11:	(bad)  
   14000cf12:	mov    ebp,0xbdc6d1ff
   14000cf17:	call   rcx
   14000cf19:	(bad)  
   14000cf1a:	mov    ebp,0xbdc6d1ff
   14000cf1f:	call   rcx
   14000cf21:	(bad)  
   14000cf22:	mov    ebp,0xbdc6d1ff
   14000cf27:	call   rcx
   14000cf29:	(bad)  
   14000cf2a:	mov    ebp,0xbdc6d1ff
   14000cf2f:	call   rcx
   14000cf31:	(bad)  
   14000cf32:	mov    ebp,0xbdc6d1ff
   14000cf37:	call   rcx
   14000cf39:	(bad)  
   14000cf3a:	mov    ebp,0xbdc6d1ff
   14000cf3f:	dec    DWORD PTR [rax+0xff8184]
   14000cf45:	add    BYTE PTR [rax],al
   14000cf47:	sub    al,BYTE PTR [rax]
   14000cf49:	add    BYTE PTR [rax],al
   14000cf4b:	(bad)  
	...
   14000cf54:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000cf5b:	(bad)  
   14000cf5c:	std    
   14000cf5d:	(bad)  
   14000cf5e:	(bad)  
   14000cf5f:	(bad)  
   14000cf60:	std    
   14000cf61:	(bad)  
   14000cf62:	(bad)  
   14000cf63:	(bad)  
   14000cf64:	std    
   14000cf65:	(bad)  
   14000cf66:	(bad)  
   14000cf67:	(bad)  
   14000cf68:	std    
   14000cf69:	(bad)  
   14000cf6a:	(bad)  
   14000cf6b:	(bad)  
   14000cf6c:	std    
   14000cf6d:	(bad)  
   14000cf6e:	(bad)  
   14000cf6f:	(bad)  
   14000cf70:	std    
   14000cf71:	(bad)  
   14000cf72:	(bad)  
   14000cf73:	(bad)  
   14000cf74:	std    
   14000cf75:	(bad)  
   14000cf76:	(bad)  
   14000cf77:	(bad)  
   14000cf78:	std    
   14000cf79:	(bad)  
   14000cf7a:	(bad)  
   14000cf7b:	(bad)  
   14000cf7c:	std    
   14000cf7d:	(bad)  
   14000cf7e:	(bad)  
   14000cf7f:	(bad)  
   14000cf80:	std    
   14000cf81:	(bad)  
   14000cf82:	(bad)  
   14000cf83:	(bad)  
   14000cf84:	std    
   14000cf85:	(bad)  
   14000cf86:	(bad)  
   14000cf87:	(bad)  
   14000cf88:	std    
   14000cf89:	(bad)  
   14000cf8a:	(bad)  
   14000cf8b:	(bad)  
   14000cf8c:	std    
   14000cf8d:	(bad)  
   14000cf8e:	(bad)  
   14000cf8f:	(bad)  
   14000cf90:	std    
   14000cf91:	(bad)  
   14000cf92:	(bad)  
   14000cf93:	(bad)  
   14000cf94:	std    
   14000cf95:	(bad)  
   14000cf96:	(bad)  
   14000cf97:	(bad)  
   14000cf98:	std    
   14000cf99:	(bad)  
   14000cf9a:	(bad)  
   14000cf9b:	(bad)  
   14000cf9c:	std    
   14000cf9d:	(bad)  
   14000cf9e:	(bad)  
   14000cf9f:	(bad)  
   14000cfa0:	std    
   14000cfa1:	(bad)  
   14000cfa2:	(bad)  
   14000cfa3:	(bad)  
   14000cfa4:	std    
   14000cfa5:	(bad)  
   14000cfa6:	(bad)  
   14000cfa7:	(bad)  
   14000cfa8:	std    
   14000cfa9:	(bad)  
   14000cfaa:	(bad)  
   14000cfab:	(bad)  
   14000cfac:	std    
   14000cfad:	(bad)  
   14000cfae:	(bad)  
   14000cfaf:	(bad)  
   14000cfb0:	std    
   14000cfb1:	(bad)  
   14000cfb2:	(bad)  
   14000cfb3:	(bad)  
   14000cfb4:	std    
   14000cfb5:	(bad)  
   14000cfb6:	(bad)  
   14000cfb7:	(bad)  
   14000cfb8:	std    
   14000cfb9:	(bad)  
   14000cfba:	(bad)  
   14000cfbb:	(bad)  
   14000cfbc:	std    
   14000cfbd:	(bad)  
   14000cfbe:	(bad)  
   14000cfbf:	(bad)  
   14000cfc0:	std    
   14000cfc1:	(bad)  
   14000cfc2:	(bad)  
   14000cfc3:	(bad)  
   14000cfc4:	std    
   14000cfc5:	(bad)  
   14000cfc6:	(bad)  
   14000cfc7:	(bad)  
   14000cfc8:	std    
   14000cfc9:	(bad)  
   14000cfca:	(bad)  
   14000cfcb:	(bad)  
   14000cfcc:	std    
   14000cfcd:	(bad)  
   14000cfce:	(bad)  
   14000cfcf:	(bad)  
   14000cfd0:	std    
   14000cfd1:	(bad)  
   14000cfd2:	(bad)  
   14000cfd3:	(bad)  
   14000cfd4:	std    
   14000cfd5:	(bad)  
   14000cfd6:	(bad)  
   14000cfd7:	(bad)  
   14000cfd8:	std    
   14000cfd9:	(bad)  
   14000cfda:	(bad)  
   14000cfdb:	(bad)  
   14000cfdc:	std    
   14000cfdd:	(bad)  
   14000cfde:	(bad)  
   14000cfdf:	(bad)  
   14000cfe0:	std    
   14000cfe1:	(bad)  
   14000cfe2:	(bad)  
   14000cfe3:	(bad)  
   14000cfe4:	std    
   14000cfe5:	(bad)  
   14000cfe6:	(bad)  
   14000cfe7:	(bad)  
   14000cfe8:	std    
   14000cfe9:	(bad)  
   14000cfea:	(bad)  
   14000cfeb:	(bad)  
   14000cfec:	std    
   14000cfed:	(bad)  
   14000cfee:	(bad)  
   14000cfef:	(bad)  
   14000cff0:	std    
   14000cff1:	(bad)  
   14000cff2:	(bad)  
   14000cff3:	(bad)  
   14000cff4:	std    
   14000cff5:	(bad)  
   14000cff6:	(bad)  
   14000cff7:	(bad)  
   14000cff8:	std    
   14000cff9:	(bad)  
   14000cffa:	(bad)  
   14000cffb:	call   rcx
   14000cffd:	(bad)  
   14000cffe:	mov    ebp,0x818488ff
   14000d003:	inc    DWORD PTR [rax]
   14000d005:	add    BYTE PTR [rax],al
   14000d007:	sub    al,BYTE PTR [rax]
   14000d009:	add    BYTE PTR [rax],al
   14000d00b:	(bad)  
	...
   14000d014:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d01b:	(bad)  
   14000d01c:	std    
   14000d01d:	(bad)  
   14000d01e:	(bad)  
   14000d01f:	(bad)  
   14000d020:	std    
   14000d021:	(bad)  
   14000d022:	(bad)  
   14000d023:	(bad)  
   14000d024:	std    
   14000d025:	(bad)  
   14000d026:	(bad)  
   14000d027:	(bad)  
   14000d028:	std    
   14000d029:	(bad)  
   14000d02a:	(bad)  
   14000d02b:	(bad)  
   14000d02c:	std    
   14000d02d:	(bad)  
   14000d02e:	(bad)  
   14000d02f:	(bad)  
   14000d030:	std    
   14000d031:	(bad)  
   14000d032:	(bad)  
   14000d033:	(bad)  
   14000d034:	std    
   14000d035:	(bad)  
   14000d036:	(bad)  
   14000d037:	(bad)  
   14000d038:	std    
   14000d039:	(bad)  
   14000d03a:	(bad)  
   14000d03b:	(bad)  
   14000d03c:	std    
   14000d03d:	(bad)  
   14000d03e:	(bad)  
   14000d03f:	(bad)  
   14000d040:	std    
   14000d041:	(bad)  
   14000d042:	(bad)  
   14000d043:	(bad)  
   14000d044:	std    
   14000d045:	(bad)  
   14000d046:	(bad)  
   14000d047:	(bad)  
   14000d048:	std    
   14000d049:	(bad)  
   14000d04a:	(bad)  
   14000d04b:	(bad)  
   14000d04c:	std    
   14000d04d:	(bad)  
   14000d04e:	(bad)  
   14000d04f:	(bad)  
   14000d050:	std    
   14000d051:	(bad)  
   14000d052:	(bad)  
   14000d053:	(bad)  
   14000d054:	std    
   14000d055:	(bad)  
   14000d056:	(bad)  
   14000d057:	(bad)  
   14000d058:	sti    
   14000d059:	cld    
   14000d05a:	cld    
   14000d05b:	(bad)  
   14000d05c:	cli    
   14000d05d:	sti    
   14000d05e:	sti    
   14000d05f:	(bad)  
   14000d060:	clc    
   14000d061:	stc    
   14000d062:	stc    
   14000d063:	push   rdi
   14000d065:	div    edi
   14000d067:	push   rbp
   14000d069:	div    dh
   14000d06b:	push   rsp
   14000d06d:	hlt    
   14000d06e:	hlt    
   14000d06f:	push   rbx
   14000d071:	repz repz push rcx
   14000d075:	repnz repnz push rcx
   14000d079:	icebp  
   14000d07a:	icebp  
   14000d07b:	push   rax
   14000d07d:	lock lock (bad) 
   14000d080:	out    dx,eax
   14000d081:	lock lock (bad) 
   14000d084:	out    dx,eax
   14000d085:	out    dx,eax
   14000d086:	out    dx,eax
   14000d087:	(bad)  
   14000d088:	out    dx,al
   14000d089:	out    dx,al
   14000d08a:	out    dx,al
   14000d08b:	(bad)  
   14000d08c:	out    dx,al
   14000d08d:	out    dx,al
   14000d08e:	out    dx,al
   14000d08f:	(bad)  
   14000d090:	in     eax,dx
   14000d091:	in     eax,dx
   14000d092:	in     eax,dx
   14000d093:	(bad)  
   14000d094:	in     eax,dx
   14000d095:	in     eax,dx
   14000d096:	in     eax,dx
   14000d097:	(bad)  
   14000d098:	in     eax,dx
   14000d099:	in     eax,dx
   14000d09a:	in     eax,dx
   14000d09b:	(bad)  
   14000d09c:	in     al,dx
   14000d09d:	in     al,dx
   14000d09e:	in     al,dx
   14000d09f:	(bad)  
   14000d0a0:	in     al,dx
   14000d0a1:	in     al,dx
   14000d0a2:	in     al,dx
   14000d0a3:	(bad)  
   14000d0a4:	in     al,dx
   14000d0a5:	in     al,dx
   14000d0a6:	in     al,dx
   14000d0a7:	(bad)  
   14000d0a8:	in     al,dx
   14000d0a9:	in     al,dx
   14000d0aa:	in     al,dx
   14000d0ab:	(bad)  
   14000d0ac:	in     al,dx
   14000d0ad:	in     al,dx
   14000d0ae:	in     al,dx
   14000d0af:	(bad)  
   14000d0b0:	in     al,dx
   14000d0b1:	in     al,dx
   14000d0b2:	in     al,dx
   14000d0b3:	(bad)  
   14000d0b4:	in     al,dx
   14000d0b5:	in     al,dx
   14000d0b6:	in     al,dx
   14000d0b7:	(bad)  
   14000d0b8:	std    
   14000d0b9:	(bad)  
   14000d0ba:	(bad)  
   14000d0bb:	call   rcx
   14000d0bd:	(bad)  
   14000d0be:	mov    ebp,0x818488ff
   14000d0c3:	inc    DWORD PTR [rax]
   14000d0c5:	add    BYTE PTR [rax],al
   14000d0c7:	sub    al,BYTE PTR [rax]
   14000d0c9:	add    BYTE PTR [rax],al
   14000d0cb:	(bad)  
	...
   14000d0d4:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d0db:	(bad)  
   14000d0dc:	std    
   14000d0dd:	(bad)  
   14000d0de:	(bad)  
   14000d0df:	(bad)  
   14000d0e0:	std    
   14000d0e1:	(bad)  
   14000d0e2:	(bad)  
   14000d0e3:	(bad)  
   14000d0e4:	std    
   14000d0e5:	(bad)  
   14000d0e6:	(bad)  
   14000d0e7:	jmp    rsi
   14000d0e9:	out    0xe7,al
   14000d0eb:	jmp    rsi
   14000d0ed:	out    0xe7,al
   14000d0ef:	jmp    rsi
   14000d0f1:	out    0xe7,al
   14000d0f3:	jmp    rsi
   14000d0f5:	out    0xe7,al
   14000d0f7:	jmp    rsi
   14000d0f9:	out    0xe7,al
   14000d0fb:	jmp    rsi
   14000d0fd:	out    0xe7,al
   14000d0ff:	jmp    rsi
   14000d101:	out    0xe7,al
   14000d103:	jmp    rsi
   14000d105:	out    0xe7,al
   14000d107:	jmp    rsi
   14000d109:	out    0xe7,al
   14000d10b:	jmp    rsi
   14000d10d:	out    0xe7,al
   14000d10f:	jmp    rsi
   14000d111:	out    0xe7,al
   14000d113:	jmp    rsi
   14000d115:	out    0xe7,al
   14000d117:	jmp    rsi
   14000d119:	out    0xe7,al
   14000d11b:	jmp    rdi
   14000d11d:	out    0xe8,eax
   14000d11f:	(bad)  
   14000d120:	call   0x12700bb0d
   14000d125:	out    0xe7,al
   14000d127:	jmp    rsi
   14000d129:	out    0xe7,al
   14000d12b:	jmp    rsi
   14000d12d:	out    0xe7,al
   14000d12f:	jmp    rsi
   14000d131:	out    0xe7,al
   14000d133:	push   rsp
   14000d135:	hlt    
   14000d136:	hlt    
   14000d137:	push   rdx
   14000d139:	repnz repnz push rcx
   14000d13d:	repnz repnz push rax
   14000d141:	icebp  
   14000d142:	icebp  
   14000d143:	push   rax
   14000d145:	lock lock (bad) 
   14000d148:	out    dx,eax
   14000d149:	out    dx,eax
   14000d14a:	out    dx,eax
   14000d14b:	(bad)  
   14000d14c:	out    dx,eax
   14000d14d:	out    dx,eax
   14000d14e:	out    dx,eax
   14000d14f:	(bad)  
   14000d150:	out    dx,al
   14000d151:	out    dx,al
   14000d152:	out    dx,al
   14000d153:	(bad)  
   14000d154:	out    dx,al
   14000d155:	out    dx,al
   14000d156:	out    dx,al
   14000d157:	(bad)  
   14000d158:	in     eax,dx
   14000d159:	in     eax,dx
   14000d15a:	in     eax,dx
   14000d15b:	(bad)  
   14000d15c:	in     eax,dx
   14000d15d:	in     eax,dx
   14000d15e:	in     eax,dx
   14000d15f:	(bad)  
   14000d160:	in     al,dx
   14000d161:	in     al,dx
   14000d162:	in     al,dx
   14000d163:	(bad)  
   14000d164:	in     al,dx
   14000d165:	in     al,dx
   14000d166:	in     al,dx
   14000d167:	(bad)  
   14000d168:	in     al,dx
   14000d169:	in     al,dx
   14000d16a:	in     al,dx
   14000d16b:	(bad)  
   14000d16c:	in     al,dx
   14000d16d:	in     al,dx
   14000d16e:	in     al,dx
   14000d16f:	(bad)  
   14000d170:	in     al,dx
   14000d171:	in     al,dx
   14000d172:	in     al,dx
   14000d173:	(bad)  
   14000d174:	in     al,dx
   14000d175:	in     al,dx
   14000d176:	in     al,dx
   14000d177:	(bad)  
   14000d178:	std    
   14000d179:	(bad)  
   14000d17a:	(bad)  
   14000d17b:	call   rcx
   14000d17d:	(bad)  
   14000d17e:	mov    ebp,0x818488ff
   14000d183:	inc    DWORD PTR [rax]
   14000d185:	add    BYTE PTR [rax],al
   14000d187:	sub    al,BYTE PTR [rax]
   14000d189:	add    BYTE PTR [rax],al
   14000d18b:	(bad)  
	...
   14000d194:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d19b:	(bad)  
   14000d19c:	std    
   14000d19d:	(bad)  
   14000d19e:	(bad)  
   14000d19f:	(bad)  
   14000d1a0:	std    
   14000d1a1:	(bad)  
   14000d1a2:	(bad)  
   14000d1a3:	push   QWORD PTR [rdx-0x2e00595a]
   14000d1a9:	mov    ebp,0xbdd1ffbc
   14000d1ae:	mov    esp,0xbcbdd1ff
   14000d1b3:	call   rcx
   14000d1b5:	mov    ebp,0xbdd1ffbc
   14000d1ba:	mov    esp,0xbcbdd1ff
   14000d1bf:	call   rcx
   14000d1c1:	mov    ebp,0xbdd1ffbc
   14000d1c6:	mov    esp,0xbcbdd1ff
   14000d1cb:	call   rcx
   14000d1cd:	mov    ebp,0xbdd1ffbc
   14000d1d2:	mov    esp,0xbcbdd1ff
   14000d1d7:	call   rcx
   14000d1d9:	mov    ebp,0xbdd1ffbc
   14000d1de:	mov    esp,0xbcbdd1ff
   14000d1e3:	call   rcx
   14000d1e5:	mov    ebp,0xbdd1ffbc
   14000d1ea:	mov    esp,0xa7a8b3ff
   14000d1ef:	jmp    rsi
   14000d1f1:	out    0xe7,al
   14000d1f3:	push   rsp
   14000d1f5:	hlt    
   14000d1f6:	hlt    
   14000d1f7:	push   rbx
   14000d1f9:	repz repz push rdx
   14000d1fd:	repz repz push rdx
   14000d201:	repnz repnz push rcx
   14000d205:	icebp  
   14000d206:	icebp  
   14000d207:	push   rax
   14000d209:	icebp  
   14000d20a:	icebp  
   14000d20b:	push   rax
   14000d20d:	lock lock (bad) 
   14000d210:	out    dx,eax
   14000d211:	out    dx,eax
   14000d212:	out    dx,eax
   14000d213:	(bad)  
   14000d214:	out    dx,al
   14000d215:	out    dx,eax
   14000d216:	out    dx,eax
   14000d217:	(bad)  
   14000d218:	out    dx,al
   14000d219:	out    dx,al
   14000d21a:	out    dx,al
   14000d21b:	(bad)  
   14000d21c:	in     eax,dx
   14000d21d:	out    dx,al
   14000d21e:	out    dx,al
   14000d21f:	(bad)  
   14000d220:	in     eax,dx
   14000d221:	in     eax,dx
   14000d222:	in     eax,dx
   14000d223:	(bad)  
   14000d224:	in     eax,dx
   14000d225:	in     eax,dx
   14000d226:	in     eax,dx
   14000d227:	(bad)  
   14000d228:	in     al,dx
   14000d229:	in     al,dx
   14000d22a:	in     al,dx
   14000d22b:	(bad)  
   14000d22c:	in     al,dx
   14000d22d:	in     al,dx
   14000d22e:	in     al,dx
   14000d22f:	(bad)  
   14000d230:	in     al,dx
   14000d231:	in     al,dx
   14000d232:	in     al,dx
   14000d233:	(bad)  
   14000d234:	in     al,dx
   14000d235:	in     al,dx
   14000d236:	in     al,dx
   14000d237:	(bad)  
   14000d238:	std    
   14000d239:	(bad)  
   14000d23a:	(bad)  
   14000d23b:	call   rcx
   14000d23d:	(bad)  
   14000d23e:	mov    ebp,0x818488ff
   14000d243:	inc    DWORD PTR [rax]
   14000d245:	add    BYTE PTR [rax],al
   14000d247:	sub    al,BYTE PTR [rax]
   14000d249:	add    BYTE PTR [rax],al
   14000d24b:	(bad)  
	...
   14000d254:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d25b:	(bad)  
   14000d25c:	std    
   14000d25d:	(bad)  
   14000d25e:	(bad)  
   14000d25f:	(bad)  
   14000d260:	std    
   14000d261:	(bad)  
   14000d262:	(bad)  
   14000d263:	call   rcx
   14000d265:	mov    ebp,0x9f85ffbc
   14000d26a:	push   rsi
   14000d26b:	inc    DWORD PTR [rax+riz*4-0x5d7d00a9]
   14000d272:	pop    rax
   14000d273:	inc    DWORD PTR [rcx-0x7f00a55d]
   14000d279:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d27a:	pop    rbx
   14000d27b:	(bad)  
   14000d27c:	jle    0x14000d224
   14000d27e:	pop    rsp
   14000d27f:	(bad)  
   14000d280:	jge    0x14000d22a
   14000d282:	pop    rbp
   14000d283:	(bad)  
   14000d284:	jl     0x14000d22f
   14000d286:	pop    rsi
   14000d287:	(bad)  
   14000d288:	jp     0x14000d234
   14000d28a:	pop    rdi
   14000d28b:	(bad)  
   14000d28c:	jns    0x14000d23a
   14000d28e:	(bad)  
   14000d28f:	(bad)  
   14000d290:	js     0x14000d23f
   14000d292:	(bad)  
   14000d293:	push   QWORD PTR [rsi-0x52]
   14000d296:	(bad)  
   14000d297:	push   QWORD PTR [rbp-0x51]
   14000d29a:	movsxd edi,edi
   14000d29c:	je     0x14000d24e
   14000d29e:	push   QWORD PTR fs:[rbx-0x4f]
   14000d2a2:	push   QWORD PTR gs:[rdx-0x4e]
   14000d2a6:	push   WORD PTR [rcx-0x4d]
   14000d2aa:	addr32 call rcx
   14000d2ad:	mov    ebp,0xe6e6ffbc
   14000d2b2:	out    0xff,eax
   14000d2b4:	cmc    
   14000d2b5:	cmc    
   14000d2b6:	cmc    
   14000d2b7:	push   rsp
   14000d2b9:	cmc    
   14000d2ba:	cmc    
   14000d2bb:	(bad)  
   14000d2bc:	fstp   st(5)
   14000d2be:	(bad)  
   14000d2c0:	fstp   st(5)
   14000d2c2:	(bad)  
   14000d2c4:	fstp   st(5)
   14000d2c6:	(bad)  
   14000d2c8:	fstp   st(5)
   14000d2ca:	(bad)  
   14000d2cc:	fstp   st(5)
   14000d2ce:	(bad)  
   14000d2d0:	fstp   st(5)
   14000d2d2:	(bad)  
   14000d2d4:	fstp   st(5)
   14000d2d6:	(bad)  
   14000d2d8:	fstp   st(5)
   14000d2da:	(bad)  
   14000d2dc:	out    dx,al
   14000d2dd:	out    dx,al
   14000d2de:	out    dx,al
   14000d2df:	(bad)  
   14000d2e0:	out    dx,al
   14000d2e1:	out    dx,al
   14000d2e2:	out    dx,al
   14000d2e3:	(bad)  
   14000d2e4:	in     eax,dx
   14000d2e5:	in     eax,dx
   14000d2e6:	in     eax,dx
   14000d2e7:	(bad)  
   14000d2e8:	in     eax,dx
   14000d2e9:	in     eax,dx
   14000d2ea:	in     eax,dx
   14000d2eb:	(bad)  
   14000d2ec:	in     eax,dx
   14000d2ed:	in     eax,dx
   14000d2ee:	in     eax,dx
   14000d2ef:	(bad)  
   14000d2f0:	in     al,dx
   14000d2f1:	in     al,dx
   14000d2f2:	in     al,dx
   14000d2f3:	(bad)  
   14000d2f4:	in     al,dx
   14000d2f5:	in     al,dx
   14000d2f6:	in     al,dx
   14000d2f7:	(bad)  
   14000d2f8:	std    
   14000d2f9:	(bad)  
   14000d2fa:	(bad)  
   14000d2fb:	call   rcx
   14000d2fd:	(bad)  
   14000d2fe:	mov    ebp,0x818488ff
   14000d303:	inc    DWORD PTR [rax]
   14000d305:	add    BYTE PTR [rax],al
   14000d307:	sub    al,BYTE PTR [rax]
   14000d309:	add    BYTE PTR [rax],al
   14000d30b:	(bad)  
	...
   14000d314:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d31b:	(bad)  
   14000d31c:	std    
   14000d31d:	(bad)  
   14000d31e:	(bad)  
   14000d31f:	(bad)  
   14000d320:	std    
   14000d321:	(bad)  
   14000d322:	(bad)  
   14000d323:	call   rcx
   14000d325:	mov    ebp,0x9d87ffbc
   14000d32a:	push   rbp
   14000d32b:	inc    DWORD PTR [rbp-0x7b00a962]
   14000d331:	movabs al,ds:0xa381ff58a183ff57
   14000d33a:	pop    rcx
   14000d33b:	inc    DWORD PTR [rax+0x7fff5aa4]
   14000d341:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d342:	pop    rbx
   14000d343:	(bad)  
   14000d344:	jge    0x14000d2ed
   14000d346:	pop    rbp
   14000d347:	(bad)  
   14000d348:	jl     0x14000d2f3
   14000d34a:	pop    rsi
   14000d34b:	(bad)  
   14000d34c:	jnp    0x14000d2f8
   14000d34e:	pop    rdi
   14000d34f:	(bad)  
   14000d350:	jns    0x14000d2fd
   14000d352:	(bad)  
   14000d353:	(bad)  
   14000d354:	js     0x14000d302
   14000d356:	(bad)  
   14000d357:	push   QWORD PTR [rdi-0x52]
   14000d35a:	(bad)  
   14000d35b:	push   QWORD PTR [rbp-0x51]
   14000d35e:	movsxd edi,edi
   14000d360:	je     0x14000d312
   14000d362:	push   QWORD PTR fs:[rbx-0x4f]
   14000d366:	push   QWORD PTR gs:[rdx-0x4e]
   14000d36a:	call   cx
   14000d36d:	mov    ebp,0xe6e6ffbc
   14000d372:	out    0xff,eax
   14000d374:	div    bh
   14000d376:	idiv   edi
   14000d378:	cmc    
   14000d379:	div    dh
   14000d37b:	push   rbp
   14000d37d:	cmc    
   14000d37e:	cmc    
   14000d37f:	push   rsp
   14000d381:	cmc    
   14000d382:	cmc    
   14000d383:	push   rsp
   14000d385:	hlt    
   14000d386:	hlt    
   14000d387:	push   rbx
   14000d389:	repz repz push rdx
   14000d38d:	repnz repnz push rcx
   14000d391:	repnz repnz push rcx
   14000d395:	icebp  
   14000d396:	icebp  
   14000d397:	push   rax
   14000d399:	lock lock (bad) 
   14000d39c:	out    dx,eax
   14000d39d:	out    dx,eax
   14000d39e:	out    dx,eax
   14000d39f:	(bad)  
   14000d3a0:	out    dx,eax
   14000d3a1:	out    dx,eax
   14000d3a2:	out    dx,eax
   14000d3a3:	(bad)  
   14000d3a4:	out    dx,al
   14000d3a5:	out    dx,al
   14000d3a6:	out    dx,al
   14000d3a7:	(bad)  
   14000d3a8:	out    dx,al
   14000d3a9:	out    dx,al
   14000d3aa:	out    dx,al
   14000d3ab:	(bad)  
   14000d3ac:	in     eax,dx
   14000d3ad:	in     eax,dx
   14000d3ae:	in     eax,dx
   14000d3af:	(bad)  
   14000d3b0:	in     eax,dx
   14000d3b1:	in     eax,dx
   14000d3b2:	in     eax,dx
   14000d3b3:	(bad)  
   14000d3b4:	in     al,dx
   14000d3b5:	in     al,dx
   14000d3b6:	in     al,dx
   14000d3b7:	(bad)  
   14000d3b8:	std    
   14000d3b9:	(bad)  
   14000d3ba:	(bad)  
   14000d3bb:	call   rcx
   14000d3bd:	(bad)  
   14000d3be:	mov    ebp,0x818488ff
   14000d3c3:	inc    DWORD PTR [rax]
   14000d3c5:	add    BYTE PTR [rax],al
   14000d3c7:	sub    al,BYTE PTR [rax]
   14000d3c9:	add    BYTE PTR [rax],al
   14000d3cb:	(bad)  
	...
   14000d3d4:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d3db:	(bad)  
   14000d3dc:	std    
   14000d3dd:	(bad)  
   14000d3de:	(bad)  
   14000d3df:	(bad)  
   14000d3e0:	std    
   14000d3e1:	(bad)  
   14000d3e2:	(bad)  
   14000d3e3:	call   rcx
   14000d3e5:	mov    ebp,0x9b88ffbc
   14000d3ea:	push   rbx
   14000d3eb:	inc    DWORD PTR [rdi-0x7900ab64]
   14000d3f1:	sahf   
   14000d3f2:	push   rsi
   14000d3f3:	inc    DWORD PTR [rbp-0x7c00a861]
   14000d3f9:	movabs eax,ds:0xa481ff59a282ff58
   14000d402:	pop    rdx
   14000d403:	(bad)  
   14000d404:	jg     0x14000d3ab
   14000d406:	pop    rbx
   14000d407:	(bad)  
   14000d408:	jle    0x14000d3b1
   14000d40a:	pop    rsp
   14000d40b:	(bad)  
   14000d40c:	jl     0x14000d3b6
   14000d40e:	pop    rbp
   14000d40f:	(bad)  
   14000d410:	jnp    0x14000d3bb
   14000d412:	pop    rsi
   14000d413:	(bad)  
   14000d414:	jp     0x14000d3c1
   14000d416:	(bad)  
   14000d417:	(bad)  
   14000d418:	js     0x14000d3c6
   14000d41a:	(bad)  
   14000d41b:	push   QWORD PTR [rdi-0x53]
   14000d41e:	(bad)  
   14000d41f:	push   QWORD PTR [rsi-0x52]
   14000d422:	movsxd edi,edi
   14000d424:	jne    0x14000d3d6
   14000d426:	push   QWORD PTR fs:[rcx+rsi*4+0x65]
   14000d42b:	call   rcx
   14000d42d:	mov    ebp,0xe6e6ffbc
   14000d432:	out    0xff,eax
   14000d434:	idiv   eax
   14000d436:	clc    
   14000d437:	push   rdi
   14000d439:	div    edi
   14000d43b:	(bad)  
   14000d43c:	fstp   st(5)
   14000d43e:	(bad)  
   14000d440:	fstp   st(5)
   14000d442:	(bad)  
   14000d444:	fstp   st(5)
   14000d446:	(bad)  
   14000d448:	fstp   st(5)
   14000d44a:	(bad)  
   14000d44c:	fstp   st(5)
   14000d44e:	(bad)  
   14000d450:	fstp   st(5)
   14000d452:	(bad)  
   14000d454:	fstp   st(5)
   14000d456:	(bad)  
   14000d458:	fstp   st(5)
   14000d45a:	(bad)  
   14000d45c:	lock icebp 
   14000d45e:	icebp  
   14000d45f:	push   rax
   14000d461:	lock lock (bad) 
   14000d464:	out    dx,eax
   14000d465:	out    dx,eax
   14000d466:	out    dx,eax
   14000d467:	(bad)  
   14000d468:	out    dx,al
   14000d469:	out    dx,eax
   14000d46a:	out    dx,eax
   14000d46b:	(bad)  
   14000d46c:	out    dx,al
   14000d46d:	out    dx,al
   14000d46e:	out    dx,al
   14000d46f:	(bad)  
   14000d470:	in     eax,dx
   14000d471:	in     eax,dx
   14000d472:	in     eax,dx
   14000d473:	(bad)  
   14000d474:	in     eax,dx
   14000d475:	in     eax,dx
   14000d476:	in     eax,dx
   14000d477:	(bad)  
   14000d478:	std    
   14000d479:	(bad)  
   14000d47a:	(bad)  
   14000d47b:	call   rcx
   14000d47d:	(bad)  
   14000d47e:	mov    ebp,0x818488ff
   14000d483:	inc    DWORD PTR [rax]
   14000d485:	add    BYTE PTR [rax],al
   14000d487:	sub    al,BYTE PTR [rax]
   14000d489:	add    BYTE PTR [rax],al
   14000d48b:	(bad)  
	...
   14000d494:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d49b:	(bad)  
   14000d49c:	std    
   14000d49d:	(bad)  
   14000d49e:	(bad)  
   14000d49f:	(bad)  
   14000d4a0:	std    
   14000d4a1:	(bad)  
   14000d4a2:	(bad)  
   14000d4a3:	call   rcx
   14000d4a5:	mov    ebp,0x998affbc
   14000d4aa:	push   rdx
   14000d4ab:	dec    DWORD PTR [rcx-0x7800ac66]
   14000d4b1:	pushf  
   14000d4b2:	push   rsp
   14000d4b3:	inc    DWORD PTR [rsi-0x7a00aa63]
   14000d4b9:	lahf   
   14000d4ba:	push   rsi
   14000d4bb:	inc    DWORD PTR [rax+riz*4-0x5d7d00a9]
   14000d4c2:	pop    rax
   14000d4c3:	inc    DWORD PTR [rcx-0x7f00a55d]
   14000d4c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d4ca:	pop    rbx
   14000d4cb:	(bad)  
   14000d4cc:	jle    0x14000d474
   14000d4ce:	pop    rsp
   14000d4cf:	(bad)  
   14000d4d0:	jge    0x14000d47a
   14000d4d2:	pop    rbp
   14000d4d3:	(bad)  
   14000d4d4:	jl     0x14000d47f
   14000d4d6:	pop    rsi
   14000d4d7:	(bad)  
   14000d4d8:	jp     0x14000d484
   14000d4da:	pop    rdi
   14000d4db:	(bad)  
   14000d4dc:	jns    0x14000d48a
   14000d4de:	(bad)  
   14000d4df:	(bad)  
   14000d4e0:	js     0x14000d48f
   14000d4e2:	(bad)  
   14000d4e3:	push   QWORD PTR [rsi-0x52]
   14000d4e6:	(bad)  
   14000d4e7:	push   QWORD PTR [rbp-0x51]
   14000d4ea:	movsxd edi,edi
   14000d4ec:	sar    DWORD PTR [rbp-0x19190044],1
   14000d4f2:	out    0xff,eax
   14000d4f4:	clc    
   14000d4f5:	stc    
   14000d4f6:	stc    
   14000d4f7:	(bad)  
   14000d4f8:	clc    
   14000d4f9:	clc    
   14000d4fa:	clc    
   14000d4fb:	push   rdi
   14000d4fd:	clc    
   14000d4fe:	clc    
   14000d4ff:	push   rdi
   14000d501:	div    edi
   14000d503:	push   rsi
   14000d505:	div    edi
   14000d507:	push   rbp
   14000d509:	div    dh
   14000d50b:	push   rbp
   14000d50d:	cmc    
   14000d50e:	cmc    
   14000d50f:	push   rsp
   14000d511:	cmc    
   14000d512:	cmc    
   14000d513:	push   rbx
   14000d515:	hlt    
   14000d516:	hlt    
   14000d517:	push   rbx
   14000d519:	repz repz push rdx
   14000d51d:	repnz repnz push rcx
   14000d521:	icebp  
   14000d522:	icebp  
   14000d523:	push   rax
   14000d525:	lock lock (bad) 
   14000d528:	out    dx,eax
   14000d529:	lock lock (bad) 
   14000d52c:	out    dx,eax
   14000d52d:	out    dx,eax
   14000d52e:	out    dx,eax
   14000d52f:	(bad)  
   14000d530:	out    dx,al
   14000d531:	out    dx,al
   14000d532:	out    dx,al
   14000d533:	(bad)  
   14000d534:	in     eax,dx
   14000d535:	out    dx,al
   14000d536:	out    dx,al
   14000d537:	(bad)  
   14000d538:	std    
   14000d539:	(bad)  
   14000d53a:	(bad)  
   14000d53b:	call   rcx
   14000d53d:	(bad)  
   14000d53e:	mov    ebp,0x818488ff
   14000d543:	inc    DWORD PTR [rax]
   14000d545:	add    BYTE PTR [rax],al
   14000d547:	sub    al,BYTE PTR [rax]
   14000d549:	add    BYTE PTR [rax],al
   14000d54b:	(bad)  
	...
   14000d554:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d55b:	(bad)  
   14000d55c:	std    
   14000d55d:	(bad)  
   14000d55e:	(bad)  
   14000d55f:	(bad)  
   14000d560:	std    
   14000d561:	(bad)  
   14000d562:	(bad)  
   14000d563:	call   rcx
   14000d565:	mov    ebp,0x978bffbc
   14000d56a:	push   rcx
   14000d56b:	dec    DWORD PTR [rdx-0x7600ad68]
   14000d571:	(bad)  
   14000d572:	push   rbx
   14000d573:	dec    DWORD PTR [rax-0x7800ab65]
   14000d579:	popf   
   14000d57a:	push   rbp
   14000d57b:	inc    DWORD PTR [rbp-0x7b00a962]
   14000d581:	movabs al,ds:0xa381ff58a183ff57
   14000d58a:	pop    rcx
   14000d58b:	inc    DWORD PTR [rax+0x7fff5aa4]
   14000d591:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d592:	pop    rbx
   14000d593:	(bad)  
   14000d594:	jge    0x14000d53d
   14000d596:	pop    rbp
   14000d597:	(bad)  
   14000d598:	jl     0x14000d543
   14000d59a:	pop    rsi
   14000d59b:	(bad)  
   14000d59c:	jnp    0x14000d548
   14000d59e:	pop    rdi
   14000d59f:	(bad)  
   14000d5a0:	jns    0x14000d54d
   14000d5a2:	(bad)  
   14000d5a3:	(bad)  
   14000d5a4:	js     0x14000d552
   14000d5a6:	(bad)  
   14000d5a7:	push   QWORD PTR [rdi-0x52]
   14000d5aa:	(bad)  
   14000d5ab:	call   rcx
   14000d5ad:	mov    ebp,0xe6e6ffbc
   14000d5b2:	out    0xff,eax
   14000d5b4:	stc    
   14000d5b5:	cli    
   14000d5b6:	cli    
   14000d5b7:	(bad)  
   14000d5b8:	stc    
   14000d5b9:	cli    
   14000d5ba:	cli    
   14000d5bb:	(bad)  
   14000d5bc:	fstp   st(5)
   14000d5be:	(bad)  
   14000d5c0:	fstp   st(5)
   14000d5c2:	(bad)  
   14000d5c4:	fstp   st(5)
   14000d5c6:	(bad)  
   14000d5c8:	fstp   st(5)
   14000d5ca:	(bad)  
   14000d5cc:	fstp   st(5)
   14000d5ce:	(bad)  
   14000d5d0:	fstp   st(5)
   14000d5d2:	(bad)  
   14000d5d4:	fstp   st(5)
   14000d5d6:	(bad)  
   14000d5d8:	fstp   st(5)
   14000d5da:	(bad)  
   14000d5dc:	repz hlt 
   14000d5de:	hlt    
   14000d5df:	push   rdx
   14000d5e1:	repz repz push rcx
   14000d5e5:	repnz repnz push rax
   14000d5e9:	icebp  
   14000d5ea:	icebp  
   14000d5eb:	push   rax
   14000d5ed:	lock lock (bad) 
   14000d5f0:	out    dx,eax
   14000d5f1:	out    dx,eax
   14000d5f2:	out    dx,eax
   14000d5f3:	(bad)  
   14000d5f4:	out    dx,al
   14000d5f5:	out    dx,al
   14000d5f6:	out    dx,al
   14000d5f7:	(bad)  
   14000d5f8:	std    
   14000d5f9:	(bad)  
   14000d5fa:	(bad)  
   14000d5fb:	call   rcx
   14000d5fd:	(bad)  
   14000d5fe:	mov    ebp,0x818488ff
   14000d603:	inc    DWORD PTR [rax]
   14000d605:	add    BYTE PTR [rax],al
   14000d607:	sub    al,BYTE PTR [rax]
   14000d609:	add    BYTE PTR [rax],al
   14000d60b:	(bad)  
	...
   14000d614:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d61b:	(bad)  
   14000d61c:	std    
   14000d61d:	(bad)  
   14000d61e:	(bad)  
   14000d61f:	(bad)  
   14000d620:	std    
   14000d621:	(bad)  
   14000d622:	(bad)  
   14000d623:	call   rcx
   14000d625:	mov    ebp,0x958cffbc
   14000d62a:	push   rax
   14000d62b:	dec    DWORD PTR [rbx-0x7500ae6a]
   14000d631:	cwde   
   14000d632:	push   rcx
   14000d633:	dec    DWORD PTR [rcx-0x7700ad67]
   14000d639:	fwait
   14000d63a:	push   rbx
   14000d63b:	inc    DWORD PTR [rdi-0x7900ab64]
   14000d641:	sahf   
   14000d642:	push   rsi
   14000d643:	inc    DWORD PTR [rbp-0x7c00a861]
   14000d649:	movabs eax,ds:0xa481ff59a282ff58
   14000d652:	pop    rdx
   14000d653:	(bad)  
   14000d654:	jg     0x14000d5fb
   14000d656:	pop    rbx
   14000d657:	(bad)  
   14000d658:	jle    0x14000d601
   14000d65a:	pop    rsp
   14000d65b:	(bad)  
   14000d65c:	jl     0x14000d606
   14000d65e:	pop    rbp
   14000d65f:	(bad)  
   14000d660:	jnp    0x14000d60b
   14000d662:	pop    rsi
   14000d663:	(bad)  
   14000d664:	jp     0x14000d611
   14000d666:	(bad)  
   14000d667:	(bad)  
   14000d668:	js     0x14000d616
   14000d66a:	(bad)  
   14000d66b:	call   rcx
   14000d66d:	mov    ebp,0xe6e6ffbc
   14000d672:	out    0xff,eax
   14000d674:	cli    
   14000d675:	sti    
   14000d676:	sti    
   14000d677:	(bad)  
   14000d678:	cli    
   14000d679:	sti    
   14000d67a:	sti    
   14000d67b:	(bad)  
   14000d67c:	stc    
   14000d67d:	cli    
   14000d67e:	cli    
   14000d67f:	(bad)  
   14000d680:	stc    
   14000d681:	cli    
   14000d682:	cli    
   14000d683:	(bad)  
   14000d684:	clc    
   14000d685:	stc    
   14000d686:	stc    
   14000d687:	(bad)  
   14000d688:	clc    
   14000d689:	clc    
   14000d68a:	clc    
   14000d68b:	push   rdi
   14000d68d:	clc    
   14000d68e:	clc    
   14000d68f:	push   rdi
   14000d691:	div    edi
   14000d693:	push   rsi
   14000d695:	div    edi
   14000d697:	push   rbp
   14000d699:	div    dh
   14000d69b:	push   rsp
   14000d69d:	cmc    
   14000d69e:	cmc    
   14000d69f:	push   rsp
   14000d6a1:	hlt    
   14000d6a2:	hlt    
   14000d6a3:	push   rbx
   14000d6a5:	repz repz push rdx
   14000d6a9:	repnz repnz push rcx
   14000d6ad:	icebp  
   14000d6ae:	icebp  
   14000d6af:	push   rax
   14000d6b1:	lock lock (bad) 
   14000d6b4:	out    dx,eax
   14000d6b5:	lock lock (bad) 
   14000d6b8:	std    
   14000d6b9:	(bad)  
   14000d6ba:	(bad)  
   14000d6bb:	call   rcx
   14000d6bd:	(bad)  
   14000d6be:	mov    ebp,0x818488ff
   14000d6c3:	inc    DWORD PTR [rax]
   14000d6c5:	add    BYTE PTR [rax],al
   14000d6c7:	sub    al,BYTE PTR [rax]
   14000d6c9:	add    BYTE PTR [rax],al
   14000d6cb:	(bad)  
	...
   14000d6d4:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d6db:	(bad)  
   14000d6dc:	std    
   14000d6dd:	(bad)  
   14000d6de:	(bad)  
   14000d6df:	(bad)  
   14000d6e0:	std    
   14000d6e1:	(bad)  
   14000d6e2:	(bad)  
   14000d6e3:	call   rcx
   14000d6e5:	mov    ebp,0x928effbc
   14000d6ea:	rex.WRX dec QWORD PTR [rbp-0x7300b06c]
   14000d6f1:	xchg   esi,eax
   14000d6f2:	push   rax
   14000d6f3:	dec    DWORD PTR [rbx-0x7500ae69]
   14000d6f9:	cdq    
   14000d6fa:	push   rdx
   14000d6fb:	dec    DWORD PTR [rcx-0x7800ac66]
   14000d701:	pushf  
   14000d702:	push   rsp
   14000d703:	inc    DWORD PTR [rsi-0x7a00aa63]
   14000d709:	lahf   
   14000d70a:	push   rsi
   14000d70b:	inc    DWORD PTR [rax+riz*4-0x5d7d00a9]
   14000d712:	pop    rax
   14000d713:	inc    DWORD PTR [rcx-0x7f00a55d]
   14000d719:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d71a:	pop    rbx
   14000d71b:	(bad)  
   14000d71c:	jle    0x14000d6c4
   14000d71e:	pop    rsp
   14000d71f:	(bad)  
   14000d720:	jge    0x14000d6ca
   14000d722:	pop    rbp
   14000d723:	(bad)  
   14000d724:	jl     0x14000d6cf
   14000d726:	pop    rsi
   14000d727:	(bad)  
   14000d728:	jp     0x14000d6d4
   14000d72a:	pop    rdi
   14000d72b:	call   rcx
   14000d72d:	mov    ebp,0xe6e6ffbc
   14000d732:	out    0xff,eax
   14000d734:	sti    
   14000d735:	cld    
   14000d736:	cld    
   14000d737:	(bad)  
   14000d738:	sti    
   14000d739:	cld    
   14000d73a:	cld    
   14000d73b:	(bad)  
   14000d73c:	fstp   st(5)
   14000d73e:	(bad)  
   14000d740:	fstp   st(5)
   14000d742:	(bad)  
   14000d744:	fstp   st(5)
   14000d746:	(bad)  
   14000d748:	fstp   st(5)
   14000d74a:	(bad)  
   14000d74c:	fstp   st(5)
   14000d74e:	(bad)  
   14000d750:	fstp   st(5)
   14000d752:	(bad)  
   14000d754:	fstp   st(5)
   14000d756:	(bad)  
   14000d758:	fstp   st(5)
   14000d75a:	(bad)  
   14000d75c:	div    bh
   14000d75e:	idiv   edi
   14000d760:	cmc    
   14000d761:	cmc    
   14000d762:	cmc    
   14000d763:	push   rsp
   14000d765:	cmc    
   14000d766:	cmc    
   14000d767:	push   rbx
   14000d769:	hlt    
   14000d76a:	hlt    
   14000d76b:	push   rdx
   14000d76d:	repz repz push rcx
   14000d771:	repnz repnz push rcx
   14000d775:	icebp  
   14000d776:	icebp  
   14000d777:	(bad)  
   14000d778:	std    
   14000d779:	(bad)  
   14000d77a:	(bad)  
   14000d77b:	call   rcx
   14000d77d:	(bad)  
   14000d77e:	mov    ebp,0x818488ff
   14000d783:	inc    DWORD PTR [rax]
   14000d785:	add    BYTE PTR [rax],al
   14000d787:	sub    al,BYTE PTR [rax]
   14000d789:	add    BYTE PTR [rax],al
   14000d78b:	(bad)  
	...
   14000d794:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d79b:	(bad)  
   14000d79c:	std    
   14000d79d:	(bad)  
   14000d79e:	(bad)  
   14000d79f:	(bad)  
   14000d7a0:	std    
   14000d7a1:	(bad)  
   14000d7a2:	(bad)  
   14000d7a3:	call   rcx
   14000d7a5:	mov    ebp,0x908fffbc
   14000d7aa:	rex.WRB dec QWORD PTR [r14-0x7200b16e]
   14000d7b1:	xchg   esp,eax
   14000d7b2:	rex.WRXB dec QWORD PTR [r13+r10*4-0x687400b0]
   14000d7ba:	push   rcx
   14000d7bb:	dec    DWORD PTR [rdx-0x7600ad68]
   14000d7c1:	(bad)  
   14000d7c2:	push   rbx
   14000d7c3:	dec    DWORD PTR [rax-0x7800ab65]
   14000d7c9:	popf   
   14000d7ca:	push   rbp
   14000d7cb:	inc    DWORD PTR [rbp-0x7b00a962]
   14000d7d1:	movabs al,ds:0xa381ff58a183ff57
   14000d7da:	pop    rcx
   14000d7db:	inc    DWORD PTR [rax+0x7fff5aa4]
   14000d7e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000d7e2:	pop    rbx
   14000d7e3:	(bad)  
   14000d7e4:	jge    0x14000d78d
   14000d7e6:	pop    rbp
   14000d7e7:	(bad)  
   14000d7e8:	jl     0x14000d793
   14000d7ea:	pop    rsi
   14000d7eb:	call   rcx
   14000d7ed:	mov    ebp,0xe6e6ffbc
   14000d7f2:	out    0xff,eax
   14000d7f4:	cld    
   14000d7f5:	std    
   14000d7f6:	std    
   14000d7f7:	(bad)  
   14000d7f8:	cld    
   14000d7f9:	std    
   14000d7fa:	std    
   14000d7fb:	(bad)  
   14000d7fc:	sti    
   14000d7fd:	cld    
   14000d7fe:	cld    
   14000d7ff:	(bad)  
   14000d800:	sti    
   14000d801:	cld    
   14000d802:	cld    
   14000d803:	(bad)  
   14000d804:	cli    
   14000d805:	sti    
   14000d806:	sti    
   14000d807:	(bad)  
   14000d808:	cli    
   14000d809:	sti    
   14000d80a:	sti    
   14000d80b:	(bad)  
   14000d80c:	stc    
   14000d80d:	cli    
   14000d80e:	cli    
   14000d80f:	(bad)  
   14000d810:	stc    
   14000d811:	cli    
   14000d812:	cli    
   14000d813:	(bad)  
   14000d814:	clc    
   14000d815:	stc    
   14000d816:	stc    
   14000d817:	(bad)  
   14000d818:	clc    
   14000d819:	clc    
   14000d81a:	clc    
   14000d81b:	push   rdi
   14000d81d:	clc    
   14000d81e:	clc    
   14000d81f:	push   rdi
   14000d821:	div    edi
   14000d823:	push   rbp
   14000d825:	div    dh
   14000d827:	push   rbp
   14000d829:	cmc    
   14000d82a:	cmc    
   14000d82b:	push   rsp
   14000d82d:	hlt    
   14000d82e:	hlt    
   14000d82f:	push   rbx
   14000d831:	repz repz push rdx
   14000d835:	repnz repnz (bad) 
   14000d838:	std    
   14000d839:	(bad)  
   14000d83a:	(bad)  
   14000d83b:	call   rcx
   14000d83d:	(bad)  
   14000d83e:	mov    ebp,0x818488ff
   14000d843:	inc    DWORD PTR [rax]
   14000d845:	add    BYTE PTR [rax],al
   14000d847:	sub    al,BYTE PTR [rax]
   14000d849:	add    BYTE PTR [rax],al
   14000d84b:	(bad)  
	...
   14000d854:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d85b:	(bad)  
   14000d85c:	std    
   14000d85d:	(bad)  
   14000d85e:	(bad)  
   14000d85f:	(bad)  
   14000d860:	std    
   14000d861:	(bad)  
   14000d862:	(bad)  
   14000d863:	call   rcx
   14000d865:	mov    ebp,0x8d90ffbc
   14000d86a:	rex.WR dec QWORD PTR [rdi-0x7100b271]
   14000d871:	xchg   ecx,eax
   14000d872:	rex.WRX dec QWORD PTR [rbp-0x7300b06d]
   14000d879:	xchg   ebp,eax
   14000d87a:	push   rax
   14000d87b:	dec    DWORD PTR [rbx-0x7500ae6a]
   14000d881:	cwde   
   14000d882:	push   rcx
   14000d883:	dec    DWORD PTR [rcx-0x7700ad67]
   14000d889:	fwait
   14000d88a:	push   rbx
   14000d88b:	inc    DWORD PTR [rdi-0x7900ab64]
   14000d891:	sahf   
   14000d892:	push   rsi
   14000d893:	inc    DWORD PTR [rbp-0x7c00a861]
   14000d899:	movabs eax,ds:0xa481ff59a282ff58
   14000d8a2:	pop    rdx
   14000d8a3:	(bad)  
   14000d8a4:	jg     0x14000d84b
   14000d8a6:	pop    rbx
   14000d8a7:	(bad)  
   14000d8a8:	jle    0x14000d851
   14000d8aa:	pop    rsp
   14000d8ab:	call   rcx
   14000d8ad:	mov    ebp,0xe6e6ffbc
   14000d8b2:	out    0xff,eax
   14000d8b4:	std    
   14000d8b5:	(bad)  
   14000d8b6:	(bad)  
   14000d8b7:	(bad)  
   14000d8b8:	std    
   14000d8b9:	(bad)  
   14000d8ba:	(bad)  
   14000d8bb:	(bad)  
   14000d8bc:	std    
   14000d8bd:	(bad)  
   14000d8be:	(bad)  
   14000d8bf:	(bad)  
   14000d8c0:	std    
   14000d8c1:	(bad)  
   14000d8c2:	(bad)  
   14000d8c3:	(bad)  
   14000d8c4:	std    
   14000d8c5:	(bad)  
   14000d8c6:	(bad)  
   14000d8c7:	(bad)  
   14000d8c8:	std    
   14000d8c9:	(bad)  
   14000d8ca:	(bad)  
   14000d8cb:	(bad)  
   14000d8cc:	std    
   14000d8cd:	(bad)  
   14000d8ce:	(bad)  
   14000d8cf:	(bad)  
   14000d8d0:	std    
   14000d8d1:	(bad)  
   14000d8d2:	(bad)  
   14000d8d3:	(bad)  
   14000d8d4:	std    
   14000d8d5:	(bad)  
   14000d8d6:	(bad)  
   14000d8d7:	(bad)  
   14000d8d8:	std    
   14000d8d9:	(bad)  
   14000d8da:	(bad)  
   14000d8db:	(bad)  
   14000d8dc:	std    
   14000d8dd:	(bad)  
   14000d8de:	(bad)  
   14000d8df:	(bad)  
   14000d8e0:	std    
   14000d8e1:	(bad)  
   14000d8e2:	(bad)  
   14000d8e3:	(bad)  
   14000d8e4:	std    
   14000d8e5:	(bad)  
   14000d8e6:	(bad)  
   14000d8e7:	call   QWORD PTR [rax-0x74007b3f]
   14000d8ed:	(bad)
   14000d8f0:	mov    eax,ebp
   14000d8f2:	xchg   edi,edi
   14000d8f4:	mov    eax,ebp
   14000d8f6:	xchg   edi,edi
   14000d8f8:	std    
   14000d8f9:	(bad)  
   14000d8fa:	(bad)  
   14000d8fb:	call   rcx
   14000d8fd:	(bad)  
   14000d8fe:	mov    ebp,0x818488ff
   14000d903:	inc    DWORD PTR [rax]
   14000d905:	add    BYTE PTR [rax],al
   14000d907:	sub    al,BYTE PTR [rax]
   14000d909:	add    BYTE PTR [rax],al
   14000d90b:	(bad)  
	...
   14000d914:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d91b:	(bad)  
   14000d91c:	std    
   14000d91d:	(bad)  
   14000d91e:	(bad)  
   14000d91f:	(bad)  
   14000d920:	std    
   14000d921:	(bad)  
   14000d922:	(bad)  
   14000d923:	call   rcx
   14000d925:	mov    ebp,0x8b92ffbc
   14000d92a:	rex.WXB call QWORD PTR [r9-0x6f00b373]
   14000d931:	(bad)  
   14000d932:	rex.WR dec QWORD PTR [rdi-0x7100b26f]
   14000d939:	xchg   edx,eax
   14000d93a:	rex.WRX dec QWORD PTR [rbp-0x7300b06c]
   14000d941:	xchg   esi,eax
   14000d942:	push   rax
   14000d943:	dec    DWORD PTR [rbx-0x7500ae69]
   14000d949:	cdq    
   14000d94a:	push   rdx
   14000d94b:	dec    DWORD PTR [rcx-0x7800ac66]
   14000d951:	pushf  
   14000d952:	push   rsp
   14000d953:	inc    DWORD PTR [rsi-0x7a00aa63]
   14000d959:	lahf   
   14000d95a:	push   rsi
   14000d95b:	inc    DWORD PTR [rax+riz*4-0x5d7d00a9]
   14000d962:	pop    rax
   14000d963:	inc    DWORD PTR [rcx-0x7f00a55d]
   14000d969:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000d96a:	pop    rbx
   14000d96b:	call   rcx
   14000d96d:	mov    ebp,0xe6e6ffbc
   14000d972:	out    0xff,eax
   14000d974:	std    
   14000d975:	(bad)  
   14000d976:	(bad)  
   14000d977:	(bad)  
   14000d978:	std    
   14000d979:	(bad)  
   14000d97a:	(bad)  
   14000d97b:	(bad)  
   14000d97c:	std    
   14000d97d:	(bad)  
   14000d97e:	(bad)  
   14000d97f:	(bad)  
   14000d980:	std    
   14000d981:	(bad)  
   14000d982:	(bad)  
   14000d983:	(bad)  
   14000d984:	std    
   14000d985:	(bad)  
   14000d986:	(bad)  
   14000d987:	(bad)  
   14000d988:	std    
   14000d989:	(bad)  
   14000d98a:	(bad)  
   14000d98b:	(bad)  
   14000d98c:	std    
   14000d98d:	(bad)  
   14000d98e:	(bad)  
   14000d98f:	(bad)  
   14000d990:	std    
   14000d991:	(bad)  
   14000d992:	(bad)  
   14000d993:	(bad)  
   14000d994:	std    
   14000d995:	(bad)  
   14000d996:	(bad)  
   14000d997:	(bad)  
   14000d998:	std    
   14000d999:	(bad)  
   14000d99a:	(bad)  
   14000d99b:	(bad)  
   14000d99c:	std    
   14000d99d:	(bad)  
   14000d99e:	(bad)  
   14000d99f:	(bad)  
   14000d9a0:	std    
   14000d9a1:	(bad)  
   14000d9a2:	(bad)  
   14000d9a3:	(bad)  
   14000d9a4:	std    
   14000d9a5:	(bad)  
   14000d9a6:	(bad)  
   14000d9a7:	call   QWORD PTR [rbp-0x6f008146]
   14000d9ad:	rol    DWORD PTR [rdi+rdi*8-0x783a75],0x8b
   14000d9b5:	(bad)
   14000d9b8:	std    
   14000d9b9:	(bad)  
   14000d9ba:	(bad)  
   14000d9bb:	call   rcx
   14000d9bd:	(bad)  
   14000d9be:	mov    ebp,0x818488ff
   14000d9c3:	inc    DWORD PTR [rax]
   14000d9c5:	add    BYTE PTR [rax],al
   14000d9c7:	sub    al,BYTE PTR [rax]
   14000d9c9:	add    BYTE PTR [rax],al
   14000d9cb:	(bad)  
	...
   14000d9d4:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000d9db:	(bad)  
   14000d9dc:	std    
   14000d9dd:	(bad)  
   14000d9de:	(bad)  
   14000d9df:	(bad)  
   14000d9e0:	std    
   14000d9e1:	(bad)  
   14000d9e2:	(bad)  
   14000d9e3:	call   rcx
   14000d9e5:	mov    ebp,0x8893ffbc
   14000d9ea:	rex.WB call QWORD PTR [r10-0x6e00b576]
   14000d9f1:	mov    WORD PTR [rbx-0x1],cs
   14000d9f4:	nop
   14000d9f5:	mov    cs,WORD PTR [rdi+rdi*8-0x71]
   14000d9f9:	nop
   14000d9fa:	rex.WRB dec QWORD PTR [r14-0x7200b16e]
   14000da01:	xchg   esp,eax
   14000da02:	rex.WRXB dec QWORD PTR [r13+r10*4-0x687400b0]
   14000da0a:	push   rcx
   14000da0b:	dec    DWORD PTR [rdx-0x7600ad68]
   14000da11:	(bad)  
   14000da12:	push   rbx
   14000da13:	dec    DWORD PTR [rax-0x7800ab65]
   14000da19:	popf   
   14000da1a:	push   rbp
   14000da1b:	inc    DWORD PTR [rbp-0x7b00a962]
   14000da21:	movabs al,ds:0xa381ff58a183ff57
   14000da2a:	pop    rcx
   14000da2b:	call   rcx
   14000da2d:	mov    ebp,0xe6e6ffbc
   14000da32:	out    0xff,eax
   14000da34:	std    
   14000da35:	(bad)  
   14000da36:	(bad)  
   14000da37:	(bad)  
   14000da38:	std    
   14000da39:	(bad)  
   14000da3a:	(bad)  
   14000da3b:	(bad)  
   14000da3c:	fcmovu st,st(2)
   14000da3e:	(bad)  
   14000da40:	fcmovu st,st(2)
   14000da42:	(bad)  
   14000da44:	fcmovu st,st(2)
   14000da46:	(bad)  
   14000da48:	fcmovu st,st(2)
   14000da4a:	(bad)  
   14000da4c:	fcmovu st,st(2)
   14000da4e:	(bad)  
   14000da50:	fcmovu st,st(2)
   14000da52:	(bad)  
   14000da54:	fcmovu st,st(2)
   14000da56:	(bad)  
   14000da58:	fcmovu st,st(2)
   14000da5a:	(bad)  
   14000da5c:	std    
   14000da5d:	(bad)  
   14000da5e:	(bad)  
   14000da5f:	(bad)  
   14000da60:	std    
   14000da61:	(bad)  
   14000da62:	(bad)  
   14000da63:	(bad)  
   14000da64:	std    
   14000da65:	(bad)  
   14000da66:	(bad)  
   14000da67:	call   FWORD PTR [rcx-0x6a008349]
   14000da6d:	mov    edx,0xc190ff7e
   14000da72:	test   bh,bh
   14000da74:	mov    eax,ebp
   14000da76:	xchg   edi,edi
   14000da78:	std    
   14000da79:	(bad)  
   14000da7a:	(bad)  
   14000da7b:	call   rcx
   14000da7d:	(bad)  
   14000da7e:	mov    ebp,0x818488ff
   14000da83:	inc    DWORD PTR [rax]
   14000da85:	add    BYTE PTR [rax],al
   14000da87:	sub    al,BYTE PTR [rax]
   14000da89:	add    BYTE PTR [rax],al
   14000da8b:	(bad)  
	...
   14000da94:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000da9b:	(bad)  
   14000da9c:	std    
   14000da9d:	(bad)  
   14000da9e:	(bad)  
   14000da9f:	(bad)  
   14000daa0:	std    
   14000daa1:	(bad)  
   14000daa2:	(bad)  
   14000daa3:	call   rcx
   14000daa5:	mov    ebp,0x8594ffbc
   14000daaa:	rex.W call QWORD PTR [rbx-0x6d00b679]
   14000dab1:	mov    DWORD PTR [rdx-0x1],ecx
   14000dab4:	xchg   ecx,eax
   14000dab5:	mov    ecx,DWORD PTR [rbx-0x1]
   14000dab8:	nop
   14000dab9:	lea    ecx,[rdi+rdi*8-0x71]
   14000dabd:	(bad)  
   14000dabe:	rex.WRB dec QWORD PTR [r14-0x7200b16f]
   14000dac5:	xchg   ebx,eax
   14000dac6:	rex.WRXB dec QWORD PTR [r13+r10*4-0x697400b0]
   14000dace:	push   rcx
   14000dacf:	dec    DWORD PTR [rdx-0x7600ae68]
   14000dad5:	cdq    
   14000dad6:	push   rdx
   14000dad7:	dec    DWORD PTR [rax-0x7800ac65]
   14000dadd:	pushf  
   14000dade:	push   rsp
   14000dadf:	inc    DWORD PTR [rsi-0x7a00a962]
   14000dae5:	lahf   
   14000dae6:	push   rdi
   14000dae7:	inc    DWORD PTR [rbx-0x2e00a75f]
   14000daed:	mov    ebp,0xe6e6ffbc
   14000daf2:	out    0xff,eax
   14000daf4:	std    
   14000daf5:	(bad)  
   14000daf6:	(bad)  
   14000daf7:	(bad)  
   14000daf8:	std    
   14000daf9:	(bad)  
   14000dafa:	(bad)  
   14000dafb:	(bad)  
   14000dafc:	std    
   14000dafd:	(bad)  
   14000dafe:	(bad)  
   14000daff:	(bad)  
   14000db00:	std    
   14000db01:	(bad)  
   14000db02:	(bad)  
   14000db03:	(bad)  
   14000db04:	std    
   14000db05:	(bad)  
   14000db06:	(bad)  
   14000db07:	(bad)  
   14000db08:	std    
   14000db09:	(bad)  
   14000db0a:	(bad)  
   14000db0b:	(bad)  
   14000db0c:	std    
   14000db0d:	(bad)  
   14000db0e:	(bad)  
   14000db0f:	(bad)  
   14000db10:	std    
   14000db11:	(bad)  
   14000db12:	(bad)  
   14000db13:	(bad)  
   14000db14:	std    
   14000db15:	(bad)  
   14000db16:	(bad)  
   14000db17:	(bad)  
   14000db18:	std    
   14000db19:	(bad)  
   14000db1a:	(bad)  
   14000db1b:	(bad)  
   14000db1c:	std    
   14000db1d:	(bad)  
   14000db1e:	(bad)  
   14000db1f:	(bad)  
   14000db20:	std    
   14000db21:	(bad)  
   14000db22:	(bad)  
   14000db23:	(bad)  
   14000db24:	std    
   14000db25:	(bad)  
   14000db26:	(bad)  
   14000db27:	call   FWORD PTR [rbp-0x6600864d]
   14000db2d:	mov    bh,0x7c
   14000db2f:	call   QWORD PTR [rbp-0x6f008146]
   14000db35:	rol    DWORD PTR [rdi+rdi*8-0x10103],0xd1
   14000db3d:	(bad)  
   14000db3e:	mov    ebp,0x818488ff
   14000db43:	inc    DWORD PTR [rax]
   14000db45:	add    BYTE PTR [rax],al
   14000db47:	sub    al,BYTE PTR [rax]
   14000db49:	add    BYTE PTR [rax],al
   14000db4b:	(bad)  
	...
   14000db54:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000db5b:	(bad)  
   14000db5c:	std    
   14000db5d:	(bad)  
   14000db5e:	(bad)  
   14000db5f:	(bad)  
   14000db60:	std    
   14000db61:	(bad)  
   14000db62:	(bad)  
   14000db63:	call   rcx
   14000db65:	mov    ebp,0x98a9ffbc
   14000db6a:	push   0x488495ff
   14000db6f:	call   QWORD PTR [rsi+rax*4-0x766c00b7]
   14000db76:	rex.WX call QWORD PTR [rdx-0x6e00b475]
   14000db7d:	lea    ecx,[rdi+rdi*8-0x70]
   14000db81:	(bad)  
   14000db82:	rex.WR dec QWORD PTR [rdi-0x7100b26f]
   14000db89:	xchg   edx,eax
   14000db8a:	rex.WRX dec QWORD PTR [rbp-0x7300b06c]
   14000db91:	xchg   esi,eax
   14000db92:	push   rax
   14000db93:	dec    DWORD PTR [rbx-0x7500ae69]
   14000db99:	cdq    
   14000db9a:	push   rdx
   14000db9b:	dec    DWORD PTR [rcx-0x7800ac66]
   14000dba1:	pushf  
   14000dba2:	push   rsp
   14000dba3:	inc    DWORD PTR [rsi-0x7a00aa63]
   14000dba9:	lahf   
   14000dbaa:	push   rsi
   14000dbab:	call   rcx
   14000dbad:	mov    ebp,0xe6e6ffbc
   14000dbb2:	out    0xff,eax
   14000dbb4:	std    
   14000dbb5:	(bad)  
   14000dbb6:	(bad)  
   14000dbb7:	(bad)  
   14000dbb8:	std    
   14000dbb9:	(bad)  
   14000dbba:	(bad)  
   14000dbbb:	(bad)  
   14000dbbc:	fcmovu st,st(2)
   14000dbbe:	(bad)  
   14000dbc0:	fcmovu st,st(2)
   14000dbc2:	(bad)  
   14000dbc4:	fcmovu st,st(2)
   14000dbc6:	(bad)  
   14000dbc8:	fcmovu st,st(2)
   14000dbca:	(bad)  
   14000dbcc:	fcmovu st,st(2)
   14000dbce:	(bad)  
   14000dbd0:	fcmovu st,st(2)
   14000dbd2:	(bad)  
   14000dbd4:	fcmovu st,st(2)
   14000dbd6:	(bad)  
   14000dbd8:	fcmovu st,st(2)
   14000dbda:	(bad)  
   14000dbdc:	std    
   14000dbdd:	(bad)  
   14000dbde:	(bad)  
   14000dbdf:	(bad)  
   14000dbe0:	std    
   14000dbe1:	(bad)  
   14000dbe2:	(bad)  
   14000dbe3:	(bad)  
   14000dbe4:	std    
   14000dbe5:	(bad)  
   14000dbe6:	(bad)  
   14000dbe7:	jmp    QWORD PTR [rax-0x62008950]
   14000dbed:	mov    bl,0x79
   14000dbef:	call   FWORD PTR [rcx-0x6a008349]
   14000dbf5:	mov    edx,0xfefdff7e
   14000dbfa:	(bad)  
   14000dbfb:	call   rcx
   14000dbfd:	(bad)  
   14000dbfe:	mov    ebp,0x818488ff
   14000dc03:	inc    DWORD PTR [rax]
   14000dc05:	add    BYTE PTR [rax],al
   14000dc07:	sub    al,BYTE PTR [rax]
   14000dc09:	add    BYTE PTR [rax],al
   14000dc0b:	(bad)  
	...
   14000dc14:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000dc1b:	(bad)  
   14000dc1c:	std    
   14000dc1d:	(bad)  
   14000dc1e:	(bad)  
   14000dc1f:	(bad)  
   14000dc20:	std    
   14000dc21:	(bad)  
   14000dc22:	(bad)  
   14000dc23:	call   rcx
   14000dc25:	mov    ebp,0xa3b4ffbc
   14000dc2a:	jns    0x14000dc2b
   14000dc2c:	stos   BYTE PTR es:[rdi],al
   14000dc2d:	(bad)  
   14000dc2e:	imul   edi,edi,0xff4a8697
   14000dc34:	xchg   esp,eax
   14000dc35:	xchg   BYTE PTR [rax-0x1],cl
   14000dc38:	xchg   ebx,eax
   14000dc39:	mov    BYTE PTR [rcx-0x1],cl
   14000dc3c:	xchg   edx,eax
   14000dc3d:	mov    cl,BYTE PTR [rdx-0x1]
   14000dc40:	xchg   ecx,eax
   14000dc41:	mov    WORD PTR [rbx-0x1],cs
   14000dc44:	nop
   14000dc45:	mov    cs,WORD PTR [rdi+rdi*8-0x71]
   14000dc49:	nop
   14000dc4a:	rex.WRB dec QWORD PTR [r14-0x7200b16e]
   14000dc51:	xchg   esp,eax
   14000dc52:	rex.WRXB dec QWORD PTR [r13+r10*4-0x687400b0]
   14000dc5a:	push   rcx
   14000dc5b:	dec    DWORD PTR [rdx-0x7600ad68]
   14000dc61:	(bad)  
   14000dc62:	push   rbx
   14000dc63:	dec    DWORD PTR [rax-0x7800ab65]
   14000dc69:	popf   
   14000dc6a:	push   rbp
   14000dc6b:	call   rcx
   14000dc6d:	mov    ebp,0xe6e6ffbc
   14000dc72:	out    0xff,eax
   14000dc74:	std    
   14000dc75:	(bad)  
   14000dc76:	(bad)  
   14000dc77:	(bad)  
   14000dc78:	std    
   14000dc79:	(bad)  
   14000dc7a:	(bad)  
   14000dc7b:	(bad)  
   14000dc7c:	std    
   14000dc7d:	(bad)  
   14000dc7e:	(bad)  
   14000dc7f:	(bad)  
   14000dc80:	std    
   14000dc81:	(bad)  
   14000dc82:	(bad)  
   14000dc83:	(bad)  
   14000dc84:	std    
   14000dc85:	(bad)  
   14000dc86:	(bad)  
   14000dc87:	(bad)  
   14000dc88:	std    
   14000dc89:	(bad)  
   14000dc8a:	(bad)  
   14000dc8b:	(bad)  
   14000dc8c:	std    
   14000dc8d:	(bad)  
   14000dc8e:	(bad)  
   14000dc8f:	(bad)  
   14000dc90:	std    
   14000dc91:	(bad)  
   14000dc92:	(bad)  
   14000dc93:	(bad)  
   14000dc94:	std    
   14000dc95:	(bad)  
   14000dc96:	(bad)  
   14000dc97:	(bad)  
   14000dc98:	std    
   14000dc99:	(bad)  
   14000dc9a:	(bad)  
   14000dc9b:	(bad)  
   14000dc9c:	std    
   14000dc9d:	(bad)  
   14000dc9e:	(bad)  
   14000dc9f:	(bad)  
   14000dca0:	std    
   14000dca1:	(bad)  
   14000dca2:	(bad)  
   14000dca3:	(bad)  
   14000dca4:	std    
   14000dca5:	(bad)  
   14000dca6:	(bad)  
   14000dca7:	jmp    QWORD PTR [rdx-0x5f008b54]
   14000dcad:	mov    al,0x76
   14000dcaf:	call   FWORD PTR [rbp-0x6600864d]
   14000dcb5:	mov    bh,0x7c
   14000dcb7:	(bad)  
   14000dcb8:	std    
   14000dcb9:	(bad)  
   14000dcba:	(bad)  
   14000dcbb:	call   rcx
   14000dcbd:	(bad)  
   14000dcbe:	mov    ebp,0x818488ff
   14000dcc3:	inc    DWORD PTR [rax]
   14000dcc5:	add    BYTE PTR [rax],al
   14000dcc7:	sub    al,BYTE PTR [rax]
   14000dcc9:	add    BYTE PTR [rax],al
   14000dccb:	(bad)  
	...
   14000dcd4:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000dcdb:	(bad)  
   14000dcdc:	std    
   14000dcdd:	(bad)  
   14000dcde:	(bad)  
   14000dcdf:	(bad)  
   14000dce0:	std    
   14000dce1:	(bad)  
   14000dce2:	(bad)  
   14000dce3:	call   rcx
   14000dce5:	mov    ebp,0x9db1ffbc
   14000dcea:	jb     0x14000dceb
   14000dcec:	mov    cl,0x9f
   14000dcee:	jae    0x14000dcef
   14000dcf0:	lods   eax,DWORD PTR ds:[rsi]
   14000dcf1:	popf   
   14000dcf2:	outs   dx,DWORD PTR ds:[rsi]
   14000dcf3:	call   FWORD PTR [rsi-0x6b00a872]
   14000dcf9:	test   DWORD PTR [rax-0x1],ecx
   14000dcfc:	xchg   ebx,eax
   14000dcfd:	xchg   DWORD PTR [rcx-0x1],ecx
   14000dd00:	xchg   edx,eax
   14000dd01:	mov    DWORD PTR [rdx-0x1],ecx
   14000dd04:	xchg   ecx,eax
   14000dd05:	mov    ecx,DWORD PTR [rbx-0x1]
   14000dd08:	nop
   14000dd09:	lea    ecx,[rdi+rdi*8-0x71]
   14000dd0d:	(bad)  
   14000dd0e:	rex.WRB dec QWORD PTR [r14-0x7200b16f]
   14000dd15:	xchg   ebx,eax
   14000dd16:	rex.WRXB dec QWORD PTR [r13+r10*4-0x697400b0]
   14000dd1e:	push   rcx
   14000dd1f:	dec    DWORD PTR [rdx-0x7600ae68]
   14000dd25:	cdq    
   14000dd26:	push   rdx
   14000dd27:	dec    DWORD PTR [rax-0x2e00ac65]
   14000dd2d:	mov    ebp,0xe6e6ffbc
   14000dd32:	out    0xff,eax
   14000dd34:	std    
   14000dd35:	(bad)  
   14000dd36:	(bad)  
   14000dd37:	(bad)  
   14000dd38:	std    
   14000dd39:	(bad)  
   14000dd3a:	(bad)  
   14000dd3b:	(bad)  
   14000dd3c:	fcmovu st,st(2)
   14000dd3e:	(bad)  
   14000dd40:	fcmovu st,st(2)
   14000dd42:	(bad)  
   14000dd44:	fcmovu st,st(2)
   14000dd46:	(bad)  
   14000dd48:	fcmovu st,st(2)
   14000dd4a:	(bad)  
   14000dd4c:	fcmovu st,st(2)
   14000dd4e:	(bad)  
   14000dd50:	fcmovu st,st(2)
   14000dd52:	(bad)  
   14000dd54:	fcmovu st,st(2)
   14000dd56:	(bad)  
   14000dd58:	fcmovu st,st(2)
   14000dd5a:	(bad)  
   14000dd5c:	std    
   14000dd5d:	(bad)  
   14000dd5e:	(bad)  
   14000dd5f:	(bad)  
   14000dd60:	std    
   14000dd61:	(bad)  
   14000dd62:	(bad)  
   14000dd63:	(bad)  
   14000dd64:	std    
   14000dd65:	(bad)  
   14000dd66:	(bad)  
   14000dd67:	jmp    QWORD PTR [rbp-0x5d008e59]
   14000dd6d:	lods   al,BYTE PTR ds:[rsi]
   14000dd6e:	je     0x14000dd6f
   14000dd70:	movabs al,ds:0xfdff79b39dff76b0
   14000dd79:	(bad)  
   14000dd7a:	(bad)  
   14000dd7b:	call   rcx
   14000dd7d:	(bad)  
   14000dd7e:	mov    ebp,0x818488ff
   14000dd83:	inc    DWORD PTR [rax]
   14000dd85:	add    BYTE PTR [rax],al
   14000dd87:	sub    al,BYTE PTR [rax]
   14000dd89:	add    BYTE PTR [rax],al
   14000dd8b:	(bad)  
	...
   14000dd94:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000dd9b:	(bad)  
   14000dd9c:	std    
   14000dd9d:	(bad)  
   14000dd9e:	(bad)  
   14000dd9f:	(bad)  
   14000dda0:	std    
   14000dda1:	(bad)  
   14000dda2:	(bad)  
   14000dda3:	call   rcx
   14000dda5:	mov    ebp,0x97afffbc
   14000ddaa:	ins    BYTE PTR es:[rdi],dx
   14000ddab:	jmp    FWORD PTR [rsi-0x51009368]
   14000ddb1:	(bad)  
   14000ddb2:	ins    DWORD PTR es:[rdi],dx
   14000ddb3:	jmp    FWORD PTR [rbp-0x55009165]
   14000ddb9:	(bad)  
   14000ddba:	push   0xffffffffffffffff
   14000ddbc:	movabs al,ds:0x93ff4c8896ff5a90
   14000ddc5:	mov    DWORD PTR [rdx-0x1],ecx
   14000ddc8:	xchg   edx,eax
   14000ddc9:	mov    ecx,DWORD PTR [rbx-0x1]
   14000ddcc:	xchg   ecx,eax
   14000ddcd:	lea    ecx,[rdi+rdi*8-0x70]
   14000ddd1:	(bad)  
   14000ddd2:	rex.WR dec QWORD PTR [rdi-0x7100b26f]
   14000ddd9:	xchg   edx,eax
   14000ddda:	rex.WRX dec QWORD PTR [rbp-0x7300b06c]
   14000dde1:	xchg   esi,eax
   14000dde2:	push   rax
   14000dde3:	dec    DWORD PTR [rbx-0x7500ae69]
   14000dde9:	cdq    
   14000ddea:	push   rdx
   14000ddeb:	call   rcx
   14000dded:	mov    ebp,0xe6e6ffbc
   14000ddf2:	out    0xff,eax
   14000ddf4:	std    
   14000ddf5:	(bad)  
   14000ddf6:	(bad)  
   14000ddf7:	(bad)  
   14000ddf8:	std    
   14000ddf9:	(bad)  
   14000ddfa:	(bad)  
   14000ddfb:	(bad)  
   14000ddfc:	std    
   14000ddfd:	(bad)  
   14000ddfe:	(bad)  
   14000ddff:	(bad)  
   14000de00:	std    
   14000de01:	(bad)  
   14000de02:	(bad)  
   14000de03:	(bad)  
   14000de04:	std    
   14000de05:	(bad)  
   14000de06:	(bad)  
   14000de07:	(bad)  
   14000de08:	std    
   14000de09:	(bad)  
   14000de0a:	(bad)  
   14000de0b:	(bad)  
   14000de0c:	std    
   14000de0d:	(bad)  
   14000de0e:	(bad)  
   14000de0f:	(bad)  
   14000de10:	std    
   14000de11:	(bad)  
   14000de12:	(bad)  
   14000de13:	(bad)  
   14000de14:	std    
   14000de15:	(bad)  
   14000de16:	(bad)  
   14000de17:	(bad)  
   14000de18:	std    
   14000de19:	(bad)  
   14000de1a:	(bad)  
   14000de1b:	(bad)  
   14000de1c:	std    
   14000de1d:	(bad)  
   14000de1e:	(bad)  
   14000de1f:	(bad)  
   14000de20:	std    
   14000de21:	(bad)  
   14000de22:	(bad)  
   14000de23:	(bad)  
   14000de24:	std    
   14000de25:	(bad)  
   14000de26:	(bad)  
   14000de27:	jmp    FWORD PTR [rax-0x5a00915f]
   14000de2d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000de2e:	jno    0x14000de2f
   14000de30:	movabs ds:0xfdff76b0a0ff74ac,al
   14000de39:	(bad)  
   14000de3a:	(bad)  
   14000de3b:	call   rcx
   14000de3d:	(bad)  
   14000de3e:	mov    ebp,0x818488ff
   14000de43:	inc    DWORD PTR [rax]
   14000de45:	add    BYTE PTR [rax],al
   14000de47:	sub    al,BYTE PTR [rax]
   14000de49:	add    BYTE PTR [rax],al
   14000de4b:	(bad)  
	...
   14000de54:	mov    BYTE PTR [rcx+rax*4-0x42392e01],al
   14000de5b:	(bad)  
   14000de5c:	std    
   14000de5d:	(bad)  
   14000de5e:	(bad)  
   14000de5f:	(bad)  
   14000de60:	std    
   14000de61:	(bad)  
   14000de62:	(bad)  
   14000de63:	call   rcx
   14000de65:	mov    ebp,0x90adffbc
   14000de6a:	jmp    FWORD PTR gs:[rbp-0x5300996e]
   14000de71:	xchg   ebx,eax
   14000de72:	jmp    DWORD PTR [rbx-0x5500996b]
   14000de79:	xchg   edi,eax
   14000de7a:	jmp    FWORD PTR [ecx-0x57009767]
   14000de81:	(bad)  
   14000de82:	push   0x5f95a1ff
   14000de87:	call   FWORD PTR [rdx+rdx*4-0x706800a7]
   14000de8e:	push   rdx
   14000de8f:	call   QWORD PTR [rdx-0x6f00b373]
   14000de95:	mov    cs,WORD PTR [rdi+rdi*8-0x71]
   14000de99:	nop
   14000de9a:	rex.WRB dec QWORD PTR [r14-0x7200b16e]
   14000dea1:	xchg   esp,eax
   14000dea2:	rex.WRXB dec QWORD PTR [r13+r10*4-0x687400b0]
   14000deaa:	push   rcx
   14000deab:	call   rcx
   14000dead:	mov    ebp,0xe6e6ffbc
   14000deb2:	out    0xff,eax
   14000deb4:	std    
   14000deb5:	(bad)  
   14000deb6:	(bad)  
   14000deb7:	(bad)  
   14000deb8:	std    
   14000deb9:	(bad)  
   14000deba:	(bad)  
   14000debb:	(bad)  
   14000debc:	fcmovu st,st(2)
   14000debe:	(bad)  
   14000dec0:	fcmovu st,st(2)
   14000dec2:	(bad)  
   14000dec4:	fcmovu st,st(2)
   14000dec6:	(bad)  
   14000dec8:	fcmovu st,st(2)
   14000deca:	(bad)  
   14000decc:	fcmovu st,st(2)
   14000dece:	(bad)  
   14000ded0:	fcmovu st,st(2)
   14000ded2:	(bad)  
   14000ded4:	fcmovu st,st(2)
   14000ded6:	(bad)  
   14000ded8:	fcmovu st,st(2)
   14000deda:	(bad)  
   14000dedc:	std    
   14000dedd:	(bad)  
   14000dede:	(bad)  
   14000dedf:	(bad)  
   14000dee0:	std    
   14000dee1:	(bad)  
   14000dee2:	(bad)  
   14000dee3:	(bad)  
   14000dee4:	std    
   14000dee5:	(bad)  
   14000dee6:	(bad)  
   14000dee7:	jmp    FWORD PTR [rdx-0x57009364]
   14000deed:	movabs eax,ds:0xaca2ff71a7a5ff6e
   14000def6:	je     0x14000def7
   14000def8:	std    
   14000def9:	(bad)  
   14000defa:	(bad)  
   14000defb:	call   rcx
   14000defd:	(bad)  
   14000defe:	mov    ebp,0x818488ff
   14000df03:	inc    DWORD PTR [rax]
   14000df05:	add    BYTE PTR [rax],al
   14000df07:	sub    al,BYTE PTR [rax]
   14000df09:	add    BYTE PTR [rax],al
   14000df0b:	(bad)  
	...
   14000df14:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000df1b:	(bad)  
   14000df1c:	std    
   14000df1d:	(bad)  
   14000df1e:	(bad)  
   14000df1f:	(bad)  
   14000df20:	std    
   14000df21:	(bad)  
   14000df22:	(bad)  
   14000df23:	call   rcx
   14000df25:	mov    ebp,0x8aaaffbc
   14000df2a:	pop    rsi
   14000df2b:	jmp    FWORD PTR [rdx-0x5600a074]
   14000df31:	lea    ebx,[rdi-0x1]
   14000df34:	test   eax,0xa8ff608f
   14000df39:	xchg   ecx,eax
   14000df3a:	(bad)  
   14000df3b:	jmp    QWORD PTR [rdi-0x59009e6d]
   14000df41:	xchg   esp,eax
   14000df42:	(bad)  
   14000df43:	jmp    QWORD PTR [rbp-0x5b009c6a]
   14000df49:	cwde   
   14000df4a:	jmp    QWORD PTR fs:[rcx+rbx*4-0x645c009b]
   14000df52:	jmp    WORD PTR [rdx-0x61009863]
   14000df59:	fwait
   14000df5a:	(bad)  
   14000df5b:	call   FWORD PTR [rbp-0x63009c63]
   14000df61:	lahf   
   14000df62:	call   FWORD PTR fs:[rbx-0x62009a5f]
   14000df69:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000df6a:	push   0xffffffffffffffff
   14000df6c:	sar    DWORD PTR [rbp-0x19190044],1
   14000df72:	out    0xff,eax
   14000df74:	std    
   14000df75:	(bad)  
   14000df76:	(bad)  
   14000df77:	(bad)  
   14000df78:	std    
   14000df79:	(bad)  
   14000df7a:	(bad)  
   14000df7b:	(bad)  
   14000df7c:	std    
   14000df7d:	(bad)  
   14000df7e:	(bad)  
   14000df7f:	(bad)  
   14000df80:	std    
   14000df81:	(bad)  
   14000df82:	(bad)  
   14000df83:	(bad)  
   14000df84:	std    
   14000df85:	(bad)  
   14000df86:	(bad)  
   14000df87:	(bad)  
   14000df88:	std    
   14000df89:	(bad)  
   14000df8a:	(bad)  
   14000df8b:	(bad)  
   14000df8c:	std    
   14000df8d:	(bad)  
   14000df8e:	(bad)  
   14000df8f:	(bad)  
   14000df90:	std    
   14000df91:	(bad)  
   14000df92:	(bad)  
   14000df93:	(bad)  
   14000df94:	std    
   14000df95:	(bad)  
   14000df96:	(bad)  
   14000df97:	(bad)  
   14000df98:	std    
   14000df99:	(bad)  
   14000df9a:	(bad)  
   14000df9b:	(bad)  
   14000df9c:	std    
   14000df9d:	(bad)  
   14000df9e:	(bad)  
   14000df9f:	(bad)  
   14000dfa0:	std    
   14000dfa1:	(bad)  
   14000dfa2:	(bad)  
   14000dfa3:	(bad)  
   14000dfa4:	std    
   14000dfa5:	(bad)  
   14000dfa6:	(bad)  
   14000dfa7:	jmp    FWORD PTR [rbp-0x5500966b]
   14000dfad:	pushf  
   14000dfae:	ins    BYTE PTR es:[rdi],dx
   14000dfaf:	jmp    FWORD PTR [rax-0x5a00915f]
   14000dfb5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000dfb6:	jno    0x14000dfb7
   14000dfb8:	std    
   14000dfb9:	(bad)  
   14000dfba:	(bad)  
   14000dfbb:	jmp    rax
   14000dfbd:	(bad)  
   14000dfbf:	dec    DWORD PTR [rax+0xff8184]
   14000dfc5:	add    BYTE PTR [rax],al
   14000dfc7:	sub    al,BYTE PTR [rax]
   14000dfc9:	add    BYTE PTR [rax],al
   14000dfcb:	(bad)  
	...
   14000dfd4:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000dfdb:	(bad)  
   14000dfdc:	std    
   14000dfdd:	(bad)  
   14000dfde:	(bad)  
   14000dfdf:	(bad)  
   14000dfe0:	std    
   14000dfe1:	(bad)  
   14000dfe2:	(bad)  
   14000dfe3:	call   rcx
   14000dfe5:	mov    ebp,0x83a8ffbc
   14000dfea:	push   rdi
   14000dfeb:	jmp    FWORD PTR [rax-0x5800a77b]
   14000dff1:	xchg   DWORD PTR [rax-0x1],ebx
   14000dff4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000dff5:	mov    BYTE PTR [rcx-0x1],bl
   14000dff8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dff9:	mov    bl,BYTE PTR [rdx-0x1]
   14000dffc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000dffd:	mov    WORD PTR [rbx-0x1],ds
   14000e000:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000e001:	mov    ds,WORD PTR [rdi+rdi*8-0x5c]
   14000e005:	(bad)  
   14000e006:	pop    rsp
   14000e007:	jmp    QWORD PTR [rbx-0x5d00a26f]
   14000e00d:	xchg   ebx,eax
   14000e00e:	pop    rsi
   14000e00f:	jmp    QWORD PTR [rcx-0x5f00a06b]
   14000e015:	xchg   edi,eax
   14000e016:	(bad)  
   14000e017:	call   FWORD PTR [rdi-0x61009e67]
   14000e01d:	fwait
   14000e01e:	(bad)  
   14000e01f:	call   FWORD PTR [rbp-0x62009d63]
   14000e025:	sahf   
   14000e026:	movsxd edi,edi
   14000e028:	pushf  
   14000e029:	lahf   
   14000e02a:	fs call rcx
   14000e02d:	mov    ebp,0xe6e6ffbc
   14000e032:	out    0xff,eax
   14000e034:	std    
   14000e035:	(bad)  
   14000e036:	(bad)  
   14000e037:	(bad)  
   14000e038:	std    
   14000e039:	(bad)  
   14000e03a:	(bad)  
   14000e03b:	(bad)  
   14000e03c:	fcmovu st,st(2)
   14000e03e:	(bad)  
   14000e040:	fcmovu st,st(2)
   14000e042:	(bad)  
   14000e044:	fcmovu st,st(2)
   14000e046:	(bad)  
   14000e048:	fcmovu st,st(2)
   14000e04a:	(bad)  
   14000e04c:	fcmovu st,st(2)
   14000e04e:	(bad)  
   14000e050:	fcmovu st,st(2)
   14000e052:	(bad)  
   14000e054:	fcmovu st,st(2)
   14000e056:	(bad)  
   14000e058:	fcmovu st,st(2)
   14000e05a:	(bad)  
   14000e05c:	std    
   14000e05d:	(bad)  
   14000e05e:	(bad)  
   14000e05f:	(bad)  
   14000e060:	std    
   14000e061:	(bad)  
   14000e062:	(bad)  
   14000e063:	(bad)  
   14000e064:	std    
   14000e065:	(bad)  
   14000e066:	(bad)  
   14000e067:	push   QWORD PTR [rcx-0x52009a73]
   14000e06d:	xchg   ebp,eax
   14000e06e:	imul   edi,edi,0xff6c9caa
   14000e074:	test   al,0xa1
   14000e076:	outs   dx,BYTE PTR ds:[rsi]
   14000e077:	(bad)  
   14000e078:	std    
   14000e079:	(bad)  
   14000e07a:	(bad)  
   14000e07b:	jmp    rax
   14000e07d:	(bad)  
   14000e07f:	dec    DWORD PTR [rax+0xff8184]
   14000e085:	add    BYTE PTR [rax],al
   14000e087:	sub    al,BYTE PTR [rax]
   14000e089:	add    BYTE PTR [rax],al
   14000e08b:	(bad)  
	...
   14000e094:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000e09b:	(bad)  
   14000e09c:	std    
   14000e09d:	(bad)  
   14000e09e:	(bad)  
   14000e09f:	(bad)  
   14000e0a0:	std    
   14000e0a1:	(bad)  
   14000e0a2:	(bad)  
   14000e0a3:	call   rcx
   14000e0a5:	mov    ebp,0x7da6ffbc
   14000e0aa:	push   rax
   14000e0ab:	jmp    QWORD PTR [rsi-0x5a00af81]
   14000e0b1:	adc    DWORD PTR [rcx-0x1],0xff5281a4
   14000e0b8:	movabs ds:0xa2ff5485a3ff5383,eax
   14000e0c1:	xchg   DWORD PTR [rbp-0x1],edx
   14000e0c4:	movabs eax,ds:0x9fff568ba0ff5589
   14000e0cd:	lea    edx,[rdi-0x1]
   14000e0d0:	lahf   
   14000e0d1:	(bad)  
   14000e0d2:	pop    rax
   14000e0d3:	call   FWORD PTR [rsi-0x6200a66f]
   14000e0d9:	xchg   ebx,eax
   14000e0da:	pop    rcx
   14000e0db:	call   FWORD PTR [rbp+rdx*4-0x696400a6]
   14000e0e2:	pop    rbx
   14000e0e3:	call   FWORD PTR [rdx-0x6600a368]
   14000e0e9:	(bad)  
   14000e0ea:	pop    rbp
   14000e0eb:	call   rcx
   14000e0ed:	mov    ebp,0xe6e6ffbc
   14000e0f2:	out    0xff,eax
   14000e0f4:	std    
   14000e0f5:	(bad)  
   14000e0f6:	(bad)  
   14000e0f7:	(bad)  
   14000e0f8:	std    
   14000e0f9:	(bad)  
   14000e0fa:	(bad)  
   14000e0fb:	(bad)  
   14000e0fc:	std    
   14000e0fd:	(bad)  
   14000e0fe:	(bad)  
   14000e0ff:	(bad)  
   14000e100:	std    
   14000e101:	(bad)  
   14000e102:	(bad)  
   14000e103:	(bad)  
   14000e104:	std    
   14000e105:	(bad)  
   14000e106:	(bad)  
   14000e107:	(bad)  
   14000e108:	std    
   14000e109:	(bad)  
   14000e10a:	(bad)  
   14000e10b:	(bad)  
   14000e10c:	std    
   14000e10d:	(bad)  
   14000e10e:	(bad)  
   14000e10f:	(bad)  
   14000e110:	std    
   14000e111:	(bad)  
   14000e112:	(bad)  
   14000e113:	(bad)  
   14000e114:	std    
   14000e115:	(bad)  
   14000e116:	(bad)  
   14000e117:	(bad)  
   14000e118:	std    
   14000e119:	(bad)  
   14000e11a:	(bad)  
   14000e11b:	(bad)  
   14000e11c:	std    
   14000e11d:	(bad)  
   14000e11e:	(bad)  
   14000e11f:	(bad)  
   14000e120:	std    
   14000e121:	(bad)  
   14000e122:	(bad)  
   14000e123:	(bad)  
   14000e124:	std    
   14000e125:	(bad)  
   14000e126:	(bad)  
   14000e127:	push   QWORD PTR [rbx-0x4e009c78]
   14000e12d:	lea    esp,[rbp-0x1]
   14000e130:	lods   eax,DWORD PTR ds:[rsi]
   14000e131:	xchg   ebp,eax
   14000e132:	imul   edi,edi,0xff6c9caa
   14000e138:	std    
   14000e139:	(bad)  
   14000e13a:	(bad)  
   14000e13b:	jmp    rax
   14000e13d:	(bad)  
   14000e13f:	dec    DWORD PTR [rax+0xff8184]
   14000e145:	add    BYTE PTR [rax],al
   14000e147:	sub    al,BYTE PTR [rax]
   14000e149:	add    BYTE PTR [rax],al
   14000e14b:	(bad)  
	...
   14000e154:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000e15b:	(bad)  
   14000e15c:	std    
   14000e15d:	(bad)  
   14000e15e:	(bad)  
   14000e15f:	(bad)  
   14000e160:	std    
   14000e161:	(bad)  
   14000e162:	(bad)  
   14000e163:	call   rcx
   14000e165:	mov    ebp,0x77a4ffbc
   14000e16a:	rex.WB jmp QWORD PTR [r8+rdi*2+0x79a3ff4a]
   14000e172:	rex.WX jmp QWORD PTR [rdx-0x5e00b485]
   14000e179:	jge    0x14000e1c7
   14000e17b:	jmp    QWORD PTR [rcx-0x5f00b281]
   14000e181:	or     DWORD PTR [rbp-0x1],0xff4e839f
   14000e188:	sahf   
   14000e189:	test   DWORD PTR [rdi-0x1],ecx
   14000e18c:	popf   
   14000e18d:	xchg   DWORD PTR [rax-0x1],edx
   14000e190:	pushf  
   14000e191:	mov    BYTE PTR [rcx-0x1],dl
   14000e194:	fwait
   14000e195:	mov    dl,BYTE PTR [rdx-0x1]
   14000e198:	(bad)  
   14000e199:	mov    WORD PTR [rbx-0x1],ss
   14000e19c:	cdq    
   14000e19d:	mov    ss,WORD PTR [rdi+rdi*8-0x68]
   14000e1a1:	nop
   14000e1a2:	push   rbp
   14000e1a3:	call   QWORD PTR [rdi-0x6800a96e]
   14000e1a9:	xchg   esp,eax
   14000e1aa:	push   rdi
   14000e1ab:	call   rcx
   14000e1ad:	mov    ebp,0xe6e6ffbc
   14000e1b2:	out    0xff,eax
   14000e1b4:	std    
   14000e1b5:	(bad)  
   14000e1b6:	(bad)  
   14000e1b7:	(bad)  
   14000e1b8:	std    
   14000e1b9:	(bad)  
   14000e1ba:	(bad)  
   14000e1bb:	(bad)  
   14000e1bc:	fcmovu st,st(2)
   14000e1be:	(bad)  
   14000e1c0:	fcmovu st,st(2)
   14000e1c2:	(bad)  
   14000e1c4:	fcmovu st,st(2)
   14000e1c6:	(bad)  
   14000e1c8:	fcmovu st,st(2)
   14000e1ca:	(bad)  
   14000e1cc:	fcmovu st,st(2)
   14000e1ce:	(bad)  
   14000e1d0:	fcmovu st,st(2)
   14000e1d2:	(bad)  
   14000e1d4:	fcmovu st,st(2)
   14000e1d6:	(bad)  
   14000e1d8:	fcmovu st,st(2)
   14000e1da:	(bad)  
   14000e1dc:	std    
   14000e1dd:	(bad)  
   14000e1de:	(bad)  
   14000e1df:	(bad)  
   14000e1e0:	std    
   14000e1e1:	(bad)  
   14000e1e2:	(bad)  
   14000e1e3:	(bad)  
   14000e1e4:	std    
   14000e1e5:	(bad)  
   14000e1e6:	(bad)  
   14000e1e7:	push   QWORD PTR [rbx-0x4c009c78]
   14000e1ed:	mov    BYTE PTR [rbx-0x1],ah
   14000e1f0:	mov    cl,0x8d
   14000e1f2:	jmp    FWORD PTR gs:[rbp-0x200966b]
   14000e1f9:	(bad)  
   14000e1fa:	(bad)  
   14000e1fb:	jmp    rax
   14000e1fd:	(bad)  
   14000e1ff:	dec    DWORD PTR [rax+0xff8184]
   14000e205:	add    BYTE PTR [rax],al
   14000e207:	sub    al,BYTE PTR [rax]
   14000e209:	add    BYTE PTR [rax],al
   14000e20b:	(bad)  
	...
   14000e214:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000e21b:	(bad)  
   14000e21c:	std    
   14000e21d:	(bad)  
   14000e21e:	(bad)  
   14000e21f:	(bad)  
   14000e220:	std    
   14000e221:	(bad)  
   14000e222:	(bad)  
   14000e223:	call   rcx
   14000e225:	mov    ebp,0x72a2ffbc
   14000e22a:	rex.R jmp QWORD PTR [rcx-0x5e00ba8d]
   14000e231:	je     0x14000e278
   14000e233:	jmp    QWORD PTR [rax-0x6000b98a]
   14000e239:	ja     0x14000e282
   14000e23b:	call   FWORD PTR [rdi-0x6000b787]
   14000e241:	jnp    0x14000e28b
   14000e243:	call   FWORD PTR [rsi-0x6200b683]
   14000e249:	jg     0x14000e295
   14000e24b:	call   FWORD PTR [rcx+rax*4-0x7c6300b5]
   14000e252:	rex.WR call FWORD PTR [rbx-0x6500b27c]
   14000e259:	xchg   BYTE PTR [rbp-0x1],cl
   14000e25c:	cdq    
   14000e25d:	mov    BYTE PTR [rsi-0x1],cl
   14000e260:	cwde   
   14000e261:	mov    cl,BYTE PTR [rdi-0x1]
   14000e264:	xchg   edi,eax
   14000e265:	lea    edx,[rax-0x1]
   14000e268:	xchg   esi,eax
   14000e269:	(bad)  
   14000e26a:	push   rcx
   14000e26b:	call   rcx
   14000e26d:	mov    ebp,0xe6e6ffbc
   14000e272:	out    0xff,eax
   14000e274:	std    
   14000e275:	(bad)  
   14000e276:	(bad)  
   14000e277:	(bad)  
   14000e278:	std    
   14000e279:	(bad)  
   14000e27a:	(bad)  
   14000e27b:	(bad)  
   14000e27c:	std    
   14000e27d:	(bad)  
   14000e27e:	(bad)  
   14000e27f:	(bad)  
   14000e280:	std    
   14000e281:	(bad)  
   14000e282:	(bad)  
   14000e283:	(bad)  
   14000e284:	std    
   14000e285:	(bad)  
   14000e286:	(bad)  
   14000e287:	(bad)  
   14000e288:	std    
   14000e289:	(bad)  
   14000e28a:	(bad)  
   14000e28b:	(bad)  
   14000e28c:	std    
   14000e28d:	(bad)  
   14000e28e:	(bad)  
   14000e28f:	(bad)  
   14000e290:	std    
   14000e291:	(bad)  
   14000e292:	(bad)  
   14000e293:	(bad)  
   14000e294:	std    
   14000e295:	(bad)  
   14000e296:	(bad)  
   14000e297:	(bad)  
   14000e298:	std    
   14000e299:	(bad)  
   14000e29a:	(bad)  
   14000e29b:	(bad)  
   14000e29c:	std    
   14000e29d:	(bad)  
   14000e29e:	(bad)  
   14000e29f:	(bad)  
   14000e2a0:	std    
   14000e2a1:	(bad)  
   14000e2a2:	(bad)  
   14000e2a3:	(bad)  
   14000e2a4:	std    
   14000e2a5:	(bad)  
   14000e2a6:	(bad)  
   14000e2a7:	push   QWORD PTR [rbx-0x4c009c78]
   14000e2ad:	mov    BYTE PTR [rbx-0x1],ah
   14000e2b0:	mov    bl,0x88
   14000e2b2:	movsxd edi,edi
   14000e2b4:	mov    cl,0x8d
   14000e2b6:	gs (bad) 
   14000e2b8:	std    
   14000e2b9:	(bad)  
   14000e2ba:	(bad)  
   14000e2bb:	jmp    rax
   14000e2bd:	(bad)  
   14000e2bf:	dec    DWORD PTR [rax+0xff8184]
   14000e2c5:	add    BYTE PTR [rax],al
   14000e2c7:	sub    al,BYTE PTR [rax]
   14000e2c9:	add    BYTE PTR [rax],al
   14000e2cb:	(bad)  
	...
   14000e2d4:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000e2db:	(bad)  
   14000e2dc:	std    
   14000e2dd:	(bad)  
   14000e2de:	(bad)  
   14000e2df:	(bad)  
   14000e2e0:	std    
   14000e2e1:	(bad)  
   14000e2e2:	(bad)  
   14000e2e3:	inc    ecx
   14000e2e5:	mov    dh,0xb5
   14000e2e7:	call   rcx
   14000e2e9:	mov    ebp,0xbdd1ffbc
   14000e2ee:	mov    esp,0xbcbdd1ff
   14000e2f3:	call   rcx
   14000e2f5:	mov    ebp,0xbdd1ffbc
   14000e2fa:	mov    esp,0xbcbdd1ff
   14000e2ff:	call   rcx
   14000e301:	mov    ebp,0xbdd1ffbc
   14000e306:	mov    esp,0xbcbdd1ff
   14000e30b:	call   rcx
   14000e30d:	mov    ebp,0xbdd1ffbc
   14000e312:	mov    esp,0xbcbdd1ff
   14000e317:	call   rcx
   14000e319:	mov    ebp,0xbdd1ffbc
   14000e31e:	mov    esp,0xbcbdd1ff
   14000e323:	call   rcx
   14000e325:	mov    ebp,0xbdd1ffbc
   14000e32a:	mov    esp,0xb5b6c1ff
   14000e32f:	(bad)  
   14000e330:	std    
   14000e331:	(bad)  
   14000e332:	(bad)  
   14000e333:	(bad)  
   14000e334:	std    
   14000e335:	(bad)  
   14000e336:	(bad)  
   14000e337:	(bad)  
   14000e338:	std    
   14000e339:	(bad)  
   14000e33a:	(bad)  
   14000e33b:	(bad)  
   14000e33c:	fcmovu st,st(2)
   14000e33e:	(bad)  
   14000e340:	fcmovu st,st(2)
   14000e342:	(bad)  
   14000e344:	fcmovu st,st(2)
   14000e346:	(bad)  
   14000e348:	fcmovu st,st(2)
   14000e34a:	(bad)  
   14000e34c:	fcmovu st,st(2)
   14000e34e:	(bad)  
   14000e350:	fcmovu st,st(2)
   14000e352:	(bad)  
   14000e354:	fcmovu st,st(2)
   14000e356:	(bad)  
   14000e358:	fcmovu st,st(2)
   14000e35a:	(bad)  
   14000e35c:	std    
   14000e35d:	(bad)  
   14000e35e:	(bad)  
   14000e35f:	(bad)  
   14000e360:	std    
   14000e361:	(bad)  
   14000e362:	(bad)  
   14000e363:	(bad)  
   14000e364:	std    
   14000e365:	(bad)  
   14000e366:	(bad)  
   14000e367:	push   QWORD PTR [rbx-0x4c009c78]
   14000e36d:	mov    BYTE PTR [rbx-0x1],ah
   14000e370:	mov    bl,0x88
   14000e372:	movsxd edi,edi
   14000e374:	mov    bl,0x88
   14000e376:	movsxd edi,edi
   14000e378:	std    
   14000e379:	(bad)  
   14000e37a:	(bad)  
   14000e37b:	jmp    rax
   14000e37d:	(bad)  
   14000e37f:	dec    DWORD PTR [rax+0xff8184]
   14000e385:	add    BYTE PTR [rax],al
   14000e387:	sub    al,BYTE PTR [rax]
   14000e389:	add    BYTE PTR [rax],al
   14000e38b:	(bad)  
	...
   14000e394:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000e39b:	(bad)  
   14000e39c:	std    
   14000e39d:	(bad)  
   14000e39e:	(bad)  
   14000e39f:	(bad)  
   14000e3a0:	std    
   14000e3a1:	(bad)  
   14000e3a2:	(bad)  
   14000e3a3:	(bad)  
   14000e3a4:	std    
   14000e3a5:	(bad)  
   14000e3a6:	(bad)  
   14000e3a7:	(bad)  
   14000e3a8:	std    
   14000e3a9:	(bad)  
   14000e3aa:	(bad)  
   14000e3ab:	(bad)  
   14000e3ac:	std    
   14000e3ad:	(bad)  
   14000e3ae:	(bad)  
   14000e3af:	(bad)  
   14000e3b0:	std    
   14000e3b1:	(bad)  
   14000e3b2:	(bad)  
   14000e3b3:	(bad)  
   14000e3b4:	std    
   14000e3b5:	(bad)  
   14000e3b6:	(bad)  
   14000e3b7:	(bad)  
   14000e3b8:	std    
   14000e3b9:	(bad)  
   14000e3ba:	(bad)  
   14000e3bb:	(bad)  
   14000e3bc:	std    
   14000e3bd:	(bad)  
   14000e3be:	(bad)  
   14000e3bf:	(bad)  
   14000e3c0:	std    
   14000e3c1:	(bad)  
   14000e3c2:	(bad)  
   14000e3c3:	(bad)  
   14000e3c4:	std    
   14000e3c5:	(bad)  
   14000e3c6:	(bad)  
   14000e3c7:	(bad)  
   14000e3c8:	std    
   14000e3c9:	(bad)  
   14000e3ca:	(bad)  
   14000e3cb:	(bad)  
   14000e3cc:	std    
   14000e3cd:	(bad)  
   14000e3ce:	(bad)  
   14000e3cf:	(bad)  
   14000e3d0:	std    
   14000e3d1:	(bad)  
   14000e3d2:	(bad)  
   14000e3d3:	(bad)  
   14000e3d4:	std    
   14000e3d5:	(bad)  
   14000e3d6:	(bad)  
   14000e3d7:	(bad)  
   14000e3d8:	std    
   14000e3d9:	(bad)  
   14000e3da:	(bad)  
   14000e3db:	(bad)  
   14000e3dc:	std    
   14000e3dd:	(bad)  
   14000e3de:	(bad)  
   14000e3df:	(bad)  
   14000e3e0:	std    
   14000e3e1:	(bad)  
   14000e3e2:	(bad)  
   14000e3e3:	(bad)  
   14000e3e4:	std    
   14000e3e5:	(bad)  
   14000e3e6:	(bad)  
   14000e3e7:	(bad)  
   14000e3e8:	std    
   14000e3e9:	(bad)  
   14000e3ea:	(bad)  
   14000e3eb:	(bad)  
   14000e3ec:	std    
   14000e3ed:	(bad)  
   14000e3ee:	(bad)  
   14000e3ef:	(bad)  
   14000e3f0:	std    
   14000e3f1:	(bad)  
   14000e3f2:	(bad)  
   14000e3f3:	(bad)  
   14000e3f4:	std    
   14000e3f5:	(bad)  
   14000e3f6:	(bad)  
   14000e3f7:	(bad)  
   14000e3f8:	std    
   14000e3f9:	(bad)  
   14000e3fa:	(bad)  
   14000e3fb:	(bad)  
   14000e3fc:	std    
   14000e3fd:	(bad)  
   14000e3fe:	(bad)  
   14000e3ff:	(bad)  
   14000e400:	std    
   14000e401:	(bad)  
   14000e402:	(bad)  
   14000e403:	(bad)  
   14000e404:	std    
   14000e405:	(bad)  
   14000e406:	(bad)  
   14000e407:	(bad)  
   14000e408:	std    
   14000e409:	(bad)  
   14000e40a:	(bad)  
   14000e40b:	(bad)  
   14000e40c:	std    
   14000e40d:	(bad)  
   14000e40e:	(bad)  
   14000e40f:	(bad)  
   14000e410:	std    
   14000e411:	(bad)  
   14000e412:	(bad)  
   14000e413:	(bad)  
   14000e414:	std    
   14000e415:	(bad)  
   14000e416:	(bad)  
   14000e417:	(bad)  
   14000e418:	std    
   14000e419:	(bad)  
   14000e41a:	(bad)  
   14000e41b:	(bad)  
   14000e41c:	std    
   14000e41d:	(bad)  
   14000e41e:	(bad)  
   14000e41f:	(bad)  
   14000e420:	std    
   14000e421:	(bad)  
   14000e422:	(bad)  
   14000e423:	(bad)  
   14000e424:	std    
   14000e425:	(bad)  
   14000e426:	(bad)  
   14000e427:	(bad)  
   14000e428:	std    
   14000e429:	(bad)  
   14000e42a:	(bad)  
   14000e42b:	(bad)  
   14000e42c:	std    
   14000e42d:	(bad)  
   14000e42e:	(bad)  
   14000e42f:	(bad)  
   14000e430:	std    
   14000e431:	(bad)  
   14000e432:	(bad)  
   14000e433:	(bad)  
   14000e434:	std    
   14000e435:	(bad)  
   14000e436:	(bad)  
   14000e437:	(bad)  
   14000e438:	std    
   14000e439:	(bad)  
   14000e43a:	(bad)  
   14000e43b:	jmp    rax
   14000e43d:	(bad)  
   14000e43f:	dec    DWORD PTR [rax+0xff8184]
   14000e445:	add    BYTE PTR [rax],al
   14000e447:	sub    al,BYTE PTR [rax]
   14000e449:	add    BYTE PTR [rax],al
   14000e44b:	(bad)  
	...
   14000e454:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000e45b:	(bad)  
   14000e45c:	std    
   14000e45d:	(bad)  
   14000e45e:	(bad)  
   14000e45f:	(bad)  
   14000e460:	std    
   14000e461:	(bad)  
   14000e462:	(bad)  
   14000e463:	(bad)  
   14000e464:	std    
   14000e465:	(bad)  
   14000e466:	(bad)  
   14000e467:	(bad)  
   14000e468:	std    
   14000e469:	(bad)  
   14000e46a:	(bad)  
   14000e46b:	(bad)  
   14000e46c:	std    
   14000e46d:	(bad)  
   14000e46e:	(bad)  
   14000e46f:	(bad)  
   14000e470:	std    
   14000e471:	(bad)  
   14000e472:	(bad)  
   14000e473:	(bad)  
   14000e474:	std    
   14000e475:	(bad)  
   14000e476:	(bad)  
   14000e477:	(bad)  
   14000e478:	std    
   14000e479:	(bad)  
   14000e47a:	(bad)  
   14000e47b:	(bad)  
   14000e47c:	std    
   14000e47d:	(bad)  
   14000e47e:	(bad)  
   14000e47f:	(bad)  
   14000e480:	std    
   14000e481:	(bad)  
   14000e482:	(bad)  
   14000e483:	(bad)  
   14000e484:	std    
   14000e485:	(bad)  
   14000e486:	(bad)  
   14000e487:	(bad)  
   14000e488:	std    
   14000e489:	(bad)  
   14000e48a:	(bad)  
   14000e48b:	(bad)  
   14000e48c:	std    
   14000e48d:	(bad)  
   14000e48e:	(bad)  
   14000e48f:	(bad)  
   14000e490:	std    
   14000e491:	(bad)  
   14000e492:	(bad)  
   14000e493:	(bad)  
   14000e494:	std    
   14000e495:	(bad)  
   14000e496:	(bad)  
   14000e497:	(bad)  
   14000e498:	std    
   14000e499:	(bad)  
   14000e49a:	(bad)  
   14000e49b:	(bad)  
   14000e49c:	std    
   14000e49d:	(bad)  
   14000e49e:	(bad)  
   14000e49f:	(bad)  
   14000e4a0:	std    
   14000e4a1:	(bad)  
   14000e4a2:	(bad)  
   14000e4a3:	(bad)  
   14000e4a4:	std    
   14000e4a5:	(bad)  
   14000e4a6:	(bad)  
   14000e4a7:	(bad)  
   14000e4a8:	std    
   14000e4a9:	(bad)  
   14000e4aa:	(bad)  
   14000e4ab:	(bad)  
   14000e4ac:	std    
   14000e4ad:	(bad)  
   14000e4ae:	(bad)  
   14000e4af:	(bad)  
   14000e4b0:	(bad)  
   14000e4b1:	std    
   14000e4b2:	std    
   14000e4b3:	(bad)  
   14000e4b4:	(bad)  
   14000e4b5:	(bad)  
   14000e4b6:	(bad)  
   14000e4b7:	(bad)  
   14000e4b8:	std    
   14000e4b9:	std    
   14000e4ba:	std    
   14000e4bb:	(bad)  
   14000e4bc:	cld    
   14000e4bd:	cld    
   14000e4be:	cld    
   14000e4bf:	(bad)  
   14000e4c0:	cld    
   14000e4c1:	cld    
   14000e4c2:	cld    
   14000e4c3:	(bad)  
   14000e4c4:	cld    
   14000e4c5:	cld    
   14000e4c6:	cld    
   14000e4c7:	(bad)  
   14000e4c8:	cld    
   14000e4c9:	cld    
   14000e4ca:	cld    
   14000e4cb:	(bad)  
   14000e4cc:	cld    
   14000e4cd:	cld    
   14000e4ce:	cld    
   14000e4cf:	(bad)  
   14000e4d0:	cld    
   14000e4d1:	cld    
   14000e4d2:	cld    
   14000e4d3:	(bad)  
   14000e4d4:	cld    
   14000e4d5:	cld    
   14000e4d6:	cld    
   14000e4d7:	(bad)  
   14000e4d8:	cld    
   14000e4d9:	cld    
   14000e4da:	cld    
   14000e4db:	(bad)  
   14000e4dc:	(bad)  
   14000e4dd:	(bad)  
   14000e4de:	(bad)  
   14000e4df:	(bad)  
   14000e4e0:	std    
   14000e4e1:	(bad)  
   14000e4e2:	(bad)  
   14000e4e3:	(bad)  
   14000e4e4:	std    
   14000e4e5:	(bad)  
   14000e4e6:	(bad)  
   14000e4e7:	(bad)  
   14000e4e8:	std    
   14000e4e9:	(bad)  
   14000e4ea:	(bad)  
   14000e4eb:	(bad)  
   14000e4ec:	std    
   14000e4ed:	(bad)  
   14000e4ee:	(bad)  
   14000e4ef:	(bad)  
   14000e4f0:	std    
   14000e4f1:	(bad)  
   14000e4f2:	(bad)  
   14000e4f3:	(bad)  
   14000e4f4:	std    
   14000e4f5:	(bad)  
   14000e4f6:	(bad)  
   14000e4f7:	(bad)  
   14000e4f8:	std    
   14000e4f9:	(bad)  
   14000e4fa:	(bad)  
   14000e4fb:	jmp    rax
   14000e4fd:	(bad)  
   14000e4ff:	dec    DWORD PTR [rax+0xff8184]
   14000e505:	add    BYTE PTR [rax],al
   14000e507:	sub    al,BYTE PTR [rax]
   14000e509:	add    BYTE PTR [rax],al
   14000e50b:	(bad)  
	...
   14000e514:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000e51b:	(bad)  
   14000e51c:	std    
   14000e51d:	(bad)  
   14000e51e:	(bad)  
   14000e51f:	(bad)  
   14000e520:	std    
   14000e521:	(bad)  
   14000e522:	(bad)  
   14000e523:	(bad)  
   14000e524:	std    
   14000e525:	(bad)  
   14000e526:	(bad)  
   14000e527:	(bad)  
   14000e528:	std    
   14000e529:	(bad)  
   14000e52a:	(bad)  
   14000e52b:	(bad)  
   14000e52c:	std    
   14000e52d:	(bad)  
   14000e52e:	(bad)  
   14000e52f:	(bad)  
   14000e530:	std    
   14000e531:	(bad)  
   14000e532:	(bad)  
   14000e533:	(bad)  
   14000e534:	std    
   14000e535:	(bad)  
   14000e536:	(bad)  
   14000e537:	(bad)  
   14000e538:	std    
   14000e539:	(bad)  
   14000e53a:	(bad)  
   14000e53b:	(bad)  
   14000e53c:	std    
   14000e53d:	(bad)  
   14000e53e:	(bad)  
   14000e53f:	(bad)  
   14000e540:	std    
   14000e541:	(bad)  
   14000e542:	(bad)  
   14000e543:	(bad)  
   14000e544:	std    
   14000e545:	(bad)  
   14000e546:	(bad)  
   14000e547:	(bad)  
   14000e548:	std    
   14000e549:	(bad)  
   14000e54a:	(bad)  
   14000e54b:	(bad)  
   14000e54c:	std    
   14000e54d:	(bad)  
   14000e54e:	(bad)  
   14000e54f:	(bad)  
   14000e550:	std    
   14000e551:	(bad)  
   14000e552:	(bad)  
   14000e553:	(bad)  
   14000e554:	std    
   14000e555:	(bad)  
   14000e556:	(bad)  
   14000e557:	(bad)  
   14000e558:	std    
   14000e559:	(bad)  
   14000e55a:	(bad)  
   14000e55b:	(bad)  
   14000e55c:	std    
   14000e55d:	(bad)  
   14000e55e:	(bad)  
   14000e55f:	(bad)  
   14000e560:	std    
   14000e561:	(bad)  
   14000e562:	(bad)  
   14000e563:	(bad)  
   14000e564:	std    
   14000e565:	(bad)  
   14000e566:	(bad)  
   14000e567:	(bad)  
   14000e568:	std    
   14000e569:	(bad)  
   14000e56a:	(bad)  
   14000e56b:	(bad)  
   14000e56c:	std    
   14000e56d:	(bad)  
   14000e56e:	(bad)  
   14000e56f:	(bad)  
   14000e570:	std    
   14000e571:	(bad)  
   14000e572:	(bad)  
   14000e573:	(bad)  
   14000e574:	std    
   14000e575:	(bad)  
   14000e576:	(bad)  
   14000e577:	(bad)  
   14000e578:	std    
   14000e579:	(bad)  
   14000e57a:	(bad)  
   14000e57b:	(bad)  
   14000e57c:	std    
   14000e57d:	(bad)  
   14000e57e:	(bad)  
   14000e57f:	(bad)  
   14000e580:	std    
   14000e581:	(bad)  
   14000e582:	(bad)  
   14000e583:	(bad)  
   14000e584:	std    
   14000e585:	(bad)  
   14000e586:	(bad)  
   14000e587:	(bad)  
   14000e588:	std    
   14000e589:	(bad)  
   14000e58a:	(bad)  
   14000e58b:	(bad)  
   14000e58c:	std    
   14000e58d:	(bad)  
   14000e58e:	(bad)  
   14000e58f:	(bad)  
   14000e590:	std    
   14000e591:	(bad)  
   14000e592:	(bad)  
   14000e593:	(bad)  
   14000e594:	std    
   14000e595:	(bad)  
   14000e596:	(bad)  
   14000e597:	(bad)  
   14000e598:	std    
   14000e599:	(bad)  
   14000e59a:	(bad)  
   14000e59b:	(bad)  
   14000e59c:	std    
   14000e59d:	(bad)  
   14000e59e:	(bad)  
   14000e59f:	(bad)  
   14000e5a0:	std    
   14000e5a1:	(bad)  
   14000e5a2:	(bad)  
   14000e5a3:	(bad)  
   14000e5a4:	std    
   14000e5a5:	(bad)  
   14000e5a6:	(bad)  
   14000e5a7:	(bad)  
   14000e5a8:	std    
   14000e5a9:	(bad)  
   14000e5aa:	(bad)  
   14000e5ab:	(bad)  
   14000e5ac:	std    
   14000e5ad:	(bad)  
   14000e5ae:	(bad)  
   14000e5af:	(bad)  
   14000e5b0:	std    
   14000e5b1:	(bad)  
   14000e5b2:	(bad)  
   14000e5b3:	(bad)  
   14000e5b4:	std    
   14000e5b5:	(bad)  
   14000e5b6:	(bad)  
   14000e5b7:	(bad)  
   14000e5b8:	std    
   14000e5b9:	(bad)  
   14000e5ba:	(bad)  
   14000e5bb:	jmp    rax
   14000e5bd:	(bad)  
   14000e5bf:	dec    DWORD PTR [rax+0xff8184]
   14000e5c5:	add    BYTE PTR [rax],al
   14000e5c7:	sub    al,BYTE PTR [rax]
   14000e5c9:	add    BYTE PTR [rax],al
   14000e5cb:	(bad)  
	...
   14000e5d4:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000e5db:	(bad)  
   14000e5dc:	mov    esi,0xbeffc0bf
   14000e5e1:	mov    edi,0xbfbeffc0
   14000e5e6:	sar    bh,0xbe
   14000e5e9:	mov    edi,0xbfbeffc0
   14000e5ee:	sar    bh,0xbe
   14000e5f1:	mov    edi,0xbfbeffc0
   14000e5f6:	sar    bh,0xbe
   14000e5f9:	mov    edi,0xbfbeffc0
   14000e5fe:	sar    bh,0xbe
   14000e601:	mov    edi,0xbfbeffc0
   14000e606:	sar    bh,0xbe
   14000e609:	mov    edi,0xbfbeffc0
   14000e60e:	sar    bh,0xbe
   14000e611:	mov    edi,0xbfbeffc0
   14000e616:	sar    bh,0xbe
   14000e619:	mov    edi,0xbfbeffc0
   14000e61e:	sar    bh,0xbe
   14000e621:	mov    edi,0xbfbeffc0
   14000e626:	sar    bh,0xbe
   14000e629:	mov    edi,0xbfbeffc0
   14000e62e:	sar    bh,0xbe
   14000e631:	mov    edi,0xbfbeffc0
   14000e636:	sar    bh,0xbe
   14000e639:	mov    edi,0xbfbeffc0
   14000e63e:	sar    bh,0xbe
   14000e641:	mov    edi,0xbfbeffc0
   14000e646:	sar    bh,0xbe
   14000e649:	mov    edi,0xbfbeffc0
   14000e64e:	sar    bh,0xbe
   14000e651:	mov    edi,0xbfbeffc0
   14000e656:	sar    bh,0xbe
   14000e659:	mov    edi,0xbfbeffc0
   14000e65e:	sar    bh,0xbe
   14000e661:	mov    edi,0xbfbeffc0
   14000e666:	sar    bh,0xbe
   14000e669:	mov    edi,0xbfbeffc0
   14000e66e:	sar    bh,0xbe
   14000e671:	mov    edi,0xbfbeffc0
   14000e676:	sar    bh,0xbe
   14000e679:	mov    edi,0xd9e0ffc0
   14000e67e:	sar    edi,cl
   14000e680:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000e687:	sub    al,BYTE PTR [rax]
   14000e689:	add    BYTE PTR [rax],al
   14000e68b:	(bad)  
	...
   14000e694:	mov    BYTE PTR [rcx+rax*4-0x2c261f01],al
   14000e69b:	jmp    rax
   14000e69d:	(bad)  
   14000e69f:	jmp    rax
   14000e6a1:	(bad)  
   14000e6a3:	jmp    rax
   14000e6a5:	(bad)  
   14000e6a7:	jmp    rax
   14000e6a9:	(bad)  
   14000e6ab:	jmp    rax
   14000e6ad:	(bad)  
   14000e6af:	jmp    rax
   14000e6b1:	(bad)  
   14000e6b3:	jmp    rax
   14000e6b5:	(bad)  
   14000e6b7:	jmp    rax
   14000e6b9:	(bad)  
   14000e6bb:	jmp    rax
   14000e6bd:	(bad)  
   14000e6bf:	jmp    rax
   14000e6c1:	(bad)  
   14000e6c3:	jmp    rax
   14000e6c5:	(bad)  
   14000e6c7:	jmp    rax
   14000e6c9:	(bad)  
   14000e6cb:	jmp    rax
   14000e6cd:	(bad)  
   14000e6cf:	jmp    rax
   14000e6d1:	(bad)  
   14000e6d3:	jmp    rax
   14000e6d5:	(bad)  
   14000e6d7:	jmp    rax
   14000e6d9:	(bad)  
   14000e6db:	jmp    rax
   14000e6dd:	(bad)  
   14000e6df:	jmp    rax
   14000e6e1:	(bad)  
   14000e6e3:	jmp    rax
   14000e6e5:	(bad)  
   14000e6e7:	jmp    rax
   14000e6e9:	(bad)  
   14000e6eb:	jmp    rax
   14000e6ed:	(bad)  
   14000e6ef:	jmp    rax
   14000e6f1:	(bad)  
   14000e6f3:	jmp    rax
   14000e6f5:	(bad)  
   14000e6f7:	jmp    rax
   14000e6f9:	(bad)  
   14000e6fb:	jmp    rax
   14000e6fd:	(bad)  
   14000e6ff:	jmp    rax
   14000e701:	(bad)  
   14000e703:	jmp    rax
   14000e705:	(bad)  
   14000e707:	jmp    rax
   14000e709:	(bad)  
   14000e70b:	jmp    rax
   14000e70d:	(bad)  
   14000e70f:	jmp    rax
   14000e711:	(bad)  
   14000e713:	jmp    rax
   14000e715:	(bad)  
   14000e717:	jmp    rax
   14000e719:	(bad)  
   14000e71b:	jmp    rax
   14000e71d:	(bad)  
   14000e71f:	jmp    rax
   14000e721:	(bad)  
   14000e723:	jmp    rax
   14000e725:	(bad)  
   14000e727:	jmp    rax
   14000e729:	(bad)  
   14000e72b:	jmp    rax
   14000e72d:	(bad)  
   14000e72f:	jmp    rax
   14000e731:	(bad)  
   14000e733:	jmp    rax
   14000e735:	(bad)  
   14000e737:	jmp    rax
   14000e739:	(bad)  
   14000e73b:	jmp    rax
   14000e73d:	(bad)  
   14000e73f:	dec    DWORD PTR [rax+0xff8184]
   14000e745:	add    BYTE PTR [rax],al
   14000e747:	add    BYTE PTR es:[rax],al
   14000e74a:	add    BYTE PTR [rax+rax*1],cl
   14000e74d:	add    BYTE PTR [rax],al
   14000e74f:	add    BYTE PTR [rax],al
   14000e751:	add    BYTE PTR [rax],al
   14000e753:	add    BYTE PTR [rax-0x1f007e7c],cl
   14000e759:	(bad)  
   14000e75b:	jmp    rax
   14000e75d:	(bad)  
   14000e75f:	jmp    rax
   14000e761:	(bad)  
   14000e763:	jmp    rax
   14000e765:	(bad)  
   14000e767:	jmp    rax
   14000e769:	(bad)  
   14000e76b:	jmp    rax
   14000e76d:	(bad)  
   14000e76f:	jmp    rax
   14000e771:	(bad)  
   14000e773:	jmp    rax
   14000e775:	(bad)  
   14000e777:	jmp    rax
   14000e779:	(bad)  
   14000e77b:	jmp    rax
   14000e77d:	(bad)  
   14000e77f:	jmp    rax
   14000e781:	(bad)  
   14000e783:	jmp    rax
   14000e785:	(bad)  
   14000e787:	jmp    rax
   14000e789:	(bad)  
   14000e78b:	jmp    rax
   14000e78d:	(bad)  
   14000e78f:	jmp    rax
   14000e791:	(bad)  
   14000e793:	jmp    rax
   14000e795:	(bad)  
   14000e797:	jmp    rax
   14000e799:	(bad)  
   14000e79b:	jmp    rax
   14000e79d:	(bad)  
   14000e79f:	jmp    rax
   14000e7a1:	(bad)  
   14000e7a3:	jmp    rax
   14000e7a5:	(bad)  
   14000e7a7:	jmp    rax
   14000e7a9:	(bad)  
   14000e7ab:	jmp    rax
   14000e7ad:	(bad)  
   14000e7af:	jmp    rax
   14000e7b1:	(bad)  
   14000e7b3:	jmp    rax
   14000e7b5:	(bad)  
   14000e7b7:	jmp    rax
   14000e7b9:	(bad)  
   14000e7bb:	jmp    rax
   14000e7bd:	(bad)  
   14000e7bf:	jmp    rax
   14000e7c1:	(bad)  
   14000e7c3:	jmp    rax
   14000e7c5:	(bad)  
   14000e7c7:	jmp    rax
   14000e7c9:	(bad)  
   14000e7cb:	jmp    rax
   14000e7cd:	(bad)  
   14000e7cf:	jmp    rax
   14000e7d1:	(bad)  
   14000e7d3:	call   QWORD PTR [rcx-0x6e009787]
   14000e7d9:	jns    0x14000e843
   14000e7db:	jmp    rax
   14000e7dd:	(bad)  
   14000e7df:	jmp    rax
   14000e7e1:	(bad)  
   14000e7e3:	call   QWORD PTR [rcx-0x6e009787]
   14000e7e9:	jns    0x14000e853
   14000e7eb:	jmp    rax
   14000e7ed:	(bad)  
   14000e7ef:	jmp    rax
   14000e7f1:	(bad)  
   14000e7f3:	call   QWORD PTR [rcx-0x6e009787]
   14000e7f9:	jns    0x14000e863
   14000e7fb:	jmp    rax
   14000e7fd:	(bad)  
   14000e7ff:	dec    DWORD PTR [rax+0xff8184]
   14000e805:	add    BYTE PTR [rax],al
   14000e807:	(bad)  
   14000e808:	add    BYTE PTR [rax],al
   14000e80a:	add    BYTE PTR [rsi],al
	...
   14000e814:	xchg   DWORD PTR [rbx-0x7b779380],eax
   14000e81a:	cmp    edi,0xff818488
   14000e820:	mov    BYTE PTR [rcx+rax*4-0x7e7b7701],al
   14000e827:	dec    DWORD PTR [rax-0x77007e7c]
   14000e82d:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e833:	dec    DWORD PTR [rax-0x77007e7c]
   14000e839:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e83f:	dec    DWORD PTR [rax-0x77007e7c]
   14000e845:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e84b:	dec    DWORD PTR [rax-0x77007e7c]
   14000e851:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e857:	dec    DWORD PTR [rax-0x77007e7c]
   14000e85d:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e863:	dec    DWORD PTR [rax-0x77007e7c]
   14000e869:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e86f:	dec    DWORD PTR [rax-0x77007e7c]
   14000e875:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e87b:	dec    DWORD PTR [rax-0x77007e7c]
   14000e881:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e887:	dec    DWORD PTR [rax-0x77007e7c]
   14000e88d:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e893:	dec    DWORD PTR [rax-0x77007e7c]
   14000e899:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e89f:	dec    DWORD PTR [rax-0x77007e7c]
   14000e8a5:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e8ab:	dec    DWORD PTR [rax-0x77007e7c]
   14000e8b1:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000e8b7:	dec    DWORD PTR [rax-0x77007e7c]
   14000e8bd:	test   BYTE PTR [rcx+0x797c7fff],al
   14000e8c3:	jb     0x14000e8c5
   14000e8c5:	add    BYTE PTR [rax],al
   14000e8c7:	(bad)  
   14000e8c8:	add    BYTE PTR [rax],al
   14000e8ca:	add    BYTE PTR [rcx],al
	...
   14000ec90:	(bad)  
   14000ec91:	(bad)  
   14000ec92:	(bad)  
   14000ec93:	(bad)  
   14000ec94:	(bad)  
   14000ec95:	inc    DWORD PTR [rax]
   14000ec97:	add    bh,bh
   14000ec99:	(bad)  
   14000ec9a:	(bad)  
   14000ec9b:	(bad)  
   14000ec9c:	(bad)  
   14000ec9d:	inc    DWORD PTR [rax]
   14000ec9f:	add    bh,bh
   14000eca1:	(bad)  
   14000eca2:	(bad)  
   14000eca3:	(bad)  
   14000eca4:	(bad)  
   14000eca5:	inc    DWORD PTR [rax]
   14000eca7:	add    bh,bh
   14000eca9:	(bad)  
   14000ecaa:	(bad)  
   14000ecab:	(bad)  
   14000ecac:	(bad)  
   14000ecad:	inc    DWORD PTR [rax]
   14000ecaf:	add    bh,bh
   14000ecb1:	(bad)  
   14000ecb2:	(bad)  
   14000ecb3:	(bad)  
   14000ecb4:	(bad)  
   14000ecb5:	inc    DWORD PTR [rax]
   14000ecb7:	add    BYTE PTR [rax+0x0],al
   14000ecbd:	add    eax,DWORD PTR [rax]
   14000ecbf:	add    BYTE PTR [rax+0x0],al
   14000ecc5:	add    DWORD PTR [rax],eax
   14000ecc7:	add    BYTE PTR [rax+0x0],al
   14000eccd:	add    DWORD PTR [rax],eax
   14000eccf:	add    BYTE PTR [rax+0x0],al
   14000ecd5:	add    DWORD PTR [rax],eax
   14000ecd7:	add    BYTE PTR [rax+0x0],al
   14000ecdd:	add    DWORD PTR [rax],eax
   14000ecdf:	add    BYTE PTR [rax+0x0],al
   14000ece5:	add    DWORD PTR [rax],eax
   14000ece7:	add    BYTE PTR [rax+0x0],al
   14000eced:	add    DWORD PTR [rax],eax
   14000ecef:	add    BYTE PTR [rax+0x0],al
   14000ecf5:	add    DWORD PTR [rax],eax
   14000ecf7:	add    BYTE PTR [rax+0x0],al
   14000ecfd:	add    DWORD PTR [rax],eax
   14000ecff:	add    BYTE PTR [rax+0x0],al
   14000ed05:	add    DWORD PTR [rax],eax
   14000ed07:	add    BYTE PTR [rax+0x0],al
   14000ed0d:	add    DWORD PTR [rax],eax
   14000ed0f:	add    BYTE PTR [rax+0x0],al
   14000ed15:	add    DWORD PTR [rax],eax
   14000ed17:	add    BYTE PTR [rax+0x0],al
   14000ed1d:	add    DWORD PTR [rax],eax
   14000ed1f:	add    BYTE PTR [rax+0x0],al
   14000ed25:	add    DWORD PTR [rax],eax
   14000ed27:	add    BYTE PTR [rax+0x0],al
   14000ed2d:	add    DWORD PTR [rax],eax
   14000ed2f:	add    BYTE PTR [rax+0x0],al
   14000ed35:	add    DWORD PTR [rax],eax
   14000ed37:	add    BYTE PTR [rax+0x0],al
   14000ed3d:	add    DWORD PTR [rax],eax
   14000ed3f:	add    BYTE PTR [rax+0x0],al
   14000ed45:	add    DWORD PTR [rax],eax
   14000ed47:	add    BYTE PTR [rax+0x0],al
   14000ed4d:	add    DWORD PTR [rax],eax
   14000ed4f:	add    BYTE PTR [rax+0x0],al
   14000ed55:	add    DWORD PTR [rax],eax
   14000ed57:	add    BYTE PTR [rax+0x0],al
   14000ed5d:	add    DWORD PTR [rax],eax
   14000ed5f:	add    BYTE PTR [rax+0x0],al
   14000ed65:	add    DWORD PTR [rax],eax
   14000ed67:	add    BYTE PTR [rax+0x0],al
   14000ed6d:	add    DWORD PTR [rax],eax
   14000ed6f:	add    BYTE PTR [rax+0x0],al
   14000ed75:	add    DWORD PTR [rax],eax
   14000ed77:	add    BYTE PTR [rax+0x0],al
   14000ed7d:	add    DWORD PTR [rax],eax
   14000ed7f:	add    BYTE PTR [rax+0x0],al
   14000ed85:	add    DWORD PTR [rax],eax
   14000ed87:	add    BYTE PTR [rax+0x0],al
   14000ed8d:	add    DWORD PTR [rax],eax
   14000ed8f:	add    BYTE PTR [rax+0x0],al
   14000ed95:	add    DWORD PTR [rax],eax
   14000ed97:	add    BYTE PTR [rax+0x0],al
   14000ed9d:	add    DWORD PTR [rax],eax
   14000ed9f:	add    BYTE PTR [rax+0x0],al
   14000eda5:	add    DWORD PTR [rax],eax
   14000eda7:	add    BYTE PTR [rax+0x0],al
   14000edad:	add    DWORD PTR [rax],eax
   14000edaf:	add    BYTE PTR [rax+0x0],al
   14000edb5:	add    DWORD PTR [rax],eax
   14000edb7:	add    BYTE PTR [rax+0x0],al
   14000edbd:	add    DWORD PTR [rax],eax
   14000edbf:	add    BYTE PTR [rax+0x0],al
   14000edc5:	add    DWORD PTR [rax],eax
   14000edc7:	add    BYTE PTR [rax+0x0],al
   14000edcd:	add    DWORD PTR [rax],eax
   14000edcf:	add    BYTE PTR [rax+0x0],al
   14000edd5:	add    DWORD PTR [rax],eax
   14000edd7:	add    BYTE PTR [rax+0x0],al
   14000eddd:	add    DWORD PTR [rax],eax
   14000eddf:	add    BYTE PTR [rax+0x0],al
   14000ede5:	add    DWORD PTR [rax],eax
   14000ede7:	add    bh,bh
   14000ede9:	(bad)  
   14000edea:	(bad)  
   14000edeb:	(bad)  
   14000edec:	(bad)  
   14000eded:	inc    DWORD PTR [rax]
   14000edef:	add    bh,bh
   14000edf1:	(bad)  
   14000edf2:	(bad)  
   14000edf3:	(bad)  
   14000edf4:	(bad)  
   14000edf5:	inc    DWORD PTR [rax]
   14000edf7:	add    bh,bh
   14000edf9:	(bad)  
   14000edfa:	(bad)  
   14000edfb:	(bad)  
   14000edfc:	(bad)  
   14000edfd:	inc    DWORD PTR [rax]
   14000edff:	add    bh,bh
   14000ee01:	(bad)  
   14000ee02:	(bad)  
   14000ee03:	(bad)  
   14000ee04:	(bad)  
   14000ee05:	inc    DWORD PTR [rax]
   14000ee07:	add    bh,bh
   14000ee09:	(bad)  
   14000ee0a:	(bad)  
   14000ee0b:	(bad)  
   14000ee0c:	(bad)  
   14000ee0d:	inc    DWORD PTR [rax]
   14000ee0f:	add    BYTE PTR [rax],ch
   14000ee11:	add    BYTE PTR [rax],al
   14000ee13:	add    BYTE PTR [rax],ah
   14000ee15:	add    BYTE PTR [rax],al
   14000ee17:	add    BYTE PTR [rax+0x0],al
   14000ee1a:	add    BYTE PTR [rax],al
   14000ee1c:	add    DWORD PTR [rax],eax
   14000ee1e:	and    BYTE PTR [rax],al
   14000ee20:	add    BYTE PTR [rax],al
   14000ee22:	add    BYTE PTR [rax],al
   14000ee24:	adc    BYTE PTR [rax],0x0
	...
   14000ef3b:	add    al,BYTE PTR [rax]
   14000ef3d:	add    BYTE PTR [rax],al
   14000ef3f:	(bad)  
   14000ef40:	add    BYTE PTR [rax],al
   14000ef42:	add    BYTE PTR [rbx],cl
   14000ef44:	add    BYTE PTR [rax],al
   14000ef46:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef4c
   14000ef4c:	add    BYTE PTR [rax],al
   14000ef4e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef54
   14000ef54:	add    BYTE PTR [rax],al
   14000ef56:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef5c
   14000ef5c:	add    BYTE PTR [rax],al
   14000ef5e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef64
   14000ef64:	add    BYTE PTR [rax],al
   14000ef66:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef6c
   14000ef6c:	add    BYTE PTR [rax],al
   14000ef6e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef74
   14000ef74:	add    BYTE PTR [rax],al
   14000ef76:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef7c
   14000ef7c:	add    BYTE PTR [rax],al
   14000ef7e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef84
   14000ef84:	add    BYTE PTR [rax],al
   14000ef86:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef8c
   14000ef8c:	add    BYTE PTR [rax],al
   14000ef8e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef94
   14000ef94:	add    BYTE PTR [rax],al
   14000ef96:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ef9c
   14000ef9c:	add    BYTE PTR [rax],al
   14000ef9e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00efa4
   14000efa4:	add    BYTE PTR [rax],al
   14000efa6:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00efac
   14000efac:	add    BYTE PTR [rax],al
   14000efae:	add    BYTE PTR [rbx],cl
   14000efb0:	add    BYTE PTR [rax],al
   14000efb2:	add    BYTE PTR [rsi],al
   14000efb4:	add    BYTE PTR [rax],al
   14000efb6:	add    BYTE PTR [rdx],al
   14000efb8:	add    BYTE PTR [rax],al
   14000efba:	add    BYTE PTR [rsi],al
   14000efbc:	add    BYTE PTR [rax],al
   14000efbe:	add    BYTE PTR [rsi],dl
   14000efc0:	add    BYTE PTR [rax],al
   14000efc2:	add    BYTE PTR [rbx],ah
   14000efc4:	add    BYTE PTR [rax],al
   14000efc6:	add    BYTE PTR [rsi],ah
   14000efc8:	add    BYTE PTR [rax],al
   14000efca:	add    BYTE PTR [rsi],ah
   14000efcc:	add    BYTE PTR [rax],al
   14000efce:	add    BYTE PTR [rsi],ah
   14000efd0:	add    BYTE PTR [rax],al
   14000efd2:	add    BYTE PTR [rsi],ah
   14000efd4:	add    BYTE PTR [rax],al
   14000efd6:	add    BYTE PTR [rsi],ah
   14000efd8:	add    BYTE PTR [rax],al
   14000efda:	add    BYTE PTR [rsi],ah
   14000efdc:	add    BYTE PTR [rax],al
   14000efde:	add    BYTE PTR [rsi],ah
   14000efe0:	add    BYTE PTR [rax],al
   14000efe2:	add    BYTE PTR [rsi],ah
   14000efe4:	add    BYTE PTR [rax],al
   14000efe6:	add    BYTE PTR [rsi],ah
   14000efe8:	add    BYTE PTR [rax],al
   14000efea:	add    BYTE PTR [rsi],ah
   14000efec:	add    BYTE PTR [rax],al
   14000efee:	add    BYTE PTR [rsi],ah
   14000eff0:	add    BYTE PTR [rax],al
   14000eff2:	add    BYTE PTR [rsi],ah
   14000eff4:	add    BYTE PTR [rax],al
   14000eff6:	add    BYTE PTR [rsi],ah
   14000eff8:	add    BYTE PTR [rax],al
   14000effa:	add    BYTE PTR [rsi],ah
   14000effc:	add    BYTE PTR [rax],al
   14000effe:	add    BYTE PTR [rsi],ah
   14000f000:	add    BYTE PTR [rax],al
   14000f002:	add    BYTE PTR [rsi],ah
   14000f004:	add    BYTE PTR [rax],al
   14000f006:	add    BYTE PTR [rsi],ah
   14000f008:	add    BYTE PTR [rax],al
   14000f00a:	add    BYTE PTR [rsi],ah
   14000f00c:	add    BYTE PTR [rax],al
   14000f00e:	add    BYTE PTR [rsi],ah
   14000f010:	add    BYTE PTR [rax],al
   14000f012:	add    BYTE PTR [rsi],ah
   14000f014:	add    BYTE PTR [rax],al
   14000f016:	add    BYTE PTR [rsi],ah
   14000f018:	add    BYTE PTR [rax],al
   14000f01a:	add    BYTE PTR [rsi],ah
   14000f01c:	add    BYTE PTR [rax],al
   14000f01e:	add    BYTE PTR [rsi],ah
   14000f020:	add    BYTE PTR [rax],al
   14000f022:	add    BYTE PTR [rsi],ah
   14000f024:	add    BYTE PTR [rax],al
   14000f026:	add    BYTE PTR [rsi],ah
   14000f028:	add    BYTE PTR [rax],al
   14000f02a:	add    BYTE PTR [rsi],ah
   14000f02c:	add    BYTE PTR [rax],al
   14000f02e:	add    BYTE PTR [rbx],ah
   14000f030:	add    BYTE PTR [rax],al
   14000f032:	add    BYTE PTR [rsi],dl
   14000f034:	add    BYTE PTR [rax],al
   14000f036:	add    BYTE PTR [rsi],al
   14000f038:	mov    eax,DWORD PTR [rsi-0x7e7a7e7c]
   14000f03e:	jle    0x14000f037
   14000f040:	mov    BYTE PTR [rcx+rax*4-0x7e7b7701],al
   14000f047:	dec    DWORD PTR [rax-0x77007e7c]
   14000f04d:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000f053:	dec    DWORD PTR [rax-0x77007e7c]
   14000f059:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000f05f:	dec    DWORD PTR [rax-0x77007e7c]
   14000f065:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000f06b:	dec    DWORD PTR [rax-0x77007e7c]
   14000f071:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000f077:	dec    DWORD PTR [rdx-0x73007c7a]
   14000f07d:	mov    DWORD PTR [rsi-0x76737001],eax
   14000f083:	dec    DWORD PTR [rdi-0x74007876]
   14000f089:	xchg   DWORD PTR [rbp-0x7d7b7701],eax
   14000f08f:	dec    DWORD PTR [rax-0x77007e7c]
   14000f095:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000f09b:	dec    DWORD PTR [rax-0x77007e7c]
   14000f0a1:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000f0a7:	dec    DWORD PTR [rax+0x79ff8184]
   14000f0ad:	jne    0x14000f122
   14000f0af:	xchg   esp,eax
   14000f0b0:	add    BYTE PTR [rax],al
   14000f0b2:	add    BYTE PTR [rbx],ah
   14000f0b4:	add    BYTE PTR [rax],al
   14000f0b6:	add    BYTE PTR [rbx],cl
   14000f0b8:	mov    BYTE PTR [rcx+rax*4-0x100d0801],al
   14000f0bf:	(bad)  
   14000f0c0:	sti    
   14000f0c1:	stc    
   14000f0c2:	idiv   bh
   14000f0c4:	sti    
   14000f0c5:	stc    
   14000f0c6:	idiv   bh
   14000f0c8:	sti    
   14000f0c9:	stc    
   14000f0ca:	idiv   bh
   14000f0cc:	sti    
   14000f0cd:	stc    
   14000f0ce:	idiv   bh
   14000f0d0:	sti    
   14000f0d1:	stc    
   14000f0d2:	idiv   bh
   14000f0d4:	sti    
   14000f0d5:	stc    
   14000f0d6:	idiv   bh
   14000f0d8:	sti    
   14000f0d9:	stc    
   14000f0da:	idiv   bh
   14000f0dc:	sti    
   14000f0dd:	stc    
   14000f0de:	idiv   bh
   14000f0e0:	sti    
   14000f0e1:	stc    
   14000f0e2:	idiv   bh
   14000f0e4:	sti    
   14000f0e5:	stc    
   14000f0e6:	idiv   bh
   14000f0e8:	sti    
   14000f0e9:	stc    
   14000f0ea:	idiv   bh
   14000f0ec:	sti    
   14000f0ed:	stc    
   14000f0ee:	idiv   bh
   14000f0f0:	sti    
   14000f0f1:	stc    
   14000f0f2:	idiv   bh
   14000f0f4:	sti    
   14000f0f5:	stc    
   14000f0f6:	idiv   bh
   14000f0f8:	sti    
   14000f0f9:	stc    
   14000f0fa:	idiv   bh
   14000f0fc:	sti    
   14000f0fd:	stc    
   14000f0fe:	idiv   bh
   14000f100:	sti    
   14000f101:	stc    
   14000f102:	idiv   bh
   14000f104:	sti    
   14000f105:	stc    
   14000f106:	idiv   bh
   14000f108:	sti    
   14000f109:	stc    
   14000f10a:	idiv   bh
   14000f10c:	sti    
   14000f10d:	stc    
   14000f10e:	idiv   bh
   14000f110:	sti    
   14000f111:	stc    
   14000f112:	idiv   bh
   14000f114:	sti    
   14000f115:	stc    
   14000f116:	idiv   bh
   14000f118:	sti    
   14000f119:	stc    
   14000f11a:	idiv   bh
   14000f11c:	sti    
   14000f11d:	stc    
   14000f11e:	idiv   bh
   14000f120:	sti    
   14000f121:	stc    
   14000f122:	idiv   bh
   14000f124:	sti    
   14000f125:	stc    
   14000f126:	idiv   bh
   14000f128:	sti    
   14000f129:	stc    
   14000f12a:	idiv   bh
   14000f12c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f133:	add    BYTE PTR es:[rax],al
   14000f136:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f8275c4
   14000f13c:	div    edx
   14000f13e:	out    dx,eax
   14000f13f:	(bad)  
   14000f140:	cld    
   14000f141:	cld    
   14000f142:	cld    
   14000f143:	(bad)  
   14000f144:	stc    
   14000f145:	std    
   14000f146:	(bad)  
   14000f147:	push   rsp
   14000f149:	clc    
   14000f14a:	cli    
   14000f14b:	(bad)  
   14000f14c:	cli    
   14000f14d:	(bad)  
   14000f14e:	(bad)  
   14000f14f:	push   rdi
   14000f151:	cld    
   14000f152:	(bad)  
   14000f153:	push   rbp
   14000f155:	stc    
   14000f156:	cld    
   14000f157:	push   rbp
   14000f159:	stc    
   14000f15a:	sti    
   14000f15b:	(bad)  
   14000f15c:	clc    
   14000f15d:	std    
   14000f15e:	(bad)  
   14000f15f:	(bad)  
   14000f160:	(bad)  
   14000f161:	(bad)  
   14000f162:	(bad)  
   14000f163:	(bad)  
   14000f164:	std    
   14000f165:	(bad)  
   14000f166:	(bad)  
   14000f167:	(bad)  
   14000f168:	cld    
   14000f169:	(bad)  
   14000f16a:	(bad)  
   14000f16b:	(bad)  
   14000f16c:	cli    
   14000f16d:	(bad)  
   14000f16e:	(bad)  
   14000f16f:	(bad)  
   14000f170:	stc    
   14000f171:	(bad)  
   14000f172:	(bad)  
   14000f173:	push   rsi
   14000f175:	sti    
   14000f176:	(bad)  
   14000f177:	push   rbp
   14000f179:	div    dh
   14000f17b:	push   rsi
   14000f17d:	idiv   eax
   14000f17f:	push   rsi
   14000f181:	idiv   eax
   14000f183:	push   rsi
   14000f185:	div    bh
   14000f187:	push   rsp
   14000f189:	cmc    
   14000f18a:	hlt    
   14000f18b:	push   rdx
   14000f18d:	repz repz push rcx
   14000f191:	repnz repnz push rax
   14000f195:	icebp  
   14000f196:	lock push rax
   14000f199:	icebp  
   14000f19a:	icebp  
   14000f19b:	push   rax
   14000f19d:	icebp  
   14000f19e:	icebp  
   14000f19f:	push   rax
   14000f1a1:	icebp  
   14000f1a2:	icebp  
   14000f1a3:	push   rcx
   14000f1a5:	repnz repz (bad) 
   14000f1a8:	sti    
   14000f1a9:	stc    
   14000f1aa:	idiv   bh
   14000f1ac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f1b3:	add    BYTE PTR es:[rax],al
   14000f1b6:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827644
   14000f1bc:	div    ebx
   14000f1be:	icebp  
   14000f1bf:	(bad)  
   14000f1c0:	sti    
   14000f1c1:	stc    
   14000f1c2:	idiv   bh
   14000f1c4:	cli    
   14000f1c5:	sti    
   14000f1c6:	cld    
   14000f1c7:	jmp    rsi
   14000f1c9:	out    0xe7,al
   14000f1cb:	jmp    rsi
   14000f1cd:	out    0xe7,al
   14000f1cf:	jmp    rsi
   14000f1d1:	out    0xe7,al
   14000f1d3:	jmp    rsi
   14000f1d5:	out    0xe7,al
   14000f1d7:	jmp    rsi
   14000f1d9:	out    0xe7,al
   14000f1db:	jmp    rsi
   14000f1dd:	out    0xe7,al
   14000f1df:	jmp    rsi
   14000f1e1:	out    0xe7,al
   14000f1e3:	jmp    rsi
   14000f1e5:	out    0xe7,al
   14000f1e7:	jmp    rsi
   14000f1e9:	out    0xe7,al
   14000f1eb:	jmp    rsi
   14000f1ed:	out    0xe7,al
   14000f1ef:	jmp    rsi
   14000f1f1:	out    0xe7,al
   14000f1f3:	jmp    rsi
   14000f1f5:	out    0xe7,al
   14000f1f7:	push   rdx
   14000f1f9:	repz cmc 
   14000f1fb:	push   rsi
   14000f1fd:	idiv   eax
   14000f1ff:	push   rdi
   14000f201:	clc    
   14000f202:	stc    
   14000f203:	push   rsi
   14000f205:	idiv   eax
   14000f207:	push   rbp
   14000f209:	div    bh
   14000f20b:	push   rbx
   14000f20d:	hlt    
   14000f20e:	hlt    
   14000f20f:	push   rdx
   14000f211:	repz repnz push rax
   14000f215:	lock lock (bad) 
   14000f218:	in     eax,dx
   14000f219:	out    dx,al
   14000f21a:	out    dx,al
   14000f21b:	(bad)  
   14000f21c:	in     al,dx
   14000f21d:	in     al,dx
   14000f21e:	in     al,dx
   14000f21f:	(bad)  
   14000f220:	in     al,dx
   14000f221:	in     al,dx
   14000f222:	in     al,dx
   14000f223:	(bad)  
   14000f224:	in     eax,dx
   14000f225:	in     eax,dx
   14000f226:	out    dx,al
   14000f227:	(bad)  
   14000f228:	sti    
   14000f229:	stc    
   14000f22a:	idiv   bh
   14000f22c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f233:	add    BYTE PTR es:[rax],al
   14000f236:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f8276c4
   14000f23c:	clc    
   14000f23d:	div    ch
   14000f23f:	(bad)  
   14000f240:	sti    
   14000f241:	stc    
   14000f242:	idiv   bh
   14000f244:	scas   al,BYTE PTR es:[rdi]
   14000f245:	movabs ds:0xbdd1ffbcbdd1ffa2,eax
   14000f24e:	mov    esp,0xbcbdd1ff
   14000f253:	call   rcx
   14000f255:	mov    ebp,0xbdd1ffbc
   14000f25a:	mov    esp,0xbcbdd1ff
   14000f25f:	call   rcx
   14000f261:	mov    ebp,0xbdd1ffbc
   14000f266:	mov    esp,0xbcbdd1ff
   14000f26b:	call   rcx
   14000f26d:	mov    ebp,0xa1adffbc
   14000f272:	movabs al,ds:0xf7f5f4ffe7e6e6ff
   14000f27b:	dec    ebx
   14000f27d:	retf   
   14000f27e:	retf   
   14000f27f:	dec    ebx
   14000f281:	retf   
   14000f282:	retf   
   14000f283:	dec    ebx
   14000f285:	retf   
   14000f286:	retf   
   14000f287:	dec    ebx
   14000f289:	retf   
   14000f28a:	retf   
   14000f28b:	dec    ebx
   14000f28d:	retf   
   14000f28e:	retf   
   14000f28f:	dec    ebx
   14000f291:	retf   
   14000f292:	retf   
   14000f293:	push   rsp
   14000f295:	hlt    
   14000f296:	cmc    
   14000f297:	push   rcx
   14000f299:	repnz repz (bad) 
   14000f29c:	out    dx,al
   14000f29d:	out    dx,al
   14000f29e:	out    dx,al
   14000f29f:	(bad)  
   14000f2a0:	in     eax,dx
   14000f2a1:	in     eax,dx
   14000f2a2:	in     eax,dx
   14000f2a3:	(bad)  
   14000f2a4:	in     eax,dx
   14000f2a5:	in     eax,dx
   14000f2a6:	out    dx,al
   14000f2a7:	(bad)  
   14000f2a8:	sti    
   14000f2a9:	stc    
   14000f2aa:	idiv   bh
   14000f2ac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f2b3:	add    BYTE PTR es:[rax],al
   14000f2b6:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827744
   14000f2bc:	div    esi
   14000f2be:	repz (bad) 
   14000f2c0:	sti    
   14000f2c1:	stc    
   14000f2c2:	idiv   bh
   14000f2c4:	sar    DWORD PTR [rbp-0x5f7b0044],1
   14000f2ca:	push   rdi
   14000f2cb:	inc    DWORD PTR [rdx-0x7f00a65e]
   14000f2d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f2d2:	pop    rdx
   14000f2d3:	(bad)  
   14000f2d4:	jle    0x14000f27d
   14000f2d6:	pop    rsp
   14000f2d7:	(bad)  
   14000f2d8:	jnp    0x14000f283
   14000f2da:	pop    rsi
   14000f2db:	(bad)  
   14000f2dc:	jns    0x14000f289
   14000f2de:	(bad)  
   14000f2df:	push   QWORD PTR [rdi-0x53]
   14000f2e2:	(bad)  
   14000f2e3:	push   QWORD PTR [rbp-0x51]
   14000f2e6:	movsxd edi,edi
   14000f2e8:	jae    0x14000f29b
   14000f2ea:	push   QWORD PTR gs:[rcx-0x4d]
   14000f2ee:	call   cx
   14000f2f1:	mov    ebp,0xe6e6ffbc
   14000f2f6:	out    0xff,eax
   14000f2f8:	repnz idiv al
   14000f2fb:	push   rsi
   14000f2fd:	idiv   eax
   14000f2ff:	push   rdi
   14000f301:	clc    
   14000f302:	stc    
   14000f303:	push   rdi
   14000f305:	clc    
   14000f306:	stc    
   14000f307:	push   rdi
   14000f309:	clc    
   14000f30a:	stc    
   14000f30b:	push   rdi
   14000f30d:	clc    
   14000f30e:	stc    
   14000f30f:	push   rdi
   14000f311:	clc    
   14000f312:	stc    
   14000f313:	push   rsi
   14000f315:	idiv   eax
   14000f317:	push   rsp
   14000f319:	cmc    
   14000f31a:	cmc    
   14000f31b:	(bad)  
   14000f31c:	out    dx,eax
   14000f31d:	lock icebp 
   14000f31f:	(bad)  
   14000f320:	in     eax,dx
   14000f321:	in     eax,dx
   14000f322:	in     eax,dx
   14000f323:	(bad)  
   14000f324:	in     eax,dx
   14000f325:	out    dx,al
   14000f326:	out    dx,al
   14000f327:	(bad)  
   14000f328:	sti    
   14000f329:	stc    
   14000f32a:	idiv   bh
   14000f32c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f333:	add    BYTE PTR es:[rax],al
   14000f336:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f8277c4
   14000f33c:	div    ebp
   14000f33e:	repz (bad) 
   14000f340:	sti    
   14000f341:	stc    
   14000f342:	idiv   bh
   14000f344:	sar    DWORD PTR [rbp-0x63780044],1
   14000f34a:	push   rsp
   14000f34b:	inc    DWORD PTR [rbp-0x7c00a961]
   14000f351:	movabs eax,ds:0xa67fff5aa481ff58
   14000f35a:	pop    rsp
   14000f35b:	(bad)  
   14000f35c:	jl     0x14000f306
   14000f35e:	pop    rbp
   14000f35f:	(bad)  
   14000f360:	jp     0x14000f30d
   14000f362:	pop    rdi
   14000f363:	(bad)  
   14000f364:	js     0x14000f313
   14000f366:	(bad)  
   14000f367:	push   QWORD PTR [rsi-0x51]
   14000f36a:	movsxd edi,edi
   14000f36c:	je     0x14000f31f
   14000f36e:	fs call rcx
   14000f371:	mov    ebp,0xe6e6ffbc
   14000f376:	out    0xff,eax
   14000f378:	repz idiv al
   14000f37b:	dec    ebx
   14000f37d:	retf   
   14000f37e:	retf   
   14000f37f:	dec    ebx
   14000f381:	retf   
   14000f382:	retf   
   14000f383:	dec    ebx
   14000f385:	retf   
   14000f386:	retf   
   14000f387:	dec    ebx
   14000f389:	retf   
   14000f38a:	retf   
   14000f38b:	dec    ebx
   14000f38d:	retf   
   14000f38e:	retf   
   14000f38f:	dec    ebx
   14000f391:	retf   
   14000f392:	retf   
   14000f393:	push   rdi
   14000f395:	idiv   eax
   14000f397:	push   rsp
   14000f399:	div    dh
   14000f39b:	push   rax
   14000f39d:	icebp  
   14000f39e:	icebp  
   14000f39f:	(bad)  
   14000f3a0:	out    dx,eax
   14000f3a1:	out    dx,eax
   14000f3a2:	out    dx,eax
   14000f3a3:	(bad)  
   14000f3a4:	out    dx,al
   14000f3a5:	out    dx,eax
   14000f3a6:	lock (bad) 
   14000f3a8:	sti    
   14000f3a9:	stc    
   14000f3aa:	idiv   bh
   14000f3ac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f3b3:	add    BYTE PTR es:[rax],al
   14000f3b6:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827844
   14000f3bc:	div    ebp
   14000f3be:	repz (bad) 
   14000f3c0:	sti    
   14000f3c1:	stc    
   14000f3c2:	idiv   bh
   14000f3c4:	sar    DWORD PTR [rbp-0x67750044],1
   14000f3ca:	push   rdx
   14000f3cb:	dec    DWORD PTR [rax-0x7900ac65]
   14000f3d1:	sahf   
   14000f3d2:	push   rbp
   14000f3d3:	inc    DWORD PTR [rax+riz*4-0x5c7d00a9]
   14000f3da:	pop    rcx
   14000f3db:	(bad)  
   14000f3dc:	jg     0x14000f383
   14000f3de:	pop    rbx
   14000f3df:	(bad)  
   14000f3e0:	jge    0x14000f389
   14000f3e2:	pop    rbp
   14000f3e3:	(bad)  
   14000f3e4:	jnp    0x14000f390
   14000f3e6:	pop    rdi
   14000f3e7:	(bad)  
   14000f3e8:	jns    0x14000f396
   14000f3ea:	(bad)  
   14000f3eb:	push   QWORD PTR [rsi-0x52]
   14000f3ee:	(bad)  
   14000f3ef:	call   rcx
   14000f3f1:	mov    ebp,0xe6e6ffbc
   14000f3f6:	out    0xff,eax
   14000f3f8:	hlt    
   14000f3f9:	div    bh
   14000f3fb:	push   rbp
   14000f3fd:	div    bh
   14000f3ff:	push   rsi
   14000f401:	idiv   eax
   14000f403:	push   rdi
   14000f405:	clc    
   14000f406:	stc    
   14000f407:	push   rdi
   14000f409:	clc    
   14000f40a:	stc    
   14000f40b:	push   rdi
   14000f40d:	clc    
   14000f40e:	stc    
   14000f40f:	push   rdi
   14000f411:	clc    
   14000f412:	stc    
   14000f413:	push   rsi
   14000f415:	idiv   eax
   14000f417:	push   rbp
   14000f419:	div    dh
   14000f41b:	push   rdx
   14000f41d:	repnz repnz push rax
   14000f421:	lock lock (bad) 
   14000f424:	out    dx,eax
   14000f425:	lock icebp 
   14000f427:	(bad)  
   14000f428:	sti    
   14000f429:	stc    
   14000f42a:	idiv   bh
   14000f42c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f433:	add    BYTE PTR es:[rax],al
   14000f436:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f8278c4
   14000f43c:	div    ebp
   14000f43e:	repz (bad) 
   14000f440:	sti    
   14000f441:	stc    
   14000f442:	idiv   bh
   14000f444:	sar    DWORD PTR [rbp-0x6a730044],1
   14000f44a:	push   rax
   14000f44b:	dec    DWORD PTR [rbx-0x7600ae69]
   14000f451:	(bad)  
   14000f452:	push   rbx
   14000f453:	inc    DWORD PTR [rdi-0x7a00aa64]
   14000f459:	lahf   
   14000f45a:	push   rsi
   14000f45b:	inc    DWORD PTR [rbx-0x7f00a75e]
   14000f461:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000f462:	pop    rdx
   14000f463:	(bad)  
   14000f464:	jle    0x14000f40c
   14000f466:	pop    rsp
   14000f467:	(bad)  
   14000f468:	jl     0x14000f413
   14000f46a:	pop    rsi
   14000f46b:	(bad)  
   14000f46c:	jns    0x14000f419
   14000f46e:	(bad)  
   14000f46f:	call   rcx
   14000f471:	mov    ebp,0xe6e6ffbc
   14000f476:	out    0xff,eax
   14000f478:	hlt    
   14000f479:	idiv   ecx
   14000f47b:	push   rsi
   14000f47d:	idiv   ecx
   14000f47f:	push   rdi
   14000f481:	clc    
   14000f482:	clc    
   14000f483:	push   rdi
   14000f485:	clc    
   14000f486:	stc    
   14000f487:	push   rdi
   14000f489:	clc    
   14000f48a:	stc    
   14000f48b:	push   rdi
   14000f48d:	clc    
   14000f48e:	stc    
   14000f48f:	push   rdi
   14000f491:	clc    
   14000f492:	stc    
   14000f493:	push   rdi
   14000f495:	clc    
   14000f496:	stc    
   14000f497:	push   rdi
   14000f499:	clc    
   14000f49a:	stc    
   14000f49b:	push   rdi
   14000f49d:	clc    
   14000f49e:	stc    
   14000f49f:	push   rdi
   14000f4a1:	clc    
   14000f4a2:	stc    
   14000f4a3:	push   rdi
   14000f4a5:	clc    
   14000f4a6:	stc    
   14000f4a7:	(bad)  
   14000f4a8:	sti    
   14000f4a9:	stc    
   14000f4aa:	idiv   bh
   14000f4ac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f4b3:	add    BYTE PTR es:[rax],al
   14000f4b6:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827944
   14000f4bc:	div    ebp
   14000f4be:	repz (bad) 
   14000f4c0:	sti    
   14000f4c1:	stc    
   14000f4c2:	idiv   bh
   14000f4c4:	sar    DWORD PTR [rbp-0x6f700044],1
   14000f4ca:	rex.WRB dec QWORD PTR [r13-0x7400b06d]
   14000f4d1:	xchg   esi,eax
   14000f4d2:	push   rcx
   14000f4d3:	dec    DWORD PTR [rdx-0x7700ad67]
   14000f4d9:	fwait
   14000f4da:	push   rsp
   14000f4db:	inc    DWORD PTR [rsi-0x7b00a962]
   14000f4e1:	movabs eax,ds:0xa57fff59a381ff57
   14000f4ea:	pop    rbx
   14000f4eb:	(bad)  
   14000f4ec:	jge    0x14000f496
   14000f4ee:	pop    rbp
   14000f4ef:	call   rcx
   14000f4f1:	mov    ebp,0xe6e6ffbc
   14000f4f6:	out    0xff,eax
   14000f4f8:	hlt    
   14000f4f9:	idiv   ecx
   14000f4fb:	dec    ebx
   14000f4fd:	retf   
   14000f4fe:	retf   
   14000f4ff:	dec    ebx
   14000f501:	retf   
   14000f502:	retf   
   14000f503:	dec    ebx
   14000f505:	retf   
   14000f506:	retf   
   14000f507:	dec    ebx
   14000f509:	retf   
   14000f50a:	retf   
   14000f50b:	dec    ebx
   14000f50d:	retf   
   14000f50e:	retf   
   14000f50f:	dec    ebx
   14000f511:	retf   
   14000f512:	retf   
   14000f513:	push   rdi
   14000f515:	clc    
   14000f516:	stc    
   14000f517:	push   rdi
   14000f519:	clc    
   14000f51a:	stc    
   14000f51b:	push   rdi
   14000f51d:	clc    
   14000f51e:	stc    
   14000f51f:	push   rdi
   14000f521:	clc    
   14000f522:	stc    
   14000f523:	push   rdi
   14000f525:	clc    
   14000f526:	stc    
   14000f527:	(bad)  
   14000f528:	sti    
   14000f529:	stc    
   14000f52a:	idiv   bh
   14000f52c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f533:	add    BYTE PTR es:[rax],al
   14000f536:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f8279c4
   14000f53c:	div    ebp
   14000f53e:	repz (bad) 
   14000f540:	sti    
   14000f541:	stc    
   14000f542:	idiv   bh
   14000f544:	sar    DWORD PTR [rbp-0x736e0044],1
   14000f54a:	rex.WXB call QWORD PTR [r8-0x7100b271]
   14000f551:	xchg   edx,eax
   14000f552:	rex.WRX dec QWORD PTR [rbp+r10*4-0x677500b0]
   14000f55a:	push   rcx
   14000f55b:	dec    DWORD PTR [rcx-0x7800ac66]
   14000f561:	popf   
   14000f562:	push   rbp
   14000f563:	inc    DWORD PTR [rax+riz*4-0x5d7d00a9]
   14000f56a:	pop    rcx
   14000f56b:	inc    DWORD PTR [rax-0x2e00a55b]
   14000f571:	mov    ebp,0xe6e6ffbc
   14000f576:	out    0xff,eax
   14000f578:	hlt    
   14000f579:	cmc    
   14000f57a:	stc    
   14000f57b:	(bad)  
   14000f57c:	clc    
   14000f57d:	stc    
   14000f57e:	cli    
   14000f57f:	push   rdi
   14000f581:	clc    
   14000f582:	stc    
   14000f583:	push   rdi
   14000f585:	clc    
   14000f586:	stc    
   14000f587:	push   rdi
   14000f589:	clc    
   14000f58a:	stc    
   14000f58b:	push   rdi
   14000f58d:	clc    
   14000f58e:	stc    
   14000f58f:	push   rdi
   14000f591:	clc    
   14000f592:	stc    
   14000f593:	push   rdi
   14000f595:	clc    
   14000f596:	stc    
   14000f597:	push   rdi
   14000f599:	clc    
   14000f59a:	stc    
   14000f59b:	push   rdi
   14000f59d:	clc    
   14000f59e:	stc    
   14000f59f:	push   rdi
   14000f5a1:	clc    
   14000f5a2:	stc    
   14000f5a3:	push   rdi
   14000f5a5:	clc    
   14000f5a6:	stc    
   14000f5a7:	(bad)  
   14000f5a8:	sti    
   14000f5a9:	stc    
   14000f5aa:	idiv   bh
   14000f5ac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f5b3:	add    BYTE PTR es:[rax],al
   14000f5b6:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827a44
   14000f5bc:	div    ch
   14000f5be:	repz (bad) 
   14000f5c0:	sti    
   14000f5c1:	stc    
   14000f5c2:	idiv   bh
   14000f5c4:	sar    DWORD PTR [rbp-0x786b0044],1
   14000f5ca:	rex.WB call QWORD PTR [r10-0x6f00b576]
   14000f5d1:	mov    cs,WORD PTR [rdi+rdi*8-0x71]
   14000f5d5:	xchg   ecx,eax
   14000f5d6:	rex.WRX dec QWORD PTR [rbp-0x7400b06c]
   14000f5dd:	xchg   edi,eax
   14000f5de:	push   rcx
   14000f5df:	dec    DWORD PTR [rcx-0x7800ad67]
   14000f5e5:	pushf  
   14000f5e6:	push   rsp
   14000f5e7:	inc    DWORD PTR [rbp-0x7c00a961]
   14000f5ed:	movabs eax,ds:0xe6e6ffbcbdd1ff58
   14000f5f6:	out    0xff,eax
   14000f5f8:	hlt    
   14000f5f9:	idiv   cl
   14000f5fb:	dec    ebx
   14000f5fd:	retf   
   14000f5fe:	retf   
   14000f5ff:	dec    ebx
   14000f601:	retf   
   14000f602:	retf   
   14000f603:	dec    ebx
   14000f605:	retf   
   14000f606:	retf   
   14000f607:	dec    ebx
   14000f609:	retf   
   14000f60a:	retf   
   14000f60b:	dec    ebx
   14000f60d:	retf   
   14000f60e:	retf   
   14000f60f:	dec    ebx
   14000f611:	retf   
   14000f612:	retf   
   14000f613:	push   rdi
   14000f615:	clc    
   14000f616:	stc    
   14000f617:	push   rdi
   14000f619:	clc    
   14000f61a:	stc    
   14000f61b:	jmp    FWORD PTR [rsi-0x4a]
   14000f61e:	imul   edi,edi,0xff69b66e
   14000f624:	idiv   eax
   14000f626:	stc    
   14000f627:	(bad)  
   14000f628:	sti    
   14000f629:	stc    
   14000f62a:	idiv   bh
   14000f62c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f633:	add    BYTE PTR es:[rax],al
   14000f636:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827ac4
   14000f63c:	div    ah
   14000f63e:	repz (bad) 
   14000f640:	sti    
   14000f641:	stc    
   14000f642:	idiv   bh
   14000f644:	sar    DWORD PTR [rbp-0x7d690044],1
   14000f64a:	rex.RXB call QWORD PTR [r14+r8*4-0x766c00b8]
   14000f652:	rex.WX call QWORD PTR [rcx-0x7000b473]
   14000f659:	nop
   14000f65a:	rex.WRB dec QWORD PTR [r14-0x7300b06d]
   14000f661:	xchg   esi,eax
   14000f662:	push   rax
   14000f663:	dec    DWORD PTR [rdx-0x7700ad68]
   14000f669:	fwait
   14000f66a:	push   rbx
   14000f66b:	inc    DWORD PTR [rsi-0x2e00aa62]
   14000f671:	mov    ebp,0xe6e6ffbc
   14000f676:	out    0xff,eax
   14000f678:	hlt    
   14000f679:	idiv   edx
   14000f67b:	(bad)  
   14000f67c:	clc    
   14000f67d:	clc    
   14000f67e:	clc    
   14000f67f:	push   rbp
   14000f681:	div    bh
   14000f683:	push   rdi
   14000f685:	clc    
   14000f686:	stc    
   14000f687:	push   rdi
   14000f689:	clc    
   14000f68a:	stc    
   14000f68b:	push   rdi
   14000f68d:	clc    
   14000f68e:	stc    
   14000f68f:	push   rdi
   14000f691:	clc    
   14000f692:	stc    
   14000f693:	push   rdi
   14000f695:	clc    
   14000f696:	stc    
   14000f697:	push   rdi
   14000f699:	clc    
   14000f69a:	stc    
   14000f69b:	jmp    FWORD PTR [rsi-0x4a]
   14000f69e:	imul   edi,edi,0xff69b66e
   14000f6a4:	idiv   eax
   14000f6a6:	stc    
   14000f6a7:	(bad)  
   14000f6a8:	sti    
   14000f6a9:	stc    
   14000f6aa:	idiv   bh
   14000f6ac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f6b3:	add    BYTE PTR es:[rax],al
   14000f6b6:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827b44
   14000f6bc:	div    ah
   14000f6be:	repnz (bad) 
   14000f6c0:	sti    
   14000f6c1:	stc    
   14000f6c2:	idiv   bh
   14000f6c4:	sar    DWORD PTR [rbp-0x614d0044],1
   14000f6ca:	jae    0x14000f6cb
   14000f6cc:	cdq    
   14000f6cd:	test   DWORD PTR [rdi+rdi*8-0x6b],ecx
   14000f6d1:	test   BYTE PTR [rdi-0x1],al
   14000f6d4:	xchg   ebx,eax
   14000f6d5:	mov    BYTE PTR [rcx-0x1],cl
   14000f6d8:	xchg   edx,eax
   14000f6d9:	mov    ecx,DWORD PTR [rbx-0x1]
   14000f6dc:	nop
   14000f6dd:	mov    cs,WORD PTR [rdi+rdi*8-0x72]
   14000f6e1:	xchg   edx,eax
   14000f6e2:	rex.WRX dec QWORD PTR [rbp+r10*4-0x687400b0]
   14000f6ea:	push   rcx
   14000f6eb:	dec    DWORD PTR [rcx-0x2e00ac66]
   14000f6f1:	mov    ebp,0xe6e6ffbc
   14000f6f6:	out    0xff,eax
   14000f6f8:	repz idiv dl
   14000f6fb:	dec    ebx
   14000f6fd:	retf   
   14000f6fe:	retf   
   14000f6ff:	dec    ebx
   14000f701:	retf   
   14000f702:	retf   
   14000f703:	dec    ebx
   14000f705:	retf   
   14000f706:	retf   
   14000f707:	dec    ebx
   14000f709:	retf   
   14000f70a:	retf   
   14000f70b:	dec    ebx
   14000f70d:	retf   
   14000f70e:	retf   
   14000f70f:	dec    ebx
   14000f711:	retf   
   14000f712:	retf   
   14000f713:	push   rdi
   14000f715:	clc    
   14000f716:	stc    
   14000f717:	push   rdi
   14000f719:	clc    
   14000f71a:	stc    
   14000f71b:	inc    DWORD PTR [rax+0x6eff5ba5]
   14000f721:	mov    dh,0x69
   14000f723:	push   rdi
   14000f725:	clc    
   14000f726:	stc    
   14000f727:	(bad)  
   14000f728:	sti    
   14000f729:	stc    
   14000f72a:	idiv   bh
   14000f72c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f733:	add    BYTE PTR es:[rax],al
   14000f736:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827bc4
   14000f73c:	div    ah
   14000f73e:	repnz (bad) 
   14000f740:	sti    
   14000f741:	stc    
   14000f742:	idiv   bh
   14000f744:	sar    DWORD PTR [rbp-0x59430044],1
   14000f74a:	(bad)  
   14000f74b:	(bad)  
   14000f74c:	mov    ecx,0xa8ff7fa5
   14000f751:	xchg   esp,eax
   14000f752:	call   FWORD PTR fs:[rbx-0x6b00b078]
   14000f759:	xchg   BYTE PTR [rax-0x1],cl
   14000f75c:	xchg   edx,eax
   14000f75d:	mov    cl,BYTE PTR [rdx-0x1]
   14000f760:	xchg   ecx,eax
   14000f761:	lea    ecx,[rdi+rdi*8-0x71]
   14000f765:	nop
   14000f766:	rex.WRB dec QWORD PTR [r13-0x7400b06d]
   14000f76d:	xchg   esi,eax
   14000f76e:	push   rcx
   14000f76f:	call   rcx
   14000f771:	mov    ebp,0xe6e6ffbc
   14000f776:	out    0xff,eax
   14000f778:	hlt    
   14000f779:	idiv   dl
   14000f77b:	push   rdi
   14000f77d:	clc    
   14000f77e:	stc    
   14000f77f:	push   rsi
   14000f781:	idiv   eax
   14000f783:	push   rdi
   14000f785:	clc    
   14000f786:	clc    
   14000f787:	push   rsi
   14000f789:	idiv   eax
   14000f78b:	push   rsi
   14000f78d:	idiv   eax
   14000f78f:	push   rdi
   14000f791:	clc    
   14000f792:	stc    
   14000f793:	push   rdi
   14000f795:	clc    
   14000f796:	stc    
   14000f797:	push   rdi
   14000f799:	clc    
   14000f79a:	stc    
   14000f79b:	dec    DWORD PTR [rbx-0x7f00ae69]
   14000f7a1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f7a2:	pop    rbx
   14000f7a3:	push   rdi
   14000f7a5:	clc    
   14000f7a6:	stc    
   14000f7a7:	(bad)  
   14000f7a8:	sti    
   14000f7a9:	stc    
   14000f7aa:	idiv   bh
   14000f7ac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f7b3:	add    BYTE PTR es:[rax],al
   14000f7b6:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827c44
   14000f7bc:	div    esi
   14000f7be:	hlt    
   14000f7bf:	(bad)  
   14000f7c0:	sti    
   14000f7c1:	stc    
   14000f7c2:	idiv   bh
   14000f7c4:	sar    DWORD PTR [rbp-0x62460044],1
   14000f7ca:	js     0x14000f7cb
   14000f7cc:	mov    eax,0xb7ff7a9f
   14000f7d1:	movabs eax,ds:0x9fb0ff7ca4b6ff7a
   14000f7da:	jb     0x14000f7db
   14000f7dc:	stos   DWORD PTR es:[rdi],eax
   14000f7dd:	lahf   
   14000f7de:	outs   dx,DWORD PTR ds:[rsi]
   14000f7df:	jmp    QWORD PTR [rsi-0x60009663]
   14000f7e5:	fwait
   14000f7e6:	movsxd edi,edi
   14000f7e8:	popf   
   14000f7e9:	pushf  
   14000f7ea:	(bad)  
   14000f7eb:	call   FWORD PTR [rax+riz*4-0x422e009c]
   14000f7f2:	mov    esp,0xe7e6e6ff
   14000f7f7:	push   rbp
   14000f7f9:	idiv   dl
   14000f7fb:	dec    ebx
   14000f7fd:	retf   
   14000f7fe:	retf   
   14000f7ff:	dec    ebx
   14000f801:	retf   
   14000f802:	retf   
   14000f803:	dec    ebx
   14000f805:	retf   
   14000f806:	retf   
   14000f807:	dec    ebx
   14000f809:	retf   
   14000f80a:	retf   
   14000f80b:	dec    ebx
   14000f80d:	retf   
   14000f80e:	retf   
   14000f80f:	dec    ebx
   14000f811:	retf   
   14000f812:	retf   
   14000f813:	push   rdi
   14000f815:	clc    
   14000f816:	stc    
   14000f817:	push   rdi
   14000f819:	clc    
   14000f81a:	stc    
   14000f81b:	call   QWORD PTR [rbp-0x7400b87d]
   14000f821:	xchg   edi,eax
   14000f822:	push   rcx
   14000f823:	push   rdi
   14000f825:	clc    
   14000f826:	stc    
   14000f827:	(bad)  
   14000f828:	sti    
   14000f829:	stc    
   14000f82a:	idiv   bh
   14000f82c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f833:	add    BYTE PTR es:[rax],al
   14000f836:	add    BYTE PTR [rip+0xffffffffff818488],cl        # 0x13f827cc4
   14000f83c:	cld    
   14000f83d:	cld    
   14000f83e:	std    
   14000f83f:	(bad)  
   14000f840:	sti    
   14000f841:	stc    
   14000f842:	idiv   bh
   14000f844:	sar    DWORD PTR [rbp-0x6c4a0044],1
   14000f84a:	outs   dx,BYTE PTR ds:[rsi]
   14000f84b:	push   QWORD PTR [rbp+rdx*4-0x684c0092]
   14000f852:	outs   dx,DWORD PTR ds:[rsi]
   14000f853:	push   QWORD PTR [rbx-0x4e008e66]
   14000f859:	pushf  
   14000f85a:	jno    0x14000f85b
   14000f85c:	mov    al,0x9f
   14000f85e:	jae    0x14000f85f
   14000f860:	scas   eax,DWORD PTR es:[rdi]
   14000f861:	movabs eax,ds:0xa6adff75a4aeff74
   14000f86a:	jbe    0x14000f86b
   14000f86c:	stos   DWORD PTR es:[rdi],eax
   14000f86d:	test   eax,0xbdd1ff78
   14000f872:	mov    esp,0xe7e6e6ff
   14000f877:	push   rsp
   14000f879:	idiv   edx
   14000f87b:	push   rdi
   14000f87d:	clc    
   14000f87e:	stc    
   14000f87f:	push   rsi
   14000f881:	clc    
   14000f882:	clc    
   14000f883:	push   rdi
   14000f885:	clc    
   14000f886:	stc    
   14000f887:	push   rsi
   14000f889:	idiv   eax
   14000f88b:	push   rdi
   14000f88d:	clc    
   14000f88e:	stc    
   14000f88f:	push   rdi
   14000f891:	clc    
   14000f892:	stc    
   14000f893:	push   rdi
   14000f895:	clc    
   14000f896:	stc    
   14000f897:	push   rdi
   14000f899:	clc    
   14000f89a:	stc    
   14000f89b:	jmp    QWORD PTR [rax-0x6a00c396]
   14000f8a1:	add    DWORD PTR [rdi-0x1],0xfffffff7
   14000f8a5:	clc    
   14000f8a6:	stc    
   14000f8a7:	(bad)  
   14000f8a8:	sti    
   14000f8a9:	stc    
   14000f8aa:	idiv   bh
   14000f8ac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f8b3:	add    BYTE PTR es:[rax],al
   14000f8b6:	add    BYTE PTR [rip+0xfffffffff684868a],cl        # 0x136857f46
   14000f8bc:	cld    
   14000f8bd:	cld    
   14000f8be:	cld    
   14000f8bf:	(bad)  
   14000f8c0:	sti    
   14000f8c1:	stc    
   14000f8c2:	idiv   bh
   14000f8c4:	sar    DWORD PTR [rbp-0x774e0044],1
   14000f8ca:	(bad)  
   14000f8cb:	push   QWORD PTR [rax-0x50009d76]
   14000f8d1:	mov    esp,DWORD PTR [rdx-0x1]
   14000f8d4:	scas   al,BYTE PTR es:[rdi]
   14000f8d5:	mov    fs,WORD PTR [rdi+rdi*8-0x53]
   14000f8d9:	xchg   ecx,eax
   14000f8da:	jmp    FWORD PTR gs:[rbx+rdx*4-0x6955009a]
   14000f8e2:	jmp    FWORD PTR [ecx-0x57009667]
   14000f8e9:	pushf  
   14000f8ea:	push   0xffffffffffffffff
   14000f8ec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14000f8ed:	lahf   
   14000f8ee:	imul   edi,edi,0xffffffd1
   14000f8f1:	mov    ebp,0xe6e6ffbc
   14000f8f6:	out    0xff,eax
   14000f8f8:	hlt    
   14000f8f9:	idiv   ecx
   14000f8fb:	dec    ebx
   14000f8fd:	retf   
   14000f8fe:	retf   
   14000f8ff:	dec    ebx
   14000f901:	retf   
   14000f902:	retf   
   14000f903:	dec    ebx
   14000f905:	retf   
   14000f906:	retf   
   14000f907:	dec    ebx
   14000f909:	retf   
   14000f90a:	retf   
   14000f90b:	dec    ebx
   14000f90d:	retf   
   14000f90e:	retf   
   14000f90f:	dec    ebx
   14000f911:	retf   
   14000f912:	retf   
   14000f913:	push   rdi
   14000f915:	clc    
   14000f916:	stc    
   14000f917:	push   rdi
   14000f919:	clc    
   14000f91a:	stc    
   14000f91b:	jmp    QWORD PTR [rax-0x5f00c396]
   14000f921:	push   0x3c
   14000f923:	push   rdi
   14000f925:	clc    
   14000f926:	stc    
   14000f927:	(bad)  
   14000f928:	sti    
   14000f929:	stc    
   14000f92a:	idiv   bh
   14000f92c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f933:	add    BYTE PTR es:[rax],al
   14000f936:	add    BYTE PTR [rip+0xfffffffff684868a],cl        # 0x136857fc6
   14000f93c:	cld    
   14000f93d:	cld    
   14000f93e:	cld    
   14000f93f:	(bad)  
   14000f940:	sti    
   14000f941:	stc    
   14000f942:	idiv   bh
   14000f944:	sar    DWORD PTR [rbp+0x7dacffbc],1
   14000f94a:	push   rsp
   14000f94b:	jmp    FWORD PTR [rbx-0x5500aa82]
   14000f951:	adc    BYTE PTR [rsi-0x1],0xa9
   14000f955:	(bad)  
   14000f956:	push   rdi
   14000f957:	jmp    FWORD PTR [rax-0x5700a77b]
   14000f95d:	xchg   DWORD PTR [rcx-0x1],ebx
   14000f960:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000f961:	mov    ebx,DWORD PTR [rbx-0x1]
   14000f964:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000f965:	lea    ebx,[rbx-0x1]
   14000f968:	movabs ds:0xd1ff5e93a2ff5d91,eax
   14000f971:	mov    ebp,0xe6e6ffbc
   14000f976:	out    0xff,eax
   14000f978:	cmc    
   14000f979:	idiv   ecx
   14000f97b:	push   rdi
   14000f97d:	clc    
   14000f97e:	stc    
   14000f97f:	push   rdi
   14000f981:	clc    
   14000f982:	stc    
   14000f983:	push   rdi
   14000f985:	clc    
   14000f986:	stc    
   14000f987:	push   rdi
   14000f989:	clc    
   14000f98a:	stc    
   14000f98b:	push   rdi
   14000f98d:	clc    
   14000f98e:	stc    
   14000f98f:	push   rdi
   14000f991:	clc    
   14000f992:	stc    
   14000f993:	push   rdi
   14000f995:	clc    
   14000f996:	stc    
   14000f997:	push   rdi
   14000f999:	clc    
   14000f99a:	stc    
   14000f99b:	jmp    QWORD PTR [rax-0x5f00c396]
   14000f9a1:	push   0x3c
   14000f9a3:	push   rdi
   14000f9a5:	clc    
   14000f9a6:	stc    
   14000f9a7:	(bad)  
   14000f9a8:	sti    
   14000f9a9:	stc    
   14000f9aa:	idiv   bh
   14000f9ac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000f9b3:	add    BYTE PTR es:[rax],al
   14000f9b6:	add    BYTE PTR [rip+0xfffffffff684868a],cl        # 0x136858046
   14000f9bc:	cld    
   14000f9bd:	cld    
   14000f9be:	sti    
   14000f9bf:	(bad)  
   14000f9c0:	sti    
   14000f9c1:	stc    
   14000f9c2:	idiv   bh
   14000f9c4:	(bad)  
   14000f9c5:	mov    edx,0xbdd1ffba
   14000f9ca:	mov    esp,0xbcbdd1ff
   14000f9cf:	call   rcx
   14000f9d1:	mov    ebp,0xbdd1ffbc
   14000f9d6:	mov    esp,0xbcbdd1ff
   14000f9db:	call   rcx
   14000f9dd:	mov    ebp,0xbdd1ffbc
   14000f9e2:	mov    esp,0xbcbdd1ff
   14000f9e7:	call   rcx
   14000f9e9:	mov    ebp,0xbdd1ffbc
   14000f9ee:	mov    esp,0xbabbc6ff
   14000f9f3:	(bad)  
   14000f9f4:	cli    
   14000f9f5:	sti    
   14000f9f6:	cld    
   14000f9f7:	(bad)  
   14000f9f8:	cli    
   14000f9f9:	sti    
   14000f9fa:	cld    
   14000f9fb:	dec    ebx
   14000f9fd:	retf   
   14000f9fe:	retf   
   14000f9ff:	dec    ebx
   14000fa01:	retf   
   14000fa02:	retf   
   14000fa03:	dec    ebx
   14000fa05:	retf   
   14000fa06:	retf   
   14000fa07:	dec    ebx
   14000fa09:	retf   
   14000fa0a:	retf   
   14000fa0b:	dec    ebx
   14000fa0d:	retf   
   14000fa0e:	retf   
   14000fa0f:	dec    ebx
   14000fa11:	retf   
   14000fa12:	retf   
   14000fa13:	push   rdi
   14000fa15:	clc    
   14000fa16:	stc    
   14000fa17:	push   rdi
   14000fa19:	clc    
   14000fa1a:	stc    
   14000fa1b:	jmp    QWORD PTR [rax-0x5f00c396]
   14000fa21:	push   0x3c
   14000fa23:	push   rdi
   14000fa25:	clc    
   14000fa26:	stc    
   14000fa27:	(bad)  
   14000fa28:	sti    
   14000fa29:	stc    
   14000fa2a:	idiv   bh
   14000fa2c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000fa33:	add    BYTE PTR es:[rax],al
   14000fa36:	add    BYTE PTR [rip+0xfffffffff684868a],cl        # 0x1368580c6
   14000fa3c:	sti    
   14000fa3d:	stc    
   14000fa3e:	idiv   bh
   14000fa40:	sti    
   14000fa41:	stc    
   14000fa42:	idiv   bh
   14000fa44:	sti    
   14000fa45:	stc    
   14000fa46:	idiv   bh
   14000fa48:	sti    
   14000fa49:	stc    
   14000fa4a:	idiv   bh
   14000fa4c:	sti    
   14000fa4d:	stc    
   14000fa4e:	idiv   bh
   14000fa50:	sti    
   14000fa51:	stc    
   14000fa52:	idiv   bh
   14000fa54:	sti    
   14000fa55:	stc    
   14000fa56:	idiv   bh
   14000fa58:	sti    
   14000fa59:	stc    
   14000fa5a:	idiv   bh
   14000fa5c:	sti    
   14000fa5d:	stc    
   14000fa5e:	idiv   bh
   14000fa60:	sti    
   14000fa61:	stc    
   14000fa62:	idiv   bh
   14000fa64:	sti    
   14000fa65:	stc    
   14000fa66:	idiv   bh
   14000fa68:	sti    
   14000fa69:	stc    
   14000fa6a:	idiv   bh
   14000fa6c:	sti    
   14000fa6d:	stc    
   14000fa6e:	idiv   bh
   14000fa70:	sti    
   14000fa71:	stc    
   14000fa72:	idiv   bh
   14000fa74:	sti    
   14000fa75:	stc    
   14000fa76:	idiv   bh
   14000fa78:	sti    
   14000fa79:	stc    
   14000fa7a:	idiv   bh
   14000fa7c:	sti    
   14000fa7d:	stc    
   14000fa7e:	idiv   bh
   14000fa80:	sti    
   14000fa81:	stc    
   14000fa82:	idiv   bh
   14000fa84:	sti    
   14000fa85:	stc    
   14000fa86:	idiv   bh
   14000fa88:	sti    
   14000fa89:	stc    
   14000fa8a:	idiv   bh
   14000fa8c:	sti    
   14000fa8d:	stc    
   14000fa8e:	idiv   bh
   14000fa90:	sti    
   14000fa91:	stc    
   14000fa92:	idiv   bh
   14000fa94:	sti    
   14000fa95:	stc    
   14000fa96:	idiv   bh
   14000fa98:	sti    
   14000fa99:	stc    
   14000fa9a:	idiv   bh
   14000fa9c:	sti    
   14000fa9d:	stc    
   14000fa9e:	idiv   bh
   14000faa0:	sti    
   14000faa1:	stc    
   14000faa2:	idiv   bh
   14000faa4:	sti    
   14000faa5:	stc    
   14000faa6:	idiv   bh
   14000faa8:	sti    
   14000faa9:	stc    
   14000faaa:	idiv   bh
   14000faac:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000fab3:	add    BYTE PTR es:[rax],al
   14000fab6:	add    BYTE PTR [rip+0xfffffffff684868b],cl        # 0x136858147
   14000fabc:	div    ebp
   14000fabe:	repz (bad) 
   14000fac0:	clc    
   14000fac1:	stc    
   14000fac2:	cli    
   14000fac3:	push   rdi
   14000fac5:	clc    
   14000fac6:	stc    
   14000fac7:	push   rdi
   14000fac9:	clc    
   14000faca:	stc    
   14000facb:	push   rdi
   14000facd:	clc    
   14000face:	stc    
   14000facf:	push   rdi
   14000fad1:	clc    
   14000fad2:	stc    
   14000fad3:	push   rdi
   14000fad5:	clc    
   14000fad6:	stc    
   14000fad7:	push   rdi
   14000fad9:	clc    
   14000fada:	stc    
   14000fadb:	push   rdi
   14000fadd:	clc    
   14000fade:	stc    
   14000fadf:	push   rdi
   14000fae1:	clc    
   14000fae2:	stc    
   14000fae3:	push   rdi
   14000fae5:	clc    
   14000fae6:	stc    
   14000fae7:	push   rdi
   14000fae9:	clc    
   14000faea:	stc    
   14000faeb:	push   rdi
   14000faed:	clc    
   14000faee:	stc    
   14000faef:	push   rdi
   14000faf1:	clc    
   14000faf2:	stc    
   14000faf3:	push   rdi
   14000faf5:	clc    
   14000faf6:	stc    
   14000faf7:	(bad)  
   14000faf8:	clc    
   14000faf9:	clc    
   14000fafa:	stc    
   14000fafb:	push   rdi
   14000fafd:	clc    
   14000fafe:	stc    
   14000faff:	push   rdi
   14000fb01:	clc    
   14000fb02:	clc    
   14000fb03:	push   rdi
   14000fb05:	clc    
   14000fb06:	clc    
   14000fb07:	push   rdi
   14000fb09:	clc    
   14000fb0a:	clc    
   14000fb0b:	push   rdi
   14000fb0d:	clc    
   14000fb0e:	clc    
   14000fb0f:	push   rdi
   14000fb11:	clc    
   14000fb12:	clc    
   14000fb13:	push   rdi
   14000fb15:	clc    
   14000fb16:	stc    
   14000fb17:	push   rdi
   14000fb19:	clc    
   14000fb1a:	stc    
   14000fb1b:	push   rdi
   14000fb1d:	clc    
   14000fb1e:	stc    
   14000fb1f:	push   rdi
   14000fb21:	clc    
   14000fb22:	stc    
   14000fb23:	(bad)  
   14000fb24:	clc    
   14000fb25:	stc    
   14000fb26:	cli    
   14000fb27:	(bad)  
   14000fb28:	sti    
   14000fb29:	stc    
   14000fb2a:	idiv   bh
   14000fb2c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000fb33:	add    BYTE PTR es:[rax],al
   14000fb36:	add    BYTE PTR [rip+0xfffffffff6888a8e],cl        # 0x1368985ca
   14000fb3c:	retf   
   14000fb3d:	leave  
   14000fb3e:	(bad)  
   14000fb3f:	dec    ebx
   14000fb41:	leave  
   14000fb42:	(bad)  
   14000fb43:	dec    ebx
   14000fb45:	leave  
   14000fb46:	(bad)  
   14000fb47:	dec    ebx
   14000fb49:	leave  
   14000fb4a:	(bad)  
   14000fb4b:	dec    ebx
   14000fb4d:	leave  
   14000fb4e:	(bad)  
   14000fb4f:	dec    ebx
   14000fb51:	leave  
   14000fb52:	(bad)  
   14000fb53:	dec    ebx
   14000fb55:	leave  
   14000fb56:	(bad)  
   14000fb57:	dec    ebx
   14000fb59:	leave  
   14000fb5a:	(bad)  
   14000fb5b:	dec    ebx
   14000fb5d:	leave  
   14000fb5e:	(bad)  
   14000fb5f:	dec    ebx
   14000fb61:	leave  
   14000fb62:	(bad)  
   14000fb63:	dec    ebx
   14000fb65:	leave  
   14000fb66:	(bad)  
   14000fb67:	dec    ebx
   14000fb69:	leave  
   14000fb6a:	(bad)  
   14000fb6b:	dec    ebx
   14000fb6d:	leave  
   14000fb6e:	(bad)  
   14000fb6f:	dec    ebx
   14000fb71:	leave  
   14000fb72:	(bad)  
   14000fb73:	dec    ebx
   14000fb75:	leave  
   14000fb76:	(bad)  
   14000fb77:	dec    ebx
   14000fb79:	leave  
   14000fb7a:	(bad)  
   14000fb7b:	dec    esp
   14000fb7d:	retf   0xffc9
   14000fb80:	int    0xcb
   14000fb82:	retf   0xcdff
   14000fb85:	int3   
   14000fb86:	retf   0xcdff
   14000fb89:	int3   
   14000fb8a:	retf   0xcdff
   14000fb8d:	retf   
   14000fb8e:	leave  
   14000fb8f:	dec    esp
   14000fb91:	retf   0xffc8
   14000fb94:	int3   
   14000fb95:	retf   0xffc8
   14000fb98:	retf   
   14000fb99:	leave  
   14000fb9a:	(bad)  
   14000fb9b:	dec    ebx
   14000fb9d:	leave  
   14000fb9e:	(bad)  
   14000fb9f:	dec    ebx
   14000fba1:	leave  
   14000fba2:	(bad)  
   14000fba3:	dec    ebx
   14000fba5:	leave  
   14000fba6:	(bad)  
   14000fba7:	dec    ebx
   14000fba9:	leave  
   14000fbaa:	(bad)  
   14000fbab:	dec    DWORD PTR [rax+0xff8184]
   14000fbb1:	add    BYTE PTR [rax],al
   14000fbb3:	and    eax,DWORD PTR [rax]
   14000fbb5:	add    BYTE PTR [rax],al
   14000fbb7:	or     ecx,DWORD PTR [rbx-0x19017877]
   14000fbbd:	(bad)  
   14000fbbf:	(bad)  
   14000fbc0:	(bad)  
   14000fbc2:	sar    edi,1
   14000fbc4:	(bad)  
   14000fbc6:	sar    edi,1
   14000fbc8:	(bad)  
   14000fbca:	sar    edi,1
   14000fbcc:	(bad)  
   14000fbce:	sar    edi,1
   14000fbd0:	(bad)  
   14000fbd2:	sar    edi,1
   14000fbd4:	(bad)  
   14000fbd6:	sar    edi,1
   14000fbd8:	(bad)  
   14000fbda:	sar    edi,1
   14000fbdc:	(bad)  
   14000fbde:	sar    edi,1
   14000fbe0:	(bad)  
   14000fbe2:	sar    edi,1
   14000fbe4:	(bad)  
   14000fbe6:	sar    edi,1
   14000fbe8:	(bad)  
   14000fbea:	sar    edi,1
   14000fbec:	(bad)  
   14000fbee:	sar    edi,1
   14000fbf0:	(bad)  
   14000fbf2:	sar    edi,1
   14000fbf4:	(bad)  
   14000fbf6:	sar    edi,1
   14000fbf8:	(bad)  
   14000fbfa:	sar    edi,1
   14000fbfc:	(bad)  
   14000fbfe:	sar    edi,1
   14000fc00:	(bad)  
   14000fc02:	sar    edi,1
   14000fc04:	(bad)  
   14000fc06:	sar    edi,1
   14000fc08:	(bad)  
   14000fc0a:	sar    edi,1
   14000fc0c:	(bad)  
   14000fc0e:	sar    edi,1
   14000fc10:	(bad)  
   14000fc12:	sar    edi,1
   14000fc14:	xchg   ecx,eax
   14000fc15:	jns    0x14000fc7f
   14000fc17:	(bad)  
   14000fc18:	(bad)  
   14000fc1a:	sar    edi,1
   14000fc1c:	xchg   ecx,eax
   14000fc1d:	jns    0x14000fc87
   14000fc1f:	(bad)  
   14000fc20:	(bad)  
   14000fc22:	sar    edi,1
   14000fc24:	xchg   ecx,eax
   14000fc25:	jns    0x14000fc8f
   14000fc27:	(bad)  
   14000fc28:	(bad)  
   14000fc2a:	sar    edi,1
   14000fc2c:	mov    BYTE PTR [rcx+rax*4+0xff],al
   14000fc33:	(bad)  
   14000fc34:	add    BYTE PTR [rax],al
   14000fc36:	add    BYTE PTR [rsi],al
   14000fc38:	xchg   ecx,eax
   14000fc39:	mov    WORD PTR [rcx-0x7e7b7784],cs
   14000fc3f:	dec    DWORD PTR [rax-0x77007e7c]
   14000fc45:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000fc4b:	dec    DWORD PTR [rax-0x77007e7c]
   14000fc51:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000fc57:	dec    DWORD PTR [rax-0x77007e7c]
   14000fc5d:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000fc63:	dec    DWORD PTR [rax-0x77007e7c]
   14000fc69:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000fc6f:	dec    DWORD PTR [rax-0x77007e7c]
   14000fc75:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000fc7b:	dec    DWORD PTR [rax-0x77007e7c]
   14000fc81:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000fc87:	dec    DWORD PTR [rax-0x77007e7c]
   14000fc8d:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000fc93:	dec    DWORD PTR [rax-0x77007e7c]
   14000fc99:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000fc9f:	dec    DWORD PTR [rax-0x77007e7c]
   14000fca5:	test   BYTE PTR [rcx-0x7e7b7701],al
   14000fcab:	dec    DWORD PTR [rbx+0x818486]
   14000fcb1:	add    BYTE PTR [rax],al
   14000fcb3:	(bad)  
   14000fcb4:	add    BYTE PTR [rax],al
   14000fcb6:	add    BYTE PTR [rdx],al
	...
   14000fe38:	(bad)  
   14000fe39:	(bad)  
   14000fe3a:	(bad)  
   14000fe3b:	(bad)  
   14000fe3c:	(bad)  
   14000fe3d:	(bad)  
   14000fe3e:	(bad)  
   14000fe3f:	inc    DWORD PTR [rax]
	...
   14000fea9:	add    BYTE PTR [rax],al
   14000feab:	add    bh,bh
   14000fead:	(bad)  
   14000feae:	(bad)  
   14000feaf:	(bad)  
   14000feb0:	(bad)  
   14000feb1:	(bad)  
   14000feb2:	(bad)  
   14000feb3:	(bad)  
   14000feb4:	(bad)  
   14000feb5:	(bad)  
   14000feb6:	(bad)  
   14000feb7:	jmp    FWORD PTR [rax]
   14000feb9:	add    BYTE PTR [rax],al
   14000febb:	add    BYTE PTR [rax],bl
   14000febd:	add    BYTE PTR [rax],al
   14000febf:	add    BYTE PTR [rax],dh
   14000fec1:	add    BYTE PTR [rax],al
   14000fec3:	add    BYTE PTR [rcx],al
   14000fec5:	add    BYTE PTR [rax],ah
   14000fec7:	add    BYTE PTR [rax],al
   14000fec9:	add    BYTE PTR [rax],al
   14000fecb:	add    BYTE PTR [rax+0x9],ah
	...
   14000ff42:	add    BYTE PTR [rdx],al
   14000ff44:	add    BYTE PTR [rax],al
   14000ff46:	add    BYTE PTR [rdi],al
   14000ff48:	add    BYTE PTR [rax],al
   14000ff4a:	add    BYTE PTR [rbx],cl
   14000ff4c:	add    BYTE PTR [rax],al
   14000ff4e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ff54
   14000ff54:	add    BYTE PTR [rax],al
   14000ff56:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ff5c
   14000ff5c:	add    BYTE PTR [rax],al
   14000ff5e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ff64
   14000ff64:	add    BYTE PTR [rax],al
   14000ff66:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ff6c
   14000ff6c:	add    BYTE PTR [rax],al
   14000ff6e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ff74
   14000ff74:	add    BYTE PTR [rax],al
   14000ff76:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ff7c
   14000ff7c:	add    BYTE PTR [rax],al
   14000ff7e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ff84
   14000ff84:	add    BYTE PTR [rax],al
   14000ff86:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ff8c
   14000ff8c:	add    BYTE PTR [rax],al
   14000ff8e:	add    BYTE PTR [rip+0xd000000],cl        # 0x14d00ff94
   14000ff94:	add    BYTE PTR [rax],al
   14000ff96:	add    BYTE PTR [rbx],cl
   14000ff98:	add    BYTE PTR [rax],al
   14000ff9a:	add    BYTE PTR [rdi],al
   14000ff9c:	add    BYTE PTR [rax],al
   14000ff9e:	add    BYTE PTR [rdx],al
   14000ffa0:	add    BYTE PTR [rax],al
   14000ffa2:	add    BYTE PTR [rdi],al
   14000ffa4:	add    BYTE PTR [rax],al
   14000ffa6:	add    BYTE PTR [rdi],dl
   14000ffa8:	add    BYTE PTR [rax],al
   14000ffaa:	add    BYTE PTR [rbx],ah
   14000ffac:	add    BYTE PTR [rax],al
   14000ffae:	add    BYTE PTR [rsi],ah
   14000ffb0:	add    BYTE PTR [rax],al
   14000ffb2:	add    BYTE PTR [rsi],ah
   14000ffb4:	add    BYTE PTR [rax],al
   14000ffb6:	add    BYTE PTR [rsi],ah
   14000ffb8:	add    BYTE PTR [rax],al
   14000ffba:	add    BYTE PTR [rsi],ah
   14000ffbc:	add    BYTE PTR [rax],al
   14000ffbe:	add    BYTE PTR [rsi],ah
   14000ffc0:	add    BYTE PTR [rax],al
   14000ffc2:	add    BYTE PTR [rsi],ah
   14000ffc4:	add    BYTE PTR [rax],al
   14000ffc6:	add    BYTE PTR [rsi],ah
   14000ffc8:	add    BYTE PTR [rax],al
   14000ffca:	add    BYTE PTR [rsi],ah
   14000ffcc:	add    BYTE PTR [rax],al
   14000ffce:	add    BYTE PTR [rsi],ah
   14000ffd0:	add    BYTE PTR [rax],al
   14000ffd2:	add    BYTE PTR [rsi],ah
   14000ffd4:	add    BYTE PTR [rax],al
   14000ffd6:	add    BYTE PTR [rsi],ah
   14000ffd8:	add    BYTE PTR [rax],al
   14000ffda:	add    BYTE PTR [rsi],ah
   14000ffdc:	add    BYTE PTR [rax],al
   14000ffde:	add    BYTE PTR [rsi],ah
   14000ffe0:	add    BYTE PTR [rax],al
   14000ffe2:	add    BYTE PTR [rsi],ah
   14000ffe4:	add    BYTE PTR [rax],al
   14000ffe6:	add    BYTE PTR [rsi],ah
   14000ffe8:	add    BYTE PTR [rax],al
   14000ffea:	add    BYTE PTR [rsi],ah
   14000ffec:	add    BYTE PTR [rax],al
   14000ffee:	add    BYTE PTR [rsi],ah
   14000fff0:	add    BYTE PTR [rax],al
   14000fff2:	add    BYTE PTR [rsi],ah
   14000fff4:	add    BYTE PTR [rax],al
   14000fff6:	add    BYTE PTR [rbx],ah
   14000fff8:	add    BYTE PTR [rax],al
   14000fffa:	add    BYTE PTR [rdi],dl
   14000fffc:	add    BYTE PTR [rax],al
   14000fffe:	add    BYTE PTR [rdi],al
   140010000:	xchg   edx,eax
   140010001:	lea    ecx,[rdx-0x706d6871]
   140010007:	call   QWORD PTR [rdi-0x6800706e]
   14001000d:	xchg   edx,eax
   14001000e:	(bad)  
   14001000f:	call   QWORD PTR [rdi-0x6800706e]
   140010015:	xchg   edx,eax
   140010016:	(bad)  
   140010017:	call   QWORD PTR [rdi-0x6800706e]
   14001001d:	xchg   edx,eax
   14001001e:	(bad)  
   14001001f:	call   QWORD PTR [rdi-0x6800706e]
   140010025:	xchg   edx,eax
   140010026:	(bad)  
   140010027:	call   QWORD PTR [rdi-0x6800706e]
   14001002d:	xchg   edx,eax
   14001002e:	(bad)  
   14001002f:	call   QWORD PTR [rdi-0x6800706e]
   140010035:	xchg   edx,eax
   140010036:	(bad)  
   140010037:	call   QWORD PTR [rdi-0x6800706e]
   14001003d:	xchg   edx,eax
   14001003e:	(bad)  
   14001003f:	call   QWORD PTR [rdi-0x6800706e]
   140010045:	xchg   edx,eax
   140010046:	(bad)  
   140010047:	call   QWORD PTR [rdi-0x6800706e]
   14001004d:	xchg   edx,eax
   14001004e:	(bad)  
   14001004f:	call   QWORD PTR [rdi-0x7d00706e]
   140010055:	jge    0x1400100d2
   140010057:	movabs eax,ds:0xb00000023000000
   140010060:	xchg   edi,eax
   140010061:	xchg   edx,eax
   140010062:	(bad)  
   140010063:	(bad)  
   140010064:	cli    
   140010065:	cli    
   140010066:	cli    
   140010067:	(bad)  
   140010068:	stc    
   140010069:	stc    
   14001006a:	stc    
   14001006b:	(bad)  
   14001006c:	stc    
   14001006d:	stc    
   14001006e:	stc    
   14001006f:	(bad)  
   140010070:	clc    
   140010071:	clc    
   140010072:	clc    
   140010073:	push   rdi
   140010075:	div    edi
   140010077:	push   rdi
   140010079:	div    edi
   14001007b:	push   rsi
   14001007d:	div    dh
   14001007f:	push   rbp
   140010081:	cmc    
   140010082:	cmc    
   140010083:	push   rbp
   140010085:	cmc    
   140010086:	cmc    
   140010087:	push   rsp
   140010089:	hlt    
   14001008a:	hlt    
   14001008b:	push   rbx
   14001008d:	repz repz push rdx
   140010091:	repnz repnz push rcx
   140010095:	icebp  
   140010096:	icebp  
   140010097:	push   rax
   140010099:	lock lock push rax
   14001009d:	lock lock (bad) 
   1400100a0:	out    dx,eax
   1400100a1:	out    dx,eax
   1400100a2:	out    dx,eax
   1400100a3:	(bad)  
   1400100a4:	out    dx,eax
   1400100a5:	out    dx,eax
   1400100a6:	out    dx,eax
   1400100a7:	(bad)  
   1400100a8:	out    dx,al
   1400100a9:	out    dx,al
   1400100aa:	out    dx,al
   1400100ab:	(bad)  
   1400100ac:	out    dx,al
   1400100ad:	out    dx,al
   1400100ae:	out    dx,al
   1400100af:	(bad)  
   1400100b0:	out    dx,al
   1400100b1:	out    dx,al
   1400100b2:	out    dx,al
   1400100b3:	call   QWORD PTR [rdi+0xff8f92]
   1400100b9:	add    BYTE PTR [rax],al
   1400100bb:	add    BYTE PTR es:[rax],al
   1400100be:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90935b
   1400100c4:	cli    
   1400100c5:	cli    
   1400100c6:	cli    
   1400100c7:	(bad)  
   1400100c8:	stc    
   1400100c9:	stc    
   1400100ca:	stc    
   1400100cb:	(bad)  
   1400100cc:	stc    
   1400100cd:	stc    
   1400100ce:	stc    
   1400100cf:	(bad)  
   1400100d0:	clc    
   1400100d1:	clc    
   1400100d2:	clc    
   1400100d3:	push   rdi
   1400100d5:	div    edi
   1400100d7:	push   rdi
   1400100d9:	div    edi
   1400100db:	push   rsi
   1400100dd:	div    dh
   1400100df:	push   rbp
   1400100e1:	cmc    
   1400100e2:	cmc    
   1400100e3:	push   rbp
   1400100e5:	cmc    
   1400100e6:	cmc    
   1400100e7:	push   rsp
   1400100e9:	hlt    
   1400100ea:	hlt    
   1400100eb:	push   rbx
   1400100ed:	repz repz push rdx
   1400100f1:	repnz repnz push rdx
   1400100f5:	repnz repnz push rcx
   1400100f9:	icebp  
   1400100fa:	icebp  
   1400100fb:	push   rax
   1400100fd:	lock lock push rax
   140010101:	lock lock (bad) 
   140010104:	out    dx,eax
   140010105:	out    dx,eax
   140010106:	out    dx,eax
   140010107:	(bad)  
   140010108:	out    dx,eax
   140010109:	out    dx,eax
   14001010a:	out    dx,eax
   14001010b:	(bad)  
   14001010c:	out    dx,al
   14001010d:	out    dx,al
   14001010e:	out    dx,al
   14001010f:	(bad)  
   140010110:	out    dx,al
   140010111:	out    dx,al
   140010112:	out    dx,al
   140010113:	call   QWORD PTR [rdi+0xff8f92]
   140010119:	add    BYTE PTR [rax],al
   14001011b:	add    BYTE PTR es:[rax],al
   14001011e:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f9093bb
   140010124:	sti    
   140010125:	sti    
   140010126:	sti    
   140010127:	(bad)  
   140010128:	cli    
   140010129:	cli    
   14001012a:	cli    
   14001012b:	(bad)  
   14001012c:	cli    
   14001012d:	cli    
   14001012e:	cli    
   14001012f:	push   rbx
   140010131:	repz repz push rbx
   140010135:	repz repz push rbx
   140010139:	repz repz push rbx
   14001013d:	repz repz push rbx
   140010141:	repz repz push rbx
   140010145:	repz repz push rbx
   140010149:	repz repz push rbp
   14001014d:	cmc    
   14001014e:	cmc    
   14001014f:	jmp    rax
   140010151:	loopne 0x140010133
   140010153:	dec    ebx
   140010155:	retf   
   140010156:	retf   
   140010157:	dec    ebx
   140010159:	retf   
   14001015a:	retf   
   14001015b:	dec    ebx
   14001015d:	retf   
   14001015e:	retf   
   14001015f:	push   rax
   140010161:	lock lock push rax
   140010165:	lock lock (bad) 
   140010168:	out    dx,eax
   140010169:	out    dx,eax
   14001016a:	out    dx,eax
   14001016b:	(bad)  
   14001016c:	out    dx,eax
   14001016d:	out    dx,eax
   14001016e:	out    dx,eax
   14001016f:	(bad)  
   140010170:	out    dx,al
   140010171:	out    dx,al
   140010172:	out    dx,al
   140010173:	call   QWORD PTR [rdi+0xff8f92]
   140010179:	add    BYTE PTR [rax],al
   14001017b:	add    BYTE PTR es:[rax],al
   14001017e:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90941b
   140010184:	sti    
   140010185:	sti    
   140010186:	sti    
   140010187:	(bad)  
   140010188:	sti    
   140010189:	sti    
   14001018a:	sti    
   14001018b:	inc    DWORD PTR [rbp-0x7d00a961]
   140010191:	movabs ds:0xaa7bff5ca67eff59,eax
   14001019a:	pop    rdi
   14001019b:	(bad)  
   14001019c:	js     0x14001014b
   14001019e:	(bad)  
   14001019f:	push   QWORD PTR [rbp-0x50]
   1400101a2:	push   QWORD PTR fs:[rdx-0x4e]
   1400101a6:	push   WORD PTR [rax-0x4c]
   1400101aa:	push   0xfffffffff5f5f5ff
   1400101af:	push   rdi
   1400101b1:	clc    
   1400101b2:	clc    
   1400101b3:	push   rsi
   1400101b5:	div    edi
   1400101b7:	push   rsi
   1400101b9:	div    edi
   1400101bb:	push   rsi
   1400101bd:	div    edi
   1400101bf:	push   rcx
   1400101c1:	icebp  
   1400101c2:	icebp  
   1400101c3:	push   rcx
   1400101c5:	icebp  
   1400101c6:	icebp  
   1400101c7:	push   rax
   1400101c9:	lock lock (bad) 
   1400101cc:	out    dx,eax
   1400101cd:	out    dx,eax
   1400101ce:	out    dx,eax
   1400101cf:	(bad)  
   1400101d0:	out    dx,eax
   1400101d1:	out    dx,eax
   1400101d2:	out    dx,eax
   1400101d3:	call   QWORD PTR [rdi+0xff8f92]
   1400101d9:	add    BYTE PTR [rax],al
   1400101db:	add    BYTE PTR es:[rax],al
   1400101de:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90947b
   1400101e4:	cld    
   1400101e5:	cld    
   1400101e6:	cld    
   1400101e7:	(bad)  
   1400101e8:	sti    
   1400101e9:	sti    
   1400101ea:	sti    
   1400101eb:	dec    DWORD PTR [rcx-0x7900ac65]
   1400101f1:	sahf   
   1400101f2:	push   rsi
   1400101f3:	inc    DWORD PTR [rdx+0x7fff58a2]
   1400101f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400101fa:	pop    rbx
   1400101fb:	(bad)  
   1400101fc:	jl     0x1400101a7
   1400101fe:	pop    rsi
   1400101ff:	(bad)  
   140010200:	js     0x1400101ae
   140010202:	(bad)  
   140010203:	push   QWORD PTR [rbp-0x51]
   140010206:	movsxd edi,edi
   140010208:	jae    0x1400101bb
   14001020a:	gs push rbp
   14001020d:	cmc    
   14001020e:	cmc    
   14001020f:	jmp    rax
   140010211:	loopne 0x1400101f3
   140010213:	dec    ebx
   140010215:	retf   
   140010216:	retf   
   140010217:	dec    ebx
   140010219:	retf   
   14001021a:	retf   
   14001021b:	dec    ebx
   14001021d:	retf   
   14001021e:	retf   
   14001021f:	push   rdx
   140010221:	repnz repnz push rcx
   140010225:	icebp  
   140010226:	icebp  
   140010227:	push   rcx
   140010229:	icebp  
   14001022a:	icebp  
   14001022b:	push   rax
   14001022d:	lock lock (bad) 
   140010230:	out    dx,eax
   140010231:	out    dx,eax
   140010232:	out    dx,eax
   140010233:	call   QWORD PTR [rdi+0xff8f92]
   140010239:	add    BYTE PTR [rax],al
   14001023b:	add    BYTE PTR es:[rax],al
   14001023e:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f9094db
   140010244:	cld    
   140010245:	cld    
   140010246:	cld    
   140010247:	(bad)  
   140010248:	cld    
   140010249:	cld    
   14001024a:	cld    
   14001024b:	dec    DWORD PTR [rsi+rdx*4-0x657600b0]
   140010252:	push   rbx
   140010253:	inc    DWORD PTR [rsi-0x7c00aa63]
   140010259:	movabs eax,ds:0xa87dff5aa580ff58
   140010262:	pop    rbp
   140010263:	(bad)  
   140010264:	jns    0x140010211
   140010266:	(bad)  
   140010267:	push   QWORD PTR [rsi-0x52]
   14001026a:	(bad)  
   14001026b:	push   rbp
   14001026d:	cmc    
   14001026e:	cmc    
   14001026f:	push   rdi
   140010271:	clc    
   140010272:	clc    
   140010273:	push   rsi
   140010275:	div    edi
   140010277:	push   rsi
   140010279:	div    edi
   14001027b:	push   rsi
   14001027d:	div    edi
   14001027f:	push   rdx
   140010281:	repnz repnz push rdx
   140010285:	repnz repnz push rcx
   140010289:	icebp  
   14001028a:	icebp  
   14001028b:	push   rcx
   14001028d:	icebp  
   14001028e:	icebp  
   14001028f:	push   rax
   140010291:	lock lock call QWORD PTR [rdi+0xff8f92]
   140010299:	add    BYTE PTR [rax],al
   14001029b:	add    BYTE PTR es:[rax],al
   14001029e:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90953b
   1400102a4:	std    
   1400102a5:	std    
   1400102a6:	std    
   1400102a7:	(bad)  
   1400102a8:	cld    
   1400102a9:	cld    
   1400102aa:	cld    
   1400102ab:	dec    DWORD PTR [rdi-0x7300b26f]
   1400102b1:	xchg   ebp,eax
   1400102b2:	push   rax
   1400102b3:	dec    DWORD PTR [rdx-0x7800ad67]
   1400102b9:	pushf  
   1400102ba:	push   rsp
   1400102bb:	inc    DWORD PTR [rax+riz*4-0x5b7e00a9]
   1400102c2:	pop    rdx
   1400102c3:	(bad)  
   1400102c4:	jge    0x14001026d
   1400102c6:	pop    rbp
   1400102c7:	(bad)  
   1400102c8:	jp     0x140010274
   1400102ca:	pop    rdi
   1400102cb:	push   rbp
   1400102cd:	cmc    
   1400102ce:	cmc    
   1400102cf:	push   rdi
   1400102d1:	clc    
   1400102d2:	clc    
   1400102d3:	push   rsi
   1400102d5:	div    edi
   1400102d7:	push   rsi
   1400102d9:	div    edi
   1400102db:	push   rsi
   1400102dd:	div    edi
   1400102df:	push   rbx
   1400102e1:	repz repz push rdx
   1400102e5:	repnz repnz push rdx
   1400102e9:	repnz repnz push rcx
   1400102ed:	icebp  
   1400102ee:	icebp  
   1400102ef:	push   rcx
   1400102f1:	icebp  
   1400102f2:	icebp  
   1400102f3:	call   QWORD PTR [rdi+0xff8f92]
   1400102f9:	add    BYTE PTR [rax],al
   1400102fb:	add    BYTE PTR es:[rax],al
   1400102fe:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90959b
   140010304:	std    
   140010305:	std    
   140010306:	std    
   140010307:	(bad)  
   140010308:	std    
   140010309:	std    
   14001030a:	std    
   14001030b:	call   QWORD PTR [rdx-0x7000b475]
   140010311:	(bad)  
   140010312:	rex.WRB dec QWORD PTR [r13-0x7400b06c]
   140010319:	cwde   
   14001031a:	push   rcx
   14001031b:	dec    DWORD PTR [rax-0x7a00ab65]
   140010321:	lahf   
   140010322:	push   rsi
   140010323:	inc    DWORD PTR [rdx+0x7eff59a3]
   140010329:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14001032a:	pop    rsp
   14001032b:	push   rbp
   14001032d:	cmc    
   14001032e:	cmc    
   14001032f:	jmp    rax
   140010331:	loopne 0x140010313
   140010333:	dec    ebx
   140010335:	retf   
   140010336:	retf   
   140010337:	dec    ebx
   140010339:	retf   
   14001033a:	retf   
   14001033b:	dec    ebx
   14001033d:	retf   
   14001033e:	retf   
   14001033f:	push   rsp
   140010341:	hlt    
   140010342:	hlt    
   140010343:	jmp    FWORD PTR [rsi-0x4a]
   140010346:	imul   edi,edi,0xff69b66e
   14001034c:	repnz repnz repnz push rcx
   140010351:	icebp  
   140010352:	icebp  
   140010353:	call   QWORD PTR [rdi+0xff8f92]
   140010359:	add    BYTE PTR [rax],al
   14001035b:	add    BYTE PTR es:[rax],al
   14001035e:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f9095fb
   140010364:	(bad)  
   140010365:	(bad)  
   140010366:	(bad)  
   140010367:	(bad)  
   140010368:	std    
   140010369:	std    
   14001036a:	std    
   14001036b:	call   QWORD PTR [rbp-0x6d00b77c]
   140010371:	mov    DWORD PTR [rdx-0x1],ecx
   140010374:	nop
   140010375:	mov    cs,WORD PTR [rdi+rdi*8-0x72]
   140010379:	xchg   ebx,eax
   14001037a:	rex.WRXB dec QWORD PTR [r11-0x7600ae69]
   140010381:	fwait
   140010382:	push   rbx
   140010383:	inc    DWORD PTR [rsi-0x7d00a962]
   140010389:	movabs ds:0xf8f7fff5f5f5ff58,al
   140010392:	clc    
   140010393:	push   rsi
   140010395:	div    edi
   140010397:	push   rsi
   140010399:	div    edi
   14001039b:	push   rsi
   14001039d:	div    edi
   14001039f:	push   rsp
   1400103a1:	hlt    
   1400103a2:	hlt    
   1400103a3:	inc    DWORD PTR [rax+0x6eff5ba5]
   1400103a9:	mov    dh,0x69
   1400103ab:	push   rdx
   1400103ad:	repnz repnz push rdx
   1400103b1:	repnz bnd call QWORD PTR [rdi+0xff8f92]
   1400103b9:	add    BYTE PTR [rax],al
   1400103bb:	add    BYTE PTR es:[rax],al
   1400103be:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90965b
   1400103c4:	(bad)  
   1400103c5:	(bad)  
   1400103c6:	(bad)  
   1400103c7:	(bad)  
   1400103c8:	(bad)  
   1400103c9:	(bad)  
   1400103ca:	(bad)  
   1400103cb:	call   FWORD PTR [rax-0x6a00ba82]
   1400103d1:	add    DWORD PTR [rdi-0x1],0xffffff93
   1400103d5:	mov    BYTE PTR [rcx-0x1],cl
   1400103d8:	xchg   ecx,eax
   1400103d9:	lea    ecx,[rdi+rdi*8-0x72]
   1400103dd:	xchg   edx,eax
   1400103de:	rex.WRX dec QWORD PTR [rsi+r10*4-0x657600b0]
   1400103e6:	push   rbx
   1400103e7:	inc    DWORD PTR [rsi-0xa00aa63]
   1400103ed:	cmc    
   1400103ee:	cmc    
   1400103ef:	jmp    rax
   1400103f1:	loopne 0x1400103d3
   1400103f3:	dec    ebx
   1400103f5:	retf   
   1400103f6:	retf   
   1400103f7:	dec    ebx
   1400103f9:	retf   
   1400103fa:	retf   
   1400103fb:	dec    ebx
   1400103fd:	retf   
   1400103fe:	retf   
   1400103ff:	push   rbp
   140010401:	cmc    
   140010402:	cmc    
   140010403:	dec    DWORD PTR [rbx-0x7f00ae69]
   140010409:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14001040a:	pop    rbx
   14001040b:	push   rbx
   14001040d:	repz repz push rbx
   140010411:	repz repz call QWORD PTR [rdi+0xff8f92]
   140010419:	add    BYTE PTR [rax],al
   14001041b:	add    BYTE PTR es:[rax],al
   14001041e:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f9096bb
   140010424:	(bad)  
   140010425:	(bad)  
   140010426:	(bad)  
   140010427:	(bad)  
   140010428:	(bad)  
   140010429:	(bad)  
   14001042a:	(bad)  
   14001042b:	call   FWORD PTR [rdx-0x6700bd88]
   140010431:	jge    0x140010477
   140010433:	call   QWORD PTR [rsi-0x6b00b97e]
   140010439:	xchg   DWORD PTR [rcx-0x1],ecx
   14001043c:	xchg   ecx,eax
   14001043d:	mov    WORD PTR [rbx-0x1],cs
   140010440:	(bad)  
   140010441:	xchg   ecx,eax
   140010442:	rex.WRB dec QWORD PTR [r13+rdx*4-0x667500b0]
   14001044a:	push   rdx
   14001044b:	push   rbp
   14001044d:	cmc    
   14001044e:	cmc    
   14001044f:	push   rdi
   140010451:	clc    
   140010452:	clc    
   140010453:	push   rsi
   140010455:	div    edi
   140010457:	push   rsi
   140010459:	div    edi
   14001045b:	push   rsi
   14001045d:	div    edi
   14001045f:	push   rsi
   140010461:	div    dh
   140010463:	call   QWORD PTR [rbp-0x7400b87d]
   140010469:	xchg   edi,eax
   14001046a:	push   rcx
   14001046b:	push   rsp
   14001046d:	hlt    
   14001046e:	hlt    
   14001046f:	push   rbx
   140010471:	repz repz call QWORD PTR [rdi+0xff8f92]
   140010479:	add    BYTE PTR [rax],al
   14001047b:	add    BYTE PTR es:[rax],al
   14001047e:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90971b
   140010484:	(bad)  
   140010485:	(bad)  
   140010486:	(bad)  
   140010487:	(bad)  
   140010488:	(bad)  
   140010489:	(bad)  
   14001048a:	(bad)  
   14001048b:	call   FWORD PTR [rbp-0x6400bf8e]
   140010491:	jbe    0x1400104d4
   140010493:	call   FWORD PTR [rcx-0x6800bb85]
   140010499:	add    BYTE PTR [rsi-0x1],0x94
   14001049d:	test   DWORD PTR [rax-0x1],ecx
   1400104a0:	xchg   edx,eax
   1400104a1:	mov    ecx,DWORD PTR [rbx-0x1]
   1400104a4:	(bad)  
   1400104a5:	(bad)  
   1400104a6:	rex.WRB dec QWORD PTR [r13-0xa00b06c]
   1400104ad:	cmc    
   1400104ae:	cmc    
   1400104af:	jmp    rax
   1400104b1:	loopne 0x140010493
   1400104b3:	dec    ebx
   1400104b5:	retf   
   1400104b6:	retf   
   1400104b7:	dec    ebx
   1400104b9:	retf   
   1400104ba:	retf   
   1400104bb:	dec    ebx
   1400104bd:	retf   
   1400104be:	retf   
   1400104bf:	push   rsi
   1400104c1:	div    dh
   1400104c3:	jmp    QWORD PTR [rax-0x6a00c396]
   1400104c9:	add    DWORD PTR [rdi-0x1],0xfffffff4
   1400104cd:	hlt    
   1400104ce:	hlt    
   1400104cf:	push   rsp
   1400104d1:	hlt    
   1400104d2:	hlt    
   1400104d3:	call   QWORD PTR [rdi+0xff8f92]
   1400104d9:	add    BYTE PTR [rax],al
   1400104db:	add    BYTE PTR es:[rax],al
   1400104de:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90977b
   1400104e4:	(bad)  
   1400104e5:	(bad)  
   1400104e6:	(bad)  
   1400104e7:	(bad)  
   1400104e8:	(bad)  
   1400104e9:	(bad)  
   1400104ea:	(bad)  
   1400104eb:	call   FWORD PTR [rsi-0x6200c193]
   1400104f1:	jno    0x140010532
   1400104f3:	call   FWORD PTR [rbx-0x6600be8b]
   1400104f9:	jp     0x14001053e
   1400104fb:	call   QWORD PTR [rdi-0x6a00ba81]
   140010501:	test   BYTE PTR [rax-0x1],cl
   140010504:	xchg   edx,eax
   140010505:	mov    DWORD PTR [rdx-0x1],ecx
   140010508:	nop
   140010509:	mov    cs,WORD PTR [rdi+rdi*8-0x7]
   14001050d:	stc    
   14001050e:	stc    
   14001050f:	push   rdi
   140010511:	clc    
   140010512:	clc    
   140010513:	push   rsi
   140010515:	div    edi
   140010517:	push   rsi
   140010519:	div    edi
   14001051b:	push   rsi
   14001051d:	div    edi
   14001051f:	push   rdi
   140010521:	div    edi
   140010523:	jmp    QWORD PTR [rax-0x5f00c396]
   140010529:	push   0x3c
   14001052b:	push   rbp
   14001052d:	cmc    
   14001052e:	cmc    
   14001052f:	push   rbp
   140010531:	cmc    
   140010532:	cmc    
   140010533:	call   QWORD PTR [rdi+0xff8f92]
   140010539:	add    BYTE PTR [rax],al
   14001053b:	add    BYTE PTR es:[rax],al
   14001053e:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f9097db
   140010544:	(bad)  
   140010545:	(bad)  
   140010546:	(bad)  
   140010547:	(bad)  
   140010548:	(bad)  
   140010549:	(bad)  
   14001054a:	(bad)  
   14001054b:	jmp    QWORD PTR [rax-0x6000c396]
   140010551:	ins    DWORD PTR es:[rdi],dx
   140010552:	cmp    eax,0x3f709dff
   140010557:	call   FWORD PTR [rsp+rsi*2+0x799aff40]
   14001055e:	rex.X call FWORD PTR [rax-0x6a00ba82]
   140010565:	add    DWORD PTR [rdi-0x1],0xffffff93
   140010569:	mov    BYTE PTR [rcx-0x1],cl
   14001056c:	cld    
   14001056d:	cld    
   14001056e:	cld    
   14001056f:	jmp    rax
   140010571:	loopne 0x140010553
   140010573:	dec    ebx
   140010575:	retf   
   140010576:	retf   
   140010577:	dec    ebx
   140010579:	retf   
   14001057a:	retf   
   14001057b:	dec    ebx
   14001057d:	retf   
   14001057e:	retf   
   14001057f:	(bad)  
   140010580:	clc    
   140010581:	clc    
   140010582:	clc    
   140010583:	jmp    QWORD PTR [rax-0x5f00c396]
   140010589:	push   0x3c
   14001058b:	push   rsi
   14001058d:	div    dh
   14001058f:	push   rbp
   140010591:	cmc    
   140010592:	cmc    
   140010593:	call   QWORD PTR [rdi+0xff8f92]
   140010599:	add    BYTE PTR [rax],al
   14001059b:	add    BYTE PTR es:[rax],al
   14001059e:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90983b
   1400105a4:	(bad)  
   1400105a5:	(bad)  
   1400105a6:	(bad)  
   1400105a7:	(bad)  
   1400105a8:	(bad)  
   1400105a9:	(bad)  
   1400105aa:	(bad)  
   1400105ab:	(bad)  
   1400105ac:	(bad)  
   1400105ad:	(bad)  
   1400105ae:	(bad)  
   1400105af:	(bad)  
   1400105b0:	(bad)  
   1400105b1:	(bad)  
   1400105b2:	(bad)  
   1400105b3:	(bad)  
   1400105b4:	(bad)  
   1400105b5:	(bad)  
   1400105b6:	(bad)  
   1400105b7:	(bad)  
   1400105b8:	(bad)  
   1400105b9:	(bad)  
   1400105ba:	(bad)  
   1400105bb:	(bad)  
   1400105bc:	(bad)  
   1400105bd:	(bad)  
   1400105be:	(bad)  
   1400105bf:	(bad)  
   1400105c0:	(bad)  
   1400105c1:	(bad)  
   1400105c2:	(bad)  
   1400105c3:	(bad)  
   1400105c4:	std    
   1400105c5:	std    
   1400105c6:	std    
   1400105c7:	(bad)  
   1400105c8:	std    
   1400105c9:	std    
   1400105ca:	std    
   1400105cb:	(bad)  
   1400105cc:	(bad)  
   1400105cd:	(bad)  
   1400105ce:	(bad)  
   1400105cf:	(bad)  
   1400105d0:	sti    
   1400105d1:	sti    
   1400105d2:	sti    
   1400105d3:	(bad)  
   1400105d4:	cli    
   1400105d5:	cli    
   1400105d6:	cli    
   1400105d7:	(bad)  
   1400105d8:	cli    
   1400105d9:	cli    
   1400105da:	cli    
   1400105db:	(bad)  
   1400105dc:	stc    
   1400105dd:	stc    
   1400105de:	stc    
   1400105df:	(bad)  
   1400105e0:	stc    
   1400105e1:	stc    
   1400105e2:	stc    
   1400105e3:	(bad)  
   1400105e4:	clc    
   1400105e5:	clc    
   1400105e6:	clc    
   1400105e7:	push   rdi
   1400105e9:	div    edi
   1400105eb:	push   rdi
   1400105ed:	div    edi
   1400105ef:	push   rsi
   1400105f1:	div    dh
   1400105f3:	call   QWORD PTR [rdi+0xff8f92]
   1400105f9:	add    BYTE PTR [rax],al
   1400105fb:	add    BYTE PTR es:[rax],al
   1400105fe:	add    BYTE PTR [rip+0xffffffffff8f9297],cl        # 0x13f90989b
   140010604:	int    0xcc
   140010606:	retf   0xcdff
   140010609:	int3   
   14001060a:	retf   0xcdff
   14001060d:	int3   
   14001060e:	retf   0xcdff
   140010611:	int3   
   140010612:	retf   0xcdff
   140010615:	int3   
   140010616:	retf   0xcdff
   140010619:	int3   
   14001061a:	retf   0xcdff
   14001061d:	int3   
   14001061e:	retf   0xcdff
   140010621:	int3   
   140010622:	retf   0xcdff
   140010625:	int3   
   140010626:	retf   0xcdff
   140010629:	int3   
   14001062a:	retf   0xcdff
   14001062d:	int3   
   14001062e:	retf   0xcdff
   140010631:	int3   
   140010632:	retf   0xcdff
   140010635:	int3   
   140010636:	retf   0xcdff
   140010639:	int3   
   14001063a:	retf   0xcdff
   14001063d:	int3   
   14001063e:	retf   0xcdff
   140010641:	int3   
   140010642:	retf   0xcdff
   140010645:	int3   
   140010646:	retf   0xcdff
   140010649:	int3   
   14001064a:	retf   0xcdff
   14001064d:	int3   
   14001064e:	retf   0xcdff
   140010651:	int3   
   140010652:	retf   0x97ff
   140010655:	xchg   edx,eax
   140010656:	(bad)  
   140010657:	inc    DWORD PTR [rax]
   140010659:	add    BYTE PTR [rax],al
   14001065b:	and    eax,DWORD PTR [rax]
   14001065d:	add    BYTE PTR [rax],al
   14001065f:	or     ecx,DWORD PTR [rax-0x1f007e7c]
   140010665:	(bad)  
   140010667:	jmp    rax
   140010669:	(bad)  
   14001066b:	jmp    rax
   14001066d:	(bad)  
   14001066f:	jmp    rax
   140010671:	(bad)  
   140010673:	jmp    rax
   140010675:	(bad)  
   140010677:	jmp    rax
   140010679:	(bad)  
   14001067b:	jmp    rax
   14001067d:	(bad)  
   14001067f:	jmp    rax
   140010681:	(bad)  
   140010683:	jmp    rax
   140010685:	(bad)  
   140010687:	jmp    rax
   140010689:	(bad)  
   14001068b:	jmp    rax
   14001068d:	(bad)  
   14001068f:	jmp    rax
   140010691:	(bad)  
   140010693:	jmp    rax
   140010695:	(bad)  
   140010697:	jmp    rax
   140010699:	(bad)  
   14001069b:	call   QWORD PTR [rcx-0x1f009787]
   1400106a1:	(bad)  
   1400106a3:	call   QWORD PTR [rcx-0x1f009787]
   1400106a9:	(bad)  
   1400106ab:	call   QWORD PTR [rcx-0x2e009787]
   1400106b1:	retf   
   1400106b2:	(bad)  
   1400106b3:	call   QWORD PTR [rdi+0xff8f92]
   1400106b9:	add    BYTE PTR [rax],al
   1400106bb:	(bad)  
   1400106bc:	add    BYTE PTR [rax],al
   1400106be:	add    BYTE PTR [rdi],al
   1400106c0:	xchg   esi,eax
   1400106c1:	xchg   ecx,eax
   1400106c2:	mov    cs,WORD PTR [rbx-0x706d69]
   1400106c8:	xchg   edi,eax
   1400106c9:	xchg   edx,eax
   1400106ca:	(bad)  
   1400106cb:	call   QWORD PTR [rdi-0x6800706e]
   1400106d1:	xchg   edx,eax
   1400106d2:	(bad)  
   1400106d3:	call   QWORD PTR [rdi-0x6800706e]
   1400106d9:	xchg   edx,eax
   1400106da:	(bad)  
   1400106db:	call   QWORD PTR [rdi-0x6800706e]
   1400106e1:	xchg   edx,eax
   1400106e2:	(bad)  
   1400106e3:	call   QWORD PTR [rdi-0x6800706e]
   1400106e9:	xchg   edx,eax
   1400106ea:	(bad)  
   1400106eb:	call   QWORD PTR [rdi-0x6800706e]
   1400106f1:	xchg   edx,eax
   1400106f2:	(bad)  
   1400106f3:	call   QWORD PTR [rdi-0x6800706e]
   1400106f9:	xchg   edx,eax
   1400106fa:	(bad)  
   1400106fb:	call   QWORD PTR [rdi-0x6800706e]
   140010701:	xchg   edx,eax
   140010702:	(bad)  
   140010703:	call   QWORD PTR [rdi-0x6800706e]
   140010709:	xchg   edx,eax
   14001070a:	(bad)  
   14001070b:	call   QWORD PTR [rdi-0x6800706e]
   140010711:	xchg   edx,eax
   140010712:	(bad)  
   140010713:	call   QWORD PTR [rdx+0x8f8a8d]
   140010719:	add    BYTE PTR [rax],al
   14001071b:	(bad)  
   14001071c:	add    BYTE PTR [rax],al
   14001071e:	add    BYTE PTR [rdx],al
	...
   1400107e0:	(bad)  
   1400107e1:	(bad)  
   1400107e2:	inc    DWORD PTR [rax]
	...
   140010838:	(bad)  
   140010839:	(bad)  
   14001083a:	inc    DWORD PTR [rax]
   14001083c:	(bad)  
   14001083d:	(bad)  
   14001083e:	inc    DWORD PTR [rax]
   140010840:	sub    BYTE PTR [rax],al
   140010842:	add    BYTE PTR [rax],al
   140010844:	adc    BYTE PTR [rax],al
   140010846:	add    BYTE PTR [rax],al
   140010848:	and    BYTE PTR [rax],al
   14001084a:	add    BYTE PTR [rax],al
   14001084c:	add    DWORD PTR [rax],eax
   14001084e:	and    BYTE PTR [rax],al
   140010850:	add    BYTE PTR [rax],al
   140010852:	add    BYTE PTR [rax],al
   140010854:	add    al,0x0
	...
   1400108e7:	add    BYTE PTR [rdi-0x6800706e],dl
   1400108ed:	xchg   edx,eax
   1400108ee:	(bad)  
   1400108ef:	call   QWORD PTR [rdi-0x6800706e]
   1400108f5:	xchg   edx,eax
   1400108f6:	(bad)  
   1400108f7:	call   QWORD PTR [rdi-0x6800706e]
   1400108fd:	xchg   edx,eax
   1400108fe:	(bad)  
   1400108ff:	call   QWORD PTR [rdi-0x6800706e]
   140010905:	xchg   edx,eax
   140010906:	(bad)  
   140010907:	call   QWORD PTR [rdi-0x6800706e]
   14001090d:	xchg   edx,eax
   14001090e:	(bad)  
   14001090f:	call   QWORD PTR [rdi-0x6800706e]
   140010915:	xchg   edx,eax
   140010916:	(bad)  
   140010917:	call   QWORD PTR [rdi-0x6800706e]
   14001091d:	xchg   edx,eax
   14001091e:	(bad)  
   14001091f:	call   QWORD PTR [rdi-0x6800706e]
   140010925:	xchg   edx,eax
   140010926:	(bad)  
   140010927:	call   QWORD PTR [rdi-0x706e]
   14001092d:	(bad)  
   14001092e:	(bad)  
   14001092f:	(bad)  
   140010930:	(bad)  
   140010931:	(bad)  
   140010932:	(bad)  
   140010933:	(bad)  
   140010934:	(bad)  
   140010935:	(bad)  
   140010936:	(bad)  
   140010937:	(bad)  
   140010938:	cld    
   140010939:	cld    
   14001093a:	cld    
   14001093b:	(bad)  
   14001093c:	cli    
   14001093d:	cli    
   14001093e:	cli    
   14001093f:	(bad)  
   140010940:	clc    
   140010941:	clc    
   140010942:	clc    
   140010943:	push   rbp
   140010945:	cmc    
   140010946:	cmc    
   140010947:	push   rbx
   140010949:	repz repz push rcx
   14001094d:	icebp  
   14001094e:	icebp  
   14001094f:	(bad)  
   140010950:	out    dx,al
   140010951:	out    dx,al
   140010952:	out    dx,al
   140010953:	(bad)  
   140010954:	in     al,dx
   140010955:	in     al,dx
   140010956:	in     al,dx
   140010957:	(bad)  
   140010958:	jmp    0x12900f346
   14001095d:	call   0x126e8094a
   140010962:	out    0xff,al
   140010964:	xchg   edi,eax
   140010965:	xchg   edx,eax
   140010966:	(bad)  
   140010967:	call   QWORD PTR [rdi-0x706e]
   14001096d:	(bad)  
   14001096e:	(bad)  
   14001096f:	(bad)  
   140010970:	(bad)  
   140010971:	(bad)  
   140010972:	(bad)  
   140010973:	(bad)  
   140010974:	(bad)  
   140010975:	(bad)  
   140010976:	(bad)  
   140010977:	(bad)  
   140010978:	cld    
   140010979:	cld    
   14001097a:	cld    
   14001097b:	(bad)  
   14001097c:	cli    
   14001097d:	cli    
   14001097e:	cli    
   14001097f:	(bad)  
   140010980:	clc    
   140010981:	clc    
   140010982:	clc    
   140010983:	push   rbp
   140010985:	cmc    
   140010986:	cmc    
   140010987:	push   rbp
   140010989:	cmc    
   14001098a:	cmc    
   14001098b:	push   rbx
   14001098d:	repz repz push rax
   140010991:	lock lock (bad) 
   140010994:	out    dx,al
   140010995:	out    dx,al
   140010996:	out    dx,al
   140010997:	(bad)  
   140010998:	jmp    0x140010985
   14001099a:	jmp    0x14001099b
   14001099c:	jmp    0x12800f38a
   1400109a1:	out    0xe7,eax
   1400109a3:	call   QWORD PTR [rdi-0x6800706e]
   1400109a9:	xchg   edx,eax
   1400109aa:	(bad)  
   1400109ab:	(bad)  
   1400109ac:	(bad)  
   1400109ad:	(bad)  
   1400109ae:	(bad)  
   1400109af:	inc    DWORD PTR [rdi-0x7d00aa63]
   1400109b5:	movabs ds:0xad77ff5da87dff59,al
   1400109be:	(bad)  
   1400109bf:	push   QWORD PTR [rbx-0x4f]
   1400109c2:	gs push rdi
   1400109c5:	div    edi
   1400109c7:	dec    ebp
   1400109c9:	int3   
   1400109ca:	retf   0xcdff
   1400109cd:	int3   
   1400109ce:	retf   0xcdff
   1400109d1:	int3   
   1400109d2:	retf   0xcdff
   1400109d5:	int3   
   1400109d6:	retf   0xedff
   1400109d9:	in     eax,dx
   1400109da:	in     eax,dx
   1400109db:	(bad)  
   1400109dc:	jmp    0x1400109c9
   1400109de:	jmp    0x1400109df
   1400109e0:	call   0xd800f2cd
   1400109e5:	xchg   edx,eax
   1400109e6:	(bad)  
   1400109e7:	call   QWORD PTR [rdi-0x706e]
   1400109ed:	(bad)  
   1400109ee:	(bad)  
   1400109ef:	dec    DWORD PTR [rbp-0x7600b06c]
   1400109f5:	(bad)  
   1400109f6:	push   rbx
   1400109f7:	inc    DWORD PTR [rax+riz*4-0x5a8000a9]
   1400109fe:	pop    rbx
   1400109ff:	(bad)  
   140010a00:	jp     0x1400109ac
   140010a02:	pop    rdi
   140010a03:	(bad)  
   140010a04:	stc    
   140010a05:	stc    
   140010a06:	stc    
   140010a07:	push   rsi
   140010a09:	div    dh
   140010a0b:	push   rsp
   140010a0d:	hlt    
   140010a0e:	hlt    
   140010a0f:	push   rsp
   140010a11:	hlt    
   140010a12:	hlt    
   140010a13:	push   rcx
   140010a15:	icebp  
   140010a16:	icebp  
   140010a17:	(bad)  
   140010a18:	out    dx,eax
   140010a19:	out    dx,eax
   140010a1a:	out    dx,eax
   140010a1b:	(bad)  
   140010a1c:	in     al,dx
   140010a1d:	in     al,dx
   140010a1e:	in     al,dx
   140010a1f:	(bad)  
   140010a20:	(bad)  
   140010a21:	(bad)  
   140010a22:	(bad)  
   140010a23:	call   QWORD PTR [rdi-0x6800706e]
   140010a29:	xchg   edx,eax
   140010a2a:	(bad)  
   140010a2b:	(bad)  
   140010a2c:	(bad)  
   140010a2d:	(bad)  
   140010a2e:	(bad)  
   140010a2f:	call   QWORD PTR [rbx-0x7000b577]
   140010a35:	nop
   140010a36:	rex.WRB dec QWORD PTR [r11-0x7800ae69]
   140010a3d:	popf   
   140010a3e:	push   rbp
   140010a3f:	inc    DWORD PTR [rdx-0x400a65e]
   140010a45:	sti    
   140010a46:	sti    
   140010a47:	dec    ebp
   140010a49:	int3   
   140010a4a:	retf   0xcdff
   140010a4d:	int3   
   140010a4e:	retf   0xcdff
   140010a51:	int3   
   140010a52:	retf   0xcdff
   140010a55:	int3   
   140010a56:	retf   0xf1ff
   140010a59:	icebp  
   140010a5a:	icebp  
   140010a5b:	(bad)  
   140010a5c:	jnp    0x140010a07
   140010a5e:	pop    rsi
   140010a5f:	(bad)  
   140010a60:	in     al,dx
   140010a61:	in     al,dx
   140010a62:	in     al,dx
   140010a63:	call   QWORD PTR [rdi-0x6800706e]
   140010a69:	xchg   edx,eax
   140010a6a:	(bad)  
   140010a6b:	(bad)  
   140010a6c:	(bad)  
   140010a6d:	(bad)  
   140010a6e:	(bad)  
   140010a6f:	call   FWORD PTR [rax-0x6a00bb84]
   140010a75:	test   BYTE PTR [rax-0x1],cl
   140010a78:	xchg   ecx,eax
   140010a79:	mov    WORD PTR [rbx-0x1],cs
   140010a7c:	lea    edx,[rdi+rcx*2+0x539a89ff]
   140010a83:	(bad)  
   140010a84:	cld    
   140010a85:	cld    
   140010a86:	cld    
   140010a87:	(bad)  
   140010a88:	cli    
   140010a89:	cli    
   140010a8a:	cli    
   140010a8b:	(bad)  
   140010a8c:	clc    
   140010a8d:	clc    
   140010a8e:	clc    
   140010a8f:	(bad)  
   140010a90:	clc    
   140010a91:	clc    
   140010a92:	clc    
   140010a93:	push   rbp
   140010a95:	cmc    
   140010a96:	cmc    
   140010a97:	push   rbx
   140010a99:	repz repz dec DWORD PTR [rbx-0x1100ae69]
   140010aa1:	out    dx,al
   140010aa2:	out    dx,al
   140010aa3:	call   QWORD PTR [rdi-0x6800706e]
   140010aa9:	xchg   edx,eax
   140010aaa:	(bad)  
   140010aab:	(bad)  
   140010aac:	(bad)  
   140010aad:	(bad)  
   140010aae:	(bad)  
   140010aaf:	call   FWORD PTR [rbp-0x6500c08e]
   140010ab5:	jns    0x140010af9
   140010ab7:	call   QWORD PTR [rsi-0x6c00b980]
   140010abd:	mov    DWORD PTR [rdx-0x1],ecx
   140010ac0:	(bad)  
   140010ac1:	nop
   140010ac2:	rex.WRB (bad) 
   140010ac4:	std    
   140010ac5:	std    
   140010ac6:	std    
   140010ac7:	dec    ebp
   140010ac9:	int3   
   140010aca:	retf   0xcdff
   140010acd:	int3   
   140010ace:	retf   0xcdff
   140010ad1:	int3   
   140010ad2:	retf   0xcdff
   140010ad5:	int3   
   140010ad6:	retf   0xf5ff
   140010ad9:	cmc    
   140010ada:	cmc    
   140010adb:	call   QWORD PTR [rdi-0x1000ba82]
   140010ae1:	out    dx,eax
   140010ae2:	out    dx,eax
   140010ae3:	call   QWORD PTR [rdi-0x6800706e]
   140010ae9:	xchg   edx,eax
   140010aea:	(bad)  
   140010aeb:	(bad)  
   140010aec:	(bad)  
   140010aed:	(bad)  
   140010aee:	(bad)  
   140010aef:	jmp    QWORD PTR [rax-0x6100c396]
   140010af5:	outs   dx,DWORD PTR ds:[rsi]
   140010af6:	call   FWORD PTR ds:[rbx-0x6700be8b]
   140010afd:	jl     0x140010b43
   140010aff:	call   QWORD PTR [rbp-0x100b77c]
   140010b05:	(bad)  
   140010b06:	(bad)  
   140010b07:	(bad)  
   140010b08:	(bad)  
   140010b09:	(bad)  
   140010b0a:	(bad)  
   140010b0b:	(bad)  
   140010b0c:	std    
   140010b0d:	std    
   140010b0e:	std    
   140010b0f:	(bad)  
   140010b10:	sti    
   140010b11:	sti    
   140010b12:	sti    
   140010b13:	(bad)  
   140010b14:	stc    
   140010b15:	stc    
   140010b16:	stc    
   140010b17:	push   rsi
   140010b19:	div    dh
   140010b1b:	jmp    QWORD PTR [rax-0xe00c396]
   140010b21:	icebp  
   140010b22:	icebp  
   140010b23:	call   QWORD PTR [rdi-0x6800706e]
   140010b29:	xchg   edx,eax
   140010b2a:	(bad)  
   140010b2b:	(bad)  
   140010b2c:	(bad)  
   140010b2d:	(bad)  
   140010b2e:	(bad)  
   140010b2f:	(bad)  
   140010b30:	(bad)  
   140010b31:	(bad)  
   140010b32:	(bad)  
   140010b33:	(bad)  
   140010b34:	(bad)  
   140010b35:	(bad)  
   140010b36:	(bad)  
   140010b37:	(bad)  
   140010b38:	(bad)  
   140010b39:	(bad)  
   140010b3a:	(bad)  
   140010b3b:	(bad)  
   140010b3c:	(bad)  
   140010b3d:	(bad)  
   140010b3e:	(bad)  
   140010b3f:	(bad)  
   140010b40:	(bad)  
   140010b41:	(bad)  
   140010b42:	(bad)  
   140010b43:	(bad)  
   140010b44:	(bad)  
   140010b45:	(bad)  
   140010b46:	(bad)  
   140010b47:	(bad)  
   140010b48:	(bad)  
   140010b49:	(bad)  
   140010b4a:	(bad)  
   140010b4b:	(bad)  
   140010b4c:	std    
   140010b4d:	std    
   140010b4e:	std    
   140010b4f:	(bad)  
   140010b50:	sti    
   140010b51:	sti    
   140010b52:	sti    
   140010b53:	(bad)  
   140010b54:	stc    
   140010b55:	stc    
   140010b56:	stc    
   140010b57:	push   rsi
   140010b59:	div    dh
   140010b5b:	push   rsp
   140010b5d:	hlt    
   140010b5e:	hlt    
   140010b5f:	push   rcx
   140010b61:	icebp  
   140010b62:	icebp  
   140010b63:	call   QWORD PTR [rdi-0x6800706e]
   140010b69:	xchg   edx,eax
   140010b6a:	(bad)  
   140010b6b:	dec    ebp
   140010b6d:	int3   
   140010b6e:	retf   0xcdff
   140010b71:	int3   
   140010b72:	retf   0xcdff
   140010b75:	int3   
   140010b76:	retf   0xcdff
   140010b79:	int3   
   140010b7a:	retf   0xcdff
   140010b7d:	int3   
   140010b7e:	retf   0xcdff
   140010b81:	int3   
   140010b82:	retf   0xcdff
   140010b85:	int3   
   140010b86:	retf   0xcdff
   140010b89:	int3   
   140010b8a:	retf   0xcdff
   140010b8d:	int3   
   140010b8e:	retf   0xcdff
   140010b91:	int3   
   140010b92:	retf   0xcdff
   140010b95:	int3   
   140010b96:	retf   0xcdff
   140010b99:	int3   
   140010b9a:	retf   0xcdff
   140010b9d:	int3   
   140010b9e:	retf   0xcdff
   140010ba1:	int3   
   140010ba2:	retf   0x97ff
   140010ba5:	xchg   edx,eax
   140010ba6:	(bad)  
   140010ba7:	call   QWORD PTR [rdi-0x1f00706e]
   140010bad:	(bad)  
   140010baf:	jmp    rax
   140010bb1:	(bad)  
   140010bb3:	jmp    rax
   140010bb5:	(bad)  
   140010bb7:	jmp    rax
   140010bb9:	(bad)  
   140010bbb:	jmp    rax
   140010bbd:	(bad)  
   140010bbf:	jmp    rax
   140010bc1:	(bad)  
   140010bc3:	jmp    rax
   140010bc5:	(bad)  
   140010bc7:	jmp    rax
   140010bc9:	(bad)  
   140010bcb:	jmp    rax
   140010bcd:	(bad)  
   140010bcf:	call   QWORD PTR [rcx-0x1f009787]
   140010bd5:	(bad)  
   140010bd7:	call   QWORD PTR [rcx-0x1f009787]
   140010bdd:	(bad)  
   140010bdf:	call   QWORD PTR [rcx-0x68009787]
   140010be5:	xchg   edx,eax
   140010be6:	(bad)  
   140010be7:	call   QWORD PTR [rdi-0x6800706e]
   140010bed:	xchg   edx,eax
   140010bee:	(bad)  
   140010bef:	call   QWORD PTR [rdi-0x6800706e]
   140010bf5:	xchg   edx,eax
   140010bf6:	(bad)  
   140010bf7:	call   QWORD PTR [rdi-0x6800706e]
   140010bfd:	xchg   edx,eax
   140010bfe:	(bad)  
   140010bff:	call   QWORD PTR [rdi-0x6800706e]
   140010c05:	xchg   edx,eax
   140010c06:	(bad)  
   140010c07:	call   QWORD PTR [rdi-0x6800706e]
   140010c0d:	xchg   edx,eax
   140010c0e:	(bad)  
   140010c0f:	call   QWORD PTR [rdi-0x6800706e]
   140010c15:	xchg   edx,eax
   140010c16:	(bad)  
   140010c17:	call   QWORD PTR [rdi-0x6800706e]
   140010c1d:	xchg   edx,eax
   140010c1e:	(bad)  
   140010c1f:	call   QWORD PTR [rdi-0x6800706e]
   140010c25:	xchg   edx,eax
   140010c26:	(bad)  
   140010c27:	inc    DWORD PTR [rax]
	...
   140010c65:	add    BYTE PTR [rax],al
   140010c67:	add    bh,bh
   140010c69:	inc    DWORD PTR [rax]
   140010c6b:	add    bh,bh
   140010c6d:	inc    DWORD PTR [rax]
	...
   140010ca3:	add    bh,bh
   140010ca5:	inc    DWORD PTR [rax]
   140010ca7:	add    BYTE PTR [rax],al
   140010ca9:	add    BYTE PTR [rcx],al
   140010cab:	add    BYTE PTR [rip+0x10303000],cl        # 0x150313cb1
   140010cb1:	add    BYTE PTR [rcx],al
   140010cb3:	add    BYTE PTR [rax+rax*1],al
   140010cb6:	push   0x1000006
   140010cbb:	add    BYTE PTR [rax],ah
   140010cbd:	and    BYTE PTR [rax],dl
   140010cbf:	add    BYTE PTR [rcx],al
   140010cc1:	add    BYTE PTR [rax+rax*1],al
   140010cc4:	call   0x142010ccb
   140010cc9:	add    BYTE PTR [rax],bl
   140010ccb:	sbb    BYTE PTR [rax],dl
   140010ccd:	add    BYTE PTR [rcx],al
   140010ccf:	add    BYTE PTR [rax+rax*1],al
   140010cd2:	call   0x143010cd8
   140010cd7:	add    BYTE PTR [rax],dl
   140010cd9:	adc    BYTE PTR [rax],dl
   140010cdb:	add    BYTE PTR [rcx],al
   140010cdd:	add    BYTE PTR [rax+rax*1],al
   140010ce0:	sub    BYTE PTR [rcx],al
   140010ce2:	add    BYTE PTR [rax],al
   140010ce4:	add    al,0x0
   140010ce6:	xor    BYTE PTR [rax],dh
   140010ce8:	add    BYTE PTR [rax],al
   140010cea:	add    DWORD PTR [rax],eax
   140010cec:	or     BYTE PTR [rax],al
   140010cee:	test   al,0xe
   140010cf0:	add    BYTE PTR [rax],al
   140010cf2:	add    eax,0x202000
   140010cf7:	add    BYTE PTR [rcx],al
   140010cf9:	add    BYTE PTR [rax],cl
   140010cfb:	add    BYTE PTR [rax+0x6000008],ch
   140010d01:	add    BYTE PTR [rax],bl
   140010d03:	sbb    BYTE PTR [rax],al
   140010d05:	add    BYTE PTR [rcx],al
   140010d07:	add    BYTE PTR [rax],cl
   140010d09:	add    al,cl
   140010d0b:	(bad)  
   140010d0c:	add    BYTE PTR [rax],al
   140010d0e:	(bad)  
   140010d0f:	add    BYTE PTR [rax],dl
   140010d11:	adc    BYTE PTR [rax],al
   140010d13:	add    BYTE PTR [rcx],al
   140010d15:	add    BYTE PTR [rax],cl
   140010d17:	add    BYTE PTR [rax+0x5],ch
   140010d1a:	add    BYTE PTR [rax],al
   140010d1c:	or     BYTE PTR [rax],al
   140010d1e:	add    BYTE PTR [rax],al
   140010d20:	add    BYTE PTR [rax],al
   140010d22:	add    DWORD PTR [rax],eax
   140010d24:	and    BYTE PTR [rax],al
   140010d26:	add    BYTE PTR cs:[rax],al
   140010d2a:	or     DWORD PTR [rax],eax
   140010d2c:	xor    BYTE PTR [rax],dh
   140010d2e:	add    BYTE PTR [rax],al
   140010d30:	add    DWORD PTR [rax],eax
   140010d32:	and    BYTE PTR [rax],al
   140010d34:	test   al,0x25
   140010d36:	add    BYTE PTR [rax],al
   140010d38:	or     al,BYTE PTR [rax]
   140010d3a:	and    BYTE PTR [rax],ah
   140010d3c:	add    BYTE PTR [rax],al
   140010d3e:	add    DWORD PTR [rax],eax
   140010d40:	and    BYTE PTR [rax],al
   140010d42:	test   al,0x10
   140010d44:	add    BYTE PTR [rax],al
   140010d46:	or     eax,DWORD PTR [rax]
   140010d48:	sbb    BYTE PTR [rax],bl
   140010d4a:	add    BYTE PTR [rax],al
   140010d4c:	add    DWORD PTR [rax],eax
   140010d4e:	and    BYTE PTR [rax],al
   140010d50:	mov    BYTE PTR [rcx],cl
   140010d52:	add    BYTE PTR [rax],al
   140010d54:	or     al,0x0
   140010d56:	adc    BYTE PTR [rax],dl
   140010d58:	add    BYTE PTR [rax],al
   140010d5a:	add    DWORD PTR [rax],eax
   140010d5c:	and    BYTE PTR [rax],al
   140010d5e:	push   0xd000004
   140010d63:	add    BYTE PTR [rax],al
   140010d65:	add    BYTE PTR [rax],al
   140010d67:	add    BYTE PTR [rbx+rax*1+0x34],cl
   140010d6e:	push   rsi
   140010d6f:	add    BYTE PTR [rbx+0x0],dl
   140010d72:	pop    rdi
   140010d73:	add    BYTE PTR [rsi+0x0],dl
   140010d76:	add    BYTE PTR [r10+0x0],r10b
   140010d7a:	push   rbx
   140010d7b:	add    BYTE PTR [rcx+0x0],cl
   140010d7e:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   140010d82:	pop    rdi
   140010d83:	add    BYTE PTR [rcx+0x0],cl
   140010d86:	rex.WRX add BYTE PTR [rsi+0x0],r8b
   140010d8a:	rex.WRXB add BYTE PTR [r8],r8b
   140010d8d:	add    BYTE PTR [rax],al
   140010d8f:	add    BYTE PTR [rbp+0xfeef04],bh
   140010d95:	add    BYTE PTR [rcx],al
   140010d97:	add    BYTE PTR [rax],al
   140010d99:	add    BYTE PTR [rdx],cl
   140010d9b:	add    BYTE PTR [rax],al
   140010d9d:	add    BYTE PTR [rax],bpl
   140010da0:	add    BYTE PTR [rax],al
   140010da2:	or     al,BYTE PTR [rax]
   140010da4:	add    BYTE PTR [rax+0x0],al
   140010da7:	sub    BYTE PTR [rdi],bh
   140010da9:	add    BYTE PTR [rax],al
   140010dab:	add    BYTE PTR [rax],al
   140010dad:	add    BYTE PTR [rax],al
   140010daf:	add    BYTE PTR [rax+rax*1],al
   140010db2:	add    al,0x0
   140010db4:	add    DWORD PTR [rax],eax
	...
   140010dc2:	add    BYTE PTR [rax],al
   140010dc4:	(bad)  
   140010dc5:	add    al,BYTE PTR [rax]
   140010dc7:	add    BYTE PTR [rcx],al
   140010dc9:	add    BYTE PTR [rbx+0x0],dl
   140010dcc:	je     0x140010dce
   140010dce:	jb     0x140010dd0
   140010dd0:	imul   eax,DWORD PTR [rax],0x67006e
   140010dd6:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140010dda:	ins    BYTE PTR es:[rdi],dx
   140010ddb:	add    BYTE PTR [rbp+0x0],ah
   140010dde:	rex.WB add BYTE PTR [r14+0x0],bpl
   140010de2:	data16 add BYTE PTR [rdi+0x0],ch
   140010de6:	add    BYTE PTR [rax],al
   140010de8:	mov    BYTE PTR [rdx],0x0
   140010deb:	add    BYTE PTR [rcx],al
   140010ded:	add    BYTE PTR [rax],dh
   140010def:	add    BYTE PTR [rax+rax*1],dh
   140010df2:	xor    BYTE PTR [rax],al
   140010df4:	cmp    DWORD PTR [rax],eax
   140010df6:	xor    BYTE PTR [rax],al
   140010df8:	xor    al,0x0
   140010dfa:	rex.X add BYTE PTR [rax],sil
   140010dfd:	add    BYTE PTR [rax],al
   140010dff:	add    BYTE PTR [rax+rax*1+0x16],cl
   140010e03:	add    BYTE PTR [rcx],al
   140010e05:	add    BYTE PTR [rbx+0x0],al
   140010e08:	outs   dx,DWORD PTR ds:[rsi]
   140010e09:	add    BYTE PTR [rbp+0x0],ch
   140010e0c:	jo     0x140010e0e
   140010e0e:	(bad)  
   140010e0f:	add    BYTE PTR [rsi+0x0],ch
   140010e12:	jns    0x140010e14
   140010e14:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140010e18:	ins    DWORD PTR es:[rdi],dx
   140010e19:	add    BYTE PTR [rbp+0x0],ah
   140010e1c:	add    BYTE PTR [rax],al
   140010e1e:	add    BYTE PTR [rax],al
   140010e20:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140010e24:	movsxd eax,DWORD PTR [rax]
   140010e26:	jb     0x140010e28
   140010e28:	outs   dx,DWORD PTR ds:[rsi]
   140010e29:	add    BYTE PTR [rbx+0x0],dh
   140010e2c:	outs   dx,DWORD PTR ds:[rsi]
   140010e2d:	add    BYTE PTR [rsi+0x0],ah
   140010e30:	je     0x140010e32
   140010e32:	and    BYTE PTR [rax],al
   140010e34:	rex.XB add BYTE PTR [r15+0x0],bpl
   140010e38:	jb     0x140010e3a
   140010e3a:	jo     0x140010e3c
   140010e3c:	outs   dx,DWORD PTR ds:[rsi]
   140010e3d:	add    BYTE PTR [rdx+0x0],dh
   140010e40:	(bad)  
   140010e41:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010e45:	add    BYTE PTR [rdi+0x0],ch
   140010e48:	outs   dx,BYTE PTR ds:[rsi]
   140010e49:	add    BYTE PTR [rax],al
   140010e4b:	add    BYTE PTR [rax+0x0],bl
   140010e4e:	sbb    BYTE PTR [rax],al
   140010e50:	add    DWORD PTR [rax],eax
   140010e52:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140010e56:	ins    BYTE PTR es:[rdi],dx
   140010e57:	add    BYTE PTR [rbp+0x0],ah
   140010e5a:	add    BYTE PTR [rbp+0x0],r12b
   140010e5e:	jae    0x140010e60
   140010e60:	movsxd eax,DWORD PTR [rax]
   140010e62:	jb     0x140010e64
   140010e64:	imul   eax,DWORD PTR [rax],0x740070
   140010e6a:	imul   eax,DWORD PTR [rax],0x6e006f
   140010e70:	add    BYTE PTR [rax],al
   140010e72:	add    BYTE PTR [rax],al
   140010e74:	push   rsi
   140010e75:	add    BYTE PTR [rbp+0x0],ah
   140010e78:	jb     0x140010e7a
   140010e7a:	jae    0x140010e7c
   140010e7c:	imul   eax,DWORD PTR [rax],0x6e006f
   140010e82:	and    BYTE PTR [rax],al
   140010e84:	push   rdx
   140010e85:	add    BYTE PTR [rbp+0x0],ah
   140010e88:	jo     0x140010e8a
   140010e8a:	outs   dx,DWORD PTR ds:[rsi]
   140010e8b:	add    BYTE PTR [rdx+0x0],dh
   140010e8e:	je     0x140010e90
   140010e90:	add    BYTE PTR gs:[rdx+0x0],dh
   140010e94:	and    BYTE PTR [rax],al
   140010e96:	add    BYTE PTR [r8+0x0],sil
   140010e9a:	jo     0x140010e9c
   140010e9c:	ins    BYTE PTR es:[rdi],dx
   140010e9d:	add    BYTE PTR [rbp+0x0],ah
   140010ea0:	je     0x140010ea2
   140010ea2:	add    BYTE PTR [rax],al
   140010ea4:	data16 add BYTE PTR [rbx],ah
   140010ea7:	add    BYTE PTR [rcx],al
   140010ea9:	add    BYTE PTR [rsi+0x0],al
   140010eac:	imul   eax,DWORD PTR [rax],0x65006c
   140010eb2:	push   rsi
   140010eb3:	add    BYTE PTR [rbp+0x0],ah
   140010eb6:	jb     0x140010eb8
   140010eb8:	jae    0x140010eba
   140010eba:	imul   eax,DWORD PTR [rax],0x6e006f
   140010ec0:	add    BYTE PTR [rax],al
   140010ec2:	add    BYTE PTR [rax],al
   140010ec4:	xor    DWORD PTR [rax],eax
   140010ec6:	xor    BYTE PTR [rax],al
   140010ec8:	add    BYTE PTR cs:[rax],dh
   140010ecb:	add    BYTE PTR [rsi],ch
   140010ecd:	add    BYTE PTR [rcx],dh
   140010ecf:	add    BYTE PTR [rax],dh
   140010ed1:	add    BYTE PTR [rdx],dh
   140010ed3:	add    BYTE PTR [rax+rax*1],dh
   140010ed6:	xor    BYTE PTR [rax],al
   140010ed8:	add    BYTE PTR cs:[rcx],dh
   140010edb:	add    BYTE PTR [rsi],dh
   140010edd:	add    BYTE PTR [rbx],dh
   140010edf:	add    BYTE PTR [rax],bh
   140010ee1:	add    BYTE PTR [rax+rax*1],dh
   140010ee4:	and    BYTE PTR [rax],al
   140010ee6:	sub    BYTE PTR [rax],al
   140010ee8:	je     0x140010eea
   140010eea:	push   0x2e003100
   140010eef:	add    BYTE PTR [rcx],dh
   140010ef1:	add    BYTE PTR [rip+0x37003000],dh        # 0x177013ef7
   140010ef7:	add    BYTE PTR [rax],dh
   140010ef9:	add    BYTE PTR [rcx],bh
   140010efb:	add    BYTE PTR [rip+0x37003100],ch        # 0x177014001
   140010f01:	add    BYTE PTR [rax],dh
   140010f03:	add    BYTE PTR [rax],dh
   140010f05:	add    BYTE PTR [rcx],ch
   140010f07:	add    BYTE PTR [rax],al
   140010f09:	add    BYTE PTR [rax],al
   140010f0b:	add    BYTE PTR [rsi],ch
   140010f0d:	add    BYTE PTR [rdi],al
   140010f0f:	add    BYTE PTR [rcx],al
   140010f11:	add    BYTE PTR [rcx+0x0],cl
   140010f14:	outs   dx,BYTE PTR ds:[rsi]
   140010f15:	add    BYTE PTR [rax+rax*1+0x65],dh
   140010f19:	add    BYTE PTR [rdx+0x0],dh
   140010f1c:	outs   dx,BYTE PTR ds:[rsi]
   140010f1d:	add    BYTE PTR [rcx+0x0],ah
   140010f20:	ins    BYTE PTR es:[rdi],dx
   140010f21:	add    BYTE PTR [rsi+0x0],cl
   140010f24:	(bad)  
   140010f25:	add    BYTE PTR [rbp+0x0],ch
   140010f28:	add    BYTE PTR gs:[rax],al
   140010f2b:	add    BYTE PTR [rdi+0x0],dh
   140010f2e:	imul   eax,DWORD PTR [rax],0x76006e
   140010f34:	add    BYTE PTR gs:[rdx+0x0],dh
   140010f38:	add    BYTE PTR [rax],al
   140010f3a:	add    BYTE PTR [rax],al
   140010f3c:	add    BYTE PTR [rax],0x2e
   140010f3f:	add    BYTE PTR [rcx],al
   140010f41:	add    BYTE PTR [rax+rax*1+0x65],cl
   140010f45:	add    BYTE PTR [rdi+0x0],ah
   140010f48:	(bad)  
   140010f49:	add    BYTE PTR [rax+rax*1+0x43],ch
   140010f4d:	add    BYTE PTR [rdi+0x0],ch
   140010f50:	jo     0x140010f52
   140010f52:	jns    0x140010f54
   140010f54:	jb     0x140010f56
   140010f56:	imul   eax,DWORD PTR [rax],0x680067
   140010f5c:	je     0x140010f5e
   140010f5e:	add    BYTE PTR [rax],al
   140010f60:	test   eax,0x4d002000
   140010f65:	add    BYTE PTR [rcx+0x0],ch
   140010f68:	movsxd eax,DWORD PTR [rax]
   140010f6a:	jb     0x140010f6c
   140010f6c:	outs   dx,DWORD PTR ds:[rsi]
   140010f6d:	add    BYTE PTR [rbx+0x0],dh
   140010f70:	outs   dx,DWORD PTR ds:[rsi]
   140010f71:	add    BYTE PTR [rsi+0x0],ah
   140010f74:	je     0x140010f76
   140010f76:	and    BYTE PTR [rax],al
   140010f78:	rex.XB add BYTE PTR [r15+0x0],bpl
   140010f7c:	jb     0x140010f7e
   140010f7e:	jo     0x140010f80
   140010f80:	outs   dx,DWORD PTR ds:[rsi]
   140010f81:	add    BYTE PTR [rdx+0x0],dh
   140010f84:	(bad)  
   140010f85:	add    BYTE PTR [rax+rax*1+0x69],dh
   140010f89:	add    BYTE PTR [rdi+0x0],ch
   140010f8c:	outs   dx,BYTE PTR ds:[rsi]
   140010f8d:	add    BYTE PTR [rsi],ch
   140010f8f:	add    BYTE PTR [rax],ah
   140010f91:	add    BYTE PTR [rcx+0x0],al
   140010f94:	ins    BYTE PTR es:[rdi],dx
   140010f95:	add    BYTE PTR [rax+rax*1+0x20],ch
   140010f99:	add    BYTE PTR [rdx+0x0],dh
   140010f9c:	imul   eax,DWORD PTR [rax],0x680067
   140010fa2:	je     0x140010fa4
   140010fa4:	jae    0x140010fa6
   140010fa6:	and    BYTE PTR [rax],al
   140010fa8:	jb     0x140010faa
   140010faa:	add    BYTE PTR gs:[rbx+0x0],dh
   140010fae:	add    BYTE PTR gs:[rdx+0x0],dh
   140010fb2:	jbe    0x140010fb4
   140010fb4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140010fb9:	add    BYTE PTR [rax],al
   140010fbb:	add    BYTE PTR [rsi],bh
   140010fbd:	add    BYTE PTR [rbx],cl
   140010fbf:	add    BYTE PTR [rcx],al
   140010fc1:	add    BYTE PTR [rdi+0x0],cl
   140010fc4:	jb     0x140010fc6
   140010fc6:	imul   eax,DWORD PTR [rax],0x690067
   140010fcc:	outs   dx,BYTE PTR ds:[rsi]
   140010fcd:	add    BYTE PTR [rcx+0x0],ah
   140010fd0:	ins    BYTE PTR es:[rdi],dx
   140010fd1:	add    BYTE PTR [rsi+0x0],al
   140010fd4:	imul   eax,DWORD PTR [rax],0x65006c
   140010fda:	outs   dx,BYTE PTR ds:[rsi]
   140010fdb:	add    BYTE PTR [rcx+0x0],ah
   140010fde:	ins    DWORD PTR es:[rdi],dx
   140010fdf:	add    BYTE PTR [rbp+0x0],ah
   140010fe2:	add    BYTE PTR [rax],al
   140010fe4:	push   rdi
   140010fe5:	add    BYTE PTR [rcx+0x0],cl
   140010fe8:	rex.WRX add BYTE PTR [rsi+0x0],r10b
   140010fec:	add    BYTE PTR [r10+0x0],r10b
   140010ff0:	add    BYTE PTR cs:[rbp+0x0],al
   140010ff4:	pop    rax
   140010ff5:	add    BYTE PTR [rbp+0x0],al
   140010ff8:	add    BYTE PTR [rax],al
   140010ffa:	add    BYTE PTR [rax],al
   140010ffc:	push   0x0
   140010ffe:	and    eax,0x50000100
   140011003:	add    BYTE PTR [rdx+0x0],dh
   140011006:	outs   dx,DWORD PTR ds:[rsi]
   140011007:	add    BYTE PTR [rax+rax*1+0x75],ah
   14001100b:	add    BYTE PTR [rbx+0x0],ah
   14001100e:	je     0x140011010
   140011010:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140011014:	ins    DWORD PTR es:[rdi],dx
   140011015:	add    BYTE PTR [rbp+0x0],ah
   140011018:	add    BYTE PTR [rax],al
   14001101a:	add    BYTE PTR [rax],al
   14001101c:	rex.WRB add BYTE PTR [r9+0x0],r13b
   140011020:	movsxd eax,DWORD PTR [rax]
   140011022:	jb     0x140011024
   140011024:	outs   dx,DWORD PTR ds:[rsi]
   140011025:	add    BYTE PTR [rbx+0x0],dh
   140011028:	outs   dx,DWORD PTR ds:[rsi]
   140011029:	add    BYTE PTR [rsi+0x0],ah
   14001102c:	je     0x14001102e
   14001102e:	scas   al,BYTE PTR es:[rdi]
   14001102f:	add    BYTE PTR [rax],ah
   140011031:	add    BYTE PTR [rdi+0x0],dl
   140011034:	imul   eax,DWORD PTR [rax],0x64006e
   14001103a:	outs   dx,DWORD PTR ds:[rsi]
   14001103b:	add    BYTE PTR [rdi+0x0],dh
   14001103e:	jae    0x140011040
   140011040:	scas   al,BYTE PTR es:[rdi]
   140011041:	add    BYTE PTR [rax],ah
   140011043:	add    BYTE PTR [rdi+0x0],cl
   140011046:	jo     0x140011048
   140011048:	add    BYTE PTR gs:[rdx+0x0],dh
   14001104c:	(bad)  
   14001104d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140011051:	add    BYTE PTR [rsi+0x0],ch
   140011054:	add    BYTE PTR [eax],ah
   140011057:	add    BYTE PTR [rbx+0x0],dl
   14001105a:	jns    0x14001105c
   14001105c:	jae    0x14001105e
   14001105e:	je     0x140011060
   140011060:	add    BYTE PTR gs:[rbp+0x0],ch
   140011064:	add    BYTE PTR [rax],al
   140011066:	add    BYTE PTR [rax],al
   140011068:	rex.RX add BYTE PTR [rcx],r10b
   14001106b:	add    BYTE PTR [rcx],al
   14001106d:	add    BYTE PTR [rax+0x0],dl
   140011070:	jb     0x140011072
   140011072:	outs   dx,DWORD PTR ds:[rsi]
   140011073:	add    BYTE PTR [rax+rax*1+0x75],ah
   140011077:	add    BYTE PTR [rbx+0x0],ah
   14001107a:	je     0x14001107c
   14001107c:	push   rsi
   14001107d:	add    BYTE PTR [rbp+0x0],ah
   140011080:	jb     0x140011082
   140011082:	jae    0x140011084
   140011084:	imul   eax,DWORD PTR [rax],0x6e006f
   14001108a:	add    BYTE PTR [rax],al
   14001108c:	xor    DWORD PTR [rax],eax
   14001108e:	xor    BYTE PTR [rax],al
   140011090:	add    BYTE PTR cs:[rax],dh
   140011093:	add    BYTE PTR [rsi],ch
   140011095:	add    BYTE PTR [rcx],dh
   140011097:	add    BYTE PTR [rax],dh
   140011099:	add    BYTE PTR [rdx],dh
   14001109b:	add    BYTE PTR [rax+rax*1],dh
   14001109e:	xor    BYTE PTR [rax],al
   1400110a0:	add    BYTE PTR cs:[rcx],dh
   1400110a3:	add    BYTE PTR [rsi],dh
   1400110a5:	add    BYTE PTR [rbx],dh
   1400110a7:	add    BYTE PTR [rax],bh
   1400110a9:	add    BYTE PTR [rax+rax*1],dh
   1400110ac:	add    BYTE PTR [rax],al
   1400110ae:	add    BYTE PTR [rax],al
   1400110b0:	add    BYTE PTR [rax],r8b
   1400110b3:	add    BYTE PTR [rcx],al
   1400110b5:	add    BYTE PTR [rsi+0x0],dl
   1400110b8:	(bad)  
   1400110b9:	add    BYTE PTR [rdx+0x0],dh
   1400110bc:	rex.RX add BYTE PTR [rcx+0x0],r13b
   1400110c0:	ins    BYTE PTR es:[rdi],dx
   1400110c1:	add    BYTE PTR [rbp+0x0],ah
   1400110c4:	rex.WB add BYTE PTR [r14+0x0],bpl
   1400110c8:	data16 add BYTE PTR [rdi+0x0],ch
   1400110cc:	add    BYTE PTR [rax],al
   1400110ce:	add    BYTE PTR [rax],al
   1400110d0:	and    al,0x0
   1400110d2:	add    al,0x0
   1400110d4:	add    BYTE PTR [rax],al
   1400110d6:	push   rsp
   1400110d7:	add    BYTE PTR [rdx+0x0],dh
   1400110da:	(bad)  
   1400110db:	add    BYTE PTR [rsi+0x0],ch
   1400110de:	jae    0x1400110e0
   1400110e0:	ins    BYTE PTR es:[rdi],dx
   1400110e1:	add    BYTE PTR [rcx+0x0],ah
   1400110e4:	je     0x1400110e6
   1400110e6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400110ec:	add    BYTE PTR [rax],al
   1400110ee:	add    BYTE PTR [rax],al
   1400110f0:	or     DWORD PTR [rax+rsi*4],eax
   1400110f3:	add    al,0x0
   1400110f5:	add    BYTE PTR [rax],al
   1400110f7:	add    ch,cl
   1400110f9:	dec    ch
   1400110fb:	(bad)  
   1400110fc:	rol    BYTE PTR [rax],1
   1400110fe:	add    BYTE PTR [rax],al
   140011100:	add    BYTE PTR [rax],al
   140011102:	add    DWORD PTR [rax],eax
   140011104:	add    BYTE PTR [rax],al
   140011106:	add    BYTE PTR [rax],al
   140011108:	adc    DWORD PTR [rax],eax
   14001110a:	add    BYTE PTR [rax],al
   14001110c:	add    BYTE PTR [rax],al
   14001110e:	add    BYTE PTR [rax],al
   140011110:	add    al,BYTE PTR [rax]
   140011112:	add    BYTE PTR [rax],al
   140011114:	add    al,0x82
   140011116:	(bad)  
   140011117:	hlt    
   140011118:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011119:	out    dx,eax
   14001111a:	rex.XB adc DWORD PTR [r8],ebp
   14001111d:	cmc    
   14001111e:	add    DWORD PTR [rdx+0x70],esi
   140011121:	nop
   140011122:	icebp  
   140011123:	pop    rdx
   140011124:	xchg   edi,eax
   140011125:	cdq    
   140011126:	cmp    bh,BYTE PTR [rsi+0x3f063753]
   14001112c:	jbe    0x14001110a
   14001112e:	(bad)  
   14001112f:	mov    cl,cl
   140011131:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140011132:	mov    al,0x43
	...
   14001114c:	mov    BYTE PTR [rax],al
   14001114e:	add    BYTE PTR [rax],al
   140011150:	(bad)  
   140011151:	add    BYTE PTR [rax],al
   140011153:	add    BYTE PTR [rax+0x10000000],bl
   140011159:	add    BYTE PTR [rax],al
   14001115b:	add    BYTE PTR [rax+0xe000000],ch
   140011161:	add    BYTE PTR [rax],al
   140011163:	add    BYTE PTR [rax+0x8000000],bh
	...
   140011171:	add    BYTE PTR [rax],al
   140011173:	add    al,al
   140011175:	add    BYTE PTR [rax],al
   140011177:	add    BYTE PTR [rax+rax*1],cl
   14001117a:	add    BYTE PTR [rax],al
   14001117c:	add    BYTE PTR [rax],al
   14001117e:	add    BYTE PTR [rax],al
   140011180:	rex.WRB add BYTE PTR [r13+0x0],r10b
   140011184:	rex.WB add BYTE PTR [r8],al
	...
   14001118f:	add    BYTE PTR [rbx],al
   140011191:	add    BYTE PTR [rax],al
   140011193:	add    BYTE PTR [rsi],cl
   140011195:	add    BYTE PTR [rax],al
   140011197:	add    BYTE PTR [rax],dl
   140011199:	add    BYTE PTR [rax],al
   14001119b:	add    BYTE PTR [rax],bl
   14001119d:	add    BYTE PTR [rax],al
   14001119f:	add    BYTE PTR [rbp+0x0],cl
   1400111a2:	push   rbp
   1400111a3:	add    BYTE PTR [rcx+0x0],cl
	...
   1400111ae:	add    BYTE PTR [rax],al
   1400111b0:	(bad)  
   1400111b1:	add    BYTE PTR [rax],al
   1400111b3:	add    BYTE PTR [rax],dl
   1400111b5:	add    BYTE PTR [rax],al
   1400111b7:	add    BYTE PTR [rbp+0x0],ah
   1400111ba:	outs   dx,BYTE PTR ds:[rsi]
   1400111bb:	add    BYTE PTR [rip+0x53005500],ch        # 0x1930166c1
   1400111c1:	add    BYTE PTR [rax],al
   1400111c3:	add    BYTE PTR [rax],al
   1400111c5:	add    BYTE PTR [rax],al
	...

Disassembly of section .reloc:

0000000140012000 <.reloc>:
   140012000:	add    BYTE PTR [rax],ah
   140012002:	add    BYTE PTR [rax],al
   140012004:	and    BYTE PTR [rax],al
   140012006:	add    BYTE PTR [rax],al
   140012008:	jo     0x140011fab
   14001200a:	js     0x140011fad
   14001200c:	mov    BYTE PTR [rcx-0x5e575e60],ah
   140012012:	loopne 0x140011fb5
   140012014:	call   0x100a3c8ba
   140012019:	.byte 0xa2
   14001201a:	enter  0xd0a2,0xa2
	...
